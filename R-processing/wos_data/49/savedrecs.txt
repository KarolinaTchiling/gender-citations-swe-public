FN Clarivate Analytics Web of Science
VR 1.0
PT J
AU Wagner, S
   Fernández, DM
   Felderer, M
   Vetrò, A
   Kalinowski, M
   Wieringa, R
   Pfahl, D
   Conte, T
   Christiansson, MT
   Greer, D
   Lassenius, C
   Männistö, T
   Nayebi, M
   Oivo, M
   Penzenstadler, B
   Prikladnicki, R
   Ruhe, G
   Schekelmann, A
   Sen, S
   Spínola, R
   Tuzcu, A
   De la Vara, JL
   Winkler, D
AF Wagner, Stefan
   Fernandez, Daniel Mendez
   Felderer, Michael
   Vetro, Antonio
   Kalinowski, Marcos
   Wieringa, Roel
   Pfahl, Dietmar
   Conte, Tayana
   Christiansson, Marie-Therese
   Greer, Desmond
   Lassenius, Casper
   Mannisto, Tomi
   Nayebi, Maleknaz
   Oivo, Markku
   Penzenstadler, Birgit
   Prikladnicki, Rafael
   Ruhe, Guenther
   Schekelmann, Andre
   Sen, Sagar
   Spinola, Rodrigo
   Tuzcu, Ahmed
   De la Vara, Jose Luis
   Winkler, Dietmar
TI Status Quo in Requirements Engineering: A Theory and a Global Family of
   Surveys
SO ACM TRANSACTIONS ON SOFTWARE ENGINEERING AND METHODOLOGY
LA English
DT Article
DE Requirements engineering; theory; survey research; replication
ID GENERAL-THEORY; SOFTWARE; ORGANIZATIONS; PAIN
AB Requirements Engineering (RE) has established itself as a software engineering discipline over the past decades. While researchers have been investigating the RE discipline with a plethora of empirical studies, attempts to systematically derive an empirical theory in context of the RE discipline have just recently been started. However, such a theory is needed if we are to define and motivate guidance in performing high quality RE research and practice.
   We aim at providing an empirical and externally valid foundation for a theory of RE practice, which helps software engineers establish effective and efficient RE processes in a problem-driven manner.
   We designed a survey instrument and an engineer-focused theory that was first piloted in Germany and, after making substantial modifications, has now been replicated in 10 countries worldwide. We have a theory in the form of a set of propositions inferred from our experiences and available studies, as well as the results from our pilot study in Germany. We evaluate the propositions with bootstrapped confidence intervals and derive potential explanations for the propositions.
   In this article, we report on the design of the family of surveys, its underlying theory, and the full results obtained from the replication studies conducted in 10 countries with participants from 228 organisations. Our results represent a substantial step forward towards developing an empirical theory of RE practice. The results reveal, for example, that there are no strong differences between organisations in different countries and regions, that interviews, facilitated meetings and prototyping are the most used elicitation techniques, that requirements are often documented textually, that traces between requirements and code or design documents are common, that requirements specifications themselves are rarely changed and that requirements engineering (process) improvement endeavours are mostly internally driven.
   Our study establishes a theory that can be used as starting point for many further studies for more detailed investigations. Practitioners can use the results as theory-supported guidance on selecting suitable RE methods and techniques.
C1 [Wagner, Stefan] Univ Stuttgart, Stuttgart, Germany.
   [Fernandez, Daniel Mendez] Tech Univ Munich, Garching, Germany.
   [Felderer, Michael] Univ Innsbruck, Innsbruck, Austria.
   [Felderer, Michael] Blekinge Inst Technol, Karlskrona, Sweden.
   [Vetro, Antonio] Politecn Torino, DAUIN, Nexa Ctr Internet & Soc, Turin, Italy.
   [Kalinowski, Marcos] Pontifical Catholic Univ Rio de Janeiro, Rio De Janeiro, Brazil.
   [Wieringa, Roel] Univ Twente, Enschede, Netherlands.
   [Pfahl, Dietmar] Univ Tartu, Tartu, Estonia.
   [Conte, Tayana] Univ Fed Amazonas, Manaus, Amazonas, Brazil.
   [Christiansson, Marie-Therese] Karlstad Univ, Karlstad, Sweden.
   [Greer, Desmond] Queens Univ Belfast, Belfast, Antrim, North Ireland.
   [Lassenius, Casper] Aalto Univ, Espoo, Finland.
   [Lassenius, Casper] SimulaMet, Oslo, Norway.
   [Mannisto, Tomi] Univ Helsinki, Helsinki, Finland.
   [Nayebi, Maleknaz; Ruhe, Guenther] Univ Calgary, Calgary, AB, Canada.
   [Oivo, Markku] Univ Oulu, Oulu, Finland.
   [Penzenstadler, Birgit] Calif State Univ Long Beach, Long Beach, CA 90840 USA.
   [Prikladnicki, Rafael] Pontificia Univ Catolica Rio Grande do Sul, Porto Alegre, RS, Brazil.
   [Schekelmann, Andre] Hsch Niederrhein, Krefeld, Germany.
   [Sen, Sagar] Simula, Fornebu, Norway.
   [Spinola, Rodrigo] Salvador Univ UNIFACS, Salvador, BA, Brazil.
   [Tuzcu, Ahmed] Zeb Rolfes Schierenbeck Associates GmbH, Munich, Germany.
   [De la Vara, Jose Luis] Carlos III Univ Madrid, Madrid, Spain.
   [Winkler, Dietmar] Tech Univ Wien, CDL SQI, Vienna, Austria.
C3 University of Stuttgart; Technical University of Munich; University of
   Innsbruck; Blekinge Institute Technology; Polytechnic University of
   Turin; Pontificia Universidade Catolica do Rio de Janeiro; University of
   Twente; University of Tartu; Universidade Federal de Amazonas; Karlstad
   University; Queens University Belfast; Aalto University; University of
   Helsinki; University of Calgary; University of Oulu; California State
   University System; California State University Long Beach; Pontificia
   Universidade Catolica Do Rio Grande Do Sul; Universidade Salvador
   (UNIFACS); Technische Universitat Wien
RP Wagner, S (corresponding author), Univ Stuttgart, Stuttgart, Germany.
EM stefan.wagner@iste.uni-stuttgart.de; daniel.mendez@tum.de;
   michael.felderer@uibk.ac.at; antonio.vetro@polito.it;
   kalinowski@inf.puc-rio.br; r.j.wieringa@utwente.nl; dietmar.pfahl@ut.ee;
   tayanaconte@gmail.com; marie-therese.christiansson@kau.se;
   des.greer@qub.ac.uk; casper.lassenius@aa.fi; tomi.mannisto@helsinki.fi;
   mnayebi@ucalgary.ca; markku.oivo@oulu.fi;
   birgit.penzenstadler@csulb.edu; rafael.prikladnicki@gmail.com;
   ruhe@ucalgary.ca; andre.schekelmann@hs-niederrhein.de; sagar@simula.no;
   rodrigoospinola@gmail.com; atuzcu@zeb.de; jvara@inf.uc3m.es;
   dietmar.winkler@tuwien.ac.at
RI Vetrò, Antonio/M-9042-2019; Mendez, Daniel/ABA-4579-2021; Felderer,
   Michael/AAF-4909-2020; Pfahl, Dietmar Alfred Paul Kurt/H-3084-2015;
   Conte, Tayana/AAK-2433-2020; Penzenstadler, Birgit S/B-1582-2015;
   Männistö, Tomi/ABC-7781-2021; Sen, Sagar/H-3126-2017; Lassenius, Casper
   C/A-4339-2013; Wagner, Stefan/A-5200-2018; de la Vara, Jose
   Luis/A-7678-2018
OI Vetrò, Antonio/0000-0003-2027-3308; Mendez, Daniel/0000-0003-0619-6027;
   Pfahl, Dietmar Alfred Paul Kurt/0000-0003-2400-501X; Conte,
   Tayana/0000-0001-6436-3773; Penzenstadler, Birgit S/0000-0002-5771-0455;
   Männistö, Tomi/0000-0001-7470-5183; Wagner, Stefan/0000-0002-5256-8429;
   de la Vara, Jose Luis/0000-0003-1813-398X; Kalinowski,
   Marcos/0000-0003-1445-3425; Greer, Des/0000-0001-6367-9274
FU International Requirements Engineering Board
FX The authors thank all practitioners who took the time to respond to our
   survey as well as all colleagues who have supported the NaPiRE
   initiative along the way, including the International Requirements
   Engineering Board for their financial support during the analysis of the
   recent (third) run.
CR Ader H.M., 2008, ADVISING RES METHODS
   Ali N, 2016, INFORM SOFTWARE TECH, V70, P49, DOI 10.1016/j.infsof.2015.09.005
   [Anonymous], 2004, The rational unified process: an introduction
   [Anonymous], Empirical Software Engineering, V22, P2298, DOI [DOI 10.1007/S10664-016-9451-7, 10.1007/s10664-016-9451-7]
   [Anonymous], 1997, Requirements engineering: a good practice guide
   [Anonymous], 2017, INTRO NEW STAT ESTIM, DOI DOI 10.4324/9781315708607
   Barmi Z. A., 2011, 2011 IEEE Fourth International Conference on Software Testing, Verification and Validation Workshops (ICSTW), P476, DOI 10.1109/ICSTW.2011.58
   Beecham S, 2003, EMPIR SOFTW ENG, V8, P7, DOI 10.1023/A:1021764731148
   Bjarnason Elizabeth, 2013, Requirements Engineering: Foundation for Software Quality. 19th International Working Conference, REFSQ 2013. Proceedings, P292, DOI 10.1007/978-3-642-37422-7_21
   Bjarnason E, 2016, INFORM SOFTWARE TECH, V70, P204, DOI 10.1016/j.infsof.2015.05.004
   Bjarnason E, 2014, EMPIR SOFTW ENG, V19, P1809, DOI 10.1007/s10664-013-9263-y
   Bourque Pierre, 2014, SWEBOK: Guide to the Software Engineering Body of Knowledge, V3rd
   Brambilla Marco, 2017, MODEL DRIVEN ENG PRA
   Brand A, 2015, LEARN PUBL, V28, P151, DOI 10.1087/20150211
   Broy M, 2006, LECT NOTES COMPUT SC, V4263, P24
   Cohn Mike., 2004, User Stories Applied: For Agile Software Development
   Condori-Fernandez N, 2009, INT SYMP EMP SOFTWAR, P503
   Condori-Fernandez Nelly, 2012, TRCTIT1210 U TWENT
   Cox K, 2009, IET SOFTW, V3, P339, DOI 10.1049/iet-sen.2008.0076
   Daniel W., 1990, DUXBURY ADV SERIES S
   Dieste O, 2011, IEEE T SOFTWARE ENG, V37, P283, DOI 10.1109/TSE.2010.33
   Endres A., 2003, A Handbook of Software and Systems Engineering: Empirical Observations, Laws, and Theories
   Fernandez DM, 2015, IEEE SOFTWARE, V32, P16, DOI 10.1109/MS.2015.122
   Fernández DM, 2015, INFORM SOFTWARE TECH, V57, P616, DOI 10.1016/j.infsof.2014.05.008
   Fernández DM, 2012, INFORM SOFTWARE TECH, V54, P162, DOI 10.1016/j.infsof.2011.09.001
   Fernandez Daniel Mendez, 2013, TUMI1326
   Hannay JE, 2007, IEEE T SOFTWARE ENG, V33, P87, DOI 10.1109/TSE.2007.12
   Huff L, 2003, ORGAN SCI, V14, P81, DOI 10.1287/orsc.14.1.81.12807
   IEEE, 1998, 8301998 IEEE
   Inayat I, 2015, COMPUT HUM BEHAV, V51, P915, DOI 10.1016/j.chb.2014.10.046
   Jacobson Ivar, 2009, DR DOBB J, V10
   Jacobson Ivar, 2009, DR DOBB J
   Johnson P, 2016, INFORM SOFTWARE TECH, V70, P181, DOI 10.1016/j.infsof.2015.06.001
   Kalinowski M., 2015, INT C SOFTW ENG KNOW, P1
   Kalinowski M, 2016, LECT NOTES BUS INF P, V238, P63, DOI 10.1007/978-3-319-27033-3_5
   Kassab M, 2014, INNOV SYST SOFTW ENG, V10, P235, DOI 10.1007/s11334-014-0232-4
   Kauppinen M, 2004, INFORM SOFTWARE TECH, V46, P937, DOI 10.1016/j.infsof.2004.04.002
   Knauss A, 2016, INFORM SOFTWARE TECH, V70, P85, DOI 10.1016/j.infsof.2015.10.001
   Loniewski G, 2010, LECT NOTES COMPUT SC, V6395, P213, DOI 10.1007/978-3-642-16129-2_16
   Lunneborg CE, 2001, DRUG INF J, V35, P1327, DOI 10.1177/009286150103500429
   Mannio M., 2001, TECHNICAL REPORT
   Mavin Alistair, 2017, P IEEE 25 INT REQ EN
   Mendez D., 2013, P 17 INT C EV ASS SO, P183
   Mosteller F., 1990, STAT SCI, V5, P2, DOI DOI 10.1214/SS/1177012251
   Napier NP, 2009, IEEE T SOFTWARE ENG, V35, P593, DOI 10.1109/TSE.2009.33
   Neill CJ, 2003, IEEE SOFTWARE, V20, P40, DOI 10.1109/MS.2003.1241365
   Nikula U., 2000, Research Report 951-764-431-0.
   Nuseibeh B., 2000, P C FUTURE SOFTWARE, P35, DOI [10.1145/336512.336523, DOI 10.1145/336512.336523]
   Palomares C, 2017, EMPIR SOFTW ENG, V22, pCP3, DOI 10.1007/s10664-016-9485-x
   Pekar V, 2014, 2014 9TH INTERNATIONAL CONFERENCE ON THE QUALITY OF INFORMATION AND COMMUNICATIONS TECHNOLOGY (QUATIC), P242, DOI 10.1109/QUATIC.2014.40
   Pettersson F, 2008, J SYST SOFTWARE, V81, P972, DOI 10.1016/j.jss.2007.08.032
   Ramesh B, 2001, IEEE T SOFTWARE ENG, V27, P58, DOI 10.1109/32.895989
   Sjoberg D. I. K., 2008, Guide to Advanced Empirical Software Engineering, P312
   Sommerville I, 1998, THIRD INTERNATIONAL CONFERENCE ON REQUIREMENTS ENGINEERING - PROCEEDINGS, P74, DOI 10.1109/ICRE.1998.667811
   Staples M, 2007, J SYST SOFTWARE, V80, P883, DOI 10.1016/j.jss.2006.09.008
   Wagner Stefan, 2018, CLEI ELECT J, V21, P1
   Wieringa Roel J., 2014, Design science methodology for information systems and software engineering
   Wohlin C, 2015, J SYST SOFTWARE, V109, P229, DOI 10.1016/j.jss.2015.08.009
   Wohlrab Rebekka, 2018, P INT WORK C REQ ENG
   2015, SCI COMPUT PROGRAM, V101, P79, DOI DOI 10.1016/J.SCICO.2014.11.010
   2015, REQUIR ENG, V20, P405, DOI DOI 10.1007/S00766-014-0206-Y
   2007, INT REQUIR ENG CONF, P69, DOI DOI 10.1109/RE.2007.31
NR 62
TC 55
Z9 57
U1 1
U2 22
PU ASSOC COMPUTING MACHINERY
PI NEW YORK
PA 1601 Broadway, 10th Floor, NEW YORK, NY USA
SN 1049-331X
EI 1557-7392
J9 ACM T SOFTW ENG METH
JI ACM Trans. Softw. Eng. Methodol.
PD APR
PY 2019
VL 28
IS 2
AR 9
DI 10.1145/3306607
PG 48
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HY3MO
UT WOS:000468030900005
OA Green Published, Green Accepted, Green Submitted
DA 2024-07-18
ER

PT J
AU De Lucia, A
   Deufemia, V
   Gravino, C
   Risi, A
AF De Lucia, Andrea
   Deufemia, Vincenzo
   Gravino, Carmine
   Risi, Andmichele
TI Detecting the Behavior of Design Patterns through Model Checking and
   Dynamic Analysis
SO ACM TRANSACTIONS ON SOFTWARE ENGINEERING AND METHODOLOGY
LA English
DT Article
DE Design pattern recovery; software maintenance; reverse engineering
ID SOURCE CODE; IDENTIFICATION; PROGRAMS; MAINTENANCE; RECOVERY; TOOL
AB We present a method and tool (ePAD) for the detection of design pattern instances in source code. The approach combines static analysis, based on visual language parsing and model checking, and dynamic analysis, based on source code instrumentation. Visual language parsing and static source code analysis identify candidate instances satisfying the structural properties of design patterns. Successively, model checking statically verifies the behavioral aspects of the candidates recovered in the previous phase. We encode the sequence of messages characterizing the correct behaviour of a pattern as Linear Temporal Logic (LTL) formulae and the sequence diagram representing the possible interaction traces among the objects involved in the candidates as Promela specifications. The model checker SPIN verifies that candidates satisfy the LTL formulae. Dynamic analysis is then performed on the obtained candidates by instrumenting the source code and monitoring those instances at runtime through the execution of test cases automatically generated using a search-based approach. The effectiveness of ePAD has been evaluated by detecting instances of 12 creational and behavioral patterns from six publicly available systems. The results reveal that ePAD outperforms other approaches by recovering more actual instances. Furthermore, on average ePAD achieves better results in terms of correctness and completeness.
C1 [De Lucia, Andrea; Deufemia, Vincenzo; Gravino, Carmine; Risi, Andmichele] Univ Salerno, Dept Comp Sci, I-84084 Fisciano, SA, Italy.
C3 University of Salerno
RP De Lucia, A (corresponding author), Univ Salerno, Dept Comp Sci, I-84084 Fisciano, SA, Italy.
EM adelucia@unisa.it; deufemia@unisa.it; gravino@unisa.it; mrisi@unisa.it
RI Deufemia, Vincenzo/M-3553-2016; De Lucia, Andrea/AAG-6781-2020
OI Deufemia, Vincenzo/0000-0002-6711-3590; De Lucia,
   Andrea/0000-0002-4238-1425; Gravino, Carmine/0000-0002-4394-9035
CR Alnusair A, 2014, INT J SOFTW TOOLS TE, V16, P315, DOI 10.1007/s10009-013-0292-z
   [Anonymous], SOFTWARE TESTING VER
   [Anonymous], 2015, INT C LOGISTICS INFO, DOI DOI 10.1109/LISS.2015.7369655
   [Anonymous], 2006, PRACTICAL NONPARAMET
   [Anonymous], 2003, The Spin Model Checker: Primer and Reference Manual
   Arcuri Andrea, 2010, Proceedings of the Third IEEE International Conference on Software Testing, Verification and Validation (ICST 2010), P205, DOI 10.1109/ICST.2010.17
   Balanyi Z, 2003, PROC IEEE INT CONF S, P305, DOI 10.1109/ICSM.2003.1235436
   Basili V. R., 1994, Encyclopedia of Software Engineering, V1, P528
   Beck Kent, 2011, JUNIT COOKBOOK
   Bennett K. H., 2000, P C FUT SOFTW ENG, P73
   Bernardi ML, 2014, J SOFTW-EVOL PROC, V26, P1233, DOI 10.1002/smr.1674
   Bernardi Mario Luca, 2014, DESIGN PATTERN FINDE
   Beyer D, 2003, PROG COMPREHEN, P294
   Binun A, 2012, EUR CON SFTWR MTNCE, P245, DOI 10.1109/CSMR.2012.82
   Bultan Tevfik, 2008, SCALABLE SOFTWARE MO, P337
   Chikofsky E., 1990, IEEE SOFTWARE, V7, p[1, 13]
   COBB HG, 1993, PROCEEDINGS OF THE FIFTH INTERNATIONAL CONFERENCE ON GENETIC ALGORITHMS, P523
   Costagliola G, 2006, IEEE T SOFTWARE ENG, V32, P156, DOI 10.1109/TSE.2006.23
   Costagliola G, 2004, ACM T SOFTW ENG METH, V13, P431, DOI 10.1145/1040291.1040293
   Costagliola G, 2007, J VISUAL LANG COMPUT, V18, P165, DOI 10.1016/j.jvlc.2006.06.002
   Crahen E., 2002, ANN ACM SIGPLAN C OB, P62
   De Lucia A, 2015, PROC IEEE INT CONF S, P161, DOI 10.1109/ICSM.2015.7332462
   De Lucia A, 2015, PROC IEEE INT CONF S, P327, DOI 10.1109/ICSM.2015.7332480
   De Lucia A, 2010, EUR CON SFTWR MTNCE, P176, DOI 10.1109/CSMR.2010.16
   De Lucia A, 2009, J SYST SOFTWARE, V82, P1177, DOI 10.1016/j.jss.2009.02.012
   De Lucia A, 2009, EUR CON SFTWR MTNCE, P99, DOI 10.1109/CSMR.2009.29
   De Lucia Andrea., 2010, Proceedings of the IEEE International Conference on Software Maintenance, ICSM, P1, DOI DOI 10.1109/ICSM.2010.5609707
   De Lucia Andrea, 2017, WEB APPENDIX
   Di Martino B, 2016, SOFTWARE PRACT EXPER, V46, P983, DOI 10.1002/spe.2336
   Dong J, 2007, ECBS 2007: 14TH ANNUAL IEEE INTERNATIONAL CONFERENCE AND WORKSHOPS ON THE ENGINEERING OF COMPUTER-BASED SYSTEMS, PROCEEDINGS, P371
   Dong Jing, 2007, P INT WORKSH PRED MO
   Eclipse Foundation, 2008, TPTP TEST PERF TOOLS
   Eclipse Foundation, 2009, ECL JDT
   Field A., 2003, How to Design and Report Experiments
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   Fraser Gordon, 2011, PROC 19 ACM SIGSOFT, P416, DOI 10.1145/2025113.2025179
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   Gamma Erich, 1998, JHOTDRAW
   Gethers M., 2011, 2011 IEEE 27th International Conference on Software Maintenance, P133, DOI 10.1109/ICSM.2011.6080780
   Goldberg David E, 1989, GENETIC ALGORITHMS S
   Gravino Carmine, 2012, Model Driven Engineering Languages and Systems. Proceedings 15th International Conference, MODELS 2012, P185, DOI 10.1007/978-3-642-33666-9_13
   Gravino Carmine, 2011, 2011 18th Working Conference on Reverse Engineering, P67, DOI 10.1109/WCRE.2011.18
   Guéhéneuc YG, 2008, IEEE T SOFTWARE ENG, V34, P667, DOI 10.1109/TSE.2008.48
   Gueheneuc Yann-Gael, 2000, P MART
   Guéhéneuc YG, 2002, ASE 2002: 17TH IEEE INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, P117, DOI 10.1109/ASE.2002.1115000
   Harman M, 2001, INFORM SOFTWARE TECH, V43, P833, DOI 10.1016/S0950-5849(01)00189-6
   Heuzeroth D, 2003, PROG COMPREHEN, P94
   Huang HY, 2005, J SYST SOFTWARE, V75, P69, DOI 10.1016/j.jss.2003.11.018
   Jeanmart S, 2009, INT SYMP EMP SOFTWAR, P69, DOI 10.1109/ESEM.2009.5316015
   JOHNSON RE, 1992, SIGPLAN NOTICES, V27, P63
   Kaczor O, 2006, 10TH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P173
   Kampenes VB, 2007, INFORM SOFTWARE TECH, V49, P1073, DOI 10.1016/j.infsof.2007.02.015
   Keller R. K., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P226, DOI 10.1109/ICSE.1999.841012
   KITCHENHAM B, 1995, IEEE SOFTWARE, V12, P52, DOI 10.1109/52.391832
   Koschke Rainer, 2008, LECT NOTES COMPUTER
   Koza J.R., 1992, GENETIC PROGRAMMING, VVolume 1
   Kramer C, 1996, PROCEEDINGS OF THE THIRD WORKING CONFERENCE ON REVERSE ENGINEERING, P208, DOI 10.1109/WCRE.1996.558905
   Krein J. L., 2011, Proceedings of the 2011 Second International Workshop on Replication in Empirical Software Engineering Research (RESER 2011), P25, DOI 10.1109/RESER.2011.10
   Lakhotia K, 2013, INFORM SOFTWARE TECH, V55, P112, DOI 10.1016/j.infsof.2012.03.009
   Leue Stefan., 1997, PROC OF DIMACS WORKS, P65
   Mayvan BB, 2017, KNOWL-BASED SYST, V120, P211, DOI 10.1016/j.knosys.2017.01.007
   Moha Naouel, 2007, 22 ACM SIGPLAN C OBJ, P868
   Ng JKY, 2010, J SOFTW MAINT EVOL-R, V22, P597, DOI 10.1002/smr.421
   Pacheco C., 2007, OOPSLA 2007 COMPANIO, P815
   Park C, 2004, 11TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P300
   Patrick M, 2016, STUD COMPUT INTELL, V617, P89, DOI 10.1007/978-3-319-25964-2_5
   Pettersson Niklas., 2005, WODA 05 P 3 INT WORK, P1
   Phelan Marty, 2000, MAPPERXML
   Philippow I., 2005, Software System Model, V4, P55
   Pigoski TM., 1996, Practical Software Maintenance: Best Practices for Managing Your Software Investment
   Prechelt L, 2002, IEEE T SOFTWARE ENG, V28, P595, DOI 10.1109/TSE.2002.1010061
   Rasool G., 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P243, DOI 10.1109/ASE.2011.6100060
   Seguin Chris, 2002, JREFACTORY
   Shi N, 2006, IEEE INT CONF AUTOM, P123
   Tonella Paolo., 2005, REVERSE ENG OBJECT O
   Tsantalis N, 2006, IEEE T SOFTWARE ENG, V32, P896, DOI 10.1109/TSE.2006.112
   Tsantalis Nikolaos, 2006, DESIGN PATTERN DETEC
   Tu Peng, 2008, SEKE 2008. The 20th International Conference Proceedings on Software Engineering & Knowledge Engineering, P454
   Vokác M, 2004, EMPIR SOFTW ENG, V9, P149, DOI 10.1023/B:EMSE.0000027778.69251.1f
   WENDEHALS L, 2003, P ICSE WORKSH DYN AN, P29
   Wendehals L., 2006, INT WORKSHOP DYNAMIC, P33
   Wojszczyk R., 2015, J THEORET APPL COMPU, V9, P35
   Xu Kai, 2006, 06024 U MINN DEP COM
   Yin R.K., 1984, CASE STUDY RES
   Yu DJ, 2015, J SYST SOFTWARE, V103, P1, DOI 10.1016/j.jss.2015.01.019
   Zanoni M, 2015, J SYST SOFTWARE, V103, P102, DOI 10.1016/j.jss.2015.01.037
NR 86
TC 16
Z9 19
U1 0
U2 9
PU ASSOC COMPUTING MACHINERY
PI NEW YORK
PA 2 PENN PLAZA, STE 701, NEW YORK, NY 10121-0701 USA
SN 1049-331X
EI 1557-7392
J9 ACM T SOFTW ENG METH
JI ACM Trans. Softw. Eng. Methodol.
PD FEB
PY 2018
VL 26
IS 4
AR 13
DI 10.1145/3176643
PG 41
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GI7JP
UT WOS:000434679100002
DA 2024-07-18
ER

PT J
AU Attie, PC
   Bensalem, S
   Bozga, M
   Jaber, M
   Sifakis, J
   Zaraket, FA
AF Attie, Paul C.
   Bensalem, Saddek
   Bozga, Marius
   Jaber, Mohamad
   Sifakis, Joseph
   Zaraket, Fadi A.
TI Global and Local Deadlock Freedom in BIP
SO ACM TRANSACTIONS ON SOFTWARE ENGINEERING AND METHODOLOGY
LA English
DT Article
DE Alternation; completeness; nondeterminism
AB We present a criterion for checking local and global deadlock freedom of finite state systems expressed in BIP: a component-based framework for constructing complex distributed systems. Our criterion is evaluated by model-checking a set of subsystems of the overall large system. If satisfied in small subsystems, it implies deadlock-freedom of the overall system. If not satisfied, then we re-evaluate over larger subsystems, which improves the accuracy of the check. When the subsystem being checked becomes the entire system, our criterion becomes complete for deadlock-freedom. Hence our criterion only fails to decide deadlock freedom because of computational limitations: state-space explosion sets in when the subsystems become too large. Our method thus combines the possibility of fast response together with theoretical completeness. Other criteria for deadlock freedom, in contrast, are incomplete in principle, and so may fail to decide deadlock freedom even if unlimited computational resources are available. Also, our criterion certifies freedom from local deadlock, in which a subsystem is deadlocked while the rest of the system executes. Other criteria only certify freedom from global deadlock. We present experimental results for dining philosophers and for a multi-token-based resource allocation system, which subsumes several data arbiters and schedulers, including Milner's token-based scheduler.
C1 [Attie, Paul C.; Jaber, Mohamad; Zaraket, Fadi A.] Amer Univ Beirut, POB 11-0236, Beirut 11072020, Lebanon.
   [Bensalem, Saddek; Bozga, Marius] UJF Grenoble 1, CNRS VERIMAG, UMR 5104, F-38041 Grenoble, France.
   [Sifakis, Joseph] Ecole Polytech Fed Lausanne, Route Cantonale, CH-1015 Lausanne, Switzerland.
C3 American University of Beirut; Communaute Universite Grenoble Alpes;
   Institut National Polytechnique de Grenoble; Universite Grenoble Alpes
   (UGA); Centre National de la Recherche Scientifique (CNRS); Swiss
   Federal Institutes of Technology Domain; Ecole Polytechnique Federale de
   Lausanne
RP Attie, PC (corresponding author), Amer Univ Beirut, POB 11-0236, Beirut 11072020, Lebanon.
EM paul.attie@aub.edu.lb; Bensalem@imag.fr; Bozga@imag.fr; mj54@aub.edu.lb;
   joseph.sifakis@imag.fr; fz11@aub.edu.lb
OI Zaraket, Fadi/0000-0001-5909-6375; Attie, Paul/0000-0003-1989-0974
FU University Research Board (URB) at the American University of Beirut
FX The research leading to these results has received funding from
   University Research Board (URB) at the American University of Beirut.
CR Abdulla PA, 2013, LECT NOTES COMPUT SC, V7737, P476
   Aldini A, 2003, LECT NOTES COMPUT SC, V2805, P658
   [Anonymous], 1969, Machine intelligence
   [Anonymous], P 10 INT C EMB SOFTW
   Antonino P, 2016, LECT NOTES COMPUT SC, V9681, P345, DOI 10.1007/978-3-319-33693-0_22
   Attie PC, 2013, LECT NOTES COMPUT SC, V7892, P161
   Attie PC, 2016, FORM METHOD SYST DES, V48, P94, DOI 10.1007/s10703-016-0252-9
   Attie PC, 2016, THEOR COMPUT SCI, V619, P1, DOI 10.1016/j.tcs.2015.11.032
   ATTIE PC, 1993, DISTRIB COMPUT, V6, P245, DOI 10.1007/BF02242712
   Attie PC, 2005, LECT NOTES COMPUT SC, V3385, P465
   Attie PC, 1998, ACM T PROGR LANG SYS, V20, P51, DOI 10.1145/271510.271519
   Baumgartner J, 2005, LECT NOTES COMPUT SC, V3725, P222
   Baumgartner J, 2004, DESIGN, AUTOMATION AND TEST IN EUROPE CONFERENCE AND EXHIBITION, VOLS 1 AND 2, PROCEEDINGS, P36, DOI 10.1109/DATE.2004.1268824
   Baumgartner J., 2002, Computer Aided Verification. 14th International Conference, CAV 2002. Proceedings (Lecture Notes in Computer Science Vol.2404), P151
   Bensalem S, 2011, LECT NOTES COMPUT SC, V6617, P453, DOI 10.1007/978-3-642-20398-5_32
   Bliudze S, 2008, IEEE T COMPUT, V57, P1315, DOI 10.1109/TC.2008.26
   Bozga Marius, 2012, Software Composition. Proceedings 11th International Conference, SC 2012, P1, DOI 10.1007/978-3-642-30564-1_1
   BROOKES SD, 1991, DISTRIB COMPUT, V4, P209, DOI 10.1007/BF01784721
   Clarke EM, 2010, LECT NOTES COMPUT SC, V6200, P61, DOI 10.1007/978-3-642-13754-9_4
   Cohen A, 2009, FORM METHOD SYST DES, V34, P104, DOI 10.1007/s10703-008-0063-8
   Davey B. A., 2002, INTRO LATTICES ORDER, V2nd, DOI DOI 10.1017/CBO9780511809088
   Gössler G, 2003, LECT NOTES COMPUT SC, V2914, P420
   Kurshan R.P., 1994, COMPUTER AIDED VERIF
   Martens M, 2012, FORM METHOD SYST DES, V41, P129, DOI 10.1007/s10703-012-0160-6
   Martin JMR, 1996, THESIS
   Milner R., 1989, Communication and concurrency
   Papadimitriou C. H., 1994, Computational Complexity
   Pnuelil A., 2001, Tools and Algorithms for the Construction and Analysis of Systems. 7th International Conference, TACAS 2001. Held as Part of the Joint European Conferences on Theory and Practice of Software, ETAPS 2001. Proceedings (Lecture Notes in Computer Science Vol.2031), P82
   ROSCOE AW, 1987, INFORM COMPUT, V75, P289, DOI 10.1016/0890-5401(87)90004-6
   Tarjan R., 1972, SIAM Journal on Computing, V1, P146, DOI 10.1137/0201010
   van Glabbeek R, 2009, LOG METH COMPUT SCI, V5, DOI 10.2168/LMCS-5(4:5)2009
NR 31
TC 3
Z9 3
U1 0
U2 3
PU ASSOC COMPUTING MACHINERY
PI NEW YORK
PA 2 PENN PLAZA, STE 701, NEW YORK, NY 10121-0701 USA
SN 1049-331X
EI 1557-7392
J9 ACM T SOFTW ENG METH
JI ACM Trans. Softw. Eng. Methodol.
PD JAN
PY 2018
VL 26
IS 3
AR 9
DI 10.1145/3152910
PG 48
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FW9XE
UT WOS:000425690700001
OA Green Published
DA 2024-07-18
ER

PT J
AU Ouni, A
   Kessentini, M
   Sahraoui, H
   Inoue, K
   Deb, K
AF Ouni, Ali
   Kessentini, Marouane
   Sahraoui, Houari
   Inoue, Katsuro
   Deb, Kalyanmoy
TI Multi-Criteria Code Refactoring Using Search-Based Software Engineering:
   An Industrial Case Study
SO ACM TRANSACTIONS ON SOFTWARE ENGINEERING AND METHODOLOGY
LA English
DT Article
DE Search-based software engineering; refactoring; software maintenance;
   multi-objective optimization; software evolution
ID DESIGN QUALITY; BAD SMELLS; IDENTIFICATION; OPPORTUNITIES
AB One of the most widely used techniques to improve the quality of existing software systems is refactoring-the process of improving the design of existing code by changing its internal structure without altering its external behavior. While it is important to suggest refactorings that improve the quality and structure of the system, many other criteria are also important to consider, such as reducing the number of code changes, preserving the semantics of the software design and not only its behavior, and maintaining consistency with the previously applied refactorings. In this article, we propose a multi-objective search-based approach for automating the recommendation of refactorings. The process aims at finding the optimal sequence of refactorings that (i) improves the quality by minimizing the number of design defects, (ii) minimizes code changes required to fix those defects, (iii) preserves design semantics, and (iv) maximizes the consistency with the previously code changes. We evaluated the efficiency of our approach using a benchmark of six open-source systems, 11 different types of refactorings (move method, move field, pull up method, pull up field, push down method, push down field, inline class, move class, extract class, extract method, and extract interface) and six commonly occurring design defect types (blob, spaghetti code, functional decomposition, data class, shotgun surgery, and feature envy) through an empirical study conducted with experts. In addition, we performed an industrial validation of our technique, with 10 software engineers, on a large project provided by our industrial partner. We found that the proposed refactorings succeed in preserving the design coherence of the code, with an acceptable level of code change score while reusing knowledge from recorded refactorings applied in the past to similar contexts.
C1 [Ouni, Ali; Inoue, Katsuro] Osaka Univ, Suita, Osaka 565, Japan.
   [Kessentini, Marouane] Univ Michigan Dearborn, Dearborn, MI USA.
   [Sahraoui, Houari] Univ Montreal, Montreal, PQ H3C 3J7, Canada.
   [Deb, Kalyanmoy] Michigan State Univ, E Lansing, MI 48824 USA.
C3 Osaka University; University of Michigan System; University of Michigan
   Dearborn; Universite de Montreal; Michigan State University
RP Ouni, A (corresponding author), Osaka Univ, Suita, Osaka 565, Japan.
EM ali@ist.osaka-u.ac.jp; marouane@umich.edu; sahraouh@iro.umontreal.ca;
   inoue@ist.osaka-u.ac.jp; kdeb@egr.msu.edu
RI Ouni, Ali/Y-8280-2019
OI Ouni, Ali/0000-0003-4708-0362
FU Ford-University of Michigan alliance Program, Japan Society for the
   Promotion of Science; Osaka University Program for Promoting
   International Joint Research;  [25220003]
FX This work was supported by the Ford-University of Michigan alliance
   Program, Japan Society for the Promotion of Science, Grant-in-Aid for
   Scientific Research (S) (Grant No. 25220003), and by Osaka University
   Program for Promoting International Joint Research.
CR Al Dallal J, 2015, INFORM SOFTWARE TECH, V58, P231, DOI 10.1016/j.infsof.2014.08.002
   Alves ELG, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P751, DOI 10.1145/2635868.2661674
   Amaro R, 2006, LECT NOTES COMPUT SC, V3878, P28
   [Anonymous], 2014, P 29 ACM IEEE INT C
   [Anonymous], 2010, Proceedings of the International Conference on Software Maintenance (ICSM)
   Anquetil N, 2011, EUR CON SFTWR MTNCE, P279, DOI 10.1109/CSMR.2011.34
   Baar T, 2007, LECT NOTES COMPUT SC, V4378, P70
   Bansiya J, 2002, IEEE T SOFTWARE ENG, V28, P4, DOI 10.1109/32.979986
   Bavota G., 2014, Recommendation Systems in Software Engineering, P387
   Bavota G, 2014, EMPIR SOFTW ENG, V19, P1617, DOI 10.1007/s10664-013-9256-x
   Bavota G, 2014, IEEE T SOFTWARE ENG, V40, P671, DOI 10.1109/TSE.2013.60
   Bavota G, 2014, ACM T SOFTW ENG METH, V23, DOI 10.1145/2559935
   Bavota G, 2012, PROC INT CONF SOFTW, P1419, DOI 10.1109/ICSE.2012.6227233
   Bavota G, 2011, J SYST SOFTWARE, V84, P397, DOI 10.1016/j.jss.2010.11.918
   Bavota Gabriele., 2010, Proceedings of the IEEE International Conference on Software Maintenance ICSM, P1
   Brown WH., 1998, AntiPatterns: refactoring software, architectures, and projects in crisis
   Cinnéide MO, 2012, INT SYMP EMP SOFTWAR, P49, DOI 10.1145/2372251.2372260
   Cinneide Mel O., 2001, THESIS
   CLIFF N, 1993, PSYCHOL BULL, V114, P494, DOI 10.1037/0033-2909.114.3.494
   COHEN J, 1960, EDUC PSYCHOL MEAS, V20, P37, DOI 10.1177/001316446002000104
   Corazza A, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P233, DOI 10.1109/ICSM.2012.6405277
   Corazza A, 2011, EUR CON SFTWR MTNCE, P35, DOI 10.1109/CSMR.2011.8
   D'Ambros Marco, 2010, Proceedings of the Tenth International Conference on Quality Software (QSIC 2010), P23, DOI 10.1109/QSIC.2010.58
   Deb K, 2002, IEEE T EVOLUT COMPUT, V6, P182, DOI 10.1109/4235.996017
   Deligiannis I, 2003, J SYST SOFTWARE, V65, P127, DOI 10.1016/S0164-1212(02)00054-7
   Dhambri K, 2008, CSMR 2008: 12TH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, P279
   Du Bois B, 2004, 11TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P144, DOI 10.1109/WCRE.2004.33
   Erlikh L., 2000, IT Professional, V2, P17, DOI 10.1109/6294.846201
   Fatiregun Deji, 2004, 4 INT WORKSH SOURC C, P65
   Fatiregun Deji, 2005, 12 WORK C REV ENG WC
   Fenton N. E., 1998, Software metrics: a rigorous and practical approach
   Fokaefs M, 2012, J SYST SOFTWARE, V85, P2241, DOI 10.1016/j.jss.2012.04.013
   Fokaefs M, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1037, DOI 10.1145/1985793.1985989
   FONSECA CM, 1993, PROCEEDINGS OF THE FIFTH INTERNATIONAL CONFERENCE ON GENETIC ALGORITHMS, P416
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   Franklin L, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P1287, DOI 10.1109/ICSE.2013.6606699
   Ge X, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P1095, DOI 10.1145/2568225.2568280
   Hamdi MS, 2011, APPL SOFT COMPUT, V11, P1310, DOI 10.1016/j.asoc.2010.04.004
   Harman M, 2007, GECCO 2007: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOL 1 AND 2, P1106
   Harman M, 2012, ACM COMPUT SURV, V45, DOI 10.1145/2379776.2379787
   Jaccard P., 1901, B SOCIT VAUDOISE SCI, V37, P547, DOI [10.5169/seals-266440, DOI 10.5169/SEALS-266440]
   Jensen und A.C., 2010, Proceedings of the 12th Annual Conference on Genetic and Evolutionary Computation. GECCO '10, P1341
   Joshi P, 2009, EUR CON SFTWR MTNCE, P237, DOI 10.1109/CSMR.2009.54
   Kataoka Y, 2001, PROC IEEE INT CONF S, P736, DOI 10.1109/ICSM.2001.972794
   Kessentini M., 2010, Proceedings of the IEEE/ACM international conference on Automated software engineering, P113
   Kessentini M, 2011, CONF PROC INT SYMP C, P81, DOI 10.1109/ICPC.2011.22
   Kilic H, 2011, LECT NOTES COMPUT SC, V6956, P271, DOI 10.1007/978-3-642-23716-4_26
   Kim M, 2014, IEEE T SOFTWARE ENG, V40, P633, DOI 10.1109/TSE.2014.2318734
   KRISHNAN GP, 2014, SOFTW EV WEEK IEEE C, P104
   LANDIS JR, 1977, BIOMETRICS, V33, P159, DOI 10.2307/2529310
   Li W, 2007, J SYST SOFTWARE, V80, P1120, DOI 10.1016/j.jss.2006.10.018
   Likert R., ARCH PSYCHOL, P1
   Logozzo R, 2006, LECT NOTES COMPUT SC, V3855, P313
   Mäntylä M, 2003, PROC IEEE INT CONF S, P381, DOI 10.1109/ICSM.2003.1235447
   Marinescu R, 2004, PROC IEEE INT CONF S, P350, DOI 10.1109/ICSM.2004.1357820
   Mens T, 2004, IEEE T SOFTWARE ENG, V30, P126, DOI 10.1109/TSE.2004.1265817
   Mkaouer W, 2015, ACM T SOFTW ENG METH, V24, DOI 10.1145/2729974
   Moha N, 2008, LECT NOTES ARTIF INT, V4933, P289, DOI 10.1007/978-3-540-78137-0_21
   Moha N, 2010, IEEE T SOFTWARE ENG, V36, P20, DOI 10.1109/TSE.2009.50
   Murphy-Hill E., 2008, ICSE '08, P421
   Murphy-Hill E, 2012, IEEE T SOFTWARE ENG, V38, P1417, DOI 10.1109/TSE.2011.110
   Murphy-Hill E, 2012, IEEE T SOFTWARE ENG, V38, P5, DOI 10.1109/TSE.2011.41
   Murphy-Hill E, 2010, SOFTVIS 2010: PROCEEDINGS OF THE 2010 INTERNATIONAL SYMPOSIUM ON SOFTWARE VISUALIZATION, P5
   Negara S, 2013, LECT NOTES COMPUT SC, V7920, P552, DOI 10.1007/978-3-642-39038-8_23
   O'Keeffe M, 2008, J SYST SOFTWARE, V81, P502, DOI 10.1016/j.jss.2007.06.003
   Opdyke William F., 1992, THESIS
   Otero Fernando E. B., 2010, 2 INT S SEARCH BAS S
   Ouni A, 2013, GECCO'13: PROCEEDINGS OF THE 2013 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P1461
   Ouni A, 2013, EUR CON SFTWR MTNCE, P221, DOI 10.1109/CSMR.2013.31
   Ouni A, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P347, DOI 10.1109/ICSM.2012.6405292
   Ouni A, 2013, AUTOMAT SOFTW ENG, V20, P47, DOI 10.1007/s10515-011-0098-8
   Qayum F, 2009, 1ST INTERNATIONAL SYMPOSIUM ON SEARCH BASED SOFTWARE ENGINEERING, PROCEEDINGS, P43, DOI 10.1109/SSBSE.2009.27
   Roberts D., 1999, THESIS
   Rotem-Gal-Oz A., 2012, SOA patterns
   Sahraoui HA, 2000, PROC IEEE INT CONF S, P154, DOI 10.1109/ICSM.2000.883034
   Sales V, 2013, WORK CONF REVERSE EN, P232, DOI 10.1109/WCRE.2013.6671298
   Scanniello Giuseppe, 2010, Proceedings of the 18th IEEE International Conference on Program Comprehension (ICPC 2010), P180, DOI 10.1109/ICPC.2010.17
   Seng O, 2006, GECCO 2006: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOL 1 AND 2, P1909
   Shatnawi R., 2011, Internat. J. Software Eng. Applicat., P127
   Silva D, 2014, 22 INT C PROGRAM COM, P146
   Soares G, 2013, IEEE T SOFTWARE ENG, V39, P147, DOI 10.1109/TSE.2012.19
   Tahvildari L, 2003, SEVENTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P183, DOI 10.1109/CSMR.2003.1192426
   Tip F, 2000, ACM SIGPLAN NOTICES, V35, P281, DOI 10.1145/354222.353190
   Tsantalis N, 2011, J SYST SOFTWARE, V84, P1757, DOI 10.1016/j.jss.2011.05.016
   Tsantalis N, 2009, IEEE T SOFTWARE ENG, V35, P347, DOI 10.1109/TSE.2009.1
   Vallée-Rai R, 2000, LECT NOTES COMPUT SC, V1781, P18
   Yamashita A, 2013, WORK CONF REVERSE EN, P242, DOI 10.1109/WCRE.2013.6671299
   Zibran MF, 2011, IEEE INT WORK C SO, P105, DOI 10.1109/SCAM.2011.21
   Zitzler E, 1998, LECT NOTES COMPUT SC, V1498, P292, DOI 10.1007/BFb0056872
NR 89
TC 95
Z9 101
U1 0
U2 19
PU ASSOC COMPUTING MACHINERY
PI NEW YORK
PA 2 PENN PLAZA, STE 701, NEW YORK, NY 10121-0701 USA
SN 1049-331X
EI 1557-7392
J9 ACM T SOFTW ENG METH
JI ACM Trans. Softw. Eng. Methodol.
PD AUG
PY 2016
VL 25
IS 3
AR 23
DI 10.1145/2932631
PG 53
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DV2MF
UT WOS:000382754000004
DA 2024-07-18
ER

PT J
AU Dyer, R
   Nguyen, HA
   Rajan, H
   Nguyen, TN
AF Dyer, Robert
   Hoan Anh Nguyen
   Rajan, Hridesh
   Nguyen, Tien N.
TI Boa: Ultra-Large-Scale Software Repository and Source-Code Mining
SO ACM TRANSACTIONS ON SOFTWARE ENGINEERING AND METHODOLOGY
LA English
DT Article
DE Boa; mining software repositories; domain-specific language; scalable;
   ease of use; lower barrier to entry
AB In today's software-centric world, ultra-large-scale software repositories, such as SourceForge, GitHub, and Google Code, are the new library of Alexandria. They contain an enormous corpus of software and related information. Scientists and engineers alike are interested in analyzing this wealth of information. However, systematic extraction and analysis of relevant data from these repositories for testing hypotheses is hard, and best left for mining software repository (MSR) experts! Specifically, mining source code yields significant insights into software development artifacts and processes. Unfortunately, mining source code at a large scale remains a difficult task. Previous approaches had to either limit the scope of the projects studied, limit the scope of the mining task to be more coarse grained, or sacrifice studying the history of the code. In this article we address mining source code: (a) at a very large scale; (b) at a fine-grained level of detail; and (c) with full history information. To address these challenges, we present domain-specific language features for source-code mining in our language and infrastructure called Boa. The goal of Boa is to ease testing MSR-related hypotheses. Our evaluation demonstrates that Boa substantially reduces programming efforts, thus lowering the barrier to entry. We also show drastic improvements in scalability.
C1 [Dyer, Robert] Bowling Green State Univ, Bowling Green, OH 43403 USA.
   [Hoan Anh Nguyen; Rajan, Hridesh; Nguyen, Tien N.] Iowa State Univ, Ames, IA 50011 USA.
C3 University System of Ohio; Bowling Green State University; Iowa State
   University
RP Dyer, R (corresponding author), Bowling Green State Univ, Bowling Green, OH 43403 USA.
EM rdyer@bgsu.edu
RI Nguyen, Anh/GQQ-3393-2022; Dyer, Robert/ABA-1964-2020
OI Dyer, Robert/0000-0001-9571-5567; Rajan, Hridesh/0000-0002-9410-9562
FU US National Science Foundation (NSF) [CNS-15-13263, CNS-15-12947,
   CCF-14-23370, CCF-13-49153, CCF-13-20578, TWC-12-23828, CCF-11-17937,
   CCF-10-17334, CCF-10-18600]; Division Of Computer and Network Systems;
   Direct For Computer & Info Scie & Enginr [1513263] Funding Source:
   National Science Foundation
FX This work was supported in part by the US National Science Foundation
   (NSF) under grants CNS-15-13263, CNS-15-12947, CCF-14-23370,
   CCF-13-49153, CCF-13-20578, TWC-12-23828, CCF-11-17937, CCF-10-17334,
   and CCF-10-18600.
CR [Anonymous], 2005, Sci. Program
   [Anonymous], NOTICES AM MATH MAR
   [Anonymous], 2003, Haskell 98 language and libraries: the revised report
   Apache Software Foundation, 2015, HAD OP SOURC IMPL MA
   Apache Software Foundation, 2015, HBASE OP SOURC IMPL
   Bevan Jennifer., 2005, ESECFSE 13, P177
   BLOOM BH, 1970, COMMUN ACM, V13, P422, DOI 10.1145/362686.362692
   Call HC, 2009, IEEE SOFTWARE, V26, P26, DOI 10.1109/MS.2009.6
   Chambers C, 2010, PLDI '10: PROCEEDINGS OF THE 2010 ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P363, DOI 10.1145/1806596.1806638
   Chang F, 2008, ACM T COMPUT SYST, V26, DOI 10.1145/1365815.1365816
   Dean J, 2004, USENIX ASSOCIATION PROCEEDINGS OF THE SIXTH SYMPOSIUM ON OPERATING SYSTEMS DESIGN AND IMPLEMENTATION (OSDE '04), P137
   Di Falco Robert, 2011, HIERARCHICAL VISITOR
   Dourish P., 1992, CSCW '92. Sharing Perspectives. Proceedings of the Conference on Computer-Supported Cooperative Work, P107, DOI 10.1145/143457.143468
   Dyer R., 2014, Proceedings of the 36th International Conference on Software Engineering, ICSE 2014, P779
   Dyer R, 2014, ACM SIGPLAN NOTICES, V49, P23, DOI [10.1145/2637365.2517226, 10.1145/2517208.2517226]
   Dyer R, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P422, DOI 10.1109/ICSE.2013.6606588
   Dyer R, 2013, LECT NOTES COMPUT SC, V7800, P148, DOI 10.1007/978-3-642-36964-3_5
   Dyer Robert., 2012, Proceedings of the 11th Annual International Conference on Aspect-oriented Software Development, AOSD '12, P143
   Gabel M, 2010, 18 ACM SIGSOFT INT S, P147
   Gamma Erich., 1994, DESIGN PATTERNS
   Gao Y., 2007, FLGSS 07 P 1 INT WOR, P4
   González-Barahona JM, 2012, EMPIR SOFTW ENG, V17, P75, DOI 10.1007/s10664-011-9181-9
   Goodman S., 1995, Building on the Basics: An Examination of High- Performance Computing Export Control Policy in the 1990s
   Gousios Georgios, 2012, 2012 9th IEEE Working Conference on Mining Software Repositories (MSR 2012), P12, DOI 10.1109/MSR.2012.6224294
   Gousios G, 2013, IEEE WORK CONF MIN S, P233, DOI 10.1109/MSR.2013.6624034
   Gousios G, 2009, 2009 6TH IEEE INTERNATIONAL WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES, P31, DOI 10.1109/MSR.2009.5069478
   Gousios G, 2009, PROC INT CONF SOFTW, P579, DOI 10.1109/ICSE.2009.5070560
   Grechanik M., 2010, P 2010 ACM IEEE INT, DOI [10.1145/1852786.1852801, DOI 10.1145/1852786.1852801]
   Herraiz I, 2009, EUR CON SFTWR MTNCE, P281, DOI 10.1109/CSMR.2009.43
   Hindle A., 2005, Proceedings of the 2005 international workshop on Mining Software Repositories, MSR, P1
   Isard M., 2007, Operating Systems Review, V41, P59, DOI 10.1145/1272998.1273005
   Izmaylova Anastasia, 2013, M3 OPEN MODEL MEASUR
   Klint P, 2009, IEEE INT WORK C SO, P168, DOI 10.1109/SCAM.2009.28
   Laski J., 1992, Conference on Software Maintenance 1992 (Cat.No.92CH3206-0), P282, DOI 10.1109/ICSM.1992.242533
   Lerner J, 2002, J IND ECON, V50, P197, DOI 10.1111/1467-6451.00174
   Linstead E, 2009, DATA MIN KNOWL DISC, V18, P300, DOI 10.1007/s10618-008-0118-x
   Martin M, 2005, ACM SIGPLAN NOTICES, V40, P365, DOI 10.1145/1103845.1094840
   Oliveira BCDS, 2008, OOPSLA 2008 NASHVILLE, CONFERENCE PROCEEDINGS, P439
   Olston C., 2008, Proceedings of the 2008 ACM SIGMOD International Conference on Manage- ment of Data, P1099
   Orleans D., 2001, REFLECTION' 01: 3rd International Conference on Metalevel Architectures and Separation of Crosscutting Concerns, P73
   Rajan Hridesh, 2008, P 2 WORKSH ASS CONT
   Raymond Eric, 1999, KNOWLEDGE TECHNOLOGY, V12, P23, DOI DOI 10.1007/S12130-999-1026-0
   Richards G, 2011, LECT NOTES COMPUT SC, V6813, P52, DOI 10.1007/978-3-642-22655-7_4
   Shang W., 2010, ASE'10: 25th IEEE/ACM International Conference on Automated Software Engineering, P275
   Tichelaar Sander, 2000, P 7 WORK C REV ENG W, P296
   Tiobe Software BV, 2012, TIOBE PROGRAMMING CO
   Urso Anthony, 2013, SIZZLE COMPILER RUNT
   Visser J, 2001, ACM SIGPLAN NOTICES, V36, P270, DOI 10.1145/504311.504302
   WEISS C, 2007, P 4 INT WORKSH MIN S
   Yu Y., 2008, OSDI, V8, P1
NR 50
TC 58
Z9 68
U1 0
U2 7
PU ASSOC COMPUTING MACHINERY
PI NEW YORK
PA 2 PENN PLAZA, STE 701, NEW YORK, NY 10121-0701 USA
SN 1049-331X
EI 1557-7392
J9 ACM T SOFTW ENG METH
JI ACM Trans. Softw. Eng. Methodol.
PD DEC
PY 2015
VL 25
IS 1
AR 7
DI 10.1145/2803171
PG 34
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CZ0VD
UT WOS:000366823200007
DA 2024-07-18
ER

PT J
AU El Kholy, W
   Bentahar, J
   El Menshawy, M
   Qu, HY
   Dssouli, R
AF El Kholy, Warda
   Bentahar, Jamal
   El Menshawy, Mohamed
   Qu, Hongyang
   Dssouli, Rachida
TI Conditional Commitments: Reasoning and Model Checking
SO ACM TRANSACTIONS ON SOFTWARE ENGINEERING AND METHODOLOGY
LA English
DT Article
DE Design; Algorithms; Verification; Reasoning rules; strong and weak
   conditional commitments
ID AGENT COMMUNICATION; SOCIAL COMMITMENTS; SYSTEMS
AB While modeling interactions using social commitments provides a fundamental basis for capturing flexible and declarative interactions and helps in addressing the challenge of ensuring compliance with specifications, the designers of the system cannot guarantee that an agent complies with its commitments as it is supposed to, or at least an agent doesn't want to violate its commitments. They may still wish to develop efficient and scalable algorithms by which model checking conditional commitments, a natural and universal frame of social commitments, is feasible at design time. However, distinguishing between different but related types of conditional commitments, and developing dedicated algorithms to tackle the problem of model checking conditional commitments, is still an active research topic. In this article, we develop the temporal logic CTLcc that extends Computation Tree Logic (CTL) with new modalities which allow representing and reasoning about two types of communicating conditional commitments and their fulfillments using the formalism of interpreted systems. We introduce a set of rules to reason about conditional commitments and their fulfillments. The verification technique is based on developing a new symbolic model checking algorithm to address this verification problem. We analyze the computational complexity and present the full implementation of the developed algorithm on top of the MCMAS model checker. We also evaluate the algorithm's effectiveness and scalability by verifying the compliance of the NetBill protocol, taken from the business domain, and the process of breast cancer diagnosis and treatment, taken from the health-care domain, with specifications expressed in CTLcc. We finally compare the experimental results with existing proposals.
   Categories and Subject Descriptors: D.2.4 [Software Engineering]: Software/Program Verification-Formal Methods, Model Checking; I.2.11 [Artificial Intelligence]: Distributed Artificial Intelligence-Multi-Agent Systems
C1 [El Kholy, Warda; Bentahar, Jamal; El Menshawy, Mohamed; Dssouli, Rachida] Concordia Univ, Fac Engn & Comp Sci, Montreal, PQ H3G 1MB, Canada.
   [El Menshawy, Mohamed] Menoufia Univ, Fac Comp & Informat, Shibin Al Kawm, Menufia, Egypt.
   [Qu, Hongyang] Unvers Sheffield, Automat Control & Syst Engn Dept, Westerm Bank, Sheffield S10 2TN, S Yorkshire, England.
C3 Concordia University - Canada; Egyptian Knowledge Bank (EKB); Menofia
   University
RP El Kholy, W (corresponding author), Concordia Univ, Fac Engn & Comp Sci, 1455 De Maisonneuve Blvd West, Montreal, PQ H3G 1MB, Canada.
EM w_elkh@encs.concordia.ca
OI Bentahar, Jamal/0000-0002-3136-4849
FU NSERC (Canada); FQRSC (Quebec); Menofia University (Egypt); EPSRC
   (United Kingdom) [EP/J011894/2]; EPSRC [EP/J011894/2] Funding Source:
   UKRI
FX The authors would like to thank NSERC (Canada), FQRSC (Quebec), Menofia
   University (Egypt), and EPSRC project EP/J011894/2 (United Kingdom) for
   their financial support.
CR Agotnes Thomas, 2008, STRATEGIC COMMITMENT
   [Anonymous], 2002, P 4 INTERNATIONA WOR
   Artikis A, 2009, LECT NOTES ARTIF INT, V5485, P29, DOI 10.1007/978-3-642-02562-4_2
   Baldoni Matteo, 2013, Declarative Agent Languages and Technologies X. 10th International Workshop, DALT 2012. Revised Selected Papers, P96, DOI 10.1007/978-3-642-37890-4_6
   Baldoni M, 2013, ACM T INTEL SYST TEC, V4, DOI 10.1145/2438653.2438657
   Baldoni M, 2010, FRONT ARTIF INTEL AP, V215, P137, DOI 10.3233/978-1-60750-606-5-137
   Belardinelli Francesco, 2013, VERIFICATION AGENT B
   Bentahar J, 2010, SPECIFICATION AND VERIFICATION OF MULTI-AGENT SYSTEMS, P67, DOI 10.1007/978-1-4419-6984-2_3
   Bentahar J., 2006, Computational Logic in Multi-Agent Systems. 7th International Workshop, CLIMA VII. Revised Selected and Invited Papers (Lecture Notes in Artificial Intelligence Vol.4371), P151
   Bentahar J, 2013, P 12 INT C AUT AG MU, P1169
   Bentahar J, 2012, KNOWL-BASED SYST, V35, P21, DOI 10.1016/j.knosys.2012.04.010
   Bhat GS, 2001, LECT NOTES COMPUT SC, V2102, P38
   Castelfranchi C., 1995, ICMAS-95 Proceedings. First International Conference on Multi-Agent Systems, P41
   Chesani F, 2013, AUTON AGENT MULTI-AG, V27, P85, DOI 10.1007/s10458-012-9202-0
   Chopra A, 2003, LECT NOTES ARTIF INT, V2922, P183
   Chopra A.K., 2009, Proceedings of the 8th International Joint Conference on Autonomous Agents and MultiAgent Systems (AAMAS), P937
   Chopra AK, 2013, ACM T INTEL SYST TEC, V4, DOI 10.1145/2438653.2438655
   Desai N., 2007, P INT C AUT AG MULT, P144
   Desai N, 2009, ACM T SOFTW ENG METH, V19, DOI 10.1145/1571629.1571632
   Edmund MClarke., 1999, Model checking
   El Menshawy M, 2013, AUTON AGENT MULTI-AG, V27, P375, DOI 10.1007/s10458-012-9208-7
   El-Menshawy Mohamed, 2011, Modern Approaches in Applied Intelligence. Proceedings 24th International Conference on Industrial Engineering and Other Applications of Applied Intelligent Systems (IEA/AIE 2011), P37, DOI 10.1007/978-3-642-21827-9_5
   El-Menshawy M, 2012, THESIS CONCORDIA U M
   El-Menshawy M, 2013, EXPERT SYST APPL, V40, P122, DOI 10.1016/j.eswa.2012.07.030
   El-Menshawy M, 2011, LECT NOTES ARTIF INT, V6619, P185, DOI 10.1007/978-3-642-20715-0_11
   El-Menshawy M, 2010, LECT NOTES ARTIF INT, V6039, P128, DOI 10.1007/978-3-642-13338-1_8
   El-Menshawy Mohamed., 2011, P 10 INT C AUTONOMOU, P483
   Eshuis R, 2006, ACM T SOFTW ENG METH, V15, P1, DOI 10.1145/1125808.1125809
   Fagin R, 1995, Reasoning about knowledge
   Fornara N, 2008, ARTIF INTELL LAW, V16, P89, DOI 10.1007/s10506-007-9055-z
   Gerard SN, 2013, ACM T INTEL SYST TEC, V4, DOI 10.1145/2438653.2438656
   Giordano L., 2007, Journal of Applied Logic. vol, V5, P214
   Gonzalez P., 2012, Proceedings of the 2012 IEEE 19th International Conference on Web Services (ICWS), P25, DOI 10.1109/ICWS.2012.31
   Jones AJI, 2007, GROUP DECIS NEGOT, V16, P101, DOI 10.1007/s10726-006-9059-1
   Kupferman O, 2000, J ACM, V47, P312, DOI 10.1145/333979.333987
   Lomuscio A, 2012, AUTON AGENT MULTI-AG, V24, P345, DOI 10.1007/s10458-010-9152-3
   Lomuscio A, 2009, LECT NOTES COMPUT SC, V5643, P682, DOI 10.1007/978-3-642-02658-4_55
   Mallya Ashok U., 2004, LECT NOTES COMPUTER, V2922, P166
   Marengo E., 2011, P 22 INT JOINT C ART, V3, P2824
   Montali Marco, 2014, P 13 INT C AUT AG MU, P157
   Pham D. Q., 2007, P 6 INT JOINT C AUT, P124
   Singh M. P., 1999, Artificial Intelligence and Law, V7, P97, DOI 10.1023/A:1008319631231
   Singh M. P., 2008, AAAI, V8, P176
   Singh MP, 2000, LECT NOTES ARTIF INT, V1916, P31
   Singh MP, 2007, 20TH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P1519
   Singh MP, 2009, COMPUTER, V42, P72, DOI 10.1109/MC.2009.347
   Sirbu MA, 1997, IEEE SPECTRUM, V34, P23, DOI 10.1109/6.570823
   Telang PR, 2012, IEEE T SERV COMPUT, V5, P305, DOI 10.1109/TSC.2011.4
   Torroni P, 2010, LECT NOTES ARTIF INT, V5948, P228, DOI 10.1007/978-3-642-11355-0_14
   Venkatraman M., 1999, Autonomous Agents and Multi-Agent Systems, V2, P217, DOI 10.1023/A:1010056221226
   VERDICCHIO M, 2004, LECT NOTES COMPUTER, V2922, P128
   Winikoff M, 2005, LECT NOTES ARTIF INT, V3476, P198
   Yolum P, 2004, ANN MATH ARTIF INTEL, V42, P227, DOI 10.1023/B:AMAI.0000034528.55456.d9
   Yolum P., 2002, Proceedings of the First International Joint Conference on Autonomous Agents and Multiagent Systems, P527
   Yolum P, 2002, LECT NOTES ARTIF INT, V2333, P235
   Zambonelli F, 2003, ACM T SOFTW ENG METH, V12, P317, DOI 10.1145/958961.958963
NR 56
TC 20
Z9 20
U1 0
U2 11
PU ASSOC COMPUTING MACHINERY
PI NEW YORK
PA 2 PENN PLAZA, STE 701, NEW YORK, NY 10121-0701 USA
SN 1049-331X
EI 1557-7392
J9 ACM T SOFTW ENG METH
JI ACM Trans. Softw. Eng. Methodol.
PD DEC
PY 2014
VL 24
IS 2
AR 9
DI 10.1145/2685613
PG 49
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AX6KC
UT WOS:000347030200003
DA 2024-07-18
ER

PT J
AU Zhang, PY
   Elbaum, S
AF Zhang, Pingyu
   Elbaum, Sebastian
TI Amplifying Tests to Validate Exception Handling Code: An Extended Study
   in the Mobile Application Domain
SO ACM TRANSACTIONS ON SOFTWARE ENGINEERING AND METHODOLOGY
LA English
DT Article
DE Experimentation; Reliability; Verification; Test transformation; test
   case generation; exception handling; test amplification; mobile
   applications
ID SUPPORT
AB Validating code handling exceptional behavior is difficult, particularly when dealing with external resources that may be noisy and unreliable, as it requires (1) systematic exploration of the space of exceptions that may be thrown by the external resources, and (2) setup of the context to trigger specific patterns of exceptions. In this work, we first present a study quantifying the magnitude of the problem by inspecting the bug repositories of a set of popular applications in the increasingly relevant domain of Android mobile applications. The study revealed that 22% of the confirmed and fixed bugs have to do with poor exceptional handling code, and half of those correspond to interactions with external resources. We then present an approach that addresses this challenge by performing an systematic amplification of the program space explored by a test by manipulating the behavior of external resources. Each amplification attempts to expose a program's exception handling constructs to new behavior by mocking an external resource so that it returns normally or throws an exception following a predefined set of patterns. Our assessment of the approach indicates that it can be fully automated, is powerful enough to detect 67% of the faults reported in the bug reports of this kind, and is precise enough that 78% of the detected anomalies are fixed, and it has a great potential to assist developers.
C1 [Zhang, Pingyu; Elbaum, Sebastian] Univ Nebraska, Lincoln, NE 68583 USA.
C3 University of Nebraska System; University of Nebraska Lincoln
RP Elbaum, S (corresponding author), Univ Nebraska, Lincoln, NE 68583 USA.
FU NSF [CCF-0915526]; AFOSR [FA9550-10-1-0406]
FX This material is based in part upon work supported by NSF Award
   CCF-0915526 and by AFOSR Award #FA9550-10-1-0406. Any opinions,
   findings, and conclusions or recommendations expressed in this material
   are those of the author(s) and do not necessarily reflect the views of
   AFOSR or NSF.
CR Acharya M, 2009, LECT NOTES COMPUT SC, V5503, P370
   [Anonymous], 2012, Android wifi tether code host
   [Anonymous], 2011, BUSLINC CODE HOST
   [Anonymous], 2012, CLASSIFICATION STUDY
   [Anonymous], 2011, ASPECTJ PROJECT
   [Anonymous], 2007, P 6 JOINT M EUR SOFT
   [Anonymous], 2011, Android-aspectj tool
   Barbosa E. A., 2012, 2012 26th Brazilian Symposium on Software Engineering (SBES), P171, DOI 10.1109/SBES.2012.22
   Bessey A, 2010, COMMUN ACM, V53, P66, DOI 10.1145/1646353.1646374
   Bieman JM, 1996, SEVENTH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P166, DOI 10.1109/ISSRE.1996.558776
   Boyapati C., 2002, Software Engineering Notes, V27, P123, DOI 10.1145/566171.566191
   Buse R.P., 2008, Proceedings of the 2008 International Symposium on Software Testing and Analysis, ISSTA '08, P273
   Chen Fu, 2004, Software Engineering Notes, V29, P23, DOI 10.1145/1013886.1007516
   Coppit D, 2005, IEEE T SOFTWARE ENG, V31, P328, DOI 10.1109/TSE.2005.52
   Elbaum Sebastian, 2006, P 14 ACM SIGSOFT INT, P253
   Freeman S., 2006, Companion to the 21st ACM SIGPLAN Symposium on Object-oriented Programming Systems, Languages, and Applications, OOPSLA '06, P855, DOI DOI 10.1145/1176617.1176735
   Fu C, 2007, PROC INT CONF SOFTW, P230
   Jackson D, 1996, IEEE T SOFTWARE ENG, V22, P484, DOI 10.1145/226295.226322
   Jong-Deok Choi, 1999, Software Engineering Notes, V24, P21, DOI 10.1145/381788.316171
   Robillard MP, 2013, IEEE T SOFTWARE ENG, V39, P613, DOI 10.1109/TSE.2012.63
   Robillard MP, 2003, ACM T SOFTW ENG METH, V12, P191, DOI 10.1145/941566.941569
   Sama M, 2010, IEEE T SOFTWARE ENG, V36, P644, DOI 10.1109/TSE.2010.35
   Segall Z., 1988, Eighteenth International Symposium on Fault-Tolerant Computing. Digest of Papers. FTCS-18 (Cat. No.88CH2543-7), P102, DOI 10.1109/FTCS.1988.5306
   Sinha S, 2004, PROC INT CONF SOFTW, P336, DOI 10.1109/ICSE.2004.1317456
   Sinha S, 2000, IEEE T SOFTWARE ENG, V26, P849, DOI 10.1109/32.877846
   Thummalapenta S, 2009, PROC INT CONF SOFTW, P496, DOI 10.1109/ICSE.2009.5070548
   Wikipedia, 2012, LIST OP SOURC ANDR A
   Zhang PY, 2012, PROC INT CONF SOFTW, P595, DOI 10.1109/ICSE.2012.6227157
NR 28
TC 31
Z9 34
U1 0
U2 5
PU ASSOC COMPUTING MACHINERY
PI NEW YORK
PA 2 PENN PLAZA, STE 701, NEW YORK, NY 10121-0701 USA
SN 1049-331X
EI 1557-7392
J9 ACM T SOFTW ENG METH
JI ACM Trans. Softw. Eng. Methodol.
PD AUG
PY 2014
VL 23
IS 4
SI SI
AR 32
DI 10.1145/2652483
PG 28
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AP2XB
UT WOS:000341938200006
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Islam, M
   Csallner, C
AF Islam, Mainul
   Csallner, Christoph
TI Generating Test Cases for Programs that Are Coded against Interfaces and
   Annotations
SO ACM TRANSACTIONS ON SOFTWARE ENGINEERING AND METHODOLOGY
LA English
DT Article
DE Algorithms; Reliability; Verification; Dynamic symbolic execution; mock
   classes; stubs; test case generation
ID STATIC CHECKING
AB Automatic test case generation for software programs is very powerful but suffers from a key limitation. That is, most current test case generation techniques fail to cover testee code when covering that code requires additional pieces of code not yet part of the program under test. To address some of these cases, the Pex state-of-the-art test case generator can generate basic mock code. However, current test case generators cannot handle cases in which the code under test uses multiple interfaces, annotations, or reflection.
   To cover such code in an object-oriented setting, we describe a novel technique for generating test cases and mock classes. The technique consists of collecting constraints on interfaces, annotations, and reflection, combining them with program constraints collected during dynamic symbolic execution, encoding them in a constraint system, solving them with an off-the-shelf constraint solver, and mapping constraint solutions to test cases and custom mock classes. We demonstrate the value of this technique on open-source applications. Our approach covered such third-party code with generated mock classes, while competing approaches failed to cover the code and sometimes produced unintended side-effects such as filling the screen with dialog boxes and writing into the file system.
C1 [Islam, Mainul; Csallner, Christoph] Univ Texas Arlington, Dept Comp Sci & Engn, Arlington, TX 76019 USA.
C3 University of Texas System; University of Texas Arlington
RP Csallner, C (corresponding author), Univ Texas Arlington, Dept Comp Sci & Engn, Arlington, TX 76019 USA.
EM csallner@uta.edu
FU National Science Foundation [1017305, 1117369]; Division of Computing
   and Communication Foundations; Direct For Computer & Info Scie & Enginr
   [1117369, 1017305] Funding Source: National Science Foundation
FX This is a revised and extended version of a WODA workshop paper [Islam
   and Csallner 2010]. This material is based upon work supported by the
   National Science Foundation under grants nos. 1017305 and 1117369.
CR Anand S, 2007, LECT NOTES COMPUT SC, V4424, P117
   [Anonymous], 2005, ADDISON WESLEY OBJEC
   [Anonymous], 2008, NDSS
   [Anonymous], 2006, P 13 ACM C COMPUTER
   [Anonymous], 1990, Software testing techniques {
   [Anonymous], EC IMP IN INFR SOFTW
   [Anonymous], 2007, Software testing and analysis-process, principles and techniques
   [Anonymous], MSRTR2005140
   BARNETT M, 2004, LNCS, V3362, P49, DOI [DOI 10.1007/978-3-540-30569-9_3, 10.1007]
   Beck K, 1998, JAVA REP, V3, P37
   Bessey A, 2010, COMMUN ACM, V53, P66, DOI 10.1145/1646353.1646374
   Beust C., 2007, NEXT GENERATION JAVA
   Bodden E, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P241, DOI 10.1145/1985793.1985827
   Bodden Eric, 2010, TUDCS20100066
   Boyapati C., 2002, Software Engineering Notes, V27, P123, DOI 10.1145/566171.566191
   Brauer Jorg, 2012, NASA Formal Methods. Proceedings of the 4th International Symposium, NFM 2012, P54, DOI 10.1007/978-3-642-28891-3_7
   Cadar C., 2008, Proceedings of the 8th USENIX conference on Operating systems design and implementation, OSDI'08, (USA), P209
   Chandra S, 2009, ACM SIGPLAN NOTICES, V44, P363, DOI 10.1145/1543135.1542517
   Clarke L. A., 1976, IEEE Transactions on Software Engineering, VSE-2, P215, DOI 10.1109/TSE.1976.233817
   COK DR, 2004, NIIIR0413
   Collberg C, 2007, SOFTWARE PRACT EXPER, V37, P581, DOI 10.1002/spe.776
   Csallner C, 2005, PROC INT CONF SOFTW, P422
   Csallner C, 2004, SOFTWARE PRACT EXPER, V34, P1025, DOI 10.1002/spe.602
   Csallner C, 2008, ACM T SOFTW ENG METH, V17, DOI 10.1145/1348250.1348254
   de Halleux J, 2010, LECT NOTES COMPUT SC, V6141, P253, DOI 10.1007/978-3-642-13953-6_14
   de Moura L, 2008, LECT NOTES COMPUT SC, V4963, P337, DOI 10.1007/978-3-540-78800-3_24
   Do HS, 2005, EMPIR SOFTW ENG, V10, P405, DOI 10.1007/s10664-005-3861-2
   Elkarablieh B, 2009, ISSTA 2009: INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P129
   Flanagan C, 2002, ACM SIGPLAN NOTICES, V37, P234, DOI 10.1145/543552.512558
   Flanagan Cormac, 2004, P 2004 ACM SIGPLAN S, P49, DOI [10.1145/996821.996838, DOI 10.1145/996821.996838]
   Freeman S., 2006, Companion to the 21st ACM SIGPLAN Symposium on Object-oriented Programming Systems, Languages, and Applications, OOPSLA '06, P855, DOI DOI 10.1145/1176617.1176735
   Freeman Steve, 2004, 19 ACM SIGPLAN C OBJ, P4
   Galler Stefan J., 2010, Proceedings of the 2010 8th IEEE International Conference on Software Engineering and Formal Methods (SEFM 2010), P286, DOI 10.1109/SEFM.2010.33
   Godefroid P, 2005, ACM SIGPLAN NOTICES, V40, P213, DOI 10.1145/1064978.1065036
   Gosling J., 2005, Java Language Specification, Vthird
   Hapner M., 2002, JAVA MESSAGE SERVICE
   Hind M, 2001, ACM SIGPLAN NOTICES, P54
   Islam Mainul., 2010, WODA, P26
   Jaygarl Hojun, 2010, P 19 INT S SOFTWARE, P159
   Kiczales G, 1997, LECT NOTES COMPUT SC, V1241, P220, DOI 10.1007/BFb0053381
   KING JC, 1976, COMMUN ACM, V19, P385, DOI 10.1145/360248.360252
   Kiniry Joseph R., 2004, LOGICS CALCULI ESC J
   Mäntylä MV, 2012, SOFTWARE QUAL J, V20, P145, DOI 10.1007/s11219-011-9157-4
   Marri MR, 2009, 2009 ICSE WORKSHOP ON AUTOMATION OF SOFTWARE TEST, P149, DOI 10.1109/IWAST.2009.5069054
   McConnell Steve., 2004, Code Complete, V2nd ed
   Meszaros G., 2007, Xunit test patterns: refactoring test code
   Mockus A, 2002, ACM T SOFTW ENG METH, V11, P309, DOI 10.1145/567793.567795
   Pacheco C, 2007, PROC INT CONF SOFTW, P75
   Pasternak Benny, 2009, International Journal on Software Tools for Technology Transfer, V11, P273, DOI 10.1007/s10009-009-0115-4
   Saff David., 2005, PROC ASE, P114, DOI DOI 10.1145/1101908.1101927
   Thummalapenta S, 2010, LECT NOTES COMPUT SC, V6143, P77, DOI 10.1007/978-3-642-13977-2_8
   Tillmann N, 2008, LECT NOTES COMPUT SC, V4966, P134
   Tillmann N, 2006, IEEE INT CONF AUTOM, P365
   Tillmann N, 2006, IEEE SOFTWARE, V23, P38, DOI 10.1109/MS.2006.117
   Wagner S, 2005, LECT NOTES COMPUT SC, V3502, P40
   Williams Laurie, 2009, 2009 20th International Symposium on Software Reliability Engineering (ISSRE 2009), P81, DOI 10.1109/ISSRE.2009.32
   Williams L, 2011, INT SYMP EMP SOFTWAR, P463, DOI 10.1109/ESEM.2011.65
   Xiao XS, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P611, DOI 10.1145/1985793.1985876
   Xie T, 2009, I C DEPEND SYS NETWO, P359, DOI 10.1109/DSN.2009.5270315
   Zaidman A, 2011, EMPIR SOFTW ENG, V16, P325, DOI 10.1007/s10664-010-9143-7
   Zitser M., 2004, Software Engineering Notes, V29, P97, DOI 10.1145/1041685.1029911
NR 61
TC 9
Z9 10
U1 0
U2 5
PU ASSOC COMPUTING MACHINERY
PI NEW YORK
PA 2 PENN PLAZA, STE 701, NEW YORK, NY 10121-0701 USA
SN 1049-331X
EI 1557-7392
J9 ACM T SOFTW ENG METH
JI ACM Trans. Softw. Eng. Methodol.
PD MAY
PY 2014
VL 23
IS 3
AR 21
DI 10.1145/2544135
PG 38
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AH9EM
UT WOS:000336444200001
DA 2024-07-18
ER

PT J
AU Gandhi, RA
   Lee, SW
AF Gandhi, R. A.
   Lee, S. W.
TI Discovering Multidimensional Correlations among Regulatory Requirements
   to Understand Risk
SO ACM TRANSACTIONS ON SOFTWARE ENGINEERING AND METHODOLOGY
LA English
DT Article
DE Security; Measurement; Legal Aspects; Standardization; Software
   requirements engineering; knowledge engineering; certification and
   accreditation; risk; requirements visualization; ontology-based domain
   modeling
ID SOFTWARE; FRAMEWORK
AB Security breaches most often occur due to a cascading effect of failure among security constraints that collectively contribute to overall secure system behavior in a socio-technical environment. Therefore, during security certification activities, analysts must systematically take into account the nexus of causal chains that exist among security constraints imposed by regulatory requirements. Numerous regulatory requirements specified in natural language documents or listed in spreadsheets/databases do not facilitate such analysis. The work presented in this article outlines a stepwise methodology to discover and understand the multidimensional correlations among regulatory requirements for the purpose of understanding the potential for risk due to noncompliance during system operation. Our lattice algebraic computational model helps estimate the collective adequacy of diverse security constraints imposed by regulatory requirements and their interdependencies with each other in a bounded scenario of investigation. Abstractions and visual metaphors combine human intuition with metrics available from the methodology to improve the understanding of risk based on the level of compliance with regulatory requirements. In addition, a problem domain ontology that classifies and categorizes regulatory requirements from multiple dimensions of a socio-technical environment promotes a common understanding among stakeholders during certification and accreditation activities. A preliminary empirical investigation of our theoretical propositions has been conducted in the domain of The United States Department of Defense Information Technology Security Certification and Accreditation Process (DITSCAP). This work contributes a novel approach to understand the level of compliance with regulatory requirements in terms of the potential for risk during system operation.
C1 [Gandhi, R. A.] Univ Nebraska, Nebraska Univ Ctr Informat Assurance, Coll Informat Sci & Technol, Omaha, NE 68182 USA.
   [Lee, S. W.] Univ N Carolina, Charlotte, NC 28223 USA.
C3 University of Nebraska System; University of North Carolina; University
   of North Carolina Charlotte
RP Lee, SW (corresponding author), Univ Texas San Antonio, Dept Informat Syst & Technol Management, San Antonio, TX 78249 USA.
EM rgandhi@unomaha.edu; Seok-Won.Lee@utsa.edu
RI Gandhi, Robin/AAI-7511-2020
FU Critical Infrastructure Protection Center, Space and Naval Warfare (SPA
   WAR) Systems Center, US Department of Navy, Charleston, SC
   [N65236-05-P-3672]; National Science Foundation (NSF) [0416042]; Direct
   For Education and Human Resources; Division Of Undergraduate Education
   [0416042] Funding Source: National Science Foundation
FX This research was supported in part by the grant (Contract#
   N65236-05-P-3672) from the Critical Infrastructure Protection Center,
   Space and Naval Warfare (SPA WAR) Systems Center, US Department of Navy,
   Charleston, SC, and by the National Science Foundation (NSF) grant DUE:
   Federal Cyber Service: SFS #0416042.
CR Aagedal JO, 2002, SIXTH INTERNATIONAL ENTERPRISE DISTRIBUTED OBJECT COMPUTING CONFERENCE, PROCEEDINGS, P51, DOI 10.1109/EDOC.2002.1137696
   Alberts C., 2001, Operationally Critical Threat, Asset, and Vulnerability Evaluation (OCTAVE) Method Implementation Guide
   ALBERTS C, 2001, OCTAVE CRITERIA V2 0
   Alexander I, 2003, IEEE SOFTWARE, V20, P58, DOI 10.1109/MS.2003.1159030
   ALSPAUGH TA, 2002, THESIS N CAROLINA ST
   [Anonymous], 2013, CASE STUDY RES DESIG
   [Anonymous], 2003, Security in Computing
   [Anonymous], 1985, 520028STD DOD
   [Anonymous], 2002, Description Logic Handbook
   [Anonymous], 2002, NIST SPECIAL PUBLICA
   ARMSTRONG WW, 2002, J FORMALIZ MATH, V14
   Basili V., 1994, The Goal Question Metric Approach, P528
   BASKERVILLE R, 1993, COMPUT SURV, V25, P375, DOI 10.1145/162124.162127
   BREAUX TD, 2009, ACM T SOFTW ENG METH
   Breaux TD, 2006, RE'06: 14TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, PROCEEDINGS, P49
   BUCKSHAW DL, 2005, MILIT OP RES, V10, P2
   Butler ShawnA., 2002, ICSE 2002 P 24 INT C, P232, DOI DOI 10.1145/581339.581370
   Chew E., 2008, NIST Special Publication 800-55 Revision 1 - Performance Measurement Guide for Information Security
   Cleveland W. S, 1994, The elements of graphing data
   CYSNEIROS LM, 2004, IEEE T SOFTWARE ENG, V30, P5
   *DOD, 2007, 851001 DOD
   *DOD, 1997, 520040 DOD
   Donzelli P, 2006, J SYST SOFTWARE, V79, P107, DOI 10.1016/j.jss.2005.03.011
   DUQUENNE V, 2005, BEITRAGE BEGRISANALY, P213
   Easterbrook S., 1993, P 1 INT S REQUIREMEN, P65
   *ERNST YOUNG, 2005, REP WID GAP
   Feather M. S., 2003, Requirements Engineering, V8, P248, DOI 10.1007/s00766-002-0160-y
   Ganter B., 1996, FORMAL CONCEPT ANAL
   Geer D, 2003, COMPUTER, V36, P129, DOI 10.1109/MC.2003.1250894
   GENTNER D, 1983, COGNITIVE SCI, V7, P155, DOI 10.1207/s15516709cog0702_3
   GOOD PI, 2006, COMMON ERRORS STAT A, P135
   Jackson M., 1995, SOFTWARE REQUIREMENT
   Jilani LL, 2001, IEEE T SOFTWARE ENG, V27, P673, DOI 10.1109/32.940565
   Johansson E., 2005, P S REQ ENG INF SEC
   Kalfoglou Y., 2004, P 2 INT C FORMAL CON, P252
   KIMBELL J, 2001, IANEWSLETTER, V4, P2
   Kotonya G, 1996, SOFTWARE ENG J, V11, P5, DOI 10.1049/sej.1996.0002
   Kramer J., 2006, P 2006 INT WORKSHOP, P1, DOI DOI 10.1145/1137620.1137621
   Lee S.W., 2004, P 16 INT C SOFTWARE, P117
   Lee SW, 2007, INT REQUIR ENG CONF, P383, DOI 10.1109/RE.2007.34
   Lee SW, 2006, INT J SOFTW ENG KNOW, V16, P851, DOI 10.1142/S0218194006003051
   Lee SW, 2005, 12TH ASIA-PACIFIC SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P481
   LEE SW, 2006, CROSSTALK J DEFENSE, V19, P20
   LEE SW, 2004, INT J INFORM, V3, P315
   LEE SW, 2007, SOFT PROCESS IMPROVE, V12, P165
   LIN L, 2003, P 11 INT C REQ ENG, P151
   Lin LC, 2004, 12TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, PROCEEDINGS, P354
   McDermid J.A., 2001, P 6 AUSTR WORKSHOP S, P1
   McDermott J, 2001, 17TH ANNUAL COMPUTER SECURITY APPLICATIONS CONFERENCE, PROCEEDINGS, P366, DOI 10.1109/ACSAC.2001.991553
   McGraw G., 2006, Software security: building security in
   Mead N.R., 2005, SECURITY QUALITY REQ, V30
   MITCHELL RN, 2005, USING DITSCAP REGULA
   MOFFETT JD, 2004, 200423 OP U
   PELTIER T, FACILITATED RISK ASS
   Prud'Hommeaux E., 2006, SPARQL QUER IN PRESS
   Robinson WN, 1998, THIRD INTERNATIONAL CONFERENCE ON REQUIREMENTS ENGINEERING - PROCEEDINGS, P82, DOI 10.1109/ICRE.1998.667812
   Salter C., 1998, P NEW SEC PAR WORKSH
   SCHEDL M, 2005, P 16 IEEE VIS C, P89
   Schneier B., 2000, Secrets and Lies: Digital Security in a Networked World
   *SIEM UK, 2005, CENTR COMM TEL AG CC
   Sindre G, 2000, 37TH INTERNATIONAL CONFERENCE ON TECHNOLOGY OF OBJECT-ORIENTED LANGUAGES AND SYSTEMS, PROCEEDINGS, P120, DOI 10.1109/TOOLS.2000.891363
   SOOHOO K, 2000, MUCH IS ENOUGH RISK
   TONELLA P, 2003, IEEE T SOFTWARE ENG, V29, P6
   Tonella P., 2005, P 27 INT C SOFTW ENG
   *US GAO, 2005, 05700 US GAO
   *US GAO, 2007, 07837 US GAO
   *US GAO, 2004, 04376 US GAO
   van Lamsweerde A, 2004, PROC INT CONF SOFTW, P148, DOI 10.1109/ICSE.2004.1317437
   VAUGHN RB, 2002, P 36 ANN HAW INT C S, P331
   Verdon D, 2004, IEEE SECUR PRIV, V2, P79, DOI 10.1109/MSP.2004.55
   Voas J, 1999, IEEE SOFTWARE, V16, P48, DOI 10.1109/52.776948
   Wasson KS, 2006, RE'06: 14TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, PROCEEDINGS, P9
   WILLE R, 1997, P 5 INT C CONC STRUC, P290
   Wong PC, 2004, IEEE COMPUT GRAPH, V24, P20
   YUDISTIRA A, 2006, DIT06008 U TRENT
   2006, COMMON CRITERIA IN 1
   [No title captured]
NR 77
TC 8
Z9 9
U1 0
U2 4
PU ASSOC COMPUTING MACHINERY
PI NEW YORK
PA 2 PENN PLAZA, STE 701, NEW YORK, NY 10121-0701 USA
SN 1049-331X
EI 1557-7392
J9 ACM T SOFTW ENG METH
JI ACM Trans. Softw. Eng. Methodol.
PD SEP
PY 2011
VL 20
IS 4
AR 16
DI 10.1145/2000799.2000802
PG 37
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 824QN
UT WOS:000295217200003
DA 2024-07-18
ER

PT J
AU Steimann, F
   Pawlitzki, T
   Apel, S
   Kästner, C
AF Steimann, Friedrich
   Pawlitzki, Thomas
   Apel, Sven
   Kaestner, Christian
TI Types and Modularity for Implicit Invocation with Implicit Announcement
SO ACM TRANSACTIONS ON SOFTWARE ENGINEERING AND METHODOLOGY
LA English
DT Article
DE Design; Languages; Implicit invocation; event-driven programming;
   publish/subscribe; aspect-oriented programming; modularity; typing
ID POINTCUTS; SOFTWARE; LANGUAGE
AB Through implicit invocation, procedures are called without explicitly referencing them. Implicit announcement adds to this implicitness by not only keeping implicit which procedures are called, but also where or when-under implicit invocation with implicit announcement, the call site contains no signs of that, or what it calls. Recently, aspect-oriented programming has popularized implicit invocation with implicit announcement as a possibility to separate concerns that lead to interwoven code if conventional programming techniques are used. However, as has been noted elsewhere, as currently implemented it establishes strong implicit dependencies between components, hampering independent software development and evolution. To address this problem, we present a type-based modularization of implicit invocation with implicit announcement that is inspired by how interfaces and exceptions are realized in JAVA. By extending an existing compiler and by rewriting several programs to make use of our proposed language constructs, we found that the imposed declaration clutter tends to be moderate; in particular, we found that, for general applications of implicit invocation with implicit announcement, fears that programs utilizing our form of modularization become unreasonably verbose are unjustified.
C1 [Steimann, Friedrich; Pawlitzki, Thomas] Fernuniv, Fak Math & Informat, Lehrgebiet Programmiersyst, D-58084 Hagen, Germany.
   [Apel, Sven] Univ Passau, Fak Math & Informat, Lehrstuhl Programmierung, D-94030 Passau, Germany.
   [Kaestner, Christian] Univ Magdeburg, Fak Informat, Inst Tech & Betriebliche Informat Syst, D-39016 Magdeburg, Germany.
C3 Fern University Hagen; University of Passau; Otto von Guericke
   University
RP Steimann, F (corresponding author), Fernuniv, Fak Math & Informat, Lehrgebiet Programmiersyst, D-58084 Hagen, Germany.
EM steimann@acm.org; Thomas.Pawlitzki@fernuni-hagen.de; apel@uni-passau.de;
   kaestner@iti.cs.uni-magdeburg.de
OI Kastner, Christian/0000-0002-4450-4572; Apel, Sven/0000-0003-3687-2233;
   Steimann, Friedrich/0000-0002-8887-134X
CR ALDRICH J, 2005, P 19 EUR C OBJ OR PR, P144
   Allan Chris., 2005, P 20 ANN ACM SIGPLAN
   [Anonymous], 1997, Object-oriented software construction
   Apel S., 2008, J OBJ TECH, V9, P117
   Apel S, 2008, IEEE T SOFTWARE ENG, V34, P162, DOI 10.1109/TSE.2007.70770
   Apel S, 2007, J OBJECT TECHNOL, V6, P13, DOI 10.5381/jot.2007.6.9.a1
   Avgustinov P, 2006, LECT NOTES COMPUT SC, V3880, P293
   Avgustinov P, 2005, ACM SIGPLAN NOTICES, V40, P117, DOI 10.1145/1064978.1065026
   Bobrow D. G., 1988, SIGPLAN Notices, V23, P1, DOI 10.1145/885631.885632
   BODDEN E, 2006, GI EDITION LECT NOTE, V88, P49
   BRACHA G, 1990, SIGPLAN NOTICES, V25, P303, DOI 10.1145/97946.97982
   CLIFTON C, 2007, P EUR C OBJ OR PROGR, P451
   Clifton C., 2003, P WORKSH SOFTW ENG P
   Clifton C., 2002, P FDN ASP OR LANG FO, P33
   Coelho R, 2008, LECT NOTES COMPUT SC, V5142, P207, DOI 10.1007/978-3-540-70592-5_10
   DANTAS DS, 2006, POPL 06, P383
   Douence R., 2001, LECT NOTES COMPUTER, V2192, P170, DOI DOI 10.1007/3-540-45429-2_13
   Ducasse S, 2006, ACM T PROGR LANG SYS, V28, P331, DOI 10.1145/1119479.1119483
   Eichberg M, 2004, LECT NOTES COMPUT SC, V3302, P366
   Elrad T, 2001, COMMUN ACM, V44, P28
   Ernst E, 2003, P 2 INT C ASP OR SOF, P150, DOI 10.1145/643603.643619
   ESWARAN KP, 1976, RJ1820 IBM
   Eugster P, 2007, ACM T PROGR LANG SYS, V29, DOI 10.1145/1180475.1180481
   Eugster PT, 2003, ACM COMPUT SURV, V35, P114, DOI 10.1145/857076.857078
   Filman R., 2004, ASPECT ORIENTED SOFT
   FORSTER F, 2006, P WORKSH FDN ASP OR, P47
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   GARLAN D, 1993, PROC INT CONF SOFTW, P447, DOI 10.1109/ICSE.1993.346021
   GARLAN D, 1994, CS94166 UMI CARN MEL
   Geraci A., 1991, IEEE STANDARD COMPUT
   Griswold WG, 2006, IEEE SOFTWARE, V23, P51, DOI 10.1109/MS.2006.24
   Gudmundson S., 2001, P WORKSH ADV SEP CON
   Gybels Kris., 2003, P 2 INT C ASPECT ORI, P60
   Hilsdale E., 2004, INT C ASPECT ORIENTE, P26
   HOFFMAN K, 2007, P 5 INT S PRINC PRAC, V272, P63
   Kästner C, 2007, SPLC 2007: 11TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE, PROCEEDINGS, P223, DOI 10.1109/SPLINE.2007.12
   Kellens A, 2006, LECT NOTES COMPUT SC, V4067, P501
   Kiczales G, 2005, PROC INT CONF SOFTW, P49
   Kiczales G, 1997, LECT NOTES COMPUT SC, V1241, P220, DOI 10.1007/BFb0053381
   Lee SG, 2006, GEOSCI J, V10, P103, DOI 10.1007/BF02910354
   Ligatti J, 2006, SCI COMPUT PROGRAM, V63, P240, DOI 10.1016/j.scico.2006.01.004
   LISKOV BH, 1994, ACM T PROGR LANG SYS, V16, P1811, DOI 10.1145/197320.197383
   Lopes C. V., 2003, 18 ANN ACM SIGPLAN C, P198
   MADSEN OL, 1989, SIGPLAN NOTICES, V24, P397, DOI 10.1145/74878.74919
   Masuhara H, 2003, LECT NOTES COMPUT SC, V2895, P105
   MIKHAJLOV L, 1998, P 23 INT C SOFTW ENG, P275
   NOTKIN D, 1993, LNCS, V742, P489
   Ongkingco N., 2006, P INT C ASP OR SOFTW, P39
   Ossher H., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, P734, DOI 10.1109/ICSE.2000.870483
   Ostermann K, 2005, LECT NOTES COMPUT SC, V3586, P214
   Rajan H, 2005, PROC INT CONF SOFTW, P59
   RAJAN H, 2006, P WORKSH SOFTW ENG P
   RAJAN H, 2003, P 9 EUR SOFTW ENG C, P297
   Rajan H, 2008, LECT NOTES COMPUT SC, V5142, P155, DOI 10.1007/978-3-540-70592-5_8
   REISS SP, 1990, SOFTWARE PRACT EXPER, V20, pS89, DOI 10.1002/spe.4380201308
   RHO T, 2006, P WORKSH FDN ASP OR
   Riehle D., 1996, Theory and Practice of Object Systems, V2, P43, DOI 10.1002/(SICI)1096-9942(1996)2:1<43::AID-TAPO4>3.0.CO;2-8
   SAKURAI K, 2008, P 7 INT C ASP OR SOF, P96
   Steimann F, 2005, J OBJECT TECHNOL, V4, P75, DOI 10.5381/jot.2005.4.5.a1
   Steimann F, 2006, ACM SIGPLAN NOTICES, V41, P481, DOI 10.1145/1167515.1167514
   Stoerzer M, 2005, PROC IEEE INT CONF S, P653
   SULLIVAN K, 2005, P 10 EUR SOFTW ENG C, P166
   Sullivan K. J., 1992, ACM Transactions on Software Engineering and Methodology, V1, P229, DOI 10.1145/131736.131744
   Sullivan K. J., 1990, SIGSOFT Software Engineering Notes, V15, P22, DOI 10.1145/99278.99281
   Tarr P., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P107, DOI 10.1109/ICSE.1999.841000
   VANDEURSEN A, 2005, P AOSD WORKSH LINK A
   WIRTH N, 1988, ACM T PROGR LANG SYS, V10, P204, DOI 10.1145/42190.46167
   Xu J, 2004, 19TH INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P332
NR 68
TC 22
Z9 25
U1 0
U2 1
PU ASSOC COMPUTING MACHINERY
PI NEW YORK
PA 2 PENN PLAZA, STE 701, NEW YORK, NY 10121-0701 USA
SN 1049-331X
EI 1557-7392
J9 ACM T SOFTW ENG METH
JI ACM Trans. Softw. Eng. Methodol.
PD JUN
PY 2010
VL 20
IS 1
AR 1
DI 10.1145/1767751.1767752
PG 43
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 633YX
UT WOS:000280545100001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Assi, M
   Hassan, S
   Georgiou, S
   Zou, Y
AF Assi, Maram
   Hassan, Safwat
   Georgiou, Stefanos
   Zou, Ying
TI Predicting the Change Impact of Resolving Defects by Leveraging the
   Topics of Issue Reports in Open Source Software Systems
SO ACM TRANSACTIONS ON SOFTWARE ENGINEERING AND METHODOLOGY
LA English
DT Article
DE Issue reports; topics of issue reports; defect fixing; fixing effort;
   change impact analysis; amount of change; code churn
ID BUGS; MODELS; TAXONOMY
AB Upon receiving a new issue report, practitioners start by investigating the defect type, the potential fixing effort needed to resolve the defect and the change impact. Moreover, issue reports contain valuable information, such as, the title, description and severity, and researchers leverage the topics of issue reports as a collective metric portraying similar characteristics of a defect. Nonetheless, none of the existing studies leverage the defect topic, i.e., a semantic cluster of defects of the same nature, such as Performance, GUI, and Database, to estimate the change impact that represents the amount of change needed in terms of code churn and the number of files changed. To this end, in this article, we conduct an empirical study on 298,548 issue reports belonging to three large-scale open-source systems, i.e., Mozilla, Apache, and Eclipse, to estimate the change impact in terms of code churn or the number of files changed while leveraging the topics of issue reports. First, we adopt the Embedded Topic Model (ETM), a state-of-the-art topic modelling algorithm, to identify the topics. Second, we investigate the feasibility of predicting the change impact using the identified topics and other information extracted from the issue reports by building eight prediction models that classify issue reports requiring small or large change impact along two dimensions, i.e., the code churn size and the number of files changed. Our results suggest that XGBoost is the best-performing algorithm for predicting the change impact, with an AUC of 0.84, 0.76, and 0.73 for the code churn and 0.82, 0.71, and 0.73 for the number of files changed metric for Mozilla, Apache, and Eclipse, respectively. Our results also demonstrate that the topics of issue reports improve the recall of the prediction model by up to 45%.
C1 [Assi, Maram; Georgiou, Stefanos; Zou, Ying] Queens Univ, Kingston, ON, Canada.
   [Hassan, Safwat] Univ Toronto, Toronto, ON, Canada.
C3 Queens University - Canada; University of Toronto
RP Assi, M (corresponding author), Queens Univ, Kingston, ON, Canada.
EM maram.assi@queensu.ca; safwat.hassan@utoronto.ca;
   stefanos.georgiou@queensu.ca; ying.zou@queensu.ca
RI Zou, Ying/KLC-9380-2024; Hassan, Safwat/JWP-1498-2024
OI Zou, Ying/0000-0002-5335-0261; Assi, Maram/0000-0003-1274-7550
FU NSERC Vanier Canada Graduate Scholarships
FX The first author would like to acknowledge the support of NSERC Vanier
   Canada Graduate Scholarships.
CR Ahmad NH, 2011, COMM COM INF SC, V180, P376
   Ahmed HA, 2021, IEEE ACCESS, V9, P50496, DOI 10.1109/ACCESS.2021.3069248
   Akbarinasaji Shirin, 2018, ACM SIGSOFT Software Engineering Notes, V43, DOI 10.1145/3178315.3178326
   Amanatidis T, 2016, INFORM SOFTWARE TECH, V72, P48, DOI 10.1016/j.infsof.2015.11.009
   [Anonymous], 2000, Software Cost Estimation with COCOMO II
   [Anonymous], 2007, P 22 IEEE ACM INT C, DOI DOI 10.1145/1321631.1321639
   Anvik John, 2006, P 28 INT C SOFTWARE, P361, DOI DOI 10.1145/1134285.1134336
   Ardimento P., 2017, P 7 INT C WEB INT MI, DOI [10.1145/3102254.3102275, DOI 10.1145/3102254.3102275]
   Ardimento P, 2020, IEEE CONF EVOL ADAPT, DOI 10.1109/eais48028.2020.9122781
   Arnold Robert S, 1996, Software Change Impact Analysis
   Assi M, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-021-09988-y
   Bengio Y, 2001, ADV NEUR IN, V13, P932
   Bergstra J, 2012, J MACH LEARN RES, V13, P281
   Bhagwan R, 2018, PROCEEDINGS OF THE 13TH USENIX SYMPOSIUM ON OPERATING SYSTEMS DESIGN AND IMPLEMENTATION, P493
   Bhattacharya Pamela., 2011, PROCEEDING 8 WORKING, P207, DOI DOI 10.1145/1985441.1985472
   Bird S., 2004, P ACL INTERACTIVE PO, P214
   Blei DM, 2003, J MACH LEARN RES, V3, P993, DOI 10.1162/jmlr.2003.3.4-5.993
   Bo LL, 2021, CHINESE J ELECTRON, V30, P55, DOI 10.1049/cje.2020.10.010
   Cai HP, 2016, IEEE INT CONF AUTOM, P344, DOI 10.1145/2970276.2970352
   Campos J, 2012, IEEE INT CONF AUTOM, P378, DOI 10.1145/2351676.2351752
   Carreño LVG, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P582, DOI 10.1109/ICSE.2013.6606604
   Catolino G, 2019, J SYST SOFTWARE, V152, P165, DOI 10.1016/j.jss.2019.03.002
   Chaleshtari NB, 2020, EMPIR SOFTW ENG, V25, P4282, DOI 10.1007/s10664-020-09845-4
   Chen AR, 2022, IEEE T SOFTWARE ENG, V48, P2905, DOI 10.1109/TSE.2021.3071473
   Chen TH, 2016, EMPIR SOFTW ENG, V21, P1843, DOI 10.1007/s10664-015-9402-8
   Ciborowska A, 2021, Arxiv, DOI arXiv:2105.01830
   Claes M, 2020, IEEE WORK CONF MIN S, P503, DOI 10.1145/3379597.3387487
   coralogix, This is what your developers are doing 75% of the time, and this is the cost you pay
   Devlin J, 2019, Arxiv, DOI arXiv:1810.04805
   Dieng AB, 2020, T ASSOC COMPUT LING, V8, P439, DOI 10.1162/tacl_a_00325
   DiGiuseppe N, 2015, EMPIR SOFTW ENG, V20, P928, DOI 10.1007/s10664-014-9304-1
   Ebert F, 2015, J SYST SOFTWARE, V106, P82, DOI 10.1016/j.jss.2015.04.066
   Ehsan Osama, 2021, Predicting the Change Impact of Resolving Defects, V141, P29
   El Zarif O, 2020, IEEE WORK CONF MIN S, P339, DOI 10.1145/3379597.3387456
   Feng Zhang, 2012, 2012 19th Working Conference on Reverse Engineering (WCRE), P225, DOI 10.1109/WCRE.2012.32
   Gethers M., 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P540, DOI 10.1109/ASE.2011.6100120
   Giger E., 2010, P 2 INT WORKSH REC S, P52
   Gorunescu F, 2011, INTEL SYST REF LIBR, P1, DOI 10.1007/978-3-642-19721-5
   Gyimesi P, 2021, SOFTW TEST VERIF REL, V31, DOI 10.1002/stvr.1751
   He RD, 2017, PROCEEDINGS OF THE 55TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (ACL 2017), VOL 1, P388, DOI 10.18653/v1/P17-1036
   Hecking T, 2018, Arxiv, DOI [arXiv:1806.01045, 10.48550/arXiv.1806.01045, DOI 10.48550/ARXIV.1806.01045]
   Herraiz I., 2006, 10th European Conference on Software Maintenance and Reengineering
   Hindle A, 2015, EMPIR SOFTW ENG, V20, P374, DOI 10.1007/s10664-013-9276-6
   Hirsch Thomas, 2020, 2020 IEEE International Symposium on Software Reliability Engineering Workshops (ISSREW), P171, DOI 10.1109/ISSREW51248.2020.00067
   Hong S, 2015, IEEE INT CONF AUTOM, P464, DOI 10.1109/ASE.2015.14
   Huang L, 2007, SERA 2007: 5TH ACIS INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING RESEARCH, MANAGEMENT, AND APPLICATIONS, PROCEEDINGS, P374, DOI 10.1109/SERA.2007.46
   Huang YH, 2019, EMPIR SOFTW ENG, V24, P718, DOI 10.1007/s10664-018-9636-3
   Humbatova N, 2020, PROC INT CONF SOFTW, P1110, DOI 10.1145/3377811.3380395
   Islam MJ, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P510, DOI 10.1145/3338906.3338955
   Jahanshahi H, 2022, INFORM SOFTWARE TECH, V151, DOI 10.1016/j.infsof.2022.107025
   Jeong G, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P111, DOI 10.1145/1595696.1595715
   Jiarpakdee J, 2021, IEEE T SOFTWARE ENG, V47, P320, DOI 10.1109/TSE.2019.2891758
   Kaushik N, 2013, 2013 IEEE SIXTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST 2013), P70, DOI 10.1109/ICST.2013.40
   Ke G, 2018, TabNN: A Universal Neural Network Solution for Tabular Data
   Kochhar Pavneet Singh, 2014, P 2 ACM IEEE INT C, P803, DOI DOI 10.1145/2642937.2642997
   Kretsou M, 2021, J SYST SOFTWARE, V174, DOI 10.1016/j.jss.2020.110892
   KRUSKAL WH, 1952, J AM STAT ASSOC, V47, P583, DOI 10.1080/01621459.1952.10483441
   Le TDB, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P579, DOI 10.1145/2786805.2786880
   Levin S, 2017, PROC IEEE INT CONF S, P35, DOI 10.1109/ICSME.2017.9
   Li BX, 2013, SOFTW TEST VERIF REL, V23, P613, DOI 10.1002/stvr.1475
   Li XC, 2018, INT C PROGRAM COMPRE, P144, DOI 10.1145/3196321.3196326
   Li Z, 2006, P 1 WORKSH ARCH SYST, P25, DOI DOI 10.1145/1181309.1181314
   Ling CX, 2003, LECT NOTES ARTIF INT, V2671, P329
   Liu JP, 2017, INT SYMP EMP SOFTWAR, P11, DOI 10.1109/ESEM.2017.8
   Liyanage Y, 2018, IEEE GLOB CONF SIG, P106, DOI 10.1109/GlobalSIP.2018.8646639
   Malhotra Ruchika, 2020, 2020 8th International Conference on Reliability, Infocom Technologies and Optimization (Trends and Future Directions) (ICRITO), P1068, DOI 10.1109/ICRITO48877.2020.9198037
   Manning C. D., 2008, Introduction to information retrieval, DOI [DOI 10.1017/CBO9780511809071, 10.1017/CBO9780511809071]
   McHugh ML, 2012, BIOCHEM MEDICA, V22, P276, DOI 10.11613/bm.2012.031
   McIntosh S, 2016, EMPIR SOFTW ENG, V21, P2146, DOI 10.1007/s10664-015-9381-9
   Mikolov Tomas, 2013, Advances in Neural Information Processing Systems, P3111, DOI DOI 10.48550/ARXIV.1310.4546
   Mimno D, 2011, EMNLP, P262, DOI DOI 10.5555/2145432.2145462
   Misirli AT, 2016, EMPIR SOFTW ENG, V21, P605, DOI 10.1007/s10664-015-9370-z
   Morisaki S., 2007, P 4 INT WORKSHOP MIN, P3, DOI [10.1109/MSR.2007.5, DOI 10.1109/MSR.2007.5]
   Murali V, 2021, 2021 IEEE/ACM 43RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE (ICSE-SEIP 2021), P188, DOI 10.1109/ICSE-SEIP52600.2021.00028
   Nagappan N, 2005, PROC INT CONF SOFTW, P284, DOI 10.1145/1062455.1062514
   Naguib H, 2013, IEEE WORK CONF MIN S, P22, DOI 10.1109/MSR.2013.6623999
   Nam J, 2015, IEEE INT CONF AUTOM, P452, DOI 10.1109/ASE.2015.56
   Ni Z, 2020, J SYST SOFTWARE, V163, DOI 10.1016/j.jss.2020.110538
   Panjer LucasD., 2007, Proceedings of the 4th International Workshop on Mining Software Repositories, MSR '07, P29
   Pascarella L, 2018, IEEE WORK CONF MIN S, P392, DOI [10.1145/3196398.3196423, 10.1145/3196398.3196418]
   prweb, Cambridge University Study States Software Bugs Cost Economy $312 Billion Per Year
   Rahman A, 2020, arXiv
   Rahman A, 2020, PROC INT CONF SOFTW, P752, DOI 10.1145/3377811.3380409
   Rajbahadur GK, 2021, IEEE T SOFTWARE ENG, V48, P2245, DOI 10.1109/TSE.2021.3056941
   Reis C.R., 2002, OVERVIEW SOFTWARE EN
   Saha RK, 2015, INFORM SOFTWARE TECH, V65, P114, DOI 10.1016/j.infsof.2015.03.002
   Saini M, 2018, FRONT COMPUT SCI-CHI, V12, P1105, DOI 10.1007/s11704-016-6301-0
   Saldana J., 2016, CODING MANUAL QUALIT, DOI DOI 10.1017/CBO9781107415324.004
   Sánchez AB, 2020, IEEE ACCESS, V8, P107214, DOI 10.1109/ACCESS.2020.3000928
   Schrettner L, 2014, J SOFTW-EVOL PROC, V26, P569, DOI 10.1002/smr.1614
   Seaman C, 2008, ESEM'08: PROCEEDINGS OF THE 2008 ACM-IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, P149
   Seaman CB, 1999, IEEE T SOFTWARE ENG, V25, P557, DOI 10.1109/32.799955
   Sepahvand R, 2020, IET SOFTW, V14, P203, DOI 10.1049/iet-sen.2019.0260
   Singer L., 2012, Proceedings 2012 2nd International Workshop on Games and Software Engineering: Realizing User Engagement with Game Engineering Techniques (GAS 2012), P5, DOI 10.1109/GAS.2012.6225927
   Somasundaram K., 2012, Proceedings of the 5th India Software Engineering Conference, ISEC '12, P125, DOI DOI 10.1145/2134254.2134276
   Stevanetic S, 2018, EMPIR SOFTW ENG, V23, P3578, DOI 10.1007/s10664-017-9583-4
   Sun Chengnian, 2010, P 32 ACMIEEE INT C S, V1, P45, DOI [DOI 10.1145/1806799, 10.1145/1806799.1806811]
   Syed S, 2017, PR INT CONF DATA SC, P165, DOI 10.1109/DSAA.2017.61
   Tantithamthavorn C, 2018, The impact of automated parameter optimization for defect prediction models
   Tantithamthavorn C, 2017, IEEE T SOFTWARE ENG, V43, P1, DOI 10.1109/TSE.2016.2584050
   Thung F., 2012, Proceedings of the 2012 IEEE 23rd International Symposium on Software Reliability Engineering (ISSRE), P271, DOI 10.1109/ISSRE.2012.22
   Thung Ferdian., 2016, P 5 INT WORKSHOP SOF, P18
   Tse-Hsun Chen, 2012, 2012 9th IEEE Working Conference on Mining Software Repositories (MSR 2012), P189, DOI 10.1109/MSR.2012.6224280
   Tsipenyuk K, 2005, IEEE SECUR PRIV, V3, P81, DOI 10.1109/MSP.2005.159
   Valdivia-Garcia H, 2018, J SYST SOFTWARE, V143, P44, DOI 10.1016/j.jss.2018.03.053
   Vieira R, 2019, 15TH INTERNATIONAL CONFERENCE ON PREDICTIVE MODELS AND DATA ANALYTICS IN SOFTWARE ENGINEERING (PROMISE'19), P80, DOI 10.1145/3345629.3345639
   Wan ZY, 2017, IEEE WORK CONF MIN S, P413, DOI 10.1109/MSR.2017.59
   Wang J, 2015, INFORM SOFTWARE TECH, V67, P1, DOI 10.1016/j.infsof.2015.06.002
   Wang PP, 2020, IEEE WORK CONF MIN S, P103, DOI 10.1145/3379597.3387464
   Weiss C., 2007, 4 INTERNATIONALWORKS, P1, DOI [10.1109/MSR.2007.13, DOI 10.1109/MSR.2007.13]
   Wen M, 2021, IEEE T SOFTWARE ENG, V47, P2348, DOI 10.1109/TSE.2019.2948158
   Wen M, 2016, IEEE INT CONF AUTOM, P262, DOI 10.1145/2970276.2970359
   Wu RX, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P536, DOI 10.1145/3180155.3182516
   Xia X, 2017, IEEE T SOFTWARE ENG, V43, P272, DOI 10.1109/TSE.2016.2576454
   Xiaobing Sun, 2010, 2010 IEEE Proceedings of 34th Annual Computer Software and Applications Conference (COMPSAC 2010), P373, DOI 10.1109/COMPSAC.2010.45
   Xie X, 2012, P 8 INT C PRED MOD S, P19, DOI [DOI 10.1145/2365324.2365329, 10.1145/2365324.2365329]
   Xu TT, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: COMPANION PROCEEDINGS (ICSE-COMPANION 2019), P159, DOI 10.1109/ICSE-Companion.2019.00066
   Xuan JF, 2017, Arxiv, DOI arXiv:1704.04769
   Yan Meng, 2019, Empirical Software Engineering, V2019, P1
   Yang G, 2014, P INT COMP SOFTW APP, P97, DOI 10.1109/COMPSAC.2014.16
   Ye X, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P689, DOI 10.1145/2635868.2635874
   Yigit S, 2018, REVSTAT-STAT J, V16, P295
   Yuan W, 2021, PROC IEEE INT CONF S, P93, DOI 10.1109/ICSME52107.2021.00015
   Zaman S., 2012, 2012 9th IEEE Working Conference on Mining Software Repositories (MSR 2012), P199, DOI 10.1109/MSR.2012.6224281
   Zanjani Motahareh Bahrami, 2014, P 11 WORK C MIN SOFT, P162, DOI [10.1145/2597073.2597096, DOI 10.1145/2597073.2597096]
   Zhang HY, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P1042, DOI 10.1109/ICSE.2013.6606654
   Zhang M, 2017, P 26 ACM SIGS INT S, P261, DOI DOI 10.1145/3092703.3092731
   Zhang PC, 2020, PROC IEEE INT CONF S, P139, DOI 10.1109/ICSME46990.2020.00023
   Zhang YH, 2018, ISSTA'18: PROCEEDINGS OF THE 27TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P129, DOI 10.1145/3213846.3213866
   Zhao GL, 2021, ACM T SOFTW ENG METH, V30, DOI 10.1145/3440757
   Zibran MF, 2016, 2016 IEEE/ACM 38TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING COMPANION (ICSE-C), P713, DOI 10.1145/2889160.2892646
   Zimmermann T, 2010, IEEE T SOFTWARE ENG, V36, P618, DOI 10.1109/TSE.2010.63
   Zou WQ, 2020, IEEE T SOFTWARE ENG, V46, P836, DOI 10.1109/TSE.2018.2870414
NR 133
TC 0
Z9 0
U1 0
U2 4
PU ASSOC COMPUTING MACHINERY
PI NEW YORK
PA 1601 Broadway, 10th Floor, NEW YORK, NY USA
SN 1049-331X
EI 1557-7392
J9 ACM T SOFTW ENG METH
JI ACM Trans. Softw. Eng. Methodol.
PD NOV
PY 2023
VL 32
IS 6
AR 141
DI 10.1145/3593802
PG 34
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA U6DY2
UT WOS:001085699500008
DA 2024-07-18
ER

PT J
AU Joblin, M
   Eckl, B
   Bock, T
   Schmid, A
   Siegmund, J
   Apel, S
AF Joblin, Mitchell
   Eckl, Barbara
   Bock, Thomas
   Schmid, Angelika
   Siegmund, Janet
   Apel, Sven
TI Hierarchical and Hybrid Organizational Structures in Open-source
   Software Projects: A Longitudinal Study
SO ACM TRANSACTIONS ON SOFTWARE ENGINEERING AND METHODOLOGY
LA English
DT Article
DE Open-source software projects; developer networks; organizational
   structure; hierarchy
AB Despite the absence of a formal process and a central command-and-control structure, developer organization in open-source software (OSS) projects are far from being a purely random process. Prior work indicates that, over time, highly successful OSS projects develop a hybrid organizational structure that comprises a hierarchical part and a non-hierarchical part. This suggests that hierarchical organization is not necessarily a global organizing principle and that a fundamentally different principle is at play below the lowest positions in the hierarchy. Given the vast proportion of developers are in the non-hierarchical part, we seek to understand the interplay between these two fundamentally differently organized groups, how this hybrid structure evolves, and the trajectory individual developers take through these structures over the course of their participation. We conducted a longitudinal study of the full histories of 20 popular OSS projects, modeling their organizational structures as networks of developers connected by communication ties and characterizing developers' positions in terms of hierarchical (sub)structures in these networks. We observed a number of notable trends and patterns in the subject projects: (1) hierarchy is a pervasive structural feature of developer networks of OSS projects; (2) OSS projects tend to form hybrid organizational structures, consisting of a hierarchical and a non-hierarchical part; and (3) the positional trajectory of a developer starts loosely connected in the non-hierarchical part and then tightly integrate into the hierarchical part, which is associated with the acquisition of experience (tenure), in addition to coordination and coding activities. Our study (a) provides a methodological basis for further investigations of hierarchy formation, (b) suggests a number of hypotheses on prevalent organizational patterns and trends in OSS projects to be addressed in further work, and (c) may ultimately guide the governance of organizational structures.
C1 [Joblin, Mitchell] Saarland Univ, Saarbrucken, Germany.
   [Joblin, Mitchell] Siemens, Munich, Germany.
   [Eckl, Barbara] Univ Passau, Passau, Germany.
   [Bock, Thomas; Apel, Sven] Univ Saarland, Saarland Informat Campus, Saarbrucken, Germany.
   [Schmid, Angelika] IBM Corp, Ehningen, Germany.
   [Schmid, Angelika] Tech Univ Chemnitz, Chemnitz, Germany.
C3 Saarland University; Siemens AG; Siemens Germany; University of Passau;
   Saarland University; International Business Machines (IBM); Technische
   Universitat Chemnitz
RP Joblin, M (corresponding author), Saarland Univ, Saarbrucken, Germany.; Joblin, M (corresponding author), Siemens, Munich, Germany.
RI Bock, Thomas/HNS-9424-2023
OI Schmid, Angelika/0000-0002-9274-3666
FU German Research Foundation [AP 206/14-1]; Bavarian State Ministry of
   Education, Science, and the Arts
FX This work was supported by the German Research Foundation (AP 206/14-1)
   as well as the Bavarian State Ministry of Education, Science, and the
   Arts in the framework of the Center Digitisation.Bavaria (ZD.B).
CR Afsar B., 2015, International Journal of Information Systems and Change Management, V7, P263, DOI [10.1504/IJISCM.2015.075632, DOI 10.1504/IJISCM.2015.075632]
   [Anonymous], 2010, PROC 18 ACM SIGSOFT
   Bird Christian, 2009, 2009 20th International Symposium on Software Reliability Engineering (ISSRE 2009), P109, DOI 10.1109/ISSRE.2009.17
   Bird Christian, 2008, Proceedings of the 2008 ACM SIGSOFT Symposium on the Foundations of Software Engineering, P24
   Bird Christian., 2007, Proceedings of the Fourth International Workshop on Mining Software Repositories, MSR'07, P6
   Bock T, 2022, ACM T SOFTW ENG METH, V31, DOI 10.1145/3473139
   Cataldo M, 2009, IEEE T SOFTWARE ENG, V35, P864, DOI 10.1109/TSE.2009.42
   Cataldo M, 2008, ESEM'08: PROCEEDINGS OF THE 2008 ACM-IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, P2
   Catolino G, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN SOCIETY (ICSE-SEIS 2019), P11, DOI 10.1109/ICSE-SEIS.2019.00010
   Cheng C, 2017, J COMPUT SCI TECH-CH, V32, P396, DOI 10.1007/s11390-017-1728-9
   Crowston K., 2006, Knowledge Technology & Policy, V18, P65, DOI 10.1007/s12130-006-1004-8
   Di Penta Massimiliano, 2012, P ACM SIGSOFT 20 INT, P1
   El Mezouar M, 2019, EMPIR SOFTW ENG, V24, P3790, DOI 10.1007/s10664-019-09700-1
   Erdos P., 1959, Publicationes Mathematicae Debrecen, V6, P18
   Girvan M, 2002, P NATL ACAD SCI USA, V99, P7821, DOI 10.1073/pnas.122653799
   Golzadeh M, 2020, P 2020 IEEE ACM 42 I, P6, DOI [10.1145/3387940.3391503, DOI 10.1145/3387940.3391503]
   Golzadeh M, 2021, J SYST SOFTWARE, V175, DOI 10.1016/j.jss.2021.110911
   Hanisch Marvin., 2018, Academy of Management Proceedings, V2018, P14263
   Hemetsberger A, 2009, ORGAN STUD, V30, P987, DOI 10.1177/0170840609339241
   Herbold S, 2021, J SYST SOFTWARE, V171, DOI 10.1016/j.jss.2020.110802
   Herbsleb J., 2006, P INT C INF SYST ICI, P553
   Hinds P., 2006, P 2006 20 ANN C COMP, P343
   Honorio BC, 2018, 2018 SYMPOSIUM ON HIGH PERFORMANCE COMPUTING SYSTEMS (WSCAD 2018), P184, DOI 10.1109/WSCAD.2018.00037
   Hunsen C, 2020, EMPIR SOFTW ENG, V25, P4379, DOI 10.1007/s10664-020-09833-8
   Joblin M, 2022, ACM T SOFTW ENG METH, V31, DOI 10.1145/3504003
   Joblin M, 2017, PROC INT CONF SOFTW, P164, DOI 10.1109/ICSE.2017.23
   Joblin M, 2017, EMPIR SOFTW ENG, V22, P2050, DOI 10.1007/s10664-016-9478-9
   Joblin M, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P563, DOI 10.1109/ICSE.2015.73
   Long Y, 2007, J DATABASE MANAGE, V18, P25, DOI 10.4018/jdm.2007040102
   Lopez-Fernandez L., 2004, "International Workshop on Mining Software Repositories (MSR 2004)" W17S Workshop - 26th International Conference on Software Engineering, P101, DOI 10.1049/ic:20040485
   Mauerer W, 2022, IEEE T SOFTWARE ENG, V48, P3159, DOI 10.1109/TSE.2021.3082074
   Meneely A., 2008, P 16 ACM SIGSOFT INT, P13, DOI DOI 10.1145/1453101.1453106
   Meneely A, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P281, DOI 10.1145/1985793.1985832
   Mockus A, 2002, ACM T SOFTW ENG METH, V11, P309, DOI 10.1145/567793.567795
   Nagappan N, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P521, DOI 10.1145/1368088.1368160
   Newman MEJ, 2005, CONTEMP PHYS, V46, P323, DOI 10.1080/00107510500052444
   O'Mahony S, 2007, ACAD MANAGE J, V50, P1079
   Padhye R., 2014, Proceedings of the 11th Working Conference on Mining Software Repositories, P332, DOI 10.1145/2597073.2597113
   Rashid M, 2019, INT J INFORM MANAGE, V46, P104, DOI 10.1016/j.ijinfomgt.2018.11.015
   Ravasz E, 2003, PHYS REV E, V67, DOI 10.1103/PhysRevE.67.026112
   Robles G, 2009, 2009 6TH IEEE INTERNATIONAL WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES, P167, DOI 10.1109/MSR.2009.5069497
   Shin Y, 2011, IEEE T SOFTWARE ENG, V37, P772, DOI 10.1109/TSE.2010.81
   Steinmacher I, 2014, IFIP ADV INF COMM TE, V427, P153
   Storey MA, 2017, IEEE T SOFTWARE ENG, V43, P185, DOI 10.1109/TSE.2016.2584053
   Tamburri DA, 2021, IEEE T SOFTWARE ENG, V47, P630, DOI 10.1109/TSE.2019.2901490
   Tamburri DA, 2015, J INTERNET SERV APPL, V6, DOI 10.1186/s13174-015-0024-6
   Tamburri DA, 2013, ACM COMPUT SURV, V46, DOI 10.1145/2522968.2522971
   Weiss M, 2018, EUROPLOP 2018: PROCEEDINGS OF THE 23RD EUROPEAN CONFERENCE ON PATTERN LANGUAGES OF PROGRAMS, DOI 10.1145/3282308.3282332
   Wessel Mairieli, 2018, Proceedings of the ACM on Human-Computer Interaction, V2, DOI 10.1145/3274451
   Wolf T, 2009, PROC INT CONF SOFTW, P1, DOI 10.1109/ICSE.2009.5070503
   Ye YW, 2003, PROC INT CONF SOFTW, P419
   Zhou MH, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P27, DOI 10.1145/3106237.3106287
   Zhou MH, 2015, IEEE T SOFTWARE ENG, V41, P82, DOI 10.1109/TSE.2014.2349496
   Zhou MH, 2012, PROC INT CONF SOFTW, P518, DOI 10.1109/ICSE.2012.6227164
   Zhou MH, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P271, DOI 10.1145/1985793.1985831
NR 55
TC 1
Z9 1
U1 3
U2 4
PU ASSOC COMPUTING MACHINERY
PI NEW YORK
PA 1601 Broadway, 10th Floor, NEW YORK, NY USA
SN 1049-331X
EI 1557-7392
J9 ACM T SOFTW ENG METH
JI ACM Trans. Softw. Eng. Methodol.
PD JUL
PY 2023
VL 32
IS 4
AR 86
DI 10.1145/3569949
PG 29
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA L0SO0
UT WOS:001020441100005
OA Bronze
DA 2024-07-18
ER

PT J
AU Karanikolas, C
   Dimitroulakos, G
   Masselos, K
AF Karanikolas, Chris
   Dimitroulakos, Grigoris
   Masselos, Konstantinos
TI Simulating Software Evolution to Evaluate the Reliability of Early
   Decision-making among Design Alternatives toward Maintainability
SO ACM TRANSACTIONS ON SOFTWARE ENGINEERING AND METHODOLOGY
LA English
DT Article
DE Statistical validation; maintainability quality attribute requirement;
   software evolution; design pattern
ID PREDICTION; PROJECT; COMPLEXITY; DEFECTS
AB Critical decisions among design altern seventh atives with regards to maintainability arise early in the software design cycle. Existing comparison models relayed on the structural evolution of the used design patterns are suitable to support such decisions. However, their effectiveness on predicting maintenance effort is usually verified on a limited number of case studies under heterogeneous metrics. In this article, a multi-variable simulation model for validating the decision-making reliability of the derived formal comparison models for the significant designing problem of recursive hierarchies of part-whole aggregations, proposed in our prior work, is introduced. In the absence of a strict validation, the simulation model has been thoroughly calibrated concerning its decision-making precision based on empirical distributions from time-series analysis, approximating the highly uncertain nature of actual maintenance process. The decision reliability of the formal models has been statistically validated on a sample of 1,000 instances of design attributes representing the entire design space of the problem. Despite the limited accuracy of measurements, the results show that the models demonstrate an increasing reliability in a long-term perspective, even under assumptions of high variability. Thus, the modeling theory discussed in our prior work delivers reliable models that significantly reduce decision-risk and relevant maintenance
C1 [Karanikolas, Chris; Dimitroulakos, Grigoris; Masselos, Konstantinos] Univ Peloponnese, Dept Informat & Telecommun, Tripoli, Greece.
   [Karanikolas, Chris; Dimitroulakos, Grigoris; Masselos, Konstantinos] Univ Peloponnese, Dept Informat & Telecommun, Karaiskaki St, Tripoli 22100, Arkadia, Greece.
C3 University of Peloponnese; University of Peloponnese
RP Karanikolas, C (corresponding author), Univ Peloponnese, Dept Informat & Telecommun, Karaiskaki St, Tripoli 22100, Arkadia, Greece.
EM karanikolas@uop.gr; dhmhgre@uop.gr; kmas@uop.gr
OI Dimitroulakos, Grigoris/0000-0001-7580-3914
CR Alexandrescu A., 2001, Modern C++ Design: Generic Programming and Design Patterns Applied
   Aloysius A., 2013, INT J ADV RES COMPUT, V3, P1599
   [Anonymous], 2011, ISO/IEC 25010:2011
   [Anonymous], 2000, Software Cost Estimation with COCOMO II
   Antoniol G, 1998, FIFTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM - METRICS 1998, PROCEEDINGS, P23, DOI 10.1109/METRIC.1998.731224
   Antoniol G, 2001, PROC IEEE INT CONF S, P273, DOI 10.1109/ICSM.2001.972740
   Antoniol G., 1999, Empirical Software Engineering, V4, P263, DOI 10.1023/A:1009834811663
   Arbuckle T, 2011, SCI COMPUT PROGRAM, V76, P1078, DOI 10.1016/j.scico.2010.11.005
   Aroonvatanaporn P., 2010, P IEEEACM INT C AUTO, P337, DOI DOI 10.1145/1858996.1859065
   Aversano L, 2009, IET SOFTW, V3, P395, DOI 10.1049/iet-sen.2008.0105
   Bakota T, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P316, DOI 10.1109/ICSM.2012.6405288
   Barros MD, 2004, J SYST SOFTWARE, V70, P21, DOI 10.1016/S0164-1212(02)00155-3
   Barry EJ, 2007, J SOFTW MAINT EVOL-R, V19, P1, DOI 10.1002/smr.342
   BASILI VR, 1988, IEEE T SOFTWARE ENG, V14, P758, DOI 10.1109/32.6156
   Bass Len, 2012, SEI S SOFTW
   Bengtsson P, 1999, PROCEEDINGS OF THE THIRD EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, P139, DOI 10.1109/CSMR.1999.756691
   Berenson M.L., 2012, BASIC BUSINESS STAT
   Bernal C, 2010, IEEE INT SYMP CIRC S, P3000, DOI 10.1109/ISCAS.2010.5538015
   Bhattacharya R.N., 2009, Stochastic processes with applications
   Boehm B., 1995, Annals of Software Engineering, V1, P57, DOI 10.1007/BF02249046
   Boehm B, 2008, COMPUTER, V41, P32, DOI 10.1109/MC.2008.91
   BOEHM BW, 1984, IEEE T SOFTWARE ENG, V10, P4, DOI 10.1109/TSE.1984.5010193
   Bosch J, 2001, FIFTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P168, DOI 10.1109/CSMR.2001.914981
   Briand L., 1996, Empirical Software Engineering, V1, P61, DOI 10.1007/BF00125812
   Briand LC, 2002, IEEE T SOFTWARE ENG, V28, P706, DOI 10.1109/TSE.2002.1019484
   Caldiera G, 1998, FIFTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM - METRICS 1998, PROCEEDINGS, P167, DOI 10.1109/METRIC.1998.731242
   Canfora Gerardo, 2010, Proceedings of the 18th IEEE International Conference on Program Comprehension (ICPC 2010), P134, DOI 10.1109/ICPC.2010.32
   Chapin N, 2001, J SOFTW MAINT EVOL-R, V13, P3, DOI 10.1002/smr.220
   Chong Hok Yuen C. K. S., 1988, Proceedings of the Conference on Software Maintenance - 1988 (IEEE Cat. No.88CH2615-3), P248, DOI 10.1109/ICSM.1988.10170
   COOK CR, 1994, J SYST SOFTWARE, V24, P223, DOI 10.1016/0164-1212(94)90065-5
   Cook T. D., 1979, QUASIEXPERIMENTATION
   Curtis B, 2009, IEEE SOFTWARE, V26, P57
   Dascalu S, 2005, 2005 IEEE International Symposium on Signal Processing and Information Technology (ISSPIT), Vols 1 and 2, P699
   Demeyer S., 2001, IWPSE 01, P174, DOI [10.1145/602461.602502, DOI 10.1145/602461.602502]
   Dolado JJ, 2001, INFORM SOFTWARE TECH, V43, P61, DOI 10.1016/S0950-5849(00)00137-3
   DURRETT R, PROBABILITY THEORY E
   Eveleens JL, 2009, SCI COMPUT PROGRAM, V74, P934, DOI 10.1016/j.scico.2009.09.005
   Gall H, 1997, INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE, PROCEEDINGS, P160, DOI 10.1109/ICSM.1997.624242
   Gall H, 1998, PROC IEEE INT CONF S, P190, DOI 10.1109/ICSM.1998.738508
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   Glass R. L., 2002, FACTS FALLACIES SOFT
   Guderlei R., 2007, P 4 INT WORKSHOP SOF, P46, DOI [10.1145/1295074.1295084, DOI 10.1145/1295074.1295084]
   Hannay JE, 2008, IEEE T SOFTWARE ENG, V34, P242, DOI 10.1109/TSE.2008.13
   Hassan AE, 2009, PROC INT CONF SOFTW, P78, DOI 10.1109/ICSE.2009.5070510
   Hayes JH, 2005, PROC IEEE INT CONF S, P601
   Hayes JH, 2004, CSMR 2004: EIGHTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P254, DOI 10.1109/CSMR.2004.1281427
   Heitlager I, 2007, QUATIC 2007: 6TH INTERNATIONAL CONFERENCE ON THE QUALITY OF INFORMATION AND COMMUNICATIONS TECHNOLOGY, PROCEEDINGS, P30, DOI 10.1109/QUATIC.2007.8
   Hills M, 2011, LECT NOTES COMPUT SC, V6705, P228, DOI 10.1007/978-3-642-21952-8_17
   IEEE Standards Association, 2010, 247652010 ISOIECIEEE
   ISO/IEC, 2016, 25023 ISO IEC
   Jabangwe R, 2015, EMPIR SOFTW ENG, V20, P640, DOI 10.1007/s10664-013-9291-7
   Jazayeri M, 2002, LECT NOTES COMPUT SC, V2361, P13
   Karanikolas C., 2021, EXPT RESULTS FORMAL
   Karanikolas C., OPEN RES DOMAIN
   Karanikolas C, 2017, ACM T SOFTW ENG METH, V26, DOI 10.1145/3132731
   Keller R. K., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P226, DOI 10.1109/ICSE.1999.841012
   Kelsen P, 2004, PROG COMPREHEN, P46, DOI 10.1109/WPC.2004.1311046
   Kemerer CF, 1999, IEEE T SOFTWARE ENG, V25, P493, DOI 10.1109/32.799945
   Kruchten P, 2012, IEEE SOFTWARE, V29, P18, DOI 10.1109/MS.2012.167
   Langdon WB, 2016, INFORM SOFTWARE TECH, V73, P16, DOI 10.1016/j.infsof.2016.01.003
   Lehman MM, 1997, FOURTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM, PROCEEDINGS, P20, DOI 10.1109/METRIC.1997.637156
   Lehman MM, 2002, ANN SOFTW ENG, V14, P275, DOI 10.1023/A:1020557525901
   Lehman MM, 1998, FIFTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM - METRICS 1998, PROCEEDINGS, P84, DOI 10.1109/METRIC.1998.731229
   Meli R., 1997, IFPUG FALL C
   Mens T., 2001, P 4 INT WORKSHOP PRI, P83, DOI [DOI 10.1145/602461.602476, 10.1145/602461.602476]
   Mens T, 2005, ELECTRON NOTES THEOR, V127, P147, DOI 10.1016/j.entcs.2004.08.041
   Montgomery D.C., 2012, Design and Analysis of Experiments, Veighth
   Muller Mark, 2008, Guide to Advanced Empirical Software Engineering, P117, DOI DOI 10.1007/978-1-84800-044-5_5
   Musilek P, 2002, EIGHTH IEEE SYMPOSIUM ON SOFTWARE METRICS, PROCEEDINGS, P13, DOI 10.1109/METRIC.2002.1011321
   de França BBN, 2016, EMPIR SOFTW ENG, V21, P1302, DOI 10.1007/s10664-015-9386-4
   Oliveira BCDS, 2008, OOPSLA 2008 NASHVILLE, CONFERENCE PROCEEDINGS, P439
   Ostberg Jan-Peter, 2014, 2014 Joint Conference of the International Workshop on Software Measurement and the International Conference on Software Process and Product Measurement. (IWSM-MENSURA). Proceedings, P32, DOI 10.1109/IWSM.Mensura.2014.19
   Paixao M, 2017, IEEE INT CONF AUTOM, P95, DOI 10.1109/ASE.2017.8115622
   Palsberg J, 1998, P INT COMP SOFTW APP, P9, DOI 10.1109/CMPSAC.1998.716629
   PARNAS DL, 1994, PROC INT CONF SOFTW, P279, DOI 10.1109/ICSE.1994.296790
   Araujo MAP, 2012, INT SYMP EMP SOFTWAR, P281, DOI 10.1145/2372251.2372303
   Pressman R. S., 2010, Software Engineering: A Practitioner's Approach
   Raja U, 2009, J SOFTW MAINT EVOL-R, V21, P49, DOI 10.1002/smr.398
   Ramil JF, 2000, SEVENTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM - METRICS 2001, PROCEEDINGS, P199, DOI 10.1109/METRIC.2001.915529
   Ramil JF, 2000, PROC IEEE INT CONF S, P163, DOI 10.1109/ICSM.2000.883036
   Riaz M, 2009, INT SYMP EMP SOFTWAR, P368, DOI 10.1109/esem.2009.5314233
   Riehle D, 2009, OOPSLA 2009, CONFERENCE PROCEEDINGS, P469
   Rubinstein R.Y., 2016, Simulation and the Monte Carlo method
   Shepperd M, 2012, INFORM SOFTWARE TECH, V54, P820, DOI 10.1016/j.infsof.2011.12.008
   Sommerville I., 2010, SOFTWARE ENG
   Srivastava B, 2004, CSMR 2004: EIGHTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P125
   Stol KJ, 2018, ACM T SOFTW ENG METH, V27, DOI 10.1145/3241743
   Stol KJ, 2016, INFORM SOFTWARE TECH, V70, P176, DOI 10.1016/j.infsof.2015.07.010
   Stopford B, 2008, ACM T MODEL COMPUT S, V18, DOI 10.1145/1391978.1391983
   Visser J, 2001, ACM SIGPLAN NOTICES, V36, P270, DOI 10.1145/504311.504302
   Williams BJ, 2010, INFORM SOFTWARE TECH, V52, P31, DOI 10.1016/j.infsof.2009.07.002
   Wohlin C., 2012, Experimentation in Software Engineering
   Woolf M, 2016, VISUALIZING DEV RATE
   Wu H, 2016, PROC IEEE INT CONF S, P32, DOI 10.1109/ICSME.2016.87
   Xiao L, 2016, PROC INT CONF SOFTW, P488, DOI 10.1145/2884781.2884822
   Yazdi HS, 2016, J SYST SOFTWARE, V118, P176, DOI 10.1016/j.jss.2016.05.010
   Ye KQ, 1998, J AM STAT ASSOC, V93, P1430, DOI 10.2307/2670057
   Zeigler BP, 2018, SYSTEMS, V6, DOI 10.3390/systems6040040
   Zhang Junguang, 2008, 2008 International Conference on Computer Science and Software Engineering (CSSE 2008), P11, DOI 10.1109/CSSE.2008.726
NR 99
TC 0
Z9 0
U1 2
U2 3
PU ASSOC COMPUTING MACHINERY
PI NEW YORK
PA 1601 Broadway, 10th Floor, NEW YORK, NY USA
SN 1049-331X
EI 1557-7392
J9 ACM T SOFTW ENG METH
JI ACM Trans. Softw. Eng. Methodol.
PD JUL
PY 2023
VL 32
IS 3
AR 70
DI 10.1145/3569931
PG 38
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA I4NV8
UT WOS:001002573400015
DA 2024-07-18
ER

PT J
AU Tang, SC
   Zhang, ZY
   Zhang, Y
   Zhou, JX
   Guo, Y
   Liu, S
   Guo, SJ
   Li, YF
   Ma, L
   Xue, YX
   Liu, Y
AF Tang, Shuncheng
   Zhang, Zhenya
   Zhang, Yi
   Zhou, Jixiang
   Guo, Yan
   Liu, Shuang
   Guo, Shengjian
   Li, Yan-Fu
   Ma, Lei
   Xue, Yinxing
   Liu, Yang
TI A Survey on Automated Driving System Testing: Landscapes and Trends
SO ACM TRANSACTIONS ON SOFTWARE ENGINEERING AND METHODOLOGY
LA English
DT Article
DE ADS testing; module-level testing; system-level testing; system security
ID LEARNING ALGORITHMS; SIMULATION; FALSIFICATION; PERSPECTIVES; NETWORK;
   DATASET; ATTACKS; VISION; SAFETY
AB Automated Driving Systems (ADS) have made great achievements in recent years thanks to the efforts from both academia and industry. A typical ADS is composed of multiple modules, including sensing, perception, planning, and control, which brings together the latest advances in different domains. Despite these achievements, safety assurance of ADS is of great significance, since unsafe behavior of ADS can bring catastrophic consequences. Testing has been recognized as an important system validation approach that aims to expose unsafe system behavior; however, in the context of ADS, it is extremely challenging to devise effective testing techniques, due to the high complexity and multidisciplinarity of the systems. There has been great much literature that focuses on the testing of ADS, and a number of surveys have also emerged to summarize the technical advances. Most of the surveys focus on the system-level testing performed within software simulators, and they thereby ignore the distinct features of different modules. In this article, we provide a comprehensive survey on the existing ADS testing literature, which takes into account both module-level and system-level testing. Specifically, we make the following contributions:(1) We survey the module-level testing techniques for ADS and highlight the technical differences affected by the features of different modules; (2) we also survey the system-level testing techniques, with focuses on the empirical studies that summarize the issues occurring in system development or deployment, the problems due to the collaborations between different modules, and the gap between ADS testing in simulators and the real world; and (3) we identify the challenges and opportunities in ADS testing, which pave the path to the future research in this field.
C1 [Tang, Shuncheng; Zhang, Yi; Zhou, Jixiang; Guo, Yan; Xue, Yinxing] Univ Sci & Technol China, 96 Jinzhai Rd, Hefei City, Anhui Province, Peoples R China.
   [Zhang, Zhenya] Kyushu Univ, 744 Motooka Nishi Ku, Fukuoka 8190395, Japan.
   [Liu, Shuang] Tianjin Univ, Coll Intelligence & Comp, 135 Yaguan Rd, Tianjin 300350;, Peoples R China.
   [Guo, Shengjian] Baidu Secur, 1195 Bordeaux Dr, Sunnyvale, CA 94089 USA.
   [Li, Yan-Fu] Tsinghua Univ, Dept Ind Engn, 30 Shuangqing Rd, Beijing 100084, Peoples R China.
   [Ma, Lei] Univ Alberta, Alberta Machine Intelligence Inst, 116 St & 85 Ave, Edmonton, AB T6G 2R3, Canada.
   [Ma, Lei] Kyushu Univ, 744 Motooka,Nishi Ku, Fukuoka 8190395;, Japan.
   [Liu, Yang] Nanyang Technol Univ, Sch Comp Sci & Engn, 50 Nanyang Ave, Singapore 639798;, Singapore.
C3 Chinese Academy of Sciences; University of Science & Technology of
   China, CAS; Kyushu University; Tianjin University; Tsinghua University;
   University of Alberta; Kyushu University; Nanyang Technological
   University
RP Xue, YX (corresponding author), Univ Sci & Technol China, 96 Jinzhai Rd, Hefei City, Anhui Province, Peoples R China.
EM scttt@mail.ustc.edu.cn; zhang@ait.kyushu-u.ac.jp;
   zhangyi2122@mail.ustc.edu.cn; zjxmail@mail.ustc.edu.cn;
   guoyan@ustc.edu.cn; shuang.liu@tju.edu.cn; sjguo@baidu.com;
   liyanfu@tsinghua.edu.cn; ma.lei@acm.org; yxxue@ustc.edu.cn;
   yangliu@ntu.edu.sg
RI Li, Yan-Fu/B-6610-2014
OI Li, Yan-Fu/0000-0001-5755-7115; Zhang, Zhenya/0000-0002-3854-9846; Liu,
   Shuang/0000-0001-8766-7235
FU Anhui Provincial Department of Science and Technology [202103a05020009];
   National Natural Science Foundation of China [61972373]; Basic Research
   Program of Jiangsu Province [BK20201192]; National Research Foundation
   Singapore under its NSoE Programme [NSOE-TSS2019-03]; CAS Pioneer
   Hundred Talents Program of China; Canada CIFAR AI Chairs Program; NSERC
   [RGPIN-2021-02549, RGPAS-2021-00034, DGECR-2021-00019]; JSPS KAKENHI
   [JP20H04168, JP21H04877]; JST-Mirai Program Grant [JPMJMI20B8]
FX This work was supported in part by the Anhui Provincial Department of
   Science and Technology under Grant 202103a05020009, in part by National
   Natural Science Foundation of China under Grant 61972373, the Basic
   Research Program of Jiangsu Province under Grant BK20201192 and the
   National Research Foundation Singapore under its NSoE Programme (Award
   Number: NSOE-TSS2019-03). The research of Dr. Xue is also supported by
   CAS Pioneer Hundred Talents Program of China. Lei Ma's research was
   supported in part by Canada CIFAR AI Chairs Program, NSERC (No.
   RGPIN-2021-02549, No. RGPAS-2021-00034, No. DGECR-2021-00019), as well
   as JSPS KAKENHI Grant No. JP20H04168, No. JP21H04877, JST-Mirai Program
   Grant No. JPMJMI20B8.
CR Agarwal S, 2020, INT J ROBOT RES, V39, P1367, DOI 10.1177/0278364920961451
   Akagi Y, 2019, IEEE INT C INTELL TR, P667, DOI 10.1109/ITSC.2019.8917311
   Alexiadis V, 2004, ITE J, V74, P22
   Almqvist S., 1991, Transport. Res. Rec., P34
   Althoff M, 2018, IEEE INT VEH SYM, P1326, DOI 10.1109/IVS.2018.8500374
   Althoff M, 2017, IEEE INT VEH SYM, P719, DOI 10.1109/IVS.2017.7995802
   Annapureddy Y, 2011, LECT NOTES COMPUT SC, V6605, P254, DOI 10.1007/978-3-642-19835-9_21
   [Anonymous], 2022, CRASHD DAT
   [Anonymous], 2022, Bay City News
   [Anonymous], MICROSOFT
   [Anonymous], 2019, TEST AUT VEH DRIV
   [Anonymous], 2021, ABOUT US
   [Anonymous], 2000, Meas. Sci. Technol, V11, P1828, DOI DOI 10.1088/0957-0233/11/12/708
   Antkiewicz Michal, 2020, SAE International Journal of Advances and Current Practices in Mobility, P2248, DOI 10.4271/2020-01-1204
   Arcaini P, 2022, IEEE INT CONF SOFTW, P279, DOI 10.1109/ICST53961.2022.00037
   Arcaini P, 2021, IEEE INT CONF SOFTW, P295, DOI 10.1109/ICST49551.2021.00042
   Athalye A, 2018, PR MACH LEARN RES, V80
   AVSIMULATION, SCANER STUD
   Aziz HM Abdul, 2021, P 14 ACM SIGSPATIAL, P1
   Bäck T, 1993, EVOL COMPUT, V1, P1, DOI 10.1162/evco.1993.1.1.1
   Bai TT, 2021, IEEE I C SQRS-C, P38, DOI 10.1109/QRS-C55045.2021.00016
   Baidu, APOLLOSCAPE
   Bak S, 2022, IEEE INT VEH SYM, P806, DOI 10.1109/IV51971.2022.9827237
   Balaji B, 2020, IEEE INT CONF ROBOT, P2746, DOI [10.1109/ICRA40945.2020.9197465, 10.1109/icra40945.2020.9197465]
   Balakrishnan A, 2021, LECT NOTES COMPUT SC, V12974, P297, DOI 10.1007/978-3-030-88494-9_18
   Bartocci Ezio, 2018, Lectures on Runtime. Verification Introductory and Advanced Topics. LNCS 10457, P135, DOI 10.1007/978-3-319-75632-5_5
   Bashetty Sai Krishna, 2020, 2020 IEEE International Conference on Robotics and Automation (ICRA), P11353, DOI 10.1109/ICRA40945.2020.9197053
   Batsch F, 2021, APPL SCI-BASEL, V11, DOI 10.3390/app11020775
   Batsch F, 2019, IEEE INT C INTELL TR, P419, DOI 10.1109/ITSC.2019.8917119
   Baumann D, 2021, VEH TECHNOL CONFE, DOI 10.1109/VTC2021-Spring51267.2021.9448686
   BeamNG Gmbh, BEAMNG GMBH
   BEGLEROVIC H, 2017, 2017 IEEE 20 INT C I, P1, DOI DOI 10.1109/ITSC.2017.8317768
   Belbachir A, 2012, PROCD SOC BEHV, V48, P1205, DOI 10.1016/j.sbspro.2012.06.1096
   Ben Abdessalem R, 2018, IEEE INT CONF AUTOM, P143, DOI 10.1145/3238147.3238192
   Ben Abdessalem R, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1016, DOI 10.1145/3180155.3180160
   Ben Abdessalem R, 2016, IEEE INT CONF AUTOM, P63, DOI 10.1145/2970276.2970311
   Ben Sinai M, 2014, Arxiv, DOI arXiv:1410.0151
   Birchler C, 2022, EUR CON SFTWR MTNCE, P164, DOI 10.1109/SANER53432.2022.00030
   Birchler C, 2023, ACM T SOFTW ENG METH, V32, DOI 10.1145/3533818
   Birkemeyer L, 2022, VAMOS'22: 16TH INTERNATIONAL WORKING CONFERENCE ON VARIABILITY MODELLING OF SOFTWARE-INTENSIVE SYSTEMS, DOI 10.1145/3510466.3510474
   Bochkovskiy A, 2020, Arxiv, DOI arXiv:2004.10934
   Bock Florian, 2019, 2019 IEEE International Systems Conference (SysCon), P1
   Bock J, 2020, IEEE INT VEH SYM, P1929, DOI 10.1109/IV47402.2020.9304839
   Boggs AM, 2020, ACCIDENT ANAL PREV, V136, DOI 10.1016/j.aap.2019.105406
   Bojarski M, 2016, Arxiv, DOI [arXiv:1604.07316, 10.48550/arXiv.1604.07316]
   Boloor A, 2019, IEEE I C EMBED SOFTW, DOI 10.1109/icess.2019.8782514
   Boloor A, 2020, J SYST ARCHITECT, V110, DOI 10.1016/j.sysarc.2020.101766
   Borg M, 2021, IEEE INT CONF SOFTW, P383, DOI 10.1109/ICST49551.2021.00050
   Breuer A, 2020, IEEE INT C INTELL TR, DOI 10.1109/itsc45102.2020.9294301
   Brogle C, 2019, IEEE T INTELL VEHICL, V4, P375, DOI 10.1109/TIV.2019.2919457
   Caesar Holger, 2020, 2020 IEEE/CVF Conference on Computer Vision and Pattern Recognition (CVPR). Proceedings, P11618, DOI 10.1109/CVPR42600.2020.01164
   Calò A, 2020, GECCO'20: PROCEEDINGS OF THE 2020 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P1055, DOI 10.1145/3377930.3389827
   Calò A, 2020, IEEE INT CONF SOFTW, P375, DOI 10.1109/ICST46399.2020.00045
   Camacho E.F., 2013, Model predictive control
   Cao YL, 2019, PROCEEDINGS OF THE 2019 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY (CCS'19), P2267, DOI 10.1145/3319535.3339815
   Castellano E, 2021, IEEE INT C S Q R S, P167, DOI 10.1109/QRS54544.2021.00028
   Castellano E, 2021, 2021 IEEE/ACM 14TH INTERNATIONAL WORKSHOP ON SEARCH-BASED SOFTWARE TESTING (SBST 2021), P36, DOI 10.1109/SBST52555.2021.00016
   Chandrasekaran J, 2021, IEEE ICST WORKSHOP, P57, DOI 10.1109/ICSTW52544.2021.00022
   Changwen Li, 2022, 2022 International Conference on Robotics and Automation (ICRA), P7738, DOI 10.1109/ICRA46639.2022.9811794
   Chen C, 2021, INT J INTELL SYST, V36, P1441, DOI 10.1002/int.22349
   Chen CY, 2015, IEEE I CONF COMP VIS, P2722, DOI 10.1109/ICCV.2015.312
   Chen D., 2020, P C ROB LEARN, P66
   Chen LCE, 2018, LECT NOTES COMPUT SC, V11211, P833, DOI 10.1007/978-3-030-01234-2_49
   Chen ST, 2019, LECT NOTES ARTIF INT, V11051, P52, DOI 10.1007/978-3-030-10925-7_4
   Chen ST, 2019, IEEE T INTELL VEHICL, V4, P425, DOI 10.1109/TIV.2019.2919470
   Chen TY, 2020, Arxiv, DOI [arXiv:2002.12543, DOI 10.48550/ARXIV.2002.12543]
   Chen WH, 2017, PROC CVPR IEEE, P1320, DOI 10.1109/CVPR.2017.145
   Chen Y, 2020, IEEE INT VEH SYM, P1283, DOI [10.1109/iv47402.2020.9304658, 10.1109/IV47402.2020.9304658]
   Chen Y, 2018, IEEE INT VEH SYM, P949, DOI 10.1109/IVS.2018.8500461
   Cheng CH, 2018, LECT NOTES COMPUT SC, V11138, P126, DOI 10.1007/978-3-030-01090-4_8
   Choi JI, 2022, IEEE INT VEH SYM, P1011, DOI 10.1109/IV51971.2022.9827222
   Cordts M, 2016, PROC CVPR IEEE, P3213, DOI 10.1109/CVPR.2016.350
   Corso A., 2020, 2020 IEEE 23rd International Conference on Intelligent Transportation Systems (ITSC), P1
   Corso A, 2019, IEEE INT C INTELL TR, P163, DOI 10.1109/ITSC.2019.8917242
   Cui J, 2019, AD HOC NETW, V90, DOI 10.1016/j.adhoc.2018.12.006
   Cyberbotics Ltd, WEB
   Dai A, 2017, PROC CVPR IEEE, P6545, DOI 10.1109/CVPR.2017.693
   Das S, 2020, IATSS RES, V44, P300, DOI 10.1016/j.iatssr.2020.03.001
   Department for Transport, 2019, ROAD SAF DAT STATS19
   Ding SH, 2019, L N INST COMP SCI SO, V304, P299, DOI 10.1007/978-3-030-37228-6_15
   Djoudi Adel, 2020, P IEEE 23 INT C INT, P1
   Dokhanchi A, 2018, LECT NOTES COMPUT SC, V11237, P409, DOI 10.1007/978-3-030-03769-7_23
   Donzé A, 2010, LECT NOTES COMPUT SC, V6174, P167, DOI 10.1007/978-3-642-14295-6_17
   Dosovitskiy A., 2017, P 1 ANN C ROB LEARN, P1, DOI DOI 10.48550/ARXIV.1711.03938
   Dreossi T, 2019, J AUTOM REASONING, V63, P1031, DOI 10.1007/s10817-018-09509-5
   Eberhart R.C., 1995, Proc Int Symp Micro Mach Hum Sci, P39, DOI [DOI 10.1109/MHS.1995.494215, 10.1109/mhs.1995.494215]
   El Mostadi M, 2022, IEEE INT VEH SYM, P836, DOI 10.1109/IV51971.2022.9827170
   Ernst Gidon., 2021, 8 INT WORKSHOP APPL, P133
   Esenturk E, 2021, IEEE INT VEH SYM, P288, DOI 10.1109/IV48863.2021.9576007
   Eykholt K, 2018, PROC CVPR IEEE, P1625, DOI 10.1109/CVPR.2018.00175
   Favarò FM, 2017, PLOS ONE, V12, DOI 10.1371/journal.pone.0184952
   Fremont DJ, 2020, IEEE INT C INTELL TR, DOI 10.1109/itsc45102.2020.9294368
   Fremont DJ, 2019, PROCEEDINGS OF THE 40TH ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION (PLDI '19), P63, DOI 10.1145/3314221.3314633
   Howard AG, 2017, Arxiv, DOI arXiv:1704.04861
   Gambi A, 2022, 15TH SEARCH-BASED SOFTWARE TESTING WORKSHOP (SBST 2022), P25, DOI 10.1145/3526072.3527538
   Gambi A, 2019, PROCEEDINGS OF THE 28TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA '19), P318, DOI 10.1145/3293882.3330566
   Gambi A, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P257, DOI 10.1145/3338906.3338942
   Gao Y, 2020, IEEE INT C INTELL TR, DOI 10.1109/itsc45102.2020.9294704
   Garcia J, 2020, PROC INT CONF SOFTW, P385, DOI 10.1145/3377811.3380397
   Geiger A, 2013, INT J ROBOT RES, V32, P1231, DOI 10.1177/0278364913491297
   Gildenblat Jacob, 2016, Visualizations for understanding the regressed wheel steering angle for self driving cars
   Gladisch C, 2020, IEEE COMPUT SOC CONF, P1314, DOI 10.1109/CVPRW50498.2020.00170
   Gog I, 2022, PROCEEDINGS OF THE SEVENTEENTH EUROPEAN CONFERENCE ON COMPUTER SYSTEMS (EUROSYS '22), P453, DOI 10.1145/3492321.3519576
   Gog I, 2021, IEEE INT CONF ROBOT, P8806, DOI 10.1109/ICRA48506.2021.9561747
   Goodfellow I, 2014, ADV NEURAL INFORM PR, P2672
   Goss Quentin, 2022, P INT C CONNECTED VE, P1
   Grigorescu S, 2020, J FIELD ROBOT, V37, P362, DOI 10.1002/rob.21918
   Han Jia Cheng, 2020, P IEEEACM 42 INT C S, P380
   Harel-Canada F, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P851, DOI 10.1145/3368089.3409754
   Hauer F, 2019, IEEE INT C INTELL TR, P2950, DOI 10.1109/ITSC.2019.8917326
   Hauer F, 2019, LECT NOTES COMPUT SC, V11698, P69, DOI 10.1007/978-3-030-26601-1_5
   He KM, 2017, IEEE I CONF COMP VIS, P2980, DOI [10.1109/ICCV.2017.322, 10.1109/TPAMI.2018.2844175]
   He KM, 2016, PROC CVPR IEEE, P770, DOI 10.1109/CVPR.2016.90
   Hiblot Nicolas, 2010, P DSC THESS GREEC 13, P277
   Horváth MT, 2019, TRANSP TELECOMMUN J, V20, P153, DOI 10.2478/ttj-2019-0014
   Hu P., 2020, P IEEE CVF C COMP VI, P11001
   Huang ZY, 2018, IEEE T INTELL TRANSP, V19, P2845, DOI 10.1109/TITS.2017.2766172
   Huang ZY, 2018, P AMER CONTR CONF, P4796, DOI 10.23919/ACC.2018.8431590
   Huang ZY, 2017, IEEE INT C INTELL TR
   Hubschneider C, 2017, IEEE INT C INTELL TR
   Husheng Zhou, 2020, 2020 IEEE/ACM 42nd International Conference on Software Engineering (ICSE), P347, DOI 10.1145/3377811.3380422
   Hussain M, 2022, AUTOMAT SOFTW ENG, V29, DOI 10.1007/s10515-021-00310-0
   IPG, CARMAKER
   Jahangirova G, 2021, IEEE INT CONF SOFTW, P194, DOI 10.1109/ICST49551.2021.00030
   Jiang WB, 2020, IEEE T VEH TECHNOL, V69, P4439, DOI 10.1109/TVT.2020.2977378
   Johnson J, 2016, LECT NOTES COMPUT SC, V9906, P694, DOI 10.1007/978-3-319-46475-6_43
   Johnson M. A., 2005, PID control
   Uriagereka GJ, 2017, IEEE INT VEH SYM, P1867, DOI 10.1109/IVS.2017.7995977
   Julier SJ, 1997, P SOC PHOTO-OPT INS, V3068, P182, DOI 10.1117/12.280797
   Kahn Maximilian, 2022, 2022 International Conference on Robotics and Automation (ICRA), P11202, DOI 10.1109/ICRA46639.2022.9812041
   Kalra N, 2016, TRANSPORT RES A-POL, V94, P182, DOI 10.1016/j.tra.2016.09.010
   Karunakaran D, 2020, IEEE INT C INTELL TR, DOI 10.1109/itsc45102.2020.9294590
   Kato S, 2018, ACM IEEE INT CONF CY, P287, DOI 10.1109/ICCPS.2018.00035
   Kerber J, 2020, IEEE INT VEH SYM, P578, DOI 10.1109/IV47402.2020.9304646
   Khattak ZH, 2021, IEEE T INTELL TRANSP, V22, P7485, DOI 10.1109/TITS.2020.3003527
   Kim J, 2019, PROC INT CONF SOFTW, P1039, DOI 10.1109/ICSE.2019.00108
   Klischat M, 2020, IEEE INT C INTELL TR, DOI 10.1109/itsc45102.2020.9294629
   Klischat M, 2019, IEEE INT VEH SYM, P2352, DOI 10.1109/IVS.2019.8814230
   Kolb N, 2021, IEEE INT C INTELL TR, P217, DOI 10.1109/ITSC48978.2021.9564591
   Komissarov Rony, 2021, ASHES '21: Proceedings of the 5th Workshop on Attacks and Solutions in Hardware Security, P91, DOI 10.1145/3474376.3487283
   Kondermann D, 2016, IEEE COMPUT SOC CONF, P19, DOI 10.1109/CVPRW.2016.10
   Koren M, 2018, IEEE INT VEH SYM, P1898, DOI 10.1109/IVS.2018.8500400
   KOYMANS R, 1990, REAL-TIME SYST, V2, P255, DOI 10.1007/BF01995674
   Krajewski R., 2020, 2020 IEEE 23rd International Conference on Intelligent Transportation Systems (ITSC), P1, DOI DOI 10.1109/ITSC45102.2020.9294728
   Krajewski R, 2018, IEEE INT C INTELL TR, P2118, DOI 10.1109/ITSC.2018.8569552
   Krajzewicz D., 2002, P 4 MIDDLE E S SIMUL, P183
   Krizhevsky A, 2017, COMMUN ACM, V60, P84, DOI 10.1145/3065386
   Kumar KN, 2020, IEEE APP IMG PAT, DOI 10.1109/AIPR50011.2020.9425267
   Kurakin A, 2018, SPRING SER CHALLENGE, P195, DOI 10.1007/978-3-319-94042-7_11
   Kutila M, 2018, IEEE INT C INTELL TR, P1695, DOI 10.1109/ITSC.2018.8569624
   Kutila M, 2016, 2016 IEEE 19TH INTERNATIONAL CONFERENCE ON INTELLIGENT TRANSPORTATION SYSTEMS (ITSC), P265, DOI 10.1109/ITSC.2016.7795565
   Lang AH, 2019, PROC CVPR IEEE, P12689, DOI 10.1109/CVPR.2019.01298
   Larsen ABL, 2016, PR MACH LEARN RES, V48
   Laurent T, 2020, IEEE INT C ENG COMP, P93, DOI 10.1109/ICECCS51672.2020.00018
   Laurent T, 2019, ASIA PAC SOFWR ENG, P94, DOI 10.1109/APSEC48747.2019.00022
   LeBlanc D., 2011, 22nd ESV, P1
   Lecun Y, 1998, P IEEE, V86, P2278, DOI 10.1109/5.726791
   Lee R, 2015, IEEEAAIA DIGIT AVION
   Lee Taeyoung, 2011, P 22 INT TECHNICAL C
   Lehner A, 2022, PROC CVPR IEEE, P17274, DOI 10.1109/CVPR52688.2022.01678
   Leilabadi SH, 2019, IEEE INT C INTELL TR, P889, DOI 10.1109/ITSC.2019.8916775
   Li A, 2022, IEEE T INTELL TRANSP, V23, P14859, DOI 10.1109/TITS.2021.3134661
   Li GP, 2020, PROC INT SYMP SOFTW, P25, DOI 10.1109/ISSRE5003.2020.00012
   Li HX, 2021, IEEE INT VEH SYM, P1132, DOI 10.1109/IV48863.2021.9575426
   Li L, 2016, IEEE T INTELL VEHICL, V1, P158, DOI 10.1109/TIV.2016.2608003
   Li YH, 2020, INFORM SOFTWARE TECH, V117, DOI 10.1016/j.infsof.2019.106200
   Li YM, 2021, 2021 IEEE/CVF INTERNATIONAL CONFERENCE ON COMPUTER VISION (ICCV 2021), P7878, DOI 10.1109/ICCV48922.2021.00780
   Li YJ, 2021, IEEE INTERNET THINGS, V8, P6337, DOI 10.1109/JIOT.2020.3016145
   Li ZZ, 2021, INT C MACHINE LEARNI, V139
   Lim BS, 2018, 2018 IEEE 4TH WORLD FORUM ON INTERNET OF THINGS (WF-IOT), P231, DOI 10.1109/WF-IoT.2018.8355132
   Liu AS, 2019, AAAI CONF ARTIF INTE, P1028
   Liu YQ, 2018, 25TH ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2018), DOI 10.14722/ndss.2018.23291
   Long M, 2005, IEEE T IND INFORM, V1, P85, DOI 10.1109/TII.2005.844422
   Lu JJ, 2017, Arxiv, DOI arXiv:1707.03501
   Luo YX, 2021, 2021 36TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING ASE 2021, P279, DOI [10.1109/ASE51524.2021.967883, 10.1109/ASE51524.2021.9678883]
   Lv C, 2018, IEEE-CAA J AUTOMATIC, V5, P58, DOI 10.1109/JAS.2017.7510745
   Ma J, 2021, MACHINES, V9, DOI 10.3390/machines9120342
   Ma L, 2018, IEEE INT CONF AUTOM, P120, DOI 10.1145/3238147.3238202
   Ma W, 2021, ACM T SOFTW ENG METH, V30, DOI 10.1145/3417330
   Maddern W, 2017, INT J ROBOT RES, V36, P3, DOI 10.1177/0278364916679498
   Madry A., 2018, ARXIV
   Mahmud SMS, 2017, IATSS RES, V41, P153, DOI 10.1016/j.iatssr.2017.02.001
   Majumdar R, 2021, LECT NOTES COMPUT SC, V12649, P172, DOI 10.1007/978-3-030-71500-7_9
   Majzik I, 2019, 2019 ACM/IEEE 22ND INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS 2019), P89, DOI 10.1109/MODELS.2019.00-12
   Manikandasriram, GTA
   MathWorks, MATL SIM
   MCLEAN JR, 1971, HUM FACTORS, V13, P407, DOI 10.1177/001872087101300503
   Meng Q, 2019, SENSORS-BASEL, V19, DOI 10.3390/s19183993
   Menzel T, 2018, IEEE INT VEH SYM, P1821, DOI 10.1109/IVS.2018.8500406
   Mogelmose A, 2012, IEEE T INTELL TRANSP, V13, P1484, DOI 10.1109/TITS.2012.2209421
   Mordor Intelligence Inc, 2022, AUT DRIV CAR MARK GR
   Mouret JB, 2015, Arxiv, DOI arXiv:1504.04909
   MSC software, Adams
   Nalic D, 2020, IEEE ACCESS, V8, P224974, DOI 10.1109/ACCESS.2020.3044024
   Nalic D, 2019, IEEE INT C INTELL TR, P1895, DOI 10.1109/ITSC.2019.8916839
   Nassi B, 2022, 7TH IEEE EUROPEAN SYMPOSIUM ON SECURITY AND PRIVACY WORKSHOPS (EUROS&PW 2022), P376, DOI 10.1109/EuroSPW55150.2022.00045
   Neuhold G, 2017, IEEE I CONF COMP VIS, P5000, DOI 10.1109/ICCV.2017.534
   Nie CH, 2011, ACM COMPUT SURV, V43, DOI 10.1145/1883612.1883618
   Nitsche P, 2018, IEEE INT C INTELL TR, P90, DOI 10.1109/ITSC.2018.8569631
   Norden J, 2020, Arxiv, DOI arXiv:1912.03618
   NVIDIA, NVIDIA DRIV CONST
   NVIDIA, NVID AUT KER END END
   O'Kelly M, 2018, ADV NEUR IN, V31
   OKelly Matthew, 2020, Machine Learning Research, V123, P77
   OSRF, OSRF
   Pan Y, 2021, IEEE I C SQRS-C, P30, DOI 10.1109/QRS-C55045.2021.00015
   Panichella S, 2021, 2021 IEEE/ACM 14TH INTERNATIONAL WORKSHOP ON SEARCH-BASED SOFTWARE TESTING (SBST 2021), P20, DOI 10.1109/SBST52555.2021.00011
   Pavlitskaya S, 2020, IEEE INT C INTELL TR, DOI 10.1109/itsc45102.2020.9294426
   Pei KX, 2017, PROCEEDINGS OF THE TWENTY-SIXTH ACM SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES (SOSP '17), P1, DOI 10.1145/3132747.3132785
   Pendleton SD, 2017, MACHINES, V5, DOI 10.3390/machines5010006
   Peng Guo, 2020, 2020 7th International Conference on Information Science and Control Engineering (ICISCE), P1722, DOI 10.1109/ICISCE50968.2020.00340
   Peng Z, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P1240, DOI 10.1145/3368089.3417063
   Philipp R, 2021, 2021 5TH INTERNATIONAL CONFERENCE ON SYSTEM RELIABILITY AND SAFETY (ICSRS 2021), P312, DOI 10.1109/ICSRS53853.2021.9660660
   Philipsen MP, 2015, IEEE INT C INTELL TR, P2341, DOI 10.1109/ITSC.2015.378
   Pnueli A., 1977, 18th Annual Symposium on Foundations of Computer Science, P46, DOI 10.1109/SFCS.1977.32
   PTV, VISS
   Qian R, 2018, PROC CVPR IEEE, P2482, DOI 10.1109/CVPR.2018.00263
   Queiroz R, 2019, IEEE INT VEH SYM, P287, DOI 10.1109/IVS.2019.8814107
   Ramanagopal MS, 2018, IEEE ROBOT AUTOM LET, V3, P3860, DOI 10.1109/LRA.2018.2857402
   Redmon J., 2018, arXiv, DOI DOI 10.48550/ARXIV.1804.02767
   Ren SQ, 2017, IEEE T PATTERN ANAL, V39, P1137, DOI 10.1109/TPAMI.2016.2577031
   Reway F, 2020, IEEE INT VEH SYM, P1249, DOI 10.1109/IV47402.2020.9304567
   Riccio V, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P876, DOI 10.1145/3368089.3409730
   Richter SR, 2016, LECT NOTES COMPUT SC, V9906, P102, DOI 10.1007/978-3-319-46475-6_7
   Robicquet A, 2016, LECT NOTES COMPUT SC, V9912, P549, DOI 10.1007/978-3-319-46484-8_33
   Rocklage E., 2018, 2017 ieee 20th international conference on intelligent transportation systems (itsc), P476
   Rong GD, 2020, IEEE INT C INTELL TR, DOI 10.1109/itsc45102.2020.9294422
   Ros G, 2016, PROC CVPR IEEE, P3234, DOI 10.1109/CVPR.2016.352
   Rosique F, 2019, SENSORS-BASEL, V19, DOI 10.3390/s19030648
   Rubaiyat AM, 2018, IEEE PAC RIM INT SYM, P54, DOI 10.1109/PRDC.2018.00016
   Sadat Abbas, 2020, Computer Vision - ECCV 2020. 16th European Conference. Proceedings. Lecture Notes in Computer Science (LNCS 12368), P414, DOI 10.1007/978-3-030-58592-1_25
   Sadat A, 2019, IEEE INT C INT ROBOT, P3949, DOI [10.1109/IROS40897.2019.8967615, 10.1109/iros40897.2019.8967615]
   Santana E, 2016, Arxiv, DOI arXiv:1608.01230
   Sato T, 2021, PROCEEDINGS OF THE 30TH USENIX SECURITY SYMPOSIUM, P3309
   Schafer H, 2018, Arxiv, DOI arXiv:1812.05752
   Schütt B, 2022, VEHITS: PROCEEDINGS OF THE 8TH INTERNATIONAL CONFERENCE ON VEHICLE TECHNOLOGY AND INTELLIGENT TRANSPORT SYSTEMS, P338, DOI 10.5220/0011064600003191
   Schutt B., 2020, PROC 23 ACMIEEE INT, P114, DOI 10.1145/3365438.3410933
   Shah S., 2017, Field and service robotics, DOI 10.1007/978-3-319-67361-5_40
   Shalev-Shwartz S, 2018, Arxiv, DOI arXiv:1708.06374
   Shao JY, 2021, PROC IEEE ACM INT C, P117, DOI 10.1109/ICSE-Companion52605.2021.00052
   Shaoshuai Shi, 2020, 2020 IEEE/CVF Conference on Computer Vision and Pattern Recognition (CVPR). Proceedings, P10526, DOI 10.1109/CVPR42600.2020.01054
   Shi SS, 2019, PROC CVPR IEEE, P770, DOI 10.1109/CVPR.2019.00086
   Shin H, 2017, LECT NOTES COMPUT SC, V10529, P445, DOI 10.1007/978-3-319-66787-4_22
   Shu H, 2021, IEEE ACCESS, V9, P115019, DOI 10.1109/ACCESS.2021.3103912
   Siemens, PRESC
   Simonyan K, 2015, Arxiv, DOI arXiv:1409.1556
   Solmaz S, 2020, IEEE INT VEH SYM, P1465, DOI 10.1109/IV47402.2020.9304811
   Song Dawn, 2018, P 12 USENIX WORKSHOP
   Song JY, 2022, 2022 ACM/IEEE 44TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE (ICSE-SEIP 2022), P343, DOI [10.1145/3510457.3513049, 10.1109/ICSE-SEIP55303.2022.9794128]
   Song Y, 2021, ACCIDENT ANAL PREV, V153, DOI 10.1016/j.aap.2021.106017
   Stallkamp J, 2012, NEURAL NETWORKS, V32, P323, DOI 10.1016/j.neunet.2012.02.016
   Staravoitau Alex, BEHAV CLONING END TO
   Stocco A, 2020, PROC INT CONF SOFTW, P359, DOI 10.1145/3377811.3380353
   Stocco Andrea, 2022, IEEE T SOFTWARE ENG, V2022
   Sun JC, 2020, PROCEEDINGS OF THE 29TH USENIX SECURITY SYMPOSIUM, P877
   Sun J, 2020, IEEE INT C INTELL TR, DOI 10.1109/itsc45102.2020.9294429
   Sun P, 2020, PROC CVPR IEEE, P2443, DOI 10.1109/CVPR42600.2020.00252
   Szalai M, 2020, 2020 IEEE 18TH WORLD SYMPOSIUM ON APPLIED MACHINE INTELLIGENCE AND INFORMATICS (SAMI 2020), P73, DOI [10.1109/sami48414.2020.9108745, 10.1109/SAMI48414.2020.9108745]
   Szalay Z, 2019, INT CONF CONNECT VEH, DOI 10.1109/iccve45908.2019.8965086
   Tahir Z, 2022, LECT NOTES COMPUT SC, V13207, P191, DOI 10.1007/978-3-030-98260-7_12
   Tamke A, 2011, IEEE INT VEH SYM, P697, DOI 10.1109/IVS.2011.5940482
   Tang Shuncheng, 2022, Zenodo, DOI 10.5281/ZENODO.7304210
   Tang SC, 2021, IEEE INT SYMP SOFTW, P148, DOI 10.1109/ISSREW53611.2021.00057
   Tang Y, 2021, IEEE INT VEH SYM, P179, DOI 10.1109/IV48863.2021.9575536
   Tang Y, 2021, IEEE INT CONF ROBOT, P11450, DOI 10.1109/ICRA48506.2021.9560890
   Team Autumn, STEER ANGL MOD AUT
   Team Chauffeur, STEER ANGL MOD CHAUF
   Team Epoch, STEER ANGL MOD EP
   Team Rambo, STEER ANGL MOD RAMB
   Team Rwightman, 2016, STEER ANGL MOD RWIGH
   Tettamanti T, 2018, 2018 IEEE INTERNATIONAL CONFERENCE ON VEHICULAR ELECTRONICS AND SAFETY (ICVES 2018)
   Tian YC, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P303, DOI 10.1145/3180155.3180220
   Tokdar ST, 2010, WILEY INTERDISCIP RE, V2, P54, DOI 10.1002/wics.56
   Train KE, 2009, DISCRETE CHOICE METHODS WITH SIMULATION, 2ND EDITION, P1, DOI 10.1017/CBO9780511805271
   Treiber M, 2000, PHYS REV E, V62, P1805, DOI 10.1103/PhysRevE.62.1805
   Huynh T, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: COMPANION PROCEEDINGS (ICSE-COMPANION 2019), P31, DOI 10.1109/ICSE-Companion.2019.00031
   Tuncali CE, 2020, IEEE T INTELL VEHICL, V5, P265, DOI 10.1109/TIV.2019.2955903
   Tuncali CE, 2019, IEEE INT C INTELL TR, P661, DOI 10.1109/ITSC.2019.8917375
   Tuncali CE, 2018, IEEE INT VEH SYM, P1555
   Tuncali CE, 2016, 2016 IEEE 19TH INTERNATIONAL CONFERENCE ON INTELLIGENT TRANSPORTATION SYSTEMS (ITSC), P1470, DOI 10.1109/ITSC.2016.7795751
   Udacity, UD SELF DRIV CAR SIM
   Ul Haq F, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-021-09982-4
   Ul Haq F, 2020, IEEE INT CONF SOFTW, P85, DOI 10.1109/ICST46399.2020.00019
   Verylukyguy, 2021, OPENPILOT ISS
   Vires, VTD
   Voyage, ABOUT US
   Wakabayashi Hiroshi, 2003, INFRASTRUCT PLAN REV, V20, P949
   Wang DH, 2021, PROCEEDINGS OF THE 29TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '21), P20, DOI 10.1145/3468264.3468559
   Wang J., 2021, P IEEE CVF C COMP VI, P9909
   Wang S, 2019, PLOS ONE, V14, DOI 10.1371/journal.pone.0214550
   Wang W, 2021, CCS '21: PROCEEDINGS OF THE 2021 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P1930, DOI 10.1145/3460120.3484766
   Wang X, 2021, Auto. Intell. Syst., V1, P10, DOI [10.1007/s43684-021-00015-x, DOI 10.1007/S43684-021-00015-X]
   Wang XL, 2021, IEEE I C SQRS-C, P543, DOI 10.1109/QRS-C55045.2021.00083
   Wang XP, 2021, IEEE INT C INTELL TR, P394, DOI 10.1109/ITSC48978.2021.9564844
   Wang XP, 2020, IEEE INT VEH SYM, P1323, DOI 10.1109/IV47402.2020.9304702
   Wang XP, 2017, IEEE INT VEH SYM, P218, DOI 10.1109/IVS.2017.7995723
   Wang XP, 2021, NEUROCOMPUTING, V466, P27, DOI 10.1016/j.neucom.2021.09.027
   WATKINS CJCH, 1992, MACH LEARN, V8, P279, DOI 10.1007/BF00992698
   Wen M, 2020, HUM-CENT COMPUT INFO, V10, DOI 10.1186/s13673-020-00231-z
   Weng BW, 2020, IEEE INT VEH SYM, P1899, DOI 10.1109/IV47402.2020.9304635
   Werling M, 2010, IEEE INT CONF ROBOT, P987, DOI 10.1109/ROBOT.2010.5509799
   Westhofen L, 2023, ARCH COMPUT METHOD E, V30, P1, DOI 10.1007/s11831-022-09788-7
   WOHLIN Claes, 2014, P 18 INT C EVALUATIO, DOI [10.1145/2601248.2601268.10, 10.1145/2601248.2601268]
   Woodlief T, 2022, PROC INT CONF SOFTW, P1958, DOI 10.1145/3510003.3510212
   Xia Q, 2018, INT J AUTO TECH-KOR, V19, P751, DOI 10.1007/s12239-018-0072-6
   Xiao CW, 2018, PROCEEDINGS OF THE TWENTY-SEVENTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P3905
   Xiaokun Zheng, 2020, 2020 IEEE International Conference on Mechatronics and Automation (ICMA), P1166, DOI 10.1109/ICMA49215.2020.9233535
   Xiong ZB, 2021, IEEE T VEH TECHNOL, V70, P2822, DOI 10.1109/TVT.2021.3061065
   Xu X, 2021, IEEE T IND INFORM, V17, P4117, DOI 10.1109/TII.2020.3024643
   Yadav Vivek., p2-trafficsigns
   Yan C., 2016, DEF CON, V24, P109
   Yan SA, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P775, DOI 10.1145/3368089.3409671
   Yang B, 2018, PROC CVPR IEEE, P7652, DOI 10.1109/CVPR.2018.00798
   Yang KC, 2021, ASIA CCS'21: PROCEEDINGS OF THE 2021 ACM ASIA CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P349, DOI 10.1145/3433210.3453106
   Yi Zhu, 2021, SenSys '21: Proceedings of the 19th ACM Conference on Embedded Networked Sensor Systems, P329, DOI 10.1145/3485730.3485935
   Yu F., 2018, arXiv preprint arXiv:1805.04687
   Yu HD, 2018, ASIA S PACIF DES AUT, P9, DOI [10.1109/ASPDAC.2018.8297275, 10.1109/TEST.2018.8624868]
   Yulong Cao, 2021, 2021 IEEE Symposium on Security and Privacy (SP), P176, DOI 10.1109/SP40001.2021.00076
   Zampetti F, 2022, J SYST SOFTWARE, V192, DOI 10.1016/j.jss.2022.111425
   Zelun Kong, 2020, 2020 IEEE/CVF Conference on Computer Vision and Pattern Recognition (CVPR). Proceedings, P14242, DOI 10.1109/CVPR42600.2020.01426
   Zeng KX, 2018, PROCEEDINGS OF THE 27TH USENIX SECURITY SYMPOSIUM, P1527
   Zeng WY, 2019, PROC CVPR IEEE, P8652, DOI 10.1109/CVPR.2019.00886
   Zhan W, 2019, Arxiv, DOI arXiv:1910.03088
   Zhang JM, 2022, IEEE T SOFTWARE ENG, V48, P1, DOI 10.1109/TSE.2019.2962027
   Zhang MS, 2018, IEEE INT CONF AUTOM, P132, DOI 10.1145/3238147.3238187
   Zhang QZ, 2021, P ACM MEAS ANAL COMP, V5, DOI [10.1145/3460082, 10.1145/3410220.3460101]
   Zhang XH, 2023, IEEE T SOFTWARE ENG, V49, P991, DOI 10.1109/TSE.2022.3170122
   Zhang XX, 2020, IEEE INT VEH SYM, P1330, DOI 10.1109/IV47402.2020.9304609
   Zhang Yang, 2019, P INT C LEARNING REP
   Zhang YL, 2018, LECT NOTES COMPUT SC, V11211, P294, DOI 10.1007/978-3-030-01234-2_18
   Zhang ZY, 2022, IEEE T COMPUT AID D, V41, P4421, DOI 10.1109/TCAD.2022.3197693
   Zhang ZY, 2021, LECT NOTES COMPUT SC, V12759, P595, DOI 10.1007/978-3-030-81685-8_29
   Zhang ZY, 2018, IEEE T COMPUT AID D, V37, P2894, DOI 10.1109/TCAD.2018.2858463
   Zhang Zhenya, 2022, IEEE T SOFTWARE ENG, V2022
   Zhao D, 2018, IEEE T INTELL TRANSP, V19, P733, DOI 10.1109/TITS.2017.2701846
   Zhao D, 2017, IEEE T INTELL TRANSP, V18, P595, DOI 10.1109/TITS.2016.2582208
   Zhao Y, 2019, PROCEEDINGS OF THE 2019 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY (CCS'19), P1989, DOI 10.1145/3319535.3354259
   Zhiyuan Huang, 2017, 2017 IEEE International Conference on Robotics and Automation (ICRA), P197, DOI 10.1109/ICRA.2017.7989024
   Zhong Z., 2021, arXiv
   Zhong Ziyuan, 2021, P 31 ACM SIGSOFT INT, P493
   Zhou HL, 2021, INT C PATT RECOG, P4436, DOI 10.1109/ICPR48806.2021.9412011
   Zhou W, 2020, IEEE T INTELL TRANSP, V21, P1951, DOI 10.1109/TITS.2019.2909066
   Zhou XG, 2022, I C DEPEND SYS NETWO, P79, DOI 10.1109/DSN53405.2022.00020
   Zhou ZQ, 2019, COMMUN ACM, V62, P61, DOI 10.1145/3241979
   Zhu JY, 2017, IEEE I CONF COMP VIS, P2242, DOI 10.1109/ICCV.2017.244
   Zhu Y, 2021, CCS '21: PROCEEDINGS OF THE 2021 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P1945, DOI 10.1145/3460120.3485377
   Zohdinasab T, 2023, ACM T SOFTW ENG METH, V32, DOI 10.1145/3544792
   Zohdinasab T, 2021, ISSTA '21: PROCEEDINGS OF THE 30TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P79, DOI 10.1145/3460319.3464811
   Zyner A, 2019, IEEE INTEL TRANSP SY, V11, P8, DOI 10.1109/MITS.2019.2907676
NR 349
TC 7
Z9 7
U1 12
U2 21
PU ASSOC COMPUTING MACHINERY
PI NEW YORK
PA 1601 Broadway, 10th Floor, NEW YORK, NY USA
SN 1049-331X
EI 1557-7392
J9 ACM T SOFTW ENG METH
JI ACM Trans. Softw. Eng. Methodol.
PD JUL
PY 2023
VL 32
IS 5
AR 124
DI 10.1145/3579642
PG 62
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA P9SM2
UT WOS:001054005300017
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Wolter, T
   Barcomb, A
   Riehle, D
   Harutyunyan, N
AF Wolter, Thomas
   Barcomb, Ann
   Riehle, Dirk
   Harutyunyan, Nikolay
TI Open Source License Inconsistencies on GitHub
SO ACM TRANSACTIONS ON SOFTWARE ENGINEERING AND METHODOLOGY
LA English
DT Article
DE License management; license conflicts
ID OPEN-SOURCE SOFTWARE
AB Almost all software, open or closed, builds on open source software and therefore needs to comply with the license obligations of the open source code. Not knowing which licenses to comply with poses a legal danger to anyone using open source software. This article investigates the extent of inconsistencies between licenses declared by an open source project at the top level of the repository and the licenses found in the code. We analyzed a sample of 1,000 open source GitHub repositories. We find that about half of the repositories did not fully declare all licenses found in the code. Of these, approximately 10% represented a permissive vs. copyleft license mismatch. Furthermore, existing tools cannot fully identify licences. We conclude that users of open source code should not just look at the declared licenses of the open source code they intend to use, but rather examine the software to understand its actual licenses.
C1 [Wolter, Thomas; Riehle, Dirk; Harutyunyan, Nikolay] Friedrich Alexander Univ Erlangen Nuernberg, Martensstr 3, D-91058 Erlangen, Germany.
   [Barcomb, Ann] Univ Calgary, Schulich Sch Engn, 2500 Univ Dr, Calgary, AB T2N 1N4, Canada.
C3 University of Erlangen Nuremberg; University of Calgary
RP Wolter, T (corresponding author), Friedrich Alexander Univ Erlangen Nuernberg, Martensstr 3, D-91058 Erlangen, Germany.
EM tho.wolter@fau.de; ann@barcomb.org; dirk@riehle.org;
   nikolay.harutyunyan@fau.de
RI Riehle, Dirk/X-8137-2019
OI Riehle, Dirk/0000-0002-8139-5600; Wolter, Thomas/0000-0001-9036-8033;
   Barcomb, Ann/0000-0003-2126-9511; Harutyunyan,
   Nikolay/0000-0002-1745-6528
CR Ågerfalk PJ, 2008, MIS QUART, V32, P385
   Almeida DA, 2017, INT C PROGRAM COMPRE, P1, DOI 10.1109/ICPC.2017.7
   Alspaugh TA, 2009, 2009 ICSE WORKSHOP ON EMERGING TRENDS IN FREE-LIBRE-OPEN SOURCE SOFTWARE RESEARCH AND DEVELOPMENT, P54, DOI 10.1109/FLOSS.2009.5071361
   August T, 2021, MANAGE SCI, V67, P3041, DOI 10.1287/mnsc.2020.3674
   Azhakesan A, 2020, 2020 IEEE/ACM 42ND INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE (ICSE-SEIP), P130
   Baltes S, 2019, EMPIR SOFTW ENG, V24, P1259, DOI 10.1007/s10664-018-9650-5
   Bird C, 2009, 2009 6TH IEEE INTERNATIONAL WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES, P1, DOI 10.1109/MSR.2009.5069475
   COSRI, 2017, 2017 OP SOURC SEC RI
   Coughlan S, 2020, COMPUTER, V53, P70, DOI 10.1109/MC.2020.3016107
   Crowston K, 2012, ACM COMPUT SURV, V44, DOI 10.1145/2089125.2089127
   de Laat PB, 2007, J MANAG GOV, V11, P165, DOI 10.1007/s10997-007-9022-9
   Dyck Sergius, 2018, J SYSTEMICS CYBERNET, V16, P44
   European-Commission, EC SOC IMP SOFTW SER
   Fendt O, 2019, IFIP ADV INF COMM TE, V556, P133, DOI 10.1007/978-3-030-20883-7_12
   Feng MY, 2019, 2019 IEEE 26TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER), P564, DOI [10.1109/saner.2019.8667977, 10.1109/SANER.2019.8667977]
   Fitzgerald A, 2019, ENG FREELIBRE OP ENS, P83, DOI [10.1007/978-981-13-7099-1_5, DOI 10.1007/978-981-13-7099-1_5]
   Fitzgerald B, 2006, MIS QUART, V30, P587
   Fontana Richard, 2008, LEGAL ISSUES PRIMER, P1
   Gamalielsson Jonas, 2017, P 13 INT S OP COLL, P1
   Gangadharan GR, 2012, INFORM SYST FRONT, V14, P143, DOI 10.1007/s10796-009-9180-1
   German Daniel M., 2010, Proceedings of the 18th IEEE International Conference on Program Comprehension (ICPC 2010), P84, DOI 10.1109/ICPC.2010.48
   German DM, 2012, IEEE SOFTWARE, V29, P58, DOI 10.1109/MS.2012.50
   German DM, 2009, PROC INT CONF SOFTW, P188, DOI 10.1109/ICSE.2009.5070520
   German Daniel M., 2010, P 25 IEEE ACM INT C, P437, DOI [10.1145/1858996.1859088, DOI 10.1145/1858996.1859088]
   Gobeille R, 2008, P 2008 INT WORK C MI, P47, DOI DOI 10.1145/1370750.1370763
   Hall Andrew J., 2016, SANTA CLARA COMPUTER, V33, P427
   Harutyunyan N, 2020, COMPUTER, V53, P77, DOI 10.1109/MC.2020.2983530
   Harutyunyan N, 2019, J SYST SOFTWARE, V158, DOI 10.1016/j.jss.2019.08.001
   Harutyunyan Nikolay, 2021, P 54 HAWAII INT C SY, P6263
   Hassin K., 2007, OPEN SOURCE BUSINESS
   Hauge O, 2010, INFORM SOFTWARE TECH, V52, P1133, DOI 10.1016/j.infsof.2010.05.008
   Heale Roberta, 2015, Evid Based Nurs, V18, P66, DOI 10.1136/eb-2015-102129
   Hemel A., 2021, ACM SIGSOFT SOFTWARE, V46, P24, DOI 10.1145/3468744.3468752
   Hemel A., 2011, P 8 WORK C MIN SOFTW, P63
   Jaeger M. C., 2017, IFOSS L. Rev., V9, P9
   Kapitsaki GM, 2021, IEEE T SOFTWARE ENG, V47, P919, DOI 10.1109/TSE.2019.2909021
   Kapitsaki GM, 2017, J SYST SOFTWARE, V131, P386, DOI 10.1016/j.jss.2016.06.064
   Kon F., 2011, Proceedings of the 2011 25th Brazilian Symposium on Software Engineering (SBES 2011), P82, DOI 10.1109/SBES.2011.19
   Lerner J, 2005, J LAW ECON ORGAN, V21, P20, DOI 10.1093/jleo/ewi002
   Lopes CV, 2017, P ACM PROGRAM LANG, V1, DOI 10.1145/3133908
   Marois Patrick, 2022, P EUROPEAN C INFORM
   Moraes JP, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-020-09936-2
   Mustonen M, 2003, INF ECON POLICY, V15, P99, DOI 10.1016/S0167-6245(02)00090-2
   Ombredanne P, 2020, COMPUTER, V53, P105, DOI 10.1109/MC.2020.3011082
   Popp Karl Michael, 2019, BEST PRACTICES COMME
   Riehle D, 2020, COMPUTER, V53, P68, DOI 10.1109/MC.2020.2969672
   Rosen L., 2005, OPEN SOURCE LICENSIN
   Rousseau G, 2020, EMPIR SOFTW ENG, V25, P2930, DOI 10.1007/s10664-020-09828-5
   Ruffin M, 2004, IEEE SOFTWARE, V21, P82, DOI 10.1109/MS.2004.1259227
   Squire Megan, 2017, P 13 INT S OP COLL
   Stewart KJ, 2006, INFORM SYST RES, V17, P126, DOI 10.1287/isre.1060.0082
   Tuunanen T, 2006, 10TH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P289
   Tuunanen T, 2009, AUTOMAT SOFTW ENG, V16, P455, DOI 10.1007/s10515-009-0054-z
   vander Burg S., 2014, P 29 ACM IEEE INT C, P731, DOI [10.1145/2642937.2643013, DOI 10.1145/2642937.2643013]
   Wolter Thomas, 2019, THESIS
   Wu YH, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P324, DOI 10.1109/MSR.2015.37
   Zacchiroli Stefano, 2022, P 19 INT C MINING SO
NR 57
TC 3
Z9 3
U1 3
U2 3
PU ASSOC COMPUTING MACHINERY
PI NEW YORK
PA 1601 Broadway, 10th Floor, NEW YORK, NY USA
SN 1049-331X
EI 1557-7392
J9 ACM T SOFTW ENG METH
JI ACM Trans. Softw. Eng. Methodol.
PD JUL
PY 2023
VL 32
IS 5
AR 110
DI 10.1145/3571852
PG 23
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA P9SM2
UT WOS:001054005300003
DA 2024-07-18
ER

PT J
AU Fioraldi, A
   Mantovani, A
   Maier, D
   Balzarotti, D
AF Fioraldi, Andrea
   Mantovani, Alessandro
   Maier, Dominik
   Balzarotti, Davide
TI Dissecting American Fuzzy Lop - A FuzzBench Evaluation RCR Report
SO ACM TRANSACTIONS ON SOFTWARE ENGINEERING AND METHODOLOGY
LA English
DT Article
DE fuzzing; afl; fuzzbench
AB This report describes the artifacts of the "Dissecting American Fuzzy Lop - A FuzzBench Evaluation" paper. The artifacts are available online at https://github.com/eurecom-s3/dissecting_afl and archived at https://doi. org/10.6084/m9.figshare.21401280. American Fuzzy Lop (AFL) consists of the produced code, the setup to run the experiments in FuzzBench, and the generated reports. We claim the Functional badge as the patches to AFL are easy to enable and the experiments are easy to run thanks to the FuzzBench service, but the evaluations are self-contained and the modifications to AFL are as is. For the purpose of reproducing the experiments, no particular skills are needed as the process is straightforward and described in https://google.github.io/ fuzzbench/getting-started/adding-a- new- fuzzer/#requesting- an- experiment.
C1 [Fioraldi, Andrea; Mantovani, Alessandro; Balzarotti, Davide] EURECOM, Campus SophiaTech,450 Route Chappes, F-06410 Biot, France.
   [Maier, Dominik] Tech Univ Berlin, Str 17 Juni 135, D-10623 Berlin, Germany.
C3 IMT - Institut Mines-Telecom; EURECOM; Technical University of Berlin
RP Fioraldi, A (corresponding author), EURECOM, Campus SophiaTech,450 Route Chappes, F-06410 Biot, France.
EM andrea.fioraldi@eurecom.fr; alessandro.mantovani@eurecom.fr;
   dmaier@sect.tu-berlin.de; davide.balzarotti@eurecom.fr
OI Mantovani, Alessandro/0000-0003-4813-8562; Fioraldi,
   Andrea/0000-0002-0976-4395; Maier, Dominik/0000-0002-5588-5008
NR 0
TC 0
Z9 0
U1 0
U2 1
PU ASSOC COMPUTING MACHINERY
PI NEW YORK
PA 1601 Broadway, 10th Floor, NEW YORK, NY USA
SN 1049-331X
EI 1557-7392
J9 ACM T SOFTW ENG METH
JI ACM Trans. Softw. Eng. Methodol.
PD APR
PY 2023
VL 32
IS 2
AR 54
DI 10.1145/3580600
PG 4
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA D7OR1
UT WOS:000970588900027
DA 2024-07-18
ER

PT J
AU Hu, X
   Chen, QY
   Wang, HY
   Xia, X
   Lo, D
   Zimmermann, T
AF Hu, Xing
   Chen, Qiuyuan
   Wang, Haoye
   Xia, Xin
   Lo, David
   Zimmermann, Thomas
TI Correlating Automated and Human Evaluation of Code Documentation
   Generation Quality
SO ACM TRANSACTIONS ON SOFTWARE ENGINEERING AND METHODOLOGY
LA English
DT Article
DE Code documentation generation; evaluation metrics; empirical study
AB Automatic code documentation generation has been a crucial task in the field of software engineering. It not only relieves developers fromwriting code documentation but also helps them to understand programs better. Specifically, deep-learning-based techniques that leverage large-scale source code corpora have been widely used in code documentation generation. These works tend to use automatic metrics (such as BLEU, METEOR, ROUGE, CIDEr, and SPICE) to evaluate different models. These metrics compare generated documentation to reference texts by measuring the overlapping words. Unfortunately, there is no evidence demonstrating the correlation between these metrics and human judgment. We conduct experiments on two popular code documentation generation tasks, code comment generation and commit message generation, to investigate the presence or absence of correlations between these metrics and human judgments. For each task, we replicate three state-of-the-art approaches and the generated documentation is evaluated automatically in terms of BLEU, METEOR, ROUGE-L, CIDEr, and SPICE. We also ask 24 participants to rate the generated documentation considering three aspects (i.e., language, content, and effectiveness). Each participant is given Java methods or commit diffs along with the target documentation to be rated. The results show that the ranking of generated documentation from automatic metrics is different from that evaluated by human annotators. Thus, these automatic metrics are not reliable enough to replace human evaluation for code documentation generation tasks. In addition, METEOR shows the strongest correlation (with moderate Pearson correlation r about 0.7) to human evaluation metrics. However, it is still much lower than the correlation observed between different annotators (with a high Pearson correlation r about 0.8) and correlations that are reported in the literature for other tasks (e.g., Neural Machine Translation [39]). Our study points to the need to develop specialized automated evaluation metrics that can correlate more closely to human evaluation metrics for code generation tasks.
C1 [Hu, Xing] Zhejiang Univ, Sch Software Technol, 1689 Jiangnan Rd, Ningbo 315048, Zhejiang, Peoples R China.
   [Chen, Qiuyuan; Wang, Haoye] Zhejiang Univ, Coll Comp Sci & Technol, Rd 38 West Lake Dist, Hangzhou 310027, Zhejiang, Peoples R China.
   [Xia, Xin] Monash Univ, Fac Informat Technol, Bldg 6,29 Ancora Imparo Way,Clayton Campus, Clayton, Vic 3800, Australia.
   [Lo, David] Singapore Management Univ, Sch Informat Syst, 80 Stamford Rd, Singapore 178902, Singapore.
   [Zimmermann, Thomas] Microsoft Res, 1 Microsoft Way, Redmond, WA 98052 USA.
C3 Zhejiang University; Zhejiang University; Monash University; Singapore
   Management University; Microsoft
RP Xia, X (corresponding author), Monash Univ, Fac Informat Technol, Bldg 6,29 Ancora Imparo Way,Clayton Campus, Clayton, Vic 3800, Australia.
EM xinghu@zju.edu.cn; chenqiuyuan@zju.edu.cn; why_@zju.edu.cn;
   xin.xia@acm.org; davidlo@smu.edu.sg; tzimmer@microsoft.com
RI Zimmermann, Thomas/C-4377-2019; Lo, David/A-2493-2012
OI Zimmermann, Thomas/0000-0003-4905-1469; Xia, Xin/0000-0002-6302-3256;
   Lo, David/0000-0002-4367-7201; Wang, Haoye/0000-0002-3314-0427
FU National Science Foundation of China [U20A20173]; National Research
   Foundation, Singapore under its Industry Alignment Fund-Pre-positioning
   (IAF-PP) Funding Initiative
FX This research was partially supported by the National Science Foundation
   of China (No. U20A20173) and the National Research Foundation, Singapore
   under its Industry Alignment Fund-Pre-positioning (IAF-PP) Funding
   Initiative. Any opinions, findings and conclusions or recommendations
   expressed in this material are those of the author(s) and do not reflect
   the views of National Research Foundation, Singapore.
CR Alon Uri., 2018, P INT C LEARNING REP
   Anderson P, 2016, LECT NOTES COMPUT SC, V9909, P382, DOI 10.1007/978-3-319-46454-1_24
   [Anonymous], 2013, PROC 7 LINGUISTIC AN
   Banerjee S., 2005, P WORKSHOP INTRINSIC, P65
   Benesty J, 2009, SPRINGER TOP SIGN PR, V2, P37, DOI 10.1007/978-3-642-00296-0_5
   Buse Raymond P. L., 2010, P 25 IEEE ACM INT C, P33, DOI DOI 10.1145/1858996.1859005
   Chen QY, 2021, ACM T SOFTW ENG METH, V30, DOI 10.1145/3434280
   Coughlin Deborah., 2003, Proceedings of M T Summit IX, P63
   Denkowski Michael, 2014, P 9 WORKSH STAT MACH, DOI [10.3115/v1/W14-3348, DOI 10.3115/V1/W14-3348]
   Dyer R, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P422, DOI 10.1109/ICSE.2013.6606588
   Cortés-Coy LF, 2014, IEEE INT WORK C SO, P275, DOI 10.1109/SCAM.2014.14
   Fleiss J.L., 2013, Statistical Methods for Rates and Proportions
   Forward A., 2002, Proceedings of the 2002 ACM symposium on Document engineering, P26, DOI 10.1145/585058.585065
   Gros D, 2020, IEEE INT CONF AUTOM, P746, DOI 10.1145/3324884.3416546
   Haiduc S., 2010, 2010 32nd International Conference on Software Engineering (ICSE), P223, DOI 10.1145/1810295.1810335
   Haiduc S., 2010, Proceedings 17th Working Conference on Reverse Engineering (WCRE 2010), P35, DOI 10.1109/WCRE.2010.13
   Hu X, 2020, EMPIR SOFTW ENG, V25, P2179, DOI [10.1007/s10664-019-09730-9, 10.1007/978-981-13-8203-1_1]
   Hu X, 2018, INT C PROGRAM COMPRE, P200, DOI 10.1145/3196321.3196334
   Huang Y, 2017, INT SYMP EMP SOFTWAR, P414, DOI 10.1109/ESEM.2017.56
   Iyer S, 2016, PROCEEDINGS OF THE 54TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, VOL 1, P2073
   Jiang SY, 2017, IEEE INT CONF AUTOM, P135, DOI 10.1109/ASE.2017.8115626
   LeClair A, 2020, INT C PROGRAM COMPRE, P184, DOI 10.1145/3387904.3389268
   LeClair A, 2019, PROC INT CONF SOFTW, P795, DOI 10.1109/ICSE.2019.00087
   Lethbridge TC, 2003, IEEE SOFTWARE, V20, P35, DOI 10.1109/MS.2003.1241364
   Lin Chin-Yew, 2004, Text summarization branches out, P74, DOI DOI 10.2307/3105454
   Linares-Vásquez M, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P709, DOI 10.1109/ICSE.2015.229
   Liu Chia-Wei, 2016, P 2016 C EMPIRICAL M, P2122, DOI [10.18653/v1/D16-1230, DOI 10.18653/V1/D16-1230]
   Liu Shangqing, 2020, P INT C LEARNING REP
   Liu ZX, 2018, IEEE INT CONF AUTOM, P373, DOI 10.1145/3238147.3238190
   Loyola P, 2017, PROCEEDINGS OF THE 55TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (ACL 2017), VOL 2, P287, DOI 10.18653/v1/P17-2045
   Loyola Pablo, 2018, P 11 INT C NAT LANG, P119, DOI DOI 10.18653/V1/W18-6513
   McBurney P. W., 2014, P 22 INT C PROGRAM C, P279
   Moreno L, 2013, CONF PROC INT SYMP C, P230, DOI 10.1109/ICPC.2013.6613855
   Moreno L, 2013, CONF PROC INT SYMP C, P23, DOI 10.1109/ICPC.2013.6613830
   Novikova J., 2017, P 2017 C EMPIRICAL M, P2241, DOI 10.18653/v1/D17-1238
   Papineni K, 2002, 40TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, PROCEEDINGS OF THE CONFERENCE, P311, DOI 10.3115/1073083.1073135
   Qin Liu, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P299, DOI 10.1109/MSR.2019.00056
   Rush Alexander M., 2015, P 2015 C EMPIRICAL M, P379, DOI [10.48550/arXiv.1509.00685, DOI 10.18653/V1/D15-1044]
   See A, 2017, PROCEEDINGS OF THE 55TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (ACL 2017), VOL 1, P1073, DOI 10.18653/v1/P17-1099
   Sharma S, 2017, Arxiv, DOI arXiv:1706.09799
   Song XT, 2019, IEEE ACCESS, V7, P111411, DOI 10.1109/ACCESS.2019.2931579
   Sridhara Giriprasad, 2010, 25 IEEEACM INT C AUT, P43
   Stapleton S, 2020, INT C PROGRAM COMPRE, P2, DOI 10.1145/3387904.3389258
   Stent A, 2005, LECT NOTES COMPUT SC, V3406, P341
   Vaswani A, 2017, ADV NEUR IN, V30
   Vedantam R, 2015, PROC CVPR IEEE, P4566, DOI 10.1109/CVPR.2015.7299087
   Wan Y, 2018, IEEE INT CONF AUTOM, P397, DOI 10.1145/3238147.3238206
   Wei BL, 2020, IEEE INT CONF AUTOM, P349, DOI 10.1145/3324884.3416578
   WITZ K, 1990, J EDUC STAT, V15, P84
   Xia X, 2018, IEEE T SOFTWARE ENG, V44, P951, DOI 10.1109/TSE.2017.2734091
   Xu SB, 2019, PROCEEDINGS OF THE TWENTY-EIGHTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P3975
   Zhang J, 2020, PROC INT CONF SOFTW, P1385, DOI 10.1145/3377811.3380383
NR 52
TC 5
Z9 5
U1 5
U2 15
PU ASSOC COMPUTING MACHINERY
PI NEW YORK
PA 1601 Broadway, 10th Floor, NEW YORK, NY USA
SN 1049-331X
EI 1557-7392
J9 ACM T SOFTW ENG METH
JI ACM Trans. Softw. Eng. Methodol.
PD OCT
PY 2022
VL 31
IS 4
AR 63
DI 10.1145/3502853
PG 28
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 4V3NS
UT WOS:000859387700007
OA Bronze, Green Accepted
DA 2024-07-18
ER

PT J
AU Guo, H
   Chen, S
   Xing, ZC
   Li, XH
   Bai, YD
   Sun, JM
AF Guo, Hao
   Chen, Sen
   Xing, Zhenchang
   Li, Xiaohong
   Bai, Yude
   Sun, Jiamou
TI Detecting and Augmenting Missing Key Aspects in Vulnerability
   Descriptions
SO ACM TRANSACTIONS ON SOFTWARE ENGINEERING AND METHODOLOGY
LA English
DT Article
DE CVE; vulnerability description; data augmentation; deep neural network
AB Security vulnerabilities have been continually disclosed and documented. For the effective understanding, management, and mitigation of the fast-growing number of vulnerabilities, an important practice in documenting vulnerabilities is to describe the key vulnerability aspects, such as vulnerability type, root cause, affected product, impact, attacker type, and attack vector. In this article, we first investigate 133,639 vulnerability reports in the Common Vulnerabilities and Exposures (CVE) database over the past 20 years. We find that 56%, 85%, 38%, and 28% of CVEs miss vulnerability type, root cause, attack vector, and attacker type, respectively. By comparing the differences of the latest updated CVE reports across different databases, we observe that 1,476 missing key aspects in 1,320 CVE descriptions were augmented manually in the National Vulnerability Database (NVD), which indicates that the vulnerability database maintainers try to complete the vulnerability descriptions in practice to mitigate such a problem.
   To help complete the missing information of key vulnerability aspects and reduce human efforts, we propose a neural-network-based approach called PMA to predict the missing key aspects of a vulnerability based on its known aspects. We systematically explore the design space of the neural network models and empirically identify the most effective model design in the scenario. Our ablation study reveals the prominent correlations among vulnerability aspects when predicting. Trained with historical CVEs, our model achieves 88%, 71%, 61%, and 81% in F1 for predicting the missing vulnerability type, root cause, attacker type, and attack vector of 8,623 "future" CVEs across 3 years, respectively. Furthermore, we validate the predicting performance of key aspect augmentation of CVEs based on the manually augmented CVE data collected from NVD, which confirms the practicality of our approach. We finally highlight that PMA has the ability to reduce human efforts by recommending and augmenting missing key aspects for vulnerability databases, and to facilitate other research works such as severity level prediction of CVEs based on the vulnerability descriptions.
C1 [Guo, Hao; Chen, Sen; Li, Xiaohong; Bai, Yude] Tianjin Univ, Coll Intelligence & Comp, Tianjin, Peoples R China.
   [Xing, Zhenchang; Sun, Jiamou] Australian Natl Univ, Res Sch Comp Sci, Canberra, ACT, Australia.
C3 Tianjin University; Australian National University
RP Chen, S; Li, XH (corresponding author), Tianjin Univ, Coll Intelligence & Comp, Tianjin, Peoples R China.
EM haoguo@tju.edu.cn; senchen@tju.edu.cn; Zhenchang.Xing@anu.edu.au;
   xiaohongli@tju.edu.cn; baiyude@tju.edu.cn; u5871153@anu.edu.au
RI zhang, xiang/JJD-7003-2023; cheng, qian/KFB-6227-2024; Wang,
   Yifan/KDO-8319-2024
FU National Natural Science Foundation of China [62102284, 61872262]
FX This work has partially been supported by The National Natural Science
   Foundation of China (No. 62102284, 61872262).
CR Abadi M, 2016, PROCEEDINGS OF OSDI'16: 12TH USENIX SYMPOSIUM ON OPERATING SYSTEMS DESIGN AND IMPLEMENTATION, P265
   Alqahtani Sultan S., 2019, P 2019 17 INT C PRIV, P1
   [Anonymous], 2019, Common attack pattern enumeration and classification (CAPEC)
   [Anonymous], 2017, P 3 WORKSH NOIS US G, DOI [10.18653/v1/W17-4421, DOI 10.18653/V1/W17-4421]
   [Anonymous], 2015, P 3 INT C LEARN REPR
   Anwar Aqeel, 2020, Masked face recognition for secure authentication
   Bhandari P, 2016, PROCEDIA COMPUT SCI, V92, P23, DOI 10.1016/j.procs.2016.07.318
   Binyamini H., 2020, ARXIV PREPRINT ARXIV
   Bozorgi M., 2010, Proceedings of of 16th International Conference of on Knowledge discovery and data mining, P105
   Brompwnie, 2017, CVE20205260
   Chen GB, 2016, IEEE INT CONF AUTOM, P744, DOI 10.1145/2970276.2970317
   Chen Yang, 2020, P 42 INT C SOFTWARE
   Chowdhury I, 2011, J SYST ARCHITECT, V57, P294, DOI 10.1016/j.sysarc.2010.06.003
   Corporation MITRE, 2019, COMM VULN EXP CVE
   Corporation MITRE, 2019, COMM ATT PATT EN CLA
   CorporationMITRE, 2017, NVDCVE201712695
   Dong Y, 2019, PROCEEDINGS OF THE 28TH USENIX SECURITY SYMPOSIUM, P869
   Evans Jonathan, 2020, MITRE KEY DET PHRAS
   Feldman R, 2013, COMMUN ACM, V56, P82, DOI 10.1145/2436256.2436274
   FIRST, 2019, COMMON VULNERABILITY
   Glorot X., 2011, JMLR Proceedings, V15, P315, DOI DOI 10.1002/ECS2.1832
   Gong X, 2019, IEEE INT C ENG COMP, P31, DOI 10.1109/ICECCS.2019.00011
   Google, 2019, WORD2VEC
   Guo H, 2021, P INT COMP SOFTW APP, P1020, DOI 10.1109/COMPSAC51774.2021.00138
   Gurulingappa H, 2012, J BIOMED INFORM, V45, P885, DOI 10.1016/j.jbi.2012.04.008
   Han ZB, 2017, PROC IEEE INT CONF S, P125, DOI 10.1109/ICSME.2017.52
   Hassan A, 2018, IEEE ACCESS, V6, P13949, DOI 10.1109/ACCESS.2018.2814818
   Hemberg Erik, 2020, ARXIV PREPRINT ARXIV
   Howard J, 2018, PROCEEDINGS OF THE 56TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (ACL), VOL 1, P328
   Iacobacci I, 2016, PROCEEDINGS OF THE 54TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, VOL 1, P897
   IBM, 2019, IBM X FORC EXCH
   Kasif Dekel, 2017, WHATS RCE PATCH
   Kim Y, 2014, ARXIV PREPRINT ARXIV, DOI 10.3115/v1/D14-1181
   Li J, 2018, INFORM SCIENCES, V448, P36, DOI 10.1016/j.ins.2018.03.014
   Manning CD, 2014, PROCEEDINGS OF 52ND ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS: SYSTEM DEMONSTRATIONS, P55, DOI 10.3115/v1/p14-5010
   Mikolov T., 2013, ADV NEURAL INFORM PR, V26, P3111, DOI DOI 10.5555/2999792.2999959
   mitre, 2019, COMM WEAKN EN CWE
   Mou Lili, 2014, CORR ABS14095718 ARX
   Mu DL, 2018, PROCEEDINGS OF THE 27TH USENIX SECURITY SYMPOSIUM, P919
   Nalisnick E, 2016, PROCEEDINGS OF THE 25TH INTERNATIONAL CONFERENCE ON WORLD WIDE WEB (WWW'16 COMPANION), P83, DOI 10.1145/2872518.2889361
   Neuhaus S, 2007, CCS'07: PROCEEDINGS OF THE 14TH ACM CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P529
   NIST, 2017, NIST17
   Radford Alec, 2018, IMPROVING LANGUAGE U, DOI DOI 10.18653/V1/N18-1202
   Reed Scott, 2015, ICLR
   Riaz Kashif., 2010, P 2010 NAMED ENTITIE, P126
   Rohrmann G.F., 2019, BACULOVIRUS MOL BIOL, V4th ed.
   Scandariato R, 2014, IEEE T SOFTWARE ENG, V40, P993, DOI 10.1109/TSE.2014.2340398
   Shin Y, 2011, IEEE T SOFTWARE ENG, V37, P772, DOI 10.1109/TSE.2010.81
   Singh R., 2013, ELEMENTS SURVEY SAMP
   The MITRE Corporation, 2019, CVEFORM SUBM CVE REQ
   Wang LY, 2008, LECT NOTES COMPUT SC, V5094, P283
   Wang S, 2016, PROC INT CONF SOFTW, P297, DOI 10.1145/2884781.2884804
   Woolson RF, 2007, Wiley encyclopedia of clinical trials, P1, DOI [10.1002/9780471462422.eoct979, DOI 10.1002/9780471462422.EOCT979]
   Xia X, 2016, IEEE T SOFTWARE ENG, V42, P977, DOI 10.1109/TSE.2016.2543218
   Xiao HB, 2019, LECT NOTES COMPUT SC, V11955, P50, DOI 10.1007/978-3-030-36718-3_5
   Xu BW, 2016, IEEE INT CONF AUTOM, P51, DOI 10.1145/2970276.2970357
   Yang Z., 2016, P 2016 C N AM CHAPT, P1480, DOI [DOI 10.18653/V1/N16-1174, 10.18653/v1/n16-1174]
   Ye X, 2016, PROC INT CONF SOFTW, P404, DOI 10.1145/2884781.2884862
   Zhan X, 2021, PROC INT CONF SOFTW, P1695, DOI 10.1109/ICSE43902.2021.00150
   Zhang Y, 2017, ADV SOC SCI EDUC HUM, V185, P253
   Zhou YQ, 2019, ADV NEUR IN, V32
NR 61
TC 7
Z9 8
U1 4
U2 12
PU ASSOC COMPUTING MACHINERY
PI NEW YORK
PA 1601 Broadway, 10th Floor, NEW YORK, NY USA
SN 1049-331X
EI 1557-7392
J9 ACM T SOFTW ENG METH
JI ACM Trans. Softw. Eng. Methodol.
PD JUL
PY 2022
VL 31
IS 3
AR 49
DI 10.1145/3498537
PG 27
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 1N4AE
UT WOS:000800599100016
DA 2024-07-18
ER

PT J
AU Yang, YM
   Xia, X
   Lo, D
   Bi, TT
   Grundy, J
   Yang, XH
AF Yang, Yanming
   Xia, Xin
   Lo, David
   Bi, Tingting
   Grundy, John
   Yang, Xiaohu
TI Predictive Models in Software Engineering: Challenges and Opportunities
SO ACM TRANSACTIONS ON SOFTWARE ENGINEERING AND METHODOLOGY
LA English
DT Article
DE Predictive models; machine learning; deep learning; software
   engineering; survey
ID SUPPORT VECTOR MACHINE; DEFECT PREDICTION; FAULT-PREDICTION; BAYESIAN
   NETWORKS; CODE CHANGES; IMPACT; PERFORMANCE; SELECTION; METRICS; CLONE
AB Predictive models are one of the most important techniques that are widely applied in many areas of software engineering. There have been a large number of primary studies that apply predictive models and that present well-performed studies in various research domains, including software requirements, software design and development, testing and debugging, and software maintenance. This article is a first attempt to systematically organize knowledge in this area by surveying a body of 421 papers on predictive models published between 2009 and 2020. We describe the key models and approaches used, classify the different models, summarize the range of key application areas, and analyze research results. Based on our findings, we also propose a set of current challenges that still need to be addressed in future work and provide a proposed research road map for these opportunities.
C1 [Yang, Yanming; Yang, Xiaohu] Zhejiang Univ, Hangzhou, Peoples R China.
   [Xia, Xin] Software Engn Applicat Technol Lab, Huawei, Peoples R China.
   [Lo, David] Singapore Management Univ, Singapore, Singapore.
   [Bi, Tingting; Grundy, John] Monash Univ, Clayton, Vic 3800, Australia.
C3 Zhejiang University; Huawei Technologies; Singapore Management
   University; Monash University
RP Xia, X (corresponding author), Software Engn Applicat Technol Lab, Huawei, Peoples R China.
EM yanmingyang@zju.edu.cn; xin.xia@acm.org; davidlo@smu.edu.sg;
   Tingting.Bi@monash.edu; John.Grundy@monash.edu; yangxh@zju.edu.cn
RI Bi, Tingting/ABC-7609-2020; Lo, David/A-2493-2012; Grundy,
   John/I-6681-2012
OI Lo, David/0000-0002-4367-7201; Grundy, John/0000-0003-4928-7076; Xia,
   Xin/0000-0002-6302-3256
FU ARC [FL190100035]; National Research Foundation, Singapore under its
   Industry Alignment Fund-Pre-positioning (IAF-PP) Funding Initiative
FX This research is supported by ARC Laureate Fellowship (FL190100035) and
   the National Research Foundation, Singapore under its Industry Alignment
   Fund-Pre-positioning (IAF-PP) Funding Initiative. Any opinions,
   findings, and conclusions or recommendations expressed in this material
   are those of the author(s) and do not reflect the views of National
   Research Foundation, Singapore.
CR Abad ZSH, 2019, PROC INT CONF SOFTW, P442, DOI 10.1109/ICSE.2019.00057
   Abdeen H, 2015, INFORM SOFTWARE TECH, V67, P220, DOI 10.1016/j.infsof.2015.07.007
   Abebe SL, 2016, EMPIR SOFTW ENG, V21, P1107, DOI 10.1007/s10664-015-9377-5
   Abualhaija S, 2020, EMPIR SOFTW ENG, V25, P5454, DOI 10.1007/s10664-020-09864-1
   Afric P, 2020, J SYST SOFTWARE, V168, DOI 10.1016/j.jss.2020.110641
   Agrawal Amritanshu, 2018, 2018 IEEE/ACM 40th International Conference on Software Engineering (ICSE). Proceedings, P1050, DOI 10.1145/3180155.3180197
   Ahasanuzzaman M, 2020, EMPIR SOFTW ENG, V25, P1493, DOI 10.1007/s10664-019-09743-4
   Al Dallal J, 2012, ACM T SOFTW ENG METH, V21, DOI 10.1145/2089116.2089118
   Alahmadi M, 2020, INT C PROGRAM COMPRE, P319, DOI 10.1145/3387904.3389265
   Allamanis M, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P281, DOI 10.1145/2635868.2635883
   Allix K, 2016, EMPIR SOFTW ENG, V21, P183, DOI 10.1007/s10664-014-9352-6
   Alrashedy K, 2020, J SYST SOFTWARE, V162, DOI 10.1016/j.jss.2019.110505
   Amar A, 2019, PROC INT CONF SOFTW, P140, DOI 10.1109/ICSE.2019.00031
   Nguyen AT, 2012, IEEE INT CONF AUTOM, P70, DOI 10.1145/2351676.2351687
   Anh Tuan Nguyen, 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P263, DOI 10.1109/ASE.2011.6100062
   Anish PR, 2016, PROC INT CONF SOFTW, P843, DOI 10.1145/2884781.2884801
   [Anonymous], 2012, P ACM SIGSOFT 20 INT
   Anvik J, 2011, ACM T SOFTW ENG METH, V20, DOI 10.1145/2000791.2000794
   Arisholm E, 2010, J SYST SOFTWARE, V83, P2, DOI 10.1016/j.jss.2009.06.055
   Aslan Ö, 2020, IEEE ACCESS, V8, P6249, DOI 10.1109/ACCESS.2019.2963724
   Bacchelli A, 2012, PROC INT CONF SOFTW, P375, DOI 10.1109/ICSE.2012.6227177
   Bai YD, 2020, PROC INT CONF SOFTW, P1560, DOI 10.1145/3377811.3380354
   Bao L, 2018, IEEE INT CONF AUTOM, P29, DOI 10.1145/3238147.3238175
   Bao L, 2018, J SYST SOFTWARE, V143, P172, DOI 10.1016/j.jss.2018.05.016
   Bao LF, 2021, IEEE T SOFTWARE ENG, V47, P1277, DOI 10.1109/TSE.2019.2918536
   Bao LF, 2020, ACM T SOFTW ENG METH, V29, DOI 10.1145/3392093
   Bao LF, 2017, IEEE WORK CONF MIN S, P170, DOI 10.1109/MSR.2017.58
   Bell RM, 2013, EMPIR SOFTW ENG, V18, P478, DOI 10.1007/s10664-011-9178-4
   Ben Abdessalem R, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1016, DOI 10.1145/3180155.3180160
   Bennin KE, 2019, EMPIR SOFTW ENG, V24, P602, DOI 10.1007/s10664-018-9633-6
   Benoit Tristan, P IEEE INT C SOFTWAR, P131
   Bernal-Cárdenas C, 2020, PROC INT CONF SOFTW, P309, DOI 10.1145/3377811.3380328
   Bettaieb S, 2020, EMPIR SOFTW ENG, V25, P2550, DOI 10.1007/s10664-020-09814-x
   Beyer S, 2020, EMPIR SOFTW ENG, V25, P2258, DOI 10.1007/s10664-019-09758-x
   Bhattacharya P, 2012, J SYST SOFTWARE, V85, P2275, DOI 10.1016/j.jss.2012.04.053
   Bian P, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P1101, DOI 10.1145/3368089.3409678
   Blincoe K., 2013, Proc. 9th Joint Meeting on Foundations of Software Engineering (ESEC/FSE 13), P213, DOI DOI 10.1145/2491411.2491440
   Blincoe K, 2019, EMPIR SOFTW ENG, V24, P1610, DOI 10.1007/s10664-018-9656-z
   Bourque Pierre, 2014, SWEBOK: Guide to the Software Engineering Body of Knowledge, V3rd
   Bowes David., 2016, Proceedings of the 25th International Symposium on Software Testing and Analysis, P330, DOI DOI 10.1145/2931037.2931039
   Brindescu C, 2020, PROC INT CONF SOFTW, P801, DOI 10.1145/3377811.3380344
   Bui NDQ, 2019, 2019 IEEE 26TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER), P422, DOI [10.1109/SANER.2019.8667995, 10.1109/saner.2019.8667995]
   Buse RPL, 2010, IEEE T SOFTWARE ENG, V36, P546, DOI 10.1109/TSE.2009.70
   Buse RPL, 2009, PROC INT CONF SOFTW, P144, DOI 10.1109/ICSE.2009.5070516
   Cambronero J, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P964, DOI 10.1145/3338906.3340458
   Canfora G, 2015, SOFTW TEST VERIF REL, V25, P426, DOI 10.1002/stvr.1570
   Casalnuovo C, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P755, DOI 10.1109/ICSE.2015.88
   Catolino G, 2020, EMPIR SOFTW ENG, V25, P49, DOI 10.1007/s10664-019-09739-0
   Catolino G, 2019, J SYST SOFTWARE, V152, P165, DOI 10.1016/j.jss.2019.03.002
   Catolino G, 2018, J SYST SOFTWARE, V143, P14, DOI 10.1016/j.jss.2018.05.003
   Cerpa N, 2016, J SYST SOFTWARE, V112, P48, DOI 10.1016/j.jss.2015.10.011
   Chandramohan M, 2013, IEEE INT CONF AUTOM, P312, DOI 10.1109/ASE.2013.6693090
   Chen BH, 2020, IEEE INT CONF AUTOM, P42, DOI 10.1145/3324884.3416616
   Chen GB, 2016, IEEE INT CONF AUTOM, P744, DOI 10.1145/2970276.2970317
   Chen HC, 2019, J SYST SOFTWARE, V153, P45, DOI 10.1016/j.jss.2019.03.010
   Chen JF, 2020, J SYST SOFTWARE, V167, DOI 10.1016/j.jss.2020.110616
   Chen JY, 2020, PROC INT CONF SOFTW, P578, DOI 10.1145/3377811.3380389
   Chen QY, 2021, ACM T SOFTW ENG METH, V30, DOI 10.1145/3434280
   Chen SH, 2011, IEEE C EVOL COMPUTAT, P45, DOI 10.1145/1806799.1806811
   Chen TH, 2017, IEEE T RELIAB, V66, P806, DOI 10.1109/TR.2017.2699938
   Chen X, 2020, EMPIR SOFTW ENG, V25, P1382, DOI 10.1007/s10664-019-09793-8
   Chen Y, 2020, IEEE WORK CONF MIN S, P32, DOI 10.1145/3379597.3387461
   Chen ZP, 2021, ACM T SOFTW ENG METH, V30, DOI 10.1145/3424308
   Chen ZP, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P841, DOI 10.1145/3338906.3338977
   Cheung S.-C., 2011, P 19 ACM SIGSOFT S 1, P15
   Choetkiertikul M, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P280, DOI 10.1109/MSR.2015.33
   Cooray D., 2010, P IEEE ACM INT C AUT, P83
   Cotroneo D, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P142, DOI 10.1109/ICSE.2013.6606560
   Daye Nam, 2019, 2019 34th IEEE/ACM International Conference on Automated Software Engineering (ASE). Proceedings, P615, DOI 10.1109/ASE.2019.00063
   de Carvalho AB, 2010, J SYST SOFTWARE, V83, P868, DOI 10.1016/j.jss.2009.12.023
   Dehghan A, 2017, IEEE WORK CONF MIN S, P124, DOI 10.1109/MSR.2017.53
   Dejaeger K, 2013, IEEE T SOFTWARE ENG, V39, P237, DOI 10.1109/TSE.2012.20
   Dejaeger K, 2012, IEEE T SOFTWARE ENG, V38, P375, DOI 10.1109/TSE.2011.55
   Dey Tapajit, 2020, P IEEEACM 42 INT C S, P209, DOI DOI 10.1145/3387940.3391502
   Di Nucci D, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P612, DOI 10.1109/SANER.2018.8330266
   Di Nucci D, 2015, PROC IEEE INT CONF S, P241, DOI 10.1109/ICSM.2015.7332470
   Di Sorbo A, 2015, IEEE INT CONF AUTOM, P12, DOI 10.1109/ASE.2015.12
   Dooley J., 2011, SOFTWARE DEV PROFESS
   Dwarakanath A, 2018, ISSTA'18: PROCEEDINGS OF THE 27TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P118, DOI 10.1145/3213846.3213858
   Egelman CD, 2020, PROC INT CONF SOFTW, P174, DOI 10.1145/3377811.3380414
   Eken B, 2019, 2019 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING WORKSHOPS (ASEW 2019), P98, DOI 10.1109/ASEW.2019.00038
   Eken B, 2021, J SYST SOFTWARE, V181, DOI 10.1016/j.jss.2021.111038
   Fakhoury S, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P602, DOI 10.1109/SANER.2018.8330265
   Falessi D, 2020, IEEE T SOFTWARE ENG, V46, P420, DOI 10.1109/TSE.2018.2861735
   Falessi D, 2017, EMPIR SOFTW ENG, V22, P996, DOI 10.1007/s10664-016-9460-6
   Falessi D, 2013, IEEE T SOFTWARE ENG, V39, P18, DOI 10.1109/TSE.2011.122
   Fan YR, 2021, IEEE T SOFTWARE ENG, V47, P1559, DOI 10.1109/TSE.2019.2929761
   Fan YR, 2020, IEEE T SOFTWARE ENG, V46, P495, DOI 10.1109/TSE.2018.2864217
   Fan YR, 2018, EMPIR SOFTW ENG, V23, P3346, DOI 10.1007/s10664-018-9602-0
   Fang C., 2020, P 29 ACM SIGSOFT INT, P516, DOI 10.1145/3395363.3397362
   Femmer H, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P1022, DOI 10.1109/ICSE.2013.6606652
   Filieri A, 2016, IEEE T SOFTWARE ENG, V42, P75, DOI 10.1109/TSE.2015.2421318
   Fontana FA, 2016, EMPIR SOFTW ENG, V21, P1143, DOI 10.1007/s10664-015-9378-4
   Fritz T, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P402, DOI 10.1145/2568225.2568266
   Fu W, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P49, DOI 10.1145/3106237.3106256
   Fu W, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P72, DOI 10.1145/3106237.3106257
   Ghotra B, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P789, DOI 10.1109/ICSE.2015.91
   Giger E, 2011, P 8 WORK C MIN SOFTW, P83, DOI [10.1145/1985441.1985456, DOI 10.1145/1985441.1985456]
   Giger E, 2012, INT SYMP EMP SOFTWAR, P171, DOI 10.1145/2372251.2372285
   Girardi D, 2020, PROC INT CONF SOFTW, P666, DOI 10.1145/3377811.3380374
   Gopalakrishnan R, 2017, PROC INT CONF SOFTW, P15, DOI 10.1109/ICSE.2017.10
   Gopinath D, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P243, DOI 10.1145/2568225.2568303
   Gottipati S., 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P323, DOI 10.1109/ASE.2011.6100069
   Grano G, 2021, IEEE T SOFTWARE ENG, V47, P758, DOI 10.1109/TSE.2019.2903057
   Groce A, 2014, IEEE T SOFTWARE ENG, V40, P307, DOI 10.1109/TSE.2013.59
   Gu YF, 2019, J SYST SOFTWARE, V148, P88, DOI 10.1016/j.jss.2018.11.004
   Guo JM, 2013, IEEE INT CONF AUTOM, P301, DOI 10.1109/ASE.2013.6693089
   Guo PJ, 2010, Proceedings of the 32nd ACM/IEEE International Conference on Software Engineering, P495
   Ha H, 2019, PROC INT CONF SOFTW, P1095, DOI 10.1109/ICSE.2019.00113
   Habib A, 2018, IEEE INT CONF AUTOM, P41, DOI 10.1145/3238147.3238212
   Haiduc S, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P842, DOI 10.1109/ICSE.2013.6606630
   Haiduc S, 2012, IEEE INT CONF AUTOM, P90, DOI 10.1145/2351676.2351690
   Haiduc S, 2012, PROC INT CONF SOFTW, P1273, DOI 10.1109/ICSE.2012.6227101
   Hajri I, 2020, EMPIR SOFTW ENG, V25, P3711, DOI 10.1007/s10664-020-09853-4
   Han ZB, 2017, PROC IEEE INT CONF S, P125, DOI 10.1109/ICSME.2017.52
   Hanam Q., 2014, P 11 WORKING C MININ, P152
   Hata H, 2012, PROC INT CONF SOFTW, P200, DOI 10.1109/ICSE.2012.6227193
   Hata H, 2010, EMPIR SOFTW ENG, V15, P147, DOI 10.1007/s10664-009-9117-9
   He JJ, 2020, INT C PROGRAM COMPRE, P117, DOI 10.1145/3387904.3389263
   He P, 2015, INFORM SOFTWARE TECH, V59, P170, DOI 10.1016/j.infsof.2014.11.006
   Hellendoorn VJ, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P152, DOI 10.1145/3236024.3236051
   Herzig K., 2014, P 8 ACM IEEE INT S E
   Herzig K, 2016, EMPIR SOFTW ENG, V21, P303, DOI 10.1007/s10664-015-9376-6
   Hirao T, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P578, DOI 10.1145/3338906.3338949
   Hoa Khanh Dam, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P46, DOI 10.1109/MSR.2019.00017
   Dam HK, 2021, IEEE T SOFTWARE ENG, V47, P67, DOI 10.1109/TSE.2018.2881961
   Hora A, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P278, DOI 10.1145/2950290.2950306
   Hosseini S, 2018, INFORM SOFTWARE TECH, V95, P296, DOI 10.1016/j.infsof.2017.06.004
   Hosseini S, 2019, IEEE T SOFTWARE ENG, V45, P111, DOI 10.1109/TSE.2017.2770124
   Hu W, 2013, IEEE WORK CONF MIN S, P419, DOI 10.1109/MSR.2013.6624058
   Huang J, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P847, DOI 10.1109/ICSE.2015.96
   Huang Q, 2018, EMPIR SOFTW ENG, V23, P418, DOI 10.1007/s10664-017-9522-4
   Huang Q, 2020, IEEE T SOFTWARE ENG, V46, P1098, DOI 10.1109/TSE.2018.2876340
   Huang Q, 2017, PROC IEEE INT CONF S, P159, DOI 10.1109/ICSME.2017.51
   Huang RB, 2021, IEEE T SOFTWARE ENG, V47, P2052, DOI 10.1109/TSE.2019.2942921
   Huang Y, 2018, IEEE INT CONF AUTOM, P214, DOI 10.1145/3238147.3238208
   Huang Y, 2020, J SYST SOFTWARE, V170, DOI 10.1016/j.jss.2020.110754
   Huang Z., 2021, ARXIV PREPRINT ARXIV
   Hui Liu, 2020, ISSTA '20: Proceedings of the 29th ACM SIGSOFT International Symposium on Software Testing and Analysis, P128, DOI 10.1145/3395363.3397355
   Islam MS, 2021, 2021 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2021), P411, DOI 10.1109/SANER50967.2021.00045
   Jeong G, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P111, DOI 10.1145/1595696.1595715
   Jha N, 2018, EMPIR SOFTW ENG, V23, P3734, DOI 10.1007/s10664-018-9605-x
   Jia ZY, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P751, DOI 10.1145/3338906.3338938
   Jiang H, 2017, PROC INT CONF SOFTW, P38, DOI 10.1109/ICSE.2017.12
   Jiang H, 2017, PROC INT CONF SOFTW, P712, DOI 10.1109/ICSE.2017.71
   Jiang JJ, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P1410, DOI 10.1145/3368089.3417054
   Jiang T, 2013, IEEE INT CONF AUTOM, P279, DOI 10.1109/ASE.2013.6693087
   Jing XY, 2017, IEEE T SOFTWARE ENG, V43, P321, DOI 10.1109/TSE.2016.2597849
   Jing XY, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P414, DOI 10.1145/2568225.2568320
   Jing XY, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P496, DOI 10.1145/2786805.2786813
   Jonsson L, 2016, EMPIR SOFTW ENG, V21, P1533, DOI 10.1007/s10664-015-9401-9
   Kabinna S, 2018, EMPIR SOFTW ENG, V23, P290, DOI 10.1007/s10664-017-9518-0
   Kaltenecker C, 2019, PROC INT CONF SOFTW, P1084, DOI 10.1109/ICSE.2019.00112
   Kamei Y, 2016, EMPIR SOFTW ENG, V21, P2072, DOI 10.1007/s10664-015-9400-x
   Kamei Y, 2013, IEEE T SOFTWARE ENG, V39, P757, DOI 10.1109/TSE.2012.70
   Kan EYY, 2012, J SYST SOFTWARE, V85, P960, DOI 10.1016/j.jss.2011.11.1010
   Kapur R, 2020, ACM T SOFTW ENG METH, V29, DOI 10.1145/3384517
   Keele S, 2007, GUIDELINES PERFORMIN
   Khomh F., 2011, 2011 IEEE 27th International Conference on Software Maintenance, P253, DOI 10.1109/ICSM.2011.6080792
   Khomh F, 2011, J SYST SOFTWARE, V84, P559, DOI 10.1016/j.jss.2010.11.921
   Kikas R, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P291, DOI [10.1109/MSR.2016.038, 10.1145/2901739.2901751]
   Kim D, 2013, IEEE T SOFTWARE ENG, V39, P1597, DOI 10.1109/TSE.2013.24
   Kim D, 2011, IEEE T SOFTWARE ENG, V37, P430, DOI 10.1109/TSE.2011.20
   Kim IL, 2020, PROC INT CONF SOFTW, P222, DOI 10.1145/3377811.3380355
   Kim S, 2008, IEEE T SOFTWARE ENG, V34, P181, DOI 10.1109/TSE.2007.70773
   Kim S, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P481, DOI 10.1145/1985793.1985859
   Kitchenham BA, 2004, PROC INT CONF SOFTW, P273
   Kobayashi K., 2011, 2011 IEEE 27th International Conference on Software Maintenance, P43, DOI 10.1109/ICSM.2011.6080771
   Kondo M, 2020, EMPIR SOFTW ENG, V25, P890, DOI 10.1007/s10664-019-09736-3
   Kondo M, 2019, EMPIR SOFTW ENG, V24, P1925, DOI 10.1007/s10664-018-9679-5
   Kotsiantis SB, 2006, PROC WRLD ACAD SCI E, V12, P278
   Kpodjedo S, 2011, EMPIR SOFTW ENG, V16, P141, DOI 10.1007/s10664-010-9151-7
   Krishna R, 2016, IEEE INT CONF AUTOM, P122, DOI 10.1145/2970276.2970339
   Kudjo PK, 2019, PROCEEDINGS OF THE 28TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA '19), P424, DOI 10.1145/3293882.3338985
   Kumar L, 2018, J SYST SOFTWARE, V137, P686, DOI 10.1016/j.jss.2017.04.016
   Lamkanfi Ahmed, 2010, Proceedings of the 2010 7th IEEE Working Conference on Mining Software Repositories (MSR 2010), P1, DOI 10.1109/MSR.2010.5463284
   Le Goues C, 2012, IEEE T SOFTWARE ENG, V38, P175, DOI 10.1109/TSE.2011.5
   Le TDB, 2017, EMPIR SOFTW ENG, V22, P2237, DOI 10.1007/s10664-016-9484-y
   Le TDB, 2015, INT C PROGRAM COMPRE, P36, DOI 10.1109/ICPC.2015.13
   Le Tien-Duy B, 2013, PROC IEEE INT CONF S, P310, DOI 10.1109/ICSM.2013.42
   Lee S, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P814, DOI 10.1145/2568225.2568307
   Lee T., 2011, Proceedings of the 19th ACM SIGSOFT symposium and the 13th European conference on Foundations of software engineering, P311
   Lee T, 2016, IEEE T SOFTWARE ENG, V42, P1015, DOI 10.1109/TSE.2016.2550458
   Lessmann S, 2008, IEEE T SOFTWARE ENG, V34, P485, DOI 10.1109/TSE.2008.35
   Li H, 2017, EMPIR SOFTW ENG, V22, P1831, DOI 10.1007/s10664-016-9467-z
   Li K, 2020, IEEE INT CONF AUTOM, P573, DOI 10.1145/3324884.3416617
   Li Wanchun, 2010, ASE 2010, 25th IEEE/ACM International Conference on Automated Software Engineering, Antwerp, Belgium, September 20-24, 2010, P155
   Li X, 2016, EMPIR SOFTW ENG, V21, P2413, DOI 10.1007/s10664-015-9412-6
   Li YG, 2020, ACM T SOFTW ENG METH, V29, DOI 10.1145/3385187
   Li ZQ, 2017, PROC IEEE INT CONF S, P91, DOI 10.1109/ICSME.2017.19
   Lim Soo Ling, 2010, P 2010 INT C COMP IN, P295, DOI DOI 10.1145/1806799.1806844
   Lin B, 2019, PROC INT CONF SOFTW, P548, DOI 10.1109/ICSE.2019.00066
   Lin B, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P94, DOI 10.1145/3180155.3180195
   Lin DY, 2019, EMPIR SOFTW ENG, V24, P4006, DOI 10.1007/s10664-019-09733-6
   Lin QW, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P480, DOI 10.1145/3236024.3236060
   Lina Gong, 2019, 2019 34th IEEE/ACM International Conference on Automated Software Engineering (ASE). Proceedings, P698, DOI 10.1109/ASE.2019.00071
   Linares-Vasquez M, 2014, EMPIR SOFTW ENG, V19, P582, DOI 10.1007/s10664-012-9230-z
   Liu H, 2017, PROC INT CONF SOFTW, P221, DOI 10.1109/ICSE.2017.28
   Liu H, 2018, IEEE INT CONF AUTOM, P385, DOI 10.1145/3238147.3238166
   Liu H, 2021, IEEE T SOFTWARE ENG, V47, P1811, DOI 10.1109/TSE.2019.2936376
   Liu P., 2018, STAR, V1, P1300
   Liu TM, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P66, DOI 10.1109/ASE.2019.00017
   Liu YB, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P232, DOI 10.1109/SANER.2018.8330212
   Lucia, 2012, PROC INT CONF SOFTW, P397, DOI 10.1109/ICSE.2012.6227175
   Luo SC, 2021, ISSTA '21: PROCEEDINGS OF THE 30TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P336, DOI 10.1145/3460319.3464813
   Ma P, 2020, J SYST SOFTWARE, V170, DOI 10.1016/j.jss.2020.110769
   Ma WWY, 2016, INFORM SOFTWARE TECH, V69, P50, DOI 10.1016/j.infsof.2015.09.001
   Ma Y, 2012, INFORM SOFTWARE TECH, V54, P248, DOI 10.1016/j.infsof.2011.09.007
   Machalica M, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE (ICSE-SEIP 2019), P91, DOI 10.1109/ICSE-SEIP.2019.00018
   Macho C, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P541, DOI 10.1109/SANER.2016.22
   Maddila C, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P874, DOI 10.1145/3338906.3340457
   Majumder S, 2018, IEEE WORK CONF MIN S, P554, DOI 10.1145/3196398.3196424
   Malhotra R, 2019, INFORM SOFTWARE TECH, V112, P51, DOI 10.1016/j.infsof.2019.04.007
   Malhotra R, 2017, EMPIR SOFTW ENG, V22, P2806, DOI 10.1007/s10664-016-9488-7
   Malik H, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P1012, DOI 10.1109/ICSE.2013.6606651
   Malik RS, 2019, PROC INT CONF SOFTW, P304, DOI 10.1109/ICSE.2019.00045
   Martens D, 2019, EMPIR SOFTW ENG, V24, P3316, DOI 10.1007/s10664-019-09706-9
   Mashhadi MJ, 2020, IEEE INT CONF AUTOM, P299, DOI 10.1145/3324884.3416559
   McIntosh A, 2019, EMPIR SOFTW ENG, V24, P562, DOI 10.1007/s10664-018-9629-2
   McMillan C., 2011, 2011 IEEE 27th International Conference on Software Maintenance, P343, DOI 10.1109/ICSM.2011.6080801
   Medeiros I, 2016, IEEE T RELIAB, V65, P54, DOI 10.1109/TR.2015.2457411
   Meneely A., 2011, P 19 ACM SIGSOFT S 1, P81
   Mills C, 2019, PROC IEEE INT CONF S, P103, DOI 10.1109/ICSME.2019.00020
   Mills C, 2017, ACM T SOFTW ENG METH, V26, DOI 10.1145/3078841
   Mirakhorli M, 2016, IEEE T SOFTWARE ENG, V42, P206, DOI 10.1109/TSE.2015.2479217
   Mirakhorli M, 2012, PROC INT CONF SOFTW, P639, DOI 10.1109/ICSE.2012.6227153
   Misirli AT, 2016, EMPIR SOFTW ENG, V21, P605, DOI 10.1007/s10664-015-9370-z
   Misirli AT, 2014, IEEE T SOFTWARE ENG, V40, P533, DOI 10.1109/TSE.2014.2321179
   Mittas N, 2013, IEEE T SOFTWARE ENG, V39, P537, DOI 10.1109/TSE.2012.45
   Mockus A, 2009, 2009 6TH IEEE INTERNATIONAL WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES, P11, DOI 10.1109/MSR.2009.5069476
   Molina F, 2019, PROC INT CONF SOFTW, P759, DOI 10.1109/ICSE.2019.00084
   Monden A, 2013, IEEE T SOFTWARE ENG, V39, P1345, DOI 10.1109/TSE.2013.21
   Montandon Joao Eduardo, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P276, DOI 10.1109/MSR.2019.00054
   Moran K, 2020, PROC INT CONF SOFTW, P873, DOI 10.1145/3377811.3380418
   Moran K, 2020, IEEE T SOFTWARE ENG, V46, P196, DOI 10.1109/TSE.2018.2844788
   Moreno L, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P567, DOI 10.1145/2786805.2786859
   Mori T, 2019, EMPIR SOFTW ENG, V24, P779, DOI 10.1007/s10664-018-9638-1
   Mostaeen G, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P1105, DOI 10.1145/3338906.3341182
   Moussa R, 2017, J SYST SOFTWARE, V132, P41, DOI 10.1016/j.jss.2017.06.059
   Müller SC, 2016, PROC INT CONF SOFTW, P452, DOI 10.1145/2884781.2884803
   Mukherjee D, 2013, IEEE WORK CONF MIN S, P12, DOI 10.1109/MSR.2013.6623998
   Müller SC, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P688, DOI 10.1109/ICSE.2015.334
   Munaiah N, 2017, EMPIR SOFTW ENG, V22, P3219, DOI 10.1007/s10664-017-9512-6
   Murgia A, 2018, EMPIR SOFTW ENG, V23, P521, DOI 10.1007/s10664-017-9526-0
   Murtaza SS, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P960, DOI 10.1145/1985793.1985959
   Murukannaiah PK, 2015, ACM T SOFTW ENG METH, V24, DOI 10.1145/2729976
   Nafi KW, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P1026, DOI 10.1109/ASE.2019.00099
   Nagappan N, 2005, PROC INT CONF SOFTW, P284, DOI 10.1145/1062455.1062514
   Nair V, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P257, DOI 10.1145/3106237.3106238
   Nam J, 2018, IEEE T SOFTWARE ENG, V44, P874, DOI 10.1109/TSE.2017.2720603
   Nam J, 2015, IEEE INT CONF AUTOM, P452, DOI 10.1109/ASE.2015.56
   Nam J, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P382, DOI 10.1109/ICSE.2013.6606584
   Narayanan A, 2018, EMPIR SOFTW ENG, V23, P1222, DOI 10.1007/s10664-017-9539-8
   Nasab AR, 2021, J SYST SOFTWARE, V181, DOI 10.1016/j.jss.2021.111046
   Natella R, 2013, IEEE T SOFTWARE ENG, V39, P80, DOI 10.1109/TSE.2011.124
   Nayebi M, 2018, EMPIR SOFTW ENG, V23, P2764, DOI 10.1007/s10664-018-9601-1
   Nayebi M, 2017, INT SYMP EMP SOFTWAR, P324, DOI 10.1109/ESEM.2017.46
   Nejati S, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P242, DOI 10.1145/2950290.2950293
   Nguyen S, 2020, PROC INT CONF SOFTW, P1372, DOI 10.1145/3377811.3380926
   Ni Z, 2020, J SYST SOFTWARE, V163, DOI 10.1016/j.jss.2020.110538
   Niu HR, 2017, EMPIR SOFTW ENG, V22, P259, DOI 10.1007/s10664-015-9421-5
   Nori Aditya V., 2013, ESECSIGSOFT FSE, P246, DOI 10.1145/2491411
   Ochodek M, 2020, EMPIR SOFTW ENG, V25, P220, DOI 10.1007/s10664-019-09769-8
   Okutan A, 2016, J SYST SOFTWARE, V119, P109, DOI 10.1016/j.jss.2016.06.006
   Okutan A, 2014, EMPIR SOFTW ENG, V19, P154, DOI 10.1007/s10664-012-9218-8
   Owhadi-Kareshk M, 2019, INT SYMP EMP SOFTWAR, P363
   Ozcelik B, 2016, IEEE T SOFTWARE ENG, V42, P26, DOI 10.1109/TSE.2015.2442577
   Padhye Rohan., 2014, Proceedings of the 29th ACM/IEEE international conference on Automated software engineering, P665
   Palomba F, 2021, IEEE T SOFTWARE ENG, V47, P108, DOI 10.1109/TSE.2018.2883603
   Palomba F, 2021, J SYST SOFTWARE, V171, DOI 10.1016/j.jss.2020.110847
   Palomba F, 2016, PROC IEEE INT CONF S, P245, DOI 10.1109/ICSME.2016.27
   Pan C, 2021, ISSTA '21: PROCEEDINGS OF THE 30TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P553, DOI 10.1145/3460319.3464840
   Panichella A, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P522, DOI 10.1109/ICSE.2013.6606598
   Papadakis M, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P537, DOI 10.1145/3180155.3180183
   Pascarella L, 2020, J SYST SOFTWARE, V161, DOI 10.1016/j.jss.2019.110493
   Pascarella L, 2019, EMPIR SOFTW ENG, V24, P1499, DOI 10.1007/s10664-019-09694-w
   Pascarella L, 2019, J SYST SOFTWARE, V150, P22, DOI 10.1016/j.jss.2018.12.001
   Pascarella L, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P592, DOI 10.1109/SANER.2018.8330264
   Pecorelli F, 2020, J SYST SOFTWARE, V169, DOI 10.1016/j.jss.2020.110693
   Pecorelli F, 2019, INT C PROGRAM COMPRE, P93, DOI 10.1109/ICPC.2019.00023
   Pei Jiayan, 2021, ARXIV PREPRINT ARXIV
   Perez Daniel, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P518, DOI 10.1109/MSR.2019.00078
   Perini A, 2013, IEEE T SOFTWARE ENG, V39, P445, DOI 10.1109/TSE.2012.52
   Peters F, 2019, IEEE T SOFTWARE ENG, V45, P615, DOI 10.1109/TSE.2017.2787653
   Peters F, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P801, DOI 10.1109/ICSE.2015.92
   Peters F, 2013, IEEE WORK CONF MIN S, P409, DOI 10.1109/MSR.2013.6624057
   Peters F, 2013, IEEE T SOFTWARE ENG, V39, P1054, DOI 10.1109/TSE.2013.6
   Peters F, 2012, PROC INT CONF SOFTW, P189, DOI 10.1109/ICSE.2012.6227194
   Petersen K, 2015, INFORM SOFTWARE TECH, V64, P1, DOI 10.1016/j.infsof.2015.03.007
   Pitakrat T, 2018, J SYST SOFTWARE, V137, P669, DOI 10.1016/j.jss.2017.02.041
   Pornprasit C., 2021, ARXIV PREPRINT ARXIV
   Posnett D., 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P362, DOI 10.1109/ASE.2011.6100074
   Pradel Michael, 2020, ISSTA '20: Proceedings of the 29th ACM SIGSOFT International Symposium on Software Testing and Analysis, P225, DOI 10.1145/3395363.3397356
   Pradel M, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P209, DOI 10.1145/3368089.3409715
   Prana GAA, 2019, EMPIR SOFTW ENG, V24, P1296, DOI 10.1007/s10664-018-9660-3
   Premraj R, 2011, INT SYMP EMP SOFTWAR, P215, DOI 10.1109/ESEM.2011.30
   Qian Wu, 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P233, DOI 10.1109/ASE.2011.6100058
   Qu Y, 2021, IEEE T SOFTWARE ENG, V47, P348, DOI 10.1109/TSE.2019.2892959
   Rahman F, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P424, DOI 10.1145/2568225.2568269
   Rahman F, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P432, DOI 10.1109/ICSE.2013.6606589
   Rahman Foyzur, 2013, P 2013 9 JOINT M FDN, P147
   Rahman MM, 2017, IEEE WORK CONF MIN S, P215, DOI 10.1109/MSR.2017.17
   Rajbahadur GK, 2017, IEEE WORK CONF MIN S, P135, DOI 10.1109/MSR.2017.4
   Ramírez-Mora SL, 2020, J SYST SOFTWARE, V168, DOI 10.1016/j.jss.2020.110663
   Rath M, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P834, DOI 10.1145/3180155.3180207
   Rehman I, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P117, DOI 10.1145/3180155.3180234
   Ren LY, 2019, 2019 IEEE 26TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER), P230, DOI [10.1109/SANER.2019.8668023, 10.1109/saner.2019.8668023]
   Rigby PC, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P832, DOI 10.1109/ICSE.2013.6606629
   Rodeghero P, 2017, PROC INT CONF SOFTW, P49, DOI 10.1109/ICSE.2017.13
   Romano D., 2011, 2011 IEEE 27th International Conference on Software Maintenance, P303, DOI 10.1109/ICSM.2011.6080797
   Roy A, 2018, EMPIR SOFTW ENG, V23, P570, DOI 10.1007/s10664-017-9530-4
   Roy D, 2020, INT C PROGRAM COMPRE, P25, DOI 10.1145/3387904.3389255
   Russo B, 2015, EMPIR SOFTW ENG, V20, P879, DOI 10.1007/s10664-014-9303-2
   Ryu D, 2016, EMPIR SOFTW ENG, V21, P43, DOI 10.1007/s10664-014-9346-4
   Sabbaghi A, 2020, J SYST SOFTWARE, V168, DOI 10.1016/j.jss.2020.110635
   Saccente N, 2019, 2019 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING WORKSHOPS (ASEW 2019), P114, DOI 10.1109/ASEW.2019.00040
   Saini V, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P354, DOI 10.1145/3236024.3236026
   Santos F, 2021, 2021 IEEE ACM 18 INT, P346
   Sarkar A, 2019, PROC IEEE INT CONF S, P81, DOI 10.1109/ICSME.2019.00018
   Scandariato R, 2014, IEEE T SOFTWARE ENG, V40, P993, DOI 10.1109/TSE.2014.2340398
   Schmidhuber J, 2015, NEURAL NETWORKS, V61, P85, DOI 10.1016/j.neunet.2014.09.003
   Shar LK, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P642, DOI 10.1109/ICSE.2013.6606610
   Shi L, 2020, PROC INT CONF SOFTW, P641, DOI 10.1145/3377811.3380356
   Shi Y, 2017, EMPIR SOFTW ENG, V22, P1579, DOI 10.1007/s10664-016-9425-9
   Shihab E, 2013, EMPIR SOFTW ENG, V18, P1005, DOI 10.1007/s10664-012-9228-6
   Shimagaki J, 2018, PROCEEDINGS OF THE 12TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT (ESEM 2018), DOI 10.1145/3239235.3268927
   Shin Y, 2013, EMPIR SOFTW ENG, V18, P25, DOI 10.1007/s10664-011-9190-8
   Shin Y, 2012, EMPIR SOFTW ENG, V17, P390, DOI 10.1007/s10664-011-9165-9
   Shin Y, 2011, IEEE T SOFTWARE ENG, V37, P772, DOI 10.1109/TSE.2010.81
   Shippey T, 2019, INFORM SOFTWARE TECH, V106, P142, DOI 10.1016/j.infsof.2018.10.001
   Shivaji S, 2013, IEEE T SOFTWARE ENG, V39, P552, DOI 10.1109/TSE.2012.43
   Siegmund N, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P284, DOI 10.1145/2786805.2786845
   Silic M., 2013, P 9 JOINT M FDN SOFT, P70, DOI 10.1145/2491411.2491424
   Sohn J, 2021, IEEE T SOFTWARE ENG, V47, P1605, DOI 10.1109/TSE.2019.2930977
   Soltanifar B, 2016, ESEM'16: PROCEEDINGS OF THE 10TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, DOI 10.1145/2961111.2962601
   Song C, 2014, IEEE T SOFTWARE ENG, V40, P251, DOI 10.1109/TSE.2013.55
   Song QB, 2011, IEEE T SOFTWARE ENG, V37, P356, DOI 10.1109/TSE.2010.90
   Sridharan Murali, 2021, ARXIV PREPRINT ARXIV
   Srisopha Kamonphop, 2020, P 14 ACM IEEE INT S, P1
   Stocco A, 2020, PROC INT CONF SOFTW, P359, DOI 10.1145/3377811.3380353
   Strecker J, 2012, ACM T SOFTW ENG METH, V21, DOI 10.1145/2211616.2211620
   Su Y, 2017, J SYST SOFTWARE, V125, P197, DOI 10.1016/j.jss.2016.12.005
   Suh A, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P1251, DOI 10.1145/3368089.3417062
   Sun C, 2011, INT J CHEM ENG, V2011, DOI 10.1155/2011/545234
   Tan L, 2014, EMPIR SOFTW ENG, V19, P1665, DOI 10.1007/s10664-013-9258-8
   Tan YS, 2020, J SYST SOFTWARE, V165, DOI 10.1016/j.jss.2020.110567
   Tantithamthavorn C, 2020, IEEE T SOFTWARE ENG, V46, P1200, DOI 10.1109/TSE.2018.2876537
   Tantithamthavorn C, 2017, IEEE T SOFTWARE ENG, V43, P1, DOI 10.1109/TSE.2016.2584050
   Tantithamthavorn C, 2016, PROC INT CONF SOFTW, P321, DOI 10.1145/2884781.2884857
   Tantithamthavorn C, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P812, DOI 10.1109/ICSE.2015.93
   Theisen C, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P199, DOI 10.1109/ICSE.2015.148
   Thomas SW, 2013, IEEE T SOFTWARE ENG, V39, P1427, DOI 10.1109/TSE.2013.27
   Thong Hoang, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P34, DOI 10.1109/MSR.2019.00016
   Thongtanunam P, 2019, EMPIR SOFTW ENG, V24, P937, DOI 10.1007/s10664-018-9645-2
   Thung F, 2015, INT C PROGRAM COMPRE, P60, DOI 10.1109/ICPC.2015.15
   Tian Y, 2012, PROC INT CONF SOFTW, P386, DOI 10.1109/ICSE.2012.6227176
   Tian YC, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P303, DOI 10.1145/3180155.3180220
   Tong HN, 2018, INFORM SOFTWARE TECH, V96, P94, DOI 10.1016/j.infsof.2017.11.008
   Torrado N, 2013, IEEE T SOFTWARE ENG, V39, P1179, DOI 10.1109/TSE.2012.87
   Tosun A, 2010, INFORM SOFTWARE TECH, V52, P1242, DOI 10.1016/j.infsof.2010.06.006
   Tourani P, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P189, DOI 10.1109/SANER.2016.113
   Treude Christoph, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P84, DOI 10.1109/MSR.2019.00022
   Tu FF, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P307, DOI 10.1145/3236024.3236054
   Turhan B, 2009, EMPIR SOFTW ENG, V14, P540, DOI 10.1007/s10664-008-9103-7
   Uchôa A, 2021, IEEE WORK CONF MIN S, P471, DOI 10.1109/MSR52588.2021.00059
   Umer Q, 2020, IEEE T RELIAB, V69, P1341, DOI 10.1109/TR.2019.2959624
   Valdivia-Garcia Harold., 2014, P 11 WORKING C MININ, P72
   Vendome C, 2017, PROC INT CONF SOFTW, P118, DOI 10.1109/ICSE.2017.19
   Wang HR, 2018, PROC IEEE INT CONF S, P299, DOI 10.1109/ICSME.2018.00039
   Wang HB, 2017, IEEE T SOFTWARE ENG, V43, P556, DOI 10.1109/TSE.2016.2615615
   Wang JJ, 2016, IEEE INT CONF AUTOM, P190, DOI 10.1145/2970276.2970300
   Wang S, 2020, IEEE T SOFTWARE ENG, V46, P1267, DOI 10.1109/TSE.2018.2877612
   Wang S, 2021, INFORM SOFTWARE TECH, V130, DOI 10.1016/j.infsof.2020.106408
   Wang S, 2016, PROC INT CONF SOFTW, P297, DOI 10.1145/2884781.2884804
   Wang XY, 2014, IEEE T SOFTWARE ENG, V40, P773, DOI 10.1109/TSE.2014.2323972
   Wang XY, 2012, IEEE INT CONF AUTOM, P170, DOI 10.1145/2351676.2351701
   Wang X, 2020, IEEE INT CONF AUTOM, P871, DOI 10.1145/3324884.3416583
   Wen M, 2020, IEEE T SOFTWARE ENG, V46, P1155, DOI 10.1109/TSE.2018.2876256
   Westermann D, 2012, IEEE INT CONF AUTOM, P190, DOI 10.1145/2351676.2351703
   Weyuker EJ, 2010, EMPIR SOFTW ENG, V15, P277, DOI 10.1007/s10664-009-9111-2
   White TD, 2019, PROCEEDINGS OF THE 28TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA '19), P307, DOI 10.1145/3293882.3330551
   Wiese IS, 2017, J SYST SOFTWARE, V128, P220, DOI 10.1016/j.jss.2016.07.016
   Wolf T, 2009, PROC INT CONF SOFTW, P1, DOI 10.1109/ICSE.2009.5070503
   Wood A, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P491, DOI 10.1145/3236024.3236031
   Wu XX, 2021, INFORM SOFTWARE TECH, V133, DOI 10.1016/j.infsof.2021.106530
   Wu YM, 2020, IEEE INT CONF AUTOM, P821, DOI 10.1145/3324884.3416562
   Xia X, 2016, ESEM'16: PROCEEDINGS OF THE 10TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, DOI 10.1145/2961111.2962606
   Xia X, 2016, IEEE T RELIAB, V65, P1810, DOI 10.1109/TR.2016.2588139
   Xia X, 2016, IEEE T SOFTWARE ENG, V42, P977, DOI 10.1109/TSE.2016.2543218
   Xia X, 2016, IEEE T RELIAB, V65, P1094, DOI 10.1109/TR.2015.2484074
   Xia X, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P311, DOI 10.1109/SANER.2015.7081841
   Xia X, 2015, AUTOMAT SOFTW ENG, V22, P75, DOI 10.1007/s10515-014-0162-2
   Xiao P, 2018, J SYST SOFTWARE, V143, P159, DOI 10.1016/j.jss.2018.05.029
   Xiaoyu Liu, 2019, 2019 34th IEEE/ACM International Conference on Automated Software Engineering (ASE). Proceedings, P686, DOI 10.1109/ASE.2019.00070
   Xu BW, 2016, IEEE INT CONF AUTOM, P51, DOI 10.1145/2970276.2970357
   Xu Z, 2021, J SYST SOFTWARE, V172, DOI 10.1016/j.jss.2020.110862
   Xu Z, 2018, INT C PROGRAM COMPRE, P132, DOI 10.1145/3196321.3196331
   Xu Z, 2019, J SYST SOFTWARE, V158, DOI 10.1016/j.jss.2019.110402
   Xu Z, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P209, DOI 10.1109/SANER.2018.8330210
   Xu Z, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P370, DOI 10.1109/SANER.2016.34
   Xueliang Li, 2020, ISSTA '20: Proceedings of the 29th ACM SIGSOFT International Symposium on Software Testing and Analysis, P115, DOI 10.1145/3395363.3397350
   Yan M, 2019, IEEE T SOFTWARE ENG, V45, P1211, DOI 10.1109/TSE.2018.2831232
   Yan M, 2017, INT SYMP EMP SOFTWAR, P344, DOI 10.1109/ESEM.2017.48
   Yan RB, 2018, J SYST SOFTWARE, V137, P67, DOI 10.1016/j.jss.2017.11.001
   Yang Aidan Z. H., 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P534, DOI 10.1109/MSR.2019.00080
   Yang H., 2010, Proceedings of the IEEE/ACM international conference on Automated software engineering, P53
   Yang J, 2015, EMPIR SOFTW ENG, V20, P1095, DOI 10.1007/s10664-014-9316-x
   Yang XX, 2018, IEEE T RELIAB, V67, P885, DOI 10.1109/TR.2018.2847353
   Yang XX, 2015, IEEE T RELIAB, V64, P234, DOI 10.1109/TR.2014.2370891
   Yang Y, 2016, ESEM'16: PROCEEDINGS OF THE 10TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, DOI 10.1145/2961111.2962594
   Yang YB, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P157, DOI 10.1145/2950290.2950353
   Yang YB, 2015, IEEE T SOFTWARE ENG, V41, P331, DOI 10.1109/TSE.2014.2370048
   Yap B.W., 2014, LNEE, V285, P13, DOI [DOI 10.1007/978-981-4585-18-7_2, 10.1007/978-981- 4585-18-7_2]
   Yazdaninia Mohamad, 2021, 2021 IEEE ACM 29 INT
   Yilmaz C., 2010, P 18 ACM SIGSOFT INT, P67
   Yu Q, 2017, J SYST SOFTWARE, V132, P366, DOI 10.1016/j.jss.2017.06.070
   Yu TT, 2019, IEEE T SOFTWARE ENG, V45, P558, DOI 10.1109/TSE.2018.2791521
   Yu Z, 2021, IEEE T SOFTWARE ENG, V47, P2401, DOI 10.1109/TSE.2019.2949275
   Yu ZX, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P924, DOI 10.1109/ICSE.2015.102
   Zampetti F, 2020, PROCEEDINGS OF THE 2020 IEEE 27TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER '20), P355, DOI [10.1109/SANER48275.2020.9054868, 10.1109/saner48275.2020.9054868]
   Zanetti MS, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P1032, DOI 10.1109/ICSE.2013.6606653
   Zeng Zhengran, 2021, P 30 ACM SIGSOFT INT, V427, P438
   Zhang FL, 2017, J SYST SOFTWARE, V134, P105, DOI 10.1016/j.jss.2017.08.045
   Zhang F, 2017, EMPIR SOFTW ENG, V22, P3186, DOI 10.1007/s10664-017-9516-2
   Zhang F, 2017, IEEE T SOFTWARE ENG, V43, P476, DOI 10.1109/TSE.2016.2599161
   Zhang F, 2016, PROC INT CONF SOFTW, P309, DOI 10.1145/2884781.2884839
   Zhang F, 2016, EMPIR SOFTW ENG, V21, P2107, DOI 10.1007/s10664-015-9396-2
   Zhang Haoxiang, 2021, ACM T SOFTW ENG METH, V30, P1
   Zhang HY, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P1042, DOI 10.1109/ICSE.2013.6606654
   Zhang J, 2019, IEEE T SOFTWARE ENG, V45, P898, DOI 10.1109/TSE.2018.2809496
   Zhang K, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P1286, DOI 10.1109/ASE.2019.00164
   Zhang X, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P807, DOI 10.1145/3338906.3338931
   Zhang YW, 2020, J SYST SOFTWARE, V166, DOI 10.1016/j.jss.2020.110585
   Zhao KS, 2021, INT C PROGRAM COMPRE, P242, DOI 10.1109/ICPC52881.2021.00031
   Zhao NW, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P315, DOI 10.1145/3368089.3409672
   Zheng WJ, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P352, DOI 10.1109/ASE.2019.00041
   Zhong H, 2009, IEEE INT CONF AUTOM, P307, DOI 10.1109/ASE.2009.94
   Zhou MH, 2015, IEEE T SOFTWARE ENG, V41, P82, DOI 10.1109/TSE.2014.2349496
   Zhou TC, 2019, INFORM SOFTWARE TECH, V114, P204, DOI 10.1016/j.infsof.2019.07.003
   Zhou X, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P683, DOI 10.1145/3338906.3338961
   Zhou Y, 2016, J SOFTW-EVOL PROC, V28, P150, DOI 10.1002/smr.1770
   Zhou YM, 2018, ACM T SOFTW ENG METH, V27, DOI 10.1145/3183339
   Zhou YM, 2014, ACM T SOFTW ENG METH, V23, DOI 10.1145/2556777
   Zhou YM, 2010, J SYST SOFTWARE, V83, P660, DOI 10.1016/j.jss.2009.11.704
   Zhou Z-H., 2009, Encyclopedia of Biometrics, P270, DOI [DOI 10.1007/978-0-387-73003-5_293, 10.1007/978-0-387-73003-5293, DOI 10.1007/978-0-387-73003-5293]
   Zimmerman T, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P91, DOI 10.1145/1595696.1595713
   Zimmermann T, 2012, PROC INT CONF SOFTW, P1074, DOI 10.1109/ICSE.2012.6227112
NR 447
TC 16
Z9 17
U1 7
U2 47
PU ASSOC COMPUTING MACHINERY
PI NEW YORK
PA 1601 Broadway, 10th Floor, NEW YORK, NY USA
SN 1049-331X
EI 1557-7392
J9 ACM T SOFTW ENG METH
JI ACM Trans. Softw. Eng. Methodol.
PD JUL
PY 2022
VL 31
IS 3
AR 56
DI 10.1145/3503509
PG 72
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 1N4AE
UT WOS:000800599100023
OA Green Accepted, Green Submitted
DA 2024-07-18
ER

PT J
AU Abidi, M
   Rahman, MS
   Openja, M
   Khomh, F
AF Abidi, Mouna
   Rahman, Md Saidur
   Openja, Moses
   Khomh, Foutse
TI Are Multi-Language Design Smells Fault-Prone? An Empirical Study
SO ACM TRANSACTIONS ON SOFTWARE ENGINEERING AND METHODOLOGY
LA English
DT Article
DE Design smells; anti-patterns; code smells; multi-language systems;
   mining software repositories; empirical studies
ID SOFTWARE; CODE; IMPACT; BAD
AB Nowadays, modern applications are developed using components written in different programming languages and technologies. The cost benefits of reuse and the advantages of each programming language are twomain incentives behind the proliferation of such systems. However, as the number of languages increases, so do the challenges related to the development and maintenance of these systems. In such situations, developers may introduce design smells (i.e., anti-patterns and code smells) which are symptoms of poor design and implementation choices. Design smells are defined as poor design and coding choices that can negatively impact the quality of a software program despite satisfying functional requirements. Studies on mono-language systems suggest that the presence of design smells may indicate a higher risk of future bugs and affects code comprehension, thus making systems harder to maintain. However, the impact of multi-language design smells on software quality such as fault-proneness is yet to be investigated.
   In this article, we present an approach to detect multi-language design smells in the context of JNI systems. We then investigate the prevalence of those design smells and their impacts on fault-proneness. Specifically, we detect 15 design smells in 98 releases of 9 open-source JNI projects. Our results show that the design smells are prevalent in the selected projects and persist throughout the releases of the systems. We observe that, in the analyzed systems, 33.95% of the files involving communications between Java and C/C++ contain occurrences of multi-language design smells. Some kinds of smells are more prevalent than others, e.g., Unused Parameters, Too Much Scattering, and Unused Method Declaration. Our results suggest that files with multi-language design smells can often be more associated with bugs than files without these smells, and that specific smells are more correlated to fault-proneness than others. From analyzing fault-inducing commit messages, we also extracted activities that are more likely to introduce bugs in smelly files. We believe that our findings are important for practitioners as it can help them prioritize design smells during the maintenance of multi-language systems.
C1 [Abidi, Mouna; Rahman, Md Saidur; Openja, Moses; Khomh, Foutse] Polytech Montreal, DGIGL, 2500 Chemin Polytech, Montreal, PQ H3T 1J4, Canada.
C3 Universite de Montreal; Polytechnique Montreal
RP Abidi, M (corresponding author), Polytech Montreal, DGIGL, 2500 Chemin Polytech, Montreal, PQ H3T 1J4, Canada.
EM mouna.abidi@polymtl.ca; saidur.rahman@polymtl.ca;
   moses.openja@polymtl.ca; foutse.khomh@polymtl.ca
RI Openja, Moses/HDN-9364-2022
FU Natural Sciences and Engineering Research Council of Canada
FX This work has been partially supported by the Natural Sciences and
   Engineering Research Council of Canada.
CR Abbes M, 2011, EUR CON SFTWR MTNCE, P181, DOI 10.1109/CSMR.2011.24
   Abidi M, 2019, P 29 ANN INT C COMP, P72
   Abidi M, 2019, P 24 EUR C PATT LANG, P42
   Abidi M, 2019, PROCEEDINGS OF THE 24TH EUROPEAN CONFERENCE ON PATTERN LANGUAGES OF PROGRAMS (EUROPLOP 2019), DOI 10.1145/3361149.3361161
   [Anonymous], 1977, PATTERN LANGUAGE TOW
   [Anonymous], 2017, P 21 INT C EVALUATIO, DOI [DOI 10.1145/3084226, 10.1145/3084226.3084287, DOI 10.1145/3084226.3084287]
   Barbez A, 2020, J SYST SOFTWARE, V161, DOI 10.1016/j.jss.2019.110486
   Blei D, 2010, IEEE SIGNAL PROC MAG, V27, P55, DOI 10.1109/MSP.2010.938079
   Brown Wendy., 1988, MANHOOD POLITICS FEM
   Neto EC, 2019, INT SYMP EMP SOFTWAR, P94
   Castelluccio M, 2019, EMPIR SOFTW ENG, V24, P3008, DOI 10.1007/s10664-018-9665-y
   Collard ML, 2013, PROC IEEE INT CONF S, P516, DOI 10.1109/ICSM.2013.85
   Fontana FA, 2016, EMPIR SOFTW ENG, V21, P1143, DOI 10.1007/s10664-015-9378-4
   Fontana FA, 2012, J OBJECT TECHNOL, V11, DOI 10.5381/jot.2012.11.2.a5
   Fowler Martin, 1999, REFACTORING
   Fred Long, 2013, JAVA CODING GUIDELIN
   Gamma Erich, 1995, DESIGN PATTERNS ELEM
   Goedicke M, 2002, J SOFTW MAINT EVOL-R, V14, P1, DOI 10.1002/smr.243
   Goedicke Michael, 2000, P 5 EUR C PATT LANG
   Gottlob G, 2005, ACM T DATABASE SYST, V30, P444, DOI 10.1145/1071610.1071614
   Guéhéneuc YG, 2008, IEEE T SOFTWARE ENG, V34, P667, DOI 10.1109/TSE.2008.48
   Gyimóthy T, 2005, IEEE T SOFTWARE ENG, V31, P897, DOI 10.1109/TSE.2005.112
   Hunt John, 1999, JAVA PRACTITIONERS I, V1st
   Jaafar F, 2013, WORK CONF REVERSE EN, P351, DOI 10.1109/WCRE.2013.6671310
   Jelodar H, 2019, MULTIMED TOOLS APPL, V78, P15169, DOI 10.1007/s11042-018-6894-4
   Jones T. Capers, 1998, ESTIMATING SOFTWARE
   Kessentini M, 2011, CONF PROC INT SYMP C, P81, DOI 10.1109/ICPC.2011.22
   Khomh F, 2012, EMPIR SOFTW ENG, V17, P243, DOI 10.1007/s10664-011-9171-y
   Khomh F, 2009, WORK CONF REVERSE EN, P75, DOI 10.1109/WCRE.2009.28
   Khomh F, 2011, J SYST SOFTWARE, V84, P559, DOI 10.1016/j.jss.2010.11.921
   Khomh F, 2009, INT CONF QUAL SOFTW, P305, DOI 10.1109/QSIC.2009.47
   Kochhar PS, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P563, DOI 10.1109/SANER.2016.112
   Kondoh G, 2008, P 2008 INT S SOFTW T, P109
   Kontogiannis K, 2006, PROC IEEE INT CONF S, P497
   Koru AG, 2008, EMPIR SOFTW ENG, V13, P473, DOI 10.1007/s10664-008-9080-x
   Kullbach B, 1998, FIFTH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P135, DOI 10.1109/WCRE.1998.723183
   Lanza Michele, 2007, OBJECT ORIENTED METR
   Lee B, 2009, ACM SIGPLAN NOTICES, V44, P207, DOI 10.1145/1639949.1640105
   Li SL, 2009, CCS'09: PROCEEDINGS OF THE 16TH ACM CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P442
   Liang Sheng, 1999, JAVA NATIVE INTERFAC
   Linares-Vasquez M, 2014, P 22 INT C PROGR COM, P232
   Linos P. K., 1995, Proceedings First IEEE International Conference on Engineering of Complex Comput Systems. Held jointly with 5th CSESAW, 3rd IEEE RTAW and 20th IFAC/IFIP WRTP (Cat. No.95TB100007), P338, DOI 10.1109/ICECCS.1995.479355
   Linos PK, 2003, PROG COMPREHEN, P64
   Lippert Martin, 2006, REFACTORING LARGE SO
   Liu H, 2018, IEEE INT CONF AUTOM, P385, DOI 10.1145/3238147.3238166
   Marinescu R, 2004, PROC IEEE INT CONF S, P350, DOI 10.1109/ICSM.2004.1357820
   Matthews J, 2009, ACM T PROGR LANG SYS, V31, DOI 10.1145/1498926.1498930
   Mockus A, 2000, PROC IEEE INT CONF S, P120, DOI 10.1109/ICSM.2000.883028
   Moha N, 2010, IEEE T SOFTWARE ENG, V36, P20, DOI 10.1109/TSE.2009.50
   Moha Naouel, 2007, 22 ACM SIGPLAN C OBJ, P868
   Mushtaq Z, 2015, 2015 INTERNATIONAL CONFERENCE ON OPEN SOURCE SYSTEMS & TECHNOLOGIES (ICOSST), P170, DOI 10.1109/ICOSST.2015.7396422
   Neitsch A, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P140, DOI 10.1109/ICSM.2012.6405265
   Olbrich S, 2009, INT SYMP EMP SOFTWAR, P391
   Palomba F, 2016, 2016 IEEE 24TH INTERNATIONAL CONFERENCE ON PROGRAM COMPREHENSION (ICPC)
   Palomba F, 2018, IEEE T SOFTWARE ENG, V44, P977, DOI 10.1109/TSE.2017.2752171
   Palomba F, 2014, PROC IEEE INT CONF S, P101, DOI 10.1109/ICSME.2014.32
   Pfeiffer Rolf-Helge, 2012, Modelling Foundations and Applications. Proceedings 8th European Conference, ECMFA 2012, P178, DOI 10.1007/978-3-642-31491-9_15
   Politowski C, 2020, INFORM SOFTWARE TECH, V122, DOI 10.1016/j.infsof.2020.106278
   Porter MF, 2001, SNOWBALL LANGUAGE ST
   Rasool G, 2017, ARAB J SCI ENG, V42, P483, DOI 10.1007/s13369-016-2238-8
   Ray B, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P155, DOI 10.1145/2635868.2635922
   Rodríguez-Pérez G, 2018, PROCEEDINGS OF THE 12TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT (ESEM 2018), DOI 10.1145/3239235.3267436
   Rodríguez-Pérez G, 2018, INFORM SOFTWARE TECH, V99, P164, DOI 10.1016/j.infsof.2018.03.009
   Romano D., 2012, 2012 19th Working Conference on Reverse Engineering (WCRE), P437, DOI 10.1109/WCRE.2012.53
   Saboury A, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P294, DOI 10.1109/SANER.2017.7884630
   Selim G. M. K., 2010, Proceedings 17th Working Conference on Reverse Engineering (WCRE 2010), P13, DOI 10.1109/WCRE.2010.11
   Sharma T, 2018, J SYST SOFTWARE, V138, P158, DOI 10.1016/j.jss.2017.12.034
   Sheskin J.D., 2004, Handbook of Parametric and Nonparametric Statistical Procedures, VThird
   Sliwerski J., 2005, ACM SIGSOFT SOFTWARE, P1, DOI DOI 10.1145/1082983.1083147
   Soh Z, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P393, DOI 10.1109/SANER.2016.103
   Spadini D, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P908, DOI 10.1145/3236024.3264598
   Spadini D, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P677, DOI 10.1145/3180155.3180192
   Tan G, 2008, P 17 C SEC S SS 08, P365
   Tan G, 2006, P 2006 IEEE INT S SE, P97
   Tomassetti Federico, 2014, P 18 INT C EV ASS SO
   Treude Christoph, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P84, DOI 10.1109/MSR.2019.00022
   Tse-Hsun Chen, 2012, 2012 9th IEEE Working Conference on Mining Software Repositories (MSR 2012), P189, DOI 10.1109/MSR.2012.6224280
   van Emden E, 2002, NINTH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P97, DOI 10.1109/WCRE.2002.1173068
   Yamashita A, 2013, WORK CONF REVERSE EN, P242, DOI 10.1109/WCRE.2013.6671299
   Yin Robert K, 2002, APPL CASE STUDY RES, V34
   Zafar S, 2019, INT SYMP EMP SOFTWAR, P59, DOI 10.1109/esem.2019.8870174
   Zdun Uwe, 2001, P 6 EUR C PATT LANG
   Zhang M, 2011, J SOFTW MAINT EVOL-R, V23, P179, DOI 10.1002/smr.521
NR 83
TC 15
Z9 16
U1 1
U2 3
PU ASSOC COMPUTING MACHINERY
PI NEW YORK
PA 1601 Broadway, 10th Floor, NEW YORK, NY USA
SN 1049-331X
EI 1557-7392
J9 ACM T SOFTW ENG METH
JI ACM Trans. Softw. Eng. Methodol.
PD MAY
PY 2021
VL 30
IS 3
AR 29
DI 10.1145/3432690
PG 56
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA SA7JW
UT WOS:000649478300005
OA Green Submitted
DA 2024-07-18
ER

PT J
AU De Lara, J
   Guerra, E
AF De Lara, Juan
   Guerra, Esther
TI Refactoring Multi-Level Models
SO ACM TRANSACTIONS ON SOFTWARE ENGINEERING AND METHODOLOGY
LA English
DT Article
DE Meta-modelling; multi-level modelling; model refactoring; METADEPTH
ID DRIVEN; COEVOLUTION; ALLOY
AB Multi-level modelling promotes flexibility in modelling by enabling the use of several meta-levels instead of just two, as is the case in mainstream two-level modelling approaches. While this approach leads to simpler models for some scenarios, it introduces an additional degree of freedom as designers can decide the meta-level where an element should reside, having to ascertain the suitability of such decisions.
   In this respect, model refactorings have been successfully applied in the context of two-level modelling to rearrange the elements of a model while preserving its meaning. Following this idea, we propose a catalogue of 17 novel refactorings specific to multi-level models. Their objective is to help designers in rearranging elements across and within meta-levels and exploring the consequences. In this article, we detail each refactoring in the catalogue, show a classification across different dimensions, and describe the support we provide in our METADEPTH tool. We present two experiments to assess two aspects of our refactorings. The first one validates the predicted semantic side effects of the refactorings on the basis of more than 210.000 refactoring applications. The second one measures the impact of refactorings on three quality attributes of multi-level models.
C1 [De Lara, Juan; Guerra, Esther] Univ Autonoma Madrid, Comp Sci Dept, E-28049 Madrid, Spain.
C3 Autonomous University of Madrid
RP De Lara, J (corresponding author), Univ Autonoma Madrid, Comp Sci Dept, E-28049 Madrid, Spain.
EM Juan.deLara@uam.es; Esther.Guerra@uam.es
RI de Lara, Juan/B-5422-2014; Guerra, Esther/B-4977-2014
OI Guerra, Esther/0000-0002-2818-2278
FU Spanish Ministry of Economy and Competitivity with project "Flexor"
   [TIN2014-52129-R]; region of Madrid with project "SICOMORO-CM"
   [S2013/ICE-3006]
FX This work has been funded by the Spanish Ministry of Economy and
   Competitivity with project "Flexor" (Grant No. TIN2014-52129-R), and the
   region of Madrid with project "SICOMORO-CM" (Grant No. S2013/ICE-3006).
CR Almeida J. P. A., 2018, Dagstuhl Reports, V7, P18
   [Anonymous], P WORKSH TOOL SUPP O
   [Anonymous], THESIS
   [Anonymous], CEUR
   [Anonymous], 2017, P MOD 2017 SAT RV WO
   [Anonymous], IEEE T SOFTW ENG
   [Anonymous], SWESE
   [Anonymous], ALIGNING PROCESS MOD
   [Anonymous], 2007, P 6 JOINT M EUR SOFT
   [Anonymous], CEUR WORKSHOP
   [Anonymous], 2010, ASE 10 P IEEE ACM IN, DOI DOI 10.1145/1858996.1859024
   [Anonymous], P SOOPPA
   [Anonymous], LNCS
   [Anonymous], ABS150603363 CORR
   [Anonymous], 2017, THESIS
   Arcelli D, 2018, INFORM SOFTWARE TECH, V95, P366, DOI 10.1016/j.infsof.2017.09.006
   Atkinson Colin, 2012, Modelling Foundations and Applications. Proceedings 8th European Conference, ECMFA 2012, P194, DOI 10.1007/978-3-642-31491-9_16
   Atkinson C., 2002, ACM Transactions on Modeling and Computer Simulation, V12, P290, DOI 10.1145/643120.643123
   Atkinson C, 2008, SOFTW SYST MODEL, V7, P345, DOI 10.1007/s10270-007-0061-0
   Atkinson C, 2015, INFORM SYST, V54, P289, DOI 10.1016/j.is.2015.01.003
   Atkinson Colin, 2017, CEUR WORKSHOP P, V2019, P274
   Bansiya J, 2002, IEEE T SOFTWARE ENG, V28, P4, DOI 10.1109/32.979986
   Bavota G, 2011, J SYST SOFTWARE, V84, P397, DOI 10.1016/j.jss.2010.11.918
   Bézivin J, 2001, 16TH ANNUAL INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2001), PROCEEDINGS, P273, DOI 10.1109/ASE.2001.989813
   Brambilla Marco, 2012, MODELDRIVEN SOFTWARE
   Burger Erik, 2010, GESELLSCHAFT INFORMA, P285
   Carvalho VA, 2018, SOFTW SYST MODEL, V17, P205, DOI 10.1007/s10270-016-0538-9
   Cicchetti A, 2008, IEEE INT ENTERP DIST, P222, DOI 10.1109/EDOC.2008.44
   De Lara J, 2017, ACM T SOFTW ENG METH, V25, DOI 10.1145/3063384
   de Lara J, 2015, SOFTW SYST MODEL, V14, P429, DOI 10.1007/s10270-013-0367-z
   De Lara J, 2014, ACM T SOFTW ENG METH, V24, DOI 10.1145/2685615
   de Lara J, 2014, COMPUT J, V57, P36, DOI 10.1093/comjnl/bxs144
   de Lara J, 2010, LECT NOTES COMPUT SC, V6141, P1, DOI 10.1007/978-3-642-13953-6_1
   Estler HC, 2008, ELECTRON NOTES THEOR, V214, P331, DOI 10.1016/j.entcs.2008.06.015
   Fdhila W, 2015, INFORM SYST, V49, P1, DOI 10.1016/j.is.2014.10.004
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   Frank U, 2014, BUS INFORM SYST ENG+, V6, P319, DOI 10.1007/s12599-014-0350-4
   Ghannem A, 2016, SOFTWARE QUAL J, V24, P947, DOI 10.1007/s11219-015-9271-9
   Gheyi R., 2005, ASE
   Gomez de Villar Fernando Macias, 2016, MULTI2016 P 3 INT WO, P66
   Gröner G, 2010, LECT NOTES COMPUT SC, V6496, P273, DOI 10.1007/978-3-642-17746-0_18
   GUARINO N, 2004, IEEE INTELL SYST APP, V19, P78
   Guerra E, 2017, DATA KNOWL ENG, V107, P1, DOI 10.1016/j.datak.2016.11.001
   Hebig R, 2017, IEEE T SOFTWARE ENG, V43, P396, DOI 10.1109/TSE.2016.2610424
   Igamberdiev M, 2018, SOFTW SYST MODEL, V17, P269, DOI 10.1007/s10270-016-0520-6
   Jackson D, 2002, ACM T SOFTW ENG METH, V11, P256, DOI 10.1145/505145.505149
   Jeusfeld MA, 2016, LECT NOTES COMPUT SC, V9974, P198, DOI 10.1007/978-3-319-46397-1_15
   Kainz G, 2011, LECT NOTES COMPUT SC, V6981, P17, DOI 10.1007/978-3-642-24485-8_3
   Kolandouz-Rahimi S, 2014, SCI COMPUT PROGRAM, V85, P5, DOI 10.1016/j.scico.2013.07.013
   Kühne T, 2007, OOPSLA: 22ND INTERNATIONAL CONFERENCE ON OBJECT-ORIENTED PROGRAMMING, SYSTEMS, LANGUAGES, AND APPLICATIONS, PROCEEDINGS, P229
   Lamo Y, 2013, P EST ACAD SCI, V62, P3, DOI 10.3176/proc.2013.1.02
   López-Fernández JJ, 2015, SOFTW SYST MODEL, V14, P1323, DOI 10.1007/s10270-013-0392-y
   Mansoor U, 2017, SOFTWARE QUAL J, V25, P473, DOI 10.1007/s11219-015-9284-4
   Martin R.C., 1997, PATTERN LANGUAGES PR, P529
   Mens T, 2004, IEEE T SOFTWARE ENG, V30, P126, DOI 10.1109/TSE.2004.1265817
   Mens T, 2007, SOFTW SYST MODEL, V6, P269, DOI 10.1007/s10270-006-0044-6
   Neumayr B, 2018, SOFTW SYST MODEL, V17, P233, DOI 10.1007/s10270-016-0519-z
   Neumayr B, 2014, LECT NOTES COMPUT SC, V8484, P503, DOI 10.1007/978-3-319-07881-6_34
   Noble J., 1999, PROTOTYPE BASED PROG
   Noy NF, 2004, KNOWL INF SYST, V6, P428, DOI 10.1007/s10115-003-0137-2
   ODELL JJ, 1994, J OBJECT-ORIENT PROG, V7, P8
   Ouni A, 2016, ACM T SOFTW ENG METH, V25, DOI 10.1145/2932631
   Ouni A, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P347, DOI 10.1109/ICSM.2012.6405292
   Overbey JL, 2016, AUTOMAT SOFTW ENG, V23, P77, DOI 10.1007/s10515-014-0176-9
   Paige RF, 2009, 2009 14TH IEEE INTERNATIONAL CONFERENCE ON ENGINEERING OF COMPLEX COMPUTER SYSTEMS (ICECCS), P162, DOI 10.1109/ICECCS.2009.14
   Rossini A, 2015, LECT NOTES COMPUT SC, V9153, P18, DOI 10.1007/978-3-319-21151-0_2
   Schmidt DC, 2006, COMPUTER, V39, P25, DOI 10.1109/MC.2006.58
   Selway M, 2017, DATA KNOWL ENG, V109, P85, DOI 10.1016/j.datak.2017.03.006
   Soares G, 2013, IEEE T SOFTWARE ENG, V39, P147, DOI 10.1109/TSE.2012.19
   Soares G, 2010, IEEE SOFTWARE, V27, P52, DOI 10.1109/MS.2010.63
   Steimann F, 2015, SOFTW SYST MODEL, V14, P307, DOI 10.1007/s10270-013-0314-z
   Steinberg D., 2008, EMF: Eclipse Modeling Framework, Vsecond
   Suny? G., 2001, LNCS, P134, DOI DOI 10.1007/3-540-45441-1_11
   Vial G, 2015, IEEE SOFTWARE, V32, P71, DOI 10.1109/MS.2015.131
   von Pilgrim J, 2013, IEEE INT CONF AUTOM, P682, DOI 10.1109/ASE.2013.6693133
   Weber B, 2011, COMPUT IND, V62, P467, DOI 10.1016/j.compind.2010.12.012
   Yu J, 2009, INFORM SYST, V34, P766, DOI 10.1016/j.is.2009.04.002
   Zimmermann O, 2015, IEEE SOFTWARE, V32, P26, DOI 10.1109/MS.2015.37
NR 78
TC 17
Z9 17
U1 1
U2 5
PU ASSOC COMPUTING MACHINERY
PI NEW YORK
PA 1601 Broadway, 10th Floor, NEW YORK, NY USA
SN 1049-331X
EI 1557-7392
J9 ACM T SOFTW ENG METH
JI ACM Trans. Softw. Eng. Methodol.
PD NOV
PY 2018
VL 27
IS 4
AR 17
DI 10.1145/3280985
PG 56
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HJ4EO
UT WOS:000457127000003
DA 2024-07-18
ER

PT J
AU Sherman, E
   Garvin, BJ
   Dwyer, MB
AF Sherman, Elena
   Garvin, Brady J.
   Dwyer, Matthew B.
TI Deciding Type-Based Partial-Order Constraints for Path-Sensitive
   Analysis
SO ACM TRANSACTIONS ON SOFTWARE ENGINEERING AND METHODOLOGY
LA English
DT Article
DE Algorithms; Experimentation; Verification; SMT; decision procedure; type
   hierarchy; subtyping; path-sensitive analysis
ID DECISION PROCEDURE; EFFICIENT
AB The precision and scalability of path-sensitive program analyses depend on their ability to distinguish feasible and infeasible program paths. Analyses express path feasibility as the satisfiability of conjoined branch conditions, which is then decided by cooperating decision procedures such as those in satisfiability modulo theory (SMT) solvers. Consequently, efficient underlying decision procedures are key to precise, scalable program analyses.
   When we investigate the branch conditions accumulated by inter-procedural path-sensitive analyses of object-oriented programs, we find that many relate to an object's dynamic type. These conditions arise from explicit type tests and the branching implicit in dynamic dispatch and type casting. These conditions share a common form that comprises a fragment of the theory of partial orders, which we refer to as type-based partial orders (TPO).
   State-of-the-art SMT solvers can heuristically instantiate the quantified formulae that axiomatize partial orders, and thereby support TPO constraints. We present two custom decision procedures with significantly better performance. On benchmarks that reflect inter-procedural path-sensitive analyses applied to significant Java systems, the custom procedures run three orders of magnitude faster. The performance of the two decision procedures varies across benchmarks, which suggests that a portfolio approach may be beneficial for solving constraints generated by program analyses.
C1 [Sherman, Elena] Boise State Univ, Dept Comp Sci, Boise, ID 83725 USA.
   [Garvin, Brady J.; Dwyer, Matthew B.] Univ Nebraska, Dept Comp Sci, Lincoln, NE 68588 USA.
C3 Idaho; Boise State University; University of Nebraska System; University
   of Nebraska Lincoln
RP Sherman, E (corresponding author), Boise State Univ, Dept Comp Sci, 1910 Univ Dr, Boise, ID 83725 USA.
EM elenasherman@boisestate.edu
OI Sherman, Elena/0000-0003-4522-9725; Dwyer, Matthew/0000-0002-1937-1544
FU National Science Foundation [CCF-0541263, CCF-0747009, CCF-0912566];
   National Science Foundation through CFDA [47.076]; National Aeronautics
   and Space Administration [NNX08AV20A]; Air Force Office of Scientific
   Research [FA9550-09-1-0687, FA9550-09-1-0129]; Army Research Office
   through DURIP award [W91NF-04-1-0104]; Division of Computing and
   Communication Foundations; Direct For Computer & Info Scie & Enginr
   [1449626] Funding Source: National Science Foundation
FX This work was supported in part by the National Science Foundation
   through awards CCF-0541263, CCF-0747009, CCF-0912566, and CFDA no.
   47.076, the National Aeronautics and Space Administration under grant
   no. NNX08AV20A, the Air Force Office of Scientific Research through
   awards FA9550-09-1-0687 and FA9550-09-1-0129, and the Army Research
   Office through DURIP award W91NF-04-1-0104.
CR Alavi HS, 2008, ACM SIGPLAN NOTICES, V43, P349, DOI 10.1145/1328897.1328480
   Anand S, 2007, LECT NOTES COMPUT SC, V4424, P134
   [Anonymous], P 39 ANN IEEE IFIP I
   Baehni Sebastien, 2007, P ACM INT C DISTR EV, P214
   BALCER MJ, 1989, ACM SIGSOFT, V14, P210, DOI 10.1145/75309.75332
   Barrett Clark, 2011, Computer Aided Verification. Proceedings 23rd International Conference, CAV 2011, P171, DOI 10.1007/978-3-642-22110-1_14
   Barrett C., 2010, BARSTRR10 U IOW DEP
   Bierman GM, 2010, ACM SIGPLAN NOTICES, V45, P105, DOI 10.1145/1932681.1863560
   Bjorner N., 2009, COMMUNICATION
   Bjorner N, 2009, LECT NOTES COMPUT SC, V5505, P307, DOI 10.1007/978-3-642-00768-2_27
   Blackshear S, 2013, ACM SIGPLAN NOTICES, V48, P275, DOI 10.1145/2499370.2462186
   Bounimova E, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P122, DOI 10.1109/ICSE.2013.6606558
   Cadar C., 2008, Proceedings of the 8th USENIX conference on Operating systems design and implementation, OSDI'08, (USA), P209
   Cadar C, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1066, DOI 10.1145/1985793.1985995
   Cadar C, 2008, ACM T INFORM SYST SE, V12, DOI 10.1145/1455518.1455522
   de Moura L, 2008, LECT NOTES ARTIF INT, V5195, P410, DOI 10.1007/978-3-540-71070-7_35
   de Moura L, 2008, LECT NOTES COMPUT SC, V4963, P337, DOI 10.1007/978-3-540-78800-3_24
   de Moura L, 2007, LECT NOTES ARTIF INT, V4603, P183
   Dietz P., 1987, P 19 ANN ACM S THEOR, P365, DOI DOI 10.1145/28395.28434
   Ge YT, 2009, ANN MATH ARTIF INTEL, V55, P101, DOI 10.1007/s10472-009-9153-6
   Ge YT, 2009, LECT NOTES COMPUT SC, V5643, P306
   Ghosh I, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P992, DOI 10.1109/ICSE.2013.6606649
   Godefroid P, 2005, ACM SIGPLAN NOTICES, V40, P213, DOI 10.1145/1064978.1065036
   Harris WR, 2010, ACM SIGPLAN NOTICES, V45, P71, DOI 10.1145/1707801.1706309
   Hatcliff J, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P222, DOI 10.1109/ICSE.2013.6606568
   Hooimeijer P, 2009, ACM SIGPLAN NOTICES, V44, P188, DOI 10.1145/1543135.1542498
   Islam M, 2014, ACM T SOFTW ENG METH, V23, DOI 10.1145/2544135
   Java, 2010, PACK JAV LANG JAVATM
   Kiezun A, 2009, ISSTA 2009: INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P105
   Kim H, 2007, CONF PROC INT SYMP C, P424, DOI 10.1145/1273440.1250715
   Liang TY, 2014, LECT NOTES COMPUT SC, V8559, P646, DOI 10.1007/978-3-319-08867-9_43
   Pasareanu C.S., 2011, Proceedings of the 2011 International Symposium on Software Testing and Analysis, ISSTA '11, P34, DOI DOI 10.1145/2001420.2001425
   Pdfsam, 2010, TOOL DES HANDL PDF F
   Pierce Benjamin C., 2002, TYPES PROGRAMMING LA, V1st
   Sen K., 2005, P 10 EUR SOFTW ENG C, V30, P263, DOI DOI 10.1145/1081706.1081750
   Sherman E, 2010, LECT NOTES ARTIF INT, V6173, P156
   SIR, 2010, SOFTW ART INFR REP
   Song D, 2008, LECT NOTES COMPUT SC, V5352, P1, DOI 10.1007/978-3-540-89862-7_1
   Soot, 2010, JAV OPT FRAM
   Soot Manual, 2010, MANUAL DOCUMENTING C
   Vazou N, 2013, LECT NOTES COMPUT SC, V7792, P209, DOI 10.1007/978-3-642-37036-6_13
   Visser Willem, 2012, P 20 ACM SIGSOFT INT
   Weka, 2010, MACH LEARN SOFTW
   Yu F, 2009, LECT NOTES COMPUT SC, V5505, P322
   Zibin Y, 2002, ACM SIGPLAN NOTICES, V37, P142, DOI 10.1145/583854.582434
   Zibin Y, 2001, ACM SIGPLAN NOTICES, V36, P96, DOI 10.1145/504311.504290
   [No title captured]
NR 47
TC 1
Z9 1
U1 0
U2 3
PU ASSOC COMPUTING MACHINERY
PI NEW YORK
PA 2 PENN PLAZA, STE 701, NEW YORK, NY 10121-0701 USA
SN 1049-331X
EI 1557-7392
J9 ACM T SOFTW ENG METH
JI ACM Trans. Softw. Eng. Methodol.
PD MAY
PY 2015
VL 24
IS 3
AR 15
DI 10.1145/2755971
PG 33
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CI5UV
UT WOS:000354826200003
DA 2024-07-18
ER

PT J
AU Stol, KJ
   Avgeriou, P
   Babar, MA
   Lucas, Y
   Fitzgerald, B
AF Stol, Klaas-Jan
   Avgeriou, Paris
   Babar, Muhammad Ali
   Lucas, Yan
   Fitzgerald, Brian
TI Key Factors for Adopting Inner Source
SO ACM TRANSACTIONS ON SOFTWARE ENGINEERING AND METHODOLOGY
LA English
DT Article
DE Human Factors; Management; Theory; Case study; inner source; open-source
   development practices; framework
ID OPEN SOURCE SOFTWARE; VALIDITY; CRITERIA
AB A number of organizations have adopted Open Source Software (OSS) development practices to support or augment their software development processes, a phenomenon frequently referred to as Inner Source. However the adoption of Inner Source is not a straightforward issue. Many organizations are struggling with the question of whether Inner Source is an appropriate approach to software development for them in the first place. This article presents a framework derived from the literature on Inner Source, which identifies nine important factors that need to be considered when implementing Inner Source. The framework can be used as a probing instrument to assess an organization on these nine factors so as to gain an understanding of whether or not Inner Source is suitable. We applied the framework in three case studies at Philips Healthcare, Neopost Technologies, and Rolls-Royce, which are all large organizations that have either adopted Inner Source or were planning to do so. Based on the results presented in this article, we outline directions for future research.
C1 [Stol, Klaas-Jan; Fitzgerald, Brian] Univ Limerick, Irish Software Engn Res Ctr, Lero, Limerick, Ireland.
   [Avgeriou, Paris] Univ Groningen, NL-9700 AB Groningen, Netherlands.
   [Babar, Muhammad Ali] IT Univ Adelaide, Adelaide, SA, Australia.
C3 University of Limerick; University of Groningen; University of Adelaide
RP Stol, KJ (corresponding author), Univ Limerick, Irish Software Engn Res Ctr, Lero, Limerick, Ireland.
EM klaas-jan.stol@lero.ie
RI Stol, Klaas-Jan/I-6269-2013; Fitzgerald, Brian/E-7790-2010
OI Stol, Klaas-Jan/0000-0002-1038-5050; Fitzgerald,
   Brian/0000-0001-9193-2863; Avgeriou, Paris/0000-0002-7101-0754
FU Science Foundation Ireland [10/CE/I1855]; IT University of Copenhagen
FX This work is partially funded by Science Foundation Ireland grant
   10/CE/I1855 to Lero-the Irish Software Engineering Research Centre (www.
   lero.ie) and by IT University of Copenhagen. Yan Lucas is currently
   affiliated with TyCloud, the Netherlands.
CR Angen MJ, 2000, QUAL HEALTH RES, V10, P378, DOI 10.1177/104973200129118516
   [Anonymous], MICROSOFT OFFICE EXP
   [Anonymous], OPEN SOURCE DEV COMM
   [Anonymous], FEDERAL COMPUTER WEE
   [Anonymous], P AG C AGILE
   [Anonymous], THESIS U LIMERICK
   [Anonymous], INNOVATION HAPPENS E
   [Anonymous], 2012, CASE STUDY RES SOFTW, DOI DOI 10.1002/9781118181034
   [Anonymous], P 1 WORKSH OP SOURC
   [Anonymous], OREILLY NETWORK ASK
   [Anonymous], P 1 OPAALS C
   [Anonymous], COMMUNITY SOURCE DEV
   [Anonymous], 2007, QUALITATIVE INQUIRY
   [Anonymous], 2003, P 3 WORKSH OP SOURC
   [Anonymous], P 19 EUR C INF SYST
   [Anonymous], P 18 EUR C INF SYST
   [Anonymous], DAGST SEM P
   [Anonymous], P 5 WORKSH OP SOURC
   [Anonymous], 2000, LINUX KERNEL MAILING
   [Anonymous], IBM ADOPTS OPEN DEV
   [Anonymous], P 40 ANN HAW INT C S
   [Anonymous], P 1 WORKSH OP SOURC
   [Anonymous], P 2 WORKSH OP SOURC
   [Anonymous], BEAUTIFUL TEAMS INSP
   [Anonymous], P INF SYST RES SEM S
   [Anonymous], APPL OPEN SOURCE PRO
   [Anonymous], BETANEWS
   [Anonymous], MANAGING OPEN INNOVA
   [Anonymous], PFSPD SHORT HIST
   [Anonymous], 2007, SOFTWARE PRODUCT LIN
   [Anonymous], P 1 WORKSH OP SOURC
   [Anonymous], MICROSOFT CODEBOX LE
   [Anonymous], P 11 AS PAC SOFTW EN
   [Anonymous], CIO INSIGHT
   [Anonymous], MIS Q
   [Anonymous], 2002, P M CHALL SURV SUCC
   [Anonymous], IBM EMPLOY OPEN SOUR
   Augustin L, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P559, DOI 10.1109/ICSE.2002.1008000
   Baldwin CY, 2006, MANAGE SCI, V52, P1116, DOI 10.1287/mnsc.1060.0546
   Bonaccorsi A, 2003, RES POLICY, V32, P1243, DOI 10.1016/S0048-7333(03)00051-9
   Capek PG, 2005, IBM SYST J, V44, P249, DOI 10.1147/sj.442.0249
   Capiluppi A., 2012, Open Source Systems: Long-Term Sustainability: Vol. 378. IFIP Advances in Information and Communication Technology, V378, P178, DOI [10.1007/978-3-642-33442-9_12, DOI 10.1007/978-3-642-33442-9_12]
   Cohn Mike, 2009, Succeeding with Agile: Software Development Using Scrum, V1st
   Conboy K, 2010, ACM T SOFTW ENG METH, V20, DOI 10.1145/1767751.1767753
   Creswell JW, 2000, THEOR PRACT, V39, P124, DOI 10.1207/s15430421tip3903_2
   Crowston K, 2007, INFORM SOFTWARE TECH, V49, P564, DOI 10.1016/j.infsof.2007.02.004
   Cruzes DS, 2011, INT SYMP EMP SOFTWAR, P275, DOI 10.1109/ESEM.2011.36
   Dinkelacker J, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P177, DOI 10.1109/ICSE.2002.1007966
   Erdogmus H, 2009, IEEE SOFTWARE, V26, P4
   Feller J., 2002, Understanding Open Source Software development
   Fitzgerald B, 2006, MIS QUART, V30, P587
   Fitzgerald B, 2011, COMPUTER, V44, P25, DOI 10.1109/MC.2011.266
   Fogel Karl, 2005, Producing Open Source Software: How to Run a Successful Free Software Project, V1st
   Fowler M., 2001, Software Development, V9, P28
   FREDERICK P., 1995, THE MYTHICAL MAN -MONTH, VAnniversary
   Gacek C, 2004, IEEE SOFTWARE, V21, P34, DOI 10.1109/MS.2004.1259206
   Gaughan G, 2009, 2009 35TH EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS, PROCEEDINGS, P20, DOI 10.1109/SEAA.2009.86
   Goetz J. P., 1984, Ethnography and qualitative design in educational research
   GUBA EG, 1981, ECTJ-EDUC COMMUN TEC, V29, P75
   Gurbani V. K., 2006, 28th International Conference on Software Engineering Proceedings, P472, DOI 10.1145/1134285.1134352
   Gurbani VK, 2010, COMMUN ACM, V53, P155, DOI 10.1145/1646353.1646392
   HALLORAN T, 2002, P 2 WORKSH OP SOURC
   Herbsleb JD, 1999, IEEE SOFTWARE, V16, P63, DOI 10.1109/52.795103
   Leininger M., 1994, CRITICAL ISSUES QUAL
   Lincoln Y. S., 1985, NATURALISTIC INQUIRY, DOI DOI 10.1002/EV.1427
   Lindman J, 2008, INT FED INFO PROC, V275, P381, DOI 10.1007/978-0-387-09684-1_36
   MacCormack A, 2006, MANAGE SCI, V52, P1015, DOI 10.1287/mnsc.1060.0552
   Martin G, 2011, IFIP ADV INF COMM TE, V365, P334
   Martin K, 2007, IEEE SOFTWARE, V24, P46, DOI 10.1109/MS.2007.5
   McConnell S, 1999, IEEE SOFTWARE, V16, P6, DOI 10.1109/MS.1999.754046
   Melian C., 2007, PhD thesis.
   Merilinna J, 2006, EUROMICRO CONF PROC, P170, DOI 10.1109/EUROMICRO.2006.61
   Michlmayr M., 2012, International Journal of Open Source Software and Processes, V4, P1, DOI [10.4018/jossp.2012010101, DOI 10.4018/JOSSP.2012010101]
   Mockus A, 2002, ACM T SOFTW ENG METH, V11, P309, DOI 10.1145/567793.567795
   Neus A, 2005, IBM SYST J, V44, P215, DOI 10.1147/sj.442.0215
   O'Reilly T, 1999, COMMUN ACM, V42, P32, DOI 10.1145/299157.299164
   PARNAS DL, 1972, COMMUN ACM, V15, P1053, DOI 10.1145/361598.361623
   Pulkkinen M, 2007, WEBIST 2007: PROCEEDINGS OF THE THIRD INTERNATIONAL CONFERENCE ON WEB INFORMATION SYSTEMS AND TECHNOLOGIES, VOL SEBEG/EL, P141
   Raymond E., 2001, CATHEDRAL BAZAAR MUS
   Riehle D, 2009, IEEE SOFTWARE, V26, P52, DOI 10.1109/MS.2009.44
   Rigby PC, 2012, IEEE SOFTWARE, V29, P56, DOI 10.1109/MS.2012.24
   Rigby PC, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P541
   Robbins J., 2005, PERSPECTIVES FREE OP, P245
   Robson C., 2002, Real world research
   Royce W. W., 1987, Proceedings of the 9th International Conference on Software Engineering (Cat. No.87CH2432-3), P328
   Scacchi W, 2004, IEEE SOFTWARE, V21, P59, DOI 10.1109/MS.2004.1259221
   Schwaber K., 2002, AGILE SOFTWARE DEV S
   Schwarz Andrew, 2007, Data Base for Advances in Information Systems, V38, P29, DOI 10.1145/1278253.1278259
   Seaman CB, 1999, IEEE T SOFTWARE ENG, V25, P557, DOI 10.1109/32.799955
   Sfetsos P, 2006, EMPIR SOFTW ENG, V11, P269, DOI 10.1007/s10664-006-6404-6
   Sharma S, 2002, INFORM SYST J, V12, P7, DOI 10.1046/j.1365-2575.2002.00116.x
   Stol KJ, 2011, INFORM SOFTWARE TECH, V53, P1319, DOI 10.1016/j.infsof.2011.06.007
   Swanson E. B., 1976, 2nd International Conference on Software Engineering, P492
   Swanson J., 1994, CRITICAL ISSUES QUAL
   Torkar R, 2011, J ASSOC INF SYST, V12, P88
   Torvalds Linus., 1999, Open Sources: Voices from the Open Source Revolution
   van der Hinden F, 2009, IEEE SOFTWARE, V26, P77, DOI 10.1109/MS.2009.88
   van der Linden Frank, 2009, UPGRADE: The European Journal for the Informatics Professional, V10, P32
   Verner JM, 2009, INT CONF RES CHAL, P313, DOI 10.1109/RCIS.2009.5089295
   Vitharana P, 2010, J MANAGE INFORM SYST, V27, P277, DOI 10.2753/MIS0742-1222270209
   Wang XF, 2014, IEEE SOFTWARE, V31, P72, DOI 10.1109/MS.2013.98
   Wesselius J, 2008, IEEE SOFTWARE, V25, P60, DOI 10.1109/MS.2008.79
   Yin R.K., 2011, Qualitative research from start to finish
NR 103
TC 38
Z9 43
U1 0
U2 5
PU ASSOC COMPUTING MACHINERY
PI NEW YORK
PA 1601 Broadway, 10th Floor, NEW YORK, NY USA
SN 1049-331X
EI 1557-7392
J9 ACM T SOFTW ENG METH
JI ACM Trans. Softw. Eng. Methodol.
PD MAR
PY 2014
VL 23
IS 2
AR 18
DI 10.1145/2533685
PG 35
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA AF8XA
UT WOS:000334997700008
DA 2024-07-18
ER

PT J
AU Shonle, M
   Griswold, WG
   Lerner, S
AF Shonle, Macneil
   Griswold, William G.
   Lerner, Sorin
TI A Framework for the Checking and Refactoring of Crosscutting Concepts
SO ACM TRANSACTIONS ON SOFTWARE ENGINEERING AND METHODOLOGY
LA English
DT Article
DE Languages; Design; Design patterns; refactoring
ID DATA FLOW-ANALYSIS; PROGRAM; TRANSFORMATIONS; ATTRIBUTES
AB Programmers employ crosscutting concepts, such as design patterns and other programming idioms, when their design ideas cannot be efficiently or effectively modularized in the underlying programming language. As a result, implementations of these crosscutting concepts can be hard to change even when the code is well structured.
   In this article, we describe Arcum, a system that supports the modular maintenance of crosscutting concepts. Arcum can be used to both check essential constraints of crosscutting concepts and to substitute crosscutting concept implementations with alternative implementations. Arcum is complementary to existing refactoring systems that focus on meaning-preserving program transformations at the programming-language-semantics level, because Arcum focuses on transformations at the conceptual level.
   We present the underpinnings of the Arcum approach and show how Arcum can be used to address several classical software engineering problems.
C1 [Shonle, Macneil] Univ Texas San Antonio, Dept Comp Sci, San Antonio, TX 78249 USA.
   [Griswold, William G.; Lerner, Sorin] Univ Calif San Diego, San Diego, CA 92103 USA.
C3 University of Texas System; University of Texas at San Antonio (UTSA);
   University of California System; University of California San Diego
RP Shonle, M (corresponding author), Univ Texas San Antonio, Dept Comp Sci, 1 UTSA Circle, San Antonio, TX 78249 USA.
EM mshonle@cs.utsa.edu
OI Griswold, William/0000-0003-0663-6977
FU NSF [CCF-0613845]; IBM
FX This work was supported in large part by the NSF Science of Design grant
   CCF-0613845 with additional support from an IBM Eclipse Innovation
   Award.
CR Abiteboul S, 1995, FDN DATABASES
   AIKEN A., 1997, P 4 INT S STAT AN SA
   Alt M., 1995, Static Analysis. Second International Symposium, SAS'95. Proceedings, P33
   [Anonymous], 2003, Eclipse Modeling Framework
   BABICH WA, 1978, ACTA INFORM, V10, P245, DOI 10.1007/BF00264319
   BABICH WA, 1978, ACTA INFORM, V10, P265, DOI 10.1007/BF00264320
   Balaban I, 2005, ACM SIGPLAN NOTICES, V40, P265, DOI 10.1145/1103845.1094832
   BALL T., 2001, P ACM SIGPLAN C PROG
   BANCILHON F, 1981, ACM T DATABASE SYST, V6, P557, DOI 10.1145/319628.319634
   BARBOSA D. M. J., 2010, P ACM SIGPLAN INT C
   Baxter ID, 2004, PROC INT CONF SOFTW, P625, DOI 10.1109/ICSE.2004.1317484
   Berndl M, 2003, ACM SIGPLAN NOTICES, V38, P103, DOI 10.1145/780822.781144
   BOHANNON A., 2008, P ACM SIGPLAN SIGACT
   Boshemitsan Marat., 2004, Companion to the ACM SIGPLAN Conference on Object-Oriented Programming, Systems, Languages, and Applications, P212
   BOSHERNITSAN M., 2006, THESIS U CALIFORNIA
   Bravenboer M, 2008, SCI COMPUT PROGRAM, V72, P52, DOI 10.1016/j.scico.2007.11.003
   BRYANT A., 2002, P 1 INT C ASP OR SOF, P10
   BRYANT RE, 1992, COMPUT SURV, V24, P293, DOI 10.1145/136035.136043
   BURCH JR, 1992, INFORM COMPUT, V98, P142, DOI 10.1016/0890-5401(92)90017-A
   CARROLL M. D., 1988, P 15 SIGPLAN SIGACT
   Clifton C, 2000, ACM SIGPLAN NOTICES, V35, P130, DOI 10.1145/354222.353181
   Colyer A., 2004, P 3 INT C ASPECT ORI, P56, DOI DOI 10.1145/976270.976279
   Cousot P., 1979, 6 ACM S PRINCIPLES P, P269, DOI DOI 10.1145/567752.567778
   Cousot P., 1977, C RECORD 4 ANN ACM S, P238, DOI DOI 10.1145/512950.512973
   DAS M., 2002, P ACM SIGPLAN C PROG
   de Moor O, 2007, SEVENTH IEEE INTERNATIONAL WORKING CONFERENCE ON SOURCE CODE ANALYSIS AND MANIPULATION, PROCEEDINGS, P3, DOI 10.1109/SCAM.2007.31
   DEMERS A., 1981, P 8 SIGPLAN SIGACT S
   Dennett D., 1992, CONSCIOUSNESS EXPLAI, V1
   Dwyer MB, 1996, PROC INT CONF SOFTW, P554, DOI 10.1109/ICSE.1996.493449
   Fahndrich M, 1998, ACM SIGPLAN NOTICES, V33, P85, DOI 10.1145/277652.277667
   FOSTER J. N., 2008, P ACM SIGPLAN INT C
   Foster JN, 2007, ACM T PROGR LANG SYS, V29, DOI [10.1145/1232420.1232424, 10.1145/1047659.1040325]
   GAFTER N., 2006, SUPER TYPE TOKENS
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   GOOGLE, 2007, GOOGL COLL LIB 0 5 A
   Gosling J., 2005, Java Language Specification, Vthird
   Griswold WG, 2006, IEEE SOFTWARE, V23, P51, DOI 10.1109/MS.2006.24
   Griswold WilliamG., 2001, REFLECTION 01, P250
   Hannemann J, 2002, ACM SIGPLAN NOTICES, V37, P161, DOI 10.1145/583854.582436
   Hannemann Jan., 2005, AOSD 05, P135
   Hu Zhenjiang., 2004, PARTIAL EVALUATION P, P178
   Jia Liu, 2006, 28th International Conference on Software Engineering Proceedings, P112
   Kawanaka S, 2006, ACM SIGPLAN NOTICES, V41, P201, DOI 10.1145/1160074.1159830
   Kennedy AJ, 2004, J FUNCT PROGRAM, V14, P727, DOI 10.1017/S0956796804005209
   Kiczales G, 1997, LECT NOTES COMPUT SC, V1241, P220, DOI 10.1007/BFb0053381
   Kiczales G., 2001, ECOOP 2001 - Object-Oriented Programming. 15th European Conference. Proceedings (Lecture Notes in Computer Science Vol.2072), P327
   Kiczales G, 2001, COMMUN ACM, V44, P59, DOI 10.1145/383845.383858
   Kotik G. B., 1989, SIGSOFT Software Engineering Notes, V14, P75, DOI 10.1145/75309.75318
   KOZACZYNSKI W, 1992, IEEE T SOFTWARE ENG, V18, P1065, DOI 10.1109/32.184761
   LACEY D., 2002, P 29 ACM SIGPLAN SIG
   Lerner S, 2005, ACM SIGPLAN NOTICES, V40, P364, DOI 10.1145/1047659.1040335
   Lieberherr K., 1996, ADAPTIVE OBJECT ORIE
   Lieberherr KJ, 1997, PROC INT CONF SOFTW, P604, DOI 10.1145/253228.253494
   Marin Marius., 2005, MACS 05, P1, DOI DOI 10.1145/1082983.1083140
   Martin M, 2005, ACM SIGPLAN NOTICES, V40, P365, DOI 10.1145/1103845.1094840
   Masticola SP, 1995, ACM T PROGR LANG SYS, V17, P777, DOI 10.1145/213978.213989
   Metsker Steven., 2006, DESIGN PATTERNS JAVA
   Morgan Clint., 2007, AOSD 07, P63
   Nita Marius, 2010, P 32 ACM IEEE INT C, V1, P205
   Northrop L., 2001, SOFTWARE PRODUCT LIN
   NYSTROM N., 2003, P 12 INT C COMP CONS
   Orleans D., 2001, REFLECTION' 01: 3rd International Conference on Metalevel Architectures and Separation of Crosscutting Concerns, P73
   PARNAS D. L., 2001, SOFTWARE FUNDAMENTAL, P193
   PARNAS DL, 1972, COMMUN ACM, V15, P1053, DOI 10.1145/361598.361623
   Reichenbach C, 2009, LECT NOTES COMPUT SC, V5653, P394, DOI 10.1007/978-3-642-03013-0_18
   Reps T., 1994, Applications of Logic Databases, P163
   Roberts D., 1999, Ph. D. Dissertation
   Shankar A, 2007, PLDI'07: PROCEEDINGS OF THE 2007 ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P310, DOI 10.1145/1250734.1250770
   SHONLE M., 2008, P 2 WORKSH REF TOOLS
   SHONLE M., 2008, P 8 ACM SIGPLAN SIGS
   Shonle M, 2007, PROC INT CONF SOFTW, P95, DOI 10.1109/ICSECOMPANION.2007.55
   Shonle Macneil., 2007, ESEC FSE 07, P175
   Simonyi C., 1995, MSRTR9552
   Sittampalam G, 2004, ACM SIGPLAN NOTICES, V39, P26, DOI 10.1145/982962.964004
   STEFFEN B, 1991, LECT NOTES COMPUT SC, V526, P346
   STEFFEN J., 1985, P WINT USENIX C
   Sullivan Kevin., 2005, SIGSOFT SOFTW ENG NO, V30, P166
   Tarr P, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P689, DOI 10.1109/ICSE.2002.1008031
   TILEVICH E., 2008, P INT C ASP OR SOFTW
   Tip F, 2003, ACM SIGPLAN NOTICES, V38, P13, DOI 10.1145/949343.949308
   TJIANG SWK, 1992, SIGPLAN NOTICES, V27, P82, DOI 10.1145/143103.143120
   VENKATESH GA, 1992, IEEE T SOFTWARE ENG, V18, P304, DOI 10.1109/32.129219
   Verbaere M., 2006, 28th International Conference on Software Engineering Proceedings, P172, DOI 10.1145/1134285.1134311
   von Dincklage D, 2003, LECT NOTES COMPUT SC, V2830, P287
   WHALEY J, 2004, P C PROGR LANG DES I
   Whaley John, 2005, LECT NOTES COMPUTER, V3780
   Whitfield DL, 1997, ACM T PROGR LANG SYS, V19, P1053, DOI 10.1145/267959.267960
   Xiong B, 2007, IEEE INT CON AUTO SC, P1016
   Yi K., 1993, Conference Record of the Twentieth Annual ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages, P246, DOI 10.1145/158511.158642
NR 89
TC 0
Z9 0
U1 0
U2 13
PU ASSOC COMPUTING MACHINERY
PI NEW YORK
PA 2 PENN PLAZA, STE 701, NEW YORK, NY 10121-0701 USA
SN 1049-331X
EI 1557-7392
J9 ACM T SOFTW ENG METH
JI ACM Trans. Softw. Eng. Methodol.
PD JUL
PY 2012
VL 21
IS 3
AR 15
DI 10.1145/2211616.2211618
PG 47
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 968FX
UT WOS:000305963800002
OA Green Published
DA 2024-07-18
ER

PT J
AU Roychoudhury, A
   Goel, A
   Sengupta, B
AF Roychoudhury, Abhik
   Goel, Ankit
   Sengupta, Bikram
TI Symbolic Message Sequence Charts
SO ACM TRANSACTIONS ON SOFTWARE ENGINEERING AND METHODOLOGY
LA English
DT Article
DE Design; Languages; Verification; Message sequence charts; unified
   modeling language (UML); symbolic execution; test generation
ID SCENARIO
AB Message sequence charts (MSCs) are a widely used visual formalism for scenario-based specifications of distributed reactive systems. In its conventional usage, an MSC captures an interaction snippet between concrete objects in the system. This leads to voluminous specifications when the system contains several objects that are behaviorally similar. MSCs also play an important role in the model-based testing of reactive systems, where they may be used for specifying (partial) system behaviors, describing test generation criteria, or representing test cases. However, since the number of processes in a MSC specification are fixed, model-based testing of systems consisting of process classes may involve a significant amount of rework: for example, reconstructing system models, or regenerating test cases for systems differing only in the number of processes of various types.
   In this article we propose a scenario-based notation, called symbolic message sequence charts (SMSCs), for modeling, simulation, and testing of process classes. SMSCs are a lightweight syntactic and semantic extension of MSCs where, unlike MSCs, a SMSC lifeline can denote some/all objects from a collection. Our extensions give us substantially more modeling power. Moreover, we present an abstract execution semantics for (structured collections of) SMSCs. This allows us to validate MSC-based system models capturing interactions between large, or even unbounded, number of objects. Finally, we describe a SMSC-based testing methodology for process classes, which allows generation of test cases for new object configurations with minimal rework.
   Since our SMSC extensions are only concerned with MSC lifelines, we believe that they can be integrated into existing standards such as UML 2.0. We illustrate our SMSC-based framework for modeling, simulation, and testing of process classes using a weather-update controller case-study from NASA.
C1 [Roychoudhury, Abhik; Goel, Ankit] Natl Univ Singapore, Sch Comp, Singapore 117417, Singapore.
   [Sengupta, Bikram] IBM India Res Lab, Bangalore 560071, Karnataka, India.
C3 National University of Singapore; International Business Machines (IBM)
RP Roychoudhury, A (corresponding author), Natl Univ Singapore, Sch Comp, 13 Comp Dr, Singapore 117417, Singapore.
EM abhik@comp.nus.edu.sg; ankit.capri@gmail.com; bsengupt@in.ibm.com
OI ROYCHOUDHURY, Abhik/0000-0002-7127-1137
FU IBM; NUS faculty research council [T1251RES0815]
FX This work was partially supported by an IBM faculty award and a NUS
   faculty research council grant T1251RES0815.
CR Ali S, 2007, INFORM SOFTWARE TECH, V49, P1087, DOI 10.1016/j.infsof.2006.11.002
   [Anonymous], Z120 ITUT
   [Anonymous], 1985, EATCS Monographs on Theoretical Computer Science
   BASANIERI F., 2002, LECT NOTES COMPUTER, V2460, P275
   Bertolino A, 2005, ELECTRON NOTES THEOR, V116, P85, DOI 10.1016/j.entcs.2004.02.084
   Briand L.C., 2001, P 4 INT C UNIFIED MO, P194, DOI DOI 10.5555/647245.719446
   Brinksma E., 2002, P 3 WORKSH EMB SYST, P246
   Broy M., 2005, Lecture Notes in Computer Science, V3472
   CTAS, CTR TRAC AUT SYST CT
   CTRD, REQ DOC
   Damm W, 2001, FORM METHOD SYST DES, V19, P45, DOI 10.1023/A:1011227529550
   Delzanno G., 2000, Computer Aided Verification, V1855, P53
   Fraikin F, 2002, ASE 2002: 17TH IEEE INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, P261, DOI 10.1109/ASE.2002.1115026
   Frantzen L, 2006, LECT NOTES COMPUT SC, V4262, P40
   Gallagher L, 2006, SOFTW TEST VERIF REL, V16, P215, DOI 10.1002/stvr.340
   Genest B, 2004, LECT NOTES COMPUT SC, V2987, P195
   Goel A., 2006, 28th International Conference on Software Engineering Proceedings, P302, DOI 10.1145/1134285.1134328
   Goel A., 2006, 2 INT S LEV APPL FOR, P347
   Goel A, 2009, PROC INT CONF SOFTW, P419, DOI 10.1109/ICSE-COMPANION.2009.5071041
   Grieskamp W, 2006, LECT NOTES COMPUT SC, V4262, P1
   HAREL D, 1987, SCI COMPUT PROGRAM, V8, P231, DOI 10.1016/0167-6423(87)90035-9
   Harel D., 2003, COME LETS PLAY SCENA, DOI 10.1007/978-3-642-19029-2
   HONG H. S., 2000, SOFTW TEST VERIFICAT, V10, P4
   Hong H S., 2001, Proceedings of FATES'01, Workshop on Formal Approaches to Testing of Software, volume NS-01-4 of BRICS Notes Series, P15
   Jard C., 2005, International Journal on Software Tools for Technology Transfer, V7, P297, DOI 10.1007/s10009-004-0153-x
   Joshi K.D., 1989, Foundations of discrete mathematics
   Knapp A., 2002, Formal Techniques in Real-Time and Fault-Tolerant Systems. 7th International Symposium, FTRTFT 2002. Proceedings (Lecture Notes in Computer Science Vol.2469), P395
   Koch B., 1998, Industrial Strength Formal Specification Techniques, 1998. Proceedings. 2nd IEEE, P114, DOI [10 . 1109 / WIFT.1998.766305, DOI 10.1109/WIFT.1998.766305]
   Krüger I, 2004, FORM ASP COMPUT, V16, P194, DOI 10.1007/s00165-004-0046-5
   Kugler H, 2007, LECT NOTES COMPUT SC, V4422, P306
   Lee NH, 2003, COMPUT NETW, V42, P405, DOI 10.1016/S1389-1286(03)00250-0
   Marelly R, 2002, ACM SIGPLAN NOTICES, V37, P83, DOI 10.1145/583854.582429
   Mauw S, 1999, COMPUT NETW, V31, P1785, DOI 10.1016/S1389-1286(99)00060-2
   Mortensen KH, 2000, LECT NOTES COMPUT SC, V1825, P367
   Mousavi MR, 2004, IEEE S LOG, P303, DOI 10.1109/LICS.2004.1319625
   Niaz I.A., 2003, INT C SOFTWARE ENG A, P315
   Offutt J., 1999, UML99 UNIFIED MODELI, P76
   Pelliccione P, 2005, LECT NOTES COMPUT SC, V3489, P267
   Pickin S, 2007, IEEE T SOFTWARE ENG, V33, P252, DOI 10.1109/TSE.2007.39
   PNUELI A., 2002, LNCS, V2404, P93
   Pretschner A, 2005, PROC INT CONF SOFTW, P392
   PRETSCHNER A, 2001, P FORM APPR TEST SOF, P47
   Rauchwerger Y, 2005, LECT NOTES COMPUT SC, V3530, P210
   RENIERS M, 1999, THESIS EINDHOVEN U T
   RHAP, TEL RHAPS
   Roychoudhury Abhik., 2007, ESEC FSE 07, P275
   Rusu V, 2000, LECT NOTES COMPUT SC, V1945, P338
   Sengupta B., 2002, Software Engineering Notes, V27, P167, DOI 10.1145/605466.605492
   SENGUPTA B., 2003, THESIS STATE U NEW Y
   Störrle H, 2003, 200S IEEE SYMPOSIUM ON HUMAN CENTRIC COMPUTING LANGUAGES AND ENVIRONMENTS, P129
   Tretmans J, 1996, SOFTWARE-CONC TOOL, V17, P103
   Uchitel S., 2002, Software Engineering Notes, V27, P109, DOI 10.1145/605466.605484
   Wang T, 2004, LECT NOTES COMPUT SC, V3057, P178
   Wittevrongel J, 2001, OOIS 2001: 7TH INTERNATIONAL CONFERENCE ON OBJECT-ORIENTED INFORMATION SYSTEMS, PROCEEDINGS, P303
   XSB, LOG PROGR SYST
   [No title captured]
NR 56
TC 2
Z9 2
U1 0
U2 3
PU ASSOC COMPUTING MACHINERY
PI NEW YORK
PA 2 PENN PLAZA, STE 701, NEW YORK, NY 10121-0701 USA
SN 1049-331X
EI 1557-7392
J9 ACM T SOFTW ENG METH
JI ACM Trans. Softw. Eng. Methodol.
PD MAR
PY 2012
VL 21
IS 2
AR 12
DI 10.1145/2089116.2089122
PG 44
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 914TR
UT WOS:000301976000006
OA Bronze
DA 2024-07-18
ER

PT J
AU McMinn, P
   Binkley, D
   Harman, M
AF McMinn, Phil
   Binkley, David
   Harman, Mark
TI Empirical Evaluation of a Nesting Testability Transformation for
   Evolutionary Testing
SO ACM TRANSACTIONS ON SOFTWARE ENGINEERING AND METHODOLOGY
LA English
DT Article
DE Verification; Algorithms; Experimentation; Measurement; Performance;
   Evolutionary testing; test data generation; testability transformation;
   search-based software engineering
ID TEST-DATA GENERATION
AB Evolutionary testing is an approach to automating test data generation that uses an evolutionary algorithm to search a test object's input domain for test data. Nested predicates can cause problems for evolutionary testing, because information needed for guiding the search only becomes available as each nested conditional is satisfied. This means that the search process can overfit to early information, making it harder, and sometimes near impossible, to satisfy constraints that only become apparent later in the search. The article presents a testability transformation that allows the evaluation of all nested conditionals at once. Two empirical studies are presented. The first study shows that the form of nesting handled is prevalent in practice. The second study shows how the approach improves evolutionary test data generation.
C1 [McMinn, Phil] Univ Sheffield, Dept Comp Sci, Sheffield S1 4DP, S Yorkshire, England.
   [Binkley, David] Loyola Coll, Dept Comp Sci, Baltimore, MD 21210 USA.
   [Harman, Mark] Kings Coll London, CREST, London WC2R 2LS, England.
C3 University of Sheffield; Loyola University Maryland; University of
   London; King's College London
RP McMinn, P (corresponding author), Univ Sheffield, Dept Comp Sci, 211 Portobello St, Sheffield S1 4DP, S Yorkshire, England.
EM p.mcminn@sheffield.ac.uk; binkley@cs.loyola.edu; mark.harman@kcl.ac.uk
OI Harman, Mark/0000-0002-5864-4488
FU EPSRC [EP/G009600/1, EP/F065825/1, EP/F010443, EP/F059442, EP/D050863];
   DaimlerChrysler Research and Technology; National Science Foundation
   [CCR-0305330]; EU; EPSRC [EP/F065825/1, EP/G009600/1, EP/F010443/1]
   Funding Source: UKRI
FX P. McMinn is supported in part by EPSRC grants EP/G009600/1 (Automated
   Discovery of Emergent Misbehaviour) and EP/F065825/1 (REGI: Reverse
   Engineering State Machine Hierarchies by Grammar Inference) and received
   support from DaimlerChrysler Research and Technology. D. Binkley is
   supported by National Science Foundation grant CCR-0305330. He is also
   jointly supported with M. Harman by EPSRC grant EP/F010443 (A-CluB:
   Automated Cluster Breaking). M. Harman is further supported in part by
   EPSRC grants EP/F059442 (SLIM: SLIcing state based Models), EP/D050863
   (SEBASE: Software Engineering By Automated SEarch) and the EU-funded
   project EvoTest.
CR [Anonymous], P IFIP INT WORKSH DE
   Baresel A, 2003, LECT NOTES COMPUT SC, V2724, P2442
   Baresel A., 2004, P INT S SOFTW TEST A, P43
   Baresel A., 2000, THESIS HUMBOLDT U BE
   Baresel Andre., 2002, Proceedings of the Genetic and Evolutionary Computation Conference, GECCO '02, P1329
   Boyer RobertS., 1975, P INT C RELIABLE SOF, P234, DOI DOI 10.1145/800027.808445
   Clarke L. A., 1976, IEEE Transactions on Software Engineering, VSE-2, P215, DOI 10.1109/TSE.1976.233817
   DEMILLO RA, 1991, IEEE T SOFTWARE ENG, V17, P900, DOI 10.1109/32.92910
   Do HS, 2005, EMPIR SOFTW ENG, V10, P405, DOI 10.1007/s10664-005-3861-2
   Ferguson R., 1996, ACM Transactions on Software Engineering and Methodology, V5, P63, DOI 10.1145/226155.226158
   Harman M, 2004, IEEE T SOFTWARE ENG, V30, P3, DOI 10.1109/TSE.2004.1265732
   HARMAN M, 2009, IEEE T SOFT IN PRESS
   HARMAN M., 2007, Proceedings of the the 6th joint meeting of the European software engineering conference and the ACM SIGSOFT symposium on The foundations of software engineering, P155, DOI DOI 10.1145/1287624.1287647
   Harman M., 2002, P GENETIC EVOLUTIONA, P1359
   Hierons RM, 2005, COMPUT J, V48, P421, DOI 10.1093/comjnl/bxh093
   JONES B, 1995, P 3 INT C SOFTW QUAL, P435
   Jones BF, 1996, SOFTWARE ENG J, V11, P299, DOI 10.1049/sej.1996.0040
   KING JC, 1976, COMMUN ACM, V19, P385, DOI 10.1145/360248.360252
   Korel B., 1992, Software Testing, Verification and Reliability, V2, P203, DOI 10.1002/stvr.4370020405
   KOREL B, 1990, IEEE T SOFTWARE ENG, V16, P870, DOI 10.1109/32.57624
   KOREL B, 1996, P ISCE, V18, P71
   Korel B, 2005, 16TH IEEE INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P245, DOI 10.1109/ISSRE.2005.16
   McMinn P, 2006, EVOL COMPUT, V14, P41
   McMinn P, 2004, SOFTW TEST VERIF REL, V14, P105, DOI 10.1002/stvr.294
   MCMINN P, 2005, CS0507 U SHEFF, P165
   Miller W., 1976, IEEE Transactions on Software Engineering, VSE-2, P223, DOI 10.1109/TSE.1976.233818
   Mühlenbein H, 1993, EVOL COMPUT, V1, P25, DOI 10.1162/evco.1993.1.1.25
   Pargas RoyP., 1999, Verification and Reliability, V9, P263
   Puschner P, 1998, REAL TIM SYST SYMP P, P134, DOI 10.1109/REAL.1998.739738
   Tracey N, 1998, 13TH IEEE INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P285, DOI 10.1109/ASE.1998.732680
   Tracey N, 2000, SOFTWARE PRACT EXPER, V30, P61, DOI 10.1002/(SICI)1097-024X(200001)30:1<61::AID-SPE292>3.0.CO;2-9
   Tracey N., 1998, Software Engineering Notes, V23, P73, DOI 10.1145/271775.271792
   Tracey N. J., 2000, THESIS U YORK
   Wegener J, 2001, INFORM SOFTWARE TECH, V43, P841, DOI 10.1016/S0950-5849(01)00190-2
   Wegener J, 1998, REAL-TIME SYST, V15, P275, DOI 10.1023/A:1008096431840
   WEGENER J, 1996, P 4 EUR C SOFTW TEST
   Whitley D, 2001, INFORM SOFTWARE TECH, V43, P817, DOI 10.1016/S0950-5849(01)00188-4
   Xanthakis S., 1992, 5 INT C SOFTWARE ENG, P625
NR 38
TC 24
Z9 30
U1 0
U2 4
PU ASSOC COMPUTING MACHINERY
PI NEW YORK
PA 2 PENN PLAZA, STE 701, NEW YORK, NY 10121-0701 USA
SN 1049-331X
EI 1557-7392
J9 ACM T SOFTW ENG METH
JI ACM Trans. Softw. Eng. Methodol.
PD MAY
PY 2009
VL 18
IS 3
AR 11
DI 10.1145/1525880.1525884
PG 27
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 456DB
UT WOS:000266818900004
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Breaux, TD
   Anton, AI
   Doyle, J
AF Breaux, Travis D.
   Anton, Annie I.
   Doyle, Jon
TI Semantic Parameterization: A Process for Modeling Domain Descriptions
SO ACM TRANSACTIONS ON SOFTWARE ENGINEERING AND METHODOLOGY
LA English
DT Article
DE Documentation; Standardization; Human Factors; Natural language; domain
   knowledge; formal specification; description logic
ID REQUIREMENTS
AB Software engineers must systematically account for the broad scope of environmental behavior, including nonfunctional requirements, intended to coordinate the actions of stakeholders and software systems. The Inquiry Cycle Model (ICM) provides engineers with a strategy to acquire and refine these requirements by having domain experts answer six questions: who, what, where, when, how, and why. Goal-based requirements engineering has led to the formalization of requirements to answer the ICM questions about when, how, and why goals are achieved, maintained, or avoided. In this article, we present a systematic process called Semantic Parameterization for expressing natural language domain descriptions of goals as specifications in description logic. The formalization of goals in description logic allows engineers to automate inquiries using who, what, and where questions, completing the formalization of the ICM questions. The contributions of this approach include new theory to conceptually compare and disambiguate goal specifications that enables querying goals and organizing goals into specialization hierarchies. The artifacts in the process include a dictionary that aligns the domain lexicon with unique concepts, distinguishing between synonyms and polysemes, and several natural language patterns that aid engineers in mapping common domain descriptions to formal specifications. Semantic Parameterization has been empirically validated in three case studies on policy and regulatory descriptions that govern information systems in the finance and health-care domains.
C1 [Breaux, Travis D.; Anton, Annie I.; Doyle, Jon] N Carolina State Univ, Dept Comp Sci, Raleigh, NC 27695 USA.
C3 North Carolina State University
RP Breaux, TD (corresponding author), N Carolina State Univ, Dept Comp Sci, 890 Oval Dr,Campus Box 8206, Raleigh, NC 27695 USA.
EM tdbreaux@ncsu.edu; aianton@ncsu.edu; jon_doyle@ncsu.edu
OI Doyle, Jon/0000-0002-5553-3790; Breaux, Travis/0000-0001-7127-8155
FU National Science Foundation ITR [NSF 032-5269]; Policy-Driven Framework
   for Online Privacy Protection [NSF 043-0166]; Center for Advanced
   Studies, Research Triangle Park, NC; Purdue University
FX This work was supported in part by National Science Foundation ITR
   Grant: Encoding Rights, Permissions and Obligations: Privacy Policy
   Specification and Compliance (NSF 032-5269); ITR CyberTrust Grant:
   Policy-Driven Framework for Online Privacy Protection (NSF 043-0166);
   the IBM Ph.D. Fellowship awarded by the Center for Advanced Studies,
   Research Triangle Park, NC; and CERIAS at Purdue University.
CR [Anonymous], 2002, Description Logic Handbook
   [Anonymous], 2006, P FORMALIZING COMPIH
   ANTON A, 1995, LECT NOTES COMPUTER, V811, P94
   Anton AI, 2004, IEEE SECUR PRIV, V2, P36, DOI 10.1109/MSECP.2004.1281243
   Antón AI, 2004, REQUIR ENG, V9, P169, DOI 10.1007/s00766-003-0183-z
   Anton AI, 1996, PROCEEDINGS OF THE SECOND INTERNATIONAL CONFERENCE ON REQUIREMENTS ENGINEERING, P136, DOI 10.1109/ICRE.1996.491438
   Breaux TD, 2005, 13TH IEEE INTERNATIONAL CONFERENCE ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P177, DOI 10.1109/RE.2005.12
   Breaux TD, 2005, SIXTH IEEE INTERNATIONAL WORKSHOP ON POLICIES FOR DISTRIBUTED SYSTEMS AND NETWORKS, PROCEEDINGS, P67, DOI 10.1109/POLICY.2005.12
   Breaux TD, 2006, RE'06: 14TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, PROCEEDINGS, P49
   Breaux TravisD., 2005, WPES '05, P51, DOI DOI 10.1145/1102199.1102210
   CHEN PPS, 1983, INFORM SCIENCES, V29, P127, DOI 10.1016/0020-0255(83)90014-2
   CREGAN A, 2007, P 3 OWL EXP DIR WORK, V258
   Cysneiros LM, 2004, IEEE T SOFTWARE ENG, V30, P328, DOI 10.1109/TSE.2004.10
   DARDENNE A, 1993, SCI COMPUT PROGRAM, V20, P3, DOI 10.1016/0167-6423(93)90021-G
   Denger C, 2003, IEEE INTERNATIONAL CONFERENCE ON SOFTWARE - SCIENCE, TECHNOLOGY & ENGINEERING, PROCEEDINGS, P80, DOI 10.1109/SWSTE.2003.1245428
   *DHHS, 2003, FACT SHEET PROT PRIV
   Fellbaum C., 1998, WORDNET ELECT LEXICA, DOI DOI 10.7551/MITPRESS/7287.001.0001
   Fuxman A, 2004, REQUIR ENG, V9, P132, DOI 10.1007/s00766-004-0191-7
   Gangemi A, 2002, LECT NOTES ARTIF INT, V2473, P166
   Gause D.C., 1989, EXPLORING REQUIREMEN
   Glaser B. G., 1967, DISCOVERY GROUNDED T, DOI 10.1515/9783111660211/html
   Horty J.F., 2001, AGENCY DEONTIC LOGIC
   Jackson M, 1997, ANN SOFTW ENG, V3, P5, DOI 10.1023/A:1018990005598
   Jackson M., 1993, PROC IEEE 1 INT S RE, P56
   Kaindl H, 1996, PROC INT CONF SOFTW, P28, DOI 10.1109/ICSE.1996.493399
   KALJURAND K, 2007, P 3 OWL EXP DIR WORK, V258
   Kaljurand K, 2006, LECT NOTES COMPUT SC, V4187, P179
   KEENAN E, 1985, BOOLEAN SEMANTICS NA, P190
   Konrad S, 2005, PROC INT CONF SOFTW, P372
   Mylopoulos J., 1997, Automated Software Engineering, V4, P291, DOI 10.1023/A:1008627026003
   NILES I, 2001, P 2 INT C FORM ONT I, P2
   Nirenburg S., 2004, ONTOLOGICAL SEMANTIC
   Nuseibeh B., 2000, P C FUTURE SOFTWARE, P35, DOI [10.1145/336512.336523, DOI 10.1145/336512.336523]
   Overmyer SP, 2001, PROC INT CONF SOFTW, P401, DOI 10.1109/ICSE.2001.919113
   POTTS C, 1994, IEEE SOFTWARE, V11, P21, DOI 10.1109/52.268952
   Potts C, 1997, RE '97 - PROCEEDINGS OF THE THIRD IEEE INTERNATIONAL SYMPOSIUM ON REQUIREMENTS ENGINEERING, P102, DOI 10.1109/ISRE.1997.566847
   Ramesh B, 2001, IEEE T SOFTWARE ENG, V27, P58, DOI 10.1109/32.895989
   Smith RL, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P11, DOI 10.1109/ICSE.2002.1007952
   van Lamsweerde A, 2001, FIFTH IEEE INTERNATIONAL SYMPOSIUM ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P249
   van Lamsweerde A., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, P5, DOI 10.1109/ICSE.2000.870392
   WASSON K, 2003, P 22 INT C COMP SAF, V2788, P317
   Wasson KS, 2006, RE'06: 14TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, PROCEEDINGS, P9
   WELTY C, 2002, 8 INT C PRINC KNOWL
   Zave P., 1993, ACM Transactions on Software Engineering and Methodology, V2, P379, DOI 10.1145/158431.158438
   2003, FED REG, V68, P34
NR 45
TC 30
Z9 34
U1 0
U2 5
PU ASSOC COMPUTING MACHINERY
PI NEW YORK
PA 2 PENN PLAZA, STE 701, NEW YORK, NY 10121-0701 USA
SN 1049-331X
EI 1557-7392
J9 ACM T SOFTW ENG METH
JI ACM Trans. Softw. Eng. Methodol.
PD NOV
PY 2008
VL 18
IS 2
AR 5
DI 10.1145/1416563.1416565
PG 27
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 394OA
UT WOS:000262454800002
DA 2024-07-18
ER

PT J
AU Marin, M
   Van Deursen, A
   Moonen, L
AF Marin, Marius
   Van Deursen, Arie
   Moonen, Leon
TI Identifying crosscutting concerns using fan-in analysis
SO ACM TRANSACTIONS ON SOFTWARE ENGINEERING AND METHODOLOGY
LA English
DT Article; Proceedings Paper
CT 11th Working Conference on Reverse Engineering
CY NOV 08-12, 2004
CL Delft, NETHERLANDS
SP IEEE Comp Soc Tech Council Software Engn, Reengn Forum
DE design; experimentation; languages; measurement; aspect-oriented
   programming; reverse engineering; crosscutting concerns; fan-in metric
ID PROGRAM; RECOGNITION; FRAMEWORK
AB Aspect mining is a reverse engineering process that aims at finding crosscutting concerns in existing systems. This article proposes an aspect mining approach based on determining methods that are called from many different places, and hence have a high fan-in, which can be seen as a symptom of crosscutting functionality. The approach is semiautomatic, and consists of three steps: metric calculation, method filtering, and call site analysis. Carrying out these steps is an interactive process supported by an Eclipse plug-in called FINT. Fan-in analysis has been applied to three open source Java systems, totaling around 200,000 lines of code. The most interesting concerns identified are discussed in detail, which includes several concerns not previously discussed in the aspect-oriented literature. The results show that a significant number of crosscutting concerns can be recognized using fan-in analysis, and each of the three steps can be supported by tools.
C1 [Marin, Marius; Van Deursen, Arie; Moonen, Leon] Delft Univ Technol, EEMCS, Software Evolut Res Lab, NL-2600 AA Delft, Netherlands.
C3 Delft University of Technology
RP Marin, M (corresponding author), Delft Univ Technol, EEMCS, Software Evolut Res Lab, NL-2600 AA Delft, Netherlands.
EM A.M.Marin@tudelft.nl; Arie.vanDeursen@tudelft.nl;
   Leon.Moonen@computer.org
RI Moonen, Leon/M-8790-2015; van Deursen, Arie/G-3084-2011
OI Moonen, Leon/0000-0002-1761-6771; van Deursen, Arie/0000-0003-4850-3312
CR Alur D., 2003, CORE J2EE PATTERNS
   [Anonymous], P 11 WORK C REV ENG
   [Anonymous], P OBJ OR PROGR SYST
   [Anonymous], 2003, ASPECTJ PROGR GUID
   Bergmans L, 2001, COMMUN ACM, V44, P51, DOI 10.1145/383845.383857
   BIGGERSTAFF TJ, 1994, COMMUN ACM, V37, P72, DOI 10.1145/175290.175300
   BINKLEY D, 2005, P INT C SOFTW MAINT
   BREU S, 2004, INT C AUT SOFTW ENG
   Breu S, 2006, IEEE INT CONF AUTOM, P221
   Briand LC, 1999, IEEE T SOFTWARE ENG, V25, P91, DOI 10.1109/32.748920
   Bruntink M, 2005, IEEE T SOFTWARE ENG, V31, P804, DOI 10.1109/TSE.2005.114
   Ceccato M, 2006, SOFTWARE QUAL J, V14, P209, DOI 10.1007/s11219-006-9217-3
   Colyer Adrian., 2005, ECLIPSE ASPECTJ
   EICK SG, 1992, IEEE T SOFTWARE ENG, V18, P957, DOI 10.1109/32.177365
   Ferenc R, 2005, PROC IEEE INT CONF S, P295
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   Fowler M, 2004, INVERSION CONTROL CO
   Gamma Erich., 1994, DESIGN PATTERNS
   GOETZ B, 2004, GARBAGE COLLECTION P
   Gradecki J.D., 2003, MASTERING ASPECTJ AS
   Griswold WG, 2001, PROC INT CONF SOFTW, P265, DOI 10.1109/ICSE.2001.919100
   GYBELS K, 2005, P AOSD WORKSH LINK A
   HANNEMANN J, 2001, P ICSE WORKSH ADV SE
   HARRISON W, 2004, RC23344 IBM
   HendersonSellers B, 1996, OBJECT ORIENTED SYST, V3, P143
   HENRY S, 1981, IEEE T SOFTWARE ENG, V7, P510, DOI 10.1109/TSE.1981.231113
   Janzen D., 2003, Proceedings of the 2nd Annual Conference on Aspect-Oriented Software Development (AOSD), P178, DOI 10.1145/643603.643622
   JOHNSON R, 2003, J2EE DES DEV
   KOSCHKE R., 2005, ASE '05 Proceedings of the 20th IEEE/ACM International Conference on Automated Software Engineering, P86
   KRINKE J, 2006, AAA WORKSH 13 WORK C, P334
   Laddad R., 2003, ASPECTJ ACTION PRACT
   LADDAD R, 2003, ASPECT ORIENTED REFR
   Lippert M., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, P418, DOI 10.1109/ICSE.2000.870432
   Marin M, 2004, 11TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P132, DOI 10.1109/WCRE.2004.23
   MARIN M, 2005, SENR0507 CWI
   MARIN M, 2004, P WCRE WORKSH ASP RE
   Marin M, 2006, WORK CONF REVERSE EN, P29
   MERIN M, 2004, SENR0413 CWI
   Mesbah A, 2005, WSE 2005: SEVENTH IEEE INTERNATIONAL SYMPOSIUM ON WEB SITE EVOLUTION, PROCEEDINGS, P14
   MONTEIRO M, 2004, UMDIGECSD200401
   MOODIE M, 2005, PRO JAKARTA TOMCAT, V5
   MURALI T, 2004, P 3 AOSD WORKSH ASP
   Murphy G. C., 2005, ASPECT ORIENTED SOFT, P507
   RICH C, 1990, IEEE SOFTWARE, V7, P82, DOI 10.1109/52.43053
   Robillard M. P., 2002, P 24 INT C SOFTW ENG
   Shepherd D, 2004, SERP'04: PROCEEDINGS OF THE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING RESEARCH AND PRACTICE, VOLS 1 AND 2, P601
   SHEPHERD D, 2005, P C AUT SOFTW ENG AS
   Sommerville I., 2004, Software Engineering
   SUTTON SM, 2005, ASPECT ORIENTED SOFT, V21, P479
   TARR P, 2004, RC23343 IBM RES
   Tonella P, 2004, PROC IEEE INT CONF S, P220, DOI 10.1109/ICSM.2004.1357806
   van Deursen A, 2000, SCI COMPUT PROGRAM, V36, P303, DOI 10.1016/S0167-6423(99)00040-4
   VANDEURSEN A, 2005, P AOSD WORKSH LINK A
   VICKERS P, 2002, WHY FINALIZERS SHOUL
   WILDE N, 1995, J SOFTW MAINT-RES PR, V7, P49, DOI 10.1002/smr.4360070105
   WILLS LM, 1990, ARTIF INTELL, V45, P113, DOI 10.1016/0004-3702(90)90039-3
   XIE X, 2006, P 28 IEEE ACM INT C, P839
   ZHANG C, 2004, COMP 19 ANN ACM SIGP, P20
   Zhang Charles., 2003, AOSD 03, P130
   [No title captured]
NR 60
TC 49
Z9 56
U1 0
U2 3
PU ASSOC COMPUTING MACHINERY
PI NEW YORK
PA 2 PENN PLAZA, STE 701, NEW YORK, NY 10121-0701 USA
SN 1049-331X
EI 1557-7392
J9 ACM T SOFTW ENG METH
JI ACM Trans. Softw. Eng. Methodol.
PD DEC
PY 2007
VL 17
IS 1
AR 3
DI 10.1145/1314493.1314496
PG 37
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA 252ON
UT WOS:000252455900003
OA Green Published, Green Submitted
DA 2024-07-18
ER

PT J
AU Binkley, D
   Gold, N
   Harman, M
AF Binkley, David
   Gold, Nicolas
   Harman, Mark
TI An empirical study of static program slice size
SO ACM TRANSACTIONS ON SOFTWARE ENGINEERING AND METHODOLOGY
LA English
DT Article
DE algorithms; measurement; program slicing; slice size
ID POINTER ANALYSIS; GRAPH
AB This article presents results from a study of all shoes from 43 programs, ranging up to 136,000 lines of code in size. The study investigates the effect of five aspects that affect slice size. Three slicing algorithms are used to study two algorithmic aspects: calling-context treatment, and slice granularity. The remaining three aspects affect the upstream dependencies considered by the slicer. These include collapsing structure fields, removal of dead code, and the influence of points-to analysis.
   The results show that for the most precise slicer, the average slice contains just under one-third of the program. Furthermore, ignoring calling context causes a 50% increase in slice size, and while (coarse-grained) function-level slices are 33% larger than corresponding statement-level slices, they may be useful predictors of the (finer-grained) statement-level slice size. Finally,, upstream analyses have an order of magnitude less influence on slice size.
C1 Loyola Coll, Baltimore, MD 21210 USA.
   Kings Coll London, London WC2R 2LS, England.
C3 Loyola University Maryland; University of London; King's College London
RP Binkley, D (corresponding author), Loyola Coll, 4501 N Charles St, Baltimore, MD 21210 USA.
EM binkley@cs.loyola.edu; nicolas.gold@kcl.ac.uk; mark.harman@kcl.ac.uk
OI Harman, Mark/0000-0002-5864-4488
CR Agrawal G, 2001, ACM SIGPLAN NOTICES, P6
   AGRAWAL H, 1993, SOFTWARE PRACT EXPER, V23, P589, DOI 10.1002/spe.4380230603
   Anderson P, 2001, FIRST IEEE INTERNATIONAL WORKSHOP ON SOURCE CODE ANALYSIS AND MANIPULATION, PROCEEDINGS, P79, DOI 10.1109/SCAM.2001.972669
   [Anonymous], 9419 DIKU U COP
   [Anonymous], 1990, Software testing techniques {
   [Anonymous], PLDI 98
   Atkinson D. C., 1998, Software Engineering Notes, V23, P46, DOI 10.1145/291252.288217
   Atkinson DC, 2001, PROC IEEE INT CONF S, P52, DOI 10.1109/ICSM.2001.972711
   BECK J, 1993, PROC INT CONF SOFTW, P509, DOI 10.1109/ICSE.1993.346015
   BENT L, 2000, 2000 ACM SIGSOFT INT
   Beszédes A, 2002, PROC IEEE INT CONF S, P12, DOI 10.1109/ICSM.2002.1167743
   BIEMAN JM, 1994, IEEE T SOFTWARE ENG, V20, P644, DOI 10.1109/32.310673
   Binkley D, 2005, PROC IEEE INT CONF S, P177
   Binkley D., 1995, ACM Transactions on Software Engineering and Methodology, V4, P3, DOI 10.1145/201055.201056
   Binkley D, 2004, ADV COMPUT, V62, P105, DOI 10.1016/S0065-2458(03)62003-6
   Binkley D, 2003, THIRD IEEE INTERNATIONAL WORKSHOP ON SOURCE CODE ANALYSIS AND MANIPULATION - PROCEEDINGS, P203, DOI 10.1109/SCAM.2003.1238046
   Binkley D, 2003, PROC IEEE INT CONF S, P44, DOI 10.1109/ICSM.2003.1235405
   Binkley D, 1998, INFORM SOFTWARE TECH, V40, P583, DOI 10.1016/S0950-5849(98)00085-8
   Binkley D, 1997, IEEE T SOFTWARE ENG, V23, P498, DOI 10.1109/32.624306
   Binkley D., 1996, Advances in Computers, V43, P1
   BURKE M, 1995, LECT NOTES COMPUTER, V892
   CALLAHAN D, 1988, SIGPLAN NOTICES, V23, P47, DOI 10.1145/960116.53995
   CANFORA G, 1994, J SOFTW MAINT-RES PR, V6, P53, DOI 10.1002/smr.4360060202
   Choi J.-D., 1993, Conference Record of the Twentieth Annual ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages, P232, DOI 10.1145/158511.158639
   Cimitile A, 1996, J SOFTW MAINT-RES PR, V8, P145, DOI 10.1002/(SICI)1096-908X(199605)8:3<145::AID-SMR127>3.0.CO;2-9
   Cimitile A, 1995, INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE, 1995 PROCEEDINGS, P124, DOI 10.1109/ICSM.1995.526534
   CIMITILE A, 1996, P 2 WORK C REV ENG, P178
   Clarke L. A., 1976, IEEE Transactions on Software Engineering, VSE-2, P215, DOI 10.1109/TSE.1976.233817
   CONFORA G, 1994, P INT C SOFTW MAINT, P424
   De Lucia A, 2001, FIRST IEEE INTERNATIONAL WORKSHOP ON SOURCE CODE ANALYSIS AND MANIPULATION, PROCEEDINGS, P142, DOI 10.1109/SCAM.2001.972675
   DeLucia A, 1996, FOURTH WORKSHOP ON PROGRAM COMPREHENSION, PROCEEDINGS, P9, DOI 10.1109/WPC.1996.501116
   EMAMI M, 1994, SIGPLAN NOTICES, V29, P242, DOI 10.1145/773473.178264
   Ferguson R., 1996, ACM Transactions on Software Engineering and Methodology, V5, P63, DOI 10.1145/226155.226158
   Foster JS, 2000, LECT NOTES COMPUT SC, V1824, P175
   GALLAGHER KB, 1991, IEEE T SOFTWARE ENG, V17, P751, DOI 10.1109/32.83912
   GALLAGHER KB, 1992, P INT C SOFTW MAINT, P236
   *GRAMM INC, 2002, COD SLIC SYST
   Gupta R., 1992, P IEEE C SOFTW MAINT, P299
   Hammen C, 2004, PSYCHOLOGICAL TREATMENT OF BIPOLAR DISORDER, P17, DOI 10.1145/996821.996830
   Harman M, 2001, PROC IEEE INT CONF S, P138, DOI 10.1109/ICSM.2001.972724
   HARMAN M, 1995, J SOFTWARE TESTING V, V5, P143
   HARMAN M, 2001, SOFTWARE FOCUS, V2, P85
   HARMAN M, 1997, P 19 WORKSH PROC MOD
   Harris N, 1998, LIBRARY, V20, P74
   Heintze N, 2001, ACM SIGPLAN NOTICES, V36, P254, DOI 10.1145/381694.378855
   Hierons R, 2002, SOFTW TEST VERIF REL, V12, P23, DOI 10.1002/stvr.232
   Hierons R.M., 1999, J SOFTW TEST VERIFIC, V9, P233, DOI 10.1002/(SICI)1099-1689(199912)9:43.0.CO;2-3
   HORWITZ S, 1988, SIGPLAN NOTICES, V23, P35
   HORWITZ S, 1989, ACM T PROGR LANG SYS, V11, P345, DOI 10.1145/65979.65980
   Jayaraman G, 2005, LECT NOTES COMPUT SC, V3442, P269, DOI 10.1007/978-3-540-31984-9_20
   JONES C, 1991, APPLIED SOFTWARE MEA
   Kamkar M, 1993, THESIS LINKOPING U S
   KOREL B, 1988, INFORM PROCESS LETT, V29, P155, DOI 10.1016/0020-0190(88)90054-3
   Krinke J, 2002, PROC IEEE INT CONF S, P22, DOI 10.1109/ICSM.2002.1167744
   Lakhotia Arun., 1993, Proceedings of the 15th Conference on Software Engineering (ICSE-15), P34
   LANDI W, 1992, SIGPLAN C PROGR LANG, V27, P7
   LIANG D, 1999, P IEEE INT C SOFTW M, P410
   Liang DL, 1999, LECT NOTES COMPUT SC, V1687, P199, DOI 10.1145/318774.318943
   Liao SW, 1999, ACM SIGPLAN NOTICES, V34, P37, DOI 10.1145/329366.301108
   Longworth H. D., 1986, Proceedings 10th Anniversary COMSAC '86. The IEEE Computer Society's Tenth Annual International Computer Software and Applications Conference (Cat. No.86CH2356-4), P383
   Lyle J., 1987, Proceedings of the ICCEA, ICCEA'87, P877
   LYLE JR, 1995, 5691 NISTIR US DEP C
   Meyers TM, 2004, 11TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P256, DOI 10.1109/WCRE.2004.34
   MOCK M, 2002, P 10 ACM SIGSOFT S F, P71
   Orso A, 2001, PROC IEEE INT CONF S, P158, DOI 10.1109/ICSM.2001.972726
   Orso A, 2001, PROG COMPREHEN, P39, DOI 10.1109/WPC.2001.921712
   Ott L. M., 1993, Proceedings First International Software Metrics Symposium (Cat. No.93TH0518-1), P71, DOI 10.1109/METRIC.1993.263799
   Ott L. M., 1989, Proceedings. 11th International Conference on Software Engineering (Cat. No.89CH2718-5), P198, DOI 10.1145/74587.74614
   Reps T, 1998, INFORM SOFTWARE TECH, V40, P701, DOI 10.1016/S0950-5849(98)00093-7
   REPS T, 1994, ACM SIGSOFT SOFTW EN, V19, P11
   RUF E, 1995, SIGPLAN NOTICES, V30, P13, DOI 10.1145/223428.207112
   Shapiro M., 1997, Conference Record of POPL '97: The 24th ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages, P1, DOI 10.1145/263699.263703
   SIMPSON D, 1993, ACM FORTRAN FORUM, V12, P26
   Sinha S., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P432, DOI 10.1109/ICSE.1999.841033
   Steensgaard B., 1996, Conference Record of POPL '96: The 23rd ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages, P32, DOI 10.1145/237721.237727
   TIP F, 1995, J PROGRAM LANG, V3, P121
   VENKATESH GA, 1995, ACM T PROGR LANG SYS, V17, P197, DOI 10.1145/201059.201062
   Wegener J, 2001, INFORM SOFTWARE TECH, V43, P841, DOI 10.1016/S0950-5849(01)00190-2
   WEISER M, 1984, IEEE T SOFTWARE ENG, V10, P352, DOI 10.1109/TSE.1984.5010248
   Weiser Mark., 1986, Papers presented at the first workshop on empirical studies of programmers on Empirical studies of programmers, P187
   Weiser MD., 1979, PROGRAM SLICES FORMA
   WEYUKER EJ, 1977, THESIS RUTGERS U NEW
   WHEELER DA, 2005, SLOC COUNT USERS GUI
   WILSON RP, 1995, SIGPLAN NOTICES, V30, P1, DOI 10.1145/223428.207111
   Yong SH, 1999, ACM SIGPLAN NOTICES, V34, P91, DOI 10.1145/301631.301647
   ZHANG S, 1996, ACM SOFTW ENG NOT, V21, P81
   Zhang ZG, 2003, PROC INT CONF SOFTW, P319
NR 87
TC 56
Z9 70
U1 0
U2 4
PU ASSOC COMPUTING MACHINERY
PI NEW YORK
PA 2 PENN PLAZA, STE 701, NEW YORK, NY 10121-0701 USA
SN 1049-331X
EI 1557-7392
J9 ACM T SOFTW ENG METH
JI ACM Trans. Softw. Eng. Methodol.
PY 2007
VL 16
IS 2
AR 8
DI 10.1145/1217295.1217297
PG 32
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 168WH
UT WOS:000246554200003
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Sommerville, I
   Ransom, J
AF Sommerville, I
   Ransom, J
TI An empirical study of industrial requirements engineering process
   assessment and improvement
SO ACM TRANSACTIONS ON SOFTWARE ENGINEERING AND METHODOLOGY
LA English
DT Article
DE software process improvement; process measurement; requirements
   engineering; empirical software engineering
ID BOOTSTRAP
AB This article describes an empirical study in industry of requirements engineering process maturity assessment and improvement. Our aims were to evaluate a requirements engineering process maturity model and to assess if improvements in requirements engineering process maturity lead to business improvements. We first briefly describe the process maturity model that we used and modifications to this model to accommodate process improvement. We present initial maturity assessment results for nine companies, describe how process improvements were selected and present data on how RE process maturity changed after these improvements were introduced. We discuss how business benefits were assessed and the difficulties of relating process maturity improvements to these business benefits. All companies reported business benefits and satisfaction with their participation in the study. Our conclusions are that the RE process maturity model is useful in supporting maturity assessment and in identifying process improvements and there is some evidence to suggest that process improvement leads to business benefits. However, whether these business benefits were a consequence of the changes to the RE process or whether these benefits resulted from side-effects of the study such as greater self-awareness of business processes remains an open question.
C1 Univ Lancaster, Dept Comp, Infolab21, Lancaster LA1 4WA, England.
C3 Lancaster University
RP Univ Lancaster, Dept Comp, Infolab21, South Dr, Lancaster LA1 4WA, England.
CR Ahern D.M., 2001, CMMI distilled
   [Anonymous], 1995, The Capability Maturity Model: Guidelines for Improving the Software Process
   BOEHM BW, 1983, P SOFTW MAINT WORKSH, P9
   COALLIER F, 1999, SOFTWARE PROCESS IMP
   DEMING WE, 1982, CRISIS
   El Emam Khaled, 1997, SPICE THEORY PRACTIC
   *ESPITI, 1996, SOFTW PROC IMPR RIGH
   HAASE V, 1994, IEEE SOFTWARE, V11, P25, DOI 10.1109/52.300080
   Hall T., 2002, IEE Proceedings-Software, V149, P153, DOI 10.1049/ip-sen:20020694
   Humphrey W.S., 1989, MANAGING SOFTWARE PR
   KOCH GR, 1993, INFORM SOFTWARE TECH, V35, P387, DOI 10.1016/0950-5849(93)90010-Z
   KONRAD M, 1995, P 5 INT C SOFTW QUAL
   Kuvaja P., 1994, SOFTWARE PROCESS ASS
   LUTZ RR, 1993, P RE 93
   PAULK MC, 1993, IEEE SOFTWARE, V10, P18, DOI 10.1109/52.219617
   PAULK MC, 1994, IEEE COMPUT, V27, P68
   Sawyer P, 1999, IEEE SOFTWARE, V16, P78, DOI 10.1109/52.754057
   Sawyer P, 1999, VTT SYMP, V195, P222
   SAWYER P, 1998, SOFTW P J, V3, P19
   SOMMERVILLE I, 1997, REQUIREMENTS ENG
NR 20
TC 78
Z9 88
U1 0
U2 11
PU ASSOC COMPUTING MACHINERY
PI NEW YORK
PA 2 PENN PLAZA, STE 701, NEW YORK, NY 10121-0701 USA
SN 1049-331X
EI 1557-7392
J9 ACM T SOFTW ENG METH
JI ACM Trans. Softw. Eng. Methodol.
PD JAN
PY 2005
VL 14
IS 1
BP 85
EP 117
DI 10.1145/1044834.1044837
PG 33
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 896NK
UT WOS:000226940600003
DA 2024-07-18
ER

PT J
AU Roshandel, R
   Van der Hoek, AE
   Mikic-Rakic, M
   Medvidovic, N
AF Roshandel, R
   Van der Hoek, AE
   Mikic-Rakic, M
   Medvidovic, N
TI Mae - A system model and environment for managing architectural
   evolution
SO ACM TRANSACTIONS ON SOFTWARE ENGINEERING AND METHODOLOGY
LA English
DT Article
DE design; design environment; evolution; Mae; system model
AB As with any other artifact produced as part of the software life cycle, software architectures evolve and this evolution must be managed. One approach to doing so would be to apply any of a host of existing configuration management systems, which have long been used successfully at the level of source code. Unfortunately, such an approach leads to many problems that prevent effective management of architectural evolution. To overcome these problems, we have developed an alternative approach centered on the use of an integrated architectural and configuration management system model. Because the system model combines architectural and configuration management concepts in a single representation, it has the distinct benefit that all architectural changes can be precisely captured and clearly related to each other - both at the fine-grained level of individual architectural elements and at the coarse-grained level of architectural configurations. To support the use of the system model, we have developed Mae, an architectural evolution environment through which users can specify architectures in a traditional manner, manage the evolution of the architectures using a check-out/check-in mechanism that tracks all changes, select a specific architectural configuration, and analyze the consistency of a selected configuration. We demonstrate the benefits of our approach by showing how the system model and its accompanying environment were used in the context of several representative projects.
C1 Univ So Calif, Dept Comp Sci, Los Angeles, CA 90089 USA.
   Univ Calif Irvine, Dept Informat, Irvine, CA 92697 USA.
C3 University of Southern California; University of California System;
   University of California Irvine
RP Univ So Calif, Dept Comp Sci, Henry Salvatori Comp Ctr 300, Los Angeles, CA 90089 USA.
EM roshande@usc.edu; an-dre@ics.uci.edu; marija@usc.edu; neno@usc.edu
CR Agrawal R., 1991, Proceedings. Seventh International Conference on Data Engineering (Cat. No.91CH2968-6), P446, DOI 10.1109/ICDE.1991.131493
   Allen R., 1997, ACM Transactions on Software Engineering and Methodology, V6, P213, DOI 10.1145/258077.258078
   [Anonymous], P AIAA SPAC TECHN C
   [Anonymous], 2002, P 24 INT C SOFTW ENG
   ASIKAINEN T, 2003, P ICSE WORKSH SCM 20, P86
   Atkinson Colin., 2002, COMPONENT BASED PROD
   BATORY D, 1992, ACM T SOFTW ENG METH, V1, P4
   *BELL LABS LUC TEC, 1997, SABL V5 0 US REF MAN
   BOSCH J, 2001, P PROD FAM ARCH WORK, P13
   BURROWS C, 2001, OVUM EVALUATES CONFI
   CHRISTENSEN HB, 1998, P 8 INT S SYST CONF
   Conradi R, 1998, ACM COMPUT SURV, V30, P232, DOI 10.1145/280277.280280
   Cook J. E., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P203, DOI 10.1109/ICSE.1999.841010
   Dashofy E., 2002, P 1 ACM SIGSOFT WORK
   ESTUBLIER J, 2002, ACM SIGSOFT SOFTWARE, V27, P31, DOI DOI 10.1145/571681.571689
   ESTUBLIER J, 1994, CONFIGURATION MANAGE, P99
   FRANCONI E, 2000, P 6 INT C RUL OBJ DA
   GARLAN D, 1997, P CASCON 97
   Garlan D., 1994, P SIGSOFT94 FDN SOFT, P175
   Ghezzi C., 1991, Fundamentals of Software Engineering
   GORLICK MM, 1991, P 13 INT C SOFTW ENG
   Habermann A. N., 1981, Software Engineering Environments. Proceedings of the Symposium on Software Engineering Environments, P331
   Hunt J. J., 1998, ACM Transactions on Software Engineering and Methodology, V7, P192, DOI 10.1145/279310.279321
   KRASNER GE, 1988, J OBJECT-ORIENT PROG, V1, P41
   Krueger C. W., 2002, Software Product Lines. Second International Conference, SPLC 2. Proceedings (Lecture Notes in Computer Science Vol. 2370), P37
   KUUSELA J, 1999, P 1 WORK IFIP C SOFT
   LISKOV BH, 1994, ACM T PROGR LANG SYS, V16, P1811, DOI 10.1145/197320.197383
   LUCKHAM DC, 1995, IEEE T SOFTWARE ENG, V21, P717, DOI 10.1109/32.464548
   Magee J., 1996, Software Engineering Notes, V21, P3, DOI 10.1145/250707.239104
   Medvidovic N, 2000, IEEE T SOFTWARE ENG, V26, P70, DOI 10.1109/32.825767
   Medvidovic N., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P44, DOI 10.1109/ICSE.1999.840994
   MEDVIDOVIC N, 1998, UCIICS9814 U CAL
   Mens T., 2000, Automated Software Engineering, V7, P39, DOI 10.1023/A:1008765200695
   MIKICRAKIC M, 2002, P 1 INT IFIP ACM WOR
   MUNCH BP, 1993, THESIS NOREWGIAN I T
   Oreizy P, 1998, PROC INT CONF SOFTW, P177, DOI 10.1109/ICSE.1998.671114
   Parisi-Presicce F, 2000, LECT NOTES COMPUT SC, V1783, P304
   Perry D. E., 1989, Proceedings. 11th International Conference on Software Engineering (Cat. No.89CH2718-5), P2, DOI 10.1145/74587.74588
   Perry D. E., 1992, SIGSOFT Software Engineering Notes, V17, P40, DOI 10.1145/141874.141884
   RAKIC M, 2001, P 2001 S SOFTW REUS
   ROCHKIND MJ, 1975, IEEE T SOFTWARE ENG, P4
   ROSHANDEL R, 2004, P 4 WORK IEEE IFIP C
   SEIWALD C, 1996, P 6 INT WORKSH SOFTW, P67
   SHAW M, 1995, IEEE TSE, V21, P4
   SPECK A, 2002, P 6 INT C INT DES PR
   TAYLOR RN, 1996, IEEE T SOFTWARE ENG, V22, P6
   TICHY WF, 1985, SOFTWARE PRACT EXPER, V15, P637, DOI 10.1002/spe.4380150703
   TRYGGESETH E, 1995, P INT WORKSH SOFTW C, P216
   VANDERHOEK A, 1998, CUCS86298 U COL BOUL
   VANDERHOEK A, 2000, THESIS U COLORADO BO
   VANDERHOEK A, 1998, CUCS84998 U COL
   VANDERWESTHUIZE.C, 2002, P 3 IEEE IFIP WORK I
   VANOMMERING R, 2002, P 24 INT C SOFTW ENG
   Walrad C, 2002, COMPUTER, V35, P31, DOI 10.1109/MC.2002.1033025
   WEBER DW, 1997, P 7 INT WORKSH SOFTW, P25
   WESTFECHTEL B, 2001, P INT WORKSH SOFTW C
   WINKLER JFH, 1986, P INT WORKSH ADV PRO, P230
NR 57
TC 33
Z9 37
U1 0
U2 3
PU ASSOC COMPUTING MACHINERY
PI NEW YORK
PA 2 PENN PLAZA, STE 701, NEW YORK, NY 10121-0701 USA
SN 1049-331X
EI 1557-7392
J9 ACM T SOFTW ENG METH
JI ACM Trans. Softw. Eng. Methodol.
PD APR
PY 2004
VL 13
IS 2
BP 240
EP 276
DI 10.1145/1018210.1018213
PG 37
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 853WA
UT WOS:000223858500003
DA 2024-07-18
ER

PT J
AU Do, CM
   Phyo, Y
   Riesco, A
   Ogata, K
AF Canh Minh Do
   Phyo, Yati
   Riesco, Adrian
   Ogata, Kazuhiro
TI Optimization Techniques for Model Checking Leads-to Properties in a
   Stratified Way
SO ACM TRANSACTIONS ON SOFTWARE ENGINEERING AND METHODOLOGY
LA English
DT Article
DE Leads-to properties; master-worker model; Maude; parallel model
   checking; state space explosion
ID LINEAR TEMPORAL LOGIC; ALGORITHM
AB We devised the L + 1-layer divide & conquer approach to leads-to model checking (L + 1-DCA2L2MC) and its parallel version, and developed sequential and parallel tools for L + 1-DCA2L2MC. In a temporal logic called UNITY, designed by Chandy and Misra, the leads-to temporal connective plays an important role and many case studies have been conducted in UNITY, demonstrating that many systems requirements can be expressed as leads-to properties. Hence, it is worth dedicating to these properties. Counterexample generation is one of the main tasks in the L + 1-DCA2L2MC technique that can be optimized to improve its running performance. This article proposes a technique to find all counterexamples at once in model checking with a new model checker. Furthermore, layer configuration selection is essential to make the best use of the L + 1-DCA2L2MC technique. This work also proposes an approach to finding a good layer configuration for the technique with an analysis tool. Some experiments are conducted to demonstrate the power and usefulness of the two optimization techniques, respectively. Moreover, our sequential and parallel tools are compared with SPIN and LTSmin model checkers, showing a promising way to mitigate the state space explosion and improve the running performance of model checking when dealing with large state spaces.
C1 [Canh Minh Do; Phyo, Yati; Ogata, Kazuhiro] Japan Adv Inst Sci & Technol, 1-8 Asahidai, Nomi, Ishikawa 9231211, Japan.
   [Riesco, Adrian] Univ Complutense Madrid, Inst Tecnol Conocimiento, Fac Informat, Madrid, Spain.
C3 Japan Advanced Institute of Science & Technology (JAIST); Complutense
   University of Madrid
RP Do, CM (corresponding author), Japan Adv Inst Sci & Technol, 1-8 Asahidai, Nomi, Ishikawa 9231211, Japan.
EM canhdo@jaist.ac.jp; yatiphyo@jaist.ac.jp; ariesco@ucm.es;
   ogata@jaist.ac.jp
RI ; Riesco, Adrian/I-5959-2016
OI Minh Do, Canh/0000-0002-1601-4584; Riesco, Adrian/0000-0002-9716-4612
FU JSPS KAKENHI [JP19H04082]; MICIN [PID2019-108528RB-C22]; Comunidad de
   Madrid - EIE Funds of the European Union [S2018/TCS-4339]
FX This work was partially supported by JSPS KAKENHI grant JP19H04082, by
   grant PID2019-108528RB-C22 (ProCode-UCM) funded by MICIN, and by grant
   S2018/TCS-4339 (BLOQUES-CM) funded by Comunidad de Madrid co-funded by
   EIE Funds of the European Union.
CR Anderson T. E., 1990, IEEE Transactions on Parallel and Distributed Systems, V1, P6, DOI 10.1109/71.80120
   Autili M, 2015, IEEE T SOFTWARE ENG, V41, P620, DOI 10.1109/TSE.2015.2398877
   Bae K, 2015, SCI COMPUT PROGRAM, V99, P193, DOI 10.1016/j.scico.2014.02.006
   Barnat Jiri, 2013, Computer Aided Verification. 25th International Conference, CAV 2013. Proceedings. LNCS 8044, P863, DOI 10.1007/978-3-642-39799-8_60
   Barnat Jiri, 2018, Handbook of Parallel Constraint Reasoning, P457, DOI [10.1007/978-3-319-63516-3_12, DOI 10.1007/978-3-319-63516-3_12]
   Bengtsson J., 1996, Hybrid Systems III. Verification and Control, P232, DOI 10.1007/BFb0020949
   Biere A., 2002, ELECT NOTES THEOR CO, V66, P160, DOI [DOI 10.1016/S1571-0661(04)80410-9, 10.1016/S1571-0661(04)80410-9]
   Bloemen V, 2016, LECT NOTES COMPUT SC, V10028, P18, DOI 10.1007/978-3-319-49052-6_2
   Camilli CBM, 2016, CONCURR COMP-PRACT E, V28, P3025, DOI 10.1002/cpe.3652
   Canh Minh Do, 2021, 2021 7th International Symposium on System and Software Reliability (ISSSR), P155, DOI 10.1109/ISSSR53171.2021.00011
   Chandy K.M., 1988, PARALLEL PROGRAM DES
   Chen XY, 2018, IEEE INT SYMP PARAL, P23, DOI 10.1109/BDCloud.2018.00018
   CHOUEKA Y, 1974, J COMPUT SYST SCI, V8, P117, DOI 10.1016/S0022-0000(74)80051-6
   Clarke E, 2003, J ACM, V50, P752, DOI 10.1145/876638.876643
   Clarke E. M., 1999, International Journal on Software Tools for Technology Transfer, V2, P279, DOI 10.1007/s100090050035
   CLARKE EM, 1994, ACM T PROGR LANG SYS, V16, P1512, DOI 10.1145/186025.186051
   Clarke EM, 1998, LECT NOTES COMPUT SC, V1427, P147, DOI 10.1007/BFb0028741
   Clarke T.A., 2018, HDB MODEL CHECKING, DOI DOI 10.1007/978-3-319-10575-8
   Clavel M., 2007, ALL MAUDE A HIGH PER, DOI DOI 10.1007/978-3-540-71999-1
   Couvreur JM, 1999, LECT NOTES COMPUT SC, V1708, P253
   Dean J, 2008, COMMUN ACM, V51, P107, DOI 10.1145/1327452.1327492
   DeFrancisco R, 2020, INT J SOFTW TOOLS TE, V22, P583, DOI 10.1007/s10009-020-00576-x
   Dhoked Sahil, 2020, PODC '20. Proceedings of the 39th Symposium on Principles of Distributed Computing, DOI 10.1145/3382734.3405739
   DIJKSTRA EW, 1964, COMMUN ACM, V7, P190, DOI 10.1145/363958.364002
   Dwyer M. B., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P411, DOI 10.1109/ICSE.1999.841031
   Eker Steven., 2004, ELECTRON NOTES THEOR, V71, P162, DOI [DOI 10.1016/S1571-0661(05)82534-4, 10.1016/S1571-0661(05)82534-4]
   Eker Steven, 2002, P 4 INT WORKSH REWR
   Evangelista Sami, 2012, Automated Technology for Verification and Analysis. Proceedings of the 10th International Symposium, ATVA 2012, P269, DOI 10.1007/978-3-642-33386-6_22
   Gabow HN, 2000, INFORM PROCESS LETT, V74, P107, DOI 10.1016/S0020-0190(00)00051-X
   Geldenhuys J, 2004, LECT NOTES COMPUT SC, V2988, P205
   Gerth R., 1996, Protocol Specification, Testing and Verification XV. Proceedings of the Fifteenth IFIP WG6.1 International Symposium on Protocol Specification, Testing and Verification, P3
   GOGUEN J, 1988, LECT NOTES COMPUT SC, V308, P258
   Gokhale Shreyas, 2021, P 26 ACM SIGPLAN S P, P446, DOI [10.1145/3437801.3441608, DOI 10.1145/3437801.3441608]
   Grunske L, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P31, DOI 10.1145/1368088.1368094
   Herlihy Maurice, 2021, The Art of Multiprocessor Programming, V2nd, P147, DOI [10.1016/B978-0-12-415950-1.00017-3, DOI 10.1016/B978-0-12-415950-1.00017-3]
   Holzmann Gerard J., 2012, Model Checking Software. Proceedings 19th International Workshop, SPIN 2012, P155, DOI 10.1007/978-3-642-31759-0_12
   Holzmann Gerard, 1999, DIMACS Series in Discrete Mathematics and Theoretical Computer Science, V32, P23
   Holzmann GJ, 2007, IEEE T SOFTWARE ENG, V33, P659, DOI 10.1109/TSE.2007.70724
   Holzmann GJ, 2011, IEEE T SOFTWARE ENG, V37, P845, DOI 10.1109/TSE.2010.110
   Holzmann GJ, 2004, The SPIN model checker: primer and reference manual, V1003
   Inverso O, 2020, PROCEEDINGS OF THE 25TH ACM SIGPLAN SYMPOSIUM ON PRINCIPLES AND PRACTICE OF PARALLEL PROGRAMMING (PPOPP '20), P202, DOI 10.1145/3332466.3374529
   Inverso O, 2014, LECT NOTES COMPUT SC, V8559, P585, DOI 10.1007/978-3-319-08867-9_39
   Kant Gijs, 2015, Tools and Algorithms for the Construction and Analysis of Systems. 21st International Conference, TACAS 2015, held as part of the European Joint Conferences on Theory and Practice of Software, ETAPS 2015. Proceedings: LNCS 9035, P692, DOI 10.1007/978-3-662-46681-0_61
   Kong WQ, 2016, J INF SECUR APPL, V31, P61, DOI 10.1016/j.jisa.2016.08.001
   Kong WQ, 2015, COMPUT J, V58, P2824, DOI 10.1093/comjnl/bxu127
   Konrad S, 2005, PROC INT CONF SOFTW, P372
   Kyungmin Bae, 2014, Rewriting and Typed Lambda Calculi. Joint International Conference, RTA-TLCA 2014, Held as Part of the Vienna Summer of Logic, VSL 2014. Proceedings: LNCS 8560, P61, DOI 10.1007/978-3-319-08918-8_5
   Kyungmin Bae, 2011, Computer Aided Verification. Proceedings 23rd International Conference, CAV 2011, P132, DOI 10.1007/978-3-642-22110-1_11
   Laarman A, 2011, LECT NOTES COMPUT SC, V6996, P321, DOI 10.1007/978-3-642-24372-1_23
   Lerda F, 1999, LECT NOTES COMPUT SC, V1680, P22
   Malewicz Grzegorz, 2010, P ACM SIGMOD INT C M, P135, DOI [DOI 10.1145/1807167.1807184, 10.1145/1807167.1807184]
   MELLORCRUMMEY JM, 1991, ACM T COMPUT SYST, V9, P21, DOI 10.1145/103727.103729
   Meseguer J, 2008, THEOR COMPUT SCI, V403, P239, DOI 10.1016/j.tcs.2008.04.040
   Meseguer J, 2012, J LOGIC ALGEBR PROGR, V81, P721, DOI 10.1016/j.jlap.2012.06.003
   Pace MF, 2012, PROCEDIA COMPUT SCI, V9, P246, DOI 10.1016/j.procs.2012.04.026
   Pelánek R, 2007, LECT NOTES COMPUT SC, V4595, P263
   Phyo Y, 2021, P INT COMP SOFTW APP, P854, DOI 10.1109/COMPSAC51774.2021.00118
   Phyo Y, 2022, COMPUT J, V65, P1353, DOI 10.1093/comjnl/bxaa183
   Schwoon S, 2005, LECT NOTES COMPUT SC, V3440, P174
   SHARIR M, 1981, COMPUT MATH APPL, V7, P67, DOI 10.1016/0898-1221(81)90008-0
   Tarjan R., 1972, SIAM Journal on Computing, V1, P146, DOI 10.1137/0201010
   Timmer M, 2012, LECT NOTES COMPUT SC, V7454, P364, DOI 10.1007/978-3-642-32940-1_26
   van der Berg F, 2013, ELECTRON NOTES THEOR, V296, P95, DOI 10.1016/j.entcs.2013.07.007
   Vardi MY, 1995, LECT NOTES COMPUTER, P238, DOI DOI 10.1007/3-540-60915-6
   Wang D, 2021, INT J SOFTW ENG KNOW, V31, P1761, DOI 10.1142/S0218194021400210
   Xie M, 2014, J PARALLEL DISTR COM, V74, P3161, DOI 10.1016/j.jpdc.2014.07.009
NR 66
TC 1
Z9 1
U1 0
U2 1
PU ASSOC COMPUTING MACHINERY
PI NEW YORK
PA 1601 Broadway, 10th Floor, NEW YORK, NY USA
SN 1049-331X
EI 1557-7392
J9 ACM T SOFTW ENG METH
JI ACM Trans. Softw. Eng. Methodol.
PD NOV
PY 2023
VL 32
IS 6
AR 151
DI 10.1145/3604610
PG 38
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA U6DY2
UT WOS:001085699500018
OA hybrid
DA 2024-07-18
ER

PT J
AU Zhang, M
   Belhadi, A
   Arcuri, A
AF Zhang, Man
   Belhadi, Asma
   Arcuri, Andrea
TI JavaScript SBST Heuristics to Enable Effective Fuzzing of NodeJS Web
   APIs
SO ACM TRANSACTIONS ON SOFTWARE ENGINEERING AND METHODOLOGY
LA English
DT Article
DE JavaScript instrumentation; NodeJS; white-box test generation; SBST;
   fuzzer; Babel
ID TEST DATA GENERATION; SOFTWARE; SUITE
AB JavaScript is one of the most popular programming languages. However, its dynamic nature poses several challenges to automated testing techniques. In this paper, we propose an approach and open-source tool support to enable white-box testing of JavaScript applications using Search-Based Software Testing (SBST) techniques. We provide an automated approach to collect search-based heuristics like the common Branch Distance and to enable Testability Transformations. To empirically evaluate our results, we integrated our technique into the EVOMASTER test generation tool, and carried out analyses on the automated system testing of RESTful and GraphQL APIs. Experiments on eight Web APIs running on NodeJS show that our technique leads to significantly better results than existing black-box and grey-box testing tools, in terms of code coverage and fault detection.
C1 [Zhang, Man; Belhadi, Asma; Arcuri, Andrea] Kristiania Univ Coll, Kirkegata 24-26, N-0153 Oslo, Norway.
   [Arcuri, Andrea] Oslo Metropolitan Univ, Kirkegata 24-26, N-0153 Oslo, Norway.
C3 Kristiania University College; Oslo Metropolitan University (OsloMet)
RP Zhang, M (corresponding author), Kristiania Univ Coll, Kirkegata 24-26, N-0153 Oslo, Norway.
EM man.zhang@kristiania.no; asma.belhadi@kristiania.no;
   andrea.arcuri@kristiania.no
OI Belhadi, Asma/0000-0002-7103-2179; Arcuri, Andrea/0000-0003-0799-2930;
   Zhang, Man/0000-0003-1204-9322
FU European Research Council (ERC) under the European Union [864972];
   European Research Council (ERC) [864972] Funding Source: European
   Research Council (ERC)
FX This project has received funding from the European Research Council
   (ERC) under the European Union's Horizon 2020 research and innovation
   programme (grant agreement No. 864972).
CR Ali S, 2010, IEEE T SOFTWARE ENG, V36, P742, DOI 10.1109/TSE.2009.52
   Alshraideh M, 2006, SOFTW TEST VERIF REL, V16, P175, DOI 10.1002/stvr.354
   Andreasen E, 2017, ACM COMPUT SURV, V50, DOI 10.1145/3106739
   [Anonymous], C8
   [Anonymous], BABEL
   [Anonymous], 2013, P 2013 9 JOINT M FDN, DOI [10.1145/2491411.2491447, DOI 10.1145/2491411.2491447]
   Arcuri A., 2021, J. Open Source Softw., V6, P2153
   Arcuri A., 2022, arXiv, DOI DOI 10.48550/ARXIV.2205.05325
   Arcuri Andrea, 2022, Zenodo, DOI 10.5281/ZENODO.6106830
   Arcuri Andrea, 2022, Zenodo, DOI 10.5281/ZENODO.6106776
   Arcuri Andrea, 2022, Zenodo, DOI 10.5281/ZENODO.6651631
   Arcuri A, 2022, ACM T SOFTW ENG METH, V31, DOI 10.1145/3477271
   Arcuri A, 2021, IEEE SOFTWARE, V38, P72, DOI 10.1109/MS.2020.3013820
   Arcuri A, 2020, ACM T SOFTW ENG METH, V29, DOI 10.1145/3391533
   Arcuri A, 2019, ACM T SOFTW ENG METH, V28, DOI 10.1145/3293455
   Arcuri A, 2018, INFORM SOFTWARE TECH, V104, P195, DOI 10.1016/j.infsof.2018.05.003
   Arcuri A, 2018, IEEE INT CONF SOFTW, P394, DOI 10.1109/ICST.2018.00046
   Arcuri A, 2014, SOFTW TEST VERIF REL, V24, P219, DOI 10.1002/stvr.1486
   Arcuri Andrea., 2011, ISSTA
   Atlidakis V, 2019, PROC INT CONF SOFTW, P748, DOI 10.1109/ICSE.2019.00083
   Baresel A., 2004, Software Engineering Notes, V29, P108, DOI 10.1145/1013886.1007527
   Baresel A, 2003, LECT NOTES COMPUT SC, V2724, P2442
   Belhadi A., 2022, GENETIC EVOLUTIONARY
   Belhadi A, 2022, Arxiv, DOI [arXiv:2209.05833, 10.48550/ARXIV.2209.05833, DOI 10.48550/ARXIV.2209.05833]
   Binkley DW, 2011, ACM T SOFTW ENG METH, V20, DOI 10.1145/2000791.2000796
   Corradini D, 2021, IEEE INT WORK C SO, P226, DOI 10.1109/SCAM52516.2021.00035
   Corradini D, 2022, SOFTW TEST VERIF REL, V32, DOI 10.1002/stvr.1808
   Corradini Davide, 2021, Replication Package: Automated Black-Box Testing of Nominal and Error Scenarios in RESTful APIs, DOI [10.5281/zenodo.5803118, DOI 10.5281/ZENODO.5803118]
   Cotroneo D, 2019, EMPIR SOFTW ENG, V24, P3630, DOI 10.1007/s10664-019-09725-6
   Cummins C, 2018, ISSTA'18: PROCEEDINGS OF THE 27TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P95, DOI 10.1145/3213846.3213848
   ecma, ECMAScript Specification
   Ed-douibi H, 2018, IEEE INT ENTERP DIST, P181, DOI 10.1109/EDOC.2018.00031
   Eligibility, MEDICAID.GOV
   Elyasov A, 2018, PROC INT SYMP SOFTW, P88, DOI 10.1109/ISSRE.2018.00020
   Fraser G, 2012, PROC INT CONF SOFTW, P178, DOI 10.1109/ICSE.2012.6227195
   Fraser Gordon, 2011, PROC 19 ACM SIGSOFT, P416, DOI 10.1145/2025113.2025179
   Gallagher MJ, 1997, IEEE T SOFTWARE ENG, V23, P473, DOI 10.1109/32.624304
   Gan ST, 2018, P IEEE S SECUR PRIV, P679, DOI 10.1109/SP.2018.00040
   Ganesh V, 2009, PROC INT CONF SOFTW, P474, DOI 10.1109/ICSE.2009.5070546
   github, RESTTESTGEN
   github, disease-sh-api
   github, SpaceX-API
   github, restler-fuzzer
   github, EvoMaster Benchmark (EMB)
   github, E-Commerce Server
   github, cyclotron
   github, JEDI
   github, nestjs-realworld-example-app
   github, RestAssured
   github, React-Finland
   Godefroid P, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P725, DOI 10.1145/3368089.3409719
   Godefroid P, 2020, COMMUN ACM, V63, P70, DOI 10.1145/3363824
   Gong DW, 2012, NEURAL COMPUT APPL, V21, P1871, DOI 10.1007/s00521-011-0568-8
   gothinkster, realworld API Specification
   Gu TX, 2019, PROC INT CONF SOFTW, P269, DOI 10.1109/ICSE.2019.00042
   Harman Mark, 2008, Formal Methods and Testing. An Outcome of the FORTEST Network. Revised Selected Papers, P320, DOI 10.1007/978-3-540-78917-8_11
   Harman M, 2001, INFORM SOFTWARE TECH, V43, P833, DOI 10.1016/S0950-5849(01)00189-6
   Harman M., 2002, GENETIC EVOLUTIONARY, P1351
   Harman M, 2018, LECT NOTES COMPUT SC, V10886, P3, DOI 10.1007/978-3-319-92970-5_1
   Harman M, 2012, ACM COMPUT SURV, V45, DOI 10.1145/2379776.2379787
   ionicframework, Ionic
   jestjs, Jest
   Jia Y, 2011, IEEE T SOFTWARE ENG, V37, P649, DOI 10.1109/TSE.2010.62
   Karlsson Stefan, 2020, IEEE INT C SOFTW TES
   KOREL B, 1990, IEEE T SOFTWARE ENG, V16, P870, DOI 10.1109/32.57624
   Lakhotia K, 2013, INFORM SOFTWARE TECH, V55, P112, DOI 10.1016/j.infsof.2012.03.009
   Li YC, 2011, LECT NOTES COMPUT SC, V6956, P237, DOI 10.1007/978-3-642-23716-4_21
   Lidbury C, 2015, ACM SIGPLAN NOTICES, V50, P65, DOI [10.1145/2737924.2737986, 10.1145/2813885.2737986]
   Mahmood R, 2022, IEEE INT CONF SOFTW, P377, DOI 10.1109/ICST53961.2022.00018
   Manès VJM, 2021, IEEE T SOFTWARE ENG, V47, P2312, DOI 10.1109/TSE.2019.2946563
   Mao K., 2016, P 25 INT S SOFTW TES, P94
   Marculescu B, 2022, ACM T SOFTW ENG METH, V31, DOI 10.1145/3491038
   Martin-Lopez A, 2020, LECT NOTES COMPUT SC, V12571, P459, DOI 10.1007/978-3-030-65310-1_33
   McMinn P, 2004, SOFTW TEST VERIF REL, V14, P105, DOI 10.1002/stvr.294
   McMinn P, 2009, ACM T SOFTW ENG METH, V18, DOI 10.1145/1525880.1525884
   MILLER BP, 1990, COMMUN ACM, V33, P32, DOI 10.1145/96267.96279
   mongodb, Mongodb
   nodejs, About Node.js
   octoverse, The State of the OCTOVERSE
   redis, Redis
   Santos JF, 2018, PPDP'18: PROCEEDINGS OF THE 20TH INTERNATIONAL SYMPOSIUM ON PRINCIPLES AND PRACTICE OF DECLARATIVE PROGRAMMING, DOI 10.1145/3236950.3236956
   Selakovic M, 2018, P ACM PROGRAM LANG, V2, DOI 10.1145/3276531
   Song W, 2017, IEEE INT CONF AUTOM, P27, DOI 10.1109/ASE.2017.8115615
   sourceforge, JUnit
   Viglianisi E, 2020, IEEE INT CONF SOFTW, P142, DOI 10.1109/ICST46399.2020.00024
   visionmedia, SuperAgent
   Wappler S, 2009, J SYST SOFTWARE, V82, P1767, DOI 10.1016/j.jss.2009.06.037
   Wegener J, 2001, INFORM SOFTWARE TECH, V43, P841, DOI 10.1016/S0950-5849(01)00190-2
   Yun Lin, 2020, ISSTA '20: Proceedings of the 29th ACM SIGSOFT International Symposium on Software Testing and Analysis, P440, DOI 10.1145/3395363.3397358
   Zeller A., 2019, The fuzzing book
   Zhang M, 2023, ACM T SOFTW ENG METH, V32, DOI 10.1145/3585009
   Zhang M, 2022, ACM T SOFTW ENG METH, V31, DOI 10.1145/3464940
   Zhang M, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-020-09937-1
   Zhang M, 2019, PROCEEDINGS OF THE 2019 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE (GECCO'19), P1426, DOI 10.1145/3321707.3321815
   Zhang Man, 2022, IEEE INT C SOFTW TES
   Zhu XG, 2022, ACM COMPUT SURV, V54, DOI 10.1145/3512345
NR 96
TC 0
Z9 0
U1 4
U2 7
PU ASSOC COMPUTING MACHINERY
PI NEW YORK
PA 1601 Broadway, 10th Floor, NEW YORK, NY USA
SN 1049-331X
EI 1557-7392
J9 ACM T SOFTW ENG METH
JI ACM Trans. Softw. Eng. Methodol.
PD NOV
PY 2023
VL 32
IS 6
AR 139
DI 10.1145/3593801
PG 29
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA U6DY2
UT WOS:001085699500006
OA hybrid, Green Published
DA 2024-07-18
ER

PT J
AU Cruz-Carlon, J
   Varshosaz, M
   Le Goues, C
   Wasowski, A
AF Cruz-Carlon, Juan
   Varshosaz, Mahsa
   Le Goues, Claire
   Wasowski, Andrzej
TI Patching Locking Bugs Statically with Crayons
SO ACM TRANSACTIONS ON SOFTWARE ENGINEERING AND METHODOLOGY
LA English
DT Article
DE Automated repair; static program repair; api misuse
ID DEADLOCKS; REPAIR
AB The Linux Kernel is a world-class operating system controlling most of our computing infrastructure: mobile devices, Internet routers and services, and most of the supercomputers. Linux is also an example of low-level software with no comprehensive regression test suite (for good reasons). The kernel's tremendous societal importance imposes strict stability and correctness requirements. Th
   Over the past decade, a significant progress has been made in dynamic APR. However, dynamic APR techniques do not translate naturally to systems without tests. We present a static APR technique addressing sequential locking API misuse bugs in the Linux Kernel. We attack the key challenge of static APR, namely, the lack of detailed program specification, by combining static analysis with machine learning to complement the information presented by the static analyzer. In experiments on historical real-world bugs in the kernel, we were able to automatically reproduce or propose equivalent patches in 85% of the human-made patches, and automatically rank them among the top three candidates for 64% of the cases and among the top five for 74%.
C1 [Cruz-Carlon, Juan; Varshosaz, Mahsa; Wasowski, Andrzej] IT Univ Copenhagen, Copenhagen, Denmark.
   [Le Goues, Claire] Carnegie Mellon Univ, Sch Comp Sci, Pittsburgh, PA USA.
C3 IT University Copenhagen; Carnegie Mellon University
RP Cruz-Carlon, J (corresponding author), IT Univ Copenhagen, Copenhagen, Denmark.
EM alcr@itu.dk; mahv@itu.dk; wasowski@itu.dk
OI Wasowski, Andrzej/0000-0003-0532-2685; Varshosaz,
   Mahsa/0000-0002-4776-883X; Le Goues, Claire/0000-0002-3931-060X
FU Independent Research Fund Denmark [8022-00326B]; National Science
   Foundation [CCF-1750116]
FX This work is supported by Independent Research Fund Denmark under Grant
   Agreement 8022-00326B and by National Science Foundation, Grant No.
   CCF-1750116.
CR Abal I, 2017, LECT NOTES COMPUT SC, V10145, P34, DOI 10.1007/978-3-319-52234-0_3
   Aftandilian E., 2012, 2012 12th IEEE Working Conference on Source Code Analysis and Manipulation (SCAM 2012), P14, DOI 10.1109/SCAM.2012.28
   Afzal A, 2021, IEEE T SOFTWARE ENG, V47, P2162, DOI 10.1109/TSE.2019.2944914
   Assiri FY, 2014, 2014 IEEE SEVENTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST), P273, DOI 10.1109/ICST.2014.40
   Bader J, 2019, P ACM PROGRAM LANG, V3, DOI 10.1145/3360585
   Bai JJ, 2019, PROCEEDINGS OF THE 2019 USENIX ANNUAL TECHNICAL CONFERENCE, P255
   Barr ET, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P306, DOI 10.1145/2635868.2635898
   Bavishi R, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P613, DOI 10.1145/3338906.3338952
   Cai Y, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P303, DOI 10.1145/3106237.3106239
   Cai Y, 2016, PROC INT CONF SOFTW, P1109, DOI 10.1145/2884781.2884819
   Calcagno C, 2015, LECT NOTES COMPUT SC, V9058, P3, DOI 10.1007/978-3-319-17524-9_1
   Chew L, 2010, EUROSYS'10: PROCEEDINGS OF THE EUROSYS 2010 CONFERENCE, P307
   Christakis M, 2016, IEEE INT CONF AUTOM, P332, DOI 10.1145/2970276.2970347
   Gopinath D, 2011, LECT NOTES COMPUT SC, V6605, P173, DOI 10.1007/978-3-642-19835-9_15
   Griesmayer A, 2006, LECT NOTES COMPUT SC, V4144, P358, DOI 10.1007/11817963_33
   Gupta R, 2017, AAAI CONF ARTIF INTE, P1345
   HANLEY JA, 1982, RADIOLOGY, V143, P29, DOI 10.1148/radiology.143.1.7063747
   Haraldsson SO, 2017, PROCEEDINGS OF THE 2017 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE COMPANION (GECCO'17 COMPANION), P1513, DOI 10.1145/3067695.3082517
   Hovemeyer D, 2004, ACM SIGPLAN NOTICES, V39, P92, DOI 10.1145/1052883.1052895
   Jin GL, 2011, PLDI 11: PROCEEDINGS OF THE 2011 ACM CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P389
   Jobstmann B, 2005, LECT NOTES COMPUT SC, V3576, P226
   Johnson B, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P672, DOI 10.1109/ICSE.2013.6606613
   Khoshnood Sepideh, 2015, P 2015 INT S SOFTW E, P165
   Kneuss E, 2015, LECT NOTES COMPUT SC, V9207, P217, DOI 10.1007/978-3-319-21668-3_13
   Kou R, 2016, INT WORKSH EMPIR ENG, P45, DOI 10.1109/IWESEP.2016.15
   Koyuncu A, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P314, DOI 10.1145/3338906.3338935
   Kui Liu, 2019, 2019 IEEE 26th International Conference on Software Analysis, Evolution and Reengineering (SANER). Proceedings, P1, DOI 10.1109/SANER.2019.8667970
   Le Goues C, 2019, COMMUN ACM, V62, P56, DOI 10.1145/3318162
   Le Goues C, 2012, IEEE T SOFTWARE ENG, V38, P54, DOI 10.1109/TSE.2011.104
   Le XBD, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P593, DOI 10.1145/3106237.3106309
   Lin HR, 2018, IEEE INT CONF AUTOM, P589, DOI 10.1145/3238147.3238198
   Lin Yiyan., 2014, International Symposium on Software Testing and Analysis, ISSTA '14, San Jose, CA, USA - July 21 - 26, 2014, P237
   Liu HP, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P715, DOI 10.1145/2950290.2950309
   Liu P, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P318, DOI 10.1145/2635868.2635881
   Liu P, 2012, PROC INT CONF SOFTW, P299, DOI 10.1109/ICSE.2012.6227184
   Logozzo F, 2012, ACM SIGPLAN NOTICES, V47, P133, DOI 10.1145/2398857.2384626
   Long F, 2016, ACM SIGPLAN NOTICES, V51, P298, DOI 10.1145/2914770.2837617
   Marcilio D, 2020, J SYST SOFTWARE, V168, DOI 10.1016/j.jss.2020.110671
   Marginean A, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE (ICSE-SEIP 2019), P269, DOI 10.1109/ICSE-SEIP.2019.00039
   Mechtaev S, 2016, PROC INT CONF SOFTW, P691, DOI 10.1145/2884781.2884807
   Nir-Buchbinder Y, 2008, LECT NOTES COMPUT SC, V5289, P104
   Pratikakis P, 2011, ACM T PROGR LANG SYS, V33, DOI 10.1145/1889997.1890000
   Qi YH, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P254, DOI 10.1145/2568225.2568254
   Rolim Reudismam, 2018, ARXIV
   Samanta R, 2014, LECT NOTES COMPUT SC, V8723, P268, DOI 10.1007/978-3-319-10936-7_17
   Smith EK, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P532, DOI 10.1145/2786805.2786825
   van Tonder R, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P151, DOI 10.1145/3180155.3180250
   Wang Yin, 2008, 8 USENIX S OP SYST D, P281
   Wen M, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1, DOI 10.1145/3180155.3180233
   Wilkerson JL, 2012, PROCEEDINGS OF THE FOURTEENTH INTERNATIONAL CONFERENCE ON GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P1229, DOI 10.1145/2330163.2330333
   Xuan JF, 2017, IEEE T SOFTWARE ENG, V43, P34, DOI 10.1109/TSE.2016.2560811
   Zhong H, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P913, DOI 10.1109/ICSE.2015.101
   Zhou JP, 2017, IEEE INT CONF AUTOM, P729, DOI 10.1109/ASE.2017.8115684
NR 53
TC 0
Z9 0
U1 0
U2 0
PU ASSOC COMPUTING MACHINERY
PI NEW YORK
PA 1601 Broadway, 10th Floor, NEW YORK, NY USA
SN 1049-331X
EI 1557-7392
J9 ACM T SOFTW ENG METH
JI ACM Trans. Softw. Eng. Methodol.
PD JUL
PY 2023
VL 32
IS 3
AR 56
DI 10.1145/3548684
PG 28
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA I4NV8
UT WOS:001002573400001
OA hybrid, Green Published
DA 2024-07-18
ER

PT J
AU Sarker, J
   Turzo, AK
   Dong, M
   Bosu, A
AF Sarker, Jaydeb
   Turzo, Asif Kamal
   Dong, Ming
   Bosu, Amiangshu
TI Automated Identification of Toxic Code Reviews Using ToxiCR
SO ACM TRANSACTIONS ON SOFTWARE ENGINEERING AND METHODOLOGY
LA English
DT Article
DE Toxicity; code review; sentiment analysis; Natural Language Processing;
   tool development
ID SENTIMENT ANALYSIS
AB Toxic conversations during software development interactions may have serious repercussions on a Free and Open Source Software (FOSS) development project. For example, victims of toxic conversations may become afraid to express themselves, therefore get demotivated, and may eventually leave the project. Automated filtering of toxic conversations may help a FOSS community maintain healthy interactions among its members. However, off-the-shelf toxicity detectors perform poorly on a software engineering dataset, such as one curated from code review comments. To counter this challenge, we present ToxiCR, a supervised learning based toxicity identification tool for code review interactions. ToxiCR includes a choice to select one of the 10 supervised learning algorithms, an option to select text vectorization techniques, eight preprocessing steps, and a large-scale labeled dataset of 19,651 code review comments. Two out of those eight preprocessing steps are software engineering domain specific. With our rigorous evaluation of the models with various combinations of preprocessing steps and vectorization techniques, we have identified the best combination for our dataset that boosts 95.8% accuracy and an 88.9% F1-score in identifying toxic texts. ToxiCR significantly outperforms existing toxicity detectors on our dataset. We have released our dataset, pre-trainedmodels, evaluation results, and source code publicly, which is available at https://github.com/WSU- SEAL/ToxiCR.
C1 [Sarker, Jaydeb; Turzo, Asif Kamal; Dong, Ming; Bosu, Amiangshu] Wayne State Univ, Detroit, MI USA.
C3 Wayne State University
RP Sarker, J (corresponding author), Wayne State Univ, Detroit, MI USA.
EM jaydebsarker@wayne.edu; asifkamal@wayne.edu; mdong@wayne.edu;
   amiangshu.bosu@wayne.edu
RI Turzo, Asif Kamal/HMP-3568-2023
OI Turzo, Asif Kamal/0000-0002-0869-4962; Bosu,
   Amiangshu/0000-0002-3178-6232
CR Abadi M, 2016, PROCEEDINGS OF OSDI'16: 12TH USENIX SYMPOSIUM ON OPERATING SYSTEMS DESIGN AND IMPLEMENTATION, P265
   Adhikari A, 2019, Arxiv, DOI arXiv:1904.08398
   Adinolf S, 2018, PROCEEDINGS OF THE 2018 ANNUAL SYMPOSIUM ON COMPUTER-HUMAN INTERACTION IN PLAY COMPANION EXTENDED ABSTRACTS (CHI PLAY 2018), P365, DOI 10.1145/3270316.3271545
   Ahmed T, 2017, IEEE INT CONF AUTOM, P106, DOI 10.1109/ASE.2017.8115623
   Alshemali B, 2020, KNOWL-BASED SYST, V191, DOI 10.1016/j.knosys.2019.105210
   Anderson AA, 2018, INT J PUBLIC OPIN R, V30, P156, DOI 10.1093/ijpor/edw022
   Android Open Source Project, COD COND
   [Anonymous], 2018, P 2 WORKSHOP ABUSIVE, DOI DOI 10.18653/V1/W18-5103
   [Anonymous], 2014, Leaving Toxic Open Source Communities.
   Barnes Hayden, 2020, TOXICITY OPEN SOURCE
   Berkson J, 1944, J AM STAT ASSOC, V39, P357, DOI 10.2307/2280041
   Bhat MM, 2021, FINDINGS OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, EMNLP 2021, P2017
   Bojanowski P., 2017, Transactions of the Association for Computational Linguistics, V5, P135, DOI DOI 10.1162/TACLA00051
   Bosu Amiangshu, 2013, 2013 ACM / IEEE International Symposium on Empirical Software Engineering and Measurement (ESEM), P133, DOI 10.1109/ESEM.2013.23
   Bosu A, 2019, EMPIR SOFTW ENG, V24, P2636, DOI 10.1007/s10664-019-09708-7
   Bosu Amiangshu, 2022, TOXICR REPLICATION R
   Breiman L, 1996, MACH LEARN, V24, P123, DOI 10.1007/bf00058655
   Brown T., 2020, P ADV NEUR INF PROC, V33, P1877
   Calefato F, 2017, INT CONF AFFECT, P79, DOI 10.1109/ACIIW.2017.8272591
   Carillo Kevin Daniel Andre, 2016, P SIGOPEN 2016 DEVEL
   Chen H., 2019, Proceedings of the International AAAI Conference on Web and Social Media, V13, P125
   Cornegruta Savelie., 2016, P 7 INT WORKSHOP HLT, P17, DOI [DOI 10.18653/V1/W16-6103, 10.18653/v1/W16-6103]
   CORTES C, 1995, MACH LEARN, V20, P273, DOI 10.1007/BF00994018
   Danescu-Niculescu-Mizil C., 2013, Long Papers, V1, P250
   Devlin J, 2019, 2019 CONFERENCE OF THE NORTH AMERICAN CHAPTER OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS: HUMAN LANGUAGE TECHNOLOGIES (NAACL HLT 2019), VOL. 1, P4171
   Egelman CD, 2020, PROC INT CONF SOFTW, P174, DOI 10.1145/3377811.3380414
   Elnaggar A, 2018, PROCEEDINGS OF 2018 ARTIFICIAL INTELLIGENCE AND CLOUD COMPUTING CONFERENCE (AICCC 2018), P41, DOI 10.1145/3299819.3299845
   Elsayed N, 2019, INT J ADV COMPUT SC, V10, P654
   Faci Samir, 2020, The Toxicity Of Open Source
   Ferreira Isabella, 2021, P ACM HUMAN COMPUTER, V5, P1, DOI DOI 10.1145/3479497
   Filippova A, 2016, ACM CONFERENCE ON COMPUTER-SUPPORTED COOPERATIVE WORK AND SOCIAL COMPUTING (CSCW 2016), P705, DOI 10.1145/2818048.2820018
   Friedman JH, 2001, ANN STAT, V29, P1189, DOI 10.1214/aos/1013203451
   Georgakopoulos SV, 2018, 10TH HELLENIC CONFERENCE ON ARTIFICIAL INTELLIGENCE (SETN 2018), DOI 10.1145/3200947.3208069
   GitHub, 2018, ANN INSTR TOX SUBATT
   Graves A, 2005, NEURAL NETWORKS, V18, P602, DOI 10.1016/j.neunet.2005.06.042
   Gunawardena Sanuri Dananja, 2022, P ACM HUMANCOMPUTER, V6
   Hanu Laura, 2020, DETOXIFY
   Hochreiter S, 1997, NEURAL COMPUT, V9, P1735, DOI [10.1162/neco.1997.9.1.1, 10.1007/978-3-642-24797-2]
   Hosseini H, 2017, Arxiv, DOI arXiv:1702.08138
   Huang ZH, 2015, Arxiv, DOI arXiv:1508.01991
   Imtiaz N, 2019, PROC INT CONF SOFTW, P700, DOI 10.1109/ICSE.2019.00079
   Islam MZ, 2019, PROCEEDINGS OF THE 28TH ACM INTERNATIONAL CONFERENCE ON INFORMATION & KNOWLEDGE MANAGEMENT (CIKM '19), P1061, DOI 10.1145/3357384.3357891
   Jensen Carlos, 2011, P 2011 44 HAWAII INT, P1
   Johnson R, 2017, PROCEEDINGS OF THE 55TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (ACL 2017), VOL 1, P562, DOI 10.18653/v1/P17-1052
   Jongeling R, 2017, EMPIR SOFTW ENG, V22, P2543, DOI 10.1007/s10664-016-9493-x
   Kaggle.com, 2018, Toxic Comment Classification Challenge
   Kingma Diederik P., 2015, P 3 INT C LEARN
   Kowsari K, 2017, 2017 16TH IEEE INTERNATIONAL CONFERENCE ON MACHINE LEARNING AND APPLICATIONS (ICMLA), P364, DOI 10.1109/ICMLA.2017.0-134
   Kumar D, 2021, PROCEEDINGS OF THE SEVENTEENTH SYMPOSIUM ON USABLE PRIVACY AND SECURITY (SOUPS 2021), P299
   Kurita K, 2019, Arxiv, DOI arXiv:1912.06872
   Kurtanovic Z, 2018, REQUIR ENG, V23, P357, DOI 10.1007/s00766-018-0293-2
   LibreOffice, DOC FDN COD COND
   Lin B, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P94, DOI 10.1145/3180155.3180195
   Loshchilov I., 2019, DECOUPLED WEIGHT DEC
   Mikolov Tomas, 2013, Advances in Neural Information Processing Systems, P3111, DOI DOI 10.48550/ARXIV.1310.4546
   Miller Courtney, 2022, 44 INT C SOFTW ENG I
   Mishra Pushkar, 2018, P 2018 C EMPIRICAL M, P1
   Mukadam M, 2013, IEEE WORK CONF MIN S, P45, DOI 10.1109/MSR.2013.6624002
   Nafus Dawn, 2006, FLOSSPOLS Deliverable D 16-Gender: Integrated Report of Findings
   Nobata C, 2016, PROCEEDINGS OF THE 25TH INTERNATIONAL CONFERENCE ON WORLD WIDE WEB (WWW'16), P145, DOI 10.1145/2872427.2883062
   Novielli N, 2018, IEEE WORK CONF MIN S, P364, DOI 10.1145/3196398.3196403
   OpenStack, OPENSTACK COD COND
   Paul R, 2019, 2019 IEEE 26TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER), P26, DOI [10.1109/saner.2019.8667987, 10.1109/SANER.2019.8667987]
   Pedregosa F, 2011, J MACH LEARN RES, V12, P2825
   Pennington J., 2014, P 2014 C EMP METH NA, P1532
   Perspective, US MACH LEARN RED TO
   Pew Research Center, 2017, Online Harassment 2017'
   Qiu HLS, 2022, 2022 ACM/IEEE 44TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN SOCIETY (ICSE-SEIS 2022), P41, DOI [10.1109/ICSE-SEIS55304.2022.9793879, 10.1145/3510458.3513019]
   Quinlan J. R., 1986, Machine Learning, V1, P81, DOI 10.1007/BF00116251
   Qureshi I, 2011, ORGAN RES METHODS, V14, P208, DOI 10.1177/1094428110375002
   Raman N, 2020, 2020 IEEE/ACM 42ND INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: NEW IDEAS AND EMERGING RESULTS (ICSE-NIER 2020), P57, DOI 10.1145/3377816.3381732
   RUMELHART DE, 1986, NATURE, V323, P533, DOI 10.1038/323533a0
   Sap M, 2019, 57TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (ACL 2019), P1668
   Sarker J, 2020, ASIA PAC SOFWR ENG, P218, DOI 10.1109/APSEC51365.2020.00030
   Sarker Jaydeb, 2022, WSU SEAL implementation of the STRUDEL Toxicity detector
   Schapire RE, 2003, LECT NOTES STAT, V171, P149, DOI 10.1007/978-0-387-21579-2_9
   Squire M, 2015, P ANN HICSS, P5290, DOI 10.1109/HICSS.2015.623
   Srivastava S., 2018, P 1 WORKSHOP TROLLIN, P98
   Srndal C. E., 1992, Model Assisted Survey Sampling
   Steinmacher I, 2014, IFIP ADV INF COMM TE, V427, P199
   Terdchanakul P, 2017, PROC IEEE INT CONF S, P534, DOI 10.1109/ICSME.2017.14
   Tin Kam Ho, 1995, Proceedings of the Third International Conference on Document Analysis and Recognition, P278, DOI 10.1109/ICDAR.1995.598994
   Vaidya A, 2020, P 14 INT AAAI C WEB, V14, P683
   van Aken Betty, 2018, P 2 WORKSHOP ABUSIVE, P33, DOI [10.18653/v1/W18-5105, DOI 10.18653/V1/W18-5105]
   van Wendel de Joode R., 2004, Electronic Markets, V14, P104, DOI 10.1080/10196780410001675059
   Vaswani A, 2017, ADV NEUR IN, V30
   Wang Susan, 2020, P 14 WORKSHOP SEMANT, P1587
   Xia M., 2020, P 8 INT WORKSH NAT L, P7, DOI [10.18653/v1/2020.socialnlp-1.2, DOI 10.18653/V1/2020.SOCIALNLP-1.2]
   Yang ZL, 2019, ADV NEUR IN, V32
   Zaheri S., 2020, SMU DATA SCI REV, V3, P13
   Zampieri Marcos, 2020, Proceedings of SemEval
   Zhang J, 2018, PROCEEDINGS OF THE 56TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (ACL), VOL 1, P1350
   Zhang X, 2015, ADV NEUR IN, V28
   Zhu YK, 2015, IEEE I CONF COMP VIS, P19, DOI 10.1109/ICCV.2015.11
NR 94
TC 5
Z9 5
U1 1
U2 2
PU ASSOC COMPUTING MACHINERY
PI NEW YORK
PA 1601 Broadway, 10th Floor, NEW YORK, NY USA
SN 1049-331X
EI 1557-7392
J9 ACM T SOFTW ENG METH
JI ACM Trans. Softw. Eng. Methodol.
PD JUL
PY 2023
VL 32
IS 5
AR 118
DI 10.1145/3583562
PG 32
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA P9SM2
UT WOS:001054005300011
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Sattler, F
   Böhm, S
   Schubert, PD
   Siegmund, N
   Apel, S
AF Sattler, Florian
   Bohm, Sebastian
   Schubert, Philipp Dominik
   Siegmund, Norbert
   Apel, Sven
TI SEAL: Integrating Program Analysis and Repository Mining
SO ACM TRANSACTIONS ON SOFTWARE ENGINEERING AND METHODOLOGY
LA English
DT Article
DE Static program analysis; software repository mining; socio-technical
   software analytics
ID SOCIOTECHNICAL CONGRUENCE; STATIC ANALYSIS; SOFTWARE; COORDINATION;
   IMPACT
AB Software projects are complex technical and organizational systems involving large numbers of artifacts and developers. To understand and tame software complexity, a wide variety of program analysis techniques have been developed for bug detection, program comprehension, verification, and more. At the same time, repository mining techniques aim at obtaining insights into the inner socio-technical workings of software projects at a larger scale. While both program analysis and repository mining have been successful on their own, they are largely isolated, which leaves considerable potential for synergies untapped. We present SEAL, the first integrated approach that combines low-level program analysis with high-level repository information. SEAL maps repository information, mined from the development history of a project, onto a low-level intermediate program representation, making it available for state-of-the-art program analysis. SEAL's integrated approach allows us to efficiently address software engineering problems that span multiple levels of abstraction, from low-level data flow to high-level organizational information. To demonstrate its merits and practicality, we use SEAL to determine which code changes modify central parts of a given software project, how authors interact (indirectly) with each other through code, and we demonstrate that putting static analysis' results into a socio-technical context improves their expressiveness and interpretability.
C1 [Sattler, Florian; Bohm, Sebastian; Apel, Sven] Saarland Univ, Campus E11, D-66123 Saarbrucken, Germany.
   [Schubert, Philipp Dominik] Paderborn Univ, Warburger Str 100, D-33098 Paderborn, Germany.
   [Siegmund, Norbert] Univ Leipzig, Augustuspl 10, D-04109 Leipzig, Germany.
C3 University of Paderborn; Leipzig University
RP Sattler, F (corresponding author), Saarland Univ, Campus E11, D-66123 Saarbrucken, Germany.
EM sattlerf@cs.uni-saarland.de; boehmseb@cs.uni-saarland.de;
   philipp.schubert@upb.de; norbert.siegmund@uni-leipzig.de;
   apel@cs.uni-saarland.de
OI Sattler, Florian/0000-0003-2523-1158
FU Heinz Nixdorf Foundation; German Research Foundation (DFG) [160364472,
   TRR 248, 389792660, AP 206/11-1, AP 206/11-2, SI 2171/2-1, SI 2171/2-2,
   SI 2171/3-1, AP 206/14-1]
FX This work was partially supported by the Heinz Nixdorf Foundation and
   the German Research Foundation (DFG) within the Collaborative Research
   Center 901 "On-The-Fly Computing" (grant no. 160364472) and
   Collaborative Research Center TRR 248 "Perspicuous Computing" (grant no.
   389792660), project "Pervolution" (grant no. AP 206/11-1, AP 206/11-2,
   SI 2171/2-1, and SI 2171/2-2), project "Green Configuration" (grant no.
   SI 2171/3-1), and project "Congruence" (grant no. AP 206/14-1).
CR Andersen L. O., 1994, Ph.D. thesis
   [Anonymous], 2008, P ISSTA WORKSHOP DEF
   Bessey A, 2010, COMMUN ACM, V53, P66, DOI 10.1145/1646353.1646374
   Bohner S. A., 1996, SOFTWARE CHANGE IMPA
   Cataldo M, 2013, IEEE T SOFTWARE ENG, V39, P343, DOI 10.1109/TSE.2012.32
   Cataldo M, 2008, ESEM'08: PROCEEDINGS OF THE 2008 ACM-IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, P2
   Collard ML, 2016, PROC IEEE INT CONF S, P649, DOI 10.1109/ICSME.2016.36
   Crowston K., 2005, First Monday, V10, DOI 10.5210/fm.v10i2.1207
   Crowston K., 2006, P HAWAII INT C SYSTE
   D'Ambros M., 2011, 2011 IEEE 27th International Conference on Software Maintenance, DOI 10.1109/ICSM.2011.6080839
   D'Ambros Marco, 2010, Proceedings of the 2010 7th IEEE Working Conference on Mining Software Repositories (MSR 2010), P31, DOI 10.1109/MSR.2010.5463279
   Dyer R, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P422, DOI 10.1109/ICSE.2013.6606588
   Emanuelsson P, 2008, ELECTRON NOTES THEOR, V217, P5, DOI 10.1016/j.entcs.2008.06.039
   Fenton Norman E., 1996, Software Metrics A Practical and Rigorous Approach, V2nd
   Ferreira Gabriel, 2016, P INT SOFTWARE PRODU, P65
   German DM, 2009, INFORM SOFTWARE TECH, V51, P1394, DOI 10.1016/j.infsof.2009.04.018
   Germans DM, 2019, EMPIR SOFTW ENG, V24, P2725, DOI 10.1007/s10664-019-09704-x
   Gote C, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-020-09928-2
   Hanam Q, 2019, PROC IEEE INT CONF S, P202, DOI 10.1109/ICSME.2019.00031
   Harman M, 2018, IEEE INT WORK C SO, P1, DOI 10.1109/SCAM.2018.00009
   Hattori Lile., 2008, Brazilian Symposium on Databases, P210
   He JC, 2020, 2020 IEEE 20TH INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY, AND SECURITY (QRS 2020), P418, DOI 10.1109/QRS51102.2020.00061
   Hunsen C, 2020, EMPIR SOFTW ENG, V25, P4379, DOI 10.1007/s10664-020-09833-8
   Jermakovics A, 2011, PROCEEDINGS OF THE 4TH INTERNATIONAL WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING (CHASE'11), P24
   Joblin M, 2017, PROC INT CONF SOFTW, P164, DOI 10.1109/ICSE.2017.23
   Joblin M, 2017, EMPIR SOFTW ENG, V22, P2050, DOI 10.1007/s10664-016-9478-9
   Joblin M, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P563, DOI 10.1109/ICSE.2015.73
   Joblin Mitchell, 2022, ACM T SOFTW ENG METH, V2022
   Kagdi H., 2010, Proceedings 17th Working Conference on Reverse Engineering (WCRE 2010), P119, DOI 10.1109/WCRE.2010.21
   Kagdi H, 2007, J SOFTW MAINT EVOL-R, V19, P77, DOI 10.1002/smr.344
   Kagdi Huzefa., 2007, ICSE Workshops MSR'07. Fourth International Workshop on Mining Software Repositories, P17
   Khatri Y, 2022, INNOV SYST SOFTW ENG, V18, P263, DOI 10.1007/s11334-020-00380-5
   Khosravi H, 2009, LECT NOTES COMPUT SC, V5549, P219, DOI 10.1007/978-3-642-01818-3_28
   Kwan I, 2011, IEEE T SOFTWARE ENG, V37, P307, DOI 10.1109/TSE.2011.29
   Lattner C, 2004, INT SYM CODE GENER, P75, DOI 10.1109/CGO.2004.1281665
   LEHNERT S., 2011, REV SOFTWARE CHANGE
   Lessenich O, 2015, AUTOMAT SOFTW ENG, V22, P367, DOI 10.1007/s10515-014-0151-5
   Li BX, 2013, SOFTW TEST VERIF REL, V23, P613, DOI 10.1002/stvr.1475
   Livshits B, 2015, COMMUN ACM, V58, P44, DOI 10.1145/2644805
   Mauerer W, 2022, IEEE T SOFTWARE ENG, V48, P3159, DOI 10.1109/TSE.2021.3082074
   Meneely A, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P281, DOI 10.1145/1985793.1985832
   Menzies T, 2013, IEEE SOFTWARE, V30, P31, DOI 10.1109/MS.2013.86
   Nachtigall M, 2022, PROCEEDINGS OF THE 31ST ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, ISSTA 2022, P532, DOI 10.1145/3533767.3534374
   Nachtigall M, 2019, 2019 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING WORKSHOPS (ASEW 2019), P29, DOI 10.1109/ASEW.2019.00023
   Newman CD, 2016, 2016 IEEE/ACM 38TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING COMPANION (ICSE-C), P621, DOI 10.1145/2889160.2889173
   Newman CD, 2016, PROC IEEE INT CONF S, P604, DOI 10.1109/ICSME.2016.38
   Nielson F., 1999, Principles of Program Analysis
   Nunez-Varela AS, 2017, J SYST SOFTWARE, V128, P164, DOI 10.1016/j.jss.2017.03.044
   OpenSSLRandomNumberGeneratorBug, 2008, PRED RAND NUMB GEN D
   Sagiv M, 1996, THEOR COMPUT SCI, V167, P131, DOI 10.1016/0304-3975(96)00072-2
   Schubert P.D., 2021, 35 EUR C OBJ OR PROG, P1, DOI [10.4230/LIPIcs.ECOOP.2021.2, DOI 10.4230/LIPICS.ECOOP.2021.2]
   Schubert PD, 2019, LECT NOTES COMPUT SC, V11428, P393, DOI 10.1007/978-3-030-17465-1_22
   Smaragdakis Y, 2011, POPL 11: PROCEEDINGS OF THE 38TH ANNUAL ACM SIGPLAN-SIGACT SYMPOSIUM ON PRINCIPLES OF PROGRAMMING LANGUAGES, P17, DOI 10.1145/1926385.1926390
   Storey MA, 2020, EMPIR SOFTW ENG, V25, P4097, DOI 10.1007/s10664-020-09858-z
   Thüm T, 2014, ACM COMPUT SURV, V47, DOI 10.1145/2580950
   Toman John, 2017, Schloss Dagstuhl-Leibniz-Zentrum fur Informatik, V18, P1
   Tornhill A., 2018, Software Design X-Rays
   Viggiato M, 2019, PROC IEEE INT CONF S, P218, DOI 10.1109/ICSME.2019.00033
   Von Rhein A, 2018, ACM T SOFTW ENG METH, V27, DOI 10.1145/3280986
   Walkingshaw Eric, 2014, ACM SIGPLAN S NEW ID, P213
   Winters Titus, 2020, Software Engineering at Google
   Zimmermann T, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P531, DOI 10.1145/1368088.1368161
   Zyrianov V, 2019, INT C PROGRAM COMPRE, P144, DOI 10.1109/ICPC.2019.00031
NR 63
TC 1
Z9 1
U1 2
U2 4
PU ASSOC COMPUTING MACHINERY
PI NEW YORK
PA 1601 Broadway, 10th Floor, NEW YORK, NY USA
SN 1049-331X
EI 1557-7392
J9 ACM T SOFTW ENG METH
JI ACM Trans. Softw. Eng. Methodol.
PD JUL
PY 2023
VL 32
IS 5
AR 121
DI 10.1145/3585008
PG 34
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA P9SM2
UT WOS:001054005300014
OA Bronze
DA 2024-07-18
ER

PT J
AU Tian, H
   Liu, K
   Li, Y
   Kaboré, AK
   Koyuncu, A
   Habib, A
   Li, L
   Wen, J
   Klein, J
   Bissyandé, TF
AF Tian, Haoye
   Liu, Kui
   Li, Yinghua
   Kabore, Abdoul Kader
   Koyuncu, Anil
   Habib, Andrew
   Li, Li
   Wen, Junhao
   Klein, Jacques
   Bissyande, Tegawende F.
TI The Best of Both Worlds: Combining Learned Embeddings with Engineered
   Features for Accurate Prediction of Correct Patches
SO ACM TRANSACTIONS ON SOFTWARE ENGINEERING AND METHODOLOGY
LA English
DT Article
DE Program repair; patch correctness; distributed representation learning;
   machine learning; embeddings; features combination; explanation
ID AUTOMATED REPAIR; GENERATION
AB A large body of the literature on automated program repair develops approaches where patches are automatically generated to be validated against an oracle (e.g., a test suite). Because such an oracle can be imperfect, the generated patches, although validated by the oracle, may actually be incorrect. While the state-of-the-art explores research directions that require dynamic information or rely on manually-crafted heuristics, we study the benefit of learning code representations in order to learn deep features that may encode the properties of patch correctness. Our empirical work investigates different representation learning approaches for code changes to derive embeddings that are amenable to similarity computations of patch correctness identification, and assess the possibility of accurate classification of correct patch by combining learned embeddings with engineered features. Experimental results demonstrate the potential of learned embeddings to empower Leopard (a patch correctness predicting framework implemented in this work) with learning algorithms in reasoning about patch correctness: a machine learning predictor with BERT transformer-based learned embeddings associated with XGBoost achieves an AUC value of about 0.803 in the prediction of patch correctness on a new dataset of 2,147 labeled patches that we collected for the experiments. Our investigations show that deep learned embeddings can lead to complementary/better performance when comparing against the state-of-the-art, PATCH-SIM, which relies on dynamic information. By combining deep learned embeddings and engineered features, Panther (the upgraded version of Leopard implemented in this work) outperforms Leopard with higher scores in terms of AUC, +Recall and -Recall, and can accurately identify more (in)correct patches that cannot be predicted by the classifiers only with learned embeddings or engineered features. Finally, we use an explainable ML technique, SHAP, to empirically interpret how the learned embeddings and engineered features are contributed to the patch correctness prediction.
C1 [Tian, Haoye; Li, Yinghua; Kabore, Abdoul Kader; Habib, Andrew; Klein, Jacques; Bissyande, Tegawende F.] Univ Luxembourg, Esch Sur Alzette, Luxembourg.
   [Liu, Kui] Huawei, Shenzhen, Peoples R China.
   [Koyuncu, Anil] Sabanci Univ, Istanbul, Turkiye.
   [Li, Li] Monash Univ, Melbourne, Australia.
   [Wen, Junhao] Chongqing Univ, Chongqing, Peoples R China.
C3 University of Luxembourg; Huawei Technologies; Sabanci University;
   Monash University; Chongqing University
RP Liu, K (corresponding author), Huawei, Shenzhen, Peoples R China.
EM haoye.tian@uni.lu; brucekuiliu@gmail.com; yinghua.li@uni.lu;
   abdoulkader.kabore@uni.lu; anil.koyuncu@sabanciuniv.edu;
   andrew.a.habib@gmail.com; li.li@monash.edu; jhwen@cqu.edu.cn;
   jacques.klein@uni.lu; tegawende.bissyande@uni.lu
RI LI, Yinghua/KIB-2666-2024; KABORE, Abdoul Kader/JJF-0898-2023
OI LI, Yinghua/0000-0003-1390-0393; KABORE, Abdoul
   Kader/0000-0002-3151-9433; Wen, Junhao/0000-0002-6561-560X; TIAN,
   Haoye/0000-0002-8049-3997; LIU, Kui/0000-0003-0145-615X; Bissyande,
   Tegawende F./0000-0001-7270-9869; Klein, Jacques/0000-0003-4052-475X;
   Li, Li/0000-0003-2990-1614; Habib, Andrew/0000-0002-5857-1864
FU European Research Council (ERC) under the European Union [949014];
   National Natural Science Foundation of China [62172214]; Natural Science
   Foundation of Jiangsu Province, China [BK20210279]; Open Project Program
   of the State Key Laboratory of Mathematical Engineering and Advanced
   Computing [2020A06]
FX This work was supported by funding from the European Research Council
   (ERC) under the European Union's Horizon 2020 research and innovation
   program (grant agreement No. 949014). Kui Liu was also supported by the
   National Natural Science Foundation of China (Grant No. 62172214), the
   Natural Science Foundation of Jiangsu Province, China (Grant No.
   BK20210279), and the Open Project Program of the State Key Laboratory of
   Mathematical Engineering and Advanced Computing (No. 2020A06).
CR Allamanis M, 2018, ACM COMPUT SURV, V51, DOI 10.1145/3212695
   Alon U, 2019, P ACM PROGRAM LANG, V3, DOI 10.1145/3290353
   [Anonymous], 2016, P 1 WORKSH DEEP LEAR
   Bader J, 2019, P ACM PROGRAM LANG, V3, DOI 10.1145/3360585
   Barr ET, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P306, DOI 10.1145/2635868.2635898
   Chen J., 2017, DAGSTUHL REPORTS, V7, P50, DOI DOI 10.4230/DAGREP.7.12.50
   Chunrong Fang, 2020, ISSTA '20: Proceedings of the 29th ACM SIGSOFT International Symposium on Software Testing and Analysis, P516, DOI 10.1145/3395363.3397362
   Compton Rhys, 2020, P 17 MINING SOFTWARE
   Csuvik V, 2020, PROCEEDINGS OF THE 2020 IEEE 2ND INTERNATIONAL WORKSHOP ON INTELLIGENT BUG FIXING (IBF '20), P18, DOI [10.1109/ibf50092.2020.9034714, 10.1109/IBF50092.2020.9034714]
   Devlin J, 2019, 2019 CONFERENCE OF THE NORTH AMERICAN CHAPTER OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS: HUMAN LANGUAGE TECHNOLOGIES (NAACL HLT 2019), VOL. 1, P4171
   Dietterich TG, 1998, NEURAL COMPUT, V10, P1895, DOI 10.1162/089976698300017197
   Durieux T, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P302, DOI 10.1145/3338906.3338911
   Feng ZY, 2020, Arxiv, DOI [arXiv:2002.08155, 10.48550/arXiv.2002.08155]
   Hindle A, 2012, PROC INT CONF SOFTW, P837, DOI 10.1109/ICSE.2012.6227135
   Hoang T, 2019, Arxiv, DOI arXiv:1911.03576
   Hoang T, 2020, PROC INT CONF SOFTW, P518, DOI 10.1145/3377811.3380361
   Jiang JJ, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P255, DOI 10.1109/ASE.2019.00033
   Jiang JJ, 2018, ISSTA'18: PROCEEDINGS OF THE 27TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P298, DOI 10.1145/3213846.3213871
   Just R, 2014, P 2014 INT S SOFTW T, P437, DOI DOI 10.1145/2610384.2628055
   Karampatsis Rafael-Michael, 2020, P 17 MINING SOFTWARE
   Koyuncu A, 2020, EMPIR SOFTW ENG, V25, P1980, DOI 10.1007/s10664-019-09780-z
   Koyuncu A, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P314, DOI 10.1145/3338906.3338935
   Kui Liu, 2019, 2019 IEEE 26th International Conference on Software Analysis, Evolution and Reengineering (SANER). Proceedings, P1, DOI 10.1109/SANER.2019.8667970
   Le Goues C, 2019, COMMUN ACM, V62, P56, DOI 10.1145/3318162
   Le Goues C, 2012, IEEE T SOFTWARE ENG, V38, P54, DOI 10.1109/TSE.2011.104
   Le Goues C, 2015, IEEE T SOFTWARE ENG, V41, P1236, DOI 10.1109/TSE.2015.2454513
   Le XBD, 2018, EMPIR SOFTW ENG, V23, P3007, DOI 10.1007/s10664-017-9577-2
   Le XBD, 2019, PROC INT CONF SOFTW, P524, DOI 10.1109/ICSE.2019.00064
   Lin Derrick, 2017, P COMPANION 2017 ACM, P55, DOI [10.1145/3135932, DOI 10.1145/3135932, 10.1145/3135932.3135941]
   Liu K, 2020, PROC INT CONF SOFTW, P615, DOI 10.1145/3377811.3380338
   Liu K, 2021, J SYST SOFTWARE, V171, DOI 10.1016/j.jss.2020.110817
   Liu K, 2019, PROCEEDINGS OF THE 28TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA '19), P31, DOI 10.1145/3293882.3330577
   Liu K, 2021, IEEE T SOFTWARE ENG, V47, P165, DOI 10.1109/TSE.2018.2884955
   Liu K, 2019, IEEE INT CONF SOFTW, P102, DOI 10.1109/ICST.2019.00020
   Liu K, 2018, ASIA PAC SOFWR ENG, P658, DOI 10.1109/APSEC.2018.00085
   Liu K, 2019, PROC INT CONF SOFTW, P1, DOI 10.1109/ICSE.2019.00019
   Liu K, 2018, PROC IEEE INT CONF S, P275, DOI 10.1109/ICSME.2018.00037
   Long F, 2016, ACM SIGPLAN NOTICES, V51, P298, DOI 10.1145/2914770.2837617
   Lundberg SM, 2017, ADV NEUR IN, V30
   Madeiral F, 2019, 2019 IEEE 26TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER), P468, DOI [10.1109/saner.2019.8667991, 10.1109/SANER.2019.8667991]
   Madeiral Fernanda, 2018, AUTOMATED APPROACH B
   MANN HB, 1947, ANN MATH STAT, V18, P50, DOI 10.1214/aoms/1177730491
   Martínez M, 2015, EMPIR SOFTW ENG, V20, P176, DOI 10.1007/s10664-013-9282-8
   Mikolov T, 2013, Arxiv, DOI [arXiv:1301.3781, 10.48550/arXiv.1301.3781]
   Monperrus M, 2018, ACM COMPUT SURV, V51, DOI 10.1145/3105906
   Monperrus Martin, 2018, TECHNICAL REPORT
   Ndichu S, 2019, APPL SOFT COMPUT, V84, DOI 10.1016/j.asoc.2019.105721
   Pian W, 2022, Arxiv, DOI arXiv:2206.06460
   Qi YH, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P254, DOI 10.1145/2568225.2568254
   Qi Zichao, 2015, P 2015 INT S SOFTW T, P24, DOI DOI 10.1145/2771783.2771791
   Le Q, 2014, PR MACH LEARN RES, V32, P1188
   Saha RK, 2018, IEEE WORK CONF MIN S, P10, DOI 10.1145/3196398.3196473
   Saha S, 2019, PROC INT CONF SOFTW, P13, DOI 10.1109/ICSE.2019.00020
   Smith EK, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P532, DOI 10.1145/2786805.2786825
   Soto M, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P221, DOI 10.1109/SANER.2018.8330211
   Tian HY, 2022, ACM T SOFTW ENG METH, V31, DOI 10.1145/3511096
   Tian HY, 2020, IEEE INT CONF AUTOM, P981, DOI 10.1145/3324884.3416532
   Tian Haoye, 2022, P 37 IEEEACMINTERNAT
   Wang SW, 2020, IEEE INT CONF AUTOM, P968, DOI 10.1145/3324884.3416590
   Wei HH, 2017, PROCEEDINGS OF THE TWENTY-SIXTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P3034
   Weimer W, 2013, IEEE INT CONF AUTOM, P356, DOI 10.1109/ASE.2013.6693094
   Weimer W, 2009, PROC INT CONF SOFTW, P364, DOI 10.1109/ICSE.2009.5070536
   Wen M, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1, DOI 10.1145/3180155.3180233
   WILCOXON F, 1945, BIOMETRICS BULL, V1, P80, DOI 10.1093/jee/39.2.269
   Xin Q, 2017, PROCEEDINGS OF THE 26TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA'17), P226, DOI 10.1145/3092703.3092718
   Xiong YF, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P789, DOI 10.1145/3180155.3180182
   Xiong YF, 2017, PROC INT CONF SOFTW, P416, DOI 10.1109/ICSE.2017.45
   Yan DP, 2022, INFORM SOFTWARE TECH, V152, DOI 10.1016/j.infsof.2022.107043
   Yang B, 2020, PROCEEDINGS OF THE 2020 IEEE 2ND INTERNATIONAL WORKSHOP ON INTELLIGENT BUG FIXING (IBF '20), P1, DOI [10.1109/ibf50092.2020.9034821, 10.1109/IBF50092.2020.9034821]
   Yang JQ, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P831, DOI 10.1145/3106237.3106274
   Ye H, 2021, Arxiv, DOI arXiv:1909.13694
   Ye H, 2022, IEEE T SOFTWARE ENG, V48, P2920, DOI 10.1109/TSE.2021.3071750
   Ye H, 2019, 2019 IEEE 1ST INTERNATIONAL WORKSHOP ON INTELLIGENT BUG FIXING (IBF '19), P1, DOI [10.1109/ibf.2019.8665475, 10.1109/icnsurv.2019.8735415, 10.1109/IBF.2019.8665475]
   Yu ZP, 2020, AAAI CONF ARTIF INTE, V34, P1145
   Yu ZX, 2019, EMPIR SOFTW ENG, V24, P33, DOI 10.1007/s10664-018-9619-4
   Zhao G, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P141, DOI 10.1145/3236024.3236068
   Zhou SF, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P1202, DOI 10.1109/ASE.2019.00137
NR 77
TC 4
Z9 4
U1 0
U2 1
PU ASSOC COMPUTING MACHINERY
PI NEW YORK
PA 1601 Broadway, 10th Floor, NEW YORK, NY USA
SN 1049-331X
EI 1557-7392
J9 ACM T SOFTW ENG METH
JI ACM Trans. Softw. Eng. Methodol.
PD JUL
PY 2023
VL 32
IS 4
AR 92
DI 10.1145/3576039
PG 34
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA L0SO0
UT WOS:001020441100011
OA Bronze, Green Submitted, Green Published
DA 2024-07-18
ER

PT J
AU Altoyan, N
   Batory, D
AF Altoyan, Najd
   Batory, Don
TI On Proving the Correctness of Refactoring Class Diagrams of MDE
   Metamodels
SO ACM TRANSACTIONS ON SOFTWARE ENGINEERING AND METHODOLOGY
LA English
DT Article
DE Class diagram refactorings; object diagram refactorings; Coq
ID TRANSFORMATION
AB Model Driven Engineering (MDE) is a general-purpose engineering methodology to elevate system design, maintenance, and analysis to corresponding activities on models. Models (graphical and/or textual) of a target application are automatically transformed into source code, performance models, Promela files (for model checking), and so on for system analysis and construction.
   Models are instances of metamodels. One forman MDE metamodel can take is a [class diagram, constraints] pair: the class diagram defines all object diagrams that could be metamodel instances; object constraint language (OCL) constraints eliminate semantically undesirable instances.
   A metamodel refactoring is an invertible semantics-preserving co-transformation, i.e., it transforms both a metamodel and its models without losing data. This article addresses a subproblem of metamodel refactoring: how to prove the correctness of refactorings of class diagrams without OCL constraints using the Coq Proof Assistant.
C1 [Altoyan, Najd; Batory, Don] Univ Texas Austin, Dept Comp Sci, Austin, TX 78712 USA.
C3 University of Texas System; University of Texas Austin
RP Altoyan, N (corresponding author), Univ Texas Austin, Dept Comp Sci, Austin, TX 78712 USA.
EM naltoyan@utexas.edu; batory@cs.utexas.edu
FU King Abdulaziz City for Science and Technology (KACST); NSF [26-1005-25,
   1212683]
FX Altoyan was supported by King Abdulaziz City for Science and Technology
   (KACST). This work was also supported by NSF Grant no. 26-1005-25 (Award
   no. 1212683).
CR Allilaire F., 2007, FAMILIES PERSONS SIM
   Altoyan N, 2022, COQ PROOF SCRIPTS ME
   Altoyan N., 2020, THESIS U TEXAS AUSTI
   Anastasakis K., 2007, MODEVVA
   Andova S., 2012, FORMAL METHODS MODEL, V7320
   [Anonymous], 2005, SBES
   [Anonymous], 2018, Wikipedia
   [Anonymous], 2021, Wikipedia
   [Anonymous], 2020, Wikipedia
   [Anonymous], 2001, Java and the Java Virtual Machine: Definition, Verification, Validation
   [Anonymous], 1995, Software Engineering
   [Anonymous], 2019, Wikipedia
   [Anonymous], 1991, Basic Category Theory for Computer Scientists
   ATZENI P, 1982, THEOR COMPUT SCI, V19, P267, DOI 10.1016/0304-3975(82)90038-X
   Baar T., 2007, PSI
   Batory D., 2013, MODELS
   Batory D., 2020, MODELSWARD
   Batory D., 2020, Automated Software Design, V1
   Batory D., 2021, COMMUNICATION
   Batory D, 2017, SOFTW SYST MODEL, V16, P443, DOI 10.1007/s10270-015-0488-7
   Batory D, 2008, J UNIVERS COMPUT SCI, V14, P2059
   Beck K., 2000, EXTREME PROGRAMMING
   Benzaken V., 2014, ESOP
   Berg H., 2017, GENERIC METAMODEL RE
   Berghammer R., 1993, TECHNICAL REPORT, V28
   Bernstein P., 2008, VLDB J
   Bernstein P., 2007, P 2007 ACM SIGMOD IN
   Berramla K., 2015, NTIC
   Bertot Yves, 2013, Interactive theorem proving and program development: Coq'Art: the calculus of inductive constructions
   Bezivin J., 2006, GTTSE
   Brambilla M., 2017, Model-Driven Software Engineering in Practice, Second Edition, ser. Synthesis Lectures on Software Engineering, VSecond
   Cabot J, 2007, SCI COMPUT PROGRAM, V68, P179, DOI 10.1016/j.scico.2007.05.001
   Calegari D., 2011, SBMF
   Costa V., 2014, SEKE
   de Kogel E, 1993, 9323 EINDH U TECHN
   De Lara J, 2014, ACM T SOFTW ENG METH, V24, DOI 10.1145/2685615
   Delaware B., 2011, OOPSLA SPLASH
   Ehrig H., 2007, FASE
   Elmasri R., 2010, Fundamentals of Database Systems, V6th
   Fowler M., 1997, UML DISTILLED APPL S
   Fowler M., 2000, Refactoring: Improving the Design of Existing Code
   France R., 2003, IEEE SOFTWARE
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   Gheyi R., 2005, ELECTRON NOTES THEOR
   Gheyi R., 2005, ASE
   Golobisky M., 2005, ASSE
   Griswold W. G, 1991, THESIS U WASHINGTON
   Hassam K., 2010, BENEVOL
   Hermann F., 2012, MATH STRUCT COMP SCI, V24
   Herrmannsdorfer M., 2009, ECOOP
   Hung Ledang, 2010, Proceedings of the 2010 4th IEEE International Symposium on Theoretical Aspects of Software Engineering (TASE 2010), P35, DOI 10.1109/TASE.2010.16
   Jackson D, 2002, ACM T SOFTW ENG METH, V11, P256, DOI 10.1145/505145.505149
   Kerievsky J., 2004, REFACTORING PATTERNS
   Kernighan BrianW., 1989, C Programming Language, V2nd
   Kim J., 2019, IWOR
   Kim J, 2016, PROC INT CONF SOFTW, P1145, DOI 10.1145/2884781.2884802
   Kim J, 2015, PROC IEEE INT CONF S, P211, DOI 10.1109/ICSM.2015.7332467
   Konig H., 2011, SBMF
   Lacker E., 2021, IWOR
   Mansoor U, 2017, SOFTWARE QUAL J, V25, P473, DOI 10.1007/s11219-015-9284-4
   Mantz F., 2012, AGTIVE
   Maoz S, 2011, LECT NOTES COMPUT SC, V6813, P230, DOI 10.1007/978-3-642-22655-7_12
   Maoz S, 2011, LECT NOTES COMPUT SC, V6981, P592, DOI 10.1007/978-3-642-24485-8_44
   Markovic S, 2008, SOFTW SYST MODEL, V7, P25, DOI 10.1007/s10270-007-0056-x
   Martin R. C., 2002, AGILE SOFTWARE DEV P
   Melnik S, 1998, LECT NOTES COMPUTER, V2967
   Melnik S., 2004, LECT NOTES COMPUTER
   Melnik S, 2008, ACM T DATABASE SYST, V33, DOI 10.1145/1412331.1412334
   Microsoft, 2020, MS ACC
   Mohammed M., 2015, EMPIR SOFTW ENG
   Mok W., 2001, HICSS
   Neward Ted, 2006, VIETNAM COMPUTER SCI
   Niols, 2016, F EQUAL ISNT DOING A
   Object Management Group (OMG), 2006, FORMAL20060101 OMG
   Opdyke B., 1992, THESIS U ILLINOIS UR
   Paige R., 2001, FASE
   Pilgrim J., 2013, ASE
   Pottinger R., 2009, MYLOPOULOS FESTSCHRI, V5600
   Pottinger R.A., 2008, P 11 INT C EXTENDING, P73
   Queralt A, 2006, LECT NOTES COMPUT SC, V4215, P497
   Roberts D., 1999, Ph. D. Dissertation
   Rose L., 2010, MODELS
   Rose L. M., 2010, ICMT
   Rubin Kenneth S., 2012, Essential Scrum: A practical guide to the most popular Agile process, V1st
   Rutle A, 2012, J LOGIC ALGEBR PROGR, V81, P422, DOI 10.1016/j.jlap.2012.03.006
   Sannella D., 1983, FDN COMPUTATION THEO
   Schafer M., 2012, IEEE T SOFTWARE ENG
   Schulz C., 2011, J SYMB COMPUT
   Selic B., 2012, SFM
   Silberschatz A., 2006, DATABASE SYSTEM CONC, V3rd
   Steinberg D., 2008, EMF: Eclipse Modeling Framework, Vsecond
   Straten R., 2007, SOSYM
   Sultana N., 2008, PEPM
   Sunderraman R, 2007, ORACLE 10G PROGRAMMI
   Tantzer G., 2012, ICGT
   Tokuda L., 1999, 14th IEEE International Conference on Automated Software Engineering, P174, DOI 10.1109/ASE.1999.802203
   Wachsmuth G, 2007, LECT NOTES COMPUT SC, V4609, P600
   Wang Y., 2018, POPL
   Wikipedia, 2019, INT LOG
   Yu I., 2015, MODELSWARD
NR 100
TC 1
Z9 1
U1 1
U2 2
PU ASSOC COMPUTING MACHINERY
PI NEW YORK
PA 1601 Broadway, 10th Floor, NEW YORK, NY USA
SN 1049-331X
EI 1557-7392
J9 ACM T SOFTW ENG METH
JI ACM Trans. Softw. Eng. Methodol.
PD APR
PY 2023
VL 32
IS 2
AR 44
DI 10.1145/3549541
PG 42
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA D7OR1
UT WOS:000970588900017
OA Bronze
DA 2024-07-18
ER

PT J
AU Zhang, ZN
   Klees, G
   Wang, E
   Hicks, M
   Wei, SY
AF Zhang, Zenong
   Klees, George
   Wang, Eric
   Hicks, Michael
   Wei, Shiyi
TI Fuzzing Configurations of Program Options - RCR Report
SO ACM TRANSACTIONS ON SOFTWARE ENGINEERING AND METHODOLOGY
LA English
DT Article
DE Fuzzing; command-line option configurations
AB This artifact contains the source code and instructions to reproduce the evaluation results of the article "Fuzzing Configurations of Program Options." The source code includes the configuration grammars for six target programs, the scripts to generate configuration stubs, and the scripts to post-process fuzzing results. The README of the artifact includes the steps to prepare the experimental environment on a clean Ubuntu machine and step-by-step commands to reproduce the evaluation experiments. A VirtualBox image with ConfigFuzz properly set up is also included.
C1 [Zhang, Zenong; Wei, Shiyi] Univ Texas Dallas, Richardson, TX 75080 USA.
   [Klees, George; Hicks, Michael] Univ Maryland, College Pk, MD 20742 USA.
   [Wang, Eric] Poolesville High Sch, Poolesville, MD 20837 USA.
   [Hicks, Michael] Amazon, College Pk, MD 20742 USA.
C3 University of Texas System; University of Texas Dallas; University
   System of Maryland; University of Maryland College Park; Amazon.com
RP Zhang, ZN (corresponding author), Univ Texas Dallas, Richardson, TX 75080 USA.
EM zenong@utdallas.edu; george.t.klees@gmail.com; ericzwang20841@gmail.com;
   mwh@cs.umd.edu; swei@utdallas.edu
RI ZHANG, ZENONG/JFL-1629-2023; Wei, Shiyi/AAR-1561-2020
OI ZHANG, ZENONG/0000-0002-3811-675X; Klees, George/0000-0002-5070-0107;
   Hicks, Michael/0000-0002-2759-9223
CR aflowlib, About us
   [Anonymous], Clang: A C language family frontend for LLVM
   catb, GIF2PNG
   Fast Forward Moving Pictures Experts Group (FFMPEG), about us
   Fioraldi Andrea, 2020, 14 USENIX WORKSHOP O
   github, FUZZBENCH FUZZER BEN
   Merkel D., 2014, LINUX J, V2014, P2, DOI DOI 10.5555/2600239.2600241
   nm, US
   objdump, US
   sourceware, CXXFILT
   xmllint, US
NR 11
TC 0
Z9 0
U1 0
U2 0
PU ASSOC COMPUTING MACHINERY
PI NEW YORK
PA 1601 Broadway, 10th Floor, NEW YORK, NY USA
SN 1049-331X
EI 1557-7392
J9 ACM T SOFTW ENG METH
JI ACM Trans. Softw. Eng. Methodol.
PD APR
PY 2023
VL 32
IS 2
AR 55
DI 10.1145/3580601
PG 3
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA D7OR1
UT WOS:000970588900028
OA hybrid
DA 2024-07-18
ER

PT J
AU Yin, ZJ
   Xu, YW
   Ma, FC
   Gao, HH
   Qiao, L
   Jiang, Y
AF Yin, Zijing
   Xu, Yiwen
   Ma, Fuchen
   Gao, Haohao
   Qiao, Lei
   Jiang, Yu
TI Scanner plus plus : Enhanced Vulnerability Detection of Web Applications
   with Attack Intent Synchronization
SO ACM TRANSACTIONS ON SOFTWARE ENGINEERING AND METHODOLOGY
LA English
DT Article
DE Web security; scanner; attack intent; synchronization
AB Scanners are commonly applied for detecting vulnerabilities in web applications. Various scanners with different strategies are widely in use, but their performance is challenged by the increasing diversity of target applications that have more complex attack surfaces (i.e., website paths) and covert vulnerabilities that can only be exploited by more sophisticated attack vectors (i.e., payloads). In this paper, we propose Scanner++, a framework that improves web vulnerability detection of existing scanners through combining their capabilities with attack intent synchronization. We design Scanner++ as a proxy-based architecture while using a package-based intent synchronization approach. Scanner++ first uses a purification mechanism to aggregate and refine attack intents, consisting of attack surfaces and attack vectors extracted from the base scanners' request packets. Then, Scanner++ uses a runtime intent synchronization mechanism to select relevant attack intents according to the scanners' detection spots to guide their scanning process. Consequently, base scanners can expand their attack surfaces, generate more diverse attack vectors and achieve better vulnerability detection performance. For evaluation, we implemented and integrated Scanner++ together with four widely used scanners, BurpSuite, AWVS, Arachni, and ZAP, testing it on ten benchmark web applications and three well-tested real-world web applications of a critical financial platform from our industry partner. Working under the Scanner++ framework helps BurpSuite, AWVS, Arachni, and ZAP cover 15.26%, 37.14%, 59.21%, 68.54% more pages, construct 12.95x, 1.13x, 15.03x, 52.66x more attack packets, and discover 77, 55, 77, 176 more bugs, respectively. Furthermore, Scanner++ detected eight serious previously unknown vulnerabilities on real-world applications, while the base scanners only found three of them.
C1 [Yin, Zijing; Xu, Yiwen; Ma, Fuchen; Jiang, Yu] Tsinghua Univ, Shuangqing Rd, Beijing 100084, Peoples R China.
   [Gao, Haohao] China Cent Depository & Clearing Co Ltd, Jinrong St, Beijing 100084, Peoples R China.
   [Qiao, Lei] Beijing Inst Control Engn, Zhongguancun South St, Beijing 100081, Peoples R China.
C3 Tsinghua University
RP Jiang, Y (corresponding author), Tsinghua Univ, Shuangqing Rd, Beijing 100084, Peoples R China.
EM Aurora@europe.com
OI Yin, Zijing/0000-0002-4914-836X
FU NSFC Program [62022046, 92167101, U1911401, 62021002, 61802223];
   National Key Research and Development Project [2019YFB1706203];
   Tsinghua-Webank Scholar Project [20212001829]
FX This research is sponsored in part by the NSFC Program (No. 62022046,
   No.92167101, U1911401, 62021002, 61802223), National Key Research and
   Development Project (Grant No. 2019YFB1706203), and the Tsinghua-Webank
   Scholar Project (No. 20212001829).
CR Acunetix, 2021, WEB APPL SEC AC WEB
   Acunetix, 2021, VULN AC
   Alhuzali A, 2018, PROCEEDINGS OF THE 27TH USENIX SECURITY SYMPOSIUM, P377
   Alsaleh M, 2017, SECUR COMMUN NETW, DOI 10.1155/2017/6158107
   Amankwah R, 2020, SOFTWARE PRACT EXPER, V50, P1842, DOI 10.1002/spe.2870
   [Anonymous], 2021, OWASP top ten web application security risks
   Balzarotti D, 2008, P IEEE S SECUR PRIV, P387, DOI 10.1109/SP.2008.22
   Berners-Lee Tim., 1995, RFC1866
   Bisht P, 2010, PROCEEDINGS OF THE 17TH ACM CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY (CCS'10), P607, DOI 10.1145/1866307.1866375
   Chen YL, 2019, PROCEEDINGS OF THE 28TH USENIX SECURITY SYMPOSIUM, P1967
   Dahse J, 2014, 21ST ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2014), DOI 10.14722/ndss.2014.23262
   Doupé A, 2010, LECT NOTES COMPUT SC, V6201, P111, DOI 10.1007/978-3-642-14215-4_7
   Doupe Adam, 2012, 21 USENIX SECURITY S, P523
   Duchene Fabien., 2014, P 4 ACM C DATA APPL, P37, DOI DOI 10.1145/2557547.2557550
   Esposito D., ICIMP 2018 the Thirteenth International Conference on Internet Monitoring and Protection, Barcelona, Spain, 22-26 July 2018, IARIA, 2018, P22
   Ferreira JF, 2020, IEEE INT CONF AUTOM, P1349, DOI 10.1145/3324884.3415298
   Gartner, 2021, APPL SEC TEST TOOLS
   Güler E, 2020, ANN COMPUT SECURITY, P360, DOI 10.1145/3427228.3427266
   Laskos Tasos, 2014, SUPPORTED FEATURES A
   Livshits B, 2013, ACM SIGPLAN NOTICES, V48, P385, DOI 10.1145/2480359.2429115
   Livshits VB, 2005, USENIX ASSOCIATION PROCEEDINGS OF THE 14TH USENIX SECURITY SYMPOSIUM, P271
   Nunes P, 2017, 2017 13TH EUROPEAN DEPENDABLE COMPUTING CONFERENCE (EDCC 2017), P121, DOI 10.1109/EDCC.2017.16
   Nunes P, 2015, I C DEPEND SYS NETWO, P299, DOI 10.1109/DSN.2015.16
   OWASP, 2021, SUPP VULN OWASP ZAP
   OWASP Foundation, 2021, ABOUT US
   PCI SECURITY STANDARDS, 2017, APPR SCANN VEND
   PortSwigger, 2020, BURP SUIT APPL SEC T
   PortSwigger, 2021, ISS DEF PORTSWIGGER
   RFC2616, 1999, RFC2616
   RIPSTECH, 2020, RIPS TECHN LEAD STAT
   Sarosys LLC, 2017, AR WEB APPL SEC SCAN
   Sectool Market, 2016, PRIC VS FEAT WEB APP
   Seng L.K., 2018, English. International Journal of Advanced Computer Research, V8, P285
   Shahriar H, 2019, P INT COMP SOFTW APP, P604, DOI 10.1109/COMPSAC.2019.10274
   Steffens M, 2019, 26TH ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2019), DOI 10.14722/ndss.2019.23009
   Tenable, 2020, NESS VULN ASS
   The MITRE Corporation, 2020, CVE COMM VULN EXP CV
   Wapiti, 2021, WAP FREE OP SOURC WE
   zapproxy, 2021, OWASP ZAP ATT PROX
NR 39
TC 0
Z9 0
U1 1
U2 9
PU ASSOC COMPUTING MACHINERY
PI NEW YORK
PA 1601 Broadway, 10th Floor, NEW YORK, NY USA
SN 1049-331X
EI 1557-7392
J9 ACM T SOFTW ENG METH
JI ACM Trans. Softw. Eng. Methodol.
PD JAN
PY 2023
VL 32
IS 1
AR 7
DI 10.1145/3517036
PG 30
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA C9GD0
UT WOS:000964909700007
DA 2024-07-18
ER

PT J
AU Ahmed, UZ
   Fan, ZY
   Yi, J
   Al-Bataineh, OI
   Roychoudhury, A
AF Ahmed, Umair Z.
   Fan, Zhiyu
   Yi, Jooyong
   Al-Bataineh, Omar, I
   Roychoudhury, Abhik
TI Verifix: Verified Repair of Programming Assignments
SO ACM TRANSACTIONS ON SOFTWARE ENGINEERING AND METHODOLOGY
LA English
DT Article
DE Automated program repair; intelligent tutoring system
ID FEEDBACK GENERATION; VALIDATION
AB Automated feedback generation for introductory programming assignments is useful for programming education. Most works try to generate feedback to correct a student program by comparing its behavior with an instructor's reference program on selected tests. In this work, our aim is to generate verifiably correct program repairs as student feedback. A student-submitted program is aligned and composed with a reference solution in terms of control flow, and the variables of the two programs are automatically aligned via predicates describing the relationship between the variables. When verification attempt for the obtained aligned program fails, we turn a verification problem into a MaxSMT problem whose solution leads to a minimal repair. We have conducted experiments on student assignments curated from a widely deployed intelligent tutoring system. Our results show that generating verified repair without sacrificing the overall repair rate is possible. In fact, our implementation, Verifix, is shown to outperform Clara, a state-of-the-art tool, in terms of repair rate. This shows the promise of using verified repair to generate high confidence feedback in programming pedagogy settings.
C1 [Ahmed, Umair Z.; Fan, Zhiyu; Al-Bataineh, Omar, I; Roychoudhury, Abhik] Natl Univ Singapore, Sch Comp, COM1,13 Comp Dr, Singapore 117417, Singapore.
   [Yi, Jooyong] Ulsan Natl Inst Sci & Technol, Dept Comp Sci & Engn, 50 UNIST Gil, Ulsan 44919, South Korea.
C3 National University of Singapore; Ulsan National Institute of Science &
   Technology (UNIST)
RP Yi, J (corresponding author), Ulsan Natl Inst Sci & Technol, Dept Comp Sci & Engn, 50 UNIST Gil, Ulsan 44919, South Korea.
EM umair@nus.edu.sg; zhiyufan@comp.nus.edu.sg; jooyong@unist.ac.kr;
   omerdep@yahoo.com; abhik@comp.nus.edu.sg
OI Fan, Zhiyu/0000-0002-8165-9493
FU Singapore Ministry of Education (MoE) Tier 3 program "Automated Program
   Repair; National Research Foundation of Korea (NRF) - Korea government
   (MSIT) [2021R1A2C1009819, 2021R1A5A1021944]; Institute for Information&
   Communications Technology Planning & Evaluation (IITP) - Korea
   government (MSIT) [2021-0-01001]
FX This work was partially supported by a Singapore Ministry of Education
   (MoE) Tier 3 program "Automated Program Repair." Thisworkwas also partly
   supported by the National Research Foundation of Korea (NRF) grant
   funded by the Korea government (MSIT) (No. 2021R1A2C1009819, No.
   2021R1A5A1021944) and the Institute for Information& Communications
   Technology Planning & Evaluation (IITP) grant funded by the Korea
   government (MSIT) (No. 2021-0-01001).
CR Ahmed UZ, 2020, 2020 ACM/IEEE 42ND INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING EDUCATION AND TRAINING (ICSE-SEET 2020), P139, DOI 10.1145/3377814.3381703
   Ahmed UZ, 2018, PROC INT CONF SOFTW, P78, DOI 10.1145/3183377.3183383
   Alur R, 2015, NATO SCI PEAC SECUR, V40, P1, DOI 10.3233/978-1-61499-495-4-1
   Barthe Gilles, 2011, FM 2011: Formal Methods. Proceedings 17th International Symposium on Formal Methods, P200, DOI 10.1007/978-3-642-21437-0_17
   Bhatia S, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P60, DOI 10.1145/3180155.3180219
   Chhatbar D, 2020, LECT NOTES ARTIF INT, V12163, P106, DOI 10.1007/978-3-030-52237-7_9
   Churchill B, 2017, TWENTY-SECOND INTERNATIONAL CONFERENCE ON ARCHITECTURAL SUPPORT FOR PROGRAMMING LANGUAGES AND OPERATING SYSTEMS (ASPLOS XXII), P313
   Churchill B, 2019, PROCEEDINGS OF THE 40TH ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION (PLDI '19), P1027, DOI 10.1145/3314221.3314596
   COOK SA, 1978, SIAM J COMPUT, V7, P70, DOI 10.1137/0207005
   de Moura L, 2008, LECT NOTES COMPUT SC, V4963, P337, DOI 10.1007/978-3-540-78800-3_24
   Fontaine Pascal, 2018, P 3 INT WORKSHOP SAT
   Gulwani S, 2018, ACM SIGPLAN NOTICES, V53, P465, DOI [10.1145/3192366.3192387, 10.1145/3296979.3192387]
   Gulwani S, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P41, DOI 10.1145/2635868.2635912
   Gupta R, 2017, AAAI CONF ARTIF INTE, P1345
   Henzinger TA, 2002, ACM SIGPLAN NOTICES, V37, P58, DOI 10.1145/565816.503279
   Nguyen HDT, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P772, DOI 10.1109/ICSE.2013.6606623
   Hu Y, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P388, DOI 10.1109/ASE.2019.00044
   Kaleeswaran S, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P739, DOI 10.1145/2950290.2950363
   Le Goues C, 2019, COMMUN ACM, V62, P56, DOI 10.1145/3318162
   Le Goues C, 2012, IEEE T SOFTWARE ENG, V38, P54, DOI 10.1109/TSE.2011.104
   Le XBD, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P593, DOI 10.1145/3106237.3106309
   Long F, 2016, ACM SIGPLAN NOTICES, V51, P298, DOI 10.1145/2914770.2837617
   Mechtaev S, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P129, DOI 10.1145/3180155.3180247
   Mechtaev S, 2016, PROC INT CONF SOFTW, P691, DOI 10.1145/2884781.2884807
   Monperrus M, 2018, ACM COMPUT SURV, V51, DOI 10.1145/3105906
   Necula GC, 2000, ACM SIGPLAN NOTICES, V35, P83, DOI 10.1145/358438.349314
   Pu YW, 2016, COMPANION PROCEEDINGS OF THE 2016 ACM SIGPLAN INTERNATIONAL CONFERENCE ON SYSTEMS, PROGRAMMING, LANGUAGES AND APPLICATIONS: SOFTWARE FOR HUMANITY (SPLASH COMPANION'16), P39, DOI 10.1145/2984043.2989222
   Qi Zichao, 2015, P 2015 INT S SOFTW T, P24, DOI DOI 10.1145/2771783.2771791
   Ryan TJ, 2019, LECT NOTES COMPUT SC, V11594, P452, DOI 10.1007/978-3-030-22351-9_31
   Singh R, 2013, ACM SIGPLAN NOTICES, V48, P15, DOI 10.1145/2499370.2462195
   Solar-Lezama A, 2006, ACM SIGPLAN NOTICES, V41, P404, DOI 10.1145/1168917.1168907
   Wang K, 2018, Arxiv, DOI arXiv:1711.07163
   Wang K, 2018, PROCEEDINGS OF THE 39TH ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, PLDI 2018, P481, DOI 10.1145/3192366.3192384
   Yi J, 2018, EMPIR SOFTW ENG, V23, P2948, DOI 10.1007/s10664-017-9552-y
   Yi JY, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P740, DOI 10.1145/3106237.3106262
   Zaks A, 2008, LECT NOTES COMPUT SC, V5014, P35, DOI 10.1007/978-3-540-68237-0_5
   ZHANG KZ, 1989, SIAM J COMPUT, V18, P1245, DOI 10.1137/0218082
NR 37
TC 10
Z9 10
U1 1
U2 3
PU ASSOC COMPUTING MACHINERY
PI NEW YORK
PA 1601 Broadway, 10th Floor, NEW YORK, NY USA
SN 1049-331X
EI 1557-7392
J9 ACM T SOFTW ENG METH
JI ACM Trans. Softw. Eng. Methodol.
PD OCT
PY 2022
VL 31
IS 4
AR 74
DI 10.1145/3510418
PG 31
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 4V3NS
UT WOS:000859387700018
OA Green Published, Green Submitted
DA 2024-07-18
ER

PT J
AU Biagiola, M
   Tonella, P
AF Biagiola, Matteo
   Tonella, Paolo
TI Testing the Plasticity of Reinforcement Learning-based Systems
SO ACM TRANSACTIONS ON SOFTWARE ENGINEERING AND METHODOLOGY
LA English
DT Article
DE Software testing; reinforcement learning; empirical software engineering
ID NEURAL-NETWORKS
AB The dataset available for pre-release training of a machine-learning based system is often not representative of all possible execution contexts that the system will encounter in the field. Reinforcement Learning (RL) is a prominent approach among those that support continual learning, i.e., learning continually in the field, in the post-release phase. No study has so far investigated any method to test the plasticity of RL-based systems, i.e., their capability to adapt to an execution context that may deviate from the training one.
   We propose an approach to test the plasticity of RL-based systems. The output of our approach is a quantification of the adaptation and anti-regression capabilities of the system, obtained by computing the adaptation frontier of the system in a changed environment. We visualize such frontier as an adaptation/anti-regression heatmap in two dimensions, or as a clustered projection when more than two dimensions are involved. In this way, we provide developers with information on the amount of changes that can be accommodated by the continual learning component of the system, which is key to decide if online, in-the-field learning can be safely enabled or not.
C1 [Biagiola, Matteo; Tonella, Paolo] Univ Svizzera Italiana, CH-6900 Lugano, Switzerland.
C3 Universita della Svizzera Italiana
RP Biagiola, M (corresponding author), Univ Svizzera Italiana, CH-6900 Lugano, Switzerland.
EM matteo.biagiola@usi.ch; paolo.tonella@usi.ch
RI Tonella, Paolo/C-1702-2015; Biagiola, Matteo/ACY-3300-2022
OI Biagiola, Matteo/0000-0002-7825-3409
FU ERC [787703]; European Research Council (ERC) [787703] Funding Source:
   European Research Council (ERC)
FX This work was partially supported by the H2020 project PRECRIME, funded
   under the ERC Advanced Grant 2017 Program (ERC Grant Agreement n.
   787703).
CR Achiam J., 2018, Spinning up in deep reinforcement learning
   [Anonymous], 2018, Uncovering surprising behaviors in reinforcement learning via worst-case analysis
   Arcuri A, 2014, SOFTW TEST VERIF REL, V24, P219, DOI 10.1002/stvr.1486
   BARTO AG, 1983, IEEE T SYST MAN CYB, V13, P834, DOI 10.1109/TSMC.1983.6313077
   Barto Sutton, 2020, CARTPOLE V1 OPENAI G
   Basilico Justin, 2017, Artwork Personalization at Netflix
   Bellemare MG, 2013, J ARTIF INTELL RES, V47, P253, DOI 10.1613/jair.3912
   Ben Abdessalem R, 2018, IEEE INT CONF AUTOM, P143, DOI 10.1145/3238147.3238192
   Ben Abdessalem R, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1016, DOI 10.1145/3180155.3180160
   Ben Abdessalem R, 2016, IEEE INT CONF AUTOM, P63, DOI 10.1145/2970276.2970311
   Berner Christopher, 2019, CoRR, abs/1912.06680
   Brockman Greg, 2016, arXiv
   CARPENTER GA, 1987, APPL OPTICS, V26, P4919, DOI 10.1364/AO.26.004919
   Cobbe K, 2019, 25TH AMERICAS CONFERENCE ON INFORMATION SYSTEMS (AMCIS 2019)
   Dhariwal P., 2017, OpenAI Baselines
   Ding JH, 2017, 2017 IEEE/ACM 2ND INTERNATIONAL WORKSHOP ON METAMORPHIC TESTING (MET 2017), P28, DOI 10.1109/MET.2017.2
   Du XN, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P477, DOI 10.1145/3338906.3338954
   Everett Richard, 2019, Ph.D. Dissertation
   Fedus William, 2020, CORR ABS2002
   French RM, 1999, TRENDS COGN SCI, V3, P128, DOI 10.1016/S1364-6613(99)01294-2
   Gambi A, 2019, PROCEEDINGS OF THE 28TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA '19), P318, DOI 10.1145/3293882.3330566
   Gauci Jason, 2021, A platform for reasoning systems (reinforcement learning, contextual bandits, etc.)
   Gauci Jason, 2018, ABS181100260 CORR
   Geramifard A, 2015, J MACH LEARN RES, V16, P1573
   Grossberg Stephen T, 2012, STUDIES MIND BRAIN N, V70
   Guo JM, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P739, DOI 10.1145/3236024.3264835
   Haarnoja T, 2018, PR MACH LEARN RES, V80
   Hartmann Christian, 2016, AUTOMATIC INTELLIGEN
   Hasselt H., 2010, Advances in neural information processing systems, V23
   Henderson P, 2018, AAAI CONF ARTIF INTE, P3207
   Hill A., 2018, Stable baselines
   Huang Sandy, 2017, TH INT C LEARNING RE
   Irpan Alex, 2018, Deep reinforcement learning doesn't work yet
   Jahangirova G, 2020, IEEE INT CONF SOFTW, P74, DOI 10.1109/ICST46399.2020.00018
   Kaplanis C, 2019, Arxiv, DOI arXiv:1902.00255
   Kim J, 2019, PROC INT CONF SOFTW, P1039, DOI 10.1109/ICSE.2019.00108
   Kirkpatricka J, 2017, P NATL ACAD SCI USA, V114, P3521, DOI 10.1073/pnas.1611835114
   Langston Jennifer, 2020, With reinforcement learning, Microsoft brings a new class of AI solutions to customers
   Lazaric A, 2012, ADAPT LEARN OPTIM, V12, P143
   Li ZZ, 2018, IEEE T PATTERN ANAL, V40, P2935, DOI 10.1109/TPAMI.2017.2773081
   Lin Yen-Chen, 2017, WORKSHOP TRACK P
   Ma L, 2018, IEEE INT CONF AUTOM, P120, DOI 10.1145/3238147.3238202
   Ma L, 2018, PROC INT SYMP SOFTW, P100, DOI 10.1109/ISSRE.2018.00021
   Matteo Biagiola, 2021, ALPHATEST TOOL TESTI
   McCloskey M., 1989, PSYCHOL LEARN MOTIV, V24, P109, DOI [10.1016/S0079-7421(08)60536-8, DOI 10.1016/S0079-7421(08)60536-8]
   MINSKY M, 1961, P IRE, V49, P8, DOI 10.1109/JRPROC.1961.287775
   Mnih V, 2015, NATURE, V518, P529, DOI 10.1038/nature14236
   Moore A. W., 1990, EFFICIENT MEMORY BAS
   Moore Barto, 2020, MOUNTAINCAR V0 OPENA
   Mullins GE, 2018, J SYST SOFTWARE, V137, P197, DOI 10.1016/j.jss.2017.10.031
   OpenAI, 2020, PEND V0 OPENAI GYM
   Parisi GI, 2019, NEURAL NETWORKS, V113, P54, DOI 10.1016/j.neunet.2019.01.012
   Parisotto E., 2016, Actor-mimic: Deep multitask and transfer reinforcement learning
   Patanjali Aaditya, 2017, MODIFIED VERSION CAR
   Pedregosa F, 2011, J MACH LEARN RES, V12, P2825
   Pei KX, 2017, PROCEEDINGS OF THE TWENTY-SIXTH ACM SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES (SOSP '17), P1, DOI 10.1145/3132747.3132785
   Pezze M., 2008, Software Testing and Analysis: Process, Principles and Techniques
   Riccio V, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P876, DOI 10.1145/3368089.3409730
   Riccio V, 2020, EMPIR SOFTW ENG, V25, P5193, DOI 10.1007/s10664-020-09881-0
   Rolnick D, 2019, 33 C NEURAL INFORM P, V32
   Rubaiyat AM, 2018, IEEE PAC RIM INT SYM, P54, DOI 10.1109/PRDC.2018.00016
   Rupprecht Christian, 2019, 8 INT C LEARNING REP
   Rusu A.A., 2016, ARXIV
   Satariano Adam, 2020, WAREHOUSE ROBOT LEAR
   Schulman J., 2017, ARXIV
   Shen WJ, 2018, 2018 IEEE 18TH INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY AND SECURITY COMPANION (QRS-C), P108, DOI 10.1109/QRS-C.2018.00032
   Shin H, 2017, ADV NEUR IN, V30
   Silver Daniel L., 2013, P 2013 AAAI SPRING S
   Silver D, 2016, NATURE, V529, P484, DOI 10.1038/nature16961
   Stocco A, 2020, PROC INT CONF SOFTW, P359, DOI 10.1145/3377811.3380353
   Sutton, 2020, ACROBOT V1 OPENAI GY
   Sutton RS, 2018, ADAPT COMPUT MACH LE, P1
   Sutton RS, 1996, ADV NEUR IN, V8, P1038
   Szegedy C, 2014, Arxiv, DOI [arXiv:1312.6199, DOI 10.1109/CVPR.2015.7298594]
   Taylor ME, 2009, J MACH LEARN RES, V10, P1633
   Tian YC, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P303, DOI 10.1145/3180155.3180220
   Todorov E, 2012, IEEE INT C INT ROBOT, P5026, DOI 10.1109/IROS.2012.6386109
   TomSchaul John Quan, 2015, 4 INT C LEARNING REP
   Trujillo M., 2020, P IEEE ACM 42 INT C, P215
   Tsitsiklis JN, 1997, ADV NEUR IN, V9, P1075
   Tuncali Cumhur Erkan, 2019, ABS190310629 CORR
   Uesato Jonathan, 2018, 7 INT C LEARNING REP
   van der Maaten L, 2008, J MACH LEARN RES, V9, P2579
   Virtanen P, 2020, NAT METHODS, V17, P261, DOI 10.1038/s41592-019-0686-2
   Wang ZY, 2016, PR MACH LEARN RES, V48
   Wohlin C., 2012, Experimentation in Software Engineering
   Wymann Bernhard, 2000, TORCS OPEN RACING CA, V4, P2
   Zhang JM, 2022, IEEE T SOFTWARE ENG, V48, P1, DOI 10.1109/TSE.2019.2962027
   Zhang MS, 2018, IEEE INT CONF AUTOM, P132, DOI 10.1145/3238147.3238187
   Zhu Zhuangdi, 2020, ARXIV200907888
NR 90
TC 7
Z9 7
U1 1
U2 7
PU ASSOC COMPUTING MACHINERY
PI NEW YORK
PA 1601 Broadway, 10th Floor, NEW YORK, NY USA
SN 1049-331X
EI 1557-7392
J9 ACM T SOFTW ENG METH
JI ACM Trans. Softw. Eng. Methodol.
PD OCT
PY 2022
VL 31
IS 4
AR 80
DI 10.1145/3511701
PG 46
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 4V3NS
UT WOS:000859387700024
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Gao, CY
   Zhou, WJ
   Xia, X
   Lo, D
   Xie, Q
   Lyu, MR
AF Gao, Cuiyun
   Zhou, Wenjie
   Xia, Xin
   Lo, David
   Xie, Qi
   Lyu, Michael R.
TI Automating App Review Response Generation Based on Contextual Knowledge
SO ACM TRANSACTIONS ON SOFTWARE ENGINEERING AND METHODOLOGY
LA English
DT Review
DE User reviews; retrieved responses; app descriptions; pointer-generator
   network
AB User experience of mobile apps is an essential ingredient that can influence the user base and app revenue. To ensure good user experience and assist app development, several prior studies resort to analysis of app reviews, a type of repository that directly reflects user opinions about the apps. Accurately responding to the app reviews is one of the ways to relieve user concerns and thus improve user experience. However, the response quality of the existing method relies on the pre-extracted features from other tools, including manually labelled keywords and predicted review sentiment, which may hinder the generalizability and flexibility of the method. In this article, we propose a novel neural network approach, named CoRe, with the contextual knowledge naturally incorporated and without involving external tools. Specifically, CoRe integrates two types of contextual knowledge in the training corpus, including official app descriptions from app store and responses of the retrieved semantically similar reviews, for enhancing the relevance and accuracy of the generated review responses. Experiments on practical review data show that CoRe can outperform the state-of-the-art method by 12.36% in terms of BLEU-4, an accuracy metric that is widely used to evaluate text generation systems.
C1 [Gao, Cuiyun] Harbin Inst Technol, Shenzhen, Peoples R China.
   [Zhou, Wenjie; Xie, Qi] Southwest Minzu Univ, Key Lab Comp Syst State Ethn Affairs Commiss, Chengdu, Sichuan, Peoples R China.
   [Xia, Xin] Huawei, Software Engn Applicat Technol Lab, Shenzhen, Peoples R China.
   [Lo, David] Singapore Management Univ, Singapore, Singapore.
   [Lyu, Michael R.] Chinese Univ Hong Kong, Hong Kong, Peoples R China.
C3 Harbin Institute of Technology; Southwest Minzu University; Huawei
   Technologies; Singapore Management University; Chinese University of
   Hong Kong
RP Xie, Q (corresponding author), Southwest Minzu Univ, Key Lab Comp Syst State Ethn Affairs Commiss, Chengdu, Sichuan, Peoples R China.
EM gaocuiyun@hit.edu.cn; zhouwenjie2@stu.swun.edu.cn; xin.xia@acm.org;
   davidlo@smu.edu.sg; qi.xie.swun@gmail.com; lyu@cse.cuhk.edu.hk
RI Lo, David/A-2493-2012
OI Lo, David/0000-0002-4367-7201
FU National Natural Science Foundation of China [61502401, 62002084];
   Research Grants Council of the Hong Kong Special Administrative Region,
   China [CUHK 14210717]; National Research Foundation, Singapore under its
   Industry Alignment Fund -Pre-positioning (IAF-PP) Funding Initiative
FX This work was supported by the National Natural Science Foundation of
   China under project No. 62002084, the National Natural Science
   Foundation of China under project No. 61502401, the Research Grants
   Council of the Hong Kong Special Administrative Region, China (CUHK
   14210717), the National Research Foundation, Singapore under its
   Industry Alignment Fund -Pre-positioning (IAF-PP) Funding Initiative.
CR Ahmed S. E., 2006, TECHNOMETRICS, V48, P573
   Al-Subaihin AA, 2016, ESEM'16: PROCEEDINGS OF THE 10TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, DOI 10.1145/2961111.2962600
   Ali N, 2013, IEEE T SOFTWARE ENG, V39, P725, DOI 10.1109/TSE.2012.71
   [Anonymous], 2015, Advances in neural information processing systems
   App Revenue, 2018, MOB APP US
   Apple Inc, 2021, RAT REV RESP APP STO
   Arthur P., 2016, P 2016 C EMP METH NA, P1557, DOI DOI 10.18653/V1/D16-1162
   Bahdanau D, 2016, Arxiv, DOI [arXiv:1409.0473, 10.48550/arXiv.1409.0473]
   Banerjee S, 2005, ACL WORKSHOP INTRINS, P65
   Chen Grace, 2011, P 24 INT FLORIDA ART
   Chen N, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P767, DOI 10.1145/2568225.2568263
   Cho K., 2014, ARXIV14061078
   Chung Junyoung, 2014, ARXIV14123555
   Ciurumelea A, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P91, DOI 10.1109/SANER.2017.7884612
   Devlin J, 2019, 2019 CONFERENCE OF THE NORTH AMERICAN CHAPTER OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS: HUMAN LANGUAGE TECHNOLOGIES (NAACL HLT 2019), VOL. 1, P4171
   Devlin Jacob, 2021, BERT REPOSITORY
   Di Sorbo A, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P499, DOI 10.1145/2950290.2950299
   Facebook Community Bot, 2021, PYTORCH
   Fan YR, 2020, IEEE T SOFTWARE ENG, V46, P495, DOI 10.1109/TSE.2018.2864217
   Finkelstein A, 2017, INFORM SOFTWARE TECH, V87, P119, DOI 10.1016/j.infsof.2017.03.002
   Gao CY, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P163, DOI 10.1109/ASE.2019.00025
   Gao CY, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P48, DOI 10.1145/3180155.3180218
   Gao CY, 2015, 2015 IEEE 26TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING (ISSRE), P35, DOI 10.1109/ISSRE.2015.7381797
   Gao JF, 2019, FOUND TRENDS INF RET, V13, P127, DOI 10.1561/1500000074
   Genc-Nayebi N, 2017, J SYST SOFTWARE, V125, P207, DOI 10.1016/j.jss.2016.11.027
   Google Inc, 2021, CHAR LIM GOOGL PLAY
   Google Inc, 2021, VIEW AN YOUR APPS RA
   Grano G, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P72, DOI 10.1109/SANER.2018.8330198
   Gu XD, 2015, IEEE INT CONF AUTOM, P760, DOI 10.1109/ASE.2015.57
   Guzman E, 2014, INT REQUIR ENG CONF, P153, DOI 10.1109/RE.2014.6912257
   Harman M, 2016, 2016 IEEE/ACM INTERNATIONAL CONFERENCE ON MOBILE SOFTWARE ENGINEERING AND SYSTEMS (MOBILESOFT 2016), P243, DOI 10.1109/MobileSoft.2016.051
   Hassan S, 2018, EMPIR SOFTW ENG, V23, P1275, DOI 10.1007/s10664-017-9538-9
   Hu X, 2018, INT C PROGRAM COMPRE, P200, DOI 10.1145/3196321.3196334
   Iacob C, 2013, IEEE WORK CONF MIN S, P41, DOI 10.1109/MSR.2013.6624001
   Iacob Claudia, 2013, 27 INT BCS HUM COMP, DOI DOI 10.14236/EWIC/HCI2013.38
   Ji ZC, 2014, Arxiv, DOI arXiv:1408.6988
   Jiang SY, 2017, IEEE INT CONF AUTOM, P135, DOI 10.1109/ASE.2017.8115626
   Kingma D. P., 2014, arXiv
   Li J., 2016, EMNLP, DOI [DOI 10.18653/V1/D16-1127.URL, 10.18653/v1/D16-1127, DOI 10.18653/V1/D16-1127]
   Liashchynskyi P, 2019, Arxiv, DOI [arXiv:1912.06059, 10.48550/arXiv.1912.06059]
   Likert R., 1932, ARCH PSYCHOL, V140, P53
   Lin CY, 2004, ROUGE: A Package for Automatic Evaluation of Summaries, P74, DOI DOI 10.1253/JCJ.34.1213
   Liu C, 2020, Arxiv, DOI arXiv:2006.14244
   Liu Chia-Wei, 2016, P 2016 C EMPIRICAL M, P2122, DOI [10.18653/v1/D16-1230, DOI 10.18653/V1/D16-1230]
   Liu ZX, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P176, DOI 10.1109/ASE.2019.00026
   Liu ZX, 2018, IEEE INT CONF AUTOM, P373, DOI 10.1145/3238147.3238190
   Luiz W, 2018, WEB CONFERENCE 2018: PROCEEDINGS OF THE WORLD WIDE WEB CONFERENCE (WWW2018), P1909, DOI 10.1145/3178876.3186168
   McIlroy S, 2017, IEEE SOFTWARE, V34, P64, DOI 10.1109/MS.2015.149
   Mikolov Tomas, 2013, Advances in Neural Information Processing Systems, P3111, DOI DOI 10.48550/ARXIV.1310.4546
   Nayebi M, 2017, INT SYMP EMP SOFTWAR, P324, DOI 10.1109/ESEM.2017.46
   Oh Jeungmin, 2013, Proceedings of the ACM SIGCHI Conference on Human Factors in Computing Systems, CHI'13, P1809
   Papineni K, 2002, 40TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, PROCEEDINGS OF THE CONFERENCE, P311, DOI 10.3115/1073083.1073135
   Pennington J., 2014, P 2014 C EMP METH NA, P1532
   Vu PM, 2015, IEEE INT CONF AUTOM, P749, DOI 10.1109/ASE.2015.85
   Razis G, 2021, INFORMATION, V12, DOI 10.3390/info12020049
   Ritter Alan, 2011, P C EMP METH NAT LAN, P583
   Rose D., 2010, TEXT MINING APPL THE, V1, P1, DOI [DOI 10.1002/9780470689646.CH1, 10.1002/9780470689646.CH1]
   Sanderson M, 2010, NAT LANG ENG, V16, P100, DOI 10.1017/S1351324909005129
   See A, 2017, PROCEEDINGS OF THE 55TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (ACL 2017), VOL 1, P1073, DOI 10.18653/v1/P17-1099
   Sennrich Rico, 2017, P SOFTW DEM 15 C EUR, P65
   Shang LF, 2015, PROCEEDINGS OF THE 53RD ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS AND THE 7TH INTERNATIONAL JOINT CONFERENCE ON NATURAL LANGUAGE PROCESSING, VOL 1, P1577
   SOKOMedia, 2019, APP DOWNL US STAT 20
   Srisopha Kamonphop, 2020, EASE2020. Proceedings of the Evaluation and Assessment in Software Engineering, P336, DOI 10.1145/3383219.3383258
   Statista Inc, 2019, NUMB APPS AV LEAD AP
   Sutskever I., 2014, ADV NEURAL INFORM PR, V4, P3104, DOI DOI 10.5555/2969033.2969173
   Tencent Inc, 2021, TENC ONL QUEST
   Thelwall M, 2010, J AM SOC INF SCI TEC, V61, P2544, DOI 10.1002/asi.21416
   Tipping ME, 1999, J R STAT SOC B, V61, P611, DOI 10.1111/1467-9868.00196
   Villarroel L, 2016, PROC INT CONF SOFTW, P14, DOI 10.1145/2884781.2884818
   Wilcoxon Frank, 1992, BREAKTHROUGHS STAT, P196, DOI [DOI 10.1007/978-1-4612-4380-9_16, 10.1007/978-1-4612-4380-9_16, DOI 10.1007/978-1-4612-4380-9]
   Wu S., 2020, P 58 ANN M ASS COMP, P5811, DOI 10.18653/v1/2020.acl-main.515
   Wu ZZ, 2016, INT CONF ACOUST SPEE, P5140, DOI 10.1109/ICASSP.2016.7472657
   Yang L, 2019, PROCEEDINGS OF THE 28TH ACM INTERNATIONAL CONFERENCE ON INFORMATION & KNOWLEDGE MANAGEMENT (CIKM '19), P1341, DOI 10.1145/3357384.3357881
   Yang XL, 2016, PROC INT SYMP SOFTW, P127, DOI 10.1109/ISSRE.2016.33
   Yu Y, 2019, NEURAL COMPUT, V31, P1235, DOI 10.1162/neco_a_01199
   Zhang Jingyi, 2018, Long Papers, V1, P1325
NR 76
TC 3
Z9 3
U1 2
U2 9
PU ASSOC COMPUTING MACHINERY
PI NEW YORK
PA 1601 Broadway, 10th Floor, NEW YORK, NY USA
SN 1049-331X
EI 1557-7392
J9 ACM T SOFTW ENG METH
JI ACM Trans. Softw. Eng. Methodol.
PD JAN
PY 2022
VL 31
IS 1
AR 11
DI 10.1145/3464969
PG 36
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 5L8HX
UT WOS:000870650700011
OA Green Accepted, Green Submitted
DA 2024-07-18
ER

PT J
AU Zhou, YQ
   Siow, JK
   Wang, CY
   Liu, SQ
   Liu, Y
AF Zhou, Yaqin
   Siow, Jing Kai
   Wang, Chenyu
   Liu, Shangqing
   Liu, Yang
TI SPI: Automated Identification of Security Patches via Commits
SO ACM TRANSACTIONS ON SOFTWARE ENGINEERING AND METHODOLOGY
LA English
DT Article
DE Machine learning; deep learning; software security
AB Security patches in open source software, providing security fixes to identified vulnerabilities, are crucial in protecting against cyber attacks. Security advisories and announcements are often publicly released to inform the users about potential security vulnerability. Despite the National Vulnerability Database (NVD) publishes identified vulnerabilities, a vastmajority of vulnerabilities and their corresponding security patches remain beyond public exposure, e.g., in the open source libraries that are heavily relied on by developers. As many of these patches exist in open sourced projects, the problem of curating and gathering security patches can be difficult due to their hidden nature. An extensive and complete security patches dataset could help end-users such as security companies, e.g., building a security knowledge base, or researcher, e.g., aiding in vulnerability research.
   To efficiently curate security patches including undisclosed patches at large scale and low cost, we propose a deep neural-network-based approach built upon commits of open source repositories. First, we design and build security patch datasets that include 38,291 security-related commits and 1,045 Common Vulnerabilities and Exposures (CVE) patches from four large-scale C programming language libraries. We manually verify each commit, among the 38,291 security-related commits, to determine if they are security related.
   We devise and implement a deep learning-based security patch identification system that consists of two composite neural networks: one commit-message neural network that utilizes pretrained word representations learned from our commits dataset and one code-revision neural network that takes code before revision and after revision and learns the distinction on the statement level. Our system leverages the power of the two networks for Security Patch Identification. Evaluation results show that our system significantly outperforms SVM and K-fold stacking algorithms. The result on the combined dataset achieves as high as 87.93% F1-score and precision of 86.24%.
   We deployed our pipeline and learned model in an industrial production environment to evaluate the generalization ability of our approach. The industrial dataset consists of 298,917 commits from 410 new libraries that range from a wide functionalities. Our experiment results and observation on the industrial dataset proved that our approach can identify security patches effectively among open sourced projects.
C1 [Zhou, Yaqin; Siow, Jing Kai; Wang, Chenyu; Liu, Shangqing; Liu, Yang] Nanyang Technol Univ, 50 Nanyang Ave,32 Block N4-B2c-06, Singapore 639798, Singapore.
C3 Nanyang Technological University
RP Zhou, YQ (corresponding author), Nanyang Technol Univ, 50 Nanyang Ave,32 Block N4-B2c-06, Singapore 639798, Singapore.
EM yaqinchou@gmail.com; jingkai001@e.ntu.edu.sg; CWANG014@e.ntu.edu.sg;
   shangqin001@e.ntu.edu.sg; yangliu@ntu.edu.sg
FU National Research Foundation, Singapore under its the AI Singapore
   Programme [AISG2-RP-2020-019]; National Research Foundation, Prime
   Ministers Office, Singapore under its National Cybersecurity RD Program
   [NRF2018NCR-NCR005-0001]; NRF Investigatorship [NRF-NRFI06-2020-0001];
   National Research Foundation through its National Satellite of
   Excellence in Trustworthy Software Systems (NSOE-TSS) project under the
   National Cybersecurity RD (NCR) [NRF2018NCR-NSOE003-0001]; NVIDIA AI
   Tech Center (NVAITC)
FX This research is partially supported by the National Research
   Foundation, Singapore under its the AI Singapore Programme
   (AISG2-RP-2020-019), the National Research Foundation, Prime Ministers
   Office, Singapore under its National Cybersecurity R&D Program (Award
   No. NRF2018NCR-NCR005-0001), NRF Investigatorship NRF-NRFI06-2020-0001,
   the National Research Foundation through its National Satellite of
   Excellence in Trustworthy Software Systems (NSOE-TSS) project under the
   National Cybersecurity RD (NCR) Grant award no. NRF2018NCR-NSOE003-0001.
   We gratefully acknowledge the support of NVIDIA AI Tech Center (NVAITC)
   to our research. Authors' address: Y. Zhou, J. K. Siow, C. Wang, S. Liu,
   and Y. Liu, Nanyang Technological University, 50 Nanyang Ave, 32 Block
   N4-B2c-06, Singapore 639798; emails: yaqinchou@gmail.com, {jingkai001,
   CWANG014, shangqin001}@e.ntu.edu.sg,yangliu@ntu.edu.sg.
CR Harer JA, 2018, Arxiv, DOI [arXiv:1803.04497, 10.48550/arXiv.1803.04497]
   Abadi M., 2015, Large-Scale Machine Learning on Heterogeneous Systems
   Ahmed T, 2017, IEEE INT CONF AUTOM, P106, DOI 10.1109/ASE.2017.8115623
   Alon U, 2019, P ACM PROGRAM LANG, V3, DOI 10.1145/3290353
   [Anonymous], 2010, CVE 2010 5329
   [Anonymous], 2020, VULNDB 2020
   [Anonymous], 2017, MACHINE LEARNING SOU
   [Anonymous], 2017, CVE 2017 7187
   [Anonymous], Buffer Overflow
   [Anonymous], 2020, OPEN SOURCED SECURIT
   [Anonymous], 2019, PYGMENTS
   [Anonymous], SOFTWARE COMPOSITION
   [Anonymous], 2017, CVE 2017 5638
   [Anonymous], 2017, SILENTLY OR OBLIVIOU
   [Anonymous], MODULE COUNTS
   [Anonymous], 2015, CVE 2015 8952
   [Anonymous], 2019, STATE OPEN SOURCE SE
   [Anonymous], 2019, Checkmarx
   [Anonymous], A null pointer dereference
   [Anonymous], BUFFER OVERREADS
   [Anonymous], 2019, CVEDETAILS CVE NUMBE
   [Anonymous], UNINITIALIZED VARIAB
   [Anonymous], FFMPEG SECURITY PATC
   [Anonymous], 2019, SOFTWARE ASSURANCE R
   [Anonymous], 2020, National vulnerability database
   Bilge L, 2017, CCS'17: PROCEEDINGS OF THE 2017 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P1299, DOI 10.1145/3133956.3134022
   Bugzilla Redhat, 2020, US
   Lipton ZC, 2015, Arxiv, DOI [arXiv:1506.00019, DOI 10.48550/ARXIV.1506.00019]
   Chen Y, 2020, 2020 IEEE/ACM 42ND INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE (ICSE-SEIP), P90, DOI 10.1145/3377813.3381360
   Chen Y, 2020, IEEE WORK CONF MIN S, P32, DOI 10.1145/3379597.3387461
   Chernis B, 2018, IWSPA '18: PROCEEDINGS OF THE FOURTH ACM INTERNATIONAL WORKSHOP ON SECURITY AND PRIVACY ANALYTICS, P31, DOI 10.1145/3180445.3180453
   Conneau A, 2017, 15TH CONFERENCE OF THE EUROPEAN CHAPTER OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (EACL 2017), VOL 1: LONG PAPERS, P1107
   Dinella E., 2020, INT C LEARN REPR ICL
   Goodfellow I, 2016, ADAPT COMPUT MACH LE, P1
   Google OSS-Fuzz, 2020, US
   Gu XD, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P933, DOI 10.1145/3180155.3180167
   Gu XD, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P631, DOI 10.1145/2950290.2950334
   Gupta R, 2017, AAAI CONF ARTIF INTE, P1345
   Hellendoorn VJ, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P152, DOI 10.1145/3236024.3236051
   Hindle A., 2011, Automated topic naming to support cross-project analysis of software maintenance activities, P163
   Dam HK, 2021, IEEE T SOFTWARE ENG, V47, P67, DOI 10.1109/TSE.2018.2881961
   Hoang T, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: COMPANION PROCEEDINGS (ICSE-COMPANION 2019), P87, DOI 10.1109/ICSE-Companion.2019.00044
   Huo X., 2016, IJCAI, P1606
   Kim Y, 2014, ARXIV PREPRINT ARXIV, DOI 10.3115/v1/D14-1181
   Kingma D.P., 2014, ARXIV14126980
   Russell RL, 2018, Arxiv, DOI [arXiv:1807.04320, DOI 10.48550/ARXIV.1807.04320]
   Li F, 2017, CCS'17: PROCEEDINGS OF THE 2017 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P2201, DOI 10.1145/3133956.3134072
   Li Y, 2016, P 4 INT C LEARNING R
   Li Y, 2020, PROC INT CONF SOFTW, P602, DOI 10.1145/3377811.3380345
   Li Z, 2021, Arxiv, DOI arXiv:1807.06756
   Li Z, 2018, 25TH ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2018), DOI 10.14722/ndss.2018.23158
   Liu S., 2021, P INT C LEARNING REP
   Liu S., 2020, Proceedings-2020 35th IEEE/ACM International Conference on Automated Software Engineering, ASE, P1364, DOI DOI 10.1145/3324884.3418924
   Liu SQ, 2022, IEEE T SOFTWARE ENG, V48, P1800, DOI 10.1109/TSE.2020.3038681
   Mikolov Tomas, 2013, Advances in Neural Information Processing Systems, P3111, DOI DOI 10.48550/ARXIV.1310.4546
   Mou LL, 2016, AAAI CONF ARTIF INTE, P1287
   Pang Y., 2017, Proceedings of the 2017 International Conference on Deep Learning Technologies - ICDLT '17, P6, DOI DOI 10.1145/3094243.3094245
   Perl H, 2015, CCS'15: PROCEEDINGS OF THE 22ND ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P426, DOI 10.1145/2810103.2813604
   Peters F, 2019, IEEE T SOFTWARE ENG, V45, P615, DOI 10.1109/TSE.2017.2787653
   Pletea D., 2014, 11 WORKING C MSR, P348, DOI [10.1145/2597073.2597117, DOI 10.1145/2597073.2597117]
   Pournelle G. H., 1953, Journal of Mammalogy, V34, P133, DOI 10.1890/0012-9658(2002)083[1421:SDEOLC]2.0.CO;2
   Pradel M, 2018, P ACM PROGRAM LANG, V2, DOI 10.1145/3276517
   Rajaraman Anand, 2011, Mining of Massive Datasets
   Ray B, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P155, DOI 10.1145/2635868.2635922
   Raychev V, 2014, ACM SIGPLAN NOTICES, V49, P419, DOI [10.1145/2594291.2594321, 10.1145/2666356.2594321]
   Russell RL, 2018, 2018 17TH IEEE INTERNATIONAL CONFERENCE ON MACHINE LEARNING AND APPLICATIONS (ICMLA), P757, DOI 10.1109/ICMLA.2018.00120
   Shin Y, 2011, IEEE T SOFTWARE ENG, V37, P772, DOI 10.1109/TSE.2010.81
   Shin Y, 2008, ESEM'08: PROCEEDINGS OF THE 2008 ACM-IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, P315
   Siow JK, 2020, PROCEEDINGS OF THE 2020 IEEE 27TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER '20), P284, DOI [10.1109/SANER48275.2020.9054794, 10.1109/saner48275.2020.9054794]
   Tufano M, 2018, IEEE INT CONF AUTOM, P832, DOI 10.1145/3238147.3240732
   Wang J, 2017, PROCEEDINGS OF THE TWENTY-SIXTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P2915
   Wang S, 2016, PROC INT CONF SOFTW, P297, DOI 10.1145/2884781.2884804
   Wang XD, 2019, I C DEPEND SYS NETWO, P485, DOI 10.1109/DSN.2019.00056
   White M, 2016, IEEE INT CONF AUTOM, P87, DOI 10.1145/2970276.2970326
   Yang XL, 2015, 2015 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE SECURITY AND RELIABILITY (QRS 2015), P17, DOI 10.1109/QRS.2015.14
   Zhou YQ, 2019, ADV NEUR IN, V32
   Zhou YQ, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P914, DOI 10.1145/3106237.3117771
   Zimmermann Thomas, 2010, Proceedings of the Third IEEE International Conference on Software Testing, Verification and Validation (ICST 2010), P421, DOI 10.1109/ICST.2010.32
NR 78
TC 19
Z9 21
U1 0
U2 9
PU ASSOC COMPUTING MACHINERY
PI NEW YORK
PA 1601 Broadway, 10th Floor, NEW YORK, NY USA
SN 1049-331X
EI 1557-7392
J9 ACM T SOFTW ENG METH
JI ACM Trans. Softw. Eng. Methodol.
PD JAN
PY 2022
VL 31
IS 1
AR 13
DI 10.1145/3468854
PG 27
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 5L8HX
UT WOS:000870650700013
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Vandehei, B
   Da Costa, DA
   Falessi, D
AF Vandehei, Bailey
   Da Costa, Daniel Alencar
   Falessi, Davide
TI Leveraging the Defects Life Cycle to Label Affected Versions and
   Defective Classes
SO ACM TRANSACTIONS ON SOFTWARE ENGINEERING AND METHODOLOGY
LA English
DT Article
DE Affected version; SZZ; defect origin; developing defects repository
ID SOFTWARE; PREDICTION; VALIDATION; QUALITY; METRICS
AB Two recent studies explicitly recommend labeling defective classes in releases using the affected versions (AV) available in issue trackers (e.g., Jira). This practice is coined as the realistic approach. However, no study has investigated whether it is feasible to rely on AVs. For example, how available and consistent is the AV information on existing issue trackers? Additionally, no study has attempted to retrieve AVs when they are unavailable. The aim of our study is threefold: (1) to measure the proportion of defects for which the realistic method is usable, (2) to propose a method for retrieving the AVs of a defect, thus making the realistic approach usable when AVs are unavailable, (3) to compare the accuracy of the proposed method versus three SZZ implementations. The assumption of our proposed method is that defects have a stable life cycle in terms of the proportion of the number of versions affected by the defects before discovering and fixing these defects. Results related to 212 open-source projects from the Apache ecosystem, featuring a total of about 125,000 defects, reveal that the realistic method cannot be used in the majority (51%) of defects. Therefore, it is important to develop automated methods to retrieve AVs. Results related to 76 open-source projects from the Apache ecosystem, featuring a total of about 6,250,000 classes, affected by 60,000 defects, and spread over 4,000 versions and 760,000 commits, reveal that the proportion of the number of versions between defect discovery and fix is pretty stable (standard deviation <2)-across the defects of the same project. Moreover, the proposed method resulted significantly more accurate than all three SZZ implementations in (i) retrieving AVs, (ii) labeling classes as defective, and (iii) in developing defects repositories to perform feature selection. Thus, when the realistic method is unusable, the proposed method is a valid automated alternative to SZZ for retrieving the origin of a defect. Finally, given the low accuracy of SZZ, researchers should consider reexecuting the studies that have used SZZ as an oracle and, in general, should prefer selecting projects with a high proportion of available and consistent AVs.
C1 [Vandehei, Bailey] Calif Polytech State Univ San Luis Obispo, 3940-7 Broad St 257, San Luis Obispo, CA 93401 USA.
   [Da Costa, Daniel Alencar] Univ Otago, 60 Clyde St, Dunedin 09016, New Zealand.
   [Falessi, Davide] Univ Roma Tor Vergata, Via Politecn 1, I-00133 Rome, Italy.
C3 California State University System; California Polytechnic State
   University San Luis Obispo; University of Otago; University of Rome Tor
   Vergata
RP Vandehei, B (corresponding author), Calif Polytech State Univ San Luis Obispo, 3940-7 Broad St 257, San Luis Obispo, CA 93401 USA.
EM bvandehe@calpoly.edu; danielcalencar@otago.ac.nz;
   falessi@ing.uniroma2.it
CR Ahluwalia Aalok, 2019, P 16 INT C MIN SOFTW
   [Anonymous], 1998, CORRELATION BASED FE
   [Anonymous], 2017, IEEE T SOFTWARE ENG, DOI DOI 10.1109/TSE.2016.2584050
   [Anonymous], 1977, Elements of software science
   Asaduzzaman M., 2012, 2012 9th IEEE Working Conference on Mining Software Repositories (MSR 2012), P116, DOI 10.1109/MSR.2012.6224267
   Basili VR, 1996, IEEE T SOFTWARE ENG, V22, P751, DOI 10.1109/32.544352
   Bernardi ML, 2012, EUR CON SFTWR MTNCE, P139, DOI 10.1109/CSMR.2012.24
   Bird C, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P121, DOI 10.1145/1595696.1595716
   Borg M, 2019, PROCEEDINGS OF THE 3RD ACM SIGSOFT INTERNATIONAL WORKSHOP ON MACHINE LEARNING TECHNIQUES FOR SOFTWARE QUALITY EVALUATION (MALTESQUE '19), P7, DOI 10.1145/3340482.3342742
   Borg Markus, 2019, CORR
   Neto EC, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P380, DOI 10.1109/SANER.2018.8330225
   Chen JF, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P916, DOI 10.1145/3338906.3340450
   Chen T, 2014, PROCEEDINGS OF THE FIFTH INTERNATIONAL SYMPOSIUM ON TEST AUTOMATION & INSTRUMENTATION, VOLS 1 AND 2, P82
   COHEN J, 1960, EDUC PSYCHOL MEAS, V20, P37, DOI 10.1177/001316446002000104
   D'Ambros M, 2012, EMPIR SOFTW ENG, V17, P531, DOI 10.1007/s10664-011-9173-9
   da Costa DA, 2017, IEEE T SOFTWARE ENG, V43, P641, DOI 10.1109/TSE.2016.2616306
   DUNN OJ, 1964, TECHNOMETRICS, V6, P241, DOI 10.2307/1266041
   Eyolfson J., 2011, WORKING C MINING SOF, P153, DOI DOI 10.1145/1985441.1985464
   Eyolfson Jon, 2011, P 8 INT WORK C MIN S, P153, DOI [10.1145/1985441.1985464, DOI 10.1145/1985441.1985464]
   Falessi D, 2018, PROCEEDINGS OF THE 4TH ACM SIGSOFT INTERNATIONAL WORKSHOP ON SOFTWARE ANALYTICS (SWAN'18), P15, DOI 10.1145/3278142.3278147
   Falessi D, 2017, INT SYMP EMP SOFTWAR, P151, DOI 10.1109/ESEM.2017.22
   Falessi D, 2017, INT SYMP EMP SOFTWAR, P78, DOI 10.1109/ESEM.2017.14
   Falessi D, 2014, IEEE SOFTWARE, V31, P80, DOI 10.1109/MS.2014.17
   Fan Yuanrui, 2019, IEEE Transactions on Software Engineering
   Fu W, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P72, DOI 10.1145/3106237.3106257
   Fu W, 2016, INFORM SOFTWARE TECH, V76, P135, DOI 10.1016/j.infsof.2016.04.017
   Fukushima T., 2014, Proceedings of the 11th Working Conference on Mining Software Repositories, MSR 2014, P172, DOI DOI 10.1145/2597073.2597075
   Gao KH, 2011, SOFTWARE PRACT EXPER, V41, P579, DOI 10.1002/spe.1043
   Ghotra B, 2017, IEEE WORK CONF MIN S, P146, DOI 10.1109/MSR.2017.18
   Gousios G, 2014, EMPIR SOFTW ENG, V19, P885, DOI 10.1007/s10664-013-9242-3
   Herbold S, 2017, IEEE T SOFTWARE ENG, V43, P1091, DOI 10.1109/TSE.2017.2748129
   Herzig K, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P392, DOI 10.1109/ICSE.2013.6606585
   HOLM S, 1979, SCAND J STAT, V6, P65
   Jiang T, 2013, IEEE INT CONF AUTOM, P279, DOI 10.1109/ASE.2013.6693087
   Kamei Y., 2010, Proceedings of the 26th International Conference on Software Maintenance, P1, DOI 10.1109/ICSM.2010.5609530
   Kamei Y, 2016, EMPIR SOFTW ENG, V21, P2072, DOI 10.1007/s10664-015-9400-x
   Kamei Y, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 5, P33, DOI 10.1109/SANER.2016.56
   Kamei Y, 2013, IEEE T SOFTWARE ENG, V39, P757, DOI 10.1109/TSE.2012.70
   Kim S, 2008, IEEE T SOFTWARE ENG, V34, P181, DOI 10.1109/TSE.2007.70773
   Kim S, 2007, PROC INT CONF SOFTW, P489
   Kim S, 2006, IEEE INT CONF AUTOM, P81
   Kim S, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P481, DOI 10.1145/1985793.1985859
   Kochhar Pavneet Singh, 2014, P 2 ACM IEEE INT C, P803, DOI DOI 10.1145/2642937.2642997
   Kondo M, 2019, EMPIR SOFTW ENG, V24, P1925, DOI 10.1007/s10664-018-9679-5
   KRUSKAL WH, 1952, J AM STAT ASSOC, V47, P583, DOI 10.1080/01621459.1952.10483441
   liwerski J, 2005, ACM SIGSOFT SOFTWARE, V30, P1, DOI [10.1145/1082983.1083147, DOI 10.1145/1083142.1083147, DOI 10.1145/1082983.1083147]
   Madhavan Janaki T., 2007, P 2007 OOPSLA WORKSH, P36, DOI [10.1145/1328279.1328287, DOI 10.1145/1328279.1328287]
   McCabe T. J., 1976, IEEE Transactions on Software Engineering, VSE-2, P308, DOI 10.1109/TSE.1976.233837
   McIntosh S, 2018, IEEE T SOFTWARE ENG, V44, P412, DOI 10.1109/TSE.2017.2693980
   Munaiah N, 2017, EMPIR SOFTW ENG, V22, P3219, DOI 10.1007/s10664-017-9512-6
   Nagappan M, 2013, 2013 9 JOINT M EUR S, P466, DOI [DOI 10.1145/2491411.2491415, 10.1145/2491411.2491415]
   Nam J., 2017, IEEE Transactions on Software Engineering, V44, P874, DOI 10.1109/TSE.2017.2720603
   Nam J, 2015, IEEE INT CONF AUTOM, P452, DOI 10.1109/ASE.2015.56
   Panichella A, 2016, GECCO'16: PROCEEDINGS OF THE 2016 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P1077, DOI 10.1145/2908812.2908938
   Rahman Foyzur, 2010, Proceedings of the 2010 7th IEEE Working Conference on Mining Software Repositories (MSR 2010), P72, DOI 10.1109/MSR.2010.5463343
   Rahman F, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P432, DOI 10.1109/ICSE.2013.6606589
   Rahman F, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P491, DOI 10.1145/1985793.1985860
   Rahman Foyzur, 2013, P 2013 9 JOINT M FDN, P147
   Rodenhuis-Zybert IA, 2010, CELL MOL LIFE SCI, V67, P2773, DOI 10.1007/s00018-010-0357-z
   Rodríguez-Pérez G, 2018, PROCEEDINGS OF THE 12TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT (ESEM 2018), DOI 10.1145/3239235.3267436
   Rodríguez-Pérez G, 2018, INFORM SOFTWARE TECH, V99, P164, DOI 10.1016/j.infsof.2018.03.009
   Rodriguez-Perez Gema, EMPIRICAL SOFTWARE E, P1
   Rozenberg D, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P109, DOI [10.1109/MSR.2016.020, 10.1145/2901739.2901768]
   Scanniello G, 2013, IEEE INT CONF AUTOM, P640, DOI 10.1109/ASE.2013.6693126
   SHAPIRO SS, 1965, BIOMETRIKA, V52, P591, DOI 10.1093/biomet/52.3-4.591
   Shepperd M, 2013, IEEE T SOFTWARE ENG, V39, P1208, DOI 10.1109/TSE.2013.11
   Shirabad J.S., 2005, The PROMISE Repository of Software Engineering Databases
   Shivaji S, 2009, IEEE INT CONF AUTOM, P600, DOI 10.1109/ASE.2009.76
   Sliwerski Jacek, 2005, P 2005 INT WORKSH MI, P1, DOI [10.1145/1082983.1083147, DOI 10.1145/1082983.1083147]
   Tantithamthavorn C, 2019, IEEE T SOFTWARE ENG, V45, P683, DOI 10.1109/TSE.2018.2794977
   Tantithamthavorn C, 2016, PROC INT CONF SOFTW, P321, DOI 10.1145/2884781.2884857
   Tantithamthavorn C, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P812, DOI 10.1109/ICSE.2015.93
   Vaswani Kapil, 2010, U.S. Patent App, Patent No. [12/469,850, 12469850]
   Weiss C, 2007, P 4 INT WORKSH MIN S, P1, DOI [10.1109/MSR.2007.13, DOI 10.1109/MSR.2007.13]
   Witten IH, 2011, MOR KAUF D, P1
   Wohlin C., 2012, Experimentation in Software Engineering
   Xiaoxing Yang, 2012, Intelligent Data Engineering and Automated Learning - IDEAL 2012. Proceedings 13th International Conference, P167, DOI 10.1007/978-3-642-32639-4_21
   Yang XX, 2015, IEEE T RELIAB, V64, P234, DOI 10.1109/TR.2014.2370891
   Yang XL, 2015, 2015 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE SECURITY AND RELIABILITY (QRS 2015), P17, DOI 10.1109/QRS.2015.14
   Yang YB, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P157, DOI 10.1145/2950290.2950353
   Yatish S, 2019, PROC INT CONF SOFTW, P654, DOI 10.1109/ICSE.2019.00075
   Yeh Arthur B., 2005, TECHNOMETRICS, V47, P239, DOI [10.1198/tech.2005.s266, DOI 10.1198/TECH.2005.S266]
   Yu X, 2019, 2019 IEEE 26TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER), P298, DOI [10.1109/SANER.2019.8668033, 10.1109/saner.2019.8668033]
   Yu Xiao, 2019, IEEE T RELIABILITY
   Zimmermann Thomas, 2007, P 3 INT WORKSH PRED, V9
NR 85
TC 6
Z9 6
U1 0
U2 0
PU ASSOC COMPUTING MACHINERY
PI NEW YORK
PA 1601 Broadway, 10th Floor, NEW YORK, NY USA
SN 1049-331X
EI 1557-7392
J9 ACM T SOFTW ENG METH
JI ACM Trans. Softw. Eng. Methodol.
PD MAR
PY 2021
VL 30
IS 2
AR 24
DI 10.1145/3433928
PG 35
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA QY7ND
UT WOS:000630223200013
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Bagnara, R
   Chiari, M
   Gori, R
   Bagnara, A
AF Bagnara, Roberto
   Chiari, Michele
   Gori, Roberta
   Bagnara, Abramo
TI A Practical Approach to Verification of Floating-Point C/C plus plus
   Programs with math.h/cmath Functions
SO ACM TRANSACTIONS ON SOFTWARE ENGINEERING AND METHODOLOGY
LA English
DT Article
DE Floating-point numbers; constraint propagation; model checking; abstract
   interpretation; program verification; symbolic execution
ID SYMBOLIC EXECUTION; COVERAGE; REAL
AB Verification of C/C++ programs has seen considerable progress in several areas, but not for programs that use these languages' mathematical libraries. The reason is that all libraries in widespread use come with no guarantees about the computed results. This would seem to prevent any attempt at formal verification of programs that use them: without a specification for the functions, no conclusion can be drawn statically about the behavior of the program. We propose an alternative to surrender. We introduce a pragmatic approach that leverages the fact that most math.h/cmath functions are almost piecewise monotonic: as we discovered through exhaustive testing, they may have glitches, often of very small size and in small numbers. We develop interval refinement techniques for such functions based on a modified dichotomic search, which enable verification via symbolic execution based model checking, abstract interpretation, and test data generation. To the best of our knowledge, our refinement algorithms are the first in the literature to be able to handle non-correctly rounded function implementations, enabling verification in the presence of the most common implementations. We experimentally evaluate our approach on real-world code, showing its ability to detect or rule out anomalous behaviors.
C1 [Bagnara, Roberto; Chiari, Michele] Univ Parma, Dept Math Phys & Comp Sci, Parco Area Sci 53-A, I-43124 Parma, Italy.
   [Bagnara, Roberto; Chiari, Michele; Bagnara, Abramo] BUGSENG Srl, Parco Area Sci 53-A, I-43124 Parma, Italy.
   [Chiari, Michele] Politecn Milan, DEIB, Via Camillo Golgi 42, I-20133 Milan, Italy.
   [Gori, Roberta] Univ Pisa, Dept Comp Sci, Largo B Pontecorvo 3, I-56127 Pisa, Italy.
C3 University of Parma; Polytechnic University of Milan; University of Pisa
RP Bagnara, R (corresponding author), Univ Parma, Dept Math Phys & Comp Sci, Parco Area Sci 53-A, I-43124 Parma, Italy.; Bagnara, R (corresponding author), BUGSENG Srl, Parco Area Sci 53-A, I-43124 Parma, Italy.
EM roberto.bagnara@unipr.it; michele.chiari@polimi.it;
   roberta.gori@unipi.it; abramo.bagnara@bugseng.com
RI Chiari, Michele/ABC-3741-2022; Bagnara, Roberto/AAB-3202-2022
OI Chiari, Michele/0000-0001-7742-9233; Bagnara,
   Roberto/0000-0002-6163-6278
CR Analog Devices, 2015, C C COMP LIB MAN BLA
   [Anonymous], 2007, COMPILERS PRINCIPLES
   [Anonymous], 2000, FORMAL METHODS COMPU
   [Anonymous], 2008, 7542008 IEEE, P1, DOI DOI 10.1109/IEEESTD.2008.4610935
   Bagnara R., 2016, ARXIV161007390CSPL
   Bagnara R., 2022, CONSTRAINTS, V308, P1, DOI [10.1007/s10601-021-09322-9, DOI 10.1007/S10601-021-09322-9]
   Bagnara R, 2008, SCI COMPUT PROGRAM, V72, P3, DOI 10.1016/j.scico.2007.08.001
   Bagnara R, 2016, INFORMS J COMPUT, V28, P31, DOI 10.1287/ijoc.2015.0663
   Bagnara R, 2013, 2013 IEEE SIXTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST 2013), P1, DOI 10.1109/ICST.2013.17
   Barr ET, 2013, ACM SIGPLAN NOTICES, V48, P549, DOI 10.1145/2480359.2429133
   Belaid M. S., 2012, PRINCIPLES PRACTICE, V7514, P127
   Benhamou F, 1997, J LOGIC PROGRAM, V32, P1, DOI 10.1016/S0743-1066(96)00142-2
   BENHAMOU F, 1994, MIT PS LOG, P124
   Borges M., 2012, 2012 IEEE Fifth International Conference on Software Testing, Verification and Validation (ICST 2012), P111, DOI 10.1109/ICST.2012.91
   Botella B, 2006, SOFTW TEST VERIF REL, V16, P97, DOI 10.1002/stvr.333
   Brain M, 2013, LECT NOTES COMPUT SC, V7935, P412, DOI 10.1007/978-3-642-38856-9_22
   Burdy L., 2012, P 6 INT C EXH EMB RE
   Cadar C., 2008, Proceedings of the 8th USENIX conference on Operating systems design and implementation, OSDI'08, (USA), P209
   CLARKE LA, 1985, J SYST SOFTWARE, V5, P15, DOI 10.1016/0164-1212(85)90004-4
   Coen-Porisini A., 2001, Software Engineering Notes, V26, P142, DOI 10.1145/503271.503230
   Cousot P., 1977, C RECORD 4 ANN ACM S, P238, DOI DOI 10.1145/512950.512973
   Cousot Patrick, 1976, P 2 INT S PROGRAMMIN
   Darulova E, 2018, LECT NOTES COMPUT SC, V10805, P270, DOI 10.1007/978-3-319-89960-2_15
   Darulova E, 2017, ACM T PROGR LANG SYS, V39, DOI 10.1145/3014426
   Daumas M, 2010, ACM T MATH SOFTWARE, V37, DOI 10.1145/1644001.1644003
   DAVIS E, 1987, ARTIF INTELL, V32, P281, DOI 10.1016/0004-3702(87)90091-9
   Denmat T, 2007, ISSRE 2007: 18TH IEEE INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P181, DOI 10.1109/ISSRE.2007.34
   Di Franco A, 2017, IEEE INT CONF AUTOM, P509, DOI 10.1109/ASE.2017.8115662
   Fu ZL, 2017, ACM SIGPLAN NOTICES, V52, P306, DOI [10.1145/3062341.3062383, 10.1145/3140587.3062383]
   Godefroid P, 2005, ACM SIGPLAN NOTICES, V40, P213, DOI 10.1145/1064978.1065036
   Godefroid P., 2018, HDB MODEL CHECKING, P613, DOI DOI 10.1007/978-3-319-10575-8_19
   Godefroid P., 2008, P NETW DISTR SYST SE
   Gotlieb A., 1998, Software Engineering Notes, V23, P53, DOI 10.1145/271775.271790
   Gotlieb A, 2000, LECT NOTES ARTIF INT, V1861, P399
   Goubault E, 2002, LECT NOTES COMPUT SC, V2305, P209
   Goubault E, 2006, LECT NOTES COMPUT SC, V4134, P18
   Green Hills, 2013, MULTI BUILDING APPL
   Green Hills, 2013, MULTI BUILDING APPL
   Harrison J, 2000, FORM METHOD SYST DES, V16, P271, DOI 10.1023/A:1008712907154
   IEEE Computer Society and The Open Group, 2013, 10031 IEEE COMP SOC
   ISO, 2011, ISO/ IEC 9899: 2011 Information technologyProgramming languages-C
   ISO/IEC, 2014, 148822014E ISOIEC
   KING JC, 1976, COMMUN ACM, V19, P385, DOI 10.1145/360248.360252
   KOREL B, 1990, IEEE T SOFTWARE ENG, V16, P870, DOI 10.1109/32.57624
   Lacan P., 1998, DASIA 98 DATA SYSTEM, P201
   Lakhotia K., 2010, 2010 Proceedings of Second International Symposium on Search Based Software Engineering (SSBSE), P101, DOI 10.1109/SSBSE.2010.21
   Lakhotia K, 2010, LECT NOTES COMPUT SC, V6435, P142, DOI 10.1007/978-3-642-16573-3_11
   Lee W, 2018, P ACM PROGRAM LANG, V2, DOI 10.1145/3158135
   Liew D, 2017, IEEE INT CONF AUTOM, P601, DOI 10.1109/ASE.2017.8115670
   Loosemore S., 2016, GNU C LIB REFERENCE
   Magron V, 2017, ACM T MATH SOFTWARE, V43, DOI 10.1145/3015465
   MICHEL C., 2002, 7 INT S ARTIFICIAL I
   Miller W., 1976, IEEE Transactions on Software Engineering, VSE-2, P223, DOI 10.1109/TSE.1976.233818
   Miné A, 2004, LECT NOTES COMPUT SC, V2986, P3
   Monniaux D, 2008, ACM T PROGR LANG SYS, V30, DOI 10.1145/1353445.1353446
   Moscato M, 2017, LECT NOTES COMPUT SC, V10488, P213, DOI 10.1007/978-3-319-66266-4_14
   Muller J. -M., 2005, 5504 INRIA
   Ng K. C., 1992, TECHNICAL REPORT
   Schopf H.M., 2014, MATH J, V16, P44
   Sen K., 2005, P 10 EUR SOFTW ENG C, V30, P263, DOI DOI 10.1145/1081706.1081750
   Solovyev A, 2019, ACM T PROGR LANG SYS, V41, DOI 10.1145/3230733
   Stephens N, 2016, 23RD ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2016), DOI 10.14722/ndss.2016.23368
   Texas Instruments, 2018, ARM OPT C C COMP V18
   Van Hentenryck P, 1998, J LOGIC PROGRAM, V37, P139, DOI 10.1016/S0743-1066(98)10006-7
   Wu XM, 2017, ASIA PAC SOFWR ENG, P1, DOI 10.1109/APSEC.2017.6
   Wu XM, 2016, ASIA PAC SOFWR ENG, P265, DOI [10.1109/APSEC.2016.9, 10.1109/APSEC.2016.045]
   Yazdanbakhsh A, 2017, IEEE DES TEST, V34, P60, DOI 10.1109/MDAT.2016.2630270
   Young M, 2016, CURRICULUM AND THE SPECIALIZATION OF KNOWLEDGE: STUDIES IN THE SOCIOLOGY OF EDUCATION, P3
   YOUNG W., 1985, SCI HONEYWELLER, V6, P18
   Zhu H, 1997, ACM COMPUT SURV, V29, P366, DOI 10.1145/267580.267590
NR 70
TC 1
Z9 1
U1 0
U2 3
PU ASSOC COMPUTING MACHINERY
PI NEW YORK
PA 1601 Broadway, 10th Floor, NEW YORK, NY USA
SN 1049-331X
EI 1557-7392
J9 ACM T SOFTW ENG METH
JI ACM Trans. Softw. Eng. Methodol.
PD JAN
PY 2021
VL 30
IS 1
AR 9
DI 10.1145/3410875
PG 53
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA PZ3MX
UT WOS:000612644100009
OA Green Published, Green Submitted
DA 2024-07-18
ER

PT J
AU El-Hokayem, A
   Falcone, Y
AF El-Hokayem, Antoine
   Falcone, Ylies
TI On the Monitoring of Decentralized Specifications: Semantics,
   Properties, Analysis, and Simulation
SO ACM TRANSACTIONS ON SOFTWARE ENGINEERING AND METHODOLOGY
LA English
DT Article
DE Runtime verification; monitoring; simulation; decentralized monitoring;
   automata; eventual consistency
ID ALGORITHMS; MODEL
AB We introduce two complementary approaches to monitor decentralized systems. The first approach relies on systems with a centralized specification, i.e., when the specification is written for the behavior of the entire system. To do so, our approach introduces a data structure that (i) keeps track of the execution of an automaton (ii) has predictable parameters and size, and (iii) guarantees strong eventual consistency. The second approach defines decentralized specifications wherein multiple specifications are provided for separate parts of the system. We study two properties of decentralized specifications pertaining to monitorability and compatibility between specification and architecture. We also present a general algorithm for monitoring decentralized specifications. We map three existing algorithms to our approaches and provide a framework for analyzing their behavior. Furthermore, we present THEMIS, a framework for designing such decentralized algorithms and simulating their behavior. We demonstrate the usage of THEMIS to compare multiple algorithms and validate the trends predicted by the analysis in two scenarios: a synthetic benchmark and the Chiron user interface.
C1 [El-Hokayem, Antoine] Univ Grenoble Alpes, CNRS, Grenoble INP, VERIMAG, F-38000 Grenoble, France.
   [Falcone, Ylies] Univ Grenoble Alpes, CNRS, INRIA, Grenoble INP,LIG, CS 40700, F-38000 Grenoble, France.
C3 Communaute Universite Grenoble Alpes; Institut National Polytechnique de
   Grenoble; Universite Grenoble Alpes (UGA); Centre National de la
   Recherche Scientifique (CNRS); Communaute Universite Grenoble Alpes;
   Institut National Polytechnique de Grenoble; Universite Grenoble Alpes
   (UGA); Centre National de la Recherche Scientifique (CNRS); Inria
RP El-Hokayem, A (corresponding author), Univ Grenoble Alpes, CNRS, Grenoble INP, VERIMAG, F-38000 Grenoble, France.
EM antoine.el-hokayem@univ-grenoble-alpes.fr;
   ylies.falcone@univ-grenoble-alpes.fr
CR [Anonymous], 1999, PATTERNS PROJECT
   [Anonymous], 1999, PATTERNS PROJECT LIS
   Avrunin George S., 1999, TECHNICAL REPORT
   Bartocci Ezio, 2018, Lectures on Runtime. Verification Introductory and Advanced Topics. LNCS 10457, P135, DOI 10.1007/978-3-319-75632-5_5
   Bartocci E, 2013, ELECTRON P THEOR COM, P85, DOI 10.4204/EPTCS.124.9
   Bartocci E, 2019, INT J SOFTW TOOLS TE, V21, P31, DOI 10.1007/s10009-017-0454-5
   Basin David A., 2015, LIPIcs, V45, P590, DOI [10.4230/LIPIcs.FSTTCS.2015.590, DOI 10.4230/LIPICS.FSTTCS.2015.590]
   Bauer A, 2016, FORM METHOD SYST DES, V48, P46, DOI [10.1007/978-3-642-32759-9_10, 10.1007/s10703-016-0253-8]
   Bauer A, 2011, ACM T SOFTW ENG METH, V20, DOI 10.1145/2000799.2000800
   Bonakdarpour B, 2016, LECT NOTES COMPUT SC, V9953, P363, DOI 10.1007/978-3-319-47169-3_27
   Buchfuhrer D, 2008, LECT NOTES COMPUT SC, V5125, P24, DOI 10.1007/978-3-540-70575-8_3
   Colombo C, 2016, FORM METHOD SYST DES, V49, P109, DOI 10.1007/s10703-016-0251-x
   Colombo C, 2014, LECT NOTES COMPUT SC, V8734, P140, DOI 10.1007/978-3-319-11164-3_12
   Cotard S, 2012, IEEE I C EMBED SOFTW, P1508, DOI 10.1109/HPCC.2012.220
   D'Angelo B, 2005, 12TH INTERNATIONAL SYMPOSIUM ON TEMPORAL REPRESENTATION AND REASONING, PROCEEDINGS, P166, DOI 10.1109/TIME.2005.26
   Decker N, 2017, LECT NOTES COMPUT SC, V10623, P179, DOI 10.1007/978-3-319-70848-5_12
   Diekert Volker, 2012, Logic, Language, Information and Computation. Proceedings of the 19th International Workshop, WoLLIC 2012, P70, DOI 10.1007/978-3-642-32621-9_5
   Diekert V, 2014, THEOR COMPUT SCI, V537, P29, DOI 10.1016/j.tcs.2014.02.052
   Duret-Lutz Alexandre, 2013, Automated Technology for Verification and Analysis. 11th International Symposium, ATVA 2013. Proceedings: LNCS 8172, P442, DOI 10.1007/978-3-319-02444-8_31
   Dwyer M. B., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P411, DOI 10.1109/ICSE.1999.841031
   El-Hokayem A, 2017, PROCEEDINGS OF THE 26TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA'17), P125, DOI 10.1145/3092703.3092723
   El-Hokayem A, 2017, PROCEEDINGS OF THE 26TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA'17), P372, DOI 10.1145/3092703.3098224
   ElHokayem Antoine, 2018, THEMIS ARTICLE ARTIF
   Falcone Ylies, 2018, Lectures on Runtime. Verification Introductory and Advanced Topics. LNCS 10457, P103, DOI 10.1007/978-3-319-75632-5_4
   Falcone Ylies, 2012, International Journal on Software Tools for Technology Transfer, V14, P349, DOI 10.1007/s10009-011-0196-8
   Falcone Y., 2013, Eng. Dependable Softw. Syst., P141, DOI [10.3233/978-1- 61499-207-3-141, DOI 10.3233/978-1-61499-207-3-141]
   Falcone Y, 2018, LECT NOTES COMPUT SC, V11237, P241, DOI 10.1007/978-3-030-03769-7_14
   Falcone Y, 2014, LECT NOTES COMPUT SC, V8461, P66, DOI 10.1007/978-3-662-43613-4_5
   Falcone Y, 2010, LECT NOTES COMPUT SC, V6418, P89, DOI 10.1007/978-3-642-16612-9_9
   Francalanza Adrian, 2018, Lectures on Runtime. Verification Introductory and Advanced Topics. LNCS 10457, P176, DOI 10.1007/978-3-319-75632-5_6
   Hallé S, 2017, LECT NOTES COMPUT SC, V10548, P359, DOI 10.1007/978-3-319-67531-2_22
   Hallé S, 2016, LECT NOTES COMPUT SC, V10012, P68, DOI 10.1007/978-3-319-46982-9_6
   Kiczales G., 2001, ECOOP 2001 - Object-Oriented Programming. 15th European Conference. Proceedings (Lecture Notes in Computer Science Vol.2072), P327
   Kim M, 1999, PROCEEDINGS OF THE 11TH EUROMICRO CONFERENCE ON REAL-TIME SYSTEMS, P114, DOI 10.1109/EMRTS.1999.777457
   Leucker M, 2016, LECT NOTES COMPUT SC, V9953, P380, DOI 10.1007/978-3-319-47169-3_29
   Leucker M, 2009, J LOGIC ALGEBR PROGR, V78, P293, DOI 10.1016/j.jlap.2008.08.004
   Mostafa M, 2015, INT PARALL DISTRIB P, P494, DOI 10.1109/IPDPS.2015.95
   Natarajan A, 2017, THEOR COMPUT SCI, V688, P24, DOI 10.1016/j.tcs.2015.12.037
   Ogale VA, 2007, LECT NOTES COMPUT SC, V4731, P420
   Pnueli A, 2006, LECT NOTES COMPUT SC, V4085, P573
   Rosu G., 2005, Automated Software Engineering, V12, P151, DOI 10.1007/s10515-005-6205-y
   Scheffel Torben, 2014, 2014 Twelfth ACM/IEEE Conference on Formal Methods and Models for Codesign (MEMOCODE), P52, DOI 10.1109/MEMCOD.2014.6961843
   Sen K, 2004, PROC INT CONF SOFTW, P418, DOI 10.1109/ICSE.2004.1317464
   Shapiro M, 2011, LECT NOTES COMPUT SC, V6976, P386, DOI 10.1007/978-3-642-24550-3_29
   Tarjan R., 1972, SIAM Journal on Computing, V1, P146, DOI 10.1137/0201010
   Thati P, 2005, ELECTRON NOTES THEOR, V113, P145, DOI 10.1016/j.entcs.2004.01.029
   The Chiron Team, 1999, CHIRON USER INTERFAC
   VALIANT LG, 1990, COMMUN ACM, V33, P103, DOI 10.1145/79173.79181
   Wuu G. T. J., 1986, Operating Systems Review, V20, P57, DOI 10.1145/12485.12491
NR 49
TC 14
Z9 15
U1 0
U2 0
PU ASSOC COMPUTING MACHINERY
PI NEW YORK
PA 2 PENN PLAZA, STE 701, NEW YORK, NY 10121-0701 USA
SN 1049-331X
EI 1557-7392
J9 ACM T SOFTW ENG METH
JI ACM Trans. Softw. Eng. Methodol.
PD JAN
PY 2020
VL 29
IS 1
AR 1
DI 10.1145/3355181
PG 57
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA NI1FP
UT WOS:000565104100001
OA Green Published
DA 2024-07-18
ER

PT J
AU Yan, GG
   Jiao, L
   Wang, SL
   Wang, LT
   Zhan, NJ
AF Yan, Gaogao
   Jiao, Li
   Wang, Shuling
   Wang, Lingtai
   Zhan, Naijun
TI Automatically Generating SystemC Code from HCSP Formal Models
SO ACM TRANSACTIONS ON SOFTWARE ENGINEERING AND METHODOLOGY
LA English
DT Article
DE Hybrid CSP; approximate bisimulation; code generation
ID HYBRID-SYSTEMS; DENOTATIONAL SEMANTICS; ALGEBRAIC SEMANTICS; SOFTWARE;
   APPROXIMATION; VERIFICATION; STABILITY
AB In model-driven design of embedded systems, how to generate code from high-level control models seamlessly and correctly is challenging. This is because hybrid systems are involved with continuous evolution, discrete jumps, and the complicated entanglement between them, while code only contains discrete actions. In this article, we investigate the code generation from Hybrid Communicating Sequential Processes (HCSP), a formal hybrid control model, to SystemC. We first introduce the notion of approximate bisimulation as a criterion to check the consistency between two different systems, especially between the original control model and the final generated code. We prove that it is decidable whether two HCSPs are approximately bisimilar in bounded time and unbounded time with some conditions, respectively. For both the cases, we present two sets of rules correspondingly for discretizing HCSPs and prove that the original HCSP model and the corresponding discretization are approximately bisimilar. Furthermore, based on the discretization, we define a transformation function to map a discretized HCSP model to SystemC code such that they are also approximately bisimilar. We finally implement a tool to automatically realize the translation from HCSP to SystemC code and illustrate our approach through some case studies.
C1 [Yan, Gaogao; Jiao, Li; Wang, Shuling; Wang, Lingtai; Zhan, Naijun] Chinese Acad Sci, Inst Software, State Key Lab Comp Sci, 4 South Fourth St, Beijing 100190, Peoples R China.
C3 Chinese Academy of Sciences; Institute of Software, CAS
RP Zhan, NJ (corresponding author), Chinese Acad Sci, Inst Software, State Key Lab Comp Sci, 4 South Fourth St, Beijing 100190, Peoples R China.
EM yangg@ios.ac.cn; ljiao@ios.ac.cn; wangsl@ios.ac.cn; wanglt@ios.ac.cn;
   znj@ios.ac.cn
FU NSFC [61625206, 61732001]; Open Project of Shanghai Key Laboratory of
   Trustworthy Computing [07dz22304201503]
FX This work is supported partly by NSFC under Grant No. 61625206 and
   61732001. Shuling Wang is supported partly by the Open Project of
   Shanghai Key Laboratory of Trustworthy Computing (No. 07dz22304201503).
CR Abrial J R, 2010, Modeling in Event-B: system and softeng
   Ahmad E., 2015, LNCS, V8997, P228, DOI [10.1007/978-3-319-15317-915, DOI 10.1007/978-3-319-15317-9_15]
   Alur R, 2003, ACM SIGPLAN NOTICES, V38, P171, DOI 10.1145/780731.780756
   Alur R, 2000, LECT NOTES COMPUT SC, V1790, P6
   Anand M, 2010, IEEE T COMPUT, V59, P1281, DOI 10.1109/TC.2010.84
   Angeli D, 1999, SYST CONTROL LETT, V38, P209, DOI 10.1016/S0167-6911(99)00055-9
   Angeli D, 2002, IEEE T AUTOMAT CONTR, V47, P410, DOI 10.1109/9.989067
   [Anonymous], 2019, SIM COD US GUID
   [Anonymous], 2017, SIMULINK
   [Anonymous], 2017, TARGETLINK
   [Anonymous], 2017, SYSML V 1 5
   [Anonymous], 2017, RATIONAL ROSE
   [Anonymous], 2011, 16662011 IEEE IEEE S
   Ascher U. M., 1998, Computer methods for ordinary differential equations and differential-algebraic equations, V61, DOI DOI 10.1137/1.9781611971392
   Back R.-J., 1998, Refinement Calculus
   Bak S, 2019, INT J SOFTW TOOLS TE, V21, P87, DOI 10.1007/s10009-017-0458-1
   BALZER R, 1985, IEEE T SOFTWARE ENG, V11, P1257, DOI 10.1109/TSE.1985.231877
   Berry G, 2000, FOUNDAT COMPUT, P425
   Bonfanti S, 2017, LECT NOTES COMPUT SC, V10227, P295, DOI 10.1007/978-3-319-57288-8_21
   Borger E., 2003, ABSTRACT STATE MACHI
   Bouissou O., 2006, INT S SCI COMP COMP
   Bouissou O, 2008, LECT NOTES COMPUT SC, V4960, P63
   Bouissou O, 2008, LECT NOTES COMPUT SC, V4905, P37, DOI 10.1007/978-3-540-78163-9_8
   Bourke T, 2015, LECT NOTES COMPUT SC, V9031, P69, DOI 10.1007/978-3-662-46663-6_4
   Brooks C., 2015, P 18 INT C HYBR SYST, P301
   Cataño N, 2016, LECT NOTES COMPUT SC, V9690, P166, DOI 10.1007/978-3-319-40648-0_13
   Champelovier D., 2015, INRIA VASY INRIA CON
   Chaochen Z., 1995, International Hybrid Systems Workshop, P511
   Chen M., 2015, PROCOS 2015, P39
   CHOW TS, 1978, IEEE T SOFTWARE ENG, V4, P178, DOI 10.1109/TSE.1978.231496
   Deshpande A., 1996, HYBRID SYSTEMS VOLUM, V1273, P113
   Dormoy Francois-Xavier, 2008, EMB REAL TIM SOFTW S
   Eker J, 2003, P IEEE, V91, P127, DOI 10.1109/JPROC.2002.805829
   Evrard H, 2017, J LOG ALGEBR METHODS, V88, P121, DOI 10.1016/j.jlamp.2016.09.002
   Fehnker A, 2004, LECT NOTES COMPUT SC, V2993, P326
   Gawanmeh A., 2004, P FDL 04 LILL FRANC, P649
   Girard A, 2008, DISCRETE EVENT DYN S, V18, P163, DOI 10.1007/s10626-007-0029-9
   Girard A, 2007, IEEE T AUTOMAT CONTR, V52, P782, DOI 10.1109/TAC.2007.895849
   HALBWACHS N, 1991, P IEEE, V79, P1305, DOI 10.1109/5.97300
   Halbwachs N., 2007, TUTORIAL LUSTRE
   HAREL D, 1987, SCI COMPUT PROGRAM, V8, P231, DOI 10.1016/0167-6423(87)90035-9
   Henzinger TA, 1996, IEEE S LOG, P278, DOI 10.1109/LICS.1996.561342
   Henzinger TA, 1998, IEEE T AUTOMAT CONTR, V43, P540, DOI 10.1109/9.664156
   Henzinger TA, 2006, LECT NOTES COMPUT SC, V4085, P1
   Huibiao Zhu, 2008, Unifying Theories of Programming. Second International Symposium, UTP 2008. Revised Selected Papers, P258
   Hur Y, 2004, LECT NOTES COMPUT SC, V2993, P432
   Jifeng H., 1994, CLASSICAL MIND ESSAY, P171
   Julius AA, 2009, SYST CONTROL LETT, V58, P94, DOI 10.1016/j.sysconle.2008.09.001
   Kim J, 2003, 9TH IEEE REAL-TIME AND EMBEDDED TECHNOLOGY AND APPLICATIONS SYMPOSIUM, PROCEEDINGS, P160
   Lanotte R, 2005, LECT NOTES COMPUT SC, V3414, P402
   Lee EA, 2000, COMPUTER, V33, P18, DOI 10.1109/2.868693
   Li P., 2017, SEKE 2017 29 INT C S, P242
   Liang Zou, 2014, Verified Software: Theories, Tools, Experiments. 5th International Conference, VSTTE 2013. Revised Selected Papers: LNCS 8164, P262, DOI 10.1007/978-3-642-54108-7_14
   Llopard I, 2017, ACM T EMBED COMPUT S, V16, DOI 10.1145/2990195
   Low TM, 2017, IEEE HI ASS SYS ENGR, P104, DOI 10.1109/HASE.2017.28
   Luhunu L., 2017, P MODELS 2017, P468
   Majumdar Rupak, 2012, Computer Aided Verification. Proceedings 24th International Conference, CAV 2012, P362, DOI 10.1007/978-3-642-31424-7_28
   Malik A., 2017, ACM T EMBED COMPUT S, V16
   Müller W, 2003, SYSTEM C: METHODOLOGIES AND APPLICATIONS, P97
   Naijun Zhan, 2013, Unifying Theories of Programming and Formal Engineering Methods. International Training School on Software Engineering. Held at ICTAC 2013. Advanced Lectures: LNCS 8050, P207, DOI 10.1007/978-3-642-39721-9_5
   Peng XQ, 2006, 30TH ANNUAL IEEE/NASA SOFTWARE ENGINEERING WORKSHOP, PROCEEDINGS, P190
   Platzer A, 2012, IEEE S LOG, P541, DOI 10.1109/LICS.2012.64
   Platzer A, 2010, J LOGIC COMPUT, V20, P309, DOI 10.1093/logcom/exn070
   Pola Giordano, 2014, 2014 American Control Conference, P1787, DOI 10.1109/ACC.2014.6858790
   Pola G, 2008, AUTOMATICA, V44, P2508, DOI 10.1016/j.automatica.2008.02.021
   Selic B., 2013, Modeling and analysis of real-time and embedded systems with UML and MARTE: Developing cyber-physical systems
   Shulga TE, 2016, PROGRAM COMPUT SOFT+, V42, P167, DOI 10.1134/S0361768816030075
   Shuling Wang, 2015, Formal Methods and Software Engineering. 17th International Conference on Formal Engineering Methods (ICFEM 2015). Proceedings: LNCS 9407, P382, DOI 10.1007/978-3-319-25423-4_25
   Stoer J., 2013, INTRO NUMERICAL ANAL, VVol. 12
   Sun J., 2001, Proceedings of the 10th international conference on World Wide Web, P725
   Tiller M.ed., 2012, Introduction to Physical Modeling with Modelica
   Tiwari A, 2008, FORM METHOD SYST DES, V32, P57, DOI 10.1007/s10703-007-0044-3
   TSINIAS J, 1987, MATH SYST THEORY, V19, P333
   Pham VC, 2017, MODELSWARD: PROCEEDINGS OF THE 5TH INTERNATIONAL CONFERENCE ON MODEL-DRIVEN ENGINEERING AND SOFTWARE DEVELOPMENT, P208, DOI 10.5220/0006274502080219
   Wan Q, 2013, 2013 IEEE 5TH INTERNATIONAL CONFERENCE ON ENGINEERING EDUCATION (ICEED): ALIGNING ENGINEERING EDUCATION WITH INDUSTRIAL NEEDS FOR NATION DEVELOPMENT, P1, DOI 10.1109/ICEED.2013.6908292
   Yan GG, 2016, LECT NOTES COMPUT SC, V9995, P702, DOI 10.1007/978-3-319-48989-6_43
   Yunming Wang, 2000, Proceedings Third IEEE International Symposium on Object-Oriented Real-Time Distributed Computing (ISORC 2000) (Cat. No. PR00607), P96, DOI 10.1109/ISORC.2000.839516
   Zeng NJ, 2013, ASIA PAC SOFWR ENG, P371, DOI 10.1109/APSEC.2013.57
   Zeng NJ, 2014, IEEE INT C ENG COMP, P198, DOI 10.1109/ICECCS.2014.36
   Zhan N., 2016, Formal Verification of Simulink/Stateflow Diagrams: A Deductive Approach
   Zhang F., 2008, IFAC Proceedings Volumes, V41, P7967, DOI [10.3182/20080706-5-KR-1001.01346, DOI 10.3182/20080706-5-KR-1001.01346]
   Zhao HJ, 2014, LECT NOTES COMPUT SC, V8442, P733, DOI 10.1007/978-3-319-06410-9_49
   Zhu HBA, 2010, LECT NOTES COMPUT SC, V6445, P286
   Zhu HB, 2009, IEEE AUS SOFT ENGR, P297, DOI 10.1109/ASWEC.2009.20
   Zou L, 2015, LECT NOTES COMPUT SC, V9364, P464, DOI 10.1007/978-3-319-24953-7_33
NR 85
TC 7
Z9 7
U1 0
U2 7
PU ASSOC COMPUTING MACHINERY
PI NEW YORK
PA 2 PENN PLAZA, STE 701, NEW YORK, NY 10121-0701 USA
SN 1049-331X
EI 1557-7392
J9 ACM T SOFTW ENG METH
JI ACM Trans. Softw. Eng. Methodol.
PD JAN
PY 2020
VL 29
IS 1
AR 4
DI 10.1145/3360002
PG 39
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA NI1FP
UT WOS:000565104100004
DA 2024-07-18
ER

PT J
AU De Lara, J
   Guerra, E
   Di Ruscio, D
   Di Rocco, J
   Cuadrado, JS
   Iovino, L
   Pierantonio, A
AF De Lara, Juan
   Guerra, Esther
   Di Ruscio, Davide
   Di Rocco, Juri
   Sanchez Cuadrado, Jesus
   Iovino, Ludovico
   Pierantonio, Alfonso
TI Automated Reuse of Model Transformations through Typing Requirements
   Models
SO ACM TRANSACTIONS ON SOFTWARE ENGINEERING AND METHODOLOGY
LA English
DT Article
DE Model transformation; model transformation reuse; refinement; ATL;
   meta-modelling
ID DRIVEN; LANGUAGE
AB Model transformations are key elements of model-driven engineering, where they arc used to automate the manipulation of models. However, they are typed with respect to concrete source and target meta-models, making their reuse for other (even similar) meta-models challenging.
   To improve this situation, we propose capturing the typing requirements for reusing a transformation with other meta-models by the notion of a typing requirements model (TRM). A TRM describes the prerequisites that a model transformation imposes on the source and target meta-models to obtain a correct typing. The key observation is that any meta-model pair that satisfies the TRM is a valid reuse context for the transformation at hand.
   A TRM is made of two domain requirement models (DRMs) describing the requirements for the source arid target meta-models, and a compatibility model expressing dependencies between them. We define a notion of refinement between DRMs and see meta-models as a special case of DRM. We provide a catalogue of valid refinements and describe how to automatically extract a TRM from an ATL transformation. The approach is supported by our tool TOTEM. We report on two experiments based on transformations developed by third parties and meta-model mutation techniques-validating the correctness and completeness of our TRM extraction procedure and confirming the power of TRMs to encode variability and support flexible reuse.
C1 [De Lara, Juan; Guerra, Esther] Univ Autonoma Madrid, Dept Ingn Informat, Campus Cantoblanco, E-28049 Madrid, Spain.
   [Di Ruscio, Davide; Di Rocco, Juri; Pierantonio, Alfonso] Univ Aquila, Dipartimento Ingn Sci Informaz & Matemat, Via Vetoio, I-67100 Laquila, Italy.
   [Sanchez Cuadrado, Jesus] Univ Murcia, Fac Informat, Campus Espinardo, Murcia 30100, Spain.
   [Iovino, Ludovico] Gran Sasso Sci Inst, Via F Crispi, I-67100 Laquila, Italy.
C3 Autonomous University of Madrid; University of L'Aquila; University of
   Murcia; Gran Sasso Science Institute (GSSI)
RP De Lara, J (corresponding author), Univ Autonoma Madrid, Dept Ingn Informat, Campus Cantoblanco, E-28049 Madrid, Spain.
EM Juan.deLara@uam.es; Esther.Guerra@uam.es; davide.diruscio@univaq.it;
   juri.dirocco@univaq.it; jesusc@um.es; ludovico.iovino@gssi.it;
   alfonso.pierantonio@univaq.it
RI de Lara, Juan/B-5422-2014; Di Ruscio, Davide/AAG-4674-2020; Di Rocco,
   Juri/HSE-7230-2023; Sanchez Cuadrado, Jesus/L-2365-2013; Guerra,
   Esther/B-4977-2014
OI Di Ruscio, Davide/0000-0002-5077-6793; Sanchez Cuadrado,
   Jesus/0000-0001-9755-5616; Guerra, Esther/0000-0002-2818-2278; Di Rocco,
   Juri/0000-0002-7909-3902; Iovino, Ludovico/0000-0001-6552-2609
FU R&D programme of the Madrid Region (project FORTE) [S2018/TCS-4314];
   Spanish Ministry of Science (project MASSIVE) [RTI2018-095255-B-I00];
   Spanish MINECO (project RECOM, AEI/FEDER/UE) [TIN2015-73968-JIN]; Ramon
   y Cajal 2017 grant; European Union [780251]; H2020 - Industrial
   Leadership [780251] Funding Source: H2020 - Industrial Leadership
FX Work partially funded by the R&D programme of the Madrid Region (project
   FORTE, S2018/TCS-4314), the Spanish Ministry of Science (project
   MASSIVE, RTI2018-095255-B-I00), the Spanish MINECO (project RECOM,
   TIN2015-73968-JIN, AEI/FEDER/UE), a Ramon y Cajal 2017 grant, and the
   European Union Horizon 2020 research and innovation programme through
   the Polyglot and Hybrid Persistence Architectures for Big Data Analytics
   (TYPHON) project (#780251). We thank the anonymous referees for their
   useful comments that helped us improve this article.
CR [Anonymous], 2014, P 2 WORKSH VIEW BAS
   Atkinson C., 2002, ACM Transactions on Modeling and Computer Simulation, V12, P290, DOI 10.1145/643120.643123
   Basciani F, 2014, LECT NOTES COMPUT SC, V8767, P602, DOI 10.1007/978-3-319-11653-2_37
   Boronat A, 2017, SLE'17: PROCEEDINGS OF THE 10TH ACM SIGPLAN INTERNATIONAL CONFERENCE ON SOFTWARE LANGUAGE ENGINEERING, P194, DOI 10.1145/3136014.3136026
   Bruel JM, 2018, LECT NOTES COMPUT SC, V10888, P92, DOI 10.1007/978-3-319-93317-7_4
   Burgueño L, 2015, IEEE T SOFTWARE ENG, V41, P490, DOI 10.1109/TSE.2014.2375201
   Chechik M, 2016, LECT NOTES COMPUT SC, V9681, P28, DOI 10.1007/978-3-319-33693-0_3
   Cheng Z, 2018, SOFTW SYST MODEL, V17, P1197, DOI 10.1007/s10270-016-0553-x
   Cicchetti A, 2008, IEEE INT ENTERP DIST, P222, DOI 10.1109/EDOC.2008.44
   Clarke D, 2015, MATH STRUCT COMP SCI, V25, P482, DOI 10.1017/S0960129512000941
   Cuadrado JS, 2008, LECT NOTES COMPUT SC, V5063, P168, DOI 10.1007/978-3-540-69927-9_12
   de Lara J, 2018, PROCEEDINGS OF THE 11TH ACM SIGPLAN INTERNATIONAL CONFERENCE ON SOFTWARE LANGUAGE ENGINEERING (SLE '18), P147, DOI 10.1145/3276604.3276610
   De Lara J, 2018, ACM T SOFTW ENG METH, V27, DOI 10.1145/3280985
   De Lara J, 2017, ACM T SOFTW ENG METH, V25, DOI 10.1145/3063384
   de Lara J, 2017, LECT NOTES COMPUT SC, V10202, P264, DOI 10.1007/978-3-662-54494-5_15
   de Lara J, 2015, SOFTW SYST MODEL, V14, P429, DOI 10.1007/s10270-013-0367-z
   De Lara J, 2014, ACM T SOFTW ENG METH, V24, DOI 10.1145/2685615
   de Lara J, 2013, SOFTW SYST MODEL, V12, P453, DOI 10.1007/s10270-011-0221-0
   Di Rocco J, 2016, LECT NOTES COMPUT SC, V9765, P70, DOI 10.1007/978-3-319-42064-6_5
   Di Ruscio Davide, 2012, Graph Transformations. Proceedings 6th International Conference, ICGT 2012, P20, DOI 10.1007/978-3-642-33654-6_2
   Ehrig H., 2006, MONO THEOR COMP SCI, DOI 10.1007/3-540-31188-2
   Ergin H, 2016, COMPUT LANG SYST STR, V46, P106, DOI 10.1016/j.cl.2016.07.004
   Etien A, 2015, SOFTW SYST MODEL, V14, P1189, DOI 10.1007/s10270-013-0379-8
   Faitelson D, 2017, PROC INT CONF SOFTW, P735, DOI 10.1109/ICSE.2017.73
   Famelis M, 2019, SOFTW SYST MODEL, V18, P1249, DOI 10.1007/s10270-017-0594-9
   Gregor D, 2006, ACM SIGPLAN NOTICES, V41, P291, DOI 10.1145/1167515.1167499
   Guy Clement, 2012, Modelling Foundations and Applications. Proceedings 8th European Conference, ECMFA 2012, P400, DOI 10.1007/978-3-642-31491-9_30
   Hierons RM, 2016, ACM T SOFTW ENG METH, V25, DOI 10.1145/2897760
   Jackson Daniel, 2006, Software abstractions: Logic, language, and analysis
   Jeanneret C, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P601, DOI 10.1145/1985793.1985875
   Jouault F, 2008, SCI COMPUT PROGRAM, V72, P31, DOI 10.1016/j.scico.2007.08.002
   Jouault F, 2006, LECT NOTES COMPUT SC, V4037, P171
   Kang K.C., 1990, CMUSEI90TR021
   Kastner Andreas, 2018, P 21 ACM IEEE INT C, P13
   Kleppe A, 2006, LECT NOTES COMPUT SC, V4066, P173
   Kolovos DS, 2008, LECT NOTES COMPUT SC, V5063, P46, DOI 10.1007/978-3-540-69927-9_4
   Kolovos DS, 2006, LECT NOTES COMPUT SC, V4066, P128
   Kusel A, 2015, SOFTW SYST MODEL, V14, P537, DOI 10.1007/s10270-013-0343-7
   Lano K, 2014, SOFTW SYST MODEL, V13, P873, DOI 10.1007/s10270-012-0291-7
   Lano K, 2014, IEEE T SOFTWARE ENG, V40, P1224, DOI 10.1109/TSE.2014.2354344
   López-Fernández JJ, 2015, SOFTW SYST MODEL, V14, P1323, DOI 10.1007/s10270-013-0392-y
   Lúcio L, 2016, SOFTW SYST MODEL, V15, P647, DOI 10.1007/s10270-014-0429-x
   Meinicke J, 2017, MASTERING SOFTWARE V, DOI DOI 10.1007/978-3-319-61443-4
   Object Management Group, 2005, UML 2 0 OCL SPEC
   Object Management Group, 2016, MOF QUERY VIEW TRANS
   Pescador A, 2015, 2015 ACM/IEEE 18TH INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS), P166, DOI 10.1109/MODELS.2015.7338247
   Salay R, 2016, LECT NOTES COMPUT SC, V9765, P107, DOI 10.1007/978-3-319-42064-6_8
   Cuadrado JS, 2018, SOFTW SYST MODEL, V17, P779, DOI 10.1007/s10270-016-0541-1
   Cuadrado JS, 2017, IEEE T SOFTWARE ENG, V43, P868, DOI 10.1109/TSE.2016.2635137
   Cuadrado JS, 2015, LECT NOTES COMPUT SC, V9152, P59, DOI 10.1007/978-3-319-21155-8_5
   Cuadrado JS, 2014, IEEE T SOFTWARE ENG, V40, P1042, DOI 10.1109/TSE.2014.2339852
   Cuadrado JS, 2014, LECT NOTES COMPUT SC, V8568, P186
   Cuadrado JS, 2009, SOFTW SYST MODEL, V8, P325, DOI 10.1007/s10270-008-0093-0
   Schmidt DC, 2006, COMPUTER, V39, P25, DOI 10.1109/MC.2006.58
   Selim GMK, 2017, 2017 ACM/IEEE 20TH INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS 2017), P34, DOI 10.1109/MODELS.2017.20
   Sen S, 2009, LECT NOTES COMPUT SC, V5795, P32, DOI 10.1007/978-3-642-04425-0_4
   Sendall S, 2003, IEEE SOFTWARE, V20, P42, DOI 10.1109/MS.2003.1231150
   Slonneger Kenneth, 1995, FORMAL SYNTAX SEMANT, V340
   Steel J, 2007, SOFTW SYST MODEL, V6, P401, DOI 10.1007/s10270-006-0036-6
   Steinberg Dave., 2008, EMF: eclipse modeling framework, V2
   Strüber D, 2018, FORM ASP COMPUT, V30, P133, DOI 10.1007/s00165-017-0441-3
   Troya J, 2018, ACM T SOFTW ENG METH, V27, DOI 10.1145/3241744
   Troya J, 2011, J OBJECT TECHNOL, V10, DOI 10.5381/jot.2011.10.1.a5
   Vallecillo Antonio, 2012, Theory and Practice of Model Transformations. Proceedings 5th International Conference, ICMT 2012, P56, DOI 10.1007/978-3-642-30476-7_4
   van Deursen A, 2000, ACM SIGPLAN NOTICES, V35, P26, DOI 10.1145/352029.352035
   Vignaga A, 2013, SOFTW SYST MODEL, V12, P105, DOI 10.1007/s10270-011-0191-2
   Wagelaar D, 2010, SOFTW SYST MODEL, V9, P285, DOI 10.1007/s10270-009-0134-3
   Whittle J, 2014, IEEE SOFTWARE, V31, P79, DOI 10.1109/MS.2013.65
   Wimmer M, 2012, J OBJECT TECHNOL, V11, DOI 10.5381/jot.2012.11.2.a2
NR 69
TC 4
Z9 4
U1 0
U2 1
PU ASSOC COMPUTING MACHINERY
PI NEW YORK
PA 2 PENN PLAZA, STE 701, NEW YORK, NY 10121-0701 USA
SN 1049-331X
EI 1557-7392
J9 ACM T SOFTW ENG METH
JI ACM Trans. Softw. Eng. Methodol.
PD OCT
PY 2019
VL 28
IS 4
AR 21
DI 10.1145/3340108
PG 62
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA JM4SV
UT WOS:000496207000004
OA Green Published
DA 2024-07-18
ER

PT J
AU Von Rhein, A
   Liebig, J
   Janker, A
   Kästner, C
   Apel, S
AF Von Rhein, Alexander
   Liebig, Joerg
   Janker, Andreas
   Kaestner, Christian
   Apel, Sven
TI Variability-Aware Static Analysis at Scale: An Empirical Study
SO ACM TRANSACTIONS ON SOFTWARE ENGINEERING AND METHODOLOGY
LA English
DT Article
DE Highly configurable systems; variability-aware analysis; configuration
   sampling; TypeChef
ID SOFTWARE PRODUCT LINES; SYSTEMS; MODELS
AB The advent of variability management and generator technology enables users to derive individual system variants from a configurable code base by selecting desired configuration options. This approach gives rise to the generation of possibly billions of variants, which, however, cannot be efficiently analyzed for bugs and other properties with classic analysis techniques. To address this issue, researchers and practitioners have developed sampling heuristics and, recently, variability-aware analysis techniques. While sampling reduces the analysis effort significantly, the information obtained is necessarily incomplete, and it is unknown whether state-of-the-art sampling techniques scale to billions of variants. Variability-aware analysis techniques process the configurable code base directly, exploiting similarities among individual variants with the goal of reducing analysis effort. However. while being promising, so far, variability-aware analysis techniques have been applied mostly only to small academic examples. To learn about the mutual strengths and weaknesses of variability-aware and sample-based static-analysis techniques, we compared the two by means of seven concrete control-flow and data-flow analyses, applied to five real-world subject systems: BUSYBOX, OPENSSL, SQLITE, the x86 LINUX kernel, and UCLIBC. In particular, we compare the efficiency (analysis execution time) of the static analyses and their effectiveness (potential bugs found). Overall, we found that variability-aware analysis outperforms most sample-based static-analysis techniques with respect to efficiency and effectiveness. For example, checking all variants of OPENSSL with a variability-aware static analysis is faster than checking even only two variants with an analysis that does not exploit similarities among variants.
C1 [Von Rhein, Alexander] CQSE GmbH, Lichtenbergstr 8, D-85748 Garching, Germany.
   [Liebig, Joerg] 4Soft GmbH, Mittererstr 3, D-80336 Munich, Germany.
   [Janker, Andreas] Capgemini Deutschland GmbH, Olof Palme Str 14, D-81829 Munich, Germany.
   [Kaestner, Christian] Carnegie Mellon Univ, 5000 Forbes Ave, Pittsburgh, PA 15213 USA.
   [Apel, Sven] Univ Passau, Innstr 33, D-94032 Passau, Germany.
C3 Capgemini; Carnegie Mellon University; University of Passau
RP Von Rhein, A (corresponding author), CQSE GmbH, Lichtenbergstr 8, D-85748 Garching, Germany.
EM rhein@cqse.eu; jl@joliebig.de; an.janker@gmail.com; apel@uni-passau.de
OI Apel, Sven/0000-0003-3687-2233
FU DFG [AP 206/4, AP 206/6]; NSF [1318808, 1552944, 1717022]; Science of
   Security Lablet [H9823014C0140]; U.S. Department of Defense through the
   Systems Engineering Research Center [H9823008D0171]; Direct For Computer
   & Info Scie & Enginr; Division of Computing and Communication
   Foundations [1552944] Funding Source: National Science Foundation
FX This work has been supported by the DFG Grants No. AP 206/4 and No. AP
   206/6, by NSF Awards No. 1318808, No. 1552944, and No. 1717022, the
   Science of Security Lablet (Grant No. H9823014C0140), and the U.S.
   Department of Defense through the Systems Engineering Research Center
   (Grant No. H9823008D0171).
CR Abal I., 2014, Proceedings of the 29th ACM/IEEE International Conference on Automated Software Engineering, ASE '14, P421
   [Anonymous], 2012, ACM SIGOPS OPER SYST, DOI [DOI 10.1145/2094091.2094095, 10.1145/2039239.2039242]
   [Anonymous], 2012, P WORKSH MOD SYST SO
   [Anonymous], 2008, The Cert C Secure Coding Standard. Sei
   [Anonymous], P 14 INT C GEN PROGR
   [Anonymous], 2016, Feature-Oriented Software Product Lines
   Apel S, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P482, DOI 10.1109/ICSE.2013.6606594
   Apel S, 2010, AUTOMAT SOFTW ENG, V17, P251, DOI 10.1007/s10515-010-0066-8
   Apel Sven., 2013, P 5 INT WORKSHOP FEA, P1, DOI [10.1145/2528265.2528267, DOI 10.1145/2528265.2528267]
   Aversano L, 2002, SCAM 2002: SECOND IEEE INTERNATIONAL WORKSHOP ON SOURCE CODE ANALYSIS MANIPULATION, PROCEEDINGS, P83, DOI 10.1109/SCAM.2002.1134108
   Berger T., 2010, P INT C AUT SOFTW EN, P73, DOI DOI 10.1145/1858996.1859010
   Berger T, 2013, IEEE T SOFTWARE ENG, V39, P1611, DOI 10.1109/TSE.2013.34
   Berger T, 2010, LECT NOTES COMPUT SC, V6287, P498, DOI 10.1007/978-3-642-15579-6_48
   Bodden E, 2013, ACM SIGPLAN NOTICES, V48, P355, DOI 10.1145/2499370.2491976
   Brabrand C., 2012, Proceedings of the 11th Annual International Conference on Aspect-oriented Software Development, AOSD '12, P13, DOI DOI 10.1145/2162049.2162052
   Calder M, 2006, FORM METHOD SYST DES, V28, P213, DOI 10.1007/s10703-006-0002-5
   Chen S, 2012, ACM SIGPLAN NOTICES, V47, P29, DOI 10.1145/2398856.2364535
   Clarke EM, 1999, MODEL CHECKING, P1
   Classen A., 2010, ICSE 10, V1, P335, DOI DOI 10.1145/1806799.1806850
   Classen A, 2013, IEEE T SOFTWARE ENG, V39, P1069, DOI 10.1109/TSE.2012.86
   Cordy M, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P190, DOI 10.1145/2635868.2635919
   Czarnecki K, 2005, LECT NOTES COMPUT SC, V3676, P422
   Czarnecki K., 2006, GPCE, P211
   Delaware B, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P243, DOI 10.1145/1595696.1595733
   Erwig M, 2011, ACM T SOFTW ENG METH, V21, DOI 10.1145/2063239.2063245
   Garvin BJ, 2011, 22ND IEEE INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING (ISSRE), P90, DOI 10.1109/ISSRE.2011.25
   Hu Y, 2000, PROC IEEE INT CONF S, P196
   Hunsen C, 2016, EMPIR SOFTW ENG, V21, P449, DOI 10.1007/s10664-015-9360-1
   Johansen MF, 2011, LECT NOTES COMPUT SC, V6981, P638, DOI 10.1007/978-3-642-24485-8_47
   Johnson B, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P672, DOI 10.1109/ICSE.2013.6606613
   Kästner C, 2012, ACM SIGPLAN NOTICES, V47, P773, DOI 10.1145/2398857.2384673
   Kästner C, 2012, ACM T SOFTW ENG METH, V21, DOI 10.1145/2211616.2211617
   Kästner C, 2011, OOPSLA 11: PROCEEDINGS OF THE 2011 ACM INTERNATIONAL CONFERENCE ON OBJECT ORIENTED PROGRAMMING SYSTEMS LANGUAGES AND APPLICATIONS, P805
   Kästner C, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P311, DOI 10.1145/1368088.1368131
   Kastner C., 2012, Proc. of FOSD'12, P1
   Kastner C., 2017, ABS170609357 CORR
   Kildall G. A., 1973, Conference Record of ACM Symposium on Principles of Programming Languages, P194
   Kim C. H. P., 2012, Proceedings of the 2012 IEEE 23rd International Symposium on Software Reliability Engineering (ISSRE), P221, DOI 10.1109/ISSRE.2012.23
   Kuhn DR, 2004, IEEE T SOFTWARE ENG, V30, P418, DOI 10.1109/TSE.2004.24
   Latendresse M, 2003, SEVENTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P170, DOI 10.1109/CSMR.2003.1192425
   Lauenroth K, 2009, IEEE INT CONF AUTOM, P269, DOI 10.1109/ASE.2009.16
   Liebig J., 2013, P 2013 9 JOINT M FDN, P81, DOI DOI 10.1145/2491411.2491437
   Liebig Jorg, 2011, AOSD 11
   Liebig Jorg, 2010, P 32 ACM IEEE INT C, V1, P105
   Medeiros F, 2016, PROC INT CONF SOFTW, P643, DOI 10.1145/2884781.2884793
   Medeiros Flavio, 2015, 29 EUR C OBJ OR PROG, P495
   Mendonca Marcilio, 2009, SPLC' 09, P231
   Metzger A, 2007, INT REQUIR ENG CONF, P243, DOI 10.1109/RE.2007.61
   Nadi S, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P140, DOI 10.1145/2568225.2568283
   Nie CH, 2011, ACM COMPUT SURV, V43, DOI 10.1145/1883612.1883618
   Nielson F., 1999, Principles of Program Analysis
   Perrouin G, 2012, SOFTWARE QUAL J, V20, P605, DOI 10.1007/s11219-011-9160-9
   She Steven, 2010, FORMAL SEMANTICS KCO
   Siegmund N, 2012, PROC INT CONF SOFTW, P167, DOI 10.1109/ICSE.2012.6227196
   Tartler R, 2011, EUROSYS 11: PROCEEDINGS OF THE EUROSYS 2011 CONFERENCE, P47
   Thaker Sahil., 2007, P 6 INT C GENERATIVE, P95
   Thüm T, 2014, ACM COMPUT SURV, V47, DOI 10.1145/2580950
   Tomita M., 1984, 10th International Conference on Computational Linguistics. 22nd Annual Meeting of the Association for Computational Linguistics. Proceedings of Coling 84, P354
   von Rhein A, 2016, J LOG ALGEBR METHODS, V85, P125, DOI 10.1016/j.jlamp.2015.06.007
   von Rhein A, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P178, DOI 10.1109/ICSE.2015.39
   Walkingshaw Eric, 2014, ACM SIGPLAN S NEW ID, P213
NR 61
TC 36
Z9 38
U1 0
U2 1
PU ASSOC COMPUTING MACHINERY
PI NEW YORK
PA 2 PENN PLAZA, STE 701, NEW YORK, NY 10121-0701 USA
SN 1049-331X
EI 1557-7392
J9 ACM T SOFTW ENG METH
JI ACM Trans. Softw. Eng. Methodol.
PD NOV
PY 2018
VL 27
IS 4
AR 18
DI 10.1145/3280986
PG 33
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HJ4EO
UT WOS:000457127000004
OA Bronze
DA 2024-07-18
ER

PT J
AU Gay, G
   Rajan, A
   Staats, M
   Whalen, M
   Heimdahl, MPE
AF Gay, Gregory
   Rajan, Ajitha
   Staats, Matt
   Whalen, Michael
   Heimdahl, Mats P. E.
TI The Effect of Program and Model Structure on the Effectiveness of MC/DC
   Test Adequacy Coverage
SO ACM TRANSACTIONS ON SOFTWARE ENGINEERING AND METHODOLOGY
LA English
DT Article
DE Experimentation; Verification; Coverage; fault finding
AB Test adequacy metrics defined over the structure of a program, such as Modified Condition and Decision Coverage (MC/DC), are used to assess testing efforts. However, MC/DC can be "cheated" by restructuring a program to make it easier to achieve the desired coverage. This is concerning, given the importance of MC/DC in assessing the adequacy of test suites for critical systems domains. In this work, we have explored the impact of implementation structure on the efficacy of test suites satisfying the MC/DC criterion using four real-world avionics systems.
   Our results demonstrate that test suites achieving MC/DC over implementations with structurally complex Boolean expressions are generally larger and more effective than test suites achieving MC/DC over functionally equivalent, but structurally simpler, implementations. Additionally, we found that test suites generated over simpler implementations achieve significantly lower MC/DC and fault-finding effectiveness when applied to complex implementations, whereas test suites generated over the complex implementation still achieve high MC/DC and attain high fault finding over the simpler implementation. By measuring MC/DC over simple implementations, we can significantly reduce the cost of testing, but in doing so, we also reduce the effectiveness of the testing process. Thus, developers have an economic incentive to "cheat" the MC/DC criterion, but this cheating leads to negative consequences. Accordingly, we recommend that organizations require MC/DC over a structurally complex implementation for testing purposes to avoid these consequences.
C1 [Gay, Gregory] Univ South Carolina, Dept Comp Sci & Engn, Columbia, SC 29208 USA.
   [Rajan, Ajitha] Univ Edinburgh, Sch Informat, Edinburgh EH1 2QL, Midlothian, Scotland.
   [Staats, Matt] Google Inc, Zurich, Switzerland.
   [Whalen, Michael; Heimdahl, Mats P. E.] Univ Minnesota, Dept Comp Sci & Engn, Minneapolis, MN 55455 USA.
C3 University of South Carolina System; University of South Carolina
   Columbia; University of Edinburgh; Google Incorporated; University of
   Minnesota System; University of Minnesota Twin Cities
RP Gay, G (corresponding author), Univ South Carolina, Dept Comp Sci & Engn, Columbia, SC 29208 USA.
EM greg@greggay.com; ajitha.rajan@gmail.com; staatsm@gmail.com;
   whalen@cs.umn.edu; heimdahl@cs.umn.edu
OI Gay, Gregory/0000-0001-6794-9585
FU NASA Ames Research Center Cooperative Agreement [NNA06CB21A]; NASA IVV
   Facility [NNG-05CB16C]; NSF [CNS-0931931, CNS-1035715]; L-3 Titan Group
FX This work has been partially supported by NASA Ames Research Center
   Cooperative Agreement NNA06CB21A, NASA IV&V Facility Contract
   NNG-05CB16C, NSF grants CNS-0931931 and CNS-1035715, and the L-3 Titan
   Group.
CR Andrews JH, 2006, IEEE T SOFTWARE ENG, V32, P608, DOI 10.1109/TSE.2006.83
   [Anonymous], P 2 NASA FORM METH S
   [Anonymous], 2013, P 2013 INT S SOFTW T, DOI DOI 10.1145/2483760.2483774
   [Anonymous], 2015, P 30 IEEE ACM INT C
   [Anonymous], 1990, Software testing techniques {
   [Anonymous], P 2013 INT C SOFTW E
   [Anonymous], DO178B RTCA
   Chilenski J., 2001, DOTFAAAR0118 OFF AV
   CHILENSKI JJ, 1994, SOFTWARE ENG J, V9, P193, DOI 10.1049/sej.1994.0025
   Esterel-Technologies, 2004, SCADE SUIT PROD DESC
   Gacek Andrew, 2015, JKIND JAVA IMPLEMENT
   Gargantini A, 1999, LECT NOTES COMPUT SC, V1687, P146, DOI 10.1145/318774.318939
   Gargantini A, 2013, 2013 IEEE SIXTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST 2013), P463, DOI 10.1109/ICST.2013.64
   Gay G., 2015, IEEE T SOFTWARE ENG, V99, P1
   Gay G., 2015, IEEE T SOFTWARE ENG, P99
   Gay Gregory., 2014, Proceedings of the 7th International Workshop on Search-Based Software Testing. SBST 2014, P19
   Gligoric M., 2013, P 2013 INT S SOFTW T, P302, DOI DOI 10.1145/2483760.2483769
   Groce Alex, 2014, INT S NEW ID NEW PAR, P255, DOI DOI 10.1145/2661136.2661157
   Hagen G., 2008, THESIS
   Halbwachs Nicolas., 1993, Synchronous Programming of Reactive Systems
   Hayhurst K.J., 2001, TM2001210876 NASA
   Heimdahl M. P. E., 2008, IEEE AIAA 27 DIG AV
   Inozemtseva L, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P435, DOI 10.1145/2568225.2568271
   Just R, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P654, DOI 10.1145/2635868.2635929
   Kandl S, 2010, LECT NOTES COMPUT SC, V6399, P131, DOI 10.1007/978-3-642-16256-5_14
   Kit E., 1995, SOFTWARE TESTING REA
   Mathworks Documentation, 2015, TYP MOD COV
   McMinn P, 2004, SOFTW TEST VERIF REL, V14, P105, DOI 10.1002/stvr.294
   Miller SP, 2010, COMMUN ACM, V53, P58, DOI 10.1145/1646353.1646372
   Mockus A, 2009, INT SYMP EMP SOFTWAR, P292
   NAMIN AS, 2009, P INT S SOFTW TEST A, P57
   Perry W.E., 2006, EFFECTIVE METHODS SO, VThird
   Pezze M., 2006, Software Test and Analysis: Process, Principles, and Techniques
   Rajan A, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P161, DOI 10.1145/1368088.1368111
   Rayadurgam S, 2001, EIGHTH ANNUAL IEEE INTERNATIONAL CONFERENCE AND WORKSHOP ON THE ENGINEERING OF COMPUTER BASED SYSTEMS, PROCEEDINGS, P83, DOI 10.1109/ECBS.2001.922409
   RTCA Inc., 2012, RTCADO178C
   Staats M, 2012, PROC INT CONF SOFTW, P870, DOI 10.1109/ICSE.2012.6227132
   Staats M, 2012, LECT NOTES COMPUT SC, V7212, P409, DOI 10.1007/978-3-642-28872-2_28
   Staats M, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P391, DOI 10.1145/1985793.1985847
   Staats M, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P892, DOI 10.1145/1985793.1985936
   Van Eijk CAJ., 2002, Computer-Aided Design of Integrated Circuits and Systems, V19, P814
   Whalen MW., 2006, P INT S SOFTW TEST A, P25, DOI DOI 10.1145/1146238.1146242
   WILCOXON F, 1945, BIOMETRICS BULL, V1, P80, DOI 10.1093/jee/39.2.269
   Yuen TY, 2006, J SYST SOFTWARE, V79, P577, DOI 10.1016/j.jss.2005.05.030
NR 44
TC 24
Z9 28
U1 1
U2 4
PU ASSOC COMPUTING MACHINERY
PI NEW YORK
PA 1601 Broadway, 10th Floor, NEW YORK, NY USA
SN 1049-331X
EI 1557-7392
J9 ACM T SOFTW ENG METH
JI ACM Trans. Softw. Eng. Methodol.
PD AUG
PY 2016
VL 25
IS 3
AR 25
DI 10.1145/2934672
PG 34
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DV2MF
UT WOS:000382754000006
OA Green Accepted, Green Published
DA 2024-07-18
ER

PT J
AU Yang, CB
   Wu, SR
   Chan, WK
AF Yang, Chunbai
   Wu, Shangru
   Chan, W. K.
TI Hierarchical Program Paths
SO ACM TRANSACTIONS ON SOFTWARE ENGINEERING AND METHODOLOGY
LA English
DT Article
DE Path tracing; interprocedural path; hierarchical and compositional
   representation
ID TRACE-COMPRESSION
AB Complete dynamic control flow is a fundamental kind of execution profile about program executions with a wide range of applications. Tracing the dynamic control flow of program executions for a brief period easily generates a trace consisting of billions of control flow events. The number of events in such a trace is large, making both path tracing and path querying to incur significant slowdowns. A major class of path tracing techniques is to design novel trace representations that can be generated efficiently, and encode the inputted sequences of such events so that the inputted sequences are still derivable from the encoded and smaller representations. The control flow semantics in such representations have, however, become obscure, which makes implementing path queries on such a representation inefficient and the design of such queries complicated. We propose a novel two-phase path tracing framework-Hierarchical Program Path (HPP)-to model the complete dynamic control flow of an arbitrary number of executions of a program. In Phase 1, HPP monitors each execution, and efficiently generates a stream of events, namely HPPTree, representing a novel tree-based representation of control flow for each thread of control in the execution. In Phase 2, given a set of such event streams, HPP identifies all the equivalent instances of the same exercised interprocedural path in all the corresponding HPPTree instances, and represents each such equivalent set of paths with a single subgraph, resulting in our compositional graph-based trace representation, namely, HPPDAG. Thus, an HPPDAG instance has the potential to be significantly smaller in size than the corresponding HPPTree instances, and still completely preserves the control flow semantics of the traced executions. Control flow queries over all the traced executions can also be directly performed on the single HPPDAG instance instead of separately processing the trace representation of each execution followed by aggregating their results. We validate HPP using the SPLASH2 and SPECint 2006 benchmarks. Compared to the existing technique, named BLPT (Ball-Larus-based Path Tracing), HPP generates significantly smaller trace representations and incurs fewer slowdowns to the native executions in online tracing of Phase 1. The HPPDAG instances generated in Phase 2 are significantly smaller than their corresponding BLPT and HPPTree traces. We show that HPPDAG supports efficient backtrace querying, which is a representative path query based on complete control flow trace. Finally, we illustrate the ease of use of HPPDAG by building a novel and highly efficient path profiling technique to demonstrate the applicability of HPPDAG.
C1 [Yang, Chunbai; Wu, Shangru; Chan, W. K.] City Univ Hong Kong, Dept Comp Sci, 83 Tat Chee Ave, Kowloon Tong, Hong Kong, Peoples R China.
C3 City University of Hong Kong
RP Chan, WK (corresponding author), City Univ Hong Kong, Dept Comp Sci, 83 Tat Chee Ave, Kowloon Tong, Hong Kong, Peoples R China.
EM chunbyang2@gapps.cityu.edu.hk; shangru.wu@my.cityu.edu.hk;
   wkchan@cityu.edu.hk
RI Chan, Wah Kheong/AGA-6636-2022
OI Chan, Wah Kheong/0000-0002-9105-5837; Chan, Wing
   Kwong/0000-0001-7726-6235
FU General Research Fund; Early Career Scheme of the Research Grants
   Council of Hong Kong [11200015, 11201114, 111313, 125113, 123512]
FX This work is supported by the General Research Fund and Early Career
   Scheme of the Research Grants Council of Hong Kong (project numbers
   11200015, 11201114, 111313, 125113, and 123512).
CR AGRAWAL H, 1990, SIGPLAN NOTICES, V25, P246, DOI 10.1145/93548.93576
   Altekar G, 2009, SOSP'09: PROCEEDINGS OF THE TWENTY-SECOND ACM SIGOPS SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES, P193
   [Anonymous], 2010, GZIP GNU GZIP V1 4
   [Anonymous], 2015, CLANG 3 5
   Ayers A, 2005, ACM SIGPLAN NOTICES, V40, P201, DOI 10.1145/1064978.1065035
   Ball T, 1996, PROCEEDINGS OF THE 29TH ANNUAL IEEE/ACM INTERNATIONAL SYMPOSIUM ON MICROARCHITECTURE - MICRO-29, P46, DOI 10.1109/MICRO.1996.566449
   Burtscher M, 2005, IEEE T COMPUT, V54, P1329, DOI 10.1109/TC.2005.186
   Burtscher M., 2004, Performance Evaluation Review, V32, P167, DOI 10.1145/1012888.1005708
   Cai Y, 2014, IEEE T SOFTWARE ENG, V40, P266, DOI 10.1109/TSE.2014.2301725
   Chilimbi TM, 2009, PROC INT CONF SOFTW, P34, DOI 10.1109/ICSE.2009.5070506
   D'Elia DC, 2013, ACM SIGPLAN NOTICES, V48, P373, DOI [10.1145/2509136.2509521, 10.1145/2544173.2509521]
   Duesterwald E., 2000, Operating Systems Review, V34, P202, DOI 10.1145/384264.379241
   Flanagan C, 2009, PLDI'09 PROCEEDINGS OF THE 2009 ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P121, DOI 10.1145/1542476.1542490
   Gligoric M., 2013, P 2013 INT S SOFTW T, P302, DOI DOI 10.1145/2483760.2483769
   GOEL A, 2003, P ACM SIGPLAN S PRIN, P191
   Henning J. L., 2006, SIGARCH COMPUT ARCHI, V34, P1, DOI [DOI 10.1145/1186736.1186737, 10.1145/1186736.1186737]
   Huang J, 2013, ACM SIGPLAN NOTICES, V48, P141, DOI 10.1145/2499370.2462167
   Kaplan S. F., 2003, ACM Transactions on Modeling and Computer Simulation, V13, P1, DOI 10.1145/778553.778554
   Ketterlin A, 2008, INT SYM CODE GENER, P94
   Larus JR, 1999, ACM SIGPLAN NOTICES, V34, P259, DOI 10.1145/301631.301678
   Lattner C, 2004, INT SYM CODE GENER, P75, DOI 10.1109/CGO.2004.1281665
   Law J, 2003, PROC INT CONF SOFTW, P308, DOI 10.1109/ICSE.2003.1201210
   Li BX, 2012, J SYST SOFTWARE, V85, P1558, DOI 10.1016/j.jss.2012.01.046
   Lin YJ, 2007, J SYST SOFTWARE, V80, P396, DOI 10.1016/j.jss.2006.06.007
   Melski D, 1999, LECT NOTES COMPUT SC, V1575, P47
   NevillManning CG, 1997, IEEE DATA COMPR CONF, P3, DOI 10.1109/DCC.1997.581951
   Ohmann P, 2013, IEEE INT CONF AUTOM, P378, DOI 10.1109/ASE.2013.6693096
   Ramamurthi Arun, 2011, P 19 ACM SIGSOFT S 1, P512
   Renieris M., 2005, Proc. 10th European software engineering conference held jointly with 13th ACM SIGSOFT international symposium on Foundations of software engineering, P90, DOI DOI 10.1145/1081706.1081721
   Roy S, 2009, INT SYM CODE GENER, P70, DOI 10.1109/CGO.2009.11
   Scholz B, 2002, 2002 INTERNATIONAL CONFERENCE ON PARALLEL ARCHITECTURES AND COMPILATION TECHNIQUES, PROCEEDINGS, P95, DOI 10.1109/PACT.2002.1106007
   SUMNER W.N., 2010, Proceedings of the 32nd ACM/IEEE International Conference on Software Engineering, P525
   Tallam S, 2005, PACT 2005: 14TH INTERNATIONAL CONFERENCE ON PARALLEL ARCHITECTURES AND COMPILATION TECHNIQUES, P17
   Tallam S, 2004, INT SYM CODE GENER, P251
   Wang Tao., 2007, P 2007 INT S SOFTWAR, P228, DOI [10.1145/1273463.1273494, DOI 10.1145/1273463.1273494]
   WELCH TA, 1984, COMPUTER, V17, P8, DOI 10.1109/MC.1984.1659158
   WOO SC, 1995, ACM COMP AR, P24, DOI 10.1109/ISCA.1995.524546
   Xin Bin, 2008, P 2008 ACM SIGPLAN C, P238
   Xu GQ, 2014, ACM T SOFTW ENG METH, V23, DOI 10.1145/2560047
   Zhang XY, 2004, INT SYMP MICROARCH, P105
   Zhang Youtao, 2001, P ACM SIGPLAN 2001 C, P180
   Zhao Q., 2006, 15 INT C PARALLEL AR, P154, DOI DOI 10.1145/1152154.1152180
NR 42
TC 6
Z9 6
U1 0
U2 2
PU ASSOC COMPUTING MACHINERY
PI NEW YORK
PA 2 PENN PLAZA, STE 701, NEW YORK, NY 10121-0701 USA
SN 1049-331X
EI 1557-7392
J9 ACM T SOFTW ENG METH
JI ACM Trans. Softw. Eng. Methodol.
PD AUG
PY 2016
VL 25
IS 3
AR 27
DI 10.1145/2963094
PG 44
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DV2MF
UT WOS:000382754000008
DA 2024-07-18
ER

PT J
AU Yi, J
   Qi, DW
   Tan, SH
   Roychoudhury, A
AF Yi, Jooyong
   Qi, Dawei
   Tan, Shin Hwei
   Roychoudhury, Abhik
TI Software Change Contracts
SO ACM TRANSACTIONS ON SOFTWARE ENGINEERING AND METHODOLOGY
LA English
DT Article
DE Languages; Reliability; Theory; Verification; Software changes; dynamic
   checking; static checking
ID VERIFICATION; CHECKING
AB Software errors often originate from incorrect changes, including incorrect program fixes, incorrect feature updates, and so on. Capturing the intended program behavior explicitly via contracts is thus an attractive proposition. In our recent work, we had espoused the notion of "change contracts" to express the intended program behavior changes across program versions. Change contracts differ from program contracts in that they do not require the programmer to describe the intended behavior of those program features which are unchanged across program versions. In this work, we present the formal semantics of our change contract language built on top of the Java modeling language (JML). Our change contract language can describe behavioral as well as structural changes. We evaluate the expressivity of the change contract language via a survey given to final-year undergraduate students. The survey results enable to understand the usability of our change contract language for purposes of writing contracts, comprehending written contracts, and modifying programs according to given change contracts.
   Finally, we develop both dynamic and static checkers for change contracts, and show how they can be used in maintaining software changes. We use our dynamic checker to automatically suggest tests that manifest violations of change contracts. Meanwhile, we use our static checker to verify that a program is changed as specified in its change contract. Apart from verification, our static checker also performs various other software engineering tasks, such as localizing the buggy method, detecting/debugging regression errors, and classifying the cause for a test failure as either error in production code or error in test code.
C1 [Yi, Jooyong; Qi, Dawei; Tan, Shin Hwei; Roychoudhury, Abhik] Natl Univ Singapore, Sch Comp, Singapore 117417, Singapore.
C3 National University of Singapore
RP Roychoudhury, A (corresponding author), Natl Univ Singapore, Sch Comp, Comp 1,13 Comp Dr, Singapore 117417, Singapore.
EM abhik@comp.nus.edu.sg
RI Yi, Jooyong/ACE-0654-2022
OI Yi, Jooyong/0000-0002-7215-0855; ROYCHOUDHURY, Abhik/0000-0002-7127-1137
FU NSF [ACI-1314674, CNS1228930]
FX We thank David Cok (supported by NSF grants ACI-1314674, CNS1228930) for
   helping us use OpenJML and jSMTLIB.
CR Ahrendt W., 2004, SOFTW SYST MODEL, V4, P32, DOI [10.1007/s10270-004-0058-x, DOI 10.1007/S10270-004-0058-X]
   [Anonymous], 1998, P 1998 ACM SIGSOFT I, DOI [DOI 10.1145/271771.271803, 10.1145/271771.271803]
   [Anonymous], 1997, Object-oriented software construction
   [Anonymous], P 1 AAAI C HUM COMP
   BARNETT M, 2004, LNCS, V3362, P49, DOI [DOI 10.1007/978-3-540-30569-9_3, 10.1007]
   Barnett M, 2006, LECT NOTES COMPUT SC, V4111, P364
   Barrett C., 2012, SMT LIB STANDARD VER
   Berdine J, 2006, LECT NOTES COMPUT SC, V4111, P115
   Böhme M, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P302, DOI 10.1109/ICSE.2013.6606576
   Burdy L., 2005, International Journal on Software Tools for Technology Transfer, V7, P212, DOI 10.1007/s10009-004-0167-4
   Cheon Yoonsik., 2002, Proceedings of the International Conference on Software Engineering Research and Practice (SERP'02), P322
   Clarke EM, 1999, MODEL CHECKING, P1
   Cok DR, 2014, ELECTRON P THEOR COM, P79, DOI 10.4204/EPTCS.149.8
   Cok DR, 2005, LECT NOTES COMPUT SC, V3362, P108
   Dallmeier V., 2007, P 22 IEEE ACM INT C, P433
   de Moura L, 2008, LECT NOTES COMPUT SC, V4963, P337, DOI 10.1007/978-3-540-78800-3_24
   De Moura Leonardo, 2012, ANSWER QUESTION TITL
   Flanagan C, 2002, ACM SIGPLAN NOTICES, V37, P234, DOI 10.1145/543552.512558
   Godlin B, 2013, SOFTW TEST VERIF REL, V23, P241, DOI 10.1002/stvr.1472
   Godlin B, 2009, DES AUT CON, P466
   Gupta R., 1992, Conference on Software Maintenance 1992 (Cat.No.92CH3206-0), P299, DOI 10.1109/ICSM.1992.242531
   Hao D, 2013, LECT NOTES COMPUT SC, V7920, P602, DOI 10.1007/978-3-642-39038-8_25
   Hawblitzel Chris, 2013, Automated Deduction - CADE-24. 24th International Conference on Automated Deduction. Proceedings: LNCS 7898, P282, DOI 10.1007/978-3-642-38574-2_20
   JACKSON D, 1994, INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE, PROCEEDINGS, P243, DOI 10.1109/ICSM.1994.336770
   Lahiri Shuvendu K., 2012, Computer Aided Verification. Proceedings 24th International Conference, CAV 2012, P712, DOI 10.1007/978-3-642-31424-7_54
   Lahiri ShuvenduK., 2013, ACM SIGSOFT S FDN SO, P345, DOI DOI 10.1145/2491411.2491452
   LEAVENS GT, 1991, IEEE SOFTWARE, V8, P72, DOI 10.1109/52.300040
   MEYER B, 1992, COMPUTER, V25, P40, DOI 10.1109/2.161279
   MULLER P, 2002, LECT NOTES COMPUTER, V2262
   Pacheco C., 2007, OOPSLA 2007 COMPANIO, P815
   Parnas DL, 2011, FUTURE OF SOFTWARE ENGINEERING, P125, DOI 10.1007/978-3-642-15187-3_8
   Person Suzette, 2008, P 16 INT S FDN SOFTW, P226, DOI [DOI 10.1145/1453101.1453131, 10.1145/1453101.1453131]
   Qi DW, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P33, DOI 10.1145/1595696.1595704
   Qi Dawei, 2012, P 20 ACM SIGSOFT INT
   Rothermel G, 2001, IEEE T SOFTWARE ENG, V27, P929, DOI 10.1109/32.962562
   Salcianu A, 2005, LECT NOTES COMPUT SC, V3385, P199
   Wei Jin, 2010, Proceedings of the Third IEEE International Conference on Software Testing, Verification and Validation (ICST 2010), P137, DOI 10.1109/ICST.2010.64
   Yih-Farn Chen, 1994, ICSE-16. 16th International Conference on Software Engineering (Cat. No.94CH3409-0), P211, DOI 10.1109/ICSE.1994.296780
   Zeller A, 1999, LECT NOTES COMPUT SC, V1687, P253, DOI 10.1145/318774.318946
NR 39
TC 5
Z9 8
U1 0
U2 4
PU ASSOC COMPUTING MACHINERY
PI NEW YORK
PA 2 PENN PLAZA, STE 701, NEW YORK, NY 10121-0701 USA
SN 1049-331X
EI 1557-7392
J9 ACM T SOFTW ENG METH
JI ACM Trans. Softw. Eng. Methodol.
PD MAY
PY 2015
VL 24
IS 3
AR 18
DI 10.1145/2729973
PG 43
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CI5UV
UT WOS:000354826200006
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Li, YQ
   Cheung, SC
   Zhang, XY
   Liu, YP
AF Li, Yueqi
   Cheung, S. C.
   Zhang, Xiangyu
   Liu, Yepang
TI Scaling Up Symbolic Analysis by Removing Z-Equivalent States
SO ACM TRANSACTIONS ON SOFTWARE ENGINEERING AND METHODOLOGY
LA English
DT Article
DE Algorithms; Verification; Performance; Experimentation; Symbolic
   analysis; path explosion; state equivalence detection
ID EXECUTION
AB Path explosion is a major issue in applying path-sensitive symbolic analysis to large programs. We observe that many symbolic states generated by the symbolic analysis of a procedure are indistinguishable to its callers. It is, therefore, possible to keep only one state from each set of equivalent symbolic states without affecting the analysis result. Based on this observation, we propose an equivalence relation called z-equivalence, which is weaker than logical equivalence, to relate a large number of z-equivalent states. We prove that z-equivalence is strong enough to guarantee that paths to be traversed by the symbolic analysis of two z-equivalent states are identical, giving the same solutions to satisfiability and validity queries. We propose a sound linear algorithm to detect z-equivalence. Our experiments show that the symbolic analysis that leverages z-equivalence is able to achieve more than ten orders of magnitude reduction in terms of search space. The reduction significantly alleviates the path explosion problem, enabling us to apply symbolic analysis in large programs such as Hadoop and Linux Kernel.
C1 [Li, Yueqi; Cheung, S. C.; Liu, Yepang] Hong Kong Univ Sci & Technol, Hong Kong, Hong Kong, Peoples R China.
   [Zhang, Xiangyu] Purdue Univ, W Lafayette, IN 47907 USA.
C3 Hong Kong University of Science & Technology; Purdue University System;
   Purdue University
RP Li, YQ (corresponding author), Hong Kong Univ Sci & Technol, Hong Kong, Hong Kong, Peoples R China.
EM yueqili@cse.ust.hk
RI Zhang, Xiangyu/H-9255-2013; Zhang, yuxuan/JXM-9935-2024; Cheung, Shing
   Chi/U-5882-2018; Liu, Yepang/G-6183-2018
OI Zhang, Xiangyu/0000-0003-0876-6783; Cheung, Shing
   Chi/0000-0002-3508-7172; Liu, Yepang/0000-0001-8147-8126
FU Research Grants Council under General Research Fund of Hong Kong
   [611912]; US National Science Foundation (NSF) [D917007, 1218993,
   1320326]; Direct For Computer & Info Scie & Enginr; Division of
   Computing and Communication Foundations [1320326, 1218993] Funding
   Source: National Science Foundation
FX This research is supported by the Research Grants Council under General
   Research Fund 611912 of Hong Kong, aswell as by the US National Science
   Foundation (NSF) under grants D917007, 1218993, and 1320326.
CR Anand Saswat, 2009, International Journal on Software Tools for Technology Transfer, V11, P53, DOI 10.1007/s10009-008-0090-1
   [Anonymous], P ACM INT C OBJ OR P
   [Anonymous], LIMITS COMPUTATION I
   [Anonymous], HKUSTCS1306
   [Anonymous], 1993, Foundations of Constraint Satisfaction
   Babic D, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P211, DOI 10.1145/1368088.1368118
   Babic Domagoj., 2007, PROC CAV 07, P371
   Boonstoppel P, 2008, LECT NOTES COMPUT SC, V4963, P351, DOI 10.1007/978-3-540-78800-3_27
   Bugrara S., 2013, 2013 USENIX Annual Technical Conference, P199
   Cadar C., 2008, OSDI, V8, P209, DOI DOI 10.5555/1855741.1855756
   Chandra S, 2009, ACM SIGPLAN NOTICES, V44, P363, DOI 10.1145/1543135.1542517
   Chaudhuri A, 2010, PROCEEDINGS OF THE 17TH ACM CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY (CCS'10), P585, DOI 10.1145/1866307.1866373
   Chipounov V, 2012, ACM T COMPUT SYST, V30, DOI 10.1145/2110356.2110358
   Clarke E., 2003, Proceedings 2003. Design Automation Conference (IEEE Cat. No.03CH37451), P368
   Clarke L. A., 1976, IEEE Transactions on Software Engineering, VSE-2, P215, DOI 10.1109/TSE.1976.233817
   Cui HM, 2013, ACM SIGPLAN NOTICES, V48, P329, DOI 10.1145/2499368.2451152
   Dawei Qi, 2012, 2012 19th Working Conference on Reverse Engineering (WCRE), P415, DOI 10.1109/WCRE.2012.51
   Dillig I, 2008, ACM SIGPLAN NOTICES, V43, P270, DOI 10.1145/1379022.1375615
   Ganesh V, 2007, LECT NOTES COMPUT SC, V4590, P519
   Godefroid P., 2007, SIGPLAN Notices, V42, P47, DOI [10.1145/1190216.1190226, 10.1145/1190215.1190226]
   Godefroid P, 2005, ACM SIGPLAN NOTICES, V40, P213, DOI 10.1145/1064978.1065036
   Gulwani S, 2008, ACM SIGPLAN NOTICES, V43, P281, DOI 10.1145/1379022.1375616
   Hackett Brian., 2006, Proceedings of the 14th ACM SIGSOFT international symposium on Foundations of software engineering, SIGSOFT '06/FSE-14, P69
   Huth Michael, 2004, Logic in Computer Science: Modelling and reasoning about systems
   Khurshid S, 2003, LECT NOTES COMPUT SC, V2619, P553
   KING JC, 1976, COMMUN ACM, V19, P385, DOI 10.1145/360248.360252
   Kothari N, 2008, 2008 INTERNATIONAL CONFERENCE ON INFORMATION PROCESSING IN SENSOR NETWORKS, PROCEEDINGS, P271, DOI 10.1109/IPSN.2008.62
   Kuznetsov V, 2012, ACM SIGPLAN NOTICES, V47, P193, DOI 10.1145/2345156.2254088
   MURATA T, 1989, P IEEE, V77, P541, DOI 10.1109/5.24143
   Naik M, 2012, ACM SIGPLAN NOTICES, V47, P373, DOI 10.1145/2103621.2103701
   Pasareanu Corina S., 2008, P 2008 INT S SOFTW T, P15, DOI [DOI 10.1145/1390630.1390635, DOI 10.1145/1390630]
   Person S, 2011, ACM SIGPLAN NOTICES, V46, P504, DOI 10.1145/1993316.1993558
   Person Suzette, 2008, P 16 INT S FDN SOFTW, P226, DOI [DOI 10.1145/1453101.1453131, 10.1145/1453101.1453131]
   Russell S., 2016, Artificial intelligence a modern approach
   Santelices R.A., 2010, P 19 INT S SOFTW TES, P195, DOI [DOI 10.1145/1831708.1831733, 10.1145/1831708.1831733]
   Sen K., 2005, P 10 EUR SOFTW ENG C, V30, P263, DOI DOI 10.1145/1081706.1081750
   Visser W., 2006, P ACM SIGSOFT INT S, P37
   Yichen Xie, 2003, Software Engineering Notes, V28, P327, DOI 10.1145/949952.940115
NR 38
TC 3
Z9 3
U1 0
U2 11
PU ASSOC COMPUTING MACHINERY
PI NEW YORK
PA 1601 Broadway, 10th Floor, NEW YORK, NY USA
SN 1049-331X
EI 1557-7392
J9 ACM T SOFTW ENG METH
JI ACM Trans. Softw. Eng. Methodol.
PD AUG
PY 2014
VL 23
IS 4
SI SI
AR 34
DI 10.1145/2652484
PG 32
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AP2XB
UT WOS:000341938200008
DA 2024-07-18
ER

PT J
AU Unterkalmsteiner, M
   Feldt, R
   Gorschek, T
AF Unterkalmsteiner, M.
   Feldt, R.
   Gorschek, T.
TI A Taxonomy for Requirements Engineering and Software Test Alignment
SO ACM TRANSACTIONS ON SOFTWARE ENGINEERING AND METHODOLOGY
LA English
DT Article
DE Theory; Documentation; Management; Alignment; software process
   assessment; software testing; taxonomy
ID TEST-GENERATION; GOAL-DRIVEN; MODEL; TRACEABILITY; SYSTEMS; GAP;
   IMPLEMENTATION; DESIGN
AB Requirements Engineering and Software Testing are mature areas and have seen a lot of research. Nevertheless, their interactions have been sparsely explored beyond the concept of traceability. To fill this gap, we propose a definition of requirements engineering and software test (REST) alignment, a taxonomy that characterizes the methods linking the respective areas, and a process to assess alignment. The taxonomy can support researchers to identify new opportunities for investigation, as well as practitioners to compare alignment methods and evaluate alignment, or lack thereof. We constructed the REST taxonomy by analyzing alignment methods published in literature, iteratively validating the emerging dimensions. The resulting concept of an information dyad characterizes the exchange of information required for any alignment to take place. We demonstrate use of the taxonomy by applying it on five in-depth cases and illustrate angles of analysis on a set of thirteen alignment methods. In addition, we developed an assessment framework (REST-bench), applied it in an industrial assessment, and showed that it, with a low effort, can identify opportunities to improve REST alignment. Although we expect that the taxonomy can be further refined, we believe that the information dyad is a valid and useful construct to understand alignment.
C1 [Unterkalmsteiner, M.; Feldt, R.; Gorschek, T.] Blekinge Inst Technol, Sch Comp, Software Engn Res Lab, Karlskrona, Sweden.
   [Feldt, R.] Chalmers Univ Technol, Dept Comp Sci & Engn, Gothenburg, Sweden.
C3 Blekinge Institute Technology; Chalmers University of Technology
RP Unterkalmsteiner, M (corresponding author), Blekinge Inst Technol, Sch Comp, Software Engn Res Lab, Karlskrona, Sweden.
EM mun@bth.se
CR Abbors F, 2009, 2009 FIRST INTERNATIONAL CONFERENCE ON ADVANCES IN SYSTEM TESTING AND VALIDATION LIFECYCLE, P123, DOI 10.1109/VALID.2009.15
   Aldrich J, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P187, DOI 10.1109/ICSE.2002.1007967
   Amyot D, 2001, PROC INT CONF SOFTW, P743
   [Anonymous], 2004, Essential Classification
   [Anonymous], 1992, Advances in Classification Research Online
   [Anonymous], 2004, The rational unified process: an introduction
   [Anonymous], 2004, GUIDE SOFTWARE ENG B
   [Anonymous], 1990, IEEE Std 610.12-1990, V42, P112, DOI [10.1109/IEEESTD.1990.101064, DOI 10.1109/IEEESTD.1990.101064]
   [Anonymous], 2011, Oxford English Dictionary
   Arnold Dave, 2010, Proceedings of the 21st Australian Software Engineering Conference (ASWEC 2010), P75, DOI 10.1109/ASWEC.2010.29
   Avizienis A, 2004, IEEE T DEPEND SECURE, V1, P11, DOI 10.1109/TDSC.2004.2
   Barmi Z. A., 2011, 2011 IEEE Fourth International Conference on Software Testing, Verification and Validation Workshops (ICSTW), P476, DOI 10.1109/ICSTW.2011.58
   Beck K, 1999, COMPUTER, V32, P70, DOI 10.1109/2.796139
   Bertolino A, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P85, DOI 10.1109/FOSE.2007.25
   BLUM BI, 1994, COMMUN ACM, V37, P82, DOI 10.1145/188280.188377
   BOEHM BW, 1988, COMPUTER, V21, P61, DOI 10.1145/12944.12948
   BROHL AP, 1995, 5 MODELL STANDARD SO
   Buckley J, 2005, J SOFTW MAINT EVOL-R, V17, P309, DOI 10.1002/smr.319
   Bunse C, 2006, LECT NOTES COMPUT SC, V3938, P103
   Cheng BHC, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P285, DOI 10.1109/FOSE.2007.17
   Cleland-Huang J, 2003, IEEE T SOFTWARE ENG, V29, P796, DOI 10.1109/TSE.2003.1232285
   Conrad M, 2005, ELECTRON NOTES THEOR, V111, P13, DOI 10.1016/j.entcs.2004.12.005
   Damian D, 2005, EMPIR SOFTW ENG, V10, P255, DOI 10.1007/s10664-005-1288-4
   de Caso G, 2012, IEEE T SOFTWARE ENG, V38, P141, DOI 10.1109/TSE.2010.98
   De Lucia A, 2007, ACM T SOFTW ENG METH, V16, DOI 10.1145/1276933.1276934
   de Santiago VA, 2012, SOFTWARE QUAL J, V20, P77, DOI 10.1007/s11219-011-9155-6
   El-Attar M, 2010, REQUIR ENG, V15, P285, DOI 10.1007/s00766-009-0088-6
   Elrad T, 2002, LECT NOTES COMPUT SC, V2487, P189
   Feldt Robert, 2002, THESIS CHALMERS U TE
   Flammini F, 2009, SOFTW TEST VERIF REL, V19, P91, DOI 10.1002/stvr.389
   Floridi Luciano, 2010, Information: A Very Short Introduction, Very Short Intro- ductions
   Forsberg K., 1991, INCOSE INT S, V1, P57, DOI [10.1002/j-2334-5837.1991.tb01484.x,o.1, DOI 10.1002/J-2334-5837.1991.TB01484.X,O.1, 10.1002/j.2334-5837.1991.tb01484.x, DOI 10.1002/J.2334-5837.1991.TB01484.X]
   Fricker S, 2010, IEEE SOFTWARE, V27, P72, DOI 10.1109/MS.2010.44
   Glass RL, 2002, INFORM SOFTWARE TECH, V44, P491, DOI 10.1016/S0950-5849(02)00049-6
   Glass RL, 2002, COMMUN ACM, V45, P19
   GLASS RL, 1995, IEEE SOFTWARE, V12, P63, DOI 10.1109/52.391837
   Gorschek T, 2006, REQUIR ENG, V11, P79, DOI 10.1007/s00766-005-0020-7
   Gorschek T, 2008, INFORM SOFTWARE TECH, V50, P67, DOI 10.1016/j.infsof.2007.10.003
   Gotel O. C. Z., 1994, Proceedings of the First International Conference on Requirements Engineering (Cat. No.94TH0613-0), P94, DOI 10.1109/ICRE.1994.292398
   Graham D, 2002, IEEE SOFTWARE, V19, P15, DOI 10.1109/MS.2002.1032845
   Grieskamp W, 2011, SOFTW TEST VERIF REL, V21, P55, DOI 10.1002/stvr.427
   Grunske L, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P31, DOI 10.1145/1368088.1368094
   Güldali B, 2011, SOFTWARE QUAL J, V19, P771, DOI 10.1007/s11219-011-9149-4
   Hall JG, 2002, IEEE JOINT INTERNATIONAL CONFERENCE ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P137, DOI 10.1109/ICRE.2002.1048516
   Hayes JH, 2007, INNOV SYST SOFTW ENG, V3, P193, DOI 10.1007/s11334-007-0024-1
   Hayes JH, 2006, IEEE T SOFTWARE ENG, V32, P4, DOI 10.1109/TSE.2006.3
   Houmb SH, 2010, REQUIR ENG, V15, P63, DOI 10.1007/s00766-009-0093-9
   Ivarsson M, 2011, EMPIR SOFTW ENG, V16, P365, DOI 10.1007/s10664-010-9146-4
   Kitchenham B., 2007, 2007001 EBSE
   Kop C, 1998, THIRD INTERNATIONAL CONFERENCE ON REQUIREMENTS ENGINEERING - PROCEEDINGS, P90, DOI 10.1109/ICRE.1998.667813
   Kukkanen J, 2009, ASIA PAC SOFWR ENG, P482, DOI 10.1109/APSEC.2009.62
   Kwasnik BH, 1999, LIBR TRENDS, V48, P22
   Laplante P.A., 2007, What every engineer should know about software engineering
   Linnaei C., 1735, Systema naturae sive Regna Tria Naturae Systematice proposita per Classes, Ordines, Genera et Species
   Liu SY, 2009, INFORM SOFTWARE TECH, V51, P1565, DOI 10.1016/j.infsof.2009.06.015
   MADHAVJI NH, 1991, SOFTWARE ENG J, V6, P234, DOI 10.1049/sej.1991.0027
   Marczak S, 2011, INT REQUIR ENG CONF, P47, DOI 10.1109/RE.2011.6051643
   Martin RC, 2008, IEEE SOFTWARE, V25, P54, DOI 10.1109/MS.2008.24
   Mehta N. R., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, P178, DOI 10.1109/ICSE.2000.870409
   Melnik G., 2006, AGILE 2006
   Metsa J, 2007, USIC 2007: PROCEEDINGS OF THE SEVENTH INTERNATIONAL CONFERENCE ON QUALITY SOFTWARE, P5
   Miller T, 2012, SOFTW TEST VERIF REL, V22, P33, DOI 10.1002/stvr.431
   Muccini H, 2004, IEEE T SOFTWARE ENG, V30, P160, DOI 10.1109/TSE.2004.1271170
   Mugridge R, 2008, IEEE SOFTWARE, V25, P68, DOI 10.1109/MS.2008.11
   Murphy GC, 2001, IEEE T SOFTWARE ENG, V27, P364, DOI 10.1109/32.917525
   Mylopoulos John, 2000, INFORM SYSTEMS ENG S
   Naumann JD, 1982, MIS QUART, V6, P29, DOI 10.2307/248654
   Navarro I, 2010, REQUIR ENG, V15, P419, DOI 10.1007/s00766-010-0109-5
   Nebut C, 2006, IEEE T SOFTWARE ENG, V32, P140, DOI 10.1109/TSE.2006.22
   Nebut C, 2004, LECT NOTES COMPUT SC, V3014, P198
   Niu N, 2009, LECT NOTES COMPUT SC, V5560, P83, DOI 10.1007/978-3-642-03764-1_3
   Petersen K, 2009, INT SYMP EMP SOFTWAR, P402
   Pfleeger Shari Lawrence, 2009, SOFTWARE ENG THEORY
   Pickin S, 2007, IEEE T SOFTWARE ENG, V33, P252, DOI 10.1109/TSE.2007.39
   Pires PF, 2011, REQUIR ENG, V16, P133, DOI 10.1007/s00766-011-0116-1
   Post H, 2009, PROCEEDINGS OF THE 2009 17TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, P295, DOI 10.1109/RE.2009.43
   Ramesh B, 2001, IEEE T SOFTWARE ENG, V27, P58, DOI 10.1109/32.895989
   Randel B., 1968, SOFTW ENG REP C SPON, P204
   Robson C., 2002, Real World Research, V2nd
   Sabaliauskaite G, 2010, LECT NOTES COMPUT SC, V6182, P128, DOI 10.1007/978-3-642-14192-8_14
   Samuel P, 2007, INFORM SOFTWARE TECH, V49, P158, DOI 10.1016/j.infsof.2006.04.001
   Scacchi W., 2001, ENCY SOFTWARE ENG, P993
   Seater R, 2007, REQUIR ENG, V12, P77, DOI 10.1007/s00766-007-0048-y
   Siegl S., 2010, Proceedings of the 2010 IEEE 18th International Conference on Requirements Engineering (RE2010), P345, DOI 10.1109/RE.2010.49
   Siveroni I, 2010, REQUIR ENG, V15, P95, DOI 10.1007/s00766-009-0091-y
   Sjoberg DIK, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P358, DOI 10.1109/FOSE.2007.30
   Smite D, 2008, 2008 3RD IEEE INTERNATIONAL CONFERENCE GLOBAL SOFTWARE ENGINEERING, PROCEEDINGS, P173, DOI 10.1109/ICGSE.2008.22
   Svahnberg M, 2005, SOFTWARE PRACT EXPER, V35, P705, DOI 10.1002/spe.652
   Unterkalmsteiner M, 2012, IEEE T SOFTWARE ENG, V38, P398, DOI 10.1109/TSE.2011.26
   Utting M, 2012, SOFTW TEST VERIF REL, V22, P297, DOI 10.1002/stvr.456
   Uusitalo EJ, 2008, INT REQUIR ENG CONF, P265, DOI 10.1109/RE.2008.30
   Uzuncaova E, 2010, IEEE T SOFTWARE ENG, V36, P309, DOI 10.1109/TSE.2010.30
   Valderas P, 2009, INFORM SOFTWARE TECH, V51, P749, DOI 10.1016/j.infsof.2008.09.008
   Vegas S, 2009, IEEE T SOFTWARE ENG, V35, P551, DOI 10.1109/TSE.2009.13
   WATKINS R, 1994, IEEE SOFTWARE, V11, P104, DOI 10.1109/52.300100
   Winbladh K, 2006, IEEE INT CONF AUTOM, P289
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
   Xu DX, 2012, SOFTW TEST VERIF REL, V22, P267, DOI 10.1002/stvr.440
   Zou J, 2008, IEEE CONGRESS ON SERVICES 2008, PT I, PROCEEDINGS, P337, DOI 10.1109/SERVICES-1.2008.46
NR 99
TC 33
Z9 34
U1 1
U2 22
PU ASSOC COMPUTING MACHINERY
PI NEW YORK
PA 1601 Broadway, 10th Floor, NEW YORK, NY USA
SN 1049-331X
EI 1557-7392
J9 ACM T SOFTW ENG METH
JI ACM Trans. Softw. Eng. Methodol.
PD MAR
PY 2014
VL 23
IS 2
AR 16
DI 10.1145/2523088
PG 38
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AF8XA
UT WOS:000334997700006
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Singh, PV
AF Singh, Param Vir
TI The Small-World Effect: The Influence of Macro-Level Properties of
   Developer Collaboration Networks on Open-Source Project Success
SO ACM TRANSACTIONS ON SOFTWARE ENGINEERING AND METHODOLOGY
LA English
DT Article
DE Management; Design; Measurement; Performance; Verification; Open source
   software development; social networks; small world networks; online
   community; collaborative software development; team formation;
   productivity
ID SOURCE SOFTWARE-DEVELOPMENT; STRUCTURAL HOLES; KNOWLEDGE; IMPACT;
   DYNAMICS; APACHE; FIRM
AB In this study we investigate the impact of community-level networks-relationships that exist among developers in an OSS community-on the productivity of member developers. Specifically, we argue that OSS community networks characterized by small-world properties would positively influence the productivity of the member developers by providing them with speedy and reliable access to more quantity and variety of information and knowledge resources. Specific hypotheses are developed and tested using longitudinal data on a large panel of 4,279 projects from 15 different OSS communities hosted at Sourceforge. Our results suggest that significant variation exists in small-world properties of OSS communities at Sourceforge. After accounting for project, foundry, and time-specific observed and unobserved effects, we found a statistically significant relationship between small-world properties of a community and the technical and commercial success of the software produced by its members. In contrast to the findings of prior research, we also found the lack of a significant relationship between closeness and betweenness centralities of the project teams and their success. These results were robust to a number of controls and model specifications.
C1 [Singh, Param Vir] Carnegie Mellon Univ, Pittsburgh, PA 15213 USA.
C3 Carnegie Mellon University
RP Singh, PV (corresponding author), bCarnegie Mellon Univ, Tepper Sch Business, Pittsburgh, PA 15213 USA.
EM psidhu@cmu.edu
OI Singh, Param Vir/0000-0002-0211-7849
CR [Anonymous], 2006, Data Analysis using Regression and Multilevel/Hierarchical Models, DOI DOI 10.1017/CBO9780511790942
   BAKER WE, 1990, AM J SOCIOL, V96, P589, DOI 10.1086/229573
   Bartlett FC., 1995, Remembering
   BASILI VR, 1995, SLOAN MANAGE REV, V37, P55
   Baum JAC, 2003, IND CORP CHANGE, V12, P697, DOI 10.1093/icc/12.4.697
   Berge E, 2001, CEREBROVASC DIS, V11, P305, DOI 10.1159/000047658
   BLUNDELL R, 1995, ECON J, V105, P333, DOI 10.2307/2235494
   Boh WF, 2007, MANAGE SCI, V53, P1315, DOI 10.1287/mnsc.1060.0687
   Brown JS, 1991, ORGAN SCI, V2, P40, DOI 10.1287/orsc.2.1.40
   Burt R., 1992, STRUCTURAL HOLES
   Burt RS, 2004, AM J SOCIOL, V110, P349, DOI 10.1086/421787
   CHENGALURSMITH S, 2003, P 24 INT C INF SYST
   COHEN WM, 1990, ADMIN SCI QUART, V35, P128, DOI 10.2307/2393553
   COLEMAN JS, 1988, AM J SOCIOL, V94, pS95, DOI 10.1086/228943
   Cooper RobertG., 2001, Winning at New Products: Accelerating the Process from Idea to Launch, V3rd
   Cox A., 1998, Cathedrals, Bazaars and the Town Council
   Crowston K., 2002, IEE Proceedings-Software, V149, P3, DOI 10.1049/ip-sen:20020197
   Crowston K., 2003, P 24 INT C INF SYST
   Davis G. F., 2003, Strategic Organization, V1, P301, DOI 10.1177/14761270030013002
   DeLone WH, 1992, INFORM SYST RES, V3, P60, DOI 10.1287/isre.3.1.60
   Fleming L, 2001, MANAGE SCI, V47, P117, DOI 10.1287/mnsc.47.1.117.10671
   Fleming L, 2007, ORGAN SCI, V18, P938, DOI 10.1287/orsc.1070.0289
   Fleming L, 2007, ORGAN SCI, V18, P165, DOI 10.1287/orsc.1060.0242
   Fleming L, 2006, CALIF MANAGE REV, V48, P6, DOI 10.2307/41166358
   Gallivan MJ, 2001, INFORM SYST J, V11, P277, DOI 10.1046/j.1365-2575.2001.00108.x
   GRANOVETTER MS, 1973, AM J SOCIOL, V78, P1360, DOI 10.1086/225469
   Greene W.H., 2007, Econometric analysis
   Grewal R, 2006, MANAGE SCI, V52, P1043, DOI 10.1287/mnsc.1060.0550
   Gulati R, 1998, STRATEGIC MANAGE J, V19, P293, DOI 10.1002/(SICI)1097-0266(199804)19:4<293::AID-SMJ982>3.0.CO;2-M
   Gulati R, 1999, AM J SOCIOL, V104, P1439, DOI 10.1086/210179
   Haefliger S, 2008, MANAGE SCI, V54, P180, DOI 10.1287/mnsc.1070.0748
   HAHN J, 2006, P 2 INT C OP SOURC S
   KOGUT B, 1992, ORGAN SCI, V3, P383, DOI 10.1287/orsc.3.3.383
   Kogut B, 2001, AM SOCIOL REV, V66, P317, DOI 10.2307/3088882
   Krishnamurthy S., 2005, First Monday, DOI [10.5210/fm.v0i0.1477., DOI 10.5210/FM.V0I0.1477]
   Kuk G, 2006, MANAGE SCI, V52, P1031, DOI 10.1287/mnsc.1060.0551
   Lerner J, 1998, J IND ECON, V46, P125
   MADEY G, 2002, P 8 AM C INF SYST
   March J.G., 1958, ORGANIZATIONS
   McPherson M, 2001, ANNU REV SOCIOL, V27, P415, DOI 10.1146/annurev.soc.27.1.415
   MILGRAM S, 1967, PSYCHOL TODAY, V1, P61
   Mockus A, 2002, ACM T SOFTW ENG METH, V11, P309, DOI 10.1145/567793.567795
   NARDUZZO A, 2003, MODULARITY ACTION GN
   Newman MEJ, 2001, PHYS REV E, V64, DOI [10.1103/PhysRevE.64.016132, 10.1103/PhysRevE.64.016131]
   NIJMAN T, 1992, J APPL ECONOM, V7, P243, DOI 10.1002/jae.3950070303
   Roberts JA, 2006, MANAGE SCI, V52, P984, DOI 10.1287/mnsc.1060.0554
   Sacks Marc., 1994, On-the-Job Learning in the Software Industry: Corporate Culture and the Acquisition of Knowledge
   Scacchi W., 2002, IEE Proceedings-Software, V149, P24, DOI 10.1049/ip-sen:20020202
   Schilling MA, 2007, MANAGE SCI, V53, P1113, DOI 10.1287/mnsc.1060.0624
   SINGH PV, 2005, NWORKSHOP INF TECHN
   SINGH PV, 2007, P 28 INT C INF SYST
   SINGH PV, 2007, WORKSH INF SYST EC
   Snijders T. A., 1999, MULTILEVEL ANAL INTR
   STEINFIELD C, 2006, P 38 HAW INT C SYST
   Stewart KJ, 2006, INFORM SYST RES, V17, P126, DOI 10.1287/isre.1060.0082
   Stewart KJ, 2006, MIS QUART, V30, P291
   Uzzi B, 2005, AM J SOCIOL, V111, P447, DOI 10.1086/432782
   Van Alstyne M, 2005, MANAGE SCI, V51, P851, DOI 10.1287/mnsc.1050.0363
   von Hippel E, 2003, ORGAN SCI, V14, P209, DOI 10.1287/orsc.14.2.209.14992
   Walker G, 1997, ORGAN SCI, V8, P109, DOI 10.1287/orsc.8.2.109
   Wasserman S., 1994, Social network analysis: Methods and applications'
   Watts DJ, 1999, AM J SOCIOL, V105, P493, DOI 10.1086/210318
   Watts DJ, 1998, NATURE, V393, P440, DOI 10.1038/30918
   Weber Steve, 2004, The Success of Open Source, DOI DOI 10.4159/9780674044999
   XU J, 2005, P 38 HAW INT C SYST
NR 65
TC 55
Z9 68
U1 2
U2 27
PU ASSOC COMPUTING MACHINERY
PI NEW YORK
PA 1601 Broadway, 10th Floor, NEW YORK, NY USA
SN 1049-331X
EI 1557-7392
J9 ACM T SOFTW ENG METH
JI ACM Trans. Softw. Eng. Methodol.
PD AUG
PY 2010
VL 20
IS 2
AR 6
DI 10.1145/1824760.1824763
PG 27
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA 661VG
UT WOS:000282757300003
DA 2024-07-18
ER

PT J
AU Tan, HBK
   Zhao, Y
   Zhang, H
AF Tan, Hee Beng Kuan
   Zhao, Yuan
   Zhang, Hongyu
TI Conceptual Data Model-Based Software Size Estimation for Information
   Systems
SO ACM TRANSACTIONS ON SOFTWARE ENGINEERING AND METHODOLOGY
LA English
DT Article
DE Measurement; Software sizing; line of code (LOC); conceptual data model;
   multiple linear regression model
ID POINT
AB Size estimation plays a key role in effort estimation that has a crucial impact on software projects in the software industry. Some information required by existing software sizing methods is difficult to predict in the early stage of software development. A conceptual data model is widely used in the early stage of requirements analysis for information systems. Lines of code (LOC) is a commonly used software size measure. This article proposes a novel LOC estimation method for information systems from their conceptual data models through using a multiple linear regression model. We have validated the proposed method using samples from both the software industry and open-source systems.
C1 [Tan, Hee Beng Kuan; Zhao, Yuan] Nanyang Technol Univ, Singapore 639798, Singapore.
   [Zhang, Hongyu] Tsinghua Univ, Sch Software, Beijing 100084, Peoples R China.
C3 Nanyang Technological University; Tsinghua University
RP Tan, HBK (corresponding author), Nanyang Technol Univ, 50 Nanyang Ave, Singapore 639798, Singapore.
EM ibktan@ntu.edu.sg; PG01874422@ntu.edu.sg; hongyu@tsinghua.edu.cn
RI Tan, Hee Beng Kuan/A-5147-2011; zhang, hongyu/ABC-3702-2021
OI zhang, hongyu/0000-0002-3063-9425
FU Singapore Computer Systems Pte. Ltd.; IPACS E-Solution (S) Pte. Ltd.;
   NatSteel Ltd.; Great Eastern Life Assurance Co. Limited; JTC
   Corporation; Adroit Pte. Ltd.; Institute of Technical Education of
   Singapore; National Institute of Education and National Computer Systems
   Pte. Ltd.
FX The authors would like to thank Singapore Computer Systems Pte. Ltd.,
   IPACS E-Solution (S) Pte. Ltd., NatSteel Ltd., Great Eastern Life
   Assurance Co. Limited, JTC Corporation, Adroit Pte. Ltd., the Institute
   of Technical Education of Singapore, and the National Institute of
   Education and National Computer Systems Pte. Ltd. for providing their
   project data. Without their support, this work would not have been
   possible. The authors also thank their MSc. student, Di Wang, and their
   final-year BEng. students, Han Chong Tan, Pua Chyuan Koh, Teck Leong Ng,
   Chye Yang Tan, Chiang Fong Lee, and Yeow Meng Ng for collecting the data
   from the open-source systems. The authors especially thank the anonymous
   reviewers for their insightful and helpful comments.
CR ALBRECHT AJ, 1983, IEEE T SOFTWARE ENG, V9, P639, DOI 10.1109/TSE.1983.235271
   [Anonymous], DATABASE SYSTEMS, DOI DOI 10.1145/320434.320440
   [Anonymous], 2000, Software Cost Estimation with COCOMO II
   Armour PG, 2002, COMMUN ACM, V45, P11
   Belsley D.A., 2004, REGRESSION DIAGNOSTI
   Blaha M., 1998, Object-Oriented Modeling and Design for Database Applications
   Boehm BW, 2000, IEEE SOFTWARE, V17, P22, DOI 10.1109/MS.2000.895164
   Briand L. C., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P313, DOI 10.1109/ICSE.1999.841022
   Briand L. C., 2002, Encyclopedia of software engineering, P1160, DOI DOI 10.1002/0471028959.SOF282
   BURGESS RS, 1988, STRUCTURED PROGRAM D
   CANFORA G, 2004, P 16 INT C SOFTW ENG, P57
   *COSM, 1999, FULL FUNCT POINTS RE
   Costagliola G, 2005, IEEE T SOFTWARE ENG, V31, P52, DOI 10.1109/TSE.2005.5
   Foss T, 2003, IEEE T SOFTWARE ENG, V29, P985, DOI 10.1109/TSE.2003.1245300
   Garmus David., 2000, Function Point Analysis: Measurement Practices for Successful Software Projects, V1th
   Ghezzi C., 2003, FUNDAMENTALS SOFTWAR
   Glantz S. A., 2001, Primer of Applied Regression & Analysis of Variance
   Hay D.C., 2002, Requirements Analysis: From Business Views to Architecture
   Hee Beng Kuan Tan, 2006, 28th International Conference on Software Engineering Proceedings, P321
   JEFFERY DR, 1993, IEEE T SOFTWARE ENG, V19, P529, DOI 10.1109/32.232016
   JEFFERY DR, 1999, EMPIR SOFTW ENG, V4, P135
   JENSEN R, 1983, P 5 ISPA C, P82
   JONES TC, 1997, APPL SOFTWARE MEASUR
   Kennedy P., 2003, A Guide to Econometrics
   Lai R, 2003, IEEE T SOFTWARE ENG, V29, P46, DOI 10.1109/TSE.2003.1166588
   LARANJEIRA LA, 1990, IEEE T SOFTWARE ENG, V16, P510, DOI 10.1109/32.52774
   McClave J., 2003, Statistics, V9th
   Miranda E., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, P597, DOI 10.1109/ICSE.2000.870452
   Mohagheghi P, 2005, PROC INT CONF SOFTW, P303
   Molokken K, 2003, 2003 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P223, DOI 10.1109/ISESE.2003.1237981
   Neter J., 1996, Applied Linear Regression Models
   Putnam L., 1992, MEASURES EXCELLENCE
   Ruhe M, 2003, PROC INT CONF SOFTW, P285, DOI 10.1109/ICSE.2003.1201208
   Smith J., 1999, The Estimation of Effort Based on Use Cases
   Snoeck M, 1998, IEEE T SOFTWARE ENG, V24, P233, DOI 10.1109/32.677182
   Stensrud E, 2002, EIGHTH IEEE SYMPOSIUM ON SOFTWARE METRICS, PROCEEDINGS, P3, DOI 10.1109/METRIC.2002.1011320
   Tan HBK, 2006, IEICE T INF SYST, VE89D, P1321, DOI 10.1093/ietisy/e89-d.4.1321
   TAN HBK, 2004, P INT C CONC MOD, P180
   TEOREY TJ, 1986, COMPUT SURV, V18, P197, DOI 10.1145/7474.7475
NR 39
TC 24
Z9 29
U1 0
U2 4
PU ASSOC COMPUTING MACHINERY
PI NEW YORK
PA 2 PENN PLAZA, STE 701, NEW YORK, NY 10121-0701 USA
SN 1049-331X
EI 1557-7392
J9 ACM T SOFTW ENG METH
JI ACM Trans. Softw. Eng. Methodol.
PD OCT
PY 2009
VL 19
IS 2
AR 4
DI 10.1145/1571629.1571630
PG 37
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 512AP
UT WOS:000271214500001
DA 2024-07-18
ER

PT J
AU Xie, Q
   Memon, AM
AF Xie, Qing
   Memon, Atif M.
TI Using a Pilot Study to Derive a GUI Model for Automated Testing
SO ACM TRANSACTIONS ON SOFTWARE ENGINEERING AND METHODOLOGY
LA English
DT Article
DE Verification; Reliability; Graphical user interfaces; model-based
   testing; test minimization; test suite management
AB Graphical user interfaces (GUIs) are one of the most commonly used parts of today's software. Despite their ubiquity, testing GUIs for functional correctness remains an understudied area. A typical GUI gives many degrees of freedom to an end-user, leading to an enormous input event interaction space that needs to be tested. GUI test designers generate and execute test cases (modeled as sequences of user events) to traverse its parts; targeting a subspace in order to maximize fault detection is a nontrivial task. In this vein, in previous work, we used informal GUI code examination and personal intuition to develop an event-interaction graph (EIG). In this article we empirically derive the EIG model via a pilot study, and the resulting EIG validates our intuition used in previous work; the empirical derivation process also allows for model evolution as our understanding of GUI faults improves. Results of the pilot study show that events interact in complex ways; a GUI's response to an event may vary depending on the context established by preceding events and their execution order. The EIG model helps testers to understand the nature of interactions between GUI events when executed in test cases and why certain events detect faults, so that they can better traverse the event space. New test adequacy criteria are defined for the EIG; new algorithms use these criteria and EIG to systematically generate test cases that are shown to be effective on four fielded open-source applications.
C1 [Memon, Atif M.] Univ Maryland, Dept Comp Sci, College Pk, MD 20742 USA.
C3 University System of Maryland; University of Maryland College Park
RP Xie, Q (corresponding author), Accenture Technol Labs, 161 N Clark St, Chicago, IL 60601 USA.
EM atif@cs.umd.edu
FU US National Science Foundation [CCF-0447864]; Office of Naval Research
   [N0001405-1-0421]
FX We thank the anonymous reviewers whose comments and suggestions helped
   to extend the empirical study, reshape its results, and improve the flow
   of the text. This work was partially supported by the US National
   Science Foundation under NSF grant CCF-0447864 and the Office of Naval
   Research grant N0001405-1-0421.
CR Andrews JH, 2005, PROC INT CONF SOFTW, P402, DOI 10.1145/1062455.1062530
   [Anonymous], THESIS U PITTSBURGH
   AUGUSTON M, 2005, MOST 05, P1
   Bernhard P. J., 1994, ACM Transactions on Software Engineering and Methodology, V3, P201, DOI 10.1145/196092.196088
   CHOW TS, 1978, IEEE T SOFTWARE ENG, V4, P178, DOI 10.1109/TSE.1978.231496
   Clarke J., 1998, P PAC NW SOFTW QUAL
   ESMELIOGLU S, 1997, P PAC NW SOFTW QUAL, P127
   Harrold MJ, 1997, J SYST SOFTWARE, V36, P273, DOI 10.1016/S0164-1212(96)00175-6
   HICINBOTHOM JH, 1993, P HUM FACT ERG SOC 3, V2, P1042
   Howe AE, 1997, KNOWLEDGE-BASED SOFTWARE ENGINEERING, P77, DOI 10.1023/A:1008607721339
   IMANIAN JA, 2005, THESIS NAVAL POSTGRA
   JORGENSEN PC, 1994, COMMUN ACM, V37, P30, DOI 10.1145/182987.182989
   KASIK DJ, 1996, P C HUM FACT COMP SY, P244
   Leow WK, 2004, PROC INT CONF SOFTW, P96
   MAURER PM, 1990, IEEE SOFTWARE, V7, P50, DOI 10.1109/52.56422
   Memon A, 2005, J SOFTW MAINT EVOL-R, V17, P27, DOI 10.1002/smr.305
   Memon A, 2003, 10TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P260, DOI 10.1109/WCRE.2003.1287256
   Memon A. M., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P257, DOI 10.1109/ICSE.1999.841016
   Memon A. M., 2000, SIGSOFT 2000, P30
   Memon AM, 2005, IEEE T SOFTWARE ENG, V31, P884, DOI 10.1109/TSE.2005.117
   Memon AM, 2001, IEEE T SOFTWARE ENG, V27, P144, DOI 10.1109/32.908959
   MEMON AM, 2001, ESEC FSE 9, P256
   MEMON AM, 2002, IEEE COMPUT, V35, P90
   MEMON AM, 2003, ADV COMPUT, V58, P150
   MEMON AM, 2003, ESEC FSE 11, P118
   Offutt A. J., 1996, SIGSOFT Software Engineering Notes, V21, P195, DOI [10.1145/229000.226317, 10.1145/226295.226317]
   Rapps S., 1982, Sixth International Conference on Software Engineering, P272
   Scheetz M., 1999, Proceedings 10th International Symposium on Software Reliability Engineering (Cat. No.PR00443), P250, DOI 10.1109/ISSRE.1999.809330
   Shehady RK, 1997, DIG PAP INT SYMP FAU, P80, DOI 10.1109/FTCS.1997.614080
   SHEHADY RK, 1997, P INT S FAULT TOL CO, V27, P80
   Spacco J., 2006, PROC 2006 INT WORK M, P133
   von Mayrhauser A., 1993, Proceedings. Fourth International Symposium on Software Reliability Engineering (Cat. No.93TH0560-3), P6, DOI 10.1109/ISSRE.1993.624269
   VONMAYRHAUSER A, 1994, INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE, PROCEEDINGS, P26, DOI 10.1109/ICSM.1994.336792
   White L, 2000, 11TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P110, DOI 10.1109/ISSRE.2000.885865
   Whittaker J. A., 1992, THESIS U TENNESSEE K
   WHITTAKER JA, 1994, IEEE T SOFTWARE ENG, V20, P812, DOI 10.1109/32.328991
   WOIT D, 1998, CASCON 98, P23
   WOIT D, 1993, INT S SOFTW TEST AN, P2
   Xie Q, 2005, PROC IEEE INT CONF S, P473
   Xie Q, 2006, PROC IEEE INT CONF S, P145
   Xie T, 2005, LECT NOTES COMPUT SC, V3440, P365
   Zellner A, 2002, STUD NONLINEAR DYN E, V6
NR 42
TC 45
Z9 53
U1 1
U2 6
PU ASSOC COMPUTING MACHINERY
PI NEW YORK
PA 2 PENN PLAZA, STE 701, NEW YORK, NY 10121-0701 USA
SN 1049-331X
EI 1557-7392
J9 ACM T SOFTW ENG METH
JI ACM Trans. Softw. Eng. Methodol.
PD NOV
PY 2008
VL 18
IS 2
AR 7
DI 10.1145/1416563.1416567
PG 35
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 394OA
UT WOS:000262454800004
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Henkel, J
   Reichenbach, C
   Diwan, A
AF Henkel, Johannes
   Reichenbach, Christoph
   Diwan, Amer
TI Developing and debugging algebraic specifications for Java classes
SO ACM TRANSACTIONS ON SOFTWARE ENGINEERING AND METHODOLOGY
LA English
DT Article
DE documentation; algebraic interpretation; algebraic specifications;
   specification discovery
AB Modern programs make extensive use of reusable software libraries. For example, a study of a number of large Java applications shows that between 17% and 30% of the classes in those applications use container classes defined in the java. util package. Given this extensive code reuse in Java programs, it is important for the interfaces of reusable classes to be well documented. An interface is well documented if it satisfies the following requirements: ( 1) the documentation completely describes how to use the interface; ( 2) the documentation is clear; ( 3) the documentation is unambiguous; and ( 4) any deviation between the documentation and the code is machine detectable. Unfortunately, documentation in natural language, which is the norm, does not satisfy the above requirements. Formal specifications can satisfy them but they are difficult to develop, requiring significant effort on the part of programmers.
   To address the practical difficulties with formal specifications, we describe and evaluate a tool to help programmers write and debug algebraic specifications. Given an algebraic specification of a class, our interpreter generates a prototype that can be used within an application like a regular Java class. When running an application that uses the prototype, the interpreter prints error messages that tell the developer in which way the specification is incomplete or inconsistent with a hand-coded implementation of the class. We use case studies to demonstrate the usefulness of our system.
C1 [Henkel, Johannes; Reichenbach, Christoph; Diwan, Amer] Univ Colorado, Boulder, CO 80309 USA.
C3 University of Colorado System; University of Colorado Boulder
RP Henkel, J (corresponding author), Univ Colorado, Boulder, CO 80309 USA.
OI Reichenbach, Christoph/0000-0003-0608-7023
CR AMMONS G, 2003, ACM SIGPLAN 2003 C P
   [Anonymous], 2003, CAMBR TRACTS THEOR C
   [Anonymous], 1970, Computational Problems in Abstract Algebra, DOI DOI 10.1016/B978-0-08-012975-4.50028-X
   ANTOY S, 2000, IEEE T SOFTW ENG, V26
   *AP SOFTW FDN, 2003, BCEL BYT COD ENG LIB
   *ASML, VERS 2 2
   BARNETT M, 2003, P 1 EUR C MOD DRIV S
   Beck K., 2000, EXTREME PROGRAMMING
   Beck Kent., 2003, TEST DRIVEN DEV
   Chen HY, 2001, ACM T SOFTW ENG METH, V10, P56, DOI 10.1145/366378.366380
   CHEN HY, 1998, ACM T SOFTW ENG, V7
   Dershowitz N., 2001, HDB AUTOMATED REASON, V1
   DERSHOWITZ N, 2003, DATABASE REWRITING S
   DOONG R, 1994, ACM T SOFTW ENG, V3
   FUTATSUGI K, 2003, CAFEOBJ OFFICIAL HOM
   GANNON J, 1981, ACM T PROGR LANG SYS, V3, P211, DOI 10.1145/357139.357140
   Goguen J., 2000, Software Engineering with OBJ: Algebraic Specification in Action
   GOGUEN J, 1982, ACM SIGSOFT SOFTWARE, V7, P75
   Goguen Joseph., 1993, APPL ALGEBRAIC SPECI
   GUTTAG JV, 1978, ACTA INFORM, V10, P27, DOI 10.1007/BF00260922
   HENKEL J, 2004, P 26 INT C SOFTW ENG
   HENKEL J, 2003, ECOOP 2003 OBJECT OR
   HENKEL J, 2004, CUCS97004 U COL BOUL
   HUGHES M, 1996, P INT S SOFTW TEST V
   Jackson D, 2002, ACM T SOFTW ENG METH, V11, P256, DOI 10.1145/505145.505149
   JACKSON D, 2000, ISSTA 00, P14
   KLOP JW, 1992, HDB LOGIC COMPUTER S, V1, P1
   Kupferman O, 1999, LECT NOTES COMPUT SC, V1703, P82
   MARINOV D, 2002, FME 2002 FORMAL METH
   Mitchell John C., 1996, Foundation of computing series
   Rapanotti L., 1992, PRGTR2892 OXF U COMP
   SANKAR S, 1991, P S TEST AN VER VICT
   Shlyakhter I, 2003, 18TH IEEE INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P94, DOI 10.1109/ASE.2003.1240298
   Shlyakhter I., 2002, ANAL DISTRIBUTED ALG
   THATCHER JW, 1982, ACM T PROGRAM LANG S, V4
   Vallée-Rai R, 2000, LECT NOTES COMPUT SC, V1781, P18
   Van den Brand MGJ, 2002, ACM T PROGR LANG SYS, V24, P334, DOI 10.1145/567097.567099
   WANG Y, 1994, ACM T SOFT ENG, V20
NR 38
TC 6
Z9 6
U1 0
U2 2
PU ASSOC COMPUTING MACHINERY
PI NEW YORK
PA 2 PENN PLAZA, STE 701, NEW YORK, NY 10121-0701 USA
SN 1049-331X
EI 1557-7392
J9 ACM T SOFTW ENG METH
JI ACM Trans. Softw. Eng. Methodol.
PD JUN
PY 2008
VL 17
IS 3
AR 14
DI 10.1145/1363102.1363105
PG 37
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 328TH
UT WOS:000257820200003
DA 2024-07-18
ER

PT J
AU Ben Braiek, H
   Khomh, F
AF Ben Braiek, Houssem
   Khomh, Foutse
TI Testing Feedforward Neural Networks Training Programs
SO ACM TRANSACTIONS ON SOFTWARE ENGINEERING AND METHODOLOGY
LA English
DT Article
DE Neural networks; training programs; property-based debugging
AB At present, we are witnessing an increasing effort to improve the performance and trustworthiness of Deep Neural Networks (DNNs), with the aim to enable their adoption in safety critical systems such as self-driving cars or aircraft collision-avoidance systems. Multiple testing techniques are proposed to generate test cases that can expose inconsistencies in the behavior of DNN models. These techniques assume implicitly that the training program is bug-free and appropriately configured. However, satisfying this assumption for a novel problem requires significant engineering work to prepare the data, design the DNN, implement the training program, and tune the hyperparameters to produce the model for which current automated test data generators search for corner-case behaviors. All these model training steps can be error prone. Therefore, it is crucial to detect and correct errors throughout all the engineering steps of DNN-based software systems and not only on the resulting DNN model.
   In this article, we gather a catalog of training issues and based on their symptoms and their effects on the behavior of the training program, we propose practical verification routines to detect the aforementioned issues, automatically, by continuously validating that some important properties of the learning dynamics hold during the training. Then, we design The Deep Checker, an end-to-end property-based debugging approach for DNN training programs and implement it as a TensorFlow-based library. As an empirical evaluation, we conduct a case study to assess the effectiveness of TheDeepChecker on synthetic and real-world buggy DL programs and compare its performance to that of the Amazon SageMaker Debugger (SMD). Results show that TheDeepChecker's on-execution validation of DNN-based program's properties through three sequential phases (pre-, on-, and post-fitting) succeeds in revealing several coding bugs and system misconfigurations errors early on and at a low cost. Moreover, our property-based approach outperforms the SMD's offline rules verification on training logs in terms of detection accuracy for unstable learning issues and coverage of additional DL bugs.
C1 [Ben Braiek, Houssem; Khomh, Foutse] Polytechn Montreal, SWAT Lab, 2500 Chemin Polytech, Montreal, PQ, Canada.
C3 Universite de Montreal; Polytechnique Montreal
RP Ben Braiek, H (corresponding author), Polytechn Montreal, SWAT Lab, 2500 Chemin Polytech, Montreal, PQ, Canada.
EM houssem.ben-braiek@polymtl.ca; foutse.khomh@polymtl.ca
FU Natural Sciences and Engineering Research Council of Canada (NSERC);
   Fonds de Recherche du Quebec (FRQ)
FX This work is partly funded by the Natural Sciences and Engineering
   Research Council of Canada (NSERC) and the Fonds de Recherche du Quebec
   (FRQ).
CR Abadi M., 2016, arXiv, DOI DOI 10.48550/ARXIV.1603.04467
   Aggarwal A, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P625, DOI 10.1145/3338906.3338937
   Archdeacon T. J., 1994, Correlation and Regression Analysis: A Historian's Guide
   Arjovsky M., 2017, arXiv, DOI 10.48550/arXiv.1701.04862
   Bae H, 2021, Arxiv, DOI arXiv:1807.11655
   Baldi Pierre, 2013, Advances in Neural Information Processing Systems, P2814
   Barr ET, 2015, IEEE T SOFTWARE ENG, V41, P507, DOI 10.1109/TSE.2014.2372785
   Ben Braiek H, 2018, Arxiv, DOI arXiv:1812.02257
   Ben Braiek H, 2019, PROC IEEE INT CONF S, P454, DOI 10.1109/ICSME.2019.00078
   Ben Braiek H, 2018, IEEE WORK CONF MIN S, P353, DOI 10.1145/3196398.3196445
   Bjorck J, 2018, ADV NEUR IN, V31
   Bottou L., 2015, Multilayer neural networks
   Cai Shanqing, 2016, Tensorflow debugger: Debugging dataflow graphs for machine learning
   Canziani A., 2017, arXiv
   D'Amour A, 2020, Arxiv, DOI arXiv:2011.03395
   Deeplearning4j, 2019, TROUBL NEUR NET TRAI
   Dishank Bansal, 2020, PITFALLS BATCH NORM
   Dua D., 2017, UCI MACHINE LEARNING
   Dubs Paul, 2020, VISUALIZATION VISUAL
   Dwarakanath A, 2018, ISSTA'18: PROCEEDINGS OF THE 27TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P118, DOI 10.1145/3213846.3213858
   Ernst MD, 2001, IEEE T SOFTWARE ENG, V27, P99, DOI 10.1109/32.908957
   Evci U, 2018, Arxiv, DOI arXiv:1806.06068
   Gal Y, 2016, Arxiv, DOI [arXiv:1506.02158, 10.48550/arXiv.1506.02158, DOI 10.48550/ARXIV.1506.02158]
   Garbin C, 2020, MULTIMED TOOLS APPL, V79, P12777, DOI 10.1007/s11042-019-08453-9
   Glorot X., 2010, P INT C ART INT STAT, P249
   Goodfellow I, 2016, ADAPT COMPUT MACH LE, P1
   Google, 2017, BAS REGR PRED FUEL E
   Google, 2020, GOOGL MACH LEARN CRA
   Grosse Roger, 2017, LECT 15 EXPL VAN GRA
   Guo JM, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P739, DOI 10.1145/3236024.3264835
   Hall M., 2009, ACM SIGKDD Explor. Newsl, V11, P18, DOI DOI 10.1145/1656274.1656278
   He KM, 2015, IEEE I CONF COMP VIS, P1026, DOI 10.1109/ICCV.2015.123
   Hinton G. E., 2012, Neural networks: tricks of the trade, P599
   Hohman F, 2019, IEEE T VIS COMPUT GR, V25, P2674, DOI 10.1109/TVCG.2018.2843369
   Park DH, 2019, Arxiv, DOI arXiv:1811.08056
   Hasanpour SH, 2018, Arxiv, DOI [arXiv:1802.06205, DOI 10.48550/ARXIV.1802.06205]
   Humbatova N, 2020, PROC INT CONF SOFTW, P1110, DOI 10.1145/3377811.3380395
   Ioffe S, 2015, Arxiv, DOI [arXiv:1502.03167, DOI 10.48550/ARXIV.1502.03167]
   Islam MJ, 2020, PROC INT CONF SOFTW, P1135, DOI 10.1145/3377811.3380378
   Islam MJ, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P510, DOI 10.1145/3338906.3338955
   Ivanov Slav, 2017, 37 REASONS WHY YOUR
   Jia Y, 2011, IEEE T SOFTWARE ENG, V37, P649, DOI 10.1109/TSE.2010.62
   Kahng M, 2018, IEEE T VIS COMPUT GR, V24, P88, DOI 10.1109/TVCG.2017.2744718
   Karpathy Andrej, 2020, RECIPE TRAINING NEUR
   Karpathy Andrej, 2018, NEURAL NETWORKS 3
   Karpathy Andrej, 2018, MOST COMMON NEURAL N
   Karras T, 2018, Arxiv, DOI [arXiv:1710.10196, DOI 10.48550/ARXIV.1710.10196]
   Katz G., 2017, arXiv
   Kornblith S, 2019, Arxiv, DOI arXiv:1905.00414
   Krizhevsky A., 2014, The cifar-10 dataset
   LeCun Y, 1998, LECT NOTES COMPUT SC, V1524, P9, DOI 10.1007/3-540-49430-8_2
   Lecun Y, 1998, P IEEE, V86, P2278, DOI 10.1109/5.726791
   LeCun Y., 2015, Lenet-5, convolutional neural networks
   LeCun Y., 2010, MNIST HANDWRITTEN DI
   Lei Ba J., 2016, arXiv
   Li H, 2018, ADV NEUR IN, V31
   Li X, 2019, PROC CVPR IEEE, P2677, DOI 10.1109/CVPR.2019.00279
   Liu MC, 2018, IEEE CONF VIS ANAL, P60, DOI 10.1109/VAST.2018.8802509
   Liu MC, 2017, IEEE T VIS COMPUT GR, V23, P91, DOI 10.1109/TVCG.2016.2598831
   Liu WB, 2017, NEUROCOMPUTING, V234, P11, DOI 10.1016/j.neucom.2016.12.038
   Lu L, 2020, Arxiv, DOI arXiv:1903.06733
   Ma L, 2018, IEEE INT CONF AUTOM, P120, DOI 10.1145/3238147.3238202
   Ma Lei, 2018, Deepmutation: Mutation testing of deep learning systems
   Ma YS, 2005, SOFTW TEST VERIF REL, V15, P97, DOI 10.1002/stvr.308
   MIT, 2020, MIT DEEP LEARN LECT
   MIT, 2020, CS231N CONV NEUR NET
   More A, 2016, Arxiv, DOI arXiv:1608.06048
   Smith LN, 2016, Arxiv, DOI [arXiv:1611.00847, 10.48550/arXiv.1611.00847]
   Ng Andrew, 2020, SPEC DEEP LEARN
   Ng Kian Katanforoosh Andrew, 2020, VISUALIZATION VISUAL
   Odena A, 2018, Arxiv, DOI arXiv:1807.10875
   Paraskevopoulou Z, 2015, LECT NOTES COMPUT SC, V9236, P325, DOI 10.1007/978-3-319-22102-1_22
   Pascanu R., 2013, INT C MACH LEARN, P1310
   Pei KX, 2017, PROCEEDINGS OF THE TWENTY-SIXTH ACM SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES (SOSP '17), P1, DOI 10.1145/3132747.3132785
   Perez L, 2017, Arxiv, DOI [arXiv:1712.04621, 10.48550/arXiv.1712.04621]
   Pezzotti N, 2018, IEEE T VIS COMPUT GR, V24, P98, DOI 10.1109/TVCG.2017.2744358
   Python Software Foundation, 2013, MUTPY 0 4 0
   Rakitianskaia A, 2015, 2015 IEEE SYMPOSIUM SERIES ON COMPUTATIONAL INTELLIGENCE (IEEE SSCI), P1423, DOI 10.1109/SSCI.2015.202
   Rauschmayr Nathalie, 2021, P MACHINE LEARNING S, V3
   Reddit D. L. community, 2018, MY NEURAL NETWORK IS
   Roberts Chase, 2018, UNIT TEST MACHINE LE
   Roth K, 2017, Arxiv, DOI arXiv:1705.09367
   Salimans T, 2016, Arxiv, DOI arXiv:1602.07868
   Santurkar S, 2018, ADV NEUR IN, V31
   Selsam D, 2017, Arxiv, DOI arXiv:1706.08605
   SHANNON CE, 1948, BELL SYST TECH J, V27, P623, DOI 10.1002/j.1538-7305.1948.tb00917.x
   Shao Cecelia, 2019, CHECKLIST DEBUGGING
   Simonyan K, 2015, Arxiv, DOI arXiv:1409.1556
   Srivastava N, 2014, J MACH LEARN RES, V15, P1929
   Szegedy C, 2015, PROC CVPR IEEE, P1, DOI 10.1109/CVPR.2015.7298594
   Tian YC, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P303, DOI 10.1145/3180155.3180220
   van Rooyen B, 2018, J MACH LEARN RES, V18
   Xie XF, 2018, Arxiv, DOI arXiv:1809.01266
   Xie XY, 2011, J SYST SOFTWARE, V84, P544, DOI 10.1016/j.jss.2010.11.920
   Zhang JW, 2019, IEEE T VIS COMPUT GR, V25, P364, DOI 10.1109/TVCG.2018.2864499
   Zhang YH, 2018, ISSTA'18: PROCEEDINGS OF THE 27TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P129, DOI 10.1145/3213846.3213866
NR 96
TC 2
Z9 2
U1 1
U2 3
PU ASSOC COMPUTING MACHINERY
PI NEW YORK
PA 1601 Broadway, 10th Floor, NEW YORK, NY USA
SN 1049-331X
EI 1557-7392
J9 ACM T SOFTW ENG METH
JI ACM Trans. Softw. Eng. Methodol.
PD JUL
PY 2023
VL 32
IS 4
AR 105
DI 10.1145/3529318
PG 61
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA L0SO0
UT WOS:001020441100024
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Liu, ES
   Lukes, DA
   Griswold, WG
AF Liu, Eric S.
   Lukes, Dylan A.
   Griswold, William G.
TI Refactoring in Computational Notebooks
SO ACM TRANSACTIONS ON SOFTWARE ENGINEERING AND METHODOLOGY
LA English
DT Article
DE Computational notebooks; end-user programming; refactoring
ID FALSE DISCOVERY RATE; CRITERION
AB Due to the exploratory nature of computational notebook development, a notebook can be extensively evolved even though it is small, potentially incurring substantial technical debt. Indeed, in interview studies notebook authors have attested to performing ongoing tidying and big cleanups. However, many notebook authors are not trained as software developers, and environments like JupyterLab possess few features to aid notebook maintenance.
   As software refactoring is traditionally a critical tool for reducing technical debt, we sought to better understand the unique and growing ecology of computational notebooks by investigating the refactoring of public Jupyter notebooks. We randomly selected 15,000 Jupyter notebooks hosted on GitHub and studied 200 with meaningful commit histories. We found that notebook authors do refactor, favoring a few basic classic refactorings as well as those involving the notebook cell construct. Those with a computing background refactored differently than others, but not more so. Exploration-focused notebooks had a unique refactoring profile compared to more exposition-focused notebooks. Authors more often refactored their code as they went along, rather than deferring maintenance to big cleanups. These findings point to refactoring being intrinsic to notebook development.
C1 [Liu, Eric S.; Lukes, Dylan A.; Griswold, William G.] Univ Calif San Diego, Comp Sci & Engn, 9500 Gilman Dr, La Jolla, CA 92093 USA.
C3 University of California System; University of California San Diego
RP Liu, ES (corresponding author), Univ Calif San Diego, Comp Sci & Engn, 9500 Gilman Dr, La Jolla, CA 92093 USA.
EM esl036@ucsd.edu; dlukes@eng.ucsd.edu; wgg@cs.ucsd.edu
OI Griswold, William/0000-0003-0663-6977
FU National Science Foundation [CCF-1719155]
FX This research was supported in part by the National Science Foundation
   under Grant No. CCF-1719155.
CR [Anonymous], 2006, The Internet and Higher Education, DOI [10.1016/j.iheduc.2005.11.00, DOI 10.1016/J.IHEDUC.2005.11.00, DOI 10.1016/J.IHEDUC.2005.11.001]
   Badame S, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P399, DOI 10.1109/ICSM.2012.6405299
   BELADY LA, 1976, IBM SYST J, V15, P225, DOI 10.1147/sj.153.0225
   BENJAMINI Y, 1995, J R STAT SOC B, V57, P289, DOI 10.1111/j.2517-6161.1995.tb02031.x
   Brooks Frederick P., 1995, The mythical man-month
   Brown Nanette, 2010, P FSE SDP WORKSH FUT, P47
   Chattopadhyay S, 2020, PROCEEDINGS OF THE 2020 CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS (CHI'20), DOI 10.1145/3313831.3376729
   Cramer H., 1999, MATH METHODS STAT PM
   Cunningham W., 1993, OOPS MESSENGER, V4, P29, DOI DOI 10.1145/157710.157715
   DUNN OJ, 1964, TECHNOMETRICS, V6, P241, DOI 10.2307/1266041
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   Fowler Martin, 2020, REFACTORING CATALOG
   GitHub Search, 2020, SEARCH VIA GITH API
   Griswold W. G., 1993, ACM Transactions on Software Engineering and Methodology, V2, P228, DOI 10.1145/152388.152389
   Head A, 2019, CHI 2019: PROCEEDINGS OF THE 2019 CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, DOI 10.1145/3290605.3300500
   Kery MB, 2018, PROCEEDINGS OF THE 2018 CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS (CHI 2018), DOI 10.1145/3173574.3173748
   Kery MB, 2018, 2018 IEEE SYMPOSIUM ON VISUAL LANGUAGES AND HUMAN-CENTRIC COMPUTING (VL/HCC), P147, DOI 10.1109/VLHCC.2018.8506576
   Kery MB, 2017, PROCEEDINGS OF THE 2017 ACM SIGCHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS (CHI'17), P1265, DOI 10.1145/3025453.3025626
   KNUTH DE, 1984, COMPUT J, V27, P97, DOI 10.1093/comjnl/27.2.97
   Koenzen AP, 2020, S VIS LANG HUM CEN C, DOI 10.1109/vl/hcc50065.2020.9127202
   KRUSKAL WH, 1952, J AM STAT ASSOC, V47, P583, DOI 10.1080/01621459.1952.10483441
   LSP, 2021, LSP INT JUP
   Macke S, 2021, PROC VLDB ENDOW, V14, P1093, DOI 10.14778/3447689.3447712
   Markowetz F, 2015, GENOME BIOL, V16, DOI 10.1186/s13059-015-0850-7
   Murphy-Bill E, 2008, IEEE SOFTWARE, V25, P38, DOI 10.1109/MS.2008.123
   Murphy-Hill E, 2009, PROC INT CONF SOFTW, P287, DOI 10.1109/ICSE.2009.5070529
   Pearson K, 1900, PHILOS MAG, V50, P157, DOI 10.1080/14786440009463897
   Perkel J, 2016, NATURE, V538, P127, DOI 10.1038/538127a
   Perkel JM, 2018, NATURE, V563, P145, DOI 10.1038/d41586-018-07196-1
   Peuch Laurent, 2020, WELCOME REDBARONS DO
   Rule A, 2018, PROCEEDINGS OF THE 2018 CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS (CHI 2018), DOI 10.1145/3173574.3173606
   Stolee KT, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P81, DOI 10.1145/1985793.1985805
   Wilson G, 2006, COMPUT SCI ENG, V8, P66, DOI 10.1109/MCSE.2006.122
   Wilson Greg, 2014, F1000Res, V3, P62, DOI 10.12688/f1000research.3-62.v2
   Yates F., 1934, JR STATIST SOC     S, V1, P217, DOI [https://doi.org/10.2307/2983604, DOI 10.2307/2983604]
   Yekutieli D, 1999, J STAT PLAN INFER, V82, P171, DOI 10.1016/S0378-3758(99)00041-5
NR 36
TC 0
Z9 0
U1 0
U2 0
PU ASSOC COMPUTING MACHINERY
PI NEW YORK
PA 1601 Broadway, 10th Floor, NEW YORK, NY USA
SN 1049-331X
EI 1557-7392
J9 ACM T SOFTW ENG METH
JI ACM Trans. Softw. Eng. Methodol.
PD JUL
PY 2023
VL 32
IS 3
AR 77
DI 10.1145/3576036
PG 24
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA I4NV8
UT WOS:001002573400022
OA hybrid
DA 2024-07-18
ER

PT J
AU Yitagesu, S
   Xing, ZC
   Zhang, XW
   Feng, ZY
   Li, XH
   Han, LY
AF Yitagesu, Sofonias
   Xing, Zhenchang
   Zhang, Xiaowang
   Feng, Zhiyong
   Li, Xiaohong
   Han, Linyi
TI Extraction of Phrase-based Concepts in Vulnerability Descriptions
   through Unsupervised Labeling
SO ACM TRANSACTIONS ON SOFTWARE ENGINEERING AND METHODOLOGY
LA English
DT Article
DE Textual vulnerability descriptions; phrase-based vulnerability concepts;
   unsupervised representation learning; clustering and concept labeling;
   supervised concept extraction
ID ENTITY RECOGNITION
AB Software vulnerabilities, once disclosed, can be documented in vulnerability databases, which have great potential to advance vulnerability analysis and security research. People describe the key characteristics of software vulnerabilities in natural language mixed with domain-specific names and concepts. This textual nature poses a significant challenge for the automatic analysis of vulnerability knowledge embedded in text. Automatic extraction of key vulnerability aspects is highly desirable but demands significant effort to manually label data for model training.
   In this article, we propose unsupervised methods to label and extract important vulnerability concepts in textual vulnerability descriptions (TVDs). We focus on six types of phrase-based vulnerability concepts (vulnerability type, vulnerable component, root cause, attacker type, impact, and attack vector) as they are much more difficult to label and extract than name- or number-based entities (i.e., vendor, product, and version). Our approach is based on a key observation that the same-type of phrases, no matter how they differ in sentence structures and phrase expressions, usually share syntactically similar paths in the sentence parsing trees. Specifically, we present a source-target neural architecture that learns the Part-of-Speech (POS) tagging to identify a token's functional role within TVDs, where the source neural model is trained to capture common features found in the TVD corpus, and the target model is trained to identify linguistically malformed words specific to the security domain. Our evaluation confirms that the proposed tagger outperforms (4.45%-5.98%) the taggers designed on natural language notions and identifies a broad set of TVDs and natural language contents. Then, based on the key observations, we propose two path representations (absolute paths and relative paths) and use an auto-encoder to encode such syntactic similarities. To address the discrete nature of our paths, we enhance the traditional Variational Auto-encoder (VAE) with Gumble-Max trick for categorical data distribution and thus create a Categorical VAE (CaVAE). In the latent space of absolute and relative paths, we further apply unsupervised clustering techniques to generate clusters of the same-type of concepts. Our evaluation confirms the effectiveness of our CaVAE, which achieves a small (85.85) log-likelihood for encoding path representations and the accuracy (83%-89%) of vulnerability concepts in the resulting clusters.
   The resulting clusters accurately label six types of vulnerability concepts from a TVD corpus in an unsupervised way. Furthermore, these labeled vulnerability concepts can be mapped back to the corresponding phrases in the original TVDs, which produce labels of six types of vulnerability concepts. The resulting labeled TVDs can be used to train concept extraction models for other TVD corpora. In this work, we present two concept extraction methods (concept classification and sequence labeling model) to demonstrate the utility of the unsupervisedly labeled concepts. Our study shows that models trained with our unsupervisedly labeled vulnerability concepts outperform (3.9%-5.14%) those trained with the two manually labeled TVD datasets from previous work due to the consistent boundary and typing by our unsupervised labeling method.
C1 [Yitagesu, Sofonias; Zhang, Xiaowang; Feng, Zhiyong; Li, Xiaohong; Han, Linyi] Tianjin Univ, Coll Intelligence & Comp, Beiyangyuan Campus,135 Yaguan Rd, Tianjin, Peoples R China.
   [Xing, Zhenchang] CSIROs, Data61, 2-40 Clunies Ross St,GPO Box 1700, Canberra, ACT 2601, Australia.
   [Xing, Zhenchang] Australian Natl Univ, 2-40 Clunies Ross St,GPO Box 1700, Canberra, ACT 2601, Australia.
C3 Tianjin University; Commonwealth Scientific & Industrial Research
   Organisation (CSIRO); Australian National University
RP Zhang, XW (corresponding author), Tianjin Univ, Coll Intelligence & Comp, Beiyangyuan Campus,135 Yaguan Rd, Tianjin, Peoples R China.
EM sofoniasyitagesu@yahoo.com; zhenchang.xing@data61.csiro.au;
   xiaowangzhang@tju.edu.cn; zyfeng@tju.edu.cn; xiaohongli@tju.edu.cn;
   hanly2@foxmail.com
RI wang, jiaqi/JSL-7112-2023; Feng, Zhi-Yong/I-7541-2016; Wang,
   Yanan/JVZ-7957-2024; zheng, liang/JVO-2610-2024; Zhang,
   Wenli/JXL-4317-2024; li, xiao/GSN-6181-2022; Sun, Jia/JXM-0311-2024;
   Wang, Chen/JZE-6385-2024; Wang, Yifan/KDO-8319-2024; feng,
   yue/KHV-4687-2024; lin, yuan/JXL-9592-2024; wang, xueting/JPY-2782-2023;
   wang, wenxin/JOZ-3291-2023; Zhang, Yansong/KHW-4097-2024; Li,
   Shuyao/JRY-8603-2023; Li, Xinyue/JVN-4601-2024; liu, sha/JXL-6600-2024;
   Liu, Liu/JXM-8208-2024; tian, ye/KGL-6485-2024; LIU,
   JIALIN/JXN-8034-2024; li, yuanfang/KHV-1697-2024; zhou,
   yuwei/KHD-4127-2024; zhao, sheng/JWO-6127-2024; Liu, min/JXW-8493-2024;
   Zhang, Chi/JSK-0744-2023; li, song/JVO-5938-2024; Liu,
   Jingyi/JWP-6326-2024; lin, lin/KFB-9548-2024; zhang,
   jiayue/JUF-0129-2023; zheng, xin/JNS-5523-2023
OI Feng, Zhiyong/0000-0001-8158-7453; Xing, Zhenchang/0000-0001-7663-1421;
   Zhang, Xiaowang/0000-0002-3931-3886
FU National Natural Science Foundation of China (NSFC) [61972455]
FX This work is supported by the National Natural Science Foundation of
   China (NSFC) (61972455).
CR Bridges RA, 2014, Arxiv, DOI arXiv:1308.4941
   Abadi M, 2016, PROCEEDINGS OF OSDI'16: 12TH USENIX SYMPOSIUM ON OPERATING SYSTEMS DESIGN AND IMPLEMENTATION, P265
   Akbik Alan, 2018, P 27 INT C COMP LING, P1638
   [Anonymous], 2017, National institute of standards and technology stopping-power range tables for electrons, protons, and helium ions
   Binyamini H, 2020, Arxiv, DOI arXiv:2008.04377
   Bird S., 2004, P ACL INTERACTIVE PO, P214
   Bottou L, 2010, COMPSTAT'2010: 19TH INTERNATIONAL CONFERENCE ON COMPUTATIONAL STATISTICS, P177, DOI 10.1007/978-3-7908-2604-3_16
   Bridges RA, 2017, 2017 16TH IEEE INTERNATIONAL CONFERENCE ON MACHINE LEARNING AND APPLICATIONS (ICMLA), P437, DOI 10.1109/ICMLA.2017.0-122
   Chen HP, 2019, PROCEEDINGS OF THE TWENTY-EIGHTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P6503
   Chollet F, 2015, KERAS
   Collins M, 2002, PROCEEDINGS OF THE 2002 CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING, P1
   Corporation MITRE, 2019, COMM VULN EXP CVE
   Corporation MITRE, 2017, NAT VULN DAT NVD
   Devlin J, 2019, Arxiv, DOI arXiv:1810.04805
   Dong Y, 2019, PROCEEDINGS OF THE 28TH USENIX SECURITY SYMPOSIUM, P869
   Peters ME, 2018, Arxiv, DOI [arXiv:1802.05365, 10.48550/arXiv.1802.05365]
   Ester M., 1996, KDD 96, P226, DOI DOI 10.5555/3001460.3001507
   Feng ZY, 2020, Arxiv, DOI [arXiv:2002.08155, 10.48550/arXiv.2002.08155]
   Gasmi H, 2019, APPL SCI-BASEL, V9, DOI 10.3390/app9193945
   Google, 2019, WORD2VEC
   Gumbel E. J, 1954, STAT THEORY EXTREME
   Günes TD, 2019, PROCEEDINGS OF THE TWENTY-EIGHTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P308
   Guo H, 2021, P INT COMP SOFTW APP, P1020, DOI 10.1109/COMPSAC51774.2021.00138
   IBM, 2019, IBM 10 FORC EXCH
   Jang E, 2017, P 5 INT C LEARNING R
   Jones C. L., 2015, Proceedings of the 10th Annual Cyber and Information Security Research Conference, P1, DOI [DOI 10.1145/2746266.2746277, 10.114 5/2746266.2746277]
   Joshi A, 2013, IEEE INT C SEMANT CO, P252, DOI 10.1109/ICSC.2013.50
    SK, 2020, Arxiv, DOI arXiv:2004.00502
   Kim G, 2020, INT J MACH LEARN CYB, V11, P2341, DOI 10.1007/s13042-020-01122-6
   Kingma D, 2014, ICLR P, V2014, P1
   Kingma D. P., 2014, AUTOENCODING VARIATI, P3581
   Krsul I.V., 1998, SOFTWARE VULNERABILI
   LANDIS JR, 1977, BIOMETRICS, V33, P363, DOI 10.2307/2529786
   Li J, 2023, IEEE T KNOWL DATA EN, V35, P3072, DOI 10.1109/TKDE.2021.3118469
   Li J, 2020, Arxiv, DOI [arXiv:1812.09449, DOI 10.48550/ARXIV.1812.09449]
   Li J, 2020, WEB CONFERENCE 2020: PROCEEDINGS OF THE WORLD WIDE WEB CONFERENCE (WWW 2020), P429, DOI 10.1145/3366423.3380127
   Liao XJ, 2016, CCS'16: PROCEEDINGS OF THE 2016 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P755, DOI 10.1145/2976749.2978315
   Lim SK, 2017, PROCEEDINGS OF THE 55TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (ACL 2017), VOL 1, P1557, DOI 10.18653/v1/P17-1143
   Linderman GC, 2019, NAT METHODS, V16, P243, DOI 10.1038/s41592-018-0308-4
   Maddison Chris J., 2017, P 5 INT C LEARNING R
   Marcus M.P., 1993, COMPUT LINGUIST, V19, P313, DOI DOI 10.21236/ADA273556
   McNeil N, 2013, 2013 12TH INTERNATIONAL CONFERENCE ON MACHINE LEARNING AND APPLICATIONS (ICMLA 2013), VOL 2, P60, DOI 10.1109/ICMLA.2013.106
   Mell Peter, 2007, P PUBLISHED 1 FORUM
   Mitchell T. M., 1997, MACH LEARN
   MITRE Jonathan Evans, 2020, KEY DET PHRAS
   Mittal S, 2016, PROCEEDINGS OF THE 2016 IEEE/ACM INTERNATIONAL CONFERENCE ON ADVANCES IN SOCIAL NETWORKS ANALYSIS AND MINING ASONAM 2016, P860, DOI 10.1109/ASONAM.2016.7752338
   More S., 2012, 2012 IEEE CS Security and Privacy Workshops (SPW 2012), P75, DOI 10.1109/SPW.2012.26
   Mulwad V., 2011, 2011 IEEE/WIC/ACM International Joint Conferences on Web Intelligence (WI) and Intelligent Agent Technologies, P257, DOI 10.1109/WI-IAT.2011.26
   Nair Vinod, 2010, INT C INT C MACHINE, P807
   Neil L, 2018, 2018 IEEE INTERNATIONAL CONFERENCE ON INTELLIGENCE AND SECURITY INFORMATICS (ISI), P7, DOI 10.1109/ISI.2018.8587375
   Offensive Security, 2019, EXPL DAT
   Vu PM, 2019, PROCEEDINGS OF THE 2019 ANNUAL ACM SOUTHEAST CONFERENCE (ACMSE 2019), P249, DOI 10.1145/3299815.3314470
   Pingle A, 2019, PROCEEDINGS OF THE 2019 IEEE/ACM INTERNATIONAL CONFERENCE ON ADVANCES IN SOCIAL NETWORKS ANALYSIS AND MINING (ASONAM 2019), P879, DOI 10.1145/3341161.3343519
   Qin Y, 2019, FRONT INFORM TECH EL, V20, P872, DOI 10.1631/FITEE.1800520
   Radford A, Improving language understanding by generative pre-training
   Rahmah N, 2016, IOP C SER EARTH ENV, V31, DOI 10.1088/1755-1315/31/1/012012
   Ratinov L., 2009, Proceedings of the 13th conference on computational natural language learning, P147
   Rezende DJ, 2014, PR MACH LEARN RES, V32, P1278
   Russo ER, 2019, J SYST SOFTWARE, V156, P84, DOI 10.1016/j.jss.2019.06.001
   Shaalan K, 2014, COMPUT LINGUIST, V40, P469, DOI [10.1162/COLI_a_00178, 10.1162/coli_a_00178]
   Singh R., 2013, ELEMENTS SURVEY SAMP
   Sonderby CK, 2016, Arxiv, DOI arXiv:1602.02282
   Stanford, 2018, STANF PARS
   Stanford, 2018, STANF TAGG
   Tsai HY, 2019, Arxiv, DOI arXiv:1909.00100
   Tulkens S, 2019, J BIOMED INFORM, V91, DOI 10.1016/j.jbi.2019.103120
   Vadapalli S.R., 2018, Proceedings of the International Conference on Security and Management (SAM), P220
   van der Maaten L, 2008, J MACH LEARN RES, V9, P2579
   Weerawardhana S, 2015, LECT NOTES COMPUT SC, V8930, P356, DOI 10.1007/978-3-319-17040-4_24
   Wu YH, 2016, Arxiv, DOI [arXiv:1609.08144, DOI 10.48550/ARXIV.1609.08144]
   Xiao ZF, 2017, 2017 13TH INTERNATIONAL CONFERENCE ON NATURAL COMPUTATION, FUZZY SYSTEMS AND KNOWLEDGE DISCOVERY (ICNC-FSKD), P2161, DOI 10.1109/FSKD.2017.8393106
   Yagcioglu S, 2019, Arxiv, DOI arXiv:1904.05054
   Yitagesu S, 2021, 2021 36TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING ASE 2021, P943, DOI 10.1109/ASE51524.2021.9678638
   Yitagesu S, 2021, IEEE WORK CONF MIN S, P29, DOI 10.1109/MSR52588.2021.00016
   Zafarian A, 2015, 2015 INTERNATIONAL SYMPOSIUM ON ARTIFICIAL INTELLIGENCE AND SIGNAL PROCESSING (AISP), P129, DOI 10.1109/AISP.2015.7123504
NR 75
TC 1
Z9 1
U1 6
U2 10
PU ASSOC COMPUTING MACHINERY
PI NEW YORK
PA 1601 Broadway, 10th Floor, NEW YORK, NY USA
SN 1049-331X
EI 1557-7392
J9 ACM T SOFTW ENG METH
JI ACM Trans. Softw. Eng. Methodol.
PD JUL
PY 2023
VL 32
IS 5
AR 112
DI 10.1145/3579638
PG 45
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA P9SM2
UT WOS:001054005300005
DA 2024-07-18
ER

PT J
AU Maddila, C
   Upadrasta, SS
   Bansal, C
   Nagappan, N
   Gousios, G
   van Deursen, A
AF Maddila, Chandra
   Upadrasta, Sai Surya
   Bansal, Chetan
   Nagappan, Nachiappan
   Gousios, Georgios
   van Deursen, Arie
TI Nudge: Accelerating Overdue Pull Requests toward Completion
SO ACM TRANSACTIONS ON SOFTWARE ENGINEERING AND METHODOLOGY
LA English
DT Article
DE Pull-based software development; pull request; merge conflict;
   distributed software development
AB Pull requests are a key part of the collaborative software development and code review process today. However, pull requests can also slow down the software development process when the reviewer(s) or the author do not actively engage with the pull request. In this work, we design an end-to-end service, Nudge, for accelerating overdue pull requests toward completion by reminding the author or the reviewer(s) to engage with their overdue pull requests. First, we use models based on effort estimation and machine learning to predict the completion time for a given pull request. Second, we use activity detection to filter out pull requests that may be overdue but for which sufficient action is taking place nonetheless. Last, we use actor identification to understand who the blocker of the pull request is and nudge the appropriate actor (author or reviewer(s)). The key novelty of Nudge is that it succeeds in reducing pull request resolution time, while ensuring that developers perceive the notifications sent as useful, at the scale of thousands of repositories. In a randomized trial on 147 repositories in use at Microsoft, Nudge was able to reduce pull request resolution time by 60% for 8,500 pull requests, when compared to overdue pull requests for which Nudge did not send a notification. Furthermore, developers receiving Nudge notifications resolved 73% of these notifications as positive. We observed similar results when scaling up the deployment of Nudge to 8,000 repositories at Microsoft, for which Nudge sent 210,000 notifications during a full year. This demonstrates Nudge's ability to scale to thousands of repositories. Last, our qualitative analysis of a selection of Nudge notifications indicates areas for future research, such as taking dependencies among pull requests and developer availability into account.
C1 [Maddila, Chandra; Bansal, Chetan; Nagappan, Nachiappan] Microsoft Res, 14820 NE 36th St, Redmond, WA 98052 USA.
   [Upadrasta, Sai Surya] Microsoft Res, Vigyan 1st Floor,9 Lavelle Rd, Bengaluru, India.
   [Gousios, Georgios; van Deursen, Arie] Delft Univ Technol, Bldg 28,Van Mourik Broekmanweg 6, NL-2628 XE Delft, Netherlands.
C3 Microsoft; Delft University of Technology
RP Maddila, C (corresponding author), Microsoft Res, 14820 NE 36th St, Redmond, WA 98052 USA.
EM chandu.maddila@gmail.com; upadrastasaisurya1@gmail.com;
   chetanb@microsoft.com; nachiappan.nagappan@gmail.com;
   g.gousios@tudelft.nl; arie.vandeursen@tudelft.nl
RI van Deursen, Arie/G-3084-2011
OI van Deursen, Arie/0000-0003-4850-3312; Gousios,
   Georgios/0000-0002-8495-7939; Maddila, Chandra/0000-0002-9432-1045
CR [Anonymous], 2014, Behavioral & Social Sciences Librarian, DOI DOI 10.1080/01639269.2014.964593
   Asthana S, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P937, DOI 10.1145/3338906.3340449
   Attarzadeh I., 2012, 2012 4th International Conference on Computational Intelligence, Communication Systems and Networks (CICSyN 2012), P167, DOI 10.1109/CICSyN.2012.39
   Bansal C, 2020, 2020 IEEE/ACM 42ND INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE (ICSE-SEIP), P201, DOI 10.1145/3377813.3381353
   Baysal O, 2013, WORK CONF REVERSE EN, P122, DOI 10.1109/WCRE.2013.6671287
   Bettenburg N, 2015, EMPIR SOFTW ENG, V20, P294, DOI 10.1007/s10664-013-9292-6
   Bhagwan R, 2018, PROCEEDINGS OF THE 13TH USENIX SYMPOSIUM ON OPERATING SYSTEMS DESIGN AND IMPLEMENTATION, P493
   blog.newrelic, LONG RUNN BRANCH CON
   Boehm B., 1995, Annals of Software Engineering, V1, P57, DOI 10.1007/BF02249046
   BOEHM BW, 1984, IEEE T SOFTWARE ENG, V10, P4, DOI 10.1109/TSE.1984.5010193
   Briand L. C., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P313, DOI 10.1109/ICSE.1999.841022
   Briand LC, 2000, J SYST SOFTWARE, V51, P245, DOI 10.1016/S0164-1212(99)00102-8
   Calikli Gul, 2010, P WORKSH PSYCH PROGR
   Chulani S, 1999, IEEE T SOFTWARE ENG, V25, P573, DOI 10.1109/32.799958
   Dell N., 2012, P SIGCHI C HUMAN FAC, P1321, DOI [DOI 10.1145/2207676.2208589, 10.1145/2207676.2208589]
   Dey Tapajit, 2020, P IEEEACM 42 INT C S, P209, DOI DOI 10.1145/3387940.3391502
   Dias K, 2020, INFORM SOFTWARE TECH, V121, DOI 10.1016/j.infsof.2020.106256
   docs.microsoft, AZ DEVOPS REST API
   Faro A, 2021, 2021 IEEE 3RD GLOBAL CONFERENCE ON LIFE SCIENCES AND TECHNOLOGIES (IEEE LIFETECH 2021), P454, DOI [10.1109/LifeTech52111.2021.9391828, 10.1109/LIFETECH52111.2021.9391828]
   flow.microsoft, US
   github, GITHUB MARK
   GitHub, US
   Kumar R, 2019, 2019 IEEE/ACM 1ST INTERNATIONAL WORKSHOP ON BOTS IN SOFTWARE ENGINEERING (BOTSE 2019), P48, DOI 10.1109/BotSE.2019.00020
   Kumer SVA, 2021, MATER TODAY-PROC, V46, P4070, DOI 10.1016/j.matpr.2021.02.610
   Layman L, 2008, P 2008 INT WORKING C, P43, DOI [10.1145/1370750.1370762, DOI 10.1145/1370750.1370762]
   Lebeuf C, 2019, 2019 IEEE/ACM 1ST INTERNATIONAL WORKSHOP ON BOTS IN SOFTWARE ENGINEERING (BOTSE 2019), P1, DOI 10.1109/BotSE.2019.00008
   Liu DG, 2019, PROCEEDINGS OF THE TWELFTH ACM INTERNATIONAL CONFERENCE ON WEB SEARCH AND DATA MINING (WSDM'19), P222, DOI 10.1145/3289600.3291003
   MacLeod L, 2018, IEEE SOFTWARE, V35, P34, DOI 10.1109/MS.2017.265100500
   Maddila C, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P874, DOI 10.1145/3338906.3340457
   Mehta S, 2020, PROCEEDINGS OF THE 17TH USENIX SYMPOSIUM ON NETWORKED SYSTEMS DESIGN AND IMPLEMENTATION, P435
   Menon VG, 2022, INTERNET THINGS-NETH, V18, DOI 10.1016/j.iot.2020.100213
   Menzies T, 2013, IEEE T SOFTWARE ENG, V39, P822, DOI 10.1109/TSE.2012.83
   Nickerson R. S., 1998, REV GEN PSYCHOL, V2, P175, DOI DOI 10.1037/1089-2680.2.2.175
   Ostrand TJ., 2004, Proceedings of the 2004 ACM SIGSOFT International Symposium on Software Testing and Analysis, ISSTA '04, V29, P86, DOI [DOI 10.1145/1013886.1007524, 10.1145/1013886.1007524]
   Rastogi A, 2018, PROCEEDINGS OF THE 12TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT (ESEM 2018), DOI 10.1145/3239235.3240504
   Ren LY, 2019, 2019 IEEE 26TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER), P230, DOI [10.1109/SANER.2019.8668023, 10.1109/saner.2019.8668023]
   Soares DM, 2015, 30TH ANNUAL ACM SYMPOSIUM ON APPLIED COMPUTING, VOLS I AND II, P1541, DOI 10.1145/2695664.2695856
   SongWang Chetan Bansal, 2020, INFORM SOFTWARE TECH
   Steck H., 2011, P 5 ACM C REC SYST, P125
   Storey M.-A., 2020, DAGSTUHL REPORTS, V9
   Terrell J, 2017, PEERJ COMPUT SCI, DOI 10.7717/peerj-cs.111
   Tsay J, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P356, DOI 10.1145/2568225.2568315
   van der Veen E, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P357, DOI 10.1109/MSR.2015.40
   Wang QY, 2019, 11TH ASIA-PACIFIC SYMPOSIUM ON INTERNETWARE (INTERNETWARE 2019), DOI [10.1007/s11104-019-04156-0, 10.1145/3361242.3361254]
   Wang S, 2019, 15TH INTERNATIONAL CONFERENCE ON PREDICTIVE MODELS AND DATA ANALYTICS IN SOFTWARE ENGINEERING (PROMISE'19), P46, DOI 10.1145/3345629.3345635
   Wyrich M, 2019, 2019 IEEE/ACM 1ST INTERNATIONAL WORKSHOP ON BOTS IN SOFTWARE ENGINEERING (BOTSE 2019), P24, DOI 10.1109/BotSE.2019.00015
   Yu Y, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P367, DOI 10.1109/MSR.2015.42
   Yu Y, 2016, INFORM SOFTWARE TECH, V74, P204, DOI 10.1016/j.infsof.2016.01.004
NR 48
TC 5
Z9 5
U1 2
U2 2
PU ASSOC COMPUTING MACHINERY
PI NEW YORK
PA 1601 Broadway, 10th Floor, NEW YORK, NY USA
SN 1049-331X
EI 1557-7392
J9 ACM T SOFTW ENG METH
JI ACM Trans. Softw. Eng. Methodol.
PD APR
PY 2023
VL 32
IS 2
AR 35
DI 10.1145/3544791
PG 30
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA D7OR1
UT WOS:000970588900008
OA Green Published, Green Submitted
DA 2024-07-18
ER

PT J
AU Bi, TT
   Xia, X
   Lo, D
   Grundy, J
   Zimmermann, T
   Ford, D
AF Bi, Tingting
   Xia, Xin
   Lo, David
   Grundy, John
   Zimmermann, Thomas
   Ford, Denae
TI Accessibility in Software Practice: A Practitioner's Perspective
SO ACM TRANSACTIONS ON SOFTWARE ENGINEERING AND METHODOLOGY
LA English
DT Article
DE Accessibility development and design; challenges; empirical study;
   practitioner
ID UNIVERSAL DESIGN; REQUIREMENTS; TECHNOLOGY
AB Being able to access software in daily life is vital for everyone, and thus accessibility is a fundamental challenge for software development. However, given the number of accessibility issues reported by many users, e.g., in app reviews, it is not clear if accessibility is widely integrated into current software projects and how software projects address accessibility issues. In this article, we report a study of the critical challenges and benefits of incorporating accessibility into software development and design. We applied a mixed qualitative and quantitative approach for gathering data from 15 interviews and 365 survey respondents from 26 countries across five continents to understand how practitioners perceive accessibility development and design in practice. We got 44 statements grouped into eight topics on accessibility from practitioners' viewpoints and different software development stages. Our statistical analysis reveals substantial gaps between groups, e.g., practitioners have Direct vs. Indirect accessibility relevant work experience when they reviewed the summarized statements. These gaps might hinder the quality of accessibility development and design, and we use our findings to establish a set of guidelines to help practitioners be aware of accessibility challenges and benefit factors. We suggest development teams put accessibility as a first-class consideration throughout the software development process, and we also propose some remedies to resolve the gaps between groups and to highlight key future research directions to incorporate accessibility into software design and development.
C1 [Bi, Tingting; Xia, Xin; Grundy, John] Monash Univ, Fac Informat Technol, Melbourne, Vic 3800, Australia.
   [Lo, David] Singapore Management Univ, Sch Informat Syst, Singapore 188065, Singapore.
   [Zimmermann, Thomas; Ford, Denae] Microsoft Res, Redmond, WA USA.
C3 Monash University; Singapore Management University; Microsoft
RP Bi, TT (corresponding author), Monash Univ, Fac Informat Technol, Melbourne, Vic 3800, Australia.
EM tingting.bi@monash.edu; xin.xia@monash.edu; davidlo@smu.edu.sg;
   john.grundy@monash.edu; tzimmer@microsoft.com; denae@microsoft.com
RI Bi, Tingting/ABC-7609-2020; Grundy, John/I-6681-2012; Zimmermann,
   Thomas/C-4377-2019; Lo, David/A-2493-2012
OI Xia, Xin/0000-0002-6302-3256; Zimmermann, Thomas/0000-0003-4905-1469;
   Lo, David/0000-0002-4367-7201
FU National Research Foundation of China [U20A20173]; National Research
   Foundation, Singapore under its Industry Alignment Fund -Pre-positioning
   (IAF-PP) Funding Initiative; Laureate Fellowship [FL190100035]
FX This research was partially supported by the National Research
   Foundation of China (No.U20A20173) and the National Research Foundation,
   Singapore under its Industry Alignment Fund -Pre-positioning (IAF-PP)
   Funding Initiative. Any opinions, findings and conclusions or
   recommendations expressed in this material are those of the author(s)
   and do not reflect the views of National Research Foundation, Singapore.
   Grundy is supported by Laureate Fellowship FL190100035.
CR Abou-Zahra S, 2018, 15TH INTERNATIONAL WEB FOR ALL CONFERENCE (W4A) 2018, DOI 10.1145/3192714.3192834
   Alshayban A, 2020, PROC INT CONF SOFTW, P1323, DOI 10.1145/3377811.3380392
   Archambault D, 2008, LECT NOTES COMPUT SC, V5093, P518
   Bai A., 2017, International Journal on Advances in Software, V10, P96
   Paiva DMB, 2021, J SYST SOFTWARE, V171, DOI 10.1016/j.jss.2020.110819
   Bass L., 2013, SOFTWARE ARCHITECTUR
   Bi Tingting, 2022, IEEE Transactions on Software Engineering, V48, P1834, DOI 10.1109/TSE.2020.3038881
   Bi TT, 2018, ASIA PAC SOFWR ENG, P49, DOI 10.1109/APSEC.2018.00019
   Bi TT, 2018, J SYST SOFTWARE, V144, P533, DOI 10.1016/j.jss.2018.07.055
   Britto T., 2016, ACHI 2016: The Ninth International Conference on Advances in Computer-Human Interactions, P1, DOI DOI 10.13140/RG.2.1.4881.0321
   Brunet P, 2005, IBM SYST J, V44, P445, DOI 10.1147/sj.443.0445
   Burgstahler S., 2011, ACM T COMPUT EDUC, V11, P1
   Clarke V, 2017, J POSIT PSYCHOL, V12, P297, DOI 10.1080/17439760.2016.1262613
   COHEN J, 1960, EDUC PSYCHOL MEAS, V20, P37, DOI 10.1177/001316446002000104
   Condori-Fernandez N, 2018, J SYST SOFTWARE, V137, P289, DOI 10.1016/j.jss.2017.12.005
   Curtis C, 2008, TRANSPORT POLICY, V15, P104, DOI 10.1016/j.tranpol.2007.10.003
   Di Sorbo A, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P499, DOI 10.1145/2950290.2950299
   Easterbrook S., 2008, GUIDE ADV EMPIRICAL, P285, DOI [DOI 10.1007/978-1-84800-044-5_11, DOI 10.1007/978-1-84800-044-511]
   Erlandson RF, 2007, UNIVERSAL ACCESSIBLE, DOI DOI 10.1201/9781420007664
   Firmenich S., 2019, Web Accessibility: A Foundation for Research, V2nd, P547
   Gregor P., 2001, P 2001 ECNSF WORKSHO, DOI DOI 10.1145/564526.564550
   Grundy J, 2020, 2020 20TH IEEE/ACM INTERNATIONAL SYMPOSIUM ON CLUSTER, CLOUD AND INTERNET COMPUTING (CCGRID 2020), P1, DOI 10.1109/CCGrid49817.2020.00-93
   Hautojrvi P., 1979, Experimentation in software engineering, V1ST, DOI [10.1007/978-3-642-81316-0, 10.1007/978-3-642-29044-2., DOI 10.1007/978-3-642-29044-2]
   Henss S, 2012, PROC INT CONF SOFTW, P793, DOI 10.1109/ICSE.2012.6227139
   Horton S., 2014, Inclusive Designing, P105, DOI [DOI 10.1007/978-3-319-05095-9_10, 10.1007/978-3-319-05095-9_10, DOI 10.1007/978-3-319-05095-9]
   Jokela T., 2003, P LAT AM C HUM COMP, DOI DOI 10.1145/944520.944525
   King-Sears M, 2009, LEARN DISABILITY Q, V32, P199, DOI 10.2307/27740372
   Kitchenham BA, 2008, Guide to advanced empirical software engineering, P63, DOI [DOI 10.1007/978-1-84800-044-5_3, 10.1007/ 978-1-84800-044-5_3]
   Kochhar Pavneet Singh, 2016, 25 INT S SOFTWARE TE, P165, DOI 10.1145/2931037.2931051
   Lavallee M, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P677, DOI 10.1109/ICSE.2015.83
   Lisney E, 2013, CURATOR, V56, P353, DOI 10.1111/cura.12034
   McCallister E., 2010, Guide to Protecting the Confidentiality of Personally Identifiable Information (PII) (NIST Special Publication 800-122), VVolume 800
   Moon NW, 2019, J REHABIL ASSIST TER, V6, DOI 10.1177/2055668319862137
   Morrel-Samuels P, 2002, HARVARD BUS REV, V80, P111
   Murphy-Hill E, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P1, DOI 10.1145/2568225.2568226
   Paciello M.G., 2000, WEB ACCESSIBILITY PE
   Persson H, 2015, UNIVERSAL ACCESS INF, V14, P505, DOI 10.1007/s10209-014-0358-z
   Roh W, 2017, 2017 IEEE 25TH INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE WORKSHOPS (REW), P69, DOI 10.1109/REW.2017.44
   Sánchez-Gordón ML, 2014, PROCEDIA COMPUT SCI, V27, P281, DOI 10.1016/j.procs.2014.02.031
   Sanchez-Gordon Sandra, 2017, P 7 WORLD C SOFTWARE
   Sears A, 2011, 29TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, P2235
   Shinohara K, 2018, SIGCSE'18: PROCEEDINGS OF THE 49TH ACM TECHNICAL SYMPOSIUM ON COMPUTER SCIENCE EDUCATION, P197, DOI 10.1145/3159450.3159484
   Spencer D., 2009, CARD SORTING DESIGNI
   Sullivan Gail M, 2012, J Grad Med Educ, V4, P279, DOI 10.4300/JGME-D-12-00156.1
   Tian Y, 2015, PROC IEEE INT CONF S, P301, DOI 10.1109/ICSM.2015.7332476
   Tidwell J., 2010, Designing interfaces: Patterns for effective interaction design
   Tyagi Pradeep K., 1989, Journal of the Academy of Marketing Science, V17, P235
   Vendome C, 2019, PROC IEEE INT CONF S, P41, DOI 10.1109/ICSME.2019.00014
   Wan ZY, 2021, IEEE T SOFTWARE ENG, V47, P1857, DOI 10.1109/TSE.2019.2937083
   Xia X, 2019, PROC INT CONF SOFTW, P924, DOI 10.1109/ICSE.2019.00098
   Yusop NSM, 2020, INFORM SOFTWARE TECH, V128, DOI 10.1016/j.infsof.2020.106396
   Yusop NSM, 2016, PROCEEDINGS OF THE 20TH INTERNATIONAL CONFERENCE ON EVALUATION AND ASSESSMENT IN SOFTWARE ENGINEERING 2016 (EASE '16), DOI 10.1145/2915970.2915995
   Zhao YH, 2019, CHI 2019: PROCEEDINGS OF THE 2019 CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, DOI 10.1145/3290605.3300341
   Zhou LM, 2020, JMIR MHEALTH UHEALTH, V8, DOI 10.2196/15060
NR 54
TC 11
Z9 13
U1 3
U2 3
PU ASSOC COMPUTING MACHINERY
PI NEW YORK
PA 1601 Broadway, 10th Floor, NEW YORK, NY USA
SN 1049-331X
EI 1557-7392
J9 ACM T SOFTW ENG METH
JI ACM Trans. Softw. Eng. Methodol.
PD OCT
PY 2022
VL 31
IS 4
AR 66
DI 10.1145/3503508
PG 26
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 4V3NS
UT WOS:000859387700010
OA Green Submitted, Green Accepted
DA 2024-07-18
ER

PT J
AU Catak, FO
   Yue, T
   Ali, S
AF Catak, Ferhat Ozgur
   Yue, Tao
   Ali, Shaukat
TI Uncertainty-aware Prediction Validator in Deep Learning Models for
   Cyber-physical System Data
SO ACM TRANSACTIONS ON SOFTWARE ENGINEERING AND METHODOLOGY
LA English
DT Article
DE Uncertainty; prediction validation; deep learning; Cyber-physical
   Systems
AB The use of Deep learning in Cyber-Physical Systems (CPSs) is gaining popularity due to its ability to bring intelligence to CPS behaviors. However, both CPSs and deep learning have inherent uncertainty. Such uncertainty, if not handled adequately, can lead to unsafe CPS behavior. The first step toward addressing such uncertainty in deep learning is to quantify uncertainty. Hence, we propose a novel method called NIRVANA (uNcertaInty pRediction ValidAtor iN Ai) for prediction validation based on uncertainty metrics. To this end, we first employ prediction-time Dropout-based Neural Networks to quantify uncertainty in deep learning models applied to CPS data. Second, such quantified uncertainty is taken as the input to predict wrong labels using a support vector machine, with the aim of building a highly discriminating prediction validator model with uncertainty values. In addition, we investigated the relationship between uncertainty quantification and prediction performance and conducted experiments to obtain optimal dropout ratios. We conducted all the experiments with four real-world CPS datasets. Results show that uncertainty quantification is negatively correlated to prediction performance of a deep learning model of CPS data. Also, our dropout ratio adjustment approach is effective in reducing uncertainty of correct predictions while increasing uncertainty of wrong predictions.
C1 [Catak, Ferhat Ozgur] Univ Stavanger, Simula Res Lab, Stavanger, Norway.
   [Yue, Tao; Ali, Shaukat] Simula Res Lab, Oslo, Norway.
C3 Universitetet i Stavanger
RP Catak, FO (corresponding author), Univ Stavanger, Simula Res Lab, Stavanger, Norway.
EM f.ozgur.catak@uis.no; tao@simula.no; shaukat@simula.no
RI Catak, Ferhat Ozgur/M-6013-2015; yue, tao/H-6783-2013
OI Catak, Ferhat Ozgur/0000-0002-2434-9966; Yue, Tao/0000-0003-3262-5577;
   Ali, Shaukat/0000-0002-9979-3519
FU Research Council of Norway under the FRIPRO program [286898/F20]
FX The work is supported by the Co-evolver project (No. 286898/F20) funded
   by the Research Council of Norway under the FRIPRO program.
CR Valdés RA, 2019, SAFETY SCI, V116, P183, DOI 10.1016/j.ssci.2019.03.012
   Asadollah SA, 2015, LECT NOTES COMPUT SC, V9447, P194, DOI 10.1007/978-3-319-25945-1_12
   Baresi L., 2010, Proceedings of the 2010 IEEE 18th International Conference on Requirements Engineering (RE2010), P125, DOI 10.1109/RE.2010.25
   Arrieta AB, 2020, INFORM FUSION, V58, P82, DOI 10.1016/j.inffus.2019.12.012
   Berend D, 2020, IEEE INT CONF AUTOM, P1041, DOI 10.1145/3324884.3416609
   Buhrmester V, 2019, Arxiv, DOI [arXiv:1911.12116, DOI 10.3390/MAKE3040048]
   Camilli M, 2018, PROC INT SYMP SOFTW, P36, DOI 10.1109/ISSRE.2018.00015
   Catak FO, 2021, THIRD IEEE INTERNATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE TESTING (AITEST 2021), P93, DOI 10.1109/AITEST52744.2021.00027
   Cheng BHC, 2009, LECT NOTES COMPUT SC, V5795, P468, DOI 10.1007/978-3-642-04425-0_36
   Combalia M, 2020, IEEE COMPUT SOC CONF, P3211, DOI 10.1109/CVPRW50498.2020.00380
   Dreossi T, 2019, LECT NOTES COMPUT SC, V11561, P432, DOI 10.1007/978-3-030-25540-4_25
   Faloutsos C, 2012, MOR KAUF D, P393
   Freire AL, 2009, 2009 6TH LATIN AMERICAN ROBOTICS SYMPOSIUM, P51
   Gal Y., 2016, THESIS
   Geiger A, 2013, INT J ROBOT RES, V32, P1231, DOI 10.1177/0278364913491297
   Geisberger E., 2015, Living in a networked world: Integrated research agenda Cyber-Physical Systems (agendaCPS)
   Ghoshal B, 2020, Arxiv, DOI [arXiv:2003.10769, 10.48550/arXiv.2003.10769]
   Ghoshal B, 2020, LECT NOTES COMPUT SC, V12080, P223, DOI 10.1007/978-3-030-44584-3_18
   Goh J, 2018, LECT NOTES COMPUT SC, V10242, P88, DOI 10.1007/978-3-319-71368-7_8
   Gu XZ, 2019, ACM IEEE INT CONF CY, P249, DOI 10.1145/3302509.3311038
   Gunning D, 2019, AI MAG, V40, P44, DOI 10.1609/aimag.v40i2.2850
   Gupta SC., 2020, FUNDAMENTALS MATH ST
   Han SJ, 2012, 2012 WORLD AUTOMATION CONGRESS (WAC)
   Henne M., 2020, SafeAI@ AAAI, P83
   Huang G, 2018, Arxiv, DOI [arXiv:1608.06993, DOI 10.48550/ARXIV.1608.06993]
   Iliadis L, 2011, IFIP ADV INF COMM TE, V363, P140
   Goodfellow IJ, 2015, Arxiv, DOI [arXiv:1412.6572, DOI 10.48550/ARXIV.1412.6572]
   Kendall A, 2017, 31 ANN C NEURAL INFO, V30
   Kurakin A, 2017, Arxiv, DOI arXiv:1607.02533
   Lakshminarayanan B, 2017, ADV NEUR IN, V30
   Lamrani Imane, 2020, SAFEAI AAAI, P186
   Leibig C, 2017, SCI REP-UK, V7, DOI 10.1038/s41598-017-17876-z
   Loquercio A, 2020, IEEE ROBOT AUTOM LET, V5, P3153, DOI 10.1109/LRA.2020.2974682
   Ma T, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-021-09941-z
   Ma W, 2021, ACM T SOFTW ENG METH, V30, DOI 10.1145/3417330
   Makhoul J., 2004, PHYS REV E, P249, DOI DOI 10.1103/PHYSREVE.69.066133
   Menze M, 2015, PROC CVPR IEEE, P3061, DOI 10.1109/CVPR.2015.7298925
   Michelmore R, 2018, Arxiv, DOI [arXiv:1811.06817, DOI 10.48550/ARXIV.1811.06817]
   Moosavi-Dezfooli SM, 2016, PROC CVPR IEEE, P2574, DOI 10.1109/CVPR.2016.282
   Patwardhan N, 2019, Arxiv, DOI arXiv:1905.06274
   Rehse JR, 2019, KUNSTL INTELL, V33, P181, DOI 10.1007/s13218-019-00586-1
   Runeson Per, 2012, Case study research in software engineering: Guidelines and examples
   Safdar SA, 2017, PROCEEDINGS OF THE 2017 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE (GECCO'17), P1319, DOI 10.1145/3071178.3071261
   Schubert M, 2020, Arxiv, DOI arXiv:2010.01695
   SHANNON CE, 1948, BELL SYST TECH J, V27, P379, DOI 10.1002/j.1538-7305.1948.tb01338.x
   Sherin S, 2019, Arxiv, DOI arXiv:1907.09427
   Simonyan K, 2015, Arxiv, DOI arXiv:1409.1556
   Smith L, 2018, Arxiv, DOI arXiv:1803.08533
   Tjoa E, 2021, IEEE T NEUR NET LEAR, V32, P4793, DOI 10.1109/TNNLS.2020.3027314
   Tuna OF, 2022, COMPUT ELECTR ENG, V101, DOI 10.1016/j.compeleceng.2022.107986
   Tuna OF, 2022, MULTIMED TOOLS APPL, V81, P11479, DOI 10.1007/s11042-022-12132-7
   Turpin A., 2006, Proceedings of the Twenty-Ninth Annual International ACM SIGIR Conference on Research and Development in Information Retrieval, P11, DOI 10.1145/1148170.1148176
   Verdoja F, 2021, Arxiv, DOI [arXiv:2008.02627, 10.48550/arXiv.2008.02627]
   Vranken JF, 2021, EUR HEART J-DIGIT HL, V2, P401, DOI 10.1093/ehjdh/ztab045
   Weerakkody S, 2019, FOUND TRENDS SYST CO, V7, P1, DOI 10.1561/2600000018
   Weiss M, 2021, IEEE INT CONF SOFTW, P24, DOI 10.1109/ICST49551.2021.00015
   Weiss M, 2021, IEEE INT CONF SOFTW, P436, DOI 10.1109/ICST49551.2021.00056
   Wickramasinghe CS, 2018, IEEE IND ELEC, P745, DOI 10.1109/IECON.2018.8591773
   Zhang M, 2019, SOFTW SYST MODEL, V18, P1379, DOI 10.1007/s10270-017-0609-6
   Zhang M, 2018, J SYST SOFTWARE, V144, P573, DOI 10.1016/j.jss.2018.06.075
   Zhang M, 2017, INFORM SOFTWARE TECH, V87, P140, DOI 10.1016/j.infsof.2017.03.003
   Zhang XY, 2020, PROC INT CONF SOFTW, P739, DOI 10.1145/3377811.3380368
   Zhang XY, 2020, PROC INT CONF SOFTW, P101, DOI 10.1145/3377812.3382160
   Zhou X, 2018, IEEE ACCESS, V6, P52179, DOI 10.1109/ACCESS.2018.2869834
NR 64
TC 10
Z9 10
U1 4
U2 16
PU ASSOC COMPUTING MACHINERY
PI NEW YORK
PA 1601 Broadway, 10th Floor, NEW YORK, NY USA
SN 1049-331X
EI 1557-7392
J9 ACM T SOFTW ENG METH
JI ACM Trans. Softw. Eng. Methodol.
PD OCT
PY 2022
VL 31
IS 4
AR 79
DI 10.1145/3527451
PG 31
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 4V3NS
UT WOS:000859387700023
OA Bronze
DA 2024-07-18
ER

PT J
AU Ngo, CD
   Pastore, F
   Briand, L
AF Chanh Duc Ngo
   Pastore, Fabrizio
   Briand, Lionel
TI Automated, Cost-effective, and Update-driven App Testing
SO ACM TRANSACTIONS ON SOFTWARE ENGINEERING AND METHODOLOGY
LA English
DT Article
DE Android testing; regression testing; upgrade testing; model-based
   testing; information retrieval
AB Apps' pervasive role in our society led to the definition of test automation approaches to ensure their dependability. However, state-of-the-art approaches tend to generate large numbers of test inputs and are unlikely to achieve more than 50% method coverage.
   In this article, we propose a strategy to achieve significantly higher coverage of the code affected by updates with a much smaller number of test inputs, thus alleviating the test oracle problem.
   More specifically, we present ATUA, a model-based approach that synthesizes App models with static analysis, integrates a dynamically refined state abstraction function and combines complementary testing strategies, including (1) coverage of the model structure, (2) coverage of the App code, (3) random exploration, and (4) coverage of dependencies identified through information retrieval. Its model-based strategy enables ATUA to generate a small set of inputs that exercise only the code affected by the updates. In turn, this makes common test oracle solutions more cost-effective, as they tend to involve human effort.
   A large empirical evaluation, conducted with 72 App versions belonging to nine popular Android Apps, has shown that ATUA is more effective and less effort-intensive than state-of-the-art approaches when testing App updates.
C1 [Chanh Duc Ngo; Pastore, Fabrizio; Briand, Lionel] Univ Luxembourg, SnT Ctr, JFK 29, Luxembourg, Luxembourg.
   [Briand, Lionel] Univ Ottawa, Sch EECS, Ottawa, ON, Canada.
C3 University of Luxembourg; University of Ottawa
RP Ngo, CD (corresponding author), Univ Luxembourg, SnT Ctr, JFK 29, Luxembourg, Luxembourg.
EM chanh-duc.ngo@uni.lu; fabrizio.pastore@uni.lu; lionel.briand@uni.lu
RI Pastore, Fabrizio/ABY-9262-2022
OI Pastore, Fabrizio/0000-0003-3541-3641
FU Huawei Technologies Co., Ltd, China; European Research Council (ERC)
   under the European Union [694277]; scientific interest group; CNRS;
   RENATER
FX This project has received funding from Huawei Technologies Co., Ltd,
   China, and the European Research Council (ERC) under the European
   Union's Horizon 2020 research and innovation programme (grant agreement
   No 694277). Experiments presented in this article were carried out using
   the Grid'5000 testbed, supported by a scientific interest group hosted
   by Inria and including CNRS, RENATER and several Universities as well as
   other organizations (see https://www.grid5000.fr).
CR Amalfitano D, 2019, INFORM SOFTWARE TECH, V105, P95, DOI 10.1016/j.infsof.2018.08.007
   Amalfitano D, 2017, J SYST SOFTWARE, V125, P322, DOI 10.1016/j.jss.2016.12.017
   Android.com, 2020, LOGC COMM LIN TOOL
   Android.com, 2020, INT RES
   Android.com, 2020, MONK ANDR UI APPL EX
   [Anonymous], 2014, P 29 ACM IEEE INT C, DOI [10.1145/2642937.2643002, DOI 10.1145/2642937.2643002]
   Arcuri A, 2014, SOFTW TEST VERIF REL, V24, P219, DOI 10.1002/stvr.1486
   Arcuri A, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1, DOI 10.1145/1985793.1985795
   Arzt S, 2014, ACM SIGPLAN NOTICES, V49, P259, DOI [10.1145/2666356.2594299, 10.1145/2594291.2594299]
   Baek YM, 2016, IEEE INT CONF AUTOM, P238, DOI [10.1145/2970276.2970313, 10.1145/2970276.2970310]
   Balouek D., 2013, CLOUD COMPUTING SERV
   Barr ET, 2015, IEEE T SOFTWARE ENG, V41, P507, DOI 10.1109/TSE.2014.2372785
   Borges NP, 2018, IEEE INT CONF AUTOM, P916, DOI 10.1145/3238147.3240479
   Calciati P, 2018, IEEE WORK CONF MIN S, P142, DOI 10.1145/3196398.3196449
   Choi W, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P445, DOI 10.1145/3180155.3180173
   Choudhary SR, 2015, IEEE INT CONF AUTOM, P429, DOI 10.1109/ASE.2015.89
   CNRS INRIA, GRID5000 INFR
   Della Toffola L, 2017, IEEE INT CONF AUTOM, P44, DOI 10.1109/ASE.2017.8115617
   Deloitte, 2018 GLOB MOB CONS S
   Derr E, 2017, CCS'17: PROCEEDINGS OF THE 2017 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P2187, DOI 10.1145/3133956.3134059
   Di Martino S, 2021, SOFTW TEST VERIF REL, V31, DOI 10.1002/stvr.1754
   Do Q. C. D., 2016, 28 INT C SOFTW ENG K, P486, DOI DOI 10.18293/SEKE2016-223
   Do Q, 2016, 2016 IEEE/ACM INTERNATIONAL CONFERENCE ON MOBILE SOFTWARE ENGINEERING AND SYSTEMS (MOBILESOFT 2016), P27, DOI [10.1145/2897073.2897127, 10.1109/MobileSoft.2016.023]
   Domínguez-Alvarez D, 2019, PROCEEDINGS OF THE 3RD ACM SIGSOFT INTERNATIONAL WORKSHOP ON APP MARKET ANALYTICS (WAMA '19), P15, DOI 10.1145/3340496.3342762
   Dong Z, 2020, PROC INT CONF SOFTW, P481, DOI 10.1145/3377811.3380402
   Feldt R, 2010, 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING & KNOWLEDGE ENGINEERING (SEKE 2010), P374
   Fraser Gordon, 2011, PROC 19 ACM SIGSOFT, P416, DOI 10.1145/2025113.2025179
   Gao ZB, 2015, 2015 IEEE 26TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING (ISSRE), P565, DOI 10.1109/ISSRE.2015.7381848
   Gazzola L, 2017, PROC INT SYMP SOFTW, P67, DOI 10.1109/ISSRE.2017.10
   Google Inc, 2020, AN ANDR DEV
   Gu TX, 2019, PROC INT CONF SOFTW, P269, DOI 10.1109/ICSE.2019.00042
   Gu Tianxiao, MINITRACING APE COVE
   Hammoudi M, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P751, DOI 10.1145/2950290.2950294
   Jabbarvand R., 2016, P 25 INT S SOFTWARE, P425, DOI DOI 10.1145/2931037.2931067
   Jahangirova G., 2016, INT S SOFTWARE TESTI, P247
   Jamendo, 2020, MUS STREAM APP
   John Christopher, 1989, PhD thesis
   Kochhar PS, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P560, DOI 10.1109/SANER.2015.7081877
   Korel B., 1998, Software Engineering Notes, V23, P143, DOI 10.1145/271775.271803
   Koroglu Y, 2018, IEEE INT CONF SOFTW, P105, DOI 10.1109/ICST.2018.00020
   Kuznetsov K, 2018, 2018 IEEE/ACM 5TH INTERNATIONAL CONFERENCE ON MOBILE SOFTWARE ENGINEERING AND SYSTEMS (MOBILESOFT), P84, DOI 10.1145/3197231.3197232
   Li X, 2017, IEEE INT CONF SOFTW, P161, DOI 10.1109/ICST.2017.22
   Linares-Vásquez M, 2017, PROC IEEE INT CONF S, P399, DOI 10.1109/ICSME.2017.27
   Mao K., 2016, P 25 INT S SOFTW TES, P94
   McIlroy S, 2016, EMPIR SOFTW ENG, V21, P1346, DOI 10.1007/s10664-015-9388-2
   Minxue Pan, 2020, ISSTA '20: Proceedings of the 29th ACM SIGSOFT International Symposium on Software Testing and Analysis, P153, DOI 10.1145/3395363.3397354
   Ngo Chanh Duc, 2020, ATUA TOOLSET REPLICA
   Pan MX, 2022, IEEE T SOFTWARE ENG, V48, P910, DOI 10.1109/TSE.2020.3007664
   Pan MX, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: COMPANION PROCEEDINGS (ICSE-COMPANION 2019), P326, DOI 10.1109/ICSE-Companion.2019.00137
   Pastore F., 2012, Proceedings of the 2012 IEEE 23rd International Symposium on Software Reliability Engineering (ISSRE), P91, DOI 10.1109/ISSRE.2012.9
   Pastore F., 2014, PROC INT S SOFTW TES, P37, DOI [10.1145/2610384.2610387, DOI 10.1145/2610384.2610387]
   Pastore F, 2013, 2013 IEEE SIXTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST 2013), P342, DOI 10.1109/ICST.2013.13
   Phillips Bill, 2013, ANDROID PROGRAMMING, V1st
   Ralph Paul, 2018, P 22 INT C EV ASS SO, P13
   Rau A, 2018, PROC IEEE ACM INT C, P370, DOI 10.1145/3183440.3195014
   Rothermel G., 1997, ACM Transactions on Software Engineering and Methodology, V6, P173, DOI 10.1145/248233.248262
   Rountev Atanas, 2014, P ANN IEEEACM INT S, P143
   Rubinov K, 2018, COMPUTER, V51, P60, DOI 10.1109/MC.2018.2141024
   Ryder BG, 2001, ACM SIGPLAN NOTICES, P46
   Saha RK, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P268, DOI 10.1109/ICSE.2015.47
   Sanderson M, 2010, NAT LANG ENG, V16, P100, DOI 10.1017/S1351324909005129
   Shamshiri S, 2013, IEEE ICST WORKSHOP, P396, DOI 10.1109/ICSTW.2013.51
   Sharma A, 2019, PROCEEDINGS OF THE 28TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA '19), P66, DOI 10.1145/3293882.3330550
   Shieh G, 2006, J NONPARAMETR STAT, V18, P33, DOI 10.1080/10485250500473099
   Song F, 2017, 2017 14TH WEB INFORMATION SYSTEMS AND APPLICATIONS CONFERENCE (WISA 2017), P143, DOI 10.1109/WISA.2017.49
   STH blog, 10 MOST POP CROWDS T
   Su T, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P245, DOI 10.1145/3106237.3106298
   Tramontana P, 2019, SOFTWARE QUAL J, V27, P149, DOI 10.1007/s11219-018-9418-6
   Vargha A, 2000, J EDUC BEHAV STAT, V25, P101, DOI 10.3102/10769986025002101
   Wang J, 2020, PROC INT CONF SOFTW, P469, DOI 10.1145/3377811.3380382
   Wang WY, 2018, IEEE INT CONF AUTOM, P738, DOI 10.1145/3238147.3240465
   Wang Y., 2016, P 5 SIGPLAN INT WORK, P18
   Wen M, 2016, IEEE INT CONF AUTOM, P262, DOI 10.1145/2970276.2970359
   Wohlin C., 2012, Experimentation in Software Engineering
   Wu HW, 2020, SOFTWARE QUAL J, V28, P335, DOI 10.1007/s11219-019-09484-z
   Yan M Z, 2014, Proceedings of the 1st International Workshop on Crowd-based Software Development Methods and Technologies, P19, DOI DOI 10.1145/2666539.2666569
   Yang SQ, 2018, AUTOMAT SOFTW ENG, V25, P833, DOI 10.1007/s10515-018-0237-6
   Yang SQ, 2015, IEEE INT CONF AUTOM, P658, DOI 10.1109/ASE.2015.76
   Yang W, 2013, LECT NOTES COMPUT SC, V7793, P250, DOI 10.1007/978-3-642-37057-1_19
   Youm KC, 2015, ASIA PAC SOFWR ENG, P190, DOI 10.1109/APSEC.2015.23
   Zaeem RN, 2014, 2014 IEEE SEVENTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST), P183, DOI 10.1109/ICST.2014.31
NR 81
TC 3
Z9 3
U1 1
U2 5
PU ASSOC COMPUTING MACHINERY
PI NEW YORK
PA 1601 Broadway, 10th Floor, NEW YORK, NY USA
SN 1049-331X
EI 1557-7392
J9 ACM T SOFTW ENG METH
JI ACM Trans. Softw. Eng. Methodol.
PD OCT
PY 2022
VL 31
IS 4
AR 61
DI 10.1145/3502297
PG 51
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 4V3NS
UT WOS:000859387700005
OA Green Submitted, Bronze
DA 2024-07-18
ER

PT J
AU Yu, H
   Hu, X
   Li, G
   Li, Y
   Wang, QX
   Xie, T
AF Yu, Hao
   Hu, Xing
   Li, Ge
   Li, Ying
   Wang, Qianxiang
   Xie, Tao
TI Assessing and Improving an Evaluation Dataset for Detecting Semantic
   Code Clones via Deep Learning
SO ACM TRANSACTIONS ON SOFTWARE ENGINEERING AND METHODOLOGY
LA English
DT Article
DE Code clone detection; deep learning; dataset collection
ID TUTORIAL
AB In recent years, applying deep learning to detect semantic code clones has received substantial attention from the research community. Accordingly, various evaluation benchmark datasets, with the most popular one as BigCloneBench, are constructed and selected as benchmarks to assess and compare different deep learning models for detecting semantic clones. However, there is no study to investigate whether an evaluation benchmark dataset such as BigCloneBench is properly used to evaluate models for detecting semantic code clones. In this article, we present an experimental study to show that BigCloneBench typically includes semantic clone pairs that use the same identifier names, which however are not used in non-semantic-clone pairs. Subsequently, we propose an undesirable-by-design Linear-Model that considers only which identifiers appear in a code fragment; this model can achieve high effectiveness for detecting semantic clones when evaluated on BigCloneBench, even comparable to state-of-the-art deep learning models recently proposed for detecting semantic clones. To alleviate these issues, we abstract a subset of the identifier names (including type, variable, and method names) in BigCloneBench to result in AbsBigCloneBench and use AbsBigCloneBench to better assess the effectiveness of deep learning models on the task of detecting semantic clones.
C1 [Yu, Hao] Peking Univ, Sch Software & Microelect, 5 Yiheyuan Rd Haidian Dist, Beijing 10087, Peoples R China.
   [Hu, Xing] Zhejiang Univ, Sch Software Technol, 1689 Jiangnan Rd, Ningbo 315048, Zhejiang, Peoples R China.
   [Li, Ge; Xie, Tao] Peking Univ, Minist Educ, Key Lab High Confidence Software Technol, 5 Yiheyuan Rd Haidian Dist, Beijing 10087, Peoples R China.
   [Li, Ying] Peking Univ, Natl Res Ctr Software Engn, 5 Yiheyuan Rd Haidian Dist, Beijing 10087, Peoples R China.
   [Wang, Qianxiang] Huawei Technol Co Ltd, Bldg 1 & 4,18 Muhe Rd, Beijing 100094, Peoples R China.
C3 Peking University; Zhejiang University; Peking University; Peking
   University; Huawei Technologies
RP Li, G; Xie, T (corresponding author), Peking Univ, Minist Educ, Key Lab High Confidence Software Technol, 5 Yiheyuan Rd Haidian Dist, Beijing 10087, Peoples R China.; Li, Y (corresponding author), Peking Univ, Natl Res Ctr Software Engn, 5 Yiheyuan Rd Haidian Dist, Beijing 10087, Peoples R China.
EM yh0315@pku.edu.cn; xinghu@zju.edu.cn; lige@pku.edu.cn;
   li.ying@pku.edu.cn; wangqianxiang@huawei.com; taoxie@pku.edu.cn
OI Yu, Hao/0000-0002-3828-7612; Xie, Tao/0000-0002-6731-216X; Hu,
   Xing/0000-0003-0093-3292
FU Key-Area Research and Development Program of Guangdong Province
   [2020B010164003]; National Natural Science Foundation of China
   [62161146003]; Tencent Foundation or XPLORER PRIZE
FX This work was supported by the Key-Area Research and Development Program
   of Guangdong Province (No. 2020B010164003) and National Natural Science
   Foundation of China (Grant No. 62161146003). This work was also
   supported by the Tencent Foundation or XPLORER PRIZE.
CR Allamams M, 2019, PROCEEDINGS OF THE 2019 ACM SIGPLAN INTERNATIONAL SYMPOSIUM ON NEW IDEAS, NEW PARADIGMS, AND REFLECTIONS ON PROGRAMMING AND SOFTWARE (ONWARD!' 19), P143, DOI 10.1145/3359591.3359735
   [Anonymous], 2007, P 20 INT C NEURAL IN
   Bellon S, 2007, IEEE T SOFTWARE ENG, V33, P577, DOI 10.1109/TSE.2007.70725
   Bhoopchand A., 2016, arXiv
   Chen PH, 2005, APPL STOCH MODEL BUS, V21, P111, DOI 10.1002/asmb.537
   Cummins C, 2017, INT SYM CODE GENER, P86, DOI 10.1109/CGO.2017.7863731
   Gabel M, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P321, DOI 10.1145/1368088.1368132
   Gao Y, 2019, PROC IEEE INT CONF S, P145, DOI 10.1109/ICSME.2019.00025
   Harer Jacob A., 2018, ARXIVCSSE180304497
   Hu X, 2020, EMPIR SOFTW ENG, V25, P2179, DOI [10.1007/s10664-019-09730-9, 10.1007/978-981-13-8203-1_1]
   Hu X, 2018, PROCEEDINGS OF THE TWENTY-SEVENTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P2269
   Hu X, 2018, INT C PROGRAM COMPRE, P200, DOI 10.1145/3196321.3196334
   HUIHUIWEI M, 2018, P 27 INT JOINT C ART, P2840, DOI DOI 10.24963/IJCAI.2018/394
   IJaDataset2.0, 2013, US
   Jadon S, 2016, 2016 IEEE INTERNATIONAL CONFERENCE ON COMPUTING, COMMUNICATION AND AUTOMATION (ICCCA), P299, DOI 10.1109/CCAA.2016.7813733
   Jiang LX, 2007, PROC INT CONF SOFTW, P96
   Jianglang Feng, 2013, 2013 Fourth International Conference on Emerging Intelligent Data and Web Technologies (EIDWT), P393, DOI 10.1109/EIDWT.2013.73
   Kamiya T, 2002, IEEE T SOFTWARE ENG, V28, P654, DOI 10.1109/TSE.2002.1019480
   Kim S, 2017, P IEEE S SECUR PRIV, P595, DOI 10.1109/SP.2017.62
   Kodhai E., 2014, J. Softw. Eng. Res. Develop., V2, P12, DOI DOI 10.1186/S40411-014-0012-8
   Komondoor R, 2001, LECT NOTES COMPUT SC, V2126, P40
   Koschke R, 2006, WORK CONF REVERSE EN, P253
   Krinke J, 2001, EIGHTH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P301, DOI 10.1109/WCRE.2001.957835
   LeClair A, 2019, PROC INT CONF SOFTW, P795, DOI 10.1109/ICSE.2019.00087
   Li LQ, 2017, PROC IEEE INT CONF S, P249, DOI 10.1109/ICSME.2017.46
   Li Z, 2018, 25TH ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2018), DOI 10.14722/ndss.2018.23158
   Liu Chao, 2006, Proc. 12th ACMSIGKDD Int'l Con. on Knowledge Discovery and Data Mining (KDD 06), P872, DOI DOI 10.1145/1150402.1150522
   Liu ZX, 2018, IEEE INT CONF AUTOM, P373, DOI 10.1145/3238147.3238190
   Mou LL, 2016, AAAI CONF ARTIF INTE, P1287
   Murakami H, 2013, CONF PROC INT SYMP C, P93, DOI 10.1109/ICPC.2013.6613837
   Narayanan Annamalai, 2016, ARXIVCSLG160608928
   Pradel M, 2018, P ACM PROGRAM LANG, V2, DOI 10.1145/3276517
   Roy CK, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P26, DOI 10.1109/SANER.2018.8330194
   Roy CK, 2009, IEEE ICST WORKSHOP, P157, DOI 10.1109/ICSTW.2009.18
   Roy CK, 2008, INT C PROGRAM COMPRE, P172, DOI 10.1109/ICPC.2008.41
   Roy J. R., 2007, QUEENS SCH COMPUTING, V541, P64
   Sajnani H, 2016, PROC INT CONF SOFTW, P1157, DOI 10.1145/2884781.2884877
   Sánchez VD, 2003, NEUROCOMPUTING, V55, P5, DOI 10.1016/S0925-2312(03)00373-4
   Shum Harry, 2020, FRONTIERS ROBOTICS
   Smola AJ, 2004, STAT COMPUT, V14, P199, DOI 10.1023/B:STCO.0000035301.49549.88
   Svajlenko J, 2015, PROC IEEE INT CONF S, P131, DOI 10.1109/ICSM.2015.7332459
   Svajlenko J, 2014, PROC IEEE INT CONF S, P476, DOI 10.1109/ICSME.2014.77
   Thummalapenta Suresh, 2007, Proceedings of the Twenty-second IEEE/ACM International Conference on Automated Software Engineering, ASE '07, P204
   Wang PC, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1066, DOI 10.1145/3180155.3180179
   Wang WH, 2020, PROCEEDINGS OF THE 2020 IEEE 27TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER '20), P261, DOI [10.1109/SANER48275.2020.9054857, 10.1109/saner48275.2020.9054857]
   Wei HH, 2017, PROCEEDINGS OF THE TWENTY-SIXTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P3034
   White M, 2016, IEEE INT CONF AUTOM, P87, DOI 10.1145/2970276.2970326
   Yu H, 2019, INT C PROGRAM COMPRE, P70, DOI 10.1109/ICPC.2019.00021
   Zhang J, 2019, PROC INT CONF SOFTW, P783, DOI 10.1109/ICSE.2019.00086
   Zhang YX, 2021, IEEE T SOFTWARE ENG, V47, P2242, DOI 10.1109/TSE.2019.2946156
   Zhao G, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P141, DOI 10.1145/3236024.3236068
NR 51
TC 4
Z9 4
U1 0
U2 4
PU ASSOC COMPUTING MACHINERY
PI NEW YORK
PA 1601 Broadway, 10th Floor, NEW YORK, NY USA
SN 1049-331X
EI 1557-7392
J9 ACM T SOFTW ENG METH
JI ACM Trans. Softw. Eng. Methodol.
PD OCT
PY 2022
VL 31
IS 4
AR 62
DI 10.1145/3502852
PG 25
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 4V3NS
UT WOS:000859387700006
DA 2024-07-18
ER

PT J
AU Xiong, YF
   Wang, B
AF Xiong, Yingfei
   Wang, Bo
TI L2S: A Framework for Synthesizing the Most Probable Program under a
   Specification
SO ACM TRANSACTIONS ON SOFTWARE ENGINEERING AND METHODOLOGY
LA English
DT Article
DE Program estimation; program synthesis; program repair; expansion rules
ID CODE
AB In many scenarios, we need to find the most likely program that meets a specification under a local context, where the local context can be an incomplete program, a partial specification, natural language description, a rid so on. We call such a problem program estimation. In this article, we propose a framework, LingLong Synthesis Framework (L2S), to address this problem. Compared with existing work, our work is novel in the following aspects. (1) We propose a theory of expansion rules to describe how to decompose a program into choices. (2) We propose an approach based on abstract interpretation to efficiently prune off the program sub-space that does not satisfy the specification. (3) We prove that the probability of a program is the product of the probabilities of choosing expansion rules, regardless of the choosing order. (4) We reduce the program estimation problem to a pathfinding problem, enabling existing pathfinding algorithms to solve this problem.
   L2S has been applied to program generation and program repair. In this article, we report our instantiation of this framework for synthesizing conditional expressions (L2S-Cond) and repairing conditional statements (L2S-Hanabi). The experiments on L2S-Cond show that each option enabled by L2S, including the expansion rules, the pruning technique, and the use of different pathfinding algorithms, plays a major role in the performance of the approach. The default configuration of L2S-Cond correctly predicts nearly 60% of the conditional expressions in the top 5 candidates. Moreover, we evaluate L2S-Hanabi on 272 bugs from two real-world Java defects benchmarks, namely Defects4J and Bugs.jar. L2S-Hanabi correctly fixes 32 bugs with a high precision of 84%. In terms of repairing conditional statement bugs, L2S-Hanabi significantly outperforms all existing approaches in both precision and recall.
C1 [Xiong, Yingfei; Wang, Bo] Peking Univ, Minist Educ, Key Lab High Confidence Software Technol, Beijing 100871, Peoples R China.
   [Xiong, Yingfei; Wang, Bo] Peking Univ, Sch Comp Sci, EECS, Beijing 100871, Peoples R China.
C3 Peking University; Peking University
RP Xiong, YF (corresponding author), Peking Univ, Minist Educ, Key Lab High Confidence Software Technol, Beijing 100871, Peoples R China.; Xiong, YF (corresponding author), Peking Univ, Sch Comp Sci, EECS, Beijing 100871, Peoples R China.
EM xiongyf@pku.edu.cn; wangbo_15@pku.edu.cn
RI Wang, Bo/ADN-8547-2022
OI Wang, Bo/0000-0001-7944-9182
FU National Key Research and Development Program of China [2019YFE0198100];
   National Natural Science Foundation of China [61922003]
FX This work is sponsored in part by the National Key Research and
   Development Program of China No. 2019YFE0198100, National Natural
   Science Foundation of China under Grant No. 61922003.
CR Abreu R, 2006, 12TH PACIFIC RIM INTERNATIONAL SYMPOSIUM ON DEPENDABLE COMPUTING, PROCEEDINGS, P39
   Alur R, 2015, NATO SCI PEAC SECUR, V40, P1, DOI 10.3233/978-1-61499-495-4-1
   Nguyen AT, 2012, PROC INT CONF SOFTW, P69, DOI 10.1109/ICSE.2012.6227205
   [Anonymous], 2002, PRINCIPLE COMPONENT
   [Anonymous], 2006, COMPILERS PRINCIPLES
   Bader J, 2019, P ACM PROGRAM LANG, V3, DOI 10.1145/3360585
   Bielik P, 2016, PR MACH LEARN RES, V48
   Browne CB, 2012, IEEE T COMP INTEL AI, V4, P1, DOI 10.1109/TCIAIG.2012.2186810
   Chen LS, 2017, IEEE INT CONF AUTOM, P637, DOI 10.1109/ASE.2017.8115674
   Chen QC, 2020, PROCEEDINGS OF THE 41ST ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION (PLDI '20), P487, DOI 10.1145/3385412.3385988
   Chen TQ, 2016, KDD'16: PROCEEDINGS OF THE 22ND ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P785, DOI 10.1145/2939672.2939785
   Chen YJ, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P602, DOI 10.1145/3338906.3338951
   Chen ZM, 2021, IEEE T SOFTWARE ENG, V47, P1943, DOI 10.1109/TSE.2019.2940179
   Cousot P., 1977, C RECORD 4 ANN ACM S, P238, DOI DOI 10.1145/512950.512973
   Devlin J, 2017, PR MACH LEARN RES, V70
   Dong L, 2016, PROCEEDINGS OF THE 54TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, VOL 1, P33
   Fraser Gordon, 2011, PROC 19 ACM SIGSOFT, P416, DOI 10.1145/2025113.2025179
   Gazzola L, 2019, IEEE T SOFTWARE ENG, V45, P34, DOI 10.1109/TSE.2017.2755013
   Gulwani S, 2017, LECT NOTES COMPUT SC, V10695, P3, DOI 10.1007/978-3-319-71237-6_1
   Gulwani S, 2017, FOUND TRENDS PROGRAM, V4, P1, DOI 10.1561/2500000010
   Gulwani S, 2016, LECT NOTES ARTIF INT, V9706, P9, DOI 10.1007/978-3-319-40229-1_2
   Gupta R, 2017, AAAI CONF ARTIF INTE, P1345
   HART PE, 1968, IEEE T SYST SCI CYB, VSSC4, P100, DOI 10.1109/TSSC.1968.300136
   Hayati SA, 2018, 2018 CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING (EMNLP 2018), P925
   Hua JR, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P12, DOI 10.1145/3180155.3180245
   Ji RY, 2020, P ACM PROGRAM LANG, V4, DOI 10.1145/3428292
   Jiang JJ, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P255, DOI 10.1109/ASE.2019.00033
   Jiang JJ, 2018, ISSTA'18: PROCEEDINGS OF THE 27TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P298, DOI 10.1145/3213846.3213871
   Jones JA, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P467, DOI 10.1109/ICSE.2002.1007991
   Just R, 2014, P 2014 INT S SOFTW T, P437, DOI DOI 10.1145/2610384.2628055
   Kalyan Ashwin, 2018, P 6 INT C LEARNING R
   Kushman Nate, 2013, P 2013 C N AM CHAPTE, P826
   Le XBD, 2019, PROC INT CONF SOFTW, P524, DOI 10.1109/ICSE.2019.00064
   Le XBD, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P213, DOI 10.1109/SANER.2016.76
   Lee W, 2018, PROCEEDINGS OF THE 39TH ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, PLDI 2018, P436, DOI [10.1145/3192366.3192410, 10.1145/3296979.3192410]
   Li Y, 2020, PROC INT CONF SOFTW, P602, DOI 10.1145/3377811.3380345
   Ling W, 2016, PROCEEDINGS OF THE 54TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, VOL 1, P599
   Liu K, 2019, PROCEEDINGS OF THE 28TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA '19), P31, DOI 10.1145/3293882.3330577
   Long F, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P727, DOI 10.1145/3106237.3106253
   Long F, 2016, PROC INT CONF SOFTW, P702, DOI 10.1145/2884781.2884872
   Long F, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P166, DOI 10.1145/2786805.2786811
   Long F, 2016, ACM SIGPLAN NOTICES, V51, P298, DOI 10.1145/2914770.2837617
   Lutellier Thibaud, 2020, ISSTA '20: Proceedings of the 29th ACM SIGSOFT International Symposium on Software Testing and Analysis, P101, DOI 10.1145/3395363.3397369
   Martinez M, 2017, EMPIR SOFTW ENG, V22, P1936, DOI 10.1007/s10664-016-9470-4
   Medress M. F., 1977, Artificial Intelligence, V9, P307, DOI 10.1016/0004-3702(77)90026-1
   Menon Aditya Krishna, 2013, INT C MACHINE LEARNI, P187
   Polozov O, 2015, ACM SIGPLAN NOTICES, V50, P107, DOI [10.1145/2814270.2814310, 10.1145/2858965.2814310]
   Qi YH, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P254, DOI 10.1145/2568225.2568254
   Qi Zichao, 2015, P 2015 INT S SOFTW T, P24, DOI DOI 10.1145/2771783.2771791
   Rabinovich M, 2017, PROCEEDINGS OF THE 55TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (ACL 2017), VOL 1, P1139, DOI 10.18653/v1/P17-1105
   Raghothaman M, 2016, PROC INT CONF SOFTW, P357, DOI 10.1145/2884781.2884808
   Raychev V, 2014, ACM SIGPLAN NOTICES, V49, P419, DOI [10.1145/2594291.2594321, 10.1145/2666356.2594321]
   Rolim R, 2017, PROC INT CONF SOFTW, P404, DOI 10.1109/ICSE.2017.44
   Saha RK, 2018, IEEE WORK CONF MIN S, P10, DOI 10.1145/3196398.3196473
   Saha RK, 2017, IEEE INT CONF AUTOM, P648, DOI 10.1109/ASE.2017.8115675
   Shu CX, 2017, AAAI CONF ARTIF INTE, P1539
   Sobreira V, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P130, DOI 10.1109/SANER.2018.8330203
   Sun ZY, 2020, AAAI CONF ARTIF INTE, V34, P8984
   Sun ZY, 2019, AAAI CONF ARTIF INTE, P7055
   Tufano M, 2019, ACM T SOFTW ENG METH, V28, DOI 10.1145/3340544
   Wang S, 2016, PROC INT CONF SOFTW, P297, DOI 10.1145/2884781.2884804
   Weimer W, 2009, PROC INT CONF SOFTW, P364, DOI 10.1109/ICSE.2009.5070536
   Wen M, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1, DOI 10.1145/3180155.3180233
   White M, 2019, 2019 IEEE 26TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER), P479, DOI [10.1109/saner.2019.8668043, 10.1109/SANER.2019.8668043]
   Xiangyu Zhang, 2006, 28th International Conference on Software Engineering Proceedings, P272, DOI 10.1145/1134285.1134324
   Xin Q, 2017, IEEE INT CONF AUTOM, P660, DOI 10.1109/ASE.2017.8115676
   Xiong YF, 2018, 2018 ACM/IEEE 4TH INTERNATIONAL GENETIC IMPROVEMENT WORKSHOP (GI@ICSE 2018), P37, DOI 10.1145/3194810.3194816
   Xiong YF, 2017, PROC INT CONF SOFTW, P416, DOI 10.1109/ICSE.2017.45
   Xu K, 2018, 2018 CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING (EMNLP 2018), P918
   Xuan JF, 2017, IEEE T SOFTWARE ENG, V43, P34, DOI 10.1109/TSE.2016.2560811
   Ye H, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-020-09920-w
   Yin PC, 2017, PROCEEDINGS OF THE 55TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (ACL 2017), VOL 1, P440, DOI 10.18653/v1/P17-1041
NR 72
TC 6
Z9 6
U1 1
U2 7
PU ASSOC COMPUTING MACHINERY
PI NEW YORK
PA 1601 Broadway, 10th Floor, NEW YORK, NY USA
SN 1049-331X
EI 1557-7392
J9 ACM T SOFTW ENG METH
JI ACM Trans. Softw. Eng. Methodol.
PD JUL
PY 2022
VL 31
IS 3
AR 34
DI 10.1145/3487570
PG 45
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 1N4AE
UT WOS:000800599100001
DA 2024-07-18
ER

PT J
AU Yang, WH
   Zhang, C
   Pan, MX
   Xu, C
   Zhou, Y
   Huang, ZQ
AF Yang, Wenhua
   Zhang, Chong
   Pan, Minxue
   Xu, Chang
   Zhou, Yu
   Huang, Zhiqiu
TI Do Developers Really Know How to Use Git Commands? A Large-scale Study
   Using Stack Overflow
SO ACM TRANSACTIONS ON SOFTWARE ENGINEERING AND METHODOLOGY
LA English
DT Article
DE Git commands; Stack Overflow; user survey
AB Git, a cross-platform and open source distributed version control tool, provides strong support for non-linear development and is capable of handling everything from small to large projects with speed and efficiency. It has become an indispensable tool for millions of software developers and is the de facto standard of version control in software development nowadays. However, despite its widespread use, developers still frequently face difficulties when using various Git commands to manage projects and collaborate. To better help developers use Git, it is necessary to understand the issues and difficulties that they may encounter when using Git. Unfortunately, this problem has not yet been comprehensively studied. To fill this knowledge gap, in this article, we conduct a large-scale study on Stack Overflow, a popular Q&A forum for developers. We extracted and analyzed 80,370 relevant questions from Stack Overflow, and reported the increasing popularity of the Git command questions. By analyzing the questions, we identified the Git commands that are frequently asked and those that are associated with difficult questions on Stack Overflow to help understand the difficulties developers may encounter when using Git commands. In addition, we conducted a survey to understand how developers learn Git commands in practice, showing that self-learning is the primary learning approach. These findings provide a range of actionable implications for researchers, educators, and developers.
C1 [Yang, Wenhua; Zhou, Yu; Huang, Zhiqiu] Nanjing Univ Aeronaut & Astronaut, Coll Comp Sci & Technol, 29 Jiangjun Ave, Nanjing 211106, Jiangsu, Peoples R China.
   [Zhang, Chong; Pan, Minxue] Nanjing Univ, State Key Lab Novel Software Technol, 22 Hankou Rd, Nanjing 210093, Jiangsu, Peoples R China.
   [Zhang, Chong; Pan, Minxue] Nanjing Univ, Software Inst, 22 Hankou Rd, Nanjing 210093, Jiangsu, Peoples R China.
   [Xu, Chang] Nanjing Univ, State Key Lab Novel Software Technol, 163 Xianlin Ave, Nanjing 210023, Jiangsu, Peoples R China.
   [Xu, Chang] Nanjing Univ, Dept Comp Sci & Technol, 163 Xianlin Ave, Nanjing 210023, Jiangsu, Peoples R China.
C3 Nanjing University of Aeronautics & Astronautics; Nanjing University;
   Nanjing University; Nanjing University; Nanjing University
RP Yang, WH (corresponding author), Nanjing Univ Aeronaut & Astronaut, Coll Comp Sci & Technol, 29 Jiangjun Ave, Nanjing 211106, Jiangsu, Peoples R China.; Pan, MX (corresponding author), Nanjing Univ, State Key Lab Novel Software Technol, 22 Hankou Rd, Nanjing 210093, Jiangsu, Peoples R China.; Pan, MX (corresponding author), Nanjing Univ, Software Inst, 22 Hankou Rd, Nanjing 210093, Jiangsu, Peoples R China.
EM ywh@nuaa.edu.cn; 171250587@smail.nju.edu.cn; mxp@nju.edu.cn;
   changxu@nju.edu.cn; zhouyu@nuaa.edu.cn; zqhuang@nuaa.edu.cn
RI Pan, Minxue/AIC-5169-2022
OI Zhou, Yu/0000-0002-3723-7584
FU National Natural Science Foundation of China [61932021, 61972197,
   61972193]; Leading-edge Technology Program of Jiangsu Natural Science
   Foundation [BK20202001]; Natural Science Foundation of Jiangsu Province
   [BK20201292]
FX This work was supported by the National Natural Science Foundation of
   China (No. 61802179), the Leading-edge Technology Program of Jiangsu
   Natural Science Foundation (No. BK20202001), the National Natural
   Science Foundation of China (Nos. 61932021, 61972197, 61972193), and the
   Natural Science Foundation of Jiangsu Province (No. BK20201292).
CR Abdalkareem R, 2017, IEEE SOFTWARE, V34, P53, DOI 10.1109/MS.2017.31
   Ahmed S, 2018, PROCEEDINGS OF THE 12TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT (ESEM 2018), DOI 10.1145/3239235.3239524
   [Anonymous], 2014, stackoverflow
   [Anonymous], 1994, P INT C VERY LARGE D
   [Anonymous], 2013, STACKOVERFLOW
   [Anonymous], 2009, STACKOVERFLOW
   [Anonymous], 2020, StackOverflow
   [Anonymous], ACM T SOFTW ENG METH, V31
   Atlassian Corp Plc, 2019, CEL 10 MILL BITB CLO
   Bagherzadeh M, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P432, DOI 10.1145/3338906.3338939
   Bajaj K, 2014, P 11 WORK C MIN SOFT, P112
   Bangash Abdul Ali, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P260, DOI 10.1109/MSR.2019.00052
   Barua A, 2014, EMPIR SOFTW ENG, V19, P619, DOI 10.1007/s10664-012-9231-y
   Bennett S., 2012, 10 THINGS I HATE GIT
   Beyer S, 2018, INT C PROGRAM COMPRE, P211, DOI 10.1145/3196321.3196333
   Bosu A, 2017, IEEE T SOFTWARE ENG, V43, P56, DOI 10.1109/TSE.2016.2576451
   Calefato F, 2016, ESEM'16: PROCEEDINGS OF THE 10TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, DOI 10.1145/2961111.2962585
   Chacon S, 2014, PRO GIT, DOI DOI 10.1007/978-1-4842-0076-6
   Chen ZP, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P750, DOI 10.1145/3368089.3409759
   Church L, 2014, P PSYCH PROGR INT GR, P123
   Cummaudo A, 2020, PROC INT CONF SOFTW, P1584, DOI 10.1145/3377811.3380404
   De Rosso SP, 2016, ACM SIGPLAN NOTICES, V51, P292, DOI 10.1145/3022671.2984018
   De Rosso SantiagoPerez., 2013, Onward! '13, P37, DOI DOI 10.1145/2509578.2509584
   Gao ZP, 2021, ACM T SOFTW ENG METH, V30, DOI 10.1145/3412845
   GitHub, 2021, 2020 STAT OCT
   GitLab Inc, 2020, IS IT AN GOOD
   Islam MJ, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P510, DOI 10.1145/3338906.3338955
   Jiang J, 2021, INFORM SOFTWARE TECH, V129, DOI 10.1016/j.infsof.2020.106394
   Jiang SY, 2017, IEEE INT CONF AUTOM, P135, DOI 10.1109/ASE.2017.8115626
   Kavsek B, 2003, LECT NOTES COMPUT SC, V2810, P230, DOI 10.1007/978-3-540-45231-7_22
   Kononenko O, 2016, PROC INT CONF SOFTW, P1028, DOI 10.1145/2884781.2884840
   Liu SQ, 2022, IEEE T SOFTWARE ENG, V48, P1800, DOI 10.1109/TSE.2020.3038681
   Liu ZX, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P176, DOI 10.1109/ASE.2019.00026
   Liu ZX, 2018, IEEE INT CONF AUTOM, P373, DOI 10.1145/3238147.3238190
   Mahajan S, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P1052, DOI 10.1145/3368089.3409764
   Mamykina L, 2011, 29TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, P2857
   Meldrum S, 2017, P 21 INT C EVALUATIO, P180
   Nadi S, 2016, PROC INT CONF SOFTW, P935, DOI 10.1145/2884781.2884790
   Punter T, 2003, 2003 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P80, DOI 10.1109/ISESE.2003.1237967
   Quo QY, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P822, DOI 10.1109/ASE.2019.00080
   Rosen C, 2016, EMPIR SOFTW ENG, V21, P1192, DOI 10.1007/s10664-015-9379-3
   Slashdot Media, 2020, SOURC
   Stack Exchange Inc, 2020, STACK EXCH DUMP
   Tahaei M, 2020, PROCEEDINGS OF THE 2020 CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS (CHI'20), DOI 10.1145/3313831.3376768
   Treude C, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P804, DOI 10.1145/1985793.1985907
   Vasilescu B, 2013, 2013 ASE/IEEE INTERNATIONAL CONFERENCE ON SOCIAL COMPUTING (SOCIALCOM), P188, DOI 10.1109/SocialCom.2013.35
   WHO, 2012, WORLD MALARIA REPORT 2012, P1
   Xu SB, 2019, PROCEEDINGS OF THE TWENTY-EIGHTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P3975
   Yang XL, 2016, J COMPUT SCI TECH-CH, V31, P910, DOI 10.1007/s11390-016-1672-0
   Zhang TY, 2019, PROC INT SYMP SOFTW, P104, DOI 10.1109/ISSRE.2019.00020
   Zhang YH, 2018, ISSTA'18: PROCEEDINGS OF THE 27TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P129, DOI 10.1145/3213846.3213866
NR 51
TC 4
Z9 4
U1 1
U2 9
PU ASSOC COMPUTING MACHINERY
PI NEW YORK
PA 1601 Broadway, 10th Floor, NEW YORK, NY USA
SN 1049-331X
EI 1557-7392
J9 ACM T SOFTW ENG METH
JI ACM Trans. Softw. Eng. Methodol.
PD JUL
PY 2022
VL 31
IS 3
AR 44
DI 10.1145/3494518
PG 29
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 1N4AE
UT WOS:000800599100011
OA Bronze
DA 2024-07-18
ER

PT J
AU Maddila, C
   Nagappan, N
   Bird, C
   Gousios, G
   Van Deursen, A
AF Maddila, Chandra
   Nagappan, Nachiappan
   Bird, Christian
   Gousios, Georgios
   van Deursen, Arie
TI ConE: A Concurrent Edit Detection Tool for Large-scale Software
   Development
SO ACM TRANSACTIONS ON SOFTWARE ENGINEERING AND METHODOLOGY
LA English
DT Article
DE Pull-based software development; pull request; merge conflict;
   distributed software development
AB Modern, complex software systems are being continuously extended and adjusted. The developers responsible for this may come from different teams or organizations, and may be distributed over the world. This may make it difficult to keep track of what other developers are doing, which may result in multiple developers concurrently editing the same code areas. This, in turn, may lead to hard-to-merge changes or even merge conflicts, logical bugs that are difficult to detect, duplication of work, and wasted developer productivity. To address this, we explore the extent of this problem in the pull-request-based software development model. We study half a year of changes made to six large repositories in Microsoft in which at least 1,000 pull requests are created each month. We find that files concurrently edited in different pull requests are more likely to introduce bugs. Motivated by these findings, we design, implement, and deploy a service named Concurrent Edit Detector (ConE) that proactively detects pull requests containing concurrent edits, to help mitigate the problems caused by them. ConE has been designed to scale, and to minimize false alarms while still flagging relevant concurrently edited files. Key concepts of ConE include the detection of the Extent of Overlap between pull requests, and the identification of Rarely Concurrently Edited Files. To evaluate ConE, we report on its operational deployment on 234 repositories inside Microsoft. ConE assessed 26,000 pull requests and made 775 recommendations about conflicting changes, which were rated as useful in over 70% (554) of the cases. From interviews with 48 users, we learned that they believed ConE would save time in conflict resolution and avoiding duplicate work, and that over 90% intend to keep using the service on a daily basis.
C1 [Maddila, Chandra; Nagappan, Nachiappan; Bird, Christian] Microsoft Res, 14820 NE 36th St, Redmond, WA 98052 USA.
   [Gousios, Georgios] Facebook, 1 Hacker Way, Menlo Pk, CA 94025 USA.
   [Gousios, Georgios; van Deursen, Arie] Delft Univ Technol, Bldg 28,Van Mourik Broekmanweg 6, NL-2628 XE Delft, Netherlands.
C3 Microsoft; Facebook Inc; Delft University of Technology
RP Maddila, C (corresponding author), Microsoft Res, 14820 NE 36th St, Redmond, WA 98052 USA.
EM chmaddil@microsoft.com; nchiappan.nagappan@gmail.com;
   cbird@microsoft.com; gousiosg@fb.com; Arie.vanDeursen@tudelft.nl
RI van Deursen, Arie/G-3084-2011
OI van Deursen, Arie/0000-0003-4850-3312; Maddila,
   Chandra/0000-0002-9432-1045
CR Accioly P, 2018, EMPIR SOFTW ENG, V23, P2051, DOI 10.1007/s10664-017-9586-1
   Ahmed I, 2017, INT SYMP EMP SOFTWAR, P58, DOI 10.1109/ESEM.2017.12
   Ashraf U, 2019, 2019 IEEE 26TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER), P186, DOI [10.1109/saner.2019.8667990, 10.1109/SANER.2019.8667990]
   Azure Batch, AZURE BATCH
   Azure Devops, AZURE DEVOPS
   Berczuk Steve, 2002, SOFTWARE CONFIGURATI
   Biehl JT, 2007, CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, VOLS 1 AND 2, P1313
   Bird C, 2012, P ACM SIGSOFT 20 INT, P45
   Bird C, 2009, 2009 6TH IEEE INTERNATIONAL WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES, P1, DOI 10.1109/MSR.2009.5069475
   Brindescu C, 2020, PROC INT CONF SOFTW, P801, DOI 10.1145/3377811.3380344
   Brindescu C, 2020, EMPIR SOFTW ENG, V25, P562, DOI 10.1007/s10664-019-09735-4
   Brun Y., 2011, Proceedings of the 19th ACM SIGSOFT symposium and the 13th European Conference on Foundations of Software Engineering (FSE'11), P168, DOI [10.1145/2025113.2025139, DOI 10.1145/2025113.2025139]
   Brun Y, 2013, IEEE T SOFTWARE ENG, V39, P1358, DOI 10.1109/TSE.2013.28
   Cataldo M., 2006, P 2006 20 06 ANN C C, P353, DOI DOI 10.1145/1180875.1180929
   Costa C, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P523, DOI 10.1145/2950290.2950339
   Costa C, 2014, INT J SOFTW ENG KNOW, V24, P1489, DOI 10.1142/S0218194014400166
   de Souza Cleidson R. B., 2003, P 2003 INT ACM SIGGR, P105, DOI DOI 10.1145/958160.958177
   Dias K, 2020, INFORM SOFTWARE TECH, V121, DOI 10.1016/j.infsof.2020.106256
   Estler HC, 2014, INT CONF GLOBAL SOFT, P26, DOI 10.1109/ICGSE.2014.17
   Feng Zhang, 2012, 2012 19th Working Conference on Reverse Engineering (WCRE), P456, DOI 10.1109/WCRE.2012.55
   Fowler Martin., SEMANTIC CONFLICT
   GitHub, DNDIM SEM IND GREEK
   Gousios G, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P345, DOI 10.1145/2568225.2568260
   Grinter R. E., 1995, Conference on Organizational Computing Systems, P168, DOI 10.1145/224019.224036
   Guimaraes ML, 2012, PROC INT CONF SOFTW, P342, DOI 10.1109/ICSE.2012.6227180
   Guzzi A, 2015, PROCEEDINGS OF THE 2015 ACM INTERNATIONAL CONFERENCE ON COMPUTER-SUPPORTED COOPERATIVE WORK AND SOCIAL COMPUTING (CSCW'15), P518, DOI 10.1145/2675133.2675177
   HORWITZ S, 1989, ACM T PROGR LANG SYS, V11, P345, DOI 10.1145/65979.65980
   Kalliamvakou E., 2014, P 11 WORKING C MININ, P92, DOI DOI 10.1145/2597073.2597074
   Kasi BK, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P732, DOI 10.1109/ICSE.2013.6606619
   Kim S, 2006, IEEE INT CONF AUTOM, P81
   Lanza M, 2013, CONF PROC INT SYMP C, P207, DOI 10.1109/ICPC.2013.6613849
   Liu DG, 2019, PROCEEDINGS OF THE TWELFTH ACM INTERNATIONAL CONFERENCE ON WEB SEARCH AND DATA MINING (WSDM'19), P222, DOI 10.1145/3289600.3291003
   Mckee S, 2017, PROC IEEE INT CONF S, P467, DOI 10.1109/ICSME.2017.53
   Microsoft, 2020, MICR FACTS
   Nelson N, 2019, EMPIR SOFTW ENG, V24, P2863, DOI 10.1007/s10664-018-9674-x
   Nieminen A, 2012, COLLABORATECOM, P540, DOI 10.4108/icst.collaboratecom.2012.250435
   Owhadi-Kareshk M, 2019, INT SYMP EMP SOFTWAR, P363
   Rochkind M. J., 1975, IEEE Transactions on Software Engineering, VSE-1, P364, DOI 10.1109/TSE.1975.6312866
   Sarma A, 2003, PROC INT CONF SOFTW, P444, DOI 10.1109/ICSE.2003.1201222
   Steck H., 2011, P 5 ACM C REC SYST, P125
   Wang S, 2019, 15TH INTERNATIONAL CONFERENCE ON PREDICTIVE MODELS AND DATA ANALYTICS IN SOFTWARE ENGINEERING (PROMISE'19), P46, DOI 10.1145/3345629.3345635
   Williams C, 2008, P 2008 WORKSHOP DEFE, P32
   Winters Titus, 2020, SOFTWARE ENG GOOGLE
NR 43
TC 1
Z9 1
U1 0
U2 2
PU ASSOC COMPUTING MACHINERY
PI NEW YORK
PA 1601 Broadway, 10th Floor, NEW YORK, NY USA
SN 1049-331X
EI 1557-7392
J9 ACM T SOFTW ENG METH
JI ACM Trans. Softw. Eng. Methodol.
PD APR
PY 2022
VL 31
IS 2
AR 22
DI 10.1145/3478019
PG 26
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 1L3NY
UT WOS:000799199600006
OA Green Published, Green Submitted, Bronze
DA 2024-07-18
ER

PT J
AU Nikanjam, A
   Ben Braiek, H
   Morovati, MM
   Khomh, F
AF Nikanjam, Amin
   Ben Braiek, Houssem
   Morovati, Mohammad Mehdi
   Khomh, Foutse
TI Automatic Fault Detection for Deep Learning Programs Using Graph
   Transformations
SO ACM TRANSACTIONS ON SOFTWARE ENGINEERING AND METHODOLOGY
LA English
DT Article
DE Graph transformations; model-based verification; deep learning; fault
   detection
AB Nowadays, we are witnessing an increasing demand in both corporates and academia for exploiting Deep Learning (DL) to solve complex real-world problems. A DL program encodes the network structure of a desirable DL model and the process by which the model learns from the training dataset. Like any software, a DL program can be faulty, which implies substantial challenges of software quality assurance, especially in safety-critical domains. It is therefore crucial to equip DL development teams with efficient fault detection techniques and tools. In this article, we propose NeuraLint, a model-based fault detection approach for DL programs, using meta-modeling and graph transformations. First, we design a meta-model for DL programs that includes their base skeleton and fundamental properties. Then, we construct a graph-based verification process that covers 23 rules defined on top of the meta-model and implemented as graph transformations to detect faults and design inefficiencies in the generated models (i.e., instances of the meta-model). First, the proposed approach is evaluated by finding faults and design inefficiencies in 28 synthesized examples built from common problems reported in the literature. Then NeuraLint successfully finds 64 faults and design inefficiencies in 34 real-world DL programs extracted from Stack Overflow posts and GitHub repositories. The results show that NeuraLint effectively detects faults and design issues in both synthesized and realworld examples with a recall of 70.5% and a precision of 100%. Although the proposed meta-model is designed for feedforward neural networks, it can be extended to support other neural network architectures such as recurrent neural networks. Researchers can also expand our set of verification rules to cover more types of issues in DL programs.
C1 [Nikanjam, Amin] KN Toosi Univ Technol, Tehran, Iran.
   [Nikanjam, Amin; Ben Braiek, Houssem; Morovati, Mohammad Mehdi; Khomh, Foutse] Polytech Montreal, SWAT Lab, Stn Ctr Ville, POB 6079, Montreal, PQ H3C 3A7, Canada.
C3 K. N. Toosi University of Technology; Universite de Montreal;
   Polytechnique Montreal
RP Nikanjam, A (corresponding author), KN Toosi Univ Technol, Tehran, Iran.; Nikanjam, A (corresponding author), Polytech Montreal, SWAT Lab, Stn Ctr Ville, POB 6079, Montreal, PQ H3C 3A7, Canada.
EM nikanjam@kntu.ac.ir; houssem.ben-braiek@polymtl.ca;
   mehdi.morovati@polymtl.ca; foutse.khomh@polymtl.ca
RI Nikanjam, Amin/AAT-7832-2020
OI Nikanjam, Amin/0000-0002-0440-6839; Morovati, Mohammad
   Mehdi/0000-0002-7942-4791
FU Natural Sciences and Engineering Research Council of Canada (NSERC) via
   the DEpendable Explainable Learning (DEEL) project; Fonds de Recherche
   du Quebec (FRQ); Institut de VAlorisation des DOnnees (IVADO)
FX This work is partly funded by the Natural Sciences and Engineering
   Research Council of Canada (NSERC) via the DEpendable Explainable
   Learning (DEEL) project, the Fonds de Recherche du Quebec (FRQ), and
   Institut de VAlorisation des DOnnees (IVADO)
CR Allamanis M., 2018, INT C LEARN REPR ICL
   [Anonymous], 2020, TENSORFLOW BASED LEN
   [Anonymous], 2020, KERAS BASED VGG16
   [Anonymous], 2021, Replication Package
   [Anonymous], 2017, US
   [Anonymous], 2016, About Us
   [Anonymous], 2010, P 2010 ACM S APPL CO
   Ben Braiek H, 2020, J SYST SOFTWARE, V164, DOI 10.1016/j.jss.2020.110542
   Ben Braiek H, 2019, PROC IEEE INT CONF S, P454, DOI 10.1109/ICSME.2019.00078
   Ben Braiek H, 2019, 2019 IEEE 19TH INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY AND SECURITY (QRS 2019), P426, DOI 10.1109/QRS.2019.00059
   Canziani A., 2017, arXiv
   Deng J, 2009, PROC CVPR IEEE, P248, DOI 10.1109/CVPRW.2009.5206848
   Dinella Elizabeth, 2020, INT C LEARNING REPRE
   Dwarakanath A, 2018, ISSTA'18: PROCEEDINGS OF THE 27TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P118, DOI 10.1145/3213846.3213858
   Iyer RG, 2020, Arxiv, DOI arXiv:2004.00768
   Ghamarian Amir Hossein, 2012, International Journal on Software Tools for Technology Transfer, V14, P15, DOI 10.1007/s10009-011-0186-x
   github, 2018, About Us
   Glorot X., 2010, P INT C ART INT STAT, P249
   Goodfellow I, 2016, ADAPT COMPUT MACH LE, P1
   Han D, 2017, PROC CVPR IEEE, P6307, DOI 10.1109/CVPR.2017.668
   Hartmann T, 2019, 2019 ACM/IEEE 22ND INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS 2019), P300, DOI 10.1109/MODELS.2019.00014
   Hayou S, 2019, PR MACH LEARN RES, V97
   He KM, 2016, PROC CVPR IEEE, P770, DOI 10.1109/CVPR.2016.90
   He KM, 2015, PROC CVPR IEEE, P5353, DOI 10.1109/CVPR.2015.7299173
   Heckel R, 2006, ELECTRON NOTES THEOR, V148, P187, DOI 10.1016/j.entcs.2005.12.018
   Hasanpour SH, 2018, Arxiv, DOI [arXiv:1802.06205, DOI 10.48550/ARXIV.1802.06205]
   Humbatova N, 2020, PROC INT CONF SOFTW, P1110, DOI 10.1145/3377811.3380395
   Iandola F, 2014, Arxiv, DOI [arXiv:1404.1869, DOI 10.48550/ARXIV.1404.1869]
   Ioffe S, 2015, PR MACH LEARN RES, V37, P448
   Islam MJ, 2020, PROC INT CONF SOFTW, P1135, DOI 10.1145/3377811.3380378
   Islam MJ, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P510, DOI 10.1145/3338906.3338955
   Krizhevsky A, 2017, COMMUN ACM, V60, P84, DOI 10.1145/3065386
   Lecun Y, 1998, P IEEE, V86, P2278, DOI 10.1109/5.726791
   LeCun Y., 1998, MNIST DATABASE HANDW
   LeCun Y., 2015, Lenet-5, convolutional neural networks
   LeCun Y, 2015, NATURE, V521, P436, DOI 10.1038/nature14539
   Li X, 2019, PROC CVPR IEEE, P2677, DOI 10.1109/CVPR.2019.00279
   Lin TY, 2014, LECT NOTES COMPUT SC, V8693, P740, DOI 10.1007/978-3-319-10602-1_48
   Mishkin D, 2017, COMPUT VIS IMAGE UND, V161, P11, DOI 10.1016/j.cviu.2017.05.007
   Iandola FN, 2016, Arxiv, DOI arXiv:1602.07360
   Smith LN, 2016, Arxiv, DOI [arXiv:1611.00847, 10.48550/arXiv.1611.00847]
   Nwankpa C, 2018, Arxiv, DOI arXiv:1811.03378
   Pei KX, 2017, PROCEEDINGS OF THE TWENTY-SIXTH ACM SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES (SOSP '17), P1, DOI 10.1145/3132747.3132785
   Perez Carlos E, 2016, META MODEL META META
   Rensink A, 2003, LECT NOTES COMPUT SC, V3062, P479
   Scherer D, 2010, LECT NOTES COMPUT SC, V6354, P92, DOI 10.1007/978-3-642-15825-4_10
   Selsam D, 2017, PR MACH LEARN RES, V70
   Simonyan K, 2015, Arxiv, DOI arXiv:1409.1556
   Soley Richard Mark, 2013, DELIVER RESILIENT SE
   Srivastava N, 2014, J MACH LEARN RES, V15, P1929
   Szegedy C, 2016, PROC CVPR IEEE, P2818, DOI 10.1109/CVPR.2016.308
   Tian YC, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P303, DOI 10.1145/3180155.3180220
   Springenberg JT, 2015, Arxiv, DOI [arXiv:1412.6806, DOI 10.48550/ARXIV.1412.6806]
   Zhang Chengwei, 2018, CHOOSE LAST LAYER AC
   Zhang TY, 2019, PROC INT SYMP SOFTW, P104, DOI 10.1109/ISSRE.2019.00020
   Zhang YH, 2018, ISSTA'18: PROCEEDINGS OF THE 27TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P129, DOI 10.1145/3213846.3213866
NR 56
TC 11
Z9 12
U1 1
U2 16
PU ASSOC COMPUTING MACHINERY
PI NEW YORK
PA 1601 Broadway, 10th Floor, NEW YORK, NY USA
SN 1049-331X
EI 1557-7392
J9 ACM T SOFTW ENG METH
JI ACM Trans. Softw. Eng. Methodol.
PD JAN
PY 2022
VL 31
IS 1
AR 14
DI 10.1145/3470006
PG 27
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 5L8HX
UT WOS:000870650700014
OA Green Published, Green Submitted
DA 2024-07-18
ER

PT J
AU Zhang, HX
   Wang, SW
   Chen, TH
   Hassan, AE
AF Zhang, Haoxiang
   Wang, Shaowei
   Chen, Tse-Hsun (Peter)
   Hassan, Ahmed E.
TI Are Comments on Stack Overflow Well Organized for Easy Retrieval by
   Developers?
SO ACM TRANSACTIONS ON SOFTWARE ENGINEERING AND METHODOLOGY
LA English
DT Article
DE Empirical software engineering; crowdsourced knowledge sharing; Q&A
   website; stack overflow; commenting
ID CODE; STATISTICS; REVIEWS; SYSTEM
AB Many Stack Overflow answers have associated informative comments that can strengthen them and assist developers. A prior study found that comments can provide additional information to point out issues in their associated answer, such as the obsolescence of an answer. By showing more informative comments (e.g., the ones with higher scores) and hiding less informative ones, developers can more effectively retrieve information from the comments that are associated with an answer. Currently, Stack Overflow prioritizes the display of comments, and, as a result, 4.4 million comments (possibly including informative comments) are hidden by default from developers. In this study, we investigate whether this mechanism effectively organizes informative comments. We find that (1) the current comment organization mechanism does not work well due to the large amount of tie-scored comments (e.g., 87% of the comments have 0-score) and (2) in 97.3% of answers with hidden comments, at least one comment that is possibly informative is hidden while another comment with the same score is shown (i.e., unfairly hidden comments). The longest unfairly hidden comment is more likely to be informative than the shortest one. Our findings highlight that Stack Overflow should consider adjusting the comment organization mechanism to help developers effectively retrieve informative comments. Furthermore, we build a classifier that can effectively distinguish informative comments from uninformative comments. We also evaluate two alternative comment organization mechanisms (i.e., the Length mechanism and the Random mechanism) based on text similarity and the prediction of our classifier.
C1 [Zhang, Haoxiang] Huawei, Ctr Software Excellence, Markham, ON, Canada.
   [Hassan, Ahmed E.] Queens Univ, Software Anal & Intelligence Lab SAIL, Kingston, ON, Canada.
   [Wang, Shaowei] Univ Manitoba, Dept Comp Sci, Winnipeg, MB, Canada.
   [Chen, Tse-Hsun (Peter)] Concordia Univ, Software PErformance Anal & Reliabil SPEAR Lab, Montreal, PQ, Canada.
C3 Huawei Technologies; Queens University - Canada; University of Manitoba;
   Concordia University - Canada
RP Zhang, HX (corresponding author), Huawei, Ctr Software Excellence, Markham, ON, Canada.
EM hzhang@cs.queensu.ca; shaowei@cs.umanitoba.ca; peterc@encs.concordia.ca;
   ahmed@cs.queensu.ca
RI KHALIFA, AHMED khalifa/HKF-2246-2023
OI KHALIFA, AHMED khalifa/0000-0002-2918-7572; Chen,
   Tse-Hsun/0000-0003-4027-0905
CR Abdalkareem R, 2017, INFORM SOFTWARE TECH, V88, P148, DOI 10.1016/j.infsof.2017.04.005
   An L, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P283, DOI 10.1109/SANER.2017.7884629
   Anderson Ashton, 2012, P 18 ACM SIGKDD INT, DOI DOI 10.1145/2339530.2339665
   [Anonymous], 2002, Stat. Methods Inter-Rater Reliab. Assess. Ser.
   [Anonymous], 2020, SENT AN
   [Anonymous], 2014, Proceedings of the 17th ACM conference on Computer supported cooperative work social computing
   Arong, 2014, PROCEEDINGS OF 2014 IEEE INTERNATIONAL CONFERENCE ON PROGRESS IN INFORMATICS AND COMPUTING (PIC), P51, DOI 10.1109/PIC.2014.6972294
   Asaduzzaman M, 2013, IEEE WORK CONF MIN S, P97, DOI 10.1109/MSR.2013.6624015
   Baltes S, 2019, EMPIR SOFTW ENG, V24, P1259, DOI 10.1007/s10664-018-9650-5
   Baltes S, 2018, IEEE WORK CONF MIN S, P319, DOI 10.1145/3196398.3196430
   Barua A, 2014, EMPIR SOFTW ENG, V19, P619, DOI 10.1007/s10664-012-9231-y
   Boslaugh S., 2012, Statistics in a nutshell: A desktop quick reference
   Calefato F, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P430, DOI 10.1109/MSR.2015.56
   Carreño LVG, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P582, DOI 10.1109/ICSE.2013.6606604
   Chandra S, 2013, PROCEEDINGS OF 2013 INTERNATIONAL CONFERENCE ON CIRCUITS, POWER AND COMPUTING TECHNOLOGIES (ICCPCT 2013), P494
   Chen TH, 2016, EMPIR SOFTW ENG, V21, P1843, DOI 10.1007/s10664-015-9402-8
   Chen X, 2021, IEEE T SOFTWARE ENG, V47, P1960, DOI 10.1109/TSE.2019.2940439
   Cheng CL, 2017, 2017 12TH INTERNATIONAL CONFERENCE ON INTELLIGENT SYSTEMS AND KNOWLEDGE ENGINEERING (IEEE ISKE), DOI 10.1109/ULTSYM.2017.8091659
   Chujo K, 2005, READ FOREIGN LANG, V17, P1
   CLIFF N, 1993, PSYCHOL BULL, V114, P494, DOI 10.1037/0033-2909.114.3.494
   Dalip DH, 2013, SIGIR'13: THE PROCEEDINGS OF THE 36TH INTERNATIONAL ACM SIGIR CONFERENCE ON RESEARCH & DEVELOPMENT IN INFORMATION RETRIEVAL, P543
   Gazan R, 2010, INFORM PROCESS MANAG, V46, P693, DOI 10.1016/j.ipm.2009.10.007
   Gethers M., 2011, 2011 IEEE 27th International Conference on Software Maintenance, P133, DOI 10.1109/ICSM.2011.6080780
   Glassman Elena L., 2018, P 2018 CHI C HUM FAC
   Gu XD, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P933, DOI 10.1145/3180155.3180167
   Hassan S, 2020, IEEE T SOFTWARE ENG, V46, P773, DOI 10.1109/TSE.2018.2869395
   Hoque E, 2014, COMPUT GRAPH FORUM, V33, P221, DOI 10.1111/cgf.12378
   Jelihovschi E.G., 2014, TEMA (São Carlos), V15, P3
   Kandogan Eser, 1998, THESIS
   Khalid H, 2015, IEEE SOFTWARE, V32, P70, DOI 10.1109/MS.2014.50
   Ko RM, 2018, CURR APPL PHYS, V18, P1, DOI 10.1016/j.cap.2017.11.003
   Li J., 2016, Proceedings of the 31st Annual ACM Symposium on Applied Computing, P1127
   Lin DY, 2019, EMPIR SOFTW ENG, V24, P170, DOI 10.1007/s10664-018-9627-4
   Lv F, 2015, IEEE INT CONF AUTOM, P260, DOI 10.1109/ASE.2015.42
   Ma SW, 2020, IEEE T CIRC SYST VID, V30, P1683, DOI 10.1109/TCSVT.2019.2910119
   Mamykina L, 2011, 29TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, P2857
   MERTON RK, 1968, SCIENCE, V159, P56, DOI 10.1126/science.159.3810.56
   Mizobuchi Y, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P563, DOI 10.1109/SANER.2017.7884678
   Mudambi SM, 2010, MIS QUART, V34, P185
   Mujumdar Dhawal, 2011, CHI 11 EXTENDED ABST, P1525, DOI [10.1145/1979742, DOI 10.1145/1979742]
   Mukaka MM, 2012, MALAWI MED J, V24, P69
   Murgia A., 2016, P CHI C EXT ABSTR HU, P1272, DOI [10.1145/2851581.2892311, DOI 10.1145/2851581.2892311]
   Oliveto Rocco, 2010, Proceedings of the 18th IEEE International Conference on Program Comprehension (ICPC 2010), P68, DOI 10.1109/ICPC.2010.20
   Poché E, 2017, INT C PROGRAM COMPRE, P196, DOI 10.1109/ICPC.2017.26
   Ponzanelli L, 2014, PROC IEEE INT CONF S, P541, DOI 10.1109/ICSME.2014.90
   scikit-learn, 2020, FEATURE IMPORTANCE
   Seaman C, 2008, ESEM'08: PROCEEDINGS OF THE 2008 ACM-IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, P149
   Seaman CB, 1999, IEEE T SOFTWARE ENG, V25, P557, DOI 10.1109/32.799955
   Sengupta S, 2020, P 53 HAW INT C SYST, P2898, DOI DOI 10.24251/HICSS.2020.354
   Shaowei Wang, 2011, 2011 18th Working Conference on Reverse Engineering, P92, DOI 10.1109/WCRE.2011.72
   Shihab E, 2013, EMPIR SOFTW ENG, V18, P1005, DOI 10.1007/s10664-012-9228-6
   Srba I, 2016, IEEE SOFTWARE, V33, P80, DOI 10.1109/MS.2016.34
   Tang M, 2002, 40TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, PROCEEDINGS OF THE CONFERENCE, P120
   Tantithamthavorn C, 2018, INFORM SOFTWARE TECH, V102, P160, DOI 10.1016/j.infsof.2018.06.001
   Tausczik YR, 2011, 29TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, P1885
   Thung F, 2013, IEEE INT CONF AUTOM, P290, DOI 10.1109/ASE.2013.6693088
   Tian Q., 2013, P 7 INT C WEBL SOC M
   Upadhyay U, 2017, WSDM'17: PROCEEDINGS OF THE TENTH ACM INTERNATIONAL CONFERENCE ON WEB SEARCH AND DATA MINING, P61, DOI 10.1145/3018661.3018685
   Vyturina Alexandra, 2017, Proceedings of the 2017 CHI Conference Extended Abstracts on Human Factors in Computing Systems-CHI EA'17, page, P2187
   Wang SW, 2020, IEEE T SOFTWARE ENG, V46, P1024, DOI 10.1109/TSE.2018.2874470
   Wang SW, 2018, EMPIR SOFTW ENG, V23, P1552, DOI 10.1007/s10664-017-9558-5
   Wang SW, 2018, EMPIR SOFTW ENG, V23, P800, DOI 10.1007/s10664-017-9533-1
   Wang SW, 2014, PROC IEEE INT CONF S, P171, DOI 10.1109/ICSME.2014.39
   Wang Shaowei, 2013, SAC '13 Proceedings of the 28th Annual ACM Symposium on Applied Computing, P1019
   Wong E, 2013, IEEE INT CONF AUTOM, P562, DOI 10.1109/ASE.2013.6693113
   Wu YH, 2019, EMPIR SOFTW ENG, V24, P637, DOI 10.1007/s10664-018-9634-5
   Xia X, 2017, EMPIR SOFTW ENG, V22, P3149, DOI 10.1007/s10664-017-9514-4
   Xia X, 2013, IEEE WORK CONF MIN S, P287, DOI 10.1109/MSR.2013.6624040
   Yang D, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P391, DOI [10.1109/MSR.2016.047, 10.1145/2901739.2901767]
   Zagalsky A., 2012, 2012 Third International Workshop on Recommendation Systems for Software Engineering (RSSE), P38, DOI 10.1109/RSSE.2012.6233407
   Zhang HG, 2020, IEEE T SYST MAN CY-S, V50, P3169, DOI 10.1109/TSMC.2018.2889377
   Zhang L, 2019, COMPLEXITY, DOI 10.1155/2019/1671340
   Zhou J, 2020, IEEE T SOFTW ENG
NR 73
TC 9
Z9 9
U1 1
U2 8
PU ASSOC COMPUTING MACHINERY
PI NEW YORK
PA 1601 Broadway, 10th Floor, NEW YORK, NY USA
SN 1049-331X
EI 1557-7392
J9 ACM T SOFTW ENG METH
JI ACM Trans. Softw. Eng. Methodol.
PD MAR
PY 2021
VL 30
IS 2
AR 22
DI 10.1145/3434279
PG 31
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA QY7ND
UT WOS:000630223200011
DA 2024-07-18
ER

PT J
AU Shariffdeen, RS
   Tan, SH
   Gao, MY
   Roychoudhury, A
AF Shariffdeen, Ridwan Salihin
   Tan, Shin Hwei
   Gao, Mingyuan
   Roychoudhury, Abhik
TI Automated Patch Transplantation
SO ACM TRANSACTIONS ON SOFTWARE ENGINEERING AND METHODOLOGY
LA English
DT Article
DE Program repair; code transplantation; patch transplantation; dynamic
   program analysis
ID CODE; TOOL
AB Automated program repair is an emerging area that attempts to patch software errors and vulnerabilities. In this article, we formulate and study a problem related to automated repair, namely automated patch transplantation. A patch for an error in a donor program is automatically adapted and inserted into a "similar" target program. We observe that despite standard procedures for vulnerability disclosures and publishing of patches, many un-patched occurrences remain in the wild. One of the main reasons is the fact that various implementations of the same functionality may exist and, hence, published patches need to be modified and adapted. In this article, we therefore propose and implement a workflow for transplanting patches. Our approach centers on identifying patch insertion points, as well as namespaces translation across programs via symbolic execution. Experimental results to eliminate five classes of errors highlight our ability to fix recurring vulnerabilities across various programs through transplantation. We report that in 20 of 24 fixing tasks involving eight application subjects mostly involving file processing programs, we successfully transplanted the patch and validated the transplantation through differential testing. Since the publication of patches make an tut-patched implementation more vulnerable, our proposed techniques should serve a long-standing need in practice.
C1 [Shariffdeen, Ridwan Salihin; Gao, Mingyuan; Roychoudhury, Abhik] Natl Univ Singapore, Singapore, Singapore.
   [Tan, Shin Hwei] Southern Univ Sci & Technol, Shenzhen, Guangdong, Peoples R China.
C3 National University of Singapore; Southern University of Science &
   Technology
RP Tan, SH (corresponding author), Southern Univ Sci & Technol, Shenzhen, Guangdong, Peoples R China.
EM ridwan@comp.nus.edu.sg; tansh3@sustech.edu.cn; gaomy@comp.nus.edu.sg;
   abhik@comp.nus.edu.sg
RI Shariffdeen, Ridwan/AAM-2723-2021
OI Shariffdeen, Ridwan/0000-0001-5409-4864; Tan, Shin
   Hwei/0000-0001-8633-3372
FU National Natural Science Foundation of China [61902170]; Natural Science
   Foundation of Guangdong Province [2020A1515011494]; National Satellite
   of Excellence in Trustworthy Software Systems - NRF Singapore under the
   National Cybersecurity RD (NCR) program
FX This work was partially supported by the National Natural Science
   Foundation of China (Grant No. 61902170) and Natural Science Foundation
   of Guangdong Province (Grant No. 2020A1515011494). This work was
   partially supported by the National Satellite of Excellence in
   Trustworthy Software Systems, funded by NRF Singapore under the National
   Cybersecurity R&D (NCR) program.
CR Adams MD, 2000, 2000 INTERNATIONAL CONFERENCE ON IMAGE PROCESSING, VOL II, PROCEEDINGS, P53, DOI 10.1109/ICIP.2000.899223
   [Anonymous], 2016, IEEE T SOFTWARE ENG
   [Anonymous], 2016, DEV VULN HEARTBL
   Apiwattanapong T, 2007, AUTOMAT SOFTW ENG, V14, P3, DOI 10.1007/s10515-006-0002-0
   Bao T, 2017, P IEEE S SECUR PRIV, P824, DOI 10.1109/SP.2017.67
   Barr E. T., 2015, ISSTA, P257
   Cadar C., 2008, Proceedings of the 8th USENIX conference on Operating systems design and implementation, OSDI'08, (USA), P209
   Docker Inc, 2020, DOCK PROJ
   Durumeric Z, 2014, PROCEEDINGS OF THE 2014 ACM INTERNET MEASUREMENT CONFERENCE (IMC'14), P475, DOI 10.1145/2663716.2663755
   Falleri Jean-Remy, 2014, P 29 ACM IEEE INT C, P313
   Fluri B, 2007, IEEE T SOFTWARE ENG, V33, P725, DOI 10.1109/TSE.2007.70731
   Fry Z.P., 2012, INT S SOFTWARE TESTI, P177, DOI 10.1145/04000800.2336775
   Gomez Veronica Uquillas, 2010, Proceedings 17th Working Conference on Reverse Engineering (WCRE 2010), P55, DOI 10.1109/WCRE.2010.15
   Nguyen HDT, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P772, DOI 10.1109/ICSE.2013.6606623
   Huang KF, 2018, IEEE INT CONF AUTOM, P679, DOI 10.1145/3238147.3238219
   Jiang JJ, 2018, ISSTA'18: PROCEEDINGS OF THE 27TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P298, DOI 10.1145/3213846.3213871
   Jiang LX, 2007, PROC INT CONF SOFTW, P96
   Kim D, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P802, DOI 10.1109/ICSE.2013.6606626
   Kim M, 2009, PROC INT CONF SOFTW, P309, DOI 10.1109/ICSE.2009.5070531
   Laski J., 1992, Conference on Software Maintenance 1992 (Cat.No.92CH3206-0), P282, DOI 10.1109/ICSM.1992.242533
   Le Goues C, 2019, COMMUN ACM, V62, P56, DOI 10.1145/3318162
   Le Goues C, 2012, IEEE T SOFTWARE ENG, V38, P54, DOI 10.1109/TSE.2011.104
   Le Goues C, 2012, PROC INT CONF SOFTW, P3, DOI 10.1109/ICSE.2012.6227211
   Le XBD, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P213, DOI 10.1109/SANER.2016.76
   LLVM Developer Group, 2019, CLANG PROJ
   Long F, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P727, DOI 10.1145/3106237.3106253
   Long F, 2016, ACM SIGPLAN NOTICES, V51, P298, DOI 10.1145/2914770.2837617
   Lu YX, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P338, DOI 10.1145/3180155.3180190
   Marginean Alexandru, 2015, Search-Based Software Engineering. 7th International Symposium, SSBSE 2015. Proceedings: LNCS 9275, P262, DOI 10.1007/978-3-319-22183-0_21
   Martinez M., 2016, P 25 INT S SOFTWARE, P441, DOI 10.1145/2931037
   Martinez M, 2017, EMPIR SOFTW ENG, V22, P1936, DOI 10.1007/s10664-016-9470-4
   Mechtaev S, 2018, ACM T SOFTW ENG METH, V27, DOI 10.1145/3241980
   Mechtaev S, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P129, DOI 10.1145/3180155.3180247
   Mechtaev S, 2016, PROC INT CONF SOFTW, P691, DOI 10.1145/2884781.2884807
   Mechtaev S, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P448, DOI 10.1109/ICSE.2015.63
   Meng N, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P502, DOI 10.1109/ICSE.2013.6606596
   Meng N, 2011, PLDI 11: PROCEEDINGS OF THE 2011 ACM CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P329
   Microsoft Research, 2019, The Z3 Theorem Prover.
   Padioleau Y., 2008, ACM SIGOPS EUROSYS E
   Padioleau Y, 2008, EUROSYS'08: PROCEEDINGS OF THE EUROSYS 2008 CONFERENCE, P247, DOI 10.1145/1357010.1352618
   Palix Nicolas, 2011, 16 INT C ARCH SUPP P
   Perkins JH, 2009, SOSP'09: PROCEEDINGS OF THE TWENTY-SECOND ACM SIGOPS SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES, P87
   Pham NT, 2010, IEEE INT CON MULTI, P1044, DOI 10.1109/ICME.2010.5583098
   Qi Zichao, 2015, P 2015 INT S SOFTW T, P24, DOI DOI 10.1145/2771783.2771791
   Raghavan S, 2004, PROC IEEE INT CONF S, P188, DOI 10.1109/ICSM.2004.1357803
   Ray B, 2013, IEEE INT CONF AUTOM, P367, DOI 10.1109/ASE.2013.6693095
   Rolim R, 2017, PROC INT CONF SOFTW, P404, DOI 10.1109/ICSE.2017.44
   Roy CK, 2008, WORK CONF REVERSE EN, P81, DOI 10.1109/WCRE.2008.54
   Sarubbo Agostino, 2019, AGOSTINOS BLOG
   Sen P, 2007, PROC INT CONF DATA, P571
   Sidiroglou-Douskos S, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P95, DOI 10.1145/3106237.3106269
   Sidiroglou-Douskos S, 2015, ACM SIGPLAN NOTICES, V50, P43, DOI [10.1145/2813885.2737988, 10.1145/2737924.2737988]
   Smith EK, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P532, DOI 10.1145/2786805.2786825
   Tan SH, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P187, DOI 10.1145/3180155.3180243
   Tan SH, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P727, DOI 10.1145/2950290.2950295
   Tan SH, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P471, DOI 10.1109/ICSE.2015.65
   Thung F, 2016, PROC IEEE INT CONF S, P223, DOI 10.1109/ICSME.2016.71
   Tian Y, 2012, PROC INT CONF SOFTW, P386, DOI 10.1109/ICSE.2012.6227176
   van Tonder R, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P151, DOI 10.1145/3180155.3180250
   Weimer W, 2013, IEEE INT CONF AUTOM, P356, DOI 10.1109/ASE.2013.6693094
   Weimer Westley, 2009, IEEE ACM INT C SOFTW
   WUU Y, 1991, SOFTWARE PRACT EXPER, V21, P739, DOI 10.1002/spe.4380210706
   Xin Q, 2017, PROCEEDINGS OF THE 26TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA'17), P226, DOI 10.1145/3092703.3092718
   Xiong YF, 2017, PROC INT CONF SOFTW, P416, DOI 10.1109/ICSE.2017.45
   Zhang TY, 2017, PROC INT CONF SOFTW, P665, DOI 10.1109/ICSE.2017.67
NR 65
TC 18
Z9 19
U1 0
U2 3
PU ASSOC COMPUTING MACHINERY
PI NEW YORK
PA 2 PENN PLAZA, STE 701, NEW YORK, NY 10121-0701 USA
SN 1049-331X
EI 1557-7392
J9 ACM T SOFTW ENG METH
JI ACM Trans. Softw. Eng. Methodol.
PD JAN
PY 2021
VL 30
IS 1
AR 6
DI 10.1145/3412376
PG 36
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA PZ3MX
UT WOS:000612644100006
DA 2024-07-18
ER

PT J
AU Chen, JJ
   Wu, Z
   Wang, Z
   You, HM
   Zhang, LM
   Yan, M
AF Chen, Junjie
   Wu, Zhuo
   Wang, Zan
   You, Hanmo
   Zhang, Lingming
   Yan, Ming
TI Practical Accuracy Estimation for Efficient Deep Neural Network Testing
SO ACM TRANSACTIONS ON SOFTWARE ENGINEERING AND METHODOLOGY
LA English
DT Article
DE Deep neural network testing; test input selection; labeling; test
   optimization
ID PRIORITIZATION; SELECTION
AB Deep neural network (DNN) has become increasingly popular and DNN testing is very critical to guarantee the correctness of DNN, i.e., the accuracy of DNN in this work. However, DNN testing suffers from a serious efficiency problem, i.e., it is costly to label each test input to know the DNN accuracy for the testing set, since labeling each test input involves multiple persons (even with domain-specific knowledge) in a manual way and the testing set is large-scale. To relieve this problem, we propose a novel and practical approach, called PACE (which is short for Practical ACcuracy Estimation), which selects a small set of test inputs that can precisely estimate the accuracy of the whole testing set. In this way, the labeling costs can be largely reduced by just labeling this small set of selected test inputs. Besides achieving a precise accuracy estimation, to make PACE more practical it is also required that it is interpretable, deterministic, and as efficient as possible. Therefore, PACE first incorporates clustering to interpretably divide test inputswith different testing capabilities (i.e., testing different functionalities of a DNN model) into different groups. Then, PACE utilizes the MMD-critic algorithm, a state-of-the-art example-based explanation algorithm, to select prototypes (i.e., the most representative test inputs) from each group, according to the group sizes, which can reduce the impact of noise due to clustering. Meanwhile, PACE also borrows the idea of adaptive random testing to select test inputs from the minority space (i.e., the test inputs that are not clustered into any group) to achieve great diversity under the required number of test inputs. The two parallel selection processes (i.e., selection from both groups and the minority space) compose the final small set of selected test inputs. We conducted an extensive study to evaluate the performance of PACE based on a comprehensive benchmark (i.e., 24 pairs of DNN models and testing sets) by considering different types of models (i.e., classification and regression models, high-accuracy and low-accuracy models, and CNN and RNN models) and different types of test inputs (i.e., original, mutated, and automatically generated test inputs). The results demonstrate that PACE is able to precisely estimate the accuracy of the whole testing set with only 1.181%similar to 2.302% deviations, on average, significantly outperforming the state-of-the-art approaches.
C1 [Chen, Junjie; Wang, Zan; You, Hanmo; Yan, Ming] Tianjin Univ, Coll Intelligence & Comp, Tianjin 300350, Peoples R China.
   [Wu, Zhuo] Tianjin Univ, Tianjin Int Engn Inst, Tianjin 300350, Peoples R China.
   [Zhang, Lingming] Univ Texas Dallas, Dept Comp Sci, Richardson, TX 75080 USA.
C3 Tianjin University; Tianjin University; University of Texas System;
   University of Texas Dallas
RP Wang, Z (corresponding author), Tianjin Univ, Coll Intelligence & Comp, Tianjin 300350, Peoples R China.
EM junjiechen@tju.edu.cn; wuzhuo@tju.edu.cn; wangzan@tju.edu.cn;
   youhanmo@tju.edu.cn; ling-ming.zhang@utdallas.edu; yanming@tju.edu.cn
RI Chen, Junjie/ABE-8685-2020
OI Chen, Junjie/0000-0003-4509-2271; Yan, Ming/0000-0001-9757-7794
FU National Natural Science Foundation of China [61872263]; Intelligent
   Manufacturing Special Fund of Tianjin [20191012]; Innovation Research
   Project of Tianjin University [2020XZC-0042]; National Science
   Foundation [CCF-1763906]
FX This work was partially supported by the National Natural Science
   Foundation of China under Grant No. 61872263, Intelligent Manufacturing
   Special Fund of Tianjin under Grant No. 20191012, Innovation Research
   Project of Tianjin University under Grant No. 2020XZC-0042. This work
   was also partially supported by National Science Foundation under Grant
   No. CCF-1763906 and Alibaba.
CR Ammann Paul, 2008, Introduction to software testing, V1st
   [Anonymous], 2017, Towards crafting text adversarial samples
   [Anonymous], 2018, IEEE T SOFTW ENG
   [Anonymous], 2019, ARXIV190300661
   Bouneffouf D, 2016, COMPUTERS, V5, DOI 10.3390/computers5010001
   Brendel W., 2018, ICLR
   Carlini N, 2017, P IEEE S SECUR PRIV, P39, DOI 10.1109/SP.2017.49
   Chen CY, 2015, IEEE I CONF COMP VIS, P2722, DOI 10.1109/ICCV.2015.312
   Chen JJ, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P364, DOI 10.1109/ASE.2019.00042
   Chen JJ, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE (ICSE-SEIP 2019), P111, DOI 10.1109/ICSE-SEIP.2019.00020
   Chen JJ, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P656, DOI 10.1145/3236024.3236053
   Chen JJ, 2018, PROC IEEE ACM INT C, P472, DOI 10.1145/3183440.3183456
   Chen JJ, 2017, PROC INT CONF SOFTW, P700, DOI 10.1109/ICSE.2017.70
   Chen JJ, 2017, IEEE INT CONF SOFTW, P418, DOI 10.1109/ICST.2017.45
   Chen JJ, 2016, IEEE INT CONF AUTOM, P178, DOI 10.1145/2970276.2970366
   Chen JJ, 2016, IEEE INT CONF SOFTW, P266, DOI 10.1109/ICST.2016.19
   Chen Junjie, 2018, ECOOP SER LIPICS, p6:1
   Chen Tsong Yueh, 2010, J SYST SOFTW, V83, P60
   Chen TY, 1998, INFORM SOFTWARE TECH, V40, P347, DOI 10.1016/S0950-5849(98)00050-0
   Cruciani E, 2019, PROC INT CONF SOFTW, P419, DOI 10.1109/ICSE.2019.00055
   Dai JH, 2013, APPL SOFT COMPUT, V13, P211, DOI 10.1016/j.asoc.2012.07.029
   Du X., 2018, CORR
   Du XN, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P477, DOI 10.1145/3338906.3338954
   Elbaum S, 2002, IEEE T SOFTWARE ENG, V28, P159, DOI 10.1109/32.988497
   Gatys L., 2016, Journal of Vision, V16, P326, DOI DOI 10.1167/16.12.326
   Gerasimou S., 2020, ARXIV200203433
   Gligoric M., 2015, P 2015 INT S SOFTWAR, P211, DOI 10.1145/2771783.2771784
   Goodfellow R, 2015, OIL AND GAS PIPELINES: INTEGRITY AND SAFETY HANDBOOK, P3
   Gotlieb Arnaud., 2014, Proceedings of the 2014 International Symposium on Software Testing and Analysis, P171
   Guo JM, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P739, DOI 10.1145/3236024.3264835
   Harrold M. J., 1993, ACM Transactions on Software Engineering and Methodology, V2, P270, DOI 10.1145/152388.152391
   Hartigan J. A., 1979, Applied Statistics, V28, P100, DOI 10.2307/2346830
   He W, 2018, P 6 INT C LEARN REPR, P1
   Henard C, 2016, PROC INT CONF SOFTW, P523, DOI 10.1145/2884781.2884791
   Hu Q, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P1158, DOI 10.1109/ASE.2019.00126
   Islam MJ, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P510, DOI 10.1145/3338906.3338955
   Jiang B, 2009, IEEE INT CONF AUTOM, P233, DOI 10.1109/ASE.2009.77
   Julian K. D., 2016, 2016 IEEE AIAA 35 DI, P1, DOI DOI 10.1109/DASC.2016.7778091
   Kim B., 2016, Advances in neural information processing systems, P1, DOI DOI 10.5555/3157096.3157352
   Kim J, 2019, PROC INT CONF SOFTW, P1039, DOI 10.1109/ICSE.2019.00108
   Kurakin Alexey, 2017, INT C LEARN REPR
   Lai SW, 2015, AAAI CONF ARTIF INTE, P2267
   Lee DS, 2001, IEEE VTS VEH TECHNOL, P556, DOI 10.1109/VETECS.2001.944904
   Legunsen O, 2017, IEEE INT CONF AUTOM, P949, DOI 10.1109/ASE.2017.8115710
   Legunsen O, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P583, DOI 10.1145/295029.2950361
   Lewis D. D., 1994, SIGIR '94. Proceedings of the Seventeenth Annual International ACM-SIGIR Conference on Research and Development in Information Retrieval, P3
   Li X, 2019, PROCEEDINGS OF THE 28TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA '19), P169, DOI 10.1145/3293882.3330574
   Li ZN, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P499, DOI 10.1145/3338906.3338930
   Li ZN, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: NEW IDEAS AND EMERGING RESULTS (ICSE-NIER 2019), P89, DOI 10.1109/ICSE-NIER.2019.00031
   Li Z, 2007, IEEE T SOFTWARE ENG, V33, P225, DOI 10.1109/TSE.2007.38
   Liang B, 2018, PROCEEDINGS OF THE TWENTY-SEVENTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P4208
   Liu WB, 2017, NEUROCOMPUTING, V234, P11, DOI 10.1016/j.neucom.2016.12.038
   Lou YL, 2019, ADV COMPUT, V113, P1, DOI 10.1016/bs.adcom.2018.10.001
   Ma L, 2018, IEEE INT CONF AUTOM, P120, DOI 10.1145/3238147.3238202
   Ma L, 2019, 2019 IEEE 26TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER), P614, DOI [10.1109/saner.2019.8668044, 10.1109/SANER.2019.8668044]
   Ma L, 2018, PROC INT SYMP SOFTW, P100, DOI 10.1109/ISSRE.2018.00021
   Ma SQ, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P175, DOI 10.1145/3236024.3236082
   Ma Shiqing, 2019, P 26 ANN NETW DISTR
   Mao K., 2016, P 25 INT S SOFTW TES, P94
   McInnes L, 2017, INT CONF DAT MIN WOR, P33, DOI 10.1109/ICDMW.2017.12
   Melville Prem, 2004, P 21 INT C MACH LEAR, P74
   Moret Bernard ME, 1992, Comput Support Discrete Math, V15, P99
   Obermeyer Z, 2016, NEW ENGL J MED, V375, P1216, DOI 10.1056/NEJMp1606181
   Odena A, 2019, PR MACH LEARN RES, V97
   Oja E, 2006, IEEE T NEURAL NETWOR, V17, P1370, DOI 10.1109/TNN.2006.880980
   Papernot N, 2016, IEEE MILIT COMMUN C, P49, DOI 10.1109/MILCOM.2016.7795300
   Pei KX, 2017, PROCEEDINGS OF THE TWENTY-SIXTH ACM SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES (SOSP '17), P1, DOI 10.1145/3132747.3132785
   Qin N., 2019, PROC ICML, P5231
   Quinlan J. R., 1986, Machine Learning, V1, P81, DOI 10.1007/BF00116251
   Ren XX, 2004, ACM SIGPLAN NOTICES, V39, P432, DOI 10.1145/1035292.1029012
   Rothermel G, 2002, SOFTW TEST VERIF REL, V12, P219, DOI 10.1002/stvr.256
   Rothermel G, 1996, IEEE T SOFTWARE ENG, V22, P529, DOI 10.1109/32.536955
   Rothermel G., 1999, Proceedings IEEE International Conference on Software Maintenance - 1999 (ICSM'99). `Software Maintenance for Business Change' (Cat. No.99CB36360), P179, DOI 10.1109/ICSM.1999.792604
   Rothermel G., 1997, ACM Transactions on Software Engineering and Methodology, V6, P173, DOI 10.1145/248233.248262
   Saha RK, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P268, DOI 10.1109/ICSE.2015.47
   Schaal S, 1998, ADV NEUR IN, V10, P633
   Schönherr L, 2019, 26TH ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2019), DOI 10.14722/ndss.2019.23288
   Schubert E, 2017, ACM T DATABASE SYST, V42, DOI 10.1145/3068335
   Schwartz A, 2016, J SYST SOFTWARE, V115, P61, DOI 10.1016/j.jss.2016.01.018
   Sekhon J, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: NEW IDEAS AND EMERGING RESULTS (ICSE-NIER 2019), P85, DOI 10.1109/ICSE-NIER.2019.00030
   Settles B, 2008, P C EMP METH NAT LAN, P1070, DOI DOI 10.3115/1613715.1613855
   Shi A, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P246, DOI 10.1145/2635868.2635921
   Shi A, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P237, DOI 10.1145/2786805.2786878
   Simonyan K, 2015, Arxiv, DOI arXiv:1409.1556
   Su CL, 2019, J SOIL SCI PLANT NUT, V19, P71, DOI 10.1007/s42729-019-0011-2
   Sun Yi, 2014, NEURIPS, DOI DOI 10.1007/978-3-030-01252-6_48
   Sun YC, 2018, IEEE INT CONF AUTOM, P109, DOI 10.1145/3238147.3238172
   Szegedy C, 2014, Arxiv, DOI [arXiv:1312.6199, DOI 10.1109/CVPR.2015.7298594]
   Vargha A, 2000, J EDUC BEHAV STAT, V25, P101, DOI 10.3102/10769986025002101
   Wang JY, 2019, PROC INT CONF SOFTW, P1245, DOI 10.1109/ICSE.2019.00126
   Warden P, 2017, Speech commands: a public dataset for single-word speech recognition
   Wei Mingwei., 2019, CoRR
   Wilcoxon Frank, 1992, BREAKTHROUGHS STAT, P196, DOI [DOI 10.1007/978-1-4612-4380-9_16, 10.1007/978-1-4612-4380-9_16, DOI 10.1007/978-1-4612-4380-9]
   WOLD S, 1987, CHEMOMETR INTELL LAB, V2, P37, DOI 10.1016/0169-7439(87)80084-9
   Xie XF, 2019, PROCEEDINGS OF THE 28TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA '19), P146, DOI 10.1145/3293882.3330579
   Xu CL, 2018, 2018 IEEE INTERNATIONAL CONFERENCE ON ACOUSTICS, SPEECH AND SIGNAL PROCESSING (ICASSP), P6, DOI 10.1109/ICASSP.2018.8462471
   Yoo S, 2012, SOFTW TEST VERIF REL, V22, P67, DOI [10.1002/stv.430, 10.1002/stvr.430]
   Yu Zhe, 2019, ARXIV190907249
   Yuan XJ, 2018, PROCEEDINGS OF THE 27TH USENIX SECURITY SYMPOSIUM, P49
   Zan Wang Ming, 2020, J SOFTW
   Zhang Jie M., 2020, IEEE T SOFTW ENG
   Zhang L., 2019, ARXIV190100054
   Zhang L, 2011, SPRINGER SER DEMOGR, V27, P25, DOI 10.1007/978-90-481-8939-7_3
   Zhang LM, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P199, DOI 10.1145/3180155.3180198
   Zhang LM, 2011, 22ND IEEE INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING (ISSRE), P170, DOI 10.1109/ISSRE.2011.26
   Zhang MS, 2018, IEEE INT CONF AUTOM, P132, DOI 10.1145/3238147.3238187
   Zhang X, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P807, DOI 10.1145/3338906.3338931
   Zhang ZY, 2019, 2019 IEEE 19TH INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY AND SECURITY (QRS 2019), P394, DOI 10.1109/QRS.2019.00056
   Zhou Husheng, 2020, P INT C SOFTW ENG IC
NR 109
TC 36
Z9 36
U1 2
U2 25
PU ASSOC COMPUTING MACHINERY
PI NEW YORK
PA 1601 Broadway, 10th Floor, NEW YORK, NY USA
SN 1049-331X
EI 1557-7392
J9 ACM T SOFTW ENG METH
JI ACM Trans. Softw. Eng. Methodol.
PD OCT
PY 2020
VL 29
IS 4
AR 30
DI 10.1145/3394112
PG 35
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA OE2YX
UT WOS:000580403500009
DA 2024-07-18
ER

PT J
AU Tufano, M
   Watson, C
   Bavota, G
   Di Penta, M
   White, M
   Poshyvanyk, D
AF Tufano, Michele
   Watson, Cody
   Bavota, Gabriele
   Di Penta, Massimiliano
   White, Martin
   Poshyvanyk, Denys
TI An Empirical Study on Learning Bug-Fixing Patches in the Wild via Neural
   Machine Translation
SO ACM TRANSACTIONS ON SOFTWARE ENGINEERING AND METHODOLOGY
LA English
DT Article
DE Neural machine translation; bug-fixes
ID SOFTWARE; REPAIR; COMMIT
AB Millions of open source projects with numerous bug fixes are available in code repositories. This proliferation of software development histories can be leveraged to learn how to fix common programming bugs. To explore such a potential, we perform an empirical study to assess the feasibility of using Neural Machine Translation techniques for learning bug-fixing patches for real defects. First, we mine millions of bug-fixes from the change histories of projects hosted on GitHub in order to extract meaningful examples of such bug-fixes. Next, we abstract the buggy and corresponding fixed code, and use them to train an Encoder-Decoder model able to translate buggy code into its fixed version. In our empirical investigation, we found that such a model is able to fix thousands of unique buggy methods in the wild. Overall, this model is capable of predicting fixed patches generated by developers in 9-50% of the cases, depending on the number of candidate patches we allow it to generate. Also, the model is able to emulate a variety of different Abstract Syntax Tree operations and generate candidate patches in a split second.
C1 [Tufano, Michele; Watson, Cody; White, Martin; Poshyvanyk, Denys] Coll William & Mary, Williamsburg, VA 23185 USA.
   [Bavota, Gabriele] USI, Lugano, Switzerland.
   [Di Penta, Massimiliano] Univ Sannio, Benevento, Italy.
C3 William & Mary; University of Sannio
RP Tufano, M (corresponding author), Coll William & Mary, Williamsburg, VA 23185 USA.
EM mtufano@cs.wm.edu; cawatson@cs.wm.edu; gabriele.bavota@usi.ch;
   dipenta@unisannio.it; mgwhite@cs.wm.edu; denys@cs.wm.edu
RI Di Penta, Massimiliano/AAF-9656-2021
OI BAVOTA, Gabriele/0000-0002-2216-3148; Poshyvanyk,
   Denys/0000-0002-5626-7586
FU NSF [CCF-1525902, CCF-1815186]; Swiss National Science Foundation
   [175513]
FX This work is supported in part by the NSF CCF-1525902 and CCF-1815186
   grants. Gabriele Bavota gratefully acknowledges the financial support of
   the Swiss National Science Foundation for the CCQR project (SNF Project
   No. 175513). Any opinions, findings, and conclusions expressed herein
   are the authors and do not necessarily reflect those of the sponsors.
CR Alali A, 2008, INT C PROGRAM COMPRE, P182, DOI 10.1109/ICPC.2008.24
   Allamanis, 2018, The adverse effects of code duplication in machine learning models of code
   Allamanis M, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P38, DOI 10.1145/2786805.2786849
   Lam AN, 2017, INT C PROGRAM COMPRE, P218, DOI 10.1109/ICPC.2017.24
   Nguyen AT, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE COMPANION 2014), P544, DOI 10.1145/2591062.2591072
   [Anonymous], 2013, EMNLP
   [Anonymous], 2003, Modernizing Legacy Systems: Software Technologies, Engineering Processes,and Business Practices
   [Anonymous], 2016, ARXIV PREPRINT ARXIV
   [Anonymous], 2010, Statistical Machine Translation
   [Anonymous], 2010, P 32 ACMIEEE INT C S, DOI DOI 10.1145/1806799.1806831
   Antoniol G, 2008, P 2008 C CTR ADV STU, P304
   Arcuri A, 2008, IEEE C EVOL COMPUTAT, P162, DOI 10.1109/CEC.2008.4630793
   Bahdanau D, 2016, Arxiv, DOI [arXiv:1409.0473, 10.48550/arXiv.1409.0473]
   Boulanger-Lewandowski N., 2013, ISMIR, P335, DOI 10.5281/zenodo.1418319
   Britz D., 2017, P 2017 C EMPIRICAL M, P1442, DOI [10.18653/v1/D17-1151, DOI 10.18653/V1/D17-1151]
   Brown DB, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P511, DOI 10.1145/3106237.3106280
   Carzaniga A, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P782, DOI 10.1109/ICSE.2013.6606624
   Chen Zimin, 2018, CODREP
   Chen Zimin, 2018, 180703200ARXIV
   Cho K., 2014, ARXIV14061078
   Falleri Jean-Remy, 2014, P 29 ACM IEEE INT C, P313
   Fischer M, 2003, PROC IEEE INT CONF S, P23, DOI 10.1109/ICSM.2003.1235403
   Gabel M, 2010, P ACM SIGSOFT S FDN, P147, DOI DOI 10.1145/1882291.1882315
   Graves Alex, 2012, ARXIV12113711
   Gu XD, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P933, DOI 10.1145/3180155.3180167
   Gu XD, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P631, DOI 10.1145/2950290.2950334
   Gu Xiaodong, 2017, ABS170407734 CORR
   Gupta Rahul, 2018, ABS180110467 CORR
   Hata H, 2012, PROC INT CONF SOFTW, P200, DOI 10.1109/ICSE.2012.6227193
   Herzig K, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P392, DOI 10.1109/ICSE.2013.6606585
   Hindle A, 2012, PROC INT CONF SOFTW, P837, DOI 10.1109/ICSE.2012.6227135
   Nguyen HA, 2013, IEEE INT CONF AUTOM, P180, DOI 10.1109/ASE.2013.6693078
   Nguyen HDT, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P772, DOI 10.1109/ICSE.2013.6606623
   Hochreiter S, 1997, NEURAL COMPUT, V9, P1735, DOI [10.1162/neco.1997.9.1.1, 10.1007/978-3-642-24797-2]
   Jin GL, 2011, PLDI 11: PROCEEDINGS OF THE 2011 ACM CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P389
   Jorgensen M, 2007, IEEE T SOFTWARE ENG, V33, P33, DOI 10.1109/TSE.2007.256943
   Just R, 2014, P 2014 INT S SOFTW T, P437, DOI DOI 10.1145/2610384.2628055
   Ke Y., ASE'15
   Kim D, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P802, DOI 10.1109/ICSE.2013.6606626
   Kolassa C, 2013, LECT NOTES COMPUT SC, V7741, P52
   Le Goues C., GECCO'12
   Le Goues C, 2012, IEEE T SOFTWARE ENG, V38, P54, DOI 10.1109/TSE.2011.104
   Le Goues C, 2015, IEEE T SOFTWARE ENG, V41, P1236, DOI 10.1109/TSE.2015.2454513
   Le Goues C, 2012, PROC INT CONF SOFTW, P3, DOI 10.1109/ICSE.2012.6227211
   Le X., FSE'17
   Le XBD, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P213, DOI 10.1109/SANER.2016.76
   Li D, 2016, ABS160603266 CORR
   Long F, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P727, DOI 10.1145/3106237.3106253
   Long F, 2016, ACM SIGPLAN NOTICES, V51, P298, DOI 10.1145/2914770.2837617
   Luong M.-T., 2015, P 2015 C EMPIRICAL M, DOI DOI 10.18653/V1/D15-1166
   Martinez M, 2017, EMPIR SOFTW ENG, V22, P1936, DOI 10.1007/s10664-016-9470-4
   Martinez M, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE COMPANION 2014), P492, DOI 10.1145/2591062.2591114
   Mechtaev S., ICSE'15
   Mechtaev S., ICSE 16
   Monperrus M., 2012, CVS-Vintage: A Dataset of 14 CVS Repositories of Java Software
   Monperrus M, 2018, ACM COMPUT SURV, V51, DOI 10.1145/3105906
   Moran K, 2020, IEEE T SOFTWARE ENG, V46, P196, DOI 10.1109/TSE.2018.2844788
   Nguyen A.T., 2014, P 29 ACM IEEE INT C, P457, DOI [10.1145/2642937.2643010, DOI 10.1145/2642937.2643010]
   Nguyen A.T., 2013, P 2013 9 JOINT M FDN, P651
   Parr T., 2013, The Definitive ANTLR 4 Reference
   Parr T, 2011, PLDI 11: PROCEEDINGS OF THE 2011 ACM CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P425
   Perkins JH, 2009, SOSP'09: PROCEEDINGS OF THE TWENTY-SECOND ACM SIGOPS SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES, P87
   Pierret D, 2009, INT C PROGRAM COMPRE, P228, DOI 10.1109/ICPC.2009.5090047
   Pu Y., 2016, SK P NEURAL PROGRAM
   Qi Z., ISSTA'15
   Raychev V, 2014, ACM SIGPLAN NOTICES, V49, P419, DOI [10.1145/2594291.2594321, 10.1145/2666356.2594321]
   Roy CK, 2008, INT C PROGRAM COMPRE, P172, DOI 10.1109/ICPC.2008.41
   Sajnani H, 2016, PROC INT CONF SOFTW, P1157, DOI 10.1145/2884781.2884877
   Scholtes I, 2016, EMPIR SOFTW ENG, V21, P642, DOI 10.1007/s10664-015-9406-4
   Sidiroglou-Douskos S, 2015, ACM SIGPLAN NOTICES, V50, P43, DOI [10.1145/2813885.2737988, 10.1145/2737924.2737988]
   Smith EK, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P532, DOI 10.1145/2786805.2786825
   Sobreira V, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P130, DOI 10.1109/SANER.2018.8330203
   Soto M, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P221, DOI 10.1109/SANER.2018.8330211
   Sutskever I., 2014, ADV NEURAL INFORM PR, V4, P3104, DOI DOI 10.5555/2969033.2969173
   Tian Y, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P752, DOI 10.1145/3106237.3106300
   Tufano M., 2019, P 41 ACM IEEE INT C, P12
   Tufano M, 2018, IEEE INT CONF AUTOM, P832, DOI 10.1145/3238147.3240732
   Tufano M, 2018, IEEE WORK CONF MIN S, P542, DOI 10.1145/3196398.3196431
   Tufano M, 2017, J SOFTW-EVOL PROC, V29, DOI 10.1002/smr.1797
   Wang S, 2016, PROC INT CONF SOFTW, P297, DOI 10.1145/2884781.2884804
   Weimer W, 2013, IEEE INT CONF AUTOM, P356, DOI 10.1109/ASE.2013.6693094
   Weimer W, 2009, PROC INT CONF SOFTW, P364, DOI 10.1109/ICSE.2009.5070536
   Weiss A, 2017, IEEE INT CONF AUTOM, P625, DOI 10.1109/ASE.2017.8115673
   Weiss C, 2007, P 4 INT WORKSH MIN S, P1, DOI [10.1109/MSR.2007.13, DOI 10.1109/MSR.2007.13]
   White M., MSR 15
   White M, 2016, IEEE INT CONF AUTOM, P87, DOI 10.1145/2970276.2970326
   White Marty, 2019, 2019 IEEE 26 INT C S
   Xuan JF, 2017, IEEE T SOFTWARE ENG, V43, P34, DOI 10.1109/TSE.2016.2560811
   Yang JQ, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P831, DOI 10.1145/3106237.3106274
   Zhong H, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P913, DOI 10.1109/ICSE.2015.101
   Zhou J, 2012, PROC INT CONF SOFTW, P14, DOI 10.1109/ICSE.2012.6227210
NR 91
TC 148
Z9 161
U1 0
U2 14
PU ASSOC COMPUTING MACHINERY
PI NEW YORK
PA 1601 Broadway, 10th Floor, NEW YORK, NY USA
SN 1049-331X
EI 1557-7392
J9 ACM T SOFTW ENG METH
JI ACM Trans. Softw. Eng. Methodol.
PD OCT
PY 2019
VL 28
IS 4
AR 19
DI 10.1145/3340544
PG 29
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA JM4SV
UT WOS:000496207000002
OA Bronze, Green Submitted
DA 2024-07-18
ER

PT J
AU Sharma, A
   Tian, Y
   Sulistya, A
   Wijedasa, D
   Lo, D
AF Sharma, Abhishek
   Tian, Yuan
   Sulistya, Agus
   Wijedasa, Dinusha
   Lo, David
TI Recommending Who to Follow in the Software Engineering Twitter Space
SO ACM TRANSACTIONS ON SOFTWARE ENGINEERING AND METHODOLOGY
LA English
DT Article
DE Twitter; software engineering; recommendation systems
ID CENTRALITY; AGREEMENT
AB With the advent of social media, developers are increasingly using it in their software development activities. Twitter is one of the popular social mediums used by developers. A recent study by Singer et al. found that software developers use Twitter to "keep up with the fast-paced development landscape." Unfortunately, due to the general-purpose nature of Twitter, it's challenging for developers to use Twitter for their development activities. Our survey with 36 developers who use Twitter in their development activities highlights that developers are interested in following specialized software gurus who share relevant technical tweets.
   To help developers perform this task, in this work we propose a recommendation system to identify specialized software gurus. Our approach first extracts different kinds of features that characterize a Twitter user and then employs a two-stage classification approach to generate a discriminative model, which can differentiate specialized software gurus in a particular domain from other Twitter users that generate domain-related tweets (aka domain-related Twitter users). We have investigated the effectiveness of our approach in finding specialized software gurus for four different domains (JavaScript, Android, Python, and Linux) on a dataset of 86,824 Twitter users who generate 5,517,878 tweets over 1 month. Our approach can differentiate specialized software experts from other domain-related Twitter users with an F-Measure of up to 0.820. Compared with existing Twitter domain expert recommendation approaches, our proposed approach can outperform their F-Measure by at least 7.63%.
C1 [Sharma, Abhishek; Tian, Yuan; Sulistya, Agus; Wijedasa, Dinusha; Lo, David] Singapore Management Univ, Sch Informat Syst, 81 Victoria St, Singapore 188065, VA, Singapore.
C3 Singapore Management University
RP Sharma, A (corresponding author), Singapore Management Univ, Sch Informat Syst, 81 Victoria St, Singapore 188065, VA, Singapore.
EM abhisheksh.2014@smu.edu.sg; ytian@smu.edu.sg; aguss.2014@smu.edu.sg;
   dwi-jedasa@smu.edu.sg; davidlo@smu.edu.sg
RI Sulistya, Agus/HTN-9187-2023; Lo, David/A-2493-2012
OI Lo, David/0000-0002-4367-7201
FU National Research Foundation, Prime Minister's Office, Singapore under
   its International Research Centres in Singapore Funding Initiative
FX This research is supported by the National Research Foundation, Prime
   Minister's Office, Singapore under its International Research Centres in
   Singapore Funding Initiative.
CR Achananuparp P, 2012, IEEE INT CONF AUTOM, P334, DOI 10.1145/2351676.2351740
   Aniche M, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P499, DOI 10.1145/3180155.3180180
   [Anonymous], 2011, P 4 ACM INT C WEB SE, DOI [DOI 10.1145/1935826.1935843, 10.1145/1935826.1935843]
   [Anonymous], 2007, 4 INT WORKSHOP MININ
   [Anonymous], 2017, P 21 INT C EVALUATIO, DOI [DOI 10.1145/3084226, 10.1145/3084226.3084287, DOI 10.1145/3084226.3084287]
   Anvik John, 2006, P 28 INT C SOFTWARE, P361, DOI DOI 10.1145/1134285.1134336
   Bougie Gargi, 2011, P 2 INT WORKSHOP WEB, P31, DOI [10.1145/1984701.1984707, DOI 10.1145/1984701.1984707]
   Brandes U, 2008, SOC NETWORKS, V30, P136, DOI 10.1016/j.socnet.2007.11.001
   Buitinck L, 2013, ECML PKDD WORKSH LAN, P108, DOI DOI 10.48550/ARXIV.1309.0238
   Campbell JL, 2013, SOCIOL METHOD RES, V42, P294, DOI 10.1177/0049124113500475
   Chandra S, 2013, PROCEEDINGS OF 2013 INTERNATIONAL CONFERENCE ON CIRCUITS, POWER AND COMPUTING TECHNOLOGIES (ICCPCT 2013), P494
   Choetkiertikul M, 2015, 2015 24TH AUSTRALASIAN SOFTWARE ENGINEERING CONFERENCE (ASWEC 2015), P155, DOI 10.1109/ASWEC.2015.28
   COHEN J, 1960, EDUC PSYCHOL MEAS, V20, P37, DOI 10.1177/001316446002000104
   Corbin J, 2008, Techniques and procedures for developing grounded theory, V3rd
   diaeresis>tze Hinrich Schu<spacing, 2008, INTRO INFORM RETRIEV, V39
   FREEMAN LC, 1979, SOC NETWORKS, V1, P215, DOI 10.1016/0378-8733(78)90021-7
   Gousios G, 2013, IEEE WORK CONF MIN S, P233, DOI 10.1109/MSR.2013.6624034
   Guzman E, 2016, INT REQUIR ENG CONF, P96, DOI 10.1109/RE.2016.67
   Huang CR, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON WEB SERVICES (ICWS 2017), P317, DOI 10.1109/ICWS.2017.122
   Hudson W., 2013, ENCY HUMAN COMPUTER, V2nd
   Järvelin K, 2002, ACM T INFORM SYST, V20, P422, DOI 10.1145/582415.582418
   Kim M, 2016, PROC INT CONF SOFTW, P96, DOI 10.1145/2884781.2884783
   Kim M, 2017, GUT MICROBES, V8, P392, DOI 10.1080/19490976.2017.1299311
   Kwak Haewoon, 2010, WWW 10 P 19 INT C WO, P591, DOI DOI 10.1145/1772690.1772751
   Lazar A., 2014, P 11 WORKING C MININ, P308
   Lin B, 2016, PROCEEDINGS OF THE 19TH ACM CONFERENCE ON COMPUTER SUPPORTED COOPERATIVE WORK AND SOCIAL COMPUTING COMPANION, P333, DOI 10.1145/2818052.2869117
   Liu TY, 2011, LEARNING TO RANK FOR INFORMATION RETRIEVAL, P1, DOI 10.1007/978-3-642-14267-3
   Lo D, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P415, DOI 10.1145/2786805.2786809
   Ma D, 2009, PROC IEEE INT CONF S, P535, DOI 10.1109/ICSM.2009.5306386
   MacLeod L, 2015, INT C PROGRAM COMPRE, P104, DOI 10.1109/ICPC.2015.19
   MANN HB, 1947, ANN MATH STAT, V18, P50, DOI 10.1214/aoms/1177730491
   McHugh ML, 2012, BIOCHEM MEDICA, V22, P276, DOI 10.11613/bm.2012.031
   Page L., 1999, PAGERANK CITATION RA, DOI DOI 10.1109/IISWC.2012.6402911
   Pedregosa F, 2011, J MACH LEARN RES, V12, P2825
   Ponzanelli L, 2016, PROC INT CONF SOFTW, P261, DOI 10.1145/2884781.2884824
   Porter MF, 2006, PROGRAM-ELECTRON LIB, V40, P211, DOI [10.1108/00330330610681286, 10.1108/eb046814]
   Prasetyo PK, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P596, DOI 10.1109/ICSM.2012.6405330
   Rao A, 2015, PROCEEDINGS 2015 IEEE INTERNATIONAL CONFERENCE ON BIG DATA, P2282, DOI 10.1109/BigData.2015.7364017
   Saldana J., 2015, The coding manual for qualitative researchers
   Santos G, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P160, DOI 10.1109/SANER.2017.7884618
   Sharma A, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P387, DOI 10.1109/SANER.2017.7884639
   Sharma A, 2015, PROC IEEE INT CONF S, P541, DOI 10.1109/ICSM.2015.7332510
   Sharma A, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P449, DOI 10.1109/SANER.2015.7081855
   Singer L, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P211, DOI 10.1145/2568225.2568305
   Smith EK, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P369, DOI 10.1109/ICSE.2015.56
   Spasojevic N, 2014, PROCEEDINGS OF THE 20TH ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING (KDD'14), P1809, DOI 10.1145/2623330.2623350
   Storey MA, 2017, IEEE T SOFTWARE ENG, V43, P185, DOI 10.1109/TSE.2016.2584053
   Storey Margaret-Anne, 2014, FUT SOFTW ENG P, P100, DOI 10.1145/2593882.2593887
   Strauss A. L., 1997, Grounded Theory in Practice
   Tian Y, 2014, 2014 SOFTWARE EVOLUTION WEEK - IEEE CONFERENCE ON SOFTWARE MAINTENANCE, REENGINEERING, AND REVERSE ENGINEERING (CSMR-WCRE), P44, DOI 10.1109/CSMR-WCRE.2014.6747213
   Tian Yuan, 2014, MUD
   Uddin G, 2017, IEEE INT CONF AUTOM, P159, DOI 10.1109/ASE.2017.8115629
   Valdivia-Garcia Harold., 2014, P 11 WORKING C MININ, P72
   Vasilescu B, 2016, PROC INT CONF SOFTW, P994, DOI 10.1145/2884781.2884875
   Vasilescu B, 2013, 2013 ASE/IEEE INTERNATIONAL CONFERENCE ON SOCIAL COMPUTING (SOCIALCOM), P188, DOI 10.1109/SocialCom.2013.35
   Viera AJ, 2005, FAM MED, V37, P360
   Wang XF, 2014, IEEE SOFTWARE, V31, P72, DOI 10.1109/MS.2013.98
   White S., 2003, P 9 ACM SIGKDD INT C, P266, DOI DOI 10.1145/956750.956782
   Xia X, 2017, IEEE T SOFTWARE ENG, V43, P272, DOI 10.1109/TSE.2016.2576454
   Xia X, 2015, INFORM SOFTWARE TECH, V61, P93, DOI 10.1016/j.infsof.2014.12.006
   Xia X, 2015, J SOFTW-EVOL PROC, V27, P195, DOI 10.1002/smr.1706
   Yuan Tian, 2012, 2012 9th IEEE Working Conference on Mining Software Repositories (MSR 2012), P247, DOI 10.1109/MSR.2012.6224287
   Zhao YY, 2017, IEEE INT CONF AUTOM, P60, DOI 10.1109/ASE.2017.8115619
   Zhou PY, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P272, DOI 10.1109/SANER.2017.7884628
   Zhou Y, 2014, PROC IEEE INT CONF S, P311, DOI 10.1109/ICSME.2014.53
NR 65
TC 5
Z9 5
U1 0
U2 12
PU ASSOC COMPUTING MACHINERY
PI NEW YORK
PA 1601 Broadway, 10th Floor, NEW YORK, NY USA
SN 1049-331X
EI 1557-7392
J9 ACM T SOFTW ENG METH
JI ACM Trans. Softw. Eng. Methodol.
PD NOV
PY 2018
VL 27
IS 4
AR 16
DI 10.1145/3266426
PG 33
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA HJ4EO
UT WOS:000457127000002
OA Green Accepted
DA 2024-07-18
ER

PT J
AU De Lara, J
   Guerra, E
AF De Lara, Juan
   Guerra, Esther
TI <i>A Posteriori</i> Typing for Model-Driven Engineering: Concepts,
   Analysis, and Applications
SO ACM TRANSACTIONS ON SOFTWARE ENGINEERING AND METHODOLOGY
LA English
DT Article
DE Model-driven engineering; reusability; A-posteriori model typing;
   partial typing; dynamic typing; model transformations; bidirectionality;
   METADEPTH
ID OBJECT; TRANSFORMATIONS; ROLES
AB Model-Driven Engineering (MDE) is founded on the ability to create and process models conforming to a meta-model. In this context, classes in a meta-model are used in two ways: as templates to create objects and as (static) classifiers for them. These two aspects are inherently tied in most meta-modelling approaches, which results in unnecessarily rigid systems and hinders reusability of MDE artefacts.
   In this work, we discuss the benefits of decoupling object creation from typing in MDE. Thus, we rely on standard mechanisms for object creation, and propose a posteriori typing as a means to retype objects and enable multiple, partial, dynamic typings. This approach enhances flexibility; permits unanticipated reuse, as model management operations defined for a meta-model can be reused with other models once they get reclassified; and enables bidirectional model transformation by reclassification. In particular, we propose two mechanisms to realise model retyping and show their underlying theory and analysis methods. We show the feasibility of the approach by an implementation atop our meta-modelling tool METADEPTH and present several applications of retypings (transformations, reuse, and dynamicity).
C1 [De Lara, Juan; Guerra, Esther] Univ Autonoma Madrid, Dept Comp Sci, Campus Cantoblanco, E-28049 Madrid, Spain.
C3 Autonomous University of Madrid
RP De Lara, J (corresponding author), Univ Autonoma Madrid, Dept Comp Sci, Campus Cantoblanco, E-28049 Madrid, Spain.
EM Juan.deLara@uam.es; Esther.Guerra@uam.es
RI de Lara, Juan/B-5422-2014; Guerra, Esther/B-4977-2014
OI Guerra, Esther/0000-0002-2818-2278
FU Spanish MINECO [TIN2014-52129-R]; R&D programme of the Madrid Region
   [S2013/ICE-3006]
FX This work was supported by the Spanish MINECO (Grant No.
   TIN2014-52129-R), and the R&D programme of the Madrid Region (Grant No.
   S2013/ICE-3006).
CR [Anonymous], J OBJ TECHNOL
   [Anonymous], OOPSLA WORKSHOP REVI
   [Anonymous], THESIS
   [Anonymous], 1990, FEATURE ORIENTED DOM
   [Anonymous], VAO
   [Anonymous], SWESE
   [Anonymous], WORKSH P AN MOD TRAN
   [Anonymous], 2016, PROC 5 INT WORKSHOP
   Atkinson C, 2003, IEEE SOFTWARE, V20, P36, DOI 10.1109/MS.2003.1231149
   Atkinson C, 2010, COMM COM INF SC, V69, P206
   BANCILHON F, 1981, ACM T DATABASE SYST, V6, P557, DOI 10.1145/319628.319634
   Brambilla Marco, 2012, MODELDRIVEN SOFTWARE
   Burger E, 2016, SOFTW SYST MODEL, V15, P473, DOI 10.1007/s10270-014-0413-5
   Cabot J, 2009, J SYST SOFTWARE, V82, P1459, DOI 10.1016/j.jss.2009.03.009
   CANNING PS, 1989, SIGPLAN NOTICES, V24, P457, DOI 10.1145/74878.74924
   Clarisó R, 2016, J SYST SOFTWARE, V116, P113, DOI 10.1016/j.jss.2015.08.017
   Clarisó R, 2015, LECT NOTES COMPUT SC, V9276, P108, DOI 10.1007/978-3-319-22969-0_8
   Conrad M, 2008, CISIS 2008: THE SECOND INTERNATIONAL CONFERENCE ON COMPLEX, INTELLIGENT AND SOFTWARE INTENSIVE SYSTEMS, PROCEEDINGS, P549, DOI 10.1109/CISIS.2008.69
   DATE C.J., 2003, An Introduction to Database Systems, Veight
   DAYAL U, 1982, ACM T DATABASE SYST, V7, P381, DOI 10.1145/319732.319740
   de Lara J, 2015, 2015 ACM/IEEE 18TH INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS), P156, DOI 10.1109/MODELS.2015.7338246
   De Lara J, 2014, ACM T SOFTW ENG METH, V24, DOI 10.1145/2685615
   de Lara J, 2014, J LOG ALGEBR METHODS, V83, P427, DOI 10.1016/j.jlamp.2014.08.005
   de Lara J, 2013, SOFTW SYST MODEL, V12, P453, DOI 10.1007/s10270-011-0221-0
   de Lara J, 2010, LECT NOTES COMPUT SC, V6141, P1, DOI 10.1007/978-3-642-13953-6_1
   Diskin Z, 2016, J SYST SOFTWARE, V111, P298, DOI 10.1016/j.jss.2015.06.003
   Diskin Z, 2012, LECT NOTES COMPUT SC, V7212, P163, DOI 10.1007/978-3-642-28872-2_12
   Drossopoulou S, 2002, ACM T PROGR LANG SYS, V24, P153, DOI 10.1145/514952.514955
   Ehrig H., 2006, MONO THEOR COMP SCI, DOI 10.1007/3-540-31188-2
   Fischer S, 2015, SCI CHINA INFORM SCI, V58, DOI 10.1007/s11432-015-5316-8
   Foster JN, 2007, ACM T PROGR LANG SYS, V29, DOI [10.1145/1232420.1232424, 10.1145/1047659.1040325]
   Fuentes-Fernandez L., 2004, UPGRADE European Journal for the Informatics Professional, VV, P6
   Gottlob G, 1996, ACM T INFORM SYST, V14, P268, DOI 10.1145/230538.230540
   Gregor D, 2006, ACM SIGPLAN NOTICES, V41, P291, DOI 10.1145/1167515.1167499
   Guerra E, 2017, DATA KNOWL ENG, V107, P1, DOI 10.1016/j.datak.2016.11.001
   Guerra E, 2009, INFORM SOFTWARE TECH, V51, P769, DOI 10.1016/j.infsof.2008.09.005
   Guy Clement, 2012, Modelling Foundations and Applications. Proceedings 8th European Conference, ECMFA 2012, P400, DOI 10.1007/978-3-642-31491-9_30
   Hermann F, 2009, LECT NOTES COMPUT SC, V5503, P325
   Herrmann S, 2007, APPL ONTOL, V2, P181
   Hidaka S, 2016, SOFTW SYST MODEL, V15, P907, DOI 10.1007/s10270-014-0450-0
   Jackson D, 2002, ACM T SOFTW ENG METH, V11, P256, DOI 10.1145/505145.505149
   Jackson Daniel, 2006, Software abstractions: Logic, language, and analysis
   Jakob J, 2006, LECT NOTES COMPUT SC, V4178, P321
   Kelly S., 2008, Domain-Specific Modeling
   Kilov H, 2013, COMPUT STAND INTER, V35, P247, DOI 10.1016/j.csi.2012.05.003
   Kolovos DS, 2008, LECT NOTES COMPUT SC, V5063, P46, DOI 10.1007/978-3-540-69927-9_4
   Kolovos DS, 2006, LECT NOTES COMPUT SC, V4066, P128
   Kühne T, 2013, SOFTW SYST MODEL, V12, P475, DOI 10.1007/s10270-012-0241-4
   Kuhlmann Mirco, 2012, Model Driven Engineering Languages and Systems. Proceedings 15th International Conference, MODELS 2012, P415, DOI 10.1007/978-3-642-33666-9_27
   MURATA T, 1989, P IEEE, V77, P541, DOI 10.1109/5.24143
   Noble J., 1999, PROTOTYPE BASED PROG
   Olivé A, 2007, CONCEPTUAL MODELLING IN INFORMATION SYSTEMS ENGINEERING, P319, DOI 10.1007/978-3-540-72677-7_20
   Paige RF, 2009, 2009 14TH IEEE INTERNATIONAL CONFERENCE ON ENGINEERING OF COMPLEX COMPUTER SYSTEMS (ICECCS), P162, DOI 10.1109/ICECCS.2009.14
   Pierce Benjamin C., 2002, TYPES PROGRAMMING LA, V1st
   Salay R, 2016, LECT NOTES COMPUT SC, V9765, P107, DOI 10.1007/978-3-319-42064-6_8
   Cuadrado JS, 2014, IEEE T SOFTWARE ENG, V40, P1042, DOI 10.1109/TSE.2014.2339852
   Schurr Andy., 1995, P 20 WORKSHOP GRAPH, V903, P151
   Steel J, 2007, SOFTW SYST MODEL, V6, P401, DOI 10.1007/s10270-006-0036-6
   Steimann F, 2000, DATA KNOWL ENG, V35, P83, DOI 10.1016/S0169-023X(00)00023-9
   Steinberg D., 2008, EMF: Eclipse Modeling Framework, Vsecond
   Stevens P, 2010, SOFTW SYST MODEL, V9, P7, DOI 10.1007/s10270-008-0109-9
   Tamai T, 2005, PROC INT CONF SOFTW, P166
   UNGAR D, 1987, SIGPLAN NOTICES, V22, P227, DOI 10.1145/38807.38828
   Wende C, 2010, LECT NOTES COMPUT SC, V5969, P254
NR 64
TC 22
Z9 22
U1 0
U2 2
PU ASSOC COMPUTING MACHINERY
PI NEW YORK
PA 1601 Broadway, 10th Floor, NEW YORK, NY USA
SN 1049-331X
EI 1557-7392
J9 ACM T SOFTW ENG METH
JI ACM Trans. Softw. Eng. Methodol.
PD MAY
PY 2017
VL 25
IS 4
AR 31
DI 10.1145/3063384
PG 60
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA EZ1JS
UT WOS:000404467800004
DA 2024-07-18
ER

PT J
AU Jin, W
   Orso, A
AF Jin, Wei
   Orso, Alessandro
TI Automated Support for Reproducing and Debugging Field Failures
SO ACM TRANSACTIONS ON SOFTWARE ENGINEERING AND METHODOLOGY
LA English
DT Article
DE Algorithms; Experimentation; Verification; Debugging; fault
   localization; field failures
ID SOFTWARE
AB As confirmed by a recent survey conducted among developers of the Apache, Eclipse, and Mozilla projects, two extremely challenging tasks during maintenance are reproducing and debugging field failures-failures that occur on user machines after release. To help developers with these tasks, in this article we present an overall approach that comprises two different techniques: BUGREDUX and F3. BUGREDUX is a general technique for reproducing field failures that collects dynamic data about failing executions in the field and uses this data to synthesize executions that mimic the observed field failures. F3 leverages the executions generated by BUGREDUX to perform automated debugging using a set of suitably optimized fault-localization techniques. To assess the usefulness of our approach, we performed an empirical evaluation of the approach on a set of real-world programs and field failures. The results of our evaluation are promising in that, for all the failures considered, our approach was able to (1) synthesize failing executions that mimicked the observed field failures, (2) synthesize passing executions similar to the failing ones, and (3) use the synthesized executions to successfully perform fault localization with accurate results.
C1 [Jin, Wei; Orso, Alessandro] Georgia Inst Technol, Coll Comp, Atlanta, GA 30332 USA.
C3 University System of Georgia; Georgia Institute of Technology
RP Jin, W (corresponding author), Georgia Inst Technol, Coll Comp, Atlanta, GA 30332 USA.
EM orso@cc.gatech.edu
FU NSF [CCF-0916605, CCF-1161821, CCF-1320783]; Google; IBM Research;
   Microsoft Research; Direct For Computer & Info Scie & Enginr; Division
   of Computing and Communication Foundations [1320783] Funding Source:
   National Science Foundation
FX This work was partially supported by NSF awards CCF-0916605,
   CCF-1161821, and CCF-1320783 to Georgia Tech, and by funding from
   Google, IBM Research, and Microsoft Research.
CR Abreu R., 2008, P 2008 INT WORKSHOP, P64
   Abreu R, 2006, 12TH PACIFIC RIM INTERNATIONAL SYMPOSIUM ON DEPENDABLE COMPUTING, PROCEEDINGS, P39
   [Anonymous], 2011, Proceedings of the 19th ACM SIGSOFT Symposium and the 13th European Conference on Foundations of Software Engineering (FSE'11), DOI DOI 10.1145/2025113.2025136
   [Anonymous], 2004, Ph.D. dissertation
   [Anonymous], 2008, NDSS
   [Anonymous], 1997, A Discipline of Programming
   [Anonymous], 2006, COMPILERS PRINCIPLES
   [Anonymous], 2008, ISSTA
   Artzi S., 2010, ISSTA, P49, DOI DOI 10.1145/1831708.1831715
   Artzi S, 2008, LECT NOTES COMPUT SC, V5142, P542, DOI 10.1007/978-3-540-70592-5_23
   Artzi S, 2012, IEEE T SOFTWARE ENG, V38, P314, DOI 10.1109/TSE.2011.76
   Ashok B, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P373
   Avgerinos Thanassis, 2011, P 18 NETW DISTR SYST
   Bailey J, 2005, LECT NOTES COMPUT SC, V3350, P174
   Cadar C., 2008, Proceedings of the 8th USENIX conference on Operating systems design and implementation, OSDI'08, (USA), P209
   Chandra S, 2009, ACM SIGPLAN NOTICES, V44, P363, DOI 10.1145/1543135.1542517
   Chilimbi TM, 2009, PROC INT CONF SOFTW, P34, DOI 10.1109/ICSE.2009.5070506
   Christ Juergen, 2013, P 14 INT C VER MOD C
   Clause J, 2007, PROC INT CONF SOFTW, P261
   Clause J, 2009, ISSTA 2009: INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P249
   Cleve H, 2005, PROC INT CONF SOFTW, P342
   Crameri O, 2011, EUROSYS 11: PROCEEDINGS OF THE EUROSYS 2011 CONFERENCE, P199
   Elbaum S, 2005, IEEE T SOFTWARE ENG, V31, P312, DOI 10.1109/TSE.2005.50
   Ermis Evren, 2012, FM 2012: Formal Methods. Proceedings of the 18th International Symposium, P187, DOI 10.1007/978-3-642-32759-9_17
   Flanagan C, 2002, ACM SIGPLAN NOTICES, V37, P234, DOI 10.1145/543552.512558
   GNU, 2005, FIND GNU FIND UT
   Godefroid P, 2005, ACM SIGPLAN NOTICES, V40, P213, DOI 10.1145/1064978.1065036
   Gomez L, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P72, DOI 10.1109/ICSE.2013.6606553
   Google, 2012, BREAKP
   Groce A, 2004, LECT NOTES COMPUT SC, V2988, P108
   Hilbert DM, 2000, ACM COMPUT SURV, V32, P384, DOI 10.1145/371578.371593
   Holland I.H., 1975, ADAPTATION NATURAL A
   Jiang Lingxiao., 2007, International Conference on Automated Software Engineering, P184
   Jin W, 2012, PROC INT CONF SOFTW, P474, DOI 10.1109/ICSE.2012.6227168
   Jin Wei., 2013, P 2013 INT S SOFTWAR, P213, DOI DOI 10.1145/2483760.2483763
   Jones JA, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P467, DOI 10.1109/ICSE.2002.1007991
   Jose M, 2011, ACM SIGPLAN NOTICES, V46, P437, DOI 10.1145/1993316.1993550
   Kifetew FM, 2013, IEEE INT CONF AUTOM, P604, DOI 10.1109/ASE.2013.6693120
   Kifetew Fitsum Meshesha, 2014, P 7 IEEE INT C SOFTW, P213
   KING JC, 1976, COMMUN ACM, V19, P385, DOI 10.1145/360248.360252
   Liblit B, 2005, ACM SIGPLAN NOTICES, V40, P15, DOI 10.1145/1064978.1065014
   Liblit B, 2003, ACM SIGPLAN NOTICES, V38, P141, DOI 10.1145/780822.781148
   Liu C., 2005, P EUR SOFTW ENG C HE, V30, P286
   Lu Shan, 2005, WORKSHOP EVALUATION, P1, DOI 10.1.1.134.8941
   Mac Developer Library, 2012, TN2123 MAC DEV LIB
   Naish L, 2011, ACM T SOFTW ENG METH, V20, DOI 10.1145/2000791.2000795
   Nanda MG, 2009, PROC INT CONF SOFTW, P133, DOI 10.1109/ICSE.2009.5070515
   OCHIAI AKIRA, 1957, BULL JAPANESE SOC SCI FISH, V22, P526
   Pacheco C., 2007, OOPSLA 2007 COMPANIO, P815
   Pacheco Carlos., 2008, International Symposium on Software Testing and Analysis (ISSTA), P87
   Park S, 2009, SOSP'09: PROCEEDINGS OF THE TWENTY-SECOND ACM SIGOPS SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES, P177
   Parnin C., 2011, P 2011 INT S SOFTWAR, P199, DOI [10.1145/2001420.2001445, DOI 10.1145/2001420.2001445]
   Pavlopoulou C., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P277, DOI 10.1109/ICSE.1999.841018
   RODGERS JL, 1988, AM STAT, V42, P59, DOI 10.2307/2685263
   Rössler J, 2013, 2013 IEEE SIXTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST 2013), P114, DOI 10.1109/ICST.2013.18
   Roessler Jeremias, 2012, P INT S SOFTW TEST A
   Santelices R, 2009, PROC INT CONF SOFTW, P56, DOI 10.1109/ICSE.2009.5070508
   Sen K., 2005, P 10 EUR SOFTW ENG C, V30, P263, DOI DOI 10.1145/1081706.1081750
   SIR project, 2012, SOFTW ART INFR REP
   Sumner W.N., 2011, Proceedings of ACM International Symposium on Software Testing and Analysis, P309
   Visser W., 2004, Software Engineering Notes, V29, P97, DOI 10.1145/1013886.1007526
   VMware, 2012, AM VM REC REPL FEAT
   Weeratunge D, 2010, ACM SIGPLAN NOTICES, V45, P155, DOI 10.1145/1735971.1736039
   Windows, 2012, WINDOWS ERROR REPORT
   Wong WE, 2010, J SYST SOFTWARE, V83, P188, DOI 10.1016/j.jss.2009.09.037
   Xiangyu Zhang, 2006, 28th International Conference on Software Engineering Proceedings, P272, DOI 10.1145/1134285.1134324
   Xie XY, 2013, ACM T SOFTW ENG METH, V22, DOI 10.1145/2522920.2522924
   Yoo S, 2012, SOFTW TEST VERIF REL, V22, P171, DOI 10.1002/stvr.435
   Yoo S, 2013, ACM T SOFTW ENG METH, V22, DOI 10.1145/2491509.2491513
   Yuan D, 2011, ACM SIGPLAN NOTICES, V46, P3, DOI 10.1145/1961296.1950369
   Yuan D, 2010, ACM SIGPLAN NOTICES, V45, P143, DOI 10.1145/1735971.1736038
   Zamfir C, 2010, EUROSYS'10: PROCEEDINGS OF THE EUROSYS 2010 CONFERENCE, P321
   Zeller A., 2002, Software Engineering Notes, V27, P1, DOI 10.1145/605466.605468
   Zeller A, 2002, IEEE T SOFTWARE ENG, V28, P183, DOI 10.1109/32.988498
   Zeller A, 1999, LECT NOTES COMPUT SC, V1687, P253, DOI 10.1145/318774.318946
   Zhang ZY, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P43, DOI 10.1145/1595696.1595705
   Zimmermann T, 2010, IEEE T SOFTWARE ENG, V36, P618, DOI 10.1109/TSE.2010.63
NR 77
TC 3
Z9 3
U1 0
U2 2
PU ASSOC COMPUTING MACHINERY
PI NEW YORK
PA 2 PENN PLAZA, STE 701, NEW YORK, NY 10121-0701 USA
SN 1049-331X
EI 1557-7392
J9 ACM T SOFTW ENG METH
JI ACM Trans. Softw. Eng. Methodol.
PD AUG
PY 2015
VL 24
IS 4
SI SI
AR 26
DI 10.1145/2774218
PG 35
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CR1EM
UT WOS:000361066700006
OA Green Published
DA 2024-07-18
ER

PT J
AU Moscato, MM
   Pombo, CGL
   Frias, MF
AF Moscato, Mariano M.
   Lopez Pombo, Carlos G.
   Frias, Marcelo F.
TI Dynamite: A Tool for the Verification of Alloy Models Based on PVS
SO ACM TRANSACTIONS ON SOFTWARE ENGINEERING AND METHODOLOGY
LA English
DT Article
DE Design; Verification; Alloy; alloy calculus; PVS; unsat-cores
AB Automatic analysis of Alloy models is supported by the Alloy Analyzer, a tool that translates an Alloy model to a propositional formula that is then analyzed using off- the- shelf SAT solvers. The translation requires user- provided bounds on the sizes of data domains. The analysis is limited by the bounds and is therefore partial. Thus, the Alloy Analyzer may not be appropriate for the analysis of critical applications where more conclusive results are necessary.
   Dynamite is an extension of PVS that embeds a complete calculus for Alloy. It also includes extensions to PVS that allow one to improve the proof effort by, for instance, automatically analyzing new hypotheses with the aid of the Alloy Analyzer. Since PVS sequents may get cluttered with unnecessary formulas, we use the Alloy unsat-core extraction feature in order to refine proof sequents. An internalization of Alloy's syntax as an Alloy specification allows us to use the Alloy Analyzer for producing witnesses for proving existentially quantified formulas.
   Dynamite complements the partial automatic analysis offered by the Alloy Analyzer with semi-automatic verification through theorem proving. It also improves the theorem proving experience by using the Alloy Analyzer for early error detection, sequent refinement, and witness generation.
C1 [Moscato, Mariano M.; Lopez Pombo, Carlos G.] Univ Buenos Aires, Dept Comp Sci, FCEyN, RA-1053 Buenos Aires, DF, Argentina.
   [Lopez Pombo, Carlos G.; Frias, Marcelo F.] Consejo Nacl Invest Cient & Tecn, RA-1033 Buenos Aires, DF, Argentina.
   [Frias, Marcelo F.] Inst Tecnol Buenos Aires, Dept Software Engn, Buenos Aires, DF, Argentina.
C3 University of Buenos Aires; Consejo Nacional de Investigaciones
   Cientificas y Tecnicas (CONICET)
RP Frias, MF (corresponding author), Inst Tecnol Buenos Aires, Dept Software Engn, Buenos Aires, DF, Argentina.
EM mmoscato@dc.uba.ar; clpombo@dc.uba.ar; mfrias@itba.edu.ar
RI Pombo, Carlos Gustavo Lopez/AAU-4466-2021
OI Pombo, Carlos Gustavo Lopez/0000-0002-0248-5019
FU NPRP from the Qatar National Research Fund [NPRP-4-1109-1-174]
FX This publication was made possible by NPRP grant NPRP-4-1109-1-174 from
   the Qatar National Research Fund (a member of Qatar Foundation). The
   statements made herein are solely the responsibility of the authors.
CR Andoni Alexandr, 2004, EVALUATING SMA UNPUB
   [Anonymous], 2002, Advances in Logic
   [Anonymous], 2003, The Spin Model Checker: Primer and Reference Manual
   Arkoudas Konstantine, 2004, LECT NOTES COMPUTER, V3051, P204
   Arkoudas Konstantine, 2001, 200127 MIT AI
   Beckert Bernhard, 2007, Verification of Object-oriented Software: The KeY Approach, DOI DOI 10.1007/978-3-540-69061-0
   Bertot Y., 2004, EATCS TEXTS THEORETI
   Blanchette JC, 2010, LECT NOTES COMPUT SC, V6172, P131, DOI 10.1007/978-3-642-14052-5_11
   Clarke EM, 1999, MODEL CHECKING, P1
   de Moura L, 2008, LECT NOTES COMPUT SC, V4963, P337, DOI 10.1007/978-3-540-78800-3_24
   El Ghazi Aboubakr Achraf, 2011, FM 2011: Formal Methods. Proceedings 17th International Symposium on Formal Methods, P133, DOI 10.1007/978-3-642-21437-0_12
   Frias MF, 2007, LECT NOTES COMPUT SC, V4424, P587
   Frias Marcelo F., 1997, LOG J IGPL, V5, P311
   Frias MF, 2004, LECT NOTES COMPUT SC, V3308, P162
   Gentzen Gerhard, 1935, STUDIES LOGIC FDN MA, V39, p[176, 405, 68]
   Gordon M. J., 1989, CURRENT TRENDS HARDW, P387, DOI [DOI 10.1007/978-1-4612-3658-0_10, DOI 10.1007/978-1-4612-3658-010]
   Jackson D, 2012, SOFTWARE ABSTRACTIONS: LOGIC, LANGUAGE, AND ANALYSIS, P1
   Jackson D., 2001, Software Engineering Notes, V26, P62, DOI 10.1145/503271.503219
   Kaufmann Todd, 2000, ILISP USER MANUAL
   MADDUX RD, 1991, T AM MATH SOC, V328, P83, DOI 10.2307/2001878
   Moscato MM, 2010, LECT NOTES COMPUT SC, V6255, P275, DOI 10.1007/978-3-642-14808-8_19
   Nipkow T., 2002, ISABELLE HOL PROOF A, DOI DOI 10.1007/3-540-45949-9
   OWRE S, 1992, LECT NOTES ARTIF INT, V607, P748
   Owre Sam, 2008, P 8 INT WORKSH US IN
   Owre Sam, 2001, PVS PROVER GUIDE VER
   Ramananandro T, 2008, FORM ASP COMPUT, V20, P21, DOI 10.1007/s00165-007-0058-z
   Torlak E, 2008, LECT NOTES COMPUT SC, V5014, P326, DOI 10.1007/978-3-540-68237-0_23
   Ulbrich M, 2012, LECT NOTES COMPUT SC, V7214, P422, DOI 10.1007/978-3-642-28756-5_29
   Zave P, 2006, LECT NOTES COMPUT SC, V4085, P332
NR 29
TC 3
Z9 3
U1 0
U2 2
PU ASSOC COMPUTING MACHINERY
PI NEW YORK
PA 2 PENN PLAZA, STE 701, NEW YORK, NY 10121-0701 USA
SN 1049-331X
EI 1557-7392
J9 ACM T SOFTW ENG METH
JI ACM Trans. Softw. Eng. Methodol.
PD MAR
PY 2014
VL 23
IS 2
AR 20
DI 10.1145/2544136
PG 37
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AF8XA
UT WOS:000334997700010
OA Green Published
DA 2024-07-18
ER

PT J
AU Tilevich, E
   Smaragdakis, Y
AF Tilevich, Eli
   Smaragdakis, Yannis
TI J-Orchestra: Enhancing Java Programs with Distribution Capabilities
SO ACM TRANSACTIONS ON SOFTWARE ENGINEERING AND METHODOLOGY
LA English
DT Article
DE Experimentation; Languages; Separation of concerns; distributed
   computing; Java; middleware; RMI; bytecode engineering
AB J-Orchestra is a system that enhances centralized Java programs with distribution capabilities. Operating at the bytecode level, J-Orchestra transforms a centralized Java program (i.e., running on a single Java Virtual Machine (JVM)) into a distributed one (i.e., running across multiple JVMs). This transformation effectively separates distribution concerns from the core functionality of a program. J-Orchestra follows a semiautomatic transformation process. Through a GUI, the user selects program elements (at class granularity) and assigns them to network locations. Based on the user's input, the J-Orchestra backend automatically partitions the program through compiler-level techniques, without changes to the JVM or to the Java Runtime Environment (JRE) classes. By means of bytecode engineering and code generation, J-Orchestra substitutes method calls with remote method calls, direct object references with proxy references, etc. It also translates Java language features (e.g., static methods and fields, inheritance, inner classes, new object construction, etc.) for efficient distributed execution.
   We detail the main technical issues that J-Orchestra addresses, including its mechanism for program transformation in the presence of unmodifiable code (e.g., in JRE classes) and the translation of concurrency and synchronization constructs to work correctly over the network. We further discuss a case study of transforming a large, commercial, third-party application for efficient execution in a client server environment and outline the architectural characteristics of centralized programs that are amenable to automated distribution with J-Orchestra.
C1 [Tilevich, Eli] Virginia Tech, Dept Comp Sci, Blacksburg, VA 24061 USA.
   [Smaragdakis, Yannis] Univ Massachusetts, Dept Comp Sci, Amherst, MA 01003 USA.
C3 Virginia Polytechnic Institute & State University; University of
   Massachusetts System; University of Massachusetts Amherst
RP Tilevich, E (corresponding author), Virginia Tech, Dept Comp Sci, Blacksburg, VA 24061 USA.
EM Tilevich@cs.vt.edu
RI Smaragdakis, Yannis/AAM-2851-2021
OI Tilevich, Eli/0000-0003-2415-6926
CR [Anonymous], 1997, CONCURRENT PROGRAMMI
   Aridor Y., 1999, Proceedings of the 1999 International Conference on Parallel Processing, P4, DOI 10.1109/ICPP.1999.797382
   ARIDOR Y, 2000, P ACM JAV GRAND C SA, P168
   ATKINSON MP, 1996, ACM SIGMOD RECORD, V25, P4, DOI DOI 10.1145/245882.245905
   Bal HE, 1998, ACM T COMPUT SYST, V16, P1, DOI 10.1145/273011.273014
   BAL HE, 1993, SIGPLAN NOTICES, V28, P162, DOI 10.1145/167962.165884
   Birman K.P., 1994, RELIABLE DISTRIBUTED
   BIRRELL AD, 1984, ACM T COMPUT SYST, V2, P39, DOI 10.1145/2080.357392
   Black A.P., 2007, P 3 ACM SIGPLAN C HI, p11
   CHATTERJEE A, 1992, ACM SIGPLAN OOPS MES, V4, P63
   CRAIG G, 1993, P 9 INT C SYST ENG
   DAHM M, 1999, P JIT
   Dahm M., 2000, P JIT
   Dijkstra E.W., 1982, EWD 447: On the role of scientific thought. Selected Writings on Computing: A Personal Perspective, P60, DOI DOI 10.1007/978-1-4612-5695-3
   FUAD MM, 2002, P 25 AUSTR C COMP SC, P65
   GARBINATO B, 1997, P 3 C USENIX C OBJ O, P17
   GOLDBERG A, 1983, ADDISONWESLEY SERIES
   GUCCIONE SA, 1999, P 2 ANN MIL AER APPL
   Guerraoui R, 1997, IEEE CONCURR, V5, P32, DOI 10.1109/4434.641625
   HAUMACHER B, 2003, P PAR DISTR PROC S I
   Holder O., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P163, DOI 10.1109/ICSE.1999.841006
   Hunt GC, 1999, USENIX ASSOCIATION PROCEEDINGS OF THE THIRD SYMPOSIUM ON OPERATING SYSTEMS DESIGN AND IMPLEMENTATION (OSDI '99), P187
   Jones R.E., 1996, Garbage Collection: Algorithms for Automatic Dynamic Memory Management
   Kienzle J, 2002, LECT NOTES COMPUT SC, V2374, P37
   Liogkas N, 2004, IEEE PERVAS COMPUT, V3, P40, DOI 10.1109/MPRV.2004.1321027
   LOPES CV, 1997, THESIS NE U
   Philippsen M, 1997, CONCURRENCY-PRACT EX, V9, P1225, DOI 10.1002/(SICI)1096-9128(199711)9:11<1225::AID-CPE332>3.0.CO;2-F
   Richardson T, 1998, IEEE INTERNET COMPUT, V2, P33, DOI 10.1109/4236.656066
   SCHEIFLER R, 1987, RFC 1013 X WINDOW SY
   SCHEIFLER RW, 1986, ACM T GRAPHIC, V5, P79, DOI 10.1145/22949.24053
   Shapiro M., 1986, P ICDCS 86, P198
   SPIEGEL A, 2002, THESIS FB MATH INFOR
   SPIEGEL A, 2000, P COP BUS SCH CBS
   TATSUBORI M, 2001, P EUR C OBJ OR PROGR
   Tilevich E, 2004, LECT NOTES COMPUT SC, V3231, P478
   Tilevich E, 2002, LECT NOTES COMPUT SC, V2374, P178
   TILEVICH E, 2002, P WORKSH MOB OBJ SYS
   TILEVICH E, 2005, THESIS COLL COMPUTIN
   TILEVICH E, 2005, P INT C SOFTW MAINT
   Tilevich E., 2006, P 5 INT C GENERATIVE, P89
   Waldo J., 1994, NOTE DISTRIBUTED COM
   WEYNS D, 2002, P INT S DISTR PAR CO
   Weyns D, 2005, SCALABLE COMPUT-PRAC, V6, P81
   Wohlstadter E, 2003, PROC INT CONF SOFTW, P174, DOI 10.1109/ICSE.2003.1201198
   WOHLSTADTER E, 2006, T ASPECT ORIENTED SO, V2, P69
   Wollrath A., 1996, Proceedings of the 2nd conference on USENIX Conference on Object-Oriented Technologies (COOTS), V2, P17
   Yu WM, 1997, CONCURRENCY-PRACT EX, V9, P1213, DOI 10.1002/(SICI)1096-9128(199711)9:11<1213::AID-CPE333>3.0.CO;2-J
   [No title captured]
NR 48
TC 23
Z9 30
U1 0
U2 5
PU ASSOC COMPUTING MACHINERY
PI NEW YORK
PA 2 PENN PLAZA, STE 701, NEW YORK, NY 10121-0701 USA
SN 1049-331X
EI 1557-7392
J9 ACM T SOFTW ENG METH
JI ACM Trans. Softw. Eng. Methodol.
PD AUG
PY 2009
VL 19
IS 1
AR 1
DI 10.1145/1555392.1555394
PG 40
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 487IU
UT WOS:000269266700001
DA 2024-07-18
ER

PT J
AU Robillard, MP
   Murphy, GC
AF Robillard, MP
   Murphy, GC
TI Static analysis to support the evolution of exception structure in
   object-oriented systems
SO ACM TRANSACTIONS ON SOFTWARE ENGINEERING AND METHODOLOGY
LA English
DT Article
DE languages; reliability; verification; error handling; exception
   handling; exception structure; exception flow; program evolution; static
   analysis
ID ISSUES
AB Exception-handling mechanisms in modern programming languages provide a means to help software developers build robust applications by separating the normal control flow of a program from the control flow of the program under exceptional situations. Separating the exceptional structure from the code associated with normal operations bears some consequences. One consequence is that developers wishing to improve the robustness of a program must figure out which exceptions, if any, can flow to a point in the program. Unfortunately, in large programs, this exceptional control flow can be difficult, if not impossible, to determine.
   In this article, we present a model that encapsulates the minimal concepts necessary for a developer to determine exception flow for object-oriented languages that define exceptions as objects. Using these concepts, we describe why exception-flow information is needed to build and evolve robust programs. We then describe Jex, a static analysis tool we have developed to provide exception-flow information for Java systems based on this model. The Jex tool provides a view of the actual exception types that might arise at different program points and of the handlers that are present. Use of this tool on a collection of Java library and application source code demonstrates that the approach can be helpful to support both local and global improvements to the exception-handling structure of a system.
C1 Univ British Columbia, Dept Comp Sci, Vancouver, BC V6T 1Z4, Canada.
C3 University of British Columbia
RP Univ British Columbia, Dept Comp Sci, 2366 Main Mall, Vancouver, BC V6T 1Z4, Canada.
EM mrobilla@cs.ubc.ca; murphy@cs.ubc.ca
CR Abadi M., 1996, MONOGRAPHS COMPUTER
   BACON DF, 1998, THESIS U CALIFORNIA
   BRENNAN PT, 1993, P C TRI AD 9O SEPT A, P189
   Buhr PA, 2000, IEEE T SOFTWARE ENG, V26, P820, DOI 10.1109/32.877844
   CALLAHAN D, 1986, SIGPLAN NOTICES, V21, P152, DOI 10.1145/13310.13327
   Chang B.-M., 2001, Proceedings of the 2001 ACM Symposium on Applied Computing, P620
   Chang BM, 2002, SCAM 2002: SECOND IEEE INTERNATIONAL WORKSHOP ON SOURCE CODE ANALYSIS MANIPULATION, PROCEEDINGS, P173, DOI 10.1109/SCAM.2002.1134117
   CHOI JD, 1999, P ACM SIGPLAN SIGSOF, P21
   Cousot P., 1977, C RECORD 4 ANN ACM S, P238, DOI DOI 10.1145/512950.512973
   Dean J, 1995, LECT NOTES COMPUT SC, V952, P77, DOI 10.1007/3-540-49538-x_5
   DONY C, 1990, P EUR C OBJ OR PROGR, P322
   FAHNDRICH M, 1998, CSD98996 U CAL
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   Gauthier M., 1995, Ada Letters, V15, P70
   GOODENOUGH JB, 1975, COMMUN ACM, V18, P683, DOI 10.1145/361227.361230
   Gosling James, 1996, The Java Language Specification
   GUZMAN JC, 1994, P ACM SIGPLAN WORKSH, P127
   HALBERT DC, 1987, IEEE SOFTWARE, V4, P71, DOI 10.1109/MS.1987.231776
   HEINTZE N., 1992, THESIS CARNEGIE MELL
   Lang J, 1998, ACM T PROGR LANG SYS, V20, P274, DOI 10.1145/276393.276395
   LISKOV BH, 1979, IEEE T SOFTWARE ENG, V5, P546, DOI 10.1109/TSE.1979.230191
   LISKOV BH, 1994, ACM T PROGR LANG SYS, V16, P1811, DOI 10.1145/197320.197383
   Litke J. D., 1990, Proceedings TRI-Ada '90, P403, DOI 10.1145/255471.255565
   Maddison W.P., 2001, Mesquite: a modular system for evolutionary analysis
   Miller R, 1997, LECT NOTES COMPUT SC, V1241, P85
   Milner R., 1990, The Definition of Standard ML
   OGASAWARA T, 2001, P ACM SIGPLAN C OBJ, P83
   PESSAUX F, 1999, P 26 ACM SIGPLAN SIG, P276
   PLEVYAK J, 1994, P 9 ANN C OBJ OR PRO, P324
   Robillard MP, 1999, LECT NOTES COMPUT SC, V1687, P322, DOI 10.1145/318774.319251
   ROBILLARD MP, 2000, P 8 ACM SIGSOFT INT, P2
   Romanovsky A., 2001, Ada Letters, V21, P19
   RYDER BG, 1999, DSCTR406 RUTG U
   Ryu SY, 2001, SECOND ASIA-PACIFIC CONFERENCE ON QUALITY SOFTWARE, PROCEEDINGS, P23, DOI 10.1109/APAQS.2001.989998
   SCHAEFER CF, 1993, SOFTWARE PRACT EXPER, V23, P1157, DOI 10.1002/spe.4380231007
   Scott M., 2000, PROGRAMMING LANGUAGE
   Shelekhov VI, 2000, LECT NOTES COMPUT SC, V1755, P389
   Sinha S., 1999, Proceedings IEEE International Conference on Software Maintenance - 1999 (ICSM'99). `Software Maintenance for Business Change' (Cat. No.99CB36360), P265, DOI 10.1109/ICSM.1999.792624
   Sinha S, 2000, IEEE T SOFTWARE ENG, V26, P849, DOI 10.1109/32.877846
   STROUSTRUP B, 1991, C PLUS PLUS PROGRAMM
   *US DEP DEF, 1983, MILSTD1815A1983 ANSI
   YEMINI S, 1985, ACM T PROGR LANG SYS, V7, P214, DOI 10.1145/3318.3320
   Yi K, 1998, SCI COMPUT PROGRAM, V31, P147, DOI 10.1016/S0167-6423(96)00044-5
   YI K, 1997, LECT NOTES COMPUTER, V1302, P98
   [No title captured]
NR 45
TC 81
Z9 100
U1 0
U2 7
PU ASSOC COMPUTING MACHINERY
PI NEW YORK
PA 2 PENN PLAZA, STE 701, NEW YORK, NY 10121-0701 USA
SN 1049-331X
EI 1557-7392
J9 ACM T SOFTW ENG METH
JI ACM Trans. Softw. Eng. Methodol.
PD APR
PY 2003
VL 12
IS 2
BP 191
EP 221
DI 10.1145/941566.941569
PG 31
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 728XR
UT WOS:000185742100003
DA 2024-07-18
ER

PT J
AU Sun, WF
   Yan, M
   Liu, ZX
   Xia, X
   Lei, Y
   Lo, D
AF Sun, Weifeng
   Yan, Meng
   Liu, Zhongxin
   Xia, Xin
   Lei, Yan
   Lo, David
TI Revisiting the Identification of the Co-evolution of Production and Test
   Code
SO ACM TRANSACTIONS ON SOFTWARE ENGINEERING AND METHODOLOGY
LA English
DT Article
DE Empirical software engineering; mining software repositories; software
   evolution; software testing
ID TRACEABILITY
AB Many software processes advocate that the test code should co-evolve with the production code. Prior work usually studies such co-evolution based on production-test co-evolution samples mined from software repositories. A production-test co-evolution sample refers to a pair of a test code change and a production code change where the test code change triggers or is triggered by the production code change. The quality of the mined samples is critical to the reliability of research conclusions. Existing studies mined production-test co-evolution samples based on the following assumption: if a test class and its associated production class change together in one commit, or a test class changes immediately after the changes of the associated production class within a short time interval, this change pair should be a production-test co-evolution sample. However, the validity of this assumption has never been investigated.
   To fill this gap, we present an empirical study, investigating the reasons for test code updates occurring after the associated production code changes, and revealing the pervasive existence of noise in the production-test co-evolution samples identified based on the aforementioned assumption by existing works. We define a taxonomy of such noise, including six categories (i.e., adaptive maintenance, perfective maintenance, corrective maintenance, indirectly related production code update, indirectly related test code update, and other reasons). Guided by the empirical findings, we propose CHOSEN (an identifiCation metHod Of production-teSt co-EvolutioN) based on a two-stage strategy. CHOSEN takes a test code change and its associated production code change as input, aiming to determine whether the production-test change pair is a production-test co-evolution sample. Such identified samples are the basis of or are useful for various downstream tasks. We conduct a series of experiments to evaluate our method. Results show that (1) CHOSEN achieves an AUC of 0.931 and an F1-score of 0.928, significantly outperforming existing identification methods, and (2) CHOSEN can help researchers and practitioners draw more accurate conclusions on studies related to the co-evolution of production and test code. For the task of Just-In-Time (JIT) obsolete test code detection, which can help detect whether a piece of test code should be updated when developers modify the production code, the test set constructed by CHOSEN can help measure the detection method's performance more accurately, only leading to 0.76% of average error compared with ground truth. In addition, the dataset constructed by CHOSEN can be used to train a better obsolete test code detection model, of which the average improvements on accuracy, precision, recall, and F1-score are 12.00%, 17.35%, 8.75%, and 13.50% respectively.
C1 [Sun, Weifeng; Yan, Meng; Lei, Yan] Chongqing Univ, Sch Big Data & Software Engn, Chongqing, Peoples R China.
   [Liu, Zhongxin; Xia, Xin] Zhejiang Univ, Lingyin St, Hangzhou 310013, Zhejiang, Peoples R China.
   [Lo, David] Singapore Management Univ, 80 Stamford Rd, Singapore 178902, Singapore.
C3 Chongqing University; Zhejiang University; Singapore Management
   University
RP Yan, M (corresponding author), Chongqing Univ, Sch Big Data & Software Engn, Chongqing, Peoples R China.
EM weifeng.sun@cqu.edu.cn; mengy@cqu.edu.cn; liu_zx@zju.edu.cn;
   xin.xia@acm.org; yanlei@cqu.edu.cn; davidlo@smu.edu.sg
RI ; Lo, David/A-2493-2012
OI Xia, Xin/0000-0002-6302-3256; Liu, Zhongxin/0000-0002-1981-1626; Sun,
   Weifeng/0000-0001-6013-1369; Lo, David/0000-0002-4367-7201; Yan,
   Meng/0000-0002-9538-9121
FU National Key Research and Development Project [2021YFB1714200];
   Fundamental Research Funds for the Central Universities [2022CDJDX-005];
   Chongqing Technology Innovation and Application Development Project
   [CSTB2022TIAD-STX0007, CSTB2022TIAD-KPX0067]; National Natural Science
   Foundation of China [62002034]; Natural Science Foundation of Chongqing
   [cstc2021jcyj-msxmX0538]
FX This work was supported in part by the National Key Research and
   Development Project (No. 2021YFB1714200), the Fundamental Research Funds
   for the Central Universities (No. 2022CDJDX-005), the Chongqing
   Technology Innovation and Application Development Project (No.
   CSTB2022TIAD-STX0007 and No. CSTB2022TIAD-KPX0067), the National Natural
   Science Foundation of China (No. 62002034), and the Natural Science
   Foundation of Chongqing (No. cstc2021jcyj-msxmX0538).
CR Alenezi M., 2019, International Journal of Innovative Technology and Exploring Engineering (IJITEE), V9, P2737
   [Anonymous], 2012, A Commit in Commons-functor Project
   [Anonymous], 2012, A Commit in Commons-csv Project
   [Anonymous], 2015, A Commit in Commons-math Project
   [Anonymous], 2020, A Commit in Commons-collections Project.
   [Anonymous], 2019, A Commit in Commons-numbers Project.
   [Anonymous], 2021, Jacoco
   [Anonymous], 2019, A Commit in Cactoos Project
   [Anonymous], 2020, A Commit in Streamex Project
   [Anonymous], 2021, The Dataset of SITAR
   [Anonymous], 2020, A Commit in Cactoos Project.
   [Anonymous], 2020, A Commit in Easy-rules Project
   [Anonymous], 2021, About Stars (GitHub)
   [Anonymous], 2011, A Commit in Commons-functor Project
   [Anonymous], 2018, A Commit in ta4j Project
   [Anonymous], 2015, A Commit in ta4j Project
   [Anonymous], 2019, A Commit in Commons-configuration Project
   [Anonymous], 2021, Checkstyle
   [Anonymous], 2021, SonarQube
   [Anonymous], 2013, A Commit in Joda-time Project
   [Anonymous], 2021, JUnit 5 User Guide
   [Anonymous], 2019, A Commit in Dubbo Project.
   [Anonymous], 2019, A Commit in Commons-lang Project
   [Anonymous], 2020, A Commit in Commons-geometry Project
   [Anonymous], 2021, Maven-introduction to the Standard Directory Layout
   [Anonymous], 2021, Pytest
   [Anonymous], 2018, A Commit in Commons-configuration Project
   [Anonymous], 2020, A Commit in Commons-lang Project
   [Anonymous], 2014, A Commit in Commons-compress Project
   Arcuri A, 2014, SOFTW TEST VERIF REL, V24, P219, DOI 10.1002/stvr.1486
   Arp D, 2022, PROCEEDINGS OF THE 31ST USENIX SECURITY SYMPOSIUM, P3971
   Bouillon P, 2007, LECT NOTES COMPUT SC, V4536, P101
   Chen JC, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-021-10018-0
   Cliff N., 2014, Ordinal Methods for Behavioral Data Analysis
   Csuvik V, 2019, 2019 IEEE/ACM 10TH INTERNATIONAL WORKSHOP ON SOFTWARE AND SYSTEMS TRACEABILITY (SST 2019), P29, DOI 10.1109/SST.2019.00016
   diaeresis>tze Hinrich Schu<spacing, 2008, INTRO INFORM RETRIEV, V39
   Ens B, 2014, 2014 SECOND IEEE WORKING CONFERENCE ON SOFTWARE VISUALIZATION (VISSOFT), P117, DOI 10.1109/VISSOFT.2014.28
   Falleri Jean-Remy, 2014, P 29 ACM IEEE INT C, P313
   Fan YR, 2021, PROC INT CONF SOFTW, P1174, DOI 10.1109/ICSE43902.2021.00108
   FLEISS JL, 1971, PSYCHOL BULL, V76, P378, DOI 10.1037/h0031619
   Fluri B, 2007, IEEE T SOFTWARE ENG, V33, P725, DOI 10.1109/TSE.2007.70731
   Ghafari M, 2015, IEEE INT WORK C SO, P61, DOI 10.1109/SCAM.2015.7335402
   Huang J, 2005, IEEE T KNOWL DATA EN, V17, P299, DOI 10.1109/TKDE.2005.50
   Huang Q, 2017, PROC IEEE INT CONF S, P159, DOI 10.1109/ICSME.2017.51
   Hurdugaci V, 2012, EUR CON SFTWR MTNCE, P11, DOI 10.1109/CSMR.2012.12
   Kalliamvakou E, 2016, EMPIR SOFTW ENG, V21, P2035, DOI 10.1007/s10664-015-9393-5
   Kicsi A, 2018, INT WORK REAL ARTIF, P8, DOI 10.1145/3194104.3194106
   Kim M, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P990, DOI 10.1145/2786805.2804429
   Kim M, 2016, PROC INT CONF SOFTW, P96, DOI 10.1145/2884781.2884783
   Lamkanfi Ahmed, 2010, P 9 BELG NETH SOFTW, V16
   Lenarduzzi V, 2020, J SYST SOFTWARE, V170, DOI 10.1016/j.jss.2020.110750
   Lenarduzzi V, 2019, 15TH INTERNATIONAL CONFERENCE ON PREDICTIVE MODELS AND DATA ANALYTICS IN SOFTWARE ENGINEERING (PROMISE'19), P2, DOI 10.1145/3345629.3345630
   Lenarduzzi V, 2019, PROCEEDINGS OF THE 3RD ACM SIGSOFT INTERNATIONAL WORKSHOP ON MACHINE LEARNING TECHNIQUES FOR SOFTWARE QUALITY EVALUATION (MALTESQUE '19), P37, DOI 10.1145/3340482.3342747
   Levin S, 2017, PROC IEEE INT CONF S, P35, DOI 10.1109/ICSME.2017.9
   Lubsen Z, 2009, 2009 6TH IEEE INTERNATIONAL WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES, P151, DOI 10.1109/MSR.2009.5069493
   Madeja Matej, 2019, 8 S LANG APPL TECHN, V3, P1, DOI [10.4230/OASIcs.SLATE.2019.3, DOI 10.4230/OASICS.SLATE.2019.3]
   Marsavina C, 2014, IEEE INT WORK C SO, P195, DOI 10.1109/SCAM.2014.28
   Mens T, 2005, EIGHTH INTERNATIONAL WORKSHOP ON PRINCIPLES OF SOFTWARE EVOLUTION, PROCEEDINGS, P13, DOI 10.1109/IWPSE.2005.7
   Mockus A, 2000, PROC IEEE INT CONF S, P120, DOI 10.1109/ICSM.2000.883028
   Moonen L., 2008, Software Evolution, P173
   Parizi RM, 2014, IEEE T RELIAB, V63, P913, DOI 10.1109/TR.2014.2338254
   Qusef A, 2014, J SYST SOFTWARE, V88, P147, DOI 10.1016/j.jss.2013.10.019
   Shi L, 2022, PROCEEDINGS OF THE 30TH ACM JOINT MEETING EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, ESEC/FSE 2022, P107, DOI 10.1145/3540250.3549145
   Silva D, 2021, IEEE T SOFTWARE ENG, V47, P2786, DOI 10.1109/TSE.2020.2968072
   Sohn Jeongju, 2022, arXiv
   Spencer D., 2009, CARD SORTING DESIGNI
   Sun XB, 2016, INT J SOFTW ENG KNOW, V26, P1001, DOI 10.1142/S0218194016500340
   Tan J, 2022, INFORM SOFTWARE TECH, V143, DOI 10.1016/j.infsof.2021.106738
   Tian YC, 2022, PROC INT CONF SOFTW, P2389, DOI 10.1145/3510003.3510205
   Tsantalis N, 2022, IEEE T SOFTWARE ENG, V48, P930, DOI 10.1109/TSE.2020.3007722
   Tsantalis N, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P483, DOI 10.1145/3180155.3180206
   Van Rompaey B, 2009, EUR CON SFTWR MTNCE, P209, DOI 10.1109/CSMR.2009.39
   Wan ZY, 2021, IEEE T SOFTWARE ENG, V47, P1857, DOI 10.1109/TSE.2019.2937083
   Wan ZY, 2020, IEEE T SOFTWARE ENG, V46, P1241, DOI 10.1109/TSE.2018.2877678
   Wang SN, 2021, 2021 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2021), P272, DOI 10.1109/SANER50967.2021.00033
   Wen FC, 2019, INT C PROGRAM COMPRE, P53, DOI 10.1109/ICPC.2019.00019
   White R, 2020, PROC INT CONF SOFTW, P861, DOI 10.1145/3377811.3380921
   Xia X, 2016, ESEM'16: PROCEEDINGS OF THE 10TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, DOI 10.1145/2961111.2962606
   Yan M, 2022, IEEE T SOFTWARE ENG, V48, P82, DOI 10.1109/TSE.2020.2978819
   Yan M, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P1308, DOI 10.1145/3368089.3417048
   Yang YB, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P157, DOI 10.1145/2950290.2950353
   Zaidman Andy, 2008, 2008 First IEEE International Conference on Software Testing, Verification and Validation (ICST '08), P220, DOI 10.1109/ICST.2008.47
   Zaidman A, 2011, EMPIR SOFTW ENG, V16, P325, DOI 10.1007/s10664-010-9143-7
NR 83
TC 0
Z9 0
U1 1
U2 2
PU ASSOC COMPUTING MACHINERY
PI NEW YORK
PA 1601 Broadway, 10th Floor, NEW YORK, NY USA
SN 1049-331X
EI 1557-7392
J9 ACM T SOFTW ENG METH
JI ACM Trans. Softw. Eng. Methodol.
PD NOV
PY 2023
VL 32
IS 6
AR 152
DI 10.1145/3607183
PG 37
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA U6DY2
UT WOS:001085699500019
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Shreeve, B
   Gralha, C
   Rashid, A
   Araújo, J
   Goulao, M
AF Shreeve, Benjamin
   Gralha, Catarina
   Rashid, Awais
   Araujo, Joao
   Goulao, Miguel
TI Making Sense of the Unknown: How Managers Make Cyber Security Decisions
SO ACM TRANSACTIONS ON SOFTWARE ENGINEERING AND METHODOLOGY
LA English
DT Article
DE Cyber security decision-making; cyber security risk analysis; goal
   modelling
ID GOAL; REQUIREMENTS; MODEL; GAME
AB Managers rarely have deep knowledge of cyber security and yet are expected to make decisions with cyber security implications for software-based systems. We investigate the decision-making conversations of seven teams of senior managers from the same organisation as they complete the Decisions & Disruptions cyber security exercise. We use grounded theory to situate our analysis of their decision-making and help us explore how these complex socio-cognitive interactions occur. We have developed a goal-model (using iStar 2.0) of the teams' dialogue that illustrates what cyber security goals teams identify and how they operationalise their decisions to reach these goals. We complement this with our model of cyber security reasoning that describes how these teams make their decisions, showing how each team members' experience, intuition, and understanding affects the team's overall shared reasoning and decision-making.
   Our findings show how managers with little cyber security expertise are able to use logic and traditional risk management thinking to make cyber security decisions. Despite their lack of cyber security-specific training, they demonstrate reasoning that closely resembles the decision-making approaches espoused in cyber security-specific standards (e.g., NIST/ISO). Our work demonstrates how organisations and practitioners can enrich goal modelling to capture not only what security goals an organisation has (and how they can operationalise them) but also how and why these goals have been identified. Ultimately, non-cyber security experts can develop their cyber security model based on their current context (and update it when new requirements appear or new incidents happen), whilst capturing their reasoning at every stage.
C1 [Shreeve, Benjamin; Rashid, Awais] Univ Bristol, Bristol, Avon, England.
   [Gralha, Catarina; Araujo, Joao; Goulao, Miguel] Univ Nova Lisboa, NOVA LINCS, Lisbon, Portugal.
C3 University of Bristol; Universidade Nova de Lisboa
RP Shreeve, B (corresponding author), Univ Bristol, Bristol, Avon, England.
EM ben.shreeve@bristol.ac.uk; catarina.gralha@fct.unl.pt;
   awais.rashid@bristol.ac.uk; joao.araujo@fct.unl.pt; mgoul@fct.unl.pt
RI Araujo, Joao/G-2108-2011; Goulão, Miguel/AAB-8223-2020; Araujo,
   Joao/M-3560-2013
OI Goulão, Miguel/0000-0002-5356-5203; Araujo, Joao/0000-0001-5914-1631
CR Alter S, 2013, J ASSOC INF SYST, V14, P72
   [Anonymous], 1995, THESIS U TORONTO CAN
   [Anonymous], 2013, PROC C COMPUTER COMM, DOI 10.1145/2508859.2516753
   [Anonymous], 2013, 27001 ISOIEC
   Beckers K, 2016, INT REQUIR ENG CONF, P16, DOI 10.1109/RE.2016.39
   Bock Kevin, 2018, P USENIX WORKSHOP AD, P9
   Bornstein G, 2004, J EXP SOC PSYCHOL, V40, P599, DOI 10.1016/j.jesp.2003.11.003
   Cavusoglu H, 2004, COMMUN ACM, V47, P87, DOI 10.1145/1005817.1005828
   CCDCOE, 2021, CCDCOE LOCK SHIELDS
   Dalpiaz F, 2016, Arxiv, DOI [arXiv:1605.07767, DOI 10.48550/ARXIV.1605.07767]
   Dor D, 2016, COMPUT SECUR, V63, P1, DOI 10.1016/j.cose.2016.09.006
   Elahi G, 2007, LECT NOTES COMPUT SC, V4801, P375
   Farris KA, 2018, ACM T PRIV SECUR, V21, DOI 10.1145/3196884
   Frey S, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P496, DOI 10.1145/3180155.3182549
   GLADSTEIN DL, 1985, ACAD MANAGE J, V28, P613, DOI 10.5465/256117
   Glaser B. G., 1967, DISCOV GROUNDED THEO
   Goleman Daniel., 1985, Vital Lies, Simple Truths
   Gondree Mark, 2013, P 6 WORKSHOP CYBER S, P8
   ISO, 2016, 2703512016 ISO
   ISO, 2016, 250232016E ISO ISOIE
   Moore T., 2015, IDENTIFYING FIRMS MA
   Morelock John R., 2018, P USENIX WORKSHOP AD
   Mouratidis H, 2010, INT J INTELL SYST, V25, P813, DOI 10.1002/int.20432
   National Buraeu of Standards, 1975, FED INF PROC STAND P, V65
   Nicholson J, 2018, PROCEEDINGS OF THE FOURTEENTH SYMPOSIUM ON USABLE PRIVACY AND SECURITY, P443
   NIST, 2012, 80061 NIST
   Oladimeji EA, 2006, PROCEEDINGS OF THE 10TH IASTED INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING AND APPLICATIONS, P178
   Peine H, 2008, IEEE HI ASS SYS ENGR, P9, DOI 10.1109/HASE.2008.57
   Pimentel J, 2018, INT REQUIR ENG CONF, P498, DOI 10.1109/RE.2018.00071
   Ponsard C, 2016, LECT NOTES COMPUT SC, V9923, P334, DOI 10.1007/978-3-319-45480-1_27
   Rees LP, 2011, DECIS SUPPORT SYST, V51, P493, DOI 10.1016/j.dss.2011.02.013
   RUSSELL DM, 1993, HUMAN FACTORS IN COMPUTING SYSTEMS, P269
   Shostack Adam, 2014, P USENIX SUMMIT GAMI
   Shreeve B, 2022, IEEE T SOFTWARE ENG, V48, P1515, DOI 10.1109/TSE.2020.3023735
   Shreeve B, 2021, ACM T PRIV SECUR, V24, DOI 10.1145/3419101
   Shreeve Benjamin, DECISIONS DISRUPTION
   Sjoberg D. I. K., 2008, Guide to Advanced Empirical Software Engineering, P312
   Starbuck W.H., 1988, The executive effect: Concepts and methods for studying top managers, P35
   Stevens R, 2018, PROCEEDINGS OF THE 27TH USENIX SECURITY SYMPOSIUM, P621
   Strauss E, 1998, CLIN ORTHOP RELAT R, P2
   Weick K., 1995, SENSEMAKING ORG
   Xu Y., 2011, P DIGRA 2011 C THINK
   Yu YP, 2008, PROCEEDINGS OF THE INTERNATIONAL CONFERENCE ON ADVANCED TEXTILE MATERIALS & MANUFACTURING TECHNOLOGY, P9, DOI 10.1145/1456362.1456366
NR 43
TC 4
Z9 4
U1 3
U2 5
PU ASSOC COMPUTING MACHINERY
PI NEW YORK
PA 1601 Broadway, 10th Floor, NEW YORK, NY USA
SN 1049-331X
EI 1557-7392
J9 ACM T SOFTW ENG METH
JI ACM Trans. Softw. Eng. Methodol.
PD JUL
PY 2023
VL 32
IS 4
AR 4
DI 10.1145/3548682
PG 33
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA L0SO0
UT WOS:001020441100002
OA hybrid
DA 2024-07-18
ER

PT J
AU Shrikanth, NC
   Menzies, T
AF Shrikanth, N. C.
   Menzies, Tim
TI Assessing the Early Bird Heuristic (for Predicting ProjectQuality)
SO ACM TRANSACTIONS ON SOFTWARE ENGINEERING AND METHODOLOGY
LA English
DT Article
DE Quality prediction; defects; early; data-lite
ID SOFTWARE DEFECT PREDICTION; FEATURE-SELECTION; NUMBER; MODEL;
   OPTIMIZATION; SYSTEM
AB Before researchers rush to reason across all available data or try complex methods, perhaps it is prudent to first check for simpler alternatives. Specifically, if the historical data has the most information in some small region, then perhaps a model learned from that region would suffice for the rest of the project.
   To support this claim, we offer a case study with 240 projects, where we find that the information in those projects "clumps" towards the earliest parts of the project. A quality prediction model learned from just the first 150 commits works as well, or better than state-of-the-art alternatives. Using just this "early bird" data, we can build models very quickly and very early in the project life cycle. Moreover, using this early bird method, we have shown that a simple model (with just a few features) generalizes to hundreds of projects.
   Based on this experience, we doubt that prior work on generalizing quality models may have needlessly complicated an inherently simple process. Further, prior work that focused on later-life cycle data needs to be revisited, since their conclusions were drawn from relatively uninformative regions.
C1 [Shrikanth, N. C.; Menzies, Tim] North Carolina State Univ, Engn Bldg 2,Campus Box 8206,890 Oval Dr, Raleigh, NC 27606 USA.
C3 North Carolina State University
RP Shrikanth, NC (corresponding author), North Carolina State Univ, Engn Bldg 2,Campus Box 8206,890 Oval Dr, Raleigh, NC 27606 USA.
EM nc.shrikanth@gmail.com; timm@ieee.org
OI Menzies, Tim/0000-0002-5040-3196
FU NSF-CISE grant [1908762]
FX This work was partially supported by an NSF-CISE grant #1908762.
CR Aggarwal CC, 2001, LECT NOTES COMPUT SC, V1973, P420
   Agrawal Amritanshu, 2018, 2018 IEEE/ACM 40th International Conference on Software Engineering (ICSE). Proceedings, P1050, DOI 10.1145/3180155.3180197
   Agrawal A, 2022, IEEE T SOFTWARE ENG, V48, P2939, DOI 10.1109/TSE.2021.3073242
   Agrawal A, 2021, IEEE T SOFTWARE ENG, V47, P2182, DOI 10.1109/TSE.2019.2945020
   Agrawal A, 2018, INFORM SOFTWARE TECH, V98, P74, DOI 10.1016/j.infsof.2018.02.005
   Akiyama F., 1972, Information Processing 71 Proceedings of the IFIP Congress 1971 Volume 1, P353
   Amasaki S, 2020, EMPIR SOFTW ENG, V25, P1573, DOI 10.1007/s10664-019-09777-8
   Lam AN, 2017, INT C PROGRAM COMPRE, P218, DOI 10.1109/ICPC.2017.24
   [Anonymous], 2008, Proceedings of the 4th International Workshop on Predictor Models in Software Engineering, PROMISE '08
   Arokiam J, 2020, 2020 IEEE/ACM 42ND INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: NEW IDEAS AND EMERGING RESULTS (ICSE-NIER 2020), P17, DOI 10.1145/3377816.3381738
   Bennin KE, 2019, EMPIR SOFTW ENG, V24, P602, DOI 10.1007/s10664-018-9633-6
   Bergstra J., 2013, ICML, pI
   Bergstra J., 2011, Adv. Neural Inf. Process. Syst., V24
   Bettenburg N., 2012, 2012 9th IEEE Working Conference on Mining Software Repositories (MSR 2012), P60, DOI 10.1109/MSR.2012.6224300
   Bird C., 2015, The Art and Science of Analyzing Software Data
   Bird C., 2011, P 19 ACM SIGSOFT S 1, P4, DOI DOI 10.1145/2025113.2025119
   Boehm B., 2005, CROSSTALK J DEFENSE, V18, P20
   Bowes D, 2018, SOFTWARE QUAL J, V26, P525, DOI 10.1007/s11219-016-9353-3
   Briand LC, 2002, IEEE T SOFTWARE ENG, V28, P706, DOI 10.1109/TSE.2002.1019484
   Canfora G, 2015, SOFTW TEST VERIF REL, V25, P426, DOI 10.1002/stvr.1570
   Canfora G, 2013, 2013 IEEE SIXTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST 2013), P252, DOI 10.1109/ICST.2013.38
   Chawla NV, 2002, J ARTIF INTELL RES, V16, P321, DOI 10.1613/jair.953
   Chen D, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P456, DOI 10.1145/3236024.3236050
   Chen JY, 2019, IEEE ACCESS, V7, P8901, DOI 10.1109/ACCESS.2018.2890733
   Chen L, 2015, INFORM SOFTWARE TECH, V62, P67, DOI 10.1016/j.infsof.2015.01.014
   Chen X, 2019, INFORM SOFTWARE TECH, V106, P161, DOI 10.1016/j.infsof.2018.10.003
   Chen X, 2018, INFORM SOFTWARE TECH, V93, P1, DOI 10.1016/j.infsof.2017.08.004
   D'Ambros M, 2012, EMPIR SOFTW ENG, V17, P531, DOI 10.1007/s10664-011-9173-9
   Fenton N, 2008, EMPIR SOFTW ENG, V13, P499, DOI 10.1007/s10664-008-9072-x
   Fu W, 2016, INFORM SOFTWARE TECH, V76, P135, DOI 10.1016/j.infsof.2016.04.017
   Fukushima T., 2014, Proceedings of the 11th Working Conference on Mining Software Repositories, MSR 2014, P172, DOI DOI 10.1145/2597073.2597075
   Ghotra B, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P789, DOI 10.1109/ICSE.2015.91
   Hailpern B, 2002, IBM SYST J, V41, P4, DOI 10.1147/sj.411.0004
   Hall MA, 2003, IEEE T KNOWL DATA EN, V15, P1437, DOI 10.1109/TKDE.2003.1245283
   Hassan A., 2017, UCL CREST OP WORKSH
   He HB, 2009, IEEE T KNOWL DATA EN, V21, P1263, DOI 10.1109/TKDE.2008.239
   He P, 2015, INFORM SOFTWARE TECH, V59, P170, DOI 10.1016/j.infsof.2014.11.006
   He ZM, 2012, AUTOMAT SOFTW ENG, V19, P167, DOI 10.1007/s10515-011-0090-3
   Herbold Steffen, 2013, P 9 INT C PRED MOD S, P1
   Hosseini S, 2018, INFORM SOFTWARE TECH, V95, P296, DOI 10.1016/j.infsof.2017.06.004
   Huang Q, 2019, EMPIR SOFTW ENG, V24, P2823, DOI 10.1007/s10664-018-9661-2
   Huda S, 2018, IEEE ACCESS, V6, P24184, DOI 10.1109/ACCESS.2018.2817572
   Jiang T, 2013, IEEE INT CONF AUTOM, P279, DOI 10.1109/ASE.2013.6693087
   Jing XY, 2017, IEEE T SOFTWARE ENG, V43, P321, DOI 10.1109/TSE.2016.2597849
   Jing XY, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P496, DOI 10.1145/2786805.2786813
   Jingxiu Yao, 2020, EASE2020. Proceedings of the Evaluation and Assessment in Software Engineering, P120, DOI 10.1145/3383219.3383232
   Kamei Y, 2016, EMPIR SOFTW ENG, V21, P2072, DOI 10.1007/s10664-015-9400-x
   Kamei Y, 2013, IEEE T SOFTWARE ENG, V39, P757, DOI 10.1109/TSE.2012.70
   Dam HK, 2018, Arxiv, DOI arXiv:1802.00921
   Kim M, 2016, PROC INT CONF SOFTW, P96, DOI 10.1145/2884781.2884783
   Kim M, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P151, DOI 10.1145/1985793.1985815
   Kocaguneli E, 2015, EMPIR SOFTW ENG, V20, P813, DOI 10.1007/s10664-014-9300-5
   Kondo M, 2020, EMPIR SOFTW ENG, V25, P890, DOI 10.1007/s10664-019-09736-3
   Kondo M, 2019, EMPIR SOFTW ENG, V24, P1925, DOI 10.1007/s10664-018-9679-5
   Koru AG, 2008, EMPIR SOFTW ENG, V13, P473, DOI 10.1007/s10664-008-9080-x
   Koru AG, 2009, IEEE T SOFTWARE ENG, V35, P293, DOI 10.1109/TSE.2008.90
   Krishna R, 2019, IEEE T SOFTWARE ENG, V45, P1081, DOI 10.1109/TSE.2018.2821670
   Krishna R, 2016, IEEE INT CONF AUTOM, P122, DOI 10.1145/2970276.2970339
   Laradji IH, 2015, INFORM SOFTWARE TECH, V58, P388, DOI 10.1016/j.infsof.2014.07.005
   Levina Elizaveta, 2004, Advances in neural information processing systems, V17
   Li J, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY AND SECURITY (QRS), P318, DOI 10.1109/QRS.2017.42
   Li M, 2012, AUTOMAT SOFTW ENG, V19, P201, DOI 10.1007/s10515-011-0092-1
   Li ZQ, 2018, AUTOMAT SOFTW ENG, V25, P201, DOI 10.1007/s10515-017-0220-7
   Liu C, 2019, INFORM SOFTWARE TECH, V107, P125, DOI 10.1016/j.infsof.2018.11.005
   liwerski J, 2005, ACM SIGSOFT SOFTWARE, V30, P1, DOI [10.1145/1082983.1083147, DOI 10.1145/1083142.1083147, DOI 10.1145/1082983.1083147]
   Ma Y, 2012, INFORM SOFTWARE TECH, V54, P248, DOI 10.1016/j.infsof.2011.09.007
   Mathew G, 2023, IEEE T SOFTWARE ENG, V49, P1397, DOI 10.1109/TSE.2018.2870388
   McIntosh S, 2018, IEEE T SOFTWARE ENG, V44, P412, DOI 10.1109/TSE.2017.2693980
   Menzies T., 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P343, DOI 10.1109/ASE.2011.6100072
   Menzies T, 2007, IEEE T SOFTWARE ENG, V33, P2, DOI 10.1109/TSE.2007.256941
   Menzies T, 2010, AUTOMAT SOFTW ENG, V17, P375, DOI 10.1007/s10515-010-0069-5
   Menzies T, 2013, IEEE T SOFTWARE ENG, V39, P822, DOI 10.1109/TSE.2012.83
   Misirli AT, 2011, AI MAG, V32, P57, DOI 10.1609/aimag.v32i2.2348
   Mittas N, 2013, IEEE T SOFTWARE ENG, V39, P537, DOI 10.1109/TSE.2012.45
   Munaiah N, 2017, EMPIR SOFTW ENG, V22, P3219, DOI 10.1007/s10664-017-9512-6
   Nagappan N, 2005, PROC INT CONF SOFTW, P284, DOI 10.1145/1062455.1062514
   Nam J, 2018, IEEE T SOFTWARE ENG, V44, P874, DOI 10.1109/TSE.2017.2720603
   Nam J, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P382, DOI 10.1109/ICSE.2013.6606584
   Ni C, 2017, J COMPUT SCI TECH-CH, V32, P1090, DOI 10.1007/s11390-017-1785-0
   Ostrand TJ, 2005, IEEE T SOFTWARE ENG, V31, P340, DOI 10.1109/TSE.2005.49
   Pan SJ, 2011, IEEE T NEURAL NETWOR, V22, P199, DOI 10.1109/TNN.2010.2091281
   Pandey SK, 2020, EXPERT SYST APPL, V144, DOI 10.1016/j.eswa.2019.113085
   Panichella A, 2014, 2014 SOFTWARE EVOLUTION WEEK - IEEE CONFERENCE ON SOFTWARE MAINTENANCE, REENGINEERING, AND REVERSE ENGINEERING (CSMR-WCRE), P164, DOI 10.1109/CSMR-WCRE.2014.6747166
   Parnin C., 2011, P 2011 INT S SOFTWAR, P199, DOI [10.1145/2001420.2001445, DOI 10.1145/2001420.2001445]
   Pascarella L, 2019, J SYST SOFTWARE, V150, P22, DOI 10.1016/j.jss.2018.12.001
   Pedregosa F, 2011, J MACH LEARN RES, V12, P2825
   Peters F, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P801, DOI 10.1109/ICSE.2015.92
   Peters F, 2013, IEEE WORK CONF MIN S, P409, DOI 10.1109/MSR.2013.6624057
   Peters F, 2013, IEEE T SOFTWARE ENG, V39, P1054, DOI 10.1109/TSE.2013.6
   Rahman F, 2012, Proceedings of the ACM SIGSOFT 20th International Symposium on the Foundations of Software Engineering, FSE '12, P61
   Rahman F, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P424, DOI 10.1145/2568225.2568269
   Rahman F, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P432, DOI 10.1109/ICSE.2013.6606589
   Rahman Foyzur, 2013, P 2013 9 JOINT M FDN, P147
   Rathore SS, 2017, EXPERT SYST APPL, V82, P357, DOI 10.1016/j.eswa.2017.04.014
   Rhmann W, 2020, J KING SAUD UNIV-COM, V32, P419, DOI 10.1016/j.jksuci.2019.03.006
   Rosen C, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P966, DOI 10.1145/2786805.2803183
   Ryu D, 2016, APPL SOFT COMPUT, V49, P1062, DOI 10.1016/j.asoc.2016.04.009
   Ryu D, 2017, SOFTWARE QUAL J, V25, P235, DOI 10.1007/s11219-015-9287-1
   Ryu D, 2016, EMPIR SOFTW ENG, V21, P43, DOI 10.1007/s10664-014-9346-4
   Ryu D, 2015, J COMPUT SCI TECH-CH, V30, P969, DOI 10.1007/s11390-015-1575-5
   Sawyer Robert, 2013, Principles and Applications of Business Intelligence Research, P83
   Scandariato R, 2014, IEEE T SOFTWARE ENG, V40, P993, DOI 10.1109/TSE.2014.2340398
   Sela A, 2018, 2018 IEEE INTERNATIONAL CONFERENCE ON THE SCIENCE OF ELECTRICAL ENGINEERING IN ISRAEL (ICSEE)
   Shihab Emad, 2010, P ACM IEEE INT S EMP, P1
   Shrikanth NC, 2021, PROC INT CONF SOFTW, P448, DOI 10.1109/ICSE43902.2021.00050
   Shrikanth NC, 2020, 2020 IEEE/ACM 42ND INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE (ICSE-SEIP), P182, DOI 10.1145/3377813.3381367
   Siers MJ, 2015, INFORM SYST, V51, P62, DOI 10.1016/j.is.2015.02.006
   Song QB, 2019, IEEE T SOFTWARE ENG, V45, P1253, DOI 10.1109/TSE.2018.2836442
   Sun ZB, 2012, IEEE T SYST MAN CY C, V42, P1806, DOI 10.1109/TSMCC.2012.2226152
   Tan M, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P99, DOI 10.1109/ICSE.2015.139
   Tan SY, 2016, Arxiv, DOI [arXiv:1606.03510, DOI 10.48550/ARXIV.1606.03510]
   Tantithamthavorn C, 2020, IEEE T SOFTWARE ENG, V46, P1200, DOI 10.1109/TSE.2018.2876537
   Tantithamthavorn C, 2019, IEEE T SOFTWARE ENG, V45, P683, DOI 10.1109/TSE.2018.2794977
   Tantithamthavorn C, 2016, PROC INT CONF SOFTW, P321, DOI 10.1145/2884781.2884857
   Thong Hoang, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P34, DOI 10.1109/MSR.2019.00016
   Chekam TT, 2020, EMPIR SOFTW ENG, V25, P434, DOI 10.1007/s10664-019-09778-7
   Tong HN, 2018, INFORM SOFTWARE TECH, V96, P94, DOI 10.1016/j.infsof.2017.11.008
   Turhan B, 2013, INFORM SOFTWARE TECH, V55, P1101, DOI 10.1016/j.infsof.2012.10.003
   Vargha A, 2000, J EDUC BEHAV STAT, V25, P101, DOI 10.3102/10769986025002101
   Wan ZY, 2020, IEEE T SOFTWARE ENG, V46, P1241, DOI 10.1109/TSE.2018.2877678
   Wang S, 2013, IEEE T RELIAB, V62, P434, DOI 10.1109/TR.2013.2259203
   Wang S, 2020, IEEE T SOFTWARE ENG, V46, P1267, DOI 10.1109/TSE.2018.2877612
   Wang S, 2016, PROC INT CONF SOFTW, P297, DOI 10.1145/2884781.2884804
   Wang TJ, 2016, AUTOMAT SOFTW ENG, V23, P569, DOI 10.1007/s10515-015-0179-1
   Weyuker EJ, 2008, EMPIR SOFTW ENG, V13, P539, DOI 10.1007/s10664-008-9082-8
   Wu F, 2018, IEEE T RELIAB, V67, P581, DOI 10.1109/TR.2018.2804922
   Xia X, 2016, ESEM'16: PROCEEDINGS OF THE 10TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, DOI 10.1145/2961111.2962606
   Xia X, 2016, IEEE T SOFTWARE ENG, V42, P977, DOI 10.1109/TSE.2016.2543218
   Xu Z, 2019, INFORM SOFTWARE TECH, V106, P182, DOI 10.1016/j.infsof.2018.10.004
   Yan M, 2022, IEEE T SOFTWARE ENG, V48, P82, DOI 10.1109/TSE.2020.2978819
   Yan M, 2019, EMPIR SOFTW ENG, V24, P2171, DOI 10.1007/s10664-019-09688-8
   Yang XL, 2017, INFORM SOFTWARE TECH, V87, P206, DOI 10.1016/j.infsof.2017.03.007
   Yang YB, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P157, DOI 10.1145/2950290.2950353
   Yatish S, 2019, PROC INT CONF SOFTW, P654, DOI 10.1109/ICSE.2019.00075
   Ye X, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P689, DOI 10.1145/2635868.2635874
   Zhang F., 2014, P 11 WORK C MIN SOFT, P182, DOI [10.1145/2597073.2597078, DOI 10.1145/2597073.2597078]
   Zhang F, 2017, IEEE T SOFTWARE ENG, V43, P476, DOI 10.1109/TSE.2016.2599161
   Zhang F, 2016, PROC INT CONF SOFTW, P309, DOI 10.1145/2884781.2884839
   Zhang F, 2016, EMPIR SOFTW ENG, V21, P2107, DOI 10.1007/s10664-015-9396-2
   Zhang Hongyu, 2010, P IEEE INT C SOFTWAR, P1
   Zhang Y, 2015, P INT COMP SOFTW APP, P264, DOI 10.1109/COMPSAC.2015.58
   Zhimin He, 2013, 2013 ACM / IEEE International Symposium on Empirical Software Engineering and Measurement (ESEM), P45, DOI 10.1109/ESEM.2013.20
   Zhou TC, 2019, INFORM SOFTWARE TECH, V114, P204, DOI 10.1016/j.infsof.2019.07.003
   Zhou YM, 2018, ACM T SOFTW ENG METH, V27, DOI 10.1145/3183339
   Zimmerman T, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P91, DOI 10.1145/1595696.1595713
NR 145
TC 1
Z9 1
U1 0
U2 0
PU ASSOC COMPUTING MACHINERY
PI NEW YORK
PA 1601 Broadway, 10th Floor, NEW YORK, NY USA
SN 1049-331X
EI 1557-7392
J9 ACM T SOFTW ENG METH
JI ACM Trans. Softw. Eng. Methodol.
PD JUL
PY 2023
VL 32
IS 5
AR 116
DI 10.1145/3583565
PG 39
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA P9SM2
UT WOS:001054005300009
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Zhang, XL
   Heaps, J
   Slavin, R
   Niu, JW
   Breaux, T
   Wang, XY
AF Zhang, Xueling
   Heaps, John
   Slavin, Rocky
   Niu, Jianwei
   Breaux, Travis
   Wang, Xiaoyin
TI DAISY: Dynamic-Analysis-Induced Source Discovery for Sensitive Data
SO ACM TRANSACTIONS ON SOFTWARE ENGINEERING AND METHODOLOGY
LA English
DT Article
DE Privacy leak; mobile application; natural language processing
ID LEAKAGE
AB Mobile apps are widely used and often process users' sensitive data. Many taint analysis tools have been applied to analyze sensitive information flows and report data leaks in apps. These tools require a list of sources (where sensitive data is accessed) as input, and researchers have constructed such lists within the Android platform by identifying Android API methods that allow access to sensitive data. However, app developers may also define methods or use third-party library's methods for accessing data. It is difficult to collect such source methods, because they are unique to the apps, and there are a large number of third-party libraries available on the market that evolve over time. To address this problem, we propose DAISY, a Dynamic-Analysis-Induced Source discoverY approach for identifying methods that return sensitive information from apps and third-party libraries. Trained on an automatically labeled dataset of methods and their calling context, DAISY identifies sensitive methods in unseen apps. We evaluated DAISY on real-world apps, and the results show that DAISY can achieve an overall precision of 77.9% when reporting the most confident results. Most of the identified sources and leaks cannot be detected by existing technologies.
C1 [Zhang, Xueling] Rochester Inst Technol, Rochester, NY 14623 USA.
   [Heaps, John; Slavin, Rocky; Niu, Jianwei; Wang, Xiaoyin] Univ Texas San Antonio, San Antonio, TX USA.
   [Breaux, Travis] Carnegie Mellon Univ, Pittsburgh, PA USA.
C3 Rochester Institute of Technology; University of Texas System;
   University of Texas at San Antonio (UTSA); Carnegie Mellon University
RP Zhang, XL (corresponding author), Rochester Inst Technol, Rochester, NY 14623 USA.
EM xueling.zhang@rit.edu
OI Wang, Xiaoyin/0000-0002-9079-5534; Niu, Jianwei/0000-0002-5667-3285;
   Zhang, Xueling/0000-0002-3156-906X; Breaux, Travis/0000-0001-7127-8155;
   Slavin, Rocky/0000-0003-1283-2595
FU NSF [1948244, 1736209, 2007718, 1846467, 2221843]
FX This work was supported by the NSF Awards 1948244, 1736209, 2007718,
   1846467, and 2221843.
CR Agrawal P., 2020, International Journal of Computer Applications, V975, P8887
   Alon U, 2019, P ACM PROGRAM LANG, V3, DOI 10.1145/3290353
   Andow B, 2017, PROCEEDINGS OF THE 10TH ACM CONFERENCE ON SECURITY AND PRIVACY IN WIRELESS AND MOBILE NETWORKS (WISEC 2017), P23, DOI 10.1145/3098243.3098247
   Android Developers, 2012, Ui/application exerciser monkey
   [Anonymous], 2018, GDPR ONLINE IDENTIFI
   [Anonymous], 2018, GDPR DEFINITION PERS
   [Anonymous], 2012, P 27 ANN ACM S APPL
   Arzt S, 2014, ACM SIGPLAN NOTICES, V49, P259, DOI [10.1145/2666356.2594299, 10.1145/2594291.2594299]
   Avdiienko V, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P426, DOI 10.1109/ICSE.2015.61
   Bojanowski P., 2017, Transactions of the Association for Computational Linguistics, V5, P135, DOI DOI 10.1162/TACLA00051
   Bosu AS, 2017, PROCEEDINGS OF THE 2017 ACM ASIA CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY (ASIA CCS'17), P71, DOI 10.1145/3052973.3053004
   Brodie M., 2005, Journal of Network and Systems Management, V13, P219, DOI 10.1007/s10922-005-4443-8
   Centers for Medicare Medicaid Services, 1996, The Health Insurance Portability and Accountability Act of 1996 (HIPAA)
   Chuang HY, 2015, 2015 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE SECURITY AND RELIABILITY (QRS 2015), P201, DOI 10.1109/QRS.2015.37
   Consumer Data Protection Act, 2021, VIRG CONS DAT PROT A
   Desnos A., 2015, Androguard
   Devlin J, 2019, Arxiv, DOI arXiv:1810.04805
   Egele M., 2013, P 2013 ACM SIGSAC C, P73
   Enck W, 2014, ACM T COMPUT SYST, V32, DOI 10.1145/2619091
   European Parliament and the Council of Europe, 2016, General Data Protection Regulation (GDPR) Regulation (EU) 2016/679 5419/1/16
   Federal Trade Commission, 1998, Children's online privacy protection rule (COPPA)
   Feng HHP, 2003, P IEEE S SECUR PRIV, P62, DOI 10.1109/SECPRI.2003.1199328
   Feng RT, 2019, IEEE INT C ENG COMP, P61, DOI 10.1109/ICECCS.2019.00014
   Fratantonio Y, 2016, P IEEE S SECUR PRIV, P377, DOI 10.1109/SP.2016.30
   Fuchs A.P., 2009, Scandroid: Automated security certification of android applications
   Gabel M, 2010, 18 ACM SIGSOFT INT S, P147
   Gao J, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P939, DOI 10.1145/3368089.3409745
   Ge XT, 2019, 2019 COMPANION OF THE 19TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY AND SECURITY (QRS-C 2019), P71, DOI 10.1109/QRS-C.2019.00027
   Gibler C., 2012, P 5 INT C TRUST TRUS, V7344, P291, DOI DOI 10.1007/978-3-642-30921-2
   Gordon MI, 2015, 22ND ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2015), DOI 10.14722/ndss.2015.23089
   He YZ, 2019, J INF SECUR APPL, V46, P259, DOI 10.1016/j.jisa.2019.03.014
   Heaps J, 2019, PROCEEDINGS OF THE 24TH ACM SYMPOSIUM ON ACCESS CONTROL MODELS AND TECHNOLOGIES (SACMAT '19), P103, DOI 10.1145/3322431.3326329
   Hindle A, 2016, COMMUN ACM, V59, P122, DOI 10.1145/2902362
   Hou SF, 2016, 2016 IEEE/WIC/ACM INTERNATIONAL CONFERENCE ON WEB INTELLIGENCE WORKSHOPS (WIW 2016), P104, DOI [10.1109/WIW.2016.040, 10.1109/WIW.2016.15]
   Huang JJ, 2015, PROCEEDINGS OF THE 24TH USENIX SECURITY SYMPOSIUM, P977
   Joulin A, 2016, Arxiv, DOI [arXiv:1607.01759, DOI 10.48550/ARXIV.1607.01759]
   Karim MY, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P427, DOI 10.1109/SANER.2016.74
   KLIEBER W., 2014, Proceedings of the 3rd ACM SIGPLAN International Workshop on the State of the Art in Java Program Analysis, P1
   Koli J. D., 2018, P TECHN SMART CIT EN, P1
   Kong PF, 2021, AUTOMAT SOFTW ENG, V28, DOI 10.1007/s10515-021-00290-1
   Krutz DE, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P522, DOI 10.1109/MSR.2015.79
   Leung Christophe, 2016, P 2016 INT MEAS C SA, P365, DOI [10.1145/2987443, DOI 10.1145/2987443]
   Li L, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P280, DOI 10.1109/ICSE.2015.48
   Li L, 2014, IEEE INT CONF TRUST, P388, DOI 10.1109/TrustCom.2014.50
   Lu Long, 2012, P 2012 ACM C COMP CO, P229, DOI DOI 10.1145/2382196.2382223
   Mahmud SY, 2020, PROCEEDINGS OF THE 29TH USENIX SECURITY SYMPOSIUM, P1517
   Mikolov T, 2013, Arxiv, DOI [arXiv:1301.3781, 10.48550/arXiv.1301.3781]
   Nan YH, 2015, PROCEEDINGS OF THE 24TH USENIX SECURITY SYMPOSIUM, P993
   Niu HF, 2016, INT CONF SYST INFORM, P520, DOI 10.1109/ICSAI.2016.7811010
   Piskachev G, 2019, PROCEEDINGS OF THE 28TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA '19), P181, DOI 10.1145/3293882.3330556
   Rasthofer S, 2014, 21ST ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2014), DOI 10.14722/ndss.2014.23039
   Reps T., 1995, Conference Record of POPL'95: 22nd ACM SIGPLAN-SIGACT Symposium Principles of Programming Languages, P49, DOI 10.1145/199448.199462
   Rountev A., 2017, GATOR PROGRAM ANAL T
   Russell RL, 2018, 2018 17TH IEEE INTERNATIONAL CONFERENCE ON MACHINE LEARNING AND APPLICATIONS (ICMLA), P757, DOI 10.1109/ICMLA.2018.00120
   Sahs J., 2012, 2012 European Intelligence and Security Informatics Conference (EISIC), P141, DOI 10.1109/EISIC.2012.34
   Slavin R, 2016, PROC INT CONF SOFTW, P25, DOI 10.1145/2884781.2884855
   Sun M., 2016, P 2016 ACM C COMP CO, P331, DOI 10.1145/2976749.2978343
   Sun XY, 2021, PROC INT SYMP SOFTW, P498, DOI 10.1109/ISSRE52982.2021.00058
   Sun XY, 2021, ACM T SOFTW ENG METH, V30, DOI 10.1145/3440033
   Tam K, 2015, 22ND ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2015), DOI 10.14722/ndss.2015.23145
   The California Consumer Privacy Act, 2018, CAL CONS PRIV ACT 20
   Vasilescu B, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P683, DOI 10.1145/3106237.3106289
   Viennot N., 2014, 2014 ACM INT C MEAS, P221, DOI DOI 10.1145/2637364.2592003
   Wang W, 2020, IEEE INT CONF AUTOM, P1249, DOI 10.1145/3324884.3418905
   Wang WY, 2018, IEEE INT CONF AUTOM, P738, DOI 10.1145/3238147.3240465
   Wang XY, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P37, DOI 10.1145/3180155.3180196
   Wang ZG, 2015, IEEE CONF COMM NETW, P727, DOI 10.1109/CNS.2015.7346906
   Wei FS, 2018, ANALYTICAL METHODS FOR FOOD SAFETY BY MASS SPECTROMETRY, VOL II VETERINARY DRUGS, P1, DOI [10.1016/B978-0-12-814165-6.00001-4, 10.1145/3183575]
   Winsniewski R., 2012, ANDROID APKTOOL TOOL
   Xie C, 2019, IEEE T VIS COMPUT GR, V25, P215, DOI 10.1109/TVCG.2018.2865026
   Yang ZM, 2012, WOR CONG SOFTW ENG, P101, DOI 10.1109/WCSE.2012.26
   Yosinski J, 2014, ADV NEUR IN, V27
   You W, 2020, IEEE T DEPEND SECURE, V17, P208, DOI 10.1109/TDSC.2017.2740169
   Zhang F., 2014, P 2014 ACM C SEC PRI, P25, DOI DOI 10.1145/2627393.2627395
   Zhang XL, 2020, PROC INT CONF SOFTW, P1572, DOI 10.1145/3377811.3380401
   Zhang Xueling, 2021, P IEEE S SECURITY PR
NR 76
TC 0
Z9 0
U1 4
U2 6
PU ASSOC COMPUTING MACHINERY
PI NEW YORK
PA 1601 Broadway, 10th Floor, NEW YORK, NY USA
SN 1049-331X
EI 1557-7392
J9 ACM T SOFTW ENG METH
JI ACM Trans. Softw. Eng. Methodol.
PD JUL
PY 2023
VL 32
IS 4
AR 89
DI 10.1145/3569936
PG 34
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA L0SO0
UT WOS:001020441100008
OA Bronze
DA 2024-07-18
ER

PT J
AU Costea, A
   Tiwari, A
   Chianasta, S
   Kishore, R
   Roychoudhury, A
   Sergey, I
AF Costea, Andreea
   Tiwari, Abhishek
   Chianasta, Sigmund
   Kishore, R.
   Roychoudhury, Abhik
   Sergey, Ilya
TI Hippodrome: Data Race Repair Using Static Analysis Summaries
SO ACM TRANSACTIONS ON SOFTWARE ENGINEERING AND METHODOLOGY
LA English
DT Article
DE Concurrency; program repair; static analysis
AB Implementing bug-free concurrent programs is a challenging task in modern software development. State-ofthe-art static analyses find hundreds of concurrency bugs in production code, scaling to large codebases. Yet, fixing these bugs in constantly changing codebases represents a daunting effort for programmers, particularly because a fix in the concurrent code can introduce other bugs in a subtle way.
   In this work, we show how to harness compositional static analysis for concurrency bug detection, to enable a new Automated Program Repair (APR) technique for data races in large concurrent Java codebases. The key innovation of our work is an algorithm that translates procedure summaries inferred by the analysis tool for the purpose of bug reporting into small local patches that fix concurrency bugs (without introducing new ones). This synergy makes it possible to extend the virtues of compositional static concurrency analysis to APR, making our approach effective (it can detect and fix many more bugs than existing tools for data race repair), scalable (it takes seconds to analyze and suggest fixes for sizeable codebases), and usable (generally, it does not require annotations from the users and can perform continuous automated repair). Our study, conducted on popular open-source projects, has confirmed that our tool automatically produces concurrency fixes similar to those proposed by the developers in the past.
C1 [Costea, Andreea; Tiwari, Abhishek; Chianasta, Sigmund; Kishore, R.; Roychoudhury, Abhik; Sergey, Ilya] Natl Univ Singapore, 15 Comp Dr, Singapore 117418, Singapore.
C3 National University of Singapore
RP Costea, A (corresponding author), Natl Univ Singapore, 15 Comp Dr, Singapore 117418, Singapore.
EM andreeac@comp.nus.edu.sg; tiwari@comp.nus.edu.sg; sigmund@u.nus.edu;
   kishore_r@u.nus.edu; abhik@comp.nus.edu.sg; ilya@nus.edu.sg
RI Tiwari, Abhishek/HLW-2170-2023
OI Tiwari, Abhishek/0000-0001-8415-5410; Costea,
   Andreea/0000-0002-9089-9392; Sergey, Ilya/0000-0003-4250-5392
FU National Research Foundation Singapore; Singapore MoE Tier 1
   [IG18-SG102]
FX This work was partially supported by the National Research Foundation
   Singapore (National Satellite of Excellence in Trustworthy Software
   Systems) and by Singapore MoE Tier 1 grant no. IG18-SG102.
CR Agarwal R, 2006, LECT NOTES COMPUT SC, V3875, P191
   [Anonymous], 2021, HIPP MAIN REP
   [Anonymous], 2011, PEC BENCHM
   [Anonymous], 2016, JACONTEBE OBJ BIOGR
   [Anonymous], 2018, PFIX BENCHM
   [Anonymous], 2021, HIPP DOCK IM
   Ayewah N, 2008, IEEE SOFTWARE, V25, P22, DOI 10.1109/MS.2008.130
   Bavishi R, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P613, DOI 10.1145/3338906.3338952
   Bessey A, 2010, COMMUN ACM, V53, P66, DOI 10.1145/1646353.1646374
   Blackshear S, 2018, P ACM PROGRAM LANG, V2, DOI 10.1145/3276514
   Brotherston J, 2021, 2021 36TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING ASE 2021, P955, DOI 10.1109/ASE51524.2021.9678572
   Cai Y, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P303, DOI 10.1145/3106237.3106239
   Calcagno C, 2009, ACM SIGPLAN NOTICES, V44, P289, DOI 10.1145/1594834.1480917
   Chou Andy, 2014, POPL 14
   Cohen E, 2009, LECT NOTES COMPUT SC, V5674, P23, DOI 10.1007/978-3-642-03359-9_2
   Costea A, 2020, LECT NOTES COMPUT SC, V12075, P141, DOI 10.1007/978-3-030-44914-8_6
   Distefano D, 2019, COMMUN ACM, V62, P62, DOI 10.1145/3338112
   Engler D., 2003, Operating Systems Review, V37, P237, DOI 10.1145/1165389.945468
   Flanagan C, 2005, ACM SIGPLAN NOTICES, V40, P110, DOI 10.1145/1047659.1040315
   Flanagan C, 2009, PLDI'09 PROCEEDINGS OF THE 2009 ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P121, DOI 10.1145/1542476.1542490
   Giebas D, 2020, APPL SCI-BASEL, V10, DOI 10.3390/app10228005
   Goetz B, 2006, JAVA CONCURRENCY PRA
   Gorogiannis N, 2019, P ACM PROGRAM LANG, V3, DOI 10.1145/3290370
   Herlihy M., 2008, The Art of Multiprocessor Programming
   Nguyen HDT, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P772, DOI 10.1109/ICSE.2013.6606623
   Huang J., 2011, ISSTA, P144, DOI [10.1145/2001420.2001438, DOI 10.1145/2001420.2001438]
   Huang J, 2014, ACM SIGPLAN NOTICES, V49, P337, DOI [10.1145/2666356.2594315, 10.1145/2594291.2594315]
   Huang J, 2012, ACM SIGPLAN NOTICES, V47, P737, DOI 10.1145/2398857.2384670
   Hutchins DeLesley, 2014, 2014 IEEE 14th International Working Conference on Source Code Analysis and Manipulation (SCAM), P41, DOI 10.1109/SCAM.2014.34
   Jacobs B, 2011, LECT NOTES COMPUT SC, V6617, P41, DOI 10.1007/978-3-642-20398-5_4
   Jin G., 2012, 10 USENIX S OP SYST, P221
   Jin GL, 2011, ACM SIGPLAN NOTICES, V46, P389, DOI 10.1145/1993316.1993544
   Jones N. D., 1979, P 6 ACM SIGACT SIGPL, P244
   Khoshnood Sepideh, 2015, P 2015 INT S SOFTW E, P165
   Krena B, 2009, LECT NOTES COMPUT SC, V5779, P101
   Krena Bohuslav., 2007, Proceedings of the 2007 ACM Workshop on Parallel and Distributed Systems: Testing and Debugging, PADTAD '07, P54
   Le Goues C, 2019, COMMUN ACM, V62, P56, DOI 10.1145/3318162
   Lin HR, 2018, IEEE INT CONF AUTOM, P589, DOI 10.1145/3238147.3238198
   Lin ZY, 2015, IEEE INT CONF AUTOM, P178, DOI 10.1109/ASE.2015.87
   Liu BZ, 2021, PROCEEDINGS OF THE 42ND ACM SIGPLAN INTERNATIONAL CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION (PLDI '21), P725, DOI 10.1145/3453483.3454073
   Liu HP, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P715, DOI 10.1145/2950290.2950309
   Liu P, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P318, DOI 10.1145/2635868.2635881
   Liu P, 2012, PROC INT CONF SOFTW, P299, DOI 10.1109/ICSE.2012.6227184
   Logozzo F, 2012, ACM SIGPLAN NOTICES, V47, P133, DOI 10.1145/2398857.2384626
   Long F, 2016, ACM SIGPLAN NOTICES, V51, P298, DOI 10.1145/2914770.2837617
   Lu S, 2008, ACM SIGPLAN NOTICES, V43, P329, DOI 10.1145/1353536.1346323
   Lucia B, 2008, CONF PROC INT SYMP C, P277, DOI 10.1109/ISCA.2008.4
   Mechtaev S, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P389, DOI 10.1145/3236024.3236049
   Mechtaev S, 2016, PROC INT CONF SOFTW, P691, DOI 10.1145/2884781.2884807
   Müller P, 2016, LECT NOTES COMPUT SC, V9583, P41, DOI 10.1007/978-3-662-49122-5_2
   Naik M, 2006, ACM SIGPLAN NOTICES, V41, P308, DOI 10.1145/1133981.1134018
   Naik M, 2009, PROC INT CONF SOFTW, P386, DOI 10.1109/ICSE.2009.5070538
   Polikarpova N, 2019, P ACM PROGRAM LANG, V3, DOI 10.1145/3290385
   Sadowski C, 2018, COMMUN ACM, V61, P58, DOI 10.1145/3188720
   Samak M, 2015, ACM SIGPLAN NOTICES, V50, P175, DOI [10.1145/2737924.2737998, 10.1145/2813885.2737998]
   Sangmin Park, 2012, 2012 IEEE Fifth International Conference on Software Testing, Verification and Validation (ICST 2012), P51, DOI 10.1109/ICST.2012.85
   Sasturkar Amit., 2005, PPOPP 05, P83, DOI DOI 10.1145/1065944.1065956
   Serebryany Konstantin, 2009, Proceedings of the Workshop on Binary Instrumentation and Applications, WBIA'09, P62, DOI DOI 10.1145/1791194.1791203
   Sergey I, 2015, ACM SIGPLAN NOTICES, V50, P77, DOI [10.1145/2813885.2737964, 10.1145/2737924.2737964]
   Spoto F, 2016, LECT NOTES COMPUT SC, V9837, P39, DOI 10.1007/978-3-662-53413-7_3
   Terragni V, 2019, IEEE INT CONF SOFTW, P264, DOI 10.1109/ICST.2019.00034
   Nguyen TT, 2021, LECT NOTES COMPUT SC, V12597, P376, DOI 10.1007/978-3-030-67067-2_17
   van Tonder R, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P151, DOI 10.1145/3180155.3180250
   Visser W., 2004, Software Engineering Notes, V29, P97, DOI 10.1145/1013886.1007526
   Von Praun Christoph, 2004, J OBJECT TECHNOL, V3, P103
   Weimer W, 2009, PROC INT CONF SOFTW, P364, DOI 10.1109/ICSE.2009.5070536
   Williams A, 2005, LECT NOTES COMPUT SC, V3586, P602
NR 67
TC 2
Z9 2
U1 1
U2 2
PU ASSOC COMPUTING MACHINERY
PI NEW YORK
PA 1601 Broadway, 10th Floor, NEW YORK, NY USA
SN 1049-331X
EI 1557-7392
J9 ACM T SOFTW ENG METH
JI ACM Trans. Softw. Eng. Methodol.
PD APR
PY 2023
VL 32
IS 2
AR 41
DI 10.1145/3546942
PG 33
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA D7OR1
UT WOS:000970588900014
OA Bronze
DA 2024-07-18
ER

PT J
AU Khanfir, A
   Koyuncu, A
   Papadakis, M
   Cordy, M
   Bissyandé, TF
   Klein, J
   Le Traon, Y
AF Khanfir, Ahmed
   Koyuncu, Anil
   Papadakis, Mike
   Cordy, Maxime
   Bissyande, Tegawende F.
   Klein, Jacques
   Le Traon, Yves
TI IBIR: Bug-report-driven Fault Injection
SO ACM TRANSACTIONS ON SOFTWARE ENGINEERING AND METHODOLOGY
LA English
DT Article
DE Fault injection; mutation; bug reports; information retrieval
ID MUTANT REDUCTION; ALL-USES; MUTATION; SOFTWARE; LOCALIZATION
AB Much research on software engineering relies on experimental studies based on fault injection. Fault injection, however, is not often relevant to emulate real-world software faults since it "blindly" injects large numbers of faults. It remains indeed challenging to inject few but realistic faults that target a particular functionality in a program. In this work, we introduce iBiR, a fault injection tool that addresses this challenge by exploring change patterns associated to user-reported faults. To inject realistic faults, we create mutants by re-targeting a bug-report-driven automated program repair system, i.e., reversing its code transformation templates. iBiR is further appealing in practice since it requires deep knowledge of neither code nor tests, just of the program's relevant bug reports. Thus, our approach focuses the fault injection on the feature targeted by the bug report. We assess iBiR by considering the Defects4J dataset. Experimental results show that our approach outperforms the fault injection performed by traditionalmutation testing in terms of semantic similarity with the original bug, when applied at either system or class levels of granularity, and provides better, statistically significant estimations of test effectiveness (fault detection). Additionally, when injecting 100 faults, iBiR injects faults that couple with the real ones in around 36% of the cases, while mutation testing achieves less than 4%.
C1 [Khanfir, Ahmed; Papadakis, Mike; Cordy, Maxime; Bissyande, Tegawende F.; Klein, Jacques; Le Traon, Yves] Univ Luxembourg, SnT, 29 Ave John F Kennedy, L-1855 Luxembourg, Luxembourg.
   [Koyuncu, Anil] Sabanci Univ, Aoeniversite Caddesi 27, TR-34956 Istanbul, Turkiye.
C3 University of Luxembourg; Sabanci University
RP Khanfir, A (corresponding author), Univ Luxembourg, SnT, 29 Ave John F Kennedy, L-1855 Luxembourg, Luxembourg.
EM ahmed.khanfir@uni.lu; anil.koyuncu@sabanciuniv.edu;
   michail.papadakis@uni.lu; maxime.cordy@uni.lu;
   tegawende.bissyande@uni.lu; jacques.klein@uni.lu; Yves.LeTraon@uni.lu
RI Khanfir, Ahmed/JAC-0908-2023; LE TRAON, Yves/T-2911-2019
OI Khanfir, Ahmed/0000-0001-7471-6050; LE TRAON, Yves/0000-0002-1045-4861;
   Klein, Jacques/0000-0003-4052-475X; Bissyande, Tegawende
   F./0000-0001-7270-9869; Papadakis, Mike/0000-0003-1852-2547
FU Luxembourg National Research Fund (FNR) TestFast Project [12630949];
   European Research Council (ERC) under the European Union [949014];
   European Research Council (ERC) [949014] Funding Source: European
   Research Council (ERC)
FX This work was supported by the Luxembourg National Research Fund (FNR)
   TestFast Project, ref. 12630949 and partially supported by the European
   Research Council (ERC) under the European Union's Horizon 2020 research
   and innovation programme (grant agreement No. 949014 for project
   NATURAL).
CR Abreu R, 2009, IEEE INT CONF AUTOM, P88, DOI 10.1109/ASE.2009.25
   Agrawal Hiralal, 1989, SERCTR41 PURD U
   Ammann Paul., 2008, Introduction to Software Testing, DOI DOI 10.1017/CBO9780511809163
   Andrews JH, 2006, IEEE T SOFTWARE ENG, V32, P608, DOI 10.1109/TSE.2006.83
   ARLAT J, 1993, IEEE T COMPUT, V42, P913, DOI 10.1109/12.238482
   Arong, 2014, PROCEEDINGS OF 2014 IEEE INTERNATIONAL CONFERENCE ON PROGRESS IN INFORMATICS AND COMPUTING (PIC), P51, DOI 10.1109/PIC.2014.6972294
   Brown DB, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P511, DOI 10.1145/3106237.3106280
   Chekam TT, 2017, PROC INT CONF SOFTW, P597, DOI 10.1109/ICSE.2017.61
   Christmansson J, 1996, DIG PAP INT SYMP FAU, P304, DOI 10.1109/FTCS.1996.534615
   DEERWESTER S, 1990, J AM SOC INFORM SCI, V41, P391, DOI 10.1002/(SICI)1097-4571(199009)41:6<391::AID-ASI1>3.0.CO;2-9
   Delamaro ME, 2001, IEEE T SOFTWARE ENG, V27, P228, DOI 10.1109/32.910859
   DEMILLO RA, 1978, COMPUTER, V11, P34, DOI 10.1109/C-M.1978.218136
   Durieux T, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P349, DOI 10.1109/SANER.2017.7884635
   Fellbaum C, 1998, LANG SPEECH & COMMUN, P1
   Fischer M, 2003, PROC IEEE INT CONF S, P23, DOI 10.1109/ICSM.2003.1235403
   Frakes WB., 1992, Information retrieval: Data structures and algorithms
   Frankl PG, 1997, J SYST SOFTWARE, V38, P235, DOI 10.1016/S0164-1212(96)00154-9
   Fraser G, 2013, IEEE T SOFTWARE ENG, V39, P276, DOI 10.1109/TSE.2012.14
   Gong DW, 2017, INFORM SOFTWARE TECH, V81, P82, DOI 10.1016/j.infsof.2016.05.001
   Hua JR, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P12, DOI 10.1145/3180155.3180245
   Jia Yue, 2016, P 25 INT S SOFTWARE, P354
   Jiang Y, 2015, 2015 INTERNATIONAL SYMPOSIUM ON BIOELECTRONICS AND BIOINFORMATICS (ISBB), P1, DOI 10.1109/ISBB.2015.7344908
   Just R, 2014, P 2014 INT S SOFTW T, P437, DOI DOI 10.1145/2610384.2628055
   Just R, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P654, DOI 10.1145/2635868.2635929
   Khanfir Ahmed, 2022, IBIR
   Kim D, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P802, DOI 10.1109/ICSE.2013.6606626
   KING KN, 1991, SOFTWARE PRACT EXPER, V21, P685, DOI 10.1002/spe.4380210704
   Kintis M, 2018, EMPIR SOFTW ENG, V23, P2426, DOI 10.1007/s10664-017-9582-5
   Koyuncu A, 2019, Arxiv, DOI arXiv:1902.02703
   Koyuncu A, 2020, EMPIR SOFTW ENG, V25, P1980, DOI 10.1007/s10664-019-09780-z
   Koyuncu A, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P314, DOI 10.1145/3338906.3338935
   Kui Liu, 2019, 2019 IEEE 26th International Conference on Software Analysis, Evolution and Reengineering (SANER). Proceedings, P1, DOI 10.1109/SANER.2019.8667970
   Kurtz B, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P571, DOI 10.1145/2950290.2950322
   Lanzaro Anna, 2015, SOFTWARE ENG MANAGEM, VP, P118
   Laurent T, 2017, IEEE INT CONF SOFTW, P430, DOI 10.1109/ICST.2017.47
   Le Goues C, 2019, COMMUN ACM, V62, P56, DOI 10.1145/3318162
   Li N, 2009, IEEE ICST WORKSHOP, P220, DOI 10.1109/ICSTW.2009.30
   Liblit B, 2005, ACM SIGPLAN NOTICES, V40, P15, DOI 10.1145/1064978.1065014
   Liu K, 2019, PROCEEDINGS OF THE 28TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA '19), P31, DOI 10.1145/3293882.3330577
   Liu K, 2021, IEEE T SOFTWARE ENG, V47, P165, DOI 10.1109/TSE.2018.2884955
   Lukins SK, 2010, INFORM SOFTWARE TECH, V52, P972, DOI 10.1016/j.infsof.2010.04.002
   Ma YS, 2005, SOFTW TEST VERIF REL, V15, P97, DOI 10.1002/stvr.308
   Manning C.D., 1999, FDN STAT NATURAL LAN
   Marcozzi M, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P456, DOI 10.1145/3180155.3180191
   Martinez M, 2018, LECT NOTES COMPUT SC, V11036, P65, DOI 10.1007/978-3-319-99241-9_3
   Maybury MT, 2005, KLUW S INF, V16, P99
   Mirshokraie S, 2015, IEEE T SOFTWARE ENG, V41, P429, DOI 10.1109/TSE.2014.2371458
   Mondal M, 2011, CONF PROC INT SYMP C, P242, DOI 10.1109/ICPC.2011.14
   Moon S, 2014, 2014 IEEE SEVENTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST), P153, DOI 10.1109/ICST.2014.28
   Natella R, 2013, IEEE T SOFTWARE ENG, V39, P80, DOI 10.1109/TSE.2011.124
   Offutt A. J., 1992, ACM Transactions on Software Engineering and Methodology, V1, P5, DOI 10.1145/125489.125473
   Offutt A. J., 1996, ACM Transactions on Software Engineering and Methodology, V5, P99, DOI 10.1145/227607.227610
   OFFUTT AJ, 1993, PROC INT CONF SOFTW, P100, DOI 10.1109/ICSE.1993.346062
   Offutt Jeff., 2006, Proceedings of the 2006 International Workshop on Automation of Software Test, P78, DOI DOI 10.1145/1138929.1138945
   Palix N, 2011, ACM SIGPLAN NOTICES, V46, P305, DOI 10.1145/1961296.1950401
   Papadakis M, 2019, ADV COMPUT, V112, P275, DOI 10.1016/bs.adcom.2018.03.015
   Papadakis M, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P537, DOI 10.1145/3180155.3180183
   Papadakis M, 2018, IEEE ICST WORKSHOP, P32, DOI 10.1109/ICSTW.2018.00025
   Papadakis M, 2015, SOFTW TEST VERIF REL, V25, P605, DOI 10.1002/stvr.1509
   Papadakis M, 2014, SCI COMPUT PROGRAM, V95, P298, DOI 10.1016/j.scico.2014.05.012
   Parnin C., 2011, P 2011 INT S SOFTWAR, P199, DOI [10.1145/2001420.2001445, DOI 10.1145/2001420.2001445]
   Qian G., 2004, P 2004 ACM S APPL CO, P1232
   Saha RK, 2017, IEEE INT CONF AUTOM, P648, DOI 10.1109/ASE.2017.8115675
   Saha RK, 2013, IEEE INT CONF AUTOM, P345, DOI 10.1109/ASE.2013.6693093
   Salton G, 1986, Introduction to Modern Information Retrieval
   Sun CA, 2017, INFORM SOFTWARE TECH, V81, P65, DOI 10.1016/j.infsof.2016.02.006
   Thomas SW, 2013, IEEE T SOFTWARE ENG, V39, P1427, DOI 10.1109/TSE.2013.27
   Chekam TT, 2020, EMPIR SOFTW ENG, V25, P434, DOI 10.1007/s10664-019-09778-7
   Tufano M, 2019, PROC IEEE INT CONF S, P301, DOI 10.1109/ICSME.2019.00046
   Vargha A, 2000, J EDUC BEHAV STAT, V25, P101, DOI 10.3102/10769986025002101
   Voas J, 1997, IEEE SOFTWARE, V14, P73, DOI 10.1109/52.595959
   Voas J.M., 1997, SOFTWARE FAULT INJEC
   Wen M, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1, DOI 10.1145/3180155.3180233
   Wen M, 2016, IEEE INT CONF AUTOM, P262, DOI 10.1145/2970276.2970359
   Wong CP, 2014, PROC IEEE INT CONF S, P181, DOI 10.1109/ICSME.2014.40
   Wong WE, 2016, IEEE T SOFTWARE ENG, V42, P707, DOI 10.1109/TSE.2016.2521368
   Wong WE, 2010, J SYST SOFTWARE, V83, P188, DOI 10.1016/j.jss.2009.09.037
   Yiling Lou, 2020, ISSTA '20: Proceedings of the 29th ACM SIGSOFT International Symposium on Software Testing and Analysis, P75, DOI 10.1145/3395363.3397351
   Youm KC, 2015, ASIA PAC SOFWR ENG, P190, DOI 10.1109/APSEC.2015.23
   Zhang J, 2019, IEEE T SOFTWARE ENG, V45, P898, DOI 10.1109/TSE.2018.2809496
   Zhang LM, 2013, IEEE INT CONF AUTOM, P92, DOI 10.1109/ASE.2013.6693070
   Zhou J, 2012, PROC INT CONF SOFTW, P14, DOI 10.1109/ICSE.2012.6227210
NR 82
TC 5
Z9 5
U1 3
U2 6
PU ASSOC COMPUTING MACHINERY
PI NEW YORK
PA 1601 Broadway, 10th Floor, NEW YORK, NY USA
SN 1049-331X
EI 1557-7392
J9 ACM T SOFTW ENG METH
JI ACM Trans. Softw. Eng. Methodol.
PD APR
PY 2023
VL 32
IS 2
AR 33
DI 10.1145/3542946
PG 31
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA D7OR1
UT WOS:000970588900006
OA Green Submitted, Green Published, Bronze
DA 2024-07-18
ER

PT J
AU Zeng, C
   Yu, Y
   Li, SS
   Xia, X
   Wang, ZM
   Geng, MY
   Bai, LX
   Dong, W
   Liao, XK
AF Zeng, Chen
   Yu, Yue
   Li, Shanshan
   Xia, Xin
   Wang, Zhiming
   Geng, Mingyang
   Bai, Linxiao
   Dong, Wei
   Liao, Xiangke
TI DEGraphCS: Embedding Variable-based Flow Graph for Neural Code Search
SO ACM TRANSACTIONS ON SOFTWARE ENGINEERING AND METHODOLOGY
LA English
DT Article
DE Intermediate representation; graph neural networks; code search; deep
   learning
AB With the rapid increase of public code repositories, developers maintain a great desire to retrieve precise code snippets by using natural language. Despite existing deep learning-based approaches that provide end-to-end solutions (i.e., accept natural language as queries and show related code fragments), the performance of code search in the large-scale repositories is still low in accuracy because of the code representation (e.g., AST) and modeling (e.g., directly fusing features in the attention stage).
   In this paper, we propose a novel learnable deep Graph for Code Search (called deGraphCS) to transfer source code into variable-based flow graphs based on an intermediate representation technique, which can model code semantics more precisely than directly processing the code as text or using the syntax tree representation. Furthermore, we propose a graph optimization mechanism to refine the code representation and apply an improved gated graph neural network to model variable-based flow graphs. To evaluate the effectiveness of deGraphCS, we collect a large-scale dataset from GitHub containing 41,152 code snippets written in the C language and reproduce several typical deep code search methods for comparison. The experimental results show that deGraphCS can achieve state-of-the-art performance and accurately retrieve code snippets satisfying the needs of the users.
C1 [Zeng, Chen; Yu, Yue; Li, Shanshan; Wang, Zhiming; Geng, Mingyang; Bai, Linxiao; Dong, Wei; Liao, Xiangke] Natl Univ Def Technol, Sch Comp, Changsha, Peoples R China.
   [Xia, Xin] Zhejiang Univ, Coll Comp Sci & Technol, Hangzhou, Peoples R China.
C3 National University of Defense Technology - China; Zhejiang University
RP Yu, Y; Li, SS (corresponding author), Natl Univ Def Technol, Sch Comp, Changsha, Peoples R China.
EM zengchen15@nudt.edu.cn; yuyue@nudt.edu.cn; shanshanli@nudt.edu.cn;
   xin.xia@acm.org; wangzhiming14@nudt.edu.cn; gengmingyang13@nudt.edu.cn;
   linxiao_b@nudt.edu.cn; wdong@nudt.edu.cn; xkliao@nudt.edu.cn
RI Li, Shan-Shan/JYO-4085-2024; Shan-Shan, Li/Q-9503-2017
OI Li, Shan-Shan/0000-0002-9346-2364; Yu, Yue/0000-0002-9865-2212; Dong,
   Wei/0000-0002-8033-7943; Xia, Xin/0000-0002-6302-3256; Geng,
   Mingyang/0000-0002-7239-1819
FU National Key R&D Program of China [2020AAA0103504]; National Natural
   Science Foundation of China [61690203, 61872373]; Major Key Project of
   PCL
FX This work is supported by National Key R&D Program of China
   (2020AAA0103504), National Natural Science Foundation of China (No.
   61690203 and No. 61872373), and the Major Key Project of PCL.
CR Nguyen AT, 2012, PROC INT CONF SOFTW, P1407, DOI 10.1109/ICSE.2012.6227236
   Bahdanau D, 2016, Arxiv, DOI [arXiv:1409.0473, 10.48550/arXiv.1409.0473]
   Bajracharya S., 2006, COMP 21 ACM SIGPLAN, P681, DOI DOI 10.1145/1176617.1176671
   Ben-Nun T., 2018, Advances in Neural Information Processing Systems, P3589
   Brandt J, 2010, CHI2010: PROCEEDINGS OF THE 28TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, VOLS 1-4, P513
   Cai L, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P1075, DOI 10.1145/3338906.3341174
   Caldeira PM, 2020, INT WORKS SOFTW CLON, P8, DOI [10.1109/IWSC50091.2020.9047637, 10.3929/ethz-b-000396812]
   Cambronero J, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P964, DOI 10.1145/3338906.3340458
   Campbell BA, 2017, PROC IEEE INT CONF S, P628, DOI 10.1109/ICSME.2017.56
   Chan W., 2012, PROC ACM SIGSOFT 20, P1, DOI DOI 10.1145/2393596.2393606
   Chen QY, 2018, IEEE INT CONF AUTOM, P826, DOI 10.1145/3238147.3240471
   Chen XY, 2018, 32 C NEURAL INFORM P, V31
   Chung Junyoung, 2014, ARXIV14123555
   CYTRON R, 1991, ACM T PROGR LANG SYS, V13, P451, DOI 10.1145/115372.115320
   DeFreez D, 2018, Arxiv, DOI arXiv:1802.07779
   Devlin J, 2019, Arxiv, DOI arXiv:1810.04805
   Dietrich T, 2013, IEEE INT CONF AUTOM, P586, DOI 10.1109/ASE.2013.6693117
   Feng ZY, 2020, FINDINGS OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, EMNLP 2020, P1536
   Gu WC, 2021, NEURAL NETWORKS, V141, P385, DOI 10.1016/j.neunet.2021.04.019
   Gu XD, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P933, DOI 10.1145/3180155.3180167
   Gu XD, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P631, DOI 10.1145/2950290.2950334
   Haiduc S, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P842, DOI 10.1109/ICSE.2013.6606630
   Haldar R, 2020, Arxiv, DOI arXiv:2005.06980
   Henkel J, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P163, DOI 10.1145/3236024.3236085
   Hill E., 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P524, DOI 10.1109/ASE.2011.6100115
   Hill E, 2014, 2014 SOFTWARE EVOLUTION WEEK - IEEE CONFERENCE ON SOFTWARE MAINTENANCE, REENGINEERING, AND REVERSE ENGINEERING (CSMR-WCRE), P34, DOI 10.1109/CSMR-WCRE.2014.6747190
   Hoan AN, 2010, ACM SIGPLAN NOTICES, V45, P302, DOI 10.1145/1932682.1869486
   Hochreiter S, 1997, NEURAL COMPUT, V9, P1735, DOI [10.1162/neco.1997.9.1.1, 10.1007/978-3-642-24797-2]
   Holmes R, 2009, PROC IEEE INT CONF S, P555, DOI 10.1109/ICSM.2009.5306387
   Hu X, 2018, INT C PROGRAM COMPRE, P200, DOI 10.1145/3196321.3196334
   Huang Q, 2018, IEEE INT CONF AUTOM, P293, DOI 10.1145/3238147.3238191
   Husain H, 2020, Arxiv, DOI arXiv:1909.09436
   Husain Hamel, 2018, How To Create Natural Language Semantic Search For Arbitrary Objects With Deep Learning
   Husain Hamel, 2018, NATURAL LANGUAGE SEM
   Keivanloo I, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P664, DOI 10.1145/2568225.2568292
   Dam HK, 2016, Arxiv, DOI arXiv:1608.02715
   Lattner C, 2004, INT SYM CODE GENER, P75, DOI 10.1109/CGO.2004.1281665
   Lemos OAL, 2011, INFORM SOFTWARE TECH, V53, P294, DOI 10.1016/j.infsof.2010.11.009
   Lemos O.A. L., 2014, Proceedings of the 11th Working Conference on Mining Software Repositories, P212, DOI DOI 10.1145/2597073.2597087
   Lemos O.A. L., 2007, COMPANION 22 ACM SIG, P917, DOI [10.1145/1297846.1297944, DOI 10.1145/1297846.1297944]
   Li X, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P690, DOI 10.1145/2950290.2950341
   Li YJ, 2017, Arxiv, DOI arXiv:1511.05493
   Li Zhixing, 2021, IEEE T SOFTWARE ENG
   Li Zhixing, 2020, IEEE Transactions on Software Engineering
   Loshchilov I, 2019, Arxiv, DOI arXiv:1711.05101
   Lu ML, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P545, DOI 10.1109/SANER.2015.7081874
   Lv F, 2015, IEEE INT CONF AUTOM, P260, DOI 10.1109/ASE.2015.42
   McMillan C, 2012, IEEE T SOFTWARE ENG, V38, P1069, DOI 10.1109/TSE.2011.84
   McMillan C, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P111, DOI 10.1145/1985793.1985809
   Mou LL, 2015, Arxiv, DOI arXiv:1409.5718
   Mover S, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P277, DOI 10.1109/SANER.2018.8330216
   Nguyen TT, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P383, DOI 10.1145/1595696.1595767
   Piech C, 2015, Arxiv, DOI arXiv:1505.05969
   Raychev V, 2014, ACM SIGPLAN NOTICES, V49, P419, DOI [10.1145/2594291.2594321, 10.1145/2666356.2594321]
   Reiss SP, 2009, PROC INT CONF SOFTW, P243, DOI 10.1109/ICSE.2009.5070525
   Sachdev S, 2018, MAPL'18: PROCEEDINGS OF THE 2ND ACM SIGPLAN INTERNATIONAL WORKSHOP ON MACHINE LEARNING AND PROGRAMMING LANGUAGES, P31, DOI 10.1145/3211346.3211353
   Schäfer A, 2020, 2020 IEEE INTERNATIONAL CONFERENCE ON AUTONOMIC COMPUTING AND SELF-ORGANIZING SYSTEMS COMPANION (ACSOS-C 2020), P206, DOI 10.1109/ACSOS-C51401.2020.00057
   Tai KS, 2015, Arxiv, DOI arXiv:1503.00075
   Shuai Jianhang, 2020, 28 INT C PROGRAM COM
   Stolee KT, 2012, PROC INT CONF SOFTW, P1571, DOI 10.1109/ICSE.2012.6227034
   Su FH, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P702, DOI 10.1145/2950290.2950321
   Sui YL, 2020, P ACM PROGRAM LANG, V4, DOI 10.1145/3428301
   Tufano M, 2018, IEEE WORK CONF MIN S, P542, DOI 10.1145/3196398.3196431
   Wan Y, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P13, DOI 10.1109/ASE.2019.00012
   Wan Y, 2018, IEEE INT CONF AUTOM, P397, DOI 10.1145/3238147.3238206
   Wang CZ, 2022, NEURAL NETWORKS, V145, P22, DOI 10.1016/j.neunet.2021.09.025
   Wang S., 2014, ACM/IEEE International Conference on Automated Software Engineering, ASE '14, Vasteras, Sweden - September 15 - 19, 2014, P677
   Wang WH, 2020, PROCEEDINGS OF THE 2020 IEEE 27TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER '20), P261, DOI [10.1109/SANER48275.2020.9054857, 10.1109/saner48275.2020.9054857]
   Wang Y, 2021, 2021 CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING (EMNLP 2021), P8696
   Wei HH, 2017, PROCEEDINGS OF THE TWENTY-SIXTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P3034
   White M, 2016, IEEE INT CONF AUTOM, P87, DOI 10.1145/2970276.2970326
NR 71
TC 5
Z9 6
U1 0
U2 3
PU ASSOC COMPUTING MACHINERY
PI NEW YORK
PA 1601 Broadway, 10th Floor, NEW YORK, NY USA
SN 1049-331X
EI 1557-7392
J9 ACM T SOFTW ENG METH
JI ACM Trans. Softw. Eng. Methodol.
PD APR
PY 2023
VL 32
IS 2
AR 34
DI 10.1145/3546066
PG 27
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA D7OR1
UT WOS:000970588900007
DA 2024-07-18
ER

PT J
AU Pantiuchina, J
   Lin, B
   Zampetti, F
   Di Penta, M
   Lanza, M
   Bavota, G
AF Pantiuchina, Jevgenija
   Lin, Bin
   Zampetti, Fiorella
   Di Penta, Massimiliano
   Lanza, Michele
   Bavota, Gabriele
TI Why Do Developers Reject Refactorings in Open-Source Projects?
SO ACM TRANSACTIONS ON SOFTWARE ENGINEERING AND METHODOLOGY
LA English
DT Article
DE Refactoring; empirical software engineering
AB Refactoring operations are behavior-preserving changes aimed at improving source code quality. While refactoring is largely considered a good practice, refactoring proposals in pull requests are often rejected after the code review. Understanding the reasons behind the rejection of refactoring contributions can shed light on how such contributions can be improved, essentially benefiting software quality.
   This article reports a study in which we manually coded rejection reasons inferred from 330 refactoringrelated pull requests from 207 open-source Java projects. We surveyed 267 developers to assess their perceived prevalence of these identified rejection reasons, further complementing the reasons.
   Our study resulted in a comprehensive taxonomy consisting of 26 refactoring-related rejection reasons and 21 process-related rejection reasons. The taxonomy, accompanied with representative examples and highlighted implications, provides developers with valuable insights on how to ponder and polish their refactoring contributions, and indicates a number of directions researchers can pursue toward better refactoring recommenders.
C1 [Pantiuchina, Jevgenija; Lin, Bin; Lanza, Michele; Bavota, Gabriele] Univ Svizzera Italiana, Software Inst, CH-6900 Lugano, Switzerland.
   [Zampetti, Fiorella; Di Penta, Massimiliano] Univ Sannio, I-82100 Benevento, BN, Italy.
C3 Universita della Svizzera Italiana; University of Sannio
RP Pantiuchina, J (corresponding author), Univ Svizzera Italiana, Software Inst, CH-6900 Lugano, Switzerland.
EM jevgenija.pantiuchina@usi.ch; bin.lin@usi.ch;
   fiorellazampetti@gmail.com; dipenta@unisannio.it; michele.lanza@usi.ch;
   gabriele.bavota@usi.ch
RI Lanza, Michele/JNQ-9470-2023
OI Lanza, Michele/0000-0003-4391-0197; BAVOTA, Gabriele/0000-0002-2216-3148
FU Swiss National Science foundation through SNF [172479, 183587]
FX We are grateful for the financial support by the Swiss National Science
   foundation through SNF Project JITRA (172479) and SENSOR (183587).
CR Aghajani E, 2020, PROC INT CONF SOFTW, P590, DOI 10.1145/3377811.3380405
   Alshayeb M, 2009, INFORM SOFTWARE TECH, V51, P1319, DOI 10.1016/j.infsof.2009.04.002
   [Anonymous], 2015, AUST J EMERG MANAG, V30, P9
   [Anonymous], 2016, APACHE DRUID PULL RE
   [Anonymous], INRIA SPOON PULL REQ
   [Anonymous], 2018, ABOUT US
   [Anonymous], 2020, MICRONAUT PROJECTS M
   [Anonymous], 2021, Replication Package
   [Anonymous], UNIVERSALMEDIASERVER
   Bavota G., 2012, 2012 12th IEEE Working Conference on Source Code Analysis and Manipulation (SCAM 2012), P104, DOI 10.1109/SCAM.2012.20
   Bavota Gabriele, 2012, Search Based Software Engineering. Proceedings of the 4th International Symposium (SSBSE 2012), P75, DOI 10.1007/978-3-642-33119-0_7
   Bavota G., 2014, Recommendation Systems in Software Engineering, P387
   Bavota G, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 5, P1, DOI 10.1109/SANER.2016.47
   Bavota G, 2015, J SYST SOFTWARE, V107, P1, DOI 10.1016/j.jss.2015.05.024
   Bavota G, 2014, EMPIR SOFTW ENG, V19, P1617, DOI 10.1007/s10664-013-9256-x
   BENJAMINI Y, 1995, J R STAT SOC B, V57, P289, DOI 10.1111/j.2517-6161.1995.tb02031.x
   Borges H, 2018, J SYST SOFTWARE, V146, P112, DOI 10.1016/j.jss.2018.09.016
   Chávez A, 2017, XXXI BRAZILIAN SYMPOSIUM ON SOFTWARE ENGINEERING (SBES 2017), P74, DOI 10.1145/3131151.3131171
   CheckStyle, CHECKSTYLE
   Chen D, 2019, INT C PROGRAM COMPRE, P179, DOI 10.1109/ICPC.2019.00037
   Fowler M., 1999, Refactoring: Improving the Design of Existing Code
   Ge X, 2017, S VIS LANG HUM CEN C, P71, DOI 10.1109/VLHCC.2017.8103453
   Gerrit, ABOUT US
   Gousios G, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P345, DOI 10.1145/2568225.2568260
   Groves R.M., 2004, Survey Methodology
   Hall M, 2014, PROC IEEE INT CONF S, P466, DOI 10.1109/ICSME.2014.75
   Hall M, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P472, DOI 10.1109/ICSM.2012.6405309
   Iyer RN, 2021, IEEE T SOFTWARE ENG, V47, P2632, DOI 10.1109/TSE.2019.2960357
   Khomh F, 2008, CSMR 2008: 12TH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, P274
   Kim M., 2012, P ACM SIGSOFT 20 INT, P1
   Kitchenham B., 2002, Software Engineering Notes, V27, P20, DOI 10.1145/638574.638580
   Kitchenham B., 2002, ACM SIGSOFT Softw. Eng. Notes, V27, P17
   Kitchenham B.A., 2002, ACM SIGSOFT Software Engineering Notes, V27, P18, DOI [DOI 10.1145/566493.566495, 10.1145/566493.566495]
   Krein JL, 2016, IEEE T SOFTWARE ENG, V42, P302, DOI 10.1109/TSE.2015.2488625
   Lenarduzzi Valentina, 2019, ARXIV190809321
   Mahmoudi M, 2019, 2019 IEEE 26TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER), P151, DOI [10.1109/saner.2019.8668012, 10.1109/SANER.2019.8668012]
   Maruyajna K, 2008, ASIA PAC SOFWR ENG, P445, DOI 10.1109/APSEC.2008.57
   Moser R, 2008, LECT NOTES COMPUT SC, V5082, P252
   Murphy-Hill E, 2012, IEEE T SOFTWARE ENG, V38, P5, DOI 10.1109/TSE.2011.41
   Newcombe RG, 1998, STAT MED, V17, P873, DOI 10.1002/(SICI)1097-0258(19980430)17:8<873::AID-SIM779>3.0.CO;2-I
   Oppenheim A.N., 1992, QUESTIONNAIRE DESIGN
   Paixao M, 2020, IEEE WORK CONF MIN S, P125, DOI 10.1145/3379597.3387475
   Pantiuchina J, 2020, ACM T SOFTW ENG METH, V29, DOI 10.1145/3408302
   Peruma Anthony, 2018, P 2 INT W REF MONTP, P26, DOI DOI 10.1145/3242163.3242169
   Pfleeger Shari Lawrence, 2001, ACM SIGSOFT Software Engineering Notes, V26, P16, DOI DOI 10.1145/505532.505535
   Robillard MP, 2017, PROC IEEE INT CONF S, P479, DOI 10.1109/ICSME.2017.17
   Rosner B., 2011, FUNDAMENTALS BIOSTAT
   Sahin Cagri., 2014, Proceedings of the 8th ACM/IEEE International Symposium on Empirical Software Engineering and Measurement, p36:1, DOI 10.1145/2652524.2652538
   Silva D, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P858, DOI 10.1145/2950290.2950305
   Soares DM, 2015, 30TH ANNUAL ACM SYMPOSIUM ON APPLIED COMPUTING, VOLS I AND II, P1541, DOI 10.1145/2695664.2695856
   Soares G, 2013, IEEE T SOFTWARE ENG, V39, P147, DOI 10.1109/TSE.2012.19
   Spencer D., 2009, CARD SORTING DESIGNI
   Stroggylos Konstantinos, 2007, Fifth International Workshop on Software Quality (WoSQ'07: ICSE Workshops 2007), P1, DOI 10.1109/WOSQ.2007.11
   Szoke G, 2014, IEEE INT WORK C SO, P95, DOI 10.1109/SCAM.2014.18
   Tsantalis N, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P483, DOI 10.1145/3180155.3180206
   Tsantalis N, 2009, IEEE T SOFTWARE ENG, V35, P347, DOI 10.1109/TSE.2009.1
   Tsay J, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P356, DOI 10.1145/2568225.2568315
   Vasilescu B, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P805, DOI 10.1145/2786805.2786850
   Vassallo C, 2019, SCI COMPUT PROGRAM, V180, P1, DOI 10.1016/j.scico.2019.05.002
   Wang Y, 2009, PROC IEEE INT CONF S, P413, DOI 10.1109/ICSM.2009.5306290
   Wendorff P, 2001, FIFTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P77, DOI 10.1109/CSMR.2001.914971
NR 61
TC 1
Z9 1
U1 1
U2 3
PU ASSOC COMPUTING MACHINERY
PI NEW YORK
PA 1601 Broadway, 10th Floor, NEW YORK, NY USA
SN 1049-331X
EI 1557-7392
J9 ACM T SOFTW ENG METH
JI ACM Trans. Softw. Eng. Methodol.
PD APR
PY 2022
VL 31
IS 2
AR 23
DI 10.1145/3487062
PG 23
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 1L3NY
UT WOS:000799199600007
DA 2024-07-18
ER

PT J
AU Menéndez, HD
   Jahangirova, G
   Sarro, F
   Tonella, P
   Clark, D
AF Menendez, Hector D.
   Jahangirova, Gunel
   Sarro, Federica
   Tonella, Paolo
   Clark, David
TI Diversifying Focused Testing for Unit Testing
SO ACM TRANSACTIONS ON SOFTWARE ENGINEERING AND METHODOLOGY
LA English
DT Article
DE Testing; focused testing; GodelTest; diversity; DFT
AB Software changes constantly, because developers add new features or modifications. This directly affects the effectiveness of the test suite associated with that software, especially when these new modifications are in a specific area that no test case covers. This article tackles the problem of generating a high-quality test suite to cover repeatedly a given point in a program, with the ultimate goal of exposing faults possibly affecting the given program point. Both search-based software testing and constraint solving offer ready, but low-quality, solutions to this: Ideally, a maximally diverse covering test set is required, whereas search and constraint solving tend to generate test sets with biased distributions. Our approach, Diversified Focused Testing (DFT), uses a search strategy inspired by GodelTest. We artificially inject parameters into the code branching conditions and use a bi-objective search algorithm to find diverse inputs by perturbing the injected parameters, while keeping the path conditions still satisfiable. Our results demonstrate that our technique, DFT, is able to cover a desired point in the code at least 90% of the time. Moreover, adding diversity improves the bug detection and themutation killing abilities of the test suites. We show that DFT achieves better results than focused testing, symbolic execution, and random testing by achieving from 3% to 70% improvement in mutation score and up to 100% improvement in fault detection across 105 software subjects.
C1 [Menendez, Hector D.] Middlesex Univ London, London NW4 4BG, England.
   [Jahangirova, Gunel; Tonella, Paolo] Univ Svizzera Italiana, Via Buffi, CH-6900 Lugano, Svizzera, Switzerland.
   [Sarro, Federica; Clark, David] UCL, Gower St, London WC1E 6BT, England.
C3 Middlesex University; Universita della Svizzera Italiana; University of
   London; University College London
RP Menéndez, HD (corresponding author), Middlesex Univ London, London NW4 4BG, England.
EM h.menendez@mdx.ac.uk; gunel.jahangirova@usi.ch; f.sarro@ucl.ac.uk;
   paolo.tonella@usi.ch; david.clark@ucl.ac.uk
RI Tonella, Paolo/C-1702-2015; Menendez, Hector/C-1883-2014
OI Sarro, Federica/0000-0002-9146-442X; Clark, David/0000-0002-7004-934X;
   Menendez, Hector/0000-0002-6314-3725
FU EPSRC SeMaMatch Grant [EP/K032623/1]; ERC Advanced fellowship EPIC
   [741278]; NVIDIA Corporation; EPSRC InfoTestSS Grant [EP/P005888/1];
   EPSRC [EP/P005888/1, EP/K032623/1] Funding Source: UKRI
FX This research was funded by the EPSRC InfoTestSS Grant No. EP/P005888/1,
   the EPSRC SeMaMatch Grant No. EP/K032623/1, and the ERC Advanced
   fellowship EPIC Grant No. 741278. We gratefully acknowledge the support
   of NVIDIA Corporation with the donation of the Titan V GPU used for this
   research.
CR Alshahwan N., 2014, Proceedings of the 2014 International Symposium on Software Testing and Analysis, P181
   Alshahwan N, 2012, PROC INT CONF SOFTW, P1345, DOI 10.1109/ICSE.2012.6227083
   Anand S, 2013, J SYST SOFTWARE, V86, P1978, DOI 10.1016/j.jss.2013.02.061
   Androutsopoulos K, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P573, DOI 10.1145/2568225.2568314
   [Anonymous], 2016, P 25 INT S SOFTW TES, DOI DOI 10.1145/2931037.2931056
   [Anonymous], 2001, TECH REP GLORIASTRAS, DOI DOI 10.3929/ETHZ-A-004284029
   [Anonymous], 2011, Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics), DOI [DOI 10.1007/978-3-642-22670-0_9, DOI 10.1007/978-3-642-22670-0.9]
   Augeletti D, 2009, LECT NOTES COMPUT SC, V5717, P287, DOI 10.1007/978-3-642-04772-5_38
   Barrett C., 2010, P 8 INT WORKSHOP SAT, V13, P14
   Chakraborty Supratik, 2015, Tools and Algorithms for the Construction and Analysis of Systems. 21st International Conference, TACAS 2015, held as part of the European Joint Conferences on Theory and Practice of Software, ETAPS 2015. Proceedings: LNCS 9035, P304, DOI 10.1007/978-3-662-46681-0_25
   Chakraborty S, 2016, AAAI CONF ARTIF INTE, P3218
   Chakraborty S, 2013, LECT NOTES COMPUT SC, V8124, P200, DOI 10.1007/978-3-642-40627-0_18
   Chan S.-O., 2014, P 25 ANN ACMSIAM S D, P1193
   Chawathe S. S., 1996, SIGMOD Record, V25, P493, DOI 10.1145/235968.233366
   Chen TY, 2010, J SYST SOFTWARE, V83, P60, DOI 10.1016/j.jss.2009.02.022
   CHOULAKIAN V, 1994, CAN J STAT, V22, P125, DOI 10.2307/3315828
   Cover T. M., 2012, ELEMENTS INFORM THEO
   de Moura L, 2008, LECT NOTES COMPUT SC, V4963, P337, DOI 10.1007/978-3-540-78800-3_24
   Diakonikolas Ilias, 2016, COLLISION BASED TEST
   Feldt R, 2016, IEEE INT CONF SOFTW, P223, DOI 10.1109/ICST.2016.33
   Feldt R, 2013, PROC INT SYMP SOFTW, P350, DOI 10.1109/ISSRE.2013.6698888
   Fonseca CM, 2006, IEEE C EVOL COMPUTAT, P1142
   Fraser G., 2011, Proceedings of the 11th International Conference on Quality Software (QSIC 2011), P31, DOI 10.1109/QSIC.2011.19
   Fraser G, 2013, IEEE T SOFTWARE ENG, V39, P276, DOI 10.1109/TSE.2012.14
   Fraser Gordon, 2011, PROC 19 ACM SIGSOFT, P416, DOI 10.1145/2025113.2025179
   Gay G, 2017, IEEE INT CONF SOFTW, P345, DOI 10.1109/ICST.2017.38
   Gomes C.P., 2007, Advances in Neural Information Processing Systems 19, P481
   Gotlieb A, 2010, J SYST SOFTWARE, V83, P2618, DOI 10.1016/j.jss.2010.08.021
   Havelund K., 2000, Int. J. Softw. Tools Technol. Transfer, V2, P366, DOI [DOI 10.1007/S100090050043, 10.1007/s100090050043]
   Hollander M., 1973, NONPARAMETRIC STAT M
   Jia Y, 2008, TACI PART 2008:TESTING: ACADEMIC AND INDUSTRIAL CONFERENCE PRACTICE AND RESEARCH TECHNIQUES, PROCEEDINGS, P94, DOI 10.1109/TAIC-PART.2008.18
   Kim J, 2017, LECT NOTES COMPUT SC, V10452, P143, DOI 10.1007/978-3-319-66299-2_12
   Kroening D., 2014, CBMC-C bounded model checker, P389, DOI DOI 10.1007/978-3-642-54862-8_26
   Li MQ, 2018, 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: NEW IDEAS AND EMERGING TECHNOLOGIES RESULTS (ICSE-NIER), P17, DOI 10.1145/3183399.3183405
   Marhuenda Y, 2005, STATISTICS-ABINGDON, V39, P315, DOI 10.1080/02331880500178562
   Masri Wes, 2010, Proceedings of the Third IEEE International Conference on Software Testing, Verification and Validation (ICST 2010), P165, DOI 10.1109/ICST.2010.22
   Masri W, 2014, ACM T SOFTW ENG METH, V23, DOI 10.1145/2559932
   Masri Wes., 2009, Proceedings of the 2Nd International Workshop on Defects in Large Software Systems: Held in Conjunction with the ACM SIGSOFT International Symposium on Software Testing and Analysis (ISSTA 2009), DEFECTS '09, P1
   Matinnejad R, 2016, PROC INT CONF SOFTW, P595, DOI 10.1145/2884781.2884797
   Pacheco Carlos, 2007, COMPANION 22 ACM SIG, P815, DOI DOI 10.1145/1297846.1297902
   PLACKETT RL, 1983, INT STAT REV, V51, P59, DOI 10.2307/1402731
   Poulding S, 2014, GECCO'14: PROCEEDINGS OF THE 2014 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P1279, DOI 10.1145/2576768.2598339
   R Development Core Team, 2021, R LANG ENV STAT COMP
   Rothermel Gregg, 2006, SOFTWARE ARTIFACT IN
   Rubinstein RYK., 2016, SIMULATION MONTE CAR, DOI [10.1002/9781118631980, DOI 10.1002/9781118631980]
   Sarro F, 2017, IEEE T SOFTWARE ENG, V43, P898, DOI 10.1109/TSE.2017.2650914
   Sarro F, 2016, PROC INT CONF SOFTW, P619, DOI 10.1145/2884781.2884830
   Saxena P, 2010, P IEEE S SECUR PRIV, P513, DOI 10.1109/SP.2010.38
   Sen K, 2007, P 22 IEEE ACM INT C, P571, DOI DOI 10.1145/1321631.1321746
   Shamshiri S, 2015, IEEE INT CONF AUTOM, P201, DOI 10.1109/ASE.2015.86
   Shi QK, 2016, IEEE T RELIAB, V65, P19, DOI 10.1109/TR.2015.2434953
   Sinz Carsten, 2010, P 5 INT C SYST SOFTW, P7
   Smite D, 2008, 2008 3RD IEEE INTERNATIONAL CONFERENCE GLOBAL SOFTWARE ENGINEERING, PROCEEDINGS, P173, DOI 10.1109/ICGSE.2008.22
   Sobreira V, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P130, DOI 10.1109/SANER.2018.8330203
   Steele M, 2005, MODSIM 2005: INTERNATIONAL CONGRESS ON MODELLING AND SIMULATION: ADVANCES AND APPLICATIONS FOR MANAGEMENT AND DECISION MAKING, P1300
   Tan SH, 2017, PROC IEEE ACM INT C, P180, DOI 10.1109/ICSE-C.2017.76
   Wang XM, 2009, PROC INT CONF SOFTW, P45, DOI 10.1109/ICSE.2009.5070507
   Wong MY, 2016, 23RD ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2016), DOI 10.14722/ndss.2016.23118
   Yi J, 2018, EMPIR SOFTW ENG, V23, P2948, DOI 10.1007/s10664-017-9552-y
   ZHANG KZ, 1989, SIAM J COMPUT, V18, P1245, DOI 10.1137/0218082
NR 60
TC 7
Z9 7
U1 0
U2 1
PU ASSOC COMPUTING MACHINERY
PI NEW YORK
PA 1601 Broadway, 10th Floor, NEW YORK, NY USA
SN 1049-331X
EI 1557-7392
J9 ACM T SOFTW ENG METH
JI ACM Trans. Softw. Eng. Methodol.
PD JUL
PY 2021
VL 30
IS 4
AR 44
DI 10.1145/3447265
PG 24
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA TX4DP
UT WOS:000683039100004
OA Green Published
DA 2024-07-18
ER

PT J
AU Zhao, GL
   Hassan, S
   Zou, Y
   Truong, D
   Corbin, T
AF Zhao, Guoliang
   Hassan, Safwat
   Zou, Ying
   Truong, Derek
   Corbin, Toby
TI Predicting Performance Anomalies in Software Systems at Run-time
SO ACM TRANSACTIONS ON SOFTWARE ENGINEERING AND METHODOLOGY
LA English
DT Article
DE Performance anomaly prediction; LSTM neural network; software systems
AB High performance is a critical factor to achieve and maintain the success of a software system. Performance anomalies represent the performance degradation issues (e.g., slowing down in system response times) of software systems at run-time. Performance anomalies can cause a dramatically negative impact on users' satisfaction. Prior studies propose different approaches to detect anomalies by analyzing execution logs and resource utilization metrics after the anomalies have happened. However, the prior detection approaches cannot predict the anomalies ahead of time; such limitation causes an inevitable delay in taking corrective actions to prevent performance anomalies from happening. We propose an approach that can predict performance anomalies in software systems and raise anomaly warnings in advance. Our approach uses a Long-Short Term Memory neural network to capture the normal behaviors of a software system. Then, our approach predicts performance anomalies by identifying the early deviations from the captured normal system behaviors. We conduct extensive experiments to evaluate our approach using two real-world software systems (i.e., Elasticsearch and Hadoop). We compare the performance of our approach with two baselines. The first baseline is one state-to-the-art baseline called Unsupervised Behavior Learning. The second baseline predicts performance anomalies by checking if the resource utilization exceeds pre-defined thresholds. Our results show that our approach can predict various performance anomalies with high precision (i.e., 97-100%) and recall (i.e., 80-100%), while the baselines achieve 25-97% precision and 93-100% recall. For a range of performance anomalies, our approach can achieve sufficient lead times that vary from 20 to 1,403 s (i.e., 23.4 min). We also demonstrate the ability of our approach to predict the performance anomalies that are caused by real-world performance bugs. For predicting performance anomalies that are caused by real-world performance bugs, our approach achieves 95-100% precision and 87-100% recall, while the baselines achieve 49-83% precision and 100% recall. The obtained results show that our approach outperforms the existing anomaly prediction approaches and is able to predict performance anomalies in real-world systems.
C1 [Zhao, Guoliang] Queens Univ, Sch Comp, Kingston, ON, Canada.
   [Hassan, Safwat] Thompson Rivers Univ, Dept Engn, Kamloops, BC, Canada.
   [Zou, Ying] Dept Elect & Comp Engn, Kingston, ON, Canada.
   [Truong, Derek] IBM Corp, Markham, ON, Canada.
   [Corbin, Toby] IBM Corp, Southampton, Hants, England.
C3 Queens University - Canada; International Business Machines (IBM);
   International Business Machines (IBM)
RP Zhao, GL (corresponding author), Queens Univ, Sch Comp, Kingston, ON, Canada.
EM 17gz2@cs.queensu.ca; shassan@tru.ca; ying.zou@queensu.ca;
   trong@ca.ibm.com; corbint@uk.ibm.com
RI Zou, Ying/KLC-9380-2024; Hassan, Safwat/JWP-1498-2024
OI Zhao, Guoliang/0000-0003-0152-5100
CR [Anonymous], 2013, P 29 ANN COMP SEC AP, DOI DOI 10.1145/2523649.2523670
   [Anonymous], 2015, ARXIV151108630
   [Anonymous], 1997, NEURAL COMPUT
   [Anonymous], Amazon EC2 Instance Types
   Apache, AP HAD RAND TEXTWR A
   Apache, AP HAD SYST
   Barham P, 2004, USENIX ASSOCIATION PROCEEDINGS OF THE SIXTH SYMPOSIUM ON OPERATING SYSTEMS DESIGN AND IMPLEMENTATION (OSDE '04), P259
   Berner S, 2005, PROC INT CONF SOFTW, P571
   Chaudhry SA, 2017, PEER PEER NETW APPL, V10, P1, DOI 10.1007/s12083-015-0400-9
   Chen M, 2004, INTERNATIONAL CONFERENCE ON AUTONOMIC COMPUTING, PROCEEDINGS, P36, DOI 10.1109/ICAC.2004.1301345
   Cherkasova L, 2008, I C DEPEND SYS NETWO, P452, DOI 10.1109/DSN.2008.4630116
   Cohen I., 2005, Proceedings of the twentieth ACM symposium on Operating systems principles, SOSP '05, (New York, NY, USA), P105, DOI DOI 10.1145/1095810.1095821
   Dean D., 2012, ICAC
   Du M, 2017, CCS'17: PROCEEDINGS OF THE 2017 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P1285, DOI 10.1145/3133956.3134015
   Du M, 2016, IEEE DATA MINING, P859, DOI [10.1109/ICDM.2016.0103, 10.1109/ICDM.2016.160]
   Elastic, RALLY
   ElasticSearch, ELASTICSEARCH
   ElasticSearch, EL REF
   Erlingsson U, 2012, ACM T COMPUT SYST, V30, DOI 10.1145/2382553.2382555
   Fox Armando, 2008, P SYST MOD LANG C SY
   Fu QA, 2009, IEEE DATA MINING, P149, DOI 10.1109/ICDM.2009.60
   Gao Z, 2006, I C DEPEND SYS NETWO, P259
   Gu XH, 2009, PROC INT CONF DATA, P1000, DOI 10.1109/ICDE.2009.128
   He PJ, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON WEB SERVICES (ICWS 2017), P33, DOI 10.1109/ICWS.2017.13
   Hermans M., 2013, Advances in neural information processing systems, V26
   Huang, 2016, P IEEE GLOB COMM C, P1
   IBM, IBM JAV
   Jiang GF, 2006, IEEE T DEPEND SECURE, V3, P312, DOI 10.1109/TDSC.2006.52
   Jiang GF, 2006, CLUSTER COMPUT, V9, P385, DOI 10.1007/s10586-006-0008-1
   Jiang M, 2009, ACM/IEEE SIXTH INTERNATIONAL CONFERENCE ON AUTONOMIC COMPUTING AND COMMUNICATIONS (ICAC '09), P13
   Jiang M, 2009, I C DEPEND SYS NETWO, P285, DOI 10.1109/DSN.2009.5270324
   Jin GL, 2012, ACM SIGPLAN NOTICES, V47, P77, DOI 10.1145/2345156.2254075
   JustGlowing, MINISOM MIN IMPL SEL
   Keogh E, 2005, Fifth IEEE International Conference on Data Mining, Proceedings, P226, DOI 10.1109/ICDM.2005.79
   keras, Keras: the Python deep learning API
   King DB, 2015, ACS SYM SER, V1214, P1
   Kunjir Mayuresh., 2016, where does memory go?: Study of memory management in jvm-based data analytics
   Liang YL, 2007, IEEE DATA MINING, P583, DOI 10.1109/ICDM.2007.46
   Lin QW, 2016, 2016 IEEE/ACM 38TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING COMPANION (ICSE-C), P102, DOI 10.1145/2889160.2889232
   Lissandrini M, 2018, PROC VLDB ENDOW, V12, P390, DOI 10.14778/3297753.3297759
   Lou J, 2010, PROTEIN ENG DES SEL, V23, P311, DOI 10.1093/protein/gzq001
   Makanju A, 2012, IEEE T KNOWL DATA EN, V24, P1921, DOI 10.1109/TKDE.2011.138
   Malhotra P., 2016, ABS160700148 CORR
   Malhotra P., 2015, ESANN, V89, P89
   Maya S, 2019, INT J DATA SCI ANAL, V8, P137, DOI 10.1007/s41060-019-00186-0
   Munawar Mohammad A., 2007, Proceedings of the 2007 conference of the center for advanced studies on Collaborative research, P152
   Munawar MA, 2007, LECT NOTES COMPUT SC, V4742, P457
   Openjdk, OP DOC
   Powers Rob., 2005, Proc. of KDD, P801
   Roy S, 2015, PROC INT CONF DATA, P1167, DOI 10.1109/ICDE.2015.7113365
   Saha RK, 2014, 2014 SOFTWARE EVOLUTION WEEK - IEEE CONFERENCE ON SOFTWARE MAINTENANCE, REENGINEERING, AND REVERSE ENGINEERING (CSMR-WCRE), P144, DOI 10.1109/CSMR-WCRE.2014.6747164
   Shen K, 2009, PERF E R SI, V37, P85
   solarwinds, SOL SAM SERV APPL MO
   Stewart C., 2007, Operating Systems Review, V41, P31, DOI 10.1145/1272998.1273002
   Sundermeyer M, 2012, 13TH ANNUAL CONFERENCE OF THE INTERNATIONAL SPEECH COMMUNICATION ASSOCIATION 2012 (INTERSPEECH 2012), VOLS 1-3, P194
   Tan YM, 2012, INT CON DISTR COMP S, P285, DOI 10.1109/ICDCS.2012.65
   Tan YM, 2010, PODC 2010: PROCEEDINGS OF THE 2010 ACM SYMPOSIUM ON PRINCIPLES OF DISTRIBUTED COMPUTING, P173, DOI 10.1145/1835698.1835741
   Tang L, 2011, PROCEEDINGS OF THE TWELFTH ACM INTERNATIONAL SYMPOSIUM ON MOBILE AD HOC NETWORKING AND COMPUTING (MOBIHOC' 11), DOI 10.1145/2107502.2107533
   Taylor A, 2016, PROCEEDINGS OF 3RD IEEE/ACM INTERNATIONAL CONFERENCE ON DATA SCIENCE AND ADVANCED ANALYTICS, (DSAA 2016), P130, DOI 10.1109/DSAA.2016.20
   Traeger A, 2008, PERF E R SI, V36, P277, DOI 10.1145/1384529.1375489
   Tweney Dylan., 2013, Amazon website goes down for 40 minutes, costing the company million
   Vaarandi R, 2003, PROCEEDINGS OF THE 3RD IEEE WORKSHOP ON IP OPERATIONS & MANAGEMENT (IPOM2003), P119
   VMware, VIRT MACH CPU US AL
   Wang CW, 2010, IEEE IFIP NETW OPER, P96, DOI 10.1109/NOMS.2010.5488443
   Warner James C., 2013, TOP LINUX MAN PAGE
   Williams Andrew W., 2007, 2007 IEEE International Parallel and Distributed Processing Symposium, P1, DOI [10. 1109/IPDPS.2007.370345, DOI 10.1109/IPDPS.2007.370345]
   Willmott CJ, 2005, CLIMATE RES, V30, P79, DOI 10.3354/cr030079
   Xu W, 2009, IEEE DATA MINING, P588, DOI 10.1109/ICDM.2009.19
   Xu W, 2009, SOSP'09: PROCEEDINGS OF THE TWENTY-SECOND ACM SIGOPS SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES, P117
   Yongmin Tan, 2010, Proceedings 18th IEEE/ACM International Symposium on Modelling, Analysis & Simulation of Computer and Telecommunication Systems (MASCOTS 2010), P133, DOI 10.1109/MASCOTS.2010.22
   Zhu JM, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE (ICSE-SEIP 2019), P121, DOI 10.1109/ICSE-SEIP.2019.00021
NR 71
TC 10
Z9 10
U1 2
U2 8
PU ASSOC COMPUTING MACHINERY
PI NEW YORK
PA 1601 Broadway, 10th Floor, NEW YORK, NY USA
SN 1049-331X
EI 1557-7392
J9 ACM T SOFTW ENG METH
JI ACM Trans. Softw. Eng. Methodol.
PD MAY
PY 2021
VL 30
IS 3
AR 33
DI 10.1145/3440757
PG 33
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA SA7JW
UT WOS:000649478300009
DA 2024-07-18
ER

PT J
AU Chen, QY
   Xia, X
   Hu, H
   Lo, D
   Li, SP
AF Chen, Qiuyuan
   Xia, Xin
   Hu, Han
   Lo, David
   Li, Shanping
TI Why My Code Summarization Model Does NotWork: Code Comment Improvement
   with Category Prediction
SO ACM TRANSACTIONS ON SOFTWARE ENGINEERING AND METHODOLOGY
LA English
DT Article
DE Code summarization; code comment; comment classification
AB Code summarization aims at generating a code comment given a block of source code and it is normally performed by training machine learning algorithms on existing code block-comment pairs. Code comments in practice have different intentions. For example, some code comments might explain how the methods work, while others explain why some methods are written. Previous works have shown that a relationship exists between a code block and the category of a comment associated with it. In this article, we aim to investigate to which extent we can exploit this relationship to improve code summarization performance. We first classify comments into six intention categories and manually label 20,000 code-comment pairs. These categories include "what," "why," "how-to-use," "how-it-is-done," "property," and "others." Based on this dataset, we conduct an experiment to investigate the performance of different state-of-the-art code summarization approaches on the categories. We find that the performance of different code summarization approaches varies substantially across the categories. Moreover, the category for which a code summarization model performs the best is different for the different models. In particular, no models perform the best for "why" and "property" comments among the six categories. We design a composite approach to demonstrate that comment category prediction can boost code summarization to reach better results. The approach leverages classified code-category labeled data to train a classifier to infer categories. Then it selects the most suitable models for inferred categories and outputs the composite results. Our composite approach outperforms other approaches that do not consider comment categories and obtains a relative improvement of 8.57% and 16.34% in terms of ROUGE-L and BLEU-4 score, respectively.
C1 [Chen, Qiuyuan; Li, Shanping] Zhejiang Univ, Coll Comp Sci & Technol, 38 Zheda Rd, Hangzhou 310000, Zhejiang, Peoples R China.
   [Xia, Xin; Hu, Han] Monash Univ, Fac Informat Technol, Wellington Rd, Melbourne, Vic, Australia.
   [Lo, David] Singapore Management Univ, Sch Informat Syst, 81 Victoria St, Singapore 188065, Singapore.
C3 Zhejiang University; Monash University; Singapore Management University
RP Xia, X (corresponding author), Monash Univ, Fac Informat Technol, Wellington Rd, Melbourne, Vic, Australia.
EM chenqiuyuan@zju.edu.cn; xin.xia@monash.edu; han.hu@monash.edu;
   davidlo@smu.edu.sg; shan@zju.edu.cn
RI Xia, Xin/AAD-6217-2022; Lo, David/A-2493-2012
OI Xia, Xin/0000-0002-6302-3256; Lo, David/0000-0002-4367-7201
FU National Key R&D Program of China [2019YFB1600700]; NSFC Program
   [61972339]; Australian Research Council's Discovery Early Career
   Researcher Award (DECRA) [DE200100021]
FX This research was partially supported by the National Key R&D Program of
   China (Grant No. 2019YFB1600700), NSFC Program (Grant No. 61972339), and
   the Australian Research Council's Discovery Early Career Researcher
   Award (DECRA) (Grant No. DE200100021).
CR Allamanis M, 2018, ACM COMPUT SURV, V51, DOI 10.1145/3212695
   Allamanis M, 2016, PR MACH LEARN RES, V48
   Alon U, 2019, P ACM PROGRAM LANG, V3, DOI 10.1145/3290353
   Alon Uri, 2019, P INT C LEARN REPR
   [Anonymous], 2015, CORR ABS150804025
   Blewitt ME, 2008, NAT GENET, V40, P663, DOI 10.1038/ng.142
   Breiman L., 2001, Mach. Learn., V45, P5
   Chen MH, 2019, ASIA PAC SOFWR ENG, P522, DOI 10.1109/APSEC48747.2019.00076
   Chen QY, 2018, IEEE INT CONF AUTOM, P826, DOI 10.1145/3238147.3240471
   Chen QY, 2019, COMM COM INF SC, V1143, P652, DOI 10.1007/978-3-030-36802-9_69
   de Souza S.C.B., 2005, P 23 ANN INT C DES C, P68, DOI [10.1145/1085313, 10.1145/1085313.1085331]
   Eddy BP, 2013, CONF PROC INT SYMP C, P13, DOI 10.1109/ICPC.2013.6613829
   Fan YR, 2021, IEEE T SOFTWARE ENG, V47, P1559, DOI 10.1109/TSE.2019.2929761
   FLEISS JL, 1971, PSYCHOL BULL, V76, P378, DOI 10.1037/h0031619
   Fowkes J, 2016, 2016 IEEE/ACM 38TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING COMPANION (ICSE-C), P649, DOI 10.1145/2889160.2889171
   Frantzeskou G, 2008, J SYST SOFTWARE, V81, P447, DOI 10.1016/j.jss.2007.03.004
   Giger E., 2012, 2012 9th IEEE Working Conference on Mining Software Repositories (MSR 2012), P217, DOI 10.1109/MSR.2012.6224284
   Haiduc S., 2010, 2010 32nd International Conference on Software Engineering (ICSE), P223, DOI 10.1145/1810295.1810335
   Haiduc S., 2010, Proceedings 17th Working Conference on Reverse Engineering (WCRE 2010), P35, DOI 10.1109/WCRE.2010.13
   Hu H, 2019, COMM COM INF SC, V1142, P388, DOI 10.1007/978-3-030-36808-1_42
   Hu X, 2020, EMPIR SOFTW ENG, V25, P2179, DOI [10.1007/s10664-019-09730-9, 10.1007/978-981-13-8203-1_1]
   Hu X, 2018, INT C PROGRAM COMPRE, P200, DOI 10.1145/3196321.3196334
   Ibrahim WM, 2012, J SYST SOFTWARE, V85, P2293, DOI 10.1016/j.jss.2011.09.019
   Iyer S, 2016, PROCEEDINGS OF THE 54TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, VOL 1, P2073
   Kajko-Mattsson M, 2005, EMPIR SOFTW ENG, V10, P31, DOI 10.1023/B:LIDA.0000048322.42751.ca
   Kaufman S, 2012, ACM T KNOWL DISCOV D, V6, DOI 10.1145/2382577.2382579
   Ke GL, 2017, ADV NEUR IN, V30
   LeClair A, 2019, 2019 CONFERENCE OF THE NORTH AMERICAN CHAPTER OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS: HUMAN LANGUAGE TECHNOLOGIES (NAACL HLT 2019), VOL. 1, P3931
   Liang Y, 2018, P 32 AAAI C ART INT
   Lin CY, 2004, ROUGE: A Package for Automatic Evaluation of Summaries, P74, DOI DOI 10.1253/JCJ.34.1213
   Linares-Vasquez M, 2014, EMPIR SOFTW ENG, V19, P582, DOI 10.1007/s10664-012-9230-z
   Liu BH, 2019, 11TH ASIA-PACIFIC SYMPOSIUM ON INTERNETWARE (INTERNETWARE 2019), DOI 10.1145/3361242.3362774
   Liu Z., 2019, Automatic Generation of Pull Request Descriptions
   Liu ZX, 2018, IEEE INT CONF AUTOM, P373, DOI 10.1145/3238147.3238190
   Louis A, 2020, 2020 IEEE/ACM 42ND INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: NEW IDEAS AND EMERGING RESULTS (ICSE-NIER 2020), P21, DOI 10.1145/3377816.3381736
   Maalej W, 2013, IEEE T SOFTWARE ENG, V39, P1264, DOI 10.1109/TSE.2013.12
   Manning Christopher D., 2008, INTRO INFORM RETRIEV
   McBurney P. W., 2014, P 22 INT C PROGRAM C, P279
   McBurney P.W., 2014, P 22 INT C PROGRAM C, P291
   McBurney PW, 2016, IEEE T SOFTWARE ENG, V42, P103, DOI 10.1109/TSE.2015.2465386
   McBurney PW, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P903, DOI 10.1109/ICSE.2015.288
   Moreno L, 2013, CONF PROC INT SYMP C, P23, DOI 10.1109/ICPC.2013.6613830
   Movshovitz-Attias Dana, 2013, ACL
   Murphy GC, 2006, IEEE SOFTWARE, V23, P76, DOI 10.1109/MS.2006.105
   Neubig Graham, 2019, COMPARE MT TOOL HOLI
   Nie LM, 2016, IEEE T SERV COMPUT, V9, P771, DOI 10.1109/TSC.2016.2560165
   Papineni K, 2002, 40TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, PROCEEDINGS OF THE CONFERENCE, P311, DOI 10.3115/1073083.1073135
   Pascarella L, 2019, EMPIR SOFTW ENG, V24, P1499, DOI 10.1007/s10664-019-09694-w
   Pascarella L, 2017, IEEE WORK CONF MIN S, P227, DOI 10.1109/MSR.2017.63
   Pedregosa F, 2011, J MACH LEARN RES, V12, P2825
   Piech C, 2015, PR MACH LEARN RES, V37, P1093
   Rodeghero P, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P390, DOI 10.1145/2568225.2568247
   Seaman CB, 1999, IEEE T SOFTWARE ENG, V25, P557, DOI 10.1109/32.799955
   Sgier Lea, 2012, Gebert Ruf Stift, V19, P19
   Sharma Shikhar, 2017, RELEVANCE UNSUPERVIS
   Sridhara G, 2011, CONF PROC INT SYMP C, P71, DOI 10.1109/ICPC.2011.28
   Sridhara Giriprasad, 2010, 25 IEEEACM INT C AUT, P43
   Steidl D, 2013, CONF PROC INT SYMP C, P83, DOI 10.1109/ICPC.2013.6613836
   Ugurel S, 2002, P 8 ACM SIGKDD INT C, P632, DOI DOI 10.1145/775047.775141
   van Dam JK, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P624, DOI 10.1109/SANER.2016.92
   Vaswani A, 2017, ADV NEUR IN, V30
   Wan Y, 2018, IEEE INT CONF AUTOM, P397, DOI 10.1145/3238147.3238206
   Wan ZY, 2020, IEEE T SOFTWARE ENG, V46, P1241, DOI 10.1109/TSE.2018.2877678
   Wang S, 2016, IEEE INT CONF AUTOM, P708, DOI 10.1145/2970276.2970341
   Wang W, 2020, IEEE ELECTR DEVICE L, V41, P585, DOI 10.1109/LED.2020.2972330
   Wen FC, 2019, INT C PROGRAM COMPRE, P53, DOI 10.1109/ICPC.2019.00019
   Wong E, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P380, DOI 10.1109/SANER.2015.7081848
   Xia X, 2019, PROC INT CONF SOFTW, P924, DOI 10.1109/ICSE.2019.00098
   Xia X, 2018, IEEE T SOFTWARE ENG, V44, P951, DOI 10.1109/TSE.2017.2734091
   Yang D, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P391, DOI [10.1109/MSR.2016.047, 10.1145/2901739.2901767]
   Zhai Juan, 2020, P 42 INT C SOFTW ENG
   Zhang YQ, 2018, INT CONF POW ELECTR, P2262, DOI 10.23919/IPEC.2018.8507539
NR 72
TC 42
Z9 43
U1 1
U2 13
PU ASSOC COMPUTING MACHINERY
PI NEW YORK
PA 1601 Broadway, 10th Floor, NEW YORK, NY USA
SN 1049-331X
EI 1557-7392
J9 ACM T SOFTW ENG METH
JI ACM Trans. Softw. Eng. Methodol.
PD MAR
PY 2021
VL 30
IS 2
AR 25
DI 10.1145/3434280
PG 29
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA QY7ND
UT WOS:000630223200014
OA Green Published
DA 2024-07-18
ER

PT J
AU Ma, XX
   Wu, SR
   Pobee, E
   Mei, XP
   Zhang, H
   Jiang, B
   Chan, WK
AF Ma, Xiaoxue
   Wu, Shangru
   Pobee, Ernest
   Mei, Xiupei
   Zhang, Hao
   Jiang, Bo
   Chan, Wing-Kwong
TI RegionTrack: A Trace-Based Sound and Complete Checker to Debug
   Transactional Atomicity Violations and Non-Serializable Traces
SO ACM TRANSACTIONS ON SOFTWARE ENGINEERING AND METHODOLOGY
LA English
DT Article
DE Transactional atomicity violation; conflict serializability;
   non-serializable traces; dynamic analysis; linearizability; debugging
AB Atomicity is a correctness criterion to reason about isolated code regions in a multithreaded program when they are executed concurrently. However, dynamic instances of these code regions, called transactions, may fail to behave atomically, resulting in transactional atomicity violations. Existing dynamic online atomicity checkers incur either false positives or false negatives in detecting transactions experiencing transactional atomicity violations. This article proposes RegionTrack. RegionTrack tracks cross-thread dependences at the event, dynamic subregion, and transaction levels. It maintains both dynamic subregions within selected transactions and transactional happens-before relations through its novel timestamp propagation approach. We prove that RegionTrack is sound and complete in detecting both transactional atomicity violations and non-serializable traces. To the best of our knowledge, it is the first online technique that precisely captures the transitively closed set of happens-before relations over all conflicting events with respect to every running transaction for the above two kinds of issues. We have evaluated RegionTrack on 19 subjects of the DaCapo and the Java Grande Forum benchmarks. The empirical results confirm that RegionTrack precisely detected all those transactions which experienced transactional atomicity violations and identified all non-serializable traces. The overall results also show that RegionTrack incurred 1.10x and 1.08x lower memory and runtime overheads than Velodrome and 2.10x and 1.21x lower than Aerodrome, respectively. Moreover, it incurred 2.89x lower memory overhead than DoubleChecker. On average, Velodrome detected about 55% fewer violations than RegionTrack, which in turn reported about 3% 70% fewer violations than DoubleChecker.
C1 [Ma, Xiaoxue; Wu, Shangru; Pobee, Ernest; Mei, Xiupei; Zhang, Hao; Chan, Wing-Kwong] City Univ Hong Kong, Dept Comp Sci, Kowloon Tong, 83 Tat Chee Ave, Hong Kong, Peoples R China.
   [Jiang, Bo] Beihang Univ, Sch Comp Sci & Engn, Beijing, Peoples R China.
C3 City University of Hong Kong; Beihang University
RP Chan, WK (corresponding author), City Univ Hong Kong, Dept Comp Sci, Kowloon Tong, 83 Tat Chee Ave, Hong Kong, Peoples R China.
EM xiaoxuema2-c@my.cityu.edu.hk; shangru.wu@my.cityu.edu.hk;
   ebpobee2-c@my.cityu.edu.hk; xpmei2-c@my.cityu.edu.hk;
   hzhang339-c@my.cityu.edu.hk; gongbell@gmail.com; wkchan@cityu.edu.hk
RI Chan, Wah Kheong/AGA-6636-2022
OI Chan, Wah Kheong/0000-0002-9105-5837; POBEE, Ernest
   Bota/0000-0002-5022-7081; MA, Xiaoxue/0000-0001-7745-7154; MEI,
   Xiupei/0000-0002-2677-4528
FU GRF of HKSAR Research Grants Council [11214116, 11200015, 11201114];
   HKSAR ITF [ITS/378/18]; CityU MF_EXT [9678180]; CityU SRG [7004882,
   7005122, 7005216]; NSFC of China [61772056, 61690202]
FX This research is supported in part by the GRF of HKSAR Research Grants
   Council (project nos. 11214116, 11200015 and 11201114), the HKSAR ITF
   (project no. ITS/378/18), the CityU MF_EXT (project no. 9678180), the
   CityU SRG (project nos. 7004882, 7005122, and 7005216), and NSFC of
   China (project nos. 61772056 and 61690202).
CR Abreu R, 2009, J SYST SOFTWARE, V82, P1780, DOI 10.1016/j.jss.2009.06.035
   Agha G., 2018, LECT NOTES COMPUTER, P16
   Alpern B, 2005, IBM SYST J, V44, P399, DOI 10.1147/sj.442.0399
   [Anonymous], 2010, P ACM SIGSOFT S FDN
   [Anonymous], 2001, P ACM IEEE C SUP
   Biswas S, 2014, ACM SIGPLAN NOTICES, V49, P28, DOI [10.1145/2666356.2594323, 10.1145/2594291.2594323]
   Blackburn SM, 2006, ACM SIGPLAN NOTICES, V41, P169, DOI 10.1145/1167515.1167488
   Bond MD, 2013, ACM SIGPLAN NOTICES, V48, P693, DOI [10.1145/2509136.2509519, 10.1145/2544173.2509519]
   Chang XN, 2019, PROC INT CONF SOFTW, P631, DOI 10.1109/ICSE.2019.00073
   Chen F, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P221, DOI 10.1145/1368088.1368119
   Chen QC, 2009, LECT NOTES COMPUT SC, V5503, P425
   DeLozier C, 2018, ACM SIGPLAN NOTICES, V53, P286, DOI [10.1145/3173162.3173192, 10.1145/3296957.3173192]
   Eslamimehr M, 2015, 2015 IEEE 26TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING (ISSRE), P12, DOI 10.1109/ISSRE.2015.7381795
   Eslamimehr M, 2018, J SYST SOFTWARE, V137, P618, DOI 10.1016/j.jss.2017.06.001
   Farzan A, 2008, LECT NOTES COMPUT SC, V5123, P52
   Fidge CJ, 1988, P AUSTR COMP SCI C, V10, P56
   Flanagan C, 2004, ACM SIGPLAN NOTICES, V39, P256, DOI 10.1145/982962.964023
   Flanagan C, 2008, SCI COMPUT PROGRAM, V71, P89, DOI 10.1016/j.scico.2007.12.001
   Flanagan C, 2009, PLDI'09 PROCEEDINGS OF THE 2009 ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P121, DOI 10.1145/1542476.1542490
   Flanagan C, 2008, PLDI'08: PROCEEDINGS OF THE 2008 SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN & IMPLEMENTATION, P293, DOI 10.1145/1375581.1375618
   Huang J., 2011, ISSTA, P144, DOI [10.1145/2001420.2001438, DOI 10.1145/2001420.2001438]
   Huang J, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P847, DOI 10.1109/ICSE.2015.96
   Lai HX, 2010, 2010 11TH INTERNATIONAL CONFERENCE ON ELECTRONIC PACKAGING TECHNOLOGY & HIGH DENSITY PACKAGING (ICEPT-HDP), P235, DOI 10.1109/ICEPT.2010.5582434
   LAMPORT L, 1978, COMMUN ACM, V21, P558, DOI 10.1145/359545.359563
   Li GP, 2019, PROCEEDINGS OF THE TWENTY-SEVENTH ACM SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES (SOSP '19), P162, DOI 10.1145/3341301.3359638
   LIPTON RJ, 1975, COMMUN ACM, V18, P717, DOI 10.1145/361227.361234
   Lu S, 2008, ACM SIGPLAN NOTICES, V43, P329, DOI 10.1145/1353536.1346323
   Lu S, 2012, IEEE T SOFTWARE ENG, V38, P844, DOI 10.1109/TSE.2011.35
   Maiya P, 2017, PROCEEDINGS OF THE 26TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA'17), P102, DOI 10.1145/3092703.3092733
   Mathur U, 2020, TWENTY-FIFTH INTERNATIONAL CONFERENCE ON ARCHITECTURAL SUPPORT FOR PROGRAMMING LANGUAGES AND OPERATING SYSTEMS (ASPLOS XXV), P183, DOI 10.1145/3373376.3378475
   Mattern F., 1989, Parallel and Distributed Algorithms. Proceedings of the International Workshop, P215
   Min Q, 2018, IEEE INT SYMP ELEC, P110
   Park C.-S., 2008, FSE, P135
   Park S, 2009, ACM SIGPLAN NOTICES, V44, P25, DOI 10.1145/1508284.1508249
   Pobee E., 2019, P 34 IEEE ACM INT C
   Pobee E, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P567, DOI 10.1145/3338906.3338959
   Pozniansky E, 2003, ACM SIGPLAN NOTICES, V38, P178, DOI 10.1145/966049.781529
   Samak M, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P131, DOI 10.1145/2786805.2786874
   Savage S, 1997, ACM T COMPUT SYST, V15, P391, DOI 10.1145/269005.266641
   Sengupta A, 2015, ACM SIGPLAN NOTICES, V50, P561, DOI [10.1145/2694344.2694379, 10.1145/2775054.2694379]
   Shi QK, 2016, IEEE T SOFTWARE ENG, V42, P285, DOI 10.1109/TSE.2015.2477820
   Shiv K, 2009, LECT NOTES COMPUT SC, V5419, P17
   Sinha A., 2011, 2011 9th IEEE/ACM International Conference on Formal Methods and Models for Codesign (MEMOCODE 2011), P99, DOI 10.1109/MEMCOD.2011.5970516
   Sorrentino Francesco, 2010, P 18 ACM SIGSOFT INT, P37, DOI DOI 10.1145/1882291.1882300
   Sumner W.N., 2012, RV, P161
   von Praun C, 2003, ACM SIGPLAN NOTICES, V38, P115, DOI 10.1145/780822.781145
   Wang L, 2006, CARDIOVASC TOXICOL, V6, P131, DOI 10.1385/CT:6:2:131
   Wang LQ, 2006, IEEE T SOFTWARE ENG, V32, P93, DOI 10.1109/TSE.2006.1599419
   Wilcox JR, 2015, IEEE INT CONF AUTOM, P155, DOI 10.1109/ASE.2015.19
   Wu SR, 2016, IEEE T PARALL DISTR, V27, P724, DOI 10.1109/TPDS.2015.2412544
   Wu SR, 2015, 2015 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE SECURITY AND RELIABILITY (QRS 2015), P272, DOI 10.1109/QRS.2015.46
   Wu Shuifa, 2016, THESIS
   Yoo S, 2013, ACM T SOFTW ENG METH, V22, DOI 10.1145/2491509.2491513
   Zhou Q, 2018, INT SYM CODE GENER, P228, DOI 10.1145/3168813
NR 54
TC 5
Z9 5
U1 1
U2 11
PU ASSOC COMPUTING MACHINERY
PI NEW YORK
PA 1601 Broadway, 10th Floor, NEW YORK, NY USA
SN 1049-331X
EI 1557-7392
J9 ACM T SOFTW ENG METH
JI ACM Trans. Softw. Eng. Methodol.
PD JAN
PY 2021
VL 30
IS 1
AR 7
DI 10.1145/3412377
PG 49
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA PZ3MX
UT WOS:000612644100007
DA 2024-07-18
ER

PT J
AU Chen, JS
   Chen, CY
   Xing, ZC
   Xia, X
   Zhu, LM
   Grundy, J
   Wang, JS
AF Chen, Jieshan
   Chen, Chunyang
   Xing, Zhenchang
   Xia, Xin
   Zhu, Liming
   Grundy, John
   Wang, Jinshui
TI Wireframe-based UI Design Search through Image Autoencoder
SO ACM TRANSACTIONS ON SOFTWARE ENGINEERING AND METHODOLOGY
LA English
DT Article
DE Android; UI search; deep learning; auto-encoder
ID COLOR HISTOGRAM; DEVELOPERS
AB UI design is an integral part of software development. For many developers who do not have much UI design experience, exposing them to a large database of real-application UI designs can help them quickly build up a realistic understanding of the design space for a software feature and get design inspirations from existing applications. However, existing keyword-based, image-similarity-based, and component-matching-based methods cannot reliably find relevant high-fidelity UI designs in a large database alike to the UI wireframe that the developers sketch, in face of the great variations in UI designs. In this article, we propose a deep-learningbased UI design search engine to fill in the gap. The key innovation of our search engine is to train a wireframe image autoencoder using a large database of real-application UI designs, without the need for labeling relevant UI designs. We implement our approach for Android UI design search, and conduct extensive experiments with artificially created relevant UI designs and human evaluation of UI design search results. Our experiments confirm the superior performance of our search engine over existing image-similarity or componentmatching-based methods and demonstrate the usefulness of our search engine in real-world UI design tasks.
C1 [Chen, Jieshan; Xing, Zhenchang] Australian Natl Univ, Res Sch Comp Sci, Canberra, ACT, Australia.
   [Chen, Chunyang; Xia, Xin; Grundy, John] Monash Univ, Fac Informat Technol, Melbourne, Vic, Australia.
   [Zhu, Liming] CSIRO, Data61, Canberra, ACT, Australia.
   [Wang, Jinshui] Fujian Univ Technol, Sch Informat Sci & Engn, Fuzhou, Fujian, Peoples R China.
   [Zhu, Liming] Level 5,13 Garden St, Sydney, NSW 2015, Australia.
C3 Australian National University; Monash University; Commonwealth
   Scientific & Industrial Research Organisation (CSIRO); Fujian University
   of Technology
RP Chen, CY (corresponding author), Monash Univ, Fac Informat Technol, Melbourne, Vic, Australia.; Wang, JS (corresponding author), Fujian Univ Technol, Sch Informat Sci & Engn, Fuzhou, Fujian, Peoples R China.
EM Jieshan.Chen@anu.edu.au; Chunyang.Chen@monash.edu;
   Zhenchang.Xing@anu.edu.au; Xin.Xia@monash.edu;
   Liming.zhu@data61.csiro.au; John.Grundy@monash.edu; ymkscom@gmail.com
RI Xia, Xin/AAD-6217-2022; Zhu, Li/GWV-0143-2022; Chen,
   Jieshan/AAA-5470-2022; Zhu, Lixing/B-7199-2009; Grundy, John/I-6681-2012
OI Xia, Xin/0000-0002-6302-3256; Zhu, Li/0000-0001-5249-6536; Chen,
   Jieshan/0000-0002-2700-7478; Zhu, Liming/0000-0001-5839-3765; Grundy,
   John/0000-0003-4928-7076; Wang, Jinshui/0000-0003-1733-8481; Chen,
   Chunyang/0000-0003-2011-9618
FU Australian National Univeristy - Data 61 Collaborative Researh Project
   [CO19314]; Australian Research Council's Discovery Early Career
   Researcher Award (DECRA) [DE200100021]; ARC [DP170101932]; Laureate
   Fellowship [FL190100035]
FX This research was partially supported by the Australian National
   Univeristy - Data 61 Collaborative Researh Project (CO19314), the
   Australian Research Council's Discovery Early Career Researcher Award
   (DECRA) funding scheme (DE200100021), ARC Discovery Project scheme
   (DP170101932) and Laureate Fellowship (FL190100035).
CR [Anonymous], 2020, Balsamiq mockups
   [Anonymous], 2018, Dribbble - discover the world's top designers creative professionals
   [Anonymous], 2018, Designing the ui of google translate
   [Anonymous], 2020, Fluid ui
   [Anonymous], 2018, Ui movement - the best ui design inspiration, every day
   [Anonymous], 2018, 5 FREE UI KITS ADOBE
   [Anonymous], 2018, A fish in your ear
   [Anonymous], 2015, APPCELERATOR IDC 201
   [Anonymous], 2019, Android documentation - user interface navigation
   [Anonymous], 2018, 30 GREAT UI KITS IOS
   [Anonymous], 2018, FREE MOBILE UI KITS
   [Anonymous], 2018, Human interface guidelines - design - apple developer
   [Anonymous], 2012, NAT WEB HYBR MOB APP
   [Anonymous], 2020, Adobe xd
   [Anonymous], 2018, Develop for android - material design
   [Anonymous], 2018, Why is good ui design so hard for some developers?
   [Anonymous], 2017, ESSENTIAL FREE UI KI
   Bao LF, 2015, IEEE INT CONF AUTOM, P277, DOI 10.1109/ASE.2015.43
   Behrang F, 2018, 2018 IEEE/ACM 5TH INTERNATIONAL CONFERENCE ON MOBILE SOFTWARE ENGINEERING AND SYSTEMS (MOBILESOFT), P236, DOI 10.1145/3197231.3197244
   Beltramelli T, 2018, PROCEEDINGS OF THE ACM SIGCHI SYMPOSIUM ON ENGINEERING INTERACTIVE COMPUTING SYSTEMS (EICS'18), DOI 10.1145/3220134.3220135
   Berger J. O., 1985, STAT DECISION THEORY, DOI DOI 10.1007/978-1-4757-4286-2
   Bernal-Cárdenas C, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: COMPANION PROCEEDINGS (ICSE-COMPANION 2019), P71, DOI 10.1109/ICSE-Companion.2019.00041
   Bottou L, 2010, COMPSTAT'2010: 19TH INTERNATIONAL CONFERENCE ON COMPUTATIONAL STATISTICS, P177, DOI 10.1007/978-3-7908-2604-3_16
   Brown M, 2007, INT J COMPUT VISION, V74, P59, DOI 10.1007/s11263-006-0002-3
   Chen CW, 2018, IEEE INT SYMP CIRC S, DOI 10.1109/ISCAS.2018.8351436
   Chen CY, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P665, DOI 10.1145/3180155.3180222
   Chen GB, 2016, IEEE INT CONF AUTOM, P744, DOI 10.1145/2970276.2970317
   Chen JS, 2020, PROC INT CONF SOFTW, P322, DOI 10.1145/3377811.3380327
   Chen S, 2021, IEEE T DEPEND SECURE, V18, P2551, DOI 10.1109/TDSC.2019.2956035
   Chen S, 2019, PROC INT CONF SOFTW, P596, DOI 10.1109/ICSE.2019.00070
   Chunyang Chen, 2019, Proceedings of the ACM on Human-Computer Interaction, V3, DOI 10.1145/3359282
   COHEN J, 1960, EDUC PSYCHOL MEAS, V20, P37, DOI 10.1177/001316446002000104
   Cubuk ED, 2019, PROC CVPR IEEE, P113, DOI 10.1109/CVPR.2019.00020
   Dansana J, 2013, 2013 IEEE CONFERENCE ON INFORMATION AND COMMUNICATION TECHNOLOGIES (ICT 2013), P835
   Deka B, 2017, UIST'17: PROCEEDINGS OF THE 30TH ANNUAL ACM SYMPOSIUM ON USER INTERFACE SOFTWARE AND TECHNOLOGY, P845, DOI 10.1145/3126594.3126651
   Doersch Carl, 2016, ARXIV160605908
   Doosti B, 2018, ARXIV180704191
   FLEISS JL, 1971, PSYCHOL BULL, V76, P378, DOI 10.1037/h0031619
   Girshick R, 2015, IEEE I CONF COMP VIS, P1440, DOI 10.1109/ICCV.2015.169
   HAFNER J, 1995, IEEE T PATTERN ANAL, V17, P729, DOI 10.1109/34.391417
   Han J, 2002, IEEE T IMAGE PROCESS, V11, P944, DOI 10.1109/TIP.2002.801585
   Hautojrvi P., 1979, Experimentation in software engineering, V1ST, DOI [10.1007/978-3-642-81316-0, 10.1007/978-3-642-29044-2., DOI 10.1007/978-3-642-29044-2]
   Hong JS, 2011, COMMUN ACM, V54, P10, DOI 10.1145/1897816.1897820
   Ioffe S, 2015, P INT C MACH LEARN, V2015, P1
   Jain AK, 1996, PATTERN RECOGN, V29, P1233, DOI 10.1016/0031-3203(95)00160-3
   Jansen B.J., 1998, ACM SIGCHI Bulletin, V30, P22, DOI 10.1145/279044.279051
   KARP RM, 1990, PROCEEDINGS OF THE TWENTY SECOND ANNUAL ACM SYMPOSIUM ON THEORY OF COMPUTING, P352, DOI 10.1145/100216.100262
   Ke Yan, 2004, P ACM MULT C CIT, V4, P5
   KEYS RG, 1981, IEEE T ACOUST SPEECH, V29, P1153, DOI 10.1109/TASSP.1981.1163711
   Krizhevsky A, 2017, COMMUN ACM, V60, P84, DOI 10.1145/3065386
   Li J, 2019, WORLD WIDE WEB, V22, P1699, DOI 10.1007/s11280-018-0621-y
   Lowe, 1999, P INT C COMP VIS, P1150, DOI DOI 10.1109/ICCV.1999.790410
   McMillan C, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P111, DOI 10.1145/1985793.1985809
   Miniukovich A, 2016, 34TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, CHI 2016, P4622, DOI 10.1145/2858036.2858552
   Moran K, 2018, IEEE INT CONF AUTOM, P543, DOI 10.1145/3238147.3238203
   Moran K, 2020, IEEE T SOFTWARE ENG, V46, P196, DOI 10.1109/TSE.2018.2844788
   Moran K, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P165, DOI 10.1145/3180155.3180246
   Murray N, 2014, PROC CVPR IEEE, P2473, DOI 10.1109/CVPR.2014.317
   NITTA K, 2019, IEEE SENSOR, pNI168
   PAUL S, 1994, IEEE T SOFTWARE ENG, V20, P463, DOI 10.1109/32.295894
   Peng X, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P900, DOI 10.1145/1985793.1985939
   Prabhu N, 2015, IEEE I CONF COMP VIS, P1071, DOI 10.1109/ICCV.2015.128
   Reiss SP, 2018, AUTOMAT SOFTW ENG, V25, P157, DOI 10.1007/s10515-017-0216-3
   Ritchie D., 2011, P 24 ANN ACM S US IN, P165, DOI DOI 10.1145/2047196.2047216
   Rusk N, 2016, NAT METHODS, V13, P35, DOI 10.1038/nmeth.3707
   Thung F, 2013, WORK CONF REVERSE EN, P182, DOI 10.1109/WCRE.2013.6671293
   Nguyen TA, 2015, IEEE INT CONF AUTOM, P248, DOI 10.1109/ASE.2015.32
   Vincent P, 2010, J MACH LEARN RES, V11, P3371
   Wang J, 2018, ENVIRON TECHNOL, V39, P3055, DOI 10.1080/09593330.2017.1371797
   Wang JS, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P762, DOI 10.1109/ICSE.2013.6606622
   Wang Z, 2004, IEEE T IMAGE PROCESS, V13, P600, DOI 10.1109/TIP.2003.819861
   WINOGRAD T, 1995, COMMUN ACM, V38, P65, DOI 10.1145/203241.203259
   Wu Z, 2009, PROC CVPR IEEE, P25, DOI 10.1109/CVPRW.2009.5206566
   Xu BW, 2018, EMPIR SOFTW ENG, V23, P1084, DOI 10.1007/s10664-017-9568-3
   Xu BW, 2017, IEEE INT CONF AUTOM, P706, DOI 10.1109/ASE.2017.8115681
   Zeiler MD, 2014, LECT NOTES COMPUT SC, V8689, P818, DOI 10.1007/978-3-319-10590-1_53
   Zhao DH, 2020, PROC INT CONF SOFTW, P1286, DOI 10.1145/3377811.3380411
   Zheng SY, 2019, PROCEEDINGS OF THE TWELFTH ACM INTERNATIONAL CONFERENCE ON WEB SEARCH AND DATA MINING (WSDM'19), P774, DOI 10.1145/3289600.3290610
NR 78
TC 45
Z9 50
U1 11
U2 41
PU ASSOC COMPUTING MACHINERY
PI NEW YORK
PA 1601 Broadway, 10th Floor, NEW YORK, NY USA
SN 1049-331X
EI 1557-7392
J9 ACM T SOFTW ENG METH
JI ACM Trans. Softw. Eng. Methodol.
PD JUL
PY 2020
VL 29
IS 3
AR 19
DI 10.1145/3391613
PG 31
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA OJ1OF
UT WOS:000583736300007
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Beschastnikh, I
   Liu, P
   Xing, A
   Wang, P
   Brun, Y
   Ernst, MD
AF Beschastnikh, Ivan
   Liu, Perry
   Xing, Albert
   Wang, Patty
   Brun, Yuriy
   Ernst, Michael D.
TI Visualizing Distributed System Executions
SO ACM TRANSACTIONS ON SOFTWARE ENGINEERING AND METHODOLOGY
LA English
DT Article
DE Distributed systems; program comprehension; log analysis
ID PERFORMANCE VISUALIZATION; PARALLEL; JAVA; CLOCKS; JIVE
AB Distributed systems pose unique challenges for software developers. Understanding the system's communication topology and reasoning about concurrent activities of system hosts can be difficult. The standard approach, analyzing system logs, can be a tedious and complex process that involves reconstructing a system log from multiple hosts' logs, reconciling timestamps among hosts with non-synchronized clocks, and understanding what took place during the execution encoded by the log. This article presents a novel approach for tackling three tasks frequently performed during analysis of distributed system executions: (1) understanding the relative ordering of events, (2) searching for specific patterns of interaction between hosts, and (3) identifying structural similarities and differences between pairs of executions. Our approach consists of XVector, which instruments distributed systems to capture partial ordering information that encodes the happens-before relation between events, and ShiViz, which processes the resulting logs and presents distributed system executions as interactive time-space diagrams. Two user studies with a total of 109 students and a case study with 2 developers showed that our method was effective, helping participants answer statistically significantly more system-comprehension questions correctly, with a very large effect size.
C1 [Beschastnikh, Ivan; Liu, Perry; Xing, Albert; Wang, Patty] Univ British Columbia, 201-2366 Main Mall, Vancouver, BC V6T 1Z4, Canada.
   [Brun, Yuriy] Univ Massachusetts, 140 Governors Dr, Amherst, MA 01003 USA.
   [Ernst, Michael D.] Univ Washington, 185 Stevens Way, Seattle, WA 98195 USA.
C3 University of British Columbia; University of Massachusetts System;
   University of Massachusetts Amherst; University of Washington;
   University of Washington Seattle
RP Beschastnikh, I (corresponding author), Univ British Columbia, 201-2366 Main Mall, Vancouver, BC V6T 1Z4, Canada.
EM bestchai@cs.ubc.ca; perry@alumni.ubc.ca; albert.xing@alumni.ubc.ca;
   patty.pcw@gmail.com; brun@cs.umass.edu; mernst@cs.washington.edu
RI Wang, Patty/JCP-0981-2023
FU Natural Sciences and Engineering Research Council of Canada (NSERC)
   [2014-04870, 2019-05090]; NSERC USRA program; United States Air Force
   [FA8750-12-2-0107, FA8750-15-C-0010]; National Science Foundation
   [CCF-1453474, CCF-1763423]
FX We acknowledge the support of the Natural Sciences and Engineering
   Research Council of Canada (NSERC) through the Discovery grant, funding
   reference numbers 2014-04870 and 2019-05090. Authors Perry Liu, Albert
   Xing, and Patty Wang contributed to the project while sponsored by the
   NSERC USRA program. This material is based upon work supported by the
   United States Air Force under contract nos. FA8750-12-2-0107 and
   FA8750-15-C-0010, and by the National Science Foundation under grant
   nos. CCF-1453474 and CCF-1763423.
CR Abrahamson J, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE COMPANION 2014), P598, DOI 10.1145/2591062.2591134
   Acharya Mithun, 2007, P EUR SOFTW ENG C AC
   Aguilera M. K., 2003, Operating Systems Review, V37, P74, DOI 10.1145/1165389.945454
   Almeida PS, 2008, LECT NOTES COMPUT SC, V5401, P259, DOI 10.1007/978-3-540-92221-6_18
   [Anonymous], 2012, Proceedings of the 26th International Conference on Large Installation System Administration: Strategies, Tools, and Techniques, LISA '12
   [Anonymous], 2008, RFC 5321
   [Anonymous], 2009, P USENIX ANN TECHN C
   Antony I., 2001, LECT NOTES COMPUTER, P329, DOI DOI 10.1007/3-540-45518-3_18
   Barham P, 2004, USENIX ASSOCIATION PROCEEDINGS OF THE SIXTH SYMPOSIUM ON OPERATING SYSTEMS DESIGN AND IMPLEMENTATION (OSDE '04), P259
   Becker D, 2009, PARALLEL COMPUT, V35, P595, DOI 10.1016/j.parco.2008.12.012
   Benomar Omar., 2013, 2013 1 IEEE WORKING, DOI [DOI 10.1109/VISSOFT.2013.6650524, 10.1109/VISSOFT.2013.6650524]
   BESCHASTNIKH I., 2011, P 19 ACM SIGSOFT S 1, P267, DOI DOI 10.1145/2025113.2025151
   Beschastnikh I, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P468, DOI 10.1145/2568225.2568246
   Beschastnikh I, 2016, COMMUN ACM, V59, P32, DOI 10.1145/2909480
   Beschastnikh I, 2015, IEEE T SOFTWARE ENG, V41, P408, DOI 10.1109/TSE.2014.2369047
   Beschastnikh Ivan., 2012, OPER SYST REV, V45, P39
   Beschastnikh Ivan, 2017, SHIVIZ EVALUATION DE
   BIERMANN AW, 1972, IEEE T COMPUT, VC 21, P592, DOI 10.1109/TC.1972.5009015
   Cai Haipeng, 2016, P IEEE ACM INT C AUT
   Chen BY, 2017, EMPIR SOFTW ENG, V22, P330, DOI 10.1007/s10664-016-9429-5
   Consens MarianoC., 1993, Applications of Databases, First International Conference, ADB-94, V819, P181
   Cook JonathanE., 1998, ACM T SOFTW ENG METH, V7
   Curtsinger C, 2015, SOSP'15: PROCEEDINGS OF THE TWENTY-FIFTH ACM SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES, P184, DOI 10.1145/2815400.2815409
   de Kergommeaux JC, 2000, PARALLEL COMPUT, V26, P1253, DOI 10.1016/S0167-8191(00)00010-7
   de Kergommeaux JC, 2003, FUTURE GENER COMP SY, V19, P735, DOI 10.1016/S0167-739X(02)00181-4
   De Pauw W, 1998, LECT NOTES COMPUT SC, V1543, P541
   De Pauw Wim, 2010, Operating Systems Review, V44, P97, DOI 10.1145/1740390.1740412
   De Pauw W, 2010, LECT NOTES COMPUT SC, V6418, P18, DOI 10.1007/978-3-642-16612-9_3
   De Pauw W, 2010, SOFTVIS 2010: PROCEEDINGS OF THE 2010 INTERNATIONAL SYMPOSIUM ON SOFTWARE VISUALIZATION, P143
   De Pauw W, 2009, INFORM VISUAL, V8, P87, DOI 10.1057/ivs.2009.5
   De Pauw W, 2008, SOFTVIS 2008: PROCEEDINGS OF THE 4TH ACM SYMPOSIUM ON SOFTWARE VISUALIZATION, P125
   De Pauw Wim., 2006, Proceedings of the 2006 ACM symposium on Software visualization, SoftVis '06, P37, DOI DOI 10.1145/1148493.1148499
   Desell Travis, 2004, ELECT NOTES THEOR CO, V107, P87, DOI [10.1016/j.entcs.2004.02.050 2004, DOI 10.1016/J.ENTCS.2004.02.050]
   Edwards D., 1994, Proceedings. Sixth IEEE Symposium on Parallel and Distributed Processing (Cat. No.94TH0675-9), P281, DOI 10.1109/SPDP.1994.346156
   Fahland Dirk, 2013, P IEEE ACM INT C AUT
   Fidge CJ, 1988, P AUSTR COMP SCI C, V10, P56
   Flanagan C, 2005, ACM SIGPLAN NOTICES, V40, P110, DOI 10.1145/1047659.1040315
   Fonseca Rodrigo., 2007, P 4 USENIX C NETWORK, P271
   Fu Qiang, 2014, P INT C SOFTW ENG IC
   Gabel M., 2008, SIGSOFT FSE, P339, DOI DOI 10.1145/1453101.1453150
   Gan Yu, 2019, P C AGR SUPP PROGR L
   Garg M, 2012, J SURG CASE REP, DOI [10.1093/jscr/2012.5.9, 10.1093/jscr/2012.6.1]
   Geels Dennis., 2007, Proceedings of the 4th USENIX Conference on Networked Systems Design and Implementation, NSDI '07, P21
   Ghezzi Carlo, 2014, P ACM IEEE INT C SOF
   Grant S, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1149, DOI 10.1145/3180155.3180199
   Gregg B, 2016, COMMUN ACM, V59, P48, DOI 10.1145/2909476
   Gregg Brendan, 2017, P USENIX ANN TECHN C, P81
   Gunawi H. S., 2014, P ACM S CLOUD COMP S, P1
   Gunawi Haryadi S., 2016, P ACM S CLOUD COMP S
   HAREL D, 1987, SCI COMPUT PROGRAM, V8, P231, DOI 10.1016/0167-6423(87)90035-9
   Huynh An, 2015, P 2 WORKSH VIS PERF, V3, P1, DOI DOI 10.1145/2835238.2835241
   Isaacs KE, 2015, PROCEEDINGS OF SC15: THE INTERNATIONAL CONFERENCE FOR HIGH PERFORMANCE COMPUTING, NETWORKING, STORAGE AND ANALYSIS, DOI 10.1145/2807591.2807634
   Isaacs KE, 2016, IEEE T PARALL DISTR, V27, P829, DOI 10.1109/TPDS.2015.2417531
   Isaacs KE, 2014, IEEE T VIS COMPUT GR, V20, P2349, DOI 10.1109/TVCG.2014.2346456
   Isaacs Katherine E., 2014, P EUR C VIS EUROVIS
   JAKIELA H, 1995, COMPUTER, V28, P30, DOI 10.1109/2.471177
   Karenos Kyriakos, 2011, Proceedings of the 11th IEEE/IPSJ International Symposium on Applications and the Internet (SAINT 2011), P65, DOI 10.1109/SAINT.2011.19
   Krka I., 2010, 2010 32nd International Conference on Software Engineering (ICSE), P179, DOI 10.1145/1810295.1810324
   Krka I, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P178, DOI 10.1145/2635868.2635890
   Kunz T, 1997, P ANN HICSS, P452, DOI 10.1109/HICSS.1997.667299
   Kurose J.F, 2012, Computer Networking-A Top-Down Approach Featuring the Internet, V6th
   Lamberti F, 2015, IEEE INT CONF MO, P33, DOI [10.1109/MobServ.2015.15, 10.1109/MS.2015.15]
   LAMPORT L, 1978, COMMUN ACM, V21, P558, DOI 10.1145/359545.359563
   Landge AG, 2012, IEEE T VIS COMPUT GR, V18, P2467, DOI 10.1109/TVCG.2012.286
   Langelier G, 2008, 2008 IEEE SYMPOSIUM ON VISUAL LANGUAGES AND HUMAN-CENTRIC COMPUTING, PROCEEDINGS, P13, DOI 10.1109/VLHCC.2008.4639052
   Le TDB, 2015, IEEE INT CONF AUTOM, P115, DOI 10.1109/ASE.2015.83
   Lee KH, 2011, I C DEPEND SYS NETWO, P85, DOI 10.1109/DSN.2011.5958209
   Lee YK, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE COMPANION 2014), P580, DOI 10.1145/2591062.2591074
   Liu ZB, 2017, 2017 13TH INTERNATIONAL CONFERENCE ON NATURAL COMPUTATION, FUZZY SYSTEMS AND KNOWLEDGE DISCOVERY (ICNC-FSKD), P13, DOI 10.1109/FSKD.2017.8392952
   Lo David., 2010, Proceedings of the IEEE/ACM international conference on Automated software engineering, ASE '10, P387
   Lorenzoli D, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P501, DOI 10.1145/1368088.1368157
   Marshall Stuart, 2001, P AS PAC S INF VIS A, V9, P103
   Marshall Stuart, 2003, P AS PAC S INF VIS A, V24, P81
   Mattern F., 1989, Parallel and Distributed Algorithms. Proceedings of the International Workshop, P215
   Neves F, 2018, I C DEPEND SYS NETWO, P534, DOI 10.1109/DSN.2018.00061
   Nunes Matheus, 2017, P INT C SOFTW ENG IC
   Ohmann T., 2014, P IEEE ACM INT C AUT, P19, DOI [10.1145/2642937.2642988, DOI 10.1145/2642937.2642988, 10.1145/2642937, DOI 10.1145/2642937]
   Oliner A, 2012, COMMUN ACM, V55, P63, DOI 10.1145/2076450.2076466
   Ongaro D., 2014, 2014 USENIX ANN TECH, P305
   Pauw W.D., 2013, 2013 First IEEE Working Conference on Software Visual-ization (VISSOFT), P1, DOI [DOI 10.1109/VISSOFT.2013.6650535, 10.1109/VISSOFT.2013.6650535]
   Pecchia Antonio, 2015, P INT C SOFTW ENG IC
   Pham Raphael, 2014, P ACM SIGSOFT INT S
   Philip A.Bernstein, 1986, CONCURRENCY CONTROL
   Pi AD, 2019, HPDC'19: PROCEEDINGS OF THE 28TH INTERNATIONAL SYMPOSIUM ON HIGH-PERFORMANCE PARALLEL AND DISTRIBUTED COMPUTING, P255, DOI 10.1145/3307681.3325404
   Pi Aidi, 2019, P INT S HIGH PERF PA, DOI [10.1145/3307681.3325404, DOI 10.1145/3307681.3325404]
   Reiss S. P., 1997, Proceedings. IEEE Symposium on Information Visualization (Cat. No.97TB100195), P46, DOI 10.1109/INFVIS.1997.636785
   Reiss SP, 2005, PROC INT CONF SOFTW, P662
   Reiss SP, 2003, PROC INT CONF SOFTW, P820, DOI 10.1109/ICSE.2003.1201303
   Reiss SP, 2001, PROC INT CONF SOFTW, P221, DOI 10.1109/ICSE.2001.919096
   Reiss SP, 2001, ACM SIGPLAN NOTICES, P2
   REISS SP, 1985, IEEE T SOFTWARE ENG, V11, P276, DOI 10.1109/TSE.1985.232211
   REISS SP, 1987, IEEE SOFTWARE, V4, P16, DOI 10.1109/MS.1987.231801
   Reiss SP, 1999, ACM T SOFTW ENG METH, V8, P297, DOI 10.1145/322993.322994
   REISS SP, 1990, IEEE SOFTWARE, V7, P57, DOI 10.1109/52.56450
   Reynolds Patrick, 2006, P 15 INT C WORLD WID, P347
   Salman Iflaah, 2015, P INT C SOFTW ENG IC
   Sambasivan RR, 2013, IEEE T VIS COMPUT GR, V19, P2466, DOI 10.1109/TVCG.2013.233
   Sawilowsky SS, 2009, J MOD APPL STAT METH, V8, P597, DOI 10.22237/jmasm/1257035100
   Schneider T, 2016, 2016 IEEE WORKING CONFERENCE ON SOFTWARE VISUALIZATION, P116, DOI 10.1109/VISSOFT.2016.17
   Schur M., 2013, Joint Meeting of the European Software Engineering Conference and the ACM SIGSOFT Symposium on the Foundations of Software Engineering, ESEC/FSE'13, Saint Petersburg, Russian Federation, August 18-26, 2013, P422
   Scott C, 2014, SIGCOMM'14: PROCEEDINGS OF THE 2014 ACM CONFERENCE ON SPECIAL INTEREST GROUP ON DATA COMMUNICATION, P395, DOI [10.1145/2619239.2626304, 10.1145/2740070.2626304]
   Scott C, 2016, 13TH USENIX SYMPOSIUM ON NETWORKED SYSTEMS DESIGN AND IMPLEMENTATION (NSDI '16), P291
   Shang WY, 2014, PROC IEEE INT CONF S, P21, DOI 10.1109/ICSME.2014.24
   Sigelman Benjamin H, 2010, Technical Report
   Sumbaly Roshan, 2012, P USENIX C FIL STOR, P18
   Taheri R, 2020, CLUSTER COMPUT, V23, P3233, DOI 10.1007/s10586-020-03083-5
   Tan Jiaqi, 2009, P USENIX WORKSH HOT
   Tan Jiaqi, 2008, P 1 USENIX C AN SYST
   Trümper J, 2013, CONF PROC INT SYMP C, P53, DOI 10.1109/ICPC.2013.6613833
   Walkinshaw Neil, 2008, 2008 23rd IEEE/ACM International Conference on Automated Software Engineering, P248, DOI 10.1109/ASE.2008.35
   Xu TY, 2015, ACM COMPUT SURV, V47, DOI 10.1145/2791577
   Xu Wei, 2010, P WORKSH MAN SYST VI
   Yuan Ding, 2012, P INT C SOFTW ENG IC
   Zhao Xu, 2017, P S OP SYST PRINC SO
NR 114
TC 18
Z9 18
U1 1
U2 6
PU ASSOC COMPUTING MACHINERY
PI NEW YORK
PA 1601 Broadway, 10th Floor, NEW YORK, NY USA
SN 1049-331X
EI 1557-7392
J9 ACM T SOFTW ENG METH
JI ACM Trans. Softw. Eng. Methodol.
PD APR
PY 2020
VL 29
IS 2
AR 9
DI 10.1145/3375633
PG 38
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA OJ1OJ
UT WOS:000583736700003
OA Bronze
DA 2024-07-18
ER

PT J
AU Soltana, G
   Sabetzadeh, M
   Briand, LC
AF Soltana, Ghanem
   Sabetzadeh, Mehrdad
   Briand, Lionel C.
TI Practical Constraint Solving for Generating System Test Data
SO ACM TRANSACTIONS ON SOFTWARE ENGINEERING AND METHODOLOGY
LA English
DT Article
DE System testing; test data generation; model-driven engineering; UML;
   OCL; metaheuristic search; SMT
ID VERIFICATION; SELECTION; MODELS
AB The ability to generate test data is often a necessary prerequisite for automated software testing. For the generated data to be fit for their intended purpose, the data usually have to satisfy various logical constraints. When testing is performed at a system level, these constraints tend to be complex and are typically captured in expressive formalisms based on first-order logic. Motivated by improving the feasibility and scalability of data generation for system testing, we present a novel approach, whereby we employ a combination of metaheuristic search and Satisfiability Modulo Theories (SMT) for constraint solving. Our approach delegates constraint solving tasks to metaheuristic search and SMT in such a way as to take advantage of the complementary strengths of the two techniques. We ground our work on test data models specified in UML, with OCL used as the constraint language. We present tool support and an evaluation of our approach over three industrial case studies. The results indicate that, for complex system test data generation problems, our approach presents substantial benefits over the state-of-the-art in terms of applicability and scalability.
C1 [Soltana, Ghanem] Univ Luxembourg, SnT, 29 Ave John F Kennedy, L-1855 Luxembourg, Luxembourg.
   [Sabetzadeh, Mehrdad; Briand, Lionel C.] Univ Ottawa, Sch EECS, 800 King Edward St, King, ON K1N 6N5, Canada.
C3 University of Luxembourg; University of Ottawa
RP Soltana, G (corresponding author), Univ Luxembourg, SnT, 29 Ave John F Kennedy, L-1855 Luxembourg, Luxembourg.
OI Sabetzadeh, Mehrdad/0000-0002-4711-8319
FU European Research Council under the European Union [694277]; Canada
   Research Chair program; European Research Council (ERC) [694277] Funding
   Source: European Research Council (ERC)
FX This work is supported by the European Research Council under the
   European Union's Horizon 2020 research and innovation program (grant
   agreement number 694277) as well as the Canada Research Chair program.
CR Ali S, 2016, EMPIR SOFTW ENG, V21, P2459, DOI 10.1007/s10664-015-9392-6
   Ali S, 2013, IEEE T SOFTWARE ENG, V39, P1376, DOI 10.1109/TSE.2013.17
   Ali S, 2010, IEEE T SOFTWARE ENG, V36, P742, DOI 10.1109/TSE.2009.52
   Ammann Paul, 2008, Introduction to software testing, V1st
   Anastasakis K, 2007, LECT NOTES COMPUT SC, V4735, P436
   Anastasakis Kyriakos, 2009, UML2ALLOY
   [Anonymous], 2001, Handbook of Automated Reasoning
   [Anonymous], 2010, Journal on Satisfiability, Boolean Modeling and Computation, DOI DOI 10.3233/SAT190075
   [Anonymous], 2012, P ACM SIGSOFT 20 INT
   Apache Foundation, 2006, AP OPENJPA
   Barrett Clark, 2011, Computer Aided Verification. Proceedings 23rd International Conference, CAV 2011, P171, DOI 10.1007/978-3-642-22110-1_14
   Barrett C., 2017, Technical Report
   Barrett C.W., 2018, Handbook of Model Checking, P305, DOI DOI 10.1007/978-3-319-10575-8_11
   Boyapati C., 2002, Software Engineering Notes, V27, P123, DOI 10.1145/566171.566191
   Braione P, 2018, PROC IEEE ACM INT C, P21, DOI 10.1145/3183440.3183472
   Braione P, 2017, PROCEEDINGS OF THE 26TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA'17), P90, DOI 10.1145/3092703.3092715
   Burdy L., 2005, International Journal on Software Tools for Technology Transfer, V7, P212, DOI 10.1007/s10009-004-0167-4
   Cabot J, 2009, LECT NOTES COMPUT SC, V5423, P40
   Cabot  Jordi, 2007, P 22 IEEE ACM INT C, P547, DOI DOI 10.1145/1321631.1321737
   Cantenot J, 2014, SOFTW TEST VERIF REL, V24, P499, DOI 10.1002/stvr.1537
   Chang Felix, 2018, ALLOY ANALYZER
   Clarisó R, 2019, IEEE T SOFTWARE ENG, V45, P412, DOI 10.1109/TSE.2017.2777830
   Clariso Robert, 2009, UMLTOCSP
   Coninfer Ltd, 2006, ECLIPSE CONSTR PROGR
   Dania C, 2016, 19TH ACM/IEEE INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS'16), P65, DOI 10.1145/2976767.2976774
   de Moura L, 2008, LECT NOTES COMPUT SC, V4963, P337, DOI 10.1007/978-3-540-78800-3_24
   De Moura L, 2011, COMMUN ACM, V54, P69, DOI 10.1145/1995376.1995394
   de Moura Leonardo Mendonca, 2012, Z3 SOLVER
   Dechter R., 2003, Constraint Processing
   Di Nardo D, 2017, ACM T SOFTW ENG METH, V26, DOI 10.1145/3053430
   Droste S, 2002, THEOR COMPUT SCI, V276, P51, DOI 10.1016/S0304-3975(01)00182-7
   Eclipse Foundation, 2007, ATL MOD TRANSF TECHN
   Eclipse Foundation, 2018, ECL OCL VERS 6 4 0
   Eclipse Foundation, 2006, ACC TRANSF MOD COD
   Eclipse Foundation, 2009, XPAND
   Eén N, 2004, LECT NOTES COMPUT SC, V2919, P502, DOI 10.1007/978-3-540-24605-3_37
   Galler SJ, 2014, INT J SOFTW TOOLS TE, V16, P727, DOI 10.1007/s10009-013-0272-3
   Goknil A., 2015, Proceedings of the 2015 International Symposium on Software Testing and Analysis, P385
   González CA, 2014, INFORM SOFTWARE TECH, V56, P821, DOI 10.1016/j.infsof.2014.03.003
   Harman M, 2012, ACM COMPUT SURV, V45, DOI 10.1145/2379776.2379787
   Harman M, 2010, IEEE T SOFTWARE ENG, V36, P226, DOI 10.1109/TSE.2009.71
   Holland J.H., 1992, Adaptation in Natural and Artificial Systems, DOI DOI 10.7551/MITPRESS/1090.001.0001
   Hurley P. J., 2014, A concise introduction to logic
   Inkumsah Kobi, 2008, 2008 23rd IEEE/ACM International Conference on Automated Software Engineering, P297, DOI 10.1109/ASE.2008.40
   Iqbal Muhammad Zohaib, 2012, Search Based Software Engineering. Proceedings of the 4th International Symposium (SSBSE 2012), P136, DOI 10.1007/978-3-642-33119-0_11
   Iqbal MZ, 2015, SOFTW SYST MODEL, V14, P483, DOI 10.1007/s10270-013-0328-6
   Jackson D, 2012, SOFTWARE ABSTRACTIONS: LOGIC, LANGUAGE, AND ANALYSIS, P1
   Katz G, 2016, PROCEEDINGS OF THE 2016 16TH CONFERENCE ON FORMAL METHODS IN COMPUTER-AIDED DESIGN (FMCAD 2016), P93, DOI 10.1109/FMCAD.2016.7886666
   Kempka J, 2015, THEOR COMPUT SCI, V605, P1, DOI 10.1016/j.tcs.2014.12.009
   Kessentini M, 2011, AUTOMAT SOFTW ENG, V18, P199, DOI 10.1007/s10515-010-0079-3
   KOREL B, 1990, IEEE T SOFTWARE ENG, V16, P870, DOI 10.1109/32.57624
   Kuhlmann Mirco, 2012, Modelling Foundations and Applications. Proceedings 8th European Conference, ECMFA 2012, P32, DOI 10.1007/978-3-642-31491-9_5
   Li BL, 2007, CIS: 2007 INTERNATIONAL CONFERENCE ON COMPUTATIONAL INTELLIGENCE AND SECURITY, PROCEEDINGS, P1048, DOI 10.1109/CIS.2007.150
   Libkin Leonid, 2004, TEXT THEORET COMP S, DOI 10.1007/978-3-662-07003-1
   McMinn P, 2004, SOFTW TEST VERIF REL, V14, P105, DOI 10.1002/stvr.294
   McMinn P, 2016, LECT NOTES COMPUT SC, V9962, P259, DOI 10.1007/978-3-319-47106-8_21
   Myers Glenford J., 2011, The Art of Software Testing
   Object Management Group, 2004, OBJ CONSTR LANG 2 4
   Object Management Group, 2015, OMG UN MOD LANG UML
   Oriol X, 2017, LECT NOTES COMPUT SC, V10650, P354, DOI 10.1007/978-3-319-69904-2_28
   Oriol X, 2017, J SYST SOFTWARE, V128, P130, DOI 10.1016/j.jss.2017.03.015
   Panichella A, 2018, IEEE T SOFTWARE ENG, V44, P122, DOI 10.1109/TSE.2017.2663435
   Pargas R. P., 1999, Software Testing, Verification and Reliability, V9, P263, DOI 10.1002/(SICI)1099-1689(199912)9:4<263::AID-STVR190>3.0.CO;2-Y
   Przigoda N, 2016, 19TH ACM/IEEE INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS'16), P261, DOI 10.1145/2976767.2976780
   Przigoda N, 2016, IET CYBER PHYS SYST, V1, P49, DOI 10.1049/iet-cps.2016.0022
   Queralt A, 2012, DATA KNOWL ENG, V73, P1, DOI 10.1016/j.datak.2011.09.004
   Red Hat, 2001, EVERYTHING DATA
   Rosner Nicolas, 2010, Abstract State Machines, Alloy, B and Z. Proceedings Second International Conference, ABZ 2010, P396, DOI 10.1007/978-3-642-11811-1_33
   Rosner N, 2013, IEEE INT CONF AUTOM, P147, DOI 10.1109/ASE.2013.6693075
   Runeson P., 1995, Informatica, V19, P195
   Russell S., 1995, Prentice Hall series in artificial intelligence, V25, P27
   Sartaj H, 2019, LECT NOTES COMPUT SC, V11664, P105, DOI 10.1007/978-3-030-27455-9_8
   Seiter J, 2013, DES AUT TEST EUROPE, P1189
   Semeráth O, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P969, DOI 10.1145/3180155.3180186
   Sen S, 2009, LECT NOTES COMPUT SC, V5563, P148, DOI 10.1007/978-3-642-02408-5_11
   Shaikh A., 2010, Proceedings of the IEEE/ACM international conference on Automated Software Engineering, P185, DOI DOI 10.1145/1858996.1859038
   Soeken M, 2011, LECT NOTES COMPUT SC, V6706, P152, DOI 10.1007/978-3-642-21768-5_12
   Soltana G, 2017, IEEE INT CONF AUTOM, P872, DOI 10.1109/ASE.2017.8115698
   Soltana Ghanem, 2017, SEARCH BASED SYNTHET
   Su T, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P654, DOI 10.1109/ICSE.2015.81
   Torres A, 2017, INFORM SOFTWARE TECH, V82, P1, DOI 10.1016/j.infsof.2016.09.009
   Utting M., 2010, Practical model-based testing: a tools approach
   Wang JH, 2018, IEEE INT CONF AUTOM, P820, DOI 10.1145/3238147.3240468
   Warmer J., 2003, OBJECT CONSTRAINT LA, Vsecond
   Wong W. Eric, 2001, MUTATION TESTING NEW
   Zhang HR, 2011, INT J COMPUT SCI NET, V11, P43
NR 86
TC 16
Z9 16
U1 1
U2 4
PU ASSOC COMPUTING MACHINERY
PI NEW YORK
PA 1601 Broadway, 10th Floor, NEW YORK, NY USA
SN 1049-331X
EI 1557-7392
J9 ACM T SOFTW ENG METH
JI ACM Trans. Softw. Eng. Methodol.
PD APR
PY 2020
VL 29
IS 2
AR 11
DI 10.1145/3381032
PG 45
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA OJ1OJ
UT WOS:000583736700005
OA Green Published, Green Submitted
DA 2024-07-18
ER

PT J
AU Haas, R
   Niedermayr, R
   Roehm, T
   Apel, S
AF Haas, Roman
   Niedermayr, Rainer
   Roehm, Tobias
   Apel, Sven
TI Is Static Analysis Able to Identify Unnecessary Source Code?
SO ACM TRANSACTIONS ON SOFTWARE ENGINEERING AND METHODOLOGY
LA English
DT Article
DE Unnecessary code; code stability; code centrality
AB Grown software systems often contain code that is not necessary anymore. Such unnecessary code wastes resources during development and maintenance, for example, when preparing code for migration or certification. Running a profiler may reveal code that is not used in production, but it is often time-consuming to obtain representative data in this way.
   We investigate to what extent a static analysis approach, which is based on code stability and code centrality, is able to identify unnecessary code and whether its recommendations are relevant in practice. To study the feasibility and usefulness of our approach, we conducted a study involving 14 open-source and closed-source software systems. As there is no perfect oracle for unnecessary code, we compared recommendations for unnecessary code with historical cleanups, runtime usage data, and feedback from 25 developers of five software projects. Our study shows that recommendations generated from stability and centrality information point to unnecessary code that cannot be identified by dead code detectors. Developers confirmed that 34% of recommendations were indeed unnecessary and deleted 20% of the recommendations shortly after our interviews. Overall, our results suggest that static analysis can provide quick feedback on unnecessary code and is useful in practice.
C1 [Haas, Roman; Niedermayr, Rainer; Roehm, Tobias] CQSE GmbH, Munich, Germany.
   [Niedermayr, Rainer] Univ Stuttgart, Stuttgart, Germany.
   [Apel, Sven] Saarland Univ, Saarbrucken, Germany.
C3 University of Stuttgart; Saarland University
RP Haas, R (corresponding author), CQSE GmbH, Munich, Germany.
EM haas@cqse.eu; niedermayr@cqse.eu; roehm@cqse.eu; apel@cs.uni-saarland.de
OI Haas, Roman/0000-0002-3248-3401; Apel, Sven/0000-0003-3687-2233
FU German Federal Ministry of Education and Research (BMBF) [01IS18012A];
   German Research Foundation [AP 206/11-1]
FX This work was partially funded by the German Federal Ministry of
   Education and Research (BMBF), grant "SOFIE, 01IS18012A". Apel's work
   has been supported by the German Research Foundation (AP 206/11-1). The
   responsibility for this article lies with the authors.
CR Ahmed I, 2015, INT SYMP EMP SOFTWAR, P31, DOI 10.1109/ESEM.2015.7321186
   [Anonymous], 2014, RECOMMENDATION SYSTE, DOI DOI 10.1007/978-3-642-45135-5_4
   [Anonymous], 2019, REDUCE YOUR APP SIZE
   Canfora G, 2014, EMPIR SOFTW ENG, V19, P1, DOI 10.1007/s10664-012-9214-z
   Deissenboeck F., 2010, 2010 32nd International Conference on Software Engineering (ICSE), P247, DOI 10.1145/1810295.1810343
   Dreier F., 2015, THESIS
   Eder S, 2014, PROC IEEE INT CONF S, P446, DOI 10.1109/ICSME.2014.71
   Eder S, 2012, PROC INT CONF SOFTW, P1102, DOI 10.1109/ICSE.2012.6227109
   Eichberg M, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P474, DOI 10.1145/2786805.2786865
   Fard AM, 2013, IEEE INT WORK C SO, P116, DOI 10.1109/SCAM.2013.6648192
   Felfernig A, 2011, RECOMMENDER SYSTEMS HANDBOOK, P187, DOI 10.1007/978-0-387-85820-3_6
   Gee T., 2016, UNUSED CODE DETECTIO
   Haas R., 2017, THESIS
   Heinemann L, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE COMPANION 2014), P592, DOI 10.1145/2591062.2591068
   Jiang YF, 2016, P INT COMP SOFTW APP, P12, DOI 10.1109/COMPSAC.2016.146
   Juergens E, 2011, CONF PROC INT SYMP C, P171, DOI 10.1109/ICPC.2011.12
   Juergens E, 2009, PROC INT CONF SOFTW, P485, DOI 10.1109/ICSE.2009.5070547
   Krinke J., 2011, P 5 INT WORKSHOP SOF, P28
   Krinke J, 2008, EIGHTH IEEE INTERNATIONAL WORKING CONFERENCE ON SOURCE CODE ANALYSIS AND MANIPULATION, PROCEEDINGS, P57, DOI 10.1109/SCAM.2008.14
   Lehman M. M., 1985, Program Evolution: Processes of Software Change
   Maurer S. B., 2014, HDB GRAPH THEORY, P180
   Mondal M., 2012, P ACM S APPL COMPUTI, P1227, DOI DOI 10.1145/2245276.2231969
   Moser R, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P181, DOI 10.1145/1368088.1368114
   Munson JC, 1998, PROC IEEE INT CONF S, P24, DOI 10.1109/ICSM.1998.738486
   Parnas D. L., 1994, ICSE-16. 16th International Conference on Software Engineering (Cat. No.94CH3409-0), P279, DOI 10.1109/ICSE.1994.296790
   Redini N, 2019, LECT NOTES COMPUT SC, V11543, P482, DOI 10.1007/978-3-030-22038-9_23
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Scanniello Giuseppe, 2014, 2014 40th EUROMICRO Conference on Software Engineering and Advanced Applications. Proceedings, P392, DOI 10.1109/SEAA.2014.67
   Sharif H, 2018, IEEE INT CONF AUTOM, P329, DOI 10.1145/3238147.3238160
   Siegmund J, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P9, DOI 10.1109/ICSE.2015.24
   Sora I, 2015, 2015 IEEE 10TH JUBILEE INTERNATIONAL SYMPOSIUM ON APPLIED COMPUTATIONAL INTELLIGENCE AND INFORMATICS (SACI), P495, DOI 10.1109/SACI.2015.7208254
   Spieler J., 2019, UCDETECTOR UNNECESSA
   Steidl D., 2012, 2012 19th Working Conference on Reverse Engineering (WCRE), P93, DOI 10.1109/WCRE.2012.19
   Streitel F., 2014, SOFTWARETECHNIK TREN, V34, P2
   Yang HY, 2008, ASWEC 2008: 19TH AUSTRALIAN SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P239, DOI 10.1109/ASWEC.2008.35
   Zaidman A, 2008, J SOFTW MAINT EVOL-R, V20, P387, DOI 10.1002/smr.370
NR 36
TC 10
Z9 11
U1 0
U2 1
PU ASSOC COMPUTING MACHINERY
PI NEW YORK
PA 2 PENN PLAZA, STE 701, NEW YORK, NY 10121-0701 USA
SN 1049-331X
EI 1557-7392
J9 ACM T SOFTW ENG METH
JI ACM Trans. Softw. Eng. Methodol.
PD JAN
PY 2020
VL 29
IS 1
AR 6
DI 10.1145/3368267
PG 23
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA NI1FP
UT WOS:000565104100006
DA 2024-07-18
ER

PT J
AU Tian, C
   Chen, C
   Duan, ZH
   Zhao, L
AF Tian, Cong
   Chen, Chu
   Duan, Zhenhua
   Zhao, Liang
TI Differential Testing of Certificate Validation in SSL/TLS
   Implementations: An RFC-guided Approach
SO ACM TRANSACTIONS ON SOFTWARE ENGINEERING AND METHODOLOGY
LA English
DT Article
DE Differential testing; certificate validation; SSL/TLS; dynamic symbolic
   execution; request for comments
AB Certificate validation in Secure Sockets Layer or Transport Layer Security protocol (SSL/TLS) is critical to Internet security. Thus, it is significant to check whether certificate validation in SSL/TLS implementations is correctly implemented. With this motivation, we propose a novel differential testing approach that is based on the standard Request for Comments (RFC). First, rules of certificates are extracted automatically from RFCs. Second, low-level test cases are generated through dynamic symbolic execution. Third, high-level test cases, i.e., certificates, are assembled automatically. Finally, with the assembled certificates being test cases, certificate validations in SSL/TLS implementations are tested to reveal latent vulnerabilities or bugs. Our approach named RFCcert has the following advantages: (1) certificates of RFCcert are discrepancy-targeted, since they are assembled according to standards instead of genetics; (2) with the obtained certificates, RFCcert not only reveals the invalidity of traditional differential testing but also is able to conduct testing that traditional differential testing cannot do; and (3) the supporting tool of RFCcert has been implemented and extensive experiments show that the approach is effective in finding bugs of SSL/TLS implementations. In addition, by providing seed certificates for mutation approaches with RFCcert, the ability of mutation approaches in finding distinct discrepancies is significantly enhanced.
C1 [Tian, Cong; Chen, Chu; Duan, Zhenhua; Zhao, Liang] Xidian Univ, ICTT, Xian 710071, Shaanxi, Peoples R China.
   [Tian, Cong; Chen, Chu; Duan, Zhenhua; Zhao, Liang] Xidian Univ, ISN Lab, Xian 710071, Shaanxi, Peoples R China.
   [Chen, Chu] Qufu Normal Univ, Sch Informat Sci & Engn, Rizhao 276826, Shandong, Peoples R China.
C3 Xidian University; Xidian University; Qufu Normal University
RP Tian, C; Duan, ZH (corresponding author), Xidian Univ, ICTT, Xian 710071, Shaanxi, Peoples R China.; Tian, C; Duan, ZH (corresponding author), Xidian Univ, ISN Lab, Xian 710071, Shaanxi, Peoples R China.
EM ctian@mail.xidian.edu.cn; zhhduan@mail.xidian.edu.cn
RI tian, cong/KUD-1813-2024
FU NSFC [61732013, 61420106004, 61751207]
FX This research was supported by NSFC with Grants No. 61732013, No.
   61420106004, and No. 61751207.
CR Aliprandi A, 2016, NAT CHEM, V8, P10, DOI [10.1038/NCHEM.2383, 10.1038/nchem.2383]
   [Anonymous], P IEEE S SECUR PRIV
   [Anonymous], P IEEE S SECUR PRIV
   [Anonymous], 2018, 2018 INT CARN C SEC, DOI DOI 10.1109/CCST.2018.8585565
   [Anonymous], P IEEE S SECUR PRIV
   [Anonymous], 2011, RFC
   [Anonymous], 2012, ACM QUEUE, DOI DOI 10.1145/2090147.2094081
   [Anonymous], TRANSPORT LAYER SECU
   [Anonymous], 2013, UPDATES INTERNET X 5
   [Anonymous], TRANSPORT LAYER SECU
   [Anonymous], 2015, PROHIBITING RC4 CIPH
   [Anonymous], 2007, P 6 JOINT M EUR SOFT
   [Anonymous], 2008, The transport layer security (TLS) protocol version 1.2
   [Anonymous], INTERNET X 509 PUBLI
   [Anonymous], NEZHA V0 1
   [Anonymous], TRANSPORT LAYER SECU
   [Anonymous], TRANSPORT LAYER SECU
   [Anonymous], TLS FALLBACK SIGNALI
   [Anonymous], 2009, More Tricks for Defeating SSL in Practice
   Barnes R., 2015, Deprecating Secure Sockets Layer Version 3.0 (No. RFC7568)
   Bauer A, 2011, COMPUT J, V54, P58, DOI 10.1093/comjnl/bxq042
   Boyapati C., 2002, Software Engineering Notes, V27, P123, DOI 10.1145/566171.566191
   Bradner S., 1997, Key words for use in RFCs to Indicate Requirement Levels
   Brubaker C, 2014, P IEEE S SECUR PRIV, P114, DOI 10.1109/SP.2014.15
   Cadar C., 2008, Proceedings of the 8th USENIX conference on Operating systems design and implementation, OSDI'08, (USA), P209
   Casini A, 2015, NAT REV MOL CELL BIO, V16, P568, DOI 10.1038/nrm4014
   Chen YT, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P793, DOI 10.1145/2786805.2786835
   Chipounov V, 2011, ACM SIGPLAN NOTICES, V46, P265, DOI [10.1145/1961296.1950396, 10.1145/1961295.1950396]
   Chipounov V, 2012, ACM T COMPUT SYST, V30, DOI 10.1145/2110356.2110358
   Cooper David, 2008, Technical Report.
   Dessbesell GF, 2008, 2008 4TH SOUTHERN CONFERENCE ON PROGRAMMABLE LOGIC, PROCEEDINGS, P87, DOI 10.1109/SPL.2008.4547737
   Fielding R., 1999, 2616 RFC
   Fielding R., 1997, HYPERTEXT TRANSFER P
   Forrest S., 2008, Proceedings of the Workshop on New Security Paradigms NSPW, P99
   Freier A., 2011, IETF, V3, P1
   Georgiev Martin, 2012, P 2012 ACM C COMPUTE, P38
   Gillmor D., 2016, NEGOTIATED FINITE FI
   Godefroid P, 2005, ACM SIGPLAN NOTICES, V40, P213, DOI 10.1145/1064978.1065036
   Godefroid Patrice, 2008, Network and Distributed Systems Security
   Grieco G, 2016, ACM SIGPLAN NOTICES, V51, P13, DOI [10.1145/2976002.2976017, 10.1145/3241625.2976017]
   Hierons RM, 2009, ACM COMPUT SURV, V41, DOI 10.1145/1459352.1459354
   Jana S, 2016, PROCEEDINGS OF THE 25TH USENIX SECURITY SYMPOSIUM, P345
   Kaminsky D, 2010, LECT NOTES COMPUT SC, V6052, P289, DOI 10.1007/978-3-642-14577-3_22
   Lämmel R, 2006, LECT NOTES COMPUT SC, V3964, P19
   Langley A., 2016, ChaCha20-Poly1305 Cipher Suites for Transport Layer Security (TLS)
   Leiba B, 2017, Ambiguity of uppercase vs lowercase in RFC 2119 key words.
   Marinov D, 2001, 16TH ANNUAL INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2001), PROCEEDINGS, P22, DOI 10.1109/ASE.2001.989787
   Marlinspike M., 2009, Null Prefix Attacks Against SSL/TLS Certificates
   Marlinspike M., 2002, IE SSL Vulnerability
   Marlinspike Moxie., 2009, NEW TRICKS DEFEATING
   MAURER PM, 1990, IEEE SOFTWARE, V7, P50, DOI 10.1109/52.56422
   NIST, 2017, CVE-2016-8495
   Pacheco C., 2007, OOPSLA 2007 COMPANIO, P815
   Pacheco C, 2007, PROC INT CONF SOFTW, P75
   Pandita R, 2012, PROC INT CONF SOFTW, P815, DOI 10.1109/ICSE.2012.6227137
   Rescorla E., 2000, HTTP TLS
   Sen K, 2006, LECT NOTES COMPUT SC, V4144, P419
   Sirer EG, 1999, USENIX ASSOCIATION PROCEEDINGS OF THE 2ND CONFERENCE ON DOMAIN-SPECIFIC LANGUAGES (DSL'99), P1
   Slankas John, 2014, ACSAC, P366
   Somorovsky J, 2016, CCS'16: PROCEEDINGS OF THE 2016 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P1492, DOI 10.1145/2976749.2978411
   Song D, 2008, LECT NOTES COMPUT SC, V5352, P1, DOI 10.1007/978-3-540-89862-7_1
   Sutton M., 2007, Fuzzing: brute force vulnerability discovery
   Turner S.Polk., 2011, Prohibiting Secure Sockets Layer (SSL) Version 2.0. RFC 6176 (Proposed Standard
   Walz A, 2020, IEEE T DEPEND SECURE, V17, P278, DOI 10.1109/TDSC.2017.2763947
   Xiao X., 2012, P ACM SIGSOFT 20 INT, P1
   Yamaguchi F., 2015, THESIS
   Yamaguchi F., 2013, P 2013 ACM SIGSAC C, P499
   Yamaguchi F, 2012, 28TH ANNUAL COMPUTER SECURITY APPLICATIONS CONFERENCE (ACSAC 2012), P359
   Yamaguchi F, 2015, P IEEE S SECUR PRIV, P797, DOI 10.1109/SP.2015.54
   Yamaguchi F, 2014, P IEEE S SECUR PRIV, P590, DOI 10.1109/SP.2014.44
   Yamaguchi Y, 2011, 2011 INTERNATIONAL CONFERENCE ON ADVANCES IN SOCIAL NETWORKS ANALYSIS AND MINING (ASONAM 2011), P13, DOI 10.1109/ASONAM.2011.58
   Yang XJ, 2011, PLDI 11: PROCEEDINGS OF THE 2011 ACM CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P283
NR 72
TC 16
Z9 16
U1 0
U2 23
PU ASSOC COMPUTING MACHINERY
PI NEW YORK
PA 1601 Broadway, 10th Floor, NEW YORK, NY USA
SN 1049-331X
EI 1557-7392
J9 ACM T SOFTW ENG METH
JI ACM Trans. Softw. Eng. Methodol.
PD OCT
PY 2019
VL 28
IS 4
AR 24
DI 10.1145/3355048
PG 37
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA JM4SV
UT WOS:000496207000007
DA 2024-07-18
ER

PT J
AU Jiang, JM
   Zhu, HB
   Li, Q
   Zhao, YX
   Hong, Z
   Zhang, S
   Gong, P
AF Jiang, Jian-Min
   Zhu, Huibiao
   Li, Qin
   Zhao, Yongxin
   Hong, Zhong
   Zhang, Shi
   Gong, Ping
TI Isolation Modeling and Analysis Based on Mobility
SO ACM TRANSACTIONS ON SOFTWARE ENGINEERING AND METHODOLOGY
LA English
DT Article
DE Mobility; isolation; dependency structure; scheduling policy
ID PETRI NETS
AB In a mobile system, mobility refers to a change in position of a mobile object with respect to time and its reference point, whereas isolation means the isolation relationship between mobile objects under some scheduling policies. Inspired by event-based formal models and the ambient calculus, we first propose the two types of special events, entering and exiting an ambient, as movement events to model and analyze mobility. Based on mobility, we then introduce the notion of the isolation of mobile objects for ambients. To ensure the isolation, a priority policy needs to be used to schedule the movement of mobile objects. However, traditional scheduling policies focus on task scheduling and depend on the strong hypothesis: The scheduled tasks are independent-that is, the scheduled tasks do not affect each other. In a practical mobile system, mobile objects and ambients interact with each other. It is difficult to separate a mobile system into independent tasks. We finally present an automatic approach for generating a priority scheduling policy without considering the preceding assumption. The approach can guarantee the isolation of the mobile objects for ambients in a mobile system. Experiments demonstrate these results.
C1 [Jiang, Jian-Min] Fujian Normal Univ, Coll Math & Informat, Digital Fujian Inst Big Data Secur Technol, 8 Shangsan Rd, Fuzhou 350007, Fujian, Peoples R China.
   [Jiang, Jian-Min] Chengdu Univ Informat Technol, Coll Software Engn, 24 Xingfu Rd, Chengdu 610225, Sichuan, Peoples R China.
   [Zhu, Huibiao; Li, Qin; Zhao, Yongxin] East China Normal Univ, Shanghai Key Lab Trustworthy Comp, 3663 Zhongshanbei Rd, Shanghai 200062, Peoples R China.
   [Hong, Zhong; Zhang, Shi; Gong, Ping] Fujian Normal Univ, Coll Math & Informat, 8 Shangsan Rd, Fuzhou 350007, Fujian, Peoples R China.
C3 Fujian Normal University; Chengdu University of Information Technology;
   East China Normal University; Fujian Normal University
RP Jiang, JM (corresponding author), Fujian Normal Univ, Coll Math & Informat, Digital Fujian Inst Big Data Secur Technol, 8 Shangsan Rd, Fuzhou 350007, Fujian, Peoples R China.; Jiang, JM (corresponding author), Chengdu Univ Informat Technol, Coll Software Engn, 24 Xingfu Rd, Chengdu 610225, Sichuan, Peoples R China.
EM jjm@fjnu.edu.cn; hbzhu@sei.ecnu.edu.cn; qli@sei.ecnu.edu.cn;
   yxzhao@sei.ecnu.edu.cn; fjfzhz@fjnu.edu.cn; shi@fjnu.edu.cn;
   pinggong@fjnu.edu.cn
FU National Natural Science Foundation of China [61772004, 61872145,
   61602177]; Science and Technology Commission of Shanghai Municipality
   Project [18ZR1411600]; Natural Science Foundation of Fujian province
   [2018J01777, 2018J01781]
FX This work is supported by National Natural Science Foundation of China
   (No. 61772004, No. 61872145, and No. 61602177), Science and Technology
   Commission of Shanghai Municipality Project (No. 18ZR1411600), and the
   Natural Science Foundation of Fujian province (No. 2018J01777 and No.
   2018J01781).
CR Altisen K, 2002, REAL-TIME SYST, V23, P55, DOI 10.1023/A:1015346419267
   Aoki S, 2017, ACM IEEE INT CONF CY, P219, DOI 10.1145/3055004.3055028
   Asperti A, 2009, MATH STRUCT COMP SCI, V19, P1265, DOI 10.1017/S0960129509990193
   Audsley N. C., 1993, Control Engineering Practice, V1, P71, DOI 10.1016/0967-0661(93)92105-D
   Azimi R, 2014, ACM IEEE INT CONF CY, P1, DOI 10.1109/ICCPS.2014.6843706
   Baldan P, 2004, THEOR COMPUT SCI, V323, P129, DOI 10.1016/j.tcs.2004.04.001
   Baumeister H, 2003, LECT NOTES COMPUT SC, V2591, P278
   Bliudze S, 2008, IEEE T COMPUT, V57, P1315, DOI 10.1109/TC.2008.26
   Blood EA, 2008, IEEE POW ENER SOC GE, P5601
   Börger E, 2012, J COMPUT SYST SCI, V78, P939, DOI 10.1016/j.jcss.2011.08.004
   Boudol G., 1994, Formal Aspects of Computing, V6, P165, DOI 10.1007/BF01221098
   Bujorianu MC, 2009, MED C CONTR AUTOMAT, P1166, DOI 10.1109/MED.2009.5164704
   Camp T, 2002, WIREL COMMUN MOB COM, V2, P483, DOI 10.1002/wcm.72
   Cardelli L, 1998, LECT NOTES COMPUT SC, V1378, P140, DOI 10.1007/BFb0053547
   Cardelli L., 1995, Conference Record of POPL'95: 22nd ACM SIGPLAN-SIGACT Symposium Principles of Programming Languages, P286, DOI 10.1145/199448.199516
   CARRIERO N, 1989, COMMUN ACM, V32, P444, DOI 10.1145/63334.63337
   Chen G., 2000, TECHNICAL REPORT TR2
   Chen HF, 2018, SOFTWARE PRACT EXPER, V48, P105, DOI 10.1002/spe.2519
   CPS Steering Group, 2008, CPS SUMM 2008
   Decker G, 2008, P IEEE I C SERV COMP, P249, DOI 10.1109/SCC.2008.44
   Dresner K, 2008, J ARTIF INTELL RES, V31, P591, DOI 10.1613/jair.2502
   Gosling J., 2000, The Java Language Specification
   Guan Xudong, 2000, P INT C SOFTW THEOR, P377
   Jernigan Jack D, 2001, TECHNICAL REPORT
   Jian-min Jiang, 2011, Proceedings of the 2011 IEEE Asia-Pacific Services Computing Conference (APSCC), P442, DOI 10.1109/APSCC.2011.81
   Jiang JM, 2017, ACM TRANS CYBER-PHYS, V1, DOI 10.1145/2823353
   Jiang JM, 2015, ACM T EMBED COMPUT S, V14, DOI 10.1145/2783438
   Jiang JM, 2014, 2014 THEORETICAL ASPECTS OF SOFTWARE ENGINEERING CONFERENCE (TASE), P177, DOI 10.1109/TASE.2014.28
   Jiang JM, 2012, SCI CHINA INFORM SCI, V55, P2738, DOI 10.1007/s11432-012-4744-y
   JianMin Jiang, 2013, Software Engineering Notes, V38, P37, DOI 10.1145/2492248.2492267
   Kim KD, 2012, P IEEE, V100, P1287, DOI 10.1109/JPROC.2012.2189792
   Kosiuczenko Piotr, 2002, P INT C CONC MOD, P147
   Kusek M., 2006, P INT WORKSH AG OR S, P51
   Lanese I., 2013, P 28 ANN ACM S APPL, P1339
   Langerak R., 1992, FORMAL DESCRIPTION T, VC-10, P331
   Levi F, 2003, ACM T PROGR LANG SYS, V25, P1, DOI 10.1145/596980.596981
   Li Q, 2012, IEEE T VEH TECHNOL, V61, P297, DOI 10.1109/TVT.2011.2176520
   Li Qiao., 2012, Scheduling in cyber-physical systems, DOI 10.1.1.361.7156&rep=rep1&type=pdf
   LIU CL, 1973, J ACM, V20, P46, DOI 10.1145/321738.321743
   LUCKHAM DC, 1993, J SYST SOFTWARE, V21, P253, DOI 10.1016/0164-1212(93)90027-U
   McCann PJ, 1998, IEEE T SOFTWARE ENG, V24, P97, DOI 10.1109/32.666824
   Merro Massimo, 2002, BISIMULATION CONGRUE, V37
   MILNER R, 1992, INFORM COMPUT, V100, P1, DOI [10.1016/0890-5401(92)90008-4, 10.1016/0890-5401(92)90009-5]
   Milner R, 1982, CALCULUS COMMUNICATI
   MURATA T, 1989, P IEEE, V77, P541, DOI 10.1109/5.24143
   NIELSEN M, 1992, THEOR COMPUT SCI, V96, P3, DOI 10.1016/0304-3975(92)90180-N
   Nielsen Mogens, 1981, THEORETICAL COMPUTER, V13, P1, DOI DOI 10.1016/0304-3975(81)90112-2
   Stankovic J. A., 1998, SPRINGER INT SERIES, V460, DOI [10.1007/978-1-4615-5535-3, DOI 10.1007/978-1-4615-5535-3]
   Tang QH, 2012, ACM T EMBED COMPUT S, V11, DOI 10.1145/2331147.2331167
   Teller D., 2002, CONCUR 2002 - Concurrency Theory. 13th International Conference Proceedings (Lecture Notes in Computer Science Vol.2421), P288
   Tyson G, 2013, COMMUN ACM, V56, P90, DOI 10.1145/2500501
   van Glabbeek RJ, 2009, THEOR COMPUT SCI, V410, P4111, DOI 10.1016/j.tcs.2009.06.014
   VANGLABBEEK RJ, 1995, IEEE S LOG, P199, DOI 10.1109/LICS.1995.523257
   Wang H, 2013, IEEE T INTELL TRANSP, V14, P819, DOI 10.1109/TITS.2012.2237509
   White JamesE., 1996, MOBILE AGENTS WHITE
   Winskel Glynn, 1995, MODELS CONCURRENCY
   Wu J, 2010, INT CONF COMP SCI, P50, DOI 10.1109/ICCSIT.2010.5563537
   Xu BQ, 2016, IEEE INT C ENG COMP, P33, DOI [10.1109/ICECCS.2016.22, 10.1109/ICECCS.2016.014]
   Xu DX, 2003, IEEE T SOFTWARE ENG, V29, P31, DOI 10.1109/TSE.2003.1166587
   Zhang FM, 2008, REAL TIM SYST SYMP P, P47, DOI 10.1109/RTSS.2008.52
   2014, FUNDAM INF, V134, P219, DOI DOI 10.3233/FI-2014-1101
NR 61
TC 4
Z9 4
U1 0
U2 11
PU ASSOC COMPUTING MACHINERY
PI NEW YORK
PA 2 PENN PLAZA, STE 701, NEW YORK, NY 10121-0701 USA
SN 1049-331X
EI 1557-7392
J9 ACM T SOFTW ENG METH
JI ACM Trans. Softw. Eng. Methodol.
PD APR
PY 2019
VL 28
IS 2
AR 10
DI 10.1145/3306606
PG 31
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HY3MO
UT WOS:000468030900006
DA 2024-07-18
ER

PT J
AU Linares-Vásquez, M
   Bavota, G
   Bernal-Cárdenas, C
   Di Penta, M
   Oliveto, R
   Poshyvanyk, D
AF Linares-Vasquez, Mario
   Bavota, Gabriele
   Bernal-Cardenas, Carlos
   Di Penta, Massimiliano
   Oliveto, Rocco
   Poshyvanyk, Denys
TI Multi-Objective Optimization of Energy Consumption of GUIs in Android
   Apps
SO ACM TRANSACTIONS ON SOFTWARE ENGINEERING AND METHODOLOGY
LA English
DT Article
DE Energy consumption; mobile applications; empirical study
ID NONDOMINATED SORTING APPROACH; EVOLUTIONARY ALGORITHMS
AB The number of mobile devices sold worldwide has exponentially increased in recent years, surpassing that of personal computers in 2011. Such devices daily download and run millions of apps that take advantage of modern hardware features (e.g., multi-core processors, large Organic Light-Emitting Diode-OLED-screens, etc.) to offer exciting user experiences. Clearly, there is a cost to pay in terms of energy consumption and, in particular, of reduced battery life. This has pushed researchers to investigate how to reduce the energy consumption of apps, for example, by optimizing the color palette used in the app's GUI. Whilst past research in this area aimed at optimizing energy while keeping an acceptable level of contrast, this article proposes an approach, named Gui Energy Multi-objective optiMization for Android apps (GEMMA), for generating color palettes using a multi-objective optimization technique, which produces color solutions optimizing energy consumption and contrast while using consistent colors with respect to the original color palette. The empirical evaluation demonstrates (i) substantial improvements in terms of the three different objectives, (ii) a concrete reduction of the energy consumption as assessed by a hardware power monitor, (iii) the attractiveness of the generated color compositions for apps' users, and (iv) the suitability of GEMMA to be adopted in industrial contexts.
C1 [Linares-Vasquez, Mario] Univ Andes, Bogota, Colombia.
   [Linares-Vasquez, Mario] Cra 1Este 19A-40,ML 652, Bogota, Colombia.
   [Bavota, Gabriele] USI, Via G Buffi 13, CH-6900 Lugano, Switzerland.
   [Bernal-Cardenas, Carlos; Poshyvanyk, Denys] Coll William & Mary, Williamsburg, VA USA.
   [Bernal-Cardenas, Carlos] McGlothlin St Hall Room 101c, Williamsburg, VA 23185 USA.
   [Di Penta, Massimiliano] Univ Sannio, Benevento, Italy.
   [Di Penta, Massimiliano] Via Traiano, I-82100 Benevento, Italy.
   [Oliveto, Rocco] Univ Molise, Campobasso, Italy.
   [Oliveto, Rocco] Via Hertz 1, I-86090 Pesche, Italy.
   [Poshyvanyk, Denys] McGlothlin St Hall 105, Williamsburg, VA 23185 USA.
C3 Universidad de los Andes (Colombia); Universita della Svizzera Italiana;
   William & Mary; University of Sannio; University of Molise
RP Linares-Vásquez, M (corresponding author), Univ Andes, Bogota, Colombia.; Linares-Vásquez, M (corresponding author), Cra 1Este 19A-40,ML 652, Bogota, Colombia.
EM m.linaresv@uniandes.edu.co; gabriele.bavota@usi.ch; cebernal@cs.wm.edu;
   dipenta@unisannio.it; rocco.oliveto@unimol.it; denys@cs.wm.edu
RI Di Penta, Massimiliano/AAF-9656-2021
OI Linares-Vasquez, Mario/0000-0003-0161-2888; Poshyvanyk,
   Denys/0000-0002-5626-7586; BAVOTA, Gabriele/0000-0002-2216-3148
FU NSF [CCF-1525902]; NSF CAREER [CCF-1253837]; Markos project - European
   Commission [FP7-317743]; SNF project JITRA [172479]
FX This work is supported in part by the NSF CCF-1525902 and NSF CAREER
   CCF-1253837 grants. Massimiliano Di Penta is partially supported by the
   Markos project, funded by the European Commission under Contract No.
   FP7-317743. Gabriele Bavota is partially supported by the SNF project
   JITRA, No. 172479.
CR Agolli Tedis, 2017, 2017 IEEE/ACM 4th International Conference on Mobile Software Engineering and Systems (MOBILESoft). Proceedings, P30, DOI 10.1109/MOBILESoft.2017.17
   Aickin M, 1996, AM J PUBLIC HEALTH, V86, P726, DOI 10.2105/AJPH.86.5.726
   Amalfitano D, 2012, IEEE INT CONF AUTOM, P258, DOI 10.1145/2351676.2351717
   [Anonymous], PRACTICAL NONPARAMET
   [Anonymous], 2011, P 10 ACM WORKSH HOT
   [Anonymous], 1991, TIME SERIES TECHNIQU
   Arcuri A, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1, DOI 10.1145/1985793.1985795
   Azim T, 2013, ACM SIGPLAN NOTICES, V48, P641, DOI [10.1145/2509136.2509549, 10.1145/2544173.2509549]
   Chowdhury SA, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P49, DOI [10.1145/2901739.2901763, 10.1109/MSR.2016.015]
   Couto M, 2017, 21ST INTERNATIONAL SYSTEMS & SOFTWARE PRODUCT LINE CONFERENCE (SPLC 2017), VOL 1, P84, DOI 10.1145/3106195.3106214
   Deb K, 2002, IEEE T EVOLUT COMPUT, V6, P182, DOI 10.1109/4235.996017
   Deb K, 2014, IEEE T EVOLUT COMPUT, V18, P577, DOI 10.1109/TEVC.2013.2281535
   Di Nucci D, 2017, PROC IEEE ACM INT C, P3, DOI 10.1109/ICSE-C.2017.18
   Di Nucci D, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P103, DOI 10.1109/SANER.2017.7884613
   Dong M., 2012, IEEE T MOBILE COMPUT, V11, P9
   Dong M, 2012, IEEE T MOBILE COMPUT, V11, P724, DOI 10.1109/TMC.2012.40
   Durillo JJ, 2011, ADV ENG SOFTW, V42, P760, DOI 10.1016/j.advengsoft.2011.05.014
   Durillo JJ, 2010, IEEE T EVOLUT COMPUT, V14, P618, DOI 10.1109/TEVC.2009.2034647
   GenialApps, 2015, SING HAPPY BIRTHDAY
   Goldberg DavidE., 2007, Genetic Algorithms in Search, Optimization Machine Learning
   Gomez L, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P72, DOI 10.1109/ICSE.2013.6606553
   Grissom R. J., 2005, EFFECT SIZES RES BRO
   Gui JP, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P100, DOI 10.1109/ICSE.2015.32
   Hao S, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P92, DOI 10.1109/ICSE.2013.6606555
   Hasan S., 2016, P 38 INT C SOFTW ENG
   Hindle A., 2012, 2012 9th IEEE Working Conference on Mining Software Repositories (MSR 2012), P78, DOI 10.1109/MSR.2012.6224303
   Hindle A, 2015, EMPIR SOFTW ENG, V20, P374, DOI 10.1007/s10664-013-9276-6
   Hindle Abram, 2014, Proceedings of the 11th Working Conference on Mining Software Repositories, P12
   HOLM S, 1979, SCAND J STAT, V6, P65
   Iyer S., 2003, P INT C MOB SYST APP
   Jabbarvand R, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P208, DOI 10.1145/3106237.3106244
   Jabbarvand R, 2015, 2015 IEEE/ACM FOURTH INTERNATIONAL WORKSHOP ON GREEN AND SUSTAINABLE SOFTWARE (GREENS), P8, DOI 10.1109/GREENS.2015.9
   Jabbarvand Reyhaneh, 2016, P INT S SOFTW AN TES
   Jain H, 2014, IEEE T EVOLUT COMPUT, V18, P602, DOI 10.1109/TEVC.2013.2281534
   Knowles J, 1999, P 1999 C EV COMP CEC, P98, DOI [DOI 10.1109/CEC.1999.781913, 10.1109/cec.1999.781913]
   Kwon YW, 2013, PROC IEEE INT CONF S, P170, DOI 10.1109/ICSM.2013.28
   Langdon WB., 2002, Foundations of Genetic Programming, DOI [DOI 10.1007/978-3-662-04726-2, 10.1007/978-3-662-04726-2]
   Li D., 2014, P 2014 INT S SOFTWAR, P339
   Li D., 2016, P 38 INT C SOFTW ENG
   Li D., 2015, P DEMOBILE 15, P25, DOI [10.1145/2804345.2804351, DOI 10.1145/2804345.2804351]
   Li D., 2014, P INT C SOFTW MAINT
   Li D., 2014, ICSE'14, P573
   Li D, 2013, P 2013 INT S SOFTW T, P78, DOI DOI 10.1145/2483760.2483780
   Li D, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P958, DOI 10.1145/2786805.2803190
   Lima LG, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P517, DOI 10.1109/SANER.2016.85
   Linares-Vasquez M., 2014, Proceedings of the 11th Working Conference on Mining Software Repositories, P2
   Linares-Vásquez M, 2017, PROC IEEE ACM INT C, P11, DOI 10.1109/ICSE-C.2017.10
   Linares-Vásquez M, 2017, J SYST SOFTWARE, V130, P1, DOI 10.1016/j.jss.2017.04.018
   Linares-Vásquez M, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P143, DOI 10.1145/2786805.2786847
   Linares-Vásquez M, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P111, DOI 10.1109/MSR.2015.18
   Linares-Vasquez Mario, 2017, REPLICATION PACKAGE
   Liu KN, 2015, LECT NOTES COMPUT SC, V9033, P316, DOI 10.1007/978-3-662-46675-9_21
   Liu YP, 2014, IEEE T SOFTWARE ENG, V40, P911, DOI 10.1109/TSE.2014.2323982
   Liu YP, 2013, INT CONF PERVAS COMP, P2, DOI 10.1109/PerCom.2013.6526708
   Manotas I, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P503, DOI 10.11455/2568225.2568297
   Manotas Irene, 2016, P INT C SOFTW ENG IC
   Monsoon- Solutions, 2018, POW MON
   Moran K, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P673, DOI 10.1145/2786805.2786857
   Moran Kevin, 2016, P IEEE INT C SOFTW T
   Moshagen M, 2010, INT J HUM-COMPUT ST, V68, P689, DOI 10.1016/j.ijhcs.2010.05.006
   Next Srl, 2015, PETRELLA
   Nguyen BN, 2014, IEEE T SOFTWARE ENG, V40, P216, DOI 10.1109/TSE.2014.2300857
   Oliveira W, 2017, IEEE WORK CONF MIN S, P42, DOI 10.1109/MSR.2017.66
   Pathak A., 2012, Mobisys, DOI DOI 10.1145/2307636.2307661
   Pathak Abhijit D., 2012, Proceedings of the PCIM ASIA 2012. International Conference and Exhibition for Power Electronics, Intelligent Motion, Renewable Energy and Energy Management, P29
   Pereira R, 2017, SLE'17: PROCEEDINGS OF THE 10TH ACM SIGPLAN INTERNATIONAL CONFERENCE ON SOFTWARE LANGUAGE ENGINEERING, P256, DOI 10.1145/3136014.3136031
   Pinto G, 2016, PROC IEEE INT CONF S, P20, DOI 10.1109/ICSME.2016.34
   Pinto G, 2014, ACM SIGPLAN NOTICES, V49, P345, DOI [10.1145/2714064.2660235, 10.1145/2660193.2660235]
   Rasmussen K., 2014, P 3 INT WORKSHOP GRE, P38
   Romansky S, 2017, PROC IEEE INT CONF S, P273, DOI 10.1109/ICSME.2017.79
   Saborido R., 2017, CORR
   Sahin C, 2016, J SOFTW-EVOL PROC, V28, P565, DOI 10.1002/smr.1762
   Sahin C, 2016, J SYST SOFTWARE, V117, P307, DOI 10.1016/j.jss.2016.03.031
   Sahin Cagri, 2014, P 8 ACM IEEE INT S E, V36
   Santos Eddie Antonio, 2017, CORR
   Sharma G., 2002, DIGITAL COLOR IMAGIN
   Shuai Hao, 2012, 2012 First International Workshop on Green and Sustainable Software (GREENS), P1, DOI 10.1109/GREENS.2012.6224263
   Stanley-Marbell P, 2016, PROCEEDINGS OF THE ELEVENTH EUROPEAN CONFERENCE ON COMPUTER SYSTEMS, (EUROSYS 2016), DOI 10.1145/2901318.2901347
   Taba SES, 2014, LECT NOTES COMPUT SC, V8541, P370, DOI 10.1007/978-3-319-08245-5_22
   Tian Y, 2015, PROC IEEE INT CONF S, P301, DOI 10.1109/ICSM.2015.7332476
   Tukey J.W., 1977, EXPLORATORY DATA ANA, V2
   W3C, 2015, CONTR RAT DEF
   W3C, 2016, CONTR RAT LUM
   Wan M., 2015, P 8 IEEE INT C SOFTW
   Wang J, 2012, TR1209 DEP COMP SCI
   Wang S, 2016, PROC INT CONF SOFTW, P631, DOI 10.1145/2884781.2884880
   Wei XT, 2012, MOBICOM 12: PROCEEDINGS OF THE 18TH ANNUAL INTERNATIONAL CONFERENCE ON MOBILE COMPUTING AND NETWORKING, P137
   Wu HW, 2016, PROCEEDINGS OF THE 25TH INTERNATIONAL CONFERENCE ON COMPILER CONSTRUCTION (CC 2016), P185, DOI 10.1145/2892208.2892218
   Yu Xiao, 2010, Proceedings of the 2010 IEEE/ACM Int'l Conference on Green Computing and Communications (GreenCom) and Int'l Conference on Cyber, Physical and Social Computing (CPSCom), P27, DOI 10.1109/GreenCom-CPSCom.2010.114
   Zang Jack, 2013, P INT WORKSH ENG MOB
   Zitzler E, 1999, IEEE T EVOLUT COMPUT, V3, P257, DOI 10.1109/4235.797969
   Zitzler E., 2001, 103 TIK DEPT EL ENG
   Zitzler E, 2000, EVOL COMPUT, V8, P173, DOI 10.1162/106365600568202
NR 93
TC 20
Z9 22
U1 0
U2 4
PU ASSOC COMPUTING MACHINERY
PI NEW YORK
PA 2 PENN PLAZA, STE 701, NEW YORK, NY 10121-0701 USA
SN 1049-331X
EI 1557-7392
J9 ACM T SOFTW ENG METH
JI ACM Trans. Softw. Eng. Methodol.
PD OCT
PY 2018
VL 27
IS 3
AR 14
DI 10.1145/3241742
PG 47
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HJ4EZ
UT WOS:000457128100006
DA 2024-07-18
ER

PT J
AU Troya, J
   Segura, S
   Parejo, JA
   Ruiz-Cortés, A
AF Troya, Javier
   Segura, Sergio
   Antonio Parejo, Jose
   Ruiz-Cortes, Antonio
TI Spectrum-Based Fault Localization in Model Transformations
SO ACM TRANSACTIONS ON SOFTWARE ENGINEERING AND METHODOLOGY
LA English
DT Article
DE Model transformation; spectrum-based; fault localization; debugging;
   testing
ID ENVIRONMENT; VALIDATION; GENERATION; TESTS; GRAPH; TOOL; ATL
AB Model transformations play a cornerstone role in Model-Driven Engineering (MDE), as they provide the essential mechanisms for manipulating and transforming models. The correctness of software built using MDE techniques greatly relies on the correctness of model transformations. However, it is challenging and error prone to debug them, and the situation gets more critical as the size and complexity of model transformations grow, where manual debugging is no longer possible.
   Spectrum-Based Fault Localization (SMFL) uses the results of test cases and their corresponding code coverage information to estimate the likelihood of each program component (e.g., statements) of being faulty. In this article we present an approach to apply SBFL for locating the faulty rules in model transformations. We evaluate the feasibility and accuracy of the approach by comparing the effectiveness of 18 different stateof-the-art SBFL techniques at locating faults in model transformations. Evaluation results revealed that the best techniques, namely Kulcynski2, Mountford, Ochiai, and Zoltan, lead the debugger to inspect a maximum of three rules to locate the bug in around 74% of the cases. Furthermore, we compare our approach with a static approach for fault localization in model transformations, observing a clear superiority of the proposed SBFL-based method.
C1 [Troya, Javier; Segura, Sergio; Antonio Parejo, Jose; Ruiz-Cortes, Antonio] Univ Seville, Seville, Spain.
   [Troya, Javier; Segura, Sergio; Antonio Parejo, Jose; Ruiz-Cortes, Antonio] ETS Ingn Informat, Dept Lenguajes & Sistemas Informat, Ave Reina Mercedes S-N, Seville 41012, Spain.
C3 University of Sevilla; University of Sevilla
RP Troya, J (corresponding author), Univ Seville, Seville, Spain.; Troya, J (corresponding author), ETS Ingn Informat, Dept Lenguajes & Sistemas Informat, Ave Reina Mercedes S-N, Seville 41012, Spain.
EM jitroya@us.es; sergiosegura@us.es; japarejo@us.es; aruiz@us.es
RI Maestre, Jose Antonio Parejo/A-2822-2009; Cortés, Antonio
   Ruiz/B-9056-2008; Troya, Javier/B-6951-2017; Segura, Sergio/A-9615-2011
OI Maestre, Jose Antonio Parejo/0000-0002-4708-4606; Cortés, Antonio
   Ruiz/0000-0001-9827-1834; Troya, Javier/0000-0002-1314-9694; Segura,
   Sergio/0000-0001-8816-6213
FU European Commission (FEDER); Spanish Government under CICYT project BELI
   [TIN2015-70560-R]; Andalusian Government [P12-TIC-1867]
FX This work has been partially supported by the European Commission
   (FEDER) and Spanish Government under CICYT project BELI
   (TIN2015-70560-R) and the Andalusian Government project COPAS
   (P12-TIC-1867).
CR Abreu R, 2007, TAIC PART 2007 - TESTING: ACADEMIC AND INDUSTRIAL CONFERENCE - PRACTICE AND RESEARCH TECHNIQUES, PROCEEDINGS, P89, DOI 10.1109/TAIC.PART.2007.13
   Abreu R, 2009, IEEE INT CONF AUTOM, P88, DOI 10.1109/ASE.2009.25
   Abreu R, 2009, J SYST SOFTWARE, V82, P1780, DOI 10.1016/j.jss.2009.06.035
   Ali S, 2014, GECCO'14: PROCEEDINGS OF THE 2014 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P1231, DOI 10.1145/2576768.2598308
   Ali S, 2013, IEEE T SOFTWARE ENG, V39, P1376, DOI 10.1109/TSE.2013.17
   Almendros-Jiménez JM, 2016, LECT NOTES COMPUT SC, V9893, P16, DOI 10.1007/978-3-319-45547-1_2
   Anastasakis K, 2010, SOFTW SYST MODEL, V9, P69, DOI 10.1007/s10270-008-0110-3
   [Anonymous], THESIS
   [Anonymous], P 2 SOFTW DEV AUT C
   [Anonymous], 2013, NONPARAMETRIC STAT M
   [Anonymous], ATLTEST WHITE BOX TE
   [Anonymous], P 6 INT C PRED MOD S
   [Anonymous], 22 JORN ING SOFTW BA
   [Anonymous], LNCS
   [Anonymous], 2015, P PROJ SHOWC STAF
   [Anonymous], DOCBOOK DEFINITIVE G
   [Anonymous], INVITED TALKS DEMONS
   [Anonymous], 2013, P 2013 INT S SOFTW T
   [Anonymous], P ECMDA WORKSH INT M
   [Anonymous], P 1 INT WORKSH MOD D
   [Anonymous], ATL TRANSF EX BIBTEX
   [Anonymous], THIS IS BOOGIE UNPUB
   [Anonymous], P OF SBMF
   [Anonymous], P 11 ACM INT C EMB S
   [Anonymous], ATL TRANSF LANG ATL
   [Anonymous], 2006, COMP 21 ACM SIGPLAN, DOI DOI 10.1145/1176617.1176691
   [Anonymous], SOUND EXECUTION SEMA
   [Anonymous], DEDUCTIVE APPROACH F
   [Anonymous], WORKSH P EUR C MOD D
   [Anonymous], 2012, DISSERTATION, DOI DOI 10.7666/D.Y2195989
   [Anonymous], ATL ZOO
   [Anonymous], IEEE T SOFTWARE ENG, DOI DOI 10.1109/TSE.2014.2372785
   [Anonymous], SPECTRUM BASED FAULT
   [Anonymous], 2006, P ECOOP WORKSH DOM S
   [Anonymous], TRACTABLE MODEL TRAN
   Aranega V, 2015, SOFTW TEST VERIF REL, V25, P653, DOI 10.1002/stvr.1532
   Arendt T, 2010, LECT NOTES COMPUT SC, V6394, P121
   Assiri FY, 2017, SOFTWARE QUAL J, V25, P171, DOI 10.1007/s11219-016-9312-z
   Benelallam A, 2015, P 2015 ACM SIGPLAN I, P37
   Brambilla Marco, 2012, MODELDRIVEN SOFTWARE
   Brottier E, 2006, ISSRE 2006:17TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P85
   Burgueño L, 2015, IEEE T SOFTWARE ENG, V41, P490, DOI 10.1109/TSE.2014.2375201
   Cariou E., 2004, P OCL MDE, P1
   Cheng Gong, 2012, Proceedings of the 2012 IEEE 36th IEEE Annual Computer Software and Applications Conference Workshops (COMPSACW), P470, DOI 10.1109/COMPSACW.2012.89
   Cheng Z, 2015, LECT NOTES COMPUT SC, V9152, P133, DOI 10.1007/978-3-319-21155-8_11
   Cicchetti A, 2011, LECT NOTES COMPUT SC, V6563, P183, DOI 10.1007/978-3-642-19440-5_11
   Clavel M., 2007, ALL MAUDE A HIGH PER, DOI DOI 10.1007/978-3-540-71999-1
   Csertán G, 2002, ASE 2002: 17TH IEEE INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, P267, DOI 10.1109/ASE.2002.1115027
   Czarnecki K, 2006, IBM SYST J, V45, P621, DOI 10.1147/sj.453.0621
   da Silva AR, 2015, COMPUT LANG SYST STR, V43, P139, DOI 10.1016/j.cl.2015.06.001
   de Lara J, 2002, LECT NOTES COMPUT SC, V2306, P174
   Derrac J, 2011, SWARM EVOL COMPUT, V1, P3, DOI 10.1016/j.swevo.2011.02.002
   Falleri Jean-Remy., 2006, European Conference on Model- Driven Architecture Traceability Workshop, P31
   Fleck M., 2015, Proc. of NasBASE, P1
   Fleck M, 2017, IEEE T SOFTWARE ENG, V43, P1009, DOI 10.1109/TSE.2017.2654255
   Fleck M, 2016, J SOFTW-EVOL PROC, V28, P1081, DOI 10.1002/smr.1804
   Fleck M, 2016, LECT NOTES COMPUT SC, V9765, P79, DOI 10.1007/978-3-319-42064-6_6
   Fleurey F, 2009, SOFTW SYST MODEL, V8, P185, DOI 10.1007/s10270-007-0074-8
   Friedman M, 1940, ANN MATH STAT, V11, P86, DOI 10.1214/aoms/1177731944
   Giner P, 2009, LECT NOTES COMPUT SC, V5795, P748, DOI 10.1007/978-3-642-04425-0_61
   Greenyer J, 2010, SOFTW SYST MODEL, V9, P21, DOI 10.1007/s10270-009-0121-8
   Guerra Esther, 2012, Theory and Practice of Model Transformations. Proceedings 5th International Conference, ICMT 2012, P40, DOI 10.1007/978-3-642-30476-7_3
   Guerra E, 2015, SOFTW SYST MODEL, V14, P623, DOI 10.1007/s10270-013-0369-x
   Guerra E, 2013, AUTOMAT SOFTW ENG, V20, P5, DOI 10.1007/s10515-012-0102-y
   Hamill M, 2009, IEEE T SOFTWARE ENG, V35, P484, DOI 10.1109/TSE.2009.3
   Harrold MJ, 2000, SOFTW TEST VERIF REL, V10, P171, DOI 10.1002/1099-1689(200009)10:3<171::AID-STVR209>3.0.CO;2-J
   He X, 2018, INFORM SOFTWARE TECH, V104, P109, DOI 10.1016/j.infsof.2018.07.010
   HOLM S, 1979, SCAND J STAT, V6, P65
   Hua Jie Lee, 2010, 2010 IEEE Proceedings of 34th Annual Computer Software and Applications Conference (COMPSAC 2010), P218, DOI 10.1109/COMPSAC.2010.26
   Janssen T, 2009, SINTER 09, P23
   Jézéquel JM, 2011, LECT NOTES COMPUT SC, V6491, P201, DOI 10.1007/978-3-642-18023-1_5
   Jia Y, 2009, INFORM SOFTWARE TECH, V51, P1379, DOI 10.1016/j.infsof.2009.04.016
   Jiménez A, 2015, SCI COMPUT PROGRAM, V98, P3, DOI 10.1016/j.scico.2014.09.003
   Jones J.A., 2005, P 20 IEEE ACM INT C, P273, DOI [10.1145/1101908.1101949, DOI 10.1145/1101908.1101949]
   Jouault F, 2008, SCI COMPUT PROGRAM, V72, P31, DOI 10.1016/j.scico.2007.08.002
   Kolovos D S., 2013, Proceedings of the Workshop on Scalability in Model Driven Engineering. BigMDE'13, V2, P1
   Kuhne T., 2006, Softw Syst Model, V5, P369, DOI [DOI 10.1007/S10270-006-0017-9, 10.1007/s10270-006-0017-9]
   Langer P, 2012, J OBJECT TECHNOL, V11, DOI 10.5381/jot.2012.11.3.a4
   Liu C, 2006, IEEE T SOFTWARE ENG, V32, P831, DOI 10.1109/TSE.2006.105
   Lúcio L, 2016, SOFTW SYST MODEL, V15, P647, DOI 10.1007/s10270-014-0429-x
   Ludewig Jochen, 2003, Softw Syst Model, V2, P5
   Mao XG, 2014, J SYST SOFTWARE, V89, P51, DOI 10.1016/j.jss.2013.08.031
   MAXWELL AE, 1968, BRIT J MATH STAT PSY, V21, P105, DOI 10.1111/j.2044-8317.1968.tb00401.x
   Mellor S.J., 2004, MDA DISTILLED PRINCI, V88
   Moreno-Delgado A, 2014, LECT NOTES COMPUT SC, V8569, P132
   Mottu JM, 2006, LECT NOTES COMPUT SC, V4066, P376
   Naish L, 2015, 2015 24TH AUSTRALASIAN SOFTWARE ENGINEERING CONFERENCE (ASWEC 2015), P11, DOI 10.1109/ASWEC.2015.12
   Naish L, 2011, ACM T SOFTW ENG METH, V20, DOI 10.1145/2000791.2000795
   Oakes BJ, 2018, SOFTW SYST MODEL, V17, P815, DOI 10.1007/s10270-016-0548-7
   Omar E, 2017, INFORM SOFTWARE TECH, V81, P3, DOI 10.1016/j.infsof.2016.01.016
   Poernomo I, 2010, LECT NOTES COMPUT SC, V6447, P56, DOI 10.1007/978-3-642-16901-4_6
   Rivera JE, 2009, S VIS LANG HUM CEN C, P51, DOI 10.1109/VLHCC.2009.5295300
   Rose LM, 2014, SOFTW SYST MODEL, V13, P323, DOI 10.1007/s10270-012-0245-0
   Cuadrado JS, 2018, SOFTW SYST MODEL, V17, P779, DOI 10.1007/s10270-016-0541-1
   Cuadrado JS, 2017, IEEE T SOFTWARE ENG, V43, P868, DOI 10.1109/TSE.2016.2635137
   Cuadrado JS, 2009, SOFTW SYST MODEL, V8, P325, DOI 10.1007/s10270-008-0093-0
   Sánchez JS, 2017, PROCEEDINGS OF THE 9TH INTERNATIONAL CONFERENCE ON EDUCATION TECHNOLOGY AND COMPUTERS (ICETC 2017), P12, DOI 10.1145/3175536.3175563
   Segura S, 2016, IEEE T SOFTWARE ENG, V42, P805, DOI 10.1109/TSE.2016.2532875
   Selim Gehan M. K., 2012, Modelling Foundations and Applications. Proceedings 8th European Conference, ECMFA 2012, P90, DOI 10.1007/978-3-642-31491-9_9
   Sen S, 2009, LECT NOTES COMPUT SC, V5563, P148, DOI 10.1007/978-3-642-02408-5_11
   Sendall S, 2003, IEEE SOFTWARE, V20, P42, DOI 10.1109/MS.2003.1231150
   Shin Yoo, 2012, Search Based Software Engineering. Proceedings of the 4th International Symposium (SSBSE 2012), P244, DOI 10.1007/978-3-642-33119-0_18
   Taentzer G, 2003, LECT NOTES COMPUT SC, V3062, P446
   Troya J, 2018, J SYST SOFTWARE, V136, P188, DOI 10.1016/j.jss.2017.05.043
   Troya J, 2011, J OBJECT TECHNOL, V10, DOI 10.5381/jot.2011.10.1.a5
   Troya J, 2014, COMPUT STAND INTER, V36, P863, DOI 10.1016/j.csi.2014.01.002
   Vallecillo Antonio, 2012, Theory and Practice of Model Transformations. Proceedings 5th International Conference, ICMT 2012, P56, DOI 10.1007/978-3-642-30476-7_4
   Vargha A, 2000, J EDUC BEHAV STAT, V25, P101, DOI 10.3102/10769986025002101
   Warmer J., 2003, OBJECT CONSTRAINT LA, Vsecond
   Wimmer M, 2013, LECT NOTES COMPUT SC, V8107, P203, DOI 10.1007/978-3-642-41533-3_13
   Wimmer M, 2009, IEEE INT CONF AUTOM, P3, DOI 10.1109/ASE.2009.99
   Wohlin C., 2012, Experimentation in Software Engineering
   Wong W. E., 2012, Proceedings of the 2012 IEEE Sixth International Conference on Software Security and Reliability (SERE 2012), P21, DOI 10.1109/SERE.2012.12
   Wong WE, 2016, IEEE T SOFTWARE ENG, V42, P707, DOI 10.1109/TSE.2016.2521368
   Wong WE, 2014, IEEE T RELIAB, V63, P290, DOI 10.1109/TR.2013.2285319
   Xiaozhen Xue, 2013, 2013 ACM / IEEE International Symposium on Empirical Software Engineering and Measurement (ESEM), P113, DOI 10.1109/ESEM.2013.22
   Xie XY, 2013, ACM T SOFTW ENG METH, V22, DOI 10.1145/2522920.2522924
   Yu YB, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P201, DOI 10.1145/1368088.1368116
   Yue Jia, 2011, IEEE Transactions on Software Engineering, V37, P649, DOI 10.1109/TSE.2010.62
   Zhang XY, 2007, PLDI'07: PROCEEDINGS OF THE 2007 ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P415, DOI 10.1145/1250734.1250782
   Zhang ZY, 2009, INFORM SOFTWARE TECH, V51, P1573, DOI 10.1016/j.infsof.2009.06.013
NR 121
TC 33
Z9 35
U1 0
U2 6
PU ASSOC COMPUTING MACHINERY
PI NEW YORK
PA 1601 Broadway, 10th Floor, NEW YORK, NY USA
SN 1049-331X
EI 1557-7392
J9 ACM T SOFTW ENG METH
JI ACM Trans. Softw. Eng. Methodol.
PD OCT
PY 2018
VL 27
IS 3
AR 13
DI 10.1145/3241744
PG 50
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HJ4EZ
UT WOS:000457128100005
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Scanniello, G
   Gravino, C
   Genero, M
   Cruz-Lemus, JA
   Tortora, G
AF Scanniello, Giuseppe
   Gravino, Carmine
   Genero, Marcela
   Cruz-Lemus, Jose A.
   Tortora, Genoveffa
TI On the Impact of UML Analysis Models on Source-Code Comprehensibility
   and Modifiability
SO ACM TRANSACTIONS ON SOFTWARE ENGINEERING AND METHODOLOGY
LA English
DT Article
DE Documentation; Design; Experimentation; Human Factors; Analysis models;
   UML; controlled experiment; family of experiments; maintenance;
   comprehensibility; modifiability; replicated experiments
ID SOFTWARE; DOCUMENTATION; GUIDELINES; KNOWLEDGE
AB We carried out a family of experiments to investigate whether the use of UML models produced in the requirements analysis process helps in the comprehensibility and modifiability of source code. The family consists of a controlled experiment and 3 external replications carried out with students and professionals from Italy and Spain. 86 participants with different abilities and levels of experience with UML took part. The results of the experiments were integrated through the use of meta-analysis. The results of both the individual experiments and meta-analysis indicate that UML models produced in the requirements analysis process influence neither the comprehensibility of source code nor its modifiability.
C1 [Scanniello, Giuseppe] Univ Basilicata, Potenza, Italy.
   [Gravino, Carmine; Tortora, Genoveffa] Univ Salerno, Salerno, Italy.
   [Genero, Marcela; Cruz-Lemus, Jose A.] Univ Castilla La Mancha, E-13071 Ciudad Real, Spain.
C3 University of Basilicata; University of Salerno; Universidad de
   Castilla-La Mancha
RP Scanniello, G (corresponding author), Univ Basilicata, Potenza, Italy.
EM giuseppe.scanniello@unibas.it
RI GENERO, MARCELA/L-6480-2014; Cruz-Lemus, Jose A./B-7299-2015
OI GENERO, MARCELA/0000-0002-6868-7465; Gravino,
   Carmine/0000-0002-4394-9035; Cruz-Lemus, Jose A./0000-0002-0470-609X;
   Scanniello, Giuseppe/0000-0003-0024-7508
FU GEODAS-BC project (Ministerio de Economa y Competitividad and Fondo
   Europeo de Desarrollo Regional FEDER) [TIN2012-37493-C03-01]
FX This research has been partially funded by GEODAS-BC project (Ministerio
   de Economa y Competitividad and Fondo Europeo de Desarrollo Regional
   FEDER, TIN2012-37493-C03-01). Corresponding author's email:
   giuseppe.scanniello@unibas.it.
CR Abbes M, 2011, EUR CON SFTWR MTNCE, P181, DOI 10.1109/CSMR.2011.24
   Abrahao Silvia Mara, 2012, IEEE T SOFTW ENG
   Agarwal R, 2003, COMMUN ACM, V46, P248, DOI 10.1145/903893.903944
   Anda B, 2006, EMPIR SOFTW ENG, V11, P555, DOI 10.1007/s10664-006-9020-6
   [Anonymous], PRACTICAL NONPARAMET
   [Anonymous], 2005, ADDISON WESLEY OBJEC
   [Anonymous], 1993, 1 IEEE INT S REQUIRE
   [Anonymous], 1960, CONTRIBUTIONS PROBAB
   Arisholm E, 2006, IEEE T SOFTWARE ENG, V32, P365, DOI 10.1109/TSE.2006.59
   Asuncion H., 2007, 6th Joint Meeting of the European Software Engineering Conference and the ACM SIGSOFT Symposium on the Foundations of Software Engineering (ESEC/FSE), P115
   Baeza-Yates Ricardo, 1999, MODERN INFORM RETRIE, V463
   Baker R.D., 1995, Randomization Tests
   Basili V. R., 1996, Empirical Software Engineering, V1, P133, DOI 10.1007/BF00368702
   BASILI VR, 1988, IEEE T SOFTWARE ENG, V14, P758, DOI 10.1109/32.6156
   Basili VR, 1999, IEEE T SOFTWARE ENG, V25, P456, DOI 10.1109/32.799939
   Biostat, 2006, BIOST MAN
   Bruegge Bernd., 2003, OBJECT ORIENTED SOFT, V2nd
   Budgen D, 2011, SOFTWARE PRACT EXPER, V41, P363, DOI 10.1002/spe.1009
   Carver J, 2003, NINTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM, PROCEEDINGS, P239
   Cohen D, 2004, ADV COMPUT, V62, P1, DOI 10.1016/S0065-2458(03)62001-2
   Colosimo M, 2009, INFORM SOFTWARE TECH, V51, P433, DOI 10.1016/j.infsof.2008.05.012
   de Souza S.C.B., 2005, P 23 ANN INT C DES C, P68, DOI [10.1145/1085313, 10.1145/1085313.1085331]
   Devore J., 1999, APPL STAT ENG SCI
   Dobing B, 2006, COMMUN ACM, V49, P109, DOI 10.1145/1125944.1125949
   Dzidek WJ, 2008, IEEE T SOFTWARE ENG, V34, P407, DOI 10.1109/TSE.2008.15
   Ellis PD, 2010, ESSENTIAL GUIDE TO EFFECT SIZES: STATISTICAL POWER, META-ANALYSIS AND THE INTERPRETATION OF RESEARCH RESULTS, P1
   Erickson J, 2007, COMMUN ACM, V50, P46, DOI 10.1145/1278201.1278205
   Genero M, 2011, J DATABASE MANAGE, V22, P46, DOI 10.4018/jdm.2011070103
   Gravino Carmine, 2012, Model Driven Engineering Languages and Systems. Proceedings 15th International Conference, MODELS 2012, P185, DOI 10.1007/978-3-642-33666-9_13
   Gravino Carmine, 2011, 2011 18th Working Conference on Reverse Engineering, P67, DOI 10.1109/WCRE.2011.18
   Gravino C., P 2010 ACM S APPL CO, P2365
   Grossman M, 2005, INFORM SOFTWARE TECH, V47, P383, DOI 10.1016/j.infsof.2004.09.005
   Hedges LV., 2014, STAT METHODS META AN
   Host M., 2000, Empirical Software Engineering, V5, P201, DOI 10.1023/A:1026586415054
   Jedlitschka A., 2008, Guide to advanced empirical software engineering, P201, DOI DOI 10.1007/978-1-84800-044-5_8
   Juristo N., 2013, BASICS SOFTWARE ENG
   Kampenes VB, 2007, INFORM SOFTWARE TECH, V49, P1073, DOI 10.1016/j.infsof.2007.02.015
   Kitchenham BA, 2002, IEEE T SOFTWARE ENG, V28, P721, DOI 10.1109/TSE.2002.1027796
   Kitchenham B, 2008, EMPIR SOFTW ENG, V13, P97, DOI 10.1007/s10664-007-9053-5
   LAUESEN S, 2002, SOFTWARE REQUIREMENT
   Lindvall M, 1996, SOFTWARE PRACT EXPER, V26, P1161, DOI 10.1002/(SICI)1097-024X(199610)26:10<1161::AID-SPE58>3.0.CO;2-X
   McDermid J.A., 1991, SOFTWARE ENG REFEREN
   Mendongal MG, 2008, IEEE INT C ENG COMP, P203, DOI 10.1109/ICECCS.2008.38
   OMG, 2010, UN MOD LANG TM URL
   Oppenheim A.N., 1992, QUESTIONNAIRE DESIGN
   Prechelt L, 2002, IEEE T SOFTWARE ENG, V28, P595, DOI 10.1109/TSE.2002.1010061
   Ricca F, 2010, IEEE T SOFTWARE ENG, V36, P96, DOI 10.1109/TSE.2009.69
   Scanniello Giuseppe, 2011, 15th Annual Conference on Evaluation & Assessment in Software Engineering (EASE 2011), P76, DOI 10.1049/ic.2011.0009
   Scanniello G., 2012, P INT WORKSH EXP EMP, P25
   Scanniello G, 2010, ICEIS 2010: PROCEEDINGS OF THE 12TH INTERNATIONAL CONFERENCE ON ENTERPRISE INFORMATION SYSTEMS, VOL 3: INFORMATION SYSTEMS ANALYSIS AND SPECIFICATION, P141
   SHAPIRO SS, 1965, BIOMETRIKA, V52, P591, DOI 10.1093/biomet/52.3-4.591
   Shull F, 2004, EMPIR SOFTW ENG, V9, P111, DOI 10.1023/B:EMSE.0000013516.80487.33
   Shull FJ, 2008, EMPIR SOFTW ENG, V13, P211, DOI 10.1007/s10664-008-9060-1
   Sjoberg DIK, 2005, IEEE T SOFTWARE ENG, V31, P733, DOI 10.1109/TSE.2005.97
   Tilley S., 2003, Proceedings of the 21st Annual International Conference on Documentation, P184
   Tryggeseth E., 1997, Empirical Software Engineering, V2, P201, DOI 10.1023/A:1009778023863
   Vegas S., 2006, International Symposium on Empirical Software Engineering, P28, DOI DOI 10.1145/1159733.1159741
   Verelst J, 2004, 2004 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P17
   Weidenhaupt K, 1998, IEEE SOFTWARE, V15, P34, DOI 10.1109/52.663783
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
NR 60
TC 24
Z9 24
U1 1
U2 7
PU ASSOC COMPUTING MACHINERY
PI NEW YORK
PA 2 PENN PLAZA, STE 701, NEW YORK, NY 10121-0701 USA
SN 1049-331X
EI 1557-7392
J9 ACM T SOFTW ENG METH
JI ACM Trans. Softw. Eng. Methodol.
PD MAR
PY 2014
VL 23
IS 2
AR 13
DI 10.1145/2491912
PG 26
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AF8XA
UT WOS:000334997700003
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Chang, H
   Mariani, L
   Pezzè, M
AF Chang, Herve
   Mariani, Leonardo
   Pezze, Mauro
TI Exception Handlers for Healing Component-Based Systems
SO ACM TRANSACTIONS ON SOFTWARE ENGINEERING AND METHODOLOGY
LA English
DT Article
DE Design; Exception handling in component-based software systems; healing
   connectors; healing patterns; self-healing; component-based software
   engineering; COTS components
AB To design effective exception handlers, developers must predict at design time the exceptional events that may occur at runtime, and must implement the corresponding handlers on the basis of their predictions. Designing exception handlers for component-based software systems is particularly difficult because the information required to build handlers is distributed between component and application developers. Component developers know the internal details of the components but ignore the applications, while application developers own the applications but cannot access the details required to implement handlers in components.
   This article addresses the problem of automatically healing the infield failures that are caused by faulty integration of OTS components. In the article, we propose a technique and a methodology to decouple the tasks of component and application developers, who will be able to share information asynchronously and independently, and communicate implicitly by developing and deploying what we call healing connectors. Component developers implement healing connectors on the basis of information about the integration problems frequently experienced by application developers. Application developers easily and safely install healing connectors in their applications without knowing the internal details of the connectors. Healing connectors heal failures activated by exceptions raised in the OTS components actually deployed in the system.
   The article defines healing connectors, introduces a methodology to develop and deploy healing connectors, and presents several case studies that indicate that healing connectors are effective, reusable and efficient.
C1 [Chang, Herve; Mariani, Leonardo; Pezze, Mauro] Univ Milano Bicocca, Dept Informat Syst & Commun, I-20126 Milan, Italy.
   [Pezze, Mauro] Univ Lugano, Fac Informat, Lugano, Switzerland.
C3 University of Milano-Bicocca; Universita della Svizzera Italiana
RP Mariani, L (corresponding author), Univ Milano Bicocca, Dept Informat Syst & Commun, Viale Sarca 336, I-20126 Milan, Italy.
EM mariani@disco.unimib.it
OI PEZZE, MAURO/0000-0001-5193-7379; Mariani, Leonardo/0000-0001-9527-7042
FU European Community [IST-035157]
FX This work was partially supported by the European Community under the
   IST program of the 6th FP for RTD-project SHADOWS contract IST-035157.
CR ABBOTT R., 1990, ACM COMPUT SUR, V22, P1
   Alexander C., 1977, PATTERN LANGUAGE TOW
   ANDERSON T, 1990, FAULT TOLERANCE PRIN
   ANDERSON T., 1976, P INT C SOFTW ENG
   [Anonymous], P 17 INT C SOFTW ENG
   [Anonymous], P 20 ACM S OP SYST P
   [Anonymous], P 6 S OP SYST DES IM
   [Anonymous], 2012, WIND UPD
   [Anonymous], 2007, Software testing and analysis-process, principles and techniques
   [Anonymous], 2012, Eclipse
   APACHE, 2012, AP PROJ
   APACHE, 2012, AP MAV
   APACHE SOFTWARE FOUNDATION, 2012, BCEL
   Avizienis A, 2004, IEEE T DEPEND SECURE, V1, P11, DOI 10.1109/TDSC.2004.2
   AVIZIENIS A, 1985, IEEE T SOFTWARE ENG, V11, P1491, DOI 10.1109/TSE.1985.231893
   BECKER S., 2006, LECT NOTES COMPUTER
   Brito PHS, 2009, J COMPUT SCI TECH-CH, V24, P212, DOI 10.1007/s11390-009-9219-2
   CABRAL B., 2008, P IEEE ACM INT C AUT
   CABRAL B., 2007, LECT NOTES COMPUTER
   Carzaniga A., 2010, P 18 ACM SIGSOFT INT
   Carzaniga A, 2009, LECT NOTES COMPUT SC, V5835, P148, DOI 10.1007/978-3-642-10248-6_7
   Castor F, 2006, J SYST SOFTWARE, V79, P1397, DOI 10.1016/j.jss.2006.02.060
   Chang H., 2009, P 31 INT C SOFTW ENG
   CONSTANTINIDES C. A., 2000, ACM COMPUT SURV, V1
   CRISTIAN F, 1982, IEEE T COMPUT, V31, P531, DOI 10.1109/TC.1982.1676035
   Cristian Flaviu., 1989, DEPENDABILITY RESILI, P68
   DEMSKY B., 2003, SIGPLAN NOTICES, V38
   Demsky B, 2011, IEEE T SOFTWARE ENG, V37, P4, DOI 10.1109/TSE.2010.27
   Elnozahy EN, 2002, ACM COMPUT SURV, V34, P375, DOI 10.1145/568522.568525
   Fetzer C, 2004, IEEE T SOFTWARE ENG, V30, P547, DOI 10.1109/TSE.2004.35
   Friedrich G, 2010, IEEE T SOFTWARE ENG, V36, P198, DOI 10.1109/TSE.2010.8
   FU C., 2005, IEEE T SOFTWARE ENG, V31, P4
   Gamma Erich., 1994, DESIGN PATTERNS
   GARCIA A. F., 1999, P 10 INT S SOFTW REL
   GARCIA A. F., 2001, J SYST SOFT, V59, P2
   Guerra PAD, 2004, LECT NOTES COMPUT SC, V3069, P144
   HORNING J., 1974, P INT C OP SYST
   IBM, 2012, ECL TEST PERF TOOLS
   JBOSS, 2012, JBOSS PROJ
   JOHNSON R., 2005, IEEE COMPUT, V38, P1
   KESHAV R., 1998, P 3 INT WORKSH SOFTW
   Krena B., 2007, P ACM WORKSH PAR DIS
   Leavens G. T., 2006, SIGSOFT SOFTW ENG NO, V31, P3
   LIPPERT M, 2000, P 22 INT C SOFTW ENG
   LORENZOLI D., 2007, P IEEE INT S SOFTW R
   MAXION R. A., 1998, P 28 ANN INT S FAULT
   MAXION R. A., 2000, IEEE T SOFTWARE ENG, V26, P9
   Mehta N.R., 2000, P 22 INT C SOFTW ENG
   MILLER R., 1997, LECT NOTES COMPUTER
   PAN K., 2008, EMPIRICAL SOFTWARE E
   Pitman Kent M., 2001, LECT NOTES COMPUTER, V2022
   PRADHAN D. K., 1994, IEEE T COMPUT, V43
   Randell B., 1975, P INT C REL SOFTW
   Rinard M, 2007, ELECTRON NOTES THEOR, V174, P113, DOI 10.1016/j.entcs.2006.12.033
   Robillard MP, 2003, ACM T SOFTW ENG METH, V12, P191, DOI 10.1145/941566.941569
   ROMANOVSKY A. B., 2001, P 25 INT COMP SOFTW
   ROSENBLUM D. S., 1992, P 14 INT C SOFTW ENG
   RUBIRA C. M. F., 2005, SOFTW PRACTICE EXPER, V35, P3
   SIMONS K., 2004, LECT NOTES COMPUTER, V3054
   SINHA S., 1999, P IEEE INT C SOFTW M
   SPRINGSOURCE, 2012, SPRINGSOURCE PROJ
   SUN, 2012, SUN JAV STAND ED TEC
   Szyperski C., 2002, Component Software: Beyond Object-Oriented Programming
   Vaidyanathan K, 2005, IEEE T DEPEND SECURE, V2, P124, DOI 10.1109/TDSC.2005.15
   Wasylkowski A, 2011, AUTOMAT SOFTW ENG, V18, P263, DOI 10.1007/s10515-011-0084-1
   Wei Y., 2010, P INT S SOFTW TEST A
   XU J., 1998, P 18 INT C DISTR COM
   YAKIMOVICH D., 1999, P 21 INT C SOFTW ENG
   Zeng HL, 2007, ADV INTEL SYS RES, DOI 10.2991/iske.2007.2
NR 69
TC 6
Z9 8
U1 0
U2 4
PU ASSOC COMPUTING MACHINERY
PI NEW YORK
PA 2 PENN PLAZA, STE 701, NEW YORK, NY 10121-0701 USA
SN 1049-331X
EI 1557-7392
J9 ACM T SOFTW ENG METH
JI ACM Trans. Softw. Eng. Methodol.
PD OCT
PY 2013
VL 22
IS 4
AR 30
DI 10.1145/2522920.2522923
PG 40
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 239LD
UT WOS:000326024500003
DA 2024-07-18
ER

PT J
AU Minku, LL
   Yao, X
AF Minku, Leandro L.
   Yao, Xin
TI Software Effort Estimation as a Multiobjective Learning Problem
SO ACM TRANSACTIONS ON SOFTWARE ENGINEERING AND METHODOLOGY
LA English
DT Article
DE Experimentation; Algorithms; Management; Software effort estimation;
   ensembles of learning machines; multi-objective evolutionary algorithms
ID ARTIFICIAL NEURAL-NETWORK; REGRESSION-MODELS; ENSEMBLE
AB Ensembles of learning machines are promising for software effort estimation (SEE), but need to be tailored for this task to have their potential exploited. A key issue when creating ensembles is to produce diverse and accurate base models. Depending on how differently different performance measures behave for SEE, they could be used as a natural way of creating SEE ensembles. We propose to view SEE model creation as a multiobjective learning problem. A multiobjective evolutionary algorithm (MOEA) is used to better understand the tradeoff among different performance-measures by creating SEE models through the simultaneous optimisation of these measures. We show that the performance measures behave very differently, presenting sometimes even opposite trends. They are then used as a source of diversity for creating SEE ensembles. A good tradeoff among different measures can be obtained by using an ensemble of MOEA solutions. This ensemble performs similarly or better than a model that does not consider these measures explicitly. Besides, MOEA is also flexible, allowing emphasis of a particular measure if desired. In conclusion, MOEA can be used to better understand the relationship among performance measures and has shown to be very effective in creating SEE models.
C1 [Minku, Leandro L.; Yao, Xin] Univ Birmingham, Ctr Excellence Res Computat Intelligence & Applic, Sch Comp Sci, Birmingham B15 2TT, W Midlands, England.
C3 University of Birmingham
RP Minku, LL (corresponding author), Univ Birmingham, Ctr Excellence Res Computat Intelligence & Applic, Sch Comp Sci, Birmingham B15 2TT, W Midlands, England.
EM L.L.Minku@cs.bham.ac.uk
RI YAO, XIN/W-2158-2018
OI YAO, XIN/0000-0001-8837-4442; Minku, Leandro/0000-0002-2639-0671
FU EPSRC [EP/D052785/1, EP/J017515/1]
FX This work was supported by two EPSRC grants (Nos. EP/D052785/1 and
   EP/J017515/1).
CR [Anonymous], P ISSRE 07
   [Anonymous], P PROMISE 11
   [Anonymous], 2000, Software Cost Estimation with COCOMO II
   [Anonymous], P INT C COMP INT SEC
   [Anonymous], P METRICS 04
   [Anonymous], 13 CREST OP WORKSH F
   [Anonymous], P C EV METH DES OPT
   [Anonymous], P ICSE
   [Anonymous], 2004, DESIGN ANAL EXPT
   [Anonymous], OPT4J METAHEURISTIC
   [Anonymous], IEEE T SOFTWARE ENG
   [Anonymous], P ICCCAS WESINO EXPO
   [Anonymous], 2006, J. Math. Model. Algorithms
   [Anonymous], HDB RES SYNTHESIS
   BASKELES B., 2007, P ISCIS 07, P1
   Bishop C.M., 2005, NEURAL NETWORKS PATT
   Boehm BW., 1981, Software Engineering Economics
   Braga PL, 2007, IEEE IJCNN, P1595, DOI 10.1109/IJCNN.2007.4371196
   Breiman L, 1996, MACH LEARN, V24, P123, DOI 10.1007/bf00058655
   Brown G., 2005, Information Fusion, V6, P5, DOI 10.1016/j.inffus.2004.04.004
   Cartwright MH, 2003, NINTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM, PROCEEDINGS, P154, DOI 10.1109/METRIC.2003.1232464
   Chen HH, 2009, IEEE T NEURAL NETWOR, V20, P1962, DOI 10.1109/TNN.2009.2034144
   Chulani S, 1999, IEEE T SOFTWARE ENG, V25, P573, DOI 10.1109/32.799958
   COHEN J, 1992, PSYCHOL BULL, V112, P155, DOI 10.1037/0033-2909.112.1.155
   Tronto IFB, 2007, IEEE IJCNN, P771
   Deb K, 2002, IEEE T EVOLUT COMPUT, V6, P182, DOI 10.1109/4235.996017
   Dejaeger K, 2012, IEEE T SOFTWARE ENG, V38, P375, DOI 10.1109/TSE.2011.55
   Demsar J, 2006, J MACH LEARN RES, V7, P1
   Dolado JJ, 2000, IEEE T SOFTWARE ENG, V26, P1006, DOI 10.1109/32.879821
   Dolado JJ, 2001, INFORM SOFTWARE TECH, V43, P61, DOI 10.1016/S0950-5849(00)00137-3
   FINNOFF W, 1993, NEURAL NETWORKS, V6, P771, DOI 10.1016/S0893-6080(05)80122-4
   Foss T, 2003, IEEE T SOFTWARE ENG, V29, P985, DOI 10.1109/TSE.2003.1245300
   Gruschke TM, 2008, ACM T SOFTW ENG METH, V17, DOI 10.1145/13487689.13487693
   Hall M., 2009, ACM SIGKDD Explor. Newsl, V11, P18, DOI DOI 10.1145/1656274.1656278
   Hartigan J. A., 1975, CLUSTERING ALGORITHM, V458, P468
   Heiat A, 2002, INFORM SOFTWARE TECH, V44, P911, DOI 10.1016/S0950-5849(02)00128-3
   Jorgensen M, 2007, IEEE T SOFTWARE ENG, V33, P33, DOI 10.1109/TSE.2007.256943
   Jorgensen M, 2011, IEEE T SOFTWARE ENG, V37, P695, DOI 10.1109/TSE.2010.78
   Khare V, 2003, LECT NOTES COMPUT SC, V2632, P376
   Kocaguneli E, 2012, IEEE T SOFTWARE ENG, V38, P1403, DOI 10.1109/TSE.2011.111
   Kultur Y, 2009, KNOWL-BASED SYST, V22, P395, DOI 10.1016/j.knosys.2009.05.001
   Kuncheva LI, 2003, MACH LEARN, V51, P181, DOI 10.1023/A:1022859003006
   Legg S, 2004, IEEE C EVOL COMPUTAT, P2144, DOI 10.1109/CEC.2004.1331162
   Liu Y, 1999, NEURAL NETWORKS, V12, P1399, DOI 10.1016/S0893-6080(99)00073-8
   Liu Y, 1999, IEEE T SYST MAN CY B, V29, P716, DOI 10.1109/3477.809027
   Menzies T, 2006, IEEE T SOFTWARE ENG, V32, P883, DOI 10.1109/TSE.2006.114
   Menzies T, 2012, EMPIR SOFTW ENG, V17, P1, DOI 10.1007/s10664-011-9193-5
   Miller B. L., 1995, Complex Systems, V9, P193
   Minku LL, 2013, INFORM SOFTWARE TECH, V55, P1512, DOI 10.1016/j.infsof.2012.09.012
   Mohagheghi P, 2005, PROC INT CONF SOFTW, P303
   Praditwong K, 2011, IEEE T SOFTWARE ENG, V37, P264, DOI 10.1109/TSE.2010.26
   Seo YS., 2008, P 4 INT WORKSH PRED, P25, DOI DOI 10.1145/1370788.1370796
   Shepperd M, 1997, IEEE T SOFTWARE ENG, V23, P736, DOI 10.1109/32.637387
   Shirabad J.S., 2005, The PROMISE Repository of Software Engineering Databases
   Srinivas N., 1994, Evolutionary Computation, V2, P221, DOI 10.1162/evco.1994.2.3.221
   Tan HBK, 2009, ACM T SOFTW ENG METH, V19, DOI 10.1145/1571629.1571630
   Wang Z, 2010, IEEE T RELIAB, V59, P563, DOI 10.1109/TR.2010.2057310
   Wittig G, 1997, INFORM SOFTWARE TECH, V39, P469, DOI 10.1016/S0950-5849(97)00004-9
   Wittig G., 1994, AUSTR J INFORM SYSTE, V1, P87, DOI DOI 10.3127/AJIS.V1I2.424
   Zhao YH, 2008, ADV SPACE RES, V41, P1955, DOI 10.1016/j.asr.2007.07.020
NR 60
TC 59
Z9 59
U1 0
U2 18
PU ASSOC COMPUTING MACHINERY
PI NEW YORK
PA 1601 Broadway, 10th Floor, NEW YORK, NY USA
SN 1049-331X
EI 1557-7392
J9 ACM T SOFTW ENG METH
JI ACM Trans. Softw. Eng. Methodol.
PD OCT
PY 2013
VL 22
IS 4
AR 35
DI 10.1145/2522920.2522928
PG 32
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 239LD
UT WOS:000326024500008
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Vouillon, J
   Di Cosmo, R
AF Vouillon, Jerome
   Di Cosmo, Roberto
TI On Software Component Co-Installability
SO ACM TRANSACTIONS ON SOFTWARE ENGINEERING AND METHODOLOGY
LA English
DT Article
DE Algorithms; Theory; Verification; Component; dependencies; conflicts;
   co-installability; package management; open source
AB Modern software systems are built by composing components drawn from large repositories, whose size and complexity is increasing at a very fast pace. A fundamental challenge for the maintainability and the scalability of such software systems is the ability to quickly identify the components that can or cannot be installed together: this is the co-installability problem, which is related to boolean satisfiability and is known to be algorithmically hard. This article develops a novel theoretical framework, based on formally certified semantic preserving graph-theoretic transformations, that allows us to associate to each concrete component repository a much smaller one with a simpler structure, that we call strongly flat, with equivalent co-installability properties. This flat repository can be displayed in a way that provides a concise view of the co-installability issues in the original repository, or used as a basis for various algorithms related to co-installability, like the efficient computation of strong conflicts between components. The proofs contained in this work have been machine checked using the Coq proof assistant.
C1 [Vouillon, Jerome] Univ Paris Diderot, CNRS, PPS, UMR 7126,Sorbonne Paris Cite, Paris, France.
   [Di Cosmo, Roberto] Univ Paris Diderot, CNRS, INRIA, PPS,UMR 7126,Sorbonne Paris Cite, Paris, France.
C3 Universite Paris Cite; Centre National de la Recherche Scientifique
   (CNRS); Universite Paris Cite; Inria; Centre National de la Recherche
   Scientifique (CNRS)
RP Vouillon, J (corresponding author), Lab PPS, Case 7014, 5 Rue Thomas Mann, F-75205 Paris, France.
EM jerome.vouillon@pps.univ-paris-diderot.fr; roberto@dicosmo.org
FU European Community [214898]
FX This work was partially supported by the European Community's 7th
   Framework Programme (FP7/2007-2013), grant agreement no. 214898,
   "Mancoosi" project, and performed at the IRILL Center for Free Software
   Research and Innovation in Paris, France.
CR ABATE P., 2012, P 15 INT ACM SIGSOFT
   Abate P, 2012, J SYST SOFTWARE, V85, P2228, DOI 10.1016/j.jss.2012.02.018
   Abate P, 2009, INT SYMP EMP SOFTWAR, P89, DOI 10.1109/ESEM.2009.5316017
   Ajmani S, 2006, LECT NOTES COMPUT SC, V4067, P452
   [Anonymous], 2008, COQ PROOF ASS REF MA
   [Anonymous], 2011, JOINT EUR SOFTW ENG
   [Anonymous], P 22 IEEE ACM INT C
   Argelich J, 2010, ELECTRON P THEOR COM, P11, DOI 10.4204/EPTCS.29.2
   AUSIELLO G, 1983, J ACM, V30, P752, DOI 10.1145/2157.322404
   AUSIELLO G, 1986, SIAM J COMPUT, V15, P418, DOI 10.1137/0215029
   Baader Franz, 1998, TERM REWRITING ALL
   Berre D. L., 2008, P 1 WORKSH AN SOFTW, P197
   BUNING H. K., 2002, STUDIA LOGICA, V71, P247
   Cosmo R. D., 2010, IND SOFTW ENG C, P163, DOI DOI 10.1145/1730874.1730905
   Crameri Olivier, 2007, Operating Systems Review, V41, P221, DOI 10.1145/1323293.1294283
   DE ALFARO L., 2001, P ESEC SIGSOFT FSE
   DI COSMO R., 2006, REPORT FORMAL MANAGE
   DI COSMO R., 2006, EASST NEWSLETTER
   Di Cosmo R, 2011, ELECTRON PROC THEOR, P1, DOI 10.4204/EPTCS.65.1
   Di Cosmo R, 2010, LECT NOTES COMPUT SC, V6287, P476, DOI 10.1007/978-3-642-15579-6_40
   Dowling W. F., 1984, Journal of Logic Programming, V1, P267, DOI 10.1016/0743-1066(84)90014-1
   Ellson J, 2002, LECT NOTES COMPUT SC, V2265, P483
   Gebser M, 2011, ELECTRON PROC THEOR, P12, DOI 10.4204/EPTCS.65.2
   Graves TL, 2000, IEEE T SOFTWARE ENG, V26, P653, DOI 10.1109/32.859533
   HANNEMAN R. A., 2005, Introduction to social network methods
   Inverardi P, 2000, ACM T SOFTW ENG METH, V9, P239, DOI 10.1145/352591.352593
   Mancinelli F, 2006, IEEE INT CONF AUTOM, P199
   McCamant S, 2004, LECT NOTES COMPUT SC, V3086, P440
   McCamant S., 2003, Software Engineering Notes, V28, P287, DOI 10.1145/949952.940110
   Nagappan Nachiappan, 2007, 2007 First International Symposium on Empirical Software Engineering and Measurement, P364
   Neuhaus S, 2007, CCS'07: PROCEEDINGS OF THE 14TH ACM CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P529
   PEI-BREIVOLD H., 2008, P EVOL 08
   Tivoli M, 2008, SCI COMPUT PROGRAM, V71, P181, DOI 10.1016/j.scico.2008.03.001
   TREINEN R., 2008, P 9 ANN C DEB PROJ D, P18
   Trezentos Paulo, 2010, ASE 10, P427, DOI DOI 10.1145/1858996.1859087
   Tucker C, 2007, PROC INT CONF SOFTW, P178
   Winskel G., 1987, LECT NOTES COMPUT SC, V255, P325
   Yoon I.-C., 2008, P INT S SOFTWARE TES, P63, DOI DOI 10.1145/1390630.1390640
   Zimmermann T, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P531, DOI 10.1145/1368088.1368161
NR 39
TC 10
Z9 13
U1 0
U2 1
PU ASSOC COMPUTING MACHINERY
PI NEW YORK
PA 1601 Broadway, 10th Floor, NEW YORK, NY USA
SN 1049-331X
EI 1557-7392
J9 ACM T SOFTW ENG METH
JI ACM Trans. Softw. Eng. Methodol.
PD OCT
PY 2013
VL 22
IS 4
AR 34
DI 10.1145/2522920.2522927
PG 35
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 239LD
UT WOS:000326024500007
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Zhu, H
   Bayley, I
AF Zhu, Hong
   Bayley, Ian
TI An Algebra of Design Patterns
SO ACM TRANSACTIONS ON SOFTWARE ENGINEERING AND METHODOLOGY
LA English
DT Article
DE Design; Design patterns; formal method; software design methodology;
   pattern composition; algebra; equational reasoning
ID SPECIFICATION
AB In a pattern-oriented software design process, design decisions are made by selecting and instantiating appropriate patterns, and composing them together. In our previous work, we enabled these decisions to be formalized by defining a set of operators on patterns with which instantiations and compositions can be represented. In this article, we investigate the algebraic properties of these operators. We provide and prove a complete set of algebraic laws so that equivalence between pattern expressions can be proven. Furthermore, we define an always-terminating normalization of pattern expression to a canonical form which is unique modulo equivalence in first-order logic.
   By a case study, the pattern-oriented design of an extensible request-handling framework, we demonstrate two practical applications of the algebraic framework. First, we can prove the correctness of a finished design with respect to the design decisions made and the formal specification of the patterns. Second, we can even derive the design from these components.
C1 [Zhu, Hong; Bayley, Ian] Oxford Brookes Univ, Dept Comp & Commun Technol, Fac Technol Design & Environm, Oxford OX33 1HX, England.
C3 Oxford Brookes University
RP Zhu, H (corresponding author), Oxford Brookes Univ, Dept Comp & Commun Technol, Fac Technol Design & Environm, Wheatley Campus, Oxford OX33 1HX, England.
EM hzhu@brookes.ac.uk
RI Zhu, Hong/B-3231-2011
OI Zhu, Hong/0000-0001-9393-5005
CR Alencar P. S. C., 1996, FME '96: Industrial Benefit and Advances in Formal Methods. Third International Symposium of Formal Methods Europe. Proceedings, P576
   Alur D., 2003, Core J2EE patterns, best practices and design strategies, V2nd
   [Anonymous], 2007, PATTERN ORIENTED SOF
   [Anonymous], 2005, SECURITY PATTERNS IN
   Bayley Ian, 2008, 2008 IEEE 32nd International Computer Software and Applications Conference (COMPSAC), P203, DOI 10.1109/COMPSAC.2008.67
   Bayley I, 2011, INT J ADV SOFTWARE, V4, P354
   Bayley I, 2008, INT CONF QUAL SOFTW, P27, DOI 10.1109/QSIC.2008.32
   Bayley I, 2007, SEFM 2007: FIFTH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING AND FORMAL METHODS, PROCEEDINGS, P25, DOI 10.1109/SEFM.2007.43
   Bayley I, 2010, PROCEEDINGS OF THE SECOND INTERNATIONAL CONFERENCES ON PERVASIVE PATTERNS AND APPLICATIONS (PATTERNS 2010), P1
   Bayley I, 2010, J SYST SOFTWARE, V83, P209, DOI 10.1016/j.jss.2009.09.039
   Blewitt Alex, 2005, 20 IEEE ACM INT AUT, P224
   Buschmann F., 2007, PATTERN ORIENTED SOF, V4
   DIPIPPO L., 2005, DESIGN PATTERNS DIST
   DONG J., 2004, SOFTW SYST MODEL, V3, P262
   DONG J., 1999, P 4 INT WORKSH COMP
   Dong J, 2007, J SYST SOFTWARE, V80, P1755, DOI 10.1016/j.jss.2007.03.005
   Dong J, 2007, IEEE T SOFTWARE ENG, V33, P433, DOI 10.1109/TSE.2007.1012
   Dong J, 2011, COMPUT J, V54, P164, DOI 10.1093/comjnl/bxp125
   Dong J, 2010, INFORM SOFTWARE TECH, V52, P274, DOI 10.1016/j.infsof.2009.10.001
   Douglass B.P., 2002, REAL TIME DESIGN PAT
   EDEN AH, 2001, P INT C MULT DES ENG
   Fowler M., 2003, Patterns of Enterprise Application Architecture. A Martin Fowler signature book
   France RB, 2004, IEEE T SOFTWARE ENG, V30, P193, DOI 10.1109/TSE.2004.1271174
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   Gasparis E, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P945
   Grand M., 2002, Java Enterprise Design Patterns: Patterns in Java
   Grand M., 1999, PATTERNS JAVA, V2
   Grand Mark., 2002, Patterns in Java : A Catalog of Reusable Design Patterns Illustrated with Uml, V1
   Hanmer Robert., 2007, PATTERNS FAULT TOLER
   Hohpe Gregor, 2004, Enterprise Integration Patterns: Designing, Building, and Deploying Messaging Solutions
   Hong Zhu, 2010, Proceedings of the 2010 4th IEEE International Symposium on Theoretical Aspects of Software Engineering (TASE 2010), P95, DOI 10.1109/TASE.2010.11
   Hou DQ, 2006, IEEE T SOFTWARE ENG, V32, P404, DOI 10.1109/TSE.2006.60
   Jing Dong, 2000, Proceedings Seventh IEEE International Conference and Workshop on the Engineering of Computer Based Systems (ECBS 2000), P279, DOI 10.1109/ECBS.2000.839887
   Jing Dong, 2007, Proceedings of the 2007 International Conference on Software Engineering Research & Practice. SERP 2007, P621
   Kim DK, 2008, SOFTWARE QUAL J, V16, P329, DOI 10.1007/s11219-008-9048-5
   Kim DK, 2006, IEEE INT C ENG COMP, P47
   Kim DK, 2007, APPLIED COMPUTING 2007, VOL 1 AND 2, P1404
   LANO K, 1996, P BCS FACS NO FORM M
   Lauder A., 1998, ECOOP'98 - Object-Oriented Programming. 12th European Conference. Proceedings, P114, DOI 10.1007/BFb0054089
   Mapelsden D., 2002, PROCEEDING P 40 INT, P3
   Mikkonen T, 1998, PROC INT CONF SOFTW, P115, DOI 10.1109/ICSE.1998.671108
   Niere J, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P338, DOI 10.1109/ICSE.2002.1007980
   Riehle D, 1997, ACM SIGPLAN NOTICES, V32, P218, DOI 10.1145/263700.263739
   SHAN L., 2009, UML 2 SEMANTICS APPL
   Shi N, 2006, IEEE INT CONF AUTOM, P123
   Smith JM, 2011, J VISUAL LANG COMPUT, V22, P355, DOI 10.1016/j.jvlc.2011.03.003
   STEEL C., 2005, APPL J2EE SECURITY P
   Taibi T, 2006, IEE P-SOFTW, V153, P127, DOI 10.1049/ip-sen:20050072
   Taibi T, 2003, INFORM SOFTWARE TECH, V45, P157, DOI 10.1016/S0950-5849(02)000195-7
   TAIBI T., 2003, J OBJECT TECHNOL, V2, P4
   Vlissides John, 1998, C REPORT
   VOELTER M, 2004, REMOTING PATTERNS
   Zhu H., 2006, P 9 INT C COMP MOD S, P47
   Zhu H, 2012, FRONT COMPUT SCI-CHI, V6, P40, DOI 10.1007/s11704-012-2902-4
   Zhu H, 2010, LECT NOTES COMPUT SC, V6447, P630, DOI 10.1007/978-3-642-16901-4_41
   Zhu H, 2009, P INT COMP SOFTW APP, P228, DOI 10.1109/COMPSAC.2009.37
NR 56
TC 21
Z9 25
U1 1
U2 9
PU ASSOC COMPUTING MACHINERY
PI NEW YORK
PA 2 PENN PLAZA, STE 701, NEW YORK, NY 10121-0701 USA
SN 1049-331X
EI 1557-7392
J9 ACM T SOFTW ENG METH
JI ACM Trans. Softw. Eng. Methodol.
PD JUL
PY 2013
VL 22
IS 3
AR 23
DI 10.1145/2491509.2491517
PG 35
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 192JR
UT WOS:000322480900008
DA 2024-07-18
ER

PT J
AU Strecker, J
   Memon, AM
AF Strecker, Jaymie
   Memon, Atif M.
TI Accounting for Defect Characteristics in Evaluations of Testing
   Techniques
SO ACM TRANSACTIONS ON SOFTWARE ENGINEERING AND METHODOLOGY
LA English
DT Article
DE Experimentation; Measurement; Defects; faults; GUI testing
ID COVERAGE; MODEL
AB As new software-testing techniques are developed, before they can achieve widespread acceptance, their effectiveness at detecting defects must be evaluated. The most common way of evaluating testing techniques is with empirical studies, in which one or more techniques are tried out on software with known defects. However, the defects used can affect the performance of the techniques. To complicate matters, it is not even clear how to effectively describe or characterize defects. To address these problems, this article describes an experiment architecture for empirically evaluating testing techniques which takes both defect and test-suite characteristics into account. As proof of concept, an experiment on GUI-testing techniques is conducted. It provides evidence that the defect characteristics proposed do help explain defect detection, at least for GUI testing, and it explores the relationship between the coverage of defective code and the detection of defects.
C1 [Strecker, Jaymie] Coll Wooster, Dept Comp Sci, Wooster, OH 44691 USA.
   [Memon, Atif M.] Univ Maryland, Dept Comp Sci, College Pk, MD 20742 USA.
C3 University System of Ohio; College of Wooster; University System of
   Maryland; University of Maryland College Park
RP Strecker, J (corresponding author), Coll Wooster, Dept Comp Sci, Wooster, OH 44691 USA.
EM strecker@umd.edu; atif@cs.umd.edu
FU U.S. National Science Foundation [CCF-0447864, CNS-0855055]; Office of
   Naval Research [N00014-05-1-0421]
FX This work was partially supported by the U.S. National Science
   Foundation under grants CCF-0447864 and CNS-0855055, and the Office of
   Naval Research grant N00014-05-1-0421.
CR Agresti A., 2007, INTRO CATEGORICAL DA, V2nd ed
   Ammann Paul, 2008, Introduction to software testing, V1st
   Andrews JH, 2006, IEEE T SOFTWARE ENG, V32, P608, DOI 10.1109/TSE.2006.83
   [Anonymous], 2009, P 1 INT WORKSH TEST
   BASILI VR, 1987, IEEE T SOFTWARE ENG, V13, P1278, DOI 10.1109/TSE.1987.232881
   Basili VR, 1999, IEEE T SOFTWARE ENG, V25, P456, DOI 10.1109/32.799939
   Briand LC, 2002, IEEE T SOFTWARE ENG, V28, P706, DOI 10.1109/TSE.2002.1019484
   Do H, 2006, IEEE T SOFTWARE ENG, V32, P733, DOI 10.1109/TSE.2006.92
   Elbaum S, 2000, SEVENTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM - METRICS 2001, PROCEEDINGS, P169, DOI 10.1109/METRIC.2001.915525
   Fenton NE, 1999, IEEE T SOFTWARE ENG, V25, P675, DOI 10.1109/32.815326
   Frankl P., 1991, 4 S TESTING ANAL VER, P154
   Frankl PG, 1998, IEEE T SOFTWARE ENG, V24, P586, DOI 10.1109/32.707695
   FRANKL PG, 1993, IEEE T SOFTWARE ENG, V19, P202, DOI 10.1109/32.221133
   Garson G.D., 2006, STATNOTES TOPICS MUL
   Graves TL, 2001, ACM T SOFTW ENG METH, V10, P184, DOI 10.1145/367008.367020
   Harrold MJ, 1997, J SYST SOFTWARE, V36, P273, DOI 10.1016/S0164-1212(96)00175-6
   Hutchins M., 1994, ICSE-16. 16th International Conference on Software Engineering (Cat. No.94CH3409-0), P191, DOI 10.1109/ICSE.1994.296778
   Juristo N, 2004, EMPIR SOFTW ENG, V9, P7, DOI 10.1023/B:EMSE.0000013513.48963.1b
   LENTH RV, 2000, P SECT PHYS ENG SCI
   McMaster S, 2008, IEEE T SOFTWARE ENG, V34, P99, DOI 10.1109/TSE.2007.70756
   MEMON A. M., 2009, SOFTW ENG MOD PATT A
   Memon AM, 2007, SOFTW TEST VERIF REL, V17, P137, DOI 10.1002/stvr.364
   Morgan JA, 1997, FOURTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM, PROCEEDINGS, P82, DOI 10.1109/METRIC.1997.637168
   MYERS GJ, 1978, COMMUN ACM, V21, P760, DOI 10.1145/359588.359602
   Offutt A. J., 1996, ACM Transactions on Software Engineering and Methodology, V5, P99, DOI 10.1145/227607.227610
   Offutt A. J., 1996, SIGSOFT Software Engineering Notes, V21, P195, DOI [10.1145/229000.226317, 10.1145/226295.226317]
   RICHARDSON DJ, 1993, IEEE T SOFTWARE ENG, V19, P533, DOI 10.1109/32.232020
   Ripley BD., 2001, MSOR Connect. Newsl. LTSN Maths Stats OR Netw, V1, P23, DOI [10.11120/msor.2001.01010023, DOI 10.11120/MSOR.2001.01010023]
   Rosner B., 2000, FUNDAMENTALS BIOSTAT, V5th
   Rothermel G, 2004, ACM T SOFTW ENG METH, V13, P277, DOI 10.1145/1027092.1027093
   SLUD E. V., 2008, COMMUNICATION
   Staiger S, 2007, CSMR 2007: 11TH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P252
   Strecker Jaymie, 2008, 2008 First IEEE International Conference on Software Testing, Verification and Validation (ICST '08), P12, DOI 10.1109/ICST.2008.26
   STRECKER J., 2009, THESIS U MARYLAND CO
   Strecker J., 2009, ENCY INFORM SCI TECH, Vsecond
   Strecker J., 2007, P SOQUA 07, P112
   VOAS JM, 1992, IEEE T SOFTWARE ENG, V18, P717, DOI 10.1109/32.153381
   Xie Q, 2006, ISSRE 2006:17TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P159
   Xie Q, 2007, ACM T SOFTW ENG METH, V16, DOI 10.1145/1189748.1189752
   Yuan X, 2007, PROC INT CONF SOFTW, P396
   Yuan X, 2011, IEEE T SOFTWARE ENG, V37, P559, DOI 10.1109/TSE.2010.50
   Zelkowitz MV, 1997, INFORM SOFTWARE TECH, V39, P735, DOI 10.1016/S0950-5849(97)00025-6
NR 42
TC 13
Z9 16
U1 0
U2 2
PU ASSOC COMPUTING MACHINERY
PI NEW YORK
PA 2 PENN PLAZA, STE 701, NEW YORK, NY 10121-0701 USA
SN 1049-331X
EI 1557-7392
J9 ACM T SOFTW ENG METH
JI ACM Trans. Softw. Eng. Methodol.
PD JUL
PY 2012
VL 21
IS 3
AR 17
DI 10.1145/2211616.2211620
PG 43
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 968FX
UT WOS:000305963800004
DA 2024-07-18
ER

PT J
AU Mattsson, A
   Fitzgerald, B
   Lundell, B
   Lings, B
AF Mattsson, Anders
   Fitzgerald, Brian
   Lundell, Bjorn
   Lings, Brian
TI An Approach for Modeling Architectural Design Rules in UML and its
   Application to Embedded Software
SO ACM TRANSACTIONS ON SOFTWARE ENGINEERING AND METHODOLOGY
LA English
DT Article
DE Design; Documentation; Human Factors; Model-driven development (MDD);
   model-driven engineering (MDE); embedded software development
AB Current techniques for modeling software architecture do not provide sufficient support for modeling architectural design rules. This is a problem in the context of model-driven development in which it is assumed that major design artifacts are represented as formal or semi-formal models. This article addresses this problem by presenting an approach to modeling architectural design rules in UML at the abstraction level of the meaning of the rules. The high abstraction level and the use of UML makes the rules both amenable to automation and easy to understand for both architects and developers, which is crucial to deployment in an organization. To provide a proof-of-concept, a tool was developed that validates a system model against the architectural rules in a separate UML model. To demonstrate the feasibility of the approach, the architectural design rules of an existing live industrial-strength system were modeled according to the approach.
C1 [Fitzgerald, Brian] Univ Limerick, Lero Irish Software Engn Res Ctr, Limerick, Ireland.
   [Lundell, Bjorn; Lings, Brian] Univ Skovde, SE-54128 Skovde, Sweden.
C3 University of Limerick; University of Skovde
RP Mattsson, A (corresponding author), Hyacintvagen 4, SE-52333 Ulricehamm, Sweden.
EM ajmattsson@gmail.com; bf@ul.ie; bjorn.lundell@his.se; brian.lings@his.se
RI Fitzgerald, Brian/E-7790-2010
OI Fitzgerald, Brian/0000-0001-9193-2863
FU ITEA through Vinnova; Science Foundation Ireland
FX This research was financially supported by the ITEA project MoSiS
   (www.itea-mosis.org) through Vinnova (www.vinnova.se) and also by
   funding from Science Foundation Ireland to Lero (www.sfi.ie).
CR America P, 2004, LECT NOTES COMPUT SC, V3014, P44
   [Anonymous], 1996, Pattern oriented software architecture: a system of patters
   [Anonymous], UML 2 0 OCL SPEC
   [Anonymous], 2004, Software Factories
   [Anonymous], UN MOD LANG SUP
   Bass L., 2013, SOFTWARE ARCHITECTUR
   Bayley I, 2007, SEFM 2007: FIFTH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING AND FORMAL METHODS, PROCEEDINGS, P25, DOI 10.1109/SEFM.2007.43
   Bengtsson P, 1998, FIFTH INTERNATIONAL CONFERENCE ON SOFTWARE REUSE - PROCEEDINGS, P308, DOI 10.1109/ICSR.1998.685756
   Bosch J, 1999, ECBS '99, IEEE CONFERENCE AND WORKSHOP ON ENGINEERING OF COMPUTER-BASED SYSTEMS, PROCEEDINGS, P4, DOI 10.1109/ECBS.1999.755855
   Bosch J., 2000, Design and Use of Software Architectures: Adopting and Evolving a Product-Line Approach
   Conboy K, 2010, ACM T SOFTW ENG METH, V20, DOI 10.1145/1767751.1767753
   Eden AH, 2002, INFORM SYST FRONT, V4, P379, DOI 10.1023/A:1020835709566
   France RB, 2004, IEEE T SOFTWARE ENG, V30, P193, DOI 10.1109/TSE.2004.1271174
   FUENTES-FERNANDEZ L., 2004, EURO J INFORM PROFES, VV
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   Hofmeister C., 2000, APPL SOFTWARE ARCHIT
   JANSEN A., 2007, P 6 IEEE IFIP WORK C, P44
   Jansen A, 2006, 5TH WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE, PROCEEDINGS, P109
   Karsai G, 2003, P IEEE, V91, P145, DOI 10.1109/JPROC.2002.805824
   Kruchten P.., 2004, RATIONAL UNIFIED PRO
   Kruchten P., 2004, GRON WORKSH SOFTW VA, P54
   KRUCHTEN PB, 1995, IEEE SOFTWARE, V12, P42, DOI 10.1109/52.469759
   Kruchten P, 2006, LECT NOTES COMPUT SC, V4214, P43
   LAUDER A., 1998, P 12 EUR C OBJ OR PR
   Levy Y., 2006, Informing Science, V9, P181
   Mak JKH, 2004, PROC INT CONF SOFTW, P252, DOI 10.1109/ICSE.2004.1317447
   Mattsson A, 2009, IEEE T SOFTWARE ENG, V35, P83, DOI 10.1109/TSE.2008.87
   Medvidovic N, 2002, ACM T SOFTW ENG METH, V11, P2, DOI 10.1145/504087.504088
   Medvidovic N, 2000, IEEE T SOFTWARE ENG, V26, P70, DOI 10.1109/32.825767
   Medvidovic N, 2007, INFORM SOFTWARE TECH, V49, P12, DOI 10.1016/j.infsof.2006.08.006
   Mikkonen T, 1998, PROC INT CONF SOFTW, P115, DOI 10.1109/ICSE.1998.671108
   OMG, 2003, MDA GUID VERS 1 0 1
   OMG, 2006, MET OBJ FAC MOF COR
   Pahl C, 2007, LECT NOTES COMPUT SC, V4758, P60
   Perry D. E., 1992, SIGSOFT Software Engineering Notes, V17, P40, DOI 10.1145/141874.141884
   Ran A., 2000, SOFTWARE ARCHITECTUR, P1
   Schmidt DC, 2006, COMPUTER, V39, P25, DOI 10.1109/MC.2006.58
   SHAW M, 1995, IEEE T SOFTWARE ENG, V21, P314, DOI 10.1109/32.385970
   Shaw M., 1996, SOFTWARE ARCHITECTUR
   SONI D, 1995, PROC INT CONF SOFTW, P196, DOI 10.1145/225014.225033
   Tolvanen JP, 2005, LECT NOTES COMPUT SC, V3714, P198
   Tyree J, 2005, IEEE SOFTWARE, V22, P19, DOI 10.1109/MS.2005.27
   van der Linden F, 2004, LECT NOTES COMPUT SC, V3154, P110
   Wojcik R., 2006, ATTRIBUTE DRIVEN DES
   Zdun U., 2005, P 20 ANN ACM SIGPLAN
NR 45
TC 5
Z9 7
U1 0
U2 5
PU ASSOC COMPUTING MACHINERY
PI NEW YORK
PA 2 PENN PLAZA, STE 701, NEW YORK, NY 10121-0701 USA
SN 1049-331X
EI 1557-7392
J9 ACM T SOFTW ENG METH
JI ACM Trans. Softw. Eng. Methodol.
PD MAR
PY 2012
VL 21
IS 2
AR 10
DI 10.1145/2089116.2089120
PG 29
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 914TR
UT WOS:000301976000004
DA 2024-07-18
ER

PT J
AU Arnold, M
   Vechev, M
   Yahav, E
AF Arnold, Matthew
   Vechev, Martin
   Yahav, Eran
TI QVM: An Efficient Runtime for Detecting Defects in Deployed Systems
SO ACM TRANSACTIONS ON SOFTWARE ENGINEERING AND METHODOLOGY
LA English
DT Article
DE Reliability; Virtual machines; typestate; heap assertions; diagnosis;
   debugging
AB Coping with software defects that occur in the post-deployment stage is a challenging problem: bugs may occur only when the system uses a specific configuration and only under certain usage scenarios. Nevertheless, halting production systems until the bug is tracked and fixed is often impossible. Thus, developers have to try to reproduce the bug in laboratory conditions. Often, the reproduction of the bug takes most of the debugging effort.
   In this paper we suggest an approach to address this problem by using a specialized runtime environment called Quality Virtual Machine (QVM). QVM efficiently detects defects by continuously monitoring the execution of the application in a production setting. QVM enables the efficient checking of violations of user-specified correctness properties, that is, typestate safety properties, Java assertions, and heap properties pertaining to ownership. QVM is markedly different from existing techniques for continuous monitoring by using a novel overhead manager which enforces a user-specified overhead budget for quality checks. Existing tools for error detection in the field usually disrupt the operation of the deployed system. QVM, on the other hand, provides a balanced trade-off between the cost of the monitoring process and the maintenance of sufficient accuracy for detecting defects. Specifically, the overhead cost of using QVM instead of a standard JVM, is low enough to be acceptable in production environments.
   We implemented QVM on top of IBM's J9 Java Virtual Machine and used it to detect and fix various errors in real-world applications.
EM marnold@us.ibm.com; martin.vechev@inf.ethz.ch; yahave@cs.technion.ac.il
OI Yahav, Eran/0000-0003-4305-6314
CR AFTANDILIAN E., 2008, P ACM SIGPLAN WORKSH, P36
   Aftandilian EE, 2009, PLDI'09 PROCEEDINGS OF THE 2009 ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P235, DOI 10.1145/1542476.1542503
   Aldrich J, 2002, ACM SIGPLAN NOTICES, V37, P311, DOI 10.1145/583854.582448
   Allan C, 2005, ACM SIGPLAN NOTICES, V40, P345, DOI 10.1145/1103845.1094839
   [Anonymous], LECT NOTES COMPUTER
   [Anonymous], 2007, P 2007 INT S SOFTWAR
   Arnold M, 2002, LECT NOTES COMPUT SC, V2374, P498
   Arnold M, 2001, ACM SIGPLAN NOTICES, V36, P168, DOI 10.1145/381694.378832
   Arnold Matthew., 2008, P 23 ACM SIGPLAN C O, P143
   AUERBACH J., 2008, P INT C EMB SOFTW
   Avgustinov P, 2007, OOPSLA: 22ND INTERNATIONAL CONFERENCE ON OBJECT-ORIENTED PROGRAMMING, SYSTEMS, LANGUAGES, AND APPLICATIONS, PROCEEDINGS, P589
   BAKER HG, 1995, SIGPLAN NOTICES, V30, P45, DOI 10.1145/199818.199860
   Banerjee A, 2005, J ACM, V52, P894, DOI 10.1145/1101821.1101824
   Blackburn SM, 2006, ACM SIGPLAN NOTICES, V41, P169, DOI 10.1145/1167515.1167488
   Bodden E, 2007, LECT NOTES COMPUT SC, V4839, P22
   Bodden E, 2007, LECT NOTES COMPUT SC, V4609, P525
   Bond M.D., 2007, Proceedings of the 22nd annual ACM SIGPLAN conference on Object-oriented programming systems and applications, OOPSLA '07, P405
   BOND M. D., 2008, THESIS U TEXAS AUSTI
   Bond MD, 2006, ACM SIGPLAN NOTICES, V41, P61, DOI 10.1145/1168918.1168866
   Boyapati C, 2002, ACM SIGPLAN NOTICES, V37, P211, DOI 10.1145/583854.582440
   CHEN F., 2007, P ANN ACM SIGPLAN C
   Chilimbi TM, 2004, ACM SIGPLAN NOTICES, V39, P156, DOI 10.1145/1037187.1024412
   Chilimbi TM, 2002, ACM SIGPLAN NOTICES, V37, P199, DOI 10.1145/543552.512554
   Chilimbi TM, 2006, ACM SIGPLAN NOTICES, V41, P219, DOI 10.1145/1168918.1168885
   CLARKE D. G., 2003, THESIS NEW S WALES A
   DeLine R, 2001, ACM SIGPLAN NOTICES, V36, P59, DOI 10.1145/381694.378811
   Dillig I, 2008, ISMM'08: PROCEEDINGS OF THE 2008 INTERNATIONAL SYMPOSIUM ON MEMORY MANAGEMENT, P1
   Dwyer MB, 2008, LECT NOTES COMPUT SC, V5156, P1, DOI 10.1007/978-3-540-85114-1_1
   Dwyer MatthewB., 2007, Proceedings of the twenty-second IEEE/ACM international conference on Automated software engineering, P124
   Fähndrich M, 2002, ACM SIGPLAN NOTICES, V37, P13, DOI 10.1145/543552.512532
   Fink SJ, 2003, INT SYM CODE GENER, P241, DOI 10.1109/CGO.2003.1191549
   Fink Stephen., 2006, INT S SOFTWARE TESTI, P133, DOI DOI 10.1145/1146238.1146254
   Fink SJ, 2008, ACM T SOFTW ENG METH, V17, DOI 10.1145/1348250.1348255
   Foster JS, 2002, ACM SIGPLAN NOTICES, V37, P1, DOI 10.1145/543552.512531
   HEINE D, 2003, P ACM SIGPLAN C PROG
   HOGG J, 1991, SIGPLAN NOTICES, V26, P271
   Jump Maria, 2007, POPL 2007. The 34th ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages, P31, DOI 10.1145/1190216.1190224
   Jump Maria., 2004, ACM INT S MEMORY MAN, P152
   Lau J, 2006, ACM SIGPLAN NOTICES, V41, P239, DOI 10.1145/1133981.1134010
   Lev-Ami T, 2000, LECT NOTES COMPUT SC, V1824, P280
   LIVSHITS V. B., 2005, ECLIPSECON 05 RES EX
   Mitchell N, 2006, LECT NOTES COMPUT SC, V4067, P74
   Mitchell N, 2007, OOPSLA: 22ND INTERNATIONAL CONFERENCE ON OBJECT-ORIENTED PROGRAMMING, SYSTEMS, LANGUAGES, AND APPLICATIONS, PROCEEDINGS, P245
   Muller Peter., 2007, Proceedings of the 22nd Annual ACM SIGPLAN Conference on Object-Oriented Programming Systems and Applications, OOPSLA '07, P461
   Nethercote N, 2007, PLDI'07: PROCEEDINGS OF THE 2007 ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P89, DOI 10.1145/1250734.1250746
   Ramalingam G, 2002, ACM SIGPLAN NOTICES, V37, P83, DOI 10.1145/543552.512540
   Rinetzky N, 2007, LECT NOTES COMPUT SC, V4421, P220
   Shacham O., 2009, P ACM SIGPLAN C PROG
   SHAHAM R., 2003, P STAT AN S
   Shoham S, 2008, IEEE T SOFTWARE ENG, V34, P651, DOI 10.1109/TSE.2008.63
   STROM RE, 1986, IEEE T SOFTWARE ENG, V12, P157, DOI 10.1109/TSE.1986.6312929
   Suganuma T, 2001, ACM SIGPLAN NOTICES, V36, P180, DOI 10.1145/504311.504296
   VECHEV M., 2010, P INT S MEM MAN ISMM
   Yahav E, 2004, ACM SIGPLAN NOTICES, V39, P25, DOI 10.1145/996893.996846
NR 54
TC 16
Z9 16
U1 0
U2 5
PU ASSOC COMPUTING MACHINERY
PI NEW YORK
PA 2 PENN PLAZA, STE 701, NEW YORK, NY 10121-0701 USA
SN 1049-331X
EI 1557-7392
J9 ACM T SOFTW ENG METH
JI ACM Trans. Softw. Eng. Methodol.
PD DEC
PY 2011
VL 21
IS 1
AR 2
DI 10.1145/2063239.2063241
PG 35
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 868BJ
UT WOS:000298498200002
OA Bronze
DA 2024-07-18
ER

PT J
AU Emmerich, W
   Aoyama, M
   Sventek, J
AF Emmerich, Wolfgang
   Aoyama, Mikio
   Sventek, Joe
TI The impact of research on the development of middleware technology
SO ACM TRANSACTIONS ON SOFTWARE ENGINEERING AND METHODOLOGY
LA English
DT Review
ID SYSTEM; MODEL
AB The middleware market represents a sizable segment of the overall Information and Communication Technology market. In 2005, the annual middleware license revenue was reported by Gartner to be in the region of $8.5 billion. In this article we address the question whether research had any involvement in the creation of the technology that is being sold in this market? We attempt a scholarly discourse. We present the research method that we have applied to answer this question. We then present a brief introduction into the key middleware concepts that provide the foundation for this market. It would not be feasible to investigate any possible impact that research might have had. Instead we select a few very successful technologies that are representative for the middleware market as a whole and show the existence of impact of research results in the creation of these technologies. We investigate the origins of Web services middleware, distributed transaction processing middleware, message-oriented middleware, distributed object middleware and remote procedure call systems. For each of these technologies we are able to show ample influence of research and conclude that without the research conducted by PhD students and researchers in university computer science labs at Brown, CMU, Cambridge, Newcastle, MIT, Vrije, and University of Washington as well as research in industrial labs at APM, AT&T Bell Labs, DEC Systems Research, HP Labs, IBM Research, and Xerox PARC we would not have middleware technology in its current form. We summarise the article by distilling lessons that can be learnt from this evidenced impact for future technology transfer undertakings.
C1 [Emmerich, Wolfgang] UCL, Dept Comp Sci, London WC1E 6BT, England.
   [Aoyama, Mikio] Nanzan Univ, Seto 4890863, Japan.
   [Sventek, Joe] Univ Glasgow, Dept Comp Sci, Glasgow GG12 8QQ, Lanark, Scotland.
C3 University of London; University College London; University of Glasgow
RP Emmerich, W (corresponding author), UCL, Dept Comp Sci, Gower St, London WC1E 6BT, England.
CR ALMES GT, 1985, IEEE T SOFTWARE ENG, V11, P43, DOI 10.1109/TSE.1985.231536
   ALMES GT, 1986, P 6 INT C DISTR COMP, P414
   ALONSO G, 1995, ADV T MODELS WORKFLO
   Alur D., 2003, Core J2EE patterns, best practices and design strategies, V2nd
   ANDREAS W, 1991, 9116 OMG TC
   Andrews Tony., 2003, Business process execution language for web services
   [Anonymous], ACM SIGOPS OPER SYST
   [Anonymous], 1991, OBJECT ORIENTED DESI
   [Anonymous], 1986, The C++ Programming Language
   [Anonymous], 1999, Communicating and Mobile Systems: The Calculus
   [Anonymous], 2005, Web Services Platform Architecture: SOAP, WSDL, WS-Policy, WS-Addressing, WS-BPEL, WS-Reliable Messaging, and More
   [Anonymous], P INT C REL SOFTW
   [Anonymous], 1980, Software Development: A Rigorous Approach
   [Anonymous], 1987, Concurrency Control and Recovery in Database Systems
   *ANSA, 1989, ADV NETW SYST ARCH A
   Astrahan M. M., 1976, ACM Transactions on Database Systems, V1, P97, DOI 10.1145/320455.320457
   ATKINSON M, 1990, P 1 INT C DED OBJ OR, P223
   Bacon J. M., 1988, Distributed Processing. Proceedings of the IFIP WWG 10.3 Working Conference, P355
   BAL H, 1989, THESIS VRIJE U AMSTE
   BAL HE, 1992, IEEE T SOFTWARE ENG, V18, P190, DOI 10.1109/32.126768
   BALTER R, 1991, 9115 OMG TC
   BALZER RM, 1987, IEEE SOFTWARE, V4, P77, DOI 10.1109/MS.1987.232097
   BARGHOUTI NS, 1992, P 5 ACM SIGSOFT S SO, P21
   Bernstein PA, 1996, COMMUN ACM, V39, P86, DOI 10.1145/230798.230809
   BERNSTEIN PA, 1990, COMMUN ACM, V33, P75, DOI 10.1145/92755.92767
   Bieberstein N, 2005, IBM SYST J, V44, P691, DOI 10.1147/sj.444.0691
   BIRMAN KP, 1989, DISTRIBUTED SYSTEMS, P319
   BIRRELL A, 1993, ACM SIGOPS OPERAT SY, V27, P217
   BIRRELL AD, 1984, ACM T COMPUT SYST, V2, P39, DOI 10.1145/2080.357392
   BIRRON PV, 2004, XML SCHEMA 2
   BLACK A, 1987, IEEE T SOFTWARE ENG, V13, P65, DOI 10.1109/TSE.1987.232836
   Box D., 2000, SIMPLE OBJECT ACCESS
   Bray Tim., 1998, EXTENSIBLE MARKUP LA
   CAGAN MR, 1990, HEWLETT-PACKARD J, V41, P36
   Charles J, 1999, COMPUTER, V32, P17, DOI 10.1109/MC.1999.762786
   CHERITON DR, 1984, IEEE SOFTWARE, V1, P19, DOI 10.1109/MS.1984.234046
   CHERITON DR, 1988, ACM SIGCOMM COMPUT C, V15, P172
   CHEUNG S, 1999, JAVA T API JTA
   CHEUNG S, 1999, JAVA T SERVICE JTS
   CHINNICI R, 2004, WEB SERVICES DESCRIP
   Christensen E., 2001, WEB SERVICES DESCRIP
   Clark J., 1999, XML Path Language (XPath) Version 1.0
   Cobb E. E., 1997, VLDB Journal, V6, P173, DOI 10.1007/s007780050039
   COLOURIS G, 1994, DISTRIBUTED SYSTEMS
   Correira J., 2006, MARKET SHARE AIM POR
   Cox B.J., 1986, OBJECT ORIENTED PROG
   CURBERA F, 2000, NETWORK ACCESSIBLE S
   DEMICHIEL L, 2005, ENTERPRISE JAVA BEAN
   DeRemer F., 1976, IEEE Transactions on Software Engineering, VSE-2, P80, DOI 10.1109/TSE.1976.233534
   Dineen T. H., 1987, Proceedings of the Summer 1987 USENIX Conference, P385
   DIXON G, 1988, THESIS U NEWCASTLE
   DIXON GN, 1989, COMPUT J, V32, P323, DOI 10.1093/comjnl/32.4.323
   Emmerich W, 2001, PROC INT CONF SOFTW, P567, DOI 10.1109/ICSE.2001.919131
   Emmerich W., 2000, ENG DISTRIBUTED OBJE
   ENRIGHT C, 1991, 91110 OMG TC
   Eugster PT, 2003, ACM COMPUT SURV, V35, P114, DOI 10.1145/857076.857078
   Fancey J, 2005, MSDN MAG, V20, P68
   Fleury M, 2003, LECT NOTES COMPUT SC, V2672, P344
   FREBURGER L, 1991, 9117 OMG TC
   GESCHKE CM, 1977, COMMUN ACM, V20, P540, DOI 10.1145/359763.359771
   GILPIN M, 2002, MARKET OVERVIEW UPDA
   Goldberg A., 1983, Smalltalk 80: The Language and Its Implementation
   GOLDFARB CF, 1981, ACM SIGPLAN NOTICES, V16, P68
   Gray J. N., 1978, Operating Systems. An Advanced Course, P393
   GRIMES R, 1997, DCOM PROGRAMMING
   Gudgin M., 2007, XML RPC
   Gudgin M., 2003, SIMPLE OBJECT ACCESS
   Hagel J., 2002, Out Of The Box: Strategies for Achieving Profits Today and Growth Tomorrow through Web Services
   HAPNER M, 2001, JAVA MESSAGE SERVICE
   Hart R. O., 1995, Digital Technical Journal, V7, P5
   HAZELTINE N, 1991, 9119 OMG TC
   HEFFNER R, 2006, SERVICE ORIENTED ARC
   HERBERT A, 1991, 9112 OMG TC
   HESS ML, 1995, IBM SYST J, V34, P330, DOI 10.1147/sj.343.0330
   Hollingsworth David, 1995, TC00-1003
   HUTCHINSON NC, 1987, THESIS U WASHINGTON
   *IBM, 1995, GC33080501 IBM UK LA
   *ISO, 1986, 8879 ISO
   JENKINS B, 1972, ACCOUNTANT, P537
   Jensen T, 1998, 1998 INTERNATIONAL CONFERENCE ON COMPUTER LANGUAGES, PROCEEDINGS, P4, DOI 10.1109/ICCL.1998.674152
   JUL E, 1988, ACM T COMPUT SYST, V6, P109, DOI 10.1145/35037.42182
   Keene S.E., 1989, OBJECT ORIENTED PROG
   Kong MM, 1995, HEWLETT-PACKARD J, V46, P6
   Lampson Butler, 1979, Crash Recovery in a Distributed Data Storage System
   Lauer H. C., 1979, Proceedings of the 4th International Conference on Software Engineering, P174
   LEACH PJ, 1982, P S PRINCIPLES DIST, P34
   Leymann F, 2002, IBM SYST J, V41, P198, DOI 10.1147/sj.412.0198
   LEYMANN F, 1994, IBM SYST J, V33, P326, DOI 10.1147/sj.332.0326
   LEYMANN F, 2001, WEB SERVICE FLOW LAN
   LEYMANN F, 1994, COMPCON, P230
   Liang S, 1998, ACM SIGPLAN NOTICES, V33, P36, DOI 10.1145/286942.286945
   LISKOV B, 1977, COMMUN ACM, V20, P564, DOI 10.1145/359763.359789
   LISKOV B, 1988, COMMUN ACM, V31, P300, DOI 10.1145/42392.42399
   LISKOV B, 1980, ACM OPERAT SYST REV, V13, P33
   LISKOV BH, 1979, IEEE T SOFTWARE ENG, V5, P546, DOI 10.1109/TSE.1979.230191
   LITTLE SM, 2002, P 2 INT WORKSH IND E
   MATHEWS M, 1991, 9114 OMG TC
   Meredith LG, 2003, COMMUN ACM, V46, P41, DOI 10.1145/944217.944236
   MERRICK P, 1997, WEB INTERFACE DEFINI
   Meyer B., 1988, Object-Oriented Software Construction
   *MICR, 2003, ENT SOL PATT US MICR
   MOCKAPETRIS P, 1988, COMPUT COMMUN REV, V18, P123
   Mohan C, 1999, PROCEEDINGS OF THE TWENTY-FIFTH INTERNATIONAL CONFERENCE ON VERY LARGE DATA BASES, P1
   MOHAN C, 1994, IEEE DATA ENG B, V17, P22
   MOSS EB, 1981, TR260 MIT CAMBRIDGE
   Moss J.E., 1985, NESTED T APPROACH RE
   NADALIN A, 2004, WS SECURITY
   Nelson B. J., 1981, THESIS CARNEGIE MELL
   *OBJ MAN GROUP, 1991, COMM OBJ REQ BROK AR
   *OBJ MAN GROUP, 1993, T SERV PROP
   *OBJ MAN GROUP, 1993, OBJ T SERV REP OMGS
   Oki B., 1993, Operating Systems Review, V27, P58, DOI 10.1145/173668.168624
   OMG, 1998, CORBASERVICES COMM O
   *OMG, 1998, NOT SERV
   *OP GROUP, 1996, DCE GLOSS
   *OP GROUP, 1997, DCE 1 1 REM PROC CAL
   PANZIERI F, 1988, IEEE T SOFTWARE ENG, V14, P30, DOI 10.1109/32.4620
   PARNAS DL, 1972, COMMUN ACM, V15, P330, DOI 10.1145/355602.361309
   Peltz C, 2003, COMPUTER, V36, P46, DOI 10.1109/MC.2003.1236471
   PRUDHOMMEAUX E, 2000, XML PROTOCOL COMP
   RANDELL B, 1969, SOFTW ENG REP C SPON
   Redwine S. T.  Jr., 1985, Proceedings of the 8th International Conference on Software Engineering (Cat. No.85CH2139-4), P189
   REID B, 1981, THESIS CARNEGIE MELL
   REID BK, 1981, P INT C RES TRENDS D, P59
   REISS S, 1987, OVERVIEW FIELD ENV
   REISS SP, 1990, IEEE SOFTWARE, V7, P57, DOI 10.1109/52.56450
   Reuter A, 1993, T PROCESSING CONCEPT
   Rothermel K., 1989, Proceedings of the Fifteenth International Conference on Very Large Data Bases, P337
   Ryder BG, 2005, ACM T SOFTW ENG METH, V14, P431, DOI 10.1145/1101815.1101818
   Shapiro M., 1989, Computing Systems, V2, P287
   SHAPIRO M, 1991, 9157 OMG TC
   SHEFFLER L, 1991, 9113 OMG TC
   SHIA D, 1990, 9111 OMG TC
   Shirley J., 1995, MICROSOFT RPC PROGRA
   SHRIVASTAVA SK, 1991, IEEE SOFTWARE, V8, P66, DOI 10.1109/52.62934
   SKEEN D, 1991, 9118 OMG TC
   Skeen Dale., 1992, Proceedings of the Winter USENIX Conference, P183
   SNYDER A, 1986, SIGPLAN NOTICES, V21, P38, DOI 10.1145/960112.28702
   SNYDER A, 1990, 9018 OMG TC
   SNYDER A, 1990, 9012 OMG TC
   SOLEY R, 1991, COMMUNICATION
   SOLEY RM, 1992, OBJECT MANAGEMENT AR
   SOUZA RJ, 1986, P 6 INT C DISTR COMP, P268
   SPECTOR AZ, 1985, IEEE T SOFTWARE ENG, V11, P520, DOI 10.1109/TSE.1985.232244
   SRINNIVASAN P, 2001, INTRO MICROSOFT NET
   *SUN MICR, 1998, JAV REM METH INV SPE
   *SUN MICR, 1987, 1014 RFC IETF SUN MI
   Sun Microsystems, 1988, 1050 RFC IETF SUN MI
   SVENTEK J, 1991, 9181 OMG TC
   *TECHNET, 2003, WHAT IS RPC
   Thatte S., 2001, XLANG WEB SERVICES B
   THOMAS MLH, 1986, CRITTER TALK, V9, P3
   Waldo J, 1998, IEEE CONCURR, V6, P5, DOI 10.1109/4434.708248
   WEBER B, 1990, 90105 OMG TC
   WIRFSBROOK R, 1990, DESIGNING OBJECT ORI
   Wollrath A, 1996, COMPUT SYST, V9, P265
   *X OP GROUP, 1991, DISTR T PROC XA SPEC
   *XER OPD, 1981, COUR REM PROC CAL PR
   YOUNG MW, 1991, PROCEEDINGS OF THE WINTER 1991 USENIX CONFERENCE, P357
   [No title captured]
   [No title captured]
NR 161
TC 21
Z9 25
U1 0
U2 13
PU ASSOC COMPUTING MACHINERY
PI NEW YORK
PA 2 PENN PLAZA, STE 701, NEW YORK, NY 10121-0701 USA
SN 1049-331X
EI 1557-7392
J9 ACM T SOFTW ENG METH
JI ACM Trans. Softw. Eng. Methodol.
PD AUG
PY 2008
VL 17
IS 4
AR 19
DI 10.1145/13487689.13487692
PG 48
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 351OL
UT WOS:000259433600003
DA 2024-07-18
ER

PT J
AU Meyers, TM
   Binkley, D
AF Meyers, Timothy M.
   Binkley, David
TI An empirical study of slice-based cohesion and coupling metrics
SO ACM TRANSACTIONS ON SOFTWARE ENGINEERING AND METHODOLOGY
LA English
DT Article; Proceedings Paper
CT 11th Working Conference on Reverse Engineering
CY NOV 08-12, 2004
CL Delft, NETHERLANDS
SP IEEE Comp Soc Tech Council Software Engn, Reengn Forum
DE slicing; cohesion; coupling; reengineering; software intervention
ID SOFTWARE
AB Software reengineering is a costly endeavor, due in part to the ambiguity of where to focus reengineering effort. Coupling and Cohesion metrics, particularly quantitative cohesion metrics, have the potential to aid in this identification and to measure progress. The most extensive work on such metrics is with slice-based cohesion metrics. While their use of semantic dependence information should make them an excellent choice for cohesion measurement, their wide spread use has been impeded in part by a lack of empirical study. Recent advances in software tools make, for the first time, a large-scale empirical study of slice-based cohesion and coupling metrics possible. Four results from such a study are presented. First, "head-to-head" qualitative and quantitative comparisons of the metrics identify which metrics provide similar views of a program and which provide unique views of a program. This study includes statistical analysis showing that slice-based metrics are not proxies for simple size-based metrics such as lines of code. Second, two longitudinal studies show that slice-based metrics quantify the deterioration of a program as it ages. This serves to validate the metrics: the metrics quantify the degradation that exists during development; turning this around, the metrics can be used to measure the progress of a reengineering effort. Third, baseline values for slice-based metrics are provided. These values act as targets for reengineering efforts with modules having values outside the expected range being the most in need of attention. Finally, slice-based coupling is correlated and compared with slice-based cohesion.
C1 [Meyers, Timothy M.; Binkley, David] Loyola Coll, Baltimore, MD 21210 USA.
C3 Loyola University Maryland
RP Meyers, TM (corresponding author), Loyola Coll, Baltimore, MD 21210 USA.
EM tmeyers@cs.loyola.edu; binkley@cs.loyola.edu
CR Bieman JM, 1998, IEEE T SOFTWARE ENG, V24, P111, DOI 10.1109/32.666825
   BIEMAN JM, 1994, IEEE T SOFTWARE ENG, V20, P644, DOI 10.1109/32.310673
   Binkley D., 1995, ACM Transactions on Software Engineering and Methodology, V4, P3, DOI 10.1145/201055.201056
   Binkley D., 1996, Advances in Computers, V43, P1
   Constantine LarryL., 1979, Structured Design
   DEMEYER S, 1999, WORK C REV ENG, P175
   *GRAMM INC, 2002, COD SLIC SYST
   Gyimóthy T, 2005, IEEE T SOFTWARE ENG, V31, P897, DOI 10.1109/TSE.2005.112
   Harman M., 1997, P IEEE ACM ICSE WORK, P28
   HARMAN M, 1995, P 8 INT SOFTW QUAL W
   HARMAN M, 1995, 8 INT QUAL WEEK SAN, P1
   HENRY S, 1981, IEEE T SOFTWARE ENG, V7, P510, DOI 10.1109/TSE.1981.231113
   HORWITZ S, 1990, ACM T PROGR LANG SYS, V12, P26, DOI [10.1145/77606.77608, 10.1145/960116.53994]
   KARSTU S, 1994, THESIS MICHIGAN TECH
   LAKHOTIA A, 1998, NEW GENERAT COMPUT, V6, P211
   LI L, 1994, INT C SOFTW MAINT IC, P424
   MENS T, 2002, P 4 INT WORKSH PRINC, P83
   Ott L. M., 1993, Proceedings First International Software Metrics Symposium (Cat. No.93TH0518-1), P71, DOI 10.1109/METRIC.1993.263799
   Ott L. M., 1989, Proceedings. 11th International Conference on Software Engineering (Cat. No.89CH2718-5), P198, DOI 10.1145/74587.74614
   Ott R.L., 2015, INTRO STAT METHODS D
   Page-Jones M., 1980, The practical guide to structured systems design
   PODGURSKI A, 1990, IEEE T SOFTWARE ENG, V16, P8
   Redwine S. T.  Jr., 1985, Proceedings of the 8th International Conference on Software Engineering (Cat. No.85CH2139-4), P189
   Reps T., 1988, 777 U WISC
   Weiser M., 1981, 5th International Conference on Software Engineering, P439
   ZELKOWITZ M, 1998, P 23 NASA GODD SPAC, P52
NR 26
TC 46
Z9 51
U1 0
U2 7
PU ASSOC COMPUTING MACHINERY
PI NEW YORK
PA 2 PENN PLAZA, STE 701, NEW YORK, NY 10121-0701 USA
SN 1049-331X
EI 1557-7392
J9 ACM T SOFTW ENG METH
JI ACM Trans. Softw. Eng. Methodol.
PD DEC
PY 2007
VL 17
IS 1
AR 2
DI 10.1145/1314493.1314495
PG 27
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA 252ON
UT WOS:000252455900002
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Eshuis, R
AF Eshuis, R
TI Symbolic model checking of UML activity diagrams
SO ACM TRANSACTIONS ON SOFTWARE ENGINEERING AND METHODOLOGY
LA English
DT Article
DE verification; model checking; activity diagrams; Unified Modeling
   Language
AB Two translations from activity diagrams to the input language of NuSMV, a symbolic model verifier, are presented. Both translations map an activity diagram into a finite state machine and are inspired by existing statechart semantics. The requirements-level translation defines state machines that can be efficiently verified, but are a bit unrealistic since they assume the perfect synchrony hypothesis. The implementation-level translation defines state machines that cannot be verified so efficiently, but that are more realistic since they do not use the perfect synchrony hypothesis. To justify the use of the requirements-level translation, we show that for a large class of activity diagrams and certain properties, both translations are equivalent: regardless of which translation is used, the outcome of model checking is the same. Moreover, for linear stuttering-closed properties, the implementation-level translation is equivalent to a slightly modified version of the requirements-level translation. We use the two translations to model check data integrity constraints for an activity diagram and a set of class diagrams that specify the data manipulated in the activities. Both translations have been implemented in two tools. We discuss our experiences in applying both translations to model check some large example activity diagrams.
C1 Eindhoven Univ Technol, Dept Technol Management, NL-5600 MB Eindhoven, Netherlands.
C3 Eindhoven University of Technology
RP Eindhoven Univ Technol, Dept Technol Management, POB 513, NL-5600 MB Eindhoven, Netherlands.
EM h.eshuis@tm.tue.nl
RI Eshuis, Rik/D-7042-2011
OI Eshuis, Rik/0000-0003-2314-7155
CR Alonso G., 2004, DAT SYS APP, DOI 10.1007/978-3-662-10876-5_5
   André C, 2001, SECOND INTERNATIONAL CONFERENCE ON APPLICATION OF CONCURRENCY TO SYSTEMS DESIGN, PROCEEDINGS, P133, DOI 10.1109/CSD.2001.981771
   [Anonymous], 1992, TEMPORAL LOGIC REACT, DOI DOI 10.1007/978-1-4612-0931-7
   [Anonymous], 1995, CAMBRIDGE TRACTS THE
   BERRY G, 1992, SCI COMPUT PROGRAM, V19, P87, DOI 10.1016/0167-6423(92)90005-V
   BOCK C, 1999, J OBJECT ORIENTED PR, V12, P5
   Boehm BW., 1981, Software Engineering Economics
   Booch Grady, 1999, UNIFIED MODELING LAN, DOI DOI 10.1007/3-540-40011-7_10
   BROWNE MC, 1988, THEOR COMPUT SCI, V59, P115, DOI 10.1016/0304-3975(88)90098-9
   BURCH JR, 1992, INFORM COMPUT, V98, P142, DOI 10.1016/0890-5401(92)90017-A
   Campbell L. A., 2002, Requirements Engineering, V7, P264, DOI 10.1007/s007660200020
   CASPERS A, 1998, THESIS VRIJE U AMSTE
   Chang YH, 1998, RESOUR CONSERV RECY, V24, P7, DOI 10.1016/S0921-3449(98)00036-6
   Cimatti A., 2002, P INT C COMP AID VER, P359, DOI DOI 10.1007/3-540-45657-0_29
   Clarke EM, 1996, ACM COMPUT SURV, V28, P626, DOI 10.1145/242223.242257
   Clarke EM, 1999, MODEL CHECKING, P1
   DEHNE F, 2000, TOOLKIT CONCEPTUAL M
   Emerson EA, 1997, LECT NOTES COMPUT SC, V1217, P19, DOI 10.1007/BFb0035378
   Eriksson H., 2000, BUSINESS MODELING UM
   Eshuis R, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P166, DOI 10.1109/ICSE.2002.1007965
   Eshuis R., 2002, Requirements Engineering, V7, P243, DOI 10.1007/s007660200019
   Eshuis R, 2004, IEEE T SOFTWARE ENG, V30, P437, DOI 10.1109/TSE.2004.33
   Eshuis R, 2003, LECT NOTES COMPUT SC, V2472, P321
   ESHUIS R, 2001, LNCS, V2029, P76
   Eshuis R., 2002, THESIS U TWENTE, V02-44
   Grefen P, 1999, DATABASE SUPPORT WOR
   Harel D., 1996, ACM Transactions on Software Engineering and Methodology, V5, P293, DOI 10.1145/235321.235322
   HAREL D, 1987, SCI COMPUT PROGRAM, V8, P231, DOI 10.1016/0167-6423(87)90035-9
   Hausmann JH, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P105, DOI 10.1109/ICSE.2002.1007960
   Holzmann GJ, 1997, IEEE T SOFTWARE ENG, V23, P279, DOI 10.1109/32.588521
   Inverardi P, 2001, 16TH ANNUAL INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2001), PROCEEDINGS, P346, DOI 10.1109/ASE.2001.989826
   Kesten Y, 1998, LECT NOTES COMPUT SC, V1443, P1, DOI 10.1007/BFb0055036
   Lamport L., 1983, Information Processing 83. Proceedings of the IFIP 9th World Computer Congress, P657
   Latella D., 1999, Formal Aspects of Computing, V11, P637, DOI 10.1007/s001659970003
   Lilius J, 1999, LECT NOTES COMPUT SC, V1723, P430
   McMillan K. L., 1993, Symbolic model checking
   *MIT, MIT PROC HDB
   MURATA T, 1989, P IEEE, V77, P541, DOI 10.1109/5.24143
   *NO MAG INC, MAGICDRAW
   Paech B, 1999, LECT NOTES COMPUT SC, V1618, P267
   Peled D, 1997, THEOR COMPUT SCI, V186, P135, DOI 10.1016/S0304-3975(96)00225-3
   Peled D., 1993, Proceedings of the 5th International Conference on Computer Aided Verification, V697, P409
   PNUELI A, 1996, LNCS, V1102, P184
   *ROSETTANET CONS, ROSETTANET
   SCHAFER T, 2001, ELECT NOTES THEORETI, V55, P3
   SELIC B, 2001, LECT NOTES COMPUTER, V2029, P1
   *UML REV TASKF, 2003, FORMAL20030301 UML R
   *UML REV TASKF, 2003, PTC030706 OMG UML RE
   *UN CEFACT OASIS, EBXML
   Yang J, 1997, ACM T PROGR LANG SYS, V19, P386, DOI 10.1145/244795.244803
   [No title captured]
   2005, TOOLKIT CONCEPTUAL M
NR 52
TC 120
Z9 129
U1 0
U2 16
PU ASSOC COMPUTING MACHINERY
PI NEW YORK
PA 2 PENN PLAZA, STE 701, NEW YORK, NY 10121-0701 USA
SN 1049-331X
EI 1557-7392
J9 ACM T SOFTW ENG METH
JI ACM Trans. Softw. Eng. Methodol.
PD JAN
PY 2006
VL 15
IS 1
BP 1
EP 38
DI 10.1145/1125808.1125809
PG 38
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 039QI
UT WOS:000237320900001
DA 2024-07-18
ER

PT J
AU Costagliola, G
   Deufemia, V
   Polese, G
AF Costagliola, G
   Deufemia, V
   Polese, G
TI A framework for Modeling and implementing visual notations with
   applications to software engineering
SO ACM TRANSACTIONS ON SOFTWARE ENGINEERING AND METHODOLOGY
LA English
DT Article; Proceedings Paper
CT IEEE International Symposium on Visual Languages
CY SEP 10-13, 2000
CL SEATTLE, WA
SP Univ Washington, IEEE Comp Soc, Tech Comm Multimedia Comp
DE algorithms; design; languages; LR parsing; meta-CASE; metamodeling;
   software engineering models; UML; visual grammars; visual notations
ID ENVIRONMENT; FORMALISM; DESIGN; TOOL
AB We present a framework for modeling visual notations and for generating the corresponding visual programming environments. The framework can be used for modeling the diagrammatic notations of software development methodologies, and to generate visual programming environments with CASE tools functionalities. This is accomplished through an underlying modeling process based on the visual notation syntactic model of eXtended Positional Grammars ( XPG, for short), and the associated parsing methodology, XpLR. In particular, the process requires the modeling of the basic elements ( visual symbols) of a visual notation, their syntactic properties, the relations between them, the syntactic rules to formally define the set of feasible visual sentences, and a set of semantic routines performing additional checks and translation tasks. Such a process is completely supported by the VLDesk system, which enables the automatic generation of an editor for drawing visual sentences, as well as a processor for their recognition, parsing, and translation into other notations.
   The proposed framework also provides the basis for the definition of a meta-CASE technology. In fact, we can customize the generated visual programming environment in terms of the supported visual notation, its syntactic properties, and the translation rules. We have used this framework to model several diagrammatic notations used in software development methodologies, including those of the Unified Modeling Language.
C1 Univ Salerno, Dipartimento Matemat & Informat, I-84084 Fisciano, SA, Italy.
C3 University of Salerno
RP Univ Salerno, Dipartimento Matemat & Informat, Via Ponte don Melillo, I-84084 Fisciano, SA, Italy.
RI Polese, Giuseppe/CAG-5264-2022; Deufemia, Vincenzo/M-3553-2016;
   Costagliola, Gennaro/GLV-1530-2022
OI Polese, Giuseppe/0000-0002-8496-2658; Deufemia,
   Vincenzo/0000-0002-6711-3590; Costagliola, Gennaro/0000-0003-3816-7765
CR AHO A, 1987, SERIES COMPUTER SCI
   ALDERSON A, 1991, LECT NOTES COMPUT SC, V509, P81
   [Anonymous], 1993, 11313 IEC
   [Anonymous], 1989, Modern structured analysis
   Bardohl R, 2002, SCI COMPUT PROGRAM, V44, P181, DOI 10.1016/S0167-6423(02)00038-2
   BARDOHL R, 2002, ENTCS, V72
   BELL R, 1995, IEEE SOFTWARE, V12, P11, DOI 10.1109/52.368255
   Bottoni P, 2000, IEEE VISLANG, P59, DOI 10.1109/VL.2000.874351
   Chang SK, 2003, IEEE MULTIMEDIA, V10, P44, DOI 10.1109/MMUL.2003.1167921
   CHANG SK, 2000, MULTIMEDIA SOFTWARE
   CHEN PP, 1985, PRINCIPLES DATABASE, P174
   CHMURA A, 1995, IEEE SOFTWARE, V12, P18, DOI 10.1109/52.368258
   Chok S. S., 2003, ACM Transactions on Computer-Human Interaction, V10, P244, DOI 10.1145/937549.937553
   CHOK SS, 1995, AUSTR COMPUTER SCI C, V17, P90
   Coad P., 1991, OBJECT ORIENTED ANAL, V2nd
   Conallen J, 1999, COMMUN ACM, V42, P63, DOI 10.1145/317665.317677
   Costagliola G, 2002, J VISUAL LANG COMPUT, V13, P573, DOI 10.1006/S1045-926X(02)00025-3
   Costagliola G, 1997, IEEE T SOFTWARE ENG, V23, P777, DOI 10.1109/32.637392
   Costagliola G, 2001, IEEE SYMPOSIA ON HUMAN-CENTRIC COMPUTING LANGUAGES AND ENVIRONMENTS, PROCEEDINGS, P48, DOI 10.1109/HCC.2001.995234
   Costagliola G, 2000, IEEE VISLANG, P103, DOI 10.1109/VL.2000.874373
   COSTAGLIOLA G, 1995, SEKE '95, PROCEEDINGS, P226
   Costagliola G., 2003, P SIGPARSE ACL 8 INT, P79
   COSTAGLIOLA G, 2003, P 5 INT C ENT INF SY, P301
   CRUZ IF, 1997, P IEEE S VIS LANG CA, P216
   de Lara J, 2002, LECT NOTES COMPUT SC, V2306, P174
   DILLER AZ, 1992, Z INTRO FORMAL METHO
   Ebert J, 1997, LECT NOTES COMPUT SC, V1250, P203
   ERMEL C, 1999, HDB GRAPH GRAMMARS C, P551
   FARGEMAND O, 1994, ISDN SYST, V26, P1143
   FEDER J, 1971, INFORM SCIENCES, V3, P225, DOI 10.1016/S0020-0255(71)80008-7
   Ferguson RI, 2000, LECT NOTES ARTIF INT, V1889, P407
   Ferraiolo Jon, 2001, SCALABLE VECTOR GRAP
   Ferrucci F, 1996, INFORM COMPUT, V131, P1, DOI 10.1006/inco.1996.0090
   FISHER AS, 1992, CASE USING SOFTWARE
   Golin E. J., 1991, Journal of Visual Languages and Computing, V2, P371, DOI 10.1016/S1045-926X(05)80005-9
   Goodland MSlater., 1995, SSADM VERSION 4 PRAC, V2nd
   HAREL D, 1988, COMMUN ACM, V31, P514, DOI 10.1145/42411.42414
   Heckel R, 2002, LECT NOTES COMPUT SC, V2505, P161
   ISAKOWITZ T, 1995, COMMUN ACM, V38, P34, DOI 10.1145/208344.208346
   Jarzabek S, 1998, COMMUN ACM, V41, P93, DOI 10.1145/280324.280338
   Johnson S.C., 1978, YACC YET ANOTHER COM
   Kelly S, 1996, LECT NOTES COMPUT SC, V1080, P1
   Marriott K., 1994, Proceedings. IEEE Symposium on Visual Languages (Cat. No.94TH8010), P118, DOI 10.1109/VL.1994.363633
   MARRIOTT K, 1968, VISUAL LANGUAGE THEO
   MCCLURE C, 1989, CASE SOFTWARE AUTOMA
   Minas M, 2002, SCI COMPUT PROGRAM, V44, P157, DOI 10.1016/S0167-6423(02)00037-0
   Minas M, 2000, LECT NOTES COMPUT SC, V1764, P281
   Minas M, 1997, IEEE VISLANG, P226, DOI 10.1109/VL.1997.626587
   MINAS M, 2003, P AGTIVE 03 APPL GRA, P391
   MINAS M, 2001, S HUMAN CENTRIC COMP
   MUSTO A, 2001, P WTUML WORKSH TRANS
   Nassi I., 1973, SIGPLAN Notices, V8, P12, DOI 10.1145/953349.953350
   *OBJ MAN GROUP, 2003, XML MET INT XMI SPEC
   *OBJ MAN GROUP, 2003, UML SPEC VERS 1 5 TE
   Rekers J, 1996, IEEE SYMPOSIUM ON VISUAL LANGUAGES, PROCEEDINGS, P148, DOI 10.1109/VL.1996.545281
   Rekers J, 1997, J VISUAL LANG COMPUT, V8, P27, DOI 10.1006/jvlc.1996.0027
   ROSS DT, 1977, IEEE T SOFTWARE ENG, V3, P6, DOI 10.1109/TSE.1977.229899
   RUBIN RV, 1990, IEEE T SOFTWARE ENG, V16, P1107, DOI 10.1109/32.60292
   RUMBAUGH JAMES., 1998, UNIFIED MODELING LAN
   Schurr Andy., 1999, HDB GRAPH GRAMMARS C, P487
   Serrano J. A., 1995, Proceedings. 11th IEEE International Symposium on Visual Languages (Cat. No.95TB8105), P211, DOI 10.1109/VL.1995.520811
   SORENSON PG, 1996, P VIEWP 96, P237
   Taentzer G, 2000, LECT NOTES COMPUT SC, V1779, P481
   Walden Kim., 1995, Seamless Object-Oriented Software Archi-tecture: Analysis and Design of Reliable Systems, Vfirst
   Wittenburg K., 1992, Proceedings. 1992 IEEE Workshop on Visual Languages (Cat. No.92TH0471-3), P192, DOI 10.1109/WVL.1992.275765
   Wittenburg K., 1998, VISUAL LANGUAGE THEO, P193
   Zhang K, 2001, IEEE T SOFTWARE ENG, V27, P289, DOI 10.1109/32.917521
NR 67
TC 53
Z9 56
U1 1
U2 5
PU ASSOC COMPUTING MACHINERY
PI NEW YORK
PA 2 PENN PLAZA, STE 701, NEW YORK, NY 10121-0701 USA
SN 1049-331X
EI 1557-7392
J9 ACM T SOFTW ENG METH
JI ACM Trans. Softw. Eng. Methodol.
PD OCT
PY 2004
VL 13
IS 4
BP 431
EP 487
DI 10.1145/1040291.1040293
PG 57
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA 886YY
UT WOS:000226270400002
DA 2024-07-18
ER

PT J
AU Chen, ZC
   Chen, JJ
   Wang, WJ
   Zhou, JY
   Wang, M
   Chen, X
   Zhou, S
   Wang, JM
AF Chen, Zhichao
   Chen, Junjie
   Wang, Weijing
   Zhou, Jianyi
   Wang, Meng
   Chen, Xiang
   Zhou, Shan
   Wang, Jianmin
TI Exploring Better Black-Box Test Case Prioritization via Log Analysis
SO ACM TRANSACTIONS ON SOFTWARE ENGINEERING AND METHODOLOGY
LA English
DT Article
DE Test case prioritization; log analysis; regression testing
ID MINIMIZATION; COVERAGE; MUTATION; SYSTEM
AB Test case prioritization (TCP) has been widely studied in regression testing, which aims to optimize the execution order of test cases so as to detect more faults earlier. TCP has been divided into white-box test case prioritization (WTCP) and black-box test case prioritization (BTCP). WTCP can achieve better prioritization effectiveness by utilizing source code information, but is not applicable in many practical scenarios (where source code is unavailable, e.g., outsourced testing). BTCP has the benefit of not relying on source code information, but tends to be less effective than WTCP. That is, both WTCP and BTCP suffer from limitations in the practical use.
   To improve the practicability of TCP, we aim to explore better BTCP, significantly bridging the effectiveness gap between BTCP and WTCP. In this work, instead of statically analyzing test cases themselves in existing BTCP techniques, we conduct the first study to explore whether this goal can be achieved via log analysis. Specifically, we propose to mine test logs produced during test execution to more sufficiently reflect test behaviors, and design a new BTCP framework (called LogTCP), including log pre-processing, log representation, and test case prioritization components. Based on the LogTCP framework, we instantiate seven log-based BTCP techniques by combining different log representation strategies with different prioritization strategies.
   We conduct an empirical study to explore the effectiveness of LogTCP. Based on 10 diverse open-source Java projects from GitHub, we compared LogTCP with three representative BTCP techniques and four representative WTCP techniques. Our results show that all of our LogTCP techniques largely perform better than all the BTCP techniques in average fault detection, to the extent that they become competitive to the WTCP techniques. That demonstrates the great potential of logs in practical TCP.
C1 [Chen, Zhichao; Chen, Junjie; Wang, Weijing] Tianjin Univ, Coll Intelligence & Comp, Tianjin, Peoples R China.
   [Zhou, Jianyi] Peking Univ, MoE, Key Lab High Confidence Technol, Beijing, Peoples R China.
   [Wang, Meng] Univ Bristol, Dept Comp Sci, Bristol, England.
   [Chen, Xiang] Nantong Univ, Sch Informat Sci & Technol, Nantong, Peoples R China.
   [Zhou, Shan; Wang, Jianmin] Chinese Acad Sci, Technol & Engn Ctr Space Utilizat, Beijing, Peoples R China.
   [Chen, Zhichao; Chen, Junjie; Wang, Weijing] Tianjin Univ, Coll Intelligence & Comp, Tianjin, Peoples R China.
   [Zhou, Jianyi] Peking Univ, MoE, Key Lab High Confidence Technol, Beijing 100871, Peoples R China.
   [Wang, Meng] Univ Bristol, Dept Comp Sci, Bristol, England.
   [Chen, Xiang] Nantong Univ, Sch Informat Sci & Technol, Nantong, Peoples R China.
   [Zhou, Shan; Wang, Jianmin] Chinese Acad Sci, Technol & Engn Ctr Space Utilizat, Beijing 100094, Peoples R China.
C3 Tianjin University; Peking University; University of Bristol; Nantong
   University; Chinese Academy of Sciences; Technology & Engineering Center
   for Space Utilization, CAS; Tianjin University; Peking University;
   University of Bristol; Nantong University; Chinese Academy of Sciences;
   Technology & Engineering Center for Space Utilization, CAS
RP Chen, JJ (corresponding author), Tianjin Univ, Coll Intelligence & Comp, Tianjin, Peoples R China.
EM chenzhichao99@tju.edu.cn; junjiechen@tju.edu.cn; wangweijing@tju.edu.cn;
   zhoujianyi@pku.edu.cn; meng.wang@bristol.ac.uk; xchencs@ntu.edu.cn;
   zhoushan@csu.ac.cn; wangjm@csu.ac.cn
RI Chen, Xiang/AAG-3663-2019; Chen, Junjie/ABE-8685-2020
OI Chen, Xiang/0000-0002-1180-3891; Chen, Junjie/0000-0003-4509-2271; Wang,
   Meng/0000-0001-7780-630X; Wang, Weijing/0000-0002-9250-573X
FU National Natural Science Foundation of China [62002256,
   2020-JCJQ-JJ-490]
FX This work was supported by the National Natural Science Foundation of
   China (Grant No. 62002256) and Fund projects in the technical field of
   the foundation strengthening plan (2020-JCJQ-JJ-490).
CR Anderson J, 2019, INFORM SOFTWARE TECH, V113, P110, DOI 10.1016/j.infsof.2019.05.008
   Andrews JH, 2005, PROC INT CONF SOFTW, P402, DOI 10.1145/1062455.1062530
   Andrews JH, 2003, IEEE T SOFTWARE ENG, V29, P634, DOI 10.1109/TSE.2003.1214327
   Andrews JH, 1998, 13TH IEEE INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P157, DOI 10.1109/ASE.1998.732614
   Anu H, 2019, PROC IEEE INT CONF S, P125, DOI 10.1109/ICSME.2019.00022
   Arcuri Andrea., 2011, ISSTA
   Bell J, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P433, DOI 10.1145/3180155.3180164
   BENJAMINI Y, 1995, J R STAT SOC B, V57, P289, DOI 10.1111/j.2517-6161.1995.tb02031.x
   Blei DM, 2003, J MACH LEARN RES, V3, P993, DOI 10.1162/jmlr.2003.3.4-5.993
   Bojanowski P., 2017, Transactions of the Association for Computational Linguistics, V5, P135, DOI DOI 10.1162/TACLA00051
   Bryce RC, 2006, INFORM SOFTWARE TECH, V48, P960, DOI 10.1016/j.infsof.2006.03.004
   Byun T, 2019, 2019 IEEE INTERNATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE TESTING (AITEST), P63, DOI 10.1109/AITest.2019.000-6
   Cavnar W.B., 1994, Proceedings of SDAIR-94, 3rd Annual Symposium on Document Analysis and Information Retrieval, V48113, P161
   Chan KP, 2006, INT J SOFTW ENG KNOW, V16, P553, DOI 10.1142/S0218194006002926
   Chen BY, 2018, IEEE INT CONF AUTOM, P305, DOI 10.1145/3238147.3238214
   Chen BY, 2017, PROC INT CONF SOFTW, P71, DOI 10.1109/ICSE.2017.15
   Chen BY, 2017, EMPIR SOFTW ENG, V22, P330, DOI 10.1007/s10664-016-9429-5
   Chen JJ, 2021, IEEE T SOFTWARE ENG, V47, P261, DOI 10.1109/TSE.2018.2889771
   Chen JJ, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P656, DOI 10.1145/3236024.3236053
   Chen JJ, 2018, PROC IEEE ACM INT C, P472, DOI 10.1145/3183440.3183456
   Chen JJ, 2017, PROC INT CONF SOFTW, P700, DOI 10.1109/ICSE.2017.70
   Chen JJ, 2017, IEEE INT CONF SOFTW, P418, DOI 10.1109/ICST.2017.45
   Chen JJ, 2016, IEEE INT CONF AUTOM, P178, DOI 10.1145/2970276.2970366
   Chen JJ, 2016, IEEE INT CONF SOFTW, P266, DOI 10.1109/ICST.2016.19
   Chen TY, 2004, LECT NOTES COMPUT SC, V3321, P320
   Cohen MB, 2008, IEEE T SOFTWARE ENG, V34, P633, DOI 10.1109/TSE.2008.50
   Cruciani E, 2019, PROC INT CONF SOFTW, P419, DOI 10.1109/ICSE.2019.00055
   Dai HT, 2022, IEEE T SOFTWARE ENG, V48, P879, DOI 10.1109/TSE.2020.3007554
   Dash Rajashree., 2011, International Journal of Advances in Science and Technology, V2, P29
   Dit B, 2011, CONF PROC INT SYMP C, P11, DOI 10.1109/ICPC.2011.47
   Dougherty J., 1995, Machine Learning. Proceedings of the Twelfth International Conference on Machine Learning, P194
   Du M, 2017, CCS'17: PROCEEDINGS OF THE 2017 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P1285, DOI 10.1145/3133956.3134015
   Elbaum S, 2002, IEEE T SOFTWARE ENG, V28, P159, DOI 10.1109/32.988497
   Elbaum S, 2001, PROC INT CONF SOFTW, P329, DOI 10.1109/ICSE.2001.919106
   Fraser Gordon, 2011, PROC 19 ACM SIGSOFT, P416, DOI 10.1145/2025113.2025179
   Fu QA, 2009, IEEE DATA MINING, P149, DOI 10.1109/ICDM.2009.60
   GOWER JC, 1969, ROY STAT SOC C-APP, V18, P54
   Guo HX, 2021, IEEE IJCNN, DOI 10.1109/IJCNN52387.2021.9534113
   Han J, 2012, MOR KAUF D, P1
   Hao D, 2016, FRONT COMPUT SCI-CHI, V10, P769, DOI 10.1007/s11704-016-6112-3
   He PJ, 2018, Arxiv, DOI arXiv:1806.04356
   He PJ, 2018, IEEE INT CONF AUTOM, P178, DOI 10.1145/3238147.3238193
   He PJ, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON WEB SERVICES (ICWS 2017), P33, DOI 10.1109/ICWS.2017.13
   He SL, 2021, ACM COMPUT SURV, V54, DOI 10.1145/3460345
   Hemmati H, 2013, ACM T SOFTW ENG METH, V22, DOI 10.1145/2430536.2430540
   Henard C, 2016, PROC INT CONF SOFTW, P523, DOI 10.1145/2884781.2884791
   Henard C, 2013, IEEE ICST WORKSHOP, P188, DOI 10.1109/ICSTW.2013.30
   Hettiarachchi C, 2014, INT CONF SOFTW SECUR, P157, DOI 10.1109/SERE.2014.29
   Hochreiter S, 1997, NEURAL COMPUT, V9, P1735, DOI [10.1162/neco.1997.9.1.1, 10.1007/978-3-642-24797-2]
   Jia Yue, 2016, P 25 INT S SOFTWARE, P354
   Jiang B, 2009, IEEE INT CONF AUTOM, P233, DOI 10.1109/ASE.2009.77
   Jiang ZM, 2008, INT CONF QUAL SOFTW, P181, DOI 10.1109/QSIC.2008.50
   Jung-Hyun Kwon, 2014, 2014 21st Asia-Pacific Software Engineering Conference (APSEC), P19, DOI 10.1109/APSEC.2014.12
   Just R, 2014, P 2014 INT S SOFTW T, P437, DOI DOI 10.1145/2610384.2628055
   Just R, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P654, DOI 10.1145/2635868.2635929
   Kim JM, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P119, DOI 10.1109/ICSE.2002.1007961
   Krishnamoorthi R, 2009, INFORM SOFTWARE TECH, V51, P799, DOI 10.1016/j.infsof.2008.08.007
   Lam W, 2020, PROC INT SYMP SOFTW, P403, DOI 10.1109/ISSRE5003.2020.00045
   Ledru Y, 2012, AUTOMAT SOFTW ENG, V19, P65, DOI 10.1007/s10515-011-0093-0
   Ledru Y, 2009, IEEE INT CONF AUTOM, P510, DOI 10.1109/ASE.2009.23
   Li H, 2017, EMPIR SOFTW ENG, V22, P1684, DOI 10.1007/s10664-016-9456-2
   Li SS, 2020, EMPIR SOFTW ENG, V25, P2302, DOI 10.1007/s10664-019-09757-y
   Li Z, 2007, IEEE T SOFTWARE ENG, V33, P225, DOI 10.1109/TSE.2007.38
   Li ZH, 2020, IEEE INT CONF AUTOM, P361, DOI 10.1145/3324884.3416636
   Lin QW, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P480, DOI 10.1145/3236024.3236060
   Lin QW, 2016, 2016 IEEE/ACM 38TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING COMPANION (ICSE-C), P102, DOI 10.1145/2889160.2889232
   Liu WL, 2007, INT C COMP AID DES C, P252
   Liu ZX, 2021, IEEE T SOFTWARE ENG, V47, P2012, DOI 10.1109/TSE.2019.2941943
   Lou YL, 2019, ADV COMPUT, V113, P1, DOI 10.1016/bs.adcom.2018.10.001
   Lou YL, 2015, 2015 IEEE 26TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING (ISSRE), P46, DOI 10.1109/ISSRE.2015.7381798
   Lu YF, 2016, PROC INT CONF SOFTW, P535, DOI 10.1145/2884781.2884874
   Luo Q, 2019, IEEE T SOFTWARE ENG, V45, P1054, DOI 10.1109/TSE.2018.2822270
   Luo Q, 2018, PROC IEEE INT CONF S, P240, DOI 10.1109/ICSME.2018.00033
   Luo Q, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P559, DOI 10.1145/2950290.2950344
   Malishevsky AG, 2002, PROC IEEE INT CONF S, P204, DOI 10.1109/ICSM.2002.1167767
   Mandieh M, 2020, INFORM SOFTWARE TECH, V121, DOI 10.1016/j.infsof.2020.106269
   Marijan D, 2013, PROC IEEE INT CONF S, P540, DOI 10.1109/ICSM.2013.91
   Mei H, 2012, IEEE T SOFTWARE ENG, V38, P1258, DOI 10.1109/TSE.2011.106
   Micco John, 2017, The State of Continuous Integration Testing @Google
   Miranda B, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P222, DOI 10.1145/3180155.3180210
   Mizouchi T, 2019, INT C PROGRAM COMPRE, P135, DOI 10.1109/ICPC.2019.00029
   Nagappan Meiyappan, 2010, Proceedings of the 2010 7th IEEE Working Conference on Mining Software Repositories (MSR 2010), P114, DOI 10.1109/MSR.2010.5463281
   Pachariya MK, 2020, INT J SOFTW INNOV, V8, P23, DOI 10.4018/IJSI.2020040102
   Paterson D, 2019, IEEE INT CONF SOFTW, P346, DOI 10.1109/ICST.2019.00041
   Peng Q., 2020, P 29 ACM SIGSOFT INT, P324, DOI DOI 10.1145/3395363.3397383
   Philip AA, 2019, PROC INT CONF SOFTW, P408, DOI 10.1109/ICSE.2019.00054
   Rajaraman Anand., 2011, Mining of Massive Datasets, DOI DOI 10.1017/CBO9781139058452
   RicardoDunia S, 1997, AM CONTROL C, V5
   Rogstad E, 2013, INFORM SOFTWARE TECH, V55, P1781, DOI 10.1016/j.infsof.2013.04.004
   Rothermel G, 2001, IEEE T SOFTWARE ENG, V27, P929, DOI 10.1109/32.962562
   Rothermel G., 1999, Proceedings IEEE International Conference on Software Maintenance - 1999 (ICSM'99). `Software Maintenance for Business Change' (Cat. No.99CB36360), P179, DOI 10.1109/ICSM.1999.792604
   Rothermel G., 1997, ACM Transactions on Software Engineering and Methodology, V6, P173, DOI 10.1145/248233.248262
   Russo B, 2015, EMPIR SOFTW ENG, V20, P879, DOI 10.1007/s10664-014-9303-2
   Saha RK, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P268, DOI 10.1109/ICSE.2015.47
   Sampath Sreedevi, 2008, 2008 First IEEE International Conference on Software Testing, Verification and Validation (ICST '08), P141, DOI 10.1109/ICST.2008.42
   Sathya R., 2013, International Journal of Advanced Research in Artificial Intelligence, V2, P34
   SHAFFER JP, 1995, ANNU REV PSYCHOL, V46, P561, DOI 10.1146/annurev.ps.46.020195.003021
   Shah H., 2011, Proceedings of the 2011 6th IEEE International Conference on Global Software Engineering (ICGSE 2011), P131, DOI 10.1109/ICGSE.2011.32
   Shang WY, 2014, PROC IEEE INT CONF S, P21, DOI 10.1109/ICSME.2014.24
   Shang WY, 2015, EMPIR SOFTW ENG, V20, P1, DOI 10.1007/s10664-013-9274-8
   SHAPIRO SS, 1965, BIOMETRIKA, V52, P591, DOI 10.1093/biomet/52.3-4.591
   Shi A, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P545, DOI 10.1145/3338906.3338925
   Shin D, 2019, SOFTW TEST VERIF REL, V29, DOI 10.1002/stvr.1695
   Silva D, 2016, IEEE C EVOL COMPUTAT, P4508, DOI 10.1109/CEC.2016.7744363
   Spearman, 1961, PROOF MEASUREMENT AS
   Srikanth H, 2005, 2005 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING (ISESE), PROCEEDINGS, P62, DOI 10.1109/ISESE.2005.1541815
   Srikanth H, 2016, J SYST SOFTWARE, V119, P122, DOI 10.1016/j.jss.2016.06.017
   Thomas SW, 2014, EMPIR SOFTW ENG, V19, P182, DOI 10.1007/s10664-012-9219-7
   Tian Zhao, 2022, 37 IEEEACM INT C AUT
   Vaarandi R, 2015, INT CONF NETW SER, P1, DOI 10.1109/CNSM.2015.7367331
   VOAS JM, 1992, IEEE T SOFTWARE ENG, V18, P717, DOI 10.1109/32.153381
   Wang LZ, 2020, 2020 IEEE 13TH INTERNATIONAL CONFERENCE ON WEB SERVICES (ICWS 2020), P142, DOI 10.1109/ICWS49710.2020.00026
   Wang S, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P523, DOI 10.1145/3106237.3106258
   Wang Z, 2021, PROC INT CONF SOFTW, P397, DOI 10.1109/ICSE43902.2021.00046
   Woolson RF, 2007, Wiley encyclopedia of clinical trials, P1, DOI [10.1002/9780471462422.eoct979, DOI 10.1002/9780471462422.EOCT979]
   Xiao L, 2017, 2017 16TH IEEE/ACIS INTERNATIONAL CONFERENCE ON COMPUTER AND INFORMATION SCIENCE (ICIS 2017), P815
   Yang L, 2021, PROC INT CONF SOFTW, P1448, DOI 10.1109/ICSE43902.2021.00130
   Yao KD, 2020, EMPIR SOFTW ENG, V25, P488, DOI 10.1007/s10664-019-09748-z
   Yoo S, 2012, SOFTW TEST VERIF REL, V22, P67, DOI [10.1002/stv.430, 10.1002/stvr.430]
   Yoo S, 2010, J SYST SOFTWARE, V83, P689, DOI 10.1016/j.jss.2009.11.706
   Yuan D, 2010, ASPLOS XV: FIFTEENTH INTERNATIONAL CONFERENCE ON ARCHITECTURAL SUPPORT FOR PROGRAMMING LANGUAGES AND OPERATING SYSTEMS, P143
   Zhang LM, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P192, DOI 10.1109/ICSE.2013.6606565
   Zhang X, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P807, DOI 10.1145/3338906.3338931
   Zhao X, 2017, PROCEEDINGS OF THE TWENTY-SIXTH ACM SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES (SOSP '17), P565, DOI 10.1145/3132747.3132778
   Zhou B, 2013, IEEE T COMPUT, V62, P186, DOI 10.1109/TC.2011.208
   Zhou JY, 2022, ACM T SOFTW ENG METH, V31, DOI 10.1145/3471906
   Zhou X, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P683, DOI 10.1145/3338906.3338961
   Zhu JM, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE (ICSE-SEIP 2019), P121, DOI 10.1109/ICSE-SEIP.2019.00021
   Zhu JM, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P415, DOI 10.1109/ICSE.2015.60
NR 129
TC 5
Z9 5
U1 8
U2 11
PU ASSOC COMPUTING MACHINERY
PI NEW YORK
PA 1601 Broadway, 10th Floor, NEW YORK, NY USA
SN 1049-331X
EI 1557-7392
J9 ACM T SOFTW ENG METH
JI ACM Trans. Softw. Eng. Methodol.
PD JUL
PY 2023
VL 32
IS 3
AR 72
DI 10.1145/3569932
PG 32
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA I4NV8
UT WOS:001002573400017
OA Green Published
DA 2024-07-18
ER

PT J
AU Han, LP
   Ali, S
   Yue, T
   Arrieta, A
   Arratibel, M
AF Han, Liping
   Ali, Shaukat
   Yue, Tao
   Arrieta, Aitor
   Arratibel, Maite
TI Uncertainty-Aware Robustness Assessment of Industrial Elevator Systems
SO ACM TRANSACTIONS ON SOFTWARE ENGINEERING AND METHODOLOGY
LA English
DT Article
DE Uncertainty-aware robustness assessment; empirical study
ID TIME
AB Industrial elevator systems are commonly used software systems in our daily lives, which operate in uncertain environments such as unpredictable passenger traffic, uncertain passenger attributes and behaviors, and hardware delays. Understanding and assessing the robustness of such systems under various uncertainties enable system designers to reason about uncertainties, especially those leading to low system robustness, and consequently improve their designs and implementations in terms of handling uncertainties. To this end, we present a comprehensive empirical study conducted with industrial elevator systems provided by our industrial partner Orona, which focuses on assessing the robustness of a dispatcher-that is, a software component responsible for elevators' optimal scheduling. In total, we studied 90 industrial dispatchers in our empirical study. Based on the experience gained from the study, we derived an uncertainty-aware robustness assessment method (named UncerRobua) comprising a set of guidelines on how to conduct the robustness assessment and a newly proposed ranking algorithm, for supporting the robustness assessment of industrial elevator systems against uncertainties.
C1 [Han, Liping] Nanjing Univ Aeronaut & Astronaut, Nanjing 210016, Peoples R China.
   [Han, Liping; Ali, Shaukat; Yue, Tao] Simula Res Lab, Kristian Augusts Gate 23, N-0164 Oslo, Norway.
   [Arrieta, Aitor] Mondragon Univ, Goiru 2, Arrasate Mondragon 20500, Spain.
   [Arratibel, Maite] Orona, Hernani 20120, Spain.
C3 Nanjing University of Aeronautics & Astronautics; Mondragon
   Unibertsitatea
RP Yue, T (corresponding author), Simula Res Lab, Kristian Augusts Gate 23, N-0164 Oslo, Norway.
EM liping@simula.no; shaukat@simula.no; tao@simula.no;
   aarrieta@mondragon.edu; marratibel@orona-group.com
RI Han, Liping/HTQ-5725-2023; yue, tao/H-6783-2013
OI Han, Liping/0000-0002-1676-8263; Yue, Tao/0000-0003-3262-5577; Arrieta,
   Aitor/0000-0001-7507-5080; Ali, Shaukat/0000-0002-9979-3519
FU Adeptness project - European Union; Department of Education,
   Universities and Research of the Basque Country [IT1519-22]
FX This work was supported by the Adeptness project funded by the European
   Union's Horizon 2020 programme under grant agreement 871319. A. Arrieta
   is part of the Software and Systems Engineering research group of
   Mondragon Unibertsitatea (IT1519-22), supported by the Department of
   Education, Universities and Research of the Basque Country.
CR Agrawal H., 1989, Design of mutant operators for the C programming language
   Al-Sharif L, 2016, BUILD SERV ENG RES T, V37, P597, DOI 10.1177/0143624416652182
   Al-Sharif Lutfi, 2013, Elevator World, V6, P110
   Ali S, 2017, ADV COMPUT, V107, P23, DOI 10.1016/bs.adcom.2017.06.001
   Arrieta A, 2021, 2021 IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATION OF SOFTWARE TEST (AST 2021), P30, DOI 10.1109/AST52587.2021.00012
   Ayerdi J, 2020, PROC INT SYMP SOFTW, P104, DOI 10.1109/ISSRE5003.2020.00019
   Bapin Y, 2020, ENERGIES, V13, DOI 10.3390/en13236161
   Barney G., 2010, Transportation Systems in Buildings
   Camilli M, 2021, IEEE INT CONF SOFTW, P71, DOI 10.1109/ICST49551.2021.00019
   Camilli M, 2018, PROC INT SYMP SOFTW, P36, DOI 10.1109/ISSRE.2018.00015
   Catak FO, 2022, ACM T SOFTW ENG METH, V31, DOI 10.1145/3527451
   Chakkrit Tantithamthavorn, 2019, NONP SCOTT KNOTT ESD
   Chatterjee A, 2020, INT CONF ELECTRO INF, P568, DOI [10.1109/EIT48999.2020.9208273, 10.1109/eit48999.2020.9208273]
   Chen CD, 2020, CASE STUD THERM ENG, V19, DOI 10.1016/j.csite.2020.100616
   CLIFF N, 1993, PSYCHOL BULL, V114, P494, DOI 10.1037/0033-2909.114.3.494
   De Jong Jeroen Leonard, 2012, THESIS DELFT U TECHN
   Ding N, 2017, FIRE TECHNOL, V53, P29, DOI 10.1007/s10694-016-0597-z
   Fernández J, 2014, IEEE T IND ELECTRON, V61, P4912, DOI 10.1109/TIE.2013.2289867
   Fernández J, 2013, INT J INF TECH DECIS, V12, P591, DOI 10.1142/S0219622013500223
   Nicolas CF, 2016, 2016 IEEE 19TH INTERNATIONAL SYMPOSIUM ON REAL-TIME DISTRIBUTED COMPUTING (ISORC 2016), P53, DOI 10.1109/ISORC.2016.17
   Friedman N, 1997, MACH LEARN, V29, P131, DOI 10.1023/A:1007465528199
   Giagopoulos D, 2018, ENG STRUCT, V160, P473, DOI 10.1016/j.engstruct.2018.01.018
   Han Liping, 2022, P 30 ACM JOINT EUROP
   Hautojrvi P., 1979, Experimentation in software engineering, V1ST, DOI [10.1007/978-3-642-81316-0, 10.1007/978-3-642-29044-2., DOI 10.1007/978-3-642-29044-2]
   Herbold S, 2017, IEEE T SOFTWARE ENG, V43, P1091, DOI 10.1109/TSE.2017.2748129
   Hermanussen M, 2001, INT J OBESITY, V25, P1550, DOI 10.1038/sj.ijo.0801715
   Jamaludin J, 2009, ENG APPL ARTIF INTEL, V22, P1167, DOI 10.1016/j.engappai.2009.04.006
   Kirunda BE, 2015, BMC PUBLIC HEALTH, V15, DOI 10.1186/s12889-015-2506-7
   Kreye ME, 2018, IND MARKET MANAG, V75, P90, DOI 10.1016/j.indmarman.2018.04.014
   Lee J, 2022, Arxiv, DOI arXiv:2007.10490
   Lu C., 2022, IEEE T SOFTWARE ENG, P1
   Ma T, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-021-09941-z
   Ma T, 2019, SOFTW SYST MODEL, V18, P2843, DOI 10.1007/s10270-018-00703-y
   Ma T, 2019, SOFTWARE QUAL J, V27, P615, DOI 10.1007/s11219-018-9437-3
   Ma XL, 2021, WEAR, V477, DOI 10.1016/j.wear.2021.203872
   Marfo P, 2019, HELIYON, V5, DOI 10.1016/j.heliyon.2019.e01838
   Mathews T. A. K., 2007, J INDIAN I ENG, V88, P1
   Menghi C, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P27, DOI 10.1145/3338906.3338920
   Peng QF, 2018, ADV MATER SCI ENG, V2018, DOI 10.1155/2018/8047490
   Romano J., 2006, ANN M FLORIDA ASS IN
   Runeson Per, 2012, Case study research in software engineering: Guidelines and examples
   SCOTT AJ, 1974, BIOMETRICS, V30, P507, DOI 10.2307/2529204
   Shin SY, 2018, ISSTA'18: PROCEEDINGS OF THE 27TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P49, DOI 10.1145/3213846.3213852
   Skog I, 2017, IEEE SENS J, V17, P5198, DOI 10.1109/JSEN.2017.2719630
   Sorsa J, 2018, OPTIM LETT, V12, P171, DOI 10.1007/s11590-017-1130-0
   Tantithamthavorn C, 2019, IEEE T SOFTWARE ENG, V45, P683, DOI 10.1109/TSE.2018.2794977
   Tantithamthavorn C, 2017, IEEE T SOFTWARE ENG, V43, P1, DOI 10.1109/TSE.2016.2584050
   Tukia T, 2018, J BUILD ENG, V18, P210, DOI 10.1016/j.jobe.2018.03.008
   Tuuli Kauppala, 2021, THESIS HELSINGFORS U
   Ul Haq F, 2022, PROC INT CONF SOFTW, P811, DOI 10.1145/3510003.3510188
   Walkinshaw N, 2017, IEEE INT CONF SOFTW, P253, DOI 10.1109/ICST.2017.30
   Wang X, 2017, EARTHQ ENG STRUCT D, V46, P391, DOI 10.1002/eqe.2793
   Wang XL, 2020, 2020 INTERNATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE AND COMPUTER ENGINEERING (ICAICE 2020), P260, DOI 10.1109/ICAICE51518.2020.00056
   Wolszczak P, 2019, MECCANICA, V54, P1057, DOI 10.1007/s11012-019-00992-7
   Wu AZ, 2020, J THERM STRESSES, V43, P1467, DOI 10.1080/01495739.2020.1820921
   Xu Qinghua, 2022, P 30 ACM JOINTEUROPE
   Yan Dong Mei, 2014, Applied Mechanics and Materials, V602, P874
   Yoo OH, 2013, J ASIAN ARCHIT BUILD, V12, P149, DOI 10.3130/jaabe.12.149
   Zhang HH, 2021, ACM T SOFTW ENG METH, V30, DOI 10.1145/3408301
   Zhang JL, 2014, BUILD SERV ENG RES T, V35, P543, DOI 10.1177/0143624414526723
   Zhang M, 2019, J SYST SOFTWARE, V153, P1, DOI 10.1016/j.jss.2019.03.011
   Zhang M, 2019, SOFTW SYST MODEL, V18, P1379, DOI 10.1007/s10270-017-0609-6
   Zhang M, 2018, J SYST SOFTWARE, V144, P573, DOI 10.1016/j.jss.2018.06.075
   Zhou S, 2021, WATER RESOUR MANAG, V35, P3915, DOI 10.1007/s11269-021-02883-7
NR 64
TC 3
Z9 3
U1 5
U2 8
PU ASSOC COMPUTING MACHINERY
PI NEW YORK
PA 1601 Broadway, 10th Floor, NEW YORK, NY USA
SN 1049-331X
EI 1557-7392
J9 ACM T SOFTW ENG METH
JI ACM Trans. Softw. Eng. Methodol.
PD JUL
PY 2023
VL 32
IS 4
AR 95
DI 10.1145/3576041
PG 51
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA L0SO0
UT WOS:001020441100014
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Li, MZ
   Cao, JL
   Tian, YQ
   Li, TO
   Wen, M
   Cheung, SC
AF Li, Meiziniu
   Cao, Jialun
   Tian, Yongqiang
   Li, Tsz On
   Wen, Ming
   Cheung, Shing-Chi
TI COMET: Coverage-guided Model Generation For Deep Learning Library
   Testing
SO ACM TRANSACTIONS ON SOFTWARE ENGINEERING AND METHODOLOGY
LA English
DT Article
DE Deep learning testing; library testing; model generation; model
   diversity
AB Recent deep learning (DL) applications are mostly built on top of DL libraries. The quality assurance of these libraries is critical to the dependable deployment of DL applications. Techniques have been proposed to generate various DL models and apply them to test these libraries. However, their test effectiveness is constrained by the diversity of layer API calls in their generated DL models. Our study reveals that these techniques can cover at most 34.1% layer inputs, 25.9% layer parameter values, and 15.6% layer sequences. As a result, we find that many bugs arising from specific layer API calls (i.e., specific layer inputs, parameter values, or layer sequences) can be missed by existing techniques.
   Because of this limitation, we propose COMET to effectively generate DL models with diverse layer API calls for DL library testing. COMET: (1) designs a set of mutation operators and a coverage-based search algorithm to diversify layer inputs, layer parameter values, and layer sequences in DL models. (2) proposes a model synthesis method to boost the test efficiency without compromising the layer API call diversity. Our evaluation result shows that COMET outperforms baselines by covering twice as many layer inputs (69.7% vs. 34.1%), layer parameter values (50.2% vs. 25.9%), and layer sequences (39.0% vs. 15.6%) as those by the stateof-the-art. Moreover, COMET covers 3.4% more library branches than those by existing techniques. Finally, COMET detects 32 new bugs in the latest version of eight popular DL libraries, including TensorFlow and MXNet, with 21 of them confirmed by DL library developers and seven of those confirmed bugs have been fixed by developers.
C1 [Li, Meiziniu; Cao, Jialun; Li, Tsz On; Cheung, Shing-Chi] Hong Kong Univ Sci & Technol, Hong Kong, Peoples R China.
   [Cao, Jialun; Cheung, Shing-Chi] Guangzhou HKUST Fok Ying Tung Res Inst, Guangzhou, Peoples R China.
   [Tian, Yongqiang] Univ Waterloo, Waterloo, ON, Canada.
   [Tian, Yongqiang] Hong Kong Univ Sci & Technol, Hong Kong, Peoples R China.
   [Wen, Ming] Huazhong Univ Sci & Technol, Wuhan, Peoples R China.
C3 Hong Kong University of Science & Technology; Hong Kong University of
   Science & Technology; University of Waterloo; Hong Kong University of
   Science & Technology; Huazhong University of Science & Technology
RP Li, MZ (corresponding author), Hong Kong Univ Sci & Technol, Hong Kong, Peoples R China.
RI Zhang, yuxuan/JXM-9935-2024; han, yang/KHX-8947-2024; li,
   tong/JYO-7530-2024; Wen, Ming/AEJ-8029-2022; Wang, Weiyi/JZC-7841-2024;
   li, fang/KDO-8841-2024; Liu, min/JXW-8493-2024; tong, li/KDO-7821-2024;
   lin, lin/KCZ-0185-2024; lin, lin/KFB-9548-2024; Yang, han/KFS-2671-2024;
   Cheung, Shing Chi/U-5882-2018
OI TIAN, Yongqiang/0000-0003-1644-2965; Cheung, Shing
   Chi/0000-0002-3508-7172; Cao, Jialun/0000-0003-4892-6294
FU National Natural Science Foundation of China [61932021, 62002125];
   National Key Research and Development Program of China [2019YFE0198100];
   Hong Kong RGC/GRF [16205722]; Hong Kong ITF [MHP/055/19]; MSRA
   Collaborative Research Grant
FX This work was supported by the National Natural Science Foundation of
   China (Grant Nos. 61932021, 62002125), the National Key Research and
   Development Program of China (Grant No. 2019YFE0198100), the Hong Kong
   RGC/GRF (Grant No. 16205722), the Hong Kong ITF (Grant No. MHP/055/19),
   and the MSRA Collaborative Research Grant.
CR Abadi M, 2016, PROCEEDINGS OF OSDI'16: 12TH USENIX SYMPOSIUM ON OPERATING SYSTEMS DESIGN AND IMPLEMENTATION, P265
   Ammann Paul, 2008, Introduction to software testing, V1st
   Ardakani AA, 2020, COMPUT BIOL MED, V121, DOI 10.1016/j.compbiomed.2020.103795
   Bhattacharya S, 2021, SUSTAIN CITIES SOC, V65, DOI 10.1016/j.scs.2020.102589
   Chen CY, 2015, IEEE I CONF COMP VIS, P2722, DOI 10.1109/ICCV.2015.312
   Chen JJ, 2022, Arxiv, DOI [arXiv:2203.04026, 10.48550/ARXIV.2203.04026, DOI 10.48550/ARXIV.2203.04026]
   Chen TQ, 2015, Arxiv, DOI arXiv:1512.01274
   Chen YT, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P793, DOI 10.1145/2786805.2786835
   Chen YT, 2016, ACM SIGPLAN NOTICES, V51, P85, DOI [10.1145/2980983.2908095, 10.1145/2908080.2908095]
   Chollet F, 2015, KERAS
   Das R, 2018, IEEE ICC
   Ferdowsi A, 2019, IEEE T COMMUN, V67, P1371, DOI 10.1109/TCOMM.2018.2878025
   Fraser Gordon, 2011, PROC 19 ACM SIGSOFT, P416, DOI 10.1145/2025113.2025179
   github, BUG REP CONV3DTRANSP
   github, OP FUS CONV2D MUL OP
   github, BUG REP INC PADD
   github, BUG REP DEPTHWISECON
   github, KERN SIZ INFL PADD K
   Gu JZ, 2022, PROC INT CONF SOFTW, P1418, DOI 10.1145/3510003.3510092
   Guo QY, 2020, IEEE INT CONF AUTOM, P486, DOI 10.1145/3324884.3416571
   He KM, 2016, LECT NOTES COMPUT SC, V9908, P630, DOI 10.1007/978-3-319-46493-0_38
   Humbatova N, 2021, ISSTA '21: PROCEEDINGS OF THE 30TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P67, DOI 10.1145/3460319.3464825
   Pham HV, 2019, PROC INT CONF SOFTW, P1027, DOI 10.1109/ICSE.2019.00107
   Jia L, 2021, PROC IEEE INT CONF S, P47, DOI 10.1109/ICSME52107.2021.00011
   Jia L, 2021, J SYST SOFTWARE, V177, DOI 10.1016/j.jss.2021.110935
   Jia L, 2020, LECT NOTES COMPUT SC, V12112, P604, DOI 10.1007/978-3-030-59410-7_40
   Keras Apache MXNet, KER AP MXNET
   Krizhevsky A., 2009, LEARNING MULTIPLE LA
   Krizhevsky A, 2017, COMMUN ACM, V60, P84, DOI 10.1145/3065386
   Kuhn DR, 2004, IEEE T SOFTWARE ENG, V30, P418, DOI 10.1109/TSE.2004.24
   Lecun Y, 1998, P IEEE, V86, P2278, DOI 10.1109/5.726791
   Litjens G, 2017, MED IMAGE ANAL, V42, P60, DOI 10.1016/j.media.2017.07.005
   Luo WS, 2021, PROC INT CONF SOFTW, P288, DOI 10.1109/ICSE43902.2021.00037
   Ma L, 2018, PROC INT SYMP SOFTW, P100, DOI 10.1109/ISSRE.2018.00021
   Nejadgholi M, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P797, DOI 10.1109/ASE.2019.00078
   Odena A, 2019, PR MACH LEARN RES, V97
   Onnx, OP STAND MACH LEARN
   ONNX Runtime, OPT ACC MACH LEARN I
   Onnx2pytorch, ONNX PYTORCH
   Pacheco Carlos, 2007, COMPANION 22 ACM SIG, P815, DOI DOI 10.1145/1297846.1297902
   Paszke A, 2019, ADV NEUR IN, V32
   Pei KX, 2019, COMMUN ACM, V62, P137, DOI 10.1145/3361566
   Sallab Ahmad EL, 2017, DEEP REINFORCEMENT L, P70
   Shalev-Shwartz S, 2016, ARXIV161003295
   Shen QC, 2021, PROCEEDINGS OF THE 29TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '21), P968, DOI 10.1145/3468264.3468591
   Szegedy C, 2015, PROC CVPR IEEE, P1, DOI 10.1109/CVPR.2015.7298594
   Tambon F, 2023, Arxiv, DOI [arXiv:2112.13314, 10.48550/ARXIV.2112.13314, DOI 10.48550/ARXIV.2112.13314]
   tensorflow, TENSORFLOW PADD STRA
   TensorFlow ONNX, TF2ONNX CONV TENSORF
   Wang JY, 2019, PROC INT CONF SOFTW, P1245, DOI 10.1109/ICSE.2019.00126
   Wang R, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P619, DOI 10.1145/2950290.2950355
   Wang S, 2021, PROC INT CONF SOFTW, P1548, DOI 10.1109/ICSE43902.2021.00138
   Wang Z, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P788, DOI 10.1145/3368089.3409761
   Wardat M, 2021, PROC INT CONF SOFTW, P251, DOI 10.1109/ICSE43902.2021.00034
   Wei AJ, 2022, PROC INT CONF SOFTW, P995, DOI 10.1145/3510003.3510041
   Xie DN, 2022, PROCEEDINGS OF THE 31ST ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, ISSTA 2022, P176, DOI 10.1145/3533767.3534220
   Yang YL, 2022, INFORM SOFTWARE TECH, V151, DOI 10.1016/j.infsof.2022.107004
   Zhang MS, 2018, IEEE INT CONF AUTOM, P132, DOI 10.1145/3238147.3238187
   Zhang XF, 2021, ISSTA '21: PROCEEDINGS OF THE 30TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P400, DOI 10.1145/3460319.3464843
   Zhang YH, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P826, DOI 10.1145/3368089.3409720
NR 60
TC 2
Z9 2
U1 1
U2 6
PU ASSOC COMPUTING MACHINERY
PI NEW YORK
PA 1601 Broadway, 10th Floor, NEW YORK, NY USA
SN 1049-331X
EI 1557-7392
J9 ACM T SOFTW ENG METH
JI ACM Trans. Softw. Eng. Methodol.
PD JUL
PY 2023
VL 32
IS 5
AR 127
DI 10.1145/3583566
PG 34
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA P9SM2
UT WOS:001054005300020
OA Green Submitted, Green Published
DA 2024-07-18
ER

PT J
AU Lopez, T
   Sharp, H
   Bandara, A
   Tun, T
   Levine, M
   Nuseibeh, B
AF Lopez, Tamara
   Sharp, Helen
   Bandara, Arosha
   Tun, Thein
   Levine, Mark
   Nuseibeh, Bashar
TI Security Responses in Software Development
SO ACM TRANSACTIONS ON SOFTWARE ENGINEERING AND METHODOLOGY
LA English
DT Article
DE Security; developers; software engineering
ID EMERGENCE; NEED
AB The pressure on software developers to produce secure software has never been greater. But what does security look like in environments that do not produce security-critical software? In answer to this question, this multi-sited ethnographic study characterizes security episodes and identifies five typical behaviors in software development. Using theory drawn from information security and motivation research in software engineering, this article characterizes key ways in which individual developers form security responses to meet the demands of particular circumstances, providing a framework managers and teams can use to recognize, understand, and alter security activity in their environments.
C1 [Lopez, Tamara; Sharp, Helen; Bandara, Arosha; Tun, Thein; Nuseibeh, Bashar] Open Univ, Sch Comp & Commun, Milton Keynes, England.
   [Levine, Mark] Univ Lancaster, Dept Psychol, Lancaster, England.
   [Nuseibeh, Bashar] Lero Irish Software Res Ctr, Limerick, Ireland.
   [Lopez, Tamara; Sharp, Helen; Bandara, Arosha; Tun, Thein; Nuseibeh, Bashar] Open Univ, Sch Comp & Commun, Walton Hall, Milton Keynes MK7 6AA, England.
   [Levine, Mark] Univ Lancaster, Dept Psychol, Lancaster LA1 4YW, England.
   [Nuseibeh, Bashar] Univ Limerick, Lero Irish Software Res Ctr, Limerick V94 NYD3, Ireland.
C3 Open University - UK; Lancaster University; University of Limerick; Open
   University - UK; Lancaster University; University of Limerick
RP Lopez, T (corresponding author), Open Univ, Sch Comp & Commun, Walton Hall, Milton Keynes MK7 6AA, England.
EM tamara.lopez@open.ac.uk; helen.sharp@open.ac.uk;
   arosha.bandara@open.ac.uk; thein.tun@open.ac.uk;
   mark.levine@lancaster.ac.uk; bashar.nuseibeh@open.ac.uk
RI Bandara, Arosha K./AAB-8229-2021
OI Bandara, Arosha K./0000-0001-8974-0555; Lopez,
   Tamara/0000-0001-8766-1896; Sharp, Helen/0000-0003-4376-1734; Nuseibeh,
   Bashar/0000-0002-3476-053X
FU UKRI/EPSRC [EP/R013144/1, EP/T017465/1]; SFI [13/RC/2094_P2]; UK NCSC
FX This work greatly benefited from the expertise and insight given by
   Charles Weir and Hannah Cooper and was supported by the UK NCSC,
   UKRI/EPSRC (EP/R013144/1, EP/T017465/1), and SFI (13/RC/2094_P2).
CR Acar Y, 2017, 2017 IEEE CYBERSECURITY DEVELOPMENT (SECDEV), P22, DOI 10.1109/SecDev.2017.17
   Acar Y, 2016, 2016 IEEE CYBERSECURITY DEVELOPMENT (IEEE SECDEV 2016), P3, DOI [10.1109/SecDev.2016.20, 10.1109/SecDev.2016.013]
   Adams A, 1999, COMMUN ACM, V42, P41, DOI 10.1145/322796.322806
   Amabile TM, 2007, HARVARD BUS REV, V85, P72
   Anderson Bob., 1997, The Encyclopedia of Microcomputers, P159
   Anderson R., 2008, Security engineering, V2nd
   Anderson R. J, 2020, Security Engineering: A Guide To Building Dependable Distributed Systems, V3rd
   Angela Sasse M., 2019, CYBOK CYBERSECURITY
   Angrosino Michael., 2007, DOING ETHNOGRAPHIC O
   [Anonymous], 2005, Br. J. Polit. Int. Relat.
   [Anonymous], MICR SEC DEV LIF
   Assal H, 2018, PROCEEDINGS OF THE FOURTEENTH SYMPOSIUM ON USABLE PRIVACY AND SECURITY, P281
   Becker Ingolf, 2017, PROC USEC
   Bednar K, 2019, INFORM SOC, V35, P122, DOI 10.1080/01972243.2019.1583296
   Berghel H, 2017, COMPUTER, V50, P72, DOI 10.1109/MC.2017.4451227
   Beyer M., 2015, Awareness is Only The First Step: AFramework for Progressive Engagement of Staff in Cyber Security
   Bingham AJ, 2021, TEACH COLL REC, V123
   CharlesWeir Awais Rashid, 2016, P 12 S USABLE PRIVAC
   CISA, 2021, NAT CYB AW SYST WEEK
   Coles-Kemp L., 2018, Practising creative securities
   Coles-Kemp L, 2017, LECT NOTES COMPUT SC, V10292, P464, DOI 10.1007/978-3-319-58460-7_32
   Danhieux Pieter, 2018, ARE DEV YOUR 1 LINE
   Easterbrook S., 2008, GUIDE ADV EMPIRICAL, P285, DOI [DOI 10.1007/978-1-84800-044-5_11, DOI 10.1007/978-1-84800-044-511]
   Eraut M., 2004, Studies in Continuing Education, V26, P247, DOI [https://doi.org/10.1080/158037042000225245, DOI 10.1080/158037042000225245]
   EtienneWenger Beverly Traynor, 2011, PROMOTING ASSESSING, P1
   Falzon M., 2016, Multi-sited ethnography: Theory, praxis and locality in contemporary research
   Fetterman D.M., 2009, Ethnography: Step by step, V3rd
   Fischer F, 2017, P IEEE S SECUR PRIV, P121, DOI 10.1109/SP.2017.31
   França C, 2020, IEEE T SOFTWARE ENG, V46, P118, DOI 10.1109/TSE.2018.2842201
   Furnell S, 2009, COMPUT FRAUD SECUR, P5, DOI 10.1016/S1361-3723(09)70019-3
   Gollman Dieter, 2019, CYBOK CYBERSECURITY
   Green M, 2016, IEEE SECUR PRIV, V14, P40, DOI 10.1109/MSP.2016.111
   Hadar I, 2018, EMPIR SOFTW ENG, V23, P259, DOI 10.1007/s10664-017-9517-1
   Hammersley M., 2019, ETHNOGRAPHY PRINCIPL, DOI DOI 10.4324/9781315146027
   KIRLAPPOS I., 2014, P WORKSH US SEC
   Lopez T, 2020, IEEE SOFTWARE, V37, P25, DOI 10.1109/MS.2019.2945300
   Lopez T, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN SOCIETY (ICSE-SEIS 2019), P31, DOI 10.1109/ICSE-SEIS.2019.00012
   MARCUS GE, 1995, ANNU REV ANTHROPOL, V24, P95, DOI 10.1146/annurev.an.24.100195.000523
   Marcus GeorgeE., 2012, Multi-sited ethnography, P24
   Mazurek Michelle L., 2019, EMPIR EVAL SEC DEVEL, V9, P12, DOI [10.4230/DagRep.9.6.i, DOI 10.4230/DAGREP.9.6.I]
   Mokhberi A., 2021, P EUR S US SEC, P59
   Nadi S, 2016, PROC INT CONF SOFTW, P935, DOI 10.1145/2884781.2884790
   Naiakshina A, 2017, CCS'17: PROCEEDINGS OF THE 2017 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P311, DOI 10.1145/3133956.3134082
   Naiakshina Alena, 2018, P ACM CHI C HUMAN FA, P311
   Oliveira D., 2014, P 30 ANN COMP SEC AP, P296, DOI [10.1145/2664243.2664254, DOI 10.1145/2664243.2664254]
   Oliveira DS, 2018, PROCEEDINGS OF THE FOURTEENTH SYMPOSIUM ON USABLE PRIVACY AND SECURITY, P315
   Palombo H, 2020, PROCEEDINGS OF THE SIXTEENTH SYMPOSIUM ON USABLE PRIVACY AND SECURITY (SOUPS 2020), P205
   Pfleeger SL, 2014, J HOMEL SECUR EMERG, V11, P489, DOI 10.1515/jhsem-2014-0035
   Poller A, 2017, CSCW'17: PROCEEDINGS OF THE 2017 ACM CONFERENCE ON COMPUTER SUPPORTED COOPERATIVE WORK AND SOCIAL COMPUTING, P2489, DOI 10.1145/2998181.2998191
   Posey C, 2014, INFORM MANAGE-AMSTER, V51, P551, DOI 10.1016/j.im.2014.03.009
   Rauf Irum, 2021, ACM T SOFTW ENG METH, V31, P1
   Reason J., 1990, Human error, DOI [10.1017/CBO9781139062367, DOI 10.1017/CBO9781139062367]
   Robinson H, 2005, AGILE 2005, PROCEEDINGS, P49, DOI 10.1109/ADC.2005.36
   Robinson H, 2009, BEHAV INFORM TECHNOL, V28, P211, DOI 10.1080/01449290701494548
   Robson C., 2016, REAL WORLD RES RESOU
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Schein E.H., 1996, Academy of Management Executive, V10, P80, DOI DOI 10.5465/AME.1996.3145321
   Schneier Bruce, 2008, SCHNEIER ON SECURITY
   Sharp H, 2000, IEEE SOFTWARE, V17, P40, DOI 10.1109/52.819967
   Sharp H, 2016, IEEE T SOFTWARE ENG, V42, P786, DOI 10.1109/TSE.2016.2519887
   Sharp H, 2009, INFORM SOFTWARE TECH, V51, P219, DOI 10.1016/j.infsof.2008.05.009
   Shostack A., 2014, Threat Modeling: Designing for Security
   Small ML, 2009, ETHNOGRAPHY, V10, P5, DOI 10.1177/1466138108099586
   Smith J, 2020, PROCEEDINGS OF THE SIXTEENTH SYMPOSIUM ON USABLE PRIVACY AND SECURITY (SOUPS 2020), P221
   Steffens M, 2019, 26TH ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2019), DOI 10.14722/ndss.2019.23009
   Tahaei M, 2019, 2019 4TH IEEE EUROPEAN SYMPOSIUM ON SECURITY AND PRIVACY WORKSHOPS (EUROS&PW), P129, DOI 10.1109/EuroSPW.2019.00021
   Tondel Inger Anne, 2020, P 14 ACMIEEE INT S E, P1
   Tuladhar A, 2021, PROCEEDINGS OF THE SEVENTEENTH SYMPOSIUM ON USABLE PRIVACY AND SECURITY (SOUPS 2021), P617
   van der Linden D, 2022, IEEE T SOFTWARE ENG, V48, P364, DOI 10.1109/TSE.2020.2981317
   van der Stock A., 2017, OWASP TOP 10 2017 10
   Van Maanen J., 2011, Tales of the field: on writing ethnography, V2nd, DOI DOI 10.7208/CHICAGO/9780226849638.001.0001
   Weir C, 2021, 2021 IEEE/ACM 43RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE (ICSE-SEIP 2021), P21, DOI 10.1109/ICSE-SEIP52600.2021.00011
   Witschey Jim, 2014, Proceedings of the ACM Workshop on Security Information Workers, P23
   Xiao Shundan, 2014, P 17 ACM C COMPUTER, P1095, DOI DOI 10.1145/2531602.2531722
NR 74
TC 0
Z9 0
U1 4
U2 7
PU ASSOC COMPUTING MACHINERY
PI NEW YORK
PA 1601 Broadway, 10th Floor, NEW YORK, NY USA
SN 1049-331X
EI 1557-7392
J9 ACM T SOFTW ENG METH
JI ACM Trans. Softw. Eng. Methodol.
PD JUL
PY 2023
VL 32
IS 3
AR 64
DI 10.1145/3563211
PG 29
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA I4NV8
UT WOS:001002573400009
OA Green Accepted, Green Submitted
DA 2024-07-18
ER

PT J
AU Tian, YQ
   Zhang, WQ
   Wen, M
   Cheung, SC
   Sun, CN
   Ma, SQ
   Jiang, Y
AF Tian, Yongqiang
   Zhang, Wuqi
   Wen, Ming
   Cheung, Shing-Chi
   Sun, Chengnian
   Ma, Shiqing
   Jiang, Yu
TI Finding Deviated Behaviors of the Compressed DNN Models for Image
   Classifications
SO ACM TRANSACTIONS ON SOFTWARE ENGINEERING AND METHODOLOGY
LA English
DT Article
DE Model dissemination; model compression; neural networks; image
   classification models
AB Model compression can significantly reduce the sizes of deep neural network (DNN) models and thus facilitate the dissemination of sophisticated, sizable DNN models, especially for deployment on mobile or embedded devices. However, the prediction results of compressed models may deviate from those of their original models. To help developers thoroughly understand the impact of model compression, it is essential to test these models to find those deviated behaviors before dissemination. However, this is a non-trivial task, because the architectures and gradients of compressed models are usually not available.
   To this end, we propose Dflare, a novel, search-based, black-box testing technique to automatically find triggering inputs that result in deviated behaviors in image classification tasks. Dflare iteratively applies a series of mutation operations to a given seed image until a triggering input is found. For better efficacy and efficiency, Dflare models the search problem as Markov Chains and leverages the Metropolis-Hasting algorithm to guide the selection ofmutation operators in each iteration. Further, Dflare utilizes a novel fitness function to prioritize the mutated inputs that either cause large differences between two models' outputs or trigger previously unobservedmodels' probability vectors. We evaluated Dflare on 21 compressed models for image classification tasks with three datasets. The results show that Dflare not only constantly outperforms the baseline in terms of efficacy but also significantly improves the efficiency: Dflare is 17.84x-446.06x as fast as the baseline in terms of time; the number of queries required by Dflare to find one triggering input is only 0.186-1.937% of those issued by the baseline. We also demonstrated that the triggering inputs found by Dflare can be used to repair up to 48.48% deviated behaviors in image classification tasks and further decrease the effectiveness of Dflare on the repaired models.
C1 [Tian, Yongqiang] Univ Waterloo, 200 Univ Ave West, Waterloo, ON N2L6P6, Canada.
   [Tian, Yongqiang; Zhang, Wuqi; Cheung, Shing-Chi] Hong Kong Univ Sci & Technol, Kowloon, Clear Water Bay, Hong Kong, Peoples R China.
   [Wen, Ming] Huazhong Univ Sci & Technol, Luoyu Rd 1037, Wuhan 430074, Hubei, Peoples R China.
   [Sun, Chengnian] Univ Waterloo, 200 Univ Ave West, Waterloo, ON N2L6P6, Canada.
   [Ma, Shiqing] Rutgers State Univ, 110 Frelinghuysen Rd, Piscataway, NJ 08854 USA.
   [Jiang, Yu] Tsinghua Univ, Sch Software, Beijing 100084, Peoples R China.
C3 University of Waterloo; Hong Kong University of Science & Technology;
   Huazhong University of Science & Technology; University of Waterloo;
   Rutgers University System; Rutgers University New Brunswick; Tsinghua
   University
RP Cheung, SC (corresponding author), Hong Kong Univ Sci & Technol, Kowloon, Clear Water Bay, Hong Kong, Peoples R China.; Sun, CN (corresponding author), Univ Waterloo, 200 Univ Ave West, Waterloo, ON N2L6P6, Canada.
EM yongqiang.tian@uwaterloo.ca; wzhangcb@cse.ust.hk; mwenaa@hust.edu.cn;
   scc@cse.ust.hk; cnsun@uwaterloo.ca; shiqing.ma@rutgers.edu;
   jiangyu198964@126.com
RI Wang, Weiyi/JZC-7841-2024; Zhang, yuxuan/JXM-9935-2024; Yang,
   han/KFS-2671-2024; li, fang/KDO-8841-2024; Wen, Ming/AEJ-8029-2022; lin,
   lin/KCZ-0185-2024; tong, li/KDO-7821-2024; han, yang/KHX-8947-2024; li,
   tong/JYO-7530-2024; lin, lin/KFB-9548-2024; Liu, min/JXW-8493-2024;
   Cheung, Shing Chi/U-5882-2018
OI Sun, Chengnian/0000-0002-0862-2491; TIAN, Yongqiang/0000-0003-1644-2965;
   Jiang, Yu/0000-0003-0955-503X; Zhang, Wuqi/0000-0001-8039-0528; Cheung,
   Shing Chi/0000-0002-3508-7172
FU National Natural Science Foundation of China [61932021]; Hong Kong
   RGC/GRF [16207120]; Hong Kong RGC/RIF [R5034-18]; Hong Kong ITF
   [MHP/055/19]; Hong Kong PhD Fellowship Scheme; HKUST RedBird Academic
   Excellence Award; MSRA Collaborative ResearchGrant; Natural Sciences and
   Engineering Research Council of Canada (NSERC); CFI-JELF [40736]
FX The authors at the Hong Kong University of Science and Technology are
   supported by National Natural Science Foundation of China (Grant No:
   61932021), Hong Kong RGC/GRF (Grant No: 16207120), Hong Kong RGC/RIF
   (Grant No: R5034-18), Hong Kong ITF (Grant No: MHP/055/19), Hong Kong
   PhD Fellowship Scheme, HKUST RedBird Academic Excellence Award, and the
   MSRA Collaborative ResearchGrant. The authors at University ofWaterloo
   are supported by Cisco Research Gift, Natural Sciences and Engineering
   Research Council of Canada (NSERC) through the Discovery Grant, and
   CFI-JELF Project #40736.
CR Akhtar N, 2018, IEEE ACCESS, V6, P14410, DOI 10.1109/ACCESS.2018.2807385
   [Anonymous], 2022, NVID TENSORRT
   [Anonymous], 2014, The Java Virtual Machine Specification, Java SE 8 Edition
   Benesty J., 2009, NOISE REDUCTION SPEE, P1, DOI [10.1007/978-3-642-00296-0_5, DOI 10.1007/978-3-642-00296-05]
   Bhagoji AN, 2018, LECT NOTES COMPUT SC, V11216, P158, DOI 10.1007/978-3-030-01258-8_10
   Boncelet C, 2009, ESSENTIAL GUIDE TO IMAGE PROCESSING, 2ND EDITION, P143, DOI 10.1016/B978-0-12-374457-9.00007-X
   Bucilua C., 2006, P 12 ACM SIGKDD INT, P535
   Cai Han, 2020, ICLR 20
   Carlini N, 2017, P IEEE S SECUR PRIV, P39, DOI 10.1109/SP.2017.49
   Chamain LD, 2022, IEEE INTERNET THINGS, V9, P21916, DOI 10.1109/JIOT.2022.3182313
   Chen T.Y., 1998, Metamorphic testing: a new approach for generating next test cases
   Chen YT, 2019, PROC INT CONF SOFTW, P1257, DOI 10.1109/ICSE.2019.00127
   Chen YT, 2016, ACM SIGPLAN NOTICES, V51, P85, DOI [10.1145/2980983.2908095, 10.1145/2908080.2908095]
   Chen Zuohui, 2021, ICML 2021 WORKSHOP A
   Cheng M., 2019, P INT C LEARNING REP, P1
   Cho JH, 2019, IEEE I CONF COMP VIS, P4793, DOI 10.1109/ICCV.2019.00489
   Choudhary T, 2020, ARTIF INTELL REV, V53, P5113, DOI 10.1007/s10462-020-09816-7
   Deng J, 2009, PROC CVPR IEEE, P248, DOI 10.1109/CVPRW.2009.5206848
   Devlin J, 2019, 2019 CONFERENCE OF THE NORTH AMERICAN CHAPTER OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS: HUMAN LANGUAGE TECHNOLOGIES (NAACL HLT 2019), VOL. 1, P4171
   Gonzalez R C, 2008, DIGITAL IMAGE PROCES
   Goodfellow Ian J., 2015, STAT-US
   Gou JP, 2021, INT J COMPUT VISION, V129, P1789, DOI 10.1007/s11263-021-01453-z
   Graf, 2017, ARXIV160808710, P1, DOI DOI 10.48550/ARXIV.1608.08710
   Guo C, 2019, PR MACH LEARN RES, V97
   Han  S., 2015, ARXIV151000149
   Han S, 2015, ADV NEUR IN, V28
   Hannun A, 2014, Arxiv, DOI arXiv:1412.5567
   Hosang J, 2016, IEEE T PATTERN ANAL, V38, P814, DOI 10.1109/TPAMI.2015.2465908
   Hu Q, 2022, ARXIV, DOI DOI 10.48550/ARXIV.2204.04220
   Huang K., 2019, P 33 AAAI C ARTIFICI, V33, P3861, DOI [10.1609/aaai.v33i01.33013854, DOI 10.1609/AAAI.V33I01.33013854]
   Kass RE, 1998, AM STAT, V52, P93, DOI 10.2307/2685466
   Khalid F, 2019, IEEE INT ON LINE, P182, DOI [10.1109/iolts.2019.8854377, 10.1109/IOLTS.2019.8854377]
   Kim J, 2019, PROC INT CONF SOFTW, P1039, DOI 10.1109/ICSE.2019.00108
   Krizhevsky A., 2009, LEARNING MULTIPLE LA
   Le V, 2015, ACM SIGPLAN NOTICES, V50, P386, DOI [10.1145/2814270.2814319, 10.1145/2858965.2814319]
   Lecun Y, 1998, P IEEE, V86, P2278, DOI 10.1109/5.726791
   LeCun Y., 2010, MNIST HANDWRITTEN DI
   Lin Tao, 2020, ICLR 20
   Liu J, 2022, IEEE T PATTERN ANAL, V44, P4035, DOI 10.1109/TPAMI.2021.3066410
   Liu Q, 2018, ASIA S PACIF DES AUT, P721, DOI 10.1109/ASPDAC.2018.8297407
   Ma L, 2018, IEEE INT CONF AUTOM, P120, DOI 10.1145/3238147.3238202
   Ma L, 2018, PROC INT SYMP SOFTW, P100, DOI 10.1109/ISSRE.2018.00021
   McKeeman William M., 1998, DIGIT TECH J, V10, P100
   Meyn S., 2009, MARKOV CHAINS STOCHA, V2, DOI 10.1017/CBO9780511626630
   Mishra Asit K., 2018, ICLR 18
   Muja M, 2014, IEEE T PATTERN ANAL, V36, P2227, DOI 10.1109/TPAMI.2014.2321376
   Odena A, 2019, PR MACH LEARN RES, V97
   ONNX, 2022, ONNX INF
   Panayotov V, 2015, INT CONF ACOUST SPEE, P5206, DOI 10.1109/ICASSP.2015.7178964
   Paulsen B, 2020, PROC INT CONF SOFTW, P714, DOI 10.1145/3377811.3380337
   Paulsen B, 2020, IEEE INT CONF AUTOM, P784, DOI 10.1145/3324884.3416560
   Pei KX, 2017, PROCEEDINGS OF THE TWENTY-SIXTH ACM SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES (SOSP '17), P1, DOI 10.1145/3132747.3132785
   Pham HV, 2020, IEEE INT CONF AUTOM, P771, DOI 10.1145/3324884.3416545
   Polino Antonio, 2018, ICLR 18
   PyTorch, 2022, MOD PRETR WEIGHTS QU
   Quo QY, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P822, DOI 10.1109/ASE.2019.00080
   Rastegari M, 2016, LECT NOTES COMPUT SC, V9908, P525, DOI 10.1007/978-3-319-46493-0_32
   Ren SQ, 2017, IEEE T PATTERN ANAL, V39, P1137, DOI 10.1109/TPAMI.2016.2577031
   Riccio V, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P876, DOI 10.1145/3368089.3409730
   Rumelhart David E., 1988, Learning Representations by Back-Propagating Errors, P696
   Shafahi A, 2019, ADV NEUR IN, V32
   Shi YC, 2019, PROC CVPR IEEE, P6512, DOI 10.1109/CVPR.2019.00668
   Simons T, 2019, ELECTRONICS-SWITZ, V8, DOI 10.3390/electronics8060661
   Singh P, 2019, PROCEEDINGS OF THE TWENTY-EIGHTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P3460
   tensorflow, 2022, TensorFlow Lite
   Tian YQ, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-021-09985-1
   Tian YC, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P303, DOI 10.1145/3180155.3180220
   Le V, 2014, ACM SIGPLAN NOTICES, V49, P216, DOI [10.1145/2666356.2594334, 10.1145/2594291.2594334]
   Wang HR, 2022, PROCEEDINGS OF THE 59TH ACM/IEEE DESIGN AUTOMATION CONFERENCE, DAC 2022, P1, DOI 10.1145/3489517.3530400
   Wang JL, 2022, PROCEEDINGS OF THE 31ST ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, ISSTA 2022, P164, DOI 10.1145/3533767.3534386
   Wang K, 2019, PROC CVPR IEEE, P11899, DOI [10.1109/CVPR.2019.01218, 10.1109/CVPR.2019.00881]
   Wang Z, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P788, DOI 10.1145/3368089.3409761
   WILCOXON F, 1945, BIOMETRICS BULL, V1, P80, DOI 10.1093/jee/39.2.269
   Wu JX, 2016, PROC CVPR IEEE, P4820, DOI 10.1109/CVPR.2016.521
   Xie XF, 2019, PROCEEDINGS OF THE TWENTY-EIGHTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P5772
   Xie XF, 2019, PROCEEDINGS OF THE 28TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA '19), P146, DOI 10.1145/3293882.3330579
   Yahmed AH, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-022-10202-w
   Zhang FY, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P800, DOI 10.1145/3368089.3409750
   Zhang HY, 2019, PR MACH LEARN RES, V97
   Zhou Aojun, 2017, ICLR 17
   Zhu M., 2018, PROC INT C LEARN REP
   Zmora N, 2019, Arxiv, DOI arXiv:1910.12232
NR 82
TC 0
Z9 0
U1 1
U2 2
PU ASSOC COMPUTING MACHINERY
PI NEW YORK
PA 1601 Broadway, 10th Floor, NEW YORK, NY USA
SN 1049-331X
EI 1557-7392
J9 ACM T SOFTW ENG METH
JI ACM Trans. Softw. Eng. Methodol.
PD JUL
PY 2023
VL 32
IS 5
AR 128
DI 10.1145/3583564
PG 32
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA P9SM2
UT WOS:001054005300021
OA Green Submitted, hybrid
DA 2024-07-18
ER

PT J
AU Xu, QH
   Ali, S
   Yue, T
AF Xu, Qinghua
   Ali, Shaukat
   Yue, Tao
TI Digital Twin-based Anomaly Detection with Curriculum Learning in
   Cyber-physical Systems
SO ACM TRANSACTIONS ON SOFTWARE ENGINEERING AND METHODOLOGY
LA English
DT Article
DE Cyber-physical system; digital twin; curriculum learning; deep learning;
   anomaly detection
ID UNCERTAINTY
AB Anomaly detection is critical to ensure the security of cyber-physical systems (CPS). However, due to the increasing complexity of attacks and CPS themselves, anomaly detection in CPS is becoming more and more challenging. In our previous work, we proposed a digital twin-based anomaly detection method, called ATTAIN, which takes advantage of both historical and real-time data of CPS. However, such data vary significantly in terms of difficulty. Therefore, similar to human learning processes, deep learning models (e.g., ATTAIN) can benefit from an easy-to-difficult curriculum. To this end, in this paper, we present a novel approach, named digitaL twin-based Anomaly deTecTion wIth Curriculum lEarning (LATTICE), which extends ATTAIN by introducing curriculum learning to optimize its learning paradigm. LATTICE attributes each sample with a difficulty score, before being fed into a training scheduler. The training scheduler samples batches of training data based on these difficulty scores such that learning from easy to difficult data can be performed. To evaluate LATTICE, we use five publicly available datasets collected from five real-world CPS testbeds. We compare LATTICE with ATTAIN and two other state-of-the-art anomaly detectors. Evaluation results show that LATTICE outperforms the three baselines and ATTAIN by 0.906%-2.367% in terms of the F1 score. LATTICE also, on average, reduces the training time of ATTAIN by 4.2% on the five datasets and is on par with the baselines in terms of detection delay time.
C1 [Xu, Qinghua; Ali, Shaukat; Yue, Tao] Simula Res Lab, Kristian Augusts Gate 23, N-0164 Oslo, Norway.
   [Xu, Qinghua] Univ Oslo, Oslo, Norway.
C3 University of Oslo
RP Yue, T (corresponding author), Simula Res Lab, Kristian Augusts Gate 23, N-0164 Oslo, Norway.
EM qinghua@simula.no; shaukat@simula.no; tao@simula.no
RI Xu, Qinghua/KHX-8702-2024; yue, tao/H-6783-2013
OI Ali, Shaukat/0000-0002-9979-3519; Yue, Tao/0000-0003-3262-5577; Xu,
   Qinghua/0000-0001-8104-1645
FU Research Council of Norway [270053]; Norwegian Ministry of Education and
   Research; Horizon 2020 project ADEPTNESS - European Commission [871319];
   H2020 - Industrial Leadership [871319] Funding Source: H2020 -
   Industrial Leadership
FX The SWaT, WADI, and BATADAL datasets were provided by iTrust, Centre for
   Research in Cyber Security, Singapore University of Technology and
   Design. The research presented in this paper has benefited from the
   Experimental Infrastructure for Exploration of Exascale Computing (eX3),
   which is financially supported by the Research Council of Norway under
   contract 270053. Qinghua Xu is supported by a project funded by the
   Norwegian Ministry of Education and Research. Shaukat Ali and Tao Yue
   are supported by Horizon 2020 project ADEPTNESS (871319) funded by the
   European Commission.
CR Ahmed C. M., 2017, P 3 INT WORKSH CYB P, P25, DOI DOI 10.1145/3055366.3055375
   Aichernig Bernhard K., 2020, From Passive to Active: Learning Timed Automata Efficiently BT-NASA Formal Methods, P1
   Arcuri A, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1, DOI 10.1145/1985793.1985795
   Banerjee A, 2012, P IEEE, V100, P283, DOI 10.1109/JPROC.2011.2165689
   Bao JM, 2017, IEEE I CONF COMP VIS, P2764, DOI 10.1109/ICCV.2017.299
   Bengio Y., 2009, P 26 ANN INT C MACH, V60, P6, DOI [DOI 10.1145/1553374.1553380, 10.1145/1553374.1553380]
   Canizo M, 2019, NEUROCOMPUTING, V363, P246, DOI 10.1016/j.neucom.2019.07.034
   Chen XL, 2015, IEEE I CONF COMP VIS, P1431, DOI 10.1109/ICCV.2015.168
   Choi J, 2019, Arxiv, DOI arXiv:1908.00262
   Cirik Volkan, 2016, arXiv
   Du L, 2014, INTELL DATA ANAL, V18, P337, DOI 10.3233/IDA-140645
   Eckhart M, 2018, CPSS'18: PROCEEDINGS OF THE 4TH ACM WORKSHOP ON CYBER-PHYSICAL SYSTEM SECURITY, P61, DOI 10.1145/3198458.3198464
   Eckhart Matthias, 2020, SECURITY QUALITY CYB, DOI [10.1007/978-3-030-25312-7, DOI 10.1007/978-3-030-25312-7]
   Eklund Neil, 2021, PHM Data Challenge
   El Saddik A, 2018, IEEE MULTIMEDIA, V25, P87, DOI 10.1109/MMUL.2018.023121167
   El-Bouri D., 2020, P 37 INT C MACHINE L, P2848
   Fang LL, 2021, PATTERN ANAL APPL, V24, P1685, DOI 10.1007/s10044-021-01021-8
   Fey M, 2019, Arxiv, DOI [arXiv:1903.02428, DOI 10.48550/ARXIV.1903.02428]
   Goh J, 2017, IEEE HI ASS SYS ENGR, P140, DOI 10.1109/HASE.2017.36
   Goodfellow I, 2020, COMMUN ACM, V63, P139, DOI 10.1145/3422622
   Graves A, 2017, PR MACH LEARN RES, V70
   Hacohen G, 2019, PR MACH LEARN RES, V97
   Han LP, 2022, PROCEEDINGS OF THE 30TH ACM JOINT MEETING EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, ESEC/FSE 2022, P1331, DOI 10.1145/3540250.3558955
   Han Liping, 2022, Technical Report
   Jabbar A, 2021, ACM COMPUT SURV, V54, DOI 10.1145/3463475
   Kocmi T, 2017, Arxiv, DOI arXiv:1707.09533
   Koenecke A, 2020, LECT NOTES ARTIF INT, V11985, P16, DOI 10.1007/978-3-030-37720-5_2
   Kohavi R., 1995, IJCAI-95. Proceedings of the Fourteenth International Joint Conference on Artificial Intelligence, P1137
   Kravchik M, 2018, CPS-SPC'18: PROCEEDINGS OF THE 2018 WORKSHOP ON CYBER-PHYSICAL SYSTEMS SECURITY AND PRIVACY, P72, DOI 10.1145/3264888.3264896
   Krueger KA, 2009, COGNITION, V110, P380, DOI 10.1016/j.cognition.2008.11.014
   Kumar S, 2018, INT J ENV RES PUB HE, V15, DOI 10.3390/ijerph15122907
   Li Z, 2019, INT J ADV MANUF TECH, V103, P499, DOI 10.1007/s00170-019-03557-w
   Liu Y, 2019, IEEE ACCESS, V7, P49088, DOI 10.1109/ACCESS.2019.2909828
   Lu J, 2018, PR MACH LEARN RES, V80
   Luo Y, 2021, ACM COMPUT SURV, V54, DOI 10.1145/3453155
   Ma Qingming, 2011, US Patent, Patent No. [7,904,961, 7904961]
   Ma T, 2019, SOFTWARE QUAL J, V27, P615, DOI 10.1007/s11219-018-9437-3
   Maier A, 2014, IEEE INTL CONF IND I, P60, DOI 10.1109/INDIN.2014.6945484
   Mathur AP, 2016, 2016 INTERNATIONAL WORKSHOP ON CYBER-PHYSICAL SYSTEMS FOR SMART WATER NETWORKS (CYSWATER), P31, DOI 10.1109/CySWater.2016.7469060
   Morris TM, 2015, POLIT CULT TWENT-CEN, P179
   Paszke A, 2019, ADV NEUR IN, V32
   Pawan Kumar M., 2010, NIPS
   Penha Gustavo, 2020, Advances in Information Retrieval, 42nd European Conference on IR Research, ECIR 2020. Proceedings. Lecture Notes in Computer Science (LNCS 12035), P699, DOI 10.1007/978-3-030-45439-5_46
   Platanios EA, 2019, 2019 CONFERENCE OF THE NORTH AMERICAN CHAPTER OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS: HUMAN LANGUAGE TECHNOLOGIES (NAACL HLT 2019), VOL. 1, P1162
   Ranjan S, 2018, IEEE-ACM T AUDIO SPE, V26, P197, DOI 10.1109/TASLP.2017.2765832
   Rohde DLT, 1999, COGNITION, V72, P67, DOI 10.1016/S0010-0277(99)00031-1
   SANGER TD, 1994, IEEE T ROBOTIC AUTOM, V10, P323, DOI 10.1109/70.294207
   Scheffel Roberto M., 2019, Journal of the Brazilian Computer Society, V25, DOI 10.1186/s13173-019-0094-6
   Schiff Joel L., 2011, Cellular automata: A discrete view of the world, V45
   Selfridge O.G., 1985, IJCAI, P670
   Soviany Petru, 2021, Curriculum Learning: A Survey, V14, P1
   Spitkovsky V. I., 2010, HUMAN LANGUAGE TECHN, P751
   Tao Yue, 2022, Leveraging Applications of Formal Methods, Verification and Validation. Practice: 11th International Symposium, ISoLA 2022, Proceedings. Lecture Notes in Computer Science (13704), P9, DOI 10.1007/978-3-031-19762-8_2
   Tao Yue, 2021, Leveraging Applications of Formal Methods, Verification and Validation: Tools and Trends: 9th International Symposium on Leveraging Applications of Formal Methods, ISoLA 2020, Proceedings. Lecture Notes in Computer Science, Theoretical Computer Science and General Issues (12479), P54, DOI 10.1007/978-3-030-83723-5_5
   Taormina R, 2018, J WATER RES PLAN MAN, V144, DOI 10.1061/(ASCE)WR.1943-5452.0000969
   Tay Y, 2019, Arxiv, DOI arXiv:1905.10847
   Tsvetkov Y, 2016, Arxiv, DOI arXiv:1605.03852
   Tullis JG, 2011, J MEM LANG, V64, P109, DOI 10.1016/j.jml.2010.11.002
   Wang H, 2015, Arxiv, DOI [arXiv:1504.01044, 10.1109/IJCNN.2015.7280398]
   Wei YC, 2017, IEEE T PATTERN ANAL, V39, P2314, DOI 10.1109/TPAMI.2016.2636150
   Weinshall Daphna, 2018, 35 INT C MACHINE LEA, V12, P8331
   Wu ZY, 2018, SENSORS-BASEL, V18, DOI 10.3390/s18041096
   Xu Benfeng, 2020, P 58 ANN M ASS COMPU, P6095, DOI DOI 10.18653/V1/2020.ACL-MAIN.542
   Xu QH, 2022, PROCEEDINGS OF THE 30TH ACM JOINT MEETING EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, ESEC/FSE 2022, P1257, DOI 10.1145/3540250.3558957
   Xu QH, 2021, IEEE INT CONF SOFTW, P205, DOI 10.1109/ICST49551.2021.00031
   Yao Danfeng, 2017, Synthesis Lectures on Information Security, Privacy, and Trust, V9, P1
   Zhang M, 2019, J SYST SOFTWARE, V153, P1, DOI 10.1016/j.jss.2019.03.011
   Zhang M, 2019, SOFTW SYST MODEL, V18, P1379, DOI 10.1007/s10270-017-0609-6
   Zhang X, 2019, Arxiv, DOI arXiv:1905.05816
   Zhang YZ, 2017, PR MACH LEARN RES, V70
NR 70
TC 8
Z9 8
U1 4
U2 5
PU ASSOC COMPUTING MACHINERY
PI NEW YORK
PA 1601 Broadway, 10th Floor, NEW YORK, NY USA
SN 1049-331X
EI 1557-7392
J9 ACM T SOFTW ENG METH
JI ACM Trans. Softw. Eng. Methodol.
PD JUL
PY 2023
VL 32
IS 5
AR 113
DI 10.1145/3582571
PG 32
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA P9SM2
UT WOS:001054005300006
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Yu, NK
AF Yu, Nengkun
TI Structured Theorem for Quantum Programs and its Applications
SO ACM TRANSACTIONS ON SOFTWARE ENGINEERING AND METHODOLOGY
LA English
DT Article
DE Quantum programming; flowchart language; while-language; structure
   programming
ID TERMINATION; VERIFICATION
AB This article proves a structured program theorem for flowchart quantum programs. The theorem states that any flowchart quantum program is equivalent to a single quantum program that repeatedly executes a quantum measurement and a subprogram, so long as the measurement outcome is true. Moreover, their expected runtime, variance, and general moments are the same. This theorem simplifies the quantum program's verification significantly.
   - We derive an analytical characterization of the termination problem for quantum programs in polynomial time. Our procedure is more efficient and accurate with much simpler techniques than the analysis of this problem, as described in [29].
   - We compute the expected runtime analytically and exactly for quantum programs in polynomial time. This result improves the methods based on the weakest precondition calculus for the question recently developed in [31, 34].
   - We show that a single loop rule is a relatively complete Hoare logic for quantum programs after applying our structured theorem. Although using fewer rules, our method verifies a broader class of quantum programs, compared with the results in [45] and [56].
C1 [Yu, Nengkun] SUNY Stony Brook, Dept Comp Sci, 100 Nicolls Rd, Stony Brook, NY 11794 USA.
   [Yu, Nengkun] Univ Technol Sydney, Ctr Quantum Software & Informat, Sydney, NSW, Australia.
C3 State University of New York (SUNY) System; State University of New York
   (SUNY) Stony Brook; University of Technology Sydney
RP Yu, NK (corresponding author), SUNY Stony Brook, Dept Comp Sci, 100 Nicolls Rd, Stony Brook, NY 11794 USA.; Yu, NK (corresponding author), Univ Technol Sydney, Ctr Quantum Software & Informat, Sydney, NSW, Australia.
EM nengkun.yu@stonybrook.edu
FU ARC [DE180100156, DP210102449]
FX This work is supported by ARC Discovery Early Career Researcher Award
   DE180100156 and ARC Discovery Program DP210102449.
CR Abhari A. J., 2012, TR93412 PRINC U DEP
   Aleksandrowicz Gadi, 2019, Zenodo, DOI 10.5281/ZENODO.2562111
   Arute F, 2019, NATURE, V574, P505, DOI 10.1038/s41586-019-1666-5
   Ashcroft E., 1979, CLASSICS SOFTWARE EN
   Barthe G, 2017, ACM SIGPLAN NOTICES, V52, P161, DOI 10.1145/3093333.3009896
   Bocharov A, 2015, PHYS REV LETT, V114, DOI 10.1103/PhysRevLett.114.080502
   BOHM C, 1966, COMMUN ACM, V9, P366, DOI 10.1145/355592.365646
   Burks A., 1946, Preliminary discussion of the logical design of an electronic computing instrument
   Chatterjee K, 2016, ACM SIGPLAN NOTICES, V51, P327, DOI 10.1145/2914770.2837639
   COOPER DC, 1967, COMMUN ACM, V10, P463, DOI 10.1145/363534.363539
   D'Hondt E, 2006, MATH STRUCT COMP SCI, V16, P429, DOI 10.1017/S0960129506005251
   Esparza J, 2005, IEEE S LOG, P117
   Esparza Javier, 2012, Computer Aided Verification. Proceedings 24th International Conference, CAV 2012, P123, DOI 10.1007/978-3-642-31424-7_14
   Feng Y, 2013, LECT NOTES COMPUT SC, V8087, P385, DOI 10.1007/978-3-642-40313-2_35
   Fioriti LMF, 2015, ACM SIGPLAN NOTICES, V50, P489, DOI 10.1145/2676726.2677001
   Google AI Quantum team, 2018, US
   Guoqiang Ge, 1993, THESIS U OF CALIFORN
   Guterman A, 2018, LINEAR ALGEBRA APPL, V543, P234, DOI 10.1016/j.laa.2018.01.002
   HAREL D, 1980, COMMUN ACM, V23, P379, DOI 10.1145/358886.358892
   Jin-Yi Cai, 1994, International Journal of Foundations of Computer Science, V5, P293, DOI 10.1142/S0129054194000165
   Kaminski BL, 2018, J ACM, V65, DOI 10.1145/3208102
   KELLER RM, 1976, COMMUN ACM, V19, P371, DOI 10.1145/360248.360251
   Kleene SC, 1936, MATH ANN, V112, P727, DOI 10.1007/BF01565439
   Kozen D., 1979, 20th Annual Symposium of Foundations of Computer Science, P101, DOI 10.1109/SFCS.1979.38
   Kozen D, 2008, LECT NOTES COMPUT SC, V5133, P177
   Li YJ, 2014, PHYS REV A, V89, DOI 10.1103/PhysRevA.89.042338
   Li YJ, 2014, ACTA INFORM, V51, P1, DOI 10.1007/s00236-013-0185-3
   Li Yangjia, 2017, P 45 ACM SIGPLAN S P
   Liu JB, 2023, POLYCYCL AROMAT COMP, V43, P1776, DOI 10.1080/10406638.2022.2039230
   McIver A, 2018, P ACM PROGRAM LANG, V2, DOI 10.1145/3158121
   Nielsen M. A, 2011, Quantum Computation and Quantum Information: 10th Anniversary Edition
   Olmedo F, 2019, Arxiv, DOI arXiv:1911.11247
   Paetznick A, 2014, QUANTUM INF COMPUT, V14, P1277
   Pappacena CJ, 1997, J ALGEBRA, V197, P535, DOI 10.1006/jabr.1997.7140
   Preskill J, 2018, QUANTUM-AUSTRIA, V2, DOI 10.22331/q-2018-08-06-79
   Rao Kosaraju S., 1973, Proc. 5th ACM Symp. Theory of Computing (STOC'73), P240, DOI [10.1145/800125.804055, DOI 10.1145/800125.804055]
   Selinger P, 2004, MATH STRUCT COMP SCI, V14, P527, DOI 10.1017/S0960129504004256
   SHARIR M, 1984, SIAM J COMPUT, V13, P292, DOI 10.1137/0213021
   Shenggang Ying, 2013, CONCUR 2013 - Concurrency Theory. 24th International Conference, CONCUR 2013. Proceedings: LNCS 8052, P334, DOI 10.1007/978-3-642-40184-8_24
   Shitov Y, 2019, ALGEBR NUMBER THEORY, V13, P1501, DOI 10.2140/ant.2019.13.1501
   Svore K, 2018, RWDSL2018: PROCEEDINGS OF THE REAL WORLD DOMAIN SPECIFIC LANGUAGES WORKSHOP 2018, DOI 10.1145/3183895.3183901
   Wecker D, 2014, Arxiv, DOI arXiv:1402.4467
   Wiebe N, 2016, QUANTUM INF COMPUT, V16, P134
   Yan P, 2022, P ACM PROGRAM LANG, V6, DOI 10.1145/3527316
   Yangjia Li, 2014, CONCUR 2014 - Concurrency Theory. 25th International Conference, CONCUR 2014. Proceedings: LNCS 8704, P482, DOI 10.1007/978-3-662-44584-6_33
   Ying M., 2016, Foundations of Quantum Programming
   Ying MS, 2013, SCI COMPUT PROGRAM, V78, P1679, DOI 10.1016/j.scico.2013.03.016
   Ying MS, 2011, ACM T PROGR LANG SYS, V33, DOI 10.1145/2049706.2049708
   Ying MS, 2011, IEEE T SOFTWARE ENG, V37, P466, DOI 10.1109/TSE.2010.94
   Ying MS, 2010, ACTA INFORM, V47, P221, DOI 10.1007/s00236-010-0117-4
   Yu NK, 2022, LECT NOTES COMPUT SC, V13790, P10, DOI 10.1007/978-3-031-22308-2_2
   Yu NK, 2021, PROCEEDINGS OF THE 42ND ACM SIGPLAN INTERNATIONAL CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION (PLDI '21), P542, DOI 10.1145/3453483.3454061
   Yu NK, 2012, LECT NOTES COMPUT SC, V7454, P69, DOI 10.1007/978-3-642-32940-1_7
   Yu Nengkun, 2019, arXiv
   Zhao Jianjun, 2020, arXiv
   Zhou L, 2019, PROCEEDINGS OF THE 40TH ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION (PLDI '19), P1149, DOI 10.1145/3314221.3314584
NR 56
TC 0
Z9 0
U1 0
U2 0
PU ASSOC COMPUTING MACHINERY
PI NEW YORK
PA 1601 Broadway, 10th Floor, NEW YORK, NY USA
SN 1049-331X
EI 1557-7392
J9 ACM T SOFTW ENG METH
JI ACM Trans. Softw. Eng. Methodol.
PD JUL
PY 2023
VL 32
IS 4
AR 103
DI 10.1145/3587154
PG 35
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA L0SO0
UT WOS:001020441100022
DA 2024-07-18
ER

PT J
AU Zhu, CG
   Zhang, MS
   Wu, XH
   Xu, XF
   Li, Y
AF Zhu, Chenguang
   Zhang, Mengshi
   Wu, Xiuheng
   Xu, Xiufeng
   Li, Yi
TI Client-Specific Upgrade Compatibility Checking via Knowledge-Guided
   Discovery
SO ACM TRANSACTIONS ON SOFTWARE ENGINEERING AND METHODOLOGY
LA English
DT Article
DE Software upgrade; compatibility; test generation
ID JAVA
AB Modern software systems are complex, and they heavily rely on external libraries developed by different teams and organizations. Such systems suffer from higher instability due to incompatibility issues caused by library upgrades. In this article, we address the problem by investigating the impact of a library upgrade on the behaviors of its clients. We developed CompCheck, an automated upgrade compatibility checking framework that generates incompatibility-revealing tests based on previous examples. CompCheck first establishes an offline knowledge base of incompatibility issues by mining from open source projects and their upgrades. It then discovers incompatibilities for a specific client project, by searching for similar library usages in the knowledge base and generating tests to reveal the problems. We evaluated CompCheck on 202 call sites of 37 open source projects and the results show that CompCheck successfully revealed incompatibility issues on 76 call sites, 72.7% and 94.9% more than two existing techniques, confirming CompCheck's applicability and effectiveness.
C1 [Zhu, Chenguang] Univ Texas Austin, 2501 Speedway, Austin, TX 78712 USA.
   [Zhang, Mengshi] Meta Platforms Inc, 1 Hacker Way, Menlo Pk, CA 94025 USA.
   [Wu, Xiuheng; Xu, Xiufeng; Li, Yi] Nanyang Technol Univ, 50 Nanyang Ave, Singapore 639798, Singapore.
C3 University of Texas System; University of Texas Austin; Nanyang
   Technological University
RP Li, Y (corresponding author), Nanyang Technol Univ, 50 Nanyang Ave, Singapore 639798, Singapore.
EM cgzhu@utexas.edu; mengshizhang@meta.com; XIUHENG001@e.ntu.edu.sg;
   XIUFENG001@e.ntu.edu.sg; yi_li@ntu.edu.sg
RI Li, Yi/AAG-4899-2020
OI Li, Yi/0000-0003-4562-8208; Xu, Xiufeng/0000-0003-2564-6660
FU Ministry of Education, Singapore [MOE2019-T2-1-040]
FX This work was done in part while C. Zhu was a research assistant at
   Nanyang Technological University. This research was supported by the
   Ministry of Education, Singapore, under its Academic Research Fund Tier
   2 (MOE2019-T2-1-040).
CR Alibaba, 2022, FASTJSON
   Amann S, 2019, IEEE T SOFTWARE ENG, V45, P1170, DOI 10.1109/TSE.2018.2827384
   [Anonymous], 2011, P 2011 INT S SOFTWAR
   Apache, 2022, AP HTTPCOMPONENTS
   Apache Software Foundation, 2020, AP MAV PROJ
   Apache Software Foundation, 2019, AP COMM COD
   Apache Software Foundation, 2020, AP HTTPCLIENT
   ASM Developers, 2020, US
   AWS, 2022, REL AWS SDK JAV 1 8
   AWS, 2022, AWS SDK JAV
   AWS SDK Developers, 2022, NEW JOD TIM BAS DAT
   Badihi S, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P13, DOI 10.1145/3368089.3409757
   Bajracharya Sushil, 2006, COMPANION 21 ACM SIG, P681
   Bilge L., 2012, CCS 12, P833, DOI [10.1145/2382196.2382284, DOI 10.1145/2382196.2382284]
   Chaki S, 2012, LECT NOTES COMPUT SC, V7148, P119, DOI 10.1007/978-3-642-27940-9_9
   Chen LC, 2020, PROC INT CONF SOFTW, P112, DOI 10.1145/3377811.3380436
   Chen Yanping., 2007, 3rd international workshop on Advances in model-based testing, P54, DOI 10.1145/1291535.1291541
   Cleare J, 2018, PROC IEEE INT CONF S, P700, DOI 10.1109/ICSME.2018.00080
   CompCheck, 2020, COMPCHECK
   Dependabot, 2020, DEPENDABOT
   Dromara, 2020, MYTH
   EsotericSoftware, 2020, KRYO
   EvoSuite, 2020, DIFF REGR TEST GEN
   EvoSuite, 2020, EVOSUITE DOC
   FasterXML LLC, 2020, JACKS COR
   FasterXML LLC, 2020, JACKS DAT
   Felsing D, 2014, P 29 ACM IEEE INT C, P349, DOI [10.1145/2642937.2642987, DOI 10.1145/2642937.2642987]
   Foo D, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P791, DOI 10.1145/3236024.3275535
   Fraser Gordon, 2011, PROC 19 ACM SIGSOFT, P416, DOI 10.1145/2025113.2025179
   GitHub, 2020, JACKS DAT VERS 10 SH
   GitHub, 2020, ABOUT US
   Godefroid Patrice, 2020, P 29 ACM SIGSOFT INT, P312, DOI [10.1145/3395363.3397374, DOI 10.1145/3395363.3397374]
   Godlin B, 2013, SOFTW TEST VERIF REL, V23, P241, DOI 10.1002/stvr.1472
   Google, 2020, GUICE
   Gyori A, 2018, PROC INT SYMP SOFTW, P112, DOI 10.1109/ISSRE.2018.00022
   Hoan Anh Nguyen, 2019, 2019 IEEE/ACM 41st International Conference on Software Engineering (ICSE). Proceedings, P819, DOI 10.1109/ICSE.2019.00089
   HtmlCleaner, 2022, ABOUT US
   Igarashi A, 2001, ACM T PROGR LANG SYS, V23, P396, DOI 10.1145/503502.503505
   Internet Archive, 2020, INTERNET ARCHIVE
   Jaygarl Hojun, 2010, P 19 INT S SOFTWARE, P159
   Joda-Time, 2022, ABOUT US
   Junkdog, 2020, ART ODB
   JVM Profiler, 2020, JVM PROF
   Kafka, 2020, UPGR GUID API CHANGE
   Kawaguchi Kohsuke, 2020, ARGS4J
   Kechagia M, 2019, PROCEEDINGS OF THE 28TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA '19), P192, DOI 10.1145/3293882.3330552
   Kim K, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P946, DOI 10.1145/3180155.3180187
   Kryo, 2019, MIGR V5
   Kryo Developers, 2015, LIN 125 KRYO JAV VER
   Kryo Developers, 2019, LIN 141 KRYO JAV VER
   Kula RG, 2018, EMPIR SOFTW ENG, V23, P384, DOI 10.1007/s10664-017-9521-5
   Lahiri ShuvenduK., 2013, ACM SIGSOFT S FDN SO, P345, DOI DOI 10.1145/2491411.2491452
   Li L, 2018, ISSTA'18: PROCEEDINGS OF THE 27TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P153, DOI 10.1145/3213846.3213857
   Luan Sifei, 2019, P ACM PROGRAM LANG, P1, DOI DOI 10.1145/3360578
   Ma L, 2015, IEEE INT CONF AUTOM, P212, DOI 10.1109/ASE.2015.49
   Mamo Ron, 2020, REFLECTIONS
   McMillan C, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P111, DOI 10.1145/1985793.1985809
   Meng SC, 2012, PROC INT CONF SOFTW, P353, DOI 10.1109/ICSE.2012.6227179
   Mezzetti G., 2018, 32 EUR C OBJ OR PROG
   MojoHaus, 2022, VERS MAV PLUG
   MongoDB, 2022, MONGODB JAV DRIV
   Mora F, 2018, IEEE INT CONF AUTOM, P441, DOI [10.1145/3238147.3238178, 10.1145/3238117.3238178]
   Mostafa S, 2017, PROC IEEE ACM INT C, P127, DOI 10.1109/ICSE-C.2017.101
   Moten David, 2020, RXJAVA EXTRAS
   Moten David, 2020, RTREE
   Mujahid S, 2020, IEEE WORK CONF MIN S, P466, DOI 10.1145/3379597.3387476
   Muller A, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P409, DOI 10.1145/3338906.3338940
   MVN Repository, 2020, MAV CTR REP
   ONCINA J, 1992, S MACH PERC, V1, P49
   Ouwens Jan, 2022, EQUALSVERIFIER
   Person S, 2011, PLDI 11: PROCEEDINGS OF THE 2011 ACM CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P504
   Person Suzette, 2008, P 16 INT S FDN SOFTW, P226, DOI [DOI 10.1145/1453101.1453131, 10.1145/1453101.1453131]
   Protostuff, 2020, PROT RUNT
   Querydsl, 2022, UN QUER JAV
   Ren XX, 2004, ACM SIGPLAN NOTICES, V39, P432, DOI 10.1145/1035292.1029012
   Restlet, 2022, RESTL FRAM
   Rubin J, 2016, PROC INT CONF SOFTW, P982, DOI 10.1145/2884781.2884871
   Sable Research Group, 2022, SOOT
   Saied MA, 2020, INFORM SOFTWARE TECH, V119, DOI 10.1016/j.infsof.2019.106213
   Saied MA, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P33, DOI 10.1109/SANER.2015.7081813
   Saied MA, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P23, DOI 10.1109/SANER.2015.7081812
   SLF4J, 2022, SIMPL LOGG FAC JAV S
   Wang Y, 2021, IEEE T SOFTWARE ENG, V48, P2295, DOI 10.1109/TSE.2021.3057767
   Wang Y, 2020, PROC IEEE INT CONF S, P35, DOI 10.1109/ICSME46990.2020.00014
   Wasylkowski A, 2011, AUTOMAT SOFTW ENG, V18, P263, DOI 10.1007/s10515-011-0084-1
   Wasylkowski Andrzej, 2007, P 6 JOINT M EUROPEAN, P35, DOI [10.1145/1287624.1287632, DOI 10.1145/1287624.1287632]
   WebMagic, 2022, ABOUT US
   Wu Wei, 2010, P 32 ACMIEEE INT C S, P325, DOI DOI 10.1145/1806799.1806848
   XStream Developers, 2020, XSTREAM
   Yoo S, 2012, SOFTW TEST VERIF REL, V22, P67, DOI [10.1002/stv.430, 10.1002/stvr.430]
   Zhang Sai., 2011, Proceedings of the 2011 International Symposium on Software Testing and Analysis, P353, DOI 10.1145/2001420.2001463
   Zhang TY, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P886, DOI 10.1145/3180155.3180260
   Zhang ZX, 2020, PROCEEDINGS OF THE 2020 IEEE 27TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER '20), P81, DOI [10.1109/SANER48275.2020.9054800, 10.1109/saner48275.2020.9054800]
   Zhong H, 2009, LECT NOTES COMPUT SC, V5653, P318, DOI 10.1007/978-3-642-03013-0_15
NR 94
TC 2
Z9 2
U1 0
U2 2
PU ASSOC COMPUTING MACHINERY
PI NEW YORK
PA 1601 Broadway, 10th Floor, NEW YORK, NY USA
SN 1049-331X
EI 1557-7392
J9 ACM T SOFTW ENG METH
JI ACM Trans. Softw. Eng. Methodol.
PD JUL
PY 2023
VL 32
IS 4
AR 98
DI 10.1145/3582569
PG 31
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA L0SO0
UT WOS:001020441100017
OA Bronze
DA 2024-07-18
ER

PT J
AU Shen, BW
   Gulzar, MA
   He, F
   Meng, N
AF Shen, Bowen
   Gulzar, Muhammad Ali
   He, Fei
   Meng, Na
TI A Characterization Study of Merge Conflicts in Java Projects
SO ACM TRANSACTIONS ON SOFTWARE ENGINEERING AND METHODOLOGY
LA English
DT Article
DE Empirical; software merge; conflict detection; conflict resolution
AB In collaborative software development, programmers create software branches to add features and fix bugs tentatively, and then merge branches to integrate edits. When edits from different branches textually overlap (i.e., textual conflicts) or lead to compilation and runtime errors (i.e., build and test conflicts), it is challenging for developers to remove such conflicts. Prior work proposed tools to detect and solve conflicts. They investigate how conflicts relate to code smells and the software development process. However, many questions are still not fully investigated, such as what types of conflicts exist in real-world applications and how developers or tools handle them. For this article, we used automated textual merge, compilation, and testing to reveal three types of conflicts in 208 open-source repositories: textual conflicts, build conflicts (i.e., conflicts causing build errors), and test conflicts (i.e., conflicts triggering test failures). We manually inspected 538 conflicts and their resolutions to characterize merge conflicts from different angles.
   Our analysis revealed three interesting phenomena. First, higher-order conflicts (i.e., build and test conflicts) are harder to detect and resolve, while existing tools mainly focus on textual conflicts. Second, developers manually resolved most higher-order conflicts by applying similar edits to multiple program locations; their conflict resolutions share common editing patterns implying great opportunities for future tool design. Third, developers resolved 64% of true textual conflicts by keeping complete edits from either a left or right branch. Unlike prior studies, our research for the first time thoroughly characterizes three types of conflicts, with a special focus on higher-order conflicts and limitations of existing tool design. Our work will shed light on future research of software merge.
C1 [Shen, Bowen; Gulzar, Muhammad Ali; Meng, Na] Virginia Tech, 2202 Kraft Dr, Blacksburg, VA 24060 USA.
   [He, Fei] Tsinghua Univ, 30 Shuangqing Rd, Beijing 100084, Peoples R China.
C3 Virginia Polytechnic Institute & State University; Tsinghua University
RP Shen, BW (corresponding author), Virginia Tech, 2202 Kraft Dr, Blacksburg, VA 24060 USA.
EM bowenshe@vt.edu; gulzar@vt.edu; hefei@mail.tsinghua.edu.cn;
   nm8247@vt.edu
OI Shen, Bowen/0000-0002-2298-6857; Meng, Na/0000-0002-0230-5524; He,
   Fei/0000-0002-4266-875X
FU  [NSF-1845446]
FX This work was supported by NSF-1845446.
CR Ahmed I, 2017, INT SYMP EMP SOFTWAR, P58, DOI 10.1109/ESEM.2017.12
   [Anonymous], 2016, MERG BRANCH DEV HTTP
   [Anonymous], 2018, WHICH MAN UPD ITS PH
   [Anonymous], 2015, MERG COMM B2FB76CDAC
   [Anonymous], 2012, CLOS HOOKS
   [Anonymous], 2015, MERG REM TRACK BRANC
   [Anonymous], 2021, jFSTMerge
   [Anonymous], 2010, MERG BRANCH MAST GIT
   [Anonymous], 2019, MERG PULL REQ 1552 N
   [Anonymous], 2018, MERG PULL REQ 511 SQ
   [Anonymous], 2018, MERG REM TRACK BRANC
   [Anonymous], 2019, MERG BRANCH 1 6 6 DR
   [Anonymous], 2019, MERG BRANCH MAST TYP
   [Anonymous], 2021, INT HELL
   [Anonymous], 2021, ABOUT US
   [Anonymous], 2017, MERG BRANCH DEV HTTP
   [Anonymous], 2021, Sample Size Calculator
   [Anonymous], 2012, MERG BRANCH MAST HTT
   [Anonymous], 2019, MERG BRANCH 2 7 0 RE
   [Anonymous], 2013, MERG BRANCH MAST ISS
   ant.apache.org, ANT
   Apel S., 2011, P 19 ACM SIGSOFT S 1, P190, DOI DOI 10.1145/2025113.2025141
   Apel S, 2012, IEEE INT CONF AUTOM, P120, DOI 10.1145/2351676.2351694
   Brindescu C, 2020, EMPIR SOFTW ENG, V25, P562, DOI 10.1007/s10664-019-09735-4
   Brun Y., 2011, Proceedings of the 19th ACM SIGSOFT symposium and the 13th European Conference on Foundations of Software Engineering (FSE'11), P168, DOI [10.1145/2025113.2025139, DOI 10.1145/2025113.2025139]
   Brun Y, 2013, IEEE T SOFTWARE ENG, V39, P1358, DOI 10.1109/TSE.2013.28
   Cavalcanti G, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P1002, DOI 10.1109/ASE.2019.00097
   Cavalcanti G, 2017, P ACM PROGRAM LANG, V1, DOI 10.1145/3133883
   Estler HC, 2014, INT CONF GLOBAL SOFT, P26, DOI 10.1109/ICGSE.2014.17
   Estler HC, 2013, IEEE AUS SOFT ENGR, P201, DOI 10.1109/ASWEC.2013.32
   Ghiotto G, 2020, IEEE T SOFTWARE ENG, V46, P892, DOI 10.1109/TSE.2018.2871083
   git- scm.com, GIT MERG
   Guimaraes ML, 2012, PROC INT CONF SOFTW, P342, DOI 10.1109/ICSE.2012.6227180
   Nguyen HL, 2018, COMPUT SUPP COOP W J, V27, P741, DOI 10.1007/s10606-018-9323-3
   Hoan AN, 2010, ACM SIGPLAN NOTICES, V45, P302, DOI 10.1145/1932682.1869486
   Ji T, 2020, PROC INT SYMP SOFTW, P70, DOI 10.1109/ISSRE5003.2020.00016
   Jiang Lingxiao, 2007, P 6 JOINT M EUROPEAN
   Lessenich O, 2018, AUTOMAT SOFTW ENG, V25, P279, DOI 10.1007/s10515-017-0227-0
   Lessenich O, 2015, AUTOMAT SOFTW ENG, V22, P367, DOI 10.1007/s10515-014-0151-5
   Li LQ, 2017, PROC IEEE INT CONF S, P249, DOI 10.1109/ICSME.2017.46
   Li ZM, 2004, USENIX ASSOCIATION PROCEEDINGS OF THE SIXTH SYMPOSIUM ON OPERATING SYSTEMS DESIGN AND IMPLEMENTATION (OSDE '04), P289
   Mahmoudi M, 2019, 2019 IEEE 26TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER), P151, DOI [10.1109/saner.2019.8668012, 10.1109/SANER.2019.8668012]
   Meng N, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P502, DOI 10.1109/ICSE.2013.6606596
   Meng N, 2011, PLDI 11: PROCEEDINGS OF THE 2011 ACM CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P329
   Mens T, 2002, IEEE T SOFTWARE ENG, V28, P449, DOI 10.1109/TSE.2002.1000449
   Miller RC, 2001, USENIX ASSOCIATION PROCEEDINGS OF THE 2001 USENIX ANNUAL TECHNICAL CONFERENCE, P161
   Nelson N, 2019, EMPIR SOFTW ENG, V24, P2863, DOI 10.1007/s10664-018-9674-x
   Nguyen TT, 2009, IEEE INT CONF AUTOM, P123, DOI 10.1109/ASE.2009.90
   Owhadi-Kareshk M, 2019, INT SYMP EMP SOFTWAR, P363
   Pan R, 2021, PROC INT CONF SOFTW, P785, DOI 10.1109/ICSE43902.2021.00077
   Savor T, 2016, 2016 IEEE/ACM 38TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING COMPANION (ICSE-C), P21, DOI 10.1145/2889160.2889223
   Shen B, 2019, P ACM PROGRAM LANG, V3, DOI 10.1145/3360596
   Sousa Marcelo, 2018, OBJECT ORIENTED PROG
   Vasilescu B, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P805, DOI 10.1145/2786805.2786850
   Yuzuki R, 2015, 2015 IEEE 1ST INTERNATIONAL WORKSHOP ON SOFTWARE ANALYTICS (SWAN), P21, DOI 10.1109/SWAN.2015.7070484
   Zhu FM, 2018, P ACM PROGRAM LANG, V2, DOI 10.1145/3276536
NR 56
TC 3
Z9 3
U1 2
U2 9
PU ASSOC COMPUTING MACHINERY
PI NEW YORK
PA 1601 Broadway, 10th Floor, NEW YORK, NY USA
SN 1049-331X
EI 1557-7392
J9 ACM T SOFTW ENG METH
JI ACM Trans. Softw. Eng. Methodol.
PD APR
PY 2023
VL 32
IS 2
AR 40
DI 10.1145/3546944
PG 28
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA D7OR1
UT WOS:000970588900013
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Sayar, I
   Bartel, A
   Bodden, E
   Le Traon, Y
AF Sayar, Imen
   Bartel, Alexandre
   Bodden, Eric
   Le Traon, Yves
TI An In-depth Study of Java Deserialization Remote-Code Execution Exploits
   and Vulnerabilities
SO ACM TRANSACTIONS ON SOFTWARE ENGINEERING AND METHODOLOGY
LA English
DT Article
DE Serialization; deserialization; vulnerabilities; gadget; remote code
   execution RCE
AB Nowadays, an increasing number of applications use deserialization. This technique, based on rebuilding the instance of objects from serialized byte streams, can be dangerous since it can open the application to attacks such as remote code execution (RCE) if the data to deserialize is originating from an untrusted source. Deserialization vulnerabilities are so critical that they are in OWASP's list of top 10 security risks for web applications. This is mainly caused by faults in the development process of applications and by flaws in their dependencies, i.e., flaws in the libraries used by these applications. No previous work has studied deserialization attacks in-depth: Howare they performed? Howareweaknesses introduced and patched? And for how long are vulnerabilities present in the codebase? To yield a deeper understanding of this important kind of vulnerability, we perform two main analyses: one on attack gadgets, i.e., exploitable pieces of code, present in Java libraries, and one on vulnerabilities present in Java applications. For the first analysis, we conduct an exploratory large-scale study by running 256 515 experiments in which we vary the versions of libraries for each of the 19 publicly available exploits. Such attacks rely on a combination of gadgets present in one or multiple Java libraries. A gadget is a method which is using objects or fields that can be attackercontrolled. Our goal is to precisely identify library versions containing gadgets and to understand howgadgets have been introduced and how they have been patched. We observe that the modification of one innocentlooking detail in a class - such asmaking it public - can already introduce a gadget. Furthermore, we noticed that among the studied libraries, 37.5% are not patched, leaving gadgets available for future attacks. For the second analysis, we manually analyze 104 deserialization vulnerabilities CVEs to understand how vulnerabilities are introduced and patched in real-life Java applications. Results indicate that the vulnerabilities are not always completely patched or that a workaround solution is proposed. With a workaround solution, applications are still vulnerable since the code itself is unchanged.
C1 [Sayar, Imen] Univ Toulouse, IRIT, IUT Blagnac Toulouse II, 1 Pl Georges Brassens, F-31703 Blagnac, France.
   [Bartel, Alexandre] Umea Univ, MIT Huset, Dept Comp Sci, S-90187 Umea, Sweden.
   [Bodden, Eric] Paderborn Univ, Heinz Nixdorf Inst, Furstenallee 11, D-33102 Paderborn, Germany.
   [Le Traon, Yves] Univ Luxembourg, SnT, 6 Rue Richard Coudenhove Kalergi,Kirchberg Campus, L-1359 Luxembourg, Luxembourg.
C3 Universite de Toulouse; Universite Toulouse III - Paul Sabatier; Umea
   University; University of Paderborn; University of Luxembourg
RP Sayar, I (corresponding author), Univ Toulouse, IRIT, IUT Blagnac Toulouse II, 1 Pl Georges Brassens, F-31703 Blagnac, France.
EM imen.sayar@irit.fr; alexandre.bartel@cs.umu.se;
   eric.bodden@uni-paderborn.de; Yves.LeTraon@uni.lu
RI LE TRAON, Yves/T-2911-2019; Bartel, Alexandre/JDW-0992-2023; Bodden,
   Eric/AAE-1365-2021
OI Bartel, Alexandre/0000-0003-1383-0372; Bodden, Eric/0000-0003-3470-3647;
   LE TRAON, Yves/0000-0002-1045-4861
FU Luxembourg National Research Fund (FNR) ONNIVA Project [12696663];
   Wallenberg AI, Autonomous Systems and Software Program (WASP) - Knut and
   Alice Wallenberg Foundation
FX This work was supported by the Luxembourg National Research Fund (FNR)
   ONNIVA Project, ref. 12696663. This work was partially supported by the
   Wallenberg AI, Autonomous Systems and Software Program (WASP) funded by
   the Knut and Alice Wallenberg Foundation.
CR Agence France-Presse, 2016, GUARDIAN
   Alexopoulos N, 2021, ACM T PRIV SECUR, V24, DOI 10.1145/3406112
   [Anonymous], 2014, 11 USENIX S OP SYST
   [Anonymous], Glossary
   Balzarotti D, 2008, P IEEE S SECUR PRIV, P387, DOI 10.1109/SP.2008.22
   Bartel A, 2019, IEEE T INF FOREN SEC, V14, P2167, DOI 10.1109/TIFS.2019.2894356
   Blazquez Daniel, 2020, INSECURE DESERIALIZA
   Bloor Nicky, DESERLAB
   Bloor Nicky, SERIALIZATIONDUMPER
   Bonnaventure William, 2021, 2021 IEEE INT C SOFT
   Broujerdi Hooman, 2018, JDK APPROACH ADDRESS
   Chen YT, 2019, PROC INT CONF SOFTW, P1257, DOI 10.1109/ICSE.2019.00127
   Chisnall D, 2017, TWENTY-SECOND INTERNATIONAL CONFERENCE ON ARCHITECTURAL SUPPORT FOR PROGRAMMING LANGUAGES AND OPERATING SYSTEMS (ASPLOS XXII), P569, DOI 10.1145/3037697.3037725
   Cristalli S, 2018, LECT NOTES COMPUT SC, V11050, P445, DOI 10.1007/978-3-030-00470-5_21
   Daconta Michael C., RUNTIME EXEC WONT
   Dean D, 1996, P IEEE S SECUR PRIV, P190, DOI 10.1109/SECPRI.1996.502681
   Dietrich Jens, 2017, 31 EUR C OBJ OR PROG, P1, DOI [10.4230/LIPIcs.ECOOP.2017.10, DOI 10.4230/LIPICS.ECOOP.2017.10]
   DOWASP study, 2017, OWASP TOP 10
   Esoteric Software, KYR
   Fingann SondreForland., JAVA DESERIALIZATION
   Frohoff Chris, YSOSERIAL
   GitBook, 2022, INTR SNYK
   Go Java, US
   Google, Protocol buffers
   Haken Ian, GADGET INSPECTOR
   Haller Istvan, 2016, P 9 EUROPEANWORKSHOP, V5
   Hdiv Security, INS DES OWASP TOP 10
   Holzinger P, 2017, P IEEE S SECUR PRIV, P1027, DOI 10.1109/SP.2017.16
   Holzinger P, 2016, CCS'16: PROCEEDINGS OF THE 2016 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P779, DOI 10.1145/2976749.2978361
   IBM Company, IBM DOWNL
   Java, SINF TECHN JAV
   Koutroumpouchos N, 2019, PROCEEDINGS OF THE 23RD PAN-HELLENIC CONFERENCE OF INFORMATICS (PCI 2019), P67, DOI 10.1145/3368640.3368680
   Lawrence Anton, BEST PRACTICES JAVA
   Lawrence Gabriel, 2015, OWASP APPSECCALI 201
   Linares-Vásquez M, 2017, IEEE WORK CONF MIN S, P2, DOI 10.1109/MSR.2017.60
   Manning C. D., 2008, Introduction to information retrieval, DOI [DOI 10.1017/CBO9780511809071, 10.1017/CBO9780511809071]
   Mazuera-Rozo A, 2019, EMPIR SOFTW ENG, V24, P2056, DOI 10.1007/s10664-019-09689-7
   Microsoft Threat Intelligence Center (MSTIC) Microsoft 365 Defender Threat Intelligence Team and Microsoft 365 Security, 2021, HAFNIUMTARGETING EXC
   Munoz A., 2017, P BLACK HAT US
   Ng Alfred, 2018, EQUIFAX HACK HAPPENE
   NIST National Vulnerability Database, VULN SUMM CVE 2021 2
   OpenJ9, OPENJ9 DOWNL
   OpenJDK, JEP 290 FILT INC SER
   Oracle, 2018, COR LIB SER FILT
   Oracle, SEC COD GUID JAV SE
   Oracle, 2021, LONG TERM PERS
   Oracle, OR SE DOWNL
   OWASP, 2021, BUFF OV
   OWASP, 2021, OWASP TOP 10 2021
   OWASP, A8 2017 INS DES
   Peles O., 2015, 9 USENIX WORKSHOP OF
   Raghavan Laksh, 2016, LESSONS LEARNED JAVA
   Rasheed S, 2020, IEEE INT CONF AUTOM, P1209, DOI 10.1145/3324884.3418931
   Red Hat, 2014, JAV DES FLAWS 2
   Riggs R, 1996, COMPUT SYST, V9, P291
   Schneider Christian., 2019, JAVA DESERIALIZATION
   Seacord Robert, 2017, COMBATING JAVA DESER, DOI DOI 10.13140/RG.2.2.34012.49283
   Shacham H, 2007, CCS'07: PROCEEDINGS OF THE 14TH ACM CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P552
   Shahriar Hossain., 2016, P 31 ANN ACM S APPL, P801
   Shcherbakov M, 2021, 28TH ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2021), DOI 10.14722/ndss.2021.24550
   Snyk, 2022, SNYK CLI
   Software Engineering Institute, PREV DES UNTR DAT
   Stepankin Michael, 2015, REMOTE CODE EXECUTIO
   The MITRE Corporation, 2020, TERM GLOSS TERMS US
   The MITRE Corporation, 2020, US
   Tracy Miles, 2007, GUIDELINES ELECT MAI
   U.S. Department of Homeland Security (DHS) Cybersecurity Infrastructure Security Agency (CISA) and The MITRE Corporation, TERM
   Waratek, DES PROBL
   Younan Y, 2015, 22ND ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2015), DOI 10.14722/ndss.2015.23190
NR 69
TC 3
Z9 3
U1 2
U2 5
PU ASSOC COMPUTING MACHINERY
PI NEW YORK
PA 1601 Broadway, 10th Floor, NEW YORK, NY USA
SN 1049-331X
EI 1557-7392
J9 ACM T SOFTW ENG METH
JI ACM Trans. Softw. Eng. Methodol.
PD JAN
PY 2023
VL 32
IS 1
AR 25
DI 10.1145/3554732
PG 45
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA C9GD0
UT WOS:000964909700025
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Xu, SH
   Gao, Y
   Fan, LL
   Liu, ZL
   Liu, Y
   Ji, H
AF Xu, Sihan
   Gao, Ya
   Fan, Lingling
   Liu, Zheli
   Liu, Yang
   Ji, Hua
TI LiDetector: License Incompatibility Detection for Open Source Software
SO ACM TRANSACTIONS ON SOFTWARE ENGINEERING AND METHODOLOGY
LA English
DT Article
DE Open source software; license; incompatibility detection
AB Open-source software (OSS) licenses dictate the conditions, which should be followed to reuse, distribute, and modify software. Apart from widely-used licenses such as the MIT License, developers are also allowed to customize their own licenses (called custom license), whose descriptions are more flexible. The presence of such various licenses imposes challenges to understand licenses and their compatibility. To avoid financial and legal risks, it is essential to ensure license compatibility when integrating third-party packages or reusing code accompanied with licenses. In this work, we propose LiDetector, an effective tool that extracts and interprets OSS licenses (including both official licenses and custom licenses), and detects license incompatibility among these licenses. Specifically, LiDetector introduces a learning-based method to automatically identify meaningful license terms from an arbitrary license, and employs Probabilistic Context-Free Grammar (PCFG) to infer rights and obligations for incompatibility detection. Experiments demonstrate that LiDetector outperforms existing methods with 93.28% precision for term identification, and 91.09% accuracy for right and obligation inference, and can effectively detect incompatibility with 10.06% FP rate and 2.56% FN rate. Furthermore, with LiDetector, our large-scale empirical study on 1,846 projects reveals that 72.91% of the projects are suffering from license incompatibility, including popular ones such as the MIT License and the Apache License. We highlighted lessons learned from perspectives of different stakeholders and made all related data and the replication package publicly available to facilitate follow-up research.
C1 [Xu, Sihan; Fan, Lingling; Liu, Zheli; Ji, Hua] Nankai Univ, Coll Cyber Sci, TKLNDST, 38 Tongyan Rd, Tianjin 300350, Peoples R China.
   [Gao, Ya] Nankai Univ, Coll Comp Sci, TKLNDST, 38 Tongyan Rd, Tianjin 300350, Peoples R China.
   [Liu, Yang] Zhejiang Sci Tech Univ, 928,2 St,Xiasha Higher Educ Pk, Hangzhou 310000, Zhejiang, Peoples R China.
   [Liu, Yang] Nanyang Technol Univ, 50 Nanyang Ave, Singapore 639798, Singapore.
C3 Nankai University; Nankai University; Zhejiang Sci-Tech University;
   Nanyang Technological University
RP Fan, LL (corresponding author), Nankai Univ, Coll Cyber Sci, TKLNDST, 38 Tongyan Rd, Tianjin 300350, Peoples R China.
EM xusihan@nankai.edu.cn; gaoya_cs@mail.nankai.edu.cn;
   linglingfan@nankai.edu.cn; liuzheli@nankai.edu.cn; yangliu@ntu.edu.sg;
   hua.ji@nankai.edu.cn
RI Xu, Sihan/HOF-7293-2023
OI Xu, Sihan/0000-0002-6887-6231
FU National Natural Science Foundation of China [62102197]; National Key
   Research Project of China [2021YFF0307202, 2020YFB1005700]
FX This work was supported by National Natural Science Foundation of China
   (No. 62102197) and National Key Research Project of China (No.
   2021YFF0307202 and No. 2020YFB1005700).
CR Alspaugh TA, 2010, J ASSOC INF SYST, V11, P730
   Alspaugh TA, 2009, PROCEEDINGS OF THE 2009 17TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, P24, DOI 10.1109/RE.2009.22
   Andow B, 2019, PROCEEDINGS OF THE 28TH USENIX SECURITY SYMPOSIUM, P585
   BDF, 2021, BACKD FACT
   Blosc, 2021, BLOCK SHUFFL LOSS CO
   Chen S, 2020, PROC INT CONF SOFTW, P1310, DOI 10.1145/3377811.3380417
   Chen S, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P797, DOI 10.1145/3236024.3275523
   choosealicense, 2012, CHOOS OP SOURC LIC
   facebookarchive, 2021, AUGM TRAFF CONTR
   Fan RY, 2020, ISPRS INT J GEO-INF, V9, DOI 10.3390/ijgi9010015
   Gangadharan GR, 2012, INFORM SYST FRONT, V14, P143, DOI 10.1007/s10796-009-9180-1
   German DM, 2012, IEEE SOFTWARE, V29, P58, DOI 10.1109/MS.2012.50
   German Daniel M., 2010, P 25 IEEE ACM INT C, P437, DOI [10.1145/1858996.1859088, DOI 10.1145/1858996.1859088]
   Gobeille R, 2008, P 2008 INT WORK C MI, P47, DOI DOI 10.1145/1370750.1370763
   Gordon T. F., 2011, P 13 INT C ART INT L, P51
   Gordon TF, 2014, FRONT ARTIF INTEL AP, V266, P461, DOI 10.3233/978-1-61499-436-7-461
   Gordon Thomas F, 2010, QUALIPSO, V79, P80
   Guo H, 2022, ACM T SOFTW ENG METH, V31, DOI 10.1145/3498537
   Guo H, 2021, P INT COMP SOFTW APP, P1020, DOI 10.1109/COMPSAC51774.2021.00138
   HaboMalHunter, 2021, HAB LIN MALW AN SYST
   Higashi Y, 2016, INT WORKSH EMPIR ENG, P30, DOI 10.1109/IWESEP.2016.20
   Kapitsaki Georgia M., 2014, Software Reuse for Dynamic Systems in the Cloud and Beyond 14th International Conference on Software Reuse, ICSR 2015. Proceedings: LNCS 8919, P90, DOI 10.1007/978-3-319-14130-5_7
   Kapitsaki GM, 2021, IEEE T SOFTWARE ENG, V47, P919, DOI 10.1109/TSE.2019.2909021
   Kapitsaki GM, 2017, ASIA PAC SOFWR ENG, P540, DOI 10.1109/APSEC.2017.62
   Kapitsaki GM, 2017, J SYST SOFTWARE, V131, P386, DOI 10.1016/j.jss.2016.06.064
   Karvelis P, 2018, IEEE IJCNN
   kevin, 2012, Software licenses in plain english
   Li LQ, 2017, PROC IEEE INT CONF S, P249, DOI 10.1109/ICSME.2017.46
   librariesio, 2015, CHECK COMP DIFF SPDX
   Ling, 2003, ALPH LIST PART OF SP
   Linux Foundation, 2018, SOFTW PACK DAT EXCH
   Liu CW, 2022, PROC INT CONF SOFTW, P672, DOI 10.1145/3510003.3510142
   Mancinelli F, 2006, IEEE INT CONF AUTOM, P199
   Mathur A, 2012, IEEE ANNU SOFTW ENG, P168, DOI 10.1109/SEW.2012.24
   nltk, 2021, Natural Language Toolkit 3.6.2
   Opensource, 2021, WHAT IS OP SOURC
   Paschalides D, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P1047, DOI 10.1145/2950290.2983939
   paul, 2021, FULL EXTRACTOR CLASS
   Pennington J., 2014, P 2014 C EMP METH NA, P1532
   pivotal, 2021, FIND LIC YOUR PROJ D
   ProgrammerSought, 2021, 1 CAS GPL AGR CHIN I
   PyPi, 2021, FIND INST PUBL PYTH
   Le Q, 2014, PR MACH LEARN RES, V32, P1188
   Reddy J., 2015, The Consequences of Violating Open Source Licenses
   Reimers N, 2017, Arxiv, DOI [arXiv:1707.06799, DOI 10.48550/ARXIV.1707.06799, 10.48550/ARXIV.1707.06799]
   robinhood, 2021, FAUST
   Rosen Lawrence., 2004, Open Source Licensing: Software Freedom and Intellectual Property Law
   Scicluna J, 2016, FUND INFORM, V146, P379, DOI 10.3233/FI-2016-1392
   Socher R., 2013, P 2013 C EMP METH NA, V2013, P1631, DOI DOI 10.1371/JOURNAL.PONE.0073791
   Solakidis GS, 2014, 2014 IEEE/WIC/ACM INTERNATIONAL JOINT CONFERENCES ON WEB INTELLIGENCE (WI) AND INTELLIGENT AGENT TECHNOLOGIES (IAT), VOL 2, P102, DOI 10.1109/WI-IAT.2014.86
   SPDX, 2018, GNU LESS GEN PUBL LI
   SPDX, 2018, ZOP PUBL LIC 2 1
   SPDX, 2018, BSD 3 CLAUS NEW REV
   SPDX, 2018, LICENSE
   SPDX, 2018, CREAT COMM ATTR SHAR
   SPDX, 2021, SPDX LIC LIST
   SPDX, 2021, CREAT COMM ATTR 3 0
   SPDX, 2018, AP LIC 2 0
   Stanford NLP Group, 2020, COR
   Statsite, 2021, STATS
   ThomasF Gordon, 2013, P 14 INT C ART INT L, P243, DOI DOI 10.1145/2514601.2514637
   Tuunanen T, 2009, AUTOMAT SOFTW ENG, V16, P455, DOI 10.1007/s10515-009-0054-z
   Wheeler David A., 2007, FREE LIB OPEN SOURCE
   Xia L., 2019, Proceedings of the 2019 3rd international conference on computer science and Artifcial intelligence, P133
   Xu HongBo, 2010, PROCEDDINGS 2010 INT, P1
   Xu Sihan, 2021, LIDETECTOR LICENSE I
   Zhan X, 2021, PROC INT CONF SOFTW, P1695, DOI 10.1109/ICSE43902.2021.00150
   Zhan X, 2020, IEEE INT CONF AUTOM, P919, DOI 10.1145/3324884.3416582
   Zhan Xian, 2021, IEEE T SOFTWARE ENG, V2021, P1
NR 69
TC 4
Z9 5
U1 1
U2 3
PU ASSOC COMPUTING MACHINERY
PI NEW YORK
PA 1601 Broadway, 10th Floor, NEW YORK, NY USA
SN 1049-331X
EI 1557-7392
J9 ACM T SOFTW ENG METH
JI ACM Trans. Softw. Eng. Methodol.
PD JAN
PY 2023
VL 32
IS 1
AR 22
DI 10.1145/3518994
PG 28
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA C9GD0
UT WOS:000964909700022
DA 2024-07-18
ER

PT J
AU Zdun, U
   Queval, PJ
   Simhandl, G
   Scandariato, R
   Chakravarty, S
   Jelic, M
   Jovanovic, A
AF Zdun, Uwe
   Queval, Pierre-Jean
   Simhandl, Georg
   Scandariato, Riccardo
   Chakravarty, Somik
   Jelic, Marjan
   Jovanovic, Aleksandar
TI Microservice Security Metrics for Secure Communication, Identity
   Management, and Observability
SO ACM TRANSACTIONS ON SOFTWARE ENGINEERING AND METHODOLOGY
LA English
DT Article
DE Microservice architecture; microservice security; software architecture
   metrics; software architecture detectors
ID SOFTWARE ARCHITECTURE RECONSTRUCTION; MODELS
AB Microservice architectures are increasingly being used to develop application systems. Despite many guidelines and best practices being published, architecting microservice systems for security is challenging. Reasons are the size and complexity of microservice systems, their polyglot nature, and the demand for the continuous evolution of these systems. In this context, to manually validate that security architecture tactics are employed as intended throughout the system is a time-consuming and error-prone task. In this article, we present an approach to avoid such manual validation before each continuous evolution step in a microservice system, which we demonstrate using three widely used categories of security tactics: secure communication, identity management, and observability. Our approach is based on a reviewof existing security guidelines, the gray literature, and the scientific literature, from which we derived Architectural Design Decisions (ADDs) with the found security tactics as decision options. In our approach, we propose novel detectors to detect these decision options automatically and formally defined metrics to measure the conformance of a system to the different options of the ADDs. We apply the approach to a case study data set of 10 open source microservice systems, plus another 20 variants of these systems, for which we manually inspected the source code for security tactics. We demonstrate and assess the validity and appropriateness of our metrics by performing an assessment of their conformance to the ADDs in our systems' dataset through statistical methods.
C1 [Zdun, Uwe; Queval, Pierre-Jean; Simhandl, Georg] Univ Vienna, Fac Comp Sci, Res Grp Software Architecture, Wahringerstr 29, A-1090 Vienna, Austria.
   [Scandariato, Riccardo] Hamburg Univ Technol TUHH, Blohmstr 15, D-21079 Hamburg, Germany.
   [Chakravarty, Somik; Jelic, Marjan; Jovanovic, Aleksandar] European Risk & Resilience Inst EU VRi, Filderhauptstr 142, D-70599 Stuttgart, Germany.
C3 University of Vienna; Hamburg University of Technology
RP Zdun, U (corresponding author), Univ Vienna, Fac Comp Sci, Res Grp Software Architecture, Wahringerstr 29, A-1090 Vienna, Austria.
EM uwe.zdun@univie.ac.at; pierre-jean.queval@univie.ac.at;
   georg.simhandl@univie.ac.at; riccardo.scandariato@tuhh.de;
   schakravarty@risk-technologies.com; mjelic@risk-technologies.com;
   jovanovic@risk-technologies.com
RI Zdun, Uwe/AFR-2161-2022
OI Queval, Pierre-Jean/0000-0003-4222-5075; Jelic,
   Marjan/0000-0003-2195-4105; Jovanovic, Aleksandar/0000-0002-2624-4586;
   Zdun, Uwe/0000-0002-6233-2591; Simhandl, Georg/0000-0003-0516-3274
FU European Union [952647]; FWF (Austrian Science Fund) [IAC2: I 4731-N,
   API-ACE: I 4268]
FX Our work has received funding from the European Union's Horizon 2020
   research and innovation programme under grant agreement No 952647
   (AssureMOSS project). This work was supported by: FWF (Austrian Science
   Fund) project API-ACE: I 4268; FWF (Austrian Science Fund) project
   IAC<SUP>2</SUP>: I 4731-N.
CR Airola A, 2011, COMPUT STAT DATA AN, V55, P1828, DOI 10.1016/j.csda.2010.11.018
   Alshuqayran N, 2018, 2018 IEEE 15TH INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE (ICSA), P47, DOI 10.1109/ICSA.2018.00014
   Avritzer A, 2020, 2020 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE COMPANION (ICSA-C 2020), P1, DOI 10.1109/ICSA-C50368.2020.00007
   Bauer A, 2011, COMPUT J, V54, P58, DOI 10.1093/comjnl/bxq042
   Bogner J, 2017, 11TH EUROPEAN CONFERENCE ON SOFTWARE ARCHITECTURE (ECSA 2017) - COMPANION VOLUME, P195, DOI 10.1145/3129790.3129816
   Bunke M, 2011, LECT NOTES COMPUT SC, V6542, P156, DOI 10.1007/978-3-642-19125-1_12
   Chondamrongkul N, 2020, 2020 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE COMPANION (ICSA-C 2020), P79, DOI 10.1109/ICSA-C50368.2020.00024
   Cloud Security Alliance, 2020, BEST PRACT IMPL SEC
   Deissenboeck F., 2010, 2010 32nd International Conference on Software Engineering (ICSE), P247, DOI 10.1145/1810295.1810343
   Ducasse S, 2009, IEEE T SOFTWARE ENG, V35, P573, DOI 10.1109/TSE.2009.19
   Engel T, 2018, LECT NOTES BUS INF P, V317, P74, DOI 10.1007/978-3-319-92901-9_8
   Flora Jose, 2020, 2020 IEEE International Symposium on Software Reliability Engineering Workshops (ISSREW), P131, DOI 10.1109/ISSREW51248.2020.00051
   Garcia J, 2013, IEEE INT CONF AUTOM, P486, DOI 10.1109/ASE.2013.6693106
   Garousi V., 2020, Benefitting from the Grey Literature in Software Engineering Research, P385
   Garousi V, 2019, INFORM SOFTWARE TECH, V106, P101, DOI 10.1016/j.infsof.2018.09.006
   Gerds TA, 2006, BIOMETRICAL J, V48, P1029, DOI 10.1002/bimj.200610301
   Granchelli G, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE WORKSHOPS (ICSAW), P46, DOI 10.1109/ICSAW.2017.48
   Guo GYB, 1999, INT FED INFO PROC, V12, P15
   Hafiz M., 2012, PROC ACM INT S NEW I, P139
   Haitzer T, 2014, SCI COMPUT PROGRAM, V90, P135, DOI 10.1016/j.scico.2013.10.004
   Hammad M, 2019, J SYST SOFTWARE, V149, P83, DOI 10.1016/j.jss.2018.11.049
   Harrell FE, 2015, SPRINGER SER STAT, DOI 10.1007/978-3-319-19425-7
   Ingeno J., 2018, Software Architect's Handbook Become a Successful Software Architect by Implementing Effective Architecture Concepts
   Jajodia S, 2011, 2011 - MILCOM 2011 MILITARY COMMUNICATIONS CONFERENCE, P1339, DOI 10.1109/MILCOM.2011.6127490
   Jasser S, 2020, IEEE 17TH INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE (ICSA 2020), P35, DOI 10.1109/ICSA47634.2020.00012
   Kattan Michael W, 2018, Diagn Progn Res, V2, P7, DOI 10.1186/s41512-018-0029-2
   Laskey Ken, 2009, OASIS COMMITTEE DRAF, V2, P26
   Levin J, 2020, IEEE INT CONF CL NET, DOI 10.1109/CLOUDNET51028.2020.9335808
   Lewis J., 2004, Microservices: A definition of this new architectural term
   Mens K., 2002, P 14 INT C SOFTWARE, P289
   Murphy G. C., 1995, SIGSOFT Software Engineering Notes, V20, P18, DOI 10.1145/222132.222136
   Myers J. L., 2013, Research design and statistical analysis, DOI DOI 10.4324/9780203726631
   Newman S., 2015, BUILDING MICROSERVIC
   NIST, 2019, NIST special publication (SP) 800-204, security strategies for microservices-based application systems
   Noel S., 2017, Network Security Metrics, P141
   Ntentos E, 2021, COMPUTING, V103, P2521, DOI 10.1007/s00607-021-01002-z
   OWASP, 2021, MICR BAS SEC ARCH DO
   Pahl C, 2016, PROCEEDINGS OF THE 6TH INTERNATIONAL CONFERENCE ON CLOUD COMPUTING AND SERVICES SCIENCE, VOL 1 (CLOSER), P137, DOI 10.5220/0005785501370146
   Parrend Pierre, 2017, 1 ARK COMPL SYST DIG
   Pautasso Cesare., 2009, P 18 INT C WORLD WID
   Payne S.C., 2006, A guide to security metrics
   Peldszus S, 2019, 2019 ACM/IEEE 22ND INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS 2019), P23, DOI 10.1109/MODELS.2019.00-18
   Peldszus S, 2018, PROCEEDINGS OF THE 17TH ACM SIGPLAN INTERNATIONAL CONFERENCE ON GENERATIVE PROGRAMMING: CONCEPTS AND EXPERIENCES (GPCE'18), P93, DOI 10.1145/3278122.3278126
   Pietrantuono R, 2018, PROC INT SYMP SOFTW, P25, DOI 10.1109/ISSRE.2018.00014
   Quartel D, 2007, IEEE INT ENTERP DIST, P229, DOI 10.1109/EDOC.2007.11
   Rademacher F, 2019, 2019 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE (ICSA), P21, DOI 10.1109/ICSA.2019.00011
   Ramos A, 2017, IEEE COMMUN SURV TUT, V19, P2704, DOI 10.1109/COMST.2017.2745505
   Richardson C., 2017, A pattern language for microservices
   Schumacher M., 2013, Security Patterns: Integrating Security and Systems Engineering
   Skowronski J., 2019, Best practices for event-driven microservice architecture
   Sohr K, 2010, LECT NOTES COMPUT SC, V5965, P70, DOI 10.1007/978-3-642-11747-3_6
   Steyerberg EW, 2010, EPIDEMIOLOGY, V21, P128, DOI 10.1097/EDE.0b013e3181c30fb2
   Taibi D, 2018, IEEE SOFTWARE, V35, P56, DOI 10.1109/MS.2018.2141031
   Torkura KA, 2018, IEEE INT SYMP PARAL, P932, DOI 10.1109/BDCloud.2018.00137
   van Deursen A, 2004, FOURTH WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE (WICSA 2004), PROCEEDINGS, P122, DOI 10.1109/WICSA.2004.1310696
   Vanciu R, 2013, IEEE INT CONF AUTOM, P334, DOI 10.1109/ASE.2013.6693092
   Vianden Matthias, 2014, 2014 21st Asia-Pacific Software Engineering Conference (APSEC), P183, DOI 10.1109/APSEC.2014.37
   Wang LY, 2008, LECT NOTES COMPUT SC, V5094, P283
   Woschek Martin, 2015, OWASP CHEAT SHEETS, P315
   Zdun U, 2017, LECT NOTES COMPUT SC, V10601, P411, DOI 10.1007/978-3-319-69035-3_29
   Zdun U, 2018, LECT NOTES COMPUT SC, V11236, P73, DOI 10.1007/978-3-030-03596-9_5
   Zimmermann O., 2019, Microservice API patterns
   Zimmermann O, 2007, LECT NOTES COMPUT SC, V4880, P15
   Zimmermann O, 2017, COMPUT SCI-RES DEV, V32, P301, DOI 10.1007/s00450-016-0337-0
NR 64
TC 7
Z9 7
U1 7
U2 14
PU ASSOC COMPUTING MACHINERY
PI NEW YORK
PA 1601 Broadway, 10th Floor, NEW YORK, NY USA
SN 1049-331X
EI 1557-7392
J9 ACM T SOFTW ENG METH
JI ACM Trans. Softw. Eng. Methodol.
PD JAN
PY 2023
VL 32
IS 1
AR 16
DI 10.1145/3532183
PG 34
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA C9GD0
UT WOS:000964909700016
OA Bronze, Green Published
DA 2024-07-18
ER

PT J
AU André, É
   Lime, D
   Marinho, D
   Sun, J
AF Andre, Etienne
   Lime, Didier
   Marinho, Dylan
   Sun, Jun
TI Guaranteeing Timed Opacity using Parametric Timed Model Checking
SO ACM TRANSACTIONS ON SOFTWARE ENGINEERING AND METHODOLOGY
LA English
DT Article
DE Opacity; timed automata; IMITATOR; parameter synthesis
ID SIDE; AUTOMATA; NONINTERFERENCE; VERIFICATION; REACHABILITY; HARDWARE;
   NOTION; FLOW
AB Information leakage can have dramatic consequences on systems security. Among harmful information leaks, the timing information leakage occurs whenever an attacker successfully deduces confidential internal information. In this work, we consider that the attacker has access (only) to the system execution time. We address the following timed opacity problem: given a timed system, a private location and a final location, synthesize the execution times from the initial location to the final location for which one cannot deduce whether the system went through the private location. We also consider the full timed opacity problem, asking whether the system is opaque for all execution times. We show that these problems are decidable for timed automata (TAs) but become undecidable when one adds parameters, yielding parametric timed automata (PTAs). We identify a subclass with some decidability results. We then devise an algorithm for synthesizing PTAs parameter valuations guaranteeing that the resulting TA is opaque. We finally show that our method can also apply to program analysis.
C1 [Andre, Etienne; Marinho, Dylan] Univ Lorraine, LORIA, INRIA, CNRS, LORIA Campus Sci BP 239, F-54506 Vandoeuvre Les Nancy, France.
   [Lime, Didier] Ecole Cent Nantes, LS2N, UMR CNRS 6004, 1 Rue Noe,BP 92101, F-44321 Nantes 3, France.
   [Sun, Jun] Singapore Management Univ, Sch Informat Syst, Singapore, Singapore.
   [Sun, Jun] Singapore Management Univ, Sch Comp & Informat Syst, Room 4054,2,81 Victoria St, Singapore 188065, Singapore.
C3 Inria; Universite de Lorraine; Centre National de la Recherche
   Scientifique (CNRS); Nantes Universite; Ecole Centrale de Nantes;
   Singapore Management University; Singapore Management University
RP André, É (corresponding author), Univ Lorraine, LORIA, INRIA, CNRS, LORIA Campus Sci BP 239, F-54506 Vandoeuvre Les Nancy, France.
EM eandre93430@lipn13.fr; Didier.Lime@ec-nantes.fr; dylan.marinho@loria.fr;
   junsun@smu.edu.sg
OI Marinho, Dylan/0000-0002-2548-6196; Lime, Didier/0000-0001-9429-7586;
   Andre, Etienne/0000-0001-8473-9555; Sun, Jun/0000-0002-3545-1392
FU ANR national research program PACS [ANR-14-CE28-0002]; ANR-NRF research
   program ProMiS [ANR-19-CE25-0015]; ERATO HASUO Metamathematics for
   Systems Design Project, JST [JPMJER1603]
FX This work is partially supported by the ANR national research program
   PACS (ANR-14-CE28-0002), by the ANR-NRF research program ProMiS
   (ANR-19-CE25-0015), and by ERATO HASUO Metamathematics for Systems
   Design Project (No. JPMJER1603), JST.
CR Abbasi IH, 2017, COMM COM INF SC, V694, P75, DOI 10.1007/978-3-319-53946-1_5
   Agat J., 2000, Conference Record of POPL'00: 27th ACM SIGPLAN-SIGACT. Symposium on Principles of Programming Languages. Papers Presented at the Symposium, P40, DOI 10.1145/325694.325702
   ALUR R, 1994, THEOR COMPUT SCI, V126, P183, DOI 10.1016/0304-3975(94)90010-8
   Alur R, 1999, THEOR COMPUT SCI, V211, P253, DOI 10.1016/S0304-3975(97)00173-4
   Alur R., 1993, Proceedings of the Twenty-Fifth Annual ACM Symposium on the Theory of Computing, P592, DOI 10.1145/167088.167242
   Ammar I, 2021, J INF SECUR APPL, V61, DOI 10.1016/j.jisa.2021.102926
   André É, 2021, LECT NOTES COMPUT SC, V12759, P552, DOI 10.1007/978-3-030-81685-8_26
   André E, 2020, IEEE INT C ENG COMP, P37, DOI 10.1109/ICECCS51672.2020.00012
   André É, 2020, LOG METH COMPUT SCI, V16, DOI 10.23638/LMCS-16(1:5)2020
   André É, 2019, LECT NOTES COMPUT SC, V11781, P115, DOI 10.1007/978-3-030-31784-3_7
   André É, 2019, LECT NOTES COMPUT SC, V11428, P211, DOI 10.1007/978-3-030-17465-1_12
   André É, 2019, INT J SOFTW TOOLS TE, V21, P203, DOI 10.1007/s10009-017-0467-0
   André É, 2017, INT CONF APPL CONCUR, P9, DOI 10.1109/ACSD.2017.19
   André É, 2009, INT J FOUND COMPUT S, V20, P819, DOI 10.1142/S0129054109006905
   Andre Etienne, 2018, LECT NOTES COMPUTER, V11022, P1, DOI [DOI 10.1007/978-3-030-00151-3_3, 10.1007/978-3-030-00151-3_3(cit, DOI 10.1007/978-3-030-00151-3_3(CIT]
   [Anonymous], 2016, P IEEE S REAL TIM EM
   Bagnara R, 2008, SCI COMPUT PROGRAM, V72, P3, DOI 10.1016/j.scico.2007.08.001
   Barbuti R, 2003, FUND INFORM, V54, P137
   Barbuti R, 2002, FUND INFORM, V51, P1
   Barthe G, 2011, MATH STRUCT COMP SCI, V21, P1207, DOI 10.1017/S0960129511000193
   Barthe G, 2006, ELECTRON NOTES THEOR, V153, P33, DOI 10.1016/j.entcs.2005.10.031
   Benattar G, 2015, INT J CONTROL, V88, P217, DOI 10.1080/00207179.2014.944356
   Benes N, 2015, LECT NOTES COMPUT SC, V9135, P69, DOI 10.1007/978-3-662-47666-6_6
   Bortz Andrew., 2007, INT C WORLD WIDE WEB, P621, DOI [10.1145/1242572.1242656, DOI 10.1145/1242572.1242656, 10 .1145/1242572.1242656]
   Bouyer P, 2021, INT J SOFTW TOOLS TE, V23, P229, DOI 10.1007/s10009-021-00606-2
   Bozzelli L, 2009, FORM METHOD SYST DES, V35, P121, DOI 10.1007/s10703-009-0074-0
   Bruyère V, 2008, ACM T COMPUT LOG, V9, DOI 10.1145/1342991.1342996
   Bruyère V, 2007, LOG METH COMPUT SCI, V3, DOI 10.2168/LMCS-3(1:7)2007
   Bryans JW, 2008, INT J INF SECUR, V7, P421, DOI 10.1007/s10207-008-0058-x
   Bundala D, 2014, LECT NOTES COMPUT SC, V8634, P123, DOI 10.1007/978-3-662-44522-8_11
   Cassez F, 2009, LECT NOTES COMPUT SC, V5576, P21, DOI 10.1007/978-3-642-02617-1_3
   Chao Wang, 2017, ACM SIGLOG News, V4, P76, DOI 10.1145/3090064.3090071
   Chattopadhyay S., 2011, Proceedings of the 2011 IEEE 32nd Real-Time Systems Symposium (RTSS 2011), P193, DOI 10.1109/RTSS.2011.25
   Coppens B, 2009, P IEEE S SECUR PRIV, P45, DOI 10.1109/SP.2009.19
   Dennis L. A., 2017, LNCS LNAI, V0315, P42, DOI [10.1007/978-3-319-66595-5_3, DOI 10.1007/978-3-319-66595-53]
   Doychev G., 2013, USENIX SEC S, P431
   Doyen L, 2007, INFORM PROCESS LETT, V102, P208, DOI 10.1016/j.ipl.2006.11.018
   Felten E.W., 2000, P 7 ACM C COMP COMM, P25, DOI [10.1145/352600.352606, DOI 10.1145/352600.352606]
   Frehse G., 2011, COMPUTER AIDED VERIF, P379, DOI [DOI 10.1007/978-3-642-22110-1, 10.1007/978-3-642-22110-1_30]
   Gardey G, 2007, ELECTRON NOTES THEOR, V180, P35, DOI 10.1016/j.entcs.2005.05.046
   Gerking C, 2018, LECT NOTES COMPUT SC, V10953, P27, DOI 10.1007/978-3-319-94496-8_3
   Göller S, 2021, LEIBNIZ INT PR INFOR, V187, DOI 10.4230/LIPIcs.STACS.2021.36
   Guo SJ, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P377, DOI 10.1145/3236024.3236028
   Henzinger Thomas A., 1991, P 18 ACM SIGPLAN SIG, P353, DOI [10.1145/99583.99629, DOI 10.1145/99583.99629]
   Hune T, 2002, J LOGIC ALGEBR PROGR, V52-3, P183, DOI 10.1016/S1567-8326(02)00037-1
   Jovanovic A, 2015, IEEE T SOFTWARE ENG, V41, P445, DOI 10.1109/TSE.2014.2357445
   Kocher P. C., 1996, Advances in Cryptology - CRYPTO'96. 16th Annual International Cryptology Conference. Proceedings, P104
   Kocher P, 2020, COMMUN ACM, V63, P93, DOI 10.1145/3399742
   Kotcher Robert., 2013, 2013 ACM SIGSAC Conference on Computer and Communications Security, CCS'13, Berlin, Germany, November 4-8, 2013, P1055, DOI DOI 10.1145/2508859.2516712
   Larsen K. G., 1997, International Journal on Software Tools for Technology Transfer, V1, P134, DOI 10.1007/s100090050010
   Lime D, 2009, LECT NOTES COMPUT SC, V5505, P54, DOI 10.1007/978-3-642-00768-2_6
   Lv MS, 2010, REAL TIM SYST SYMP P, P339, DOI 10.1109/RTSS.2010.30
   Miller JS, 2000, LECT NOTES COMPUT SC, V1790, P296
   Minsky M., 1967, Computation: finite and infinite machines
   Molnar D, 2006, LECT NOTES COMPUT SC, V3935, P156
   Nielson F, 2017, LECT NOTES COMPUT SC, V10460, P3, DOI 10.1007/978-3-319-63121-9_1
   Rosenmann A, 2019, LECT NOTES COMPUT SC, V11750, P181, DOI 10.1007/978-3-030-29662-9_11
   Schrijver Alexander, 1999, THEORY LINEAR INTEGE
   Sung CH, 2018, IEEE INT CONF AUTOM, P904, DOI 10.1145/3238147.3240485
   Vasilikos P, 2018, LECT NOTES COMPUT SC, V10804, P28, DOI 10.1007/978-3-319-89722-6_2
   Wang LT, 2018, LECT NOTES COMPUT SC, V11180, P44, DOI 10.1007/978-3-030-01461-2_3
   Wang LT, 2018, IEEE T COMPUT AID D, V37, P2845, DOI 10.1109/TCAD.2018.2857363
   Weispfenning V, 1999, ISSAC 99: PROCEEDINGS OF THE 1999 INTERNATIONAL SYMPOSIUM ON SYMBOLIC AND ALGEBRAIC COMPUTATION, P129, DOI 10.1145/309831.309888
   Wu M, 2018, ISSTA'18: PROCEEDINGS OF THE 27TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P15, DOI 10.1145/3213846.3213851
   Zhang J, 2018, LECT NOTES COMPUT SC, V10982, P157, DOI 10.1007/978-3-319-96142-2_12
NR 65
TC 3
Z9 3
U1 0
U2 2
PU ASSOC COMPUTING MACHINERY
PI NEW YORK
PA 1601 Broadway, 10th Floor, NEW YORK, NY USA
SN 1049-331X
EI 1557-7392
J9 ACM T SOFTW ENG METH
JI ACM Trans. Softw. Eng. Methodol.
PD OCT
PY 2022
VL 31
IS 4
AR 64
DI 10.1145/3502851
PG 36
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 4V3NS
UT WOS:000859387700008
OA Green Published, Green Submitted
DA 2024-07-18
ER

PT J
AU Lauko, H
   Korencik, L
   Rockai, P
AF Lauko, Henrich
   Korencik, Lukas
   Rockai, Petr
TI Verification of Programs Sensitive to Heap Layout
SO ACM TRANSACTIONS ON SOFTWARE ENGINEERING AND METHODOLOGY
LA English
DT Article
DE Heap; pointers; abstraction; refinement; program transformation
ID MODEL CHECKING
AB Most C and C++ programs use dynamically allocated memory (often known as a heap) to store and organize their data. In practice, it can be useful to compare addresses of different heap objects, for instance, to store them in a binary search tree or a sorted array. However, comparisons of pointers to distinct objects are inherently ambiguous: The address order of two objects can be reversed in different executions of the same program, due to the nature of the allocation algorithm and other external factors.
   This poses a significant challenge to program verification, since a sound verifier must consider all possible behaviors of a program, including an arbitrary reordering of the heap. A naive verification of all possibilities, of course, leads to a combinatorial explosion of the state space: For this reason, we propose an under-approximating abstract domain that can be soundly refined to consider all relevant heap orderings.
   We have implemented the proposed abstract domain and evaluated it against several existing software verification tools on a collection of pointer-manipulating programs. In many cases, existing tools only consider a single fixed heap order, which is a source of unsoundness. We demonstrate that using our abstract domain, this unsoundness can be repaired at only a very modest performance cost. Additionally, we show that, even though many verifiers ignore it, ambiguous behavior is present in a considerable fraction of programs from software verification competition (SV-COMP).
C1 [Lauko, Henrich; Korencik, Lukas; Rockai, Petr] Masaryk Univ, Bot 68a, Brno 60200, Czech Republic.
C3 Masaryk University Brno
RP Lauko, H (corresponding author), Masaryk Univ, Bot 68a, Brno 60200, Czech Republic.
EM xlauko@mail.muni.cz; xkorenc@mail.muni.cz; xrockai@fi.muni.cz
OI Rockai, Petr/0000-0002-8484-1063; Lauko, Henrich/0000-0002-5422-5884
CR Almossawi A., 2006, Analysis Tool Evaluation: Coverity Prevent, P7
   [Anonymous], 2020, NOT SUBTRACT COMPARE
   [Anonymous], 2008, P OSDI
   Baldoni R, 2018, ACM COMPUT SURV, V51, DOI 10.1145/3182657
   Baranova Zuzana, 2017, AUTOMATED TECHNOLOGY
   Beyer Dirk, 2011, Computer Aided Verification. Proceedings 23rd International Conference, CAV 2011, P184, DOI 10.1007/978-3-642-22110-1_16
   Bjorner N, 1997, THEOR COMPUT SCI, V173, P49, DOI 10.1016/S0304-3975(96)00191-0
   Cha SK, 2012, P IEEE S SECUR PRIV, P380, DOI 10.1109/SP.2012.31
   Chalupa Marek, 2020, Tools and Algorithms for the Construction and Analysis of Systems. 26th International Conference, TACAS 2020. Held as Part of the European Joint Conferences on Theory and Practice of Software, ETAPS 2020. Proceedings. Lecture Notes in Computer Science (LNCS 12079), P413, DOI 10.1007/978-3-030-45237-7_31
   Clarke E, 2004, LECT NOTES COMPUT SC, V2988, P168, DOI 10.1007/978-3-540-24730-2_15
   Clarke EdmundM., 2000, Proceedings of the International Conference on Computer Aided Veri cation (CAV), P154, DOI 10.1007/1072216715
   Cousot P, 2005, LECT NOTES COMPUT SC, V3444, P21
   Dudka Kamil, 2011, Computer Aided Verification. Proceedings 23rd International Conference, CAV 2011, P372, DOI 10.1007/978-3-642-22110-1_29
   Godefroid P, 2005, ACM SIGPLAN NOTICES, V40, P213, DOI 10.1145/1064978.1065036
   Heizmann Matthias, 2013, Computer Aided Verification. 25th International Conference, CAV 2013. Proceedings. LNCS 8044, P36, DOI 10.1007/978-3-642-39799-8_2
   KARR M, 1976, ACTA INFORM, V6, P133, DOI 10.1007/BF00268497
   Khurshid S, 2003, LECT NOTES COMPUT SC, V2619, P553
   Kokologiannakis M, 2017, SPIN'17: PROCEEDINGS OF THE 24TH ACM SIGSOFT INTERNATIONAL SPIN SYMPOSIUM ON MODEL CHECKING OF SOFTWARE, P172, DOI 10.1145/3092282.3092287
   Kroening Daniel, 2014, TOOLS ALGORITHMS CON, P389, DOI [10.1007/978-3-642-54862-8_26, DOI 10.1007/978-3-642-54862-8_26]
   Lauko H, 2018, LECT NOTES COMPUT SC, V11187, P313, DOI 10.1007/978-3-030-02508-3_17
   Malik Viktor, 2018, FORMAL METHODS COMPU, P1
   Mine A., 2006, Higher-Order and Symbolic Computation, V19, P31, DOI 10.1007/s10990-006-8609-1
   Morse J., 2014, TACAS, V8413, P405
   Rockai P, 2018, J SYST SOFTWARE, V143, P1, DOI 10.1016/j.jss.2018.04.026
   Schrammel P, 2016, LECT NOTES COMPUT SC, V9636, P905, DOI [10.1007/978-3-662-49674-9_56, 10.1007/97-3-662-49674-9_56]
   Sen K., 2005, P 10 EUR SOFTW ENG C, V30, P263, DOI DOI 10.1145/1081706.1081750
   Stallman R.M., 2003, Using the GNU compiler collection: For GCC version 4.4.7
   Yang H, 2008, LECT NOTES COMPUT SC, V5123, P385
NR 28
TC 0
Z9 0
U1 1
U2 2
PU ASSOC COMPUTING MACHINERY
PI NEW YORK
PA 1601 Broadway, 10th Floor, NEW YORK, NY USA
SN 1049-331X
EI 1557-7392
J9 ACM T SOFTW ENG METH
JI ACM Trans. Softw. Eng. Methodol.
PD OCT
PY 2022
VL 31
IS 4
AR 71
DI 10.1145/3508363
PG 27
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 4V3NS
UT WOS:000859387700015
DA 2024-07-18
ER

PT J
AU Masso, J
   García, F
   Pardo, C
   Pino, FJ
   Piattini, M
AF Masso, Jhon
   Garcia, Felix
   Pardo, Cesar
   Pino, Francisco J.
   Piattini, Mario
TI A Common Terminology for Software Risk Management
SO ACM TRANSACTIONS ON SOFTWARE ENGINEERING AND METHODOLOGY
LA English
DT Article
DE Risk management; integrated risk management; risk ontology; ISO 31000
ID ISO 31000; ONTOLOGY; INFORMATION; PRINCIPLES; STANDARDS; FRAMEWORK;
   MATURITY; PROJECTS; SUCCESS; DESIGN
AB In order to improve and sustain their competitiveness over time, organisations nowadays need to undertake different initiatives to adopt frameworks, models and standards that will allow them to align and improve their business processes. In spite of these efforts, organisations may still encounter governance and management problems. This is where Risk Management (RM) can play a major role, since its purpose is to contribute to the creation and preservation of value in the context of the organisation's processes. RM is a complex and subjective activity that requires experience and a high level of knowledge about risks, and it is for this reason that standardisation institutions and researchers have made great efforts to define initiatives to overcome these challenges. However, the RM field nevertheless presents a lack of uniformity in its terms and concepts, due to the different contexts and scopes of application, a situation that can generate ambiguities and misunderstandings. To address these issues, this paper aims to present an ontology called SRMO (Software RiskManagement Ontology), which seeks to unify the terms and concepts associated with RM and provide an integrated and holistic view of risk. In doing so, the Pipeline framework has been applied in order to assure and verify the quality of the proposed ontology, and it has been implemented in Protege and validated by means of competency questions. Three application scenarios of this ontology demonstrating their usefulness in the software engineering field are presented in this paper. We believe that this ontology can be useful for organisations that are interested in: (i) establishing an RM strategy from an integrated approach, (ii) defining the elements that help to identify risks and the criteria that support decision-making in risk assessment, and (iii) helping the involved stakeholders during the process of risk management.
C1 [Masso, Jhon; Garcia, Felix; Piattini, Mario] Univ Castilla La Mancha, Inst Technol & Informat Syst, Alarcos Res Grp, Ciudad Real 13071, Castilla La Man, Spain.
   [Masso, Jhon; Pardo, Cesar] Univ Cauca, Elect & Telecommun Engn Fac, GTI Res Grp, Calle 5 4-70, Popayan 190002, Cauca, Colombia.
   [Pino, Francisco J.] Univ Cauca, IDIS Res Grp, Elect & Telecommun Engn Fac, Calle 5 4-70, Popayan 190002, Cauca, Colombia.
C3 Universidad de Castilla-La Mancha; Universidad del Cauca; Universidad
   del Cauca
RP Masso, J (corresponding author), Univ Castilla La Mancha, Inst Technol & Informat Syst, Alarcos Res Grp, Ciudad Real 13071, Castilla La Man, Spain.; Masso, J (corresponding author), Univ Cauca, Elect & Telecommun Engn Fac, GTI Res Grp, Calle 5 4-70, Popayan 190002, Cauca, Colombia.
EM masso@unicauca.edu.co; felix.garcia@uclm.es; cpardo@unicauca.edu.co;
   fjpino@unicauca.edu.co; mario.piattini@uclm.es
RI Piattini, Mario/F-6271-2013; Garcia, Felix/D-4299-2011
OI Piattini, Mario/0000-0002-7212-8279; Garcia, Felix/0000-0001-6460-0353;
   Masso Daza, Jhon Eder/0000-0002-9977-2881
FU BIZDEVOPS-GLOBAL project (Ministerio de Ciencia, Innovacion y
   Universidades, y Fondo Europeo de Desarrollo Regional FEDER)
   [RTI2018-098309-BC31]; G3SOFT project (Consejeria de Educacion, Cultura
   y Deportes de la Junta de Comunidades de Castilla La Mancha, y Fondo
   Europeo de Desarrollo Regional FEDER) [SBPLY/17/180501/000150]
FX BIZDEVOPS-GLOBAL project (Ministerio de Ciencia, Innovacion y
   Universidades, y Fondo Europeo de Desarrollo Regional FEDER,
   RTI2018-098309-BC31); and G3SOFT project (Consejeria de Educacion,
   Cultura y Deportes de la Junta de Comunidades de Castilla La Mancha, y
   Fondo Europeo de Desarrollo Regional FEDER, SBPLY/17/180501/000150).
CR Abioye TE, 2020, J SOFTW-EVOL PROC, V32, DOI 10.1002/smr.2269
   Agrawal V., 2016, HAISA
   Ahmed M, 2007, ARES 2007: SECOND INTERNATIONAL CONFERENCE ON AVAILABILITY, RELIABILITY AND SECURITY, PROCEEDINGS, P400
   Andersson B, 2016, FRONT ARTIF INTEL AP, V283, P331, DOI 10.3233/978-1-61499-660-6-331
   [Anonymous], 2012, COBIT 5: A business framework for the governance and management of enterprise IT
   [Anonymous], 2006, Risk Management - Principles and Inventories for Risk Management / Risk Assessment methods and tools
   [Anonymous], 2013, GUIDE PROJECT MANAGE, V5
   [Anonymous], 2017, Managing successful projects with PRINCE2
   [Anonymous], 2002, RISK MAN STAND
   [Anonymous], 2009, ISO GUIDE 73 2009 RI
   [Anonymous], 2012, EUR C INF SYST ECIS
   [Anonymous], 2018, RISK MANAGEMENT GUID
   [Anonymous], 2014, EN ISO 55000
   [Anonymous], 2012, W3C RECOMMENDATION
   [Anonymous], 2011, 27005 ISO IEC
   Ansaldi Silvia, 2012, MOVE MEANINGFUL INTE, P444
   AS/NZS, 2004, 436020004 ASNZS
   Bandeira Judson, 2016, ARXIV
   Barafort B, 2019, J SOFTW-EVOL PROC, V31, DOI 10.1002/smr.1984
   Barafort B, 2018, COMPUT STAND INTER, V60, P57, DOI 10.1016/j.csi.2018.04.010
   Barafort B, 2017, COMPUT STAND INTER, V54, P176, DOI 10.1016/j.csi.2016.11.010
   Bertoa M., 2006, Ontologies for Software Engineering and Software Technology, P175, DOI DOI 10.1007/3-540-34518-3_6
   Boyce S, 2007, EDUC TECHNOL SOC, V10, P275
   Brownsword M, 2010, INT J KNOWL SYST SCI, V1, P1, DOI [10.4018/jkss.2010100101, 10.4018/jkss.2010100]
   BSI, 2016, ITGRUNDSCHUTZ KATALO
   Carr Marvin, 1993, CMUSEI93TR006
   Chaouch S, 2019, PROCEDIA COMPUT SCI, V164, P187, DOI 10.1016/j.procs.2019.12.171
   Christel Michael, 1996, SOFTWARE RISK MANAGE
   CMMI Institute, 2018, CMMI V20 AD TRANS GU
   CMMI Institute, 2018, CMMI MOD V2 0
   CMMI Product Team, 2010, Technical Report CMU/SEI-2010-TR-033
   Coral C., 2006, Ontologies for Software Engineering and Software Technology
   Cruz Claudinei Oliveira, 2019, REM, Int. Eng. J., V72, P47
   de Almeida Falbo Ricardo, 2009, International Journal of Business Process Integration and Management, V4, P239, DOI 10.1504/IJBPIM.2009.032281
   de Magalhaes RF, 2019, J CLEAN PROD, V212, P447, DOI 10.1016/j.jclepro.2018.12.023
   Durst S., 2016, Competitive strategies for small and medium enterprises: Increasing crisis resilience, and agility in turbulent times, P195, DOI DOI 10.1007/978-3-319-27303-7_13
   Durst S, 2019, J BUS RES, V105, P1, DOI 10.1016/j.jbusres.2019.08.002
   Eclipse Foundation, 2018, ECLIPSE PROCESS FRAM
   El Yamami A, 2018, PROCEEDINGS OF THE 3RD INTERNATIONAL CONFERENCE ON SMART CITY APPLICATIONS (SCA'18), DOI 10.1145/3286606.3286825
   El Yamami A, 2017, ENG TECHNOL APPL SCI, V7, P2062
   Everett C, 2011, COMPUT FRAUD SECUR, P5, DOI 10.1016/S1361-3723(11)70015-X
   Falbo R.d. A., 2002, 14th international conference on Software engineering and knowledge engineering (SEKE), P351, DOI DOI 10.1145/568760.568822
   Falbo RA, 2004, LECT NOTES COMPUT SC, V3096, P7
   Falbo Ricardo, 1998, USING ONTOLOGIES IMP
   Fensel Dieter., 2003, ONTOLOGIES SILVER BU, V2nd
   Fernandez-Lopez Mariano, 1997, Methontology: from ontological art towards ontological engineering
   Ferrari SLP, 2004, J APPL STAT, V31, P799, DOI 10.1080/0266476042000214501
   Fuang N, 2008, ROBOT CIM-INT MANUF, V24, P562, DOI 10.1016/j.rcim.2007.07.007
   García F, 2006, INFORM SOFTWARE TECH, V48, P631, DOI 10.1016/j.infsof.2005.07.001
   Gaspoz Cedric, 2019, New Knowledge in Information Systems and Technologies. Advances in Intelligent Systems and Computing (AISC 930), P253, DOI 10.1007/978-3-030-16181-1_24
   Goman M, 2019, 2019 60TH INTERNATIONAL SCIENTIFIC CONFERENCE ON INFORMATION TECHNOLOGY AND MANAGEMENT SCIENCE OF RIGA TECHNICAL UNIVERSITY (ITMS), DOI 10.1109/itms47855.2019.8940653
   Gomes J, 2016, PROCEDIA COMPUT SCI, V100, P489, DOI 10.1016/j.procs.2016.09.187
   Gómez-Pérez A, 2003, IN HAND I S, P251
   Gomez-Perez A., 2004, Ontological Engineering, V2nd, P1
   Gruber TR, 1995, INT J HUM-COMPUT ST, V43, P907, DOI 10.1006/ijhc.1995.1081
   Gruninger Michael, 1995, ROLE COMPETENCY QUES, P22, DOI [10.1007/978-0-387-34847-6_3, DOI 10.1007/978-0-387-34847-6_3]
   Guarino N, 1998, FR ART INT, V46, P3
   Hayat F, 2019, 2019 20TH IEEE/ACIS INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, ARTIFICIAL INTELLIGENCE, NETWORKING AND PARALLEL/DISTRIBUTED COMPUTING (SNPD), P145, DOI [10.1109/snpd.2019.8935813, 10.1109/SNPD.2019.8935813]
   Hillson David, 2006, PMI GLOBAL C P, P1
   Iivari J, 1998, INFORM SYST RES, V9, P164, DOI 10.1287/isre.9.2.164
   Information Systems Audit and Control Association [ISACA], 2020, RISK IT FRAM, V2nd
   ISACA, 2018, COBIT 2019 Framework: Introduction & Methodology
   ISACA, 2013, COBIT 5 RISK
   ISACA, 2012, COBIT 5 EN PROC
   ISO, 2019, 31010 ISO IEC
   ISO, 2007, ISO GUID 73 RISK MAN
   ISO, 2015, 15288 ISO IECIEEE
   ISO, 2017, 122072017 ISO IECIEE
   ISO, 2017, 15939 ISO IECIEEE
   ISO, 2015, 9001 ISO
   ISO, 2021, 16085 ISO IEC
   *ISO, 2009, 310102009 ISO IEC
   ISO 31000:2009, 2009, 310002009 ISO
   ISO/IEC, 2014, 270002014 ISOIEC
   ISO/IEC, 2013, 27001 ISO IEC
   Isotani S, 2015, IEEE LAT AM T, V13, P863, DOI 10.1109/TLA.2015.7069116
   Joshi A, 2018, INFORM MANAGE-AMSTER, V55, P368, DOI 10.1016/j.im.2017.09.003
   King BE, 2008, CHANDOS INF PROF SER, P1
   Kohl Herfried, 2020, GENERIC STANDARDS MA, P19, DOI [10.1007/978-3-030-35832-7_2, DOI 10.1007/978-3-030-35832-7_2]
   Lovrencic Sandra, 2008, 19th Central European Conference on Information and Intelligent Systems, P657
   Lykourentzou I, 2011, INT C COMMERCE BUS, P153, DOI 10.1109/CEC.2011.18
   Masso Jhon, 2015, REV PUBLICACIONES IN, V9, P107, DOI [10.22490/25394088.1437, DOI 10.22490/25394088.1437]
   Mcdaniel M, 2019, ACM COMPUT SURV, V52, DOI 10.1145/3329124
   Menezes J, 2019, SOFTWARE QUAL J, V27, P1149, DOI 10.1007/s11219-018-9427-5
   Meulbroek L.K., 2002, SSRN ELECT J, DOI [10.2139/ssrn.301331, DOI 10.2139/SSRN.301331]
   Mican C., 2019, Procedia Manufacturing, V41, P771, DOI DOI 10.1016/J.PROMFG.2019.09.069
   Minciencias, STAND MOD INT CONTR
   Miterev M, 2017, INT J PROJ MANAG, V35, P479, DOI 10.1016/j.ijproman.2016.12.007
   Mizen H, 2005, LECT NOTES COMPUT SC, V3799, P15
   Morozov VV, 2016, PROCEEDINGS OF THE 2016 IEEE FIRST INTERNATIONAL CONFERENCE ON DATA STREAM MINING & PROCESSING (DSMP), P405, DOI 10.1109/DSMP.2016.7583588
   Muelbroek L., 2002, RISK MANAG INSUR REV, P55, DOI [DOI 10.1111/1098-1616.00006, 10.1111/1098-1616.00006]
   Musen Mark A, 2015, AI Matters, V1, P4
   Nota G, 2010, NEW ECON WINDOWS, P235, DOI 10.1007/978-88-470-1778-8_14
   Noy N., 2001, KNOWLEDGE SYSTEMS LA, P32, DOI DOI 10.1016/J.ARTMED.2004.01.014
   Nurse Jason R. C., 2009, SUPPORTING COMP BUSI, P61
   Oktaba H, 2007, COMPUTER, V40, P21, DOI 10.1109/MC.2007.361
   *OMG, 2008, SOFTW SYST PROC ENG
   Pardo C, 2012, COMPUT STAND INTER, V34, P48, DOI 10.1016/j.csi.2011.05.005
   Pardo-Calvache César Jesús, 2014, Rev.fac.ing.univ. Antioquia, P29
   Peng GC, 2009, J ENTERP INF MANAG, V22, P587, DOI 10.1108/17410390910993554
   Peng GC, 2009, IND MANAGE DATA SYST, V109, P926, DOI 10.1108/02635570910982283
   Pinheiro MG, 2014, 16TH INTERNATIONAL CONFERENCE ON INFORMATION INTEGRATION AND WEB-BASED APPLICATIONS & SERVICES (IIWAS 2014), P554
   Pittl Benedikt, 2017, TWENTYFIFTH EUROPEAN
   PMI, 2020, PULS PROF 2020
   Poth A, 2019, J SOFTW-EVOL PROC, V31, DOI 10.1002/smr.1986
   Proença D, 2018, COMPUT STAND INTER, V60, P13, DOI 10.1016/j.csi.2018.04.007
   Proença D, 2017, CONF BUS INFORM, V1, P99, DOI 10.1109/CBI.2017.40
   Project Management Institute, 2009, Practice Standard for Project Risk Management
   Project Management Institute, 2019, The standard for Risk Management in Portfolios, Programs and Projects
   Rabbi MF, 2008, PROCEEDINGS OF NINTH ACIS INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, ARTIFICIAL INTELLIGENCE, NETWORKING AND PARALLEL/DISTRIBUTED COMPUTING, P773, DOI 10.1109/SNPD.2008.127
   Rampini GHS, 2019, PROCEDIA MANUF, V39, P894, DOI 10.1016/j.promfg.2020.01.400
   Rene Robin C. R, 2011, DEV ED ONTOLOGY SOFT, P610, DOI [10.1145/1947940.1948067, DOI 10.1145/1947940.1948067]
   Rodríguez A, 2017, INFORM SCIENCES, V375, P202, DOI 10.1016/j.ins.2016.09.053
   Rojrattanakorn Chanapan, 2017, 2017 5th Intl Conf on Applied Computing and Information Technology/4th Intl Conf on Computational Science/Intelligence and Applied Informatics/2nd Intl Conf on Big Data, Cloud Computing, Data Science (ACIT-CSII-BCD). Proceedings, P19, DOI 10.1109/ACIT-CSII-BCD.2017.26
   Roussey C, 2011, ADV INFORM KNOWL PRO, P9, DOI 10.1007/978-0-85729-724-2_2
   Ruiz F, 2004, INT J SOFTW ENG KNOW, V14, P323, DOI 10.1142/S0218194004001646
   Ruiz F., 2006, ONTOLOGIES SOFTWARE, P49
   Sales TP, 2018, LECT NOTES COMPUT SC, V11157, P121, DOI 10.1007/978-3-030-00847-5_11
   Sales TP, 2017, IEEE INT ENTERP DIST, P184, DOI 10.1109/EDOC.2017.32
   Sarantis D., 2009, 2009 INT C INTERNET, P1, DOI [10.1109/ICITST.2009.5402526, DOI 10.1109/ICITST.2009.5402526]
   Slagmulder R, 2018, BUS HORIZONS, V61, P733, DOI 10.1016/j.bushor.2018.05.001
   Soydan G., 2006, WORKSHOP SEMANTIC WE
   Studer R, 1998, DATA KNOWL ENG, V25, P161, DOI 10.1016/S0169-023X(97)00056-6
   Suroso Jarot S., 2018, Procedia Computer Science, V135, P202, DOI 10.1016/j.procs.2018.08.167
   Tautz C., 1998, 01598E IESE
   Treasury Board of Canada Secretariat, 2016, GUID INT RISK MAN
   Uschold M, 1996, KNOWL ENG REV, V11, P93, DOI 10.1017/S0269888900007797
   vanHeijst G, 1997, INT J HUM-COMPUT ST, V46, P183, DOI 10.1006/ijhc.1996.0090
   Vrandecic D., 2010, Ontology evaluation
   W3C, 2013, SPARQL 1.1 query language
   Wickboldt JA, 2011, COMPUT NETW, V55, P2954, DOI 10.1016/j.comnet.2011.05.025
   Wulandari SA, 2019, PROCEDIA COMPUT SCI, V161, P168, DOI 10.1016/j.procs.2019.11.112
   Yang L, 2019, COMPUT IND, V111, P148, DOI 10.1016/j.compind.2019.05.003
NR 133
TC 2
Z9 2
U1 1
U2 12
PU ASSOC COMPUTING MACHINERY
PI NEW YORK
PA 1601 Broadway, 10th Floor, NEW YORK, NY USA
SN 1049-331X
EI 1557-7392
J9 ACM T SOFTW ENG METH
JI ACM Trans. Softw. Eng. Methodol.
PD OCT
PY 2022
VL 31
IS 4
AR 59
DI 10.1145/3498539
PG 47
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 4V3NS
UT WOS:000859387700003
DA 2024-07-18
ER

PT J
AU Chen, JC
   Xia, X
   Lo, D
   Grundy, J
AF Chen, Jiachi
   Xia, Xin
   Lo, David
   Grundy, John
TI Why Do Smart Contracts Self-Destruct? Investigating the Selfdestruct
   Function on Ethereum
SO ACM TRANSACTIONS ON SOFTWARE ENGINEERING AND METHODOLOGY
LA English
DT Article
DE Smart contract; ethereum; selfdestruct function; empirical study
AB The selfdestruct function is provided by Ethereum smart contracts to destroy a contract on the blockchain system. However, it is a double-edged sword for developers. On the one hand, using the selfdestruct function enables developers to remove smart contracts (SCs) from Ethereum and transfers Ethers when emergency situations happen, e.g., being attacked. On the other hand, this function can increase the complexity for the development and open an attack vector for attackers. To better understand the reasons why SC developers include or exclude the selfdestruct function in their contracts, we conducted an online survey to collect feedback from them and summarize the key reasons. Their feedback shows that 66.67% of the developers will deploy an updated contract to the Ethereum after destructing the old contract. According to this information, we propose a method to find the self-destructed contracts (also called predecessor contracts) and their updated version (successor contracts) by computing the code similarity. By analyzing the difference between the predecessor contracts and their successor contracts, we found five reasons that led to the death of the contracts; two of them (i.e., Unmatched ERC20 Token and Limits of Permission) might affect the life span of contracts. We developed a tool named LIFESCOPE to detect these problems. LifeScope reports 0 false positives or negatives in detecting UNMATCHED ERC20 Token. In terms of Limits of Permission, LIFESCOPE achieves 77.89% of F-measure and 0.8673 of AUC in average. According to the feedback of developers who exclude selfdestruct functions, we propose suggestions to help developers use selfdestruct functions in Ethereum smart contracts better.
C1 [Chen, Jiachi; Xia, Xin; Grundy, John] Monash Univ, Clayton, Vic, Australia.
   [Lo, David] Singapore Management Univ, Singapore, Singapore.
C3 Monash University; Singapore Management University
RP Xia, X (corresponding author), Monash Univ, Clayton, Vic, Australia.
EM jiachi.chen@monash.edu; xin.xia@acm.org; davidlo@smu.edu.sg;
   John.Grundy@monash.edu
RI Grundy, John/I-6681-2012; Chen, Jiachi/HOC-4256-2023; Lo,
   David/A-2493-2012
OI Lo, David/0000-0002-4367-7201; Chen, Jiachi/0000-0002-0192-9992; Xia,
   Xin/0000-0002-6302-3256
FU ARC Laureate Fellowship [FL190100035]; National Research Foundation,
   Singapore under its Industry Alignment Fund-Pre-positioning (IAF-PP)
   Funding Initiative
FX This research/project is supported by ARC Laureate Fellowship
   FL190100035, and the National Research Foundation, Singapore under its
   Industry Alignment Fund-Pre-positioning (IAF-PP) Funding Initiative.
CR [Anonymous], 2020, EXP
   [Anonymous], 2019, About us
   [Anonymous], 2019, CRYPT
   Baeza-Yates R., 1999, MODERN INFORM RETRIE, V463
   Bartoletti M, 2020, FUTURE GENER COMP SY, V102, P259, DOI 10.1016/j.future.2019.08.014
   Bojanowski P., 2017, Transactions of the Association for Computational Linguistics, V5, P135, DOI DOI 10.1162/TACLA00051
   Bosu A, 2019, EMPIR SOFTW ENG, V24, P2636, DOI 10.1007/s10664-019-09708-7
   Chakraborty P, 2018, PROCEEDINGS OF THE 12TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT (ESEM 2018), DOI 10.1145/3239235.3240298
   Chen J., 2020, IEEE Trans. Softw. Eng.
   Chen TQ, 2016, KDD'16: PROCEEDINGS OF THE 22ND ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P785, DOI 10.1145/2939672.2939785
   Chen T, 2020, 27TH ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2020), DOI 10.14722/ndss.2020.24449
   Chen T, 2019, PROCEEDINGS OF THE 2019 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY (CCS'19), P1503, DOI 10.1145/3319535.3345664
   Chen T, 2018, IEEE INFOCOM SER, P1484, DOI 10.1109/INFOCOM.2018.8486401
   Chen WL, 2018, WEB CONFERENCE 2018: PROCEEDINGS OF THE WORLD WIDE WEB CONFERENCE (WWW2018), P1409, DOI 10.1145/3178876.3186046
   COHEN J, 1960, EDUC PSYCHOL MEAS, V20, P37, DOI 10.1177/001316446002000104
   CoinMarketCap, 2019, CRYPTOCURRENCY
   Consensys, 2019, ETH SMART CONTR BEST
   di Angelo M, 2020, LECT NOTES COMPUT SC, V12063, P389, DOI 10.1007/978-3-030-54455-3_28
   di Angelo M, 2019, BCC '19: PROCEEDINGS OF THE THIRD ACM WORKSHOP ON BLOCKCHAINS, CRYPTOCURRENCIES AND CONTRACTS, P1, DOI 10.1145/3327959.3329537
   Efanov D, 2018, PROCEDIA COMPUT SCI, V123, P116, DOI 10.1016/j.procs.2018.01.019
   Fan YR, 2021, IEEE T SOFTWARE ENG, V47, P1559, DOI 10.1109/TSE.2019.2929761
   Fan Yuanrui, 2018, IEEE T SOFTWARE ENG
   Flouri T, 2015, INFORM PROCESS LETT, V115, P643, DOI 10.1016/j.ipl.2015.03.006
   Fowler M., 1999, Refactoring: Improving the Design of Existing Code
   Frankenfield Jake, 2019, BLOCKCHAIN HARD FORK
   Fröwis M, 2019, LECT NOTES COMPUT SC, V11598, P93, DOI 10.1007/978-3-030-32101-7_7
   Gao ZP, 2021, IEEE T SOFTWARE ENG, V47, P2874, DOI 10.1109/TSE.2020.2971482
   Gao ZP, 2019, PROC IEEE INT CONF S, P394, DOI 10.1109/ICSME.2019.00067
   Global CCS Institute https:// doi.org/10.1007/springerreference_15392, 2019, ETHEREUM CLASSIC, DOI 10.1007/springerreference_15392
   Greene R., 2018, Proceedings of the 16th Australian Information Security Management Conference, P90
   Huang Q, 2018, EMPIR SOFTW ENG, V23, P418, DOI 10.1007/s10664-017-9522-4
   IEA, 2019, Global EV Outlook 2019-Scaling-up the transition to electric mobility, DOI DOI 10.1787/35FB60BD-EN
   Jiang B, 2018, IEEE INT CONF AUTOM, P259, DOI 10.1145/3238147.3238177
   Jiang LX, 2007, PROC INT CONF SOFTW, P96
   Kalra S, 2018, 25TH ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2018), DOI 10.14722/ndss.2018.23082
   Kitchenham BA, 2008, Guide to advanced empirical software engineering, P63, DOI [DOI 10.1007/978-1-84800-044-5_3, 10.1007/ 978-1-84800-044-5_3]
   Li Ao, 2018, ARXIV181207702
   Li XQ, 2020, FUTURE GENER COMP SY, V107, P841, DOI 10.1016/j.future.2017.08.020
   Luu L, 2016, CCS'16: PROCEEDINGS OF THE 2016 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P254, DOI 10.1145/2976749.2978309
   Mello Dobrik Eugene, 2021, GASTOKEN IO
   Mossberg M, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P1186, DOI 10.1109/ASE.2019.00133
   Mudge Nick, 2020, EIP2535
   Mythril, 2019, MYTHR SEC AN TOOL EV
   Nakamoto S., 2008, DECENTRALIZED BUSINE, V21260
   Niemetz Aina, 2014, J. Satisf. Boolean Model. Comput, V9, P53, DOI [10.3233/sat190101, DOI 10.3233/SAT190101]
   Nikolic I, 2018, 34TH ANNUAL COMPUTER SECURITY APPLICATIONS CONFERENCE (ACSAC 2018), P653, DOI 10.1145/3274694.3274743
   Openzeppelin, 2021, PAUS DOC
   PORTER MF, 1980, PROGRAM-AUTOM LIBR, V14, P130, DOI 10.1108/eb046814
   Rembacz Tomasz, 2020, DIFFCHECKER
   Ripple, 2019, RIPPL COIN
   Sebastiani F, 2002, ACM COMPUT SURV, V34, P1, DOI 10.1145/505282.505283
   Siegel D., 2016, Understanding The DAO Attack
   sklearn, 2021, SCIKIT LEARN MACHINE
   Solidity, 2018, SOL DOC
   Spencer D., 2009, CARD SORTING DESIGNI
   Torres CF, 2019, PROCEEDINGS OF THE 2019 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY (CCS'19), P2589, DOI 10.1145/3319535.3363263
   Tsankov P, 2018, PROCEEDINGS OF THE 2018 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY (CCS'18), P67, DOI 10.1145/3243734.3243780
   Tyagi Pradeep K., 1989, Journal of the Academy of Marketing Science, V17, P235
   Vergara-Erices Luis, 2015, CUAD VIVIENDA URBAN, V8, P264, DOI [10.11144/Javeriana.cvu8-16.iipu, DOI 10.11144/JAVERIANA.CVU8-16.IIPU]
   Vitalik Buterin, 2021, EIP3298
   Vogelstelle Fabian, 2018, ERC20
   Wang HJ, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: NEW IDEAS AND EMERGING RESULTS (ICSE-NIER 2019), P1, DOI 10.1109/ICSE-NIER.2019.00009
   Wikipedia, 2019, BLOCKCHAIN
   Wikipedia, 2019, DECENTRALIZED APPL
   Wood G., 2014, Ethereum project yellow paper, V151, P1
   Wood Gavin, 2018, SOLIDITY CONTRACT OR
   Xia X, 2019, PROC INT CONF SOFTW, P924, DOI 10.1109/ICSE.2019.00098
   Xiong W, 2015, MICROB ECOL, V70, P209, DOI 10.1007/s00248-014-0516-0
   Yang Y, 1997, PROCESSING INT C MAC
   Zou WQ, 2021, IEEE T SOFTWARE ENG, V47, P2084, DOI 10.1109/TSE.2019.2942301
NR 70
TC 8
Z9 9
U1 2
U2 3
PU ASSOC COMPUTING MACHINERY
PI NEW YORK
PA 1601 Broadway, 10th Floor, NEW YORK, NY USA
SN 1049-331X
EI 1557-7392
J9 ACM T SOFTW ENG METH
JI ACM Trans. Softw. Eng. Methodol.
PD APR
PY 2022
VL 31
IS 2
AR 30
DI 10.1145/3488245
PG 37
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 1L3NY
UT WOS:000799199600014
OA Green Accepted, Green Submitted
DA 2024-07-18
ER

PT J
AU Arcega, L
   Font, J
   Haugen, O
   Cetina, C
AF Arcega, Lorena
   Font, Jaime
   Haugen, Oystein
   Cetina, Carlos
TI Bug Localization in Model-Based Systems in the Wild
SO ACM TRANSACTIONS ON SOFTWARE ENGINEERING AND METHODOLOGY
LA English
DT Article
DE Bug localization; models at runtime; model-driven engineering
ID FEATURE LOCATION; ALGORITHMS; GUIDE; TESTS
AB The companies that have adopted the Model-Driven Engineering (MDE) paradigm have the advantage of working at a high level of abstraction. Nevertheless, they have the disadvantage of the lack of tools available to perform bug localization at the model level. In addition, in anMDE context, a bug can be related to different MDE artefacts, such as design-time models, model transformations, or run-time models. Starting the bug localization in the wrong place or with the wrong tool can lead to a result that is unsatisfactory. We evaluate how to apply the existing model-based approaches in order to mitigate the effect of starting the localization in the wrong place. We also take into account that software engineers can refine the results at different stages. In our evaluation, we compare different combinations of the application of bug localization approaches and human refinement. The combination of our approaches plus manual refinement obtains the best results. We performed a statistical analysis to provide evidence of the significance of the results. The conclusions obtained from this evaluation are: humans have to be involved at the right time in the process (or results can even get worse), and artefact-independence can be achieved without worsening the results.
C1 [Arcega, Lorena; Font, Jaime; Cetina, Carlos] Univ San Jorge, Esculea Arquitectura & Tecnol, Zaragoza, Spain.
   [Haugen, Oystein] Ostfold Univ Coll, Fac Comp Sci, Halden, Norway.
C3 Universidad San Jorge; Ostfold University College
RP Arcega, L (corresponding author), Univ San Jorge, Esculea Arquitectura & Tecnol, Zaragoza, Spain.
EM larcega@usj.es; jfont@usj.es; oystein.haugen@hiof.no; ccetina@usj.es
RI Arcega, Lorena/AAA-8929-2022
OI Arcega, Lorena/0000-0002-2464-8894
FU Ministry of Economy and Competitiveness (MINECO) through the Spanish
   National R+D+i Plan; ERDF funds under the Project ALPS
   [RTI2018-096411-B-I00]
FX This work has been partially supported by the Ministry of Economy and
   Competitiveness (MINECO) through the Spanish National R+D+i Plan and
   ERDF funds under the Project ALPS (RTI2018-096411-B-I00).
CR Affenzeller M, 2009, NUMER INSIGHT, P1, DOI 10.1201/9781420011326
   Lam AN, 2017, INT C PROGRAM COMPRE, P218, DOI 10.1109/ICPC.2017.24
   [Anonymous], 2010, International Conference on Software Maintenance, DOI DOI 10.1109/ICSM.2010.5609691
   [Anonymous], 1987, Proceedings of the 2nd International Conference on Genetic Algorithms, DOI DOI 10.1007/S10489-006-0018-Y
   Arcega L, 2018, 21ST ACM/IEEE INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS 2018), P90, DOI 10.1145/3239372.3239392
   Arcega L, 2019, SOFTW SYST MODEL, V18, P3551, DOI 10.1007/s10270-019-00727-y
   Arcega Lorena, 2019, THESIS U OSLO
   Arcuri A, 2014, SOFTW TEST VERIF REL, V24, P219, DOI 10.1002/stvr.1486
   Arcuri A, 2013, EMPIR SOFTW ENG, V18, P594, DOI 10.1007/s10664-013-9249-9
   Bencomo N, 2019, SOFTW SYST MODEL, V18, P3049, DOI 10.1007/s10270-018-00712-x
   Blair G, 2009, COMPUTER, V42, P22, DOI 10.1109/MC.2009.326
   Blasco D, 2021, J SYST SOFTWARE, V171, DOI 10.1016/j.jss.2020.110804
   Boughorbel S, 2017, PLOS ONE, V12, DOI 10.1371/journal.pone.0177678
   Boussaa Mohamed, 2013, Search Based Software Engineering. 5th International Symposium, SSBSE 2013. Proceedings: LNCS 8084, P50, DOI 10.1007/978-3-642-39742-4_6
   Burgueño L, 2015, IEEE T SOFTWARE ENG, V41, P490, DOI 10.1109/TSE.2014.2375201
   Chaleshtari Nazanin Bayati, 2020, P 2020 25 INT COMPUT, P1
   CONOVER WJ, 1999, PRACTICAL NONPARAMET
   de Oliveira Barros Marcio, 2011, 1 U FED EST RIO JAN
   Deb K, 2002, IEEE T EVOLUT COMPUT, V6, P182, DOI 10.1109/4235.996017
   DEERWESTER S, 1990, J AM SOC INFORM SCI, V41, P391, DOI 10.1002/(SICI)1097-4571(199009)41:6<391::AID-ASI1>3.0.CO;2-9
   Dit B, 2013, J SOFTW-EVOL PROC, V25, P53, DOI 10.1002/smr.567
   Font J, 2018, IEEE T EVOLUT COMPUT, V22, P363, DOI 10.1109/TEVC.2017.2751100
   García S, 2010, INFORM SCIENCES, V180, P2044, DOI 10.1016/j.ins.2009.12.010
   Gong L, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P67, DOI 10.1109/ICSM.2012.6405255
   Grissom R. J., 2005, EFFECT SIZES RES BRO
   Hassan AE, 2005, PROC IEEE INT CONF S, P263
   Haugen O, 2008, SPLC 2008: 12TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE, PROCEEDINGS, P139, DOI 10.1109/SPLC.2008.25
   Ishibuchi H, 2006, IEEE C EVOL COMPUTAT, P1128
   Jiang JJ, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P502, DOI 10.1109/ASE.2019.00054
   Jiang Y, 2015, 2015 INTERNATIONAL SYMPOSIUM ON BIOELECTRONICS AND BIOINFORMATICS (ISBB), P1, DOI 10.1109/ISBB.2015.7344908
   Kim D, 2013, IEEE T SOFTWARE ENG, V39, P1597, DOI 10.1109/TSE.2013.24
   Landauer TK, 1998, DISCOURSE PROCESS, V25, P259, DOI 10.1080/01638539809545028
   Le TDB, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P579, DOI 10.1145/2786805.2786880
   Luke S., 2012, Essentials of Metaheuristics, VFirst
   Mansoor U, 2015, J SYST SOFTWARE, V103, P423, DOI 10.1016/j.jss.2014.11.043
   Mao XG, 2014, J SYST SOFTWARE, V89, P51, DOI 10.1016/j.jss.2013.08.031
   Antonio LM, 2018, IEEE T EVOLUT COMPUT, V22, P851, DOI 10.1109/TEVC.2017.2767023
   Neumann Geoffrey, 2015, Search-Based Software Engineering. 7th International Symposium, SSBSE 2015. Proceedings: LNCS 9275, P318, DOI 10.1007/978-3-319-22183-0_29
   Panichella A, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P314, DOI 10.1109/SANER.2016.97
   Pearson S, 2017, PROC INT CONF SOFTW, P609, DOI 10.1109/ICSE.2017.62
   Powers DMW, 2020, J MACH LEARN TECHNOL, P37, DOI DOI 10.9735/2229-3981
   Rosin CD, 1997, EVOL COMPUT, V5, P1, DOI 10.1162/evco.1997.5.1.1
   Cuadrado JS, 2018, SOFTW SYST MODEL, V17, P779, DOI 10.1007/s10270-016-0541-1
   Cuadrado JS, 2017, IEEE T SOFTWARE ENG, V43, P868, DOI 10.1109/TSE.2016.2635137
   Schoenboeck Johannes, 2009, Models in Software Engineering. Workshops and Symposia at MODELS 2009. Reports and Revised Selected Papers, P5
   Sisman B., 2012, 2012 9th IEEE Working Conference on Mining Software Repositories (MSR 2012), P50, DOI 10.1109/MSR.2012.6224299
   Svendsen A, 2010, LECT NOTES COMPUT SC, V6287, P106, DOI 10.1007/978-3-642-15579-6_8
   Hoang T, 2019, IEEE T SOFTWARE ENG, V45, P1002, DOI 10.1109/TSE.2018.2810892
   Troya J, 2018, ACM T SOFTW ENG METH, V27, DOI 10.1145/3241744
   Vargha A, 2000, J EDUC BEHAV STAT, V25, P101, DOI 10.3102/10769986025002101
   Wang SW, 2016, J SOFTW-EVOL PROC, V28, P921, DOI 10.1002/smr.1801
   Wimmer M, 2009, IEEE INT CONF AUTOM, P3, DOI 10.1109/ASE.2009.99
   Wong WE, 2016, IEEE T SOFTWARE ENG, V42, P707, DOI 10.1109/TSE.2016.2521368
   Zamani S, 2014, INFORM SOFTWARE TECH, V56, P991, DOI 10.1016/j.infsof.2014.03.007
   Zimmermann T, 2004, PROC INT CONF SOFTW, P563, DOI 10.1109/ICSE.2004.1317478
   Zou DM, 2021, IEEE T SOFTWARE ENG, V47, P332, DOI 10.1109/TSE.2019.2892102
NR 56
TC 5
Z9 5
U1 0
U2 0
PU ASSOC COMPUTING MACHINERY
PI NEW YORK
PA 1601 Broadway, 10th Floor, NEW YORK, NY USA
SN 1049-331X
EI 1557-7392
J9 ACM T SOFTW ENG METH
JI ACM Trans. Softw. Eng. Methodol.
PD JAN
PY 2022
VL 31
IS 1
AR 10
DI 10.1145/3472616
PG 32
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 5L8HX
UT WOS:000870650700010
DA 2024-07-18
ER

PT J
AU Graziotin, D
   Lenberg, P
   Feldt, R
   Wagner, S
AF Graziotin, Daniel
   Lenberg, Per
   Feldt, Robert
   Wagner, Stefan
TI Psychometrics in Behavioral Software Engineering: A Methodological
   Introduction with Guidelines
SO ACM TRANSACTIONS ON SOFTWARE ENGINEERING AND METHODOLOGY
LA English
DT Article
DE Empirical software engineering; psychology; behavioral software
   engineering; methodology; questionnaire design
ID EXPLORATORY FACTOR-ANALYSIS; ANALYTIC ROTATION; PSYCHOLOGY; DESIGN;
   NUMBER; INSTRUMENTS; PERSONALITY; KNOWLEDGE; QUESTION; SCIENCE
AB A meaningful and deep understanding of the human aspects of software engineering (SE) requires psychological constructs to be considered. Psychology theory can facilitate the systematic and sound development as well as the adoption of instruments (e.g., psychological tests, questionnaires) to assess these constructs. In particular, to ensure high quality, the psychometric properties of instruments need evaluation. In this article, we provide an introduction to psychometric theory for the evaluation of measurement instruments for SE researchers. We present guidelines that enable using existing instruments and developing new ones adequately. We conducted a comprehensive review of the psychology literature framed by the Standards for Educational and Psychological Testing. We detail activities used when operationalizing new psychological constructs, such as item pooling, item review, pilot testing, item analysis, factor analysis, statistical property of items, reliability, validity, and fairness in testing and test bias. We provide an openly available example of a psychometric evaluation based on our guideline. We hope to encourage a culture change in SE research towards the adoption of establishedmethods from psychology. To improve the quality of behavioral research in SE, studies focusing on introducing, validating, and then using psychometric instruments need to be more common.
C1 [Graziotin, Daniel; Wagner, Stefan] Univ Stuttgart, Inst Software Engn, Univ Str 38, D-70569 Stuttgart, Germany.
   [Lenberg, Per; Feldt, Robert] Chalmers, SE-41296 Gothenburg, Sweden.
   [Lenberg, Per; Feldt, Robert] Univ Gothenburg, Dept Comp Sci & Engn, SE-41296 Gothenburg, Sweden.
C3 University of Stuttgart; Chalmers University of Technology; University
   of Gothenburg
RP Graziotin, D (corresponding author), Univ Stuttgart, Inst Software Engn, Univ Str 38, D-70569 Stuttgart, Germany.
EM daniel.graziotin@iste.unistuttgart.de; per.lenberg@chalmers.se;
   robert.feldt@chalmers.se; stefan.wagner@iste.unistuttgart.de
RI Wagner, Stefan/A-5200-2018
OI Wagner, Stefan/0000-0002-5256-8429
FU Swedish Armed Forces; Swedish Defense Materiel Administration; Swedish
   Governmental Agency for Innovation Systems (VINNOVA) [2017-04874];
   Marianne and Marcus Wallenberg Foundation [2017.0071]; Alexander von
   Humboldt (AvH) Foundation; Vinnova [2017-04874] Funding Source: Vinnova
FX We acknowledge the support of Swedish Armed Forces, Swedish Defense
   Materiel Administration and Swedish Governmental Agency for Innovation
   Systems (VINNOVA) in the project number 2017-04874. The study was also
   partly funded by Marianne and Marcus Wallenberg Foundation (project
   number 2017.0071) as well as the Alexander von Humboldt (AvH)
   Foundation.
CR Abdi H., 2003, Encycl. Res. Methods Social Sci., V6, P792, DOI DOI 10.4135/9781412950589.N690
   AERA, 2014, Standards for educational and psychological testing, DOI DOI 10.1037/14855-004
   Anastasi A., 1997, Psychological testing, V7e
   [Anonymous], 1971, The Psychology of Computer Programming
   Ansari A, 2002, PSYCHOMETRIKA, V67, P49, DOI 10.1007/BF02294709
   Basili Victor, 1994, ENCY SOFTW ENG, P528
   Berger Michael, 2013, ENCY AUTISM SPECTRUM, P823, DOI [10.1007/978-1-4419-1698-3_146, DOI 10.1007/978-1-4419-1698-3_146]
   Berger Michael, 2013, ENCY AUTISM SPECTRUM, P2063, DOI [10.1007/978-1-4419-1698-3_451, DOI 10.1007/978-1-4419-1698-3_451]
   Boulkedid R, 2011, PLOS ONE, V6, DOI 10.1371/journal.pone.0020476
   Bradburn N., 2004, Asking Questions
   Browne MW, 2001, MULTIVAR BEHAV RES, V36, P111, DOI 10.1207/S15327906MBR3601_05
   CAMPBELL DT, 1959, PSYCHOL BULL, V56, P81, DOI 10.1037/h0046016
   Capretz LF, 2003, INT J HUM-COMPUT ST, V58, P207, DOI 10.1016/S1071-5819(02)00137-4
   Carnap R., 1962, Logical foundations of probability
   Carver JC, 2021, IEEE SOFTWARE, V38, P107, DOI 10.1109/MS.2020.3042683
   CATTELL RB, 1966, MULTIVAR BEHAV RES, V1, P245, DOI 10.1207/s15327906mbr0102_10
   Chattopadhyay S, 2020, PROC INT CONF SOFTW, P654, DOI 10.1145/3377811.3380330
   Ciolkowski M, 2003, LECT NOTES COMPUT SC, V2765, P104
   Coaley K., 2010, An introduction to psychological assessment and psychometrics
   COHEN RJ, 1995, PSYCHOL TESTING ASSE
   Collins D, 2003, QUAL LIFE RES, V12, P229, DOI 10.1023/A:1023254226592
   Conti G, 2014, J ECONOMETRICS, V183, P31, DOI 10.1016/j.jeconom.2014.06.008
   Costa P.T., 1992, NEBRASKA S MOTIVATIO
   Courtney M.G. R., 2013, Research, and Evaluation, V18, P1, DOI DOI 10.7275/9CF5-2M72
   Creswell J. W., 2013, RES DESIGN QUALITATI
   Crocker L., 1986, INTRO CLASSICAL MODE
   Cronbach LJ, 1951, PSYCHOMETRIKA, V16, P297
   Cruz S, 2015, COMPUT HUM BEHAV, V46, P94, DOI 10.1016/j.chb.2014.12.008
   DALKEY N, 1963, MANAGE SCI, V9, P458, DOI 10.1287/mnsc.9.3.458
   Darcy David P., 2005, 38 HAWAII INT C SYST
   DARTON RA, 1980, STATISTICIAN, V29, P167, DOI 10.2307/2988040
   De Swert K., 2012, Calculating inter-coder reliability in media content analysis using Krippendorff's Alpha
   Drennan J, 2003, J ADV NURS, V42, P57, DOI 10.1046/j.1365-2648.2003.02579.x
   Embretson S. E., 2000, Item response theory, DOI DOI 10.4324/9781410605269
   English Dictionary Cambridge, 2018, CAMBRIDGE ENG DICT, V1, P1
   Fabrigar LR, 1999, PSYCHOL METHODS, V4, P272, DOI 10.1037/1082-989X.4.3.272
   Fagerholm F., 2014, EXAMINING STRUCTURE, P218, DOI [10.1007/978-3-319-06862-6_15, DOI 10.1007/978-3-319-06862-6_15]
   Fagerholm Fabian, 2020, CONT EMPIRICAL METHO, P151, DOI [10.1007/978-3-030-32489-6_6, DOI 10.1007/978-3-030-32489-6_6]
   Fagerholm Fabian, 2015, THESIS U HELSINKI DE
   Feldt R., 2008, INT WORKSHOP COOPERA, P49, DOI DOI 10.1145/1370114.1370127
   Feldt R, 2010, 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING & KNOWLEDGE ENGINEERING (SEKE 2010), P374
   Fernandez Daniel Mendez, 2020, CONT EMPIRICAL METHO, P479, DOI [10.1007/978-3-030-32489-6_17, DOI 10.1007/978-3-030-32489-6_17]
   Flora DB, 2004, PSYCHOL METHODS, V9, P466, DOI 10.1037/1082-989X.9.4.466
   Fox John, 2017, SEM STRUCTURAL EQUA
   França C, 2020, IEEE T SOFTWARE ENG, V46, P118, DOI 10.1109/TSE.2018.2842201
   Furia CA, 2021, IEEE T SOFTWARE ENG, V47, P1786, DOI 10.1109/TSE.2019.2935974
   Ginty Annie T., 2013, Encyclopedia of behavioral medicine, P1563
   GLASER R, 1963, AM PSYCHOL, V18, P519, DOI 10.1037/h0049294
   Graziotin D., 2017, P 21 INT C EVALUATIO, P324, DOI [DOI 10.1145/3084226.3084242, 10.1145/3084226.3084242]
   Graziotin D, 2015, 7TH INTERNATIONAL WORKSHOP ON SOCIAL SOFTWARE ENGINEERING (SSE 2015), P25, DOI 10.1145/2804381.2804386
   Graziotin D, 2015, 2015 IEEE/ACM 8TH INTERNATIONAL WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING CHASE 2015, P123, DOI 10.1109/CHASE.2015.23
   Graziotin D, 2015, J SOFTW-EVOL PROC, V27, P467, DOI 10.1002/smr.1673
   Graziotin Daniel, 2021, BEHAV SOFTWARE ENG E, DOI [10.5281/zenodo.3799603, DOI 10.5281/ZENODO.3799603]
   Green CD, 2009, AM PSYCHOL, V64, P75, DOI 10.1037/a0013338
   Gren L, 2018, PROCEEDINGS OF THE 12TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT (ESEM 2018), DOI 10.1145/3239235.3267437
   Gren L, 2016, 9TH IEEE/ACM INTERNATIONAL WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING (CHASE 2016), P121, DOI [10.1109/CHASE.2016.032, 10.1145/2897586.2897588]
   Guilford J.P., 1954, PSYCHOMETRIC METHODS
   Hambleton R., 1995, Item bias review
   Hambleton RK., 1991, Fundamentals of item response theory
   HILGARD ER, 1980, J HIST BEHAV SCI, V16, P107, DOI 10.1002/1520-6696(198004)16:2<107::AID-JHBS2300160202>3.0.CO;2-Y
   Hilton CE, 2017, INT J SOC RES METHOD, V20, P21, DOI 10.1080/13645579.2015.1091640
   Hogan R., 2007, PERSONALITY FATE ORG
   HORN JL, 1965, PSYCHOMETRIKA, V30, P179, DOI 10.1007/BF02289447
   Ji JZ, 2008, ESEM'08: PROCEEDINGS OF THE 2008 ACM-IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, P168
   Johanson GA, 2010, EDUC PSYCHOL MEAS, V70, P394, DOI 10.1177/0013164409355692
   Jones LV, 2007, HANDB STAT, V26, P1, DOI 10.1016/S0169-7161(06)26001-2
   KAISER HF, 1960, EDUC PSYCHOL MEAS, V20, P141, DOI 10.1177/001316446002000116
   KAISER HF, 1958, PSYCHOMETRIKA, V23, P187, DOI 10.1007/BF02289233
   KALTON G, 1982, J ROY STAT SOC A STA, V145, P42, DOI 10.2307/2981421
   Kaplan D., 2008, STRUCTURAL EQUATION, V10
   Kitchenham B., 2007, GUIDELINES PERFORMIN
   Kitchenham BA, 2008, Guide to advanced empirical software engineering, P63, DOI [DOI 10.1007/978-1-84800-044-5_3, 10.1007/ 978-1-84800-044-5_3]
   Kline P., 1986, HDB TEST CONSTRUCTIO
   Koltko-Rivera ME, 2004, REV GEN PSYCHOL, V8, P3, DOI 10.1037/1089-2680.8.1.3
   Kootstra G. J., 2006, EXPLORATORY FACTOR
   LEE SY, 1981, PSYCHOMETRIKA, V46, P153, DOI 10.1007/BF02293896
   Lenberg P, 2023, Arxiv, DOI arXiv:1712.08341
   Lenberg P, 2017, EMPIR SOFTW ENG, V22, P2179, DOI 10.1007/s10664-016-9482-0
   Lenberg P, 2015, J SYST SOFTWARE, V107, P15, DOI 10.1016/j.jss.2015.04.084
   Levy R, 2016, CH CRC STAT SOC BEHA, P1, DOI 10.1201/9781315374604
   Lewis Clayton, 2020, 31 WORKSHOP PSYCHOL, P39
   Likert R., 1932, TECHNIQUE MEASUREMEN, DOI 1933-01885-001
   LOEVINGER J, 1957, PSYCHOL REP, V3, P635, DOI 10.2466/PR0.3.7.635-694
   Lu ZH, 2016, MULTIVAR BEHAV RES, V51, P519, DOI 10.1080/00273171.2016.1168279
   MacCallum RC, 1999, PSYCHOL METHODS, V4, P84, DOI 10.1037/1082-989x.4.1.84
   MacCallum RC, 2000, ANNU REV PSYCHOL, V51, P201, DOI 10.1146/annurev.psych.51.1.201
   MASTERS GN, 1988, J EDUC MEAS, V25, P15, DOI 10.1111/j.1745-3984.1988.tb00288.x
   McDonald S., 2007, Communications of the ACM, V50, P66, DOI 10.1145/1188913.1188919
   Michell J, 2000, THEOR PSYCHOL, V10, P639, DOI 10.1177/0959354300105004
   Miller K, 2014, WILEY SER SURV METH, P1
   Molleri JS, 2016, ESEM'16: PROCEEDINGS OF THE 10TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, DOI 10.1145/2961111.2962619
   MORGAN WP, 1980, RES Q EXERCISE SPORT, V51, P50, DOI 10.1080/02701367.1980.10609275
   Muthén B, 2012, PSYCHOL METHODS, V17, P313, DOI 10.1037/a0026802
   Norman G, 2002, BMJ-BRIT MED J, V324, P1560, DOI 10.1136/bmj.324.7353.1560
   Norris M, 2010, J AUTISM DEV DISORD, V40, P8, DOI 10.1007/s10803-009-0816-2
   Nunnally J. C., 1978, CLIN DIAGNOSIS MENTA, P97, DOI DOI 10.1007/978-1-4684-2490-4_4
   Nunnally JC, 1978, PSYCHOMETRIC THEORY, V2nd
   Oppenheim A.N., 1992, QUESTIONNAIRE DESIGN
   Ostberg JP, 2017, 2017 IEEE/ACM 2ND INTERNATIONAL WORKSHOP ON EMOTION AWARENESS IN SOFTWARE ENGINEERING (SEMOTION 2017), P22, DOI 10.1109/SEmotion.2017.4
   Pearson K, 1901, PHILOS MAG, V2, P559, DOI 10.1080/14786440109462720
   Perrone Michael, 2006, Columbia U. Working Papers in TESOL & App. Ling, V6, P1
   Petersen K, 2013, 2013 JOINT CONFERENCE OF THE 23RD INTERNATIONAL WORKSHOP ON SOFTWARE MEASUREMENT AND THE 2013 EIGHTH INTERNATIONAL CONFERENCE ON SOFTWARE PROCESS AND PRODUCT MEASUREMENT (IWSM-MENSURA), P81, DOI 10.1109/IWSM-Mensura.2013.22
   Petrillo J, 2015, VALUE HEALTH, V18, P25, DOI 10.1016/j.jval.2014.10.005
   Pittenger David J., 1993, Journal of Career Planning and Employment, V54, P48
   PUKELSHEIM F, 1994, AM STAT, V48, P88, DOI 10.2307/2684253
   Ralph P, 2020, EMPIR SOFTW ENG, V25, P4927, DOI 10.1007/s10664-020-09875-y
   Ralph Paul, 2018, P 22 INT C EV ASS SO, P13
   Rattray J, 2007, J CLIN NURS, V16, P234, DOI 10.1111/j.1365-2702.2006.01573.x
   Regehr G, 2007, J SOC WORK EDUC, V43, P327, DOI 10.5175/JSWE.2007.200600607
   Revelle W, 1979, Multivariate Behav Res, V14, P403, DOI 10.1207/s15327906mbr1404_2
   Revelle W., 2020, How to: Use the psych package for factor analysis and data reduction
   Revelle W., 2009, An introduction to psychometric theory with applications in R
   Revelle W., 2019, PSYCH PROCEDURES PSY
   Revelle William, 2018, INTRO PSYCH PACKAG 2
   Runnels Judith, 2013, LANG TEST ASIA, V3, P9, DOI [DOI 10.1186/2229-0443-3-9, 10.1186/2229-0443-3-9]
   Rus I, 2002, IEEE SOFTWARE, V19, P26, DOI 10.1109/MS.2002.1003450
   Russell Daniel W., 2016, PERSONAL SOC PSYCHOL, V28, P1629, DOI 10.1177/
   Rust J., 2009, MODERN PSYCHOMETRICS, V3rd
   Schad DJ, 2021, PSYCHOL METHODS, V26, P103, DOI 10.1037/met0000275
   SCHMIDT FL, 1992, AM PSYCHOL, V47, P1173, DOI 10.1037/0003-066X.47.10.1173
   Schoenherr JR, 2016, ADV HEALTH SCI EDUC, V21, P719, DOI 10.1007/s10459-015-9623-z
   Schwarz N, 2001, AM J EVAL, V22, P127, DOI 10.1177/109821400102200202
   Shea CM, 2014, IMPLEMENT SCI, V9, DOI 10.1186/1748-5908-9-7
   Siegmund J, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P9, DOI 10.1109/ICSE.2015.24
   SIGELMAN L, 1981, PUBLIC OPIN QUART, V45, P199, DOI 10.1086/268650
   Singh K., 2016, Measures of positive psychology: Development and validation
   Swart J., 2003, HUM RESOUR MANAG J, V13, P60, DOI DOI 10.1111/J.1748-8583.2003.TB00091.X
   Tabachnick B.G., 2007, USINGMULTIVARIATE ST, V5
   Thabane L, 2010, BMC MED RES METHODOL, V10, DOI 10.1186/1471-2288-10-1
   Thurstone LL, 1937, SCIENCE, V85, P227, DOI 10.1126/science.85.2201.227
   TINSLEY HEA, 1987, J COUNS PSYCHOL, V34, P414, DOI 10.1037/0022-0167.34.4.414
   Traub R.E., 1997, ED MEASUREMENT, V16, P8, DOI DOI 10.1111/J.1745-3992.1997.TB00603.X
   Tripp JF, 2016, J ASSOC INF SYST, V17, P267
   Uher J, 2021, PERS INDIV DIFFER, V170, DOI 10.1016/j.paid.2020.110205
   Uher J, 2018, FRONT PSYCHOL, V9, DOI 10.3389/fpsyg.2018.02599
   VANALPHEN A, 1994, J ADV NURS, V20, P196
   Wagenmakers EJ, 2018, PSYCHON B REV, V25, P58, DOI [10.3758/s13423-017-1323-7, 10.3758/s13423-017-1343-3]
   Wagner Stefan, 2020, Contemporary Empirical Methods in Software Engineering, P93, DOI [DOI 10.1007/978-3-030-32489-6_4, 10.1007/978-3-030-32489-6-4]
   Wang Y, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P580, DOI 10.1145/3368089.3409762
   Wasserstein RL, 2019, AM STAT, V73, P1, DOI 10.1080/00031305.2019.1583913
   Weiss H.M., 2002, HOMAN RESOURCE MANAG, V12, P173, DOI DOI 10.1016/S1053-4822(02)00045-1
   WIDAMAN KF, 1993, MULTIVAR BEHAV RES, V28, P263, DOI 10.1207/s15327906mbr2803_1
   Willis GordonB., 2004, Methods for Testing and Evaluating Survey Questionnaires, P23, DOI [DOI 10.1002/0471654728.CH2, 10.1002/0471654728.ch2]
   Wohlin C., 2012, Experimentation in Software Engineering
   Wood D, 2015, PSYCHOL REV, V122, P84, DOI 10.1037/a0038423
   Wynd CA, 2003, WESTERN J NURS RES, V25, P508, DOI 10.1177/0193945903252998
   Wyrich M, 2021, PROC INT CONF SOFTW, P512, DOI 10.1109/ICSE43902.2021.00055
   Wyrich M, 2019, PEERJ COMPUT SCI, DOI 10.7717/peerj-cs.173
   Yong AG, 2013, TUTOR QUANT METHODS, V9, P79, DOI 10.20982/tqmp.09.2.p079
   Zumbo B.D., 2007, LANG ASSESS Q, V4, P223, DOI DOI 10.1080/15434300701375832
NR 150
TC 9
Z9 9
U1 0
U2 2
PU ASSOC COMPUTING MACHINERY
PI NEW YORK
PA 1601 Broadway, 10th Floor, NEW YORK, NY USA
SN 1049-331X
EI 1557-7392
J9 ACM T SOFTW ENG METH
JI ACM Trans. Softw. Eng. Methodol.
PD JAN
PY 2022
VL 31
IS 1
AR 7
DI 10.1145/3469888
PG 36
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 5L8HX
UT WOS:000870650700007
OA Bronze, Green Submitted
DA 2024-07-18
ER

PT J
AU Sharafi, Z
   Huang, Y
   Leach, K
   Weimer, W
AF Sharafi, Zohreh
   Huang, Yu
   Leach, Kevin
   Weimer, Westley
TI Toward an Objective Measure of Developers' Cognitive Activities
SO ACM TRANSACTIONS ON SOFTWARE ENGINEERING AND METHODOLOGY
LA English
DT Article
DE Neuroimaging; eye tracking; code comprehension; prose review; data
   structures
ID MENTAL ROTATION; SPATIAL ABILITY; EYE-MOVEMENTS; CODE INSPECTIONS;
   SEX-DIFFERENCES; FMRI; IMPACT; ACTIVATION; NOISE; NAVIGATION
AB Understanding how developers carry out different computer science activities with objective measures can help to improve productivity and guide the use and development of supporting tools in software engineering. In this article, we present two controlled experiments involving 112 students to explore multiple computing activities (code comprehension, code review, and data structure manipulations) using three different objective measures including neuroimaging (functional near-infrared spectroscopy (fNIRS) and functional magnetic resonance imaging (fMRI)) and eye tracking. By examining code review and prose review using fMRI, we find that the neural representations of programming languages vs. natural languages are distinct. We can classify which task a participant is undertaking based solely on brain activity, and those task distinctions are modulated by expertise. We leverage insights from the psychological notion of spatial ability to decode the neural representations of several fundamental data structures and their manipulations using fMRI, fNIRS, and eye tracking. We examine list, array, tree, and mental rotation tasks and find that data structure and spatial operations use the same focal regions of the brain but to different degrees: they are related but distinct neural tasks. We demonstrate best practices and describe the implication and tradeoffs between fMRI, fNIRS, eye tracking, and self-reporting for software engineering research.
C1 [Sharafi, Zohreh; Huang, Yu; Leach, Kevin; Weimer, Westley] Univ Michigan, 2260 Hayward St, Ann Arbor, MI 48109 USA.
C3 University of Michigan System; University of Michigan
RP Sharafi, Z (corresponding author), Univ Michigan, 2260 Hayward St, Ann Arbor, MI 48109 USA.
EM zohrehsh@umich.edu; yhhy@umich.edu; kjleach@umich.edu; weimerw@umich.edu
RI Sharafi, Zohreh/HRC-2499-2023
OI Huang, Yu/0000-0003-2730-5077
CR Aamand R, 2013, NEUROIMAGE, V83, P397, DOI 10.1016/j.neuroimage.2013.06.069
   Abid NJ, 2019, PROC INT CONF SOFTW, P384, DOI 10.1109/ICSE.2019.00052
   Acevedo BP, 2014, BRAIN BEHAV, V4, P580, DOI 10.1002/brb3.242
   ACKERMAN AF, 1989, IEEE SOFTWARE, V6, P31, DOI 10.1109/52.28121
   Aharoni D, 2000, SIGCSE BULL, V32, P26, DOI 10.1145/331795.331804
   Aharoni Dan., 2000, PME INT C, V11, P1
   Al-Shandawely M.A.-M., 2010, Impacts of Data Structures and Algorithms on Multi-core Efficiency. Skolan for datavetenskap och kommunikation
   Alkan S, 2007, BRIT J EDUC TECHNOL, V38, P538, DOI 10.1111/j.1467-8535.2007.00721.x
   [Anonymous], 2016, The official SAT study guide with DVD
   [Anonymous], SOFTWARE ENG ARTIFIC
   [Anonymous], 2011, Proceedings of the 19th ACM SIGSOFT symposium and the 13th European conference on Foundations of software engineering (FSE'11), DOI [10.1145/2025113.2025121, DOI 10.1145/2025113.2025121]
   [Anonymous], 2010, ACM SIGGRAPH 2010 CO, DOI DOI 10.1145/1837101.1837106
   Antoniol Giuliano, 2012, INT C PROGR COMPR
   Arcuri A, 2014, SOFTW TEST VERIF REL, V24, P219, DOI 10.1002/stvr.1486
   Atit K, 2013, COGN PROCESS, V14, P163, DOI 10.1007/s10339-013-0550-8
   Aumann Y, 1996, AN S FDN CO, P580, DOI 10.1109/SFCS.1996.548517
   Barker JW, 2013, BIOMED OPT EXPRESS, V4, P1366, DOI 10.1364/BOE.4.001366
   Beckwith Laura, 2005, P SIGCHI C HUM FACT, P869
   Bednarik R, 2012, INT J HUM-COMPUT ST, V70, P143, DOI 10.1016/j.ijhcs.2011.09.003
   Bennett C. M., 2009, Neuroimage, V47, pS125, DOI DOI 10.1016/S1053-8119(09)71202-9
   Black A.A., 2005, J GEOSCIENCE ED, V53, P402
   Boas DA, 2014, NEUROIMAGE, V85, P1, DOI 10.1016/j.neuroimage.2013.11.033
   BROOKS R, 1977, INT J MAN MACH STUD, V9, P737, DOI 10.1016/S0020-7373(77)80039-4
   Buse RPL, 2012, PROC INT CONF SOFTW, P987, DOI 10.1109/ICSE.2012.6227122
   Busjahn T, 2015, INT C PROGRAM COMPRE, P255, DOI 10.1109/ICPC.2015.36
   Buxton RB, 2004, NEUROIMAGE, V23, pS220, DOI 10.1016/j.neuroimage.2004.07.013
   Callan Jamie, 2015, MOVING STATIC DYNAMI
   Caminiti Susan., 2018, AT TS 1 BILLION GAMB
   Castelhano Joao, 2018, BRAIN IMAGING BEHAV
   Center for Diagnostic Imaging, 2016, IM GETTING MRI SO WH
   Challis E, 2015, NEUROIMAGE, V112, P232, DOI 10.1016/j.neuroimage.2015.02.037
   Chip Cutter, 2019, AMAZON RETRAIN 3 ITS
   Cohen MS, 1996, BRAIN, V119, P89, DOI 10.1093/brain/119.1.89
   Corballis MC, 1997, BRAIN LANG, V57, P100, DOI 10.1006/brln.1997.1835
   Crk I, 2016, ACM T COMPUT-HUM INT, V23, DOI 10.1145/2829945
   Culham JC, 2001, CURR OPIN NEUROBIOL, V11, P157, DOI 10.1016/S0959-4388(00)00191-4
   De Smedt B, 2010, EDUC RES REV-NETH, V5, P97, DOI 10.1016/j.edurev.2009.11.001
   Deimel L. E.  Jr., 1985, SIGCSE Bulletin, V17, P5, DOI 10.1145/382204.382524
   Deitelhoff F, 2019, 2019 IEEE/ACM 6TH INTERNATIONAL WORKSHOP ON EYE MOVEMENTS IN PROGRAMMING (EMIP 2019), P10, DOI 10.1109/EMIP.2019.00010
   Dell N., 2012, P SIGCHI C HUMAN FAC, P1321, DOI [DOI 10.1145/2207676.2208589, 10.1145/2207676.2208589]
   Diedrichsen J, 2005, NEUROIMAGE, V27, P624, DOI 10.1016/j.neuroimage.2005.04.039
   Donnon T, 2005, CAN J SURG, V48, P387
   Dunsmore A, 2003, IEEE SOFTWARE, V20, P21, DOI 10.1109/MS.2003.1207450
   Dupre Lyn, 1995, BUGS WRITING GUIDE D
   Duraes J, 2016, PROC INT SYMP SOFTW, P87, DOI 10.1109/ISSRE.2016.53
   Ehlis AC, 2014, NEUROIMAGE, V85, P478, DOI 10.1016/j.neuroimage.2013.03.067
   Eklund A, 2016, P NATL ACAD SCI USA, V113, P7900, DOI 10.1073/pnas.1602413113
   ELSHOFF JL, 1982, COMMUN ACM, V25, P512, DOI 10.1145/358589.358596
   Etelapelto A., 1993, Scandinavian Journal of Educational Research, V37, P243, DOI DOI 10.1080/0031383930370305
   Fagan ME, 1999, IBM SYST J, V38, P258, DOI 10.1147/sj.382.0258
   Fakhoury S, 2018, INT C PROGRAM COMPRE, P286, DOI 10.1145/3196321.3196347
   Fakhoury S, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P936, DOI 10.1145/3236024.3275426
   Fan Quyin, 2010, EFFECTS BEACONS COMM
   Faria N, 2013, EUROMICRO WORKSHOP P, P116, DOI 10.1109/PDP.2013.24
   Floyd B, 2017, PROC INT CONF SOFTW, P175, DOI 10.1109/ICSE.2017.24
   Ford D, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P846, DOI 10.1145/2950290.2950331
   Fritz T, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P402, DOI 10.1145/2568225.2568266
   Fry Z.P., 2012, INT S SOFTWARE TESTI, P177, DOI 10.1145/04000800.2336775
   Gaillard WD, 2003, HUM BRAIN MAPP, V18, P176, DOI 10.1002/hbm.10091
   Glover GH, 2011, NEUROSURG CLIN N AM, V22, P133, DOI 10.1016/j.nec.2010.11.001
   Gogos A, 2010, NEUROPSYCHOLOGIA, V48, P529, DOI 10.1016/j.neuropsychologia.2009.10.013
   Goldberg JH, 1999, INT J IND ERGONOM, V24, P631, DOI 10.1016/S0169-8141(98)00068-7
   Gray David E, 2002, INT EDUC J, V3, P51
   Grigoreanu V, 2009, LECT NOTES COMPUT SC, V5435, P205
   Grove WA, 2006, J ECON EDUC, V37, P131, DOI 10.3200/JECE.37.2.131-147
   Hallam Peter, 2016, WHAT DO PROGRAMMERS
   Haneef N. J., 1998, Software Engineering Notes, V23, P75, DOI 10.1145/279437.279470
   Harris IM, 2000, BRAIN, V123, P65, DOI 10.1093/brain/123.1.65
   Hegarty M, 1999, J EDUC PSYCHOL, V91, P684, DOI 10.1037/0022-0663.91.4.684
   Helfman Jonathan I., P 3 BELIV 10 WORKSH, P71
   Henson RNA, 2002, NEUROIMAGE, V15, P83, DOI 10.1006/nimg.2001.0940
   Hermens F, 2013, J EYE MOVEMENT RES, V6
   Hindle A, 2012, PROC INT CONF SOFTW, P837, DOI 10.1109/ICSE.2012.6227135
   Huang Y, 2019, PROC INT CONF SOFTW, P396, DOI 10.1109/ICSE.2019.00053
   Huang Yu, 2020, INT S FDN SOFTW ENG
   Huizinga D., 2007, AUTOMATED DEFECT PRE
   Huppert TJ, 2016, NEUROPHOTONICS, V3, DOI 10.1117/1.NPh.3.1.010401
   Jacob RJK, 2003, MIND'S EYE: COGNITIVE AND APPLIED ASPECTS OF EYE MOVEMENT RESEARCH, P573, DOI 10.1016/B978-044451020-4/50031-1
   Jacob SN, 2015, J CLIN EXP NEUROPSYC, V37, P563, DOI 10.1080/13803395.2015.1029440
   Jarodzka H., 2010, P S EYE TRACK RES AP, P211, DOI [10.1145/1743666, DOI 10.1145/1743666, DOI 10.1145/1743666.1743718]
   JUST MA, 1980, PSYCHOL REV, V87, P329, DOI 10.1037/0033-295X.87.4.329
   Kennedy N., 2006, Google Mondrian: web-based code review and storage
   Kevic K, 2017, J SYST SOFTWARE, V128, P252, DOI 10.1016/j.jss.2016.03.030
   Kim SG, 2012, J CEREBR BLOOD F MET, V32, P1188, DOI 10.1038/jcbfm.2012.23
   Kingstone A, 2008, BRIT J PSYCHOL, V99, P317, DOI 10.1348/000712607X251243
   KNIGHT JC, 1993, COMMUN ACM, V36, P51, DOI 10.1145/163359.163366
   KNUTH DE, 1984, COMPUT J, V27, P97, DOI 10.1093/comjnl/27.2.97
   Kuss M, 2005, J MACH LEARN RES, V6, P1679
   LaConte S, 2005, NEUROIMAGE, V26, P317, DOI 10.1016/j.neuroimage.2005.01.048
   Le Goues C, 2012, IEEE T SOFTWARE ENG, V38, P175, DOI 10.1109/TSE.2011.5
   Leach Kevin, P 2020 IEEE ACM 42 I, V13
   Lee S, 2016, IEEE INT C BIOINF BI, P350, DOI 10.1109/BIBE.2016.30
   Leff DR, 2011, NEUROIMAGE, V54, P2922, DOI 10.1016/j.neuroimage.2010.10.058
   Lindquist MA, 2009, NEUROIMAGE, V45, pS187, DOI 10.1016/j.neuroimage.2008.10.065
   LINN MC, 1985, CHILD DEV, V56, P1479, DOI 10.1111/j.1467-8624.1985.tb00213.x
   Liu J, 2010, J COGNITIVE NEUROSCI, V22, P203, DOI 10.1162/jocn.2009.21203
   Lloyd-Fox S, 2010, NEUROSCI BIOBEHAV R, V34, P269, DOI 10.1016/j.neubiorev.2009.07.008
   MABE PA, 1982, J APPL PSYCHOL, V67, P280, DOI 10.1037/0021-9010.67.3.280
   Maguire EA, 2000, P NATL ACAD SCI USA, V97, P4398, DOI 10.1073/pnas.070039597
   Maintz J B, 1998, Med Image Anal, V2, P1, DOI 10.1016/S1361-8415(01)80026-8
   Marquand A, 2010, NEUROIMAGE, V49, P2178, DOI 10.1016/j.neuroimage.2009.10.072
   Matusz P.J., 2019, Are We Ready for Real-World Neuroscience?
   Mazard A, 2002, J COGNITIVE NEUROSCI, V14, P172, DOI 10.1162/089892902317236821
   Moffat SD, 1998, EVOL HUM BEHAV, V19, P73, DOI 10.1016/S1090-5138(97)00104-9
   Monti MM, 2010, NEW ENGL J MED, V362, P579, DOI 10.1056/NEJMoa0905370
   Nakagawa T, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE COMPANION 2014), P448, DOI 10.1145/2591062.2591098
   NASA Software Reuse Working Group, 2005, SOFTWARE REUSE SURVE
   O'Doherty JP, 2007, ANN NY ACAD SCI, V1104, P35, DOI 10.1196/annals.1390.022
   Obaidellah U, 2018, ACM COMPUT SURV, V51, DOI 10.1145/3145904
   Obrig H, 2014, NEUROIMAGE, V85, P535, DOI 10.1016/j.neuroimage.2013.03.045
   OGAWA S, 1990, P NATL ACAD SCI USA, V87, P9868, DOI 10.1073/pnas.87.24.9868
   Okamoto M, 2006, NEUROIMAGE, V31, P796, DOI 10.1016/j.neuroimage.2005.12.021
   Oman P., 1992, Conference on Software Maintenance 1992 (Cat.No.92CH3206-0), P337, DOI 10.1109/ICSM.1992.242525
   Palmer C, 2016, 2016 ACM SYMPOSIUM ON EYE TRACKING RESEARCH & APPLICATIONS (ETRA 2016), P65, DOI 10.1145/2857491.2857544
   Parnin C., 2010, Programming Interest Group, P27
   Parnin C, 2011, CONF PROC INT SYMP C, P197, DOI 10.1109/ICPC.2011.49
   PEA RD, 1984, NEW IDEAS PSYCHOL, V2, P137, DOI 10.1016/0732-118X(84)90018-7
   Peitek N, 2018, PROCEEDINGS OF THE 12TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT (ESEM 2018), DOI 10.1145/3239235.3240495
   Peters M, 2008, BRAIN COGNITION, V66, P260, DOI 10.1016/j.bandc.2007.09.003
   Petitto LA, 2012, BRAIN LANG, V121, P130, DOI 10.1016/j.bandl.2011.05.003
   Pickering SJ, 2007, MIND BRAIN EDUC, V1, P109, DOI 10.1111/j.1751-228X.2007.00011.x
   PODSAKOFF PM, 1986, J MANAGE, V12, P531, DOI 10.1177/014920638601200408
   Poole Alex, 2005, ENCY HUMAN COMPUTER, P1
   Rasmussen CE, 2010, J MACH LEARN RES, V11, P3011
   Raymond DarrellR., 1991, P 1991 C CTR ADV STU, P3
   RAYNER K, 1978, PSYCHOL BULL, V85, P618, DOI 10.1037/0033-2909.85.3.618
   Richlan F, 2014, CEREB CORTEX, V24, P2647, DOI 10.1093/cercor/bht117
   Riley S, 2006, USABILITY NEWS, V8, P2833
   Rugaber S, 2000, ANN SOFTW ENG, V9, P143, DOI 10.1023/A:1018976708691
   Salvucci DD, 2000, 2000 S EYE TRACKING, P71, DOI [10.1145/355017.355028, DOI 10.1145/355017.355028]
   Samet H., 1990, The Design and Analysis of Spatial Data Structures
   Scholkopf B., 2001, LEARNING KERNELS SUP
   Scholz J, 2009, NAT NEUROSCI, V12, P1370, DOI 10.1038/nn.2412
   Schrouff J, 2013, INT WORKSHOP PATTERN, P124, DOI 10.1109/PRNI.2013.40
   Schrouff J, 2012, PLOS ONE, V7, DOI 10.1371/journal.pone.0035860
   Scicurious, 2012, IGNOBEL PRIZE NEUROS
   Seolhwa Lee, 2018, Cluster Computing, V21, P1097, DOI 10.1007/s10586-017-0746-2
   Shaffer TR, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P954, DOI 10.1145/2786805.2803188
   Sharafi Z, 2020, EMPIR SOFTW ENG, V25, P3128, DOI 10.1007/s10664-020-09829-4
   Sharafi Z, 2015, ASIA PAC SOFWR ENG, P96, DOI 10.1109/APSEC.2015.53
   Sharafi Z, 2015, INFORM SOFTWARE TECH, V67, P79, DOI 10.1016/j.infsof.2015.06.008
   Shawe-Taylor J., 2004, KERNEL METHODS PATTE
   SHEPARD RN, 1971, SCIENCE, V171, P701, DOI 10.1126/science.171.3972.701
   Shull E, 2001, PROC INT CONF SOFTW, P726
   Siegmund J, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P140, DOI 10.1145/3106237.3106268
   Siegmund J, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P378, DOI 10.1145/2568225.2568252
   Sillito J., 2006, Proceedings of the 14th ACM SIGSOFT International Symposium on Foundations of Software Engineering, P23
   Smith K, 2012, NATURE, V484, P24, DOI 10.1038/484024a
   Smith SM, 2009, P NATL ACAD SCI USA, V106, P13040, DOI 10.1073/pnas.0905267106
   Solimeno A, 2008, COMPUT EDUC, V51, P109, DOI 10.1016/j.compedu.2007.04.003
   Sommerville I., 2010, SOFTWARE ENG
   Stadler Jorg, 2016, SIMULTANEOUS FMRI AN
   Stoodley CJ, 2012, NEUROIMAGE, V59, P1560, DOI 10.1016/j.neuroimage.2011.08.065
   STROM RE, 1986, IEEE T SOFTWARE ENG, V12, P157, DOI 10.1109/TSE.1986.6312929
   Tak S, 2014, NEUROIMAGE, V85, P72, DOI 10.1016/j.neuroimage.2013.06.016
   Terrell J, 2017, PEERJ COMPUT SCI, DOI 10.7717/peerj-cs.111
   Tkachenko Vadim., 2016, 3 FUNDAMENTAL DATA S
   Tomasi D, 2007, BRAIN RES, V1132, P158, DOI 10.1016/j.brainres.2006.11.030
   TRACY DM, 1987, SEX ROLES, V17, P115, DOI 10.1007/BF00287620
   Triantafyllou C, 2005, NEUROIMAGE, V26, P243, DOI 10.1016/j.neuroimage.2005.01.007
   Tsotsis Alexia, 2011, MEET PHABRICATOR THE
   Tylén K, 2012, FRONT HUM NEUROSCI, V6, DOI 10.3389/fnhum.2012.00331
   Tzourio-Mazoyer N, 2002, NEUROIMAGE, V15, P273, DOI 10.1006/nimg.2001.0978
   van Atteveldt Nienke, 2018, Frontline Learn Res, V6, P186, DOI 10.14786/flr.v6i3.366
   van den Heuvel MP, 2010, EUR NEUROPSYCHOPHARM, V20, P519, DOI 10.1016/j.euroneuro.2010.03.008
   Wai J, 2009, J EDUC PSYCHOL, V101, P817, DOI 10.1037/a0016127
   Weiss C, 2007, P 4 INT WORKSH MIN S, P1, DOI [10.1109/MSR.2007.13, DOI 10.1109/MSR.2007.13]
   Williams R., 1971, Computing Surveys, V3, P1, DOI 10.1145/356583.356584
   Williamson Leigh., 2008, RAT SOFTW DEV C
   Wobbrock JO, 2011, 29TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, P143, DOI 10.1145/1978942.1978963
   Yang EM, 2003, INT J SCI EDUC, V25, P329, DOI 10.1080/09500690210126784
   Zanjani MB, 2016, IEEE T SOFTWARE ENG, V42, P530, DOI 10.1109/TSE.2015.2500238
   Zutao Zhang, 2010, Journal of Control Theory and Applications, V8, P181, DOI 10.1007/s11768-010-8043-0
NR 173
TC 11
Z9 13
U1 5
U2 17
PU ASSOC COMPUTING MACHINERY
PI NEW YORK
PA 1601 Broadway, 10th Floor, NEW YORK, NY USA
SN 1049-331X
EI 1557-7392
J9 ACM T SOFTW ENG METH
JI ACM Trans. Softw. Eng. Methodol.
PD MAY
PY 2021
VL 30
IS 3
AR 30
DI 10.1145/3434643
PG 40
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA SA7JW
UT WOS:000649478300006
DA 2024-07-18
ER

PT J
AU Bao, LF
   Xing, ZC
   Xia, X
   Lo, D
   Wu, MH
   Yang, XH
AF Bao, Lingfeng
   Xing, Zhenchang
   Xia, Xin
   Lo, David
   Wu, Minghui
   Yang, Xiaohu
TI psc2code: Denoising Code Extraction from Programming Screencasts
SO ACM TRANSACTIONS ON SOFTWARE ENGINEERING AND METHODOLOGY
LA English
DT Article
DE Programming videos; deep learning; code search
AB Progranuning screencasts have become a pervasive resource on the Internet, which help developers learn new progranuning technologies or skills. The source code in progranuning screencasts is an important and valuable information for developers. But the streaming nature of programming screencasts (i.e., a sequence of screen-captured images) limits the ways that developers can interact with the source code in the screencasts. Many studies use the Optical Character Recognition (OCR) technique to convert screen images (also referred to as video frames) into textual content, which can then be indexed and searched easily. However, noisy screen images significantly affect the quality of source code extracted by OCR, for example, no-code frames (e.g., PowerPoint slides, web pages of API specification), non-code regions (e.g., Package Explorer view, Console view), and noisy code regions with code in completion suggestion popups. Furthermore, due to the code characteristics (e.g., long compound identifiers like ItemListener), even professional OCR tools cannot extract source code without errors from screen images. The noisy OCRed source code will negatively affect the downstream applications, such as the effective search and navigation of the source code content in programming screencasts.
   In this article, we propose an approach named psc2code to denoise the process of extracting source code from programming screencasts. First, psc2code leverages the Convolutional Neural Network (CNN) based image classification to remove non-code and noisy-code frames. Then, psc2code performs edge detection and clustering-based image segmentation to detect sub-windows in a code frame, and based on the detected subwindows, it identifies and crops the screen region that is most likely to be a code editor. Finally, psc2code calls the API of a professional OCR tool to extract source code from the cropped code regions and leverages the OCRed cross-frame information in the programming screencast and the statistical language model of a large corpus of source code to correct errors in the OCRed source code.
   We conduct an experiment on 1,142 programming screencasts from YouTube. We find that our CNN-based image classification technique can effectively remove the non-code and noisy-code frames, which achieves an F1-score of 0.95 on the valid code frames. We also find that psc2code can significantly improve the quality of the OCRed source code by truly correcting about half of incorrectly OCRed words. Based on the source code denoised by psc2code, we implement two applications: (1) a programming screencast search engine; (2) an interaction-enhanced programming screencast watching tool. Based on the source code extracted from the 1,142 collected programming screencasts, our experiments show that our programming screencast search engine achieves the precision@5, 10, and 20 of 0.93, 0.81, and 0.63, respectively. We also conduct a user study of our interaction-enhanced programming screencast watching tool with 10 participants. This user study shows that our interaction-enhanced watching tool can help participants learn the knowledge in the programming video more efficiently and effectively.
C1 [Bao, Lingfeng] Zhejiang Univ, Coll Comp Sci & Technol, 38 Zheda Rd, Hangzhou 310000, Zhejiang, Peoples R China.
   [Bao, Lingfeng] Zhejiang Univ, Ningbo Res Inst, Ningbo, Zhejiang, Peoples R China.
   [Bao, Lingfeng] PengCheng Lab, Shenzhen, Peoples R China.
   [Xing, Zhenchang] Australian Natl Univ, Canberra, ACT 2601, Australia.
   [Xia, Xin] Monash Univ, Wellington Rd, Melbourne, Vic, Australia.
   [Lo, David] Singapore Management Univ, 81 Victoria St, Singapore 188065, Singapore.
   [Wu, Minghui] Zhejiang Univ City Coll, 51 Huzhou Rd, Hangzhou 310000, Zhejiang, Peoples R China.
   [Yang, Xiaohu] Zhejiang Univ, 38 Zheda Rd, Hangzhou 310000, Zhejiang, Peoples R China.
C3 Zhejiang University; Zhejiang University; Australian National
   University; Monash University; Singapore Management University; Hangzhou
   City University; Zhejiang University
RP Xia, X (corresponding author), Monash Univ, Wellington Rd, Melbourne, Vic, Australia.
EM lingfengbao@zju.edu.cn; zhenchang.Xing@anu.edu.au; Xin.Xia@monash.edu;
   davidlo@smu.edu.sg; mhwu@zucc.edu.cn; yangxh@zju.edu.cn
RI Xia, Xin/AAD-6217-2022; bao, lingfeng/AEG-8299-2022; Lo,
   David/A-2493-2012
OI Xia, Xin/0000-0002-6302-3256; Wu, Minghui/0000-0001-8179-7119; Lo,
   David/0000-0002-4367-7201
FU National Key Research and Development Program of China [2018YFB1003904];
   NSFC [61902344, 61972339]; Australian Research Council's Discovery Early
   Career Researcher Award (DECRA) [DE200100021]; ANU-Data61 Collaborative
   Researh Project [CO19314]
FX This research was partially supported by the National Key Research and
   Development Program of China (2018YFB1003904), NSFC Program (No.
   61972339), NSFC Program (No. 61902344), the Australian Research
   Council's Discovery Early Career Researcher Award (DECRA) funding scheme
   (DE200100021), and ANU-Data61 Collaborative Researh Project CO19314.
CR Alahmadi M, 2018, PROMISE'18: PROCEEDINGS OF THE 14TH INTERNATIONAL CONFERENCE ON PREDICTIVE MODELS AND DATA ANALYTICS IN SOFTWARE ENGINEERING, P2, DOI 10.1145/3273934.3273935
   Baeza-Yates Ricardo, 1999, MODERN INFORM RETRIE, V463
   Banovic N, 2012, UIST'12: PROCEEDINGS OF THE 25TH ANNUAL ACM SYMPOSIUM ON USER INTERFACE SOFTWARE AND TECHNOLOGY, P83
   Bao LF, 2015, IEEE INT CONF AUTOM, P864, DOI 10.1109/ASE.2015.90
   Bao LF, 2019, IEEE T SOFTWARE ENG, V45, P823, DOI 10.1109/TSE.2018.2802916
   Bao LF, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P399, DOI 10.1109/SANER.2015.7081850
   CANNY J, 1986, IEEE T PATTERN ANAL, V8, P679, DOI 10.1109/TPAMI.1986.4767851
   Dixon M, 2010, CHI2010: PROCEEDINGS OF THE 28TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, VOLS 1-4, P1525
   Ester M., 1996, KDD 96, P226, DOI DOI 10.5555/3001460.3001507
   FLEISS JL, 1971, PSYCHOL BULL, V76, P378, DOI 10.1037/h0031619
   Keith Toni-Jan, 2013, Proc. ACM SIGCHI Conf. Human Factors in Comput. Syst, P1139
   Khandwala K, 2018, PROCEEDINGS OF THE FIFTH ANNUAL ACM CONFERENCE ON LEARNING AT SCALE (L@S'18), DOI 10.1145/3231644.3231652
   MacLeod L, 2015, INT C PROGRAM COMPRE, P104, DOI 10.1109/ICPC.2015.19
   Matas J, 2000, COMPUT VIS IMAGE UND, V78, P119, DOI 10.1006/cviu.1999.0831
   Moslehi P, 2018, IEEE WORK CONF MIN S, P192, DOI 10.1145/3196398.3196439
   Ott J, 2018, INT C PROGRAM COMPRE, P336, DOI 10.1145/3196321.3196359
   Ott J, 2019, J BIG DATA-GER, V6, DOI 10.1186/s40537-019-0198-z
   Ott J, 2018, IEEE WORK CONF MIN S, P376, DOI 10.1145/3196398.3196402
   Ponzanelli L., 2017, IEEE T SOFTWARE ENG, V45, P464
   Ponzanelli L, 2016, PROC INT CONF SOFTW, P261, DOI 10.1145/2884781.2884824
   Rao S., 2011, P 8 WORK C MIN SOFTW, P43
   Redmon J., 2016, PROC CVPR IEEE, DOI [10.1109/CVPR.2016.91, DOI 10.1109/CVPR.2016.91]
   Scott J, 2014, S VIS LANG HUM CEN C, P45, DOI 10.1109/VLHCC.2014.6883020
   Shin HV, 2015, ACM T GRAPHIC, V34, DOI 10.1145/2816795.2818123
   Tamrawi A, 2011, P 19 ACM SIGSOFT S 1, P365, DOI [DOI 10.1145/2025113.2025163, 10.31274/etd-180810-1814, DOI 10.31274/ETD-180810-1814]
   WILCOXON F, 1945, BIOMETRICS BULL, V1, P80, DOI 10.1093/jee/39.2.269
   Wu DC, 2000, IEE P-VIS IMAGE SIGN, V147, P29, DOI 10.1049/ip-vis:20000104
   Xia X, 2017, AUTOMAT SOFTW ENG, V24, P455, DOI 10.1007/s10515-016-0204-z
   Xia X, 2015, AUTOMAT SOFTW ENG, V22, P75, DOI 10.1007/s10515-014-0162-2
   Yadid S, 2016, ONWARD!'16: PROCEEDINGS OF THE 2016 ACM INTERNATIONAL SYMPOSIUM ON NEW IDEAS, NEW PARADIGMS, AND REFLECTIONS ON PROGRAMMING AND SOFTWARE, P98, DOI 10.1145/2986012.2986021
   Yeh T, 2009, UIST 2009: PROCEEDINGS OF THE 22ND ANNUAL ACM SYMPOSIUM ON USER INTERFACE SOFTWARE AND TECHNOLOGY, P183
   Zhou J, 2012, PROC INT CONF SOFTW, P14, DOI 10.1109/ICSE.2012.6227210
   Zitnick CL, 2014, LECT NOTES COMPUT SC, V8693, P391, DOI 10.1007/978-3-319-10602-1_26
NR 33
TC 16
Z9 20
U1 0
U2 5
PU ASSOC COMPUTING MACHINERY
PI NEW YORK
PA 1601 Broadway, 10th Floor, NEW YORK, NY USA
SN 1049-331X
EI 1557-7392
J9 ACM T SOFTW ENG METH
JI ACM Trans. Softw. Eng. Methodol.
PD JUL
PY 2020
VL 29
IS 3
AR 21
DI 10.1145/3392093
PG 38
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA OJ1OF
UT WOS:000583736300009
OA Green Published, Green Submitted
DA 2024-07-18
ER

PT J
AU Sarro, F
   Petrozziello, A
AF Sarro, Federica
   Petrozziello, Alessio
TI Linear Programming as a Baseline for Software Effort Estimation
SO ACM TRANSACTIONS ON SOFTWARE ENGINEERING AND METHODOLOGY
LA English
DT Article
DE Software effort estimation; linear programming; benchmarking
ID EFFORT PREDICTION; TABU SEARCH; MODELS; VALIDATION; ALGORITHMS;
   REGRESSION; ERROR; TESTS
AB Software effort estimation studies still suffer from discordant empirical results (i.e., conclusion instability) mainly due to the lack of rigorous benchmarking methods. So far only one baseline model, namely, Automatically Transformed Linear Model (ATLM), has been proposed yet it has not been extensively assessed. In this article, we propose a novel method based on Linear Programming (dubbed as Linear Programming for Effort Estimation, LP4EE) and carry out a thorough empirical study to evaluate the effectiveness of both LP4EE and ATLM for benchmarking widely used effort estimation techniques. The results of our study confirm the need to benchmark every other proposal against accurate and robust baselines. They also reveal that LP4EE is more accurate than ATLM for 17% of the experiments and more robust than ATLM against different data splits and cross-validation methods for 44% of the cases. These results suggest that using LP4EE as a baseline can help reduce conclusion instability. We make publicly available an open-source implementation of LP4EE in order to facilitate its adoption in future studies.
C1 [Sarro, Federica] UCL, Dept Comp Sci, London WC1E 6BT, England.
   [Petrozziello, Alessio] Univ Portsmouth, Sch Comp, Portsmouth PO1 3HE, Hants, England.
C3 University of London; University College London; University of
   Portsmouth
RP Sarro, F (corresponding author), UCL, Dept Comp Sci, London WC1E 6BT, England.
EM f.sarro@ucl.ac.uk; alessio.petrozziello@port.ac.uk
OI Sarro, Federica/0000-0002-9146-442X
FU EPSRC [EP/J017515/1] Funding Source: UKRI
CR ALBRECHT AJ, 1983, IEEE T SOFTWARE ENG, V9, P639, DOI 10.1109/TSE.1983.235271
   [Anonymous], 2008, Proceedings of the 4th international workshop on Predictor models in software engineering, DOI [DOI 10.1145/1370788.1370804, 10.1145/1370788.1370804]
   [Anonymous], 1995, Empirical methods for artificial intelligence
   Arcuri A, 2014, SOFTW TEST VERIF REL, V24, P219, DOI 10.1002/stvr.1486
   Bailey J. W., 1981, 5th International Conference on Software Engineering, P107
   Bhattacharya Pamela., 2011, PROCEEDING 8 WORKING, P207, DOI DOI 10.1145/1985441.1985472
   Blewitt ME, 2008, NAT GENET, V40, P663, DOI 10.1038/ng.142
   Boehm BW., 1981, Software Engineering Economics
   Briand L. C., 2002, Encyclopedia of software engineering, P1160, DOI DOI 10.1002/0471028959.SOF282
   Chen JF, 2019, IEEE T SOFTWARE ENG, V45, P597, DOI 10.1109/TSE.2018.2790925
   Cliff N., 2014, Ordinal Methods for Behavioral Data Analysis
   Cohen J., 1988, STAT POWER ANAL BEHA
   Conte D., 1986, SOFTWARE ENG METRICS
   Corazza A, 2013, EMPIR SOFTW ENG, V18, P506, DOI 10.1007/s10664-011-9187-3
   Corazza A., 2010, P PROMISE 10
   Dantzig G., 2016, LINEAR PROGRAMMING E
   De Marco L, 2014, PROC INT CONF CLOUD, P42
   Desharnais J.M., 1989, THESIS
   Di Martino Sergio, 2011, Product-Focused Software Process Improvement. Proceedings 12th International Conference, PROFES 2011, P186, DOI 10.1007/978-3-642-21843-9_16
   Di Martino S, 2016, INFORM SOFTWARE TECH, V72, P90, DOI 10.1016/j.infsof.2015.12.001
   Rodríguez JD, 2010, IEEE T PATTERN ANAL, V32, P569, DOI 10.1109/TPAMI.2009.187
   Dimitriadou E., 2008, R package, V1, P5
   Ferrucci Filomena, 2010, 2010 Proceedings of Second International Symposium on Search Based Software Engineering (SSBSE), P89, DOI 10.1109/SSBSE.2010.20
   Ferrucci F, 2010, EUROMICRO CONF PROC, P350, DOI 10.1109/SEAA.2010.59
   Ferrucci F., 2014, Softw. Proj. Manag. Chang. World, P373
   Ferrucci F., 2012, PROC 8 INT C PREDICT, P29
   Ferrucci F, 2015, LECT NOTES COMPUT SC, V9459, P271, DOI 10.1007/978-3-319-26844-6_20
   Ferrucci F, 2015, PROCEEDINGS 41ST EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS SEAA 2015, P365, DOI 10.1109/SEAA.2015.23
   Ferrucci F, 2009, LECT NOTES COMPUT SC, V5891, P307, DOI 10.1007/978-3-642-05415-0_22
   Foss T, 2003, IEEE T SOFTWARE ENG, V29, P985, DOI 10.1109/TSE.2003.1245300
   Fu W, 2016, INFORM SOFTWARE TECH, V76, P135, DOI 10.1016/j.infsof.2016.04.017
   HOCHBERG Y, 1988, BIOMETRIKA, V75, P800, DOI 10.2307/2336325
   HOCHBERG Y, 1990, STAT MED, V9, P811, DOI 10.1002/sim.4780090710
   Jorgensen M, 2007, IEEE T SOFTWARE ENG, V33, P33, DOI 10.1109/TSE.2007.256943
   Kadoda G, 2001, LECT NOTES ARTIF INT, V2080, P276
   Kadoda G., 2001, P INT SOFTW METR S M, P349
   KEMERER CF, 1987, COMMUN ACM, V30, P416, DOI 10.1145/22899.22906
   Keung J, 2013, AUTOMAT SOFTW ENG, V20, P543, DOI 10.1007/s10515-012-0108-5
   Kitchenham B, 2002, J SYST SOFTWARE, V64, P57, DOI 10.1016/S0164-1212(02)00021-3
   KITCHENHAM B, 1995, IEEE SOFTWARE, V12, P52, DOI 10.1109/52.391832
   Kitchenham B, 2009, P 5 INT C PRED MOD S, P1, DOI DOI 10.1145/1540438.1540444
   Kitchenham B. A., 2001, IEE Proceedings-Software, V148, P81, DOI 10.1049/ip-sen:20010506
   Kitchenham B. A., 2004, "8th Internation Conference on Empirical Assessment in Software Engineering (EASE 2004)" Workshop - 26th International Conference on Software Engineering, P47, DOI 10.1049/ic:20040398
   Kocaguneli E, 2013, IEEE T SOFTWARE ENG, V39, P1040, DOI 10.1109/TSE.2012.88
   Kocaguneli E, 2012, IEEE T SOFTWARE ENG, V38, P1403, DOI 10.1109/TSE.2011.111
   Kocaguneli E, 2012, IEEE T SOFTWARE ENG, V38, P425, DOI 10.1109/TSE.2011.27
   Kocaguneli E, 2010, EUROMICRO CONF PROC, P323, DOI 10.1109/SEAA.2010.19
   Langdon WB, 2016, INFORM SOFTWARE TECH, V73, P16, DOI 10.1016/j.infsof.2016.01.003
   MacDonell SG, 2003, NINTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM, PROCEEDINGS, P73, DOI 10.1109/METRIC.2003.1232457
   Mair C, 2000, J SYST SOFTWARE, V53, P23, DOI 10.1016/S0164-1212(00)00005-4
   MAXWELL K, 2002, SOFTWARE QUALITY I S
   Mendes E, 2004, 10TH INTERNATIONAL SYMPOSIUM ON SOFTWARE METRICS, PROCEEDINGS, P348, DOI 10.1109/METRIC.2004.1357920
   Mendes E, 2003, EMPIR SOFTW ENG, V8, P163, DOI 10.1023/A:1023062629183
   Mendes E., 2014, 18 INT C EVALUATION, P1, DOI [10.1145/2601248.2601284, DOI 10.1145/2601248.2601284]
   Mendes E, 2008, IEEE T SOFTWARE ENG, V34, P723, DOI 10.1109/TSE.2008.64
   Menzies T, 2005, PROC INT CONF SOFTW, P587
   Menzies T., 2017, The SEACRAFT Repository of Empirical Software Engineering Data
   Menzies T, 2012, EMPIR SOFTW ENG, V17, P1, DOI 10.1007/s10664-011-9193-5
   Minku L, 2015, INT SYMP EMP SOFTWAR, P172, DOI 10.1109/ESEM.2015.7321199
   Mittas N, 2015, INFORM SOFTWARE TECH, V57, P310, DOI 10.1016/j.infsof.2014.05.010
   Mittas N, 2013, IEEE T SOFTWARE ENG, V39, P537, DOI 10.1109/TSE.2012.45
   Mittas N, 2012, EMPIR SOFTW ENG, V17, P34, DOI 10.1007/s10664-011-9177-5
   MIYAZAKI Y, 1994, J SYST SOFTWARE, V27, P3, DOI 10.1016/0164-1212(94)90110-4
   Myrtveit I, 2005, IEEE T SOFTWARE ENG, V31, P380, DOI 10.1109/TSE.2005.58
   Nash JC, 2000, COMPUT SCI ENG, V2, P29, DOI 10.1109/5992.814654
   Neter J., 1996, APPL LINEAR STAT MOD
   Neumann Geoffrey, 2015, Search-Based Software Engineering. 7th International Symposium, SSBSE 2015. Proceedings: LNCS 9275, P318, DOI 10.1007/978-3-319-22183-0_29
   Port D, 2008, ESEM'08: PROCEEDINGS OF THE 2008 ACM-IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, P51
   Pournelle G. H., 1953, Journal of Mammalogy, V34, P133, DOI 10.1890/0012-9658(2002)083[1421:SDEOLC]2.0.CO;2
   Rardin R. L., 1998, Optimization in Operations Research
   ROYSTON JP, 1982, J R STAT SOC C-APPL, V31, P115
   Sarro F., 2012, Proceedings of the 27th Annual ACM Symposium on Applied Computing, SAC '12, P1215, DOI DOI 10.1145/2245276.2231967
   Sarro F, 2012, P 27 ANN ACM S APPL, P1221, DOI DOI 10.1145/2245276.2231968
   Sarro F, 2018, INT REQUIR ENG CONF, P76, DOI 10.1109/RE.2018.00018
   Sarro F, 2017, IEEE T SOFTWARE ENG, V43, P898, DOI 10.1109/TSE.2017.2650914
   Sarro F, 2016, PROC INT CONF SOFTW, P619, DOI 10.1145/2884781.2884830
   Shepperd M, 1997, IEEE T SOFTWARE ENG, V23, P736, DOI 10.1109/32.637387
   Shepperd M., 2000, Empirical Software Engineering, V5, P175, DOI 10.1023/A:1026582314146
   Shepperd M, 1996, PROC INT CONF SOFTW, P170, DOI 10.1109/ICSE.1996.493413
   Shepperd M, 2012, INFORM SOFTWARE TECH, V54, P820, DOI 10.1016/j.infsof.2011.12.008
   Sigweni B, 2016, PROCEEDINGS OF THE 20TH INTERNATIONAL CONFERENCE ON EVALUATION AND ASSESSMENT IN SOFTWARE ENGINEERING 2016 (EASE '16), DOI 10.1145/2915970.2916005
   Stensrud E, 2003, EMPIR SOFTW ENG, V8, P139, DOI 10.1023/A:1023010612345
   Stensrud E., 1996, P METRICS 98, P205
   Tantithamthavorn C., 2018, IEEE TSE
   Tin Kam Ho, 1995, Proceedings of the Third International Conference on Document Analysis and Recognition, P278, DOI 10.1109/ICDAR.1995.598994
   Whigham PA, 2015, ACM T SOFTW ENG METH, V24, DOI 10.1145/2738037
   Yun F. H., 2010, **DATA OBJECT**, DOI 10.5281/zenodo.268446
   Zhang HY, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P1042, DOI 10.1109/ICSE.2013.6606654
NR 88
TC 30
Z9 31
U1 2
U2 11
PU ASSOC COMPUTING MACHINERY
PI NEW YORK
PA 1601 Broadway, 10th Floor, NEW YORK, NY USA
SN 1049-331X
EI 1557-7392
J9 ACM T SOFTW ENG METH
JI ACM Trans. Softw. Eng. Methodol.
PD OCT
PY 2018
VL 27
IS 3
AR 12
DI 10.1145/3234940
PG 28
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HJ4EZ
UT WOS:000457128100004
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Zhou, YM
   Yang, YB
   Lu, HM
   Chen, L
   Li, YH
   Zhao, YY
   Qian, JY
   Xu, BW
AF Zhou, Yuming
   Yang, Yibiao
   Lu, Hongmin
   Chen, Lin
   Li, Yanhui
   Zhao, Yangyang
   Qian, Junyan
   Xu, Baowen
TI How Far We Have Progressed in the Journey? An Examination of
   Cross-Project Defect Prediction
SO ACM TRANSACTIONS ON SOFTWARE ENGINEERING AND METHODOLOGY
LA English
DT Article
DE Defect prediction; cross-project; supervised; unsupervised; model
ID SOFTWARE FAULT PREDICTION; COMPLEXITY; QUALITY; METRICS; MODELS
AB Background. Recent years have seen an increasing interest in cross-project defect prediction (CPDP), which aims to apply defect prediction models built on source projects to a target project. Currently, a variety of (complex) CPDP models have been proposed with a promising prediction performance.
   Problem. Most, if not all, of the existing CPDP models are not compared against those simple module size models that are easy to implement and have shown a good performance in defect prediction in the literature.
   Objective. We aim to investigate how far we have really progressed in the journey by comparing the performance in defect prediction between the existing CPDP models and simple module size models.
   Method. We first use module size in the target project to build two simple defect prediction models, ManualDown and ManualUp, which do not require any training data from source projects. ManualDown considers a larger module as more defect-prone, while ManualUp considers a smaller module as more defect-prone. Then, we take the following measures to ensure a fair comparison on the performance in defect prediction between the existing CPDP models and the simple module size models: using the same publicly available data sets, using the same performance indicators, and using the prediction performance reported in the original cross-project defect prediction studies.
   Result. The simple module size models have a prediction performance comparable or even superior to most of the existing CPDP models in the literature, including many newly proposed models.
   Conclusion. The results caution us that, if the prediction performance is the goal, the real progress in CPDP is not being achieved as it might have been envisaged. We hence recommend that future studies should include ManualDown/ManualUp as the baseline models for comparison when developing new CPDP models to predict defects in a complete target project.
C1 [Zhou, Yuming; Yang, Yibiao; Lu, Hongmin; Chen, Lin; Li, Yanhui; Zhao, Yangyang; Xu, Baowen] Nanjing Univ, State Key Lab Novel Software Technol, 163 Xianlin Rd, Nanjing 210023, Jiangsu, Peoples R China.
   [Qian, Junyan] Guilin Univ Elect Technol, Guangxi Key Lab Trusted Software, Guilin 541004, Guangxi Provinc, Peoples R China.
C3 Nanjing University; Guilin University of Electronic Technology
RP Zhou, YM; Xu, BW (corresponding author), Nanjing Univ, State Key Lab Novel Software Technol, 163 Xianlin Rd, Nanjing 210023, Jiangsu, Peoples R China.
EM zhouyuming@nju.edu.cn; yangyibiao@nju.edu.cn; hmlu@nju.edu.cn;
   lchen@nju.edu.cn; yanhuili@nju.edu.cn; qjy2000@gmail.com;
   csurjzhyy@163.com; bwxu@nju.edu.cn
RI zhao, yang/GXF-4424-2022; Xu, Baowen/IXW-4882-2023; Yang,
   Yibiao/ABP-4159-2022; zhao, yang/HTN-4320-2023
OI Xu, Baowen/0000-0001-7743-1296; Yang, Yibiao/0000-0003-1153-2013; 
FU National Key Basic Research and Development Program of China
   [2014CB340702]; National Natural Science Foundation of China [61432001,
   61772259, 61472175, 61472178, 61702256, 61562015, 61403187]
FX This work is partially supported by the National Key Basic Research and
   Development Program of China (2014CB340702) and the National Natural
   Science Foundation of China (61432001, 61772259, 61472175, 61472178,
   61702256, 61562015, 61403187).
CR Akiyama F., 1971, IFIP C, P353
   Altinger H, 2015, LECT NOTES COMPUT SC, V9447, P141, DOI 10.1007/978-3-319-25945-1_9
   Alves T, 2010, P 26 IEEE INT C SOFT, P1
   Amasaki S, 2015, PROCEEDINGS 41ST EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS SEAA 2015, P96, DOI 10.1109/SEAA.2015.25
   [Anonymous], P 20 INT C EV ASS SO
   [Anonymous], CLEI ELECTR J
   [Anonymous], P LAT AM COMP C CLEI
   [Anonymous], 2013, P 9 INT C PRED MOD S, DOI DOI 10.1145/2499393.2499395
   [Anonymous], COMP STUDY BENCHMARK
   [Anonymous], CORR
   [Anonymous], 2016, P 12 INT C PRED MOD
   [Anonymous], IEEE T SOFTW ENG
   [Anonymous], CORR
   [Anonymous], P 3 INT WORKSH PRED
   [Anonymous], J SYST SOFTW
   [Anonymous], THESIS
   [Anonymous], SYSTEMATIC LIT REV M
   [Anonymous], P 10 ACM IEEE INT S
   [Anonymous], PROC INT CONF SOFTW
   [Anonymous], PROC INT CONF SOFTW
   [Anonymous], COST SENSITIVE UNPUB
   [Anonymous], 2016, P 28 INT C SOFTW ENG
   [Anonymous], 2016, The promise repository of empirical software engineering data. north carolina state university, department of computer science
   [Anonymous], CLAMI
   [Anonymous], SHERBOLD REPLICATION
   [Anonymous], 2012, P ACM SIGSOFT 20 INT
   Arisholm E, 2010, J SYST SOFTWARE, V83, P2, DOI 10.1016/j.jss.2009.06.055
   BENJAMINI Y, 1995, J R STAT SOC B, V57, P289, DOI 10.1111/j.2517-6161.1995.tb02031.x
   Briand LC, 2002, IEEE T SOFTWARE ENG, V28, P706, DOI 10.1109/TSE.2002.1019484
   Canfora G, 2015, SOFTW TEST VERIF REL, V25, P426, DOI 10.1002/stvr.1570
   Canfora G, 2013, 2013 IEEE SIXTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST 2013), P252, DOI 10.1109/ICST.2013.38
   Cao QM, 2015, PROCEEDINGS OF THE 2015 FIRST INTERNATIONAL CONFERENCE ON RELIABILITY SYSTEMS ENGINEERING 2015 ICRSE
   Çatal Ç, 2016, TURK J ELECTR ENG CO, V24, P3714, DOI 10.3906/elk-1409-137
   Chen L, 2015, INFORM SOFTWARE TECH, V62, P67, DOI 10.1016/j.infsof.2015.01.014
   Chen X, 2018, INFORM SOFTWARE TECH, V93, P1, DOI 10.1016/j.infsof.2017.08.004
   Cheng M, 2016, INT J SOFTW ENG KNOW, V26, P1571, DOI 10.1142/S0218194016710017
   Cheung S.-C., 2011, P 19 ACM SIGSOFT S 1, P15
   Cohen J., 1988, STAT POWER ANAL BEHA
   Cruz AEC, 2009, INT SYMP EMP SOFTWAR, P461
   D'Ambros M, 2012, EMPIR SOFTW ENG, V17, P531, DOI 10.1007/s10664-011-9173-9
   Emam KE, 2001, IEEE T SOFTWARE ENG, V27, P630, DOI 10.1109/32.935855
   Faul F, 2007, BEHAV RES METHODS, V39, P175, DOI 10.3758/BF03193146
   Ferguson GeorgeA., 2005, STAT ANAL PSYCHOL ED, V6th
   Hall T, 2012, IEEE T SOFTWARE ENG, V38, P1276, DOI 10.1109/TSE.2011.103
   HANLEY JA, 1982, RADIOLOGY, V143, P29, DOI 10.1148/radiology.143.1.7063747
   Hassan AE, 2009, PROC INT CONF SOFTW, P78, DOI 10.1109/ICSE.2009.5070510
   He P, 2015, INFORM SOFTWARE TECH, V59, P170, DOI 10.1016/j.infsof.2014.11.006
   He Peng., 2014, CORR
   He ZM, 2012, AUTOMAT SOFTW ENG, V19, P167, DOI 10.1007/s10515-011-0090-3
   Herbold S, 2017, EMPIR SOFTW ENG, V22, P1866, DOI 10.1007/s10664-016-9468-y
   Herzig K, 2013, PROC INT SYMP SOFTW, P118, DOI 10.1109/ISSRE.2013.6698911
   Hosseini S., 2016, P THE 12 INT C PREDI, P1, DOI DOI 10.1145/2972958.2972964
   Jing XY, 2017, IEEE T SOFTWARE ENG, V43, P321, DOI 10.1109/TSE.2016.2597849
   Jing XY, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P496, DOI 10.1145/2786805.2786813
   Jureczko M., 2010, P 6 INT C PREDICTIVE
   Kamei Y, 2016, EMPIR SOFTW ENG, V21, P2072, DOI 10.1007/s10664-015-9400-x
   Kaur Arvinder, 2016, 2016 2nd International Conference on Computational Intelligence and Networks (CINE), P154, DOI 10.1109/CINE.2016.34
   Kaur Ishleen, 2016, 2016 International Conference on Computational Techniques in Information and Communication Technologies (ICCTICT). Proceedings, P215, DOI 10.1109/ICCTICT.2016.7514581
   Kawata K, 2015, 3RD INTERNATIONAL CONFERENCE ON APPLIED COMPUTING AND INFORMATION TECHNOLOGY (ACIT 2015) 2ND INTERNATIONAL CONFERENCE ON COMPUTATIONAL SCIENCE AND INTELLIGENCE (CSI 2015), P2, DOI 10.1109/ACIT-CSI.2015.104
   Khoshgoftaar TM, 2009, SOFTWARE QUAL J, V17, P25, DOI 10.1007/s11219-008-9058-3
   Koru AG, 2008, EMPIR SOFTW ENG, V13, P473, DOI 10.1007/s10664-008-9080-x
   Koru AG, 2009, IEEE T SOFTWARE ENG, V35, P293, DOI 10.1109/TSE.2008.90
   Koru G, 2010, EMPIR SOFTW ENG, V15, P577, DOI [10.1007/s10664-010-9132-X, 10.1007/s10664-010-9132-x]
   Kosker Y, 2009, EXPERT SYST APPL, V36, P10000, DOI 10.1016/j.eswa.2008.12.066
   Krishna R, 2016, IEEE INT CONF AUTOM, P122, DOI 10.1145/2970276.2970339
   Lanza M, 2016, IEEE SOFTWARE, V33, P102, DOI 10.1109/MS.2016.156
   Lewis C, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P372, DOI 10.1109/ICSE.2013.6606583
   Li ZQ, 2017, PROC IEEE INT CONF S, P91, DOI 10.1109/ICSME.2017.19
   Liu Y, 2010, IEEE T SOFTWARE ENG, V36, P852, DOI 10.1109/TSE.2010.51
   Ma BJ, 2014, INT J SOFTW ENG KNOW, V24, P61, DOI 10.1142/S021819401450003X
   Ma Y, 2012, INFORM SOFTWARE TECH, V54, P248, DOI 10.1016/j.infsof.2011.09.007
   Menzies T., 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P343, DOI 10.1109/ASE.2011.6100072
   Menzies T, 2010, AUTOMAT SOFTW ENG, V17, P375, DOI 10.1007/s10515-010-0069-5
   Mizuno O, 2014, INT WORKSH EMPIR ENG, P43, DOI 10.1109/IWESEP.2014.9
   Monden A, 2013, IEEE T SOFTWARE ENG, V39, P1345, DOI 10.1109/TSE.2013.21
   Monperrus M, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P234, DOI 10.1145/2568225.2568324
   Moser R, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P181, DOI 10.1145/1368088.1368114
   Moshtari S., 2016, P 31 ANN ACM S APPL, P1415, DOI DOI 10.1145/2851613.2851777
   Moshtari S, 2013, COMPUT FRAUD SECUR, P8, DOI 10.1016/S1361-3723(13)70045-9
   Nagappan Nachiappan, 2010, Proceedings of the 2010 IEEE 21st International Symposium on Software Reliability Engineering (ISSRE 2010), P309, DOI 10.1109/ISSRE.2010.25
   Nagappan N., 2006, 28th International Conference on Software Engineering Proceedings, P452, DOI 10.1145/1134285.1134349
   Nagappan N, 2006, ISSRE 2006:17TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P62
   Nagappan N, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P521, DOI 10.1145/1368088.1368160
   Nam J, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P508, DOI 10.1145/2786805.2786814
   Nam J, 2015, IEEE INT CONF AUTOM, P452, DOI 10.1109/ASE.2015.56
   Nam J, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P382, DOI 10.1109/ICSE.2013.6606584
   Oliveira P, 2014, 2014 SOFTWARE EVOLUTION WEEK - IEEE CONFERENCE ON SOFTWARE MAINTENANCE, REENGINEERING, AND REVERSE ENGINEERING (CSMR-WCRE), P254, DOI 10.1109/CSMR-WCRE.2014.6747177
   Panichella A, 2014, 2014 SOFTWARE EVOLUTION WEEK - IEEE CONFERENCE ON SOFTWARE MAINTENANCE, REENGINEERING, AND REVERSE ENGINEERING (CSMR-WCRE), P164, DOI 10.1109/CSMR-WCRE.2014.6747166
   Peters F, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P801, DOI 10.1109/ICSE.2015.92
   Peters F, 2013, IEEE WORK CONF MIN S, P409, DOI 10.1109/MSR.2013.6624057
   Peters F, 2013, IEEE T SOFTWARE ENG, V39, P1054, DOI 10.1109/TSE.2013.6
   Peters F, 2012, PROC INT CONF SOFTW, P189, DOI 10.1109/ICSE.2012.6227194
   Premraj R, 2011, INT SYMP EMP SOFTWAR, P215, DOI 10.1109/ESEM.2011.30
   Qin FY, 2015, 2015 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE SECURITY AND RELIABILITY (QRS 2015), P43, DOI 10.1109/QRS.2015.17
   Qing H., 2015, ACM INT C P SER, P74
   Romano J, 2006, ANN M FLOR ASS I RES, P1
   Ryu D, 2016, APPL SOFT COMPUT, V49, P1062, DOI 10.1016/j.asoc.2016.04.009
   Ryu D, 2017, SOFTWARE QUAL J, V25, P235, DOI 10.1007/s11219-015-9287-1
   Ryu D, 2016, EMPIR SOFTW ENG, V21, P43, DOI 10.1007/s10664-014-9346-4
   Ryu D, 2015, J COMPUT SCI TECH-CH, V30, P969, DOI 10.1007/s11390-015-1575-5
   Shepperd M, 2013, IEEE T SOFTWARE ENG, V39, P1208, DOI 10.1109/TSE.2013.11
   Shieh G, 2007, J STAT COMPUT SIM, V77, P717, DOI 10.1080/10629360600635245
   Singh P., 2015, World Academy of Science, Engineering and Technology, International Journal of Computer, Electrical, Automation, Control and Information Engineering, V9, P800
   Singh P., 2013, Int. J. Comput. Appl., V74, P5, DOI DOI 10.5120/12903-9587
   Sliwerski J., 2005, ACM SIGSOFT SOFTWARE, P1, DOI DOI 10.1145/1082983.1083147
   Stuckman J, 2017, IEEE T RELIAB, V66, P17, DOI 10.1109/TR.2016.2630503
   Syer MD, 2015, IEEE T SOFTWARE ENG, V41, P176, DOI 10.1109/TSE.2014.2361131
   Thongmak M, 2003, SERP'03: PROCEEDINGS OF THE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING RESEARCH AND PRACTICE, VOLS 1 AND 2, P621
   Turhan B, 2013, INFORM SOFTWARE TECH, V55, P1101, DOI 10.1016/j.infsof.2012.10.003
   Turhan B, 2010, LECT NOTES COMPUT SC, V6156, P116, DOI 10.1007/978-3-642-13792-1_11
   Turhan B, 2009, EMPIR SOFTW ENG, V14, P540, DOI 10.1007/s10664-008-9103-7
   Uchigaki S., 2012, Proceedings of the 2012 13th ACIS International Conference on Software Engineering, Artificial Intelligence, Networking and Parallel & Distributed Computing (SNPD 2012), P476, DOI 10.1109/SNPD.2012.34
   Watanabe S., 2008, P 4 INT WORKSH PRED, P19
   Weyuker EJ, 2010, EMPIR SOFTW ENG, V15, P277, DOI 10.1007/s10664-009-9111-2
   Whigham PA, 2015, ACM T SOFTW ENG METH, V24, DOI 10.1145/2738037
   WILCOXON F, 1945, BIOMETRICS BULL, V1, P80, DOI 10.1093/jee/39.2.269
   WOHLIN Claes, 2014, P 18 INT C EVALUATIO, DOI [10.1145/2601248.2601268.10, 10.1145/2601248.2601268]
   Xia X, 2016, IEEE T SOFTWARE ENG, V42, P977, DOI 10.1109/TSE.2016.2543218
   Yamashita K, 2016, 2016 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY AND SECURITY (QRS 2016), P191, DOI 10.1109/QRS.2016.31
   You GA, 2016, INT J SOFTW ENG KNOW, V26, P1511, DOI 10.1142/S0218194016400155
   Yu LG, 2012, QUAL TECHNOL QUANT M, V9, P421, DOI 10.1080/16843703.2012.11673302
   Yu Q, 2016, 2016 INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, TESTING AND EVOLUTION (SATE 2016), P90, DOI 10.1109/SATE.2016.22
   Zhang F, 2017, EMPIR SOFTW ENG, V22, P3186, DOI 10.1007/s10664-017-9516-2
   Zhang F, 2016, EMPIR SOFTW ENG, V21, P2107, DOI 10.1007/s10664-015-9396-2
   Zhang HY, 2007, 14TH ASIA-PACIFIC SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P230, DOI 10.1109/ASPEC.2007.64
   Zhang Y, 2015, P INT COMP SOFTW APP, P264, DOI 10.1109/COMPSAC.2015.58
   Zhimin He, 2013, 2013 ACM / IEEE International Symposium on Empirical Software Engineering and Measurement (ESEM), P45, DOI 10.1109/ESEM.2013.20
   Zhou YM, 2014, ACM T SOFTW ENG METH, V23, DOI 10.1145/2556777
   Zimmerman T, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P91, DOI 10.1145/1595696.1595713
NR 129
TC 127
Z9 134
U1 2
U2 25
PU ASSOC COMPUTING MACHINERY
PI NEW YORK
PA 1601 Broadway, 10th Floor, NEW YORK, NY USA
SN 1049-331X
EI 1557-7392
J9 ACM T SOFTW ENG METH
JI ACM Trans. Softw. Eng. Methodol.
PD JUN
PY 2018
VL 27
IS 1
AR 1
DI 10.1145/3183339
PG 51
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GI7JW
UT WOS:000434679800002
DA 2024-07-18
ER

PT J
AU Nguyen, K
   Wang, K
   Bu, YY
   Fang, L
   Xu, GQ
AF Khanh Nguyen
   Wang, Kai
   Bu, Yingyi
   Fang, Lu
   Xu, Guoqing
TI Understanding and Combating Memory Bloat in Managed Data-Intensive
   Systems
SO ACM TRANSACTIONS ON SOFTWARE ENGINEERING AND METHODOLOGY
LA English
DT Article
DE Languages; Measurement; Performance; Big data; managed languages; memory
   management; performance optimization
AB The past decade has witnessed increasing demands on data-driven business intelligence that led to the proliferation of data-intensive applications. A managed object-oriented programming language such as Java is often the developer's choice for implementing such applications, due to its quick development cycle and rich suite of libraries and frameworks. While the use of such languages makes programming easier, their automated memory management comes at a cost. When the managed runtime meets large volumes of input data, memory bloat is significantly magnified and becomes a scalability-prohibiting bottleneck.
   This article first studies, analytically and empirically, the impact of bloat on the performance and scalability of large-scale, real-world data-intensive systems. To combat bloat, we design a novel compiler framework, called FACADE, that can generate highly efficient data manipulation code by automatically transforming the data path of an existing data-intensive application. The key treatment is that in the generated code, the number of runtime heap objects created for data classes in each thread is (almost) statically bounded, leading to significantly reduced memory management cost and improved scalability. We have implemented FACADE and used it to transform seven common applications on three real-world, already well-optimized data processing frameworks: GraphChi, Hyracks, and GPS. Our experimental results are very positive: the generated programs have (1) achieved a 3% to 48% execution time reduction and an up to 88x GC time reduction, (2) consumed up to 50% less memory, and (3) scaled to much larger datasets.
C1 [Khanh Nguyen; Wang, Kai; Bu, Yingyi; Fang, Lu; Xu, Guoqing] Univ Calif Irvine, Dept Comp Sci, Bren Hall, Irvine, CA 92697 USA.
C3 University of California System; University of California Irvine
RP Xu, GQ (corresponding author), Univ Calif Irvine, Dept Comp Sci, Bren Hall, Irvine, CA 92697 USA.
EM khanhtn1@ics.uci.edu; wangk7@ics.uci.edu; yingyib@ics.uci.edu;
   lfang3@ics.uci.edu; guoqingx@ics.uci.edu
OI Nguyen, Khanh/0000-0003-0400-1070
FU National Science Foundation [CNS-1321179, CCF-1409829, CNS-1613023,
   CNS-1703598]; Office of Naval Research [N00014-14-1-0549,
   N00014-16-1-2913]; Direct For Computer & Info Scie & Enginr; Division of
   Computing and Communication Foundations [1409423] Funding Source:
   National Science Foundation; Division Of Computer and Network Systems;
   Direct For Computer & Info Scie & Enginr [1613023] Funding Source:
   National Science Foundation
FX This work is supported by the National Science Foundation, under grant
   CNS-1321179, CCF-1409829, CNS-1613023, and CNS-1703598, and by the
   Office of Naval Research under grant N00014-14-1-0549 and
   N00014-16-1-2913.
CR Afrati F. N., 2010, EDBT, P99, DOI [DOI 10.1145/1739041.1739056, 10.1145/1739041.1739056]
   Agrawal P, 2008, PROC VLDB ENDOW, V1, P958, DOI 10.14778/1453856.1453960
   AIKEN A, 1995, SIGPLAN NOTICES, V30, P174, DOI 10.1145/223428.207137
   Altman E, 2010, ACM SIGPLAN NOTICES, V45, P739, DOI 10.1145/1932682.1869519
   [Anonymous], 2005, Sci. Program
   [Anonymous], 2010, Proceedings of the 7th USENIX Conference on Networked Systems Design and Implementation, NSDI'10, (USA)
   [Anonymous], 2011, CIDR
   [Anonymous], 2013, P 25 INT C SCI STAT, DOI DOI 10.1145/2484838.2484843
   [Anonymous], 2005, THESIS
   [Anonymous], 2014, SOOT FRAM
   [Anonymous], 2014, Help understanding - not enough space to cache RDD
   Apache, 2014, MAH PROJ
   Apache, 2014, HIV PROJ
   Apache, 2014, HAD OP SOURC IMPL MA
   Apache, 2014, AP FLINK
   Apache, 2014, GIR OP SOURC IMPL PR
   Azul, 2014, ZING JAV REAL TIM BU
   Back G, 2005, ACM T PROGR LANG SYS, V27, P583, DOI 10.1145/1075382.1075383
   Banga G, 1999, USENIX ASSOCIATION PROCEEDINGS OF THE THIRD SYMPOSIUM ON OPERATING SYSTEMS DESIGN AND IMPLEMENTATION (OSDI '99), P45
   Beebee W.S., 2001, EMSOFT 01, P289
   Blackburn SM, 2008, PLDI'08: PROCEEDINGS OF THE 2008 SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN & IMPLEMENTATION, P22, DOI 10.1145/1375581.1375586
   Blanchet B., 1999, ACM C OBJ OR PROGR S, P20
   Borkar V, 2011, PROC INT CONF DATA, P1151, DOI 10.1109/ICDE.2011.5767921
   Boyapati C, 2003, ACM SIGPLAN NOTICES, V38, P324, DOI 10.1145/780822.781168
   Bu Yingyi, 2013, ACM SIGNPLAN INT S M, P119
   Cascading, 2015, CASC EC
   Chaiken R, 2008, PROC VLDB ENDOW, V1, P1265, DOI 10.14778/1454159.1454166
   Chambers C, 2010, PLDI '10: PROCEEDINGS OF THE 2010 ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P363, DOI 10.1145/1806596.1806638
   Choi JD, 1999, ACM SIGPLAN NOTICES, V34, P1, DOI 10.1145/320385.320386
   CMU, 2015, OUT MEM ERR EFF SHAR
   Cplusplus, 2015, WHY IS JAV MOR POP C
   DataBricks, 2015, PROJ TUNGST
   Dean J, 2008, COMMUN ACM, V51, P107, DOI 10.1145/1327452.1327492
   Dittrich J, 2010, PROC VLDB ENDOW, V3, P518
   Dolby J., 2000, ACM SIGPLAN NOTICES, P345
   Dufour B., 2008, A scalable technique for characterizing the usage of temporaries in framework-intensive Java applications, P59, DOI DOI 10.1145/1453101.1453111
   Fang L, 2015, SOSP'15: PROCEEDINGS OF THE TWENTY-FIFTH ACM SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES, P394, DOI 10.1145/2815400.2815407
   Fisher K, 2006, ACM SIGPLAN NOTICES, V41, P2, DOI 10.1145/1111320.1111039
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   Gay D, 1998, ACM SIGPLAN NOTICES, V33, P313, DOI 10.1145/277652.277748
   Gay D, 2001, ACM SIGPLAN NOTICES, V36, P70, DOI 10.1145/381694.378815
   Gidra L, 2015, ACM SIGPLAN NOTICES, V50, P661, DOI [10.1145/2694344.2694361, 10.1145/2775054.2694361]
   Gog Ionel, 2015, 15 USENIX WORKSH HOT
   GRAEFE G, 1993, COMPUT SURV, V25, P73, DOI 10.1145/152610.152611
   Grossman D, 2002, ACM SIGPLAN NOTICES, V37, P282, DOI 10.1145/543552.512563
   Guo Zhenyu., 2012, 10th USENIX Symposium on Operating Systems Design and Implementation, OSDI 2012, Hollywood, CA, USA, October 8-10, 2012, P121
   Guyer SZ, 2006, ACM SIGPLAN NOTICES, V41, P364, DOI 10.1145/1133981.1134024
   Hallenberg N, 2002, ACM SIGPLAN NOTICES, V37, P141, DOI 10.1145/543552.512547
   Hawblitzel C, 2002, USENIX ASSOCIATION PROCEEDINGS OF THE FIFTH SYMPOSIUM ON OPERATING SYSTEMS DESIGN AND IMPLEMENTATION, P391, DOI 10.1145/1060289.1060325
   Hicks Michael, 2004, P 4 INT S MEM MAN VA, P73, DOI DOI 10.1145/1029873.1029883
   Isard M., 2007, Operating Systems Review, V41, P59, DOI 10.1145/1272998.1273005
   Kowshik S., 2002, International Conference on Architecture and Synthesis for Embedded Systems (CASES), P288, DOI DOI 10.1145/581630.581678
   Kwak H., WWW'10, DOI DOI 10.1145/1772690.1772751
   Kyrola A., 2012, 10 USENIX S OPERATIN, P31
   Lattner C, 2005, ACM SIGPLAN NOTICES, V40, P129, DOI 10.1145/1064978.1065027
   Lattner C, 2007, PLDI'07: PROCEEDINGS OF THE 2007 ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P278, DOI 10.1145/1250734.1250766
   Lee R, 2011, INT CON DISTR COMP S, P25, DOI 10.1109/ICDCS.2011.26
   Lhoták O, 2005, CONCURR COMP-PRACT E, V17, P515, DOI 10.1002/cpe.848
   Lhoták O, 2003, LECT NOTES COMPUT SC, V2622, P153
   Liu J., 2012, Proceedings of the Tenth International Symposium on Code Generation and Optimization, P33
   Maas Martin, 2016, INT C ARCH SUPP PROG
   Maas Martin, 2015, 5 USENIX WORKSH HOT
   Makholm H., 2000, International Symposium on Memory Management (ISMM), P25
   Malewicz Grzegorz, 2010, P ACM SIGMOD INT C M, P135, DOI [DOI 10.1145/1807167.1807184, 10.1145/1807167.1807184]
   Mandelbaum Y., 2007, ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages (POPL), P77
   Mitchell N, 2006, LECT NOTES COMPUT SC, V4067, P429
   Mitchell N, 2010, IEEE SOFTWARE, V27, P56, DOI 10.1109/MS.2010.7
   Mitchell N, 2009, LECT NOTES COMPUT SC, V5653, P77, DOI 10.1007/978-3-642-03013-0_5
   Mitchell N, 2007, OOPSLA: 22ND INTERNATIONAL CONFERENCE ON OBJECT-ORIENTED PROGRAMMING, SYSTEMS, LANGUAGES, AND APPLICATIONS, PROCEEDINGS, P245
   Mozilla, 2014, RUST PROGR LANG
   Murray DG, 2011, PLDI 11: PROCEEDINGS OF THE 2011 ACM CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P121
   Nguyen K, 2015, ACM SIGPLAN NOTICES, V50, P675, DOI [10.1145/2694344.2694345, 10.1145/2775054.2694345]
   Nguyen Khanh, 2013, Proceedings of the 2013 9th Joint Meeting on Foundations of Software Engineering, ESEC/FSE 2013, page, P268
   Nykiel T., 2010, PROC VLDB ENDOW, V3, P1
   Olston C., 2008, Proceedings of the 2008 ACM SIGMOD International Conference on Manage- ment of Data, P1099
   Olston Christopher., 2008, USENIX ANN TECHNICAL, P267
   Page L., 1999, 422 STANF INFOLAB ST
   Quora, 2015, BIG DAT JAV C
   Shankar A, 2008, OOPSLA 2008 NASHVILLE, CONFERENCE PROCEEDINGS, P127
   Shuf Y, 2002, ACM SIGPLAN NOTICES, V37, P295, DOI 10.1145/565816.503300
   StackExchange, 2015, CHOOS C JAV APPL REQ
   StackOverflow, 2015, OUT MEM ERR BUILD IN
   StackOverflow, 2015, OUT MEM ERR WORD COO
   StackOverflow, 2015, OUT MEM ERR WEB PARS
   StackOverflow, 2015, OUT MEM ERR MAP SID
   StackOverflow, 2015, SPARK WORK INS MEM
   StackOverflow, 2015, OUT MEM ERR MATR MUL
   StackOverflow, 2015, OUT MEM ERR HASH JOI
   StackOverflow, 2015, RED HANG MERG STEP
   StackOverflow, 2015, OUT MEM ERR DUE APP
   StackOverflow, 2015, OUT MEM ERR COMP FRE
   StackOverflow, 2015, PERF COMP MAPP COMB
   StackOverflow, 2015, OUT MEM ERR PROC TEX
   StackOverflow, 2015, OUT MEM ERR DUE LARG
   StackOverflow, 2015, OUT MEM ERR CUST REV
   Thusoo A, 2009, PROC VLDB ENDOW, V2, P1626, DOI 10.14778/1687553.1687609
   Thusoo A, 2010, PROC INT CONF DATA, P996, DOI 10.1109/ICDE.2010.5447738
   TOFTE M., 1994, ACM SIGPLAN SIGACT S, P188
   Twitter, 2014, STORM DSTRIB FAULT T
   UCI, 2015, VXQUERY
   UCI, 2015, ASTERIXDB
   UCI, 2014, HYR DAT PAR PLATF
   UCI, 2015, ALG
   UCI, 2015, HIV
   UCI, 2015, PREG
   Vallée-Rai R, 2000, LECT NOTES COMPUT SC, V1781, P18
   Xu GQ, 2012, ACM SIGPLAN NOTICES, V47, P1017, DOI 10.1145/2398857.2384690
   Xu GQ, 2014, ACM T SOFTW ENG METH, V23, DOI 10.1145/2560047
   Xu GQ, 2013, LECT NOTES COMPUT SC, V7920, P1, DOI 10.1007/978-3-642-39038-8_1
   Xu GQ, 2013, ACM SIGPLAN NOTICES, V48, P111, DOI [10.1145/2509136.2509512, 10.1145/2544173.2509512]
   Xu GQ, 2012, LECT NOTES COMPUT SC, V7313, P738, DOI 10.1007/978-3-642-31057-7_32
   Xu GQ, 2010, PLDI '10: PROCEEDINGS OF THE 2010 ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P174, DOI 10.1145/1806596.1806617
   Xu GQ, 2010, PLDI '10: PROCEEDINGS OF THE 2010 ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P160, DOI 10.1145/1806596.1806616
   Xu GQ, 2009, PLDI'09 PROCEEDINGS OF THE 2009 ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P419, DOI 10.1145/1542476.1542523
   Xu GQ, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P151, DOI 10.1145/1368088.1368110
   Xu Guoqing, 2010, P FSE SDP WORKSH FUT, P421
   Yahoo, 2014, YAH WEBSC PROGR
   Yan DC, 2012, PROC INT CONF SOFTW, P134, DOI 10.1109/ICSE.2012.6227199
   Yang H.-c., 2007, SIGMOD/PODS'07: 34th ACM SIGMOD International Conference on Management of Data, P1029
   Yu Y., 2008, OSDI, V8, P1
   Zaharia M., 2010, P USENIX WORKSH HOT, P10
   Zaharia Matei., 2012, NSDI 12
   Zeldovich N, 2006, USENIX ASSOCIATION 7TH USENIX SYMPOSIUM ON OPERATING SYSTEMS DESIGN AND IMPLEMENTATION, P263
   Zhou JR, 2010, PROC INT CONF DATA, P1060, DOI 10.1109/ICDE.2010.5447802
NR 124
TC 8
Z9 9
U1 0
U2 6
PU ASSOC COMPUTING MACHINERY
PI NEW YORK
PA 2 PENN PLAZA, STE 701, NEW YORK, NY 10121-0701 USA
SN 1049-331X
EI 1557-7392
J9 ACM T SOFTW ENG METH
JI ACM Trans. Softw. Eng. Methodol.
PD FEB
PY 2018
VL 26
IS 4
AR 12
DI 10.1145/3162626
PG 41
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GI7JP
UT WOS:000434679100001
OA Bronze
DA 2024-07-18
ER

PT J
AU Scanniello, G
   Gravino, C
   Risi, M
   Tortora, G
   Dodero, G
AF Scanniello, Giuseppe
   Gravino, Carmine
   Risi, Michele
   Tortora, Genoveffa
   Dodero, Gabriella
TI Documenting Design-Pattern Instances: A Family of Experiments on
   Source-Code Comprehensibility
SO ACM TRANSACTIONS ON SOFTWARE ENGINEERING AND METHODOLOGY
LA English
DT Article
DE Design; Documentation; Human Factors; Design patterns; controlled
   experiment; maintenance; replications; software models; source-code
   comprehension
ID SOFTWARE; UML; REPRESENTATIONS; MAINTAINABILITY; REPLICATIONS;
   MAINTENANCE; TECHNOLOGY; VALIDATION; GUIDELINES; EFFICIENCY
AB Design patterns are recognized as a means to improve software maintenance by furnishing an explicit specification of class and object interactions and their underlying intent [Gamma et al. 1995]. Only a few empirical investigations have been conducted to assess whether the kind of documentation for design patterns implemented in source code affects its comprehensibility. To investigate this aspect, we conducted a family of four controlled experiments with 88 participants having different experience (i.e., professionals and Bachelor, Master, and PhD students). In each experiment, the participants were divided into three groups and asked to comprehend a nontrivial chunk of an open-source software system. Depending on the group, each participant was, or was not, provided with graphical or textual representations of the design patterns implemented within the source code. We graphically documented design-pattern instances with UML class diagrams. Textually documented instances are directly reported source code as comments. Our results indicate that documenting design-pattern instances yields an improvement in correctness of understanding source code for those participants with an adequate level of experience.
C1 [Scanniello, Giuseppe] Univ Basilicata, DiMIE, I-85100 Potenza, Italy.
   [Gravino, Carmine; Risi, Michele] Univ Salerno, Dept Management & Informat Technol, I-84084 Fisciano, SA, Italy.
   [Tortora, Genoveffa] Univ Salerno, Dipartimento Matemat & Informat, I-84084 Fisciano, SA, Italy.
   [Dodero, Gabriella] Free Univ Bozen Bolzano, Dept Comp Sci, I-39100 Bozen Bolzano, Italy.
C3 University of Basilicata; University of Salerno; University of Salerno;
   Free University of Bozen-Bolzano
RP Scanniello, G (corresponding author), Univ Basilicata, DiMIE, Viale Dell'Ateneo 10, I-85100 Potenza, Italy.
EM giuseppe.scanniello@unibas.it
RI Tortora, Genoveffa/M-8155-2019
OI Gravino, Carmine/0000-0002-4394-9035; Scanniello,
   Giuseppe/0000-0003-0024-7508
CR Abrahao S, 2013, IEEE T SOFTWARE ENG, V39, P327, DOI 10.1109/TSE.2012.27
   Alexander C., 1977, PATTERN LANGUAGE TOW
   [Anonymous], UN MOD LANG UML SPEC
   [Anonymous], 1983, INTRO MODERN INFORM
   Aranda Jorge., 2007, P INT WORKSHOP MODEL, P7
   Arisholm E, 2004, IEEE T SOFTWARE ENG, V30, P521, DOI 10.1109/TSE.2004.43
   Arisholm E, 2007, IEEE T SOFTWARE ENG, V33, P65, DOI 10.1109/TSE.2007.17
   Arisholm E, 2006, IEEE T SOFTWARE ENG, V32, P365, DOI 10.1109/TSE.2006.59
   Asuncion H., 2007, 6th Joint Meeting of the European Software Engineering Conference and the ACM SIGSOFT Symposium on the Foundations of Software Engineering (ESEC/FSE), P115
   Baker R., 1995, RANDOMIZATION TESTS, P391
   Baldassarre M. T., 2014, EASE 2014, P18
   Basili V. R., 1996, Empirical Software Engineering, V1, P133, DOI 10.1007/BF00368702
   BASILI VR, 1988, IEEE T SOFTWARE ENG, V14, P758, DOI 10.1109/32.6156
   Basili VR, 1999, IEEE T SOFTWARE ENG, V25, P456, DOI 10.1109/32.799939
   BAUER MI, 1993, PSYCHOL SCI, V4, P372, DOI 10.1111/j.1467-9280.1993.tb00584.x
   Bennett K. H., 2000, P C FUT SOFTW ENG, P73
   Bergersen GR, 2014, IEEE T SOFTWARE ENG, V40, P1163, DOI 10.1109/TSE.2014.2348997
   Bergersen GR, 2011, INT SYMP EMP SOFTWAR, P305, DOI 10.1109/ESEM.2011.39
   Bieman JM, 2003, NINTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM, PROCEEDINGS, P40, DOI 10.1109/METRIC.2003.1232454
   Bruegge Bernd., 2003, OBJECT ORIENTED SOFT, V2nd
   Budgen D, 2011, SOFTWARE PRACT EXPER, V41, P363, DOI 10.1002/spe.1009
   Carver J, 2003, NINTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM, PROCEEDINGS, P239
   Ceccato M, 2014, EMPIR SOFTW ENG, V19, P1040, DOI 10.1007/s10664-013-9248-x
   Ciolkowski M, 2004, EUROMICRO CONF PROC, P354, DOI 10.1109/EURMIC.2004.1333390
   Cohen J., 1988, STAT POWER ANAL BEHA
   Colosimo M, 2009, INFORM SOFTWARE TECH, V51, P433, DOI 10.1016/j.infsof.2008.05.012
   Conover W. J., 1998, PRACTICAL NONPARAMET, V3rd
   Cronbach LJ, 1951, PSYCHOMETRIKA, V16, P297
   da Silva FQB, 2014, EMPIR SOFTW ENG, V19, P501, DOI 10.1007/s10664-012-9227-7
   Di Penta M, 2008, PROC IEEE INT CONF S, P217, DOI 10.1109/ICSM.2008.4658070
   Dybå T, 2006, INFORM SOFTWARE TECH, V48, P745, DOI 10.1016/j.infsof.2005.08.009
   Ellis PD, 2010, ESSENTIAL GUIDE TO EFFECT SIZES: STATISTICAL POWER, META-ANALYSIS AND THE INTERPRETATION OF RESEARCH RESULTS, P1
   Erlikh L., 2000, IT Professional, V2, P17, DOI 10.1109/6294.846201
   Erra U, 2010, IET SOFTW, V4, P134, DOI 10.1049/iet-sen.2009.0052
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   Gomez O. S., 2010, P INT S EMP SOFTW EN
   Gravino Carmine, 2012, Model Driven Engineering Languages and Systems. Proceedings 15th International Conference, MODELS 2012, P185, DOI 10.1007/978-3-642-33666-9_13
   Gravino Carmine, 2011, 2011 18th Working Conference on Reverse Engineering, P67, DOI 10.1109/WCRE.2011.18
   Gueheneuc Y.-G., 2007, P EUROPLOP FOC GROUP
   Guéhéneuc YG, 2008, IEEE T SOFTWARE ENG, V34, P667, DOI 10.1109/TSE.2008.48
   Hannay JE, 2008, IEEE T SOFTWARE ENG, V34, P242, DOI 10.1109/TSE.2008.13
   Hautojrvi P., 1979, Experimentation in software engineering, V1ST, DOI [10.1007/978-3-642-81316-0, 10.1007/978-3-642-29044-2., DOI 10.1007/978-3-642-29044-2]
   Heer J, 2006, IEEE T VIS COMPUT GR, V12, P853, DOI 10.1109/TVCG.2006.178
   Hochstein L., 2005, PROC 10 EUROPEAN SOF, P356, DOI [DOI 10.1145/1095430.1081762, 10.1145/1081706.1081762, DOI 10.1145/1081706.1081762]
   Host M., 2000, Empirical Software Engineering, V5, P201, DOI 10.1023/A:1026586415054
   Huang L, 2009, INFORM SOFTWARE TECH, V51, P182, DOI 10.1016/j.infsof.2008.03.007
   ISO, 1991, 9126 ISOIEC IS
   Jeanmart S, 2009, INT SYMP EMP SOFTWAR, P69, DOI 10.1109/ESEM.2009.5316015
   Jedlitschka A., 2008, Guide to advanced empirical software engineering, P201, DOI DOI 10.1007/978-1-84800-044-5_8
   Juristo N., 2013, BASICS SOFTWARE ENG
   Kampenes VB, 2007, INFORM SOFTWARE TECH, V49, P1073, DOI 10.1016/j.infsof.2007.02.015
   Khomh F, 2008, CSMR 2008: 12TH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, P274
   Kitchenham BA, 2002, IEEE T SOFTWARE ENG, V28, P721, DOI 10.1109/TSE.2002.1027796
   Kitchenham B, 2008, EMPIR SOFTW ENG, V13, P219, DOI 10.1007/s10664-008-9061-0
   Kitchenham B, 2008, EMPIR SOFTW ENG, V13, P97, DOI 10.1007/s10664-007-9053-5
   Krein J. L., 2011, Proceedings of the 2011 Second International Workshop on Replication in Empirical Software Engineering Research (RESER 2011), P25, DOI 10.1109/RESER.2011.10
   Lindvall M, 1996, SOFTWARE PRACT EXPER, V26, P1161, DOI 10.1002/(SICI)1097-024X(199610)26:10<1161::AID-SPE58>3.0.CO;2-X
   Lindvall M, 2005, INNOV SYST SOFTW ENG, V1, P3, DOI 10.1007/s11334-005-0007-z
   MAXWELL K, 2002, SOFTWARE QUALITY I S
   McDermid J.A., 1991, SOFTWARE ENG REFEREN
   Mendongal MG, 2008, IEEE INT C ENG COMP, P203, DOI 10.1109/ICECCS.2008.38
   Oppenheim A.N., 1992, QUESTIONNAIRE DESIGN
   PFLEEGER S.L., 2006, Software Engineering, Theory and Practice
   Pfleeger SL, 2000, IEEE SOFTWARE, V17, P27, DOI 10.1109/52.819965
   Porras GC, 2010, EMPIR SOFTW ENG, V15, P493, DOI 10.1007/s10664-009-9125-9
   Prechelt L, 2001, IEEE T SOFTWARE ENG, V27, P1134, DOI 10.1109/32.988711
   Prechelt L, 2002, IEEE T SOFTWARE ENG, V28, P595, DOI 10.1109/TSE.2002.1010061
   Ricca F, 2014, ACM T SOFTW ENG METH, V24, DOI 10.1145/2629457
   Ricca F, 2010, IEEE T SOFTWARE ENG, V36, P96, DOI 10.1109/TSE.2009.69
   Scaife M, 1996, INT J HUM-COMPUT ST, V45, P185, DOI 10.1006/ijhc.1996.0048
   Scanniello G., 2014, DESIGN PATTERN INSTA
   Scanniello G., 2014, ACM T SOFTW ENG METH, V23, P2
   Scanniello G, 2014, J VISUAL LANG COMPUT, V25, P494, DOI 10.1016/j.jvlc.2014.03.002
   Scanniello G, 2013, EUR CON SFTWR MTNCE, P367, DOI 10.1109/CSMR.2013.51
   Selfridge P. G., 1993, Proceedings of Working Conference on Reverse Engineering (Cat. No.93TH0534-8), P144, DOI 10.1109/WCRE.1993.287770
   SHAPIRO SS, 1965, BIOMETRIKA, V52, P591, DOI 10.1093/biomet/52.3-4.591
   Shull F, 2004, EMPIR SOFTW ENG, V9, P111, DOI 10.1023/B:EMSE.0000013516.80487.33
   Shull FJ, 2008, EMPIR SOFTW ENG, V13, P211, DOI 10.1007/s10664-008-9060-1
   Sillito J, 2008, IEEE T SOFTWARE ENG, V34, P434, DOI 10.1109/TSE.2008.26
   Sjoberg DIK, 2005, IEEE T SOFTWARE ENG, V31, P733, DOI 10.1109/TSE.2005.97
   Vegas S., 2006, International Symposium on Empirical Software Engineering, P28, DOI DOI 10.1145/1159733.1159741
   Verelst J, 2004, 2004 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P17
   Vokác M, 2004, IEEE T SOFTWARE ENG, V30, P904, DOI 10.1109/TSE.2004.99
   Vokác M, 2004, EMPIR SOFTW ENG, V9, P149, DOI 10.1023/B:EMSE.0000027778.69251.1f
   VONMAYRHAUSER A, 1995, COMPUTER, V28, P44, DOI 10.1109/2.402076
   Zelkowitz M., 1979, Principles of Software Engineering and Design"
NR 86
TC 21
Z9 27
U1 0
U2 3
PU ASSOC COMPUTING MACHINERY
PI NEW YORK
PA 1601 Broadway, 10th Floor, NEW YORK, NY USA
SN 1049-331X
EI 1557-7392
J9 ACM T SOFTW ENG METH
JI ACM Trans. Softw. Eng. Methodol.
PD MAY
PY 2015
VL 24
IS 3
AR 14
DI 10.1145/2699696
PG 35
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CI5UV
UT WOS:000354826200002
DA 2024-07-18
ER

PT J
AU Bavota, G
   Gethers, M
   Oliveto, R
   Poshyvanyk, D
   De Lucia, A
AF Bavota, Gabriele
   Gethers, Malcom
   Oliveto, Rocco
   Poshyvanyk, Denys
   De Lucia, Andrea
TI Improving Software Modularization via Automated Analysis of Latent
   Topics and Dependencies
SO ACM TRANSACTIONS ON SOFTWARE ENGINEERING AND METHODOLOGY
LA English
DT Article
DE Documentation; Management; Software modularization; refactoring;
   relational topic modeling; empirical studies; recommendation system
ID LEGACY SYSTEMS; MODELS; INFORMATION; RECOVERY
AB Oftentimes, during software maintenance the original program modularization decays, thus reducing its quality. One of the main reasons for such architectural erosion is suboptimal placement of source-code classes in software packages. To alleviate this issue, we propose an automated approach to help developers improve the quality of software modularization. Our approach analyzes underlying latent topics in source code as well as structural dependencies to recommend (and explain) refactoring operations aiming at moving a class to a more suitable package. The topics are acquired via Relational Topic Models (RTM), a probabilistic topic modeling technique. The resulting tool, coined as R3 (Rational Refactoring via RTM), has been evaluated in two empirical studies. The results of the first study conducted on nine software systems indicate that R3 provides a coupling reduction from 10% to 30% among the software modules. The second study with 62 developers confirms that R3 is able to provide meaningful recommendations (and explanations) for move class refactoring. Specifically, more than 70% of the recommendations were considered meaningful from a functional point of view.
C1 [Bavota, Gabriele; De Lucia, Andrea] Univ Salerno, Fisciano, SA, Italy.
   [Gethers, Malcom] Univ Maryland, Baltimore, MD 21201 USA.
   [Oliveto, Rocco] Univ Molise, Pesche, IS, Italy.
   [Poshyvanyk, Denys] Coll William & Mary, Williamsburg, VA USA.
C3 University of Salerno; University System of Maryland; University of
   Maryland Baltimore; University of Molise; William & Mary
RP Oliveto, R (corresponding author), Univ Molise, Pesche, IS, Italy.
EM rocco.oliveto@unimol.it
RI De Lucia, Andrea/AAG-6781-2020
OI De Lucia, Andrea/0000-0002-4238-1425; BAVOTA,
   Gabriele/0000-0002-2216-3148; Poshyvanyk, Denys/0000-0002-5626-7586
FU NSF [CCF-1016868, CCF-0916260, CCF-1218129]; Direct For Computer & Info
   Scie & Enginr; Division of Computing and Communication Foundations
   [1218129] Funding Source: National Science Foundation; Division of
   Computing and Communication Foundations; Direct For Computer & Info Scie
   & Enginr [1016868] Funding Source: National Science Foundation
FX This work is supported in part by NSF CCF-1016868, NSF CCF-0916260, and
   NSF CCF-1218129 awards.
CR Abdeen H, 2009, WORK CONF REVERSE EN, P103, DOI 10.1109/WCRE.2009.13
   [Anonymous], PRACTICAL NONPARAMET
   [Anonymous], 2010, IEEE INT C SOFTWARE
   Anquetil N., 1999, Sixth Working Conference on Reverse Engineering (Cat. No.PR00303), P235, DOI 10.1109/WCRE.1999.806964
   Anquetil N, 2011, EUR CON SFTWR MTNCE, P279, DOI 10.1109/CSMR.2011.34
   Antoniol G, 2001, PROG COMPREHEN, P281, DOI 10.1109/WPC.2001.921738
   Baeza-Yates Ricardo, 1999, MODERN INFORM RETRIE, V463
   Bajracharya S, 2009, 2009 6TH IEEE INTERNATIONAL WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES, P111, DOI 10.1109/MSR.2009.5069489
   Baldi PF, 2008, ACM SIGPLAN NOTICES, V43, P543, DOI 10.1145/1449955.1449807
   Bavota G., 2010, Proceedings 17th Working Conference on Reverse Engineering (WCRE 2010), P195, DOI 10.1109/WCRE.2010.29
   Bavota G., 2012, IMPROVING SOFTWARE M
   Blei DM, 2003, J MACH LEARN RES, V3, P993, DOI 10.1162/jmlr.2003.3.4-5.993
   Canfora G, 2001, INFORM SOFTWARE TECH, V43, P401, DOI 10.1016/S0950-5849(01)00149-5
   Chang J, 2010, ANN APPL STAT, V4, P124, DOI 10.1214/09-AOAS309
   Chen T-H, 2012, P 9 WORK C MIN SOFTW
   CIMITILE A, 1995, J SYST SOFTWARE, V28, P117, DOI 10.1016/0164-1212(94)00049-S
   Corazza A, 2011, EUR CON SFTWR MTNCE, P35, DOI 10.1109/CSMR.2011.8
   Corazza A, 2010, EUR CON SFTWR MTNCE, P88, DOI 10.1109/CSMR.2010.36
   De Lucia A, 2011, CONF PROC INT SYMP C, P21, DOI 10.1109/ICPC.2011.34
   DeRemer F., 1976, IEEE Transactions on Software Engineering, VSE-2, P80, DOI 10.1109/TSE.1976.233534
   Dit B., 2011, P 19 IEEE INT C PROG
   Eick SG, 2001, IEEE T SOFTWARE ENG, V27, P1, DOI 10.1109/32.895984
   Fanta R., 1999, Proceedings IEEE International Conference on Software Maintenance - 1999 (ICSM'99). `Software Maintenance for Business Change' (Cat. No.99CB36360), P77, DOI 10.1109/ICSM.1999.792576
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   Fowler M., 2000, REFACTORING CATALOG
   Gethers M., 2011, 2011 IEEE 27th International Conference on Software Maintenance, P133, DOI 10.1109/ICSM.2011.6080780
   Gethers M., 2011, P 33 IEEE ACM INT C
   Grant S, 2012, EUR CON SFTWR MTNCE, P403, DOI 10.1109/CSMR.2012.51
   Harman M., 2002, P GEN EV COMP C
   Hindle A, 2009, PROC IEEE INT CONF S, P339, DOI 10.1109/ICSM.2009.5306310
   Koschke R, 2006, SCI COMPUT PROGRAM, V60, P171, DOI 10.1016/j.scico.2005.10.004
   Kuhn A, 2007, INFORM SOFTWARE TECH, V49, P230, DOI 10.1016/j.infsof.2006.10.017
   Lanza Michele, 2006, Objectoriented metrics in practice: using software metrics to characterize, evaluate, and improve the design of object-oriented systems
   Lee YS., 1995, Proc. International Conference on Software Quality, Maribor, P81
   Lehman M. M., 1980, Journal of Systems and Software, V1, P213, DOI 10.1016/0164-1212(79)90022-0
   Lethbridge TC, 2002, ADVANCES IN SOFTWARE ENGINEERING, P137
   Li W., 1993, Proceedings First International Software Metrics Symposium (Cat. No.93TH0518-1), P52, DOI 10.1109/METRIC.1993.263801
   Maletic JI, 2001, PROC INT CONF SOFTW, P103, DOI 10.1109/ICSE.2001.919085
   MANCORIDIS S, 1998, P 6 INT WORKSH PROGR
   Maqbool O, 2007, IEEE T SOFTWARE ENG, V33, P759, DOI 10.1109/TSE.2007.70732
   Marcus A, 2005, PROC IEEE INT CONF S, P133
   Mitchell BS, 2006, IEEE T SOFTWARE ENG, V32, P193, DOI 10.1109/TSE.2006.31
   Nierstrasz O., 2003, OBJECT ORIENTED REEN
   O'Keeffe M, 2006, 10TH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P247
   Oliveto Rocco, 2010, Proceedings of the 18th IEEE International Conference on Program Comprehension (ICPC 2010), P68, DOI 10.1109/ICPC.2010.20
   Oliveto R., 2011, P 33 IEEE ACM INT C
   Panichella A., 2013, P 35 IEEE ACM INT C
   Pashov I, 2004, CSMR 2004: EIGHTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P25, DOI 10.1109/CSMR.2004.1281403
   Poshyvanyk D, 2006, PROC IEEE INT CONF S, P469
   Poshyvanyk D, 2009, EMPIR SOFTW ENG, V14, P5, DOI 10.1007/s10664-008-9088-2
   Praditwong K, 2011, IEEE T SOFTWARE ENG, V37, P264, DOI 10.1109/TSE.2010.26
   Pressman R.S., 1992, Software Engineering: A Practitioner's Approach, Vthird
   Savage T, 2010, Proceedings of the 2010 IEEE International Conference on Software Maintenance, ICSM '10, P1, DOI [10.1109/ICSM.2010.5609654, DOI 10.1109/ICSM.2010.5609654]
   Scanniello G, 2010, SOFTWARE PRACT EXPER, V40, P897, DOI 10.1002/spe.988
   Seng O, 2006, GECCO 2006: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOL 1 AND 2, P1909
   Seng O, 2005, GECCO 2005: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOLS 1 AND 2, P1045
   Shaw SC, 2003, IEEE T SOFTWARE ENG, V29, P851, DOI 10.1109/TSE.2003.1232289
   Shtern M, 2009, INT C PROGRAM COMPRE, P248, DOI 10.1109/ICPC.2009.5090051
   Sommerville I, 2001, Software Engineering
   Thomas SW, 2010, IEEE INT WORK C SO, P55, DOI 10.1109/SCAM.2010.13
   Thomas SW, 2011, 8 WORK C MIN SOFTW R, P173
   Tonella P, 2001, IEEE T SOFTWARE ENG, V27, P351, DOI 10.1109/32.917524
   van Deursen A., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P246, DOI 10.1109/ICSE.1999.841014
   Wiggerts TA, 1997, PROCEEDINGS OF THE FOURTH WORKING CONFERENCE ON REVERSE ENGINEERING, P33, DOI 10.1109/WCRE.1997.624574
   Wu JW, 2005, PROC IEEE INT CONF S, P525
   Yourdon E., 1979, STRUCTURED DESIGN FO
NR 66
TC 79
Z9 86
U1 0
U2 17
PU ASSOC COMPUTING MACHINERY
PI NEW YORK
PA 2 PENN PLAZA, STE 701, NEW YORK, NY 10121-0701 USA
SN 1049-331X
EI 1557-7392
J9 ACM T SOFTW ENG METH
JI ACM Trans. Softw. Eng. Methodol.
PD FEB
PY 2014
VL 23
IS 1
AR 4
DI 10.1145/2559935
PG 33
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AB2IC
UT WOS:000331615400004
OA Green Submitted
DA 2024-07-18
ER

PT J
AU de Caso, G
   Braberman, V
   Garbervetsky, D
   Uchitel, S
AF de Caso, Guido
   Braberman, Victor
   Garbervetsky, Diego
   Uchitel, Sebastian
TI Enabledness-Based Program Abstractions for Behavior Validation
SO ACM TRANSACTIONS ON SOFTWARE ENGINEERING AND METHODOLOGY
LA English
DT Article
DE Design; Algorithms; Documentation; Source-code validation; enabledness
   abstractions
ID OBJECT; VERIFICATION; GENERATION; QUALITY
AB Code artifacts that have nontrivial requirements with respect to the ordering in which their methods or procedures ought to be called are common and appear, for instance, in the form of API implementations and objects. This work addresses the problem of validating if API implementations provide their intended behavior when descriptions of this behavior are informal, partial, or nonexistent. The proposed approach addresses this problem by generating abstract behavior models which resemble typestates. These models are statically computed and encode all admissible sequences of method calls. The level of abstraction at which such models are constructed has shown to be useful for validating code artifacts and identifying findings which led to the discovery of bugs, adjustment of the requirements expected by the engineer to the requirements implicit in the code, and the improvement of available documentation.
C1 [de Caso, Guido; Braberman, Victor; Garbervetsky, Diego; Uchitel, Sebastian] Univ Buenos Aires, Dept Comp, FCEyN, RA-1053 Buenos Aires, DF, Argentina.
   [Uchitel, Sebastian] Univ London Imperial Coll Sci Technol & Med, Dept Comp, London, England.
C3 University of Buenos Aires; Imperial College London
RP de Caso, G (corresponding author), Univ Buenos Aires, Dept Comp, FCEyN, RA-1053 Buenos Aires, DF, Argentina.
EM gdecaso@dc.uba.ar
OI Uchitel, Sebastian/0000-0001-9352-1478; Garbervetsky,
   Diego/0000-0003-4180-7196
FU CONICET; UBACyT [20020100100813, 20020090300064,
   PIP112-200801-00955KA4]; PICT [2010-2351]; PICT-PAE [37279]; ERC StG
   PBM-FIMBSE
FX The work reported herein was partially supported by CONICET, UBACyT
   20020100100813, UBACyt 20020090300064, PIP112-200801-00955KA4, PICT
   2010-2351, PICT-PAE 37279 and ERC StG PBM-FIMBSE. S. Uchitel is also
   with the Department of Computing, Imperial College, London, UK.
CR Alur R, 2005, ACM SIGPLAN NOTICES, V40, P98, DOI 10.1145/1047659.1040314
   ANDERSEN M., 2009, CODE CONTRACTS
   [Anonymous], 2005, P 10 EUROPEAN SOFTWA, DOI [10.1145/1095430.1081713, DOI 10.1145/1095430.1081713]
   Barrett C, 2004, LECT NOTES COMPUT SC, V3114, P515
   BECKMAN N., 2011, P 32 ACM SIGPLAN C P
   BECKMAN N. E., 2011, P 25 EUR C OBJ OR PR
   BESCHASTNIKH I., 2011, P 19 ACM SIGSOFT S 1
   Beyer Dirk, 2007, International Journal on Software Tools for Technology Transfer, V9, P505, DOI 10.1007/s10009-007-0044-z
   Bierhoff K, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P971
   CASO G., 2010, IEEE T SOFTWARE ENG, V38, P141
   Cok DR, 2005, LECT NOTES COMPUT SC, V3362, P108
   DALLMEIER V., 2006, P WORKSH DYN SYST AN
   DALLMEIER V., 2010, P INT S SOFTW TEST A
   DeLine R, 2001, ACM SIGPLAN NOTICES, V36, P59, DOI 10.1145/381694.378811
   Demsky B, 2009, IEEE T SOFTWARE ENG, V35, P305, DOI 10.1109/TSE.2008.91
   DIJKSTRA EW, 1975, COMMUN ACM, V18, P453, DOI [10.1145/360933.360975, 10.1145/390016.808417]
   Ernst MD, 2007, SCI COMPUT PROGRAM, V69, P35, DOI 10.1016/j.scico.2007.01.015
   Gabel M, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P51, DOI 10.1145/1368088.1368096
   Ghezzi C, 2009, PROC INT CONF SOFTW, P430, DOI 10.1109/ICSE.2009.5070542
   Giannakopoulou D, 2009, LECT NOTES COMPUT SC, V5503, P94
   Graf S, 1997, LECT NOTES COMPUT SC, V1254, P72
   Grieskamp W., 2002, Software Engineering Notes, V27, P112, DOI 10.1145/566171.566190
   Grieskamp Wolfgang, 2008, 2008 First IEEE International Conference on Software Testing, Verification and Validation (ICST '08), P502, DOI 10.1109/ICST.2008.50
   Grieskamp W, 2011, SOFTW TEST VERIF REL, V21, P55, DOI 10.1002/stvr.427
   Hodges Wilfrid, 1997, A shorter model theory
   Khurshid S, 2003, LECT NOTES COMPUT SC, V2619, P553
   KLENSIN J., 1995, 2846 RFC
   Leavens GT, 2007, FORM ASP COMPUT, V19, P159, DOI 10.1007/s00165-007-0026-7
   Lee D., 1992, STOC, P264
   Liu L, 2007, LECT NOTES COMPUT SC, V4454, P114
   Lorenzoli D, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P501, DOI 10.1145/1368088.1368157
   Nanda MG, 2005, ACM SIGPLAN NOTICES, V40, P77, DOI 10.1145/1103845.1094818
   Pacheco C., 2007, OOPSLA 2007 COMPANIO, P815
   Pradel M, 2009, IEEE INT CONF AUTOM, P371, DOI 10.1109/ASE.2009.60
   STROM RE, 1986, IEEE T SOFTWARE ENG, V12, P157, DOI 10.1109/TSE.1986.6312929
   URIBE T., 1999, ABSTRACTION BASED DE
   Zoppi Edgardo., 2011, TOPI '11, Proceedings of the 1st Workshop on Developing Tools as Plug-ins, P44
NR 37
TC 13
Z9 13
U1 0
U2 3
PU ASSOC COMPUTING MACHINERY
PI NEW YORK
PA 2 PENN PLAZA, STE 701, NEW YORK, NY 10121-0701 USA
SN 1049-331X
EI 1557-7392
J9 ACM T SOFTW ENG METH
JI ACM Trans. Softw. Eng. Methodol.
PD JUL
PY 2013
VL 22
IS 3
AR 25
DI 10.1145/2491509.2491519
PG 46
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 192JR
UT WOS:000322480900010
OA Green Published
DA 2024-07-18
ER

PT J
AU D'Ippolito, N
   Braberman, V
   Piterman, N
   Uchitel, S
AF D'Ippolito, Nicolas
   Braberman, Victor
   Piterman, Nir
   Uchitel, Sebastian
TI Synthesizing Nonanomalous Event-Based Controllers for Liveness Goals
SO ACM TRANSACTIONS ON SOFTWARE ENGINEERING AND METHODOLOGY
LA English
DT Article
DE Design; Algorithms; controller synthesis; behavioral modeling
ID EFFICIENT DETECTION; FAIR SIMULATION; VACUITY; VERIFICATION; ASSUMPTIONS
AB We present SGR(1), a novel synthesis technique and methodological guidelines for automatically constructing event-based behavior models. Our approach works for an expressive subset of liveness properties, distinguishes between controlled and monitored actions, and differentiates system goals from environment assumptions. We show that assumptions must be modeled carefully in order to avoid synthesizing anomalous behavior models. We characterize nonanomalous models and propose assumption compatibility, a sufficient condition, as a methodological guideline.
C1 [D'Ippolito, Nicolas; Uchitel, Sebastian] Univ London Imperial Coll Sci Technol & Med, Dept Comp, London SW7 2RH, England.
   [Braberman, Victor] Univ Buenos Aires, Fac Ciencias Exactas & Nat, Dept Computat, RA-1053 Buenos Aires, DF, Argentina.
   [Piterman, Nir] Univ Leicester, Dept Comp Sci, Leicester LE1 7RH, Leics, England.
C3 Imperial College London; University of Buenos Aires; University of
   Leicester
RP D'Ippolito, N (corresponding author), Univ London Imperial Coll Sci Technol & Med, Dept Comp, 180 Queens Gate, London SW7 2RH, England.
EM srdipi@doc.ic.ac.uk; vbraber@dc.uba.ar; nir.piterman@leicester.ac.uk;
   su2@doc.ic.ac.uk
OI Uchitel, Sebastian/0000-0001-9352-1478; dippolito,
   nicolas/0000-0002-0612-4157; Piterman, Nir/0000-0002-8242-5357
FU ERC StG PBM-FIMBSE; UBACYT [20020100100813]; CONICET PIP [0955]; ANPCyT
   PICT PAE [2272, 2278]
FX The authors acknowledge the support of ERC StG PBM-FIMBSE, UBACYT
   20020100100813, CONICET PIP 0955, ANPCyT PICT PAE 2272 and 2278.
CR [Anonymous], P 14 ACM SIGSOFT INT
   [Anonymous], 1989, CWI Q.
   [Anonymous], 2006, Proceedings of the 14th ACM SIGSOFT international symposium on Foundations of software engineering, SIGSOFT '06/FSE-14
   [Anonymous], LECT NOTES COMPUTER
   Armoni R, 2003, LECT NOTES COMPUT SC, V2725, P368
   Asarin E., 1998, P IFAC S SYST STRUCT
   AUTILI M., 2004, P SPEC VER COMP BAS, P79
   BEATTY DL, 1994, ACM IEEE D, P596
   Beer I, 2001, FORM METHOD SYST DES, V18, P141, DOI 10.1023/A:1008779610539
   Beer I, 1997, LECT NOTES COMPUT SC, V1254, P279
   BERTOLI P., 2001, P IJCAIS01 WORKSH PL
   Bertolino A, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P141, DOI 10.1145/1595696.1595719
   Bloem R, 2007, DES AUT TEST EUROPE, P1188
   BRYANT RE, 1986, IEEE T COMPUT, V35, P677, DOI 10.1109/TC.1986.1676819
   BUCHI JR, 1969, T AM MATH SOC, V138, P295, DOI 10.2307/1994916
   Chatterjee K, 2008, LECT NOTES COMPUT SC, V5201, P147, DOI 10.1007/978-3-540-85361-9_14
   Chechik M, 2007, LECT NOTES COMPUT SC, V4422, P352
   Cheng SW, 2004, INTERNATIONAL CONFERENCE ON AUTONOMIC COMPUTING, PROCEEDINGS, P276
   Cobleigh JM, 2003, LECT NOTES COMPUT SC, V2619, P331
   D'Ippolito Nicolas, 2008, 2008 23rd IEEE/ACM International Conference on Automated Software Engineering, P475, DOI 10.1109/ASE.2008.78
   D'Ippolito N, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P211, DOI 10.1145/1985793.1985823
   Dalpiaz F, 2009, LECT NOTES COMPUT SC, V5565, P246, DOI 10.1007/978-3-642-02144-2_22
   de Alfaro L., 2001, Software Engineering Notes, V26, P109, DOI 10.1145/503271.503226
   DIppolito N., 2010, 18 INT S FDN SOFTW E, P77
   Emmi M, 2008, LECT NOTES COMPUT SC, V5014, P116
   Etessami K, 2005, SIAM J COMPUT, V34, P1159, DOI 10.1137/S0097539703420675
   Gat E, 1998, ARTIFICIAL INTELLIGENCE AND MOBILE ROBOTS, P195
   Giannakopoulou D., 2003, P 9 EUR SOFTW ENG 11, P257, DOI DOI 10.1145/949952.940106
   Giunchiglia F, 2000, LECT NOTES ARTIF INT, V1809, P1
   GODEFROID P, 2009, P 10 INT C VER MOD C, V5403, P89
   Gurfinkel A, 2004, LECT NOTES COMPUT SC, V2988, P451
   Heaven W, 2009, LECT NOTES COMPUT SC, V5525, P109, DOI 10.1007/978-3-642-02161-9_6
   Hoare C. A. R., 1978, Communications of the ACM, V21, P666, DOI 10.1145/359576.359585
   Inverardi P., 2007, INT WORKSH ENG SOFTW, P29
   JACKSON M, 1995, PROC INT CONF SOFTW, P283, DOI 10.1145/225014.225041
   Jackson M., 1995, SOFTWARE REQUIREMENT
   Jurdzinski M, 2000, LECT NOTES COMPUT SC, V1770, P290
   Juvekar S, 2006, LECT NOTES COMPUT SC, V4144, P45, DOI 10.1007/11817963_7
   Kazhamiakin R, 2004, PROCEEDINGS OF THE SECOND INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING AND FORMAL METHODS, P406, DOI 10.1109/SEFM.2004.1347546
   KELLER RM, 1976, COMMUN ACM, V19, P371, DOI 10.1145/360248.360251
   Kesten Y, 2005, INFORM COMPUT, V200, P35, DOI 10.1016/j.ic.2005.01.006
   Konighofer Robert, 2009, Proceedings of the 2009 9th International Conference Formal Methods in Computer-Aided Design (FMCAD), P152, DOI 10.1109/FMCAD.2009.5351127
   Kramer J, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P259, DOI 10.1109/FOSE.2007.19
   Kupferman O, 2005, ANN IEEE SYMP FOUND, P531, DOI 10.1109/SFCS.2005.66
   Kupferman O., 2003, International Journal on Software Tools for Technology Transfer, V4, P224, DOI 10.1007/s100090100062
   LAMSWEERDE A, 2001, P 5 IEEE INT S REQ E
   Letier E, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P83, DOI 10.1109/ICSE.2002.1007958
   Letier E, 2008, AUTOMAT SOFTW ENG, V15, P175, DOI 10.1007/s10515-008-0027-7
   Maler O., 1995, STACS 95. 12th Annual Symposium on Theoretical Aspects of Computer Science. Proceedings, P229
   Manna Z., 1992, The temporal logic of reactive and concurrent systems-specification, DOI DOI 10.1007/978-1-4612-0931-7
   PARNAS DL, 1995, SCI COMPUT PROGRAM, V25, P41, DOI 10.1016/0167-6423(95)96871-J
   Pistore M, 2004, LECT NOTES COMPUT SC, V3192, P106
   Piterman N, 2006, LECT NOTES COMPUT SC, V3855, P364
   Rabin M.O., 1970, Stud. Logic Found. Math., V59, P1, DOI 10.1016/S0049-237X(08)71929
   RAMADGE PJG, 1989, P IEEE, V77, P81, DOI 10.1109/5.21072
   Russell S., 1995, Prentice Hall series in artificial intelligence, V25, P27
   Schewe S, 2007, LECT NOTES COMPUT SC, V4762, P474
   Sohail S, 2008, LECT NOTES COMPUT SC, V4905, P309, DOI 10.1007/978-3-540-78163-9_26
   Sykes D., 2007, Proceedings of the 2007 conference on Specification and verification of component-based systems: 6th Joint Meeting of the European Conference on Software Engineering and the ACM SIGSOFT Symposium on the Foundations of Software Engineering, P15, DOI DOI 10.1145/1292316.1292318
   Uchitel S, 2009, IEEE T SOFTWARE ENG, V35, P384, DOI 10.1109/TSE.2008.107
   van Lamsweerde A, 2000, IEEE T SOFTWARE ENG, V26, P978, DOI 10.1109/32.879820
   van Lamsweerde A., 2009, REQUIREMENTS ENG SYS
   Zave P., 1997, ACM Transactions on Software Engineering and Methodology, V6, P1, DOI 10.1145/237432.237434
NR 63
TC 44
Z9 46
U1 0
U2 1
PU ASSOC COMPUTING MACHINERY
PI NEW YORK
PA 1601 Broadway, 10th Floor, NEW YORK, NY USA
SN 1049-331X
EI 1557-7392
J9 ACM T SOFTW ENG METH
JI ACM Trans. Softw. Eng. Methodol.
PD FEB
PY 2013
VL 22
IS 1
AR 9
DI 10.1145/2430536.2430543
PG 36
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 300SK
UT WOS:000330483700009
OA Green Published
DA 2024-07-18
ER

PT J
AU Kästner, C
   Apel, S
   Thüm, T
   Saake, G
AF Kaestner, Christian
   Apel, Sven
   Thuem, Thomas
   Saake, Gunter
TI Type Checking Annotation-Based Product Lines
SO ACM TRANSACTIONS ON SOFTWARE ENGINEERING AND METHODOLOGY
LA English
DT Article
DE Languages; Theory; Design; CFJ; CIDE; conditional compilation;
   Featherweight Java; #ifdef; software product lines; type system
ID VARIABILITY; SEPARATION; MODELS
AB Software product line engineering is an efficient means of generating a family of program variants for a domain from a single code base. However, because of the potentially high number of possible program variants, it is difficult to test them all and ensure properties like type safety for the entire product line. We present a product-line-aware type system that can type check an entire software product line without generating each variant in isolation. Specifically, we extend the Featherweight Java calculus with feature annotations for product-line development and prove formally that all program variants generated from a well typed product line are well typed. Furthermore, we present a solution to the problem of typing mutually exclusive features. We discuss how results from our formalization helped implement our own product-line tool CIDE for full Java and report of our experience with detecting type errors in four existing software product line implementations.
C1 [Kaestner, Christian] Univ Marburg, Dept Math & Comp Sci, D-35032 Marburg, Germany.
   [Apel, Sven] Univ Passau, Dept Math, D-94030 Passau, Germany.
   [Thuem, Thomas; Saake, Gunter] Univ Magdeburg, Sch Comp Sci, D-39016 Magdeburg, Germany.
C3 Philipps University Marburg; University of Passau; Otto von Guericke
   University
RP Kästner, C (corresponding author), Univ Marburg, Dept Math & Comp Sci, D-35032 Marburg, Germany.
EM kaestner@informatik.uni-marburg.de; apel@uni-passau.de;
   thuem@iti.cs.uni-magdeburg.de; saake@iti.cs.uni-magdeburg.de
OI Apel, Sven/0000-0003-3687-2233; Kastner, Christian/0000-0002-4450-4572
FU European Research Council [203099]; German Research Foundation [AP
   206/2, AP 206/4, LE 912/13]; European Commission [C(2007)5254]
FX C. Kastner's work is supported in part by the European Research Council,
   project number #203099. S. Apel's work is supported in part by the
   German Research Foundation, project numbers AP 206/2, AP 206/4, and LE
   912/13. T. Thum's work was supported by in part the European Commission,
   project number #C(2007)5254.
CR [Anonymous], 2005, P WORKSHOP ECLIPSE T
   [Anonymous], 1997, COMPONENT SOFTWARE O
   [Anonymous], 1998, P 25 ACM SIGPLAN SIG, DOI DOI 10.1145/268946.268961
   [Anonymous], 2000, Generative programming: methods, tools, and applications
   Apel S, 2010, ACM T PROGR LANG SYS, V32, DOI 10.1145/1745312.1745316
   Apel S, 2010, AUTOMAT SOFTW ENG, V17, P251, DOI 10.1007/s10515-010-0066-8
   Apel S, 2008, GPCE'08: PROCEEDINGS OF THE ACM SIGPLAN SEVENTH INTERNATIONAL CONFERENCE ON GENERATIVE PROGRAMMING AND COMPONENT ENGINEERING, P101
   Atkins DL, 2002, IEEE T SOFTWARE ENG, V28, P625, DOI 10.1109/TSE.2002.1019478
   Bass Len, 2012, SEI S SOFTW
   Batory D, 2004, IEEE T SOFTWARE ENG, V30, P355, DOI 10.1109/TSE.2004.23
   Batory D, 2005, LECT NOTES COMPUT SC, V3714, P7
   Batory D, 1997, IEEE T SOFTWARE ENG, V23, P67, DOI 10.1109/32.585497
   Benavides D, 2005, LECT NOTES COMPUT SC, V3520, P491
   Bergel A, 2005, ACM SIGPLAN NOTICES, V40, P177, DOI 10.1145/1103845.1094826
   BETTINI L., 2010, P S APPL COMP SAC, P2098
   Beuche D, 1999, 2ND IEEE INTERNATIONAL SYMPOSIUM ON OBJECT-ORIENTED REAL-TIME DISTRIBUTED COMPUTING (ISORC'99), PROCEEDINGS, P45, DOI 10.1109/ISORC.1999.776349
   Beuche D, 2004, SCI COMPUT PROGRAM, V53, P333, DOI 10.1016/j.scico.2003.04.005
   BRACHA G, 1990, SIGPLAN NOTICES, V25, P303, DOI 10.1145/97946.97982
   Chae W, 2008, SPLC 2008: 12TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE, PROCEEDINGS, P307, DOI 10.1109/SPLC.2008.28
   CHAPMAN M., 2006, ECLIPSECON 06
   Conejero JM, 2009, LECT NOTES BUS INF P, V33, P136
   Czarnecki K, 2005, LECT NOTES COMPUT SC, V3676, P422
   Czarnecki K., 2006, GPCE, P211
   Delaware B, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P243, DOI 10.1145/1595696.1595733
   Ducasse S, 2006, ACM T PROGR LANG SYS, V28, P331, DOI 10.1145/1119479.1119483
   Emir B, 2006, LECT NOTES COMPUT SC, V4067, P279
   Ernst MD, 2002, IEEE T SOFTWARE ENG, V28, P1146, DOI 10.1109/TSE.2002.1158288
   Favre JM, 1997, PROG COMPREHEN, P29, DOI 10.1109/WPC.1997.601260
   Figueiredo E, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P261, DOI 10.1145/1368088.1368124
   Fuhrer R. M., 2007, P 1 WORKSH REF TOOLS, P30
   Ganesan Dharmalingam., 2009, SPLC, P161
   Gosling J., 2005, Java Language Specification, Vthird
   Grechanik M, 2004, PROC INT CONF SOFTW, P357, DOI 10.1109/ICSE.2004.1317458
   HUANG S. S., 2010, ACM T PROGR IN PRESS
   Huang S.S., 2007, PROC 6 INT C ASPECT, P185
   Huang SS, 2005, LECT NOTES COMPUT SC, V3676, P309
   HUTCHINS D., 2009, THESIS U EDINBURGH
   Igarashi A, 2001, ACM T PROGR LANG SYS, V23, P396, DOI 10.1145/503502.503505
   Jepsen HansPeter., 2009, Proc. of the International Software Product Line Conference (SPLC'09), P101
   JOHNSON RE, 1988, J OBJECT-ORIENT PROG, V1, P22
   Kästner C, 2007, SPLC 2007: 11TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE, PROCEEDINGS, P223, DOI 10.1109/SPLINE.2007.12
   Kästner C, 2009, J OBJECT TECHNOL, V8, P59
   Kästner C, 2009, PROC INT CONF SOFTW, P611, DOI 10.1109/ICSE.2009.5070568
   Kästner C, 2009, LECT NOTES BUS INF P, V33, P175
   Kästner C, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P311, DOI 10.1145/1368088.1368131
   KANG K., 1990, CMUSEI90TR21 SEI
   Kastner Christian, 2008, 2008 23rd IEEE/ACM International Conference on Automated Software Engineering, P258, DOI 10.1109/ASE.2008.36
   Kastner Christian, 2009, P INT C GEN PROGR CO, P157, DOI DOI 10.1145/1621607.1621632
   Kiczales G, 1997, LECT NOTES COMPUT SC, V1241, P220, DOI 10.1007/BFb0053381
   Krone M., 1994, ICSE-16. 16th International Conference on Software Engineering (Cat. No.94CH3409-0), P49, DOI 10.1109/ICSE.1994.296765
   Krueger CW, 2002, LECT NOTES COMPUT SC, V2290, P282
   Liskov B., 1981, Lecture Notes in Computer Science, V114
   LITVINOV V., 1998, P OOPSLA 98 VANC OCT, P388
   Lohmann D., 2006, Operating Systems Review, V40, P191, DOI 10.1145/1218063.1217954
   McDirmid S, 2001, ACM SIGPLAN NOTICES, V36, P211, DOI 10.1145/504311.504298
   MCDIRMID S., 2006, P ECOOP WORKSH ECL T
   Mendonca Marcilio, 2009, SPLC' 09, P231
   Metzger A, 2007, INT REQUIR ENG CONF, P243, DOI 10.1109/RE.2007.61
   Myers A. C., 1997, Conference Record of POPL '97: The 24th ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages, P132
   Nipkow T., 1998, Conference Record of POPL '98: 25th ACM SIGPLAN-SIGACT. Symposium on Principles of Programming Languages, P161, DOI 10.1145/268946.268960
   OSGIALLIANCE, 2009, OSGI SERV PLATF COR
   Ossher H., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, P734, DOI 10.1109/ICSE.2000.870483
   Pearse TT, 1997, INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE, PROCEEDINGS, P270, DOI 10.1109/ICSM.1997.624254
   Pierce Benjamin C., 2002, TYPES PROGRAMMING LA, V1st
   Pohl K., 2005, SOFTWARE PRODUCT LIN, V10
   Prehofer C, 1997, LECT NOTES COMPUT SC, V1241, P419
   Rosenmüller M, 2009, DATA KNOWL ENG, V68, P1493, DOI 10.1016/j.datak.2009.07.013
   ROSENTHAL M., 2009, THESIS U PASSAU
   Schobbens PY, 2006, RE'06: 14TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, PROCEEDINGS, P139
   She S., 2010, VaMoS, P45
   She S, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P461, DOI 10.1145/1985793.1985856
   SPENCER H, 1992, PROCEEDINGS OF THE SUMMER 1992 USENIX CONFERENCE, P185
   Strnisa R, 2007, OOPSLA: 22ND INTERNATIONAL CONFERENCE ON OBJECT-ORIENTED PROGRAMMING, SYSTEMS, LANGUAGES, AND APPLICATIONS, PROCEEDINGS, P499
   Tarr P., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P107, DOI 10.1109/ICSE.1999.841000
   Tartler Reinhard., 2009, Proceedings of the 1st Workshop on Feature-Oriented Software Development (FOSD'09), P81
   Thaker Sahil., 2007, P 6 INT C GENERATIVE, P95
   Thüm T, 2009, PROC INT CONF SOFTW, P254, DOI 10.1109/ICSE.2009.5070526
   THUM T., 2010, THESIS U MAGDEBURG
   Warth A, 2006, ACM SIGPLAN NOTICES, V41, P37, DOI 10.1145/1167515.1167477
   WRIGHT AK, 1994, INFORM COMPUT, V115, P38, DOI 10.1006/inco.1994.1093
NR 80
TC 84
Z9 88
U1 0
U2 4
PU ASSOC COMPUTING MACHINERY
PI NEW YORK
PA 2 PENN PLAZA, STE 701, NEW YORK, NY 10121-0701 USA
SN 1049-331X
EI 1557-7392
J9 ACM T SOFTW ENG METH
JI ACM Trans. Softw. Eng. Methodol.
PD JUL
PY 2012
VL 21
IS 3
AR 14
DI 10.1145/2211616.2211617
PG 39
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 968FX
UT WOS:000305963800001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Qi, DW
   Roychoudhury, A
   Liang, ZK
   Vaswani, K
AF Qi, Dawei
   Roychoudhury, Abhik
   Liang, Zhenkai
   Vaswani, Kapil
TI DARWIN: An Approach to Debugging Evolving Programs
SO ACM TRANSACTIONS ON SOFTWARE ENGINEERING AND METHODOLOGY
LA English
DT Article
DE Experimentation; Reliability; Software debugging; software evolution;
   symbolic execution
AB Bugs in programs are often introduced when programs evolve from a stable version to a new version. In this article, we propose a new approach called DARWIN for automatically finding potential root causes of such bugs. Given two programs-a reference program and a modified program-and an input that fails on the modified program, our approach uses symbolic execution to automatically synthesize a new input that (a) is very similar to the failing input and (b) does not fail. We find the potential cause(s) of failure by comparing control-flow behavior of the passing and failing inputs and identifying code fragments where the control flows diverge.
   A notable feature of our approach is that it handles hard-to-explain bugs, like code missing errors, by pointing to code in the reference program. We have implemented this approach and conducted experiments using several real-world applications, such as the Apache Web server, libPNG (a library for manipulating PNG images), and TCPflow (a program for displaying data sent through TCP connections). In each of these applications, DARWIN was able to localize bugs with high accuracy. Even though these applications contain several thousands of lines of code, DARWIN could usually narrow down the potential root cause(s) to less than ten lines. In addition, we find that the inputs synthesized by DARWIN provide additional value by revealing other undiscovered errors.
C1 [Qi, Dawei; Roychoudhury, Abhik; Liang, Zhenkai] Natl Univ Singapore, Sch Comp, Singapore 117417, Singapore.
   [Vaswani, Kapil] Microsoft Res India, Bangalore 560080, Karnataka, India.
C3 National University of Singapore; Microsoft
RP Qi, DW (corresponding author), Natl Univ Singapore, Sch Comp, 13 Comp Dr, Singapore 117417, Singapore.
EM dawei@comp.nus.edu.sg; abhik@comp.nus.edu.sg; liangzk@comp.nus.edu.sg;
   kapilv@microsoft.com
RI Lea, Tess/F-9272-2011
OI Liang, Zhenkai/0000-0001-7138-5030; ROYCHOUDHURY,
   Abhik/0000-0002-7127-1137
FU Ministry of Education from Singapore [MOE2010-T2-2-073,
   R-252-000-456-112, R-252-100-456-112]
FX This work was partially supported by a Ministry of Education research
   grant MOE2010-T2-2-073 (R-252-000-456-112 and R-252-100-456-112) from
   Singapore.
CR AGRAWAL H, 1990, SIGPLAN NOTICES, V25, P246, DOI 10.1145/93548.93576
   [Anonymous], 2008, P 4 INT C INF SYST S
   [Anonymous], 2003, Modernizing Legacy Systems: Software Technologies, Engineering Processes,and Business Practices
   [Anonymous], INT S SOFTW TEST AN
   [Anonymous], P INT C AUT SOFTW EN
   [Anonymous], P C PROGR LANG DES I
   APACHE, 2009, AP WEB SERV
   APIWATTANAPONG T, 2004, P INT C AUT SOFTW EN
   BALL T., 2003, P INT S PRINC PROGR
   Barrett C, 2007, LECT NOTES COMPUT SC, V4590, P298
   BRUMLEY D., 2007, P USENIX SEC C
   Brummayer R, 2009, LECT NOTES COMPUT SC, V5505, P174, DOI 10.1007/978-3-642-00768-2_16
   Bruttomesso R, 2008, LECT NOTES COMPUT SC, V5123, P299
   CHEN Y., 1994, P INT C SOFTW ENG
   CSALLNER C, 2006, P INT S SOFTW TEST A
   De Moura L., 2008, P INT C TOOLS ALG CO
   Elbaum  Sebastian, 2000, P INT S SOFTW TEST A
   Ganesh V., 2007, Proceedings of the International Conference in Computer Aided Verification (CAV 2007), P524
   GIROUX O, 2006, SIGSOFT06FSE14, P163
   HOROWITZ S, 1990, P INT C PROGR LANG D
   Hovemeyer David., 2004, ACM Conference on Object-Oriented Programming Systems, Lan-guages, and Applications, OOPSLA '04, P132
   HUANG S, 2009, MINIWEB WEB SERVER
   JACKSON D, 1994, INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE, PROCEEDINGS, P243, DOI 10.1109/ICSM.1994.336770
   KOREL B, 1988, INFORM PROCESS LETT, V29, P155, DOI 10.1016/0020-0190(88)90054-3
   Liblit B., 2005, THESIS UC BERKELEY
   LIBLIT B, 2005, P C PROGR LANG DES I
   LIBPNG, 2009, LIBPNG LIB
   PERSON S., 2008, P INT C FDN SOFTW EN
   QEMU, 2009, QEMU EM
   Qi DW, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P33, DOI 10.1145/1595696.1595704
   Ranise S., 2003, P WORKSH PRAGM DEC P
   Ren XX, 2004, ACM SIGPLAN NOTICES, V39, P432, DOI 10.1145/1035292.1029012
   Rothermel G., 1997, ACM Transactions on Software Engineering and Methodology, V6, P173, DOI 10.1145/248233.248262
   ROYCHOUDHURY A, 2006, P INT C COMP CONSTR
   SANTELICES R., 2008, P INT C AUT SOFTW EN
   SAVANT, 2009, SAV WEB SERV
   Sen K., 2005, P 10 EUR SOFTW ENG C, V30, P263, DOI DOI 10.1145/1081706.1081750
   SILLITO J., 2006, P INT C FDN SOFTW EN
   Sridharan M, 2007, PLDI'07: PROCEEDINGS OF THE 2007 ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P112, DOI 10.1145/1250734.1250748
   Wang T, 2004, PROC INT CONF SOFTW, P512, DOI 10.1109/ICSE.2004.1317473
   Zeller A., 2002, Software Engineering Notes, V27, P1, DOI 10.1145/605466.605468
   Zeller A, 2002, IEEE T SOFTWARE ENG, V28, P183, DOI 10.1109/32.988498
   Zeller A, 1999, LECT NOTES COMPUT SC, V1687, P253, DOI 10.1145/318774.318946
   Zhang X, 2006, ACM SIGPLAN NOTICES, V41, P169, DOI 10.1145/1133981.1134002
   Zhang XY, 2007, PLDI'07: PROCEEDINGS OF THE 2007 ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P415, DOI 10.1145/1250734.1250782
NR 45
TC 19
Z9 22
U1 0
U2 3
PU ASSOC COMPUTING MACHINERY
PI NEW YORK
PA 2 PENN PLAZA, STE 701, NEW YORK, NY 10121-0701 USA
SN 1049-331X
EI 1557-7392
J9 ACM T SOFTW ENG METH
JI ACM Trans. Softw. Eng. Methodol.
PD JUL
PY 2012
VL 21
IS 3
AR 19
DI 10.1145/2211616.2211622
PG 29
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 968FX
UT WOS:000305963800006
DA 2024-07-18
ER

PT J
AU Bauer, A
   Leucker, M
   Schallhart, C
AF Bauer, Andreas
   Leucker, Martin
   Schallhart, Christian
TI Runtime Verification for LTL and TLTL
SO ACM TRANSACTIONS ON SOFTWARE ENGINEERING AND METHODOLOGY
LA English
DT Article
DE Verification; Assertion checkers; monitors; runtime verification
ID TEMPORAL LOGIC; MODEL-CHECKING; SAFETY; AUTOMATA; SYSTEMS
AB This article studies runtime verification of properties expressed either in lineartime temporal logic (LTL) or timed lineartime temporal logic (TLTL). It classifies runtime verification in identifying its distinguishing features to model checking and testing, respectively. It introduces a three-valued semantics (with truth values true, false, inconclusive) as an adequate interpretation as to whether a partial observation of a running system meets an LTL or TLTL property.
   For LTL, a conceptually simple monitor generation procedure is given, which is optimal in two respects: First, the size of the generated deterministic monitor is minimal, and, second, the monitor identifies a continuously monitored trace as either satisfying or falsifying a property as early as possible. The feasibility of the developed methodology is demontrated using a collection of real-world temporal logic specifications. Moreover, the presented approach is related to the properties monitorable in general and is compared to existing concepts in the literature. It is shown that the set of monitorable properties does not only encompass the safety and cosafety properties but is strictly larger.
   For TLTL, the same road map is followed by first defining a three-valued semantics. The corresponding construction of a timed monitor is more involved, yet, as shown, possible.
C1 [Bauer, Andreas] NICTA, Sydney, NSW, Australia.
   [Bauer, Andreas] Australian Natl Univ, Canberra, ACT 0200, Australia.
   [Leucker, Martin] Tech Univ Munich, D-8000 Munich, Germany.
   [Schallhart, Christian] Tech Univ Darmstadt, Darmstadt, Germany.
C3 Australian National University; Australian National University;
   Technical University of Munich; Technical University of Darmstadt
RP Bauer, A (corresponding author), NICTA, Sydney, NSW, Australia.
EM baueran@rsise.anu.edu.au; leucker@in.tum.de; schallhart@forsyte.de
RI Bauer, Andreas/H-8759-2013
OI Leucker, Martin/0000-0002-3696-9222
CR Aho A.V., 1986, COMPILERS PRINCIPLES
   Allan C, 2005, ACM SIGPLAN NOTICES, V40, P345, DOI 10.1145/1103845.1094839
   ALPERN B, 1987, DISTRIB COMPUT, V2, P117, DOI 10.1007/BF01782772
   ALUR R, 1994, THEOR COMPUT SCI, V126, P183, DOI 10.1016/0304-3975(94)90010-8
   ALUR R, 1993, INFORM COMPUT, V104, P2, DOI 10.1006/inco.1993.1024
   Alur R, 1999, THEOR COMPUT SCI, V211, P253, DOI 10.1016/S0304-3975(97)00173-4
   [Anonymous], 1995, Temporal verification of reactive systems-safety
   [Anonymous], 1996, LNCS, DOI DOI 10.1007/BFb0020949
   [Anonymous], LNCS
   [Anonymous], 1971, Theory of Machines and Computations, DOI DOI 10.1016/B978-0-12-417750-5.50022-1
   [Anonymous], 2000, The C++ Programming Language
   [Anonymous], 2003, Adv. Comput., DOI 10.1016/S0065-2458(03)58003-2
   [Anonymous], LECT NOTES COMPUTER
   Barbon F, 2006, ICWS 2006: IEEE INTERNATIONAL CONFERENCE ON WEB SERVICES, PROCEEDINGS, P63
   BARESI L, 2008, P WORKSH TEST AN VER, P15
   BARRINGER H, 2004, P INT PAR DISTR PROC
   Barringer H, 2007, LECT NOTES COMPUT SC, V4839, P111
   Bauer A, 2007, LECT NOTES COMPUT SC, V4839, P126
   Bauer A, 2006, LECT NOTES COMPUT SC, V4337, P260
   Bauer A, 2006, 2006 AUSTRALIAN SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P243
   Bauer A, 2010, J LOGIC COMPUT, V20, P651, DOI 10.1093/logcom/exn075
   Behrmann G, 2006, INT CONF QUANT EVAL, P125
   BERG T, 2003, ELECT NOTES THEORETI, V118, P3
   Biere A, 1999, LECT NOTES COMPUT SC, V1579, P193
   Bodden E., 2004, ACM SIGPLAN Conference on Object-Oriented Programming, Systems, Languages, and Applications (OOPSLA), P306, DOI [10.1145/1028664.1028776, DOI 10.1145/1028664.1028776]
   Bouyer P, 2005, LECT NOTES COMPUT SC, V3441, P219
   BRYANT RE, 1985, P 22 ACM IEEE DES AU, P688
   Buchi J. R, 1990, Studies in Logic and the Foundations of Mathematics, P425, DOI [10.1007/978-1-4613-8928-6_23, DOI 10.1007/978-1-4613-8928-6_23]
   Chaudhuri S, 2007, LECT NOTES COMPUT SC, V4595, P279
   CHEN F, 2003, ELECT NOTES THEOR CO, V89, P2
   Chen F, 2007, OOPSLA: 22ND INTERNATIONAL CONFERENCE ON OBJECT-ORIENTED PROGRAMMING, SYSTEMS, LANGUAGES, AND APPLICATIONS, PROCEEDINGS, P569
   CHOW TS, 1978, IEEE T SOFTWARE ENG, V4, P178, DOI 10.1109/TSE.1978.231496
   Clarke EM, 1999, MODEL CHECKING, P1
   d'Amorim M, 2005, LECT NOTES COMPUT SC, V3576, P364
   D'Angelo B, 2005, 12TH INTERNATIONAL SYMPOSIUM ON TEMPORAL REPRESENTATION AND REASONING, PROCEEDINGS, P166, DOI 10.1109/TIME.2005.26
   Delgado N, 2004, IEEE T SOFTWARE ENG, V30, P859, DOI 10.1109/TSE.2004.91
   Dewhurst S., 2002, C GOTCHAS AVOIDING C
   Dill D. L., 1990, Automatic Verification Methods for Finite State Systems. International Workshop Proceedings, P197
   DSouza Deepak., 2003, International Journal Foundations Computer Science, V14, P625, DOI DOI 10.1142/S0129054103001923
   Dwyer M. B., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P411, DOI 10.1109/ICSE.1999.841031
   Eisner C, 2003, LECT NOTES COMPUT SC, V2725, P27
   ERLINGSSON U, 2000, P DARPA INF SURV C E, V2, P1287
   Finkbeiner B, 2004, FORM METHOD SYST DES, V24, P101, DOI 10.1023/B:FORM.0000017718.28096.48
   Fritz C, 2003, LECT NOTES COMPUT SC, V2759, P35
   GEILEN M, 2001, ELECT NOTES THEOR CO, V55, P2
   Giannakopoulou D, 2001, 16TH ANNUAL INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2001), PROCEEDINGS, P412, DOI 10.1109/ASE.2001.989841
   GIANNAKOPOULOU D, 2001, 0121 RIACSUSRA
   GOLDSMITH S, 2005, P 20 ANN ACM SIGPLAN, P385
   GOLLU A, 1994, IEEE DECIS CONTR P, P957, DOI 10.1109/CDC.1994.410933
   Grinchtein O, 2008, FORM ASP COMPUT, V20, P619, DOI 10.1007/s00165-008-0089-0
   Hakansson J., 2003, STTT, V4, P456
   Havelund K., 2004, International Journal on Software Tools for Technology Transfer, V6, P158, DOI 10.1007/s10009-003-0117-6
   Havelund K, 2002, LECT NOTES COMPUT SC, V2280, P342
   HAVELUND K, 2001, ELECT NOTES THEOR CO, V55, P2
   Kamp J.A.W., 1968, Tense logic and the theory of linear order
   Kim M, 2004, FORM METHOD SYST DES, V24, P129, DOI 10.1023/B:FORM.0000017719.43755.7c
   KIM M, 2002, ELECT NOTES THEOR CO, V70, P4
   KOPETZ H, 1991, LECT NOTES COMPUT SC, V563, P87
   Kupferman O, 2001, FORM METHOD SYST DES, V19, P291, DOI 10.1023/A:1011254632723
   LAMPORT L, 1977, IEEE T SOFTWARE ENG, V3, P125, DOI 10.1109/TSE.1977.229904
   Lichtenstein O., 1985, P 12 ACM SIGACT SIGP, P97, DOI DOI 10.1145/318593.318622
   Maler O, 2004, LECT NOTES COMPUT SC, V3253, P152, DOI 10.1007/978-3-540-30206-3_12
   Markey N, 2003, LECT NOTES COMPUT SC, V2761, P251
   Martin Michael., 2005, OOPSLA '05: Proceedings of the 20th annual ACM SIGPLAN conference on Object oriented programming systems languages and applications, P365
   Peled D, 1999, INT FED INFO PROC, V28, P225
   Pnueli A, 2006, LECT NOTES COMPUT SC, V4085, P573
   Pnueli Amir., 1977, P 18 ANN S FDN COMPU, P46, DOI DOI 10.1109/SFCS.1977.32
   Raskin J.-F., 1999, Journal of Automata, Languages and Combinatorics, V4, P247
   RASKIN JF, 1999, THESIS NAMUR
   Robinson WN, 2006, REQUIR ENG, V11, P17, DOI 10.1007/s00766-005-0016-3
   Rosu G, 2006, LECT NOTES COMPUT SC, V4144, P263, DOI 10.1007/11817963_25
   Schwoon S, 2005, LECT NOTES COMPUT SC, V3440, P174
   SEN K, 2003, ELECT NOTES THEOR CO, V89, P2
   SISTLA AP, 1985, J ACM, V32, P733, DOI 10.1145/3828.3837
   Stolz V, 2006, ELECTRON NOTES THEOR, V144, P109, DOI 10.1016/j.entcs.2006.02.007
   Tarjan R., 1972, SIAM Journal on Computing, V1, P146, DOI 10.1137/0201010
   Thati P, 2005, ELECTRON NOTES THEOR, V113, P145, DOI 10.1016/j.entcs.2004.01.029
   Tripakis S, 2001, FORM METHOD SYST DES, V18, P25, DOI 10.1023/A:1008734703554
   TRIPAKIS S, 2002, LNCS, V2469, P205
   Vardi M. Y., 1986, Proceedings of the Symposium on Logic in Computer Science (Cat. No.86CH2321-8), P332
   Vardi MY, 1995, LECT NOTES COMPUTER, P238, DOI DOI 10.1007/3-540-60915-6
   Vasilevskii M.P., 1973, CYBERNETICS, V4, P653
NR 82
TC 319
Z9 340
U1 0
U2 16
PU ASSOC COMPUTING MACHINERY
PI NEW YORK
PA 2 PENN PLAZA, STE 701, NEW YORK, NY 10121-0701 USA
SN 1049-331X
EI 1557-7392
J9 ACM T SOFTW ENG METH
JI ACM Trans. Softw. Eng. Methodol.
PD SEP
PY 2011
VL 20
IS 4
AR 14
DI 10.1145/2000799.2000800
PG 64
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 824QN
UT WOS:000295217200001
DA 2024-07-18
ER

PT J
AU Ko, AJ
   Myers, BA
AF Ko, Andrew J.
   Myers, Brad A.
TI Extracting and Answering Why and Why Not Questions about Java Program
   Output
SO ACM TRANSACTIONS ON SOFTWARE ENGINEERING AND METHODOLOGY
LA English
DT Article
DE Reliability; Algorithms; Performance; Design; Human Factors; Whyline;
   questions; debugging
ID INFORMATION
AB When software developers want to understand the reason for a program's behavior, they must translate their questions about the behavior into a series of questions about code, speculating about the causes in the process. The Whyline is a new kind of debugging tool that avoids such speculation by instead enabling developers to select a question about program output from a set of "why did and why didn't" questions extracted from the program's code and execution. The tool then finds one or more possible explanations for the output in question. These explanations are derived using a static and dynamic slicing, precise call graphs, reachability analyses, and new algorithms for determining potential sources of values. Evaluations of the tool on two debugging tasks showed that developers with the Whyline were three times more successful and twice as fast at debugging, compared to developers with traditional breakpoint debuggers. The tool has the potential to simplify debugging and program understanding in many software development contexts.
C1 [Ko, Andrew J.] Univ Washington, Informat Sch, Seattle, WA 98195 USA.
   [Myers, Brad A.] Carnegie Mellon Univ, Human Comp Interact Inst, Sch Comp Sci, Pittsburgh, PA 15213 USA.
C3 University of Washington; University of Washington Seattle; Carnegie
   Mellon University
RP Ko, AJ (corresponding author), Univ Washington, Informat Sch, Seattle, WA 98195 USA.
RI Myers, Brad/R-3816-2019
FU National Science Foundation [IIS-0329090, CCF-0811610]; EUSES consortium
   under NSF [ITR CCR-0324770]; NDSEG; Division of Computing and
   Communication Foundations; Direct For Computer & Info Scie & Enginr
   [0952733] Funding Source: National Science Foundation; Division of
   Computing and Communication Foundations; Direct For Computer & Info Scie
   & Enginr [0811610] Funding Source: National Science Foundation
FX This work was supported by the National Science Foundation under NSF
   grant IIS-0329090 and CCF-0811610 and the EUSES consortium under NSF
   grant ITR CCR-0324770. The first author was also supported by NDSEG and
   NSF Graduate Fellowships. Any opinions, findings, and conclusions or
   recommendations expressed in this material are those of the author(s)
   and do not necessarily reflect the views of the National Science
   Foundation.
CR Abraham R, 2005, 2005 IEEE SYMPOSIUM ON VISUAL LANGUAGE AND HUMAN-CENTRIC COMPUTING, PROCEEDINGS, P37, DOI 10.1109/VLHCC.2005.42
   Aleven V, 2006, LECT NOTES COMPUT SC, V4053, P61
   Andrew J Ko, 2004, P SIGCHI C HUMAN FAC, V6, P151, DOI [DOI 10.1145/985692.985712, 10.1145/985692.985712]
   [Anonymous], 2002, RTI PROJECT
   [Anonymous], 2006, COMP 21 ACM SIGPLAN, DOI DOI 10.1145/1176617
   BOTHELL D, 2004, ACT R ENV MANUAL VER
   Bush WR, 2000, SOFTWARE PRACT EXPER, V30, P775, DOI 10.1002/(SICI)1097-024X(200006)30:7<775::AID-SPE309>3.0.CO;2-H
   Chalupsky H, 2002, EIGHTEENTH NATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE (AAAI-02)/FOURTEENTH INNOVATIVE APPLICATIONS OF ARTIFICIAL INTELLIGENCE CONFERENCE (IAAI-02), PROCEEDINGS, P870
   CLARK P, 2007, P INT C KNOWL CAPT K, P63
   Clause J, 2007, PROC INT CONF SOFTW, P261
   Cleve H, 2005, PROC INT CONF SOFTW, P342
   Cooper Keith, 2006, Technical Report
   Eisenberg AD, 2005, PROC IEEE INT CONF S, P337
   Grove D, 2001, ACM T PROGR LANG SYS, V23, P685, DOI 10.1145/506315.506316
   GUPTA N, 2005, P 20 IEEE ACM INT C, P263
   Jones JA, 2005, P 20 IEEE ACM INT C, P273
   Ko AJ, 2004, 2004 IEEE SYMPOSIUM ON VISUAL LANGUAGES AND HUMAN CENTRIC COMPUTING: PROCEEDINGS, P199
   KO AJ, 2009, P 27 INT C HUM FACT, P1569
   KO AJ, 2008, CMUCS08122 HUM COMP
   Ko AJ, 2007, PROC INT CONF SOFTW, P344
   Ko AJ, 2006, IEEE T SOFTWARE ENG, V32, P971, DOI 10.1109/TSE.2006.116
   Ko AJ, 2006, IEEE SYMPOSIUM ON VISUAL LANGUAGES AND HUMAN-CENTRIC COMPUTING, PROCEEDINGS, P127
   Ko AJ, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P301, DOI 10.1145/1368088.1368130
   KOREL B, 1988, INFORM PROCESS LETT, V29, P155, DOI 10.1016/0020-0190(88)90054-3
   LaToza Thomas D., 2007, P ESECFSE 2007 DUBR, P361, DOI [DOI 10.1145/1287624.1287675, 10.1145/1287624.1287675]
   Lencevicius R., 2003, Journal of Automated Software Engineering, V10, P367
   LEWIS B, 2003, P 5 INT WORKSH AUT D, P225
   LIBLIT B, 2005, P 2005 ACM SIGPLAN C, P15, DOI DOI 10.1145/1065010.1065014
   Milanova A, 2002, SCAM 2002: SECOND IEEE INTERNATIONAL WORKSHOP ON SOURCE CODE ANALYSIS MANIPULATION, PROCEEDINGS, P155, DOI 10.1109/SCAM.2002.1134115
   Myers B.A., 2006, Proceedings of the 24th international conference on Human factors in computing systems (CHI '06), P397
   Potanin A, 2004, 2004 AUSTRALIAN SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P251, DOI 10.1109/ASWEC.2004.1290478
   Ruthruff JR, 2005, J VISUAL LANG COMPUT, V16, P3, DOI 10.1016/j.jvlc.2004.07.001
   Sridharan M, 2007, PLDI'07: PROCEEDINGS OF THE 2007 ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P112, DOI 10.1145/1250734.1250748
   Tullio J., 2007, P SIGCHI C HUMAN FAC, P31, DOI [10.1145/1240624.1240630, DOI 10.1145/1240624.1240630]
   Ungar D, 1997, COMMUN ACM, V40, P38, DOI 10.1145/248448.248457
   WAGNER E, 2003, P INT C INT US INT J, P331
   Wang T, 2004, PROC INT CONF SOFTW, P512, DOI 10.1109/ICSE.2004.1317473
   WEISER M, 1982, COMMUN ACM, V25, P446, DOI 10.1145/358557.358577
   XIE T, 2007, P INT WORKSH AUT SOF, P202
   Xu J. Qian, 2005, ACM SIGSOFT Software Engineering Notes, V30, P1, DOI [10.1145/1050849.1050865.36Y, DOI 10.1145/1050849.1050865]
   Zeller Andreas., 2002, Proceedings of the 10th ACM SIGSOFT Symposium on Foundations of Software Engineering, SIGSOFT '02/FSE-10, P1, DOI DOI 10.1145/587051.587053
   Zhang X., 2005, ACM T ARCHIT CODE OP, V2, P301, DOI DOI 10.1145/1089008.1089012
NR 42
TC 20
Z9 23
U1 0
U2 2
PU ASSOC COMPUTING MACHINERY
PI NEW YORK
PA 2 PENN PLAZA, STE 701, NEW YORK, NY 10121-0701 USA
SN 1049-331X
EI 1557-7392
J9 ACM T SOFTW ENG METH
JI ACM Trans. Softw. Eng. Methodol.
PD AUG
PY 2010
VL 20
IS 2
AR 4
DI 10.1145/1824760.1824761
PG 36
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 661VG
UT WOS:000282757300001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Masri, W
   Podgurski, A
AF Masri, Wes
   Podgurski, Andy
TI Measuring the Strength of Information Flows in Programs
SO ACM TRANSACTIONS ON SOFTWARE ENGINEERING AND METHODOLOGY
LA English
DT Article
DE Security; Experimentation; Measurement; Dynamic information flow
   analysis; information flow strength; information flow length;
   information leakage; program dependence; entropy; correlation; dynamic
   slicing
ID DEPENDENCE; IMPACT; MODEL
AB Dynamic information flow analysis (DIFA) was devised to enable the flow of information among variables in an executing program to be monitored and possibly regulated. It is related to techniques like dynamic slicing and dynamic impact analysis. To better understand the basis for DIFA, we conducted an empirical study in which we measured the strength of information flows identified by DIFA, using information theoretic and correlation-based methods. The results indicate that in most cases the occurrence of a chain of dynamic program dependences between two variables does not indicate a measurable information flow between them. We also explored the relationship between the strength of an information flow and the length of the corresponding dependence chain, and we obtained results indicating that no consistent relationship exists between the length of an information flow and its strength. Finally, we investigated whether data dependence and control dependence makes equal or unequal contributions to flow strength. The results indicate that flows due to data dependences alone are stronger, on average, than flows due to control dependences alone. We present the details of our study and consider the implications of the results for applications of DIFA and related techniques.
C1 [Masri, Wes] Amer Univ Beirut, Dept Comp Sci, Beirut 11072020, Lebanon.
   [Podgurski, Andy] Case Western Reserve Univ, Dept Elect Engn & Comp Sci, Cleveland, OH 44106 USA.
C3 American University of Beirut; University System of Ohio; Case Western
   Reserve University
RP Masri, W (corresponding author), Amer Univ Beirut, Dept Comp Sci, Beirut 11072020, Lebanon.
EM wm13@aub.edu.lb; podgurski@case.edu
RI Masri, Wes/A-1786-2013
FU NSF [CCR-0098325, CCR-0702693]; LNCSR [022136]; Division of Computing
   and Communication Foundations; Direct For Computer & Info Scie & Enginr
   [0820217, 0819987] Funding Source: National Science Foundation
FX This article is a revised, expanded version of an article presented at
   the Fourth International Workshop on Dynamic Analysis (WODA), Shanghai,
   China, May 2006. This research was supported in part by NSF grants
   CCR-0098325 and CCR-0702693 (Dr. Podgurski) and LNCSR grant 022136 (Dr.
   Masri).
CR AGRAWAL H, 1990, SIGPLAN NOTICES, V25, P246, DOI 10.1145/93548.93576
   [Anonymous], 2005, NDSS
   [Anonymous], PLDI 04 P ACM SIGPLA
   [Anonymous], 2007, P 2007 INT S SOFTW T
   [Anonymous], 2000, CAUSALITY
   [Anonymous], FED INF PROC STAND P
   APIWATTANAPONG T, 2005, P INT C SOFTW ENG ST
   Binkley D, 2004, IEEE T SOFTWARE ENG, V30, P715, DOI 10.1109/TSE.2004.78
   Bishop M., 2002, Computer Security: Art and Science
   Box GE., 2005, Statistics for Experimenters: Design, Innovation, and Discovery, V2nd ed.
   CLARK D, 2004, P IFIP WG 1 7 ACM SI
   CLARK D, 2001, P QUANT ASP PROGR LA
   Cover T. M., 1991, ELEMENTS INFORM THEO
   Dallmeier V., 2006, P 4 INT WORKSH DYN A
   Denning D.E.R., 1982, CRYPTOGRAPHY DATA SE, V112, DOI [10.5555/539308, DOI 10.5555/539308]
   DENNING DE, 1976, COMMUN ACM, V19, P236, DOI 10.1145/360051.360056
   DENNING DE, 1977, COMMUN ACM, V20, P504, DOI 10.1145/359636.359712
   Do HS, 2005, EMPIR SOFTW ENG, V10, P405, DOI 10.1007/s10664-005-3861-2
   FENTON JS, 1974, COMPUT J, V17, P143, DOI 10.1093/comjnl/17.2.143
   FERRANTE J, 1987, ACM T PROGR LANG SYS, V9, P319, DOI 10.1145/24039.24041
   Kachigan S.K., 1986, STAT ANAL INTERDISCI
   Korel B., 1994, P INT S SOFTWARE TES, P66
   KRUS DJ, 2006, VISUAL STAT, pCH14
   LAMPSON BW, 1973, COMMUN ACM, V16, P613, DOI 10.1145/362375.362389
   Law J, 2003, PROC INT CONF SOFTW, P308, DOI 10.1109/ICSE.2003.1201210
   Lieberherr KJ, 2004, PROC INT CONF SOFTW, P2, DOI 10.1109/ICSE.2004.1317408
   Lowe TG, 2002, J SPINAL DISORD TECH, V15, P31, DOI 10.1097/00024720-200202000-00005
   MARSI W, 2004, THESIS CASE W RESERV
   MASRI W, 2006, P 4 INT WORKSH DYN A
   MASRI W, 2005, P SOFTW ENG SEC SYST
   MASRI W., 2004, P 15 IEEE INT S SOFT
   Masri W, 2007, IEEE T SOFTWARE ENG, V33, P454, DOI 10.1109/TSE.2007.1020
   MCCAMANT S, 2007, P ACM SIGPLAN WORKSH
   MCCAMANT S, 2006, MITCSAILTR2006076
   PODGURSKI A, 1990, IEEE T SOFTWARE ENG, V16, P965, DOI 10.1109/32.58784
   PODGURSKI A, 1989, THESIS U MASSACHUSET
   Sabelfeld A, 2003, IEEE J SEL AREA COMM, V21, P5, DOI 10.1109/JSAC.2002.806121
   Siegel S., 1956, Nonparametric statistics for the behavioral sciences
   Sinha S, 2001, ACM T SOFTW ENG METH, V10, P209, DOI 10.1145/367008.367022
   Spirtes P., 2000, CAUSALITY PREDICTION
   STEVEN S, 2000, P INT S SOFTW TEST A, P158
   TIP F, 1995, J PROGRAM LANG, V3, P121
   Visser W., 2003, Automated Software Engineering, V10, P203, DOI 10.1023/A:1022920129859
   VOAS JM, 1993, J SYST SOFTWARE, V20, P207, DOI 10.1016/0164-1212(93)90064-5
   Woodward M.R., 2000, Proc. of the 2000 ACM SIGSOFT Int'l Symp. on Software Testing and Analysis, P168
   XIE T, 2006, P 28 INT C SOFTW ENG
   ZHANG X, 2006, P INT C SOFTW ENG
   ZHANG X, 2006, P PLDI
   ZHANG X, 2005, P AADEBUG
NR 49
TC 33
Z9 37
U1 0
U2 1
PU ASSOC COMPUTING MACHINERY
PI NEW YORK
PA 2 PENN PLAZA, STE 701, NEW YORK, NY 10121-0701 USA
SN 1049-331X
EI 1557-7392
J9 ACM T SOFTW ENG METH
JI ACM Trans. Softw. Eng. Methodol.
PD OCT
PY 2009
VL 19
IS 2
AR 5
DI 10.1145/1571629.1571631
PG 33
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 512AP
UT WOS:000271214500002
DA 2024-07-18
ER

PT J
AU Karam, MR
   Smedley, TJ
   Dascalu, SM
AF Karam, Marcel R.
   Smedley, Trevor J.
   Dascalu, Sergiu M.
TI Unit-Level Test Adequacy Criteria for Visual Dataflow Languages and a
   Testing Methodology
SO ACM TRANSACTIONS ON SOFTWARE ENGINEERING AND METHODOLOGY
LA English
DT Article
DE Algorithms; Languages; Verification; Software testing; visual dataflow
   languages; fault detection; fault localization; color
ID COLOR
AB Visual dataflow languages (VDFLs), which include commercial and research systems, have had a substantial impact on end-user programming. Like any other programming languages, whether visual or textual, VDFLs often contain faults. A desire to provide programmers of these languages with some of the benefits of traditional testing methodologies has been the driving force behind our effort in this work. In this article we introduce, in the context of prograph, a testing methodology for VDFLs based on structural test adequacy criteria and coverage. This article also reports on the results of two empirical studies. The first study was conducted to obtain meaningful information about, in particular, the effectiveness of our all-Dus criteria in detecting a reasonable percentage of faults in VDFLs. The second study was conducted to evaluate, under the same criterion, the effectiveness of our methodology in assisting users to visually localize faults by reducing their search space. Both studies were conducted using a testing system that we have implemented in Prograph's IDE.
C1 [Karam, Marcel R.] Amer Univ Beirut, Dept Comp Sci, New York, NY 10017 USA.
   [Smedley, Trevor J.] Dalhousie Univ, Halifax, NS B3H 3J5, Canada.
   [Dascalu, Sergiu M.] Univ Nevada, Reno, NV 89557 USA.
C3 American University of Beirut; Dalhousie University; Nevada System of
   Higher Education (NSHE); University of Nevada Reno
RP Karam, MR (corresponding author), Amer Univ Beirut, Dept Comp Sci, 3 Dag Hammarskjold Plaza,8th Floor, New York, NY 10017 USA.
EM marcel.karam@aub.edu.lb
RI Jaafar, Mohamad Farid/B-4563-2010
CR Agrawal H, 1995, SIXTH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P143, DOI 10.1109/ISSRE.1995.497652
   Aho A.V., 1986, COMPILERS PRINCIPLES
   [Anonymous], POWER PROGRAPH CPX
   Azem A., 1993, Proceedings. Fourth International Symposium on Software Reliability Engineering (Cat. No.93TH0560-3), P318, DOI 10.1109/ISSRE.1993.624302
   Belli F, 1995, SIXTH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P133, DOI 10.1109/ISSRE.1995.497651
   Bernini M., 1994, Proceedings of the Workshop on Advanced Visual Interfaces AVI '94, P243, DOI 10.1145/192309.192361
   BOULUS J, 2006, P 10 INT C EXT DAT T, P1155
   Burnett M., 1994, IEEE Computational Science and Engineering, V1, P44, DOI 10.1109/99.338768
   CHANG SK, 1989, IEEE T SOFTWARE ENG, V15, P506, DOI 10.1109/32.24700
   CHRIST RE, 1975, HUM FACTORS, V17, P542, DOI 10.1177/001872087501700602
   Clarke L. A., 1976, IEEE Transactions on Software Engineering, VSE-2, P215, DOI 10.1109/TSE.1976.233817
   CLARKE LA, 1989, IEEE T SOFTWARE ENG, V15, P1318, DOI 10.1109/32.41326
   DelFrate F, 1995, SIXTH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P124, DOI 10.1109/ISSRE.1995.497650
   FISK D, 2003, P INT LISP C NEW YOR, P232
   FRANKL P, 1985, P IEE C SOFTW TO APR, P72
   FRANKL PG, 1993, IEEE T SOFTWARE ENG, V19, P774, DOI 10.1109/32.238581
   FRANKL PG, 1988, IEEE T SOFTWARE ENG, V14, P1483, DOI 10.1109/32.6194
   Green TRG, 1996, J VISUAL LANG COMPUT, V7, P131, DOI 10.1006/jvlc.1996.0009
   Gupta KC, 1996, INT J MICROWAVE MILL, V6, P83
   Harrold M. J., 1988, Proceedings of the Conference on Software Maintenance - 1988 (IEEE Cat. No.88CH2615-3), P362, DOI 10.1109/ICSM.1988.10188
   HORWITZ S, 1990, ACM T PROGR LANG SYS, V12, P26, DOI [10.1145/77606.77608, 10.1145/960116.53994]
   HUTCHINS M, 1994, PROC INT CONF SOFTW, P191, DOI 10.1109/ICSE.1994.296778
   Jones JA, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P467, DOI 10.1109/ICSE.2002.1007991
   KARAM M, 2006, P INT C INT WEB APPL, P196
   Karam MR, 2001, IEEE SYMPOSIA ON HUMAN-CENTRIC COMPUTING LANGUAGES AND ENVIRONMENTS, PROCEEDINGS, P280, DOI 10.1109/HCC.2001.995275
   KELSO J, 2002, THESIS MURDOCH U AUS
   KIMURA TD, 1990, VISUAL PROGRAMMING E, P397
   KOREL B, 1985, P 2 C SOFTW DEV TOOL, P34
   KUHN W, 1997, P INT C WORKSH INT G
   LASKI JW, 1983, IEEE T SOFTWARE ENG, V9, P347, DOI 10.1109/TSE.1983.236871
   LIBLIT B, 2005, P 2005 ACM SIGPLAN C, P15, DOI DOI 10.1145/1065010.1065014
   LUO G, 1992, P 3 INT S SOFTW REL, P104
   MEYER MR, 2000, P 5 ANN CCSC NE C J, P181
   MURCH GM, 1984, IEEE COMPUT GRAPH, V4, P49
   NTAFOS SC, 1984, IEEE T SOFTWARE ENG, V10, P795, DOI 10.1109/TSE.1984.5010308
   Offutt AJ, 1996, SOFTWARE PRACT EXPER, V26, P165, DOI 10.1002/(SICI)1097-024X(199602)26:2<165::AID-SPE5>3.0.CO;2-K
   OUABDESSELAM F, 1995, P 2 INT WORKSH AUT A, P249
   PATON BE, 1998, SENSORS TRANSDUCERS
   PERRY DE, 1990, J OBJECT-ORIENT PROG, V2, P13
   RAPPS S, 1985, IEEE T SOFTWARE ENG, V11, P367, DOI 10.1109/TSE.1985.232226
   Rothermel G, 2001, ACM T SOFTW ENG METH, V10, P110, DOI 10.1145/366378.366385
   Rothermel G., 1997, ACM Transactions on Software Engineering and Methodology, V6, P173, DOI 10.1145/248233.248262
   Rothermel G, 1998, PROC INT CONF SOFTW, P198, DOI 10.1109/ICSE.1998.671118
   Shneiderman B., 2010, DESIGNING USER INTER
   WEISER M, 1984, IEEE T SOFTWARE ENG, V10, P352, DOI 10.1109/TSE.1984.5010248
   WEYUKER EJ, 1986, IEEE T SOFTWARE ENG, V12, P1128, DOI 10.1109/TSE.1986.6313008
   WEYUKER EJ, 1993, IEEE T SOFTWARE ENG, V19, P912, DOI 10.1109/32.241773
   Wing J. M., 1991, Proceedings of the Sixth International Workshop on Software Specification and Design (Cat. No.91TH0388-9), P120, DOI 10.1109/IWSSD.1991.213069
   WONG WE, 1995, PROC INT CONF SOFTW, P41, DOI 10.1145/225014.225018
   Woodruff A., 1995, Proceedings. 11th IEEE International Symposium on Visual Languages (Cat. No.95TB8105), P187, DOI 10.1109/VL.1995.520808
   Yang SR, 1997, J VISUAL LANG COMPUT, V8, P563, DOI 10.1006/jvlc.1997.0047
   ZHANG DQ, 1997, P 13 IEEE S VIS LANG, P284
NR 52
TC 0
Z9 0
U1 0
U2 0
PU ASSOC COMPUTING MACHINERY
PI NEW YORK
PA 2 PENN PLAZA, STE 701, NEW YORK, NY 10121-0701 USA
SN 1049-331X
EI 1557-7392
J9 ACM T SOFTW ENG METH
JI ACM Trans. Softw. Eng. Methodol.
PD SEP
PY 2008
VL 18
IS 1
AR 1
DI 10.1145/1391984.1391985
PG 40
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 394NX
UT WOS:000262454500001
DA 2024-07-18
ER

PT J
AU Wassermann, G
   Gould, C
   Su, Z
   Devanbu, P
AF Wassermann, Gary
   Gould, Carl
   Su, Zhendong
   Devanbu, Premkumar
TI Static checking of dynamically generated queries in database
   applications
SO ACM TRANSACTIONS ON SOFTWARE ENGINEERING AND METHODOLOGY
LA English
DT Article
DE algorithms; languages; reliability; verification; static checking; JDBC;
   database queries; context-free language reachability
AB Many data-intensive applications dynamically construct queries in response to client requests and execute them. Java servlets, for example, can create strings that represent SQL queries and then send the queries, using JDBC, to a database server for execution. The servlet programmer enjoys static checking via Java's strong type system. However, the Java type system does little to check for possible errors in the dynamically generated SQL query strings. Thus, a type error in a generated selection query (e.g., comparing a string attribute with an integer) can result in an SQL runtime exception. Currently, such defects must be rooted out through careful testing, or (worse) might be found by customers at runtime. In this article, we present a sound, static program analysis technique to verify that dynamically generated query strings do not contain type errors. We describe our analysis technique and provide soundness results for our static analysis algorithm. We also describe the details of a prototype tool based on the algorithm and present several illustrative defects found in senior software-engineering student-team projects, online tutorial examples, and a real-world purchase order system written by one of the authors.
C1 Univ Calif Davis, Dept Comp Sci, Davis, CA 95616 USA.
C3 University of California System; University of California Davis
RP Wassermann, G (corresponding author), Univ Calif Davis, Dept Comp Sci, Davis, CA 95616 USA.
EM wassermg@cs.ucdavis.edu; gould@cs.ucdavis.edu; su@cs.ucdavis.edu;
   devanbu@cs.ucdavis.edu
RI /AAZ-7265-2020
OI Su, Zhendong/0000-0002-2970-1391; Devanbu, Prem/0000-0002-4346-5276
CR Aho A.V., 1986, COMPILERS PRINCIPLES
   Amadio Roberto M., 1991, P 18 ANN ACM S PRINC, P104, DOI DOI 10.1145/99583.99600
   ANDERSEN LO, 1994, 9419 DIKU
   Brabrand C, 2001, ACM SIGPLAN NOTICES, P38
   BRABRAND C., 2002, ACM T INTERNET TECHN, V2, P79
   Choi TH, 2006, LECT NOTES COMPUT SC, V4279, P374
   Christensen AS, 2003, LECT NOTES COMPUT SC, V2694, P1
   Cook W. R., 2005, P 27 INT C SOFTW ENG
   COOK WR, 2005, PROGRAMMING LANGUAGE
   GUYOT J, 1998, BNF INDEX SQL QURACL
   Halfond W.G., 2005, Combining Static Analysis Runtime Monitoring to Counter SQL-Injection Attacks
   Heintze Nevin., 2001, PLDI 01, P254
   Hopcroft J.E., 1979, Introduction to Automata Theory, Languages, and Computation
   KAM JB, 1976, J ACM, V23, P158, DOI 10.1145/321921.321938
   KAPFHAMMER GM, 2003, P 9 EUR SOFTW ENG C, P98
   Kildall G. A., 1973, Conference Record of ACM Symposium on Principles of Programming Languages, P194
   Kohlbecker Eugene., 1986, P 1986 ACM C LISP FU, P151
   Melski D., 1997, Proceedings of the ACM SIGPLAN Symposium on Partial Evaluation and Semantics-Based Program Manipulation, PEPM '97, P74, DOI 10.1145/258993.259006
   Reps ThomasW., 1995, P ACM S PRINCIPLES P, P49
   SANDHOLM A, 2000, P 27 ANN ACM SIGPLAN, P290
   SHIVERS O, 1988, P ACM SIGPLAN C PROG, P164, DOI DOI 10.1145/53990.54007
   Su Z., 2000, Proceedings of the 27th ACM SIGPLAN-SIGACT symposium on Principles of programming languages (POPL), P81, DOI [10.1145/325694.325706, DOI 10.1145/325694.325706]
   *SUN, 2003, JAV DAT OBJ
   TAHA, 1997, P ACM SIGPLAN S PART, P203
   Vallee-Rai R., 1999, P IBM CTR ADV STUD C
   Viega J., 2001, BUILDING SECURE SOFT
   Wassermann Gary., 2004, P FSE WORKSHOP SPECI, P70
   WEISE D, 1993, P C PROGR LANG DES I, P156, DOI DOI 10.1145/155090.155105
   YELLIN DM, 1993, ACTA INFORM, V30, P369, DOI 10.1007/BF01209711
NR 29
TC 31
Z9 36
U1 0
U2 6
PU ASSOC COMPUTING MACHINERY
PI NEW YORK
PA 2 PENN PLAZA, STE 701, NEW YORK, NY 10121-0701 USA
SN 1049-331X
EI 1557-7392
J9 ACM T SOFTW ENG METH
JI ACM Trans. Softw. Eng. Methodol.
PY 2007
VL 16
IS 4
AR 14
DI 10.1145/1276933.1276935
PG 27
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 217ZF
UT WOS:000249985100002
DA 2024-07-18
ER

EF