FN Clarivate Analytics Web of Science
VR 1.0
PT J
AU Calinescu, R
   Imrie, C
   Mangal, R
   Rodrigues, GN
   Pasareanu, C
   Santana, MA
   Vazquez, G
AF Calinescu, Radu
   Imrie, Calum
   Mangal, Ravi
   Rodrigues, Genaina Nunes
   Pasareanu, Corina
   Santana, Misael Alpizar
   Vazquez, Gricel
TI Controller Synthesis for Autonomous Systems With Deep-Learning
   Perception Components
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Discrete-event controller synthesis; Markov model; deep neural network;
   uncertainty quantification; neuro-symbolic AI
ID VERIFICATION; MODELS
AB We present DeepDECS, a new method for the synthesis of correct-by-construction software controllers for autonomous systems that use deep neural network (DNN) classifiers for the perception step of their decision-making processes. Despite major advances in deep learning in recent years, providing safety guarantees for these systems remains very challenging. Our controller synthesis method addresses this challenge by integrating DNN verification with the synthesis of verified Markov models. The synthesised models correspond to discrete-event software controllers guaranteed to satisfy the safety, dependability and performance requirements of the autonomous system, and to be Pareto optimal with respect to a set of optimisation objectives. We evaluate the method in simulation by using it to synthesise controllers for mobile-robot collision limitation, and for maintaining driver attentiveness in shared-control autonomous driving.
C1 [Calinescu, Radu; Imrie, Calum; Santana, Misael Alpizar; Vazquez, Gricel] Univ York, Dept Comp Sci, York YO10 5GH, England.
   [Mangal, Ravi; Pasareanu, Corina] Carnegie Mellon Univ, Moffett Field, CA 94035 USA.
   [Rodrigues, Genaina Nunes] Univ Brasilia, Dept Comp Sci, BR-70910900 Brasilia, Brazil.
C3 University of York - UK; Carnegie Mellon University; Universidade de
   Brasilia
RP Calinescu, R (corresponding author), Univ York, Dept Comp Sci, York YO10 5GH, England.
EM radu.calinescu@york.ac.uk; genaina@unb.br
OI Vazquez Flores, Gricel/0000-0003-4886-5567
FU EPSRC
FX No Statement Available
CR Andova S, 2003, LECT NOTES COMPUT SC, V2791, P88
   Arapostathis A, 2005, IEEE T AUTOM SCI ENG, V2, P333, DOI 10.1109/TASE.2005.853392
   Ashmore R, 2021, ACM COMPUT SURV, V54, DOI 10.1145/3453444
   Assuring Autonomy International Programme, 2022, Safe-SCAD: Safety of shared control in autonomous driving
   Badithela A, 2021, IEEE DECIS CONTR P, P564, DOI 10.1109/CDC45484.2021.9683611
   Baier C, 2004, INT FED INFO PROC, V155, P493
   Berkenkamp F, 2017, ADV NEUR IN, V30
   Bianco A., 1995, Foundations of Software Technology and Theoretical Computer Science. 15th Conference. Proceedings, P499
   Brix C, 2023, INT J SOFTW TOOLS TE, V25, P329, DOI 10.1007/s10009-023-00703-4
   Brunke L, 2022, ANNU REV CONTR ROBOT, V5, P411, DOI 10.1146/annurev-control-042920-020211
   Caldas RD, 2020, I W S E ADAP SM SYS, P9, DOI 10.1145/3387939.3391595
   Calinescu R, 2021, 2021 INTERNATIONAL SYMPOSIUM ON SOFTWARE ENGINEERING FOR ADAPTIVE AND SELF-MANAGING SYSTEMS (SEAMS 2021), P90, DOI 10.1109/SEAMS51251.2021.00021
   Calinescu R, 2020, 2020 IEEE INTERNATIONAL CONFERENCE ON AUTONOMIC COMPUTING AND SELF-ORGANIZING SYSTEMS (ACSOS 2020), P242, DOI 10.1109/ACSOS49614.2020.00047
   Calinescu R, 2018, J SYST SOFTWARE, V143, P140, DOI 10.1016/j.jss.2018.05.013
   Calinescu R, 2013, IEEE INT CONF AUTOM, P734, DOI 10.1109/ASE.2013.6693145
   Cámara J, 2022, SOFTW SYST MODEL, V21, P1277, DOI 10.1007/s10270-022-01037-6
   Chatterjee K, 2016, ARTIF INTELL, V234, P26, DOI 10.1016/j.artint.2016.01.007
   Chatterjee K, 2015, IEEE INT CONF ROBOT, P325, DOI 10.1109/ICRA.2015.7139019
   Chen AI, 2020, NAT MACH INTELL, V2, P104, DOI 10.1038/s42256-020-0148-7
   Chen T, 2012, LECT NOTES COMPUT SC, V7214, P315, DOI 10.1007/978-3-642-28756-5_22
   Chollet F., 2021, Deep Learning with Python, V2nd ed.
   Cleaveland M, 2022, ACM IEEE INT CONF CY, P92, DOI 10.1109/ICCPS54341.2022.00015
   D'Silva V, 2008, IEEE T COMPUT AID D, V27, P1165, DOI 10.1109/TCAD.2008.923410
   Daws C, 2005, LECT NOTES COMPUT SC, V3407, P280
   Dehnert C, 2017, LECT NOTES COMPUT SC, V10427, P592, DOI 10.1007/978-3-319-63390-9_31
   Ehlers R, 2017, LECT NOTES COMPUT SC, V10482, P269, DOI 10.1007/978-3-319-68167-2_19
   Filieri A, 2015, 2015 IEEE/ACM 10TH INTERNATIONAL SYMPOSIUM ON SOFTWARE ENGINEERING FOR ADAPTIVE AND SELF-MANAGING SYSTEMS, P71, DOI 10.1109/SEAMS.2015.12
   Gallotti S, 2008, LECT NOTES COMPUT SC, V5281, P119, DOI 10.1007/978-3-540-87879-7_8
   García J, 2015, J MACH LEARN RES, V16, P1437
   Gerasimou S, 2018, AUTOMAT SOFTW ENG, V25, P785, DOI 10.1007/s10515-018-0235-8
   Gerasimou S, 2015, IEEE INT CONF AUTOM, P319, DOI 10.1109/ASE.2015.22
   github, DeepDECS project website
   Gleirscher M., 2022, The 21st Century Industrial Robot: When Tools Become Collaborators. Intelligent Systems, Control and Automation:Science and Engineering, P191
   Gleirscher M, 2022, SCI COMPUT PROGRAM, V218, DOI 10.1016/j.scico.2022.102809
   Gleirscher M, 2020, IEEE INT C ENG COMP, P83, DOI 10.1109/ICECCS51672.2020.00017
   Gopinath D, 2018, LECT NOTES COMPUT SC, V11138, P3, DOI 10.1007/978-3-030-01090-4_1
   Grigorescu S, 2020, J FIELD ROBOT, V37, P362, DOI 10.1002/rob.21918
   Grinstead C.M., 1997, Introduction to Probability, Vsecond
   Guo CA, 2017, PR MACH LEARN RES, V70
   Habeeb P, 2023, IEEE T COMPUT AID D, V42, P3450, DOI 10.1109/TCAD.2023.3240131
   Hansson H., 1994, Formal Aspects of Computing, V6, P512, DOI 10.1007/BF01211866
   Hensel C, 2022, INT J SOFTW TOOLS TE, V24, P589, DOI 10.1007/s10009-021-00633-z
   Hezavehi SM, 2021, ACM T AUTON ADAP SYS, V15, DOI 10.1145/3487921
   Hsieh C, 2022, IEEE T COMPUT AID D, V41, P4205, DOI 10.1109/TCAD.2022.3197508
   Huang XW, 2017, LECT NOTES COMPUT SC, V10426, P3, DOI 10.1007/978-3-319-63387-9_1
   Ivanov R, 2021, LECT NOTES COMPUT SC, V12759, P249, DOI 10.1007/978-3-030-81685-8_11
   Ivanov R, 2021, ACM T EMBED COMPUT S, V20, DOI [10.1145/3419742, 10.1145/3477023]
   Ivanov R, 2019, PROCEEDINGS OF THE 2019 22ND ACM INTERNATIONAL CONFERENCE ON HYBRID SYSTEMS: COMPUTATION AND CONTROL (HSCC '19), P169, DOI 10.1145/3302504.3311806
   Jansen DN, 2008, LECT NOTES COMPUT SC, V4899, P69
   Jha S, 2018, J AUTOM REASONING, V60, P43, DOI 10.1007/s10817-017-9413-9
   Johnson M. A., 2005, PID control
   Joseph VR, 2022, STAT ANAL DATA MIN, V15, P531, DOI 10.1002/sam.11583
   Julian KD, 2021, J GUID CONTROL DYNAM, V44, P1132, DOI 10.2514/1.G005233
   Julian KD, 2019, J GUID CONTROL DYNAM, V42, P598, DOI 10.2514/1.G003724
   Katz G, 2019, LECT NOTES COMPUT SC, V11561, P443, DOI 10.1007/978-3-030-25540-4_26
   Katz SM, 2022, J AEROSP INFORM SYST, DOI 10.2514/1.I011071
   Keegan M, 2022, IEEE T SOFTWARE ENG, V48, P1965, DOI 10.1109/TSE.2020.3044532
   Kingma D. P., 2014, arXiv
   Kiureghian AD, 2009, STRUCT SAF, V31, P105, DOI 10.1016/j.strusafe.2008.06.020
   Küppers F, 2020, IEEE COMPUT SOC CONF, P1322, DOI 10.1109/CVPRW50498.2020.00171
   Kwiatkowska Marta, 2011, Computer Aided Verification. Proceedings 23rd International Conference, CAV 2011, P585, DOI 10.1007/978-3-642-22110-1_47
   Kwiatkowska M, 2007, CONTROL ENG PRACT, V15, P1427, DOI 10.1016/j.conengprac.2006.07.003
   Leino K., 2021, P MACHINE LEARNING R, V139, P6212
   Marvi Z, 2021, INT J ROBUST NONLIN, V31, P1923, DOI 10.1002/rnc.5132
   Michelmore R, 2020, IEEE INT CONF ROBOT, P7344, DOI [10.1109/icra40945.2020.9196844, 10.1109/ICRA40945.2020.9196844]
   Mnih V, 2015, NATURE, V518, P529, DOI 10.1038/nature14236
   Moody J., 1998, Supervisory Control of Discrete Event Systems Using Petri Nets, V8
   Müller MN, 2023, Arxiv, DOI arXiv:2212.10376
   Norman G, 2017, REAL-TIME SYST, V53, P354, DOI 10.1007/s11241-017-9269-4
   Ozbayoglu Ahmet Murat, 2020, Applied Soft Computing, V93, DOI 10.1016/j.asoc.2020.106384
   Pakdamanian E., 2021, ARXIV PREPRINT ARXIV, P1, DOI 10.1145/3411764.3445563
   Pasareanu Corina S., 2023, Computer Aided Verification: 35th International Conference, CAV 2023, Proceedings. Lecture Notes in Computer Science (13964), P289, DOI 10.1007/978-3-031-37706-8_15
   Paterson C, 2021, THIRD IEEE INTERNATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE TESTING (AITEST 2021), P9, DOI 10.1109/AITEST52744.2021.00012
   RAMADGE PJG, 1989, P IEEE, V77, P81, DOI 10.1109/5.21072
   SAE International, 2018, SAE International Stan- dard J3016-202104
   Santa Cruz U, 2022, LECT NOTES COMPUT SC, V13260, P213, DOI 10.1007/978-3-031-06773-0_11
   Singh G, 2019, P ACM PROGRAM LANG, V3, DOI 10.1145/3290354
   Solano GF, 2019, 2019 IEEE/ACM 14TH INTERNATIONAL SYMPOSIUM ON SOFTWARE ENGINEERING FOR ADAPTIVE AND SELF-MANAGING SYSTEMS (SEAMS 2019), P89, DOI 10.1109/SEAMS.2019.00020
   Stevens E, 2020, Deep Learning with PyTorch
   Svorenová M, 2016, EUR J CONTROL, V30, P15, DOI 10.1016/j.ejcon.2016.04.009
   Tabernik D, 2020, IEEE T INTELL TRANSP, V21, P1427, DOI 10.1109/TITS.2019.2913588
   undocs, ECE/TRANS/WP.29/2020/81-United Nations Regulation on Uniform provisions concerning the approval of vehicles with regard to Automated Lane Keeping Systems
   Veldhuizen V., 1999, Multiobjective evolutionary algorithms: classifications, analyses, and new innovations
   Xu QY, 2018, INT J FUZZY SYST, V20, P687, DOI 10.1007/s40815-017-0393-z
   Zitzler E, 1998, LECT NOTES COMPUT SC, V1498, P292, DOI 10.1007/BFb0056872
   Zitzler E, 2007, LECT NOTES COMPUT SC, V4403, P862
NR 86
TC 0
Z9 0
U1 0
U2 0
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUN
PY 2024
VL 50
IS 6
BP 1374
EP 1395
DI 10.1109/TSE.2024.3385378
PG 22
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA UL2G2
UT WOS:001248142900002
OA Green Accepted, hybrid
DA 2024-08-05
ER

PT J
AU Hu, Q
   Guo, YJ
   Xie, XF
   Cordy, M
   Ma, L
   Papadakis, M
   Le Traon, Y
AF Hu, Qiang
   Guo, Yuejun
   Xie, Xiaofei
   Cordy, Maxime
   Ma, Lei
   Papadakis, Mike
   Le Traon, Yves
TI Active Code Learning: Benchmarking Sample-Efficient Training of Code
   Models
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Codes; Data models; Task analysis; Training; Feature extraction;
   Training data; Labeling; Active learning; machine learning for code;
   benchmark; empirical analysis
AB The costly human effort required to prepare the training data of machine learning (ML) models hinders their practical development and usage in software engineering (ML4Code), especially for those with limited budgets. Therefore, efficiently training models of code with less human effort has become an emergent problem. Active learning is such a technique to address this issue that allows developers to train a model with reduced data while producing models with desired performance, which has been well studied in computer vision and natural language processing domains. Unfortunately, there is no such work that explores the effectiveness of active learning for code models. In this paper, we bridge this gap by building the first benchmark to study this critical problem - active code learning. Specifically, we collect 11 acquisition functions (which are used for data selection in active learning) from existing works and adapt them for code-related tasks. Then, we conduct an empirical study to check whether these acquisition functions maintain performance for code data. The results demonstrate that feature selection highly affects active learning and using output vectors to select data is the best choice. For the code summarization task, active code learning is ineffective which produces models with over a 29.64% gap compared to the expected performance. Furthermore, we explore future directions of active code learning with an exploratory study. We propose to replace distance calculation methods with evaluation metrics and find a correlation between these evaluation-based distance methods and the performance of code models.
C1 [Hu, Qiang; Cordy, Maxime; Papadakis, Mike; Le Traon, Yves] Univ Luxembourg, L-1359 Belval, Luxembourg.
   [Guo, Yuejun] Luxembourg Inst Sci & Technol, L-1359 Belval, Luxembourg.
   [Xie, Xiaofei; Ma, Lei] Univ Tokyo, Tokyo 1130033, Japan.
   [Ma, Lei] Univ Alberta, Edmonton, AB T6G 2R3, Canada.
C3 University of Luxembourg; Luxembourg Institute of Science & Technology;
   University of Tokyo; University of Alberta
RP Ma, L (corresponding author), Univ Tokyo, Tokyo 1130033, Japan.
EM qianghu0515@gmail.com; yuejun.guo@list.lu; xiaofei.xfxie@gmail.com;
   maxime.cordy@uni.lu; ma.lei@acm.org; mike.papadakis@uni.lu;
   yves.letraon@uni.lu
RI LE TRAON, Yves/T-2911-2019; Guo, Yuejun/F-2873-2016
OI Guo, Yuejun/0000-0002-5535-2420; LE TRAON, Yves/0000-0002-1045-4861;
   Papadakis, Mike/0000-0003-1852-2547; , Xiaofei/0000-0002-1288-6502; Hu,
   Qiang/0000-0002-8251-1669
FU European Union#x2019;s Horizon Research and Innovation Programme
FX No Statement Available
CR Allamanis M, 2018, ACM COMPUT SURV, V51, DOI 10.1145/3212695
   [Anonymous], Active code learning
   Ash Jordan T., 2020, 8 INT C LEARN REPR I
   Berezov M., P 13 WORKSH PAR PROG
   Chirkova N, 2021, PROCEEDINGS OF THE 29TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '21), P703, DOI 10.1145/3468264.3468611
   Deng YL, 2023, Arxiv, DOI [arXiv:2304.02014, DOI 10.48550/ARXIV.2304.02014]
   Devlin J, 2019, 2019 CONFERENCE OF THE NORTH AMERICAN CHAPTER OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS: HUMAN LANGUAGE TECHNOLOGIES (NAACL HLT 2019), VOL. 1, P4171
   Eghbali A, 2022, PROC IEEE ACM INT C, P341, DOI [10.1145/3510454.3528648, 10.1109/ICSE-Companion55297.2022.9793747]
   Feng ZY, 2020, FINDINGS OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, EMNLP 2020, P1536
   Gal Y, 2017, PR MACH LEARN RES, V70
   Guo DY, 2021, Arxiv, DOI arXiv:2009.08366
   Heilbron FC, 2018, LECT NOTES COMPUT SC, V11215, P212, DOI 10.1007/978-3-030-01252-6_13
   Hu Q, 2023, New Ideas and Emergi, P1, DOI 10.1109/ICSE-NIER58687.2023.00007
   Hu Q, 2022, ACM T SOFTW ENG METH, V31, DOI 10.1145/3511598
   Hu Q, 2021, 2021 36TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING ASE 2021, P917, DOI 10.1109/ASE51524.2021.9678672
   Jiang WX, 2023, PROC INT CONF SOFTW, P2463, DOI 10.1109/ICSE48619.2023.00206
   Liu H, 2005, IEEE T KNOWL DATA EN, V17, P491, DOI 10.1109/TKDE.2005.66
   Liu YH, 2019, Arxiv, DOI [arXiv:1907.11692, DOI 10.48550/ARXIV.1907.11692]
   Lu S, 2021, Arxiv, DOI arXiv:2102.04664
   Ma W, 2024, Arxiv, DOI arXiv:2305.12138
   Margatina K, 2021, 2021 CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING (EMNLP 2021), P650
   Mastropaolo A, 2023, PROC INT CONF SOFTW, P2149, DOI 10.1109/ICSE48619.2023.00181
   Moskovitch R, 2009, LECT NOTES COMPUT SC, V5456, P74, DOI 10.1007/978-3-642-01718-6_6
   Nie PY, 2022, PROCEEDINGS OF THE 60TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (ACL 2022), VOL 1: (LONG PAPERS), P4936
   Nissim N, 2016, KNOWL INF SYST, V49, P795, DOI 10.1007/s10115-016-0918-z
   Nissim N, 2014, EXPERT SYST APPL, V41, P5843, DOI 10.1016/j.eswa.2014.02.053
   Niu CG, 2023, PROC INT CONF SOFTW, P2136, DOI 10.1109/ICSE48619.2023.00180
   OWEN DB, 1965, J AM STAT ASSOC, V60, P320, DOI 10.2307/2283156
   Pereira-Santos D, 2019, NEUROCOMPUTING, V326, P15, DOI 10.1016/j.neucom.2017.05.105
   Raffel C, 2020, J MACH LEARN RES, V21
   Ramirez-Loaiza ME, 2017, DATA MIN KNOWL DISC, V31, P287, DOI 10.1007/s10618-016-0469-7
   Samoaa P, 2023, Arxiv, DOI [arXiv:2304.13032, DOI 10.48550/ARXIV.2304.13032]
   Sener O., 2018, INT C LEARNING REPRE, P1
   Settles B., 2009, CS Tech. Rep. TR1648
   Settles B., 2008, P 2008 C EMP METH NA, P1070
   Siddhant A, 2018, 2018 CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING (EMNLP 2018), P2904
   Steenhoek B, 2023, PROC INT CONF SOFTW, P2237, DOI 10.1109/ICSE48619.2023.00188
   Tian HY, 2023, Arxiv, DOI [arXiv:2304.11938, DOI 10.48550/ARXIV.2304.11938]
   Tian Z, 2023, IEEE INT CONF AUTOM, P850, DOI 10.1109/ASE56229.2023.00149
   Tihanyi N, 2024, Arxiv, DOI [arXiv:2305.14752, 10.48550/arXiv.2305.14752]
   Wallach r., 2019, about us, V32
   Wan Y, 2018, IEEE INT CONF AUTOM, P397, DOI 10.1145/3238147.3238206
   Wang D, 2014, IEEE IJCNN, P112, DOI 10.1109/IJCNN.2014.6889457
   Wang Y., P C EMP METH NAT LAN
   Weiss M, 2022, PROCEEDINGS OF THE 31ST ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, ISSTA 2022, P139, DOI 10.1145/3533767.3534375
   Wolf T, 2020, PROCEEDINGS OF THE 2020 CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING: SYSTEM DEMONSTRATIONS, P38
   Wu DR, 2019, INFORM SCIENCES, V474, P90, DOI 10.1016/j.ins.2018.09.060
   Xia CS, 2023, Arxiv, DOI arXiv:2304.00385
   Yang Feng, 2020, ISSTA '20: Proceedings of the 29th ACM SIGSOFT International Symposium on Software Testing and Analysis, P177, DOI 10.1145/3395363.3397357
   Yang Z, 2022, PROC INT CONF SOFTW, P1482, DOI 10.1145/3510003.3510146
   Yu Z, 2018, EMPIR SOFTW ENG, V23, P3161, DOI 10.1007/s10664-017-9587-0
   Zhou YQ, 2019, ADV NEUR IN, V32
NR 52
TC 0
Z9 0
U1 1
U2 1
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAY
PY 2024
VL 50
IS 5
BP 1080
EP 1095
DI 10.1109/TSE.2024.3376964
PG 16
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA QX5T5
UT WOS:001224187300011
OA hybrid, Green Submitted
DA 2024-08-05
ER

PT J
AU Türker, UC
   Hierons, RM
   El-Fakih, K
   Mousavi, MR
   Tyukin, IY
AF Turker, Uraz Cengiz
   Hierons, Robert M.
   El-Fakih, Khaled
   Mousavi, Mohammad Reza
   Tyukin, Ivan Y.
TI Accelerating Finite State Machine-Based Testing Using Reinforcement
   Learning
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Finite state machines; reset sequences; state identification sequences;
   reinforcement learning; Q-value function; software
   engineering/software/program verification; software engineering/test
   design; software engineering/testing and debugging
ID RESET SEQUENCES; ALGORITHMS; IDENTIFICATION; AUTOMATA; SETS
AB Testing is a crucial phase in the development of complex systems, and this has led to interest in automated test generation techniques based on state-based models. Many approaches use models that are types of finite state machine (FSM). Corresponding test generation algorithms typically require that certain test components, such as reset sequences (RSs) and preset distinguishing sequences (PDSs), have been produced for the FSM specification. Unfortunately, the generation of RSs and PDSs is computationally expensive, and this affects the scalability of such FSM-based test generation algorithms. This paper addresses this scalability problem by introducing a reinforcement learning framework: the Q-Graph framework for MBT. We show how this framework can be used in the generation of RSs and PDSs and consider both (potentially partial) timed and untimed models. The proposed approach was evaluated using three types of FSMs: randomly generated FSMs, FSMs from a benchmark, and an FSM of an Engine Status Manager for a printer. In experiments, the proposed approach was much faster and used much less memory than the state-of-the-art methods in computing PDSs and RSs.
C1 [Turker, Uraz Cengiz] Univ Lancaster, Sch Comp & Commun, Lancaster LA1 4YW, England.
   [Hierons, Robert M.] Univ Sheffield, Dept Comp Sci, Sheffield S10 2AH, England.
   [El-Fakih, Khaled] Amer Univ Sharjah, Dept Comp Sci & Engn, Sharjah 26666, U Arab Emirates.
   [Mousavi, Mohammad Reza] Kings Coll London, Dept Informat, London WC2R 2LS, England.
   [Tyukin, Ivan Y.] Kings Coll London, Dept Math, London WC2R 2LS, England.
C3 Lancaster University; University of Sheffield; American University of
   Sharjah; University of London; King's College London; University of
   London; King's College London
RP Türker, UC (corresponding author), Univ Lancaster, Sch Comp & Commun, Lancaster LA1 4YW, England.
EM u.turker@lancaster.ac.uk
OI Tyukin, Ivan/0000-0002-7359-7966; Hierons, Robert/0000-0002-4771-1446;
   Turker, Uraz/0000-0001-5976-1945; Mousavi, Mohammad
   Reza/0000-0002-4869-6794
FU UKRI Trustworthy Autonomous Systems Node in Verifiability
FX No Statement Available
CR Almulla H., 2021, arXiv
   ANGLUIN D, 1987, INFORM COMPUT, V75, P87, DOI 10.1016/0890-5401(87)90052-6
   [Anonymous], 1992, RFC1350
   [Anonymous], 1991, IJCAI
   [Anonymous], 1992, RFC793
   Bengtsson J., 1996, Hybrid Systems III. Verification and Control, P232, DOI 10.1007/BFb0020949
   Bhanpurawala A., 2022, arXiv
   BOUTE RT, 1974, IEEE T COMPUT, VC 23, P874, DOI 10.1109/T-C.1974.224043
   Boyan J. A., 1995, Advances in Neural Information Processing Systems 7, P369
   Bresolin D, 2021, FORM METHOD SYST DES, V59, P77, DOI 10.1007/s10703-022-00396-6
   Chen W. H., 2011, PROC FORMAL TECHN NE, P285
   CHOW TS, 1978, IEEE T SOFTWARE ENG, V4, P178, DOI 10.1109/TSE.1978.231496
   Cohen J., 1988, Statistical power analysis for the behavioral sciences
   Dorofeeva R, 2005, LECT NOTES COMPUT SC, V3731, P204
   Elghadyry B, 2021, J BIG DATA-GER, V8, DOI 10.1186/s40537-020-00397-4
   EPPSTEIN D, 1990, SIAM J COMPUT, V19, P500, DOI 10.1137/0219033
   Fiterau-Brostean P., 2023, PROC NDSS
   FUJIWARA S, 1991, IEEE T SOFTWARE ENG, V17, P591, DOI 10.1109/32.87284
   Gazdag Z, 2009, INFORM PROCESS LETT, V109, P986, DOI 10.1016/j.ipl.2009.05.007
   Gill A., 1962, INTRO THEORY FINITE
   Goodfellow I, 2016, ADAPT COMPUT MACH LE, P1
   Grieskamp W., 2002, Software Engineering Notes, V27, P112, DOI 10.1145/566171.566190
   Guni‡en C, 2013, Arxiv, DOI arXiv:1312.6146
   Güniçen C, 2014, FORM ASP COMPUT, V26, P1153, DOI 10.1007/s00165-014-0297-8
   Güniçen C, 2012, COMPUTER AND INFORMATION SCIENCES II, P487, DOI 10.1007/978-1-4471-2155-8_62
   Hierons RM, 2006, IEEE T COMPUT, V55, P618, DOI 10.1109/TC.2006.80
   Hierons RM, 2004, INFORM PROCESS LETT, V90, P287, DOI 10.1016/j.ipl.2004.03.003
   Hierons RM, 2017, ACM T SOFTW ENG METH, V26, DOI 10.1145/3051121
   Hierons RM, 2016, IEEE T SOFTWARE ENG, V42, P1077, DOI 10.1109/TSE.2016.2539964
   Hierons RM, 2014, LECT NOTES COMPUT SC, V8430, P62, DOI 10.1007/978-3-319-06200-6_5
   Hierons RM, 2009, SEFM 2009: SEVENTH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING AND FORMAL METHODS, P157, DOI 10.1109/SEFM.2009.12
   Hierons RM, 2009, J LOGIC ALGEBR PROGR, V78, P98, DOI 10.1016/j.jlap.2008.06.001
   Hogrefe D., 1992, Tech. Rep. IAM- 91-012
   Ipate F, 2012, J COMPUT SYST SCI, V78, P221, DOI 10.1016/j.jcss.2011.04.002
   Jordan MI, 2015, SCIENCE, V349, P255, DOI 10.1126/science.aaa8415
   Jourdan GV, 2015, INFORM PROCESS LETT, V115, P532, DOI 10.1016/j.ipl.2015.01.002
   Jourdan GV, 2010, FORM ASP COMPUT, V22, P667, DOI 10.1007/s00165-009-0135-6
   Karahoda S, 2020, J PARALLEL DISTR COM, V140, P13, DOI 10.1016/j.jpdc.2020.02.009
   Kisielewicz A., 2013, Comput. Combinatorics, V7936, P182
   Kohavi Z., 1978, Switching and Finite State Automata Theory
   Kudlacik R, 2012, EXPERT SYST APPL, V39, P11746, DOI 10.1016/j.eswa.2012.04.079
   Lagoudakis M. G., 2010, Value Function Approximation, P1011
   Lee D, 1996, P IEEE, V84, P1090, DOI 10.1109/5.533956
   LEE D, 1994, IEEE T COMPUT, V43, P306, DOI 10.1109/12.272431
   Lukac M, 2021, INT SYM MVL, P113, DOI 10.1109/ISMVL51352.2021.00028
   Merayo MG, 2008, COMPUT NETW, V52, P432, DOI 10.1016/j.comnet.2007.10.002
   Mnih V, 2015, NATURE, V518, P529, DOI 10.1038/nature14236
   Muskardin E, 2022, INNOV SYST SOFTW ENG, V18, P417, DOI 10.1007/s11334-022-00449-3
   Damasceno CDN, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-020-09912-w
   Neider Daniel, 2019, Models, Mindsets, Meta. The What, the How, and the Why Not? Essays Dedicated to Bernhard Steffen on the Occasion of His 60th Birthday. Lecture Notes in Computer Science (LNCS 11200), P390, DOI 10.1007/978-3-030-22348-9_23
   NVidia, Producer of the GPU cards used in experiments.
   Pan ZX, 2020, ICCAD-IEEE ACM INT, DOI 10.1145/3400302.3415710
   Pan ZX, 2021, ASIA S PACIF DES AUT, P408, DOI 10.1145/3394885.3431595
   Petrenko A, 2005, IEEE T COMPUT, V54, P1154, DOI 10.1109/TC.2005.152
   Petrenko A, 2015, COMPUT J, V58, P1656, DOI 10.1093/comjnl/bxu113
   Qin X., 2020, Automatic testing and falsification with dynamically constrained reinforcement learning
   Rafiq O, 2003, J SUPERCOMPUT, V24, P203, DOI 10.1023/A:1021759127956
   Raz R., 1997, 29 ANN ACM S THEOR C, P475, DOI 10.1145/258533.258641
   Reichstaller A, 2016, LECT NOTES COMPUT SC, V9976, P52, DOI 10.1007/978-3-319-47443-4_4
   Roman A, 2015, EXPERT SYST APPL, V42, P9512, DOI 10.1016/j.eswa.2015.07.071
   Roman A, 2005, PROC WRLD ACAD SCI E, V7, P13
   Roman A, 2009, LECT NOTES COMPUT SC, V5457, P684, DOI 10.1007/978-3-642-00982-2_58
   Roman A, 2009, APPL MATH COMPUT, V209, P125, DOI 10.1016/j.amc.2008.06.019
   Saraç NE, 2021, EXPERT SYST APPL, V167, DOI 10.1016/j.eswa.2020.114203
   Simao A, 2012, SOFTW TEST VERIF REL, V22, P435, DOI 10.1002/stvr.452
   Smeenk Wouter, 2015, Formal Methods and Software Engineering. 17th International Conference on Formal Engineering Methods (ICFEM 2015). Proceedings: LNCS 9407, P67, DOI 10.1007/978-3-319-25423-4_5
   Song B, 2008, 2008 THE INTERNATIONAL CONFERENCE ON INFORMATION NETWORKING, P98
   Steffen B, 2011, LECT NOTES COMPUT SC, V6659, P256, DOI 10.1007/978-3-642-21455-4_8
   Sutton RS, 2018, ADAPT COMPUT MACH LE, P1
   Teetor P., 2011, R COOKBOOK
   Trahtman A. N., 2011, Fundamentals of Computation Theory. Proceedings 18th International Symposium, FCT 2011, P173, DOI 10.1007/978-3-642-22953-4_15
   Turker UC, 2021, 2021 36TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING ASE 2021, P368, DOI 10.1109/ASE51524.2021.9678566
   Türker UC, 2019, TURK J ELECTR ENG CO, V27, P3544, DOI 10.3906/elk-1809-1
   Türker UC, 2016, INFORM SOFTWARE TECH, V74, P69, DOI 10.1016/j.infsof.2016.02.001
   Türker UC, 2015, INT J FOUND COMPUT S, V26, P99, DOI 10.1142/S0129054115500057
   Tvardovskii A, 2024, SCI COMPUT PROGRAM, V233, DOI 10.1016/j.scico.2023.103053
   Tvardovskii A, 2018, LECT NOTES COMPUT SC, V11146, P149, DOI 10.1007/978-3-319-99927-2_13
   Vasilevskii M. P., 1973, Cybernetics, V9, P653, DOI 10.1007/BF01068590
   Veanes M, 2006, LECT NOTES COMPUT SC, V4262, P240
   Vos T., 2013, PROC FITTEST ICTSS, P1
   WATKINS CJCH, 1992, MACH LEARN, V8, P279, DOI 10.1007/BF00992698
   WILCOXON F, 1946, J ECON ENTOMOL, V39, P269, DOI 10.1093/jee/39.2.269
   Yasin HN, 2021, SYMMETRY-BASEL, V13, DOI 10.3390/sym13020310
   Zhang Jie, 2016, P 25 INT S SOFTWARE, P342, DOI [10.1145/2931037, DOI 10.1145/2931037]
NR 84
TC 0
Z9 0
U1 2
U2 2
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAR
PY 2024
VL 50
IS 3
BP 574
EP 597
DI 10.1109/TSE.2024.3358416
PG 24
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA LQ6H5
UT WOS:001188302300014
OA Green Accepted
DA 2024-08-05
ER

PT J
AU Frantz, M
   Xiao, Y
   Pias, TS
   Meng, N
   Yao, DF
AF Frantz, Miles
   Xiao, Ya
   Pias, Tanmoy Sarkar
   Meng, Na
   Yao, Danfeng
TI Methods and Benchmark for Detecting Cryptographic API Misuses in Python
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Cryptography; Python; Benchmark testing; Codes; Ciphers; Libraries;
   Encryption; Static code analysis; cryptographic API misuses; benchmark
AB Extensive research has been conducted to explore cryptographic API misuse in Java. However, despite the tremendous popularity of the Python language, uncovering similar issues has not been fully explored. The current static code analysis tools for Python are unable to scan the increasing complexity of the source code. This limitation decreases the analysis depth, resulting in more undetected cryptographic misuses. In this research, we propose Cryptolation, a Static Code Analysis (SCA) tool that provides security guarantees for complex Python cryptographic code. Most existing analysis tools for Python solely focus on specific Frameworks such as Django or Flask. However, using a SCA approach, Cryptolation focuses on the language and not any framework. Cryptolation performs an inter-procedural data-flow analysis to handle many Python language features through variable inference (statically predicting what the variable value is) and SCA. Cryptolation covers 59 Python cryptographic modules and can identify 18 potential cryptographic misuses that involve complex language features. In this paper, we also provide a comprehensive analysis and a state-of-the-art benchmark for understanding the Python cryptographic Application Program Interface (API) misuses and their detection. Our state-of-the-art benchmark PyCryptoBench includes 1,836 Python cryptographic test cases that covers both 18 cryptographic rules and five language features. PyCryptoBench also provides a framework for evaluating and comparing different cryptographic scanners for Python. To evaluate the performance of our proposed cryptographic Python scanner, we evaluated Cryptolation against three other state-of-the-art tools: Bandit, Semgrep, and Dlint. We evaluated these four tools using our benchmark PyCryptoBench and manual evaluation of (four Top-Ranked and 939 Un-Ranked) real-world projects. Our results reveal that, overall, Cryptolation achieved the highest precision throughout our testing; and the highest accuracy on our benchmark. Cryptolation had 100% precision on PyCryptoBench, and the highest precision on the real-world projects.
C1 [Frantz, Miles; Xiao, Ya; Pias, Tanmoy Sarkar] Virginia Tech, Dept Comp Sci, Blacksburg, VA 24061 USA.
   [Meng, Na; Yao, Danfeng] Virginia Tech, Comp Sci, Blacksburg, VA USA.
C3 Virginia Polytechnic Institute & State University; Virginia Polytechnic
   Institute & State University
RP Frantz, M (corresponding author), Virginia Tech, Dept Comp Sci, Blacksburg, VA 24061 USA.
EM frantzme@vt.edu; yax99@vt.edu; tanmoysarkar@vt.edu; nm8247@vt.edu;
   danfeng@vt.edu
OI Pias, Tanmoy Sarkar/0000-0002-7325-9844; Yao, Danfeng
   (Daphne)/0000-0001-8969-2792
FU National Science Foundation
FX No Statement Available
CR Acar Y, 2017, P IEEE S SECUR PRIV, P154, DOI 10.1109/SP.2017.52
   Acar Y, 2016, P IEEE S SECUR PRIV, P289, DOI 10.1109/SP.2016.25
   Afrose S, 2023, IEEE T SOFTWARE ENG, V49, P485, DOI 10.1109/TSE.2022.3154717
   Barker E., 2018, Nist Special Publication 800-57 Part 1 Revision 4 Recommendation for Key Management Part 1: General Nist Special Publication 800-57 Part 1 Revision 4 Recommendation for Key Management Part 1: General, DOI [10.6028/NIST.SP.800-56Ar3, DOI 10.6028/NIST.SP.800-56AR3]
   Barton C. A., 2006, Patent, Patent No. [7,093,121, 7093121]
   Brun Y, 2023, ACM T SOFTW ENG METH, V32, DOI 10.1145/3571850
   Chen MS, 2019, PROC INT CONF SOFTW, P536, DOI 10.1109/ICSE.2019.00065
   Chen ZF, 2014, P INT COMP SOFTW APP, P219, DOI 10.1109/COMPSAC.2014.30
   Debray S., 1998, Conference Record of POPL '98: 25th ACM SIGPLAN-SIGACT. Symposium on Principles of Programming Languages, P12, DOI 10.1145/268946.268948
   dlitz.net, Darsey Litzenberger
   docs.python.org, Python Docs
   docs.python-requests.org, Python Docs
   Egele Manuel, 2013, P 2013 ACM SIGSAC C, P73
   Giannopoulos L, 2019, PROCEEDINGS OF THE 12TH EUROPEAN WORKSHOP ON SYSTEMS SECURITY (EUROSEC 2019), DOI 10.1145/3301417.3312497
   Gulabovska H., 2019, P 8 WORKSH SOFTW QUA, P1
   He BY, 2015, P IEEE S SECUR PRIV, P519, DOI 10.1109/SP.2015.38
   jetbrains.com, JetBrains
   Krüger S, 2017, IEEE INT CONF AUTOM, P931, DOI 10.1109/ASE.2017.8115707
   Lippmann RP, 2000, COMPUT NETW, V34, P597, DOI 10.1016/S1389-1286(00)00140-7
   Meng N, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P372, DOI 10.1145/3180155.3180201
   microfocus.com, Micro Focus
   Nikolic D., 2021, P 20 INT S INFOTEH J, P1
   Oliveira DS, 2018, PROCEEDINGS OF THE FOURTEENTH SYMPOSIUM ON USABLE PRIVACY AND SECURITY, P315
   Peng Y, 2021, 2021 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2021), P24, DOI 10.1109/SANER50967.2021.00012
   PyCQA, GitHub
   pyjwt.readthedocs.io, PyJWT
   python.org, Python PEP
   Rahaman S, 2019, PROCEEDINGS OF THE 2019 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY (CCS'19), P2455, DOI 10.1145/3319535.3345659
   Steinhauser A, 2019, SOFTWARE PRACT EXPER, V49, P130, DOI 10.1002/spe.2649
   Sun Ming., 2012, 2012 International Conference on Information Science and Technology (ICIST), P461
   Votipka D, 2020, PROCEEDINGS OF THE 29TH USENIX SECURITY SYMPOSIUM, P109
   Weiser MD., 1979, PROGRAM SLICES FORMA
   Xiao Ya, 2023, Digital Threats: Research Practice, DOI 10.1145/3507682
   Xu ZG, 2013, INT CONF QUAL SOFTW, P117, DOI 10.1109/QSIC.2013.50
   Yang HY, 2008, ASWEC 2008: 19TH AUSTRALIAN SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P239, DOI 10.1109/ASWEC.2008.35
   Zhang TY, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P886, DOI 10.1145/3180155.3180260
NR 36
TC 0
Z9 0
U1 2
U2 2
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAY
PY 2024
VL 50
IS 5
BP 1118
EP 1129
DI 10.1109/TSE.2024.3377182
PG 12
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA QX5T5
UT WOS:001224187300014
DA 2024-08-05
ER

PT J
AU Yuan, YY
   Pang, Q
   Wang, S
AF Yuan, Yuanyuan
   Pang, Qi
   Wang, Shuai
TI Provably Valid and Diverse Mutations of Real-World Media Data for DNN
   Testing
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Media; Testing; Manifolds; Dogs; Legged locomotion; Convolutional neural
   networks; Training; Deep learning testing; deep neural networks;
   metamorphic testing
ID DIMENSIONALITY REDUCTION
AB Deep neural networks (DNNs) often accept high-dimensional media data (e.g., photos, text, and audio) and understand their perceptual content (e.g., a cat). To test DNNs, diverse inputs are needed to trigger mis-predictions. Some preliminary works use byte-level mutations or domain-specific filters (e.g., foggy), whose enabled mutations may be limited and likely error-prone. State-of-the-art (SOTA) works employ deep generative models to generate (infinite) inputs. Also, to keep the mutated inputs perceptually valid (e.g., a cat remains a "cat" after mutation), existing efforts rely on imprecise and less generalizable heuristics. This study revisits two key objectives in media input mutation - perception diversity (Div) and validity (Val) - in a rigorous manner based on manifold, a well-developed theory capturing perceptions of high-dimensional media data in a low-dimensional space. We show important results that Div and Val inextricably bound each other, and prove that SOTA generative model-based methods fundamentally fail to mutate real-world media data (either sacrificing Div or Val). In contrast, we discuss the feasibility of mutating real-world media data with provably high Div and Val based on manifold. Following, we concretize the technical solution of mutating media data of various formats (images, audios, text) via a unified manner based on manifold. Specifically, when media data are projected into a low-dimensional manifold, the data can be mutated by walking on the manifold with certain directions and step sizes. When contrasted with the input data, the mutated data exhibit encouraging Div in the perceptual traits (e.g., lying vs. standing dog) while retaining reasonably high Val (i.e., a dog remains a dog). We implement our techniques in DeepWalk for testing DNNs. DeepWalk constructs manifolds for media data offline. In online testing, DeepWalk walks on manifolds to generate mutated media data with provably high Div and Val. Our evaluation tests DNNs executing various tasks (e.g., classification, self-driving, machine translation) and media data of different types (image, audio, text). DeepWalk outperforms prior methods in terms of the testing comprehensiveness and can find more error-triggering inputs with higher quality. The tested DNNs, after repaired using DeepWalk's findings, exhibit better accuracy.
C1 [Yuan, Yuanyuan; Pang, Qi; Wang, Shuai] Hong Kong Univ Sci & Technol, Kowloon, Clear Water Bay, Hong Kong, Peoples R China.
C3 Hong Kong University of Science & Technology
RP Wang, S (corresponding author), Hong Kong Univ Sci & Technol, Kowloon, Clear Water Bay, Hong Kong, Peoples R China.
EM yyuanaq@cse.ust.hk; qpangaa@cse.ust.hk; shuaiw@cse.ust.hk
OI Wang, Shuai/0000-0002-0866-0308
FU RGC GRF
FX No Statement Available
CR Abdi H, 2010, WIRES COMPUT STAT, V2, P433, DOI 10.1002/wics.101
   Arjovsky M, 2017, PR MACH LEARN RES, V70
   Balasubramanian M, 2002, SCIENCE, V295
   Balunovic M, 2019, ADV NEUR IN, V32
   Belkin M, 2003, NEURAL COMPUT, V15, P1373, DOI 10.1162/089976603321780317
   Bengio Y, 2013, IEEE T PATTERN ANAL, V35, P1798, DOI 10.1109/TPAMI.2013.50
   Bowman S. R., 2015, EMNLP, P632, DOI 10.18653/v1/D15-1075
   Bradski G, 2000, DR DOBBS J, V25, P120
   Briggs F, 2009, IEEE DATA MINING, P51, DOI 10.1109/ICDM.2009.65
   Brock A., 2018, P INT C LEARN REPR
   Byun T, 2020, 2020 IEEE/ACM 42ND INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: NEW IDEAS AND EMERGING RESULTS (ICSE-NIER 2020), P97, DOI 10.1145/3377816.3381734
   Byun T, 2020, 2020 IEEE INTERNATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE TESTING (AITEST), P15, DOI 10.1109/AITEST49225.2020.00010
   Cai D, 2012, IEEE T KNOWL DATA EN, V24, P707, DOI 10.1109/TKDE.2011.104
   Cordts M, 2016, PROC CVPR IEEE, P3213, DOI 10.1109/CVPR.2016.350
   Danial Al., Cloc
   Demir S, 2019, Arxiv, DOI arXiv:1911.10621
   Deng J, 2009, PROC CVPR IEEE, P248, DOI 10.1109/CVPRW.2009.5206848
   Dola S, 2021, PROC INT CONF SOFTW, P226, DOI 10.1109/ICSE43902.2021.00032
   Donahue C, 2019, P 7 INT C LEARN REPR
   Dwarakanath A, 2018, ISSTA'18: PROCEEDINGS OF THE 27TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P118, DOI 10.1145/3213846.3213858
   Fan X, 2019, J VIS COMMUN IMAGE R, V60, P51, DOI 10.1016/j.jvcir.2019.01.010
   Furui S, 2012, IEEE SIGNAL PROC MAG, V29, P16, DOI 10.1109/MSP.2012.2209906
   Howard AG, 2017, Arxiv, DOI [arXiv:1704.04861, 10.48550/arXiv.1704.04861]
   Galhotra S, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P498, DOI 10.1145/3106237.3106277
   Ge T, 2018, PROCEEDINGS OF THE 56TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (ACL), VOL 1, P1055
   github, Artifact of Deep Walk
   github, Optimized implementations of DNN coverage metrics
   Goodfellow IJ, 2014, ADV NEUR IN, V27, P2672, DOI 10.1145/3422622
   Guo HY, 2020, AAAI CONF ARTIF INTE, V34, P4044
   Han Ge, 2022, 2022 IEEE 24th Int Conf on High Performance Computing & Communications; 8th Int Conf on Data Science & Systems; 20th Int Conf on Smart City; 8th Int Conf on Dependability in Sensor, Cloud & Big Data Systems & Application (HPCC/DSS/SmartCity/DependSys), P1601, DOI 10.1109/HPCC-DSS-SmartCity-DependSys57074.2022.00244
   He KM, 2016, PROC CVPR IEEE, P770, DOI 10.1109/CVPR.2016.90
   He PJ, 2020, PROC INT CONF SOFTW, P961, DOI 10.1145/3377811.3380339
   Hensel M, 2017, ADV NEUR IN, V30
   Ho J., 2020, Adv. Neural. Inf. Process. Syst, V33, P6840, DOI DOI 10.48550/ARXIV.2006.11239
   Holden D., 2015, SIGGRAPH Asia 2015 Technical Briefs, SA'15, P1, DOI [DOI 10.1145/2820903.2820918, 10.1145/2820903.2820918]
   Huang G, 2017, PROC CVPR IEEE, P2261, DOI 10.1109/CVPR.2017.243
   Ioffe S, 2015, PR MACH LEARN RES, V37, P448
   Ji ZL, 2023, PROC INT CONF SOFTW, P1788, DOI 10.1109/ICSE48619.2023.00153
   Kang Sungmin, 2020, P IEEEACM 42 INT C S, P521
   Kingma D. P., 2014, arXiv
   Kingma D.P., 2018, Advances in neural information processing systems
   Kingma DP, 2014, ADV NEUR IN, V27
   Krizhevsky A., 2012, Learning multiple layers of features from tiny images, DOI DOI 10.1145/3079856.3080246
   LeCun Y, 2004, PROC CVPR IEEE, P97
   Lee JA, 2007, INFORM SCI STAT, P1, DOI 10.1007/978-0-387-39351-3
   Li HQ, 2017, INT CONF ACOUST SPEE, P5620, DOI 10.1109/ICASSP.2017.7953232
   Li ZZ, 2021, INT C MACHINE LEARNI, V139
   Liu MY, 2017, ADV NEUR IN, V30
   Ma L, 2018, IEEE INT CONF AUTOM, P120, DOI 10.1145/3238147.3238202
   Ma PC, 2021, PROC VLDB ENDOW, V15, P569, DOI 10.14778/3494124.3494139
   Ma PC, 2020, PROCEEDINGS OF THE TWENTY-NINTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P458
   Martinez-Murcia FJ, 2020, IEEE J BIOMED HEALTH, V24, P17, DOI 10.1109/JBHI.2019.2914970
   Mikolov T, 2010, 11TH ANNUAL CONFERENCE OF THE INTERNATIONAL SPEECH COMMUNICATION ASSOCIATION 2010 (INTERSPEECH 2010), VOLS 1-2, P1045
   Miyato Takeru, 2018, ICLR
   Nakajima S, 2019, LECT NOTES COMPUT SC, V11812, P56, DOI 10.1007/978-3-030-31280-0_4
   Novak Roman, 2018, INT C LEARN REPR
   Odena A, 2019, PR MACH LEARN RES, V97
   Pang Q, 2022, PROCEEDINGS OF THE 31ST ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, ISSTA 2022, P378, DOI 10.1145/3533767.3534388
   Papineni K, 2002, 40TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, PROCEEDINGS OF THE CONFERENCE, P311, DOI 10.3115/1073083.1073135
   Pei KX, 2017, PROCEEDINGS OF THE TWENTY-SIXTH ACM SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES (SOSP '17), P1, DOI 10.1145/3132747.3132785
   Radford A, 2016, Arxiv, DOI [arXiv:1511.06434, DOI 10.48550/ARXIV.1511.06434]
   Ross S.M., 1976, A First Course in Probability, V2
   Roweis ST, 2000, SCIENCE, V290, P2323, DOI 10.1126/science.290.5500.2323
   Ruder S, 2016, ARXIV
   Saito Y, 2018, IEEE-ACM T AUDIO SPE, V26, P84, DOI 10.1109/TASLP.2017.2761547
   Sajjadi MSM, 2018, ADV NEUR IN, V31
   Salimans T, 2016, ADV NEUR IN, V29
   Sato T, 2021, PROCEEDINGS OF THE 30TH USENIX SECURITY SYMPOSIUM, P3309
   Shorten C, 2019, J BIG DATA-GER, V6, DOI 10.1186/s40537-019-0197-0
   Simonyan K, 2015, Arxiv, DOI arXiv:1409.1556
   stablediffusionweb, Stable Diffusion Online
   Szegedy C, 2016, PROC CVPR IEEE, P2818, DOI 10.1109/CVPR.2016.308
   Tanielian U., 2020, INT C MACHINE LEARNI, P9418
   Tian YC, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P303, DOI 10.1145/3180155.3180220
   Udeshi S, 2018, IEEE INT CONF AUTOM, P98, DOI 10.1145/3238147.3238165
   Vaswani A, 2017, ADV NEUR IN, V30
   Vries HD, 2017, Arxiv, DOI arXiv:1707.00683
   Wang JY, 2019, PROC INT CONF SOFTW, P1245, DOI 10.1109/ICSE.2019.00126
   Wang S, 2020, IEEE INT CONF AUTOM, P1053, DOI 10.1145/3324884.3416584
   Wang Z, 2004, IEEE T IMAGE PROCESS, V13, P600, DOI 10.1109/TIP.2003.819861
   WATKINS CJCH, 1992, MACH LEARN, V8, P279, DOI 10.1007/BF00992698
   Xie XF, 2019, PROCEEDINGS OF THE 28TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA '19), P146, DOI 10.1145/3293882.3330579
   Yuan YY, 2023, PROCEEDINGS OF THE 32ND USENIX SECURITY SYMPOSIUM, P4769
   Yuan YY, 2023, PROC INT CONF SOFTW, P1200, DOI 10.1109/ICSE48619.2023.00107
   Yuan YY, 2022, IEEE INT CONF AUTOM, DOI 10.1145/3551349.3561157
   Yuan YY, 2022, PROCEEDINGS OF THE 31ST USENIX SECURITY SYMPOSIUM, P4419
   Yuan YY, 2021, PROC CVPR IEEE, P16903, DOI 10.1109/CVPR46437.2021.01663
   Yun S, 2019, IEEE I CONF COMP VIS, P6022, DOI 10.1109/ICCV.2019.00612
   Zhang H, 2019, 36 INT C MACHINE LEA, V97
   Zhang MS, 2018, IEEE INT CONF AUTOM, P132, DOI 10.1145/3238147.3238187
   Zhang XY, 2021, PROC INT CONF SOFTW, P359, DOI 10.1109/ICSE43902.2021.00043
   ZHAO J., 2018, Proceedings of Machine Learning Research, V80, P5902
   Zhou HS, 2020, PROC INT CONF SOFTW, P347, DOI 10.1145/3377811.3380422
   Zhu B, 2018, NATURE, V555, P487, DOI 10.1038/nature25988
   Zhu J.-Y., CycleGAN failure cases
   Zhu JY, 2017, IEEE I CONF COMP VIS, P2242, DOI 10.1109/ICCV.2017.244
   Zhu JY, 2016, LECT NOTES COMPUT SC, V9909, P597, DOI 10.1007/978-3-319-46454-1_36
NR 97
TC 0
Z9 0
U1 1
U2 1
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAY
PY 2024
VL 50
IS 5
BP 1040
EP 1064
DI 10.1109/TSE.2024.3370807
PG 25
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA QX5T5
UT WOS:001224187300006
OA Green Submitted
DA 2024-08-05
ER

PT J
AU Zhu, SK
   Wang, JY
   Sun, J
   Yang, J
   Lin, XW
   Wang, TY
   Zhang, LY
   Cheng, P
AF Zhu, Shunkai
   Wang, Jingyi
   Sun, Jun
   Yang, Jie
   Lin, Xingwei
   Wang, Tianyi
   Zhang, Liyi
   Cheng, Peng
TI Better Pay Attention Whilst Fuzzing
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Fuzzing; Deep learning; Computer bugs; Codes; Image edge detection;
   Electronic mail; Recurrent neural networks; deep learning; program
   analysis; attention model
ID SYMBOLIC EXECUTION
AB Fuzzing is one of the prevailing methods for vulnerability detection. However, even state-of-the-art fuzzing methods become ineffective after some period of time, i.e., the coverage hardly improves as existing methods are ineffective to focus the attention of fuzzing on covering the hard-to-trigger program paths. In other words, they cannot generate inputs that can break the bottleneck due to the fundamental difficulty in capturing the complex relations between the test inputs and program coverage. In particular, existing fuzzers suffer from the following main limitations: 1) lacking an overall analysis of the program to identify the most "rewarding" seeds, and 2) lacking an effective mutation strategy which could continuously select and mutates the more relevant "bytes" of the seeds. In this work, we propose an approach called ATTuzz to address these two issues systematically. First, we propose a lightweight dynamic analysis technique that estimates the "reward" of covering each basic block and selects the most rewarding seeds accordingly. Second, we mutate the selected seeds according to a neural network model which predicts whether a certain "rewarding" block will be covered given certain mutations on certain bytes of a seed. The model is a deep learning model equipped with an attention mechanism which is learned and updated periodically whilst fuzzing. Our evaluation shows that ATTuzz significantly outperforms 5 state-of-the-art grey-box fuzzers on 6 popular real-world programs and MAGMA data sets at achieving higher edge coverage and finding new bugs. In particular, ATTuzz achieved 1.2X edge coverage and 1.8X bugs detected than AFL++ over 24-hour runs. In addition, ATTuzz also finds 4 new bugs in the latest version of some popular software including p7zip and openUSD.
C1 [Zhu, Shunkai; Wang, Jingyi; Wang, Tianyi; Zhang, Liyi; Cheng, Peng] Zhejiang Univ, Coll Control Sci & Engn, Hangzhou 310027, Zhejiang, Peoples R China.
   [Sun, Jun] Singapore Management Univ, Sch Comp & Informat Syst, Singapore 188065, Singapore.
   [Yang, Jie] Zhejiang Univ, Sch Med, Hangzhou 310027, Zhejiang, Peoples R China.
   [Lin, Xingwei] Ant Grp, Hangzhou 310058, Peoples R China.
C3 Zhejiang University; Singapore Management University; Zhejiang
   University
RP Wang, JY; Cheng, P (corresponding author), Zhejiang Univ, Coll Control Sci & Engn, Hangzhou 310027, Zhejiang, Peoples R China.
EM shunkaiz@zju.edu.cn; wangjyee@zju.edu.cn; junsun@smu.edu.sg;
   jieynlp@gmail.com; xwlin.roy@gmail.com; wty1998@zju.edu.cn;
   l392zhan@zju.edu.cn; lunarheart@zju.edu.cn
RI Wang, Jingyi/AHE-1352-2022
OI Wang, Jingyi/0000-0001-7113-7635; Sun, Jun/0000-0002-3545-1392; Zhang,
   Liyi/0009-0002-3715-2924; Wang, Tianyi/0009-0001-3669-8338; Yang,
   Jie/0000-0001-5696-363X; Lin, Xingwei/0009-0005-5048-2516
FU National Natural Science Foundation of China
FX No Statement Available
CR Andrieu C, 2003, MACH LEARN, V50, P5, DOI 10.1023/A:1020281327116
   Aschermann C, 2019, 26TH ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2019), DOI 10.14722/ndss.2019.23371
   Bahdanau D, 2016, Arxiv, DOI arXiv:1409.0473
   Bastani O, 2017, ACM SIGPLAN NOTICES, V52, P95, DOI [10.1145/3062341.3062349, 10.1145/3140587.3062349]
   Böttinger K, 2018, 2018 IEEE SYMPOSIUM ON SECURITY AND PRIVACY WORKSHOPS (SPW 2018), P116, DOI 10.1109/SPW.2018.00026
   Böhme M, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P678, DOI 10.1145/3368089.3409748
   Böhme M, 2019, IEEE T SOFTWARE ENG, V45, P489, DOI 10.1109/TSE.2017.2785841
   Böhme M, 2017, CCS'17: PROCEEDINGS OF THE 2017 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P2329, DOI 10.1145/3133956.3134020
   BYRD RH, 1995, SIAM J SCI COMPUT, V16, P1190, DOI 10.1137/0916069
   Cadar C., 2008, KLEE: Unassisted and Automatic Generation of High-Coverage Tests for Complex Systems Programs
   Cadar C, 2013, COMMUN ACM, V56, P82, DOI 10.1145/2408776.2408795
   Cadar C, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1066, DOI 10.1145/1985793.1985995
   Cha SK, 2015, P IEEE S SECUR PRIV, P725, DOI 10.1109/SP.2015.50
   Chen P, 2018, P IEEE S SECUR PRIV, P711, DOI 10.1109/SP.2018.00046
   Cho M, 2019, PROCEEDINGS OF THE 2019 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY (CCS'19), P515, DOI 10.1145/3319535.3354249
   Choi J, 2019, PROC INT CONF SOFTW, P736, DOI 10.1109/ICSE.2019.00082
   Collobert R, 2011, J MACH LEARN RES, V12, P2493
   Doshi-Velez F, 2017, Arxiv, DOI [arXiv:1702.08608, DOI 10.48550/ARXIV.1702.08608, 10.48550/arXiv.1702.08608]
   Embleton S., 2006, PROC BLACK HAT US, P2
   Fioraldi A., 2020, PROC 14 USENIX WORKS
   Firdausi I., 2010, 2010 Proceedings of Second International Conference on Advances in Computing, Control and Telecommunication Technologies (ACT 2010), P201, DOI 10.1109/ACT.2010.33
   Gan ST, 2018, P IEEE S SECUR PRIV, P679, DOI 10.1109/SP.2018.00040
   Godefroid P, 2005, ACM SIGPLAN NOTICES, V40, P213, DOI 10.1145/1064978.1065036
   Godefroid P, 2017, IEEE INT CONF AUTOM, P50, DOI 10.1109/ASE.2017.8115618
   Godefroid Patrice, 2008, NDSS, P151
   Haller I., 2013, Proceedings of the 22Nd USENIX Conference on Security, P49
   Harman M, 2010, IEEE T SOFTWARE ENG, V36, P226, DOI 10.1109/TSE.2009.71
   Hazimeh A, 2020, P ACM MEAS ANAL COMP, V4, DOI [10.1145/3410220.3456276, 10.1145/3428334]
   Herrera A, 2021, ISSTA '21: PROCEEDINGS OF THE 30TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P230, DOI 10.1145/3460319.3464795
   Hu ZC, 2018, 2018 ACM INTERNATIONAL CONFERENCE ON COMPUTING FRONTIERS, P138, DOI 10.1145/3203217.3203241
   Huang HQ, 2020, P IEEE S SECUR PRIV, P1613, DOI 10.1109/SP40000.2020.00063
   jinfeihan57, A new p7zip fork with additional codecs and improvements
   KAPLAN EL, 1958, J AM STAT ASSOC, V53, P457, DOI 10.2307/2281868
   Khurshid S, 2003, LECT NOTES COMPUT SC, V2619, P553
   KING JC, 1976, COMMUN ACM, V19, P385, DOI 10.1145/360248.360252
   Kingma D. P., 2014, arXiv
   Klees G, 2018, PROCEEDINGS OF THE 2018 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY (CCS'18), P2123, DOI 10.1145/3243734.3243804
   Krizhevsky A, 2017, COMMUN ACM, V60, P84, DOI 10.1145/3065386
   Lemieux C, 2018, IEEE INT CONF AUTOM, P475, DOI 10.1145/3238147.3238176
   Li YK, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P533, DOI 10.1145/3338906.3338975
   Li YK, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P627, DOI 10.1145/3106237.3106295
   Lyu CY, 2019, PROCEEDINGS OF THE 28TH USENIX SECURITY SYMPOSIUM, P1949
   Manès VJM, 2020, PROC INT CONF SOFTW, P1024, DOI 10.1145/3377811.3380421
   Metzman J, 2021, PROCEEDINGS OF THE 29TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '21), P1393, DOI 10.1145/3468264.3473932
   Miller B.P., 1995, Fuzz Revisited: A Re-examination of the Reliability of Unix Utilities and Services
   Molnar D., 2009, P 18 C USENIX SEC S, V9, P67
   Natella R, 2021, ISSTA '21: PROCEEDINGS OF THE 30TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P662, DOI 10.1145/3460319.3469077
   Neugschwandtner M., 2015, P 5 ACM C DATA APPL, P87, DOI DOI 10.1145/2699026.2699098
   Nichols N, 2017, Arxiv, DOI arXiv:1711.02807
   OSS-Fuzz Project, 2016, OSS-Fuzz-Google's continuous fuzzing service for open source software
   Peng H, 2018, P IEEE S SECUR PRIV, P697, DOI 10.1109/SP.2018.00056
   Petsios T, 2017, CCS'17: PROCEEDINGS OF THE 2017 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P2155, DOI 10.1145/3133956.3134073
   PixarAnimationStudios, Universal scene description
   Rajpal M, 2017, Arxiv, DOI arXiv:1711.04596
   Rawat S, 2017, 24TH ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2017), DOI 10.14722/ndss.2017.23404
   Sen Koushik, 2005, Proc. ESEC/FSE, DOI 10.1145/1081706.1081750
   Serebryany K., 2015, LIBFUZZER LIBFUZZER
   She DD, 2019, P IEEE S SECUR PRIV, P803, DOI 10.1109/SP.2019.00052
   Sivakorn S, 2017, P IEEE S SECUR PRIV, P521, DOI 10.1109/SP.2017.46
   Stephens N, 2016, 23RD ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2016), DOI 10.14722/ndss.2016.23368
   Pham VT, 2020, IEEE INT CONF SOFTW, P460, DOI 10.1109/ICST46399.2020.00062
   Wagner J. B., 2017, Elastic program transformations: Automatically optimizing the reliability/performance trade-off in systems software
   Wang JY, 2017, LECT NOTES COMPUT SC, V10610, P379, DOI 10.1007/978-3-319-68690-5_23
   Wang JJ, 2017, P IEEE S SECUR PRIV, P579, DOI 10.1109/SP.2017.23
   Wang TL, 2010, P IEEE S SECUR PRIV, P495, DOI 10.1109/SP.2010.37
   Wang XY, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P291, DOI 10.1145/3180155.3180177
   Xie XF, 2019, PROCEEDINGS OF THE 28TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA '19), P146, DOI 10.1145/3293882.3330579
   Yang J, 2020, JAMA NETW OPEN, V3, DOI 10.1001/jamanetworkopen.2020.22836
   Yue T, 2020, PROCEEDINGS OF THE 29TH USENIX SECURITY SYMPOSIUM, P2307
   Yun I, 2018, PROCEEDINGS OF THE 27TH USENIX SECURITY SYMPOSIUM, P745
   Zalewski M., American fuzzy lop
   Zong PY, 2020, PROCEEDINGS OF THE 29TH USENIX SECURITY SYMPOSIUM, P2255
NR 72
TC 0
Z9 0
U1 7
U2 7
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD FEB
PY 2024
VL 50
IS 2
BP 190
EP 208
DI 10.1109/TSE.2023.3338129
PG 19
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA IP4I9
UT WOS:001167516600009
OA Green Submitted
DA 2024-08-05
ER

PT J
AU Song, D
   Xie, X
   Song, JY
   Zhu, DR
   Huang, YH
   Felix, JX
   Ma, L
AF Song, Da
   Xie, Xuan
   Song, Jiayang
   Zhu, Derui
   Huang, Yuheng
   Felix, Juefei-Xu
   Ma, Lei
TI LUNA: A Model-Based Universal Analysis Framework for Large Language
   Models
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Large language models; deep neural networks; model-based analysis;
   quality assurance; Large language models; deep neural networks;
   model-based analysis; quality assurance
ID MARKOV; EXTRACTION
AB Over the past decade, Artificial Intelligence (AI) has had great success recently and is being used in a wide range of academic and industrial fields. More recently, Large Language Models (LLMs) have made rapid advancements that have propelled AI to a new level, enabling and empowering even more diverse applications and industrial domains with intelligence, particularly in areas like software engineering and natural language processing. Nevertheless, a number of emerging trustworthiness concerns and issues exhibited in LLMs, e.g., robustness and hallucination, have already recently received much attention, without properly solving which the widespread adoption of LLMs could be greatly hindered in practice. The distinctive characteristics of LLMs, such as the self-attention mechanism, extremely large neural network scale, and autoregressive generation usage contexts, differ from classic AI software based on Convolutional Neural Networks and Recurrent Neural Networks and present new challenges for quality analysis. Up to the present, it still lacks universal and systematic analysis techniques for LLMs despite the urgent industrial demand across diverse domains. Towards bridging such a gap, in this paper, we initiate an early exploratory study and propose a universal analysis framework for LLMs, named LUNA, which is designed to be general and extensible and enables versatile analysis of LLMs from multiple quality perspectives in a human-interpretable manner. In particular, we first leverage the data from desired trustworthiness perspectives to construct an abstract model as an auxiliary analysis asset and proxy, which is empowered by various abstract model construction methods built-in LUNA. To assess the quality of the abstract model, we collect and define a number of evaluation metrics, aiming at both the abstract model level and the semantics level. Then, the semantics, which is the degree of satisfaction of the LLM w.r.t. the trustworthiness perspective, is bound to and enriches the abstract model with semantics, which enables more detailed analysis applications for diverse purposes, e.g., abnormal behavior detection. To better understand the potential usefulness of our analysis framework LUNA, we conduct a large-scale evaluation, the results of which demonstrate that 1) the abstract model has the potential to distinguish normal and abnormal behavior in LLM, 2) LUNA is effective for the real-world analysis of LLMs in practice, and the hyperparameter settings influence the performance, 3) different evaluation metrics are in different correlations with the analysis performance. In order to encourage further studies in the quality assurance of LLMs, we made all of the code and more detailed experimental results data available on the supplementary website of this paper https://sites.google.com/view/llm-luna.
C1 [Song, Da; Xie, Xuan; Song, Jiayang; Huang, Yuheng] Univ Alberta, Dept Elect & Comp Engn, Edmonton, AB T6G 1H9, Canada.
   [Zhu, Derui] Tech Univ Munich, Dept Comp Sci, D-80333 Munich, Germany.
   [Felix, Juefei-Xu] NYU, New York, NY 10012 USA.
   [Ma, Lei] Univ Tokyo, Tokyo 1138658, Japan.
   [Ma, Lei] Univ Alberta, Edmonton, AB, Canada.
C3 University of Alberta; Technical University of Munich; New York
   University; University of Tokyo; University of Alberta
RP Ma, L (corresponding author), Univ Tokyo, Tokyo 1138658, Japan.; Ma, L (corresponding author), Univ Alberta, Edmonton, AB, Canada.
EM dsong4@ualberta.ca; xxie9@ualberta.ca; jiayan13@ualberta.ca;
   derui.zhu@tum.de; yuheng18@ualberta.ca; juefei.xu@nyu.edu;
   ma.lei@acm.org
FU Canada CIFAR AI Chairs Program; Natural Sciences and Engineering
   Research Council of Canada; JST-Mirai Program [JPMJMI20B8]; JSPS KAKENHI
   [JP21H04877, JP23H03372, JP24K02920]; Autoware Foundation
FX This work was supported in part by Canada CIFAR AI Chairs Program, in
   part by the Natural Sciences and Engineering Research Council of Canada,
   in part by the JST-Mirai Program under Grant JPMJMI20B8, in part by the
   JSPS KAKENHI under Grant JP21H04877, Grant JP23H03372,Grant JP24K02920,
   and in part by the Autoware Foundation.
CR Henzinger TA, 2020, Arxiv, DOI arXiv:1911.09032
   Abid A, 2021, AIES '21: PROCEEDINGS OF THE 2021 AAAI/ACM CONFERENCE ON AI, ETHICS, AND SOCIETY, P298, DOI 10.1145/3461702.3462624
   Ahmed T, 2022, IEEE INT CONF AUTOM, DOI 10.1145/3551349.3559555
   Ahn M, 2022, Arxiv, DOI arXiv:2204.01691
   AlKhamissi B., 2022, arXiv
   Alon U, 2022, PR MACH LEARN RES, P468
   Amodei D, 2016, Arxiv, DOI arXiv:1606.06565
   [Anonymous], Countable-state Markov chains
   [Anonymous], 1986, Learning internal representations by error propagation
   [Anonymous], 2023, ACM Trans. Softw. Eng. Methodol., V32, P1
   [Anonymous], GPT-3.5
   Arora U, 2021, 2021 CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING (EMNLP 2021), P10687
   Austin J., 2021, arXiv, DOI DOI 10.48550/ARXIV.2108.07732
   Ayache R., 2019, PMLR, P81
   Azaria A, 2023, Arxiv, DOI arXiv:2304.13734
   Baan J, 2023, Arxiv, DOI arXiv:2307.15703
   Balakrishnan A, 2019, 57TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (ACL 2019), P831
   BAUM LE, 1970, ANN MATH STAT, V41, P164, DOI 10.1214/aoms/1177697196
   Bender EM, 2021, PROCEEDINGS OF THE 2021 ACM CONFERENCE ON FAIRNESS, ACCOUNTABILITY, AND TRANSPARENCY, FACCT 2021, P610, DOI 10.1145/3442188.3445922
   Benesty J, 2009, Noise Reduction in Speech Processing, V2, P1, DOI [DOI 10.1007/978-3-642-00296-05, 10.1109/5.771073, DOI 10.1007/978-3-642-00296-0_5]
   BENGIO Y, 1994, IEEE T NEURAL NETWOR, V5, P157, DOI 10.1109/72.279181
   Bi B, 2019, Arxiv, DOI arXiv:1909.02745
   Biggio Battista, 2013, Machine Learning and Knowledge Discovery in Databases. European Conference, ECML PKDD 2013. Proceedings: LNCS 8190, P387, DOI 10.1007/978-3-642-40994-3_25
   Bradley AP, 1997, PATTERN RECOGN, V30, P1145, DOI 10.1016/S0031-3203(96)00142-2
   Bro R, 2014, ANAL METHODS-UK, V6, P2812, DOI 10.1039/c3ay41907j
   Brown T., 2020, ADV NEURAL INFORM PR, V33, P1877, DOI DOI 10.48550/ARXIV.2005.14165
   Bubeck S, 2023, Arxiv, DOI [arXiv:2303.12712, DOI 10.48550/ARXIV.2303.12712]
   Cao M, 2023, Arxiv, DOI arXiv:2302.14003
   Carlini N, 2021, PROCEEDINGS OF THE 30TH USENIX SECURITY SYMPOSIUM, P2633
   Cechin AL, 2003, SCCC 2003: XXIII INTERNATIONAL CONFERENCE OF THE CHILEAN COMPUTER SCIENCE SOCIETY, PROCEEDINGS, P73
   Chakraborty A, 2018, Arxiv, DOI arXiv:1810.00069
   Chang YP, 2023, Arxiv, DOI [arXiv:2307.03109, DOI 10.1145/3641289]
   Chefer H, 2021, 2021 IEEE/CVF INTERNATIONAL CONFERENCE ON COMPUTER VISION (ICCV 2021), P387, DOI 10.1109/ICCV48922.2021.00045
   Chen M., 2021, arXiv, DOI DOI 10.48550/ARXIV.2107.03374
   Chen P. Y., 2002, Correlation: Parametric and non-parametric measures
   Chen XY, 2023, Arxiv, DOI arXiv:2304.05128
   Cheng CH, 2019, DES AUT TEST EUROPE, P300, DOI [10.23919/date.2019.8714971, 10.23919/DATE.2019.8714971]
   Chiang W.-L., VICUNA OPEN SOURCE C
   Chorev S, 2022, J. Mach. Learn. Res., V23, P1
   Deng YL, 2023, Arxiv, DOI [arXiv:2304.02014, DOI 10.48550/ARXIV.2304.02014]
   Devlin J, 2019, 2019 CONFERENCE OF THE NORTH AMERICAN CHAPTER OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS: HUMAN LANGUAGE TECHNOLOGIES (NAACL HLT 2019), VOL. 1, P4171
   Dong GL, 2020, IEEE INT CONF AUTOM, P499, DOI 10.1145/3324884.3416592
   Dong YH, 2024, Arxiv, DOI arXiv:2304.07590
   Du XN, 2020, IEEE INT CONF AUTOM, P423, DOI 10.1145/3324884.3416564
   Du XN, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P477, DOI 10.1145/3338906.3338954
   Eddy SR, 1998, BIOINFORMATICS, V14, P755, DOI 10.1093/bioinformatics/14.9.755
   Fan AEL, 2023, Arxiv, DOI arXiv:2310.03533
   Fan M, 2021, IEEE T INF FOREN SEC, V16, P4117, DOI 10.1109/TIFS.2021.3103064
   Fan ZY, 2023, PROC INT CONF SOFTW, P1469, DOI 10.1109/ICSE48619.2023.00128
   Filippova K, 2020, Arxiv, DOI arXiv:2010.05873
   Fine S, 1998, MACH LEARN, V32, P41, DOI 10.1023/A:1007469218079
   Fried D, 2023, Arxiv, DOI [arXiv:2204.05999, 10.48550/ARXIV.2204.05999]
   Frieder S, 2023, Arxiv, DOI arXiv:2301.13867
   Gao XY, 2022, PROC INT CONF SOFTW, P73, DOI 10.1145/3510003.3510232
   Gehman Samuel, 2020, FINDINGS ASS COMPUTA, P3356, DOI DOI 10.18653/V1/2020.FINDINGSEMNLP.301
   Geva M, 2023, Arxiv, DOI arXiv:2304.14767
   GIGERENZER G, 1995, PSYCHOL REV, V102, P684, DOI 10.1037/0033-295X.102.4.684
   Gou ZB, 2024, Arxiv, DOI arXiv:2305.11738
   Goyal S, 2023, ACM COMPUT SURV, V55, DOI 10.1145/3593042
   He HF, 2022, Arxiv, DOI arXiv:2301.00303
   He P., 2021, arXiv
   Helbling M., 2023, arXiv
   Hendrycks K., 2017, P INT C LEARN REPR, P1
   Hong D, 2022, PROCEEDINGS OF THE 28TH ACM SIGKDD CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, KDD 2022, P574, DOI 10.1145/3534678.3539356
   Honovich O, 2021, 2021 CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING (EMNLP 2021), P7856
   Hou XY, 2024, Arxiv, DOI arXiv:2308.10620
   Hu BC, 2022, PROC INT SYMP SOFTW, P49, DOI 10.1109/ISSRE55969.2022.00016
   Hu Q, 2022, ACM T SOFTW ENG METH, V31, DOI 10.1145/3511598
   Hu X, 2018, PROCEEDINGS OF THE TWENTY-SEVENTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P2269
   Huang J, 2022, arXiv
   Huang JT, 2022, PROCEEDINGS OF THE 31ST ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, ISSTA 2022, P202, DOI 10.1145/3533767.3534394
   Huang L, 2023, ASSESSMENT, V30, P2247, DOI 10.1177/10731911221144774
   Huang XW, 2023, Arxiv, DOI arXiv:2305.11391
   Huang YC, 2021, Arxiv, DOI arXiv:2104.14839
   Huang YH, 2023, Arxiv, DOI arXiv:2307.10236
   Humbatova N, 2023, PROC IEEE ACM INT C, P68, DOI 10.1109/ICSE-Companion58688.2023.00027
   Humbatova N, 2021, ISSTA '21: PROCEEDINGS OF THE 30TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P67, DOI 10.1145/3460319.3464825
   Husain H, 2020, Arxiv, DOI arXiv:1909.09436
   Ishimoto Y, 2023, INFORM SOFTWARE TECH, V155, DOI 10.1016/j.infsof.2022.107117
   Goodfellow IJ, 2015, Arxiv, DOI [arXiv:1412.6572, DOI 10.48550/ARXIV.1412.6572]
   Ji ZW, 2023, ACM COMPUT SURV, V55, DOI 10.1145/3571730
   Jiang N, 2023, PROC INT CONF SOFTW, P1430, DOI 10.1109/ICSE48619.2023.00125
   Kamath A., 2020, P 58 ANN M ASS COMPU, P5684, DOI [10.18653/v1/2020.acl-main.503, DOI 10.18653/V1/2020.ACL-MAIN.503]
   Kasneci E, 2023, LEARN INDIVID DIFFER, V103, DOI 10.1016/j.lindif.2023.102274
   Kendall MG, 1938, BIOMETRIKA, V30, P81, DOI 10.2307/2332226
   Kenton Z, 2021, Arxiv, DOI arXiv:2103.14659
   Khmelnitsky I, 2021, LECT NOTES COMPUT SC, V12971, P364, DOI 10.1007/978-3-030-88885-5_24
   Khoury R, 2023, Arxiv, DOI arXiv:2304.09655
   Kim J, 2023, INFORM SOFTWARE TECH, V162, DOI 10.1016/j.infsof.2023.107272
   Kim J, 2023, IEEE INT CONF SOFTW, P234, DOI 10.1109/ICST57152.2023.00030
   Kim J, 2019, PROC INT CONF SOFTW, P1039, DOI 10.1109/ICSE.2019.00108
   Kocmi T, 2023, Arxiv, DOI arXiv:2302.14520
   Koehn P, 2017, Arxiv, DOI [arXiv:1706.03872, 10.48550/arXiv.1706.03872, DOI 10.48550/ARXIV.1706.03872]
   Krishna K, 1999, IEEE T SYST MAN CY B, V29, P433, DOI 10.1109/3477.764879
   Kryscinski W., 2019, arXiv
   Kuchnik M., 2023, Proc. Mach. Learn. Syst., V5, P1
   Kuhn Y., 2023, P 11 INT C LEARN REP, P1
   Kupferman O, 2006, LECT NOTES COMPUT SC, V4137, P37
   Lang H, 2023, Arxiv, DOI arXiv:2305.03236
   LeCun Y., 1989, Advances in Neural Information Processing Systems, V2
   Lee K., 2018, Adv. Neural Inf. Process. Syst., V31
   Lee N., 2022, Advances in Neural Information Processing Systems, V35, P34586
   Lemieux C, 2023, PROC INT CONF SOFTW, P919, DOI 10.1109/ICSE48619.2023.00085
   LENAT DB, 1995, COMMUN ACM, V38, P33, DOI 10.1145/219717.219745
   Li K, 2024, Arxiv, DOI arXiv:2306.03341
   Li XH, 2022, KNOWL INF SYST, V64, P3197, DOI 10.1007/s10115-022-01756-8
   Li Y, 2022, PROCEEDINGS OF THE 31ST ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, ISSTA 2022, P227, DOI 10.1145/3533767.3534408
   Li YH, 2023, Arxiv, DOI arXiv:2309.07124
   Li YJ, 2022, SCIENCE, V378, P1092, DOI 10.1126/science.abq1158
   Liang P, 2023, Arxiv, DOI arXiv:2211.09110
   Liang S., 2018, P INT C LEARN REPR
   Liang Xiaodan, 2017, P MACHINE LEARNING R, V70, P1587
   Lin SPN, 2022, Arxiv, DOI arXiv:2109.07958
   Lin Z, 2024, Arxiv, DOI arXiv:2305.19187
   Liu HM, 2023, Arxiv, DOI [arXiv:2304.03439, DOI 10.48550/ARXIV.2304.03439, 10.48550/arXiv.2304.03439]
   Liu JW, 2023, Arxiv, DOI arXiv:2305.01210
   Liu TY, 2022, PROCEEDINGS OF THE 60TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (ACL 2022), VOL 1: (LONG PAPERS), P6723
   Liu Y., 2023, ACM Trans. Softw. Eng. Methodol., V33, P1
   Liu YH, 2023, Arxiv, DOI arXiv:2304.01852
   Liu YH, 2019, Arxiv, DOI [arXiv:1907.11692, DOI 10.48550/ARXIV.1907.11692]
   Liu Z, 2023, PROC INT CONF SOFTW, P1355, DOI 10.1109/ICSE48619.2023.00119
   Lo DV, 2023, Arxiv, DOI arXiv:2309.04142
   Luo RQ, 2022, BRIEF BIOINFORM, V23, DOI 10.1093/bib/bbac409
   Ma D. Du, 2022, AAAI, P1
   Ma L, 2018, IEEE INT CONF AUTOM, P120, DOI 10.1145/3238147.3238202
   Ma L, 2018, PROC INT SYMP SOFTW, P100, DOI 10.1109/ISSRE.2018.00021
   Ma YX, 2023, Arxiv, DOI arXiv:2307.03762
   Madaan A, 2023, Arxiv, DOI [arXiv:2303.17651, DOI 10.48550/ARXIV.2303.17651]
   Malinin A, 2021, Arxiv, DOI arXiv:2002.07650
   Malkiel I, 2022, PROCEEDINGS OF THE ACM WEB CONFERENCE 2022 (WWW'22), P3259, DOI 10.1145/3485447.3512045
   Manakul P, 2023, Arxiv, DOI arXiv:2303.08896
   MANN HB, 1947, ANN MATH STAT, V18, P50, DOI 10.1214/aoms/1177730491
   Mao R, 2023, IEEE T AFFECT COMPUT, V14, P1743, DOI 10.1109/TAFFC.2022.3204972
   Markov T, 2023, AAAI CONF ARTIF INTE, P15009
   Matinnejad R, 2019, IEEE T SOFTWARE ENG, V45, P919, DOI 10.1109/TSE.2018.2811489
   Maynez J, 2020, Arxiv, DOI arXiv:2005.00661
   Meng R., 2024, P NETW DISTR SYST SE, P1
   Merrill N., 2022, arXiv
   Merrill W, 2019, DEEP LEARNING AND FORMAL LANGUAGES: BUILDING BRIDGES, P1
   Mike L, 2020, P 58 ANN M ASS COMP, P7871, DOI 10.18653/v1/2020.acl-main.703
   Ming Y, 2017, IEEE CONF VIS ANAL, P13, DOI 10.1109/VAST.2017.8585721
   Mireshghallah F, 2022, PROCEEDINGS OF THE 60TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (ACL 2022), VOL 1: (LONG PAPERS), P401
   Moreno-Torres JG, 2012, PATTERN RECOGN, V45, P521, DOI 10.1016/j.patcog.2011.06.019
   Morteza P, 2022, AAAI CONF ARTIF INTE, P7831
   Nijkamp E, 2022, Arxiv, DOI arXiv:2203.13474
   Nummelin E., 2004, General Irreducible Markov Chains and Non-negative Operators
   Omlin CW, 1996, NEURAL NETWORKS, V9, P41, DOI 10.1016/0893-6080(95)00086-0
   openai, GPT4
   openai, Chatgpt
   Ouyang Long, 2022, Advances in Neural Information Processing Systems, V35, P27730, DOI 10.1177/01454455830072006
   Ozen E, 2019, ASIAN TEST SYMPOSIUM, P7, DOI 10.1109/ATS47505.2019.000-8
   Pan R, 2022, PROC INT CONF SOFTW, P524, DOI 10.1145/3510003.3510051
   Pascanu R., 2013, ICML, P1310, DOI DOI 10.1007/S12088-011-0245-8
   Pei KX, 2017, PROCEEDINGS OF THE TWENTY-SIXTH ACM SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES (SOSP '17), P1, DOI 10.1145/3132747.3132785
   Peng BL, 2023, Arxiv, DOI [arXiv:2302.12813, DOI 10.48550/ARXIV.2302.12813]
   Prenner JA, 2022, INTERNATIONAL WORKSHOP ON AUTOMATED PROGRAM REPAIR (APR 2022), P69, DOI 10.1145/3524459.3527351
   Qian HJ, 2023, Arxiv, DOI arXiv:2304.04358
   Qiu HC, 2023, Arxiv, DOI arXiv:2307.08487
   Raffel C, 2020, J MACH LEARN RES, V21
   Rahman QM, 2021, IEEE ACCESS, V9, P20067, DOI 10.1109/ACCESS.2021.3055015
   Raj H, 2022, Arxiv, DOI arXiv:2211.05853
   Raunak V, 2021, 2021 CONFERENCE OF THE NORTH AMERICAN CHAPTER OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS: HUMAN LANGUAGE TECHNOLOGIES (NAACL-HLT 2021), P1172
   Ren J., 2023, P 11 INT C LEARN REP
   Ren XN, 2023, PROC INT CONF SOFTW, P1008, DOI 10.1109/ICSE48619.2023.00092
   Reynolds D.A., 2009, Encyclopedia of biometrics, V741, P659, DOI [DOI 10.1007/978-0-387-73003-5_196, DOI 10.1007/978-1-4899-7488-4_196]
   Ribeiro MT, 2016, KDD'16: PROCEEDINGS OF THE 22ND ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P1135, DOI 10.1145/2939672.2939778
   Riccio V, 2023, PROC INT CONF SOFTW, P1161, DOI 10.1109/ICSE48619.2023.00104
   Rohrbach A, 2018, 2018 CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING (EMNLP 2018), P4035
   Roziere B, 2024, Arxiv, DOI arXiv:2308.12950
   Santhanam S, 2022, Arxiv, DOI [arXiv:2110.05456, 10.48550/arXiv.2110.05456]
   Schumi R, 2023, Arxiv, DOI arXiv:2306.07995
   Schuster-Bockler Benjamin, 2007, Curr Protoc Bioinformatics, VAppendix 3, p3A, DOI [10.1109/MASSP.1986.1165342, 10.1002/0471250953.bia03as18]
   Semnani SJ, 2023, Arxiv, DOI arXiv:2305.14292
   Shen YQ, 2023, RADIOLOGY, V307, DOI 10.1148/radiol.230163
   ShengWang Zihao Zhao, 2023, arXiv, DOI DOI 10.48550/ARXIV.2302.07257
   Shi ES, 2022, PROC INT CONF SOFTW, P1597, DOI 10.1145/3510003.3510060
   Shi H, 2022, AAAI CONF ARTIF INTE, P8267
   Shi WJ, 2023, Arxiv, DOI [arXiv:2301.12652, DOI 10.48550/ARXIV.2301.12652]
   Siegelmann Hava T., 1992, P 5 ANN WORKSH COMP, P440, DOI DOI 10.1145/130385.130432
   Sobania D, 2023, Arxiv, DOI [arXiv:2301.08653, 10.48550/ARXIV.2301.08653, DOI 10.48550/ARXIV.2301.08653]
   Socher R, 2013, P 2013 C EMP METH NA, P935
   Sohn J, 2023, ACM T SOFTW ENG METH, V32, DOI 10.1145/3563210
   Song JY, 2023, IEEE T SOFTWARE ENG, V49, P4058, DOI 10.1109/TSE.2023.3282981
   Song XD, 2023, PROC IEEE ACM INT C, P98, DOI 10.1109/ICSE-Companion58688.2023.00033
   Sotoudeh A. V., 2019, P WORKSH SAF ROB DEC, P1
   Stocco A, 2022, IEEE INT CONF AUTOM, DOI 10.1145/3551349.3556968
   Stocco A, 2020, PROC INT CONF SOFTW, P359, DOI 10.1145/3377811.3380353
   Sun B, 2022, PROC INT CONF SOFTW, P338, DOI 10.1145/3510003.3510080
   Sun B, 2021, LECT NOTES COMPUT SC, V13047, P83, DOI 10.1007/978-3-030-90870-6_5
   Sun YC, 2019, Arxiv, DOI arXiv:1803.04792
   Svyatkovskiy A, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P1433, DOI 10.1145/3368089.3417058
   Szegedy C, 2014, Arxiv, DOI arXiv:1312.6199
   Tandon N., 2022, P FIND ASS COMP LING, P339
   Taori R., Stanford Alpaca: An Instruction-following LLaMA model
   Tay Y., 2023, P 11 INT C LEARN REP
   Taylor R., 2022, arXiv, DOI DOI 10.48550/ARXIV.2211.09085
   TERRELL GR, 1992, ANN STAT, V20, P1236, DOI 10.1214/aos/1176348768
   Thorne J., 2018, 2018 C N AM CHAPTER, DOI [DOI 10.18653/V1/N18-1074, 10.18653/v1/n18-1074]
   Tian YC, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P303, DOI 10.1145/3180155.3180220
   Tihanyi N, 2024, Arxiv, DOI [arXiv:2305.14752, 10.48550/arXiv.2305.14752]
   Touvron H, 2023, Arxiv, DOI [arXiv:2307.09288, DOI 10.48550/ARXIV.2307.09288]
   Touvron H, 2023, Arxiv, DOI [arXiv:2302.13971, DOI 10.48550/ARXIV.2302.13971]
   Vaithilingam P, 2022, EXTENDED ABSTRACTS OF THE 2022 CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, CHI 2022, DOI 10.1145/3491101.3519665
   Vaswani A, 2017, ADV NEUR IN, V30
   Vegetabile BG, 2019, J EDUC BEHAV STAT, V44, P282, DOI 10.3102/1076998618822540
   Wang B., 2021, P ADV NEUR INF PROC, P1
   Wang BX, 2024, Arxiv, DOI arXiv:2306.11698
   Wang BX, 2021, Arxiv, DOI arXiv:2010.02329
   Wang H, 2019, PR MACH LEARN RES, V97
   Wang JL, 2022, PROCEEDINGS OF THE 31ST ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, ISSTA 2022, P164, DOI 10.1145/3533767.3534386
   Wang JD, 2023, Arxiv, DOI arXiv:2302.12095
   Wang JJ, 2024, Arxiv, DOI arXiv:2307.07221
   Wang K., 2022, arXiv
   Wang X, 2021, ACL-IJCNLP 2021: THE JOINT CONFERENCE OF THE 59TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS AND THE 11TH INTERNATIONAL JOINT CONFERENCE ON NATURAL LANGUAGE PROCESSING: PROCEEDINGS OF THE SYSTEM DEMONSTRATIONS, P347
   Wang Y., 2021, arXiv
   Wang YZ, 2023, PROCEEDINGS OF THE 61ST ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (ACL 2023): LONG PAPERS, VOL 1, P13484
   Wang ZJ, 2023, PROCEEDINGS OF THE 2023 CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, CHI 2023, DOI 10.1145/3544548.3580852
   Wardat M, 2021, PROC INT CONF SOFTW, P251, DOI 10.1109/ICSE43902.2021.00034
   Wei B., 2019, Adv. Neural Inf. Process. Syst., P6559
   Wei H., 2023, ACM Trans. Softw. Eng.Methodol., V32, P1
   Wei Zeming, 2022, Formal Methods and Software Engineering: 23rd International Conference on Formal Engineering Methods, ICFEM 2022, Proceedings. Lecture Notes in Computer Science (13478), P370, DOI 10.1007/978-3-031-17244-1_22
   Wei ZM, 2023, Arxiv, DOI arXiv:2306.14040
   Weiss G., 2018, P MACH LEARN RES P 3, P5247
   Weiss G, 2018, PROCEEDINGS OF THE 56TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, VOL 2, P740
   Weiss Y., 2019, Adv. Neural Inf.Process. Syst., V32, P1
   Weng TW, 2018, Arxiv, DOI [arXiv:1801.10578, 10.48550/ARXIV.1801.10578, DOI 10.48550/ARXIV.1801.10578]
   Wu YH, 2023, Arxiv, DOI arXiv:2308.15276
   Xia CS, 2023, PROC INT CONF SOFTW, P1482, DOI 10.1109/ICSE48619.2023.00129
   Xia Chunqiu Steven, 2023, arXiv
   Xiao YJ, 2021, 16TH CONFERENCE OF THE EUROPEAN CHAPTER OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (EACL 2021), P2734
   Xie X., 2021, PMLR, P11383
   Xie XF, 2019, PROCEEDINGS OF THE 28TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA '19), P146, DOI 10.1145/3293882.3330579
   Xie X, 2023, Arxiv, DOI arXiv:2305.03882
   Xu Frank F., 2022, MAPS 2022: Proceedings of the 6th ACM SIGPLAN International Symposium on Machine Programming, P1, DOI 10.1145/3520312.3534862
   Yang Z, 2022, EUR CON SFTWR MTNCE, P408, DOI 10.1109/SANER53432.2022.00056
   Yu B, 2022, IEEE T RELIAB, V71, P1401, DOI 10.1109/TR.2021.3096332
   ZENG Z, 1993, NEURAL COMPUT, V5, P976, DOI 10.1162/neco.1993.5.6.976
   Zhang H, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P376, DOI 10.1109/ASE.2019.00043
   Zhang MS, 2018, IEEE INT CONF AUTOM, P132, DOI 10.1145/3238147.3238187
   Zhang S, 2024, Arxiv, DOI arXiv:2305.13669
   Zhang T Y, 2024, arXiv, DOI 10.48550/arXiv.2301.13848
   Zhang TH, 2023, Arxiv, DOI arXiv:2304.03728
   Zhang WX, 2023, Arxiv, DOI arXiv:2305.15005
   Zhang XY, 2021, AAAI CONF ARTIF INTE, V35, P11699
   Zhang Y., 2022, P 37 IEEE ACM INT C, P1
   Zhao RC, 2023, Arxiv, DOI arXiv:2304.11076
   Zhou CT, 2021, FINDINGS OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, ACL-IJCNLP 2021, P1393
   Zhou JY, 2020, PROC INT SYMP SOFTW, P289, DOI 10.1109/ISSRE5003.2020.00035
   Zhou YC, 2023, Arxiv, DOI [arXiv:2211.01910, DOI 10.48550/ARXIV.2211.01910, 10.48550/arXiv.2211.01910]
   Zhu DR, 2021, 2021 36TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING ASE 2021, P1003, DOI 10.1109/ASE51524.2021.9678871
   Zohdinasab T, 2023, PROCEEDINGS OF THE 32ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, ISSTA 2023, P954, DOI 10.1145/3597926.3598109
   Zohdinasab T, 2023, ACM T SOFTW ENG METH, V32, DOI 10.1145/3544792
   Zohdinasab T, 2021, ISSTA '21: PROCEEDINGS OF THE 30TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P79, DOI 10.1145/3460319.3464811
NR 253
TC 0
Z9 0
U1 0
U2 0
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUL
PY 2024
VL 50
IS 7
BP 1921
EP 1948
DI 10.1109/TSE.2024.3411928
PG 28
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA YZ0O5
UT WOS:001272193600014
DA 2024-08-05
ER

PT J
AU Weeraddana, N
   Alfadel, M
   McIntosh, S
AF Weeraddana, Nimmi
   Alfadel, Mahmoud
   McIntosh, Shane
TI Characterizing Timeout Builds in Continuous Integration
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Build systems; continuous integration; timeout builds; statistical
   models
ID PREDICTION; AGREEMENT; ERROR
AB Compute resources that enable Continuous Integration (CI, i.e., the automatic build and test cycle applied to the change sets that development teams produce) are a shared commodity that organizations need to manage. To prevent (erroneous) builds from consuming a large amount of resources, CI service providers often impose a time limit. CI builds that exceed the time limit are automatically terminated. While imposing a time limit helps to prevent abuse of the service, builds that timeout (a) consume the maximum amount of resources that a CI service is willing to provide and (b) leave CI users without an indication of whether the change set will pass or fail the CI process. Therefore, understanding timeout builds and the factors that contribute to them is important for improving the stability and quality of a CI service. In this paper, we investigate the prevalence of timeout builds and the characteristics associated with them. By analyzing a curated dataset of 936 projects that adopt the CircleCI service and report at least one timeout build, we find that the median duration of a timeout build (19.7 minutes) is more than five times that of a build that produces a pass or fail result (3.4 minutes). To better understand the factors contributing to timeout builds, we model timeout builds using characteristics of project build history, build queued time, timeout tendency, size, and author experience based on data collected from 105,663 CI builds. Our model demonstrates a discriminatory power that vastly surpasses that of a random predictor (Area Under the Receiver Operating characteristic Curve, i.e., $AUROC$AUROC = 0.939) and is highly stable in its performance ($AUROC$AUROC optimism = 0.0001). Moreover, our model reveals that the build history and timeout tendency features are strong indicators of timeout builds, with the timeout status of the most recent build accounting for the largest proportion of the explanatory power. A longitudinal analysis of the incidences of timeout builds (i.e., a study conducted over a period of time) indicates that 64.03% of timeout builds occur consecutively. In such cases, it takes a median of 24 hours before a build that passes or fails occurs. Our results imply that CI providers should exploit build history to anticipate timeout builds.
C1 [Weeraddana, Nimmi; Alfadel, Mahmoud; McIntosh, Shane] Univ Waterloo, Cheriton Sch Comp Sci, Waterloo, ON N2L 3G1, Canada.
C3 University of Waterloo
RP Weeraddana, N (corresponding author), Univ Waterloo, Cheriton Sch Comp Sci, Waterloo, ON N2L 3G1, Canada.
EM nrweeraddana@uwaterloo.ca; malfadel@uwaterloo.ca;
   shane.mcintosh@uwaterloo.ca
OI Alfadel, Mahmoud/0000-0002-2621-6104; , Nimmi/0009-0002-6550-4181
CR Abdalkareem R, 2021, IEEE T SOFTWARE ENG, V47, P448, DOI 10.1109/TSE.2019.2897300
   Bagherzadeh M, 2022, IEEE T SOFTWARE ENG, V48, P2836, DOI 10.1109/TSE.2021.3070549
   Balogun A. O., 2019, Software Defect Prediction: Analysis of Class Imbalance and Performance Stability
   Brier G.W., 1950, Monthly Weather Review, V78, P1, DOI DOI 10.1175/1520-0493(1950)0782.0.CO;2
   Cavalcanti G, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P1002, DOI 10.1109/ASE.2019.00097
   Chawla NV, 2002, J ARTIF INTELL RES, V16, P321, DOI 10.1613/jair.953
   Chen BH, 2020, IEEE INT CONF AUTOM, P42, DOI 10.1145/3324884.3416616
   COHEN J, 1968, PSYCHOL BULL, V70, P213, DOI 10.1037/h0026256
   Durieux T, 2020, IEEE WORK CONF MIN S, P254, DOI 10.1145/3379597.3387460
   Duvall PM, 2007, Continuous integration: improving software quality and reducing risk
   EFRON B, 1986, J AM STAT ASSOC, V81, P461, DOI 10.2307/2289236
   Eisenhauer J. G., 2011, Degrees of Freedom in Statistical Inference
   Elbaum S, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P235, DOI 10.1145/2635868.2635910
   Gallaba K, 2022, PROC INT CONF SOFTW, P1330, DOI 10.1145/3510003.3510211
   Gallaba K, 2020, IEEE T SOFTWARE ENG, V46, P33, DOI 10.1109/TSE.2018.2838131
   Ghaleb TA, 2023, IEEE T SOFTWARE ENG, V49, P2476, DOI 10.1109/TSE.2022.3222160
   Ghaleb TA, 2021, IEEE T SOFTWARE ENG, V47, P1998, DOI 10.1109/TSE.2019.2941880
   Ghaleb TA, 2019, EMPIR SOFTW ENG, V24, P2102, DOI 10.1007/s10664-019-09695-9
   Golzadeh M, 2022, EUR CON SFTWR MTNCE, P662, DOI 10.1109/SANER53432.2022.00084
   Gousios G, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P345, DOI 10.1145/2568225.2568260
   HANLEY JA, 1982, RADIOLOGY, V143, P29, DOI 10.1148/radiology.143.1.7063747
   Harrell F, 2001, Regression modeling strategies: with applications to linear models, logistic regression, and survival analysis
   HARRELL FE, 1984, STAT MED, V3, P143, DOI 10.1002/sim.4780030207
   HARRELL FE, 1985, CANCER TREAT REP, V69, P1071
   Hasanin T, 2018, 2018 IEEE INTERNATIONAL CONFERENCE ON INFORMATION REUSE AND INTEGRATION (IRI), P70, DOI 10.1109/IRI.2018.00018
   Hassan F, 2017, INT SYMP EMP SOFTWAR, P157, DOI 10.1109/ESEM.2017.23
   He HB, 2009, IEEE T KNOWL DATA EN, V21, P1263, DOI 10.1109/TKDE.2008.239
   Hilton M, 2016, IEEE INT CONF AUTOM, P426, DOI 10.1145/2970276.2970358
   Hilton Michael., 2016, CONTINUOUS INTEGRATI
   Jin XH, 2022, J SYST SOFTWARE, V188, DOI 10.1016/j.jss.2022.111292
   Jin XH, 2020, PROC INT CONF SOFTW, P13, DOI 10.1145/3377811.3380437
   LANDIS JR, 1977, BIOMETRICS, V33, P159, DOI 10.2307/2529310
   Lavery MR, 2019, COMMUN STAT-SIMUL C, V48, P27, DOI 10.1080/03610918.2017.1371750
   Liang JJ, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P688, DOI 10.1145/3180155.3180213
   Machalica M, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE (ICSE-SEIP 2019), P91, DOI 10.1109/ICSE-SEIP.2019.00018
   Maipradit R, 2023, IEEE INT CONF AUTOM, P153, DOI 10.1109/ASE56229.2023.00030
   McIntosh S, 2018, IEEE T SOFTWARE ENG, V44, P412, DOI 10.1109/TSE.2017.2693980
   McIntosh S, 2016, EMPIR SOFTW ENG, V21, P2146, DOI 10.1007/s10664-015-9381-9
   Pan C, 2021, ISSTA '21: PROCEEDINGS OF THE 30TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P553, DOI 10.1145/3460319.3464840
   Pearson K., 1894, Philosophical Transactions, V185a, P71, DOI 10.1098/rsta.1894.0003
   Prusa J, 2015, 2015 IEEE 16TH INTERNATIONAL CONFERENCE ON INFORMATION REUSE AND INTEGRATION, P197, DOI 10.1109/IRI.2015.39
   RAO JNK, 1981, J AM STAT ASSOC, V76, P221, DOI 10.2307/2287815
   Hansen NR, 2014, Arxiv, DOI arXiv:1402.2997
   Saidani I, 2022, AUTOMAT SOFTW ENG, V29, DOI 10.1007/s10515-021-00319-5
   Saidani I, 2020, INFORM SOFTWARE TECH, V128, DOI 10.1016/j.infsof.2020.106392
   Saito T, 2015, PLOS ONE, V10, DOI 10.1371/journal.pone.0118432
   Seaman CB, 1999, IEEE T SOFTWARE ENG, V25, P557, DOI 10.1109/32.799955
   Spearman Charles, 1961, The proof and measurement of association between two things
   Stahl D, 2013, P 12 IASTED INT C SO, P736, DOI [10.2316/P.2013.796-012, 10.2316/p.2013.796-012]
   Ståhl D, 2016, 2016 IEEE/ACM 38TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING COMPANION (ICSE-C), P270, DOI 10.1145/2889160.2889252
   Tan X, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P398, DOI 10.1145/3368089.3409746
   Tantithamthavorn C, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P812, DOI 10.1109/ICSE.2015.93
   Thomas SW, 2014, EMPIR SOFTW ENG, V19, P182, DOI 10.1007/s10664-012-9219-7
   Turing A., 1938, P LOND, V2, P265
   Vasilescu B, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P805, DOI 10.1145/2786805.2786850
   Vassallo C, 2019, PROC INT CONF SOFTW, P105, DOI 10.1109/ICSE.2019.00028
   Widder DG, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P647, DOI 10.1145/3338906.3338922
   Zampetti F, 2020, EMPIR SOFTW ENG, V25, P1095, DOI 10.1007/s10664-019-09785-8
   Zampetti F, 2019, 2019 IEEE 26TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER), P38, DOI [10.1109/SANER.2019.8667996, 10.1109/saner.2019.8667996]
NR 59
TC 0
Z9 0
U1 1
U2 1
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUN
PY 2024
VL 50
IS 6
BP 1450
EP 1463
DI 10.1109/TSE.2024.3387840
PG 14
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA UL2G2
UT WOS:001248142900008
OA Green Submitted
DA 2024-08-05
ER

PT J
AU Xu, QH
   Yue, T
   Ali, S
   Arratibel, M
AF Xu, Qinghua
   Yue, Tao
   Ali, Shaukat
   Arratibel, Maite
TI Pretrain, Prompt, and Transfer: Evolving Digital Twins for Time-to-Event
   Analysis in Cyber-Physical Systems
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Elevators; Uncertainty; Mathematical models; Digital twins; Tuning;
   Transfer learning; Training; Digital twin; transfer learning; prompt
   tuning; cyber-physical systems
AB Cyber-physicalnd systems (CPSs), e.g., elevators and autonomous driving systems, are progressively permeating our everyday lives. To ensure their safety, various analyses need to be conducted, such as anomaly detection and time-to-event analysis (the focus of this paper). Recently, it has been widely accepted that digital Twins (DTs) can be an efficient method to aid in developing, maintaining, and safe and secure operation of CPSs. However, CPSs frequently evolve, e.g., with new or updated functionalities, which demand their corresponding DTs be co-evolved, i.e., in synchronization with the CPSs. To that end, we propose a novel method, named PPT, utilizing an uncertainty-aware transfer learning for DT evolution. Specifically, we first pretrain PPT with a pretraining dataset to acquire generic knowledge about the CPSs, followed by adapting it to a specific CPS with the help of prompt tuning. Results highlight that PPT is effective in time-to-event analysis in both elevator and autonomous driving case studies, on average, outperforming a baseline method by 7.31 and 12.58 in terms of Huber loss, respectively. The experiment results also affirm the effectiveness of transfer learning, prompt tuning, and uncertainty quantification in terms of reducing Huber loss by at least 21.32, 3.14, and 4.08, respectively, in both case studies.
C1 [Xu, Qinghua; Yue, Tao; Ali, Shaukat] Simula Res Lab, N-0164 Oslo, Norway.
   [Xu, Qinghua] Univ Oslo, N-0313 Oslo, Norway.
   [Arratibel, Maite] Orona Grp, Hernani 20120, Basque Country, Spain.
C3 University of Oslo
RP Yue, T (corresponding author), Simula Res Lab, N-0164 Oslo, Norway.
EM qinghua@simula.no; taoyue@gmail.com; shaukat@simula.no;
   marratibel@orona-group.com
OI Yue, Tao/0000-0003-3262-5577; Ali, Shaukat/0000-0002-9979-3519
FU Norwegian Ministry of Education and Research
FX No Statement Available
CR Abdar M, 2021, INFORM FUSION, V76, P243, DOI 10.1016/j.inffus.2021.05.008
   Arcuri A, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1, DOI 10.1145/1985793.1985795
   Brown TB, 2020, Arxiv, DOI [arXiv:2005.14165, 10.48550/arXiv.2005.14165, DOI 10.48550/ARXIV.2005.14165]
   Becue A., 2018, P 14 IEEE INT WORKSH, P1
   Bitton R, 2018, LECT NOTES COMPUT SC, V11098, P533, DOI 10.1007/978-3-319-99073-6_26
   Catak FO, 2022, ACM T SOFTW ENG METH, V31, DOI 10.1145/3527451
   Chung Y., 2021, arXiv
   Damjanovic-Behrendt V, 2018, 2018 9TH INTERNATIONAL CONFERENCE ON INTELLIGENT SYSTEMS (IS), P272, DOI 10.1109/IS.2018.8710526
   Duan L., 2012, P 29 INT C MACHINE L, P667
   Eckhart M, 2018, CPSS'18: PROCEEDINGS OF THE 4TH ACM WORKSHOP ON CYBER-PHYSICAL SYSTEM SECURITY, P61, DOI 10.1145/3198458.3198464
   Eckhart M, 2018, ERCIM NEWS, P22
   El Saddik A, 2018, IEEE MULTIMEDIA, V25, P87, DOI 10.1109/MMUL.2018.023121167
   Farahani A., 2021, Advances in Data Science and Information Engineering, P877, DOI [10.1007/978-3-030-71704-965, DOI 10.1007/978-3-030-71704-9_65, DOI 10.1007/978-3-030-71704-965]
   Farahani A, 2020, Arxiv, DOI arXiv:2010.03978
   Gao XW, 2019, IEEE ACCESS, V7, P82512, DOI 10.1109/ACCESS.2019.2923640
   Gneiting T, 2007, J R STAT SOC B, V69, P243, DOI 10.1111/j.1467-9868.2007.00587.x
   Han LP, 2023, ACM T SOFTW ENG METH, V32, DOI 10.1145/3576041
   Humayed A, 2017, IEEE INTERNET THINGS, V4, P1802, DOI 10.1109/JIOT.2017.2703172
   Klir GJ, 2006, UNCERTAINTY AND INFORMATION: FOUNDATIONS OF GENERALIZED INFORMATION THEORY, P1
   Lee EA, 2010, DES AUT CON, P737
   Lee TK, 2019, ASIA-PAC NETW OPER M, DOI 10.23919/apnoms.2019.8892860
   Li K.-C., 2020, Recent Advances in Security, Privacy and Trust for Internet-of-Things (IoT) and Cyber-Physical System (CPS)
   Lin H., 2021, Ann. Nucl. Energy, V160, DOI [10.1016/j.anucene.2021.108362.17T, DOI 10.1016/J.ANUCENE.2021.108362.17T]
   Liu P., 2021, arXiv, DOI 10.48550/arXiv.2107.13586
   Liu X, 2022, PROCEEDINGS OF THE 60TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (ACL 2022): (SHORT PAPERS), VOL 2, P61
   Lu CJ, 2023, IEEE WORK CONF MIN S, P52, DOI 10.1109/MSR59073.2023.00020
   Lu CJ, 2023, IEEE T SOFTWARE ENG, V49, P384, DOI 10.1109/TSE.2022.3150788
   Lv C, 2018, IEEE T IND INFORM, V14, P3436, DOI 10.1109/TII.2017.2777460
   Meyer GP, 2021, PROC CVPR IEEE, P5257, DOI 10.1109/CVPR46437.2021.00522
   Musa AA, 2023, FUTURE INTERNET, V15, DOI 10.3390/fi15060199
   Nguyen C. V., 2020, P 37 INT C MACH LEAR
   Paszke A, 2019, ADV NEUR IN, V32
   Salakhutdinov R., 2008, ICML, P880, DOI DOI 10.1145/1390156.1390267
   Shin T, 2020, Arxiv, DOI arXiv:2010.15980
   Srivastava N, 2014, J MACH LEARN RES, V15, P1929
   Vaswani A, 2017, ADV NEUR IN, V30
   Wang KC, 2018, Arxiv, DOI arXiv:1806.10317
   Wang TX, 2023, COMPUT IND, V145, DOI 10.1016/j.compind.2022.103804
   Weiss M, 2022, Arxiv, DOI arXiv:2212.07118
   Wickramasinghe CS, 2018, IEEE IND ELEC, P745, DOI 10.1109/IECON.2018.8591773
   Xu QH, 2023, PROCEEDINGS OF THE 31ST ACM JOINT MEETING EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, ESEC/FSE 2023, P1867, DOI 10.1145/3611643.3613879
   Xu QH, 2023, ACM T SOFTW ENG METH, V32, DOI 10.1145/3582571
   Xu QH, 2022, PROCEEDINGS OF THE 30TH ACM JOINT MEETING EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, ESEC/FSE 2022, P1257, DOI 10.1145/3540250.3558957
   Xu QH, 2021, IEEE INT CONF SOFTW, P205, DOI 10.1109/ICST49551.2021.00031
   Yang YZ, 2016, INT C PATT RECOG, P2646, DOI 10.1109/ICPR.2016.7900034
   Yue T., 2021, Lecture Notes in Computer Science, V1247
   Yue T, 2023, IEEE INT CONF AUTOM, P1726, DOI 10.1109/ASE56229.2023.00022
   Zhang JM, 2022, IEEE T SOFTWARE ENG, V48, P1, DOI 10.1109/TSE.2019.2962027
   Zhang XH, 2023, IEEE T SOFTWARE ENG, V49, P991, DOI 10.1109/TSE.2022.3170122
   Zhang X, 2018, Arxiv, DOI arXiv:1811.00739
   Zhuang J., 2022, arXiv
NR 51
TC 0
Z9 0
U1 1
U2 1
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUN
PY 2024
VL 50
IS 6
BP 1464
EP 1477
DI 10.1109/TSE.2024.3388572
PG 14
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA UL2G2
UT WOS:001248142900015
OA Green Submitted
DA 2024-08-05
ER

PT J
AU Wang, JJ
   Huang, YC
   Chen, CY
   Liu, Z
   Wang, S
   Wang, Q
AF Wang, Junjie
   Huang, Yuchao
   Chen, Chunyang
   Liu, Zhe
   Wang, Song
   Wang, Qing
TI Software Testing With Large Language Models: Survey, Landscape, and
   Vision
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Pre-trained large language model; software testing; LLM; GPT
AB Pre-trained large language models (LLMs) have recently emerged as a breakthrough technology in natural language processing and artificial intelligence, with the ability to handle large-scale datasets and exhibit remarkable performance across a wide range of tasks. Meanwhile, software testing is a crucial undertaking that serves as a cornerstone for ensuring the quality and reliability of software products. As the scope and complexity of software systems continue to grow, the need for more effective software testing techniques becomes increasingly urgent, making it an area ripe for innovative approaches such as the use of LLMs. This paper provides a comprehensive review of the utilization of LLMs in software testing. It analyzes 102 relevant studies that have used LLMs for software testing, from both the software testing and LLMs perspectives. The paper presents a detailed discussion of the software testing tasks for which LLMs are commonly used, among which test case preparation and program repair are the most representative. It also analyzes the commonly used LLMs, the types of prompt engineering that are employed, as well as the accompanied techniques with these LLMs. It also summarizes the key challenges and potential opportunities in this direction. This work can serve as a roadmap for future research in this area, highlighting potential avenues for exploration, and identifying gaps in our current understanding of the use of LLMs in software testing.
C1 [Wang, Junjie; Huang, Yuchao; Liu, Zhe; Wang, Qing] Univ Chinese Acad Sci, Inst Software, Chinese Acad Sci, State Key Lab Intelligent Game, Beijing 100190, Peoples R China.
   [Chen, Chunyang] Tech Univ Munich, D-80333 Munich, Germany.
   [Wang, Song] York Univ, Toronto, ON M3J 1P, Canada.
C3 Chinese Academy of Sciences; University of Chinese Academy of Sciences,
   CAS; Institute of Software, CAS; Technical University of Munich; York
   University - Canada
RP Wang, JJ; Wang, Q (corresponding author), Univ Chinese Acad Sci, Inst Software, Chinese Acad Sci, State Key Lab Intelligent Game, Beijing 100190, Peoples R China.
EM junjie@iscas.ac.cn; yuchao2019@iscas.ac.cn; chunyang.chen@monash.edu;
   liuzhe2020@iscas.ac.cn; wangsong@yorku.ca; wq@iscas.ac.cn
OI Liu, Zhe/0000-0001-9709-8275; wang, jun jie/0000-0002-9941-6713; Chen,
   Chunyang/0000-0003-2011-9618
FU National Natural Science Foundation of China
FX No Statement Available
CR Ackerman G., P 2 INT FUZZ WORKSH
   Ahmad B, 2023, Arxiv, DOI arXiv:2302.01215
   Alagarsamy S, 2023, Arxiv, DOI arXiv:2302.10352
   Android Developers, 2012, Ui/application exerciser monkey
   Bajammal M, 2022, IEEE T SOFTWARE ENG, V48, P1722, DOI 10.1109/TSE.2020.3032986
   Barr ET, 2015, IEEE T SOFTWARE ENG, V41, P507, DOI 10.1109/TSE.2014.2372785
   Bei Chen, 2022, Arxiv, DOI arXiv:2207.10397
   Bhatia S, 2024, Arxiv, DOI arXiv:2312.10622
   Brownlee AEI, 2024, LECT NOTES COMPUT SC, V14415, P153, DOI 10.1007/978-3-031-48796-5_13
   Bui NDQ, 2022, Arxiv, DOI arXiv:2211.14875
   Cao JL, 2023, Arxiv, DOI arXiv:2304.08191
   Chen XY, 2023, Arxiv, DOI arXiv:2304.05128
   Chen YH, 2024, Arxiv, DOI arXiv:2305.04764
   Ciniselli M, 2022, IEEE WORK CONF MIN S, P167, DOI 10.1145/3524842.3528440
   Dakhel AM, 2023, Arxiv, DOI [arXiv:2308.16557, 10.48550/arXiv.2308.16557]
   Delgado-Pérez P, 2023, IEEE T SOFTWARE ENG, V49, P2580, DOI 10.1109/TSE.2022.3227418
   Deligiannis P, 2023, Arxiv, DOI [arXiv:2308.05177, 10.48550/arXiv.2308.05177]
   Deng GL, 2024, Arxiv, DOI arXiv:2308.06782
   Deng J. Yao, 2023, Target: Au-tomated scenario generation from traffic rules for testing autonomousvehicles
   Deng YL, 2023, Arxiv, DOI [arXiv:2304.02014, DOI 10.48550/ARXIV.2304.02014]
   Dong YH, 2024, Arxiv, DOI arXiv:2304.07590
   Dong Z, 2020, PROC INT CONF SOFTW, P481, DOI 10.1145/3377811.3380402
   Erhabor D, 2023, Arxiv, DOI arXiv:2305.06439
   Fakhoury S, 2023, Arxiv, DOI arXiv:2304.03816
   Fan AEL, 2023, Arxiv, DOI arXiv:2310.03533
   Fan ZY, 2022, Arxiv, DOI arXiv:2205.10583
   Farrell-Vinay P., 2008, MANAGE SOFTWARE TEST
   Feng SD, 2024, Arxiv, DOI arXiv:2306.01987
   Fu M, 2022, PROCEEDINGS OF THE 30TH ACM JOINT MEETING EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, ESEC/FSE 2022, P935, DOI 10.1145/3540250.3549098
   Gao SZ, 2023, IEEE INT CONF AUTOM, P761, DOI 10.1109/ASE56229.2023.00109
   Garg S, 2024, Arxiv, DOI arXiv:2306.17077
   Guilherme VH, 2023, PROCEEDINGS OF THE 8TH BRAZILIAN SYMPOSIUM ON SYSTEMATIC AND AUTOMATED SOFT-WARE TESTING, SAST 2023, P15, DOI 10.1145/3624032.3624035
   Guo D., 2021, PROC 9 INT C LEARN R
   Guo QY, 2020, IEEE INT CONF AUTOM, P486, DOI 10.1145/3324884.3416571
   Haque MMA, 2023, 2023 IEEE/ACM INTERNATIONAL WORKSHOP ON AUTOMATED PROGRAM REPAIR, APR, P11, DOI 10.1109/APR59189.2023.00009
   Harman M, 2010, IEEE T SOFTWARE ENG, V36, P226, DOI 10.1109/TSE.2009.71
   He YY, 2020, P IEEE S SECUR PRIV, P1071, DOI 10.1109/SP40000.2020.00071
   Horváth D, 2023, 2023 IEEE/ACM INTERNATIONAL WORKSHOP ON AUTOMATED PROGRAM REPAIR, APR, P31, DOI 10.1109/APR59189.2023.00013
   Hou XY, 2024, Arxiv, DOI arXiv:2308.10620
   Hu J, 2023, Arxiv, DOI arXiv:2306.06782
   Hu Yaojie, 2022, Fix bugs with transformer through a neural-symbolic edit grammar
   Huang K, 2023, IEEE INT CONF AUTOM, P1162, DOI 10.1109/ASE56229.2023.00181
   Huang Y., 2023, arXiv, DOI DOI 10.48550/ARXIV.2310.07128
   Jiang JJ, 2018, ISSTA'18: PROCEEDINGS OF THE 27TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P298, DOI 10.1145/3213846.3213871
   Jiang N, 2023, Arxiv, DOI arXiv:2302.05020
   Jin M, 2023, Arxiv, DOI arXiv:2303.07263
   Kang S, 2024, Arxiv, DOI arXiv:2308.05487
   Kang SM, 2023, Arxiv, DOI arXiv:2304.02195
   Kang SM, 2022, Arxiv, DOI arXiv:2209.11515
   Khanfir A., 2023, arXiv
   Kocielnik R., 2023, arXiv, DOI [10.48550/arXiv.2302.07371, DOI 10.48550/ARXIV.2302.07371]
   Kojima T., 2022, P NEURIPS
   Lahiri SK, 2023, Arxiv, DOI arXiv:2208.05950
   Lajkó M, 2022, INTERNATIONAL WORKSHOP ON AUTOMATED PROGRAM REPAIR (APR 2022), P61, DOI 10.1145/3524459.3527350
   langchain, Langchain, Inc.
   Lemieux C, 2023, PROC INT CONF SOFTW, P919, DOI 10.1109/ICSE48619.2023.00085
   Li J, 2023, PROC INT CONF SOFTW, P2124, DOI 10.1109/ICSE48619.2023.00179
   Li J, 2023, Arxiv, DOI arXiv:2305.06599
   Li J, 2023, Arxiv, DOI arXiv:2303.17780
   Li TO, 2023, IEEE INT CONF AUTOM, P14, DOI 10.1109/ASE56229.2023.00089
   Li V, 2023, Arxiv, DOI [arXiv:2310.00483, 10.48550/arXiv.2310.00483]
   Li YC, 2017, PROC IEEE ACM INT C, P23, DOI 10.1109/ICSE-C.2017.8
   Liu Z., 2023, P ACM WEB C 2023 SER, P417, DOI DOI 10.1145/3543507.3583386
   Liu Z, 2023, Arxiv, DOI arXiv:2310.15657
   Liu Z, 2023, Arxiv, DOI [arXiv:2310.15780, 10.48550/arXiv.2310.15780, DOI 10.48550/ARXIV.2310.15780]
   Liu Z, 2022, Arxiv, DOI arXiv:2212.04732
   Lukasczyk S, 2022, PROC IEEE ACM INT C, P168, DOI [10.1109/ICSE-Companion55297.2022.9793730, 10.1145/3510454.3516829]
   Luu QH, 2023, Arxiv, DOI [arXiv:2310.19204, 10.48550/arXiv.2310.19204, DOI 10.48550/ARXIV.2310.19204]
   Mahbub P, 2023, Arxiv, DOI arXiv:2212.04584
   Mastropaolo A, 2023, IEEE T SOFTWARE ENG, V49, P1580, DOI 10.1109/TSE.2022.3183297
   Mastropaolo A, 2021, PROC INT CONF SOFTW, P336, DOI 10.1109/ICSE43902.2021.00041
   Mathur A., 2023, 2023 9 INT C ADV COM, P1986, DOI [10.1109/ICACCS57279.2023.10112971, DOI 10.1109/ICACCS57279.2023.10112971]
   Microsoft, Loadrunner, Inc.
   Mili A., 2015, Software Testing: Concepts and Operations
   Minxue Pan, 2020, ISSTA '20: Proceedings of the 29th ACM SIGSOFT International Symposium on Software Testing and Analysis, P153, DOI 10.1145/3395363.3397354
   Moon S, 2024, Arxiv, DOI arXiv:2311.07215
   Mukherjee U, 2023, Arxiv, DOI arXiv:2304.12494
   Myers G, 1979, Art of Software Testing
   Nashid N, 2023, PROC INT CONF SOFTW, P2450, DOI 10.1109/ICSE48619.2023.00205
   Nie PY, 2023, Arxiv, DOI arXiv:2302.10166
   Pacheco C, 2007, PROC INT CONF SOFTW, P75
   Pan SR, 2024, Arxiv, DOI arXiv:2306.08302
   Pearce B., 2022, P IEEE S SEC PRIV SP, P1
   Peng Y, 2023, Arxiv, DOI arXiv:2306.01394
   Pezze Mauro, 2007, Software Testing and Analysis: Process, Principles and Techniques
   Plein L, 2023, Arxiv, DOI [arXiv:2310.06310, DOI 10.48550/ARXIV.2310.06310, 10.48550/arXiv.2310.06310]
   Plein L, 2023, Arxiv, DOI [arXiv:2310.06320, 10.48550/arXiv.2310.06320, DOI 10.48550/ARXIV.2310.06320]
   Prenner JA, 2023, Arxiv, DOI arXiv:2312.04986
   Prenner JA, 2022, INTERNATIONAL WORKSHOP ON AUTOMATED PROGRAM REPAIR (APR 2022), P69, DOI 10.1145/3524459.3527351
   Prompt Engineering, GitHub
   Rao N, 2023, IEEE INT CONF AUTOM, P409, DOI 10.1109/ASE56229.2023.00193
   Ribeiro F, 2023, PROCEEDINGS OF THE 16TH ACM SIGPLAN INTERNATIONAL CONFERENCE ON SOFTWARE LANGUAGE ENGINEERING, SLE 2023, P111, DOI 10.1145/3623476.3623522
   Ribeiro F, 2022, INTERNATIONAL WORKSHOP ON AUTOMATED PROGRAM REPAIR (APR 2022), P38, DOI 10.1145/3524459.3527347
   Schafer M, 2024, IEEE T SOFTWARE ENG, V50, P85, DOI 10.1109/TSE.2023.3334955
   Shanahan M, 2022, Arxiv, DOI [arXiv:2212.03551, DOI 10.48550/ARXIV.2212.03551]
   Shi L, 2021, 2021 36TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING ASE 2021, P142, DOI 10.1109/ASE51524.2021.9678894
   Shin J, 2024, Arxiv, DOI [arXiv:2308.08033, DOI 10.48550/ARXIV.2308.08033]
   Shrestha SL, 2021, PROCEEDINGS OF EVALUATION AND ASSESSMENT IN SOFTWARE ENGINEERING (EASE 2021), P260, DOI 10.1145/3463274.3463806
   Siddiq ML, 2024, Arxiv, DOI arXiv:2305.00418
   Sobania D, 2023, Arxiv, DOI [arXiv:2301.08653, 10.48550/ARXIV.2301.08653, DOI 10.48550/ARXIV.2301.08653]
   Song SZ, 2023, Arxiv, DOI arXiv:2311.07594
   Song W., 2023, arXiv
   Steenhoek B, 2023, Arxiv, DOI arXiv:2310.02368
   Su T, 2021, PROCEEDINGS OF THE 29TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '21), P119, DOI 10.1145/3468264.3468620
   Su T, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P245, DOI 10.1145/3106237.3106298
   Su YQ, 2023, INT C PROGRAM COMPRE, P316, DOI 10.1109/ICPC58990.2023.00046
   Sun ML, 2023, IEEE INT CONF AUTOM, P1288, DOI 10.1109/ASE56229.2023.00180
   Sun ZS, 2022, PROC INT CONF SOFTW, P1609, DOI 10.1145/3510003.3510160
   Taeb M, 2024, Arxiv, DOI arXiv:2310.02424
   Taesiri M. R., 2022, arXiv
   Tang Yutian, 2023, arXiv
   Taylor A., 2023, DCC-Help:Generating context-aware compilererror explanations with large lan-guage models
   Tihanyi N, 2024, Arxiv, DOI [arXiv:2305.14752, 10.48550/arXiv.2305.14752]
   Treude C, 2023, Arxiv, DOI arXiv:2303.10131
   Tsigkanos Christos, 2023, Computational Science - ICCS 2023: 23rd International Conference, Proceedings. Lecture Notes in Computer Science (14073), P321, DOI 10.1007/978-3-031-35995-8_23
   Tsigkanos C, 2023, Soft Anal Evol Reeng, P678, DOI 10.1109/SANER56733.2023.00070
   Tu FF, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P307, DOI 10.1145/3236024.3236054
   Tu HX, 2024, Arxiv, DOI [arXiv:2307.00593, 10.48550/arXiv.2307.00593, DOI 10.48550/ARXIV.2307.00593]
   Tufano M, 2021, Arxiv, DOI arXiv:2009.05617
   Tufano M, 2022, 3RD ACM/IEEE INTERNATIONAL CONFERENCE ON AUTOMATION OF SOFTWARE TEST (AST 2022), P54, DOI 10.1145/3524481.3527220
   Vikram V, 2024, Arxiv, DOI [arXiv:2307.04346, 10.48550/arXiv.2307.04346, DOI 10.48550/ARXIV.2307.04346]
   Wadhwa N, 2023, Arxiv, DOI arXiv:2309.12938
   Wang SM, 2023, IEEE T SOFTWARE ENG, V49, P1188, DOI 10.1109/TSE.2022.3173346
   Wang WS, 2023, PROCEEDINGS OF THE 31ST ACM JOINT MEETING EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, ESEC/FSE 2023, P146, DOI 10.1145/3611643.3616256
   Wang Z, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P788, DOI 10.1145/3368089.3409761
   Watson C, 2022, ACM T SOFTW ENG METH, V31, DOI 10.1145/3485275
   Watson C, 2020, PROC INT CONF SOFTW, P1398, DOI 10.1145/3377811.3380429
   Wei AJ, 2022, PROC INT CONF SOFTW, P995, DOI 10.1145/3510003.3510041
   Wei J., 2022, P NEURIPS
   Wei Y., 2023, P 31 ACM JOINT EUR S
   Wen M, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1, DOI 10.1145/3180155.3180233
   Widjojo P, 2023, Arxiv, DOI arXiv:2307.10793
   Wohlin C., 2014, P 18 INT C EV ASS SO, P1, DOI [DOI 10.1145/2601248.2601268, 10.1145/2601248.2601268]
   Wu Y, 2024, Arxiv, DOI arXiv:2305.18607
   Wu YH, 2023, Arxiv, DOI arXiv:2308.15276
   Wuisang Marchel Christhoper, 2023, 2023 International Seminar on Application for Technology of Information and Communication (iSemantic), P295, DOI 10.1109/iSemantic59612.2023.10295323
   Xia CS, 2023, Arxiv, DOI arXiv:2304.00385
   Xia Chunqiu Steven, 2022, arXiv
   Xia M., 2023, Universalfuzzing via large language models
   Xiao XS, 2013, IEEE INT CONF AUTOM, P246, DOI 10.1109/ASE.2013.6693084
   Xie DN, 2022, PROCEEDINGS OF THE 31ST ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, ISSTA 2022, P176, DOI 10.1145/3533767.3534220
   Xiong YF, 2017, PROC INT CONF SOFTW, P416, DOI 10.1109/ICSE.2017.45
   Xuan JF, 2017, IEEE T SOFTWARE ENG, V43, P34, DOI 10.1109/TSE.2016.2560811
   Yang AZH, 2023, Arxiv, DOI [arXiv:2310.01726, 10.48550/arXiv.2310.01726]
   Yang CY, 2023, Arxiv, DOI [arXiv:2310.15991, 10.48550/arXiv.2310.15991]
   Yang YM, 2022, ACM COMPUT SURV, V54, DOI 10.1145/3505243
   Ye GX, 2021, PROCEEDINGS OF THE 42ND ACM SIGPLAN INTERNATIONAL CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION (PLDI '21), P435, DOI 10.1145/3453483.3454054
   Yetistiren B, 2023, Arxiv, DOI [arXiv:2304.10778, DOI 10.48550/ARXIV.2304.10778]
   Yu FS, 2016, Arxiv, DOI arXiv:1506.03365
   Yu SC, 2023, Arxiv, DOI arXiv:2309.13574
   Yuan W, 2022, PROCEEDINGS OF THE 31ST ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, ISSTA 2022, P678, DOI 10.1145/3533767.3534219
   Yuan ZQ, 2023, Arxiv, DOI arXiv:2305.04207
   Zan DG, 2023, PROCEEDINGS OF THE 61ST ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, ACL 2023, VOL 1, P7443
   Zhang C, 2024, Arxiv, DOI arXiv:2307.12469
   Zhang J., 2022, arXiv
   Zhang JM, 2022, IEEE T SOFTWARE ENG, V48, P1, DOI 10.1109/TSE.2019.2962027
   Zhang QJ, 2023, Arxiv, DOI [arXiv:2308.12533, 10.48550/arXiv.2308.12533, DOI 10.48550/ARXIV.2308.12533]
   Zhang T, 2022, PROCEEDINGS OF THE 30TH ACM JOINT MEETING EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, ESEC/FSE 2022, P1637, DOI 10.1145/3540250.3558934
   Zhang T, 2024, Arxiv, DOI arXiv:2308.10022
   Zhang YW, 2023, Arxiv, DOI arXiv:2308.14460
   Zhang YW, 2023, Arxiv, DOI arXiv:2305.09315
   Zhang ZS, 2024, Arxiv, DOI [arXiv:2302.00923, DOI 10.48550/ARXIV.2302.00923]
   Zhao WX, 2023, Arxiv, DOI arXiv:2303.18223
   Zimmermann D, 2023, IEEE ICST WORKSHOP, P62, DOI 10.1109/ICSTW58534.2023.00022
NR 164
TC 1
Z9 1
U1 19
U2 19
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD APR
PY 2024
VL 50
IS 4
BP 911
EP 936
DI 10.1109/TSE.2024.3368208
PG 26
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA OC2K3
UT WOS:001204993400011
OA Green Submitted
DA 2024-08-05
ER

PT J
AU Tufano, R
   Dabic, O
   Mastropaolo, A
   Ciniselli, M
   Bavota, G
AF Tufano, Rosalia
   Dabic, Ozren
   Mastropaolo, Antonio
   Ciniselli, Matteo
   Bavota, Gabriele
TI Code Review Automation: Strengths and Weaknesses of the State of the Art
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Review
DE Automated code review; empirical study
ID RECOMMENDATION
AB The automation of code review has been tackled by several researchers with the goal of reducing its cost. The adoption of deep learning in software engineering pushed the automation to new boundaries, with techniques imitating developers in generative tasks, such as commenting on a code change as a reviewer would do or addressing a reviewer's comment by modifying code. The performance of these techniques is usually assessed through quantitative metrics, e.g., the percentage of instances in the test set for which correct predictions are generated, leaving many open questions on the techniques' capabilities. For example, knowing that an approach is able to correctly address a reviewer's comment in 10% of cases is of little value without knowing what was asked by the reviewer: What if in all successful cases the code change required to address the comment was just the removal of an empty line? In this paper we aim at characterizing the cases in which three code review automation techniques tend to succeed or fail in the two above-described tasks. The study has a strong qualitative focus, with similar to 105 man-hours of manual inspection invested in manually analyzing correct and wrong predictions generated by the three techniques, for a total of 2,291 inspected predictions. The output of this analysis are two taxonomies reporting, for each of the two tasks, the types of code changes on which the experimented techniques tend to succeed or to fail, pointing to areas for future work. A result of our manual analysis was also the identification of several issues in the datasets used to train and test the experimented techniques. Finally, we assess the importance of researching in techniques specialized for code review automation by comparing their performance with ChatGPT, a general purpose large language model, finding that ChatGPT struggles in commenting code as a human reviewer would do.
C1 [Tufano, Rosalia; Dabic, Ozren; Mastropaolo, Antonio; Ciniselli, Matteo; Bavota, Gabriele] Univ Svizzera Italiana, SEART Software Inst, CH-6900 Lugano, Switzerland.
C3 Universita della Svizzera Italiana
RP Bavota, G (corresponding author), Univ Svizzera Italiana, SEART Software Inst, CH-6900 Lugano, Switzerland.
EM rosalia.tufano@usi.ch; ozren.dabic@usi.ch; antonio.mastropaolo@usi.ch;
   matteo.ciniselli@usi.ch; gabriele.bavota@usi.ch
OI Tufano, Rosalia/0009-0009-7017-3066; BAVOTA,
   Gabriele/0000-0002-2216-3148; Ciniselli, Matteo/0000-0002-0251-4473;
   Dabic, Ozren/0009-0008-1670-7592; Mastropaolo,
   Antonio/0000-0002-7965-7712
FU European Research Council (ERC) through the European Union#x2019;s
   Horizon 2020
FX No Statement Available
CR Al-Zubaidi WHA, 2020, PROCEEDINGS OF THE 16TH ACM INTERNATIONAL CONFERENCE ON PREDICTIVE MODELS AND DATA ANALYTICS IN SOFTWARE ENGINEERING, PROMISE 2020, P21, DOI 10.1145/3416508.3417115
   Alon U, 2019, P ACM PROGRAM LANG, V3, DOI 10.1145/3290353
   [Anonymous], Copilot website
   [Anonymous], ChatGPT
   Asthana S, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P937, DOI 10.1145/3338906.3340449
   Bacchelli A, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P712, DOI 10.1109/ICSE.2013.6606617
   Bavota G, 2015, PROC IEEE INT CONF S, P81, DOI 10.1109/ICSM.2015.7332454
   Beller M., 2014, 11 WORKING C MINING, P202, DOI DOI 10.1145/2597073.2597082
   Bosu Amiangshu, 2013, 2013 ACM / IEEE International Symposium on Empirical Software Engineering and Measurement (ESEM), P133, DOI 10.1109/ESEM.2013.23
   Chouchen M, 2021, APPL SOFT COMPUT, V100, DOI 10.1016/j.asoc.2020.106908
   Coxon A., 1999, Sorting data
   Falleri Jean-Remy, 2014, P 29 ACM IEEE INT C
   Fraser G, 2011, P 19 ACM SIGSOFT S 1, P416, DOI 10.1145/2025113.2025179
   GitHub, ABOUT US
   Grissom R. J., 2005, Effect Sizes for Research: A Broad Practical Approach, DOI DOI 10.4324/9781410612915
   HOLM S, 1979, SCAND J STAT, V6, P65
   Hong Y, 2022, PROCEEDINGS OF THE 30TH ACM JOINT MEETING EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, ESEC/FSE 2022, P507, DOI 10.1145/3540250.3549119
   Jiang J, 2019, J SYST SOFTWARE, V154, P196, DOI 10.1016/j.jss.2019.04.055
   Jiang J, 2017, INFORM SOFTWARE TECH, V84, P48, DOI 10.1016/j.infsof.2016.10.006
   Kudo T, 2018, CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING (EMNLP 2018): PROCEEDINGS OF SYSTEM DEMONSTRATIONS, P66
   Li LW, 2022, PROCEEDINGS OF THE 30TH ACM JOINT MEETING EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, ESEC/FSE 2022, P1009, DOI 10.1145/3540250.3549099
   Li ZY, 2022, PROCEEDINGS OF THE 30TH ACM JOINT MEETING EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, ESEC/FSE 2022, P1035, DOI 10.1145/3540250.3549081
   Mäntylä MV, 2009, IEEE T SOFTWARE ENG, V35, P430, DOI 10.1109/TSE.2008.71
   Mastropaolo A, 2023, PROC INT CONF SOFTW, P2149, DOI 10.1109/ICSE48619.2023.00181
   Mastropaolo A, 2022, PROC INT CONF SOFTW, P2279, DOI 10.1145/3510003.3511561
   McIntosh S., 2014, P 11 WORKING C MININ, P192, DOI DOI 10.1145/2597073.2597076
   Mirsaeedi E, 2020, PROC INT CONF SOFTW, P1183, DOI 10.1145/3377811.3380335
   Morales R, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P171, DOI 10.1109/SANER.2015.7081827
   Ouni A, 2016, PROC IEEE INT CONF S, P367, DOI 10.1109/ICSME.2016.65
   Pacheco C, 2007, COMP 22 ACM SIGPLAN, P815
   Papineni K, 2002, 40TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, PROCEEDINGS OF THE CONFERENCE, P311, DOI 10.3115/1073083.1073135
   Pascarella Luca, 2018, Proceedings of the ACM on Human-Computer Interaction, V2, DOI 10.1145/3274404
   Prettier, About us
   Raffel C, 2020, J MACH LEARN RES, V21
   Rahman MM, 2016, 2016 IEEE/ACM 38TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING COMPANION (ICSE-C), P222, DOI 10.1145/2889160.2889244
   Rigby P. C., 2013, P ESEC FSE, P202, DOI DOI 10.1145/2491411.2491444
   Rigby PC, 2014, ACM T SOFTW ENG METH, V23, DOI 10.1145/2594458
   Rosner B., 2011, Fundamentals of Biostatistics/Bernard Rosner, VVolume 1
   Sadowski C, 2018, 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING - SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2018), P181, DOI 10.1145/3183519.3183525
   Shi ST, 2019, AAAI CONF ARTIF INTE, P4910
   Strand A, 2020, 2020 IEEE/ACM 42ND INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE (ICSE-SEIP), P1, DOI 10.1145/3377813.3381365
   Thongtanunam P, 2022, PROC INT CONF SOFTW, P237, DOI 10.1145/3510003.3510067
   Thongtanunam P, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P141, DOI 10.1109/SANER.2015.7081824
   Tian FW, 2022, PROC IEEE INT CONF S, P374, DOI 10.1109/ICSME55016.2022.00042
   Tsantalis N, 2022, IEEE T SOFTWARE ENG, V48, P930, DOI 10.1109/TSE.2020.3007722
   Tufano M, 2019, ACM T SOFTW ENG METH, V28, DOI 10.1145/3340544
   Tufano M, 2019, PROC INT CONF SOFTW, P25, DOI 10.1109/ICSE.2019.00021
   Tufano R, 2022, PROC INT CONF SOFTW, P2291, DOI 10.1145/3510003.3510621
   Tufano R, 2021, PROC INT CONF SOFTW, P163, DOI 10.1109/ICSE43902.2021.00027
   Wei JS, 2022, ADV NEUR IN
   WILCOXON F, 1946, J ECON ENTOMOL, V39, P269, DOI 10.1093/jee/39.2.269
   Xia X, 2015, PROC IEEE INT CONF S, P261, DOI 10.1109/ICSM.2015.7332472
   Xia ZL, 2017, 6TH INTERNATIONAL WORKSHOP ON SOFTWARE MINING (SOFTWAREMINING), P24, DOI 10.1109/SOFTWAREMINING.2017.8100850
   Ying HC, 2016, 2016 IEEE/ACM 3RD INTERNATIONAL WORKSHOP ON CROWDSOURCING IN SOFTWARE ENGINEERING (CSI-SE), P29, DOI [10.1109/CSI-SE.2016.013, 10.1145/2897659.2897660]
   Yu SW, 2022, J SYST SOFTWARE, V190, DOI 10.1016/j.jss.2022.111304
   Yu Y, 2016, INFORM SOFTWARE TECH, V74, P204, DOI 10.1016/j.infsof.2016.01.004
   Zanjani MB, 2016, IEEE T SOFTWARE ENG, V42, P530, DOI 10.1109/TSE.2015.2500238
NR 57
TC 3
Z9 3
U1 4
U2 4
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD FEB
PY 2024
VL 50
IS 2
BP 338
EP 353
DI 10.1109/TSE.2023.3348172
PG 16
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA IP4I9
UT WOS:001167516600004
OA Green Submitted
DA 2024-08-05
ER

PT J
AU Shen, YC
   Breaux, T
AF Shen, Yuchen
   Breaux, Travis
TI Stakeholder Preference Extraction From Scenarios
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Requirements engineering; elicitation; stakeholder preferences; natural
   language processing
ID NAMED-ENTITY RECOGNITION; REQUIREMENTS; INFORMATION; PERSONALIZATION;
   AGREEMENT; MODELS
AB Companies use personalization to tailor user experiences. Personalization appears in search engines and online stores, which include salutations and statistically learned correlations over search-, browsing- and purchase-histories. However, users have a wider variety of substantive, domain-specific preferences that affect their choices when they use directory services, and these have largely been overlooked or ignored. The contributions of this paper include: (1) a grounded theory describing how stakeholder preferences are expressed in text scenarios; (2) an app feature survey to assess whether elicited preferences represent missing requirements in existing systems; (3) an evaluation of three classifiers to label preference words in scenarios; and (4) a linker to build preference phrases by linking labeled preference words to each other based on word position. In this study, the authors analyzed 217 elicited directory service scenarios across 12 domain categories to yield a total of 7,661 stakeholder preferences labels. The app survey yielded 43 stakeholder preferences that were missed on average 49.7% by 15 directory service websites studied. The BERT-based transformer showed the best average overall 81.1% precision, 84.4% recall and 82.6% F1-score when tested on unseen domains. Finally, the preference linker correctly links preference phrases with 90.1% accuracy. Given these results, we believe directory service developers can use this approach to automatically identify user preferences to improve service designs.
C1 [Shen, Yuchen; Breaux, Travis] Carnegie Mellon Univ, Software & Societal Syst Dept, Pittsburgh, PA 15217 USA.
C3 Carnegie Mellon University
RP Shen, YC (corresponding author), Carnegie Mellon Univ, Software & Societal Syst Dept, Pittsburgh, PA 15217 USA.
EM yuchens2@andrew.cmu.edu; breaux@cs.cmu.edu
OI Breaux, Travis/0000-0001-7127-8155
FU NSF
FX No Statement Available
CR Abualhaija S, 2020, EMPIR SOFTW ENG, V25, P5454, DOI 10.1007/s10664-020-09864-1
   [Anonymous], 1999, P 1 ACM C EL COMM
   [Anonymous], 2006, Constructing grounded theory
   [Anonymous], Global fast facts (As of Q4 2019)
   Arora C, 2019, EMPIR SOFTW ENG, V24, P2509, DOI 10.1007/s10664-019-09693-x
   Arora C, 2016, 19TH ACM/IEEE INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS'16), P250, DOI 10.1145/2976767.2976769
   Artstein R, 2008, COMPUT LINGUIST, V34, P555, DOI 10.1162/coli.07-034-R2
   Boehm B., 2003, BALANCING AGILITY DI
   BOUSFIELD WA, 1950, J EXP PSYCHOL, V40, P643, DOI 10.1037/h0059019
   Brewer D.D., 2002, FIELD METHOD, V14, P108, DOI [DOI 10.1177/1525822X02014001007, 10.1177/1525822X02014001007]
   Brin S, 1999, LECT NOTES COMPUT SC, V1590, P172
   Broy M.:., 2013, PERSPECTIVES FUTURE, P15
   Chiu JP., 2016, T ASS COMPUTATIONAL, V4, P357, DOI [DOI 10.1162/TACLA00104, 10.1162/tacl_a_00104, DOI 10.1162/TACL_A_00104]
   CORTES C, 1995, MACH LEARN, V20, P273, DOI 10.1007/BF00994018
   Dalpiaz F, 2019, INT REQUIR ENG CONF, P142, DOI 10.1109/RE.2019.00025
   DARDENNE A, 1993, SCI COMPUT PROGRAM, V20, P3, DOI 10.1016/0167-6423(93)90021-G
   Davis S.M., 1987, FUTURE PERFECT
   De Marneffe Marie-Catherine, 2006, Lrec, V6, P449
   Detweiler C., 2014, P REFSQ WORKSH, P2
   Devlin J, 2019, Arxiv, DOI arXiv:1810.04805
   figshare, Data and tools for our work
   Fink J, 2000, USER MODEL USER-ADAP, V10, P209, DOI 10.1023/A:1026597308943
   Finkel Jenny Rose, 2005, P ACL
   Franco AJ, 2015, INT CONF RES CHAL, P520, DOI 10.1109/RCIS.2015.7128917
   Garima M., 2021, P CAN C AI, DOI [10.21428/594757db.507-7951, DOI 10.21428/594757DB.507-7951]
   Glinz M, 2007, INT REQUIR ENG CONF, P21, DOI 10.1109/RE.2007.45
   Gonzalez-Baixauli B, 2006, RE'06: 14TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, PROCEEDINGS, P347
   Grudin J., 2002, PDC 2002. Proceedings of the Participatory Design Conference, P144
   Herwanto GB, 2021, 29TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE WORKSHOPS (REW 2021), P406, DOI 10.1109/REW53955.2021.00072
   Horkoff J, 2019, REQUIR ENG, V24, P133, DOI 10.1007/s00766-017-0280-z
   Huang ZH, 2015, Arxiv, DOI arXiv:1508.01991
   JACKSON M, 1995, PROC INT CONF SOFTW, P283, DOI 10.1145/225014.225041
   Janpitak N, 2019, INT ELECT ENG CONGR, DOI 10.1109/ieecon45304.2019.8938899
   Jha N, 2019, EMPIR SOFTW ENG, V24, P3659, DOI 10.1007/s10664-019-09716-7
   Jiang R., 2016, P 6 NAM ENT WORKSH, P199
   Jurafksy D., 2008, Speech and Language Processing, V2nd
   Kohavi R, 2009, DATA MIN KNOWL DISC, V18, P140, DOI 10.1007/s10618-008-0114-1
   Kumar A, 2007, INT J FLEX MANUF SYS, V19, P533, DOI 10.1007/s10696-008-9048-6
   Kurtanovic Z, 2017, INT REQUIR ENG CONF, P490, DOI 10.1109/RE.2017.82
   LANDIS JR, 1977, BIOMETRICS, V33, P159, DOI 10.2307/2529310
   Li CY, 2018, J SYST SOFTWARE, V138, P108, DOI 10.1016/j.jss.2017.12.028
   Liaskos S., 2010, Proceedings of the 2010 IEEE 18th International Conference on Requirements Engineering (RE2010), P135, DOI 10.1109/RE.2010.26
   Liaskos S, 2011, REQUIR ENG, V16, P227, DOI 10.1007/s00766-011-0129-9
   Lim Sachiko, 2021, SN Computer Science, V2, P1
   Litman L., 2021, Conducting online research on amazon mechanical turk and beyond (Ser. Sage innovations in research methods), V1st edn
   Maalej W, 2015, INT REQUIR ENG CONF, P116, DOI 10.1109/RE.2015.7320414
   Mitchell J., 2008, P ACL 08 HLT, P236
   Mougouei D, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P780, DOI 10.1145/3236024.3264843
   Murukannaiah PK, 2016, INT REQUIR ENG CONF, P176, DOI 10.1109/RE.2016.68
   MYLOPOULOS J, 1992, IEEE T SOFTWARE ENG, V18, P483, DOI 10.1109/32.142871
   Nadeau D, 2006, LECT NOTES ARTIF INT, V4013, P266, DOI 10.1007/11766247_23
   Niu N, 2007, IEEE SOFTWARE, V24, P53, DOI 10.1109/MS.2007.52
   Pacheco C, 2018, IET SOFTW, V12, P365, DOI 10.1049/iet-sen.2017.0144
   Patil N, 2020, PROCEDIA COMPUT SCI, V167, P1181, DOI 10.1016/j.procs.2020.03.431
   Peppers D., 1993, ONE ONE FUTURE BUILD
   Pereira, 2001, CONDITIONAL RANDOM F
   Praznik M., 2021, AllTrails Celebrates 1 Million Paid Subscribers
   Qi P, 2020, 58TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (ACL 2020): SYSTEM DEMONSTRATIONS, P101
   Quirchmayr T, 2018, EMPIR SOFTW ENG, V23, P3630, DOI 10.1007/s10664-018-9597-6
   Robeer M, 2016, INT REQUIR ENG CONF, P196, DOI 10.1109/RE.2016.40
   Saldana J, 2013, The coding manual for qualitative researchers, DOI DOI 10.1017/CBO9781107415324.004
   Sanh V, 2020, Arxiv, DOI [arXiv:1910.01108, 10.48550/arXiv.1910.01108]
   Shen Y, 2022, INT REQUIR ENG CONF, P143, DOI 10.1109/REW56159.2022.00036
   Sleimi A, 2018, INT REQUIR ENG CONF, P124, DOI 10.1109/RE.2018.00022
   Soeken M., 2014, P FOR SPEC DES LANG, P1
   Tavakoli M, 2018, EXPERT SYST APPL, V113, P186, DOI 10.1016/j.eswa.2018.05.037
   Teixeira L, 2012, COMPUT METH PROG BIO, V106, P160, DOI 10.1016/j.cmpb.2010.10.007
   Tsuruoka Y., 2003, Proceedings of the ACL 2003 Workshop on Natural Language Processing in Biomedicine, V13, P41
   van Lamsweerde Axel, 2009, Requirements engineering: from system goals to UML models to software specifications
   Vaswani A, 2017, ADV NEUR IN, V30
   Wolf T, 2020, Arxiv, DOI arXiv:1910.03771
   Yamada I, 2020, PROCEEDINGS OF THE 2020 CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING (EMNLP), P6442
   Yin Robert K., 2009, CASE STUDY RES
NR 73
TC 2
Z9 2
U1 2
U2 2
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JAN
PY 2024
VL 50
IS 1
BP 69
EP 84
DI 10.1109/TSE.2023.3333265
PG 16
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA EQ4Q6
UT WOS:001140380900007
DA 2024-08-05
ER

PT J
AU Liu, CS
   Cetin, P
   Patodia, Y
   Ray, B
   Chakraborty, S
   Ding, YRB
AF Liu, Changshu
   Cetin, Pelin
   Patodia, Yogesh
   Ray, Baishakhi
   Chakraborty, Saikat
   Ding, Yangruibo
TI Automated Code Editing With Search-Generate-Modify
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Bug fixing; automated program repair; edit-based neural network; Bug
   fixing; automated program repair; edit-based neural network
AB Code editing is essential in evolving software development. In literature, several automated code editing tools are proposed, which leverage Information Retrieval-based techniques and Machine Learning-based code generation and code editing models. Each technique comes with its own promises and perils, and for this reason, they are often used together to complement their strengths and compensate for their weaknesses. This paper proposes a hybrid approach to better synthesize code edits by leveraging the power of code search, generation, and modification. Our key observation is that a patch that is obtained by search & retrieval, even if incorrect, can provide helpful guidance to a code generation model. However, a retrieval-guided patch produced by a code generation model can still be a few tokens off from the intended patch. Such generated patches can be slightly modified to create the intended patches. We developed a novel tool to solve this challenge: SarGaM, which is designed to follow a real developer's code editing behavior. Given an original code version, the developer may search for the related patches, generate or write the code, and then modify the generated code to adapt it to the right context. Our evaluation of SarGaM on edit generation shows superior performance w.r.t. the current state-of-the-art techniques. SarGaM also shows its effectiveness on automated program repair tasks.
C1 [Liu, Changshu; Cetin, Pelin; Patodia, Yogesh; Ray, Baishakhi; Ding, Yangruibo] Columbia Univ, Dept Comp Sci, New York, NY 10027 USA.
   [Chakraborty, Saikat] Microsoft Res, Redmond, WA 98052 USA.
C3 Columbia University; Microsoft
RP Liu, CS (corresponding author), Columbia Univ, Dept Comp Sci, New York, NY 10027 USA.
EM cl4062@cs.columbia.edu; pc2807@cs.columbia.edu; yp2607@cs.columbia.edu;
   rayb@cs.columbia.edu; saikatc@microsoft.com; yrbding@cs.columbia.edu
OI Chakraborty, Saikat/0000-0002-6889-7171
CR Abnar S, 2020, Arxiv, DOI [arXiv:2005.00928, 10.48550/arXiv.2005.00928, DOI 10.48550/ARXIV.2005.00928]
   Ahmad WU, 2021, 2021 CONFERENCE OF THE NORTH AMERICAN CHAPTER OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS: HUMAN LANGUAGE TECHNOLOGIES (NAACL-HLT 2021), P2655
   [Anonymous], 1966, SOVIET PHYS DOKLADY
   Barke S, 2022, Arxiv, DOI arXiv:2206.15000
   Barr ET, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P306, DOI 10.1145/2635868.2635898
   Berg-Kirkpatrick T., 2012, P 2012 JOINT C EMPIR, P995
   Boshernitsan M, 2007, CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, VOLS 1 AND 2, P567
   Brown T. B., 2020, P 34 INT C NEURAL IN, P1
   Chakraborty S, 2022, PROCEEDINGS OF THE 30TH ACM JOINT MEETING EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, ESEC/FSE 2022, P18, DOI 10.1145/3540250.3549162
   Chakraborty S, 2021, 2021 36TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING ASE 2021, P443, DOI 10.1109/ASE51524.2021.9678559
   Chakraborty S, 2022, IEEE T SOFTWARE ENG, V48, P1385, DOI 10.1109/TSE.2020.3020502
   Chen M., 2021, arXiv, DOI DOI 10.48550/ARXIV.2107.03374
   Chen S., 2021, arXiv
   Chen Z., 2021, Proc. Adv. Neural Inf. Process.Syst., V34, P23089
   Chen ZM, 2021, IEEE T SOFTWARE ENG, V47, P1943, DOI 10.1109/TSE.2019.2940179
   Connor A, 2022, EUR CON SFTWR MTNCE, P782, DOI 10.1109/SANER53432.2022.00096
   Dinella E., 2019, P INT C LEARN REPR
   Ding YRB, 2020, IEEE INT CONF AUTOM, P275, DOI 10.1145/3324884.3416587
   Falleri Jean-Remy, 2014, P 29 ACM IEEE INT C
   Fan ZY, 2022, Arxiv, DOI arXiv:2205.10583
   Feng ZY, 2020, FINDINGS OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, EMNLP 2020, P1536
   Fu M, 2022, PROCEEDINGS OF THE 30TH ACM JOINT MEETING EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, ESEC/FSE 2022, P935, DOI 10.1145/3540250.3549098
   Gharehyazie M, 2017, IEEE WORK CONF MIN S, P291, DOI 10.1109/MSR.2017.15
   Graves A, 2012, STUD COMPUT INTELL, V385, P1, DOI [10.1162/neco.1997.9.8.1735, 10.1007/978-3-642-24797-2, 10.1162/neco.1997.9.1.1]
   Gu Jiatao, 2019, ARXIV190511006
   Nguyen HA, 2013, IEEE INT CONF AUTOM, P180, DOI 10.1109/ASE.2013.6693078
   Jain N, 2022, PROC INT CONF SOFTW, P1219, DOI 10.1145/3510003.3510203
   Jiang N., 2021, arXiv
   Jiang N, 2023, PROC INT CONF SOFTW, P1430, DOI 10.1109/ICSE48619.2023.00125
   Jiang N, 2023, Arxiv, DOI arXiv:2302.01857
   Joshi H, 2022, Arxiv, DOI arXiv:2208.11640
   Just R, 2014, ISSTA 2014, P437, DOI [10.1145/2610384.2628055, DOI 10.1145/2610384.2628055]
   Kobayashi G, 2020, Arxiv, DOI arXiv:2004.10102
   Lin Derrick, 2017, P COMP ACM SIGPLAN I, P55, DOI [10.1145/3135932, DOI 10.1145/3135932]
   Liu K, 2018, ASIA PAC SOFWR ENG, P658, DOI 10.1109/APSEC.2018.00085
   Lu S, 2021, Arxiv, DOI arXiv:2102.04664
   Lutellier Thibaud, 2020, ISSTA '20: Proceedings of the 29th ACM SIGSOFT International Symposium on Software Testing and Analysis, P101, DOI 10.1145/3395363.3397369
   Meng N, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P502, DOI 10.1109/ICSE.2013.6606596
   Meng N, 2011, PLDI 11: PROCEEDINGS OF THE 2011 ACM CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P329
   Nam Daye, 2022, MAPS 2022: Proceedings of the 6th ACM SIGPLAN International Symposium on Machine Programming, P40, DOI 10.1145/3520312.3534866
   Pradel M, 2022, COMMUN ACM, V65, P86, DOI 10.1145/3460348
   Prenner JA, 2021, Arxiv, DOI arXiv:2111.03922
   Rahman MM, 2018, IEEE WORK CONF MIN S, P465, DOI 10.1145/3196398.3196425
   Ramos Juan, 2003, P 1 INSTR C MACH LEA, V242, P29, DOI DOI 10.15804/TNER.2015.42.4.03
   Ray B, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P34, DOI 10.1109/MSR.2015.11
   Ray B, 2013, IEEE INT CONF AUTOM, P367, DOI 10.1109/ASE.2013.6693095
   Robbes R, 2008, LECT NOTES COMPUT SC, V5301, P174, DOI 10.1007/978-3-540-87875-9_13
   Robertson Stephen, 2009, Foundations and Trends in Information Retrieval, V3, P333, DOI 10.1561/1500000019
   Tarlow D., 2020, P IEEE ACM 42 INT C, P9
   Tufano M., 2019, arXiv
   Tufano M, 2019, ACM T SOFTW ENG METH, V28, DOI 10.1145/3340544
   Tufano M, 2018, IEEE INT CONF AUTOM, P832, DOI 10.1145/3238147.3240732
   Vaswani A., 2017, PROC NEURIPS, V30, P5998
   Wang Y., 2021, arXiv
   Xia CS, 2022, PROCEEDINGS OF THE 30TH ACM JOINT MEETING EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, ESEC/FSE 2022, P959, DOI 10.1145/3540250.3549101
   Xin Q, 2019, Arxiv, DOI arXiv:1903.04583
   Xin Q, 2017, IEEE INT CONF AUTOM, P660, DOI 10.1109/ASE.2017.8115676
   Xu Frank F., 2022, arXiv, DOI 10.48550/ARXIV.2202.13169
   Yin PC, 2019, Arxiv, DOI arXiv:1810.13337
   Zhang JY, 2022, IEEE INT CONF AUTOM, DOI 10.1145/3551349.3556955
   Zhang TY, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P886, DOI 10.1145/3180155.3180260
   Zhao J., 2020, INT C MACHINE LEARNI, P11365
NR 62
TC 0
Z9 0
U1 0
U2 0
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUL
PY 2024
VL 50
IS 7
BP 1675
EP 1686
DI 10.1109/TSE.2024.3376387
PG 12
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA YZ0O5
UT WOS:001272193600012
OA Green Submitted
DA 2024-08-05
ER

PT J
AU Kan, SX
   Gao, YH
   Zhong, ZX
   Sui, YL
AF Kan, Shuangxiang
   Gao, Yuhao
   Zhong, Zexin
   Sui, Yulei
TI Cross-Language Taint Analysis: Generating Caller-Sensitive Native Code
   Specification for Java
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Static analysis; taint analysis; cross-language program;
   caller-sensitive specification
ID CHECKING
AB Cross-language programming is a common practice within the software development industry, offering developers a multitude of advantages such as expressiveness, interoperability, and cross-platform compatibility, for developing large-scale applications. As an important example, JNI (Java Native Interface) programming is widely used in diverse scenarios where Java interacts with code written in other programming languages, such as C or C++. Conventional static analysis based on a single programming language faces challenges when it comes to tracing the flow of values across multiple modules that are coded in different programming languages. In this paper, we introduce CSS, a new Caller-Sensitive Specification approach designed to enhance the static taint analysis of Java programs employing JNI to interface with C/C++ code. In contrast to conservative specifications, this approach takes into consideration the calling context of the invoked C/C++ functions (or cross-language context), resulting in more precise and concise specifications for the side effects of native code. Furthermore, CSS specifically enhances the capabilities of Java analyzers, enabling them to perform precise static taint analysis across language boundaries into native code. The experimental results show that CSS can accurately summarize value-flow information and enhance the ability of Java monolingual static analyzers for cross-language taint flow tracking.
C1 [Kan, Shuangxiang; Sui, Yulei] Univ New South Wales, Sydney, NSW 2052, Australia.
   [Gao, Yuhao; Zhong, Zexin] Univ Technol Sydney, Sydney, NSW 2007, Australia.
C3 University of New South Wales Sydney; University of Technology Sydney
RP Sui, YL (corresponding author), Univ New South Wales, Sydney, NSW 2052, Australia.
EM shuangxiang.kan@unsw.edu.au; yuhao.gao@student.uts.edu.au;
   zexin.zhong@student.uts.edu.au; y.sui@unsw.edu.au
FU Australian Research
FX No Statement Available
CR [Anonymous], JLang: An LLVM backend for the polyglot compiler
   [Anonymous], WALA
   [Anonymous], Facebook Infer
   Antoniadis A, 2020, PROCEEDINGS OF THE 41ST ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION (PLDI '20), P794, DOI 10.1145/3385412.3386026
   arguslab, Nativeflowbench github issue
   Arzt S, 2014, ACM SIGPLAN NOTICES, V49, P259, DOI [10.1145/2666356.2594299, 10.1145/2594291.2594299]
   Avgustinov P., 2016, P 30 EUR C OBJ OR PR, P21
   Buro S, 2020, LECT NOTES COMPUT SC, V12389, P310, DOI 10.1007/978-3-030-65474-0_14
   Chaoran L., 2023, Vulnerability detection in android
   Chow F., 1996, Compiler Construction. 6th International Conference, CC'96. Proceedings, P253
   Costantini G, 2011, LECT NOTES COMPUT SC, V6991, P505, DOI 10.1007/978-3-642-24559-6_34
   Fengguo Wei, 2017, Detection of Intrusions and Malware, and Vulnerability Assessment. 14th International Conference, DIMVA 2017. Proceedings: LNCS 10327, P252, DOI 10.1007/978-3-319-60876-1_12
   Furr M, 2006, LECT NOTES COMPUT SC, V3924, P309
   Furr M, 2005, ACM SIGPLAN NOTICES, V40, P62, DOI 10.1145/1064978.1065019
   Furr M, 2008, ACM T PROGR LANG SYS, V30, DOI 10.1145/1377492.1377493
   Gordon MI, 2015, 22ND ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2015), DOI 10.14722/ndss.2015.23089
   Haiyan Zhu, 2013, Programming Languages and Systems. 11th Asian Symposium, APLAS 2013. Proceedings: LNCS 8301, P290, DOI 10.1007/978-3-319-03542-0_21
   He Y, 2023, IEEE T DEPEND SECURE, V20, P1609, DOI 10.1109/TDSC.2022.3160872
   Jones N. D., 1979, P 6 ACM SIGACT SIGPL, P244
   King D, 2008, LECT NOTES COMPUT SC, V5352, P56, DOI 10.1007/978-3-540-89862-7_4
   Kondoh G., 2008, Proceedings of the 2008 international symposium on Software testing and analysis, P109, DOI 10.1145/1390630.1390645
   Kumar S., 2020, The State of Android Security, P17, DOI DOI 10.1007/978-981-15-1675-72
   Lee S, 2020, IEEE INT CONF AUTOM, P127, DOI 10.1145/3324884.3416558
   Lee S, 2016, IEEE INT CONF AUTOM, P250, DOI 10.1145/2970276.2970368
   Li CR, 2022, PROCEEDINGS OF THE 30TH ACM JOINT MEETING EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, ESEC/FSE 2022, P772, DOI 10.1145/3540250.3549142
   Li SL, 2014, LECT NOTES COMPUT SC, V8586, P80
   Li SL, 2014, SCI COMPUT PROGRAM, V89, P273, DOI 10.1016/j.scico.2014.01.018
   Li SL, 2011, ACM SIGPLAN NOTICES, V46, P345, DOI 10.1145/2076021.2048095
   Li ZH, 2022, LECT NOTES COMPUT SC, V13556, P680, DOI 10.1007/978-3-031-17143-7_33
   Liang S., 1999, Java native interface: programmers guide and reference
   Mergendahl S., 2022, P 2022 NETW DISTR SY, V22, P1
   Monat R, 2021, LECT NOTES COMPUT SC, V12913, P323, DOI 10.1007/978-3-030-88806-0_16
   Samhi J, 2022, PROC INT CONF SOFTW, P1232, DOI 10.1145/3510003.3512766
   Schmidt AD, 2009, 2009 4TH INTERNATIONAL CONFERENCE ON MALICIOUS AND UNWANTED SOFTWARE (MALWARE 2009), P1, DOI 10.1109/MALWARE.2009.5403026
   Shi C, 2022, FORENS SCI INT-DIGIT, V42, DOI 10.1016/j.fsidi.2022.301405
   Shoshitaishvili Y, 2016, P IEEE S SECUR PRIV, P138, DOI 10.1109/SP.2016.17
   Sui YL, 2016, PROCEEDINGS OF THE 25TH INTERNATIONAL CONFERENCE ON COMPILER CONSTRUCTION (CC 2016), P265, DOI 10.1145/2892208.2892235
   Sui YL, 2014, IEEE T SOFTWARE ENG, V40, P107, DOI 10.1109/TSE.2014.2302311
   Sui Yulei, 2012, P INT S SOFTW TEST A, P254, DOI [10.1145/2338965.2336784, DOI 10.1145/2338965.2336784]
   Tam K, 2015, 22ND ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2015), DOI 10.14722/ndss.2015.23145
   Tan G., 2008, P 17 USENIX SECURITY, P365
   Tan G, 2007, OOPSLA: 22ND INTERNATIONAL CONFERENCE ON OBJECT-ORIENTED PROGRAMMING, SYSTEMS, LANGUAGES, AND APPLICATIONS, PROCEEDINGS, P39
   Tan T, 2022, Arxiv, DOI arXiv:2208.00337
   Wei F., 2018, P ACM SIGSAC C COMP
   Zhong ZX, 2022, 2022 ACM/IEEE 44TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE (ICSE-SEIP 2022), P149, DOI [10.1109/ICSE-SEIP55303.2022.9794096, 10.1145/3510457.3513075]
NR 45
TC 0
Z9 0
U1 1
U2 1
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUN
PY 2024
VL 50
IS 6
BP 1518
EP 1533
DI 10.1109/TSE.2024.3392254
PG 16
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA UL2G2
UT WOS:001248142900010
DA 2024-08-05
ER

PT J
AU Bombarda, A
   Bonfanti, S
   De Sanctis, M
   Gargantini, A
   Pelliccione, P
   Riccobene, E
   Scandurra, P
AF Bombarda, Andrea
   Bonfanti, Silvia
   De Sanctis, Martina
   Gargantini, Angelo
   Pelliccione, Patrizio
   Riccobene, Elvinia
   Scandurra, Patrizia
TI Evaluation Framework for Autonomous Systems: The Case of Programmable
   Electronic Medical Systems
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Lenses; Robots; Autonomous systems; Instruments; Robot sensing systems;
   Ventilators; Adaptive systems; evaluation framework; programmable
   electronic medical systems (PEMS)
AB This paper proposes an evaluation framework for autonomous systems, called LENS. It is an instrument to make an assessment of a system through the lens of abilities related to adaptation and smartness. The assessment can then help engineers understand in which direction it is worth investing to make their system smarter. It also helps to identify possible improvement directions and to plan for concrete activities. Finally, it helps to make a re-assessment when the improvement has been performed in order to check whether the activity plan has been accomplished. Given the high variability in the various domains in which autonomous systems are and can be used, LENS is defined in abstract terms and instantiated to a specific and important class of medical devices, i.e., Programmable Electronic Medical Systems (PEMS). The instantiation, called LENSPEMS , is validated in terms of applicability , i.e., how it is applicable to real PEMS, generalizability , i.e., to what extent LENSPEMS is generalizable to the PEMS class of systems, and usefulness , i.e., how it is useful in making an assessment and identifying possible directions of improvement towards smartness.
C1 [Bombarda, Andrea; Bonfanti, Silvia; Gargantini, Angelo; Pelliccione, Patrizio] Univ Bergamo, I-24122 Bergamo, Italy.
   [De Sanctis, Martina; Pelliccione, Patrizio] Gran Sasso Sci Inst GSSI, I-67100 Laquila, Italy.
   [Riccobene, Elvinia] Univ Milan, I-20122 Milan, Italy.
C3 University of Bergamo; Gran Sasso Science Institute (GSSI); University
   of Milan
RP De Sanctis, M (corresponding author), Gran Sasso Sci Inst GSSI, I-67100 Laquila, Italy.
EM andrea.bombarda@unibg.it; silvia.bonfanti@unibg.it;
   martina.desanctis@gssi.it; angelo.gargantini@unibg.it;
   patrizio.pelliccione@gssi.it; elvinia.riccobene@unimi.it;
   patrizia.scandurra@unibg.it
RI Bombarda, Andrea/AHB-9415-2022
OI Bombarda, Andrea/0000-0003-4244-9319; Bonfanti,
   Silvia/0000-0001-9679-4551; Pelliccione, Patrizio/0000-0002-5438-2281;
   Riccobene, Elvinia/0000-0002-1400-1026; SCANDURRA,
   Patrizia/0000-0002-9209-3624
FU PNRR - ANTHEM (AdvaNced Technologies for Human-centrEd Medicine)
FX No Statement Available
CR Abba A, 2021, PHYS FLUIDS, V33, DOI 10.1063/5.0044445
   Al-Tahir I, 2022, INT C REHAB ROBOT, DOI 10.1109/ICORR55369.2022.9896541
   [Anonymous], Robotics 2020, multi-annual roadmap
   [Anonymous], 2005, IEC 60601-1
   Baig MM, 2013, MED BIOL ENG COMPUT, V51, P485, DOI 10.1007/s11517-012-1021-6
   Beiderbeck D, 2021, METHODSX, V8, DOI 10.1016/j.mex.2021.101401
   Berget Cari, 2019, Diabetes Spectr, V32, P194, DOI 10.2337/ds18-0091
   Bombarda Andrea, 2019, Software Technology: Methods and Tools. 51st International Conference, TOOLS 2019. Proceedings. Lecture Notes in Computer Science (LNCS 11771), P89, DOI 10.1007/978-3-030-29852-4_7
   Bombarda A., Supplementary material of the work titled'Evaluation Framework for Autonomous Systems: the case of Pro-grammable Electronic Medical Systems
   Bombarda A, 2022, 2022 IEEE INTERNATIONAL CONFERENCE ON AUTONOMIC COMPUTING AND SELF-ORGANIZING SYSTEMS COMPANION (ACSOS-C 2022), P43, DOI 10.1109/ACSOSC56246.2022.00025
   Bombarda A, 2022, INFORM SOFTWARE TECH, V152, DOI 10.1016/j.infsof.2022.107061
   Bombarda A, 2021, PROC INT SYMP SOFTW, P24, DOI 10.1109/ISSRE52982.2021.00016
   C ~amara J., 2014, PROC 10 INT ACM SIGS, P63
   Cheng BHC, 2009, LECT NOTES COMPUT SC, V5525, P1, DOI 10.1007/978-3-642-02161-9_1
   Chengetal B.H.C., 2014, Using Models at Runtime to Address Assurancefor Self-Adaptive Systems
   de Lemos R., 2013, SOFTWARE ENG SELF AD, P1
   Diaconeasa A., 2019, ASME INT MECH ENG C
   Dong Y, 2022, IEEE INT C INT ROBOT, P5171, DOI 10.1109/IROS47612.2022.9981794
   Feth P, 2017, LECT NOTES COMPUT SC, V10488, P135, DOI 10.1007/978-3-319-66266-4_9
   Goller M, 2022, 2022 IEEE INTERNATIONAL CONFERENCE ON PERVASIVE COMPUTING AND COMMUNICATIONS WORKSHOPS AND OTHER AFFILIATED EVENTS (PERCOM WORKSHOPS), DOI 10.1109/PerComWorkshops53856.2022.9767230
   Hartsell C, 2021, 2021 INTERNATIONAL SYMPOSIUM ON SOFTWARE ENGINEERING FOR ADAPTIVE AND SELF-MANAGING SYSTEMS (SEAMS 2021), P118, DOI 10.1109/SEAMS51251.2021.00025
   Kazman M., 2000, Tech. Rep.
   Krupitzer C, 2015, PERVASIVE MOB COMPUT, V17, P184, DOI 10.1016/j.pmcj.2014.09.009
   Le C., 2018, LIVING IOT CYBERSECU, P1
   Mashkoor A, 2016, LECT NOTES COMPUT SC, V9675, P329, DOI 10.1007/978-3-319-33600-8_29
   Horcas JM, 2023, SOFTW SYST MODEL, V22, P377, DOI 10.1007/s10270-022-01011-2
   Mundt I., 2022, LectureNotes in Business Information Processing), V453
   On-Road AutomatedDriving (ORAD) Committee, Taxonomy anddefinitions for terms related to driving automation systems for on-roadmotor vehicles, DOI [10.4271/J3016_202104, DOI 10.4271/J3016_202104]
   Paige RF, 2016, J SYST SOFTWARE, V111, P272, DOI 10.1016/j.jss.2015.08.047
   Perez-Palacin D., 2011, P JOINT ACM SIGSOFT PROCJOINT ACM SIGSOF, P171
   Perez-Palacin D, 2014, J SYST SOFTWARE, V87, P1, DOI 10.1016/j.jss.2013.07.053
   Raibulet C, 2009, 2009 JOINT WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE AND EUROPEAN CONFERENCE ON SOFTWARE ARCHITECTURE, P341, DOI 10.1109/WICSA.2009.5290667
   Salehie M, 2009, ACM T AUTON ADAP SYS, V4, DOI 10.1145/1516533.1516538
   Serhani MA, 2020, SENSORS-BASEL, V20, DOI 10.3390/s20061796
   Shimizu K, 2021, LECT NOTES COMPUT SC, V12852, P67, DOI 10.1007/978-3-030-83903-1_1
   Shortliffe EH, 2018, JAMA-J AM MED ASSOC, V320, P2199, DOI 10.1001/jama.2018.17163
   Smith L. M., 2018, IFIP WG 136 WORK C, P186
   Subramanian N., 2001, Softw. Qual. Manag, P95
   Tomforde S, 2021, 2021 IEEE INTL CONF ON DEPENDABLE, AUTONOMIC AND SECURE COMPUTING, INTL CONF ON PERVASIVE INTELLIGENCE AND COMPUTING, INTL CONF ON CLOUD AND BIG DATA COMPUTING, INTL CONF ON CYBER SCIENCE AND TECHNOLOGY CONGRESS DASC/PICOM/CBDCOM/CYBERSCITECH 2021, P10, DOI 10.1109/DASC-PICom-CBDCom-CyberSciTech52372.2021.00018
   van der Linden F., 2010, Software Product Linesin Action: The Best Industrial Practice in Product Line Engineering
   van der Linden K., 2007, The Family EvaluationFramework, P79, DOI [10.1007/978-3-540-71437-8_6, DOI 10.1007/978-3-540-71437-8_6]
   Vuorimaa Valtteri, 2021, Intelligent Systems and Applications. Proceedings of the 2020 Intelligent Systems Conference (IntelliSys). Advances in Intelligent Systems and Computing (AISC 1252), P742, DOI 10.1007/978-3-030-55190-2_62
   Weyns D., 2021, An Introduction to Self-Adaptive Systems: A ContemporarySoftware Engineering Perspective
   Wohlin C., 2012, EXPT SOFTWARE ENG
NR 44
TC 0
Z9 0
U1 2
U2 2
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD APR
PY 2024
VL 50
IS 4
BP 995
EP 1014
DI 10.1109/TSE.2024.3374382
PG 20
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA OC2K3
UT WOS:001204993400013
OA hybrid
DA 2024-08-05
ER

PT J
AU Li, JJ
   Yang, JQ
AF Li, Junjie
   Yang, Jinqiu
TI Tracking the Evolution of Static Code Warnings: The State-of-the-Art and
   a Better Approach
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Static analysis; code refactoring; software evolution; empirical study
ID ALGORITHM
AB Static bug detection tools help developers detect problems in the code, including bad programming practices and potential defects. Recent efforts to integrate static bug detectors in modern software development workflows, such as in code review and continuous integration, are shown to better motivate developers to fix the reported warnings on the fly. A proper mechanism to track the evolution of the reported warnings can better support such integration. Moreover, tracking the static code warnings will benefit many downstream software engineering tasks, such as learning the fix patterns for automated program repair, and learning which warnings are of more interest, so they can be prioritized automatically. In addition, the utilization of tracking tools enables developers to concentrate on the most recent and actionable static warnings rather than being overwhelmed by the thousands of warnings from the entire project. This, in turn, enhances the utilization of static analysis tools. Hence, precisely tracking the warnings by static bug detectors is critical to improving the utilization of static bug detectors further. In this paper, we study the effectiveness of the state-of-the-art (SOTA) solution in tracking static code warnings and propose a better solution based on our analysis of the insufficiency of the SOTA solution. In particular, we examined over 2,000 commits in four large-scale open-source systems (i.e., JClouds, Kafka, Spring-boot, and Guava) and crafted a dataset of 3,451 static code warnings by two static bug detectors (i.e., Spotbugs and PMD). We manually uncovered the ground-truth evolution status of the static warnings: persistent, removed(fix), removed(non-fix) and newly-introduced. Upon manual analysis, we identified the main reasons behind the insufficiency of the SOTA solution. Furthermore, we propose StaticTracker to track static warnings over software development history. Our evaluation shows that StaticTracker significantly improves the tracking precision, i.e., from 64.4% to 90.3% for the evolution statuses combined (removed(fix), removed(non-fix) and newly-introduced).
C1 [Li, Junjie; Yang, Jinqiu] Concordia Univ, Dept Comp Sci & Software Engn, Montreal, PQ H3G 1M8, Canada.
C3 Concordia University - Canada
RP Li, JJ (corresponding author), Concordia Univ, Dept Comp Sci & Software Engn, Montreal, PQ H3G 1M8, Canada.
EM l_unjie@encs.concordia.ca; jinqiuy@encs.concordia.ca
OI Li, Junjie/0000-0001-8828-632X
CR [Anonymous], 2019, Spotbugs latest version
   Avgustinov P, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P437, DOI 10.1109/ICSE.2015.62
   Ayewah N, 2007, PASTE'07 PROCEEDINGS OF THE 2007 ACM SIGPLAN- SIGSOFT WORKSHOP ON PROGRAM ANALYSIS FOR SOFTWARE TOOLS & ENGINEERING, P1, DOI 10.1145/1251535.1251536
   Bavishi R, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P613, DOI 10.1145/3338906.3338952
   Beller M, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P470, DOI 10.1109/SANER.2016.105
   Boogerd C, 2009, 2009 6TH IEEE INTERNATIONAL WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES, P41, DOI 10.1109/MSR.2009.5069479
   Burhandenny AE, 2016, ASIA PAC SOFWR ENG, P121, DOI 10.1109/APSEC.2016.29
   Neto EC, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P380, DOI 10.1109/SANER.2018.8330225
   da Costa DA, 2017, IEEE T SOFTWARE ENG, V43, P641, DOI 10.1109/TSE.2016.2616306
   Do LNQ, 2017, PROCEEDINGS OF THE 26TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA'17), P307, DOI 10.1145/3092703.3092705
   Falleri Jean-Remy, 2014, P 29 ACM IEEE INT C
   Grund F., 2019, Ph.D. dissertation
   Habib A, 2018, IEEE INT CONF AUTOM, P317, DOI 10.1145/3238147.3238213
   Hanam Q., 2014, P 11 WORK C MIN SOFT, P152
   Higo Y, 2020, EMPIR SOFTW ENG, V25, P1951, DOI 10.1007/s10664-020-09807-w
   HUNT JW, 1977, COMMUN ACM, V20, P350, DOI 10.1145/359581.359603
   Johnson B, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P672, DOI 10.1109/ICSE.2013.6606613
   Kim DJ, 2021, PROCEEDINGS OF THE 29TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '21), P1045, DOI 10.1145/3468264.3468609
   Kim S., 2007, 6 JOINT M EUROPEAN S, P45, DOI 10.1145/1287624.1287633
   Kim S, 2006, IEEE INT CONF AUTOM, P81
   Kremenek T, 2003, LECT NOTES COMPUT SC, V2694, P295
   Kuhn HW, 2005, NAV RES LOG, V52, P7, DOI 10.1002/nav.20053
   Lenarduzzi Valentina, 2021, arXiv
   Liu K, 2021, IEEE T SOFTWARE ENG, V47, P165, DOI 10.1109/TSE.2018.2884955
   Liu K, 2019, 2019 IEEE 26TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER), P456, DOI 10.1109/saner.2019.8667970
   liwerski J., 2005, ACM sigsoft software engineering notes, V30, P1, DOI [10.1145/1082983.1083147, DOI 10.1145/1083142.1083147]
   Muske T, 2016, IEEE INT WORK C SO, P157, DOI 10.1109/SCAM.2016.25
   Myers EW, 1986, ALGORITHMICA, V1, P251, DOI 10.1007/BF01840446
   Palix N., 2010, PROC 9 INT C ASPECT, P169
   Palix N, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P43, DOI 10.1109/SANER.2015.7081814
   Querel LP, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P892, DOI 10.1145/3236024.3264599
   Sadowski C, 2018, COMMUN ACM, V61, P58, DOI 10.1145/3188720
   Sadowski C, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P598, DOI 10.1109/ICSE.2015.76
   Silva D, 2021, IEEE T SOFTWARE ENG, V47, P2786, DOI 10.1109/TSE.2020.2968072
   Spacco J., 2006, PROC 2006 INT WORK M, P133
   Tomassi DA, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P980, DOI 10.1145/3236024.3275439
   Trautsch A, 2020, Arxiv, DOI arXiv:1912.02179
   Tsantalis N, 2022, IEEE T SOFTWARE ENG, V48, P930, DOI 10.1109/TSE.2020.3007722
   Tsantalis N, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P483, DOI 10.1145/3180155.3180206
   Wang JJ, 2018, PROCEEDINGS OF THE 12TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT (ESEM 2018), DOI 10.1145/3239235.3239523
   Wedyan F, 2009, SECOND INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION, AND VALIDATION, PROCEEDINGS, P141, DOI 10.1109/ICST.2009.21
   Yan M, 2017, P INT COMP SOFTW APP, P103, DOI 10.1109/COMPSAC.2017.201
   Yang JQ, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE (ICSE-SEIP 2019), P51, DOI 10.1109/ICSE-SEIP.2019.00014
NR 43
TC 0
Z9 0
U1 3
U2 3
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAR
PY 2024
VL 50
IS 3
BP 534
EP 550
DI 10.1109/TSE.2024.3358283
PG 17
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA LQ6H5
UT WOS:001188302300006
OA Green Submitted
DA 2024-08-05
ER

PT J
AU Zheng, W
   Lin, LD
   Wu, XX
   Chen, X
AF Zheng, Wei
   Lin, Lidan
   Wu, Xiaoxue
   Chen, Xiang
TI An Empirical Study on Correlations Between Deep Neural Network Fairness
   and Neuron Coverage Criteria
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Testing; Neurons; Artificial neural networks; Correlation; Measurement;
   Software; Deep learning; Software testing; deep neural networks; deep
   learning fairness; neuron coverage criteria; bias mitigation
ID RECOGNITION
AB Recently, with the widespread use of deep neural networks (DNNs) in high-stakes decision-making systems (such as fraud detection and prison sentencing), concerns have arisen about the fairness of DNNs in terms of the potential negative impact they may have on individuals and society. Therefore, fairness testing has become an important research topic in DNN testing. At the same time, the neural network coverage criteria (such as criteria based on neuronal activation) is considered as an adequacy test for DNN white-box testing. It is implicitly assumed that improving the coverage can enhance the quality of test suites. Nevertheless, the correlation between DNN fairness (a test property) and coverage criteria (a test method) has not been adequately explored. To address this issue, we conducted a systematic empirical study on seven coverage criteria, six fairness metrics, three fairness testing techniques, and five bias mitigation methods on five DNN models and nine fairness datasets to assess the correlation between coverage criteria and DNN fairness. Our study achieved the following findings: 1) with the increase in the size of the test suite, some of the coverage and fairness metrics changed significantly, as the size of the test suite increased; 2) the statistical correlation between coverage criteria and DNN fairness is limited; and 3) after bias mitigation for improving the fairness of DNN, the change pattern in coverage criteria is different; 4) Models debiased by different bias mitigation methods have a lower correlation between coverage and fairness compared to the original models. Our findings cast doubt on the validity of coverage criteria concerning DNN fairness (i.e., increasing the coverage may even have a negative impact on the fairness of DNNs). Therefore, we warn DNN testers against blindly pursuing higher coverage of coverage criteria at the cost of test properties of DNNs (such as fairness).
C1 [Zheng, Wei; Lin, Lidan] Northwestern Polytech Univ, Sch Software, Xian 710075, Peoples R China.
   [Wu, Xiaoxue] Yangzhou Univ, Sch Informat Engn, Yangzhou 225127, Peoples R China.
   [Chen, Xiang] Nantong Univ, Sch Informat Sci & Technol, Nantong 226019, Peoples R China.
C3 Northwestern Polytechnical University; Yangzhou University; Nantong
   University
RP Wu, XX (corresponding author), Yangzhou Univ, Sch Informat Engn, Yangzhou 225127, Peoples R China.
EM wzheng@nwpu.edu.cn; lidanlin@mail.nwpu.edu.cn; xiaoxuewu@yzu.edu.cn;
   xchencs@ntu.edu.cn
OI chen, xiang/0000-0002-1180-3891
FU National Natural Science Foundation of China
FX No Statement Available
CR Abiodun OI, 2018, HELIYON, V4, DOI 10.1016/j.heliyon.2018.e00938
   Abrecht S., 2020, LECT NOTES COMPUTER, V12235, P289, DOI [10.1007/978-3-030-55583-2_21, DOI 10.1007/978-3-030-55583-2_21]
   Addo PM, 2018, RISKS, V6, DOI 10.3390/risks6020038
   Agarwal Aniya, 2018, arXiv
   ahrq, Medical expenditure panel survey home
   Althnian A, 2021, APPL SCI-BASEL, V11, DOI 10.3390/app11020796
   Angwin J., 2016, MACHINE BIAS
   Bakator Mihalj, 2018, Multimodal Technologies and Interaction, V2, DOI 10.3390/mti2030047
   Brennan T., 2017, Handbook of recidivism risk/needs assessment tools, P49, DOI [10.1002/9781119184256.ch3, DOI 10.1002/9781119184256.CH3]
   Brennan T, 2009, CRIM JUSTICE BEHAV, V36, P21, DOI 10.1177/0093854808326545
   Brownlee J, 2020, Impact of Dataset Size on Deep Learning Model Skill And Performance Estimates
   Brun Y, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P754, DOI 10.1145/3236024.3264838
   Calders T, 2010, DATA MIN KNOWL DISC, V21, P277, DOI 10.1007/s10618-010-0190-x
   Caton S, 2020, Arxiv, DOI arXiv:2010.04053
   Chakraborty J., arXiv
   Chakraborty J, 2021, PROCEEDINGS OF THE 29TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '21), P429, DOI 10.1145/3468264.3468537
   Chakraborty J, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P654, DOI 10.1145/3368089.3409697
   Chen YQT, 2020, IEEE INT CONF AUTOM, P237, DOI 10.1145/3324884.3416667
   Chen Z., 2022, arXiv
   Chen ZP, 2022, PROCEEDINGS OF THE 30TH ACM JOINT MEETING EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, ESEC/FSE 2022, P1122, DOI 10.1145/3540250.3549093
   CUZICK J, 1985, STAT MED, V4, P87, DOI 10.1002/sim.4780040112
   Dey Kuntal, Ai fairness 360: An extensible toolkit for detecting
   Dong Y., arXiv
   Du MN, 2021, IEEE INTELL SYST, V36, P25, DOI 10.1109/MIS.2020.3000681
   Dwork C., 2012, P 3 INN THEOR COMP S, P214, DOI DOI 10.1145/2090236.2090255
   Feldman M, 2015, KDD'15: PROCEEDINGS OF THE 21ST ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P259, DOI 10.1145/2783258.2783311
   Fisher R., 1932, Statistical Methods for Research Workers, DOI DOI 10.1007/978-1-4612-4380-96
   Gajane P., arXiv
   Genç B, 2019, TURK J ELECTR ENG CO, V27, P1534, DOI 10.3906/elk-1807-212
   Gnedenko B. B. V., 1955, Royal Statistical Society. Journal. Series A: General, V118, P248
   Guilford JP., 1950, Fundamental statistics in psychology and education
   Hardt M, 2016, ADV NEUR IN, V29
   Harel-Canada F, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P851, DOI 10.1145/3368089.3409754
   Hofmann H., UCI machine learning repository: Statlog (German credit data) data set
   HUTCHINS M, 1994, PROC INT CONF SOFTW, P191, DOI 10.1109/ICSE.1994.296778
   ics, UCI Machine Learning Repository
   Jain AK, 2000, IEEE T PATTERN ANAL, V22, P4, DOI 10.1109/34.824819
   Kamiran F, 2012, KNOWL INF SYST, V33, P1, DOI 10.1007/s10115-011-0463-8
   Kamishima Toshihiro, 2012, Machine Learning and Knowledge Discovery in Databases. Proceedings of the European Conference (ECML PKDD 2012), P35, DOI 10.1007/978-3-642-33486-3_3
   Kantor P., 2001, INFORM RETRIEVAL J, V4, P80, DOI [10.1023/A:1011424425034, DOI 10.1023/A:1011424425034]
   Kendall MG, 1938, BIOMETRIKA, V30, P81, DOI 10.2307/2332226
   Kim J, 2019, PROC INT CONF SOFTW, P1039, DOI 10.1109/ICSE.2019.00108
   Klare BF, 2012, IEEE T INF FOREN SEC, V7, P1789, DOI 10.1109/TIFS.2012.2214212
   Li YH, 2022, PROC INT CONF SOFTW, P2215, DOI 10.1145/3510003.3510091
   Ma L, 2018, IEEE INT CONF AUTOM, P120, DOI 10.1145/3238147.3238202
   Mehrabi N, 2021, ACM COMPUT SURV, V54, DOI 10.1145/3457607
   Moro S, 2014, DECIS SUPPORT SYST, V62, P22, DOI 10.1016/j.dss.2014.03.001
   Namin AS, 2009, ISSTA 2009: INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P57
   Pearson K, 1909, Science, V30, P23, DOI 10.1126/science.30.757.23
   Pei KX, 2017, PROCEEDINGS OF THE TWENTY-SIXTH ACM SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES (SOSP '17), P1, DOI 10.1145/3132747.3132785
   Peng KW, 2023, IEEE T SOFTWARE ENG, V49, P2426, DOI 10.1109/TSE.2022.3220713
   Polya G., 1972, Series: Integral Calculus
   Rácz A, 2021, MOLECULES, V26, DOI 10.3390/molecules26041111
   Ronny K., UCI machine learning repository: Adult data set
   Ross A., 2017, Basic and Advanced Statistical Tests, DOI [DOI 10.1007/978-94-6351-086-84, DOI 10.1007/978-94-6351-086-8_4]
   Rountev A, 2005, LECT NOTES COMPUT SC, V3442, P289, DOI 10.1007/978-3-540-31984-9_22
   Roy Abhimanyu, 2018, 2018 Systems and Information Engineering Design Symposium (SIEDS), P129, DOI 10.1109/SIEDS.2018.8374722
   Simonyan K, 2015, Arxiv, DOI arXiv:1409.1556
   Speicher T, 2018, KDD'18: PROCEEDINGS OF THE 24TH ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY & DATA MINING, P2239, DOI 10.1145/3219819.3220046
   Udeshi S, 2018, IEEE INT CONF AUTOM, P98, DOI 10.1145/3238147.3238165
   Verma S, 2018, 2018 IEEE/ACM INTERNATIONAL WORKSHOP ON SOFTWARE FAIRNESS (FAIRWARE 2018), P1, DOI [10.1145/3194770.3194776, 10.23919/FAIRWARE.2018.8452913]
   WOLDA H, 1981, OECOLOGIA, V50, P296, DOI 10.1007/BF00344966
   Wu XX, 2021, IEEE T SOFTWARE ENG, V48, P2541, DOI 10.1109/TSE.2021.3063727
   Wu XX, 2021, INFORM SOFTWARE TECH, V133, DOI 10.1016/j.infsof.2021.106530
   Yan SA, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P775, DOI 10.1145/3368089.3409671
   Yang Z, 2022, EUR CON SFTWR MTNCE, P408, DOI 10.1109/SANER53432.2022.00056
   Zafar MB, 2017, PR MACH LEARN RES, V54, P962
   Zemel R., 2013, PMLR, P325
   Zhang BH, 2018, PROCEEDINGS OF THE 2018 AAAI/ACM CONFERENCE ON AI, ETHICS, AND SOCIETY (AIES'18), P335, DOI 10.1145/3278721.3278779
   Zhang JM, 2021, PROC INT CONF SOFTW, P1436, DOI 10.1109/ICSE43902.2021.00129
   Zhang JM, 2022, IEEE T SOFTWARE ENG, V48, P1, DOI 10.1109/TSE.2019.2962027
   Zhang PX, 2020, PROC INT CONF SOFTW, P949, DOI 10.1145/3377811.3380331
   Zheng Z, 2022, IEEE T RELIAB, V71, P579, DOI 10.1109/TR.2022.3145381
NR 73
TC 3
Z9 3
U1 5
U2 5
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAR
PY 2024
VL 50
IS 3
BP 391
EP 412
DI 10.1109/TSE.2023.3349001
PG 22
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA LQ6H5
UT WOS:001188302300015
DA 2024-08-05
ER

PT J
AU Formica, F
   Fan, TY
   Rajhans, A
   Pantelic, V
   Lawford, M
   Menghi, C
AF Formica, Federico
   Fan, Tony
   Rajhans, Akshay
   Pantelic, Vera
   Lawford, Mark
   Menghi, Claudio
TI Simulation-Based Testing of Simulink Models With Test Sequence and Test
   Assessment Blocks
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Software packages; Sensors; Manuals; Biological system modeling;
   Industries; Benchmark testing; Pacemakers; Testing; falsification; CPS
ID TEMPORAL LOGIC; VERIFICATION; SYSTEMS; SPECIFICATION; GENERATION;
   ROBUSTNESS
AB Simulation-based software testing supports engineers in finding faults in Simulink (R) models. It typically relies on search algorithms that iteratively generate test inputs used to exercise models in simulation to detect design errors. While simulation-based software testing techniques are effective in many practical scenarios, they are typically not fully integrated within the Simulink environment and require additional manual effort. Many techniques require engineers to specify requirements using logical languages that are neither intuitive nor fully supported by Simulink, thereby limiting their adoption in industry. This work presents HECATE , a testing approach for Simulink models using Test Sequence and Test Assessment blocks from Simulink (R) Test (TM) . Unlike existing testing techniques, HECATE uses information from Simulink models to guide the search-based exploration. Specifically, HECATE relies on information provided by the Test Sequence and Test Assessment blocks to guide the search procedure. Across a benchmark of 18 Simulink models from different domains and industries, our comparison of HECATE with the state-of-the-art testing tool S-Taliro indicates that HECATE is both more effective (more failure-revealing test cases) and efficient (less iterations and computational time) than S-Taliro for approximate to 94% and approximate to 83% of benchmark models respectively. Furthermore, HECATE successfully generated a failure-revealing test case for a representative case study from the automotive domain demonstrating its practical usefulness.
C1 [Formica, Federico; Fan, Tony; Pantelic, Vera; Lawford, Mark; Menghi, Claudio] McMaster Univ, Hamilton, ON L8S 4L8, Canada.
   [Rajhans, Akshay] MathWorks, Natick, MA 01760 USA.
   [Menghi, Claudio] Univ Bergamo, I-24129 Bergamo, BG, Italy.
C3 McMaster University; MathWorks; University of Bergamo
RP Menghi, C (corresponding author), Univ Bergamo, I-24129 Bergamo, BG, Italy.
EM formicaf@mcmaster.ca; fant6@mcmaster.ca; arajhans@mathworks.com;
   pantelv@mcmaster.ca; lawford@mcmaster.ca; claudio.menghi@unibg.it
OI MENGHI, CLAUDIO/0000-0001-5303-8481; Lawford, Mark/0000-0003-3161-2176;
   Formica, Federico/0000-0002-3033-7371; Pantelic,
   Vera/0000-0003-1696-2768
FU Natural Sciences and Engineering Research Council of Canada (NSERC)
FX No Statement Available
CR Abbas Houssam, 2014, 2014 American Control Conference, P2312, DOI 10.1109/ACC.2014.6859453
   Abbas H, 2014, IEEE ANN INT CONF CY, P1
   Ali S, 2010, IEEE T SOFTWARE ENG, V36, P742, DOI 10.1109/TSE.2009.52
   Annapureddy Y, 2011, LECT NOTES COMPUT SC, V6605, P254, DOI 10.1007/978-3-642-19835-9_21
   [Anonymous], 2022, Simulate a Simulink model
   [Anonymous], 2022, Assess a model by using when decomposition
   [Anonymous], 2022, Test sequence and assessment syntax
   [Anonymous], 2022, GitHub
   [Anonymous], 2022, Use test sequence scenarios in the test sequence editor and test manager
   [Anonymous], 2022, Test traffic light control by using logical and temporal assessments
   [Anonymous], 2022, International competition on verifying continuous and hybrid systems (ARCH)
   [Anonymous], 2022, The EcoCAR mobility challenge
   [Anonymous], 2022, Reactis
   [Anonymous], 2022, Reactis testing tools for Simulink and C code
   [Anonymous], 2006, P INT WORKSH SOFTW E, DOI [DOI 10.1145/1138474.1138479, 10.1145/1138474.1138479]
   [Anonymous], 2013, P INT C QUAL SOFTW A
   [Anonymous], 2022, Prove properties in a model
   [Anonymous], 2022, ISO 26262
   [Anonymous], 2022, Assess the damping ratio of a flutter suppression system
   [Anonymous], 2022, VI-CarRealTime
   Arcaini P, 2023, 2023 IEEE/ACM INTERNATIONAL WORKSHOP ON SEARCH-BASED AND FUZZ TESTING, SBFT, P41, DOI 10.1109/SBFT59156.2023.00008
   Arrieta A., 2017, Jornadas de Ingeniera del So ware y Bases de Datos
   Arrieta A, 2020, GECCO'20: PROCEEDINGS OF THE 2020 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P1222, DOI 10.1145/3377930.3389810
   Arrieta A, 2020, IEEE ICST WORKSHOP, P1, DOI 10.1109/ICSTW50294.2020.00018
   Ayerdi J, 2023, IEEE T RELIAB, V72, P827, DOI 10.1109/TR.2022.3193070
   Ayesh M., 2022, EPiC Series in Computing), V90, P18
   Basciani F, 2023, IEEE ICST WORKSHOP, P28, DOI 10.1109/ICSTW58534.2023.00018
   BeamNG GmbH, BeamNG.tech
   Biagiola M, 2023, 2023 IEEE/ACM INTERNATIONAL WORKSHOP ON SEARCH-BASED AND FUZZ TESTING, SBFT, P45, DOI 10.1109/SBFT59156.2023.00010
   Birchler C, 2023, EMPIR SOFTW ENG, V28, DOI 10.1007/s10664-023-10286-y
   Birchler C, 2022, EUR CON SFTWR MTNCE, P164, DOI 10.1109/SANER53432.2022.00030
   Birchler C, 2023, ACM T SOFTW ENG METH, V32, DOI 10.1145/3533818
   Boll A, 2021, SOFTW SYST MODEL, V20, P2111, DOI 10.1007/s10270-021-00883-0
   Bombarda A, 2020, IEEE ICST WORKSHOP, P157, DOI 10.1109/ICSTW50294.2020.00036
   Boufaied C, 2021, J SYST SOFTWARE, V174, DOI 10.1016/j.jss.2020.110881
   Boufaied C, 2020, IEEE INT CONF AUTOM, P1004, DOI 10.1145/3324884.3416631
   Bringmann E., 2007, P WORKSH SYST TEST V
   Claessen K, 2000, ACM SIGPLAN NOTICES, V35, P268, DOI 10.1145/357766.351266
   Czepa C, 2019, SOFTW SYST MODEL, V18, P3331, DOI 10.1007/s10270-019-00721-4
   Czepa C, 2020, IEEE T SOFTWARE ENG, V46, P100, DOI 10.1109/TSE.2018.2859926
   Dalton SW, 2018, 2018 THIRD INTERNATIONAL CONFERENCE ON ENGINEERING SCIENCE AND INNOVATIVE TECHNOLOGY (ESIT)
   De Vivo D., 2023, 2023 IEEE ACM INT WO, P39
   Donzé A, 2010, LECT NOTES COMPUT SC, V6246, P92, DOI 10.1007/978-3-642-15297-9_9
   Donzé A, 2010, LECT NOTES COMPUT SC, V6174, P167, DOI 10.1007/978-3-642-14295-6_17
   Duque J, 2022, 2022 IEEE/AIAA TRANSPORTATION ELECTRIFICATION CONFERENCE AND ELECTRIC AIRCRAFT TECHNOLOGIES SYMPOSIUM (ITEC+EATS 2022), P975, DOI 10.1109/ITEC53557.2022.9813961
   Elberzhager F., 2013, P INT WORKSH JOIN AC, P29
   Elliott C., 2015, P SAF SEC SYST SOFTW, P9
   Ernst G., 2021, P WORKSH APPL VER CO, V80, P133
   Ernst G, 2019, LECT NOTES COMPUT SC, V11785, P165, DOI 10.1007/978-3-030-30281-8_10
   Fainekos G, 2019, LECT NOTES COMPUT SC, V11757, P27, DOI 10.1007/978-3-030-32079-9_3
   Fainekos GE, 2006, LECT NOTES COMPUT SC, V4262, P178
   Fehnker A, 2004, LECT NOTES COMPUT SC, V2993, P326
   Ferrer J, 2015, INFORM SOFTWARE TECH, V58, P419, DOI 10.1016/j.infsof.2014.07.014
   Formica F., 2023, Trans. Softw. Eng. Methodol.
   Formica F, 2023, PROCEEDINGS OF THE 31ST ACM JOINT MEETING EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, ESEC/FSE 2023, P1949, DOI 10.1145/3611643.3613894
   Gambi A, 2022, 2022 FOURTH IEEE INTERNATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE TESTING (AITEST 2022), P95, DOI 10.1109/AITest55621.2022.00022
   Giannakopoulou D, 2020, LECT NOTES COMPUT SC, V12045, P19, DOI 10.1007/978-3-030-44429-7_2
   Giannakopoulou D, 2021, INFORM SOFTWARE TECH, V137, DOI 10.1016/j.infsof.2021.106590
   Hallé S, 2021, IEEE ICST WORKSHOP, P182, DOI 10.1109/ICSTW52544.2021.00040
   Hallé S, 2017, PROCEEDINGS OF THE 26TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA'17), P392, DOI 10.1145/3092703.3098229
   Harman M., 2015, P IEEE 8 C SOFTW TES, P1
   He J, 2022, PROC INT CONF SOFTW, P610, DOI 10.1145/3510003.3510171
   Hoadley D., 2010, MBEES, P129
   Hoxha B, 2015, IEEE INT C INT ROBOT, P3486, DOI 10.1109/IROS.2015.7353863
   Humeniuk D, 2023, 2023 IEEE/ACM INTERNATIONAL WORKSHOP ON SEARCH-BASED AND FUZZ TESTING, SBFT, P49, DOI 10.1109/SBFT59156.2023.00011
   Jahangirova G, 2021, IEEE INT CONF SOFTW, P194, DOI 10.1109/ICST49551.2021.00030
   Jin X., 2014, P 17 INT C HYBRID SY, P253
   Juhnke K, 2021, SOFTWARE QUAL J, V29, P39, DOI 10.1007/s11219-020-09523-0
   Kapinski J, 2016, IEEE CONTR SYST MAG, V36, P45, DOI 10.1109/MCS.2016.2602089
   Khari M, 2019, SOFT COMPUT, V23, P1933, DOI 10.1007/s00500-017-2906-y
   Khatiri S, 2023, IEEE INT CONF SOFTW, P281, DOI 10.1109/ICST57152.2023.00034
   Kyriakidis J., 2018, P IEEE AIAA DIG AV S, P1
   Liebel G, 2018, SOFTW SYST MODEL, V17, P91, DOI 10.1007/s10270-016-0523-3
   Lindlar Felix, 2010, Proceedings of the IEEE Third International Conference on Software Testing Verification and Validation - Workshops (ICSTW 2010), P163, DOI 10.1109/ICSTW.2010.10
   Maler O, 2004, LECT NOTES COMPUT SC, V3253, P152, DOI 10.1007/978-3-540-30206-3_12
   MathWorks, 2022, Simulink Design VerifierTM
   MathWorks, 2022, Simscape ElectricalTM
   MathWorks, 2022, Simscape DrivelineTM
   MathWorks, 2022, Simulink
   Matinnejad R, 2019, IEEE T SOFTWARE ENG, V45, P919, DOI 10.1109/TSE.2018.2811489
   Matinnejad R, 2016, PROC INT CONF SOFTW, P595, DOI 10.1145/2884781.2884797
   Matinnejad Reza, 2014, P INT C AUTOMATED SO, P163, DOI DOI 10.1145/2642937.2642978
   Mavridou A, 2020, INT REQUIR ENG CONF, P300, DOI 10.1109/RE48521.2020.00040
   Menghi C, 2023, IEEE T SOFTWARE ENG, V49, P2741, DOI 10.1109/TSE.2022.3230059
   Menghi C, 2021, IEEE T SOFTWARE ENG, V47, P2208, DOI 10.1109/TSE.2019.2945329
   Menghi C, 2020, PROC INT CONF SOFTW, P372, DOI 10.1145/3377811.3380370
   Menghi C, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P27, DOI 10.1145/3338906.3338920
   Nejati S, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P1015, DOI 10.1145/3338906.3340444
   Nghiem T, 2010, HSSC 10: PROCEEDINGS OF THE 13TH ACM INTERNATIONAL CONFERENCE ON HYBRID SYSTEMS: COMPUTATION AND CONTROL, P211
   Nguyen V, 2021, THIRD IEEE INTERNATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE TESTING (AITEST 2021), P128, DOI 10.1109/AITEST52744.2021.00033
   Papadakis M, 2019, ADV COMPUT, V112, P275, DOI 10.1016/bs.adcom.2018.03.015
   Peranandam P, 2012, DES AUT TEST EUROPE, P308
   Pill I, 2016, IEEE ICST WORKSHOP, P168, DOI 10.1109/ICSTW.2016.21
   Rajhans A, 2021, LECT NOTES COMPUT SC, V12974, P288, DOI 10.1007/978-3-030-88494-9_17
   Schmidt A, 2016, SIMUL-T SOC MOD SIM, V92, P729, DOI 10.1177/0037549716656791
   Schmidt T, 2014, SAE INT J PASSENG CA, V7, P166, DOI 10.4271/2014-01-0306
   Sheng YL, 2019, IEEE ACCESS, V7, P20920, DOI 10.1109/ACCESS.2019.2898009
   Sheng YL, 2018, SYMMETRY-BASEL, V10, DOI 10.3390/sym10050146
   Srivastava P. R., 2010, Proceedings of the 2010 International Symposium on Electronic System Design (ISED 2010), P235, DOI 10.1109/ISED.2010.52
   Srivastava P. R., 2010, Evolutionary Computation and Optimization Algorithms in Software Engineering: Applications and Techniques, P161, DOI DOI 10.4018/978-1-61520-809-8.CH009
   Stocco A, 2022, IEEE INT CONF AUTOM, DOI 10.1145/3551349.3556968
   Stocco A, 2023, EMPIR SOFTW ENG, V28, DOI 10.1007/s10664-023-10306-x
   Stocco A, 2023, IEEE T SOFTWARE ENG, V49, P1928, DOI 10.1109/TSE.2022.3202311
   Stocco A, 2022, J SOFTW-EVOL PROC, V34, DOI 10.1002/smr.2386
   Tian Y, 2017, IEEE COMPUT INTELL M, V12, P73, DOI 10.1109/MCI.2017.2742868
   Tillmann N, 2008, LECT NOTES COMPUT SC, V4966, P134
   Tuncali CE, 2018, LECT NOTES COMPUT SC, V10811, P452, DOI 10.1007/978-3-319-77935-5_30
   Nguyen V, 2022, PROC IEEE ACM INT C, P339, DOI [10.1109/ICSE-Companion55297.2022.9793783, 10.1145/3510454.3528642]
   Waga M, 2020, PROCEEDINGS OF THE 23RD INTERNATIONAL CONFERENCE ON HYBRID SYSTEMS: COMPUTATION AND CONTROL (HSCC2020) (PART OF CPS-IOT WEEK), DOI 10.1145/3365365.3382193
   Wagner F., 2017, P INT C RES ED MECH, P1
   Winsten J, 2023, 2023 IEEE/ACM INTERNATIONAL WORKSHOP ON SEARCH-BASED AND FUZZ TESTING, SBFT, P43, DOI 10.1109/SBFT59156.2023.00009
   Yamagata Y, 2021, IEEE T SOFTWARE ENG, V47, P2823, DOI 10.1109/TSE.2020.2969178
   Zhang ZY, 2021, LECT NOTES COMPUT SC, V12759, P595, DOI 10.1007/978-3-030-81685-8_29
   Zhang ZY, 2021, LECT NOTES COMPUT SC, V12673, P392, DOI 10.1007/978-3-030-76384-8_24
NR 114
TC 0
Z9 0
U1 3
U2 3
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD FEB
PY 2024
VL 50
IS 2
BP 239
EP 257
DI 10.1109/TSE.2023.3343753
PG 19
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA IP4I9
UT WOS:001167516600003
OA Green Submitted
DA 2024-08-05
ER

PT J
AU Bu, H
   Sun, M
AF Bu, Hao
   Sun, Meng
TI Clopper-Pearson Algorithms for Efficient Statistical Model Checking
   Estimation
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Estimation; Model checking; Software algorithms; Testing; Numerical
   models; Costs; Computational modeling; Statistical model checking;
   formal methods; quantitative verification
ID SEQUENTIAL CONFIDENCE-INTERVALS; INEQUALITIES
AB Statistical model checking (SMC) is a simulation-based formal verification technique to deal with the scalability problem faced by traditional model checking. The main workflow of SMC is to perform iterative simulations. The number of simulations depends on users' requirement for the verification results, which can be very large if users require a high level of confidence and precision. Therefore, how to perform as fewer simulations as possible while achieving the same level of confidence and precision is one of the core problems of SMC. In this paper, we consider the estimation problem of SMC. Most existing statistical model checkers use the Okamoto bound to decide the simulation number. Although the Okamoto bound is sound, it is well known to be overly conservative. The simulation number decided by the Okamoto bound is usually much higher than it actually needs, which leads to a waste of time and computation resources. To tackle this problem, we propose an efficient, sound and lightweight estimation algorithm using the Clopper-Pearson confidence interval. We perform comprehensive numerical experiments and case studies to evaluate the performance of our algorithm, and the results show that our algorithm uses 40%-60% fewer simulations than the Okamoto bound. Our algorithm can be directly integrated into existing model checkers to reduce the verification time of SMC estimation problems.
C1 [Bu, Hao; Sun, Meng] Peking Univ, Sch Math Sci, Beijing 100871, Peoples R China.
C3 Peking University
RP Sun, M (corresponding author), Peking Univ, Sch Math Sci, Beijing 100871, Peoples R China.
EM buhao@pku.edu.cn; sunm@pku.edu.cn
FU National Key R&D Program of China [2022YFB2702200]; NSFC [62172019];
   CCF-Huawei Populus Grove Fund
FX This work was supported in part by the National Key R&D Program of China
   under Grant 2022YFB2702200, in part by the NSFC under Grant 62172019,
   and in part by the CCF-Huawei Populus Grove Fund.
CR Agha K., 2018, ACM Trans. Model. Comput. Simul., V28, P1
   Baier C, 2008, PRINCIPLES OF MODEL CHECKING, P1
   Baier C, 2003, IEEE T SOFTWARE ENG, V29, P524, DOI 10.1109/TSE.2003.1205180
   Ballarini P., 2011, Proceedings of the 2011 Eighth International Conference on Quantitative Evaluation of Systems (QEST 2011), P143, DOI 10.1109/QEST.2011.24
   Ballarini P, 2015, PERFORM EVALUATION, V90, P53, DOI 10.1016/j.peva.2015.04.003
   Bu, 2024, Zenodo, DOI 10.5281/ZENODO.10654358
   Budde CE, 2020, INT J SOFTW TOOLS TE, V22, P759, DOI 10.1007/s10009-020-00563-2
   Bustan D, 2004, LECT NOTES COMPUT SC, V3114, P189
   Chen JH, 2013, 2013 12TH INTERNATIONAL CONFERENCE ON MACHINE LEARNING AND APPLICATIONS (ICMLA 2013), VOL 2, P362, DOI 10.1109/ICMLA.2013.149
   CHOW YS, 1965, ANN MATH STAT, V36, P457, DOI 10.1214/aoms/1177700156
   Clopper CJ, 1934, BIOMETRIKA, V26, P404, DOI 10.2307/2331986
   Dagum P, 2000, SIAM J COMPUT, V29, P1484, DOI 10.1137/S0097539797315306
   David Alexandre, 2011, Computer Aided Verification. Proceedings 23rd International Conference, CAV 2011, P349, DOI 10.1007/978-3-642-22110-1_27
   David A, 2015, INT J SOFTW TOOLS TE, V17, P397, DOI 10.1007/s10009-014-0361-y
   Frey J, 2010, AM STAT, V64, P242, DOI 10.1198/tast.2010.09140
   Grosu R, 2005, LECT NOTES COMPUT SC, V3440, P271
   Hérault T, 2004, LECT NOTES COMPUT SC, V2937, P73
   Hérault T, 2006, INT CONF QUANT EVAL, P129
   HOEFFDING W, 1963, J AM STAT ASSOC, V58, P13, DOI 10.2307/2282952
   Jegourel Cyrille, 2013, Computer Aided Verification. 25th International Conference, CAV 2013. Proceedings. LNCS 8044, P576, DOI 10.1007/978-3-642-39799-8_38
   Jegourel C, 2019, ACM T MODEL COMPUT S, V29, DOI 10.1145/3310226
   Kwiatkowska Marta, 2011, Computer Aided Verification. Proceedings 23rd International Conference, CAV 2011, P585, DOI 10.1007/978-3-642-22110-1_47
   Legay A, 2016, LECT NOTES COMPUT SC, V9952, P77, DOI 10.1007/978-3-319-47166-2_6
   MASSART P, 1990, ANN PROBAB, V18, P1269, DOI 10.1214/aop/1176990746
   Mediouni B. L, 2018, Verimag Research Report, Tech. Rep. TR-2018-5
   Mnih Volodymyr, 2008, P 25 INT C MACH LEAR, P672
   OKAMOTO M, 1958, ANN I STAT MATH, V10, P29
   prismmodelchecker, "PRISM manual
   Reijsbergen D, 2012, PERFORM EVALUATION, V69, P336, DOI 10.1016/j.peva.2011.11.004
   Scholz F, UW Homepage
   Sen K, 2005, LECT NOTES COMPUT SC, V3576, P266
   Sen K, 2004, LECT NOTES COMPUT SC, V3114, P202
   uppaal, UPPAAL online documentation
   Vardi M. Y., 1985, 26th Annual Symposium on Foundations of Computer Science (Cat. No.85CH2224-4), P327, DOI 10.1109/SFCS.1985.12
   WALD A, 1945, ANN MATH STAT, V16, P117, DOI 10.1214/aoms/1177731118
   Watanabe O, 2005, THEOR COMPUT SCI, V348, P3, DOI 10.1016/j.tcs.2005.09.003
   Younes H. L. S., 2006, International Journal on Software Tools for Technology Transfer, V8, P216, DOI 10.1007/s10009-005-0187-8
   Younes H. L. S., 2002, Computer Aided Verification. 14th International Conference, CAV 2002. Proceedings (Lecture Notes in Computer Science Vol.2404), P223
   Younes HLS, 2006, LECT NOTES COMPUT SC, V3855, P142
NR 39
TC 0
Z9 0
U1 0
U2 0
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUL
PY 2024
VL 50
IS 7
BP 1726
EP 1746
DI 10.1109/TSE.2024.3392720
PG 21
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA YZ0O5
UT WOS:001272193600011
DA 2024-08-05
ER

PT J
AU Li, J
   Moeini, B
   Nejati, S
   Sabetzadeh, M
   McCallen, M
AF Li, Jia
   Moeini, Behrad
   Nejati, Shiva
   Sabetzadeh, Mehrdad
   McCallen, Michael
TI A Lean Simulation Framework for Stress Testing IoT Cloud Systems
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Simulation-based testing; stress testing; IoT cloud; model-driven
   engineering; Xtext; Simulation-based testing; stress testing; IoT cloud;
   model-driven engineering; Xtext
ID MOBILE IOT; FOG; INTERNET; TOOLKIT; THINGS; EDGE
AB The Internet of Things (IoT) connects a plethora of smart devices globally across various applications like smart cities, autonomous vehicles, and health monitoring. Simulation plays a key role in the testing of IoT systems, noting that field testing of a complete IoT product may be infeasible or prohibitively expensive. This paper addresses a specific yet important need in simulation-based testing for IoT: Stress testing of cloud systems that are increasingly employed in IoT applications. Existing stress testing solutions for IoT demand significant computational resources, making them ill-suited and costly. We propose a lean simulation framework designed for IoT cloud stress testing. The framework enables efficient simulation of a large array of IoT and edge devices that communicate with the cloud. To facilitate simulation construction for practitioners, we develop a domain-specific language (DSL), named IoTECS, for generating simulators from model-based specifications. We provide the syntax and semantics of IoTECS and implement IoTECS using Xtext and Xtend. We assess simulators generated from IoTECS specifications for stress testing two real-world systems: a cloud-based IoT monitoring system developed by our industry partner and an IoT-connected vehicle system. Our empirical results indicate that simulators created using IoTECS: (1) achieve best performance when configured with Docker containerization; (2) effectively assess the service capacity of our case-study systems, and (3) outperform industrial stress-testing baseline tools, JMeter and Locust, by a factor of 3.5 in terms of the number of IoT and edge devices they can simulate using identical hardware resources. To gain initial insights about the usefulness of IoTECS in practice, we interviewed two engineers from our industry partner who have firsthand experience with IoTECS. Feedback from these interviews suggests that IoTECS is effective in stress testing IoT cloud systems, saving significant time and effort.
C1 [Li, Jia; Moeini, Behrad; Nejati, Shiva; Sabetzadeh, Mehrdad; McCallen, Michael] Univ Ottawa, Ottawa, ON K1N 6N5, Canada.
   [McCallen, Michael] Cheetah Networks, Ottawa, ON K2K 3G4, Canada.
C3 University of Ottawa
RP Nejati, S (corresponding author), Univ Ottawa, Ottawa, ON K1N 6N5, Canada.
EM jli714@uottawa.ca; behrad.moeini@uottawa.ca; snejati@uottawa.ca;
   m.sabetzadeh@uottawa.ca; mccallen@cheetahnetworks.com
FU Mitacs; Cheetah Networks; Stratosfy; Ontario Centre of Innovation; NSERC
   of Canada under the Discovery Accelerator program; NSERC of Canada under
   the Discovery program
FX The authors gratefully acknowledge funding from Mitacs Accelerate,
   Cheetah Networks, Stratosfy, Ontario Centre of Innovation, and NSERC of
   Canada under the Discovery and Discovery Accelerator programs.
CR Åkesson A, 2019, INT CONF PERVAS COMP, P132, DOI [10.1109/percomw.2019.8730786, 10.1109/PERCOMW.2019.8730786]
   Aksakalli IK, 2021, J SYST SOFTWARE, V180, DOI 10.1016/j.jss.2021.111014
   Amrani M, 2017, MODELSWARD: PROCEEDINGS OF THE 5TH INTERNATIONAL CONFERENCE ON MODEL-DRIVEN ENGINEERING AND SOFTWARE DEVELOPMENT, P569, DOI 10.5220/0006285405690576
   [Anonymous], "Xtend v2.25.0
   [Anonymous], "Wireshark v3.6.0
   [Anonymous], APACHE JMETER
   [Anonymous], "Ns-3.35
   [Anonymous], Omnet++
   [Anonymous], "Xtext v2.25.0
   [Anonymous], AMAZON WEB SERVICES
   Araujo V, 2019, J PARALLEL DISTR COM, V132, P250, DOI 10.1016/j.jpdc.2018.12.010
   Beilharz J., 2021, arXiv
   Boulis A., 2011, NICTA Nat. ICT Aust., V83
   Brogi A, 2017, IEEE INTERNET THINGS, V4, P1185, DOI 10.1109/JIOT.2017.2701408
   Cacciagrano DR, 2020, INTERNET THINGS-NETH, V9, DOI 10.1016/j.iot.2018.09.006
   Cacciagrano DR, 2018, J AMB INTEL SMART EN, V10, P261, DOI 10.3233/AIS-180487
   Chan HA, 2004, P A REL MAI, P346, DOI 10.1109/RAMS.2004.1285473
   Chiang M, 2016, IEEE INTERNET THINGS, V3, P854, DOI 10.1109/JIOT.2016.2584538
   Cooja, "Cooja simulator
   Coutinho A, 2018, IEEE ICC
   Dayalan UK, 2022, PROCEEDINGS OF THE ACM SIGCOMM 2022 WORKSHOP ON NETWORKED SENSING SYSTEMS FOR A SUSTAINABLE SOCIETY, NET4US 2022, P33, DOI 10.1145/3538393.3544937
   Dizdarevic J, 2019, ACM COMPUT SURV, V51, DOI 10.1145/3292674
   Dugan J., "iperf." iPerf
   Elazhary H, 2019, J NETW COMPUT APPL, V128, P105, DOI 10.1016/j.jnca.2018.10.021
   Firouzabadi AD, 2023, IEEE ACCESS, V11, P56273, DOI 10.1109/ACCESS.2023.3282729
   Garg S. K., 2011, Proceedings of the 2011 IEEE 4th International Conference on Utility and Cloud Computing (UCC 2011), P105, DOI 10.1109/UCC.2011.24
   Gomes T, 2017, IEEE IND ELEC, P3945, DOI 10.1109/IECON.2017.8216675
   Gómez-Carmona O, 2022, IEEE INTERNET THINGS, V9, P7404, DOI 10.1109/JIOT.2021.3118845
   Gupta H, 2017, SOFTWARE PRACT EXPER, V47, P1275, DOI 10.1002/spe.2509
   Hoh B, 2007, CCS'07: PROCEEDINGS OF THE 14TH ACM CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P161
   Hou L, 2017, INT J NETW MANAG, V27, DOI 10.1002/nem.1936
   Hung M., "Leading the IoT
   Ismail AA, 2018, 2018 IEEE GLOBAL CONFERENCE ON INTERNET OF THINGS (GCIOT), P27
   Jha DN, 2020, SOFTWARE PRACT EXPER, V50, P844, DOI 10.1002/spe.2787
   Kertesz A, 2019, J GRID COMPUT, V17, P529, DOI 10.1007/s10723-018-9468-9
   Kliazovich D, 2012, J SUPERCOMPUT, V62, P1263, DOI 10.1007/s11227-010-0504-1
   Koziolek H, 2020, LECT NOTES COMPUT SC, V12292, P352, DOI 10.1007/978-3-030-58923-3_23
   Kubernetes, about us
   Kumar S., 2012, Int. J. Comput Appl., V46, P20
   Lazidis A, 2022, INTERNET THINGS-NETH, V19, DOI 10.1016/j.iot.2022.100538
   Li J., 2024, "Using genetic programming to build self-adaptivity into software-defined networks, V19
   Li J, 2022, I W S E ADAP SM SYS, P13, DOI 10.1145/3524844.3528053
   Li J, 2022, PROCEEDINGS OF THE 25TH INTERNATIONAL ACM/IEEE CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS, MODELS 2022, P367, DOI 10.1145/3550355.3552405
   Locust, About us
   Mani SK, 2018, PROCEEDINGS OF THE 8TH INTERNATIONAL CONFERENCE ON THE INTERNET OF THINGS (IOT'18), DOI 10.1145/3277593.3277606
   Mayer R., 2017, P IEEE FOG WORLD C F, P6
   "Mininet, Mininet
   Moawad A, 2015, 2015 ACM/IEEE 18TH INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS), P90, DOI 10.1109/MODELS.2015.7338239
   Morin B, 2017, IEEE SOFTWARE, V34, P30, DOI 10.1109/MS.2017.11
   Calheiros RN, 2009, Arxiv, DOI arXiv:0903.2525
   Nhan LT, 2018, PROCEEDINGS OF THE NINTH INTERNATIONAL SYMPOSIUM ON INFORMATION AND COMMUNICATION TECHNOLOGY (SOICT 2018), P155, DOI 10.1145/3287921.3287935
   Nikolaidis F, 2021, 21ST IEEE/ACM INTERNATIONAL SYMPOSIUM ON CLUSTER, CLOUD AND INTERNET COMPUTING (CCGRID 2021), P676, DOI 10.1109/CCGrid51090.2021.00081
   Österlind F, 2006, C LOCAL COMPUT NETW, P641
   Pahl C, 2019, IEEE T CLOUD COMPUT, V7, P677, DOI 10.1109/TCC.2017.2702586
   Pajooh HH, 2021, J BIG DATA-GER, V8, DOI 10.1186/s40537-021-00505-y
   Pflanzner T, 2016, 2016 IEEE 4TH INTERNATIONAL CONFERENCE ON FUTURE INTERNET OF THINGS AND CLOUD WORKSHOPS (FICLOUDW), P21, DOI 10.1109/W-FiCloud.2016.21
   Pokhilko A., UDPRequest
   Qayyum T, 2018, IEEE ACCESS, V6, P63570, DOI 10.1109/ACCESS.2018.2877696
   Ramprasad B, 2019, 2019 IEEE INTERNATIONAL CONFERENCE ON AUTONOMIC COMPUTING (ICAC 2019), P73, DOI 10.1109/ICAC.2019.00019
   SCHEFFER M, 1995, ECOL MODEL, V80, P161, DOI 10.1016/0304-3800(94)00055-M
   SednaLab, Iotecs
   Sendorek J, 2018, WIREL COMMUN MOB COM, DOI 10.1155/2018/1068261
   Shin SY, 2020, I W S E ADAP SM SYS, P137, DOI 10.1145/3387939.3391603
   Sneps-Sneppe M, 2015, Arxiv, DOI arXiv:1505.06713
   Software Logistics, "Nuviot iot simulator
   Song H., 2020, P ACM IEEE 23 INT C, P132
   Soni D., 2017, P INT C TEL POW AN C
   Sonklin K., 2019, J. Comput. Commun., V7, P82
   Sonmez C, 2017, 2017 SECOND INTERNATIONAL CONFERENCE ON FOG AND MOBILE EDGE COMPUTING (FMEC), P39, DOI 10.1109/FMEC.2017.7946405
   Symeonides M, 2020, 2020 IEEE/ACM SYMPOSIUM ON EDGE COMPUTING (SEC 2020), P42, DOI 10.1109/SEC50012.2020.00011
   Tichy M., 2020, P WORKSH P 4 WORKSH, P22
   Truong HL, 2021, INTERNET THINGS-NETH, V14, DOI 10.1016/j.iot.2021.100383
   Varghese B, 2016, 2016 IEEE INTERNATIONAL CONFERENCE ON SMART CLOUD (SMARTCLOUD), P20, DOI 10.1109/SmartCloud.2016.18
   Warren J., 2015, Big Data: Principles and Best Practices of Scalable Realtime Data Systems
   Wette P., 2014, P IFIP NETW C TRONDH, P9
   Zeng XZ, 2017, J SYST ARCHITECT, V72, P93, DOI 10.1016/j.sysarc.2016.06.008
NR 76
TC 0
Z9 0
U1 1
U2 1
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUL
PY 2024
VL 50
IS 7
BP 1827
EP 1851
DI 10.1109/TSE.2024.3402157
PG 25
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA YZ0O5
UT WOS:001272193600016
OA Green Submitted
DA 2024-08-05
ER

PT J
AU Zhang, B
   Ren, R
   Liu, J
   Jiang, MC
   Ren, JD
   Li, JY
AF Zhang, Bing
   Ren, Rong
   Liu, Jia
   Jiang, Mingcai
   Ren, Jiadong
   Li, Jingyue
TI SQLPsdem: A Proxy-Based Mechanism Towards Detecting, Locating and
   Preventing Second-Order SQL Injections
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE SQL injection; Databases; Static analysis; Structured Query Language;
   Payloads; Syntactics; Servers; Second-order SQL injection; static
   analysis; dynamic execution; proxy; detection and prevention
ID ATTACKS
AB Due to well-hidden and stage-triggered properties of second-order SQL injections in web applications, current approaches are ineffective in addressing them and still report high false negatives and false positives. To reduce false results, we propose a Proxy-based static analysis and dynamic execution mechanism towards detecting, locating and preventing second-order SQL injections (SQLPsdem). The static analysis first locates SQL statements in web applications and identifies all data sources and injection points (e.g., Post, Sessions, Database, File names) that injection attacks can exploit. After that, we reconstruct the SQL statements and use attack engines to jointly generate attacks to cover all the state-of-the-art attack patterns so as to exploit these applications. We then use proxy-based dynamic execution to capture the data transmitted between web applications and their databases. The data are the reconstructed SQL statements with variable values from the attack payloads. If a web application is vulnerable, the data will contain malicious attacks on the database. We match the data with rules formulated by attack patterns to detect first and second-order SQL injection vulnerabilities in web applications, particularly the second-order ones. We use a representative and complete coverage of attack patterns and precise matching rules to reduce false results. By escaping and truncating malicious payloads in the data transmitted from the web application to the database, we can eliminate the possible negative impact of the data on the database. In the evaluation, by generating 52,771 SQL injection attacks using four attack generators, SQLPsdem successfully detects 26 second-order (including 13 newly discovered ones) and 375 first-order SQL injection vulnerabilities in 12 open-source web applications. SQLPsdem can also 100% eliminate the malicious impact of the data with negligible overhead.
C1 [Zhang, Bing; Ren, Rong; Liu, Jia; Jiang, Mingcai; Ren, Jiadong] Yanshan Univ, Sch Informat Sci & Engn, Qinhuangdao 066000, Hebei, Peoples R China.
   [Zhang, Bing; Ren, Rong; Liu, Jia; Jiang, Mingcai; Ren, Jiadong] Key Lab Software Engn Hebei Prov, Qinhuangdao 066000, Hebei, Peoples R China.
   [Li, Jingyue] Norwegian Univ Sci & Technol, Dept Comp Sci, N-7030 Trondheim, Norway.
C3 Yanshan University; Norwegian University of Science & Technology (NTNU)
RP Ren, JD (corresponding author), Yanshan Univ, Sch Informat Sci & Engn, Qinhuangdao 066000, Hebei, Peoples R China.; Ren, JD (corresponding author), Key Lab Software Engn Hebei Prov, Qinhuangdao 066000, Hebei, Peoples R China.
EM bingzhang@ysu.edu.cn; raniy@sina.cn; liujia_ysu@163.com;
   m991027961@126.com; jdren@ysu.edu.cn; jingyue.li@ntnu.no
OI Li, Jingyue/0000-0002-7958-391X; Zhang, Bing/0000-0002-9867-8439
FU National Natural Science Foundation of China [62376240]; S&T Program of
   Hebei [226Z0701G, 236Z0702G, 236Z0304G]; Natural Science Foundation of
   Hebei Province [F2022203026]; Science and Technology Project of Hebei
   Education Department [BJK2022029]; Innovation Capability Improvement
   Plan Project of Hebei Province [22567637H]
FX This work was supported in part by the National Natural Science
   Foundation of China under Grant 62376240, in part by the S&T Program of
   Hebei under Grant 226Z0701G, Grant 236Z0702G, and Grant 236Z0304G, in
   part by the Natural Science Foundation of Hebei Province under Grant
   F2022203026, in part by the Science and Technology Project of Hebei
   Education Department under Grant BJK2022029, and in part by the
   Innovation Capability Improvement Plan Project of Hebei Province under
   Grant 22567637H.
CR Aliero MS, 2015, 2015 9TH MALAYSIAN SOFTWARE ENGINEERING CONFERENCE (MYSEC2015), P224, DOI 10.1109/MySEC.2015.7475225
   [Anonymous], SCHOOLMATE
   [Anonymous], OWASP TOP 10
   [Anonymous], Common Weakness Enumeration
   [Anonymous], PHP PARSER
   [Anonymous], Webchess
   [Anonymous], "2,300+ companies of all sizes automate application security testing withAcunetix
   [Anonymous], Wackopicko
   [Anonymous], "COVID-19 testing management system using PHP and MySQL
   [Anonymous], "Automatic penetration test tool
   [Anonymous], Doctormms
   [Anonymous], Pikachu, bWAPP, sqlilabs
   [Anonymous], PHPvulhunter
   [Anonymous], FAQFORGE
   [Anonymous], Petshop
   Awang A., 2015, Automated security testing frameworkfor detecting SQL injection vulnerability in web application, V534, P160
   Bandhakavi S, 2007, CCS'07: PROCEEDINGS OF THE 14TH ACM CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P12
   Ceccato M, 2016, IEEE INT CONF AUTOM, P167, DOI 10.1145/2970276.2970343
   Chen Y, 2023, IEICE T FUND ELECTR, VE106A, P133, DOI 10.1587/transfun.2022EAP1045
   Chen Z., 2011, Software Testing Guide: Fundamentals, Toolsand Practice, P51
   Clarke J., 2009, SQL Injection Attacks and Defense
   "CVE, The MITRE Corporation
   Dahse J., 2010, P SEM WORK SEM CAL H, P1
   Dahse J, 2014, PROCEEDINGS OF THE 23RD USENIX SECURITY SYMPOSIUM, P989
   Djuric Zoran, 2013, 2013 Second International Conference on Informatics & Applications (ICIA), P216, DOI 10.1109/ICoIA.2013.6650259
   Draib A., 2018, J. Eng. Appl. Sci., V13, P8426
   Halfond A., 2005, P 20 IEEE ACM INT C, P174
   Halfond A., 2006, P 14 ACM SIGSOFT INT, P175
   Halfond W.G., 2006, P IEEE INT S SEC SOF, V1, P13
   Halfond WGJ, 2008, IEEE T SOFTWARE ENG, V34, P65, DOI 10.1109/TSE.2007.70748
   Huang Yao-Wen, 2004, WWW '04: Proceedings of the 13th international conference on World Wide Web, ACM, New York, NY, USA, P40, DOI [DOI 10.1145/988672.988679, 10.1145/988672.988679]
   Jang YS, 2014, COMPUT SECUR, V44, P104, DOI 10.1016/j.cose.2014.04.007
   Jose K. Priyadarshini, 2016, P INT C SOFT COMP SY, P177
   Kar D, 2016, J COMPUT SECUR, V24, P507, DOI 10.3233/JCS-160554
   Kemalis K, 2008, APPLIED COMPUTING 2008, VOLS 1-3, P2153
   Kiezun A, 2009, PROC INT CONF SOFTW, P199, DOI 10.1109/ICSE.2009.5070521
   Lee I, 2012, MATH COMPUT MODEL, V55, P58, DOI 10.1016/j.mcm.2011.01.050
   Li P, 2017, P INT COMP SOFTW APP, P578, DOI 10.1109/COMPSAC.2017.64
   Li W., 2018, J. HuaqiaoUniv. (Natural Sci.), V39, P600
   Liu A., 2009, P 2009 ACM S APPL CO, P2054
   Liu M, 2018, IEEE ACCESS, V6, P70983, DOI 10.1109/ACCESS.2018.2881070
   Medeiros I, 2019, IEEE T RELIAB, V68, P1168, DOI 10.1109/TR.2019.2900007
   mysql, HackerNews
   Nguyen-Tuong A, 2005, INT FED INFO PROC, V181, P295
   Ollmann G., 2004, NGS Insight Secur.Res.
   Ping C, 2017, PROCEEDINGS OF 2017 IEEE 2ND INFORMATION TECHNOLOGY, NETWORKING, ELECTRONIC AND AUTOMATION CONTROL CONFERENCE (ITNEC), P1792, DOI 10.1109/ITNEC.2017.8285104
   Ray Donald, 2014, Information Security. 17th International Conference, ISC 2014. Proceedings: LNCS 8783, P425, DOI 10.1007/978-3-319-13257-0_26
   Ray D, 2012, ACM SIGPLAN NOTICES, V47, P179, DOI 10.1145/2103621.2103678
   Rivest R. L., 1992, The md5 message-digest algorithm
   Son K. S., 2013, P ACM SIGSAC C COMP, P1181, DOI [10.1145/2508859.2516696, DOI 10.1145/2508859.2516696]
   Su ZD, 2006, ACM SIGPLAN NOTICES, V41, P372, DOI 10.1145/1111320.1111070
   Thomé J, 2020, IEEE T SOFTWARE ENG, V46, P163, DOI 10.1109/TSE.2018.2844343
   Tian Y., 2014, Netinfo Secur., V15, P70
   Xu W, 2006, USENIX ASSOCIATION PROCEEDINGS OF THE 15TH USENIX SECURITY SYMPOSIUM, P121
   Yan X. Li, 2013, P INT WORKSH STRUCT, P154
   Zhang B, 2022, ACM COMPUT SURV, V54, DOI 10.1145/3474553
   Zhang L, 2019, IEEE T RELIAB, V68, P1470, DOI 10.1109/TR.2019.2910285
   ACUNETIX WEB VULNERA
NR 58
TC 0
Z9 0
U1 0
U2 0
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUL
PY 2024
VL 50
IS 7
BP 1807
EP 1826
DI 10.1109/TSE.2024.3400404
PG 20
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA YZ0O5
UT WOS:001272193600010
DA 2024-08-05
ER

PT J
AU Liu, ZJ
   Tang, YT
   Luo, XP
   Zhou, YM
   Zhang, LF
AF Liu, Zhijie
   Tang, Yutian
   Luo, Xiapu
   Zhou, Yuming
   Zhang, Liang Feng
TI No Need to Lift a Finger Anymore? Assessing the Quality of Code
   Generation by ChatGPT
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Large language model; ChatGPT; code generation
ID PROGRAM
AB Large language models (LLMs) have demonstrated impressive capabilities across various natural language processing (NLP) tasks, such as machine translation, question answering, summarization, and so on. Additionally, LLMs are also highly valuable in supporting software engineering tasks, particularly in the field of code generation. Automatic code generation is a process of automatically generating source code or executable code based on given specifications or requirements, improving developer productivity. In this study, we perform a systematic empirical assessment to the quality of code generation using ChatGPT, a recent state-of-the-art product LLM. We leverage 728 algorithm problems in five languages (i.e., C, C++, Java, Python, and JavaScript) and 18 CWEs with 54 code scenarios for the code generation task. Our evaluation encompasses a comprehensive analysis of code snippets generated by ChatGPT, focusing on three critical aspects: correctness, complexity, and security. We also specifically investigate ChatGPT's ability to engage in multi-round fixing process (i.e., ChatGPT's dialog ability, chatting between users and ChatGPT for fixing generated buggy code) of facilitating code generation. By delving into the generated code and examining the experimental results, this work provides valuable insights into the performance of ChatGPT in tackling code generation tasks over the three critical aspects. The experimental results demonstrate that (1) ChatGPT is better at generating functionally correct code for problems before 2021 in different languages than problems after 2021 with 48.14% advantage in Accepted rate on judgment platform, but ChatGPT's ability to directly fix erroneous code with multi-round fixing process to achieve correct functionality is relatively weak; (2) the distribution of cyclomatic and cognitive complexity levels for code snippets in different languages varies. Furthermore, the multi-round fixing process with ChatGPT generally preserves or increases the complexity levels of code snippets; (3) in algorithm scenarios with languages of C, C++, and Java, and CWE scenarios with languages of C and Python3, the code generated by ChatGPT has relevant vulnerabilities. However, the multi-round fixing process for vulnerable code snippets demonstrates promising results, with more than 89% of vulnerabilities successfully addressed; and (4) code generation may be affected by ChatGPT's non-determinism factor, resulting in variations of code snippets in functional correctness, complexity, and security. Overall, our findings uncover potential issues and limitations that arise in the ChatGPT-based code generation and lay the groundwork for improving AI and LLM-based code generation techniques.
C1 [Liu, Zhijie; Zhang, Liang Feng] ShanghaiTech Univ, Shanghai 201210, Peoples R China.
   [Tang, Yutian] Univ Glasgow, Glasgow City G128QQ, Scotland.
   [Luo, Xiapu] Hong Kong Polytech Univ, Dept Comp, Hong Kong 999077, Peoples R China.
   [Zhou, Yuming] Nanjing Univ, Nanjing 210008, Peoples R China.
C3 ShanghaiTech University; University of Glasgow; Hong Kong Polytechnic
   University; Nanjing University
RP Tang, YT (corresponding author), Univ Glasgow, Glasgow City G128QQ, Scotland.
EM liuzhj2022@shanghaitech.edu.cn; yutian.tang@glasgow.ac.uk;
   csxluo@comp.polyu.edu.hk; zhouyuming@nju.edu.cn;
   zhanglf@shanghaitech.edu.cn
OI Tang, Yutian/0000-0001-5677-4564
FU National Natural Science Foundation of China
FX No Statement Available
CR Abate A, 2018, LECT NOTES COMPUT SC, V10981, P270, DOI 10.1007/978-3-319-96145-3_15
   Allamanis M, 2018, ACM COMPUT SURV, V51, DOI 10.1145/3212695
   Alon U, 2019, P ACM PROGRAM LANG, V3, DOI 10.1145/3290353
   [Anonymous], GPT-3.5 models
   [Anonymous], Gpt-4 technical report
   [Anonymous], GitHub Copilot Your AI pair programmer - github.com
   [Anonymous], ChatGPT: Optimizing language models for dialogue
   [Anonymous], Programming competitions and contests, programming community
   [Anonymous], The world's leading online programming learning platform
   [Anonymous], What is AI code generation?
   [Anonymous], CodeQL full cwe coverage
   [Anonymous], Cognitive complexity
   [Anonymous], Try bard, an AI experiment by Google
   [Anonymous], Reverse engineered ChatGPT API by openAI. Extensible for chatbots etc
   [Anonymous], CodeQL documentation
   [Anonymous], Online artifact
   [Anonymous], openAI-cookbook
   [Anonymous], DALLE, GPT, midjourney, stable diffusion, ChatGPT prompt marketplace
   [Anonymous], CCCC project documentation
   [Anonymous], 2022 CWE top 25 most dangerous software weaknesses
   [Anonymous], Python / modern C++ solutions of all 2577 LeetCode problems." kamyu104
   [Anonymous], An extensible cross-language static code analyzer
   [Anonymous], clean code for teams and enterprises with sonarqube
   Bei Chen, 2022, Arxiv, DOI arXiv:2207.10397
   Bielik P, 2016, PR MACH LEARN RES, V48
   Brants T., 2007, Proc. EMNLP-CoNLL, P858
   Brown T. B., 2020, P 34 INT C NEURAL IN, P1
   Bui NDQ, 2021, PROC INT CONF SOFTW, P1186, DOI 10.1109/ICSE43902.2021.00109
   Cai XY, 2023, IEEE T MULTIMEDIA, V25, P845, DOI 10.1109/TMM.2021.3132724
   Carlini N, 2021, PROCEEDINGS OF THE 30TH USENIX SECURITY SYMPOSIUM, P2633
   Chen M., 2021, arXiv, DOI DOI 10.48550/ARXIV.2107.03374
   Cho KYHY, 2014, Arxiv, DOI [arXiv:1406.1078, 10.48550/arXiv.1406.1078]
   Dantas C. E. C., 2021, arXiv
   Devlin J, 2019, Arxiv, DOI arXiv:1810.04805
   Dong YH, 2024, Arxiv, DOI arXiv:2304.07590
   Fan ZY, 2022, Arxiv, DOI arXiv:2205.10583
   Fay MP, 2010, STAT SURV, V4, P1, DOI 10.1214/09-SS051
   Feng ZY, 2020, Arxiv, DOI [arXiv:2002.08155, 10.48550/arXiv.2002.08155]
   Fu YJ, 2024, Arxiv, DOI arXiv:2310.02059
   Gulwani S, 2017, FOUND TRENDS PROGRAM, V4, P1, DOI 10.1561/2500000010
   Gulwani S, 2011, ACM SIGPLAN NOTICES, V46, P317, DOI 10.1145/1925844.1926423
   Gvero T, 2013, ACM SIGPLAN NOTICES, V48, P27, DOI 10.1145/2499370.2462192
   Haefliger S, 2008, MANAGE SCI, V54, P180, DOI 10.1287/mnsc.1070.0748
   Hendrycks D, 2021, Arxiv, DOI arXiv:2105.09938
   HOLM S, 1979, SCAND J STAT, V6, P65
   Hu HS, 2022, ACM COMPUT SURV, V54, DOI 10.1145/3523273
   Hu YT, 2023, IEEE T SOFTWARE ENG, V49, P4429, DOI 10.1109/TSE.2023.3295801
   Kalyan A, 2018, Arxiv, DOI [arXiv:1804.01186, 10.48550/ARXIV.1804.01186]
   Khashabi D, 2020, Arxiv, DOI arXiv:2005.00700
   Kou BA, 2024, Arxiv, DOI arXiv:2306.01220
   Krishna K, 2022, Arxiv, DOI arXiv:2205.09726
   Lan ZZ, 2020, Arxiv, DOI [arXiv:1909.11942, DOI 10.48550/ARXIV.1909.11942]
   Le THM, 2020, ACM COMPUT SURV, V53, DOI 10.1145/3383458
   Li J, 2018, Arxiv, DOI arXiv:1711.09573
   Liu F, 2020, INT C PROGRAM COMPRE, P37, DOI 10.1145/3387904.3389261
   Liu JW, 2023, Arxiv, DOI arXiv:2305.01210
   Liu Y, 2023, Arxiv, DOI arXiv:2307.12596
   Macbeth G, 2011, UNIV PSYCHOL, V10, P545, DOI 10.11144/Javeriana.upsy10-2.cdcp
   McCabe T. J., 1976, IEEE Transactions on Software Engineering, VSE-2, P308, DOI 10.1109/TSE.1976.233837
   Nagata R, 2021, Arxiv, DOI arXiv:2108.12216
   Nguyen N, 2022, IEEE WORK CONF MIN S, P1, DOI 10.1145/3524842.3528470
   Nijkamp E, 2022, Arxiv, DOI arXiv:2203.13474
   OpenAI, Chatgpt
   Ouyang L., 2022, arXiv
   Pearce H, 2023, P IEEE S SECUR PRIV, P2339, DOI 10.1109/SP46215.2023.10179420
   Pearce H, 2022, P IEEE S SECUR PRIV, P754, DOI 10.1109/SP46214.2022.00057
   Peters M., 2018, arXiv:1802.05365, V12
   Pilault J, 2020, PROCEEDINGS OF THE 2020 CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING (EMNLP), P9308
   Rabinovich M., 2017, arXiv
   Radford A, 2018, Improving language understanding by generative Pre-Training
   Radford A., 2019, OpenAI blog, V1, P9
   Raffel C, 2020, J MACH LEARN RES, V21
   Rigaki M, 2023, Arxiv, DOI [arXiv:2007.07646, 10.48550/arXiv.2007.07646]
   Scalabrino S, 2017, IEEE INT CONF AUTOM, P417, DOI 10.1109/ASE.2017.8115654
   Siddiq ML, 2022, IEEE INT WORK C SO, P71, DOI 10.1109/SCAM55253.2022.00014
   Sobania D, 2022, PROCEEDINGS OF THE 2022 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE (GECCO'22), P1019, DOI 10.1145/3512290.3528700
   Stallings W., 2012, Computer Security: Principles and Practice, V3
   Svyatkovskiy A, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P1433, DOI 10.1145/3368089.3417058
   Tan SH, 2017, PROC IEEE ACM INT C, P180, DOI 10.1109/ICSE-C.2017.76
   Tufano M, 2021, Arxiv, DOI arXiv:2009.05617
   Vaithilingam P, 2022, EXTENDED ABSTRACTS OF THE 2022 CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, CHI 2022, DOI 10.1145/3491101.3519665
   Vaswani A., 2017, Advances in neural information processing systems, P5998
   Wang Y, 2021, 2021 CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING (EMNLP 2021), P8696
   Xia CS, 2023, PROC INT CONF SOFTW, P1482, DOI 10.1109/ICSE48619.2023.00129
   Ye W, 2020, WEB CONFERENCE 2020: PROCEEDINGS OF THE WORLD WIDE WEB CONFERENCE (WWW 2020), P2309, DOI 10.1145/3366423.3380295
   Zhang J, 2019, PROC INT CONF SOFTW, P783, DOI 10.1109/ICSE.2019.00086
   Zhang YZ, 2020, 58TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (ACL 2020): SYSTEM DEMONSTRATIONS, P270
NR 87
TC 2
Z9 2
U1 8
U2 8
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUN
PY 2024
VL 50
IS 6
BP 1548
EP 1584
DI 10.1109/TSE.2024.3392499
PG 37
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA UL2G2
UT WOS:001248142900012
OA Green Submitted, Green Accepted
DA 2024-08-05
ER

PT J
AU Zhang, YX
   Qiu, ZQ
   Stol, KJ
   Zhu, WH
   Zhu, JX
   Tian, YC
   Liu, H
AF Zhang, Yuxia
   Qiu, Zhiqing
   Stol, Klaas-Jan
   Zhu, Wenhui
   Zhu, Jiaxin
   Tian, Yingchen
   Liu, Hui
TI Automatic Commit Message Generation: A Critical Review and Directions
   for Future Work
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Commit-based software development; open collaboration; commit message
   generation; benchmark
AB Commit messages are critical for code comprehension and software maintenance. Writing a high-quality message requires skill and effort. To support developers and reduce their effort on this task, several approaches have been proposed to automatically generate commit messages. Despite the promising performance reported, we have identified three significant and prevalent threats in these automated approaches: 1) the datasets used to train and evaluate these approaches contain a considerable amount of 'noise'; 2) current approaches only consider commits of a limited diff size; and 3) current approaches can only generate the subject of a commit message, not the message body. The first limitation may let the models 'learn' inappropriate messages in the training stage, and also lead to inflated performance results in their evaluation. The other two threats can considerably weaken the practical usability of these approaches. Further, with the rapid emergence of large language models (LLMs) that show superior performance in many software engineering tasks, it is worth asking: can LLMs address the challenge of long diffs and whole message generation? This article first reports the results of an empirical study to assess the impact of these three threats on the performance of the state-of-the-art auto generators of commit messages. We collected commit data of the Top 1,000 most-starred Java projects in GitHub and systematically removed noisy commits with bot-submitted and meaningless messages. We then compared the performance of four approaches representative of the state-of-the-art before and after the removal of noisy messages, or with different lengths of commit diffs. We also conducted a qualitative survey with developers to investigate their perspectives on simply generating message subjects. Finally, we evaluate the performance of two representative LLMs, namely UniXcoder and ChatGPT, in generating more practical commit messages. The results demonstrate that generating commit messages is of great practical value, considerable work is needed to mature the current state-of-the-art, and LLMs can be an avenue worth trying to address the current limitations. Our analyses provide insights for future work to achieve better performance in practice.
C1 [Zhang, Yuxia; Qiu, Zhiqing; Zhu, Wenhui; Liu, Hui] Beijing Inst Technol, Sch Comp Sci & Technol, Beijing 100081, Peoples R China.
   [Stol, Klaas-Jan] Univ Coll Cork, Lero, Sci Fdn Ireland Res Ctr Software, Cork T12 K8AF, Ireland.
   [Stol, Klaas-Jan] Univ Coll Cork, Sch Comp & IT, Cork T12 K8AF, Ireland.
   [Zhu, Jiaxin] Chinese Acad Sci, Inst Software, Beijing 100190, Peoples R China.
   [Zhu, Jiaxin] Univ Chinese Acad Sci, Beijing 100190, Peoples R China.
   [Tian, Yingchen] Tmall Technol Co, Hangzhou 3111000, Zhejiang, Peoples R China.
C3 Beijing Institute of Technology; University College Cork; University
   College Cork; Chinese Academy of Sciences; Institute of Software, CAS;
   Chinese Academy of Sciences; University of Chinese Academy of Sciences,
   CAS
RP Liu, H (corresponding author), Beijing Inst Technol, Sch Comp Sci & Technol, Beijing 100081, Peoples R China.
EM yuxiazh@bit.edu.cn; zhiqingqiu@bit.edu.cn; k.stol@ucc.ie;
   wenhuizhu@bit.edu.cn; zhujiaxin@otcaix.iscas.ac.cn;
   tianyc10@foxmail.com; liuhui08@bit.edu.cn
RI ; Stol, Klaas-Jan/I-6269-2013
OI Liu, Hui/0000-0002-3267-6801; Stol, Klaas-Jan/0000-0002-1038-5050
FU National Natural Science Foundation of China
FX No Statement Available
CR Alizadeh Vahid, 2019, 2019 34th IEEE/ACM International Conference on Automated Software Engineering (ASE). Proceedings, P823, DOI 10.1109/ASE.2019.00081
   [Anonymous], Commit example
   Bahdanau D, 2016, Arxiv, DOI arXiv:1409.0473
   Banerjee S., 2005, ACL WORKSH INTR EXTR, P65
   Brown T., 2020, ADV NEURAL INFORM PR, V33, P1877, DOI DOI 10.48550/ARXIV.2005.14165
   Buse Raymond PL, 2010, P IEEEACM INT C AUTO, P33
   Chahal KK, 2018, IFIP ADV INF COMM TE, V525, P61, DOI 10.1007/978-3-319-92375-8_6
   Chang YP, 2023, Arxiv, DOI [arXiv:2307.03109, DOI 10.1145/3641289]
   Chowdhery A, 2022, Arxiv, DOI arXiv:2204.02311
   Dey T, 2020, IEEE WORK CONF MIN S, P209, DOI 10.1145/3379597.3387478
   Dong JH, 2023, PROC INT CONF SOFTW, P794, DOI 10.1109/ICSE48619.2023.00075
   Dong JH, 2022, PROC INT CONF SOFTW, P970, DOI 10.1145/3510003.3510069
   Dyer R, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P422, DOI 10.1109/ICSE.2013.6606588
   Erlenhov L, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P445, DOI 10.1145/3368089.3409680
   Fan AEL, 2023, Arxiv, DOI arXiv:2310.03533
   Farooq Umer, 2016, interactions, V23, P26, DOI [10.1145/3001896, DOI 10.1145/3001896]
   Feng ZY, 2020, FINDINGS OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, EMNLP 2020, P1536
   Cortés-Coy LF, 2014, IEEE INT WORK C SO, P275, DOI 10.1109/SCAM.2014.14
   Fritz CO, 2012, J EXP PSYCHOL GEN, V141, P30, DOI 10.1037/a0026092
   Golzadeh M, 2020, P 2020 IEEE ACM 42 I, P6, DOI [10.1145/3387940.3391503, DOI 10.1145/3387940.3391503]
   Golzadeh M, 2021, J SYST SOFTWARE, V175, DOI 10.1016/j.jss.2021.110911
   Guo DY, 2022, Arxiv, DOI arXiv:2203.03850
   Hoang T, 2020, PROC INT CONF SOFTW, P518, DOI 10.1145/3377811.3380361
   Hou XY, 2024, Arxiv, DOI arXiv:2308.10620
   Huang Y, 2017, INT SYMP EMP SOFTWAR, P414, DOI 10.1109/ESEM.2017.56
   Jiang SY, 2017, IEEE INT CONF AUTOM, P135, DOI 10.1109/ASE.2017.8115626
   Jiang SY, 2017, INT C PROGRAM COMPRE, P320, DOI 10.1109/ICPC.2017.12
   Jiao WX, 2023, Arxiv, DOI [arXiv:2301.08745, 10.48550/ARXIV.2301.08745, DOI 10.48550/ARXIV.2301.08745]
   Jiaxin Zhu, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P409, DOI 10.1109/MSR.2019.00068
   Kim S, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P481, DOI 10.1145/1985793.1985859
   Kitchenham B., 2007, GUIDELINES PERFORMIN, P1, DOI DOI 10.1145/1134285.1134500
   LANDIS JR, 1977, BIOMETRICS, V33, P159, DOI 10.2307/2529310
   Li JW, 2023, PROC INT CONF SOFTW, P806, DOI 10.1109/ICSE48619.2023.00076
   Liang JT, 2022, PROCEEDINGS OF THE 30TH ACM JOINT MEETING EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, ESEC/FSE 2022, P170, DOI 10.1145/3540250.3549082
   Lin B, 2023, Arxiv, DOI arXiv:2305.10785
   Lin Chin-Yew, 2004, P 42 ANN M ASS COMP, P605, DOI DOI 10.3115/1218955.1219032
   LIN JH, 1991, IEEE T INFORM THEORY, V37, P145, DOI 10.1109/18.61115
   Linares-Vásquez M, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P709, DOI 10.1109/ICSE.2015.229
   Liu SQ, 2020, Arxiv, DOI arXiv:1912.02972
   Liu ZX, 2023, PROC INT CONF SOFTW, P17, DOI 10.1109/ICSE48619.2023.00014
   Liu ZX, 2023, Arxiv, DOI arXiv:2302.03924
   Liu ZX, 2018, IEEE INT CONF AUTOM, P373, DOI 10.1145/3238147.3238190
   Loyola P., 2018, P 11 INT C NAT LANG, P119, DOI [10.18653/v1, DOI 10.18653/V1]
   Loyola P, 2017, PROCEEDINGS OF THE 55TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (ACL 2017), VOL 2, P287, DOI 10.18653/v1/P17-2045
   Manning C.D., 2008, Introduction to information retrieval
   Mockus A., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, P263, DOI 10.1109/ICSE.2000.870417
   Mockus Audris., 2014, Proceedings of the on Future of Software Engineering, P85, DOI 10.1145/2593882.2593889
   Nachar N, 2008, TUTOR QUANT METHODS, V4, P13, DOI 10.20982/tqmp.04.1.p013
   Nassif M, 2017, PROC IEEE INT CONF S, P261, DOI 10.1109/ICSME.2017.64
   Nie LY, 2021, NEUROCOMPUTING, V459, P97, DOI 10.1016/j.neucom.2021.05.039
   Nikoo H, 2021, DEV Community
   OpenAI, 2022, CHATGPT
   Operator S, 2019, #491-url cleanup
   Ozkaya I, 2023, IEEE SOFTWARE, V40, P4, DOI 10.1109/MS.2023.3248401
   Papineni K, 2002, 40TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, PROCEEDINGS OF THE CONFERENCE, P311, DOI 10.3115/1073083.1073135
   Qin Liu, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P299, DOI 10.1109/MSR.2019.00056
   Roy D, 2021, PROCEEDINGS OF THE 29TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '21), P1105, DOI 10.1145/3468264.3468588
   Seaman CB, 1999, IEEE T SOFTWARE ENG, V25, P557, DOI 10.1109/32.799955
   Shen JF, 2016, P INT COMP SOFTW APP, P103, DOI 10.1109/COMPSAC.2016.162
   Smith E, 2013, 2013 6TH INTERNATIONAL WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING (CHASE), P89, DOI 10.1109/CHASE.2013.6614738
   Storey MA, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P928, DOI 10.1145/2950290.2983989
   Surameery N.M.S., 2023, International Journal of Information Technology & Computer Engineering (IJITC), V3, P17, DOI DOI 10.55529/IJITC.31.17.22
   Tao W, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-022-10219-1
   Tao W, 2021, PROC IEEE INT CONF S, P126, DOI 10.1109/ICSME52107.2021.00018
   Tian YC, 2022, PROC INT CONF SOFTW, P2389, DOI 10.1145/3510003.3510205
   Touvron H, 2023, Arxiv, DOI [arXiv:2302.13971, DOI 10.48550/ARXIV.2302.13971]
   Tu FF, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P307, DOI 10.1145/3236024.3236054
   Wang HY, 2021, ACM T SOFTW ENG METH, V30, DOI 10.1145/3464689
   Wang Y., 2021, arXiv
   Wessel M, 2019, 2019 IEEE/ACM 1ST INTERNATIONAL WORKSHOP ON BOTS IN SOFTWARE ENGINEERING (BOTSE 2019), P38, DOI 10.1109/BotSE.2019.00018
   White J, 2023, Arxiv, DOI [arXiv:2302.11382, DOI 10.48550/ARXIV.2302.11382, 10.48550/arXiv.2302.11382]
   Wu XX, 2021, IEEE T SOFTWARE ENG, V48, P2541, DOI 10.1109/TSE.2021.3063727
   Wyrich M, 2021, 2021 IEEE/ACM THIRD INTERNATIONAL WORKSHOP ON BOTS IN SOFTWARE ENGINEERING (BOTSE 2021), P6, DOI 10.1109/BotSE52550.2021.00009
   Wyrich M, 2019, 2019 IEEE/ACM 1ST INTERNATIONAL WORKSHOP ON BOTS IN SOFTWARE ENGINEERING (BOTSE 2019), P24, DOI 10.1109/BotSE.2019.00015
   Xu BW, 2017, IEEE INT CONF AUTOM, P706, DOI 10.1109/ASE.2017.8115681
   Xu SB, 2019, PROCEEDINGS OF THE TWENTY-EIGHTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P3975
   Zhang Y., 2023, Appendix to 'automatic commit message gener-ation: A critical review and directions for future work'
   Zhang YX, 2020, PROC INT CONF SOFTW, P1196, DOI 10.1145/3377811.3380376
   Zhu JM, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P415, DOI 10.1109/ICSE.2015.60
NR 79
TC 0
Z9 0
U1 6
U2 6
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD APR
PY 2024
VL 50
IS 4
BP 816
EP 835
DI 10.1109/TSE.2024.3364675
PG 20
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA OC2K3
UT WOS:001204993400015
OA hybrid
DA 2024-08-05
ER

PT J
AU Li, B
   Quan, HW
   Wang, JW
   Liu, P
   Cai, HP
   Miao, Y
   Yang, Y
   Li, L
AF Li, Bo
   Quan, Haowei
   Wang, Jiawei
   Liu, Pei
   Cai, Haipeng
   Miao, Yuan
   Yang, Yun
   Li, Li
TI Neural Library Recommendation by Embedding Project-Library Knowledge
   Graph
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Python; Libraries; Vectors; Software; Mobile applications; Knowledge
   graphs; Graph neural networks; Third-party library; recommendation;
   knowledge graph; graph neural network
AB The prosperity of software applications brings fierce market competition to developers. Employing third-party libraries (TPLs) to add new features to projects under development and to reduce the time to market has become a popular way in the community. However, given the tremendous TPLs ready for use, it is challenging for developers to effectively and efficiently identify the most suitable TPLs. To tackle this obstacle, we propose an innovative approach named PyRec to recommend potentially useful TPLs to developers for their projects. Taking Python project development as a use case, PyRec embeds Python projects, TPLs, contextual information, and relations between those entities into a knowledge graph. Then, it employs a graph neural network to capture useful information from the graph to make TPL recommendations. Different from existing approaches, PyRec can make full use of not only project-library interaction information but also contextual information to make more accurate TPL recommendations. Comprehensive evaluations are conducted based on 12,421 Python projects involving 963 TPLs, 9,675 extra entities, 121,474 library usage records, and 73,277 contextual records. Compared with five representative approaches, PyRec improves the recommendation performance significantly in all cases.
C1 [Li, Bo; Miao, Yuan] Victoria Univ, Coll Arts Business Law Educ & Informat Technol, Melbourne, Vic 3011, Australia.
   [Quan, Haowei; Wang, Jiawei; Liu, Pei] Monash Univ, Fac Informat Technol, Melbourne, Vic 3800, Australia.
   [Cai, Haipeng] Washington State Univ, Sch Elect Engn & Comp Sci EECS, Pullman, WA 99163 USA.
   [Yang, Yun] Swinburne Univ Technol, Dept Comp Technol, Melbourne, Vic 3122, Australia.
   [Li, Li] Beihang Univ, Sch Software, Beijing 100191, Peoples R China.
C3 Victoria University; Monash University; Washington State University;
   Swinburne University of Technology; Beihang University
RP Li, L (corresponding author), Beihang Univ, Sch Software, Beijing 100191, Peoples R China.
EM bo.li@vu.edu.au; haowei.quan@monash.edu; jiawei.wang1@monash.edu;
   pei.liu@monash.edu; haipeng.cai@wsu.edu; yuan.miao@vu.edu.au;
   yyang@swin.edu.au; lilicoding@ieee.org
RI Cai, Haipeng/K-7802-2015
OI Cai, Haipeng/0000-0002-5224-9970; Li, Li/0000-0003-2990-1614
CR Adomavicius G, 2005, ACM T INFORM SYST, V23, P103, DOI 10.1145/1055709.1055714
   Backes M, 2016, CCS'16: PROCEEDINGS OF THE 2016 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P356, DOI 10.1145/2976749.2978333
   Bao LF, 2021, IEEE T SOFTWARE ENG, V47, P1277, DOI 10.1109/TSE.2019.2918536
   Cheng W, 2022, PROC INT CONF SOFTW, P451, DOI 10.1145/3510003.3510078
   Gao C., 2023, ACM Transactions Recommender System, V1, P1, DOI [DOI 10.1145/3568022, 10.1145/3568022]
   Gong WW, 2022, PROCEEDINGS OF THE 45TH INTERNATIONAL ACM SIGIR CONFERENCE ON RESEARCH AND DEVELOPMENT IN INFORMATION RETRIEVAL (SIGIR '22), P395, DOI 10.1145/3477495.3531962
   Han ZB, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P456, DOI 10.1109/SANER.2018.8330232
   He H, 2021, 2021 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2021), P72, DOI 10.1109/SANER50967.2021.00016
   He KM, 2016, LECT NOTES COMPUT SC, V9908, P630, DOI 10.1007/978-3-319-46493-0_38
   He Q, 2022, IEEE T SOFTWARE ENG, V48, P150, DOI 10.1109/TSE.2020.2982154
   He XN, 2017, PROCEEDINGS OF THE 26TH INTERNATIONAL CONFERENCE ON WORLD WIDE WEB (WWW'17), P173, DOI 10.1145/3038912.3052569
   He XC, 2021, PROC INT CONF SOFTW, P1634, DOI 10.1109/ICSE43902.2021.00145
   Horton E, 2019, PROC INT CONF SOFTW, P328, DOI 10.1109/ICSE.2019.00047
   Huang FR, 2023, PROCEEDINGS OF THE 46TH INTERNATIONAL ACM SIGIR CONFERENCE ON RESEARCH AND DEVELOPMENT IN INFORMATION RETRIEVAL, SIGIR 2023, P1147, DOI 10.1145/3539618.3591732
   Huang Q, 2018, IEEE INT CONF AUTOM, P293, DOI 10.1145/3238147.3238191
   Ji SX, 2022, IEEE T NEUR NET LEAR, V33, P494, DOI 10.1109/TNNLS.2021.3070843
   Ki T, 2019, PROC INT CONF SOFTW, P246, DOI 10.1109/ICSE.2019.00040
   Kingma D. P., 2014, arXiv
   Kong DZ, 2022, EUR CON SFTWR MTNCE, P630, DOI 10.1109/SANER53432.2022.00080
   Lamothe M, 2020, PROC INT CONF SOFTW, P912, DOI 10.1145/3377811.3380433
   Li B, 2021, PROCEEDINGS OF THE 29TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '21), P466, DOI 10.1145/3468264.3468552
   Li L, 2022, Arxiv, DOI arXiv:2202.11840
   Li MH, 2017, PROC INT CONF SOFTW, P335, DOI 10.1109/ICSE.2017.38
   Li ZF, 2022, IEEE T NEUR NET LEAR, V33, P3961, DOI 10.1109/TNNLS.2021.3055147
   Lika B, 2014, EXPERT SYST APPL, V41, P2065, DOI 10.1016/j.eswa.2013.09.005
   Lin YK, 2015, AAAI CONF ARTIF INTE, P2181
   Liu XY, 2018, IEEE INT CONF AUTOM, P282, DOI 10.1145/3238147.3238216
   Liu Y, 2020, IEEE INT CONF AUTOM, P834, DOI 10.1145/3324884.3416628
   Liu ZX, 2019, AUTOMAT SOFTW ENG, V26, P241, DOI 10.1007/s10515-019-00254-6
   Ma Z, 2016, 2016 IEEE/ACM 38TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING COMPANION (ICSE-C), P653, DOI 10.1145/2889160.2889178
   Nguyen PT, 2020, J SYST SOFTWARE, V161, DOI 10.1016/j.jss.2019.110460
   Nguyen PT, 2019, PROC INT CONF SOFTW, P1050, DOI 10.1109/ICSE.2019.00109
   Ouni A, 2017, INFORM SOFTWARE TECH, V83, P55, DOI 10.1016/j.infsof.2016.11.007
   Pang YT, 2022, WSDM'22: PROCEEDINGS OF THE FIFTEENTH ACM INTERNATIONAL CONFERENCE ON WEB SEARCH AND DATA MINING, P775, DOI 10.1145/3488560.3498505
   Ren XX, 2020, IEEE INT CONF AUTOM, P461, DOI 10.1145/3324884.3416551
   Rubei R, 2022, EUR CON SFTWR MTNCE, P817, DOI 10.1109/SANER53432.2022.00099
   Saied MA, 2018, J SYST SOFTWARE, V145, P164, DOI 10.1016/j.jss.2018.08.032
   Saied MA, 2016, 2016 IEEE 24TH INTERNATIONAL CONFERENCE ON PROGRAM COMPREHENSION (ICPC)
   Tamasauskait e G., 2023, "ACM Trans. Softw. Eng.Methodol, V32, P1
   Thung F, 2013, IEEE INT CONF AUTOM, P290, DOI 10.1109/ASE.2013.6693088
   Thung F, 2013, WORK CONF REVERSE EN, P182, DOI 10.1109/WCRE.2013.6671293
   Volkovs M, 2017, ADV NEUR IN, V30
   Wang JW, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P233, DOI 10.1145/3368089.3409735
   Wang JW, 2021, PROC INT CONF SOFTW, P1622, DOI 10.1109/ICSE43902.2021.00144
   Wang Q, 2017, IEEE T KNOWL DATA EN, V29, P2724, DOI 10.1109/TKDE.2017.2754499
   Wang X, 2019, KDD'19: PROCEEDINGS OF THE 25TH ACM SIGKDD INTERNATIONAL CONFERENCCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P950, DOI 10.1145/3292500.3330989
   Wang XD, 2019, SIGBIOMED WORKSHOP ON BIOMEDICAL NATURAL LANGUAGE PROCESSING (BIONLP 2019), P165, DOI 10.1145/3331184.3331267
   Wang Y, 2020, PROC INT CONF SOFTW, P125, DOI 10.1145/3377811.3380426
   Wang Y, 2020, PROC IEEE INT CONF S, P35, DOI 10.1109/ICSME46990.2020.00014
   Wu H, 2022, IEEE T SERV COMPUT, V15, P3330, DOI 10.1109/TSC.2021.3098756
   Xie RS, 2019, PROC INT SYMP SOFTW, P369, DOI 10.1109/ISSRE.2019.00044
   Xie XQ, 2022, IEEE T SOFTWARE ENG, V48, P4357, DOI 10.1109/TSE.2021.3117590
   Xu BW, 2020, EMPIR SOFTW ENG, V25, P755, DOI 10.1007/s10664-019-09771-0
   Xu Keyulu, 2018, PREPRINT, DOI DOI 10.48550/ARXIV.1810.00826
   Ye HJ, 2022, PROC INT CONF SOFTW, P1245, DOI 10.1145/3510003.3510127
   Ye LT, 2018, IEEE INT CONF AUTOM, P808, DOI 10.1145/3238147.3240472
   Yu WH, 2022, AAAI CONF ARTIF INTE, P8954
   Zhan X, 2020, IEEE INT CONF AUTOM, P919, DOI 10.1145/3324884.3416582
   Zhang SA, 2019, ACM COMPUT SURV, V52, DOI 10.1145/3285029
   Zhang Y, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P141, DOI 10.1109/SANER.2018.8330204
   Zhang ZX, 2020, PROCEEDINGS OF THE 2020 IEEE 27TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER '20), P81, DOI [10.1109/SANER48275.2020.9054800, 10.1109/saner48275.2020.9054800]
   Zhao L. Li, 2021, Inf. Softw.Technol. (IST), V138
   Zhao XJ, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P56, DOI 10.1109/SANER.2017.7884609
   Zhao YJ, 2023, IEEE T SOFTWARE ENG, V49, P113, DOI [10.1109/TSE.2022.3146831, 10.1109/IECON49645.2022.9968601]
   Zhao Y, 2019, PROC INT CONF SOFTW, P128, DOI 10.1109/ICSE.2019.00030
   Zhou C, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P944, DOI 10.1145/3236024.3275428
   Zhuo JH, 2022, PROCEEDINGS OF THE 31ST ACM INTERNATIONAL CONFERENCE ON INFORMATION AND KNOWLEDGE MANAGEMENT, CIKM 2022, P2806, DOI 10.1145/3511808.3557472
NR 67
TC 0
Z9 0
U1 0
U2 0
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUN
PY 2024
VL 50
IS 6
BP 1620
EP 1638
DI 10.1109/TSE.2024.3393504
PG 19
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA UL2G2
UT WOS:001248142900003
DA 2024-08-05
ER

PT J
AU Xian, ZX
   Huang, RB
   Towey, D
   Fang, CR
   Chen, ZY
AF Xian, Zixiang
   Huang, Rubing
   Towey, Dave
   Fang, Chunrong
   Chen, Zhenyu
TI TransformCode: A Contrastive Learning Framework for Code Embedding via
   Subtree Transformation
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Codes; Task analysis; Self-supervised learning; Syntactics; Semantics;
   Vectors; Training; Code embedding; transformer; abstract syntax tree;
   contrastive learning
ID NETWORKS
AB Artificial intelligence (AI) has revolutionized software engineering (SE) by enhancing software development efficiency. The advent of pre-trained models (PTMs) leveraging transfer learning has significantly advanced AI for SE. However, existing PTMs that operate on individual code tokens suffer from several limitations: They are costly to train and fine-tune; and they rely heavily on labeled data for fine-tuning on task-specific datasets. In this paper, we present TransformCode, a novel framework that learns code embeddings in a contrastive learning manner. Our framework is encoder-agnostic and language-agnostic, which means that it can leverage any encoder model and handle any programming language. We also propose a novel data-augmentation technique called abstract syntax tree (AST) transformation, which applies syntactic and semantic transformations to the original code snippets, to generate more diverse and robust samples for contrastive learning. Our framework has several advantages over existing methods: (1) It is flexible and adaptable, because it can easily be extended to other downstream tasks that require code representation (such as code-clone detection and classification); (2) it is efficient and scalable, because it does not require a large model or a large amount of training data, and it can support any programming language; (3) it is not limited to unsupervised learning, but can also be applied to some supervised learning tasks by incorporating task-specific labels or objectives; and (4) it can also adjust the number of encoder parameters based on computing resources. We evaluate our framework on several code-related tasks, and demonstrate its effectiveness and superiority over the state-of-the-art methods such as SourcererCC, Code2vec, and InferCode.
C1 [Xian, Zixiang; Huang, Rubing] Macau Univ Sci & Technol, Sch Comp Sci & Engn, Macau 999078, Peoples R China.
   [Towey, Dave] Univ Nottingham Ningbo China, Sch Comp Sci, Ningbo 315100, Zhejiang, Peoples R China.
   [Fang, Chunrong; Chen, Zhenyu] Nanjing Univ, State Key Lab Novel Software Technol, Nanjing 210093, Peoples R China.
C3 Macau University of Science & Technology; University of Nottingham
   Ningbo China; Nanjing University
RP Huang, RB (corresponding author), Macau Univ Sci & Technol, Sch Comp Sci & Engn, Macau 999078, Peoples R China.; Fang, CR (corresponding author), Nanjing Univ, State Key Lab Novel Software Technol, Nanjing 210093, Peoples R China.
EM 3220001352@student.must.edu.mo; bhuang@must.edu.mo;
   dave.towey@nottingham.edu.cn; fangchunrong@nju.edu.cn; zychen@nju.edu.cn
RI Fang, Chunrong/GPW-9872-2022; Towey, Dave/K-3160-2014
OI Fang, Chunrong/0000-0002-9930-7111; Xian, Zixiang/0000-0002-8892-6187;
   Chen, Zhenyu/0000-0002-9592-7022; Huang, Rubing/0000-0002-1769-6126;
   Towey, Dave/0000-0003-0877-4353
FU Science and Technology Development Fund of Macau, Macau SAR
FX No Statement Available
CR Ahmad WU, 2021, 2021 CONFERENCE OF THE NORTH AMERICAN CHAPTER OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS: HUMAN LANGUAGE TECHNOLOGIES (NAACL-HLT 2021), P2655
   Ahmad Wasi Uddin, 2020, P 58 ANN M ASS COMPU, P4998, DOI 10.18653/v1/2020.acl-main.449
   Allamanis M, 2018, Arxiv, DOI arXiv:1711.00740
   Alon U., 2019, P INT C LEARN REPR I
   Alon U, 2019, P ACM PROGRAM LANG, V3, DOI 10.1145/3290353
   Batra H, 2021, LECT NOTES COMPUT SC, V12923, P138, DOI 10.1007/978-3-030-86472-9_13
   Bui NDQ, 2023, Arxiv, DOI arXiv:2306.00029
   Bui NDQ, 2021, PROC INT CONF SOFTW, P1186, DOI 10.1109/ICSE43902.2021.00109
   Bui NDQ, 2021, AAAI CONF ARTIF INTE, V35, P30
   Chakraborty S, 2022, IEEE T SOFTWARE ENG, V48, P3280, DOI 10.1109/TSE.2021.3087402
   Chen T., 2020, Adv. Neural Inf. Process. Syst., V33, P22243, DOI DOI 10.48550/ARXIV.2006.10029
   Chen TQ, 2016, KDD'16: PROCEEDINGS OF THE 22ND ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P785, DOI 10.1145/2939672.2939785
   Chen T, 2020, PR MACH LEARN RES, V119
   Chen XL, 2020, Arxiv, DOI arXiv:2003.04297
   Chen XL, 2021, PROC CVPR IEEE, P15745, DOI 10.1109/CVPR46437.2021.01549
   Chen ZM, 2019, Arxiv, DOI arXiv:1904.03061
   Cho I, 2023, P INT COMP SOFTW APP, P1786, DOI 10.1109/COMPSAC57700.2023.00276
   Chunrong Fang, 2020, ISSTA '20: Proceedings of the 29th ACM SIGSOFT International Symposium on Software Testing and Analysis, P516, DOI 10.1145/3395363.3397362
   Devlin J, 2019, 2019 CONFERENCE OF THE NORTH AMERICAN CHAPTER OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS: HUMAN LANGUAGE TECHNOLOGIES (NAACL HLT 2019), VOL. 1, P4171
   Feng ZY, 2020, FINDINGS OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, EMNLP 2020, P1536
   FRIEND EH, 1956, J ACM, V3, P134, DOI 10.1145/320831.320833
   Gao SZ, 2023, ACM T SOFTW ENG METH, V32, DOI 10.1145/3522674
   Gao TY, 2021, 2021 CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING (EMNLP 2021), P6894
   Grill J.-B., 2020, P 34 INT C NEURAL IN, P21284, DOI DOI 10.5555/3495724.3497510
   Hearst MA, 1998, IEEE INTELL SYST APP, V13, P18, DOI 10.1109/5254.708428
   Hu E.J., 2022, P 10 INT C LEARN REP
   Hunter JD, 2007, COMPUT SCI ENG, V9, P90, DOI 10.1109/MCSE.2007.55
   Huo X, 2017, PROCEEDINGS OF THE TWENTY-SIXTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P1909
   Jain P, 2021, 2021 CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING (EMNLP 2021), P5954
   Jeni LA, 2013, INT CONF AFFECT, P245, DOI 10.1109/ACII.2013.47
   Jiang LX, 2007, PROC INT CONF SOFTW, P96
   Kaiming He, 2020, 2020 IEEE/CVF Conference on Computer Vision and Pattern Recognition (CVPR). Proceedings, P9726, DOI 10.1109/CVPR42600.2020.00975
   Kang HJ, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P1, DOI 10.1109/ASE.2019.00011
   Kim Yoon, 2014, EMNLP, P1746, DOI 10.3115/v1/D14-1181
   Kudo T, 2018, PROCEEDINGS OF THE 56TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (ACL), VOL 1, P66
   Li Y., 2016, P 4 INT C LEARN REPR, P3087
   Liu CY, 2021, 2021 36TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING ASE 2021, P617, DOI 10.1109/ASE51524.2021.9678907
   Liu S., 2020, P 16 INT C LEARN REP, P1
   Liu YH, 2019, Arxiv, DOI [arXiv:1907.11692, DOI 10.48550/ARXIV.1907.11692]
   Ma YF, 2022, MACH LEARN, V111, P853, DOI 10.1007/s10994-021-06078-4
   Mehrotra N, 2022, IEEE T SOFTWARE ENG, V48, P3771, DOI 10.1109/TSE.2021.3105556
   Mou LL, 2016, AAAI CONF ARTIF INTE, P1287
   Ou MD, 2016, KDD'16: PROCEEDINGS OF THE 22ND ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P1105, DOI 10.1145/2939672.2939751
   Saini V, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P354, DOI 10.1145/3236024.3236026
   Sajnani H, 2016, PROC INT CONF SOFTW, P1157, DOI 10.1145/2884781.2884877
   Schuster M, 2012, INT CONF ACOUST SPEE, P5149, DOI 10.1109/ICASSP.2012.6289079
   Sennrich R, 2016, PROCEEDINGS OF THE 54TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, VOL 1, P1715
   Shaw P., 2018, Self-attention with relative position representations, P464
   Sheneamer A, 2018, 2018 17TH IEEE INTERNATIONAL CONFERENCE ON MACHINE LEARNING AND APPLICATIONS (ICMLA), P701, DOI 10.1109/ICMLA.2018.00111
   Sheneamer A, 2017, 2017 16TH IEEE INTERNATIONAL CONFERENCE ON MACHINE LEARNING AND APPLICATIONS (ICMLA), P981, DOI 10.1109/ICMLA.2017.00-25
   Svajlenko J, 2014, PROC IEEE INT CONF S, P476, DOI 10.1109/ICSME.2014.77
   Tang Z, 2022, PROC INT CONF SOFTW, P150, DOI 10.1145/3510003.3510224
   Tufano M, 2018, IEEE WORK CONF MIN S, P542, DOI 10.1145/3196398.3196431
   van den Oord A, 2019, Arxiv, DOI [arXiv:1807.03748, DOI 10.48550/ARXIV.1807.03748]
   van der Maaten L, 2008, J MACH LEARN RES, V9, P2579
   Vaswani A., 2017, Advances in neural information processing systems, P5998
   Vig J, 2019, PROCEEDINGS OF THE 57TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS: SYSTEM DEMONSTRATIONS, (ACL 2019), P37
   Wang WH, 2020, PROCEEDINGS OF THE 2020 IEEE 27TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER '20), P261, DOI [10.1109/saner48275.2020.9054857, 10.1109/SANER48275.2020.9054857]
   Wang X, 2022, INT C PROGRAM COMPRE, P354, DOI 10.1145/3524610.3527896
   White M, 2016, IEEE INT CONF AUTOM, P87, DOI 10.1145/2970276.2970326
   Wu YM, 2022, PROC INT CONF SOFTW, P2365, DOI 10.1145/3510003.3510229
   Wu ZR, 2018, PROC CVPR IEEE, P3733, DOI 10.1109/CVPR.2018.00393
   Xian Z., 2022, Bounded Asymmetric Gaussian Mixture-Based Hidden Markov Models, P33
   Xian ZX, 2021, 2021 IEEE 22ND INTERNATIONAL CONFERENCE ON INFORMATION REUSE AND INTEGRATION FOR DATA SCIENCE (IRI 2021), P41, DOI 10.1109/IRI51335.2021.00012
   Xian ZX, 2021, EUR SIGNAL PR CONF, P1436, DOI 10.23919/EUSIPCO54536.2021.9616056
   Ye A., 2023, Tree-Based Deep Learning Approaches, P549
   Ye M, 2019, PROC CVPR IEEE, P6203, DOI 10.1109/CVPR.2019.00637
   Yonglong Tian, 2020, Computer Vision - ECCV 2020 16th European Conference. Proceedings. Lecture Notes in Computer Science (LNCS 12356), P776, DOI 10.1007/978-3-030-58621-8_45
   Zaremba W, 2015, Arxiv, DOI [arXiv:1410.4615, 10.48550/arxiv.1410.4615]
   Zhang J, 2020, PROC INT CONF SOFTW, P1385, DOI 10.1145/3377811.3380383
   Zhang J, 2019, PROC INT CONF SOFTW, P783, DOI 10.1109/ICSE.2019.00086
   Zhang Z, 2021, INT J MACH LEARN CYB, V12, P1649, DOI 10.1007/s13042-020-01264-7
   Zheng WH, 2019, FRONT COMPUT SCI-CHI, V13, P565, DOI 10.1007/s11704-018-7457-6
NR 73
TC 0
Z9 0
U1 1
U2 1
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUN
PY 2024
VL 50
IS 6
BP 1600
EP 1619
DI 10.1109/TSE.2024.3393419
PG 20
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA UL2G2
UT WOS:001248142900007
OA Green Submitted
DA 2024-08-05
ER

PT J
AU Clerissi, D
   Denaro, G
   Mobilio, M
   Mariani, L
AF Clerissi, Diego
   Denaro, Giovanni
   Mobilio, Marco
   Mariani, Leonardo
TI Guess the State: Exploiting Determinism to Improve GUI Exploration
   Efficiency
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Web testing; system testing; state inference
AB Many automatic Web testing techniques generate test cases by analyzing the GUI of the Web applications under test, aiming to exercise sequences of actions that are similar to the ones that testers could manually execute. However, the efficiency of the test generation process is severely limited by the cost of analyzing the content of the GUI screens after executing each action. In this paper, we introduce an inference component, Sibilla, which accumulates knowledge about the behavior of the GUI after each action. Sibilla enables the test generators to reuse the results computed for GUI screens that recur multiple times during the test generation process, thus improving the efficiency of Web testing techniques. We experimented Sibilla with Web testing techniques based on three different GUI exploration strategies (Random, Depth-first, and Q-learning) and nine target systems, observing reductions from 22% to 96% of the test generation time.
C1 [Clerissi, Diego; Denaro, Giovanni; Mobilio, Marco; Mariani, Leonardo] Univ Milano Bicocca, Dept Informat Syst & Commun, I-20126 Milan, Italy.
C3 University of Milano-Bicocca
RP Clerissi, D (corresponding author), Univ Milano Bicocca, Dept Informat Syst & Commun, I-20126 Milan, Italy.
EM diego.clerissi@unimib.it; giovanni.denaro@unimib.it;
   marco.mobilio@unimib.it; leonardo.mariani@unimib.it
OI DENARO, GIOVANNI/0000-0002-7566-8051; Mobilio,
   Marco/0000-0002-3499-0159; CLERISSI, DIEGO/0000-0001-7651-0400
CR Aho P, 2018, IEEE ICST WORKSHOP, P118, DOI 10.1109/ICSTW.2018.00038
   [Anonymous], US
   [Anonymous], WebDriver
   Artzi S, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P571, DOI 10.1145/1985793.1985871
   Baek YM, 2016, IEEE INT CONF AUTOM, P238, DOI [10.1145/2970276.2970313, 10.1145/2970276.2970310]
   Biagiola M, 2020, IEEE INT CONF SOFTW, P175, DOI 10.1109/ICST46399.2020.00027
   Biagiola M, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P142, DOI 10.1145/3338906.3338970
   Biagiola M, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P154, DOI 10.1145/3338906.3338948
   Biagiola M, 2017, LECT NOTES COMPUT SC, V10452, P18, DOI 10.1007/978-3-319-66299-2_2
   Bures M, 2018, IEEE T RELIAB, V67, P557, DOI 10.1109/TR.2018.2799957
   Choudhary SR, 2015, IEEE INT CONF AUTOM, P429, DOI 10.1109/ASE.2015.89
   Clerissi D, 2020, IEEE INT CONF AUTOM, P66, DOI 10.1145/3324884.3416561
   Corazza S., 2021, 15 ACMIEEE INT SYMPE, P1
   de Caso G, 2013, ACM T SOFTW ENG METH, V22, DOI 10.1145/2491509.2491519
   de Caso G, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P381, DOI 10.1145/1985793.1985846
   Denaro L., 2019, PROGRAMWORKSHOP, P1
   developer.android, Developers
   DimeShift, ABOUT US
   Dolibarr, ABOUT US
   Dong Z, 2020, PROC INT CONF SOFTW, P481, DOI 10.1145/3377811.3380402
   Fard A. M., 2013, PROC IEEE 24 INT S S, P278
   Feng SD, 2023, PROC INT CONF SOFTW, P906, DOI 10.1109/ICSE48619.2023.00084
   google.com, Google Chrome
   Gu TX, 2019, PROC INT CONF SOFTW, P269, DOI 10.1109/ICSE.2019.00042
   Guizzardi R., 2022, Information Science, P546
   Hammoudi M, 2016, IEEE INT CONF SOFTW, P180, DOI 10.1109/ICST.2016.16
   Jasmine, ABOUT US
   Kirinuki H, 2019, 2019 IEEE 26TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER), P310, DOI [10.1109/saner.2019.8667976, 10.1109/SANER.2019.8667976]
   Leotta M, 2014, LECT NOTES COMPUT SC, V8541, P322, DOI 10.1007/978-3-319-08245-5_19
   Leotta M, 2013, WORK CONF REVERSE EN, P272, DOI 10.1109/WCRE.2013.6671302
   Li YC, 2017, PROC IEEE ACM INT C, P23, DOI 10.1109/ICSE-C.2017.8
   Manku A., 2007, P 16 INT C WORLD WID, P141, DOI 10.1145/1242572.1242592
   Mao K., 2016, P 25 INT S SOFTW TES, P94
   Mariani L., 2012, 2012 IEEE Fifth International Conference on Software Testing, Verification and Validation (ICST 2012), P81, DOI 10.1109/ICST.2012.88
   Mariani L, 2014, SOFTW TEST VERIF REL, V24, P341, DOI 10.1002/stvr.1538
   Memon AM, 2005, IEEE T SOFTWARE ENG, V31, P884, DOI 10.1109/TSE.2005.117
   Memon A, 2013, WORK CONF REVERSE EN, P11, DOI 10.1109/WCRE.2013.6671275
   Mesbah A, 2012, ACM T WEB, V6, DOI 10.1145/2109205.2109208
   Mesbah A, 2012, IEEE T SOFTWARE ENG, V38, P35, DOI 10.1109/TSE.2011.28
   mozilla, Mozilla Firefox
   MRBS, ABOUT US
   Pagekit, ABOUT US
   PetClinic, ABOUT US
   Raffelt T., 2008, WORKSHOP TESTING ANA, P1
   retractionwatch, About us
   Riganelli Oliviero, 2020, ISSTA '20: Proceedings of the 29th ACM SIGSOFT International Symposium on Software Testing and Analysis, P141, DOI 10.1145/3395363.3397379
   Ristad ES, 1998, IEEE T PATTERN ANAL, V20, P522, DOI 10.1109/34.682181
   sampleapp.tricentis, Tricentis Vehicle Insurance
   Schur M, 2015, IEEE T SOFTWARE ENG, V41, P1184, DOI 10.1109/TSE.2015.2461542
   sourceforge, Mantis Bug Tracker
   SplittyPie, ABOUT US
   Su T, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P245, DOI 10.1145/3106237.3106298
   Tanja EJ, 2015, INT J INF SYST MODEL, V6, P46, DOI 10.4018/IJISMD.2015070103
   Tramontana P, 2020, LECT NOTES COMPUT SC, V12543, P169, DOI 10.1007/978-3-030-64881-7_11
   Vos P., 2021, Softw. Testing, Verification Rel., V31, P1771
   Wang WY, 2018, IEEE INT CONF AUTOM, P738, DOI 10.1145/3238147.3240465
   Wen HL, 2015, P INT COMP SOFTW APP, P210, DOI 10.1109/COMPSAC.2015.80
   Yandrapally RK, 2023, IEEE T SOFTWARE ENG, V49, P1086, DOI 10.1109/TSE.2022.3171295
   Yandrapally R, 2020, PROC INT CONF SOFTW, P186, DOI 10.1145/3377811.3380416
   Zaeem RN, 2014, 2014 IEEE SEVENTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST), P183, DOI 10.1109/ICST.2014.31
NR 60
TC 0
Z9 0
U1 0
U2 0
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD APR
PY 2024
VL 50
IS 4
BP 836
EP 853
DI 10.1109/TSE.2024.3366586
PG 18
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA OC2K3
UT WOS:001204993400004
OA hybrid, Green Submitted
DA 2024-08-05
ER

PT J
AU Minani, JB
   Sabir, F
   Moha, N
   Guéhéneuc, YG
AF Minani, Jean Baptiste
   Sabir, Fatima
   Moha, Naouel
   Gueheneuc, Yann-Gael
TI A Systematic Review of IoT Systems Testing: Objectives, Approaches,
   Tools, and Challenges
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE IoT system testing; IoT testing tools; IoT testing approaches; IoT
   testing challenges; IoT quality attributes
ID INTERNET; THINGS; QUALITY; PROTOCOLS
AB Internet of Things (IoT) systems are becoming prevalent in various domains, from healthcare to smart homes. Testing IoT systems is critical in ensuring their reliability. Previous papers studied separately the objectives, approaches, tools, and challenges of IoT systems testing. However, despite the rapid evolution of the IoT domain, no review has been undertaken to investigate all four aspects collectively. This paper presents a systematic literature review that aggregates, synthesizes, and discusses the results of 83 primary studies (PSs) concerning IoT testing objectives, approaches, tools, and challenges. We followed the Preferred Reporting Items for Systematic Review and Meta-Analysis (PRISMA) protocol to report our findings and answer research questions (RQs). To select PSs, we applied inclusion and exclusion criteria to relevant studies published between 2012 and 2022. We extracted and analyzed the data from PSs to understand IoT systems testing. The results reveal that IoT systems testing embraces traditional software quality attributes but also introduces new ones like connectivity, energy efficiency, device lifespan, distributivity, and dynamicity. They also show that existing IoT systems testing approaches are limited to specific aspects and should be expanded for more comprehensive testing. They also show 19 testing tools and 15 testbeds for testing IoT systems with their limitations, necessitating the development or enhancement for wider coverage. The large number of heterogeneous devices generating data in different formats, along with the need for testing in real-world scenarios, poses a challenge. Thus, our study offers insights into the testing objectives, approaches, tools, and challenges associated with IoT systems. Based on the results, we also provide practical guidance for IoT practitioners by cataloging existing tools and approaches, while also identifying new research opportunities for interested researchers.
C1 [Minani, Jean Baptiste; Sabir, Fatima; Gueheneuc, Yann-Gael] Concordia Univ, Dept Comp Sci & Software Engn, Montreal, PQ H3G 1M8, Canada.
   [Sabir, Fatima] Univ Punjab, Dept Comp Sci, Lahore 54590, Pakistan.
   [Moha, Naouel] Univ Quebec, Ecole Technol Super ETS, Dept Comp Sci, Montreal, PQ, Canada.
C3 Concordia University - Canada; University of Punjab; University of
   Quebec; University of Quebec Montreal; Ecole de Technologie Superieure -
   Canada
RP Minani, JB (corresponding author), Concordia Univ, Dept Comp Sci & Software Engn, Montreal, PQ H3G 1M8, Canada.
EM jeanbaptiste.minani@concordia.ca; fatima.sabir@pucit.edu.pk;
   moha.naouel@estmtl.ca; yann-gael.gueheneuc@concordia.ca
OI Moha, Naouel/0000-0001-9252-9937; MINANI, JEAN
   BAPTISTE/0000-0002-9164-6645; Gueheneuc, Yann-Gael/0000-0002-4361-2563
FU Canada Research Chair Program
FX This work was supported by the Canada Research Chair Program.
CR Abbas S, 2021, 4TH INTERNATIONAL CONFERENCE ON INNOVATIVE COMPUTING (IC)2, P720, DOI 10.1109/ICIC53490.2021.9693011
   AbdelHafeez M, 2018, 2018 IEEE GLOBAL CONFERENCE ON INTERNET OF THINGS (GCIOT), P32
   Abdullah Amir, 2020, New Paradigm in Decision Science and Management. Proceedings of ICDSM 2018. Advances in Intelligent Systems and Computing (AISC 1030), P293, DOI 10.1007/978-981-13-9330-3_30
   Abououf M, 2022, IEEE INTERNET THINGS, V9, P25285, DOI 10.1109/JIOT.2022.3196049
   Adekanmi A., 2019, DOF10, V13140, P1
   Adjih C, 2015, 2015 IEEE 2ND WORLD FORUM ON INTERNET OF THINGS (WF-IOT), P459, DOI 10.1109/WF-IoT.2015.7389098
   Ahmad A, 2016, LECT NOTES COMPUT SC, V9953, P727, DOI 10.1007/978-3-319-47169-3_55
   Ahmed BS, 2019, IEEE ACCESS, V7, P13758, DOI 10.1109/ACCESS.2019.2893493
   Alam T., 2018, CSEIT1835111| Received, V10, P450, DOI [DOI 10.36227/TECHRXIV.12657158.V1, 10.36227/techrxiv.12657158.v1]
   Alduais NAM, 2017, INT MULTICONF SYST, P760, DOI 10.1109/SSD.2017.8166984
   Alhafidh B., 2016, Int. J. Eng. Res. Appl., V6, P2248
   Amalfitano D., 2017, PROC 1 ACM WORKSHOP, P57
   [Anonymous], 2020, IoT Testing Challenges and Approaches
   Beilharz J, 2022, LECT NOTES COMPUT SC, V13236, P336, DOI 10.1007/978-3-031-14135-5_30
   Bettayeb M, 2019, 2019 IEEE CONFERENCE ON APPLICATION, INFORMATION AND NETWORK SECURITY (AINS), P18, DOI [10.1109/ains47559.2019.8968694, 10.1109/AINS47559.2019.8968694]
   Bin Tauqeer O, 2021, INTELL AUTOM SOFT CO, V29, P291, DOI 10.32604/iasc.2021.017260
   Bosmans S, 2019, COMPUTING, V101, P857, DOI 10.1007/s00607-018-0650-5
   Brian R, 2018, INT CONF UTIL CLOUD, P252, DOI 10.1109/UCC-Companion.2018.00064
   Buratti C, 2016, IEEE INTERNET THINGS, V3, P124, DOI 10.1109/JIOT.2015.2462030
   Bures M, 2021, IEEE INT CONF SOFTW, P454, DOI 10.1109/ICST49551.2021.00059
   Bures M, 2020, LECT NOTES COMPUT SC, V12310, P93, DOI 10.1007/978-3-030-58768-0_6
   Bures M, 2020, EAI SPRINGER INNOVAT, P59, DOI 10.1007/978-3-030-28925-6_6
   Burhan M, 2018, SENSORS-BASEL, V18, DOI 10.3390/s18092796
   Cavalcante E, 2015, 2015 12TH WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE (WICSA), P31, DOI 10.1109/WICSA.2015.21
   Chen WK, 2018, ASIA PAC SOFWR ENG, P668, DOI 10.1109/APSEC.2018.00087
   Chernyshev M, 2018, IEEE INTERNET THINGS, V5, P1637, DOI 10.1109/JIOT.2017.2786639
   Chhiba L, 2022, LECT NOTE NETW SYST, V393, P495, DOI 10.1007/978-3-030-94191-8_40
   COHEN J, 1968, PSYCHOL BULL, V70, P213, DOI 10.1037/h0026256
   Cooke A, 2012, QUAL HEALTH RES, V22, P1435, DOI 10.1177/1049732312452938
   Cortés M, 2019, SAST 2019: PROCEEDINGS OF THE IV BRAZILIAN SYMPOSIUM ON SYSTEMATIC AND AUTOMATED SOFTWARE TESTING, P3, DOI 10.1145/3356317.3356326
   Datta SK, 2018, 2018 IEEE REGION TEN SYMPOSIUM (TENSYMP), P112, DOI 10.1109/TENCONSpring.2018.8691994
   Datta SK, 2018, 2018 GLOBAL INTERNET OF THINGS SUMMIT (GIOTS), P343
   Demirel ST, 2019, INT SYM NETWO COMP
   Dias JP, 2019, PROCEEDINGS OF THE 24TH EUROPEAN CONFERENCE ON PATTERN LANGUAGES OF PROGRAMS (EUROPLOP 2019), DOI 10.1145/3361149.3361165
   Dias JP, 2018, IEEE ICST WORKSHOP, P104, DOI 10.1109/ICSTW.2018.00035
   Dyba Tore, 2007, 2007 First International Symposium on Empirical Software Engineering and Measurement, P225
   Eceiza M, 2021, IEEE INTERNET THINGS, V8, P10390, DOI 10.1109/JIOT.2021.3056179
   Edvardsson B, 1996, SERV IND J, V16, P140, DOI 10.1080/02642069600000019
   Esquiagola J, 2017, IOTBDS: PROCEEDINGS OF THE 2ND INTERNATIONAL CONFERENCE ON INTERNET OF THINGS, BIG DATA AND SECURITY, P309, DOI 10.5220/0006304503090314
   Fadhil JA, 2022, PROCEEDING OF THE 2ND 2022 INTERNATIONAL CONFERENCE ON COMPUTER SCIENCE AND SOFTWARE ENGINEERING (CSASE 2022), P77, DOI 10.1109/CSASE51777.2022.9759705
   Fahmideh M, 2022, IEEE T SOFTWARE ENG, V48, P2857, DOI 10.1109/TSE.2021.3070692
   Fahmideh M, 2020, INFORM SYST, V87, DOI 10.1016/j.is.2019.06.005
   Fei W., 2023, ACM Comput. Surv., V56, P1
   Firesmith D., 2015, A taxonomy of testing
   Fizza K, 2022, IEEE MICRO, V42, P51, DOI 10.1109/MM.2021.3137401
   Franch X, 2003, IEEE SOFTWARE, V20, P34, DOI 10.1109/MS.2003.1159027
   Freitas L, 2022, PROCEEDINGS OF THE 28TH BRAZILIAN SYMPOSIUM ON MULTIMEDIA AND THE WEB, WEBMEDIA 2022, P348, DOI 10.1145/3539637.3558049
   Gao Y, 2020, 2020 ACM/IEEE FIFTH INTERNATIONAL CONFERENCE ON INTERNET OF THINGS DESIGN AND IMPLEMENTATION (IOTDI 2020), P176, DOI 10.1109/IoTDI49375.2020.00025
   Geetha Lekshmy V., 2021, Inventive Communication and Computational Technologies. Proceedings of ICICCT 2020. Lecture Notes in Networks and Systems (LNNS 145), P873, DOI 10.1007/978-981-15-7345-3_74
   Greco C, 2023, ENTERP INF SYST-UK, V17, DOI 10.1080/17517575.2022.2130014
   Guerrero-Ulloa G, 2020, COMM COM INF SC, V1193, P41, DOI 10.1007/978-3-030-42517-3_4
   Guseila L. G., 2019, PROC INT C SENS INST, P1
   Gutiérrez-Madroñal L, 2018, J SYST SOFTWARE, V137, P784, DOI 10.1016/j.jss.2017.06.037
   Gutiérrez-Madroñal L, 2019, SOFTWARE PRACT EXPER, V49, P640, DOI 10.1002/spe.2629
   Hagar J. D., 2022, IoT System Testing
   Hetzel B., 1988, The Complete Guide to Software Testing, V2nd
   Hossain M, 2017, 2017 IEEE 2ND INTERNATIONAL CONGRESS ON INTERNET OF THINGS (IEEE ICIOT), P42, DOI 10.1109/IEEE.ICIOT.2017.14
   Hu LH, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-021-10017-1
   Hwang J, 2020, IEEE ACCESS, V8, P43111, DOI 10.1109/ACCESS.2020.2976718
   Inçki K, 2017, IEEE INT C NETW SENS, P625
   Incki K, 2018, IEEE ACCESS, V6, P13501, DOI 10.1109/ACCESS.2018.2813887
   Irawan Yayan Indra, 2022, 2022 International Conference on Informatics, Multimedia, Cyber and Information System (ICIMCIS), P154, DOI 10.1109/ICIMCIS56303.2022.10017834
   ISO, 2021, ISO/IEC/IEEE 29119-3:2021(E), P1
   ISO/IEC/IEEE, 2017, ISO/IEC/IEEE 24765:2017(E), P1, DOI [10.1109/IEEESTD.2017.8016712, DOI 10.1109/IEEESTD.2017.8016712]
   Kaiser A, 2019, 2019 COMPANION OF THE 19TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY AND SECURITY (QRS-C 2019), P435, DOI 10.1109/QRS-C.2019.00085
   Kao O, 2019, PROC 12 IEEEACM INT, P15
   Karim Y, 2020, IEEE SOUTHEASTCON, DOI 10.1109/southeastcon44009.2020.9249671
   Kaur Harmanjot, 2021, Advances in Computational Intelligence and Communication Technology. Proceedings of CICT 2019. Advances in Intelligent Systems and Computing (AISC 1086), P265, DOI 10.1007/978-981-15-1275-9_22
   Khan AA, 2022, IEEE ACCESS, V10, P122679, DOI 10.1109/ACCESS.2022.3223370
   Kim H, 2018, IEEE ACCESS, V6, P15480, DOI 10.1109/ACCESS.2018.2802489
   Kiruthika J, 2015, 14TH INTERNATIONAL SYMPOSIUM ON DISTRIBUTED COMPUTING AND APPLICATIONS FOR BUSINESS, ENGINEERING AND SCIENCE (DCABES 2015), P176, DOI 10.1109/DCABES.2015.51
   Kitchenham B, 2023, IEEE T SOFTWARE ENG, V49, P1273, DOI 10.1109/TSE.2022.3174092
   Krichen M, 2020, EAI SPRINGER INNOVAT, P589, DOI 10.1007/978-3-030-13705-2_24
   Krichen M, 2023, MOBILE NETW APPL, V28, P732, DOI 10.1007/s11036-019-01369-6
   Kuemper D, 2018, PROCEEDINGS OF THE 9TH ACM MULTIMEDIA SYSTEMS CONFERENCE (MMSYS'18), P294, DOI 10.1145/3204949.3204972
   Larrucea X, 2017, IEEE SOFTWARE, V34, P24, DOI 10.1109/MS.2017.28
   Lee SJ, 2023, SENSORS-BASEL, V23, DOI 10.3390/s23115197
   Leone R, 2017, L N INST COMP SCI SO, V190, P11, DOI 10.1007/978-3-319-52727-7_2
   Leotta M, 2018, LECT NOTES COMPUT SC, V11153, P83, DOI 10.1007/978-3-030-03056-8_8
   Leotta M, 2018, IET SOFTW, V12, P430, DOI 10.1049/iet-sen.2017.0344
   Leotta M, 2018, LECT NOTES COMPUT SC, V10544, P125, DOI 10.1007/978-3-319-74433-9_11
   Liu XY, 2020, FUTURE GENER COMP SY, V108, P390, DOI 10.1016/j.future.2019.12.032
   Lonetti F, 2023, INFORM SOFTWARE TECH, V164, DOI 10.1016/j.infsof.2023.107326
   Makhshari A, 2021, PROC INT CONF SOFTW, P460, DOI 10.1109/ICSE43902.2021.00051
   Malini A., 2021, PROC 4 BIENNIAL INT, P1
   Marinissen Erik Jan, 2016, 2016 21st IEEE European Test Symposium (ETS), P1, DOI 10.1109/ETS.2016.7519331
   Mateen Q., 2015, Int. J. Comput. Appl, V109, P16
   Mayeda M, 2021, ADV COMPUT, V123, P41, DOI 10.1016/bs.adcom.2021.01.002
   Medhat Noha, 2019, 2019 Ninth International Conference on Intelligent Computing and Information Systems (ICICIS), P394, DOI 10.1109/ICICIS46948.2019.9014711
   Medhat N, 2020, IEEE ACCESS, V8, P215716, DOI 10.1109/ACCESS.2020.3039931
   Minani JB, 2024, IEEE INTERNET THINGS, V11, P1662, DOI 10.1109/JIOT.2023.3291233
   Murad G, 2018, INT CONF COMP SCI, P17, DOI 10.1109/CSIT.2018.8486149
   Nadiminti K., 2006, INFONET MAG, V16, P1
   Nguyen S, 2021, IEEE INTERNET THINGS, V8, P6928, DOI 10.1109/JIOT.2020.3036352
   Nhan LT, 2018, PROCEEDINGS OF THE NINTH INTERNATIONAL SYMPOSIUM ON INFORMATION AND COMMUNICATION TECHNOLOGY (SOICT 2018), P155, DOI 10.1145/3287921.3287935
   Nikolaidis F, 2021, 21ST IEEE/ACM INTERNATIONAL SYMPOSIUM ON CLUSTER, CLOUD AND INTERNET COMPUTING (CCGRID 2021), P676, DOI 10.1109/CCGrid51090.2021.00081
   Norris M, 2020, 2020 ACM/IEEE FIFTH INTERNATIONAL CONFERENCE ON INTERNET OF THINGS DESIGN AND IMPLEMENTATION (IOTDI 2020), P142, DOI 10.1109/IoTDI49375.2020.00021
   Olianas D, 2022, SOFTWARE QUAL J, V30, P389, DOI 10.1007/s11219-021-09565-y
   Otoum Y, 2022, T EMERG TELECOMMUN T, V33, DOI 10.1002/ett.3803
   Padmanabhan M., 2018, PROC INT C CURRENT T, P1
   Paduraru C, 2021, 2021 IEEE/ACM 3RD INTERNATIONAL WORKSHOP ON SOFTWARE ENGINEERING RESEARCH AND PRACTICES FOR THE IOT (SERP4IOT), P52, DOI 10.1109/SERP4IoT52556.2021.00015
   Page MJ, 2021, BMJ-BRIT MED J, V372, DOI [10.1016/j.ijsu.2021.105906, 10.1136/bmj.n71, 10.1136/bmj.n160]
   Palattella MR, 2018, LECT NOTES COMPUT SC, V11104, P332, DOI 10.1007/978-3-030-00247-3_29
   Patel N. D., 2019, 2019 Third International Conference on I-SMAC (IoT in Social, Mobile, Analytics and Cloud) (I-SMAC), P139, DOI 10.1109/I-SMAC47947.2019.9032519
   Patterson MG, 1996, ENERG POLICY, V24, P377, DOI 10.1016/0301-4215(96)00017-1
   Petrolo R, 2017, T EMERG TELECOMMUN T, V28, DOI 10.1002/ett.2931
   Pontes PM, 2018, COMPANION PROCEEDINGS FOR THE ISSTA/ECOOP 2018 WORKSHOPS, P125, DOI 10.1145/3236454.3236511
   Pontes PM, 2018, PROCEEDINGS OF THE 9TH ACM SIGSOFT INTERNATIONAL WORKSHOP ON AUTOMATING TEST CASE DESIGN, SELECTION, AND EVALUATION (A-TEST '18), P63, DOI 10.1145/3278186.3278196
   Popereshnyak S, 2018, INT CONF PERSP TECH, P127, DOI 10.1109/MEMSTECH.2018.8365717
   Rao T.A., 2018, International Journal of Computer Applications, V975, P8887
   Reetz E. S., 2013, PROC EUR WIRELESS 19, P1
   Regis PA, 2020, 2020 IEEE 6TH WORLD FORUM ON INTERNET OF THINGS (WF-IOT)
   Reid S., 2013, ISO/IEC/IEEE 29119-1
   Sanchez L, 2014, COMPUT NETW, V61, P217, DOI 10.1016/j.bjp.2013.12.020
   Sándor H, 2017, ROEDUNET IEEE
   Savidis A, 2021, PROCEEDINGS OF THE 17TH INTERNATIONAL CONFERENCE ON WEB INFORMATION SYSTEMS AND TECHNOLOGIES (WEBIST), P145, DOI 10.5220/0010714400003058
   Schieferdecker I, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY AND SECURITY (QRS), P1, DOI 10.1109/QRS.2017.59
   Sendorek J, 2018, WIREL COMMUN MOB COM, DOI 10.1155/2018/1068261
   Serrano M, 2017, RIV PUB S INFORM SCI, P287
   Sethi P, 2017, J ELECTR COMPUT ENG, V2017, DOI 10.1155/2017/9324035
   Sharma V, 2018, L N INST COMP SCI SO, V246, P54, DOI 10.1007/978-3-030-00410-1_8
   Singh M., 2018, PROC 3 INT C INTERNE, P1
   Singh M, 2020, ARAB J SCI ENG, V45, P10033, DOI 10.1007/s13369-020-04601-8
   Singh P., 2020, PROC 30 EUR SAF REL, P4644
   Taivalsaari A, 2018, 2018 THIRD INTERNATIONAL CONFERENCE ON FOG AND MOBILE EDGE COMPUTING (FMEC), P13, DOI 10.1109/FMEC.2018.8364039
   Tan T.-B., 2019, New Trends in Computer Technologies and Applications, P385
   Tanenbaum A., 2015, Distributed Systems: Principles and Paradigms, P1
   Tappler M, 2017, IEEE INT CONF SOFTW, P276, DOI 10.1109/ICST.2017.32
   Teeba Ismail Kh, 2020, International Journal of Interactive Mobile Technologies, V14, P128, DOI 10.3991/ijim.v14i09.13431
   Teranishi Yuuichi, 2016, Journal of the National Institute of Information and Communications Technology, V62, P151
   Tonjes R., 2014, PROC 6 INT C ADV SYS
   Touqeer H, 2021, J SUPERCOMPUT, V77, P14053, DOI 10.1007/s11227-021-03825-1
   Tsai FK, 2019, 2019 IEEE 6TH INTERNATIONAL CONFERENCE ON INDUSTRIAL ENGINEERING AND APPLICATIONS (ICIEA), P501, DOI 10.1109/IEA.2019.8715215
   van den Bossche A, 2022, IEEE SENS J, V22, P5437, DOI 10.1109/JSEN.2021.3133066
   Varghese N, 2020, IEEE IND ELEC, P4519, DOI [10.1109/IECON43393.2020.9254910, 10.1109/iecon43393.2020.9254910]
   Velez-Estevez A, 2022, IEEE T RELIAB, V71, P1368, DOI 10.1109/TR.2021.3087781
   Walker MA, 2019, ADV COMPUT, V115, P155, DOI 10.1016/bs.adcom.2019.07.008
   White G, 2017, J SYST SOFTWARE, V132, P186, DOI 10.1016/j.jss.2017.05.125
   Yi L, 2019, CPS-IOTBENCH '19: PROCEEDINGS OF THE 2019 2ND WORKSHOP ON BENCHMARKING CYBER-PHYSICAL SYSTEMS AND INTERNET OF THINGS, P13, DOI [10.1145/3312480.3313172, 10.7633/j.issn.1003-6202.2019.08.005]
   Zhang WB, 2021, IEEE INTERNET THINGS, V8, P2354, DOI 10.1109/JIOT.2020.3044934
   Zhu SC, 2022, WIRELESS PERS COMMUN, V123, P165, DOI 10.1007/s11277-021-09124-5
   Ziegler S, 2017, 2017 GLOBAL INTERNET OF THINGS SUMMIT (GIOTS 2017), P219
   Ziegler S, 2017, L N INST COMP SCI SO, V190, P49, DOI 10.1007/978-3-319-52727-7_7
NR 143
TC 0
Z9 0
U1 1
U2 1
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD APR
PY 2024
VL 50
IS 4
BP 785
EP 815
DI 10.1109/TSE.2024.3363611
PG 31
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA OC2K3
UT WOS:001204993400003
DA 2024-08-05
ER

PT J
AU Dolata, M
   Crowston, K
AF Dolata, Mateusz
   Crowston, Kevin
TI Making Sense of AI Systems Development
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Artificial intelligence; empirical study; industry; social issues;
   software engineering; systems development
ID SENSEMAKING; IMPLEMENTATION; ORGANIZATIONS; MINDFULNESS; CRISIS; TEAMS
AB We identify and describe episodes of sensemaking around challenges in modern Artificial-Intelligence (AI)-based systems development that emerged in projects carried out by IBM and client companies. All projects used IBM Watson as the development platform for building tailored AI-based solutions to support workers or customers of the client companies. Yet, many of the projects turned out to be significantly more challenging than IBM and its clients had expected. The analysis reveals that project members struggled to establish reliable meanings about the technology, the project, context, and data to act upon. The project members report multiple aspects of the projects that they were not expecting to need to make sense of yet were problematic. Many issues bear upon the current-generation AI's inherent characteristics, such as dependency on large data sets and continuous improvement as more data becomes available. Those characteristics increase the complexity of the projects and call for balanced mindfulness to avoid unexpected problems.
C1 [Dolata, Mateusz] Univ Zurich, Dept Informat, CH-8050 Zurich, Switzerland.
   [Crowston, Kevin] Syracuse Univ, Sch Informat Syst, Syracuse, NY 13244 USA.
C3 University of Zurich; Syracuse University
RP Dolata, M (corresponding author), Univ Zurich, Dept Informat, CH-8050 Zurich, Switzerland.
EM dolata@ifi.uzh.ch; crowston@syr.edu
RI ; Crowston, Kevin/C-6068-2008
OI Dolata, Mateusz/0000-0002-2732-4465; Crowston, Kevin/0000-0003-1996-3600
FU Schweizerischer Nationalfonds zur Frderung der Wissenschaftlichen
   Forschung
FX No Statement Available
CR Aanestad M, 2016, INFORM ORGAN-UK, V26, P13, DOI 10.1016/j.infoandorg.2016.02.001
   Ahmad K, 2023, APPL SOFT COMPUT, V143, DOI 10.1016/j.asoc.2023.110455
   Ahmad K, 2023, INFORM SOFTWARE TECH, V158, DOI 10.1016/j.infsof.2023.107176
   Amershi S, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE (ICSE-SEIP 2019), P291, DOI 10.1109/ICSE-SEIP.2019.00042
   Arnold M, 2019, Arxiv, DOI arXiv:1808.07261
   Arpteg A, 2018, EUROMICRO CONF PROC, P50, DOI 10.1109/SEAA.2018.00018
   Bhatia A, 2023, EMPIR SOFTW ENG, V28, DOI 10.1007/s10664-022-10282-8
   Bourque Pierre, 2014, Guide to the Software Engineering Body of Knowledge, Version 3.0
   Cabrera AA, 2023, ACM T COMPUT-HUM INT, V30, DOI 10.1145/3542921
   Collins C, 2021, INT J INFORM MANAGE, V60, DOI 10.1016/j.ijinfomgt.2021.102383
   Davenport Thomas, 2019, Future Healthc J, V6, P94, DOI 10.7861/futurehosp.6-2-94
   Dolata M., 2022, PROC INT C INF SYST, P1
   Dolata M., 2021, Engineering the Transformation of the Enterprise: A Design Science Research Perspective, P37
   Dolata M, 2022, INFORM SYST J, V32, P754, DOI 10.1111/isj.12370
   Dourish P., 2014, WAYS KNOWING HCI, P1, DOI DOI 10.1007/978-1-4939-0378-8
   Dzhusupova R., 2022, 2022 IEEEACM 1 INT C, P124, DOI DOI 10.1145/3522664.3528595
   Faily Shamal, 2012, Human-Centered Software Engineering. Proceedings of the 4th International Conference, HCSE 2012, P217, DOI 10.1007/978-3-642-34347-6_13
   FLANAGAN JC, 1954, PSYCHOL BULL, V51, P327, DOI 10.1037/h0061470
   Franch X, 2023, LECT NOTES COMPUT SC, V13975, P223, DOI 10.1007/978-3-031-29786-1_15
   Gao J, 2019, 2019 13TH IEEE INTERNATIONAL CONFERENCE ON SERVICE-ORIENTED SYSTEM ENGINEERING (SOSE) / 10TH INTERNATIONAL WORKSHOP ON JOINT CLOUD COMPUTING (JCC) / IEEE INTERNATIONAL WORKSHOP ON CLOUD COMPUTING IN ROBOTIC SYSTEMS (CCRS), P27, DOI 10.1109/SOSE.2019.00015
   Gawer A., 2009, PLATFORMS MARKETS IN
   Giray G, 2021, J SYST SOFTWARE, V180, DOI 10.1016/j.jss.2021.111031
   Granlund Tuomas, 2021, 2021 IEEE/ACM 1st Workshop on AI Engineering - Software Engineering for AI (WAIN), P82, DOI 10.1109/WAIN52551.2021.00019
   Gregory R., 2008, Crisis Manage, V3, P269
   Hains G., 2018, PROC ANN IEEE INT SY, P1
   Hesenius M, 2019, INT WORK REAL ARTIF, P35, DOI 10.1109/RAISE.2019.00014
   Holt R, 2014, MANAGE LEARN, V45, P525, DOI 10.1177/1350507613486422
   Huang S., 2018, International Journal of Performability Engineering, V14, P1275
   Hwang K, 2017, CLOUD COMPUTING FOR MACHINE LEARNING AND COGNITIVE APPLICATIONS, P1
   Jensen TB, 2009, J INF TECHNOL-UK, V24, P343, DOI 10.1057/jit.2009.11
   John Meenu Mary, 2021, 2021 47th Euromicro Conference on Software Engineering and Advanced Applications (SEAA), P1, DOI 10.1109/SEAA53835.2021.00050
   Keatinge Diana, 2002, Nurs Health Sci, V4, P33, DOI 10.1046/j.1442-2018.2002.00099.x
   Kelly JE, 2013, Smart Machines: IBM's Watson and the Era of Cognitive Computing the Series Columbia Business School Publishing
   Kharb L, 2018, PROCEEDINGS OF THE 8TH INTERNATIONAL CONFERENCE CONFLUENCE 2018 ON CLOUD COMPUTING, DATA SCIENCE AND ENGINEERING, P829, DOI 10.1109/CONFLUENCE.2018.8442728
   Khomh F, 2018, IEEE SOFTWARE, V35, P81, DOI 10.1109/MS.2018.3571224
   Kim M, 2018, IEEE T SOFTWARE ENG, V44, P1024, DOI 10.1109/TSE.2017.2754374
   Lorenzoni G, 2021, Arxiv, DOI arXiv:2102.07574
   Lwakatare LE, 2019, LECT NOTES BUS INF P, V355, P227, DOI 10.1007/978-3-030-19034-7_14
   Lyddy CJ, 2017, FRONT PSYCHOL, V7, DOI [10.3389/fpsyg.2016.02060, 10.3389/fpsyg.2016.00362]
   Maitlis S, 2010, J MANAGE STUD, V47, P551, DOI 10.1111/j.1467-6486.2010.00908.x
   Malhotra R, 2010, INT J INFORM MANAGE, V30, P28, DOI 10.1016/j.ijinfomgt.2009.03.001
   Martínez-Fernández S, 2022, ACM T SOFTW ENG METH, V31, DOI 10.1145/3487043
   Martins LEG, 2020, IEEE T SOFTWARE ENG, V46, P346, DOI 10.1109/TSE.2018.2854716
   McAvoy J, 2013, INFORM SYST J, V23, P155, DOI 10.1111/j.1365-2575.2012.00405.x
   Menzies T, 2020, IEEE SOFTWARE, V37, P81, DOI 10.1109/MS.2019.2954841
   Minsky M., 1991, Artificial Intelligence at MIT Expanding Frontiers, P218
   Mitchell M., 2009, Complexity: A Guided Tour
   Mitchell M., 2019, Artificial Intelligence: A Guide for Thinking Humans
   Nahar N., 2023, PROC INT C ENG SOFTW, P1
   Naik N, 2016, PROCEEDINGS 2016 IEEE SYMPOSIUM ON SERVICE-ORIENTED SYSTEM ENGINEERING SOSE 2016, P380, DOI 10.1109/SOSE.2016.68
   Nascimento E, 2020, arXiv
   NSTC, 2019, Tech. Rep. AD1079707
   Page SE, 2015, ANNU REV SOCIOL, V41, P21, DOI 10.1146/annurev-soc-073014-112230
   Paleyes A, 2023, ACM COMPUT SURV, V55, DOI 10.1145/3533378
   Pei ZY, 2022, INT REQUIR ENG CONF, P166, DOI 10.1109/REW56159.2022.00039
   Prechelt L, 2011, IEEE T SOFTWARE ENG, V37, P95, DOI 10.1109/TSE.2010.22
   Raji ID, 2020, FAT* '20: PROCEEDINGS OF THE 2020 CONFERENCE ON FAIRNESS, ACCOUNTABILITY, AND TRANSPARENCY, P33, DOI 10.1145/3351095.3372873
   Ralph P, 2019, IEEE T SOFTWARE ENG, V45, P712, DOI 10.1109/TSE.2018.2796554
   Ralph P, 2016, INFORM SOFTWARE TECH, V70, P232, DOI 10.1016/j.infsof.2015.06.010
   Ralph P, 2015, SCI COMPUT PROGRAM, V101, P21, DOI 10.1016/j.scico.2014.11.007
   Riehle D, 2016, IEEE T SOFTWARE ENG, V42, P1162, DOI 10.1109/TSE.2016.2554553
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Schelter Sebastian, 2018, IEEE Data Eng. Bull., V41, P5
   Shivashankar Karthik, 2022, 2022 48th Euromicro Conference on Software Engineering and Advanced Applications (SEAA), P60, DOI 10.1109/SEAA56994.2022.00018
   Shreeve B, 2015, 2015 IEEE/ACM 8TH INTERNATIONAL WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING CHASE 2015, P36, DOI 10.1109/CHASE.2015.12
   Smite D, 2011, IEEE SOFTWARE, V28, P15, DOI 10.1109/MS.2011.70
   Staehelin D., 2022, Design Thinking for Software Engineering: Creating Human-Oriented Software-Intensive Products and Services, P137
   Stebbins R. A., 2001, Exploratory research in the social sciences
   Stebbins RA, 2006, J CONTEMP ETHNOGR, V35, P483, DOI 10.1177/0891241606286989
   Steidl M, 2023, J SYST SOFTWARE, V199, DOI 10.1016/j.jss.2023.111615
   Stigliani I, 2012, ACAD MANAGE J, V55, P1232, DOI 10.5465/amj.2010.0890
   Tarn JM, 2002, IND MANAGE DATA SYST, V102, P26, DOI 10.1108/02635570210414631
   Treveil Mark., 2020, Introducing MLOps: How to Scale Machine Learning in the Enterprise
   Turner BA, 1978, Man-made disasters
   Vlaar PWL, 2008, MIS QUART, V32, P227
   Wan ZY, 2021, IEEE T SOFTWARE ENG, V47, P1857, DOI 10.1109/TSE.2019.2937083
   Wang ZD, 2020, ACM T SOFTW ENG METH, V29, DOI 10.1145/3387111
   Weick K.E., 1999, ORG DIMENSIONS GLOBA, P39, DOI 10.4135/9781452231419.n2
   Weick Karl E., 1995, Sensemaking in organizations
   WEICK KE, 1993, ADMIN SCI QUART, V38, P357, DOI 10.2307/2393372
   Weick KE, 2015, MANAGING THE UNEXPECTED: SUSTAINED PERFORMANCE IN A COMPLEX WORLD, 3RD EDITION, P1, DOI 10.1002/9781119175834
   Weick KE, 2005, ORGAN SCI, V16, P409, DOI 10.1287/orsc.1050.0133
   WEICK KE, 1988, J MANAGE STUD, V25, P305, DOI 10.1111/j.1467-6486.1988.tb00039.x
   WEICK KE, 1993, ADMIN SCI QUART, V38, P628, DOI 10.2307/2393339
   Weick KE, 1999, RES ORGAN BEHAV, V21, P81
   Wolf C. T., 2020, P IEEE ACM 42 INT C, P86, DOI DOI 10.1145/3387940.3391496
   Yin R.K., 2018, CASE STUDY RES DESIG, DOI DOI 10.33524/CJAR.V14I1.73
   Zhang XF, 2019, Arxiv, DOI arXiv:1910.03156
NR 88
TC 0
Z9 0
U1 10
U2 10
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JAN
PY 2024
VL 50
IS 1
BP 123
EP 140
DI 10.1109/TSE.2023.3338857
PG 18
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA EQ4Q6
UT WOS:001140380900002
OA Green Published
DA 2024-08-05
ER

PT J
AU Wang, SW
   Geng, MY
   Lin, B
   Sun, ZS
   Wen, M
   Liu, YP
   Li, L
   Bissyande, TF
   Mao, XG
AF Wang, Shangwen
   Geng, Mingyang
   Lin, Bo
   Sun, Zhensu
   Wen, Ming
   Liu, Yepang
   Li, Li
   Bissyande, Tegawende F.
   Mao, Xiaoguang
TI Fusing Code Searchers
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Codes; Information retrieval; data fusion; Information retrieval; data
   fusion
AB Code search, which consists in retrieving relevant code snippets from a codebase based on a given query, provides developers with useful references during software development. Over the years, techniques alternatively adopting different mechanisms to compute the relevance score between a query and a code snippet have been proposed to advance the state of the art in this domain, including those relying on information retrieval, supervised learning, and pre-training. Despite that, the usefulness of existing techniques is still compromised since they cannot effectively handle all the diversified queries and code in practice. To tackle this challenge, we present Dancer, a data fusion based code searcher. Our intuition (also the basic hypothesis of this study) is that existing techniques may complement each other because of the intrinsic differences in their working mechanisms. We have validated this hypothesis via an exploratory study. Based on that, we propose to fuse the results generated by different code search techniques so that the advantage of each standalone technique can be fully leveraged. Specifically, we treat each technique as a retrieval system and leverage well-known data fusion approaches to aggregate the results from different systems. We evaluate six existing code search techniques on two large-scale datasets, and exploit eight classic data fusion approaches to incorporate their results. Our experiments show that the best fusion approach is able to outperform the standalone techniques by 35% - 550% and 65% - 825% in terms of MRR (mean reciprocal rank) on the two datasets, respectively.
C1 [Wang, Shangwen; Geng, Mingyang; Lin, Bo; Mao, Xiaoguang] Natl Univ Def Technol, Changsha 410073, Peoples R China.
   [Sun, Zhensu] ShanghaiTech Univ, Shanghai 201210, Peoples R China.
   [Wen, Ming] Huazhong Univ Sci & Technol, Wuhan 430074, Peoples R China.
   [Liu, Yepang] Southern Univ Sci & Technol, Shenzhen 518055, Peoples R China.
   [Li, Li] Monash Univ, Clayton, Vic 3800, Australia.
   [Bissyande, Tegawende F.] Univ Luxembourg, L-1359 Luxembourg, Luxembourg.
C3 National University of Defense Technology - China; ShanghaiTech
   University; Huazhong University of Science & Technology; Southern
   University of Science & Technology; Monash University; University of
   Luxembourg
RP Wen, M (corresponding author), Huazhong Univ Sci & Technol, Wuhan 430074, Peoples R China.; Liu, YP (corresponding author), Southern Univ Sci & Technol, Shenzhen 518055, Peoples R China.
EM wangshangwen13@nudt.edu.cn; gengmingyang13@nudt.edu.cn;
   linbo19@nudt.edu.cn; sunzhs@shanghaitech.edu.cn; mwenaa@hust.edu.cn;
   liuyp1@sustech.edu.cn; li.li@monash.edu; tegawende.bissyande@uni.lu
OI Li, Li/0000-0003-2990-1614
CR Aslam J. A., 2001, SIGIR Forum, P276
   Bailey P, 2017, SIGIR'17: PROCEEDINGS OF THE 40TH INTERNATIONAL ACM SIGIR CONFERENCE ON RESEARCH AND DEVELOPMENT IN INFORMATION RETRIEVAL, P395, DOI 10.1145/3077136.3080839
   Benton S, 2020, IEEE INT CONF AUTOM, P907, DOI 10.1145/3324884.3416566
   Brandt J, 2010, CHI2010: PROCEEDINGS OF THE 28TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, VOLS 1-4, P513
   Brandt J, 2009, CHI2009: PROCEEDINGS OF THE 27TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, VOLS 1-4, P1589
   Bui NDQ, 2021, SIGIR '21 - PROCEEDINGS OF THE 44TH INTERNATIONAL ACM SIGIR CONFERENCE ON RESEARCH AND DEVELOPMENT IN INFORMATION RETRIEVAL, P511, DOI 10.1145/3404835.3462840
   Cambronero J, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P964, DOI 10.1145/3338906.3340458
   Chunrong Fang, 2020, ISSTA '20: Proceedings of the 29th ACM SIGSOFT International Symposium on Software Testing and Analysis, P516, DOI 10.1145/3395363.3397362
   Cormack GV, 2009, PROCEEDINGS 32ND ANNUAL INTERNATIONAL ACM SIGIR CONFERENCE ON RESEARCH AND DEVELOPMENT IN INFORMATION RETRIEVAL, P758, DOI 10.1145/1571941.1572114
   Croft W. B., 2002, P ADV INF RETR NEW Y, P1
   DESANCTIS G, 1987, MANAGE SCI, V33, P589, DOI 10.1287/mnsc.33.5.589
   Di Grazia L., 2022, arXiv
   Dwork Cynthia, 2001, P 10 INT C WORLD WID, P613, DOI [10.1145/371920.372165, DOI 10.1145/371920.372165]
   Feng ZY, 2020, FINDINGS OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, EMNLP 2020, P1536
   Fox E. A., 1994, Second Text REtrieval Conference (TREC-2) (NIST-SP 500-215), P243
   Geng M., 2024, P 46 IEEE ACM INT C, P1
   Gey FC, 2005, INFORM PROCESS MANAG, V41, P415, DOI 10.1016/j.ipm.2004.06.006
   Gharehyazie M, 2017, IEEE WORK CONF MIN S, P291, DOI 10.1109/MSR.2017.15
   Gu J, 2021, PROC IEEE INT CONF S, P483, DOI 10.1109/ICSME52107.2021.00049
   Gu XD, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P933, DOI 10.1145/3180155.3180167
   Guo D., 2021, P INT C LEARN REPR I
   Hsu DF, 2005, INFORM RETRIEVAL, V8, P449, DOI 10.1007/s10791-005-6994-4
   Husain H, 2020, Arxiv, DOI arXiv:1909.09436
   Kim K, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P946, DOI 10.1145/3180155.3180187
   Kuo Tzu-Ming., 2014, Proceedings of the 2014 SIAM international conference on data mining, P812
   Lemos O.A. L., 2014, Proceedings of the 11th Working Conference on Mining Software Repositories, P212
   Lin B, 2023, PROCEEDINGS OF THE 31ST ACM JOINT MEETING EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, ESEC/FSE 2023, P1509, DOI 10.1145/3611643.3616339
   Lin B, 2023, IEEE T SOFTWARE ENG, V49, P1640, DOI 10.1109/TSE.2022.3185458
   Ling CY, 2020, INT C PROGRAM COMPRE, P48, DOI 10.1145/3387904.3389278
   Ling X, 2021, ACM T KNOWL DISCOV D, V15, DOI 10.1145/3447571
   Liu C, 2022, ACM COMPUT SURV, V54, DOI 10.1145/3480027
   Lo D., 2014, P 29 ACM IEEE INT C, P127
   Lu ML, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P545, DOI 10.1109/SANER.2015.7081874
   Lu S., 2021, NEURIPS
   Lv F, 2015, IEEE INT CONF AUTOM, P260, DOI 10.1109/ASE.2015.42
   Manning C.D., 2008, Introduction to information retrieval
   McMillan C, 2012, PROC INT CONF SOFTW, P848, DOI 10.1109/ICSE.2012.6227134
   McMillan C, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P111, DOI 10.1145/1985793.1985809
   Montague M., 2001, Proceedings of the 2001 ACM CIKM. Tenth International Conference on Information and Knowledge Management, P427, DOI 10.1145/502585.502657
   Rahman MM, 2020, PROC IEEE INT CONF S, P605, DOI 10.1109/ICSME46990.2020.00063
   Revelle Meghan, 2010, Proceedings of the 18th IEEE International Conference on Program Comprehension (ICPC 2010), P14, DOI 10.1109/ICPC.2010.10
   Robertson Stephen, 2009, Foundations and Trends in Information Retrieval, V3, P333, DOI 10.1561/1500000019
   Sadowski C, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P191, DOI 10.1145/2786805.2786855
   Shuai J, 2020, INT C PROGRAM COMPRE, P196, DOI 10.1145/3387904.3389269
   Sun WS, 2022, PROC INT CONF SOFTW, P388, DOI 10.1145/3510003.3510140
   Sun ZS, 2022, PROC INT CONF SOFTW, P1609, DOI 10.1145/3510003.3510160
   Tai KS, 2015, PROCEEDINGS OF THE 53RD ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS AND THE 7TH INTERNATIONAL JOINT CONFERENCE ON NATURAL LANGUAGE PROCESSING, VOL 1, P1556
   Tie-Yan Liu, 2009, Foundations and Trends in Information Retrieval, V3, P225, DOI 10.1561/1500000016
   Vaswani A, 2017, ADV NEUR IN, V30
   Vogt C. C., 1999, Information Retrieval, V1, P151, DOI 10.1023/A:1009980820262
   Wan Y, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P13, DOI 10.1109/ASE.2019.00012
   Wang SW, 2023, PROCEEDINGS OF THE 31ST ACM JOINT MEETING EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, ESEC/FSE 2023, P375, DOI 10.1145/3611643.3616323
   Wang SW, 2023, P ACM PROGRAM LANG, V7, DOI 10.1145/3622815
   Wang SW, 2020, IEEE INT CONF AUTOM, P968, DOI 10.1145/3324884.3416590
   Wang Y, 2021, 2021 CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING (EMNLP 2021), P8696
   Wu MF, 2012, J AM SOC INF SCI TEC, V63, P1235, DOI 10.1002/asi.22639
   Xia X, 2017, EMPIR SOFTW ENG, V22, P3149, DOI 10.1007/s10664-017-9514-4
   Xu L, 2021, 2021 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2021), P342, DOI 10.1109/SANER50967.2021.00039
   Xuan JF, 2014, PROC IEEE INT CONF S, P191, DOI 10.1109/ICSME.2014.41
   Yan SH, 2020, PROCEEDINGS OF THE 2020 IEEE 27TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER '20), P344, DOI [10.1109/saner48275.2020.9054840, 10.1109/SANER48275.2020.9054840]
   Yao ZY, 2019, WEB CONFERENCE 2019: PROCEEDINGS OF THE WORLD WIDE WEB CONFERENCE (WWW 2019), P2203, DOI 10.1145/3308558.3313632
   Ye W, 2020, WEB CONFERENCE 2020: PROCEEDINGS OF THE WORLD WIDE WEB CONFERENCE (WWW 2020), P2309, DOI 10.1145/3366423.3380295
   Ye X, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P689, DOI 10.1145/2635868.2635874
   Zeng C, 2023, ACM T SOFTW ENG METH, V32, DOI 10.1145/3546066
   Zeng ZR, 2022, PROCEEDINGS OF THE 31ST ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, ISSTA 2022, P39, DOI 10.1145/3533767.3534390
   Zhang F, 2018, IEEE T SOFTWARE ENG, V44, P1070, DOI 10.1109/TSE.2017.2750682
   Zhu QH, 2020, IEEE INT CONF AUTOM, P883, DOI [10.1145/3324884.3416530, 10.1145/1122445.1122456]
   Zou DM, 2021, IEEE T SOFTWARE ENG, V47, P332, DOI 10.1109/TSE.2019.2892102
NR 68
TC 0
Z9 0
U1 1
U2 1
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUL
PY 2024
VL 50
IS 7
BP 1852
EP 1866
DI 10.1109/TSE.2024.3403042
PG 15
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA YZ0O5
UT WOS:001272193600004
DA 2024-08-05
ER

PT J
AU Wen, XC
   Gao, CY
   Luo, F
   Wang, HY
   Li, G
   Liao, Q
AF Wen, Xin-Cheng
   Gao, Cuiyun
   Luo, Feng
   Wang, Haoyu
   Li, Ge
   Liao, Qing
TI LIVABLE: Exploring Long-Tailed Classification of Software Vulnerability
   Types
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Tail; Codes; Software; Representation learning; Training; Source coding;
   Graph neural networks; Software vulnerability; deep learning; graph
   neural network
AB Prior studies generally focus on software vulnerability detection and have demonstrated the effectiveness of Graph Neural Network (GNN)-based approaches for the task. Considering the various types of software vulnerabilities and the associated different degrees of severity, it is also beneficial to determine the type of each vulnerable code for developers. In this paper, we observe that the distribution of vulnerability type is long-tailed in practice, where a small portion of classes have massive samples (i.e., head classes) but the others contain only a few samples (i.e., tail classes). Directly adopting previous vulnerability detection approaches tends to result in poor detection performance, mainly due to two reasons. First, it is difficult to effectively learn the vulnerability representation due to the over-smoothing issue of GNNs. Second, vulnerability types in tails are hard to be predicted due to the extremely few associated samples. To alleviate these issues, we propose a Long-taIled software VulnerABiLity typE classification approach, called LIVABLE. LIVABLE mainly consists of two modules, including (1) vulnerability representation learning module, which improves the propagation steps in GNN to distinguish node representations by a differentiated propagation method. A sequence-to-sequence model is also involved to enhance the vulnerability representations. (2) adaptive re-weighting module, which adjusts the learning weights for different types according to the training epochs and numbers of associated samples by a novel training loss. We verify the effectiveness of LIVABLE in both type classification and vulnerability detection tasks. For vulnerability type classification, the experiments on the Fan et al. dataset show that LIVABLE outperforms the state-of-the-art methods by 24.18% in terms of the accuracy metric, and also improves the performance in predicting tail classes by 7.7%. To evaluate the efficacy of the vulnerability representation learning module in LIVABLE, we further compare it with the recent vulnerability detection approaches on three benchmark datasets, which shows that the proposed representation learning module improves the best baselines by 4.03% on average in terms of accuracy.
C1 [Wen, Xin-Cheng; Gao, Cuiyun; Luo, Feng; Liao, Qing] Harbin Inst Technol, Shenzhen 518055, Peoples R China.
   [Gao, Cuiyun] Peng Cheng Lab, Shenzhen 518055, Peoples R China.
   [Gao, Cuiyun] Guangdong Prov Key Lab Novel Secur Intelligence Te, Shenzhen 518055, Peoples R China.
   [Wang, Haoyu] Huazhong Univ Sci & Technol, Wuhan 430074, Peoples R China.
   [Li, Ge] Peking Univ, Beijing 100871, Peoples R China.
C3 Harbin Institute of Technology; Peng Cheng Laboratory; Huazhong
   University of Science & Technology; Peking University
RP Gao, CY (corresponding author), Harbin Inst Technol, Shenzhen 518055, Peoples R China.
EM xiamenwxc@foxmail.com; gaocuiyun@hit.edu.cn; 190110308@stu.hit.edu.cn;
   haoyuwang@hust.edu.cn; lige@pku.edu.cn; liaoqing@hit.edu.cn
OI Wen, Xin-Cheng/0000-0002-2115-9921
FU National Key R #x0026; D Program of China
FX No Statement Available
CR Alon Uri, 2021, INT C LEARN REPR
   [Anonymous], Common Weakness Enumeration
   [Anonymous], NATL VULNERABILITY D
   [Anonymous], Microsoft bug bounty programs year in review: $13.6M in rewards
   [Anonymous], Key statistics of the Google bug bounty program
   Boureau Y.-L., 2010, P 27 INT C MACH LEAR, P111, DOI DOI 10.5555/3104322.3104338
   Boyan Zhou, 2020, 2020 IEEE/CVF Conference on Computer Vision and Pattern Recognition (CVPR). Proceedings, P9716, DOI 10.1109/CVPR42600.2020.00974
   Chakraborty S, 2022, IEEE T SOFTWARE ENG, V48, P3280, DOI 10.1109/TSE.2021.3087402
   Chen YZ, 2023, PROCEEDINGS OF THE 26TH INTERNATIONAL SYMPOSIUM ON RESEARCH IN ATTACKS, INTRUSIONS AND DEFENSES, RAID 2023, P654, DOI 10.1145/3607199.3607242
   Chicco D, 2020, BMC GENOMICS, V21, DOI 10.1186/s12864-019-6413-7
   Church KW, 2017, NAT LANG ENG, V23, P155, DOI 10.1017/S1351324916000334
   Croft R, 2023, PROC INT CONF SOFTW, P121, DOI 10.1109/ICSE48619.2023.00022
   Cui Y, 2019, PROC CVPR IEEE, P9260, DOI 10.1109/CVPR.2019.00949
   ELMAN JL, 1990, COGNITIVE SCI, V14, P179, DOI 10.1207/s15516709cog1402_1
   Fan JH, 2020, IEEE WORK CONF MIN S, P508, DOI 10.1145/3379597.3387501
   first.org, CVSS v3.0
   first.org, CVSS v4.0
   first.org, 2023, CVSS v3.1
   Forrest S, 1996, P IEEE S SECUR PRIV, P120, DOI 10.1109/SECPRI.1996.502675
   Gao SZ, 2023, ACM T SOFTW ENG METH, V32, DOI 10.1145/3522674
   Gori M, 2005, IEEE IJCNN, P729
   Grieco G, 2016, CODASPY'16: PROCEEDINGS OF THE SIXTH ACM CONFERENCE ON DATA AND APPLICATION SECURITY AND PRIVACY, P85, DOI 10.1145/2857705.2857720
   Guo H, 2021, PROC CVPR IEEE, P15084, DOI 10.1109/CVPR46437.2021.01484
   Harer J., 2018, P ADV NEURAL INF PRO, P7944
   Jingru Tan, 2020, 2020 IEEE/CVF Conference on Computer Vision and Pattern Recognition (CVPR). Proceedings, P11659, DOI 10.1109/CVPR42600.2020.01168
   Kipf T.N., 2017, INT C LEARN REPR, P1
   Li J, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY AND SECURITY (QRS), P318, DOI 10.1109/QRS.2017.42
   Li Y., 2016, ICLR, P1
   Li Y, 2021, PROCEEDINGS OF THE 29TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '21), P292, DOI 10.1145/3468264.3468597
   Li Z, 2022, IEEE T DEPEND SECURE, V19, P2244, DOI 10.1109/TDSC.2021.3051525
   Li Z, 2018, 25TH ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2018), DOI 10.14722/ndss.2018.23158
   Lin GJ, 2017, CCS'17: PROCEEDINGS OF THE 2017 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P2539, DOI 10.1145/3133956.3138840
   Lin TY, 2017, IEEE I CONF COMP VIS, P2999, DOI 10.1109/ICCV.2017.324
   Lukasik M., 2020, INT C MACHINE LEARNI, P6448
   Lukovnikov D., 2021, INT C MACHINE LEARNI, P7180
   Mikolov T., 2013, ARXIV, DOI DOI 10.48550/ARXIV.1301.3781
   Na S, 2017, LECT NOTE DATA ENG, V2, P657, DOI 10.1007/978-3-319-49106-6_65
   Neuhaus S., 2009, P USENIX ANN TECH C
   Neuhaus S, 2007, CCS'07: PROCEEDINGS OF THE 14TH ACM CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P529
   Pan SY, 2023, PROC INT CONF SOFTW, P957, DOI 10.1109/ICSE48619.2023.00088
   Park S, 2021, 2021 IEEE/CVF INTERNATIONAL CONFERENCE ON COMPUTER VISION (ICCV 2021), P715, DOI 10.1109/ICCV48922.2021.00077
   Russell RL, 2018, 2018 17TH IEEE INTERNATIONAL CONFERENCE ON MACHINE LEARNING AND APPLICATIONS (ICMLA), P757, DOI 10.1109/ICMLA.2018.00120
   Santos I, 2013, ADV INTELL SYST COMP, V189, P271
   Shin Y, 2011, IEEE T SOFTWARE ENG, V37, P772, DOI 10.1109/TSE.2010.81
   Shuai B, 2013, 2013 IEEE INTERNATIONAL CONFERENCE ON INFORMATION AND AUTOMATION (ICIA), P312, DOI 10.1109/ICInfA.2013.6720316
   Szegedy C, 2016, PROC CVPR IEEE, P2818, DOI 10.1109/CVPR.2016.308
   van der Maaten L, 2008, J MACH LEARN RES, V9, P2579
   Veličkovic P, 2018, Arxiv, DOI arXiv:1710.10903
   Wang S, 2016, PROC INT CONF SOFTW, P297, DOI 10.1145/2884781.2884804
   Wen XC, 2023, PROC INT CONF SOFTW, P2275, DOI 10.1109/ICSE48619.2023.00191
   White M, 2016, IEEE INT CONF AUTOM, P87, DOI 10.1145/2970276.2970326
   Woo SH, 2018, LECT NOTES COMPUT SC, V11211, P3, DOI 10.1007/978-3-030-01234-2_1
   Xu KYL, 2018, PR MACH LEARN RES, V80
   Yamaguchi F., 2011, P 5 USENIX WORKSH OF, P118
   Yamaguchi F, 2014, P IEEE S SECUR PRIV, P590, DOI 10.1109/SP.2014.44
   Yue KY, 2019, NEURAL COMPUT APPL, V31, P409, DOI 10.1007/s00521-017-3073-x
   Zhang J, 2019, PROC INT CONF SOFTW, P783, DOI 10.1109/ICSE.2019.00086
   Zhang YF, 2023, IEEE T PATTERN ANAL, V45, P10795, DOI 10.1109/TPAMI.2023.3268118
   Zhang Z, 2021, INT J MACH LEARN CYB, V12, P1649, DOI 10.1007/s13042-020-01264-7
   Zhang ZL, 2018, ADV NEUR IN, V31
   Zhong ZS, 2021, PROC CVPR IEEE, P16484, DOI 10.1109/CVPR46437.2021.01622
   Zhou P, 2016, PROCEEDINGS OF THE 54TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (ACL 2016), VOL 2, P207, DOI 10.18653/v1/p16-2034
   Zhou Yaqin, 2019, Proceedings of the Advances in Neural Information Processing Systems, P10197
   Zou DQ, 2021, IEEE T DEPEND SECURE, V18, P2224, DOI 10.1109/TDSC.2019.2942930
NR 64
TC 0
Z9 0
U1 1
U2 1
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUN
PY 2024
VL 50
IS 6
BP 1325
EP 1339
DI 10.1109/TSE.2024.3382361
PG 15
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA UL2G2
UT WOS:001248142900013
OA Green Submitted
DA 2024-08-05
ER

PT J
AU Laaber, C
   Yue, T
   Ali, S
AF Laaber, Christoph
   Yue, Tao
   Ali, Shaukat
TI Evaluating Search-Based Software Microbenchmark Prioritization
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Benchmark testing; Software; Search problems; Runtime; Source coding;
   Java; Software measurement; Software microbenchmarking; performance
   testing; JMH; search-based software engineering; multi-objective
   optimization; regression testing; test case prioritization
ID SELECTION; ALGORITHMS
AB Ensuring that software performance does not degrade after a code change is paramount. A solution is to regularly execute software microbenchmarks, a performance testing technique similar to (functional) unit tests, which, however, often becomes infeasible due to extensive runtimes. To address that challenge, research has investigated regression testing techniques, such as test case prioritization (TCP), which reorder the execution within a microbenchmark suite to detect larger performance changes sooner. Such techniques are either designed for unit tests and perform sub-par on microbenchmarks or require complex performance models, drastically reducing their potential application. In this paper, we empirically evaluate single- and multi-objective search-based microbenchmark prioritization techniques to understand whether they are more effective and efficient than greedy, coverage-based techniques. For this, we devise three search objectives, i.e., coverage to maximize, coverage overlap to minimize, and historical performance change detection to maximize. We find that search algorithms (SAs) are only competitive with but do not outperform the best greedy, coverage-based baselines. However, a simple greedy technique utilizing solely the performance change history (without coverage information) is equally or more effective than the best coverage-based techniques while being considerably more efficient, with a runtime overhead of less than 1%. These results show that simple, non-coverage-based techniques are a better fit for microbenchmarks than complex coverage-based techniques.
C1 [Laaber, Christoph; Ali, Shaukat] Simula Res Lab, N-0164 Oslo, Norway.
   [Yue, Tao] Beihang Univ, Beijing 100191, Peoples R China.
C3 Beihang University
RP Laaber, C (corresponding author), Simula Res Lab, N-0164 Oslo, Norway.
EM laaber@simula.no; yuetao@buaa.edu.cn; shaukat@simula.no
OI Ali, Shaukat/0000-0002-9979-3519; Yue, Tao/0000-0003-3262-5577
FU Research Council of Norway (RCN) [309642]; Experimental Infrastructure
   for Exploration of Exascale Computing (eX3); RCN [270053]
FX This work was supported in part by The Research Council of Norway (RCN)
   under the project 309642 and in part by the Experimental Infrastructure
   for Exploration of Exascale Computing (eX3), which is supported by the
   RCN project 270053.
CR Achimugu P, 2014, INFORM SOFTWARE TECH, V56, P568, DOI 10.1016/j.infsof.2014.02.001
   Alshoaibi D, 2022, SWARM EVOL COMPUT, V73, DOI 10.1016/j.swevo.2022.101101
   Arcuri A, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1, DOI 10.1145/1985793.1985795
   Benjamini Y, 2001, ANN STAT, V29, P1165
   Chen JF, 2017, PROC IEEE INT CONF S, P341, DOI 10.1109/ICSME.2017.13
   Davison D., 1997, Bootstrap methods and their applica-tion, V94, DOI [10.1017/CBO9780511802843.17A.B., DOI 10.1017/CBO9780511802843.17A.B]
   de Oliveira AB, 2017, IEEE INT CONF SOFTW, P103, DOI 10.1109/ICST.2017.17
   Deb K, 2014, IEEE T EVOLUT COMPUT, V18, P577, DOI 10.1109/TEVC.2013.2281535
   Di Nucci D, 2020, IEEE T SOFTWARE ENG, V46, P674, DOI 10.1109/TSE.2018.2868082
   Elbaum S, 2001, PROC INT CONF SOFTW, P329, DOI 10.1109/ICSE.2001.919106
   Fonseca CM, 1995, EVOL COMPUT, V3, P1, DOI 10.1162/evco.1995.3.1.1
   Fraser G, 2012, IEEE T SOFTWARE ENG, V38, P278, DOI 10.1109/TSE.2011.93
   Grambow M, 2023, IEEE T CLOUD COMPUT, V11, P2575, DOI 10.1109/TCC.2022.3217947
   Haghighatkhah A, 2018, J SYST SOFTWARE, V146, P80, DOI 10.1016/j.jss.2018.08.061
   Hao D, 2014, ACM T SOFTW ENG METH, V24, DOI 10.1145/2685614
   Harman M, 2001, INFORM SOFTWARE TECH, V43, P833, DOI 10.1016/S0950-5849(01)00189-6
   Hess J. D., 2004, P ANN M AM ED RES AS
   Jiang ZM, 2015, IEEE T SOFTWARE ENG, V41, P1091, DOI 10.1109/TSE.2015.2445340
   Just R, 2014, ISSTA 2014, P437, DOI [10.1145/2610384.2628055, DOI 10.1145/2610384.2628055]
   Kalibera R., 2012, Tech. Rep. 4-12
   Kalibera T, 2013, PROCEEDINGS OF THE ACM SIGPLAN INTERNATIONAL SYMPOSIUM ON MEMORY MANAGEMENT (ISMM '13), P63
   Knowles D., 1999, P C EV COMP CEC PISC, DOI [10.1109/cec.1999.781913.49W.H., DOI 10.1109/CEC.1999.781913.49W.H]
   KRUSKAL WH, 1952, J AM STAT ASSOC, V47, P583, DOI 10.1080/01621459.1952.10483441
   Laaber Christoph, 2024, Zenodo, DOI 10.5281/ZENODO.10527125
   Laaber C, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P989, DOI 10.1145/3368089.3409683
   Laaber C, 2018, IEEE WORK CONF MIN S, P119, DOI 10.1145/3196398.3196407
   Laaber H. C., 2021, Empirical Softw. Eng., V26, P1
   Laaber S., 2024, Software microbenchmarkingin the cloud. How bad is it really?, V24, DOI [10.5281/zenodo.10527360, DOI 10.5281/ZENODO.10527360]
   Leitner Philipp, 2017, P 8 ACM SPEC INT C P, P373, DOI [10.1145/3030207.3030213, DOI 10.1145/3030207.3030213.60Z]
   Li Z, 2007, IEEE T SOFTWARE ENG, V33, P225, DOI 10.1109/TSE.2007.38
   Luo Q, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P559, DOI 10.1145/2950290.2950344
   Nebro AJ, 2009, INT J INTELL SYST, V24, P726, DOI 10.1002/int.20358
   Rothermel G, 1998, IEEE T SOFTWARE ENG, V24, P401, DOI 10.1109/32.689399
   Samoaa H, 2021, PROCEEDINGS OF THE ACM/SPEC INTERNATIONAL CONFERENCE ON PERFORMANCE ENGINEERING (ICPE '21), P213, DOI 10.1145/3427921.3450243
   Stol KJ, 2018, ACM T SOFTW ENG METH, V27, DOI 10.1145/3241743
   Vargha A, 2000, J EDUC BEHAV STAT, V25, P101, DOI 10.3102/10769986025002101
   Yoo M., 2007, P INT S SOFTW TEST A, P140, DOI [DOI 10.1145/1273463.1273483.83T, 10.1145/1273463.1273483]
   Yoo S, 2012, SOFTW TEST VERIF REL, V22, P67, DOI [10.1002/stv.430, 10.1002/stvr.430]
   Yu TT, 2018, EMPIR SOFTW ENG, V23, P3034, DOI 10.1007/s10664-017-9578-1
   Zitzler E, 2004, LECT NOTES COMPUT SC, V3242, P832
NR 40
TC 0
Z9 0
U1 0
U2 0
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUL
PY 2024
VL 50
IS 7
BP 1687
EP 1703
DI 10.1109/TSE.2024.3380836
PG 17
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA YZ0O5
UT WOS:001272193600015
OA Green Submitted
DA 2024-08-05
ER

PT J
AU Verwijs, C
   Russo, D
AF Verwijs, Christiaan
   Russo, Daniel
TI The Double-Edged Sword of Diversity: How Diversity, Conflict, and
   Psychological Safety Impact Software Teams
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Task analysis; Software; Cultural differences; Psychology; Safety;
   Gender issues; Mathematical models; Software teams; agile; diversity;
   psychological safety; conflict
ID WORK GROUP DIVERSITY; CULTURAL-DIVERSITY; MODERATING ROLE; AGILE TEAM;
   PERFORMANCE; ORGANIZATIONS; MANAGEMENT; VALUES; TASK; BENEFITS
AB Team diversity can be seen as a double-edged sword. It brings additional cognitive resources to teams at the risk of increased conflict. Few studies have investigated how different types of diversity impact software teams. This study views diversity through the lens of the categorization-elaboration model (CEM). We investigated how diversity in gender, age, role, and cultural background impacts team effectiveness and conflict, and how these associations are moderated by psychological safety. Our sample consisted of 1,118 participants from 161 teams and was analyzed with Covariance-Based Structural Equation Modeling (CB-SEM). We found a positive effect of age diversity on team effectiveness and gender diversity on relational conflict. Psychological safety contributed directly to effective teamwork and less conflict but did not moderate the diversity-effectiveness link. While our results are consistent with the CEM theory for age and gender diversity, other types of diversity did not yield similar results. We discuss several reasons for this, including curvilinear effects, moderators such as task interdependence, or the presence of a diversity mindset. With this paper, we argue that a dichotomous nature of diversity is oversimplified. Indeed, it is a complex relationship where context plays a pivotal role. A more nuanced understanding of diversity through the lens of theories, such as the CEM, may lead to more effective teamwork.
C1 [Verwijs, Christiaan] The Liberators, NL-3544DH Utrecht, Netherlands.
   [Russo, Daniel] Aalborg Univ, Dept Comp Sci, DK-2450 Copenhagen, Denmark.
C3 Aalborg University
RP Russo, D (corresponding author), Aalborg Univ, Dept Comp Sci, DK-2450 Copenhagen, Denmark.
EM daniel.russo@cs.aau.dk
RI Russo, Daniel/O-3002-2019
OI Russo, Daniel/0000-0001-7253-101X; Verwijs,
   Christiaan/0000-0002-6515-8808
FU The Liberators BV
FX No Statement Available
CR [Anonymous], 1993, J. Appl. Commun. Res., DOI 10.1080/00909889309365352
   [Anonymous], 2023, What personal data is considered sensitive
   [Anonymous], 2022, Tech. Rep.
   Arbuckle J. L, 2013, IBM SPSS Amos 22 User's Guide
   Baltes S, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-021-10072-8
   BENTLER PM, 1990, PSYCHOL BULL, V107, P238, DOI 10.1037/0033-2909.88.3.588
   BENTLER PM, 1980, ANNU REV PSYCHOL, V31, P419, DOI 10.1146/annurev.ps.31.020180.002223
   Bliese PD, 1998, ORGAN RES METHODS, V1, P355, DOI 10.1177/109442819814001
   BOCHNER S, 1994, J CROSS CULT PSYCHOL, V25, P233, DOI 10.1177/0022022194252005
   Bodla AA, 2018, J MANAGE ORGAN, V24, P711, DOI 10.1017/jmo.2016.34
   Bouncken RB, 2015, REV MANAG SCI, V9, P361, DOI 10.1007/s11846-014-0160-6
   Bowers CA, 2000, SMALL GR RES, V31, P305, DOI 10.1177/104649640003100303
   Brown GK, 2010, OXF DEV STUD, V38, P411, DOI 10.1080/13600818.2010.525629
   Byrne B, 2010, INTERNATIONAL HANDBOOK OF PSYCHOLOGY IN EDUCATION, P3
   CANNONBOWERS JA, 1993, INDIVIDUAL AND GROUP DECISION MAKING, P221
   Carnevale PJ, 1998, J PERS SOC PSYCHOL, V74, P1300, DOI 10.1037/0022-3514.74.5.1300
   Chen FN, 2008, SOCIOL METHOD RES, V36, P462, DOI 10.1177/0049124108314720
   COHEN J, 1992, PSYCHOL BULL, V112, P155, DOI 10.1037/0033-2909.112.1.155
   Conboy K, 2009, IFIP ADV INF COMM TE, V301, P122, DOI 10.1007/978-3-642-02388-0_9
   Cook T. D., 1979, Quasi-experimentation: Design analysis issues for field settings, V351
   Cozby PC., 2012, Methods in behavioral research
   Dahlin KB, 2005, ACAD MANAGE J, V48, P1107, DOI 10.2307/20159732
   De Carvalho J., 2014, American International Journal of Contemporary Research, V4, P6, DOI DOI 10.5539/ASS.V11N4P371
   De Dreu CKW, 2003, J APPL PSYCHOL, V88, P741, DOI 10.1037/0021-9010.88.4.741
   Desmet K, 2017, AM ECON REV, V107, P2479, DOI 10.1257/aer.20150243
   Diegmann P., 2017, P INT C INF SYST
   Dyb Tore., 2014, Software Project Management in a Changing World, P277
   Earley PC, 2000, ACAD MANAGE J, V43, P26, DOI 10.5465/1556384
   Edmondson A, 1999, ADMIN SCI QUART, V44, P350, DOI 10.2307/2666999
   Edmondson AC, 2014, ANNU REV ORGAN PSYCH, V1, P23, DOI 10.1146/annurev-orgpsych-031413-091305
   Ely RJ, 2001, ADMIN SCI QUART, V46, P229, DOI 10.2307/2667087
   Faul F, 2009, BEHAV RES METHODS, V41, P1149, DOI 10.3758/BRM.41.4.1149
   Fleiss J, 1986, DESIGN ANAL CLIN EXP, DOI DOI 10.1002/9781118032923
   Fowler M., 2001, Software Development, V9, P28
   Gaskin J., 2021, Data screening
   Gaskin J., 2016, Stats Tools Package
   Gibson C, 2003, ADMIN SCI QUART, V48, P202, DOI 10.2307/3556657
   Gibson CB, 2006, ADMIN SCI QUART, V51, P451, DOI 10.2189/asqu.51.3.451
   Goodwin K. A., 2016, Research in Psychology: Methods and Design
   Guillaume YRF, 2017, J ORGAN BEHAV, V38, P276, DOI 10.1002/job.2040
   Guzzo RA, 1996, ANNU REV PSYCHOL, V47, P307, DOI 10.1146/annurev.psych.47.1.307
   Haas H, 2010, EQUAL DIVERS INCL, V29, P458, DOI 10.1108/02610151011052771
   Hackman J.Richard., 1976, The Design of Self-managing Work Groups
   Hackman JR, 1983, A normative model of work team effectiveness
   Hair J. F., 2009, Multivariate data analysis
   Harring JR, 2012, PSYCHOL METHODS, V17, P193, DOI 10.1037/a0027539
   Hayes A. F., 2013, Introduction to mediation, moderation, and conditional process analysis: A regression-based approach
   HAYS RD, 1989, EDUC PSYCHOL MEAS, V49, P629, DOI 10.1177/001316448904900315
   Hennel P, 2021, PROJ MANAG J, V52, P11, DOI 10.1177/8756972820933057
   Henseler J, 2015, J ACAD MARKET SCI, V43, P115, DOI 10.1007/s11747-014-0403-8
   Highsmith J, 2001, COMPUTER, V34, P120, DOI 10.1109/2.947100
   Hinsz VB, 1997, PSYCHOL BULL, V121, P43, DOI 10.1037/0033-2909.121.1.43
   Hofstede G., 1984, Cross-cultural Research and Methodology Series, V5
   Homberg F, 2013, GROUP ORGAN MANAGE, V38, P455, DOI 10.1177/1059601113493925
   Horwitz S.K., 2005, HRD Review, V4, P219, DOI [DOI 10.1177/1534484305275847, 10.1177/1534484305275847]
   Horwitz SK, 2007, J MANAGE, V33, P987, DOI 10.1177/0149206307308587
   House R. J., CULTURE LEADERSHIP O
   Hu LT, 1999, STRUCT EQU MODELING, V6, P1, DOI 10.1080/10705519909540118
   Hui K. M., 2017, Australas. J. Organisational Psychol., V10, P1
   JEHN KA, 1995, ADMIN SCI QUART, V40, P256, DOI 10.2307/2393638
   JEHN KA, 1994, INT J CONFL MANAGE, V5, P223, DOI 10.1108/eb022744
   Jetten J, 1998, J PERS SOC PSYCHOL, V74, P1481, DOI 10.1037/0022-3514.74.6.1481
   Kearney E, 2009, ACAD MANAGE J, V52, P581, DOI 10.5465/AMJ.2009.41331431
   Kim M, 2017, SOC BEHAV PERSONAL, V45, P1255, DOI 10.2224/sbp.6325
   Kirkman BL, 2013, HUM RELAT, V66, P333, DOI 10.1177/0018726712464076
   Kline R.B., 2005, PRINCIPLES PRACTICE
   Larman C., 2004, Agile Iterative Development-A Managers Guide, Agile Software Development
   Lee G, 2010, MIS QUART, V34, P87
   Long J.S., 2006, REGRESSION MODELS CA
   Lynn GS, 2000, RES TECHNOL MANAGE, V43, P48, DOI 10.1080/08956308.2000.11671341
   MARSH HW, 1985, PSYCHOL BULL, V97, P562, DOI 10.1037/0033-2909.97.3.562
   Marsick V., 1990, INFORMAL INCIDENTAL
   Marsick V.J., 2003, Advances in Developing Human Resources, V5, P132, DOI [10.1177/1523422303005002002, DOI 10.1177/1523422303005002002]
   Mathieu J, 2008, J MANAGE, V34, P410, DOI 10.1177/0149206308316061
   Meade AW, 2012, PSYCHOL METHODS, V17, P437, DOI 10.1037/a0028085
   Melo CD, 2013, INFORM SOFTWARE TECH, V55, P412, DOI 10.1016/j.infsof.2012.09.004
   Moe NB, 2008, ASWEC 2008: 19TH AUSTRALIAN SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P76, DOI 10.1109/ASWEC.2008.28
   Moe NB, 2010, INFORM SOFTWARE TECH, V52, P480, DOI 10.1016/j.infsof.2009.11.004
   Nunnally J.C., 1978, CLIN DIAGNOSIS MENTA, VEd., DOI DOI 10.1007/978-1-4684-2490-4_4
   Patrício L, 2022, ADM SCI, V12, DOI 10.3390/admsci12010031
   Pelled LH, 1999, ADMIN SCI QUART, V44, P1, DOI 10.2307/2667029
   Pesch R, 2015, INT J INNOV TECHNOL, V12, DOI 10.1142/S0219877015500297
   Podsakoff PM, 2003, J APPL PSYCHOL, V88, P879, DOI 10.1037/0021-9010.88.5.879
   Portes A., 2006, IMMIGRANT AM PORTRAI
   Richard OC, 2004, ACAD MANAGE J, V47, P255, DOI 10.5465/20159576
   Roberge MÉ, 2010, HUM RESOUR MANAGE R, V20, P295, DOI 10.1016/j.hrmr.2009.09.002
   Rodríguez-Pérez G, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-021-09992-2
   Russo D, 2021, ACM COMPUT SURV, V54, DOI 10.1145/3447580
   Russo D, 2022, IEEE T SOFTWARE ENG, V48, P819, DOI 10.1109/TSE.2020.3003413
   Schaufeli WB, 2004, J ORGAN BEHAV, V25, P293, DOI 10.1002/job.248
   Schmutz JB, 2019, BMJ OPEN, V9, DOI 10.1136/bmjopen-2018-028280
   Schneid M, 2016, J MANAGE PSYCHOL, V31, P2, DOI 10.1108/JMP-07-2012-0228
   Scholten L, 2007, J EXP SOC PSYCHOL, V43, P539, DOI 10.1016/j.jesp.2006.05.010
   Schwaber K, 2020, The scrum guide, P17
   Schwaber K., 1995, P OOPSLA C, P1
   Schwartz SJ, 2013, EMERG ADULTHOOD, V1, P96, DOI 10.1177/2167696813479781
   Silveira KK, 2019, 2019 IEEE/ACM 12TH INTERNATIONAL WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING (CHASE 2019), P7, DOI 10.1109/CHASE.2019.00010
   Simmering MJ, 2015, ORGAN RES METHODS, V18, P473, DOI 10.1177/1094428114560023
   Simons TL, 2000, J APPL PSYCHOL, V85, P102, DOI 10.1037/0021-9010.85.1.102
   SIMPSON EH, 1949, NATURE, V163, P688, DOI 10.1038/163688a0
   Singh B, 2013, J OCCUP ORGAN PSYCH, V86, P242, DOI 10.1111/joop.12015
   Smola KW, 2002, J ORGAN BEHAV, V23, P363, DOI 10.1002/job.147
   Steffens P, 2012, SMALL BUS ECON, V39, P727, DOI 10.1007/s11187-011-9358-z
   Steiger J.H., 1980, STATISTICALLY BASED
   Stewart GL, 2000, ACAD MANAGE J, V43, P135, DOI 10.5465/1556372
   Strode D, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-021-10115-0
   Thompson DA, 2012, ANN FAM MED, V10, P235, DOI 10.1370/afm.1347
   Tshetshema CT, 2020, TECHNOL ANAL STRATEG, V32, P955, DOI 10.1080/09537325.2020.1730783
   Van Boxmeer L., 2007, P INT MIL TEST ASS S, P1
   van Knippenberg D, 2004, J APPL PSYCHOL, V89, P1008, DOI 10.1037/0021-9010.89.6.1008
   Van Knippenberg D., 2005, P 12 EUR C WORK ORG, P183
   van Knippenberg D, 2007, ANNU REV PSYCHOL, V58, P515, DOI 10.1146/annurev.psych.58.110405.085546
   van Mierlo H, 2009, ORGAN RES METHODS, V12, P368, DOI 10.1177/1094428107309322
   van Waardenburg G, 2013, INFORM SOFTWARE TECH, V55, P2154, DOI 10.1016/j.infsof.2013.07.012
   Verwijs C, 2023, ACM T SOFTW ENG METH, V32, DOI 10.1145/3571849
   Wageman R., 2005, The Journal of Applied Behavioural Science, V41, P373, DOI [10.1177/0021886305281984, DOI 10.1177/0021886305281984]
   Wickramasinghe Vathsala, 2015, Strategic Outsourcing, V8, P138, DOI 10.1108/SO-02-2015-0007
   Williams KY, 1998, RES ORGAN BEHAV, V20, P77
NR 118
TC 2
Z9 2
U1 19
U2 19
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JAN
PY 2024
VL 50
IS 1
BP 141
EP 157
DI 10.1109/TSE.2023.3339881
PG 17
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA EQ4Q6
UT WOS:001140380900005
OA Green Submitted, hybrid
DA 2024-08-05
ER

PT J
AU Hajari, F
   Malmir, S
   Mirsaeedi, E
   Rigby, PC
AF Hajari, Fahimeh
   Malmir, Samaneh
   Mirsaeedi, Ehsan
   Rigby, Peter
TI Factoring Expertise, Workload, and Turnover Into Code Review
   Recommendation
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Reviews; Codes; Software engineering; Software; Task analysis;
   Productivity; Birds; Code review; recommenders; expertise; workload;
   turnover; code ownership; knowledge distribution
ID IMPACT
AB Developer turnover is inevitable on software projects and leads to knowledge loss, a reduction in productivity, and an increase in defects. Mitigation strategies to deal with turnover tend to disrupt and increase workloads for developers. In this work, we suggest that through code review recommendation we can distribute knowledge and mitigate turnover while more evenly distributing review workload. We conduct historical analyses to understand the natural concentration of review workload and the degree of knowledge spreading that is inherent in code review. Even though review workload is highly concentrated, we show that code review natural spreads knowledge thereby reducing the files at risk to turnover. Using simulation, we evaluate existing code review recommenders and develop novel recommenders to understand their impact on the level of expertise during review, the workload of reviewers, and the files at risk to turnover. Our simulations use seeded random replacement of reviewers to allow us to compare the reviewer recommenders without the confounding variation of different reviewers being replaced for each recommender. We find that prior work that assigns reviewers based on file ownership concentrates knowledge on a small group of core developers increasing the risk of knowledge loss from turnover. Recent work, WhoDo, that considers developer workload, assigns developers that are not sufficiently committed to the project and we see an increase in files at risk to turnover. We propose learning and retention aware review recommenders that when combined are effective at reducing the risk of turnover, but they unacceptably reduce the overall expertise during reviews. Combining recommenders, we develop the SofiaWL recommender that suggests experts with low active review workload when none of the files under review are known by only one developer. In contrast, when knowledge is concentrated on one developer, it sends the review to other reviewers to spread knowledge. For the projects we study, we are able to globally increase expertise during reviews, +3%, reduce workload concentration, -12%, and reduce the files at risk, -28%. We make our scripts and data available in our replication package [1]. Developers can optimize for a particular outcome measure based on the needs of their project, or use our GitHub bot to automatically balance the outcomes [2].
C1 [Hajari, Fahimeh; Malmir, Samaneh; Mirsaeedi, Ehsan; Rigby, Peter] Concordia Univ, Dept Comp Sci & Software Engn, Montreal, PQ H3G 1M8, Canada.
C3 Concordia University - Canada
RP Rigby, PC (corresponding author), Concordia Univ, Dept Comp Sci & Software Engn, Montreal, PQ H3G 1M8, Canada.
EM f_hajari@encs.concordia.ca; s_malmir@encs.concordia.ca;
   s_irsaee@encs.concordia.ca; peter.rigby@concordia.ca
OI HAJARI, FAHIMEH/0009-0002-8401-7581; Rigby, Peter/0000-0003-1137-4297
CR Al-Zubaidi WHA, 2020, PROCEEDINGS OF THE 16TH ACM INTERNATIONAL CONFERENCE ON PREDICTIVE MODELS AND DATA ANALYTICS IN SOFTWARE ENGINEERING, PROMISE 2020, P21, DOI 10.1145/3416508.3417115
   Asthana S, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P937, DOI 10.1145/3338906.3340449
   Bacchelli A, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P712, DOI 10.1109/ICSE.2013.6606617
   Balachandran V, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P931, DOI 10.1109/ICSE.2013.6606642
   Bao LF, 2017, IEEE WORK CONF MIN S, P170, DOI 10.1109/MSR.2017.58
   Bird C, 2011, P 19 ACM SIGSOFT S 1, P4, DOI DOI 10.1145/2025113.2025119
   Bird Christian, 2006, INT C SOFTWARE ENG P, P137, DOI DOI 10.1145/1137983.1138016
   Bontis N., 2002, Journal of Intellectual Capital, V3, P303, DOI 10.1108/14691930210435633
   Bosu A, 2017, IEEE T SOFTWARE ENG, V43, P56, DOI 10.1109/TSE.2016.2576451
   Bosu A, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P146, DOI 10.1109/MSR.2015.21
   Canfora G., 2012, P ACM SIGSOFT 20 INT, P44, DOI DOI 10.1145/2393596.2393647
   Chen QY, 2022, 2022 ACM/IEEE 44TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE (ICSE-SEIP 2022), P115, DOI [10.1109/ICSE-SEIP55303.2022.9794124, 10.1145/3510457.3513035]
   Chouchen M, 2021, APPL SOFT COMPUT, V100, DOI 10.1016/j.asoc.2020.106908
   Chueshev A, 2020, PROC IEEE INT CONF S, P499, DOI 10.1109/ICSME46990.2020.00054
   Constantinou E, 2017, INNOV SYST SOFTW ENG, V13, P101, DOI 10.1007/s11334-017-0303-4
   Dorner M, 2022, INT SYMP EMP SOFTWAR, P195, DOI 10.1145/3544902.3546254
   FAGAN ME, 1976, IBM SYST J, V15, P182, DOI 10.1147/sj.153.0182
   Foucault M, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P829, DOI 10.1145/2786805.2786870
   Fritz T, 2007, P 6 JOINT M EUR SOFT, P341, DOI DOI 10.1145/1287624.1287673
   Gauthier IX, 2021, 2021 36TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING ASE 2021, P30, DOI 10.1109/ASE51524.2021.9678640
   Gîrba T, 2005, EIGHTH INTERNATIONAL WORKSHOP ON PRINCIPLES OF SOFTWARE EVOLUTION, PROCEEDINGS, P113, DOI 10.1109/IWPSE.2005.21
   Gousios G, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P345, DOI 10.1145/2568225.2568260
   Gousios G, 2013, IEEE WORK CONF MIN S, P233, DOI 10.1109/MSR.2013.6624034
   Greiler M., 2016, MSR-TR-2016-27
   Hajari F., GitHub
   Hannebauer C, 2016, IEEE INT CONF AUTOM, P99, DOI 10.1145/2970276.2970306
   HUSELID MA, 1995, ACAD MANAGE J, V38, P635, DOI 10.5465/256741
   Izquierdo-Cortazar D., 2009, PROC 42 HAWAII INT C, P1
   Jeong G., 2009, RES SOFTWARE ANAL ER, P1
   Kagdi H, 2008, PROC IEEE INT CONF S, P157, DOI 10.1109/ICSM.2008.4658064
   Kazemi F, 2022, PROC IEEE INT CONF S, P139, DOI 10.1109/ICSME55016.2022.00021
   Kononenko O, 2016, PROC INT CONF SOFTW, P1028, DOI 10.1145/2884781.2884840
   Kovalenko V, 2020, IEEE T SOFTWARE ENG, V46, P710, DOI 10.1109/TSE.2018.2868367
   Krutauz A, 2020, EMPIR SOFTW ENG, V25, P3323, DOI 10.1007/s10664-020-09837-4
   Lin B, 2017, INT CONF GLOBAL SOFT, P66, DOI 10.1109/ICGSE.2017.11
   McIntosh S, 2016, EMPIR SOFTW ENG, V21, P2146, DOI 10.1007/s10664-015-9381-9
   Mirsaeedi E, 2020, PROC INT CONF SOFTW, P1183, DOI 10.1145/3377811.3380335
   Mockus A, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P503, DOI 10.1109/ICSE.2002.1007994
   Mockus A., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, P263, DOI 10.1109/ICSE.2000.870417
   Mockus A., 2010, P 18 ACM SIGSOFT INT, P117, DOI DOI 10.1145/1882291.1882311
   Mockus A, 2009, PROC INT CONF SOFTW, P67, DOI 10.1109/ICSE.2009.5070509
   Nassif M, 2017, PROC IEEE INT CONF S, P261, DOI 10.1109/ICSME.2017.64
   Pandya P, 2022, PROCEEDINGS OF THE 30TH ACM JOINT MEETING EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, ESEC/FSE 2022, P546, DOI 10.1145/3540250.3549115
   Pee LG, 2014, IEEE T ENG MANAGE, V61, P702, DOI 10.1109/TEM.2014.2332339
   Pekala N., 2001, J PROPERTY MANAGEMEN, V66, P22
   Porter A., 1998, ACM Transactions on Software Engineering and Methodology, V7, P41, DOI 10.1145/268411.268421
   Rahman MM, 2016, 2016 IEEE/ACM 38TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING COMPANION (ICSE-C), P222, DOI 10.1145/2889160.2889244
   Rashid M, 2017, COMM COM INF SC, V770, P481, DOI 10.1007/978-3-319-67383-7_35
   Rebai S, 2020, AUTOMAT SOFTW ENG, V27, P301, DOI 10.1007/s10515-020-00275-6
   Rigby P. C., 2013, P ESEC FSE, P202, DOI DOI 10.1145/2491411.2491444
   Rigby PC, 2023, Arxiv, DOI arXiv:2312.17169
   Rigby PC, 2016, PROC INT CONF SOFTW, P1006, DOI 10.1145/2884781.2884851
   Rigby PC, 2014, ACM T SOFTW ENG METH, V23, DOI 10.1145/2594458
   Rigby PC, 2012, IEEE SOFTWARE, V29, P56, DOI 10.1109/MS.2012.24
   Rigby PC, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P541, DOI 10.1145/1985793.1985867
   Rong GP, 2022, PROC INT CONF SOFTW, P1381, DOI 10.1145/3510003.3510213
   Sadowski C, 2018, 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING - SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2018), P181, DOI 10.1145/3183519.3183525
   Shan QH, 2022, PROCEEDINGS OF THE 30TH ACM JOINT MEETING EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, ESEC/FSE 2022, P472, DOI 10.1145/3540250.3549104
   Sharma P. N., 2012, PROC IFIP INT C OPEN, P331
   Strand A, 2020, 2020 IEEE/ACM 42ND INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE (ICSE-SEIP), P1, DOI 10.1145/3377813.3381365
   Thongtanunam P, 2017, EMPIR SOFTW ENG, V22, P768, DOI 10.1007/s10664-016-9452-6
   Thongtanunam P, 2016, PROC INT CONF SOFTW, P1039, DOI 10.1145/2884781.2884852
   Thongtanunam P, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P141, DOI 10.1109/SANER.2015.7081824
   Ton Z, 2008, ORGAN SCI, V19, P56, DOI 10.1287/orsc.1070.0294
   Xia X, 2015, PROC IEEE INT CONF S, P261, DOI 10.1109/ICSM.2015.7332472
   Yu Y, 2016, INFORM SOFTWARE TECH, V74, P204, DOI 10.1016/j.infsof.2016.01.004
   Zanjani MB, 2016, IEEE T SOFTWARE ENG, V42, P530, DOI 10.1109/TSE.2015.2500238
   Zhou M., 2010, P 18 ACM SIGSOFT INT, P137
NR 68
TC 0
Z9 0
U1 2
U2 2
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD APR
PY 2024
VL 50
IS 4
BP 884
EP 899
DI 10.1109/TSE.2024.3366753
PG 16
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA OC2K3
UT WOS:001204993400002
OA Green Submitted
DA 2024-08-05
ER

PT J
AU Gao, SQ
   Zhang, LY
   Liu, HX
   Wang, YH
AF Gao, Shanquan
   Zhang, Liyuan
   Liu, Huaxiao
   Wang, Yihui
TI Which Animation API Should I Use Next? A Multimodal Real-Time Animation
   API Recommendation Model for Android Apps
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Android app; UI animation; API recommenda-tion; 3D CNN model; GRU model
AB UI animation is a widely adopted design element in the UI of Android apps. There are many animation APIs available for a variety of purposes, and developers can utilize them to realize the UI animations to avoid reinventing the wheel and thus improve the development efficiency. However, the number of animation APIs is as high as thousands and it is non-trivial for developers to systematically master their use. Facing such a problem, we construct a multi-modal real-time animation API recommendation model called U-A2A in this paper, which can provide the available animation API for developers of Android apps in real-time throughout the animation realization according to the multi-modal information, that is, the information of UI animation task and the animation API context of current program (i.e., the animation API sequence that has been used). The reason for considering the animation API context is that realizing a UI animation requires the use of multiple animation APIs and relevant animation APIs roughly follow a sequence. U-A2A consists of two important parts: feature extractor and predictor. The feature extractor, which is constructed based on 3D CNN and GRU, can gain the combined feature of UI animation task as well as animation API context. The predictor consists of a fully connected layer as well as a softmax layer, and it can predict and recommend the next available animation API according to the result from feature extractor. Furthermore, we use the development experience about animation APIs of existing app products as the basis to adjust the parameters of U-A2A, thereby completing the training work of recommendation model. The experimental result shows that when 1, 3, 5, and 10 animation APIs are considered, U-A2A can achieve 45.13%, 65.72%, 72.97% and 81.85% accuracy respectively, which is much higher than the baseline LUPE.
C1 [Gao, Shanquan; Zhang, Liyuan] Yanshan Univ, Sch Informat Sci & Engn, Sch Software, Qinhuangdao 066000, Peoples R China.
   [Gao, Shanquan; Zhang, Liyuan] Key Lab Comp Virtual Technol & Syst Integrat Hebei, Qinhuangdao 066000, Peoples R China.
   [Liu, Huaxiao; Wang, Yihui] Jilin Univ, Coll Comp Sci & Technol, Changchun 130012, Peoples R China.
C3 Yanshan University; Jilin University
RP Wang, YH (corresponding author), Jilin Univ, Coll Comp Sci & Technol, Changchun 130012, Peoples R China.
EM wangyihui1224@sina.com
OI liu, huaxiao/0000-0002-8151-1413
FU Innovation Capability Improvement Plan Project of Hebei Province
FX No Statement Available
CR Allamanis M, 2015, PR MACH LEARN RES, V37, P2123
   Bobadilla J, 2012, KNOWL-BASED SYST, V26, P225, DOI 10.1016/j.knosys.2011.07.021
   Chasanah U., 2021, Profesi Pendidikan Dasar, V8, P144
   Chen Menglong, 2022, 2022 IEEE International Conference on Artificial Intelligence and Computer Applications (ICAICA), P187, DOI 10.1109/ICAICA54878.2022.9844642
   Cho KYHY, 2014, Arxiv, DOI [arXiv:1406.1078, 10.48550/arXiv.1406.1078]
   Cooper A., 2014, About Face The Essentials of Interaction Design
   Framindmap, US
   He XC, 2021, PROC INT CONF SOFTW, P1634, DOI 10.1109/ICSE43902.2021.00145
   Ji SW, 2013, IEEE T PATTERN ANAL, V35, P221, DOI 10.1109/TPAMI.2012.59
   Jung S, 2021, SENSORS-BASEL, V21, DOI 10.3390/s21051639
   Lam X. N., 2008, PROC 2 INT C UBIQUI, P208, DOI [10.1145/1352793.1352837, DOI 10.1145/1352793.1352837]
   Liddle D., 2016, PROC 34 ACM INT C CO, P1
   Lika B, 2014, EXPERT SYST APPL, V41, P2065, DOI 10.1016/j.eswa.2013.09.005
   Ling CY, 2021, 2021 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2021), P36, DOI 10.1109/SANER50967.2021.00013
   Liu YW, 2021, INT J INTELL SYST, V36, P3174, DOI 10.1002/int.22412
   Luan S., 2019, P ACM PROGRAMMING LA, V3, P1, DOI DOI 10.1145/3360578
   McCrickard D. S., 1999, Exploring animation as a presentation technique for dynamic information sources
   Merz Benedikt, 2016, CHI EA ' 16), P3152, DOI [10.1145/2851581.2892489, DOI 10.1145/2851581.2892489]
   Myers Brad A., 1985, Proceedings of the SIGCHI Conference on Human Factors in Computing Systems. CHI'85, P11, DOI [DOI 10.1145/317456.317459, 10.1145/1165385.317459]
   Nathan Manousos K. O., Flinto
   Nguyen P. T., 2022, Expert Syst. Appl., V216
   Nguyen PT, 2021, IEEE T SOFTWARE ENG, V48, P2417, DOI 10.1109/TSE.2021.3059907
   Nguyen PT, 2019, PROC INT CONF SOFTW, P1050, DOI 10.1109/ICSE.2019.00109
   Novick D. G., 2011, PROC 29 ACM INT C CO, P1
   Shanmugam P, 2022, CONCURR COMP-PRACT E, V34, DOI 10.1002/cpe.7044
   Su T, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P245, DOI 10.1145/3106237.3106298
   Thung F, 2017, IEEE TETCI, V1, P145, DOI 10.1109/TETCI.2017.2699222
   Thung F, 2013, IEEE INT CONF AUTOM, P290, DOI 10.1109/ASE.2013.6693088
   van Bruggen, JAVAPARSER
   Wang YH, 2023, IEEE T SOFTWARE ENG, V49, P4411, DOI 10.1109/TSE.2023.3294971
   Wen FC, 2021, PROC INT CONF SOFTW, P138, DOI 10.1109/ICSE43902.2021.00025
   Wu ZY, 2021, 2021 IEEE/CVF INTERNATIONAL CONFERENCE ON COMPUTER VISION (ICCV 2021), P4872, DOI 10.1109/ICCV48922.2021.00485
   Yu HB, 2016, 8TH ASIA-PACIFIC SYMPOSIUM ON INTERNETWARE (INTERNETWARE 2016), P45, DOI 10.1145/2993717.2993727
   Yuan WZ, 2019, INFORM SOFTWARE TECH, V107, P30, DOI 10.1016/j.infsof.2018.10.010
   Zhao DH, 2020, PROC INT CONF SOFTW, P1286, DOI 10.1145/3377811.3380411
   Zhao YJ, 2023, IEEE T SOFTWARE ENG, V49, P113, DOI [10.1109/TSE.2022.3146831, 10.1109/IECON49645.2022.9968601]
   Zhao YJ, 2021, INFORM SOFTWARE TECH, V138, DOI 10.1016/j.infsof.2021.106619
NR 37
TC 0
Z9 0
U1 4
U2 4
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JAN
PY 2024
VL 50
IS 1
BP 106
EP 122
DI 10.1109/TSE.2023.3338728
PG 17
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA EQ4Q6
UT WOS:001140380900001
DA 2024-08-05
ER

PT J
AU Tang, YT
   Liu, ZJ
   Zhou, ZC
   Luo, XP
AF Tang, Yutian
   Liu, Zhijie
   Zhou, Zhichao
   Luo, Xiapu
TI ChatGPT vs SBST: A Comparative Assessment of Unit Test Suite Generation
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE ChatGPT; search-based software testing; large language models
AB Recent advancements in large language models (LLMs) have demonstrated exceptional success in a wide range of general domain tasks, such as question answering and following instructions. Moreover, LLMs have shown potential in various software engineering applications. In this study, we present a systematic comparison of test suites generated by the ChatGPT LLM and the state-of-the-art SBST tool EvoSuite. Our comparison is based on several critical factors, including correctness, readability, code coverage, and bug detection capability. By highlighting the strengths and weaknesses of LLMs (specifically ChatGPT) in generating unit test cases compared to EvoSuite, this work provides valuable insights into the performance of LLMs in solving software engineering problems. Overall, our findings underscore the potential of LLMs in software engineering and pave the way for further research in this area.
C1 [Tang, Yutian] Univ Glasgow, Glasgow City Q12 8QQ, Scotland.
   [Liu, Zhijie] ShanghaiTech Univ, Shanghai 201210, Peoples R China.
   [Zhou, Zhichao; Luo, Xiapu] Hong Kong Polytech Univ, Dept Comp, Hong Kong, Peoples R China.
C3 University of Glasgow; ShanghaiTech University; Hong Kong Polytechnic
   University
RP Tang, YT (corresponding author), Univ Glasgow, Glasgow City Q12 8QQ, Scotland.
EM yutian.tang@glasgow.ac.uk
OI Tang, Yutian/0000-0001-5677-4564
FU Hong Kong RGC Project
FX No Statement Available
CR Alon U., 2019, Structural language models for any-code generation, P1
   Arcuri A, 2022, ACM T SOFTW ENG METH, V31, DOI 10.1145/3477271
   Artetxe M, 2022, Arxiv, DOI arXiv:2205.11726
   Ayewah N, 2008, IEEE SOFTWARE, V25, P22, DOI 10.1109/MS.2008.130
   bignerdranch, Replacing myself: Writing unit tests with ChatGPT
   Braione P, 2017, PROCEEDINGS OF THE 26TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA'17), P90, DOI 10.1145/3092703.3092715
   Brants T., 2007, Proc. EMNLP-CoNLL, P858
   Brown T. B., 2020, P 34 INT C NEURAL IN, P1
   Bui NDQ, 2021, PROC INT CONF SOFTW, P1186, DOI 10.1109/ICSE43902.2021.00109
   Cai XY, 2023, IEEE T MULTIMEDIA, V25, P845, DOI 10.1109/TMM.2021.3132724
   Carlini N, 2021, PROCEEDINGS OF THE 30TH USENIX SECURITY SYMPOSIUM, P2633
   checkstyle, CheckStyle
   Chen M., 2021, arXiv, DOI DOI 10.48550/ARXIV.2107.03374
   Cho KYHY, 2014, Arxiv, DOI [arXiv:1406.1078, 10.48550/arXiv.1406.1078]
   Copilot G., Your AI pair programmer
   Daka E, 2017, PROCEEDINGS OF THE 26TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA'17), P57, DOI 10.1145/3092703.3092727
   Dantas C. E. C., 2021, arXiv
   Defects4J, Defects4J: A database of real faults and an experimental infrastructure to enable controlled experiments in software engineering research
   Deng YL, 2023, PROCEEDINGS OF THE 32ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, ISSTA 2023, P423, DOI 10.1145/3597926.3598067
   Devlin J, 2019, Arxiv, DOI arXiv:1810.04805
   Dong Z, 2020, PROC INT CONF SOFTW, P481, DOI 10.1145/3377811.3380402
   Peters ME, 2018, Arxiv, DOI arXiv:1802.05365
   evosuite, EvoSuite: Automatic test suite generation for Java
   Fraser G, 2011, P 19 ACM SIGSOFT S 1, P416, DOI 10.1145/2025113.2025179
   Fraser G, 2013, IEEE T SOFTWARE ENG, V39, P276, DOI 10.1109/TSE.2012.14
   Gay G, 2017, LECT NOTES COMPUT SC, V10452, P65, DOI 10.1007/978-3-319-66299-2_5
   github, Google Java style guide
   github, Spotbugs
   github, Writing unit test cases with ChatGPT
   Grano G, 2021, IEEE T SOFTWARE ENG, V47, P2332, DOI 10.1109/TSE.2019.2946773
   Haiduc S., 2010, 2010 32nd International Conference on Software Engineering (ICSE), P223, DOI 10.1145/1810295.1810335
   Harman M, 2012, ACM COMPUT SURV, V45, DOI 10.1145/2379776.2379787
   Hu X, 2018, INT C PROGRAM COMPRE, P200, DOI 10.1145/3196321.3196334
   jacoco, 2023, JaCoCo-Java Code Coverage Library
   Jahangirova G, 2021, IEEE T SOFTWARE ENG, V47, P1708, DOI 10.1109/TSE.2019.2934409
   jetbrains, Intellij idea-the leading java and kotlin ide
   Khashabi D, 2020, Arxiv, DOI arXiv:2005.00700
   Lan ZZ, 2020, Arxiv, DOI [arXiv:1909.11942, DOI 10.48550/ARXIV.1909.11942]
   Lemieux C, 2023, PROC INT CONF SOFTW, P919, DOI 10.1109/ICSE48619.2023.00085
   Li Z, 2007, IEEE T SOFTWARE ENG, V33, P225, DOI 10.1109/TSE.2007.38
   Lin Y, 2021, PROCEEDINGS OF THE 29TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '21), P1068, DOI 10.1145/3468264.3468619
   Martin-Lopez A, 2021, ISSTA '21: PROCEEDINGS OF THE 30TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P682, DOI 10.1145/3460319.3469082
   McBurney PW, 2016, IEEE T SOFTWARE ENG, V42, P103, DOI 10.1109/TSE.2015.2465386
   McBurney Paul W, 2014, P 22 INT C PROGRAM C, P279
   Miller W., 1976, IEEE Transactions on Software Engineering, VSE-2, P223, DOI 10.1109/TSE.1976.233818
   Nie PY, 2023, Arxiv, DOI arXiv:2302.10166
   openai, ChatGPT-Release Notes
   openai, ChatGPT: Optimizing language models for dialogue
   oracle, Code conventions for the Java programming language
   Ouyang L., 2022, arXiv
   P. S. C. Analyzer, Pmd
   Panichella A., 2015, P IEEE 8 INT C SOFTW, P1
   Panichella A, 2018, IEEE T SOFTWARE ENG, V44, P122, DOI 10.1109/TSE.2017.2663435
   Pilault J, 2020, PROCEEDINGS OF THE 2020 CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING (EMNLP), P9308
   Poesia G., 2022, P INT C LEARN REPR I, P1
   Pugh B., Findbugs
   Radford, 2018, OPENAI BLOG
   Radford A., 2019, OpenAI blog, V1, P9
   Raffel C., 2022, J. Mach. Learn. Res., V21, P1
   Raffel C, 2020, J MACH LEARN RES, V21
   Rojas Jose Miguel, 2015, Search-Based Software Engineering. 7th International Symposium, SSBSE 2015. Proceedings: LNCS 9275, P93, DOI 10.1007/978-3-319-22183-0_7
   Roy D, 2020, IEEE INT CONF AUTOM, P287, DOI 10.1145/3324884.3416622
   Schäfer M, 2023, Arxiv, DOI [arXiv:2302.06527, 10.48550/arXiv.2302.06527]
   Shrestha Kavir, 2011, Proceedings 2011 IEEE Fourth International Conference on Software Testing, Verification and Validation (ICST 2011), P110, DOI 10.1109/ICST.2011.50
   Silva RA, 2017, INFORM SOFTWARE TECH, V81, P19, DOI 10.1016/j.infsof.2016.01.017
   sonarsource, Cognitive computing: A new way of measuring understandability
   spotbugs, Spotbug bug descriptions
   Svyatkovskiy A, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P1433, DOI 10.1145/3368089.3417058
   Terragni V, 2021, PROC IEEE ACM INT C, P85, DOI 10.1109/ICSE-Companion52605.2021.00042
   the-decoder, ChatGPT guide: Use these prompt strategies to maximize your results
   Tonella P., 2004, Software Engineering Notes, V29, P119, DOI 10.1145/1013886.1007528
   Tufano M, 2021, Arxiv, DOI arXiv:2009.05617
   Ul Haq F, 2021, ISSTA '21: PROCEEDINGS OF THE 30TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P91, DOI 10.1145/3460319.3464802
   Vargha A, 2000, J EDUC BEHAV STAT, V25, P101, DOI 10.3102/10769986025002101
   Vaswani A, 2017, ADV NEUR IN, V30
   Walcott K.R., 2006, P INT S SOFTW TEST A, P1, DOI DOI 10.1145/1146238.1146240
   Wang S, 2021, PROC INT CONF SOFTW, P1548, DOI 10.1109/ICSE43902.2021.00138
   Watson C, 2020, PROC INT CONF SOFTW, P1398, DOI 10.1145/3377811.3380429
   Xu X, 2017, PROCEEDINGS OF THE 2017 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE (GECCO'17), P1335, DOI 10.1145/3071178.3071184
   Yuan ZQ, 2023, Arxiv, DOI arXiv:2305.04207
   Yun Lin, 2020, ISSTA '20: Proceedings of the 29th ACM SIGSOFT International Symposium on Software Testing and Analysis, P440, DOI 10.1145/3395363.3397358
   Zhang J, 2020, PROC INT CONF SOFTW, P1385, DOI 10.1145/3377811.3380383
   Zhang YZ, 2020, 58TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (ACL 2020): SYSTEM DEMONSTRATIONS, P270
   Zhou ZC, 2022, IEEE INT CONF AUTOM, DOI 10.1145/3551349.3556902
   Zhu H, 1997, ACM COMPUT SURV, V29, P366, DOI 10.1145/267580.267590
NR 85
TC 0
Z9 0
U1 0
U2 0
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUN
PY 2024
VL 50
IS 6
BP 1340
EP 1359
DI 10.1109/TSE.2024.3382365
PG 20
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA UL2G2
UT WOS:001248142900017
OA Green Submitted
DA 2024-08-05
ER

PT J
AU Ding, ZJ
   Xu, YH
   Feng, BB
   Jiang, CJ
AF Ding, Zhijun
   Xu, Yuehao
   Feng, Binbin
   Jiang, Changjun
TI Microservice Extraction Based on a Comprehensive Evaluation of Logical
   Independence and Performance
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Microservice architectures; Feature extraction; Costs; Data mining;
   Architecture; Data transfer; Business; Microservices extraction;
   monolith decomposition; garbage collection; performance evaluation
AB Monolithic architectures are becoming increasingly difficult to cope with complex applications, and microservice architectures, which offer flexibility and logical independence in development and maintenance, are the new choice for companies and developers. Migrating a legacy monolithic architecture application to a microservice architecture rather than building it from scratch is considered an easy way to use it. To ensure that the migrated microservice applications can take advantage of their benefits, we need to propose a reasonable and effective microservice extraction method. Considering the single responsibility principle in the microservice design principle, most existing microservice extraction methods only pursue the high logical independence of the extraction results and pay little attention to whether the extraction results have good performance. Applications need to perform well, and studies have shown that poor microservice extraction schemes can negatively impact the performance of the migrated application. As a result, when extracting, we should also consider the performance of the results. A few studies consider the performance of extraction results, but only in terms of a few factors affecting performance, such as network overhead, rather than considering all factors affecting performance comprehensively, which leads to an inaccurate evaluation of performance. Therefore, oriented toward the most widely used managed languages today, we propose an effective Microservice Extraction method based on a Comprehensive Evaluation of logical independence and performance (MECE). Firstly, we propose a workflow-based approach to evaluate the performance of microservice extraction results by considering multiple influencing factors, focusing on the management cost ignored in existing studies, and designing an effective management cost evaluation model. After that, we propose a meta-heuristic search-based algorithm to obtain feasible microservice extraction results. In experiments based on actual deployments, the extraction results of the MECE method obtained a performance improvement of up to 46.15% without significant loss of logical independence compared to existing methods, which verifies the effectiveness of the method.
C1 [Ding, Zhijun; Xu, Yuehao; Feng, Binbin; Jiang, Changjun] Tongji Univ, Key Lab Embedded Syst & Serv Comp, Minist Educ, Shanghai 201804, Peoples R China.
   [Ding, Zhijun; Xu, Yuehao; Feng, Binbin; Jiang, Changjun] Tongji Univ, Dept Comp Sci & Technol, Shanghai 201804, Peoples R China.
C3 Tongji University; Tongji University
RP Ding, ZJ (corresponding author), Tongji Univ, Key Lab Embedded Syst & Serv Comp, Minist Educ, Shanghai 201804, Peoples R China.; Ding, ZJ (corresponding author), Tongji Univ, Dept Comp Sci & Technol, Shanghai 201804, Peoples R China.
EM dingzj@tongji.edu.cn; xuyh@tongji.edu.cn; bining@tongji.edu.cn;
   cjjiang@tongji.edu.cn
RI Feng, Binbin/HDM-6515-2022
OI Feng, Binbin/0000-0002-9134-3484; Xu, Yuehao/0000-0003-4172-8084
FU National Natural Science Foundation of China
FX No Statement Available
CR Abdullah M, 2020, IEEE T NETW SERV MAN, V17, P2052, DOI 10.1109/TNSM.2020.3033025
   Abdullah M, 2019, J SYST SOFTWARE, V151, P243, DOI 10.1016/j.jss.2019.02.031
   Agarwal S, 2021, 2021 IEEE INTERNATIONAL CONFERENCE ON WEB SERVICES, ICWS 2021, P758, DOI 10.1109/ICWS53863.2021.00104
   Al-Debagy O, 2021, SCALABLE COMPUT-PRAC, V22, P39, DOI 10.12694/scpe.v22i1.1836
   [Anonymous], 2023, Prometheus - Monitoring system time series database
   [Anonymous], HOTSPOT VIRTUAL MACH
   Assunçao WKG, 2021, 2021 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2021), P377, DOI 10.1109/SANER50967.2021.00042
   Basetti V, 2018, SOFT COMPUT, V22, P7157, DOI 10.1007/s00500-017-2715-3
   Brito M, 2021, 36TH ANNUAL ACM SYMPOSIUM ON APPLIED COMPUTING, SAC 2021, P1409, DOI 10.1145/3412841.3442016
   Cai ZX, 2022, INT SYM PERFORM ANAL, P46, DOI 10.1109/ISPASS55109.2022.00005
   Cao T, 2012, CONF PROC INT SYMP C, P225
   Desai U, 2021, AAAI CONF ARTIF INTE, V35, P72
   Dong XB, 2020, FRONT COMPUT SCI-CHI, V14, P241, DOI 10.1007/s11704-019-8208-z
   Dragoni N., 2017, Present and Ulterior Software Engineering, P195, DOI DOI 10.1007/978-3-319-67425-4_12
   Du SY, 2020, MULTIMED TOOLS APPL, V79, P4619, DOI 10.1007/s11042-019-08142-7
   Fritzsch J, 2019, PROC IEEE INT CONF S, P481, DOI 10.1109/ICSME.2019.00081
   Gao SC, 2021, IEEE T SYST MAN CY-S, V51, P3954, DOI 10.1109/TSMC.2019.2956121
   Gidra L, 2013, ACM SIGPLAN NOTICES, V48, P229, DOI 10.1145/2499368.2451142
   github.com, JMX exporter
   Goncalves N, 2021, 2021 IEEE 18TH INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE COMPANION (ICSA-C), P54, DOI 10.1109/ICSA-C52384.2021.00015
   Grgic H, 2018, 2018 41ST INTERNATIONAL CONVENTION ON INFORMATION AND COMMUNICATION TECHNOLOGY, ELECTRONICS AND MICROELECTRONICS (MIPRO), P1539, DOI 10.23919/MIPRO.2018.8400277
   Ha J., 2008, ARM NEW YORK US IBM
   Hoff T., 2015, Deep lessons from Google and eBay on building ecosystems of microservices.
   instagram-engineering.com, Open-sourcing a 10x reduction in Apache Cassandra tail latency
   jetbrains.com, Microservices-The State of Developer Ecosystem in 2021 Infographic
   Jin WX, 2021, IEEE T SOFTWARE ENG, V47, P987, DOI 10.1109/TSE.2019.2910531
   Jin WX, 2018, 2018 IEEE INTERNATIONAL CONFERENCE ON WEB SERVICES (IEEE ICWS 2018), P211, DOI 10.1109/ICWS.2018.00034
   Kalia AK, 2021, PROCEEDINGS OF THE 29TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '21), P1214, DOI 10.1145/3468264.3473915
   Kalia AK, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P1606, DOI 10.1145/3368089.3417933
   Klock S, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE (ICSA 2017), P11, DOI 10.1109/ICSA.2017.38
   Li HY, 2018, 9TH ASIA-PACIFIC SYSTEMS WORKSHOP 2018 (APSYS'18), DOI 10.1145/3265723.3265735
   linkedin.com, Eliminating Large JVM GC Pauses Caused by Background IO Traffic
   Lion D, 2022, PROCEEDINGS OF THE 2022 USENIX ANNUAL TECHNICAL CONFERENCE, P835
   Mauro T., 2015, Adopting microservices at netflix: Lessons for architectural design (accessed 01/2022)
   Mazlami G, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON WEB SERVICES (ICWS 2017), P524, DOI 10.1109/ICWS.2017.61
   Microystems S., 2006, Memory management in the Java hotspotTM virtual machine.
   Newman S., 2021, Building microservices
   Newman Sam, 2019, Monolith to Microservices: Evolutionary Patterns to Transform Your Monolith
   Portillo-Dominguez AO, 2014, INT SYMP PARA DISTR, P127, DOI 10.1109/ISPDC.2014.20
   Pufek P, 2019, 2019 42ND INTERNATIONAL CONVENTION ON INFORMATION AND COMMUNICATION TECHNOLOGY, ELECTRONICS AND MICROELECTRONICS (MIPRO), P1677, DOI [10.23919/MIPRO.2019.8756844, 10.23919/mipro.2019.8756844]
   Sagi O, 2018, WIRES DATA MIN KNOWL, V8, DOI 10.1002/widm.1249
   Santos N, 2020, IEEE 17TH INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE (ICSA 2020), P169, DOI 10.1109/ICSA47634.2020.00024
   Shahriyar Rifat., 2015, High Performance Reference Counting and Conservative Garbage Collection
   Sneed H. M., 2013, Softwareevolution: Erhaltung Und Fortschreibung Bestehender Softwaresysteme, V1st
   van Hoorn Andre, 2012, 3 JOINT WOSP SIPEW I, P247, DOI [DOI 10.1145/2188286.2188326, 10.1145/2188286.2188326]
   Xian F, 2008, SCI COMPUT PROGRAM, V70, P89, DOI 10.1016/j.scico.2007.07.008
   Yedida R, 2021, 2021 36TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING ASE 2021, P1141, DOI 10.1109/ASE51524.2021.9678704
   Yuyang Wei, 2020, Internetware'20: 12th Asia-Pacific Symposium on Internetware, P21, DOI 10.1145/3457913.3457939
   Zhang JQ, 2009, IEEE T EVOLUT COMPUT, V13, P945, DOI 10.1109/TEVC.2009.2014613
   Zhou X, 2023, J SYST SOFTWARE, V195, DOI 10.1016/j.jss.2022.111521
NR 50
TC 0
Z9 0
U1 4
U2 4
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAY
PY 2024
VL 50
IS 5
BP 1244
EP 1263
DI 10.1109/TSE.2024.3380194
PG 20
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA QX5T5
UT WOS:001224187300007
DA 2024-08-05
ER

PT J
AU Zhou, ZC
   Zhou, YM
   Fang, CR
   Chen, ZY
   Luo, XP
   He, JZ
   Tang, YT
AF Zhou, Zhichao
   Zhou, Yuming
   Fang, Chunrong
   Chen, Zhenyu
   Luo, Xiapu
   He, Jingzhu
   Tang, Yutian
TI Coverage Goal Selector for Combining Multiple Criteria in Search-Based
   Unit Test Generation
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Genetic algorithms; Test pattern generators; Correlation; Optimization;
   Java; Software testing; Diversity reception; SBST; software testing;
   test generation
ID ALGORITHMS
AB Unit testing is critical to the software development process, ensuring the correctness of basic programming units in a program (e.g., a method). Search-based software testing (SBST) is an automated approach to generating test cases. SBST generates test cases with genetic algorithms by specifying the coverage criterion (e.g., branch coverage). However, a good test suite must have different properties, which cannot be captured using an individual coverage criterion. Therefore, the state-of-the-art approach combines multiple criteria to generate test cases. Since combining multiple coverage criteria brings multiple objectives for optimization, it hurts the test suites' coverage for certain criteria compared with using the single criterion. To cope with this problem, we propose a novel approach named <bold>smart selection</bold>. Based on the coverage correlations among criteria and the subsumption relationships among coverage goals, smart selection selects a subset of coverage goals to reduce the number of optimization objectives and avoid missing any properties of all criteria. We conduct experiments to evaluate smart selection on 400 Java classes with three state-of-the-art genetic algorithms under the 2-minute budget. On average, smart selection outperforms combining all goals on 65.1% of the classes having significant differences between the two approaches. Secondly, we conduct experiments to verify our assumptions about coverage criteria relationships. Furthermore, we assess the coverage performance of smart selection under varying budgets of 5, 8, and 10 minutes and explore its effect on bug detection, confirming the advantage of smart selection over combining all goals.
C1 [Zhou, Zhichao; He, Jingzhu] ShanghaiTech Univ, Sch Informat Sci & Technol, Shanghai 201210, Peoples R China.
   [Zhou, Yuming; Fang, Chunrong; Chen, Zhenyu] Nanjing Univ, State Key Lab Novel Software Technol, Nanjing 210008, Peoples R China.
   [Luo, Xiapu] Hong Kong Polytech Univ, Hong Kong 999077, Peoples R China.
   [Tang, Yutian] Univ Glasgow, Glasgow G12 8QQ, Scotland.
C3 ShanghaiTech University; Nanjing University; Hong Kong Polytechnic
   University; University of Glasgow
RP Tang, YT (corresponding author), Univ Glasgow, Glasgow G12 8QQ, Scotland.
EM yutian.tang@glasgow.ac.uk
RI Fang, Chunrong/GPW-9872-2022
OI Fang, Chunrong/0000-0002-9930-7111; Tang, Yutian/0000-0001-5677-4564;
   Zhou, Zhichao/0000-0002-4543-262X; He, Jingzhu/0009-0005-9448-5022;
   Chen, Zhenyu/0000-0002-9592-7022
FU National Natural Science Foundation of China
FX No Statement Available
CR Apache Software Foundation, 2006, Hadoop
   Apache Software Foundation, 2006, Hadoop's compare method
   Arcuri A, 2022, ACM T SOFTW ENG METH, V31, DOI 10.1145/3477271
   Arcuri A, 2018, IEEE INT CONF SOFTW, P394, DOI 10.1109/ICST.2018.00046
   Arcuri A, 2014, SOFTW TEST VERIF REL, V24, P219, DOI 10.1002/stvr.1486
   Arcuri A, 2012, IEEE T SOFTWARE ENG, V38, P258, DOI 10.1109/TSE.2011.121
   Barros M., 2015, Based Software Engineering, P93
   Benesty J, 2009, Noise Reduction in Speech Processing, V2, P1, DOI [DOI 10.1007/978-3-642-00296-05, 10.1109/5.771073, DOI 10.1007/978-3-642-00296-0_5]
   Braione P, 2017, PROCEEDINGS OF THE 26TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA'17), P90, DOI 10.1145/3092703.3092715
   Brockhoff D, 2007, GECCO 2007: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOL 1 AND 2, P765
   Campos J, 2019, 2019 IEEE/ACM 12TH INTERNATIONAL WORKSHOP ON SEARCH-BASED SOFTWARE TESTING (SBST 2019), P29, DOI 10.1109/SBST.2019.00017
   Campos J, 2018, INFORM SOFTWARE TECH, V104, P207, DOI 10.1016/j.infsof.2018.08.010
   Castelein J, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1220, DOI 10.1145/3180155.3180202
   Daka E, 2017, PROCEEDINGS OF THE 26TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA'17), P57, DOI 10.1145/3092703.3092727
   Deb K, 2014, Search methodologies, DOI DOI 10.1007/978-1-4614-6940-7_15
   docs.scipy.org, scipy.stats.pearsonr-scipy v1.11.1 manual
   Dong Z, 2020, PROC INT CONF SOFTW, P481, DOI 10.1145/3377811.3380402
   EvoSuite, 2023, Mutation operators in EvoSuite
   Fraser G, 2011, P 19 ACM SIGSOFT S 1, P416, DOI 10.1145/2025113.2025179
   Fraser G, 2015, EMPIR SOFTW ENG, V20, P783, DOI 10.1007/s10664-013-9299-z
   Fraser G, 2013, IEEE T SOFTWARE ENG, V39, P276, DOI 10.1109/TSE.2012.14
   G. maintainers, 2019, Bug: Gson-13
   Gambi A, 2019, PROCEEDINGS OF THE 28TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA '19), P318, DOI 10.1145/3293882.3330566
   Gay G, 2017, LECT NOTES COMPUT SC, V10452, P65, DOI 10.1007/978-3-319-66299-2_5
   Gay G, 2017, IEEE INT CONF SOFTW, P345, DOI 10.1109/ICST.2017.38
   Gheyi R, 2021, INFORM SOFTWARE TECH, V132, DOI 10.1016/j.infsof.2020.106496
   Gligoric M, 2015, ACM T SOFTW ENG METH, V24, DOI 10.1145/2660767
   Grano G, 2021, IEEE T SOFTWARE ENG, V47, P2332, DOI 10.1109/TSE.2019.2946773
   Guimaraes MA, 2020, IEEE INT CONF SOFTW, P198, DOI 10.1109/ICST46399.2020.00029
   Jia Y, 2008, EIGHTH IEEE INTERNATIONAL WORKING CONFERENCE ON SOURCE CODE ANALYSIS AND MANIPULATION, PROCEEDINGS, P249, DOI 10.1109/SCAM.2008.36
   Jia Y, 2011, IEEE T SOFTWARE ENG, V37, P649, DOI 10.1109/TSE.2010.62
   Just R., 2012, 2012 IEEE Fifth International Conference on Software Testing, Verification and Validation (ICST 2012), P720, DOI 10.1109/ICST.2012.162
   Just R., 2019, Defects4J-A collection of reproducible bugs and a supporting infrastructure with the goal of advancing software engineering research
   Kendall MG, 1938, BIOMETRIKA, V30, P81, DOI 10.2307/2332226
   Knowles JD, 2001, LECT NOTES COMPUT SC, V1993, P269
   Li Z, 2007, IEEE T SOFTWARE ENG, V33, P225, DOI 10.1109/TSE.2007.38
   Lin Y, 2021, PROCEEDINGS OF THE 29TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '21), P1068, DOI 10.1145/3468264.3468619
   Martin-Lopez A, 2021, ISSTA '21: PROCEEDINGS OF THE 30TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P682, DOI 10.1145/3460319.3469082
   McMinn P, 2004, SOFTW TEST VERIF REL, V14, P105, DOI 10.1002/stvr.294
   Miller W., 1976, IEEE Transactions on Software Engineering, VSE-2, P223, DOI 10.1109/TSE.1976.233818
   Mresa E. S., 1999, Software Testing, Verification and Reliability, V9, P205, DOI 10.1002/(SICI)1099-1689(199912)9:4<205::AID-STVR186>3.0.CO;2-X
   Offutt A. J., 1996, ACM Transactions on Software Engineering and Methodology, V5, P99, DOI 10.1145/227607.227610
   Panichella A., 2015, PROC IEEE 8 INT C SO, P1
   Panichella A., 2020, P IEEE ACM 42 INT C, P549, DOI DOI 10.1145/3387940.3392266
   Panichella A, 2018, IEEE T SOFTWARE ENG, V44, P122, DOI 10.1109/TSE.2017.2663435
   Petrovic G, 2021, PROC INT CONF SOFTW, P910, DOI 10.1109/ICSE43902.2021.00087
   Roy D, 2020, IEEE INT CONF AUTOM, P287, DOI 10.1145/3324884.3416622
   Sahin O, 2021, ENG SCI TECHNOL, V24, P806, DOI 10.1016/j.jestch.2020.12.011
   Salahirad A, 2019, SOFTW TEST VERIF REL, V29, DOI 10.1002/stvr.1701
   Seshadri A., 2006, MATLAB Cent, V182, P182
   Shamshiri S, 2015, IEEE INT CONF AUTOM, P201, DOI 10.1109/ASE.2015.86
   Silva RA, 2017, INFORM SOFTWARE TECH, V81, P19, DOI 10.1016/j.infsof.2016.01.017
   Souza B, 2020, IEEE INT CONF AUTOM, P1388, DOI 10.1145/3324884.3418921
   Tang YT, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P914, DOI 10.1145/3368089.3409702
   Tonella P., 2004, Software Engineering Notes, V29, P119, DOI 10.1145/1013886.1007528
   Ul Haq F, 2021, ISSTA '21: PROCEEDINGS OF THE 30TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P91, DOI 10.1145/3460319.3464802
   Vargha A, 2000, J EDUC BEHAV STAT, V25, P101, DOI 10.3102/10769986025002101
   Vogl S, 2021, 2021 IEEE/ACM 14TH INTERNATIONAL WORKSHOP ON SEARCH-BASED SOFTWARE TESTING (SBST 2021), P28, DOI 10.1109/SBST52555.2021.00012
   Walcott K. R., 2006, PROC INT S SOFTW TES, P1
   Wang S, 2021, PROC INT CONF SOFTW, P1548, DOI 10.1109/ICSE43902.2021.00138
   Xu X, 2017, PROCEEDINGS OF THE 2017 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE (GECCO'17), P1335, DOI 10.1145/3071178.3071184
   Yun Lin, 2020, ISSTA '20: Proceedings of the 29th ACM SIGSOFT International Symposium on Software Testing and Analysis, P440, DOI 10.1145/3395363.3397358
   Zhou ZC, 2022, IEEE INT CONF AUTOM, DOI 10.1145/3551349.3556902
NR 63
TC 0
Z9 0
U1 1
U2 1
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD APR
PY 2024
VL 50
IS 4
BP 854
EP 883
DI 10.1109/TSE.2024.3366613
PG 30
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA OC2K3
UT WOS:001204993400016
OA Green Submitted
DA 2024-08-05
ER

PT J
AU Zhang, MX
   Liu, HX
   Chen, CY
   Gao, GY
   Li, H
   Zhao, J
AF Zhang, Mengxi
   Liu, Huaxiao
   Chen, Chunyang
   Gao, Guangyong
   Li, Han
   Zhao, Jian
TI AccessFixer: Enhancing GUI Accessibility for Low Vision Users With R-GCN
   Model
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Graphical user interfaces; Color; Image color analysis; Internet;
   Guidelines; Electronic mail; Visualization; GUI; accessibility;
   relational-graph convolutional neural networks; cooperative coevolution
AB The Graphical User Interface (GUI) plays a critical role in the interaction between users and mobile applications (apps), aiming at facilitating the operation process. However, due to the variety of functions and non-standardized design, GUIs might have many accessibility issues, like the size of components being too small or their intervals being narrow. These issues would hinder the operation of low vision users, preventing them from obtaining information accurately and conveniently. Although several technologies and methods have been proposed to address these issues, they are typically confined to issue identification, leaving the resolution in the hands of developers. Moreover, it can be challenging to ensure that the color, size, and interval of the fixed GUIs are appropriately compared to the original ones. In this work, we propose a novel approach named AccessFixer (Accessibility Issues Fixing Method), which utilizes the Relational-Graph Convolutional Neural Network (R-GCN) to simultaneously fix three kinds of accessibility issues, including small sizes, narrow intervals, and low color contrast in GUIs. With AccessFixer, the fixed GUIs would have a consistent color palette, uniform intervals, and adequate size changes achieved through coordinated adjustments to the attributes of related components. Our experiments demonstrate the effectiveness and usefulness of AccessFixer in fixing GUI accessibility issues. After fixing 30 real-world apps, our approach solves an average of 81.2% of their accessibility issues. Compared with the baseline tool that can only fix size-related issues, AccessFixer not only fixes both the interval and color contrast of components, but also ensures that no new issues arise in the fixed results. Also, we apply AccessFixer to 10 open-source apps by submitting the fixed results with pull requests (PRs) on GitHub. The results demonstrate that developers approve of our submitted fixed GUIs, with 8 PRs being merged or under fixing. A user study examines that low vision users host a positive attitude toward the GUIs fixed by our method.
C1 [Zhang, Mengxi; Liu, Huaxiao; Gao, Guangyong; Li, Han] Jilin Univ, Coll Comp Sci & Technol, Jilin 130012, Peoples R China.
   [Zhang, Mengxi; Liu, Huaxiao; Gao, Guangyong; Li, Han] Jilin Univ, Key Lab Symbol Computat & Knowledge Engn, Minist Educ, Jilin 130012, Peoples R China.
   [Chen, Chunyang] Monash Univ, Fac Informat Technol, Clayton, Vic 3800, Australia.
   [Zhao, Jian] Changchun Univ, Dept Comp Sci & Technol, Changchun 130012, Peoples R China.
C3 Jilin University; Jilin University; Monash University; Changchun
   University
RP Liu, HX (corresponding author), Jilin Univ, Coll Comp Sci & Technol, Jilin 130012, Peoples R China.; Liu, HX (corresponding author), Jilin Univ, Key Lab Symbol Computat & Knowledge Engn, Minist Educ, Jilin 130012, Peoples R China.
EM liuhuaxiao@jlu.edu.cn; chunyang.chen@monash.edu; zhaojian@ccu.edu.cn
OI zhang, mengxi/0000-0003-4380-794X; Zhao, Jian/0000-0003-3265-6461; LI,
   HAN/0000-0002-1533-5394; liu, huaxiao/0000-0002-8151-1413; Chen,
   Chunyang/0000-0003-2011-9618
FU Jilin Provincial Natural Science Foundation
FX No Statement Available
CR Airtest IDE, 2019, Airtest
   Alotaibi AS, 2021, 2021 36TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING ASE 2021, P730, DOI 10.1109/ASE51524.2021.9678625
   Alshayban A, 2020, PROC INT CONF SOFTW, P1323, DOI 10.1145/3377811.3380392
   Androguard, Welcome to Androguard's documentation!
   [Anonymous], 2012, Web content accessibility guidelines
   [Anonymous], 2021, Blindness and vision impairment
   Bajammal M, 2021, PROC INT CONF SOFTW, P1610, DOI 10.1109/ICSE43902.2021.00143
   Bracewell, 1986, FOURIER TRANSFORM IT, P267
   Chen JS, 2020, PROC INT CONF SOFTW, P322, DOI 10.1145/3377811.3380327
   Chen S, 2022, IEEE T SOFTWARE ENG, V48, P3954, DOI 10.1109/TSE.2021.3108162
   Codementor, 2022, Principles of User Interface Design
   Cruz C, 2018, IEEE SIGNAL PROC LET, V25, P1216, DOI 10.1109/LSP.2018.2850222
   Developer, 2016, App Crawler
   developer.android.google, 2020, Uiautomator
   Developers, 2015, Apple Accessibility Guidelines
   Developers, 2016, Graphical User Interface
   Eler MM, 2018, IEEE INT CONF SOFTW, P116, DOI 10.1109/ICST.2018.00021
   F-Droid, 2022, Free Open-Source App Repository
   GitHub, Accessibility test framework
   Google, 2022, Get Started With Accessibility Scanner
   Google, Google accessibility guidelines
   Google Play, Accessibility scanner
   Guo S, 2018, AAAI CONF ARTIF INTE, P4816
   Hao S, 2014, MOBISYS'14: PROCEEDINGS OF THE 12TH ANNUAL INTERNATIONAL CONFERENCE ON MOBILE SYSTEMS, APPLICATIONS, AND SERVICES, P204, DOI 10.1145/2594368.2594390
   He KM, 2015, IEEE I CONF COMP VIS, P1026, DOI 10.1109/ICCV.2015.123
   He KM, 2016, PROC CVPR IEEE, P770, DOI 10.1109/CVPR.2016.90
   Kollias G, 2022, AAAI CONF ARTIF INTE, P7211
   Lecun Y, 1998, P IEEE, V86, P2278, DOI 10.1109/5.726791
   Li Y, 2020, Arxiv, DOI arXiv:2001.05308
   Mehralian F, 2021, PROCEEDINGS OF THE 29TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '21), P107, DOI 10.1145/3468264.3468604
   Moran K, 2020, IEEE T SOFTWARE ENG, V46, P196, DOI 10.1109/TSE.2018.2844788
   Kipf TN, 2017, Arxiv, DOI arXiv:1609.02907
   National Eye Institute, 2022, About us
   National Eye Institute, 2022, Low vision
   Pechenizkiy M., 2021, P IEEE ACM INT C MAC, P1
   Romero A., 2018, INT C LEARN REPR, P2920, DOI DOI 10.48550/ARXIV.1710.10903
   Sanyal S., 2019, P IEEE ACM INT C LEA, P1
   Schlichtkrull M, 2018, LECT NOTES COMPUT SC, V10843, P593, DOI 10.1007/978-3-319-93417-4_38
   ScikitLearn, 2022, PolynomialRegression
   Statista, Google play store
   Tomlinson BJ, 2016, PROCEEDINGS OF THE 18TH INTERNATIONAL CONFERENCE ON HUMAN-COMPUTER INTERACTION WITH MOBILE DEVICES AND SERVICES (MOBILEHCI'16), P377, DOI 10.1145/2935334.2935390
   Vaibhav V, 2018, J PHYS A-MATH THEOR, V51, DOI 10.1088/1751-8121/aad9ab
   Vendome C, 2019, PROC IEEE INT CONF S, P41, DOI 10.1109/ICSME.2019.00014
   Wang Q, 2017, IEEE T KNOWL DATA EN, V29, P2724, DOI 10.1109/TKDE.2017.2754499
   Xie ML, 2022, PROCEEDINGS OF THE 30TH ACM JOINT MEETING EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, ESEC/FSE 2022, P332, DOI 10.1145/3540250.3549138
   Xu TL, 2020, LANCET PUBLIC HEALTH, V5, pE682, DOI 10.1016/S2468-2667(20)30254-1
   Xu TT, 2021, ISSTA '21: PROCEEDINGS OF THE 30TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P191, DOI 10.1145/3460319.3464830
   Yan Shunguo, 2016, IBM strengthens mobile app accessibility and usability
   Yang B., 2014, arXiv
   Zhang K, 2017, IEEE T IMAGE PROCESS, V26, P3142, DOI 10.1109/TIP.2017.2662206
   Zhang XY, 2017, PROCEEDINGS OF THE 2017 ACM SIGCHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS (CHI'17), P6024, DOI 10.1145/3025453.3025846
NR 51
TC 1
Z9 1
U1 5
U2 5
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD FEB
PY 2024
VL 50
IS 2
BP 173
EP 189
DI 10.1109/TSE.2023.3337421
PG 17
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA IP4I9
UT WOS:001167516600001
DA 2024-08-05
ER

PT J
AU Warnett, SJ
   Zdun, U
AF Warnett, Stephen John
   Zdun, Uwe
TI On the Understandability of MLOps System Architectures
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Pipelines; Unified modeling language; Task analysis; Software
   architecture; Computer architecture; Systems architecture; Machine
   learning; Controlled experiment; empirical software engineering;
   empirical study; distributed system modelling; distributed system
   architecture; understandability; machine learning; MLOps
ID NORMALITY; TESTS; UML
AB Machine Learning Operations (MLOps) is the practice of streamlining and optimising the machine learning (ML) workflow, from development to deployment, using DevOps (software development and IT operations) principles and ML-specific activities. Architectural descriptions of MLOps systems often consist of informal textual descriptions and informal graphical system diagrams that vary considerably in consistency, quality, detail, and content. Such descriptions only sometimes follow standards or schemata and may be hard to understand. We aimed to investigate informal textual descriptions and informal graphical MLOps system architecture representations and compare them with semi-formal MLOps system diagrams for those systems. We report on a controlled experiment with sixty-three participants investigating the understandability of MLOps system architecture descriptions based on informal and semi-formal representations. The results indicate that the understandability (quantified by task correctness) of MLOps system descriptions is significantly greater using supplementary semi-formal MLOps system diagrams, that using semi-formal MLOps system diagrams does not significantly increase task duration (and thus hinder understanding), and that task correctness is only significantly correlated with task duration when semi-formal MLOps system diagrams are provided.
C1 [Warnett, Stephen John; Zdun, Uwe] Univ Vienna, Fac Comp Sci, Res Grp Software Architecture, A-1090 Vienna, Austria.
   [Warnett, Stephen John] Univ Vienna, UniVie Doctoral Sch Comp Sci DoCS, Fac Comp Sci, A-1090 Vienna, Austria.
C3 University of Vienna; University of Vienna
RP Warnett, SJ (corresponding author), Univ Vienna, Fac Comp Sci, Res Grp Software Architecture, A-1090 Vienna, Austria.
EM stephen.warnett@univie.ac.at; uwe.zdun@univie.ac.at
RI Warnett, Stephen John/JZE-5861-2024
OI Warnett, Stephen John/0000-0003-0650-0981
FU FFG (Austrian Research Promotion Agency) projects AMMONIS
FX No Statement Available
CR Allodi L, 2020, EMPIR SOFTW ENG, V25, P1063, DOI 10.1007/s10664-019-09797-4
   Allodi L, 2017, LECT NOTES COMPUT SC, V10646, P23, DOI 10.1007/978-3-319-70004-5_2
   Amershi S, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE (ICSE-SEIP 2019), P291, DOI 10.1109/ICSE-SEIP.2019.00042
   ANDERSON TW, 1954, J AM STAT ASSOC, V49, P765, DOI 10.2307/2281537
   [Anonymous], LIBREOFFICE
   [Anonymous], 2003, Proceedings of the 7th International Conference on Empirical Assessment in Software Engineering
   Bachmann F., 2000, SOFTWARE ARCHITECTUR
   Bass L., 2015, DevOps: A software architect's perspective.
   BENJAMINI Y, 1995, J R STAT SOC B, V57, P289, DOI 10.1111/j.2517-6161.1995.tb02031.x
   Bonett DG, 2006, APPL PSYCH MEAS, V30, P432, DOI 10.1177/0146621605279551
   Bonferroni C. E., 1936, Pubblicazioni del R Istituto Superiore di Scienze Economiche e Commerciali di Firenze, V8, P3, DOI DOI 10.4135/9781412961288.N455
   BRAY JH, 1982, REV EDUC RES, V52, P340, DOI 10.3102/00346543052003340
   BROWN MB, 1974, J AM STAT ASSOC, V69, P364, DOI 10.2307/2285659
   Brunner E, 2000, BIOMETRICAL J, V42, P17, DOI 10.1002/(SICI)1521-4036(200001)42:1<17::AID-BIMJ17>3.0.CO;2-U
   Charness G, 2012, J ECON BEHAV ORGAN, V81, P1, DOI 10.1016/j.jebo.2011.08.009
   CLIFF N, 1993, PSYCHOL BULL, V114, P494, DOI 10.1037/0033-2909.114.3.494
   Cliff N, 1996, MULTIVAR BEHAV RES, V31, P331, DOI 10.1207/s15327906mbr3103_4
   Cook TD., 1979, QUASIEXPERIMENTATION
   Czepa C, 2020, IEEE T SOFTWARE ENG, V46, P100, DOI 10.1109/TSE.2018.2859926
   Czepa C, 2019, ACM T SOFTW ENG METH, V28, DOI 10.1145/3306608
   Delaney HD, 2002, PSYCHOL METHODS, V7, P485, DOI 10.1037//1082-989X.7.4.485
   DUNN OJ, 1961, J AM STAT ASSOC, V56, P52, DOI 10.2307/2282330
   Eden AH, 2003, PROC INT CONF SOFTW, P149, DOI 10.1109/ICSE.2003.1201196
   Falessi D, 2018, EMPIR SOFTW ENG, V23, P452, DOI 10.1007/s10664-017-9523-3
   France R, 1998, COMPUT STAND INTER, V19, P325, DOI 10.1016/S0920-5489(98)00020-8
   Haitzer Thomas, 2013, Software Architecture. 7th European Conference, ECSA 2013. Proceedings: LNCS 7584, P54, DOI 10.1007/978-3-642-39031-9_6
   Handcock Mark S, 2024, CRAN
   Haynes SN, 1995, PSYCHOL ASSESSMENT, V7, P238, DOI 10.1037/1040-3590.7.3.238
   Heijstek W, 2011, INT SYMP EMP SOFTWAR, P167, DOI 10.1109/ESEM.2011.25
   Hewage N, 2022, arXiv, DOI DOI 10.48550/ARXIV.2202.10169
   Hoisl B, 2014, 2014 9TH INTERNATIONAL CONFERENCE ON THE QUALITY OF INFORMATION AND COMMUNICATIONS TECHNOLOGY (QUATIC), P95, DOI 10.1109/QUATIC.2014.19
   Host M., 2000, Empirical Software Engineering, V5, P201, DOI 10.1023/A:1026586415054
   Hsu LA, 2004, PSYCHOL METHODS, V9, P183, DOI 10.1037/1082-989X.9.2.183
   Humble Jez, 2010, Continuous Delivery: Reliable software releases through Build, Test and Deployment Automation
   Jedlitschka A., 2008, Guide to advanced empirical software engineering, P201, DOI DOI 10.1007/978-1-84800-044-5_8
   Jolak R, 2020, EMPIR SOFTW ENG, V25, P4427, DOI 10.1007/s10664-020-09835-6
   Juristo N., 2013, Basics of Software Engineering Experimentation
   Kendall MG, 1938, BIOMETRIKA, V30, P81, DOI 10.2307/2332226
   Kitchenham BA, 2002, IEEE T SOFTWARE ENG, V28, P721, DOI 10.1109/TSE.2002.1027796
   Kitchenham B, 2017, EMPIR SOFTW ENG, V22, P579, DOI 10.1007/s10664-016-9437-5
   Kolmogorov A.N., 1933, Giornale dellIntituto Italiano degli Attuari, V4, P83, DOI DOI 10.12691/AJAMS-1-1-2
   Kreuzberger D, 2022, Arxiv, DOI [arXiv:2205.02302, DOI 10.48550/ARXIV.2205.02302]
   Kriens P, 2019, Arxiv, DOI arXiv:1906.10366
   KRUSKAL WH, 1952, J AM STAT ASSOC, V47, P583, DOI 10.1080/01621459.1952.10483441
   Labunets K, 2014, IEEE INT WORKS EMPIR, P28, DOI 10.1109/EmpiRE.2014.6890113
   Lakshmanan V., 2020, Machine learning design patterns
   Lavazza L., 2001, Software Engineering Notes, V26, P196, DOI 10.1145/503271.503236
   Levene H., 1960, Contrib Prob Stat., P278, DOI [DOI 10.1002/BIMJ.19630050119, 10.2307/2285659]
   Li JJ, 2000, COMPUT COMMUN, V23, P1169, DOI 10.1016/S0140-3664(99)00244-3
   LILLIEFORS HW, 1967, J AM STAT ASSOC, V62, P399, DOI 10.2307/2283970
   Makinen Sasu, 2021, 2021 IEEE/ACM 1st Workshop on AI Engineering - Software Engineering for AI (WAIN), P109, DOI 10.1109/WAIN52551.2021.00024
   OMG, 2017, Unified Modeling Language
   Paleyes A, 2023, ACM COMPUT SURV, V55, DOI 10.1145/3533378
   Paulweber P, 2021, J SYST SOFTWARE, V178, DOI 10.1016/j.jss.2021.110987
   Pearson K., 1895, P R SOC LONDON, V58, P240, DOI [10.1098/rspl.1895.0041, DOI 10.1098/RSPL.1895.0041]
   Pradella M, 2005, LECT NOTES COMPUT SC, V3530, P234
   R Core Team, 2023, A language and environment for statistical computing
   Rahman MS, 2019, Arxiv, DOI arXiv:1906.07154
   Razali N.M., 2011, J Stat Model Anal, V2, P21, DOI DOI 10.1515/BILE-2015-0008
   Rodano M, 2013, PROCEDIA COMPUT SCI, V20, P210, DOI 10.1016/j.procs.2013.09.263
   Rumpe B, 2011, SOFTW SYST MODEL, V10, P439, DOI 10.1007/s10270-011-0210-3
   Salman I, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P666, DOI 10.1109/ICSE.2015.82
   Schermann G., 2016, PREPRINT
   Sculley D, 2015, ADV NEUR IN, V28
   Shafranovich Y., 2005, RFC 4180
   Shahin M, 2019, EMPIR SOFTW ENG, V24, P1061, DOI 10.1007/s10664-018-9651-4
   SHAPIRO SS, 1965, BIOMETRIKA, V52, P591, DOI 10.2307/2333709
   Sharafi Z, 2013, CONF PROC INT SYMP C, P33, DOI 10.1109/ICPC.2013.6613831
   Shen ZQ, 2024, Arxiv, DOI [arXiv:1810.13306, DOI 10.48550/ARXIV.1810.13306]
   Siegmund J., 2012, Empirical Softw. Eng., V18, P1
   Solingen R., 2002, Goal question metric (GQM) approach, DOI [10.1002/0471028959.sof142, DOI 10.1002/0471028959.SOF142]
   SONI D, 1995, PROC INT CONF SOFTW, P196, DOI 10.1145/225014.225033
   Spearman C, 1904, AM J PSYCHOL, V15, P72, DOI 10.2307/1412159
   Stevanetic S., 2014, P WICSA COMP VOL WIC, P1
   Svahnberg M, 2008, ESEM'08: PROCEEDINGS OF THE 2008 ACM-IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, P288
   Tamburri DA, 2020, INT SYMP SYMB NUMERI, P17, DOI 10.1109/SYNASC51798.2020.00015
   Treveil Mark., 2020, Introducing MLOps: How to Scale Machine Learning in the Enterprise
   Völter M, 2010, IEEE SOFTWARE, V27, P56, DOI 10.1109/MS.2010.38
   Warnett Stephen John, 2024, Zenodo, DOI 10.5281/ZENODO.7752176
   Warnett SJ, 2022, IEEE 19TH INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE (ICSA 2022), P90, DOI 10.1109/ICSA53651.2022.00017
   Warnett SJ, 2022, COMPUTER, V55, P40, DOI 10.1109/MC.2021.3134800
   WELCH BL, 1947, BIOMETRIKA, V34, P28, DOI 10.2307/2332510
   Whittle J, 2002, AD TO DA RE, V1, P324
   WILCOXON F, 1946, J ECON ENTOMOL, V39, P269, DOI 10.1093/jee/39.2.269
   Wohlin C., 2012, Experimentation in Software Engineering, DOI [10.1007/978-3-642-29044-2., DOI 10.1007/978-3-642-29044-2]
   Zdun U, 2019, P IEEE I C SERV COMP, P141, DOI 10.1109/SCC.2019.00033
   Zimmerman DW, 2000, J GEN PSYCHOL, V127, P354, DOI 10.1080/00221300009598589
   Zöller MA, 2021, Arxiv, DOI [arXiv:1904.12054, 10.48550/arXiv.1904.12054, DOI 10.48550/ARXIV.1904.12054]
NR 88
TC 0
Z9 0
U1 3
U2 3
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAY
PY 2024
VL 50
IS 5
BP 1015
EP 1039
DI 10.1109/TSE.2024.3367488
PG 25
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA QX5T5
UT WOS:001224187300013
OA hybrid
DA 2024-08-05
ER

PT J
AU Arya, DM
   Guo, JLC
   Robillard, MP
AF Arya, Deeksha M.
   Guo, Jin L. C.
   Robillard, Martin P.
TI Properties and Styles of Software Technology Tutorials
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Tutorials; Software; Documentation; Task analysis; Java; Codes; Python;
   Software documentation; software tutorials; documentation design;
   tutorial properties; documentation search
ID FORMAL CONCEPT ANALYSIS; TOPIC DETECTION; DOCUMENTATION; STABILITY
AB A large number of tutorials for popular software development technologies are available online, and those about the same technology vary widely in their presentation. We studied the design of tutorials in the software documentation landscape for five popular programming languages: Java, C#, Python, Javascript, and Typescript. We investigated the extent to which tutorial pages, i.e. resources, differ and report statistics of variations in resource properties. We developed a framework for characterizing resources based on their distinguishing attributes, i.e. properties that vary widely for the resource, relative to other resources. Additionally, we propose that a resource can be represented by its resource style, i.e. the combination of its distinguishing attributes. We discuss three techniques for characterizing resources based on our framework, to capture notable and relevant content and presentation properties of tutorial pages. We apply these techniques on a data set of 2551 resources to validate that our framework identifies valid and interpretable styles. We contribute this framework for reasoning about the design of resources in the online software documentation landscape.
C1 [Arya, Deeksha M.; Guo, Jin L. C.] McGill Univ, Comp Sci, Montreal, PQ H3A 0G4, Canada.
   [Robillard, Martin P.] McGill Univ, Sch Comp Sci, Montreal, PQ H3A 0G4, Canada.
C3 McGill University; McGill University
RP Arya, DM (corresponding author), McGill Univ, Comp Sci, Montreal, PQ H3A 0G4, Canada.
EM deeksha.arya@mail.mcgill.ca; jguo@cs.mcgill.ca; robillard@acm.org
OI Guo, Jin L.C./0000-0003-1782-1545; Arya, Deeksha/0000-0002-3719-5011
FU Natural Sciences and Engineering Research Council of Canada (NSERC)
FX No Statement Available
CR Abdi H, 2007, Encyclopedia of Measurement and Statistics, DOI DOI 10.4135/9781412952644.N299
   Aghajani E, 2019, PROC INT CONF SOFTW, P1199, DOI 10.1109/ICSE.2019.00122
   Ajam G., 2021, CLEI Electron. J., V24
   AL-Msie'deen Ra'Fat, 2013, Safe and Secure Software Reuse. 13th International Conference on Software Reuse, ICSR 2013. Proceedings: LNCS 7925, P302, DOI 10.1007/978-3-642-38977-1_22
   Angelini G., 2018, P EUR AC C TECH COMM, P70
   [Anonymous], 2009, IEEE STD 1016-2009
   [Anonymous], 2011, P 2 INT WORKSHOP WEB
   Arya DM, 2023, EMPIR SOFTW ENG, V28, DOI 10.1007/s10664-022-10246-y
   Arya DM, 2022, IEEE SOFTWARE, V39, P106, DOI 10.1109/MS.2021.3090978
   Arya DM, 2020, EMPIR SOFTW ENG, V25, P4069, DOI 10.1007/s10664-020-09857-0
   Buchli F., 2003, Detecting software patterns using formal concept analysis
   Buse RPL, 2010, IEEE T SOFTWARE ENG, V36, P546, DOI 10.1109/TSE.2009.70
   Butler G, 1998, 1998 ASIA PACIFIC SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P94, DOI 10.1109/APSEC.1998.733596
   Butler Greg., 2000, ACM Comput. Surv, V32, P15
   Carbonnel J, 2017, ENASE: PROCEEDINGS OF THE 12TH INTERNATIONAL CONFERENCE ON EVALUATION OF NOVEL APPROACHES TO SOFTWARE ENGINEERING, P27, DOI 10.5220/0006276600270037
   Castellanos A, 2017, INFORM SYST, V66, P24, DOI 10.1016/j.is.2017.01.008
   Chatterjee P, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P382, DOI 10.1109/SANER.2017.7884638
   Chen SY, 2017, J THORAC DIS, V9, P1725, DOI 10.21037/jtd.2017.05.34
   Cigarrán JM, 2004, LECT NOTES ARTIF INT, V2961, P74
   Cigarrán J, 2016, EXPERT SYST APPL, V57, P21, DOI 10.1016/j.eswa.2016.03.011
   Dagenais B., 2010, P 18 INT S FDN SOFTW, P127
   Dagenais B, 2014, IEEE T SOFTWARE ENG, V40, P1126, DOI 10.1109/TSE.2014.2347969
   Dias SM, 2015, EXPERT SYST APPL, V42, P7084, DOI 10.1016/j.eswa.2015.04.044
   Earle R. H., 2015, P INT C DES COMM, P1
   Escobar-Avila J, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING EDUCATION AND TRAINING (ICSE-SEET), P170, DOI 10.1109/ICSE-SEET.2019.00026
   Fourney Adam., 2014, Proceedingsoftheextendedabstractsofthe32ndannualACMconference on Human factors in computing systems - CHI EA'14, P653, DOI DOI 10.1145/2559206
   Galasso-Carbonnel J., 2017, P INT C SOFTW ENG KN, P185
   Ganter B., 1999, Formal Concept Analysis-Mathematical Foundations
   Girden E.R., 1992, ANOVA: Repeated measures, DOI DOI 10.4135/9781412983419
   GODIN R, 1993, SIGPLAN NOTICES, V28, P394, DOI 10.1145/167962.165931
   Hanika T., 2018, arXiv
   Head A, 2020, PROCEEDINGS OF THE 2020 CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS (CHI'20), DOI 10.1145/3313831.3376798
   Hora A, 2021, IEEE WORK CONF MIN S, P317, DOI 10.1109/MSR52588.2021.00044
   Ignatov DI, 2015, COMM COM INF SC, V505, P42, DOI 10.1007/978-3-319-25485-2_3
   Inzunza Sergio, 2018, Trends and Advances in Information Systems and Technologies. Advances in Intelligent Systems and Computing (AISC 746), P229, DOI 10.1007/978-3-319-77712-2_22
   Jay N, 2008, LECT NOTES ARTIF INT, V4933, P258, DOI 10.1007/978-3-540-78137-0_19
   Jin XY, 2017, S VIS LANG HUM CEN C, P31, DOI 10.1109/VLHCC.2017.8103447
   JOHNSON RE, 1992, OOPSLA '92 CONFERENCE PROCEEDINGS: CONFERENCE ON OBJECT-ORIENTED PROGRAMMING SYSTEMS, LANGUAGES, AND APPLICATIONS, P63, DOI 10.1145/141937.141943
   Käki M, 2005, INTERACT COMPUT, V17, P187, DOI 10.1016/j.intcom.2005.01.001
   Kaki M., 2005, Proceedings of the SIGCHI Conference on Human Factors in Computing Systems, P131
   Karreman J, 2005, 2005 IEEE International Professional Communication Conference (IPCC), P328
   Kincaid P., 1975, DERIVATION NEW READA
   Kuznetsov S, 2007, LECT NOTES ARTIF INT, V4604, P241
   Kuznetsov SO, 2007, ANN MATH ARTIF INTEL, V49, P101, DOI 10.1007/s10472-007-9053-6
   Li HW, 2013, WORK CONF REVERSE EN, P142, DOI 10.1109/WCRE.2013.6671289
   Li JD, 2018, ACM COMPUT SURV, V50, DOI 10.1145/3136625
   Maalej W, 2013, IEEE T SOFTWARE ENG, V39, P1264, DOI 10.1109/TSE.2013.12
   Marquis P., 2020, Artificial Intelligence Algorithms, V2, P411
   Mehlenbacher B., 2003, HUM FAC ER, P527
   Meng M., 2020, P INT C DES COMM, P1
   Meng Michael, 2018, J. of Technical Writing and Communica- tion, V48, P295, DOI [DOI 10.1177/0047281617721853, 10.1177/0047281617721853, 10.1177/0047281617721853?journalCode=jtwa]
   Nassif M, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-020-09918-4
   Nenadic O, 2007, J STAT SOFTW, V20
   Phoha V, 1997, COMPUTER, V30, P97, DOI 10.1109/2.625327
   Pirolli P, 1999, PSYCHOL REV, V106, P643, DOI 10.1037/0033-295X.106.4.643
   Pirolli P, 2003, LECT NOTES ARTIF INT, V2702, P45
   Priss U, 2006, ANNU REV INFORM SCI, V40, P521, DOI 10.1002/aris.1440400120
   Procida D., Diataxis
   Rani P, 2021, IEEE INT WORK C SO, P165, DOI 10.1109/SCAM52516.2021.00028
   Ries R., 1990, IPCC 90. Communication Across the Sea: North American and European Practices. International Professional Communication Conference (Cat. No.90CH2888-6), P66, DOI 10.1109/IPCC.1990.111154
   Robillard MP, 2017, PROC IEEE INT CONF S, P479, DOI 10.1109/ICSME.2017.17
   Robillard MP, 2011, EMPIR SOFTW ENG, V16, P703, DOI 10.1007/s10664-010-9150-8
   Robillard MP, 2009, IEEE SOFTWARE, V26, P27, DOI 10.1109/MS.2009.193
   Roth C, 2008, LECT NOTES ARTIF INT, V4923, P240
   Seriai A.-D., 2013, 25 INT C SOFTWARE EN, P244
   Tang H, 2023, IEEE WORK CONF MIN S, P67, DOI 10.1109/MSR59073.2023.00023
   Tiarks R., 2014, P WORK C MIN SOFTW R, P272
   Tilley T., 2005, Formal Concept Analysis: Foundations and Applications
   Treude C, 2015, IEEE T SOFTWARE ENG, V41, P565, DOI 10.1109/TSE.2014.2387172
   Ummelen N., 1996, J. Tech. Writing Commun., V26, P475
   Valtchev P., 2004, P INT C FORM CONC AN
   Van Der Meij H, 2004, IEEE T PROF COMMUN, V47, P5, DOI 10.1109/TPC.2004.824292
   van der Meij H, 2014, COMPUT EDUC, V78, P150, DOI 10.1016/j.compedu.2014.06.003
   Ward R., 1993, P C ISS COMP SUPP DO
   Ying ATT, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P460, DOI 10.1145/2635868.2635877
NR 75
TC 0
Z9 0
U1 1
U2 1
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD FEB
PY 2024
VL 50
IS 2
BP 159
EP 172
DI 10.1109/TSE.2023.3332568
PG 14
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA IP4I9
UT WOS:001167516600008
DA 2024-08-05
ER

PT J
AU Qin, BQ
   Chen, YL
   Liu, HP
   Zhang, H
   Wen, QY
   Song, LH
   Zhang, YY
AF Qin, Boqin
   Chen, Yilun
   Liu, Haopeng
   Zhang, Hua
   Wen, Qiaoyan
   Song, Linhai
   Zhang, Yiying
TI Understanding and Detecting Real-World Safety Issues in Rust
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Rust; memory bug; concurrency bug; bug study; static bug detection
ID CONCURRENCY BUGS
AB Rust is a relatively new programming language designed for systems software development. Its objective is to combine the safety guarantees typically associated with high-level languages with the performance efficiency often found in executable programs implemented in low-level languages. The core design of Rust is a set of strict safety rules enforced through compile-time checks. However, to support more low-level controls, Rust also allows programmers to bypass its compiler checks by writing unsafe code. As the adoption of Rust grows in the development of safety-critical software, it becomes increasingly important to understand what safety issues may elude Rust's compiler checks and manifest in real Rust programs. In this paper, we conduct a comprehensive, empirical study of Rust safety issues by close, manual inspection of 70 memory bugs, 100 concurrency bugs, and 110 programming errors leading to unexpected execution panics from five open-source Rust projects, five widely-used Rust libraries, and two online security databases. Our study answers three important questions: what memory-safety issues real Rust programs have, what concurrency bugs Rust programmers make, and how unexpected panics in Rust programs are caused. Our study reveals interesting real-world Rust program behaviors and highlights new issues made by Rust programmers. Building upon the findings of our study, we design and implement five static detectors. After being applied to the studied Rust programs and another 12 selected Rust projects, our checkers pinpoint 96 previously unknown bugs and report a negligible number of false positives, confirming their effectiveness and the value of our empirical study.
C1 [Qin, Boqin] China Telecom Cloud Technol Co Ltd, Beijing 100083, Peoples R China.
   [Chen, Yilun] HoneycombData Inc, Santa Clara, CA 95054 USA.
   [Liu, Haopeng] Univ Chicago, Chicago 60637, IL USA.
   [Zhang, Hua; Wen, Qiaoyan] Beijing Univ Posts & Telecommun, Beijing 100876, Peoples R China.
   [Song, Linhai] Penn State Univ, State Coll, PA 16802 USA.
   [Zhang, Yiying] Univ Calif San Diego, San Diego, CA 92093 USA.
C3 University of Chicago; Beijing University of Posts & Telecommunications;
   Pennsylvania Commonwealth System of Higher Education (PCSHE);
   Pennsylvania State University; University of California System;
   University of California San Diego
RP Song, LH (corresponding author), Penn State Univ, State Coll, PA 16802 USA.; Zhang, YY (corresponding author), Univ Calif San Diego, San Diego, CA 92093 USA.
EM bobbqqin@gmail.com; chen2709@purdue.edu; haopeng.uc@gmail.com;
   zhanghua_288@bupt.edu.cn; wqy@bupt.edu.cn; songlh@ist.psu.edu;
   yiying@ucsd.edu
CR Amadeo R., Google is now writing low-level Android code in Rust
   [Anonymous], The Servo browser engine
   [Anonymous], A distributed transactional key-value database
   [Anonymous], The Redox operating system
   [Anonymous], CVE program mission
   [Anonymous], 2019, Rust empowering everyone to build reliable and efficient software
   [Anonymous], The Ethereum Project
   [Anonymous], Tock embedded operating system
   [Anonymous], STACK OVERFLOW DEVEL
   [Anonymous], Stratis: Easy to use local storage management for Linux
   [Anonymous], 2019, Rust versus C GCC fastest programs
   [Anonymous], Quantum
   [Anonymous], Secure and fast microVMs for serverless computing
   [Anonymous], STATE OCTOVERSE
   [Anonymous], Lint (software)
   Bae Y, 2021, PROCEEDINGS OF THE 28TH ACM SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES, SOSP 2021, P84, DOI 10.1145/3477132.3483570
   Baranowski M, 2018, LECT NOTES COMPUT SC, V11138, P528, DOI 10.1007/978-3-030-01090-4_32
   Barsky D., AWS' sponsorship of the Rust project
   Böhme M, 2017, CCS'17: PROCEEDINGS OF THE 2017 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P2329, DOI 10.1145/3133956.3134020
   Boos K., 2017, P 9 WORKSH PROGR LAN, P29
   Cadar C., 2008, KLEE: Unassisted and Automatic Generation of High-Coverage Tests for Complex Systems Programs
   Chew L, 2010, EUROSYS'10: PROCEEDINGS OF THE EUROSYS 2010 CONFERENCE, P307
   Chou A., 2001, Operating Systems Review, V35, P73, DOI 10.1145/502059.502042
   Chua Y. W., 2017, Appreciating Rust's memory safety guarantees
   Cimpanu C., Microsoft to explore using Rust
   Crossbeam, Tools for concurrent programming in Rust
   Cui M, 2023, ACM T SOFTW ENG METH, V32, DOI 10.1145/3542948
   Cui WD, 2018, PROCEEDINGS OF THE 13TH USENIX SYMPOSIUM ON OPERATING SYSTEMS DESIGN AND IMPLEMENTATION, P17
   Cutner Z, 2022, PPOPP'22: PROCEEDINGS OF THE 27TH ACM SIGPLAN SYMPOSIUM ON PRINCIPLES AND PRACTICE OF PARALLEL PROGRAMMING, P246, DOI 10.1145/3503221.3508404
   CVE, 2018, CVE-2018-1000810
   Dewey K, 2015, IEEE INT CONF AUTOM, P482, DOI 10.1109/ASE.2015.65
   Engler D., 2003, Operating Systems Review, V37, P237, DOI 10.1145/1165389.945468
   Erickson J., 2010, OSDI, P1, DOI 10.5555/1924943.1924954
   Evans AN, 2020, PROC INT CONF SOFTW, P246
   Flanagan C, 2004, ACM SIGPLAN NOTICES, V39, P256, DOI 10.1145/982962.964023
   Fulton KR, 2021, PROCEEDINGS OF THE SEVENTEENTH SYMPOSIUM ON USABLE PRIVACY AND SECURITY (SOUPS 2021), P597
   Gao Q, 2011, ACM SIGPLAN NOTICES, V46, P239, DOI 10.1145/1961296.1950394
   Gu R, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P426, DOI 10.1145/2786805.2786815
   Gunawi H. S., 2014, Proceedings of the ACM symposium on cloud computing, P1
   Huang J, 2016, PROC INT CONF SOFTW, P1097, DOI 10.1145/2884781.2884811
   Huang SY, 2019, PROC INT CONF SOFTW, P889, DOI 10.1109/ICSE.2019.00095
   IotEdge, IoT Edge security daemon
   Jin G., 2012, OSDI, P221
   Jin GL, 2012, ACM SIGPLAN NOTICES, V47, P77, DOI 10.1145/2345156.2254075
   Jin GL, 2011, PLDI 11: PROCEEDINGS OF THE 2011 ACM CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P389
   Jung R, 2020, P ACM PROGRAM LANG, V4, DOI 10.1145/3371109
   Jung R, 2018, P ACM PROGRAM LANG, V2, DOI 10.1145/3158154
   Kan SL, 2020, Arxiv, DOI arXiv:1804.07608
   Klabnik Steve, 2018, The Rust Programming Language
   Lattner C, 2004, INT SYM CODE GENER, P75, DOI 10.1109/cgo.2004.1281665
   Lazy-static, A macro for declaring lazily evaluated statics in Rust
   Lee G, 2021, PROCEEDINGS OF THE 30TH USENIX SECURITY SYMPOSIUM, P3559
   Leesatapornwongsa T, 2016, ACM SIGPLAN NOTICES, V51, P517, DOI 10.1145/2954679.2872374
   Levy A, 2017, PROCEEDINGS OF THE TWENTY-SIXTH ACM SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES (SOSP '17), P234, DOI 10.1145/3132747.3132786
   Li W, 2024, PROCEEDINGS OF THE 33RD ACM SIGPLAN INTERNATIONAL CONFERENCE ON COMPILER CONSTRUCTION, CC 2024, P60, DOI 10.1145/3640537.3641574
   Li ZH, 2022, LECT NOTES COMPUT SC, V13556, P680, DOI 10.1007/978-3-031-17143-7_33
   Li ZH, 2021, CCS '21: PROCEEDINGS OF THE 2021 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P2183, DOI 10.1145/3460120.3484541
   Lin ZY, 2015, IEEE INT CONF AUTOM, P178, DOI 10.1109/ASE.2015.87
   Liu HP, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P715, DOI 10.1145/2950290.2950309
   Liu PM, 2020, PROC INT CONF SOFTW, P234, DOI 10.1145/3377811.3380325
   Liu ZH, 2021, ASPLOS XXVI: TWENTY-SIXTH INTERNATIONAL CONFERENCE ON ARCHITECTURAL SUPPORT FOR PROGRAMMING LANGUAGES AND OPERATING SYSTEMS, P616, DOI 10.1145/3445814.3446756
   Lu LY, 2014, ACM T STORAGE, V10, DOI 10.1145/2560012
   Lu S, 2008, ACM SIGPLAN NOTICES, V43, P329, DOI 10.1145/1353536.1346323
   Lu S, 2006, ACM SIGPLAN NOTICES, V41, P37, DOI 10.1145/1168918.1168864
   Lucia Brandon, 2009, Proceedings of the 2009 42nd Annual IEEE/ACM International Symposium on Microarchitecture (MICRO 2009), P553, DOI 10.1145/1669112.1669181
   Martins R., 2016, Interior mutability in Rust, part 2: Thread safety
   Miri, An interpreter for Rust's mid-level intermediate representation
   MSRC, Why Rust for safe systems programming
   Ozdemir A., 2019, Unsafe in Rust: Syntactic patterns
   Ozdemir A., 2019, Unsafe in Rust: The abstraction safety contract and public escape
   Pearce DJ, 2021, ACM T PROGR LANG SYS, V43, DOI 10.1145/3443420
   Qin BQ, 2020, PROCEEDINGS OF THE 41ST ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION (PLDI '20), P763, DOI 10.1145/3385412.3386036
   Rand, A Rust library for random number generation
   Rayon, A data parallelism library for Rust
   Reed E., 2015, Technical report
   Rust RFC, 1211-mir
   Rust-book, 2019, Fearless Concurrency
   Rust-clippy, A bunch of lints to catch common mistakes and improve your Rust code
   RustSec, Security advisory database for Rust crates
   Savage S, 1997, ACM T COMPUT SYST, V15, P391, DOI 10.1145/269005.266641
   Shanker S., Safe concurrency with Rust
   Sun M., 2018, P DEF CON CHIN DEF C, P25
   Takashima Y, 2021, PROCEEDINGS OF THE 42ND ACM SIGPLAN INTERNATIONAL CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION (PLDI '21), P899, DOI 10.1145/3453483.3454084
   Threadpool, A very simple thread pool for parallel task execution
   Tu TF, 2019, TWENTY-FOURTH INTERNATIONAL CONFERENCE ON ARCHITECTURAL SUPPORT FOR PROGRAMMING LANGUAGES AND OPERATING SYSTEMS (ASPLOS XXIV), P865, DOI 10.1145/3297858.3304069
   Turon A., Fearless concurrency with Rust
   van Tonder R, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P151, DOI 10.1145/3180155.3180250
   Xu H, 2022, ACM T SOFTW ENG METH, V31, DOI 10.1145/3466642
   Xu J., 2016, P 2016 ACM SIGSAC C, P529, DOI DOI 10.1145/2976749.2978340
   Xu J, 2017, PROCEEDINGS OF THE 26TH USENIX SECURITY SYMPOSIUM (USENIX SECURITY '17), P17
   Xu Z., 2024, P IEEE ACM 46 INT C, P1
   Yu J, 2009, CONF PROC INT SYMP C, P325, DOI 10.1145/1555815.1555796
   Yu Yuan, 2005, P 20 ACM S OP SYST P, P221
   Zhang W, 2011, ACM SIGPLAN NOTICES, V46, P251, DOI 10.1145/1961296.1950395
   Zhang W, 2010, ACM SIGPLAN NOTICES, V45, P179, DOI 10.1145/1735971.1736041
NR 95
TC 0
Z9 0
U1 0
U2 0
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUN
PY 2024
VL 50
IS 6
BP 1306
EP 1324
DI 10.1109/TSE.2024.3380393
PG 19
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA UL2G2
UT WOS:001248142900011
DA 2024-08-05
ER

PT J
AU Carvalho, L
   Colanzi, TE
   Assunçao, WKG
   Garcia, A
   Pereira, JA
   Kalinowski, M
   de Mello, RM
   de Lima, MJ
   Lucena, C
AF Carvalho, Luiz
   Colanzi, Thelma Elita
   Assuncao, Wesley K. G.
   Garcia, Alessandro
   Pereira, Juliana Alves
   Kalinowski, Marcos
   de Mello, Rafael Maiani
   de Lima, Maria Julia
   Lucena, Carlos
TI On the Usefulness of Automatically Generated Microservice Architectures
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Microservice architectures; Aging; Computer architecture; Decision
   making; Codes; Source coding; Interviews; Microservice architecture;
   search-based software engineering; microservice identification; legacy
   system; qualitative study
ID ISSUES
AB The modernization of monolithic legacy systems with microservices has been a trend in recent years. As part of this modernization, identifying microservice candidates starting from legacy code is challenging, as maintainers may consider many criteria simultaneously. Multi-objective search-based approaches represent a promising state-of-the-art solution to support this decision-making process. However, the rationale to adopt each microservice candidate automatically identified by these approaches is poorly investigated in industrial cases. Furthermore, studies with these approaches have not carefully investigated how maintainers reason and make decisions when designing microservice architectures from legacy systems. To address this gap, we conducted an on-site case study with maintainers of an industrial legacy system to investigate the usefulness of automatically generated microservice architectures. We analyze design decisions pointed out by the maintainers when reasoning about microservice candidates using several criteria at the same time. Our study is the first to assess a search-based approach involving actual maintainers conceiving microservice architectures in an industrial setting. Therefore, firstly, we considered individual evaluation of microservice candidates to understand the rationale for identifying a service. Secondly, we conducted a focus group study with maintainers with the goal of investigating design decisions at an architectural level. The results show that: (i) the automated approach is able to identify useful microservices; (ii) the criteria observed by previous studies are, in fact, considered by maintainers; and (iii) the maintainer profiles, i.e., the preferred granularity for microservice, highly affect design decisions. Finally, we observed the maintainers needed little effort in adjusting the automatically identified microservices to make them adoptable. In addition to indicating a promising potential of search-based approaches to generate microservice architectures, our findings highlight the need for: (i) interactive and/or customizable approaches that enable maintainers to include their preferences during the search process, and (ii) flexible or automated selection of criteria that fits the scenario in which the modernization is taking place.
C1 [Carvalho, Luiz; Colanzi, Thelma Elita; Assuncao, Wesley K. G.; Garcia, Alessandro; Pereira, Juliana Alves; Kalinowski, Marcos; Lucena, Carlos] Pontifical Catholic Univ Rio de Janeiro, BR-38097 Rio De Janeiro, Brazil.
   [Colanzi, Thelma Elita] Univ Estadual Maringa, BR-87020900 Maringa, Brazil.
   [Assuncao, Wesley K. G.] North Carolina State Univ, Raleigh, NC 27607 USA.
   [de Mello, Rafael Maiani] Univ Fed Rio de Janeiro, BR-21941594 Rio De Janeiro, Brazil.
   [de Lima, Maria Julia] Pontifical Catholic Univ Rio de Janeiro, Tecgraf Inst, Rio De Janeiro, Brazil.
C3 Pontificia Universidade Catolica do Rio de Janeiro; Universidade
   Estadual de Maringa; North Carolina State University; Universidade
   Federal do Rio de Janeiro; Pontificia Universidade Catolica do Rio de
   Janeiro
RP Assunçao, WKG (corresponding author), Pontifical Catholic Univ Rio de Janeiro, BR-38097 Rio De Janeiro, Brazil.
EM lmcarvalho@inf.puc-rio.br; thelma@din.uem.br; wguezas@ncsu.edu;
   afgarcia@inf.puc-rio.br; jpereira@inf.puc-rio.br;
   kalinowski@inf.puc-rio.br; rafaelmello@ic.ufrj.br;
   mjulia@tecgraf.puc-rio.br; lucena@inf.puc-rio.br
OI Kalinowski, Marcos/0000-0003-1445-3425; Alves Pereira,
   Juliana/0000-0002-0799-2829; Colanzi, Thelma/0000-0001-9761-1999; de
   Mello, Rafael/0000-0002-9877-3946
FU Conselho Nacional de Desenvolvimento Cientfico e Tecnolgico
FX No Statement Available
CR Abgaz Y, 2023, IEEE T SOFTWARE ENG, V49, P4213, DOI 10.1109/TSE.2023.3287297
   Arcuri A, 2014, SOFTW TEST VERIF REL, V24, P219, DOI 10.1002/stvr.1486
   Assuncao Wesley K. G., 2020, SPLC '20: Proceedings of the 24th ACM Conference on Systems and Software Product Line: Volume A, DOI 10.1145/3382025.3414942
   Assunçao WKG, 2023, J SYST SOFTWARE, V204, DOI 10.1016/j.jss.2023.111788
   Assunçao WKG, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-021-10049-7
   Assunçao WKG, 2021, 2021 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2021), P377, DOI 10.1109/SANER50967.2021.00042
   Bisbal J, 1999, IEEE SOFTWARE, V16, P103, DOI 10.1109/52.795108
   Bucchiarone A, 2018, IEEE SOFTWARE, V35, P50, DOI 10.1109/MS.2018.2141026
   Carvalho Luiz, 2019, 2019 IEEE/ACM Joint 7th International Workshop on Conducting Empirical Studies in Industry (CESI) and 6th International Workshop on Software Engineering Research and Industrial Practice (SER&IP). Proceedings, P22, DOI 10.1109/CESSER-IP.2019.00012
   Carvalho L, 2020, PROC IEEE INT CONF S, P569, DOI 10.1109/ICSME46990.2020.00060
   Carvalho L, 2020, SPLC'19: PROCEEDINGS OF THE 23RD INTERNATIONAL SYSTEMS AND SOFTWARE PRODUCT LINE CONFERENCE, VOL A, P26, DOI 10.1145/3336294.3336319
   Christoforou A, 2019, PROCEEDINGS OF THE 14TH INTERNATIONAL CONFERENCE ON EVALUATION OF NOVEL APPROACHES TO SOFTWARE ENGINEERING (ENASE), P134, DOI 10.5220/0007732101340146
   Colanzi Thelma, 2021, SBCARS '21: 15th Brazilian Symposium on Software Components, Architectures, and Reuse, P61, DOI 10.1145/3483899.3483904
   Colanzi TE, 2020, INFORM SOFTWARE TECH, V127, DOI 10.1016/j.infsof.2020.106372
   Colanzi TE, 2019, LECT NOTES COMPUT SC, V11664, P42, DOI 10.1007/978-3-030-27455-9_4
   de Mello R. M., 2016, Conceptual framework for supporting the identification of representative samples for surveys in software engineering
   de Mello R, 2023, IEEE SOFTWARE, V40, P90, DOI 10.1109/MS.2022.3203716
   Di Francesco P, 2018, 2018 IEEE 15TH INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE (ICSA), P29, DOI 10.1109/ICSA.2018.00012
   Di Francesco P, 2019, J SYST SOFTWARE, V150, P77, DOI 10.1016/j.jss.2019.01.001
   Escobar D, 2016, PROC LAT AM COMPUT C
   Eski S, 2018, 19TH INTERNATIONAL CONFERENCE ON AGILE SOFTWARE DEVELOPMENT (XP '18), DOI 10.1145/3234152.3234195
   Fowler SJ., 2016, PRODUCTION READY MIC
   Gouigoux JP, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE WORKSHOPS (ICSAW), P62, DOI 10.1109/ICSAW.2017.35
   Harman M, 2001, INFORM SOFTWARE TECH, V43, P833, DOI 10.1016/S0950-5849(01)00189-6
   Harman M, 2012, ACM COMPUT SURV, V45, DOI 10.1145/2379776.2379787
   Jin WX, 2021, IEEE T SOFTWARE ENG, V47, P987, DOI 10.1109/TSE.2019.2910531
   Jin WX, 2018, 2018 IEEE INTERNATIONAL CONFERENCE ON WEB SERVICES (IEEE ICWS 2018), P211, DOI 10.1109/ICWS.2018.00034
   Junionello L. F., 2021, PROC ANAIS 9 WORKSHO, P31
   Kalia AK, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P1606, DOI 10.1145/3368089.3417933
   Khoshnevis S, 2023, FRONT COMPUT SCI-CHI, V17, DOI 10.1007/s11704-022-1390-4
   Knoche H, 2018, IEEE SOFTWARE, V35, P44, DOI 10.1109/MS.2018.2141035
   Kontio J., 2008, FOCUS GROUP METHOD E, P93, DOI [DOI 10.1007/978-1-84800-044-5_4, DOI 10.1007/978-1-84800-044-5]
   Lewis J., 2014, martinFowler.com
   Luz W, 2018, SBES'18: PROCEEDINGS OF THE XXXII BRAZILIAN SYMPOSIUM ON SOFTWARE ENGINEERING, P32, DOI 10.1145/3266237.3266262
   Mazlami G, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON WEB SERVICES (ICWS 2017), P524, DOI 10.1109/ICWS.2017.61
   Nakazawa R, 2018, 2018 SIXTH IEEE WORKING CONFERENCE ON SOFTWARE VISUALIZATION (VISSOFT), P32, DOI 10.1109/VISSOFT.2018.00012
   Newman S., 2015, Building Microservices
   Ransom J, 1998, SECOND EUROMICRO CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P128, DOI 10.1109/CSMR.1998.665778
   Saidani I, 2019, LECT NOTES COMPUT SC, V11895, P58, DOI 10.1007/978-3-030-33702-5_5
   Taibi D, 2017, IEEE CLOUD COMPUT, V4, P22, DOI 10.1109/MCC.2017.4250931
   Tizzei LP, 2017, 21ST INTERNATIONAL SYSTEMS & SOFTWARE PRODUCT LINE CONFERENCE (SPLC 2017), VOL 1, P205, DOI 10.1145/3106195.3106224
   Van Heesch U, 2017, PROCEEDINGS OF THE 22ND EUROPEAN CONFERENCE ON PATTERN LANGUAGES OF PROGRAMS (EUROPLOP 2017), DOI 10.1145/3147704.3147742
   Watson C., 2015, Netflix
   Wohlin Claes, 2000, Experimentation in Software Engineering: An Introduction
   Wolfart D, 2021, PROCEEDINGS OF EVALUATION AND ASSESSMENT IN SOFTWARE ENGINEERING (EASE 2021), P149, DOI 10.1145/3463274.3463334
   Zhang YK, 2020, IEEE 17TH INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE (ICSA 2020), P135, DOI 10.1109/ICSA47634.2020.00021
NR 46
TC 0
Z9 0
U1 4
U2 4
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAR
PY 2024
VL 50
IS 3
BP 651
EP 667
DI 10.1109/TSE.2024.3361209
PG 17
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA LQ6H5
UT WOS:001188302300002
DA 2024-08-05
ER

PT J
AU Zhu, J
   Wang, LY
   Han, X
   Liu, AM
   Xie, T
AF Zhu, Jie
   Wang, Leye
   Han, Xiao
   Liu, Anmin
   Xie, Tao
TI Safety and Performance, Why Not Both? Bi-Objective Optimized Model
   Compression Against Heterogeneous Attacks Toward AI Software Deployment
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE AI software safe compression; test-driven development; heterogeneous
   membership inference attack
ID MEMBERSHIP INFERENCE ATTACKS
AB The size of deep learning models in artificial intelligence (AI) software is increasing rapidly, hindering the large-scale deployment on resource-restricted devices (e.g., smartphones). To mitigate this issue, AI software compression plays a crucial role, which aims to compress model size while keeping high performance. However, the intrinsic defects in a big model may be inherited by the compressed one. Such defects may be easily leveraged by adversaries, since a compressed model is usually deployed in a large number of devices without adequate protection. In this article, we aim to address the safe model compression problem from the perspective of safety-performance co-optimization. Specifically, inspired by the test-driven development (TDD) paradigm in software engineering, we propose a test-driven sparse training framework called SafeCompress. By simulating the attack mechanism as safety testing, SafeCompress can automatically compress a big model to a small one following the dynamic sparse training paradigm. Then, considering two kinds of representative and heterogeneous attack mechanisms, i.e., black-box membership inference attack and white-box membership inference attack, we develop two concrete instances called BMIA-SafeCompress and WMIA-SafeCompress. Further, we implement another instance called MMIA-SafeCompress by extending SafeCompress to defend against the occasion when adversaries conduct black-box and white-box membership inference attacks simultaneously. We conduct extensive experiments on five datasets for both computer vision and natural language processing tasks. The results show the effectiveness and generalizability of our framework. We also discuss how to adapt SafeCompress to other attacks besides membership inference attack, demonstrating the flexibility of SafeCompress.
C1 [Zhu, Jie; Wang, Leye; Liu, Anmin; Xie, Tao] Peking Univ, Key Lab High Confidence Software Technol, Minist Educ, Beijing 100871, Peoples R China.
   [Zhu, Jie; Wang, Leye; Liu, Anmin; Xie, Tao] Peking Univ, Sch Comp Sci, Beijing 100871, Peoples R China.
   [Han, Xiao] Shanghai Univ Finance & Econ, Shanghai 200433, Peoples R China.
C3 Peking University; Peking University; Shanghai University of Finance &
   Economics
RP Wang, LY (corresponding author), Peking Univ, Key Lab High Confidence Software Technol, Minist Educ, Beijing 100871, Peoples R China.; Han, X (corresponding author), Shanghai Univ Finance & Econ, Shanghai 200433, Peoples R China.
EM zhujie@stu.pku.edu.cn; leyewang@pku.edu.cn; xiaohan@shufe.edu.cn;
   anminliu@stu.pku.edu.cn; taoxie@pku.edu.cn
RI Zhu, Jie/JKJ-5799-2023
OI Zhu, Jie/0000-0002-9733-2460; Xie, Tao/0000-0002-6731-216X
FU NSFC
FX No Statement Available
CR Abadi M, 2016, CCS'16: PROCEEDINGS OF THE 2016 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P308, DOI 10.1145/2976749.2978318
   [Anonymous], 2005, 14 INT C WORLD WIDE
   Beck K., 2003, Test Driven Development: By Example
   Brown T. B., 2020, P 34 INT C NEURAL IN, P1
   Carlini N, 2019, PROCEEDINGS OF THE 28TH USENIX SECURITY SYMPOSIUM, P267
   Crowley E.J., 2018, Proceedings of the 32nd International Conference on Neural Information Processing Systems, P2893
   Deng J, 2009, PROC CVPR IEEE, P248, DOI 10.1109/CVPRW.2009.5206848
   Deng L, 2020, P IEEE, V108, P485, DOI 10.1109/JPROC.2020.2976475
   Dettmers T, 2019, Arxiv, DOI arXiv:1907.04840
   Devlin J, 2019, Arxiv, DOI arXiv:1810.04805
   Dosovitskiy A., 2021, PROC ICLR
   Drinic M, 2007, ACM T PROGR LANG SYS, V29, DOI 10.1145/1180475.1180478
   Duddu Vasisht, 2020, MobiQuitous '20: MobiQuitous 2020 - 17th EAI International Conference on Mobile and Ubiquitous Systems: Computing, Networking and Services, P76, DOI 10.1145/3448891.3448939
   Elsen E., 2020, PR MACH LEARN RES, P2943
   Goodfellow IJ, 2014, ADV NEUR IN, V27, P2672, DOI 10.1145/3422622
   Han S, 2016, Arxiv, DOI [arXiv:1510.00149, 10.48550/arXiv.1510.00149]
   Han S, 2015, ADV NEUR IN, V28
   Han X, 2019, IEEE T DEPEND SECURE, V16, P1054, DOI 10.1109/TDSC.2019.2934096
   Hayes Jamie, 2019, Proceedings on Privacy Enhancing Technologies, V2019, P133, DOI 10.2478/popets-2019-0008
   He KM, 2016, PROC CVPR IEEE, P770, DOI 10.1109/CVPR.2016.90
   Hinton G, 2015, Arxiv, DOI arXiv:1503.02531
   Hu HS, 2022, ACM COMPUT SURV, V54, DOI 10.1145/3523273
   Hu Z., 2022, Advances in Neural Information Processing Systems, V35, P1867
   Hubara M., 2016, P C NEUR INF PROC SY, P4114
   Jacob B, 2018, PROC CVPR IEEE, P2704, DOI 10.1109/CVPR.2018.00286
   Jayakumar R., 2020, ADV NEURAL INF PROCE, p20 744
   Jayaraman B, 2019, PROCEEDINGS OF THE 28TH USENIX SECURITY SYMPOSIUM, P1895
   Jia JY, 2019, PROCEEDINGS OF THE 2019 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY (CCS'19), P259, DOI 10.1145/3319535.3363201
   Jiao XQ, 2020, Arxiv, DOI arXiv:1909.10351
   Krizhevsky A, 2009, CIFAR-10 dataset
   Krizhevsky A, 2017, COMMUN ACM, V60, P84, DOI 10.1145/3065386
   Le Y., 2015, CS 231N, V7, P3
   Lin L., 2022, ADV NEURAL INF PROCE, p22 941
   Liu HB, 2021, CCS '21: PROCEEDINGS OF THE 2021 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P2081, DOI 10.1145/3460120.3484749
   Liu S., 2021, ICML, V139, P6989
   Liu SW, 2021, NEURAL COMPUT APPL, V33, P2589, DOI 10.1007/s00521-020-05136-7
   Liu Y., 2022, P 2022 ACM SIGSAC C, P2085
   Liu YH, 2019, Arxiv, DOI [arXiv:1907.11692, DOI 10.48550/ARXIV.1907.11692]
   Liu Y, 2020, IEEE SENS J, V20, P9540, DOI 10.1109/JSEN.2020.2987768
   Liu YG, 2021, Arxiv, DOI arXiv:2102.02551
   Ma LT, 2021, PROCEEDINGS OF THE WORLD WIDE WEB CONFERENCE 2021 (WWW 2021), P3558, DOI 10.1145/3442381.3449855
   Madry A, 2019, Arxiv, DOI arXiv:1706.06083
   Melis L, 2019, P IEEE S SECUR PRIV, P691, DOI 10.1109/SP.2019.00029
   Miyato T, 2021, Arxiv, DOI arXiv:1605.07725
   Mocanu D. C., 2017, Ph.D. dissertation
   Mocanu DC, 2018, NAT COMMUN, V9, DOI 10.1038/s41467-018-04316-3
   Mostafa H, 2019, PR MACH LEARN RES, V97
   Nasr M, 2019, P IEEE S SECUR PRIV, P739, DOI 10.1109/SP.2019.00065
   Nasr M, 2018, PROCEEDINGS OF THE 2018 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY (CCS'18), P634, DOI 10.1145/3243734.3243855
   Pugh W, 1999, ACM SIGPLAN NOTICES, V34, P247, DOI 10.1145/301631.301676
   Rahman MA, 2018, TRANS DATA PRIV, V11, P61
   Raihan T., 2020, ADV NEURAL INF PROCE, p15 625
   Riquelme C., 2021, Advances in Neural Information Processing Systems, V34, P8583
   Sablayrolles A, 2019, PR MACH LEARN RES, V97
   Salem A, 2019, 26TH ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2019), DOI 10.14722/ndss.2019.23119
   Shafahi A, 2019, ADV NEUR IN, V32
   Shejwalkar V, 2021, AAAI CONF ARTIF INTE, V35, P9549
   Shokri R, 2017, P IEEE S SECUR PRIV, P3, DOI 10.1109/SP.2017.41
   Simonyan K., 2014, C TRACK P
   Song CZ, 2020, CCS '20: PROCEEDINGS OF THE 2020 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P377, DOI 10.1145/3372297.3417270
   Song LW, 2021, PROCEEDINGS OF THE 30TH USENIX SECURITY SYMPOSIUM, P2615
   Tang XY, 2022, PROCEEDINGS OF THE 31ST USENIX SECURITY SYMPOSIUM, P1433
   Tseng W.-T., 2021, arXiv
   Virtanen P, 2020, NAT METHODS, V17, P261, DOI 10.1038/s41592-019-0686-2
   Wang AL, 2019, Arxiv, DOI arXiv:1804.07461
   Yang Z., 2023, P AAAI C ARTIFICIAL, V37, P10871
   Yeom S, 2018, P IEEE COMPUT SECUR, P268, DOI 10.1109/CSF.2018.00027
   YijueWang ChenghongWang, 2021, P INT JOINT C ART IN, P3141
   Yuan XY, 2022, PROCEEDINGS OF THE 31ST USENIX SECURITY SYMPOSIUM, P4561
   Zhang X, 2015, ADV NEUR IN, V28
   Zhang ZQ, 2022, PROC INT CONF SOFTW, P1856, DOI 10.1145/3510003.3510191
   Zheng JX, 2021, NEUROCOMPUTING, V452, P114, DOI 10.1016/j.neucom.2021.04.082
   Zhu H., 2022, P 11 INT C LEARN REP, P1
   Zhu J., 2022, IEEE INT CONF AUTOM, P1, DOI DOI 10.1145/3551349.3556906
   Zhu JY, 2017, IEEE I CONF COMP VIS, P2242, DOI 10.1109/ICCV.2017.244
NR 75
TC 0
Z9 0
U1 3
U2 3
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAR
PY 2024
VL 50
IS 3
BP 376
EP 390
DI 10.1109/TSE.2023.3348515
PG 15
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA LQ6H5
UT WOS:001188302300016
OA Green Submitted
DA 2024-08-05
ER

PT J
AU Rong, GP
   Yu, YD
   Zhang, YF
   Zhang, H
   Shen, HF
   Shao, D
   Kuang, HY
   Wang, M
   Wei, Z
   Xu, Y
   Wang, JH
AF Rong, Guoping
   Yu, Yongda
   Zhang, Yifan
   Zhang, He
   Shen, Haifeng
   Shao, Dong
   Kuang, Hongyu
   Wang, Min
   Wei, Zhao
   Xu, Yong
   Wang, Juhong
TI Distilling Quality Enhancing Comments From Code Reviews to Underpin
   Reviewer Recommendation
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Codes; Measurement; Software; History; Emojis; Software algorithms;
   Training; Code review; review comment; reviewer recommendation
AB Code review is an important practice in software development. One of its main objectives is for the assurance of code quality. For this purpose, the efficacy of code review is subject to the credibility of reviewers, i.e., reviewers who have demonstrated strong evidence of previously making quality-enhancing comments are more credible than those who have not. Code reviewer recommendation (CRR) is designed to assist in recommending suitable reviewers for a specific objective and, in this context, assurance of code quality. Its performance is susceptible to the relevance of its training dataset to this objective, composed of all reviewers' historical review comments, which, however, often contains a plethora of comments that are irrelevant to the enhancement of code quality. Furthermore, recommendation accuracy has been adopted as the sole metric to evaluate a recommender's performance, which is inadequate as it does not take reviewers' relevant credibility into consideration. These two issues form the ground truth problem in CRR as they both originate from the relevance of dataset used to train and evaluate CRR algorithms. To tackle this problem, we first propose the concept of Quality-Enhancing Review Comments (QERC), which includes three types of comments - change-triggering inline comments, informative general comments, and approve-to-merge comments. We then devise a set of algorithms and procedures to obtain a distilled dataset by applying QERC to the original dataset. We finally introduce a new metric - reviewer's credibility for quality enhancement (RCQE) - as a complementary metric to recommendation accuracy for evaluating the performance of recommenders. To validate the proposed QERC-based approach to CRR, we conduct empirical studies using real data from seven projects containing over 82K pull requests and 346K review comments. Results show that: (a) QERC can effectively address the ground truth problem by distilling quality-enhancing comments from the dataset containing original code reviews, (b) QERC can assist recommenders in finding highly credible reviewers at a slight cost of recommendation accuracy, and (c) even "wrong" recommendations using the distilled dataset are likely to be more credible than those using the original dataset.
C1 [Rong, Guoping; Yu, Yongda; Zhang, Yifan; Zhang, He; Shao, Dong; Kuang, Hongyu] Nanjing Univ, State Key Lab Novel Software Technol, Nanjing 210093, Jiangsu, Peoples R China.
   [Shen, Haifeng] Australian Catholic Univ, Peter Faber Business Sch, HilstLab, Sydney 2060, Australia.
   [Wang, Min; Wei, Zhao; Xu, Yong; Wang, Juhong] Tencent Technol Beijing Corp Ltd, Beijing 100193, Peoples R China.
C3 Nanjing University; Australian Catholic University
RP Shao, D (corresponding author), Nanjing Univ, State Key Lab Novel Software Technol, Nanjing 210093, Jiangsu, Peoples R China.
EM ronggp@nju.edu.cn; yuyongda@smail.nju.edu.cn; yifanzhang590@gmail.com;
   hezhang@nju.edu.cn; haifeng.shen@acu.edu.au; dongshao@nju.edu.cn;
   khy@nju.edu.cn; robinmwang@tencent.com; zachwei@tencent.com;
   rogerxu@tencent.com; julietwang@tencent.com
FU National Natural Science Foundation of China [62072227, 62202219,
   62302210]; Tencent Rhino-Bird Focus Research Program of Basic Platform
   Technology; Jiangsu Provincial Key Research and Development Program
   [BE2021002-2]; Innovation Project and Overseas Open Project of State Key
   Laboratory for Novel Software Technology (Nanjing University)
   [ZZKT2022A25, KFKT2022A09, KFKT2023A09, KFKT2023A10]
FX This work was supported in part by the National Natural Science
   Foundation of China under Grant 62072227, Grant 62202219, and Grant
   62302210, in part by the Tencent Rhino-Bird Focus Research Program of
   Basic Platform Technology, in part by the Jiangsu Provincial Key
   Research and Development Program under Grant BE2021002-2, and in part by
   the Innovation Project and Overseas Open Project of State Key Laboratory
   for Novel Software Technology (Nanjing University) under Grant
   ZZKT2022A25, Grant KFKT2022A09, Grant KFKT2023A09, and Grant
   KFKT2023A10.
CR Al-Zubaidi WHA, 2020, PROCEEDINGS OF THE 16TH ACM INTERNATIONAL CONFERENCE ON PREDICTIVE MODELS AND DATA ANALYTICS IN SOFTWARE ENGINEERING, PROMISE 2020, P21, DOI 10.1145/3416508.3417115
   Asthana S, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P937, DOI 10.1145/3338906.3340449
   Bacchelli A, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P712, DOI 10.1109/ICSE.2013.6606617
   Baysal O, 2013, WORK CONF REVERSE EN, P122, DOI 10.1109/WCRE.2013.6671287
   Belgiu M, 2016, ISPRS J PHOTOGRAMM, V114, P24, DOI 10.1016/j.isprsjprs.2016.01.011
   Bosu A, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P146, DOI 10.1109/MSR.2015.21
   Cañamares R, 2020, INFORM RETRIEVAL J, V23, P387, DOI 10.1007/s10791-020-09371-3
   Caulo M, 2020, INT C PROGRAM COMPRE, P230, DOI 10.1145/3387904.3389270
   Çetin HA, 2021, SCI COMPUT PROGRAM, V208, DOI 10.1016/j.scico.2021.102652
   Chen QY, 2022, 2022 ACM/IEEE 44TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE (ICSE-SEIP 2022), P115, DOI [10.1109/ICSE-SEIP55303.2022.9794124, 10.1145/3510457.3513035]
   Chen SH, 2012, ENVIRON MODELL SOFTW, V37, P134, DOI 10.1016/j.envsoft.2012.03.012
   Chouchen M, 2021, APPL SOFT COMPUT, V100, DOI 10.1016/j.asoc.2020.106908
   de Lima ML, 2018, J SYST SOFTWARE, V144, P181, DOI 10.1016/j.jss.2018.05.065
   de Lima ML, 2015, 30TH ANNUAL ACM SYMPOSIUM ON APPLIED COMPUTING, VOLS I AND II, P1567, DOI 10.1145/2695664.2695884
   Dogan E, 2019, INT SYMP EMP SOFTWAR, P7
   Ebert F, 2019, 2019 IEEE 26TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER), P49, DOI [10.1109/saner.2019.8668024, 10.1109/SANER.2019.8668024]
   Fejzer M, 2018, J INTELL INF SYST, V50, P597, DOI 10.1007/s10844-017-0484-1
   Feng ZX, 2023, Arxiv, DOI arXiv:2303.16344
   Gauthier IX, 2021, 2021 36TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING ASE 2021, P30, DOI 10.1109/ASE51524.2021.9678640
   Gilardi F, 2023, Arxiv, DOI [arXiv:2303.15056, DOI 10.48550/ARXIV.2303.15056]
   Hannebauer C, 2016, IEEE INT CONF AUTOM, P99, DOI 10.1145/2970276.2970306
   Hasan M, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-021-10038-w
   Hirao T, 2019, IEICE T INF SYST, VE102D, P2423, DOI 10.1587/transinf.2019MPP0005
   Hu YZ, 2020, 2020 IEEE 20TH INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY, AND SECURITY (QRS 2020), P497, DOI 10.1109/QRS51102.2020.00069
   Huang Y, 2021, PROC INT CONF SOFTW, P1020, DOI 10.1109/ICSE43902.2021.00096
   Jeong G., 2009, P RES SOFTW AN ERR F, P1
   Jiang J, 2019, J SYST SOFTWARE, V154, P196, DOI 10.1016/j.jss.2019.04.055
   Jiang J, 2017, INFORM SOFTWARE TECH, V84, P48, DOI 10.1016/j.infsof.2016.10.006
   Jiang J, 2015, J COMPUT SCI TECH-CH, V30, P998, DOI 10.1007/s11390-015-1577-3
   Kim J, 2018, SYMMETRY-BASEL, V10, DOI 10.3390/sym10040114
   Kononenko O, 2016, PROC INT CONF SOFTW, P1028, DOI 10.1145/2884781.2884840
   Kononenko O, 2015, PROC IEEE INT CONF S, P111, DOI 10.1109/ICSM.2015.7332457
   Kovalenko V, 2020, IEEE T SOFTWARE ENG, V46, P710, DOI 10.1109/TSE.2018.2868367
   Lai SW, 2015, AAAI CONF ARTIF INTE, P2267
   Li Z., 2017, P 29 INT C SOFTW ENG, P572
   Likert R., 1932, ARCH PSYCHOL, V22, P5, DOI DOI 10.4135/9781412961288.N454
   Lipcák J, 2018, EUROMICRO CONF PROC, P378, DOI 10.1109/SEAA.2018.00068
   MacLeod L, 2018, IEEE SOFTWARE, V35, P34, DOI 10.1109/MS.2017.265100500
   Mikolov T., 2013, Advances in Neural Information Processing Systems, P3111
   Mirsaeedi E, 2020, PROC INT CONF SOFTW, P1183, DOI 10.1145/3377811.3380335
   Noble WS, 2006, NAT BIOTECHNOL, V24, P1565, DOI 10.1038/nbt1206-1565
   Rahman MM, 2017, IEEE WORK CONF MIN S, P215, DOI 10.1109/MSR.2017.17
   Rahman MM, 2016, 2016 IEEE/ACM 38TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING COMPANION (ICSE-C), P222, DOI 10.1145/2889160.2889244
   Rahman MM, 2016, IEEE INT CONF AUTOM, P792, DOI 10.1145/2970276.2970283
   Rebai S, 2020, AUTOMAT SOFTW ENG, V27, P301, DOI 10.1007/s10515-020-00275-6
   Rong G., 2022, arXiv
   Strand A, 2020, 2020 IEEE/ACM 42ND INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE (ICSE-SEIP), P1, DOI 10.1145/3377813.3381365
   Sun XF, 2023, Arxiv, DOI arXiv:2305.08377
   Tecimer KA, 2021, PROCEEDINGS OF EVALUATION AND ASSESSMENT IN SOFTWARE ENGINEERING (EASE 2021), P181, DOI 10.1145/3463274.3463336
   Thongtanunam P, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P141, DOI 10.1109/SANER.2015.7081824
   Tong HH, 2008, KNOWL INF SYST, V14, P327, DOI 10.1007/s10115-007-0094-2
   Xia X, 2015, PROC IEEE INT CONF S, P261, DOI 10.1109/ICSM.2015.7332472
   Xia ZL, 2017, 6TH INTERNATIONAL WORKSHOP ON SOFTWARE MINING (SOFTWAREMINING), P24, DOI 10.1109/SOFTWAREMINING.2017.8100850
   Yang C., 2017, P AS PAC S INT INT, P1
   Yang C, 2018, J CENT SOUTH UNIV, V25, P1129, DOI 10.1007/s11771-018-3812-x
   Ying HC, 2016, 2016 IEEE/ACM 3RD INTERNATIONAL WORKSHOP ON CROWDSOURCING IN SOFTWARE ENGINEERING (CSI-SE), P29, DOI [10.1109/CSI-SE.2016.013, 10.1145/2897659.2897660]
   Yu Y, 2016, INFORM SOFTWARE TECH, V74, P204, DOI 10.1016/j.infsof.2016.01.004
   Zanjani MB, 2016, IEEE T SOFTWARE ENG, V42, P530, DOI 10.1109/TSE.2015.2500238
NR 58
TC 0
Z9 0
U1 0
U2 0
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUL
PY 2024
VL 50
IS 7
BP 1658
EP 1674
DI 10.1109/TSE.2024.3356819
PG 17
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA YZ0O5
UT WOS:001272193600003
DA 2024-08-05
ER

PT J
AU Wang, XT
   Tian, SP
   Cui, W
AF Wang, Xite
   Tian, Senping
   Cui, Wei
TI ContractCheck: Checking Ethereum Smart Contracts in Fine-Grained Level
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Smart contracts; blockchain security; vulnerability detection; neural
   network; blockchain security; vulnerability detection; neural network
ID FRAMEWORK
AB The blockchain has been the main computing scenario for smart contracts, and the decentralized infrastructure of the blockchain is effectively implemented in a de-trusted and executable environment. However, vulnerabilities in smart contracts are particularly vulnerable to exploitation by malicious attackers and have always been a key issue in blockchain security. Existing traditional tools are inefficient in detecting vulnerabilities and have a high rate of false positives when detecting contracts. Some neural network methods have improved the detection efficiency, but they are not competent for fine-grained (code line level) vulnerability detection. We propose the ContractCheck model for detecting contract vulnerabilities based on neural network methods. ContractCheck extracts fine-grained segments from the abstract syntax tree (AST) and function call graph of smart contract source code. Furthermore, the segments are parsed into token flow retaining semantic information as uint, which are used to generate numerical vector sequences that can be trained using neural network methods. We conduct multiple rounds of experiments using a dataset constructed from 36,885 smart contracts and identified the optimal ContractCheck model structure by employing the Fasttext embedding vector algorithm and constructing a composite model using CNN and BiGRU for training the network. Evaluation on other datasets demonstrates that ContractCheck exhibits significant improvement in contract-level detection performance compared to other methods, with an increase of 23.60% in F1 score over the best existing method. Particularly, it achieves fine-grained detection based on neural network methods. The cases provide indicate that ContractCheck can effectively assist developers in accurately locating the presence of vulnerabilities, thereby enhancing the security of Ethereum smart contracts.
C1 [Wang, Xite; Tian, Senping; Cui, Wei] South China Univ Technol, Sch Automat Sci & Engn, Guangzhou 510641, Peoples R China.
   [Cui, Wei] Pazhou Lab, Guangzhou 510330, Peoples R China.
C3 South China University of Technology; Pazhou Lab
RP Cui, W (corresponding author), South China Univ Technol, Sch Automat Sci & Engn, Guangzhou 510641, Peoples R China.; Cui, W (corresponding author), Pazhou Lab, Guangzhou 510330, Peoples R China.
EM 201830620189@mail.scut.edu.cn; ausptian@scut.edu.cn;
   aucuiwei@scut.edu.cn
FU National Key Research and Development Program of China [2022YFB3103100];
   National Natural Science Foundation of China [62173151, 62273154];
   Foundation of Key Laboratory of Autonomous Systems and Networked
   Control, Ministry of Education, China.
FX This work was supported in part by the National Key Research and
   Development Program of China under Grant 2022YFB3103100, in part by the
   National Natural Science Foundation of China under Grant 62173151 and
   Grant 62273154, and in part by the Foundation of Key Laboratory of
   Autonomous Systems and Networked Control, Ministry of Education, China.
CR allenai, Mo.
   Alpos O, 2021, INT CON DISTR COMP S, P640, DOI 10.1109/ICDCS51616.2021.00067
   Amani S., 2018, P 7 ACM SIGPLAN INT, P66, DOI [10.1145/3167084, DOI 10.1145/3167084]
   Breiman L., 2001, Machine Learning, V45, P5, DOI 10.1023/A:1010933404324
   Buterin V., Anextgenerationsmartcontract & decentralizedapplication platform
   Cai J, 2023, J SYST SOFTWARE, V195, DOI 10.1016/j.jss.2022.111550
   Chen JC, 2021, IEEE T SOFTWARE ENG, V48, P2189, DOI 10.1109/TSE.2021.3054928
   Chen JC, 2022, IEEE T SOFTWARE ENG, V48, P327, DOI 10.1109/TSE.2020.2989002
   Chung JY, 2014, Arxiv, DOI [arXiv:1412.3555, DOI 10.48550/ARXIV.1412.3555]
   Durieux T, 2020, PROC INT CONF SOFTW, P530, DOI 10.1145/3377811.3380364
   etherscan.IO, "BecToken.sol.
   Feist J, 2019, 2019 IEEE/ACM 2ND INTERNATIONAL WORKSHOP ON EMERGING TRENDS IN SOFTWARE ENGINEERING FOR BLOCKCHAIN (WETSEB 2019), P8, DOI 10.1109/WETSEB.2019.00008
   Gao ZP, 2021, IEEE T SOFTWARE ENG, V47, P2874, DOI 10.1109/TSE.2020.2971482
   Ghaleb Asem, 2020, ISSTA '20: Proceedings of the 29th ACM SIGSOFT International Symposium on Software Testing and Analysis, P415, DOI 10.1145/3395363.3397385
   github, Mythril
   github, SCV-List
   GitHub, antlr
   Gogineni A. K., 2020, IOP SciNotes, V1, DOI [10.1088/2633-1357/abcd29, DOI 10.1088/2633-1357/ABCD29]
   Han Daojun, 2022, 2022 4th International Conference on Frontiers Technology of Information and Computer (ICFTIC), P834, DOI 10.1109/ICFTIC57696.2022.10075325
   Hildenbrandt E, 2018, P IEEE COMPUT SECUR, P204, DOI 10.1109/CSF.2018.00022
   Hinton GE, 2006, NEURAL COMPUT, V18, P1527, DOI 10.1162/neco.2006.18.7.1527
   Huang JJ, 2021, IEEE T INF FOREN SEC, V16, P2144, DOI 10.1109/TIFS.2021.3050051
   Jiang B, 2018, IEEE INT CONF AUTOM, P259, DOI 10.1145/3238147.3238177
   Jin H, 2022, IEEE T SOFTWARE ENG, V48, P4611, DOI 10.1109/TSE.2021.3123170
   joey, Review of blockchain security in 2022
   Joulin A., 2017, P 15 C EUR CHAPT ASS, P427, DOI DOI 10.18653/V1/E17-2068
   Kannengiesser N, 2022, IEEE T SOFTWARE ENG, V48, P4291, DOI 10.1109/TSE.2021.3116808
   Krizhevsky A, 2017, COMMUN ACM, V60, P84, DOI 10.1145/3065386
   Kumar R, 2022, IEEE T IND INFORM, V18, P8065, DOI 10.1109/TII.2022.3161631
   Lee H, 2017, INT CONF FUZZY THEOR
   Li L, 2018, IEEE T INTELL TRANSP, V19, P2204, DOI 10.1109/TITS.2017.2777990
   Li Z, 2022, IEEE T DEPEND SECURE, V19, P2244, DOI 10.1109/TDSC.2021.3051525
   Liu YH, 2019, Arxiv, DOI [arXiv:1907.11692, DOI 10.48550/ARXIV.1907.11692]
   Liu ZG, 2023, IEEE T KNOWL DATA EN, V35, P1296, DOI 10.1109/TKDE.2021.3095196
   Liu ZG, 2023, IEEE T INF FOREN SEC, V18, P1237, DOI 10.1109/TIFS.2023.3237370
   Lu YS, 2022, IEEE T MOBILE COMPUT, V21, P663, DOI 10.1109/TMC.2020.3008315
   Luu L, 2016, CCS'16: PROCEEDINGS OF THE 2016 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P254, DOI 10.1145/2976749.2978309
   Ma FC, 2022, IEEE T SOFTWARE ENG, V48, P4380, DOI 10.1109/TSE.2021.3117966
   Mikolov T., 2013, INT C LEARNING REPRE, P1
   Nakamoto, Bitcoin: A peer-to-peer electronic cash system
   Nguyen Tai D., 2021, 2021 IEEE Symposium on Security and Privacy (SP), P1215, DOI 10.1109/SP40001.2021.00057
   Peters M. E., 2018, P N AM CHAPT ASS COM, P427
   Qian P, 2023, IEEE T SOFTWARE ENG, V49, P3793, DOI 10.1109/TSE.2023.3271417
   Qian P, 2020, IEEE ACCESS, V8, P19685, DOI 10.1109/ACCESS.2020.2969429
   Sengupta J, 2023, IEEE T NETW SERV MAN, V20, P2929, DOI 10.1109/TNSM.2023.3239832
   Rahman MS, 2020, IEEE T ENG MANAGE, V67, P1476, DOI 10.1109/TEM.2019.2960829
   Singh AP, 2021, IEEE T IND INFORM, V17, P5779, DOI 10.1109/TII.2020.3037889
   Solidity, Solidity DocumentaTION
   swcregistry, ABOUT US
   Szabo Nick., Smart contracts
   Tang Xiuwen, 2022, 2022 International Conference on Service Science (ICSS), P248, DOI 10.1109/ICSS55994.2022.00046
   Tikhomirov S, 2018, 2018 IEEE/ACM 1ST INTERNATIONAL WORKSHOP ON EMERGING TRENDS IN SOFTWARE ENGINEERING FOR BLOCKCHAIN (WETSEB), P9, DOI 10.1145/3194113.3194115
   Vaswani A., 2017, Advances in neural information processing systems, P5998
   Wang W, 2021, IEEE T NETW SCI ENG, V8, P1133, DOI 10.1109/TNSE.2020.2968505
   Wohlin C., 2012, Experimentation in Software Engineering, DOI [10.1007/978-3-642-29044-2., DOI 10.1007/978-3-642-29044-2]
   Wood D. R. G., Ethereum: A secure decentralised generalised trans action ledger
   Xing R, 2021, IEEE T VEH TECHNOL, V70, P782, DOI 10.1109/TVT.2020.3043626
   Yang ZT, 2022, IEEE T SERV COMPUT, V15, P1883, DOI 10.1109/TSC.2020.3024729
   Zhang DX, 2015, Arxiv, DOI [arXiv:1508.01006, DOI 10.48550/ARXIV.1508.01006]
   Zhang WQ, 2023, IEEE T SOFTWARE ENG, V49, P3630, DOI 10.1109/TSE.2023.3270117
   Zhang YY, 2020, PROCEEDINGS OF THE 2020 IEEE 27TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER '20), P23, DOI [10.1109/SANER48275.2020.9054825, 10.1109/saner48275.2020.9054825]
   Zou WQ, 2021, IEEE T SOFTWARE ENG, V47, P2084, DOI 10.1109/TSE.2019.2942301
NR 62
TC 0
Z9 0
U1 0
U2 0
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUL
PY 2024
VL 50
IS 7
BP 1789
EP 1806
DI 10.1109/TSE.2024.3400294
PG 18
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA YZ0O5
UT WOS:001272193600005
DA 2024-08-05
ER

PT J
AU Liu, JQ
   Zhang, FM
   Zhang, X
   Yu, ZW
   Wang, L
   Zhang, Y
   Guo, B
AF Liu, Jiaqi
   Zhang, Fengming
   Zhang, Xin
   Yu, Zhiwen
   Wang, Liang
   Zhang, Yao
   Guo, Bin
TI hmCodeTrans: Human-Machine Interactive Code Translation
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Code translation; human-machine collaboration; interactive translation
AB Code translation, i.e., translating one kind of code language to another, plays an important role in scenarios such as application modernization and multi-language versions of applications on different platforms. Even the most advanced machine-based code translation methods can not guarantee an error-free result. Therefore, the participance of software engineer is necessary. Considering both accuracy and efficiency, it is suggested to work in a human-machine collaborative way. However, in many realistic scenarios, human and machine collaborate ineffectively - model translates first and then human makes further editing, without any interaction. To solve this problem, we propose hmCodeTrans, a novel method that achieves code translation in an interactive human-machine collaborative way. It can (1) save the human effort by introducing two novel human-machine collaboration patterns: prefix-based and segment-based ones, which feed the software engineer's sequential or scattered editing back to model and thus enabling the model to make a better retranslation; (2) reduce the response time based on two proposed modules: attention cache module that avoids duplicate prefix inference with cached attention information, and suffix splicing module that reduces invalid suffix inference by splicing a predefined suffix. The experiments are conducted on two real datasets. Results show that compared with the baselines, our approach can effectively save the human effort and reduce the response time. Last but not least, a user study involving five real software engineers is given, which validates that the proposed approach owns the lowest human effort and shows the users' satisfaction towards the approach.
C1 [Liu, Jiaqi; Zhang, Fengming; Zhang, Xin; Yu, Zhiwen; Wang, Liang; Zhang, Yao; Guo, Bin] Northwestern Polytech Univ, Sch Comp Sci, Xian 710129, Peoples R China.
   [Yu, Zhiwen] Haerbin Engn Univ, Harbin 150001, Peoples R China.
C3 Northwestern Polytechnical University; Harbin Engineering University
RP Liu, JQ; Yu, ZW (corresponding author), Northwestern Polytech Univ, Sch Comp Sci, Xian 710129, Peoples R China.; Yu, ZW (corresponding author), Haerbin Engn Univ, Harbin 150001, Peoples R China.
EM jqliu@nwpu.edu.cn; fmzhang@mail.nwpu.edu.cn;
   2020262928@mail.nwpu.edu.cn; zhiwenyu@nwpu.edu.cn;
   liangwang@nwpu.edu.cn; yaozh.g@nwpu.edu.cn; guob@nwpu.edu.cn
OI Zhang, Yao/0000-0002-1276-5399
FU National Science and Technology Major Project
FX No Statement Available
CR Ahmad WU, 2021, Arxiv, DOI arXiv:2108.11590
   Alsubhi K, 2019, I C COMP SYST APPLIC
   An KJ, 2018, 2018 IEEE/ACM 5TH INTERNATIONAL CONFERENCE ON MOBILE SOFTWARE ENGINEERING AND SYSTEMS (MOBILESOFT), P180, DOI 10.1145/3197231.3197240
   Nguyen AT, 2015, IEEE INT CONF AUTOM, P585, DOI 10.1109/ASE.2015.74
   Barrachina S, 2009, COMPUT LINGUIST, V35, P3, DOI 10.1162/coli.2008.07-055-R2-06-29
   Chen B, 2021, 2021 36TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING ASE 2021, P167, DOI 10.1109/ASE51524.2021.9678929
   Chen XY, 2018, 32 C NEURAL INFORM P, V31
   Chi JL, 2023, IEEE T SOFTWARE ENG, V49, P564, DOI 10.1109/TSE.2022.3156637
   Chowdhery A, 2022, Arxiv, DOI arXiv:2204.02311
   Feng ZY, 2020, Arxiv, DOI [arXiv:2002.08155, 10.48550/arXiv.2002.08155]
   Firestone C, 2020, P NATL ACAD SCI USA, V117, P26562, DOI 10.1073/pnas.1905334117
   Foster G., 1997, Machine Translation, V12, P175, DOI 10.1023/A:1007999327580
   Gupta KK, 2020, IEEE IJCNN, DOI 10.1109/ijcnn48605.2020.9207491
   Heer J, 2019, P NATL ACAD SCI USA, V116, P1844, DOI 10.1073/pnas.1807184115
   Jiang N, 2021, PROC INT CONF SOFTW, P1161, DOI 10.1109/ICSE43902.2021.00107
   Karaivanov Svetoslav, 2014, P 2014 ACM INT S NEW, P173
   Karmakar A, 2021, 2021 36TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING ASE 2021, P1332, DOI 10.1109/ASE51524.2021.9678927
   Kingma D. P., 2015, P INT C LEARN REPR, P1
   Lachaux MA, 2021, ADV NEUR IN, V34
   Lutellier Thibaud, 2020, ISSTA '20: Proceedings of the 29th ACM SIGSOFT International Symposium on Software Testing and Analysis, P101, DOI 10.1145/3395363.3397369
   Mastropaolo A, 2023, IEEE T SOFTWARE ENG, V49, P1580, DOI 10.1109/TSE.2022.3183297
   Nguyen A.T., 2013, P 2013 9 JOINT M FDN, P651
   Ortiz-Martinez I., 2010, 2010 HUM LANG TECHN, P546
   Peris A, 2018, P 22 C COMPUTATIONAL
   Peris A, 2019, COMPUT SPEECH LANG, V58, P98, DOI 10.1016/j.csl.2019.04.001
   Peris A, 2017, COMPUT SPEECH LANG, V45, P201, DOI 10.1016/j.csl.2016.12.003
   Pino S, 2017, IEEE SYM PARA DISTR, P673, DOI 10.1109/IPDPSW.2017.84
   Radford A., 2019, OpenAI blog, V1, P9
   Raffel C, 2020, J MACH LEARN RES, V21
   Ren S, 2020, Arxiv, DOI [arXiv:2009.10297, 10.48550/arXiv.2009.10297]
   Roziere Baptiste, 2020, Advances in neural information processing systems, V33, P20601
   Roziere Baptiste, 2021, arXiv
   Seidel S, 2019, COMMUN ACM, V62, P50, DOI 10.1145/3210753
   Sharma C, 2020, IEEE INT CONF AUTOM, P1379, DOI 10.1145/3324884.3418916
   Szafraniec M, 2022, Arxiv, DOI [arXiv:2207.03578, 10.48550/arXiv.2207.03578, DOI 10.48550/ARXIV.2207.03578]
   Tauda M, 2021, P INT C ART INT MECH, P1
   Tomas J., 2006, P COLING ACL MAIN C, P835
   Wang Q, 2019, 57TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (ACL 2019), P1810
   Wang Y., 2021, arXiv
   Weisz JD, 2022, IUI'22: 27TH INTERNATIONAL CONFERENCE ON INTELLIGENT USER INTERFACES, P369, DOI 10.1145/3490099.3511157
   Weisz JD, 2021, IUI '21 - 26TH INTERNATIONAL CONFERENCE ON INTELLIGENT USER INTERFACES, P402, DOI 10.1145/3397481.3450656
   Ye H, 2022, PROC INT CONF SOFTW, P1506, DOI 10.1145/3510003.3510222
   Zhao TX, 2020, AAAI CONF ARTIF INTE, V34, P9660
   Zhao ZL, 2021, ADV NEUR IN, V34
   Zhiwen Yu, 2021, CCF Transactions on Pervasive Computing and Interaction, V3, P1, DOI 10.1007/s42486-020-00051-1
   Zhou X, 2021, PROC IEEE INT CONF S, P425, DOI 10.1109/ICSME52107.2021.00044
NR 46
TC 0
Z9 0
U1 4
U2 4
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAY
PY 2024
VL 50
IS 5
BP 1163
EP 1181
DI 10.1109/TSE.2024.3379583
PG 19
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA QX5T5
UT WOS:001224187300012
DA 2024-08-05
ER

PT J
AU Palacio, DN
   Velasco, A
   Cooper, N
   Rodriguez, A
   Moran, K
   Poshyvanyk, D
AF Palacio, David Nader
   Velasco, Alejandro
   Cooper, Nathan
   Rodriguez, Alvaro
   Moran, Kevin
   Poshyvanyk, Denys
TI Toward a Theory of Causation for Interpreting Neural Code Models
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Causality; interpretability; neural code models
AB Neural Language Models of Code, or Neural Code Models (NCMs), are rapidly progressing from research prototypes to commercial developer tools. As such, understanding the capabilities and limitations of such models is becoming critical. However, the abilities of these models are typically measured using automated metrics that often only reveal a portion of their real-world performance. While, in general, the performance of NCMs appears promising, currently much is unknown about how such models arrive at decisions. To this end, this paper introduces do(code), a post hoc interpretability method specific to NCMs that is capable of explaining model predictions. do(code) is based upon causal inference to enable programming language-oriented explanations. While the theoretical underpinnings of do(code) are extensible to exploring different model properties, we provide a concrete instantiation that aims to mitigate the impact of spurious correlations by grounding explanations of model behavior in properties of programming languages. To demonstrate the practical benefit of do(code) , we illustrate the insights that our framework can provide by performing a case study on two popular deep learning architectures and ten NCMs. The results of this case study illustrate that our studied NCMs are sensitive to changes in code syntax. All our NCMs, except for the BERT-like model, statistically learn to predict tokens related to blocks of code (e.g., brackets, parenthesis, semicolon) with less confounding bias as compared to other programming language constructs. These insights demonstrate the potential of do${}_{\textbf{code}}$code as a useful method to detect and facilitate the elimination of confounding bias in NCMs.
C1 [Palacio, David Nader; Velasco, Alejandro; Cooper, Nathan; Poshyvanyk, Denys] William & Mary, Dept Comp Sci, Williamsburg, VA 23185 USA.
   [Rodriguez, Alvaro] Univ Nacl Colombia, Dept Comp Sci, Bogota 111321, Colombia.
   [Moran, Kevin] George Mason Univ, Dept Comp Sci, Fairfax, VA 22030 USA.
C3 Universidad Nacional de Colombia; George Mason University
RP Palacio, DN (corresponding author), William & Mary, Dept Comp Sci, Williamsburg, VA 23185 USA.
EM danaderpalacio@wm.edu; svelascodimate@wm.edu; nacooper@wm.edu;
   aldrodriguezca@unal.edu.co; kpmoran@gmu.edu; dposhyvanyk@wm.edu
RI Nader Palacio, David A./KLD-9270-2024
OI Nader Palacio, David A./0000-0001-6166-7595; Poshyvanyk,
   Denys/0000-0002-5626-7586; Rodriguez, Alvaro/0009-0004-0333-8880;
   Velasco Dimate, Sebastian Alejandro/0000-0002-4829-1017
FU NSF
FX No Statement Available
CR Abadi M, 2016, PROCEEDINGS OF OSDI'16: 12TH USENIX SYMPOSIUM ON OPERATING SYSTEMS DESIGN AND IMPLEMENTATION, P265
   Abu-Mastafa Y. S., Caltech
   Allamams M, 2019, PROCEEDINGS OF THE 2019 ACM SIGPLAN INTERNATIONAL SYMPOSIUM ON NEW IDEAS, NEW PARADIGMS, AND REFLECTIONS ON PROGRAMMING AND SOFTWARE (ONWARD!' 19), P143, DOI 10.1145/3359591.3359735
   Allamanis Miltiadis, 2018, INT C LEARNING REPRE
   Nguyen AT, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P858, DOI 10.1109/ICSE.2015.336
   [Anonymous], GitHub Copilot Your AI pair programmer - github.com
   [Anonymous], Tree-sitter introduction
   [Anonymous], tree-sitter/tree-sitter-python
   [Anonymous], "What is Tabnine?"
   [Anonymous], 2022, Visual studio intellicode Visual studio
   [Anonymous], Java Language Keywords
   [Anonymous], WM-SEMERU/CausalSE
   Bender EM, 2021, PROCEEDINGS OF THE 2021 ACM CONFERENCE ON FAIRNESS, ACCOUNTABILITY, AND TRANSPARENCY, FACCT 2021, P610, DOI 10.1145/3442188.3445922
   Bengio Y, 2003, J MACH LEARN RES, V3, P1137, DOI 10.1162/153244303322533223
   Lipton ZC, 2017, Arxiv, DOI arXiv:1606.03490
   Chen M., 2021, arXiv, DOI DOI 10.48550/ARXIV.2107.03374
   Chen ZM, 2021, IEEE T SOFTWARE ENG, V47, P1943, DOI 10.1109/TSE.2019.2940179
   Cho KYHY, 2014, Arxiv, DOI arXiv:1409.1259
   Ciniselli M, 2022, IEEE T SOFTWARE ENG, V48, P4818, DOI 10.1109/TSE.2021.3128234
   Ciniselli M, 2021, Arxiv, DOI arXiv:2103.07115
   Cito J, 2022, 2022 ACM/IEEE 44TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE (ICSE-SEIP 2022), P125, DOI [10.1145/3510457.3513081, 10.1109/ICSE-SEIP55303.2022.9794112]
   Dai D., 2021, arXiv
   Dehghani M, 2021, Arxiv, DOI arXiv:2107.07002
   Dong Q. X., 2023, ARXIV
   Doshi-Velez F, 2017, Arxiv, DOI [arXiv:1702.08608, DOI 10.48550/ARXIV.1702.08608, 10.48550/arXiv.1702.08608]
   DoshiVelez F., 2018, Explainable and interpretable models in computer vision and machine learning, P3, DOI DOI 10.1007/978-3-319-98131-4_1
   Feng ZY, 2020, FINDINGS OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, EMNLP 2020, P1536
   github, About Us
   Graves A, 2012, STUD COMPUT INTELL, V385, P1, DOI [10.1162/neco.1997.9.8.1735, 10.1007/978-3-642-24797-2, 10.1162/neco.1997.9.1.1]
   Guo D., 2021, P INT C LEARN REPR
   Han TS, 2022, Arxiv, DOI arXiv:2206.01254
   Hellendoorn VJ, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P763, DOI 10.1145/3106237.3106290
   Hindle A, 2012, PROC INT CONF SOFTW, P837, DOI 10.1109/ICSE.2012.6227135
   Hu X, 2018, INT C PROGRAM COMPRE, P200, DOI 10.1145/3196321.3196334
   Hu YJ, 2022, 39 INT C MACHINE LEA
   Husain H, 2020, Arxiv, DOI arXiv:1909.09436
   Hussain Y, 2020, INT J SOFTW ENG KNOW, V30, P649, DOI 10.1142/S0218194020500230
   Karampatsis RM, 2019, Arxiv, DOI arXiv:1903.05734
   Karampatsis RM, 2020, PROC INT CONF SOFTW, P294, DOI 10.1145/3377812.3390806
   Karampatsis RM, 2020, PROC INT CONF SOFTW, P1073, DOI 10.1145/3377811.3380342
   Karimi AH, 2022, Arxiv, DOI arXiv:2212.06925
   Karpathy A., 2015, ARXIV
   Khandelwal U, 2018, PROCEEDINGS OF THE 56TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (ACL), VOL 1, P284
   Kim B, 2018, PR MACH LEARN RES, V80
   Kingma D. P., 2014, arXiv
   Kocmi T, 2021, Arxiv, DOI arXiv:2107.10821
   Liang P, 2023, Arxiv, DOI arXiv:2211.09110
   Liu Y, 2024, Arxiv, DOI arXiv:2302.09587
   Lo DV, 2023, Arxiv, DOI arXiv:2309.04142
   Lu S, 2021, Arxiv, DOI arXiv:2102.04664
   Mastropaolo A, 2021, PROC INT CONF SOFTW, P336, DOI 10.1109/ICSE43902.2021.00041
   Menzies T, 2007, IEEE T SOFTWARE ENG, V33, P2, DOI 10.1109/TSE.2007.256941
   Mohammadkhani AH, 2023, Arxiv, DOI arXiv:2211.12821
   Molnar C., 2019, INTERPRETABLE MACHIN, DOI DOI 10.3389/FNB0T.2013.00021
   Molnar C, 2020, Arxiv, DOI arXiv:2010.09337
   Murphy GC, 2006, IEEE SOFTWARE, V23, P76, DOI 10.1109/MS.2006.105
   Nguyen T.T., 2013, P JOINT M EUR SOFTW, P532, DOI DOI 10.1145/2491411.2491458
   Paszke A, 2019, ADV NEUR IN, V32
   Pearl J., 2011, 2011 IEEE International Conference on Data Mining Workshops, P540, DOI 10.1109/ICDMW.2011.169
   Pearl J., 2009, CAUSALITY MODELS REA, DOI DOI 10.1017/CBO9780511803161
   Pearl J, 2019, COMMUN ACM, V62, P54, DOI 10.1145/3241036
   Pearl J, 2016, J CAUSAL INFERENCE, V4, DOI 10.1515/jci-2016-0021
   Prabhakaran V, 2019, 2019 CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING AND THE 9TH INTERNATIONAL JOINT CONFERENCE ON NATURAL LANGUAGE PROCESSING (EMNLP-IJCNLP 2019), P5740
   Quinn T, 2018, TLS-TIMES LIT SUPPL, P31
   Rabin MRI, 2021, INFORM SOFTWARE TECH, V135, DOI 10.1016/j.infsof.2021.106552
   Rajpurkar P, 2018, PROCEEDINGS OF THE 56TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, VOL 2, P784
   Ray B, 2016, PROC INT CONF SOFTW, P428, DOI 10.1145/2884781.2884848
   Raychev V, 2014, ACM SIGPLAN NOTICES, V49, P419, DOI [10.1145/2666356.2594321, 10.1145/2594291.2594321]
   Rei R, 2020, PROCEEDINGS OF THE 2020 CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING (EMNLP), P2685
   Ribeiro M. T., 2020, P 58 ANN M ASS COMPU, P4902
   Rodriguez-Cardenas D, 2023, PROC IEEE INT CONF S, P329, DOI 10.1109/ICSME58846.2023.00040
   Roziere Baptiste, 2020, Advances in neural information processing systems, V33, P20601
   Scholkopf B, 2022, arXiv, DOI [10.48550/ARXIV.2204.00607, DOI 10.48550/ARXIV.2204.00607]
   Sennrich R, 2016, Arxiv, DOI [arXiv:1508.07909, DOI 10.48550/ARXIV.1508.07909]
   Sharma A., 2021, PREPRINT, DOI [10.48550/arXiv.2108.13518, DOI 10.48550/ARXIV.2108.13518]
   Sharma A., DoWhy: A Python package for causal inference
   Svajlenko J, 2015, PROC IEEE INT CONF S, P131, DOI 10.1109/ICSM.2015.7332459
   Tenney I, 2019, 57TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (ACL 2019), P4593
   Tu ZP, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P269, DOI 10.1145/2635868.2635875
   Tufano M, 2019, PROC IEEE INT CONF S, P301, DOI 10.1109/ICSME.2019.00046
   Tufano M, 2019, ACM T SOFTW ENG METH, V28, DOI 10.1145/3340544
   Tufano M, 2019, PROC INT CONF SOFTW, P25, DOI 10.1109/ICSE.2019.00021
   Tufano M, 2018, IEEE INT CONF AUTOM, P832, DOI 10.1145/3238147.3240732
   Tufano M, 2018, IEEE WORK CONF MIN S, P542, DOI 10.1145/3196398.3196431
   Tufano R, 2021, PROC INT CONF SOFTW, P163, DOI 10.1109/ICSE43902.2021.00027
   Vaswani A, 2017, ADV NEUR IN, V30
   Wang A., 2019, GLUE: A multi-task benchmark and analysis platform for natural language understanding
   Watson C, 2021, Arxiv, DOI arXiv:2009.06520
   Watson C, 2020, PROC INT CONF SOFTW, P1398, DOI 10.1145/3377811.3380429
   White M, 2019, 2019 IEEE 26TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER), P479, DOI [10.1109/SANER.2019.8668043, 10.1109/saner.2019.8668043]
   White M, 2016, IEEE INT CONF AUTOM, P87, DOI 10.1145/2970276.2970326
   White M, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P334, DOI 10.1109/MSR.2015.38
   Wolf T, 2020, PROCEEDINGS OF THE 2020 CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING: SYSTEM DEMONSTRATIONS, P38
   Wu TS, 2019, 57TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (ACL 2019), P747
   Wu Tongshuang., 2021, P ACL IJC NLP 2021, P6707
   Zaremba W., OpenAI
NR 96
TC 0
Z9 0
U1 1
U2 1
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAY
PY 2024
VL 50
IS 5
BP 1215
EP 1243
DI 10.1109/TSE.2024.3379943
PG 29
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA QX5T5
UT WOS:001224187300004
OA Green Submitted
DA 2024-08-05
ER

PT J
AU Cheng, W
   Hu, W
   Ma, XX
AF Cheng, Wei
   Hu, Wei
   Ma, Xiaoxing
TI Revisiting Knowledge-Based Inference of Python Runtime Environments: A
   Realistic and Adaptive Approach
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Python runtime environment; knowledge-based inference; knowledge graph;
   configuration management
ID IMPACT
AB The reuse and integration of existing code is a common practice for efficient software development. Constantly updated Python interpreters and third-party packages introduce many challenges to Python runtime environment inference. Existing knowledge-based approaches have achieved good performance but still suffer from several limitations in the real world, especially from incomplete domain knowledge. In this paper, we propose ReadPyE, a realistic and adaptive approach to Python runtime environment inference. To leverage the rich code information, we present an automated approach to the construction and maintenance of our designed Python ecosystem knowledge graph (KG). Moreover, we are the first to handle real-world challenges such as complex dependency specifications and incomplete domain knowledge. Specifically, we define a naming similarity measure to match candidate packages for unknown modules and set priorities for multiple candidate packages. ReadPyE solves the optimization problems of candidate package selection and generates compatible runtime environments step by step based on the current Python environment. The inferred environments are iteratively validated and adjusted by matched exception templates in the validation logs. The evaluation results on three real-world datasets show the superior effectiveness and good efficiency of our ReadPyE compared to the existing knowledge-based approaches. ReadPyE solves the environment-related exceptions for 79.75% single-file code snippets, 93% Python projects, and 63.34% program pairs for code integration. We believe ReadPyE can help programmers reduce the time spent on inferring Python runtime environments and facilitate automated software configuration management.
C1 [Cheng, Wei; Hu, Wei; Ma, Xiaoxing] Nanjing Univ, State Key Lab Novel Software Technol, Nanjing 210023, Peoples R China.
   [Hu, Wei] Nanjing Univ, Natl Inst Healthcare Data Sci, Nanjing 210093, Peoples R China.
C3 Nanjing University; Nanjing University
RP Hu, W (corresponding author), Nanjing Univ, State Key Lab Novel Software Technol, Nanjing 210023, Peoples R China.
EM wchengcs.nju@gmail.com; whu@nju.edu.cn; xxm@nju.edu.cn
OI Hu, Wei/0000-0003-3635-6335
FU National Natural Science Foundation of China
FX No Statement Available
CR Abate P, 2020, PROCEEDINGS OF THE 2020 IEEE 27TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER '20), P547, DOI [10.1109/saner48275.2020.9054837, 10.1109/SANER48275.2020.9054837]
   Abate P, 2012, J SYST SOFTWARE, V85, P2228, DOI 10.1016/j.jss.2012.02.018
   Artho C., 2012, 2012 9th IEEE Working Conference on Mining Software Repositories (MSR 2012), P141, DOI 10.1109/MSR.2012.6224274
   Berre D. L., 2008, P 1 WORKSH AN SOFTW, P197
   Brito A, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P255, DOI 10.1109/SANER.2018.8330214
   Cao Y., 2023, IEEE Trans. Softw. Eng., V49, P1
   Cheng W, 2022, PROC INT CONF SOFTW, P451, DOI 10.1145/3510003.3510078
   Chow KS, 1996, INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE, PROCEEDINGS, P359, DOI 10.1109/ICSM.1996.565039
   Coghlan N., Python
   Collins R., 2015, Pep 508 - dependency specification for python software packages
   Dagenais B, 2011, ACM T SOFTW ENG METH, V20, DOI 10.1145/2000799.2000805
   de Moura L, 2008, LECT NOTES COMPUT SC, V4963, P337, DOI 10.1007/978-3-540-78800-3_24
   Deshpande N, 2022, LECT NOTES COMPUT SC, P173, DOI 10.1007/978-3-031-02462-7_12
   docs.python.org, Python
   Du XL, 2022, PROC INT SYMP SOFTW, P470, DOI 10.1109/ISSRE55969.2022.00052
   Fischer F, 2017, P IEEE S SECUR PRIV, P121, DOI 10.1109/SP.2017.31
   HARROLD MJ, 1994, ACM T PROGR LANG SYS, V16, P175, DOI 10.1145/174662.174663
   Henkel J, 2005, PROC INT CONF SOFTW, P274
   Holth D., Python
   Horton E, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P477, DOI 10.1109/ASE.2019.00052
   Horton E, 2019, PROC INT CONF SOFTW, P328, DOI 10.1109/ICSE.2019.00047
   Horton E, 2018, PROC IEEE INT CONF S, P217, DOI 10.1109/ICSME.2018.00031
   Huang KF, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P518, DOI 10.1145/3368089.3409689
   jinja.palletsprojects.com, Jinja
   Jun Li, 2013, 2013 IEEE 20th International Conference on Web Services (ICWS), P300, DOI 10.1109/ICWS.2013.48
   KENNEDY K, 1978, COMPUT LANG, V3, P163, DOI 10.1016/0096-0551(78)90009-7
   Macho C, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P106, DOI 10.1109/SANER.2018.8330201
   Mancinelli F, 2006, IEEE INT CONF AUTOM, P199
   Meng SC, 2012, PROC INT CONF SOFTW, P353, DOI 10.1109/ICSE.2012.6227179
   Mondal S, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-021-10113-2
   Mukherjee S, 2021, ISSTA '21: PROCEEDINGS OF THE 30TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P439, DOI 10.1145/3460319.3464797
   Nasehi SM, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P25, DOI 10.1109/ICSM.2012.6405249
   Ni AS, 2021, PROC INT CONF SOFTW, P112, DOI 10.1109/ICSE43902.2021.00023
   Nielsen BB, 2021, PROC INT CONF SOFTW, P74, DOI 10.1109/ICSE43902.2021.00020
   packaging.python.org, Python
   Patra J, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P741, DOI 10.1145/3180155.3180184
   pip.pypa.io, PIP
   pip.pypa.io, Documentation of pip freeze
   pypi.org, Pypi
   Raemaekers S, 2017, J SYST SOFTWARE, V129, P140, DOI 10.1016/j.jss.2016.04.008
   Ragkhitwetsagul C, 2021, IEEE T SOFTWARE ENG, V47, P560, DOI 10.1109/TSE.2019.2900307
   Stufft D., Python
   Thung Ferdian, 2016, 2016 IEEE International Conference on Software Maintenance and Evolution (ICSME), P222, DOI 10.1109/ICSME.2016.71
   tree-sitter.github.io, GitHub
   Verdi M, 2022, IEEE T SOFTWARE ENG, V48, P1497, DOI 10.1109/TSE.2020.3023664
   Wang C, 2022, IEEE INT CONF AUTOM, DOI 10.1145/3551349.3560437
   Wang JW, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P233, DOI 10.1145/3368089.3409735
   Wang JW, 2020, IEEE INT CONF AUTOM, P138, DOI 10.1145/3324884.3416585
   Wang JW, 2021, PROC INT CONF SOFTW, P1622, DOI 10.1109/ICSE43902.2021.00144
   Wang Y, 2020, PROC INT CONF SOFTW, P125, DOI 10.1145/3377811.3380426
   wiki.python.org, Python
   Wu W, 2014, IEEE INT WORK C SO, P89, DOI 10.1109/SCAM.2014.33
   Wu Wei, 2010, P 32 ACMIEEE INT C S, P325, DOI DOI 10.1145/1806799.1806848
   Xavier L, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P138, DOI 10.1109/SANER.2017.7884616
   Yang D, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P391, DOI [10.1109/MSR.2016.047, 10.1145/2901739.2901767]
   Ye HJ, 2022, PROC INT CONF SOFTW, P1245, DOI 10.1145/3510003.3510127
   Zhang ZX, 2020, PROCEEDINGS OF THE 2020 IEEE 27TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER '20), P81, DOI [10.1109/SANER48275.2020.9054800, 10.1109/saner48275.2020.9054800]
   Zhu CG, 2021, 2021 36TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING ASE 2021, P240, DOI 10.1109/ASE51524.2021.9678889
NR 58
TC 0
Z9 0
U1 0
U2 0
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD FEB
PY 2024
VL 50
IS 2
BP 258
EP 279
DI 10.1109/TSE.2023.3346474
PG 22
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA IP4I9
UT WOS:001167516600006
DA 2024-08-05
ER

PT J
AU Bai, ST
   Liu, HX
   Dai, EY
   Liu, L
AF Bai, Shuotong
   Liu, Huaxiao
   Dai, Enyan
   Liu, Lei
TI Improving Issue-PR Link Prediction via Knowledge-Aware Heterogeneous
   Graph Learning
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Software development management; Task analysis; Open source software;
   Firewire; Codes; Maintenance; Information processing; GitHub; issue-PR
   links; issue systems; pull request; heterogeneous graph; metapath
   aggregation
ID PULL-REQUESTS; GITHUB; SOFTWARE
AB Links between issues and pull requests (PRs) assist GitHub developers in tackling technical challenges, gaining development inspiration, and improving repository maintenance. In realistic repositories, these links are still insufficiently established. Aiming at this situation, existing works focus on issues and PRs themselves and employ text similarity with additional information like issue size to predict issue-PR links, yet their effectiveness is unsatisfactory. The limitation is that issues and PRs are not isolated on GitHub. Rather, they are related to multiple GitHub sources, including repositories and submitters, which, through their diverse relationships, can supply potential and crucial knowledge about technical domains, developmental insights, and cross-repository technical details. To this end, we propose Auto <bold>IP</bold> Linker (AIPL), which introduces the heterogeneous graph to model multiple GitHub sources with their relationships. Further, it leverages the metapath-based technique to reveal and incorporate the potential information for a more comprehensive understanding of issues and PRs. Firstly, we identify 4 types of GitHub sources related to issues and PRs (repositories, users, issues, PRs) as well as their relationships, and model them into task-specific heterogeneous graphs. Next, we analyze information transmitted among issues or PRs to reveal which knowledge is crucial for them. Based on our analysis, we formulate a series of metapaths and employ the metapath-based technique to incorporate various information for learning the knowledge-aware embedding of issues and PRs. Finally, we can infer whether an issue and a PR can be linked based on their embedding. We evaluate the performance of AIPL on real-world data sets collected from GitHub. The results show that, compared to the baselines, AIPL can achieve average improvements of 15.94%, 15.19%, 20.52%, and 18.50% in terms of Accuracy, Precision, Recall, and F1-score.
C1 [Bai, Shuotong; Liu, Huaxiao; Liu, Lei] Jilin Univ, Coll Comp Sci & Technol, Changchun 130012, Jilin, Peoples R China.
   [Bai, Shuotong; Liu, Huaxiao; Liu, Lei] Jilin Univ, Minist Educ, Key Lab Symbol Computat & Knowledge Engn, Changchun 130012, Jilin, Peoples R China.
   [Dai, Enyan] Penn State Univ, Coll Informat Sci & Technol, University Pk, PA 16802 USA.
C3 Jilin University; Jilin University; Pennsylvania Commonwealth System of
   Higher Education (PCSHE); Pennsylvania State University; Pennsylvania
   State University - University Park
RP Liu, HX (corresponding author), Jilin Univ, Coll Comp Sci & Technol, Changchun 130012, Jilin, Peoples R China.; Liu, HX (corresponding author), Jilin Univ, Minist Educ, Key Lab Symbol Computat & Knowledge Engn, Changchun 130012, Jilin, Peoples R China.
EM baist20@mails.jlu.edu.cn; liuhuaxiao@jlu.edu.cn; emd5759@psu.edu;
   liulei@jlu.edu.cn
FU Jilin Provincial Natural Science Foundation [20230101070JC]; Fundamental
   Research Funds for the Central Universities, JLU [2022-JCXK-16];
   National Natural Science Foundation of China (NSFC) [62102160]; Science
   and Technology Research Project of Education Department of JiLin
   Province of China [JJKH20211104KJ]
FX This work was supported in part by Jilin Provincial Natural Science
   Foundation under Grant 20230101070JC, in part by the Fundamental
   Research Funds for the Central Universities, JLU under Grant
   2022-JCXK-16, in part by the National Natural Science Foundation of
   China (NSFC) under Grant 62102160, and in part by the Science and
   Technology Research Project of Education Department of JiLin Province of
   China under Grant JJKH20211104KJ.
CR Alshara Z, 2023, IEEE ACCESS, V11, P5596, DOI 10.1109/ACCESS.2023.3236392
   [Anonymous], GitHub rest API
   Bachmann A., 2010, P FAST SOFTW ENCR WO, P97
   Bai L., 2023, Expert Syst. Appl., V225
   Bai L. Liu, 2022, Inf. Softw. Technol., V150
   Baltes S, 2019, EMPIR SOFTW ENG, V24, P1259, DOI 10.1007/s10664-018-9650-5
   Bao LF, 2021, IEEE T SOFTWARE ENG, V47, P1277, DOI 10.1109/TSE.2019.2918536
   Baysal O, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P666, DOI 10.1145/2635868.2635887
   Bird C, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P121, DOI 10.1145/1595696.1595716
   Cui HJ, 2022, PROCEEDINGS OF THE 31ST ACM INTERNATIONAL CONFERENCE ON INFORMATION AND KNOWLEDGE MANAGEMENT, CIKM 2022, P3898, DOI 10.1145/3511808.3557661
   Dey T, 2020, Arxiv, DOI arXiv:2003.01153
   Dong YX, 2017, KDD'17: PROCEEDINGS OF THE 23RD ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P135, DOI 10.1145/3097983.3098036
   Fazayeli H., 2019, Procedia Comput. Sci.
   Fu I., 2022, Neural Netw., V170, P266
   Fu TY, 2017, CIKM'17: PROCEEDINGS OF THE 2017 ACM CONFERENCE ON INFORMATION AND KNOWLEDGE MANAGEMENT, P1797, DOI 10.1145/3132847.3132953
   Fu XY, 2020, WEB CONFERENCE 2020: PROCEEDINGS OF THE WORLD WIDE WEB CONFERENCE (WWW 2020), P2331, DOI 10.1145/3366423.3380297
   Guan WL, 2022, PROCEEDINGS OF THE 45TH INTERNATIONAL ACM SIGIR CONFERENCE ON RESEARCH AND DEVELOPMENT IN INFORMATION RETRIEVAL (SIGIR '22), P482, DOI 10.1145/3477495.3532038
   Hu ZN, 2020, WEB CONFERENCE 2020: PROCEEDINGS OF THE WORLD WIDE WEB CONFERENCE (WWW 2020), P2704, DOI 10.1145/3366423.3380027
   Jiang YL, 2022, PROC VLDB ENDOW, V15, P1243, DOI 10.14778/3514061.3514070
   Jimenez CE, 2024, Arxiv, DOI arXiv:2310.06770
   Kallis R, 2019, PROC IEEE INT CONF S, P406, DOI 10.1109/ICSME.2019.00070
   Kikas R, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P291, DOI [10.1109/MSR.2016.038, 10.1145/2901739.2901751]
   Le TDB, 2015, INT C PROGRAM COMPRE, P36, DOI 10.1109/ICPC.2015.13
   Lin JF, 2021, PROC INT CONF SOFTW, P324, DOI 10.1109/ICSE43902.2021.00040
   Lv QS, 2021, KDD '21: PROCEEDINGS OF THE 27TH ACM SIGKDD CONFERENCE ON KNOWLEDGE DISCOVERY & DATA MINING, P1150, DOI 10.1145/3447548.3467350
   Ma P., 2019, Software Engineering and Methodology for Emerging Domains, P115
   Maalej Walid, 2010, Proceedings of the 2010 7th IEEE Working Conference on Mining Software Repositories (MSR 2010), P191, DOI 10.1109/MSR.2010.5463344
   Mikolov T., 2013, ARXIV, DOI DOI 10.48550/ARXIV.1301.3781
   Munaiah N, 2017, EMPIR SOFTW ENG, V22, P3219, DOI 10.1007/s10664-017-9512-6
   Kipf TN, 2017, Arxiv, DOI arXiv:1609.02907
   Nakakoji K., 2002, P INT WORKSH PRINC S
   Pârtachi PP, 2023, ACM T SOFTW ENG METH, V32, DOI 10.1145/3542937
   Pennington J., 2014, GLOVE GLOBAL VECTORS, DOI DOI 10.3115/V1/D14-1162
   Prechelt L., 1996, "Early stopping-but when?" inNeural Networks
   Rocha H, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P46, DOI 10.1109/SANER.2016.87
   Ruffin M, 2004, IEEE SOFTWARE, V21, P82, DOI 10.1109/MS.2004.1259227
   Scarselli F, 2009, IEEE T NEURAL NETWOR, V20, P61, DOI 10.1109/TNN.2008.2005605
   Schlichtkrull M, 2018, LECT NOTES COMPUT SC, V10843, P593, DOI 10.1007/978-3-319-93417-4_38
   Shao HJ, 2020, WEB CONFERENCE 2020: PROCEEDINGS OF THE WORLD WIDE WEB CONFERENCE (WWW 2020), P629, DOI 10.1145/3366423.3380145
   Shi C, 2019, IEEE T KNOWL DATA EN, V31, P357, DOI 10.1109/TKDE.2018.2833443
   Shi L, 2020, PROC INT CONF SOFTW, P641, DOI 10.1145/3377811.3380356
   Srivastava N, 2014, J MACH LEARN RES, V15, P1929
   Ståhl D, 2017, EMPIR SOFTW ENG, V22, P967, DOI 10.1007/s10664-016-9457-1
   Sun ZQ, 2019, Arxiv, DOI arXiv:1902.10197
   Vasilescu B, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P805, DOI 10.1145/2786805.2786850
   Voita E, 2019, Arxiv, DOI arXiv:1905.09418
   Wang C-C, 2017, ADV NEURAL INFORM PR, DOI DOI 10.48550/ARXIV.1706.02216
   Wang D. P., 2000, Phys. Rev. Lett., V86
   Wang X, 2019, WEB CONFERENCE 2019: PROCEEDINGS OF THE WORLD WIDE WEB CONFERENCE (WWW 2019), P2022, DOI 10.1145/3308558.3313562
   Xiao WX, 2022, PROC INT CONF SOFTW, P1830, DOI 10.1145/3510003.3510196
   Yang X., 2022, P AAAI C ART INT, P10816
   Yu PY, 2022, PROCEEDINGS OF THE 28TH ACM SIGKDD CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, KDD 2022, P2377, DOI 10.1145/3534678.3539482
   Yu Y, 2016, INFORM SOFTWARE TECH, V74, P204, DOI 10.1016/j.infsof.2016.01.004
   Yun S, 2019, ADV NEUR IN, V32
   Zampetti F, 2017, INT C PROGRAM COMPRE, P23, DOI 10.1109/ICPC.2017.30
   Zhang CX, 2019, KDD'19: PROCEEDINGS OF THE 25TH ACM SIGKDD INTERNATIONAL CONFERENCCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P793, DOI 10.1145/3292500.3330961
   Zhang M., 2021, Inf. Softw.Technol., V144
   Zhang Y, 2020, WORLD WIDE WEB, V23, P1589, DOI 10.1007/s11280-019-00770-1
   Zhu J., 2023, P 17 ACM INT C WEB S
NR 59
TC 0
Z9 0
U1 0
U2 0
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUL
PY 2024
VL 50
IS 7
BP 1901
EP 1920
DI 10.1109/TSE.2024.3408448
PG 20
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA YZ0O5
UT WOS:001272193600009
DA 2024-08-05
ER

PT J
AU Wang, Y
   Cui, WZ
   Wang, GG
   Wang, J
   Gong, DW
AF Wang, Yong
   Cui, Wenzhong
   Wang, Gai-Ge
   Wang, Jian
   Gong, Dunwei
TI Improving Test Data Generation for MPI Program Path Coverage With
   FERPSO-IMPR and Surrogate-Assisted Models
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Test data generation; FERPSO-IMPR; surrogate-assisted models; path
   coverage; MPI program
ID OPTIMIZATION; SELECTION
AB Message passing interface (MPI) is a powerful tool for parallel computing, originally designed for high-performance computing on massively parallel computers. In this paper, we combine FERPSO-IMPR (fitness Euclidean distance ratio particle swarm optimizer with information migration-based penalty and population reshaping) and surrogate-assisted models to generate test cases for MPI program path coverage testing. In our proposed method, FERPSO-IMPR employs a dual population strategy to initialize data and calculate fitness. Then, we create a sample set based on the initial data and its fitness. Subsequently, we train the master-slave surrogate models to predict individual fitness. Finally, a small number of elite individuals are selected to execute the program to decide whether to generate the required test data and guide the subsequent evolution process. We apply the proposed method to seven MPI programs and perform experimental comparisons from five directions. Experimental results show that compared with the comparative method, the time consumption of the proposed method is reduced by 33.2%, the number of evaluations is reduced by 38.8%, and the success rate is increased by 7.6%. These results prove that our method can effectively reduce the test data generation cost of MPI programs.
C1 [Wang, Yong; Cui, Wenzhong; Wang, Gai-Ge] Ocean Univ China, Sch Comp Sci & Technol, Qingdao 266100, Peoples R China.
   [Wang, Jian] China Univ Petr East China, Coll Sci, Qingdao 266580, Peoples R China.
   [Gong, Dunwei] Qingdao Univ Sci & Technol, Coll Automat & Elect Engn, Qingdao 266061, Shandong, Peoples R China.
C3 Ocean University of China; China University of Petroleum; Qingdao
   University of Science & Technology
RP Wang, GG (corresponding author), Ocean Univ China, Sch Comp Sci & Technol, Qingdao 266100, Peoples R China.
EM wangyong@ouc.edu.cn; cuiwenzhong@stu.ouc.edu.cn; wgg@ouc.edu.cn;
   wangjiannl@upc.edu.cn; dwgong@vip.163.com
RI WANG, JIAN/F-4224-2010; Gong, Dunwei/HDO-3693-2022
OI WANG, JIAN/0000-0002-4316-932X; Gong, Dunwei/0000-0003-2838-4301
CR Alaqail H, 2018, INT J COMPUT SCI NET, V18, P112
   Berkelaar M., 2004, EINDHOVEN U TECHNOL, V63
   Chang R., 2014, Patent No. [8,924,938, 8924938]
   Christiansen H, 2007, LECT NOTES ARTIF INT, V4571, P742
   Chugh T, 2018, IEEE T EVOLUT COMPUT, V22, P129, DOI 10.1109/TEVC.2016.2622301
   Dorigo M, 2006, IEEE COMPUT INTELL M, V1, P28, DOI 10.1109/MCI.2006.329691
   Eberhart R., 1995, P 6 INT S MICROMACH, DOI [10.1109/MHS.1995.494215, DOI 10.1109/MHS.1995.494215]
   Gong DW, 2021, ACM T SOFTW ENG METH, V30, DOI 10.1145/3423132
   Gropp W, 1996, PARALLEL COMPUT, V22, P789, DOI 10.1016/0167-8191(96)00024-5
   Guo D, 2019, IEEE T CYBERNETICS, V49, P1012, DOI 10.1109/TCYB.2018.2794503
   Hausen A. C., 2007, PROC 8 IEEE LATIN AM, P1
   Jain N, 2019, ADV INTELL SYST, V731, P699, DOI 10.1007/978-981-10-8848-3_68
   Jin YC, 2004, LECT NOTES COMPUT SC, V3102, P688
   Letko Zdenek, 2010, 2010 Proceedings of Second International Symposium on Search Based Software Engineering (SSBSE), P36, DOI 10.1109/SSBSE.2010.14
   Li GH, 2019, IEEE C EVOL COMPUTAT, P1664, DOI [10.1109/CEC.2019.8790310, 10.1109/cec.2019.8790310]
   Li HB, 2019, PROCEEDINGS OF THE 28TH INTERNATIONAL CONFERENCE ON COMPILER CONSTRUCTION (CC '19), P193, DOI 10.1145/3302516.3307353
   Li XD, 2007, GECCO 2007: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOL 1 AND 2, P78
   Liu Y, 2017, INT C COMP SUPP COOP, P521, DOI 10.1109/CSCWD.2017.8066748
   Luo JP, 2019, IEEE T CYBERNETICS, V49, P1708, DOI 10.1109/TCYB.2018.2811761
   Luo WJ, 2019, IEEE TETCI, V3, P137, DOI 10.1109/TETCI.2018.2872029
   Mirjalili S, 2019, STUD COMPUT INTELL, V780, P1, DOI 10.1007/978-3-319-93025-1
   Muller M., SLIDES PRESENTED THI
   Panichella A, 2018, IEEE T SOFTWARE ENG, V44, P122, DOI 10.1109/TSE.2017.2663435
   Pargas R. P., 1999, Software Testing, Verification and Reliability, V9, P263, DOI 10.1002/(SICI)1099-1689(199912)9:4<263::AID-STVR190>3.0.CO;2-Y
   Peng IB, 2017, ADV PARALLEL COMPUT, V30, P75, DOI 10.3233/978-1-61499-816-7-75
   Shousha M, 2008, LECT NOTES COMPUT SC, V5301, P475, DOI 10.1007/978-3-540-87875-9_34
   Souza PSL, 2014, CONCURR COMP-PRACT E, V26, P21, DOI 10.1002/cpe.2937
   Sun BC, 2023, INFORM SOFTWARE TECH, V153, DOI 10.1016/j.infsof.2022.107068
   Sun BC, 2022, IEEE T SOFTWARE ENG, V48, P1336, DOI 10.1109/TSE.2020.3019406
   Sun BC, 2019, INFORM SOFTWARE TECH, V114, P190, DOI 10.1016/j.infsof.2019.07.002
   Tian T, 2016, AUTOMAT SOFTW ENG, V23, P469, DOI 10.1007/s10515-014-0173-z
   Vilela RF, 2019, LECT NOTES COMPUT SC, V11664, P121, DOI 10.1007/978-3-030-27455-9_9
   Wang Gai-Ge, 2019, IEEE Trans Cybern, V49, P542, DOI 10.1109/TCYB.2017.2780274
   Wang HD, 2019, IEEE T EVOLUT COMPUT, V23, P203, DOI 10.1109/TEVC.2018.2834881
   Windisch A, 2007, GECCO 2007: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOL 1 AND 2, P1121
   Xanthakis S., 1992, 5 INT C SOFTWARE ENG, P625
   Xiao P, 2018, J SYST SOFTWARE, V143, P159, DOI 10.1016/j.jss.2018.05.029
   Xu ZX, 2006, INT CONF QUAL SOFTW, P107
   Yan J, 2008, INFORM PROCESS LETT, V107, P87, DOI 10.1016/j.ipl.2008.01.007
   Yang C.-S. D., 1998, Software Engineering Notes, V23, P153, DOI 10.1145/271775.271804
   Yu HB, 2018, PROC IEEE ACM INT C, P527, DOI 10.1145/3183440.3190336
   Zhongkang Lin, 2021, 2021 IEEE 6th International Conference on Signal and Image Processing (ICSIP), P568, DOI 10.1109/ICSIP52628.2021.9688597
   Zhou R, 2006, ARTIF INTELL, V170, P385, DOI 10.1016/j.artint.2005.12.002
   Zhu CW, 2016, IEEE T EVOLUT COMPUT, V20, P299, DOI 10.1109/TEVC.2015.2457245
NR 44
TC 0
Z9 0
U1 2
U2 2
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAR
PY 2024
VL 50
IS 3
BP 495
EP 511
DI 10.1109/TSE.2024.3354971
PG 17
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA LQ6H5
UT WOS:001188302300012
DA 2024-08-05
ER

PT J
AU Gong, LN
   Zhang, HX
AF Gong, Lina
   Zhang, Haoxiang
TI MR<SUP>2</SUP>-KG: A Multi-Relation Multi-Rationale Knowledge Graph for
   Modeling Software Engineering Knowledge on Stack Overflow
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Knowledge graphs; Message systems; Java; Couplings; Question answering
   (information retrieval); Software engineering; Parallel processing;
   Empirical software engineering; stack overflow; crowdsourced knowledge
   sharing; knowledge graph
ID GENERATION
AB Stack Overflow is a knowledge sharing platform where its users create and share informative content from both inside and outside the site. Prior studies have leveraged the relation across Stack Overflow posts through internal links to build services and applications to enhance the accessibility of knowledge. However, they focused on studying a knowledge unit that consists of a question post and all the associated answer posts to represent the relation. It is unknown whether such representation of knowledge on Stack Overflow could comprehensively model various complex relations among webpages, such as questions, answers, internal and external links. In addition, the rationales behind sharing knowledge on Stack Overflow have yet to be explored among distinct user groups, such as askers, answerers, readers who wish to learn. Thus, in this study, we first investigate the real-world characteristics of Stack Overflow knowledge by abstracting the complex knowledge representation into relations among its building blocks. We observe that a question thread includes three basic knowledge relations to reassemble into complex knowledge, that is, the hierarchy relation within the associated answers in a question, the coupling relation between knowledge artifacts (i.e., question or answer posts) through internal links, and the complimentary relation between Stack Overflow posts and external websites. All these three basic knowledge relations are informative and could be caused by different rationales when the crowdsourced knowledge is shared on Stack Overflow. Our findings highlight that it is necessary to propose a comprehensive knowledge graph to represent the real-world knowledge on Stack Overflow. Therefore, we further propose a Multi-Relation Multi-Rationale Knowledge Graph (MR2-KG), whose nodes represent questions, answers, and external webpages. Edges in the MR2-KG represent the rationales included in the three structures (i.e., question answering, duplicate, priori, posterior, parallelism, containment, and working examples knowledge). In addition, we develop an automated approach to model the nodes and edges to represent Stack Overflow knowledge associated with a question thread. Our case study shows that the automated knowledge representation generation can achieve an ROC AUC of 96% and MCC of 89% to identify edges in the MR2-KG. To further evaluate the applicability of MR2-KG, we develop an answer generator to help developers efficiently identify the answers that meet their intent. Our user study of 100 real-world Java questions indicates the usefulness of MR2-KG. Finally, we discuss the implications of our findings for developers, researchers, and Stack Overflow moderators.
C1 [Gong, Lina] Nanjing Univ Aeronaut & Astronaut, Coll Comp Sci & Technol, Nanjing 211106, Peoples R China.
   [Zhang, Haoxiang] Queens Univ, Sch Comp, Software Anal & Intelligence Lab SAIL, Kingston, ON K7L3N6, Canada.
C3 Nanjing University of Aeronautics & Astronautics; Queens University -
   Canada
RP Zhang, HX (corresponding author), Queens Univ, Sch Comp, Software Anal & Intelligence Lab SAIL, Kingston, ON K7L3N6, Canada.
EM gonglina@nuaa.edu.cn; haoxiang.zhang@acm.org
FU National Natural Science Foundation of China [62202223]; Natural Science
   Foundation of Jiangsu Province, China [BK20220881]
FX This work was supported in part by the National Natural Science
   Foundation of China under Grant 62202223 and in part by the Natural
   Science Foundation of Jiangsu Province, China under Grant BK20220881.
CR AlRoobaea R, 2014, 2014 SCIENCE AND INFORMATION CONFERENCE (SAI), P48, DOI 10.1109/SAI.2014.6918171
   Anderson D., 2012, Proceedings of the 18th ACM SIGKDD International Conference on Knowledge Discovery and Data Mining, KDD '12, P850, DOI [DOI 10.1145/2339530.2339665, 10.1145/2339530.2339665]
   Arora P, 2015, PROCEEDINGS OF THE 2015 IEEE/ACM INTERNATIONAL CONFERENCE ON ADVANCES IN SOCIAL NETWORKS ANALYSIS AND MINING (ASONAM 2015), P1232, DOI 10.1145/2808797.2809318
   Asaduzzaman M, 2013, IEEE WORK CONF MIN S, P97, DOI 10.1109/MSR.2013.6624015
   Baltes C., 2018, P 15 INT C MIN SOFTW, P1
   Baltes C., 2019, P 16 INT C MIN SOFTW, P1
   Baltes S, 2022, IEEE T SOFTWARE ENG, V48, P135, DOI 10.1109/TSE.2020.2981898
   Barua A, 2014, EMPIR SOFTW ENG, V19, P619, DOI 10.1007/s10664-012-9231-y
   Bauer L, 2018, 2018 CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING (EMNLP 2018), P4220
   Calefato F, 2018, INFORM SOFTWARE TECH, V94, P186, DOI 10.1016/j.infsof.2017.10.009
   Calefato F, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P430, DOI 10.1109/MSR.2015.56
   Cao F. H., 2021, P 36 IEEE ACM INT C, P1
   Chen CY, 2017, PROC INT CONF SOFTW, P450, DOI 10.1109/ICSE.2017.48
   Chen Y, 2019, 2019 CONFERENCE OF THE NORTH AMERICAN CHAPTER OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS: HUMAN LANGUAGE TECHNOLOGIES (NAACL HLT 2019), VOL. 1, P2913
   Chergui O, 2019, KNOWL-BASED SYST, V185, DOI 10.1016/j.knosys.2019.104919
   Devlin J, 2019, Arxiv, DOI arXiv:1810.04805
   Feng ZY, 2020, FINDINGS OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, EMNLP 2020, P1536
   Georgiou M., 2019, P 9 BALK C INF SEP, P1
   Gómez C, 2013, IEEE WORK CONF MIN S, P81, DOI 10.1109/MSR.2013.6624011
   Gong LA, 2023, IEEE T SOFTWARE ENG, V49, P2440, DOI 10.1109/TSE.2022.3220740
   Gong S., 2019, P IEEE ACM INT C AUT, P1
   Gutierrez C, 2021, COMMUN ACM, V64, P96, DOI [10.1145/3447772, 10.1145/3418294]
   Gwet K., 2002, "Statist. Methods Inter-Rater Reliability Assess-ment Ser., V1, P1
   Huang CR, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON WEB SERVICES (ICWS 2017), P317, DOI 10.1109/ICWS.2017.122
   Huang LX, 2017, ADV INTEL SYS RES, V156, P317
   Ji SX, 2022, IEEE T NEUR NET LEAR, V33, P494, DOI 10.1109/TNNLS.2021.3070843
   Krishna K, 1999, IEEE T SYST MAN CY B, V29, P433, DOI 10.1109/3477.764879
   Likas A, 2003, PATTERN RECOGN, V36, P451, DOI 10.1016/S0031-3203(02)00060-2
   Linares-Vásquez M, 2013, IEEE WORK CONF MIN S, P93, DOI 10.1109/MSR.2013.6624014
   Liu J., 2022, "IEEE Trans.Softw. Eng., V48, P3267
   Liu JK, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-021-10028-y
   Luo ZL, 2021, PROC INT SYMP SOFTW, P115, DOI 10.1109/ISSRE52982.2021.00024
   Mondal Saikat, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P479, DOI 10.1109/MSR.2019.00074
   Nathani D, 2019, 57TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (ACL 2019), P4710
   Reimers N, 2019, 2019 CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING AND THE 9TH INTERNATIONAL JOINT CONFERENCE ON NATURAL LANGUAGE PROCESSING (EMNLP-IJCNLP 2019), P3982
   Seaman C, 2008, ESEM'08: PROCEEDINGS OF THE 2008 ACM-IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, P149
   Seaman CB, 1999, IEEE T SOFTWARE ENG, V25, P557, DOI 10.1109/32.799955
   Shirani A, 2019, Arxiv, DOI arXiv:1905.01966
   Srba I, 2016, IEEE SOFTWARE, V33, P80, DOI 10.1109/MS.2016.34
   Toba H, 2014, INFORM SCIENCES, V261, P101, DOI 10.1016/j.ins.2013.10.030
   Wang DZ, 2022, PROC INT CONF SOFTW, P287, DOI 10.1145/3510003.3510062
   Wang SW, 2020, IEEE T SOFTWARE ENG, V46, P1024, DOI 10.1109/TSE.2018.2874470
   Wang SW, 2018, EMPIR SOFTW ENG, V23, P1552, DOI 10.1007/s10664-017-9558-5
   Wu D., 2022, "ACM Trans. Softw. Eng.Methodol., P1
   Wu YL, 2021, INFORM SCIENCES, V545, P132, DOI 10.1016/j.ins.2020.07.077
   Wu YH, 2019, EMPIR SOFTW ENG, V24, P637, DOI 10.1007/s10664-018-9634-5
   Xu A., 2018, P EMNLP WORKSH W NUT, P137
   Xu BW, 2017, IEEE INT CONF AUTOM, P706, DOI 10.1109/ASE.2017.8115681
   Yang M, 2019, KNOWL-BASED SYST, V171, P106, DOI 10.1016/j.knosys.2019.02.006
   Ye DH, 2017, EMPIR SOFTW ENG, V22, P375, DOI 10.1007/s10664-016-9430-z
   Yin H, 2021, 2021 IEEE INTERNATIONAL CONFERENCE ON WEB SERVICES, ICWS 2021, P251, DOI 10.1109/ICWS53863.2021.00043
   Zhang HX, 2021, IEEE T SOFTWARE ENG, V47, P2520, DOI 10.1109/TSE.2019.2954319
   Zhang HX, 2021, IEEE T SOFTWARE ENG, V47, P850, DOI 10.1109/TSE.2019.2906315
   Zhang JX, 2021, IEEE T SOFTWARE ENG, V47, P1299, DOI 10.1109/TSE.2019.2919304
   Zhang SP, 2020, ADV FUNCT MATER, V30, DOI 10.1002/adfm.202001592
   Zhang T, 2020, PROC IEEE INT CONF S, P70, DOI 10.1109/ICSME46990.2020.00017
   Zhao XJ, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P56, DOI 10.1109/SANER.2017.7884609
   Zhou C, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P944, DOI 10.1145/3236024.3275428
NR 58
TC 0
Z9 0
U1 0
U2 0
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUL
PY 2024
VL 50
IS 7
BP 1867
EP 1887
DI 10.1109/TSE.2024.3403108
PG 21
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA YZ0O5
UT WOS:001272193600006
DA 2024-08-05
ER

PT J
AU Tu, HX
   Zhou, ZD
   Jiang, H
   Yusuf, INB
   Li, YX
   Jiang, LX
AF Tu, Haoxin
   Zhou, Zhide
   Jiang, He
   Yusuf, Imam Nur Bani
   Li, Yuxian
   Jiang, Lingxiao
TI Isolating Compiler Bugs by Generating Effective Witness Programs With
   Large Language Models
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Software debugging; bug isolation; compilers; GCC; LLVM; reinforcement
   learning; large language models (LLMs); Software debugging; bug
   isolation; compilers; GCC; LLVM; reinforcement learning; large language
   models (LLMs)
AB Compiler bugs pose a significant threat to safety-critical applications, and promptly as well as effectively isolating these bugs is crucial for assuring the quality of compilers. However, the limited availability of debugging information on reported bugs complicates the compiler bug isolation task. Existing compiler bug isolation approaches convert the problem into a test program mutation problem, but they are still limited by ineffective mutation strategies or high human effort requirements. Drawing inspiration from the recent progress of pre-trained Large Language Models (LLMs), such as ChatGPT, in code generation, we propose a new approach named LLM4CBI to utilize LLMs to generate effective test programs for compiler bug isolation. However, using LLMs directly for test program mutation may not yield the desired results due to the challenges associated with formulating precise prompts and selecting specialized prompts. To overcome the challenges, three new components are designed in LLM4CBI. First, LLM4CBI utilizes a program complexity-guided prompt production component, which leverages data and control flow analysis to identify the most valuable variables and locations in programs for mutation. Second, LLM4CBI employs a memorized prompt selection component, which adopts reinforcement learning to select specialized prompts for mutating test programs continuously. Third, a test program validation component is proposed to select specialized feedback prompts to avoid repeating the same mistakes during the mutation process. Compared with the state-of-the-art approaches (DiWi and RecBi) over 120 real bugs from the two most popular compilers, namely GCC and LLVM, our evaluation demonstrates the advantages of LLM4CBI: It can isolate 69.70%/21.74% and 24.44%/8.92% more bugs than DiWi and RecBi within Top-1/Top-5 ranked results. Additionally, we demonstrate that the LLMs component (i.e., GPT-3.5) used in LLM4CBI can be easily replaced by other LLMs while still achieving reasonable results in comparison to related studies.
C1 [Tu, Haoxin; Zhou, Zhide; Jiang, He] Dalian Univ Technol, Sch Software, Dalian 116621, Peoples R China.
   [Tu, Haoxin; Yusuf, Imam Nur Bani; Li, Yuxian; Jiang, Lingxiao] Singapore Management Univ, Sch Comp & Informat Syst, Singapore 188065, Singapore.
   [Zhou, Zhide; Jiang, He] Key Lab Ubiquitous Network & Serv Software Liaonin, Dalian 116621, Peoples R China.
   [Jiang, He] DUT Artificial Intelligence, Dalian 116085, Peoples R China.
C3 Dalian University of Technology; Singapore Management University
RP Jiang, H (corresponding author), Dalian Univ Technol, Sch Software, Dalian 116621, Peoples R China.; Jiang, H (corresponding author), Key Lab Ubiquitous Network & Serv Software Liaonin, Dalian 116621, Peoples R China.; Jiang, H (corresponding author), DUT Artificial Intelligence, Dalian 116085, Peoples R China.
EM haoxintu@gmail.com; cszide@gmail.com; jianghe@dlut.edu.cn;
   imamy.2020@phdcs.smu.edu.sg; liyuxianjnu@gmail.com; lxjiang@smu.edu.sg
FU National Natural Science Foundation of China [62032004, 62302077]; China
   Postdoctoral Science Foundation [2023M730472]
FX This work was supported in part by the National Natural Science
   Foundation of China under Grant 62032004 and Grant 62302077, and in part
   by China Postdoctoral Science Foundation under Grant 2023M730472
CR Abreu R, 2007, TAIC PART 2007 - TESTING: ACADEMIC AND INDUSTRIAL CONFERENCE - PRACTICE AND RESEARCH TECHNIQUES, PROCEEDINGS, P89, DOI 10.1109/TAIC.PART.2007.13
   Ahmad WU, 2021, 2021 CONFERENCE OF THE NORTH AMERICAN CHAPTER OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS: HUMAN LANGUAGE TECHNOLOGIES (NAACL-HLT 2021), P2655
   Aho A.V., 2006, Compilers: Principles, Techniques, and Tools, VSecond
   Anand Yuvanesh., Gpt4all: Training an assistant-style chatbot with large scale data distillation from gpt-3.5-turbo
   Arcuri A, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1, DOI 10.1145/1985793.1985795
   Brown T., 2020, ADV NEURAL INFORM PR, V33, P1877, DOI DOI 10.48550/ARXIV.2005.14165
   Cassano F, 2023, IEEE T SOFTWARE ENG, V49, P3675, DOI 10.1109/TSE.2023.3267446
   Chang Bor-YuhEvan., 2005, Workshop on Types in Language Design and Implementation (TLDI), P91
   Chen JJ, 2020, IEEE INT CONF AUTOM, P78, DOI 10.1145/3324884.3416570
   Chen JJ, 2020, ACM COMPUT SURV, V53, DOI 10.1145/3363562
   Chen JJ, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P223, DOI 10.1145/3338906.3338957
   Chiang W.-L., VICUNA OPEN SOURCE C
   Deng YL, 2023, PROCEEDINGS OF THE 32ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, ISSTA 2023, P423, DOI 10.1145/3597926.3598067
   Devlin J, 2019, Arxiv, DOI arXiv:1810.04805
   Falcon LLM Team, 2023, Arxiv, DOI [arXiv:2311.16867, DOI 10.48550/ARXIV.2311.16867]
   Fan ZY, 2022, Arxiv, DOI arXiv:2205.10583
   Feng ZY, 2020, FINDINGS OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, EMNLP 2020, P1536
   Fried D., 2022, Incoder. A generative model for code infilling and synthesis, P1
   GNU, Gcov
   Gong L, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P67, DOI 10.1109/ICSM.2012.6405255
   Grondman I, 2012, IEEE T SYST MAN CY C, V42, P1291, DOI 10.1109/TSMCC.2012.2218595
   Guo D., 2020, P 11 INT C LEARN REP, P1
   Harris CB, 2016, DES AUT TEST EUROPE, P966
   Holmes J, 2020, SOFTW TEST VERIF REL, V30, DOI 10.1002/stvr.1727
   Holmes J, 2018, PROC INT SYMP SOFTW, P166, DOI 10.1109/ISSRE.2018.00027
   Iyer S, 2018, 2018 CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING (EMNLP 2018), P1643
   Jeffrey D., 2008, P ACM SIGSOFT INT S, P167
   Jiang H, 2021, IEEE T SOFTWARE ENG, V48, P2339, DOI 10.1109/TSE.2021.3058671
   Kaelbling LP, 1996, J ARTIF INTELL RES, V4, P237, DOI 10.1613/jair.301
   Kirchner F, 2015, FORM ASP COMPUT, V27, P573, DOI 10.1007/s00165-014-0326-7
   Klees G, 2018, PROCEEDINGS OF THE 2018 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY (CCS'18), P2123, DOI 10.1145/3243734.3243804
   Konda VR, 2000, ADV NEUR IN, V12, P1008
   Lee J, 2017, ACM SIGPLAN NOTICES, V52, P633, DOI [10.1145/3140587.3062343, 10.1145/3062341.3062343]
   Lim HC, 2023, PROCEEDINGS OF THE 32ND ACM SIGPLAN INTERNATIONAL CONFERENCE ON COMPILER CONSTRUCTION, CC 2023, P145, DOI 10.1145/3578360.3580260
   Lim H, 2021, PROCEEDINGS OF THE 17TH ACM SIGPLAN/SIGOPS INTERNATIONAL CONFERENCE ON VIRTUAL EXECUTION ENVIRONMENTS (VEE '21), P153, DOI 10.1145/3453933.3454021
   Ling W, 2016, PROCEEDINGS OF THE 54TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, VOL 1, P599
   Liu J, 2023, arXiv
   Liu PF, 2023, ACM COMPUT SURV, V55, DOI 10.1145/3560815
   Liu Y., 2019, arXiv
   Liu Z, 2022, Arxiv, DOI arXiv:2212.04732
   Ma W, 2024, Arxiv, DOI arXiv:2305.12138
   Manning C.D., 2008, Introduction to information retrieval
   McCabe T. J., 1976, IEEE Transactions on Software Engineering, VSE-2, P308, DOI 10.1109/TSE.1976.233837
   Mnih V, 2013, Arxiv, DOI arXiv:1312.5602
   Mnih V, 2016, PR MACH LEARN RES, V48
   Moon S, 2014, 2014 IEEE SEVENTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST), P153, DOI 10.1109/ICST.2014.28
   Newman CD, 2016, 2016 IEEE/ACM 38TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING COMPANION (ICSE-C), P621, DOI 10.1145/2889160.2889173
   Nijkamp E., 2023, P 11 INT C LEARN REP
   Niu CA, 2023, Arxiv, DOI arXiv:2302.04026
   openai, ChatGPT: Optimizing language models for dialogue
   P. Foundation, Pytorch
   Pearson S, 2017, PROC INT CONF SOFTW, P609, DOI 10.1109/ICSE.2017.62
   Penedo G, 2023, Arxiv, DOI [arXiv:2306.01116, DOI 10.48550/ARXIV.2306.01116]
   R. Laboratories, Oclint
   Renieris M, 2003, 18TH IEEE INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P30, DOI 10.1109/ASE.2003.1240292
   Reynolds L, 2021, EXTENDED ABSTRACTS OF THE 2021 CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS (CHI'21), DOI 10.1145/3411763.3451760
   Stability-AI, StableL.M: Stability Al language models
   Sun C., 2016, P 25 INT S SOFTWARE, P294, DOI DOI 10.1145/2931037.2931074
   Sutskever I., 2014, Advances in Neural Information Processing Systems, P3104
   Sutton RS, 2018, ADAPT COMPUT MACH LE, P1
   Sutton RS, 2000, ADV NEUR IN, V12, P1057
   Taori R., Stanford Alpaca: An Instruction-following LLaMA model
   Thakur S, 2023, DES AUT TEST EUROPE, DOI 10.23919/DATE56975.2023.10137086
   Theodoridis T, 2022, ASPLOS '22: PROCEEDINGS OF THE 27TH ACM INTERNATIONAL CONFERENCE ON ARCHITECTURAL SUPPORT FOR PROGRAMMING LANGUAGES AND OPERATING SYSTEMS, P697, DOI 10.1145/3503222.3507764
   Touvron H, 2023, Arxiv, DOI [arXiv:2302.13971, DOI 10.48550/ARXIV.2302.13971]
   Tu HX, 2022, PROC INT SYMP SOFTW, P529, DOI 10.1109/ISSRE55969.2022.00057
   Tu HX, 2023, IEEE T RELIAB, V72, P343, DOI 10.1109/TR.2022.3171220
   Vargha A, 2000, J EDUC BEHAV STAT, V25, P101, DOI 10.3102/10769986025002101
   Vaswani A., 2017, Advances in neural information processing systems, P5998
   Wang X., 2012, P AS PAC WORKSH SYST, P1
   Wang X, 2013, SOSP'13: PROCEEDINGS OF THE TWENTY-FOURTH ACM SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES, P260, DOI 10.1145/2517349.2522728
   Wang Y, 2023, Arxiv, DOI arXiv:2305.07922
   Wen M, 2021, IEEE T SOFTWARE ENG, V47, P2348, DOI 10.1109/TSE.2019.2948158
   White J, 2023, Arxiv, DOI [arXiv:2302.11382, DOI 10.48550/ARXIV.2302.11382, 10.48550/arXiv.2302.11382]
   Wong WE, 2016, IEEE T SOFTWARE ENG, V42, P707, DOI 10.1109/TSE.2016.2521368
   Xia CS, 2023, PROC INT CONF SOFTW, P1482, DOI 10.1109/ICSE48619.2023.00129
   Xu C, 2023, Arxiv, DOI [arXiv:2304.12244, DOI 10.48550/ARXIV.2304.12244]
   Xu Frank F., 2022, MAPS 2022: Proceedings of the 6th ACM SIGPLAN International Symposium on Machine Programming, P1, DOI 10.1145/3520312.3534862
   Xu XF, 2011, INT J SOFTW ENG KNOW, V21, P803, DOI 10.1142/S0218194011005505
   Xuan JF, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P52, DOI 10.1145/2635868.2635906
   Yang J, 2022, EUR CON SFTWR MTNCE, P481, DOI 10.1109/SANER53432.2022.00065
   Yang XJ, 2011, PLDI 11: PROCEEDINGS OF THE 2011 ACM CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P283
   Yang YT, 2024, FRONT COMPUT SCI-CHI, V18, DOI 10.1007/s11704-023-2639-2
   Yang ZL, 2019, ADV NEUR IN, V32
   Yu YB, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P201, DOI 10.1145/1368088.1368116
   Zeller A., 2002, Software Engineering Notes, V27, P1, DOI 10.1145/605466.605468
   Zhang Z, 2024, FRONT COMPUT SCI-CHI, V18, DOI 10.1007/s11704-023-2597-8
   Zhang Z, 2024, FRONT COMPUT SCI-CHI, V18, DOI 10.1007/s11704-023-2521-2
   Zhou ZD, 2022, IEEE T RELIAB, V71, P896, DOI 10.1109/TR.2022.3165378
NR 89
TC 0
Z9 0
U1 0
U2 0
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUL
PY 2024
VL 50
IS 7
BP 1768
EP 1788
DI 10.1109/TSE.2024.3397822
PG 21
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA YZ0O5
UT WOS:001272193600013
OA Green Submitted
DA 2024-08-05
ER

PT J
AU Niu, ZF
   Casale, G
AF Niu, Zifeng
   Casale, Giuliano
TI Neural Density Estimation of Response Times in Layered Software Systems
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Quality of Service; response time density estimation; layered queueing
   networks; phase-type distributions; mixture density networks
ID NETWORKS; PERFORMANCE; MODEL
AB Layered queueing networks (LQNs) are a class of performance models for software systems in which multiple distributed resources may be possessed simultaneously by a job. Estimating response times in a layered system is an essential but challenging analysis dimension in Quality of Service (QoS) assessment. Current analytic methods are capable of providing accurate estimates of mean response times. However, accurately approximating response time distributions used in service-level objective analysis is a demanding task. This paper proposes a novel hybrid framework that leverages phase-type (PH) distributions and neural networks to provide accurate density estimates of response times in layered queueing networks. The core step of this framework is to recursively obtain response time distributions in the submodels that are used to analyze the network by means of decomposition. We describe these response time distributions as a mixture of density functions for which we learn the parameters through a Mixture Density Network (MDN). The approach recursively propagates MDN predictions across software layers using PH distributions and performs repeated moment-matching based refitting to efficiently estimate end-to-end response time densities. Extensive numerical experiment results show that our scheme significantly improves density estimations compared to the state-of-the-art.
C1 [Niu, Zifeng; Casale, Giuliano] Imperial Coll London, Dept Comp, London SW7 2AZ, England.
C3 Imperial College London
RP Niu, ZF (corresponding author), Imperial Coll London, Dept Comp, London SW7 2AZ, England.
EM zifeng.niu19@imperial.ac.uk; g.casale@imperial.ac.uk
OI Casale, Giuliano/0000-0003-4548-7951; Niu, Zifeng/0000-0002-9982-4848
CR Balsamo S, 2004, IEEE T SOFTWARE ENG, V30, P295, DOI 10.1109/TSE.2004.9
   BASKETT F, 1975, J ACM, V22, P248, DOI 10.1145/321879.321887
   Bertoli Marco, 2009, Performance Evaluation Review, V36, P10, DOI 10.1145/1530873.1530877
   Bishop C.M., 1994, Workingpaper, DOI DOI 10.1007/978-3-322-81570-58
   Bobbio A, 2005, STOCH MODELS, V21, P303, DOI 10.1081/STM-200056210
   Bolch G., 2006, Queueing Networks and Markov Chains, VSecond
   Bruell SC., 1980, Computational Algorithms for Closed Queuing Networks
   Casale G, 2020, WINT SIMUL C PROC, P2377, DOI 10.1109/WSC48552.2020.9383931
   Casale G, 2010, PERFORM EVALUATION, V67, P873, DOI 10.1016/j.peva.2009.12.003
   CHANDY KM, 1982, COMMUN ACM, V25, P126, DOI 10.1145/358396.358403
   Clevert DA, 2016, Arxiv, DOI [arXiv:1511.07289, DOI 10.48550/ARXIV.1511.07289]
   Cortellessa V, 2011, MODEL-BASED SOFTWARE PERFORMANCE ANALYSIS, P1, DOI 10.1007/978-3-642-13621-4
   CUMANI A, 1982, MICROELECTRON RELIAB, V22, P583, DOI 10.1016/0026-2714(82)90033-6
   Davis CN, 2020, PLOS COMPUT BIOL, V16, DOI 10.1371/journal.pcbi.1006869
   Franks G., 2005, Layered Queueing Network Solver and Simulator User Manual, Real-time and Distributed Systems Lab
   Franks G., 2006, Computer System Performance Modeling In Perspective: A Tribute to the Work of Professor Kenneth C. Sevcik, P137
   Franks G., 2000, Performance analysis of distributed server systems
   Franks G, 2009, IEEE T SOFTWARE ENG, V35, P148, DOI 10.1109/TSE.2008.74
   Gias AU, 2019, INT CON DISTR COMP S, P1994, DOI 10.1109/ICDCS.2019.00197
   Guillaumes A. B., 2017, Mixture density networks for distribution and uncertainty estimation
   Harrison P. G., 2002, Performance Evaluation Review, V30, P77, DOI 10.1145/511399.511345
   Harrison P. G., 1993, Performance Evaluation of Computer and Communication Systems. Joint Tutorial Papers Performance '93 and Sigmetrics '93, P147, DOI 10.1007/BFb0013852
   Islam F., 2018, Simplifying layered queuing network models
   KURTZ TG, 1970, J APPL PROBAB, V7, P49, DOI 10.2307/3212147
   Li C, 2019, PROC CVPR IEEE, P9879, DOI 10.1109/CVPR.2019.01012
   MASSEY FJ, 1951, J AM STAT ASSOC, V46, P68, DOI 10.2307/2280095
   Mostafavi SS, 2021, 2021 ACM/IEEE 6TH SYMPOSIUM ON EDGE COMPUTING (SEC 2021), P416, DOI 10.1145/3453142.3493506
   Neuts M., 1981, Matrix-geometric Solutions in Stochastic Models-An Algorithmic Approach
   Nguyen HQ, 2021, LECT NOTES COMPUT SC, V13104, P148, DOI 10.1007/978-3-030-91825-5_9
   Niu Z., 2021, PROC 29 INT S MODEL, P1
   Omari T., 2007, P 6 INT WORKSHOP SOF, P66
   Petriu DC, 2021, SOFTW SYST MODEL, V20, P1777, DOI 10.1007/s10270-021-00953-3
   Raeis M, 2019, INT CONF NETW SER
   REISER M, 1975, IBM J RES DEV, V19, P283, DOI 10.1147/rd.193.0283
   REISER M, 1980, J ACM, V27, P313, DOI 10.1145/322186.322195
   REISER M, 1979, IEEE T COMMUN, V27, P1199, DOI 10.1109/TCOM.1979.1094531
   ROLIA JA, 1995, IEEE T SOFTWARE ENG, V21, P689, DOI 10.1109/32.403785
   Ruuskanen J., 2021, ACM SIGMETRICS Perform. Eval. Rev., V151
   Smith C.U., 1990, Performance engineering of software systems, VSeventh
   Tribastone M, 2013, IEEE T SOFTWARE ENG, V39, P744, DOI 10.1109/TSE.2012.66
   Wang R., 2023, ACM Trans. Model. Comput. Simul., V33, P1
   WOODSIDE CM, 1995, IEEE T COMPUT, V44, P20, DOI 10.1109/12.368012
   Woodside M., 2002, Tutorial introduction to layered modeling of software performance
   Woodside M, 2021, COMPANION OF THE ACM/SPEC INTERNATIONAL CONFERENCE ON PERFORMANCE ENGINEERING, ICPE 2021, P145, DOI 10.1145/3447545.3451203
   Woodside M, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P171, DOI 10.1109/FOSE.2007.32
   Zheng T., 2005, PROC 5 INT WORKSHOP, P181
   Zhu LL, 2020, PERFORM EVALUATION, V139, DOI 10.1016/j.peva.2020.102094
NR 47
TC 0
Z9 0
U1 0
U2 0
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAR
PY 2024
VL 50
IS 3
BP 636
EP 650
DI 10.1109/TSE.2024.3360093
PG 15
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA LQ6H5
UT WOS:001188302300001
DA 2024-08-05
ER

PT J
AU Li, YH
   Dang, XQ
   Pian, WG
   Habib, A
   Klein, J
   Bissyande, TF
AF Li, Yinghua
   Dang, Xueqi
   Pian, Weiguo
   Habib, Andrew
   Klein, Jacques
   Bissyande, Tegawende F.
TI Test Input Prioritization for Graph Neural Networks
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Test input prioritization; graph neural networks; mutation analysis;
   learning to rank; labelling
ID MINIMIZATION; ALGORITHMS; PREDICTION; MODEL
AB GNNs have shown remarkable performance in a variety of classification tasks. The reliability of GNN models needs to be thoroughly validated before their deployment to ensure their accurate functioning. Therefore, effective testing is essential for identifying vulnerabilities in GNN models. However, given the complexity and size of graph-structured data, the cost of manual labelling of GNN test inputs can be prohibitively high for real-world use cases. Although several approaches have been proposed in the general domain of Deep Neural Network (DNN) testing to alleviate this labelling cost issue, these approaches are not suitable for GNNs because they do not account for the interdependence between GNN test inputs, which is crucial for GNN inference. In this paper, we propose NodeRank, a novel test prioritization approach specifically for GNNs, guided by ensemble learning-based mutation analysis. Inspired by traditional mutation testing, where specific operators are applied to mutate code statements to identify whether provided test cases reveal faults, NodeRank operates on a crucial premise: If a test input (node) can kill many mutated models and produce different prediction results with many mutated inputs, this input is considered more likely to be misclassified by the GNN model and should be prioritized higher. Through prioritization, these potentially misclassified inputs can be identified earlier with limited manual labeling cost. NodeRank introduces mutation operators suitable for GNNs, focusing on three key aspects: the graph structure, the features of the graph nodes, and the GNN model itself. NodeRank generates mutants and compares their predictions against that of the initial test inputs. Based on the comparison results, a mutation feature vector is generated for each test input and used as the input to ranking models for test prioritization. Leveraging ensemble learning techniques, NodeRank combines the prediction results of the base ranking models and produces a misclassification score for each test input, which can indicate the likelihood of this input being misclassified. NodeRank sorts all the test inputs based on their scores in descending order. To evaluate NodeRank, we build 124 GNN subjects (i.e., a pair of dataset and GNN model), incorporating both natural and adversarial contexts. Our results demonstrate that NodeRank outperforms all the compared test prioritization approaches in terms of both APFD and PFD, which are widely-adopted metrics in this field. Specifically, NodeRank achieves an average improvement of between 4.41% and 58.11% on original datasets and between 4.96% and 62.15% on adversarial datasets.
C1 [Li, Yinghua; Dang, Xueqi; Pian, Weiguo; Habib, Andrew; Klein, Jacques; Bissyande, Tegawende F.] Univ Luxembourg, L-1359 Kirchberg, Luxembourg.
C3 University of Luxembourg
RP Dang, XQ (corresponding author), Univ Luxembourg, L-1359 Kirchberg, Luxembourg.
EM yinghua.li@uni.lu; xueqi.dang@uni.lu; weiguo.pian@uni.lu;
   andrew.a.habib@gmail.com; jacques.klein@uni.lu;
   tegawende.bissyande@uni.lu
OI Pian, Weiguo/0000-0002-4653-7415; Klein, Jacques/0000-0003-4052-475X;
   Bissyande, Tegawende F./0000-0001-7270-9869; LI,
   Yinghua/0000-0003-1390-0393; Dang, Xueqi/0000-0003-4097-9543
FU European Research Council (ERC) through the European Union#x02019;s
   Horizon 2020
FX No Statement Available
CR Arcuri A, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1, DOI 10.1145/1985793.1985795
   Belli F, 2007, APPL INTELL, V26, P161, DOI 10.1007/s10489-006-0008-0
   Bojchevski A., 2019, INT C MACHINE LEARNI, P695
   Bongini P, 2021, NEUROCOMPUTING, V450, P242, DOI 10.1016/j.neucom.2021.04.039
   Breiman L., 2001, Machine Learning, V45, P5, DOI 10.1023/A:1010933404324
   Byun T, 2019, 2019 IEEE INTERNATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE TESTING (AITEST), P63, DOI 10.1109/AITest.2019.000-6
   Che DS, 2011, ADV EXP MED BIOL, V696, P191, DOI 10.1007/978-1-4419-7046-6_19
   Chen JF, 2022, 2022 INTERNATIONAL CONFERENCE ON BIG DATA, INFORMATION AND COMPUTER NETWORK (BDICN 2022), P492, DOI 10.1109/BDICN55575.2022.00096
   Chen JS, 2020, ACM T SOFTW ENG METH, V29, DOI 10.1145/3391613
   Chen JJ, 2021, IEEE T SOFTWARE ENG, V47, P261, DOI 10.1109/TSE.2018.2889771
   Chen JJ, 2017, PROC INT CONF SOFTW, P700, DOI 10.1109/ICSE.2017.70
   Chen TQ, 2016, KDD'16: PROCEEDINGS OF THE 22ND ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P785, DOI 10.1145/2939672.2939785
   Chryssolouris G, 1996, IEEE T NEURAL NETWOR, V7, P229, DOI 10.1109/72.478409
   Cohen J., 2016, "A power primer
   Dang XQ, 2024, IEEE T SOFTWARE ENG, V50, P413, DOI 10.1109/TSE.2024.3350019
   Dang XQ, 2024, ACM T SOFTW ENG METH, V33, DOI 10.1145/3607191
   Deng L, 2015, IEEE ICST WORKSHOP
   Deng L, 2017, INFORM SOFTWARE TECH, V81, P154, DOI 10.1016/j.infsof.2016.04.012
   Di Nardo D, 2013, 2013 IEEE SIXTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST 2013), P302, DOI 10.1109/ICST.2013.27
   Divina F, 2018, ENERGIES, V11, DOI 10.3390/en11040949
   Do H, 2006, IEEE T SOFTWARE ENG, V32, P733, DOI 10.1109/TSE.2006.92
   Dong XB, 2020, FRONT COMPUT SCI-CHI, V14, P241, DOI 10.1007/s11704-019-8208-z
   Du J, 2018, Arxiv, DOI [arXiv:1710.10370, 10.48550/arXiv.1710.10370]
   Elbaum S, 2002, IEEE T SOFTWARE ENG, V28, P159, DOI 10.1109/32.988497
   Fan WQ, 2019, WEB CONFERENCE 2019: PROCEEDINGS OF THE WORLD WIDE WEB CONFERENCE (WWW 2019), P417, DOI 10.1145/3308558.3313488
   Geisler Simon, 2021, Advances in Neural Information Processing Systems, V34
   Goel P, 2022, MULTIMED TOOLS APPL, V81, P43229, DOI 10.1007/s11042-022-12930-z
   Gökçe N, 2006, LECT NOTES COMPUT SC, V4263, P1060
   Gökçe N, 2015, TURK J ELECTR ENG CO, V23, P623, DOI 10.3906/elk-1209-109
   Gori M, 2005, IEEE IJCNN, P729
   Guerriero A, 2021, PROC INT CONF SOFTW, P348, DOI 10.1109/ICSE43902.2021.00042
   Henard C, 2016, PROC INT CONF SOFTW, P523, DOI 10.1145/2884781.2884791
   Hospedales T, 2022, IEEE T PATTERN ANAL, V44, P5149, DOI 10.1109/TPAMI.2021.3079209
   Hu Q, 2021, 2021 36TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING ASE 2021, P917, DOI 10.1109/ASE51524.2021.9678672
   Hu Q, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P1158, DOI 10.1109/ASE.2019.00126
   Humbatova N, 2021, ISSTA '21: PROCEEDINGS OF THE 30TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P67, DOI 10.1145/3460319.3464825
   Jia Y, 2011, IEEE T SOFTWARE ENG, V37, P649, DOI 10.1109/TSE.2010.62
   Jiang MJ, 2020, RSC ADV, V10, P20701, DOI 10.1039/d0ra02297g
   Ke GL, 2017, ADV NEUR IN, V30
   Kelley K, 2012, PSYCHOL METHODS, V17, P137, DOI 10.1037/a0028086
   Kim B, 2016, ADV NEUR IN, V29
   Kim J, 2019, PROC INT CONF SOFTW, P1039, DOI 10.1109/ICSE.2019.00108
   Li C, 2017, PROCEEDINGS OF THE 26TH INTERNATIONAL CONFERENCE ON WORLD WIDE WEB (WWW'17), P577, DOI 10.1145/3038912.3052643
   Li Y., 2023, ACM Transactions on Software Engineering and Methodology
   Li YX, 2020, Arxiv, DOI arXiv:2005.06149
   Li ZN, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P499, DOI 10.1145/3338906.3338930
   LITTLESTONE N, 1994, INFORM COMPUT, V108, P212, DOI 10.1006/inco.1994.1009
   Liu ZW, 2020, PROCEEDINGS OF THE 43RD INTERNATIONAL ACM SIGIR CONFERENCE ON RESEARCH AND DEVELOPMENT IN INFORMATION RETRIEVAL (SIGIR '20), P1569, DOI 10.1145/3397271.3401253
   Loise T, 2017, IEEE ICST WORKSHOP, P97, DOI 10.1109/ICSTW.2017.24
   Lou YL, 2015, 2015 IEEE 26TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING (ISSRE), P46, DOI 10.1109/ISSRE.2015.7381798
   Ma J, 2020, ADV NEURAL INFORM PR
   Ma L, 2018, IEEE INT CONF AUTOM, P120, DOI 10.1145/3238147.3238202
   Ma L, 2019, 2019 IEEE 26TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER), P614, DOI [10.1109/saner.2019.8668044, 10.1109/SANER.2019.8668044]
   Ma L, 2018, PROC INT SYMP SOFTW, P100, DOI 10.1109/ISSRE.2018.00021
   Ma W, 2021, ACM T SOFTW ENG METH, V30, DOI 10.1145/3417330
   Madry A, 2019, Arxiv, DOI arXiv:1706.06083
   McKnight P. E., 2010, The Corsini Encyclopedia of Psychology, P1
   Meyes R., 2019, P INT C ART INT ICAI, P185
   Mienye ID, 2022, IEEE ACCESS, V10, P99129, DOI 10.1109/ACCESS.2022.3207287
   Mohammed A, 2022, J KING SAUD UNIV-COM, V34, P8825, DOI 10.1016/j.jksuci.2021.11.001
   Kipf TN, 2017, Arxiv, DOI arXiv:1609.02907
   Nguyen QH, 2021, MATH PROBL ENG, V2021, DOI 10.1155/2021/4832864
   Papadakis M, 2019, ADV COMPUT, V112, P275, DOI 10.1016/bs.adcom.2018.03.015
   Papadakis M, 2014, 2014 IEEE SEVENTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST), P1, DOI 10.1109/ICST.2014.11
   Paszke A, 2019, ADV NEUR IN, V32
   Pei KX, 2017, PROCEEDINGS OF THE TWENTY-SIXTH ACM SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES (SOSP '17), P1, DOI 10.1145/3132747.3132785
   Pian Y., 2020, arXiv
   Polikar R, 2012, ENSEMBLE MACHINE LEARNING: METHODS AND APPLICATIONS, P1, DOI 10.1007/978-1-4419-9326-7_1
   Rozemberczki B, 2020, CIKM '20: PROCEEDINGS OF THE 29TH ACM INTERNATIONAL CONFERENCE ON INFORMATION & KNOWLEDGE MANAGEMENT, P1325, DOI 10.1145/3340531.3411866
   Sagi O, 2018, WIRES DATA MIN KNOWL, V8, DOI 10.1002/widm.1249
   Scarselli F, 2009, IEEE T NEURAL NETWOR, V20, P61, DOI 10.1109/TNN.2008.2005605
   Shen WJ, 2018, 2018 IEEE 18TH INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY AND SECURITY COMPANION (QRS-C), P108, DOI 10.1109/QRS-C.2018.00032
   Shi CC, 2020, Arxiv, DOI [arXiv:2001.09382, DOI 10.48550/ARXIV.2001.09382]
   Shin D, 2019, SOFTW TEST VERIF REL, V29, DOI 10.1002/stvr.1695
   Sun C, 2019, PROC CVPR IEEE, P273, DOI 10.1109/CVPR.2019.00036
   Tie-Yan Liu, 2009, Foundations and Trends in Information Retrieval, V3, P225, DOI 10.1561/1500000016
   Velickovic P., 2018, P INT C LEARN REPR
   Veličkovic P, 2018, Arxiv, DOI arXiv:1710.10903
   Wang C-C, 2017, ADV NEURAL INFORM PR, DOI DOI 10.48550/ARXIV.1706.02216
   Wang D, 2014, IEEE IJCNN, P112, DOI 10.1109/IJCNN.2014.6889457
   Wang Z, 2021, PROC INT CONF SOFTW, P397, DOI 10.1109/ICSE43902.2021.00046
   Weiss M, 2022, PROCEEDINGS OF THE 31ST ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, ISSTA 2022, P139, DOI 10.1145/3533767.3534375
   Wright R.E., 1995, Logistic regression
   Wu F, 2019, PR MACH LEARN RES, V97
   Wu HJ, 2019, Arxiv, DOI arXiv:1903.01610
   Wu SW, 2023, ACM COMPUT SURV, V55, DOI 10.1145/3535101
   Xu Kaidi, 2019, arXiv
   Yang Feng, 2020, ISSTA '20: Proceedings of the 29th ACM SIGSOFT International Symposium on Software Testing and Analysis, P177, DOI 10.1145/3395363.3397357
   Yang Z, 2016, PR MACH LEARN RES, V48
   Ying R, 2018, KDD'18: PROCEEDINGS OF THE 24TH ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY & DATA MINING, P974, DOI 10.1145/3219819.3219890
   Yoo S, 2012, SOFTW TEST VERIF REL, V22, P67, DOI [10.1002/stv.430, 10.1002/stvr.430]
   Zhang L, 2019, Arxiv, DOI arXiv:1901.00054
   Zhou Z-H., 2021, Machine Learning, DOI [DOI 10.1007/978-981-15-1967-3, DOI 10.1007/978-981-15-1967-38, 10.1007/978-981-15-1967-3]
   Zou X, 2021, KDD '21: PROCEEDINGS OF THE 27TH ACM SIGKDD CONFERENCE ON KNOWLEDGE DISCOVERY & DATA MINING, P2461, DOI 10.1145/3447548.3467314
   Zügner D, 2024, Arxiv, DOI arXiv:1902.08412
   Zügner D, 2018, KDD'18: PROCEEDINGS OF THE 24TH ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY & DATA MINING, P2847, DOI 10.1145/3219819.3220078
NR 96
TC 0
Z9 0
U1 0
U2 0
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUN
PY 2024
VL 50
IS 6
BP 1396
EP 1424
DI 10.1109/TSE.2024.3385538
PG 29
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA UL2G2
UT WOS:001248142900016
OA hybrid
DA 2024-08-05
ER

PT J
AU Brandt, C
   Khatami, A
   Wessel, M
   Zaidman, A
AF Brandt, Carolin
   Khatami, Ali
   Wessel, Mairieli
   Zaidman, Andy
TI Shaken, Not Stirred: How Developers Like Their Amplified Tests
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Fuzzing; Test pattern generators; Testing; Computer crashes; Writing;
   Java; Codes; Software testing; automatic test generation;
   developer-centric test amplification
ID DEFECTS
AB Test amplification makes systematic changes to existing, manually written tests to provide tests complementary to an automated test suite. We consider developer-centric test amplification, where the developer explores, judges and edits the amplified tests before adding them to their maintained test suite. However, it is as yet unclear which kind of selection and editing steps developers take before including an amplified test into the test suite. In this paper we conduct an open source contribution study, amplifying tests of open source Java projects from GitHub. We report which deficiencies we observe in the amplified tests while manually filtering and editing them to open 39 pull requests with amplified tests. We present a detailed analysis of the maintainer's feedback regarding proposed changes, requested information, and expressed judgment. Our observations provide a basis for practitioners to take an informed decision on whether to adopt developer-centric test amplification. As several of the edits we observe are based on the developer's understanding of the amplified test, we conjecture that developer-centric test amplification should invest in supporting the developer to understand the amplified tests.
C1 [Brandt, Carolin; Khatami, Ali; Zaidman, Andy] Delft Univ Technol, NL-2628 CD Delft, Netherlands.
   [Wessel, Mairieli] Radboud Univ Nijmegen, NL-6525 XZ Nijmegen, Netherlands.
C3 Delft University of Technology; Radboud University Nijmegen
RP Brandt, C (corresponding author), Delft Univ Technol, NL-2628 CD Delft, Netherlands.
EM c.e.brandt@tudelft.nl
RI Brandt, Carolin/AEL-1754-2022; Zaidman, Andy/O-6542-2014
OI Brandt, Carolin/0000-0001-7623-1970; Wessel,
   Mairieli/0000-0001-8619-726X; Zaidman, Andy/0000-0003-2413-3935;
   Khatami, Ali/0000-0002-2212-2311
FU Dutch Science Foundation NWO through the Vici #x201C;TestShift#x201D;
FX No Statement Available
CR Abdi M, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-022-10169-8
   Ali S, 2010, IEEE T SOFTWARE ENG, V36, P742, DOI 10.1109/TSE.2009.52
   Almasi MM, 2017, 2017 IEEE/ACM 39TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2017), P263, DOI 10.1109/ICSE-SEIP.2017.27
   Alsharif A, 2019, PROC IEEE INT CONF S, P437, DOI 10.1109/ICSME.2019.00076
   Andrews JH, 2005, PROC INT CONF SOFTW, P402, DOI 10.1145/1062455.1062530
   Aniche M., 2022, EFFECTIVE SOFTWARE T
   Aniche M, 2022, IEEE T SOFTWARE ENG, V48, P4925, DOI 10.1109/TSE.2021.3129889
   Anonymous, 2023, Zenodo, DOI 10.5281/ZENODO.7034924
   [Anonymous], 2010, P ACM SIGSOFT INT S, DOI [10.1145/1882291.1882330, DOI 10.1145/1882291.1882330]
   Arcuri A, 2018, EMPIR SOFTW ENG, V23, P1959, DOI 10.1007/s10664-017-9570-9
   Athanasiou D, 2014, IEEE T SOFTWARE ENG, V40, P1100, DOI 10.1109/TSE.2014.2342227
   Bacchelli A, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P712, DOI 10.1109/ICSE.2013.6606617
   Baresi L., 2010, 2010 32nd International Conference on Software Engineering (ICSE), P281, DOI 10.1145/1810295.1810353
   Beck K., 2003, Test Driven Development: By Example
   Beller M., 2014, 11 WORKING C MINING, P202, DOI DOI 10.1145/2597073.2597082
   Beller M, 2019, IEEE T SOFTWARE ENG, V45, P261, DOI 10.1109/TSE.2017.2776152
   Beller M, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P179, DOI 10.1145/2786805.2786843
   Beller M, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P559, DOI 10.1109/ICSE.2015.193
   Bloem R, 2014, INT CONF QUAL SOFTW, P67, DOI 10.1109/QSIC.2014.40
   Böhme M, 2021, IEEE SOFTWARE, V38, P79, DOI 10.1109/MS.2020.3016773
   Brandt Carolin, 2023, 2023 IEEE 23rd International Working Conference on Source Code Analysis and Manipulation (SCAM), P231, DOI 10.1109/SCAM59687.2023.00032
   Brandt C., 2024, P IEEE ACM INT C SOF
   Brandt C, 2022, IEEE INT WORK VIS SO, P17, DOI 10.1109/VISSOFT55257.2022.00011
   Brandt C, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-021-10094-2
   Brown C, 2019, 2019 IEEE/ACM 1ST INTERNATIONAL WORKSHOP ON BOTS IN SOFTWARE ENGINEERING (BOTSE 2019), P54, DOI 10.1109/BotSE.2019.00021
   Csallner C, 2004, SOFTWARE PRACT EXPER, V34, P1025, DOI 10.1002/spe.602
   Dabic O, 2021, IEEE WORK CONF MIN S, P560, DOI 10.1109/MSR52588.2021.00074
   Daka E, 2017, PROCEEDINGS OF THE 26TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA'17), P57, DOI 10.1145/3092703.3092727
   Daka E, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P107, DOI 10.1145/2786805.2786838
   Danglot B, 2020, EMPIR SOFTW ENG, V25, P2379, DOI 10.1007/s10664-019-09794-7
   Danglot B, 2019, J SYST SOFTWARE, V157, DOI 10.1016/j.jss.2019.110398
   Danglot B, 2019, EMPIR SOFTW ENG, V24, P2603, DOI 10.1007/s10664-019-09692-y
   Delgado-Pérez P, 2023, IEEE T SOFTWARE ENG, V49, P2580, DOI 10.1109/TSE.2022.3227418
   Deljouyi Amirhossein, 2023, 2023 IEEE 23rd International Working Conference on Source Code Analysis and Manipulation (SCAM), P107, DOI 10.1109/SCAM59687.2023.00021
   Derakhshanfar P, 2020, IEEE INT CONF AUTOM, P1278, DOI 10.1145/3324884.3415299
   Derakhshanfar P, 2020, IEEE INT CONF AUTOM, P211, DOI 10.1145/3324884.3416643
   Ebert F, 2015, J SYST SOFTWARE, V106, P82, DOI 10.1016/j.jss.2015.04.066
   Elazhary O, 2019, PROC IEEE INT CONF S, P286, DOI 10.1109/ICSME.2019.00043
   Elbaum S, 2009, IEEE T SOFTWARE ENG, V35, P29, DOI 10.1109/TSE.2008.103
   Fraser G, 2011, P 19 ACM SIGSOFT S 1, P416, DOI 10.1145/2025113.2025179
   Fraser G, 2015, ACM T SOFTW ENG METH, V24, DOI 10.1145/2699688
   Fraser G, 2013, IEEE T SOFTWARE ENG, V39, P276, DOI 10.1109/TSE.2012.14
   Galindo-Gutierrez G, 2023, PROC IEEE INT CONF S, P271, DOI 10.1109/ICSME58846.2023.00035
   Garrison DR, 2006, The Internet and Higher Education, V9, P1
   Gaston D, 2020, PROC IEEE INT CONF S, P92, DOI 10.1109/ICSME46990.2020.00019
   Gittens M., 2006, P C CTR ADV STUD COL, P131
   Glaser B. G., 1967, The Discovery of Grounded Theory: Strategies for Qualitative Research
   Gousios G, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P358, DOI 10.1109/ICSE.2015.55
   Grano G, 2020, PROC IEEE INT CONF S, P336, DOI 10.1109/ICSME46990.2020.00040
   Guizani Mariam, 2021, Proceedings of the ACM on Human-Computer Interaction, V5, DOI 10.1145/3479551
   Hoffman D, 2003, J SYST SOFTWARE, V66, P143, DOI 10.1016/S0164-1212(02)00055-9
   Hurdugaci V, 2012, EUR CON SFTWR MTNCE, P11, DOI 10.1109/CSMR.2012.12
   Jeong B, 2023, P IEEE S SECUR PRIV, P2676, DOI 10.1109/SP46215.2023.10179394
   Kamimura M, 2013, CONF PROC INT SYMP C, P215, DOI 10.1109/ICPC.2013.6613851
   Khatami A, 2024, SOFTWARE PRACT EXPER, V54, P1408, DOI 10.1002/spe.3321
   Khatami Ali, 2022, Zenodo, DOI 10.5281/ZENODO.6563549
   Khatami Ali, 2023, P INT WORK C SOURC C, P174
   Kochhar PS, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE (ICSE-SEIP 2019), P61, DOI 10.1109/ICSE-SEIP.2019.00015
   Kochhar PS, 2017, IEEE T RELIAB, V66, P1213, DOI 10.1109/TR.2017.2727062
   Lakshmanan R., 2021, The Hacker News
   Li BY, 2016, IEEE INT CONF SOFTW, P341, DOI 10.1109/ICST.2016.30
   Lin B, 2019, IEEE INT WORK C SO, P204, DOI 10.1109/SCAM.2019.00031
   Mäntylä MV, 2009, IEEE T SOFTWARE ENG, V35, P430, DOI 10.1109/TSE.2008.71
   Marculescu B, 2018, J SYST SOFTWARE, V142, P156, DOI 10.1016/j.jss.2018.04.061
   Marick B., 1999, Proceedings of the 16th Interational Conference on Testing Computer Software, P16
   Messaoudi S, 2021, ISSTA '21: PROCEEDINGS OF THE 30TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P517, DOI 10.1145/3460319.3464824
   Moonen Leon, 2008, Software Evolution, P173
   Nassif M, 2022, IEEE T SOFTWARE ENG, V48, P3268, DOI 10.1109/TSE.2021.3087087
   Nijkamp N, 2021, IEEE INT WORK C SO, P237, DOI 10.1109/SCAM52516.2021.00036
   Nourry O, 2024, ACM T SOFTW ENG METH, V33, DOI 10.1145/3611668
   Olsthoorn M, 2020, IEEE INT CONF AUTOM, P1224, DOI 10.1145/3324884.3418930
   Oosterbroek W, 2021, IEEE INT WORK C SO, P242, DOI 10.1109/SCAM52516.2021.00037
   Pacheco C, 2007, PROC INT CONF SOFTW, P75
   Panichella A, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-022-10207-5
   Panichella S, 2016, PROC INT CONF SOFTW, P547, DOI 10.1145/2884781.2884847
   Plöger S, 2023, PROCEEDINGS OF THE 2023 CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS (CHI 2023), DOI 10.1145/3544548.3581178
   Ramírez A, 2021, IEEE C EVOL COMPUTAT, P2395, DOI 10.1109/CEC45853.2021.9504786
   Ramírez A, 2019, IEEE T SOFTWARE ENG, V45, P760, DOI 10.1109/TSE.2018.2803055
   Rao N, 2023, IEEE INT CONF AUTOM, P409, DOI 10.1109/ASE56229.2023.00193
   Robinson Brian, 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P23, DOI 10.1109/ASE.2011.6100059
   Rojas J.M., 2015, Automated Unit Test Generation During Software Development: A Controlled Experiment and Think-aloud Observations, P338
   Roslan MF, 2022, LECT NOTES COMPUT SC, V13711, P19, DOI 10.1007/978-3-031-21251-2_2
   Roy D, 2020, IEEE INT CONF AUTOM, P287, DOI 10.1145/3324884.3416622
   Sadowski C, 2018, 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING - SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2018), P181, DOI 10.1145/3183519.3183525
   Schoofs E, 2022, J SOFTW-EVOL PROC, V34, DOI 10.1002/smr.2490
   Schuler D., 2011, Proceedings 2011 IEEE Fourth International Conference on Software Testing, Verification and Validation (ICST 2011), P90, DOI 10.1109/ICST.2011.32
   Sinha S., 1999, Proceedings IEEE International Conference on Software Maintenance - 1999 (ICSM'99). `Software Maintenance for Business Change' (Cat. No.99CB36360), P265, DOI 10.1109/ICSM.1999.792624
   Spadini D, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P677, DOI 10.1145/3180155.3180192
   Staats M, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P391, DOI 10.1145/1985793.1985847
   STAMP, 2024, Use cases validation report v3
   Strauss A. L., 1990, Basics of qualitative research
   Swillus M, 2023, J SYST SOFTWARE, V205, DOI 10.1016/j.jss.2023.111804
   Tufano M, 2021, Arxiv, DOI arXiv:2009.05617
   van Deursen A., 2001, P 2 INT C EXTREME PR
   Wei Ma, 2020, 2020 IEEE International Conference on Software Maintenance and Evolution (ICSME), P394, DOI 10.1109/ICSME46990.2020.00045
   Winkler D, 2022, EUR CON SFTWR MTNCE, P1167, DOI 10.1109/SANER53432.2022.00135
   Xuan JF, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P52, DOI 10.1145/2635868.2635906
   Yu CS, 2019, PROC IEEE INT CONF S, P501, DOI 10.1109/ICSME.2019.00084
   Zamprogno L, 2023, IEEE T SOFTWARE ENG, V49, P2337, DOI 10.1109/TSE.2022.3217544
   Zeller A, 2009, WHY PROGRAMS FAIL: A GUIDE TO SYSTEMATIC DEBUGGING, 2ND EDITION
   Zeller Andreas, 2023, The Fuzzing Book
   Zhang BW, 2016, IEEE INT CONF AUTOM, P625, DOI 10.1145/2970276.2970342
   Zhang YC, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P214, DOI 10.1145/2786805.2786858
   Zhang ZY, 2021, 2021 47TH EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS (SEAA 2021), P86, DOI 10.1109/SEAA53835.2021.00020
   Zou WQ, 2019, EMPIR SOFTW ENG, V24, P3871, DOI 10.1007/s10664-019-09720-x
NR 105
TC 0
Z9 0
U1 1
U2 1
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAY
PY 2024
VL 50
IS 5
BP 1264
EP 1280
DI 10.1109/TSE.2024.3381015
PG 17
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA QX5T5
UT WOS:001224187300008
DA 2024-08-05
ER

PT J
AU Tong, HA
   Zhang, DL
   Liu, JQ
   Xing, WW
   Lu, LY
   Lu, W
   Wu, YM
AF Tong, Haonan
   Zhang, Dalin
   Liu, Jiqiang
   Xing, Weiwei
   Lu, Lingyun
   Lu, Wei
   Wu, Yumei
TI MASTER: Multi-Source Transfer Weighted Ensemble Learning for Multiple
   Sources Cross-Project Defect Prediction
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Multiple source datasets; cross-project defect prediction; software
   defect proneness; feature weighting; transfer learning
ID MODEL
AB Multi-source cross-project defect prediction (MSCPDP) attempts to transfer defect knowledge learned from multiple source projects to the target project. MSCPDP has drawn increasing attention from academic and industry communities owing to its advantages compared with single-source cross-project defect prediction (SSCPDP). However, two main problems, which are how to effectively extract the transferable knowledge from each source dataset and how to measure the amount of knowledge transferred from each source dataset to the target dataset, seriously restrict the performance of existing MSCPDP models. In this paper, we propose a novel <bold>m</bold>ulti-source tr<bold>a</bold>n<bold>s</bold>fer weigh<bold>t</bold>ed <bold>e</bold>nsemble lea<bold>r</bold>ning (MASTER) method for MSCPDP. MASTER measures the weight of each source dataset based on feature importance and distribution difference and then extracts the transferable knowledge based on the proposed feature-weighted transfer learning algorithm. Experiments are performed on 30 software projects. We compare MASTER with the latest state-of-the-art MSCPDP methods with statistical test in terms of famous effort-unaware measures (i.e., PD, PF, AUC, and MCC) and two widely used effort-aware measures (P-opt 20% and IFA). The experiment results show that: 1) MASTER can substantially improve the prediction performance compared with the baselines, e.g., an improvement of at least 49.1% in MCC, 48.1% in IFA; 2) MASTER significantly outperforms each baseline on most datasets in terms of AUC, MCC, P-opt 20% and IFA; 3) MSCPDP model significantly performs better than the mean case of SSCPDP model on most datasets and even outperforms the best case of SSCPDP on some datasets. It can be concluded that 1) it is very necessary to conduct MSCPDP, and 2) the proposed MASTER is a more promising alternative for MSCPDP.
C1 [Tong, Haonan; Zhang, Dalin; Liu, Jiqiang; Xing, Weiwei; Lu, Lingyun; Lu, Wei] Beijing Jiaotong Univ, Sch Software Engn, Beijing 100044, Peoples R China.
   [Wu, Yumei] Beihang Univ, Sch Reliabil & Syst Engn, Beijing 100191, Peoples R China.
C3 Beijing Jiaotong University; Beihang University
RP Wu, YM (corresponding author), Beihang Univ, Sch Reliabil & Syst Engn, Beijing 100191, Peoples R China.
EM hntong@bjtu.edu.cn; dalin@bjtu.edu.cn; jqliu@bjtu.edu.cn;
   wwxing@bjtu.edu.cn; lylu@bjtu.edu.cn; luwei@bjtu.edu.cn;
   wuyumei@buaa.edu.cn
OI Liu, jiqiang/0000-0003-1147-4327
FU Fundamental Research Funds for the Central Universities
FX No Statement Available
CR Akimova EN, 2021, MATHEMATICS-BASEL, V9, DOI 10.3390/math9111180
   Bai JJ, 2022, INFORM SOFTWARE TECH, V150, DOI 10.1016/j.infsof.2022.106985
   Bhat NA, 2022, ARAB J SCI ENG, V47, P1939, DOI 10.1007/s13369-021-06088-3
   Bowes David., 2016, Proceedings of the 25th International Symposium on Software Testing and Analysis, P330, DOI DOI 10.1145/2931037.2931039
   Bradley AP, 1997, PATTERN RECOGN, V30, P1145, DOI 10.1016/S0031-3203(96)00142-2
   Chawla NV, 2002, J ARTIF INTELL RES, V16, P321, DOI 10.1613/jair.953
   Chen JY, 2020, PROC INT CONF SOFTW, P578, DOI 10.1145/3377811.3380389
   Chen JY, 2020, NEUROCOMPUTING, V416, P103, DOI 10.1016/j.neucom.2018.12.091
   Chen L, 2015, INFORM SOFTWARE TECH, V62, P67, DOI 10.1016/j.infsof.2015.01.014
   Cliff N., 1996, ORDINAL METHODS BEHA
   D'Ambros M, 2012, EMPIR SOFTW ENG, V17, P531, DOI 10.1007/s10664-011-9173-9
   FAYYAD UM, 1993, IJCAI-93, VOLS 1 AND 2, P1022
   Ferreira JA, 2006, ANN STAT, V34, P1827, DOI 10.1214/009053606000000425
   Giray G, 2023, J SYST SOFTWARE, V195, DOI 10.1016/j.jss.2022.111537
   Gong LN, 2022, IEEE T SOFTWARE ENG, V48, P5030, DOI 10.1109/TSE.2021.3131950
   Hall T, 2012, IEEE T SOFTWARE ENG, V38, P1276, DOI 10.1109/TSE.2011.103
   He HB, 2009, IEEE T KNOWL DATA EN, V21, P1263, DOI 10.1109/TKDE.2008.239
   Hosseini S, 2019, IEEE T SOFTWARE ENG, V45, P111, DOI 10.1109/TSE.2017.2770124
   Huang Q, 2019, EMPIR SOFTW ENG, V24, P2823, DOI 10.1007/s10664-018-9661-2
   Jing XY, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P496, DOI 10.1145/2786805.2786813
   Kamei Y, 2013, IEEE T SOFTWARE ENG, V39, P757, DOI 10.1109/TSE.2012.70
   Kim E, 2021, IEEE INT C S Q R S, P503, DOI 10.1109/QRS54544.2021.00061
   KULLBACK S, 1951, ANN MATH STAT, V22, P79, DOI 10.1214/aoms/1177729694
   Kwon S, 2021, IEEE INT C S Q R S, P470, DOI 10.1109/QRS54544.2021.00058
   Laradji IH, 2015, INFORM SOFTWARE TECH, V58, P388, DOI 10.1016/j.infsof.2014.07.005
   Li J, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY AND SECURITY (QRS), P318, DOI 10.1109/QRS.2017.42
   Li ZQ, 2019, IEEE T SOFTWARE ENG, V45, P391, DOI 10.1109/TSE.2017.2780222
   Li ZQ, 2018, AUTOMAT SOFTW ENG, V25, P201, DOI 10.1007/s10515-017-0220-7
   Liu C, 2019, INFORM SOFTWARE TECH, V107, P125, DOI 10.1016/j.infsof.2018.11.005
   Ma Y, 2012, INFORM SOFTWARE TECH, V54, P248, DOI 10.1016/j.infsof.2011.09.007
   MATTHEWS BW, 1975, BIOCHIM BIOPHYS ACTA, V405, P442, DOI 10.1016/0005-2795(75)90109-9
   Menzies T., 2015, The promise repository ofempirical software engineering data
   Menzies T, 2007, IEEE T SOFTWARE ENG, V33, P2, DOI 10.1109/TSE.2007.256941
   Nam J, 2018, IEEE T SOFTWARE ENG, V44, P874, DOI 10.1109/TSE.2017.2720603
   Nam J, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P382, DOI 10.1109/ICSE.2013.6606584
   Ni C, 2022, IEEE T SOFTWARE ENG, V48, P786, DOI 10.1109/TSE.2020.3001739
   Pan SJ, 2011, IEEE T NEURAL NETWOR, V22, P199, DOI 10.1109/TNN.2010.2091281
   Peng LZ, 2009, INFORM SCIENCES, V179, P809, DOI 10.1016/j.ins.2008.11.007
   Pornprasit C, 2023, IEEE T SOFTWARE ENG, V49, P84, DOI 10.1109/TSE.2022.3144348
   Reshef DN, 2011, SCIENCE, V334, P1518, DOI 10.1126/science.1205438
   SHANNON CE, 1948, BELL SYST TECH J, V27, P379, DOI 10.1002/j.1538-7305.1948.tb01338.x
   Shepperd M, 2013, IEEE T SOFTWARE ENG, V39, P1208, DOI 10.1109/TSE.2013.11
   Song LY, 2023, IEEE T SOFTWARE ENG, V49, P646, DOI 10.1109/TSE.2022.3158831
   Song QB, 2019, IEEE T SOFTWARE ENG, V45, P1253, DOI 10.1109/TSE.2018.2836442
   Song QB, 2011, IEEE T SOFTWARE ENG, V37, P356, DOI 10.1109/TSE.2010.90
   Sun ZB, 2021, APPL SOFT COMPUT, V99, DOI 10.1016/j.asoc.2020.106940
   Tantithamthavorn C, 2020, IEEE T SOFTWARE ENG, V46, P1200, DOI 10.1109/TSE.2018.2876537
   Thong Hoang, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P34, DOI 10.1109/MSR.2019.00016
   Turhan B, 2009, EMPIR SOFTW ENG, V14, P540, DOI 10.1007/s10664-008-9103-7
   Wang S, 2020, IEEE T SOFTWARE ENG, V46, P1267, DOI 10.1109/TSE.2018.2877612
   Wen M, 2020, IEEE T SOFTWARE ENG, V46, P1155, DOI 10.1109/TSE.2018.2876256
   WILCOXON F, 1946, J ECON ENTOMOL, V39, P269, DOI 10.1093/jee/39.2.269
   Wu R, 2011, SIGSOFT FSE, P15, DOI DOI 10.1145/2025113.2025120
   Xia X, 2016, IEEE T SOFTWARE ENG, V42, P977, DOI 10.1109/TSE.2016.2543218
   Xu JX, 2021, IEEE T RELIAB, V70, P613, DOI 10.1109/TR.2020.3040191
   Yao Y, 2010, PROC CVPR IEEE, P1855, DOI 10.1109/CVPR.2010.5539857
   Yatish S, 2019, PROC INT CONF SOFTW, P654, DOI 10.1109/ICSE.2019.00075
   Yedida R, 2022, IEEE T SOFTWARE ENG, V48, P3103, DOI 10.1109/TSE.2021.3079841
   Yu Q, 2017, J SYST SOFTWARE, V132, P366, DOI 10.1016/j.jss.2017.06.070
   Yu X, 2018, SOFT COMPUT, V22, P3461, DOI 10.1007/s00500-018-3093-1
   Zhang F, 2016, EMPIR SOFTW ENG, V21, P2107, DOI 10.1007/s10664-015-9396-2
   Zhou YM, 2018, ACM T SOFTW ENG METH, V27, DOI 10.1145/3183339
   Zhuang FZ, 2015, PROCEEDINGS OF THE TWENTY-FOURTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE (IJCAI), P4119
   Zou QY, 2021, PROC INT SYMP SOFTW, P57, DOI 10.1109/ISSRE52982.2021.00019
   Zou QY, 2021, INFORM SOFTWARE TECH, V137, DOI 10.1016/j.infsof.2021.106588
NR 65
TC 0
Z9 0
U1 5
U2 5
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAY
PY 2024
VL 50
IS 5
BP 1281
EP 1305
DI 10.1109/TSE.2024.3381235
PG 25
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA QX5T5
UT WOS:001224187300001
DA 2024-08-05
ER

PT J
AU Sánchez, AB
   Parejo, JA
   Segura, S
   Durán, A
   Papadakis, M
AF Sanchez, Ana B.
   Parejo, Jose A.
   Segura, Sergio
   Duran, Amador
   Papadakis, Mike
TI Mutation Testing in Practice: Insights From Open-Source Software
   Developers
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Mutation testing; mutation tools; qualitative study; GitHub
ID INDUSTRY
AB Mutation testing drives the creation and improvement of test cases by evaluating their ability to identify synthetic faults. Over the past decades, the technique has gained popularity in academic circles. In practice, however, little is known about its adoption and use. While there are some pilot studies applying mutation testing in industry, the overall usage of mutation testing among developers remains largely unexplored. To fill this gap, this paper presents the results of a qualitative study among open-source developers on the use of mutation testing. Specifically, we report the results of a survey of 104 contributors to open-source projects using a variety of mutation testing tools. The findings of our study provide helpful insights into the use of mutation testing in practice, including its main benefits and limitations. Overall, we observe a high degree of satisfaction with mutation testing across different programming languages and mutation testing tools. Developers find the technique helpful for improving the quality of test suites, detecting bugs, and improving code maintainability. Popularity, usability, and configurability emerge as key factors for the adoption of mutation tools, whereas performance stands overwhelmingly as their main limitation. These results lay the groundwork for new research contributions and tools that meet the needs of developers and boost the widespread adoption of mutation testing.
C1 [Sanchez, Ana B.; Parejo, Jose A.; Segura, Sergio; Duran, Amador] Univ Seville, Software Engn, Seville 41012, Spain.
   [Papadakis, Mike] Univ Luxembourg, SER VAL SEcur Reasoning & VALidat Res Team, L-4365 Esch Sur Alzette, Luxembourg.
C3 University of Sevilla; University of Luxembourg
RP Sánchez, AB (corresponding author), Univ Seville, Software Engn, Seville 41012, Spain.
EM anabsanchez@us.es; japarejo@us.es; sergiosegura@us.es; amador@us.es;
   michail.papadakis@uni.lu
RI Durán, Amador/O-4248-2014; Segura, Sergio/A-9615-2011; Parejo Maestre,
   Jose Antonio/A-2822-2009
OI Durán, Amador/0000-0003-3630-5511; Papadakis, Mike/0000-0003-1852-2547;
   Segura, Sergio/0000-0001-8816-6213; Parejo Maestre, Jose
   Antonio/0000-0002-4708-4606
FU VI Plan Propio de Investigaci#x00F3;n y Transferencia of Universidad de
   Sevilla 2021
FX No Statement Available
CR [Anonymous], Stryker-NET."
   [Anonymous], "StrykerJS.
   [Anonymous], Mutant
   [Anonymous], Supplementary material of the article
   [Anonymous], 1979, Infotech State of the Art Report, Software Testing
   [Anonymous], Stryker4S
   [Anonymous], MutPy
   [Anonymous], muJava
   [Anonymous], 1979, Tech. Rep.GIT-ICS-79/08
   [Anonymous], Humbug
   [Anonymous], Infect
   [Anonymous], Mutmut
   Arcuri A, 2018, EMPIR SOFTW ENG, V23, P1959, DOI 10.1007/s10664-017-9570-9
   Beller M, 2021, 2021 IEEE/ACM 43RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE (ICSE-SEIP 2021), P268, DOI 10.1109/ICSE-SEIP52600.2021.00036
   Beller M, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P179, DOI 10.1145/2786805.2786843
   bitbucket, about us
   Cachia MA, 2013, ELECTRON NOTES THEOR, V294, P2, DOI 10.1016/j.entcs.2013.02.012
   Chekam TT, 2017, PROC INT CONF SOFTW, P597, DOI 10.1109/ICSE.2017.61
   Chicco D, 2020, BMC GENOMICS, V21, DOI 10.1186/s12864-019-6413-7
   Ciolkowski M., 2003, PracticalExperiences in the Design and Conduct of Surveys in Empirical SoftwareEngineering
   Coles H., 2016, P 25 INT S SOFTWARE, P449
   Creswell J., 2018, Research Design: Qualitative, quantitative and mixed methods approaches, V5th, DOI DOI 10.3109/08941939.2012.723954
   Delahaye M, 2015, SOFTWARE PRACT EXPER, V45, P875, DOI 10.1002/spe.2312
   Delgado-Pérez P, 2018, IEEE T RELIAB, V67, P1406, DOI 10.1109/TR.2018.2864678
   DEMILLO RA, 1978, COMPUTER, V11, P34, DOI 10.1109/C-M.1978.218136
   Derezinska A, 2014, ADV INTELL SYST, V286, P155, DOI 10.1007/978-3-319-07013-1_15
   Fan WM, 2010, COMPUT HUM BEHAV, V26, P132, DOI 10.1016/j.chb.2009.10.015
   Garg A, 2023, IEEE T SOFTWARE ENG, V49, P24, DOI 10.1109/TSE.2022.3140510
   GitLab, About us
   Greer TV, 2000, IND MARKET MANAG, V29, P97, DOI 10.1016/S0019-8501(98)00038-8
   Habchi S, 2022, IEEE INT CONF SOFTW, P244, DOI 10.1109/ICST53961.2022.00034
   Jebb AT, 2021, FRONT PSYCHOL, V12, DOI 10.3389/fpsyg.2021.637547
   Jia Y, 2011, IEEE T SOFTWARE ENG, V37, P649, DOI 10.1109/TSE.2010.62
   Just R., 2014, P 2014 INT S SOFTW T, P433
   Just R, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P654, DOI 10.1145/2635868.2635929
   Kintis M, 2018, EMPIR SOFTW ENG, V23, P2426, DOI 10.1007/s10664-017-9582-5
   Li ZX, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P1198, DOI 10.1109/ASE.2019.00136
   Ma L, 2018, PROC INT SYMP SOFTW, P100, DOI 10.1109/ISSRE.2018.00021
   Ma W, 2021, PROC INT CONF SOFTW, P897, DOI 10.1109/ICSE43902.2021.00086
   Ma YS, 2005, SOFTW TEST VERIF REL, V15, P97, DOI 10.1002/stvr.308
   Marki B., 2017, P S APPL COMP SAC 17, P1364
   Offutt AJ, 2001, KLUW INT S ADV DATA, V24, P34
   Papadakis M, 2019, ADV COMPUT, V112, P275, DOI 10.1016/bs.adcom.2018.03.015
   Perry N, 2023, Arxiv, DOI [arXiv:2211.03622, 10.48550/arxiv.2211.03622, DOI 10.48550/ARXIV.2211.03622]
   Petrovic G, 2022, IEEE T SOFTWARE ENG, V48, P3900, DOI 10.1109/TSE.2021.3107634
   Petrovic G, 2021, PROC INT CONF SOFTW, P910, DOI 10.1109/ICSE43902.2021.00087
   PIT." GitHub, About us
   Pizzoleto AV, 2019, J SYST SOFTWARE, V157, DOI 10.1016/j.jss.2019.07.100
   Usaola MP, 2010, IEEE SOFTWARE, V27, P80, DOI 10.1109/MS.2010.79
   Prado MP, 2018, J SYST SOFTWARE, V141, P66, DOI 10.1016/j.jss.2018.03.052
   Robbins R. M., 2011, JOINT STAT M, V1
   Sánchez AB, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-022-10177-8
   Chekam TT, 2020, EMPIR SOFTW ENG, V25, P434, DOI 10.1007/s10664-019-09778-7
   Uzunbayir S, 2019, 2019 4TH INTERNATIONAL CONFERENCE ON COMPUTER SCIENCE AND ENGINEERING (UBMK), P439, DOI [10.1109/ubmk.2019.8907222, 10.1109/UBMK.2019.8907222]
   Wei Ma, 2020, 2020 IEEE International Conference on Software Maintenance and Evolution (ICSME), P394, DOI 10.1109/ICSME46990.2020.00045
   Wohlin C., 2012, Experimentation in Software Engineering, DOI [10.1007/978-3-642-29044-2., DOI 10.1007/978-3-642-29044-2]
NR 56
TC 0
Z9 0
U1 1
U2 1
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAY
PY 2024
VL 50
IS 5
BP 1130
EP 1143
DI 10.1109/TSE.2024.3377378
PG 14
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA QX5T5
UT WOS:001224187300005
OA hybrid
DA 2024-08-05
ER

PT J
AU AlOmar, EA
   Mkaouer, MW
   Ouni, A
AF AlOmar, Eman Abdullah
   Mkaouer, Mohamed Wiem
   Ouni, Ali
TI Behind the Intent of Extract Method Refactoring: A Systematic Literature
   Review
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Extract method; refactoring; quality; systematic literature review
ID CODE; OPPORTUNITIES; IDENTIFICATION; SUPPORT; CLONES; SMELLS;
   SUGGESTIONS; IMPACT; BAD
AB Background: Code refactoring is widely recognized as an essential software engineering practice to improve the understandability and maintainability of the source code. The Extract Method refactoring is considered as "Swiss army knife" of refactorings, as developers often apply it to improve their code quality, e.g., decompose long code fragments, reduce code complexity, eliminate duplicated code, etc. In recent years, several studies attempted to recommend Extract Method refactorings allowing the collection, analysis, and revelation of actionable data-driven insights about refactoring practices within software projects. Aim: In this paper, we aim at reviewing the current body of knowledge on existing Extract Method refactoring research and explore their limitations and potential improvement opportunities for future research efforts. That is, Extract Method is considered one of the most widely-used refactorings, but difficult to apply in practice as it involves low-level code changes such as statements, variables, parameters, return types, etc. Hence, researchers and practitioners begin to be aware of the state-of-the-art and identify new research opportunities in this context. Method: We review the body of knowledge related to Extract Method refactoring in the form of a systematic literature review (SLR). After compiling an initial pool of 1,367 papers, we conducted a systematic selection and our final pool included 83 primary studies. We define three sets of research questions and systematically develop and refine a classification schema based on several criteria including their methodology, applicability, and degree of automation. Results: The results construct a catalog of 83 Extract Method approaches indicating that several techniques have been proposed in the literature. Our results show that: (i) 38.6% of Extract Method refactoring studies primarily focus on addressing code clones; (ii) Several of the Extract Method tools incorporate the developer's involvement in the decision-making process when applying the method extraction, and (iii) the existing benchmarks are heterogeneous and do not contain the same type of information, making standardizing them for the purpose of benchmarking difficult. Conclusions: Our study serves as an "index" to the body of knowledge in this area for researchers and practitioners in determining the Extract Method refactoring approach that is most appropriate for their needs. Our findings also empower the community with information to guide the future development of refactoring tools.
C1 [AlOmar, Eman Abdullah] Stevens Inst Technol, Sch Syst & Enterprises, Hoboken, NJ 07030 USA.
   [Mkaouer, Mohamed Wiem] Univ Michigan, Coll Innovat & Technol, Flint, MI 48502 USA.
   [Ouni, Ali] Univ Quebec, Dept Software Engn & IT, ETS Montreal, Montreal, PQ H3C 3P8, Canada.
C3 Stevens Institute of Technology; University of Michigan System;
   University of Michigan Flint; University of Michigan; University of
   Quebec; University of Quebec Montreal; Ecole de Technologie Superieure -
   Canada
RP AlOmar, EA (corresponding author), Stevens Inst Technol, Sch Syst & Enterprises, Hoboken, NJ 07030 USA.
EM ealomar@stevens.edu; mmkaouer@umich.edu; ali.ouni@etsmtl.ca
RI Mkaouer, Mohamed Wiem/N-7476-2017; AlOmar, Eman/ABW-2622-2022
OI Mkaouer, Mohamed Wiem/0000-0001-6010-7561; Ouni,
   Ali/0000-0003-4708-0362; AlOmar, Eman/0000-0003-1800-9268
FU National Science Foundation
FX No Statement Available
CR Abadi R., 2009, 3 WORKSHOP REFACTORI, V21, P1
   Abadi R., 2008, 2 WORKSHOP REFACTORI, P1
   Abebe M., 2014, Trends, opportunities and challenges of software refactoring: A systematic literature review, V8, P299
   Abgaz Y, 2023, IEEE T SOFTWARE ENG, V49, P4213, DOI 10.1109/TSE.2023.3287297
   Abid C, 2020, Arxiv, DOI arXiv:2007.02194
   Abid C, 2022, IEEE T SOFTWARE ENG, V48, P864, DOI 10.1109/TSE.2020.3005995
   Al Dallal Jehad, 2018, IEEE Transactions on Software Engineering, V44, P44, DOI 10.1109/TSE.2017.2658573
   Al Dallal J, 2015, INFORM SOFTWARE TECH, V58, P231, DOI 10.1016/j.infsof.2014.08.002
   Allamanis M, 2013, IEEE WORK CONF MIN S, P207, DOI 10.1109/MSR.2013.6624029
   AlOmar EA, 2022, IEEE INT CONF AUTOM, DOI 10.1145/3551349.3559537
   AlOmar EA, 2023, INFORM SOFTWARE TECH, V158, DOI 10.1016/j.infsof.2023.107169
   AlOmar EA, 2022, IEEE WORK CONF MIN S, P689, DOI 10.1145/3524842.3527932
   Alomar EA, 2022, INNOV SYST SOFTW ENG, V18, P105, DOI 10.1007/s11334-021-00422-6
   AlOmar EA, 2022, AUTOMAT SOFTW ENG, V29, DOI 10.1007/s10515-021-00314-w
   AlOmar EA, 2021, INFORM SOFTWARE TECH, V140, DOI 10.1016/j.infsof.2021.106675
   AlOmar EA, 2021, 2021 IEEE/ACM 43RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE (ICSE-SEIP 2021), P348, DOI 10.1109/ICSE-SEIP52600.2021.00044
   AlOmar EA, 2021, EXPERT SYST APPL, V167, DOI 10.1016/j.eswa.2020.114176
   AlOmar EA, 2020, LECT NOTES COMPUT SC, V12541, P261, DOI 10.1007/978-3-030-64694-3_16
   AlOmar EA, 2019, INT SYMP EMP SOFTWAR, P42
   AlOmar EA, 2019, 2019 IEEE/ACM 3RD INTERNATIONAL WORKSHOP ON REFACTORING (IWOR 2019), P51, DOI 10.1109/IWoR.2019.00017
   Alves ELG, 2018, IEEE T SOFTWARE ENG, V44, P365, DOI 10.1109/TSE.2017.2679742
   Aniche M, 2022, IEEE T SOFTWARE ENG, V48, P1432, DOI 10.1109/TSE.2020.3021736
   [Anonymous], Clonerefactor
   [Anonymous], 2007, Xrefactory
   [Anonymous], 2022, Segmentation
   [Anonymous], 2018, CREC
   [Anonymous], 2017, PostponableRefactoring
   [Anonymous], 2023, Wrangler
   [Anonymous], 1999, Haskell: The Craft of Functional Programming
   [Anonymous], 2023, REM
   [Anonymous], 2015, RASE-dataset
   [Anonymous], 2023, REMS
   [Anonymous], 2023, AntiCopyPaster
   [Anonymous], 2022, LiveRef
   [Anonymous], 2020, TOAD
   [Anonymous], 2015, RASE
   [Anonymous], 2022, Aniche
   [Anonymous], 2015, JExtract
   [Anonymous], 2017, GEMS
   [Anonymous], 2017, HaRe
   [Anonymous], 2012, Unnamed
   [Anonymous], 2019, Unnamed
   [Anonymous], 2020, Nyamawe
   [Anonymous], 2020, Krasniqi
   Antezana AS, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: COMPANION PROCEEDINGS (ICSE-COMPANION 2019), P174, DOI 10.1109/ICSE-Companion.2019.00071
   Baars S., 12 SEMINAR ADV TECH
   Balazinska M., 1999, Sixth Working Conference on Reverse Engineering (Cat. No.PR00303), P326, DOI 10.1109/WCRE.1999.806971
   Baqais AAB, 2020, SOFTWARE QUAL J, V28, P459, DOI 10.1007/s11219-019-09477-y
   Bavota G., 2014, Recommendation Systems in Software Engineering, P387
   Bian YX, 2014, ADV INTELL SYST, V250, P141, DOI 10.1007/978-81-322-1695-7_17
   Bian YX, 2013, J SYST SOFTWARE, V86, P2077, DOI 10.1016/j.jss.2013.03.061
   Brereton P, 2007, J SYST SOFTWARE, V80, P571, DOI 10.1016/j.jss.2006.07.009
   Brown C, 2010, PEPM '10: PROCEEDINGS OF THE 2010 ACM SIGPLAN WORKSHOP ON PARTIAL EVALUATION AND PROGRAM MANIPULATION, P111, DOI 10.1145/1706356.1706378
   Charalampidou S., 2015, PROC 11 INT C PREDIC, P1
   Charalampidou S, 2018, EUROMICRO CONF PROC, P234, DOI 10.1109/SEAA.2018.00046
   Charalampidou S, 2017, IEEE T SOFTWARE ENG, V43, P954, DOI 10.1109/TSE.2016.2645572
   Chen ZY, 2017, P INT COMP SOFTW APP, P288, DOI 10.1109/COMPSAC.2017.242
   Choi E., 2011, PROC 5 INT WORKSHOP, P7
   Choi E, 2018, ASIA PAC SOFWR ENG, P653, DOI 10.1109/APSEC.2018.00084
   Cinneide M. O., 2011, 2011 IEEE Fourth International Conference on Software Testing, Verification and Validation Workshops (ICSTW), P437, DOI 10.1109/ICSTW.2011.23
   Cinneide M. O, 2001, Automated Application of Design Patterns: A Refac-toring Approach
   Corbat T., 2007, PROC COMPANION 22 AC, P779
   Cousot P, 2012, ACM SIGPLAN NOTICES, V47, P213, DOI 10.1145/2398857.2384633
   Cruzes DS, 2011, INT SYMP EMP SOFTWAR, P275, DOI 10.1109/ESEM.2011.36
   Cui Di, 2023, INT C PROGRAM COMPRE, P191, DOI 10.1109/ICPC58990.2023.00034
   Daga A, 2006, J INTELL SYST, V15, P153, DOI 10.1515/JISYS.2006.15.1-4.153
   Dybå T, 2008, INFORM SOFTWARE TECH, V50, P833, DOI 10.1016/j.infsof.2008.01.006
   Eilertsen AM, 2021, 2021 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2021), P237, DOI 10.1109/SANER50967.2021.00030
   Ettinger R., 2004, PROC 3 INT C ASPECT, P93
   Ettinger R, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P327, DOI 10.1109/SANER.2017.7884633
   Ettinger R, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 3, P53, DOI 10.1109/SANER.2016.62
   Fan AEL, 2023, Arxiv, DOI arXiv:2310.03533
   Fernandes E, 2016, PROCEEDINGS OF THE 20TH INTERNATIONAL CONFERENCE ON EVALUATION AND ASSESSMENT IN SOFTWARE ENGINEERING 2016 (EASE '16), DOI 10.1145/2915970.2915984
   Fernandes S, 2022, IEEE INT CONF AUTOM, DOI 10.1145/3551349.3559532
   Fernandes S, 2022, COMPANION PROCEEDINGS OF THE 6TH INTERNATIONAL CONFERENCE ON THE ART, SCIENCE, AND ENGINEERING OF PROGRAMMING, PROGRAMMING 2022, P30, DOI 10.1145/3532512.3535222
   Fontana FA, 2015, LECT NOTES BUS INF P, V212, P3, DOI 10.1007/978-3-319-18612-2_1
   Fowler M., 2018, Refactoring: improving the design of existing code
   Fritzsch J, 2019, PROC IEEE INT CONF S, P481, DOI 10.1109/ICSME.2019.00081
   Garousi V, 2016, INFORM SOFTWARE TECH, V80, P195, DOI 10.1016/j.infsof.2016.09.002
   GitHub, ABOUT US
   GitHub, 2011, JDeodorant
   GitHub, 2023, about us
   GitHub, 2020, About us
   Golubev Y, 2021, PROCEEDINGS OF THE 29TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '21), P1303, DOI 10.1145/3468264.3473924
   Google, 2018, About us
   Goto A, 2013, INT WORKS SOFTW CLON, P23, DOI 10.1109/IWSC.2013.6613038
   Griswold W. G., 1993, ACM Transactions on Software Engineering and Methodology, V2, P228, DOI 10.1145/152388.152389
   Haas R, 2017, LECT NOTES BUS INF P, V269, P45, DOI 10.1007/978-3-319-49421-0_4
   Haas R, 2016, LECT NOTES BUS INF P, V238, P144, DOI 10.1007/978-3-319-27033-3_10
   Harman M., 2011, 2011 IEEE Fourth International Conference on Software Testing, Verification and Validation Workshops (ICSTW), P414, DOI 10.1109/ICSTW.2011.38
   Higo Y, 2004, LECT NOTES COMPUT SC, V3009, P220
   Higo Y., 2005, ACM SIGSOFT Softw. Eng. Notes, V30, P1
   HIGO Y, 2004, P 8 IASTED INT C SOF, P222
   Higo Y, 2008, J SOFTW MAINT EVOL-R, V20, P435, DOI 10.1002/smr.394
   Hora A, 2020, EMPIR SOFTW ENG, V25, P1798, DOI 10.1007/s10664-020-09809-8
   Hotta K., 2010, JOINT ERCIM WORK SHO
   Huang P, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P60, DOI 10.1145/2568225.2568232
   Imazato A, 2017, P INT COMP SOFTW APP, P190, DOI 10.1109/COMPSAC.2017.129
   Ivers J, 2022, PROCEEDINGS OF THE 30TH ACM JOINT MEETING EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, ESEC/FSE 2022, P1544, DOI 10.1145/3540250.3558954
   Juillerat B., 2007, 1 WORKSHOP REFACTORI, P48
   Juillerat N., 2006, PROC 3 WORKSHOP SOFT, V2006, P63
   Kanemitsu T., 2011, PROC 4 WORKSHOP REFA, P8
   Kaya M., 2013, PROC 25 INT C SOFTW, P153
   Kaya M, 2017, INT J SOFTW ENG KNOW, V27, P49, DOI 10.1142/S0218194017500036
   Keele U.K., 2004, Tech. Rep. TR/SE-0401
   Kessentini Marouane, 2020, Deep Blue Data, DOI 10.7302/0BGN-VT27
   Khomh F, 2012, EMPIR SOFTW ENG, V17, P243, DOI 10.1007/s10664-011-9171-y
   Kim M, 2014, IEEE T SOFTWARE ENG, V40, P633, DOI 10.1109/TSE.2014.2318734
   Kitchenham B., 2007, GUIDELINES PERFORMIN, V1, P57
   Kitchenham B, 2013, INFORM SOFTWARE TECH, V55, P2049, DOI 10.1016/j.infsof.2013.07.010
   Kitchenham B, 2009, INFORM SOFTWARE TECH, V51, P7, DOI 10.1016/j.infsof.2008.09.009
   Komondoor R, 2003, PROG COMPREHEN, P33
   Komondoor R., 2000, Conference Record of POPL'00: 27th ACM SIGPLAN-SIGACT. Symposium on Principles of Programming Languages. Papers Presented at the Symposium, P155, DOI 10.1145/325694.325713
   Krasniqi R, 2020, PROCEEDINGS OF THE 2020 IEEE 27TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER '20), P512, DOI [10.1109/saner48275.2020.9054816, 10.1109/SANER48275.2020.9054816]
   Krishnan GP, 2014, 2014 SOFTWARE EVOLUTION WEEK - IEEE CONFERENCE ON SOFTWARE MAINTENANCE, REENGINEERING, AND REVERSE ENGINEERING (CSMR-WCRE), P104, DOI 10.1109/CSMR-WCRE.2014.6747160
   Krishnan GP, 2013, PROC IEEE INT CONF S, P360, DOI 10.1109/ICSM.2013.47
   Lacerda G, 2020, J SYST SOFTWARE, V167, DOI 10.1016/j.jss.2020.110610
   Lakhotia A, 1998, INFORM SOFTWARE TECH, V40, P677, DOI 10.1016/S0950-5849(98)00091-3
   Landman D, 2017, PROC INT CONF SOFTW, P507, DOI 10.1109/ICSE.2017.53
   Lenarduzzi T., 2021, J. Syst. Softw., V171
   Li H., 2009, PROC ACM SIGPLAN WOR, P169
   Li SS, 2021, INFORM SOFTWARE TECH, V131, DOI 10.1016/j.infsof.2020.106449
   Mariani T, 2017, INFORM SOFTWARE TECH, V83, P14, DOI 10.1016/j.infsof.2016.11.009
   Maruyama K., 2001, Software Engineering Notes, V26, P31, DOI 10.1145/379377.375233
   Maruyama K, 2017, PROC IEEE ACM INT C, P133, DOI 10.1109/ICSE-C.2017.108
   Mazinanian D, 2016, 2016 IEEE/ACM 38TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING COMPANION (ICSE-C), P613, DOI 10.1145/2889160.2889168
   Meananeatra Panita, 2011, 8th Electrical Engineering/ Electronics, Computer, Telecommunications and Information Technology (ECTI) Association of Thailand - Conference 2011, P492
   Meananeatra P, 2018, IEICE T INF SYST, VE101D, P1766, DOI 10.1587/transinf.2017KBP0026
   Meng N, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P392, DOI 10.1109/ICSE.2015.58
   Meng N, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P502, DOI 10.1109/ICSE.2013.6606596
   Meng N, 2011, ACM SIGPLAN NOTICES, V46, P329, DOI 10.1145/1993316.1993537
   Mkaouer M., 2014, P 29 ACM IEEE INT C, P331, DOI DOI 10.1145/2642937.2642965.URL
   Mkaouer W, 2015, ACM T SOFTW ENG METH, V24, DOI 10.1145/2729974
   Mohan M, 2017, LECT NOTES COMPUT SC, V10611, P556, DOI 10.1007/978-3-319-69926-4_46
   Morales R, 2017, J SYST SOFTWARE, V128, P236, DOI 10.1016/j.jss.2016.05.042
   Murphy-Hill E, 2012, IEEE T SOFTWARE ENG, V38, P5, DOI 10.1109/TSE.2011.41
   Murphy-Hill E, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P421, DOI 10.1145/1368088.1368146
   Nyamawe AS, 2022, MACH LEARN APPL, V9, DOI 10.1016/j.mlwa.2022.100316
   Nyamawe AS, 2020, EMPIR SOFTW ENG, V25, P4315, DOI 10.1007/s10664-020-09871-2
   Nyamawe AS, 2019, INT REQUIR ENG CONF, P187, DOI 10.1109/RE.2019.00029
   OConnor A., 2005, PROC OOPSLA WORKSHOP, P16
   Oizumi Willian, 2020, SBES '20: Proceedings of the 34th Brazilian Symposium on Software Engineering, P72, DOI 10.1145/3422392.3422423
   Opdyke W. F., 1992, Refactoring object-oriented frameworks
   Palit I, 2023, PROC IEEE INT CONF S, P369, DOI 10.1109/ICSME58846.2023.00047
   Palomba F, 2018, EMPIR SOFTW ENG, V23, P1188, DOI 10.1007/s10664-017-9535-z
   Palomba F, 2014, PROC IEEE INT CONF S, P101, DOI 10.1109/ICSME.2014.32
   Perez J., 2011, A classification frameworkand survey for design smell management
   Petersen R., 2008, 12 INT C EVALASSESSM, P1
   Prete K, 2010, PROC IEEE INT CONF S
   Rebai S, 2020, INFORM SOFTWARE TECH, V126, DOI 10.1016/j.infsof.2020.106332
   Rijksuniversiteit Groningen, 2016, about us
   Roy CK, 2008, INT C PROGRAM COMPRE, P172, DOI 10.1109/ICPC.2008.41
   Roy CK, 2009, SCI COMPUT PROGRAM, V74, P470, DOI 10.1016/j.scico.2009.02.007
   Sagar PS, 2021, ALGORITHMS, V14, DOI 10.3390/a14100289
   Alcocer JPS, 2020, SCI COMPUT PROGRAM, V195, DOI 10.1016/j.scico.2020.102475
   Shahidi M, 2022, J SYST SOFTWARE, V187, DOI 10.1016/j.jss.2022.111221
   Sharma T., 2012, PROC 5 WORKSHOP REFA, P50
   Sharma T, 2018, J SYST SOFTWARE, V138, P158, DOI 10.1016/j.jss.2017.12.034
   Sheneamer AM, 2020, IEEE ACCESS, V8, P124978, DOI 10.1109/ACCESS.2020.3006178
   Shin W., 2019, SOFTW ENG ARTIF INTE, P27
   Silva D., 2015, BRAZILIAN C SOFTW TH, P1
   Silva D, 2014, 22 INT C PROGRAM COM, P146
   Silva D, 2021, IEEE T SOFTWARE ENG, V47, P2786, DOI 10.1109/TSE.2020.2968072
   Silva D, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P858, DOI 10.1145/2950290.2950305
   Singh S, 2018, AIN SHAMS ENG J, V9, P2129, DOI 10.1016/j.asej.2017.03.002
   Skiena S. S., 1998, ALGORITHM DESIGN MAN, V2
   smilecloud, About us
   Tairas R, 2012, INFORM SOFTWARE TECH, V54, P1297, DOI 10.1016/j.infsof.2012.06.011
   Tempero E, 2010, ASIA PAC SOFWR ENG, P336, DOI 10.1109/APSEC.2010.46
   Thy S, 2023, P ACM PROGRAM LANG, V7, DOI 10.1145/3622821
   Tiarks R, 2011, SOFTWARE QUAL J, V19, P295, DOI 10.1007/s11219-010-9115-6
   Tiwari R., 2022, 15 INNOV SOFTW ENG C, P1
   Tsantalis N, 2022, IEEE T SOFTWARE ENG, V48, P930, DOI 10.1109/TSE.2020.3007722
   Tsantalis N, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P483, DOI 10.1145/3180155.3180206
   Tsantalis N, 2017, PROC INT CONF SOFTW, P60, DOI 10.1109/ICSE.2017.14
   Tsantalis N, 2015, IEEE T SOFTWARE ENG, V41, P1055, DOI 10.1109/TSE.2015.2448531
   Tsantalis N, 2011, J SYST SOFTWARE, V84, P1757, DOI 10.1016/j.jss.2011.05.016
   Tsantalis N, 2009, EUR CON SFTWR MTNCE, P119, DOI 10.1109/CSMR.2009.23
   Tsantalis Nikolaos, 2013, C CTR ADV STUD COLL, P132, DOI [10.5555/2555523.2555539, DOI 10.5555/2555523.2555539]
   Vaithilingam P, 2022, EXTENDED ABSTRACTS OF THE 2022 CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, CHI 2022, DOI 10.1145/3491101.3519665
   Vakilian M, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P1106, DOI 10.1145/2568225.2568282
   Vakilian M, 2012, PROC INT CONF SOFTW, P233, DOI 10.1109/ICSE.2012.6227190
   van der Leij D, 2021, PROCEEDINGS OF THE 29TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '21), P1337, DOI 10.1145/3468264.3473927
   Vidal S, 2018, ACM T SOFTW ENG METH, V27, DOI 10.1145/3191314
   Vittek M., 2007, Software Engineering Techniques: Design for Quality, P325
   White J, 2023, Arxiv, DOI arXiv:2303.07839
   Wohlin C., 2014, P 18 INT C EV ASS SO, DOI DOI 10.1145/2601248.2601268
   Xia CS, 2023, PROC INT CONF SOFTW, P1482, DOI 10.1109/ICSE48619.2023.00129
   Xu SH, 2017, PROCEEDINGS OF 2017 3RD IEEE INTERNATIONAL CONFERENCE ON COMPUTER AND COMMUNICATIONS (ICCC), P2503, DOI 10.1109/CompComm.2017.8322986
   Xu SH, 2017, PROC INT SYMP SOFTW, P24, DOI 10.1109/ISSRE.2017.35
   Yamanaka J., 2021, arXiv
   Yang LM, 2009, ASIA PAC SOFWR ENG, P43, DOI 10.1109/APSEC.2009.20
   Yoshida N, 2019, 2019 IEEE/ACM 3RD INTERNATIONAL WORKSHOP ON REFACTORING (IWOR 2019), P67, DOI 10.1109/IWoR.2019.00020
   Yue RR, 2018, PROC IEEE INT CONF S, P115, DOI 10.1109/ICSME.2018.00021
   Zakeri-Nasrabadi M, 2023, ACM COMPUT SURV, V55, DOI 10.1145/3596908
   Zarras AV, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P922, DOI 10.1145/2786805.2803203
   Zhang M, 2011, J SOFTW MAINT EVOL-R, V23, P179, DOI 10.1002/smr.521
   Zhang WX, 2023, Arxiv, DOI arXiv:2305.15005
NR 198
TC 0
Z9 0
U1 4
U2 4
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD APR
PY 2024
VL 50
IS 4
BP 668
EP 694
DI 10.1109/TSE.2023.3345800
PG 27
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA OC2K3
UT WOS:001204993400009
OA hybrid, Green Submitted
DA 2024-08-05
ER

PT J
AU Morán, J
   Bertolino, A
   de la Riva, C
   Tuya, J
AF Moran, Jesus
   Bertolino, Antonia
   de la Riva, Claudio
   Tuya, Javier
TI Automatic Debugging of Design Faults in MapReduce Applications
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Debugging aids; testing and debugging
ID LOCALIZATION
AB Among the current technologies to analyse large data, the MapReduce processing model stands out in Big Data. MapReduce is implemented in frameworks such as Hadoop, Spark or Flink that are able to manage the program executions according to the resources available at runtime. The developer should design the program in order to support all possible non-deterministic executions. However, the program may fail due to a design fault. Debugging these kinds of faults is difficult because the data are executed non-deterministically in parallel and the fault is not caused directly by the code, but by its design. This paper presents a framework called MRDebug which includes two debugging techniques focused on the MapReduce design faults. A spectrum-based fault localization technique locates the root cause of these faults analysing several executions of the test case, and a Delta Debugging technique isolates the data relevant to trigger the failure. An empirical evaluation with 13 programs shows that MRDebug is effective in debugging the faults, especially when the localization is done with the reduced data. In summary, MRDebug automatically provides valuable information to understand MapReduce design faults as it helps locate their root cause and obtains a minimal data that triggers the failure.
C1 [Moran, Jesus; de la Riva, Claudio; Tuya, Javier] Univ Oviedo, Comp Sci Dept, Oviedo 33203, Spain.
   [Bertolino, Antonia] CNR, ISTI, I-56124 Pisa, Italy.
C3 University of Oviedo; Consiglio Nazionale delle Ricerche (CNR); Istituto
   di Scienza e Tecnologie dell'Informazione "Alessandro Faedo" (ISTI-CNR)
RP Morán, J (corresponding author), Univ Oviedo, Comp Sci Dept, Oviedo 33203, Spain.
EM moranjesus@uniovi.es; antonia.bertolino@isti.cnr.it; claudio@uniovi.es;
   tuya@uniovi.es
RI Bertolino, Antonia/ABD-6837-2020; Moran, Jesus/E-7615-2016; Tuya,
   Javier/L-6850-2014
OI Bertolino, Antonia/0000-0001-8749-1356; Moran,
   Jesus/0000-0002-7544-3901; Tuya, Javier/0000-0002-1091-934X
FU MCIN/AEI/10.13039/501100011033 (Spain)
FX No Statement Available
CR de Souza HA, 2017, Arxiv, DOI arXiv:1607.04347
   Abreu R, 2007, TAIC PART 2007 - TESTING: ACADEMIC AND INDUSTRIAL CONFERENCE - PRACTICE AND RESEARCH TECHNIQUES, PROCEEDINGS, P89, DOI 10.1109/TAIC.PART.2007.13
   Andrews JH, 2005, PROC INT CONF SOFTW, P402, DOI 10.1145/1062455.1062530
   [Anonymous], Data mining and machine learning based on MapReduce
   [Anonymous], 2019, ISO/IEC 20546:2019
   [Anonymous], PageRank implemented in MapReduce
   [Anonymous], Movies analysis implemented in MapReduce
   [Anonymous], JobConf
   [Anonymous], Apache flink: Scalable stream and batch data processing
   Arrieta A, 2018, INFORM SOFTWARE TECH, V100, P18, DOI 10.1016/j.infsof.2018.03.008
   Babu S., 2010, SoCC, P137, DOI DOI 10.1145/1807128.1807150
   Bagherzadeh M, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P432, DOI 10.1145/3338906.3338939
   Baltes S, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-021-10072-8
   Bergen E., 2017, Datenbanksysteme Fur Bus, P65
   Camargo S. R., 2013, P 7 BRAZ WORKSH SYST
   Chapman A, 2020, PROC VLDB ENDOW, V14, P507, DOI 10.14778/3436905.3436911
   Chen QR, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P362, DOI 10.1145/3368089.3409727
   Chen S., 1998, Tech. Rep. HKUST-CS98-01, P1
   Cohen J, 1977, Statistical power for the behaviour sciences
   Contreras-Rojas B, 2019, PROCEEDINGS OF THE 2019 TENTH ACM SYMPOSIUM ON CLOUD COMPUTING (SOCC '19), P453, DOI 10.1145/3357223.3362738
   Cook TD., 1979, QUASIEXPERIMENTATION
   Coolican H., 2009, RES METHODS STAT PSY
   Dave M., 2013, Citeseer, Tech. Rep.
   Dean J, 2004, USENIX ASSOCIATION PROCEEDINGS OF THE SIXTH SYMPOSIUM ON OPERATING SYSTEMS DESIGN AND IMPLEMENTATION (OSDE '04), P137
   Diestelkämper R, 2021, PROC VLDB ENDOW, V14, P2731, DOI 10.14778/3476311.3476331
   Feng J., 2019, P IEEE INT C BIG DAT, P221
   Fisher Danyel, 2012, Interactions, V19, P50, DOI 10.1145/2168931.2168943
   Garduno E, 2012, P 26 INT C LARG INST, P33
   Gazzola L, 2019, IEEE T SOFTWARE ENG, V45, P34, DOI 10.1109/TSE.2017.2755013
   Gecer M., 2020, Debugging spark applications: A study on debugging techniques of Spark developers
   Glenford J Myers., 1979, The art of software testing
   Grigorjev N., P S ARG ING SOFTW AS, P1
   Grindal M, 2005, SOFTW TEST VERIF REL, V15, P167, DOI 10.1002/stvr.319
   Groce A., 2006, International Journal on Software Tools for Technology Transfer, V8, P229, DOI 10.1007/s10009-005-0202-0
   Gulzar MA, 2021, PROCEEDINGS OF THE 2021 ACM SYMPOSIUM ON CLOUD COMPUTING (SOCC '21), P359, DOI 10.1145/3472883.3487016
   Gulzar MA, 2017, PROCEEDINGS OF THE 2017 SYMPOSIUM ON CLOUD COMPUTING (SOCC '17), P520, DOI 10.1145/3127479.3131624
   Gulzar MA, 2016, PROC INT CONF SOFTW, P784, DOI 10.1145/2884781.2884813
   hadoop, Apache Hadoop: Open-source software for reliable, scalable, distributed computing
   Harrold MJ, 2000, SOFTW TEST VERIF REL, V10, P171, DOI 10.1002/1099-1689(200009)10:3<171::AID-STVR209>3.0.CO;2-J
   Interlandi M, 2015, PROC VLDB ENDOW, V9, P216
   Jagannath V., 2011, 2011 IEEE International Symposium on Parallel & Distributed Processing, Workshops and Phd Forum, P1266, DOI 10.1109/IPDPS.2011.268
   Jiang B, 2012, INFORM SOFTWARE TECH, V54, P739, DOI 10.1016/j.infsof.2012.01.006
   Kalhauge CG, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P556, DOI 10.1145/3338906.3338956
   Kavulya Soila, 2010, Proceedings 2010 10th IEEE/ACM International Conference on Cluster, Cloud and Grid Computing (CCGrid), P94, DOI 10.1109/CCGRID.2010.112
   Khoussainova N, 2012, PROC VLDB ENDOW, V5, P598, DOI 10.14778/2180912.2180913
   Kim M, 2018, IEEE T SOFTWARE ENG, V44, P1024, DOI 10.1109/TSE.2017.2754374
   Kocakulak Hakan, 2011, Proceedings of the 2011 International Conference on High Performance Computing and Simulation (HPCS 2011), P836
   Kumar A, 2020, PROC VLDB ENDOW, V13, P740, DOI 10.14778/3377369.3377381
   Lewis D., 1973, Journal of Philosophy, V70, P556
   Logothetis S., 2013, P 4 ANN S CLOUD COMP, P1
   Malhotra R., Empirical Research in Software Engineering: Concepts, Analysis, and Applications
   Marra M, 2020, SCI COMPUT PROGRAM, V194, DOI 10.1016/j.scico.2020.102460
   Misherghi Z., 2006, P 28 INT C SOFTW ENG
   Moran Jesus, 2023, Zenodo, DOI 10.5281/ZENODO.7778710
   Morán J, 2019, J SOFTW-EVOL PROC, V31, DOI 10.1002/smr.2120
   Morán J, 2018, IEEE T RELIAB, V67, P717, DOI 10.1109/TR.2018.2802047
   Morán J, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY AND SECURITY (QRS), P73, DOI 10.1109/QRS.2017.17
   Morán J, 2014, 2014 INTERNATIONAL CONFERENCE ON FUTURE INTERNET OF THINGS AND CLOUD (FICLOUD), P379, DOI 10.1109/FiCloud.2014.67
   Naish L, 2011, ACM T SOFTW ENG METH, V20, DOI 10.1145/2000791.2000795
   Nie CH, 2011, ACM COMPUT SURV, V43, DOI 10.1145/1883612.1883618
   Olston C., 2011, P ACM SIGMOD INT C M, P1221
   Pan X., 2010, ACM SIGMETRICS PERFO, V37, P8
   Parnin C., 2011, Proceedings of the 2011 International Symposium on Software Testing and Analysis ISSTA, P199
   Patton M. Q., 1990, QUALITATIVE EVALUATI, DOI DOI 10.1002/NUR.4770140111
   Ren K, 2013, PROC VLDB ENDOW, V6, P853, DOI 10.14778/2536206.2536213
   Reps T, 1997, LECT NOTES COMPUT SC, V1301, P432, DOI 10.1145/267896.267925
   Rivas B, 2015, LECT NOTES COMPUT SC, V9382, P164, DOI 10.1007/978-3-319-25747-1_17
   Schatz MC, 2009, BIOINFORMATICS, V25, P1363, DOI 10.1093/bioinformatics/btp236
   Segura S, 2016, IEEE T SOFTWARE ENG, V42, P805, DOI 10.1109/TSE.2016.2532875
   Tan X., 2009, P C HOT TOP CLOUD CO, P1
   Treelogic S.L., Treelogic
   Wang GC, 2021, PROCEEDINGS OF THE 29TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '21), P881, DOI 10.1145/3468264.3468625
   Wang ZH, 2021, PROCEEDINGS OF THE 29TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '21), P516, DOI 10.1145/3468264.3468613
   Wang ZH, 2021, PROC IEEE ACM INT C, P132, DOI 10.1109/ICSE-Companion52605.2021.00057
   WEYUKER EJ, 1982, COMPUT J, V25, P465, DOI 10.1093/comjnl/25.4.465
   Wohlin P., 2012, Experimentation in Software Engineering
   Wong WE, 2016, IEEE T SOFTWARE ENG, V42, P707, DOI 10.1109/TSE.2016.2521368
   Wong WE, 2009, INT J SOFTW ENG KNOW, V19, P573, DOI 10.1142/S021819400900426X
   Xiao T, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE COMPANION 2014), P44, DOI 10.1145/2591062.2591177
   Xu TY, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P307, DOI 10.1145/2786805.2786852
   Xu XF, 2011, INT J SOFTW ENG KNOW, V21, P803, DOI 10.1142/S0218194011005505
   Xu ZH, 2013, I S WORKL CHAR PROC, P87, DOI 10.1109/IISWC.2013.6704673
   Yoo X., 2014, Research Note, Univ. Coll. London
   Zaharia M., 2010, HOTCLOUD, V10, P95
   Zeller A, 2002, IEEE T SOFTWARE ENG, V28, P183, DOI 10.1109/32.988498
   Zeller A, 1999, LECT NOTES COMPUT SC, V1687, P253, DOI 10.1145/318774.318946
   Zhang YL, 2021, PROC INT CONF SOFTW, P188, DOI 10.1109/ICSE43902.2021.00029
   Zhou HC, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P17, DOI 10.1109/ICSE.2015.130
NR 88
TC 0
Z9 0
U1 1
U2 1
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD APR
PY 2024
VL 50
IS 4
BP 956
EP 978
DI 10.1109/TSE.2024.3369766
PG 23
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA OC2K3
UT WOS:001204993400014
OA hybrid
DA 2024-08-05
ER

PT J
AU Xu, ZK
   Guo, SK
   Wang, YM
   Chen, R
   Li, H
   Li, XC
   Jiang, H
AF Xu, Zhengkang
   Guo, Shikai
   Wang, Yumiao
   Chen, Rong
   Li, Hui
   Li, Xiaochen
   Jiang, He
TI Code Comment Inconsistency Detection Based on Confidence Learning
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Code comment; software document; confidence learning
AB Code comments are a crucial source of software documentation that captures various aspects of the code. Such comments play a vital role in understanding the source code and facilitating communication between developers. However, with the iterative release of software, software projects become larger and more complex, leading to a corresponding increase in issues such as mismatched, incomplete, or outdated code comments. These inconsistencies in code comments can misguide developers and result in potential bugs, and there has been a steady rise in reports of such inconsistencies over time. Despite numerous methods being proposed for detecting code comment inconsistencies, their learning effect remains limited due to a lack of consideration for issues such as characterization noise and labeling errors in datasets. To overcome these limitations, we propose a novel approach called MCCL that first removes noise from the dataset and then detects inconsistent code comments in a timely manner, thereby enhancing the model's learning ability. Our proposed model facilitates better matching between code and comments, leading to improved development of software engineering projects. MCCL comprises two components, namely method comment detection and confidence learning denoising. The method comment detection component captures the intricate relationships between code and comments by learning their syntactic and semantic structures. It correlates the code and comments through an attention mechanism to identify how changes in the code affect the comments. Furthermore, confidence learning denoising component of MCCL identifies and removes characterization noises and labeling errors to enhance the quality of the datasets. This is achieved by implementing principles such as pruning noisy data, counting with probabilistic thresholds to estimate noise, and ranking examples to train with confidence. By effectively eliminating noise from the dataset, our model is able to more accurately learn inconsistencies between comments and source code. Our experiments on 1,518 open-source projects demonstrate that MCCL can accurately detect inconsistencies, achieving an average F1-score of 82.6%. This result outperforms state-of-the-art methods by 2.4% to 28.0%. Therefore, MCCL is more effective in identifying inconsistent comments based on code changes compared to existing approaches.
C1 [Xu, Zhengkang; Guo, Shikai; Wang, Yumiao; Chen, Rong; Li, Hui] Dalian Maritime Univ, Sch Informat Sci & Technol, Dalian 116026, Peoples R China.
   [Xu, Zhengkang] Chinese Acad Sci, Aerosp Informat Res Inst, Beijing 100094, Peoples R China.
   [Guo, Shikai] Dalian Key Lab Artificial Intelligence, Dalian 116024, Peoples R China.
   [Li, Xiaochen; Jiang, He] Dalian Univ Technol, Sch Software, Dalian 116024, Peoples R China.
   [Li, Xiaochen; Jiang, He] Key Lab Ubiquitous Network & Serv Software Liaonin, Dalian 116024, Peoples R China.
C3 Dalian Maritime University; Chinese Academy of Sciences; Aerospace
   Information Research Institute, CAS; Dalian University of Technology
RP Guo, SK (corresponding author), Dalian Maritime Univ, Sch Informat Sci & Technol, Dalian 116026, Peoples R China.
EM xuzhengkang23@mails.ucas.ac.cn; shikai.guo@dlmu.edu.cn; wym@dlmu.edu.cn;
   rchen@dlmu.edu.cn; li_hui@dlmu.edu.cn; xiaochen.li@dlut.edu.cn;
   jianghe@dlut.edu.cn
FU National Natural Science Foundation of China
FX No Statement Available
CR Allamanis M, 2018, ACM COMPUT SURV, V51, DOI 10.1145/3212695
   Alon U., 2020, INT C MACHINE LEARNI, P245
   [Anonymous], ?About us"
   Buse RPL, 2010, IEEE T SOFTWARE ENG, V36, P546, DOI 10.1109/TSE.2009.70
   Chandramohan M, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P678, DOI 10.1145/2950290.2950350
   Chen HX, 2018, PROCEEDINGS OF THE 2018 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY (CCS'18), P2095, DOI 10.1145/3243734.3243849
   Cimasa A, 2019, EUROMICRO CONF PROC, P244, DOI 10.1109/SEAA.2019.00046
   Corazza A, 2018, SOFTWARE QUAL J, V26, P751, DOI 10.1007/s11219-016-9347-1
   de Souza SCB., 2005, P 23 ANN INT C DESIG, P68, DOI 10.1145/1085313.1085331
   Feng ZY, 2020, FINDINGS OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, EMNLP 2020, P1536
   Fluri B, 2009, SOFTWARE QUAL J, V17, P367, DOI 10.1007/s11219-009-9075-x
   Han B, 2018, ADV NEUR IN, V31, DOI 10.5555/3327757.3327944
   Dam HK, 2021, IEEE T SOFTWARE ENG, V47, P67, DOI 10.1109/TSE.2018.2881961
   Hu X, 2018, INT C PROGRAM COMPRE, P200, DOI 10.1145/3196321.3196334
   Ibrahim WM, 2012, J SYST SOFTWARE, V85, P2293, DOI 10.1016/j.jss.2011.09.019
   Jiang Zhen Ming, 2006, MSR '06: Proceedings of the 2006 international workshop on Mining software repositories, P179, DOI [10.1145/1137983.1138030, DOI 10.1145/1137983.1138030]
   Khamis N, 2010, LECT NOTES COMPUT SC, V6177, P68, DOI 10.1007/978-3-642-13881-2_7
   Li Y., 2016, ICLR, P1
   Li YK, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P533, DOI 10.1145/3338906.3338975
   Li YK, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P627, DOI 10.1145/3106237.3106295
   Lin Tan, 2007, Operating Systems Review, V41, P145, DOI 10.1145/1323293.1294276
   Liu S, 2022, PR MACH LEARN RES
   Liu ZY, 2018, P INT COMP SOFTW APP, P154, DOI 10.1109/COMPSAC.2018.00028
   Liu ZX, 2018, IEEE INT CONF AUTOM, P373, DOI 10.1145/3238147.3238190
   Malik H, 2008, PROC IEEE INT CONF S, P167, DOI 10.1109/ICSM.2008.4658065
   Nguyen V. H., 2010, P 6 INT WORKSH SEC M, P1
   Northcutt CG, 2021, J ARTIF INTELL RES, V70, P1373
   Padioleau Y, 2009, PROC INT CONF SOFTW, P331, DOI 10.1109/ICSE.2009.5070533
   Panthaplackel S, 2021, AAAI CONF ARTIF INTE, V35, P427
   Panthaplackel S, 2020, 58TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (ACL 2020), P1853
   Pascarella L, 2019, EMPIR SOFTW ENG, V24, P1499, DOI 10.1007/s10664-019-09694-w
   Patrini G, 2017, PROC CVPR IEEE, P2233, DOI 10.1109/CVPR.2017.240
   Ratol IK, 2017, IEEE INT CONF AUTOM, P112, DOI 10.1109/ASE.2017.8115624
   Sadu A., 2019, Automatic detection of outdated comments in open source Java projects
   Shin Hwei Tan, 2012, 2012 IEEE Fifth International Conference on Software Testing, Verification and Validation (ICST 2012), P260, DOI 10.1109/ICST.2012.106
   Shin Y, 2011, IEEE T SOFTWARE ENG, V37, P772, DOI 10.1109/TSE.2010.81
   Shu J, 2019, ADV NEUR IN, V32
   Stapleton S, 2020, INT C PROGRAM COMPRE, P2, DOI 10.1145/3387904.3389258
   Steidl D, 2013, CONF PROC INT SYMP C, P83, DOI 10.1109/ICPC.2013.6613836
   Svensson A., 2015, Reducing outdated and inconsistent code comments during software development: The comment validator program
   Tan L, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P11, DOI 10.1145/1985793.1985796
   Tan Lin, 2007, P 11 USENIX WORKSH H, V7, P49
   Vaswani A, 2017, ADV NEUR IN, V30
   Velickovic P, 2018, INT C LEARN REPR, DOI DOI 10.48550/ARXIV.1710.10903
   Wang YS, 2019, IEEE I CONF COMP VIS, P322, DOI 10.1109/ICCV.2019.00041
   Wen FC, 2019, INT C PROGRAM COMPRE, P53, DOI 10.1109/ICPC.2019.00019
   Xin J., 2019, P 7 INT C LEARN REPR
   Xu ZZ, 2017, PROC INT CONF SOFTW, P462, DOI 10.1109/ICSE.2017.49
   Xu ZX, 2010, LECT NOTES COMPUT SC, V6415, P535, DOI 10.1007/978-3-642-16558-0_44
   Zhou Y, 2017, PROC INT CONF SOFTW, P27, DOI 10.1109/ICSE.2017.11
NR 50
TC 0
Z9 0
U1 2
U2 2
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAR
PY 2024
VL 50
IS 3
BP 598
EP 617
DI 10.1109/TSE.2024.3358489
PG 20
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA LQ6H5
UT WOS:001188302300011
DA 2024-08-05
ER

PT J
AU Yang, HR
   Nong, Y
   Wang, SW
   Cai, HP
AF Yang, Haoran
   Nong, Yu
   Wang, Shaowei
   Cai, Haipeng
TI Multi-Language Software Development: Issues, Challenges, and Solutions
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Multi-language software; Stack Overflow; developer discussion; software
   development issues; language interfacing; software build; data format;
   cross-language interoperability; error handling
ID LARGE-SCALE; STACK; CODE
AB Developing software projects that incorporate multiple languages has been a prevalent practice for many years. However, the issues encountered by developers during the development process, the underlying challenges causing these issues, and the solutions provided to developers remain unknown. In this paper, our objective is to provide answers to these questions by conducting a study on developer discussions on Stack Overflow (SO). Through a manual analysis of 586 highly relevant posts spanning 14 years, we revealed that multilingual development is a highly and sustainably active topic on SO, with older questions becoming inactive and newer ones getting first asked (and then mostly remaining active for more than one year). From these posts, we observed a diverse array of issues (11 categories), primarily centered around interfacing and data handling across different languages. Our analysis suggests that error/exception handling issues were the most difficult to resolve among those issue categories, while security related issues were most likely to receive an accepted answer. The primary challenge faced by developers was the complexity and diversity inherent in building multilingual code and ensuring interoperability. Additionally, developers often struggled due to a lack of technical expertise on the varied features of different programming languages (e.g., threading and memory management mechanisms). In addition, properly handling message passing across languages constituted a key challenge with using implicit language interfacing. Notably, Stack Overflow emerged as a crucial source of solutions to these challenges, with the majority (73%) of the posts receiving accepted answers, most within a week (36.5% within 24 hours and 25% in the following six days). Based on our analysis results, we have formulated actionable insights and recommendations that can be utilized by researchers and developers in this field.
C1 [Yang, Haoran; Nong, Yu; Cai, Haipeng] Washington State Univ, Sch Elect Engn & Comp Sci, Pullman, WA 99163 USA.
   [Wang, Shaowei] Univ Manitoba, Dept Comp Sci, Winnipeg, MB R3T 2N2, Canada.
C3 Washington State University; University of Manitoba
RP Cai, HP (corresponding author), Washington State Univ, Sch Elect Engn & Comp Sci, Pullman, WA 99163 USA.
EM haipeng.cai@wsu.edu
RI Cai, Haipeng/K-7802-2015
OI Cai, Haipeng/0000-0002-5224-9970; yang, haoran/0000-0001-9298-9757
FU National Science Foundation (NSF)
FX No Statement Available
CR Abdalkareem R, 2017, INFORM SOFTWARE TECH, V88, P148, DOI 10.1016/j.infsof.2017.04.005
   Abidi M, 2019, P 29 ANN INT C COMP, P72
   Abidi M, 2021, ACM T SOFTW ENG METH, V30, DOI 10.1145/3432690
   Nguyen AT, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P858, DOI 10.1109/ICSE.2015.336
   [Anonymous], Hello world with boost Python and Python 3.2
   [Anonymous], Content-transfer-encoding in file uploading request
   [Anonymous], 2014, Convert PHP associative array into JavaScript object
   [Anonymous], Multithreading with Python and C api
   [Anonymous], Encrypt AES with C# to match Java encryption
   [Anonymous], Is it safe to keep C++ pointers in C#?
   [Anonymous], How do I remove unnecessary resources from my project?
   [Anonymous], 2019, Understanding Java and native thread details
   [Anonymous], With pybind11, how to split my code into multiple modules/files?
   [Anonymous], Calling C functions in Python
   [Anonymous], Krajee bootstrap file input, catching AJAX success response
   [Anonymous], Wrapping a C library in Python: C, Cython or ctypes?
   [Anonymous], Application exits (no exception) when referencing 64bit DLL from C#
   [Anonymous], What happens if I call a Java function from multiple threads from C with JNI?
   [Anonymous], How to setup QWebChannel JS API for use in a QWebEngineView?
   [Anonymous], Does managed languages lock flush and reload variables of native libraries?
   [Anonymous], C# calling native C++ all functions: What types to use?
   [Anonymous], How to convert JObject to JString
   [Anonymous], How can I convert Python dictionary to JavaScript hash table?
   [Anonymous], Memory leak using JNI to retrieve string's value from Java code
   Bagherzadeh M, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P432, DOI 10.1145/3338906.3338939
   Barua A, 2014, EMPIR SOFTW ENG, V19, P619, DOI 10.1007/s10664-012-9231-y
   Bhatia A, 2022, IEEE T SOFTWARE ENG, V48, P502, DOI 10.1109/TSE.2020.2994006
   Bissyandé TF, 2013, P INT COMP SOFTW APP, P303, DOI 10.1109/COMPSAC.2013.55
   Blei DM, 2012, COMMUN ACM, V55, P77, DOI 10.1145/2133806.2133826
   Buro S, 2020, LECT NOTES COMPUT SC, V12389, P310, DOI 10.1007/978-3-030-65474-0_14
   Cai HP, 2022, IEEE T SOFTWARE ENG, V48, P4733, DOI 10.1109/TSE.2021.3124795
   Chen C, 2022, IEEE T SOFTWARE ENG, V48, P2987, DOI 10.1109/TSE.2021.3074309
   Delorey D. P., 2007, P 2 INT WORKSH PUBL, P1
   Ebert C, 2016, IEEE SOFTWARE, V33, P94, DOI 10.1109/MS.2016.68
   EINARSSON B, 1984, SOFTWARE PRACT EXPER, V14, P383, DOI 10.1002/spe.4380140410
   Fu XQ, 2021, ACM T SOFTW ENG METH, V30, DOI 10.1145/3379345
   Gantayat N, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P406, DOI 10.1109/MSR.2015.50
   Grichi M., 2020, Towards understanding modern multi-language software systems
   Grichi M, 2021, IEEE T RELIAB, V70, P428, DOI 10.1109/TR.2020.3024873
   Grichi M, 2020, PROC IEEE INT CONF S, P546, DOI 10.1109/ICSME46990.2020.00058
   Gu XD, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P631, DOI 10.1145/2950290.2950334
   Jones C., 2010, Software engineering best practices: Lessons from successful projects in the top companies
   Kochhar PS, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P563, DOI 10.1109/SANER.2016.112
   Kontogiannis K, 2006, PROC IEEE INT CONF S, P497
   Li W, 2024, ACM T SOFTW ENG METH, V33, DOI 10.1145/3631967
   Li W, 2022, PROCEEDINGS OF THE 30TH ACM JOINT MEETING EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, ESEC/FSE 2022, P1662, DOI 10.1145/3540250.3558925
   Li W, 2022, PROCEEDINGS OF THE 30TH ACM JOINT MEETING EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, ESEC/FSE 2022, P847, DOI 10.1145/3540250.3549173
   Li W, 2023, PROCEEDINGS OF THE 32ND USENIX SECURITY SYMPOSIUM, P1379
   Li W, 2022, PROCEEDINGS OF THE 31ST USENIX SECURITY SYMPOSIUM, P2513
   Li W, 2021, PROC IEEE ACM INT C, P256, DOI 10.1109/ICSE-Companion52605.2021.00119
   Li W, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P1621, DOI 10.1145/3368089.3417923
   Lopes M, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-022-10144-3
   Mayer Philip, 2017, Journal of Software Engineering Research and Development, V5, DOI 10.1186/s40411-017-0035-z
   Mayer P., 2015, Proceedings of the 19th International Conference on Evaluation and Assessment in Software Engineering, P1
   Mayer P, 2017, COMPUTING, V99, P701, DOI 10.1007/s00607-016-0528-3
   Meng N, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P372, DOI 10.1145/3180155.3180201
   Mir AM, 2022, PROC INT CONF SOFTW, P2241, DOI 10.1145/3510003.3510124
   MORRISSEY ER, 1974, SOCIOL METHOD RES, V3, P209, DOI 10.1177/004912417400300204
   Puzhevich V., Scand
   Ray B, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P155, DOI 10.1145/2635868.2635922
   Scrapy, About us
   Stack Overflow, About us
   Tomassetti Federico., 2014, Proceedings of the 18th International Conference on Evaluation and Assessment in Software Engineering, P1
   Wang JW, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P233, DOI 10.1145/3368089.3409735
   Wang SW, 2018, EMPIR SOFTW ENG, V23, P1552, DOI 10.1007/s10664-017-9558-5
   Wang ZH, 2022, J SYST SOFTWARE, V194, DOI 10.1016/j.jss.2022.111488
   Wu YH, 2019, EMPIR SOFTW ENG, V24, P637, DOI 10.1007/s10664-018-9634-5
   Xia X, 2017, EMPIR SOFTW ENG, V22, P3149, DOI 10.1007/s10664-017-9514-4
   Xu ZG, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P607, DOI 10.1145/2950290.2950343
   Yang Haoran, 2022, ESEC/FSE 2022: Proceedings of the 30th ACM Joint European Software Engineering Conference and Symposium on the Foundations of Software Engineering, P1621, DOI 10.1145/3540250.3560880
   Yang HR, 2023, PROC INT CONF SOFTW, P1840, DOI 10.1109/ICSE48619.2023.00157
   Yang XL, 2016, J COMPUT SCI TECH-CH, V31, P910, DOI 10.1007/s11390-016-1672-0
NR 72
TC 0
Z9 0
U1 9
U2 9
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAR
PY 2024
VL 50
IS 3
BP 512
EP 533
DI 10.1109/TSE.2024.3358258
PG 22
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA LQ6H5
UT WOS:001188302300008
DA 2024-08-05
ER

PT J
AU Yang, YM
   Hu, X
   Gao, ZP
   Chen, JF
   Ni, C
   Xia, X
   Lo, DV
AF Yang, Yanming
   Hu, Xing
   Gao, Zhipeng
   Chen, Jinfu
   Ni, Chao
   Xia, Xin
   Lo, David
TI Federated Learning for Software Engineering: A Case Study of Code Clone
   Detection and Defect Prediction
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Data models; Training; Codes; Cloning; Task analysis; Benchmark testing;
   Industries; Federated learning; parameter aggregation strategy; skewed
   data distribution; code clone detection; defect prediction
ID NICAD
AB In various research domains, artificial intelligence (AI) has gained significant prominence, leading to the development of numerous learning-based models in research laboratories, which are evaluated using benchmark datasets. While the models proposed in previous studies may demonstrate satisfactory performance on benchmark datasets, translating academic findings into practical applications for industry practitioners presents challenges. This can entail either the direct adoption of trained academic models into industrial applications, leading to a performance decrease, or retraining models with industrial data, a task often hindered by insufficient data instances or skewed data distributions. Real-world industrial data is typically significantly more intricate than benchmark datasets, frequently exhibiting data-skewing issues, such as label distribution skews and quantity skews. Furthermore, accessing industrial data, particularly source code, can prove challenging for Software Engineering (SE) researchers due to privacy policies. This limitation hinders SE researchers' ability to gain insights into industry developers' concerns and subsequently enhance their proposed models. To bridge the divide between academic models and industrial applications, we introduce a federated learning (FL)-based framework called Almity. Our aim is to simplify the process of implementing research findings into practical use for both SE researchers and industry developers. Almity enhances model performance on sensitive skewed data distributions while ensuring data privacy and security. It introduces an innovative aggregation strategy that takes into account three key attributes: data scale, data balance, and minority class learnability. This strategy is employed to refine model parameters, thereby enhancing model performance on sensitive skewed datasets. In our evaluation, we employ two well-established SE tasks, i.e., code clone detection and defect prediction, as evaluation tasks. We compare the performance of Almity on both machine learning (ML) and deep learning (DL) models against two mainstream training methods, specifically the Centralized Training Method (CTM) and Vanilla Federated Learning (VFL), to validate the effectiveness and generalizability of Almity. Our experimental results demonstrate that our framework is not only feasible but also practical in real-world scenarios. Almity consistently enhances the performance of learning-based models, outperforming baseline training methods across all types of data distributions.
C1 [Yang, Yanming] Zhejiang Univ, Dept Comp Sci & Technol, Ningbo 310058, Peoples R China.
   [Hu, Xing; Ni, Chao] Zhejiang Univ, Sch Software Technol, Ningbo 315048, Peoples R China.
   [Gao, Zhipeng] Zhejiang Univ, Shanghai Inst Adv Study, Hangzhou 310085, Peoples R China.
   [Chen, Jinfu] Wuhan Univ, Sch Comp Sci, Wuhan, Peoples R China.
   [Xia, Xin] Software Engn Applicat Technol Lab, Hangzhou 310007, Peoples R China.
   [Lo, David] Singapore Management Univ, Sch Comp & Informat Syst, Singapore, Singapore.
C3 Zhejiang University; Zhejiang University; Zhejiang University; Wuhan
   University; Singapore Management University
RP Hu, X (corresponding author), Zhejiang Univ, Sch Software Technol, Ningbo 315048, Peoples R China.
EM yanmingyang@zju.edu.cn; xinghu@zju.edu.cn; zhipeng.gao@zju.edu.cn;
   jinfuchen@whu.edu.cn; chaoni@zju.edu.cn; xin.xia@acm.org;
   davidlo@smu.edu.sg
RI ; Lo, David/A-2493-2012
OI Ni, Chao/0000-0002-2906-0598; Yang, Yanming/0000-0002-6248-6734; Lo,
   David/0000-0002-4367-7201; GAO, Zhipeng/0000-0003-3030-9917; Xia,
   Xin/0000-0002-6302-3256; Hu, Xing/0000-0003-0093-3292
FU National Natural Science Foundation of China
FX No Statement Available
CR Harer JA, 2018, Arxiv, DOI arXiv:1803.04497
   Abu Alhija H, 2022, Arxiv, DOI arXiv:2209.14299
   Abyane A. E., 2022, arXiv
   [Anonymous], 2008, US
   [Anonymous], 2006, Proceedings of the 12th ACM SIGKDD international conference on Knowledge discovery and data mining, DOI DOI 10.1145/1150402.1150522
   [Anonymous], US
   [Anonymous], AIMultiple
   Arammongkolvichai V, 2019, INT WORKSH EMPIR ENG, P31, DOI 10.1109/IWESEP49350.2019.00014
   Bjerge K, 2022, REMOTE SENS ECOL CON, V8, P315, DOI 10.1002/rse2.245
   Brisimi TS, 2018, INT J MED INFORM, V112, P59, DOI 10.1016/j.ijmedinf.2018.01.007
   Çarka J, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-022-10186-7
   Cordy JR, 2011, CONF PROC INT SYMP C, P219, DOI 10.1109/ICPC.2011.26
   Feng ZY, 2020, Arxiv, DOI [arXiv:2002.08155, 10.48550/arXiv.2002.08155]
   GitHub, ABOUT US
   Google,, 2017, FEDERATED LEARNING C
   Guo DY, 2021, Arxiv, DOI arXiv:2009.08366
   Zhuo HH, 2020, Arxiv, DOI arXiv:1901.08277
   Herrera YM, 2007, POLIT ANAL, V15, P365, DOI 10.1093/pan/mpm007
   Ibrahim DR, 2017, 2017 INTERNATIONAL CONFERENCE ON NEW TRENDS IN COMPUTING SCIENCES (ICTCS), P252, DOI 10.1109/ICTCS.2017.39
   Islam MR, 2017, INT SYMP EMP SOFTWAR, P20, DOI 10.1109/ESEM.2017.9
   Jadon S, 2016, 2016 IEEE INTERNATIONAL CONFERENCE ON COMPUTING, COMMUNICATION AND AUTOMATION (ICCCA), P299, DOI 10.1109/CCAA.2016.7813733
   Jiang LX, 2007, PROC INT CONF SOFTW, P96
   Kairouz P, 2021, FOUND TRENDS MACH LE, V14, P1, DOI 10.1561/2200000083
   Kamei Y, 2016, EMPIR SOFTW ENG, V21, P2072, DOI 10.1007/s10664-015-9400-x
   Kamei Y, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 5, P33, DOI 10.1109/SANER.2016.56
   Kamei Y, 2013, IEEE T SOFTWARE ENG, V39, P757, DOI 10.1109/TSE.2012.70
   Kamiya T, 2002, IEEE T SOFTWARE ENG, V28, P654, DOI 10.1109/TSE.2002.1019480
   Kapser CJ, 2008, EMPIR SOFTW ENG, V13, P645, DOI 10.1007/s10664-008-9076-6
   Khan LU, 2021, IEEE COMMUN SURV TUT, V23, P1759, DOI 10.1109/COMST.2021.3090430
   Koch B, 2021, Arxiv, DOI arXiv:2112.01716
   Krinke J, 2001, EIGHTH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P301, DOI 10.1109/WCRE.2001.957835
   Lanubile F, 2003, SEVENTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P379, DOI 10.1109/CSMR.2003.1192447
   Lauriola I, 2022, NEUROCOMPUTING, V470, P443, DOI 10.1016/j.neucom.2021.05.103
   Lee S., 2005, COMPANION 20 ANN ACM, DOI 10.1145/1094855.1094903
   Li J, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY AND SECURITY (QRS), P318, DOI 10.1109/QRS.2017.42
   Li QB, 2022, PROC INT CONF DATA, P965, DOI 10.1109/ICDE53745.2022.00077
   Li T, 2020, IEEE SIGNAL PROC MAG, V37, P50, DOI 10.1109/MSP.2020.2975749
   Li X, 2020, Arxiv, DOI arXiv:1907.02189
   Liu CY, 2021, 2021 36TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING ASE 2021, P617, DOI 10.1109/ASE51524.2021.9678907
   Lo SK, 2021, ACM COMPUT SURV, V54, DOI 10.1145/3450288
   Long G., 2020, Federated Learning: Privacy and Incentive, P240, DOI [10.1007/978-3-030-63076-817, 10.1007/978-3-030-63076-8_17, DOI 10.1007/978-3-030-63076-8_17]
   Lu S, 2021, Arxiv, DOI arXiv:2102.04664
   Luque A, 2019, PATTERN RECOGN, V91, P216, DOI 10.1016/j.patcog.2019.02.023
   Macbeth G, 2011, UNIV PSYCHOL, V10, P545, DOI 10.11144/Javeriana.upsy10-2.cdcp
   Malhotra R., 2022, P 5 INT C COMP INT N, P1
   McMahan HB, 2017, PR MACH LEARN RES, V54, P1273
   Mockus A, 2000, BELL LABS TECH J, V5, P169, DOI 10.1002/bltj.2229
   Moussa R, 2022, PROCEEDINGS OF THE 31ST ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, ISSTA 2022, P101, DOI 10.1145/3533767.3534405
   Munappy AR, 2022, J SYST SOFTWARE, V191, DOI 10.1016/j.jss.2022.111359
   Nguyen DC, 2021, IEEE COMMUN SURV TUT, V23, P1622, DOI 10.1109/COMST.2021.3075439
   Ni C, 2022, ACM T SOFTW ENG METH, V31, DOI 10.1145/3508479
   Liang PP, 2020, Arxiv, DOI [arXiv:2001.01523, DOI 10.48550/ARXIV.2001.01523]
   Rahman W, 2020, INT WORKS SOFTW CLON, P38, DOI [10.1109/iwsc50091.2020.9047640, 10.1109/IWSC50091.2020.9047640]
   Rattan D, 2013, INFORM SOFTWARE TECH, V55, P1165, DOI 10.1016/j.infsof.2013.01.008
   Raychev V, 2016, ACM SIGPLAN NOTICES, V51, P731, DOI 10.1145/3022671.2984041
   Roy CK, 2008, INT C PROGRAM COMPRE, P172, DOI 10.1109/ICPC.2008.41
   Roy CK, 2009, SCI COMPUT PROGRAM, V74, P470, DOI 10.1016/j.scico.2009.02.007
   Saini V, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P354, DOI 10.1145/3236024.3236026
   Sajnani H, 2016, PROC INT CONF SOFTW, P1157, DOI 10.1145/2884781.2884877
   Stack Exchange Inc, About us
   Subramanian AS, 2022, COMPUT SPEECH LANG, V75, DOI 10.1016/j.csl.2022.101360
   Suzen A. A., 2020, Namik Kemal Tip Dergisi, V8, P22
   Svajlenko J, 2014, PROC IEEE INT CONF S, P476, DOI 10.1109/ICSME.2014.77
   Truex S, 2019, P 12 ACM WORKSH ART, P1, DOI DOI 10.1145/3338501.3357370
   Tufano M, 2018, IEEE WORK CONF MIN S, P542, DOI 10.1145/3196398.3196431
   Verma D, 2019, 2019 IEEE INTERNATIONAL CONFERENCE ON WEB SERVICES (IEEE ICWS 2019), P20, DOI 10.1109/ICWS.2019.00016
   Wang WH, 2020, PROCEEDINGS OF THE 2020 IEEE 27TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER '20), P261, DOI [10.1109/saner48275.2020.9054857, 10.1109/SANER48275.2020.9054857]
   Wei HH, 2017, PROCEEDINGS OF THE TWENTY-SIXTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P3034
   White M, 2016, IEEE INT CONF AUTOM, P87, DOI 10.1145/2970276.2970326
   Wu YM, 2020, IEEE INT CONF AUTOM, P821, DOI 10.1145/3324884.3416562
   Xia X, 2016, IEEE T SOFTWARE ENG, V42, P977, DOI 10.1109/TSE.2016.2543218
   Xu J, 2021, J HEALTHC INFORM RES, V5, P1, DOI 10.1007/s41666-020-00082-4
   Yan M, 2019, IEEE T SOFTWARE ENG, V45, P1211, DOI 10.1109/TSE.2018.2831232
   Yang Q, 2019, ACM T INTEL SYST TEC, V10, DOI 10.1145/3298981
   Yang WS, 2019, LECT NOTES COMPUT SC, V11514, P18, DOI 10.1007/978-3-030-23551-2_2
   Yu H, 2020, PROCEEDINGS OF THE 3RD AAAI/ACM CONFERENCE ON AI, ETHICS, AND SOCIETY AIES 2020, P393, DOI 10.1145/3375627.3375840
   Zhang F, 2016, PROC INT CONF SOFTW, P309, DOI 10.1145/2884781.2884839
   Zhao G, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P141, DOI 10.1145/3236024.3236068
   Zhou JY, 2021, 2021 36TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING ASE 2021, P705, DOI 10.1109/ASE51524.2021.9678720
   Zhou YQ, 2019, ADV NEUR IN, V32
   US
NR 81
TC 0
Z9 0
U1 9
U2 9
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD FEB
PY 2024
VL 50
IS 2
BP 296
EP 321
DI 10.1109/TSE.2023.3347898
PG 26
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA IP4I9
UT WOS:001167516600007
DA 2024-08-05
ER

PT J
AU Tu, HX
   Jiang, LX
   Hong, JQ
   Ding, XH
   Jiang, H
AF Tu, Haoxin
   Jiang, Lingxiao
   Hong, Jiaqi
   Ding, Xuhua
   Jiang, He
TI Concretely Mapped Symbolic Memory Locations for Memory Error Detection
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Engines; Memory management; Detectors; Codes; Resource management;
   Random access memory; Software reliability; software security; memory
   errors; program analysis; symbolic execution
ID EXECUTION; CHECKING; BUGS
AB Memory allocation is a fundamental operation for managing memory objects in many programming languages. Misusing allocated memory objects (e.g., buffer overflow and use-after-free) can have catastrophic consequences. Symbolic execution-based approaches have been used to detect such memory errors, benefiting from their capabilities in automatic path exploration and test case generation. However, existing symbolic execution engines still suffer from fundamental limitations in modeling dynamic memory layouts; they either represent the locations of memory objects as concrete addresses and thus limit their analyses only to specific address layouts and miss errors that may only occur when the objects are located at special addresses, or represent the locations as simple symbolic variables without sufficient constraints and thus suffer from memory state explosion when they execute read/write operations involving symbolic addresses. Such limitations hinder the existing symbolic execution engines from effectively detecting certain memory errors. In this study, we propose SymLoc, a symbolic execution-based approach that uses concretely mapped symbolic memory locations to alleviate the limitations mentioned above. Specifically, a new integration of three techniques is designed in SymLoc: (1) the symbolization of addresses and encoding of symbolic addresses into path constraints, (2) the symbolic memory read/write operations using a symbolic-concrete memory map, and (3) the automatic tracking of the uses of symbolic memory locations. We build SymLoc on top of the well-known symbolic execution engine KLEE and demonstrate its benefits in terms of memory error detection and code coverage capabilities. Our evaluation results show that: for address-specific spatial memory errors, SymLoc can detect 23 more errors in GNU Coreutils, Make, and m4 programs that are difficult for other approaches to detect, and cover 15% and 48% more unique lines of code in the programs than two baseline approaches; for temporal memory errors, SymLoc can detect 8%-64% more errors in the Juliet Test Suite than various existing state-of-the-art memory error detectors. We also present two case studies to show sample memory errors detected by SymLoc along with their root causes and implications.
C1 [Tu, Haoxin; Jiang, Lingxiao; Hong, Jiaqi; Ding, Xuhua] Singapore Management Univ, Sch Comp & Informat Syst, Singapore 188065, Singapore.
   [Tu, Haoxin; Jiang, He] Dalian Univ Technol, Sch Software, Dalian 116621, Peoples R China.
   [Jiang, He] Key Lab Ubiquitous Network & Serv Software Liaonin, Dalian 116621, Peoples R China.
   [Jiang, He] DUT Artificial Intelligence, Dalian 116085, Peoples R China.
C3 Singapore Management University; Dalian University of Technology
RP Jiang, H (corresponding author), Key Lab Ubiquitous Network & Serv Software Liaonin, Dalian 116621, Peoples R China.; Jiang, H (corresponding author), DUT Artificial Intelligence, Dalian 116085, Peoples R China.
EM haoxintu.2020@phdcs.smu.edu.sg; lxjiang@smu.edu.sg; jqhong@smu.edu.sg;
   xhding@smu.edu.sg; jianghe@dlut.edu.cn
FU Ministry of Education (MOE) Singapore; Centre for Research on
   Intelligent Software Engineering (RISE) at Singapore Management
   University (SMU)
FX This work was supported in part by the Ministry of Education (MOE)
   Singapore and in part by the Centre for Research on Intelligent Software
   Engineering (RISE) at Singapore Management University (SMU).
CR Aga MT, 2019, INT SYM CODE GENER, P26, DOI [10.1109/cgo.2019.8661202, 10.1109/CGO.2019.8661202]
   Ammann P., 2016, Introduction to Software Testing
   [Anonymous], "CVE-2022-0667: Assertion failure on delayed DS lookup
   [Anonymous], 2019, Simple theorem prover, an efficient smt solver for bitvectors
   [Anonymous], "A tool for static C/C++ code analysis
   [Anonymous], "A source code analysis tool that finds bugs in C, C++, and objective-C program
   [Anonymous], "Tips for allocating memory
   [Anonymous], Implementation of memmove
   [Anonymous], "Juliet test suite 1.3
   [Anonymous], Memory safety
   [Anonymous], "A static code analysis tool for improving quality and reducing defects
   [Anonymous], "Confirmation of the bug in Case 1
   Astrakhantseva I. A., 2021, J. Phys. Conf. Ser., P1
   Avgerinos T, 2014, COMMUN ACM, V57, P74, DOI 10.1145/2560217.2560219
   Badros GJ, 2000, SOFTWARE PRACT EXPER, V30, P907, DOI 10.1002/(SICI)1097-024X(20000710)30:8<907::AID-SPE324>3.0.CO;2-I
   Baldoni R, 2018, ACM COMPUT SURV, V51, DOI 10.1145/3182657
   Bessey A, 2010, COMMUN ACM, V53, P66, DOI 10.1145/1646353.1646374
   Brennan T, 2018, ISSTA'18: PROCEEDINGS OF THE 27TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P27
   Brotzman R, 2019, P IEEE S SECUR PRIV, P505, DOI 10.1109/SP.2019.00022
   Bruening D, 2011, PROCEED CGO, P213, DOI 10.1109/CGO.2011.5764689
   Cadar C, 2008, OSDI, V8, P209
   Cadar C., 2022, Measuring the coverage achieved by sym-bolic execution
   Cadar C, 2008, ACM T INFORM SYST SE, V12, DOI 10.1145/1455518.1455522
   Cha SK, 2012, P IEEE S SECUR PRIV, P380, DOI 10.1109/SP.2012.31
   Cha S, 2022, PROC INT CONF SOFTW, P2068, DOI 10.1145/3510003.3510185
   Chen YQ, 2019, PROCEEDINGS OF THE 2019 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY (CCS'19), P1707, DOI 10.1145/3319535.3363212
   Chen Z, 2021, ISSTA '21: PROCEEDINGS OF THE 30TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P296, DOI 10.1145/3460319.3464807
   Chipounov V, 2011, ACM SIGPLAN NOTICES, V46, P265, DOI [10.1145/1961296.1950396, 10.1145/1961295.1950396]
   Cohen J., Black Hat
   Collingbourne P, 2011, EUROSYS 11: PROCEEDINGS OF THE EUROSYS 2011 CONFERENCE, P315
   Coppa E, 2017, IEEE INT CONF AUTOM, P613, DOI 10.1109/ASE.2017.8115671
   Cuoq P., 2012, P INT C SOFTW ENG FO, P233
   D'Silva V, 2015, 2015 IEEE SECURITY AND PRIVACY WORKSHOPS (SPW), P73, DOI 10.1109/SPW.2015.33
   Dolan-Gavitt B., "KLEE may miss use-after-free in call to Libc func-tion
   Dudka K., "Missing a double free when heap pointers are compared
   Eckert M, 2018, PROCEEDINGS OF THE 27TH USENIX SECURITY SYMPOSIUM, P99
   Eigler FrankCh., 2003, P GCC DEVELOPERS SUM, P57
   Farinier R., 2018, P INT C LOG PROGR AR, V57, P363
   Farkhani RM, 2021, PROCEEDINGS OF THE 30TH USENIX SECURITY SYMPOSIUM, P1037
   GCOV, "A test coverage program in GNU GCC tool-chain
   GNU M4, "A traditional unix macro processor
   GNU Make, "A building automation tool
   Godefroid Patrice, 2008, NDSS, P151
   Gopinath R, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P72, DOI 10.1145/2568225.2568278
   Griswold WG, 1996, FOURTH WORKSHOP ON PROGRAM COMPREHENSION, PROCEEDINGS, P144, DOI 10.1109/WPC.1996.501129
   Gui BF, 2022, IEEE T SOFTWARE ENG, V48, P4569, DOI 10.1109/TSE.2021.3121994
   Guo S., 2020, P ACM PROGR LANG, V4, P1
   HASTINGS R, 1991, PROCEEDINGS OF THE WINTER 1992 USENIX CONFERENCE, P125
   He JX, 2021, CCS '21: PROCEEDINGS OF THE 2021 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P2526, DOI 10.1145/3460120.3484813
   Heelan S, 2019, PROCEEDINGS OF THE 2019 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY (CCS'19), P1689, DOI 10.1145/3319535.3354224
   Heelan S, 2018, PROCEEDINGS OF THE 27TH USENIX SECURITY SYMPOSIUM, P763
   Nguyen HDT, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P772, DOI 10.1109/ICSE.2013.6606623
   IR L., "A powerful intermediaterepresentation for efficient compilertransformations and analysis
   Jin W, 2012, PROC INT CONF SOFTW, P474, DOI 10.1109/ICSE.2012.6227168
   Kapus T, 2019, PROCEEDINGS OF THE 40TH ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION (PLDI '19), P874, DOI 10.1145/3314221.3314610
   Kapus T, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P774, DOI 10.1145/3338906.3338936
   Li R., 2023, P NETW DISTR SYST SE, P1
   Li Y, 2013, ACM SIGPLAN NOTICES, V48, P19, DOI [10.1145/2544173.2509553, 10.1145/2509136.2509553]
   Marjamaki D., CPPCHECK TOOL STATIC
   McPeak Scott, 2013, P ACM JOINT M EUR SO, P554
   Mechtaev S, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P129, DOI 10.1145/3180155.3180247
   Mechtaev S, 2016, PROC INT CONF SOFTW, P691, DOI 10.1145/2884781.2884807
   Nagarakatte S, 2010, ACM SIGPLAN NOTICES, V45, P31
   Nagarakatte S, 2009, PLDI'09 PROCEEDINGS OF THE 2009 ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P245, DOI 10.1145/1542476.1542504
   Nethercote N, 2007, PLDI'07: PROCEEDINGS OF THE 2007 ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P89, DOI 10.1145/1250734.1250746
   Nowack M, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P912, DOI 10.1109/ASE.2019.00089
   Olesen MC, 2014, SCI COMPUT PROGRAM, V91, P141, DOI 10.1016/j.scico.2012.10.011
   Pandey A, 2019, PROCEEDINGS OF THE 28TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA '19), P228, DOI 10.1145/3293882.3330554
   Pasareanu CS, 2013, AUTOMAT SOFTW ENG, V20, P391, DOI 10.1007/s10515-013-0122-2
   Rutledge R, 2020, PROC INT CONF SOFTW, P65, DOI 10.1145/3377812.3382148
   Serebryany K., 2012, P USENIX ANN TECH C, P1
   Shoshitaishvili Y, 2016, P IEEE S SECUR PRIV, P138, DOI 10.1109/SP.2016.17
   Sotirov Alexander., HEAP FENG SHUI JAVAS
   Szekeres L, 2013, P IEEE S SECUR PRIV, P48, DOI 10.1109/SP.2013.13
   Tencent, "A fast and accurate staticanalysis solution for C/C++, C#, Luacodes
   Trabish David, 2020, ISSTA '20: Proceedings of the 29th ACM SIGSOFT International Symposium on Software Testing and Analysis, P51, DOI 10.1145/3395363.3397363
   Trabish D, 2021, PROCEEDINGS OF THE 29TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '21), P1190, DOI 10.1145/3468264.3468596
   Wang Y, 2021, PROCEEDINGS OF THE 30TH USENIX SECURITY SYMPOSIUM, P1647
   Wu W, 2018, PROCEEDINGS OF THE 27TH USENIX SECURITY SYMPOSIUM, P781
   Yan H, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P327, DOI 10.1145/3180155.3180178
   Yang XJ, 2011, ACM SIGPLAN NOTICES, V46, P283, DOI 10.1145/1993316.1993532
   Yun I, 2020, PROCEEDINGS OF THE 29TH USENIX SECURITY SYMPOSIUM, P1111
   Z3, "A theorem prover from Microsoft Research
   Zamfir C, 2010, EUROSYS'10: PROCEEDINGS OF THE EUROSYS 2010 CONFERENCE, P321
NR 84
TC 0
Z9 0
U1 0
U2 0
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUL
PY 2024
VL 50
IS 7
BP 1747
EP 1767
DI 10.1109/TSE.2024.3395412
PG 21
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA YZ0O5
UT WOS:001272193600001
DA 2024-08-05
ER

PT J
AU Zhao, YT
   Xiao, L
   Wong, S
AF Zhao, Yutong
   Xiao, Lu
   Wong, Sunny
TI A Platform-Agnostic Framework for Automatically Identifying Performance
   Issue Reports With Heuristic Linguistic Patterns
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Tagging; Linguistics; Feature extraction; Vectors; Manuals; Robustness;
   Training; Software performance; software repository mining; automatic
   text classification; linguistic pattern
ID TEXT CLASSIFICATION; ALGORITHMS
AB Software performance is critical for system efficiency, with performance issues potentially resulting in budget overruns, project delays, and market losses. Such problems are reported to developers through issue tracking systems, which are often under-tagged, as the manual tagging process is voluntary and time-consuming. Existing automated performance issue tagging techniques, such as keyword matching and machine/deep learning models, struggle due to imbalanced datasets and a high degree of variance. This paper presents a novel hybrid classification approach, combining Heuristic Linguistic Patterns (HLPs) with machine/deep learning models to enable practitioners to automatically identify performance-related issues. The proposed approach works across three progressive levels: HLP tagging, sentence tagging, and issue tagging, with a focus on linguistic analysis of issue descriptions. The authors evaluate the approach on three different datasets collected from different projects and issue-tracking platforms to prove that the proposed framework is accurate, project- and platform-agnostic, and robust to imbalanced datasets. Furthermore, this study also examined how the two unique techniques of the framework, including the fuzzy HLP matching and the Issue HLP Matrix, contribute to the accuracy. Finally, the study explored the effectiveness and impact of two off-the-shelf feature selection techniques, Boruta and RFE, with the proposed framework. The results showed that the proposed framework has great potential for practitioners to accurately (with up to 100% precision, 66% recall, and 79% F1-score) identify performance issues, with robustness to imbalanced data and good transferability to new projects and issue tracking platforms.
C1 [Zhao, Yutong] Univ Cent Missouri, Dept Comp Sci & Cybersecur, Warrensburg, MO 64093 USA.
   [Xiao, Lu] Stevens Inst Technol, Sch Syst & Enterprises, Hoboken, NJ 07030 USA.
   [Wong, Sunny] Envestnet Inc, Berwyn, PA 19312 USA.
C3 University Central Missouri; Stevens Institute of Technology
RP Xiao, L (corresponding author), Stevens Inst Technol, Sch Syst & Enterprises, Hoboken, NJ 07030 USA.
EM yutongzhao@ucmo.edu; lxiao6@stevens.edu; sunny@computer.org
FU U.S. National Science Foundation (NSF) [CCF-2044888, DUE-2142531]
FX This work was supported in part by the U.S. National Science Foundation
   (NSF) under Grant CCF-2044888 and Grant DUE-2142531.
CR Acs J., 2015, P JOINT WORKSH LANG, P73
   Aggarwal K, 2017, J SOFTW-EVOL PROC, V29, DOI 10.1002/smr.1821
   Antoniol G., 2008, P 2008 C CTR ADV STU, P304
   Athiwaratkun B, 2018, Arxiv, DOI arXiv:1806.02901
   Balsamo S, 2004, IEEE T SOFTWARE ENG, V30, P295, DOI 10.1109/TSE.2004.9
   Baltes S, 2015, INT SYMP EMP SOFTWAR, P225, DOI 10.1109/ESEM.2015.7321208
   Arrieta AB, 2020, INFORM FUSION, V58, P82, DOI 10.1016/j.inffus.2019.12.012
   Batista G. E. A. P. A., 2004, SIGKDD Explorations: Newsletter of the Special Interest Group (SIG) on Knowledge Discovery Data Mining, V6, P20, DOI [10.1145/1007730.1007735, DOI 10.1145/1007730.1007735]
   Bondi A.B., 2015, Foundations of Software and System Performance Engi-neering: Process, Performance Modeling, Requirements, Testing, Scala-bility, and Practice
   Burma J. S, 2021, Physiol. Rep., V9, P1
   Chen JN, 2009, EXPERT SYST APPL, V36, P5432, DOI 10.1016/j.eswa.2008.06.054
   Chen T. He, 2017, Adv. Neural Inf.Process. Syst., P5998
   Chen ZF, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P811, DOI 10.1145/3180155.3180229
   Chikersal P, 2015, LECT NOTES COMPUT SC, V9042, P49, DOI 10.1007/978-3-319-18117-2_4
   Colas F, 2006, INT FED INFO PROC, V217, P169
   Devlin J, 2019, Arxiv, DOI arXiv:1810.04805
   Fisher R., 1932, Statistical Methods for Research Workers, DOI DOI 10.1007/978-1-4612-4380-96
   Gacto MJ, 2011, INFORM SCIENCES, V181, P4340, DOI 10.1016/j.ins.2011.02.021
   Goldberg Y, 2014, Arxiv, DOI [arXiv:1402.3722, DOI 10.48550/ARXIV.1402.3722]
   Han S, 2012, PROC INT CONF SOFTW, P145, DOI 10.1109/ICSE.2012.6227198
   Hess M. R, 2004, P ANN M AM ED RES AS, V1
   Ishibuchi H, 2001, INFORM SCIENCES, V136, P109, DOI 10.1016/S0020-0255(01)00144-X
   Jiang Lingxiao., 2007, P 22 IEEEACM INT C A, P184
   Jin GL, 2012, ACM SIGPLAN NOTICES, V47, P77, DOI 10.1145/2345156.2254075
   Jr S., 2013, Applied LogisticRegression, V398
   Kashiwa Y, 2014, PROC IEEE INT CONF S, P536, DOI 10.1109/ICSME.2014.89
   Kim D, 2019, INFORM SCIENCES, V477, P15, DOI 10.1016/j.ins.2018.10.006
   Lamkanfi Ahmed, 2010, Proceedings of the 2010 7th IEEE Working Conference on Mining Software Repositories (MSR 2010), P1, DOI 10.1109/MSR.2010.5463284
   Lee DG, 2020, HUM-CENT COMPUT INFO, V10, DOI 10.1186/s13673-020-00229-7
   Lee DG, 2019, J INF PROCESS SYST, V15, P967, DOI 10.3745/JIPS.04.0130
   Levy O, 2014, PROCEEDINGS OF THE 52ND ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, VOL 2, P302, DOI 10.3115/v1/p14-2050
   Li M, 2017, IEEE SYMP COMP COMMU, P924, DOI 10.1109/ISCC.2017.8024644
   Limsettho N, 2014, INT WORKSH EMPIR ENG, P7, DOI 10.1109/IWESEP.2014.8
   Liu Y, 2016, IEEE INT CONF EMBED, P238, DOI 10.1109/RTCSA.2016.51
   Liu YP, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P1013, DOI 10.1145/2568225.2568229
   Powers DMW, 2020, Arxiv, DOI [arXiv:2010.16061, DOI 10.48550/ARXIV.2010.16061]
   Mamdani EH, 1999, INT J HUM-COMPUT ST, V51, P135, DOI 10.1006/ijhc.1973.0303
   MAMDANI EH, 1974, P I ELECTR ENG, V121, P1585, DOI 10.1049/piee.1974.0328
   Martineau J., 2009, Proceeding of the 18th ACM Conference on Information and Knowledge Management, P2019
   McCallum A., 1998, P AAAI98 WORKSHOP LE, VVolume 752, P41, DOI DOI 10.1109/TSMC.1985.6313426
   Müter L, 2019, LECT NOTES COMPUT SC, V11412, P109, DOI 10.1007/978-3-030-15538-4_7
   Nistor A, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P902, DOI 10.1109/ICSE.2015.100
   Nistor A, 2013, IEEE WORK CONF MIN S, P237, DOI 10.1109/MSR.2013.6624035
   Ohira M, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P518, DOI 10.1109/MSR.2015.78
   Pal M, 2005, INT J REMOTE SENS, V26, P217, DOI 10.1080/01431160412331269698
   Pandey N, 2017, INNOV SYST SOFTW ENG, V13, P279, DOI 10.1007/s11334-017-0294-1
   Pecorelli F, 2020, J SYST SOFTWARE, V169, DOI 10.1016/j.jss.2020.110693
   Pecorelli F, 2019, PROCEEDINGS OF THE 3RD ACM SIGSOFT INTERNATIONAL WORKSHOP ON MACHINE LEARNING TECHNIQUES FOR SOFTWARE QUALITY EVALUATION (MALTESQUE '19), P19, DOI 10.1145/3340482.3342744
   Peng FC, 2003, LECT NOTES COMPUT SC, V2633, P335
   Pennington J., 2014, GLOVE GLOBAL VECTORS, DOI DOI 10.3115/V1/D14-1162
   Pradel M., 2014, P INT S SOFTW TEST A, P13, DOI DOI 10.1145/2610384.2610393
   Rameshbhai C., 2019, Int. J. Elect. Comput. Eng., V9, P2152
   SAFAVIAN SR, 1991, IEEE T SYST MAN CYB, V21, P660, DOI 10.1109/21.97458
   Samek W, 2021, P IEEE, V109, P247, DOI 10.1109/JPROC.2021.3060483
   Sebastiani F, 2002, ACM COMPUT SURV, V34, P1, DOI 10.1145/505282.505283
   Selakovic M, 2016, PROC INT CONF SOFTW, P61, DOI 10.1145/2884781.2884829
   Shi L, 2017, IEEE INT CONF AUTOM, P440, DOI 10.1109/ASE.2017.8115656
   Silva A. R, 2017, P 22 EUR C PATT LANG, P1
   Smith ConnieU., 2002, Performance Solutions: a practical guide to creating responsive, scalable software, V1
   Song LH, 2014, ACM SIGPLAN NOTICES, V49, P561, DOI [10.1145/2714064.2660234, 10.1145/2660193.2660234]
   Sun AX, 2009, DECIS SUPPORT SYST, V48, P191, DOI 10.1016/j.dss.2009.07.011
   Tian Y, 2015, EMPIR SOFTW ENG, V20, P1354, DOI 10.1007/s10664-014-9331-y
   Tong RichardM., 2001, WORKING NOTES ACM SI, P1
   Vaswani A, 2017, ADV NEUR IN, V30
   Villena-Roman J, 2011, P 24 INT FLOR ART IN
   Wu HC, 2008, ACM T INFORM SYST, V26, DOI 10.1145/1361684.1361686
   Xu GQ, 2012, LECT NOTES COMPUT SC, V7313, P738, DOI 10.1007/978-3-642-31057-7_32
   Xu GQ, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P151, DOI 10.1145/1368088.1368110
   Yang Q, 2020, TRANSFER LEARNING, P234
   Yu TT, 2016, J MICROBIOL BIOTECHN, V26, P730
   ZADEH LA, 1975, INFORM SCIENCES, V8, P301, DOI 10.1016/0020-0255(75)90046-8
   ZADEH LA, 1965, INFORM CONTROL, V8, P338, DOI 10.1016/S0019-9958(65)90241-X
   Zaman S., 2012, 2012 9th IEEE Working Conference on Mining Software Repositories (MSR 2012), P199, DOI 10.1109/MSR.2012.6224281
   Zhang HY, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P1042, DOI 10.1109/ICSE.2013.6606654
   Zhao YT, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P964, DOI 10.1145/3368089.3409674
   Zhao YT, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: COMPANION PROCEEDINGS (ICSE-COMPANION 2019), P316, DOI 10.1109/ICSE-Companion.2019.00132
NR 76
TC 0
Z9 0
U1 0
U2 0
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUL
PY 2024
VL 50
IS 7
BP 1704
EP 1725
DI 10.1109/TSE.2024.3390623
PG 22
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA YZ0O5
UT WOS:001272193600002
OA hybrid
DA 2024-08-05
ER

PT J
AU Sokolowski, D
   Spielmann, D
   Salvaneschi, G
AF Sokolowski, Daniel
   Spielmann, David
   Salvaneschi, Guido
TI Automated Infrastructure as Code Program Testing
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Testing; Generators; Software; Cloud computing; Engines; Codes;
   Libraries; Property-based testing; fuzzing; infrastructure as code;
   DevOps
ID LANGUAGE
AB Infrastructure as Code (IaC) enables efficient deployment and operation, which are crucial to releasing software quickly. As setups can be complex, developers implement IaC programs in general-purpose programming languages like TypeScript and Python, using PL-IaC solutions like Pulumi and AWS CDK. The reliability of such IaC programs is even more relevant than in traditional software because a bug in IaC impacts the whole system. Yet, even though testing is a standard development practice, it is rarely used for IaC programs. For instance, in August 2022, less than 1 % of the public Pulumi IaC programs on GitHub implemented tests. Available IaC program testing techniques severely limit the development velocity or require much development effort. To solve these issues, we propose Automated Configuration Testing (ACT), a methodology to test IaC programs in many configurations quickly and with low effort. ACT automatically mocks all resource definitions in the IaC program and uses generator and oracle plugins for test generation and validation. We implement ACT in ProTI, a testing tool for Pulumi TypeScript with a type-based generator and oracle, and support for application specifications. Our evaluation with 6 081 programs from GitHub and artificial benchmarks shows that ProTI can directly be applied to existing IaC programs, quickly finds bugs where current techniques are infeasible, and enables reusing existing generators and oracles thanks to its pluggable architecture.
C1 [Sokolowski, Daniel; Spielmann, David; Salvaneschi, Guido] Univ St Gallen, CH-9000 St Gallen, Switzerland.
C3 University of St Gallen
RP Sokolowski, D (corresponding author), Univ St Gallen, CH-9000 St Gallen, Switzerland.
EM daniel.sokolowski@unisg.ch; david.spielmann@unisg.ch;
   guido.salvaneschi@unisg.ch
OI Sokolowski, Daniel/0000-0003-2911-8304; Spielmann,
   David/0009-0004-1715-2059
FU Swiss National Science Foundation (SNSF)
FX No Statement Available
CR Abu Jabal A, 2019, ACM COMPUT SURV, V51, DOI 10.1145/3295749
   Ahrens E, 2022, P ACM PROGRAM LANG, V6, DOI 10.1145/3563293
   Aldrich J, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P187, DOI 10.1109/ICSE.2002.1007967
   aws.amazon, Amazon elastic container service
   aws.amazon, Developer tools: SDKs and programming toolkits for building on AWS: SDKs
   aws.amazon, Serverless compute: AWS Fargate
   aws.amazon, Cloud development framework: AWS Cloud Development Kit
   azure.github, Azure SDK releases
   Backes J., 2018, P FORM METH COMP AID, P1, DOI [10.23919/FM-CAD.2018.8602994, DOI 10.23919/FM-CAD.2018.8602994]
   Backes J, 2019, IEEE SOFTWARE, V36, P61, DOI 10.1109/MS.2019.2930609
   Backes J, 2019, LECT NOTES COMPUT SC, V11562, P231, DOI 10.1007/978-3-030-25543-5_14
   Bellendorf J, 2020, COMPUTING, V102, P1793, DOI 10.1007/s00607-019-00750-3
   Borovits N, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-022-10215-5
   Bouchet M, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P281, DOI 10.1145/3368089.3409728
   Breitenbücher U, 2014, INT CONF CLOUD ENG, P87, DOI 10.1109/IC2E.2014.56
   Chiari M, 2022, 2022 IEEE 19TH INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE COMPANION (ICSA-C 2022), P218, DOI 10.1109/ICSA-C54293.2022.00049
   Claessen Koen., 2000, Proceedings of the fifth ACM SIGPLAN international conference on Functional programming - ICFP'00, P268, DOI [10.1145/351240.351266, DOI 10.1145/351240.351266]
   Cook B, 2018, LECT NOTES COMPUT SC, V10981, P38, DOI 10.1007/978-3-319-96145-3_3
   Dalla Palma S, 2022, IEEE T SOFTWARE ENG, V48, P2086, DOI 10.1109/TSE.2021.3051492
   Dalla Palma S, 2020, SOFTWAREX, V12, DOI 10.1016/j.softx.2020.100633
   Dalla Palma S, 2020, J SYST SOFTWARE, V170, DOI 10.1016/j.jss.2020.110726
   De Angelis E, 2019, LECT NOTES COMPUT SC, V11823, P186, DOI 10.1007/978-3-030-31157-5_12
   developer.hashicorp, CDK for Terraform
   developer.hashicorp, Unit tests: CDK for terraform
   docs.aws.amazon, Testing constructs: AWS Cloud Development Kit (AWS CDK) v2
   docs.github, Github docs: Searching code (legacy)
   docs.oasis-open, Topology and Orchestration Specification for Cloud Applications versin 1.0
   Dubien N., fast-check official documentation
   Duffy J., Pulumi Blog
   Endres C., Declarative vs. imperative: Two modeling patterns for the automated deployment of applications
   Ernst MD, 2007, SCI COMPUT PROGRAM, V69, P35, DOI 10.1016/j.scico.2007.01.015
   Evangelidis A, 2018, FUTURE GENER COMP SY, V87, P629, DOI 10.1016/j.future.2017.12.047
   Fazzini M, 2020, IEEE INT CONF AUTOM, P1204, DOI 10.1145/3324884.3418927
   Fink G., 1997, Software Engineering Notes, V22, P74, DOI 10.1145/263244.263267
   Flanagan Cormac, 2004, P 2004 ACM SIGPLAN S, P49, DOI DOI 10.1145/996821.996838
   github, Pulumi: Infrastructure as code in any programming language
   Goldstein H, 2021, LECT NOTES COMPUT SC, V12648, P264, DOI 10.1007/978-3-030-72019-3_10
   Guerriero M, 2019, PROC IEEE INT CONF S, P580, DOI 10.1109/ICSME.2019.00092
   Hassan MM, 2022, IEEE INT CONF SOFTW, P208, DOI 10.1109/ICST53961.2022.00031
   Helin A., Radamsa: A general-purpose fuzzer
   Hoban L., 2023, Pulumi BlogsNov. 30
   Humble Jez, 2010, Continuous Delivery: Reliable software releases through Build, Test and Deployment Automation
   Hummer Waldemar, 2013, Middleware 2013. ACM/IFIP/USENIX 14th International Middleware Conference. Proceedings: LNCS 8275, P368, DOI 10.1007/978-3-642-45065-5_19
   Ikeshita Katsuhiko, 2017, Tests and Proofs. 11th International Conference, TAP 2017, held as part of STAF 2017. Proceedings: LNCS 10375, P98, DOI 10.1007/978-3-319-61467-0_6
   Jackson D, 2002, ACM T SOFTW ENG METH, V11, P256, DOI 10.1145/505145.505149
   jestjs, Jest: Delightful JavaScript testing
   Joshi Shrinivas, 2007, 2007 IEEE International Conference on Software Maintenance, P234, DOI 10.1109/ICSM.2007.4362636
   Kim G., 2021, Rel., & Secur. Technol. Organizations, V11
   Kochhar PS, 2013, INT CONF QUAL SOFTW, P103, DOI 10.1109/QSIC.2013.57
   Kruger Ingolf, 2012, Software Service and Application Engineering. Essays Dedicated to Bernd Kramer on the Occasion of His 65th Birthday: LNCS 7365, P120, DOI 10.1007/978-3-642-30835-2_9
   Kuhn DR, 2004, IEEE T SOFTWARE ENG, V30, P418, DOI 10.1109/TSE.2004.24
   Kuhn Rick, 2008, IT Professional, V10, P19, DOI 10.1109/MITP.2008.54
   Kumara I, 2021, INFORM SOFTWARE TECH, V137, DOI 10.1016/j.infsof.2021.106593
   Lampropoulos L, 2019, P ACM PROGRAM LANG, V3, DOI 10.1145/3360607
   Lampropoulos L, 2018, P ACM PROGRAM LANG, V2, DOI 10.1145/3158133
   Lampropoulos L, 2017, ACM SIGPLAN NOTICES, V52, P114, DOI 10.1145/3093333.3009868
   Leite L, 2020, ACM COMPUT SURV, V52, DOI 10.1145/3359981
   Li J, 2018, CYBERSECURITY, V1, DOI 10.1186/s42400-018-0002-y
   Löscher A, 2017, PROCEEDINGS OF THE 26TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA'17), P46, DOI 10.1145/3092703.3092711
   Löscher A, 2018, IEEE INT CONF SOFTW, P70, DOI 10.1109/ICST.2018.00017
   Madeja M, 2021, APPL SCI-BASEL, V11, DOI 10.3390/app11167250
   Morris K., 2021, Infrastructure as Code: Dynamic Systems for the Cloud Age, V2
   Olsson HH, 2012, EUROMICRO CONF PROC, P392, DOI 10.1109/SEAA.2012.54
   Opdebeeck R, 2023, IEEE WORK CONF MIN S, P534, DOI 10.1109/MSR59073.2023.00079
   Opdebeeck R, 2022, IEEE WORK CONF MIN S, P61, DOI 10.1145/3524842.3527964
   Opdebeeck R, 2021, J SYST SOFTWARE, V182, DOI 10.1016/j.jss.2021.111059
   Pacheco C, 2007, PROC INT CONF SOFTW, P75
   Paraskevopoulou Z, 2015, LECT NOTES COMPUT SC, V9236, P325, DOI 10.1007/978-3-319-22102-1_22
   pulumi, Policy as code for any cloud with Pulumi: Pulumi CrossGuard
   pulumi, Integration testing for Pulumi programs
   pulumi, Testing of Pulumi programs
   pulumi, Policies for AWS (AWSGuard)
   Rahman A, 2021, ACM T SOFTW ENG METH, V30, DOI 10.1145/3408897
   Rahman A, 2020, PROC INT CONF SOFTW, P752, DOI 10.1145/3377811.3380409
   Rahman A, 2019, PROC INT CONF SOFTW, P164, DOI 10.1109/ICSE.2019.00033
   Rahman A, 2019, INFORM SOFTWARE TECH, V112, P148, DOI 10.1016/j.infsof.2019.04.013
   Rahman A, 2019, INFORM SOFTWARE TECH, V108, P65, DOI 10.1016/j.infsof.2018.12.004
   Ralph P, 2021, Arxiv, DOI arXiv:2010.03525
   Reis S, 2022, IEEE INT CONF AUTOM, DOI 10.1145/3551349.3560419
   Saavedra N, 2022, IEEE INT CONF AUTOM, DOI 10.1145/3551349.3556945
   Schwarz J, 2018, 2018 11TH INTERNATIONAL CONFERENCE ON THE QUALITY OF INFORMATION AND COMMUNICATIONS TECHNOLOGY (QUATIC), P220, DOI 10.1109/QUATIC.2018.00040
   Shambaugh R, 2016, ACM SIGPLAN NOTICES, V51, P416, DOI [10.1145/2908080.2908083, 10.1145/2980983.2908083]
   Sharma T, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P189, DOI [10.1145/2901739.2901761, 10.1109/MSR.2016.028]
   Sokolowski D., 2024, Evaluation of automated infrastructure as code program testing, DOI [10.5281/zen-odo.10908273, DOI 10.5281/ZEN-ODO.10908273]
   Sokolowski D., 2024, P 21 IEEE ACM INT C, P498, DOI [10.1145/3643991.3644888, DOI 10.1145/3643991.3644888]
   Sokolowski Daniel, 2023, Zenodo, DOI 10.5281/ZENODO.10028479
   Sokolowski D, 2023, IEEE SOFTWARE, V40, P50, DOI 10.1109/MS.2022.3192968
   Sokolowski D, 2021, PROCEEDINGS OF THE 29TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '21), P57, DOI 10.1145/3468264.3468575
   Solms F., 2016, P ANN C S AFR I COMP, DOI [10.1145/2987491.2987534, DOI 10.1145/2987491.2987534]
   Spadini D, 2017, IEEE WORK CONF MIN S, P402, DOI 10.1109/MSR.2017.61
   Steinhöfel D, 2022, PROCEEDINGS OF THE 30TH ACM JOINT MEETING EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, ESEC/FSE 2022, P583, DOI 10.1145/3540250.3549139
   Su T, 2021, P ACM PROGRAM LANG, V5, DOI 10.1145/3485533
   Taneja K., 2010, ASE, P289
   Terra R, 2009, SOFTWARE PRACT EXPER, V39, P1073, DOI 10.1002/spe.931
   Vikram V, 2021, PROC INT CONF SOFTW, P723, DOI 10.1109/ICSE43902.2021.00072
   Weisenburger P, 2018, P ACM PROGRAM LANG, V2, DOI 10.1145/3276499
   Wurster M, 2020, PROCEEDINGS OF THE 10TH INTERNATIONAL CONFERENCE ON CLOUD COMPUTING AND SERVICES SCIENCE (CLOSER), P216, DOI 10.5220/0009794302160226
   Wurster M, 2020, SICS SOFTWARE, V35, P63, DOI 10.1007/s00450-019-00412-x
   Zakhour G, 2023, P ACM PROGRAM LANG, V7, DOI 10.1145/3622873
   Zakhour G, 2023, P ACM PROGRAM LANG, V7, DOI 10.1145/3591276
   Zeller A., Fuzzing: Breaking things with random inputs
   Zhu HC, 2024, ACM T SOFTW ENG METH, V33, DOI 10.1145/3617171
NR 102
TC 0
Z9 0
U1 0
U2 0
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUN
PY 2024
VL 50
IS 6
BP 1585
EP 1599
DI 10.1109/TSE.2024.3393070
PG 15
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA UL2G2
UT WOS:001248142900009
DA 2024-08-05
ER

PT J
AU Zhang, QJ
   Fang, CR
   Sun, WS
   Liu, Y
   He, TK
   Hao, XD
   Chen, ZY
AF Zhang, Quanjun
   Fang, Chunrong
   Sun, Weisong
   Liu, Yan
   He, Tieke
   Hao, Xiaodong
   Chen, Zhenyu
TI APPT: Boosting Automated Patch Correctness Prediction via Fine-Tuning
   Pre-Trained Models
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Codes; Feature extraction; Task analysis; Predictive models; Maintenance
   engineering; Computer bugs; Adaptation models; Automated program repair;
   patch correctness; pre-trained model
ID PROGRAM REPAIR; ERRORS; CODE
AB Automated program repair (APR) aims to fix software bugs automatically without human debugging efforts and plays a crucial role in software development and maintenance. Despite the recent significant progress in the number of fixed bugs, APR is still challenged by a long-standing overfitting problem (i.e., the generated patch is plausible but overfitting). Various techniques have thus been proposed to address the overfitting problem. Recently, researchers have employed BERT to extract code features, which are then used to train a classifier for patch correctness prediction, indicating the potential of such pre-trained models in reasoning about patch correctness. However, BERT is restricted to feature extraction for classifier training without benefiting from the training process, potentially generating sub-optimal vector representations for patched code snippets. In this paper, we propose APPT, a pre-trained model-based automated patch correctness assessment technique by both pre-training and fine-tuning. APPT adopts a pre-trained model as the encoder stack, followed by an LSTM stack and a deep learning classifier. More importantly, the pre-trained model is fine-tuned in conjunction with other components as a whole pipeline to fully adapt it specifically for reasoning about patch correctness. Although our idea is general and can be built on various existing pre-trained models, we have implemented APPT based on the BERT model. We conduct an extensive experiment on 1,183 Defects4J patches and the experimental results show that APPT achieves prediction accuracy of 79.7% and recall of 83.2%, outperforming the state-of-the-art technique CACHE by 4.3% and 6.7%. Our additional investigation on 49,694 real-world patches shows that APPT achieves the optimum performance (exceeding 99% in five common metrics for assessing patch classification techniques) compared with existing representation learning techniques. We further investigate the impact of each component and find that they all positively contribute to APPT, e.g., the fine-tuning process and the LSTM stack increase F1-score by 10.22% and 4.11%, respectively. We also prove that adopting advanced pre-trained models can further provide substantial advancement (e.g., GraphCodeBERT-based APPT improves BERT-based APPT by 2.8% and 3.3% in precision and AUC, respectively), highlighting the generalizability of APPT. Overall, our study highlights the promising future of fine-tuning pre-trained models to assess patch correctness and reduce the manual inspection effort of debugging experts when deploying APR tools in practice.
C1 [Zhang, Quanjun; Fang, Chunrong; Sun, Weisong; Liu, Yan; He, Tieke; Hao, Xiaodong; Chen, Zhenyu] Nanjing Univ, State Key Lab Novel Software Technol, Nanjing 210093, Jiangsu, Peoples R China.
C3 Nanjing University
RP Fang, CR; He, TK; Chen, ZY (corresponding author), Nanjing Univ, State Key Lab Novel Software Technol, Nanjing 210093, Jiangsu, Peoples R China.
EM quanjun.zhang@smail.nju.edu.cn; fangchunrong@nju.edu.cn;
   weisongsun@smail.nju.edu.cn; MF21320104@smail.nju.edu.cn;
   hetieke@nju.edu.cn; MF21320054@smail.nju.edu.cn; zychen@nju.edu.cn
RI Sun, Weisong/AAU-9503-2020; Fang, Chunrong/GPW-9872-2022
OI Fang, Chunrong/0000-0002-9930-7111; Sun, Weisong/0000-0001-9236-8264;
   Zhang, Quanjun/0000-0002-2495-3805
FU National Key Research and Development Program of China
FX No Statement Available
CR Alon U, 2019, P ACM PROGRAM LANG, V3, DOI 10.1145/3290353
   Aranda J, 2009, PROC INT CONF SOFTW, P298, DOI 10.1109/ICSE.2009.5070530
   Benton S, 2022, IEEE T SOFTWARE ENG, V48, P4692, DOI 10.1109/TSE.2021.3125203
   Brown T. B., 2020, P 34 INT C NEURAL IN, P1
   Chen LS, 2017, IEEE INT CONF AUTOM, P637, DOI 10.1109/ASE.2017.8115674
   Chen ZM, 2021, IEEE T SOFTWARE ENG, V47, P1943, DOI 10.1109/TSE.2019.2940179
   Ciborowska A, 2022, PROC INT CONF SOFTW, P946, DOI 10.1145/3510003.3510042
   Ciniselli M, 2021, IEEE WORK CONF MIN S, P108, DOI 10.1109/MSR52588.2021.00024
   Devlin J, 2018, ARXIV
   Durieux T., 2016, HAL01272126 U LILL 1
   Durieux T, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P302, DOI 10.1145/3338906.3338911
   Durieux T, 2016, 2016 IEEE/ACM 11TH INTERNATIONAL WORKSHOP IN AUTOMATION OF SOFTWARE TEST (AST), P85, DOI [10.1145/2896921.2896931, 10.1109/AST.2016.021]
   Feng ZY, 2020, FINDINGS OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, EMNLP 2020, P1536
   Fraser G, 2011, P 19 ACM SIGSOFT S 1, P416, DOI 10.1145/2025113.2025179
   Gazzola L, 2019, IEEE T SOFTWARE ENG, V45, P34, DOI 10.1109/TSE.2017.2755013
   Ghanbari A, 2019, PROCEEDINGS OF THE 28TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA '19), P19, DOI 10.1145/3293882.3330559
   Guo DY, 2022, PROCEEDINGS OF THE 60TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (ACL 2022), VOL 1: (LONG PAPERS), P7212
   Guo Daya., 2021, PROC 9 INT C LEARN R
   Gupta R, 2017, AAAI CONF ARTIF INTE, P1345
   Hoang T, 2020, PROC INT CONF SOFTW, P518, DOI 10.1145/3377811.3380361
   Hua JR, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P12, DOI 10.1145/3180155.3180245
   Jiang JJ, 2018, ISSTA'18: PROCEEDINGS OF THE 27TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P298, DOI 10.1145/3213846.3213871
   Jiang N, 2021, PROC INT CONF SOFTW, P1161, DOI 10.1109/ICSE43902.2021.00107
   Just R, 2014, ISSTA 2014, P437, DOI [10.1145/2610384.2628055, DOI 10.1145/2610384.2628055]
   Karampatsis RM, 2020, IEEE WORK CONF MIN S, P573, DOI 10.1145/3379597.3387491
   Kingma D. P., 2015, P INT C LEARN REPR, P1
   Kirbas S, 2021, IEEE SOFTWARE, V38, P43, DOI 10.1109/MS.2021.3071086
   Koyuncu A, 2020, EMPIR SOFTW ENG, V25, P1980, DOI 10.1007/s10664-019-09780-z
   Le Goues C, 2019, COMMUN ACM, V62, P56, DOI 10.1145/3318162
   Le Goues C, 2012, IEEE T SOFTWARE ENG, V38, P54, DOI 10.1109/TSE.2011.104
   Le XBD, 2019, PROC INT CONF SOFTW, P524, DOI 10.1109/ICSE.2019.00064
   Le XBD, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P593, DOI 10.1145/3106237.3106309
   Le-Cong T., 2023, ARXIV
   Li Y, 2020, PROC INT CONF SOFTW, P602, DOI 10.1145/3377811.3380345
   Li Z, 2018, 25TH ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2018), DOI 10.14722/ndss.2018.23158
   Lin B, 2022, ACM T SOFTW ENG METH, V31, DOI 10.1145/3505247
   Lin Derrick, 2017, P COMP ACM SIGPLAN I, P55, DOI [10.1145/3135932, DOI 10.1145/3135932]
   Liu K., 2019, PROC 26 IEEE INT C S, P1
   Liu K, 2020, PROC INT CONF SOFTW, P615, DOI 10.1145/3377811.3380338
   Liu K, 2019, PROCEEDINGS OF THE 28TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA '19), P31, DOI 10.1145/3293882.3330577
   Liu XL, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P118, DOI 10.1109/SANER.2018.8330202
   Long F, 2016, PROC INT CONF SOFTW, P702, DOI 10.1145/2884781.2884872
   Lutellier Thibaud, 2020, ISSTA '20: Proceedings of the 29th ACM SIGSOFT International Symposium on Software Testing and Analysis, P101, DOI 10.1145/3395363.3397369
   Madeiral F, 2019, 2019 IEEE 26TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER), P468, DOI [10.1109/SANER.2019.8667991, 10.1109/saner.2019.8667991]
   Martinez M, 2016, P 25 INT S SOFTWARE, P441, DOI 10.1145/2931037.2948705
   Martinez M, 2018, LECT NOTES COMPUT SC, V11036, P65, DOI 10.1007/978-3-319-99241-9_3
   Martinez M, 2017, EMPIR SOFTW ENG, V22, P1936, DOI 10.1007/s10664-016-9470-4
   Mashhadi E, 2021, IEEE WORK CONF MIN S, P505, DOI 10.1109/MSR52588.2021.00063
   Mastropaolo A, 2021, PROC INT CONF SOFTW, P336, DOI 10.1109/ICSE43902.2021.00041
   Mechtaev S, 2016, PROC INT CONF SOFTW, P691, DOI 10.1145/2884781.2884807
   Meng XX, 2022, PROC INT CONF SOFTW, P1169, DOI 10.1145/3510003.3510147
   Monperrus M., 2023, HAL01956501
   Pacheco C, 2007, COMP 22 ACM SIGPLAN, P815
   Raffel C, 2020, J MACH LEARN RES, V21
   Saha RK, 2018, IEEE WORK CONF MIN S, P10, DOI 10.1145/3196398.3196473
   Salza P, 2023, IEEE T SOFTWARE ENG, V49, P1804, DOI 10.1109/TSE.2022.3192755
   Smith EK, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P532, DOI 10.1145/2786805.2786825
   Tan SH, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P727, DOI 10.1145/2950290.2950295
   Tao YD, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P64, DOI 10.1145/2635868.2635873
   Tian H., 2022, ACM T SOFTW ENG METH, V32, P1
   Tian HY, 2022, IEEE INT CONF AUTOM, DOI 10.1145/3551349.3556914
   Tian HY, 2022, ACM T SOFTW ENG METH, V31, DOI 10.1145/3511096
   Tian HY, 2020, IEEE INT CONF AUTOM, P981, DOI 10.1145/3324884.3416532
   Tufano M, 2019, ACM T SOFTW ENG METH, V28, DOI 10.1145/3340544
   Wang SW, 2020, IEEE INT CONF AUTOM, P968, DOI 10.1145/3324884.3416590
   Wen M, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1, DOI 10.1145/3180155.3180233
   White M, 2019, 2019 IEEE 26TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER), P479, DOI [10.1109/SANER.2019.8668043, 10.1109/saner.2019.8668043]
   Winter E, 2023, IEEE T SOFTWARE ENG, V49, P1823, DOI 10.1109/TSE.2022.3194188
   Winter E, 2023, IEEE T SOFTWARE ENG, V49, P419, DOI 10.1109/TSE.2022.3152089
   Winter ER, 2022, PROCEEDINGS OF THE 30TH ACM JOINT MEETING EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, ESEC/FSE 2022, P1578, DOI 10.1145/3540250.3558953
   Wong WE, 2016, IEEE T SOFTWARE ENG, V42, P707, DOI 10.1109/TSE.2016.2521368
   Xin Q, 2017, PROCEEDINGS OF THE 26TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA'17), P226, DOI 10.1145/3092703.3092718
   Xin Q, 2017, IEEE INT CONF AUTOM, P660, DOI 10.1109/ASE.2017.8115676
   Xiong YF, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P789, DOI 10.1145/3180155.3180182
   Xiong YF, 2017, PROC INT CONF SOFTW, P416, DOI 10.1109/ICSE.2017.45
   Xuan JF, 2017, IEEE T SOFTWARE ENG, V43, P34, DOI 10.1109/TSE.2016.2560811
   Yang B, 2020, PROCEEDINGS OF THE 2020 IEEE 2ND INTERNATIONAL WORKSHOP ON INTELLIGENT BUG FIXING (IBF '20), P1, DOI [10.1109/ibf50092.2020.9034821, 10.1109/IBF50092.2020.9034821]
   Yang JQ, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P831, DOI 10.1145/3106237.3106274
   Ye H, 2022, PROC INT CONF SOFTW, P1506, DOI 10.1145/3510003.3510222
   Ye H, 2022, IEEE T SOFTWARE ENG, V48, P2920, DOI 10.1109/TSE.2021.3071750
   Ye H, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-020-09920-w
   Yiling Lou, 2020, ISSTA '20: Proceedings of the 29th ACM SIGSOFT International Symposium on Software Testing and Analysis, P75, DOI 10.1145/3395363.3397351
   Yuan W., 2022, P 31 ACM SIGSOFT INT, P427
   Yuan Y, 2020, IEEE T SOFTWARE ENG, V46, P1040, DOI 10.1109/TSE.2018.2874648
   Zhang Q., 2022, ARXIV
   Zhou X., 2023, arXiv
   Zhu QH, 2021, PROCEEDINGS OF THE 29TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '21), P341, DOI 10.1145/3468264.3468544
NR 87
TC 0
Z9 0
U1 6
U2 6
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAR
PY 2024
VL 50
IS 3
BP 474
EP 494
DI 10.1109/TSE.2024.3354969
PG 21
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA LQ6H5
UT WOS:001188302300004
OA Green Submitted
DA 2024-08-05
ER

PT J
AU Gao, ZC
   Xiong, H
   Dong, WY
   Chang, R
   Yang, R
   Zhou, YJ
   Jiang, LH
AF Gao, Zicong
   Xiong, Hao
   Dong, Weiyu
   Chang, Rui
   Yang, Rui
   Zhou, Yajin
   Jiang, Liehui
TI FA-Fuzz: A Novel Scheduling Scheme Using Firefly Algorithm for
   Mutation-Based Fuzzing
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Mutation-based fuzzing; firefly algorithm
AB Mutation-based fuzzing has been widely used in both academia and industry. Recently, researchers observe that the mutation scheduling scheme affects the efficiency of fuzzing. Accordingly, they propose PSO algorithm or machine learning-based technique to optimize the scheduling process. However, these methods fail to consider the fact that the optimal operator distribution of different seeds is different, even for the same program. In this paper, we propose a novel general scheduling scheme, named FA-fuzz, to find the optimal selecting probability distribution of mutation operators, which is based on the observations that the effective mutation operators are different for different seeds. Specifically, our method is based on the firefly algorithm. The positions of fireflies are mapped to the selection probability distribution of different mutation operators. The brightness of fireflies is expressed as the efficiency of discovering unique testcases. We implement prototype systems on multiple state-of-art fuzzers, and perform evaluations on two datasets. Our proposed method improves both the number of unique paths and unique bugs on real-world datasets. In addition, we discover 30 zero-day vulnerabilities in eight real-world programs, which demonstrate the effectiveness of FA-fuzz.
C1 [Gao, Zicong; Dong, Weiyu; Jiang, Liehui] State Key Lab Math Engn & Adv Comp, Zhengzhou 450000, Peoples R China.
   [Gao, Zicong; Dong, Weiyu; Jiang, Liehui] Informat Engn Univ, Sch Cyber Sci & Engn, Zhengzhou 450000, Peoples R China.
   [Xiong, Hao; Chang, Rui; Zhou, Yajin] Zhejiang Univ, Hangzhou 310007, Peoples R China.
   [Yang, Rui] Ant Grp, Hangzhou 310007, Peoples R China.
C3 PLA Information Engineering University; PLA Information Engineering
   University; Zhejiang University
RP Chang, R (corresponding author), Zhejiang Univ, Hangzhou 310007, Peoples R China.
EM 2692485134@qq.com; mart1n@zju.edu.cn; dongxinbaoer@163.com;
   crix1021@zju.edu.cn; cnyr1212@163.com; yajin_zhou@zju.edu.cn;
   jiangliehui@163.com
RI chang, rui/KEI-1676-2024; zhang, min/IYI-9869-2023
OI CHANG, RUI/0000-0002-0178-0171; Gao, Zicong/0000-0003-2789-1731
FU Key R#x0026;D Program of Zhejiang Province
FX No Statement Available
CR [Anonymous], 2020, SourceForge
   [Anonymous], 2020, Github
   [Anonymous], 2010, Sulley fuzzing framework
   Arcuri A, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1, DOI 10.1145/1985793.1985795
   Aschermann C, 2019, 26TH ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2019), DOI 10.14722/ndss.2019.23412
   Aschermann C, 2019, 26TH ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2019), DOI 10.14722/ndss.2019.23371
   Blazytko T, 2019, PROCEEDINGS OF THE 28TH USENIX SECURITY SYMPOSIUM, P1985
   Böttinger K, 2018, 2018 IEEE SYMPOSIUM ON SECURITY AND PRIVACY WORKSHOPS (SPW 2018), P116, DOI 10.1109/SPW.2018.00026
   Böhme M, 2019, IEEE T SOFTWARE ENG, V45, P489, DOI 10.1109/TSE.2017.2785841
   Böhme M, 2017, CCS'17: PROCEEDINGS OF THE 2017 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P2329, DOI 10.1145/3133956.3134020
   Cadar C., 2008, KLEE: Unassisted and Automatic Generation of High-Coverage Tests for Complex Systems Programs
   Chen HX, 2018, PROCEEDINGS OF THE 2018 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY (CCS'18), P2095, DOI 10.1145/3243734.3243849
   Chen JY, 2018, 25TH ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2018), DOI 10.14722/ndss.2018.23159
   Chen P, 2019, PROCEEDINGS OF THE 2019 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY (CCS'19), P499, DOI 10.1145/3319535.3363225
   Chen P, 2018, P IEEE S SECUR PRIV, P711, DOI 10.1109/SP.2018.00046
   Cheng Q., 2006, IEEE 11 S COMPUTCOMM, P749
   Nguyen TD, 2020, Arxiv, DOI arXiv:2004.08563
   Drozd W, 2018, Arxiv, DOI arXiv:1807.07490
   Drysdale D., 2016, Linux Weekly News, V2, P33
   Eddington M, 2011, Peach Fuzzer, V34
   Geem ZW, 2001, SIMULATION, V76, P60, DOI 10.1177/003754970107600201
   He JX, 2019, PROCEEDINGS OF THE 2019 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY (CCS'19), P531, DOI 10.1145/3319535.3363230
   Householder A.D., 2012, Probability-Based Parameter Selection for Black-Box Fuzz Testing
   Huang HQ, 2020, P IEEE S SECUR PRIV, P1613, DOI 10.1109/SP40000.2020.00063
   Jain V, 2018, 34TH ANNUAL COMPUTER SECURITY APPLICATIONS CONFERENCE (ACSAC 2018), P505, DOI 10.1145/3274694.3274746
   Jones D., 2011, P 13 OTT LIN S
   Kim K, 2020, 27TH ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2020), DOI 10.14722/ndss.2020.24018
   Klees G, 2018, PROCEEDINGS OF THE 2018 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY (CCS'18), P2123, DOI 10.1145/3243734.3243804
   Lemieux C, 2018, IEEE INT CONF AUTOM, P475, DOI 10.1145/3238147.3238176
   Li J, 2018, CYBERSECURITY, V1, DOI 10.1186/s42400-018-0002-y
   Li YW, 2019, Arxiv, DOI arXiv:1901.01142
   Lyu CY, 2019, PROCEEDINGS OF THE 28TH USENIX SECURITY SYMPOSIUM, P1949
   Manès VJM, 2021, IEEE T SOFTWARE ENG, V47, P2312, DOI 10.1109/TSE.2019.2946563
   Metzman J, 2021, PROCEEDINGS OF THE 29TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '21), P1393, DOI 10.1145/3468264.3473932
   MILLER BP, 1990, COMMUN ACM, V33, P32, DOI 10.1145/96267.96279
   Miller C., 2007, Ind. Secur. Evaluators, Tech. Rep., V56, P127
   Ognawala S, 2018, 33RD ANNUAL ACM SYMPOSIUM ON APPLIED COMPUTING, P1475, DOI 10.1145/3167132.3167289
   Peng H, 2020, PROCEEDINGS OF THE 29TH USENIX SECURITY SYMPOSIUM, P2559
   Pereyda J., boofuzz: Network protocol fuzzing for humans, V17
   Pham V, 2021, IEEE T SOFTWARE ENG, V47, P1980, DOI 10.1109/TSE.2019.2941681
   Qin AK, 2009, IEEE T EVOLUT COMPUT, V13, P398, DOI 10.1109/TEVC.2008.927706
   Rawat S, 2017, 24TH ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2017), DOI 10.14722/ndss.2017.23404
   Rebert A, 2014, PROCEEDINGS OF THE 23RD USENIX SECURITY SYMPOSIUM, P861
   Schumilo S., 2017, PROC 27 ANN NETW DIS
   Serebryany K, 2015, libFuzzer-A library for coverage-guided fuzz testing
   Serebryany K., 2012, USENIX ANN TECHNICAL, P309
   Stephens N, 2016, 23RD ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2016), DOI 10.14722/ndss.2016.23368
   Swiecki Robert, 2017, URl
   Van Laarhoven P.J., 1987, Simulated annealing, P7, DOI [DOI 10.1007/978-94-015-7744-12, DOI 10.1007/978-94-015-7744-1_2]
   Venter G, 2003, AIAA J, V41, P1583, DOI 10.2514/2.2111
   Wang YH, 2020, 27TH ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2020), DOI 10.14722/ndss.2020.24422
   Woo M, 2013, P 2013 ACM SIGSAC C, P511
   Yang XS, 2010, Arxiv, DOI arXiv:1003.1409
   Yang XS, 2018, STUD COMPUT INTELL, V744, P245, DOI 10.1007/978-3-319-67669-2_11
   Yang XS, 2009, LECT NOTES COMPUT SC, V5792, P169, DOI 10.1007/978-3-642-04944-6_14
   Yang XS., 2013, Int J Swarm Intel, V1, P36, DOI [DOI 10.1504/IJSI.2013.055801, 10.1504/IJSI.2013.055801]
   Yun I, 2018, PROCEEDINGS OF THE 27TH USENIX SECURITY SYMPOSIUM, P745
   Zalewski M., 2015, AFL
   Zhan ZH, 2009, IEEE T SYST MAN CY B, V39, P1362, DOI 10.1109/TSMCB.2009.2015956
NR 59
TC 0
Z9 0
U1 4
U2 4
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JAN
PY 2024
VL 50
IS 1
BP 1
EP 15
DI 10.1109/TSE.2023.3326144
PG 15
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA EQ4Q6
UT WOS:001140380900006
PM 38372675
DA 2024-08-05
ER

PT J
AU Xiao, YA
   Yang, CY
   Wang, B
   Xiong, YF
AF Xiao, Yuan-An
   Yang, Chenyang
   Wang, Bo
   Xiong, Yingfei
TI Accelerating Patch Validation for Program Repair With Interception-Based
   Execution Scheduling
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Testing; Maintenance engineering; Life estimation; Computer bugs;
   Runtime; Instruments; Codes; Automated program repair; patch validation
ID MUTATION; SELECTION
AB Long patch validation time is a limiting factor for automated program repair (APR). Though the duality between patch validation and mutation testing is recognized, so far there exists no study of systematically adapting mutation testing techniques to general-purpose patch validation. To address this gap, we investigate existing mutation testing techniques and identify five classes of acceleration techniques that are suitable for general-purpose patch validation. Among them, mutant schemata and mutant deduplication have not been adapted to general-purpose patch validation due to the arbitrary changes that third-party APR approaches may introduce. This presents two problems for adaption: 1) the difficulty of implementing the static equivalence analysis required by the state-of-the-art mutant deduplication approach; 2) the difficulty of capturing the changes of patches to the system state at runtime. To overcome these problems, we propose two novel approaches: 1) execution scheduling, which detects the equivalence between patches online, avoiding the static equivalence analysis and its imprecision; 2) interception-based instrumentation, which intercepts the changes of patches to the system state, avoiding a full interpreter and its overhead. Based on the contributions above, we implement ExpressAPR, a general-purpose patch validator for Java that integrates all recognized classes of techniques suitable for patch validation. Our large-scale evaluation with four APR approaches shows that ExpressAPR accelerates patch validation by 137.1x over plain validation or 8.8x over the state-of-the-art approach, making patch validation no longer the time bottleneck of APR. Patch validation time for a single bug can be reduced to within a few minutes on mainstream CPUs.
C1 [Xiao, Yuan-An; Xiong, Yingfei] Peking Univ, Sch Comp Sci, Key Lab High Confidence Software Technol, Minist Educ, Beijing 100871, Peoples R China.
   [Yang, Chenyang] Peking Univ, Beijing 100871, Peoples R China.
   [Yang, Chenyang] Carnegie Mellon Univ, Sch Comp Sci, Pittsburgh, PA 15213 USA.
   [Wang, Bo] Beijing Jiaotong Univ, Sch Comp & Informat Technol, Beijing 100044, Peoples R China.
C3 Peking University; Peking University; Carnegie Mellon University;
   Beijing Jiaotong University
RP Xiong, YF (corresponding author), Peking Univ, Sch Comp Sci, Key Lab High Confidence Software Technol, Minist Educ, Beijing 100871, Peoples R China.
EM xiaoyuanan@pku.edu.cn; cyang3@cs.cmu.edu; wangbo_cs@bjtu.edu.cn;
   xiongyf@pku.edu.cn
RI Wang, Bo/ADN-8547-2022
OI Wang, Bo/0000-0001-7944-9182; Yang, Chenyang/0000-0001-5016-7296
FU National Key Research and Development Program of China
FX No Statement Available
CR Baldwin D., 1979, Tech. Rep.
   Bell J, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P550, DOI 10.1145/2568225.2568248
   Bessey A, 2010, COMMUN ACM, V53, P66, DOI 10.1145/1646353.1646374
   Bravenboer M, 2009, ACM SIGPLAN NOTICES, V44, P243, DOI 10.1145/1639949.1640108
   Changbin Ji, 2009, Proceedings 21st International Conference on Software Engineering & Knowledge Engineering (SEKE 2009), P422
   Chen LC, 2021, PROC INT CONF SOFTW, P1123, DOI 10.1109/ICSE43902.2021.00104
   Chen LS, 2017, IEEE INT CONF AUTOM, P637, DOI 10.1109/ASE.2017.8115674
   Coles H., 2021, Pitest
   Durieux T., 2016, Tech. Rep. hal-01272126
   Fast E., 2010, Conference on Genetic and Evolutionary Computation, P965
   Ghanbari Ali, 2020, ISSTA '20: Proceedings of the 29th ACM SIGSOFT International Symposium on Software Testing and Analysis, P541, DOI 10.1145/3395363.3404362
   Ghanbari A, 2022, PROCEEDINGS OF THE 31ST ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, ISSTA 2022, P654, DOI 10.1145/3533767.3534368
   Ghanbari A, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P1626, DOI 10.1145/3368089.3417929
   Ghanbari A, 2019, PROCEEDINGS OF THE 28TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA '19), P19, DOI 10.1145/3293882.3330559
   Gligoric M., 2015, ISSTA, P211
   Gopinath R, 2016, 2016 IEEE/ACM 38TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING COMPANION (ICSE-C), P740, DOI [10.1145/2889160.2892655, 10.1145/2884781.2884787]
   Gosling J., 2015, The Java(R) language specification: Java SE 8 edition
   Guo RX, 2019, 11TH ASIA-PACIFIC SYMPOSIUM ON INTERNETWARE (INTERNETWARE 2019), DOI 10.1145/3361242.3361245
   Han J., 2021, ZTE Commun., V19, P88
   Harrold MJ, 2001, ACM SIGPLAN NOTICES, V36, P312, DOI 10.1145/504311.504305
   HOWDEN WE, 1982, IEEE T SOFTWARE ENG, V8, P371, DOI 10.1109/TSE.1982.235571
   Hua JR, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P12, DOI 10.1145/3180155.3180245
   Jia Y, 2011, IEEE T SOFTWARE ENG, V37, P649, DOI 10.1109/TSE.2010.62
   Jiang JJ, 2018, ISSTA'18: PROCEEDINGS OF THE 27TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P298, DOI 10.1145/3213846.3213871
   Just R., 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P612, DOI 10.1109/ASE.2011.6100138
   Just R., 2014, P 2014 INT S SOFTW T, P315, DOI DOI 10.1145/2610384.2610388
   Just R, 2014, ISSTA 2014, P437, DOI [10.1145/2610384.2628055, DOI 10.1145/2610384.2628055]
   Kim D, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P802, DOI 10.1109/ICSE.2013.6606626
   Kirbas S, 2021, IEEE SOFTWARE, V38, P43, DOI 10.1109/MS.2021.3071086
   KRAUSER EW, 1991, IEEE T SOFTWARE ENG, V17, P403, DOI 10.1109/32.90444
   Le Goues C, 2012, IEEE T SOFTWARE ENG, V38, P54, DOI 10.1109/TSE.2011.104
   Le Goues C, 2013, SOFTWARE QUAL J, V21, P421, DOI 10.1007/s11219-013-9208-0
   Le XBD, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P213, DOI 10.1109/SANER.2016.76
   Liang JJ, 2021, PROC IEEE INT CONF S, P239, DOI 10.1109/ICSME52107.2021.00028
   Liu C, 2013, 2013 IEEE SIXTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST 2013), P282, DOI 10.1109/ICST.2013.24
   Liu K, 2020, PROC INT CONF SOFTW, P615, DOI 10.1145/3377811.3380338
   Liu K, 2019, PROCEEDINGS OF THE 28TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA '19), P31, DOI 10.1145/3293882.3330577
   Long F, 2016, ACM SIGPLAN NOTICES, V51, P298, DOI 10.1145/2914770.2837617
   Ma YS, 2005, SOFTW TEST VERIF REL, V15, P97, DOI 10.1002/stvr.308
   Marginean A, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE (ICSE-SEIP 2019), P269, DOI 10.1109/ICSE-SEIP.2019.00039
   Mathur A. P., 1994, Software Testing, Verification and Reliability, V4, P9, DOI 10.1002/stvr.4370040104
   Mechtaev S, 2018, ACM T SOFTW ENG METH, V27, DOI 10.1145/3241980
   Mechtaev S, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P129, DOI 10.1145/3180155.3180247
   Mehne B, 2018, IEEE INT CONF SOFTW, P227, DOI 10.1109/ICST.2018.00031
   Noller Y, 2022, PROC INT CONF SOFTW, P2228, DOI 10.1145/3510003.3510040
   OFFUTT AJ, 1992, PROC INT CONF PARAL, P257
   OFFUTT AJ, 1994, IEEE T SOFTWARE ENG, V20, P337, DOI 10.1109/32.286422
   OFFUTT AJ, 1993, PROC INT CONF SOFTW, P100, DOI 10.1109/ICSE.1993.346062
   Pacheco C, 2007, PROC INT CONF SOFTW, P75
   Pan J., 1994, Using constraints to detect equivalent mutants
   Papadakis M, 2019, ADV COMPUT, V112, P275, DOI 10.1016/bs.adcom.2018.03.015
   Papadakis M, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P936, DOI 10.1109/ICSE.2015.103
   Pierce B. C., 2010, Software Foundations
   Pizzoleto AV, 2019, J SYST SOFTWARE, V157, DOI 10.1016/j.jss.2019.07.100
   Qi YH, 2013, PROC IEEE INT CONF S, P180, DOI 10.1109/ICSM.2013.29
   Schuler D, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P297, DOI 10.1145/1595696.1595750
   Tokumoto S, 2016, IEEE INT CONF SOFTW, P320, DOI 10.1109/ICST.2016.18
   Untch R. H., 1993, SIGSOFT Software Engineering Notes, V18, P139, DOI 10.1145/174146.154265
   Vu DL, 2021, 2021 IEEE/ACM INTERNATIONAL WORKSHOP ON AUTOMATED PROGRAM REPAIR (APR 2021), P9, DOI 10.1109/APR52552.2021.00009
   Wang B, 2021, 2021 36TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING ASE 2021, P381, DOI 10.1109/ASE51524.2021.9678827
   Wang B, 2017, PROCEEDINGS OF THE 26TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA'17), P295, DOI 10.1145/3092703.3092714
   Wei Y, 2010, PROC 19 INT S SOFTW, V40, P427
   Weimer W, 2013, IEEE INT CONF AUTOM, P356, DOI 10.1109/ASE.2013.6693094
   Weimer W, 2009, PROC INT CONF SOFTW, P364, DOI 10.1109/ICSE.2009.5070536
   Wong CP, 2021, PROCEEDINGS OF THE 29TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '21), P354, DOI 10.1145/3468264.3468600
   Wong CP, 2018, P ACM PROGRAM LANG, V2, DOI 10.1145/3276487
   Wong CP, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P749, DOI 10.1145/3236024.3264837
   WONG WE, 1995, J SYST SOFTWARE, V31, P185, DOI 10.1016/0164-1212(94)00098-0
   Xiao Y.-A., 2023, GitHub
   Xiong Y., 2021, Trans. Softw. Eng. Methodol., V31, P1
   Xiong YF, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P789, DOI 10.1145/3180155.3180182
   Yoo S, 2012, SOFTW TEST VERIF REL, V22, P67, DOI [10.1002/stv.430, 10.1002/stvr.430]
   Zhang J, 2019, IEEE T SOFTWARE ENG, V45, P898, DOI 10.1109/TSE.2018.2809496
   Zhang Lingming, 2013, P 2013 INT S SOFTWAR, P235, DOI 10.1145/2483760.2483782
   Zhang Q., 2022, ZTE Commun., V20, P85
   Zhang XD, 2020, 2020 IEEE/ACM 42ND INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE (ICSE-SEIP), P41, DOI 10.1145/3377813.3381356
   Zhu QH, 2021, PROCEEDINGS OF THE 29TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '21), P341, DOI 10.1145/3468264.3468544
NR 77
TC 0
Z9 0
U1 0
U2 0
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAR
PY 2024
VL 50
IS 3
BP 618
EP 635
DI 10.1109/TSE.2024.3359969
PG 18
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA LQ6H5
UT WOS:001188302300005
OA Green Submitted
DA 2024-08-05
ER

PT J
AU Karmakar, A
   Robbes, R
AF Karmakar, Anjan
   Robbes, Romain
TI INSPECT: Intrinsic and Systematic Probing Evaluation for Code
   Transformers
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Machine learning for source code; probing; benchmarking; transformers;
   pre-trained models
ID COMPLEXITY
AB Pre-trained models of source code have recently been successfully applied to a wide variety of Software Engineering tasks; they have also seen some practical adoption in practice, e.g. for code completion. Yet, we still know very little about what these pre-trained models learn about source code. In this article, we use probing-simple diagnostic tasks that do not further train the models-to discover to what extent pre-trained models learn about specific aspects of source code. We use an extensible framework to define 15 probing tasks that exercise surface, syntactic, structural and semantic characteristics of source code. We probe 8 pre-trained source code models, as well as a natural language model (BERT) as our baseline. We find that models that incorporate some structural information (such as GraphCodeBERT) have a better representation of source code characteristics. Surprisingly, we find that for some probing tasks, BERT is competitive with the source code models, indicating that there are ample opportunities to improve source-code specific pre-training on the respective code characteristics. We encourage other researchers to evaluate their models with our probing task suite, so that they may peer into the hidden layers of the models and identify what intrinsic code characteristics are encoded.
C1 [Karmakar, Anjan] Free Univ Bozen Bolzano, I-39100 Bozen Bolzano, Italy.
   [Robbes, Romain] Univ Bordeaux, CNRS, Bordeaux INP, LaBRI,UMR5800, F-33400 Talence, France.
C3 Free University of Bozen-Bolzano; Universite de Bordeaux; Centre
   National de la Recherche Scientifique (CNRS)
RP Robbes, R (corresponding author), Univ Bordeaux, CNRS, Bordeaux INP, LaBRI,UMR5800, F-33400 Talence, France.
EM romain.robbes@labri.fr
RI Robbes, Romain/H-3771-2013
OI Robbes, Romain/0000-0003-4569-6868
CR Adi Y, 2017, Arxiv, DOI arXiv:1608.04207
   Ahmad WU, 2021, Arxiv, DOI [arXiv:2103.06333, 10.48550/arXiv.2103.06333]
   Alain G, 2018, Arxiv, DOI arXiv:1610.01644
   Allamanis M, 2018, Arxiv, DOI arXiv:1711.00740
   Alon U., 2018, arXiv
   Lopez JAH, 2022, Arxiv, DOI arXiv:2206.11719
   Belinkov Y, 2022, COMPUT LINGUIST, V48, P207, DOI 10.1162/coli_a_00422
   Belinkov Y, 2017, PROCEEDINGS OF THE 55TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (ACL 2017), VOL 1, P861, DOI 10.18653/v1/P17-1080
   Bender EM, 2021, PROCEEDINGS OF THE 2021 ACM CONFERENCE ON FAIRNESS, ACCOUNTABILITY, AND TRANSPARENCY, FACCT 2021, P610, DOI 10.1145/3442188.3445922
   Cao Jize, 2020, ECCV, P565
   Caucheteux C., 2022, Sci. Rep., V12, P1
   Caucheteux C, 2021, Arxiv, DOI arXiv:2111.14232
   Chen M., 2021, arXiv, DOI DOI 10.48550/ARXIV.2107.03374
   Chen N, 2022, Arxiv, DOI arXiv:2210.04633
   Cheng X, 2022, PROCEEDINGS OF THE 31ST ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, ISSTA 2022, P519, DOI 10.1145/3533767.3534371
   Clark K, 2019, Arxiv, DOI arXiv:1906.04341
   Conneau A, 2018, PROCEEDINGS OF THE 56TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (ACL), VOL 1, P2126
   De Sousa NT, 2021, 2021 36TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING WORKSHOPS (ASEW 2021), P90, DOI 10.1109/ASEW52652.2021.00028
   Deissenboeck F, 2006, SOFTWARE QUAL J, V14, P261, DOI 10.1007/s11219-006-9219-1
   Devlin J, 2019, 2019 CONFERENCE OF THE NORTH AMERICAN CHAPTER OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS: HUMAN LANGUAGE TECHNOLOGIES (NAACL HLT 2019), VOL. 1, P4171
   Peters ME, 2018, Arxiv, DOI arXiv:1808.08949
   Ernst NA, 2022, IEEE SOFTWARE, V39, P106, DOI 10.1109/MS.2021.3133805
   Feng ZY, 2020, Arxiv, DOI [arXiv:2002.08155, 10.48550/arXiv.2002.08155]
   Fried D, 2023, Arxiv, DOI [arXiv:2204.05999, 10.48550/ARXIV.2204.05999]
   Goel D, 2022, Arxiv, DOI arXiv:2204.08653
   Guo DY, 2022, Arxiv, DOI arXiv:2203.03850
   Guo DY, 2021, Arxiv, DOI arXiv:2009.08366
   Hewitt J., 2019, arXiv
   Hewitt J, 2019, 2019 CONFERENCE OF THE NORTH AMERICAN CHAPTER OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS: HUMAN LANGUAGE TECHNOLOGIES (NAACL HLT 2019), VOL. 1, P4129
   Hindle A, 2008, INT C PROGRAM COMPRE, P133, DOI 10.1109/ICPC.2008.13
   Hong HW, 2021, 2021 CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING (EMNLP 2021), P3495
   Husain H, 2020, Arxiv, DOI arXiv:1909.09436
   Jawahar G, 2019, 57TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (ACL 2019), P3651
   Jay Graylin, 2009, Journal of Software Engineering and Applications, V2, P137, DOI 10.4236/jsea.2009.23020
   Johnson H. M., 1911, The Journal of Philosophy, Psychology and Scientific Methods, V8, P663
   Kanade A, 2020, Arxiv, DOI arXiv:2001.00059
   Kaplan J, 2020, Arxiv, DOI [arXiv:2001.08361, DOI 10.48550/ARXIV.2001.08361]
   Karampatsis RM, 2020, PROC INT CONF SOFTW, P1073, DOI 10.1145/3377811.3380342
   Karmakar A., 2022, arXiv
   Karmakar A, 2023, EMPIR SOFTW ENG, V28, DOI 10.1007/s10664-022-10275-7
   Karmakar A, 2021, 2021 36TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING ASE 2021, P1332, DOI 10.1109/ASE51524.2021.9678927
   Kavumba P., 2019, arXiv
   Lewis M, 2019, Arxiv, DOI arXiv:1910.13461
   Li YJ, 2022, SCIENCE, V378, P1092, DOI 10.1126/science.abq1158
   Li ZY, 2022, Arxiv, DOI arXiv:2203.09095
   Liu YH, 2019, Arxiv, DOI [arXiv:1907.11692, DOI 10.48550/ARXIV.1907.11692]
   Lovering Charles, 2022, P NEURIPS, V35, P25992
   Lu S, 2021, Arxiv, DOI arXiv:2102.04664
   Martins P, 2018, IEEE WORK CONF MIN S, P1, DOI 10.1145/3196398.3196450
   Matthew E., 2018, Deep contextualized word representations, P2227
   McCabe T. J., 1976, IEEE Transactions on Software Engineering, VSE-2, P308, DOI 10.1109/TSE.1976.233837
   McGrath T, 2022, P NATL ACAD SCI USA, V119, DOI 10.1073/pnas.2206625119
   NEJMEH BA, 1988, COMMUN ACM, V31, P188, DOI 10.1145/42372.42379
   Nijkamp E, 2022, Arxiv, DOI arXiv:2203.13474
   Paltenghi M., 2022, arXiv, DOI DOI 10.48550/ARXIV.2210.05506
   Paltenghi M, 2021, 2021 36TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING ASE 2021, P867, DOI 10.1109/ASE51524.2021.9678712
   Prenner JA, 2022, IEEE T SOFTWARE ENG, V48, P5050, DOI 10.1109/TSE.2021.3135465
   Raffel C, 2023, Arxiv, DOI arXiv:1910.10683
   Ray B, 2016, PROC INT CONF SOFTW, P428, DOI 10.1145/2884781.2884848
   Rogers A, 2020, T ASSOC COMPUT LING, V8, P842, DOI 10.1162/tacl_a_00349
   Schrimpf M, 2021, P NATL ACAD SCI USA, V118, DOI 10.1073/pnas.2105646118
   Shi Xing, 2016, P 2016 C EMPIRICAL M, P1526, DOI 10.18653/v1/D16-1159
   Sui YL, 2020, P ACM PROGRAM LANG, V4, DOI 10.1145/3428301
   Svyatkovskiy A, 2020, Arxiv, DOI arXiv:2005.08025
   Tenney I, 2019, Arxiv, DOI [arXiv:1905.06316, 10.48550/arXiv.1905.06316]
   Troshin S, 2022, Arxiv, DOI arXiv:2202.08975
   Tufte E., 2006, Beautiful Evidence, V1, P1
   Vaswani A, 2017, ADV NEUR IN, V30
   Wan Y., 2022, arXiv
   Wang Y, 2021, 2021 CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING (EMNLP 2021), P8696
   Wolf T, 2020, Arxiv, DOI arXiv:1910.03771
   Zhang KC, 2022, Arxiv, DOI arXiv:2207.08466
NR 72
TC 0
Z9 0
U1 0
U2 0
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD FEB
PY 2024
VL 50
IS 2
BP 220
EP 238
DI 10.1109/TSE.2023.3341624
PG 19
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA IP4I9
UT WOS:001167516600011
OA Green Submitted
DA 2024-08-05
ER

PT J
AU Zhong, CX
   Li, SS
   Huang, H
   Liu, XD
   Chen, ZK
   Zhang, Y
   Zhang, H
AF Zhong, Chenxing
   Li, Shanshan
   Huang, Huang
   Liu, Xiaodong
   Chen, Zhikun
   Zhang, Yi
   Zhang, He
TI Domain-Driven Design for Microservices: An Evidence-Based Investigation
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Domain-driven design; microservices architecture; systematic literature
   review; industrial survey; empirical study
AB MicroService Architecture (MSA), a predominant architectural style in recent years, still faces the arduous task of identifying the boundaries of microservices. Domain-Driven Design (DDD) is regarded as one of the major design methods for addressing this task in practice, which aims to iteratively build domain models using a series of patterns, principles, and practices. The adoption of DDD for MSA (DDD4M in short) can, however, present considerable challenges in terms of a sufficient understanding of the methodological requirements and the application domains. It is imperative to establish a systematic understanding about the various aspects of employing DDD4M and provide effective guidance. This study reports an empirical inquiry that integrates a systematic literature review and a confirmatory survey. By reviewing 34 scientific studies and consulting 63 practitioners, this study reveals several distinctive findings with regard to the state and challenges of as well as the possible solutions for DDD4M applications, from the 5W1H perspectives: When, Where, Why, Who, What, and How. The analysis and synthesis of evidence show a wide variation in understanding of domain modeling artifacts. The status quo indicates the need for further methodological support in terms of application process, domain model design and implementation, and domain knowledge acquisition and management. To advance the state-of-the-practice, our findings were organized into a preliminary checklist that intends to assist practitioners by illuminating a DDD4M application process and the specific key considerations along the way.
C1 [Zhong, Chenxing; Li, Shanshan; Liu, Xiaodong; Chen, Zhikun; Zhang, He] Nanjing Univ, State Key Lab Novel Software Technol, Nanjing 210093, Peoples R China.
   [Huang, Huang] State Grid Nanjing Power Supply Co, Nanjing 210000, Peoples R China.
   [Zhang, Yi] DaoCloud, Shanghai 200000, Peoples R China.
C3 Nanjing University
RP Li, SS; Zhang, H (corresponding author), Nanjing Univ, State Key Lab Novel Software Technol, Nanjing 210093, Peoples R China.
EM zhongcx@smail.nju.edu.cn; lss@nju.edu.cn; sgcc.huang.huang@gmail.com;
   dz21320002@smail.nju.edu.cn; zkchen@smail.nju.edu.cn;
   zhangyi1101@foxmail.com; hezhang@nju.edu.cn
OI Huang, Huang/0000-0002-1296-4363
FU Key Research and Development Program of Jiangsu Province
FX No Statement Available
CR Abeck S., 2019, P 50 JAHR GES INF IN, VP-294, P125
   Ali S, 2020, ACM T SOFTW ENG METH, V29, DOI 10.1145/3375636
   [Anonymous], 2024, Microservices architecture global market report 2023
   Balalaie A, 2016, IEEE SOFTWARE, V33, P42, DOI 10.1109/MS.2016.64
   Bi TT, 2021, J SYST SOFTWARE, V180, DOI 10.1016/j.jss.2021.111005
   Bogner J, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-021-09999-9
   Bogner J, 2019, PROC IEEE INT CONF S, P546, DOI 10.1109/ICSME.2019.00089
   Chia-Yu Li, 2020, 2020 International Computer Symposium (ICS), P519, DOI 10.1109/ICS51289.2020.00107
   Coburn W., 2015, A microscope on microservices
   Cortellessa V, 2022, J SYST SOFTWARE, V183, DOI 10.1016/j.jss.2021.111084
   Creswell J., 2018, Research Design: Qualitative, quantitative and mixed methods approaches, V5th, DOI DOI 10.3109/08941939.2012.723954
   Cruzes DS, 2011, INT SYMP EMP SOFTWAR, P275, DOI 10.1109/ESEM.2011.36
   Desai U, 2021, AAAI CONF ARTIF INTE, V35, P72
   Di Francesco P, 2019, J SYST SOFTWARE, V150, P77, DOI 10.1016/j.jss.2019.01.001
   Dyba Tore, 2007, 2007 First International Symposium on Empirical Software Engineering and Measurement, P225
   Evans E., 2011, DOMAIN DRIVEN DESIGN
   Evans E., 2015, DDD and microservices: At last, some boundaries
   Evans E., 2004, Domain-Driven Design: Tackling Complexity in the Heart of Software
   Fadhly M., 2022, J. Theor. Appl. Inf. Technol., V100, P2127
   Fajar A. N., 2020, Int. J. Emerg. Trends Eng. Res., V8, P3058
   Farsi H, 2021, I C COMP SYST APPLIC, DOI 10.1109/AICCSA53542.2021.9686947
   Fowler M., 2002, Patterns of enterprise application architecture
   Fowler Martin, 2014, Microservices: A Definition of This New Architectural Term
   Fowler SJ., 2016, PRODUCTION READY MIC
   Giallorenzo S, 2022, LECT NOTES COMPUT SC, V13271, P223, DOI 10.1007/978-3-031-08143-9_13
   Goncalves N., 2021, P 18 INT C SOFTW ARC, P1
   Haferkorn D, 2020, PROC SPIE, V11424, DOI 10.1117/12.2558030
   Hassan S, 2020, SOFTWARE PRACT EXPER, V50, P1651, DOI 10.1002/spe.2869
   He C, 2016, 2016 IEEE 24TH INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE WORKSHOPS (REW), P180, DOI [10.1109/REW.2016.041, 10.1109/REW.2016.9]
   HEDGES LV, 1982, PSYCHOL BULL, V92, P490, DOI 10.1037/0033-2909.92.2.490
   Hippchen B., 2017, International Journal on Advances in Software (1942-2628), V10, P432
   Hippchen B., 2019, Int. J. Adv. Softw., V12, P343
   Ivanov Nikolay, 2021, 2021 International Conference Automatics and Informatics (ICAI), P182, DOI 10.1109/ICAI52893.2021.9639494
   Jia CJ, 2016, J SYST SOFTWARE, V116, P206, DOI 10.1016/j.jss.2015.01.058
   Jin WX, 2021, IEEE T SOFTWARE ENG, V47, P987, DOI 10.1109/TSE.2019.2910531
   Joselyne M. I., 2021, P INT C ENG EM TECHN, P1
   Josélyne MI, 2018, 2018 IEEE/ACM SYMPOSIUM ON SOFTWARE ENGINEERING IN AFRICA (SEIA), P43, DOI 10.1145/3195528.3195535
   Pérez LJ, 2021, APPL SCI-BASEL, V11, DOI 10.3390/app11115172
   Kalia AK, 2021, PROCEEDINGS OF THE 29TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '21), P1214, DOI 10.1145/3468264.3473915
   Kapferer S., 2020, Service-Oriented Computing, P189, DOI DOI 10.1007/978-3-030-64846-611
   Kapferer S., 2020, P 8 INT C MOD DRIV E, P250
   Kitchenham B., 2007, Guidelines for performing systematic literature reviews in software engineering, VVolume 2, DOI [10.1145/1134285.1134500, DOI 10.1145/1134285.1134500]
   Kitchenham B. A., 2008, Guide to Advanced Empirical Software Engineering, P63, DOI DOI 10.1007/978-1-84800-044-5_3
   Kitchenham Barbara Ann, 2015, Evidencebased software engineering and systematic reviews, V4
   Krause A, 2020, 2020 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE COMPANION (ICSA-C 2020), P9, DOI 10.1109/ICSA-C50368.2020.00011
   Li MQ, 2022, IEEE T SOFTWARE ENG, V48, P1771, DOI 10.1109/TSE.2020.3036108
   Li RY, 2022, J SOFTW-EVOL PROC, V34, DOI 10.1002/smr.2423
   Li SS, 2021, INFORM SOFTWARE TECH, V131, DOI 10.1016/j.infsof.2020.106449
   Li SS, 2019, J SYST SOFTWARE, V157, DOI 10.1016/j.jss.2019.07.008
   Liu LS, 2022, INT J PROD RES, V60, P2534, DOI 10.1080/00207543.2021.1896818
   Lonsdale D, 2010, DATA KNOWL ENG, V69, P318, DOI 10.1016/j.datak.2009.08.003
   Lux A, 2020, PROCEEDINGS OF THE 22ND INTERNATIONAL CONFERENCE ON ENTERPRISE INFORMATION SYSTEMS (ICEIS), VOL 2, P796, DOI 10.5220/0009512607960800
   Millett S., 2015, Patterns, Principles, and Practices of DomainDriven Design
   Pham M, 2016, 2016 IEEE NETSOFT CONFERENCE AND WORKSHOPS (NETSOFT), P372, DOI 10.1109/NETSOFT.2016.7502469
   Newman S., 2021, Building microservices
   Perry D. E., 2000, EMPIRICAL STUDIES SO, P345, DOI [10.1145/336512.336586, DOI 10.1145/336512.336586]
   Petersen K., 2008, P 12 INT C EVALUATIO, P68, DOI DOI 10.14236/EWIC/EASE2008.8
   Petrasch R, 2017, INT JOINT CONF COMP
   Prana GAA, 2019, EMPIR SOFTW ENG, V24, P1296, DOI 10.1007/s10664-018-9660-3
   Rademacher F., 2021, P 2 INT WORKSH MOD D, P1
   Rademacher F, 2020, EUROMICRO CONF PROC, P229, DOI 10.1109/SEAA51224.2020.00047
   Rademacher F, 2018, IEEE SOFTWARE, V35, P36, DOI 10.1109/MS.2018.2141028
   Rademacher F, 2018, LECT NOTES COMPUT SC, V10729, P230, DOI 10.1007/978-3-319-74781-1_17
   Rahmatulloh A., 2021, P INT C ADV DAT SCI, P1
   Razavian M, 2023, J SYST SOFTWARE, V198, DOI 10.1016/j.jss.2022.111560
   Richter D, 2018, CLOSER: PROCEEDINGS OF THE 8TH INTERNATIONAL CONFERENCE ON CLOUD COMPUTING AND SERVICES SCIENCE, P608, DOI 10.5220/0006791006080615
   Rossi P.H., 2013, Handbook of survey research
   Rubin E, 2011, REQUIR ENG, V16, P117, DOI 10.1007/s00766-010-0113-9
   Salama M., 2019, IEEE Trans. Softw. Eng., V47, P1468
   Schmidt RA, 2020, IBER CONF INF SYST
   Schneider M., 2019, P 5 INT C ADV TRENDS, P11
   Shao J., 2003, Mathematical Statistics
   Singjai A, 2021, PROCEEDINGS OF THE EUROPEAN CONFERENCE ON PATTERN LANGUAGES OF PROGRAMS 2021, EUROPLOP 2021, DOI 10.1145/3489449.3489976
   Singjai A, 2022, 2022 IEEE 19TH INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE COMPANION (ICSA-C 2022), P76, DOI 10.1109/ICSA-C54293.2022.00058
   Singjai A, 2021, 2021 IEEE 18TH INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE (ICSA), P25, DOI 10.1109/ICSA51549.2021.00011
   Soni R. K., 2017, Spring: Developing Java Applications for the Enterprise
   Steinegger RH, 2017, THIRD INTERNATIONAL CONFERENCE ON ADVANCES AND TRENDS IN SOFTWARE ENGINEERING (SOFTENG 2017), P79
   Suryana T, 2019, IOP CONF SER-MAT SCI, V662, DOI 10.1088/1757-899X/662/2/022122
   Teymourian N, 2022, IEEE T SOFTWARE ENG, V48, P1451, DOI 10.1109/TSE.2020.3022212
   Thalheimer W., 2002, CALCULATE EFFECT SIZ, DOI DOI 10.1113/JPHYSIOL.2004.078915
   Vernon V., 2013, IMPLEMENTING DOMAIN
   Vural H, 2021, IEEE ACCESS, V9, P32721, DOI 10.1109/ACCESS.2021.3060895
   Vural H, 2018, LECT NOTES COMPUT SC, V10964, P454, DOI 10.1007/978-3-319-95174-4_36
   Wan ZY, 2021, IEEE T SOFTWARE ENG, V47, P1331, DOI 10.1109/TSE.2019.2921343
   Wan ZY, 2020, IEEE T SOFTWARE ENG, V46, P1241, DOI 10.1109/TSE.2018.2877678
   Waseem M, 2021, J SYST SOFTWARE, V182, DOI 10.1016/j.jss.2021.111061
   Waseem M, 2020, J SYST SOFTWARE, V170, DOI 10.1016/j.jss.2020.110798
   Wieringa R, 2006, REQUIR ENG, V11, P102, DOI 10.1007/s00766-005-0021-6
   Wizenty PN, 2018, LECT NOTES COMPUT SC, V11176, P549, DOI 10.1007/978-3-030-04771-9_41
   Wohlin C., 2014, P 18 INT C EVALUATIO, DOI DOI 10.1145/2601248.2601268
   Wolf T, 2020, PROCEEDINGS OF THE 2020 CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING: SYSTEM DEMONSTRATIONS, P38
   Yang KY, 2022, INFORM SOFTWARE TECH, V145, DOI 10.1016/j.infsof.2021.106818
   Yu Ding, 2020, 2020 2nd International Conference on Information Technology and Computer Application (ITCA), P778, DOI 10.1109/ITCA52113.2020.00167
   Zaschke C, 2019, KMIS: PROCEEDINGS OF THE 11TH INTERNATIONAL JOINT CONFERENCE ON KNOWLEDGE DISCOVERY, KNOWLEDGE ENGINEERING AND KNOWLEDGE MANAGEMENT, VOL 3: KMIS, P212, DOI 10.5220/0008319402120218
   Zhang H, 2019, 2019 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE (ICSA), P51, DOI 10.1109/ICSA.2019.00014
   Zhong CX, 2022, SOFTWARE PRACT EXPER, V52, P2574, DOI 10.1002/spe.3138
   Zhou X, 2022, 2022 ACM/IEEE 44TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE (ICSE-SEIP 2022), P1, DOI 10.1145/3510457.3513054
   Zhou X, 2023, J SYST SOFTWARE, V195, DOI 10.1016/j.jss.2022.111521
   Zhou X, 2016, ASIA PAC SOFWR ENG, P153, DOI [10.1109/APSEC.2016.62, 10.1109/APSEC.2016.031]
NR 99
TC 0
Z9 0
U1 2
U2 2
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUN
PY 2024
VL 50
IS 6
BP 1425
EP 1449
DI 10.1109/TSE.2024.3385835
PG 25
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA UL2G2
UT WOS:001248142900014
DA 2024-08-05
ER

PT J
AU Blanco, AF
   Cordova, AQ
   Bergel, A
   Alcocer, JPS
AF Blanco, Alison Fernandez
   Cordova, Araceli Queirolo
   Bergel, Alexandre
   Alcocer, Juan Pablo Sandoval
TI Asking and Answering Questions During Memory Profiling
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Memory management; Software; Resource management; Codes; Python;
   Libraries; Data mining; Program analysis; memory management;
   experimental design
ID VISUALIZATION
AB The software engineering community has produced numerous tools, techniques, and methodologies for practitioners to analyze and optimize memory usage during software execution. However, little is known about the actual needs of programmers when analyzing memory behavior and how they use tools to address those needs. We conducted an exploratory study (i) to understand what a programmer needs to know when analyzing memory behavior and (ii) how a programmer finds that information with current tools. From our observations, we provide a catalog of 34 questions programmers ask themselves when analyzing memory behavior. We also report a detailed analysis of how some tools are used to answer these questions and the difficulties participants face during the process. Finally, we present four recommendations to guide researchers and developers in designing, evaluating, and improving memory behavior analysis tools.
C1 [Blanco, Alison Fernandez; Alcocer, Juan Pablo Sandoval] Pontificia Univ Catolica Chile, Sch Engn, Dept Comp Sci, Santiago 7820436, Chile.
   [Blanco, Alison Fernandez; Cordova, Araceli Queirolo] Univ Chile, Dept Comp Sci DCC, ISCLab, Santiago 8370456, Chile.
   [Bergel, Alexandre] Relat AI, CH-3006 Bern, Switzerland.
C3 Pontificia Universidad Catolica de Chile; Universidad de Chile
RP Blanco, AF (corresponding author), Pontificia Univ Catolica Chile, Sch Engn, Dept Comp Sci, Santiago 7820436, Chile.; Blanco, AF (corresponding author), Univ Chile, Dept Comp Sci DCC, ISCLab, Santiago 8370456, Chile.
EM afernandb@uc.cl; aqueirol@dcc.uchile.cl; alexandre.bergel@me.com;
   juanpablo.sandoval@ing.puc.cl
RI Fernandez, Alison/KPA-6324-2024; Sandoval Alcocer, Juan
   Pablo/CAA-0465-2022
OI Fernandez, Alison/0000-0003-1784-814X; Sandoval Alcocer, Juan
   Pablo/0000-0002-8335-4351
FU CONICYT, Chile
FX No Statement Available
CR Aftandilian EE, 2010, SOFTVIS 2010: PROCEEDINGS OF THE 2010 INTERNATIONAL SYMPOSIUM ON SOFTWARE VISUALIZATION, P53
   [Anonymous], YourKit Java and.NET profilers
   [Anonymous], Guppy 3 home page
   [Anonymous], Python object graphs
   [Anonymous], A Python memory profiler for data processing and scientific computing applications
   [Anonymous], 2010, P ACM IEEE 32 INT C, DOI DOI 10.1145/1806799.1806874
   [Anonymous], Java profiler - jprofiler
   [Anonymous], Tracemalloc Trace memory allocations
   [Anonymous], Identifying memory leaks-Pympler documentation
   [Anonymous], Memray is a memory profiler for Python
   [Anonymous], memory-profiler
   [Anonymous], 2006, P SIGCHI C HUM FACT, DOI [DOI 10.1145/1124772.1124808, 10.1145/1124772.1124808]
   [Anonymous], vprof: Visual profiler for Python
   Beckwith L., 2005, P SIGCHI C HUMAN FAC, P869, DOI [10.1145/1054972.1055094, DOI 10.1145/1054972.1055094]
   Bond MD, 2008, ACM SIGPLAN NOTICES, V43, P109, DOI 10.1145/1449955.1449774
   Byma S, 2018, PROCEEDINGS OF THE 2018 ACM SIGPLAN INTERNATIONAL SYMPOSIUM ON MEMORY MANAGEMENT (ISMM'18), P1, DOI 10.1145/3210563.3210564
   Chis AE, 2011, LECT NOTES COMPUT SC, V6813, P383, DOI 10.1007/978-3-642-22655-7_18
   Berger ED, 2020, Arxiv, DOI arXiv:2006.03879
   de Alwis B, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P21, DOI 10.1145/1368088.1368092
   De Pauw W, 2002, LECT NOTES COMPUT SC, V2269, P151
   De Pauw W, 1999, LECT NOTES COMPUT SC, V1628, P116
   Diehl S, 2005, PROC INT CONF SOFTW, P718
   Ducasse S, 2004, CSMR 2004: EIGHTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P309, DOI 10.1109/CSMR.2004.1281433
   Duseau F, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P15, DOI 10.1109/ICSM.2012.6405248
   Blanco AF, 2022, IEEE INT WORK VIS SO, P108, DOI 10.1109/VISSOFT55257.2022.00019
   Blanco AF, 2023, ACM COMPUT SURV, V55, DOI 10.1145/3485134
   Blanco AF, 2018, 2018 SIXTH IEEE WORKING CONFERENCE ON SOFTWARE VISUALIZATION (VISSOFT), P43, DOI 10.1109/VISSOFT.2018.00013
   Fritz T., 2010, Proceedings of the 32nd International Conference on Software Engineering - Volume 1, ICSE '10, V1, P175
   Ghanavati M, 2020, EMPIR SOFTW ENG, V25, P678, DOI 10.1007/s10664-019-09731-8
   Gralka P, 2017, 2017 IEEE WORKING CONFERENCE ON SOFTWARE VISUALIZATION (VISSOFT 2017), P54, DOI 10.1109/VISSOFT.2017.15
   Holzinger A, 2005, COMMUN ACM, V48, P71, DOI 10.1145/1039539.1039541
   Ishizue R, 2020, HELIYON, V6, DOI 10.1016/j.heliyon.2020.e03806
   Keim DA, 2002, IEEE T VIS COMPUT GR, V8, P1, DOI 10.1109/2945.981847
   Ko AJ, 2007, PROC INT CONF SOFTW, P344
   Kubelka J, 2019, INT C PROGRAM COMPRE, P30, DOI 10.1109/ICPC.2019.00017
   Kubelka J, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1090, DOI 10.1145/3180155.3180200
   LaToza T. D., 2010, P EV US PROGR LANG T, P1
   LaToza Thomas D., 2010, P 32 ACM IEEE INT C, P185, DOI [10.1145/1806799.1806829, DOI 10.1145/1806799.1806829]
   Lo D, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P415, DOI 10.1145/2786805.2786809
   Luk CK, 2005, ACM SIGPLAN NOTICES, V40, P190, DOI 10.1145/1064978.1065034
   Marron M, 2013, IEEE T SOFTWARE ENG, V39, P774, DOI 10.1109/TSE.2012.69
   Millman KJ, 2011, COMPUT SCI ENG, V13, P9, DOI 10.1109/MCSE.2011.36
   Mitchell N, 2007, OOPSLA: 22ND INTERNATIONAL CONFERENCE ON OBJECT-ORIENTED PROGRAMMING, SYSTEMS, LANGUAGES, AND APPLICATIONS, PROCEEDINGS, P245
   Park Y, 2009, IEEE INT WORK VIS SO, P3, DOI 10.1109/VISSOF.2009.5336433
   Price B. A., 1993, Journal of Visual Languages and Computing, V4, P211, DOI 10.1006/jvlc.1993.1015
   Reiss S.P., 2005, Proceedings of the 2005 ACM Symposium on Software Visualization, P115, DOI DOI 10.1145/1056018.1056034
   Reiss SP, 2009, IEEE INT WORK VIS SO, P73, DOI 10.1109/VISSOF.2009.5336418
   Shneiderman B, 1996, IEEE SYMPOSIUM ON VISUAL LANGUAGES, PROCEEDINGS, P336, DOI 10.1109/VL.1996.545307
   Sillito J., 2006, Proc. of the ACM SIGSOFT Int'l Symp. on Foundations of Software Engineering, P23
   Sillito J, 2008, IEEE T SOFTWARE ENG, V34, P434, DOI 10.1109/TSE.2008.26
   Srinath K. R., 2017, International Research Journal of Engineering and Technology, V4, P354
   Tan L, 2014, EMPIR SOFTW ENG, V19, P1665, DOI 10.1007/s10664-013-9258-8
   Terry G., 2018, SAGE HDB QUALITATIVE, P17, DOI [DOI 10.4135/9781526405555.N2, 10.1080/17439760.2016.12626132, DOI 10.1080/17439760.2016.1262613, https://doi.org/10.4135/9781526405555, 10.1080/17439760.2016.1262613]
   Veroy R. L., 2013, P 1 IEEE WORK C SOFT, P1
   Viera AJ, 2005, FAM MED, V37, P360
   Weninger Markus, 2020, Proceedings of the ACM on Human-Computer Interaction, V4, DOI 10.1145/3394977
   Weninger M., 2021, P ACM HUM COMP INT, V5, P1, DOI [10.1145/346173110.1145/3461731, DOI 10.1145/346173110.1145/3461731]
   Weninger M, 2019, COMPANION OF THE 2019 ACM/SPEC INTERNATIONAL CONFERENCE ON PERFORMANCE ENGINEERING (ICPE '19), P29, DOI 10.1145/3302541.3313100
   Wettel R, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P551, DOI 10.1145/1985793.1985868
   Wohlin C., 2012, Experimentation in Software Engineering, DOI [10.1007/978-3-642-29044-2., DOI 10.1007/978-3-642-29044-2]
   Xu GQ, 2010, ACM SIGPLAN NOTICES, V45, P160, DOI 10.1145/1809028.1806616
   Xu GQ, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P151, DOI 10.1145/1368088.1368110
NR 63
TC 0
Z9 0
U1 1
U2 1
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAY
PY 2024
VL 50
IS 5
BP 1096
EP 1117
DI 10.1109/TSE.2024.3377127
PG 22
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA QX5T5
UT WOS:001224187300003
DA 2024-08-05
ER

PT J
AU Prudjinski, M
   Hadar, I
   Luria, G
AF Prudjinski, Micha
   Hadar, Irit
   Luria, Gil
TI Exploring the Role of Team Security Climate in the Implementation of
   Security by Design: A Case Study in the Defense Sector
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Security; Meteorology; Software; Organizations; Behavioral sciences;
   Information security; Privacy; Security and privacy protection;
   organizational climate; security by design; team climate
ID LEADER-MEMBER EXCHANGE; PROCEDURAL JUSTICE CLIMATE; DYAD LINKAGE MODEL;
   SAFETY CLIMATE; ORGANIZATIONAL-CLIMATE; CROSS-LEVEL; TRANSFORMATIONAL
   LEADERSHIP; SUPERVISORY PRACTICES; ANTECEDENTS; MULTILEVEL
AB The rapid diffusion of software systems into all aspects of human life has exacerbated security threats and thus amplified the requirement for proactive approaches for designing security as a default. Following evidence from previous studies, indicating organizational climate as a key influencer on developers' security mindsets and behaviors, this study was focused on examining the relationship between team security climate level and developers' actual practices when addressing security threats during software development. The empirical study was conducted in a defense software development organization and included a survey questionnaire completed by 212 developers from 50 software teams. The results were compared to managers' evaluations regarding the implementation level of security mechanisms in the teams' development. The findings indicate a positive relationship between team security climate level and the implementation level of security mechanisms in the teams' software development and that team productivity climate moderates this relationship. The results also reveal that team security climate mediates the association between manager-developer relationships and the implementation level of security mechanisms in software development. The study provides support to organizational climate theory and to the specific scale of organizational security climate, demonstrating the predictive validity of this scale, and sheds light on the influence of leadership and competitive facets on security engineering.
C1 [Prudjinski, Micha; Luria, Gil] Univ Haifa, Dept Human Serv, IL-3498838 H_efa, Israel.
   [Hadar, Irit] Univ Haifa, Dept Informat Syst, IL-3498838 Hefa, Israel.
C3 University of Haifa; University of Haifa
RP Hadar, I (corresponding author), Univ Haifa, Dept Informat Syst, IL-3498838 Hefa, Israel.
EM pmicha@live.com; hadari@is.haifa.ac.il; gluria@univ.haifa.ac.il
OI Hadar, Irit/0000-0002-4267-0235
FU Center for Cyber Law #x0026; Policy (CCLP), established by the
   University of Haifa in collaboration with the Israeli National Cyber
   Bureau
FX No Statement Available
CR Al-Izki F, 2016, 2016 CYBERSECURITY AND CYBERFORENSICS CONFERENCE (CCC), P107, DOI 10.1109/CCC.2016.28
   Alencar G.D., 2018, Journal of Convergence Information Technology, V13, P1
   AlGhamdi S, 2020, COMPUT SECUR, V99, DOI 10.1016/j.cose.2020.102030
   Allen I.E., 2007, Qual. Prog., V40, P64
   Allison P. D., 1999, Multiple regression: A primer
   Argyris D. A., 1996, Organizational Learning: Theory, Methodand Practice, V2nd
   Arizon-Peretz R, 2022, IEEE T SOFTWARE ENG, V48, P4433, DOI 10.1109/TSE.2021.3119721
   Arizon-Peretz R, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-021-09995-z
   Ashkanasy N.W., 2000, HDB ORG CULTURE CLIM, P131
   Balebako R, 2014, P WORKSH US SEC, P1
   Barling J, 2002, J APPL PSYCHOL, V87, P488, DOI 10.1037//0021-9010.87.3.488
   Bartram D., 2002, Organizational Effectiveness:The Role of Psychology, P1
   Basak E, 2015, COMPUT HUM BEHAV, V48, P181, DOI 10.1016/j.chb.2015.01.055
   Belsley D., 1980, REGRESSION DIAGNOSTI
   Bliese P., 2000, Multilevel, theory, research and methods in organizations, P349
   Boone Jr H.N., 2012, Journal of extension, V50, P48, DOI 10.34068/joe.50.02.48
   Bowen DE, 2004, ACAD MANAGE REV, V29, P203, DOI 10.2307/20159029
   Carifio J, 2008, MED EDUC, V42, P1150, DOI 10.1111/j.1365-2923.2008.03172.x
   Carr JZ, 2003, J APPL PSYCHOL, V88, P605, DOI 10.1037/0021-9010.88.4.605
   Casola V, 2020, J SYST SOFTWARE, V163, DOI 10.1016/j.jss.2020.110537
   Cavoukian M., 2013, Privacy and Security by Design: AnEnterprise Architecture Approach
   Christian MS, 2009, J APPL PSYCHOL, V94, P1103, DOI 10.1037/a0016172
   Clarke S, 2006, J OCCUP HEALTH PSYCH, V11, P315, DOI 10.1037/1076-8998.11.4.315
   Clason D.L., 1994, Journal of Agricultural Education, V35, P31, DOI [10.5032/jae.1994.04031, DOI 10.5032/JAE.1994.04031]
   Clinebell S., 1984, Proceedings of the 27th annual conference of the Midwest Academy of Management, P92
   Cohen J., 1988, Statistical power analysis for the behavioral sciences
   DANSEREAU F, 1975, ORGAN BEHAV HUM PERF, V13, P46, DOI 10.1016/0030-5073(75)90005-7
   Department for Digital Culture Media and Sport, Cyber securitybreaches survey 2021
   Dragoni L, 2005, J APPL PSYCHOL, V90, P1084, DOI 10.1037/0021-9010.90.6.1084
   Ehrhart MG, 2004, PERS PSYCHOL, V57, P61, DOI 10.1111/j.1744-6570.2004.tb02484.x
   Flin R, 2000, SAFETY SCI, V34, P177, DOI 10.1016/S0925-7535(00)00012-6
   Furnell S, 2014, COMPUT FRAUD SECUR, P12, DOI 10.1016/S1361-3723(14)70491-9
   García-Pérez MA, 2012, FRONT PSYCHOL, V3, DOI 10.3389/fpsyg.2012.00325
   Gerstner CR, 1997, J APPL PSYCHOL, V82, P827, DOI 10.1037/0021-9010.82.6.827
   González-Romá V, 2002, J APPL PSYCHOL, V87, P465, DOI 10.1037//0021-9010.87.3.465
   GRAEN GB, 1995, LEADERSHIP QUART, V6, P219, DOI 10.1016/1048-9843(95)90036-5
   Hadar I, 2018, EMPIR SOFTW ENG, V23, P259, DOI 10.1007/s10664-017-9517-1
   Harpe SE, 2015, CURR PHARM TEACH LEA, V7, P836, DOI 10.1016/j.cptl.2015.08.001
   Hayes A. F., 2013, Introduction to mediation, moderation, and conditional process analysis: A regression-based approach
   Hinkin TR, 1998, ORGAN RES METHODS, V1, P104, DOI 10.1177/109442819800100106
   Hofmann DA, 2003, J APPL PSYCHOL, V88, P170, DOI 10.1037/0021-9010.88.1.170
   Hong Y, 2013, J APPL PSYCHOL, V98, P237, DOI 10.1037/a0031666
   House R.J., 1993, LEADERSHIP THEORY RE, P81
   Howard MC, 2016, INT J HUM-COMPUT INT, V32, P51, DOI 10.1080/10447318.2015.1087664
   Howard S., 2006, The Security Development Lifecycle
   Howell JM, 2005, ACAD MANAGE REV, V30, P96, DOI [10.2307/20159097, 10.5465/AMR.2005.15281435]
   Hudson S, 2016, INT J RES MARK, V33, P27, DOI 10.1016/j.ijresmar.2015.06.004
   Johnston AC, 2015, MIS QUART, V39, P113
   Johnston R, 2018, QUAL QUANT, V52, P1957, DOI 10.1007/s11135-017-0584-6
   Joinson AN, 2010, HUM-COMPUT INTERACT, V25, P1, DOI 10.1080/07370020903586662
   Kapp EA, 2012, SAFETY SCI, V50, P1119, DOI 10.1016/j.ssci.2011.11.011
   Karjalainen M, 2019, INFORM SYST RES, V30, P687, DOI 10.1287/isre.2018.0827
   Kessler SR, 2020, HEALTH INFORM J, V26, P461, DOI 10.1177/1460458219832048
   Klauss R., 1982, INTERPERSONAL COMMUN
   KOZLOWSKI SWJ, 1989, J APPL PSYCHOL, V74, P546, DOI 10.1037/0021-9010.74.4.546
   Lacey D., 2009, Managing the Human Factor in Information Security: Howto Win over Staff and Influence Business Managers
   Lance CE, 2006, ORGAN RES METHODS, V9, P202, DOI 10.1177/1094428105284919
   Landau Sabine., 2003, A handbook of statistical analyses using
   Lewis J. R., 1993, International Journal of Human-Computer Interaction, V5, P383, DOI 10.1080/10447319309526075
   Liao H, 2007, J APPL PSYCHOL, V92, P1006, DOI 10.1037/0021-9010.92.4.1006
   LIDEN RC, 1980, ACAD MANAGE J, V23, P451, DOI 10.5465/255511
   Lindell MK, 2000, J APPL PSYCHOL, V85, P331, DOI 10.1037/0021-9010.85.3.331
   London U.K., 2009, Cyberspace, P13
   Luria G, 2008, J SAFETY RES, V39, P273, DOI 10.1016/j.jsr.2007.12.003
   Luria G, 2008, LEADERSHIP QUART, V19, P42, DOI 10.1016/j.leaqua.2007.12.004
   Luria G, 2019, J ORGAN BEHAV, DOI 10.1002/job.2417
   Luria G, 2016, WILEY BLACK HB ORG P, P357
   Luria G, 2014, SAFETY SCI, V70, P288, DOI 10.1016/j.ssci.2014.07.003
   Luria G, 2010, ACCIDENT ANAL PREV, V42, P1288, DOI 10.1016/j.aap.2010.02.006
   Marback A, 2013, SOFTWARE PRACT EXPER, V43, P241, DOI 10.1002/spe.2111
   Mylonas A, 2013, COMPUT SECUR, V34, P47, DOI 10.1016/j.cose.2012.11.004
   Naumann SE, 2000, ACAD MANAGE J, V43, P881, DOI 10.5465/1556416
   Norman G, 2010, ADV HEALTH SCI EDUC, V15, P625, DOI 10.1007/s10459-010-9222-y
   Nulty DD, 2008, ASSESS EVAL HIGH EDU, V33, P301, DOI 10.1080/02602930701293231
   Ögütcü G, 2016, COMPUT SECUR, V56, P83, DOI 10.1016/j.cose.2015.10.002
   Omotosho A, 2019, J APPL SEC RES, V14, P106, DOI 10.1080/19361610.2019.1545278
   OSTROFF C, 1992, PERS PSYCHOL, V45, P849, DOI 10.1111/j.1744-6570.1992.tb00971.x
   Ostroff C, 2002, J APPL PSYCHOL, V87, P355, DOI 10.1037//0021-9010.87.2.355
   Ostroff C., 2003, COMPREHENSIVE HDB PS, V12, P565, DOI [DOI 10.1002/0471264385.WEI1222, 10.1002/9781118133880.hop212024]
   Patterson M, 2004, J OCCUP ORGAN PSYCH, V77, P193, DOI 10.1348/096317904774202144
   Patterson MG, 2005, J ORGAN BEHAV, V26, P379, DOI 10.1002/job.312
   Quinn R.E., 1985, ORG CULTURE, P315, DOI DOI 10.1016/S0065-2113(08)60255-2
   QUINN RE, 1983, MANAGE SCI, V29, P363, DOI 10.1287/mnsc.29.3.363
   Romanou A, 2018, COMPUT LAW SECUR REV, V34, P99, DOI 10.1016/j.clsr.2017.05.021
   ROSSE JG, 1983, J OCCUP PSYCHOL, V56, P63, DOI 10.1111/j.2044-8325.1983.tb00111.x
   Samson A., 2015, Open Journal of Statistics, V5, P754, DOI [DOI 10.4236/OJS.2015.57075, 10.4236/ojs.2015.57075]
   Sauro J, 2012, QUANTIFYING THE USER EXPERIENCE: PRACTICAL STATISTICS FOR USER RESEARCH, P1
   Schinagl S, 2020, INF COMPUT SECUR, V28, P261, DOI 10.1108/ICS-02-2019-0033
   SCHNEIDER B, 1975, PERS PSYCHOL, V28, P447, DOI 10.1111/j.1744-6570.1975.tb01386.x
   Schneider B., 2011, APA Handbook of industrial and organizational psychology, V1, P373, DOI DOI 10.1037/12169-012
   Schneider B., 2000, PSYCHOL LIFE ORG
   Schneider B., 2000, HDB ORG CULTURE CLIM, P21
   Schneider B, 2017, J APPL PSYCHOL, V102, P468, DOI 10.1037/apl0000090
   Schneider B, 2013, ANNU REV PSYCHOL, V64, P361, DOI 10.1146/annurev-psych-113011-143809
   Schulte M, 2006, J OCCUP ORGAN PSYCH, V79, P645, DOI 10.1348/096317905X72119
   Schyns B, 2010, EUR J WORK ORGAN PSY, V19, P1, DOI 10.1080/13594320903024922
   Senarath A., 2018, P 22 INT C EV ASS SO, P211, DOI DOI 10.1145/3210459.3210484
   Shanker R, 2017, J VOCAT BEHAV, V100, P67, DOI 10.1016/j.jvb.2017.02.004
   Spiekermann S, 2019, P IEEE, V107, P600, DOI 10.1109/JPROC.2018.2866769
   Spiekermann S, 2009, IEEE T SOFTWARE ENG, V35, P67, DOI 10.1109/TSE.2008.88
   Steinbart PJ, 2018, ACCOUNT ORG SOC, V71, P15, DOI 10.1016/j.aos.2018.04.005
   Stoverink AC, 2014, J APPL PSYCHOL, V99, P1059, DOI 10.1037/a0037915
   Svyantek DJ., 2004, COMPREHENSIVE HDB PS, V4, P507
   Swiderski W., 2004, Threat Modeling
   Tanujaya B, 2022, FWU J SOC SCI, V16, P89, DOI 10.51709/19951272/Winter2022/7
   Thompson N, 2015, GOV INFORM Q, V32, P316, DOI 10.1016/j.giq.2015.05.001
   Valentine JC, 2019, 3RD EDITION, P129
   van den Berghe A, 2017, SOFTW SYST MODEL, V16, P809, DOI 10.1007/s10270-015-0486-9
   Verbeke W, 1998, J MANAGE STUD, V35, P303, DOI 10.1111/1467-6486.00095
   Walumbwa FO, 2010, J APPL PSYCHOL, V95, P517, DOI 10.1037/a0018867
   Weinberg S.L., 2002, DATA ANAL BEHAV SCI
   Willits F.K., 2016, J. Rural Soc. Sci, V31, P6
   Wu C.-H., 2007, Appl. Math. Sci., V1, P2851
   Zohar D, 2005, J APPL PSYCHOL, V90, P616, DOI 10.1037/0021-9010.90.4.616
   Zohar D, 2004, J APPL PSYCHOL, V89, P322, DOI 10.1037/0021-9010.89.2.322
   Zohar D, 2002, J APPL PSYCHOL, V87, P156, DOI 10.1037//0021-9010.87.1.156
   Zohar D, 2003, J SAFETY RES, V34, P567, DOI 10.1016/j.jsr.2003.05.006
   Zohar D, 2000, J APPL PSYCHOL, V85, P587, DOI 10.1037//0021-9010.85.4.587
   Zohar D., 2003, HDB OCCUPATIONAL HLT, VSecond, P123, DOI [10.1037/10474-006, DOI 10.1037/10474-000]
   Zohar D, 2008, J APPL PSYCHOL, V93, P744, DOI 10.1037/0021-9010.93.4.744
   Zohar D, 2014, J APPL PSYCHOL, V99, P113, DOI 10.1037/a0034096
   Zohar D, 2010, APPL PSYCHOL-INT REV, V59, P647, DOI 10.1111/j.1464-0597.2010.00421.x
   Zohar D, 2010, ACCIDENT ANAL PREV, V42, P1517, DOI 10.1016/j.aap.2009.12.019
NR 123
TC 0
Z9 0
U1 0
U2 0
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAY
PY 2024
VL 50
IS 5
BP 1065
EP 1079
DI 10.1109/TSE.2024.3374114
PG 15
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA QX5T5
UT WOS:001224187300010
DA 2024-08-05
ER

PT J
AU Veizaga, A
   Shin, SY
   Briand, LC
AF Veizaga, Alvaro
   Shin, Seung Yeob
   Briand, Lionel C.
TI Automated Smell Detection and Recommendation in Natural Language
   Requirements
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Requirement smells; requirement quality; smell detection and
   recommendation; natural language processing; and controlled natural
   language
ID COMPLETENESS; QUALITY
AB Requirement specifications are typically written in natural language (NL) due to its usability across multiple domains and understandability by all stakeholders. However, unstructured NL is prone to quality problems (e.g., ambiguity) when writing requirements, which can result in project failures. To address this issue, we present a tool, named Paska, that takes as input any NL requirements, automatically detects quality problems as smells in the requirements, and offers recommendations to improve their quality. Our approach relies on natural language processing (NLP) techniques and a state-of-the-art controlled natural language (CNL) for requirements (Rimay), to detect smells and suggest recommendations using patterns defined in Rimay to improve requirement quality. We evaluated Paska through an industrial case study in the financial domain involving 13 systems and 2725 annotated requirements. The results show that our tool is accurate in detecting smells (89% precision and recall) and suggesting appropriate Rimay pattern recommendations (96% precision and 94% recall).
C1 [Veizaga, Alvaro; Shin, Seung Yeob] Univ Luxembourg, Interdisciplinary Ctr Secur Reliabil & Trust SnT, L-1855 Luxembourg, Luxembourg.
   [Briand, Lionel C.] Univ Limerick, SFI Ctr Software Res, Limerick V94 NYD3, Ireland.
   [Briand, Lionel C.] Univ Ottawa, Sch Elect Engn & Comp Sci, Ottawa, ON K1N 6N5, Canada.
C3 University of Luxembourg; University of Limerick; University of Ottawa
RP Shin, SY (corresponding author), Univ Luxembourg, Interdisciplinary Ctr Secur Reliabil & Trust SnT, L-1855 Luxembourg, Luxembourg.
EM alvaro.veizaga@uni.lu; seungyeob.shin@uni.lu; lionel.briand@lero.ie
RI Shin, Seung Yeob/ACP-8090-2022
OI Shin, Seung Yeob/0000-0001-9025-7173; Briand, Lionel/0000-0002-1393-1010
FU FNR of Luxembourg
FX No Statement Available
CR Ahonen JJ, 2010, J SYST SOFTWARE, V83, P2175, DOI 10.1016/j.jss.2010.06.023
   [Anonymous], ENTERPRISE ARCHITECT
   Arora C, 2019, EMPIR SOFTW ENG, V24, P2509, DOI 10.1007/s10664-019-09693-x
   Arora C, 2015, IEEE T SOFTWARE ENG, V41, P944, DOI 10.1109/TSE.2015.2428709
   Basili Victor R, 1994, Encyclopedia of Software Engineering
   Berry D. M., 2003, Handbook, P1
   COHEN J, 1960, EDUC PSYCHOL MEAS, V20, P37, DOI 10.1177/001316446002000104
   COSTELLO RJ, 1995, J SYST SOFTWARE, V29, P39, DOI 10.1016/0164-1212(94)00127-9
   Dalpiaz F, 2018, LECT NOTES COMPUT SC, V10753, P119, DOI 10.1007/978-3-319-77243-1_8
   Denger C, 2005, ENGINEERING AND MANAGING SOFTWARE REQUIREMENTS, P163, DOI 10.1007/3-540-28244-0_8
   Eckhardt J, 2016, INT REQUIR ENG CONF, P46, DOI 10.1109/RE.2016.24
   Explosion, 2021, spaCy: Industrial-strength natural language processing in Python
   Ezzini S, 2022, PROC INT CONF SOFTW, P187, DOI 10.1145/3510003.3510157
   Ezzini S, 2021, PROC INT CONF SOFTW, P1485, DOI 10.1109/ICSE43902.2021.00133
   Femmer H., 2014, PROC 1 INT WORKSHOP, P10
   Femmer H, 2017, J SYST SOFTWARE, V123, P190, DOI 10.1016/j.jss.2016.02.047
   Fernández DM, 2017, EMPIR SOFTW ENG, V22, P2298, DOI 10.1007/s10664-016-9451-7
   Ferrari Alessio, 2014, Requirements Engineering: Foundation for Software Quality. 20th International Working Conference, REFSQ 2014. Proceedings: LNCS 8396, P23, DOI 10.1007/978-3-319-05843-6_3
   Ferrari A, 2018, EMPIR SOFTW ENG, V23, P3684, DOI 10.1007/s10664-018-9596-7
   Gardner M, 2018, NLP OPEN SOURCE SOFTWARE (NLP-OSS), P1
   Génova G, 2013, REQUIR ENG, V18, P25, DOI 10.1007/s00766-011-0134-z
   Glaser B. G., 1967, The Discovery of Grounded Theory: Strategies for Qualitative Research
   Hull E, 2011, REQUIREMENTS ENGINEERING, THIRD EDITION, P1, DOI 10.1007/978-1-84996-405-0
   Joshi M, 2020, T ASSOC COMPUT LING, V8, P64, DOI 10.1162/tacl_a_00300
   Kaiya H, 2005, QSIC 2005: FIFTH INTERNATIONAL CONFERENCE ON QUALITY SOFTWARE, PROCEEDINGS, P223
   Kassab M, 2014, INNOV SYST SOFTW ENG, V10, P235, DOI 10.1007/s11334-014-0232-4
   Kiyavitskaya N, 2008, REQUIR ENG, V13, P207, DOI 10.1007/s00766-008-0063-7
   Levy R., 2006, P 5 INT C LANGUAGE R, P2231
   Mavin A., 2010, Proceedings of the 2010 IEEE 18th International Conference on Requirements Engineering (RE2010), P277, DOI 10.1109/RE.2010.39
   Mavin A, 2016, INT REQUIR ENG CONF, P276, DOI 10.1109/RE.2016.38
   Mavin A, 2009, PROCEEDINGS OF THE 2009 17TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, P317, DOI 10.1109/RE.2009.9
   Montgomery L, 2022, REQUIR ENG, V27, P183, DOI 10.1007/s00766-021-00367-z
   Mu FW, 2020, INT REQUIR ENG CONF, P400, DOI 10.1109/RE48521.2020.00056
   OMG, 2017, Unified Modeling Language
   Osama M, 2020, PROC IEEE INT CONF S, P651, DOI 10.1109/ICSME46990.2020.00067
   Pohl K, 2010, REQUIREMENTS ENGINEERING: FUNDAMENTALS, PRINCIPLES, AND TECHNIQUES, P1, DOI 10.1007/978-3-642-12578-2
   Pohl K., 2011, Requirements Engineering Fundamentals, V1st
   Runeson P., 2012, Case Study Research in Software Engineering: Guidelines and Examples
   Seki Y, 2019, INT REQUIR ENG CONF, P98, DOI 10.1109/RE.2019.00021
   Shi L, 2017, IEEE INT CONF AUTOM, P440, DOI 10.1109/ASE.2017.8115656
   Sleimi A, 2020, INT REQUIR ENG CONF, P158, DOI 10.1109/RE48521.2020.00027
   Sommerville I., 2011, Software engineering, V9th ed.
   Toutanova K, 2003, HLT-NAACL 2003: HUMAN LANGUAGE TECHNOLOGY CONFERENCE OF THE NORTH AMERICAN CHAPTER OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, PROCEEDINGS OF THE MAIN CONFERENCE, P252, DOI 10.3115/1073445.1073478
   Veizaga A., 2024, IEEE Trans. Softw. Eng.
   Veizaga A., 2020, PROC ACMIEEE 23 INT, P218
   Veizaga A, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-021-09956-6
   Yang H, 2011, REQUIR ENG, V16, P163, DOI 10.1007/s00766-011-0119-y
   Zowghi D, 2003, INFORM SOFTWARE TECH, V45, P993, DOI 10.1016/S0950-5849(03)00100-9
NR 48
TC 0
Z9 0
U1 1
U2 1
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD APR
PY 2024
VL 50
IS 4
BP 695
EP 720
DI 10.1109/TSE.2024.3361033
PG 26
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA OC2K3
UT WOS:001204993400006
OA Green Submitted, hybrid
DA 2024-08-05
ER

PT J
AU Wen, XC
   Gao, CY
   Ye, JX
   Li, YC
   Tian, ZH
   Jia, Y
   Wang, X
AF Wen, Xin-Cheng
   Gao, Cuiyun
   Ye, Jiaxin
   Li, Yichen
   Tian, Zhihong
   Jia, Yan
   Wang, Xuan
TI Meta-Path Based Attentional Graph Learning Model for Vulnerability
   Detection
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Software vulnerability; deep learning; graph neural network
ID NETWORKS; CODE
AB In recent years, deep learning (DL)-based methods have been widely used in code vulnerability detection. The DL-based methods typically extract structural information from source code, e.g., code structure graph, and adopt neural networks such as Graph Neural Networks (GNNs) to learn the graph representations. However, these methods fail to consider the heterogeneous relations in the code structure graph, i.e., the heterogeneous relations mean that the different types of edges connect different types of nodes in the graph, which may obstruct the graph representation learning. Besides, these methods are limited in capturing long-range dependencies due to the deep levels in the code structure graph. In this paper, we propose a Meta-path based Attentional Graph learning model for code vulNErability deTection, called MAGNET. MAGNET constructs a multi-granularity meta-path graph for each code snippet, in which the heterogeneous relations are denoted as meta-paths to represent the structural information. A meta-path based hierarchical attentional graph neural network is also proposed to capture the relations between distant nodes in the graph. We evaluate MAGNET on three public datasets and the results show that MAGNET outperforms the best baseline method in terms of F1 score by 6.32%, 21.50%, and 25.40%, respectively. MAGNET also achieves the best performance among all the baseline methods in detecting Top-25 most dangerous Common Weakness Enumerations (CWEs), further demonstrating its effectiveness in vulnerability detection.
C1 [Wen, Xin-Cheng; Gao, Cuiyun; Wang, Xuan] Harbin Inst Technol, Shenzhen 518055, Peoples R China.
   [Gao, Cuiyun; Wang, Xuan] Guangdong Key Lab New Secur & Intelligence Technol, Shenzhen 518055, Peoples R China.
   [Ye, Jiaxin] Fudan Univ, Shanghai 200433, Peoples R China.
   [Li, Yichen] Chinese Univ Hong Kong, Hong Kong 999077, Peoples R China.
   [Tian, Zhihong] Guangzhou Univ, Guangzhou 510006, Peoples R China.
   [Jia, Yan] Peng Cheng Lab, Shenzhen 518055, Peoples R China.
C3 Harbin Institute of Technology; Fudan University; Chinese University of
   Hong Kong; Guangzhou University; Peng Cheng Laboratory
RP Gao, CY (corresponding author), Harbin Inst Technol, Shenzhen 518055, Peoples R China.
EM xiamenwxc@foxmail.com; gaocuiyun@hit.edu.cn; jxye22@m.fudan.edu.cn;
   ycli21@cse.cuhk.edu.hk; tianzhihong@gzhu.edu.cn; jiayan2020@hit.edu.cn;
   wangxuan@cs.hitsz.edu.cn
OI tian, zhihong/0000-0002-9409-5359; Wen, Xin-Cheng/0000-0002-2115-9921
FU National Key R#x0026;D Program of China
FX No Statement Available
CR Allamanis Miltiadis, 2018, P INT C LEARNING REP
   Alon U., 2021, PROC 9 INT C LEARN R
   Alon U., 2019, P 7 INT C LEARNING R
   [Anonymous], CWE-839: Numeric range comparison without minimum check
   [Anonymous], Common Weakness Enumeration
   [Anonymous], 2021 CWE Top 25 Most Dangerous Software Weaknesses
   [Anonymous], CWE-287: Improper authentication
   [Anonymous], Priority one report
   [Anonymous], 2015, P C EMP METH NAT LAN, DOI [10.18653/v1/D15-1167, DOI 10.18653/V1/D15-1167]
   [Anonymous], CWE 20 IMPROPER INPU
   [Anonymous], Log4shell
   [Anonymous], 2006, CWE 119 IMPROPER RES
   [Anonymous], CWE-476: NULL Pointer Dereference
   Bahdanau D, 2016, Arxiv, DOI arXiv:1409.0473
   Cao SC, 2022, PROC INT CONF SOFTW, P1456, DOI 10.1145/3510003.3510219
   Chakraborty S, 2022, IEEE T SOFTWARE ENG, V48, P3280, DOI 10.1109/TSE.2021.3087402
   Cheng X, 2019, IEEE INT C ENG COMP, P41, DOI 10.1109/ICECCS.2019.00012
   Church KW, 2017, NAT LANG ENG, V23, P155, DOI 10.1017/S1351324916000334
   Cummins Chris, 2021, P MACHINE LEARNING R, V139, P2244
   De Boer PT, 2005, ANN OPER RES, V134, P19, DOI 10.1007/s10479-005-5724-z
   Ding YRB, 2022, EUR CON SFTWR MTNCE, P959, DOI 10.1109/SANER53432.2022.00114
   Fan JH, 2020, IEEE WORK CONF MIN S, P508, DOI 10.1145/3379597.3387501
   Feng ZY, 2020, FINDINGS OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, EMNLP 2020, P1536
   Fu M, 2022, IEEE WORK CONF MIN S, P608, DOI 10.1145/3524842.3528452
   Ghaffarian SM, 2017, ACM COMPUT SURV, V50, DOI 10.1145/3092566
   Graves A, 2005, NEURAL NETWORKS, V18, P602, DOI 10.1016/j.neunet.2005.06.042
   Guo D., 2021, PROC 9 INT C LEARN R
   He KM, 2016, LECT NOTES COMPUT SC, V9908, P630, DOI 10.1007/978-3-319-46493-0_38
   Hin D, 2022, IEEE WORK CONF MIN S, P596, DOI 10.1145/3524842.3527949
   Hua W, 2021, IEEE T RELIAB, V70, P304, DOI 10.1109/TR.2020.3001918
   Huo X, 2020, AAAI CONF ARTIF INTE, V34, P4223
   Johnson A., 2011, NIST Special Publication
   Kamiya T, 2002, IEEE T SOFTWARE ENG, V28, P654, DOI 10.1109/TSE.2002.1019480
   Kim Yoon, 2014, EMNLP, P1746, DOI 10.3115/v1/D14-1181
   Kipf T.N., 2017, INT C LEARN REPR, P1
   LANDIN PJ, 1964, COMPUT J, V6, P308, DOI 10.1093/comjnl/6.4.308
   Li QM, 2018, AAAI CONF ARTIF INTE, P3538
   Li Y, 2021, PROCEEDINGS OF THE 29TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '21), P292, DOI 10.1145/3468264.3468597
   Li Y, 2019, P ACM PROGRAM LANG, V3, DOI 10.1145/3360588
   Li Yujia, 2015, ARXIV151105493
   Li Z, 2022, IEEE T DEPEND SECURE, V19, P2244, DOI 10.1109/TDSC.2021.3051525
   Li Z, 2018, Arxiv, DOI arXiv:1801.01681
   Liu F, 2021, PROCEEDINGS OF THE WORLD WIDE WEB CONFERENCE 2021 (WWW 2021), P1296, DOI 10.1145/3442381.3449986
   Lü JH, 2004, IEEE T CIRCUITS-I, V51, P787, DOI 10.1109/TCSI.2004.823672
   Mao CZ, 2019, ADV NEUR IN, V32
   Neamtiu J. F. I., 2005, ACM SIGSOFT Software Engineering Notes, V30, P1, DOI DOI 10.1145/1082983.1083143
   Neuhaus S, 2007, CCS'07: PROCEEDINGS OF THE 14TH ACM CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P529
   Nguyen V, 2021, IEEE IJCNN, DOI 10.1109/IJCNN52387.2021.9533907
   Ning WT, 2022, PROCEEDINGS OF THE 31ST ACM INTERNATIONAL CONFERENCE ON INFORMATION AND KNOWLEDGE MANAGEMENT, CIKM 2022, P1563, DOI 10.1145/3511808.3557244
   Paszke A, 2019, ADV NEUR IN, V32
   Rabin MRI, 2021, INFORM SOFTWARE TECH, V135, DOI 10.1016/j.infsof.2021.106552
   Russell RL, 2018, 2018 17TH IEEE INTERNATIONAL CONFERENCE ON MACHINE LEARNING AND APPLICATIONS (ICMLA), P757, DOI 10.1109/ICMLA.2018.00120
   Scandariato R, 2014, IEEE T SOFTWARE ENG, V40, P993, DOI 10.1109/TSE.2014.2340398
   Shin Y, 2011, IEEE T SOFTWARE ENG, V37, P772, DOI 10.1109/TSE.2010.81
   Siow JK, 2022, EUR CON SFTWR MTNCE, P554, DOI 10.1109/SANER53432.2022.00073
   Sun LN, 2021, IEEE T CIRC SYST VID, V31, P4321, DOI 10.1109/TCSVT.2021.3054471
   Sunt YZ, 2011, PROC VLDB ENDOW, V4, P992
   Tan QF, 2022, IEEE ACM T NETWORK, V30, P2574, DOI 10.1109/TNET.2022.3174003
   van der Maaten L, 2008, J MACH LEARN RES, V9, P2579
   Veličkovic P, 2018, Arxiv, DOI arXiv:1710.10903
   Wang CG, 2018, DATA MIN KNOWL DISC, V32, P1735, DOI 10.1007/s10618-018-0581-y
   Wang HT, 2021, IEEE T INF FOREN SEC, V16, P1943, DOI 10.1109/TIFS.2020.3044773
   Wang WH, 2020, PROCEEDINGS OF THE 2020 IEEE 27TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER '20), P261, DOI [10.1109/saner48275.2020.9054857, 10.1109/SANER48275.2020.9054857]
   Wang X, 2022, INT C PROGRAM COMPRE, P354, DOI 10.1145/3524610.3527896
   Wei Y, 2021, J SOFTW-EVOL PROC, V33, DOI 10.1002/smr.2376
   [文敏 Wen Min], 2022, [计算机应用, Journal of Computer Applications], V42, P1814
   Woo SH, 2018, LECT NOTES COMPUT SC, V11211, P3, DOI 10.1007/978-3-030-01234-2_1
   Wu YM, 2022, PROC INT CONF SOFTW, P2365, DOI 10.1145/3510003.3510229
   Wu YM, 2020, IEEE INT CONF AUTOM, P821, DOI 10.1145/3324884.3416562
   Xiong Y, 2021, IEEE T KNOWL DATA EN, V33, P1960, DOI 10.1109/TKDE.2019.2947458
   Yamaguchi F, 2014, P IEEE S SECUR PRIV, P590, DOI 10.1109/SP.2014.44
   Zhang HZ, 2020, AAAI CONF ARTIF INTE, V34, P1169
   Zhang ZJ, 2018, 2018 IEEE/ACM 26TH INTERNATIONAL SYMPOSIUM ON QUALITY OF SERVICE (IWQOS), DOI 10.1109/IWQoS.2018.8624183
   Zhou Yaqin, 2019, Proceedings of the Advances in Neural Information Processing Systems, P10197
   Zhu DH, 2021, J COMPUT SCI TECH-CH, V36, P1420, DOI 10.1007/s11390-020-0142-x
   Zhu R, 2019, PROC VLDB ENDOW, V12, P2094, DOI 10.14778/3352063.3352127
NR 76
TC 1
Z9 1
U1 15
U2 15
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAR
PY 2024
VL 50
IS 3
BP 360
EP 375
DI 10.1109/TSE.2023.3340267
PG 16
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA LQ6H5
UT WOS:001188302300009
OA Green Submitted
DA 2024-08-05
ER

PT J
AU Coppola, R
   Fulcini, T
   Ardito, L
   Torchiano, M
   Alegroth, E
AF Coppola, Riccardo
   Fulcini, Tommaso
   Ardito, Luca
   Torchiano, Marco
   Alegroth, Emil
TI On Effectiveness and Efficiency of Gamified Exploratory GUI Testing
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Software testing; web application testing; gamification
AB Context: Gamification appears to improve enjoyment and quality of execution of software engineering activities, including software testing. Though commonly employed in industry, manual exploratory testing of web application GUIs was proven to be mundane and expensive. Gamification applied to that kind of testing activity has the potential to overcome its limitations, though no empirical research has explored this area yet. Goal: Collect preliminary insights on how gamification, when performed by novice testers, affects the effectiveness, efficiency, test case realism, and user experience in exploratory testing of web applications. Method: Common gamification features augment an existing exploratory testing tool: Final Score with Leaderboard, Injected Bugs, Progress Bar, and Exploration Highlights. The original tool and the gamified version are then compared in an experiment involving 144 participants. User experience is elicited using the Technology Acceptance Model (TAM) questionnaire instrument. Results: Statistical analysis identified several significant differences for metrics that represent the effectiveness and efficiency of tests showing an improvement in coverage when they were developed with gamification. Additionally, user experience is improved with gamification. Conclusions: Gamification of exploratory testing has a tangible effect on how testers create test cases for web applications. While the results are mixed, the effects are most beneficial and interesting and warrant more research in the future. Further research shall be aimed at confirming the presented results in the context of state-of-the-art testing tools and real-world development environments.
C1 [Coppola, Riccardo; Fulcini, Tommaso; Ardito, Luca; Torchiano, Marco] Polytech Univ Turin, Dept Control & Comp Engn, I-10129 Turin, Italy.
   [Alegroth, Emil] Blekinge Inst Technol, SE-37179 Karlskrona, Sweden.
C3 Polytechnic University of Turin; Blekinge Institute Technology
RP Ardito, L (corresponding author), Polytech Univ Turin, Dept Control & Comp Engn, I-10129 Turin, Italy.
EM luca.ardito@polito.it; emil.alegroth@bth.se
OI Alegroth, Emil/0000-0001-7526-3727; FULCINI,
   TOMMASO/0000-0001-8765-6501; ARDITO, LUCA/0000-0002-0501-7886;
   Torchiano, Marco/0000-0001-5328-368X
FU Ministero dell#x2019;Universit#x00E0; e della Ricerca
FX No Statement Available
CR Alegroth E., 2015, PROC IEEE 8 INT C SO, P1
   [Anonymous], 2005, ISO 9001:2005
   Basili Victor R, 1994, Encyclopedia of Software Engineering
   BLAND JM, 1995, BRIT MED J, V310, P170, DOI 10.1136/bmj.310.6973.170
   Borjesson E., 2012, 2012 IEEE Fifth International Conference on Software Testing, Verification and Validation (ICST 2012), P475, DOI 10.1109/ICST.2012.129
   Borjesson E., 2012, 2012 IEEE Fifth International Conference on Software Testing, Verification and Validation (ICST 2012), P350, DOI 10.1109/ICST.2012.115
   Bryer Jason, 2016, CRAN
   Cacciotto F, 2021, IEEE ICST WORKSHOP, P126, DOI 10.1109/ICSTW52544.2021.00032
   Chen M., 2020, CHICONF HUMAN FACTOR, P1
   Chou Y.-K., 2019, ACTIONABLE GAMIFICAT
   Coppola R, 2022, INFORM SOFTWARE TECH, V152, DOI 10.1016/j.infsof.2022.107062
   de Winter J., 2013, PRACTICAL ASSESSMENT, V18, P10
   Elbaum S, 2007, PROC INT CONF SOFTW, P688
   Fraser G, 2019, SIGCSE '19: PROCEEDINGS OF THE 50TH ACM TECHNICAL SYMPOSIUM ON COMPUTER SCIENCE EDUCATION, P571, DOI 10.1145/3287324.3287471
   Fraser G, 2017, 2017 IEEE/ACM 12TH INTERNATIONAL WORKSHOP ON AUTOMATION OF SOFTWARE TESTING (AST), P2, DOI 10.1109/AST.2017.20
   Gardner C., 2004, P 37 HAWAII INT C SY, DOI 10.1109/hicss.2004.1265623
   Gupta Atul, 2008, International Journal on Software Tools for Technology Transfer, V10, P145, DOI 10.1007/s10009-007-0059-5
   Itkonen J, 2005, 2005 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING (ISESE), PROCEEDINGS, P82, DOI 10.1109/ISESE.2005.1541817
   Itkonen J, 2013, IEEE T SOFTWARE ENG, V39, P707, DOI 10.1109/TSE.2012.55
   Jedlitschka A, 2005, 2005 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING (ISESE), PROCEEDINGS, P92, DOI 10.1109/ISESE.2005.1541818
   JORDAN PC, 1986, ACAD MANAGE J, V29, P405, DOI 10.5465/256195
   Laurent T, 2017, IEEE ICST WORKSHOP, P382
   Lee C. -I., 2016, Art Des. Rev, V5, P26
   Lee Y., 2003, Communications of the AIS, V12, DOI [DOI 10.17705/1CAIS.01250, 10.17705/1cais.01250]
   Lewis JR, 2019, J USABILITY STUD, V14, P224
   Liechti O, 2017, 2017 IEEE/ACM 12TH INTERNATIONAL WORKSHOP ON AUTOMATION OF SOFTWARE TESTING (AST), P9, DOI 10.1109/AST.2017.3
   Long ZY, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P1498, DOI 10.1145/3368089.3417069
   Lorey T, 2022, STORM: A model for sustainably onboarding software testers
   Mäntylä MV, 2016, LECT NOTES COMPUT SC, V10027, P611, DOI 10.1007/978-3-319-49094-6_46
   Mockus A, 2009, INT SYMP EMP SOFTWAR, P292
   Namin AS, 2009, ISSTA 2009: INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P57
   Nass M, 2019, IEEE ICST WORKSHOP, P176, DOI 10.1109/ICSTW.2019.00048
   Oliveira R. A., 2015, PROC IEEE 8 INT C SO, P1
   Parizi RM, 2016, 2016 IEEE/ACIS 14TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING RESEARCH, MANAGEMENT AND APPLICATIONS (SERA), P193, DOI 10.1109/SERA.2016.7516146
   Pastore F, 2013, 2013 IEEE SIXTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST 2013), P342, DOI 10.1109/ICST.2013.13
   Pedreira O, 2015, INFORM SOFTWARE TECH, V57, P157, DOI 10.1016/j.infsof.2014.08.007
   Perneger TV, 1998, BRIT MED J, V316, P1236, DOI 10.1136/bmj.316.7139.1236
   Pinto Ferraz Fabbri Sandra Camargo, 2018, P 3 BRAZ S SYST AUT, P39, DOI DOI 10.1145/3266003.3266007
   Porto DD, 2021, J SYST SOFTWARE, V173, DOI 10.1016/j.jss.2020.110870
   R Core Team, 2023, A language and environment for statistical computing
   Ralph P, 2021, Arxiv, DOI arXiv:2010.03525
   Royston P, 1992, Statistics and Computing, V2, P117, DOI [10.1007/BF01891203, DOI 10.1007/BF018912035]
   Stadie O., 2015, PROC 1 INTUITEST WOR, P83
   Stol KJ, 2016, PROC INT CONF SOFTW, P120, DOI 10.1145/2884781.2884833
   Vegas S, 2016, IEEE T SOFTWARE ENG, V42, P120, DOI 10.1109/TSE.2015.2467378
   Wang JJ, 2019, INFORM SOFTWARE TECH, V110, P139, DOI 10.1016/j.infsof.2019.03.003
   Wohlin C., 2012, Experimentation in Software Engineering, DOI [10.1007/978-3-642-29044-2., DOI 10.1007/978-3-642-29044-2]
   Yeh T, 2009, UIST 2009: PROCEEDINGS OF THE 22ND ANNUAL ACM SYMPOSIUM ON USER INTERFACE SOFTWARE AND TECHNOLOGY, P183
NR 48
TC 0
Z9 0
U1 2
U2 2
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD FEB
PY 2024
VL 50
IS 2
BP 322
EP 337
DI 10.1109/TSE.2023.3348036
PG 16
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA IP4I9
UT WOS:001167516600010
DA 2024-08-05
ER

PT J
AU Li, HF
   Tan, T
   Li, Y
   Lu, J
   Meng, HN
   Cao, LQ
   Huang, YH
   Li, L
   Gao, L
   Di, P
   Lin, L
   Cui, CX
AF Li, Haofeng
   Tan, Tian
   Li, Yue
   Lu, Jie
   Meng, Haining
   Cao, Liqing
   Huang, Yongheng
   Li, Lian
   Gao, Lin
   Di, Peng
   Lin, Liang
   Cui, Chenxi
TI Generic Sensitivity: Generics-Guided Context Sensitivity for Pointer
   Analysis
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Sensitivity; Receivers; Java; Resource management; Codes; Software;
   Benchmark testing; Pointer analysis; generic programming; context
   sensitivity
ID TO ANALYSIS; PRECISE
AB Generic programming has found widespread application in object-oriented languages like Java. However, existing context-sensitive pointer analyses fail to leverage the benefits of generic programming. This paper introduces generic sensitivity, a new context customization scheme targeting generics. We design our context customization scheme in such a way that generic instantiation sites, i.e., locations instantiating generic classes/methods with concrete types, are always preserved as key context elements. This is realized by augmenting contexts with a type variable lookup map, which is efficiently generated in a context-sensitive manner throughout the analysis process. We have implemented various variants of generic-sensitive analysis in WALA and conducted extensive experiments to compare it with state-of-the-art approaches, including both traditional and selective context-sensitivity methods. The evaluation results demonstrate that generic sensitivity effectively enhances existing context-sensitivity approaches, striking a new balance between efficiency and precision. For instance, it enables a 1-object-sensitive analysis to achieve overall better precision compared to a 2-object-sensitive analysis, with an average speedup of 12.6 times (up to 62 times).
C1 [Li, Haofeng; Lu, Jie; Meng, Haining; Cao, Liqing; Huang, Yongheng; Li, Lian] Chinese Acad Sci, Inst Comp Technol, SKLP, Beijing 100049, Peoples R China.
   [Tan, Tian; Li, Yue] Nanjing Univ, State Key Lab Novel Software Technol, Nanjing 210093, Peoples R China.
   [Meng, Haining; Cao, Liqing; Huang, Yongheng; Li, Lian] Univ Chinese Acad Sci, Beijing 101408, Peoples R China.
   [Li, Lian] Zhongguancun Lab, Beijing, Peoples R China.
   [Gao, Lin] TianqiSoft Inc, Beijing 100142, Peoples R China.
   [Di, Peng] Ant Grp, Hangzhou 310013, Peoples R China.
   [Lin, Liang; Cui, Chenxi] Alibaba Grp, Beijing 100012, Peoples R China.
C3 Chinese Academy of Sciences; Institute of Computing Technology, CAS;
   Nanjing University; Chinese Academy of Sciences; University of Chinese
   Academy of Sciences, CAS; Zhongguancun Laboratory; Alibaba Group
RP Li, HF; Li, L (corresponding author), Chinese Acad Sci, Inst Comp Technol, SKLP, Beijing 100049, Peoples R China.; Li, L (corresponding author), Univ Chinese Acad Sci, Beijing 101408, Peoples R China.; Li, L (corresponding author), Zhongguancun Lab, Beijing, Peoples R China.
EM lihaofeng@ict.ac.cn; lianli@ict.ac.cn
FU National Key R#x0026;D Program of China
FX No Statement Available
CR Andersen L. O., 1994, Ph.D. Dissertation
   Antoniadis A, 2020, PROCEEDINGS OF THE 41ST ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION (PLDI '20), P794, DOI 10.1145/3385412.3386026
   Arzt S, 2014, ACM SIGPLAN NOTICES, V49, P259, DOI [10.1145/2666356.2594299, 10.1145/2594291.2594299]
   Barbar M, 2021, P ACM PROGRAM LANG, V5, DOI 10.1145/3485547
   Blackburn SM, 2006, ACM SIGPLAN NOTICES, V41, P169, DOI 10.1145/1167515.1167488
   Bravenboer M, 2009, ACM SIGPLAN NOTICES, V44, P243, DOI 10.1145/1639949.1640108
   Chin WN, 2006, ACM SIGPLAN NOTICES, V41, P273, DOI 10.1145/1167515.1167498
   Dyer R, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P779, DOI 10.1145/2568225.2568295
   Fegade P, 2020, PROCEEDINGS OF THE 29TH INTERNATIONAL CONFERENCE ON COMPILER CONSTRUCTION (CC '20), P39, DOI 10.1145/3377555.3377885
   Fratantonio Y, 2016, P IEEE S SECUR PRIV, P377, DOI 10.1109/SP.2016.30
   Fuhrer R, 2005, LECT NOTES COMPUT SC, V3586, P71
   Gordon MI, 2015, 22ND ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2015), DOI 10.14722/ndss.2015.23089
   Grech N, 2017, P ACM PROGRAM LANG, V1, DOI 10.1145/3133926
   Hassanshahi B., 2017, P 6 ACM SIGPLAN INT, P13, DOI DOI 10.1145/3088515.3088519
   He DJ, 2021, 2021 36TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING ASE 2021, P79, DOI 10.1109/ASE51524.2021.9678880
   He DJ, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P267, DOI 10.1109/ASE.2019.00034
   Hind M, 2001, ACM SIGPLAN NOTICES, P54
   Jeon M, 2022, P ACM PROGRAM LANG, V6, DOI 10.1145/3498720
   Jeon M, 2018, P ACM PROGRAM LANG, V2, DOI 10.1145/3276510
   Jeon M, 2020, P ACM PROGRAM LANG, V4, DOI 10.1145/3428247
   Jeon M, 2019, ACM T PROGR LANG SYS, V41, DOI 10.1145/3293607
   Jeong S, 2017, P ACM PROGRAM LANG, V1, DOI 10.1145/3133924
   Kastrinis G, 2013, ACM SIGPLAN NOTICES, V48, P423, DOI 10.1145/2499370.2462191
   Lhoták O, 2006, LECT NOTES COMPUT SC, V3923, P47
   Lhoták O, 2003, LECT NOTES COMPUT SC, V2622, P153
   Lhotak O., 2007, P INT WORKSH LANG CO, P338
   Li H., Generic sensitivity: Customizing context-sensitive pointer analysis for generics
   Li L, 2013, PROCEEDINGS OF THE ACM SIGPLAN INTERNATIONAL SYMPOSIUM ON MEMORY MANAGEMENT (ISMM '13), P85
   Li Lian., 2010, Proceedings of the eighteenth ACM SIGSOFT international symposium on Foundations of software engineering, FSE'10, P317, DOI [10.1145/1882291.1882338, DOI 10.1145/1882291.1882338]
   Li L, 2011, PROCEEDINGS OF THE 8TH INTERNATIONAL SYMPOSIUM ON COMPUTER SCIENCE IN SPORT (IACSS2011), P343
   Li Y, 2020, ACM T PROGR LANG SYS, V42, DOI 10.1145/3381915
   Li Y, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P129, DOI 10.1145/3236024.3236041
   Liu C, 2021, 2021 36TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING ASE 2021, P55, DOI 10.1109/ASE51524.2021.9678891
   Lu JB, 2019, P ACM PROGRAM LANG, V3, DOI 10.1145/3360574
   Lundberg J, 2012, J UNIVERS COMPUT SCI, V18, P2851
   Ma S., 2023, Proc.ACM Program. Lang., V7, DOI [10.1145/3591242.[51]M., DOI 10.1145/3591242.[51]M]
   Milanova A, 2005, ACM T SOFTW ENG METH, V14, P1, DOI 10.1145/1044834.1044835
   Milanova A., 2002, Software Engineering Notes, V27, P1, DOI 10.1145/566171.566174
   Padhye Rohan., 2013, P 2 ACM SIGPLAN INT, P31
   Sharir M., 1981, Program flow analysis. Theory and applications, P189
   Shivers Olin Grigsby, 1991, Control-Flow Analysis of Higher-Order Languages or Taming Lambda
   Shiyi WeiB.G. R., 2015, 29 EUROPEAN C OBJECT, P712, DOI DOI 10.4230/LIPICS.ECOOP.2015.712
   Smaragdakis Y, 2014, ACM SIGPLAN NOTICES, V49, P485, DOI [10.1145/2666356.2594320, 10.1145/2594291.2594320]
   Smaragdakis Y, 2011, POPL 11: PROCEEDINGS OF THE 38TH ANNUAL ACM SIGPLAN-SIGACT SYMPOSIUM ON PRINCIPLES OF PROGRAMMING LANGUAGES, P17, DOI 10.1145/1926385.1926390
   Smaragdakis Yannis, 2015, FOUND TRENDS PROGRAM, V1, P1, DOI DOI 10.1561/2500000014
   Sridharan Manu, 2013, Aliasing in Object-Oriented Programming. Types, Analysis and Verification: LNCS 7850, P196, DOI 10.1007/978-3-642-36946-9_8
   Sui YL, 2014, SOFTWARE PRACT EXPER, V44, P1485, DOI 10.1002/spe.2214
   Tan T, 2023, PROCEEDINGS OF THE 32ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, ISSTA 2023, P1093, DOI 10.1145/3597926.3598120
   Tan T, 2021, P ACM PROGRAM LANG, V5, DOI 10.1145/3485524
   Tan T, 2017, ACM SIGPLAN NOTICES, V52, P278, DOI [10.1145/3140587.3062360, 10.1145/3062341.3062360]
   Tan T, 2016, LECT NOTES COMPUT SC, V9837, P489, DOI 10.1007/978-3-662-53413-7_24
   Tip F, 2011, ACM T PROGR LANG SYS, V33, DOI 10.1145/1961204.1961205
   wala.sourceforge, Wala: T.J. Watson libraries for analysis
   Wang K, 2017, TWENTY-SECOND INTERNATIONAL CONFERENCE ON ARCHITECTURAL SUPPORT FOR PROGRAMMING LANGUAGES AND OPERATING SYSTEMS (ASPLOS XXII), P389, DOI 10.1145/3037697.3037744
   Whaley J, 2004, ACM SIGPLAN NOTICES, V39, P131, DOI 10.1145/996893.996859
   Xiao X., 2011, P INT S SOFTW TEST A, P188
   Yao Li, 2018, Proceedings of the ACM on Human-Computer Interaction, V2, DOI 10.1145/3274377
   Yu HT, 2010, INT SYM CODE GENER, P218
NR 58
TC 0
Z9 0
U1 1
U2 1
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAY
PY 2024
VL 50
IS 5
BP 1144
EP 1162
DI 10.1109/TSE.2024.3377645
PG 19
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA QX5T5
UT WOS:001224187300009
DA 2024-08-05
ER

PT J
AU Dang, XQ
   Li, YH
   Papadakis, M
   Klein, J
   Bissyande, TF
   Le Traon, Y
AF Dang, Xueqi
   Li, Yinghua
   Papadakis, Mike
   Klein, Jacques
   Bissyande, Tegawende F.
   Le Traon, Yves
TI Test Input Prioritization for Machine Learning Classifiers
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Predictive models; Adaptation models; Labeling; Machine learning;
   Testing; Noise measurement; Manuals; Test input prioritization; machine
   learning; mutation analysis; learning to rank; labelling
AB Machine learning has achieved remarkable success across diverse domains. Nevertheless, concerns about interpretability in black-box models, especially within Deep Neural Networks (DNNs), have become pronounced in safety-critical fields like healthcare and finance. Classical machine learning (ML) classifiers, known for their higher interpretability, are preferred in these domains. Similar to DNNs, classical ML classifiers can exhibit bugs that could lead to severe consequences in practice. Test input prioritization has emerged as a promising approach to ensure the quality of an ML system, which prioritizes potentially misclassified tests so that such tests can be identified earlier with limited manual labeling costs. However, when applying to classical ML classifiers, existing DNN test prioritization methods are constrained from three perspectives: 1) Coverage-based methods are inefficient and time-consuming; 2) Mutation-based methods cannot be adapted to classical ML models due to mismatched model mutation rules; 3) Confidence-based methods are restricted to a single dimension when applying to binary ML classifiers, solely depending on the model's prediction probability for one class. To overcome the challenges, we propose MLPrior, a test prioritization approach specifically tailored for classical ML models. MLPrior leverages the characteristics of classical ML classifiers (i.e., interpretable models and carefully engineered attribute features) to prioritize test inputs. The foundational principles are: 1) tests more sensitive to mutations are more likely to be misclassified, and 2) tests closer to the model's decision boundary are more likely to be misclassified. Building on the first concept, we design mutation rules to generate two types of mutation features (i.e., model mutation features and input mutation features) for each test. Drawing from the second notion, MLPrior generates attribute features of each test based on its attribute values, which can indirectly reveal the proximity between the test and the decision boundary. For each test, MLPrior combines all three types of features of it into a final vector. Subsequently, MLPrior employs a pre-trained ranking model to predict the misclassification probability of each test based on its final vector and ranks tests accordingly. We conducted an extensive study to evaluate MLPrior based on 185 subjects, encompassing natural datasets, mixed noisy datasets, and fairness datasets. The results demonstrate that MLPrior outperforms all the compared test prioritization approaches, with an average improvement of 14.74%similar to similar to 66.93% on natural datasets, 18.55%similar to similar to 67.73% on mixed noisy datasets, and 15.34%similar to similar to 62.72% on fairness datasets.
C1 [Dang, Xueqi; Li, Yinghua; Papadakis, Mike; Klein, Jacques; Bissyande, Tegawende F.; Le Traon, Yves] Univ Luxembourg, L-1359 Kirchberg, Luxembourg.
C3 University of Luxembourg
RP Li, YH (corresponding author), Univ Luxembourg, L-1359 Kirchberg, Luxembourg.
EM xueqi.dang@uni.lu; yinghua.li@uni.lu; michail.papadakis@uni.lu;
   jacques.klein@uni.lu; tegawende.bissyande@uni.lu; yves.letraon@uni.lu
RI LE TRAON, Yves/T-2911-2019
OI LI, Yinghua/0000-0003-1390-0393; LE TRAON, Yves/0000-0002-1045-4861;
   Klein, Jacques/0000-0003-4052-475X; Dang, Xueqi/0000-0003-4097-9543;
   Papadakis, Mike/0000-0003-1852-2547; Bissyande, Tegawende
   F./0000-0001-7270-9869
FU Luxembourg National Research Fund AFR PhD
FX No Statement Available
CR Adadi A., 2020, EMBEDDED SYSTEMS ART, P327, DOI [10.1007/978-981-15-0947-631/FIGURES/1, DOI 10.1007/978-981-15-0947-6_31, DOI 10.1007/978-981-15-0947-631/FIGURES/1]
   Aichernig BK, 2015, SOFTW TEST VERIF REL, V25, P716, DOI 10.1002/stvr.1522
   Amann J, 2020, BMC MED INFORM DECIS, V20, DOI 10.1186/s12911-020-01332-6
   Ammann P., 2016, Introduction to Software Testing
   Batmaz Z, 2019, ARTIF INTELL REV, V52, P1, DOI 10.1007/s10462-018-9654-y
   Bhagoji Arjun Nitin, 2018, 2018 52nd Annual Conference on Information Sciences and Systems (CISS), DOI 10.1109/CISS.2018.8362326
   Boughorbel S, 2017, PLOS ONE, V12, DOI 10.1371/journal.pone.0177678
   Breiman L, 2001, MACH LEARN, V45, P5, DOI 10.1023/A:1010933404324
   Breiman L., 2017, Classification and Regression Trees, P216, DOI [10.1201/9781315139470-8, DOI 10.1201/9781315139470-8, DOI 10.1201/9781315139470]
   Byun T, 2019, 2019 IEEE INTERNATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE TESTING (AITEST), P63, DOI 10.1109/AITest.2019.000-6
   Carvalho DV, 2019, ELECTRONICS-SWITZ, V8, DOI 10.3390/electronics8080832
   Cenggoro TW, 2019, PROCEDIA COMPUT SCI, V157, P313, DOI 10.1016/j.procs.2019.08.172
   Chen CF, 2022, DECIS SUPPORT SYST, V152, DOI 10.1016/j.dss.2021.113647
   Chen JS, 2020, ACM T SOFTW ENG METH, V29, DOI 10.1145/3391613
   Chen JJ, 2021, IEEE T SOFTWARE ENG, V47, P261, DOI 10.1109/TSE.2018.2889771
   Chen PG, 2024, Arxiv, DOI [arXiv:2001.04086, 10.48550/arXiv.2001.04086]
   Chen TQ, 2016, KDD'16: PROCEEDINGS OF THE 22ND ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P785, DOI 10.1145/2939672.2939785
   Chen TY, 2004, LECT NOTES COMPUT SC, V3321, P320
   Chen ZP, 2022, PROCEEDINGS OF THE 30TH ACM JOINT MEETING EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, ESEC/FSE 2022, P1122, DOI 10.1145/3540250.3549093
   Dang XQ, 2024, ACM T SOFTW ENG METH, V33, DOI 10.1145/3607191
   Delgado-Pérez P, 2018, IEEE T RELIAB, V67, P1406, DOI 10.1109/TR.2018.2864678
   DEMILLO RA, 1978, COMPUTER, V11, P34, DOI 10.1109/C-M.1978.218136
   Desmond M., 2021, P NEURIPS 2020 COMPE, P156
   Devroey X, 2016, PROC INT CONF SOFTW, P655, DOI 10.1145/2884781.2884821
   Dua D., 2019, UCI Machine Learning Repository
   Elbaum S, 2002, IEEE T SOFTWARE ENG, V28, P159, DOI 10.1109/32.988497
   Engström E, 2010, INFORM SOFTWARE TECH, V52, P14, DOI 10.1016/j.infsof.2009.07.001
   Fan M, 2022, PROC INT CONF SOFTW, P871, DOI 10.1145/3510003.3510137
   Fatima M., 2017, Journal of Intelligent Learning Systems and Applications, V09, P1, DOI DOI 10.4236/JILSA.2017.91001
   Fredriksson T, 2020, ICSOFT: PROCEEDINGS OF THE 15TH INTERNATIONAL CONFERENCE ON SOFTWARE TECHNOLOGIES, P552, DOI 10.5220/0009972705520561
   Fredriksson T, 2020, LECT NOTES COMPUT SC, V12562, P202, DOI 10.1007/978-3-030-64148-1_13
   Friedler SA, 2019, FAT*'19: PROCEEDINGS OF THE 2019 CONFERENCE ON FAIRNESS, ACCOUNTABILITY, AND TRANSPARENCY, P329, DOI 10.1145/3287560.3287589
   Gao XQ, 2022, PROC INT CONF SOFTW, P921, DOI 10.1145/3510003.3510087
   Ghassemi Marzyeh, 2020, AMIA Jt Summits Transl Sci Proc, V2020, P191
   Gilpin LH, 2018, PR INT CONF DATA SC, P80, DOI 10.1109/DSAA.2018.00018
   Grote T, 2020, J MED ETHICS, V46, P205, DOI 10.1136/medethics-2019-105586
   Guo G., 2003, On The Move to Meaningful Internet Systems 2003: CoopIS, DOA, and ODBASE, DOI [10.1007/978-3-540-39964-362, DOI 10.1007/978-3-540-39964-3_62]
   Hancock B., Snorkel
   Hanif MA, 2018, IEEE INT ON LINE, P257, DOI 10.1109/IOLTS.2018.8474192
   He KM, 2016, PROC CVPR IEEE, P770, DOI 10.1109/CVPR.2016.90
   Hemmati H, 2013, ACM T SOFTW ENG METH, V22, DOI 10.1145/2430536.2430540
   Henard C, 2016, PROC INT CONF SOFTW, P523, DOI 10.1145/2884781.2884791
   Hosmer DW, 2013, WILEY SER PROBAB ST, P89
   Hu Q, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P1158, DOI 10.1109/ASE.2019.00126
   Hua J, 2023, PLOS ONE, V18, DOI 10.1371/journal.pone.0284008
   Humbatova N, 2021, ISSTA '21: PROCEEDINGS OF THE 30TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P67, DOI 10.1145/3460319.3464825
   Jahangirova G, 2020, IEEE INT CONF SOFTW, P74, DOI 10.1109/ICST46399.2020.00018
   Jia Y, 2011, IEEE T SOFTWARE ENG, V37, P649, DOI 10.1109/TSE.2010.62
   Jiang B, 2009, IEEE INT CONF AUTOM, P233, DOI 10.1109/ASE.2009.77
   Kamel Hajer, 2019, 2019 International Engineering Conference (IEC). Proceedings, P165, DOI 10.1109/IEC47844.2019.8950650
   Ke GL, 2017, ADV NEUR IN, V30
   Kim B, 2016, ADV NEUR IN, V29
   Kim H., 2006, J HOSPITALITY FINANC, V14, P17, DOI [10.1080/10913211.2006.10653812, DOI 10.1080/10913211.2006.10653812]
   Kim J, 2019, PROC INT CONF SOFTW, P1039, DOI 10.1109/ICSE.2019.00108
   Kiran BR, 2022, IEEE T INTELL TRANSP, V23, P4909, DOI 10.1109/TITS.2021.3054625
   Kohavi R., 1996, KDD-96 Proceedings. Second International Conference on Knowledge Discovery and Data Mining, P202
   Kohavi Ronny, 1996, UCI Machine Learning Repository
   Lewis R J, 2000, PROC ANN M SOC ACAD
   Li Y, 2022, arXiv
   Li YH, 2022, PROC INT CONF SOFTW, P2215, DOI 10.1145/3510003.3510091
   Li YN, 2023, PROCEEDINGS OF THE 32ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, ISSTA 2023, P1207, DOI 10.1145/3597926.3598129
   Li ZN, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P499, DOI 10.1145/3338906.3338930
   Lou YL, 2015, 2015 IEEE 26TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING (ISSRE), P46, DOI 10.1109/ISSRE.2015.7381798
   Ma L, 2018, IEEE INT CONF AUTOM, P120, DOI 10.1145/3238147.3238202
   Ma L, 2018, PROC INT SYMP SOFTW, P100, DOI 10.1109/ISSRE.2018.00021
   Mallat S, 2016, PHILOS T R SOC A, V374, DOI 10.1098/rsta.2015.0203
   Mayr A, 2014, METHOD INFORM MED, V53, P419, DOI 10.3414/ME13-01-0122
   Mehrabi N, 2021, ACM COMPUT SURV, V54, DOI 10.1145/3457607
   Moro S, 2012, UCI Machine Learning Repository
   Mukid MA, 2018, J PHYS CONF SER, V1025, DOI 10.1088/1742-6596/1025/1/012114
   Nguyen QH, 2021, MATH PROBL ENG, V2021, DOI 10.1155/2021/4832864
   Offutt A. J., 1996, ACM Transactions on Software Engineering and Methodology, V5, P99, DOI 10.1145/227607.227610
   Ogunleye A, 2020, IEEE ACM T COMPUT BI, V17, P2131, DOI 10.1109/TCBB.2019.2911071
   Otter DW, 2021, IEEE T NEUR NET LEAR, V32, P604, DOI 10.1109/TNNLS.2020.2979670
   Ozsezer G., 2022, Artif. Intell. Theory Appl, V2, P1
   Papadakis M, 2019, ADV COMPUT, V112, P275, DOI 10.1016/bs.adcom.2018.03.015
   Papadakis M, 2014, 2014 IEEE SEVENTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST), P1, DOI 10.1109/ICST.2014.11
   Pedregosa F, 2011, J MACH LEARN RES, V12, P2825
   Pei KX, 2017, PROCEEDINGS OF THE TWENTY-SIXTH ACM SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES (SOSP '17), P1, DOI 10.1145/3132747.3132785
   Petrovic G, 2018, IEEE ICST WORKSHOP, P47, DOI 10.1109/ICSTW.2018.00027
   Raihan MJ, 2023, SCI REP-UK, V13, DOI 10.1038/s41598-023-33525-0
   Rao CJ, 2023, COMPLEX INTELL SYST, V9, P1391, DOI 10.1007/s40747-022-00854-y
   Rothermel G, 2001, IEEE T SOFTWARE ENG, V27, P929, DOI 10.1109/32.962562
   Rundo F, 2019, APPL SCI-BASEL, V9, DOI 10.3390/app9245574
   Schuler D, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P297, DOI 10.1145/1595696.1595750
   Sewak M, 2018, 2018 19TH IEEE/ACIS INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, ARTIFICIAL INTELLIGENCE, NETWORKING AND PARALLEL/DISTRIBUTED COMPUTING (SNPD), P293, DOI 10.1109/SNPD.2018.8441123
   Shen DG, 2017, ANNU REV BIOMED ENG, V19, P221, DOI [10.1146/annurev-bioeng-071516-044442, 10.1146/annurev-bioeng-071516044442]
   Shin D, 2019, SOFTW TEST VERIF REL, V29, DOI 10.1002/stvr.1695
   Shirazi Z. A., 2020, Computational intelligence and soft computing applications in healthcare management science, P220
   Shwartz-Ziv R, 2022, INFORM FUSION, V81, P84, DOI 10.1016/j.inffus.2021.11.011
   Slack D., 2019, arXiv
   Smith H, 2021, AI SOC, V36, P535, DOI 10.1007/s00146-020-01019-6
   Song Yan-Yan, 2015, Shanghai Arch Psychiatry, V27, P130, DOI 10.11919/j.issn.1002-0829.215044
   Stevens A, 2020, 2020 IEEE SYMPOSIUM SERIES ON COMPUTATIONAL INTELLIGENCE (SSCI), P1241, DOI 10.1109/SSCI47803.2020.9308371
   Suzuki K, 2017, RADIOL PHYS TECHNOL, V10, P257, DOI 10.1007/s12194-017-0406-5
   Tazin T., 2021, J. Healthcare Eng., V2021, P1
   Tian YC, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P303, DOI 10.1145/3180155.3180220
   Tizpaz-Niari S, 2022, PROC INT CONF SOFTW, P909, DOI 10.1145/3510003.3510202
   Tonella P, 2006, PROC IEEE INT CONF S, P123
   Verdicchio Mario, 2022, Philos Technol, V35, P11, DOI 10.1007/s13347-022-00506-6
   Wang Y, 2020, APPL SCI-BASEL, V10, DOI 10.3390/app10093227
   Wang Z, 2021, PROC INT CONF SOFTW, P397, DOI 10.1109/ICSE43902.2021.00046
   Weber P, 2024, MANAG REV Q, V74, P867, DOI 10.1007/s11301-023-00320-0
   Weiss M, 2022, PROCEEDINGS OF THE 31ST ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, ISSTA 2022, P139, DOI 10.1145/3533767.3534375
   Wicker M, 2018, LECT NOTES COMPUT SC, V10805, P408, DOI 10.1007/978-3-319-89960-2_22
   Wolf T, 2020, PROCEEDINGS OF THE 2020 CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING: SYSTEM DEMONSTRATIONS, P38
   Wright R.E., 1995, Logistic regression
   Wu J, 2015, LECT NOTES COMPUT SC, V9314, P473, DOI 10.1007/978-3-319-24075-6_46
   Xie XY, 2011, J SYST SOFTWARE, V84, P544, DOI 10.1016/j.jss.2010.11.920
   Yan H., 2019, Open J. Appl. Sci., V9, P761
   Yang Feng, 2020, ISSTA '20: Proceedings of the 29th ACM SIGSOFT International Symposium on Software Testing and Analysis, P177, DOI 10.1145/3395363.3397357
   Yeo B, 2018, INT J INFORM MANAGE, V38, P288, DOI 10.1016/j.ijinfomgt.2017.10.002
   Yoo S, 2012, SOFTW TEST VERIF REL, V22, P67, DOI [10.1002/stv.430, 10.1002/stvr.430]
   Yoo S, 2009, ISSTA 2009: INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P201
   Yu DP, 2020, THORAC CANCER, V11, P95, DOI 10.1111/1759-7714.13204
   Zeiler MD, 2014, LECT NOTES COMPUT SC, V8689, P818, DOI 10.1007/978-3-319-10590-1_53
   Zeng J., 2019, PROC INT C SOFTW ENG, P379
   Zhang JM, 2022, IEEE T SOFTWARE ENG, V48, P1, DOI 10.1109/TSE.2019.2962027
   Zhang LM, 2009, PROC IEEE INT CONF S, P19, DOI 10.1109/ICSM.2009.5306350
   Zheng HB, 2022, PROC INT CONF SOFTW, P1519, DOI 10.1145/3510003.3510123
NR 120
TC 1
Z9 1
U1 3
U2 3
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAR
PY 2024
VL 50
IS 3
BP 413
EP 442
DI 10.1109/TSE.2024.3350019
PG 30
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA LQ6H5
UT WOS:001188302300007
OA hybrid
DA 2024-08-05
ER

PT J
AU Han, JX
   Zhang, JH
   Lo, D
   Xia, X
   Deng, SG
   Wu, MH
AF Han, Junxiao
   Zhang, Jiahao
   Lo, David
   Xia, Xin
   Deng, Shuiguang
   Wu, Minghui
TI Understanding Newcomers’ Onboarding Process in Deep Learning Projects
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Market research; Deep learning; Documentation; Software development
   management; Libraries; Open source software; Tutorials; Deep learning
   projects; newcomer onboarding; open source software
ID INNOVATION; NEWCOMERS; COMMUNITY; BARRIERS
AB Attracting and retaining newcomers are critical for the sustainable development of Open Source Software (OSS) projects. Considerable efforts have been made to help newcomers identify and overcome barriers in the onboarding process. However, fewer studies focus on newcomers' activities before their successful onboarding. Given the rising popularity of deep learning (DL) techniques, we wonder what the onboarding process of DL newcomers is, and if there exist commonalities or differences in the onboarding process for DL and non-DL newcomers. Therefore, we reported a study to understand the growth trends of DL and non-DL newcomers, mine DL and non-DL newcomers' activities before their successful onboarding (i.e., past activities), and explore the relationships between newcomers' past activities and their first commit patterns and retention rates. By analyzing 20 DL projects with 9,191 contributors and 20 non-DL projects with 9,839 contributors, and conducting email surveys with contributors, we derived the following findings: 1) DL projects have attracted and retained more newcomers than non-DL projects. 2) Compared to non-DL newcomers, DL newcomers encounter more deployment, documentation, and version issues before their successful onboarding. 3) DL newcomers statistically require more time to successfully onboard compared to non-DL newcomers, and DL newcomers with more past activities (e.g., issues, issue comments, and watch) are prone to submit an intensive first commit (i.e., a commit with many source code and documentation files being modified). Based on the findings, we shed light on the onboarding process for DL and non-DL newcomers, highlight future research directions, and provide practical suggestions to newcomers, researchers, and projects.
C1 [Han, Junxiao; Wu, Minghui] Hangzhou City Univ, Sch Comp & Comp Sci, Hangzhou 310015, Peoples R China.
   [Zhang, Jiahao] Alibaba Grp, Hangzhou 311121, Peoples R China.
   [Lo, David] Singapore Management Univ, Sch Comp & Informat Syst, Singapore 188065, Singapore.
   [Xia, Xin] Huawei, Software Engn Applicat Technol Lab, Hangzhou 518129, Peoples R China.
   [Deng, Shuiguang] Zhejiang Univ, Coll Comp Sci & Technol, Hangzhou 310027, Peoples R China.
C3 Hangzhou City University; Alibaba Group; Singapore Management
   University; Huawei Technologies; Zhejiang University
RP Han, JX (corresponding author), Hangzhou City Univ, Sch Comp & Comp Sci, Hangzhou 310015, Peoples R China.
EM hanjx@hzcu.edu.cn; anheng.zjh@alibaba-inc.com; davidlo@smu.edu.sg;
   xin.xia@acm.org; dengsg@zju.edu.cn; mhwu@hzcu.edu.cn
RI Lo, David/A-2493-2012
OI Lo, David/0000-0002-4367-7201; Xia, Xin/0000-0002-6302-3256; Wu,
   Minghui/0000-0001-8179-7119; Han, Junxiao/0000-0001-7630-8667
FU Zhejiang Provincial Natural Science Foundation of China
FX No Statement Available
CR Alstott J, 2014, PLOS ONE, V9, DOI 10.1371/journal.pone.0085777
   [Anonymous], 2002, P INT WORKSH PRINC S
   [Anonymous], 2011, P 19 ACM SIGSOFT S 1
   Balali S, 2020, PROCEEDINGS OF THE 16TH INTERNATIONAL SYMPOSIUM ON OPEN COLLABORATION (OPENSYM), DOI 10.1145/3412569.3412571
   Balali S, 2018, COMPUT SUPP COOP W J, V27, P679, DOI 10.1007/s10606-018-9310-8
   Barcomb A, 2022, IEEE T SOFTWARE ENG, V48, P260, DOI 10.1109/TSE.2020.2985093
   Bland JM, 2004, BRIT MED J, V328, P1073, DOI 10.1136/bmj.328.7447.1073
   Canfora G., 2012, P ACM SIGSOFT 20 INT, P1
   Casalnuovo C, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P817, DOI 10.1145/2786805.2786854
   Chapfuwa Paidamoyo, 2020, CHIL '20: Proceedings of the Conference on Health, Inference, and Learning, P60, DOI 10.1145/3368555.3384465
   Chen ZP, 2021, PROC INT CONF SOFTW, P674, DOI 10.1109/ICSE43902.2021.00068
   Chen ZP, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P750, DOI 10.1145/3368089.3409759
   Clauset A, 2009, SIAM REV, V51, P661, DOI 10.1137/070710111
   CLIFF N, 1993, PSYCHOL BULL, V114, P494, DOI 10.1037/0033-2909.114.3.494
   COHEN J, 1960, EDUC PSYCHOL MEAS, V20, P37, DOI 10.1177/001316446002000104
   COX DR, 1955, BIOMETRIKA, V42, P80, DOI 10.1093/biomet/42.1-2.80
   Dilhara M, 2021, ACM T SOFTW ENG METH, V30, DOI 10.1145/3453478
   Fang YL, 2009, J MANAGE INFORM SYST, V25, P9, DOI 10.2753/MIS0742-1222250401
   Fisher RA, 1922, J R STAT SOC, V85, P87, DOI 10.2307/2340521
   Foundjem A, 2021, PROC INT CONF SOFTW, P1033, DOI 10.1109/ICSE43902.2021.00097
   Golzadeh M, 2021, J SYST SOFTWARE, V175, DOI 10.1016/j.jss.2021.110911
   Han JX, 2021, 2021 IEEE/ACM 43RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE (ICSE-SEIP 2021), P298, DOI 10.1109/ICSE-SEIP52600.2021.00039
   Han JX, 2020, PROC IEEE INT CONF S, P868, DOI 10.1109/ICSME46990.2020.00116
   Hars A, 2002, INT J ELECTRON COMM, V6, P25
   Haryono SA, 2021, PROC IEEE INT CONF S, P137, DOI 10.1109/ICSME52107.2021.00019
   Humbatova N, 2020, PROC INT CONF SOFTW, P1110, DOI 10.1145/3377811.3380395
   Islam MJ, 2020, PROC INT CONF SOFTW, P1135, DOI 10.1145/3377811.3380378
   Islam MJ, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P510, DOI 10.1145/3338906.3338955
   Jenkins S.P., 2005, Unpublished manuscript
   Joblin M, 2017, PROC INT CONF SOFTW, P164, DOI 10.1109/ICSE.2017.23
   Lakhani K R, 2003, WHY HACKERS DO WHAT, DOI DOI 10.2139/SSRN
   LaToza T. D., 2006, 28th International Conference on Software Engineering Proceedings, P492, DOI 10.1145/1134285.1134355
   LeCun Y, 2015, NATURE, V521, P436, DOI 10.1038/nature14539
   Lee A, 2017, INT SYMP EMP SOFTWAR, P1, DOI 10.1109/ESEM.2017.7
   Lee A, 2017, PROC INT CONF SOFTW, P187, DOI 10.1109/ICSE.2017.25
   Linåker J, 2018, J SYST SOFTWARE, V135, P17, DOI 10.1016/j.jss.2017.09.032
   MANN HB, 1947, ANN MATH STAT, V18, P50, DOI 10.1214/aoms/1177730491
   Mendez C, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1004, DOI 10.1145/3180155.3180241
   Nachar N, 2008, TUTOR QUANT METHODS, V4, P13, DOI 10.20982/tqmp.04.1.p013
   Padala HS, 2022, IEEE T SOFTWARE ENG, V48, P241, DOI 10.1109/TSE.2020.2984173
   Panichella S, 2015, PROC IEEE INT CONF S, P586, DOI 10.1109/ICSM.2015.7332519
   Park Y, 2009, IEEE INT WORK VIS SO, P3, DOI 10.1109/VISSOF.2009.5336433
   Pinto G, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P112, DOI 10.1109/SANER.2016.68
   Qiu HS, 2019, PROC INT CONF SOFTW, P688, DOI 10.1109/ICSE.2019.00078
   Quo QY, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P822, DOI 10.1109/ASE.2019.00080
   Rehman I, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-022-10163-0
   Sholler D, 2019, PLOS COMPUT BIOL, V15, DOI 10.1371/journal.pcbi.1007296
   Spadini D, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P908, DOI 10.1145/3236024.3264598
   Steinmacher I., 2012, 2012 Third International Workshop on Recommendation Systems for Software Engineering (RSSE), P63, DOI 10.1109/RSSE.2012.6233413
   Steinmacher I., 2014, P WORKSH GLOB SOFTW
   Steinmacher I, 2019, IEEE SOFTWARE, V36, P41, DOI 10.1109/MS.2018.110162131
   Steinmacher I, 2016, PROC INT CONF SOFTW, P273, DOI 10.1145/2884781.2884806
   Steinmacher I, 2015, PROCEEDINGS OF THE 2015 ACM INTERNATIONAL CONFERENCE ON COMPUTER-SUPPORTED COOPERATIVE WORK AND SOCIAL COMPUTING (CSCW'15), P1379, DOI 10.1145/2675133.2675215
   Steinmacher I, 2015, INFORM SOFTWARE TECH, V59, P67, DOI 10.1016/j.infsof.2014.11.001
   Steinmacher I, 2014, 2014 28TH BRAZILIAN SYMPOSIUM ON SOFTWARE ENGINEERING (SBES 2014), P51, DOI 10.1109/SBES.2014.9
   Steinmacher I, 2013, 2013 6TH INTERNATIONAL WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING (CHASE), P25, DOI 10.1109/CHASE.2013.6614728
   Sungwook L, 2014, COMPUT HUM BEHAV, V30, P344, DOI 10.1016/j.chb.2013.09.015
   Tan X, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P398, DOI 10.1145/3368089.3409746
   Thung F., 2012, Proceedings of the 2012 IEEE 23rd International Symposium on Software Reliability Engineering (ISSRE), P271, DOI 10.1109/ISSRE.2012.22
   Toscani C., 2018, P 17 BRAZ S HUM FACT, P1
   Valiev M, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P644, DOI 10.1145/3236024.3236062
   von Krogh G, 2003, RES POLICY, V32, P1217, DOI 10.1016/S0048-7333(03)00050-7
   Wan ZY, 2021, IEEE T SOFTWARE ENG, V47, P1857, DOI 10.1109/TSE.2019.2937083
   Wang JG, 2011, PROCEEDINGS OF THE 4TH INTERNATIONAL WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING (CHASE'11), P76
   Wang T, 2018, INTERNETWARE'18: PROCEEDINGS OF THE TENTH ASIA-PACIFIC SYMPOSIUM ON INTERNETWARE, DOI 10.1145/3275219.3275223
   Wang ZD, 2020, ACM T SOFTW ENG METH, V29, DOI 10.1145/3387111
   Xiao WX, 2022, PROC INT CONF SOFTW, P1830, DOI 10.1145/3510003.3510196
   Ye YW, 2003, PROC INT CONF SOFTW, P419
   Yin LK, 2021, PROCEEDINGS OF THE 29TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '21), P1056, DOI 10.1145/3468264.3468563
   Yue Y, 2023, IEEE T SOFTWARE ENG, V49, P529, DOI 10.1109/TSE.2022.3156071
   Zhang R, 2020, PROC INT CONF SOFTW, P1159, DOI 10.1145/3377811.3380362
   Zhang YH, 2018, ISSTA'18: PROCEEDINGS OF THE 27TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P129, DOI 10.1145/3213846.3213866
   Zhou M., 2010, P 18 ACM SIGSOFT INT, P137
   Zhou M., 2019, Towards Engineering Free/Libre Open Source Software (FLOSS) Ecosystems for Impact and Sustainability, P107
   Zhou MH, 2015, IEEE T SOFTWARE ENG, V41, P82, DOI 10.1109/TSE.2014.2349496
   Zhou MH, 2012, PROC INT CONF SOFTW, P518, DOI 10.1109/ICSE.2012.6227164
NR 76
TC 0
Z9 0
U1 7
U2 7
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAR
PY 2024
VL 50
IS 3
BP 443
EP 460
DI 10.1109/TSE.2024.3353297
PG 18
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA LQ6H5
UT WOS:001188302300010
DA 2024-08-05
ER

PT J
AU Wei, CQ
   Yao, XJ
   Gong, DW
   Liu, H
AF Wei, Changqing
   Yao, Xiangjuan
   Gong, Dunwei
   Liu, Huai
TI Test Data Generation for Mutation Testing Based on Markov Chain Usage
   Model and Estimation of Distribution Algorithm
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Testing; Markov processes; Estimation; Software algorithms; Genetic
   algorithms; Data models; Costs; Mutation testing; weak mutation; test
   data generation; Markov chain usage model; coverage of extended path;
   estimation of distribution algorithm
AB Mutation testing, a mainstream fault-based software testing technique, can mimic a wide variety of software faults by seeding them into the target program and resulting in the so-called mutants. Test data generated in mutation testing should be able to kill as many mutants as possible, hence guaranteeing a high fault-detection effectiveness of testing. Nevertheless, the test data generation can be very expensive, because mutation testing normally involves an extremely large number of mutants and some mutants are hard to kill. It is thus a critical yet challenging job to find an efficient way to generate a small set of test data that are able to kill multiple mutants at the same time as well as reveal those hard-to-detect faults. In this paper, we propose a new approach for test data generation in mutation testing, through the novel applications of the Markov chain usage model and the estimation of distribution algorithm. We first utilize the Markov chain usage model to reduce the so-called mutant branches in weak mutation testing and generate a minimal set of extended paths. Then, we regard the problem of generating test data as the problem of covering extended paths and use an estimation of distribution algorithm based on probability model to solve the problem. Finally, we develop a framework, TAMMEA, to implement the new approach of generating test data for mutation testing. The empirical studies based on fifteen object programs show that TAMMEA can kill more mutants using fewer test data compared with baseline techniques. In addition, the computation overhead of TAMMEA is lower than that of the baseline technique based on the traditional genetic algorithm, and comparable to that of the random method. It is clear that the new approach improves both the effectiveness and efficiency of mutation testing, thus promoting its practicability.
C1 [Wei, Changqing; Yao, Xiangjuan] China Univ Min & Technol, Sch Math, Xuzhou 221116, Peoples R China.
   [Gong, Dunwei] Qingdao Univ Sci & Technol, Coll Automat & Elect Engn, Qingdao 266061, Shandong, Peoples R China.
   [Liu, Huai] Swinburne Univ Technol, Dept Comp Technol, Melbourne, Vic 3122, Australia.
C3 China University of Mining & Technology; Qingdao University of Science &
   Technology; Swinburne University of Technology
RP Yao, XJ (corresponding author), China Univ Min & Technol, Sch Math, Xuzhou 221116, Peoples R China.
EM 1536113693@qq.com; yaoxj@cumt.edu.cn; dwgong@vip.163.com;
   hliu@swin.edu.au
RI Gong, Dunwei/HDO-3693-2022; Liu, Huai/E-2060-2013
OI Liu, Huai/0000-0003-3125-4399; Gong, Dunwei/0000-0003-2838-4301; Yao,
   Xiangjuan/0000-0003-3207-703X; wei, changqing/0000-0002-2343-6734
FU National Natural Science Foundation of China
FX No Statement Available
CR [Anonymous], 2002, DESIGN INNOVATION
   [Anonymous], 2004, Comput. Appl. Softw.
   [陈翔 Chen Xiang], 2012, [计算机科学与探索, Journal of Frontiers of Computer Science & Technology], V6, P1057
   Dang XY, 2022, IEEE T SOFTWARE ENG, V48, P2141, DOI 10.1109/TSE.2021.3052987
   DEMILLO RA, 1978, COMPUTER, V11, P34, DOI 10.1109/C-M.1978.218136
   DEMILLO RA, 1991, IEEE T SOFTWARE ENG, V17, P900, DOI 10.1109/32.92910
   Du X., 2018, Softw. Eng. Appl., V7, P99
   Du YQ, 2019, 2019 COMPANION OF THE 19TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY AND SECURITY (QRS-C 2019), P522, DOI 10.1109/QRS-C.2019.00105
   Fraser G, 2012, IEEE T SOFTWARE ENG, V38, P278, DOI 10.1109/TSE.2011.93
   Goldberg DE, 1989, GENETIC ALGORITHMS S
   Gong D., 2020, Inf. Softw. Technol., V124, P1
   GREFENSTETTE JJ, 1986, IEEE T SYST MAN CYB, V16, P122, DOI 10.1109/TSMC.1986.289288
   HOWDEN WE, 1982, IEEE T SOFTWARE ENG, V8, P371, DOI 10.1109/TSE.1982.235571
   Hu P., 2008, J. Huaihua Univ., V27
   Just R, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P654, DOI 10.1145/2635868.2635929
   Khan R., 2017, PROC 3 INT C COMPUT, P1
   KOREL B, 1990, IEEE T SOFTWARE ENG, V16, P870, DOI 10.1109/32.57624
   Lakhotia K., 2010, 2010 Proceedings of Second International Symposium on Search Based Software Engineering (SSBSE), P101, DOI 10.1109/SSBSE.2010.21
   Lei Hang, 2011, Journal of University of Electronic Science and Technology of China, V40, P732, DOI 10.3969/j.issn.1001-0548.2011.05.019
   Liu S., 1987, Comput. Eng., V13, P26
   Ma YS, 2005, SOFTW TEST VERIF REL, V15, P97, DOI 10.1002/stvr.308
   Masud M., 2005, PROC CAN C ELECT COM, P1049
   Mathur A. P., 2010, Softw. Testing Verification Rel., V4, P9
   Mishra KK, 2010, INT CONF COMP SCI, P426, DOI 10.1109/ICCSIT.2010.5564072
   Offutt A., 1991, Proceedings of the symposium on Testing, analysis, and verification, P200
   Offutt A.J., 1988, AUTOMATIC TEST DATA
   Offutt AJ, 2001, KLUW INT S ADV DATA, V24, P34
   Offutt AJ, 1999, SOFTWARE PRACT EXPER, V29, P167, DOI 10.1002/(SICI)1097-024X(199902)29:2<167::AID-SPE225>3.0.CO;2-V
   Pacheco C., 2007, PROC COMPANION 22 AN, P1
   Papadakis M, 2012, INFORM SOFTWARE TECH, V54, P915, DOI 10.1016/j.infsof.2012.02.004
   Papadakis M, 2011, SOFTWARE QUAL J, V19, P691, DOI 10.1007/s11219-011-9142-y
   Sen Koushik, 2005, Proc. ESEC/FSE, DOI 10.1145/1081706.1081750
   Shan JH, 2003, J COMPUT SCI TECH-CH, V18, P235, DOI 10.1007/BF02948890
   Shan Jin-Hui, 2008, Chinese Journal of Computers, V31, P1025, DOI 10.3724/SP.J.1016.2008.01025
   Smith BH, 2009, EMPIR SOFTW ENG, V14, P341, DOI 10.1007/s10664-008-9083-7
   Souza FCM, 2016, 2016 IEEE/ACM 9TH INTERNATIONAL WORKSHOP ON SEARCH-BASED SOFTWARE TESTING (SBST), P45, DOI [10.1109/SBST.2016.018, 10.1145/2897010.2897012]
   Tanno H, 2015, 2015 IEEE/ACM 37th IEEE International Conference on Software Engineering, Vol 2, P717, DOI 10.1109/ICSE.2015.231
   Wang YG, 2013, INT CONF QUALITY REL, P1207, DOI 10.1109/QR2MSE.2013.6625785
   Wei CQ, 2021, INFORM SOFTWARE TECH, V132, DOI 10.1016/j.infsof.2020.106502
   Whittaker J., 1992, PROC 25 HAWAII INT C, P428
   Whittaker J. A., 1993, ACM Transactions on Software Engineering and Methodology, V2, P93, DOI 10.1145/151299.151326
   WHITTAKER JA, 1994, IEEE T SOFTWARE ENG, V20, P812, DOI 10.1109/32.328991
   Yao XJ, 2022, IEEE T SOFTWARE ENG, V48, P1169, DOI 10.1109/TSE.2020.3014960
   Yao XJ, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P919, DOI 10.1145/2568225.2568265
   Yu Y., 2011, Research on key technologies of dynamic hardware and software partitioning
   Yuehua Dong, 2011, 2011 International Conference on Multimedia Technology, P227
   Zhang G., 2017, Test case generation for mutation testing based on set evolution and dominance relation
   Zhao X., 2009, J. Comput. Appl., V29, P262
   Zheng H, 2010, 2ND IEEE INTERNATIONAL CONFERENCE ON ADVANCED COMPUTER CONTROL (ICACC 2010), VOL. 2, P431, DOI 10.1109/ICACC.2010.5486640
   [周树德 ZHOU ShuDe], 2007, [自动化学报, Acta Automatica Sinica], V33, P113, DOI 10.1360/aas-007-0113
NR 50
TC 0
Z9 0
U1 6
U2 6
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAR
PY 2024
VL 50
IS 3
BP 551
EP 573
DI 10.1109/TSE.2024.3358297
PG 23
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA LQ6H5
UT WOS:001188302300003
DA 2024-08-05
ER

PT J
AU Long, D
   Drylie, S
   Ritschel, JD
   Koschnick, C
AF Long, Daniel
   Drylie, Scott
   Ritschel, Jonathan D.
   Koschnick, Clay
TI An Assessment of Rules of Thumb for Software Phase Management, and the
   Relationship Between Phase Effort and Schedule Success
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Software; Encoding; Testing; Decision making; Schedules; Costs; Task
   analysis; Software development; Hotelling; rule of thumb; effort;
   phasing
ID DEVELOPMENT PRODUCTIVITY
AB In the planning of a software development project, managers must estimate the amount of effort needed for distinct phases of activity. A number of rules of thumb exist in the literature to help the program manager in this task. However, very little work has been done to validate these rules of thumb. Applying least square models and Hotelling's T-2 test, we evaluate these rules of thumb against a large database of Department of Defense projects. We determine that variability limits the simple application of any such rule. However, there are some worthy of closer attention, and we recommend adjustments for improved application. We also determine that projects which give extra attention to early phases experience less schedule growth. These findings were robust across developmental process type, military service, and project size.
C1 [Long, Daniel] Air Force Res Lab, Dayton, OH 45433 USA.
   [Drylie, Scott; Ritschel, Jonathan D.; Koschnick, Clay] AFIT, Wright Patterson AFB, OH 45433 USA.
C3 Air Force Institute of Technology (AFIT)
RP Drylie, S (corresponding author), AFIT, Wright Patterson AFB, OH 45433 USA.
EM dannyalong@gmail.com; scottdrylie@gmail.com; Jonathan.Ritschel@us.af.mil
CR AFCAA NCCA., 2008, Software Development Cost Estimating Guidebook, VI
   Ambler S., 2005, A Manager's Introduction to The Rational Unified Process (RUP)
   [Anonymous], 1975, The Mythical Man-Month
   [Anonymous], 2014, Software Engineering-A Practitioner's Approach
   Arena M.V., 2006, HIST COST GROWTH COM
   BENINGTON HD, 1983, ANN HIST COMPUT, V5, P350
   BOEHM B, 1987, IEEE SOFTWARE, V4, P84
   Boehm B, 2001, COMPUTER, V34, P135, DOI 10.1109/2.962984
   Boehm B., 2000, Tech. Rep.
   Borysowich C., 2005, Effort distribution across the software lifecycle
   Chauhan BD, 2017, INT CONF RELI INFO, P267, DOI 10.1109/ICRITO.2017.8342436
   Coggins G. A., 1993, Software cost estimating models: A comparative study of what the models estimate
   Coram M, 2005, 12TH IEEE INTERNATIONAL CONFERENCE AND WORKSHOPS ON THE ENGINEERING OF COMPUTER-BASED SYSTEMS, PROCEEDINGS, P363, DOI 10.1109/ECBS.2005.68
   DeNeve A., 2015, Defense A R Journal, V22, P84
   Drezner J.A., 1993, ANAL WEAPON SYSTEM C
   Dybå T, 2008, INFORM SOFTWARE TECH, V50, P833, DOI 10.1016/j.infsof.2008.01.006
   GAO, 2021, Software development: DOD faces risks and challenges in implementing modern approaches and addressing cybersecurity practices
   Goljan J., 2021, Air Space Power J.-Resour. Manage., V35, P47
   Harmon B. R., 2003, report number: P-3600 Tech. Rep. P-3600.
   Heijstek W., 2008, P 2 WORKSH MOD SIZ M
   Jolak R., 2018, MODELS 18, P213
   Kozlak S., 2017, Defense Acquisition Res. J., V24, P386
   Lanham N., 2018, Tech. Rep. #18-5-1070
   Madachy R, 2011, INT SYMP EMP SOFTWAR, P392, DOI 10.1109/ESEM.2011.56
   Maxwell KD, 1996, IEEE T SOFTWARE ENG, V22, P706, DOI 10.1109/32.544349
   McNichols G. R., 1981, P 16 ANN DOD COST AN
   Molokken K, 2003, 2003 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P223, DOI 10.1109/ISESE.2003.1237981
   Papatheocharous E., 2017, J. Softw.: Evol. Process, V29, P1
   Putnam L.H., 1991, Measures for excellence: reliable software on time, within budget, VFirst
   Rosa W., 2014, P INT S EMP SOFTW EN, P1
   Rosa W, 2017, INT SYMP EMP SOFTWAR, P30, DOI 10.1109/ESEM.2017.10
   Schumacker R.E., 2016, Using R with Multivariate Statistics
   Serrador P, 2015, INT J PROJ MANAG, V33, P1040, DOI 10.1016/j.ijproman.2015.01.006
   Sipple V., 2004, Defense Acquisition Research Journal: A Publication of the Defense Acquisition University, (January-April), P79
   Sommerville I., 2016, Software Engineering
   Taipale O, 2006, 2006 AUSTRALIAN SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P283
   Tan T., 2011, Tech. Rep.
   The Standish Group, 2015, CHAOS Report 2015, P13
   Thibodeau R., 1980, Journal of Systems and Software, V1, P203, DOI 10.1016/0164-1212(79)90021-9
   Trendowicz A, 2009, ADV COMPUT, V77, P185, DOI 10.1016/S0065-2458(09)01206-6
   Violette T., 2021, An analysis of stability in SRDR CSCIs
   Wagner S., 2018, A systematic review of productivity factors in software development
   Westland JC, 2002, J SYST SOFTWARE, V62, P1, DOI 10.1016/S0164-1212(01)00130-3
   Yang Y, 2008, ESEM'08: PROCEEDINGS OF THE 2008 ACM-IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, P61
   Yiftachel P., 2011, P ADV SOFTW ENG JAN, P1
   ZELKOWITZ MV, 1978, COMPUT SURV, V10, P197, DOI 10.1145/356725.356731
   Zimmermann T., 2019, Rethinking Productivity in Software Engineering
NR 47
TC 0
Z9 0
U1 3
U2 3
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD FEB
PY 2024
VL 50
IS 2
BP 209
EP 219
DI 10.1109/TSE.2023.3339383
PG 11
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA IP4I9
UT WOS:001167516600005
DA 2024-08-05
ER

PT J
AU Yu, SC
   Fang, CR
   Du, MZ
   Ding, ZM
   Chen, ZY
   Su, ZD
AF Yu, Shengcheng
   Fang, Chunrong
   Du, Mingzhe
   Ding, Zimin
   Chen, Zhenyu
   Su, Zhendong
TI Practical, Automated Scenario-Based Mobile App Testing
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Mobile app testing; scenario-based testing; image understanding; event
   knowledge graph; Mobile app testing; scenario-based testing; image
   understanding; event knowledge graph
AB The importance of mobile application (app) quality assurance is increasing with the rapid development of the mobile Internet. Automated test generation approaches, as a dominant direction of app quality assurance, follow specific models or strategies, targeting at optimizing the code coverage. Such approaches lead to a huge gap between testing execution and app business logic. Test scripts developed by human testers consider business logic by focusing on testing scenarios. Due to the GUI-intensive feature of mobile apps, human testers always understand app GUI to organize test scripts for scenarios. This inspires us to utilize domain knowledge from app GUI understanding for scenario-based test generation. In this paper, we propose a novel approach, ScenTest, for scenario-based mobile app testing with event knowledge graph (EKG) via GUI image understanding. ScenTest tries to start automated testing by imitating human practices and integrating domain knowledge into scenario-based mobile app testing, realizing fully automated testing on target testing scenarios for the first time. ScenTest extracts four kinds of entities and five kinds of corresponding relationships from crowdsourced test reports, where the test events and app GUI information are presented, and constructs the EKGs for specific scenarios. Then, ScenTest conducts test generation for specific scenarios on different apps with the guidance of EKG with the combination consideration of app current state and testing context. We conduct an evaluation on ScenTest on different aspects. The results show that the test generation of ScenTest on the basis of EKG is effective, and ScenTest reveals 150+ distinct real-world bugs in specific scenarios compared with representative baselines.
C1 [Yu, Shengcheng; Fang, Chunrong; Du, Mingzhe; Ding, Zimin; Chen, Zhenyu] Nanjing Univ, State Key Lab Novel Software Technol, Nanjing 210093, Peoples R China.
   [Su, Zhendong] Swiss Fed Inst Technol, Dept Comp Sci, CH-8092 Zurich, Switzerland.
C3 Nanjing University; Swiss Federal Institutes of Technology Domain; ETH
   Zurich
RP Fang, CR (corresponding author), Nanjing Univ, State Key Lab Novel Software Technol, Nanjing 210093, Peoples R China.
EM yusc@smail.nju.edu.cn; fangchunrong@nju.edu.cn;
   nandodu@smail.nju.edu.cn; dingzm@smail.nju.edu.cn; zychen@nju.edu.cn;
   zhendong.su@inf.ethz.ch
OI Fang, Chunrong/0000-0002-9930-7111
FU National Natural Science Foundation of China [62141215, 62272220,
   62372228]
FX This work was supported by the National Natural Science Foundation of
   China under Grant 62141215, Grant 62272220, and Grant 62372228.
CR Adamo D, 2018, PROCEEDINGS OF THE 9TH ACM SIGSOFT INTERNATIONAL WORKSHOP ON AUTOMATING TEST CASE DESIGN, SELECTION, AND EVALUATION (A-TEST '18), P2, DOI 10.1145/3278186.3278187
   [Anonymous], UIAPPLICATION EXERCI
   Baek YM, 2016, IEEE INT CONF AUTOM, P238, DOI [10.1145/2970276.2970313, 10.1145/2970276.2970310]
   Behrang F, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P54, DOI 10.1109/ASE.2019.00016
   Behrang F, 2018, PROC IEEE ACM INT C, P384, DOI 10.1145/3183440.3195019
   Beltramelli T, 2018, PROCEEDINGS OF THE ACM SIGCHI SYMPOSIUM ON ENGINEERING INTERACTIVE COMPUTING SYSTEMS (EICS'18), DOI 10.1145/3220134.3220135
   Chang TH, 2010, CHI2010: PROCEEDINGS OF THE 28TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, VOLS 1-4, P1535
   Chao Guo, 2020, ISSTA '20: Proceedings of the 29th ACM SIGSOFT International Symposium on Software Testing and Analysis, P545, DOI 10.1145/3395363.3404363
   Chen CY, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P665, DOI 10.1145/3180155.3180222
   Chen JS, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P1202, DOI 10.1145/3368089.3409691
   Chen JS, 2020, PROC INT CONF SOFTW, P322, DOI 10.1145/3377811.3380327
   Chen JS, 2020, ACM T SOFTW ENG METH, V29, DOI 10.1145/3391613
   Chen S, 2019, 2019 IEEE 1ST INTERNATIONAL WORKSHOP ON ARTIFICIAL INTELLIGENCE FOR MOBILE (AI4MOBILE '19), P13, DOI [10.1109/ai4mobile.2019.8672718, 10.1109/AI4Mobile.2019.8672718]
   Chen XJ, 2020, EXPERT SYST APPL, V141, DOI 10.1016/j.eswa.2019.112948
   Cheng X., 2022, arXiv
   Choudhary SR, 2015, IEEE INT CONF AUTOM, P429, DOI 10.1109/ASE.2015.89
   El Ariss Omar, 2010, Proceedings of the Seventh International Conference on Information Technology: New Generations (ITNG 2010), P1038, DOI 10.1109/ITNG.2010.216
   Fazzini M, 2018, ISSTA'18: PROCEEDINGS OF THE 27TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P141, DOI 10.1145/3213846.3213869
   Feng SD, 2022, PROC INT CONF SOFTW, P1045, DOI 10.1145/3510003.3510048
   Gao RZ, 2019, EMPIR SOFTW ENG, V24, P537, DOI 10.1007/s10664-018-9618-5
   Gomez L, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P72, DOI 10.1109/ICSE.2013.6606553
   Guan SP, 2023, IEEE T KNOWL DATA EN, V35, P7569, DOI 10.1109/TKDE.2022.3180362
   Huang L, 2016, LECT NOTES COMPUT SC, V9937, P606, DOI 10.1007/978-3-319-46257-8_65
   Jiang ZX, 2021, IEEE ACCESS, V9, P21094, DOI 10.1109/ACCESS.2021.3055371
   Ke WJ, 2020, 2020 IEEE 20TH INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY, AND SECURITY (QRS 2020), P489, DOI 10.1109/QRS51102.2020.00068
   Kwapong BA, 2019, IEEE WORLD CONGR SER, P115, DOI 10.1109/SERVICES.2019.00039
   Lam W, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P854, DOI 10.1145/3106237.3117769
   Li Xin, 2023, 2023 10th International Conference on Dependable Systems and Their Applications (DSA), P114, DOI 10.1109/DSA59317.2023.00024
   Li YC, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P1070, DOI 10.1109/ASE.2019.00104
   Liang JY, 2023, IEEE INT CONF SOFTW, P246, DOI 10.1109/ICST57152.2023.00031
   Liu P, 2020, IEEE WORK CONF MIN S, P548, DOI 10.1145/3379597.3387503
   Liu Y, 2020, IEEE INT CONF AUTOM, P834, DOI 10.1145/3324884.3416628
   Liu Z, 2020, IEEE INT CONF AUTOM, P398, DOI 10.1145/3324884.3416547
   Machiry A., 2013, P 2013 9 JOINT M FDN, P224
   Mao K., 2016, P 25 INT S SOFTW TES, P94
   Minxue Pan, 2020, ISSTA '20: Proceedings of the 29th ACM SIGSOFT International Symposium on Software Testing and Analysis, P153, DOI 10.1145/3395363.3397354
   Moran K, 2020, IEEE T SOFTWARE ENG, V46, P196, DOI 10.1109/TSE.2018.2844788
   Nayak A, 2020, ACM INT CONF PR SER, P289, DOI 10.1145/3371158.3371202
   Pan MX, 2022, IEEE T SOFTWARE ENG, V48, P910, DOI 10.1109/TSE.2020.3007664
   Rau A, 2018, PROC IEEE ACM INT C, P370, DOI 10.1145/3183440.3195014
   Romdhana A., 2021, ACM Trans. Softw.Eng. Methodol.
   Su T, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P245, DOI 10.1145/3106237.3106298
   Talebipour S, 2021, 2021 36TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING ASE 2021, P756, DOI 10.1109/ASE51524.2021.9678643
   Tian YH, 2020, PROC INT CONF SOFTW, P49, DOI 10.1145/3377812.3382138
   Nguyen TA, 2015, IEEE INT CONF AUTOM, P248, DOI 10.1109/ASE.2015.32
   Wang L, 2017, PROC IEEE ACM INT C, P189, DOI 10.1109/ICSE-C.2017.102
   Xiao XS, 2019, PROC INT CONF SOFTW, P257, DOI 10.1109/ICSE.2019.00041
   Xu TT, 2021, ISSTA '21: PROCEEDINGS OF THE 30TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P191, DOI 10.1145/3460319.3464830
   Yang WS, 2021, IEEE I C SQRS-C, P67, DOI 10.1109/QRS-C55045.2021.00020
   Yin H, 2021, 2021 IEEE INTERNATIONAL CONFERENCE ON WEB SERVICES, ICWS 2021, P251, DOI 10.1109/ICWS53863.2021.00043
   Yu SC, 2021, PROC INT CONF SOFTW, P1561, DOI 10.1109/ICSE43902.2021.00139
   Yu SC, 2021, PROC INT CONF SOFTW, P946, DOI 10.1109/ICSE43902.2021.00090
   Zhang J., 2021, P 47 ANN C IEEE IND, P1
   Zhang S, 2020, Arxiv, DOI arXiv:2009.00901
   Zhang Y, 2020, 2020 INTERNATIONAL SYMPOSIUM ON THEORETICAL ASPECTS OF SOFTWARE ENGINEERING (TASE 2020), P225, DOI 10.1109/TASE49443.2020.00038
   Zhang ZQ, 2022, PROCEEDINGS OF THE 31ST ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, ISSTA 2022, P805, DOI 10.1145/3533767.3543292
   Zhao XJ, 2023, IEEE T NEUR NET LEAR, V34, P4386, DOI 10.1109/TNNLS.2021.3113026
   Zhao Y, 2022, ACM T SOFTW ENG METH, V31, DOI 10.1145/3488244
   Zhao Y, 2019, PROC INT CONF SOFTW, P128, DOI 10.1109/ICSE.2019.00030
   Zhou C, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P944, DOI 10.1145/3236024.3275428
   Zhu M., 2013, Long Papers, V1, P434
NR 61
TC 0
Z9 0
U1 0
U2 0
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUL
PY 2024
VL 50
IS 7
BP 1949
EP 1966
DI 10.1109/TSE.2024.3414672
PG 18
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA YZ0O5
UT WOS:001272193600008
OA Green Submitted
DA 2024-08-05
ER

PT J
AU Jiang, H
   Wang, Z
   Zhou, ZD
   Li, XC
   Guo, SK
   Sun, WF
   Zhang, T
AF Jiang, He
   Wang, Zun
   Zhou, Zhide
   Li, Xiaochen
   Guo, Shikai
   Sun, Weifeng
   Zhang, Tao
TI A Testing Program and Pragma Combination Selection Based Framework for
   High-Level Synthesis Tool Pragma-Related Bug Detection
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE HLS; pragma; fuzzing; software testing; testing program selection;
   pragma combination selection
ID TRANSLATION VALIDATION; COMPILER BUGS; VERIFICATION; DESIGN
AB High-Level Synthesis (HLS) tools convert C/C++ design code into Hardware Description Language (HDL) code automatically, which are often used for Field Programmable Gate Array (FPGA) design. HLS tools provide many pragmas, which are a kind of directive to be inserted into C/C++ code, for designers to efficiently control the synthesis of code components (e.g., arrays and loops) to generate FPGA implementations with varying performances and costs. However, the use of some pragmas may trigger HLS tool bugs (e.g., tool crashes). Although many formal methods have been proposed to verify the correctness of various HLS phases, no relevant work addresses the problem on detecting HLS tool pragma-related bugs. To resolve this problem, two challenges need to be addressed, namely the selection of testing programs and the acquisition of pragma combinations, due to the enormous number of testing programs and pragma combinations. In this paper, we propose TEPACS, a TEsting Program and prAgma Combination Selection-based framework, to construct diverse testing programs with pragmas for effectively detecting HLS tool pragma-related bugs. TEPACS follows the idea of fuzzing, which is a widely used technique in software testing. First, TEPACS selects the representative testing program according to the cosine distance between the code component vectors of testing programs. Then, for a selected program, TEPACS generates its golden output and uses the pragma combination selection method based on combinatorial testing to generate a set of programs with different pragmas. TEPACS uses the HLS tool under test to convert these testing programs into HDL codes and obtains the simulation results of the HDL code. Finally, based on differential testing, TEPACS identifies HLS tool bugs triggered if the simulation result and golden output are inconsistent. We evaluate TEPACS and its five variants on Vitis HLS, a widely used FPGA HLS tool. Experimental results show that TEPACS outperforms the baselines by at least 11.17% in terms of the bug-finding capability. In one month, TEPACS detected 34 bugs on the latest version of Vitis HLS, of which 9 bugs have been confirmed.
C1 [Jiang, He] Dalian Univ Technol, Sch Software, Dalian 116024, Peoples R China.
   [Jiang, He; Wang, Zun] Key Lab Ubiquitous Network & Serv Software Liaonin, Dalian 116024, Peoples R China.
   [Jiang, He; Zhou, Zhide] Dalian Key Lab Artificial Intelligence, Dalian 116024, Peoples R China.
   [Jiang, He; Li, Xiaochen] DUT Artificial Intelligence Inst, Dalian 116024, Peoples R China.
   [Guo, Shikai] Dalian Maritime Univ, Sch Informat Sci & Technol, Dalian 116026, Peoples R China.
   [Sun, Weifeng; Zhang, Tao] Macau Univ Sci & Technol, Sch Comp Sci & Engn, Macau 999078, Peoples R China.
C3 Dalian University of Technology; Dalian Maritime University; Macau
   University of Science & Technology
RP Jiang, H (corresponding author), Dalian Univ Technol, Sch Software, Dalian 116024, Peoples R China.
EM jianghe@dlut.edu.cn; wangzun_ssdut2020@mail.dlut.edu.cn;
   cszide@gmail.com; xiaochen.li@dlut.edu.cn; shikai.guo@dlmu.edu.cn;
   wfsun@dlut.edu.cn; tazhang@must.edu.mo
RI Zhang, Tao/E-5634-2012
OI Zhang, Tao/0000-0002-6272-4069
FU National Natural Science Foundation of China
FX No Statement Available
CR [Anonymous], 2006, PROC 24 PACIFIC NW S
   Balestrat A., GitHub
   Banerjee K, 2014, IEEE T COMPUT AID D, V33, P1180, DOI 10.1109/TCAD.2014.2314392
   Calvagna A, 2014, IEEE ICST WORKSHOP, P84, DOI 10.1109/ICSTW.2014.10
   Castelein J, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1220, DOI 10.1145/3180155.3180202
   Chen JJ, 2020, ACM COMPUT SURV, V53, DOI 10.1145/3363562
   Chen JJ, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P305, DOI 10.1109/ASE.2019.00037
   Chen Z., 2023, ACM Trans. Softw. Eng. Methodol., V32, P1, DOI [10.48550/ARXIV.2207.03277, DOI 10.48550/ARXIV.2207.03277]
   Choi YK, 2017, ICCAD-IEEE ACM INT, P691
   Chouksey R, 2020, IEEE T VLSI SYST, V28, P1638, DOI 10.1109/TVLSI.2020.2978242
   Chouksey R, 2017, COMM COM INF SC, V711, P767, DOI 10.1007/978-981-10-7470-7_72
   Cilardo A, 2015, DES AUT TEST EUROPE, P163
   Cummins C, 2018, ISSTA'18: PROCEEDINGS OF THE 27TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P95, DOI 10.1145/3213846.3213848
   DEKLEER J, 1986, ARTIF INTELL, V28, P127, DOI 10.1016/0004-3702(86)90080-9
   Ferretti L, 2020, IEEE T COMPUT AID D, V39, P3736, DOI 10.1109/TCAD.2020.3012750
   Ferretti L, 2021, IEEE T EMERG TOP COM, V9, P35, DOI 10.1109/TETC.2018.2794068
   Fezzardi P, 2016, I C FIELD PROG LOGIC, DOI 10.1109/FPL.2016.7577369
   Herklotz Y, 2021, ANN IEEE SYM FIELD P, P219, DOI 10.1109/FCCM51124.2021.00034
   Huang L, 2020, J COMPUT SCI TECH-CH, V35, P697, DOI 10.1007/s11390-020-9414-8
   Jiang H, 2021, IEEE T SOFTWARE ENG, V48, P2339, DOI 10.1109/TSE.2021.3058671
   Jiang HX, 2013, 2013 3RD INTERNATIONAL CONFERENCE ON COMPUTER SCIENCE AND NETWORK TECHNOLOGY (ICCSNT), P588, DOI 10.1109/ICCSNT.2013.6967182
   Kuhn D. R., 2010, NIST SPECIAL PUBLICA, V800, P142
   Kundu S, 2010, IEEE T COMPUT AID D, V29, P566, DOI 10.1109/TCAD.2010.2042889
   Kwon J, 2020, PROCEEDINGS OF THE 2020 ACM/IEEE 2ND WORKSHOP ON MACHINE LEARNING FOR CAD (MLCAD '20), P163, DOI 10.1145/3380446.3430636
   Le V, 2015, ACM SIGPLAN NOTICES, V50, P386, DOI [10.1145/2814270.2814319, 10.1145/2858965.2814319]
   Le Vu, 2015, P 2015 INT S SOFTW T, P327, DOI DOI 10.1145/2771783.2771785
   Leung A, 2015, 2015 ACM/IEEE INTERNATIONAL CONFERENCE ON FORMAL METHODS AND MODELS FOR CODESIGN (MEMOCODE), P42, DOI 10.1109/MEMCOD.2015.7340466
   Li CL, 2020, ANN IEEE SYM FIELD P, P213, DOI 10.1109/FCCM48280.2020.00044
   Li YH, 2020, IEEE ICST WORKSHOP, P181, DOI 10.1109/ICSTW50294.2020.00039
   Liang HL, 2018, IEEE T RELIAB, V67, P1199, DOI 10.1109/TR.2018.2834476
   Lidbury C, 2015, ACM SIGPLAN NOTICES, V50, P65, DOI [10.1145/2737924.2737986, 10.1145/2813885.2737986]
   Livinskii V, 2020, P ACM PROGRAM LANG, V4, DOI 10.1145/3428264
   Ma L, 2019, 2019 IEEE 26TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER), P614, DOI [10.1109/saner.2019.8668044, 10.1109/SANER.2019.8668044]
   Marathe S., 2020, PROC SYST REL QUALIT, P82
   Martin G, 2009, IEEE DES TEST COMPUT, V26, P18, DOI 10.1109/MDT.2009.83
   Nie CH, 2011, ACM COMPUT SURV, V43, DOI 10.1145/1883612.1883618
   Pundir N, 2021, INT SYM QUAL ELECT, P164, DOI 10.1109/ISQED51717.2021.9424365
   Santos T, 2020, 2020 INTERNATIONAL CONFERENCE ON FIELD-PROGRAMMABLE TECHNOLOGY (ICFPT 2020), P227, DOI 10.1109/ICFPT51103.2020.00039
   Satya SreeK.P.N., 2012, International Jour- nal of Engineering Science and Advanced Technology, V2, P508
   Schafer BC, 2020, IEEE T COMPUT AID D, V39, P2628, DOI 10.1109/TCAD.2019.2943570
   Schafer BC, 2017, ACM T DES AUTOMAT EL, V22, DOI 10.1145/3041219
   Schafer BC, 2016, IEEE T COMPUT AID D, V35, P394, DOI 10.1109/TCAD.2015.2472007
   Soltani M, 2017, PROC INT CONF SOFTW, P209, DOI 10.1109/ICSE.2017.27
   Sun CN, 2016, ACM SIGPLAN NOTICES, V51, P849, DOI 10.1145/3022671.2984038
   Tang YX, 2022, IEEE T SOFTWARE ENG, V48, P4411, DOI 10.1109/TSE.2021.3119186
   Tu HX, 2022, PROC INT SYMP SOFTW, P529, DOI 10.1109/ISSRE55969.2022.00057
   Le V, 2014, ACM SIGPLAN NOTICES, V49, P216, DOI [10.1145/2666356.2594334, 10.1145/2594291.2594334]
   Wang XY, 2021, IEEE INT C S Q R S, P179, DOI 10.1109/QRS54544.2021.00029
   Wang YC, 2019, INT CONF SOFTW ENG, P230, DOI 10.1109/icsess47205.2019.9040809
   Warne DJ, 2014, PROCEDIA COMPUT SCI, V29, P95, DOI 10.1016/j.procs.2014.05.009
   Wu HY, 2022, PROC INT CONF SOFTW, P426, DOI 10.1145/3510003.3510151
   Yang XJ, 2011, PLDI 11: PROCEEDINGS OF THE 2011 ACM CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P283
   Ye JX, 2019, IEEE ACCESS, V7, P42557, DOI 10.1109/ACCESS.2019.2905744
   Yue T, 2019, IEEE ACCESS, V7, P117029, DOI 10.1109/ACCESS.2019.2936235
   Zacharopoulos G, 2018, PROCEEDINGS 2018 INTERNATIONAL CONFERENCE ON HIGH PERFORMANCE COMPUTING & SIMULATION (HPCS), P91, DOI 10.1109/HPCS.2018.00030
   Zhang K. F., 2013, Applied Mechanics and Materials, V380, P3249
   Zhang QR, 2017, ACM SIGPLAN NOTICES, V52, P347, DOI [10.1145/3062341.3062379, 10.1145/3140587.3062379]
   Zhao JR, 2017, ICCAD-IEEE ACM INT, P430, DOI 10.1109/ICCAD.2017.8203809
   Zhou ZD, 2022, IEEE T RELIAB, V71, P896, DOI 10.1109/TR.2022.3165378
NR 59
TC 0
Z9 0
U1 3
U2 3
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD APR
PY 2024
VL 50
IS 4
BP 937
EP 955
DI 10.1109/TSE.2024.3368553
PG 19
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA OC2K3
UT WOS:001204993400008
DA 2024-08-05
ER

PT J
AU Han, RD
   Ma, SQ
   Li, JR
   Nepal, S
   Lo, DV
   Ma, Z
   Ma, JF
AF Han, Ruidong
   Ma, Siqi
   Li, Juanru
   Nepal, Surya
   Lo, David
   Ma, Zhuo
   Ma, JianFeng
TI Range Specification Bug Detection in Flight Control System Through
   Fuzzing
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Drone security; configuration test; range specification bug; deep
   learning approximation
ID SENSOR
AB Developers and manufacturers provide configurable control parameters for flight control programs to support various environments and missions, along with suggested ranges for these parameters to ensure flight safety. However, this flexible mechanism can also introduce a vulnerability known as range specification bugs. The vulnerability originates from the evidence that certain combinations of parameter values may affect the drone's physical stability even though its parameters are within the suggested range. The paper introduces a novel system called icsearcher, designed to identify incorrect configurations or unreasonable combinations of parameters and suggest more reasonable ranges for these parameters. icsearcher applies a metaheuristic search algorithm to find configurations with a high probability of driving the drone into unstable states. In particular, icsearcher adopts a machine learning-based predictor to assist the searcher in evaluating the fitness of configuration. Finally, leveraging searched incorrect configurations, icsearcher can summarize the feasible ranges through multi-objective optimization. icsearcher applies a predictor to guide the search, which eliminates the need for realistic/simulation executions when evaluating configurations and further promotes search efficiency. We have carried out experimental evaluations of icsearcher in different control programs. The evaluation results show that the system successfully reports potentially incorrect configurations, of which over 94% leads to unstable states.
C1 [Han, Ruidong; Ma, Zhuo; Ma, JianFeng] Xidian Univ, Sch Cyber Engn, Xian 710071, Peoples R China.
   [Han, Ruidong; Lo, David] Singapore Management Univ, Sch Comp & Informat Syst, Singapore 188065, Singapore.
   [Ma, Siqi] Univ New South Wales, Sch Engn & Informat Syst, Sydney, NSW 2052, Australia.
   [Li, Juanru] Shanghai Jiao Tong Univ, Zhiyuan Coll, Shanghai 200240, Peoples R China.
   [Nepal, Surya] Commonwealth Sci & Ind Res, Sydney, NSW 2007, Australia.
C3 Xidian University; Singapore Management University; University of New
   South Wales Sydney; Shanghai Jiao Tong University; Commonwealth
   Scientific & Industrial Research Organisation (CSIRO)
RP Han, RD (corresponding author), Xidian Univ, Sch Cyber Engn, Xian 710071, Peoples R China.
EM ruidonghanxd@outlook.com
RI Han, Ruidong/KCJ-5705-2024; Nepal, Surya/B-7523-2011; Lo,
   David/A-2493-2012
OI Han, Ruidong/0000-0001-6859-6005; Nepal, Surya/0000-0002-3289-6599; Lo,
   David/0000-0002-4367-7201
FU National Natural Science Foundation of China (Key Program)
FX No Statement Available
CR Akita R., 2016, P IEEE ACIS 15 INT C, P1, DOI [DOI 10.1109/ICIS.2016.7550882, 10.1109/ICIS.2016.7550882]
   Altché F, 2017, IEEE INT C INTELL TR
   ArduPilot Development Team, ArduPilot-Versatile, trusted, open autopilot software for drones and other autonomous systems
   ArduPilot Development Team, Autopilot hardware options
   ArduPilot Team, SparkFun autonomous vehicle competition 2013
   Bekmezci I, 2013, AD HOC NETW, V11, P1254, DOI 10.1016/j.adhoc.2012.12.004
   Böttinger K, 2018, 2018 IEEE SYMPOSIUM ON SECURITY AND PRIVACY WORKSHOPS (SPW 2018), P116, DOI 10.1109/SPW.2018.00026
   Bok P.-B., 2011, P 20 INT C COMP COMM, P1
   Chen YQ, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P962, DOI 10.1109/ASE.2019.00093
   Cheng K, 2018, I C DEPEND SYS NETWO, P430, DOI 10.1109/DSN.2018.00052
   Chibotaru V, 2019, PROCEEDINGS OF THE 40TH ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION (PLDI '19), P760, DOI 10.1145/3314221.3314648
   Choi H, 2018, PROCEEDINGS OF THE 2018 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY (CCS'18), P801, DOI 10.1145/3243734.3243752
   CrashVideo, 2022, Crash
   Cummins C, 2018, ISSTA'18: PROCEEDINGS OF THE 27TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P95, DOI 10.1145/3213846.3213848
   DeviationVideo, 2022, Deviation With Overshoot
   DeviationVideo2, 2022, Deviation With Flying Away
   DroneCode, jMAVSim: A simple multirotor/quad simulator
   DroneCode, Px4-An open source flight control software for drones and other unmanned vehicles
   FlightFreezeVideo, 2022, Flight Freeze
   Gers FA, 2000, NEURAL COMPUT, V12, P2451, DOI 10.1162/089976600300015015
   Halin A, 2019, EMPIR SOFTW ENG, V24, P674, DOI 10.1007/s10664-018-9635-4
   Han RD, 2022, PROC INT CONF SOFTW, P462, DOI 10.1145/3510003.3510084
   Heredia G, 2008, MECHATRONICS, V18, P90, DOI 10.1016/j.mechatronics.2007.09.007
   Kim T, 2019, PROCEEDINGS OF THE 28TH USENIX SECURITY SYMPOSIUM, P425
   LibrePilot, LibrePilot: A software suite to control multicopter and other RC-models
   Meier L., 2011, 2011 IEEE International Conference on Robotics and Automation (ICRA 2011), P2992, DOI 10.1109/ICRA.2011.5980229
   Mnih V, 2013, Arxiv, DOI arXiv:1312.5602
   PrivilegeEscalationVideo, 2022, Post-Launch Privilege Escalation Leads to Crash
   Samy I, 2008, IEEE DECIS CONTR P, P1237, DOI 10.1109/CDC.2008.4738703
   Schubert E, 2017, ACM T DATABASE SYST, V42, DOI 10.1145/3068335
   Selvin S, 2017, 2017 INTERNATIONAL CONFERENCE ON ADVANCES IN COMPUTING, COMMUNICATIONS AND INFORMATICS (ICACCI), P1643, DOI 10.1109/ICACCI.2017.8126078
   Shah S., 2018, FIELD SERVICE ROBOTI, P621, DOI [10.1007/978-3-319-67361-5_40, DOI 10.1007/978-3-319-67361-5_40]
   She DD, 2020, P IEEE S SECUR PRIV, P1527, DOI 10.1109/SP40000.2020.00022
   She DD, 2019, P IEEE S SECUR PRIV, P803, DOI 10.1109/SP.2019.00052
   Wang Z, 2009, IEEE SIGNAL PROC MAG, V26, P98, DOI 10.1109/MSP.2008.930649
   WHITLEY D, 1994, STAT COMPUT, V4, P65, DOI 10.1007/BF00175354
   Yan GH, 2017, 2017 1ST IEEE SYMPOSIUM ON PRIVACY-AWARE COMPUTING (PAC), P164, DOI 10.1109/PAC.2017.10
NR 37
TC 0
Z9 0
U1 3
U2 3
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAR
PY 2024
VL 50
IS 3
BP 461
EP 473
DI 10.1109/TSE.2024.3354739
PG 13
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA LQ6H5
UT WOS:001188302300013
DA 2024-08-05
ER

PT J
AU Ayerdi, J
   Terragni, V
   Jahangirova, G
   Arrieta, A
   Tonella, P
AF Ayerdi, Jon
   Terragni, Valerio
   Jahangirova, Gunel
   Arrieta, Aitor
   Tonella, Paolo
TI GenMorph: Automatically Generating Metamorphic Relations via Genetic
   Programming
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Testing; Java; Generators; Space exploration; Manuals; Genetic
   programming; Filters; Metamorphic testing; oracle problem; metamorphic
   relations; genetic programming; mutation analysis
ID ALGORITHM; SOFTWARE
AB Metamorphic testing is a popular approach that aims to alleviate the oracle problem in software testing. At the core of this approach are Metamorphic Relations (MRs), specifying properties that hold among multiple test inputs and corresponding outputs. Deriving MRs is mostly a manual activity, since their automated generation is a challenging and largely unexplored problem. This paper presents GenMorph, a technique to automatically generate MRs for Java methods that involve inputs and outputs that are boolean, numerical, or ordered sequences. GenMorph uses an evolutionary algorithm to search for effective test oracles, i.e., oracles that trigger no false alarms and expose software faults in the method under test. The proposed search algorithm is guided by two fitness functions that measure the number of false alarms and the number of missed faults for the generated MRs. Our results show that GenMorph generates effective MRs for 18 out of 23 methods (mutation score > 20%). Furthermore, it can increase Randoop's fault detection capability in 7 out of 23 methods, and Evosuite's in 14 out of 23 methods. When compared with AutoMR, a state-of-the-art MR generator, GenMorph also outperformed its fault detection capability in 9 out of 10 methods.
C1 [Ayerdi, Jon; Arrieta, Aitor] Mondragon Univ, Dept Elect & Comp Engn, Arrasate Mondragn 20500, Spain.
   [Terragni, Valerio] Auckland Univ, Auckland 1142, New Zealand.
   [Jahangirova, Gunel] Kings Coll London, London WC2B 4BG, England.
   [Tonella, Paolo] Univ Svizzera italiana USI, CH-6900 Lugano, Switzerland.
C3 Mondragon Unibertsitatea; University of Auckland; University of London;
   King's College London; Universita della Svizzera Italiana
RP Ayerdi, J (corresponding author), Mondragon Univ, Dept Elect & Comp Engn, Arrasate Mondragn 20500, Spain.
EM jayerdi@mondragon.edu
RI Tonella, Paolo/C-1702-2015
OI Tonella, Paolo/0000-0003-3088-0339
FU Basque Government through their Elkartek program (EGIA project)
   [KK-2022/00119]; H2020 project PRECRIME under the ERC Advanced Grant
   2017 Program (ERC Grant) [787703]; Software and Systems Engineering
   research group of Mondragon Unibertsitatea [IT1519-22]; Department of
   Education, Universities and Research of the Basque Country; UKRI
   Trustworthy Autonomous Systems Node in Verifiability [EP/V026801/2]
FX This work was supported in part by Basque Government through their
   Elkartek program (EGIA project, ref. KK-2022/00119) and in part by the
   H2020 project PRECRIME, funded under the ERC Advanced Grant 2017 Program
   (ERC Grant Agreement 787703). The work of Jon Ayerdi and Aitor Arrieta
   is supported by the Software and Systems Engineering research group of
   Mondragon Unibertsitatea (IT1519-22), supported in part by the
   Department of Education, Universities and Research of the Basque
   Country. The work of Gunel Jahangirova was supported in part by the UKRI
   Trustworthy Autonomous Systems Node in Verifiability, Grant Award
   Reference EP/V026801/2.
CR Ahlgren J, 2021, 2021 IEEE/ACM 43RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE (ICSE-SEIP 2021), P140, DOI 10.1109/ICSE-SEIP52600.2021.00023
   Apache, Apache Commons
   Apache, Apache Commons
   Ayerdi Jon, 2023, Zenodo, DOI 10.5281/ZENODO.10067096
   Barr ET, 2015, IEEE T SOFTWARE ENG, V41, P507, DOI 10.1109/TSE.2014.2372785
   Blasi A, 2021, J SYST SOFTWARE, V181, DOI 10.1016/j.jss.2021.111041
   Brameier Markus F., 2007, Linear Genetic Programming, P173
   Chen T.Y., 1998, Metamorphic testing: a new approach for generating next test cases
   Chen TY, 2021, PROCEEDINGS OF THE 29TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '21), P1487, DOI 10.1145/3468264.3473136
   Chen TY, 2018, ACM COMPUT SURV, V51, DOI 10.1145/3143561
   Coles H., 2016, P 25 INT S SOFTWARE, P449
   Deb K, 2002, IEEE T EVOLUT COMPUT, V6, P182, DOI 10.1109/4235.996017
   Duque-Torres A., 2022, P IEEE 29 INT C SOFT, P698
   Dwarakanath A, 2018, ISSTA'18: PROCEEDINGS OF THE 27TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P118, DOI 10.1145/3213846.3213858
   Fraser G, 2011, P 19 ACM SIGSOFT S 1, P416, DOI 10.1145/2025113.2025179
   Fraser G, 2013, IEEE T SOFTWARE ENG, V39, P276, DOI 10.1109/TSE.2012.14
   Google, "Google Guava." Guava
   Google, GitHub
   Hardin B, 2018, 2018 IEEE/ACM 3RD INTERNATIONAL WORKSHOP ON METAMORPHIC TESTING (MET 2018), P14, DOI 10.1145/3193977.3193985
   Harman M., 2013, Tech. Rep. CS-13-01
   Hui ZW, 2013, WOR CONG SOFTW ENG, P73, DOI 10.1109/WCSE.2013.16
   Jahangirova D., 2018, P 27 ACM SIGSOFT TIN
   Jahangirova G., 2016, P 25 INT S SOFTW TES, P247
   Jahangirova G, 2021, IEEE T SOFTWARE ENG, V47, P1708, DOI 10.1109/TSE.2019.2934409
   Jarman DC, 2017, 2017 IEEE/ACM 2ND INTERNATIONAL WORKSHOP ON METAMORPHIC TESTING (MET 2017), P21, DOI 10.1109/MET.2017.1
   Just R., 2014, P 2014 INT S SOFTW T, P433
   Kanewala U, 2016, SOFTW TEST VERIF REL, V26, P245, DOI 10.1002/stvr.1594
   Kanewala U, 2014, IEEE ICST WORKSHOP, P237, DOI 10.1109/ICSTW.2014.62
   Kanewala U, 2013, PROC INT SYMP SOFTW, P1, DOI 10.1109/ISSRE.2013.6698899
   Kennedy R., 1995, SWARM INTELL-US, V4, P1942, DOI [DOI 10.1007/S11721-007-0002-0, DOI 10.1109/ICNN.1995.488968]
   KOZA JR, 1994, STAT COMPUT, V4, P87, DOI 10.1007/BF00175355
   Lindvall M, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P129, DOI 10.1109/ICSE.2015.348
   Lukasczyk Stephan, 2020, Search-Based Software Engineering. 12th International Symposium, SSBSE 2020. Proceedings. Lecture Notes in Computer Science (LNCS 12420), P9, DOI 10.1007/978-3-030-59762-7_2
   McMinn P, 2004, SOFTW TEST VERIF REL, V14, P105, DOI 10.1002/stvr.294
   Miller B. L., 1995, Complex Systems, V9, P193
   Molina F, 2021, PROC INT CONF SOFTW, P1223, DOI 10.1109/ICSE43902.2021.00112
   Murphy Christian, 2008, SEKE 2008. The 20th International Conference Proceedings on Software Engineering & Knowledge Engineering, P867
   Nair A, 2019, PROCEEDINGS OF THE 3RD ACM SIGSOFT INTERNATIONAL WORKSHOP ON MACHINE LEARNING TECHNIQUES FOR SOFTWARE QUALITY EVALUATION (MALTESQUE '19), P1, DOI [10.1145/3340482.3342741, 10.1109/ncc.2019.8732208]
   Pacheco C, 2007, PROC INT CONF SOFTW, P75
   Panichella A, 2018, IEEE T SOFTWARE ENG, V44, P122, DOI 10.1109/TSE.2017.2663435
   Rahman K., 2020, P IEEE ACM 42 INT C, P420
   Rahman K, 2018, 2018 IEEE/ACM 3RD INTERNATIONAL WORKSHOP ON METAMORPHIC TESTING (MET 2018), P10, DOI 10.1145/3193977.3193983
   Segura S, 2016, IEEE T SOFTWARE ENG, V42, P805, DOI 10.1109/TSE.2016.2532875
   Shamshiri S, 2015, IEEE INT CONF AUTOM, P201, DOI 10.1109/ASE.2015.86
   Terragni V, 2021, PROC IEEE ACM INT C, P85, DOI 10.1109/ICSE-Companion52605.2021.00042
   Terragni V, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P1178, DOI 10.1145/3368089.3409758
   Tsong Yueh Chen, 2010, 2010 Fifth International Symposium on Service Oriented System Engineering (SOSE 2010), P1, DOI 10.1109/SOSE.2010.31
   Wei Jin, 2010, Proceedings of the Third IEEE International Conference on Software Testing, Verification and Validation (ICST 2010), P137, DOI 10.1109/ICST.2010.64
   WHITLEY D, 1994, STAT COMPUT, V4, P65, DOI 10.1007/BF00175354
   Zhang B, 2019, PROC IEEE INT CONF S, P235, DOI 10.1109/ICSME.2019.00035
   Zhang J., 2014, Proceedings of the 29th ACM/IEEE International Conference on Automated Software Engineering, P701, DOI DOI 10.1145/2642937.2642994
   Zhang PC, 2017, IEEE ACCESS, V5, P21791, DOI 10.1109/ACCESS.2017.2758790
   Zhou ZQ, 2020, IEEE T SOFTWARE ENG, V46, P1120, DOI 10.1109/TSE.2018.2876433
NR 53
TC 0
Z9 0
U1 0
U2 0
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUL
PY 2024
VL 50
IS 7
BP 1888
EP 1900
DI 10.1109/TSE.2024.3407840
PG 13
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA YZ0O5
UT WOS:001272193600007
OA Green Submitted
DA 2024-08-05
ER

PT J
AU Prestat, D
   Moha, N
   Villemaire, R
   Avellaneda, F
AF Prestat, Dimitri
   Moha, Naouel
   Villemaire, Roger
   Avellaneda, Florent
TI DynAMICS: A Tool-Based Method for the Specification and Dynamic
   Detection of Android Behavioral Code Smells
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Android; code smells; detection; dynamic analysis; instrumentation;
   mobile apps; apps; behavioural
AB Code smells are the result of poor design choices within software systems that complexify source code and impede evolution and performance. Therefore, detecting code smells within software systems is an important priority to decrease technical debt. Furthermore, the emergence of mobile applications (apps) has brought new types of Android-specific code smells, which relate to limitations and constraints on resources like memory, performance and energy consumption. Among these Android-specific smells are those that describe inappropriate behaviour during the execution that may negatively impact software quality. Static analysis tools, however, show limitations for detecting these behavioural code smells and properly detecting behavioural code smells requires considering the dynamic behaviour of the apps. To dynamically detect behavioural code smells, we hence propose three contributions: (1) A method, the Dynamics method, a step-by-step method for the specification and dynamic detection of Android behavioural code smells; (2) A tool, the Dynamics tool, implementing this method on seven code smells; and (3) A validation of our approach on 538 apps from F-Droid with a comparison with the static analysis detection tools, aDoctor and Paprika, from the literature. Our method consists of four steps: (1) the specification of the code smells, (2) the instrumentation of the app, (3) the execution of the apps, and (4) the detection of the behavioural code smells. Our results show that many instances of code smells that cannot be detected with static detection tools are indeed detected with our dynamic approach with an average precision of 92.8% and an average recall of 53.4%.
C1 [Prestat, Dimitri; Villemaire, Roger; Avellaneda, Florent] Univ Quebec Montreal, Montreal, PQ H3C 1K3, Canada.
   [Moha, Naouel] Ecole Technol Super, Montreal, PQ H3C1K3, Canada.
C3 University of Quebec; University of Quebec Montreal; University of
   Quebec; Ecole de Technologie Superieure - Canada
RP Prestat, D (corresponding author), Univ Quebec Montreal, Montreal, PQ H3C 1K3, Canada.
EM di.prestat@gmail.com; naouel.moha@etsmtl.ca; villemaire.roger@uqam.ca;
   avellaneda.florent@uqam.ca
OI Moha, Naouel/0000-0001-9252-9937
FU Natural Sciences and Engineering Research Council of Canada (NSERC)
FX No Statement Available
CR [Anonymous], 2018, Number of mobile app downloads worldwide in 2017, 2018 and 2022 (in billions)
   Bartel Alexandre, 2012, P ACM SIGPLAN INT WO, P27
   Bierma M, 2014, Arxiv, DOI arXiv:1410.7751
   Brown William H., 1998, AntiPatterns: Refactoring Software, Architectures, and Projects in Crisis, V1st
   developer.android, Logcat command-line tool
   developer.android, Monkeyrunner
   developer.android, ArrayMap
   developer.android, Android debug bridge (adb)
   developer.android, OnLowMemory
   Fard AM, 2013, IEEE INT WORK C SO, P116, DOI 10.1109/SCAM.2013.6648192
   Fowler M., 1999, Refactoring: Improving the Design of Existing Programs
   Ghafari M, 2017, IEEE INT WORK C SO, P121, DOI 10.1109/SCAM.2017.24
   github, Droidutan
   github, aDoctor project
   github, Paprika project
   Haase C, Medium
   Habchi S, 2019, 2019 IEEE/ACM 6TH INTERNATIONAL CONFERENCE ON MOBILE SOFTWARE ENGINEERING AND SYSTEMS (MOBILESOFT 2019), P87, DOI 10.1109/MOBILESoft.2019.00022
   Halle S., 2017, PROC INT WORKSHOP CO, P81, DOI DOI 10.29007/4CTH
   Hecht G., 2016, Ph.D. dissertation
   Hecht G, 2015, 2ND ACM INTERNATIONAL CONFERENCE ON MOBILE SOFTWARE ENGINEERING AND SYSTEMS MOBILESOFT 2015, P148, DOI 10.1109/MobileSoft.2015.38
   Iannone E, 2020, INT C PROGRAM COMPRE, P451, DOI 10.1145/3387904.3389298
   Kaelbling LP, 1996, J ARTIF INTELL RES, V4, P237, DOI 10.1613/jair.301
   Kessentini Marouane, 2017, 2017 IEEE/ACM 4th International Conference on Mobile Software Engineering and Systems (MOBILESoft). Proceedings, P122, DOI 10.1109/MOBILESoft.2017.29
   Kumar Swati, 2014, 2014 5th International Conference on Computer and Communication Technology (ICCCT), P41, DOI 10.1109/ICCCT.2014.7001467
   Li YC, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P1070, DOI 10.1109/ASE.2019.00104
   Li YC, 2017, PROC IEEE ACM INT C, P23, DOI 10.1109/ICSE-C.2017.8
   Machiry A., 2013, P 2013 9 JOINT M FDN, P224
   Marinescu C., 2005, IEEE INT C SOFTW MAI
   Mariotti G., Blogger
   Moha N, 2010, IEEE T SOFTWARE ENG, V36, P20, DOI 10.1109/TSE.2009.50
   Morales R, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P59, DOI 10.1145/3180155.3182524
   Ni-Lewis I., 2015, Avoiding Allocations in OnDraw() (100 Days of Google Dev)
   oracle, Jarsigner
   Palomba F, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P487, DOI 10.1109/SANER.2017.7884659
   Pnueli A., 1977, 18th Annual Symposium on Foundations of Computer Science, P46, DOI 10.1109/SFCS.1977.32
   Prestat Dimitri, 2022, IEEE DataPort, DOI 10.21227/49VR-WR08
   Prestat D, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-022-10212-8
   Rasool G, 2020, ARAB J SCI ENG, V45, P3289, DOI 10.1007/s13369-020-04365-1
   Reimann Jan., 2014, Softwaretechnik-Trends, V34
   source.android, Dalvik bytecode
   statista, Number of apps available in leading app stores as of 3rd quarter 2022
   Vallee-Rai R., 2010, SOOT: A Java bytecode optimization framework
   Yasin HN, 2021, SYMMETRY-BASEL, V13, DOI 10.3390/sym13020310
   Zheng M, 2014, INT WIREL COMMUN, P128, DOI 10.1109/IWCMC.2014.6906344
NR 44
TC 1
Z9 1
U1 4
U2 4
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD APR
PY 2024
VL 50
IS 4
BP 765
EP 784
DI 10.1109/TSE.2024.3363223
PG 20
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA OC2K3
UT WOS:001204993400005
DA 2024-08-05
ER

PT J
AU Babikian, AA
   Semeráth, O
   Varró, D
AF Babikian, Aren A.
   Semerath, Oszkar
   Varro, Daniel
TI Concretization of Abstract Traffic Scene Specifications Using
   Metaheuristic Search
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Assurance for autonomous vehicles; scenario description language;
   traffic scene concretization; metaheuristic search
ID MULTIOBJECTIVE OPTIMIZATION; EVOLUTIONARY ALGORITHM; MODEL; NETWORK
AB Existing safety assurance approaches for autonomous vehicles (AVs) perform system-level safety evaluation by placing the AV-under-test in challenging traffic scenarios captured by abstract scenario specifications and investigated in realistic traffic simulators. As a first step towards scenario-based testing of AVs, the initial scene of a traffic scenario must be concretized. In this context, the scene concretization challenge takes as input a high-level specification of abstract traffic scenes and aims to map them to concrete scenes where exact numeric initial values are defined for each attribute of a vehicle (e.g. position or velocity). In this paper, we propose a traffic scene concretization approach that places vehicles on realistic road maps such that they satisfy an extensible set of abstract constraints defined by an expressive scene specification language which also supports static detection of inconsistencies. Then, abstract constraints are mapped to corresponding numeric constraints, which are solved by metaheuristic search with customizable objective functions and constraint aggregation strategies. We conduct a series of experiments over three realistic road maps to compare eight configurations of our approach with three variations of the state-of-the-art Scenic tool, and to evaluate its scalability.
C1 [Babikian, Aren A.; Varro, Daniel] McGill Univ, Dept Elect & Comp Engn, Montreal, PQ H3A 0G4, Canada.
   [Semerath, Oszkar; Varro, Daniel] Budapest Univ Technol & Econ, Dept Measurement & Informat Syst, H-1111 Budapest, Hungary.
   [Varro, Daniel] Linkoping Univ, Dept Comp & Informat Sci, S-58183 Linkoping, Sweden.
C3 McGill University; Budapest University of Technology & Economics;
   Linkoping University
RP Semeráth, O (corresponding author), Budapest Univ Technol & Econ, Dept Measurement & Informat Syst, H-1111 Budapest, Hungary.
EM aren.babikian@mail.mcgill.ca; semerath@mit.bme.hu; daniel.varro@liu.se
RI Varro, Daniel/C-5447-2015
OI Babikian, Aren/0000-0002-8108-0043; Semerath, Oszkar/0000-0002-3592-5105
FU NSERC
FX No Statement Available
CR Alexander R., 2015, Situation Coverage-A Coverage Criterion for Testing Autonomous Robots
   Althoff M, 2018, IEEE INT VEH SYM, P1326, DOI 10.1109/IVS.2018.8500374
   [Anonymous], 2018, ISO 26262-1
   [Anonymous], 2019, ISO/PAS Standard 21448
   Arcuri A, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1, DOI 10.1145/1985793.1985795
   Babikian A. A., 2020, P 23 ACM IEEE INT C, P1
   Babikian AA, 2022, SOFTW SYST MODEL, V21, P1763, DOI 10.1007/s10270-021-00918-6
   Bach J, 2016, IEEE INT VEH SYM, P1149, DOI 10.1109/IVS.2016.7535534
   Bagschik G, 2018, IEEE INT VEH SYM, P1813, DOI 10.1109/IVS.2018.8500632
   Ben Abdessalem R, 2018, IEEE INT CONF AUTOM, P143, DOI 10.1145/3238147.3238192
   Ben Abdessalem R, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1016, DOI 10.1145/3180155.3180160
   Ben Abdessalem R, 2016, IEEE INT CONF AUTOM, P63, DOI 10.1145/2970276.2970311
   Blank J, 2020, IEEE ACCESS, V8, P89497, DOI 10.1109/ACCESS.2020.2990567
   Cai ZX, 2006, IEEE T EVOLUT COMPUT, V10, P658, DOI 10.1109/TEVC.2006.872344
   Calò A, 2020, IEEE INT CONF SOFTW, P375, DOI 10.1109/ICST46399.2020.00045
   Das I, 1998, SIAM J OPTIMIZ, V8, P631, DOI 10.1137/S1052623496307510
   Deb K, 2002, IEEE T EVOLUT COMPUT, V6, P182, DOI 10.1109/4235.996017
   Deb K, 2014, IEEE T EVOLUT COMPUT, V18, P577, DOI 10.1109/TEVC.2013.2281535
   Deb K, 2007, GECCO 2007: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOL 1 AND 2, P1187
   Dosovitskiy A., 2017, P 1 ANN C ROB LEARN, P1, DOI DOI 10.48550/ARXIV.1711.03938
   Everingham M, 2010, INT J COMPUT VISION, V88, P303, DOI 10.1007/s11263-009-0275-4
   Fan Z, 2017, IEEE C EVOL COMPUTAT, P209, DOI 10.1109/CEC.2017.7969315
   Fisher R., 1932, Statistical Methods for Research Workers, DOI DOI 10.1007/978-1-4612-4380-96
   Fremont DJ, 2019, PROCEEDINGS OF THE 40TH ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION (PLDI '19), P63, DOI 10.1145/3314221.3314633
   Gambi A, 2019, PROCEEDINGS OF THE 28TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA '19), P318, DOI 10.1145/3293882.3330566
   Geyer S, 2014, IET INTELL TRANSP SY, V8, P183, DOI 10.1049/iet-its.2012.0188
   Gopan D, 2004, LECT NOTES COMPUT SC, V2988, P512
   Haddock CK, 1998, PSYCHOL METHODS, V3, P339, DOI 10.1037/1082-989X.3.3.339
   Haq FU, 2023, PROC INT CONF SOFTW, P1814, DOI 10.1109/ICSE48619.2023.00155
   Hempen T, 2018, L N INST COMP SCI SO, V222, P153, DOI 10.1007/978-3-319-93710-6_17
   Jackson D, 2002, ACM T SOFTW ENG METH, V11, P256, DOI 10.1145/505145.505149
   Jahangirova G, 2021, IEEE INT CONF SOFTW, P194, DOI 10.1109/ICST49551.2021.00030
   Katebi H, 2011, LECT NOTES COMPUT SC, V6695, P343
   Klischat M, 2019, IEEE INT VEH SYM, P2352, DOI 10.1109/IVS.2019.8814230
   Klück F, 2018, IEEE INT SYMP SOFTW, P118, DOI 10.1109/ISSREW.2018.00-20
   Majumdar R, 2021, LECT NOTES COMPUT SC, V12649, P172, DOI 10.1007/978-3-030-71500-7_9
   Majzik I, 2019, 2019 ACM/IEEE 22ND INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS 2019), P89, DOI 10.1109/MODELS.2019.00-12
   MANN HB, 1947, ANN MATH STAT, V18, P50, DOI 10.1214/aoms/1177730491
   Marussy K, 2020, J OBJECT TECHNOL, V19, DOI 10.5381/jot.2020.19.3.a12
   Menzel T, 2019, IEEE INT VEH SYM, P2383, DOI 10.1109/IVS.2019.8814099
   Menzel T, 2018, IEEE INT VEH SYM, P1821, DOI 10.1109/IVS.2018.8500406
   NVIDIA, Virtual-based safety testing for self-driving cars from NVIDIA drive sim
   O'Kelly M, 2018, ADV NEUR IN, V31
   Panichella A., 2015, PROC 8 IEEE INT C SO
   González CP, 2018, NUNCIUS SERIES, V3, P1, DOI 10.1163/9789004298873_002
   Queiroz R, 2019, IEEE INT VEH SYM, P287, DOI 10.1109/IVS.2019.8814107
   Ray T, 2009, STUD COMPUT INTELL, V198, P145
   Riccio V, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P876, DOI 10.1145/3368089.3409730
   Rocklage E., 2017, IEEE INT C INTELL TR, P476, DOI [10.1109/ITSC.2017.8317919, DOI 10.1109/ITSC.2017.8317919]
   Sagiv M, 2002, ACM T PROGR LANG SYS, V24, P217, DOI 10.1145/514188.514190
   Scholtes M, 2021, IEEE ACCESS, V9, P59131, DOI 10.1109/ACCESS.2021.3072739
   Schuldt F., 2018, Automotive Systems Engineering II, P147
   Schutt B., 2020, PROC 23 ACMIEEE INT, P114, DOI 10.1145/3365438.3410933
   Semeráth O, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P969, DOI 10.1145/3180155.3180186
   Sen S, 2009, LECT NOTES COMPUT SC, V5563, P148, DOI 10.1007/978-3-642-02408-5_11
   Siyu Wu, 2021, 2021 IEEE 1st International Conference on Digital Twins and Parallel Intelligence (DTPI), P399, DOI 10.1109/DTPI52967.2021.9540200
   Soltana G, 2020, ACM T SOFTW ENG METH, V29, DOI 10.1145/3381032
   Soltana G, 2017, IEEE INT CONF AUTOM, P872, DOI 10.1109/ASE.2017.8115698
   Steimle M, 2021, IEEE ACCESS, V9, P147828, DOI 10.1109/ACCESS.2021.3123504
   Szalay Z, 2019, ADV INTELL SYST COMP, V867, P954, DOI 10.1007/978-3-030-01370-7_74
   Ul Haq F, 2022, PROC INT CONF SOFTW, P811, DOI 10.1145/3510003.3510188
   Ulbrich S, 2015, IEEE INT C INTELL TR, P982, DOI 10.1109/ITSC.2015.164
   Urbieta I, 2021, APPL SCI-BASEL, V11, DOI 10.3390/app11177782
   Vargha A, 2000, J EDUC BEHAV STAT, V25, P101, DOI 10.3102/10769986025002101
   Wang Y, 2008, IEEE T EVOLUT COMPUT, V12, P80, DOI 10.1109/TEVC.2007.902851
   Xie EZ, 2021, ADV NEUR IN, V34
   Yu CQ, 2021, INT J COMPUT VISION, V129, P3051, DOI 10.1007/s11263-021-01515-2
   Zhong ZY, 2023, IEEE T SOFTWARE ENG, V49, P1860, DOI 10.1109/TSE.2022.3195640
   Zhu Z, 2019, IEEE I CONF COMP VIS, P593, DOI 10.1109/ICCV.2019.00068
NR 69
TC 0
Z9 0
U1 3
U2 3
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JAN
PY 2024
VL 50
IS 1
BP 48
EP 68
DI 10.1109/TSE.2023.3331254
PG 21
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA EQ4Q6
UT WOS:001140380900004
OA hybrid, Green Submitted
DA 2024-08-05
ER

PT J
AU Peldszus, S
   Bürger, J
   Jürjens, J
AF Peldszus, Sven
   Buerger, Jens
   Juerjens, Jan
TI UMLsecRT: Reactive Security Monitoring of Java Applications With
   Round-Trip Engineering
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Security; runtime monitoring; security monitoring; security mitigation;
   round-trip engineering; UML; UMLsec; security by design; model-based
   development
ID SOFTWARE; TIME; REFLECTION; SYSTEMS
AB Today's software systems tend to be long-living and often process security-critical data, so keeping up with ever-changing security measures, attacks, and mitigations is critical to maintaining their security. While it has become common practice to consider security aspects during the design of a system, OWASP still identifies insecure design as one of the top 10 threats to security. Furthermore, even if the planned design is secure, verifying that the planned security assumptions hold at run-time and investigating any violations that may have occurred is cumbersome. In particular, the configuration of run-time monitors such as the Java Security Manager, which could enforce design-time security assumptions, is non-trivial and therefore used in practice rarely. To address these challenges, we present UMLsecRT for automatically supporting model-based security engineering with run-time monitoring of design-time security specifications and round-trip engineering for propagating run-time observations to the design level. Following the established security-by-design approach UMLsec, security experts annotate system models with security properties that UMLsecRT automatically synchronizes with corresponding source code annotations for the automatic configuration of UMLsecRT's run-time monitor. To this end, UMLecRT monitors these security properties at run-time without additional effort to specify monitoring policies. Developers can define mitigations for attacks detected at run-time in advance by adjusting the automatically synchronized annotations at implementation time. Triggered by a security violation, UMLsecRT can adapt the design-time models based on run-time findings to facilitate the investigation of security violations. We evaluated UMLsecRT concerning its effectiveness and applicability to security violations extracted from real-world attacks and the DaCapo benchmark, conducted user studies on the usability of the adapted models and the feasibility of UMLsecRT in practice, especially concerning countermeasures, and investigated the scalability of UMLsecRT. To study the applicability of the whole development process, we applied UMLsecRT in two case studies to the Eclipse Secure Storage and the electronic health record system iTrust.
C1 [Peldszus, Sven] Ruhr Univ Bochum, D-44801 Bochum, Germany.
   [Buerger, Jens] Conciso GmbH, D-44269 Dortmund, Germany.
   [Juerjens, Jan] Univ Koblenz, D-56070 Koblenz, Germany.
   [Juerjens, Jan] Fraunhofer Inst Software & Syst Engn ISST, D-44227 Dortmund, Germany.
C3 Ruhr University Bochum; University of Koblenz & Landau; Fraunhofer
   Gesellschaft
RP Peldszus, S (corresponding author), Ruhr Univ Bochum, D-44801 Bochum, Germany.
EM sven.peldszus@rub.de
RI Peldszus, Sven/HGB-6952-2022
OI Peldszus, Sven/0000-0002-2604-0487
FU German Federal Ministry of Education and Research (BMBF)
FX No Statement Available
CR Ahmadian AS, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P989, DOI 10.1145/3106237.3122823
   Aktug I, 2008, ELECTRON NOTES THEOR, V197, P45, DOI 10.1016/j.entcs.2007.10.013
   Almorsy M., 2012, Proceedings, V4, P279
   Alphonce C., 2003, Companion of the 18th annual ACM SIGPLAN conference on Object-oriented programming, systems, languages, and applications OOPSLA '03, 26-30 October 2003, Anaheim, California USA, P80
   [Anonymous], 2012, Tech. Rep. MD 20755-6738
   [Anonymous], 2021, OWASP Top 10: A04:2021-Insecuredesign
   [Anonymous], 2016, EU project page: Visual privacy management in user centric open environments (VisiOn), DOI [10.3030/653642, DOI 10.3030/653642]
   [Anonymous], 2018, DaCapo Benchmark
   [Anonymous], ?About us"
   [Anonymous], ECLIPSE
   Apache Foundation, Xerces
   Apache Foundation, Lucene
   Apache Foundation, Nutch
   Apache Foundation, Tomcat
   Apache Foundation, Log4j
   Apvrille A, 2005, IEEE SECUR PRIV, V3, P10, DOI 10.1109/MSP.2005.103
   Arzt S, 2014, ACM SIGPLAN NOTICES, V49, P259, DOI [10.1145/2666356.2594299, 10.1145/2594291.2594299]
   Assal H, 2018, PROCEEDINGS OF THE FOURTEENTH SYMPOSIUM ON USABLE PRIVACY AND SECURITY, P281
   Azureus Software Inc, Azureus/Vuze
   Bauer L, 2009, ACM T SOFTW ENG METH, V18, DOI 10.1145/1525880.1525882
   Bell D. E., 1973, Tech. Rep. 2547
   Ben Othmane L, 2017, DATA SCI ENG, V2, P107, DOI 10.1007/s41019-016-0019-8
   Best B, 2007, PROC INT CONF SOFTW, P581
   Black P.E., 2018, Technical report, NIST TN 1995, DOI [10.6028/NIST.TN.1995, DOI 10.6028/NIST.TN.1995]
   Blackburn SM, 2006, ACM SIGPLAN NOTICES, V41, P169, DOI 10.1145/1167515.1167488
   Bodden E, 2007, LECT NOTES COMPUT SC, V4839, P22
   Boussaha MR, 2018, LECT NOTES COMPUT SC, V10723, P160, DOI 10.1007/978-3-319-75650-9_11
   Bruneliere Hugo., 2010, P IEEEACM INT C AUTO, P173
   Brunsfeld Max, 2023, Zenodo
   Bürger J, 2018, J SYST SOFTWARE, V139, P142, DOI 10.1016/j.jss.2018.02.003
   Bürger J, 2015, P INT COMP SOFTW APP, P153, DOI 10.1109/COMPSAC.2015.72
   Burger J., 2019, Recovering security in model-based software engineering by context-driven co-evolution
   Cawthra J., 2020, NIST Special Publication, V1800-25
   Chen F, 2005, LECT NOTES COMPUT SC, V3440, P546
   Chess B, 2004, IEEE SECUR PRIV, V2, P76, DOI 10.1109/MSP.2004.111
   Chiba S, 2000, LECT NOTES COMPUT SC, V1850, P313
   Chiba Shigeru., JAVASSIST
   Christantoni I., 2017, VisiOn EU Project, Tech. Rep., DOI [10.3030/653642, DOI 10.3030/653642]
   Colombo C, 2009, SEFM 2009: SEVENTH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING AND FORMAL METHODS, P33, DOI 10.1109/SEFM.2009.13
   Colombo C, 2009, LECT NOTES COMPUT SC, V5596, P135, DOI 10.1007/978-3-642-03240-0_13
   Costa G, 2010, COMPUT SECUR, V29, P74, DOI 10.1016/j.cose.2009.07.005
   d'Amorim M., 2005, ACM SIGSOFT SOFTWARE, V30, P1
   D'Angelo B, 2005, 12TH INTERNATIONAL SYMPOSIUM ON TEMPORAL REPRESENTATION AND REASONING, PROCEEDINGS, P166, DOI 10.1109/TIME.2005.26
   Dangel A., PMD source code analyzer
   Das S, 2018, INT CONF UTIL CLOUD, P201, DOI 10.1109/UCC-Companion.2018.00057
   Dewitte P, 2019, SAC '19: PROCEEDINGS OF THE 34TH ACM/SIGAPP SYMPOSIUM ON APPLIED COMPUTING, P1512, DOI 10.1145/3297280.3297595
   Dougherty C., 2009, Tech. Rep. CMU/SEI-2009-TR-010
   Eclipse Contributors, 2013, Tech. Rep.
   Eden AH, 2018, SOFTWARE QUAL J, V26, P249, DOI 10.1007/s11219-017-9363-9
   Elkamel A, 2016, I C COMP SYST APPLIC
   eMoflon Developer Team, eMoflon-A tool for building tools
   Estefan J. A., 2007, Incose MBSE Focus Group, V25, P1
   Evans D, 2002, IEEE SOFTWARE, V19, P42, DOI 10.1109/52.976940
   Fakhroutdinov K., UML-Diagrams
   FasterXML, Jackson
   Gärtner S, 2014, INT REQUIR ENG CONF, P103, DOI 10.1109/RE.2014.6912252
   Gamma E., JUnit
   Gamma Erich, JHotDraw
   Gegick M, 2007, INFORM SOFTWARE TECH, V49, P381, DOI 10.1016/j.infsof.2006.06.002
   Gilbert D., JFreeChart
   Gosling J., 2015, JAVA LANGUAGE SPECIF
   Haldar V, 2005, 21st Annual Computer Security Applications Conference, Proceedings, P274
   Halle S., 2011, A small demo: Monitoring Java programs with BeepBeep
   Hallé S, 2008, IEEE INT ENTERP DIST, P63, DOI 10.1109/EDOC.2008.32
   Hallé S, 2016, LECT NOTES COMPUT SC, V10012, P68, DOI 10.1007/978-3-319-46982-9_6
   Heckman S. S., Requirements of the iTrust electronic health care system
   Heckman S, 2018, PROC INT CONF SOFTW, P1, DOI 10.1145/3183377.3183393
   Hettel T, 2008, LECT NOTES COMPUT SC, V5063, P31, DOI 10.1007/978-3-540-69927-9_3
   Hiet G., 2008, P INT C RISKS SEC IN, P265
   International Organization for Standardization (ISO), 2007, IEC International Standard 62304:2006
   Ion I, 2007, TWENTY-THIRD ANNUAL COMPUTER SECURITY APPLICATIONS CONFERENCE, PROCEEDINGS, P233, DOI 10.1109/ACSAC.2007.36
   ISCOE N, 1991, 13TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P340, DOI 10.1109/ICSE.1991.130660
   Jedlitschka A., 2008, Guide to Advanced Empirical Software Engineering
   Johnson G., QuickUML
   Johnson R., 2022, The Spring Framework-Reference Documentation
   Jürjens J, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P683, DOI 10.1145/1368088.1368186
   Jurjens J., 2002, "UML" 2002 - Unified Modeling Language. Model Engineering, Concepts, and Tools. 5th International Conference. Proceedings (Lecture Notes in Computer Science Vol.2460), P412
   Jurjens J., 2018, CARiSMA
   Khan RA, 2021, IEEE ACCESS, V9, P19139, DOI 10.1109/ACCESS.2021.3052311
   Khomh F, 2011, J SYST SOFTWARE, V84, P559, DOI 10.1016/j.jss.2010.11.921
   Kiczales G, 1997, LECT NOTES COMPUT SC, V1241, P220, DOI 10.1007/BFb0053381
   Kim B.-J., 2020, J. Syst. Softw. (JSS), V169, P1
   Kim M, 2004, FORM METHOD SYST DES, V24, P129, DOI 10.1023/B:FORM.0000017719.43755.7c
   Kong J., 2006, Proceedings of the 1st workshop on Archi- tectural and system support for improving software dependability, P18
   Kreindl J, 2021, PROCEEDINGS OF THE 18TH ACM SIGPLAN INTERNATIONAL CONFERENCE ON MANAGED PROGRAMMING LANGUAGES AND RUNTIMES (MPLR '2021), P70, DOI 10.1145/3475738.3480939
   Lallchandani JT, 2011, IEEE T SOFTWARE ENG, V37, P737, DOI 10.1109/TSE.2010.112
   Lamb JohnD., JAVA SCI CALCULATOR
   Lanusse Agnes., 2009, Proc. of the Fifth BIBLIOGRAPHY 84 European Conference on Model-Driven Architecture Foundations and Applications ECMDA-FA 2009, P1
   Leblebici E, 2017, LECT NOTES COMPUT SC, V10202, P191, DOI 10.1007/978-3-662-54494-5_11
   Leblebici E, 2014, LECT NOTES COMPUT SC, V8568, P138
   Lee S, 2017, IEEE INT CONF AUTOM, P252, DOI 10.1109/ASE.2017.8115638
   Li L, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P280, DOI 10.1109/ICSE.2015.48
   Lindholm T., 2014, The Java Virtual Machine Specification, Java SE, DOI [10.5555/2636992, DOI 10.5555/2636992]
   Livshits B, 2005, LECT NOTES COMPUT SC, V3780, P139
   Livshits VB, 2005, USENIX ASSOCIATION PROCEEDINGS OF THE 14TH USENIX SECURITY SYMPOSIUM, P271
   Lloyd J, 2009, LECT NOTES COMPUT SC, V5795, P77, DOI 10.1007/978-3-642-04425-0_7
   Massey AK, 2010, REQUIR ENG, V15, P119, DOI 10.1007/s00766-009-0089-5
   McCarney R, 2007, BMC MED RES METHODOL, V7, DOI 10.1186/1471-2288-7-30
   Meneely A., iTrust electronic health care system case study
   Mirakhorli Mehdi, 2020, ACM SIGSOFT Software Engineering Notes, V45, P25, DOI 10.1145/3385678.3385687
   MITRE Corporation, 2019, Common weakness enumeration
   Moha N, 2010, IEEE T SOFTWARE ENG, V36, P20, DOI 10.1109/TSE.2009.50
   Morin B., 2010, Proceedings of the IEEE/ACM international conference on Automated software engineering - ASE, V10, P205, DOI [10.1145/1858996.1859040, DOI 10.1145/1858996.1859040]
   Mullan S., 2021, JEP 411: Deprecate the Java security manager for removal
   Murphy G. C., 1998, ACM Transactions on Software Engineering and Methodology, V7, P158, DOI 10.1145/279310.279314
   Nagowah L, 2013, 2013 INTERNATIONAL CONFERENCE OF INFORMATION AND COMMUNICATION TECHNOLOGY (ICOICT), P381, DOI 10.1109/ICoICT.2013.6574606
   Near J.P., 2014, P 29 ACMIEEE INT C A, P587
   Object Management Group (OMG), 2017, UML 2.5.1 superstructure specification
   Ognawala S, 2016, IEEE INT CONF AUTOM, P780, DOI 10.1145/2970276.2970281
   Oracle, Tech. Rep.
   Oracle, Java agent API
   Oracle, Java debug interface (JDI)
   Oracle, OpenJDK
   Peldszus S., 2015, P INT C PRINCIPLES P, P138, DOI DOI 10.1145/2807426.2807438
   Peldszus S., 2020, Visual Privacy Management, P77
   Peldszus S., 2020, P WORKSH EV MAINT LO, P1
   Peldszus S., 2022, Security compliance in model-driven development of software systems in presence of long-term evolution and variants
   Peldszus S., 2020, UMLsecRT replication package, DOI [10.5281/zenodo.8387495, DOI 10.5281/ZENODO.8387495]
   Peldszus S, 2021, DATA KNOWL ENG, V134, DOI 10.1016/j.datak.2021.101907
   Peldszus S, 2019, 2019 ACM/IEEE 22ND INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS 2019), P23, DOI 10.1109/MODELS.2019.00-18
   Peldszus S, 2018, PROCEEDINGS OF THE 17TH ACM SIGPLAN INTERNATIONAL CONFERENCE ON GENERATIVE PROGRAMMING: CONCEPTS AND EXPERIENCES (GPCE'18), P93, DOI 10.1145/3278122.3278126
   Peldszus S, 2016, IEEE INT CONF AUTOM, P578, DOI 10.1145/2970276.2970338
   Pestov S., JEdit
   Pivotal Software, 2019, Spring framework
   Ribeiro C., 2001, P NETW DISTR SYST SE, P1
   Rumpe B., 2017, Agile Modeling with UML: Code Generation, Testing, Refactoring
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Salnitri M, 2017, SOFTW SYST MODEL, V16, P737, DOI 10.1007/s10270-015-0499-4
   Santos JCS, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE WORKSHOPS (ICSAW), P220, DOI 10.1109/ICSAW.2017.25
   Schurr Andy., 1995, P 20 WORKSHOP GRAPH, V903, P151
   Shostack A., 2014, Threat Modeling: Designing for Security
   Siveroni I, 2010, REQUIR ENG, V15, P95, DOI 10.1007/s00766-009-0091-y
   Souag A, 2013, 2013 IEEE 37TH ANNUAL COMPUTER SOFTWARE AND APPLICATIONS CONFERENCE WORKSHOPS (COMPSACW), P101, DOI 10.1109/COMPSACW.2013.124
   Staicu CA, 2018, 25TH ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2018), DOI 10.14722/ndss.2018.23071
   Störrle H, 2018, SOFTW SYST MODEL, V17, P115, DOI 10.1007/s10270-016-0529-x
   Storrle Harald., 2017, Proceedings of the 21st International Conference on Evaluation and Assessment in Software Engineering, P160, DOI [10.1145/3084226.3084256, DOI 10.1145/3084226.3084256]
   Taentzer G, 2018, LECT NOTES COMPUT SC, V10802, P3, DOI 10.1007/978-3-319-89363-1_1
   Tempero E, 2010, ASIA PAC SOFWR ENG, P336, DOI 10.1109/APSEC.2010.46
   The Eclipse Foundation, 2019, Papyrus modeling environment
   The Eclipse Foundation, MoDisco
   The Eclipse Foundation, Aspect J
   Thomas A., GanttProject
   Tsipenyuk K, 2005, IEEE SECUR PRIV, V3, P81, DOI 10.1109/MSP.2005.159
   Tuma K, 2023, SOFTW SYST MODEL, V22, P273, DOI 10.1007/s10270-022-00991-5
   Tuma K, 2019, 2019 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE (ICSA), P191, DOI 10.1109/ICSA.2019.00028
   Ujhelyi Z, 2014, 2014 SOFTWARE EVOLUTION WEEK - IEEE CONFERENCE ON SOFTWARE MAINTENANCE, REENGINEERING, AND REVERSE ENGINEERING (CSMR-WCRE), P293, DOI 10.1109/CSMR-WCRE.2014.6747181
   Vanherpen K., 2015, P S THEOR MOD SIM D, P55
   W. Group, 2016, OpenJDK issue 8155588
   Wagner TA, 1998, ACM T PROGR LANG SYS, V20, P980, DOI 10.1145/293677.293678
   Wendykier P., JTransforms
   Xiao L, 2009, INFORM SOFTWARE TECH, V51, P933, DOI 10.1016/j.infsof.2008.05.005
   Xu R, 2005, IEEE T NEURAL NETWOR, V16, P645, DOI 10.1109/TNN.2005.845141
   Zogaan W, 2017, INT REQUIR ENG CONF, P110, DOI 10.1109/RE.2017.80
NR 153
TC 0
Z9 0
U1 5
U2 5
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JAN
PY 2024
VL 50
IS 1
BP 16
EP 47
DI 10.1109/TSE.2023.3326366
PG 32
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA EQ4Q6
UT WOS:001140380900003
DA 2024-08-05
ER

PT J
AU Ghorbani, N
   Singh, T
   Garcia, J
   Malek, S
AF Ghorbani, Negar
   Singh, Tarandeep
   Garcia, Joshua
   Malek, Sam
TI Darcy: Automatic Architectural Inconsistency Resolution in Java
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Software Architecture; Java Platform Module System; Architectural
   Inconsistency; Software Analysis; Software Repair
ID SOFTWARE ARCHITECTURE; DESIGN; IMPLEMENTATION; MODELS; SYSTEM
AB Many mainstream programming languages lack extensive support for architectural constructs, such as software components, which limits software developers in employing many benefits of architecture-based development. To address this issue, Java, one of the most popular and widely-used programming languages, has introduced the Java Platform Module System (JPMS) in its 9th and subsequent versions. JPMS provides the notion of architectural constructs, i.e., software components, as an encapsulation of modules that helps developers construct and maintain large applications efficiently-as well as improving the encapsulation, security, and maintainability of Java applications in general and the JDK itself. However, ensuring that module declarations reflect the actual usage of modules in an application remains a challenge that results in developers mistakenly introducing inconsistent module dependencies at both compile- and run-time. In this paper, we studied JPMS properties and architectural notions in-depth and defined a defect model consisting of eight inconsistent modular dependencies that may arise in Java applications. Based on this defect model, we also present Darcy, a framework that leverages the defect model and static analysis techniques to automatically detect and repair the specified inconsistent dependencies within Java applications at both compile- and run-time. The results of our experiments, conducted over 52 open-source Java 9+ applications, indicate that architectural inconsistencies are widespread and demonstrate Darcy's effectiveness for automated resolution of these inconsistencies.
C1 [Ghorbani, Negar; Singh, Tarandeep; Garcia, Joshua; Malek, Sam] Univ Calif Irvine, Dept Informat, Irvine, CA 92697 USA.
C3 University of California System; University of California Irvine
RP Ghorbani, N (corresponding author), Univ Calif Irvine, Dept Informat, Irvine, CA 92697 USA.
EM negargh@uci.edu; tarandes@uci.edu; joshug4@uci.edu; malek@uci.edu
FU National Science Foundation
FX No Statement Available
CR Abi-Antoun M., 2005, P ACM SIGSOFT SOFTW, V30, P7
   Aldrich J, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P187, DOI 10.1109/ICSE.2002.1007967
   Aldrich J., 2014, P INT WORKSH AL CAP, P11
   [Anonymous], "Soot GitHub issue
   ANTLR, About us
   Bittencourt RA, 2009, EUR CON SFTWR MTNCE, P251, DOI 10.1109/CSMR.2009.28
   Bouwers E, 2014, PROC IEEE INT CONF S, P211, DOI 10.1109/ICSME.2014.43
   BRIAND LC, 1993, CONFERENCE ON SOFTWARE MAINTENANCE 1993, CSM-93: PROCEEDINGS, P88
   Buckley J, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P1291, DOI 10.1109/ICSE.2013.6606700
   Caporuscio M., 2005, P INT WORKSH RAP INT, P18
   Christl A, 2005, WCRE: 12TH WORKING CONFERENCE ON REVERSE ENGINEERING 2005, PROCEEDINGS, P89
   Constantinou E., 2011, Proceedings of the 2011 15th Panhellenic Conference on Informatics (PCI 2011), P166, DOI 10.1109/PCI.2011.36
   Constantinou E, 2011, Arxiv, DOI arXiv:1110.1992
   Constantinou E, 2015, J SYST SOFTWARE, V107, P142, DOI 10.1016/j.jss.2015.05.065
   crummy, "Beautiful Soup," Segfault
   Dann A, 2021, IEEE T SOFTWARE ENG, V47, P1656, DOI 10.1109/TSE.2019.2931331
   Deitel P., UNDERSTANDING JAVA 9
   Deitel P.J., 2017, Java 9 for Programmers
   Diaz-Pace JA, 2009, 2009 JOINT WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE AND EUROPEAN CONFERENCE ON SOFTWARE ARCHITECTURE, P151, DOI 10.1109/WICSA.2009.5290801
   docs.oracle, API specification for the Java platform, standard edition: Class ServiceLoader
   Ducasse S, 2009, IEEE T SOFTWARE ENG, V35, P573, DOI 10.1109/TSE.2009.19
   Elmer F. -J., "Classycle: Analysing tools for Java class and package dependencies
   Garcia J, 2018, ACM T SOFTW ENG METH, V26, DOI 10.1145/3162625
   Garcia J, 2013, IEEE INT CONF AUTOM, P486, DOI 10.1109/ASE.2013.6693106
   Ghorbani N, 2019, PROC INT CONF SOFTW, P560, DOI 10.1109/ICSE.2019.00067
   GitHub, ABOUT US
   Godfrey M. W., 2000, P 2 S CONSTR SOFTW E, P23
   google, Darcy++ web page
   Gosling J., Techn. Rep.
   Grundy J, 2000, INT J SOFTW ENG KNOW, V10, P713, DOI 10.1142/S0218194000000341
   Gurgel A., 2014, P 13 INT C MOD NEW Y, P61
   Hammad MM, 2022, IEEE 19TH INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE (ICSA 2022), P36, DOI 10.1109/ICSA53651.2022.00012
   Hendren L, "Uses of the soot framework
   Ivkovic I, 2003, PROG COMPREHEN, P266
   Koschke R, 2003, 10TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P36, DOI 10.1109/WCRE.2003.1287235
   Koschke R., 2006, Software Engineering, P140
   Koschke R, 2009, SOFTWARE QUAL J, V17, P331, DOI 10.1007/s11219-009-9077-8
   Lakos J., 1996, Large -Scale C++ Software Design, P217
   Lam Patrick, 2011, Cetus Users and Compiler Infastructure Workshop, V15, P35
   Lambers L, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P716, DOI 10.1145/3180155.3180258
   Lau KK, 2007, IEEE T SOFTWARE ENG, V33, P709, DOI 10.1109/TSE.2007.70726
   Le DM, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P235, DOI 10.1109/MSR.2015.29
   Li ZM, 2022, PROC INT CONF SOFTW, P1545, DOI 10.1145/3510003.3510118
   Lutellier T, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P69, DOI 10.1109/ICSE.2015.136
   Mak P., 2017, Java 9 Modularity: Patterns and Practices forDeveloping Maintainable Applications
   Malek S, 2005, IEEE T SOFTWARE ENG, V31, P256, DOI 10.1109/TSE.2005.29
   Manadhata P., 2004, Measuring a system's attack surface
   Manadhata P.K., 2007, APPROACH MEASURING S
   Manadhata PK, 2011, IEEE T SOFTWARE ENG, V37, P371, DOI 10.1109/TSE.2010.60
   Maqbool O, 2007, IEEE T SOFTWARE ENG, V33, P759, DOI 10.1109/TSE.2007.70732
   Medvidovic N, 2000, IEEE T SOFTWARE ENG, V26, P70, DOI 10.1109/32.825767
   Medvidovic N., 2003, P STRAY REL AN WELF, V3, P61
   Mirakhorli M, 2012, PROC INT CONF SOFTW, P639, DOI 10.1109/ICSE.2012.6227153
   Murphy GC, 2001, IEEE T SOFTWARE ENG, V27, P364, DOI 10.1109/32.917525
   O'Brien L, 2006, 13TH IEEE INTERNATIONAL WORKSHOP ON SOFTWARE TECHNOLOGY AND ENGINEERING PRACTICE, PROCEEDINGS, P81
   octoverse, "The State of the Octoverse 2017." Dribbble
   oracle, "ServiceLoader (Java SE 9 & JDK 9)
   osgi, OSGI Alliance
   "Project Jigsaw, OpenJDK
   Qiu DH, 2015, INT J SOFTW ENG KNOW, V25, P701, DOI 10.1142/S0218194015500072
   Radjenovic A, 2008, SEVENTH WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE, PROCEEDINGS, P199, DOI 10.1109/WICSA.2008.30
   Reinhold M., JSR 376 JAVA PLATFOR
   Sangal N, 2005, ACM SIGPLAN NOTICES, V40, P167, DOI 10.1145/1103845.1094824
   Sefika M, 1996, PROC INT CONF SOFTW, P387, DOI 10.1109/ICSE.1996.493433
   Shahbazian A., 2018, P IEEE INT C SOFTW A
   Shaheen M.R., 2008, QAOOSE 2008-Proceedings, P21
   Sharan K., 2017, Java 9 Revealed, V7, P7
   SHAW M, 1995, IEEE T SOFTWARE ENG, V21, P314, DOI 10.1109/32.385970
   Shi C., 2022, Ph.D. dissertation
   Shtern Mark, 2012, Advances in Software Engineering, DOI 10.1155/2012/792024
   Song H, 2011, J SYST SOFTWARE, V84, P711, DOI 10.1016/j.jss.2010.12.009
   Taylor Richard N., 2009, Software architecture: foundations, theory, and practice
   TAYLOR RN, 1995, PROC INT CONF SOFTW, P295, DOI 10.1145/225014.225042
   tiobe, "TIOBE Index for August 2018
   Tran JB, 2000, PROG COMPREHEN, P48, DOI 10.1109/WPC.2000.852479
   Ubayashi N., 2010, Proceedings of the 32nd ACM/IEEE International Conference on Software Engineering, V1, P75
   Vallee-Rai Raja, 2010, CASCON 1 DECADE HIGH, P214, DOI DOI 10.1145/1925805.1925818
   van Deursen A, 2004, FOURTH WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE (WICSA 2004), PROCEEDINGS, P122, DOI 10.1109/WICSA.2004.1310696
   van Ommering R, 2000, COMPUTER, V33, P78, DOI 10.1109/2.825699
   Wang Y, 2021, IEEE T SOFTWARE ENG, V48, P2295, DOI 10.1109/TSE.2021.3057767
   Wang Y, 2021, PROC INT CONF SOFTW, P99, DOI 10.1109/ICSE43902.2021.00022
   Wang Y, 2020, PROC INT CONF SOFTW, P125, DOI 10.1145/3377811.3380426
   Wang Y, 2019, PROC INT CONF SOFTW, P572, DOI 10.1109/ICSE.2019.00068
   Wang Y, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P319, DOI 10.1145/3236024.3236056
   Yan H, 2004, PROC INT CONF SOFTW, P470, DOI 10.1109/ICSE.2004.1317469
   Yokomori R, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 3, P30, DOI 10.1109/SANER.2016.30
   Zheng YJ, 2018, ACM T SOFTW ENG METH, V27, DOI 10.1145/3229048
   Zheng YJ, 2012, PROC INT CONF SOFTW, P628, DOI 10.1109/ICSE.2012.6227154
NR 88
TC 0
Z9 0
U1 1
U2 1
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUN
PY 2024
VL 50
IS 6
BP 1639
EP 1657
DI 10.1109/TSE.2024.3396433
PG 19
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA UL2G2
UT WOS:001248142900005
OA Green Submitted
DA 2024-08-05
ER

PT J
AU Barzolevskaia, A
   Branca, E
   Stakhanova, N
AF Barzolevskaia, Anna
   Branca, Enrico
   Stakhanova, Natalia
TI Measuring and Characterizing (Mis)compliance of the Android Permission
   System
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Operating systems; Smart phones; Documentation; Source coding; Codes;
   Guidelines; Runtime; Android; documentation; app; permissions; non-SDK
   restriction lists; security
AB Within the Android mobile operating system, Android permissions act as a system of safeguards designed to restrict access to potentially sensitive data and privileged components. Multiple research studies indicate flaws and limitations of the Android permission system, prompting Google to implement a more regulated and fine-grained permission model. This newly-introduced complexity creates confusion for developers leading to incorrect permissions and a significant risk to users security and privacy. We present a systematic study of theoretical and practical misuse of permissions. For this analysis we derive the unified permissions and call mappings that represent theoretical requirements of permissions and calls. We develop PChecker, an approach that identifies the discrepancies between the official Android permissions documentation and permission implementation in the Android platform source code based on these mappings. We evaluate four versions of the Android Open Source Project code (major versions 10-13) and shed light on the prevalence of discrepancies between the official Android guidelines for permissions and their implementation in the Android platform source code. We further show that these discrepancies result in miscompliance in third-party Android apps.
C1 [Barzolevskaia, Anna; Branca, Enrico; Stakhanova, Natalia] Univ Saskatchewan, Dept Comp Sci, Saskatoon, SK S7N 5C9, Canada.
C3 University of Saskatchewan
RP Stakhanova, N (corresponding author), Univ Saskatchewan, Dept Comp Sci, Saskatoon, SK S7N 5C9, Canada.
EM jhu168@mail.usask.ca; enrico.branca@usask.ca; natalia@cs.usask.ca
NR 0
TC 0
Z9 0
U1 0
U2 0
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD APR
PY 2024
VL 50
IS 4
BP 742
EP 764
DI 10.1109/TSE.2024.3362921
PG 23
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA OC2K3
UT WOS:001204993400012
DA 2024-08-05
ER

PT J
AU Hwang, S
   Lee, S
   Ryu, S
AF Hwang, Sungjae
   Lee, Sungho
   Ryu, Sukyoung
TI An Empirical Study of JVMs' Behaviors on Erroneous JNI Interoperations
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Java native interface; Java virtual machine; testing; empirical study;
   debugging
AB Java Native Interface (JNI) allows Java applications to access native libraries, but it is challenging to develop correct JNI programs. By leveraging native code, the JNI enables Java developers to implement efficient applications and reuse code written in other programming languages such as C and C++. The core Java libraries use the JNI to provide system features like graphical user interfaces, and mainstream Java Virtual Machines (JVMs) support the JNI. However, implementing correct JNI programs is not trivial due to the complex interoperation semantics between different programming languages. While JVMs do not validate JNI interoperations by default because of the performance overhead, they provide two methods. First, JVMs report the interoperation failures defined in the JNI specification at runtime. Second, they support a debug option, which validates JNI interoperations, degrading the runtime performance. To the best of our knowledge, literature has not thoroughly studied the quality of JVMs' methods, even though erroneous JNI interoperations may result in incorrect behaviors. In this paper, we empirically study the behaviors of JVMs on erroneous JNI interoperations. For a systematic study, we propose JUSTGen, a semi-automatic tool that generates JNI test programs incurring erroneous interoperations from the JNI specification. JUSTGen receives the JNI specification written in our domain-specific language (DSL) and automatically discovers cases that may lead to runtime errors on interoperations using an SMT solver. It then generates test programs that trigger the behaviors on the erroneous cases. Using the generated tests, we empirically evaluate JVM's failure handling mechanisms and the debug option capabilities on erroneous JNI interoperations. Our experiment results show that there exist erroneous cases in which JVMs do not handle failures or handle them differently from the specification. We also found that the JNI debug option does not validate thousands of erroneous cases, which can cause critical runtime errors such as memory corruption and violation of the Java type system. We reported 18 erroneous cases of which JVMs do not handle failures correctly to their respective vendors. Among them, 16 cases have been resolved.
C1 [Hwang, Sungjae] Sungkyunkwan Univ, Dept Comp Sci & Engn, Suwon 16419, South Korea.
   [Lee, Sungho] Chungnam Natl Univ, Dept Comp Sci & Engn, Daejeon 34134, South Korea.
   [Ryu, Sukyoung] Korea Adv Inst Sci & Technol, Sch Comp, Daejeon 34141, South Korea.
C3 Sungkyunkwan University (SKKU); Chungnam National University; Korea
   Advanced Institute of Science & Technology (KAIST)
RP Hwang, S (corresponding author), Sungkyunkwan Univ, Dept Comp Sci & Engn, Suwon 16419, South Korea.
EM sungjaeh@skku.edu; eshaj@cnu.ac.kr; sryu.cs@kaist.ac.kr
RI ; Ryu, Sukyoung/A-8543-2015
OI Hwang, Sungjae/0000-0001-5386-2411; Ryu, Sukyoung/0000-0002-0019-9772;
   Lee, SungHo/0000-0002-7107-5590
FU National Research Foundation of Korea (NRF)
FX No Statement Available
CR [Anonymous], Java SE documentation-JNI design overview
   [Anonymous], Azul Zing
   [Anonymous], Troubleshooting: JNI checklist
   [Anonymous], JNI TIPS
   [Anonymous], JSON-RPC API
   [Anonymous], Docker
   [Anonymous], 2021 Java technology report
   [Anonymous], The Z3 theorem prover
   [Anonymous], OpenJ9
   [Anonymous], The -Xcheck:jni option
   [Anonymous], ANDROID RUNTIME ART
   [Anonymous], Buffer overflow
   [Anonymous], Java SE HotSpot at a glance
   [Anonymous], GraalVM
   Atlidakis V, 2019, PROC INT CONF SOFTW, P748, DOI 10.1109/ICSE.2019.00083
   Boyapati C., 2002, Software Engineering Notes, V27, P123, DOI 10.1145/566171.566191
   Chen YT, 2019, PROC INT CONF SOFTW, P1257, DOI 10.1109/ICSE.2019.00127
   Chen YT, 2016, ACM SIGPLAN NOTICES, V51, P85, DOI [10.1145/2908080.2908095, 10.1145/2980983.2908095]
   Clarke E, 2003, TIME-ICTL 2003: 10TH INTERNATIONAL SYMPOSIUM ON TEMPORAL REPRESENTATION AND REASONING AND FOURTH INTERNATIONAL CONFERENCE ON TEMPORAL LOGIC, PROCEEDINGS, P7
   Dahiya M., 2017, Hardware and Software: Verification and Testing: 13th International Haifa Verification Conference, HVC 2017, Haifa, Israel, November 13-15, 2017, Proceedings 13, P19
   Even-Mendoza K, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-022-10146-1
   FREEMAN T, 1991, SIGPLAN NOTICES, V26, P268, DOI 10.1145/113446.113468
   Freund SN, 2003, J AUTOM REASONING, V30, P271, DOI 10.1023/A:1025011624925
   Gu YC, 2017, I C DEPEND SYS NETWO, P427, DOI 10.1109/DSN.2017.40
   Hwang S., Explanation of refinements
   Hwang S., A study of unspecified cases in the JNI specification
   Hwang S., GitHub
   Hwang S, 2021, PROC INT CONF SOFTW, P1708, DOI 10.1109/ICSE43902.2021.00151
   Ieee standard for floating-point arithmetic, 2019, 7542008 IEEE, P1, DOI [10.1109/IEEESTD.2008.4610935, DOI 10.1109/IEEESTD.2008.4610935]
   Jana S, 2016, PROCEEDINGS OF THE 25TH USENIX SECURITY SYMPOSIUM, P345
   Khurshid S., 2004, Automated Software Engineering, V11, P403, DOI 10.1023/B:AUSE.0000038938.10589.b9
   Kim E, 2021, 28TH ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2021), DOI 10.14722/ndss.2021.24365
   Lee S, 2020, IEEE INT CONF AUTOM, P127, DOI 10.1145/3324884.3416558
   Li SL, 2009, CCS'09: PROCEEDINGS OF THE 16TH ACM CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P442
   Park J, 2021, PROC INT CONF SOFTW, P13, DOI 10.1109/ICSE43902.2021.00015
   Park J, 2020, IEEE INT CONF AUTOM, P647, DOI 10.1145/3324884.3416632
   Sirer EG, 1999, USENIX ASSOCIATION PROCEEDINGS OF THE 2ND CONFERENCE ON DOMAIN-SPECIFIC LANGUAGES (DSL'99), P1
   Tan G., 2008, P 17 USENIX SECURITY, P365
   Tan G, 2006, P 2006 IEEE INT S SE, P97
   Tan G, 2010, LECT NOTES COMPUT SC, V6461, P114, DOI 10.1007/978-3-642-17164-2_9
   Tian C, 2019, ACM T SOFTW ENG METH, V28, DOI 10.1145/3355048
   Wei FG, 2018, PROCEEDINGS OF THE 2018 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY (CCS'18), P1137, DOI 10.1145/3243734.3243835
   Yang XJ, 2011, PLDI 11: PROCEEDINGS OF THE 2011 ACM CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P283
   Yoshikawa T, 2003, THIRD INTERNATIONAL CONFERENCE ON QUALITY SOFTWARE, PROCEEDINGS, P20, DOI 10.1109/QSIC.2003.1319081
NR 44
TC 0
Z9 0
U1 1
U2 1
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD APR
PY 2024
VL 50
IS 4
BP 979
EP 994
DI 10.1109/TSE.2024.3373239
PG 16
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA OC2K3
UT WOS:001204993400010
DA 2024-08-05
ER

PT J
AU Schafer, M
   Nadi, S
   Eghbali, A
   Tip, F
AF Schafer, Max
   Nadi, Sarah
   Eghbali, Aryaz
   Tip, Frank
TI An Empirical Evaluation of Using Large Language Models for Automated
   Unit Test Generation
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Test generation; JavaScript; language models
ID SELECTION
AB Unit tests play a key role in ensuring the correctness of software. However, manually creating unit tests is a laborious task, motivating the need for automation. Large Language Models (LLMs) have recently been applied to various aspects of software development, including their suggested use for automated generation of unit tests, but while requiring additional training or few-shot learning on examples of existing tests. This paper presents a large-scale empirical evaluation on the effectiveness of LLMs for automated unit test generation without requiring additional training or manual effort. Concretely, we consider an approach where the LLM is provided with prompts that include the signature and implementation of a function under test, along with usage examples extracted from documentation. Furthermore, if a generated test fails, our approach attempts to generate a new test that fixes the problem by re-prompting the model with the failing test and error message. We implement our approach in TESTPILOT, an adaptive LLM-based test generation tool for JavaScript that automatically generates unit tests for the methods in a given project's API. We evaluate TESTPILOT using OpenAI's gpt3.5-turbo LLM on 25 npm packages with a total of 1,684 API functions. The generated tests achieve a median statement coverage of 70.2% and branch coverage of 52.8%. In contrast, the state-of-the feedback-directed JavaScript test generation technique, Nessie, achieves only 51.3% statement coverage and 25.6% branch coverage. Furthermore, experiments with excluding parts of the information included in the prompts show that all components contribute towards the generation of effective test suites. We also find that 92.8% of TESTPILOT's generated tests have <= 50% similarity with existing tests (as measured by normalized edit distance), with none of them being exact copies. Finally, we run TESTPILOT with two additional LLMs, OpenAI's older code-cushman-002 LLM and StarCoder, an LLM for which the training process is publicly documented. Overall, we observed similar results with the former (68.2% median statement coverage), and somewhat worse results with the latter (54.0% median statement coverage), suggesting that the effectiveness of the approach is influenced by the size and training set of the LLM, but does not fundamentally depend on the specific model.
C1 [Schafer, Max] GitHub, Kidlington OX5 1AY, England.
   [Nadi, Sarah] Univ Alberta, Dept Comp Sci, Edmonton, AB T6G 2E8, Canada.
   [Eghbali, Aryaz] Univ Stuttgart, D-70569 Stuttgart, Baden Wurttembe, Germany.
   [Tip, Frank] Northeastern Univ, Khoury Coll Comp Sci, Boston, MA 02115 USA.
C3 University of Alberta; University of Stuttgart; Northeastern University
RP Schafer, M (corresponding author), GitHub, Kidlington OX5 1AY, England.
EM max-schaefer@github.com; nadi@ualberta.ca; aryaz.egh@gmail.com;
   f.tip@northeastern.edu
RI Eghbali, Aryaz/JLL-2695-2023
OI Eghbali, Aryaz/0000-0001-9763-8147; Tip, Frank/0000-0002-1862-3498;
   Nadi, Sarah/0000-0002-0091-6030
FU National Science Foundation
FX No Statement Available
CR Allamanis M., 2018, PROC 6 INT C LEARN R
   Allamanis M, 2021, ADV NEUR IN, V34
   Almasi MM, 2017, 2017 IEEE/ACM 39TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2017), P263, DOI 10.1109/ICSE-SEIP.2017.27
   Andreasen E, 2017, ACM COMPUT SURV, V50, DOI 10.1145/3106739
   [Anonymous], OpenAI LLMs: Deprecations
   [Anonymous], StarCoder: A State-of-the-Art LLM for Code-huggingface
   [Anonymous], Github copilot
   [Anonymous], Codeql
   [Anonymous], npm levenshtein distance package
   [Anonymous], OpenAI Codex
   [Anonymous], 2023, The Daikon invariant detector
   [Anonymous], Node.js error codes
   Arteca E, 2022, PROC INT CONF SOFTW, P1494, DOI 10.1145/3510003.3510106
   Artzi S, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P571, DOI 10.1145/1985793.1985871
   Brown TB, 2020, Arxiv, DOI [arXiv:2005.14165, 10.48550/arXiv.2005.14165, DOI 10.48550/ARXIV.2005.14165]
   Bareiss P., 2022, PROC 37 ACMIEEE INT
   Beck K., 2000, Extreme Programming Explained: Embrace Change
   Bei Chen, 2022, Arxiv, DOI arXiv:2207.10397
   Cadar C., 2006, CCS '06: Proceedings of the 13th ACM conference on Computer and communications security, New York, NY, USA, P322, DOI 10.1145/1180405.1180445
   Chen M., 2021, arXiv, DOI DOI 10.48550/ARXIV.2107.03374
   CLIFF N, 1993, PSYCHOL BULL, V114, P494, DOI 10.1037/0033-2909.114.3.494
   Csallner C, 2004, SOFTWARE PRACT EXPER, V34, P1025, DOI 10.1002/spe.602
   Daka E, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P107, DOI 10.1145/2786805.2786838
   Daka E, 2014, PROC INT SYMP SOFTW, P201, DOI 10.1109/ISSRE.2014.11
   Devlin J, 2019, Arxiv, DOI arXiv:1810.04805
   Dinella E, 2022, PROC INT CONF SOFTW, P2130, DOI 10.1145/3510003.3510141
   Fard A. M., 2014, Proceedings of the 29th ACM/IEEE International Conference on Automated Software Engineering, ASE'14, P67, DOI 10.1145/2642937.2642991
   Fard AM, 2015, IEEE INT CONF AUTOM, P190, DOI 10.1109/ASE.2015.26
   Fraser G., 2011, Proceedings of the 11th International Conference on Quality Software (QSIC 2011), P31, DOI 10.1109/QSIC.2011.19
   Fraser G, 2011, P 19 ACM SIGSOFT S 1, P416, DOI 10.1145/2025113.2025179
   Godefroid P, 2005, ACM SIGPLAN NOTICES, V40, P213, DOI 10.1145/1064978.1065036
   Grano G, 2018, INT C PROGRAM COMPRE, P348, DOI 10.1145/3196321.3196363
   Gupta R, 2017, AAAI CONF ARTIF INTE, P1345
   Hellendoorn V. J., 2020, PROC 8 INT C LEARN R
   istanbul.js, Istanbul coverage tool
   Just R, 2014, ISSTA 2014, P437, DOI [10.1145/2610384.2628055, DOI 10.1145/2610384.2628055]
   Karampatsis RM, 2020, PROC INT CONF SOFTW, P1073, DOI 10.1145/3377811.3380342
   Kim S, 2021, PROC INT CONF SOFTW, P150, DOI 10.1109/ICSE43902.2021.00026
   Lahiri SK, 2023, Arxiv, DOI arXiv:2208.05950
   Lemieux C, 2023, PROC INT CONF SOFTW, P919, DOI 10.1109/ICSE48619.2023.00085
   Lewis M, 2019, Arxiv, DOI arXiv:1910.13461
   Li GD, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P449, DOI 10.1145/2635868.2635913
   Li J, 2018, PROCEEDINGS OF THE TWENTY-SEVENTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P4159
   Li YJ, 2022, SCIENCE, V378, P1092, DOI 10.1126/science.abq1158
   Liu Z., 2023, PROC ACM SIGSOFT INT, P859
   Marchetto A, 2011, EMPIR SOFTW ENG, V16, P103, DOI 10.1007/s10664-010-9149-1
   Mastropaolo A., 2022, IEEE Transactions on Software Engineering, P1
   Mastropaolo A, 2021, PROC INT CONF SOFTW, P336, DOI 10.1109/ICSE43902.2021.00041
   McMinn P., 2011, 2011 IEEE Fourth International Conference on Software Testing, Verification and Validation Workshops (ICSTW), P153, DOI 10.1109/ICSTW.2011.100
   Mezzetti G., 2018, PROC 32 EUR C OBJECT, V109, p7:1
   MILLER BP, 1990, COMMUN ACM, V33, P32, DOI 10.1145/96267.96279
   Mirshokraie Shabnam, 2015, 2015 IEEE 8th International Conference on Software Testing, Verification and Validation (ICST), DOI 10.1109/ICST.2015.7102595
   Mirshokraie Shabnam, 2012, Web Engineering. Proceedings 12th International Conference, ICWE 2012, P238, DOI 10.1007/978-3-642-31753-8_18
   Mirshokraie S, 2013, IEEE INT CONF AUTOM, P610, DOI 10.1109/ASE.2013.6693121
   Mocha, about us
   Myers G, 1999, J ACM, V46, P395, DOI 10.1145/316542.316550
   Pacheco C., 2007, OOPSLA 2007 COMPANIO, P815
   Pacheco Carlos., 2008, International Symposium on Software Testing and Analysis (ISSTA), P87
   Palomba F, 2016, 2016 IEEE/ACM 9TH INTERNATIONAL WORKSHOP ON SEARCH-BASED SOFTWARE TESTING (SBST), P5, DOI [10.1109/SBST.2016.010, 10.1145/2897010.2897016]
   Panichella A, 2020, PROC IEEE INT CONF S, P523, DOI 10.1109/ICSME46990.2020.00056
   Panichella A, 2018, IEEE T SOFTWARE ENG, V44, P122, DOI 10.1109/TSE.2017.2663435
   Pradel M, 2018, P ACM PROGRAM LANG, V2, DOI 10.1145/3276517
   Pradel M, 2022, COMMUN ACM, V65, P86, DOI 10.1145/3460348
   Reynolds L, 2021, Arxiv, DOI [arXiv:2102.07350, DOI 10.48550/ARXIV.2102.07350]
   Saxena P, 2010, P IEEE S SECUR PRIV, P513, DOI 10.1109/SP.2010.38
   Schleimer S., 2003, Proceedings of the 2003 ACM SIGMOD International Conference on Management of Data, P76, DOI [10.1145/872757.872770, DOI 10.1145/872757.872770]
   Schuler D., 2011, Proceedings 2011 IEEE Fourth International Conference on Software Testing, Verification and Validation (ICST 2011), P90, DOI 10.1109/ICST.2011.32
   Selakovic M, 2018, P ACM PROGRAM LANG, V2, DOI 10.1145/3276531
   Sen Koushik, 2005, Proc. ESEC/FSE, DOI 10.1145/1081706.1081750
   Shore J., 2021, The Art of Agile Development, V2nd
   Siddiqui S., 2021, Learning Test-Driven Development
   Stallenberg D, 2022, LECT NOTES COMPUT SC, V13711, P67, DOI 10.1007/978-3-031-21251-2_5
   Svyatkovskiy A, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P1433, DOI 10.1145/3368089.3417058
   Tanida H., 2014, PROC 9 INT C SOFTWAR, P259
   Tillmann N., 2014, PROC ACMIEEE INT C A, P385, DOI [10.1145/2642937, DOI 10.1145/2642937]
   Tufano M., 2021, Unit test case generation with transformers and focal context
   Tufano M, 2022, 3RD ACM/IEEE INTERNATIONAL CONFERENCE ON AUTOMATION OF SOFTWARE TEST (AST 2022), P54, DOI 10.1145/3524481.3527220
   Watson C, 2020, PROC INT CONF SOFTW, P1398, DOI 10.1145/3377811.3380429
   Yoo S, 2012, SOFTW TEST VERIF REL, V22, P67, DOI [10.1002/stv.430, 10.1002/stvr.430]
   Yu H, 2022, PROC INT CONF SOFTW, P163, DOI 10.1145/3510003.3510149
   Zalewski M., American fuzzy lop
NR 81
TC 3
Z9 3
U1 27
U2 29
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JAN
PY 2024
VL 50
IS 1
BP 85
EP 105
DI 10.1109/TSE.2023.3334955
PG 21
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA EQ4Q6
UT WOS:001140380900008
OA Green Submitted
DA 2024-08-05
ER

PT J
AU Yang, Z
   Xu, BW
   Zhang, JM
   Kang, HJ
   Shi, JK
   He, JD
   Lo, DV
AF Yang, Zhou
   Xu, Bowen
   Zhang, Jie M.
   Kang, Hong Jin
   Shi, Jieke
   He, Junda
   Lo, David
TI Stealthy Backdoor Attack for Code Models
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Adversarial attack; data poisoning; backdoor attack; pre-trained models
   of code
AB Code models, such as CodeBERT and CodeT5, offer general-purpose representations of code and play a vital role in supporting downstream automated software engineering tasks. Most recently, code models were revealed to be vulnerable to backdoor attacks. A code model that is backdoor-attacked can behave normally on clean examples but will produce pre-defined malicious outputs on examples injected with triggers that activate the backdoors. Existing backdoor attacks on code models use unstealthy and easy-to-detect triggers. This paper aims to investigate the vulnerability of code models with stealthy backdoor attacks. To this end, we propose Afraidoor (Adversarial Feature as Adaptive Backdoor). Afraidoor achieves stealthiness by leveraging adversarial perturbations to inject adaptive triggers into different inputs. We apply Afraidoor to three widely adopted code models (CodeBERT, PLBART, and CodeT5) and two downstream tasks (code summarization and method name prediction). We evaluate three widely used defense methods and find that Afraidoor is more unlikely to be detected by the defense methods than by baseline methods. More specifically, when using spectral signature as defense, around 85% of adaptive triggers in Afraidoor bypass the detection in the defense process. By contrast, only less than 12% of the triggers from previous work bypass the defense. When the defense method is not applied, both Afraidoor and baselines have almost perfect attack success rates. However, once a defense is applied, the attack success rates of baselines decrease dramatically, while the success rate of Afraidoor remains high. Our finding exposes security weaknesses in code models under stealthy backdoor attacks and shows that state-of-the-art defense methods cannot provide sufficient protection. We call for more research efforts in understanding security threats to code models and developing more effective countermeasures.
C1 [Yang, Zhou; Shi, Jieke; He, Junda; Lo, David] Singapore Management Univ, Sch Comp & Informat Syst, Singapore 178902, Singapore.
   [Xu, Bowen] North Carolina State Univ, Raleigh, NC 27695 USA.
   [Zhang, Jie M.] Kings Coll London, London WC2R 2LS, England.
   [Kang, Hong Jin] Univ Calif Los Angeles, Los Angeles, CA 90095 USA.
C3 Singapore Management University; North Carolina State University;
   University of London; King's College London; University of California
   System; University of California Los Angeles
RP Xu, BW (corresponding author), North Carolina State Univ, Raleigh, NC 27695 USA.
EM zyang@smu.edu.sg; bxu22@ncsu.edu; jie.zhang@kcl.ac.uk;
   hjkang@g.ucla.edu; jiekeshi@smu.edu.sg; jundahe@smu.edu.sg;
   davidlo@smu.edu.sg
RI ; Lo, David/A-2493-2012
OI Yang, Zhou/0000-0001-5938-1918; Lo, David/0000-0002-4367-7201; SHI,
   Jieke/0000-0002-0799-5018; Xu, Bowen/0000-0002-1006-8493
FU National Research Foundation
FX No Statement Available
CR Ahmad WU, 2021, 2021 CONFERENCE OF THE NORTH AMERICAN CHAPTER OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS: HUMAN LANGUAGE TECHNOLOGIES (NAACL-HLT 2021), P2655
   Allamanis M, 2016, PR MACH LEARN RES, V48
   Alon U., 2019, P 7 INT C LEARNING R
   Alon U, 2019, P ACM PROGRAM LANG, V3, DOI 10.1145/3290353
   Applis L, 2021, 2021 36TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING ASE 2021, P1377, DOI 10.1109/ASE51524.2021.9678706
   Asyrofi Muhammad Hilmi, 2021, ESEC/FSE 2021: Proceedings of the 29th ACM Joint Meeting on European Software Engineering Conference and Symposium on the Foundations of Software Engineering, P1575, DOI 10.1145/3468264.3473124
   Asyrofi MH, 2021, PROC IEEE INT CONF S, P674, DOI 10.1109/ICSME52107.2021.00079
   Asyrofi MH, 2022, IEEE T SOFTWARE ENG, V48, P5087, DOI 10.1109/TSE.2021.3136169
   Bagdasaryan E, 2021, PROCEEDINGS OF THE 30TH USENIX SECURITY SYMPOSIUM, P1505
   Brockschmidt M., 2019, PROC 7 INT C LEARN R
   Chen BY, 2018, Arxiv, DOI arXiv:1811.03728
   Chen GK, 2023, IEEE T DEPEND SECURE, V20, P3970, DOI 10.1109/TDSC.2022.3220673
   Chen XY, 2021, 37TH ANNUAL COMPUTER SECURITY APPLICATIONS CONFERENCE, ACSAC 2021, P554, DOI 10.1145/3485832.3485837
   Chen XY, 2017, Arxiv, DOI arXiv:1712.05526
   Cheng X, 2022, PROCEEDINGS OF THE 31ST ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, ISSTA 2022, P519, DOI 10.1145/3533767.3534371
   Cheng Xiao, 2022, IEEE Trans. Dependable Secure Comput, P1
   Cito J, 2022, 2022 ACM/IEEE 44TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE (ICSE-SEIP 2022), P125, DOI [10.1145/3510457.3513081, 10.1109/ICSE-SEIP55303.2022.9794112]
   Dai JZ, 2019, IEEE ACCESS, V7, P138872, DOI 10.1109/ACCESS.2019.2941376
   Devlin J, 2019, 2019 CONFERENCE OF THE NORTH AMERICAN CHAPTER OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS: HUMAN LANGUAGE TECHNOLOGIES (NAACL HLT 2019), VOL. 1, P4171
   Doan Khoa, 2021, ADV NEURAL INFORM PR, V34, P18944
   Du K, 2020, ANN COMPUT SECURITY, P597, DOI 10.1145/3427228.3427258
   Feng ZY, 2020, FINDINGS OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, EMNLP 2020, P1536
   Fernandes P., 2019, PROC 7 INT C LEARN R, P1
   Gong C, 2022, PROCEEDINGS OF THE 38TH ANNUAL COMPUTER SECURITY APPLICATIONS CONFERENCE, ACSAC 2022, P186, DOI 10.1145/3564625.3564636
   Gong C, 2024, Arxiv, DOI arXiv:2210.04688
   Gong QY, 2019, PROCEEDINGS OF THE 28TH ACM INTERNATIONAL CONFERENCE ON INFORMATION & KNOWLEDGE MANAGEMENT (CIKM '19), P1251, DOI 10.1145/3357384.3357971
   Gu TY, 2019, IEEE ACCESS, V7, P47230, DOI 10.1109/ACCESS.2019.2909068
   Guo D., 2021, PROC 9 INT C LEARN R
   Haoti Zhong, 2020, CODASPY'20. Proceedings of the Tenth ACM Conference on Data and Application Security and Privacy, P97, DOI 10.1145/3374664.3375751
   He JD, 2022, INT C PROGRAM COMPRE, P1, DOI 10.1145/3524610.3527897
   Henkel J, 2022, EUR CON SFTWR MTNCE, P526, DOI 10.1109/SANER53432.2022.00070
   High-Level Expert Group on AI, 2019, Rep.
   Husain H, 2020, Arxiv, DOI arXiv:1909.09436
   Goodfellow IJ, 2015, Arxiv, DOI [arXiv:1412.6572, DOI 10.48550/ARXIV.1412.6572]
   Jha A, 2023, AAAI CONF ARTIF INTE, P14892
   Jia JY, 2021, AAAI CONF ARTIF INTE, V35, P7961
   Doan K, 2021, 2021 IEEE/CVF INTERNATIONAL CONFERENCE ON COMPUTER VISION (ICCV 2021), P11946, DOI 10.1109/ICCV48922.2021.01175
   Kurita K, 2020, 58TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (ACL 2020), P2793
   Li SF, 2021, CCS '21: PROCEEDINGS OF THE 2021 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P3123, DOI 10.1145/3460120.3484576
   Li YZ, 2021, 2021 IEEE/CVF INTERNATIONAL CONFERENCE ON COMPUTER VISION (ICCV 2021), P16443, DOI 10.1109/ICCV48922.2021.01615
   Li Z, 2022, PROC INT CONF SOFTW, P1906, DOI 10.1145/3510003.3510181
   Lin C., 2004, PROC 20 INT C COMPUT
   Liu YQ, 2018, 25TH ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2018), DOI 10.14722/ndss.2018.23291
   Liu YH, 2019, Arxiv, DOI [arXiv:1907.11692, DOI 10.48550/ARXIV.1907.11692]
   Lu S., 2021, PROC NEURAL INF PROC
   Madry A, 2018, INT C LEARN REPR, DOI 10.48550/arXiv.1706.06083
   Nguyen PT, 2021, 2021 36TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING ASE 2021, P253, DOI 10.1109/ASE51524.2021.9678946
   Pour MV, 2021, IEEE INT CONF SOFTW, P36, DOI 10.1109/ICST49551.2021.00016
   Qi F., 2021, PROC C EMPIRICAL MET, P4569, DOI [DOI 10.18653/V1/2021.EMNLP-MAIN.374, 10. 18653/v1/2021.emnlp-main.374]
   Qi FC, 2021, 59TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS AND THE 11TH INTERNATIONAL JOINT CONFERENCE ON NATURAL LANGUAGE PROCESSING (ACL-IJCNLP 2021), VOL 1, P4873
   Qi FC, 2021, 2021 CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING (EMNLP 2021), P9558
   Rabin MRI, 2021, INFORM SOFTWARE TECH, V135, DOI 10.1016/j.infsof.2021.106552
   Radford A., 2019, OpenAI blog, V1, P9
   Ramakrishnan G, 2022, INT C PATT RECOG, P2892, DOI 10.1109/ICPR56361.2022.9956690
   Schuster R, 2021, PROCEEDINGS OF THE 30TH USENIX SECURITY SYMPOSIUM, P1559
   Severi G, 2021, PROCEEDINGS OF THE 30TH USENIX SECURITY SYMPOSIUM, P1487
   Srikant S., 2021, PROC 9 INT C LEARN R
   Sui YL, 2020, P ACM PROGRAM LANG, V4, DOI 10.1145/3428301
   Sun ZS, 2022, PROCEEDINGS OF THE ACM WEB CONFERENCE 2022 (WWW'22), P652, DOI 10.1145/3485447.3512225
   Sutskever I., 2014, Advances in Neural Information Processing Systems, P3104
   Tang D, 2021, PROCEEDINGS OF THE 30TH USENIX SECURITY SYMPOSIUM, P1541
   Teugels Jozef L, 2014, WILEY STATSREF STAT, DOI [10.1002/9781118445112, DOI 10.1002/9781118445112]
   Tran B, 2018, ADV NEUR IN, V31
   van der Maaten L, 2008, J MACH LEARN RES, V9, P2579
   Wan Y, 2022, PROCEEDINGS OF THE 30TH ACM JOINT MEETING EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, ESEC/FSE 2022, P1233, DOI 10.1145/3540250.3549153
   Wang BL, 2019, P IEEE S SECUR PRIV, P707, DOI 10.1109/SP.2019.00031
   Wang HY, 2020, PROC INT CONF SOFTW, P727, DOI 10.1145/3377811.3380379
   Wang Y, 2021, 2021 CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING (EMNLP 2021), P8696
   Wang ZT, 2022, PROC CVPR IEEE, P15054, DOI 10.1109/CVPR52688.2022.01465
   Wei HH, 2017, PROCEEDINGS OF THE TWENTY-SIXTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P3034
   WILCOXON F, 1946, J ECON ENTOMOL, V39, P269, DOI 10.1093/jee/39.2.269
   Xie XF, 2019, PROCEEDINGS OF THE 28TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA '19), P146, DOI 10.1145/3293882.3330579
   Xiaojun Xu, 2021, 2021 IEEE Symposium on Security and Privacy (SP), P103, DOI [10.1109/ICECE54449.2021.9674456, 10.1109/SP40001.2021.00034]
   Yang CR, 2022, EUR CON SFTWR MTNCE, P385, DOI 10.1109/SANER53432.2022.00054
   Yang WK, 2021, 2021 CONFERENCE OF THE NORTH AMERICAN CHAPTER OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS: HUMAN LANGUAGE TECHNOLOGIES (NAACL-HLT 2021), P2048
   Yang Wenkai, 2021, P 59 ANN M ASS COMP, V1, P5543, DOI [DOI 10.18653/V1/2021.ACL-LONG.431, 10.18653/v1/2021.acl-long.431]
   Yang YM, 2022, ACM COMPUT SURV, V54, DOI 10.1145/3505243
   Yang Z, 2022, EUR CON SFTWR MTNCE, P408, DOI 10.1109/SANER53432.2022.00056
   Yang Z, 2022, PROC INT CONF SOFTW, P1482, DOI 10.1145/3510003.3510146
   Yang Z, 2021, PROC IEEE INT CONF S, P644, DOI 10.1109/ICSME52107.2021.00073
   Yang Z, 2021, PROCEEDINGS OF THE 29TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '21), P1540, DOI 10.1145/3468264.3473117
   Yefet N, 2020, P ACM PROGRAM LANG, V4, DOI 10.1145/3428230
   Zhai J, 2020, PROC INT CONF SOFTW, P1359, DOI 10.1145/3377811.3380427
   Zhang HZ, 2020, AAAI CONF ARTIF INTE, V34, P1169
   Zhang JM, 2022, IEEE T SOFTWARE ENG, V48, P1, DOI 10.1109/TSE.2019.2962027
   Zhang KC, 2022, INT C PROGRAM COMPRE, P378, DOI 10.1145/3524610.3527905
   Zhang Q, 2021, ISSTA '21: PROCEEDINGS OF THE 30TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P127, DOI 10.1145/3460319.3464809
   Zhao Z, 2024, ACM T SOFTW ENG METH, V33, DOI 10.1145/3631977
NR 88
TC 0
Z9 0
U1 2
U2 2
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD APR
PY 2024
VL 50
IS 4
BP 721
EP 741
DI 10.1109/TSE.2024.3361661
PG 21
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA OC2K3
UT WOS:001204993400001
OA Green Accepted, Green Submitted
DA 2024-08-05
ER

PT J
AU Huang, Q
   Li, ZS
   Xing, ZC
   Zuo, ZK
   Peng, X
   Xu, XW
   Lu, QH
AF Huang, Qing
   Li, Zishuai
   Xing, Zhenchang
   Zuo, Zhengkang
   Peng, Xin
   Xu, Xiwei
   Lu, Qinghua
TI Answering Uncertain, Under-Specified API Queries Assisted by
   Knowledge-Aware Human-AI Dialogue
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Pragmatics; Behavioral sciences; Semantics; Decision trees; Knowledge
   graphs; Java; Extensibility; Developers' API need; knowledge graph;
   human-AI dialogue; API recommendation; multi-round question answering
ID CODE SEARCH
AB Developers' API needs should be more pragmatic, such as seeking suggestive, explainable, and extensible APIs rather than the so-called best result. Existing API search research cannot meet these pragmatic needs because they are solely concerned with query-API relevance. This necessitates a focus on enhancing the entire query process, from query definition to query refinement through intent clarification to query results promoting divergent thinking about results. This paper designs a novel Knowledge-Aware Human-AI Dialog agent (KAHAID) which guides the developer to clarify the uncertain, under-specified query through multi-round question answering and recommends APIs for the clarified query with relevance explanation and extended suggestions (e.g., alternative, collaborating or opposite-function APIs). We systematically evaluate KAHAID. In terms of human-AI dialogue process, it achieves a high diversity of question options (the average diversity between any two options is 74.9%) and the ability to guide developers to find APIs using fewer dialogue rounds (no more than 3 rounds on average). For API recommendation, KAHAID achieves an MRR and MAP of 0.769 and 0.794, outperforming state-of-the-art API search approaches BIKER and CLEAR by at least 47% in MRR and 226.7% in MAP. For knowledge extension, KAHAID obtains an MRR and MAP of 0.815 and 0.864, surpassing state-of-the-art query clarification approaches by at least 42% in MRR and 45.2% in MAP. As the first of its kind, KAHAID opens the door to integrating the immediate response capability of API research and the interaction, clarification, explanation, and extensibility capability of social-technical information seeking.
C1 [Huang, Qing; Li, Zishuai; Zuo, Zhengkang] Jiangxi Normal Univ, Sch Comp Informat Engn, Nanchang 330022, Peoples R China.
   [Xing, Zhenchang; Xu, Xiwei; Lu, Qinghua] CSIROs Data61, Canberra 2601, Australia.
   [Peng, Xin] Fudan Univ, Sch Comp Sci, Shanghai 200433, Peoples R China.
   [Peng, Xin] Fudan Univ, Shanghai Key Lab Data Sci, Shanghai 200433, Peoples R China.
C3 Jiangxi Normal University; Commonwealth Scientific & Industrial Research
   Organisation (CSIRO); Fudan University; Fudan University
RP Zuo, ZK (corresponding author), Jiangxi Normal Univ, Sch Comp Informat Engn, Nanchang 330022, Peoples R China.
EM qh@whu.edu.cn; g-a-lzs@jxnu.edu.cn; zhenchang.xing@data61.csiro.au;
   zuo803@jxnu.edu.cn; pengxin@fudan.edu.cn; Xiwei.Xu@data61.csiro.au;
   Qinghua.Lu@data61.csiro.au
RI Liu, Liu/JXM-8208-2024; Lu, Qinghua/AAG-3378-2021; zhao,
   sheng/JWO-6127-2024; liu, sha/JXL-6600-2024; Wang, Yanan/JVZ-7957-2024;
   Liu, Jingyi/JWP-6326-2024; lin, yuan/JXL-9592-2024; wang,
   xueting/JPY-2782-2023; Xu, Xiwei/AAD-6098-2020; Lu,
   Qinghua/IXD-3445-2023
OI Xing, Zhenchang/0000-0001-7663-1421; Lu, Qinghua/0000-0002-9466-1672;
   Peng, Xin/0000-0003-3376-2581
FU National Natural Science Foundation of China
FX No Statement Available
CR Bonial C., 2010, CTR COMPUT LANG EDU, P1
   Cai FQ, 2021, INT J SOFTW ENG KNOW, V31, P477, DOI 10.1142/S0218194021500169
   Cao KB, 2021, PROC INT CONF SOFTW, P1273, DOI 10.1109/ICSE43902.2021.00116
   Castle-Green T., 2020, PROC 2 C CONVERSATIO, P1
   Eberhart Z, 2022, EUR CON SFTWR MTNCE, P140, DOI 10.1109/SANER53432.2022.00028
   Eberhart Z, 2021, PROC IEEE INT CONF S, P274, DOI 10.1109/ICSME52107.2021.00031
   Gu XD, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P631, DOI 10.1145/2950290.2950334
   Haiduc S, 2011, CONF PROC INT SYMP C, P234, DOI 10.1109/ICPC.2011.48
   Hssina B., 2014, International Journal of Advanced Computer Science and Applications, V4, P13, DOI [DOI 10.14569/SPECIALISSUE.2014.040203, 10.14569/specialissue.2014.040203]
   Hu G, 2020, SOFTWARE PRACT EXPER, V50, P299, DOI 10.1002/spe.2760
   Huang Q., 2019, Sci. China Inf. Sci., V62, P1
   Huang Q, 2018, IEEE INT CONF AUTOM, P293, DOI 10.1145/3238147.3238191
   Huang Q, 2023, Arxiv, DOI arXiv:2207.05560
   Huang Q, 2020, PROCEEDINGS OF THE 2020 IEEE 27TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER '20), P447, DOI [10.1109/saner48275.2020.9054830, 10.1109/SANER48275.2020.9054830]
   Huang Q, 2019, AUTOMAT SOFTW ENG, V26, P705, DOI 10.1007/s10515-019-00263-5
   Huang Q, 2019, SOFTWARE PRACT EXPER, V49, P1600, DOI 10.1002/spe.2736
   Huang Q, 2018, SOFTWARE PRACT EXPER, V48, P1333, DOI 10.1002/spe.2574
   Li YJ, 2022, SCIENCE, V378, P1092, DOI 10.1126/science.abq1158
   Liu C, 2022, ACM COMPUT SURV, V54, DOI 10.1145/3480027
   Liu MW, 2022, IEEE T SOFTWARE ENG, V48, P4485, DOI 10.1109/TSE.2021.3120203
   Liu Y, 2020, IEEE INT CONF AUTOM, P834, DOI 10.1145/3324884.3416628
   Lv F, 2015, IEEE INT CONF AUTOM, P260, DOI 10.1109/ASE.2015.42
   Mikolov T., 2013, ADV NEURAL INFORM PR, V26, P1, DOI DOI 10.48550/ARXIV.1310.4546
   Nie LM, 2016, IEEE T SERV COMPUT, V9, P771, DOI 10.1109/TSC.2016.2560165
   Ouyang L., 2022, arXiv
   Quinlan J. R., 1986, Machine Learning, V1, P81, DOI 10.1023/A:1022643204877
   Quinlan J R., 2014, C4. 5: Programs for machine learning
   Radev D., 2002, ANN ARBOR, V1001, P48109
   Rahman MM, 2019, EMPIR SOFTW ENG, V24, P1869, DOI 10.1007/s10664-018-9671-0
   Rahman MM, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P349, DOI 10.1109/SANER.2016.80
   Ren XX, 2020, PROC INT CONF SOFTW, P925, DOI 10.1145/3377811.3380430
   Ren XX, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P151, DOI 10.1109/ASE.2019.00024
   Sanderson M., 2008, Introduction to information retrieval, V39
   Sirres R, 2018, EMPIR SOFTW ENG, V23, P2622, DOI 10.1007/s10664-017-9544-y
   Solaiman I, 2021, ADV NEUR IN, V34
   Thung F, 2013, IEEE INT CONF AUTOM, P290, DOI 10.1109/ASE.2013.6693088
   Wei MS, 2022, PROC INT CONF SOFTW, P376, DOI 10.1145/3510003.3510159
   Wu HC, 2008, ACM T INFORM SYST, V26, DOI 10.1145/1361684.1361686
   Xie WK, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P1015, DOI 10.1145/3368089.3409731
   Ye X, 2016, PROC INT CONF SOFTW, P404, DOI 10.1145/2884781.2884862
   Zhang F, 2018, IEEE T SOFTWARE ENG, V44, P1070, DOI 10.1109/TSE.2017.2750682
   Zhang HX, 2021, IEEE T SOFTWARE ENG, V47, P2520, DOI 10.1109/TSE.2019.2954319
NR 42
TC 0
Z9 0
U1 6
U2 6
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD FEB
PY 2024
VL 50
IS 2
BP 280
EP 295
DI 10.1109/TSE.2023.3346954
PG 16
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA IP4I9
UT WOS:001167516600002
OA Green Submitted
DA 2024-08-05
ER

PT J
AU Chen, PZ
   Chen, T
   Li, MQ
AF Chen, Pengzhou
   Chen, Tao
   Li, Miqing
TI MMO: Meta Multi-Objectivization for Software Configuration Tuning
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Software; Tuning; Search problems; Throughput; Optimization; Storms;
   Software systems; Configuration tuning; performance optimization;
   search-based software engineering; multi-objectivization
ID MULTIOBJECTIVE OPTIMIZATION; ALGORITHM; SEARCH
AB Software configuration tuning is essential for optimizing a given performance objective (e.g., minimizing latency). Yet, due to the software's intrinsically complex configuration landscape and expensive measurement, there has been a rather mild success, particularly in preventing the search from being trapped in local optima. To address this issue, in this paper we take a different perspective. Instead of focusing on improving the optimizer, we work on the level of optimization model and propose a meta multi-objectivization (MMO) model that considers an auxiliary performance objective (e.g., throughput in addition to latency). What makes this model distinct is that we do not optimize the auxiliary performance objective, but rather use it to make similarly-performing while different configurations less comparable (i.e. Pareto nondominated to each other), thus preventing the search from being trapped in local optima. Importantly, by designing a new normalization method, we show how to effectively use the MMO model without worrying about its weight-the only yet highly sensitive parameter that can affect its effectiveness. Experiments on 22 cases from 11 real-world software systems/environments confirm that our MMO model with the new normalization performs better than its state-of-the-art single-objective counterparts on 82% cases while achieving up to 2.09x speedup. For 68% of the cases, the new normalization also enables the MMO model to outperform the instance when using it with the normalization from our prior FSE work under pre-tuned best weights, saving a great amount of resources which would be otherwise necessary to find a good weight. We also demonstrate that the MMO model with the new normalization can consolidate recent model-based tuning tools on 68% of the cases with up to 1.22x speedup in general.
C1 [Chen, Pengzhou] Univ Elect Sci & Technol China, Sch Comp Sci & Engn, Chengdu 610054, Peoples R China.
   [Chen, Tao; Li, Miqing] Univ Birmingham, Sch Comp Sci, Birmingham B15 2TT, England.
C3 University of Electronic Science & Technology of China; University of
   Birmingham
RP Chen, T (corresponding author), Univ Birmingham, Sch Comp Sci, Birmingham B15 2TT, England.
EM t.chen@bham.ac.uk
RI Li, Miqing/P-4153-2015
OI Li, Miqing/0000-0002-8607-9607
FU UKRI
FX No Statement Available
CR Abdi H., 2010, Encycl. Res. Des., V1, P1, DOI DOI 10.4135/9781412961288.N178
   Ahmad MA, 2018, IEEE INT CONF HEALT, P447, DOI [10.1109/ICHI.2018.00095, 10.1145/3233547.3233667]
   Alrifai M, 2009, LECT NOTES COMPUT SC, V5472, P190, DOI 10.1007/978-3-642-01247-1_20
   Ansótegui C, 2015, PROCEEDINGS OF THE TWENTY-FOURTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE (IJCAI), P733
   Arcuri A, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1, DOI 10.1145/1985793.1985795
   Behzad B, 2013, INT CONF HIGH PERFOR
   Ben Abdessalem Raja, 2020, ISSTA '20: Proceedings of the 29th ACM SIGSOFT International Symposium on Software Testing and Analysis, P88, DOI 10.1145/3395363.3397386
   Bergstra J, 2012, J MACH LEARN RES, V13, P281
   Bezerra L. C. T., 2020, HIGH PERFORMANCE SIM, V833, P69, DOI DOI 10.1007/978-3-030-18764-4_4
   Bingul Z, 2007, APPL SOFT COMPUT, V7, P791, DOI 10.1016/j.asoc.2006.03.001
   Blewitt ME, 2008, NAT GENET, V40, P663, DOI 10.1038/ng.142
   Blot A, 2019, EVOL COMPUT, V27, P147, DOI 10.1162/evco_a_00240
   Blot A, 2016, LECT NOTES COMPUT SC, V10079, P32, DOI 10.1007/978-3-319-50349-3_3
   Breiman L., 2001, Machine Learning, V45, P5, DOI 10.1023/A:1010933404324
   Buzdalova Arina, 2013, Search Based Software Engineering. 5th International Symposium, SSBSE 2013. Proceedings: LNCS 8084, P300, DOI 10.1007/978-3-642-39742-4_28
   Cai ZX, 2006, IEEE T EVOLUT COMPUT, V10, P658, DOI 10.1109/TEVC.2006.872344
   Chen JJ, 2021, PROC INT CONF SOFTW, P1198, DOI 10.1109/ICSE43902.2021.00110
   Chen T., 2022, I W S E ADAP SM SYS, P84, DOI DOI 10.1145/3524844.3528060
   Chen T, 2023, ACM T SOFTW ENG METH, V32, DOI 10.1145/3571853
   Chen T, 2023, ACM T SOFTW ENG METH, V32, DOI 10.1145/3514233
   Chen T, 2022, EUR CON SFTWR MTNCE, P78, DOI 10.1109/SANER53432.2022.00022
   Chen T, 2021, PROCEEDINGS OF THE 29TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '21), P453, DOI 10.1145/3468264.3468555
   Chen T, 2020, P IEEE, V108, P1094, DOI 10.1109/JPROC.2020.2985293
   Chen T, 2019, INFORM SOFTWARE TECH, V114, P155, DOI 10.1016/j.infsof.2019.05.013
   Chen T, 2019, 2019 IEEE/ACM 14TH INTERNATIONAL SYMPOSIUM ON SOFTWARE ENGINEERING FOR ADAPTIVE AND SELF-MANAGING SYSTEMS (SEAMS 2019), P157, DOI 10.1109/SEAMS.2019.00029
   Chen T, 2018, GECCO'18: PROCEEDINGS OF THE 2018 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P1419, DOI 10.1145/3205455.3205513
   Chen T, 2018, PROCEEDINGS OF THE 2018 ACM/SPEC INTERNATIONAL CONFERENCE ON PERFORMANCE ENGINEERING (ICPE '18), P48, DOI 10.1145/3184407.3184413
   Chen T, 2018, ACM T SOFTW ENG METH, V27, DOI 10.1145/3204459
   Chen T, 2018, ACM COMPUT SURV, V51, DOI 10.1145/3190507
   Chen T, 2017, IEEE T SERV COMPUT, V10, P618, DOI 10.1109/TSC.2015.2499770
   Chen T, 2017, IEEE T SOFTWARE ENG, V43, P453, DOI 10.1109/TSE.2016.2608826
   Cremene M, 2016, APPL SOFT COMPUT, V39, P124, DOI 10.1016/j.asoc.2015.11.012
   Derakhshanfar P, 2020, IEEE INT CONF AUTOM, P211, DOI 10.1145/3324884.3416643
   Ding XA, 2015, INT C PAR DISTRIB SY, P831, DOI 10.1109/ICPADS.2015.112
   Durillo JJ, 2011, ADV ENG SOFTW, V42, P760, DOI 10.1016/j.advengsoft.2011.05.014
   Gao YJ, 2021, PROC INT CONF SOFTW, P175, DOI 10.1109/ICSE43902.2021.00028
   Garvin BJ, 2009, 1ST INTERNATIONAL SYMPOSIUM ON SEARCH BASED SOFTWARE ENGINEERING, PROCEEDINGS, P13, DOI 10.1109/SSBSE.2009.25
   Gerasimou S, 2018, AUTOMAT SOFTW ENG, V25, P785, DOI 10.1007/s10515-018-0235-8
   Gong J., 2024, FSE 24 P ACM SOFTW E, V1, P1
   Gong JZ, 2023, PROCEEDINGS OF THE 31ST ACM JOINT MEETING EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, ESEC/FSE 2023, P858, DOI 10.1145/3611643.3616334
   Gong JZ, 2022, IEEE WORK CONF MIN S, P482, DOI 10.1145/3524842.3528431
   Guo J., 2010, Tech. Rep.
   Han X, 2016, ESEM'16: PROCEEDINGS OF THE 10TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, DOI 10.1145/2961111.2962602
   Harman M, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P342, DOI 10.1109/FOSE.2007.29
   Hierons RM, 2020, ACM T SOFTW ENG METH, V29, DOI 10.1145/3361146
   Hierons RM, 2016, ACM T SOFTW ENG METH, V25, DOI 10.1145/2897760
   Huang CW, 2020, IEEE T EVOLUT COMPUT, V24, P201, DOI 10.1109/TEVC.2019.2921598
   Hutter Frank, 2011, Learning and Intelligent Optimization. 5th International Conference, LION 5. Selected Papers, P507, DOI 10.1007/978-3-642-25566-3_40
   Hutter F, 2009, J ARTIF INTELL RES, V36, P267, DOI 10.1613/jair.2861
   Ishibuchi H, 2007, LECT NOTES COMPUT SC, V4403, P51
   Jamshidi P, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P71, DOI 10.1145/3236024.3236074
   Jamshidi P, 2016, I S MOD ANAL SIM COM, P39, DOI 10.1109/MASCOTS.2016.17
   Jones DR, 1998, J GLOBAL OPTIM, V13, P455, DOI 10.1023/A:1008306431147
   Knowles J, 2005, LECT NOTES COMPUT SC, V3410, P176
   Knowles JD, 2001, LECT NOTES COMPUT SC, V1993, P269
   Krall J, 2015, IEEE T SOFTWARE ENG, V41, P1001, DOI 10.1109/TSE.2015.2432024
   Krishna R, 2022, IEEE T SOFTWARE ENG, V48, P893, DOI 10.1109/TSE.2020.3007560
   Kumar S, 2020, I W S E ADAP SM SYS, P96, DOI 10.1145/3387939.3391604
   Kumar S, 2018, INT C PAR DISTRIB SY, P972, DOI [10.1109/ICPADS.2018.00129, 10.1109/PADSW.2018.8644640]
   Li K, 2020, PROC INT CONF SOFTW, P566, DOI 10.1145/3377811.3380360
   Li K, 2020, IEEE INT CONF AUTOM, P573, DOI 10.1145/3324884.3416617
   Li M, 2014, PROCEEDINGS OF THE 10TH EURO-ASIA CONFERENCE ON ENVIRONMENT AND CORPORATE SOCIAL RESPONSIBILITY: TOURISM, SOCIETY AND EDUCATION SESSION, PT III, P165
   Li MQ, 2022, IEEE T SOFTWARE ENG, V48, P1771, DOI 10.1109/TSE.2020.3036108
   López-Ibáñez M, 2016, OPER RES PERSPECT, V3, P43, DOI 10.1016/j.orp.2016.09.002
   Lukasiewycz M, 2011, GECCO-2011: PROCEEDINGS OF THE 13TH ANNUAL GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P1723
   McKinlay J, 2010, CHANDOS INF PROF SER, P1, DOI 10.1533/9781780630243
   Mendes P., 2020, P 28 INT S MOD AN SI, P1, DOI [10.1109/MAS-COTS50786.2020.9285971, DOI 10.1109/MAS-COTS50786.2020.9285971]
   Mkaouer MW, 2017, EMPIR SOFTW ENG, V22, P894, DOI 10.1007/s10664-016-9426-8
   Mkaouer MW, 2014, LECT NOTES COMPUT SC, V8636, P168
   Nair V, 2020, IEEE T SOFTWARE ENG, V46, P794, DOI 10.1109/TSE.2018.2870895
   Oh J, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P61, DOI 10.1145/3106237.3106273
   OpenAI, 2023, arXiv
   Panichella Annibale, 2015, 2015 IEEE 8th International Conference on Software Testing, Verification and Validation (ICST), DOI 10.1109/ICST.2015.7102604
   Panichella A, 2015, 2015 IEEE/ACM 8TH INTERNATIONAL SYMPOSIUM ON SOFTWARE AND SYSTEMS TRACEABILITY, P15, DOI 10.1109/SST.2015.10
   Peng K., 2021, ARXIV
   Petkovich J., 2017, P 8 ACMSPEC INT C PE, P39, DOI 10.1145/3030207.3030216
   Preuss M., 2010, P GEN EV COMP C GECC, P401, DOI [10.1145/1830483.1830558, DOI 10.1145/1830483.1830558]
   Pushak Y, 2018, LECT NOTES COMPUT SC, V11102, P271, DOI 10.1007/978-3-319-99259-4_22
   Ramirez AJ, 2009, ACM/IEEE SIXTH INTERNATIONAL CONFERENCE ON AUTONOMIC COMPUTING AND COMMUNICATIONS (ICAC '09), P97
   SCOTT AJ, 1974, BIOMETRICS, V30, P507, DOI 10.2307/2529204
   Shahbazian A, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P1039, DOI 10.1145/3368089.3409749
   Shahriari B, 2016, P IEEE, V104, P148, DOI 10.1109/JPROC.2015.2494218
   Siegmund N, 2012, PROC INT CONF SOFTW, P167, DOI 10.1109/ICSE.2012.6227196
   Singh R, 2016, PROCEEDINGS OF THE 2016 ACM/SPEC INTERNATIONAL CONFERENCE ON PERFORMANCE ENGINEERING (ICPE'16), P309, DOI 10.1145/2851553.2851576
   Sinha Urjoshi, 2020, Search-Based Software Engineering. 12th International Symposium, SSBSE 2020. Proceedings. Lecture Notes in Computer Science (LNCS 12420), P137, DOI 10.1007/978-3-030-59762-7_10
   Sobhya D, 2020, J SYST SOFTWARE, V159, DOI 10.1016/j.jss.2019.110428
   Soltani M, 2018, LECT NOTES COMPUT SC, V11036, P325, DOI 10.1007/978-3-319-99241-9_18
   Song W, 2015, IEEE T EVOLUT COMPUT, V19, P414, DOI 10.1109/TEVC.2014.2336865
   Steinhoff V., 2020, ARXIV
   Strunk A., 2010, Proceedings 2010 8th IEEE European Conference on Web Services (ECOWS 2010), P67, DOI 10.1109/ECOWS.2010.16
   Tao Ye, 2003, Performance Evaluation Review, V31, P196, DOI 10.1145/885651.781052
   Tian X., 2015, The Journal of Finance and Data Science, V1, P33
   Upton G., 2014, A Dictionary of Statistics
   Vargha A, 2000, J EDUC BEHAV STAT, V25, P101, DOI 10.3102/10769986025002101
   WILCOXON F, 1946, J ECON ENTOMOL, V39, P269, DOI 10.1093/jee/39.2.269
   Xi B., 2004, P P 13 INT C WORLD W, P287, DOI DOI 10.1145/988672.988711
   Xia T., 2018, ARXIV
   Xu TY, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P307, DOI 10.1145/2786805.2786852
   Xue YX, 2020, ACM T SOFTW ENG METH, V29, DOI 10.1145/3392031
   Yuan Y, 2020, IEEE T SOFTWARE ENG, V46, P1040, DOI 10.1109/TSE.2018.2874648
   Zhang TT, 2015, GECCO'15: PROCEEDINGS OF THE 2015 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P1383, DOI 10.1145/2739480.2754791
   Zhu YQ, 2017, PROCEEDINGS OF THE 2017 SYMPOSIUM ON CLOUD COMPUTING (SOCC '17), P338, DOI 10.1145/3127479.3128605
NR 102
TC 0
Z9 0
U1 0
U2 0
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUN
PY 2024
VL 50
IS 6
BP 1478
EP 1504
DI 10.1109/TSE.2024.3388910
PG 27
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA UL2G2
UT WOS:001248142900001
OA Green Submitted, hybrid
DA 2024-08-05
ER

PT J
AU Lin, YL
   Wan, CC
   Bai, SW
   Gu, XD
AF Lin, Yalan
   Wan, Chengcheng
   Bai, Shuwen
   Gu, Xiaodong
TI VarGAN: Adversarial Learning of Variable Semantic Representations
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Codes; Vectors; Generators; Training; Semantics; Task analysis;
   Generative adversarial networks; Pre-trained language models; variable
   name representation; identifier representation; generative adversarial
   networks
ID CLONE DETECTION
AB Variable names are of critical importance in code representation learning. However, due to diverse naming conventions, variables often receive arbitrary names, leading to long-tail, out-of-vocabulary (OOV), and other well-known problems. While the Byte-Pair Encoding (BPE) tokenizer has addressed the surface-level recognition of low-frequency tokens, it has not noticed the inadequate training of low-frequency identifiers by code representation models, resulting in an imbalanced distribution of rare and common identifiers. Consequently, code representation models struggle to effectively capture the semantics of low-frequency variable names. In this paper, we propose VarGAN, a novel method for variable name representations. VarGAN strengthens the training of low-frequency variables through adversarial training. Specifically, we regard the code representation model as a generator responsible for producing vectors from source code. Additionally, we employ a discriminator that detects whether the code input to the generator contains low-frequency variables. This adversarial setup regularizes the distribution of rare variables, making them overlap with their corresponding high-frequency counterparts in the vector space. Experimental results demonstrate that VarGAN empowers CodeBERT to generate code vectors that exhibit more uniform distribution for both low- and high-frequency identifiers. There is an improvement of 8% in similarity and relatedness scores compared to VarCLR in the IdBench benchmark. VarGAN is also validated in downstream tasks, where it exhibits enhanced capabilities in capturing token- and code-level semantics.
C1 [Lin, Yalan; Gu, Xiaodong] Shanghai Jiao Tong Univ, Sch Software, Shanghai 200240, Peoples R China.
   [Wan, Chengcheng] East China Normal Univ, Software Engn Inst, Shanghai 200062, Peoples R China.
   [Bai, Shuwen] East China Univ Sci & Technol, Dept Comp Sci, Shanghai 200237, Peoples R China.
C3 Shanghai Jiao Tong University; East China Normal University; East China
   University of Science & Technology
RP Gu, XD (corresponding author), Shanghai Jiao Tong Univ, Sch Software, Shanghai 200240, Peoples R China.
EM linyalan@sjtu.edu.cn; ccwan@sei.ecnu.edu.cn; shuwenbai2023@163.com;
   xiaodong.gu@sjtu.edu.cn
OI Bai, Shuwen/0009-0007-6050-172X; Wan, Chengcheng/0000-0001-9162-9688
FU National Natural Science Foundation of China
FX No Statement Available
CR Allamanis M, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P38, DOI 10.1145/2786805.2786849
   Bui NDQ, 2021, PROC INT CONF SOFTW, P1186, DOI 10.1109/ICSE43902.2021.00109
   Buratti L, 2020, Arxiv, DOI arXiv:2006.12641
   Chakraborty S, 2022, PROCEEDINGS OF THE 30TH ACM JOINT MEETING EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, ESEC/FSE 2022, P18, DOI 10.1145/3540250.3549162
   Chen QB, 2022, PROC INT CONF SOFTW, P2327, DOI 10.1145/3510003.3510162
   Chirkova N, 2021, 2021 CONFERENCE OF THE NORTH AMERICAN CHAPTER OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS: HUMAN LANGUAGE TECHNOLOGIES (NAACL-HLT 2021), P2679
   Chirkova N, 2021, 2021 CONFERENCE OF THE NORTH AMERICAN CHAPTER OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS: HUMAN LANGUAGE TECHNOLOGIES (NAACL-HLT 2021), P278
   Deissenböck F, 2005, PROG COMPREHEN, P97, DOI 10.1109/WPC.2005.14
   Feng ZY, 2020, FINDINGS OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, EMNLP 2020, P1536
   Gabel M, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P321, DOI 10.1145/1368088.1368132
   Gong CY, 2018, ADV NEUR IN, V31
   Goodfellow I. J., 2014, ADV NEURAL INFORM PR
   Graves A, 2012, STUD COMPUT INTELL, V385, P1, DOI [10.1162/neco.1997.9.8.1735, 10.1007/978-3-642-24797-2, 10.1162/neco.1997.9.1.1]
   Guo D., 2020, INT C LEARN REPR
   Hindle A, 2016, COMMUN ACM, V59, P122, DOI 10.1145/2902362
   Hu X, 2018, INT C PROGRAM COMPRE, P200, DOI 10.1145/3196321.3196334
   Husain H, 2020, Arxiv, DOI arXiv:1909.09436
   Kamiya T, 2002, IEEE T SOFTWARE ENG, V28, P654, DOI 10.1109/TSE.2002.1019480
   Karampatsis RM, 2020, PROC INT CONF SOFTW, P1073, DOI 10.1145/3377811.3380342
   Lacomis J, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P640, DOI 10.1109/ASE.2019.00064
   Li BH, 2020, PROCEEDINGS OF THE 2020 CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING (EMNLP), P9119
   Liu F, 2022, PROC INT CONF SOFTW, P1294, DOI 10.1145/3510003.3510154
   Liu H, 2023, Arxiv, DOI arXiv:2305.17708
   Liu K, 2019, PROC INT CONF SOFTW, P1, DOI 10.1109/ICSE.2019.00019
   Liu YH, 2019, Arxiv, DOI [arXiv:1907.11692, DOI 10.48550/ARXIV.1907.11692]
   Liu ZX, 2021, IEEE T SOFTWARE ENG, V47, P2012, DOI 10.1109/TSE.2019.2941943
   Lu S., 2021, NEURIPS
   Mikolov T., 2013, ADV NEURAL INFORM PR, V26, P1, DOI DOI 10.48550/ARXIV.1310.4546
   Mou LL, 2016, AAAI CONF ARTIF INTE, P1287
   Papineni K, 2002, 40TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, PROCEEDINGS OF THE CONFERENCE, P311, DOI 10.3115/1073083.1073135
   Rattan D, 2013, INFORM SOFTWARE TECH, V55, P1165, DOI 10.1016/j.infsof.2013.01.008
   Rodeghero P, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P390, DOI 10.1145/2568225.2568247
   Roziere B., 2021, arXiv
   Schick T, 2020, 58TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (ACL 2020), P3996
   Sedgwick P, 2014, BMJ-BRIT MED J, V349, DOI 10.1136/bmj.g7327
   Sennrich R, 2016, PROCEEDINGS OF THE 54TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, VOL 1, P1715
   Shi JK, 2022, EUR CON SFTWR MTNCE, P1134, DOI 10.1109/SANER53432.2022.00130
   Siegmund J, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P140, DOI 10.1145/3106237.3106268
   Siegmund J, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P378, DOI 10.1145/2568225.2568252
   Sridhara G., 2010, P IEEEACM INT C AUTO, P43
   Su J., 2021, arXiv
   Tian Z, 2023, Arxiv, DOI arXiv:2301.02412
   Trask A, 2015, Arxiv, DOI arXiv:1511.06388
   van der Maaten L, 2008, J MACH LEARN RES, V9, P2579
   Vasilescu B, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P683, DOI 10.1145/3106237.3106289
   Vaswani A, 2017, ADV NEUR IN, V30
   Wainakh Y, 2021, PROC INT CONF SOFTW, P562, DOI 10.1109/ICSE43902.2021.00059
   Wang Y, 2021, 2021 CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING (EMNLP 2021), P8696
   Yan F., 2021, P 30 INT JOINT C ART, P3721
   Yu WH, 2022, FINDINGS OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (ACL 2022), P1907
   Zhang HZ, 2020, AAAI CONF ARTIF INTE, V34, P1169
   Zhang T, 2022, AAAI CONF ARTIF INTE, P11712
   Zhou X., 2023, P IEEE ACM INT C AUT, P40
   Zhu RY, 2022, PROCEEDINGS OF THE 60TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (ACL 2022), VOL 1: (LONG PAPERS), P5142
NR 54
TC 0
Z9 0
U1 0
U2 0
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUN
PY 2024
VL 50
IS 6
BP 1505
EP 1517
DI 10.1109/TSE.2024.3391730
PG 13
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA UL2G2
UT WOS:001248142900006
DA 2024-08-05
ER

PT J
AU Zheng, ZB
   Su, JZ
   Chen, JC
   Lo, DV
   Zhong, ZJ
   Ye, MX
AF Zheng, Zibin
   Su, Jianzhong
   Chen, Jiachi
   Lo, David
   Zhong, Zhijie
   Ye, Mingxi
TI DAppSCAN: Building Large-Scale Datasets for Smart Contract Weaknesses in
   DApp Projects
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Empirical study; Smart contracts; SWC weakness; dataset; ethereum
AB The Smart Contract Weakness Classification Registry (SWC Registry) is a widely recognized list of smart contract weaknesses specific to the Ethereum platform. Despite the SWC Registry not being updated with new entries since 2020, the sustained development of smart contract analysis tools for detecting SWC-listed weaknesses highlights their ongoing significance in the field. However, evaluating these tools has proven challenging due to the absence of a large, unbiased, real-world dataset. To address this problem, we aim to build a large-scale SWC weakness dataset from real-world DApp projects. We recruited 22 participants and spent 44 person-months analyzing 1,199 open-source audit reports from 29 security teams. In total, we identified 9,154 weaknesses and developed two distinct datasets, i.e., DAPPSCAN-SOURCE and DAPPSCAN-BYTECODE. The DAPPSCAN-SOURCE dataset comprises 39,904 Solidity files, featuring 1,618 SWC weaknesses sourced from 682 real-world DApp projects. However, the Solidity files in this dataset may not be directly compilable for further analysis. To facilitate automated analysis, we developed a tool capable of automatically identifying dependency relationships within DApp projects and completing missing public libraries. Using this tool, we created DAPPSCAN-BYTECODE dataset, which consists of 6,665 compiled smart contract with 888 SWC weaknesses. Based on DAPPSCAN-BYTECODE, we conducted an empirical study to evaluate the performance of state-of-the-art smart contract weakness detection tools. The evaluation results revealed sub-par performance for these tools in terms of both effectiveness and success detection rate, indicating that future development should prioritize real-world datasets over simplistic toy contracts.
C1 [Zheng, Zibin; Su, Jianzhong; Chen, Jiachi; Zhong, Zhijie; Ye, Mingxi] Sun Yat Sen Univ, Sch Software Engn, Zhuhai 519082, Peoples R China.
   [Lo, David] Singapore Management Univ, Sch Informat Syst, Singapore 188065, Singapore.
C3 Sun Yat Sen University; Singapore Management University
RP Chen, JC (corresponding author), Sun Yat Sen Univ, Sch Software Engn, Zhuhai 519082, Peoples R China.
EM zhzibin@mail.sysu.edu.cn; sujzh3@mail2.sysu.edu.cn;
   chenjch86@mail.sysu.edu.cn; davidlo@smu.edu.sg;
   zhongzhj3@mail2.sysu.edu.cn; yemx6@mail2.sysu.edu.cn
RI ; Lo, David/A-2493-2012
OI Chen, Jiachi/0000-0002-0192-9992; Lo, David/0000-0002-4367-7201
FU National Key Research and Development Program of China
FX No Statement Available
CR Alchemy, "What is an ABI of a smart contract? Examples and usage
   [Anonymous], Solc
   [Anonymous], Ethereum development environment for professionals
   [Anonymous], Trail of Bits
   [Anonymous], "Peer to peer lending blockchain platform
   [Anonymous], 2022, CoinDesk
   [Anonymous], "Smart contract weakness classification registry
   [Anonymous], DOCKER HUB
   [Anonymous], "Incorrect token transfer
   [Anonymous], Etherscan
   [Anonymous], 2017, BLOCKCHAIN TECHNOLOG
   Bose P, 2022, P IEEE S SECUR PRIV, P161, DOI [10.1109/SP46214.2022.9833721, 10.1109/SP46214.2022.00072]
   Brownie, About us
   "BscScan, BNB Smart Chain Explorer
   C. Teams, "Plans and pricing for MythX
   Chaliasos S, 2024, Arxiv, DOI arXiv:2304.02981
   Chen C, 2023, Arxiv, DOI [arXiv:2309.05520, 10.48550/arXiv.2309.05520]
   Chen J., 2021, Empirical Softw. Eng., V26, P44
   Chen JC, 2022, IEEE T SOFTWARE ENG, V48, P327, DOI 10.1109/TSE.2020.2989002
   Chen T, 2020, ACM T INTERNET TECHN, V20, DOI 10.1145/3381036
   Choi J, 2021, 2021 36TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING ASE 2021, P227, DOI 10.1109/ASE51524.2021.9678888
   Code4rena, About us
   "Common weakness enumeration (CWE), About us
   Cryptokitties, About us
   CWE, "CWE-frequently asked questions (FAQ)
   Dasp10, About us
   di Angelo M, 2023, Arxiv, DOI arXiv:2303.10517
   Durieux T, 2020, PROC INT CONF SOFTW, P530, DOI 10.1145/3377811.3380364
   Ember, About us
   Ethereum.org, About us
   Feist J, 2019, 2019 IEEE/ACM 2ND INTERNATIONAL WORKSHOP ON EMERGING TRENDS IN SOFTWARE ENGINEERING FOR BLOCKCHAIN (WETSEB 2019), P8, DOI 10.1109/WETSEB.2019.00008
   Feng Y, 2020, IEEE INT CONF AUTOM, P1141, DOI 10.1145/3324884.3416646
   Ferreira JF, 2020, IEEE INT CONF AUTOM, P1349, DOI 10.1145/3324884.3415298
   Finance S., SourceHat
   Frank J, 2020, PROCEEDINGS OF THE 29TH USENIX SECURITY SYMPOSIUM, P2757
   Gao ZP, 2021, IEEE T SOFTWARE ENG, V47, P2874, DOI 10.1109/TSE.2020.2971482
   Ghaleb A, 2022, PROCEEDINGS OF THE 31ST ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, ISSTA 2022, P728, DOI 10.1145/3533767.3534378
   Grieco Gustavo, 2020, ISSTA '20: Proceedings of the 29th ACM SIGSOFT International Symposium on Software Testing and Analysis, P557, DOI 10.1145/3395363.3404366
   He JX, 2019, PROCEEDINGS OF THE 2019 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY (CCS'19), P531, DOI 10.1145/3319535.3363230
   Jiang B, 2018, IEEE INT CONF AUTOM, P259, DOI 10.1145/3238147.3238177
   Kalra S, 2018, 25TH ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2018), DOI 10.14722/ndss.2018.23082
   Krupp J, 2018, PROCEEDINGS OF THE 27TH USENIX SECURITY SYMPOSIUM, P1317
   Liao ZQ, 2022, PROCEEDINGS OF THE 31ST ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, ISSTA 2022, P752, DOI 10.1145/3533767.3534222
   Liu Y, 2022, PROCEEDINGS OF THE 31ST ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, ISSTA 2022, P716, DOI 10.1145/3533767.3534372
   Luu L, 2016, CCS'16: PROCEEDINGS OF THE 2016 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P254, DOI 10.1145/2976749.2978309
   Mueller B., 2018, P 9 ANN HITB SEC C H, V54
   Nguyen TD, 2020, PROC INT CONF SOFTW, P778, DOI 10.1145/3377811.3380334
   OpenZepplelin, "Openzepplelin safemath library
   Park D, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P912, DOI 10.1145/3236024.3264591
   Perez D, 2021, PROCEEDINGS OF THE 30TH USENIX SECURITY SYMPOSIUM, P1325
   Permenev A, 2020, P IEEE S SECUR PRIV, P1661, DOI 10.1109/SP40000.2020.00024
   "Remix, Ethereum
   Ren M, 2021, PROCEEDINGS OF THE 29TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '21), P1360, DOI 10.1145/3468264.3473929
   Rodler M, 2019, 26TH ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2019), DOI 10.14722/ndss.2019.23413
   Slowmist, About us
   So S, 2021, PROCEEDINGS OF THE 30TH USENIX SECURITY SYMPOSIUM, P1361
   So S, 2020, P IEEE S SECUR PRIV, P1678, DOI 10.1109/SP40000.2020.00032
   Solidity, ABOUT US
   Su JZ, 2022, IEEE INT CONF AUTOM, DOI 10.1145/3551349.3560429
   Torres CF, 2018, 34TH ANNUAL COMPUTER SECURITY APPLICATIONS CONFERENCE (ACSAC 2018), P664, DOI 10.1145/3274694.3274737
   Truffle Suite, Online
   Tsankov P, 2018, PROCEEDINGS OF THE 2018 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY (CCS'18), P67, DOI 10.1145/3243734.3243780
   Wagner G., Ethereum Improvement Proposals
   Wüstholz V, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P1398, DOI 10.1145/3368089.3417064
   Wuestholz V, 2020, PROC INT CONF SOFTW, P789, DOI 10.1145/3377811.3380388
   Xue YX, 2020, IEEE INT CONF AUTOM, P1029, DOI 10.1145/3324884.3416553
   Yi X, 2021, Arxiv, DOI arXiv:2110.12162
   Zhang Z, 2023, PROC INT CONF SOFTW, P615, DOI 10.1109/ICSE48619.2023.00061
   Zheng ZB, 2023, PROC INT CONF SOFTW, P295, DOI 10.1109/ICSE48619.2023.00036
NR 69
TC 0
Z9 0
U1 1
U2 1
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUN
PY 2024
VL 50
IS 6
BP 1360
EP 1373
DI 10.1109/TSE.2024.3383422
PG 14
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA UL2G2
UT WOS:001248142900018
OA Green Submitted
DA 2024-08-05
ER

PT J
AU Huang, RB
   Cui, CH
   Lian, JL
   Towey, D
   Sun, WF
   Chen, HB
AF Huang, Rubing
   Cui, Chenhui
   Lian, Junlong
   Towey, Dave
   Sun, Weifeng
   Chen, Haibo
TI Toward Cost-Effective Adaptive Random Testing: An Approximate Nearest
   Neighbor Approach
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Subspace constraints; Testing; Software; Power capacitors; Strips;
   Shape; Computational efficiency; Software testing; random testing (RT);
   adaptive random testing (ART); approximate nearest neighbor (ANN);
   locality-sensitive hashing (LSH); cost-effectiveness
ID ALGORITHMS; BISECTION; STRATEGY
AB Adaptive Random Testing (ART) enhances the testing effectiveness (including fault-detection capability) of Random Testing (RT) by increasing the diversity of the random test cases throughout the input domain. Many ART algorithms have been investigated such as Fixed-Size-Candidate-Set ART (FSCS) and Restricted Random Testing (RRT), and have been widely used in many practical applications. Despite its popularity, ART suffers from the problem of high computational costs during test-case generation, especially as the number of test cases increases. Although several strategies have been proposed to enhance the ART testing efficiency, such as the forgetting strategy and the $k$k -dimensional tree strategy, these algorithms still face some challenges, including: (1) Although these algorithms can reduce the computation time, their execution costs are still very high, especially when the number of test cases is large; and (2) To achieve low computational costs, they may sacrifice some fault-detection capability. In this paper, we propose an approach based on Approximate Nearest Neighbors (ANNs), called Locality-Sensitive Hashing ART (LSH-ART). When calculating distances among different test inputs, LSH-ART identifies the approximate (not necessarily exact) nearest neighbors for candidates in an efficient way. LSH-ART attempts to balance ART testing effectiveness and efficiency.
C1 [Huang, Rubing; Cui, Chenhui] Macau Univ Sci & Technol, Sch Comp Sci & Engn, Taipa 999078, Macau, Peoples R China.
   [Lian, Junlong; Chen, Haibo] Jiangsu Univ, Sch Comp Sci & Commun Engn, Zhenjiang 212013, Jiangsu, Peoples R China.
   [Towey, Dave] Univ Nottingham Ningbo China, Sch Comp Sci, Ningbo 315100, Zhejiang, Peoples R China.
   [Sun, Weifeng] Chongqing Univ, Sch Big Data & Software Engn, Chongqing 401331, Peoples R China.
C3 Macau University of Science & Technology; Jiangsu University; University
   of Nottingham Ningbo China; Chongqing University
RP Huang, RB (corresponding author), Macau Univ Sci & Technol, Sch Comp Sci & Engn, Taipa 999078, Macau, Peoples R China.
EM rbhuang@must.edu.mo; 3230002105@student.must.edu.mo;
   2211908018@stmail.ujs.edu.cn; dave.towey@nottingham.edu.cn;
   weifeng.sun@cqu.edu.cn; 2112108002@stmail.ujs.edu.cn
RI Towey, Dave/K-3160-2014
OI Towey, Dave/0000-0003-0877-4353; Sun, Weifeng/0000-0001-6013-1369;
   Huang, Rubing/0000-0002-1769-6126; Cui, Chenhui/0009-0004-8746-316X
FU Science and Technology Development Fund of Macau, Macau SAR
FX No Statement Available
CR Ackah-Arthur H, 2019, IEEE T RELIAB, V68, P1404, DOI 10.1109/TR.2019.2907577
   AMMANN PE, 1988, IEEE T COMPUT, V37, P418, DOI 10.1109/12.2185
   Anand S, 2013, J SYST SOFTWARE, V86, P1978, DOI 10.1016/j.jss.2013.02.061
   Andoni A, 2006, ANN IEEE SYMP FOUND, P459
   [Anonymous], 2010, ISOMECIEEE 24765:2010, P1, DOI [DOI 10.1109/IEEESTD.2010.5733835, 10.1109/IEEESTD.2010.5733835]
   Arcuri A, 2014, SOFTW TEST VERIF REL, V24, P219, DOI 10.1002/stvr.1486
   Arcuri A, 2012, IEEE T SOFTWARE ENG, V38, P258, DOI 10.1109/TSE.2011.121
   Arcuri Andrea., 2011, Proceedings of the 2011 International Symposium on Software Testing and Analysis, P265
   ARYA S, 1993, PROCEEDINGS OF THE FOURTH ANNUAL ACM-SIAM SYMPOSIUM ON DISCRETE ALGORITHMS, P271
   Arya S, 1998, J ACM, V45, P891, DOI 10.1145/293347.293348
   Ashfaq M, 2020, PROC INT SYMP SOFTW, P277, DOI 10.1109/ISSRE5003.2020.00034
   Barr ET, 2015, IEEE T SOFTWARE ENG, V41, P507, DOI 10.1109/TSE.2014.2372785
   Bati H., 2007, P 33 INT C VER LARG, P1243
   Bawa Mayank, 2005, P 14 INT C WORLD WID, P651, DOI [DOI 10.1145/1060745.1060840, 10.1145/1060745.1060840]
   BELLMAN R, 1966, SCIENCE, V153, P34, DOI 10.1126/science.153.3731.34
   BENTLEY JL, 1975, COMMUN ACM, V18, P509, DOI 10.1145/361002.361007
   BISHOP PG, 1993, FTCS-23 - TWENTY-THIRD INTERNATIONAL SYMPOSIUM ON FAULT-TOLERANT COMPUTING : DIGEST OF PAPERS, P98, DOI 10.1109/FTCS.1993.627312
   Bueno P. MS, 2007, Proceedings of the 2nd international workshop on Random testing: co-located with the 22nd IEEE/ACM International Conference on Automated Software Engineering (ASE 2007), P10
   Bueno PMS, 2014, INFORM SCIENCES, V259, P490, DOI 10.1016/j.ins.2011.01.025
   Chan FT, 1996, INFORM SOFTWARE TECH, V38, P775, DOI 10.1016/0950-5849(96)01103-2
   Chan K. P., 2007, PROX 19 INT C SOFTW, P163
   Chan KP, 2006, P INT COMP SOFTW APP, P485
   Chan KP, 2006, INT J SOFTW ENG KNOW, V16, P553, DOI 10.1142/S0218194006002926
   Chekam TT, 2017, PROC INT CONF SOFTW, P597, DOI 10.1109/ICSE.2017.61
   Chen TY, 2006, LECT NOTES COMPUT SC, V4006, P155
   Chen T. Y., 2007, P 9 INT C SOFTW ENG, P141
   Chen TY, 2007, INT J SOFTW ENG KNOW, V17, P805, DOI 10.1142/S0218194007003501
   Chen TY, 2007, IEEE T RELIAB, V56, P562, DOI 10.1109/TR.2007.903293
   Chen TY, 2006, J SYST SOFTWARE, V79, P591, DOI 10.1016/j.jss.2005.05.029
   Chen TY, 2015, SCI CHINA INFORM SCI, V58, DOI 10.1007/s11432-015-5314-x
   Chen TY, 2013, IEEE T RELIAB, V62, P226, DOI 10.1109/TR.2013.2240898
   Chen TY, 2010, J SYST SOFTWARE, V83, P60, DOI 10.1016/j.jss.2009.02.022
   Chen TY, 2004, LECT NOTES COMPUT SC, V3321, P320
   Chen TY, 2004, INFORM SOFTWARE TECH, V46, P1001, DOI 10.1016/j.infsof.2004.07.004
   Chen TY, 2004, QSIC 2004: PROCEEDINGS OF THE FOURTH INTERNATIONAL CONFERENCE ON QUALITY SOFTWARE, P79
   Chow C, 2013, INT CONF QUAL SOFTW, P268, DOI 10.1109/QSIC.2013.19
   CRANLEY R, 1976, SIAM J NUMER ANAL, V13, P904, DOI 10.1137/0713071
   Datar M., 2004, PROC 20 ANN S COMPUT, P253
   DEMILLO RA, 1978, COMPUTER, V11, P34, DOI 10.1109/C-M.1978.218136
   DiGiuseppe N, 2015, EMPIR SOFTW ENG, V20, P928, DOI 10.1007/s10664-014-9304-1
   DURAN JW, 1984, IEEE T SOFTWARE ENG, V10, P438, DOI 10.1109/TSE.1984.5010257
   FINELLI GB, 1991, RELIAB ENG SYST SAFE, V32, P155, DOI 10.1016/0951-8320(91)90052-9
   Frankl PG, 1998, IEEE T SOFTWARE ENG, V24, P586, DOI 10.1109/32.707695
   Godefroid P, 2008, PLDI'08: PROCEEDINGS OF THE 2008 SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN & IMPLEMENTATION, P206, DOI 10.1145/1375581.1375607
   Gray RM, 1998, IEEE T INFORM THEORY, V44, P2325, DOI 10.1109/18.720541
   Grissom R. J., 2005, Effect Sizes for Research: A Broad Practical Approach, DOI DOI 10.4324/9781410612915
   HALTON JH, 1964, COMMUN ACM, V7, P701, DOI 10.1145/355588.365104
   Hamlet R., 2002, Random Testing
   Harman M, 2010, IEEE T SOFTWARE ENG, V36, P226, DOI 10.1109/TSE.2009.71
   Hayes J. H., 1994, Object-Oriented Methodologies and Systems. International Symposium, ISOOMS'94 Proceedings, P205
   Hayes JH, 2011, SOFTW TEST VERIF REL, V21, P299, DOI 10.1002/stvr.426
   Hu H.-M., 2015, Ruan Jian Xue Bao/J. Softe, V26, P228
   Huang R., Ap pendix: Detailed results for LSH-ART
   Huang RB, 2020, IEEE INT CONF SOFTW, P406, DOI 10.1109/ICST46399.2020.00049
   Huang RB, 2021, IEEE T SOFTWARE ENG, V47, P2052, DOI 10.1109/TSE.2019.2942921
   Huang XY, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY AND SECURITY (QRS), P32, DOI 10.1109/QRS.2017.13
   Indyk P., 1998, Proceedings of the Thirtieth Annual ACM Symposium on Theory of Computing, P604, DOI 10.1145/276698.276876
   Jagadish H., 2005, P 31 INT C VERY LARG, P661
   Jégou H, 2011, IEEE T PATTERN ANAL, V33, P117, DOI 10.1109/TPAMI.2010.57
   Jia Y, 2011, IEEE T SOFTWARE ENG, V37, P649, DOI 10.1109/TSE.2010.62
   Just R, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P654, DOI 10.1145/2635868.2635929
   Klein JP., 2003, Survival analysis: techniques for censored and truncated data, DOI 10.1007/b97377
   Kollig T, 2002, COMPUT GRAPH FORUM, V21, P557, DOI 10.1111/1467-8659.00706
   Kung D. C., 1998, Texting Object-Oriented Software
   Li JF, 2017, SIGIR'17: PROCEEDINGS OF THE 40TH INTERNATIONAL ACM SIGIR CONFERENCE ON RESEARCH AND DEVELOPMENT IN INFORMATION RETRIEVAL, P635, DOI 10.1145/3077136.3080800
   Liu H, 2016, IEEE T COMPUT, V65, P1896, DOI 10.1109/TC.2015.2455981
   Liu H, 2011, SOFTWARE PRACT EXPER, V41, P1131, DOI 10.1002/spe.1067
   Ma YS, 2005, SOFTW TEST VERIF REL, V15, P97, DOI 10.1002/stvr.308
   Mao CY, 2019, IEEE T RELIAB, V68, P1444, DOI 10.1109/TR.2019.2892230
   Mao CY, 2017, SCI CHINA INFORM SCI, V60, DOI 10.1007/s11432-016-0087-0
   Mayer J, 2005, LECT NOTES COMPUT SC, V3785, P251
   Mayer J., 2006, P 5 ACM IEEE INT S E, P105
   Mayer J., 2006, P 18 INT C SOFTW ENG, P499
   Mayer J, 2006, LECT NOTES COMPUT SC, V3997, P72
   McMinn P, 2004, SOFTW TEST VERIF REL, V14, P105, DOI 10.1002/stvr.294
   Medeiros F, 2016, PROC INT CONF SOFTW, P643, DOI 10.1145/2884781.2884793
   MORELL LJ, 1990, IEEE T SOFTWARE ENG, V16, P844, DOI 10.1109/32.57623
   Myers G.J., 2011, The art of software testing, VVolume 1
   NIEDERREITER H, 1988, J NUMBER THEORY, V30, P51, DOI 10.1016/0022-314X(88)90025-X
   Offutt A. J., 1992, ACM Transactions on Software Engineering and Methodology, V1, P5, DOI 10.1145/125489.125473
   Orso A., 2014, FUTURE SOFTWARE ENG, P117, DOI [DOI 10.1145/2593882.2593885, 10.1145/2593882.2593885]
   Owen A. B., 1995, LECT NOTES STAT, P299, DOI [10.1007/978-1-4612-2552-2_19, DOI 10.1007/978-1-4612-2552-2_19]
   Pacheco Carlos., 2008, International Symposium on Software Testing and Analysis (ISSTA), P87
   Papadakis M, 2019, ADV COMPUT, V112, P275, DOI 10.1016/bs.adcom.2018.03.015
   Papadakis M, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P537, DOI 10.1145/3180155.3180183
   Regehr J, 2005, P 5 ACM INT C EMB SO, P290
   Sabor KK, 2015, 10TH INTERNATIONAL WORKSHOP ON AUTOMATION OF SOFTWARE TEST AST 2015, P28, DOI 10.1109/AST.2015.13
   Salakhutdinov R, 2009, INT J APPROX REASON, V50, P969, DOI 10.1016/j.ijar.2008.11.006
   Sánchez AB, 2017, SOFTW SYST MODEL, V16, P173, DOI 10.1007/s10270-015-0459-z
   Schneckenburger Christoph, 2008, 2008 IEEE International Conference on Software Testing Verification and Validation Workshop (ICSTW), P241, DOI 10.1109/ICSTW.2008.24
   Schneckenburger C., 2007, P 4 INT WORKSH SOFTW, P90
   Shahbazi A, 2013, IEEE T SOFTWARE ENG, V39, P163, DOI 10.1109/TSE.2012.18
   Slutz D., 1998, Proceedings of the Twenty-Fourth International Conference on Very-Large Databases, P618
   SMITH MD, 1992, J OBJECT-ORIENT PROG, V5, P45
   Sobol IM., 1976, USSR COMP MATH MATH, V16, P236, DOI [10.1016/0041-5553(76)90154-3, DOI 10.1016/0041-5553(76)90154-3]
   Tappenden AF, 2009, IEEE T RELIAB, V58, P619, DOI 10.1109/TR.2009.2034288
   Tartler R, 2011, EUROSYS 11: PROCEEDINGS OF THE EUROSYS 2011 CONFERENCE, P47
   Vargha A, 2000, J EDUC BEHAV STAT, V25, P101, DOI 10.3102/10769986025002101
   WEYUKER EJ, 1982, COMPUT J, V25, P465, DOI 10.1093/comjnl/25.4.465
   WHITE LJ, 1980, IEEE T SOFTWARE ENG, V6, P247, DOI 10.1109/TSE.1980.234486
   WILCOXON F, 1946, J ECON ENTOMOL, V39, P269, DOI 10.1093/jee/39.2.269
   Wilfong Gordon T., 1991, S COMP GEOM SOCG, P224
   Wong WE, 2016, IEEE T SOFTWARE ENG, V42, P707, DOI 10.1109/TSE.2016.2521368
   Wu HY, 2020, IEEE T SOFTWARE ENG, V46, P302, DOI 10.1109/TSE.2018.2852744
   Yoshikawa T, 2003, THIRD INTERNATIONAL CONFERENCE ON QUALITY SOFTWARE, PROCEEDINGS, P20, DOI 10.1109/QSIC.2003.1319081
   Zhou ZQ, 2018, J SYST SOFTWARE, V136, P187, DOI 10.1016/j.jss.2017.08.031
NR 106
TC 0
Z9 0
U1 1
U2 1
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAY
PY 2024
VL 50
IS 5
BP 1182
EP 1214
DI 10.1109/TSE.2024.3379592
PG 33
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA QX5T5
UT WOS:001224187300002
OA Green Submitted
DA 2024-08-05
ER

PT J
AU Lin, ZW
   Chen, JC
   Wu, JJ
   Zhang, WZ
   Wang, YJ
   Zheng, ZB
AF Lin, Zewei
   Chen, Jiachi
   Wu, Jiajing
   Zhang, Weizhe
   Wang, Yongjuan
   Zheng, Zibin
TI CRPWarner: Warning the Risk of Contract-Related Rug Pull in DeFi Smart
   Contracts
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Smart contracts; Cryptocurrency; Finance; Decentralized applications;
   Blockchains; Ecosystems; Source coding; decentralized finance; rug pull;
   datalog analysis
AB In recent years, Decentralized Finance (DeFi) has grown rapidly due to the development of blockchain technology and smart contracts. As of March 2023, the estimated global cryptocurrency market cap has reached approximately $949 billion. However, security incidents continue to plague the DeFi ecosystem, and one of the most notorious examples is the "Rug Pull" scam. This type of cryptocurrency scam occurs when the developer of a particular token project intentionally abandons the project and disappears with investors' funds. Despite only emerging in recent years, Rug Pull events have already caused significant financial losses. In this work, we manually collected and analyzed 103 real-world rug pull events, categorizing them based on their scam methods. Two primary categories were identified: Contract-related Rug Pull (through malicious functions in smart contracts) and Transaction-related Rug Pull (through cryptocurrency trading without utilizing malicious functions). Based on the analysis of rug pull events, we propose CRPWarner (short for Contract-related Rug Pull Risk Warner) to identify malicious functions in smart contracts and issue warnings regarding potential rug pulls. We evaluated CRPWarner on 69 open-source smart contracts related to rug pull events and achieved a 91.8% precision, 85.9% recall, and 88.7% F1-score. Additionally, when evaluating CRPWarner on 13,484 real-world token contracts on Ethereum, it successfully detected 4168 smart contracts with malicious functions, including zero-day examples. The precision of large-scale experiments reaches 84.9%.
C1 [Lin, Zewei] Sun Yat Sen Univ, Software Engn, Zhuhai 519082, Peoples R China.
   [Lin, Zewei] Peng Cheng Lab, Shenzhen 518000, Peoples R China.
   [Chen, Jiachi; Wu, Jiajing; Zheng, Zibin] Sun Yat Sen Univ, Sch Software Engn, Zhuhai 519082, Peoples R China.
   [Zhang, Weizhe] Harbin Inst Technol, Sch Comp Sci & Technol, Shenzhen 518055, Peoples R China.
   [Zhang, Weizhe] Peng Cheng Lab, Shenzhen 518000, Peoples R China.
   [Wang, Yongjuan] Henan Key Lab Network Cryptog Technol, Zhengzhou 450000, Peoples R China.
C3 Sun Yat Sen University; Peng Cheng Laboratory; Sun Yat Sen University;
   Harbin Institute of Technology; Peng Cheng Laboratory
RP Wu, JJ (corresponding author), Sun Yat Sen Univ, Sch Software Engn, Zhuhai 519082, Peoples R China.
EM linzw3@mail2.sysu.edu.cn; chenjch86@mail.sysu.edu.cn;
   wujiajing@mail.sysu.edu.cn; wzzhang@hit.edu.cn; pinkywyj@163.com;
   zhzibin@mail.sysu.edu.cn
OI Chen, Jiachi/0000-0002-0192-9992
FU National Key Research and Development Program of China
FX No Statement Available
CR [Anonymous], PeckShieldAlert. "Maxapy finance
   [Anonymous], CONFIDENCE INTERVAL
   [Anonymous], 2017, Erc-721 non-fungible token standard
   [Anonymous], "What number of confirmations is considered secure in ethereum?
   [Anonymous], Fantom blockchain explorer
   [Anonymous], PeckShieldAlert, VX
   [Anonymous], "What is a soft rugpull vs a hard rugpull?
   [Anonymous], PeckShieldAlert. "Nekogold and pokemoney
   [Anonymous], "BNB smart chain explorer
   [Anonymous], "Create and deploy a DeFi app
   [Anonymous], "Upgradable smart contracts: Doesn't this mean anyone can add a backdoor/rug pull? Seems to go against the whole immutability concept of a blockchain
   [Anonymous], ETHERSCAN
   [Anonymous], PeckShieldAlert. "Babyelon
   [Anonymous], Rug pull
   [Anonymous], [Yul] re-introduce sub opcode
   [Anonymous], PeckShieldAlert. "Elonmvp
   [Anonymous], 2022, Harvard Business Review
   [Anonymous], "'squid game'-inspired cryptocurrency that soared by 23 million percent now worthless after apparent scam"
   [Anonymous], PeckShieldAlert. "Starman
   [Anonymous], "Solana NFT "iconics" defrauds people of 130,000 in SOL."
   [Anonymous], ERC-20 Token Standard
   [Anonymous], "Crypto rug pulls: What is a rug pull in crypto and 6 ways to spot it
   Brent L, 2018, Arxiv, DOI arXiv:1809.03981
   Brent L, 2020, PROCEEDINGS OF THE 41ST ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION (PLDI '20), P454, DOI 10.1145/3385412.3385990
   Buldas A, 2022, COMM COM INF SC, V1688, P3, DOI 10.1007/978-981-19-8069-5_1
   Buldas A, 2022, IEEE ACCESS, V10, P77284, DOI 10.1109/ACCESS.2022.3192837
   Chainalysis, 2022, Tech. Rep.
   Chen JC, 2022, IEEE T SOFTWARE ENG, V48, P327, DOI 10.1109/TSE.2020.2989002
   Chen T, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P442, DOI 10.1109/SANER.2017.7884650
   CoinMarketCap, About us
   Daian P, 2020, P IEEE S SECUR PRIV, P910, DOI 10.1109/SP40000.2020.00040
   Fang F, 2022, FINANC INNOV, V8, DOI 10.1186/s40854-021-00321-6
   Grech N, 2018, P ACM PROGRAM LANG, V2, DOI 10.1145/3276486
   Grech N, 2019, PROC INT CONF SOFTW, P1176, DOI 10.1109/ICSE.2019.00120
   Immerman N., 2012, Descriptive Complexity
   Jiang B, 2018, IEEE INT CONF AUTOM, P259, DOI 10.1145/3238147.3238177
   Jiang Y., 2024, 2024 IEEE ACM 46 INT
   Kalra S, 2018, 25TH ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2018), DOI 10.14722/ndss.2018.23082
   Luu L, 2016, CCS'16: PROCEEDINGS OF THE 2016 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P254, DOI 10.1145/2976749.2978309
   Ma F, 2022, ACM Trans. Softw. Eng. Methodol., V32, P1
   Mazorra B, 2022, MATHEMATICS-BASEL, V10, DOI 10.3390/math10060949
   Openzeppelin, "Proxy upgrade pattern
   Praitheeshan P, 2020, Arxiv, DOI arXiv:1908.08605
   Qin KH, 2021, LECT NOTES COMPUT SC, V12674, P3, DOI 10.1007/978-3-662-64322-8_1
   Rugdoc, RugDoc IO
   RugDocIO, "Gold mine finance hard rug
   Showmist, SlowMist Hacked
   Spencer D., 2009, CARD SORTING DESIGNI
   Werner S.M., 2021, arXiv
   Xia PC, 2021, P ACM MEAS ANAL COMP, V5, DOI 10.1145/3491051
   Yang S, 2023, Arxiv, DOI arXiv:2305.15829
NR 51
TC 0
Z9 0
U1 2
U2 2
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUN
PY 2024
VL 50
IS 6
BP 1534
EP 1547
DI 10.1109/TSE.2024.3392451
PG 14
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA UL2G2
UT WOS:001248142900004
OA Green Submitted
DA 2024-08-05
ER

PT J
AU Doncevic, J
   Fertalj, K
   Brcic, M
   Kovac, M
AF Doncevic, Juraj
   Fertalj, Kresimir
   Brcic, Mario
   Kovac, Mihael
TI Mask-Mediator-Wrapper Architecture as a Data Mesh Driver
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Data mesh; software architecture; data management; mediator-wrapper
AB The data mesh is a novel data management concept that emphasizes the importance of a domain before technology. The concept is still in the early stages of development and many efforts to implement and use it are expected to have negative consequences for organizations due to a lack of technological guidelines and best practices. To mitigate the risk of negative outcomes this paper proposes the use of the mask-mediator-wrapper architecture as a driver for a data mesh implementation. The mask-mediator-wrapper architecture provides a set of prefabricated configurable components that provide basic functionalities that a data mesh requires. This paper shows how the two concepts are compatible in terms of functionality, data modeling, evolvability, and aligned capabilities. A mask-mediator-wrapper-driven data mesh facilitates low-risk adoption trials, rapid prototyping, standardization, and a guarantee of evolvability. We demonstrate a mask-mediator-wrapper-driven data mesh by using our open-source Janus system to experimentally drive an exemplified data mesh.
C1 [Doncevic, Juraj; Fertalj, Kresimir; Brcic, Mario; Kovac, Mihael] Univ Zagreb, Fac Elect Engn & Comp, Zagreb 10000, Croatia.
C3 University of Zagreb
RP Doncevic, J (corresponding author), Univ Zagreb, Fac Elect Engn & Comp, Zagreb 10000, Croatia.
EM juraj.doncevic@fer.hr
OI Kovac, Mihael/0000-0003-1380-3454; Brcic, Mario/0000-0002-7564-6805
CR Asano Y, 2018, Arxiv, DOI arXiv:1803.06674
   Cockburn A, cockburn.us
   Conway M. E, 1968, How Do Committees Invent?, P4
   Databricks, 2020, Data Mesh in Practice: How Europe's Leading OnlinePlatform for Fashion Goes Beyond the Data Lake
   Dehghani Z., 2018, martinfowler.com
   Dehghani Z., mart-infowler.com
   Dehghani Z., 2022, DATA MESH DELIVERING
   Desai T., Manage data like aproduct to unlock full value
   Doncevic J, GitHub
   Doncevic J, 2023, APPL SCI-BASEL, V13, DOI 10.3390/app13042471
   Evans E., 2004, Domain-Driven Design: Tackling Complexity in the Heart of Software
   Ford N., 2021, Software Archi-tecture: The Hard Parts: Modern Trade-Off Analyses for DistributedArchitectures,, V1st
   Ford Neal., 2017, BUILDING EVOLUTIONAR
   García CG, 2022, BIG DATA COGN COMPUT, V6, DOI 10.3390/bdcc6040158
   Joshi S., 2021, P INT C EL BUS ICEB, V21, P599
   Kleppmann M., 2017, Designing Data-Intensive Applications: The Big Ideas Behind Reliable, Scalable, and Maintainable Systems
   Lei G., Netflix
   Nguonly A, Netflix
   Richards M., 2020, FUNDAMENTALS SOFTWAR
   Svrtan D., Netflix
   VentureBeat, 2019, What the Heck Does It Even Mean to "Do AI"? |Business AI Integration | VB Transform 2019
   Waehner K, The heart of the data mesh beats real-time with ApacheKafka
   White A., GARTNER
NR 23
TC 0
Z9 0
U1 1
U2 1
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD APR
PY 2024
VL 50
IS 4
BP 900
EP 910
DI 10.1109/TSE.2024.3367126
PG 11
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA OC2K3
UT WOS:001204993400007
OA Green Submitted
DA 2024-08-05
ER

EF