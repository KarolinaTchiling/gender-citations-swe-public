FN Clarivate Analytics Web of Science
VR 1.0
PT J
AU Liu, ZX
   Xia, X
   Lo, D
   Yan, M
   Li, SP
AF Liu, Zhongxin
   Xia, Xin
   Lo, David
   Yan, Meng
   Li, Shanping
TI Just-In-Time Obsolete Comment Detection and Update
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Code-comment co-evolution; obsolete comment detection; comment update
AB are valuable resources for the development, comprehension and maintenance of software. However, while changing code, developers sometimes neglect the evolution of the corresponding comments, resulting in obsolete comments. Such obsolete comments can mislead developers and introduce bugs in the future, and are therefore detrimental. We notice that by detecting and updating obsolete comments in time with code changes, obsolete comments can be effectively reduced and even avoided. We refer to this task as Just-In-Time (JIT) Obsolete Comment Detection and Update. In this work, we propose a two-stage framework named CUP2 (Two-stage Comment UPdater) to automate this task. CUP2 consists two components, i.e., an Obsolete Comment Detector named OCD and a Comment UPdater named CUP, each of which relies on a distinct neural network model to perform detection (updates). Specifically, given a code change and a corresponding comment, CUP2 first leverages OCD to predict whether this comment should be updated. If the answer is yes, CUP will be used to generate the new version of the comment automatically. To evaluate CUP2, we build a large-scale dataset with over 4 million code-comment change samples. Our dataset focuses on method-level code changes and updates on method header comments considering the importance and widespread use of such comments. Evaluation results show that 1) both OCD and CUP outperform their baselines by significant margins, and 2) CUP2 performs better than a rule-based baseline. Specifically, the comments generated by CUP2 are identical to the ground truth for 41.8% of the samples that are predicted to be positive by OCD. We believe CUP2 can help developers detect obsolete comments, better understand where and how to update obsolete comments and reduce their edits on obsolete comment updates.
C1 [Liu, Zhongxin] Zhejiang Univ, Ningbo Res Inst, Coll Comp Sci & Technol, Hangzhou 310027, Zhejiang, Peoples R China.
   [Liu, Zhongxin] Peng Cheng Lab, Shenzhen 518066, Guangdong, Peoples R China.
   [Xia, Xin] Software Engn Applicat Technol Lab, Huawei, Shenzhen 518129, Peoples R China.
   [Lo, David] Singapore Management Univ, Sch Informat Syst, Singapore 188065, Singapore.
   [Yan, Meng] Chongqing Univ, Sch Big Data & Software Engn, Chongqing 400044, Peoples R China.
   [Li, Shanping] Zhejiang Univ, Coll Comp Sci & Technol, Hangzhou 310027, Zhejiang, Peoples R China.
C3 Zhejiang University; Peng Cheng Laboratory; Huawei Technologies;
   Singapore Management University; Chongqing University; Zhejiang
   University
RP Xia, X (corresponding author), Software Engn Applicat Technol Lab, Huawei, Shenzhen 518129, Peoples R China.
EM liu_zx@zju.edu.cn; xin.xia@acm.org; davidlo@smu.edu.sg;
   mengy@cqu.edu.cn; shan@zju.edu.cn
RI ; Lo, David/A-2493-2012
OI Yan, Meng/0000-0002-9538-9121; Xia, Xin/0000-0002-6302-3256; Liu,
   Zhongxin/0000-0002-1981-1626; Lo, David/0000-0002-4367-7201
CR [Anonymous], 2020, Natural Language Toolkit
   [Anonymous], 2020, JAVAPARSER
   [Anonymous], 1992, Springer Series in Statistics, DOI DOI 10.1007/978-1-4612-4380-9_16
   [Anonymous], 2020, WORD VECTORS 157 LAN
   Casas Sergio, 2018, P C ROB LEARN PMLR, P947
   Chen QY, 2021, ACM T SOFTW ENG METH, V30, DOI 10.1145/3434280
   Chen WL, 2018, PROC CVPR IEEE, P9416, DOI 10.1109/CVPR.2018.00981
   Chollampatt S, 2018, AAAI CONF ARTIF INTE, P5755
   Chunyang Chen, 2017, Proceedings of the ACM on Human-Computer Interaction, V1, DOI 10.1145/3134667
   Cliff N., 2014, Ordinal Methods for Behavioral Data Analysis
   de Souza S.C.B., 2005, P 23 ANN INT C DES C, P68, DOI [10.1145/1085313, 10.1145/1085313.1085331]
   Falleri Jean-Remy, 2014, P 29 ACM IEEE INT C, P313
   Fluri B, 2007, 14TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P70, DOI 10.1109/WCRE.2007.21
   Fluri B, 2009, SOFTWARE QUAL J, V17, P367, DOI 10.1007/s11219-009-9075-x
   Gao ZP, 2021, PROCEEDINGS OF THE 29TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '21), P218, DOI 10.1145/3468264.3468553
   Ge T, 2018, PROCEEDINGS OF THE 56TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (ACL), VOL 1, P1055
   github, 2020, COMMIT APACHE KAFKA
   Grave E, 2018, PROCEEDINGS OF THE ELEVENTH INTERNATIONAL CONFERENCE ON LANGUAGE RESOURCES AND EVALUATION (LREC 2018), P3483
   Haiduc S., 2010, Proceedings 17th Working Conference on Reverse Engineering (WCRE 2010), P35, DOI 10.1109/WCRE.2010.13
   Hu X, 2020, EMPIR SOFTW ENG, V25, P2179, DOI [10.1007/s10664-019-09730-9, 10.1007/978-981-13-8203-1_1]
   Hu X, 2018, INT C PROGRAM COMPRE, P200, DOI 10.1145/3196321.3196334
   Ibrahim WM, 2012, J SYST SOFTWARE, V85, P2293, DOI 10.1016/j.jss.2011.09.019
   Iyer S, 2016, PROCEEDINGS OF THE 54TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, VOL 1, P2073
   Jiang Zhen Ming, 2006, MSR '06: Proceedings of the 2006 international workshop on Mining software repositories, P179, DOI DOI 10.1145/1137983.1138030
   Karampatsis RM, 2020, PROC INT CONF SOFTW, P1073, DOI 10.1145/3377811.3380342
   Kim M, 2009, PROC INT CONF SOFTW, P309, DOI 10.1109/ICSE.2009.5070531
   Kingma D. P., 2014, arXiv
   Kramer D., 1999, Seventeenth Annual International Conference on Computer Documentation. Conference Proceedings, P147, DOI 10.1145/318372.318577
   LeClair A, 2019, PROC INT CONF SOFTW, P795, DOI 10.1109/ICSE.2019.00087
   LEVENSHT.VI, 1965, DOKL AKAD NAUK SSSR+, V163, P845
   Lin Tan, 2007, Operating Systems Review, V41, P145, DOI 10.1145/1323293.1294276
   Lin TY, 2017, IEEE I CONF COMP VIS, P2999, DOI 10.1109/ICCV.2017.324
   Linares-Vásquez M, 2015, IEEE INT CONF AUTOM, P36, DOI 10.1109/ASE.2015.67
   Liu ZY, 2018, P INT COMP SOFTW APP, P154, DOI 10.1109/COMPSAC.2018.00028
   Liu ZX, 2020, IEEE INT CONF AUTOM, P585, DOI 10.1145/3324884.3416581
   Liu ZX, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P176, DOI 10.1109/ASE.2019.00026
   Liu ZX, 2018, IEEE INT CONF AUTOM, P373, DOI 10.1145/3238147.3238190
   Luong T., 2015, P 2015 C EMP METH NA, DOI [DOI 10.18653/V1/D15-1166, 10.18653/v1/D15-1166]
   Malik H, 2008, PROC IEEE INT CONF S, P167, DOI 10.1109/ICSM.2008.4658065
   Moreno L, 2013, CONF PROC INT SYMP C, P23, DOI 10.1109/ICPC.2013.6613830
   Napoles C, 2016, Arxiv, DOI arXiv:1605.02592
   Napoles C, 2015, PROCEEDINGS OF THE 53RD ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (ACL) AND THE 7TH INTERNATIONAL JOINT CONFERENCE ON NATURAL LANGUAGE PROCESSING (IJCNLP), VOL 2, P588
   Nazar N, 2016, J COMPUT SCI TECH-CH, V31, P883, DOI 10.1007/s11390-016-1671-1
   Nguyen Tien N, 2010, Proceedings of the 32Nd ACM/IEEE International Conference on Software Engineering-Volume 1, ICSE '10, P315
   Padioleau Y, 2009, PROC INT CONF SOFTW, P331, DOI 10.1109/ICSE.2009.5070533
   Panthaplackel S, 2020, 58TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (ACL 2020), P1853
   Papineni K, 2002, 40TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, PROCEEDINGS OF THE CONFERENCE, P311, DOI 10.3115/1073083.1073135
   Parnas DL, 2011, FUTURE OF SOFTWARE ENGINEERING, P125, DOI 10.1007/978-3-642-15187-3_8
   Pascarella L, 2019, EMPIR SOFTW ENG, V24, P1499, DOI 10.1007/s10664-019-09694-w
   Pedregosa F, 2011, J MACH LEARN RES, V12, P2825
   Ratol IK, 2017, IEEE INT CONF AUTOM, P112, DOI 10.1109/ASE.2017.8115624
   See A, 2017, PROCEEDINGS OF THE 55TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (ACL 2017), VOL 1, P1073, DOI 10.18653/v1/P17-1099
   Shin Hwei Tan, 2012, 2012 IEEE Fifth International Conference on Software Testing, Verification and Validation (ICST 2012), P260, DOI 10.1109/ICST.2012.106
   Sridhara G, 2016, PROCEEDINGS OF THE 9TH INDIA SOFTWARE ENGINEERING CONFERENCE, P16, DOI 10.1145/2856636.2856638
   Sridhara Giriprasad, 2010, 25 IEEEACM INT C AUT, P43
   Steidl D, 2013, CONF PROC INT SYMP C, P83, DOI 10.1109/ICPC.2013.6613836
   Tan L, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P11, DOI 10.1145/1985793.1985796
   Tan Lin, 2007, Proceedings of the Fifth International Symposium on Environmental Hydraulics, P1
   Tsantalis N, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P483, DOI 10.1145/3180155.3180206
   Tufano M, 2019, PROC INT CONF SOFTW, P25, DOI 10.1109/ICSE.2019.00021
   Wan Y, 2018, IEEE INT CONF AUTOM, P397, DOI 10.1145/3238147.3238206
   Wang W, 2018, PROCEEDINGS OF THE 56TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (ACL), VOL 1, P1705
   Wen FC, 2019, INT C PROGRAM COMPRE, P53, DOI 10.1109/ICPC.2019.00019
   Wong E, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P380, DOI 10.1109/SANER.2015.7081848
   Woodfield S. N., 1981, 5th International Conference on Software Engineering, P215
   Yin P., 2019, PROC INT C LEARN REP, P1, DOI DOI 10.48550/ARXIV.1903.05662
   Ying A. T., 2005, ACM SIGSOFT software engineering notes, V30, P1
   Zhou Y, 2019, J SYST SOFTWARE, V156, P328, DOI 10.1016/j.jss.2019.07.087
   Zhou Y, 2017, PROC INT CONF SOFTW, P27, DOI 10.1109/ICSE.2017.11
NR 69
TC 8
Z9 8
U1 0
U2 0
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JAN 1
PY 2023
VL 49
IS 1
BP 1
EP 23
DI 10.1109/TSE.2021.3138909
PG 23
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA L1HD8
UT WOS:001020827200001
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Carnevali, L
   German, R
   Santoni, F
   Vicario, E
AF Carnevali, Laura
   German, Reinhard
   Santoni, Francesco
   Vicario, Enrico
TI Compositional Analysis of Hierarchical UML Statecharts
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Model Driven Engineering (MDE); statecharts; non-Markovian
   distributions; semi-Markov proccesses; numerical solution
ID STOCHASTIC PETRI NETS; DYNAMIC FAULT-TREES; TRANSIENT ANALYSIS;
   NUMERICAL-ANALYSIS; PERFORMANCE; MODELS; REJUVENATION; FORMALISM;
   SYSTEMS
AB Quantitative evaluation of stochastic models supports early verification of design choices and assessment of non-functional requirements. Model Driven Engineering (MDE) leverages automated derivation of formal stochastic models from semi-formal artifacts of the Unified Modeling Language (UML) to facilitate deployment of quantitative evaluation methods without disrupting industrial practices. As a major limitation, when generally distributed (GEN) temporal parameters are considered to enhance the model expressivity, the structure and complexity of the underlying stochastic process cannot be easily controlled, possibly impairing the model analyzability. We present a hierarchical modeling formalism based on UML statecharts with GEN durations, designed to guarantee ease of modeling and efficient evaluation of steady-state or transient behaviour until absorption. To this end, fairly lax restrictions are applied to the model syntax to enable separate analysis of the Semi-Markov Process (SMP) underlying each model component. Scalability of solution is assessed by analyzing a suite of synthetic models referred to the context of timed Failure Logic Analysis (FLA) of component-based systems, specifically designed to point out each factor of computational complexity. Notably, the analysis derives both the probability that the system is in each step before failure and the Cumulative Distribution Function (CDF) of the duration of the overall failure process. A challenging case study that significantly and jointly stresses the main factors of computational complexity is finally addressed, performing steady-state analysis of a non-Markovian variant of a server virtualized system from the literature on software rejuvenation.
C1 [Carnevali, Laura; Santoni, Francesco; Vicario, Enrico] Univ Florence, Dept Informat Engn, Via Santa Marta 3, I-50139 Florence, Italy.
   [German, Reinhard] Univ Erlangen Nurnberg, Dept Comp Sci, Martensstr 3, D-91058 Erlangen, Germany.
C3 University of Florence; University of Erlangen Nuremberg
RP Carnevali, L (corresponding author), Univ Florence, Dept Informat Engn, Via Santa Marta 3, I-50139 Florence, Italy.
EM laura.carnevali@unifi.it; reinhard.german@fau.de;
   francesco.santoni@unifi.it; enrico.vicario@unifi.it
CR Amparore EG, 2016, SPRINGER SER RELIAB, P227, DOI 10.1007/978-3-319-30599-8_9
   [Anonymous], 2017, OMG SYST MOD LANG
   [Anonymous], 2009, UML PROF MARTE MOD A
   [Anonymous], 2018, P EUR WORKSH PERF EN
   [Anonymous], 1994, Communications in Reliability, Maintainability and Serviceability
   Avizienis A, 2004, IEEE T DEPEND SECURE, V1, P11, DOI 10.1109/TDSC.2004.2
   Balsamo S, 2004, IEEE T SOFTWARE ENG, V30, P295, DOI 10.1109/TSE.2004.9
   Bernardi S., 2013, Model-Driven dependability assessment of software systems
   Bernardi S, 2019, SOFTW SYST MODEL, V18, P2241, DOI 10.1007/s10270-018-0663-8
   Bernardi S, 2011, SOFTW SYST MODEL, V10, P313, DOI 10.1007/s10270-009-0128-1
   Bernardi S, 2011, IEEE T IND INFORM, V7, P90, DOI 10.1109/TII.2010.2098415
   Bernardi Simona., 2002, Proceedings of the 3rd international workshop on Software and performance, P35, DOI DOI 10.1145/584369.584376
   Biagi M, 2017, LECT NOTES COMPUT SC, V10503, P20, DOI 10.1007/978-3-319-66335-7_2
   Biagi M, 2019, ACM TRANS CYBER-PHYS, V3, DOI 10.1145/3284037
   Bobbio A., 1995, Proceedings. International Computer Performance and Dependability Symposium (Cat. No.95TH8034), P124, DOI 10.1109/IPDS.1995.395811
   Bondavalli A, 2001, COMPUT SYST SCI ENG, V16, P265
   Bressan L, 2018, 2018 14TH EUROPEAN DEPENDABLE COMPUTING CONFERENCE (EDCC 2018), P49, DOI 10.1109/EDCC.2018.00019
   Bucklew James, 2013, Introduction to rare event simulation
   Budde Carlos E., 2020, Tools and Algorithms for the Construction and Analysis of Systems. 26th International Conference, TACAS 2020. Held as Part of the European Joint Conferences on Theory and Practice of Software, ETAPS 2020. Proceedings. Lecture Notes in Computer Science (LNCS 12078), P463, DOI 10.1007/978-3-030-45190-5_26
   Butcher J. C., 2016, NUMERICAL METHODS OR, DOI DOI 10.1002/9781119121534
   Carnevali L, 2009, IEEE T SOFTWARE ENG, V35, P178, DOI 10.1109/TSE.2008.101
   CHOI H, 1994, PERFORM EVALUATION, V20, P337, DOI 10.1016/0166-5316(94)90021-3
   Ciardo G, 2006, PERFORM EVALUATION, V63, P578, DOI 10.1016/j.peva.2005.06.001
   CIARDO G, 1994, IEEE T SOFTWARE ENG, V20, P506, DOI 10.1109/32.297939
   CINLAR E, 1975, MANAGE SCI, V21, P727, DOI 10.1287/mnsc.21.7.727
   da Silva AR, 2015, COMPUT LANG SYST STR, V43, P139, DOI 10.1016/j.cl.2015.06.001
   Dehnert C, 2017, LECT NOTES COMPUT SC, V10427, P592, DOI 10.1007/978-3-319-63390-9_31
   Fourneau JM, 2015, LECT NOTES COMPUT SC, V9259, P176, DOI 10.1007/978-3-319-22264-6_12
   Fourneau JM, 2016, ELECTRON NOTES THEOR, V327, P27, DOI 10.1016/j.entcs.2016.09.022
   Franks G, 2009, IEEE T SOFTWARE ENG, V35, P148, DOI 10.1109/TSE.2008.74
   Gallina B, 2012, EUROMICRO CONF PROC, P233, DOI 10.1109/SEAA.2012.35
   GERMAN R, 1994, PERFORM EVALUATION, V20, P317, DOI 10.1016/0166-5316(94)90020-5
   German R., 2000, PERFORMANCE ANAL COM
   GLYNN PW, 1989, P IEEE, V77, P14, DOI 10.1109/5.21067
   Haas P. J., 2002, SPRING S OPERAT RES
   HAREL D, 1987, SCI COMPUT PROGRAM, V8, P231, DOI 10.1016/0167-6423(87)90035-9
   HASTINGS WK, 1970, BIOMETRIKA, V57, P97, DOI 10.1093/biomet/57.1.97
   Hérault T, 2004, LECT NOTES COMPUT SC, V2937, P73
   Hillston J., 2005, A Compositional Approach to Performance Modelling
   Homm Daniel, 2016, Measurement, Modelling and Evaluation of Dependable Computer and Communication Systems. 18th International GI/ITG Conference, MMB & DFT 2016. Proceedings: LNCS 9629, P92, DOI 10.1007/978-3-319-31559-1_9
   Horváth A, 2012, PERFORM EVALUATION, V69, P315, DOI 10.1016/j.peva.2011.11.002
   Huszerl G, 2002, COMPUT J, V45, P260, DOI 10.1093/comjnl/45.3.260
   Huszerl G, 2001, EUROMICRO CONF PROC, P200, DOI 10.1109/EURMIC.2001.952455
   International Organization for Standardization, 2000, 9241 ISO
   Jansen D.N., 2002, FORMAL TECHNIQUES RE, V2469, P355
   Jansen DN, 2003, LECT NOTES COMPUT SC, V2863, P76
   Jegourel C., 2019, ACM T MODEL COMPUT S, V29, P1
   Kaalen S, 2021, LECT NOTES COMPUT SC, V12846, P105, DOI 10.1007/978-3-030-85172-9_6
   Katoen JP, 2011, PERFORM EVALUATION, V68, P90, DOI 10.1016/j.peva.2010.04.001
   King P, 2000, LECT NOTES COMPUT SC, V1786, P262
   Koziolek H, 2010, PERFORM EVALUATION, V67, P634, DOI 10.1016/j.peva.2009.07.007
   Kulkarni V. G., 2016, MODELING ANAL STOCHA
   Kwiatkowska Marta, 2011, Computer Aided Verification. Proceedings 23rd International Conference, CAV 2011, P585, DOI 10.1007/978-3-642-22110-1_47
   Legay A, 2010, LECT NOTES COMPUT SC, V6418, P122, DOI 10.1007/978-3-642-16612-9_11
   Lindemann C, 1999, PERFORM EVALUATION, V36-7, P35, DOI 10.1016/S0166-5316(99)00020-6
   Lindemann C., 1998, Performance Modelling with Deterministic and Stochastic Petri Nets
   Lindemann C., 2002, P 3 INT WORKSHOP SOF, P25, DOI DOI 10.1145/584369.584375
   Liu YJ, 2019, IEEE 17TH INT CONF ON DEPENDABLE, AUTONOM AND SECURE COMP / IEEE 17TH INT CONF ON PERVAS INTELLIGENCE AND COMP / IEEE 5TH INT CONF ON CLOUD AND BIG DATA COMP / IEEE 4TH CYBER SCIENCE AND TECHNOLOGY CONGRESS (DASC/PICOM/CBDCOM/CYBERSCITECH), P699, DOI 10.1109/DASC/PiCom/CBDCom/CyberSciTech.2019.00132
   LJUNG GM, 1978, BIOMETRIKA, V65, P297, DOI 10.2307/2335207
   Machida F., 2010, PROC IEEE 2 INT WORK, P1, DOI DOI 10.1109/WOSAR.2010.5722098
   Machida F, 2013, PERFORM EVALUATION, V70, P212, DOI 10.1016/j.peva.2012.09.003
   Majzik I, 2003, LECT NOTES COMPUT SC, V2677, P219
   MARSAN MA, 1984, ACM T COMPUT SYST, V2, P93, DOI 10.1145/190.191
   Martina S, 2016, I S MOD ANAL SIM COM, P355, DOI 10.1109/MASCOTS.2016.72
   Merseguer J, 2002, WODES'02: SIXTH INTERNATIONAL WORKSHOP ON DISCRETE EVENT SYSTEMS, PROCEEDINGS, P295, DOI 10.1109/WODES.2002.1167702
   Merseguer J, 2012, DISCRETE EVENT DYN S, V22, P163, DOI 10.1007/s10626-011-0111-1
   METROPOLIS N, 1953, J CHEM PHYS, V21, P1087, DOI 10.1063/1.1699114
   Paolieri M, 2021, IEEE T SOFTWARE ENG, V47, P1211, DOI 10.1109/TSE.2019.2917202
   Parri J., 2021, P 2021 17 EUROPEAN D, P25
   Pooley R., 1999, IEE Proceedings-Software, V146, P2, DOI 10.1049/ip-sen:19990151
   Puliafito A, 1998, PERFORM EVALUATION, V32, P1, DOI 10.1016/S0166-5316(97)00013-8
   Radio Technical Commission for Aeronautics, 2012, DO178B RAD TECHN COM
   Ruijters E, 2015, COMPUT SCI REV, V15-16, P29, DOI 10.1016/j.cosrev.2015.03.001
   Schmidt DC, 2006, COMPUTER, V39, P25, DOI 10.1109/MC.2006.58
   Sharvia S, 2016, SOFTWARE QUALITY ASSURANCE: IN LARGE SCALE AND COMPLEX SOFTWARE-INTENSIVE SYSTEMS, P251, DOI 10.1016/B978-0-12-802301-3.00012-0
   SIRIO Library, 2021, SIRIO
   Stateflow, 2021, PROD STAT HTML
   Stewart W.J., 1994, Introduction to the Numerical Solution of Markov Chains
   Tribastone M, 2008, INT CONF QUANT EVAL, P205, DOI 10.1109/QEST.2008.18
   Trivedi Kishor S., 2009, Performance Evaluation Review, V36, P52, DOI 10.1145/1530873.1530884
   Trowitzsch J., 2005, P INT PAR DISTR PROC, P7
   Trowitzsch J., 2006, PROC INT C PERF EVAL, P34
   UIC, 1999, ERTMS ETCS SYST REQ
   Vicario E, 2009, IEEE T SOFTWARE ENG, V35, P703, DOI 10.1109/TSE.2009.36
   Vijaykumar NL, 2006, COMPUT OPER RES, V33, P2369, DOI 10.1016/j.cor.2005.02.018
   Villen-Altamirano M, 2011, LECT NOTES COMPUT SC, V5233, P509, DOI 10.1007/978-3-642-02742-0_22
   WHITT W, 1982, OPER RES, V30, P125, DOI 10.1287/opre.30.1.125
   Younes H. L. S., 2002, Computer Aided Verification. 14th International Conference, CAV 2002. Proceedings (Lecture Notes in Computer Science Vol.2404), P223
   Younes HakanL. S., 2004, VERIFICATION PLANNIN
   Zheng Z, 2017, IEEE T SERV COMPUT, V10, P448, DOI 10.1109/TSC.2015.2475957
   Zimmermann A, 2017, LECT NOTES COMPUT SC, V10503, P300, DOI 10.1007/978-3-319-66335-7_19
NR 91
TC 0
Z9 1
U1 0
U2 3
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD DEC 1
PY 2022
VL 48
IS 12
BP 4762
EP 4788
DI 10.1109/TSE.2021.3125720
PG 27
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 6X8ON
UT WOS:000896667600003
OA hybrid
DA 2024-07-18
ER

PT J
AU Tang, YT
   Zhou, H
   Luo, XP
   Chen, T
   Wang, HY
   Xu, Z
   Cai, Y
AF Tang, Yutian
   Zhou, Hao
   Luo, Xiapu
   Chen, Ting
   Wang, Haoyu
   Xu, Zhou
   Cai, Yan
TI XDebloat: Towards Automated Feature-Oriented App Debloating
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Codes; Buildings; Prototypes; Transforms; Programming; Software; Surface
   treatment; Android; android app; debloating; instant app; app bundle
AB Existing programming practices for building Android apps mainly follow the "one-size-fits-all" strategy to include lots of functions and adapt to most types of devices. However, this strategy can result in software bloat and many serious issues, such as slow download speed, and large attack surfaces. Existing solutions cannot effectively debloat an app as they either lack flexibility or require human efforts. This work proposes a novel feature-oriented debloating approach and builds a prototype, named XDebloat, to automate this process in a flexible manner. First, We propose three feature location approaches to mine features in an app. XDebloat supports feature location approaches at a fine granularity. It also makes the feature location results editable. Second, XDebloat considers several Android-oriented issues (i.e., callbacks) to perform a more precise analysis. Third, XDebloat supports two major debloating strategies: pruning-based debloating and module-based debloating. We evaluate XDebloat with 200 open-source and 1,000 commercial apps. The results show that XDebloat can successfully remove components from apps or transform apps into on-demand modules within 10 minutes. For the pruning-based debloating strategy, on average, XDebloat can remove 32.1% code from an app. For the module-based debloating strategy, XDebloat can help developers build instant apps or app bundles automatically.
C1 [Tang, Yutian] ShanghaiTech Univ, Shanghai 201210, Peoples R China.
   [Zhou, Hao; Luo, Xiapu] Hong Kong Polytech Univ, Dept Comp, Hong Kong, Peoples R China.
   [Chen, Ting] Univ Elect Sci & Technol China, Chengdu 611731, Peoples R China.
   [Wang, Haoyu] Beijing Univ Posts & Telecommun, Beijing 100876, Peoples R China.
   [Xu, Zhou] Chongqing Univ, Chongqing 400044, Peoples R China.
   [Cai, Yan] Chinese Acad Sci, Inst Software, State Key Lab Comp Sci, Beijing 100864, Peoples R China.
   [Cai, Yan] Univ Chinese Acad Sci, Beijing 100864, Peoples R China.
C3 ShanghaiTech University; Hong Kong Polytechnic University; University of
   Electronic Science & Technology of China; Beijing University of Posts &
   Telecommunications; Chongqing University; Chinese Academy of Sciences;
   Institute of Software, CAS; Chinese Academy of Sciences; University of
   Chinese Academy of Sciences, CAS
RP Luo, XP (corresponding author), Hong Kong Polytech Univ, Dept Comp, Hong Kong, Peoples R China.; Chen, T (corresponding author), Univ Elect Sci & Technol China, Chengdu 611731, Peoples R China.
EM tangyt1@shanghaitech.edu.cn; sunmoonsky0001@gmail.com;
   csxluo@comp.polyu.edu.hk; brokendragon@uestc.edu.cn;
   haoyuwang@bupt.edu.cn; zhouxullx@cqu.edu.cn; ycai.mail@gmail.com
RI Li, Chun/KBC-9591-2024; Tang, Yutian/L-8327-2019; Zhou,
   Hao/AAH-7956-2020; Yu, Chongxiu/KDM-7354-2024
OI Tang, Yutian/0000-0001-5677-4564; Zhou, Hao/0000-0002-0146-5518; Yu,
   Chongxiu/0000-0002-8221-6221
FU Shanghai Pujiang Program [21PJ1410700]; Hong Kong RGC Projects
   [PolyU15223918, PolyU15222317]; National Natural Science Foundation of
   China [62102054]; National Key R&D Program of China [2018YFB0804100];
   Key Research Program of Frontier Sciences, CAS [ZDBS-LY-7006]
FX The work of Yutian Tang was supported by Shanghai Pujiang Program under
   Grant 21PJ1410700 The work of Xiapu Luo was supported by Hong Kong RGC
   Projects under Grants PolyU15223918 and PolyU15222317. The work of Ting
   Chen was supported by the National Natural Science Foundation of China
   under Grant 61872057 and National Key R&D Program of China under Grant
   2018YFB0804100. The work of Haoyu Wang was supported by the National
   Natural Science Foundation of China under Grant 62072046. The work of
   Zhou Xu was supported by the National Natural Science Foundation of
   China under Grant 62102054. The work of Yan Cai was supported by the Key
   Research Program of Frontier Sciences, CAS under Grant ZDBS-LY-7006.
CR Ami AmitSeal., 2021, ACM Transactions on Privacy and Security, V24, P1
   Android, 2021, ANDROID ASSET PACKAG
   Android, 2021, DEVICE PERMISSIONS I
   Quach A, 2018, PROCEEDINGS OF THE 27TH USENIX SECURITY SYMPOSIUM, P869
   [Anonymous], 2013, Android Design Patterns: Interaction Design Solutions for Developers
   [Anonymous], 2015, P 19 INT C SOFTW PRO, DOI DOI 10.1145/2791060.2791108
   [Anonymous], 2016, Feature-Oriented Software Product Lines
   Arzt S, 2014, ACM SIGPLAN NOTICES, V49, P259, DOI [10.1145/2666356.2594299, 10.1145/2594291.2594299]
   Au Kathy Wain Yee, 2012, P 2012 ACM C COMP CO, P217
   Behringer B, 2017, PROC INT CONF SOFTW, P563, DOI 10.1109/ICSE.2017.58
   Bhattacharya S, 2013, ACM SIGPLAN NOTICES, V48, P745, DOI [10.1145/2544173.2509522, 10.1145/2509136.2509522]
   Bu YY, 2013, PROCEEDINGS OF THE ACM SIGPLAN INTERNATIONAL SYMPOSIUM ON MEMORY MANAGEMENT (ISMM '13), P119
   C. T. C. M. R. W. O. Creator, 2021, APKTOOL TOOL REVERSE
   Cao YZ, 2015, 22ND ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2015), DOI 10.14722/ndss.2015.23140
   Corporate, 2021, SMARTPHONE MARKET SH
   Dex2Jar, 2021, DEX2JAR
   Emma, 2019, EMMA
   F-Droid, 2021, about us
   Ferles K, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P174, DOI 10.1145/3106237.3106249
   Fernandes E, 2016, P IEEE S SECUR PRIV, P636, DOI 10.1109/SP.2016.44
   Fortunato S, 2010, PHYS REP, V486, P75, DOI 10.1016/j.physrep.2009.11.002
   Ghosh S, 2018, INT PARALL DISTRIB P, P885, DOI 10.1109/IPDPS.2018.00098
   Google, 2019, APP BUNDL
   Google, 2021, BUNDL
   Google, 2021, ANDR DOC
   Google, 2019, INST APP
   Google, 2021, PROT BUFF
   Gorla A, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P1025, DOI 10.1145/2568225.2568276
   Heo K, 2018, PROCEEDINGS OF THE 2018 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY (CCS'18), P380, DOI 10.1145/3243734.3243838
   Hoffmann J., 2013, P 28 ANN ACM S APPL, P1844
   Holavanalli S, 2013, IEEE INT CONF AUTOM, P652, DOI 10.1109/ASE.2013.6693128
   Huang JJ, 2017, IEEE INT CONF AUTOM, P286, DOI 10.1109/ASE.2017.8115642
   Jiang YF, 2018, PROC INT SYMP SOFTW, P189, DOI 10.1109/ISSRE.2018.00029
   Jiang YF, 2016, P INT COMP SOFTW APP, P12, DOI 10.1109/COMPSAC.2016.146
   Jiang YF, 2016, IEEE HI ASS SYS ENGR, P122, DOI 10.1109/HASE.2016.27
   Johann T, 2017, INT REQUIR ENG CONF, P21, DOI 10.1109/RE.2017.71
   Kästner C, 2014, IEEE T SOFTWARE ENG, V40, P67, DOI 10.1109/TSE.2013.45
   Nguyen K, 2018, ACM T SOFTW ENG METH, V26, DOI 10.1145/3162626
   Landman D, 2017, PROC INT CONF SOFTW, P507, DOI 10.1109/ICSE.2017.53
   Lettner D, 2015, 2015 ACM/IEEE 18TH INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS), P386, DOI 10.1109/MODELS.2015.7338270
   Li L., 2016, PROC ISSTA, P318
   Mao K., 2016, P 25 INT S SOFTW TES, P94
   Mukelabai M, 2018, IEEE INT CONF AUTOM, P155, DOI 10.1145/3238147.3238201
   Nesic D, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P62, DOI 10.1145/3338906.3338974
   Octeau D, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P77, DOI 10.1109/ICSE.2015.30
   Octeau Damien, 2013, P 22 USENIX C SEC SE, P543
   Pan X, 2018, PROCEEDINGS OF THE 27TH USENIX SECURITY SYMPOSIUM, P1669
   Rastogi V, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P476, DOI 10.1145/3106237.3106271
   Regehr J, 2012, ACM SIGPLAN NOTICES, V47, P335, DOI 10.1145/2345156.2254104
   Rountev A., GATOR PROGRAM ANAL T
   Sharif H, 2018, IEEE INT CONF AUTOM, P329, DOI 10.1145/3238147.3238160
   Sun CN, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P361, DOI 10.1145/3180155.3180236
   Tam K, 2017, ACM COMPUT SURV, V49, DOI 10.1145/3017427
   Tang YT, 2022, IEEE T SOFTWARE ENG, V48, P3044, DOI 10.1109/TSE.2021.3077654
   Tang YT, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P914, DOI 10.1145/3368089.3409702
   Wei FS, 2018, ANALYTICAL METHODS FOR FOOD SAFETY BY MASS SPECTROMETRY, VOL II VETERINARY DRUGS, P1, DOI [10.1016/B978-0-12-814165-6.00001-4, 10.1145/3183575]
   XDebloat, 2021, XDEBL ONL ART
   Xu GQ, 2009, PLDI'09 PROCEEDINGS OF THE 2009 ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P419, DOI 10.1145/1542476.1542523
   Xu Guoqing, 2010, P FSE SDP WORKSH FUT, P421
   Yutian Tang, 2019, 2019 34th IEEE/ACM International Conference on Automated Software Engineering (ASE). Proceedings, P682, DOI 10.1109/ASE.2019.00069
NR 60
TC 4
Z9 4
U1 0
U2 2
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD NOV 1
PY 2022
VL 48
IS 11
BP 4501
EP 4520
DI 10.1109/TSE.2021.3120213
PG 20
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 6C4JD
UT WOS:000881981800015
DA 2024-07-18
ER

PT J
AU Zhang, PC
   Ren, B
   Dong, H
   Dai, QY
AF Zhang, Pengcheng
   Ren, Bin
   Dong, Hai
   Dai, Qiyin
TI <i>CAGFuzz:</i> Coverage-Guided Adversarial Generative Fuzzing Testing
   for Image-Based Deep Learning Systems
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Testing; Fuzzing; Generators; Neurons; Feature extraction; Perturbation
   methods; Semantics; Deep neural network; fuzz testing; adversarial
   example; coverage criteria
AB Deep Neural Network (DNN) driven technologies have been extensively employed in various aspects of our life. Nevertheless, the applied DNN always fails to detect erroneous behaviors, which may lead to serious problems. Several approaches have been proposed to enhance adversarial examples for automatically testing deep learning (DL) systems, such as image-based DL systems. However, the approaches contain the following two limitations. First, existing approaches only take into account small perturbations on adversarial examples, they design and generate adversarial examples for a certain particular DNN model. This might hamper the transferability of the examples for other DNN models. Second, they only use shallow features (e.g., pixel-level features) to judge the differences between the generated adversarial examples and the original examples. The deep features, which contain high-level semantic information, such as image object categories and scene semantics, are completely neglected. To address these two problems, we propose CAGFuzz, a Coverage-guided Adversarial Generative Fuzzing testing approach for image-based DL systems. CAGFuzz is able to generate adversarial examples for mainstream DNN models to discover their potential errors. First, we train an Adversarial Example Generator (AEG) based on general datasets. AEG only considers the data characteristics to alleviate the transferability problem. Second, we extract the deep features of the original and adversarial examples, and constrain the adversarial examples by cosine similarity to ensure that the deep features of the adversarial examples remain unchanged. Finally, we use the adversarial examples to retrain the models. Based on several standard datasets, we design a set of dedicated experiments to evaluate CAGFuzz. The experimental results show that CAGFuzz can detect more hidden errors, enhance the accuracy of the target DNN models, and generate adversarial examples with higher transferability.
C1 [Zhang, Pengcheng; Ren, Bin; Dai, Qiyin] Hohai Univ, Key Lab Water Big Data Technol, Minist Water Resources, Nanjing 210098, Peoples R China.
   [Zhang, Pengcheng; Ren, Bin; Dai, Qiyin] Hohai Univ, Coll Comp & Informat, Nanjing 210098, Peoples R China.
   [Dong, Hai] RMIT Univ, Sch Comp Technol, Melbourne, Vic 3000, Australia.
C3 Hohai University; Hohai University; Royal Melbourne Institute of
   Technology (RMIT)
RP Zhang, PC (corresponding author), Hohai Univ, Key Lab Water Big Data Technol, Minist Water Resources, Nanjing 210098, Peoples R China.; Zhang, PC (corresponding author), Hohai Univ, Coll Comp & Informat, Nanjing 210098, Peoples R China.
EM pchzhang@hhu.edu.cn; 18356158631@163.com; hai.dong@rmit.edu.au;
   1147471974@qq.com
RI Dong, Hai/E-9101-2010
OI Dong, Hai/0000-0002-7033-5688; Zhang, Pengcheng/0000-0003-3594-408X
FU Natural Science Foundation of Jiangsu Province [BK20191297]; Fundamental
   Research Funds for the Central Universities of China [B210202075]
FX This work was supported by the Natural Science Foundation of Jiangsu
   Province under Grant BK20191297 and the Fundamental Research Funds for
   the Central Universities of China under Grant B210202075.
CR Nguyen A, 2015, PROC CVPR IEEE, P427, DOI 10.1109/CVPR.2015.7298640
   Babenko A, 2014, LECT NOTES COMPUT SC, V8689, P584, DOI 10.1007/978-3-319-10590-1_38
   Bengio S, 2016, ARXIV
   Bertolino A, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P85, DOI 10.1109/FOSE.2007.25
   Carlini N, 2017, P IEEE S SECUR PRIV, P39, DOI 10.1109/SP.2017.49
   Chen SZ, 2022, Arxiv, DOI arXiv:2102.10343
   Chen Y., 2020, P 29 ACM SIGSOFT INT, P14
   Chollet F., 2018, KERAS APPL
   Donahue J, 2014, PR MACH LEARN RES, V32
   Dong YP, 2019, PROC CVPR IEEE, P4307, DOI 10.1109/CVPR.2019.00444
   Dong YP, 2018, PROC CVPR IEEE, P9185, DOI 10.1109/CVPR.2018.00957
   Engstrom L, 2019, PR MACH LEARN RES, V97
   Eykholt K, 2018, PROC CVPR IEEE, P1625, DOI 10.1109/CVPR.2018.00175
   Fawzi A., 2015, PROCEDINGS BRIT MACH, DOI DOI 10.5244/C.29.106
   Gan ST, 2018, P IEEE S SECUR PRIV, P679, DOI 10.1109/SP.2018.00040
   Gao X, 2020, PROC INT CONF SOFTW, P1147, DOI 10.1145/3377811.3380415
   Gerasimou S, 2020, PROC INT CONF SOFTW, P702, DOI 10.1145/3377811.3380391
   Goodfellow I, 2020, COMMUN ACM, V63, P139, DOI 10.1145/3422622
   Guo JM, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P739, DOI 10.1145/3236024.3264835
   Hou XX, 2017, Arxiv, DOI arXiv:1707.09482
   Goodfellow IJ, 2015, Arxiv, DOI [arXiv:1412.6572, DOI 10.48550/ARXIV.1412.6572]
   Latah M, 2019, IET NETW, V8, P79, DOI 10.1049/iet-net.2018.5082
   Lecun Y, 1998, P IEEE, V86, P2278, DOI 10.1109/5.726791
   LeCun Y., 1995, The handbook of brain theory and neural networks, V3361, DOI [10.5555/303568.303704, DOI 10.5555/303568.303704]
   Li Deng, 2012, IEEE Signal Processing Magazine, V29, P141, DOI [10.1109/MSP.2012.2211477, DOI 10.1109/MSP.2012.2211477]
   Li HM, 2017, FRONT NEUROSCI-SWITZ, V11, DOI 10.3389/fnins.2017.00309
   Liu Y, 2018, INT J CONTROL, V91, P2250, DOI 10.1080/00207179.2017.1337933
   Ma L, 2018, IEEE INT CONF AUTOM, P120, DOI 10.1145/3238147.3238202
   Ma L, 2019, 2019 IEEE 26TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER), P614, DOI [10.1109/saner.2019.8668044, 10.1109/SANER.2019.8668044]
   Ma L, 2018, PROC INT SYMP SOFTW, P100, DOI 10.1109/ISSRE.2018.00021
   Odena A, 2019, PR MACH LEARN RES, V97
   Padhye R, 2019, Arxiv, DOI [arXiv:1812.00078, DOI 10.1145/3293882.3330576]
   Papernot N, 2018, Arxiv, DOI [arXiv:1610.00768, 10.48550/arXiv.1610.00768]
   Papernot N, 2016, 1ST IEEE EUROPEAN SYMPOSIUM ON SECURITY AND PRIVACY, P372, DOI 10.1109/EuroSP.2016.36
   Pei KX, 2017, PROCEEDINGS OF THE TWENTY-SIXTH ACM SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES (SOSP '17), P1, DOI 10.1145/3132747.3132785
   Rawat S, 2017, 24TH ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2017), DOI 10.14722/ndss.2017.23404
   Rosenband DL, 2017, SYMP VLSI CIRCUITS, pC20, DOI 10.23919/VLSIC.2017.8008500
   Russakovsky O, 2015, INT J COMPUT VISION, V115, P211, DOI 10.1007/s11263-015-0816-y
   Salfner F, 2010, ACM COMPUT SURV, V42, DOI 10.1145/1670679.1670680
   Samangouei P, 2018, Arxiv, DOI [arXiv:1805.06605, DOI 10.48550/ARXIV.1805.06605]
   Serebryany K., 2017, PROC 11 M LLVM DEVEL
   Serebryany Kostya, 2015, LIBFUZZER LIBFUZZER
   Sermanet P, 2011, 2011 INTERNATIONAL JOINT CONFERENCE ON NEURAL NETWORKS (IJCNN), P2809, DOI 10.1109/IJCNN.2011.6033589
   Seshia SA, 2020, IEEE DES TEST, V37, P8, DOI 10.1109/MDAT.2020.2968274
   Simonyan K, 2015, Arxiv, DOI arXiv:1409.1556
   Stocco A, 2020, PROC INT CONF SOFTW, P359, DOI 10.1145/3377811.3380353
   Sun YC, 2019, Arxiv, DOI arXiv:1803.04792
   Sun YC, 2018, IEEE INT CONF AUTOM, P109, DOI 10.1145/3238147.3238172
   Szegedy C, 2014, Arxiv, DOI [arXiv:1312.6199, DOI 10.1109/CVPR.2015.7298594]
   Tian Y., 2021, THESIS COLUMBIA U NE
   Tian YC, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P303, DOI 10.1145/3180155.3180220
   TramŠr F, 2017, Arxiv, DOI arXiv:1704.03453
   Tramonti F, 2019, PSYCHOL HEALTH MED, V24, P27, DOI 10.1080/13548506.2018.1510131
   Tsipras Dimitris, 2018, arXiv
   Wang Z, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P788, DOI 10.1145/3368089.3409761
   Witten IH, 2011, MOR KAUF D, P1
   Wu L, 2018, Arxiv, DOI arXiv:1802.09707
   Wu Y, 2016, arXiv, P1
   Xie XF, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P1162, DOI 10.1109/ASE.2019.00127
   Xie XF, 2019, PROCEEDINGS OF THE 28TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA '19), P146, DOI 10.1145/3293882.3330579
   Yang YY, 2020, ADV NEUR IN, V33
   Yu XY, 2019, IEEE T NEUR NET LEAR, V30, P2805, DOI 10.1109/TNNLS.2018.2886017
   Yun S, 2019, IEEE I CONF COMP VIS, P6022, DOI 10.1109/ICCV.2019.00612
   Zalewski M., 2017, American fuzzy lop
   Zhan F.B., 2015, Air Pollution-Exposure-Health Effect Indicators: Mining massive geographically referenced environmental health data to identify risk factors for birth defects, P1
   Zhang HY, 2019, PR MACH LEARN RES, V97
   Zhang JM, 2022, IEEE T SOFTWARE ENG, V48, P1, DOI 10.1109/TSE.2019.2962027
   Zhang Jingfeng, 2020, ICML
   Zhang PX, 2020, PROC INT CONF SOFTW, P949, DOI 10.1145/3377811.3380331
   Zhao Z, 2017, ARXIV171011342, P1
   Zhu J.-Y., 2017, IEEE I CONF COMP VIS, P2223, DOI DOI 10.1109/ICCV.2017.244
NR 71
TC 7
Z9 7
U1 7
U2 23
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD NOV 1
PY 2022
VL 48
IS 11
BP 4630
EP 4646
DI 10.1109/TSE.2021.3124006
PG 17
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 6C4JD
UT WOS:000881981800022
DA 2024-07-18
ER

PT J
AU Samuel, BM
   Bala, H
   Daniel, S
   Ramesh, V
AF Samuel, Binny M.
   Bala, Hillol
   Daniel, Sherae
   Ramesh, V
TI Deconstructing the Nature of Collaboration in Organizations Open Source
   Software Development: The Impact of Developer and Task Characteristics
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Organizations; Task analysis; Collaboration; Open source software;
   Standards organizations; Information systems; Writing; Software
   development; task time clarity; organizations open source software
   development; open source software collaboration; open source software;
   task assignment; task criticality
ID MIXED-METHODS RESEARCH; COMMUNITY SOURCE; KNOWLEDGE; PROJECTS; MODEL;
   COORDINATION; SUCCESS; TEAMS; PARTICIPATION; SUPERPOSITION
AB One opportunity for organizations to participate in open source software (OSS) development is through organizations OSS (orgsOSS), a term we use to describe a group of organizations that commit resources to collectively develop OSS. This archetype of OSS development is distinct from other types that include organizations, yet is understudied. As organizations increasingly contribute to and rely on OSS as part of their strategy, understanding how they can collaborate to build software holds importance for the future of software development. This study collects a unique dataset of development tasks from a large orgsOSS project spanning over two years and seven releases. Building on existing OSS research, we explore norms with respect to collaboration, i.e., how developers assign, discuss, and complete tasks, in an orgsOSS project. Interestingly, our analysis reveals that developers in orgsOSS do not always adhere to ideals of widespread sharing and participation espoused by traditional OSS, however some developer and task characteristics helped foster these ideals. Based on these and other findings, we develop a set of propositions and associated collaboration mechanisms that are important to future orgsOSS and other similarly structured software development projects.
C1 [Samuel, Binny M.; Daniel, Sherae] Univ Cincinnati, Lindner Coll Business, Operat Business Analyt & Informat Syst Dept, Cincinnati, OH 45221 USA.
   [Bala, Hillol; Ramesh, V] Indiana Univ, Kelley Sch Business, Dept Operat & Decis Technol, Bloomington, IN 47405 USA.
C3 University System of Ohio; University of Cincinnati; Indiana University
   System; Indiana University Bloomington; IU Kelley School of Business
RP Samuel, BM (corresponding author), Univ Cincinnati, Lindner Coll Business, Operat Business Analyt & Informat Syst Dept, Cincinnati, OH 45221 USA.
EM samuelby@uc.edu; hbala@indiana.edu; daniesr@uc.edu; venkat@indiana.edu
RI Samuel, Binny/KTI-7294-2024; Bala, Hillol/IAM-7692-2023; Samuel,
   Binny/KTI-7292-2024
OI Samuel, Binny/0000-0002-3223-4616; Bala, Hillol/0000-0002-3302-5015; 
CR Ågerfalk PJ, 2008, MIS QUART, V32, P385
   Ahmed I, 2017, S VIS LANG HUM CEN C, P223, DOI 10.1109/VLHCC.2017.8103471
   [Anonymous], 2010, PROC ACAD MANAGE ANN
   [Anonymous], 2006, The Internet and Higher Education, DOI [10.1016/j.iheduc.2005.11.00, DOI 10.1016/J.IHEDUC.2005.11.00, DOI 10.1016/J.IHEDUC.2005.11.001]
   [Anonymous], 2014, SOFTWARE PROJECT MAN
   [Anonymous], 2011, P 19 ACM SIGSOFT S 1
   Bala H, 2007, INFORM SYST RES, V18, P340, DOI 10.1287/isre.1070.0134
   Banker RD, 1998, MANAGE SCI, V44, P433, DOI 10.1287/mnsc.44.4.433
   Barcomb Ann, 2022, IEEE Transactions on Software Engineering, V48, P260, DOI 10.1109/TSE.2020.2985093
   Barcomb A, 2020, IEEE T SOFTWARE ENG, V46, P962, DOI 10.1109/TSE.2018.2872713
   Boh WF, 2007, MANAGE SCI, V53, P1315, DOI 10.1287/mnsc.1060.0687
   Bolici F., 2009, 2 INT WORKSHOP SOCIO, P1
   Bolici F, 2016, COGN SYST RES, V38, P14, DOI 10.1016/j.cogsys.2015.12.003
   Bonaccorsi A., 2007, Proceedings of the First International Workshop on Emerging Trends in FLOSS Research and Development, P13, DOI DOI 10.1109/FLOSS.2007.3
   Brock A., 2013, P OPENFORUM EUR LTD
   Butler BS, 2001, INFORM SYST RES, V12, P346, DOI 10.1287/isre.12.4.346.9703
   Capra E, 2008, IEEE T SOFTWARE ENG, V34, P765, DOI 10.1109/TSE.2008.68
   Cataldo M., 2006, P 2006 20 06 ANN C C, P353, DOI DOI 10.1145/1180875.1180929
   Choudhary S. S., 2018, CMUISR18101
   Chung S, 2020, INFORM SYST RES, V31, P258, DOI 10.1287/isre.2019.0884
   Corbet J., 2013, Linux kernel development: How fast it is going, who is doing it, what they are doing, and who is sponsoring it, V2013
   Crowe S, 2011, BMC MED RES METHODOL, V11, DOI 10.1186/1471-2288-11-100
   Crowston K., 2005, P 26 INT C INFORM SY, P11
   Crowston K, 2007, INFORM SOFTWARE TECH, V49, P564, DOI 10.1016/j.infsof.2007.02.004
   Daniel S, 2018, J STRATEGIC INF SYST, V27, P237, DOI 10.1016/j.jsis.2018.04.002
   Daniel S, 2016, J STRATEGIC INF SYST, V25, P159, DOI 10.1016/j.jsis.2016.02.006
   Daniel S, 2013, INFORM SYST RES, V24, P312, DOI 10.1287/isre.1120.0435
   Dinh-Trong TT, 2005, IEEE T SOFTWARE ENG, V31, P481, DOI 10.1109/TSE.2005.73
   Ehls D, 2017, PROCEEDINGS OF THE 50TH ANNUAL HAWAII INTERNATIONAL CONFERENCE ON SYSTEM SCIENCES, P5327
   Espinosa JA, 2007, ORGAN SCI, V18, P613, DOI 10.1287/orsc.1070.0297
   Espinosa JA, 2007, J MANAGE INFORM SYST, V24, P135, DOI 10.2753/MIS0742-1222240104
   Fang YL, 2009, J MANAGE INFORM SYST, V25, P9, DOI 10.2753/MIS0742-1222250401
   Faraj S, 2011, ORGAN SCI, V22, P1224, DOI 10.1287/orsc.1100.0614
   Feller J, 2008, INFORM SYST RES, V19, P475, DOI 10.1287/isre.1080.0207
   Filippova A, 2016, ACM CONFERENCE ON COMPUTER-SUPPORTED COOPERATIVE WORK AND SOCIAL COMPUTING (CSCW 2016), P705, DOI 10.1145/2818048.2820018
   Finley K., NETFLIX OPEN SOURCE
   Fitzgerald B, 2006, MIS QUART, V30, P587
   Forrest Darren, 2012, PROC IFIP INT C OPEN, P201
   Gaughan G, 2009, 2009 35TH EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS, PROCEEDINGS, P20, DOI 10.1109/SEAA.2009.86
   Gerlach James H., 2016, International Journal of Open Source Software and Processes, V7, P20, DOI 10.4018/IJOSSP.2016070102
   Germonprez Matt, 2018, Proceedings of the ACM on Human-Computer Interaction, V2, DOI 10.1145/3274326
   Germonprez M, 2017, INFORM SYST RES, V28, P64, DOI 10.1287/isre.2016.0662
   GERSICK CJG, 1991, ACAD MANAGE REV, V16, P10, DOI 10.2307/258605
   GERSICK CJG, 1988, ACAD MANAGE J, V31, P9, DOI 10.5465/256496
   Gurbani V. K., 2006, 28th International Conference on Software Engineering Proceedings, P472, DOI 10.1145/1134285.1134352
   Gurbani VK, 2010, COMMUN ACM, V53, P155, DOI 10.1145/1646353.1646392
   Healey J. R., GM FORD JOINTLY DEV
   Henkel J, 2009, IND CORP CHANGE, V18, P435, DOI 10.1093/icc/dtn046
   Hoegl M, 2001, ORGAN SCI, V12, P435, DOI 10.1287/orsc.12.4.435.10635
   Homscheid D, 2015, LECT NOTES COMPUT SC, V9373, P299, DOI 10.1007/978-3-319-25013-7_24
   Howison J, 2014, MIS QUART, V38, P29, DOI 10.25300/MISQ/2014/38.1.02
   Jensen C., 2005, Proceedings of the 38th Annual Hawaii International Conference on System Sciences, p196b
   Joseph F., 2007, PROC PERSPECTIVES FR, P393
   Kalliamvakou E, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P574, DOI 10.1109/ICSE.2015.74
   Ke WL, 2009, INT J ELECTRON COMM, V13, P39, DOI 10.2753/JEC1086-4415130403
   Kiley D., GOODBYE NUMMI PLANT
   Knauss E., 2012, 2012 IEEE 20th International Requirements Engineering Conference (RE 2012), P251, DOI 10.1109/RE.2012.6345811
   Kuk G, 2006, MANAGE SCI, V52, P1031, DOI 10.1287/mnsc.1060.0551
   Lakhani KR, 2003, RES POLICY, V32, P923, DOI 10.1016/S0048-7333(02)00095-1
   Lee AS, 2012, MIS QUART, V36, P749
   Lee D, 2018, MANAGE SCI, V64, P5105, DOI 10.1287/mnsc.2017.2902
   Lee GK, 2003, ORGAN SCI, V14, P633, DOI 10.1287/orsc.14.6.633.24866
   Lindberg A, 2016, INFORM SYST RES, V27, P751, DOI 10.1287/isre.2016.0673
   Lindman J, 2008, INT FED INFO PROC, V275, P381, DOI 10.1007/978-0-387-09684-1_36
   Liu ML, 2021, J STRATEGIC INF SYST, V30, DOI 10.1016/j.jsis.2021.101671
   Liu ML, 2020, INFORM ORGAN-UK, V30, DOI 10.1016/j.infoandorg.2019.100274
   Liu ML, 2014, COMMUN ACM, V57, P88, DOI 10.1145/2593687
   Liu ML, 2012, J SYST SOFTWARE, V85, P2921, DOI 10.1016/j.jss.2012.06.026
   Lunden I., 2018, SNYK RAISES 22M 100M
   Ma XJ, 2013, SCI CHINA INFORM SCI, V56, DOI 10.1007/s11432-013-4914-6
   Medappa PK, 2019, INFORM SYST RES, V30, P764, DOI 10.1287/isre.2018.0829
   Mendez C, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1004, DOI 10.1145/3180155.3180241
   Michlmayr M, 2015, IEEE SOFTWARE, V32, P54
   Moon E., INT J INFORM SYST MA, V2, P150
   Moon J. Y., 2000, 1 MONDAY, V5, P11
   Morgan L., 2010, PROC ECIS, P1
   Nguyen-Duc A, 2019, E-INFORMATICA, V13, P37, DOI 10.5277/e-Inf190102
   O'Mahony S., 2005, PROC 38 ANN HAWAII I, p196C
   Padala HS, 2022, IEEE T SOFTWARE ENG, V48, P241, DOI 10.1109/TSE.2020.2984173
   Palyart M, 2018, IEEE T SOFTWARE ENG, V44, P1132, DOI 10.1109/TSE.2017.2756043
   Pascarella L, 2017, IEEE WORK CONF MIN S, P227, DOI 10.1109/MSR.2017.63
   Paulson JW, 2004, IEEE T SOFTWARE ENG, V30, P246, DOI 10.1109/TSE.2004.1274044
   Payne A, 2010, LIBR REV, V59, P708, DOI 10.1108/00242531011087033
   Pinto G, 2018, 2018 IEEE/ACM 11TH INTERNATIONAL WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING (CHASE), P110, DOI 10.1145/3195836.3195858
   Poo-Caamaño G, 2017, J INTERNET SERV APPL, V8, DOI 10.1186/s13174-017-0063-2
   Read R., WHAT DOES TOYOTA MAZ
   Redmiles D, 2007, WIRTSCHAFTSINF, V49, P28
   Riehle D, 2014, P ANN HICSS, P3286, DOI 10.1109/HICSS.2014.407
   Riehle D, 2009, IEEE SOFTWARE, V26, P52, DOI 10.1109/MS.2009.44
   Robles G, 2019, IEEE SOFTWARE, V36, P12, DOI 10.1109/MS.2019.2933672
   Rossi B, 2009, INT FED INFO PROC, V299, P83
   Samuel BM, 2018, MIS QUART, V42, P1187, DOI 10.25300/MISQ/2018/13255
   Samuel BM, 2015, IEEE T SOFTWARE ENG, V41, P19, DOI 10.1109/TSE.2014.2354043
   Sarma A, 2009, PROC INT CONF SOFTW, P23, DOI 10.1109/ICSE.2009.5070505
   Scacchi W., 2002, IEE Proceedings-Software, V149, P24, DOI 10.1049/ip-sen:20020202
   Setia P, 2012, INFORM SYST RES, V23, P144, DOI 10.1287/isre.1100.0311
   Shaikh M, 2017, INFORM ORGAN-UK, V27, P116, DOI 10.1016/j.infoandorg.2017.04.001
   Sherif K, 2006, MIS QUART, V30, P339
   Steinmacher I, 2019, COMPUT SUPP COOP W J, V28, P247, DOI 10.1007/s10606-018-9335-z
   Stewart KJ, 2006, MIS QUART, V30, P291
   Stol KJ, 2015, IEEE SOFTWARE, V32, P60, DOI 10.1109/MS.2014.77
   Stol KJ, 2014, ACM T SOFTW ENG METH, V23, DOI 10.1145/2533685
   Stol KJ, 2011, INFORM SOFTWARE TECH, V53, P1319, DOI 10.1016/j.infsof.2011.06.007
   Tambe P, 2020, MANAGE SCI, V66, P3010, DOI 10.1287/mnsc.2019.3343
   Thompson C., FEW TIRED OPEN SOURC
   Venkatesh V, 2016, J ASSOC INF SYST, V17, P435, DOI 10.17705/1jais.00433
   Venkatesh V, 2013, MIS QUART, V37, P21
   von Krogh G, 2003, RES POLICY, V32, P1217, DOI 10.1016/S0048-7333(03)00050-7
   Wang JG, 2011, PROCEEDINGS OF THE 4TH INTERNATIONAL WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING (CHASE'11), P76
   Ye YW, 2003, PROC INT CONF SOFTW, P419
   You S, 2019, PROCEEDINGS OF THE 52ND ANNUAL HAWAII INTERNATIONAL CONFERENCE ON SYSTEM SCIENCES, P983
   Zemlin J., MICROSOFT BUYS GITHU
   Zhang C, 2013, INFORM SYST RES, V24, P1112, DOI 10.1287/isre.2013.0485
   Zhang YX, 2021, IEEE T SOFTWARE ENG, V47, P2242, DOI 10.1109/TSE.2019.2946156
   Zhou MH, 2016, ACM T SOFTW ENG METH, V25, DOI 10.1145/2876443
   Zhou MH, 2015, IEEE T SOFTWARE ENG, V41, P82, DOI 10.1109/TSE.2014.2349496
NR 116
TC 2
Z9 2
U1 3
U2 12
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD OCT 1
PY 2022
VL 48
IS 10
BP 3969
EP 3987
DI 10.1109/TSE.2021.3108935
PG 19
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 5L3GA
UT WOS:000870301800014
DA 2024-07-18
ER

PT J
AU Abdellatif, A
   Badran, K
   Costa, DE
   Shihab, E
AF Abdellatif, Ahmad
   Badran, Khaled
   Costa, Diego Elias
   Shihab, Emad
TI A Comparison of Natural Language Understanding Platforms for Chatbots in
   Software Engineering
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Software chatbots; natural language understanding platforms; empirical
   software engineering
ID COEFFICIENT
AB Chatbots are envisioned to dramatically change the future of Software Engineering, allowing practitioners to chat and inquire about their software projects and interact with different services using natural language. At the heart of every chatbot is a Natural Language Understanding (NLU) component that enables the chatbot to understand natural language input. Recently, many NLU platforms were provided to serve as an off-the-shelf NLU component for chatbots, however, selecting the best NLU for Software Engineering chatbots remains an open challenge. Therefore, in this paper, we evaluate four of the most commonly used NLUs, namely IBM Watson, Google Dialogflow, Rasa, and Microsoft LUIS to shed light on which NLU should be used in Software Engineering based chatbots. Specifically, we examine the NLUs' performance in classifying intents, confidence scores stability, and extracting entities. To evaluate the NLUs, we use two datasets that reflect two common tasks performed by Software Engineering practitioners, 1) the task of chatting with the chatbot to ask questions about software repositories 2) the task of asking development questions on Q&A forums (e.g., Stack Overflow). According to our findings, IBM Watson is the best performing NLU when considering the three aspects (intents classification, confidence scores, and entity extraction). However, the results from each individual aspect show that, in intents classification, IBM Watson performs the best with an Fl-measure > 84%, but in confidence scores, Rasa comes on top with a median confidence score higher than 0.91. Our results also show that all NLUs, except for Diabgflow, generally provide trustable confidence scores. For entity extraction, Microsoft LUIS and IBM Watson outperform other NLUs in the two SE tasks. Our results provide guidance to software engineering practitioners when deciding which NLU to use in their chatbots.
C1 [Abdellatif, Ahmad; Badran, Khaled; Costa, Diego Elias; Shihab, Emad] Concordia Univ, Dept Comp Sci & Software Engn, Data Driven Anal Software DAS Lab, Montreal, PQ H3G 1M8, Canada.
C3 Concordia University - Canada
RP Abdellatif, A (corresponding author), Concordia Univ, Dept Comp Sci & Software Engn, Data Driven Anal Software DAS Lab, Montreal, PQ H3G 1M8, Canada.
EM a_bdella@encs.concordia.ca; k_badran@encs.concordia.ca;
   d_damasc@encs.concordia.ca; eshihab@encs.concordia.ca
RI Costa, Diego/Y-7589-2019
OI Shihab, Emad/0000-0003-1285-9878; Abdellatif, Ahmad/0000-0003-1863-9147;
   Costa, Diego Elias/0000-0001-7084-2594
CR Abdalkareem R, 2017, IEEE SOFTWARE, V34, P53, DOI 10.1109/MS.2017.31
   Abdellatif A., COMP NATURAL LANGUAG
   Abdellatif A, 2020, IEEE WORK CONF MIN S, P174, DOI 10.1145/3379597.3387472
   Abdellatif A, 2020, EMPIR SOFTW ENG, V25, P1834, DOI 10.1007/s10664-019-09788-5
   Abu Shawar B., 2007, Proceedings of the workshop on bridging the gap: Academic and industrial research in dialog technologies, P89, DOI [DOI 10.3115/1556328.1556341, 10.3115/1556328.1556341]
   Angara P. P., 2018, THESIS U VICTORIA VI
   Ask J.A., 2016, The state of chatbots
   Barash G, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P1048, DOI 10.1145/3338906.3340442
   Begel A, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P12, DOI 10.1145/2568225.2568233
   Beschastnikh I, 2017, 2017 IEEE/ACM 39TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: NEW IDEAS AND EMERGING TECHNOLOGIES RESULTS TRACK (ICSE-NIER), P35, DOI 10.1109/ICSE-NIER.2017.17
   BotSE, 1 INT WORKSH BOTS SO
   Bradley NC, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P993, DOI 10.1145/3180155.3180238
   Braun D, 2017, 18TH ANNUAL MEETING OF THE SPECIAL INTEREST GROUP ON DISCOURSE AND DIALOGUE (SIGDIAL 2017), P174
   Braun V., 2006, QUAL RES PSYCHOL, V3, P77, DOI [DOI 10.1191/1478088706QP063OA, 10.1191/1478088706qp063oa]
   Brundage M, 2020, Arxiv, DOI [arXiv:2004.07213, DOI 10.48550/ARXIV.2004.07213]
   Bugbot, SLACK SLASH COMM APP
   Canonico M., 2018, CLOUD COMPUT
   COHEN J, 1960, EDUC PSYCHOL MEAS, V20, P37, DOI 10.1177/001316446002000104
   Cruzes DS, 2011, INT SYMP EMP SOFTWAR, P275, DOI 10.1109/ESEM.2011.36
   DeployBot, COD DEPL TOOLS
   depositedpapers, About us
   Dialogflow, TRAIN PHRAS
   Dialogflow, HIST DIAL DOC
   Dialogflow, DEV ENT
   Dialogflow, QUER
   Dominic J., 2020, P IEEEACM 42 INT C S, P46, DOI DOI 10.1145/3387940.3391534
   Epskamp S, 2019, ADV METH PRACT PSYCH, V2, P145, DOI 10.1177/2515245919847421
   FLEISS JL, 1973, EDUC PSYCHOL MEAS, V33, P613, DOI 10.1177/001316447303300309
   Fritz T., 2010, P INT C SOFTW ENG IC, V1, P175
   GoodRebels, IMP CONV BOTS CUST E
   Google, DIAL AG VAL
   Google, DIAL
   Gregori E, 2017, EVALUATION MODERN TO
   Han J, 2012, MOR KAUF D, P1
   IBM, IBM watson
   IBM, CREAT ENT
   IBM, WATS ASS V1
   IBM, DEF INT
   IBM, ENT
   Ilmania A, 2018, INT CONF ASIAN LANG, P62, DOI 10.1109/IALP.2018.8629181
   Koetter F, 2019, PROCEEDINGS OF THE 11TH INTERNATIONAL CONFERENCE ON AGENTS AND ARTIFICIAL INTELLIGENCE (ICAART), VOL 1, P19, DOI 10.5220/0007252100190030
   Kumar R, 2019, 2019 IEEE/ACM 1ST INTERNATIONAL WORKSHOP ON BOTS IN SOFTWARE ENGINEERING (BOTSE 2019), P48, DOI 10.1109/BotSE.2019.00020
   Lebeuf C.R., 2018, A taxonomy of software bots: Towards a deeper understanding of software bot characteristics
   Lebeuf C, 2019, 2019 IEEE/ACM 1ST INTERNATIONAL WORKSHOP ON BOTS IN SOFTWARE ENGINEERING (BOTSE 2019), P1, DOI 10.1109/BotSE.2019.00008
   Lebeuf C, 2018, IEEE SOFTWARE, V35, P18, DOI 10.1109/MS.2017.4541027
   Lenberg P, 2015, 2015 IEEE/ACM 8TH INTERNATIONAL WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING CHASE 2015, P43, DOI 10.1109/CHASE.2015.13
   Lin C.-T., 2020, P 2 INT WORKSH BOTS, P36
   Mamykina L, 2011, 29TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, P2857
   Marbot, CHATB AWS MON
   Microsoft, GOOD EX UTT LANG UND
   Microsoft, ENT TYP LANG UND AZ
   Microsoft, LUIS LANG UND COGN S
   Microsoft, PRED SCOR LANG UND A
   Munir H, 2016, EMPIR SOFTW ENG, V21, P684, DOI 10.1007/s10664-015-9380-x
   Munoz Sergio, 2018, 2018 4th International Conference on Big Data Innovations and Applications (Innovate-Data). Proceedings, P17, DOI 10.1109/Innovate-Data.2018.00010
   Murgia A., 2016, P CHI C EXT ABSTR HU, P1272, DOI [10.1145/2851581.2892311, DOI 10.1145/2851581.2892311]
   Paikari E, 2019, 2019 IEEE/ACM 1ST INTERNATIONAL WORKSHOP ON BOTS IN SOFTWARE ENGINEERING (BOTSE 2019), P29, DOI 10.1109/BotSE.2019.00016
   Rasa, MULT ENT REC ISS 427
   Rasa, FREQ ASK QUEST
   Rasa, TRAIN DAT FORM
   Rasa, CONF FALLB INT
   Rasa, RAS CRF ENT EXTR PY
   Rasa, DUCKL
   Rasa, RAS OP SOURC CONV AI
   Romero R, 2020, P IEEE ACM 42 INT C, P66, DOI DOI 10.1145/3387940.3391505
   Rychalska B, 2018, 2018 FIFTH INTERNATIONAL CONFERENCE ON SOCIAL NETWORKS ANALYSIS, MANAGEMENT AND SECURITY (SNAMS), P256, DOI 10.1109/SNAMS.2018.8554770
   Sharma VS, 2017, 2017 IEEE/ACM 10TH INTERNATIONAL WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING (CHASE 2017), P78, DOI 10.1109/CHASE.2017.14
   Shihab E, 2011, SOFTWARE PRACT EXPER, V41, P1027, DOI 10.1002/spe.1053
   StackOverflow, NLP BUILD CHATB ED P
   StackOverflow, ARTIF INTELL
   StackOverflow, CHATB DIAL RET ANSW
   StackOverflow, DIAL MATCH IRR PHRAS
   StackOverflow, 2019, PHP MYSQL QUER RET E
   StackOverflow, NATURAL LANGUAGE PRO
   Storey MA, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P928, DOI 10.1145/2950290.2983989
   T. C. Conference, CHATB C
   Tian Y, 2017, IEEE INT CONF AUTOM, P153, DOI 10.1109/ASE.2017.8115628
   Toxtli C, 2018, PROCEEDINGS OF THE 2018 CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS (CHI 2018), DOI 10.1145/3173574.3173632
   Urli S, 2018, 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING - SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2018), P95, DOI 10.1145/3183519.3183540
   Wessel Mairieli, 2018, Proceedings of the ACM on Human-Computer Interaction, V2, DOI 10.1145/3274451
   Wyrich M, 2019, 2019 IEEE/ACM 1ST INTERNATIONAL WORKSHOP ON BOTS IN SOFTWARE ENGINEERING (BOTSE 2019), P24, DOI 10.1109/BotSE.2019.00015
   Xu BW, 2017, IEEE INT CONF AUTOM, P706, DOI 10.1109/ASE.2017.8115681
   Ye DH, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P90, DOI 10.1109/SANER.2016.10
   Zhou ZH, 2018, NATL SCI REV, V5, P44, DOI 10.1093/nsr/nwx106
   Zhu X., 2009, INTRO SEMISUPERVISED
NR 85
TC 26
Z9 26
U1 4
U2 25
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD AUG 1
PY 2022
VL 48
IS 8
BP 3087
EP 3102
DI 10.1109/TSE.2021.3078384
PG 16
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 4D1BG
UT WOS:000846878500022
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Tang, YT
   Wang, HY
   Zhan, X
   Luo, XP
   Zhou, YJ
   Zhou, H
   Yan, QB
   Sui, YL
   Keung, J
AF Tang, Yutian
   Wang, Haoyu
   Zhan, Xian
   Luo, Xiapu
   Zhou, Yajin
   Zhou, Hao
   Yan, Qiben
   Sui, Yulei
   Keung, Jacky
TI A Systematical Study on Application Performance Management Libraries for
   Apps
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Privacy; Systematics; Runtime; Prototypes; Libraries; Internet;
   Behavioral sciences; Empirical study; android; application performance
   management
AB Being able to automatically detect the performance issues in apps can significantly improve apps' quality as well as having a positive influence on user satisfaction. Application Performance Management (APM) libraries are used to locate the apps' performance bottleneck, monitor their behaviors at runtime, and identify potential security risks. Although app developers have been exploiting application performance management (APM) tools to capture these potential performance issues, most of them do not fully understand the internals of these APM tools and the effect on their apps. To fill this gap, in this paper, we conduct the first systematic study on APMs for apps by scrutinizing 25 widely-used APMs for Android apps and develop a framework named APMHunter for exploring the usage of APMs in Android apps. Using APMHunter, we conduct a large-scale empirical study on 500,000 Android apps to explore the usage patterns of APMs and discover the potential misuses of APMs. We obtain two major findings: 1) some APMs still employ deprecated permissions and approaches, which makes APMs fail to perform as expected; 2) inappropriate use of APMs can cause privacy leaks. Thus, our study suggests that both APM vendors and developers should design and use APMs scrupulously.
C1 [Tang, Yutian] ShanghaiTech Univ, Sch Informat Sci & Technol, Shanghai 201210, Peoples R China.
   [Wang, Haoyu] Beijing Univ Posts & Telecommun, Sch Comp Sci, Beijing 100876, Peoples R China.
   [Zhan, Xian] Hong Kong Polytech Univ, Hong Kong, Peoples R China.
   [Luo, Xiapu; Zhou, Hao] Hong Kong Polytech Univ, Dept Comp, Hong Kong, Peoples R China.
   [Zhou, Yajin] Zhejiang Univ, Engn Lab Mobile Secur Zhejiang Prov, Hangzhou 310027, Zhejiang Sheng, Peoples R China.
   [Yan, Qiben] Michigan State Univ, Dept Comp Sci & Engn, E Lansing, MI 48824 USA.
   [Sui, Yulei] Univ Technol Sydney, Fac Engn & Informat Technol, Sch Comp Sci, Ultimo, NSW 2007, Australia.
   [Keung, Jacky] City Univ Hong Kong, Dept Comp Sci, Hong Kong, Peoples R China.
C3 ShanghaiTech University; Beijing University of Posts &
   Telecommunications; Hong Kong Polytechnic University; Hong Kong
   Polytechnic University; Zhejiang University; Michigan State University;
   University of Technology Sydney; City University of Hong Kong
RP Tang, YT (corresponding author), ShanghaiTech Univ, Sch Informat Sci & Technol, Shanghai 201210, Peoples R China.; Luo, XP (corresponding author), Hong Kong Polytech Univ, Hong Kong, Peoples R China.
EM csytang@ieee.org; haoyuwang@bupt.edu.cn; chichoxian@gmail.com;
   sunmoonsky0001@gmail.com; yajin_zhou@zjii.edu.cn;
   csxluo@comp.polyu.edu.hk; qyan@msu.edu; yulei.sui@uts.edu.au;
   Jacky.Keung@cityu.edu.hk
RI Zhou, Hao/AAH-7956-2020; Tang, Yutian/L-8327-2019; Wang,
   Haoyu/AAC-8649-2019; Sui, Yulei/AAL-5915-2020; Yan, Qiben/AAZ-3002-2020;
   li, fangyu/KCY-0521-2024; chen, minghui/KFR-8832-2024
OI Zhou, Hao/0000-0002-0146-5518; Tang, Yutian/0000-0001-5677-4564; Wang,
   Haoyu/0000-0002-2124-3453; Sui, Yulei/0000-0002-9510-6574; Yan,
   Qiben/0000-0001-6272-7668; li, fangyu/0009-0009-8303-9157; Keung,
   Jacky/0000-0002-3803-9600; zhan, xian/0000-0001-9814-5977
FU ShanghaiTech Start-up Research [2020F0203-000-14]; Hong Kong RGC
   Projects [152223/17E, 152239/18E, CityU C1008-16G]; National Natural
   Science Foundation of China [62072046]; Leading Innovative and
   Entrepreneur Team Introduction Program of Zhejiang [2018R01005];
   Fundamental Research Funds for the Central Universities [K20200019]
FX This work was supported in part by ShanghaiTech Start-up Research under
   Grant 2020F0203-000-14, in part by Hong Kong RGC Projects under Grants
   152223/17E, 152239/18E, and CityU C1008-16G, in part by the National
   Natural Science Foundation of China under Grant 62072046, in part by
   Leading Innovative and Entrepreneur Team Introduction Program of
   Zhejiang under Grant 2018R01005, and in part by the Fundamental Research
   Funds for the Central Universities under Grant K20200019.
CR Adjust, 2021, DRIV YOUR APP GROWTH
   Afjehei SS, 2019, EMPIR SOFTW ENG, V24, P3484, DOI 10.1007/s10664-019-09703-y
   Ahmed TM, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P1, DOI [10.1145/2901739.2901774, 10.1109/MSR.2016.011]
   Android, 2021, MONK FRAM
   AndroidGodEye, 2021, ANDR
   [Anonymous], 2014, P 30 ANN COMP SEC AP
   [Anonymous], 2015, PROC ICPE
   [Anonymous], 2012, 10 USENIX S OP SYST
   [Anonymous], 1999, P C CTR ADV STUD COL
   Apktool, 2021, APKT TOOL REV ENG AN
   AppBrain, 2021, ANDR LIB STAT
   AppBrain, 2021, ANDR GOOGL PLAY STAT
   AppDynamics, 2021, APPD APM
   AppsFlyer, 2021, MAK GOOD CHOIC
   Apteligent, 2021, CONS APPS WORKSP ONE
   Arzt S, 2014, ACM SIGPLAN NOTICES, V49, P259, DOI [10.1145/2666356.2594299, 10.1145/2594291.2594299]
   Au Kathy Wain Yee, 2012, P 2012 ACM C COMP CO, P217
   Backes M, 2017, 2017 IEEE EUROPEAN SYMPOSIUM ON SECURITY AND PRIVACY (EUROS&P), P481, DOI 10.1109/EuroSP.2017.43
   Backes M, 2016, CCS'16: PROCEEDINGS OF THE 2016 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P356, DOI 10.1145/2976749.2978333
   Backes M, 2016, PROCEEDINGS OF THE 25TH USENIX SECURITY SYMPOSIUM, P1101
   BlackCancary, 2021, BLACKCANCARY
   CA, 2021, CA APPL PERF MAN
   Cao Y., 2015, PROC NETW DISTRIB SY, P1
   Charles, 2021, CHARL WEB DEB PROX A
   Chen ZF, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P811, DOI 10.1145/3180155.3180229
   Colyer A, 2004, ECLIPSE ASPECTJ ASPE
   Countly, 2021, COUNTLY
   Dynamixyz, 2021, US
   Fan M, 2020, PROC INT SYMP SOFTW, P253, DOI 10.1109/ISSRE5003.2020.00032
   Felt AP, 2011, PROCEEDINGS OF THE 18TH ACM CONFERENCE ON COMPUTER & COMMUNICATIONS SECURITY (CCS 11), P627
   Flurry, 2021, OUR SINC AP
   Focus M, 2021, APPPULSE
   Fratantonio Y, 2017, P IEEE S SECUR PRIV, P1041, DOI 10.1109/SP.2017.39
   Gamma E., 1993, ECOOP '93 - Object-Oriented Programming. 7th European Conference Proceedings, P406
   Google, 2021, GOOGL AN FIR
   Google, 2021, GOOGL BREADP
   Gough, 2009, GNU SCI LIB REFERENC
   GrowingIO, 2021, US
   Gu TX, 2017, PROC IEEE INT CONF S, P103, DOI 10.1109/ICSME.2017.72
   Hecht G, 2015, IEEE INT CONF AUTOM, P236, DOI 10.1109/ASE.2015.46
   Heger C., 2017, P 8 ACMSPEC INT C PE, P429
   Holavanalli S, 2013, IEEE INT CONF AUTOM, P652, DOI 10.1109/ASE.2013.6693128
   IronSource, 2021, ON PLATF TURN YOUR A
   Kang Y, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P410, DOI 10.1145/2950290.2950316
   Karami Mohammad, 2013, 2013 IEEE Seventh International Conference on Software Security and Reliability Companion (SERE-C), P182, DOI 10.1109/SERE-C.2013.35
   Le Yu, 2016, 2016 46th Annual IEEE/IFIP International Conference on Dependable Systems and Networks (DSN). Proceedings, P538, DOI 10.1109/DSN.2016.55
   Lee S, 2014, UBICOMP'14: PROCEEDINGS OF THE 2014 ACM INTERNATIONAL JOINT CONFERENCE ON PERVASIVE AND UBIQUITOUS COMPUTING, P289, DOI 10.1145/2632048.2636091
   Li L, 2017, IEEE T INF FOREN SEC, V12, P1269, DOI 10.1109/TIFS.2017.2656460
   Li L, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P280, DOI 10.1109/ICSE.2015.48
   Li WC, 2018, IEEE T MOBILE COMPUT, V17, P717, DOI 10.1109/TMC.2017.2737990
   Li Y, 2019, ACM T SOFTW ENG METH, V28, DOI 10.1145/3295739
   Linares-Vasquez M., 2014, PROC 11 WORK C MININ, P242
   Liu YP, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P1013, DOI 10.1145/2568225.2568229
   Mao K., 2016, P 25 INT S SOFTW TES, P94
   Mednieks Z.R., 2012, PROGRAMMING ANDROID
   Middleton SE, 2004, ACM T INFORM SYST, V22, P54, DOI 10.1145/963770.963773
   MTJBaidu, 2021, MTJBAID APM
   Muschko B., 2014, Gradle in Action
   Nan YH, 2017, IEEE T INF FOREN SEC, V12, P647, DOI 10.1109/TIFS.2016.2631949
   Networkbench, 2021, TING APM
   NewRelic, 2021, NEW REL APM
   Octeau Damien, 2013, P 22 USENIX C SEC SE, P543
   OneAPM, 2021, ON
   OpenInstall, 2021, OP APM
   PKGDiff, 2021, TOOL VIS CHANG LIN S
   Qihu360, 2021, ARG
   Ritchie D. M., 1975, C PROGRAMMING LANGUA
   Safonov V.O, 2008, Using Aspect -Oriented Programming for Trustworthy Software Development
   Sentry, 2021, ANDR ERR PERF MON
   Site24x7, 2021, MON AV END US EXP MA
   Streitz A., 2018, PROC ACM SPEC INT C, P1
   Techbencon, 2021, PERF ENG SURV FIND 4
   Tencen, 2021, MOB TENC AN APM
   Trubiani C, 2018, INFORM SOFTWARE TECH, V95, P329, DOI 10.1016/j.infsof.2017.11.016
   UMeng, 2021, UM APM
   Voigt P., 2017, The EU General Data Protection Regulation (GDPR): a practical guide, V1st
   Wu DY, 2017, 2017 USENIX ANNUAL TECHNICAL CONFERENCE (USENIX ATC '17), P445
   Xue L., 2017, PROC IEEE C COMPUT C, P1
   Xue L, 2022, IEEE T SOFTWARE ENG, V48, P551, DOI 10.1109/TSE.2020.2996433
   Xue L, 2019, IEEE T INF FOREN SEC, V14, P814, DOI 10.1109/TIFS.2018.2866347
   Xue L, 2017, PROCEEDINGS OF THE 26TH USENIX SECURITY SYMPOSIUM (USENIX SECURITY '17), P289
   Xue L, 2017, PROC INT CONF SOFTW, P358, DOI 10.1109/ICSE.2017.40
   Xue L, 2015, 2015 IEEE 23RD INTERNATIONAL SYMPOSIUM ON QUALITY OF SERVICE (IWQOS), P115, DOI 10.1109/IWQoS.2015.7404721
   Yandex, 2021, YAND METR
   Yao KD, 2020, EMPIR SOFTW ENG, V25, P488, DOI 10.1007/s10664-019-09748-z
   Yu L., 2015, P 5 ANN ACM CCS WORK, P39, DOI DOI 10.1145/2808117.2808125
   Yu L, 2021, IEEE T SOFTWARE ENG, V47, P221, DOI 10.1109/TSE.2018.2886875
   Yu L, 2018, IEEE T SOFTWARE ENG, V44, P834, DOI 10.1109/TSE.2017.2730198
   Yutian Tang, 2019, 2019 34th IEEE/ACM International Conference on Automated Software Engineering (ASE). Proceedings, P682, DOI 10.1109/ASE.2019.00069
   Zhan X, 2020, IEEE INT CONF AUTOM, P919, DOI 10.1145/3324884.3416582
   Zhang F., 2014, P 2014 ACM C SEC PRI, P25, DOI DOI 10.1145/2627393.2627395
   Zhang YQ, 2015, LECT NOTES COMPUT SC, V9327, P293, DOI 10.1007/978-3-319-24177-7_15
   Zhou H, 2020, IEEE INT CONF AUTOM, P199, DOI 10.1145/3324884.3416642
   Zhou X., 2013, P 2013 ACM SIGSAC C, P1017
   Zhou Yajin, 2012, P 19 ANN NETW DISTR
   Zuo CS, 2019, P IEEE S SECUR PRIV, P1296, DOI 10.1109/SP.2019.00009
NR 96
TC 4
Z9 4
U1 0
U2 3
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD AUG 1
PY 2022
VL 48
IS 8
BP 3044
EP 3065
DI 10.1109/TSE.2021.3077654
PG 22
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 4D1BG
UT WOS:000846878500020
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Gerrard, M
   Borges, M
   Dwyer, MB
   Filieri, A
AF Gerrard, Mitchell
   Borges, Mateus
   Dwyer, Matthew B.
   Filieri, Antonio
TI Conditional Quantitative Program Analysis
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Program analysis; model counting; symbolic execution; conditional
   analysis; software reliability; software certification
ID POLYTOPES; ALGORITHM; VOLUME
AB Standards for certifying safety-critical systems have evolved to permit the inclusion of evidence generated by program analysis and verification techniques. The past decade has witnessed the development of several program analyses that are capable of computing guarantees on bounds for the probability of failure. This paper develops a novel program analysis framework, CQA, that combines evidence from different underlying analyses to compute bounds on failure probability. It reports on an evaluation of different CQA-enabled analyses and implementations of state-of-the-art quantitative analyses to evaluate their relative strengths and weaknesses. To conduct this evaluation, we filter an existing verification benchmark to reflect certification evidence generation challenges. Our evaluation across the resulting set of 136 C programs, totaling more than 385k SLOC, each with a probability of failure below 10(-4), demonstrates how CQA extends the state-of-the-art. The CQA infrastructure, including tools, subjects, and generated data is publicly available at bitbucket.org/mgerrard/cqa.
C1 [Gerrard, Mitchell; Dwyer, Matthew B.] Univ Virginia, Dept Comp Sci, Charlottesville, VA 22904 USA.
   [Borges, Mateus; Filieri, Antonio] Imerial Coll London, Dept Comp, London SW7 2AZ, England.
C3 University of Virginia
RP Gerrard, M (corresponding author), Univ Virginia, Dept Comp Sci, Charlottesville, VA 22904 USA.
EM mitchell.gerrard@virginia.edu; m.borges@imperial.ac.uk;
   matthewwbdwyer@virginia.edu; a.filieri@imperial.ac.uk
OI Dwyer, Matthew/0000-0002-1937-1544; Gerrard,
   Mitchell/0000-0003-0666-1427; Filieri, Antonio/0000-0001-9646-646X
FU U.S. National Science Foundation [1617916, 1901769]; U.S. Army Research
   Office [W911NF-19-1-0054]; DARPA ARCOS program [FA8750-20-C-0507];
   Division of Computing and Communication Foundations; Direct For Computer
   & Info Scie & Enginr [1617916, 1901769] Funding Source: National Science
   Foundation
FX This material is based in part upon work supported by the U.S. National
   Science Foundation under Grants 1617916 and 1901769, by the U.S. Army
   Research Office under Grant W911NF-19-1-0054, and by the DARPA ARCOS
   program under Contract FA8750-20-C-0507.
CR Agha G, 2018, ACM T MODEL COMPUT S, V28, DOI 10.1145/3158668
   Albarghouthi Aws, 2012, Computer Aided Verification. Proceedings 24th International Conference, CAV 2012, P672, DOI 10.1007/978-3-642-31424-7_48
   Albarghouthi A, 2012, LECT NOTES COMPUT SC, V7214, P157, DOI 10.1007/978-3-642-28756-5_12
   Andrianov P, 2017, LECT NOTES COMPUT SC, V10206, P355, DOI 10.1007/978-3-662-54580-5_22
   [Anonymous], 2010, 61508 IEC 1
   [Anonymous], 2006, P 14 ACM SIGSOFT INT
   [Anonymous], 2018, SV COMP BENCHMARKS
   Aydin A, 2015, LECT NOTES COMPUT SC, V9206, P255, DOI 10.1007/978-3-319-21690-4_15
   Baldoni V., 2014, OPTIMIZATION, V22
   Barvinok A., 1999, New perspectives in algebraic combinatorics, V38, P91
   Beckman NelsE., 2008, Proceedings of the 2008 international symposium on Software testing and analysis, ISSTA '08, P3
   Beyer Dirk, 2013, Model Checking Software. 20th International Symposium, SPIN 2013. Proceedings, P1, DOI 10.1007/978-3-642-39176-7_1
   Beyer D., 2012, P FSE ACM, P57, DOI DOI 10.1145/2393596.2393664
   Beyer D, 2019, LECT NOTES COMPUT SC, V11429, P133, DOI 10.1007/978-3-030-17502-3_9
   Beyer D, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1182, DOI 10.1145/3180155.3180259
   Biere A., 2009, Handbook of Satisfiability
   Böhme M, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P632, DOI 10.1145/2635868.2635923
   Böhme M, 2019, IEEE T SOFTWARE ENG, V45, P489, DOI 10.1109/TSE.2017.2785841
   Borges Mateus, 2017, NASA Formal Methods. 9th International Symposium, NFM 2017. Proceedings: LNCS 10227, P131, DOI 10.1007/978-3-319-57288-8_9
   Borges M, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P866, DOI 10.1145/2786805.2786832
   Borges M, 2014, ACM SIGPLAN NOTICES, V49, P123, DOI [10.1145/2594291.2594329, 10.1145/2666356.2594329]
   Bornholt J, 2014, ACM SIGPLAN NOTICES, V49, P51, DOI 10.1145/2541940.2541958
   Brennan T, 2018, ISSTA'18: PROCEEDINGS OF THE 27TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P27
   Büeler B, 2000, DMV SEMINAR, V29, P131
   BUTLER RW, 1993, IEEE T SOFTWARE ENG, V19, P3, DOI 10.1109/32.210303
   Cadar C., 2008, Proceedings of the 8th USENIX conference on Operating systems design and implementation, OSDI'08, (USA), P209
   Cha SK, 2012, P IEEE S SECUR PRIV, P380, DOI 10.1109/SP.2012.31
   Chakraborty S., 2016, P INT JOINT C ART IN
   Chakraborty S, 2013, LECT NOTES COMPUT SC, V8124, P200, DOI 10.1007/978-3-642-40627-0_18
   Chen BH, 2016, PROC INT CONF SOFTW, P49, DOI 10.1145/2884781.2884794
   Chistikov D, 2017, ACTA INFORM, V54, P729, DOI 10.1007/s00236-017-0297-2
   Christakis M, 2016, PROC INT CONF SOFTW, P144, DOI 10.1145/2884781.2884843
   Clarke E, 2003, TIME-ICTL 2003: 10TH INTERNATIONAL SYMPOSIUM ON TEMPORAL REPRESENTATION AND REASONING AND FOURTH INTERNATIONAL CONFERENCE ON TEMPORAL LOGIC, PROCEEDINGS, P7
   Clarke Jr E. M., 1999, MODEL CHECKING
   Cofer D, 2014, LECT NOTES COMPUT SC, V8430, P1, DOI 10.1007/978-3-319-06200-6_1
   Cousot P., 1977, C RECORD 4 ANN ACM S, P238, DOI DOI 10.1145/512950.512973
   Cousot P, 2012, LECT NOTES COMPUT SC, V7211, P169, DOI 10.1007/978-3-642-28869-2_9
   Czech M, 2015, LECT NOTES COMPUT SC, V9033, P100, DOI 10.1007/978-3-662-46675-9_7
   Dangl M., 2015, LNCS, P423, DOI [DOI 10.1007/978-3-662-46681-0_34, 10.1007/978-3-662-46681-0_34]
   Darke P, 2018, LECT NOTES COMPUT SC, V10806, P457, DOI 10.1007/978-3-319-89963-3_32
   de Moura L, 2008, LECT NOTES COMPUT SC, V4963, P337, DOI 10.1007/978-3-540-78800-3_24
   Dwyer M. B, 2019, CIVL CONCURRENCY INT
   DYER M, 1991, J ACM, V38, P1, DOI 10.1145/102782.102783
   European Committee for Electrotechnical Standardization, 2017, 50126 EN ISO EUR COM
   Ferles K, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P174, DOI 10.1145/3106237.3106249
   Filieri A, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P437, DOI 10.1145/2635868.2635899
   Filieri A, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P622, DOI 10.1109/ICSE.2013.6606608
   Geldenhuys Jaco, 2012, P 2012 INT S SOFTWAR, P166, DOI DOI 10.1145/2338965.2336773
   Gerrard M. J, 2019, ALPACA INSTATIATION
   Gerrard MJ, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: COMPANION PROCEEDINGS (ICSE-COMPANION 2019), P35, DOI 10.1109/ICSE-Companion.2019.00032
   Gerrard MJ, 2017, IEEE INT CONF AUTOM, P365, DOI 10.1109/ASE.2017.8115649
   Godefroid P, 2010, POPL'10: PROCEEDINGS OF THE 37TH ANNUAL ACM SIGPLAN-SIGACT SYMPOSIUM ON PRINCIPLES OF PROGRAMMING LANGUAGES, P43, DOI 10.1145/1706299.1706307
   Godefroid Patrice, 2008, Network and Distributed Systems Security
   Gomes CP, 2009, FRONT ARTIF INTEL AP, V185, P633, DOI 10.3233/978-1-58603-929-5-633
   Gordon Andrew D., 2014, P FUTURE SOFTWARE EN, P167, DOI [10.1145/2593882.2593900, DOI 10.1145/2593882.2593900]
   Granvilliers L, 2006, ACM T MATH SOFTWARE, V32, P138, DOI 10.1145/1132973.1132980
   Greitschus M, 2017, LECT NOTES COMPUT SC, V10206, P399, DOI 10.1007/978-3-662-54580-5_31
   Groce A, 2007, PROC INT CONF SOFTW, P621
   Gulavani B.S., 2006, P FSE ACM, P117, DOI DOI 10.1145/1181775.1181790
   Heimdahl MPE, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P137, DOI 10.1109/FOSE.2007.18
   Heizmann M, 2018, LECT NOTES COMPUT SC, V10806, P447, DOI 10.1007/978-3-319-89963-3_30
   Hennig P, 2015, P ROY SOC A-MATH PHY, V471, DOI 10.1098/rspa.2015.0142
   Henzinger TA, 2003, LECT NOTES COMPUT SC, V2648, P235
   Hérault T, 2004, LECT NOTES COMPUT SC, V2937, P73
   International Electro-technical Commission, 2006, 62304 IEC
   International Organization for Standardization, 2011, 10218 ISO
   International Organization for Standardization, 2014, 13482 ISO
   International Organization for Standardization, 2011, 26262 ISO
   Katoen JP, 2016, PROCEEDINGS OF THE 31ST ANNUAL ACM-IEEE SYMPOSIUM ON LOGIC IN COMPUTER SCIENCE (LICS 2016), P31, DOI 10.1145/2933575.2934574
   Khurshid S, 2003, LECT NOTES COMPUT SC, V2619, P553
   KING JC, 1976, COMMUN ACM, V19, P385, DOI 10.1145/360248.360252
   KOZEN D, 1981, J COMPUT SYST SCI, V22, P328, DOI 10.1016/0022-0000(81)90036-2
   Kroening D., 2014, CBMC-C bounded model checker, P389, DOI DOI 10.1007/978-3-642-54862-8_26
   Ladkin P, 2015, P 10 IET SYST SAF CY, P1
   Ladkin P. B., 2016, PRACTICAL STAT EVALU
   Legay A, 2010, LECT NOTES COMPUT SC, V6418, P122, DOI 10.1007/978-3-642-16612-9_11
   Luckow Kasper, 2014, P 29 ACMIEEE INT C A, P575, DOI [10.1145/2642937.2643011, DOI 10.1145/2642937.2643011]
   Luu L, 2014, ACM SIGPLAN NOTICES, V49, P565, DOI [10.1145/2666356.2594331, 10.1145/2594291.2594331]
   Malacaria P, 2018, P IEEE COMPUT SECUR, P313, DOI 10.1109/CSF.2018.00030
   Malik R, 2018, LECT NOTES MODEL CHE
   Mayr A, 2011, 18TH IEEE INTERNATIONAL CONFERENCE AND WORKSHOPS ON ENGINEERING OF COMPUTER BASED SYSTEMS (ECBS 2011), P97, DOI 10.1109/ECBS.2011.8
   Trinh MT, 2017, LECT NOTES COMPUT SC, V10427, P399, DOI 10.1007/978-3-319-63390-9_21
   Monniaux D, 2000, LECT NOTES COMPUT SC, V1824, P322
   Morse J., 2014, TACAS, V8413, P405
   Nair S, 2014, INFORM SOFTWARE TECH, V56, P689, DOI 10.1016/j.infsof.2014.03.001
   Nielson F., 2005, PRINCIPLES PROGRAM A
   Ninin Jordan, 2016, Mathematical Aspects of Computer and Information Sciences. 6th International Conference, MACIS 2015. Revised Selected Papers: LNCS 9582, P555, DOI 10.1007/978-3-319-32859-1_47
   Nutaro J, 2019, WINT SIMUL C PROC, P3267, DOI 10.1109/WSC40007.2019.9004839
   Palikareva Hristina, 2013, Computer Aided Verification. 25th International Conference, CAV 2013. Proceedings. LNCS 8044, P53, DOI 10.1007/978-3-642-39799-8_3
   Pestman W., 1998, MATH STAT INTRO, V1
   Ramalingam G, 1996, ACM SIGPLAN NOTICES, V31, P267, DOI 10.1145/249069.231433
   Reps T, 1998, INFORM SOFTWARE TECH, V40, P701, DOI 10.1016/S0950-5849(98)00093-7
   Richter C, 2019, LECT NOTES COMPUT SC, V11429, P229, DOI 10.1007/978-3-030-17502-3_19
   Rizzi EF, 2016, PROC INT CONF SOFTW, P132, DOI 10.1145/2884781.2884835
   Robert C., 2013, MONTE CARLO STAT MET
   Rodgers P, 2015, ACM T COMPUT-HUM INT, V22, DOI 10.1145/2810012
   RTCA, 2011, RTCA DO-333 Formal Methods Supplement to DO-178C and DO-278A
   RTCA, 2011, DO-178c
   Sampson A, 2014, ACM SIGPLAN NOTICES, V49, P112, DOI [10.1145/2666356.2594294, 10.1145/2594291.2594294]
   Sankaranarayanan S, 2013, ACM SIGPLAN NOTICES, V48, P447, DOI 10.1145/2499370.2462179
   Siegel SF, 2015, PROCEEDINGS OF SC15: THE INTERNATIONAL CONFERENCE FOR HIGH PERFORMANCE COMPUTING, NETWORKING, STORAGE AND ANALYSIS, DOI 10.1145/2807591.2807635
   Slaby J, 2013, LECT NOTES COMPUT SC, V7795, P630, DOI 10.1007/978-3-642-36742-7_50
   Valiant L. G., 1979, Theoretical Computer Science, V8, P189, DOI 10.1016/0304-3975(79)90044-6
   Verdoolaege S, 2007, ALGORITHMICA, V48, P37, DOI 10.1007/s00453-006-1231-0
   Wang XY, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P291, DOI 10.1145/3180155.3180177
   Wegman MarkN., 1985, Proceedings of Symposium on Principles of Programming Languages (POPL), P291, DOI 10.1145/318593.318659
   Zheng MC, 2015, IEEE INT CONF AUTOM, P830, DOI 10.1109/ASE.2015.99
   Zuliani P, 2013, FORM METHOD SYST DES, V43, P338, DOI 10.1007/s10703-013-0195-3
NR 108
TC 1
Z9 1
U1 1
U2 3
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD APR 1
PY 2022
VL 48
IS 4
BP 1212
EP 1227
DI 10.1109/TSE.2020.3016778
PG 16
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 0N4HC
UT WOS:000782799700007
OA Bronze
DA 2024-07-18
ER

PT J
AU Sangwan, RS
   Negahban, A
   Nord, RL
   Ozkaya, I
AF Sangwan, Raghvinder S.
   Negahban, Ashkan
   Nord, Robert L.
   Ozkaya, Ipek
TI Optimization of Software Release Planning Considering Architectural
   Dependencies, Cost, and Value
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Software release management and delivery; software architecture;
   nonlinear programming
ID CHANGE PROPAGATION; DESIGN; MATRICES; SYSTEM; IMPACT
AB Within any incremental development paradigm, there exists a tension between the desire to deliver value to the customer early and the desire to reduce cost by avoiding architectural refactoring and rework in subsequent releases. What is lacking is an analytical framework that quantifies opportunities and risks of choosing one or the other of these strategies or a blend of the two. This article demonstrates the use of design structure and domain mapping matrices for analyzing architectural dependencies and proposes an optimization-based decision-making technique to support effective release planning. The optimization models recommend the order in which architectural elements and features should be implemented across different releases so as to: (a) minimize rework cost; (b) maximize early value delivery; or (c) optimize an integrated measure of cost and value. These analytic models can be applied earlier in the life cycle and, hence, provide timely information about the progress and changes that occur at each iteration.
C1 [Sangwan, Raghvinder S.; Negahban, Ashkan] Penn State Univ, Sch Grad Profess Studies, Malvern, PA 19355 USA.
   [Nord, Robert L.; Ozkaya, Ipek] Carnegie Mellon Univ, Software Engn Inst, Pittsburgh, PA 15213 USA.
C3 Pennsylvania Commonwealth System of Higher Education (PCSHE);
   Pennsylvania State University; Software Engineering Institute; Carnegie
   Mellon University
RP Sangwan, RS (corresponding author), Penn State Univ, Sch Grad Profess Studies, Malvern, PA 19355 USA.
EM rsangwan@psu.edu; aun85@psu.edu; rn@sei.cmu.edu; ozkaya@sei.cmu.edu
FU Department of Defense [FA8702-15D-0002]; Carnegie Mellon University for
   the operation of the Software Engineering Institute
FX This material is based upon work funded and supported by the Department
   of Defense under Contract No. FA8702-15D-0002 with Carnegie Mellon
   University for the operation of the Software Engineering Institute, a
   federally funded research and development center. References herein to
   any specific commercial product, process, or service by trade name,
   trade mark, manufacturer, or otherwise, does not necessarily constitute
   or imply its endorsement, recommendation, or favoring by Carnegie Mellon
   University or its Software Engineering Institute.
CR [Anonymous], 2010, 2010 2 IEEE INT C IN
   [Anonymous], 2019, VERS 11 5
   Boehm B., 2003, BALANCING AGILITY DI
   Brown N, 2011, 2011 9TH WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE (WICSA), P103, DOI 10.1109/WICSA.2011.22
   Brown Nanette, 2010, P FSE SDP WORKSH FUT, P47
   Browning TR, 2001, IEEE T ENG MANAGE, V48, P292, DOI 10.1109/17.946528
   Buse Raymond PL, 2010, P FSE SDP WORKSHOP F, P77
   Carriere J., 2010, 2010 32nd International Conference on Software Engineering (ICSE), P149, DOI 10.1145/1810295.1810317
   Chua DKH, 2012, IEEE T ENG MANAGE, V59, P483, DOI 10.1109/TEM.2011.2164082
   Danilovic M., 2005, International Journal of Project Management, V23, P193, DOI 10.1016/j.ijproman.2004.11.001
   Danilovic M., 2007, International Journal of Project Management, V25, P300, DOI 10.1016/j.ijproman.2006.11.003
   Denne M, 2004, IEEE SOFTWARE, V21, P39, DOI 10.1109/MS.2004.1293071
   Denne M, 2003, HIGH RETURN DEV
   Dong Q., 2002, THESIS MASSACHUSETTS
   Fowler Martin, 2009, Technical debt quadrant, 2009
   Garlan David, 2010, DOCUMENTING SOFTWARE
   Gaudin O., 2009, EVALUATE YOUR TECHNI
   Grossmann I., 2008, DICOPT user's manual
   Hamraz B, 2013, J ENG DESIGN, V24, P765, DOI 10.1080/09544828.2013.834039
   Hinsman C, 2009, LECT NOTES COMPUT SC, V5581, P116, DOI 10.1007/978-3-642-02351-4_8
   Kazman R, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P179, DOI 10.1109/ICSE.2015.146
   Kim M, 2009, PROC INT CONF SOFTW, P309, DOI 10.1109/ICSE.2009.5070531
   Klinger T, 2011, P 2 WORKSHOP MANAGIN, P35
   Kruchten P, 2012, IEEE SOFTWARE, V29, P18, DOI 10.1109/MS.2012.167
   Krutchen P., 2019, MANAGING TECHNICAL D
   Lee WT, 2010, INT J INTELL SYST, V25, P878, DOI 10.1002/int.20443
   Lehman M. M., 1985, Program Evolution: Processes of Software Change
   Li WL, 2011, WINT SIMUL C PROC, P792, DOI 10.1109/WSC.2011.6147806
   MacCormack A.D., 2008, Exploring the duality between product and organizational architectures: A test of the mirroring hypothesis
   Maier JRA, 2009, RES ENG DES, V20, P225, DOI 10.1007/s00163-009-0064-7
   Morkos B, 2012, J ENG DESIGN, V23, P902, DOI 10.1080/09544828.2012.662273
   Negahban A., Mendeley Data, DOI 10.17632/s5xxjrcvzd.2
   Negahban A, 2018, COMPUT IND ENG, V124, P113, DOI 10.1016/j.cie.2018.07.018
   Negahban A, 2018, INT J PROD ECON, V196, P150, DOI 10.1016/j.ijpe.2017.11.019
   Object Management Group, 2017, Tech. Rep.
   PARNAS DL, 1994, PROC INT CONF SOFTW, P279, DOI 10.1109/ICSE.1994.296790
   Penchikala S., 2010, ARCHITECTURE ANAL TO
   Salado A., 2013, PROC INT COUNCIL SYS, P647
   Sangwan R., 2006, Global software development handbook
   Sangwan R, 2008, J SYST SOFTWARE, V81, P727, DOI 10.1016/j.jss.2007.07.031
   Sangwan RS, 2009, 2009 JOINT WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE AND EUROPEAN CONFERENCE ON SOFTWARE ARCHITECTURE, P265, DOI 10.1109/WICSA.2009.5290816
   Sarkar S, 2010, AI EDAM, V24, P63, DOI 10.1017/S0890060409990175
   Sindhgatta Renuka, 2010, P 25 ACM INT C COMP, P105, DOI DOI 10.1145/1869542.1869560
   STEWARD DV, 1981, IEEE T ENG MANAGE, V28, P71, DOI 10.1109/TEM.1981.6448589
   Tang DB, 2009, CONCURRENT ENG-RES A, V17, P129, DOI 10.1177/1063293X09105348
   VISWANATHAN J, 1990, COMPUT CHEM ENG, V14, P769, DOI 10.1016/0098-1354(90)87085-4
   White J.A., 2012, Principles of Engineering Economic Analysis, V6th ed.
   Wiegers K., 1999, Software Development, V7, P48
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
   Yin R. K., 2017, CASE STUDY RES DESIG
   Yoshimura M, 2003, INT J PROD RES, V41, P1987, DOI 10.1080/0020754031000077301
NR 51
TC 1
Z9 3
U1 3
U2 7
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD APR 1
PY 2022
VL 48
IS 4
BP 1369
EP 1384
DI 10.1109/TSE.2020.3020013
PG 16
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 0N4HC
UT WOS:000782799700015
OA Green Published, Bronze
DA 2024-07-18
ER

PT J
AU van der Linden, D
   Williams, E
   Hallett, J
   Rashid, A
AF van der Linden, Dirk
   Williams, Emma
   Hallett, Joseph
   Rashid, Awais
TI The Impact of Surface Features on Choice of (in)Secure Answers by
   Stackoverflow Readers
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Security; Semantics; Software; Documentation; Knowledge based systems;
   Message systems; Licenses; Software security; stack overflow; human
   factors; rationale
ID ONLINE TRUST; INFORMATION; ACCURACY; CODE
AB Existing research has shown that developers will use StackOverflow to answer programming questions: but what draws them to one particular answer over any other? The choice of answer they select can mean the difference between a secure application and insecure one, as the quality of supposedly secure answers can vary. Prior work has studied people posting on Stack Overflow-a two-way communication between the original poster and the Stack Overflow community. Instead, we study the situation of one-way communication, where people only read a Stack Overflow thread without being actively involved in it, sometimes long after a thread has closed. We report on a mixed-method study including a controlled between-groups experiment and qualitative analysis of participants' rationale (N=1188), investigating whether explanation detail, answer scoring, accepted answer marks, as well as the security of the code snippet itself affect the answers participants accept. Our findings indicate that explanation detail affects what answers participants reading a thread select (p<0.01), while answer score and acceptance do not (p>0.05)-the inverse of what research has shown for those asking and answering questions. The qualitative analysis of participants' rationale further explains how several cognitive biases underpin these findings. Correspondence bias, in particular, plays an important role in instilling readers with a false sense of confidence in an answer through the way it looks, regardless of whether it works, is secure, or if the community agrees with it. As a result, we argue that StackOverflow's use as a knowledge base by people not actively involved in threads-when there is only one-way-communication-may inadvertently contribute to the spread of insecure code, as the community's voting mechanisms hold little power to deter them from answers.
C1 [van der Linden, Dirk; Hallett, Joseph; Rashid, Awais] Univ Bristol, Bristol Cyber Secur Grp, Bristol BS8 1TH, Avon, England.
   [Williams, Emma] Univ Bristol, Sch Expt Psychol, Bristol BS8 1TH, Avon, England.
C3 University of Bristol; University of Bristol
RP van der Linden, D (corresponding author), Univ Bristol, Bristol Cyber Secur Grp, Bristol BS8 1TH, Avon, England.
EM djt.vanderlinden@gmail.com; emma.wilhams@bristol.ac.uk;
   joseph.hallett@bristol.ac.uk; awais.rashid@bristol.ac.uk
RI Williams, Emma/KGM-2774-2024
OI Hallett, Joseph/0000-0002-6146-9852
FU EPSRC [EP/P011799/1]; EPSRC [EP/P011799/2, EP/P011799/1] Funding Source:
   UKRI
FX This work was supported in part by EPSRC grant EP/P011799/1, Why Johnny
   doesn't write secure software? Secure software development by the
   masses.
CR Abdalkareem R, 2017, INFORM SOFTWARE TECH, V88, P148, DOI 10.1016/j.infsof.2017.04.005
   Acar Y, 2017, IEEE SECUR PRIV, V15, P50, DOI 10.1109/MSP.2017.24
   Acar Y, 2016, P IEEE S SECUR PRIV, P289, DOI 10.1109/SP.2016.25
   Ahmad A, 2018, DATA TECHNOL APPL, V52, P190, DOI 10.1108/DTA-07-2017-0054
   ALLEN NJ, 1990, J OCCUP PSYCHOL, V63, P1, DOI 10.1111/j.2044-8325.1990.tb00506.x
   ASCH SE, 1956, PSYCHOL MONOGR, V70, P1, DOI 10.1037/h0093718
   Assasa H, 2018, I S WORLD WIREL MOBI
   Baltes S, 2017, PROC IEEE ACM INT C, P161, DOI 10.1109/ICSE-C.2017.99
   Bond CF, 2006, PERS SOC PSYCHOL REV, V10, P214, DOI 10.1207/s15327957pspr1003_2
   Bosu A, 2013, IEEE WORK CONF MIN S, P89, DOI 10.1109/MSR.2013.6624013
   Brandt J, 2010, CHI2010: PROCEEDINGS OF THE 28TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, VOLS 1-4, P513
   Braun V., 2006, QUAL RES PSYCHOL, V3, P77, DOI [DOI 10.1191/1478088706QP063OA, 10.1191/1478088706qp063oa]
   Carman M, 2018, IEEE TRUST BIG, P184, DOI 10.1109/TrustCom/BigDataSE.2018.00037
   Carter Craig R., 2007, International Journal of Physical Distribution & Logistics Management, V37, P631, DOI 10.1108/09600030710825694
   Corritore CL, 2003, INT J HUM-COMPUT ST, V58, P737, DOI 10.1016/S1071-5819(03)00041-7
   Dhamija Rachna, 2006, P SIGCHI C HUM FACT, P581, DOI 10.1145/1124772.1124861
   Dimara E, 2020, IEEE T VIS COMPUT GR, V26, P1413, DOI 10.1109/TVCG.2018.2872577
   Edwards M, 2017, WWW'17 COMPANION: PROCEEDINGS OF THE 26TH INTERNATIONAL CONFERENCE ON WORLD WIDE WEB, P1291, DOI 10.1145/3041021.3053889
   Fahl Sascha, 2013, P ACM SIGSAC C COMP, P49
   Faul F, 2007, BEHAV RES METHODS, V39, P175, DOI 10.3758/BF03193146
   Fischer F, 2017, P IEEE S SECUR PRIV, P121, DOI 10.1109/SP.2017.31
   Fischer F, 2019, PROCEEDINGS OF THE 28TH USENIX SECURITY SYMPOSIUM, P339
   Fogg B.J., 2003, P DUX, DOI DOI 10.1145/997078.997097
   Gantayat N, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P406, DOI 10.1109/MSR.2015.50
   Georgiev Martin, 2012, P 2012 ACM C COMPUTE, P38
   Imai H, 2018, ASIA JT CONF INF SEC, P15, DOI 10.1109/AsiaJCIS.2018.00012
   Lopez T, 2018, 2018 IEEE/ACM 1ST INTERNATIONAL WORKSHOP ON SECURITY AWARENESS FROM DESIGN TO DEPLOYMENT (SEAD), P26, DOI [10.23919/SEAD.2018.8472850, 10.1145/3194707.3194713]
   Lucassen T, 2013, J AM SOC INF SCI TEC, V64, P254, DOI 10.1002/asi.22743
   Lucassen T, 2011, J AM SOC INF SCI TEC, V62, P1232, DOI 10.1002/asi.21545
   Meng N, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P372, DOI 10.1145/3180155.3180201
   Modic D, 2014, COMPUT HUM BEHAV, V41, P71, DOI 10.1016/j.chb.2014.09.014
   Nasehi SM, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P25, DOI 10.1109/ICSM.2012.6405249
   Palan S, 2018, J BEHAV EXP FINANC, V17, P22, DOI 10.1016/j.jbef.2017.12.004
   Patnaik N, 2019, PROCEEDINGS OF THE FIFTEENTH SYMPOSIUM ON USABLE PRIVACY AND SECURITY (SOUPS 2019), P245
   Reinhardt A, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P880, DOI 10.1145/3236024.3264585
   Rosen C, 2016, EMPIR SOFTW ENG, V21, P1192, DOI 10.1007/s10664-015-9379-3
   Silic M, 2017, PROCEEDINGS OF THE 50TH ANNUAL HAWAII INTERNATIONAL CONFERENCE ON SYSTEM SCIENCES, P527
   Sillence E, 2006, INT J HUM-COMPUT ST, V64, P697, DOI 10.1016/j.ijhcs.2006.02.007
   Treude C, 2017, PROC IEEE INT CONF S, P509, DOI 10.1109/ICSME.2017.24
   van der Linden D., 2020, RAW DATA REPOSITORY
   Vasilescu B, 2012, PROCEEDINGS OF THE 2012 ASE INTERNATIONAL CONFERENCE ON SOCIAL INFORMATICS (SOCIALINFORMATICS 2012), P332, DOI 10.1109/SocialInformatics.2012.81
   Vishwanath A, 2015, J COMPUT-MEDIAT COMM, V20, P83, DOI 10.1111/jcc4.12100
   Wang SW, 2020, IEEE T SOFTWARE ENG, V46, P1024, DOI 10.1109/TSE.2018.2874470
   Wang YD, 2005, COMPUT HUM BEHAV, V21, P105, DOI 10.1016/j.chb.2003.11.008
   Williams EJ, 2019, BEHAV INFORM TECHNOL, V38, P184, DOI 10.1080/0144929X.2018.1519599
   Williams EJ, 2017, DECIS SUPPORT SYST, V96, P119, DOI 10.1016/j.dss.2017.02.014
   Workman M, 2008, J AM SOC INF SCI TEC, V59, P662, DOI 10.1002/asi.20779
   Wu YH, 2019, EMPIR SOFTW ENG, V24, P637, DOI 10.1007/s10664-018-9634-5
   Yang D, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P391, DOI [10.1109/MSR.2016.047, 10.1145/2901739.2901767]
   Yao Y, 2015, INFORM SCIENCES, V302, P70, DOI 10.1016/j.ins.2014.12.038
   Zhang HX, 2021, IEEE T SOFTWARE ENG, V47, P850, DOI 10.1109/TSE.2019.2906315
   Zhang TY, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P886, DOI 10.1145/3180155.3180260
NR 52
TC 12
Z9 12
U1 1
U2 2
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD FEB 1
PY 2022
VL 48
IS 2
BP 364
EP 376
DI 10.1109/TSE.2020.2981317
PG 13
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science; Engineering
GA ZB4EB
UT WOS:000756796100001
OA hybrid, Green Accepted, Green Submitted
DA 2024-07-18
ER

PT J
AU Zhang, T
   Chen, JC
   Zhan, X
   Luo, XP
   Lo, D
   Jiang, H
AF Zhang, Tao
   Chen, Jiachi
   Zhan, Xian
   Luo, Xiapu
   Lo, David
   Jiang, He
TI Where2Change: Change Request Localization for App Reviews
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Information retrieval; Measurement; Task analysis; Tools; Feature
   extraction; Software maintenance; User review; issue report; mobile app;
   change request localization; software maintenance
ID INFORMATION-RETRIEVAL; MOBILE APPS; SOFTWARE
AB Million of mobile apps have been released to the market. Developers need to maintain these apps so that they can continue to benefit end users. Developers usually extract useful information from user reviews to maintain and evolve mobile apps. One of the important activities that developers need to do while reading user reviews is to locate the source code related to requested changes. Unfortunately, this manual work is costly and time consuming since: (1) an app can receive thousands of reviews, and (2) a mobile app can consist of hundreds of source code files. To address this challenge, Palomba et al. recently proposed CHANGEADVISOR that utilizes user reviews to locate source code to be changed. However, we find that it cannot identify real source code to be changed for part of reviews. In this work, we aim to advance Palomba et al.'s work by proposing a novel approach that can achieve higher accuracy in change localization. Our approach first extracts the informative sentences (i.e., user feedback) from user reviews and identifies user feedback related to various problems and feature requests, and then cluster the corresponding user feedback into groups. Each group reports the similar users' needs. Next, these groups are mapped to issue reports by using Word2Vec. The resultant enriched text consisting of user feedback and their corresponding issue reports is used to identify source code classes that should be changed by using our novel weight selection-based cosine similarity metric. We have evaluated the new proposed change request localization approach (Where2Change) on 31,597 user reviews and 3,272 issue reports of 10 open source mobile apps. The experiments demonstrate that Where2Change can successfully locate more source code classes related to the change requests for more user feedback clusters than CHANGEADVISOR as demonstrated by higher Top-N and Recall values. The differences reach up to 17 for Top-1, 18.1 for Top-3, 17.9 for Top-5, and 50.08 percent for Recall. In addition, we also compare the performance of Where2Change and two previous Information Retrieval (IR)-based fault localization technologies:BLUiR and BLIA. The results showed that our approach performs better than them. As an important part of our work, we conduct an empirical study to investigate the value of using both user reviews and historical issue reports for change request localization; the results shown that historical issue reports can help to improve the performance of change localization.
C1 [Zhang, Tao] Macau Univ Sci & Technol, Fac Informat Technol, Taipa, Macao, Peoples R China.
   [Zhang, Tao; Chen, Jiachi; Zhan, Xian; Luo, Xiapu] Hong Kong Polytech Univ, Dept Comp, Hong Kong, Peoples R China.
   [Chen, Jiachi] Monash Univ, Fac Informat Technol, Clayton, Vic 3800, Australia.
   [Lo, David] Singapore Management Univ, Sch Informat Syst, Singapore 188065, Singapore.
   [Jiang, He] Dalian Univ Technol, Sch Software, Dalian 116024, Liaoning, Peoples R China.
C3 Macau University of Science & Technology; Hong Kong Polytechnic
   University; Monash University; Singapore Management University; Dalian
   University of Technology
RP Luo, XP (corresponding author), Hong Kong Polytech Univ, Dept Comp, Hong Kong, Peoples R China.
EM tazhang@must.edu.mo; jiachi.chen@monash.edu; csxzhan@comp.polyu.edu.hk;
   csxluo@comp.polyu.edu.hk; davidlo@smu.edu.sg; jianghe@dlut.edu.cn
RI chen, minghui/KFR-8832-2024; Chen, Jiachi/HOC-4256-2023; Zhang,
   Tao/E-5634-2012; Lo, David/A-2493-2012
OI Zhang, Tao/0000-0002-6272-4069; Lo, David/0000-0002-4367-7201; zhan,
   xian/0000-0001-9814-5977
FU National Key Research and Development Plan of China [2018YFB1003900];
   National Natural Science Foundation of China [61602258]; Natural Science
   Foundation of Heilongjiang Province [LH2019F008]; Hong Kong RGC Project
   [152223/17E, 152279/16E]
FX The authors would like to thank the anonymous reviewers for their
   quality reviews and suggestions. This work was partially supported by
   the National Key Research and Development Plan of China under Grants No.
   2018YFB1003900, the National Natural Science Foundation of China under
   Grant No. 61602258, Natural Science Foundation of Heilongjiang Province
   under GrantNo. LH2019F008, and Hong Kong RGC Project under Grant No.
   152223/17E and No. 152279/16E.
CR Abreu R, 2009, J SYST SOFTWARE, V82, P1780, DOI 10.1016/j.jss.2009.06.035
   Lam AN, 2017, INT C PROGRAM COMPRE, P218, DOI 10.1109/ICPC.2017.24
   Anh Tuan Nguyen, 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P263, DOI 10.1109/ASE.2011.6100062
   Arong, 2014, PROCEEDINGS OF 2014 IEEE INTERNATIONAL CONFERENCE ON PROGRESS IN INFORMATICS AND COMPUTING (PIC), P51, DOI 10.1109/PIC.2014.6972294
   Bhattacharya P, 2013, EUR CON SFTWR MTNCE, P133, DOI 10.1109/CSMR.2013.23
   Chaparro O, 2017, PROC IEEE INT CONF S, P376, DOI 10.1109/ICSME.2017.100
   Chen H, 2017, PROCEEDINGS OF THE 2017 ACM ASIA CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY (ASIA CCS'17), P58, DOI 10.1145/3052973.3053022
   Chen N, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P767, DOI 10.1145/2568225.2568263
   Ciurumelea A, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P91, DOI 10.1109/SANER.2017.7884612
   DeVine L, 2014, Proceedings of the 23rd ACM International Conference on Conference on Information and Knowledge Management. CIKM'14, P1819
   Di Sorbo A, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P499, DOI 10.1145/2950290.2950299
   Genc-Nayebi N, 2017, J SYST SOFTWARE, V125, P207, DOI 10.1016/j.jss.2016.11.027
   Gómez M, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P13, DOI [10.1145/2901739.2901747, 10.1109/MSR.2016.012]
   Grano G, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P72, DOI 10.1109/SANER.2018.8330198
   Gupta Rajiv, 2015, P 19 INT C EV ASS SO, P1
   Guzman E, 2014, INT REQUIR ENG CONF, P153, DOI 10.1109/RE.2014.6912257
   Ihaka R., 1996, J COMPUTATIONAL GRAP, V5, P299, DOI [DOI 10.1080/10618600.1996.10474713, 10.2307/1390807, DOI 10.2307/1390807]
   Jones J.A., 2005, P 20 IEEE ACM INT C, P273, DOI [10.1145/1101908.1101949, DOI 10.1145/1101908.1101949]
   Kim D, 2013, IEEE T SOFTWARE ENG, V39, P1597, DOI 10.1109/TSE.2013.24
   Kochhar Pavneet Singh, 2014, P 2 ACM IEEE INT C, P803, DOI DOI 10.1145/2642937.2642997
   Kong Y., 2014, DICE SIMILARITY COEF
   Laghari G, 2016, IEEE INT CONF AUTOM, P274, DOI 10.1145/2970276.2970308
   Le TDB, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P579, DOI 10.1145/2786805.2786880
   Lo D., 2014, P 29 ACM IEEE INT C, P127
   Lukins SK, 2008, WORK CONF REVERSE EN, P155, DOI 10.1109/WCRE.2008.33
   McCormick R., 2015, GOOGLE CODE IS CLOSI
   Mcilroy S, 2017, COMMUN ACM, V60, P62, DOI 10.1145/3141771
   Mikolov T., 2013, ADV NEURAL INFORM PR, V26, P3111, DOI DOI 10.5555/2999792.2999959
   Palomba F., 2016, RECOMMENDING LOCALIZ
   Palomba F, 2017, PROC INT CONF SOFTW, P106, DOI 10.1109/ICSE.2017.18
   Palomba F, 2015, PROC IEEE INT CONF S, P291, DOI 10.1109/ICSM.2015.7332475
   Panichella S, 2015, PROC IEEE INT CONF S, P281, DOI 10.1109/ICSM.2015.7332474
   Park S, 2014, LECT NOTES COMPUT SC, V8870, P418, DOI 10.1007/978-3-319-12844-3_36
   Perez A, 2017, PROC INT CONF SOFTW, P654, DOI 10.1109/ICSE.2017.66
   Poshyvanyk D, 2009, PROC IEEE INT CONF S, P453, DOI 10.1109/ICSM.2009.5306298
   Rao S., 2011, P 8 WORK C MIN SOFTW, P43
   Rosenberg A, 2007, P 2007 JOINT C EMP M, P410, DOI [10 . 7916 / D80V8N84, DOI 10.7916/D80V8N84]
   Saha RK, 2013, IEEE INT CONF AUTOM, P345, DOI 10.1109/ASE.2013.6693093
   Scalabrino S, 2019, IEEE T SOFTWARE ENG, V45, P68, DOI 10.1109/TSE.2017.2759112
   Shahmehri N., 1990, Proceedings. Conference on Software Maintenance 1990 (Cat. No.90CH2921-5), P30, DOI 10.1109/ICSM.1990.131319
   Sun B, 2017, P 8 INT C APPL TECHN, P113
   Syer MarkD., 2013, Proceedings of the 2013 Conference of the Center for Advanced Studies on Collaborative Research, CASCON '13, P283
   Tata S, 2007, SIGMOD RECORD, V36, P7, DOI 10.1145/1328854.1328855
   Thung F, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P767, DOI 10.1145/2635868.2661678
   Wei LL, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P672, DOI 10.1145/3106237.3106294
   WILCOXON F, 1945, BIOMETRICS BULL, V1, P80, DOI 10.1093/jee/39.2.269
   Wong WE, 2016, IEEE T SOFTWARE ENG, V42, P707, DOI 10.1109/TSE.2016.2521368
   Wu HC, 2008, ACM T INFORM SYST, V26, DOI 10.1145/1361684.1361686
   Xiaoyuan Xie, 2011, Proceedings of the 11th International Conference on Quality Software (QSIC 2011), P1, DOI 10.1109/QSIC.2011.20
   Xie Z, 2016, ANN COMPUT SECURITY, P374, DOI 10.1145/2991079.2991099
   Xuan JF, 2014, PROC IEEE INT CONF S, P191, DOI 10.1109/ICSME.2014.41
   Ye X, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P689, DOI 10.1145/2635868.2635874
   Youm KC, 2015, ASIA PAC SOFWR ENG, P190, DOI 10.1109/APSEC.2015.23
   Zhang T, 2019, IEEE SOFTWARE, V36, P63, DOI 10.1109/MS.2017.377142400
   Zhou J, 2012, PROC INT CONF SOFTW, P14, DOI 10.1109/ICSE.2012.6227210
NR 55
TC 10
Z9 10
U1 1
U2 11
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD NOV 1
PY 2021
VL 47
IS 11
BP 2590
EP 2616
DI 10.1109/TSE.2019.2956941
PG 27
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA WW2QE
UT WOS:000717767100018
OA Green Published, hybrid
DA 2024-07-18
ER

PT J
AU Heidari, S
   Buyya, R
AF Heidari, Safiollah
   Buyya, Rajkumar
TI A Cost-Efficient Auto-Scaling Algorithm for Large-Scale Graph Processing
   in Cloud Environments with Heterogeneous Resources
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Cloud computing; Scalability; Computational modeling; Internet of
   Things; Heuristic algorithms; Software algorithms; Clustering
   algorithms; Cloud computing; large-scale graph processing; auto-scaling;
   cost saving; heterogeneous resources
AB Graph processing model is being adopted extensively in various domains such as online gaming, social media, scientific computing and Internet of Things (IoT). Since general purpose data processing tools such as MapReduce are shown to be inefficient for iterative graph processing, many frameworks have been developed in recent years to facilitate analytics and computing of large-scale graphs. However, regardless of distributed or single machine based architecture of such frameworks, dynamic scalability is always a major concern. It becomes even more important when there is a correlation between scalability and monetary cost - similar to what public clouds provide. The pay-as-you-go model that is used by public cloud providers enables users to pay only for the number of resources they utilize. Nevertheless, processing large-scale graphs in such environments has been less studied and most frameworks are implemented for commodity clusters where they will not be charged for the resources that they consume. In this paper, we have developed algorithms to take advantage of resource heterogeneity in cloud environments. Using these algorithms, the system can automatically adjust the number and types of virtual machines according to the computation requirements for convergent graph applications to improve the performance and reduce the monetary cost of the entire operation. Also, a smart profiling mechanism along with a novel dynamic repartitioning approach helps to distribute graph partitions expeditiously. It is shown that this method outperforms popular frameworks such as Giraph and decreases more than 50 percent of the dollar cost compared to Giraph.
C1 [Heidari, Safiollah; Buyya, Rajkumar] Univ Melbourne, Sch Comp & Informat Syst, Cloud Comp & Distributed Syst CLOUDS Lab, Parkville, Vic 3010, Australia.
C3 University of Melbourne
RP Heidari, S (corresponding author), Univ Melbourne, Sch Comp & Informat Syst, Cloud Comp & Distributed Syst CLOUDS Lab, Parkville, Vic 3010, Australia.
EM sheidari@student.unimelb.edu.au; rbuyya@unimelb.edu.au
RI Buyya, Rajkumar/C-3424-2009
OI Buyya, Rajkumar/0000-0001-9754-6496
FU ARC Future Fellowship; ARC Discovery Project
FX This work is partially supported by ARC Future Fellowship and ARC
   Discovery Project grants. We thank NECTAR for providing access to
   Australian cloud infrastructure.
CR Afrati F. N., 2012, P CLOUD FUT WORKSH P CLOUD FUT WORKSH, P1
   [Anonymous], 2013, P 25 INT C SCI STAT, DOI DOI 10.1145/2484838.2484843
   [Anonymous], AP GIR
   Bao NT, 2013, PROCEEDINGS OF THE 22ND INTERNATIONAL CONFERENCE ON WORLD WIDE WEB (WWW'13 COMPANION), P501
   Belli L, 2015, COMM COM INF SC, V508, P91, DOI 10.1007/978-3-319-14886-1_10
   Bu YY, 2014, PROC VLDB ENDOW, V8, P161, DOI 10.14778/2735471.2735477
   Buyya R, 2009, FUTURE GENER COMP SY, V25, P599, DOI 10.1016/j.future.2008.12.001
   Chen R., 2010, Proceedings of the 2010 ACM SIGMOD International Conference on Management of Data (SIGMOD), P1123
   Chi YZ, 2016, PROC INT CONF DATA, P409, DOI 10.1109/ICDE.2016.7498258
   Ching A, 2015, PROC VLDB ENDOW, V8, P1804, DOI 10.14778/2824032.2824077
   Dean J, 2008, COMMUN ACM, V51, P107, DOI 10.1145/1327452.1327492
   Gong YF, 2015, IEEE T PARALL DISTR, V26, P3079, DOI 10.1109/TPDS.2013.96
   Gonzalez Joseph E., 2012, 10 USENIX S OP SYST, P17
   Han WS, 2013, 19TH ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING (KDD'13), P77
   Heidari S, 2019, FUTURE GENER COMP SY, V96, P490, DOI 10.1016/j.future.2019.02.048
   Heidari S, 2018, SOFTWARE PRACT EXPER, V48, P2174, DOI 10.1002/spe.2623
   Heidari S, 2018, ACM COMPUT SURV, V51, DOI 10.1145/3199523
   Heidari S, 2016, IEEE ACM INT SYMP, P301, DOI 10.1109/CCGrid.2016.38
   Herbst NR, 2013, 10th international conference on autonomic computing (ICAC 13), P23
   HIRSCHBERG DS, 1979, COMMUN ACM, V22, P461, DOI 10.1145/359138.359141
   Khayyat Z., 2013, P 8 ACM EUR C COMP S, P169, DOI DOI 10.1145/2465351.2465369
   Kunegis J, 2013, PROCEEDINGS OF THE 22ND INTERNATIONAL CONFERENCE ON WORLD WIDE WEB (WWW'13 COMPANION), P1343
   Kyrola A., 2012, 10 USENIX S OPERATIN, P31
   Low Y., 2010, Uncertainty in Artificial Intelligence (UAI)
   Ma LX, 2017, 2017 USENIX ANNUAL TECHNICAL CONFERENCE (USENIX ATC '17), P195
   Maass S, 2017, PROCEEDINGS OF THE TWELFTH EUROPEAN CONFERENCE ON COMPUTER SYSTEMS (EUROSYS 2017), P527, DOI 10.1145/3064176.3064191
   Malewicz Grzegorz, 2010, P ACM SIGMOD INT C M, P135, DOI [DOI 10.1145/1807167.1807184, 10.1145/1807167.1807184]
   Nguyen D, 2013, SOSP'13: PROCEEDINGS OF THE TWENTY-FOURTH ACM SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES, P456, DOI 10.1145/2517349.2522739
   Xu N, 2014, PROC VLDB ENDOW, V7, P1917, DOI 10.14778/2733085.2733097
   Ousterhout K., 2015, NSDI, V15, P293
   Page L, 1998, P 7 INT WORLD WID WE, DOI DOI 10.1007/978-3-319-08789-4_10
   Priebe C. E., 2015, P 13 USENIX C FIL ST, P45
   Redekopp M, 2013, INT PARALL DISTRIB P, P203, DOI 10.1109/IPDPS.2013.76
   Roy A, 2013, SOSP'13: PROCEEDINGS OF THE TWENTY-FOURTH ACM SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES, P472, DOI 10.1145/2517349.2522740
   Roy P., 2014, P ANN IEEE IND C P ANN IEEE IND C, P1
   Shao Bin, 2013, SIGMOD, P505, DOI [DOI 10.1145/2463676.2467799, 10.1145/2463676.2467799]
   Shun JL, 2013, ACM SIGPLAN NOTICES, V48, P135, DOI 10.1145/2517327.2442530
   Sun P, 2017, INT C PAR DISTRIB SY, P276, DOI 10.1109/ICPADS.2017.00045
   Tasci S, 2013, LECT NOTES COMPUT SC, V8097, P458, DOI 10.1007/978-3-642-40047-6_47
   Tian Y, 2013, PROC VLDB ENDOW, V7, P193, DOI 10.14778/2732232.2732238
   Uta A, 2018, IEEE INT C CL COMP, P381, DOI 10.1109/CLUSTER.2018.00056
   VALIANT LG, 1990, COMMUN ACM, V33, P103, DOI 10.1145/79173.79181
   Vaquero L, 2013, P 4 ANN S CLOUD COMP
   Venkataraman S., 2013, Proceedings of the 8th ACM European Conference on Computer Systems, P197, DOI DOI 10.1145/2465351.2465371
   Xie CN, 2015, ACM SIGPLAN NOTICES, V50, P194, DOI [10.1145/2688500.2688508, 10.1145/2858788.2688508]
   Xin Reynold S, 2013, INT WORKSH GRAPH DAT, P1, DOI DOI 10.1145/2484425.2484427
NR 46
TC 2
Z9 2
U1 1
U2 5
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD AUG 1
PY 2021
VL 47
IS 8
BP 1729
EP 1741
DI 10.1109/TSE.2019.2934849
PG 13
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA TZ7YH
UT WOS:000684687400012
DA 2024-07-18
ER

PT J
AU Zhou, ZQ
   Tse, TH
   Witheridge, M
AF Zhou, Zhi Quan
   Tse, T. H.
   Witheridge, Matt
TI Metamorphic Robustness Testing: Exposing Hidden Defects in Citation
   Statistics and Journal Impact Factors
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Robustness; Database systems; Software; Fuzzing; Google; Metamorphic
   robustness testing; metamorphic testing; fault-based testing; software
   robustness; oracle problem; citation count; journal impact factor;
   Scopus; Web of Science; Google Scholar; verification and validation
ID TITLES
AB We propose a robustness testing approach for software systems that process large amounts of data. Our method uses metamorphic relations to check software output for erroneous input in the absence of a tangible test oracle. We use this technique to test two major citation database systems: Scopus and the Web of Science. We report a surprising finding that the inclusion of hyphens in paper titles impedes citation counts, and that this is a result of the lack of robustness of the citation database systems in handling hyphenated paper titles. Our results are valid for the entire literature as well as for individual fields such as chemistry. We further find a strong and significant negative correlation between the journal impact factor (JIF) of IEEE Transactions on Software Engineering (TSE) and the percentage of hyphenated paper titles published in TSE. Similar results are found for ACM Transactions on Software Engineering and Methodology. A software engineering field-wide study reveals that the higher JIF-ranked journals are publishing a lower percentage of papers with hyphenated titles. Our results challenge the common belief that citation counts and JIFs are reliable measures of the impact of papers and journals, as they can be distorted simply by the presence of hyphens in paper titles.
C1 [Zhou, Zhi Quan; Witheridge, Matt] Univ Wollongong, Sch Comp & Informat Technol, Inst Cybersecur & Cryptol, Wollongong, NSW 2522, Australia.
   [Tse, T. H.] Univ Hong Kong, Dept Comp Sci, Pokfulam, Hong Kong, Peoples R China.
C3 University of Wollongong; University of Hong Kong
RP Zhou, ZQ (corresponding author), Univ Wollongong, Sch Comp & Informat Technol, Inst Cybersecur & Cryptol, Wollongong, NSW 2522, Australia.
EM zhiquan@uow.edu.au; thtse@cs.hku.hk; mw204@uowmail.edu.au
RI Tse, T.H./C-6590-2008
OI Tse, T.H./0000-0002-0460-8377; Zhou, Zhi Quan/0000-0003-1769-9367
FU Australian Research Council [LP160101691]; Australian Government
   Research Training Program scholarship; Morphick Solutions Pty Ltd;
   Australian Research Council [LP160101691] Funding Source: Australian
   Research Council
FX This work was supported in part by a linkage grant of the Australian
   Research Council (Project ID: LP160101691) and an Australian Government
   Research Training Program scholarship. We wish to thank Morphick
   Solutions Pty Ltd for supporting this research. We are grateful to the
   anonymous reviewers for their valuable comments. All correspondence
   should be addressed to Dr. Z. Q. Zhou at the address shown on the first
   page of this paper.
CR Accenture Technology, 2018, QUAL ENG NEW VIS R D
   Adler R, 2009, STAT SCI, V24, P1, DOI 10.1214/09-STS285
   Aghaei Chadegani A, 2013, ASIAN SOC SCI, V9, P18, DOI [DOI 10.5539/ASS.V9N5P18, 10.5539/ass.v9n5p18]
   [Anonymous], 2011, 25010 ISOIEC
   [Anonymous], 1998, HKUSTCS9801
   Barr ET, 2015, IEEE T SOFTWARE ENG, V41, P507, DOI 10.1109/TSE.2014.2372785
   Brown J, 2018, PROCEEDINGS OF THE 51ST ANNUAL HAWAII INTERNATIONAL CONFERENCE ON SYSTEM SCIENCES (HICSS), P5687
   Chawla, 2021, BRIEF PAPERS SHORTER, DOI [10.1126/science.aad1669, DOI 10.1126/SCIENCE.AAD1669]
   Chen TY, 2018, ACM COMPUT SURV, V51, DOI 10.1145/3143561
   Chen TY, 2016, COMPUTER, V49, P48, DOI 10.1109/MC.2016.176
   Chen TY, 2011, IEEE T SOFTWARE ENG, V37, P109, DOI 10.1109/TSE.2010.23
   Chen TY, 2003, INFORM SOFTWARE TECH, V45, P1, DOI 10.1016/S0950-5849(02)00129-5
   Chen TY, 2001, P INT COMP SOFTW APP, P172, DOI 10.1109/CMPSAC.2001.960614
   Cleveland A. D., 2013, INTRO INDEXING ABSTR, V4th
   Deng B., 2015, Nature, DOI [10.1038/nature.2015.18246, DOI 10.1038/NATURE.2015.18246]
   Donaldson AF, 2017, P ACM PROGRAM LANG, V1, DOI 10.1145/3133917
   Donaldson AF, 2016, 2016 IEEE/ACM 1ST INTERNATIONAL WORKSHOP ON METAMORPHIC TESTING (MET), P44, DOI [10.1109/MET.2016.016, 10.1145/2896971.2896978]
   Dwarakanath A, 2018, ISSTA'18: PROCEEDINGS OF THE 27TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P118, DOI 10.1145/3213846.3213858
   Dwyer M, 2018, IEEE T SOFTWARE ENG, V44, P1, DOI 10.1109/TSE.2017.2778898
   Fagan JC, 2017, INFORM TECHNOL LIBR, V36, P7, DOI 10.6017/ital.v36i2.9718
   Field A., 2009, Discovering statistics with SPSS, V3rd
   Fumani MRFQ, 2015, ANN LIBR INF STUD, V62, P126
   Garfield E, 2006, JAMA-J AM MED ASSOC, V295, P90, DOI 10.1001/jama.295.1.90
   Ghai B, 2007, EMERG MED J, V24, P232, DOI 10.1136/emj.2006.044206
   Ghezzi C, 2002, Fundamentals of Software Engineering
   Google/GraphicsFuzz, 2018, IT WORKS MET TEST US
   Google/GraphicsFuzz, 2018, TEST FRAM AUT FIND S
   Habibzadeh F, 2010, CROAT MED J, V51, P165, DOI 10.3325/cmj.2010.51.165
   Hanafi S., 2018, Discover the data behind the Times Higher Education World University Rankings: as a renewed multiyear partnership draws on Elsevier's Scopus data, we look at how those rankings are created
   Hirsch JE, 2005, P NATL ACAD SCI USA, V102, P16569, DOI 10.1073/pnas.0507655102
   Hjorland B, 2011, J AM SOC INF SCI TEC, V62, P72, DOI 10.1002/asi.21451
   Hong Zhu, 2015, 2015 Second International Conference on Trustworthy Systems and their Applications (TSA). Proceedings, P8, DOI 10.1109/TSA.2015.13
   Jamali HR, 2011, SCIENTOMETRICS, V88, P653, DOI 10.1007/s11192-011-0412-z
   Jarman DC, 2017, 2017 IEEE/ACM 2ND INTERNATIONAL WORKSHOP ON METAMORPHIC TESTING (MET 2017), P21, DOI 10.1109/MET.2017.1
   Just R, 2009, IEEE ICST WORKSHOP, P205, DOI 10.1109/ICSTW.2009.20
   Kanewala U., 2016, P IEEE ACM 11 INT WO, pVII
   Lehmann E. L., 2004, ELEMENTS LARGE SAMPL
   Lehmann S, 2006, NATURE, V444, P1003, DOI 10.1038/4441003a
   Letchford A, 2015, ROY SOC OPEN SCI, V2, DOI 10.1098/rsos.150266
   Lindvall M, 2017, 2017 IEEE/ACM 2ND INTERNATIONAL WORKSHOP ON METAMORPHIC TESTING (MET 2017), P35, DOI 10.1109/MET.2017.6
   Lindvall M, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P129, DOI 10.1109/ICSE.2015.348
   Mayer J, 2006, INT CONF QUAL SOFTW, P85
   McKeeman William M., 1998, DIGIT TECH J, V10, P100
   Meriem A., 2018, J SOFTW ENG, V12, P1
   MILLER BP, 1990, COMMUN ACM, V33, P32, DOI 10.1145/96267.96279
   Mouha N, 2018, IEEE T RELIAB, V67, P870, DOI 10.1109/TR.2018.2847247
   Murphy C, 2010, CUCS01010 COL U DEP, DOI [10.7916/D81261JW, DOI 10.7916/D81261JW]
   Neylon C, 2009, PLOS BIOL, V7, DOI 10.1371/journal.pbio.1000242
   Okun V., 2015, CROSSTALK J DEFENSE, V28, P35
   Paiva CE, 2012, CLINICS, V67, P509, DOI 10.6061/clinics/2012(05)17
   Patel K, 2018, SOFTWARE QUAL J, V26, P1373, DOI 10.1007/s11219-017-9392-4
   Pezzè M, 2014, ADV COMPUT, V95, P1, DOI 10.1016/B978-0-12-800160-8.00001-2
   QS Intelligence Unit, CIT FAC
   Raja UY, 2006, EMERG MED J, V23, P625, DOI 10.1136/emj.2004.022103
   Regehr J., 2014, FINDING COMPILER BUG
   Rothermel J, 2018, 2018 IEEE/ACM 3RD INTERNATIONAL WORKSHOP ON METAMORPHIC TESTING (MET 2018), P18, DOI 10.1145/3193977.3193984
   Ryan TP, 2013, WILEY SER PROBAB ST, P1, DOI 10.1002/9781118439241
   Scanes CG, 2007, POULTRY SCI, V86, P603, DOI 10.1093/ps/86.4.603
   Segura S, 2018, IEEE T SOFTWARE ENG, V44, P1083, DOI 10.1109/TSE.2017.2764464
   Segura S, 2018, 2018 IEEE/ACM 3RD INTERNATIONAL WORKSHOP ON METAMORPHIC TESTING (MET 2018), P1, DOI 10.1145/3193977.3193986
   Segura S, 2018, PROC IEEE ACM INT C, P538, DOI 10.1145/3183440.3183468
   Segura S, 2016, IEEE T SOFTWARE ENG, V42, P805, DOI 10.1109/TSE.2016.2532875
   Shan LJ, 2009, COMPUT J, V52, P571, DOI 10.1093/comjnl/bxm043
   Simkin M., 2006, Significance, V3, P179, DOI [10.1111/j.1740-9713.2006.00202.x, DOI 10.1111/J.1740-9713.2006.00202.X]
   Simkin MV, 2007, J AM SOC INF SCI TEC, V58, P1661, DOI 10.1002/asi.20653
   Takanen A, 2018, ADV TOP SCI TECH CHI, P1
   Tian YC, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P303, DOI 10.1145/3180155.3180220
   Towey D, 2016, SCI CHINA INFORM SCI, V59, DOI 10.1007/s11432-016-5544-6
   Vassilev A, 2014, COMPUTER, V47, P102, DOI 10.1109/MC.2014.273
   Le V, 2014, ACM SIGPLAN NOTICES, V49, P216, DOI [10.1145/2666356.2594334, 10.1145/2594291.2594334]
   Wang ZY, 2018, 2018 IEEE/ACM 3RD INTERNATIONAL WORKSHOP ON METAMORPHIC TESTING (MET 2018), P34, DOI 10.1145/3193977.3193979
   Wilsdon J, 2016, METRIC TIDE INDEPEND
   Xie XY, 2011, J SYST SOFTWARE, V84, P544, DOI 10.1016/j.jss.2010.11.920
   Zhang MS, 2018, IEEE INT CONF AUTOM, P132, DOI 10.1145/3238147.3238187
   Zhou Z. Q., 2007, TR200706 U HONG KONG
   Zhou ZQ, 2020, IEEE T SOFTWARE ENG, V46, P1120, DOI 10.1109/TSE.2018.2876433
   Zhou ZQ, 2019, COMMUN ACM, V62, P61, DOI 10.1145/3241979
   Zhou ZQ, 2016, IEEE T SOFTWARE ENG, V42, P264, DOI 10.1109/TSE.2015.2478001
   Zhou ZQ, 2012, SOFTW TEST VERIF REL, V22, P221, DOI 10.1002/stvr.437
NR 79
TC 21
Z9 21
U1 1
U2 7
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUN 1
PY 2021
VL 47
IS 6
BP 1164
EP 1183
DI 10.1109/TSE.2019.2915065
PG 20
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA SQ8XU
UT WOS:000660633800004
OA Bronze, Green Submitted
DA 2024-07-18
ER

PT J
AU Jalote, P
   Kamma, D
AF Jalote, Pankaj
   Kamma, Damodaram
TI Studying Task Processes for Improving Programmer Productivity
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Task analysis; Productivity; Software; Companies; Markov processes;
   Programmer; productivity; task processes; task execution; industrial
   study; software; efficiency; improvement; experiments
ID SOFTWARE-DEVELOPMENT; CODE
AB Productivity of a software development organization can be enhanced by improving the software process, using better tools/technology, and enhancing the productivity of programmers. This work focuses on improving programmer productivity by studying the process used by a programmer for executing an assigned task, which we call the task process. We propose a general framework for studying the impact of task processes on programmer productivity and also the impact of transferring task processes of high-productivity programmers to average-productivity peers. We applied the framework to a few live projects in Robert Bosch Engineering and Business Solutions Limited, a CMMI Level 5 company. In each project, we identified two groups of programmers: high-productivity and average-productivity programmers. We requested each programmer to video capture their computer screen while executing his/her assigned tasks. We then analyzed these task videos to extract the task processes and then used them to identify the differences between the task processes used by the two groups. Some key differences were found between the task processes, which could account for the difference in productivities of the two groups. Similarities between the task processes were also analyzed quantitatively by modeling each task process as a Markov chain. We found that programmers from the same group used similar task processes, but the task processes of the two groups differed considerably. The task processes of high-productivity programmers were transferred to the average-productivity programmers by training them on the key steps missing in their process but commonly present in the work of their high-productivity peers. A substantial productivity gain was found in the average-productivity programmers as a result of this transfer. The study shows that task processes of programmers impact their productivity, and it is possible to improve the productivity of average-productivity programmers by transferring task processes from high-productivity programmers to them.
C1 [Jalote, Pankaj] IIIT Delhi, New Delhi 110020, India.
   [Kamma, Damodaram] Robert Bosch Engn & Business Solut Ltd, Bengaluru 560095, Karnataka, India.
C3 Indraprastha Institute of Information Technology Delhi
RP Kamma, D (corresponding author), Robert Bosch Engn & Business Solut Ltd, Bengaluru 560095, Karnataka, India.
EM jalote@iiitd.ac.in; damodaram.kamma@in.bosch.com
CR Aggarwal CC, 2001, LECT NOTES COMPUT SC, V1973, P420
   [Anonymous], 1987, Peopleware: Productive Projects and Teams
   [Anonymous], BENCHMARKING QUALITY
   [Anonymous], 2010, PROC 18 ACM SIGSOFT
   [Anonymous], 2005, P 11 IEEE INT SOFTW
   [Anonymous], 2013, INDIA SOFTWARE ENG C
   Anselmo D, 2003, COMMUN ACM, V46, P121, DOI 10.1145/948383.948391
   Bailey BP, 2001, HUMAN-COMPUTER INTERACTION - INTERACT'01, P593
   BANDINELLI SC, 1993, IEEE T SOFTWARE ENG, V19, P1128, DOI 10.1109/32.249659
   Berntsson-Svensson R., 2006, P 2006 ACMIEEE INT S, P144
   Blackburn JD, 1996, IEEE T SOFTWARE ENG, V22, P875, DOI 10.1109/32.553636
   Bowdidge R. W., 1997, Empirical Software Engineering, V2, P221, DOI 10.1023/A:1009716016693
   BROOKS WD, 1981, J SYST SOFTWARE, V2, P3, DOI 10.1016/0164-1212(81)90041-8
   Bruckhaus T, 1996, IEEE SOFTWARE, V13, P29, DOI 10.1109/52.536456
   Canfora G, 2003, TWELFTH IEEE INTERNATIONAL WORKSHOPS ON ENABLING TECHNOLOGIES: INFRASTRUCTURE FOR COLLABORATIVE ENTERPRISES, PROCEEDINGS, P314
   Ciolkowski M, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P641
   Cohn M, 2006, METHODS TOOLS, V13, P3
   CURTIS B, 1992, COMMUN ACM, V35, P75, DOI 10.1145/130994.130998
   Devanbu P, 1996, PROC INT CONF SOFTW, P189, DOI 10.1109/ICSE.1996.493415
   Galin D, 2006, IEEE SOFTWARE, V23, P81, DOI 10.1109/MS.2006.149
   Gonçalves MK, 2011, J UNIVERS COMPUT SCI, V17, P1913
   GRANT EE, 1967, IEEE TRANS HUM FACT, VHFE8, P33, DOI 10.1109/THFE.1967.233303
   Grip A, 2016, TAYLORISM TRANSFORME
   Grip A. D, 2004, SCI MANAGEMENT
   Gugerty L., 1986, P CHI 1986 BOST MASS, P171, DOI DOI 10.1145/22627.22367
   Hartmann B, 2010, CHI2010: PROCEEDINGS OF THE 28TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, VOLS 1-4, P1019
   HUFF KE, 1989, SIGPLAN NOTICES, V24, P97
   Humphrey WS, 1996, IEEE SOFTWARE, V13, P77, DOI 10.1109/52.493023
   Jalote P., 2000, CMM PRACTICE PROCESS
   Jalote P, 2006, J SYST SOFTWARE, V79, P904, DOI 10.1016/j.jss.2005.06.040
   Johnson PM, 2003, PROC INT CONF SOFTW, P641, DOI 10.1109/ICSE.2003.1201249
   JONES C, 1994, COMPUTER, V27, P98, DOI 10.1109/2.312055
   Kamatar J, 2000, IEEE SOFTWARE, V17, P85, DOI 10.1109/52.895173
   Kamma D, 2015, ASIA PAC SOFWR ENG, P32, DOI 10.1109/APSEC.2015.31
   Kitchenham B, 2004, IEEE T SOFTWARE ENG, V30, P1023, DOI 10.1109/TSE.2004.104
   Lawrance J, 2013, IEEE T SOFTWARE ENG, V39, P197, DOI 10.1109/TSE.2010.111
   Macaulay L, 1997, INT J PROJECT MANAGE, V15, P39
   Mäntylä MV, 2009, IEEE T SOFTWARE ENG, V35, P430, DOI 10.1109/TSE.2008.71
   MARTIN RC, 2001, ENG NOTEBOOK EXTREME
   McGibbon T, 1999, DOD DATA CTR SOFTWAR
   Meena H.K., 2005, ECLIPSE 05, P85
   Meyer AN, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P19, DOI 10.1145/2635868.2635892
   Mockus A, 2002, ACM T SOFTW ENG METH, V11, P309, DOI 10.1145/567793.567795
   Morisio M, 2000, IEEE SOFTWARE, V17, P90, DOI 10.1109/52.895174
   MYERS GJ, 1978, COMMUN ACM, V21, P760, DOI 10.1145/359588.359602
   Nong Ye, 1994, International Journal of Human-Computer Interaction, V6, P105, DOI 10.1080/10447319409526085
   Osterweil L., 1987, Proceedings of the 9th International Conference on Software Engineering (Cat. No.87CH2432-3), P2
   Pietinen S, 2008, COMM COM INF SC, V16, P47
   Prechelt L, 2000, COMPUTER, V33, P23, DOI 10.1109/2.876288
   Raj A., 2013, INT J SCI ENG RES, V4, P647
   RASCH RH, 1992, MIS QUART, V16, P395, DOI 10.2307/249535
   RASCH RH, 1991, P C SIGCPR, P38
   Robillard MP, 2004, IEEE T SOFTWARE ENG, V30, P889, DOI 10.1109/TSE.2004.101
   Scacchi W., 1995, Software Engineering and Knowledge Engineering, V4, P273
   Sericola B, 2013, APPL STOCH METH, P1, DOI 10.1002/9781118731543
   Sjoberg DIK, 2005, IEEE T SOFTWARE ENG, V31, P733, DOI 10.1109/TSE.2005.97
   Suzuki M., 1991, Proceedings. First International Conference on the Software Process. Manufacturing Complex Systems (Cat. No.91TH0418-4), P202, DOI 10.1109/ICSP.1991.664350
   Tan T, 2009, INT SYMP EMP SOFTWAR, P1, DOI 10.1109/ESEM.2009.5316044
   Varkoi TK, 1998, PIONEERING NEW TECHNOLOGIES: MANAGEMENT ISSUES AND CHALLENGES IN THE THIRD MILLENNIUM, PROCEEDINGS, P477, DOI 10.1109/IEMC.1998.727808
   Vegas S, 2015, IEEE-ACM INT WKSP CO, P3, DOI 10.1109/CESI.2015.8
   Wen L, 2007, DATA MIN KNOWL DISC, V15, P145, DOI 10.1007/s10618-007-0065-y
   Williams L, 1988, P 4 INT SOFTW PROC W, P167
   Williams L. G., 1988, Proceedings of the 10th International Conference on Software Engineering (Cat. No.88CH2554-4), P174, DOI 10.1109/ICSE.1988.93699
   Wilson P. B, 2000, SYST DEV MANAGE, V1, P10
   Yu D. S. W, 1990, AT T TECH J, V69, P110
NR 65
TC 1
Z9 1
U1 0
U2 6
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD APR 1
PY 2021
VL 47
IS 4
BP 801
EP 817
DI 10.1109/TSE.2019.2904230
PG 17
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA RP8GH
UT WOS:000641961100006
DA 2024-07-18
ER

PT J
AU Lee, S
   Wu, RX
   Cheung, SC
   Kang, S
AF Lee, Seonah
   Wu, Rongxin
   Cheung, Shing-Chi
   Kang, Sungwon
TI Automatic Detection and Update Suggestion for Outdated API Names in
   Documentation
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Documentation; Computer bugs; Tools; History; Libraries; Software
   systems; Application programming interfaces; documentation; history;
   software maintenance
AB Application programming interfaces (APIs) continually evolve to meet ever-changing user needs, and documentation provides an authoritative reference for their usage. However, API documentation is commonly outdated because nearly all of the associated updates are performed manually. Such outdated documentation, especially with regard to API names, causes major software development issues. In this paper, we propose a method for automatically updating outdated API names in API documentation. Our insight is that API updates in documentation can be derived from API implementation changes between code revisions. To evaluate the proposed method, we applied it to four open source projects. Our evaluation results show that our method, FreshDoc, detects outdated API names in API documentation with 48 percent higher accuracy than the existing state-of-the-art methods do. Moreover, when we checked the updates suggested by FreshDoc against the developers' manual updates in the revised documentation, FreshDoc detected 82 percent of the outdated names. When we reported 40 outdated API names found by FreshDoc via issue tracking systems, developers accepted 75 percent of the suggestions. These evaluation results indicate that FreshDoc can be used as a practical method for the detection and updating of API names in the associated documentation.
C1 [Lee, Seonah] Gyeongsang Natl Univ, Dept Aerosp & Software Engn, Jinju Daero 501, Jinju, South Korea.
   [Lee, Seonah] Gyeongsang Natl Univ, Dept Informat, Jinju Daero 501, Jinju, South Korea.
   [Wu, Rongxin; Cheung, Shing-Chi] Hong Kong Univ Sci & Technol, Dept Comp Sci & Engn, Hong Kong, Peoples R China.
   [Kang, Sungwon] Korea Adv Inst Sci & Technol, Sch Comp, 373-1 Guseong Dong, Daejeon 34141, South Korea.
C3 Gyeongsang National University; Gyeongsang National University; Hong
   Kong University of Science & Technology; Korea Advanced Institute of
   Science & Technology (KAIST)
RP Kang, S (corresponding author), Korea Adv Inst Sci & Technol, Sch Comp, 373-1 Guseong Dong, Daejeon 34141, South Korea.
EM saleese@gnu.ac.kr; wurongxin@cse.ust.hk; scc@cse.ust.hk;
   sungwon.kang@kaist.ac.kr
RI wu, rongxin/F-3999-2016; Liu, Chenyu/KBQ-8899-2024; li,
   jing/KHY-5337-2024; , sungwon/C-1765-2011; Cheung, Shing Chi/U-5882-2018
OI Lee, Seonah/0000-0002-2004-2924; , sungwon/0000-0001-7947-8741; Wu,
   Rongxin/0000-0002-4648-3795; Cheung, Shing Chi/0000-0002-3508-7172
FU National Research Foundation of Korea [NRF-2015R1C1A2A0-1055111,
   NRF-2018R1D1A1A02085551]; Next-Generation Information Computing
   Development Program through the National Research Foundation of Korea
   (NRF) - Ministry of Science, ICT [NRF-2017M3C4A7066210]; Hong Kong
   RGC/GRF [16202917]; MSRA Collaborative Research Award
FX This work was supported in part by a grant from National Research
   Foundation of Korea (NRF-2015R1C1A2A0-1055111, NRF-2018R1D1A1A02085551),
   and a grant from Next-Generation Information Computing Development
   Program through the National Research Foundation of Korea (NRF) funded
   by the Ministry of Science, ICT (NRF-2017M3C4A7066210). This work was
   also supported by Hong Kong RGC/GRF (16202917) andMSRACollaborative
   Research Award.
CR [Anonymous], CHANGEDISTILLER ADAP
   [Anonymous], 2010, P IEEE ACM INT C AUT
   [Anonymous], ECLIPSE SPELL CHECKE
   [Anonymous], LANGUAGE TOOL LGPL
   Apache OpenNLP, APACHE SOFTWARE FDN
   Asaduzzaman M, 2015, PROC IEEE INT CONF S, P271, DOI 10.1109/ICSM.2015.7332473
   Bass Len, 2015, DevOps: A Software Architect's Perspective
   Buschmann F, 2018, P 40 INT C SOFTW ENG
   Cook C., 1994, CROSSTALK, V7, P26
   Dagenais B., 2010, P 18 INT S FDN SOFTW, P127
   Dagenais B, 2014, IEEE T SOFTWARE ENG, V40, P1126, DOI 10.1109/TSE.2014.2347969
   Dagenais B, 2012, PROC INT CONF SOFTW, P47, DOI 10.1109/ICSE.2012.6227207
   Dagenais B, 2011, ACM T SOFTW ENG METH, V20, DOI 10.1145/2000799.2000805
   de Souza S.C.B., 2005, P 23 ANN INT C DES C, P68, DOI [10.1145/1085313, 10.1145/1085313.1085331]
   Elasticsearch, REFACTORING GETTERSE
   Elasticsearch, CHANGED DOCUMENTATIO
   Elasticsearch, DOCS IS INDEXRESPONS
   Elasticsearch, 2013, BOOK DOCUMENTATION R
   Elasticsearch, REFACTORING ACCESSOR
   Elasticsearch, JAVA API DOCUMENTATI
   Elasticsearch, ELASTICSEARCH DISTRI
   Elasticsearch, DOCS SHOULD USE SETP
   Elasticsearch, **DROPPED REF**
   Fluri B, 2007, IEEE T SOFTWARE ENG, V33, P725, DOI 10.1109/TSE.2007.70731
   Fluri B, 2006, INT C PROGRAM COMPRE, P35, DOI 10.1109/ICPC.2006.16
   Forward A., 2002, Proceedings of the 2002 ACM symposium on Document engineering, P26, DOI 10.1145/585058.585065
   Hibernate-orm, **DROPPED REF**
   Hibernate-orm, **DROPPED REF**
   Hibernate-orm, DOCS IS JACK EVENT R
   Hibernate-orm, MANUAL HIBERNATE ORM
   Hibernate-orm, IMPOSSIBLE SWITCH SE
   Kajko-Mattsson M, 2005, EMPIR SOFTW ENG, V10, P31, DOI 10.1023/B:LIDA.0000048322.42751.ca
   Lee Seonah, FRESHDOC TOOL EXPT R
   Lethbridge TC, 2003, IEEE SOFTWARE, V20, P35, DOI 10.1109/MS.2003.1241364
   Linares-Vasquez M., 2014, P 22 INT C PROGR COM, P83, DOI DOI 10.1145/2597008.2597155
   Logback, CYCLICBUFFERTRACKERI
   Logback, LOGBACK PROJECT
   Logback, **DROPPED REF**
   Logback, SITE LOGBACK PROJECT
   Maalej W, 2013, IEEE T SOFTWARE ENG, V39, P1264, DOI 10.1109/TSE.2013.12
   McBurney P. W., 2014, P 22 INT C PROGRAM C, P279
   McDonnell T, 2013, PROC IEEE INT CONF S, P70, DOI 10.1109/ICSM.2013.18
   Meng N, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P502, DOI 10.1109/ICSE.2013.6606596
   Meng SC, 2012, PROC INT CONF SOFTW, P353, DOI 10.1109/ICSE.2012.6227179
   Moreno L, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P484, DOI 10.1145/2635868.2635870
   Moreno L, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P880, DOI 10.1109/ICSE.2015.98
   Murphy-Hill E, 2012, IEEE T SOFTWARE ENG, V38, P5, DOI 10.1109/TSE.2011.41
   PARNAS DL, 1994, PROC INT CONF SOFTW, P279, DOI 10.1109/ICSE.1994.296790
   Parr T, ANTLR ANTLR TERENCE
   Renukeswar Chinta, JAVALANGCLASSNOTFOUN
   Rigby PC, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P832, DOI 10.1109/ICSE.2013.6606629
   Salee, IS IMMUTABLESETTINGS
   Spring-boot, DOCS IS AUTOCONFIGUR
   Spring-boot, BOOT DOCUMENTATIONMI
   Spring-boot, DOCS IS CONFIGURABLE
   Spring-boot, **DROPPED REF**
   Spring-boot, DOCUMENT DEPRECATION
   Spring-boot, DOCUMENTATION SPRING
   Sridhara Giriprasad, 2010, 25 IEEEACM INT C AUT, P43
   Steinmacher I, 2019, IEEE SOFTWARE, V36, P41, DOI 10.1109/MS.2018.110162131
   Subramanian S, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P643, DOI 10.1145/2568225.2568313
   Terragni V., 2016, P 25 INT S SOFTWARE, P118
   Thepoynt, HIBERNATE 4 CONNECTI
   Thomas Bill., 2001, Proceedings of the 19th Annual International Conference on Computer Documentation, SIGDOC '01, P235
   Tilley S. R., 1993, Proceedings CASCON '93, P1083
   Tilley S. R., 1992, SIGDOC '92. The 10th Annual International Conference. Conference Proceedings. Going Online. The New World of Multimedia Documentation, P211, DOI 10.1145/147001.147033
   Uddin G, 2015, IEEE SOFTWARE, V32, P68, DOI 10.1109/MS.2014.80
   Visconti M, 2002, XXII INTERNATIONAL CONFERENCE OF THE CHILEAN COMPUTER SCIENCE SOCIETY, PROCEEDINGS, P179, DOI 10.1109/SCCC.2002.1173192
   Wen M., 2019, P INT C SOFTW ENG 20
   Wu Wei, 2010, P 32 ACMIEEE INT C S, P325, DOI DOI 10.1145/1806799.1806848
   Zhang C, 2012, PROC INT CONF SOFTW, P826, DOI 10.1109/ICSE.2012.6227136
   Zhong H, 2013, ACM SIGPLAN NOTICES, V48, P803, DOI [10.1145/2509136.2509523, 10.1145/2544173.2509523]
   Zhou Y, 2017, PROC INT CONF SOFTW, P27, DOI 10.1109/ICSE.2017.11
   Zlotnick F, OPEN SOURCE SURVEY
NR 74
TC 7
Z9 7
U1 1
U2 8
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD APR 1
PY 2021
VL 47
IS 4
BP 653
EP 675
DI 10.1109/TSE.2019.2901459
PG 23
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA RP8GH
UT WOS:000641961100001
DA 2024-07-18
ER

PT J
AU Yang, J
   Fu, C
   Liu, XY
   Yin, H
   Zhou, P
AF Yang, Jia
   Fu, Cai
   Liu, Xiao-Yang
   Yin, Heng
   Zhou, Pan
TI Codee: A Tensor Embedding Scheme for Binary Code Search
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Function feature extraction; tensor embedding; code search; tSVD
AB Given a target binary function, the binary code search retrieves top-K similar functions in the repository, and similar functions represent that they are compiled from the same source codes. Searching binary code is particularly challenging due to large variations of compiler tool-chains and options and CPU architectures, as well as thousands of binary codes. Furthermore, there are some pivotal issues in current binary code search schemes, including inaccurate text-based or token-based analysis, slow graph matching, or complex deep learning processes. In this paper, we present an unsupervised tensor embedding scheme, Codee, to carry out code search efficiently and accurately at the binary function level. First, we use an NLP-based neural network to generate the semantic-aware token embedding. Second, we propose an efficient basic block embedding generation algorithm based on the network representation learning model. We learn both the semantic information of instructions and the control flow structural information to generate the basic block embedding. Then we use all basic block embeddings in a function to obtain a variable-length function feature vector. Third, we build a tensor to generate function embeddings based on the tensor singular value decomposition, which compresses the variable-length vectors into short fixed-length vectors to facilitate efficient search afterward. We further propose a dynamic tensor compression algorithm to incrementally update the function embedding database. Finally, we use the local sensitive hash method to find the top-K similar matching functions in the repository. Compared with state-of-the-art cross-optimization-level code search schemes, such as Asm2Vec and DeepBinDiff, our scheme achieves higher average search accuracy, shorter feature vectors, and faster feature generation performance using four datasets, OpenSSL, Coreutils, libgmp and libcurl. Compared with other cross-platform and cross-optimization-level code search schemes, such as Gemini, Safe, the average recall of our method also outperforms others.
C1 [Yang, Jia; Fu, Cai; Zhou, Pan] Huazhong Univ Sci & Technol, Sch Cyber Sci & Engn, Wuhan 430074, Peoples R China.
   [Liu, Xiao-Yang] Columbia Univ, Elect Engn Dept, New York, NY 10027 USA.
   [Yin, Heng] Univ Calif Riverside, Dept Comp Sci & Engn, Riverside, CA 92521 USA.
C3 Huazhong University of Science & Technology; Columbia University;
   University of California System; University of California Riverside
RP Yang, J (corresponding author), Huazhong Univ Sci & Technol, Sch Cyber Sci & Engn, Wuhan 430074, Peoples R China.
EM d201780841@hust.edu.cn; fucai@hust.edu.cn; x12427@columbia.edu;
   heng@cs.ucr.edu; panzhouj@hust.edu.cn
RI yang, jia/JGC-9124-2023; Liu, Xiao-Yang/AAZ-8384-2020
OI Yang, Jia/0000-0003-1469-0789; Liu, Xiao-Yang/0000-0002-9532-1709; Yin,
   Heng/0000-0002-8942-7742; Fu, Cai/0000-0003-4536-3537
FU National Science of Foundation China [62072200, 61972448]
FX Cai Fu and Pan Zhou was supported by the National Science of Foundation
   China under Grants 62072200 and 61972448.
CR Andoni A, 2008, COMMUN ACM, V51, P117, DOI 10.1145/1327452.1327494
   Andrews S., 2017, INT J INF COMMUN TEC, V11, P576
   [Anonymous], 2012, INT C DATA MINING SO
   [Anonymous], 1996, MATRIX COMPUTATION
   Bourquin Martial, 2013, P 2 ACM SIGPLAN PROG
   Boyd Stephen, 2010, Foundations and Trends in Machine Learning, V3, P1, DOI 10.1561/2200000016
   Brand M, 2002, LECT NOTES COMPUT SC, V2350, P707
   Cai HY, 2018, IEEE T KNOWL DATA EN, V30, P1616, DOI 10.1109/TKDE.2018.2807452
   Chandramohan M, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P678, DOI 10.1145/2950290.2950350
   Chua ZL, 2017, PROCEEDINGS OF THE 26TH USENIX SECURITY SYMPOSIUM (USENIX SECURITY '17), P99
   David Y, 2014, ACM SIGPLAN NOTICES, V49, P349, DOI [10.1145/2594291.2594343, 10.1145/2666356.2594343]
   De Nicolao P, 2018, LECT NOTES COMPUT SC, V10885, P351, DOI 10.1007/978-3-319-93411-2_16
   Ding SHH, 2019, P IEEE S SECUR PRIV, P472, DOI 10.1109/SP.2019.00003
   Duan Y, 2020, 27TH ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2020), DOI 10.14722/ndss.2020.24311
   Eschweiler S, 2016, 23RD ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2016), DOI 10.14722/ndss.2016.23185
   Feng Q., 2016, P 2016 ACM SIGSAC C, P480, DOI [10.1145/2976749.2978370, DOI 10.1145/2976749.2978370]
   Fernique T., 2020, ABS200207168 CORR
   Flake H., 2004, Proceedings of the Detection of Intrusions and Malware Vulnerability Assessment, GI SIG SIDAR Workshop, DIMVA 2004, Dortmund, Germany, 6-7 July 2004, P161, DOI [10.17877/DE290R-2007, DOI 10.17877/DE290R-2007]
   Fu DQ, 2017, SCI PROGRAMMING-NETH, V2017, DOI 10.1155/2017/7809047
   Grover A, 2016, KDD'16: PROCEEDINGS OF THE 22ND ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P855, DOI 10.1145/2939672.2939754
   Haq Irfan Ul, 2019, ABS190911424 COR
   Hu YK, 2018, PROC IEEE INT CONF S, P104, DOI 10.1109/ICSME.2018.00019
   Huang X., 2017, P SIAM INT C DAT MIN, P633
   Karim ME, 2005, J COMPUT VIROL HACKI, V1, P13, DOI 10.1007/s11416-005-0002-9
   Kenter T, 2016, PROCEEDINGS OF THE 54TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, VOL 1, P941
   Khoo WM, 2013, IEEE WORK CONF MIN S, P329, DOI 10.1109/MSR.2013.6624046
   Kilmer ME, 2011, LINEAR ALGEBRA APPL, V435, P641, DOI 10.1016/j.laa.2010.09.020
   Kuang LW, 2018, IEEE T CLOUD COMPUT, V6, P868, DOI 10.1109/TCC.2015.2511769
   Kuang LW, 2014, IEEE T EMERG TOP COM, V2, P280, DOI 10.1109/TETC.2014.2330516
   Li L, 2017, IEEE T INF FOREN SEC, V12, P1269, DOI 10.1109/TIFS.2017.2656460
   Liu BC, 2018, IEEE INT CONF AUTOM, P667, DOI 10.1145/3238147.3238199
   Luo LN, 2017, IEEE T SOFTWARE ENG, V43, P1157, DOI 10.1109/TSE.2017.2655046
   Massarelli L., 2019, PROC WORKSHOP BINARY
   Massarelli L, 2019, LECT NOTES COMPUT SC, V11543, P309, DOI 10.1007/978-3-030-22038-9_15
   Ming J, 2016, IEEE T RELIAB, V65, P1647, DOI 10.1109/TR.2016.2570554
   Olson BJ, 2014, APPL MECH REV, V66, DOI 10.1115/1.4027722
   Papalexakis EE, 2017, ACM T INTEL SYST TEC, V8, DOI 10.1145/2915921
   Pewny J., 2014, P 30 ANN COMP SEC AP, P406, DOI [10.1145/2664243.2664269, DOI 10.1145/2664243.2664269]
   Le Q, 2014, PR MACH LEARN RES, V32, P1188
   Shirani Paria, 2017, Detection of Intrusions and Malware, and Vulnerability Assessment. 14th International Conference, DIMVA 2017. Proceedings: LNCS 10327, P301, DOI 10.1007/978-3-319-60876-1_14
   Tang J, 2015, PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON WORLD WIDE WEB (WWW 2015), P1067, DOI 10.1145/2736277.2741093
   Wei HH, 2017, PROCEEDINGS OF THE TWENTY-SIXTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P3034
   Xu XJ, 2017, CCS'17: PROCEEDINGS OF THE 2017 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P363, DOI 10.1145/3133956.3134018
   Xue YX, 2019, IEEE T SOFTWARE ENG, V45, P1125, DOI 10.1109/TSE.2018.2827379
   Yu ZP, 2020, AAAI CONF ARTIF INTE, V34, P1145
   Zhang ZM, 2014, PROC CVPR IEEE, P3842, DOI 10.1109/CVPR.2014.485
   Zuo F, 2019, 26TH ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2019), DOI 10.14722/ndss.2019.23492
NR 47
TC 14
Z9 16
U1 0
U2 5
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD FEB 2
PY 2021
VL 48
IS 7
BP 2224
EP 2244
DI 10.1109/TSE.2021.3056139
PG 21
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 2Y5ZD
UT WOS:000825973900001
DA 2024-07-18
ER

PT J
AU Chen, JC
   Xia, X
   Lo, D
   Grundy, J
   Luo, XP
   Chen, T
AF Chen, Jiachi
   Xia, Xin
   Lo, David
   Grundy, John
   Luo, Xiapu
   Chen, Ting
TI DefectChecker: Automated Smart Contract Defect Detection by Analyzing
   EVM Bytecode
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Smart contracts; Blockchain; Tools; Computer bugs; Computer hacking;
   Virtual machining; Organizations; Smart contracts; ethereum; contract
   defects detection; bytecode analyze; symbolic execution
AB Smart contracts are Turing-complete programs running on the blockchain. They are immutable and cannot be modified, even when bugs are detected. Therefore, ensuring smart contracts are bug-free and well-designed before deploying them to the blockchain is extremely important. A contract defect is an error, flaw or fault in a smart contract that causes it to produce an incorrect or unexpected result, or to behave in unintended ways. Detecting and removing contract defects can avoid potential bugs and make programs more robust. Our previous work defined 20 contract defects for smart contracts and divided them into five impact levels. According to our classification, contract defects with seriousness level between 1-3 can lead to unwanted behaviors, e.g., a contract being controlled by attackers. In this paper, we propose DefectChecker, a symbolic execution-based approach and tool to detect eight contract defects that can cause unwanted behaviors of smart contracts on the Ethereum blockchain platform. DefectChecker can detect contract defects from smart contracts' bytecode. We verify the performance of DefectChecker by applying it to an open-source dataset. Our evaluation results show that DefectChecker obtains a high F-score (88.8 percent in the whole dataset) and only requires 0.15s to analyze one smart contract on average. We also applied DefectChecker to 165,621 distinct smart contracts on the Ethereum platform. We found that 25,815 of these smart contracts contain at least one of the contract defects that belongs to impact level 1-3, including some real-world attacks.
C1 [Chen, Jiachi; Xia, Xin; Grundy, John] Monash Univ, Fac Informat Technol, Clayton, Vic 3800, Australia.
   [Lo, David] Singapore Management Univ, Sch Informat Syst, Singapore 188065, Singapore.
   [Luo, Xiapu] Hong Kong Polytech Univ, Dept Comp, Hung Hom, Hong Kong, Peoples R China.
   [Chen, Ting] Univ Elect Sci & Technol China, Sch Comp Sci & Engn, Chengdu 610054, Peoples R China.
C3 Monash University; Singapore Management University; Hong Kong
   Polytechnic University; University of Electronic Science & Technology of
   China
RP Xia, X (corresponding author), Monash Univ, Fac Informat Technol, Clayton, Vic 3800, Australia.
EM Jiachi.Chen@monash.edu; Xin.Xia@monash.edu; davidlo@smu.edu.sg;
   John.Grundy@monash.edu; csxluo@comp.polyu.edu.hk;
   brokendragon@uestc.edu.cn
RI Chen, Jiachi/HOC-4256-2023; Lo, David/A-2493-2012
OI Lo, David/0000-0002-4367-7201
FU Australian Research Council's Discovery Early Career Researcher Award
   (DECRA) funding scheme [DE200100021]; ARC Laureate Fellowship funding
   scheme [FL190100035]; ARC [DP200100020]; Singapore's Ministry of
   Education [MOE2019-T2-1-193]; Hong Kong RGC Project [152193/19E];
   National Natural Science Foundation of China [61872057]; National Key
   R&D Program of China [2018YFB0804100]
FX This research was partially supported by the Australian Research
   Council's Discovery Early Career Researcher Award (DECRA) funding scheme
   (DE200100021), ARC Laureate Fellowship funding scheme (FL190100035), ARC
   Discovery grant (DP200100020), Singapore's Ministry of Education
   (MOE2019-T2-1-193), Hong Kong RGC Project (No. 152193/19E), National
   Natural Science Foundation of China (61872057), and National Key R&D
   Program of China (2018YFB0804100).
CR [Anonymous], 2018, ETHERCAMP
   [Anonymous], 2019, DECENTRALIZED APPL
   [Anonymous], 2021, GEN LINEAR MODELS 6
   [Anonymous], 2016, EIP55
   [Anonymous], 2019, MYTHRIL SECURITY ANA
   [Anonymous], 2019, WEB3 PY
   [Anonymous], 2018, GETH
   [Anonymous], 2019, ICO ETHEREUM
   [Anonymous], 2010, ISOMECIEEE 24765:2010, P1, DOI [DOI 10.1109/IEEESTD.2010.5733835, 10.1109/IEEESTD.2010.5733835]
   [Anonymous], 2018, SOLIDITY DOCUMENT
   [Anonymous], 2018, STACKEXCHANGE
   [Anonymous], 2018, OYENTE ANAL TOOL SMA
   [Anonymous], 2020, JAVA VIRTUAL MACHINE
   Barrett C.W., 2018, Handbook of Model Checking, P305, DOI DOI 10.1007/978-3-319-10575-8_11
   Benesty J., 2009, Noise Reduction in Speech Processing
   Chaum D., 1983, Advances in Cryptology, Proceedings of Crypto 82, P199
   Chen JC, 2022, IEEE T SOFTWARE ENG, V48, P327, DOI 10.1109/TSE.2020.2989002
   Chen T, 2019, INT CON DISTR COMP S, P1369, DOI 10.1109/ICDCS.2019.00137
   Chen T, 2021, IEEE T EMERG TOP COM, V9, P1433, DOI 10.1109/TETC.2020.2979019
   Chen T, 2020, ACM T INTERNET TECHN, V20, DOI 10.1145/3381036
   Chen T, 2019, PROCEEDINGS OF THE 2019 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY (CCS'19), P1503, DOI 10.1145/3319535.3345664
   Chen T, 2018, IEEE INFOCOM SER, P1484, DOI 10.1109/INFOCOM.2018.8486401
   Chen T, 2018, 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: NEW IDEAS AND EMERGING TECHNOLOGIES RESULTS (ICSE-NIER), P81, DOI 10.1145/3183399.3183420
   Chen T, 2017, LECT NOTES COMPUT SC, V10701, P3, DOI 10.1007/978-3-319-72359-4_1
   Chillarege R, 1996, HDB SOFTWARE RELIABI
   COHEN J, 1960, EDUC PSYCHOL MEAS, V20, P37, DOI 10.1177/001316446002000104
   de Moura L, 2008, LECT NOTES COMPUT SC, V4963, P337, DOI 10.1007/978-3-540-78800-3_24
   Etherscan, 2018, US
   Grech N, 2019, PROC INT CONF SOFTW, P1176, DOI 10.1109/ICSE.2019.00120
   Jiang B, 2018, IEEE INT CONF AUTOM, P259, DOI 10.1145/3238147.3238177
   Kalra S, 2018, 25TH ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2018), DOI 10.14722/ndss.2018.23082
   Kitchenham Barbara, 2004, Joint Technical Report, V2004, P1
   Luu L, 2016, CCS'16: PROCEEDINGS OF THE 2016 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P254, DOI 10.1145/2976749.2978309
   McCabe T. J., 1976, IEEE Transactions on Software Engineering, VSE-2, P308, DOI 10.1109/TSE.1976.233837
   Nakamoto S., 2008, DECENTRAL BUS REV
   Nikolic I, 2018, 34TH ANNUAL COMPUTER SECURITY APPLICATIONS CONFERENCE (ACSAC 2018), P653, DOI 10.1145/3274694.3274743
   SWC Registry, 2019, SWC REGISTRY SMART C
   Tarjan R., 1972, SIAM Journal on Computing, V1, P146, DOI 10.1137/0201010
   Tsankov P, 2018, PROCEEDINGS OF THE 2018 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY (CCS'18), P67, DOI 10.1145/3243734.3243780
   Vall ~ee-Rai R., 2010, CASCON 1 DECADE HIGH, P214, DOI DOI 10.1145/1925805.1925818
   Wood G., 2014, Ethereum project yellow paper, V151, P1
   2019, CRYPTOKITTIES
NR 42
TC 39
Z9 39
U1 0
U2 25
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JAN 27
PY 2021
VL 48
IS 7
BP 2189
EP 2207
DI 10.1109/TSE.2021.3054928
PG 19
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 2Y5YU
UT WOS:000825973000001
OA Green Submitted, Green Accepted
DA 2024-07-18
ER

PT J
AU Niu, XT
   Nie, CH
   Lei, JY
   Leung, H
   Wang, XY
AF Niu, Xintao
   Nie, Changhai
   Lei, Jeff Y.
   Leung, Hareton
   Wang, Xiaoyin
TI Identifying Failure-Causing Schemas in the Presence of Multiple Faults
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Testing; Bars; Fault diagnosis; Computer bugs; Software algorithms; Open
   source software; Software testing; combinatorial testing;
   failure-causing schemas; masking effects
ID COVERING ARRAYS; TEST SUITES
AB Combinatorial testing (CT) has been proven effective in revealing the failures caused by the interaction of factors that affect the behavior of a system. The theory of Minimal Failure-Causing Schema (MFS) has been proposed to isolate the cause of a failure after CT. Most algorithms that aim to identify MFS focus on handling a single fault in the System Under Test (SUT). However, we argue that multiple faults are more common in practice, under which masking effects may be triggered so that some failures cannot be observed. The traditional MFS theory lacks a mechanism to handle such effects; hence, they may incorrectly isolate the MFS. To address this problem, we propose a new MFS model that takes into account multiple faults. We first formally analyze the impact of the multiple faults on existing MFS identifying algorithms, especially in situations where masking effects are triggered by multiple faults. We then develop an approach that can assist traditional algorithms to better handle multiple faults. Empirical studies were conducted using several kinds of open-source software, which showed that multiple faults with masking effects do negatively affect traditional MFS identifying approaches and that our approach can help to alleviate these effects.
C1 [Niu, Xintao; Nie, Changhai] Nanjing Univ, State Key Lab Novel Software Technol, Nanjing 210023, Peoples R China.
   [Lei, Jeff Y.] Univ Texas Arlington, Dept Comp Sci & Engn, Arlington, TX 76019 USA.
   [Leung, Hareton] Hong Kong Polytech Univ, Dept Comp, Kowloon, Hong Kong, Peoples R China.
   [Wang, Xiaoyin] Univ Texas San Antonio, Dept Comp Sci, San Antonio, TX 78249 USA.
C3 Nanjing University; University of Texas System; University of Texas
   Arlington; Hong Kong Polytechnic University; University of Texas System;
   University of Texas at San Antonio (UTSA)
RP Niu, XT (corresponding author), Nanjing Univ, State Key Lab Novel Software Technol, Nanjing 210023, Peoples R China.
EM niuxintao@gmail.com; changhainie@nju.edu.cn; ylei@cse.uta.edu;
   hareton.leung@polyu.edu.hk; Xiaoyin.Wang@utsa.edu
RI Nie, Changhai/IWM-7504-2023; Wang, Xiaoyin/ABA-9508-2020
OI Wang, Xiaoyin/0000-0002-9079-5534
FU National Key Research and Development Plan [2018YFB1003800]; US National
   Science Foundation [CNS-1748109]; US Department of Homeland Security
   [DHS-14-ST-062-001]; US National Institute of Standards and Technologies
   Award [70NANB15H199]
FX This work was supported by the National Key Research and Development
   Plan (No. 2018YFB1003800), US National Science Foundation Award
   CNS-1748109, US Department of Homeland Security (DHS-14-ST-062-001), and
   US National Institute of Standards and Technologies Award
   (70NANB15H199).
CR [Anonymous], [No title captured]
   Bach J., 2004, P 22 PACIFIC NW SOFT, P180
   Bryce RC, 2005, PROC INT CONF SOFTW, P146
   Bryce RC, 2006, INFORM SOFTWARE TECH, V48, P960, DOI 10.1016/j.infsof.2006.03.004
   Calvagna A, 2008, LECT NOTES COMPUT SC, V4966, P66
   Chen BQ, 2010, ASIA PAC SOFWR ENG, P280, DOI 10.1109/APSEC.2010.40
   Chen Y, 2013, ACM SIGPLAN NOTICES, V48, P197, DOI 10.1145/2499370.2462173
   Cohen DM, 1997, IEEE T SOFTWARE ENG, V23, P437, DOI 10.1109/32.605761
   Cohen M.B., 2007, P 2007 INT S SOFTW T, P129
   Cohen MB, 2003, ISSRE 2003: 14TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P394, DOI 10.1109/ISSRE.2003.1251061
   Cohen MB, 2003, PROC INT CONF SOFTW, P38, DOI 10.1109/ICSE.2003.1201186
   Cohen MB, 2008, IEEE T SOFTWARE ENG, V34, P633, DOI 10.1109/TSE.2008.50
   Cohen MB, 2007, TAIC PART 2007 - TESTING: ACADEMIC AND INDUSTRIAL CONFERENCE - PRACTICE AND RESEARCH TECHNIQUES, PROCEEDINGS, P121, DOI 10.1109/TAIC.PART.2007.17
   Colbourn CJ, 2008, J COMB OPTIM, V15, P17, DOI 10.1007/s10878-007-9082-4
   Dickinson W., 2001, Software Engineering Notes, V26, P246, DOI 10.1145/503271.503243
   Dickinson W, 2001, PROC INT CONF SOFTW, P339, DOI 10.1109/ICSE.2001.919107
   DiGiuseppe N., 2012, 2012 IEEE Fifth International Conference on Software Testing, Verification and Validation (ICST 2012), P191, DOI 10.1109/ICST.2012.99
   Dumlu Emine., 2011, P 2011 INT S SOFTWAR, P243
   Fouché S, 2009, ISSTA 2009: INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P177
   Garvin BJ, 2011, EMPIR SOFTW ENG, V16, P61, DOI 10.1007/s10664-010-9135-7
   Ghandehari L. S. G., 2012, 2012 IEEE Fifth International Conference on Software Testing, Verification and Validation (ICST 2012), P370, DOI 10.1109/ICST.2012.117
   Ghandehari LS, 2013, PROC INT SYMP SOFTW, P168, DOI 10.1109/ISSRE.2013.6698916
   Gopinath R, 2017, IEEE INT CONF SOFTW, P47, DOI 10.1109/ICST.2017.12
   Hall M., 2009, ACM SIGKDD Explor. Newsl, V11, P18, DOI DOI 10.1145/1656274.1656278
   Jones J A., 2007, Debugging in parallel, P16
   Lei Y, 2008, SOFTW TEST VERIF REL, V18, P125, DOI 10.1002/stvr.381
   Li J, 2012, INT CONF QUAL SOFTW, P102, DOI 10.1109/QSIC.2012.28
   Martínez C, 2008, LECT NOTES COMPUT SC, V4957, P504, DOI 10.1007/978-3-540-78773-0_44
   Martinez C, 2009, SIAM J DISCRETE MATH, V23, P1776, DOI 10.1137/080730706
   Naish L, 2011, ACM T SOFTW ENG METH, V20, DOI 10.1145/2000791.2000795
   Nie CH, 2013, INT CONF QUAL SOFTW, P284, DOI 10.1109/QSIC.2013.22
   Nie CH, 2011, ACM T SOFTW ENG METH, V20, DOI 10.1145/2000799.2000801
   Nie CH, 2011, ACM COMPUT SURV, V43, DOI 10.1145/1883612.1883618
   Niu X, 2013, IEEE ICST WORKSHOP, P271, DOI 10.1109/ICSTW.2013.38
   Petke Justyna, 2013, P ESEC FSE 2013, DOI [DOI 10.1145/2491411.2491436, 10.1145/2491411.2491436]
   Podgurski A, 2003, PROC INT CONF SOFTW, P465, DOI 10.1109/ICSE.2003.1201224
   Podgurski A, 1999, ACM T SOFTW ENG METH, V8, P263, DOI 10.1145/310663.310667
   Podgurski A., 1993, SIGSOFT Software Engineering Notes, V18, P169, DOI 10.1145/167049.167076
   Rokach L, 2005, IEEE T SYST MAN CY C, V35, P476, DOI 10.1109/TSMCC.2004.843247
   Shakya K., 2012, 2012 IEEE Fifth International Conference on Software Testing, Verification and Validation (ICST 2012), P620, DOI 10.1109/ICST.2012.149
   Shi L, 2005, LECT NOTES COMPUT SC, V3516, P1088
   Song C, 2012, PROC INT CONF SOFTW, P903, DOI 10.1109/ICSE.2012.6227129
   WEISER M, 1984, IEEE T SOFTWARE ENG, V10, P352, DOI 10.1109/TSE.1984.5010248
   Yilmaz C, 2006, IEEE T SOFTWARE ENG, V32, P20, DOI 10.1109/TSE.2006.8
   Yilmaz C, 2014, IEEE T SOFTWARE ENG, V40, P43, DOI 10.1109/TSE.2013.53
   Yilmaz C, 2013, IEEE T SOFTWARE ENG, V39, P684, DOI 10.1109/TSE.2012.65
   Yu L., 2015, P INT C WIR COMM SIG, P1
   Zeller A, 2002, IEEE T SOFTWARE ENG, V28, P183, DOI 10.1109/32.988498
   Zhang Z., 2011, P ACM 20 INT S SOFTW, P331
   Zheng Alice X., 2006, INT C MACH LEARN, P1105, DOI DOI 10.1145/1143844.1143983
   Ziyuan Wang, 2010, Proceedings of the Tenth International Conference on Quality Software (QSIC 2010), P495, DOI 10.1109/QSIC.2010.36
NR 51
TC 9
Z9 9
U1 0
U2 11
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD FEB 1
PY 2020
VL 46
IS 2
BP 141
EP 162
DI 10.1109/TSE.2018.2844259
PG 22
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA KU7YW
UT WOS:000519930000002
OA hybrid
DA 2024-07-18
ER

PT J
AU Song, QB
   Guo, YC
   Shepperd, M
AF Song, Qinbao
   Guo, Yuchen
   Shepperd, Martin
TI A Comprehensive Investigation of the Role of Imbalanced Learning for
   Software Defect Prediction
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Software defect prediction; bug prediction; imbalanced learning;
   imbalance ratio; effect size
ID METRICS; CLASSIFICATION; ALGORITHMS; ENSEMBLES
AB Context: Software defect prediction (SDP) is an important challenge in the field of software engineering, hence much research work has been conducted, most notably through the use of machine learning algorithms. However, class-imbalance typified by few defective components and many non-defective ones is a common occurrence causing difficulties for these methods. Imbalanced learning aims to deal with this problem and has recently been deployed by some researchers, unfortunately with inconsistent results. Objective: We conduct a comprehensive experiment to explore (a) the basic characteristics of this problem; (b) the effect of imbalanced learning and its interactions with (i) data imbalance, (ii) type of classifier, (iii) input metrics and (iv) imbalanced learning method. Method: We systematically evaluate 27 data sets, 7 classifiers, 7 types of input metrics and 17 imbalanced learning methods (including doing nothing) using an experimental design that enables exploration of interactions between these factors and individual imbalanced learning algorithms. This yields 27 x7; 7 x7; 7 x7; 17 = 22491 results. The Matthews correlation coefficient (MCC) is used as an unbiased performance measure (unlike the more widely used F1 and AUC measures). Results: (a) we found a large majority (87 percent) of 106 public domain data sets exhibit moderate or low level of imbalance (imbalance ratio 003C;10; median = 3.94); (b) anything other than low levels of imbalance clearly harm the performance of traditional learning for SDP; (c) imbalanced learning is more effective on the data sets with moderate or higher imbalance, however negative results are always possible; (d) type of classifier has most impact on the improvement in classification performance followed by the imbalanced learning method itself. Type of input metrics is not influential. (e) only ${\sim} 52\%$similar to 52% of the combinations of Imbalanced Learner and Classifier have a significant positive effect. Conclusion: This paper offers two practical guidelines. First, imbalanced learning should only be considered for moderate or highly imbalanced SDP data sets. Second, the appropriate combination of imbalanced method and classifier needs to be carefully chosen to ameliorate the imbalanced learning problem for SDP. In contrast, the indiscriminate application of imbalanced learning can be harmful.
C1 [Song, Qinbao; Guo, Yuchen] Xi An Jiao Tong Univ, Dept Comp Sci & Technol, Xian 710049, Shaanxi, Peoples R China.
   [Song, Qinbao] Wuhan Univ, State Key Lab Software Engn, Wuhan 430072, Hubei, Peoples R China.
   [Shepperd, Martin] Brunel Univ, Dept Comp Sci, Uxbridge UB8 3PH, Middx, England.
C3 Xi'an Jiaotong University; Wuhan University; Brunel University
RP Shepperd, M (corresponding author), Brunel Univ, Dept Comp Sci, Uxbridge UB8 3PH, Middx, England.
EM qbsong@mail.xjtu.edu.cn; wispcat@stu.xjtu.edu.cn;
   martin.shepperd@brunel.ac.uk
RI Shepperd, Martin/F-9683-2013
OI Shepperd, Martin/0000-0003-1874-6145
FU National Natural Science Foundation of China [61373046, 61210004];
   Brunel University London
FX This article is dedicated to the memory of Prof. Qinbao Song
   (1966-2016). We thank the reviewers and associate editor for their many
   constructive suggestions. This work is supported by the National Natural
   Science Foundation of China under grants 61373046 and 61210004 and by
   Brunel University London.
CR AHA DW, 1991, MACH LEARN, V6, P37, DOI 10.1023/A:1022689900470
   [Anonymous], 2009, PROC ACM INT C PREDI
   [Anonymous], 2002, BRIT ED RES ASS ANN
   [Anonymous], 2022, Introduction to robust estimation and hypothesis testing
   [Anonymous], 2006, P ANN M SO ASS I RES
   [Anonymous], IEEE T SERV COMPUT
   [Anonymous], 2012, IEEE T SYST MAN CY C, DOI DOI 10.1109/TSMCC.2011.2161285
   [Anonymous], PATTERN RECOGNITION
   [Anonymous], 2007, PROMISE 07, DOI DOI 10.1109/PROMISE.2007.10
   [Anonymous], 2007, Real Data Analysis
   [Anonymous], 2008, Proceedings of the 4th International Workshop on Predictor Models in Software Engineering, PROMISE '08
   Baldi P, 2000, BIOINFORMATICS, V16, P412, DOI 10.1093/bioinformatics/16.5.412
   Barandela R, 2003, PATTERN ANAL APPL, V6, P245, DOI 10.1007/s10044-003-0192-z
   Batista G. E., 2004, ACM SIGKDD EXPL NEWS, V6, P20, DOI DOI 10.1145/1007730.1007735
   Batuwita R., 2013, CLASS IMBALANCE LEAR
   Benjamini Y, 2001, ANN STAT, V29, P1165
   Bhattacharya P, 2012, PROC INT CONF SOFTW, P419, DOI 10.1109/ICSE.2012.6227173
   Branco P, 2016, ACM COMPUT SURV, V49, DOI 10.1145/2907070
   Breiman L., 2001, Mach. Learn., V45, P5
   Burt RS., 2018, STRUCTURAL HOLES SOC, P659
   Cai Q, 2014, NEUROCOMPUTING, V133, P258, DOI 10.1016/j.neucom.2013.11.010
   Catal C, 2009, INFORM SCIENCES, V179, P1040, DOI 10.1016/j.ins.2008.12.001
   Chawla NV, 2002, J ARTIF INTELL RES, V16, P321, DOI 10.1613/jair.953
   Chawla NV, 2003, LECT NOTES ARTIF INT, V2838, P107, DOI 10.1007/978-3-540-39804-2_12
   Cheung S.-C., 2011, P 19 ACM SIGSOFT S 1, P15
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   CLIFF N, 1993, PSYCHOL BULL, V114, P494, DOI 10.1037/0033-2909.114.3.494
   Cohen W. W., 1995, Machine Learning. Proceedings of the Twelfth International Conference on Machine Learning, P115
   Couto C, 2012, EUR CON SFTWR MTNCE, P223, DOI 10.1109/CSMR.2012.31
   D'Ambros M, 2012, EMPIR SOFTW ENG, V17, P531, DOI 10.1007/s10664-011-9173-9
   Di Martino Sergio, 2011, Product-Focused Software Process Improvement. Proceedings 12th International Conference, PROFES 2011, P247, DOI 10.1007/978-3-642-21843-9_20
   Domingos Pedro, 1999, P 5 ACM SIGKDD INT C, P155, DOI DOI 10.1145/312129.312220
   Ellis PD, 2010, ESSENTIAL GUIDE TO EFFECT SIZES: STATISTICAL POWER, META-ANALYSIS AND THE INTERPRETATION OF RESEARCH RESULTS, P1
   Flach PA, 2015, ADV NEUR IN, V28
   Freund Y, 1997, J COMPUT SYST SCI, V55, P119, DOI 10.1006/jcss.1997.1504
   Ghotra B, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P789, DOI 10.1109/ICSE.2015.91
   Giger E, 2012, INT SYMP EMP SOFTWAR, P171, DOI 10.1145/2372251.2372285
   Hall M., 2009, ACM SIGKDD Explor. Newsl, V11, P18, DOI DOI 10.1145/1656274.1656278
   Hall T, 2012, IEEE T SOFTWARE ENG, V38, P1276, DOI 10.1109/TSE.2011.103
   Hand DJ, 2009, MACH LEARN, V77, P103, DOI 10.1007/s10994-009-5119-5
   He HB, 2009, IEEE T KNOWL DATA EN, V21, P1263, DOI 10.1109/TKDE.2008.239
   He P, 2015, INFORM SOFTWARE TECH, V59, P170, DOI 10.1016/j.infsof.2014.11.006
   He ZM, 2012, AUTOMAT SOFTW ENG, V19, P167, DOI 10.1007/s10515-011-0090-3
   Herzig K, 2013, PROC INT SYMP SOFTW, P118, DOI 10.1109/ISSRE.2013.6698911
   Holte R. C., 1989, IJCAI-89 Proceedings of the Eleventh International Joint Conference on Artificial Intelligence, P813
   Kamei Yasutaka, 2007, 2007 First International Symposium on Empirical Software Engineering and Measurement, P196
   Kamei Y, 2013, IEEE T SOFTWARE ENG, V39, P757, DOI 10.1109/TSE.2012.70
   Kaur A, 2008, 2008 INTERNATIONAL CONFERENCE ON ADVANCED COMPUTER THEORY AND ENGINEERING, P37, DOI 10.1109/ICACTE.2008.204
   Khoshgoftaar TM, 2002, 7TH IEEE INTERNATIONAL SYMPOSIUM ON HIGH ASSURANCE SYSTEMS ENGINEERING, PROCEEDINGS, P51, DOI 10.1109/HASE.2002.1173102
   Kittler J, 1998, IEEE T PATTERN ANAL, V20, P226, DOI 10.1109/34.667881
   Kolcz A., 2004, ACM SIGKDD EXPLORATI, V6, P1, DOI [10.2973/odp.proc.ir.207.2004, DOI 10.1145/1007730.1007733]
   Kukar M, 1998, ECAI 1998: 13TH EUROPEAN CONFERENCE ON ARTIFICIAL INTELLIGENCE, PROCEEDINGS, P445
   Kuncheva LI, 2014, KNOWL INF SYST, V38, P259, DOI 10.1007/s10115-012-0586-6
   Long J.D., 2003, Handbook of psychology
   López V, 2013, INFORM SCIENCES, V250, P113, DOI 10.1016/j.ins.2013.07.007
   Malhotra R, 2015, APPL SOFT COMPUT, V27, P504, DOI 10.1016/j.asoc.2014.11.023
   Menzies T., 2015, The promise repository of empirical software engineering data
   Menzies T, 2007, IEEE T SOFTWARE ENG, V33, P637, DOI 10.1109/TSE.2007.70721
   Moser R, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P181, DOI 10.1145/1368088.1368114
   Okutan A, 2014, EMPIR SOFTW ENG, V19, P154, DOI 10.1007/s10664-012-9218-8
   Oza NC, 2008, INFORM FUSION, V9, P4, DOI 10.1016/j.inffus.2007.07.002
   Pelayo L, 2007, NAFIPS 2007 - 2007 ANNUAL MEETING OF THE NORTH AMERICAN FUZZY INFORMATION PROCESSING SOCIETY, P69, DOI 10.1109/NAFIPS.2007.383813
   Powers DMW, 2020, J MACH LEARN TECHNOL, P37, DOI DOI 10.9735/2229-3981
   Premraj R, 2011, INT SYMP EMP SOFTWAR, P215, DOI 10.1109/ESEM.2011.30
   Provost F., 1998, Machine Learning. Proceedings of the Fifteenth International Conference (ICML'98), P445
   Radjenovic D, 2013, INFORM SOFTWARE TECH, V55, P1397, DOI 10.1016/j.infsof.2013.02.009
   Rahman F, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P432, DOI 10.1109/ICSE.2013.6606589
   Ramentol E, 2012, KNOWL INF SYST, V33, P245, DOI 10.1007/s10115-011-0465-6
   Sahin Y, 2013, EXPERT SYST APPL, V40, P5916, DOI 10.1016/j.eswa.2013.05.021
   Seiffert C, 2014, INFORM SCIENCES, V259, P571, DOI 10.1016/j.ins.2010.12.016
   Seiffert C, 2010, IEEE T SYST MAN CY A, V40, P185, DOI 10.1109/TSMCA.2009.2029559
   Seiffert C, 2009, IEEE T SYST MAN CY A, V39, P1283, DOI 10.1109/TSMCA.2009.2027131
   Seliya Naeem, 2010, Proceedings 2010 IEEE 12th International Symposium on High-Assurance Systems Engineering (HASE), P26, DOI 10.1109/HASE.2010.29
   Shepperd M, 2014, IEEE T SOFTWARE ENG, V40, P603, DOI 10.1109/TSE.2014.2322358
   Shepperd M, 2013, IEEE T SOFTWARE ENG, V39, P1208, DOI 10.1109/TSE.2013.11
   Shin Y, 2011, IEEE T SOFTWARE ENG, V37, P772, DOI 10.1109/TSE.2010.81
   Shivaji S, 2013, IEEE T SOFTWARE ENG, V39, P552, DOI 10.1109/TSE.2012.43
   Sun YM, 2009, INT J PATTERN RECOGN, V23, P687, DOI 10.1142/S0218001409007326
   Sun ZB, 2012, IEEE T SYST MAN CY C, V42, P1806, DOI 10.1109/TSMCC.2012.2226152
   Ting KM, 2002, IEEE T KNOWL DATA EN, V14, P659, DOI 10.1109/TKDE.2002.1000348
   Wang S, 2013, IEEE T RELIAB, V62, P434, DOI 10.1109/TR.2013.2259203
   Wang S, 2009, 2009 IEEE SYMPOSIUM ON COMPUTATIONAL INTELLIGENCE AND DATA MINING, P324, DOI 10.1109/CIDM.2009.4938667
   Wang S, 2016, PROC INT CONF SOFTW, P297, DOI 10.1145/2884781.2884804
   Warrens MJ, 2008, PSYCHOMETRIKA, V73, P487, DOI 10.1007/s11336-008-9059-y
   Weiss GM, 2013, IMBALANCED LEARNING: FOUNDATIONS, ALGORITHMS, AND APPLICATIONS, P13
   Wu XD, 2008, KNOWL INF SYST, V14, P1, DOI 10.1007/s10115-007-0114-2
   Xu J, 2006, LECT NOTES COMPUT SC, V4212, P833
   Xuan JF, 2015, IEEE T KNOWL DATA EN, V27, P264, DOI 10.1109/TKDE.2014.2324590
   Zhang F, 2016, PROC INT CONF SOFTW, P309, DOI 10.1145/2884781.2884839
   Zhenxing Qin, 2013, Knowledge Science, Engineering and Management. 6th International Conference, KSEM 2013. Proceedings. LNCS 8041, P112, DOI 10.1007/978-3-642-39787-5_10
   Zimmermann T, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P531, DOI 10.1145/1368088.1368161
NR 91
TC 145
Z9 146
U1 2
U2 37
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD DEC 1
PY 2019
VL 45
IS 12
BP 1253
EP 1269
DI 10.1109/TSE.2018.2836442
PG 17
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA JW0NQ
UT WOS:000502756700005
OA Green Published
DA 2024-07-18
ER

PT J
AU Bao, LF
   Xing, ZC
   Xia, X
   Lo, D
AF Bao, Lingfeng
   Xing, Zhenchang
   Xia, Xin
   Lo, David
TI VT-Revolution: Interactive Programming Video Tutorial Authoring and
   Watching System
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Program comprehension; human-computer interaction; workflow
AB Procedural knowledge describes actions and manipulations that are carried out to complete programming tasks. An effective way to document procedural knowledge is programming video tutorials. Unlike text-based software artifacts and tutorials that can be effectively searched and linked using information retrieval techniques, the streaming nature of programming videos limits the ways to explore the captured workflows and interact with files, code and program output in the videos. Existing solutions to adding interactive workflow and elements to programming videos have a dilemma between the level of desired interaction and the efforts required for authoring tutorials. In this work, we tackle this dilemma by designing and building a programming video tutorial authoring system that leverages operating system level instrumentation to log workflow history while tutorial authors are creating programming videos, and the corresponding tutorial watching system that enhances the learning experience of video tutorials by providing programming-specific workflow history and timeline-based browsing interactions. Our tutorial authoring system does not incur any additional burden on tutorial authors to make programming videos interactive. Given a programming video accompanied by synchronously-logged workflow history, our tutorial watching system allows tutorial watchers to freely explore the captured workflows and interact with files, code and program output in the tutorial. We conduct a user study of 135 developers to evaluate the design and effectiveness of our system in helping developers learn programming knowledge in video tutorials.
C1 [Bao, Lingfeng] Zhejiang Univ, Coll Comp Sci & Technol, Hangzhou 310027, Zhejiang, Peoples R China.
   [Xing, Zhenchang] Australian Natl Univ, Res Sch Comp Sci, Canberra, ACT 0200, Australia.
   [Xia, Xin] Monash Univ, Fac Informat Technol, Clayton, Vic 3800, Australia.
   [Xia, Xin] Zhejiang Univ, Coll Comp Sci & Technol, Hangzhou 310027, Zhejiang, Peoples R China.
   [Lo, David] Singapore Management Univ, Sch Informat Syst, Singapore 188065, Singapore.
C3 Zhejiang University; Australian National University; Monash University;
   Zhejiang University; Singapore Management University
RP Xia, X (corresponding author), Monash Univ, Fac Informat Technol, Clayton, Vic 3800, Australia.; Xia, X (corresponding author), Zhejiang Univ, Coll Comp Sci & Technol, Hangzhou 310027, Zhejiang, Peoples R China.
EM lingfengbao@zju.edu.cn; zhenchang.Xing@anu.edu.au; xin.xia@monash.edu;
   davidlo@smu.edu.sg
RI bao, lingfeng/AEG-8299-2022; Xia, Xin/AAD-6217-2022; Lo,
   David/A-2493-2012
OI Xia, Xin/0000-0002-6302-3256; Lo, David/0000-0002-4367-7201
FU NSFC Program [61602403, 61572426]
FX This work was partially supported by NSFC Program (No. 61602403 and
   61572426)
CR ADAIR JG, 1984, J APPL PSYCHOL, V69, P334, DOI 10.1037/0021-9010.69.2.334
   [Anonymous], 1964, Some rapid approximate statistical procedures
   Augustine V, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P229, DOI 10.1109/ICSE.2015.151
   Banovic N, 2012, UIST'12: PROCEEDINGS OF THE 25TH ANNUAL ACM SYMPOSIUM ON USER INTERFACE SOFTWARE AND TECHNOLOGY, P83
   Bao LF, 2015, IEEE INT CONF AUTOM, P864, DOI 10.1109/ASE.2015.90
   Bao LF, 2018, EMPIR SOFTW ENG, V23, P1313, DOI 10.1007/s10664-017-9547-8
   Bao LF, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P399, DOI 10.1109/SANER.2015.7081850
   Bao LF, 2015, IEEE INT CONF AUTOM, P277, DOI 10.1109/ASE.2015.43
   Beller M, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P559, DOI 10.1109/ICSE.2015.193
   Chang T.-H., 2011, P 24 ANN ACM S USER, P245
   Cliff N., 2014, ORDINAL METHODS BEHA
   Dai BX, 2016, ELECTRON J QUAL THEO, P1, DOI 10.14232/ejqtde.2016.1.4
   Dixon M, 2010, CHI2010: PROCEEDINGS OF THE 28TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, VOLS 1-4, P1525
   Dragunov A., 2005, P 10 INT C INTELLIGE, P75, DOI DOI 10.1145/1040830.1040855
   Duffy P, 2008, ELECTRON J E-LEARN, V6, P119
   Duncan I, 2013, NURS EDUC TODAY, V33, P1576, DOI 10.1016/j.nedt.2012.12.013
   Fernquist Jennifer, 2011, P 24 ANN ACM S USER, P373, DOI 10.1145/2047196.2047245
   Fluri B, 2007, IEEE T SOFTWARE ENG, V33, P725, DOI 10.1109/TSE.2007.70731
   Gross T, 2010, PROCEEDINGS OF THE 24TH PACIFIC ASIA CONFERENCE ON LANGUAGE, INFORMATION AND COMPUTATION, P143, DOI 10.1145/1866029.1866054
   Harpstead Erik., 2013, Proceedings of the SIGCHI Conference on Human Factors in Computing Systems, CHI '13, P79
   Harrison S. M., 1995, Human Factors in Computing Systems. CHI'95 Conference Proceedings, P82
   Kersten M, 2005, P 2005 INT C ASP OR, P159, DOI DOI 10.1145/1052898.1052912
   Kim Juho., 2013, CHI'13 Extended Abstracts on Human Factors in Computing Systems on - CHI EA'13, P2707, DOI [DOI 10.1145/2468356.2479497, 10.1145/2468356, DOI 10.1145/2468356]
   Kim JH, 2008, CHI 2008: 26TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS VOLS 1 AND 2, CONFERENCE PROCEEDINGS, P443
   Lankshear C., 2010, DIY Media: A contextual background and some contemporary themes. DIY media: Creating, P1
   Li HW, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P390, DOI 10.1109/SANER.2015.7081849
   LubomirBourdev ShaiAvidan, 2011, P 24 ANN ACM S USER, P135, DOI DOI 10.1145/2047196.2047213.URL
   MacLeod L, 2015, INT C PROGRAM COMPRE, P104, DOI 10.1109/ICPC.2015.19
   Matejke J, 2011, 29TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, P2751
   Mohorovicic S., 2012, 2012 35th International Convention on Information and Communication Technology, Electronics and Microelectronics, P1293
   Mullamphy D. F., 2010, ANZIAM J, V51, pC446, DOI https://doi.org/10.21914/anziamj.v51i0.2657
   Nakamura T, 2008, UIST 2008: PROCEEDINGS OF THE 21ST ANNUAL ACM SYMPOSIUM ON USER INTERFACE SOFTWARE AND TECHNOLOGY, P23, DOI 10.1145/1449715.1449721
   Oud J, 2009, REF SERV REV, V37, P164, DOI 10.1108/00907320910957206
   PALMITER S, 1991, INT J MAN MACH STUD, V34, P687, DOI 10.1016/0020-7373(91)90019-4
   Plaisant C, 2005, 2005 IEEE SYMPOSIUM ON VISUAL LANGUAGE AND HUMAN-CENTRIC COMPUTING, PROCEEDINGS, P171, DOI 10.1109/VLHCC.2005.57
   Ponzanelli L, 2016, PROC INT CONF SOFTW, P261, DOI 10.1145/2884781.2884824
   Safer Izzet, 2007, P 2007 C CTR ADV STU, P229, DOI 10.1145/1321211.1321235
   Sawadsky N, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P812, DOI 10.1109/ICSE.2013.6606627
   Spencer D., 2009, CARD SORTING DESIGNI
   Subramanian S, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P643, DOI 10.1145/2568225.2568313
   Sugar W, 2010, INT REV RES OPEN DIS, V11, P1
   Xing Z., 2005, 20 IEEEACM INT C AUT, P54, DOI DOI 10.1145/1101908.1101919
   Yeh T, 2009, UIST 2009: PROCEEDINGS OF THE 22ND ANNUAL ACM SYMPOSIUM ON USER INTERFACE SOFTWARE AND TECHNOLOGY, P183
NR 43
TC 17
Z9 17
U1 0
U2 6
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD AUG
PY 2019
VL 45
IS 8
BP 823
EP 838
DI 10.1109/TSE.2018.2802916
PG 16
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA IT1QZ
UT WOS:000482622600005
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Palomba, F
   Zanoni, M
   Fontana, FA
   De Lucia, A
   Oliveto, R
AF Palomba, Fabio
   Zanoni, Marco
   Fontana, Francesca Arcelli
   De Lucia, Andrea
   Oliveto, Rocco
TI Toward a Smell-Aware Bug Prediction Model
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Code smells; bug prediction; empirical study; mining software
   repositories
ID CODE-SMELLS; RESEARCHER BIAS; SOFTWARE; METRICS; IMPACT; BAD;
   IDENTIFICATION; VALIDATION; COMPLEXITY; QUALITY
AB Code smells are symptoms of poor design and implementation choices. Previous studies empirically assessed the impact of smells on code quality and clearly indicate their negative impact on maintainability, including a higher bug-proneness of components affected by code smells. In this paper, we capture previous findings on bug-proneness to build a specialized bug prediction model for smelly classes. Specifically, we evaluate the contribution of a measure of the severity of code smells (i.e., code smell intensity) by adding it to existing bug prediction models based on both product and process metrics, and comparing the results of the new model against the baseline models. Results indicate that the accuracy of a bug prediction model increases by adding the code smell intensity as predictor. We also compare the results achieved by the proposed model with the ones of an alternative technique which considers metrics about the history of code smells in files, finding that our model works generally better. However, we observed interesting complementarities between the set of buggy and smelly classes correctly classified by the two models. By evaluating the actual information gain provided by the intensity index with respect to the other metrics in the model, we found that the intensity index is a relevant feature for both product and process metrics-based models. At the same time, the metric counting the average number of code smells in previous versions of a class considered by the alternative model is also able to reduce the entropy of the model. On the basis of this result, we devise and evaluate a smell-aware combined bug prediction model that included product, process, and smell-related features. We demonstrate how such model classifies bug-prone code components with an F-Measure at least 13 percent higher than the existing state-of-the-art models.
C1 [Palomba, Fabio] Delft Univ Technol, NL-2628 CD Delft, Netherlands.
   [Zanoni, Marco; Fontana, Francesca Arcelli] Univ Milano Bicocca, I-20126 Milan, MI, Italy.
   [De Lucia, Andrea] Univ Salerno, I-84084 Fisciano, SA, Italy.
   [Oliveto, Rocco] Univ Molise, I-86100 Campobasso, Italy.
C3 Delft University of Technology; University of Milano-Bicocca; University
   of Salerno; University of Molise
RP Palomba, F (corresponding author), Delft Univ Technol, NL-2628 CD Delft, Netherlands.
EM f.palomba@tudelft.nl; marco.zanoni@disco.unimib.it;
   arcelli@disco.unimib.it; adelucia@unisa.it; rocco.oliveto@unimol.it
RI Fontana, Francesca Arcelli/K-4785-2016; De Lucia, Andrea/AAG-6781-2020
OI Arcelli Fontana, Francesca/0000-0002-1195-530X; Palomba,
   Fabio/0000-0001-9337-5116; De Lucia, Andrea/0000-0002-4238-1425
CR Abbes M, 2011, EUR CON SFTWR MTNCE, P181, DOI 10.1109/CSMR.2011.24
   Aniche M, 2016, IEEE INT WORK C SO, P41, DOI 10.1109/SCAM.2016.19
   [Anonymous], 2010, P 6 INT C PRED MOD S, DOI DOI 10.1145/1868328.1868336
   [Anonymous], 1995, 11 C UNC ART INT SAN, DOI DOI 10.1109/TGRS.2004.834800
   [Anonymous], 2016, 2016 IEEE 24th International Conference on Program Comprehension (ICPC)
   [Anonymous], 2007, PROMISE 07, DOI DOI 10.1109/PROMISE.2007.10
   Antoniol G, 2008, P 2008 C CTR ADV STU, P304
   Arcoverde R., 2011, WORKSH REF TOOLS, P33
   Arcoverde R, 2013, 2013 27TH BRAZILIAN SYMPOSIUM ON SOFTWARE ENGINEERING (SBES 2013), P69, DOI 10.1109/SBES.2013.14
   Baeza-Yates R., 1999, Modern information retrieval
   Basili VR, 1996, IEEE T SOFTWARE ENG, V22, P751, DOI 10.1109/32.544352
   Bavota G, 2014, IEEE T SOFTWARE ENG, V40, P671, DOI 10.1109/TSE.2013.60
   Bell RM, 2013, EMPIR SOFTW ENG, V18, P478, DOI 10.1007/s10664-011-9178-4
   Bell RobertM., 2011, Proceedings of the 7th International Conference on Predictive Models in Software Engineering. Promise'11, DOI DOI 10.1145/2020390.2020392
   Bergstra J, 2012, J MACH LEARN RES, V13, P281
   Boussaa Mohamed, 2013, Search Based Software Engineering. 5th International Symposium, SSBSE 2013. Proceedings: LNCS 8084, P50, DOI 10.1007/978-3-642-39742-4_6
   Brier G. W., 1950, MON WEATHER REV, V78, P1, DOI 10.1175/1520-0493(1950)078andlt;0001:VOFEITandgt;2.0.CO;2
   Chatzigeorgiou A, 2010, QUATIC 2010: SEVENTH INTERNATIONAL CONFERENCE ON THE QUALITY OF INFORMATION AND COMMUNICATIONS TECHNOLOGY, P106, DOI 10.1109/QUATIC.2010.16
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   Cohen J., 1988, STAT POWER ANAL BEHA
   Cunningham W., 1993, OOPS MESSENGER, V4, P29, DOI DOI 10.1145/157710.157715
   D'Ambros M, 2012, EMPIR SOFTW ENG, V17, P531, DOI 10.1007/s10664-011-9173-9
   da Costa DA, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P374, DOI [10.1109/MSR.2016.045, 10.1145/2901739.2901764]
   Demsar J, 2006, J MACH LEARN RES, V7, P1
   Devijver P. A., 1982, PATTERN RECOGNITION, V265
   Di Nucci D, 2018, IEEE T SOFTWARE ENG, V44, P5, DOI 10.1109/TSE.2017.2659747
   Di Nucci D, 2015, PROC IEEE INT CONF S, P241, DOI 10.1109/ICSM.2015.7332470
   El Emam K, 2001, J SYST SOFTWARE, V56, P63, DOI 10.1016/S0164-1212(00)00086-8
   Engler D., 2001, Operating Systems Review, V35, P57, DOI 10.1145/502059.502041
   Fernandes E, 2016, PROCEEDINGS OF THE 20TH INTERNATIONAL CONFERENCE ON EVALUATION AND ASSESSMENT IN SOFTWARE ENGINEERING 2016 (EASE '16), DOI 10.1145/2915970.2915984
   Fontana FA, 2016, EMPIR SOFTW ENG, V21, P1143, DOI 10.1007/s10664-015-9378-4
   Fontana FA, 2017, KNOWL-BASED SYST, V128, P43, DOI 10.1016/j.knosys.2017.04.014
   Fontana FA, 2015, 2015 IEEE/ACM 37th IEEE International Conference on Software Engineering, Vol 2, P803, DOI 10.1109/ICSE.2015.256
   Fontana FA, 2015, INT WORKS EMERG TREN, P44, DOI 10.1109/WETSoM.2015.14
   Fontana FA, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P609, DOI 10.1109/SANER.2016.84
   Fontana FA, 2015, 2015 IEEE 7TH INTERNATIONAL WORKSHOP ON MANAGING TECHNICAL DEBT (MTD) PROCEEDINGS, P16, DOI 10.1109/MTD.2015.7332620
   Fontana FA, 2013, PROC IEEE INT CONF S, P396, DOI 10.1109/ICSM.2013.56
   Fowler M., 1999, Refactoring: Improving the Design of Existing Code
   Freund Y, 1999, MACHINE LEARNING, PROCEEDINGS, P124
   Gatrell M, 2015, SCI COMPUT PROGRAM, V102, P44, DOI 10.1016/j.scico.2014.12.002
   Ghotra B, 2017, IEEE WORK CONF MIN S, P146, DOI 10.1109/MSR.2017.18
   Ghotra B, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P789, DOI 10.1109/ICSE.2015.91
   Graves TL, 2000, IEEE T SOFTWARE ENG, V26, P653, DOI 10.1109/32.859533
   Grissom R. J., 2005, EFFECT SIZES RES BRO
   Gyimóthy T, 2005, IEEE T SOFTWARE ENG, V31, P897, DOI 10.1109/TSE.2005.112
   Hall M., 2009, ACM SIGKDD Explor. Newsl, V11, P18, DOI DOI 10.1145/1656274.1656278
   Hall T, 2014, ACM T SOFTW ENG METH, V23, DOI 10.1145/2629648
   Hall T, 2012, IEEE T SOFTWARE ENG, V38, P1276, DOI 10.1109/TSE.2011.103
   Harrison W., 1988, Journal of Management Information Systems, V4, P93
   HARRISON W, 1992, IEEE T SOFTWARE ENG, V18, P1025, DOI 10.1109/32.177371
   Hassan AE, 2003, 10TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P123, DOI 10.1109/WCRE.2003.1287243
   Hassan AE, 2009, PROC INT CONF SOFTW, P78, DOI 10.1109/ICSE.2009.5070510
   Jiarpakdee J, 2016, IEEE INT SYMP SOFTW, P51, DOI 10.1109/ISSREW.2016.30
   Jureczko M, 2010, P 6 INT C PREDICTIVE, DOI DOI 10.1145/1868328.1868342
   Kabinna S, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P326, DOI 10.1109/SANER.2016.29
   Kessentini M., 2010, Proceedings of the IEEE/ACM international conference on Automated software engineering, P113
   Kessentini W, 2014, IEEE T SOFTWARE ENG, V40, P841, DOI 10.1109/TSE.2014.2331057
   Khomh F, 2012, EMPIR SOFTW ENG, V17, P243, DOI 10.1007/s10664-011-9171-y
   Khomh F, 2009, WORK CONF REVERSE EN, P75, DOI 10.1109/WCRE.2009.28
   Khomh F, 2009, INT CONF QUAL SOFTW, P305, DOI 10.1109/QSIC.2009.47
   Khoshgoftaar TM, 1996, SEVENTH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P364, DOI 10.1109/ISSRE.1996.558896
   Kim S, 2008, IEEE T SOFTWARE ENG, V34, P181, DOI 10.1109/TSE.2007.70773
   Kohavi R, 1997, ARTIF INTELL, V97, P273, DOI 10.1016/S0004-3702(97)00043-X
   Kohavi R, 1995, LECT NOTES ARTIF INT, V912, P174
   Lanza Michele, 2006, Objectoriented metrics in practice: using software metrics to characterize, evaluate, and improve the design of object-oriented systems
   LECESSIE S, 1992, APPL STAT-J ROY ST C, V41, P191
   Lehman M.M., 1985, SOFTWARE EVOLUTION P
   Li HL, 2017, EDUC ASSESS, V22, P1, DOI 10.1080/10627197.2016.1271702
   Li W, 2007, J SYST SOFTWARE, V80, P1120, DOI 10.1016/j.jss.2006.10.018
   Lozano Angelo., 2007, Ninth International Workshop on Principles of software evolution, P31
   Lucia A. D., 2017, SMELL AWARE BUG PRED
   Marinescu R, 2004, PROC IEEE INT CONF S, P350, DOI 10.1109/ICSM.2004.1357820
   Marinescu R, 2012, IBM J RES DEV, V56, DOI 10.1147/JRD.2012.2204512
   McCabe T. J., 1976, IEEE Transactions on Software Engineering, VSE-2, P308, DOI 10.1109/TSE.1976.233837
   McIntosh S, 2016, EMPIR SOFTW ENG, V21, P2146, DOI 10.1007/s10664-015-9381-9
   Menzies T., 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P343, DOI 10.1109/ASE.2011.6100072
   Menzies T., 2012, The PROMISE Repository of empirical software engineering data
   Moha N, 2010, IEEE T SOFTWARE ENG, V36, P20, DOI 10.1109/TSE.2009.50
   Morales R, 2017, J SYST SOFTWARE, V128, P236, DOI 10.1016/j.jss.2016.05.042
   Moser R, 2008, ESEM'08: PROCEEDINGS OF THE 2008 ACM-IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, P309
   Moser R, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P181, DOI 10.1145/1368088.1368114
   Munro MJ, 2005, 2005 11th International Symposium on Software Metrics (METRICS), P124
   Nagappan N, 2005, PROC INT CONF SOFTW, P580, DOI 10.1145/1062455.1062558
   Nagappan N., 2006, 28th International Conference on Software Engineering Proceedings, P452, DOI 10.1145/1134285.1134349
   Nikora AP, 2003, NINTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM, PROCEEDINGS, P338, DOI 10.1109/METRIC.2003.1232479
   O'Brien RM, 2007, QUAL QUANT, V41, P673, DOI 10.1007/s11135-006-9018-6
   Ohlsson N, 1996, IEEE T SOFTWARE ENG, V22, P886, DOI 10.1109/32.553637
   Oliveto R, 2010, EUR CON SFTWR MTNCE, P248, DOI 10.1109/CSMR.2010.47
   Ostrand T. J., 2010, P 6 INT C PRED MOD S, P19, DOI [DOI 10.1145/1868328, 10.1145/1868328]
   Palomba Fabio, 2016, 2016 IEEE International Conference on Software Maintenance and Evolution (ICSME), P244, DOI 10.1109/ICSME.2016.27
   Palomba F, 2018, IEEE T SOFTWARE ENG, V44, P977, DOI 10.1109/TSE.2017.2752171
   Palomba F, 2018, EMPIR SOFTW ENG, V23, P1188, DOI 10.1007/s10664-017-9535-z
   Palomba F, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P482, DOI 10.1109/MSR.2015.69
   Palomba F, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P769, DOI 10.1109/ICSE.2015.244
   Palomba F, 2015, IEEE T SOFTWARE ENG, V41, P462, DOI 10.1109/TSE.2014.2372760
   Palomba F, 2014, PROC IEEE INT CONF S, P101, DOI 10.1109/ICSME.2014.32
   Palomba F, 2014, ADV COMPUT, V95, P201, DOI 10.1016/B978-0-12-800160-8.00004-8
   Palomba F, 2013, IEEE INT CONF AUTOM, P268, DOI 10.1109/ASE.2013.6693086
   PARNAS DL, 1994, PROC INT CONF SOFTW, P279, DOI 10.1109/ICSE.1994.296790
   Peng CYJ, 2002, J EDUC RES, V96, P3, DOI 10.1080/00220670209598786
   Peters R, 2012, EUR CON SFTWR MTNCE, P411, DOI 10.1109/CSMR.2012.79
   Quinlan J. R., 1986, Machine Learning, V1, P81, DOI 10.1007/BF00116251
   Rahman F, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P432, DOI 10.1109/ICSE.2013.6606589
   Rajbahadur GK, 2017, IEEE WORK CONF MIN S, P135, DOI 10.1109/MSR.2017.4
   Ratiu D, 2004, CSMR 2004: EIGHTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P223
   Rosenblatt F., 1961, PRINCIPLES NEURODYNA
   Rufibach K, 2010, J CLIN EPIDEMIOL, V63, P938, DOI 10.1016/j.jclinepi.2009.11.009
   Sahin D, 2014, ACM T SOFTW ENG METH, V24, DOI 10.1145/2675067
   SCOTT AJ, 1974, BIOMETRICS, V30, P507, DOI 10.2307/2529204
   Shepperd M, 2014, IEEE T SOFTWARE ENG, V40, P603, DOI 10.1109/TSE.2014.2322358
   Shepperd M, 2013, IEEE T SOFTWARE ENG, V39, P1208, DOI 10.1109/TSE.2013.11
   Sjoberg DIK, 2013, IEEE T SOFTWARE ENG, V39, P1144, DOI 10.1109/TSE.2012.89
   Song QB, 2011, IEEE T SOFTWARE ENG, V37, P356, DOI 10.1109/TSE.2010.90
   Spearman C, 1904, AM J PSYCHOL, V15, P72, DOI 10.2307/1412159
   Subramanyam R, 2003, IEEE T SOFTWARE ENG, V29, P297, DOI 10.1109/TSE.2003.1191795
   Taba SES, 2013, PROC IEEE INT CONF S, P270, DOI 10.1109/ICSM.2013.38
   Tantithamthavorn C, 2017, IEEE T SOFTWARE ENG, V43, P1, DOI 10.1109/TSE.2016.2584050
   Tantithamthavorn C, 2016, PROC INT CONF SOFTW, P321, DOI 10.1145/2884781.2884857
   Tantithamthavorn C, 2016, IEEE T SOFTWARE ENG, V42, P1092, DOI 10.1109/TSE.2016.2553030
   Tantithamthavorn C, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P812, DOI 10.1109/ICSE.2015.93
   Tempero E, 2010, ASIA PAC SOFWR ENG, P336, DOI 10.1109/APSEC.2010.46
   Theodoridis S., 2008, IEEE Transactions on Neural Networks, V19, P376, DOI DOI 10.1109/TNN.2008.929642
   Tsantalis N, 2011, EUR CON SFTWR MTNCE, P25, DOI 10.1109/CSMR.2011.7
   Tsantalis N, 2011, J SYST SOFTWARE, V84, P1757, DOI 10.1016/j.jss.2011.05.016
   Tsantalis N, 2009, IEEE T SOFTWARE ENG, V35, P347, DOI 10.1109/TSE.2009.1
   Tufano M, 2017, IEEE T SOFTWARE ENG, V43, P1063, DOI 10.1109/TSE.2017.2653105
   Tufano M, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P403, DOI 10.1109/ICSE.2015.59
   Turhan B, 2009, EMPIR SOFTW ENG, V14, P540, DOI 10.1007/s10664-008-9103-7
   Vidal SA, 2016, AUTOMAT SOFTW ENG, V23, P501, DOI 10.1007/s10515-014-0175-x
   Yamashita A, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P682, DOI 10.1109/ICSE.2013.6606614
   Yamashita A, 2013, WORK CONF REVERSE EN, P242, DOI 10.1109/WCRE.2013.6671299
   Yamashita A, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P306, DOI 10.1109/ICSM.2012.6405287
NR 132
TC 63
Z9 71
U1 0
U2 10
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD FEB
PY 2019
VL 45
IS 2
BP 194
EP 218
DI 10.1109/TSE.2017.2770122
PG 25
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA HL5XJ
UT WOS:000458805300004
DA 2024-07-18
ER

PT J
AU Cai, HP
AF Cai, Haipeng
TI Hybrid Program Dependence Approximation for Effective Dynamic Impact
   Prediction
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Static program dependence; dynamic analysis; impact prediction; online
   impact analysis; precision; efficiency
ID SLICES; EFFICIENT; ACCURACY
AB Impact analysis determines the effects that program entities of interest, or changes to them, may have on the rest of the program for software measurement, maintenance, and evolution tasks. Dynamic impact analysis could be one major approach to impact analysis that computes smaller impact sets than static alternatives for concrete sets of executions. However, existing dynamic approaches often produce impact sets that are too large to be useful, hindering their adoption in practice. To address this problem, we propose to exploit static program dependencies to drastically prune false-positive impacts that are not exercised by the set of executions utilized by the analysis, via hybrid dependence approximation. Further, we present a novel dynamic impact analysis called DIVER which leverages both the information provided by the dependence graph and method-execution events to identify runtime method-level dependencies, hence dynamic impact sets, much more precisely without reducing safety and at acceptable costs. We evaluate DIVER on ten Java subjects of various sizes and application domains against both arbitrary queries covering entire programs and practical queries based on changes actually committed by developers to actively evolving software repositories. Our extensive empirical studies show that DIVER can significantly improve the precision of impact prediction, with 100-186 percent increase, with respect to a representative existing alternative thus provide a far more effective option for dynamic impact prediction. Following a similar rationale to DIVER, we further developed and evaluated an online dynamic impact analysis called DIVERONLINE which produces impact sets immediately upon the termination of program execution. Our results show that compared to the offline approach, for the same precision, the online approach can reduce the time by 50 percent on average for answering all possible queries in the given program at once albeit at the price of possibly significant increase in runtime overhead. For users interested in one specific query only, the online approach may compute the impact set for that query during runtime without much slowing down normal program operation. Further, the online analysis, which does not incur any space cost beyond the static-analysis phase, may be favored against the offline approach when trace storage and/or related file-system resource consumption becomes a serious challenge or even stopper for adopting dynamic impact prediction. Therefore, the online and offline analysis together offer complementary options to practitioners accommodating varied application/task scenarios and diverse budget constraints.
C1 [Cai, Haipeng] Washington State Univ, Sch Elect Engn & Comp Sci, Pullman, WA 99163 USA.
C3 Washington State University
RP Cai, HP (corresponding author), Washington State Univ, Sch Elect Engn & Comp Sci, Pullman, WA 99163 USA.
EM hcai@eecs.wsu.edu
RI Cai, Haipeng/K-7802-2015
OI Cai, Haipeng/0000-0002-5224-9970
FU ONR to the University of Notre Dame [N000141410037]; Washington State
   University
FX The preliminary formulation of this work was substantially benefited
   from valuable discussion with Dr. Raul Santelices and was sponsored by
   ONR Grant N000141410037 to the University of Notre Dame. The author
   would also like to thank the anonymous reviewers for their thoughtful
   comments that have helped greatly with the improvement of this article
   through revisions, as well as the faculty startup fund given by
   Washington State University that supported the continuation of the
   research.
CR Acharya M, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P746, DOI 10.1145/1985793.1985898
   AGRAWAL H, 1990, SIGPLAN NOTICES, V25, P246, DOI 10.1145/93548.93576
   [Anonymous], 2011, CETUS USERS COMPILER
   [Anonymous], 2012, P ACM SIGSOFT 20 INT, DOI DOI 10.1145/2393596.2393656
   [Anonymous], 2017, SOUNDINESS STATEMENT
   [Anonymous], 2002, BRIT ED RES ASS ANN
   [Anonymous], 2005, JAVA ARCHITECTURE BY
   [Anonymous], 2006, COMPILERS PRINCIPLES
   Apiwattanapong T, 2005, PROC INT CONF SOFTW, P432
   Arnold Robert S., 1996, Software Change Impact Analysis
   Badri L., 2005, P AS PAC SOFTW ENG C, P1
   Beszédes A, 2002, PROC IEEE INT CONF S, P12, DOI 10.1109/ICSM.2002.1167743
   Binkley D, 2007, ACM T SOFTW ENG METH, V16, DOI 10.1145/1217295.1217297
   Breech B, 2004, PROC IEEE INT CONF S, P453, DOI 10.1109/ICSM.2004.1357834
   Breech B, 2005, Ninth European Conference on Software Maintenance and Reengineering, Proceedings, P143, DOI 10.1109/CSMR.2005.1
   Breech B, 2006, PROC IEEE INT CONF S, P55
   Briand L. C., 1999, Proceedings IEEE International Conference on Software Maintenance - 1999 (ICSM'99). `Software Maintenance for Business Change' (Cat. No.99CB36360), P475, DOI 10.1109/ICSM.1999.792645
   Cai H., 2014, ASE 2014 P 29 ACMIEE, P343
   Cai HP, 2016, J SYST SOFTWARE, V122, P311, DOI 10.1016/j.jss.2016.09.048
   Cai HP, 2016, IEEE T RELIAB, V65, P1114, DOI 10.1109/TR.2015.2481000
   Cai HP, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P489, DOI 10.1109/SANER.2015.7081862
   Cai HP, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P231, DOI 10.1109/SANER.2015.7081833
   Cai HP, 2016, ACM T SOFTW ENG METH, V25, DOI 10.1145/2894751
   Cai HP, 2015, 2015 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE SECURITY AND RELIABILITY (QRS 2015), P49, DOI 10.1109/QRS.2015.18
   Cai HP, 2014, IEEE INT WORK C SO, P165, DOI 10.1109/SCAM.2014.25
   Cai HP, 2014, INT CONF SOFTW SECUR, P48, DOI 10.1109/SERE.2014.18
   Cai HP, 2015, J SYST SOFTWARE, V103, P248, DOI 10.1016/j.jss.2015.02.018
   Chaumun MA, 1999, PROCEEDINGS OF THE THIRD EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, P130, DOI 10.1109/CSMR.1999.756690
   Cliff N., 2014, Ordinal Methods for Behavioral Data Analysis
   de Souza CRB, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P241, DOI 10.1145/1368088.1368122
   Do HS, 2005, EMPIR SOFTW ENG, V10, P405, DOI 10.1007/s10664-005-3861-2
   Emami M., 1993, THESIS
   FERRANTE J, 1987, ACM T PROGR LANG SYS, V9, P319, DOI 10.1145/24039.24041
   Fisher RA, 1948, AM STAT, V2, P30, DOI DOI 10.2307/2681650
   Gethers M, 2012, PROC INT CONF SOFTW, P430, DOI 10.1109/ICSE.2012.6227172
   Goradia T., 1993, SIGSOFT Software Engineering Notes, V18, P171, DOI 10.1145/174146.154269
   Gupta C., 2009, International Journal of Digital Content Technology and its Applications, V3, P112
   Harman M, 2009, ACM T PROGR LANG SYS, V32, DOI 10.1145/1596527.1596528
   Hattori L, 2008, 7TH IEEE/ACIS INTERNATIONAL CONFERENCE ON COMPUTER AND INFORMATION SCIENCE IN CONJUNCTION WITH 2ND IEEE/ACIS INTERNATIONAL WORKSHOP ON E-ACTIVITY, PROCEEDINGS, P513, DOI 10.1109/ICIS.2008.104
   Hoffman K, 2009, PLDI'09 PROCEEDINGS OF THE 2009 ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P453, DOI 10.1145/1542476.1542527
   HORWITZ S, 1990, ACM T PROGR LANG SYS, V12, P26, DOI [10.1145/77606.77608, 10.1145/960116.53994]
   Huang L, 2007, SERA 2007: 5TH ACIS INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING RESEARCH, MANAGEMENT, AND APPLICATIONS, PROCEEDINGS, P374, DOI 10.1109/SERA.2007.46
   Huang L, 2008, PROCEEDINGS OF THE 2008 ADVANCED SOFTWARE ENGINEERING & ITS APPLICATIONS, P217, DOI 10.1109/ASEA.2008.62
   HUTCHINS M, 1994, PROC INT CONF SOFTW, P191, DOI 10.1109/ICSE.1994.296778
   Jackson D., 2000, 22 INT C SOFTW ENG F, P133, DOI DOI 10.1145/336512.336545
   Jász J, 2008, PROC IEEE INT CONF S, P137, DOI 10.1109/ICSM.2008.4658062
   KAMKAR M, 1995, J SYST SOFTWARE, V31, P197, DOI 10.1016/0164-1212(94)00099-9
   KOREL B, 1988, INFORM PROCESS LETT, V29, P155, DOI 10.1016/0020-0190(88)90054-3
   LaToza T. D., 2006, 28th International Conference on Software Engineering Proceedings, P492, DOI 10.1145/1134285.1134355
   LaToza Thomas D., 2010, P 32 ACM IEEE INT C, P185, DOI DOI 10.1145/1806799.1806829
   Law J, 2003, ISSRE 2003: 14TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P430, DOI 10.1109/ISSRE.2003.1251064
   Law J, 2003, PROC INT CONF SOFTW, P308, DOI 10.1109/ICSE.2003.1201210
   Lehnert S., 2011, ILM12011200618 ILM U
   Li BX, 2013, SOFTW TEST VERIF REL, V23, P613, DOI 10.1002/stvr.1475
   Li LF, 1996, PROCEEDINGS OF INTERNATIONAL WORKSHOP ON CSCW IN DESIGN, P171, DOI 10.1109/ICSM.1996.565004
   Livshits B, 2015, COMMUN ACM, V58, P44, DOI 10.1145/2644805
   Loyall J. P., 1993, Proceedings. Conference on Software Maintenance 1993. CSM-93 (Cat. No.93CH3360-5), P282, DOI 10.1109/ICSM.1993.366934
   Maletic JI, 2004, PROC IEEE INT CONF S, P210, DOI 10.1109/ICSM.2004.1357805
   Maia MCO, 2010, EUR CON SFTWR MTNCE, P252, DOI 10.1109/CSMR.2010.48
   Orso A, 2004, PROC INT CONF SOFTW, P491, DOI 10.1109/ICSE.2004.1317471
   Orso A., 2003, Software Engineering Notes, V28, P128, DOI 10.1145/949952.940089
   Petrenko M, 2009, INT C PROGRAM COMPRE, P10, DOI 10.1109/ICPC.2009.5090023
   PODGURSKI A, 1990, IEEE T SOFTWARE ENG, V16, P965, DOI 10.1109/32.58784
   Poshyvanyk D, 2009, EMPIR SOFTW ENG, V14, P5, DOI 10.1007/s10664-008-9088-2
   Rajlich V, 1997, INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE, PROCEEDINGS, P84, DOI 10.1109/ICSM.1997.624234
   Rajlich V., 2011, Software Engineering: The Current Practice
   Rajlich V., 2014, Proceedings of the Conference on the Future of Software Engineering, P133, DOI [10.1145/2593882.2593893, DOI 10.1145/2593882.2593893]
   Rajlich V, 2006, COMMUN ACM, V49, P67, DOI 10.1145/1145287.1145289
   Ramanathan MK, 2006, IEEE INT CONF AUTOM, P241
   Ranganath VP, 2007, ACM T PROGR LANG SYS, V29, DOI 10.1145/1275497.1275502
   Ren X, 2006, IEEE T SOFTWARE ENG, V32, P718, DOI 10.1109/TSE.2006.90
   Ren XX, 2004, ACM SIGPLAN NOTICES, V39, P432, DOI 10.1145/1035292.1029012
   Rovegård P, 2008, IEEE T SOFTWARE ENG, V34, P516, DOI 10.1109/TSE.2008.32
   Santelices Raul, 2010, Proceedings of the Third IEEE International Conference on Software Testing, Verification and Validation (ICST 2010), P429, DOI 10.1109/ICST.2010.29
   Santelices Raul, 2008, 2008 23rd IEEE/ACM International Conference on Automated Software Engineering, P218, DOI 10.1109/ASE.2008.32
   Santelices R., 2013, Proceedings of ACM SIGPLAN International Workshop on State Of the Art in Java Program Analysis, P13
   Schrettner L., 2013, Journal of Software: Evolution and Process, V26, P569
   Sherriff Mark, 2008, 2008 First IEEE International Conference on Software Testing, Verification and Validation (ICST '08), P268, DOI 10.1109/ICST.2008.25
   Sinha S, 2001, ACM T SOFTW ENG METH, V10, P209, DOI 10.1145/367008.367022
   Sinha S, 2000, IEEE T SOFTWARE ENG, V26, P849, DOI 10.1109/32.877846
   Sun X., 2011, ACM Symposium on Applied Computing, P1439
   Sun XB, 2011, CHINESE J ELECTRON, V20, P247
   Tonella P, 2003, IEEE T SOFTWARE ENG, V29, P495, DOI 10.1109/TSE.2003.1205178
   Walpole RE., 2011, PROBABILITY STAT ENG, V9th
   Xiaobing Sun, 2010, 2010 IEEE Proceedings of 34th Annual Computer Software and Applications Conference (COMPSAC 2010), P373, DOI 10.1109/COMPSAC.2010.45
   Yu ZF, 2001, PROG COMPREHEN, P293, DOI 10.1109/WPC.2001.921739
   Zhang XG, 2004, PROC INT CONF SOFTW, P502, DOI 10.1109/ICSE.2004.1317472
NR 87
TC 10
Z9 10
U1 7
U2 15
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD APR
PY 2018
VL 44
IS 4
BP 334
EP 364
DI 10.1109/TSE.2017.2692783
PG 31
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA GF4CH
UT WOS:000431906800002
DA 2024-07-18
ER

PT J
AU Wang, Y
   Yu, H
   Zhu, ZL
   Zhang, W
   Zhao, YL
AF Wang, Ying
   Yu, Hai
   Zhu, Zhiliang
   Zhang, Wei
   Zhao, Yuli
TI Automatic Software Refactoring via Weighted Clustering in Method-Level
   Networks
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Clustering analysis; cohesion; coupling; complex network; software
   refactoring
ID OBJECT-ORIENTED SOFTWARE; ALGORITHMS; METRICS; DESIGN; IDENTIFICATION;
   ARCHITECTURE; INHERITANCE; COHESION
AB In this study, we describe a system-level multiple refactoring algorithm, which can identify the move method, move field, and extract class refactoring opportunities automatically according to the principle of "high cohesion and low coupling." The algorithm works by merging and splitting related classes to obtain the optimal functionality distribution from the system-level. Furthermore, we present a weighted clustering algorithm for regrouping the entities in a system based on merged method-level networks. Using a series of preprocessing steps and preconditions, the "bad smells" introduced by cohesion and coupling problems can be removed from both the non-inheritance and inheritance hierarchies without changing the code behaviors. We rank the refactoring suggestions based on the anticipated benefits that they bring to the system. Based on comparisons with related research and assessing the refactoring results using quality metrics and empirical evaluation, we show that the proposed approach performs well in different systems and is beneficial from the perspective of the original developers. Finally, an open source tool is implemented to support the proposed approach.
C1 [Wang, Ying; Yu, Hai; Zhu, Zhiliang; Zhang, Wei; Zhao, Yuli] Northeastern Univ, Software Coll, Shenyang 110819, Liaoning, Peoples R China.
C3 Northeastern University - China
RP Wang, Y (corresponding author), Northeastern Univ, Software Coll, Shenyang 110819, Liaoning, Peoples R China.
EM wangying8052@163.com; yuhai@126.com; zzl@mail.neu.edu.cn;
   zhangwei@swc.neu.edu.cn; zhaoyl_neu@163.com
RI YU, Hai/E-6831-2018; Wang, Ying/AAC-7948-2021
OI YU, Hai/0000-0002-8024-1781; Zhao, Yuli/0000-0001-7298-7463
FU National Natural Science Foundation of China [61374178, 61402092];
   online education research fund of MOE research center for online
   education, China (Qtone education) [2016ZD306]; Ph.D. Start-up
   Foundation of Liaoning Province, China [201501141]
FX The authors gratefully acknowledge all the students and experts who
   participated to our study and all the reviewers for their positive and
   valuable comments and suggestions regarding our manuscript. We improved
   the original version of this paper according to their high-quality
   feedback. This research was supported by the National Natural Science
   Foundation of China (Grant Nos. 61374178, 61402092), The online
   education research fund of MOE research center for online education,
   China (Qtone education, Grant No. 2016ZD306) and the Ph.D. Start-up
   Foundation of Liaoning Province, China (Grant No. 201501141). Hai Yu is
   the corresponding author.
CR [Anonymous], P 12 IEEE INT WORKSH
   Bansiya J, 2002, IEEE T SOFTWARE ENG, V28, P4, DOI 10.1109/32.979986
   Basili VR, 1996, IEEE T SOFTWARE ENG, V22, P751, DOI 10.1109/32.544352
   Bavota G., 2014, Recommendation Systems in Software Engineering, P387
   Bavota G, 2014, EMPIR SOFTW ENG, V19, P1617, DOI 10.1007/s10664-013-9256-x
   Bavota G, 2014, IEEE T SOFTWARE ENG, V40, P671, DOI 10.1109/TSE.2013.60
   Bavota G, 2012, PROC INT CONF SOFTW, P1419, DOI 10.1109/ICSE.2012.6227233
   Bavota G, 2011, J SYST SOFTWARE, V84, P397, DOI 10.1016/j.jss.2010.11.918
   Bieman J. M., 1995, SIGSOFT Software Engineering Notes, P259, DOI 10.1145/223427.211856
   Bowman M, 2010, IEEE T SOFTWARE ENG, V36, P817, DOI 10.1109/TSE.2010.70
   Boykov Y, 2004, IEEE T PATTERN ANAL, V26, P1124, DOI 10.1109/TPAMI.2004.60
   Briand LC, 2000, J SYST SOFTWARE, V51, P245, DOI 10.1016/S0164-1212(99)00102-8
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   Chidamber SR, 1998, IEEE T SOFTWARE ENG, V24, P629, DOI 10.1109/32.707698
   Chowdhury I, 2011, J SYST ARCHITECT, V57, P294, DOI 10.1016/j.sysarc.2010.06.003
   Clauset A, 2004, PHYS REV E, V70, DOI 10.1103/PhysRevE.70.066111
   Czibula Gabriela, 2010, WSEAS Transactions on Information Science and Applications, V7, P391
   DAY WHE, 1984, J CLASSIF, V1, P7, DOI 10.1007/BF01890115
   Du Bois B, 2004, 11TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P144, DOI 10.1109/WCRE.2004.33
   Dubey SK., 2011, ACM SIGSOFT SOFTW EN, V36, P1, DOI DOI 10.1145/2020976.2020983
   Fokaefs M, 2012, J SYST SOFTWARE, V85, P2241, DOI 10.1016/j.jss.2012.04.013
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   Ganesh SG, 2013, J OBJECT TECHNOL, V12, DOI 10.5381/jot.2013.12.2.a1
   Hakik LM, 2014, INT J COMPUT SCI NET, V14, P1
   Hall T, 2014, ACM T SOFTW ENG METH, V23, DOI 10.1145/2629648
   Han AR, 2015, INFORM SOFTWARE TECH, V59, P53, DOI 10.1016/j.infsof.2014.10.007
   Harrison R, 1998, IEEE T SOFTWARE ENG, V24, P491, DOI 10.1109/32.689404
   Harrison R, 2000, J SYST SOFTWARE, V52, P173, DOI 10.1016/S0164-1212(99)00144-2
   Kimura S, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P575, DOI 10.1109/ICSM.2012.6405324
   Kuhn A, 2007, INFORM SOFTWARE TECH, V49, P230, DOI 10.1016/j.infsof.2006.10.017
   Kuznetsov SO, 2002, J EXP THEOR ARTIF IN, V14, P189, DOI 10.1080/09528130210164170
   Lee S, 2011, SOFTWARE PRACT EXPER, V41, P521, DOI 10.1002/spe.1031
   LI W, 1993, J SYST SOFTWARE, V23, P111, DOI 10.1016/0164-1212(93)90077-B
   Liu H, 2012, IEEE T SOFTWARE ENG, V38, P220, DOI 10.1109/TSE.2011.9
   Mancoridis S, 1998, PROG COMPREHEN, P45, DOI 10.1109/WPC.1998.693283
   Marcus A, 2005, PROC IEEE INT CONF S, P133
   Mens T, 2004, IEEE T SOFTWARE ENG, V30, P126, DOI 10.1109/TSE.2004.1265817
   Moore I, 1996, ACM SIGPLAN NOTICES, V31, P235, DOI 10.1145/236338.236361
   Myers CR, 2003, PHYS REV E, V68, DOI 10.1103/PhysRevE.68.046116
   Newman MEJ, 2004, PHYS REV E, V69, DOI 10.1103/PhysRevE.69.026113
   O'Keeffe M., 2006, 10th European Conference on Software Maintenance and Reengineering
   O'Keeffe M, 2007, GECCO 2007: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOL 1 AND 2, P1114
   O'Keeffe M, 2008, J SYST SOFTWARE, V81, P502, DOI 10.1016/j.jss.2007.06.003
   Opdyke William F., 1992, THESIS
   Seng O, 2006, GECCO 2006: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOL 1 AND 2, P1909
   Sharma A.K., 2012, International Journal of Soft Computing and Engineering (IJSCE), Vol, V2, P255
   Shokoufandeh A, 2005, J SYST SOFTWARE, V77, P213, DOI 10.1016/j.jss.2004.03.032
   Sjoberg DIK, 2013, IEEE T SOFTWARE ENG, V39, P1144, DOI 10.1109/TSE.2012.89
   STONE DH, 1993, BRIT MED J, V307, P1264, DOI 10.1136/bmj.307.6914.1264
   Streckenbach M, 2004, ACM SIGPLAN NOTICES, V39, P315, DOI 10.1145/1035292.1029003
   Thébault E, 2010, SCIENCE, V329, P853, DOI 10.1126/science.1188321
   Tsantalis N, 2009, IEEE T SOFTWARE ENG, V35, P347, DOI 10.1109/TSE.2009.1
NR 52
TC 23
Z9 28
U1 1
U2 24
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAR
PY 2018
VL 44
IS 3
BP 202
EP 236
DI 10.1109/TSE.2017.2679752
PG 35
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA FZ6AL
UT WOS:000427678400001
DA 2024-07-18
ER

PT J
AU Arora, C
   Sabetzadeh, M
   Briand, L
   Zimmer, F
AF Arora, Chetan
   Sabetzadeh, Mehrdad
   Briand, Lionel
   Zimmer, Frank
TI Automated Extraction and Clustering of Requirements Glossary Terms
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Requirements glossaries; term extraction; natural language processing;
   clustering; case study research
ID NATURAL-LANGUAGE REQUIREMENTS; SEMANTIC SIMILARITY; SOFTWARE; CONTEXT
AB A glossary is an important part of any software requirements document. By making explicit the technical terms in a domain and providing definitions for them, a glossary helps mitigate imprecision and ambiguity. A key step in building a glossary is to decide upon the terms to include in the glossary and to find any related terms. Doing so manually is laborious, particularly for large requirements documents. In this article, we develop an automated approach for extracting candidate glossary terms and their related terms from natural language requirements documents. Our approach differs from existing work on term extraction mainly in that it clusters the extracted terms by relevance, instead of providing a flat list of terms. We provide an automated, mathematically-based procedure for selecting the number of clusters. This procedure makes the underlying clustering algorithm transparent to users, thus alleviating the need for any user-specified parameters. To evaluate our approach, we report on three industrial case studies, as part of which we also examine the perceptions of the involved subject matter experts about the usefulness of our approach. Our evaluation notably suggests that: (1) Over requirements documents, our approach is more accurate than major generic term extraction tools. Specifically, in our case studies, our approach leads to gains of 20 percent or more in terms of recall when compared to existing tools, while at the same time either improving precision or leaving it virtually unchanged. And, (2) the experts involved in our case studies find the clusters generated by our approach useful as an aid for glossary construction.
C1 [Arora, Chetan; Sabetzadeh, Mehrdad; Briand, Lionel] Univ Luxembourg, SnT Ctr Secur Reliabil & Trust, L-2721 Alphonse Weicker, Luxembourg.
   [Zimmer, Frank] SES Techcom, L-6815 Betzdorf, Luxembourg.
C3 University of Luxembourg
RP Arora, C (corresponding author), Univ Luxembourg, SnT Ctr Secur Reliabil & Trust, L-2721 Alphonse Weicker, Luxembourg.
EM chetan.arora@uni.lu; mehrdad.sabetzadeh@uni.lu; lionel.briand@uni.lu;
   frank.zimmer@ses.com
OI Sabetzadeh, Mehrdad/0000-0002-4711-8319; Arora,
   Chetan/0000-0003-1466-7386
FU Luxembourg's National Research Fund [FNR/P10/03, FNR-6911386]; European
   Research Council [694277]; European Research Council (ERC) [694277]
   Funding Source: European Research Council (ERC)
FX This project has received funding from Luxembourg's National Research
   Fund (grant agreement numbers FNR/P10/03 and FNR-6911386), and from the
   European Research Council under the European Union's Horizon 2020
   research and innovation program (grant agreement number 694277). We are
   grateful to Dan Isaac, Konstantinos Liolis, Sunil Nair, and Jose Luis de
   la Vara for useful discussions and contributions to our case studies. We
   would further like to thank the anonymous reviewers of IEEE TSE for
   their valuable comments.
CR Abebe Surafel Lemma, 2010, Proceedings of the 18th IEEE International Conference on Program Comprehension (ICPC 2010), P156, DOI 10.1109/ICPC.2010.29
   Abebe SL, 2013, J SYST SOFTWARE, V86, P2919, DOI 10.1016/j.jss.2013.07.009
   Achananuparp P, 2008, LECT NOTES COMPUT SC, V5182, P305, DOI 10.1007/978-3-540-85836-2_29
   Adedjouma M, 2014, INT REQUIR ENG CONF, P63, DOI 10.1109/RE.2014.6912248
   Aggarwal CC, 2014, CH CRC DATA MIN KNOW, P1
   AGUILERA C, 1990, J SYST SOFTWARE, V13, P209, DOI 10.1016/0164-1212(90)90097-6
   Amigó E, 2009, INFORM RETRIEVAL, V12, P461, DOI 10.1007/s10791-008-9066-8
   [Anonymous], BASIC STAT ANAL
   [Anonymous], NATURAL LANGUAGE PRO
   [Anonymous], 1997, P 10 RES COMPUTATION
   [Anonymous], P 8 ACM IEEE INT S E
   [Anonymous], P 9 C EUR CHAPT ASS
   [Anonymous], 2004, Applying UML and Patterns: An Introduction to Object-Oriented Analysis and Design and Iterative Development
   [Anonymous], SIMPACK GENERIC JAVA
   [Anonymous], 2004, The Requirements Engineering Handbook
   [Anonymous], 2015, HDB TERMINOLOGY, DOI DOI 10.1075/HOT.1.AUT1
   [Anonymous], INT J ARTIFICIAL INT
   Arafeen MJ, 2013, 2013 IEEE SIXTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST 2013), P312, DOI 10.1109/ICST.2013.12
   Arora C, 2015, INT REQUIR ENG CONF, P6, DOI 10.1109/RE.2015.7320403
   Arora C, 2015, IEEE T SOFTWARE ENG, V41, P944, DOI 10.1109/TSE.2015.2428709
   Arthur D, 2007, PROCEEDINGS OF THE EIGHTEENTH ANNUAL ACM-SIAM SYMPOSIUM ON DISCRETE ALGORITHMS, P1027
   Aubin S, 2006, LECT NOTES ARTIF INT, V4139, P380
   Banerjee S., 2003, P 18 INT JOINT C ART, P805
   Barker K, 2000, LECT NOTES ARTIF INT, V1822, P40
   Bourigault D., 1992, P 14 C COMPUTATIONAL, V3, P977
   Breiman L, 1998, BIOMETRICS, DOI [10.1201/9781315139470, DOI 10.2307/2530946]
   Chantree F, 2006, RE'06: 14TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, PROCEEDINGS, P59
   Chen K, 2005, 13TH IEEE INTERNATIONAL CONFERENCE ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P31
   Cleland-Huang J., 2014, FOSE P FUTURE SOFTWA, P55
   Cohen W.W., 2003, IJCAI WORKSH INF INT, P73, DOI DOI 10.5555/3104278.3104293
   Daille B., 2005, Terminology, V11, P181, DOI 10.1075/term.11.1.08dai
   Divakaran A, 2009, SIGNALS COMMUN TECHN, P1
   Drouin P., 2003, Terminology, V9, P99, DOI 10.1075/term.9.1.06dro
   Duan C., 2007, International Conference on Automated Software Engineering, P244
   Dwarakanath A, 2013, S VIS LANG HUM CEN C, P314, DOI 10.1109/RE.2013.6636736
   Falessi D, 2013, IEEE T SOFTWARE ENG, V39, P18, DOI 10.1109/TSE.2011.122
   Femmer H., 2014, PROC 1 INT WORKSHOP, P10
   Ferrari Alessio, 2013, Requirements Engineering: Foundation for Software Quality. 19th International Working Conference, REFSQ 2013. Proceedings, P34, DOI 10.1007/978-3-642-37422-7_3
   Frantzi K., 2000, Int. J. Digit. Libr., V3, P115
   Gervasi V, 2005, ACM T SOFTW ENG METH, V14, P277, DOI 10.1145/1072997.1072999
   Gervasi V, 2002, SOFTWARE PRACT EXPER, V32, P113, DOI 10.1002/spc.430
   Goldin L., 1997, Automated Software Engineering, V4, P375, DOI 10.1023/A:1008617922496
   Gomaa WH., 2013, international journal of Computer Applications, V68, P13, DOI 10.5120/11638-7118
   Grinstein G., 2001, DATA MINING C KDD WO, P7
   Güldali B, 2009, IEEE INT CONF AUTOM, P29, DOI 10.1109/ASE.2009.86
   Guzman E, 2014, INT REQUIR ENG CONF, P153, DOI 10.1109/RE.2014.6912257
   Hirst G, 1998, LANG SPEECH & COMMUN, P305
   Holbrook EA, 2009, PROCEEDINGS OF THE 2009 17TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, P149, DOI 10.1109/RE.2009.10
   JONES LP, 1990, J AM SOC INFORM SCI, V41, P87, DOI 10.1002/(SICI)1097-4571(199003)41:2<87::AID-ASI2>3.0.CO;2-8
   Jurafsky D., 2009, SPEECH LANGUAGE PROC
   Justeson, 1995, NAT LANG ENG, V1, P9, DOI [DOI 10.1017/S1351324900000048, 10.1017/S1351324900000048]
   Kiyavitskaya N, 2008, REQUIR ENG, V13, P207, DOI 10.1007/s00766-008-0063-7
   Kof L, 2010, IEEE INT C SEMANT CO, P46, DOI 10.1109/ICSC.2010.95
   Krishna K, 1999, IEEE T SYST MAN CY B, V29, P433, DOI 10.1109/3477.764879
   Lantz B., 2015, MACHINE LEARNING R L, P65
   LAUESEN S, 2002, SOFTWARE REQUIREMENT
   Leacock C, 1998, LANG SPEECH & COMMUN, P265
   Likert R., 1932, ARCH PSYCHOL, V140, P55
   Lin D., 1998, Machine Learning. Proceedings of the Fifteenth International Conference (ICML'98), P296
   Maalej W, 2015, INT REQUIR ENG CONF, P116, DOI 10.1109/RE.2015.7320414
   Mahmoud A, 2015, INT REQUIR ENG CONF, P36, DOI 10.1109/RE.2015.7320406
   Manning Christopher D., 2008, INTRO INFORM RETRIEV
   Ménard PA, 2016, AUTOMAT SOFTW ENG, V23, P649, DOI 10.1007/s10515-015-0184-4
   Misra J, 2016, INFORM SOFTWARE TECH, V74, P183, DOI 10.1016/j.infsof.2015.11.006
   Monge A, 1997, P ACM SIGMOD WORKSHO, P23
   Nejati S, 2012, IEEE T SOFTWARE ENG, V38, P1355, DOI 10.1109/TSE.2011.112
   Pazienza MT, 2005, STUD FUZZ SOFT COMP, V185, P255
   Pedersen T, 2004, PROCEEDING OF THE NINETEENTH NATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE AND THE SIXTEENTH CONFERENCE ON INNOVATIVE APPLICATIONS OF ARTIFICIAL INTELLIGENCE, P1024
   Pohl K, 2010, REQUIREMENTS ENGINEERING: FUNDAMENTALS, PRINCIPLES, AND TECHNIQUES, P1, DOI 10.1007/978-3-642-12578-2
   Popescu D, 2008, LECT NOTES COMPUT SC, V5320, P103
   Pruski P, 2015, REQUIR ENG, V20, P215, DOI 10.1007/s00766-015-0224-4
   Resnik P, 1995, INT JOINT CONF ARTIF, P448
   Riaz M, 2014, INT REQUIR ENG CONF, P183, DOI 10.1109/RE.2014.6912260
   Rosenberg A, 2007, P 2007 JOINT C EMP M, P410, DOI [10 . 7916 / D80V8N84, DOI 10.7916/D80V8N84]
   Rus V., 2013, P 51 ANN M ASS COMP, P163
   Sagar VBRV, 2014, J SYST SOFTWARE, V88, P25, DOI 10.1016/j.jss.2013.08.036
   Schneider K., 2009, Experience and knowledge management in software engineering
   Scholz F., 1985, MAXIMUM LIKELIHOOD E
   SCHWARZ G, 1978, ANN STAT, V6, P461, DOI 10.1214/aos/1176344136
   Song M, 2006, LECT NOTES COMPUT SC, V4081, P384
   Sridhara G, 2008, INT C PROGRAM COMPRE, P123, DOI 10.1109/ICPC.2008.18
   Sultanov H., 2010, Proceedings of the 2010 IEEE 18th International Conference on Requirements Engineering (RE2010), P211, DOI 10.1109/RE.2010.33
   Sundaram SK, 2010, REQUIR ENG, V15, P313, DOI 10.1007/s00766-009-0096-6
   Torkar R, 2012, INT J SOFTW ENG KNOW, V22, P385, DOI 10.1142/S021819401250009X
   van Lamsweerde A., 2009, REQUIREMENTS ENG SYS
   Yang H, 2011, REQUIR ENG, V16, P163, DOI 10.1007/s00766-011-0119-y
   Yue T, 2011, REQUIR ENG, V16, P75, DOI 10.1007/s00766-010-0111-y
   Zeni N, 2015, REQUIR ENG, V20, P1, DOI 10.1007/s00766-013-0181-8
   Zhang ZQ, 2008, SIXTH INTERNATIONAL CONFERENCE ON LANGUAGE RESOURCES AND EVALUATION, LREC 2008, P2108
   Zhao Y., 2002, Proceedings of the Eleventh International Conference on Information and Knowledge Management. CIKM 2002, P515, DOI 10.1145/584792.584877
   Zhibiao Wu, 1994, 32nd Annual Meeting of the Association for Computational Linguistics. Proceedings of the Conference, P133
   Zou XC, 2010, EMPIR SOFTW ENG, V15, P119, DOI 10.1007/s10664-009-9114-z
NR 92
TC 59
Z9 68
U1 2
U2 17
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD OCT
PY 2017
VL 43
IS 10
BP 918
EP 945
DI 10.1109/TSE.2016.2635134
PG 28
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA FJ9YP
UT WOS:000413137700002
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Gay, G
   Rayadurgam, S
   Heimdahl, MPE
AF Gay, Gregory
   Rayadurgam, Sanjai
   Heimdahl, Mats P. E.
TI Automated Steering of Model-Based Test Oracles to Admit Real Program
   Behaviors
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Software testing; test oracles; model-based testing; model-based
   development; verification
AB The test oracle-a judge of the correctness of the system under test (SUT)-is a major component of the testing process. Specifying test oracles is challenging for some domains, such as real-time embedded systems, where small changes in timing or sensory input may cause large behavioral differences. Models of such systems, often built for analysis and simulation, are appealing for reuse as test oracles. These models, however, typically represent an idealized system, abstracting away certain issues such as non-deterministic timing behavior and sensor noise. Thus, even with the same inputs, the model's behavior may fail to match an acceptable behavior of the SUT, leading to many false positives reported by the test oracle. We propose an automated steering framework that can adjust the behavior of the model to better match the behavior of the SUT to reduce the rate of false positives. This model steering is limited by a set of constraints (defining the differences in behavior that are acceptable) and is based on a search process attempting to minimize a dissimilarity metric. This framework allows non-deterministic, but bounded, behavioral differences, while preventing future mismatches by guiding the oracle-within limits-to match the execution of the SUT. Results show that steering significantly increases SUT-oracle conformance with minimal masking of real faults and, thus, has significant potential for reducing false positives and, consequently, testing and debugging costs while improving the quality of the testing process.
C1 [Gay, Gregory] Univ South Carolina, Dept Comp Sci & Engn, Columbia, SC 29208 USA.
   [Rayadurgam, Sanjai; Heimdahl, Mats P. E.] Univ Minnesota, Dept Comp Sci & Engn, Minneapolis, MN 55455 USA.
C3 University of South Carolina System; University of South Carolina
   Columbia; University of Minnesota System; University of Minnesota Twin
   Cities
RP Gay, G (corresponding author), Univ South Carolina, Dept Comp Sci & Engn, Columbia, SC 29208 USA.
EM greg@greggay.com; rsanjai@cs.umn.edu; heimdahl@cs.umn.edu
RI Rayadurgam, Sanjai/AAZ-6313-2020
OI Rayadurgam, Sanjai/0000-0003-3465-0119; Gay, Gregory/0000-0001-6794-9585
FU US National Science Foundation [CNS-0931931, CNS-1035715]
FX This work has been partially supported by US National Science Foundation
   grants CNS-0931931 and CNS-1035715.
CR Anand S, 2013, J SYST SOFTWARE, V86, P1978, DOI 10.1016/j.jss.2013.02.061
   Andrews JH, 2006, IEEE T SOFTWARE ENG, V32, P608, DOI 10.1109/TSE.2006.83
   [Anonymous], 1999, ACM SIGKDD INT C KNO
   Arcuri A, 2010, LECT NOTES COMPUT SC, V6435, P95, DOI 10.1007/978-3-642-16573-3_8
   Barr ET, 2015, IEEE T SOFTWARE ENG, V41, P507, DOI 10.1109/TSE.2014.2372785
   Bengtsson J, 2004, LECT NOTES COMPUT SC, V3098, P87, DOI 10.1007/978-3-540-27755-2_3
   Biere A, 2009, FRONT ARTIF INTEL AP, V185, P457, DOI 10.3233/978-1-58603-929-5-457
   Brinksma Ed., 2001, MODELING VERIFICATIO, V2067, P187
   Briones LB, 2005, LECT NOTES COMPUT SC, V3395, P64
   Cha S.-H., 2007, Int. J. Math. Models Methods Appl. Sci., V1, P300
   Coppit D, 2005, 29TH ANNUAL IEEE/NASA SOFTWARE ENGINEERING WORKSHOP, PROCEEDINGS, P305, DOI 10.1109/SEW.2005.33
   de Moura L, 2008, LECT NOTES COMPUT SC, V4963, P337, DOI 10.1007/978-3-540-78800-3_24
   En-Nouaary A, 2002, IEEE T SOFTWARE ENG, V28, P1023, DOI 10.1109/TSE.2002.1049402
   Gay G., 2015, THESIS
   Gay G, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE COMPANION 2014), P428, DOI 10.1145/2591062.2591120
   Gay G, 2010, AUTOMAT SOFTW ENG, V17, P439, DOI 10.1007/s10515-010-0072-x
   Gay Gregory, 2014, P 29 ACM IEEE INT C, P527, DOI DOI 10.1145/2642937.2642989
   Gomes Adriano, 2012, International Journal on Software Tools for Technology Transfer, V14, P673, DOI 10.1007/s10009-012-0238-x
   GU WM, 1994, SIGPLAN NOTICES, V29, P140, DOI 10.1145/185009.185038
   Gundy-Burlet K, 2007, 9 INT S ART INT ROB
   Gundy-Burlet K., 2009, P AIAA AER C
   Hagen G., 2008, THESIS
   Halbwachs Nicolas., 1993, Synchronous Programming of Reactive Systems
   HAREL D, 1990, IEEE T SOFTWARE ENG, V16, P403, DOI 10.1109/32.54292
   HOWDEN WE, 1978, IEEE T SOFTWARE ENG, V4, P293, DOI 10.1109/TSE.1978.231514
   Huth M., 2006, LOGIC COMPUTER SCI M
   Kannan S., 2000, P WORKSH MOD SOFTW S
   Larsen K. G., 2004, Formal Approaches to Software Testing. 4th International Workshop, FATES 2004. Revised Selected Papers (Lecture Notes in Computer Science Vol.3395), P79
   Lee D, 1996, P IEEE, V84, P1090, DOI 10.1109/5.533956
   Li N, 2014, 2014 IEEE SEVENTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST), P363, DOI 10.1109/ICST.2014.49
   Mahajan S., 2014, P 29 IEEEACM INT C A
   Menzies T, 2003, COMPUTER, V36, P22, DOI 10.1109/MC.2003.1244531
   Menzies T., 2015, The promise repository of empirical software engineering data
   Miller D.W., 2001, Supercomputing, ACM/IEEE 2001 Conf, P8, DOI DOI 10.1145/582034.582044
   Miller StevenP., 2006, International Journal on Software Tools for Technology Transfer, V8, P303, DOI [DOI 10.1007/S10009-004-0173-6, 10.1007/s10009-004-0173-6.]
   Mohri M., 2012, Foundations of Machine Learning
   Mosterman P, 2011, Model-based testing for embedded systems
   Murugesan A, 2013, 2013 5TH INTERNATIONAL WORKSHOP ON MODELING IN SOFTWARE ENGINEERING (MISE), P13, DOI 10.1109/MiSE.2013.6595290
   Navarro G, 2001, ACM COMPUT SURV, V33, P31, DOI 10.1145/375360.375365
   Padgham L, 2013, IEEE T SOFTWARE ENG, V39, P1230, DOI 10.1109/TSE.2013.10
   Pezze M., 2006, Software Test and Analysis: Process, Principles, and Techniques
   Rajan A., 2008, REQUIREMENTS COVERAG, P86
   Rajan A, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P161, DOI 10.1145/1368088.1368111
   Savor T, 1997, THIRD IEEE REAL-TIME TECHNOLOGY AND APPLICATIONS SYMPOSIUM, PROCEEDINGS, P136, DOI 10.1109/RTTAS.1997.601351
   Schumann J., 2009, Proceedings of the IEEE Aerospace Conference, P1
   Scientific Boston., 2007, Pacemaker Formal Methods Challenge
   Staats M, 2012, PROC INT CONF SOFTW, P870, DOI 10.1109/ICSE.2012.6227132
   T. M. Association, 2012, MOD A UN OBJ OR LANG
   Tretmans Jan, 2008, Formal Methods and Testing. An Outcome of the FORTEST Network. Revised Selected Papers, P1, DOI 10.1007/978-3-540-78917-8_1
   Veanes Margus, 2008, Formal Methods and Testing. An Outcome of the FORTEST Network. Revised Selected Papers, P39, DOI 10.1007/978-3-540-78917-8_2
   Weyuker E.J., 1980, 13th Int'l Conf on System Sciences, P44
   Xie Q, 2007, ACM T SOFTW ENG METH, V16, DOI 10.1145/1189748.1189752
NR 52
TC 5
Z9 7
U1 0
U2 6
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUN 1
PY 2017
VL 43
IS 6
BP 531
EP 555
DI 10.1109/TSE.2016.2615311
PG 25
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA EX8XS
UT WOS:000403534100002
OA Green Published, hybrid
DA 2024-07-18
ER

PT J
AU Zhang, F
   Hassan, AE
   McIntosh, S
   Zou, Y
AF Zhang, Feng
   Hassan, Ahmed E.
   McIntosh, Shane
   Zou, Ying
TI The Use of Summation to Aggregate Software Metrics Hinders the
   Performance of Defect Prediction Models
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Defect prediction; aggregation scheme; software metrics
ID OBJECT-ORIENTED METRICS; EMPIRICAL-ANALYSIS; FAULTS; CODE; COMPLEXITY
AB Defect prediction models help software organizations to anticipate where defects will appear in the future. When training a defect prediction model, historical defect data is often mined from a Version Control System (VCS, e.g., Subversion), which records software changes at the file-level. Software metrics, on the other hand, are often calculated at the class-or method-level (e.g., McCabe's Cyclomatic Complexity). To address the disagreement in granularity, the class-and method-level software metrics are aggregated to file-level, often using summation (i.e., McCabe of a file is the sum of the McCabe of all methods within the file). A recent study shows that summation significantly inflates the correlation between lines of code (SLOC) and cyclomatic complexity (CC) in Java projects. While there are many other aggregation schemes (e.g., central tendency, dispersion), they have remained unexplored in the scope of defect prediction. In this study, we set out to investigate how different aggregation schemes impact defect prediction models. Through an analysis of 11 aggregation schemes using data collected from 255 open source projects, we find that: (1) aggregation schemes can significantly alter correlations among metrics, as well as the correlations between metrics and the defect count; (2) when constructing models to predict defect proneness, applying only the summation scheme (i.e., the most commonly used aggregation scheme in the literature) only achieves the best performance (the best among the 12 studied configurations) in 11 percent of the studied projects, while applying all of the studied aggregation schemes achieves the best performance in 40 percent of the studied projects; (3) when constructing models to predict defect rank or count, either applying only the summation or applying all of the studied aggregation schemes achieves similar performance, with both achieving the closest to the best performance more often than the other studied aggregation schemes; and (4) when constructing models for effort-aware defect prediction, the mean or median aggregation schemes yield performance values that are significantly closer to the best performance than any of the other studied aggregation schemes. Broadly speaking, the performance of defect prediction models are often underestimated due to our community's tendency to only use the summation aggregation scheme. Given the potential benefit of applying additional aggregation schemes, we advise that future defect prediction models should explore a variety of aggregation schemes.
C1 [Zhang, Feng; Hassan, Ahmed E.] Queens Univ, Sch Comp, Kingston, ON K7L 3N6, Canada.
   [McIntosh, Shane] McGill Univ, Dept Elect & Comp Engn, Montreal, PQ H3A 0G4, Canada.
   [Zou, Ying] Queens Univ, Dept Elect & Comp Engn, Kingston, ON K7L 3N6, Canada.
C3 Queens University - Canada; McGill University; Queens University -
   Canada
RP Zhang, F (corresponding author), Queens Univ, Sch Comp, Kingston, ON K7L 3N6, Canada.
EM feng@cs.queensu.ca; ahmed@cs.queensu.ca; shane.mcintosh@mcgill.ca;
   ying.zou@queensu.ca
RI KHALIFA, AHMED khalifa/HKF-2246-2023; Hassan, Ahmed/AAB-7241-2019; Ali,
   Ahmed/HOF-4672-2023; Zhang, Feng/AAQ-3506-2021; Zou, Ying/KLC-9380-2024
OI KHALIFA, AHMED khalifa/0000-0002-2918-7572; Zhang,
   Feng/0000-0001-9805-395X
CR [Anonymous], P 21 ACM SIGSOFT S 1
   [Anonymous], UND 3 1 BUILD 726
   [Anonymous], 1967, Studies in Mathematical and Mangerial Economics
   [Anonymous], 2007, PROMISE 07, DOI DOI 10.1109/PROMISE.2007.10
   ATKINSON AB, 1970, J ECON THEORY, V2, P244, DOI 10.1016/0022-0531(70)90039-6
   Bhattacharya P, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P171, DOI 10.1145/1985793.1985817
   Bird C, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P121, DOI 10.1145/1595696.1595716
   Breiman L., 2001, Machine Learning, V45, P5, DOI 10.1023/A:1010933404324
   CLIFF N, 1993, PSYCHOL BULL, V114, P494, DOI 10.1037/0033-2909.114.3.494
   Cohen J., 1988, STAT POWER ANAL BEHA
   COWELL FA, 1980, EUR ECON REV, V13, P147, DOI 10.1016/0014-2921(80)90051-3
   D'Ambros Marco, 2010, Proceedings of the 2010 7th IEEE Working Conference on Mining Software Repositories (MSR 2010), P31, DOI 10.1109/MSR.2010.5463279
   D'Ambros M, 2012, EMPIR SOFTW ENG, V17, P531, DOI 10.1007/s10664-011-9173-9
   Denaro G, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P241, DOI 10.1109/ICSE.2002.1007972
   Efron B, 1994, INTRO BOOTSTRAP, DOI DOI 10.1201/9780429246593
   Fenton N., 2000, INT C SOFTWARE ENG, P357, DOI DOI 10.1145/336512.336588
   Fenton NE, 2000, IEEE T SOFTWARE ENG, V26, P797, DOI 10.1109/32.879815
   Fukushima T., 2014, Proceedings of the 11th Working Conference on Mining Software Repositories, MSR 2014, P172, DOI DOI 10.1145/2597073.2597075
   GAFFNEY JE, 1984, IEEE T SOFTWARE ENG, V10, P459, DOI 10.1109/TSE.1984.5010260
   Giger E, 2012, INT SYMP EMP SOFTWAR, P171, DOI 10.1145/2372251.2372285
   Giger Emanuel., 2011, P 12 INT WORKSHOP PR, P51
   Gini C., 1921, ECON J, V31, P124, DOI [DOI 10.2307/2223319, 10.2307/2223319]
   Goloshchapova O, 2013, IEEE AUS SOFT ENGR, P117, DOI 10.1109/ASWEC.2013.23
   Gousios G, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P345, DOI 10.1145/2568225.2568260
   Graves TL, 2000, IEEE T SOFTWARE ENG, V26, P653, DOI 10.1109/32.859533
   Gyimóthy T, 2005, IEEE T SOFTWARE ENG, V31, P897, DOI 10.1109/TSE.2005.112
   Hassan AE, 2009, PROC INT CONF SOFTW, P78, DOI 10.1109/ICSE.2009.5070510
   Hata H, 2012, PROC INT CONF SOFTW, P200, DOI 10.1109/ICSE.2012.6227193
   He ZM, 2012, AUTOMAT SOFTW ENG, V19, P167, DOI 10.1007/s10515-011-0090-3
   HENRY S, 1981, IEEE T SOFTWARE ENG, V7, P510, DOI 10.1109/TSE.1981.231113
   Herzig K, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P392, DOI 10.1109/ICSE.2013.6606585
   Holschuh T, 2009, PROC INT CONF SOFTW, P172, DOI 10.1109/ICSE-COMPANION.2009.5070975
   Hoover EM, 1936, REV ECON STATISTICS, V18, P162, DOI 10.2307/1927875
   Jureczko M., 2010, Model Methods Syst Dependability Oficyna Wydawnicza Politech Wroclawskiej, P69
   Kamei Y., 2010, Proceedings of the 26th International Conference on Software Maintenance, P1, DOI 10.1109/ICSM.2010.5609530
   Kim S, 2007, PROC INT CONF SOFTW, P489
   Kim S, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P481, DOI 10.1145/1985793.1985859
   KITCHENHAM BA, 1990, SOFTWARE ENG J, V5, P50, DOI 10.1049/sej.1990.0007
   KOLM SC, 1976, J ECON THEORY, V12, P416, DOI 10.1016/0022-0531(76)90037-5
   Koru AG, 2005, IEEE SOFTWARE, V22, P23, DOI 10.1109/MS.2005.149
   Landman D, 2014, PROC IEEE INT CONF S, P221, DOI 10.1109/ICSME.2014.44
   Lee T., 2011, Proceedings of the 19th ACM SIGSOFT symposium and the 13th European conference on Foundations of software engineering, P311
   Lessmann S, 2008, IEEE T SOFTWARE ENG, V34, P485, DOI 10.1109/TSE.2008.35
   Liaw A., 2015, randomForest: Breiman and Cutler's random forests for classification and regression
   McCabe T. J., 1976, IEEE Transactions on Software Engineering, VSE-2, P308, DOI 10.1109/TSE.1976.233837
   Mende T., 2009, P 5 INT C PREDICTOR, P1, DOI [10.1145/1540438.1540448, DOI 10.1145/1540438.1540448]
   Mende T, 2010, EUR CON SFTWR MTNCE, P107, DOI 10.1109/CSMR.2010.18
   Meng XZ, 2013, PROC IEEE INT CONF S, P250, DOI 10.1109/ICSM.2013.36
   Menzies T., 2015, The promise repository of empirical software engineering data
   Menzies T, 2007, IEEE T SOFTWARE ENG, V33, P2, DOI 10.1109/TSE.2007.256941
   Mockus A, 2000, PROC IEEE INT CONF S, P120, DOI 10.1109/ICSM.2000.883028
   Mockus A, 2009, 2009 6TH IEEE INTERNATIONAL WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES, P11, DOI 10.1109/MSR.2009.5069476
   Moser R, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P181, DOI 10.1145/1368088.1368114
   Murphy-Hill E, 2015, IEEE T SOFTWARE ENG, V41, P65, DOI 10.1109/TSE.2014.2357438
   Nagappan N, 2005, PROC INT CONF SOFTW, P284, DOI 10.1145/1062455.1062514
   Nam J, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P382, DOI 10.1109/ICSE.2013.6606584
   Nguyen T.N. D., 2010, Proceedings of the International Conference on Software Maintenance, P1, DOI DOI 10.1109/ICSM.2010.5609560
   Oliveira ALI, 2010, INFORM SOFTWARE TECH, V52, P1155, DOI 10.1016/j.infsof.2010.05.009
   Peters F, 2013, IEEE WORK CONF MIN S, P409, DOI 10.1109/MSR.2013.6624057
   Posnett D., 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P362, DOI 10.1109/ASE.2011.6100074
   Premraj R, 2011, INT SYMP EMP SOFTWAR, P215, DOI 10.1109/ESEM.2011.30
   Puth MT, 2015, ANIM BEHAV, V102, P77, DOI 10.1016/j.anbehav.2015.01.010
   Radjenovic D, 2013, INFORM SOFTWARE TECH, V55, P1397, DOI 10.1016/j.infsof.2013.02.009
   Robnik-Sikonja M, 2004, LECT NOTES COMPUT SC, V3201, P359
   Romano J, 2006, ANN M FLOR ASS I RES, P1
   Selim G. M. K., 2010, Proceedings 17th Working Conference on Reverse Engineering (WCRE 2010), P13, DOI 10.1109/WCRE.2010.11
   Serebrenik Alexander., 2010, P 26 IEEE INT C SOFT, P1
   Shannon C. E., 1948, BELL SYST TECH J, V27, P379, DOI DOI 10.1002/J.1538-7305.1948.TB01338.X
   Sheskin DJ., 2003, HDB PARAMETRIC NONPA, DOI [10.1201/9781420036268, DOI 10.1201/9781420036268]
   Shihab E, 2014, PROC IEEE INT CONF S, P639, DOI 10.1109/ICSME.2014.114
   Sliwerski J., 2005, ACM SIGSOFT SOFTWARE, P1, DOI DOI 10.1145/1082983.1083147
   Song L., 2013, PROMISE
   Subramanyam R, 2003, IEEE T SOFTWARE ENG, V29, P297, DOI 10.1109/TSE.2003.1191795
   Succi G, 2005, EMPIR SOFTW ENG, V10, P81, DOI 10.1023/B:EMSE.0000048324.12188.a2
   Tantithamthavorn C, 2016, PROC INT CONF SOFTW, P321, DOI 10.1145/2884781.2884857
   Tantithamthavorn C, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P812, DOI 10.1109/ICSE.2015.93
   Thomas Zimmermann., 2009, P THE 7 JOINT M EURO, P91, DOI DOI 10.1145/1595696.1595713
   Tosun A, 2010, INFORM SOFTWARE TECH, V52, P1242, DOI 10.1016/j.infsof.2010.06.006
   Triola M.F., 2004, ELEMENTARY STAT
   van Koten C, 2006, INFORM SOFTWARE TECH, V48, P59, DOI 10.1016/j.infsof.2005.03.002
   Vasa R, 2009, PROC IEEE INT CONF S, P179, DOI 10.1109/ICSM.2009.5306322
   Vasilescu B., 2011, THESIS
   Vasilescu Bogdan., 2011, Proceedings of the 2Nd International Workshop on Emerging Trends in Software Metrics, WETSoM '11, P23
   Yin R. K., 2017, CASE STUDY RES DESIG
   Zhang F, 2013, PROC IEEE INT CONF S, P350, DOI 10.1109/ICSM.2013.46
   Zhang Feng., 2014, Proceedings of the 11th Working Conference on Mining Software Repositories, MSR '14, P41
   Zimmermann T, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P531, DOI 10.1145/1368088.1368161
NR 87
TC 49
Z9 62
U1 0
U2 15
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAY
PY 2017
VL 43
IS 5
BP 476
EP 491
DI 10.1109/TSE.2016.2599161
PG 16
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science; Engineering
GA EU9BO
UT WOS:000401332400005
DA 2024-07-18
ER

PT J
AU Vegas, S
   Apa, C
   Juristo, N
AF Vegas, Sira
   Apa, Cecilia
   Juristo, Natalia
TI Crossover Designs in Software Engineering Experiments: Benefits and
   Perils
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Experimental software engineering; controlled experiment; data analysis;
   crossover design; carryover
ID 2-TREATMENT; FAMILY
AB In experiments with crossover design subjects apply more than one treatment. Crossover designs are widespread in software engineering experimentation: they require fewer subjects and control the variability among subjects. However, some researchers disapprove of crossover designs. The main criticisms are: the carryover threat and its troublesome analysis. Carryover is the persistence of the effect of one treatment when another treatment is applied later. It may invalidate the results of an experiment. Additionally, crossover designs are often not properly designed and/or analysed, limiting the validity of the results. In this paper, we aim to make SE researchers aware of the perils of crossover experiments and provide risk avoidance good practices. We study how another discipline (medicine) runs crossover experiments. We review the SE literature and discuss which good practices tend not to be adhered to, giving advice on how they should be applied in SE experiments. We illustrate the concepts discussed analysing a crossover experiment that we have run. We conclude that crossover experiments can yield valid results, provided they are properly designed and analysed, and that, if correctly addressed, carryover is no worse than other validity threats.
C1 [Vegas, Sira; Juristo, Natalia] Univ Politecn Madrid, Esceula Tecn Super Ingn Informat, Campus Montegancedo S-N, E-28660 Madrid, Spain.
   [Apa, Cecilia] Univ Republica, Fac Ingn, Inst Comp, Julio Herrera & Reissig 565, Montevideo 11300, Uruguay.
   [Juristo, Natalia] Univ Oulu, Dept Proc Informat, SF-90100 Oulu, Finland.
C3 Universidad Politecnica de Madrid; Universidad de la Republica, Uruguay;
   University of Oulu
RP Vegas, S; Juristo, N (corresponding author), Univ Politecn Madrid, Esceula Tecn Super Ingn Informat, Campus Montegancedo S-N, E-28660 Madrid, Spain.; Apa, C (corresponding author), Univ Republica, Fac Ingn, Inst Comp, Julio Herrera & Reissig 565, Montevideo 11300, Uruguay.; Juristo, N (corresponding author), Univ Oulu, Dept Proc Informat, SF-90100 Oulu, Finland.
EM svegas@fi.upm.es; ceapa@fing.edu.uy; natalia@fi.upm.es
RI VEGAS, SIRA/R-6742-2018
OI VEGAS, SIRA/0000-0001-8535-9386
FU Spanish Ministry of Economy and Competitiveness [TIN2011-23216]
FX Research funded by the Spanish Ministry of Economy and Competitiveness
   research grant TIN2011-23216.
CR Abrahao S, 2013, IEEE T SOFTWARE ENG, V39, P327, DOI 10.1109/TSE.2012.27
   [Anonymous], 2002, CROSSOVER TRIALS CLI
   [Anonymous], 1998, GUID IND E9 STAT PRI
   [Anonymous], 1990, Software testing techniques {
   BASILI VR, 1987, IEEE T SOFTWARE ENG, V13, P1278, DOI 10.1109/TSE.1987.232881
   Binkley D, 2013, EMPIR SOFTW ENG, V18, P219, DOI 10.1007/s10664-012-9201-4
   Campbell, 2002, EXPT QUASIEXPERIMENT
   Ceccato M, 2014, EMPIR SOFTW ENG, V19, P1040, DOI 10.1007/s10664-013-9248-x
   Cleophas T. J., 1999, HUMAN EXPT METHODOLO
   Cornfield J., 1976, BIOST EP ADV COMM M
   DANGELO G, 2001, J BIOPHARM STAT, V11, P27
   Dias-Neto AC, 2014, IEEE T SOFTWARE ENG, V40, P1025, DOI 10.1109/TSE.2014.2312915
   Ellis PD, 2010, ESSENTIAL GUIDE TO EFFECT SIZES: STATISTICAL POWER, META-ANALYSIS AND THE INTERPRETATION OF RESEARCH RESULTS, P1
   FLEISS JL, 1989, CONTROL CLIN TRIALS, V10, P237, DOI 10.1016/0197-2456(89)90065-2
   FREEMAN PR, 1989, STAT MED, V8, P1421, DOI 10.1002/sim.4780081202
   Gómez OS, 2014, INFORM SOFTWARE TECH, V56, P1033, DOI 10.1016/j.infsof.2014.04.004
   GRIEVE AP, 1985, BIOMETRICS, V41, P979, DOI 10.2307/2530969
   GRIZZLE JE, 1965, BIOMETRICS, V21, P467, DOI 10.2307/2528104
   HILLS M, 1979, BRIT J CLIN PHARMACO, V8, P7, DOI 10.1111/j.1365-2125.1979.tb05903.x
   Ito P.K., 1980, Handbook of statistics 1. Analysis of variance, P199, DOI 10.1016/S0169-7161(80)01009-7
   Jedlitschka A., 2008, Guide to advanced empirical software engineering, P201, DOI DOI 10.1007/978-1-84800-044-5_8
   JONES B, 1989, DESIGN ANAL CROSSOVE
   Juristo N., 2013, BASICS SOFTWARE ENG
   Kamsties E., 1995, Software Engineering - ESEC '95. 5th European Software Engineering Conference. Proceedings, P362
   Kitchenham B, 2004, ELEVENTH ANNUAL INTERNATIONAL WORKSHOP ON SOFTWARE TECHNOLOGY AND ENGINEERING PRACTICE, PROCEEDINGS, P65
   Kosar T, 2012, EMPIR SOFTW ENG, V17, P276, DOI 10.1007/s10664-011-9172-x
   Kuehl R.O., 2000, Design of experiments: statistical principles of research designand analysis, V2nd
   Latorre R, 2014, IEEE T SOFTWARE ENG, V40, P381, DOI 10.1109/TSE.2013.2295827
   Lemos OAL, 2012, PROC INT CONF SOFTW, P529, DOI 10.1109/ICSE.2012.6227163
   Levine G., 1993, EXPT METHODS PSYCHOL
   McCulloch, 2008, GEN LINEAR MIXED MOD
   Myers G J., 2004, The Art of Software Testing, V2nd ed.
   Pankratius V, 2012, PROC INT CONF SOFTW, P123, DOI 10.1109/ICSE.2012.6227200
   Roper M, 1997, INFORM SOFTWARE TECH, V39, P763, DOI 10.1016/S0950-5849(97)00028-1
   Salkind N. J., 2010, ENCY RES DESIGN, V1
   Shepperd M, 2014, IEEE T SOFTWARE ENG, V40, P603, DOI 10.1109/TSE.2014.2322358
   Trochim W, 2015, Research methods: The essential knowledge base, V2nd
   Wohlin C., 2010, EXPT SOFTWARE ENG
NR 38
TC 81
Z9 82
U1 1
U2 10
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD FEB
PY 2016
VL 42
IS 2
BP 120
EP 135
DI 10.1109/TSE.2015.2467378
PG 16
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA DE8GD
UT WOS:000370872900002
DA 2024-07-18
ER

PT J
AU Le Goues, C
   Holtschulte, N
   Smith, EK
   Brun, Y
   Devanbu, P
   Forrest, S
   Weimer, W
AF Le Goues, Claire
   Holtschulte, Neal
   Smith, Edward K.
   Brun, Yuriy
   Devanbu, Premkumar
   Forrest, Stephanie
   Weimer, Westley
TI The ManyBugs and IntroClass Benchmarks for Automated Repair of C
   Programs
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Automated program repair; benchmark; subject defect; reproducibility;
   MANYBUGS; INTROCLASS
AB The field of automated software repair lacks a set of common benchmark problems. Although benchmark sets are used widely throughout computer science, existing benchmarks are not easily adapted to the problem of automatic defect repair, which has several special requirements. Most important of these is the need for benchmark programs with reproducible, important defects and a deterministic method for assessing if those defects have been repaired. This article details the need for a new set of benchmarks, outlines requirements, and then presents two datasets, MANYBUGS and INTROCLASS, consisting between them of 1,183 defects in 15 C programs. Each dataset is designed to support the comparative evaluation of automatic repair algorithms asking a variety of experimental questions. The datasets have empirically defined guarantees of reproducibility and benchmark quality, and each study object is categorized to facilitate qualitative evaluation and comparisons by category of bug or program. The article presents baseline experimental results on both datasets for three existing repair methods, GenProg, AE, and TrpAutoRepair, to reduce the burden on researchers who adopt these datasets for their own comparative evaluations.
C1 [Le Goues, Claire] Carnegie Mellon Univ, Sch Comp Sci, Pittsburgh, PA 15213 USA.
   [Holtschulte, Neal; Forrest, Stephanie] Univ New Mexico, Dept Comp Sci, Albuquerque, NM 87131 USA.
   [Smith, Edward K.; Brun, Yuriy] Univ Massachusetts, Coll Informat & Comp Sci, Amherst, MA 01003 USA.
   [Devanbu, Premkumar] Univ Calif Davis, Dept Comp Sci, Davis, CA 95616 USA.
   [Weimer, Westley] Univ Virginia, Dept Comp Sci, Charlottesville, VA 22904 USA.
C3 Carnegie Mellon University; University of New Mexico; University of
   Massachusetts System; University of Massachusetts Amherst; University of
   California System; University of California Davis; University of
   Virginia
RP Le Goues, C (corresponding author), Carnegie Mellon Univ, Sch Comp Sci, Pittsburgh, PA 15213 USA.
EM clegoues@cs.cmuedu; neal.holts@cs.unm.ed; tedks@cs.unm.ed;
   brun@cs.unm.ed; devanbu@cs.ucdavis.edu; forrest@cs.unm.ed;
   weimer@cs.virginia.edu
RI /AAZ-7265-2020
OI Le Goues, Claire/0000-0002-3931-060X; Forrest,
   Stephanie/0000-0002-5904-1646; Devanbu, Prem/0000-0002-4346-5276; Brun,
   Yuriy/0000-0003-3027-7986
FU AFOSR [FA9550-07-1-0532, FA9550-10-1-0277]; US Defense Advanced Research
   Projects Agency (DARPA) [P-1070-113237]; US Department of Energy (DOE)
   [DE-AC02-05CH11231]; US National Science Foundation (NSF) [CCF-0729097,
   CCF-0905236, CCF-1446683, CNS-0905222]; Santa Fe Institute; Division of
   Computing and Communication Foundations; Direct For Computer & Info Scie
   & Enginr [1446683, 1646813, 1446966] Funding Source: National Science
   Foundation; Division of Computing and Communication Foundations; Direct
   For Computer & Info Scie & Enginr [0954024, 0905373] Funding Source:
   National Science Foundation
FX The authors gratefully acknowledge the partial support of AFOSR
   (FA9550-07-1-0532, FA9550-10-1-0277), US Defense Advanced Research
   Projects Agency (DARPA) (P-1070-113237), US Department of Energy (DOE)
   (DE-AC02-05CH11231), US National Science Foundation (NSF) (CCF-0729097,
   CCF-0905236, CCF-1446683, CNS-0905222), and the Santa Fe Institute. In
   addition, Martin Rinard provided insightful discussions regarding repair
   quality and identified and corrected several concerns in the defect
   scenarios.
CR [Anonymous], P WORKSH PAR DISTR S
   [Anonymous], P JOINT M EUR SOFTW
   [Anonymous], 2006, P 2006 INT S SOFTWAR
   [Anonymous], P 17 INT C THEOR APP
   [Anonymous], 2015, CORR
   [Anonymous], P 16 INT C THEOR APP
   [Anonymous], 2013, Tech. Rep.
   [Anonymous], 2013, P 2013 INT S SOFTW T
   [Anonymous], SPEC OPEN SYSTEMS GR
   [Anonymous], 2013, The Economist, V409
   [Anonymous], 2014, P 2014 INT S SOFTW T
   [Anonymous], SAM SOFTW SOFTW ASS
   [Anonymous], 2010, International Conference on Software Maintenance, DOI DOI 10.1109/ICSM.2010.5609691
   Anvik John, 2006, P 28 INT C SOFTWARE, P361, DOI DOI 10.1145/1134285.1134336
   Arcuri A, 2011, LECT NOTES COMPUT SC, V6956, P33, DOI 10.1007/978-3-642-23716-4_6
   Arcuri A, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P1003
   Arcuri A, 2008, IEEE C EVOL COMPUTAT, P162, DOI 10.1109/CEC.2008.4630793
   Bienia C, 2008, PACT'08: PROCEEDINGS OF THE SEVENTEENTH INTERNATIONAL CONFERENCE ON PARALLEL ARCHITECTURES AND COMPILATION TECHNIQUES, P72, DOI 10.1145/1454115.1454128
   Bird C, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P121, DOI 10.1145/1595696.1595716
   Blackburn SM, 2006, ACM SIGPLAN NOTICES, V41, P169, DOI 10.1145/1167515.1167488
   Bradbury J.S., 2010, International Symposium on Search Based Software Engineering - Fast Abstracts, P1
   Britton T, 2013, Reversible Debugging Software "Quantify the Time and Cost Saved Using Reversible Debuggers
   Cadar C., 2008, Proceedings of the 8th USENIX conference on Operating systems design and implementation, OSDI'08, (USA), P209
   Carbin M, 2011, LECT NOTES COMPUT SC, V6813, P609, DOI 10.1007/978-3-642-22655-7_28
   Carzaniga A., 2010, Proceedings of the eighteenth ACM SIGSOFT international symposium on Foundations of software engineering, P237
   Carzaniga A, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P782, DOI 10.1109/ICSE.2013.6606624
   Coker Z, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P792, DOI 10.1109/ICSE.2013.6606625
   Dallmeier V., 2007, P 22 IEEE ACM INT C, P433
   Dallmeier V, 2009, IEEE INT CONF AUTOM, P550, DOI 10.1109/ASE.2009.15
   Debroy Vidroha, 2010, Proceedings of the Third IEEE International Conference on Software Testing, Verification and Validation (ICST 2010), P65, DOI 10.1109/ICST.2010.66
   Do HS, 2005, EMPIR SOFTW ENG, V10, P405, DOI 10.1007/s10664-005-3861-2
   Elkarablieh B, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P855, DOI 10.1145/1368088.1368222
   Fast E., 2010, Conference on Genetic and Evolutionary Computation, P965
   Fry Z.P., 2012, INT S SOFTWARE TESTI, P177, DOI 10.1145/04000800.2336775
   Gopinath D, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P243, DOI 10.1145/2568225.2568303
   Gopinath D, 2011, LECT NOTES COMPUT SC, V6605, P173, DOI 10.1007/978-3-642-19835-9_15
   Harman M, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P342, DOI 10.1109/FOSE.2007.29
   He HF, 2004, LECT NOTES COMPUT SC, V2984, P267
   Nguyen HDT, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P772, DOI 10.1109/ICSE.2013.6606623
   HUTCHINS M, 1994, PROC INT CONF SOFTW, P191, DOI 10.1109/ICSE.1994.296778
   Jeffrey D, 2009, INT C PROGRAM COMPRE, P70, DOI 10.1109/ICPC.2009.5090029
   Jha S., 2010, P 32 ACM IEEE INT C, V1, P215, DOI DOI 10.1145/1806799.1806833
   Jin GL, 2011, PLDI 11: PROCEEDINGS OF THE 2011 ACM CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P389
   Just R, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P654, DOI 10.1145/2635868.2635929
   Kaleeswaran S, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P266, DOI 10.1145/2568225.2568258
   Kim D, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P802, DOI 10.1109/ICSE.2013.6606626
   Knight J. C., 1985, Proceedings of the 8th International Conference on Software Engineering (Cat. No.85CH2139-4), P337
   Le Goues C., 2012, IEEE Transactions on Software Engineering, V38, P54, DOI 10.1109/TSE.2011.104
   Le Goues C, 2013, SOFTWARE QUAL J, V21, P421, DOI 10.1007/s11219-013-9208-0
   Le Goues C, 2012, PROCEEDINGS OF THE FOURTEENTH INTERNATIONAL CONFERENCE ON GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P959, DOI 10.1145/2330163.2330296
   Le Goues C, 2012, PROC INT CONF SOFTW, P3, DOI 10.1109/ICSE.2012.6227211
   Liblit B, 2005, ACM SIGPLAN NOTICES, V40, P15, DOI 10.1145/1064978.1065014
   Liu P, 2012, PROC INT CONF SOFTW, P299, DOI 10.1109/ICSE.2012.6227184
   Lu S., 2005, P WORKSH EV SOFTW DE, P16
   Monperrus M, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P234, DOI 10.1145/2568225.2568324
   Orlov M, 2011, IEEE T EVOLUT COMPUT, V15, P166, DOI 10.1109/TEVC.2010.2052622
   Parnin C., 2011, P 2011 INT S SOFTWAR, P199, DOI [10.1145/2001420.2001445, DOI 10.1145/2001420.2001445]
   Pei Y, 2014, IEEE T SOFTWARE ENG, V40, P427, DOI 10.1109/TSE.2014.2312918
   Perelman D, 2014, ACM SIGPLAN NOTICES, V49, P408, DOI [10.1145/2594291.2594297, 10.1145/2666356.2594297]
   Perkins JH, 2009, SOSP'09: PROCEEDINGS OF THE TWENTY-SECOND ACM SIGOPS SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES, P87
   Qi YH, 2013, PROC IEEE INT CONF S, P180, DOI 10.1109/ICSM.2013.29
   Schulte E, 2014, GENET PROGRAM EVOL M, V15, P281, DOI 10.1007/s10710-013-9195-8
   Sidiroglou S, 2005, IEEE SECUR PRIV, V3, P41, DOI 10.1109/MSP.2005.144
   Sim SE, 2003, PROC INT CONF SOFTW, P74, DOI 10.1109/ICSE.2003.1201189
   Weimer Westley, 2013, Search Based Software Engineering. 5th International Symposium, SSBSE 2013. Proceedings: LNCS 8084, P1, DOI 10.1007/978-3-642-39742-4_1
   Weimer W, 2013, IEEE INT CONF AUTOM, P356, DOI 10.1109/ASE.2013.6693094
   Weimer W, 2009, PROC INT CONF SOFTW, P364, DOI 10.1109/ICSE.2009.5070536
   Wilkerson JL, 2012, PROCEEDINGS OF THE FOURTEENTH INTERNATIONAL CONFERENCE ON GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P1229, DOI 10.1145/2330163.2330333
   Yue Jia, 2011, IEEE Transactions on Software Engineering, V37, P649, DOI 10.1109/TSE.2010.62
NR 69
TC 177
Z9 189
U1 0
U2 14
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD DEC
PY 2015
VL 41
IS 12
BP 1236
EP 1256
DI 10.1109/TSE.2015.2454513
PG 21
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA CY5TP
UT WOS:000366470700006
OA hybrid, Green Submitted
DA 2024-07-18
ER

PT J
AU Rosner, N
   Geldenhuys, J
   Aguirre, NM
   Visser, W
   Frias, MF
AF Rosner, Nicolas
   Geldenhuys, Jaco
   Aguirre, Nazareno M.
   Visser, Willem
   Frias, Marcelo F.
TI BLISS: Improved Symbolic Execution by Bounded Lazy Initialization with
   SAT Support
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Symbolic execution; lazy initialization; tight field bounds; Symbolic
   PathFinder
ID MODEL CHECKING; VERIFICATION
AB Lazy Initialization (LI) allows symbolic execution to effectively deal with heap-allocated data structures, thanks to a significant reduction in spurious and redundant symbolic structures. Bounded lazy initialization (BLI) improves on LI by taking advantage of precomputed relational bounds on the interpretation of class fields in order to reduce the number of spurious structures even further. In this paper we present bounded lazy initialization with SAT support (BLISS), a novel technique that refines the search for valid structures during the symbolic execution process. BLISS builds upon BLI, extending it with field bound refinement and satisfiability checks. Field bounds are refined while a symbolic structure is concretized, avoiding cases that, due to the concrete part of the heap and the field bounds, can be deemed redundant. Satisfiability checks on refined symbolic heaps allow us to prune these heaps as soon as they are identified as infeasible, i.e., as soon as it can be confirmed that they cannot be extended to any valid concrete heap. Compared to LI and BLI, BLISS reduces the time required by LI by up to four orders of magnitude for the most complex data structures. Moreover, the number of partially symbolic structures obtained by exploring program paths is reduced by BLISS by over 50 percent, with reductions of over 90 percent in some cases (compared to LI). BLISS uses less memory than LI and BLI, which enables the exploration of states unreachable by previous techniques.
C1 [Rosner, Nicolas] Univ Buenos Aires, Dept Comp Sci, FCEyN, Buenos Aires, DF, Argentina.
   [Geldenhuys, Jaco; Visser, Willem] Univ Stellenbosch, Dept Comp Sci, ZA-7600 Stellenbosch, South Africa.
   [Aguirre, Nazareno M.] Univ Nacl Rio Cuarto, Dept Comp Sci, FCEFQyN, Rio Cuarto, Argentina.
   [Aguirre, Nazareno M.] Consejo Nacl Invest Cient & Tecn, Rio Cuarto, Argentina.
   [Frias, Marcelo F.] Univ Buenos Aires, Dept Software Engn, Inst Tecnol Buenos Aires, Buenos Aires, DF, Argentina.
   [Frias, Marcelo F.] Consejo Nacl Invest Cient & Tecn, RA-1033 Buenos Aires, DF, Argentina.
C3 University of Buenos Aires; Stellenbosch University; Universidad
   Nacional Rio Cuarto; Consejo Nacional de Investigaciones Cientificas y
   Tecnicas (CONICET); University of Buenos Aires; Consejo Nacional de
   Investigaciones Cientificas y Tecnicas (CONICET)
RP Rosner, N (corresponding author), Univ Buenos Aires, Dept Comp Sci, FCEyN, Buenos Aires, DF, Argentina.
EM nrosner@dc.uba.ar; jaco@cs.sun.ac.za; naguirre@dc.exa.unrc.edu.ar;
   willem@gmail.com; mfrias@itba.edu.ar
FU NPRP from Qatar National Research Fund [NPRP-4-1109-1-174]
FX The authors thank Elena Morin for proofreading this paper. This
   publication was made possible by NPRP grant number NPRP-4-1109-1-174
   from the Qatar National Research Fund (a member of Qatar Foundation).
   The statements made herein are solely the responsibility of the authors.
   Marcelo F. Frias is the corresponding author.
CR [Anonymous], 2010, Proceedings of the 19th international symposium on Software testing and analysis, DOI 10.1145/1831708.1831732
   Boyapati C., 2002, Software Engineering Notes, V27, P123, DOI 10.1145/566171.566191
   Cadar C., 2008, Proceedings of the 8th USENIX conference on Operating systems design and implementation, OSDI'08, (USA), P209
   Cadar C, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1066, DOI 10.1145/1985793.1985995
   Chain P., 2005, FMCO LECT NOTES COMP, V4111, P342
   Clarke EM, 1999, MODEL CHECKING, P1
   Deng XH, 2007, SEFM 2007: FIFTH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING AND FORMAL METHODS, PROCEEDINGS, P273, DOI 10.1109/SEFM.2007.33
   Deng XH, 2006, IEEE INT CONF AUTOM, P157
   Dennis G, 2008, LECT NOTES COMPUT SC, V5295, P130, DOI 10.1007/978-3-540-87873-5_13
   Flanagan C., 2002, P ACM SIGPLAN C PROG
   Galeotti J. P., 2010, P 19 INT S SOFTW TES, P234
   Galeotti JP, 2013, IEEE T SOFTWARE ENG, V39, P1283, DOI 10.1109/TSE.2013.15
   Geldenhuys Jaco, 2013, NASA Formal Methods. 5th International Symposium, NFM 2013. Proceedings, P229, DOI 10.1007/978-3-642-38088-4_16
   Jackson D., 2000, Software Engineering Notes, V25, P14, DOI 10.1145/347636.383378
   Khurshid S, 2003, LECT NOTES COMPUT SC, V2619, P553
   KING JC, 1976, COMMUN ACM, V19, P385, DOI 10.1145/360248.360252
   Pasareanu CS, 2013, AUTOMAT SOFTW ENG, V20, P391, DOI 10.1007/s10515-013-0122-2
   Rosner N., 2013, P INT S SOFTW TEST A, P23
   Shao Danhua., 2007, Symposium on Library-Centric Software Design, P11
   Vaziri M, 2003, LECT NOTES COMPUT SC, V2619, P505
   Visser W., 2003, Automated Software Engineering, V10, P203, DOI 10.1023/A:1022920129859
   Visser W., 2004, Software Engineering Notes, V29, P97, DOI 10.1145/1013886.1007526
   Visser Willem, 2012, P FSE, DOI DOI 10.1145/2393596.2393665
NR 23
TC 24
Z9 26
U1 0
U2 6
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUL
PY 2015
VL 41
IS 7
BP 639
EP 660
DI 10.1109/TSE.2015.2389225
PG 22
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA CN2JO
UT WOS:000358247100002
OA Green Published
DA 2024-07-18
ER

PT J
AU Cunha, J
   Fernandes, JP
   Mendes, J
   Saraiva, J
AF Cunha, Jacome
   Fernandes, Joao Paulo
   Mendes, Jorge
   Saraiva, Joao
TI Embedding, Evolution, and Validation of Model-Driven Spreadsheets
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Spreadsheets; models; ClassSheets; embedding; evolution; empirical
   validation
ID GENERATION
AB This paper proposes and validates a model-driven software engineering technique for spreadsheets. The technique that we envision builds on the embedding of spreadsheet models under a widely used spreadsheet system. This means that we enable the creation and evolution of spreadsheet models under a spreadsheet system. More precisely, we embed ClassSheets, a visual language with a syntax similar to the one offered by common spreadsheets, that was created with the aim of specifying spreadsheets. Our embedding allows models and their conforming instances to be developed under the same environment. In practice, this convenient environment enhances evolution steps at the model level while the corresponding instance is automatically co-evolved. Finally, we have designed and conducted an empirical study with human users in order to assess our technique in production environments. The results of this study are promising and suggest that productivity gains are realizable under our model-driven spreadsheet development setting.
C1 [Cunha, Jacome] Univ Nova Lisboa, P-1200 Lisbon, Portugal.
   [Cunha, Jacome; Fernandes, Joao Paulo; Saraiva, Joao] INESC TEC, HASLab, Oporto, Portugal.
   [Fernandes, Joao Paulo] Univ Beira Interior, Dept Informat, Covilha, Portugal.
   [Mendes, Jorge; Saraiva, Joao] Univ Minho, P-4719 Braga, Portugal.
   [Mendes, Jorge] Inst Politecn Porto, ESTGF, Oporto, Portugal.
C3 Universidade Nova de Lisboa; INESC TEC; Universidade da Beira Interior;
   Universidade do Minho; Instituto Politecnico do Porto
RP Cunha, J (corresponding author), Univ Nova Lisboa, P-1200 Lisbon, Portugal.
EM jacome@fct.unl.pt; jpf@di.ubi.pt; jorgemendes@di.uminho.pt;
   jas@di.uminho.pt
RI Saraiva, João/L-6113-2015; Fernandes, João/IUN-2117-2023; Fernandes,
   Joao Paulo/A-1929-2013; Cunha, Jacome/A-1213-2013
OI Saraiva, João/0000-0002-5686-7151; Fernandes, Joao
   Paulo/0000-0002-1952-9460; Mendes, Jorge/0000-0002-7977-9453; Cunha,
   Jacome/0000-0002-4713-3834
FU ERDF-European Regional Development Fund through the COMPETE Programme
   (operational programme for competitiveness); National Funds through the
   FCT-Fundacao para a Ciencia e a Tecnologia (Portuguese Foundation for
   Science and Technology) [FCOMP-01-0124-FEDER-020532,
   FCOMP-01-0124-FEDER-010048]; Fundacao para a Ciencia e a Tecnologia
   [SFRH/BPD/73358/2010, SFRH/ BPD/46987/2008]; Fundação para a Ciência e a
   Tecnologia [SFRH/BPD/73358/2010, SFRH/BPD/46987/2008] Funding Source:
   FCT
FX The authors of this paper would like to express their gratitude to Dr.
   Nuno Alpoim, CEO of Agere, for providing us and our study with a
   spreadsheet under usage in industry. This work is funded by
   ERDF-European Regional Development Fund through the COMPETE Programme
   (operational programme for competitiveness) and by National Funds
   through the FCT-Fundacao para a Ciencia e a Tecnologia (Portuguese
   Foundation for Science and Technology) within projects
   FCOMP-01-0124-FEDER-020532 and FCOMP-01-0124-FEDER-010048. This work was
   also supported by Fundacao para a Ciencia e a Tecnologia with grants
   SFRH/BPD/73358/2010 and SFRH/ BPD/46987/2008.
CR Abraham R, 2005, 2005 IEEE SYMPOSIUM ON VISUAL LANGUAGE AND HUMAN-CENTRIC COMPUTING, PROCEEDINGS, P189, DOI 10.1109/VLHCC.2005.70
   Abraham R, 2007, J VISUAL LANG COMPUT, V18, P71, DOI 10.1016/j.jvlc.2006.06.001
   Abraham R, 2007, PROC INT CONF SOFTW, P251
   Abraham R, 2006, IEEE SYMPOSIUM ON VISUAL LANGUAGES AND HUMAN-CENTRIC COMPUTING, PROCEEDINGS, P43
   Abraham R, 2009, IEEE T SOFTWARE ENG, V35, P94, DOI 10.1109/TSE.2008.73
   Abreu R., 2012, 15 IB C SOFTW ENG CI, P1
   Abreu R, 2014, PROC IEEE INT CONF S, P111, DOI 10.1109/ICSME.2014.33
   Abreu R, 2012, PROC INT SYMP SOFTW, P159, DOI 10.1109/ISSREW.2012.31
   Alves T., 2008, P 9 INT WORKSH RUL B, P3
   [Anonymous], 1993, A Small Matter of Programming
   [Anonymous], 2006, DECISION LINE
   [Anonymous], 1983, The theory of relational databases
   Asavametha A., 2012, THESIS OREGON STATE
   Baker P, 2005, LECT NOTES COMPUT SC, V3713, P476, DOI 10.1007/11557432_36
   Beckwith Laura, 2011, End-User Development. Proceedings Third International Symposium, IS-EUD 2011, P282, DOI 10.1007/978-3-642-21530-8_27
   Beckwith L., 2011, Proceedings of the European Spreadsheet Risks Interest Group, EuSpRIG'11, P87
   Carver J., 2006, Proceedings of the 2006 ACM/IEEE International Symposium on Empirical Software Engineering'06, P278
   Cook T., 1979, Quasi experimental design and analysis
   Cunha A, 2007, ELECTRON NOTES THEOR, V174, P17, DOI 10.1016/j.entcs.2006.10.019
   Cunha A, 2006, LECT NOTES COMPUT SC, V4085, P284
   Cunha Alcino., 2007, P 2007 ACM SIGPLAN W, P11, DOI [10.1145/1244381.1244385, DOI 10.1145/1244381.1244385]
   Cunha Jacome, 2012, Theory and Practice of Model Transformations. Proceedings 5th International Conference, ICMT 2012, P105, DOI 10.1007/978-3-642-30476-7_7
   Cunha J., 2012, ACM S APPL COMPUTING, P1151
   Cunha J, 2012, S VIS LANG HUM CEN C, P243, DOI 10.1109/VLHCC.2012.6344535
   Cunha J, 2012, S VIS LANG HUM CEN C, P19, DOI 10.1109/VLHCC.2012.6344473
   Cunha J, 2012, LECT NOTES COMPUT SC, V7336, P202, DOI 10.1007/978-3-642-31128-4_15
   Cunha J, 2011, S VIS LANG HUM CEN C, P179, DOI 10.1109/VLHCC.2011.6070396
   Cunha J, 2011, LECT NOTES COMPUT SC, V6603, P186, DOI 10.1007/978-3-642-19811-3_14
   de Roever W. P., 1998, DATA REFINEMENT MODE, V46
   Di Ruscio D, 2012, IEEE SOFTWARE, V29, P78, DOI 10.1109/MS.2012.153
   Engels Gregor., 2005, ASE 05 P 20 IEEEACM, P124
   Erwig M, 2005, PROC INT CONF SOFTW, P136
   Erwig M, 2006, J FUNCT PROGRAM, V16, P293, DOI 10.1017/S0956796805005794
   Fisher M, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P141, DOI 10.1109/ICSE.2002.1007963
   Fisher M, 2006, ACM T SOFTW ENG METH, V15, P150, DOI 10.1145/1131421.1131423
   Garcés K, 2009, LECT NOTES COMPUT SC, V5562, P34, DOI 10.1007/978-3-642-02674-4_4
   Henley AZ, 2014, 32ND ANNUAL ACM CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS (CHI 2014), P2511, DOI 10.1145/2556288.2557073
   Hermans F, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P409, DOI 10.1109/ICSM.2012.6405300
   Hermans F, 2012, PROC INT CONF SOFTW, P441, DOI 10.1109/ICSE.2012.6227171
   Hermans F, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P451, DOI 10.1145/1985793.1985855
   Hermans F, 2010, LECT NOTES COMPUT SC, V6183, P52, DOI 10.1007/978-3-642-14107-2_4
   Hinze R, 2006, LECT NOTES COMPUT SC, V3945, P13
   Host M., 2000, Empirical Software Engineering, V5, P201, DOI 10.1023/A:1026586415054
   Jannach D, 2014, J SYST SOFTWARE, V94, P129, DOI 10.1016/j.jss.2014.03.058
   JONES SP, 2004, MSCIS0526 U PENNS
   Ko AJ, 2011, ACM COMPUT SURV, V43, DOI 10.1145/1922649.1922658
   Konstantin S., 2014, P 1 WORKSH SOFTW ENG, P3
   Lämmel R, 2004, SCI COMPUT PROGRAM, V52, P1, DOI 10.1016/j.scico.2004.03.001
   Lammel R., 2002, Practical Aspects of Declarative Languages. 4th International Symposium, PADL 2002. Proceedings (Lecture Notes in Computer Science Vol.2257), P137
   Lehman M. M., 1996, Software Process Technology. 5th European Workshop, EWSPT '96 Proceedings, P108, DOI 10.1007/BFb0017737
   Luckey M, 2012, J VISUAL LANG COMPUT, V23, P267, DOI 10.1016/j.jvlc.2011.11.009
   MORGAN C, 1990, ACTA INFORM, V27, P481, DOI 10.1007/BF00277386
   Oliveira J. N., 1990, Formal Aspects of Computing, V2, P1, DOI 10.1007/BF01888215
   Oliveira JN, 2008, LECT NOTES COMPUT SC, V5235, P134, DOI 10.1007/978-3-540-88643-3_4
   Panko R., 2000, EUSPRIG
   Panko R. R., 2014, P 1 WORKSH SOFTW ENG, P7
   Panko R.R., 2008, CoRR
   Pournelle G. H., 1953, Journal of Mammalogy, V34, P133, DOI 10.1890/0012-9658(2002)083[1421:SDEOLC]2.0.CO;2
   Rose M., 2010, MOD EV WORKSH OLS NO
   Rothermel G, 2001, ACM T SOFTW ENG METH, V10, P110, DOI 10.1145/366378.366385
   Stevens P., 2003, P 6 INT C UN MOD LAN, V2863
   Swierstra S. D., 1999, LECT NOTES COMPUTER, V1608
   Vermolen S, 2008, LECT NOTES COMPUT SC, V5301, P630, DOI 10.1007/978-3-540-87875-9_44
   Whittle J, 2014, IEEE SOFTWARE, V31, P79, DOI 10.1109/MS.2013.65
   Wohlin C., 2012, Experimentation in Software Engineering
NR 65
TC 12
Z9 14
U1 0
U2 11
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAR
PY 2015
VL 41
IS 3
BP 241
EP 263
DI 10.1109/TSE.2014.2361141
PG 23
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA CD9ZG
UT WOS:000351460000002
OA Green Published, Green Submitted
DA 2024-07-18
ER

PT J
AU Lin, SW
   André, É
   Liu, Y
   Sun, J
   Dong, JS
AF Lin, Shang-Wei
   Andre, Etienne
   Liu, Yang
   Sun, Jun
   Dong, Jin Song
TI Learning Assumptions for Compositional Verification of Timed Systems
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Automatic assume-guarantee reasoning; model checking; timed systems
ID GUARANTEE; ASSUME; AUTOMATA
AB Compositional techniques such as assume-guarantee reasoning (AGR) can help to alleviate the state space explosion problem associated with model checking. However, compositional verification is difficult to be automated, especially for timed systems, because constructing appropriate assumptions for AGR usually requires human creativity and experience. To automate compositional verification of timed systems, we propose a compositional verification framework using a learning algorithm for automatic construction of timed assumptions for AGR. We prove the correctness and termination of the proposed learning-based framework, and experimental results show that our method performs significantly better than traditional monolithic timed model checking.
C1 [Lin, Shang-Wei] Natl Univ Singapore, Temasek Labs, Singapore 117417, Singapore.
   [Andre, Etienne] Univ Paris 13, Sorbonne Paris Cite, Inst Galilee, LIPN, F-93430 Villetaneuse, France.
   [Andre, Etienne] CNRS, UMR 7030, F-93430 Villetaneuse, France.
   [Liu, Yang] Nanyang Technol Univ, Sch Comp Engn, Singapore 639798, Singapore.
   [Sun, Jun] Singapore Univ Technol & Design, Singapore 138682, Singapore.
   [Dong, Jin Song] Natl Univ Singapore, Dept Comp Sci, Sch Comp, Singapore 117417, Singapore.
C3 National University of Singapore; Universite Paris 13; Centre National
   de la Recherche Scientifique (CNRS); Nanyang Technological University;
   Singapore University of Technology & Design; National University of
   Singapore
RP Lin, SW (corresponding author), Natl Univ Singapore, Temasek Labs, 5A Engn Dr 1,09-02, Singapore 117417, Singapore.
EM tsllsw@nus.edu.sg; Etienne.Andre@lipn.univ-paris13.fr;
   yangliu@ntu.edu.sg; sunjun@sutd.edu.sg; dongjs@comp.nus.edu.sg
RI liu, yang/HIU-0559-2022; liu, yang/HHY-8583-2022; yang,
   liu/HTN-9175-2023; Liu, Yang/HNJ-6693-2023; liu, yang/HQY-7531-2023;
   Liu, Yang/D-2306-2013; LIU, YANG/HWQ-4615-2023; Lin,
   Shang-Wei/D-9749-2017; yang, liu/GVU-8760-2022
OI Liu, Yang/0000-0001-7300-9215; Andre, Etienne/0000-0001-8473-9555; Lin,
   Shang-Wei/0000-0002-9726-3434; Sun, Jun/0000-0002-3545-1392
FU TRF project [R394-000-063-23]; Temasek Laboratories at National
   University of Singapore [R394-000-068-232]; CNRS STIC-Asie project
   "Compositional Analysis of Timed Systems"
FX The authors thank Dr. Dimitra Giannakopoulou for her helpful and
   constructive suggestions and the anonymous reviewers for their detailed
   review comments. This paper is a revised and substantially extended
   version of the paper presented at the Ninth International Symposium on
   Automated Technology for Verification and Analysis (ATVA 2011) [25].
   This work proposes a compositional framework for timed systems, which
   uses and guides the learning algorithm proposed in [25] to automatically
   generate timed assumptions needed by AGR. The tool paper [29] about the
   implementation of the proposed framework has been presented at the 18th
   International Symposium on Formal Methods (FM 2012). This work was
   supported by the TRF project R394-000-063-23 and the seed project
   R394-000-068-232 in Temasek Laboratories at National University of
   Singapore, and partially supported by the CNRS STIC-Asie project
   "Compositional Analysis of Timed Systems." S.-W. Lin is the
   corresponding author.
CR Alur R, 2005, LECT NOTES COMPUT SC, V3576, P548
   Alur R, 1999, THEOR COMPUT SCI, V211, P253, DOI 10.1016/S0304-3975(97)00173-4
   ANGLUIN D, 1987, INFORM COMPUT, V75, P87, DOI 10.1016/0890-5401(87)90052-6
   Barringer H., 2003, P 2 WORKSHOP SPECIFI, P14
   Bobaru MG, 2008, LECT NOTES COMPUT SC, V5123, P135
   BRYANT RE, 1986, IEEE T COMPUT, V35, P677, DOI 10.1109/TC.1986.1676819
   Chaki S, 2007, LECT NOTES COMPUT SC, V4424, P276
   Clarke E. M., 1989, Proceedings. Fourth Annual Symposium on Logic in Computer Science (Cat. No.89CH2753-2), P353, DOI 10.1109/LICS.1989.39190
   Clarke. E. M., 1982, LOGICS OF PROGRAMS, P52, DOI [10 . 1007 / BFb0025774, DOI 10.1007/BFB0025774]
   Clarke EdmundM., 2000, Proceedings of the International Conference on Computer Aided Veri cation (CAV), P154, DOI 10.1007/1072216715
   Cobleigh J., 2006, PROC INT S SOFTWARE, P97
   Cobleigh JM, 2003, LECT NOTES COMPUT SC, V2619, P331
   De Queiroz MH, 2005, DISCRETE EVENT DYN S, V15, P375, DOI 10.1007/s10626-005-4058-y
   Gheorghiu M, 2007, LECT NOTES COMPUT SC, V4424, P292
   Grinchtein O, 2010, THEOR COMPUT SCI, V411, P4029, DOI 10.1016/j.tcs.2010.07.008
   Grumberg O., 1991, P 2 INT C CONC THEOR, P250
   HELMBOLD D, 1985, IEEE SOFTWARE, V2, P47, DOI 10.1109/MS.1985.230351
   HENZINGER TA, 1994, INFORM COMPUT, V112, P273, DOI 10.1006/inco.1994.1060
   Henzinger TA, 1998, LECT NOTES COMPUT SC, V1427, P440, DOI 10.1007/BFb0028765
   Hopcroft J.E., 1979, Introduction to Automata Theory, Languages, and Computation
   Howar F, 2011, LECT NOTES COMPUT SC, V6538, P263, DOI 10.1007/978-3-642-18275-4_19
   Laroussinie F., 1995, CONCUR '95: Concurrency Theory. 6th International Conference. Proceedings, P27
   Leduc RJ, 2006, IEEE T CONTR SYST T, V14, P654, DOI 10.1109/TCST.2006.876635
   Lin SW, 2011, LECT NOTES COMPUT SC, V6996, P463, DOI 10.1007/978-3-642-24372-1_35
   Lin SW, 2012, IEEE T COMPUT, V61, P843, DOI 10.1109/TC.2011.99
   Lin SW, 2011, IEEE T COMPUT, V60, P734, DOI 10.1109/TC.2010.94
   Lin SW, 2005, LECT NOTES COMPUT SC, V3707, P370
   Nam W, 2006, LECT NOTES COMPUT SC, V4218, P170
   Pnueli A., 1985, Proceedings of the NATO Advanced Study Institute on Logics and Models of Concurrent Systems, P123, DOI DOI 10.1007/978-3-642-82453-1_5
   Qiwen Xu, 1997, Formal Aspects of Computing, V9, P149, DOI 10.1007/BF01211617
   Queille J.-P., 1982, ser. Lecture Notes in Computer Science, P337, DOI [DOI 10.1007/3-540-11494-722, DOI 10.1007/3-540-11494-7_22, 10 . 1007 / 3 - 540 - 11494-7_22]
   RIVEST RL, 1993, INFORM COMPUT, V103, P299, DOI 10.1006/inco.1993.1021
   Shang-Wei Lin, 2012, FM 2012: Formal Methods. Proceedings of the 18th International Symposium, P272, DOI 10.1007/978-3-642-32759-9_24
   Sinha N, 2007, LECT NOTES COMPUT SC, V4590, P39
   Sun J, 2009, LECT NOTES COMPUT SC, V5643, P709, DOI 10.1007/978-3-642-02658-4_59
NR 35
TC 15
Z9 16
U1 0
U2 9
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD FEB
PY 2014
VL 40
IS 2
BP 137
EP 153
DI 10.1109/TSE.2013.57
PG 17
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA AF4FD
UT WOS:000334666000003
OA Green Submitted, Green Published
DA 2024-07-18
ER

PT J
AU Maalej, W
   Robillard, MP
AF Maalej, Walid
   Robillard, Martin P.
TI Patterns of Knowledge in API Reference Documentation
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE API documentation; software documentation; empirical study; content
   analysis; grounded method; data mining; pattern mining; Java; .NET
ID QUESTIONS
AB Reading reference documentation is an important part of programming with application programming interfaces (APIs). Reference documentation complements the API by providing information not obvious from the API syntax. To improve the quality of reference documentation and the efficiency with which the relevant information it contains can be accessed, we must first understand its content. We report on a study of the nature and organization of knowledge contained in the reference documentation of the hundreds of APIs provided as a part of two major technology platforms: Java SDK 6 and .NET 4.0. Our study involved the development of a taxonomy of knowledge types based on grounded methods and independent empirical validation. Seventeen trained coders used the taxonomy to rate a total of 5,574 randomly sampled documentation units to assess the knowledge they contain. Our results provide a comprehensive perspective on the patterns of knowledge in API documentation: observations about the types of knowledge it contains and how this knowledge is distributed throughout the documentation. The taxonomy and patterns of knowledge we present in this paper can be used to help practitioners evaluate the content of their API documentation, better organize their documentation, and limit the amount of low-value content. They also provide a vocabulary that can help structure and facilitate discussions about the content of APIs.
C1 [Maalej, Walid] Univ Hamburg, Dept Informat, Mobile Serv & Software Engn Grp, Hamburg, Germany.
   [Robillard, Martin P.] McGill Univ, Sch Comp Sci, Montreal, PQ, Canada.
C3 University of Hamburg; McGill University
RP Maalej, W (corresponding author), Univ Hamburg, Dept Informat, Mobile Serv & Software Engn Grp, Hamburg, Germany.
EM maalej@informatik.uni-hamburg.de; martin@cs.mcgill.ca
CR [Anonymous], EMPIRICAL SOFTWARE E
   Butler G, 1998, 1998 ASIA PACIFIC SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P94, DOI 10.1109/APSEC.1998.733596
   Butler G., 2000, ACM COMPUTING SURVEY, V32
   Corbin J, 2008, Techniques and procedures for developing grounded theory, V3rd
   Dagenais B., 2010, P 18 INT S FDN SOFTW, P127
   de Souza C. R. B., 2004, Software Engineering Notes, V29, P221, DOI 10.1145/1041685.1029925
   Ellis B, 2007, PROC INT CONF SOFTW, P302
   Erdem A, 1998, 13TH IEEE INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P230, DOI 10.1109/ASE.1998.732658
   Erdos K, 1998, PROG COMPREHEN, P98, DOI 10.1109/WPC.1998.693322
   Fritz T., 2010, Proceedings of the 32nd International Conference on Software Engineering - Volume 1, ICSE '10, V1, P175
   Gravetter F.J., 2005, ESSENTIALS STAT BEHA
   Gunderloy M., 2002, UNDERSTANDING USING
   HERBSLEB JD, 1993, HUMAN FACTORS IN COMPUTING SYSTEMS, P7
   Hornik Kurt, 2005, Journal of Statistical Software, V14, DOI DOI 10.18637/JSS.V014.I15
   Hou DQ, 2005, PROG COMPREHEN, P87
   Jeong SY, 2009, LECT NOTES COMPUT SC, V5435, P86
   Johnson WL, 1995, 10TH KNOWLEDGE-BASED SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P155, DOI 10.1109/KBSE.1995.490131
   Kiczales G, 1996, IEEE SOFTWARE, V13, P8, DOI 10.1109/52.476280
   Kirk D, 2007, EMPIR SOFTW ENG, V12, P243, DOI 10.1007/s10664-006-9027-z
   Ko AJ, 2007, PROC INT CONF SOFTW, P344
   Kramer D., 1999, Seventeenth Annual International Conference on Computer Documentation. Conference Proceedings, P147, DOI 10.1145/318372.318577
   LANDIS JR, 1977, BIOMETRICS, V33, P159, DOI 10.2307/2529310
   Maalej Walid, 2010, Proceedings of the 2010 7th IEEE Working Conference on Mining Software Repositories (MSR 2010), P191, DOI 10.1109/MSR.2010.5463344
   Monperrus M, 2012, EMPIR SOFTW ENG, V17, P703, DOI 10.1007/s10664-011-9186-4
   Mylopoulos J., 1997, Automated Software Engineering, V4, P291, DOI 10.1023/A:1008627026003
   Neuendorf K., 2002, The content analysis guidebook
   Norman C.L., 2002, P 20 ANN INT C DOC S, P133
   Parnin C., 2011, P 2 INT WORKSH WEB 2
   Robillard MP, 2011, EMPIR SOFTW ENG, V16, P703, DOI 10.1007/s10664-010-9150-8
   Robillard MP, 2009, IEEE SOFTWARE, V26, P27, DOI 10.1109/MS.2009.193
   Rosnow R. L., 2007, BEGINNING BEHAV RES
   Shi L, 2011, LECT NOTES COMPUT SC, V6603, P416, DOI 10.1007/978-3-642-19811-3_29
   Sillito J, 2008, IEEE T SOFTWARE ENG, V34, P434, DOI 10.1109/TSE.2008.26
   Stylos J, 2008, 2008 IEEE SYMPOSIUM ON VISUAL LANGUAGES AND HUMAN-CENTRIC COMPUTING, PROCEEDINGS, P189, DOI 10.1109/VLHCC.2008.4639083
   Stylos Jeffrey., 2008, Proc. of the 16th International Symposium on Foundations of Software Eng, P105
NR 35
TC 122
Z9 129
U1 0
U2 16
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD SEP
PY 2013
VL 39
IS 9
BP 1264
EP 1282
DI 10.1109/TSE.2013.12
PG 19
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 207ZG
UT WOS:000323643000007
DA 2024-07-18
ER

PT J
AU Perini, A
   Susi, A
   Avesani, P
AF Perini, Anna
   Susi, Angelo
   Avesani, Paolo
TI A Machine Learning Approach to Software Requirements Prioritization
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Requirements management; requirements prioritization; machine learning
ID CASE-BASED RANKING
AB Deciding which, among a set of requirements, are to be considered first and in which order is a strategic process in software development. This task is commonly referred to as requirements prioritization. This paper describes a requirements prioritization method called Case-Based Ranking (CBRank), which combines project's stakeholders preferences with requirements ordering approximations computed through machine learning techniques, bringing promising advantages. First, the human effort to input preference information can be reduced, while preserving the accuracy of the final ranking estimates. Second, domain knowledge encoded as partial order relations defined over the requirement attributes can be exploited, thus supporting an adaptive elicitation process. The techniques CBRank rests on and the associated prioritization process are detailed. Empirical evaluations of properties of CBRank are performed on simulated data and compared with a state-of-the-art prioritization method, providing evidence of the method ability to support the management of the tradeoff between elicitation effort and ranking accuracy and to exploit domain knowledge. A case study on a real software project complements these experimental measurements. Finally, a positioning of CBRank with respect to state-of-the-art requirements prioritization methods is proposed, together with a discussion of benefits and limits of the method.
C1 [Perini, Anna; Susi, Angelo; Avesani, Paolo] CIT IRST, Fdn Bruno Kessler, I-38123 Trento, Italy.
C3 Fondazione Bruno Kessler
RP Perini, A (corresponding author), CIT IRST, Fdn Bruno Kessler, Via Sommarive 18, I-38123 Trento, Italy.
EM perini@fbk.eu; susi@fbk.eu; avesani@fbk.eu
RI Avesani, Paolo/AAY-9704-2021
OI Avesani, Paolo/0000-0001-8943-8911
FU Editorial office of FBK
FX The authors thank the participants to the case study; Cinzia Bazzanella
   and Sara Ferrari who contributed to this research with their master's
   theses; Paolo Tonella, John Mylopoulos, and the anonymous reviewers for
   their valuable feedback. They gratefully acknowledge the support of the
   Editorial office of FBK.
CR AAMODT A, 1994, AI COMMUN, V7, P39
   AHL V, 2005, THESIS SCH ENG
   Akao Y., 1990, QUALITY FUNCTION DEP
   [Anonymous], 2005, Just enough requirements management: where software development meets marketing
   [Anonymous], THESIS HUT
   Avesani P, 2005, 13th IEEE International Conference on Requirements Engineering, Proceedings, P297, DOI 10.1109/RE.2005.30
   Avesani P, 2005, LECT NOTES ARTIF INT, V3533, P752
   Avesani P, 2003, LECT NOTES ARTIF INT, V2689, P35
   Avesani P., 2004, P 16 INT C SOFTW ENG, P306
   Avesani P., 2005, P 17 INT C SOFTW ENG, P467
   Beck Kent, 1999, Extreme Programming Explained: Embrace Change
   Berander P., 2005, Engineering and Managing Software Requirements
   BERANDER P, 2006, P 6 C SOFTW ENG RES
   Daneva M, 2008, PROCEEDINGS OF THE 34TH EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS, P240, DOI 10.1109/SEAA.2008.46
   Finkelstein A, 2009, REQUIR ENG, V14, P231, DOI 10.1007/s00766-009-0075-y
   Freund Y, 2004, J MACH LEARN RES, V4, P933, DOI 10.1162/1532443041827916
   Freund Y., 1998, Machine Learning. Proceedings of the Fifteenth International Conference (ICML'98), P170
   Gilb T, 2005, COMPETITIVE ENGINEERING: A HANDBOOK FOR SYSTEMS ENGINEERING, REQUIREMENTS ENGINEERING, AND SOFTWARE ENGINEERING USING PLANGUAGE, P1, DOI 10.1016/B978-075066507-0/50005-2
   HARKER PT, 1987, MATH MODELLING, V9, P837, DOI 10.1016/0270-0255(87)90503-3
   Herrmann A, 2008, INT REQUIR ENG CONF, P125, DOI 10.1109/RE.2008.48
   Hivert F, 2005, THEOR COMPUT SCI, V339, P129, DOI 10.1016/j.tcs.2005.01.012
   In HP, 2002, P INT COMP SOFTW APP, P887, DOI 10.1109/CMPSAC.2002.1045118
   Karlsson J., 1997, Requirements Engineering, V2, P51, DOI 10.1007/BF02802897
   Karlsson J, 1997, IEEE SOFTWARE, V14, P67, DOI 10.1109/52.605933
   Karlsson J, 1998, INFORM SOFTWARE TECH, V39, P939, DOI 10.1016/S0950-5849(97)00053-0
   Karlsson L., 2006, EMPIRICAL SOFTWARE E
   KHAN KA, 2006, THESIS BLEKINGE I TE
   LAUESEN S, 2002, SOFTWARE REQUIREMENT
   LEFFINGWELL D, 2000, MANAGING SOFTWARE RE
   Moisiadis F., 2003, THESIS MACQUARIE U
   Moisiadis F., 2002, P INT C SOFTW ENG RE
   Perini A, 2009, INFORM SOFTWARE TECH, V51, P1021, DOI 10.1016/j.infsof.2008.12.001
   Ruhe G., 2002, Proceedings of the 14th International Conference on Software Engineering and Knowledge Engineering (SEKE'02), P159
   Saaty T. L., 1994, FUNDAMENTALS ANAL HI
   Siddiqi J, 1996, IEEE SOFTWARE, V13, P15, DOI 10.1109/MS.1996.506458
   Sivzattian S, 2001, P 7 INT WORKSH REQ E
   The A.N., 2003, P 15 INT C SOFTW ENG, P586
   Tonella P, 2006, PROC IEEE INT CONF S, P123
   Villafiorita A., 2006, P INT C EL GOV
   Weldemariam K., 2007, P C E VOT ID
   Wiegers K., 1999, SOFTWARE REQUIREMENT
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
NR 42
TC 102
Z9 115
U1 2
U2 34
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD APR
PY 2013
VL 39
IS 4
BP 445
EP 461
DI 10.1109/TSE.2012.52
PG 17
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 112UH
UT WOS:000316618800001
DA 2024-07-18
ER

PT J
AU de Caso, G
   Braberman, V
   Garbervetsky, D
   Uchitel, S
AF de Caso, Guido
   Braberman, Victor
   Garbervetsky, Diego
   Uchitel, Sebastian
TI Automated Abstractions for Contract Validation
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Requirements/specifications; validation; automated abstraction
ID SYSTEMS; DESIGN
AB Pre/postcondition-based specifications are commonplace in a variety of software engineering activities that range from requirements through to design and implementation. The fragmented nature of these specifications can hinder validation as it is difficult to understand if the specifications for the various operations fit together well. In this paper, we propose a novel technique for automatically constructing abstractions in the form of behavior models from pre/postcondition-based specifications. Abstraction techniques have been used successfully for addressing the complexity of formal artifacts in software engineering; however, the focus has been, up to now, on abstractions for verification. Our aim is abstraction for validation and hence, different and novel trade-offs between precision and tractability are required. More specifically, in this paper, we define and study enabledness-preserving abstractions, that is, models in which concrete states are grouped according to the set of operations that they enable. The abstraction results in a finite model that is intuitive to validate and which facilitates tracing back to the specification for debugging. The paper also reports on the application of the approach to two industrial strength protocol specifications in which concerns were identified.
C1 [de Caso, Guido; Braberman, Victor; Garbervetsky, Diego; Uchitel, Sebastian] Univ Buenos Aires, Dept Comp, FCEyN, RA-2160 Buenos Aires, DF, Argentina.
   [Uchitel, Sebastian] Univ London Imperial Coll Sci Technol & Med, Dept Comp, London SW7 2AZ, England.
C3 University of Buenos Aires; Imperial College London
RP de Caso, G (corresponding author), Univ Buenos Aires, Dept Comp, FCEyN, C1428EGA, RA-2160 Buenos Aires, DF, Argentina.
EM gdecaso@du.uba.ar; vbraber@du.uba.ar; diegog@du.uba.ar;
   suchitel@dc.uba.ar
OI Garbervetsky, Diego/0000-0003-4180-7196; Uchitel,
   Sebastian/0000-0001-9352-1478
FU CONICET; UBACyT [X021];  [PIP112-200801-00955KA4];  [PICT-PAE 37279]
FX The authors thank the anonymous reviewers for their time and insightful
   comments, which have greatly improved this paper. The work reported
   herein was partially supported by CONICET, UBACyT X021,
   PIP112-200801-00955KA4, and PICT-PAE 37279.
CR Alur R, 2005, ACM SIGPLAN NOTICES, V40, P98, DOI 10.1145/1047659.1040314
   [Anonymous], 2008, MS NNS NET NEGOTIATE
   [Anonymous], 2009, MS WINSRA WINDOWS IN
   [Anonymous], 1980, Lecture Notes in Computer Science
   [Anonymous], 2005, P 10 EUROPEAN SOFTWA, DOI [10.1145/1095430.1081713, DOI 10.1145/1095430.1081713]
   Ball T., 2002, P 29 ACM SIGPLAN SIG
   Barrett C., 2004, P 16 INT C COMP AID
   Campbell C., 2005, MSRTR200559
   Clarke EM, 1999, MODEL CHECKING, P1
   Dallmeier V., 2006, P INT WORKSH DYN SYS
   de Caso G, 2009, PROC INT CONF SOFTW, P452, DOI 10.1109/ICSE.2009.5070544
   DeLine R, 2001, ACM SIGPLAN NOTICES, V36, P59, DOI 10.1145/381694.378811
   DeLine R., 2004, P 18 EUR C OBJ OR PR
   Ernst MD, 2007, SCI COMPUT PROGRAM, V69, P35, DOI 10.1016/j.scico.2007.01.015
   Esparza J, 1997, ACTA INFORM, V34, P85, DOI 10.1007/s002360050074
   Gabel M, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P51, DOI 10.1145/1368088.1368096
   Ghezzi C, 2009, PROC INT CONF SOFTW, P430, DOI 10.1109/ICSE.2009.5070542
   Giannakopoulou D, 2009, LECT NOTES COMPUT SC, V5503, P94
   Graf S, 1997, LECT NOTES COMPUT SC, V1254, P72
   Grieskamp Wolfgang, 2008, 2008 First IEEE International Conference on Software Testing, Verification and Validation (ICST '08), P502, DOI 10.1109/ICST.2008.50
   Grieskamp W, 2006, INT J SOFTW ENG KNOW, V16, P705, DOI 10.1142/S0218194006002963
   HAREL D, 1987, SCI COMPUT PROGRAM, V8, P231, DOI 10.1016/0167-6423(87)90035-9
   Lee D., 1992, STOC, P264
   Letier E, 2008, AUTOMAT SOFTW ENG, V15, P175, DOI 10.1007/s10515-008-0027-7
   Leuschel Michael, 2008, International Journal on Software Tools for Technology Transfer, V10, P185, DOI 10.1007/s10009-007-0063-9
   Linn J., 1993, RFC1508
   Liu L, 2007, LECT NOTES COMPUT SC, V4454, P114
   Lorenzoli D, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P501, DOI 10.1145/1368088.1368157
   MEYER B, 1992, COMPUTER, V25, P40, DOI 10.1109/2.161279
   Nebut C, 2006, IEEE T SOFTWARE ENG, V32, P140, DOI 10.1109/TSE.2006.22
   Polikarpova N, 2009, ISSTA 2009: INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P93
   ROSENBLUM DS, 1995, IEEE T SOFTWARE ENG, V21, P19, DOI 10.1109/32.341844
   STROM RE, 1986, IEEE T SOFTWARE ENG, V12, P157, DOI 10.1109/TSE.1986.6312929
   Sun J, 2006, IEEE T SOFTWARE ENG, V32, P349, DOI 10.1109/TSE.2006.55
   Tripakis S, 2001, FORM METHOD SYST DES, V18, P25, DOI 10.1023/A:1008734703554
   URIBE T., 1999, ABSTRACTION BASED DE
   Van HT, 2004, 12TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, PROCEEDINGS, P218
   Whittle J., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, P314, DOI 10.1109/ICSE.2000.870422
NR 38
TC 22
Z9 26
U1 0
U2 4
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JAN-FEB
PY 2012
VL 38
IS 1
BP 141
EP 162
DI 10.1109/TSE.2010.98
PG 22
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 881HG
UT WOS:000299472600010
OA Green Published
DA 2024-07-18
ER

PT J
AU Liu, H
   Ma, ZY
   Shao, WZ
   Niu, ZD
AF Liu, Hui
   Ma, Zhiyi
   Shao, Weizhong
   Niu, Zhendong
TI Schedule of Bad Smell Detection and Resolution: A New Way to Save Effort
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Scheme; bad smell; software refactoring; effort; detection; schedule
ID CODE
AB Bad smells are signs of potential problems in code. Detecting and resolving bad smells, however, remain time-consuming for software engineers despite proposals on bad smell detection and refactoring tools. Numerous bad smells have been recognized, yet the sequences in which the detection and resolution of different kinds of bad smells are performed are rarely discussed because software engineers do not know how to optimize sequences or determine the benefits of an optimal sequence. To this end, we propose a detection and resolution sequence for different kinds of bad smells to simplify their detection and resolution. We highlight the necessity of managing bad smell resolution sequences with a motivating example, and recommend a suitable sequence for commonly occurring bad smells. We evaluate this recommendation on two nontrivial open source applications, and the evaluation results suggest that a significant reduction in effort ranging from 17.64 to 20 percent can be achieved when bad smells are detected and resolved using the proposed sequence.
C1 [Liu, Hui; Niu, Zhendong] Beijing Inst Technol, Sch Comp Sci & Technol, Beijing 100081, Peoples R China.
   [Liu, Hui] Beijing Inst Technol, Beijing Lab Intelligent Informat Technol, Sch Comp Sci, Beijing 100081, Peoples R China.
   [Liu, Hui; Ma, Zhiyi; Shao, Weizhong] Minist Educ, Key Lab High Confidence Software Technol, Beijing 100871, Peoples R China.
C3 Beijing Institute of Technology; Beijing Institute of Technology
RP Liu, H (corresponding author), Beijing Inst Technol, Sch Comp Sci & Technol, Beijing 100081, Peoples R China.
EM Liuhui08@bit.edu.cn; mzy@sei.pku.edu.cn; wzshao@pku.edu.cn;
   zniu@bit.edu.cn
RI niu, zhendong/KIJ-1559-2024
OI Niu, Zhendong/0000-0002-0576-7572
FU National Natural Science Foundation of China [61003065, 60773152];
   National High-Tech Research and Development Plan of China
   [2007AA010301]; Specialized Research Fund for the Doctoral Program of
   Higher Education [20101101120027]; Beijing Institute of Technology
   [2010Y0711]
FX The authors would like to say thanks to the students in the laboratory.
   They did most of the work in the evaluation. The authors would like to
   say thanks to Dr. Lisa Liu from ETH Zurich for her help in preparing
   this manuscript. The authors also thank the anonymous reviewers for
   their valuable suggestions. Constructive comments and suggestions from
   ESEC/FSE'09 reviewers on how to revise and extend the original version
   are highly appreciated as well. The work is funded by the National
   Natural Science Foundation of China No. 61003065 and 60773152, the
   National High-Tech Research and Development Plan of China No.
   2007AA010301, Specialized Research Fund for the Doctoral Program of
   Higher Education (No. 20101101120027), and Excellent Young Scholars
   Research Fund of Beijing Institute of Technology (No. 2010Y0711).
CR BAKER BS, 1995, SECOND WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P86, DOI 10.1109/WCRE.1995.514697
   Bouktif S, 2006, GECCO 2006: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOL 1 AND 2, P1885
   Burd E, 2002, SCAM 2002: SECOND IEEE INTERNATIONAL WORKSHOP ON SOURCE CODE ANALYSIS MANIPULATION, PROCEEDINGS, P36, DOI 10.1109/SCAM.2002.1134103
   Cornelio M., 2004, THESIS FEDERAL U PER
   Cusumano M.A., 1995, MICROSOFT SECRETS
   Deursen A. V., 2001, P 2 INT C EXTR PROGR
   Ducasse S., 1999, Proceedings IEEE International Conference on Software Maintenance - 1999 (ICSM'99). `Software Maintenance for Business Change' (Cat. No.99CB36360), P109, DOI 10.1109/ICSM.1999.792593
   Eclipse Foundation, 2011, ECL 3 4 2
   Fokaefs Marios, 2007, 2007 IEEE International Conference on Software Maintenance, P519, DOI 10.1109/ICSM.2007.4362679
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   Gheyi R., 2005, P 20 ANN ACM SIGPLAN, P208
   Griswold W. G., 1993, ACM Transactions on Software Engineering and Methodology, V2, P228, DOI 10.1145/152388.152389
   Higo Y., 2003, P AUSTR C SOFTW MEAS, P247
   Janssens, 2004, P 2 INT C GRAPH TRAN, P399
   JetBrains Company, 2011, INTELLIJ IDEA 8
   Kamiya T, 2002, IEEE T SOFTWARE ENG, V28, P654, DOI 10.1109/TSE.2002.1019480
   Kataoka Y, 2001, PROC IEEE INT CONF S, P736, DOI 10.1109/ICSM.2001.972794
   Koschke R., 2008, SOFTWARE EVOLUTION, P15, DOI DOI 10.1007/978-3-540-76440-3_2
   Liu H, 2008, IET SOFTW, V2, P446, DOI 10.1049/iet-sen:20070033
   Liu H., 2007, P 22 IEEEACM INT C A, P489
   Liu H, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P265, DOI 10.1145/1595696.1595738
   Lozano Angelo., 2007, Ninth International Workshop on Principles of software evolution, P31
   Mäntylä M, 2003, PROC IEEE INT CONF S, P381, DOI 10.1109/ICSM.2003.1235447
   Mäntylä MV, 2004, PROC IEEE INT CONF S, P399, DOI 10.1109/ICSM.2004.1357825
   Mealy E, 2007, 2007 AUSTRALIAN SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P307, DOI 10.1109/ASWEC.2007.24
   Mealy E, 2006, 2006 AUSTRALIAN SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P331
   Mens T, 2005, J SOFTW MAINT EVOL-R, V17, P247, DOI 10.1002/smr.316
   Mens T, 2004, IEEE T SOFTWARE ENG, V30, P126, DOI 10.1109/TSE.2004.1265817
   Mens T, 2002, LECT NOTES COMPUT SC, V2505, P286
   Mens T., 2009, SOFTWARE SYSTEMS MOD, V6, P269
   Mens T, 2005, ELECTRON NOTES THEOR, V127, P113, DOI 10.1016/j.entcs.2004.08.038
   Meszaros G., 2007, Xunit test patterns: refactoring test code
   Microsoft Corporation, 2011, MICR VIS STUD 2008
   Moha N, 2006, IEEE INT CONF AUTOM, P297
   Moha N, 2010, IEEE T SOFTWARE ENG, V36, P20, DOI 10.1109/TSE.2009.50
   Munro MatthewJames., 2005, Software Metrics, P15, DOI 10.1109/metrics.2005.38
   Murphy-Bill E, 2008, IEEE SOFTWARE, V25, P38, DOI 10.1109/MS.2008.123
   Opdyke W. F., 1992, Refactoring object-oriented frameworks
   Pietrzak B., 2007, P 7 INT C EXTR PROGR, P75
   Porres I., 2003, P 6 INT C UN MOD LAN, P59
   Srivisut K, 2007, P INT COMP SOFTW APP, P65
   Stroulia E, 2001, OOIS 2001: 7TH INTERNATIONAL CONFERENCE ON OBJECT-ORIENTED INFORMATION SYSTEMS, PROCEEDINGS, P113
   Tip F, 2003, ACM SIGPLAN NOTICES, V38, P13, DOI 10.1145/949343.949308
   Tourwé T, 2003, SEVENTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P91, DOI 10.1109/CSMR.2003.1192416
   Trifu A, 2005, WCRE: 12TH WORKING CONFERENCE ON REVERSE ENGINEERING 2005, PROCEEDINGS, P155
   Trifu A, 2004, CSMR 2004: EIGHTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P174, DOI 10.1109/CSMR.2004.1281418
   Tsantalis N, 2008, CSMR 2008: 12TH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, P329
   Tsantalis N, 2009, IEEE T SOFTWARE ENG, V35, P347, DOI 10.1109/TSE.2009.1
   van Emden E, 2002, NINTH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P97, DOI 10.1109/WCRE.2002.1173068
   Van Rompaey B, 2007, IEEE T SOFTWARE ENG, V33, P800, DOI 10.1109/TSE.2007.70745
   Wake W.C., 2003, Refactoring Workbook, V1st
   Weber R., 2005, P IEEE 21 INT C SOFT, P26
   Wettel R, 2005, SEVENTH INTERNATIONAL SYMPOSIUM ON SYMBOLIC AND NUMERIC ALGORITHMS FOR SCIENTIFIC COMPUTING, PROCEEDINGS, P63
NR 53
TC 73
Z9 80
U1 0
U2 21
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JAN-FEB
PY 2012
VL 38
IS 1
BP 220
EP 235
DI 10.1109/TSE.2011.9
PG 16
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 881HG
UT WOS:000299472600015
DA 2024-07-18
ER

PT J
AU Shin, Y
   Meneely, A
   Williams, L
   Osborne, JA
AF Shin, Yonghee
   Meneely, Andrew
   Williams, Laurie
   Osborne, Jason A.
TI Evaluating Complexity, Code Churn, and Developer Activity Metrics as
   Indicators of Software Vulnerabilities
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Fault prediction; software metrics; software security; vulnerability
   prediction
ID DEFECT PREDICTION; QUALITY; ATTRIBUTES; NUMBER
AB Security inspection and testing require experts in security who think like an attacker. Security experts need to know code locations on which to focus their testing and inspection efforts. Since vulnerabilities are rare occurrences, locating vulnerable code locations can be a challenging task. We investigated whether software metrics obtained from source code and development history are discriminative and predictive of vulnerable code locations. If so, security experts can use this prediction to prioritize security inspection and testing efforts. The metrics we investigated fall into three categories: complexity, code churn, and developer activity metrics. We performed two empirical case studies on large, widely used open-source projects: the Mozilla Firefox web browser and the Red Hat Enterprise Linux kernel. The results indicate that 24 of the 28 metrics collected are discriminative of vulnerabilities for both projects. The models using all three types of metrics together predicted over 80 percent of the known vulnerable files with less than 25 percent false positives for both projects. Compared to a random selection of files for inspection and testing, these models would have reduced the number of files and the number of lines of code to inspect or test by over 71 and 28 percent, respectively, for both projects.
C1 [Shin, Yonghee] Depaul Univ, Coll Comp & Digital Media, Chicago, IL 60614 USA.
   [Meneely, Andrew; Williams, Laurie] N Carolina State Univ, Dept Comp Sci, Raleigh, NC 27695 USA.
   [Osborne, Jason A.] N Carolina State Univ, Dept Stat, Raleigh, NC 27695 USA.
C3 DePaul University; North Carolina State University; North Carolina State
   University
RP Shin, Y (corresponding author), Depaul Univ, Coll Comp & Digital Media, 243 S Wabash Ave, Chicago, IL 60614 USA.
EM yshin2@ncsu.edu; apmeneel@ncsu.edu; williams@csc.ncsu.edu;
   jaosborn@stat.ncsu.edu
RI Osborne, Jason/KIK-9799-2024
OI Meneely, Andy/0000-0002-4850-1408
FU US National Science Foundation (NSF) [0716176, 0346903]; US Army
   Research Office (ARO) [W911NF-08-1-0105]; Direct For Computer & Info
   Scie & Enginr; Division of Computing and Communication Foundations
   [0346903] Funding Source: National Science Foundation; Division Of
   Computer and Network Systems; Direct For Computer & Info Scie & Enginr
   [0716176] Funding Source: National Science Foundation
FX This work is supported in part by US National Science Foundation (NSF)
   Grant No. 0716176, CAREER Grant No. 0346903, and the US Army Research
   Office (ARO) under grant W911NF-08-1-0105 managed by NCSU Secure Open
   Systems Initiative (SOSI). The authors thank the Mozilla team who
   clarified the procedure for version control and vulnerability fixes.
   They thank Mark Cox, the director of the RHSR team, for verifying their
   Red Hat data. They thank the reviewers for their valuable and thorough
   comments. They also thank the NCSU Software Engineering Realsearch group
   (past and present members) for their helpful suggestions on the paper.
CR [Anonymous], CRS REPORT C EC IMPA
   [Anonymous], 2008, Proceedings of the 4th International Workshop on Predictor Models in Software Engineering, PROMISE '08
   [Anonymous], 2003, Beyond Fear: Thinking Sensibly About Security in an Uncertain World
   Arisholm E., 2006, ISESE 06 P 2006 ACMI, P8
   Basili VR, 1996, IEEE T SOFTWARE ENG, V22, P751, DOI 10.1109/32.544352
   Brandes U., 2005, Network analysis: methodological foundations, V3418
   Breiman L., 2001, Machine Learning, V45, P5, DOI 10.1023/A:1010933404324
   Briand LC, 2000, J SYST SOFTWARE, V51, P245, DOI 10.1016/S0164-1212(99)00102-8
   Demsar J, 2006, J MACH LEARN RES, V7, P1
   Fagerland MW, 2009, CONTEMP CLIN TRIALS, V30, P490, DOI 10.1016/j.cct.2009.06.007
   Fenton N, 2007, INFORM SOFTWARE TECH, V49, P32, DOI 10.1016/j.infsof.2006.09.001
   Gegick M., 2008, P 4 ACM WORKSHOP QUA
   Girvan M, 2002, P NATL ACAD SCI USA, V99, P7821, DOI 10.1073/pnas.122653799
   Gonzales-Barahona J.M., 2004, P INT WORKSH MIN SOF
   Graves TL, 2000, IEEE T SOFTWARE ENG, V26, P653, DOI 10.1109/32.859533
   Guyon Isabelle, 2003, J MACH LEARN RES, V3, P1157, DOI DOI 10.1162/153244303322753616
   Hudepohl J, 1997, EIGHTH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING - CASE STUDIES, PROCEEDINGS, P85, DOI 10.1109/CSSRE.1997.637850
   IEEE, 2005, 10611998R2004 IEEE C
   Kamei Yasutaka, 2007, 2007 First International Symposium on Empirical Software Engineering and Measurement, P196
   Khoshgoftaar TM, 1996, IEEE SOFTWARE, V13, P65, DOI 10.1109/52.476287
   Krsul IV, 1998, Software vulnerability analysis
   Lessmann S, 2008, IEEE T SOFTWARE ENG, V34, P485, DOI 10.1109/TSE.2008.35
   McCabe T. J., 1976, IEEE Transactions on Software Engineering, VSE-2, P308, DOI 10.1109/TSE.1976.233837
   McGraw G., 2006, Software security: building security in
   Meneely A., 2008, P 16 ACM SIGSOFT INT, P13, DOI DOI 10.1145/1453101.1453106
   Menzies T, 2007, IEEE T SOFTWARE ENG, V33, P637, DOI 10.1109/TSE.2007.70721
   Menzies T, 2007, IEEE T SOFTWARE ENG, V33, P2, DOI 10.1109/TSE.2007.256941
   Nagappan N, 2005, PROC INT CONF SOFTW, P284, DOI 10.1145/1062455.1062514
   Nagappan Nachiappan, 2007, 2007 First International Symposium on Empirical Software Engineering and Measurement, P364
   Nagappan N., 2006, 28th International Conference on Software Engineering Proceedings, P452, DOI 10.1145/1134285.1134349
   Nagappan N, 2006, ISSRE 2006:17TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P62
   Nagappan N, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P521, DOI 10.1145/1368088.1368160
   Neuhaus S, 2007, CCS'07: PROCEEDINGS OF THE 14TH ACM CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P529
   Ostrand T.J., 2007, Proceedings of the 2007 international symposium on Software testing and analysis (ISSTA '07), P219
   Ostrand TJ, 2005, IEEE T SOFTWARE ENG, V31, P340, DOI 10.1109/TSE.2005.49
   Pinzger Martin, 2008, P 16 ACM SIGSOFT INT, P2, DOI DOI 10.1145/1453101.1453105
   Shin Y., 2010, 20106 N CAR STAT U
   Shin Y., 2008, WORKSHOP QUALITY PRO, P47
   Shin Y, 2008, ESEM'08: PROCEEDINGS OF THE 2008 ACM-IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, P315
   Walden J., 2009, P INT WORKSH SEC MEA
   Watson A. H., 1996, STRUCTURED TESTING T, V500
   Weyuker EJ, 2008, EMPIR SOFTW ENG, V13, P539, DOI 10.1007/s10664-008-9082-8
   Witten I. H., 2005, DATA MINING PRACTICA
NR 43
TC 349
Z9 415
U1 0
U2 25
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD NOV-DEC
PY 2011
VL 37
IS 6
BP 772
EP 787
DI 10.1109/TSE.2010.81
PG 16
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 854SE
UT WOS:000297513700002
DA 2024-07-18
ER

PT J
AU Kwan, I
   Schroeter, A
   Damian, D
AF Kwan, Irwin
   Schroeter, Adrian
   Damian, Daniela
TI Does Socio-Technical Congruence Have an Effect on Software Build
   Success? A Study of Coordination in a Software Project
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Empirical software engineering; socio-technical congruence;
   coordination; awareness; software quality; integration
ID DISTANCE
AB Socio-technical congruence is an approach that measures coordination by examining the alignment between the technical dependencies and the social coordination in the project. We conduct a case study of coordination in the IBM Rational Team Concert project, which consists of 151 developers over seven geographically distributed sites, and expect that high congruence leads to a high probability of successful builds. We examine this relationship by applying two congruence measurements: an unweighted congruence measure from previous literature, and a weighted measure that overcomes limitations of the existing measure. We discover that there is a relationship between socio-technical congruence and build success probability, but only for certain build types, and observe that in some situations, higher congruence actually leads to lower build success rates. We also observe that a large proportion of zero-congruence builds are successful, and that socio-technical gaps in successful builds are larger than gaps in failed builds. Analysis of the social and technical aspects in IBM Rational Team Concert allows us to discuss the effects of congruence on build success. Our findings provide implications with respect to the limits of applicability of socio-technical congruence and suggest further improvements of socio-technical congruence to study coordination.
C1 [Kwan, Irwin; Schroeter, Adrian; Damian, Daniela] Univ Victoria, Dept Comp Sci, STN CSC, Software Engn Global InterAct Lab, Victoria, BC V8W 3P6, Canada.
C3 University of Victoria
RP Kwan, I (corresponding author), Univ Victoria, Dept Comp Sci, STN CSC, Software Engn Global InterAct Lab, POB 3055, Victoria, BC V8W 3P6, Canada.
EM irwink@ieee.org; schadr@acm.org; danielad@cs.uvic.ca
FU NSERC
FX The authors would like to thank the IBM RTC Team, IBM Research, and the
   paper's anonymous reviewers. The authors thank NSERC for funding this
   research.
CR [Anonymous], P C COMP SUPP COOP W
   [Anonymous], P 2004 ACM C COMP SU
   [Anonymous], 2008, 2008 ACM IEEE 30 INT
   Bird C, 2009, PROC INT CONF SOFTW, P518, DOI 10.1109/ICSE.2009.5070550
   BOLICI F, 2009, P INT WORKSH SOC TEC
   Browning TR, 2001, IEEE T ENG MANAGE, V48, P292, DOI 10.1109/17.946528
   Carter S., 2004, Computer Supported Cooperative Work: The Journal of Collaborative Computing, V13, P305, DOI 10.1007/s10606-004-2805-5
   CATALDO M, 2008, P S EMP SOFTW ENG ME
   Cataldo M, 2009, INT CONF GLOBAL SOFT, P163, DOI 10.1109/ICGSE.2009.24
   CONWAY ME, 1968, DATAMATION, V14, P28
   Cusumano M, 1997, COMMUN ACM, V40, P53, DOI 10.1145/255656.255698
   DAMIAN D, 2007, P INT REQ ENG C OCT
   Damian D, 2007, SECOND IEEE INTERNATIONAL CONFERENCE ON GLOBAL SOFTWARE ENGINEERING, PROCEEDINGS, P81
   Damian D, 2010, COLLABORATIVE SOFTWARE ENGINEERING, P57, DOI 10.1007/978-3-642-10294-3_3
   de Souza C.R.B., 2007, P EUR C COMP SUPP CO
   DESOUZA CRB, 2004, P 12 ACM SIGSOFT 12, P221
   DESOUZA CRB, 2008, P INT C SOFTW ENG MA
   EHRLICH K, 2008, P SOC TECHN CONGR WO
   Ehrlich K, 2006, 2006 IEEE INTERNATIONAL CONFERENCE ON GLOBAL SOFTWARE ENGINEERING, PROCEEDINGS, P149, DOI 10.1109/ICGSE.2006.261228
   Espinosa JA, 2007, J MANAGE INFORM SYST, V24, P135, DOI 10.2753/MIS0742-1222240104
   Faraj S, 2000, MANAGE SCI, V46, P1554, DOI 10.1287/mnsc.46.12.1554.12072
   Frost R, 2007, IEEE SOFTWARE, V24, P114, DOI 10.1109/MS.2007.170
   Gokpinar B, 2010, MANAGE SCI, V56, P468, DOI 10.1287/mnsc.1090.1117
   HENDERSON RM, 1990, ADMIN SCI QUART, V35, P9, DOI 10.2307/2393549
   Herbsleb JD, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P188, DOI 10.1109/FOSE.2007.11
   Herbsleb JD, 1999, IEEE SOFTWARE, V16, P63, DOI 10.1109/52.795103
   Herbsleb JD, 2003, IEEE T SOFTWARE ENG, V29, P481, DOI 10.1109/TSE.2003.1205177
   Herbsleb JD, 2001, PROC INT CONF SOFTW, P81, DOI 10.1109/ICSE.2001.919083
   Hinds P., 2006, CSCW 06, P343
   Holck J., 2003, Australian Journal of Information Systems, P40
   HOSSAIN L, 2006, P C COMP SUPP COOP W
   Ko AJ, 2007, PROC INT CONF SOFTW, P344
   KRAUT RE, 1995, COMMUN ACM, V38, P69, DOI 10.1145/203330.203345
   KWAN I, 2009, P SOC TECHN CONGR WO
   MacCormack A, 2006, MANAGE SCI, V52, P1015, DOI 10.1287/mnsc.1060.0552
   MARCZAK S, 2009, P COLLABORATION INTE
   Marczak S., 2008, P INT C REQ ENG SEPT
   Mockus A, 2002, ACM T SOFTW ENG METH, V11, P309, DOI 10.1145/567793.567795
   Nakakoji K., 2010, SUPPORTING EXPERTISE
   NGUYEN T, 2008, P INT C GLOB SOFTW E, P45, DOI DOI 10.1109/ICGSE.2008.39
   NIINIMAKI T, 2008, P INT C GLOB SOFTW E, P55
   PERRY DE, 1994, IEEE SOFTWARE, V11, P36, DOI 10.1109/52.300082
   Sarma A., 2008, P SOC TECHN CONGR WO
   Sawyer S, 2004, COMMUN ACM, V47, P95, DOI 10.1145/1035134.1035140
   Schmidt K., 1996, Computer Supported Cooperative Work (CSCW), V5, P155, DOI 10.1007/BF00133655
   Sosa ME, 2008, RES ENG DES, V19, P47, DOI 10.1007/s00163-007-0039-5
   Sosa ME, 2004, MANAGE SCI, V50, P1674, DOI 10.1287/mnsc.1040.0289
   VALETTO G, 2007, P INT C SOFTW ENG WO
   VALETTO G, 2008, P SOC TECHN CONGR WO
   VANDEVEN AH, 1976, AM SOCIOL REV, V41, P322
   Wolf T, 2009, PROC INT CONF SOFTW, P1, DOI 10.1109/ICSE.2009.5070503
   Wolf T, 2009, IEEE SOFTWARE, V26, P58, DOI 10.1109/MS.2009.16
   2011, DESIGN DESIGN PACKAG
NR 53
TC 93
Z9 105
U1 0
U2 17
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAY-JUN
PY 2011
VL 37
IS 3
BP 307
EP 324
DI 10.1109/TSE.2011.29
PG 18
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science; Engineering
GA 768KZ
UT WOS:000290934800002
DA 2024-07-18
ER

PT J
AU Limam, N
   Boutaba, R
AF Limam, Noura
   Boutaba, Raouf
TI Assessing Software Service Quality and Trustworthiness at Selection Time
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Software as a service (SaaS); software selection; service utility;
   review and rating; trust and reputation; risk management; SLA monitoring
AB The integration of external software in project development is challenging and risky, notably because the execution quality of the software and the trustworthiness of the software provider may be unknown at integration time. This is a timely problem and of increasing importance with the advent of the SaaS model of service delivery. Therefore, in choosing the SaaS service to utilize, project managers must identify and evaluate the level of risk associated with each candidate. Trust is commonly assessed through reputation systems; however, existing systems rely on ratings provided by consumers. This raises numerous issues involving the subjectivity and unfairness of the service ratings. This paper describes a framework for reputation-aware software service selection and rating. A selection algorithm is devised for service recommendation, providing SaaS consumers with the best possible choices based on quality, cost, and trust. An automated rating model, based on the expectancy-disconfirmation theory from market science, is also defined to overcome feedback subjectivity issues. The proposed rating and selection models are validated through simulations, demonstrating that the system can effectively capture service behavior and recommend the best possible choices.
C1 [Limam, Noura] Pohang Univ Sci & Technol, POSTECH, Div IT Convergence Engn, Pohang 790894, Gyungbuk, South Korea.
   [Boutaba, Raouf] Univ Waterloo, DR Cheriton Sch Comp Sci, Waterloo, ON N2L 3G1, Canada.
   [Limam, Noura] Univ Waterloo, Sch Comp Sci, Waterloo, ON N2L 3G1, Canada.
C3 Pohang University of Science & Technology (POSTECH); University of
   Waterloo; University of Waterloo
RP Limam, N (corresponding author), Pohang Univ Sci & Technol, POSTECH, Div IT Convergence Engn, San31, Pohang 790894, Gyungbuk, South Korea.
EM noura.limam@gmail.com; rboutaba@uwaterloo.ca
RI Boutaba, Raouf/AAT-2801-2020; Boutaba, Raouf/G-8483-2017; Limam,
   Noura/AAU-9876-2020
OI Boutaba, Raouf/0000-0001-7936-6862; Limam, Noura/0000-0002-7759-3751
FU Ministry of Education, Science and Technology [R31-2008-000-10100-0];
   Division of Computing and Communication Foundations; Direct For Computer
   & Info Scie & Enginr [0846195] Funding Source: National Science
   Foundation
FX This work was supported in part by the Natural Science and Engineering
   Council of Canada (NSERC) Discovery program and in part by the WCU
   (World Class University) program through the Korea National Research
   Foundation funded by the Ministry of Education, Science and Technology
   (Project No. R31-2008-000-10100-0). The authors would like to express
   their gratitude to Brent K. Ishibashi for helping with paper editing and
   proofreading, and to the associate editor and anonymous reviewers for
   their encouragements and insightful comments.
CR ALI AS, 2004, P 13 IEEE INT WORKSH
   *AM, 2007, AM S3 SERV LEV AGR
   [Anonymous], P 1 INT WORKSH PEER
   [Anonymous], 2006, Introduction to Time Series and Forecasting
   ANSELMI J, 2007, P WORKSH SERV OR COM
   *BELGONET, 2008, SERV LEV AGR
   Burstein M., 2004, OWL S SEMANTIC MARKU
   *EZSM, 2008, EZSM SERV LEV AGR
   *INT, 2008, INT BUY CONF
   Keller A., 2003, Journal of Network and Systems Management, V11, P57, DOI 10.1023/A:1022445108617
   KYRIAKOS K, 2007, P 3 INT C NEXT GEN W
   Li JY, 2008, IEEE T SOFTWARE ENG, V34, P271, DOI 10.1109/TSE.2008.14
   LIMAM N, 2008, P 11 IEEE IFIP NETW
   Ludwig H., 2002, WEB SERVICE LEVEL AG
   OLIVER RL, 1980, J MARKETING RES, V17, P460, DOI 10.2307/3150499
   Poladian V., 2004, P 26 INT C SOFTW ENG
   Raimondi F., 2008, Proceedings of the 16th ACM SIGSOFT International Symposium on Foundations of software engineering, P170, DOI DOI 10.1145/1453101.1453125
   Skene J., 2007, 6 INT WORKSHOP SOFTW, P3
   Skene J, 2010, IEEE T SOFTWARE ENG, V36, P288, DOI 10.1109/TSE.2009.55
   *T SAAS, 2008, TRUST SAAS PUTT TRUS
   TOSIC V, 2002, P WORKSH WEB SERV E
   VU LH, 2005, P 13 C COOP INF SYST
   WANG Y, 2007, P 27 INT C DISTR COM
   WISHART R, 2005, P 28 AUSTR C COMP SC
   WU G, 2007, P IEEE INT C SERV CO
   Xiao J, 2007, IEEE ACM T NETWORK, V15, P1307, DOI 10.1109/TNET.2007.896535
   YANG SJH, 2005, P IEEE INT WORKSH BU
   Yu T, 2007, ACM T WEB, V1, DOI 10.1145/1232722.1232728
   Zeng LZ, 2004, IEEE T SOFTWARE ENG, V30, P311, DOI 10.1109/TSE.2004.11
   ZHOU C, 2004, P IEEE INT C WEB SER
NR 30
TC 86
Z9 113
U1 1
U2 32
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUL-AUG
PY 2010
VL 36
IS 4
BP 559
EP 574
DI 10.1109/TSE.2010.2
PG 16
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 631LE
UT WOS:000280347600008
DA 2024-07-18
ER

PT J
AU Kulkarni, D
   Tripathi, A
AF Kulkarni, Devdatta
   Tripathi, Anand
TI A Framework for Programming Robust Context-Aware Applications
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Exception handling; context-aware applications; robustness; fault
   tolerance; design methodology
AB In this paper, we present a forward recovery model for programming robust context-aware applications. The mechanisms devised as part of this model fall into two categories: asynchronous event handling and synchronous exception handling. These mechanisms enable designing recovery actions to handle different kinds of failure conditions arising in context-aware applications. These include service discovery failures, service binding failures, exceptions raised by a service, and context invalidations. This model is integrated in the high-level programming framework that we have designed for building context-aware collaborative (CSCW) applications. In this paper, we demonstrate the capabilities of this model for programming various kinds of recovery patterns in context-aware applications.
C1 [Kulkarni, Devdatta; Tripathi, Anand] Univ Minnesota, Dept Comp Sci & Engn, Minneapolis, MN 55455 USA.
C3 University of Minnesota System; University of Minnesota Twin Cities
RP Kulkarni, D (corresponding author), Univ Minnesota, Dept Comp Sci & Engn, 200 Union St SE, Minneapolis, MN 55455 USA.
EM dkulk@cs.umn.edu; tripathi@cs.umn.edu
FU US National Science Foundation [0411961, 0708604]; Direct For Computer &
   Info Scie & Enginr; Division Of Computer and Network Systems [0708604,
   0411961] Funding Source: National Science Foundation
FX The authors would like to thank the anonymous reviewers for their
   detailed and insightful comments that helped them in improving the
   presentation of this work. This work was supported by the US National
   Science Foundation grants 0411961 and 0708604.
CR [Anonymous], ELSEVIER J PERVASIVE
   [Anonymous], 2000, Generative programming: methods, tools, and applications
   Casati F, 1999, ACM T DATABASE SYST, V24, P405, DOI 10.1145/328939.328996
   CERI S, 1990, VERY LARGE DATA BASES, P566
   Chetan S, 2005, IEEE TECHNOL SOC MAG, V24, P38, DOI 10.1109/MTAS.2005.1407746
   CHETAN S, 2006, THESIS U ILLINOIS UR
   Consolvo S, 2004, IEEE PERVAS COMPUT, V3, P22, DOI 10.1109/MPRV.2004.1316814
   Damasceno K., 2007, EXCEPTION HANDLING C, P57
   Davies N, 2001, COMPUTER, V34, P35, DOI 10.1109/2.940011
   Evered Mark., 2004, P 2 WORKSHOP AUSTRAL, V32, P53
   Fetzer C., 2003, P 8 IEEE INT WORKSH
   Fleck M., 2002, IEEE Pervasive Computing, V1, P13, DOI 10.1109/MPRV.2002.1012333
   Fredj M., 2006, P 4 MINEMA WORKSH
   GARLAN D., 2002, IEEE PERVAS COMPUT, V1, P2
   Grimm R, 2004, ACM T COMPUT SYST, V22, P421, DOI 10.1145/1035582.1035584
   Hagen C, 2000, IEEE T SOFTWARE ENG, V26, P943, DOI 10.1109/32.879818
   Johanson B., 2002, IEEE Pervasive Computing, V1, P67, DOI 10.1109/MPRV.2002.1012339
   Keeney J, 2003, IEEE 4TH INTERNATIONAL WORKSHOP ON POLICIES FOR DISTRIBUTED SYSTEMS AND NETWORKS, PROCEEDINGS, P3, DOI 10.1109/POLICY.2003.1206953
   Kulkarni D, 2008, SACMAT'08: PROCEEDINGS OF THE 13TH ACM SYMPOSIUM ON ACCESS CONTROL MODELS AND TECHNOLOGIES, P113
   Kulkarni D, 2008, SYM REL DIST SYST, P13, DOI 10.1109/SRDS.2008.13
   Ranganathan A, 2005, Third IEEE International Conference on Pervasive Computing and Communications, Proceedings, P7, DOI 10.1109/PERCOM.2005.26
   Roman M., 2002, SIGMOBILE MOBILE COM, P65
   Romanovsky A, 2001, P INT COMP SOFTW APP, P580, DOI 10.1109/CMPSAC.2001.960671
   Salber D., 1999, CHI, P434, DOI DOI 10.1145/302979.303126
   Schilit B., 1994, 1994 1 WORKSHOP MOBI, P85, DOI [DOI 10.1109/WMCSA.1994.16, 10.1109/WMCSA.1994.16]
   *SUN, 2001, JAV TRANS API
   Tripathi A., 2001, Advances in exception handling techniques (Lecture Notes in Computer Science Vol.2022), P128
   Tripathi AR, 2007, SOFTWARE PRACT EXPER, V37, P493, DOI 10.1002/spe.777
   Tripathi AR, 2006, LECT NOTES COMPUT SC, V4119, P161
   Yau S. S., 2002, IEEE Pervasive Computing, V1, P33, DOI 10.1109/MPRV.2002.1037720
NR 30
TC 36
Z9 39
U1 1
U2 7
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAR-APR
PY 2010
VL 36
IS 2
BP 184
EP 197
DI 10.1109/TSE.2010.11
PG 14
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 574ZH
UT WOS:000276032300005
DA 2024-07-18
ER

PT J
AU Shatnawi, R
AF Shatnawi, Raed
TI A Quantitative Investigation of the Acceptable Risk Levels of
   Object-Oriented Metrics in Open-Source Systems
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Object-oriented programming; product metrics; CK metrics; threshold
   values; open-source software
ID EMPIRICAL VALIDATION; SOFTWARE QUALITY; INHERITANCE; THRESHOLD; SUITE
AB Object-oriented metrics have been validated empirically as measures of design complexity. These metrics can be used to mitigate potential problems in the software complexity. However, there are few studies that were conducted to formulate the guidelines, represented as threshold values, to interpret the complexity of the software design using metrics. Classes can be clustered into low and high risk levels using threshold values. In this paper, we use a statistical model, derived from the logistic regression, to identify threshold values for the Chidamber and Kemerer (CK) metrics. The methodology is validated empirically on a large open-source system-the Eclipse project. The empirical results indicate that the CK metrics have threshold effects at various risk levels. We have validated the use of these thresholds on the next release of the Eclipse project-Version 2.1-using decision trees. In addition, the selected threshold values were more accurate than those were selected based on either intuitive perspectives or on data distribution parameters. Furthermore, the proposed model can be exploited to find the risk level for an arbitrary threshold value. These findings suggest that there is a relationship between risk levels and object-oriented metrics and that risk levels can be used to identify threshold effects.
C1 Jordan Univ Sci & Technol, Software Engn Dept, Irbid 22110, Jordan.
C3 Jordan University of Science & Technology
RP Shatnawi, R (corresponding author), Jordan Univ Sci & Technol, Software Engn Dept, POB 3030, Irbid 22110, Jordan.
EM raedamin@just.edu.jo
RI Shatnawi, Raed/M-5623-2019
OI Shatnawi, Raed/0000-0001-7777-1370
CR ABREU FBE, 1994, J SYST SOFTWARE, V26, P87, DOI 10.1016/0164-1212(94)90099-X
   Aggarwal K. K., 2009, Software Process: Improvement and Practice, V14, P39, DOI 10.1002/spip.389
   [Anonymous], 1994, Object-oriented software metrics: a practical guide
   [Anonymous], 1997, P 14 INT C MACH LEAR
   Basili VR, 1996, IEEE T SOFTWARE ENG, V22, P751, DOI 10.1109/32.544352
   Bender R, 1999, BIOMETRICAL J, V41, P305, DOI 10.1002/(SICI)1521-4036(199906)41:3<305::AID-BIMJ305>3.0.CO;2-Y
   Benlarbi S, 2000, 11TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P24, DOI 10.1109/ISSRE.2000.885858
   Briand LC, 2000, J SYST SOFTWARE, V51, P245, DOI 10.1016/S0164-1212(99)00102-8
   Briand LC, 1999, IEEE T SOFTWARE ENG, V25, P91, DOI 10.1109/32.748920
   Briand P, 2001, ELECTRON COMMUN PROB, V6, P1
   Cartwright M, 1998, INFORM SOFTWARE TECH, V40, P795, DOI 10.1016/S0950-5849(98)00105-0
   Cartwright M, 2000, IEEE T SOFTWARE ENG, V26, P786, DOI 10.1109/32.879814
   CHAWLA N, 2003, P WORKSH LEARN IMB D, V2
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   Chidamber SR, 1998, IEEE T SOFTWARE ENG, V24, P629, DOI 10.1109/32.707698
   Daly J., 1996, Empirical Software Engineering, V1, P109, DOI 10.1007/BF00368701
   Darcy DP, 2005, IEEE SOFTWARE, V22, P17, DOI 10.1109/MS.2005.160
   El Emam K, 2002, IEEE T SOFTWARE ENG, V28, P494, DOI 10.1109/TSE.2002.1000452
   El Emam K, 2001, J SYST SOFTWARE, V56, P63, DOI 10.1016/S0164-1212(00)00086-8
   Emam KE, 2001, IEEE T SOFTWARE ENG, V27, P630, DOI 10.1109/32.935855
   Erni K, 1996, PROCEEDINGS OF THE 3RD INTERNATIONAL SOFTWARE METRICS SYMPOSIUM, P64, DOI 10.1109/METRIC.1996.492444
   Fowler M., 2000, Refactoring: Improving the Design of Existing Code
   Gronback R. C., 2003, Software Remodeling: Improving Design and Implementation Quality
   Gyimóthy T, 2005, IEEE T SOFTWARE ENG, V31, P897, DOI 10.1109/TSE.2005.112
   Harrison R, 2000, J SYST SOFTWARE, V52, P173, DOI 10.1016/S0164-1212(99)00144-2
   Henderson-Sellers B., 1996, Object-Oriented Metrics, measures of complexity
   Hosmer W., 2000, Applied Logistic Regression, VSecond
   Khoshgoftaar TM, 2004, EMPIR SOFTW ENG, V9, P229, DOI 10.1023/B:EMSE.0000027781.18360.9b
   Li W, 1998, J SYST SOFTWARE, V44, P155, DOI 10.1016/S0164-1212(98)10052-3
   Li W, 2000, INFORM SOFTWARE TECH, V42, P373, DOI 10.1016/S0950-5849(99)00088-9
   Li W, 2007, J SYST SOFTWARE, V80, P1120, DOI 10.1016/j.jss.2006.10.018
   Olague HM, 2007, IEEE T SOFTWARE ENG, V33, P402, DOI 10.1109/TSE.2007.1015.
   Ping Yu, 2002, Proceedings of the Sixth European Conference on Software Maintenance and Reengineering, P99, DOI 10.1109/CSMR.2002.995794
   Prechelt L, 2003, J SYST SOFTWARE, V65, P115, DOI 10.1016/S0164-1212(02)00053-5
   ROSENBERG L, 1997, P EFAITP AIE 3 ANN S
   ROSENBERG LH, 1998, P SOFTW TECHN C APR
   Shatnawi R, 2008, J SYST SOFTWARE, V81, P1868, DOI 10.1016/j.jss.2007.12.794
   Sherif JS, 1998, J SYST SOFTWARE, V44, P147, DOI 10.1016/S0164-1212(98)10051-1
   Sorkowitz A, 2005, PROC IEEE INT CONF S, P725
   Subramanyam R, 2003, IEEE T SOFTWARE ENG, V29, P297, DOI 10.1109/TSE.2003.1191795
   Szabo RM, 1995, SIXTH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P240, DOI 10.1109/ISSRE.1995.497663
   TANG MH, 1999, P 6 INT SOFTW METR S, P242, DOI DOI 10.1109/METRIC.1999.809745
   ULM K, 1991, STAT MED, V10, P341, DOI 10.1002/sim.4780100306
   van der Velde R, 2007, 2007 INTERNATIONAL WORKSHOP ON THE ANALYSIS OF MULTI-TEMPORAL REMOTE SENSING IMAGES, P1, DOI 10.1109/MULTITEMP.2007.4293031
   Van Hulse J., 2007, P 24 INT C MACH LEAR
   Zhou YM, 2006, IEEE T SOFTWARE ENG, V32, P771, DOI 10.1109/TSE.2006.102
NR 46
TC 79
Z9 85
U1 0
U2 5
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAR-APR
PY 2010
VL 36
IS 2
BP 216
EP 225
DI 10.1109/TSE.2010.9
PG 10
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 574ZH
UT WOS:000276032300007
DA 2024-07-18
ER

PT J
AU de Alfaro, L
   Faella, M
   Stoelinga, M
AF de Alfaro, Luca
   Faella, Marco
   Stoelinga, Marielle
TI Linear and Branching System Metrics
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Logics of programs; specifying and verifying and reasoning about
   programs; logics and meanings of programs; theory of computation;
   specification techniques; modal logic; mathematical logic; mathematical
   logic and formal languages
AB We extend the classical system relations of trace inclusion, trace equivalence, simulation, and bisimulation to a quantitative setting in which propositions are interpreted not as boolean values, but as elements of arbitrary metric spaces. Trace inclusion and equivalence give rise to asymmetrical and symmetrical linear distances, while simulation and bisimulation give rise to asymmetrical and symmetrical branching distances. We study the relationships among these distances and we provide a full logical characterization of the distances in terms of quantitative versions of LTL and mu-calculus. We show that, while trace inclusion (respectively, equivalence) coincides with simulation (respectively, bisimulation) for deterministic boolean transition systems, linear and branching distances do not coincide for deterministic metric transition systems. Finally, we provide algorithms for computing the distances over finite systems, together with a matching lower complexity bound.
C1 [de Alfaro, Luca] Univ Calif Santa Cruz, Sch Engn, Santa Cruz, CA 95064 USA.
   [Faella, Marco] Univ Naples Federico II, Dipatimento Sci Fis, I-80126 Naples, Italy.
   [Stoelinga, Marielle] Univ Twente, Dept Comp Sci Formal Methods & Tools, NL-7500 AE Enschede, Netherlands.
C3 University of California System; University of California Santa Cruz;
   University of Naples Federico II; University of Twente
RP de Alfaro, L (corresponding author), Univ Calif Santa Cruz, Sch Engn, 1156 High St,MS-SOE3, Santa Cruz, CA 95064 USA.
EM luca@soe.ucsc.edu; mfaella@na.infn.it; marielle@cs.utwente.nl
RI Faella, Marco/A-9223-2012
OI Stoelinga, Marielle/0000-0001-6793-8165
FU US National Science Foundation (NSF) [CCR-0132780]; NSF [CCR-0234690];
   US Office of Naval Research [N00014-02-1-0671]; NWO [642.000.505];
   DFG/NWO [62-600]; EU [IST-004527, FP7-ICT-214755]
FX The authors would like to thank the anonymous referees for their
   thorough revision of this article. This research was supported in part
   by US National Science Foundation (NSF) CAREER grant CCR-0132780, NSF
   grant CCR-0234690, US Office of Naval Research grant N00014-02-1-0671,
   NWO FOCUS/BRICKS grant 642.000.505 (MOQS), DFG/NWO grant 62-600 (VOSS2),
   and EU grants IST-004527 (ARTIST2) and FP7-ICT-214755 (QUASIMODO).
CR [Anonymous], 1973, P 5 S THEOR COMP, DOI [10.1145/800125.804029, DOI 10.1145/800125.804029]
   [Anonymous], 1991, The Temporal Logic of Reactive and Concurrent Systems
   BROWNE MC, 1988, THEOR COMPUT SCI, V59, P115, DOI 10.1016/0304-3975(88)90098-9
   CASPI P, 2002, P EMSOFT 2002 C, P294
   de Alfaro L, 2005, THEOR COMPUT SCI, V345, P139, DOI 10.1016/j.tcs.2005.07.033
   de Alfaro L, 2003, LECT NOTES COMPUT SC, V2719, P1022
   de Alfaro L, 2007, IEEE S LOG, P99, DOI 10.1109/LICS.2007.22
   DEALFARO L, 2001, P 33 ANN ACM S THEOR, P675
   Derman C, 1970, Finite State Markovian Decision Processes
   DESHARNAIS J, 1999, P CONC THEOR 10 INT, P258
   Filar JA., 1997, COMPETITIVE MARKOV D
   Fletcher P., 1982, QUASI UNIFORM SPACES
   Huth M, 1997, IEEE S LOG, P111, DOI 10.1109/LICS.1997.614940
   Kozen Dexter, 1983, P ACM S THEORY COMPU, P291, DOI [10.1145/800061.808758, DOI 10.1145/800061.808758]
   McIver AK, 2002, LECT NOTES ARTIF INT, V2514, P292, DOI 10.1007/3-540-36078-6_20
   Reif JohnH., 1979, P 11 ANN ACM S THEOR, P288
   van Breugel R, 2005, LECT NOTES COMPUT SC, V3653, P141, DOI 10.1007/11539452_14
   VANBREUGEL F, 2001, P CONCUR, P336
NR 18
TC 63
Z9 64
U1 0
U2 5
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAR-APR
PY 2009
VL 35
IS 2
BP 258
EP 273
DI 10.1109/TSE.2008.106
PG 16
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 424FT
UT WOS:000264551600009
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Donatelli, S
   Haddad, S
   Sproston, J
AF Donatelli, Susanna
   Haddad, Serge
   Sproston, Jeremy
TI Model Checking Timed and Stochastic Properties with CSL<SUP>TA</SUP>
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Verification; model checking; Markov processes
ID MARKOV-CHAINS
AB Markov chains are a well-known stochastic process that provide a balance between being able to adequately model the system's behavior and being able to afford the cost of the model solution. Systems can be modeled directly as Markov chains, or with a higher-level formalism for which Markov chains represent the underlying semantics. Markov chains are widely used to study the performance of computer and telecommunication systems. The definition of stochastic temporal logics like Continuous Stochastic Logic (CSL) and its variant asCSL, and of their model-checking algorithms, allows a unified approach to the verification of systems, allowing the mix of performance evaluation and probabilistic verification. In this paper, we present the stochastic logic CSLTA, which is more expressive than CSL and asCSL, and in which properties can be specified using automata (more precisely, timed automata with a single clock). The extension with respect to expressiveness allows the specification of properties referring to the probability of a finite sequence of timed events. A typical example is the responsiveness property "with probability at least 0.75, a message sent at time 0 by a system A will be received before time 5 by system B and the acknowledgment will be back at A before time 7", a property that cannot be expressed in either CSL or asCSL. Furthermore, the choice of using automata rather than the classical temporal operators Next and Until should help in enlarging the accessibility of model checking to a larger public. We also present a model-checking algorithm for CSLTA.
C1 [Donatelli, Susanna; Sproston, Jeremy] Univ Turin, Dipartimento Informat, I-10149 Turin, Italy.
   [Haddad, Serge] Ecole Normale Super, CNRS, UMR 8643, Lab Specificat & Verificat, F-94235 Cachan, France.
C3 University of Turin; Centre National de la Recherche Scientifique
   (CNRS); Universite Paris Saclay
RP Donatelli, S (corresponding author), Univ Turin, Dipartimento Informat, Corso Svizzera 185, I-10149 Turin, Italy.
EM susi@di.unito.it; haddad@lsv.ens-cachan.fr; sproston@di.unito.it
RI Sproston, Jeremy/AAI-5434-2021
FU  [ANR-06-SETI-002]
FX The work of S. Haddad was supported in part by the project
   ANR-06-SETI-002 CheckBound. The work of S. Donatelli and J. Sproston was
   supported in part by the EEC project 027513 Crutial. The authors would
   like to thank the anonymous reviewers for the many useful and detailed
   suggestions and corrections.
CR ALUR R, 1993, INFORM COMPUT, V104, P2, DOI 10.1006/inco.1993.1024
   Alur R, 1996, J ACM, V43, P116, DOI 10.1145/227595.227602
   ALUR R, 1994, THEORETICAL COMPUTER, V126, P235
   [Anonymous], STTT
   [Anonymous], UML PROF SCHED PERF
   Aziz Adnan, 2000, ACM Trans. Comput. Logic, V1, P162, DOI DOI 10.1145/343369.343402
   Baier C, 2003, IEEE T SOFTWARE ENG, V29, P524, DOI 10.1109/TSE.2003.1205180
   Baier C, 2007, IEEE T SOFTWARE ENG, V33, P209, DOI 10.1109/TSE.2007.36
   Balsamo S, 2004, IEEE T SOFTWARE ENG, V30, P295, DOI 10.1109/TSE.2004.9
   BEHRMANN G, 2004, P IEEE QUANT EV SYST, P125
   Bernardi S, 2007, J SYST SOFTWARE, V80, P1843, DOI 10.1016/j.jss.2007.02.029
   Bouajjani A, 1996, LECT NOTES COMPUT SC, V1135, P306
   Canevet C, 2003, IEE P-COMPUT DIG T, V150, P107, DOI 10.1049/ip-cdt:20030084
   CLARK G, 1996, P UK PERF ENG WORKSH
   Clarke E. M., 1992, Journal of Logic and Computation, V2, P605, DOI 10.1093/logcom/2.5.605
   Clarke EM, 1999, MODEL CHECKING, P1
   Cortellessa V., 2000, Proceedings Second International Workshop on Software and Performance. WOSP2000, P58, DOI 10.1145/350391.350406
   Donatelli S, 2007, INT CONF QUANT EVAL, P31, DOI 10.1109/QEST.2007.40
   EMERSON EA, 1986, J ACM, V33, P151, DOI 10.1145/4904.4999
   German R., 2000, PERFORMANCE ANAL COM
   Haverkort B, 2002, INTERNATIONAL CONFERENCE ON DEPENDABLE SYSTEMS AND NETWORKS, PROCEEDINGS, P103, DOI 10.1109/DSN.2002.1028891
   Jensen A, 1953, SKAND AKTUARIETIDSKR, V36, P87, DOI 10.1080/03461238.1953.10419459
   LAROUSSINIE F, 2004, P C CONC THEOR, P387
   Lindemann C., 1998, Performance Modelling with Deterministic and Stochastic Petri Nets
   MARSON MA, 1986, P INT C APPL THEOR P, P132
   Obal WD, 1999, PERFORM EVALUATION, V35, P233, DOI 10.1016/S0166-5316(99)00010-3
   OMG-Object Management Group, 2007, UML PROF MOD AN REAL
   Ouaknine J, 2004, IEEE S LOG, P54, DOI 10.1109/LICS.2004.1319600
   Smith C.U., 1990, Performance engineering of software systems, VSeventh
   VARDI MY, 1994, INFORM COMPUT, V115, P1, DOI 10.1006/inco.1994.1092
NR 30
TC 47
Z9 48
U1 0
U2 3
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAR-APR
PY 2009
VL 35
IS 2
BP 224
EP 240
DI 10.1109/TSE.2008.108
PG 17
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 424FT
UT WOS:000264551600007
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Sarkar, S
   Kak, AC
   Rama, GM
AF Sarkar, Santonu
   Kak, Avinash C.
   Rama, Girish Maskeri
TI Metrics for measuring the quality of modularization of large-scale
   object-oriented software
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article; Proceedings Paper
CT International Symposium on Software Testing and Analysis (ISSTA)
CY 2007
CL Univ London Sch Oriental & African Studies, Brunei Gallery, London,
   ENGLAND
HO Univ London Sch Oriental & African Studies, Brunei Gallery
DE superpackage; modularization; software metrics/measurement; module;
   interface; object-oriented software; large-scale software; maintenance
   and enhancement; maintainability; coupling
ID EMPIRICAL VALIDATION; COUPLING MEASUREMENT; DESIGN; SUITE; COHESION
AB The metrics formulated to date for characterizing the modularization quality of object-oriented software have considered module and class to be synonymous concepts. But, a typical class in object-oriented programming exists at too low a level of granularity in large object-oriented software consisting of millions of lines of code. A typical module (sometimes referred to as a superpackage) in a large object-oriented software system will typically consist of a large number of classes. Even when the access discipline encoded in each class makes for "clean" class-level partitioning of the code, the intermodule dependencies created by associational, inheritance-based, and method invocations may still make it difficult to maintain and extend the software. The goal of this paper is to provide a set of metrics that characterizes large object-oriented software systems with regard to such dependencies. Our metrics characterize the quality of modularization with respect to the APIs of the modules, on the one hand, and, on the other, with respect to such object-oriented intermodule dependencies as caused by inheritance, associational relationships, state access violations, fragile base-class design, etc. Using a two-pronged approach, we validate the metrics by applying them to popular open-source software systems.
C1 [Sarkar, Santonu] Accenture Technol Labs, Bangalore 560029, Karnataka, India.
   [Kak, Avinash C.] Purdue Univ, W Lafayette, IN 47907 USA.
   [Rama, Girish Maskeri] Infosys Technol Ltd, SETLabs, Bangalore 560100, Karnataka, India.
C3 Accenture; Purdue University System; Purdue University; Infosys Limited
RP Sarkar, S (corresponding author), Accenture Technol Labs, IBC Knowledge Pk,4-1 Banerghatta Rd, Bangalore 560029, Karnataka, India.
EM santonu.sarkar@accenture.com; kak@ecn.purdue.edu;
   girish_rama@infosys.com
OI Sarkar, Santonu/0000-0001-9470-7012
CR ABREU F, 1995, P 5 INT C SOFTW QUAL
   ABREU FBE, 1994, J SYST SOFTWARE, V26, P87, DOI 10.1016/0164-1212(94)90099-X
   ABREU FBE, 1995, P 9 EUR C OBJ OR PRO
   Agrawal R., 1994, P INT VLDB C VLDB 94, P487, DOI DOI 10.5555/645920.672836
   ALDRICH J, 2004, P 3 WORKSH SPEC VER
   Alshayeb M, 2003, IEEE T SOFTWARE ENG, V29, P1043, DOI 10.1109/TSE.2003.1245305
   [Anonymous], 1994, Object-oriented software metrics: a practical guide
   Arisholm E, 2004, IEEE T SOFTWARE ENG, V30, P491, DOI 10.1109/TSE.2004.41
   Bandi RK, 2003, IEEE T SOFTWARE ENG, V29, P77, DOI 10.1109/TSE.2003.1166590
   Bansiya J, 1999, J OBJECT-ORIENT PROG, V11, P47
   Barker R, 2007, 14TH ASIA-PACIFIC SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P414, DOI 10.1109/ASPEC.2007.49
   Basili VR, 1996, IEEE T SOFTWARE ENG, V22, P751, DOI 10.1109/32.544352
   BORGELT C., 2003, P IEEE ICDM WORKSH F
   Briand LC, 2000, J SYST SOFTWARE, V51, P245, DOI 10.1016/S0164-1212(99)00102-8
   Briand LC, 1999, IEEE T SOFTWARE ENG, V25, P91, DOI 10.1109/32.748920
   Briand LC, 1999, IEEE T SOFTWARE ENG, V25, P722, DOI 10.1109/32.815329
   CAREY MM, 2007, P 15 IEEE INT C PROG
   CHEN JY, 1993, INFORM SOFTWARE TECH, V35, P232, DOI 10.1016/0950-5849(93)90071-A
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   Churcher N. I., 1995, ACM SIGSOFT SOFTWARE, V20, P69
   CHURCHER NI, 1995, IEEE T SOFTWARE ENG, V21, P263, DOI 10.1109/32.372153
   COOK TD, 2002, EXPT QUASI EXPT DESI
   COPPICK JC, 1992, 1992 ACM COMPUTER SCIENCE CONFERENCE, PROCEEDINGS, P317, DOI 10.1145/131214.131254
   COUNSELL S, 2002, BBKCS0210 U LOND
   Counsell S, 2006, ACM T SOFTW ENG METH, V15, P123, DOI 10.1145/1131421.1131422
   Dagpinar M, 2003, 10TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P155, DOI 10.1109/WCRE.2003.1287246
   Etzkorn L, 1998, J OBJECT-ORIENT PROG, V11, P27
   GHASSEMI MD, 2000, P ACM SIGPLAN C OBJ, P47
   Gyimóthy T, 2005, IEEE T SOFTWARE ENG, V31, P897, DOI 10.1109/TSE.2005.112
   Halstead M. H., 1977, ELEMENTS SOFTWARE SC
   Harrison R, 1998, IEEE T SOFTWARE ENG, V24, P491, DOI 10.1109/32.689404
   HENDERSONSELLER. B, 1996, OBJECT ORIENTED METR
   Hitz M, 1996, IEEE T SOFTWARE ENG, V22, P267, DOI 10.1109/32.491650
   JOHNSON RE, 1988, J OBJECT-ORIENT PROG, V1, P22
   Kabaili H, 2001, FIFTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P39, DOI 10.1109/CSMR.2001.914966
   Kontogiannis K, 1997, PROCEEDINGS OF THE FOURTH WORKING CONFERENCE ON REVERSE ENGINEERING, P44, DOI 10.1109/WCRE.1997.624575
   LAGUE B, 1997, P INT C SOFTW MAINT
   Lee AS, 2003, INFORM SYST RES, V14, P221, DOI 10.1287/isre.14.3.221.16560
   LEE YK, 1993, P SOC PHOTO-OPT INS, V2026, P302, DOI 10.1117/12.163618
   Li W, 1998, J SYST SOFTWARE, V44, P155, DOI 10.1016/S0164-1212(98)10052-3
   LI W, 1993, J SYST SOFTWARE, V23, P111, DOI 10.1016/0164-1212(93)90077-B
   Li ZM, 2006, IEEE T SOFTWARE ENG, V32, P176, DOI 10.1109/TSE.2006.28
   Marinescu R, 2001, TOOLS, V39, P173, DOI 10.1109/TOOLS.2001.941671
   Martin R.C., 2000, Design Principles and Design Patterns
   McCabe T., 1994, CROSSTALK, V7, P5
   Mikhajlov L., 1998, ECOOP'98 - Object-Oriented Programming. 12th European Conference. Proceedings, P355, DOI 10.1007/BFb0054099
   Olague HM, 2007, IEEE T SOFTWARE ENG, V33, P402, DOI 10.1109/TSE.2007.1015.
   OMAN P, 1994, J SYST SOFTWARE, V24, P251, DOI 10.1016/0164-1212(94)90067-1
   Sarkar S, 2007, IEEE T SOFTWARE ENG, V33, P14, DOI 10.1109/TSE.2007.256942
   Sartipi K, 2001, EIGHTH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P103, DOI 10.1109/WCRE.2001.957814
   Simon F, 2001, FIFTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P30, DOI 10.1109/CSMR.2001.914965
   Strnisa R, 2007, ACM SIGPLAN NOTICES, V42, P499, DOI 10.1145/1297105.1297064
   Subramanyam R, 2003, IEEE T SOFTWARE ENG, V29, P297, DOI 10.1109/TSE.2003.1191795
   *SUN MICR INC, 2008, JSR 277 JAVAMODULE S
   *SUN MICR INC, 2008, JSR 294 IMPR MOD SUP
NR 55
TC 50
Z9 59
U1 1
U2 18
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD SEP-OCT
PY 2008
VL 34
IS 5
BP 700
EP 720
DI 10.1109/TSE.2008.43
PG 21
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Engineering
GA 351WM
UT WOS:000259456600009
DA 2024-07-18
ER

PT J
AU Mitchell, B
AF Mitchell, Bill
TI Characterizing communication channel deadlocks in sequence diagrams
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE requirements analysis; formal methods; distributed programming
AB UML sequence diagrams (SDs) are a mainstay of requirements specifications for communication protocols. Mauw and Reniers' algebraic (MRA) semantics formally specifies a behavior for these SDs that guarantees deadlock-free processes. Practitioners commonly use communication semantics that differ from MRA, which may result in deadlocks, for example, FIFO, token ring, etc. We define a process algebra that is an extension of the MRA semantics for regular SDs. Our algebra can describe several commonly used communication semantics. Regular SDs are constructed from concurrent message flows via iteration, branching, and sequential composition. Their behavior is defined in terms of a set of partial orders on the events in the SD. Such partial orders are known as causal orders. We define partial order theoretic properties of a causal order that are particular kinds of race condition. We prove that any of the common communication semantics that we list either guarantees deadlock-free SDs or can result in a deadlock if and only if a causal order of an SD contains one of these types of race condition. This describes a complete classification of deadlocks as specific types of race condition.
C1 Univ Surrey, Dept Comp, Guildford GU2 7XH, Surrey, England.
C3 University of Surrey
RP Mitchell, B (corresponding author), Univ Surrey, Dept Comp, Guildford GU2 7XH, Surrey, England.
EM w.mitchell@surrey.ac.uk
CR Alur R., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, P304, DOI 10.1109/ICSE.2000.870421
   Alur R, 2001, LECT NOTES COMPUT SC, V2076, P797
   Alur R, 1999, LECT NOTES COMPUT SC, V1664, P114
   Alur R, 1996, SOFTWARE-CONC TOOL, V17, P70
   Amyot D, 2003, TELECOMMUN SYST, V24, P61, DOI 10.1023/A:1025890110119
   BAKER P, 2004, P 3 SENS ARR MULT SI, P170
   Baker P., 2005, P 10 EUR SOFTW ENG C, P50
   BENABDHALLAH H, 1997, P 3 INT C TOOLS ALG, P259
   Beyer M, 2003, ATS 2003: 12TH ASIAN TEST SYMPOSIUM, PROCEEDINGS, P102
   Bontemps Y, 2003, THIRD INTERNATIONAL CONFERENCE ON APPLICATION OF CONCURRENCY TO SYSTEM DESIGN, PROCEEDINGS, P41, DOI 10.1109/CSD.2003.1207698
   BONTEMPS Y, 2002, P 24 INT C SOFTW ENG
   Chung IS, 1999, INTERNATIONAL SYMPOSIUM ON SOFTWARE ENGINEERING FOR PARALLEL AND DISTRIBUTED SYSTEMS, PROCEEDINGS, P72, DOI 10.1109/PDSE.1999.779740
   Damm W, 2001, FORM METHOD SYST DES, V19, P45, DOI 10.1023/A:1011227529550
   *ETSI EG, 2001, 201872 ETSI EG
   *ETSI EG, 2003, 202106 ETSI EG
   GEHRKE T, 1998, P JOINT INT C FORM D, P3
   GUNTER E, 2001, P TOOLS ALG CONSTR A, P496
   Harel D, 2005, LECT NOTES COMPUT SC, V3393, P309
   Harel D., 2002, International Journal of Foundations of Computer Science, V13, P5, DOI 10.1142/S0129054102000935
   KRUGER I, 1998, P IFIP WG10 3 WG10 5, P61
   Leue S, 1998, 13TH IEEE INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P192, DOI 10.1109/ASE.1998.732635
   LOHREY M, 2002, P 13 INT C CONC THEO, P177
   Mauw S, 1999, COMPUT NETW, V31, P1785, DOI 10.1016/S1389-1286(99)00060-2
   MAUW S, 1995, COMPUT J, V7, P473
   Mitchell B, 2005, IEEE T SOFTWARE ENG, V31, P767, DOI 10.1109/TSE.2005.104
   Mitchell B, 2003, FEATURE INTERACTIONS IN TELECOMMUNICATIONS AND SOFTWARE SYSTEMS VII, P77
   MITCHELL B, 2004, P INT C THEOR ASP CO, P114
   *MOST COOP, 2005, MOST DYN SPEC
   *OBJ MAN GROUP, 2004, UN MOD LANG SPEC VER
   Rountev A, 2005, PROC INT CONF SOFTW, P254
   RUDOLPH E, 2000, DEV MSC UML TEST FOR, P153
   Schultz P.W., 2000, The Journal of Environmental Education, V31, P22, DOI [10.1080/00958960009598635, DOI 10.1080/00958960009598635]
   Sun J, 2005, LECT NOTES COMPUT SC, V3582, P415
   Uchitel S, 2004, ACM T SOFTW ENG METH, V13, P37, DOI 10.1145/1005561.1005563
   Uchitel S, 2007, PROC INT CONF SOFTW, P34
   Wang HH, 2007, TASE 2007: FIRST JOINT IEEE/IFIP SYMPOSIUM ON THEORETICAL ASPECTS OF SOFTWARE ENGINEERING, PROCEEDINGS, P379, DOI 10.1109/TASE.2007.41
   White J, 2005, PROTEAS BIOL DIS, V4, P1
NR 37
TC 12
Z9 14
U1 0
U2 4
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAY-JUN
PY 2008
VL 34
IS 3
BP 305
EP 320
DI 10.1109/TSE.2008.28
PG 16
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 306CA
UT WOS:000256223600001
OA Green Accepted, Green Submitted
DA 2024-07-18
ER

PT J
AU Bartoletti, M
   Degano, P
   Ferrari, GL
   Zunino, R
AF Bartoletti, Massimo
   Degano, Pierpaolo
   Ferrari, Gian Luigi
   Zunino, Roberto
TI Semantics-based design for secure web services
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE web services; call-by-contract; language-based security; static
   analysis; system verification
AB We outline a methodology for designing and composing services in a secure manner. In particular, we are concerned with safety properties of service behavior. Services can enforce security policies locally and can invoke other services that respect given security contracts. This call-by-contract mechanism offers a significant set of opportunities, each driving secure ways to compose services. We discuss how we can correctly plan service compositions in several relevant classes of services and security properties. With this aim, we propose a graphical modeling framework based on a foundational calculus called lambda(req) [13]. Our formalism features dynamic and static semantics, thus allowing for formal reasoning about systems. Static analysis and model checking techniques provide the designer with useful information to assess and fix possible vulnerabilities.
C1 [Bartoletti, Massimo; Degano, Pierpaolo; Ferrari, Gian Luigi; Zunino, Roberto] Univ Pisa, Dipartimento Informat, I-56127 Pisa, Italy.
C3 University of Pisa
RP Bartoletti, M (corresponding author), Univ Pisa, Dipartimento Informat, L Go B Pontecorvo 3, I-56127 Pisa, Italy.
EM bart@di.unipi.it; degano@di.unipi.it; giangi@di.unipi.it;
   zunino@di.unipi.it
OI Bartoletti, Massimo/0000-0003-3796-9774; FERRARI,
   GIAN-LUIGI/0000-0003-3548-5514
CR Abadi M., 2003, P 10 ANN NETW DISTR
   ANDERSON S, 2005, WEB SERVICES TRUST L
   [Anonymous], WEB SERVICES CONCEPT
   [Anonymous], 2000, UDDI TECHN WHIT PAP
   Atkinson B., 2002, WEB SERVICES SECURIT
   BANERJEE A, 2004, P WORKSH CONSTR AN S
   BARENDREGT HP, 1987, PARALLEL LANGUAGES P
   Bartoletti M., 2006, P 19 COMP SEC FDN WO
   BARTOLETTI M, 2007, IN PRESS J COMPUTER
   BARTOLETTI M, 2007, P 10 INT C FDN SOFTW
   BARTOLETTI M, 2005, P 8 INT C FDN SOFTW
   BARTOLETTI M, 2006, P 6 INT WORKSH ISS T
   BARTOLETTI M, 2006, P 8 IFIP INT C FORM
   Bartoletti M., 2005, P 18 COMP SEC FDN WO
   BHARGAVAN K, 2004, P 31 ANN ACM S PRINC
   Bhargavan K., 2004, P ACM WORKSH SEC WEB
   BLOCH B, 2005, WEB SERVICES BUSINES
   Booth D., 2006, WEB SERVICE DESCRIPT
   BOREALE M, 2006, P 3 INT WORKSH WEB S
   Box D., 2000, SIMPLE OBJECT ACCESS
   BRUNI R, 2005, P 32 S PRINC PROGR L
   BUSI N, 2006, P 8 INT C COORD MOD
   BUSI N, 2005, P 3 INT C SERV OR CO
   CARBONE M, 2007, P 16 EUR S PROGR LAN
   CURBERA F, 2003, COMM ACM, V46
   EDJLALI G, 1999, P 5 ACM C COMP COMM
   FERRARI GL, 2006, P 26 INT C FORM METH
   FIADEIRO JL, 2006, P 3 INT WORKSH WEB S
   FONG P., 2004, P IEEE S SEC PRIV
   FOSTER H, 2003, P 18 IEEE INT C AUT
   GARCIAMOLINA H, 1987, P ACM SIGMOD 87
   GARDNER T, 2003, UML 1 4 PROFILE AUTO
   GONG L., 1999, INSIDE JAVA 2 PLATFO
   GUIDI C, 2006, P 4 INT C SERV OR CO
   IGARASHI A, 2002, P 29 S PRINC PROGR L
   LAPADULA A, 2007, P 16 EUR S PROGR LAN
   MISRA J, 2004, P 2 INT C SOFTW ENG
   MONTANGERO C, 2007, IST2005016004 SENSOR
   Nielson F., 1999, Principles of Program Analysis
   Papazoglou M.P., 2003, P 4 INT C WEB INF SY
   PAPAZOGLOU MP, 2003, COMM ACM, V46
   *SCA CONS, 2005, BUILD SYST US SERV O
   SCHNEIDER FB, 2000, ACM T INFORM SYSTEM, V3
   SKALKA C, 2004, P 2 AS PROGR LANG S
   STAL M, 2002, COMM ACM, V55
   TOMA I, 2006, NONFUNCTIONAL PROPER
   VANDERAALST WMP, 2003, DISTRIBUTED PARALLEL, V14
   Vedamuthu, 2006, WEB SERVICES POLICY
   Vogels W, 2003, IEEE INTERNET COMPUT, V7, P59, DOI 10.1109/MIC.2003.1250585
   WIRSING M, 2006, P 26 INT C FORM METH
   Yahalom R., 1993, P IEEE S SEC PRIV
NR 51
TC 36
Z9 40
U1 1
U2 10
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JAN-FEB
PY 2008
VL 34
IS 1
BP 33
EP 49
DI 10.1109/TSE.2007.70740
PG 17
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 265QH
UT WOS:000253375500004
DA 2024-07-18
ER

PT J
AU Heitmeyer, CL
   Archer, MM
   Leonard, EI
   McLean, JD
AF Heitmeyer, Constance L.
   Archer, Myla M.
   Leonard, Elizabeth I.
   McLean, John D.
TI Applying formal methods to a certifiably secure software system
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE security; verification; specification; security kernels; tools; formal
   methods; software; software verification
ID REQUIREMENTS SPECIFICATIONS; MODEL; PROGRAMS; DESIGN; PVS
AB A major problem in verifying the security of code is that the code's large size makes it much too costly to verify in its entirety. This paper describes a novel and practical approach to verifying the security of code which substantially reduces the cost of verification. In this approach, a compact security model containing only information needed to reason about the security properties of interest is constructed and the security properties are represented formally in terms of the model. To reduce the cost of verification, the code to be verified is partitioned into three categories and only the first category, which is less than 10 percent of the code in our application, requires formal verification. The proof of the other two categories is relatively trivial. Our approach was developed to support a Common Criteria evaluation of the separation kernel of an embedded software system. This paper describes 1) our, techniques and theory for verifying the kernel code and 2) the artifacts produced, that is, a Top-Level Specification (TLS), a formal statement of the security property, a mechanized proof that the TLS satisfies the property, the partitioning of the code, and a demonstration that the code conforms to the TLS. This paper also presents the formal basis for the argument that the kernel code conforms to the TLS and consequently satisfies the security property.
C1 [Heitmeyer, Constance L.; Archer, Myla M.; Leonard, Elizabeth I.; McLean, John D.] USN, Res Lab, Div Informat Technol, Washington, DC 20375 USA.
C3 United States Department of Defense; United States Navy; Naval Research
   Laboratory
RP Heitmeyer, CL (corresponding author), USN, Res Lab, Div Informat Technol, 4555 Overloook Ave SW, Washington, DC 20375 USA.
EM heitmeyer@itd.nrl.navy.mil; archer@itd.nrl.navy.mil;
   leonard@itd.nrl.navy.mil; mclean@itd.nrl.navy.mil
RI Heitmeyer, Constance/AAM-4686-2021; Heitmeyer, Constance L/F-6500-2011
OI Heitmeyer, Constance/0000-0001-7942-9309
CR ABADI M, 1991, THEOR COMPUT SCI, V82, P253, DOI 10.1016/0304-3975(91)90224-P
   ADAMS C, 2004, AVIATION TODAY
   ALPERN B, 1985, INFORM PROCESS LETT, V21, P181, DOI 10.1016/0020-0190(85)90056-0
   ALVESFOSS J, 2004, P 5 INT WORKSH ACL2
   ANDERSON JP, 1972, ESDTR7351 HANSC AFB
   [Anonymous], LNCS
   [Anonymous], 2003, High Integrity Software: The SPARK Approach to Safety and Security
   Archer M., 2002, Automated Software Engineering, V9, P201, DOI 10.1023/A:1016320523091
   Archer M, 2000, ANN MATH ARTIF INTEL, V29, P139, DOI 10.1023/A:1018913028597
   ARCHER M, 2006, P 3 INT VER WORKSH
   BENZEL T, 1984, P IEEE S SEC PRIV AP
   *CCIMB, 2004, CCIMB200401001
   Chechik M, 2001, IEEE T SOFTWARE ENG, V27, P651, DOI 10.1109/32.935856
   CLARKE E, 2000, P 12 INT C COMP AID
   CLARKE EM, 1994, P 21 ACM S PRINC PRO
   CYRLUK D, 1993, SRICSL9312
   DAS M, 2006, P 18 INT C COMP AID
   FRAIM L, 1987, P FALL JOINT COMP C
   Gargantini A, 1999, LECT NOTES COMPUT SC, V1687, P146, DOI 10.1145/318774.318939
   GERHART S, 1994, IEEE SOFTWARE, P37
   GOGUEN JA, 1992, P IEEE S RES SEC PRI, P11
   GOOD DI, 1985, MATH LOGIC PROGRAMMI, P55
   GREVE D, 2003, P 4 INT WORKSH ACL2
   GREVE D, 2004, P 5 INT WORKSH ACL2
   HALLEM S, 2002, PLDI, P00069, DOI DOI 10.1145/512529.512539
   Heitmeyer C, 2005, COMPUT SYST SCI ENG, V20, P19
   Heitmeyer C. L., 1996, ACM Transactions on Software Engineering and Methodology, V5, P231, DOI 10.1145/234426.234431
   HEITMEYER CL, 2006, P 13 ACM C COMP COMM, P346, DOI DOI 10.1145/1180405.1180448
   JUERJENS J, 2005, P 27 INT C SOFTW ENG
   Kremenek T., 2006, P 7 S OP SYST DES IM
   LAMPORT L, 1977, IEEE T SOFTWARE ENG, V3, P125, DOI 10.1109/TSE.1977.229904
   LAMPSON B, 1991, P 5 PRINC C INF SCI
   LANDWEHR CE, 1984, ACM T COMPUT SYST, V2, P198, DOI 10.1145/989.991
   LUNT TF, 1990, IEEE T SOFTWARE ENG, V16, P593, DOI 10.1109/32.55088
   McLean J., 1984, Proceedings of the 1984 Symposium on Security and Privacy, P188
   McLean J., 1994, Proceedings of 1994 IEEE Computer Society Symposium on Research in Security and Privacy (Cat. No.94CH3444-7), P79, DOI 10.1109/RISP.1994.296590
   McLean J., 1994, Encyclopedia of Software Engineering
   McMillan K. L., 1999, P 10 IFIP WG 10 5 AD
   MEADOWS C, 1999, P IEEE S SEC PRIV
   MEYER B, 1992, COMPUTER, V25, P40, DOI 10.1109/2.161279
   MOORE J, 1998, IEEE T COMPUTERS, V47
   OWRE S, 1995, IEEE T SOFTWARE ENG, V21, P107, DOI 10.1109/32.345827
   RICHARDS R, 2004, P 5 INT WORKSH ACL2
   ROBINSON L, 1977, COMMUN ACM, V20, P271, DOI 10.1145/359461.359483
   ROBINSON L, 1979, HDM HDB, V1
   ROTHAMEL T, 2006, P ACM C LANGUAGES CO
   RUSHBY J, 1994, P 13 ACM S PRINC DIS
   RUSHBY J, 1991, CSL912 SRI INT
   Rushby JM, 1981, P 8 ACM S OP SYST PR
   Schneider F. B., 2000, ACM Transactions on Information and Systems Security, V3, P30, DOI 10.1145/353323.353382
   Shankar N., 2001, PVS PROVER GUIDE VER
   SMARAGDAKIS Y, 2007, P 1 INT C TESTS PROO, P1
   SMITH R, 2001, ACM T INFORM SYSTEM, V4
   WHITEHURST R, 1989, P 2 IEEE COMP SEC FD
NR 54
TC 39
Z9 53
U1 0
U2 10
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JAN-FEB
PY 2008
VL 34
IS 1
BP 82
EP 98
DI 10.1109/TSE.2007.70772
PG 17
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 265QH
UT WOS:000253375500007
OA hybrid
DA 2024-07-18
ER

PT J
AU Concas, G
   Marchesi, M
   Pinna, S
   Serra, N
AF Concas, Giulio
   Marchesi, Michele
   Pinna, Sandro
   Serra, Nicola
TI Power-laws in a large oriented software system
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE object-oriented programming; statistical methods; complexity measures;
   product metrics; software science; object-oriented languages; stochastic
   processes
ID METRICS
AB We present a comprehensive study of an implementation of the Smalltalk object-oriented system, one of the first and purest object-oriented programming environments, searching for scaling laws in its properties. We study 10 system properties, including the distributions of variable and method names, inheritance hierarchies, class and method sizes, and system architecture graph. We systematically found Pareto-or, sometimes, log-normal-distributions in these properties. This denotes that the programming activity, even when modeled from a statistical perspective, can in no way be simply modeled as a random addition of independent increments with finite variance, but exhibits strong organic dependencies on what has been already developed. We compare our results with similar ones obtained for large Java systems, reported in the literature or computed by us for those properties never studied before, showing that the behavior found is similar in all studied object-oriented systems. We show how the Yule process is able to stochastically model the generation of several of the power-laws found, identifying the process parameters and comparing theoretical and empirical tail indexes. Lastly, we discuss how the distributions found are related to existing object-oriented metrics, like Chidamber and Kemerer's, and how they could provide a starting point for measuring the quality of a whole system, versus that of single classes. In fact, the usual evaluation of systems based on mean and standard deviation of metrics can be misleading. It is more interesting to measure differences in the shape and coefficients of the data's statistical distributions.
C1 Univ Cagliari, Dept Elect & Elect Engn, I-09123 Cagliari, Italy.
C3 University of Cagliari
RP Concas, G (corresponding author), Univ Cagliari, Dept Elect & Elect Engn, Piazza Armi, I-09123 Cagliari, Italy.
EM concas@diee.unica.it; michele@diee.unica.it; pinnasandro@diee.unica.it;
   nicola.serra@diee.unica.it
RI Marchesi, Michele/U-7048-2019
OI Marchesi, Michele/0000-0003-1540-8773
CR [Anonymous], EXPT QUASI EXPT DESI
   [Anonymous], P 3 IEEE INT WORKSH
   Axtell RL, 2001, SCIENCE, V293, P1818, DOI 10.1126/science.1062081
   Barabási AL, 1999, SCIENCE, V286, P509, DOI 10.1126/science.286.5439.509
   Basili VR, 1996, IEEE T SOFTWARE ENG, V22, P751, DOI 10.1109/32.544352
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   Chidamber SR, 1998, IEEE T SOFTWARE ENG, V24, P629, DOI 10.1109/32.707698
   Concas G, 2006, PHYSICA A, V370, P817, DOI 10.1016/j.physa.2006.02.024
   DEMOURA A, 2003, PHYS REV E, P68
   FOCARDI S, 2000, EXTREME PROGRAMMING, P191
   Gabaix X, 1999, Q J ECON, V114, P739, DOI 10.1162/003355399556133
   Gabaix X., 2004, Handbook of urban and regional economics, V4, P2341
   Gamma Erich., 2003, CONTRIBUTING ECLIPSE
   Goldberg A., 1989, Smalltalk-80 : The Language
   Gorshenev AA, 2004, PHYS REV E, V70, DOI 10.1103/PhysRevE.70.067103
   Gyimóthy T, 2005, IEEE T SOFTWARE ENG, V31, P897, DOI 10.1109/TSE.2005.112
   MEYER B, 1997, OBJECT ORIENTED CONS
   Myers CR, 2003, PHYS REV E, V68, DOI 10.1103/PhysRevE.68.046116
   Newman MEJ, 2005, CONTEMP PHYS, V46, P323, DOI 10.1080/00107510500052444
   Newman MEJ, 2003, SIAM REV, V45, P167, DOI 10.1137/S003614450342480
   Pagan A, 1996, J EMPIR FINANC, V3, p15~102, DOI [10.1016/0927-5398(95)00020-8, DOI 10.1016/0927-5398(95)00020-8]
   PARETO V, 1897, COURS ECONOMIQUE POL
   Potanin A, 2005, COMMUN ACM, V48, P99, DOI 10.1145/1060710.1060716
   SIMON HA, 1955, BIOMETRIKA, V42, P425
   Subramanyam R, 2003, IEEE T SOFTWARE ENG, V29, P297, DOI 10.1109/TSE.2003.1191795
   Tamai Tetsuo, 2002, P INT WORKSH PRINC S, P120
   Valverde S, 2002, EUROPHYS LETT, V60, P512, DOI 10.1209/epl/i2002-00248-2
   VALVERDE S, 2003, SFI0307044 SANT FE I
   Willinger W., 2004, P 4 ACM SIGCOMM C IN, P88
   Yamasaki K, 2006, PHYS REV E, V74, DOI 10.1103/PhysRevE.74.035103
   ZIPF G, 1932, HARVAND U
NR 31
TC 136
Z9 166
U1 1
U2 14
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD OCT 7
PY 2007
VL 33
IS 10
BP 687
EP 708
DI 10.1109/TSE.2007.1019
PG 22
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 204XB
UT WOS:000249076200004
DA 2024-07-18
ER

PT J
AU Kitchenham, BA
   Mendes, E
   Travassos, GH
AF Kitchenham, Barbara A.
   Mendes, Emilia
   Travassos, Guilherme H.
TI Cross versus within-company cost estimation studies: A systematic review
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Review
DE cost estimation; management; systematic review; software engineering
AB The objective of this paper is to determine under what circumstances individual organizations would be able to rely on cross-company-based estimation models. We performed a systematic review of studies that compared predictions from cross-company models with predictions from within-company models based on analysis of project data. Ten papers compared cross-company and within-company estimation models; however, only seven presented independent results. Of those seven, three found that cross-company models were not significantly different from within-company models, and four found that cross-company models were significantly worse than within-company models. Experimental procedures used by the studies differed making it impossible to undertake formal meta-analysis of the results. The main trend distinguishing study results was that studies with small within-company data sets (i.e., < 20 projects) that used leave-one-out cross validation all found that the within-company model was significantly different ( better) from the cross-company model. The results of this review are inconclusive. It is clear that some organizations would be ill-served by cross-company models whereas others would benefit. Further studies are needed, but they must be independent (i.e., based on different data bases or at least different single company data sets) and should address specific hypotheses concerning the conditions that would favor cross-company or within-company models. In addition, experimenters need to standardize their experimental procedures to enable formal meta-analysis, and recommendations are made in Section 3.
C1 Univ Keele, Sch Comp & Math, Keele ST5 5BG, Staffs, England.
   Univ Auckland, Dept Comp Sci, Auckland 1, New Zealand.
   Univ Fed Rio de Janeiro, COPPE, Syst Engn & Comp Sci Program, BR-21941972 Rio De Janeiro, Brazil.
C3 Keele University; University of Auckland; Universidade Federal do Rio de
   Janeiro
RP Kitchenham, BA (corresponding author), Univ Keele, Sch Comp & Math, Keele ST5 5BG, Staffs, England.
EM b.a.kitchenham@cs.keele.ac.uk; emilia@cs.auckland.ac.nz; ght@cos.ufrj.br
RI Kitchenham, Barbara/AAL-4311-2020; Mendes, Maria E/B-4207-2015;
   Travassos, Guilherme Horta/G-2842-2012
OI Kitchenham, Barbara/0000-0002-6134-8460; Mendes,
   Emilia/0000-0003-0449-5322; Travassos, Guilherme
   Horta/0000-0002-4258-0424
CR [Anonymous], ICL TECHNICAL J
   [Anonymous], 2001, PRACTICAL METAANALYS
   [Anonymous], 2005, P INT S EMP SOFTW EN
   [Anonymous], P EASE
   [Anonymous], 1977, DATA ANAL REGRESSION
   [Anonymous], 2004, PROCEDURES PERFORMIN
   Boehm BW., 1981, Software Engineering Economics
   Briand L. C., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P313, DOI 10.1109/ICSE.1999.841022
   Briand L. C., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, P377, DOI 10.1109/ICSE.2000.870428
   DEMARCO T, 1982, CONTROLLING SOFTWARE
   Foss T, 2003, IEEE T SOFTWARE ENG, V29, P985, DOI 10.1109/TSE.2003.1245300
   Jeffery R, 2000, SEVENTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM - METRICS 2001, PROCEEDINGS, P16, DOI 10.1109/METRIC.2001.915512
   Jeffery R, 2000, INFORM SOFTWARE TECH, V42, P1009, DOI 10.1016/S0950-5849(00)00153-1
   Kemerer C.F., 1987, COMM ACM, V30
   Kirshbom PM, 2002, J THORAC CARDIOV SUR, V123, P130, DOI 10.1067/mtc.2002.118504
   KITCHENHAM BA, 2006, P EMP ASS SOFTW ENG
   KOK PAM, 1990, P EUR STRAT PROGR RE, P296
   Lefley M, 2003, LECT NOTES COMPUT SC, V2724, P2477
   MAXWELL K, 1999, MANAGE SCI, V45, P77, DOI DOI 10.1287/MNSC.45.6.787
   Mendes E, 2004, 10TH INTERNATIONAL SYMPOSIUM ON SOFTWARE METRICS, PROCEEDINGS, P348, DOI 10.1109/METRIC.2004.1357920
   MENDES E, 2005, P INT SOFTW METR S M
   Pai M, 2004, NATL MED J INDIA, V17, P86
   Petticrew M, 2006, SYSTEMATIC REVIEWS IN THE SOCIAL SCIENCES: A PRACTICAL GUIDE, P1, DOI 10.1002/9780470754887
   PUTNAM LH, 1978, IEEE T SOFTWARE ENG, V4, P345, DOI 10.1109/TSE.1978.231521
   STATHIS J, 1993, THESIS U NEW S WALES
   Wieczorek I, 2002, EIGHTH IEEE SYMPOSIUM ON SOFTWARE METRICS, PROCEEDINGS, P237, DOI 10.1109/METRIC.2002.1011342
NR 26
TC 228
Z9 242
U1 1
U2 25
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAY
PY 2007
VL 33
IS 5
BP 316
EP 329
DI 10.1109/TSE.2007.1001
PG 14
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 151PR
UT WOS:000245303400004
DA 2024-07-18
ER

PT J
AU Menzies, T
   Greenwald, J
   Frank, A
AF Menzies, Tim
   Greenwald, Jeremy
   Frank, Art
TI Data mining static code attributes to learn defect predictors
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE data mining detect prediction; McCabe; Halstead; artifical intelligence;
   empirical; naive Bayes
AB The value of using static code attributes to learn defect predictors has been widely debated. Prior work has explored issues like the merits of "McCabes versus Halstead versus lines of code counts" for generating defect predictors. We show here that such debates are irrelevant since how the attributes are used to build predictors is much more important than which particular attributes are used. Also, contrary to prior pessimism, we show that such defect predictors are demonstrably useful and, on the data studied here, yield predictors with a mean probability of detection of 71 percent and mean false alarms rates of 25 percent. These predictors would be useful for prioritizing a resource-bound exploration of code that has yet to be inspected.
C1 W Virginia Univ, Lane Dept Comp Sci & Elect Engn, Morgantown, WV 26506 USA.
   Portland State Univ, Dept Comp Sci, Portland, OR 97207 USA.
C3 West Virginia University; Portland State University
RP Menzies, T (corresponding author), W Virginia Univ, Lane Dept Comp Sci & Elect Engn, Morgantown, WV 26506 USA.
EM tim@menzies.us; jegreen@cecs.pdx.edu; arf@cs.pdx.edu
RI Menzies, Tim/X-7680-2019
OI Menzies, Tim/0000-0002-5040-3196
CR ALMUALLIM H, 1991, PROCEEDINGS : NINTH NATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE, VOLS 1 AND 2, P547
   [Anonymous], 1998, Ph.D. Thesis
   [Anonymous], 1997, Software metrics: A rigorous and practical approach
   [Anonymous], IBM SYSTEMS J
   [Anonymous], 1992, C4 5 PROGRAMS MACHIN
   [Anonymous], 2005, Data mining: Practical machine learning tools and techniques
   [Anonymous], P INT C SOFTW ENG
   [Anonymous], 2004, P WORKSH PRED SOFTW
   BASILI VR, 2002, P 24 INT C SOFTW ENG
   BOUCKAERT R, 2003, P INT C MACH LEARN I
   CHAPMAN M, 2002, P NASA SOFTW ASS S
   Dougherty J, 1995, P 12 INT C MACH LEAR, P194, DOI DOI 10.1016/B978-1-55860-377-6.50032-3
   FAGAN ME, 1986, IEEE T SOFTWARE ENG, V12, P744, DOI 10.1109/TSE.1986.6312976
   Fenton NE, 2000, IEEE T SOFTWARE ENG, V26, P797, DOI 10.1109/32.879815
   FENTON NE, 1995, SOFTWARE METRICS RIG
   FISHER D, 1992, P 9 INT C MACH LEARN
   Goldberg David E, 1989, GENETIC ALGORITHMS S
   Hall GA, 2000, J SYST SOFTWARE, V54, P111, DOI 10.1016/S0164-1212(00)00031-5
   Hall MA, 2003, IEEE T KNOWL DATA EN, V15, P1437, DOI 10.1109/TKDE.2003.1245283
   Halstead M. H., 1977, ELEMENTS SOFTWARE SC
   Heeger D., 1998, SIGNAL DETECTION THE
   HOLTE RC, 1993, MACH LEARN, V11, P63, DOI 10.1023/A:1022631118932
   Khoshgoftaar TM, 2003, EMPIR SOFTW ENG, V8, P255, DOI 10.1023/A:1024424811345
   Khoshgoftaar TM, 2001, 12TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P66, DOI 10.1109/ISSRE.2001.989459
   KHOSHGOFTAAR TM, 2001, RECENT ADV RELIABILI, P247
   Kira K, 1992, P 9 INT WORKSH MACH, P249
   Kononenko I., 1994, LECT NOTES COMPUT SC, V784, P171, DOI [10.1007/3-540-57868-457, DOI 10.1007/3-540-57868-457, 10.1007/3-540-57868-4_57, DOI 10.1007/3-540-57868-4_57]
   McCabe T. J., 1976, IEEE Transactions on Software Engineering, VSE-2, P308, DOI 10.1109/TSE.1976.233837
   Menzies T, 2003, IEEE INTELL SYST, V18, P18, DOI 10.1109/MIS.2003.1200723
   MENZIES T, 2003, P IEEE SOFTW METR S
   MENZIES T, 2002, P IEEE AUT SOFTW ENG
   MENZIES T, 2003, P 2004 IEEE C HIGH A
   MENZIES T, 2004, P INT WORKSH MIN SOF
   Menzies T., 2002, P 27 NASA SEL WORKSH
   Nagappan N, 2005, PROC INT CONF SOFTW, P580, DOI 10.1145/1062455.1062558
   Newman D., 1998, UCI REPOSITORY MACHI
   NIKORA A, 2003, P 9 INT SOFTW METR S
   PORTER AA, 1990, IEEE SOFTWARE, V7, P46, DOI 10.1109/52.50773
   Rakitin StevenR., 2001, ART H COMP SCI LIBR, V2nd
   RUMELHART DE, 1986, NATURE, V323, P533, DOI 10.1038/323533a0
   SHEPPERD M, 1994, J SYST SOFTWARE, V26, P197, DOI 10.1016/0164-1212(94)90011-6
   Shull F, 2002, EIGHTH IEEE SYMPOSIUM ON SOFTWARE METRICS, PROCEEDINGS, P249, DOI 10.1109/METRIC.2002.1011343
   Shull F, 2000, COMPUTER, V33, P73, DOI 10.1109/2.869376
   SRINIVASAN K, 1995, IEEE T SOFTWARE ENG, V21, P126, DOI 10.1109/32.345828
   Tang W, 2004, PROC INT C TOOLS ART, P373
   TIAN J, 1995, IEEE T SOFTWARE ENG, V21, P641, DOI 10.1109/32.403788
   Webb GI, 2005, MACH LEARN, V58, P5, DOI 10.1007/s10994-005-4258-6
NR 47
TC 863
Z9 966
U1 4
U2 80
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JAN
PY 2007
VL 33
IS 1
BP 2
EP 13
DI 10.1109/TSE.2007.256941
PG 12
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 109ML
UT WOS:000242312200001
DA 2024-07-18
ER

PT J
AU Kuncak, V
   Lam, P
   Zee, K
   Rinard, MC
AF Kuncak, Viktor
   Lam, Patrick
   Zee, Karen
   Rinard, Martin C.
TI Modular pluggable analyses for data structure consistency
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE typestate; data structure; invariant; program analysis; program
   verification; shape analysis; formal methods; programming language
   design
ID COMPLEXITY
AB Hob is a program analysis system that enables the focused application of multiple analyses to different modules in the same program. In our approach, each module encapsulates one or more data structures and uses membership in abstract sets to characterize how objects participate in data structures. Each analysis verifies that the implementation of the module 1) preserves important internal data structure consistency properties and 2) correctly implements a set algebra interface that characterizes the effects of operations on the data structure. Collectively, the analyses use the set algebra to 1) characterize how objects participate in multiple data structures and to 2) enable the interanalysis communication required to verify properties that depend on multiple modules analyzed by different analyses. We implemented our system and deployed several pluggable analyses, including a flag analysis plug- in for modules in which abstract set membership is determined by a flag field in each object, a PALE shape analysis plug- in, and a theorem proving plug- in for analyzing arbitrarily complicated data structures. Our experience shows that our system can effectively 1) verify the consistency of data structures encapsulated within a single module and 2) combine analysis results from different analysis plug- ins to verify properties involving objects shared by multiple modules analyzed by different analyses.
C1 MIT, Comp Sci & Artificial Intelligence Lab, Stata Ctr, Cambridge, MA 02139 USA.
C3 Massachusetts Institute of Technology (MIT)
RP Kuncak, V (corresponding author), MIT, Comp Sci & Artificial Intelligence Lab, Stata Ctr, Bldg 32-G730,32 Vassar St, Cambridge, MA 02139 USA.
EM vkuncak@csail.mit.edu; plam@csail.mit.edu; kkz@csail.mit.edu;
   rinard@csail.mit.edu
OI Kuncak, Viktor/0000-0001-7044-9522
CR ABRIAL JR, 1991, P 4 INT S VDM EUR FO, V2, P398
   [Anonymous], 2004, J. Obj. Technol., DOI [10.5381/jot.2004.3.6.a2, DOI 10.5381/JOT.2004.3.6.A2]
   [Anonymous], 1960, Z. Math. Logik Grundlag. Math., DOI [DOI 10.1002/MALQ.19600060105, https://doi.org/10.1002/malq.19600060105]
   [Anonymous], 2003, Technical Report HPL-2003-148
   [Anonymous], 1997, The Definition of Standard ML
   BALL T, 2001, P ACM PROGR LANG DES
   BALL T, 2005, MSRTR2005137
   Bierhoff Kevin., 2005, ACM SIGSOFT Software Engineering Notes, V30, P217
   BJORNER NS, 1996, LNCS, V1102, P415
   BORGIDA A, 1995, IEEE T SOFTWARE ENG, V21, P785, DOI 10.1109/32.469460
   BURDY L, 2003, NIIR0309 U NIJM COMP
   CHAKI S, 2003, P INT C SOFTW ENG IC
   Chakraborty S, 2002, EIGHTH IEEE REAL-TIME AND EMBEDDED TECHNOLOGY AND APPLICATIONS SYMPOSIUM, PROCEEDINGS, P45, DOI 10.1109/RTTAS.2002.1137380
   CHANG BYE, 2005, P C VER MOD CHECK AB
   CHERITON DR, 1987, P 14 ACM SIGACT SIGP, P296
   Cok DR, 2005, J OBJECT TECHNOL, V4, P77, DOI 10.5381/jot.2005.4.8.a4
   Cousot P., 1979, 6 ACM S PRINCIPLES P, P269, DOI DOI 10.1145/567752.567778
   DANDANELL B, 1991, P C SOFTW CIT SYST, P29
   DELINE R, 2001, P ACM PROGR LANG DES
   DETLEFS DL, 1998, 159 COMP SYST RES CT
   Dijkstra E. W., 1976, A Discipline of Pro-gramming
   Drossopoulou S., 2001, ECOOP 2001 - Object-Oriented Programming. 15th European Conference. Proceedings (Lecture Notes in Computer Science Vol.2072), P130
   FAHNDRICH M, 2003, P INT WORKSH AL CONF
   FAHNDRICH M, 2002, P ACM PROGR LANG DES
   FIELD J, 2003, P INT S STAT AN
   Filliâtre JC, 2003, J FUNCT PROGRAM, V13, P709, DOI 10.1017/S095679680200446X
   FILLIATRE JC, 2004, P INT C FORM ENG MET
   FINK S, 2006, P INT S SOFTW TEST A
   FLANAGAN C, 2001, P 20 ACM S PRINC PRO
   FLANAGAN C, 2002, P ACM C PROGR LANG D
   Gamma Erich., 1994, DESIGN PATTERNS
   GOOD DI, 1986, REPORT GYPSY 2 05
   Guttag JohnV., 1993, LARCH LANGUAGES TOOL
   HENZINGER TA, 2004, P 31 S PRINC PROGR L
   Jackson D., 2001, P ACM SIGSOFT C FDN
   JIFENG H, 1986, P EUR S PROGR ESOP 8
   Jones C. B., 1986, SYSTEMATIC SOFTWARE
   KICZALES G, 1997, P 15 EUR C OBJ OR PR
   KING JC, 1970, THESIS CARNEGIE MELL
   KLARLUND N, 2000, LNCS
   KLARLUND N, 1993, P 20 ACM S PRINC PRO
   KLARLUND N, 2001, BRICS NOTES SERIES
   KOZEN D, 1980, THEOR COMPUT SCI, V10, P221, DOI 10.1016/0304-3975(80)90048-1
   KUNCAK V, 2006, IN PRESS J AUTOMATED
   KUNCAK V, 2005, P 20 INT C AUT DED C
   KUNCAK V, 2007, THESIS MIT
   KUNCAK V, 2003, P 2 INT WORKSH AUT V
   KUNCAK V, 2002, P ANN ACM S PRINC PR
   KUNCAK V, 1966, P NSF NEXT GEN SOFTW
   LAHIRI SK, 2006, P ACM S PRINC PROGR
   Lam P, 2004, ACM SIGPLAN NOTICES, V39, P46, DOI 10.1145/981009.981016
   LAM P, 2005, P 4 INT C ASP OR SOF
   LAM P, 2004, 965 CSAIL MIT
   LAM P, 2005, P 14 INT C COMP CONS
   LAM P, UNPUB THEORETICAL CO
   LAM P, 2005, P 6 INT C VER MOD CH
   LEINO KRM, 2006, P EUR S PROGR ESOP 0
   LEVAMI T, 2005, P 20 INT C AUT DED C
   Liskov B., 2001, PROGRAM DEV JAVA
   LOEWENHEIM L, 1915, MATH ANN, V76, P228
   MARCHE C, 2003, J LOGIC ALGEBRAIC PR
   MEUNIER P, 2006, POPL 06, P218
   Moller Anders., 2001, PROGRAMMING LANGUAGE
   NELSON G, 1983, P ACM S PRINC PROGR
   Nelson G., 1981, TECHNIQUES PROGRAM V
   NIPKOW T, 2002, LECT NOTES COMP SCI, V2283
   OHEARN PW, 2004, POPL, P268
   Papadimitriou Christos, 1994, COMPUTATIONAL COMPLE
   PODELSKI A, 2005, P INT STAT AN S
   Sagiv M, 2002, ACM T PROGR LANG SYS, V24, P217, DOI 10.1145/514188.514190
   SKOLEM T, 1919, SKRIFTER UTGIT VIDNE
   Stockmeyer L, 2002, J ACM, V49, P753, DOI 10.1145/602220.602223
   STROM RE, 1986, IEEE T SOFTWARE  JAN, V12
   STROUP DF, 1993, MMWR-MORBID MORTAL W, V42, P5
   Thatcher J. W., 1968, Mathematical Systems Theory, V2, P57, DOI 10.1007/BF01691346
   WIES T, 2006, MPII200621 M PLANCK
   WIES T, 2006, P INT C VER MOD CHEC
   WOODCOCK JCP, 1996, USING Z
   ZEE K, 2004, P INT WORKSH SOFTW V
   [No title captured]
NR 80
TC 27
Z9 30
U1 0
U2 5
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD DEC
PY 2006
VL 32
IS 12
BP 988
EP 1005
DI 10.1109/TSE.2006.125
PG 18
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 104VJ
UT WOS:000241988400005
DA 2024-07-18
ER

PT J
AU Wang, SG
   Shin, KG
AF Wang, SG
   Shin, KG
TI Task construction for model-based design of embedded control software
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE task construction; model transformation; model-based design; embedded
   software
AB Constructing runtime tasks, or operating system-level processes/threads, from the components of software design models is crucial to the model-based development of embedded control software. A better method should explore more design choices and reduce the overheads of the runtime system to meet the timing and resource constraints of embedded control software. This paper presents a novel, two-step method for systematic and automatic construction of runtime tasks from software design models. It uses graph transformation to construct a task set meeting system-level end-to-end (e2e) timing constraints. Its first step decomposes the system-level e2e timing constraints into the components' timing constraints, which form a necessary condition for any valid and feasible schedule. The second step iteratively merges the components into tasks and sequences their executions. A thus-constructed task set is proven to meet both intercomponent precedence and system-level e2e timing constraints and to minimize runtime overheads by minimizing the total number of resultant tasks. Our evaluation results based on randomly generated software models have shown that the proposed method outperforms commonly used methods and is also scalable.
C1 GM Corp, Gen Motors R&D & Planning, Elect & Control Integrat Lab, Warren, MI 48090 USA.
   Univ Michigan, Dept Elect Engn & Comp Sci, Ann Arbor, MI 48109 USA.
C3 General Motors; University of Michigan System; University of Michigan
RP GM Corp, Gen Motors R&D & Planning, Elect & Control Integrat Lab, 30500 Mound Rd, Warren, MI 48090 USA.
EM shige.wang@gm.com; kgshin@eecs.umich.edu
CR [Anonymous], THESIS U CALIFORNIA
   [Anonymous], 2004, REAL TIM WORKSH US G
   *BOEING CO, 2001, CHALL PROBL MOD BAS
   BURNS A, 1993, YCS93199 U YORK
   CORNWELL P, 1996, LNCS, V1031, P365
   DENIZ D, 2003, P 2003 ACM SIGPLAN C, P144
   *ETAS INC, 2001, ETAS ASC MAN
   *FORD MOT CO GEN M, 2000, SMARTVEHICLE CHALL P
   Garey M.R., 1979, COMPUTERS INTRACTABI
   GERBER R, 1995, IEEE T SOFTWARE ENG, V21, P107
   Girault A, 1999, IEEE T COMPUT AID D, V18, P742, DOI 10.1109/43.766725
   Gu ZH, 2003, 9TH IEEE REAL-TIME AND EMBEDDED TECHNOLOGY AND APPLICATIONS SYMPOSIUM, PROCEEDINGS, P78, DOI 10.1109/REAL.2003.1253256
   Jonsson J, 1997, INT CON DISTR COMP S, P432, DOI 10.1109/ICDCS.1997.598077
   Kim S, 2000, SEVENTH INTERNATIONAL CONFERENCE ON REAL-TIME COMPUTING SYSTEMS AND APPLICATIONS, PROCEEDINGS, P7, DOI 10.1109/RTCSA.2000.896365
   Kopetz H, 1998, REAL TIM SYST SYMP P, P168, DOI 10.1109/REAL.1998.739743
   Krishna C.M., 1997, REAL-TIME SYST
   Liu J, 2003, IEEE CONTR SYST MAG, V23, P65, DOI 10.1109/MCS.2003.1172830
   Merrick JR, 2005, RTAS 2005: 11TH IEEE REAL TIME AND EMBEDDED TECHNOLOGY AND APPLICATIONS SYMPOSIUM, PROCEEDINGS, P365
   QUATRANI T, 1998, VISUAL MODELING RATI
   Saksena M., 2000, Proceedings Third IEEE International Symposium on Object-Oriented Real-Time Distributed Computing (ISORC 2000) (Cat. No. PR00607), P360, DOI 10.1109/ISORC.2000.839552
   SELIC B, 1994, REAL TIM OBJ OR MOD
   STANKOVIC J, 2000, VEST TOOSET CONSTRUC
   Stewart DB, 1997, IEEE T SOFTWARE ENG, V23, P759, DOI 10.1109/32.637390
   SUN J, 1997, THESIS U ILLINOIS UR
   WANG S, 2004, THESIS U MICHIGAN AN
   Wang SG, 2004, RTAS 2004: 10TH IEEE REAL-TIME AND EMBEDDED TECHNOLOGY AND APPLICATIONS SYMPOSIUM, PROCEEDINGS, P219
NR 26
TC 21
Z9 23
U1 0
U2 4
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD APR
PY 2006
VL 32
IS 4
BP 254
EP 264
DI 10.1109/TSE.2006.39
PG 11
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 036HG
UT WOS:000237061600003
DA 2024-07-18
ER

PT J
AU Parsons, J
   Saunders, C
AF Parsons, J
   Saunders, C
TI Cognitive heuristics in software engineering: Applying and extending
   anchoring and adjustment to artifact reuse
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE software psychology; requirements/specifications; reusable software;
   reusable libraries; reuse models; human factors in software design
ID TECHNOLOGY ACCEPTANCE; DESIGN REUSE; QUALITY; LESSONS; ISSUES; VIEWS;
   BIAS
AB The extensive literature on reuse in software engineering has focused on technical and organizational factors, largely ignoring cognitive characteristics of individual developers. Despite anecdotal evidence that cognitive heuristics play a role in successful artifact reuse, few empirical studies have explored this relationship. This paper proposes how a cognitive heuristic, called anchoring, and the resulting adjustment bias can be adapted and extended to predict issues that might arise when developers reuse code and/or designs. The research proposes that anchoring and adjustment can be manifested in three ways: propagation of errors in reuse artifacts, failure to include requested functionality absent from reuse artifacts, and inclusion of unrequested functionality present in reuse artifacts. Results from two empirical studies are presented. The first study examines reuse of object classes in a programming task, using a combination of practicing programmers and students. The second study uses a database design task with student participants. Results from both studies indicate that anchoring occurs. Specifically, there is strong evidence that developers tend to use the extraneous functionality in the artifacts they are reusing and some evidence of anchoring to errors and omissions in reused artifacts. Implications of these findings for both practice and future research are explored.
C1 Mem Univ Newfoundland, Fac Business Adm, St John, NF A1B 3X5, Canada.
   Univ Calgary, Haskayne Sch Business, Calgary, AB T2N 1N4, Canada.
C3 Memorial University Newfoundland; University of Calgary
RP Mem Univ Newfoundland, Fac Business Adm, St John, NF A1B 3X5, Canada.
EM jeffreyp@mun.ca; chad.saunders@haskayne.ucalgary.ca
RI Saunders, William Chad/KQU-7948-2024; Parsons, Jeffrey/AAF-3380-2020
OI Saunders, William Chad/0000-0002-2389-0363; Parsons,
   Jeffrey/0000-0002-4819-2801
CR Basili VR, 1999, IEEE T SOFTWARE ENG, V25, P456, DOI 10.1109/32.799939
   Batra D, 1994, EUR J INFORM SYST, V3, P57, DOI 10.1057/ejis.1994.7
   BETTMAN JR, 1987, J CONSUM RES, V14, P141, DOI 10.1086/209102
   BOEHM BW, 1988, IEEE T SOFTWARE ENG, V14, P1462, DOI 10.1109/32.6191
   Buchanan JT, 1997, COMPUT OPER RES, V24, P907, DOI 10.1016/S0305-0548(97)00014-2
   Cliff N., 1987, ANAL MULTIVARIATE DA
   COX BJ, 1990, IEEE SOFTWARE, V7, P25, DOI 10.1109/52.60587
   Emory C., 1980, BUSINESS RES METHODS
   Fach PW, 2001, IEEE SOFTWARE, V18, P71, DOI 10.1109/52.951498
   FAFCHAMPS D, 1994, IEEE SOFTWARE, V11, P31, DOI 10.1109/52.311049
   Fichman RG, 1997, COMPUTER, V30, P47, DOI 10.1109/2.625304
   Fichman RG, 2001, J SYST SOFTWARE, V57, P45, DOI 10.1016/S0164-1212(00)00116-3
   Fowler M., 1997, ANAL PATTERNS REUSAB
   Frakes W, 1996, ACM COMPUT SURV, V28, P415, DOI 10.1145/234528.234531
   Frakes WB, 2001, J SYST SOFTWARE, V57, P99, DOI 10.1016/S0164-1212(00)00121-7
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   George JF, 2000, DECIS SUPPORT SYST, V29, P195, DOI 10.1016/S0167-9236(00)00074-9
   GRISS ML, 1993, IBM SYST J, V32, P548, DOI 10.1147/sj.324.0548
   Harris R. J., 1975, PRIMER MULTIVARIATE
   Irwin G, 2002, J MANAGE INFORM SYST, V19, P219
   Jacob G, 1997, EE-EVAL ENG, V36, P42
   Kim JW, 1997, INFORM SYST RES, V8, P25, DOI 10.1287/isre.8.1.25
   Kim KR, 1998, J IND ENG CHEM, V4, P113
   Kitchenham BA, 2002, IEEE T SOFTWARE ENG, V28, P721, DOI 10.1109/TSE.2002.1027796
   Lakoff George., 1987, WOMEN FIRE DANGEROUS
   LIENTZ BP, 1978, DATA MANAGE, V16, P15
   LIM WC, 1994, IEEE SOFTWARE, V11, P23, DOI 10.1109/52.311048
   LOVE T, 1993, OBJECT LESSONS LESSO
   MAIDEN NA, 1992, COMMUN ACM, V35, P55, DOI 10.1145/129852.129857
   Maruyama K, 2000, IEEE T SOFTWARE ENG, V26, P425, DOI 10.1109/32.846300
   MERVIS CB, 1981, ANNU REV PSYCHOL, V32, P89, DOI 10.1146/annurev.ps.32.020181.000513
   Mili A, 1999, IEEE SOFTWARE, V16, P22, DOI 10.1109/52.795098
   MILI H, 1995, IEEE T SOFTWARE ENG, V21, P528, DOI 10.1109/32.391379
   Morisio M, 2002, IEEE T SOFTWARE ENG, V28, P340, DOI 10.1109/TSE.2002.995420
   NAVATHE S, 1986, COMPUTER, V19, P50, DOI 10.1109/MC.1986.1663033
   NOVAK GS, 1995, IEEE T SOFTWARE ENG, V21, P993, DOI 10.1109/32.489074
   Parsons J, 1997, COMMUN ACM, V40, P63, DOI 10.1145/255656.255700
   Pfleeger S.L., 2001, SOFTWARE ENG THEORY, V2nd
   PITTMAN M, 1993, IEEE SOFTWARE, V10, P43, DOI 10.1109/52.207226
   Plous S., 1993, PSYCHOL JUDGMENT DEC
   Purao S, 2003, INFORM SYST RES, V14, P269, DOI 10.1287/isre.14.3.269.16559
   Ravichandran T, 2003, COMMUN ACM, V46, P109, DOI 10.1145/859670.859678
   Rogers E. M., 1995, Diffusion of Innovation Theory, P25, DOI https://doi.org/10.1007/978-3-642-79868-92
   Rothenberger MA, 1999, DECISION SCI, V30, P1131, DOI 10.1111/j.1540-5915.1999.tb00921.x
   SCHMIDT DC, 1995, COMMUN ACM, V38, P65, DOI 10.1145/226239.226255
   Schweitzer ME, 2000, MANAGE SCI, V46, P404, DOI 10.1287/mnsc.46.3.404.12070
   Sen A, 1997, IEEE T SOFTWARE ENG, V23, P418, DOI 10.1109/32.605760
   Smith Edward E., 1981, Categories and concepts
   Succi G, 2001, IEEE T SOFTWARE ENG, V27, P473, DOI 10.1109/32.922717
   Sugumaran V., 2000, Communications of the ACM, V43, P312
   TVERSKY A, 1974, SCIENCE, V185, P1124, DOI 10.1126/science.185.4157.1124
   Venkatesh V, 2000, INFORM SYST RES, V11, P342, DOI 10.1287/isre.11.4.342.11872
   Venkatesh V, 2000, MIS QUART, V24, P115, DOI 10.2307/3250981
   WEBB S, 1995, COMMUN ACM, V38, P57
NR 54
TC 53
Z9 60
U1 0
U2 7
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD DEC
PY 2004
VL 30
IS 12
BP 873
EP 888
DI 10.1109/TSE.2004.94
PG 16
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 881RI
UT WOS:000225886200003
DA 2024-07-18
ER

PT J
AU Salman, I
   Turhan, B
   Ramac, R
   Mandic, V
AF Salman, Iflaah
   Turhan, Burak
   Ramac, Robert
   Mandic, Vladimir
TI Confirmation Bias and Time Pressure: A Family of Experiments in Software
   Testing
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Software testing; experiment; replication; aggregation; cognitive bias;
   confirmation bias; time pressure
ID REQUIREMENTS; REPLICATION; SIZE
AB Background: Software testers manifest confirmation bias (the cognitive tendency) when they design relatively more specification consistent test cases than specification inconsistent test cases. Time pressure may influence confirmation bias of testers per the research in the psychology discipline. Objective: We examine the manifestation of confirmation bias of software testers while designing functional test cases, and the effect of time pressure on confirmation bias in the same context. Method: We executed one internal and two external experimental replications concerning the original experimentation in Oulu. We analyse individual replications and meta-analyse our family of experiments (the original and replications) for joint results on the phenomena. Results: Our findings indicate a significant manifestation of confirmation bias by software testers during the designing of functional test cases. Time pressure significantly promoted confirmation bias among testers per the joint results of the family. The different experimental sites affected the results; however, we did not detect any effects of site-specific variables. Conclusion: Software testers should develop an outside-of-the-box thinking attitude to counter the manifestation of confirmation bias. Time pressure can be manoeuvred by centring manual suites on the designing and consequently the execution of inconsistent test cases, while automated testing focuses on consistent ones.
C1 [Salman, Iflaah] Lappeenranta Lahti Univ Technol, Sch Engn Sci, Lahti FI-15210, Finland.
   [Turhan, Burak] Univ Oulu, Res Unit M3S, FI-90014 Oulu, Finland.
   [Turhan, Burak] Monash Univ, Fac IT, Melbourne, Vic 3800, Australia.
   [Ramac, Robert; Mandic, Vladimir] Univ Novi Sad, Fac Tech Sci, Novi Sad 21000, Serbia.
C3 Lappeenranta-Lahti University of Technology LUT; University of Oulu;
   Monash University; University of Novi Sad
RP Salman, I (corresponding author), Lappeenranta Lahti Univ Technol, Sch Engn Sci, Lahti FI-15210, Finland.; Mandic, V (corresponding author), Univ Novi Sad, Fac Tech Sci, Novi Sad 21000, Serbia.
EM iflaah.salman@lut.fi; burak.turhan@oulu.fi; ramac.robert@uns.ac.rs;
   vladman@uns.ac.rs
RI Mandic, Vladimir/I-6306-2019; Turhan, Burak/G-7400-2011
OI Mandic, Vladimir/0000-0001-6996-2222; Turhan, Burak/0000-0003-1511-2163
FU Infotech Oulu Doctoral grant at the University of Oulu
FX No Statement Available
CR Albayrak Ö, 2009, ASIA PAC SOFWR ENG, P333, DOI 10.1109/APSEC.2009.39
   [Anonymous], 7.2.6-Model Assumptions and Diagnostics AssumptionsSTAT 505
   [Anonymous], 2006, Human mental workload, V1, P21, DOI [10.1055/s-0028-1097222, DOI 10.1055/S-0028-1097222]
   [Anonymous], 1998, A Taxonomy of Decision Biases
   [Anonymous], 2008, Online Kappa Calculator
   Arnott D, 2006, INFORM SYST J, V16, P55, DOI 10.1111/j.1365-2575.2006.00208.x
   Arnott D, 2019, DECIS SUPPORT SYST, V122, DOI 10.1016/j.dss.2019.05.003
   Ask K, 2007, J APPL SOC PSYCHOL, V37, P561, DOI 10.1111/j.1559-1816.2007.00175.x
   Baddoo N, 2003, J SYST SOFTWARE, V66, P23, DOI 10.1016/S0164-1212(02)00060-2
   Baskerville R, 2001, COMPUTER, V34, P51, DOI 10.1109/2.920612
   Borenstein M., 2009, INTRO METAANALYSIS
   Calikli Gul, 2013, 2013 ACM / IEEE International Symposium on Empirical Software Engineering and Measurement (ESEM), P363, DOI 10.1109/ESEM.2013.47
   Calikli G., 2010, 2010 32nd International Conference on Software Engineering (ICSE), P187, DOI 10.1145/1810295.1810326
   Calikli G., 2010, P 6 INT C PRED MOD S
   Calikli G, 2015, SOFTWARE QUAL J, V23, P695, DOI 10.1007/s11219-014-9250-6
   Carver J.C., 2010, 1 INT WORKSHOP REPLI, P1
   Cataldo M, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P161, DOI 10.1145/1985793.1985816
   Cataldo M, 2010, 2010 ACM CONFERENCE ON COMPUTER SUPPORTED COOPERATIVE WORK, P281
   Deak A, 2016, INFORM SOFTWARE TECH, V73, P1, DOI 10.1016/j.infsof.2016.01.002
   Falessi D, 2018, EMPIR SOFTW ENG, V23, P452, DOI 10.1007/s10664-017-9523-3
   Field A, 2018, Discovering Statistics Using IBM SPSS Statistics, Vfifth
   Fritz CO, 2012, J EXP PSYCHOL GEN, V141, P30, DOI 10.1037/a0026092
   Gilovich T., 2002, HEURISTICS BIASES
   Gómez OS, 2014, INFORM SOFTWARE TECH, V56, P1033, DOI 10.1016/j.infsof.2014.04.004
   H. P. Research Group and N. Ames Research Center, 1987, NASA TaskLoad Index (TLX)
   Hazzan O., 2007, SOFTWARE SCI TECHNOL, P95, DOI DOI 10.1109/SWSTE.2007
   Hernandez I, 2013, J EXP SOC PSYCHOL, V49, P178, DOI 10.1016/j.jesp.2012.08.010
   Hox JJ., 1998, CLASSIFICATION DATA, P147, DOI 10.1007/978-3-642-72087-1_17
   Juristo N, 2013, INFORM SOFTWARE TECH, V55, P215, DOI 10.1016/j.infsof.2012.07.016
   Juristo N, 2012, LECT NOTES COMPUT SC, V7007, P60
   Juristo N, 2009, INT SYMP EMP SOFTWAR, P357
   Kahneman D, 2011, HARVARD BUS REV, V89, P50
   Kuutila M, 2020, IEEESoftware, V7459, P1
   Kuutila M., 2020, Time pressurein software engineering: A systematic review, V5
   Kuutila M, 2017, 2017 IEEE/ACM 2ND INTERNATIONAL WORKSHOP ON EMOTION AWARENESS IN SOFTWARE ENGINEERING (SEMOTION 2017), P54, DOI 10.1109/SEmotion.2017.11
   Leventhal L.-M., 1993, Human-Computer Interaction. Third International Conference, EWHCI '93. Selected Papers, P210
   LEVENTHAL LN, 1994, INT J HUM-COMPUT ST, V41, P717, DOI 10.1006/ijhc.1994.1079
   Linssen S, 2018, PROCEEDINGS OF THE 51ST ANNUAL HAWAII INTERNATIONAL CONFERENCE ON SYSTEM SCIENCES (HICSS), P4835
   Mandic V, 2009, LECT NOTES BUS INF P, V32, P96
   Mäntylä MV, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P83, DOI 10.1145/2568225.2568245
   Mäntylä MV, 2013, INFORM SOFTWARE TECH, V55, P986, DOI 10.1016/j.infsof.2012.12.004
   Mendongal MG, 2008, IEEE INT C ENG COMP, P203, DOI 10.1109/ICECCS.2008.38
   Mohanani R, 2022, IEEE T SOFTWARE ENG, V48, P4074, DOI 10.1109/TSE.2021.3112503
   Mohanani R, 2020, IEEE T SOFTWARE ENG, V46, P1318, DOI 10.1109/TSE.2018.2877759
   N. B. A. Commission, 2012, Ethical and Policy Issues inInternational Research: Clinical Trials in Developing Countries
   Nan N, 2009, IEEE T SOFTWARE ENG, V35, P624, DOI 10.1109/TSE.2009.18
   Paetsch F, 2003, P 12 IEEEINTERNATION, P1
   Ralph P, 2013, 2013 2ND SEMAT WORKSHOP ON A GENERAL THEORY OF SOFTWARE ENGINEERING (GTSE), P35, DOI 10.1109/GTSE.2013.6613868
   Ralph P, 2011, LECT NOTES BUS INF P, V93, P92
   Ramac R, 2022, J SYST SOFTWARE, V184, DOI 10.1016/j.jss.2021.111114
   Randolph J. J., 2005, JOENS UN INSTR S 200
   Runeson P., 2012, Experimentation in software engineering
   Salman I., 2019, Ph.D. dissertation,
   Salman I, 2022, IEEE T SOFTWARE ENG, V48, P1351, DOI 10.1109/TSE.2020.3019892
   Salman I, 2019, EMPIR SOFTW ENG, V24, P1727, DOI 10.1007/s10664-018-9668-8
   Salman I, 2018, PROCEEDINGS OF THE 2018 INTERNATIONAL CONFERENCE ON SOFTWARE AND SYSTEM PROCESS (ICSSP 2018), P130, DOI 10.1145/3202710.3203148
   Salman I, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P666, DOI 10.1109/ICSE.2015.82
   Santos A, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-020-09895-8
   Santos A, 2021, IEEE T SOFTWARE ENG, V47, P1742, DOI 10.1109/TSE.2019.2935720
   Santos A, 2020, IEEE T SOFTWARE ENG, V46, P566, DOI 10.1109/TSE.2018.2864633
   Seth FP, 2014, INT CONF RES CHAL
   Shah H, 2014, INFORM SOFTWARE TECH, V56, P6, DOI 10.1016/j.infsof.2013.04.005
   Shull FJ, 2008, EMPIR SOFTW ENG, V13, P211, DOI 10.1007/s10664-008-9060-1
   STACY W, 1995, COMMUN ACM, V38, P57, DOI 10.1145/203241.203256
   TEASLEY BE, 1994, J APPL PSYCHOL, V79, P142, DOI 10.1037/0021-9010.79.1.142
   Topi H, 2005, INT J HUM-COMPUT ST, V62, P349, DOI 10.1016/j.ijhcs.2004.10.003
   Tversky A, 1973, Tech. Rep.
   Vegas S., Empirical Software Engineering
   Verner J, 2007, PROCEEDINGS OF THE SECOND INTERNATIONAL CONFERENCE ON RESEARCH CHALLENGES IN INFORMATION SCIENCE: RCIS 2008, P71
   Wilson DN, 1998, SOFTWARE QUAL J, V7, P67, DOI 10.1023/B:SQJO.0000042060.88173.fe
NR 70
TC 0
Z9 0
U1 3
U2 3
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD DEC
PY 2023
VL 49
IS 12
BP 5203
EP 5222
DI 10.1109/TSE.2023.3330400
PG 20
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA CL0K1
UT WOS:001125287400008
OA hybrid, Green Published
DA 2024-07-18
ER

PT J
AU Zhang, WY
   Salcic, Z
   Malik, A
AF Zhang, Weiyi
   Salcic, Zoran
   Malik, Avinash
TI Designing, Modeling and Analysis of GALS Software Systems
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Formal models; model checking; models of computation; petri nets;
   systems and software
ID PETRI; VERIFICATION
AB Designing software systems underpinned by a formal model of computation (MoC) is crucial for safety-critical, real-time and all industrial applications as it allows formal analysis of those designs and support for correct by design systems. In this paper, we focus on Globally Asynchronous Locally Synchronous (GALS) software systems and Coloured Petri Nets (CPNs) based approach to formally model and analyse GALS software systems specified in SystemJ GALS programming language. The approach translates SystemJ constructs into CPN modules and composes them into CPN GALS model based on control flow and concurrency specified in the SystemJ program. It preserves GALS MoC by automatically integrating synchronizer modules, asynchronous channel interface modules, and scheduling modules to result in the execution model of SystemJ program equivalent CPN. The created CPN GALS model allows system developers to verify the properties of the design formally with the use of Computation Tree Logic (CTL). An industrial automation example is provided as a use case.
C1 [Zhang, Weiyi; Salcic, Zoran; Malik, Avinash] Univ Auckland, Dept Elect Comp & Software Engn, Auckland 1010, New Zealand.
C3 University of Auckland
RP Zhang, WY (corresponding author), Univ Auckland, Dept Elect Comp & Software Engn, Auckland 1010, New Zealand.
EM wzha354@aucklanduni.ac.nz; z.salcic@auckland.ac.nz;
   avinash.malik@auckland.ac.nz
OI Malik, Avinash/0000-0002-7524-8292; Zhang, Weiyi/0000-0003-4915-1080;
   Salcic, Zoran/0000-0001-7714-9848
CR Ahmed A., 2020, PROC CEUR WORKSHOP, P86
   Almeida Joao, 2019, 2019 International Young Engineers Forum (YEF-ECE). Proceedings, P88, DOI 10.1109/YEF-ECE.2019.8740814
   Almeida J, 2019, IEEE IND ELEC, P3051, DOI 10.1109/IECON.2019.8926790
   BENVENISTE A, 1991, P IEEE, V79, P1270, DOI 10.1109/5.97297
   Berry Gerard, 2004, The Esterel v5 Language Primer Version v5.91
   Best E., 2009, UCAMCLTR782
   BOOCH G., 1983, SOFTWARE ENG ADA
   Burns A., 2000, PROC INT C APPL THEO, P1
   Burns F, 2017, IEEE T COMPUT AID D, V36, P938, DOI 10.1109/TCAD.2016.2611508
   Burns F, 2015, DES AUT TEST EUROPE, P1419
   Chapiro D. M., 1984, THESIS STANFORD U ST
   Emerson E. A., 1990, Handbook of Theoretical Computer Science, VB, P995, DOI [10.1016/b978-0-444-88074-1.50021-4, DOI 10.1016/B978-0-444-88074-1.50021-4]
   Garavel Hubert, 2013, International Journal on Software Tools for Technology Transfer, V15, P89, DOI 10.1007/s10009-012-0244-z
   Girault C, 2001, Petri Nets for Systems Engineering: A Guide to Modelling, Verification, and Applications
   Godary-Dejean K, 2022, DISCRETE EVENT DYN S, V32, P27, DOI 10.1007/s10626-021-00347-z
   He XD, 2013, INT J SOFTW ENG KNOW, V23, P589, DOI 10.1142/S021819401340010X
   Hilal R., 1993, Proceedings. 5th International Workshop on Petri Nets and Performance Models (Cat. No.93TH0558-7), P34, DOI 10.1109/PNPM.1993.393437
   Hoare C. A. R., 1978, Communications of the ACM, V21, P666, DOI 10.1145/359576.359585
   HOARE CAR, 1978, COMMUN ACM, V21, P666, DOI 10.1145/359576.359585
   Hopcroft John E, 2001, Introduction to Automata Theory, Languages, and Computation, V32, P60, DOI DOI 10.1145/568438.568455
   Huang YS, 2018, ASIAN J CONTROL, V20, P174, DOI 10.1002/asjc.1536
   Jebali F, 2016, FORM ASP COMPUT, V28, P767, DOI 10.1007/s00165-016-0373-3
   Jensen Kurt, 2007, International Journal on Software Tools for Technology Transfer, V9, P213, DOI 10.1007/s10009-007-0038-x
   Jensen K., 1996, COLOURED PETRI NETS, VI.
   Jensen K, 2009, COLOURED PETRI NETS: MODELLING AND VALIDATION OF CONCURRENT SYSTEMS, P1, DOI 10.1007/b95112
   Kacem I, 2018, IEEE ACCESS, V6, P65705, DOI 10.1109/ACCESS.2018.2878145
   KAHN G., 1974, SEMANTICS SIMPLE LAN, P471
   Kleijn H., 2006, CSTR941 SCH COMP SCI
   Koutny M, 2006, LECT NOTES COMPUT SC, V4137, P173
   Malik A., 2011, 2011 11th International Conference on Application of Concurrency to System Design (ACSD), P173, DOI 10.1109/ACSD.2011.30
   Malik A., 2010, THESIS I AUCKLAND AU
   Malik A, 2019, MICROPROCESS MICROSY, V64, P101, DOI 10.1016/j.micpro.2018.10.007
   Malik A, 2010, COMPUT LANG SYST STR, V36, P317, DOI 10.1016/j.cl.2010.01.001
   Malik A, 2009, ACM T DES AUTOMAT EL, V14, DOI 10.1145/1529255.1529256
   Mateescu R, 2008, LECT NOTES COMPUT SC, V5014, P148, DOI 10.1007/978-3-540-68237-0_12
   Moalla M., 1978, Mathematical Foundations of Computer Science 1978, P374
   Moutinho F, 2014, IEEE T IND INFORM, V10, P2024, DOI 10.1109/TII.2014.2341933
   MURATA T, 1989, IEEE T SOFTWARE ENG, V15, P314, DOI 10.1109/32.21759
   Park H, 2015, COMPUT LANG SYST STR, V44, P251, DOI 10.1016/j.cl.2015.08.006
   Radojevic I, 2011, EMBEDDED SYSTEMS DESIGN BASED ON FORMAL MODELS OF COMPUTATION, P1, DOI 10.1007/978-94-007-1594-3
   Salcic Z, 2017, ACM T DES AUTOMAT EL, V22, DOI 10.1145/3073416
   Vyatkin V., 2000, Report: Proceedings of the International Workshop on Concurrency, Specification and Programming, P335
   Zhang WY, 2019, IEEE INTL CONF IND I, P152, DOI [10.1109/indin41052.2019.8972025, 10.1109/INDIN41052.2019.8972025]
NR 43
TC 0
Z9 0
U1 2
U2 3
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD AUG
PY 2023
VL 49
IS 8
BP 3989
EP 4003
DI 10.1109/TSE.2023.3278055
PG 15
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA P3WA9
UT WOS:001049968200003
DA 2024-07-18
ER

PT J
AU Mahmud, T
   Che, MR
   Yang, GW
AF Mahmud, Tarek
   Che, Meiru
   Yang, Guowei
TI Detecting Android API Compatibility Issues With API Differences
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE API differences; API evolution; android; compatibility issues; program
   analysis; test selection
AB Android application programming interface (API) enables app developers to harness the functionalities of Android devices by interfacing with services and hardware using a Software Development Kit (SDK). However, API frequently evolves together with its associated SDK, and compatibility issues may arise when the API level supported by the underlying device differs from the API level targeted by app developers. These issues can lead to unexpected behaviors, resulting in a bad user experience. This article presents ACID, a novel approach to detecting Android API compatibility issues induced by API evolution. It detects both API invocation compatibility issues and API callback compatibility issues using API differences and static analysis of the app code. Experiments with 20 benchmark apps show that ACID is more accurate and faster than the state-of-the-art techniques in detecting API compatibility issues. The application of ACID on 2965 real-world apps further demonstrates its practical applicability. To eliminate the false positives reported by ACID, this article also presents a simple yet effective method to quickly verify the compatibility issues by selecting and executing the relevant tests from app's test suite, and experimental results demonstrate the verification method can eliminate most false positives when app's test suite has good coverage of the API usages.
C1 [Mahmud, Tarek] Texas State Univ, Dept Comp Sci, San Marcos, TX 78666 USA.
   [Che, Meiru] Torrens Univ, Fortitude Valley, Qld 4006, Australia.
   [Yang, Guowei] Univ Queensland, Sch Informat Technol & Elect Engn, St Lucia, Qld 4072, Australia.
C3 Texas State University System; Texas State University San Marcos;
   Torrens University Australia; University of Queensland
RP Yang, GW (corresponding author), Univ Queensland, Sch Informat Technol & Elect Engn, St Lucia, Qld 4072, Australia.
EM tarek_mahmud@txstate.edu; meiru.che@torrens.edu.au;
   guowei.yang@uq.edu.au
RI Yang, Guowei/AAY-5880-2021; Mahmud, Tarek/KVY-1580-2024
OI Yang, Guowei/0000-0002-1404-4560; Mahmud, Tarek Salah
   Uddin/0000-0002-1238-9397; Che, Meiru/0009-0008-5925-698X
FU University of Queensland under the NSRSG [NS-2201]; US National Science
   Foundation [CCF-1464123, CCF-1659807]
FX This work was supported by the University of Queensland under the NSRSG
   under Grant NS-2201, and in part by the US National Science Foundation
   under Grants CCF-1464123 and CCF-1659807.
CR Businge J, 2015, SOFTWARE QUAL J, V23, P107, DOI 10.1007/s11219-013-9221-3
   Businge J, 2013, EUR CON SFTWR MTNCE, P37, DOI 10.1109/CSMR.2013.14
   Businge J, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P368, DOI 10.1109/ICSM.2012.6405295
   Daqing Hou, 2011, 2011 18th Working Conference on Reverse Engineering, P131, DOI 10.1109/WCRE.2011.24
   developer.android.com, REQUIRESAPI
   developer.android.com, US API LEV ANDR
   developer.android.com, BACKW COMP
   developer.android.com, FORW COMP
   Do H, 2006, IEEE T SOFTWARE ENG, V32, P733, DOI 10.1109/TSE.2006.92
   Do Q. C. D., 2016, 28 INT C SOFTW ENG K, P486, DOI DOI 10.18293/SEKE2016-223
   Do Q, 2016, 2016 IEEE/ACM INTERNATIONAL CONFERENCE ON MOBILE SOFTWARE ENGINEERING AND SYSTEMS (MOBILESOFT 2016), P27, DOI [10.1145/2897073.2897127, 10.1109/MobileSoft.2016.023]
   droid.org, F DROID
   Elbaum S, 2001, PROC INT CONF SOFTW, P329, DOI 10.1109/ICSE.2001.919106
   Fan LL, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P408, DOI 10.1145/3180155.3180222
   Fazzini M, 2019, PROCEEDINGS OF THE 28TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA '19), P204, DOI 10.1145/3293882.3330571
   github.com, LAUNCHT
   github.com, AM FIL MAN
   github.com, JADX DEX JAV DEC
   Gligoric M., 2015, P 2015 INT S SOFTWAR, P211, DOI 10.1145/2771783.2771784
   Harrold MJ, 2001, ACM SIGPLAN NOTICES, V36, P312, DOI 10.1145/504311.504305
   Haryono SA, 2020, INT C PROGRAM COMPRE, P401, DOI 10.1145/3387904.3389285
   Haryono SA, 2021, PROC IEEE ACM INT C, P1, DOI 10.1109/ICSE-Companion52605.2021.00021
   He DJ, 2018, IEEE INT CONF AUTOM, P167, DOI 10.1145/3238147.3238185
   Huang HX, 2018, IEEE INT CONF AUTOM, P532, DOI 10.1145/3238147.3238181
   jacoco.org, JAC JAV COD COV LIB
   Lam P., 2011, P CET US COMP INFR W, V15, P35
   Lamothe M, 2021, ACM COMPUT SURV, V54, DOI 10.1145/3470133
   Legunsen O, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P583, DOI 10.1145/295029.2950361
   Li L, 2018, ISSTA'18: PROCEEDINGS OF THE 27TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P153, DOI 10.1145/3213846.3213857
   Li L, 2018, IEEE WORK CONF MIN S, P254, DOI 10.1145/3196398.3196419
   Li L, 2016, PROC IEEE INT CONF S, P411, DOI 10.1109/ICSME.2016.35
   Li X, 2017, IEEE INT CONF SOFTW, P161, DOI 10.1109/ICST.2017.22
   Linares-Vasquez M., 2014, P 22 INT C PROGR COM, P83, DOI DOI 10.1145/2597008.2597155
   Linares-Vasquez Mario, 2013, P 2013 9 JOINT M FDN, P477, DOI DOI 10.1145/2491411.2491428
   Mahmud T, 2023, J SYST SOFTWARE, V200, DOI 10.1016/j.jss.2023.111664
   Mahmud T, 2021, P INT COMP SOFTW APP, P894, DOI 10.1109/COMPSAC51774.2021.00122
   Mahmud T, 2021, 2021 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2021), P480, DOI 10.1109/SANER50967.2021.00051
   McDonnell T, 2013, PROC IEEE INT CONF S, P70, DOI 10.1109/ICSM.2013.18
   Mutchler P, 2016, 2016 IEEE SYMPOSIUM ON SECURITY AND PRIVACY WORKSHOPS (SPW 2016), P204, DOI 10.1109/SPW.2016.31
   play.google.com, GOOGL PLAY STOR
   Rothermel G., 1997, ACM Transactions on Software Engineering and Methodology, V6, P173, DOI 10.1145/248233.248262
   statcounter.com, Mobile Operating System Market Share Worldwide | Statcounter Global Stats
   theverge.com, MONTHL ACT ANDR DEV
   Thung F, 2020, PROCEEDINGS OF THE 2020 IEEE 27TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER '20), P602, DOI [10.1109/SANER48275.2020.9054860, 10.1109/saner48275.2020.9054860]
   Thung F, 2019, PROC IEEE INT CONF S, P213, DOI 10.1109/ICSME.2019.00032
   tools.android.com, ANDR LINT
   Wei LL, 2019, PROC INT CONF SOFTW, P878, DOI 10.1109/ICSE.2019.00094
   Wei LL, 2016, IEEE INT CONF AUTOM, P226, DOI 10.1145/2970276.2970312
   wikipedia.org, F1 MEAS
   wikipedia.org, ANDR VERS HIST
   Xia H, 2020, PROC INT CONF SOFTW, P886, DOI 10.1145/3377811.3380357
   Yang GW, 2018, 2018 IEEE/ACM 5TH INTERNATIONAL CONFERENCE ON MOBILE SOFTWARE ENGINEERING AND SYSTEMS (MOBILESOFT), P156, DOI 10.1145/3197231.3197258
   Yoo S, 2009, ISSTA 2009: INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P201
NR 53
TC 0
Z9 0
U1 2
U2 10
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUL
PY 2023
VL 49
IS 7
BP 3857
EP 3871
DI 10.1109/TSE.2023.3274153
PG 15
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA M9RA6
UT WOS:001033501500011
DA 2024-07-18
ER

PT J
AU Sun, BC
   Gong, DW
   Pan, F
   Yao, XJ
   Tian, T
AF Sun, Baicai
   Gong, Dunwei
   Pan, Feng
   Yao, Xiangjuan
   Tian, Tian
TI Evolutionary Generation of Test Suites for Multi-Path Coverage of MPI
   Programs With Non-Determinism
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE A large number of target paths; evolutionary optimization algorithm;
   multi-path coverage; MPI program with non-determinism; test suite
   generation
ID SELECTION
AB When a large number of target paths in a sequential program need to be covered, we can divide similar target paths into the same group, and generate a test suite covering the same group of target paths at the same time, so as to reduce the testing cost. However, different communication edges may be run under a same test input when executing a Message-Passing Interface (MPI) program with non-determinism, which cause different code fragments may be traversed, indicating the difficulty of generating a test suite to cover each group of target paths. This paper proposes an approach to evolutionary generation of test suites for multi-path coverage of MPI programs with non-determinism, which can significantly reduce the testing cost and difficulty. We first design an indicator for evaluating each traversal set of communication edges, which is used to form a relation matrix between each target path and each traversal set of communication edges, so as to divide all the target paths into a certain amount of groups. Then, we construct an optimization model for test suite generation associated with each group. Finally, an evolutionary optimization algorithm is extended to solve each model, and used to generate a test suite covering each group of target paths. The proposed approach is utilized and compared with several state-of-the-art approaches to seven benchmark MPI programs, as well as the experimental results illustrate that the proposed approach can efficiently generate a test suite, thus supporting the superiority of the proposed approach.
C1 [Sun, Baicai] Sch Informat & Control Engn, Xuzhou 221116, Jiangsu, Peoples R China.
   [Sun, Baicai; Yao, Xiangjuan] China Univ Min & Technol, Sch Math, Xuzhou 221116, Jiangsu, Peoples R China.
   [Gong, Dunwei] Qingdao Univ Sci & Technol, Sch Informat Sci & Technol, Qingdao 266061, Shandong, Peoples R China.
   [Pan, Feng] China Univ Min & Technol, Sch Informat & Control Engn, Xuzhou 221116, Jiangsu, Peoples R China.
   [Tian, Tian] Shandong Jianzhu Univ, Sch Comp Sci & Technol, Jinan 250101, Shandong, Peoples R China.
C3 China University of Mining & Technology; Qingdao University of Science &
   Technology; China University of Mining & Technology; Shandong Jianzhu
   University
RP Gong, DW (corresponding author), Qingdao Univ Sci & Technol, Sch Informat Sci & Technol, Qingdao 266061, Shandong, Peoples R China.
EM baicaisun@gmail.com; dwgong@vip.163.com; fengpan0315@126.com;
   yaoxj@cumt.edu.cn; tian_tiantian@126.com
OI Sun, Baicai/0000-0001-6781-0866; Yao, Xiangjuan/0000-0003-3207-703X;
   Gong, Dunwei/0000-0003-2838-4301
FU China Postdoctoral Science Foundation [2022M713368]; Jiangsu Funding
   Program for Excellent Postdoctoral Talent [2022ZB528]; National Natural
   Science Foundation of China [62133015]
FX This work was jointly supported in part by China Postdoctoral Science
   Foundation under Grant 2022M713368, in part by Jiangsu Funding Program
   for Excellent Postdoctoral Talent under Grant 2022ZB528, and in part by
   the National Natural Science Foundation of China under Grant 62133015.
   Recommended for acceptance by S. Chandra.
CR Ahmed MA, 2008, COMPUT OPER RES, V35, P3107, DOI 10.1016/j.cor.2007.01.012
   Akhmetova D., 2017, PROC INT C PARALLEL, P277
   Arcuri A, 2018, INFORM SOFTWARE TECH, V104, P195, DOI 10.1016/j.infsof.2018.05.003
   Barney B., 2016, MPI EX
   Chatterjee P, 2020, PROCEEDINGS OF THE TWENTY-NINTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P1629
   Davies T., 2011, P INT C SUP, P162
   Diaz S.D., 2019, ANAIS 20 S SISTEMAS, P406
   Diaz S. M. D., 2019, THESIS U SAO PAULO I
   Gay G, 2015, IEEE T SOFTWARE ENG, V41, P803, DOI 10.1109/TSE.2015.2421011
   Gong DW, 2021, ACM T SOFTW ENG METH, V30, DOI 10.1145/3423132
   Gong DW, 2016, INFORM SOFTWARE TECH, V80, P217, DOI 10.1016/j.infsof.2016.09.003
   Gong DW, 2013, FRONT COMPUT SCI-CHI, V7, P822, DOI 10.1007/s11704-013-3024-3
   Gong DW, 2011, J SYST SOFTWARE, V84, P2222, DOI 10.1016/j.jss.2011.06.028
   Han X, 2017, IET SOFTW, V11, P41, DOI 10.1049/iet-sen.2016.0066
   Hausen AC, 2007, P 1 WORKSH FIN STAT, P1
   Helton JC, 2003, RELIAB ENG SYST SAFE, V81, P23, DOI 10.1016/S0951-8320(03)00058-9
   Huang H, 2017, IEEE COMPUT INTELL M, V12, P46, DOI 10.1109/MCI.2017.2670462
   Intel M., 2021, BENCHM US GUID
   KOREL B, 1990, IEEE T SOFTWARE ENG, V16, P870, DOI 10.1109/32.57624
   Krena Bohuslav., 2010, PADTAD, P48
   Li HB, 2019, PROCEEDINGS OF THE 28TH INTERNATIONAL CONFERENCE ON COMPILER CONSTRUCTION (CC '19), P193, DOI 10.1145/3302516.3307353
   Li HB, 2018, INT PARALL DISTRIB P, P865, DOI 10.1109/IPDPS.2018.00096
   Lv XW, 2018, IET SOFTW, V12, P306, DOI 10.1049/iet-sen.2017.0260
   Ma LH, 2018, INFORM SOFTWARE TECH, V103, P162, DOI 10.1016/j.infsof.2018.07.001
   Melo SM, 2019, INFORM SOFTWARE TECH, V105, P226, DOI 10.1016/j.infsof.2018.08.017
   Panichella A, 2018, IEEE T SOFTWARE ENG, V44, P122, DOI 10.1109/TSE.2017.2663435
   Perez A, 2017, PROC INT CONF SOFTW, P654, DOI 10.1109/ICSE.2017.66
   Siegel SF, 2011, MATH COMPUT SCI, V5, P427, DOI 10.1007/s11786-011-0101-6
   Souza PSL, 2014, CONCURR COMP-PRACT E, V26, P21, DOI 10.1002/cpe.2937
   Souza SRS, 2008, CONCURR COMP-PRACT E, V20, P1893, DOI 10.1002/cpe.1297
   Sun BC, 2022, IEEE T SOFTWARE ENG, V48, P1336, DOI 10.1109/TSE.2020.3019406
   Sun BC, 2019, INFORM SOFTWARE TECH, V114, P190, DOI 10.1016/j.infsof.2019.07.002
   Tian T, 2016, AUTOMAT SOFTW ENG, V23, P469, DOI 10.1007/s10515-014-0173-z
   Vetter JereyS., 2000, Proceedings Supercomputing 2000, November 4-10, 2000, Dallas, Texas, USA. IEEE Computer Society, P51
   Vilela RF, 2019, LECT NOTES COMPUT SC, V11664, P121, DOI 10.1007/978-3-030-27455-9_9
   Windisch A, 2007, GECCO 2007: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOL 1 AND 2, P1121
   Yu HB, 2018, PROC IEEE ACM INT C, P527, DOI 10.1145/3183440.3190336
NR 37
TC 1
Z9 1
U1 0
U2 2
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUN 1
PY 2023
VL 49
IS 6
BP 3504
EP 3523
DI 10.1109/TSE.2023.3263509
PG 20
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA J9KW5
UT WOS:001012752300009
DA 2024-07-18
ER

PT J
AU Reid, B
   d'Amorim, M
   Wagner, M
   Treude, C
AF Reid, Brittany
   d'Amorim, Marcelo
   Wagner, Markus
   Treude, Christoph
TI NCQ: Code Reuse Support for Node.js Developers
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Codes; Task analysis; Documentation; Problem-solving; Switches; Search
   problems; Search engines; Code reuse; code search; library selection
ID PRODUCTIVITY; ACCEPTANCE
AB Code reuse is an important part of software development. The adoption of code reuse practices is especially common among Node.js developers. The Node.js package manager, NPM, indexes over 1 Million packages and developers often seek out packages to solve programming tasks. Due to the vast number of packages, selecting the right package is difficult and time consuming. With the goal of improving productivity of developers that heavily reuse code through third-party packages, we present Node Code Query (NCQ), a Read-Eval-Print-Loop environment that allows developers to 1) search for NPM packages using natural language queries, 2) search for code snippets related to those packages, 3) automatically correct errors in these code snippets, 4) quickly setup new environments for testing those snippets, and 5) transition between search and editing modes. In two user studies with a total of 20 participants, we find that participants begin programming faster and conclude tasks faster with NCQ than with baseline approaches, and that they like, among other features, the search for code snippets and packages. Our results suggest that NCQ makes Node.js developers more efficient in reusing code.
C1 [Reid, Brittany; Wagner, Markus] Univ Adelaide, Adelaide, SA 5005, Australia.
   [d'Amorim, Marcelo] North Carolina State Univ, Raleigh, NC 27694 USA.
   [d'Amorim, Marcelo] Univ Fed Pernambuco, BR-50670 Recife, Brazil.
   [Treude, Christoph] Univ Melbourne, Parkville, Vic 3010, Australia.
C3 University of Adelaide; North Carolina State University; Universidade
   Federal de Pernambuco; University of Melbourne
RP Reid, B (corresponding author), Univ Adelaide, Adelaide, SA 5005, Australia.
EM brittany.reid@adelaide.edu.au; damorim@cin.ufpe.br;
   markus.wagner@adelaide.edu.au; c.treude@gmail.com
RI Treude, Christoph/AAZ-6257-2021; Wagner, Markus/HZM-6101-2023; d'Amorim,
   Marcelo/D-1703-2017
OI Wagner, Markus/0000-0002-3124-0061; Treude,
   Christoph/0000-0002-6919-2149; Reid, Brittany/0000-0001-7012-0655;
   d'Amorim, Marcelo/0000-0002-1323-8769
FU FACEPE [PRONEX APQ 0388-1.03/14, APQ-0399-1.03/17]; CAPES
   [88887.136410/2017-00]; CNPq [465614/2014-0]; ARC [DP200102364,
   DP210102670]; Australian Government Research Training Program (RTP)
   Scholarship
FX This research was supported in part by INES 2.0, FACEPE under Grants
   PRONEX APQ 0388-1.03/14 and APQ-0399-1.03/17, in part by CAPES under
   Grant 88887.136410/2017-00, in part by CNPq under Grant 465614/2014-0,
   and in part by ARC under Grants DP200102364 and DP210102670. The work of
   Brittany was supported in part by an Australian Government Research
   Training Program (RTP) Scholarship. The work of Christoph and Markus
   were supported in part by gifts from Facebook and Google.
CR Abdalkareem R, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P385, DOI 10.1145/3106237.3106267
   Basili VR, 1996, COMMUN ACM, V39, P104, DOI 10.1145/236156.236184
   Brandt J, 2010, CHI2010: PROCEEDINGS OF THE 28TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, VOLS 1-4, P513
   Campbell BA, 2017, PROC IEEE INT CONF S, P628, DOI 10.1109/ICSME.2017.56
   Chinthanet B., 2021, arXiv
   Danilova A, 2021, PROC INT CONF SOFTW, P537, DOI 10.1109/ICSE43902.2021.00057
   DAVIS FD, 1989, MIS QUART, V13, P319, DOI 10.2307/249008
   El-Hajj R, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P1591, DOI 10.1145/3368089.3417922
   Ferreira Campos Uriel, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P195, DOI 10.1109/MSR.2019.00039
   Kula RG, 2017, Arxiv, DOI [arXiv:1709.04638, DOI 10.48550/ARXIV.1709.04638]
   Gu XD, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P933, DOI 10.1145/3180155.3180167
   Kanade A, 2020, PR MACH LEARN RES, V119
   Li X, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P690, DOI 10.1145/2950290.2950341
   Licorish S. A., 2022, P GENETIC EVOLUTIONA, P790
   LIM WC, 1994, IEEE SOFTWARE, V11, P23, DOI 10.1109/52.311048
   McMillan C., 2010, Proceedings of the 2Nd International Workshop on Recommendation Systems for Software Engineering, RSSE'10, P21
   Melo L, 2021, IEEE T SOFTWARE ENG, V47, P2563, DOI 10.1109/TSE.2019.2956919
   Mirhosseini S, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P375, DOI 10.1145/3368089.3409706
   Mockus Audris, 2007, International Workshop on Emerging Trends in FLOSS Research and Development, P7, DOI [10.1109/FLOSS.2007.10, DOI 10.1109/FLOSS.2007.10]
   Mohagheghi P, 2004, PROC INT CONF SOFTW, P282, DOI 10.1109/ICSE.2004.1317450
   Moreno L, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P880, DOI 10.1109/ICSE.2015.98
   Ponzanelli L, 2014, PROC IEEE INT CONF S, P577, DOI 10.1109/ICSME.2014.99
   Ponzanelli L, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P1295, DOI 10.1109/ICSE.2013.6606701
   Project Jupter, 2020, ABOUT US
   Proksch S., 2015, BUILD RECOMMENDATION, P1
   Rainer A, 2021, Arxiv, DOI arXiv:2112.14186
   Reid Brittany, 2020, GECCO'20. Proceedings of the 2020 Genetic and Evolutionary Computation Conference Companion, P1945, DOI 10.1145/3377929.3398087
   Reid Brittany, 2022, arXiv
   Saied MA, 2018, J SYST SOFTWARE, V145, P164, DOI 10.1016/j.jss.2018.08.032
   SANDEWALL E, 1978, COMPUT SURV, V10, P35, DOI 10.1145/356715.356719
   Sojer M, 2010, J ASSOC INF SYST, V11, P868
   Steinmacher I, 2016, PROC INT CONF SOFTW, P273, DOI 10.1145/2884781.2884806
   Tal L., 2020, NPM PASSES 1 MILLION
   Terragni V., 2016, P 25 INT S SOFTWARE, P118
   Vargas EL, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P245, DOI 10.1145/3368089.3409711
   Venkatesh V, 2000, MANAGE SCI, V46, P186, DOI 10.1287/mnsc.46.2.186.11926
   W3Techs, 2020, US STAT NOD JS
   Xu FF, 2022, ACM T SOFTW ENG METH, V31, DOI 10.1145/3487569
   Yang D, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P391, DOI [10.1109/MSR.2016.047, 10.1145/2901739.2901767]
   Zhang HY, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P956, DOI 10.1145/2950290.2983955
NR 40
TC 1
Z9 1
U1 5
U2 6
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAY 1
PY 2023
VL 49
IS 5
BP 3205
EP 3225
DI 10.1109/TSE.2023.3248113
PG 21
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA G8MH8
UT WOS:000991628700009
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Delgado-Pérez, P
   Ramírez, A
   Valle-Gómez, KJ
   Medina-Bulo, I
   Romero, JR
AF Delgado-Perez, Pedro
   Ramirez, Aurora
   Valle-Gomez, Kevin J.
   Medina-Bulo, Inmaculada
   Romero, Jose Raul
TI InterEvo-TR: Interactive Evolutionary Test Generation With Readability
   Assessment
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Test pattern generators; Search problems; Optimization; Codes; Task
   analysis; Statistics; Sociology; Evolutionary computing and genetic
   algorithms; interactive search-based software engineering; readability;
   testing tools
ID SOFTWARE; OPTIMIZATION
AB Automated test case generation has proven to be useful to reduce the usually high expenses of software testing. However, several studies have also noted the skepticism of testers regarding the comprehension of generated test suites when compared to manually designed ones. This fact suggests that involving testers in the test generation process could be helpful to increase their acceptance of automatically-produced test suites. In this paper, we propose incorporating interactive readability assessments made by a tester into EvoSuite, a widely-known evolutionary test generation tool. Our approach, InterEvo-TR, interacts with the tester at different moments during the search and shows different test cases covering the same coverage target for their subjective evaluation. The design of such an interactive approach involves a schedule of interaction, a method to diversify the selected targets, a plan to save and handle the readability values, and some mechanisms to customize the level of engagement in the revision, among other aspects. To analyze the potential and practicability of our proposal, we conduct a controlled experiment in which 39 participants, including academics, professional developers, and student collaborators, interact with InterEvo-TR. Our results show that the strategy to select and present intermediate results is effective for the purpose of readability assessment. Furthermore, the participants' actions and responses to a questionnaire allowed us to analyze the aspects influencing test code readability and the benefits and limitations of an interactive approach in the context of test case generation, paving the way for future developments based on interactivity.
C1 [Delgado-Perez, Pedro; Valle-Gomez, Kevin J.] Univ Cadiz, Cadiz 11003, Spain.
   [Ramirez, Aurora; Romero, Jose Raul] Univ Cordoba, Cordoba 14071, Spain.
C3 Universidad de Cadiz; Universidad de Cordoba
RP Delgado-Pérez, P (corresponding author), Univ Cadiz, Cadiz 11003, Spain.
EM pedro.delgado@uca.es; aramirez@uco.es; kevin.valle@uca.es;
   inmaculada.medina@uca.es; jrromero@uco.es
RI Medina-Bulo, Inmaculada/L-5523-2014; Delgado-Pérez, Pedro/N-4289-2018;
   Romero, Jose Raul/I-5658-2015; Valle-Gomez, Kevin J./D-8998-2018;
   Ramirez, Aurora/A-3635-2019
OI Medina-Bulo, Inmaculada/0000-0002-7543-2671; Delgado-Pérez,
   Pedro/0000-0003-1568-9288; Romero, Jose Raul/0000-0002-4550-6385;
   Valle-Gomez, Kevin J./0000-0001-6066-9441; Ramirez,
   Aurora/0000-0002-1916-6559
FU European Commission (FEDER); Spanish Ministry of Science and Innovation
   - MICIN/AEI [PID2021-122215NB-C33, RTI2018-093608-BC33,
   RED2018-102472-T, PID2020-115832GB-I00]; Andalusian Regional Government
   [DOC_00944]
FX This work was supported in part by the European Commission (FEDER), in
   part by the Spanish Ministry of Science and Innovation under Grants
   PID2021-122215NB-C33, RTI2018-093608-BC33, RED2018-102472-T, and
   PID2020-115832GB-I00 funded by MICIN/AEI/10.13039/501100011033, and in
   part by the Andalusian Regional Government postdoctoral under Grant
   DOC_00944.
CR Ali S, 2010, IEEE T SOFTWARE ENG, V36, P742, DOI 10.1109/TSE.2009.52
   Alizadeh V, 2020, IEEE T SOFTWARE ENG, V46, P932, DOI 10.1109/TSE.2018.2872711
   Almasi MM, 2017, 2017 IEEE/ACM 39TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2017), P263, DOI 10.1109/ICSE-SEIP.2017.27
   Anand S, 2013, J SYST SOFTWARE, V86, P1978, DOI 10.1016/j.jss.2013.02.061
   Arcuri A., 2021, J. Open Source Softw., V6, P2153
   Arcuri A, 2018, EMPIR SOFTW ENG, V23, P1959, DOI 10.1007/s10664-017-9570-9
   Arcuri A, 2014, SOFTW TEST VERIF REL, V24, P219, DOI 10.1002/stvr.1486
   Cohen MB, 2019, 2019 IEEE/ACM 12TH INTERNATIONAL WORKSHOP ON SEARCH-BASED SOFTWARE TESTING (SBST 2019), P13, DOI 10.1109/SBST.2019.00013
   Daka Ermira, 2015, Search-Based Software Engineering. 7th International Symposium, SSBSE 2015. Proceedings: LNCS 9275, P235, DOI 10.1007/978-3-319-22183-0_17
   Daka E, 2017, PROCEEDINGS OF THE 26TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA'17), P57, DOI 10.1145/3092703.3092727
   Daka E, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P107, DOI 10.1145/2786805.2786838
   Evers Bjorn, 2020, Search-Based Software Engineering. 12th International Symposium, SSBSE 2020. Proceedings. Lecture Notes in Computer Science (LNCS 12420), P121, DOI 10.1007/978-3-030-59762-7_9
   Fraser G, 2012, IEEE T SOFTWARE ENG, V38, P278, DOI 10.1109/TSE.2011.93
   Köppen M, 2007, LECT NOTES COMPUT SC, V4403, P727
   Marculescu Bogdan, 2012, Search Based Software Engineering. Proceedings of the 4th International Symposium (SSBSE 2012), P273, DOI 10.1007/978-3-642-33119-0_21
   Marculescu B, 2018, J SYST SOFTWARE, V142, P156, DOI 10.1016/j.jss.2018.04.061
   Marculescu B, 2016, INFORM SOFTWARE TECH, V78, P66, DOI 10.1016/j.infsof.2016.05.009
   Marculescu B, 2015, APPL SOFT COMPUT, V29, P26, DOI 10.1016/j.asoc.2014.12.025
   Marculescu B, 2013, 2013 12TH INTERNATIONAL CONFERENCE ON MACHINE LEARNING AND APPLICATIONS (ICMLA 2013), VOL 2, P102, DOI 10.1109/ICMLA.2013.113
   Marculescu B, 2013, ASIA PAC SOFWR ENG, P87, DOI 10.1109/APSEC.2013.120
   McMinn P, 2004, SOFTW TEST VERIF REL, V14, P105, DOI 10.1002/stvr.294
   Mohanani R, 2020, IEEE T SOFTWARE ENG, V46, P1318, DOI 10.1109/TSE.2018.2877759
   Myers GJ, 2012, ART OF SOFTWARE TESTING, 3RD EDITION, P1
   Panichella A, 2018, IEEE T SOFTWARE ENG, V44, P122, DOI 10.1109/TSE.2017.2663435
   Panichella S, 2021, 2021 IEEE/ACM 14TH INTERNATIONAL WORKSHOP ON SEARCH-BASED SOFTWARE TESTING (SBST 2021), P20, DOI 10.1109/SBST52555.2021.00011
   Panichella S, 2016, PROC INT CONF SOFTW, P547, DOI 10.1145/2884781.2884847
   Pérez F, 2022, IEEE T SOFTWARE ENG, V48, P4553, DOI 10.1109/TSE.2021.3121253
   Ramírez A, 2021, IEEE C EVOL COMPUTAT, P2395, DOI 10.1109/CEC45853.2021.9504786
   Ramírez A, 2019, IEEE T SOFTWARE ENG, V45, P760, DOI 10.1109/TSE.2018.2803055
   Ramírez A, 2018, INFORM SCIENCES, V463, P92, DOI 10.1016/j.ins.2018.06.034
   Rebai S, 2022, IEEE T SOFTWARE ENG, V48, P1560, DOI 10.1109/TSE.2020.3024814
   Rojas JM, 2017, 2017 IEEE/ACM 10TH INTERNATIONAL WORKSHOP ON SEARCH-BASED SOFTWARE TESTING (SBST), P51, DOI 10.1109/SBST.2017.4
   Rojas JM, 2017, EMPIR SOFTW ENG, V22, P852, DOI 10.1007/s10664-015-9424-2
   Roy D, 2020, IEEE INT CONF AUTOM, P287, DOI 10.1145/3324884.3416622
   Shamshiri S, 2018, IEEE INT CONF SOFTW, P250, DOI 10.1109/ICST.2018.00033
   Wappler S, 2006, IEEE C EVOL COMPUTAT, P851, DOI 10.1109/CEC.2006.1688400
NR 36
TC 3
Z9 3
U1 0
U2 0
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD APR 1
PY 2023
VL 49
IS 4
BP 2580
EP 2596
DI 10.1109/TSE.2022.3227418
PG 17
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA E9NM9
UT WOS:000978723600067
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Grazia, LD
   Bredl, P
   Pradel, M
AF Grazia, Luca Di
   Bredl, Paul
   Pradel, Michael
TI DiffSearch: A Scalable and Precise Search Engine for Code Changes
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Codes; Database languages; Search problems; Java; Python; Indexing;
   Feature extraction; Software engineering; program analysis; software
   maintenance
AB The source code of successful projects is evolving all the time, resulting in hundreds of thousands of code changes stored in source code repositories. This wealth of data can be useful, e.g., to find changes similar to a planned code change or examples of recurring code improvements. This paper presents DiffSearch, a search engine that, given a query that describes a code change, returns a set of changes that match the query. The approach is enabled by three key contributions. First, we present a query language that extends the underlying programming language with wildcards and placeholders, providing an intuitive way of formulating queries that is easy to adapt to different programming languages. Second, to ensure scalability, the approach indexes code changes in a one-time preprocessing step, mapping them into a feature space, and then performs an efficient search in the feature space for each query. Third, to guarantee precision, i.e., that any returned code change indeed matches the given query, we present a tree-based matching algorithm that checks whether a query can be expanded to a concrete code change. We present implementations for Java, JavaScript, and Python, and show that the approach responds within seconds to queries across one million code changes, has a recall of 80.7% for Java, 89.6% for Python, and 90.4% for JavaScript, enables users to find relevant code changes more effectively than a regular expression-based search and GitHub's search feature, and is helpful for gathering a large-scale dataset of real-world bug fixes.
C1 [Grazia, Luca Di; Bredl, Paul; Pradel, Michael] Univ Stuttgart, Dept Comp Sci, D-70174 Stuttgart, Germany.
C3 University of Stuttgart
RP Grazia, LD (corresponding author), Univ Stuttgart, Dept Comp Sci, D-70174 Stuttgart, Germany.
EM luca.di-grazia@iste.uni-stuttgart.de; paulbredl@gmx.de;
   michael@binaervarianz.de
OI Bredl, Paul/0009-0007-2887-784X; Di Grazia, Luca/0000-0002-5306-8645
FU European Research Council ERC [851895]; German Research Foundation;
   European Research Council (ERC) [851895] Funding Source: European
   Research Council (ERC)
FX This work was supported in part by the European Research Council
   ERCunder Grant 851895, and in part by the German Research Foundation
   withinthe ConcSys and DeMoCo Projects
CR Alali A, 2008, INT C PROGRAM COMPRE, P182, DOI 10.1109/ICPC.2008.24
   Alon U, 2019, P ACM PROGRAM LANG, V3, DOI 10.1145/3290353
   Nguyen AT, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P511, DOI 10.1145/2950290.2950333
   Bader J, 2019, P ACM PROGRAM LANG, V3, DOI 10.1145/3360585
   Bajracharya S., 2006, COMP 21 ACM SIGPLAN, P681, DOI DOI 10.1145/1176617.1176671
   Barnett M, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P134, DOI 10.1109/ICSE.2015.35
   Buse Raymond P. L., 2010, P 25 IEEE ACM INT C, P33, DOI DOI 10.1145/1858996.1859005
   Cambronero J, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P964, DOI 10.1145/3338906.3340458
   Di Grazia L, 2023, ACM COMPUT SURV, V55, DOI 10.1145/3565971
   Eghbali A, 2020, IEEE INT CONF AUTOM, P956, DOI 10.1145/3324884.3416576
   Erdweg S, 2021, PROCEEDINGS OF THE 42ND ACM SIGPLAN INTERNATIONAL CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION (PLDI '21), P406, DOI 10.1145/3453483.3454052
   Falleri Jean-Remy, 2014, P 29 ACM IEEE INT C, P313
   Fluri B, 2007, IEEE T SOFTWARE ENG, V33, P725, DOI 10.1109/TSE.2007.70731
   Gao X, 2020, P ACM PROGRAM LANG, V4, DOI 10.1145/3428287
   Giger E, 2011, P 8 WORK C MIN SOFTW, P83, DOI [10.1145/1985441.1985456, DOI 10.1145/1985441.1985456]
   Grund F, 2021, PROC INT CONF SOFTW, P1510, DOI 10.1109/ICSE43902.2021.00135
   Gu XD, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P933, DOI 10.1145/3180155.3180167
   Habib A, 2018, IEEE INT CONF AUTOM, P317, DOI 10.1145/3238147.3238213
   Hashimoto M, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P598, DOI 10.1145/3236024.3236047
   Hashimoto M, 2008, WORK CONF REVERSE EN, P279, DOI 10.1109/WCRE.2008.44
   Herzig K, 2016, EMPIR SOFTW ENG, V21, P303, DOI 10.1007/s10664-015-9376-6
   Hoan Anh Nguyen, 2019, 2019 IEEE/ACM 41st International Conference on Software Engineering (ICSE). Proceedings, P819, DOI 10.1109/ICSE.2019.00089
   Nguyen HA, 2013, IEEE INT CONF AUTOM, P180, DOI 10.1109/ASE.2013.6693078
   Hoang T, 2020, PROC INT CONF SOFTW, P518, DOI 10.1145/3377811.3380361
   Inoue K., 2020, arXiv, DOI [10.48550/ARXIV.2003.05615, DOI 10.48550/ARXIV.2003.05615]
   Jiang LX, 2007, PROC INT CONF SOFTW, P96
   Johnson J, 2021, IEEE T BIG DATA, V7, P535, DOI 10.1109/TBDATA.2019.2921572
   Kamiya T, 2002, IEEE T SOFTWARE ENG, V28, P654, DOI 10.1109/TSE.2002.1019480
   Karampatsis RM, 2020, IEEE WORK CONF MIN S, P573, DOI 10.1145/3379597.3387491
   Kawrykow D, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P351, DOI 10.1145/1985793.1985842
   Kim K, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P946, DOI 10.1145/3180155.3180187
   Kim S, 2008, IEEE T SOFTWARE ENG, V34, P181, DOI 10.1109/TSE.2007.70773
   Lawall J, 2018, PROCEEDINGS OF THE 2018 USENIX ANNUAL TECHNICAL CONFERENCE, P601
   Lawall J, 2017, 2017 USENIX ANNUAL TECHNICAL CONFERENCE (USENIX ATC '17), P15
   Le Goues C, 2019, COMMUN ACM, V62, P56, DOI 10.1145/3318162
   Le XBD, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P213, DOI 10.1109/SANER.2016.76
   Li ZM, 2006, IEEE T SOFTWARE ENG, V32, P176, DOI 10.1109/TSE.2006.28
   Livshits V.B., 2005, ESEC SIGSOFT FSE, P296, DOI [DOI 10.1145/1095430.1081754, DOI 10.1145/1081706.1081754]
   Lozoya Rocio Cabrera, 2021, SN Computer Science, V2, P150, DOI DOI 10.1007/S42979-021-00566-Z
   Luan SF, 2019, P ACM PROGRAM LANG, V3, DOI 10.1145/3360578
   Martie L, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P774, DOI 10.1145/3106237.3106293
   Meng N, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P502, DOI 10.1109/ICSE.2013.6606596
   Meng N, 2011, PLDI 11: PROCEEDINGS OF THE 2011 ACM CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P329
   Motwani M, 2022, IEEE T SOFTWARE ENG, V48, P637, DOI 10.1109/TSE.2020.2998785
   Negara S, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P803, DOI 10.1145/2568225.2568317
   Nielsen BB, 2021, PROC INT CONF SOFTW, P74, DOI 10.1109/ICSE43902.2021.00020
   Paletov R, 2018, ACM SIGPLAN NOTICES, V53, P450, DOI [10.1145/3192366.3192403, 10.1145/3296979.3192403]
   Pan K, 2009, EMPIR SOFTW ENG, V14, P286, DOI 10.1007/s10664-008-9077-5
   Pârtachi PP, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P63, DOI 10.1145/3368089.3409693
   PAUL S, 1994, IEEE T SOFTWARE ENG, V20, P463, DOI 10.1109/32.295894
   Pradel M, 2018, P ACM PROGRAM LANG, V2, DOI 10.1145/3276517
   Premtoon V, 2020, PROCEEDINGS OF THE 41ST ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION (PLDI '20), P1066, DOI 10.1145/3385412.3386001
   Rak-amnouykit I, 2020, DLS '2020: PROCEEDINGS OF THE 16TH ACM SIGPLAN INTERNATIONAL SYMPOSIUM ON DYNAMIC LANGUAGES, P57, DOI 10.1145/3426422.3426981
   Reiss SP, 2009, PROC INT CONF SOFTW, P243, DOI 10.1109/ICSE.2009.5070525
   Rice A, 2017, P ACM PROGRAM LANG, V1, DOI 10.1145/3133928
   Rolim R, 2017, PROC INT CONF SOFTW, P404, DOI 10.1109/ICSE.2017.44
   Roy CK, 2008, INT C PROGRAM COMPRE, P172, DOI 10.1109/ICPC.2008.41
   Sachdev S, 2018, MAPL'18: PROCEEDINGS OF THE 2ND ACM SIGPLAN INTERNATIONAL WORKSHOP ON MACHINE LEARNING AND PROGRAMMING LANGUAGES, P31, DOI 10.1145/3211346.3211353
   Sadowski C, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P191, DOI 10.1145/2786805.2786855
   Sajnani H, 2016, PROC INT CONF SOFTW, P1157, DOI 10.1145/2884781.2884877
   Sirres R, 2018, EMPIR SOFTW ENG, V23, P2622, DOI 10.1007/s10664-017-9544-y
   Sivaraman A, 2019, PROC INT CONF SOFTW, P292, DOI 10.1109/ICSE.2019.00044
   Sousa Reudismam, 2021, SBES '21: Brazilian Symposium on Software Engineering, P74, DOI 10.1145/3474624.3474650
   Tan SH, 2017, PROC IEEE ACM INT C, P180, DOI 10.1109/ICSE-C.2017.76
   Thong Hoang, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P34, DOI 10.1109/MSR.2019.00016
   Nguyen TD, 2017, PROC INT CONF SOFTW, P438, DOI 10.1109/ICSE.2017.47
   Tufano M, 2019, PROC INT CONF SOFTW, P25, DOI 10.1109/ICSE.2019.00021
   Wen M, 2016, IEEE INT CONF AUTOM, P262, DOI 10.1145/2970276.2970359
   Wu RX, 2018, EMPIR SOFTW ENG, V23, P2866, DOI 10.1007/s10664-017-9567-4
   Wu XH, 2021, PROCEEDINGS OF THE 29TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '21), P503, DOI 10.1145/3468264.3468605
NR 70
TC 2
Z9 2
U1 0
U2 5
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD APR 1
PY 2023
VL 49
IS 4
BP 2366
EP 2380
DI 10.1109/TSE.2022.3218859
PG 15
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA E9NM9
UT WOS:000978723600054
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Jiang, H
   Li, YL
   Guo, SK
   Li, XC
   Zhang, T
   Li, H
   Chen, R
AF Jiang, He
   Li, Yulong
   Guo, Shikai
   Li, Xiaochen
   Zhang, Tao
   Li, Hui
   Chen, Rong
TI DupHunter: Detecting Duplicate Pull Requests in Fork-Based Development
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Software; Syntactics; Cognition; Software development management;
   Cloning; Feature extraction; Codes; Duplicate pull requests detection;
   fork-based development; open source; graph embeddings; text processing
ID BUG REPORT DETECTION; QUESTION DETECTION
AB The emergence of numerous fork-based development platforms facilitates the development of Open-Source Software (OSS) projects. Developers across the world can fork software projects and submit their Pull Requests (PRs) to the projects. However, as the number of forks increases, numerous duplicate PRs might be submitted. These duplicate PRs may cause extra code review workload and frustrate developers working on the projects. To detect duplicate PRs, many approaches have been proposed, which analyze the similarity of different elements in PRs. However, previous approaches still suffer from unsatisfied detection accuracy due to two challenges. That is, they ignore the syntactic structural information of text elements in PRs and lack the joint reasoning between different elements of two PRs. In this study, we propose an automated duplicate PRs detector named DupHunter (Duplicate PRs Hunter), which includes a graph embedding component and a duplicate PRs detection component to address the above challenges. The graph embedding component uses a feature graph to represent a PR. It encodes the syntactic structure and semantics of text elements (e.g., the title and the description), as well as the knowledge of non-text elements (e.g., the submission time), to address the syntactic structural information challenge. The duplicate PRs detection component tackles the joint reasoning challenge using a graph matching network, which enables the information exchange and matching across different elements of two feature graphs with an attention coefficient mechanism. Experiments on 26 open-source projects show that DupHunter achieves an average F1-score@1 value of 0.650, significantly outperforming the state-of-the-art approaches by 3.2% to 48.1%. DupHunter can accurately detect duplicate PRs, with an average Precision@1 value of 0.922 and an average Recall@1 value of 0.502.
C1 [Jiang, He; Li, Xiaochen] Dalian Univ Technol, Sch Software, Dalian 116024, Peoples R China.
   [Jiang, He; Li, Xiaochen] Serv Software Liaoning Prov, Key Lab Ubiquitous Network, Dalian 116024, Peoples R China.
   [Jiang, He] DUT Artificial Intelligence Inst, Dalian 116024, Peoples R China.
   [Li, Yulong; Guo, Shikai; Li, Hui; Chen, Rong] Dalian Maritime Univ, Sch Informat Sci & Technol, Dalian 116026, Peoples R China.
   [Zhang, Tao] Macau Univ Sci & Technol, Sch Comp Sci & Engn, Macau 999078, Peoples R China.
C3 Dalian University of Technology; Dalian Maritime University; Macau
   University of Science & Technology
RP Jiang, H (corresponding author), Dalian Univ Technol, Sch Software, Dalian 116024, Peoples R China.; Jiang, H (corresponding author), Serv Software Liaoning Prov, Key Lab Ubiquitous Network, Dalian 116024, Peoples R China.; Jiang, H (corresponding author), DUT Artificial Intelligence Inst, Dalian 116024, Peoples R China.
EM jianghe@dlut.edu.cn; liyulong@dlmu.edu.cn; shikai.guo@dlmu.edu.cn;
   xiaochen.li@dlut.edu.cn; tazhang@must.edu.mo; li_hui@dlmu.edu.cn;
   rchen@dlmu.edu.cn
RI Chen, Xupeng/KFA-5959-2024; Zhang, Tao/E-5634-2012; chen,
   xian/KHW-2227-2024; zhang, jiahao/KEE-9357-2024; Chen,
   Liang/JXX-7887-2024
OI Zhang, Tao/0000-0002-6272-4069; , YulongLi/0000-0003-0003-9653
FU National Natural Science Foundation of China [62032004, 61902050];
   Natural Science Foundation of Liaoning Province [2021-MS-136];
   Fundamental Research Funds for the Central Universities [DUT22RC(3)028,
   3132019355]; Macao Science and Technology Development Fund
   [0047/2020/A1, 0014/2022/A]
FX This work was supported in part by the National Natural Science
   Foundation of China under Grants 62032004 and 61902050, in part by the
   Natural Science Foundation of Liaoning Province under Grant 2021-MS-136,
   in part by the Fundamental Research Funds for the Central Universities
   under Grants DUT22RC(3)028 and 3132019355, and in part by the Macao
   Science and Technology Development Fund under Grants 0047/2020/A1 and
   0014/2022/A. Recommended for acceptance by Andy Zaid-man.
CR Ernst NA, 2010, Arxiv, DOI arXiv:1004.2889
   Ahasanuzzaman M, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P402, DOI 10.1145/2901739.2901770
   Nguyen AT, 2012, IEEE INT CONF AUTOM, P70, DOI 10.1145/2351676.2351687
   [Anonymous], 2006, THESIS U BRIT COLUMB
   [Anonymous], 2022, CODE DATASETS
   Belgacem H, 2023, ACM T SOFTW ENG METH, V32, DOI 10.1145/3533021
   Bitzer  J., 2006, EC OPEN SOURCE SOFTW, P219
   Cooper N, 2021, PROC INT CONF SOFTW, P957, DOI 10.1109/ICSE43902.2021.00091
   Crowston K., 2006, P IEEE 39 HAW INT C, DOI DOI 10.1109/HICSS.2006.101
   Dabbish L, 2012, P ACM 2012 C COMP SU, P1277, DOI [10.1145/2145204.2145396, DOI 10.1145/2145204.2145396]
   Dong Q, 2019, IEEE T PATTERN ANAL, V41, P1367, DOI 10.1109/TPAMI.2018.2832629
   Dubinsky Y, 2013, EUR CON SFTWR MTNCE, P25, DOI 10.1109/CSMR.2013.13
   GitHub, 2008, US
   GitLab, 2011, US
   Gousios G, 2016, PROC INT CONF SOFTW, P285, DOI 10.1145/2884781.2884826
   Gousios G, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P345, DOI 10.1145/2568225.2568260
   Gutwin C., 2004, Computer Supported Cooperative Work Conference Proceedings, P72, DOI 10.1145/1031607.1031621
   Huang WJ, 2016, ACM CONFERENCE ON COMPUTER-SUPPORTED COOPERATIVE WORK AND SOCIAL COMPUTING (CSCW 2016), P717, DOI 10.1145/2818048.2819950
   Johnson JM, 2019, J BIG DATA-GER, V6, DOI 10.1186/s40537-019-0192-5
   Kukkar A, 2020, IEEE ACCESS, V8, P200749, DOI 10.1109/ACCESS.2020.3033045
   Lazar A., 2014, P 11 WORKING C MININ, P308
   Li XY, 2020, 58TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (ACL 2020), P465, DOI 10.1007/978-981-15-3863-6_51
   Li Y., 2016, PROC 4 INT C LEARN R
   Li YJ, 2019, PR MACH LEARN RES, V97
   Li Z, 2017, P 9 ASIA PACIFIC S I
   Li ZX, 2022, IEEE T SOFTWARE ENG, V48, P1309, DOI 10.1109/TSE.2020.3018726
   Lin B, 2017, INT CONF GLOBAL SOFT, P66, DOI 10.1109/ICGSE.2017.11
   Mizobuchi Y, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P563, DOI 10.1109/SANER.2017.7884678
   Podgurski A, 2003, PROC INT CONF SOFTW, P465, DOI 10.1109/ICSE.2003.1201224
   Rails, 2015, US
   Reimers N, 2019, 2019 CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING AND THE 9TH INTERNATIONAL JOINT CONFERENCE ON NATURAL LANGUAGE PROCESSING (EMNLP-IJCNLP 2019), P3982
   Ren LY, 2019, 2019 IEEE 26TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER), P230, DOI [10.1109/SANER.2019.8668023, 10.1109/saner.2019.8668023]
   Rocha TM, 2021, IEEE ACCESS, V9, P44610, DOI 10.1109/ACCESS.2021.3066283
   Runeson P, 2007, PROC INT CONF SOFTW, P499
   Shah DJ, 2018, 2018 CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING (EMNLP 2018), P1056
   Shahin M, 2017, IEEE ACCESS, V5, P3909, DOI 10.1109/ACCESS.2017.2685629
   Steinmacher I, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P256, DOI 10.1145/3180155.3180208
   Steinmacher I, 2016, PROC INT CONF SOFTW, P273, DOI 10.1145/2884781.2884806
   Stol KJ, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P187, DOI 10.1145/2568225.2568249
   Sun Chengnian, 2010, P 32 ACMIEEE INT C S, V1, P45, DOI [DOI 10.1145/1806799, 10.1145/1806799.1806811]
   Sun C, 2011, INT J CHEM ENG, V2011, DOI 10.1155/2011/545234
   Thongtanunam P, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P141, DOI 10.1109/SANER.2015.7081824
   Vasilescu B, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P805, DOI 10.1145/2786805.2786850
   Vetter G. R., 2008, OPEN SOURCE LICENSIN
   Wang LT, 2020, IEEE ACCESS, V8, P25964, DOI 10.1109/ACCESS.2020.2968391
   Wang LT, 2019, ASIA PAC SOFWR ENG, P506, DOI 10.1109/APSEC48747.2019.00074
   Wang QY, 2019, 11TH ASIA-PACIFIC SYMPOSIUM ON INTERNETWARE (INTERNETWARE 2019), DOI [10.1007/s11104-019-04156-0, 10.1145/3361242.3361254]
   Wang XY, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P461, DOI 10.1145/1368088.1368151
   Wang ZG, 2017, PROCEEDINGS OF THE TWENTY-SIXTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P4144
   Wong WE, 2016, IEEE T SOFTWARE ENG, V42, P707, DOI 10.1109/TSE.2016.2521368
   Yao L, 2019, AAAI CONF ARTIF INTE, P7370
   Yoonki Song, 2010, 2010 32nd International Conference on Software Engineering (ICSE), P315, DOI 10.1145/1810295.1810368
   Yu Y, 2018, IEEE WORK CONF MIN S, P22, DOI 10.1145/3196398.3196455
   Yu Y, 2016, SCI CHINA INFORM SCI, V59, DOI 10.1007/s11432-016-5595-8
   Yu Y, 2016, INFORM SOFTWARE TECH, V74, P204, DOI 10.1016/j.infsof.2016.01.004
   Zhang J, 2015, SCI CHINA INFORM SCI, V58, DOI 10.1007/s11432-014-5241-2
   Zhang WE, 2017, PROCEEDINGS OF THE 26TH INTERNATIONAL CONFERENCE ON WORLD WIDE WEB (WWW'17), P1221, DOI 10.1145/3038912.3052701
   Zhang YF, 2020, 58TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (ACL 2020), P334
   Zhang Y, 2015, J COMPUT SCI TECH-CH, V30, P981, DOI 10.1007/s11390-015-1576-4
   Zhou QF, 2021, INFORM SCIENCES, V543, P259, DOI 10.1016/j.ins.2020.07.048
   Zhou SR, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P350, DOI 10.1145/3338906.3338918
   Zhou SR, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P105, DOI 10.1145/3180155.3180205
NR 62
TC 1
Z9 1
U1 3
U2 5
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD APR 1
PY 2023
VL 49
IS 4
BP 2920
EP 2940
DI 10.1109/TSE.2023.3235942
PG 21
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA E9NM9
UT WOS:000978723600085
DA 2024-07-18
ER

PT J
AU Masud, A
AF Masud, Abu Naser
TI The Duality in Computing SSA Programs and Control Dependency
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE SSA program; control dependency; weak control closure; strong control
   closure; nontermination; duality; f function
ID GRAPH
AB Control dependency (CD) and Static Single Assignment (SSA) form are the basis of many program analyses, transformation, and optimization techniques, and these are implemented and used by modern compilers such as GCC and LLVM. Most state-of-the-art algorithms approximate these computations by using postdominator relations and dominance frontiers (DF) respectively for efficiency reasons which have been used for over three decades. Dominator-based SSA transformation and control dependencies exhibit a non-dual relationship. Recently, it has been shown that DF-based SSA computation is grossly imprecise, and Weak and Strong Control Closure (WCC and SCC) have wider applicability in capturing control dependencies than postdominator-based CD computation. Our main contribution in this article is the proof of duality between the generation of f functions and the computation of weakly deciding (WD) vertices which are the most computationally expensive part of SSA program construction and WCC/SCC computation respectively. We have provided a duality theorem and its constructive proof by means of an algorithm that can compute both thef functions and the WD vertices seamlessly. We have used this algorithm to compute SSA programs and WCC, and performed experiments on real-world industrial benchmarks. The practical efficiency of our algorithm is (i) almost equal to the best state-of-the-art algorithm in computing WCC, and (ii) closer to (but not as efficient as) the DF-based algorithms in computing SSA programs. Moreover, our algorithm achieves the ultimate precision in computing WCC and SSA programs with respect to the inputs of these algorithms and obtains wider applicability in the WCC computation (handling nonterminating programs).
C1 [Masud, Abu Naser] Malardalen Univ, Sch Innovat Design Engn, S-72220 Vasteras, Sweden.
C3 Malardalen University
RP Masud, A (corresponding author), Malardalen Univ, Sch Innovat Design Engn, S-72220 Vasteras, Sweden.
EM abu.naser.masud@mdu.se
RI Masud, Abu Naser/IWU-5778-2023
OI Masud, Abu Naser/0000-0002-4872-1208
FU Swedish Knowledge Foundation via the HEROproject
FX This work was supported by Swedish Knowledge Foundation via the
   HEROproject.
CR Aycock J, 2000, LECT NOTES COMPUT SC, V1781, P110
   Bilardi G, 2003, J ACM, V50, P375, DOI 10.1145/765568.765573
   Bilardi G, 1996, ACM SIGPLAN NOTICES, V31, P291, DOI 10.1145/249069.231435
   Braun M, 2013, LECT NOTES COMPUT SC, V7791, P102, DOI 10.1007/978-3-642-37051-9_6
   Briggs P, 1998, SOFTWARE PRACT EXPER, V28, P859, DOI 10.1002/(SICI)1097-024X(19980710)28:8<859::AID-SPE188>3.0.CO;2-8
   Bucek J, 2018, COMPANION OF THE 2018 ACM/SPEC INTERNATIONAL CONFERENCE ON PERFORMANCE ENGINEERING (ICPE '18), P41, DOI 10.1145/3185768.3185771
   Choi Jong-Deok, 1991, P 18 ACM SIGPLANSIGA, P55, DOI DOI 10.1145/99583.99594
   Chow F., 1996, Compiler Construction. 6th International Conference, CC'96. Proceedings, P253
   CLICK C, 1995, SIGPLAN NOTICES, V30, P35, DOI 10.1145/202530.202534
   CYTRON R, 1991, ACM T PROGR LANG SYS, V13, P451, DOI 10.1145/115372.115320
   Danicic S, 2011, THEOR COMPUT SCI, V412, P6809, DOI 10.1016/j.tcs.2011.08.033
   FERRANTE J, 1987, ACM T PROGR LANG SYS, V9, P319, DOI 10.1145/24039.24041
   Lattner C, 2004, INT SYM CODE GENER, P75, DOI 10.1109/CGO.2004.1281665
   Léchenet JC, 2018, LECT NOTES COMPUT SC, V10802, P207, DOI 10.1007/978-3-319-89363-1_12
   Masud A. N., 2022, CONTROL DEPENDENCY S
   Masud AN, 2022, CC'22: PROCEEDINGS OF THE 31ST ACM SIGPLAN INTERNATIONAL CONFERENCE ON COMPILER CONSTRUCTION, P65, DOI 10.1145/3497776.3517782
   Masud A, 2022, J SYST SOFTWARE, V184, DOI 10.1016/j.jss.2021.111140
   Masud A, 2021, ACM T PROGR LANG SYS, V42, DOI 10.1145/3434489
   Masud A, 2020, LECT NOTES COMPUT SC, V12389, P200, DOI 10.1007/978-3-030-65474-0_10
   Masud A, 2020, J SYST SOFTWARE, V166, DOI 10.1016/j.jss.2020.110590
   Masud A, 2019, IEEE INT WORK C SO, P23, DOI 10.1109/SCAM.2019.00012
   Nielson Flemming., PRINCIPLES PROGRAM A
   PODGURSKI A, 1990, IEEE T SOFTWARE ENG, V16, P965, DOI 10.1109/32.58784
   Prosser R.T., 1959, DEC 1 3 1959 E JOINT, P133, DOI DOI 10.1145/1460299.1460314
   Ranganath VP, 2007, ACM T PROGR LANG SYS, V29, DOI 10.1145/1275497.1275502
   REIF JH, 1982, SIAM J COMPUT, V11, P81, DOI 10.1137/0211007
   Rosen B. K., 1988, Conference Record of the Fifteenth Annual ACM Symposium on Principles of Programming Languages, P12, DOI 10.1145/73560.73562
   Shapiro R. M., 1970, CA70021432
   Sinha S, 2001, ACM T SOFTW ENG METH, V10, P209, DOI 10.1145/367008.367022
   Sreedhar V. C., 1995, Conference Record of POPL'95: 22nd ACM SIGPLAN-SIGACT Symposium Principles of Programming Languages, P62, DOI 10.1145/199448.199464
   Weiser M., 1981, 5th International Conference on Software Engineering, P439
NR 31
TC 1
Z9 1
U1 0
U2 2
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD APR 1
PY 2023
VL 49
IS 4
BP 1766
EP 1781
DI 10.1109/TSE.2022.3192249
PG 16
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA E9NM9
UT WOS:000978723600020
DA 2024-07-18
ER

PT J
AU Peng, KW
   Chakraborty, J
   Menzies, T
AF Peng, Kewen
   Chakraborty, Joymallya
   Menzies, Tim
TI FairMask: Better Fairness via Model-Based Rebalancing of Protected
   Attributes
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Software fairness; explanation; bias mitigation
ID JUSTICE
AB Context: Machine learning software can generate models that inappropriately discriminate against specific protected social groups (e.g., groups based on gender, ethnicity, etc.). Motivated by those results, software engineering researchers have proposed many methods for mitigating those discriminatory effects. While those methods are effective in mitigating bias, few of them can provide explanations on what is the root cause of bias. Objective: We aim to better detect and mitigate algorithmic discrimination in machine learning software problems. Method: Here we propose FairMask, a model-based extrapolation method that is capable of both mitigating bias and explaining the cause. In our FairMask approach, protected attributes are represented by models learned from the other independent variables (and these models offer extrapolations over the space between existing examples). We then use the extrapolation models to relabel protected attributes later seen in testing data or deployment time. Our approach aims to offset the biased predictions of the classification model by rebalancing the distribution of protected attributes. Results: The experiments of this paper show that, without compromising (original) model performance, FairMask can achieve significantly better group and individual fairness (as measured in different metrics) than benchmark methods. Moreover, compared to another instance-based rebalancing method, our model-based approach shows faster runtime and thus better scalability. Conclusion: Algorithmic decision bias can be removed via extrapolation that corrects the misleading latent correlation between the protected attributes and other non-protected ones. As evidence for this, our proposed FairMask is not only performance-wise better (measured by fairness and performance metrics) than two state-of-the-art fairness algorithms. Reproduction Package: In order to better support open science, all scripts and data used in this study are available online at https://github.com/anonymous12138/biasmitigation.
C1 [Peng, Kewen; Chakraborty, Joymallya; Menzies, Tim] North Carolina State Univ, Dept Comp Sci, Raleigh, NC 27695 USA.
C3 North Carolina State University
RP Peng, KW (corresponding author), North Carolina State Univ, Dept Comp Sci, Raleigh, NC 27695 USA.
EM kpeng@ncsu.edu; jchakra@ncsu.edu; timm@ieee.org
RI Menzies, Tim/X-7680-2019
OI Menzies, Tim/0000-0002-5040-3196; Peng, Kewen/0000-0002-4884-1808
CR Agency for Healthcare Research and Quality, 1996, MEPS
   [Anonymous], 2017, Bank Marketing UCI
   [Anonymous], 2019, EXPLAIN 2019
   [Anonymous], ACM C FAIRN ACC TRAN
   [Anonymous], 2015, PROPUBLICA COMPAS AN
   [Anonymous], 2018, Facebook says it has a tool to detect bias in its artificial intelligence
   Biswas S, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P642, DOI 10.1145/3368089.3409704
   Calders T, 2009, INT CONF DAT MIN WOR, P13, DOI 10.1109/ICDMW.2009.83
   Calmon FP, 2017, ADV NEUR IN, V30
   Chakraborty J., 2019, Software engineering for fairness: A case study with hyperparameter optimization
   Chakraborty J, 2021, PROCEEDINGS OF THE 29TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '21), P429, DOI 10.1145/3468264.3468537
   Chakraborty J, 2020, IEEE INT CONF AUTOM, P1229, DOI 10.1145/3324884.3418932
   Chakraborty J, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P654, DOI 10.1145/3368089.3409697
   Chawla NV, 2002, J ARTIF INTELL RES, V16, P321, DOI 10.1613/jair.953
   Chen Z., 2022, P 30 ACM JOINT EUR S
   COOK KS, 1983, ANNU REV SOCIOL, V9, P217, DOI 10.1146/annurev.so.09.080183.001245
   Corbett-Davies Sam., 2016, The Washington Post
   Creager E, 2019, PR MACH LEARN RES, V97
   European Commission, 2019, Ethics Guidelines for Trustworthy AI, DOI DOI 10.2759/346720
   Fate, 2018, FAIRN ACC TRANSP ETH
   Feldman M, 2015, KDD'15: PROCEEDINGS OF THE 21ST ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P259, DOI 10.1145/2783258.2783311
   Galhotra S, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P498, DOI 10.1145/3106237.3106277
   Grari V, 2021, Arxiv, DOI arXiv:2109.04999
   Hardt M, 2016, ADV NEUR IN, V29
   Hess M. R., 2004, ANN M AM ED RES ASS, P1
   Bellamy RKE, 2018, Arxiv, DOI [arXiv:1810.01943, DOI 10.48550/ARXIV.1810.01943]
   Kamiran F., 2013, Discrimination and privacy in the information society: data mining and profiling in large databases, P223, DOI DOI 10.1007/978-3-642-30487-3_12
   Kamiran F., 2018, Inf. Sci
   Kamiran F., 2010, P 19 MACH LEARN C BE, P1
   Kamiran F, 2012, IEEE DATA MINING, P924, DOI 10.1109/ICDM.2012.45
   Kamiran F, 2012, KNOWL INF SYST, V33, P1, DOI 10.1007/s10115-011-0463-8
   Kamiran F, 2009, 2009 2ND INTERNATIONAL CONFERENCE ON COMPUTER, CONTROL AND COMMUNICATION, P337
   Kamishima Toshihiro, 2012, Machine Learning and Knowledge Discovery in Databases. Proceedings of the European Conference (ECML PKDD 2012), P35, DOI 10.1007/978-3-642-33486-3_3
   Kamishima T., 2011, 2011 IEEE International Conference on Data Mining Workshops, P643, DOI 10.1109/ICDMW.2011.83
   Kilbertus N, 2018, Arxiv, DOI arXiv:1706.02744
   Lee M, 2019, Critical Digital an, P1, DOI [10.16997/book34, 10.16997/book34.a, 10.1145/3359284]
   Lind E.A., 2002, HDB JUSTICE RES LAW, P65
   Lundberg SM, 2017, ADV NEUR IN, V30
   Macbeth G, 2011, UNIV PSYCHOL, V10, P545, DOI 10.11144/Javeriana.upsy10-2.cdcp
   Mehrabi N, 2021, ACM COMPUT SURV, V54, DOI 10.1145/3457607
   Menzies T, 2013, IEEE T SOFTWARE ENG, V39, P822, DOI 10.1109/TSE.2012.83
   Menzies Tim, 2014, Sharing data and models in software engineering
   Mittas N, 2013, IEEE T SOFTWARE ENG, V39, P537, DOI 10.1109/TSE.2012.45
   Narayanan A., 2019, TL DS 21 FAIRNESS DE
   Ötting SK, 2018, COMPUT HUM BEHAV, V89, P27, DOI 10.1016/j.chb.2018.07.022
   Oneto L, 2019, AIES '19: PROCEEDINGS OF THE 2019 AAAI/ACM CONFERENCE ON AI, ETHICS, AND SOCIETY, P227, DOI 10.1145/3306618.3314255
   Park S, 2020, Arxiv, DOI arXiv:2007.03775
   Pleiss G, 2017, Arxiv, DOI arXiv:1709.02012
   Salazar R, 2021, PROC VLDB ENDOW, V14, P1694, DOI 10.14778/3461535.3463474
   Shahriari Kyarash, 2017, 2017 IEEE Canada International Humanitarian Technology Conference (IHTC), P197, DOI 10.1109/IHTC.2017.8058187
   Simonite T., 2020, ARS TECHNICA, V29
   Solum LB, 2004, SOUTH CALIF LAW REV, V78, P181
   Uci, 1994, ADULT DATA SET
   UCI, 2016, DEF CRED CARD CLIENT
   UCI, 2001, HEART DIS DAT SET
   Uci, 2000, STATL GERM CRED DAT
   Xia T., 2018, arXiv
   Yeh IC, 2009, EXPERT SYST APPL, V36, P2473, DOI 10.1016/j.eswa.2007.12.020
   Zelaya V., 2019, KDD XAI
   Zhang BH, 2018, PROCEEDINGS OF THE 2018 AAAI/ACM CONFERENCE ON AI, ETHICS, AND SOCIETY (AIES'18), P335, DOI 10.1145/3278721.3278779
   Zhang Lu, 2016, arXiv, DOI [10.48550/arXiv.1611.07509, DOI 10.48550/ARXIV.1611.07509]
   Zhang PX, 2020, PROC INT CONF SOFTW, P949, DOI 10.1145/3377811.3380331
   Zliobaite I., 2011, Proceedings of the 2011 IEEE 11th International Conference on Data Mining (ICDM 2011), P992, DOI 10.1109/ICDM.2011.72
NR 63
TC 4
Z9 4
U1 1
U2 4
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD APR 1
PY 2023
VL 49
IS 4
BP 2426
EP 2439
DI 10.1109/TSE.2022.3220713
PG 14
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA E9NM9
UT WOS:000978723600058
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Viggiato, M
   Paas, D
   Buzon, C
   Bezemer, CP
AF Viggiato, Markos
   Paas, Dale
   Buzon, Chris
   Bezemer, Cor-Paul
TI Identifying Similar Test Cases That Are Specified in Natural Language
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Bit error rate; Natural languages; Testing; Task analysis; Manuals;
   Games; Codes; Software testing; test case similarity; clustering
ID AGREEMENT
AB Software testing is still a manual process in many industries, despite the recent improvements in automated testing techniques. As a result, test cases (which consist of one or more test steps that need to be executed manually by the tester) are often specified in natural language by different employees and many redundant test cases might exist in the test suite. This increases the (already high) cost of test execution. Manually identifying similar test cases is a time-consuming and error-prone task. Therefore, in this paper, we propose an unsupervised approach to identify similar test cases. Our approach uses a combination of text embedding, text similarity and clustering techniques to identify similar test cases. We evaluate five different text embedding techniques, two text similarity metrics, and two clustering techniques to cluster similar test steps and three techniques to identify similar test cases from the test step clusters. Through an evaluation in an industrial setting, we showed that our approach achieves a high performance to cluster test steps (an F-score of 87.39%) and identify similar test cases (an F-score of 86.13%). Furthermore, a validation with developers indicates several different practical usages of our approach (such as identifying redundant test cases), which help to reduce the testing manual effort and time.
C1 [Viggiato, Markos; Bezemer, Cor-Paul] Univ Alberta, Analyt Software Games & Repository Data ASGAARD La, Edmonton, AB T6G 2R3, Canada.
   [Paas, Dale; Buzon, Chris] Prodigy Educ, Toronto, ON M5J 2L7, Canada.
C3 University of Alberta
RP Viggiato, M (corresponding author), Univ Alberta, Analyt Software Games & Repository Data ASGAARD La, Edmonton, AB T6G 2R3, Canada.
EM viggiato@ualberta.ca; dale.paas@prodigygame.com;
   christopher.buzon@prodigygame.com; bezemer@ualberta.ca
OI Viggiato, Markos/0000-0002-8500-3723; Bezemer,
   Cor-Paul/0000-0002-0474-5718
FU Prodigy Education; Natural Sciences and Engineering Research Council of
   Canada under Alliance Grant Project [ALLRP 550309]
FX This work was supported by Prodigy Education and the Natural Sciences
   and Engineering Research Council of Canada under the Alliance Grant
   Project ALLRP 550309.
CR Abreu R, 2007, TAIC PART 2007 - TESTING: ACADEMIC AND INDUSTRIAL CONFERENCE - PRACTICE AND RESEARCH TECHNIQUES, PROCEEDINGS, P89, DOI 10.1109/TAIC.PART.2007.13
   Abreu R, 2009, J SYST SOFTWARE, V82, P1780, DOI 10.1016/j.jss.2009.06.035
   Arafeen MJ, 2013, 2013 IEEE SIXTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST 2013), P312, DOI 10.1109/ICST.2013.12
   Bin Noor T, 2015, 2015 IEEE 1ST INTERNATIONAL WORKSHOP ON SOFTWARE ANALYTICS (SWAN), P13, DOI 10.1109/SWAN.2015.7070482
   Cer D, 2018, Arxiv, DOI [arXiv:1803.11175, DOI 10.48550/ARXIV.1803.11175]
   Chetouane N, 2020, IEEE ICST WORKSHOP, P380, DOI 10.1109/ICSTW50294.2020.00068
   COHEN J, 1960, EDUC PSYCHOL MEAS, V20, P37, DOI 10.1177/001316446002000104
   Devlin J, 2019, Arxiv, DOI arXiv:1810.04805
   Dietterich TG, 2000, LECT NOTES COMPUT SC, V1857, P1, DOI 10.1007/3-540-45014-9_1
   DiGiuseppe N., 2012, P ACM SIGSOFT 20 INT, P1
   Duda R. O., 1973, PATTERN CLASSIFICATI, V3
   Etikan I., 2016, AM J THEORETICAL APP, V5, P1, DOI [DOI 10.11648/J.AJTAS.20160501.11, 10.11648/j.atas.20160501.1]
   Goknil A., 2015, Proceedings of the 2015 International Symposium on Software Testing and Analysis, P385
   Gomaa WH., 2013, international journal of Computer Applications, V68, P13, DOI 10.5120/11638-7118
   Guarte JM, 2006, COMMUN STAT-SIMUL C, V35, P277, DOI 10.1080/03610910600591610
   Gururangan S, 2020, Arxiv, DOI [arXiv:2004.10964, DOI 10.48550/ARXIV.2004.10964]
   Hemmati H, 2017, SOFTW TEST VERIF REL, V27, DOI 10.1002/stvr.1609
   Huang Anna., 2008, Similarity measures for text document clustering, P49
   Joachims T., 1997, International conference on machine learning, P143, DOI DOI 10.1016/J.ESWA.2016.09.009
   Kusner MJ, 2015, PR MACH LEARN RES, V37, P957
   Lachmann R, 2016, 2016 15TH IEEE INTERNATIONAL CONFERENCE ON MACHINE LEARNING AND APPLICATIONS (ICMLA 2016), P361, DOI [10.1109/ICMLA.2016.0065, 10.1109/ICMLA.2016.163]
   LANDIS JR, 1977, BIOMETRICS, V33, P159, DOI 10.2307/2529310
   Le T.-D. B., 2016, P 25 INT S SOFTW TES, P177, DOI DOI 10.1145/2931037.2931049
   Li BL, 2013, LECT NOTES COMPUT SC, V8206, P611, DOI 10.1007/978-3-642-41278-3_74
   Li LY, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P1285, DOI 10.1145/3368089.3417067
   Lu JF, 2008, PATTERN RECOGN LETT, V29, P787, DOI 10.1016/j.patrec.2007.12.009
   Mai PX, 2018, PROC INT SYMP SOFTW, P58, DOI [10.1109/1SSRE.2018.00017, 10.1109/ISSRE.2018.00017]
   Marcinczuk M., 2021, P 11 GLOB WORDN C, P207
   Masuda S., 2015, PROC 8 INT C SOFTW T, P1
   Masuda S, 2016, IEEE ICST WORKSHOP, P1, DOI 10.1109/ICSTW.2016.27
   Mikolov T, 2013, Arxiv, DOI [arXiv:1301.3781, 10.48550/arXiv.1301.3781]
   Moon TK, 1996, IEEE SIGNAL PROC MAG, V13, P47, DOI 10.1109/79.543975
   Murphy-Hill E, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P1, DOI 10.1145/2568225.2568226
   Naik MP, 2015, 2015 IEEE INTERNATIONAL CONFERENCE ON ELECTRICAL, COMPUTER AND COMMUNICATION TECHNOLOGIES
   Fry ZP, 2012, Arxiv, DOI arXiv:1211.2858
   Pascarella L, 2018, IEEE WORK CONF MIN S, P392, DOI [10.1145/3196398.3196423, 10.1145/3196398.3196418]
   Pei HY, 2021, INFORM SOFTWARE TECH, V131, DOI 10.1016/j.infsof.2020.106470
   Peng Q., 2020, P 29 ACM SIGSOFT INT, P324, DOI DOI 10.1145/3395363.3397383
   Politowski C, 2021, Arxiv, DOI arXiv:2103.06431
   Le Q, 2014, PR MACH LEARN RES, V32, P1188
   Reimers N, 2019, Arxiv, DOI [arXiv:1908.10084, 10.48550/arXiv.1908.10084]
   Rokach L, 2005, DATA MINING AND KNOWLEDGE DISCOVERY HANDBOOK, P321, DOI 10.1007/0-387-25465-X_15
   Rothermel G, 2002, SOFTW TEST VERIF REL, V12, P219, DOI 10.1002/stvr.256
   SALTON G, 1988, INFORM PROCESS MANAG, V24, P513, DOI 10.1016/0306-4573(88)90021-0
   SALTON G, 1991, SCIENCE, V253, P974, DOI 10.1126/science.253.5023.974
   SNEATH P H, 1973, P573
   Songyu Chen, 2011, Proceedings 2011 IEEE Fourth International Conference on Software Testing, Verification and Validation (ICST 2011), P1, DOI 10.1109/ICST.2011.38
   SPARCKJONES K, 1972, J DOC, V28, P11, DOI 10.1108/eb026526
   Tan SH, 2020, PROC INT CONF SOFTW, P1335, DOI 10.1145/3377811.3380349
   Tomas M., 2013, arXiv, DOI DOI 10.48550/ARXIV.1310.4546
   Tongco M. D. C., 2007, Ethnobotany Research and Applications, V5, P147
   Turc I, 2019, Arxiv, DOI arXiv:1908.08962
   Walter B., 2018, P IEEE 11 INT C SOFT, P363
   Wan Xiaojun., 2008, EMNLP, P553, DOI DOI 10.3115/1613715.1613783
   Wang CH, 2022, IEEE T SOFTWARE ENG, V48, P585, DOI 10.1109/TSE.2020.2998503
   Weiss S. M., 2010, Text Mining: Predictive Methods for Analyzing Unstructured Information, DOI [10.1007/978-0-387-34555-0, DOI 10.1007/978-0-387-34555-0]
   Weiss S. M., 2015, Texts in Computer Science)
   Wu YH, 2016, Arxiv, DOI [arXiv:1609.08144, DOI 10.48550/ARXIV.1609.08144]
   Yue T., 2015, P INT S SOFTW TEST A, P397
   Zalmanovici M, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P962, DOI 10.1145/2950290.2983957
   Zhang Y, 2018, J INFORMETR, V12, P1099, DOI 10.1016/j.joi.2018.09.004
NR 61
TC 5
Z9 5
U1 3
U2 6
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAR 1
PY 2023
VL 49
IS 3
BP 1027
EP 1043
DI 10.1109/TSE.2022.3170272
PG 17
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA A1QF2
UT WOS:000952938700005
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Chi, JL
   Qu, Y
   Liu, T
   Zheng, QH
   Yin, H
AF Chi, Jianlei
   Qu, Yu
   Liu, Ting
   Zheng, Qinghua
   Yin, Heng
TI SeqTrans: Automatic Vulnerability Fix Via Sequence to Sequence Learning
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Maintenance engineering; Codes; Computer bugs; Predictive models;
   Transformers; Decoding; Training; Machine learning; neural machine
   translation; software engineering; vulnerability fix
ID CODE
AB Software vulnerabilities are now reported unprecedentedly due to the recent development of automated vulnerability hunting tools. However, fixing vulnerabilities still mainly depends on programmers' manual efforts. Developers need to deeply understand the vulnerability and affect the system's functions as little as possible. In this paper, with the advancement of Neural Machine Translation (NMT) techniques, we provide a novel approach called SeqTrans to exploit historical vulnerability fixes to provide suggestions and automatically fix the source code. To capture the contextual information around the vulnerable code, we propose to leverage data-flow dependencies to construct code sequences and feed them into the state-of-the-art transformer model. The fine-tuning strategy has been introduced to overcome the small sample size problem. We evaluate SeqTrans on a dataset containing 1,282 commits that fix 624 CVEs in 205 Java projects. Results show that the accuracy of SeqTrans outperforms the latest techniques and achieves 23.3% in statement-level fix and 25.3% in CVE-level fix. In the meantime, we look deep inside the result and observe that the NMT model performs very well in certain kinds of vulnerabilities like CWE-287 (Improper Authentication) and CWE-863 (Incorrect Authorization).
C1 [Chi, Jianlei; Liu, Ting; Zheng, Qinghua] Xi An Jiao Tong Univ, Sch Comp Sci & Technol, Key Lab Intelligent Networks& Network Secur MOEKLI, Minist Educ, Xian 710049, Peoples R China.
   [Qu, Yu; Yin, Heng] UC Riverside, Dept Comp Sci & Engn, Riverside, CA 92521 USA.
C3 Xi'an Jiaotong University; University of California System; University
   of California Riverside
RP Chi, JL (corresponding author), Xi An Jiao Tong Univ, Sch Comp Sci & Technol, Key Lab Intelligent Networks& Network Secur MOEKLI, Minist Educ, Xian 710049, Peoples R China.
EM chijianlei@stu.xjtu.edu.cn; yuq@ucr.edu; tingliu@mail.xjtu.edu.cn;
   qhzheng@mail.xjtu.edu.cn; heng@cs.ucr.edu
RI Qu, Yu/AAD-9426-2020
OI Qu, Yu/0000-0002-1400-6740; Liu, Ting/0000-0002-7600-0934
FU National Key Research and Development Program of China [2018YFB1004500];
   National Natural Science Foundation of China [62002280, 61632015,
   61772408, U1766215, 61833015, 61902306]; Innovative Research Group of
   the National Natural Science Foundation of China [61721002]; Innovation
   Research Team of Ministry of Education [IRT_17R86]; Project of China
   Knowledge Centre for Engineering Science and Technology
FX This work was supported in part by the National Key Research and
   Development Program of China under Grant 2018YFB1004500, in part by the
   National Natural Science Foundation of China under Grants 62002280,
   61632015, 61772408, U1766215, 61833015, and 61902306, in part by the
   Innovative Research Group of the National Natural Science Foundation of
   China under Grant 61721002, in part by the Innovation Research Team of
   Ministry of Education under Grant IRT_17R86, and in part by the Project
   of China Knowledge Centre for Engineering Science and Technology.
   Project of Chinese Academy of Engineering "The Online and Offline Mixed
   Educational Service System for 'The Belt and Road' Training in MOOC
   China."
CR Ackling T, 2011, GECCO-2011: PROCEEDINGS OF THE 13TH ANNUAL GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P1427
   Ahmed M, 2019, IEEE INT C SEMANT CO, P247, DOI [10.1109/ICSC.2019.00053, 10.1109/ICOSC.2019.8665673]
   Ahmed UZ, 2018, PROC INT CONF SOFTW, P78, DOI 10.1145/3183377.3183383
   Allamanis M, 2018, ACM COMPUT SURV, V51, DOI 10.1145/3212695
   [Anonymous], 2015, FINDBUGS FIND BUGS J
   [Anonymous], 2021, CS231N CONVOLUTIONAL
   [Anonymous], 2021, SPOTBUGS
   [Anonymous], 2019, SCITOOLS UNDERSTAND
   [Anonymous], 2021, SRCML
   [Anonymous], 2021, GITHUB COMPARE API
   [Anonymous], 2021, Find Security Bugs
   [Anonymous], 2021, AOSP VULNERABILITY D
   Bader J, 2019, P ACM PROGRAM LANG, V3, DOI 10.1145/3360585
   Böhme M, 2019, IEEE T SOFTWARE ENG, V45, P489, DOI 10.1109/TSE.2017.2785841
   Böhme M, 2017, CCS'17: PROCEEDINGS OF THE 2017 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P2329, DOI 10.1145/3133956.3134020
   Britton Tom, 2012, Technical Report
   Burnham Trevor, 2015, COFFEESCRIPT ACCELER
   Casalnuovo C, 2019, EMPIR SOFTW ENG, V24, P1823, DOI 10.1007/s10664-018-9669-7
   Chakraborty S, 2022, IEEE T SOFTWARE ENG, V48, P1385, DOI 10.1109/TSE.2020.3020502
   Chen Z., 2022, arXiv
   Chen ZM, 2019, Arxiv, DOI arXiv:1912.02015
   Chen ZM, 2021, IEEE T SOFTWARE ENG, V47, P1943, DOI 10.1109/TSE.2019.2940179
   Cheng Z, 2018, PROCEEDINGS OF THE TWENTY-SEVENTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P4005
   Dallmeier V, 2009, IEEE INT CONF AUTOM, P550, DOI 10.1109/ASE.2009.15
   Dinella E., 2020, INT C LEARN REPR ICL
   Durumeric Z, 2014, PROCEEDINGS OF THE 2014 ACM INTERNET MEASUREMENT CONFERENCE (IMC'14), P475, DOI 10.1145/2663716.2663755
   eclipse, ECLIPSE JGIT
   Eclipse, ECL IDE, P1
   Falleri Jean-Remy, 2014, P 29 ACM IEEE INT C, P313
   Fazzini M, 2019, PROCEEDINGS OF THE 28TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA '19), P204, DOI 10.1145/3293882.3330571
   Freitag M, 2017, Arxiv, DOI arXiv:1702.01806
   Frick V, 2018, PROC IEEE INT CONF S, P264, DOI 10.1109/ICSME.2018.00036
   Gazzola L, 2019, IEEE T SOFTWARE ENG, V45, P34, DOI 10.1109/TSE.2017.2755013
   Gers FA, 2000, NEURAL COMPUT, V12, P2451, DOI 10.1162/089976600300015015
   Gowda T, 2020, Arxiv, DOI arXiv:2004.02334
   Graves A, 2014, Arxiv, DOI arXiv:1308.0850
   Gupta R, 2017, AAAI CONF ARTIF INTE, P1345
   Gururangan S, 2020, Arxiv, DOI [arXiv:2004.10964, DOI 10.48550/ARXIV.2004.10964]
   Hailpern B, 2002, IBM SYST J, V41, P4, DOI 10.1147/sj.411.0004
   Harer J., 2018, Advances in Neural Information Processing Systems, P7933
   Hata H, 2019, Arxiv, DOI arXiv:1812.07170
   He KM, 2019, IEEE I CONF COMP VIS, P4917, DOI 10.1109/ICCV.2019.00502
   He KM, 2016, PROC CVPR IEEE, P770, DOI 10.1109/CVPR.2016.90
   Hoan AN, 2010, ACM SIGPLAN NOTICES, V45, P302, DOI 10.1145/1932682.1869486
   Nguyen HDT, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P772, DOI 10.1109/ICSE.2013.6606623
   Huang Z, 2019, P IEEE S SECUR PRIV, P539, DOI 10.1109/SP.2019.00071
   Phan HD, 2017, PROC IEEE ACM INT C, P47, DOI 10.1109/ICSE-C.2017.17
   Jayasundara V, 2019, Arxiv, DOI arXiv:1910.12306
   Jiang JJ, 2018, ISSTA'18: PROCEEDINGS OF THE 27TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P298, DOI 10.1145/3213846.3213871
   Kim D, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P802, DOI 10.1109/ICSE.2013.6606626
   Klein G, 2017, PROCEEDINGS OF THE 55TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (ACL 2017): SYSTEM DEMONSTRATIONS, P67, DOI 10.18653/v1/P17-4012
   Kocher P, 2019, P IEEE S SECUR PRIV, P1, DOI 10.1109/SP.2019.00002
   Koyuncu A, 2020, EMPIR SOFTW ENG, V25, P1980, DOI 10.1007/s10664-019-09780-z
   Lamothe M, 2021, Arxiv, DOI arXiv:1812.04894
   Le Goues C, 2019, COMMUN ACM, V62, P56, DOI 10.1145/3318162
   Le XBD, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P213, DOI 10.1109/SANER.2016.76
   Lei Ba J., 2016, arXiv
   Li Y, 2020, PROC INT CONF SOFTW, P602, DOI 10.1145/3377811.3380345
   Lipp M, 2018, PROCEEDINGS OF THE 27TH USENIX SECURITY SYMPOSIUM, P973
   Liu K, 2019, IEEE INT CONF SOFTW, P102, DOI 10.1109/ICST.2019.00020
   Liu K, 2019, 2019 IEEE 26TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER), P456, DOI 10.1109/saner.2019.8667970
   Liu XL, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P118, DOI 10.1109/SANER.2018.8330202
   Liu YH, 2019, Arxiv, DOI arXiv:1907.11692
   Long F, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P166, DOI 10.1145/2786805.2786811
   Ma SQ, 2017, LECT NOTES COMPUT SC, V10493, P229, DOI 10.1007/978-3-319-66399-9_13
   Mahajan D, 2018, LECT NOTES COMPUT SC, V11206, P185, DOI 10.1007/978-3-030-01216-8_12
   Martinez M, 2017, EMPIR SOFTW ENG, V22, P1936, DOI 10.1007/s10664-016-9470-4
   Matsumoto Junnosuke, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P550, DOI 10.1109/MSR.2019.00082
   Mechtaev S, 2016, PROC INT CONF SOFTW, P691, DOI 10.1145/2884781.2884807
   Mikolov T, 2010, 11TH ANNUAL CONFERENCE OF THE INTERNATIONAL SPEECH COMMUNICATION ASSOCIATION 2010 (INTERSPEECH 2010), VOLS 1-2, P1045
   Monperrus M, 2018, ACM COMPUT SURV, V51, DOI 10.1145/3105906
   Morrison P., 2015, P 2015 S BOOTCAMP SC, P1
   Perkins JH, 2009, SOSP'09: PROCEEDINGS OF THE TWENTY-SECOND ACM SIGOPS SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES, P87
   Ponta Serena Elisa, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P383, DOI 10.1109/MSR.2019.00064
   Ponta SE, 2018, PROC IEEE INT CONF S, P449, DOI 10.1109/ICSME.2018.00054
   Potter B, 2004, IEEE SECUR PRIV, V2, P81, DOI 10.1109/MSP.2004.84
   Qi YH, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P254, DOI 10.1145/2568225.2568254
   Marcote SRL, 2015, Arxiv, DOI arXiv:1504.05078
   Raychev V, 2014, ACM SIGPLAN NOTICES, V49, P419, DOI [10.1145/2594291.2594321, 10.1145/2666356.2594321]
   Saha RK, 2017, IEEE INT CONF AUTOM, P648, DOI 10.1109/ASE.2017.8115675
   Saha S, 2019, PROC INT CONF SOFTW, P13, DOI 10.1109/ICSE.2019.00020
   Scandariato R, 2014, IEEE T SOFTWARE ENG, V40, P993, DOI 10.1109/TSE.2014.2340398
   Shen Z., SECUR COMMUN NETW, V2020
   Tai KS, 2015, Arxiv, DOI arXiv:1503.00075
   Shi Y, 2010, ACM SIGPLAN NOTICES, V45, P160, DOI 10.1145/1932682.1869474
   Shiv Vighnesh Leonardo., 2019, ADV NEURAL INFORM PR, P12058
   Tajbakhsh N, 2016, IEEE T MED IMAGING, V35, P1299, DOI 10.1109/TMI.2016.2535302
   Thompson B., 2018, Freezing Subnetworks to Analyze Domain Adaptation in Neural Machine Translation
   Tufano M, 2019, ACM T SOFTW ENG METH, V28, DOI 10.1145/3340544
   Tufano M, 2019, PROC INT CONF SOFTW, P25, DOI 10.1109/ICSE.2019.00021
   Tufano M, 2018, IEEE INT CONF AUTOM, P832, DOI 10.1145/3238147.3240732
   Vaswani A, 2017, ADV NEUR IN, V30
   Wang WH, 2020, Arxiv, DOI arXiv:2003.03238
   Weimer W, 2009, PROC INT CONF SOFTW, P364, DOI 10.1109/ICSE.2009.5070536
   Wen M, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1, DOI 10.1145/3180155.3180233
   Wiseman S, 2016, Arxiv, DOI [arXiv:1606.02960, 10.48550/arXiv.1606.02960]
   Xin Q, 2017, IEEE INT CONF AUTOM, P660, DOI 10.1109/ASE.2017.8115676
   Xiong YF, 2017, PROC INT CONF SOFTW, P416, DOI 10.1109/ICSE.2017.45
   Xu SZ, 2019, INT C PROGRAM COMPRE, P335, DOI 10.1109/ICPC.2019.00052
   Yuan Y, 2020, ACM T SOFTW ENG METH, V29, DOI 10.1145/3360004
   Zalewski M., 2010, AM FUZZY LOP
   Zeller A, 2009, WHY PROGRAMS FAIL: A GUIDE TO SYSTEMATIC DEBUGGING, 2ND EDITION
   Zhang J, 2019, PROC INT CONF SOFTW, P783, DOI 10.1109/ICSE.2019.00086
NR 103
TC 10
Z9 11
U1 2
U2 10
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD FEB 1
PY 2023
VL 49
IS 2
BP 564
EP 585
DI 10.1109/TSE.2022.3156637
PG 22
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 9F0FH
UT WOS:000937151900006
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Elmezouar, M
   da Costa, DA
   German, DM
   Zou, Y
AF Elmezouar, Mariam
   da Costa, Daniel Alencar
   German, Daniel M.
   Zou, Ying
TI Exploring the Use of Chatrooms by Developers: An Empirical Study on
   Slack and Gitter
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Software; Software development management; Interviews; Tools;
   Productivity; History; Organizations; Chatroom; slack; gitter; software
   development teams; communication
ID SOFTWARE; COMMUNICATION
AB Communication is critical for the software development teams to maintain project awareness, facilitate project co-ordination and avoid misunderstandings. The features offered in the chatrooms, such as private messaging, group conversations, and code sharing help accommodate the communication needs of the software development teams. Therefore, chatrooms have been increasingly adopted among the developers. Since the last study on Slack performed by (Lin et al. 2016), the audience of Slack has more than doubled possibly leading to an evolution of the ways Slack is used; while another rich community formed around Gitter and remains unstudied. In this paper, we perform an investigative study using qualitative and quantitative techniques to gain insights on the use of popular modern chatrooms, specifically Slack and Gitter. Based on the survey responses from 163 developers, the interviews with 21 developers, and the chatroom data collected from 11 Slack and 770 Gitter rooms, we are able to uncover the reasons behind the use of Slack and Gitter, the perceived impact on the associated projects, and the quality determinants of the two chatrooms. We find that the developers seek knowledge from the chatrooms to obtain timely feedback from experts, and in return share their expertise to build the project community and their reputations. Furthermore, it is perceived by the Gitter developers that the chatrooms have an impact on prioritizing the new features and the bug fixes. In Slack, the most reported impact concerns an increased project awareness, in terms of a better tracking of the work progress. As reported on the developers' survey, both Slack and Gitter chat services have a visible impact on mentoring developers, and sharing the best practices. In terms of quality determinants, a non-ephemeral history and a better history management (e.g., advanced search) could be keys for both chat services to reach their full potential.
C1 [Elmezouar, Mariam] Queens Univ, Sch Comp, Kingston, ON K7L 3N6, Canada.
   [da Costa, Daniel Alencar] Univ Otago, Dept Informat Sci, Dunedin 9016, New Zealand.
   [German, Daniel M.] Univ Victoria, Dept Comp Sci, Victoria, BC V8P 5C2, Canada.
   [Zou, Ying] Queens Univ, Dept Elect & Comp Engn, Kingston, ON K7L 3N6, Canada.
C3 Queens University - Canada; University of Otago; University of Victoria;
   Queens University - Canada
RP Elmezouar, M (corresponding author), Queens Univ, Sch Comp, Kingston, ON K7L 3N6, Canada.
EM mariam@cs.queensu.ca; danielcalencar@otago.ac.nz; dmg@uvic.ca;
   ying.zou@queensu.ca
RI Zou, Ying/KLC-9380-2024
OI El Mezouar, Mariam/0000-0002-3317-7051
CR Alkadhi R, 2017, INT SYMP EMP SOFTWAR, P175, DOI 10.1109/ESEM.2017.26
   [Anonymous], Slack
   Braun V., 2006, QUAL RES PSYCHOL, V3, P77, DOI [DOI 10.1191/1478088706QP063OA, 10.1191/1478088706qp063oa]
   Brooks Frederick P., 1995, The mythical man-month
   Casalnuovo C, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P817, DOI 10.1145/2786805.2786854
   Chatterjee P, 2020, IEEE WORK CONF MIN S, P588, DOI 10.1145/3379597.3387493
   Chatterjee P, 2021, PROC INT CONF SOFTW, P1260, DOI 10.1109/ICSE43902.2021.00115
   Chatterjee Preetha, 2019, IEEE WORK CONF MIN S, P490, DOI [DOI 10.1109/MSR.2019.00075, 10.1109/MSR.2019.00075]
   Chowdhury SA, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P422, DOI 10.1109/MSR.2015.54
   Chui M., 2012, The social economy: Unlocking value and productivity through social technologies
   Collobert R, 2011, J MACH LEARN RES, V12, P2493
   Creswell J.W., 2012, ED RES PLANNING COND, DOI DOI 10.1017/CBO9781107415324.004
   CURTIS B, 1988, COMMUN ACM, V31, P1268, DOI 10.1145/50087.50089
   Ehsan O, 2021, ACM T SOFTW ENG METH, V30, DOI 10.1145/3412378
   Gall M. D., 2003, Educational Research: An Introduction
   gitter, GITTER EXPLORE
   Gutwin C., 2004, Computer Supported Cooperative Work Conference Proceedings, P72, DOI 10.1145/1031607.1031621
   Hahn J, 2008, INFORM SYST RES, V19, P369, DOI 10.1287/isre.1080.0192
   Handel M., 2002, P 2002 ACM C COMP SU, P1, DOI [10.1145/587078.587080, DOI 10.1145/587078.587080]
   Hassan AE, 2008, 2008 FRONTIERS OF SOFTWARE MAINTENANCE, P48, DOI 10.1109/FOSM.2008.4659248
   Herbsleb JD, 2003, IEEE T SOFTWARE ENG, V29, P481, DOI 10.1109/TSE.2003.1205177
   Ivankova N.V., 2007, First Steps in Research, V2nd, P253
   Lin B, 2016, PROCEEDINGS OF THE 19TH ACM CONFERENCE ON COMPUTER SUPPORTED COOPERATIVE WORK AND SOCIAL COMPUTING COMPANION, P333, DOI 10.1145/2818052.2869117
   Mamykina L, 2011, 29TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, P2857
   Manning CD, 2014, PROCEEDINGS OF 52ND ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS: SYSTEM DEMONSTRATIONS, P55, DOI 10.3115/v1/p14-5010
   O'Connor C, 2020, INT J QUAL METH, V19, DOI 10.1177/1609406919899220
   Parra E, 2020, IEEE WORK CONF MIN S, P563, DOI 10.1145/3379597.3387494
   Shihab E, 2009, PROC IEEE INT CONF S, P147, DOI 10.1109/ICSM.2009.5306333
   Singer L, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P211, DOI 10.1145/2568225.2568305
   Stieger S, 2007, J AM SOC INF SCI TEC, V58, P1653, DOI 10.1002/asi.20651
   Storey MA, 2017, IEEE T SOFTWARE ENG, V43, P185, DOI 10.1109/TSE.2016.2584053
   Storey Margaret-Anne, 2013, P 2013 C COMPUTER SU, P103
   Storey Margaret-Anne, 2014, FUT SOFTW ENG P, P100, DOI 10.1145/2593882.2593887
   Treude C, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P625, DOI 10.1145/2786805.2786827
   Vasilescu B, 2012, PROCEEDINGS OF THE 2012 ASE INTERNATIONAL CONFERENCE ON SOCIAL INFORMATICS (SOCIALINFORMATICS 2012), P332, DOI 10.1109/SocialInformatics.2012.81
   Wang SW, 2018, EMPIR SOFTW ENG, V23, P1552, DOI 10.1007/s10664-017-9558-5
   Wasko MM, 2000, J STRATEGIC INF SYST, V9, P155, DOI 10.1016/S0963-8687(00)00045-7
   Yin R. K., 2018, Case Study Research and Applications: Design and Methods, DOI DOI 10.1016/J.TECHFORE.2018.10.013
NR 38
TC 3
Z9 3
U1 0
U2 1
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD OCT 1
PY 2022
VL 48
IS 10
BP 3988
EP 4001
DI 10.1109/TSE.2021.3109617
PG 14
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 5L3GA
UT WOS:000870301800015
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Bagheri, M
   Sirjani, M
   Khamespanah, E
   Baier, C
   Movaghar, A
AF Bagheri, Maryam
   Sirjani, Marjan
   Khamespanah, Ehsan
   Baier, Christel
   Movaghar, Ali
TI Magnifier: A Compositional Analysis Approach for Autonomous Traffic
   Control
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Adaptation models; Control systems; Runtime; Tracking; Semantics;
   Iterative methods; Computer science; Self-adaptive systems;
   model@runtime; compositional verification; track-based traffic control
   systems; Ptolemy II
ID TIMED AUTOMATA; VERIFICATION; SYSTEMS; REBECA; MODEL
AB Autonomous traffic control systems are large-scale systems with critical goals. To satisfy expected properties, these systems adapt themselves to possible changes in their environment and in the system itself. The adaptation may result in further changes propagated throughout the system. For each change and its consequent adaptation, assuring the satisfaction of properties of the system at runtime is important. A prominent approach to assure the correct behavior of these systems is verification at runtime, which has strict time and memory limitations. To tackle these limitations, we propose Magnifier, an iterative, incremental, and compositional verification approach that operates on an actor-based model where actors are grouped in components, and components are augmented with a coordinator. The Magnifier idea is zooming on the area (component) affected by a change and verifying the correctness of properties of interest of the system after adapting the component to the change. Magnifier checks if the change is propagating, and if that is the case, then it zooms out to perform adaptation on a larger area to contain the change. The process is iterative and incremental, and considers areas affected by the change one by one. In Magnifier, we use the Coordinated Adaptive Actor model (CoodAA) for traffic control systems. We present a formal semantics for CoodAA as a network of Timed Input-Output Automata (TIOAs), and prove the correctness of our compositional reasoning. We implement our approach in Ptolemy II. The results of our experiments indicate that the proposed approach improves the verification time and the memory consumption compared to the non-compositional approach.
C1 [Bagheri, Maryam; Movaghar, Ali] Sharif Univ Technol, Dept Comp Engn, Tehran 1458889694, Iran.
   [Sirjani, Marjan] Malardalen Univ, Sch IDT, S-72220 Vasteras, Sweden.
   [Sirjani, Marjan; Khamespanah, Ehsan] Reykjavik Univ, Sch Comp Sci, IS-101 Reykjavik, Iceland.
   [Khamespanah, Ehsan] Univ Tehran, Sch Elect & Comp Engn, Tehran 131451384, Iran.
   [Baier, Christel] Tech Univ Dresden, Dept Comp Sci, D-01069 Dresden, Germany.
C3 Sharif University of Technology; Malardalen University; Reykjavik
   University; University of Tehran; Technische Universitat Dresden
RP Bagheri, M (corresponding author), Sharif Univ Technol, Dept Comp Engn, Tehran 1458889694, Iran.
EM mbagheri@ce.sharif.edu; marjan.sirjani@mdh.se; e.khamespanah@ut.ac.ir;
   Christel.Baier@tu-dresden.de; movaghar@sharif.edu
RI Movaghar, Ali/B-3980-2011
OI Movaghar, Ali/0000-0002-6803-6750; Baier, Christel/0000-0002-5321-9343;
   sirjani, marjan/0000-0001-5478-0987
FU Project Self-Adaptive Actors: SEADA, Icelandic Research Fund
   [163205-051]; KKS SACSys Synergy Project (Safe and Secure Adaptive
   Collaborative Systems); KKS DPAC Project (Dependable Platforms for
   Autonomous Systems and Control); SSF Serendipity Project at Malardalen
   University; MACMa Project (Modeling and Analyzing Event-based Autonomous
   Systems) at Software Center, Sweden
FX The authors would like to thank Professor Edward A. Lee for his valuable
   comments. This work was supported by the Project Self-Adaptive Actors:
   SEADA, Icelandic Research Fund, under Grant 163205-051. The work of
   Marjan Sirjani was supported in part by the KKS SACSys Synergy Project
   (Safe and Secure Adaptive Collaborative Systems), in part by the KKS
   DPAC Project (Dependable Platforms for Autonomous Systems and Control),
   in part by the SSF Serendipity Project at Malardalen University, and in
   part by the MACMa Project (Modeling and Analyzing Event-based Autonomous
   Systems) at Software Center, Sweden.
CR Agha G., 1986, Actors: a model of concurrent computation in distributed systems
   [Anonymous], 2016, N ATLANTIC OPERATION
   [Anonymous], 2014, SYSTEM DESIGN MODELI
   [Anonymous], 2011, SIGBED REV
   Bagheri Maryam, 2017, ACM SIGBED Review, V14, P38, DOI 10.1145/3166227.3166233
   Bagheri M, 2021, Arxiv, DOI arXiv:1905.06732
   Bagheri M, 2018, J SYST SOFTWARE, V143, P116, DOI 10.1016/j.jss.2018.05.034
   Bagheri M, 2017, LECT NOTES COMPUT SC, V10231, P241, DOI 10.1007/978-3-319-57666-4_15
   Bauer SS, 2011, ELECTRON PROC THEOR, P1, DOI 10.4204/EPTCS.46.1
   Behrmann G., 2005, Performance Evaluation Review, V32, P34, DOI 10.1145/1059816.1059823
   Behrmann Gerd, 2006, A tutorial on Uppaal 4.0
   Bensalem S, 2014, PROC CEUR WORKSHOP P, P5
   Bensalem S, 2008, LECT NOTES COMPUT SC, V5311, P64, DOI 10.1007/978-3-540-88387-6_7
   Blom HAP, 2006, IEEE DECIS CONTR P, P1576
   Borda A, 2018, 2018 IEEE/ACM 13TH INTERNATIONAL SYMPOSIUM ON SOFTWARE ENGINEERING FOR ADAPTIVE AND SELF-MANAGING SYSTEMS (SEAMS), P1, DOI 10.1145/3194133.3194146
   BUJTOR F, 2018, THESIS
   Chawade S. D., 2012, INT J COMPUT APPL, V43, P20
   Chen LJ, 2011, COMPUT STAND INTER, V33, P505, DOI 10.1016/j.csi.2011.02.006
   Cheng Betty H. C., 2014, Models@run.time. Foundations, Applications, and Roadmaps. LNCS: 8378, P101
   Cheng BHC, 2009, LECT NOTES COMPUT SC, V5525, P1, DOI 10.1007/978-3-642-02161-9_1
   Cheng RJ, 2016, RELIAB ENG SYST SAFE, V145, P169, DOI 10.1016/j.ress.2015.09.014
   CLARKE EM, 1989, FOURTH ANNUAL SYMPOSIUM ON LOGIC IN COMPUTER SCIENCE, P353
   Damm W, 2007, LECT NOTES COMPUT SC, V4700, P115
   David Alexandre, 2012, International Journal on Software Tools for Technology Transfer, V14, P703, DOI 10.1007/s10009-012-0237-y
   David A, 2010, HSSC 10: PROCEEDINGS OF THE 13TH ACM INTERNATIONAL CONFERENCE ON HYBRID SYSTEMS: COMPUTATION AND CONTROL, P91
   De Alfaro L, 2002, LECT NOTES COMPUT SC, V2491, P108
   de Alfaro L, 2007, LECT NOTES COMPUT SC, V4590, P325
   Desai A, 2017, ACM IEEE INT CONF CY, P239, DOI 10.1145/3055004.3055022
   FILIERI A, 2013, ASSURANCES SELF ADAP, V7740, P30, DOI DOI 10.1007/978-3-642-36249-1
   Forejt V., 2012, LNCS, V7687, P314, DOI DOI 10.1007/978-3-642-35632-2_
   Ghezzi C., 2012, 2012 7th International Symposium on Software Engineering for Adaptive and Self-Managing Systems, P145, DOI 10.1109/SEAMS.2012.6224401
   Ghezzi C., 2013, DEALING NONFUNCTIONA, P191
   Giese Holger, 2013, Lecture Notes in Computer Science, V7740, P152, DOI [10.1007/978-3-642-36249-1_6, DOI 10.1007/978-3-642-36249-1_6]
   HEWITT C, 1972, THESIS MIT CAMBRIDGE
   Inverardi P, 2009, 2009 ICSE WORKSHOP ON SOFTWARE ENGINEERING FOR ADAPTIVE AND SELF-MANAGING SYSTEMS, P106, DOI 10.1109/SEAMS.2009.5069079
   Kaynar DK, 2003, RTSS 2003: 24TH IEEE INTERNATIONAL REAL-TIME SYSTEMS SYMPOSIUM, PROCEEDINGS, P166, DOI 10.1109/REAL.2003.1253264
   Kephart JO, 2003, COMPUTER, V36, P41, DOI 10.1109/MC.2003.1160055
   Khakpour Narges, 2019, Fundamentals of Software Engineering. 8th International Conference, FSEN 2019. Revised Selected Papers. Lecture Notes in Computer Science (LNCS 11761), P3, DOI 10.1007/978-3-030-31517-7_1
   Khakpour N, 2012, J SYST SOFTWARE, V85, P2770, DOI 10.1016/j.jss.2012.03.007
   Khamespanah E, 2015, SCI COMPUT PROGRAM, V98, P184, DOI 10.1016/j.scico.2014.07.005
   Krupitzer C, 2015, PERVASIVE MOB COMPUT, V17, P184, DOI 10.1016/j.pmcj.2014.09.009
   Lee Edward A., 2018, Formal Aspects of Component Software. 15th International Conference (FACS 2018). Proceedings: Lecture Notes in Computer Science (LNCS 11222), P3, DOI 10.1007/978-3-030-02146-7_1
   Lee E, 2018, INFORM SOFTWARE TECH, V93, P200, DOI 10.1016/j.infsof.2017.09.008
   Loos S. M., 2013, P 16 INT C HYBR SYST, P125, DOI DOI 10.1145/2461328.2461350
   Margellos K, 2013, IEEE T CONTR SYST T, V21, P1820, DOI 10.1109/TCST.2012.2220773
   Menon PK, 2004, J GUID CONTROL DYNAM, V27, P737, DOI 10.2514/1.2556
   Monteiro Barbosa Davi, 2017, 2017 IEEE/ACM 12th International Symposium on Software Engineering for Adaptive and Self-Managing Systems (SEAMS). Proceedings, P24, DOI 10.1109/SEAMS.2017.18
   Moreno GA, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P1, DOI 10.1145/2786805.2786853
   Priesterjahn Claudia, 2013, TIMED HAZARD ANAL SE, P112, DOI DOI 10.1007/978-3-642-36249-1_5
   Quottrup MM, 2004, IEEE INT CONF ROBOT, P4417, DOI 10.1109/ROBOT.2004.1302413
   Rasmussen JI, 2006, FORM METHOD SYST DES, V29, P97, DOI 10.1007/s10703-006-0014-1
   Sirjani M, 2004, FUND INFORM, V63, P385
   Sirjani Marjan, 2016, Theory and Practice of Formal Methods. Essays Dedicated to Frank de Boer on the Occasion of His 60th Birthday. LNCS 9660, P373, DOI 10.1007/978-3-319-30734-3_25
   Sirjani M, 2007, LECT NOTES COMPUT SC, V4709, P102
   Sirjani M, 2006, LECT NOTES COMPUT SC, V4038, P281
   Sirjani M, 2019, IEEE ACM DIS SIM, P170, DOI 10.1109/ds-rt47707.2019.8958682
   Tripakis S., 1999, Formal Methods for Real-Time and Probabilistic Systems. 5th International AMAST Workshop, ARTS'99. Proceedings, P299
   Zbrzezny A, 2007, FUND INFORM, V79, P579
   Zhao Y, 2014, SCI COMPUT PROGRAM, V96, P337, DOI 10.1016/j.scico.2014.04.002
   Zhou YC, 2016, 2016 EUROPEAN CONTROL CONFERENCE (ECC), P690, DOI 10.1109/ECC.2016.7810369
NR 60
TC 1
Z9 1
U1 0
U2 4
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD AUG 1
PY 2022
VL 48
IS 8
BP 2732
EP 2747
DI 10.1109/TSE.2021.3069192
PG 16
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 4D1BG
UT WOS:000846878500003
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Beheshtian, MJ
   Bavand, AH
   Rigby, PC
AF Beheshtian, Mohammad Javad
   Bavand, Amir Hossein
   Rigby, Peter C.
TI Software Batch Testing to Save Build Test Resources and to Reduce
   Feedback Time
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Software testing; batch testing; continuous integration and deployment;
   bisection; pool testing; reducing testing cost; risk modelling
ID BUG; PRIORITIZATION; METRICS
AB Testing is expensive and batching tests has the potential to reduce test costs. The continuous integration strategy of testing each commit or change individually helps to quickly identify faults but leads to a maximal number of test executions. Large companies that have a massive number of commits, e.g., Google and Facebook, or have expensive test infrastructure, e.g., Ericsson, must batch changes together to reduce the number of total test runs. For example, if eight builds are batched together and there is no failure, then we have tested eight builds with one execution saving seven executions. However, when a failure occurs it is not immediately clear which build is the cause of the failure. A bisection is run to isolate the failing build, i.e., the culprit build. In our eight builds example, a failure will require an additional 6 executions, resulting in a saving of one execution. In this work, we re-evaluate batching approaches developed in industry on large open source projects using Travis CI. We also introduce novel batching approaches. In total, we evaluate six approaches. The first is the baseline approach that tests each build individually. The second, is the existing bisection approach. The third uses a batch size of four, which we show mathematically reduces the number of execution without requiring bisection. The fourth combines the two prior techniques introducing a stopping condition to the bisection. The final two approaches use models of build change risk to isolate risky changes and test them in smaller batches. We find that compared to the TestAll baseline, on average, the approaches reduce the number of build test executions across projects by 46, 48, 50, 44, and 49 percent for BatchBisect, Batch4, BatchStop4, RiskTopN, and RiskBatch, respectively. The greatest reduction in executions is BatchStop4 at 50 percent. However, the simple approach of Batch4 does not require bisection and achieves a reduction of 48 percent. In a larger sample of projects, we find that a project's failure rate is strongly correlated with execution savings (Spearman r = -0.97 with a p << 0.001). Using Batch4, 85 percent of projects see savings. All projects that have build failures less than 40 percent of the time will benefit from batching. In terms of feedback time, compared to TestAll, we find that BatchBisect, Batch2, Batch4, BatchStop4 all reduce the average feedback time by 33, 16, 32, and 37 percent. Simple batching saves not only resources but also reduces feedback time without introducing any slip-throughs and without changing the test run order. We suggest that most projects should adjust their CI pipelines to use a batch size of at least two. We release our scripts and data for replication(1) as well as the BatchBuilder tool(2) that automatically batches submitted changes on GitHub for testing on Travis CI. Since the tool reports individual results for each pull-request or pushed commit, the batching happens in the background and the development process is unchanged.
C1 [Beheshtian, Mohammad Javad; Bavand, Amir Hossein; Rigby, Peter C.] Concordia Univ, Dept Comp Sci & Software Engn, Montreal, PQ H3G 1M8, Canada.
C3 Concordia University - Canada
RP Rigby, PC (corresponding author), Concordia Univ, Dept Comp Sci & Software Engn, Montreal, PQ H3G 1M8, Canada.
EM s_ehesht@encs.concordia.ca; a_bavand@encs.concordia.ca;
   peter.rigby@concordia.ca
OI Rigby, Peter/0000-0003-1137-4297; Beheshtian, Mohammad
   Javad/0000-0002-4589-8374
FU  [NSERC CRDPJ 502012-16]
FX This work was supported by Grant number: NSERC CRDPJ 502012-16.
CR Alexeevich B. A., 2019, Patent App., Patent No. [16/206,311, 16206311]
   [Anonymous], 2007, CONTINUOUS INTEGRATI
   [Anonymous], 2020, TRAVIS CI QUEUE DASH
   [Anonymous], 2015, git-bisect Manual Page
   Aragón-Caqueo D, 2020, J MED VIROL, V92, P1988, DOI 10.1002/jmv.25929
   Aversano L., 2007, IWPSE 07 9 INT WORKS, P19
   Beheshtian M. J., 2020, BATCHBUILDER GITHUB
   Beheshtian M. J., 2021, REPLICATION PACKAGE
   Beller M, 2017, IEEE WORK CONF MIN S, P356, DOI 10.1109/MSR.2017.62
   Beller M, 2017, IEEE WORK CONF MIN S, P447, DOI 10.1109/MSR.2017.24
   Chen TY, 1996, INFORM PROCESS LETT, V60, P135, DOI 10.1016/S0020-0190(96)00135-4
   Chen X, 2017, P INT COMP SOFTW APP, P54, DOI 10.1109/COMPSAC.2017.65
   Chen Yanping., 2002, P 2002 C CTR ADV STU, P1
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   Cho Chihyun, 2017, P 2017 INT C CLOUD B, P55, DOI DOI 10.1145/3141128.3141145
   Crispin L., 2009, AGILE TESTING PRACTI
   Cruz R, 2018, R CRUZ
   da Costa DA, 2017, IEEE T SOFTWARE ENG, V43, P641, DOI 10.1109/TSE.2016.2616306
   Dorfman R, 1943, ANN MATH STAT, V14, P436, DOI 10.1214/aoms/1177731363
   Durieux T, 2019, PROC IEEE INT CONF S, P291, DOI 10.1109/ICSME.2019.00044
   Elbaum S, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P235, DOI 10.1145/2635868.2635910
   Engler D, 2004, LECT NOTES COMPUT SC, V2937, P191
   Gajpal Y., 2020, OPTIMAL MULTISTAGE G
   Hall T, 2012, IEEE T SOFTWARE ENG, V38, P1276, DOI 10.1109/TSE.2011.103
   Hao D, 2014, ACM T SOFTW ENG METH, V24, DOI 10.1145/2685614
   Harman M, 2018, IEEE INT WORK C SO, P1, DOI 10.1109/SCAM.2018.00009
   Herzig K, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P483, DOI 10.1109/ICSE.2015.66
   Hilton M, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P1066, DOI 10.1145/2950290.2983952
   Jeffrey D, 2006, P INT COMP SOFTW APP, P411
   Jonsson L, 2016, EMPIR SOFTW ENG, V21, P1533, DOI 10.1007/s10664-015-9401-9
   Just R., 2012, Proceedings of the 2012 IEEE 23rd International Symposium on Software Reliability Engineering (ISSRE), P11, DOI 10.1109/ISSRE.2012.31
   Kamei Y, 2013, IEEE T SOFTWARE ENG, V39, P757, DOI 10.1109/TSE.2012.70
   Kaur A., 2011, International Journal on Computer Science and Engineering, V3, P1839
   Kim JM, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P119, DOI 10.1109/ICSE.2002.1007961
   Kim S, 2008, IEEE T SOFTWARE ENG, V34, P181, DOI 10.1109/TSE.2007.70773
   Kim S, 2006, IEEE INT CONF AUTOM, P81
   Konsaard P, 2015, 2015 12TH INTERNATIONAL CONFERENCE ON ELECTRICAL ENGINEERING/ELECTRONICS, COMPUTER, TELECOMMUNICATIONS AND INFORMATION TECHNOLOGY (ECTI-CON)
   Kumar M, 2015, SOFTWARE PRACT EXPER, V45, P949, DOI 10.1002/spe.2263
   Laali M, 2016, LECT NOTES COMPUT SC, V9695, P78, DOI 10.1007/978-3-319-39083-3_6
   Lam W, 2019, IEEE INT CONF SOFTW, P312, DOI 10.1109/ICST.2019.00038
   Leppanen Marko, 2015, IEEE Software, V32, P64, DOI 10.1109/MS.2015.50
   Li J., 2019, SUCCESSFULLY MERGING
   Marré M, 2003, IEEE T SOFTWARE ENG, V29, P974, DOI 10.1109/TSE.2003.1245299
   Memon A, 2017, 2017 IEEE/ACM 39TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2017), P233, DOI 10.1109/ICSE-SEIP.2017.16
   Najafi A, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P279, DOI 10.1145/3338906.3338944
   Najafi A, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE (ICSE-SEIP 2019), P213, DOI 10.1109/ICSE-SEIP.2019.00031
   Nam J, 2018, IEEE T SOFTWARE ENG, V44, P874, DOI 10.1109/TSE.2017.2720603
   Nguyen C, 2014, TEST PRIORITIZATION
   Niu WN, 2020, MEASUREMENT, V152, DOI 10.1016/j.measurement.2019.107139
   Noor T.B., 2017, P 13 INT C PREDICTIV, P2
   Pandey SK, 2020, EXPERT SYST APPL, V144, DOI 10.1016/j.eswa.2019.113085
   Poth A, 2018, COMM COM INF SC, V896, P401, DOI 10.1007/978-3-319-97925-0_33
   Qu X., 2008, P 2008 INT S SOFTW T, P75
   Radjenovic D, 2013, INFORM SOFTWARE TECH, V55, P1397, DOI 10.1016/j.infsof.2013.02.009
   ROTHERMEL G, 1994, PROC INT CONF SOFTW, P201, DOI 10.1109/ICSE.1994.296779
   Sarkar A, 2019, PROC IEEE INT CONF S, P81, DOI 10.1109/ICSME.2019.00018
   Shepperd M, 2014, IEEE T SOFTWARE ENG, V40, P603, DOI 10.1109/TSE.2014.2322358
   Sherriff M, 2007, ISSRE 2007: 18TH IEEE INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P81, DOI 10.1109/ISSRE.2007.25
   Soni M, 2016, IEEE CONF CLOUD COMP, P85, DOI 10.1109/CCEM.2015.29
   TAHA AB, 1989, PROCEEDINGS : THE THIRTEENTH ANNUAL INTERNATIONAL COMPUTER SOFTWARE & APPLICATIONS CONFERENCE, P527, DOI 10.1109/CMPSAC.1989.65142
   Tallam Sriraman., 2005, PASTE 05, P35, DOI [10.1145/1108768.1108802, DOI 10.1145/1108768.1108802]
   Viehweger A., 2020, MEDRXIV
   Wang S, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P523, DOI 10.1145/3106237.3106258
   Wu XD, 2008, KNOWL INF SYST, V14, P1, DOI 10.1007/s10115-007-0114-2
   Xi SQ, 2019, J COMPUT SCI TECH-CH, V34, P942, DOI 10.1007/s11390-019-1953-5
   Yang XL, 2015, 2015 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE SECURITY AND RELIABILITY (QRS 2015), P17, DOI 10.1109/QRS.2015.14
   Yoo S, 2012, SOFTW TEST VERIF REL, V22, P67, DOI [10.1002/stv.430, 10.1002/stvr.430]
   Broder AZ, 2020, Arxiv, DOI arXiv:2004.01684
   Zhu YC, 2018, PROC IEEE INT CONF S, P69, DOI 10.1109/ICSME.2018.00016
   Ziftci C, 2017, 2017 IEEE/ACM 39TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2017), P113, DOI 10.1109/ICSE-SEIP.2017.13
NR 70
TC 4
Z9 4
U1 1
U2 5
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD AUG 1
PY 2022
VL 48
IS 8
BP 2784
EP 2801
DI 10.1109/TSE.2021.3070269
PG 18
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 4D1BG
UT WOS:000846878500006
DA 2024-07-18
ER

PT J
AU Dalla Palma, S
   Di Nucci, D
   Palomba, F
   Tamburri, DA
AF Dalla Palma, Stefano
   Di Nucci, Dario
   Palomba, Fabio
   Tamburri, Damian A.
TI Within-Project Defect Prediction of Infrastructure-as-Code Using Product
   and Process Metrics
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Measurement; Software; Predictive models; Machine learning; Radon; Cloud
   computing; Task analysis; Infrastructure-as-code; defect prediction;
   empirical software engineering
AB Infrastructure-as-code (IaC) is the DevOps practice enabling management and provisioning of infrastructure through the definition of machine-readable files, hereinafter referred to as IaC scripts. Similarly to other source code artefacts, these files may contain defects that can preclude their correct functioning. In this paper, we aim at assessing the role of product and process metrics when predicting defective IaC scripts. We propose a fully integrated machine-learning framework for IaC Defect Prediction, that allows for repository crawling, metrics collection, model building, and evaluation. To evaluate it, we analyzed 104 projects and employed five machine-learning classifiers to compare their performance in flagging suspicious defective IaC scripts. The key results of the study report Random Forest as the best-performing model, with a median AUC-PR of 0.93 and MCC of 0.80. Furthermore, at least for the collected projects, product metrics identify defective IaC scripts more accurately than process metrics. Our findings put a baseline for investigating IaC Defect Prediction and the relationship between the product and process metrics, and IaC scripts' quality.
C1 [Dalla Palma, Stefano; Di Nucci, Dario] Tilburg Univ, Jheronimous Acad Data Sci, NL-5037 AB Tilburg, Netherlands.
   [Palomba, Fabio] Univ Salerno, Software Engn SeSa Lab, I-84084 Fisciano, Italy.
   [Tamburri, Damian A.] Eindhoven Univ Technol, Jheronimous Acad Data Sci, NL-5612 AZ Eindhoven, Netherlands.
C3 Tilburg University; University of Salerno; Eindhoven University of
   Technology
RP Dalla Palma, S (corresponding author), Tilburg Univ, Jheronimous Acad Data Sci, NL-5037 AB Tilburg, Netherlands.
EM s.dallapalma@uvt.nl; d.dinucci@uvt.nl; fpalomba@unisa.it;
   d.a.tamburri@tue.nl
RI Tamburri, Damian Andrew/AAJ-2507-2021; Di Nucci, Dario/Y-9679-2019
OI Tamburri, Damian Andrew/0000-0003-1230-8961; Di Nucci,
   Dario/0000-0002-3861-1902; Dalla Palma, Stefano/0000-0002-5611-0546;
   Palomba, Fabio/0000-0001-9337-5116
FU European Commission [825040, 825480]; Swiss National Science Foundation
   [PZ00P2 186090]
FX The work of Stefano Dalla Palma, Dario Di Nucci, and Damian A. Tamburri
   was supported by the European Commission under Grant 825040 (RADON
   H2020) and Grant 825480 (SODALITE H2020). The work of Fabio Palomba was
   supported in part by the Swiss National Science Foundation through the
   SNF Project No. PZ00P2 186090 (TED).
CR Arisholm E, 2010, J SYST SOFTWARE, V83, P2, DOI 10.1016/j.jss.2009.06.055
   Ayyappan G., 2020, International Journal of Mathematics in Operational Research, V16, P291
   Bass L., 2015, DevOps:_A_software_architect's_perspective
   Batista G. E., 2004, ACM SIGKDD EXPL NEWS, V6, P20, DOI DOI 10.1145/1007730.1007735
   Bowes D, 2018, SOFTWARE QUAL J, V26, P525, DOI 10.1007/s11219-016-9353-3
   Boyd Kendrick, 2013, Machine Learning and Knowledge Discovery in Databases. European Conference, ECML PKDD 2013. Proceedings: LNCS 8190, P451, DOI 10.1007/978-3-642-40994-3_29
   Casale G, 2020, SICS SOFTWARE, V35, P77, DOI 10.1007/s00450-019-00413-w
   Chaisiri S., 2011, Proceedings of the 2011 IEEE 19th International Symposium on Modelling, Analysis & Simulation of Computer and Telecommunication Systems (MASCOTS 2011), P85, DOI 10.1109/MASCOTS.2011.30
   Chambers John M, 2018, GRAPHICAL METHODS DA, DOI [10.1201/9781351072304-4, DOI 10.1201/9781351072304-4]
   Cochran W.G., 1977, SAMPLING TECHNIQUES
   COHEN J, 1960, EDUC PSYCHOL MEAS, V20, P37, DOI 10.1177/001316446002000104
   Cohen J., 1988, STAT POWER ANAL BEHA, V2nd, P284
   Dalla Palma S, 2020, SOFTWAREX, V12, DOI 10.1016/j.softx.2020.100633
   Dalla Palma S, 2020, J SYST SOFTWARE, V170, DOI 10.1016/j.jss.2020.110726
   Di Nucci D, 2018, IEEE T SOFTWARE ENG, V44, P5, DOI 10.1109/TSE.2017.2659747
   Eskew EA, 2020, LANCET PLANET HEALTH, V4, pE215, DOI 10.1016/S2542-5196(20)30123-6
   Falessi D, 2020, EMPIR SOFTW ENG, V25, P4805, DOI 10.1007/s10664-020-09868-x
   Fu W, 2016, INFORM SOFTWARE TECH, V76, P135, DOI 10.1016/j.infsof.2016.04.017
   Goadrich M, 2006, MACH LEARN, V64, P231, DOI 10.1007/s10994-006-8958-3
   Guerriero M, 2019, PROC IEEE INT CONF S, P580, DOI 10.1109/ICSME.2019.00092
   Hall T, 2012, IEEE T SOFTWARE ENG, V38, P1276, DOI 10.1109/TSE.2011.103
   Hosseini S., 2019, IEEE T SOFTWARE ENG, V45, P111, DOI [10.1109/TSE.2017.2770124, DOI 10.1109/TSE.2017.2770124]
   IEEE, 2010, IEEE Standard 1044-2009 (Revision of IEEE Standard 1044-1993)
   Jiang YJ, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P45, DOI 10.1109/MSR.2015.12
   Kalliamvakou E., 2014, P 11 WORKING C MININ, P92, DOI DOI 10.1145/2597073.2597074
   Kim S, 2006, IEEE INT CONF AUTOM, P81
   Lemaître G, 2017, J MACH LEARN RES, V18
   Lipton P., IEEE CLOUD COMPUT, DOI [10.1109/MCC.2018.111121612, DOI 10.1109/MCC.2018.111121612]
   MATTHEWS BW, 1975, BIOCHIM BIOPHYS ACTA, V405, P442, DOI 10.1016/0005-2795(75)90109-9
   Morris K., 2016, Infrastructure as Code: Managing Servers in the Cloud
   Moser R, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P181, DOI 10.1145/1368088.1368114
   Munaiah N, 2017, EMPIR SOFTW ENG, V22, P3219, DOI 10.1007/s10664-017-9512-6
   Nam Jaechang., 2014, SURVEY SOFTWARE DEFE
   Neter J., 1996, APPL LINEAR STAT MOD, V81, P1126
   Paramshetti Pooja, 2014, Int. J. Sci. Res., V3, P1394
   Pedregosa F, 2011, J MACH LEARN RES, V12, P2825
   Rahman A, 2020, EMPIR SOFTW ENG, V25, P3430, DOI 10.1007/s10664-020-09841-8
   Rahman A, 2019, PROC INT CONF SOFTW, P164, DOI 10.1109/ICSE.2019.00033
   Rahman A, 2019, INFORM SOFTWARE TECH, V112, P148, DOI 10.1016/j.infsof.2019.04.013
   Rahman A, 2019, INFORM SOFTWARE TECH, V108, P65, DOI 10.1016/j.infsof.2018.12.004
   Rahman A, 2018, PROCEEDINGS 2018 IEEE/ACM 4TH INTERNATIONAL WORKSHOP ON RAPID CONTINUOUS SOFTWARE ENGINEERING (RCOSE), P16, DOI 10.1145/3194760.3194769
   Rahman A, 2018, IEEE INT CONF SOFTW, P34, DOI 10.1109/ICST.2018.00014
   Rahman F, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P432, DOI 10.1109/ICSE.2013.6606589
   Rahman Foyzur, 2013, P 2013 9 JOINT M FDN, P147
   Rutkowski M., 2020, OASIS TOPOLOGY ANDOR
   Sharma T, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P189, DOI [10.1109/MSR.2016.028, 10.1145/2901739.2901761]
   Spadini D, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P908, DOI 10.1145/3236024.3264598
   Tantithamthavorn C, 2016, PROC INT CONF SOFTW, P321, DOI 10.1145/2884781.2884857
   van der Bent E, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P164, DOI 10.1109/SANER.2018.8330206
   Weisstein Eric W., 2004, Bonferroni correction
   Wilcoxon Frank, 1992, BREAKTHROUGHS STAT, P196, DOI [DOI 10.1007/978-1-4612-4380-9_16, 10.1007/978-1-4612-4380-9_16, DOI 10.1007/978-1-4612-4380-9]
   Zhang F., 2014, P 11 WORK C MIN SOFT, P182, DOI [10.1145/2597073.2597078, DOI 10.1145/2597073.2597078]
NR 52
TC 24
Z9 25
U1 3
U2 13
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUN 1
PY 2022
VL 48
IS 6
BP 2086
EP 2104
DI 10.1109/TSE.2021.3051492
PG 19
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 2D5IM
UT WOS:000811580600016
OA hybrid, Green Published
DA 2024-07-18
ER

PT J
AU Masood, Z
   Hoda, R
   Blincoe, K
AF Masood, Zainab
   Hoda, Rashina
   Blincoe, Kelly
TI Real World Scrum A Grounded Theory of Variations in Practice
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Scrum (Software development); Lead; Software; Project management;
   Interviews; Electric breakdown; Estimation; Scrum; agile; scrum by the
   book; scrum In practice; variations; grounded theory
AB Scrum, the most popular agile method and project management framework, is widely reported to be used, adapted, misused, and abused in practice. However, not much is known about how Scrum actually works in practice, and critically, where, when, how and why it diverges from Scrum by the book. Through a Grounded Theory study involving semi-structured interviews of 45 participants from 30 companies and observations of five teams, we present our findings on how Scrum works in practice as compared to how it is presented in its formative books. We identify significant variations in these practices such as work breakdown, estimation, prioritization, assignment, the associated roles and artefacts, and discuss the underlying rationales driving the variations. Critically, we claim that not all variations are process misuse/abuse and propose a nuanced classification approach to understanding variations as standard, necessary, contextual, and clear deviations for successful Scrum use and adaptation.
C1 [Masood, Zainab; Blincoe, Kelly] Univ Auckland, Dept Elect Comp & Software Engn, Auckland 1010, New Zealand.
   [Hoda, Rashina] Monash Univ, Fac Informat Technol, Melbourne, Vic 3800, Australia.
C3 University of Auckland; Monash University
RP Masood, Z (corresponding author), Univ Auckland, Dept Elect Comp & Software Engn, Auckland 1010, New Zealand.
EM zmas690@aucklanduni.ac.nz; rashina.hoda@monash.edu;
   k.blincoe@auckland.ac.nz
OI Blincoe, Kelly/0000-0003-4092-9706; Hoda, Rashina/0000-0001-5147-8096;
   Masood, Zainab/0000-0002-3592-8250
CR [Anonymous], 2017, The scrum guide: the definitive guide to scrum
   [Anonymous], 1998, Distributed Computing, P24
   Bass JM, 2014, INT CONF GLOBAL SOFT, P6, DOI 10.1109/ICGSE.2014.24
   Beck K, 1999, COMPUTER, V32, P70, DOI 10.1109/2.796139
   Beck K., 2000, EXTREME PROGRAMMING
   Callanan M., 2019, KEN SCHWABER SCRUM
   Campanelli AS, 2015, J SYST SOFTWARE, V110, P85, DOI 10.1016/j.jss.2015.08.035
   Conboy K, 2010, ACM T SOFTW ENG METH, V20, DOI 10.1145/1767751.1767753
   Corbin J., 2008, QUAL RES, DOI DOI 10.4135/9781452230153.N10
   Deemer P., 2012, SCRUM PRIMER LIGHTWE
   Diebold P, 2015, LECT NOTES BUS INF P, V212, P40, DOI 10.1007/978-3-319-18612-2_4
   Dybå T, 2008, INFORM SOFTWARE TECH, V50, P833, DOI 10.1016/j.infsof.2008.01.006
   Eloranta VP, 2016, INFORM SOFTWARE TECH, V74, P194, DOI 10.1016/j.infsof.2015.12.003
   Fitzgerald B, 1998, INFORM MANAGE-AMSTER, V34, P317, DOI 10.1016/S0378-7206(98)00072-X
   Fowler F. M, 2019, NAVIGATING HYBRID SC, P55
   Fowler M., 2001, Software Development, V9, P28
   Glaser B. G., 1978, [No title captured]
   Glaser B. G., 1967, DISCOVERY GROUNDED T, DOI 10.1515/9783111660211/html
   Hoda R, 2018, IEEE SOFTWARE, V35, P58, DOI 10.1109/MS.2018.290111318
   Hoda R, 2017, PROC INT CONF SOFTW, P141, DOI 10.1109/ICSE.2017.21
   Kruchten Philippe, 2004, IBM DEVELOPERWORKS, V13
   Kurapati N, 2012, LECT NOTES BUS INF P, V111, P16
   Lárusdóttir M, 2016, HUMAN COMPU, P225, DOI 10.1007/978-3-319-32165-3_10
   Lous P, 2018, PROCEEDINGS OF THE 2018 INTERNATIONAL CONFERENCE ON SOFTWARE AND SYSTEM PROCESS (ICSSP 2018), P11, DOI 10.1145/3202710.3203149
   Marshall S., 2010, ACM SIGPLAN NOTICES, P74, DOI DOI 10.1145/1932682.1869467
   Martin D, 2007, PROC INT CONF SOFTW, P602
   Mi P., 1991, Proceedings. First International Conference on the Software Process. Manufacturing Complex Systems (Cat. No.91TH0418-4), P188
   PARNAS DL, 1986, IEEE T SOFTWARE ENG, V12, P251, DOI 10.1109/TSE.1986.6312940
   Paulk M.C., 2013, Software Quality Professional, V15, P27
   Schwaber K., 2007, The enterprise and Scrum
   Sedano T, 2019, PROC INT CONF SOFTW, P200, DOI 10.1109/ICSE.2019.00036
   Sedano T, 2017, PROC INT CONF SOFTW, P130, DOI 10.1109/ICSE.2017.20
   Shastri Y, 2017, PROCEEDINGS OF THE 10TH INNOVATIONS IN SOFTWARE ENGINEERING CONFERENCE, P45, DOI 10.1145/3021460.3021465
   Shastri Y, 2016, ASIA PAC SOFWR ENG, P57, DOI [10.1109/APSEC.2016.019, 10.1109/APSEC.2016.28]
   Stol KJ, 2016, PROC INT CONF SOFTW, P120, DOI 10.1145/2884781.2884833
   Strauss A.L., 1990, BASICS QUALITATIVE R
   Stray V, 2016, J SYST SOFTWARE, V114, P101, DOI 10.1016/j.jss.2016.01.004
   Sutherland J., 2010, SCRUMBUTT TEST AKA N
   Sverrisdottir HS, 2014, PROCD SOC BEHV, V119, P257, DOI 10.1016/j.sbspro.2014.03.030
   Usman M., 2014, PROMISE '14: Proceedings of the 10th International Conference on Predictive Models in Software Engineering, page, P82
   VersionOne, 13 ANN STATE AGILE S
   VersonOne, 2007, 1 ANN STATE AGILE SU
   Waterman M, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P347, DOI 10.1109/ICSE.2015.54
   Wells D., 1999, Extreme Programming
NR 44
TC 19
Z9 20
U1 14
U2 47
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAY 1
PY 2022
VL 48
IS 5
BP 1579
EP 1591
DI 10.1109/TSE.2020.3025317
PG 13
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 1I8CJ
UT WOS:000797454000008
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Yu, Z
   Fahid, FM
   Tu, H
   Menzies, T
AF Yu, Zhe
   Fahid, Fahmid Morshed
   Tu, Huy
   Menzies, Tim
TI Identifying Self-Admitted Technical Debts With Jitterbug: A Two-Step
   Approach
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Software; Machine learning; Pattern recognition; Training; Computer
   hacking; Machine learning algorithms; Estimation; Technical debt;
   software engineering; machine learning; pattern recognition
ID IDENTIFICATION
AB Keeping track of and managing Self-Admitted Technical Debts (SATDs) are important to maintaining a healthy software project. This requires much time and effort from human experts to identify the SATDs manually. The current automated solutions do not have satisfactory precision and recall in identifying SATDs to fully automate the process. To solve the above problems, we propose a two-step framework called Jitterbug for identifying SATDs. Jitterbug first identifies the "easy to find" SATDs automatically with close to 100 percent precision using a novel pattern recognition technique. Subsequently, machine learning techniques are applied to assist human experts in manually identifying the remaining "hard to find" SATDs with reduced human effort. Our simulation studies on ten software projects show that Jitterbug can identify SATDs more efficiently (with less human effort) than the prior state-of-the-art methods.
C1 [Yu, Zhe] Rochester Inst Technol, Dept Software Engn, Rochester, NY 14623 USA.
   [Fahid, Fahmid Morshed; Tu, Huy; Menzies, Tim] North Carolina State Univ, Dept Comp Sci, Raleigh, NC 27695 USA.
C3 Rochester Institute of Technology; North Carolina State University
RP Yu, Z (corresponding author), Rochester Inst Technol, Dept Software Engn, Rochester, NY 14623 USA.
EM zxyvse@rit.edu; ffahid@ncsu.edu; hqtu@ncsu.edu; timm@ieee.org
RI Tu, Huy/IAP-4457-2023; Fahid, Fahmid Morshed/HZL-8953-2023; Menzies,
   Tim/X-7680-2019
OI Tu, Huy/0000-0002-7843-252X; Fahid, Fahmid Morshed/0000-0002-4802-3979;
   Menzies, Tim/0000-0002-5040-3196; Yu, Zhe/0000-0002-6841-1725
FU National Science Foundation [1703487]; Division of Computing and
   Communication Foundations; Direct For Computer & Info Scie & Enginr
   [1703487] Funding Source: National Science Foundation
FX This research was partially funded by a National Science Foundation
   Grant #1703487. The authors would like to thank Maldonado and Shihab for
   making their SATD data available to the public, which makes this
   research possible.
CR Ali K, 2012, LECT NOTES COMPUT SC, V7313, P688, DOI 10.1007/978-3-642-31057-7_30
   Alves Nicolli S. R., 2014, 2014 Sixth International Workshop on Managing Technical Debt. Proceedings, P1, DOI 10.1109/MTD.2014.9
   Bavota G, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P315, DOI [10.1109/MSR.2016.040, 10.1145/2901739.2901742]
   COHEN J, 1968, PSYCHOL BULL, V70, P213, DOI 10.1037/h0026256
   Cunningham W., 1993, OOPS Messenger, V4, P29
   Farias MAD, 2020, INFORM SOFTWARE TECH, V121, DOI 10.1016/j.infsof.2020.106270
   Farias MAD, 2017, LECT NOTES BUS INF P, V291, P284, DOI 10.1007/978-3-319-62386-3_14
   Farias MAD, 2015, 2015 IEEE 7TH INTERNATIONAL WORKSHOP ON MANAGING TECHNICAL DEBT (MTD) PROCEEDINGS, P25, DOI 10.1109/MTD.2015.7332621
   Feldt R, 2010, 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING & KNOWLEDGE ENGINEERING (SEKE 2010), P374
   Flisar J, 2019, IEEE ACCESS, V7, P106475, DOI 10.1109/ACCESS.2019.2933318
   Flisar J, 2018, EUROMICRO CONF PROC, P230, DOI 10.1109/SEAA.2018.00045
   Fluri B, 2007, 14TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P70, DOI 10.1109/WCRE.2007.21
   Fokaefs M, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1037, DOI 10.1145/1985793.1985989
   Fontana F. A., 2012, Proceedings 2012 Third International Workshop on Managing Technical Debt (MTD 2012), P15, DOI 10.1109/MTD.2012.6225993
   Graf J, 2010, IEEE INT WORK C SO, P105, DOI 10.1109/SCAM.2010.9
   Grimm LG., 1995, READING UNDERSTANDIN
   Guo Z., 2019, ARXIV191013238
   Huang Q, 2018, EMPIR SOFTW ENG, V23, P418, DOI 10.1007/s10664-017-9522-4
   Khamis N, 2010, LECT NOTES COMPUT SC, V6177, P68, DOI 10.1007/978-3-642-13881-2_7
   Kruchten P, 2012, IEEE SOFTWARE, V29, P18, DOI 10.1109/MS.2012.167
   Lim E, 2012, IEEE SOFTWARE, V29, P22, DOI 10.1109/MS.2012.130
   Lin Tan, 2007, Operating Systems Review, V41, P145, DOI 10.1145/1323293.1294276
   Liu ZX, 2018, PROC IEEE ACM INT C, P9, DOI 10.1145/3183440.3183478
   Maldonado ED, 2017, PROC IEEE INT CONF S, P238, DOI 10.1109/ICSME.2017.8
   Maldonado ED, 2015, 2015 IEEE 7TH INTERNATIONAL WORKSHOP ON MANAGING TECHNICAL DEBT (MTD) PROCEEDINGS, P9, DOI 10.1109/MTD.2015.7332619
   Maldonado ED, 2017, IEEE T SOFTWARE ENG, V43, P1044, DOI 10.1109/TSE.2017.2654244
   Malik H, 2008, PROC IEEE INT CONF S, P167, DOI 10.1109/ICSM.2008.4658065
   Marinescu R, 2004, PROC IEEE INT CONF S, P350, DOI 10.1109/ICSM.2004.1357820
   Marinescu R, 2012, IBM J RES DEV, V56, DOI 10.1147/JRD.2012.2204512
   Marinescu R, 2010, EUR CON SFTWR MTNCE, P274, DOI 10.1109/CSMR.2010.44
   Martini A, 2015, 2015 12TH WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE (WICSA), P1, DOI 10.1109/WICSA.2015.31
   Nugroho A, 2011, P 2 WORKSH MAN TECHN, P1
   Potdar A, 2014, PROC IEEE INT CONF S, P91, DOI 10.1109/ICSME.2014.31
   Ren XX, 2019, ACM T SOFTW ENG METH, V28, DOI 10.1145/3324916
   Rish I., 2001, IJCAI 2001 WORKSH EM, P41
   Rokach Lior, 2014, Data mining with decision trees: theory and applications, V2, DOI 10.1142/9097
   Rothermel G, 2001, IEEE T SOFTWARE ENG, V27, P929, DOI 10.1109/32.962562
   Shin Hwei Tan, 2012, 2012 IEEE Fifth International Conference on Software Testing, Verification and Validation (ICST 2012), P260, DOI 10.1109/ICST.2012.106
   Sierra G, 2019, J SYST SOFTWARE, V152, P70, DOI 10.1016/j.jss.2019.02.056
   Siva C., 2018, MACHINE LEARNING PAT
   Steidl D, 2013, CONF PROC INT SYMP C, P83, DOI 10.1109/ICPC.2013.6613836
   Suykens JAK, 1999, NEURAL PROCESS LETT, V9, P293, DOI 10.1023/A:1018628609742
   Tin Kam Ho, 1995, Proceedings of the Third International Conference on Document Analysis and Recognition, P278, DOI 10.1109/ICDAR.1995.598994
   Tsantalis N, 2015, IEEE T SOFTWARE ENG, V41, P1055, DOI 10.1109/TSE.2015.2448531
   Tsantalis N, 2011, J SYST SOFTWARE, V84, P1757, DOI 10.1016/j.jss.2011.05.016
   Wattanakriengkrai S, 2019, ASIA PAC SOFWR ENG, P316, DOI 10.1109/APSEC48747.2019.00050
   Wehaibi S, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P179, DOI 10.1109/SANER.2016.72
   Yan M, 2019, IEEE T SOFTWARE ENG, V45, P1211, DOI 10.1109/TSE.2018.2831232
   Yu Z, 2019, EXPERT SYST APPL, V120, P57, DOI 10.1016/j.eswa.2018.11.021
   Yuepu Guo, 2011, 2011 IEEE 27th International Conference on Software Maintenance, P528, DOI 10.1109/ICSM.2011.6080824
   Zampetti F, 2020, PROCEEDINGS OF THE 2020 IEEE 27TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER '20), P355, DOI [10.1109/SANER48275.2020.9054868, 10.1109/saner48275.2020.9054868]
   Zazworka N., 2013, Proceedings of the 17th International Conference on Evaluation and Assessment in Software Engineering, DOI DOI 10.1145/2460999.2461005.ASSOCIATIONFORCOMPUTINGMACHINERY
NR 52
TC 16
Z9 16
U1 0
U2 3
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAY 1
PY 2022
VL 48
IS 5
BP 1676
EP 1691
DI 10.1109/TSE.2020.3031401
PG 16
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 1I8CJ
UT WOS:000797454000014
OA Bronze, Green Submitted
DA 2024-07-18
ER

PT J
AU Pinto, P
   Bispo, J
   Cardoso, J
   Barbosa, JG
   Gadioli, D
   Palermo, G
   Martinovic, J
   Golasowski, M
   Slaninova, K
   Cmar, R
   Silvano, C
AF Pinto, Pedro
   Bispo, Joao
   Cardoso, Joao
   Barbosa, Jorge Gomes
   Gadioli, Davide
   Palermo, Gianluca
   Martinovic, Jan
   Golasowski, Martin
   Slaninova, Katerina
   Cmar, Radim
   Silvano, Cristina
TI Pegasus: Performance Engineering for Software Applications Targeting HPC
   Systems
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Task analysis; Software; Tools; Runtime; Tuning; Power demand;
   Libraries; Performance engineering; methodology; high-performance
   computing; domain-specific languages; source-to-source compilers
ID LANGUAGE
AB Developing and optimizing software applications for high performance and energy efficiency is a very challenging task, even when considering a single target machine. For instance, optimizing for multicore-based computing systems requires in-depth knowledge about programming languages, application programming interfaces (APIs), compilers, performance tuning tools, and computer architecture and organization. Many of the tasks of performance engineering methodologies require manual efforts and the use of different tools not always part of an integrated toolchain. This paper presents Pegasus, a performance engineering approach supported by a framework that consists of a source-to-source compiler, controlled and guided by strategies programmed in a Domain-Specific Language, and an autotuner. Pegasus is a holistic and versatile approach spanning various decision layers composing the software stack, and exploiting the system capabilities and workloads effectively through the use of runtime autotuning. The Pegasus approach helps developers by automating tasks regarding the efficient implementation of software applications in multicore computing systems. These tasks focus on application analysis, profiling, code transformations, and the integration of runtime autotuning. Pegasus allows developers to program their strategies or to automatically apply existing strategies to software applications in order to ensure the compliance of non-functional requirements, such as performance and energy efficiency. We show how to apply Pegasus and demonstrate its applicability and effectiveness in a complex case study, which includes tasks from a smart navigation system.
C1 [Pinto, Pedro; Bispo, Joao; Cardoso, Joao; Barbosa, Jorge Gomes] Univ Porto, Dept Informat Engn, Fac Engn, P-4099002 Porto, Portugal.
   [Gadioli, Davide; Palermo, Gianluca; Silvano, Cristina] Politecn Milan, Dipartimento Elettron Informaz & Bioingn, I-20133 Milan, Italy.
   [Martinovic, Jan; Golasowski, Martin; Slaninova, Katerina] Tech Univ Ostrava, VSB, IT4Innovat, Ostrava 70800, Czech Republic.
   [Cmar, Radim] Sygic, Bratislava 82109, Slovakia.
C3 Universidade do Porto; Polytechnic University of Milan; Technical
   University of Ostrava
RP Pinto, P (corresponding author), Univ Porto, Dept Informat Engn, Fac Engn, P-4099002 Porto, Portugal.
EM p.pinto@fe.up.pt; jbispo@fe.up.pt; jmpc@fe.up.pt; jbarbosa@fe.up.pt;
   davide.gadioli@polimi.it; gianluca.palermo@polimi.it;
   jan.martinovic@vsb.cz; martin.golasowski@vsb.cz;
   katerina.slaninova@vsb.cz; rcmar@sygic.com; cristina.silvano@polimi.it
RI Silvano, Cristina/H-1550-2012; Barbosa, Jorge/A-1267-2014; Bispo,
   João/C-6682-2008; Cardoso, Joao MP/C-5552-2008; PALERMO,
   GIANLUCA/U-5867-2019; Martinovic, Jan/G-3846-2019
OI Barbosa, Jorge/0000-0003-4135-2347; Bispo, João/0000-0002-3017-9449;
   Cardoso, Joao MP/0000-0002-7353-1799; PALERMO,
   GIANLUCA/0000-0001-7955-8012; GADIOLI, DAVIDE/0000-0002-0143-0737;
   Pinto, Pedro/0000-0002-3673-9494; Slaninova,
   Katerina/0000-0002-2520-7054; Martinovic, Jan/0000-0001-7944-8956
FU ANTAREX project through the EU [671623]; Fundacao para a Ciencia e a
   Tecnologia, Portugal [SFRH/BD/141783/2018, SFRH/BPD/118211/2016];
   Fundação para a Ciência e a Tecnologia [SFRH/BPD/118211/2016,
   SFRH/BD/141783/2018] Funding Source: FCT
FX This work was partially funded by the ANTAREX project through the EU
   H2020 FET-HPC program under grant no. 671623. Pedro Pinto and Joao Bispo
   acknowledge the support provided by Fundacao para a Ciencia e a
   Tecnologia, Portugal under Ph.D. grant SFRH/BD/141783/2018 and Post-Doc
   grant SFRH/BPD/118211/2016, respectively.
CR Abraham I., 2013, J EXP ALGORITHMICS, V18
   Ansel J, 2014, INT CONFER PARA, P303, DOI 10.1145/2628071.2628092
   Arabnejad H, 2020, J SUPERCOMPUT, V76, P6753, DOI 10.1007/s11227-019-03109-9
   Arabnejad H, 2018, IEEE INT SYMP PARAL, P915, DOI 10.1109/BDCloud.2018.00135
   ARNOLD RS, 1989, P IEEE, V77, P607, DOI 10.1109/5.24146
   Balaprakash P, 2018, P IEEE, V106, P2068, DOI 10.1109/JPROC.2018.2841200
   Balaprakash P, 2014, LECT NOTES COMPUT SC, V8551, P239, DOI 10.1007/978-3-319-10214-6_12
   Bauer M., 2011, Proceedings of International Conference for High Performance Computing, Networking, Storage and Analysis, P12, DOI 10.1145/2063384.2063400
   Bravenboer M, 2008, SCI COMPUT PROGRAM, V72, P52, DOI 10.1016/j.scico.2007.11.003
   Burgisser P., 2013, Algebraic complexity theory
   Cardoso J.M. P., 2012, Proceedings of the 11th Annual International Conference on Aspect-oriented Software Development, AOSD '12, P179
   Cardoso JMP, 2017, EMBEDDED COMPUTING FOR HIGH PERFORMANCE: EFFICIENT MAPPING OF COMPUTATIONS USING CUSTOMIZATION, CODE TRANSFORMATIONS AND COMPILATION, P17, DOI 10.1016/B978-0-12-804189-5.00002-8
   Cardoso JMP, 2016, SOFTWARE PRACT EXPER, V46, P251, DOI 10.1002/spe.2301
   Cardoso JMP, 2013, MICROPROCESS MICROSY, V37, P1073, DOI 10.1016/j.micpro.2013.06.001
   Chandra R., 2001, PARALLEL PROGRAMMING, DOI DOI 10.5555/355074
   Chondrogiannis T., 2015, P 23 SIGSPATIAL INT, P1
   Christen M., 2011, Proceedings of the 25th IEEE International Parallel & Distributed Processing Symposium (IPDPS 2011), P676, DOI 10.1109/IPDPS.2011.70
   Dave C, 2009, COMPUTER, V42, P36, DOI 10.1109/MC.2009.385
   David Howard, 2010, Proceedings of the 16th ACM/IEEE International Symposium on Low Power Electronics and Design (ISLPED 2010), P189, DOI 10.1145/1840845.1840883
   Dig D, 2011, IEEE SOFTWARE, V28, P17, DOI 10.1109/MS.2011.1
   Dubey A, 2014, J OPEN RES STW, V2, P1
   Gadioli D, 2019, IEEE T COMPUT, V68, P713, DOI 10.1109/TC.2018.2883597
   Gadioli D, 2018, DES AUT TEST EUROPE, P1143, DOI 10.23919/DATE.2018.8342183
   Golasowski M, 2020, ADV INTELL SYST COMP, V1036, P235, DOI 10.1007/978-3-030-29029-0_22
   Golasowski M, 2016, LECT NOTES COMPUT SC, V9842, P377, DOI 10.1007/978-3-319-45378-1_34
   Golub G.H., 1989, MATRIX COMPUTATIONS
   Graham S. L., 1982, SIGPLAN Notices, V17, P120, DOI 10.1145/872726.806987
   Griswold W. G., 1993, ACM Transactions on Software Engineering and Methodology, V2, P228, DOI 10.1145/152388.152389
   Hanzelka Jiri, 2019, Data Management, Analytics and Innovation. Proceedings of ICDMAI 2018. Advances in Intelligent Systems and Computing (AISC 808), P61, DOI 10.1007/978-981-13-1402-5_5
   Hanzelka J, 2018, LECT NOTES COMPUT SC, V11127, P279, DOI 10.1007/978-3-319-99954-8_24
   Hartono A, 2009, INT PARALL DISTRIB P, P246
   Keryell R., 1996, PIPS WORKBENCH BUILD
   Kiczales G, 1997, LECT NOTES COMPUT SC, V1241, P220, DOI 10.1007/BFb0053381
   Kiczales G., 2001, ECOOP 2001 - Object-Oriented Programming. 15th European Conference. Proceedings (Lecture Notes in Computer Science Vol.2072), P327
   Klint P, 2009, IEEE INT WORK C SO, P168, DOI 10.1109/SCAM.2009.28
   Knüpfer A, 2008, TOOLS FOR HIGH PERFORMANCE COMPUTING, P139, DOI 10.1007/978-3-540-68564-7_9
   Li MQ, 2019, ACM COMPUT SURV, V52, DOI 10.1145/3300148
   Liu H, 2013, IEEE T SOFTWARE ENG, V39, P1112, DOI 10.1109/TSE.2013.4
   McLaughlin A, 2018, COMMUN ACM, V61, P85, DOI 10.1145/3230485
   Mens T, 2004, IEEE T SOFTWARE ENG, V30, P126, DOI 10.1109/TSE.2004.1265817
   MICHIE D, 1968, NATURE, V218, P19, DOI 10.1038/218019a0
   Morales R, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P59, DOI 10.1145/3180155.3182524
   Murphy-Hill E, 2012, IEEE T SOFTWARE ENG, V38, P5, DOI 10.1109/TSE.2011.41
   Nethercote N, 2007, ACM SIGPLAN NOTICES, V42, P89, DOI 10.1145/1273442.1250746
   Oger G, 2016, COMPUT PHYS COMMUN, V200, P1, DOI 10.1016/j.cpc.2015.08.021
   Pinto P, 2018, COMPUT LANG SYST STR, V53, P1, DOI 10.1016/j.cl.2017.12.003
   Quinlan D., 2000, Parallel Processing Letters, V10, P215, DOI 10.1016/S0129-6264(00)00021-4
   Rabenseifner R., 2003, P 5 EUROPEAN WORKSHO, V3, P185
   Rudy G, 2011, LECT NOTES COMPUT SC, V6548, P136, DOI 10.1007/978-3-642-19595-2_10
   Silvano C, 2019, MICROPROCESS MICROSY, V68, P58, DOI 10.1016/j.micpro.2019.05.005
   Silvano C, 2019, EUROMICRO WORKSHOP P, P116, DOI 10.1109/EMPDP.2019.8671584
   Silvano C, 2016, PROCEEDINGS OF THE ACM INTERNATIONAL CONFERENCE ON COMPUTING FRONTIERS (CF'16), P288, DOI 10.1145/2903150.2903470
   Spinczyk O., 2002, CR PIT 02 P 40 INT C, P53
   Teixeira TSFX, 2019, INT SYM CODE GENER, P217, DOI [10.1109/cgo.2019.8661203, 10.1109/CGO.2019.8661203]
   Tempero E, 2017, COMMUN ACM, V60, P54, DOI 10.1145/3131873
   Tian X, 2010, ACM T RECONFIG TECHN, V3, DOI 10.1145/1862648.1862656
   Ventroux N., 2012, Proceedings of the 2012 Workshop on Rapid Simulation and Performance Evaluation: Methods and Tools, P9
   Vitali E, 2021, IEEE T EMERG TOP COM, V9, P1006, DOI 10.1109/TETC.2019.2919801
   WOLFE M, 1989, PROCEEDINGS : SUPERCOMPUTING 89, P655, DOI 10.1145/76263.76337
   Wolfe M.J., 1995, High Performance Compilers for Parallel Computing
   Yuan D, 2011, ACM SIGPLAN NOTICES, V46, P3, DOI 10.1145/1961296.1950369
NR 61
TC 0
Z9 1
U1 0
U2 8
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAR 1
PY 2022
VL 48
IS 3
BP 732
EP 754
DI 10.1109/TSE.2020.3001257
PG 23
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA ZU6ZO
UT WOS:000769989900001
OA Green Published, Green Submitted
DA 2024-07-18
ER

PT J
AU Chen, JC
   Xia, X
   Lo, D
   Grundy, J
   Luo, XP
   Chen, T
AF Chen, Jiachi
   Xia, Xin
   Lo, David
   Grundy, John
   Luo, Xiapu
   Chen, Ting
TI Defining Smart Contract Defects on Ethereum
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Empirical study; smart contracts; ethereum; contract defects
AB Smart contracts are programs running on a blockchain. They are immutable to change, and hence can not be patched for bugs once deployed. Thus it is critical to ensure they are bug-free and well-designed before deployment. A Contract defect is an error, flaw or fault in a smart contract that causes it to produce an incorrect or unexpected result, or to behave in unintended ways. The detection of contract defects is a method to avoid potential bugs and improve the design of existing code. Since smart contracts contain numerous distinctive features, such as the gas system. decentralized, it is important to find smart contract specified defects. To fill this gap, we collected smart-contract-related posts from Ethereum StackExchange, as well as real-world smart contracts. We manually analyzed these posts and contracts; using them to define 20 kinds of contract defects. We categorized them into indicating potential security, availability, performance, maintainability and reusability problems. To validate if practitioners consider these contract as harmful, we created an online survey and received 138 responses from 32 different countries. Feedback showed these contract defects are harmful and removing them would improve the quality and robustness of smart contracts. We manually identified our defined contract defects in 587 real world smart contract and publicly released our dataset. Finally, we summarized 5 impacts caused by contract defects. These help developers better understand the symptoms of the defects and removal priority.
C1 [Chen, Jiachi; Xia, Xin; Grundy, John] Monash Univ, Fac Informat Technol, Melbourne, Vic 3800, Australia.
   [Lo, David] Singapore Management Univ, Sch Informat Syst, Singapore 188065, Singapore.
   [Luo, Xiapu] Hong Kong Polytech Univ, Dept Comp, Hong Kong 999077, Peoples R China.
   [Chen, Ting] Univ Elect Sci & Technol China, Sch Comp Sci & Engn, Chengdu 610054, Peoples R China.
C3 Monash University; Singapore Management University; Hong Kong
   Polytechnic University; University of Electronic Science & Technology of
   China
RP Xia, X (corresponding author), Monash Univ, Fac Informat Technol, Melbourne, Vic 3800, Australia.
EM Jiachi.Chen@monash.edu; Xin.Xia@monash.edu; davidlo@smu.edu.sg;
   John.Grundy@monash.edu; c.s.xluo@comp.polyu.edu.hk;
   brokendragon@uestc.edu.cn
RI Chen, Jiachi/HOC-4256-2023; Grundy, John/I-6681-2012; Lo,
   David/A-2493-2012
OI Chen, Jiachi/0000-0002-0192-9992; Xia, Xin/0000-0002-6302-3256; Grundy,
   John/0000-0003-4928-7076; Lo, David/0000-0002-4367-7201
FU Australian Research Council's Discovery Early Career Researcher Award
   (DECRA) [DE200100021]; ARC Discovery Project scheme [DP170101932]; ARC
   Laureate Fellowship [FL190100035]; Hong Kong RGC Project [152193/19E];
   National Natural Science Foundation of China [61872057]; National Key
   R&D Program of China [2018YFB0804100]
FX This research was partially supported by the Australian Research
   Council's Discovery Early Career Researcher Award (DECRA) funding scheme
   (DE200100021), ARC Discovery Project scheme (DP170101932), ARC Laureate
   Fellowship (FL190100035), Hong Kong RGC Project (No. 152193/19E),
   National Natural Science Foundation of China (61872057), and National
   Key R&D Program of China (2018YFB0804100).
CR [Anonymous], 2018, ERC20
   [Anonymous], 2019, RELEASES SOLIDITY
   [Anonymous], 2018, SOLIDITY CONTRACT OR
   [Anonymous], HDB SOFTWARE RELIABI
   [Anonymous], 2018, ETHEREUM CLASSIC
   [Anonymous], 2018, COLL CRYPTOCURRENCY
   [Anonymous], 2018, SOLIDITY DOCUMENT
   [Anonymous], 2019, BLOCKCHAIN HARD FORK
   [Anonymous], 2018, UNDERSTANDING DAO AT
   [Anonymous], 2018, ANAL TOOL SMART CONT
   [Anonymous], 2019, ETHEREUM INTRO
   [Anonymous], 2020, SOFTWARE DEFECTS
   [Anonymous], 2016, EIP 55
   [Anonymous], 2019, ETHERSCAN VERIFIED C
   Atzei Nicola, 2016, IACR Cryptology ePrint Archive, V2016, P1007
   Bojanowski P., 2017, Transactions of the Association for Computational Linguistics, V5, P135, DOI DOI 10.1162/TACLA00051
   Chen T, 2018, IEEE INFOCOM SER, P1484, DOI 10.1109/INFOCOM.2018.8486401
   COHEN J, 1960, EDUC PSYCHOL MEAS, V20, P37, DOI 10.1177/001316446002000104
   Devanbu P, 2016, PROC INT CONF SOFTW, P108, DOI 10.1145/2884781.2884812
   E. Foundation, 2014, ETH WHIT PAP
   Ethereum foundation, 2018, BLOCK VAL ALG
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   Gao ZP, 2019, PROC IEEE INT CONF S, P394, DOI 10.1109/ICSME.2019.00067
   Jiang B, 2018, IEEE INT CONF AUTOM, P259, DOI 10.1145/3238147.3238177
   Kalra S, 2018, 25TH ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2018), DOI 10.14722/ndss.2018.23082
   Khomh F, 2009, WORK CONF REVERSE EN, P75, DOI 10.1109/WCRE.2009.28
   Kitchenham BA, 2008, Guide to advanced empirical software engineering, P63, DOI [DOI 10.1007/978-1-84800-044-5_3, 10.1007/ 978-1-84800-044-5_3]
   Luu L, 2016, CCS'16: PROCEEDINGS OF THE 2016 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P254, DOI 10.1145/2976749.2978309
   Nakamoto S., 2008, DECENTRAL BUS REV
   Nikolic I, 2018, 34TH ANNUAL COMPUTER SECURITY APPLICATIONS CONFERENCE (ACSAC 2018), P653, DOI 10.1145/3274694.3274743
   Spencer D., 2009, CARD SORTING DESIGNI
   Tapscott D., 2018, Blockchain Revolution: how the technology behind bitcoin is changing money, business, and the world
   Tyagi Pradeep K., 1989, Journal of the Academy of Marketing Science, V17, P235
   van Emden E, 2002, NINTH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P97, DOI 10.1109/WCRE.2002.1173068
   Wood G., 2014, Ethereum project yellow paper, V151, P1
NR 35
TC 66
Z9 70
U1 6
U2 28
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JAN 1
PY 2022
VL 48
IS 1
BP 327
EP 345
DI 10.1109/TSE.2020.2989002
PG 19
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA YG0HJ
UT WOS:000742179000019
OA Green Accepted, Green Submitted
DA 2024-07-18
ER

PT J
AU Escobar-Velásquez, C
   Linares-Vásquez, M
   Bavota, G
   Tufano, M
   Moran, K
   Di Penta, M
   Vendome, C
   Bernal-Cárdenas, C
   Poshyvanyk, D
AF Escobar-Velasquez, Camilo
   Linares-Vasquez, Mario
   Bavota, Gabriele
   Tufano, Michele
   Moran, Kevin
   Di Penta, Massimiliano
   Vendome, Christopher
   Bernal-Cardenas, Carlos
   Poshyvanyk, Denys
TI Enabling Mutant Generation for Open- and Closed-Source Android Apps
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Mutation testing; fault taxonomy; mutation operators; android
ID MUTATION; TOOL
AB Mutation testing has been widely used to assess the fault-detection effectiveness of a test suite, as well as to guide test case generation or prioritization. Empirical studies have shown that, while mutants are generally representative of real faults, an effective application of mutation testing requires "traditional" operators designed for programming languages to be augmented with operators specific to an application domain and/or technology. The case for Android apps is not an exception. Therefore, in this paper we describe the process we followed to create (i) a taxonomy of mutation operations and, (ii) two tools, MDroid+ and MutAPK for mutant generation of Android apps. To this end, we systematically devise a taxonomy of 262 types of Android faults grouped in 14 categories by manually analyzing 2,023 software artifacts from different sources (e.g., bug reports, commits). Then, we identified a set of 38 mutation operators, and implemented them in two tools, the first enabling mutant generation at the source code level, and the second designed to perform mutations at APK level. The rationale for having a dual-approach is based on the fact that source code is not always available when conducting mutation testing. Thus, mutation testing for APKs enables new scenarios in which researchers/practitioners only have access to APK files. The taxonomy, proposed operators, and tools have been evaluated in terms of the number of non-compilable, trivial, equivalent, and duplicate mutants generated and their capacity to represent real faults in Android apps as compared to other well-known mutation tools.
C1 [Escobar-Velasquez, Camilo; Linares-Vasquez, Mario] Univ Los Andes, Dept Syst & Comp Engn, Bogota 111711, Colombia.
   [Tufano, Michele] Microsoft, Redmond, WA USA.
   [Moran, Kevin; Bernal-Cardenas, Carlos; Poshyvanyk, Denys] Coll William & Mary, Dept Comp Sci, Williamsburg, VA USA.
   [Di Penta, Massimiliano] Univ Sannio, Dept Engn, I-82100 Benevento, Italy.
   [Vendome, Christopher] Miami Univ, Dept Comp Sci & Software Engn, Oxford, OH 45056 USA.
C3 Universidad de los Andes (Colombia); Microsoft; William & Mary;
   University of Sannio; University System of Ohio; Miami University
RP Linares-Vásquez, M (corresponding author), Univ Los Andes, Dept Syst & Comp Engn, Bogota 111711, Colombia.
EM ca.escobar2434@uniandes.edu.co; m.linaresv@uniandes.edu.co;
   gabriele.bavota@usi.ch; michele.tufano@microsoft.com; kpmoran@cs.wm.edu;
   dipenta@unisannio.ft; vendomcg@miamioh.edu; cebernal@cs.wm.edu;
   denys@cs.wm.edu
RI Escobar-Velásquez, Camilo/JVD-5595-2023
OI Escobar-Velásquez, Camilo/0000-0001-8414-9301; Bernal-Cardenas,
   Carlos/0000-0002-6209-5346; BAVOTA, Gabriele/0000-0002-2216-3148; Di
   Penta, Massimiliano/0000-0002-0340-9747; Poshyvanyk,
   Denys/0000-0002-5626-7586; Linares-Vasquez, Mario/0000-0003-0161-2888
FU Google Latin American Research Award [20182020]; NSF [CCF-1815186,
   CNS-1815336]; Swiss National Science Foundation [175513]
FX Escobar-Vel~asquez and Linares-Vasquez are partially supported by a
   Google Latin American Research Award 20182020. This work was also
   partially supported by the NSF CCF-1815186 and CNS-1815336 grants.
   Bavota acknowledges the financial support of the Swiss National Science
   Foundation for the project CCQR (SNF Project No. 175513). Any opinions,
   findings, and conclusions expressed herein are the authors and do not
   necessarily reflect those of the sponsors.
CR Adamopoulos K, 2004, LECT NOTES COMPUT SC, V3103, P1338
   Amalfitano D, 2015, IEEE SOFTWARE, V32, P53, DOI 10.1109/MS.2014.55
   Amalfitano D, 2012, IEEE INT CONF AUTOM, P258, DOI 10.1145/2351676.2351717
   Andrews JH, 2006, IEEE T SOFTWARE ENG, V32, P608, DOI 10.1109/TSE.2006.83
   Andrews JH, 2005, PROC INT CONF SOFTW, P402, DOI 10.1145/1062455.1062530
   [Anonymous], 2015, P 2015 INT S SOFTWAR, P83
   [Anonymous], 2019, ANDROID MUTATION WEB
   [Anonymous], 2017, PERFECTO
   [Anonymous], 2019, APKTOOL
   [Anonymous], 2017, ONLINE APPENDIX REPL
   [Anonymous], 2017, Google play
   Appelt Dennis, 2014, P 2014 INT S SOFTWAR, P259
   Apple, 2017, APP STOR
   Beyer S, 2014, PROC IEEE INT CONF S, P531, DOI 10.1109/ICSME.2014.88
   Chen N, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P767, DOI 10.1145/2568225.2568263
   Chen N, 2015, WSDM'15: PROCEEDINGS OF THE EIGHTH ACM INTERNATIONAL CONFERENCE ON WEB SEARCH AND DATA MINING, P305, DOI 10.1145/2684822.2685305
   Choudhary SR, 2015, IEEE INT CONF AUTOM, P429, DOI 10.1109/ASE.2015.89
   Coelho R, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P134, DOI 10.1109/MSR.2015.20
   Coles Henry, 2017, MUTATION TESTING SYS
   Daran M., 1996, SIGSOFT Software Engineering Notes, V21, P158, DOI [10.1145/229000.226313, 10.1145/226295.226313]
   DEMILLO RA, 1978, COMPUTER, V11, P34, DOI 10.1109/C-M.1978.218136
   Deng L, 2015, IEEE INT CONF MOB, P19, DOI 10.1109/MASS.2015.25
   Deng L, 2017, INFORM SOFTWARE TECH, V81, P154, DOI 10.1016/j.infsof.2016.04.012
   Derezinska A, 2014, ANAL MUTATION OPERAT
   Di Nardo D, 2015, IEEE ICST WORKSHOP
   Favre-Bulle P, 2019, APK SIGNER
   Fischer M, 2003, PROC IEEE INT CONF S, P23, DOI 10.1109/ICSM.2003.1235403
   Ghanbari A, 2019, PROCEEDINGS OF THE 28TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA '19), P19, DOI 10.1145/3293882.3330559
   Gomez L, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P72, DOI 10.1109/ICSE.2013.6606553
   Gopinath R, 2017, SOFTWARE QUAL J, V25, P871, DOI 10.1007/s11219-016-9317-7
   Gopinath R, 2016, PROC INT CONF SOFTW, P511, DOI 10.1145/2884781.2884787
   Gopinath R, 2016, IEEE ICST WORKSHOP, P132, DOI 10.1109/ICSTW.2016.45
   HAMLET RG, 1977, IEEE T SOFTWARE ENG, V3, P279, DOI 10.1109/TSE.1977.231145
   Hao S, 2014, MOBISYS'14: PROCEEDINGS OF THE 12TH ANNUAL INTERNATIONAL CONFERENCE ON MOBILE SYSTEMS, APPLICATIONS, AND SERVICES, P204, DOI 10.1145/2594368.2594390
   Henry Coles, 2017, PIT
   HOLM S, 1979, SCAND J STAT, V6, P65
   Hu YJ, 2015, ACM SIGPLAN NOTICES, V50, P349, DOI [10.1145/2858965.2814320, 10.1145/2814270.2814320]
   Huberman A.M., 2013, Qualitative data analysis: A methods sourcebook, V3rd
   Iacob C, 2013, IEEE WORK CONF MIN S, P41, DOI 10.1109/MSR.2013.6624001
   Jabbarvand R, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P208, DOI 10.1145/3106237.3106244
   Jia Y, 2011, IEEE T SOFTWARE ENG, V37, P649, DOI 10.1109/TSE.2010.62
   Joorabchi Mona Erfani, 2013, 2013 ACM / IEEE International Symposium on Empirical Software Engineering and Measurement (ESEM), P15, DOI 10.1109/ESEM.2013.9
   Just R., 2012, 2012 IEEE Fifth International Conference on Software Testing, Verification and Validation (ICST 2012), P720, DOI 10.1109/ICST.2012.162
   Just R., 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P612, DOI 10.1109/ASE.2011.6100138
   Just R., 2014, INT S SOFTWARE TESTI, P315, DOI [DOI 10.1145/2610384.2610388, 10.1145/2610384.2610388]
   Just R., 2014, P 2014 INT S SOFTW T, P433
   Just R, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P654, DOI 10.1145/2635868.2635929
   Khalid H, 2015, IEEE SOFTWARE, V32, P70, DOI 10.1109/MS.2014.50
   Kim SW, 2001, SOFTW TEST VERIF REL, V11, P207, DOI 10.1002/stvr.238
   Kintis M, 2018, IEEE T SOFTWARE ENG, V44, P308, DOI 10.1109/TSE.2017.2684805
   Li L, 2017, INFORM SOFTWARE TECH, V88, P67, DOI 10.1016/j.infsof.2017.04.001
   Liang CJM, 2014, PROCEEDINGS OF THE 20TH ANNUAL INTERNATIONAL CONFERENCE ON MOBILE COMPUTING AND NETWORKING (MOBICOM '14), P519, DOI 10.1145/2639108.2639131
   Lin Y, 2015, IEEE INT CONF AUTOM, P224, DOI 10.1109/ASE.2015.50
   Liñán S, 2018, PROC IEEE INT CONF S, P549, DOI 10.1109/ICSME.2018.00065
   Linares-Vásquez M, 2017, PROC IEEE INT CONF S, P399, DOI 10.1109/ICSME.2017.27
   Linares-Vásquez M, 2017, PROC IEEE INT CONF S, P613, DOI 10.1109/ICSME.2017.47
   Linares-Vásquez M, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P233, DOI 10.1145/3106237.3106275
   Linares-Vásquez M, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P111, DOI 10.1109/MSR.2015.18
   Linares-Vásquez M, 2015, PROC IEEE INT CONF S, P352, DOI 10.1109/ICSM.2015.7332486
   Linares-Vásquez M, 2013, IEEE WORK CONF MIN S, P93, DOI 10.1109/MSR.2013.6624014
   Luo Q, 2018, PROC IEEE INT CONF S, P240, DOI 10.1109/ICSME.2018.00033
   Ma YS, 2005, SOFTW TEST VERIF REL, V15, P97, DOI 10.1002/stvr.308
   Ma YS, 2002, 13TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P352, DOI 10.1109/ISSRE.2002.1173287
   Machiry A., 2013, P 2013 9 JOINT M FDN, P224
   Madeyski L, 2010, IET SOFTW, V4, P32, DOI 10.1049/iet-sen.2008.0038
   Mahmood R, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P599, DOI 10.1145/2635868.2635896
   Mao K., 2016, P 25 INT S SOFTW TES, P94
   Mirshokraie S, 2013, 2013 IEEE SIXTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST 2013), P74, DOI 10.1109/ICST.2013.23
   Moller K.-H., 1993, Proceedings First International Software Metrics Symposium (Cat. No.93TH0518-1), P82, DOI 10.1109/METRIC.1993.263798
   Moore I, 2017, JESTER THE JUNIT TES
   Moran K, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P673, DOI 10.1145/2786805.2786857
   Moran K, 2016, IEEE INT CONF SOFTW, P33, DOI 10.1109/ICST.2016.34
   Nagappan M, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 5, P21, DOI 10.1109/SANER.2016.88
   Nistor A, 2013, IEEE WORK CONF MIN S, P237, DOI 10.1109/MSR.2013.6624035
   Offut A. J., 1997, Software Testing, Verification and Reliability, V7, P165, DOI 10.1002/(SICI)1099-1689(199709)7:3<165::AID-STVR143>3.0.CO;2-U
   Offutt A., 1991, Proceedings of the symposium on Testing, analysis, and verification, P200
   Offutt A. J., 1994, Software Testing, Verification and Reliability, V4, P131, DOI 10.1002/stvr.4370040303
   Oliveira RAP, 2015, IEEE ICST WORKSHOP
   Ostrand T. J., 2002, Software Engineering Notes, V27, P55, DOI 10.1145/566171.566181
   Pagano D, 2013, S VIS LANG HUM CEN C, P125, DOI 10.1109/RE.2013.6636712
   Palomba F, 2015, PROC IEEE INT CONF S, P291, DOI 10.1109/ICSM.2015.7332475
   Panichella S, 2015, PROC IEEE INT CONF S, P281, DOI 10.1109/ICSM.2015.7332474
   Papadakis M, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P936, DOI 10.1109/ICSE.2015.103
   Petrovic G, 2018, 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING - SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2018), P163, DOI 10.1145/3183519.3183521
   Praphamontripong U, 2016, IEEE ICST WORKSHOP, P102, DOI 10.1109/ICSTW.2016.17
   Ravindranath L, 2014, MOBISYS'14: PROCEEDINGS OF THE 12TH ANNUAL INTERNATIONAL CONFERENCE ON MOBILE SYSTEMS, APPLICATIONS, AND SERVICES, P190, DOI 10.1145/2594368.2594377
   Robinson B, 2009, IEEE ICST WORKSHOP, P267, DOI 10.1109/ICSTW.2009.22
   Rodríguez-Baquero D, 2018, ISSTA'18: PROCEEDINGS OF THE 27TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P372, DOI 10.1145/3213846.3229504
   Rosen C, 2016, EMPIR SOFTW ENG, V21, P1192, DOI 10.1007/s10664-015-9379-3
   Schuler D, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P297, DOI 10.1145/1595696.1595750
   SEMERU, 2019, ANDR WRAPP PIT TOOL
   SEMERU, 2019, MDROID REP GITH
   SEMERU, 2019, ANDR WRAPP MAJ TOOL
   Sheskin D., HDB PARAMETRIC NONPA
   Shin D, 2016, IEEE INT CONF SOFTW, P299, DOI 10.1109/ICST.2016.22
   The Software Design Lab, 2019, MUT REP GITH
   Two R, 2017, JUMBLE
   Villarroel L, 2016, PROC INT CONF SOFTW, P14, DOI 10.1145/2884781.2884818
   Yao XJ, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P919, DOI 10.1145/2568225.2568265
   Yuan-W, 2017, MUDROID PROJECT GITH
   Zaeem RN, 2014, 2014 IEEE SEVENTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST), P183, DOI 10.1109/ICST.2014.31
   Zein S, 2016, J SYST SOFTWARE, V117, P334, DOI 10.1016/j.jss.2016.03.065
   Zhang HY, 2008, IEEE T SOFTWARE ENG, V34, P301, DOI 10.1109/TSE.2007.70771
   Zhang JM, 2019, IEEE ICST WORKSHOP, P90, DOI 10.1109/ICSTW.2019.00037
   Zhang PY, 2014, ACM T SOFTW ENG METH, V23, DOI 10.1145/2652483
   Zhou CX, 2009, SECOND INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION, AND VALIDATION, PROCEEDINGS, P396, DOI 10.1109/ICST.2009.43
NR 106
TC 3
Z9 4
U1 0
U2 4
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JAN 1
PY 2022
VL 48
IS 1
BP 186
EP 208
DI 10.1109/TSE.2020.2982638
PG 23
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA YG0HJ
UT WOS:000742179000011
OA Bronze
DA 2024-07-18
ER

PT J
AU Sharma, V
   Hietala, K
   McCamant, S
AF Sharma, Vaibhav
   Hietala, Kesha
   McCamant, Stephen
TI Finding Substitutable Binary Code By Synthesizing Adapters
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Tools; Binary codes; Libraries; Security; Task analysis; Reverse
   engineering; Computer science; Symbolic execution; equivalence checking;
   program synthesis; binary analysis
ID SYSTEM; REUSE
AB Independently developed codebases typically contain many segments of code that perform same or closely related operations (semantic clones). Finding functionally equivalent segments enables applications like replacing a segment by a more efficient or more secure alternative. Such related segments often have different interfaces, so some glue code (an adapter) is needed to replace one with the other. In previous work, we presented an algorithm that searches for replaceable code segments by attempting to synthesize an adapter between them from some finite family of adapters; it terminates if it finds no possible adapter. In this work, we compare binary symbolic execution-based adapter search with concrete adapter enumeration based on Intel's Pin framework, and explore the relation between size of adapter search space and total search time. We present examples of applying adapter synthesis for improving security of binary functions and switching between binary implementations of RC4. We present two large-scale evaluations: (1) we run adapter synthesis on more than 13,000 function pairs from the Linux C library, and (2) we reverse engineer fragments of ARM binary code by running more than a million adapter synthesis tasks. Our results confirm that several instances of adaptably equivalent binary functions exist in real-world code, and suggest that adapter synthesis can be applied for automatically replacing binary code with its adaptably equivalent variants.
C1 [Sharma, Vaibhav; McCamant, Stephen] Univ Minnesota, Dept Comp Sci & Engn, Minneapolis, MN 55455 USA.
   [Hietala, Kesha] Univ Maryland, Dept Comp Sci, College Pk, MD 20742 USA.
C3 University of Minnesota System; University of Minnesota Twin Cities;
   University System of Maryland; University of Maryland College Park
RP Sharma, V (corresponding author), Univ Minnesota, Dept Comp Sci & Engn, Minneapolis, MN 55455 USA.
EM vaibhav@umn.edu; kesha@cs.umd.edu; smccaman@umn.edu
RI SHARMA, VAIBHAV/JCO-6386-2023
OI Hietala, Kesha/0000-0002-2724-0974; Sharma, Vaibhav/0000-0001-9877-8926
FU National Science Foundation [1563920]; Defense Advanced Research
   Projects Agency (DARPA) [FA8750-15-C-0110]; Division of Computing and
   Communication Foundations; Direct For Computer & Info Scie & Enginr
   [1563920] Funding Source: National Science Foundation
FX This material is based on work supported by the National Science
   Foundation under Grant Number 1563920. This research was developed with
   funding from the Defense Advanced Research Projects Agency (DARPA) under
   contract FA8750-15-C-0110. The views and/or findings contained in this
   article are those of the authors and should not be interpreted as
   representing the official views or policies of the Department of Defense
   or the US Government.
CR Amidon P., 2015, 2015 IEEE HIGH PERF, P1
   [Anonymous], 2018, EC2 Instance Pricing - Amazon Web Services
   [Anonymous], 2017, Rockbox - Free Music Player Firmware
   Avgerinos T, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P1083, DOI 10.1145/2568225.2568293
   Borck H, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P604, DOI 10.1109/SANER.2016.95
   Bracciali A, 2005, J SYST SOFTWARE, V74, P45, DOI 10.1016/j.jss.2003.05.007
   David Y, 2016, ACM SIGPLAN NOTICES, V51, P266, DOI [10.1145/2908080.2908126, 10.1145/2980983.2908126]
   Duggan D, 2005, ACTA INFORM, V41, P181, DOI 10.1007/s00236-004-0151-1
   Dutertre B, 2014, LECT NOTES COMPUT SC, V8559, P737, DOI 10.1007/978-3-319-08867-9_49
   Ernst MD, 2007, SCI COMPUT PROGRAM, V69, P35, DOI 10.1016/j.scico.2007.01.015
   FuzzBALL, 2013, FUZZBALL VINE BASED
   Ganesh V, 2007, LECT NOTES COMPUT SC, V4590, P519
   Gascón A, 2014, 2014 FORMAL METHODS IN COMPUTER-AIDED DESIGN (FMCAD), P83, DOI 10.1109/FMCAD.2014.6987599
   GNU, 2017, GNU C LIB ABS VAL
   Godefroid Patrice., 2011, Proc. ISSTA, P23, DOI [10.1145/2001420.2001424, DOI 10.1145/2001420.2001424]
   Goffi A, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P366, DOI 10.1145/2635868.2635888
   Jacob M, 2008, LECT NOTES COMPUT SC, V5312, P100, DOI 10.1007/978-3-540-89598-5_7
   Jha S., 2010, P 32 ACM IEEE INT C, V1, P215, DOI DOI 10.1145/1806799.1806833
   Jiang LX, 2007, PROC INT CONF SOFTW, P96
   Jiang LX, 2009, ISSTA 2009: INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P81
   Joshi R, 2002, ACM SIGPLAN NOTICES, V37, P304, DOI 10.1145/543552.512566
   Kamiya T, 2002, IEEE T SOFTWARE ENG, V28, P654, DOI 10.1109/TSE.2002.1019480
   Katz DS, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P346, DOI 10.1109/SANER.2018.8330222
   Keller R., 1998, ECOOP'98 - Object-Oriented Programming. 12th European Conference. Proceedings, P307, DOI 10.1007/BFb0054097
   Kuznetsov V, 2012, ACM SIGPLAN NOTICES, V47, P193, DOI 10.1145/2345156.2254088
   Li ZM, 2004, USENIX ASSOCIATION PROCEEDINGS OF THE SIXTH SYMPOSIUM ON OPERATING SYSTEMS DESIGN AND IMPLEMENTATION (OSDE '04), P289
   Luk CK, 2005, ACM SIGPLAN NOTICES, V40, P190, DOI 10.1145/1064978.1065034
   Manna Z., 1980, ACM Transactions on Programming Languages and Systems, V2, P90, DOI 10.1145/357084.357090
   Martignoni L, 2012, ASPLOS XVII: SEVENTEENTH INTERNATIONAL CONFERENCE ON ARCHITECTURAL SUPPORT FOR PROGRAMMING LANGUAGES AND OPERATING SYSTEMS, P337
   Massalin H., 1987, Proceedings of the Second International Conference on Architectural Support for Programming Languages and Operating Systems (ASPLOS II) (Cat. No.87CH2440-6), P122
   Matz M., 2013, System V Application Binary Interface
   Morel B, 2004, IEEE T SOFTWARE ENG, V30, P587, DOI 10.1109/TSE.2004.53
   Nita M, 2008, LECT NOTES COMPUT SC, V4959, P85
   Penix J, 1995, 10TH KNOWLEDGE-BASED SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P131, DOI 10.1109/KBSE.1995.490128
   Penix John., 1997, P 9 IEEE INT C SOFTW, P535
   Podgurski A., 1992, International Conference on Software Engineering, P349, DOI 10.1109/ICSE.1992.753512
   PURTILO JM, 1991, SOFTWARE PRACT EXPER, V21, P539, DOI 10.1002/spe.4380210602
   Ramos David A., 2011, P 23 INT C COMP AID, P669, DOI [DOI 10.1007/978-3-642-22110-1_55, 10.1007/978-3-642]
   Rittri M., 1989, Proceedings of the Fourth International Conference on Functional Programming Languages and Computer Architecture, FPCA'89, P174
   Runciman C., 1991, Journal of Functional Programming, V1, P191
   Runciman C., 1989, Proceedings of the fourth international conference on Functional programming languages and computer architecture, P166
   Sharma V, 2018, IEEE INT CONF SOFTW, P150, DOI 10.1109/ICST.2018.00024
   Solar-Lezama A, 2006, ACM SIGPLAN NOTICES, V41, P404, DOI 10.1145/1168917.1168907
   Song D., 2017, Bitblaze: Binary analysis for computer security
   Song D, 2008, LECT NOTES COMPUT SC, V5352, P1, DOI 10.1007/978-3-540-89862-7_1
   Srivastava S, 2009, PLDI'09 PROCEEDINGS OF THE 2009 ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P223, DOI 10.1145/1542476.1542501
   VideoLAN, 2017, VLC OFFICIAL SITE
   Yellin DM, 1997, ACM T PROGR LANG SYS, V19, P292, DOI 10.1145/244795.244801
   Zaremski A. M., 1995, ACM Transactions on Software Engineering and Methodology, V4, P146, DOI 10.1145/210134.210179
NR 49
TC 0
Z9 0
U1 0
U2 0
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD AUG 1
PY 2021
VL 47
IS 8
BP 1626
EP 1643
DI 10.1109/TSE.2019.2931000
PG 18
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA TZ7YH
UT WOS:000684687400006
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Cogo, FR
   Oliva, GA
   Hassan, AE
AF Cogo, Filipe R.
   Oliva, Gustavo A.
   Hassan, Ahmed E.
TI Deprecation of Packages and Releases in Software Ecosystems: A Case
   Study on NPM
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Software ecosystem; deprecation; release deprecation; dependency; npm;
   JavaScript; Node.js
AB Deprecation is used by developers to discourage the usage of certain features of a software system. Prior studies have focused on the deprecation of source code features, such as API methods. With the advent of software ecosystems, package managers started to allow developers to deprecate higher-level features, such as package releases. This study examines how the deprecation mechanism offered by the npm package manager is used to deprecate releases that are published in the ecosystem. We propose two research questions. In our first RQ, we examine how often package releases are deprecated in npm, ultimately revealing the importance of a deprecation mechanism to the package manager. We found that the proportion of packages that have at least one deprecated release is 3.7 percent and that 66 percent of such packages have deprecated all their releases, preventing client packages to migrate from a deprecated to a replacement release. Also, 31 percent of the partially deprecated packages do not have any replacement release. In addition, we investigate the content of the deprecation messages and identify five rationales behind the deprecation of releases, namely: withdrawal, supersession, defect, test, and incompatibility. In our second RQ, we examine how client packages adopt deprecated releases. We found that, at the time of our data collection, 27 percent of all client packages directly adopt at least one deprecated release and that 54 percent of all client packages transitively adopt at least one deprecated release. The direct adoption of deprecated releases is highly skewed, with the top 40 popular deprecated releases accounting for more than half of all deprecated releases adoption. As a discussion that derives from our findings, we highlight the rudimentary aspect of the deprecation mechanism employed by npm and recommend a set of improvements to this mechanism. These recommendations aim at supporting client packages in detecting deprecated releases, understanding their impact, and coping with them.
C1 [Cogo, Filipe R.] Ctr Software Excellence Huawei, Kingston, ON K7L 3P5, Canada.
   [Oliva, Gustavo A.; Hassan, Ahmed E.] Queens Univ, Software Anal & Intelligence Lab SAIL, Sch Comp, Kingston, ON K7L 3N6, Canada.
C3 Queens University - Canada
RP Cogo, FR (corresponding author), Ctr Software Excellence Huawei, Kingston, ON K7L 3P5, Canada.
EM cogo@cs.queensu.ca; gustavo@cs.queensu.ca; ahmedi@cs.queensu.ca
RI KHALIFA, AHMED khalifa/HKF-2246-2023
OI KHALIFA, AHMED khalifa/0000-0002-2918-7572; Cogo,
   Filipe/0000-0002-5494-685X
CR Brito G, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P360, DOI 10.1109/SANER.2016.99
   Cogo FR, 2021, IEEE T SOFTWARE ENG, V47, P2457, DOI 10.1109/TSE.2019.2952130
   Decan A, 2021, IEEE T SOFTWARE ENG, V47, P1226, DOI 10.1109/TSE.2019.2918315
   Decan A, 2018, IEEE WORK CONF MIN S, P181, DOI 10.1145/3196398.3196401
   Decan A, 2018, PROC IEEE INT CONF S, P404, DOI 10.1109/ICSME.2018.00050
   Deokyoon Ko, 2014, 2014 21st Asia-Pacific Software Engineering Conference (APSEC), P27, DOI 10.1109/APSEC.2014.87
   Henkel J, 2005, PROC INT CONF SOFTW, P274
   Hora A, 2018, SOFTWARE QUAL J, V26, P161, DOI 10.1007/s11219-016-9344-4
   Kikas R, 2017, IEEE WORK CONF MIN S, P102, DOI 10.1109/MSR.2017.55
   Li L, 2018, IEEE WORK CONF MIN S, P254, DOI 10.1145/3196398.3196419
   Mirian A, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE (ICSE-SEIP 2019), P302, DOI 10.1109/ICSE-SEIP.2019.00044
   Nascimento R, 2020, PROCEEDINGS OF THE 2020 IEEE 27TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER '20), P567, DOI [10.1109/saner48275.2020.9054854, 10.1109/SANER48275.2020.9054854]
   Raemaekers S, 2014, IEEE INT WORK C SO, P215, DOI 10.1109/SCAM.2014.30
   Robbes Romain, 2012, P ACM SIGSOFT 20 INT, P1
   Romano J., 2006, ANN M FLORIDA ASS IN
   Samoladas I, 2010, INFORM SOFTWARE TECH, V52, P902, DOI 10.1016/j.infsof.2010.05.001
   Sawant AA, 2019, EMPIR SOFTW ENG, V24, P3824, DOI 10.1007/s10664-019-09713-w
   Sawant AA, 2018, PROC IEEE INT CONF S, P13, DOI 10.1109/ICSME.2018.00011
   Sawant AA, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P561, DOI 10.1145/3180155.3180170
   Sawant AA, 2018, EMPIR SOFTW ENG, V23, P2158, DOI 10.1007/s10664-017-9554-9
   Stol KJ, 2016, PROC INT CONF SOFTW, P120, DOI 10.1145/2884781.2884833
   Wittern E, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P351, DOI [10.1145/2901739.2901743, 10.1109/MSR.2016.043]
   Zerouali A, 2019, J SOFTW-EVOL PROC, V31, DOI 10.1002/smr.2157
   Zhou J, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P266, DOI 10.1145/2950290.2950298
NR 24
TC 10
Z9 11
U1 0
U2 3
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD FEB 9
PY 2021
VL 48
IS 7
BP 2208
EP 2223
DI 10.1109/TSE.2021.3055123
PG 16
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 2Y5ZH
UT WOS:000825974300001
DA 2024-07-18
ER

PT J
AU Zhou, X
   Peng, X
   Xie, T
   Sun, J
   Ji, C
   Li, WH
   Ding, D
AF Zhou, Xiang
   Peng, Xin
   Xie, Tao
   Sun, Jun
   Ji, Chao
   Li, Wenhai
   Ding, Dan
TI Fault Analysis and Debugging of Microservice Systems: Industrial Survey,
   Benchmark System, and Empirical Study
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Debugging; Benchmark testing; Companies; Computer architecture;
   Visualization; Industries; Runtime; Microservices; fault localization;
   tracing; visualization; debugging
AB The complexity and dynamism of microservice systems pose unique challenges to a variety of software engineering tasks such as fault analysis and debugging. In spite of the prevalence and importance of microservices in industry, there is limited research on the fault analysis and debugging of microservice systems. To fill this gap, we conduct an industrial survey to learn typical faults of microservice systems, current practice of debugging, and the challenges faced by developers in practice. We then develop a medium-size benchmark microservice system (being the largest and most complex open source microservice system within our knowledge) and replicate 22 industrial fault cases on it. Based on the benchmark system and the replicated fault cases, we conduct an empirical study to investigate the effectiveness of existing industrial debugging practices and whether they can be further improved by introducing the state-of-the-art tracing and visualization techniques for distributed systems. The results show that the current industrial practices of microservice debugging can be improved by employing proper tracing and visualization techniques and strategies. Our findings also suggest that there is a strong need for more intelligent trace analysis and visualization, e.g., by combining trace visualization and improved fault localization, and employing data-driven and learning-based recommendation for guided visual exploration and comparison of traces.
C1 [Zhou, Xiang; Peng, Xin; Ji, Chao; Li, Wenhai; Ding, Dan] Fudan Univ, Sch Comp Sci, Shanghai Key Lab Data Sci, Shanghai 200433, Peoples R China.
   [Zhou, Xiang; Peng, Xin; Ji, Chao; Li, Wenhai; Ding, Dan] Fudan Univ, Shanghai Inst Intelligent Elect & Syst, Shanghai 200433, Peoples R China.
   [Xie, Tao] Univ Illinois, Urbana, IL 61801 USA.
   [Sun, Jun] Singapore Univ Technol & Design, Singapore 487372, Singapore.
C3 Fudan University; Fudan University; University of Illinois System;
   University of Illinois Urbana-Champaign; Singapore University of
   Technology & Design
RP Peng, X (corresponding author), Fudan Univ, Sch Comp Sci, Shanghai Key Lab Data Sci, Shanghai 200433, Peoples R China.; Peng, X (corresponding author), Fudan Univ, Shanghai Inst Intelligent Elect & Syst, Shanghai 200433, Peoples R China.
EM 15110240026@fudan.edu.cn; pengxitz@fudan.edu.cn; taoxie@illinois.edu;
   sunjun@sutd.edu.sg; 17212010013@fudan.edu.cn; 15212010021@fudan.edu.cn;
   17212010004@fudan.edu.cn
RI Ding, Dan/C-7519-2014
OI Peng, Xin/0000-0003-3376-2581
FU National Key Research and Development Program of China [2018YFB1004803];
   US National Science Foundation [CNS-1513939, CNS-1564274, CCF-1816615]
FX This work was supported by the National Key Research and Development
   Program of China under Grant No. 2018YFB1004803. Tao Xie's work was
   supported in part by US National Science Foundation under grants no.
   CNS-1513939, CNS-1564274, and CCF-1816615.
CR Abreu R, 2009, IEEE INT CONF AUTOM, P88, DOI 10.1109/ASE.2009.25
   Aderaldo Carlos M., 2017, 2017 IEEE/ACM 1st International Workshop on Establishing the Community-Wide Infrastructure for Architecture-Based Software Engineering (ECASE). Proceedings, P8, DOI 10.1109/ECASE.2017.4
   Aguerre Cedric, 2012, Proceedings of the International Conference on Computer Graphics Theory and Applications (GRAPP 2012) and International Conference on Information Visualization Theory and Applications (IVAPP 2012), P764
   Alshuqayran N, 2016, IEEE INT CONF SERV, P44, DOI 10.1109/SOCA.2016.15
   Alves EHD, 2015, BRAZ SYM COMPUT SYST, P96, DOI 10.1109/SBESC.2015.25
   Amazon.Com, 2017, AM
   Andrews JH, 2006, IEEE T SOFTWARE ENG, V32, P608, DOI 10.1109/TSE.2006.83
   [Anonymous], 2016, APPL DELIVERY SERVIC
   [Anonymous], 2016, INT C APPL SYSTEM IN
   Asadollah SA, 2017, SOFTWARE QUAL J, V25, P49, DOI 10.1007/s11219-015-9301-7
   Bailis P, 2017, COMMUN ACM, V60, P46, DOI 10.1145/3052942
   Beschastnikh I, 2016, COMMUN ACM, V59, P32, DOI 10.1145/2909480
   Campos J, 2012, IEEE INT CONF AUTOM, P378, DOI 10.1145/2351676.2351752
   de Camargo A., 2016, P 18 INT C INF INT W, P422, DOI [10.1145/3011141.3011179, DOI 10.1145/3011141.3011179]
   Di Francesco P, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE (ICSA 2017), P21, DOI 10.1109/ICSA.2017.24
   Docker.Com, 2018, DOCK
   DockerSwarm.Com, 2018, DOCK SWARM
   Dragoni N., 2017, Microservices: yesterday, today, and tomorrow, P195, DOI [DOI 10.1007/978-3-319-67425-4_12, 10.1007/978-3-319-67425-4_12]
   Dubbo.Com, 2017, DUBB
   Fault.Replication, 2017, FAULT REPL
   Giraldeau F, 2016, IEEE T PARALL DISTR, V27, P2450, DOI 10.1109/TPDS.2015.2488629
   Granchelli G, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE WORKSHOPS (ICSAW), P298, DOI 10.1109/ICSAW.2017.9
   Hassan S, 2016, P IEEE I C SERV COMP, P813, DOI 10.1109/SCC.2016.113
   Hasselbring W, 2016, PROCEEDINGS OF THE 2016 ACM/SPEC INTERNATIONAL CONFERENCE ON PERFORMANCE ENGINEERING (ICPE'16), P133, DOI 10.1145/2851553.2858659
   Heinrich R, 2017, ICPE'17: COMPANION OF THE 2017 ACM/SPEC INTERNATIONAL CONFERENCE ON PERFORMANCE ENGINEERING, P223, DOI 10.1145/3053600.3053653
   Heorhiadi V, 2016, INT CON DISTR COMP S, P57, DOI 10.1109/ICDCS.2016.11
   Jamshidi P, 2018, IEEE SOFTWARE, V35, P24
   Klock S, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE (ICSA 2017), P11, DOI 10.1109/ICSA.2017.38
   Koca Feyzullah, 2013, Testing Software and Systems. 25th IFIP WG 6.1 International Conference, ICTSS 2013. Proceedings: LNCS 8254, P239, DOI 10.1007/978-3-642-41707-8_16
   Kubernetes.Com, 2018, KUBERNETES
   Laguna I, 2012, INT CONFER PARA, P213
   Leitner P, 2016, INT CONF UTIL CLOUD, P165, DOI 10.1145/2996890.2996901
   Lewis J., 2014, MartinFowler. com
   Liblit B, 2005, ACM SIGPLAN NOTICES, V40, P15, DOI 10.1145/1064978.1065014
   Mesos.Com, 2018, MES
   Microservice.System.Benchmark, 2018, TRAINT
   Morgan W., 2017, WHATS SERVICE MESH W
   Netflix.Com, 2018, NETFL
   Panda A, 2017, PROCEEDINGS OF THE 16TH WORKSHOP ON HOT TOPICS IN OPERATING SYSTEMS (HOTOS 2017), P30, DOI 10.1145/3102980.3102986
   Park S, 2010, 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING & KNOWLEDGE ENGINEERING (SEKE 2010), P645
   Park S, 2015, SOFTW TEST VERIF REL, V25, P167, DOI 10.1002/stvr.1523
   Pham C, 2017, IEEE T PARALL DISTR, V28, P503, DOI 10.1109/TPDS.2016.2575829
   Qi GY, 2017, LECT NOTES ARTIF INT, V10604, P33, DOI 10.1007/978-3-319-69179-4_3
   Replication.Package, 2018, FAULT AN DEB MICR SY
   Salvadori I., 2016, P 18 INT C INFORM IN, P443, DOI [10.1145/3011141.3011155, DOI 10.1145/3011141.3011155]
   Santelices R, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P1269, DOI 10.1109/ICSE.2013.6606695
   Schermann G, 2016, MIDDLEWARE '16: PROCEEDINGS OF THE 17TH INTERNATIONAL MIDDLEWARE CONFERENCE, DOI 10.1145/2988336.2988348
   Sharma AB, 2013, I C DEPEND SYS NETWO
   SmartBear, 2015, WHY YOU CANT TALK MI
   SpringBoot.Com, 2018, SPRING BOOT
   SpringCloud.Com, 2018, SPRING CLOUD
   Wechat.Com, 2018, WECHAT
   Wong WE, 2016, IEEE T SOFTWARE ENG, V42, P707, DOI 10.1109/TSE.2016.2521368
   Wong WE, 2009, INT J SOFTW ENG KNOW, V19, P573, DOI 10.1142/S021819400900426X
   Zeller A, 2002, IEEE T SOFTWARE ENG, V28, P183, DOI 10.1109/32.988498
   Zhou H, 2018, PROCEEDINGS OF THE 2018 ACM SYMPOSIUM ON CLOUD COMPUTING (SOCC '18), P149, DOI 10.1145/3267809.3267823
   Zhou X, 2018, PROC IEEE ACM INT C, P323, DOI 10.1145/3183440.3194991
NR 57
TC 153
Z9 168
U1 2
U2 44
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD FEB 1
PY 2021
VL 47
IS 2
BP 243
EP 260
DI 10.1109/TSE.2018.2887384
PG 18
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA QG7HE
UT WOS:000617753400002
OA Green Accepted, hybrid
DA 2024-07-18
ER

PT J
AU Mohanani, R
   Salman, I
   Turhan, B
   Rodriguez, P
   Ralph, P
AF Mohanani, Rahul
   Salman, Iflaah
   Turhan, Burak
   Rodriguez, Pilar
   Ralph, Paul
TI Cognitive Biases in Software Engineering: A Systematic Mapping Study
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Antecedents of cognitive bias; cognitive bias; debiasing; effects of
   cognitive bias; software engineering; systematic mapping
ID DESIGN; HEURISTICS; CULTURE; KEY
AB One source of software project challenges and failures is the systematic errors introduced by human cognitive biases. Although extensively explored in cognitive psychology, investigations concerning cognitive biases have only recently gained popularity in software engineering research. This paper therefore systematically maps, aggregates and synthesizes the literature on cognitive biases in software engineering to generate a comprehensive body of knowledge, understand state-of-the-art research and provide guidelines for future research and practise. Focusing on bias antecedents, effects and mitigation techniques, we identified 65 articles (published between 1990 and 2016), which investigate 37 cognitive biases. Despite strong and increasing interest, the results reveal a scarcity of research on mitigation techniques and poor theoretical foundations in understanding and interpreting cognitive biases. Although bias-related research has generated many new insights in the software engineering community, specific bias mitigation techniques are still needed for software professionals to overcome the deleterious effects of cognitive biases on their work.
C1 [Mohanani, Rahul; Salman, Iflaah; Rodriguez, Pilar] Univ Oulu, M3S Grp, Oulu 90014, Finland.
   [Turhan, Burak] Monash Univ, Fac Informat Technol, Clayton, Vic 3800, Australia.
   [Ralph, Paul] Univ Auckland, Dept Comp Sci, Auckland 1010, New Zealand.
C3 University of Oulu; Monash University; University of Auckland
RP Mohanani, R (corresponding author), Univ Oulu, M3S Grp, Oulu 90014, Finland.
EM rahul.mohanani@oulu.fi; iflaah.salman@oulu.fi; burak.turhan@monash.edu;
   pilar.rodriguez@oulu.fi; paul@paulralph.name
RI Turhan, Burak/G-7400-2011; Ralph, D. Paul/H-4322-2019; Mohanani,
   Rahul/AAG-9762-2019; Rodriguez, Pilar/HSE-9989-2023; Rodriguez,
   Pilar/C-1449-2015
OI Turhan, Burak/0000-0003-1511-2163; Ralph, D. Paul/0000-0002-7411-0857;
   Mohanani, Rahul/0000-0001-7018-8836; Rodriguez,
   Pilar/0000-0002-0618-6104
FU lnfotech Oulu Doctoral grant at University of Oulu
FX The authors would like to thank the associate editor and three anonymous
   reviewers for their suggestions on earlier versions of this paper. This
   study was supported in part by the lnfotech Oulu Doctoral grant at
   University of Oulu to Rahul Mohanani and Iflaah Salman.
CR Altman DG, 1998, STAT MED, V17, P2661, DOI 10.1002/(SICI)1097-0258(19981215)17:23<2661::AID-SIM33>3.0.CO;2-B
   Amott D, 2008, DECIS SUPPORT SYST, V44, P657, DOI 10.1016/j.dss.2007.09.003
   [Anonymous], 2011, Software designers, are you biased?, DOI 10.1145/1988676.1988678
   [Anonymous], 2001, Breakdown of Will
   [Anonymous], 1975, UTILITY PROBABILITY
   [Anonymous], IEEE SOFTW
   Arkes HR, 1999, PSYCHOL BULL, V125, P591, DOI 10.1037/0033-2909.125.5.591
   Arkin B, 2005, IEEE SECUR PRIV, V3, P84, DOI 10.1109/MSP.2005.23
   Arnott D, 2006, INFORM SYST J, V16, P55, DOI 10.1111/j.1365-2575.2006.00208.x
   Bar-Haim Y, 2007, PSYCHOL BULL, V133, P1, DOI 10.1037/0033-2909.133.1.1
   Baron RA, 2004, J BUS VENTURING, V19, P221, DOI 10.1016/S0883-9026(03)00008-9
   Bornstein RF, 2004, COGNITIVE ILLUSIONS: A HANDBOOK ON FALLACIES AND BIASES IN THINKING, JUDGEMENT AND MEMORY, P215
   Bourque Pierre, 2014, SWEBOK: Guide to the Software Engineering Body of Knowledge, V3rd
   Browne GJ, 2002, INFORM MANAGE-AMSTER, V39, P625, DOI 10.1016/S0378-7206(02)00014-9
   Browne GJ, 2012, J ASSOC INF SYST, V13, P1000
   BUEHLER R, 1994, J PERS SOC PSYCHOL, V67, P366, DOI 10.1037/0022-3514.67.3.366
   Burt R. S., 2005, BROKERAGE CLOSURE IN
   Calikli G., 2010, Proceedings of the 6th International Conference on Predictive Models in Software Engineering, P10
   Calikli G., 2010, P 6 INT C PRED MOD S
   Chapman G.B., 2000, DECISION MAKING HLTH, P183
   Chotisarn N, 2013, INT CONF INFO SCI, P951, DOI 10.1109/ICIST.2013.6747696
   COHEN J, 1968, PSYCHOL BULL, V70, P213, DOI 10.1037/h0026256
   Colman AndrewM., 2009, A Dictionary of Psychology
   Cruz Shirley S. J. O., 2011, 15th Annual Conference on Evaluation & Assessment in Software Engineering (EASE 2011), P1, DOI 10.1049/ic.2011.0001
   da Cunha JAOG, 2016, 9TH IEEE/ACM INTERNATIONAL WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING (CHASE 2016), P26, DOI [10.1109/CHASE.2016.013, 10.1145/2897586.2897598]
   de Souza CRB, 2009, IEEE SOFTWARE, V26, P17, DOI 10.1109/MS.2009.176
   Dorst K., 1995, DESIGN STUD, V16, P139, DOI [10.1016/0142-694X(94)00005-X, DOI 10.1016/0142-694X(94)00005-X]
   Dunning D, 2011, ADV EXP SOC PSYCHOL, V44, P247, DOI 10.1016/B978-0-12-385522-0.00005-6
   Dyba Tore, 2007, 2007 First International Symposium on Empirical Software Engineering and Measurement, P225
   Fleischmann B, 2014, PROD LOGIST, P1
   Flyvbjerg B., 2006, PROJECT MANAGEMENT J, V37, P5, DOI DOI 10.1177/875697280603700302
   Fonteyn ME., 1993, Qualitative Health Research, V3, P430, DOI [DOI 10.1177/104973239300300403, 10.1177/104973239300300403]
   Gheorghiu VA, 2004, COGNITIVE ILLUSIONS: A HANDBOOK ON FALLACIES AND BIASES IN THINKING, JUDGEMENT AND MEMORY, P399
   Gilbert DT, 1998, J PERS SOC PSYCHOL, V75, P617, DOI 10.1037/0022-3514.75.3.617
   Gilovich T., 2002, HEURISTICS BIASES
   Granka LA, 2010, INFORM SOC, V26, P364, DOI 10.1080/01972243.2010.511560
   Hall T, 2009, ACM T SOFTW ENG METH, V18, DOI 10.1145/1525880.1525883
   Haugen NC, 2006, AGILE 2006, PROCEEDINGS, P23, DOI 10.1109/AGILE.2006.16
   Hilbert M, 2012, PSYCHOL BULL, V138, P211, DOI 10.1037/a0025940
   Hughes J, 2003, BEHAV INFORM TECHNOL, V22, P127, DOI 10.1080/0144929031000081341
   Ivarsson M, 2011, EMPIR SOFTW ENG, V16, P365, DOI 10.1007/s10664-010-9146-4
   Jansson D., 1991, DESIGN STUDIES, V12, P3, DOI [DOI 10.1016/0142-694X(91)90003-F, 10.1016/0142-694X(91)90003-F]
   Jorgensen M, 2012, IEEE T SOFTWARE ENG, V38, P677, DOI 10.1109/TSE.2011.40
   Jorgensen M, 2010, INFORM SOFTWARE TECH, V52, P506, DOI 10.1016/j.infsof.2009.12.002
   Kahneman Daniel, 2011, Thinking, fast and slow (macmillan)
   Kenley C. R., 2004, Systems Engineering, V7, P13, DOI 10.1002/sys.10051
   Kenley C.R., 2004, SYSTEMS ENG, V7, P13
   Kitchenham B., 2004, ARXIV
   Kitchenham B, 2010, INFORM SOFTWARE TECH, V52, P792, DOI 10.1016/j.infsof.2010.03.006
   Kitchenham B, 2010, J SYST SOFTWARE, V83, P37, DOI 10.1016/j.jss.2009.06.041
   KLAYMAN J, 1987, PSYCHOL REV, V94, P211, DOI 10.1037/0033-295X.94.2.211
   Kuhn Thomas S, 2012, STRUCTURE SCI REVOLU, DOI DOI 10.7208/CHICAGO/9780226458144.001.0001
   Kutsch E, 2011, INT J PROJ MANAG, V29, P1070, DOI 10.1016/j.ijproman.2011.01.010
   Laplante P.A., 2007, What every engineer should know about software engineering
   Larrick R. P., 2008, Blackwell Handbook of Judgment and Decision Making
   LEARY MR, 1982, PERS SOC PSYCHOL B, V8, P257, DOI 10.1177/0146167282082012
   Leidner DE, 2006, MIS QUART, V30, P357
   Lenberg P, 2015, J SYST SOFTWARE, V107, P15, DOI 10.1016/j.jss.2015.04.084
   LEVENTHAL LN, 1994, INT J HUM-COMPUT ST, V41, P717, DOI 10.1006/ijhc.1994.1079
   Long-Crowell E., 2015, HALO EFFECT DEFINITI
   MacDougall C, 1997, QUAL HEALTH RES, V7, P532, DOI 10.1177/104973239700700407
   MADNI AM, 1988, HUM FACTORS, V30, P395, DOI 10.1177/001872088803000403
   Mair Carolyn., 2011, P 2 INT WORKSHOP EME, P81
   McCaffrey T, 2012, PSYCHOL SCI, V23, P215, DOI 10.1177/0956797611429580
   Mohan K, 2008, COMMUN ACM, V51, P110, DOI 10.1145/1378727.1389970
   Mohanani R, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P895, DOI 10.1145/2568225.2568235
   Newell B. R., 2013, OXFORD HDB COGNITIVE, P603
   Nickerson R. S., 1998, REV GEN PSYCHOL, V2, P175, DOI DOI 10.1037/1089-2680.2.2.175
   Nurminen M., 2009, IASTED INT C SOFTW E, P7
   Nurminen M., 2009, P IASTED INT C SOFTW, P7
   PARKINSON C.N., 1957, PARKINSONS LAW OTHER
   Parsons J, 2004, IEEE T SOFTWARE ENG, V30, P873, DOI 10.1109/TSE.2004.94
   Petersen K., 2008, 12 INT C EVALUATION, DOI [10.14236/ewic/EASE2008.8, DOI 10.14236/EWIC/EASE2008.8]
   Petersen K, 2015, INFORM SOFTWARE TECH, V64, P1, DOI 10.1016/j.infsof.2015.03.007
   Pfister HR, 2008, JUDGM DECIS MAK, V3, P5
   Plous S., 1993, PSYCHOL JUDGMENT DEC
   Pohl RF, 2004, COGNITIVE ILLUSIONS: A HANDBOOK ON FALLACIES AND BIASES IN THINKING, JUDGEMENT AND MEMORY, P1
   POSES RM, 1991, MED DECIS MAKING, V11, P159, DOI 10.1177/0272989X9101100303
   Pronin E, 2002, PERS SOC PSYCHOL B, V28, P369, DOI 10.1177/0146167202286008
   Pronin E, 2007, TRENDS COGN SCI, V11, P37, DOI 10.1016/j.tics.2006.11.001
   Ralph P, 2018, SCI COMPUT PROGRAM, V156, P68, DOI 10.1016/j.scico.2018.01.002
   Ralph P, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P24, DOI 10.1145/2568225.2568261
   Ralph P, 2015, 2015 IEEE/ACM 5TH INTERNATIONAL WORKSHOP ON THE TWIN PEAKS OF REQUIREMENTS AND ARCHITECTURE (TWINPEAKS), P20, DOI 10.1109/TwinPeaks.2015.12
   Ralph P, 2011, LECT NOTES BUS INF P, V93, P92
   Robinson-Riegler B., 2004, Cognitive psychology: Applying the science of the mind, V3rd
   Sage A.P., 1999, Handbook of Systems Engineering and Management
   Samuelson W., 1988, Journal of Risk and Uncertainty, V1, P7, DOI [10.1007/BF00055564, DOI 10.1007/BF00055564]
   Schwartz H., 2008, BUS ECON, V43, P69
   Sein MK, 2011, MIS QUART, V35, P37
   Shepperd M, 2018, 33RD ANNUAL ACM SYMPOSIUM ON APPLIED COMPUTING, P1510, DOI 10.1145/3167132.3167293
   Shore B, 2008, PROJ MANAG J, V39, P5, DOI 10.1002/pmj.20082
   Siau K, 1996, LECT NOTES COMPUT SC, V1080, P402
   Snow AP, 2007, INFORM MANAGE-AMSTER, V44, P130, DOI 10.1016/j.im.2006.10.009
   STACY W, 1995, COMMUN ACM, V38, P57, DOI 10.1145/203241.203256
   Stanovich K. E., 2009, WHAT INTELLIGENCE TE
   Stray V, 2016, LECT NOTES COMPUT SC, V10027, P458, DOI 10.1007/978-3-319-49094-6_31
   TVERSKY A, 1974, SCIENCE, V185, P1124, DOI 10.1126/science.185.4157.1124
   VandenBos G R, 2007, CHOICE REV ONLINE, DOI DOI 10.5860/CHOICE.44-3029
   Weinberg G.M., 1998, PSYCHOL COMPUTER PRO
   Whyte G, 1997, ORGAN BEHAV HUM DEC, V69, P75, DOI 10.1006/obhd.1996.2674
   Wirfs-Brock RJ, 2007, IEEE SOFTWARE, V24, P13, DOI 10.1109/MS.2007.108
   Wohlin C., 2012, Experimentation in Software Engineering
   Yechiam E, 2008, JUDGM DECIS MAK, V3, P493
   Yin R.K., 2009, CASE STUDIES DESIGN, V4th
   Zsambok C. E., 2014, NATURALISTIC DECISIO
NR 105
TC 71
Z9 77
U1 8
U2 41
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD DEC 1
PY 2020
VL 46
IS 12
BP 1318
EP 1339
DI 10.1109/TSE.2018.2877759
PG 22
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science; Engineering
GA PD6GQ
UT WOS:000597780900003
OA Green Submitted, Green Published, Green Accepted
DA 2024-07-18
ER

PT J
AU Wen, M
   Wu, RX
   Cheung, SC
AF Wen, Ming
   Wu, Rongxin
   Cheung, Shing-Chi
TI How Well Do Change Sequences Predict Defects? Sequence Learning from
   Software Changes
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Measurement; Software; Predictive models; Semantics; History; Machine
   learning; Feature extraction; Defect prediction; process metrics;
   sequence learning
ID FAULT PREDICTION; CODE; CLASSIFICATION; METRICS; MODELS
AB Software defect prediction, which aims to identify defective modules, can assist developers in finding bugs and prioritizing limited quality assurance resources. Various features to build defect prediction models have been proposed and evaluated. Among them, process metrics are one important category. Yet, existing process metrics are mainly encoded manually from change histories and ignore the sequential information arising from the changes during software evolution. Are the change sequences derived from such information useful to characterize buggy program modules? How can we leverage such sequences to build good defect prediction models? Unlike traditional process metrics used for existing defect prediction models, change sequences are mostly vectors of variable length. This makes it difficult to apply such sequences directly in prediction models that are driven by conventional classifiers. To resolve this challenge, we utilize Recurrent Neural Network (RNN), which is a deep learning technique, to encode features from sequence data automatically. In this paper, we propose a novel approach called Fences, which extracts six types of change sequences covering different aspects of software changes via fine-grained change analysis. It approaches defects prediction by mapping it to a sequence labeling problem solvable by RNN. Our evaluations on 10 open source projects show that Fences can predict defects with high performance. In particular, our approach achieves an average F-measure of 0.657, which improves the prediction models built on traditional metrics significantly. The improvements vary from 31.6 to 46.8 percent on average. In terms of AUC, Fences achieves an average value of 0.892, and the improvements over baselines vary from 4.2 to 16.1 percent. Fences also outperforms the state-of-the-art technique which learns semantic features automatically from static code via deep learning.
C1 [Wen, Ming; Wu, Rongxin; Cheung, Shing-Chi] Hong Kong Univ Sci & Technol, Dept Comp Sci & Engn, Kowloon, Clear Water Bay, Hong Kong, Peoples R China.
C3 Hong Kong University of Science & Technology
RP Wu, RX (corresponding author), Hong Kong Univ Sci & Technol, Dept Comp Sci & Engn, Kowloon, Clear Water Bay, Hong Kong, Peoples R China.
EM mwenaa@cse.ust.hk; wurongxin@cse.ust.hk; scc@cse.ust.hk
RI Liu, Chenyu/KBQ-8899-2024; wu, rongxin/F-3999-2016; li,
   jing/KHY-5337-2024; Cheung, Shing Chi/U-5882-2018
OI Cheung, Shing Chi/0000-0002-3508-7172; Wu, Rongxin/0000-0002-4648-3795
FU Hong Kong RGC/GRF [16202917]
FX This work is supported by the Hong Kong RGC/GRF grant 16202917 and 2018
   MSRA collaborative research fund.
CR Arisholm E, 2010, J SYST SOFTWARE, V83, P2, DOI 10.1016/j.jss.2009.06.055
   Bacchelli A, 2010, LECT NOTES COMPUT SC, V6013, P59
   Bernstein A., 2007, 9 INT WORKSHOP PRINC, P11
   Bird C., 2011, P 19 ACM SIGSOFT S 1, P4, DOI DOI 10.1145/2025113.2025119
   Canfora G, 2013, 2013 IEEE SIXTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST 2013), P252, DOI 10.1109/ICST.2013.38
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   D'Ambros Marco, 2010, Proceedings of the 2010 7th IEEE Working Conference on Mining Software Repositories (MSR 2010), P31, DOI 10.1109/MSR.2010.5463279
   D'Ambros M, 2012, EMPIR SOFTW ENG, V17, P531, DOI 10.1007/s10664-011-9173-9
   D'Ambros M, 2009, WORK CONF REVERSE EN, P135, DOI 10.1109/WCRE.2009.19
   Dougherty J., 1995, Machine Learning. Proceedings of the Twelfth International Conference on Machine Learning, P194
   Elish KO, 2008, J SYST SOFTWARE, V81, P649, DOI 10.1016/j.jss.2007.07.040
   Falleri Jean-Remy, 2014, P 29 ACM IEEE INT C, P313
   Gers FA, 2000, NEURAL COMPUT, V12, P2451, DOI 10.1162/089976600300015015
   Giger E, 2011, P 8 WORK C MIN SOFTW, P83, DOI [10.1145/1985441.1985456, DOI 10.1145/1985441.1985456]
   Giger E, 2012, INT SYMP EMP SOFTWAR, P171, DOI 10.1145/2372251.2372285
   Giger Emanuel., 2011, P 12 INT WORKSHOP PR, P51
   Gorunescu F, 2011, INTEL SYST REF LIBR, P1, DOI 10.1007/978-3-642-19721-5
   Graves A, 2014, PR MACH LEARN RES, V32, P1764
   Graves A, 2012, STUD COMPUT INTELL, V385, P37
   Graves TL, 2000, IEEE T SOFTWARE ENG, V26, P653, DOI 10.1109/32.859533
   Hall T, 2012, IEEE T SOFTWARE ENG, V38, P1276, DOI 10.1109/TSE.2011.103
   Harrison R, 1998, IEEE T SOFTWARE ENG, V24, P491, DOI 10.1109/32.689404
   Hassan AE, 2005, PROC IEEE INT CONF S, P263
   Hassan AE, 2009, PROC INT CONF SOFTW, P78, DOI 10.1109/ICSE.2009.5070510
   Hata H, 2012, PROC INT CONF SOFTW, P200, DOI 10.1109/ICSE.2012.6227193
   Hochreiter S, 1997, NEURAL COMPUT, V9, P1735, DOI [10.1162/neco.1997.9.1.1, 10.1007/978-3-642-24797-2]
   Jiang T, 2013, IEEE INT CONF AUTOM, P279, DOI 10.1109/ASE.2013.6693087
   Jing XY, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P414, DOI 10.1145/2568225.2568320
   Jureczko M., 2010, Model Methods Syst Dependability Oficyna Wydawnicza Politech Wroclawskiej, P69
   Kamei Yasutaka, 2007, 2007 First International Symposium on Empirical Software Engineering and Measurement, P196
   Khoshgoftaar TM, 2002, EIGHTH IEEE SYMPOSIUM ON SOFTWARE METRICS, PROCEEDINGS, P203, DOI 10.1109/METRIC.2002.1011339
   Kim S, 2007, PROC INT CONF SOFTW, P489
   Knab P., 2006, P 2006 INT WORKSHOP, P119
   Lessmann S, 2008, IEEE T SOFTWARE ENG, V34, P485, DOI 10.1109/TSE.2008.35
   Li M, 2012, AUTOMAT SOFTW ENG, V19, P201, DOI 10.1007/s10515-011-0092-1
   Liu H, 2002, DATA MIN KNOWL DISC, V6, P393, DOI 10.1023/A:1016304305535
   Liu SJ, 2014, PROCEEDINGS OF THE 52ND ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, VOL 1, P1491
   Maas Andrew, 2011, P 49 ANN M ASS COMP
   MANN HB, 1947, ANN MATH STAT, V18, P50, DOI 10.1214/aoms/1177730491
   Marcus A, 2008, IEEE T SOFTWARE ENG, V34, P287, DOI 10.1109/TSE.2007.70768
   McCabe T. J., 1976, IEEE Transactions on Software Engineering, VSE-2, P308, DOI 10.1109/TSE.1976.233837
   Menzies T, 2010, AUTOMAT SOFTW ENG, V17, P375, DOI 10.1007/s10515-010-0069-5
   Moser R, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P181, DOI 10.1145/1368088.1368114
   Nagappan N, 2005, PROC INT CONF SOFTW, P284, DOI 10.1145/1062455.1062514
   Nagappan N, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P521, DOI 10.1145/1368088.1368160
   Nam J, 2015, IEEE INT CONF AUTOM, P452, DOI 10.1109/ASE.2015.56
   Nam J, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P382, DOI 10.1109/ICSE.2013.6606584
   Purushothaman R, 2005, IEEE T SOFTWARE ENG, V31, P511, DOI 10.1109/TSE.2005.74
   Radjenovic D, 2013, INFORM SOFTWARE TECH, V55, P1397, DOI 10.1016/j.infsof.2013.02.009
   Rahman F, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P432, DOI 10.1109/ICSE.2013.6606589
   Rahman F, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P491, DOI 10.1145/1985793.1985860
   Rahman Foyzur, 2013, P 2013 9 JOINT M FDN, P147
   Ratzinger J, 2007, 14TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P80, DOI 10.1109/WCRE.2007.39
   Raychev V, 2014, ACM SIGPLAN NOTICES, V49, P419, DOI [10.1145/2594291.2594321, 10.1145/2666356.2594321]
   Shen Y, 2013, IEEE IMTC P, P1045
   Sutskever I, 2014, ADV NEUR IN, V27
   Tan M, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P99, DOI 10.1109/ICSE.2015.139
   Tantithamthavorn C, 2016, PROC INT CONF SOFTW, P321, DOI 10.1145/2884781.2884857
   Tao W., 2010, PROC INT C COMPUT IN, P1
   Wang S, 2016, PROC INT CONF SOFTW, P297, DOI 10.1145/2884781.2884804
   Wen M, 2016, IEEE INT CONF AUTOM, P262, DOI 10.1145/2970276.2970359
   White M, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P334, DOI 10.1109/MSR.2015.38
   Yang XL, 2015, 2015 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE SECURITY AND RELIABILITY (QRS 2015), P17, DOI 10.1109/QRS.2015.14
   Yoon KC, 2011, ASIA PACIF MICROWAVE, P311
   Zhang F, 2016, PROC INT CONF SOFTW, P309, DOI 10.1145/2884781.2884839
   Zhang F, 2016, EMPIR SOFTW ENG, V21, P2107, DOI 10.1007/s10664-015-9396-2
   Zhang HY, 2009, PROC IEEE INT CONF S, P274, DOI 10.1109/ICSM.2009.5306304
   Zhong S, 2004, EIGHTH IEEE INTERNATIONAL SYMPOSIUM ON HIGH ASSURANCE SYSTEMS ENGINEERING, PROCEEDINGS, P149
NR 68
TC 19
Z9 21
U1 0
U2 20
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD NOV 1
PY 2020
VL 46
IS 11
BP 1155
EP 1175
DI 10.1109/TSE.2018.2876256
PG 21
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA OR0UE
UT WOS:000589192400001
DA 2024-07-18
ER

PT J
AU Zhang, XD
   Yang, ZJ
   Zheng, QH
   Hao, Y
   Liu, P
   Liu, T
AF Zhang, Xiaodong
   Yang, Zijiang
   Zheng, Qinghua
   Hao, Yu
   Liu, Pei
   Liu, Ting
TI Tell You a Definite Answer: Whether Your Data is Tainted During Thread
   Scheduling
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Instruction sets; Security; Tools; Monitoring; Schedules; Prototypes;
   Taint analysis; multithreaded programs; symbolic analysis; encoding;
   guided execution
ID SYMBOLIC ANALYSIS; FRAMEWORK
AB With the advent of multicore processors, there is a great need to write parallel programs to take advantage of parallel computing resources. However, due to the nondeterminism of parallel execution, the malware behaviors sensitive to thread scheduling are extremely difficult to detect. Dynamic taint analysis is widely used in security problems. By serializing a multithreaded execution and then propagating taint tags along the serialized schedule, existing dynamic taint analysis techniques lead to under-tainting with respect to other possible interleavings under the same input. In this paper, we propose an approach called DSTAM that integrates symbolic analysis and guided execution to systematically detect tainted instances on all possible executions under a given input. Symbolic analysis infers alternative interleavings of an executed trace that cover new tainted instances, and computes thread schedules that guide future executions. Guided execution explores new execution traces that drive future symbolic analysis. We have implemented a prototype as part of an educational tool that teaches secure C programming, where accuracy is more critical than efficiency. To the best of our knowledge, DSTAM is the first algorithm that addresses the challenge of taint analysis for multithreaded program under fixed inputs.
C1 [Zhang, Xiaodong; Zheng, Qinghua; Hao, Yu; Liu, Pei; Liu, Ting] Xi An Jiao Tong Univ, Key Lab Intelligent Networks & Network Secur, Minist Educ, Xian 710000, Shaanxi, Peoples R China.
   [Yang, Zijiang] Western Michigan Univ, Dept Comp Sci, Kalamazoo, MI 49008 USA.
C3 Xi'an Jiaotong University; Western Michigan University
RP Liu, T (corresponding author), Xi An Jiao Tong Univ, Key Lab Intelligent Networks & Network Secur, Minist Educ, Xian 710000, Shaanxi, Peoples R China.
EM xdzhang@sei.xjtu.edu.cn; zijiang.yang@wmich.edu;
   qhzheng@mail.xjtu.edu.cn; yhao@sei.xjtu.edu.cn; pliu@sei.xjtu.edu.cn;
   tingliu@mail.xjtu.edu.cn
RI Hao, Yu/JDD-2851-2023
OI Hao, Yu/0000-0002-3944-3162; Liu, Ting/0000-0002-7600-0934
FU National Key R&D Program of China [2016YFB1000903]; National Natural
   Science Foundation of China [61632015, 61772408, U1766215, U1736205,
   61721002, 61472318, 61532015]; Fok Ying-Tong Education Foundation
   [151067]; Ministry of Education Innovation Research Team [IRT_17R86];
   Project of China Knowledge Centre for Engineering Science and Technology
FX This work was supported by the National Key R&D Program of China
   (2016YFB1000903), National Natural Science Foundation of China
   (61632015, 61772408, U1766215, U1736205, 61721002, 61472318, 61532015),
   Fok Ying-Tong Education Foundation (151067), Ministry of Education
   Innovation Research Team (IRT_17R86), and Project of China Knowledge
   Centre for Engineering Science and Technology.
CR [Anonymous], 2005, NDSS
   [Anonymous], 2004, THESIS
   [Anonymous], 2011, P NETW DISTR SYST SE
   Bao T., 2010, Proceedings of the 19th International Symposium on Software Testing and Analysis, ISSTA '10, P13
   Bienia C, 2008, PACT'08: PROCEEDINGS OF THE SEVENTEENTH INTERNATIONAL CONFERENCE ON PARALLEL ARCHITECTURES AND COMPILATION TECHNIQUES, P72, DOI 10.1145/1454115.1454128
   Cadar C., 2008, Proceedings of the 8th USENIX conference on Operating systems design and implementation, OSDI'08, (USA), P209
   Ceara Dumitru, 2010, Proceedings of the IEEE Third International Conference on Software Testing Verification and Validation - Workshops (ICSTW 2010), P371, DOI 10.1109/ICSTW.2010.28
   Chang W, 2008, CCS'08: PROCEEDINGS OF THE 15TH ACM CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P39
   Chen S, 2008, CONF PROC INT SYMP C, P377, DOI 10.1109/ISCA.2008.20
   Cheng Q., 2006, IEEE 11 S COMPUTCOMM, P749
   Ciortea Liviu, 2009, Operating Systems Review, V43, P5, DOI 10.1145/1713254.1713257
   Clause J., 2007, P 2007 INT S SOFTW T, DOI [10.1145/1273463.1273490, DOI 10.1145/1273463.1273490]
   Coons KE, 2010, ACM SIGPLAN NOTICES, V45, P15, DOI 10.1145/1837853.1693458
   Cordeiro L, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P331, DOI 10.1145/1985793.1985839
   de Moura L, 2008, LECT NOTES COMPUT SC, V4963, P337, DOI 10.1007/978-3-540-78800-3_24
   Dongyoon Lee, 2009, Proceedings of the 2009 42nd Annual IEEE/ACM International Symposium on Microarchitecture (MICRO 2009), P564
   Fan M, 2018, IEEE T INF FOREN SEC, V13, P1890, DOI 10.1109/TIFS.2018.2806891
   Fan M, 2017, IEEE T INF FOREN SEC, V12, P1772, DOI 10.1109/TIFS.2017.2687880
   Farzan A., 2012, P ACM SIGSOFT 20 INT
   Ganai M., 2012, P ACM SIGSOFT 20 INT
   Ganesh V, 2009, PROC INT CONF SOFTW, P474, DOI 10.1109/ICSE.2009.5070546
   Goodstein ML, 2010, ASPLOS XV: FIFTEENTH INTERNATIONAL CONFERENCE ON ARCHITECTURAL SUPPORT FOR PROGRAMMING LANGUAGES AND OPERATING SYSTEMS, P257
   Hu XSR, 2012, ACM IEEE INT CONF CY, P218, DOI 10.1109/ICCPS.2012.41
   Huang J, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P439, DOI 10.1145/2786805.2786840
   Huang J, 2014, ACM SIGPLAN NOTICES, V49, P337, DOI [10.1145/2666356.2594315, 10.1145/2594291.2594315]
   Huang J, 2013, ACM SIGPLAN NOTICES, V48, P141, DOI 10.1145/2499370.2462167
   Huang YS, 2011, IEEE COMP SOC ANN, P144, DOI 10.1109/ISVLSI.2011.16
   Jalbert N., 2010, Proceedings of the Eighteenth ACM SIGSOFT International Symposium on Foundations of Software Engineering, FSE'10, P57, DOI DOI 10.1145/1882291.1882302
   Khoshnood Sepideh, 2015, P 2015 INT S SOFTW E, P165
   Lam LC, 2006, ANN COMPUT SECURITY, P463, DOI 10.1109/ACSAC.2006.6
   Lattner C, 2004, INT SYM CODE GENER, P75, DOI 10.1109/CGO.2004.1281665
   Lee D, 2011, INT S HIGH PERF COMP, P357, DOI 10.1109/HPCA.2011.5749743
   Luk CK, 2005, ACM SIGPLAN NOTICES, V40, P190, DOI 10.1145/1064978.1065034
   Ma JX, 2014, INT C INFORM ASSUR S, P18, DOI 10.1109/ISIAS.2014.7064628
   Min JW, 2013, LECT NOTES COMPUT SC, V7973, P175, DOI 10.1007/978-3-642-39646-5_13
   Mounier Laurent, 2012, Leveraging Applications of Formal Methods, Verification and Validation. Technologies for Mastering Change. Technologies for Mastering Change. Proceedings of the 5th International Symposium, ISoLA 2012, P358, DOI 10.1007/978-3-642-34026-0_27
   Musuvathi M., 2008, Proceedings of the 8th USENIX conference on Operating systems design and implementation, OSDI'08, P267
   Musuvathi M, 2007, PLDI'07: PROCEEDINGS OF THE 2007 ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P446, DOI 10.1145/1250734.1250785
   Nethercote N, 2007, ACM SIGPLAN NOTICES, V42, P89, DOI 10.1145/1273442.1250746
   Ng B. H., 2013, P 6 ACM EUR WORKSH S
   Qin F, 2006, INT SYMP MICROARCH, P135
   Ruwase O, 2008, SPAA'08: PROCEEDINGS OF THE TWENTIETH ANNUAL SYMPOSIUM ON PARALLELISM IN ALGORITHMS AND ARCHITECTURES, P35
   Schwartz EJ, 2010, P IEEE S SECUR PRIV, P317, DOI 10.1109/SP.2010.26
   Shi QK, 2016, IEEE T SOFTWARE ENG, V42, P285, DOI 10.1109/TSE.2015.2477820
   Song D, 2008, LECT NOTES COMPUT SC, V5352, P1, DOI 10.1007/978-3-540-89862-7_1
   Tian ZZ, 2018, IEEE T SOFTWARE ENG, V44, P491, DOI 10.1109/TSE.2017.2688383
   Vachharajani N, 2004, INT SYMP MICROARCH, P243
   Wang C, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P221, DOI 10.1145/1985793.1985824
   Wang C, 2009, LECT NOTES COMPUT SC, V5850, P256, DOI 10.1007/978-3-642-05089-3_17
   Wang C, 2010, LECT NOTES COMPUT SC, V6015, P328, DOI 10.1007/978-3-642-12002-2_27
   Wang HJ, 2017, IEEE T SOFTWARE ENG, V43, P252, DOI 10.1109/TSE.2016.2584063
   WOO SC, 1995, ACM COMP AR, P24, DOI 10.1109/ISCA.1995.524546
   Xu W, 2006, USENIX ASSOCIATION PROCEEDINGS OF THE 15TH USENIX SECURITY SYMPOSIUM, P121
   Yang Junfeng., 2012, P 4 C HOT TOPICS PAR
   Yin H, 2007, CCS'07: PROCEEDINGS OF THE 14TH ACM CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P116
   Yip A, 2009, SOSP'09: PROCEEDINGS OF THE TWENTY-SECOND ACM SIGOPS SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES, P291
   Yu J, 2009, CONF PROC INT SYMP C, P325, DOI 10.1145/1555815.1555796
   Yu JJ, 2012, PROCEEDINGS OF THE ASME TURBO EXPO 2012, VOL 7, PTS A AND B, P485, DOI 10.1145/2398857.2384651
   Zhang XD, 2016, 2016 INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, TESTING AND EVOLUTION (SATE 2016), P78, DOI 10.1109/SATE.2016.20
   Zhu David Yu, 2011, Operating Systems Review, V45, P142, DOI 10.1145/1945023.1945039
NR 60
TC 1
Z9 2
U1 0
U2 12
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD SEPT 1
PY 2020
VL 46
IS 9
BP 916
EP 931
DI 10.1109/TSE.2018.2871666
PG 16
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA NR7JB
UT WOS:000571735900001
DA 2024-07-18
ER

PT J
AU Fan, YR
   Xia, X
   Lo, D
   Hassan, AE
AF Fan, Yuanrui
   Xia, Xin
   Lo, David
   Hassan, Ahmed E.
TI Chaff from the Wheat: Characterizing and Determining Valid Bug Reports
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Computer bugs; Feature extraction; Collaboration; Forestry; Support
   vector machines; Task analysis; Software; Bug report; feature
   generation; machine learning
ID LEARNING ALGORITHMS; SOFTWARE; PREDICTION; CENTRALITY; DEVELOPERS;
   ACCURACY
AB Developers use bug reports to triage and fix bugs. When triaging a bug report, developers must decide whether the bug report is valid (i.e., a real bug). A large amount of bug reports are submitted every day, with many of them end up being invalid reports. Manually determining valid bug report is a difficult and tedious task. Thus, an approach that can automatically analyze the validity of a bug report and determine whether a report is valid can help developers prioritize their triaging tasks and avoid wasting time and effort on invalid bug reports. In this study, motivated by the above needs, we propose an approach which can determine whether a newly submitted bug report is valid. Our approach first extracts 33 features from bug reports. The extracted features are grouped along 5 dimensions, i.e., reporter experience, collaboration network, completeness, readability and text. Based on these features, we use a random forest classifier to identify valid bug reports. To evaluate the effectiveness of our approach, we experiment on large-scale datasets containing a total of 560,697 bug reports from five open source projects (i.e., Eclipse, Netbeans, Mozilla, Firefox and Thunderbird). On average, across the five datasets, our approach achieves an F1-score for valid bug reports and F1-score for invalid ones of 0.74 and 0.67, respectively. Moreover, our approach achieves an average AUC of 0.81. In terms of AUC and F1-scores for valid and invalid bug reports, our approach statistically significantly outperforms two baselines using features that are proposed by Zanetti et al. [104] . We also study the most important features that distinguish valid bug reports from invalid ones. We find that the textual features of a bug report and reporter's experience are the most important factors to distinguish valid bug reports from invalid ones.
C1 [Fan, Yuanrui] Zhejiang Univ, Coll Comp Sci & Technol, Hangzhou 310027, Zhejiang, Peoples R China.
   [Xia, Xin] Monash Univ, Fac Informat Technol, Melbourne, Vic, Australia.
   [Lo, David] Singapore Management Univ, Sch Informat Syst, Singapore 188065, Singapore.
   [Hassan, Ahmed E.] Queens Univ, Sch Comp, Kingston, ON K7L 3N6, Canada.
C3 Zhejiang University; Monash University; Singapore Management University;
   Queens University - Canada
RP Xia, X (corresponding author), Monash Univ, Fac Informat Technol, Melbourne, Vic, Australia.
EM yrfan@zju.edu.cn; xin.xia@monash.edu; davidlo@smu.edu.sg;
   ahmed@cs.queensu.ca
RI Xia, Xin/AAD-6217-2022; KHALIFA, AHMED khalifa/HKF-2246-2023; Lo,
   David/A-2493-2012
OI Xia, Xin/0000-0002-6302-3256; KHALIFA, AHMED
   khalifa/0000-0002-2918-7572; Fan, Yuanrui/0000-0001-5234-0152; Lo,
   David/0000-0002-4367-7201
FU National Key Research and Development Program of China [2018YFB1003904];
   NSFC Program [61602403]
FX This research was partially supported by the National Key Research and
   Development Program of China (2018YFB1003904) and NSFC Program (No.
   61602403).
CR Abdi H, 2007, ENCY MEASUREMENT STA, P103, DOI DOI 10.4135/9781412952644
   Agrawal A, 2018, INFORM SOFTWARE TECH, V98, P74, DOI 10.1016/j.infsof.2018.02.005
   ANDERSON J, 1983, J READING, V26, P490
   Nguyen AT, 2012, IEEE INT CONF AUTOM, P70, DOI 10.1145/2351676.2351687
   [Anonymous], 2004, Software Engineering and Knowledge Engineering
   [Anonymous], 2007, P 22 IEEE ACM INT C, DOI DOI 10.1145/1321631.1321639
   Anvik John, 2006, P 28 INT C SOFTWARE, P361, DOI DOI 10.1145/1134285.1134336
   Aranda J, 2009, PROC INT CONF SOFTW, P298, DOI 10.1109/ICSE.2009.5070530
   Bao LF, 2017, IEEE WORK CONF MIN S, P170, DOI 10.1109/MSR.2017.58
   Bertram D, 2010, 2010 ACM CONFERENCE ON COMPUTER SUPPORTED COOPERATIVE WORK, P291
   Bettenburg Nicolas, 2010, Proceedings of the 18th IEEE International Conference on Program Comprehension (ICPC 2010), P124, DOI 10.1109/ICPC.2010.46
   Bettenburg N, 2013, EMPIR SOFTW ENG, V18, P375, DOI 10.1007/s10664-012-9205-0
   Bhattacharya P, 2010, PROC IEEE INT CONF S
   Bhattacharya Pamela., 2011, PROCEEDING 8 WORKING, P207, DOI DOI 10.1145/1985441.1985472
   BONACICH P, 1987, AM J SOCIOL, V92, P1170, DOI 10.1086/228631
   Bradley AP, 1997, PATTERN RECOGN, V30, P1145, DOI 10.1016/S0031-3203(96)00142-2
   Brandes U, 2007, INT J BIFURCAT CHAOS, V17, P2303, DOI 10.1142/S0218127407018403
   Breiman L., 2001, Machine Learning, V45, P5, DOI 10.1023/A:1010933404324
   Carmi S, 2007, P NATL ACAD SCI USA, V104, P11150, DOI 10.1073/pnas.0701175104
   Cavnar W.B., 1994, Proceedings of SDAIR-94, 3rd Annual Symposium on Document Analysis and Information Retrieval, V48113, P161
   Chang CC, 2011, ACM T INTEL SYST TEC, V2, DOI 10.1145/1961189.1961199
   Chaparro O, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P396, DOI 10.1145/3106237.3106285
   Chaves-González JM, 2015, APPL MATH COMPUT, V252, P1, DOI 10.1016/j.amc.2014.11.093
   Chen SH, 2011, IEEE C EVOL COMPUTAT, P45, DOI 10.1145/1806799.1806811
   Cliff N., 2014, Ordinal Methods for Behavioral Data Analysis
   COLEMAN M, 1975, J APPL PSYCHOL, V60, P283, DOI 10.1037/h0076540
   da Costa DA, 2014, PROC IEEE INT CONF S, P281, DOI 10.1109/ICSME.2014.50
   Dong G., 2018, Feature Engineering for Machine Learning and Data Analytics
   Ehrlich Kate, 2012, Proceedings of the ACM 2012 Conference on Computer Supported Cooperative Work, CSCW '12, P945
   Fan YR, 2018, EMPIR SOFTW ENG, V23, P3346, DOI 10.1007/s10664-018-9602-0
   Flesch RF, 1979, How to write plain English
   Flesch R, 1948, J APPL PSYCHOL, V32, P221, DOI 10.1037/h0057532
   FREEMAN LC, 1979, SOC NETWORKS, V1, P215, DOI 10.1016/0378-8733(78)90021-7
   Fu W., 2016, ARXIV160902613
   Fu W, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P49, DOI 10.1145/3106237.3106256
   Gunning R, 1952, TECHNIQUE CLEAR WRIT
   Guo PJ, 2010, Proceedings of the 32nd ACM/IEEE International Conference on Software Engineering, P495
   Guyon I., 2003, Journal of Machine Learning Research, V3, P1157, DOI 10.1162/153244303322753616
   Hagberg A. A., 2008, EXPLORING NETWORK ST, P11, DOI DOI 10.1016/J.JELECTROCARD.2010.09.003
   Hall M., 2009, SIGKDD EXPLORATIONS, V11, P10, DOI [10.1145/1656274.1656278, DOI 10.1145/1656274.1656278]
   Han J, 2012, MOR KAUF D, P1
   Hosmer DW, 2013, WILEY SER PROBAB ST, P1, DOI 10.1002/9781118548387
   Huang J, 2005, IEEE T KNOWL DATA EN, V17, P299, DOI 10.1109/TKDE.2005.50
   Huang Q, 2018, EMPIR SOFTW ENG, V23, P418, DOI 10.1007/s10664-017-9522-4
   Jeong G, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P111, DOI 10.1145/1595696.1595715
   Jiang T, 2013, IEEE INT CONF AUTOM, P279, DOI 10.1109/ASE.2013.6693087
   Joblin M, 2017, EMPIR SOFTW ENG, V22, P2050, DOI 10.1007/s10664-016-9478-9
   Just S, 2008, 2008 IEEE SYMPOSIUM ON VISUAL LANGUAGES AND HUMAN-CENTRIC COMPUTING, PROCEEDINGS, P82, DOI 10.1109/VLHCC.2008.4639063
   Kim S, 2008, IEEE T SOFTWARE ENG, V34, P181, DOI 10.1109/TSE.2007.70773
   Kincaid J.P., 1975, Derivation of New Readability Formulas (Automated Readability Index, Fog Count and Flesch Reading Ease Formula) for Navy Enlisted Personnel, DOI [DOI 10.21236/ADA006655, 10.21236/ADA006655]
   Kononenko O, 2016, PROC INT CONF SOFTW, P1028, DOI 10.1145/2884781.2884840
   Lamkanfi Ahmed, 2010, Proceedings of the 2010 7th IEEE Working Conference on Mining Software Repositories (MSR 2010), P1, DOI 10.1109/MSR.2010.5463284
   Lessmann S, 2008, IEEE T SOFTWARE ENG, V34, P485, DOI 10.1109/TSE.2008.35
   Li H, 2017, EMPIR SOFTW ENG, V22, P1831, DOI 10.1007/s10664-016-9467-z
   Linstead E, 2009, 2009 6TH IEEE INTERNATIONAL WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES, P99, DOI 10.1109/MSR.2009.5069486
   Lotufo R., 2012, 2012 9th IEEE Working Conference on Mining Software Repositories (MSR 2012), P2, DOI 10.1109/MSR.2012.6224293
   MANN HB, 1947, ANN MATH STAT, V18, P50, DOI 10.1214/aoms/1177730491
   McCallum A., 1998, AAAI 98 WORKSH LEARN, V752, P41, DOI DOI 10.1109/TSMC.1985.6313426
   MCLAUGHLIN GH, 1969, J READING, V12, P639
   Menzies T, 2008, PROC IEEE INT CONF S, P346, DOI 10.1109/ICSM.2008.4658083
   MOCKUS A, 2014, P INT C SOFTW ENG
   Osman H, 2013, PROC IEEE INT CONF S, P140, DOI 10.1109/ICSM.2013.25
   Platt JC, 1999, ADVANCES IN KERNEL METHODS, P185
   Premraj R., 2008, P 2008 INT WORKING C, P27
   Rajbahadur GK, 2017, IEEE WORK CONF MIN S, P135, DOI 10.1109/MSR.2017.4
   REIS C.R., 2002, P OPEN SOURCE SOFTWA, P155
   Rennie J.D., 2003, Proceedings of the 20th International Conference on Machine Learning, P616
   Saramäki J, 2007, PHYS REV E, V75, DOI 10.1103/PhysRevE.75.027105
   Scandariato R, 2014, IEEE T SOFTWARE ENG, V40, P993, DOI 10.1109/TSE.2014.2340398
   Schroter Adrian, 2010, Proceedings of the 2010 7th IEEE Working Conference on Mining Software Repositories (MSR 2010), P118, DOI 10.1109/MSR.2010.5463280
   SCOTT AJ, 1974, BIOMETRICS, V30, P507, DOI 10.2307/2529204
   Shihab E., 2010, Proceedings 17th Working Conference on Reverse Engineering (WCRE 2010), P249, DOI 10.1109/WCRE.2010.36
   Shihab E, 2013, EMPIR SOFTW ENG, V18, P1005, DOI 10.1007/s10664-012-9228-6
   Shokripour R, 2013, IEEE WORK CONF MIN S, P2, DOI 10.1109/MSR.2013.6623997
   Smith E A, 1967, AMRL TR, P1
   Storn R, 1997, J GLOBAL OPTIM, V11, P341, DOI 10.1023/A:1008202821328
   Su J, 2008, 2008 PROCEEDINGS OF INFORMATION TECHNOLOGY AND ENVIRONMENTAL SYSTEM SCIENCES: ITESS 2008, VOL 2, P160
   Sun C, 2011, INT J CHEM ENG, V2011, DOI 10.1155/2011/545234
   Tamrawi A, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P884, DOI 10.1145/1985793.1985934
   TANTITHAMTHAVOR.C, 2018, FOREST, V15, P71
   Tantithamthavorn C, 2017, IEEE T SOFTWARE ENG, V43, P1, DOI 10.1109/TSE.2016.2584050
   Tian Y, 2012, APPL MECH MATER, V166-169, P215, DOI 10.4028/www.scientific.net/AMM.166-169.215
   Tian Y, 2015, EMPIR SOFTW ENG, V20, P1354, DOI 10.1007/s10664-014-9331-y
   Tian Y, 2015, PROC IEEE INT CONF S, P301, DOI 10.1109/ICSM.2015.7332476
   Valdivia-Garcia Harold., 2014, P 11 WORKING C MININ, P72
   Wang XY, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P461, DOI 10.1145/1368088.1368151
   WEIMER W, 2006, P 5 INT C GEN PROGR, P181
   Widmer G, 1996, MACH LEARN, V23, P69, DOI 10.1023/A:1018046501280
   WILCOXON F, 1945, BIOMETRICS BULL, V1, P80, DOI 10.1093/jee/39.2.269
   WILLIAMSON DF, 1989, ANN INTERN MED, V110, P916, DOI 10.7326/0003-4819-110-11-916
   Wolpert DH, 1999, MACH LEARN, V35, P41, DOI 10.1023/A:1007519102914
   Wu XD, 2008, KNOWL INF SYST, V14, P1, DOI 10.1007/s10115-007-0114-2
   Xia X, 2016, ESEM'16: PROCEEDINGS OF THE 10TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, DOI 10.1145/2961111.2962606
   Xia X, 2017, EMPIR SOFTW ENG, V22, P3149, DOI 10.1007/s10664-017-9514-4
   Xia X, 2017, IEEE T SOFTWARE ENG, V43, P272, DOI 10.1109/TSE.2016.2576454
   Xia X, 2015, INFORM SOFTWARE TECH, V61, P93, DOI 10.1016/j.infsof.2014.12.006
   Xia X, 2015, J SOFTW-EVOL PROC, V27, P195, DOI 10.1002/smr.1706
   Xia X, 2015, AUTOMAT SOFTW ENG, V22, P75, DOI 10.1007/s10515-014-0162-2
   Xia X, 2013, WORK CONF REVERSE EN, P72, DOI 10.1109/WCRE.2013.6671282
   Xia X, 2013, EUR CON SFTWR MTNCE, P331, DOI 10.1109/CSMR.2013.43
   Yan M, 2019, IEEE T SOFTWARE ENG, V45, P1211, DOI 10.1109/TSE.2018.2831232
   Yang Y., 1997, ICML, V97, P412
   Zanetti MS, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P1032, DOI 10.1109/ICSE.2013.6606653
   Zhang HY, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P1042, DOI 10.1109/ICSE.2013.6606654
   Zhang T, 2017, INT C PROGRAM COMPRE, P230, DOI 10.1109/ICPC.2017.28
   Zhou Y, 2014, PROC IEEE INT CONF S, P311, DOI 10.1109/ICSME.2014.53
   Zimmermann T, 2012, PROC INT CONF SOFTW, P1074, DOI 10.1109/ICSE.2012.6227112
   Zimmermann T, 2010, IEEE T SOFTWARE ENG, V36, P618, DOI 10.1109/TSE.2010.63
NR 108
TC 53
Z9 59
U1 2
U2 14
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAY 1
PY 2020
VL 46
IS 5
BP 495
EP 525
DI 10.1109/TSE.2018.2864217
PG 31
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science; Engineering
GA LS2LR
UT WOS:000536221400002
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Amann, S
   Nguyen, HA
   Nadi, S
   Nguyen, TN
   Mezini, M
AF Amann, Sven
   Hoan Anh Nguyen
   Nadi, Sarah
   Nguyen, Tien N.
   Mezini, Mira
TI A Systematic Evaluation of Static API-Misuse Detectors
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Detectors; Benchmark testing; Classification; Systematics; Computer
   bugs; API-misuse detection; survey; misuse classification; benchmark;
   MUBench
AB Application Programming Interfaces (APIs) often have usage constraints, such as restrictions on call order or call conditions. API misuses, i.e., violations of these constraints, may lead to software crashes, bugs, and vulnerabilities. Though researchers developed many API-misuse detectors over the last two decades, recent studies show that API misuses are still prevalent. Therefore, we need to understand the capabilities and limitations of existing detectors in order to advance the state of the art. In this paper, we present the first-ever qualitative and quantitative evaluation that compares static API-misuse detectors along the same dimensions, and with original author validation. To accomplish this, we develop MuC, a classification of API misuses, and MuBenchPipe, an automated benchmark for detector comparison, on top of our misuse dataset, MuBench. Our results show that the capabilities of existing detectors vary greatly and that existing detectors, though capable of detecting misuses, suffer from extremely low precision and recall. A systematic root-cause analysis reveals that, most importantly, detectors need to go beyond the naive assumption that a deviation from the most-frequent usage corresponds to a misuse and need to obtain additional usage examples to train their models. We present possible directions towards more-powerful API-misuse detectors.
C1 [Amann, Sven] Tech Univ Darmstadt, D-64289 Darmstadt, Germany.
   [Mezini, Mira] Tech Univ Darmstadt, Comp Sci, D-64289 Darmstadt, Germany.
   [Hoan Anh Nguyen] Iowa State Univ, Ames, IA 50011 USA.
   [Nadi, Sarah] Univ Alberta, Edmonton, AB T6G 2R3, Canada.
   [Nguyen, Tien N.] Univ Texas Dallas, Richardson, TX 75080 USA.
C3 Technical University of Darmstadt; Technical University of Darmstadt;
   Iowa State University; University of Alberta; University of Texas
   System; University of Texas Dallas
RP Amann, S (corresponding author), Tech Univ Darmstadt, D-64289 Darmstadt, Germany.
EM amann@st.informatik.tu-darmstadt.de; hoan@iastate.edu; nadi@ualberta.ca;
   tien.n.nguyen@utdallas.edu; mezini@informatik.tu-darmstadt.de
RI Nguyen, Anh/GQQ-3393-2022
OI Nadi, Sarah/0000-0002-0091-6030
FU German Federal Ministry of Education and Research (BMBF) within the
   Software Campus project Eko [01IS12054]; DFG [CRC 1119 CROSSING]; Hessen
   State Ministry for Higher Education, Research and the Arts (HMWK) within
   CRISP
FX We thank our students M. Kammerer and J. Schlitzer for their work on
   MUBENCHPIPE and their help preparing MUBENCH, M. Monperrus for providing
   DMMC, A. Zeller and A. Wasylkowski for providing JADET and TIKANGA, and
   M. Pradel for additional examples for MUBENCH. This work was partially
   funded by the German Federal Ministry of Education and Research (BMBF)
   within the Software Campus project Eko, grant no. 01IS12054, by the DFG
   as part of CRC 1119 CROSSING, and by the Hessen State Ministry for
   Higher Education, Research and the Arts (HMWK) within CRISP. The authors
   assume responsibility for the paper content.
CR Acar Y, 2016, P IEEE S SECUR PRIV, P289, DOI 10.1109/SP.2016.25
   Acharya M, 2009, LECT NOTES COMPUT SC, V5503, P370
   Amann S, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P464, DOI [10.1145/2901739.2903506, 10.1109/MSR.2016.055]
   [Anonymous], 2010, 1152009 IEEE, P1, DOI [DOI 10.1109/IEEESTD.2010.5439063, 10.1109/IEEESTD.2010.5439063]
   [Anonymous], 2010, P 19 INT S SOFTW TES, DOI [10.1145/1831708.1831723, DOI 10.1145/1831708.1831723]
   [Anonymous], 2007, 6th joint meeting of the European Software Engineering Conference and the ACM SIGSOFT Symposium on the Foundations of Software Engineering (ESEC/FSE), DOI DOI 10.1145/1287624.1287632
   [Anonymous], 1997, Formal Concept Analysis: Mathematical Foundations
   Beller M, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P470, DOI 10.1109/SANER.2016.105
   Bessey A, 2010, COMMUN ACM, V53, P66, DOI 10.1145/1646353.1646374
   Brin S., 1997, SIGMOD Record, V26, P255, DOI [10.1145/253262.253327, 10.1145/253262.253325]
   CHILLAREGE R, 1992, IEEE T SOFTWARE ENG, V18, P943, DOI 10.1109/32.177364
   Cifuentes Cristina, 2009, P 2 INT WORKSHOP DEF, P16, DOI DOI 10.1145/1555860.1555866
   Dekel U, 2009, PROC INT CONF SOFTW, P320, DOI 10.1109/ICSE.2009.5070532
   DiBona C., BIDDING FAREWELL GOO
   Egele M., 2013, P 2013 ACM SIGSAC C, P73
   Engler D., 2001, Operating Systems Review, V35, P57, DOI 10.1145/502059.502041
   Fahl S., 2012, ACM CCS 12, P50, DOI DOI 10.1145/2382196.2382205
   Flanagan C, 2002, ACM SIGPLAN NOTICES, V37, P234, DOI 10.1145/543552.512558
   G. Inc, 2017, CLOS COMP
   Georgiev Martin, 2012, P 2012 ACM C COMPUTE, P38
   Glaser B.G., 1967, DISCOVERY GROUNDED T, V46
   GRECHANIK M, 2010, P 32 ACM IEEE INT C, V1, P475
   iText Software, 2017, ITEXT JAV PDF LIB
   Johnson B., 2013, P 35 INT C SOFTW ENG
   Legunsen O, 2016, IEEE INT CONF AUTOM, P602, DOI 10.1145/2970276.2970356
   Li Zhenmin, 2005, P ACM SIGSOFT SOFTW, P306, DOI DOI 10.1145/1081706.1081755
   Lindig C., 2007, MINING PATTERNS VIOL
   Lu Shan, 2005, P WORKSH EV SOFTW DE
   Luo QZ, 2014, LECT NOTES COMPUT SC, V8734, P285, DOI 10.1007/978-3-319-11164-3_24
   McMillan C, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P111, DOI 10.1145/1985793.1985809
   Monperrus M, 2012, EMPIR SOFTW ENG, V17, P703, DOI 10.1007/s10664-011-9186-4
   Monperrus M, 2010, LECT NOTES COMPUT SC, V6183, P2, DOI 10.1007/978-3-642-14107-2_2
   Nadi S, 2016, PROC INT CONF SOFTW, P935, DOI 10.1145/2884781.2884790
   Nguyen TT, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P383, DOI 10.1145/1595696.1595767
   Ponzanelli Luca, 2014, P 11 WORKING C MININ, P102, DOI DOI 10.1145/2597073.2597077
   Pradel M, 2012, PROC INT CONF SOFTW, P288, DOI 10.1109/ICSE.2012.6227185
   Pradel M, 2012, PROC INT CONF SOFTW, P925, DOI 10.1109/ICSE.2012.6227127
   Proksch S, 2015, ACM T SOFTW ENG METH, V25, DOI 10.1145/2744200
   R. U. i. N. Digital Security group, 2017, JMRTD OP SOURC JAV I
   Ramanathan MK, 2007, PROC INT CONF SOFTW, P240
   Ramanathan MK, 2007, PLDI'07: PROCEEDINGS OF THE 2007 ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P123, DOI 10.1145/1250734.1250749
   Robillard MP, 2013, IEEE T SOFTWARE ENG, V39, P613, DOI 10.1109/TSE.2012.63
   Saied MA, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P23, DOI 10.1109/SANER.2015.7081812
   Sharif A, 2013, E3S WEB CONF, V1, DOI 10.1051/e3sconf/20130109001
   Sushine J, 2015, INT C PROGRAM COMPRE, P82, DOI 10.1109/ICPC.2015.17
   Nguyen TT, 2015, IEEE INT CONF AUTOM, P795, DOI 10.1109/ASE.2015.109
   Thummalapenta S, 2009, IEEE INT CONF AUTOM, P283, DOI 10.1109/ASE.2009.72
   Thummalapenta S, 2009, PROC INT CONF SOFTW, P496, DOI 10.1109/ICSE.2009.5070548
   Wasylkowski A, 2011, AUTOMAT SOFTW ENG, V18, P263, DOI 10.1007/s10515-011-0084-1
NR 49
TC 59
Z9 64
U1 0
U2 7
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD DEC 1
PY 2019
VL 45
IS 12
BP 1170
EP 1188
DI 10.1109/TSE.2018.2827384
PG 19
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA JW0NQ
UT WOS:000502756700001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Nayebi, M
   Ruhe, G
AF Nayebi, Maleknaz
   Ruhe, Guenther
TI Asymmetric Release Planning: Compromising Satisfaction against
   Dissatisfaction
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Release planning; bi-objective optimization; stakeholder satisfaction;
   stakeholder dissatisfaction; case study; empirical evaluation
ID SOFTWARE; REQUIREMENTS; ATTRIBUTES
AB Maximizing satisfaction from offering features as part of the upcoming release(s) is different from minimizing dissatisfaction gained from not offering features. This asymmetric behavior has never been utilized for product release planning. We study Asymmetric Release Planning (ARP) by accommodating asymmetric feature evaluation. We formulated and solved ARP as a bi-criteria optimization problem. In its essence, it is the search for optimized trade-offs between maximum stakeholder satisfaction and minimum dissatisfaction. Different techniques including a continuous variant of Kano analysis are available to predict the impact on satisfaction and dissatisfaction with a product release from offering or not offering a feature. As a proof of concept, we validated the proposed solution approach called Satisfaction-Dissatisfaction Optimizer (SDO) via a real-world case study project. From running three replications with varying effort capacities, we demonstrate that SDO generates optimized trade-off solutions being (i) of a different value profile and different structure, (ii) superior to the application of random search and heuristics in terms of quality and completeness, and (iii) superior to the usage of manually generated solutions generated from managers of the case study company. A survey with 20 stakeholders evaluated the applicability and usefulness of the generated results.
C1 [Nayebi, Maleknaz; Ruhe, Guenther] Univ Calgary, Software Engn Decis Support Lab, Calgary, AB T2N 1N4, Canada.
C3 University of Calgary
RP Nayebi, M (corresponding author), Univ Calgary, Software Engn Decis Support Lab, Calgary, AB T2N 1N4, Canada.
EM mnayebi@ucalgary.ca; ruhe@ucalgary.ca
FU Natural Sciences and Engineering Research Council of Canada, NSERC
   [250343-12]
FX We thank all the anonymous reviewers and the Associate editor for their
   valuable comments and suggestions. We wish to thank Mohsen Ansari, Navid
   Pourmomtaz, and Maryam Soleimani for their help on the implementation of
   this research. We are grateful to Des Greer for helpful discussions on a
   former version of the paper. This research was partially supported by
   the Natural Sciences and Engineering Research Council of Canada, NSERC
   Discovery Grant 250343-12.
CR Achimugu P, 2014, INFORM SOFTWARE TECH, V56, P568, DOI 10.1016/j.infsof.2014.02.001
   Ameller D, 2016, LECT NOTES COMPUT SC, V10027, P48, DOI 10.1007/978-3-319-49094-6_4
   [Anonymous], 1988, J SERV MARKET
   [Anonymous], 2013, SOFTWARE REQUIREMENT
   [Anonymous], 2012, Gurobi optimizer reference manual
   [Anonymous], 2012, INT J SEIJ
   [Anonymous], 2010, Product Release planning: methods, Tools and Applications
   [Anonymous], 2001, INTRO ALGORITHMS
   [Anonymous], CORNELL HOTEL RESTAU
   Arcuri A, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1, DOI 10.1145/1985793.1985795
   Aurum A, 2007, LECT NOTES COMPUT SC, V4542, P109
   Babar M. I., 2011, Proceedings of the 1st International Conference on Computer Networks and Information Technology (ICCNIT 2011), P319, DOI 10.1109/ICCNIT.2011.6020888
   Barney S, 2009, IEEE SOFTWARE, V26, P84, DOI 10.1109/MS.2009.89
   Benestad HC, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P766, DOI 10.1145/1985793.1985901
   Berander P, 2005, ENGINEERING AND MANAGING SOFTWARE REQUIREMENTS, P69, DOI 10.1007/3-540-28244-0_4
   Berander P, 2004, 2004 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P167
   Berander P., 2007, THESIS, P1
   Berger C., 1993, CTR QUALITY MANAGEME
   Botta R, 2007, ENG MANAG J, V19, P20, DOI 10.1080/10429247.2007.11431745
   Burke EK, 2013, J OPER RES SOC, V64, P1695, DOI 10.1057/jors.2013.71
   Carod N., 2009, ENCY INF SCI TECHNOL, P3283
   Carod N. M., 2010, Proceedings Fifth International Conference on Software Engineering Advances (ICSEA 2010), P341, DOI 10.1109/ICSEA.2010.58
   Climaco J., 1997, MULTICRITERIA ANAL, P248
   Daneva M, 2008, PROCEEDINGS OF THE 34TH EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS, P240, DOI 10.1109/SEAA.2008.46
   del Sagrado J, 2015, EMPIR SOFTW ENG, V20, P577, DOI 10.1007/s10664-013-9287-3
   Fehlmann TM, 2008, 2008 SECOND INTERNATIONAL WORKSHOP ON SOFTWARE PRODUCT MANAGEMENT, P37
   Firesmith Donald, 2004, J. Object Technol., V3, P35
   Forouzani S., 2012, Proceedings of the 2012 8th International Conference on Computing Technology and Information Management (NCM and ICNIT), P787
   Gary M. R., 1979, COMPUTERS INTRACTABI
   Gaur V, 2010, 2010 IEEE 2ND INTERNATIONAL ADVANCE COMPUTING CONFERENCE, P449, DOI 10.1109/IADCC.2010.5422878
   Greer D, 2004, INFORM SOFTWARE TECH, V46, P243, DOI 10.1016/j.infsof.2003.07.002
   Hu G., 2006, P 17 AUSTR C INF SYS
   Johnson K., 2010, FUTURE VIDEO CONTENT
   Kano N., 1984, J JPN SOC QUALITY CO J JAPANESE SOC QUALI, V41, P39
   Karlsson J, 1996, PROCEEDINGS OF THE SECOND INTERNATIONAL CONFERENCE ON REQUIREMENTS ENGINEERING, P110, DOI 10.1109/ICRE.1996.491435
   Khurum M, 2013, J SOFTW-EVOL PROC, V25, P711, DOI 10.1002/smr.1560
   Kukreja N, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P1465, DOI 10.1109/ICSE.2013.6606746
   Lee YC, 2009, EXPERT SYST APPL, V36, P4479, DOI 10.1016/j.eswa.2008.05.034
   Lehtola L., 2006, Software Process Improvement and Practice, V11, P7, DOI 10.1002/spip.249
   Liu XQ, 2006, J SYST SOFTWARE, V79, P1649, DOI 10.1016/j.jss.2006.03.012
   Logue K, 2008, AGILE 2008, PROCEEDINGS, P73, DOI 10.1109/Agile.2008.79
   MALCOLM DG, 1959, OPER RES, V7, P646, DOI 10.1287/opre.7.5.646
   Mansoor U, 2015, J SYST SOFTWARE, V103, P423, DOI 10.1016/j.jss.2014.11.043
   Marin J. A., 2008, SATISFACTION DISSATI, V18
   Mikulic J, 2011, MANAG SERV QUAL, V21, P46, DOI 10.1108/09604521111100243
   Mohamed A. Samer I., 2008, Proceedings of the 2008 International Conference on Software Engineering Research & Practice, P587
   Nayebi M., 2015, ART SCI ANAL SOFTWAR, P550
   Nayebi M, 2015, 2015 30TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING WORKSHOP (ASEW), P18, DOI 10.1109/ASEW.2015.28
   Nayebi M, 2014, LECT NOTES BUS INF P, V182, P273
   Ngo-The A, 2008, SOFT COMPUT, V12, P95, DOI [10.1007/S00500-007-0219-2, 10.1007/s00500-007-0219-2]
   Otero Carlos E., 2010, Asia Modelling Symposium. Proceedings 4th Asia International Conference on Mathematical Modelling and Computer Simulation (AMS 2010), P187, DOI 10.1109/AMS.2010.48
   Pitangueira Antonio Mauricio, 2013, Search Based Software Engineering. 5th International Symposium, SSBSE 2013. Proceedings: LNCS 8084, P188, DOI 10.1007/978-3-642-39742-4_15
   Pitangueira AM, 2016, LECT NOTES COMPUT SC, V9619, P3, DOI 10.1007/978-3-319-30282-9_1
   Racheva Z., 2010, Proceedings of the 2010 IEEE 18th International Conference on Requirements Engineering (RE2010), P147, DOI 10.1109/RE.2010.27
   Raharjo H, 2006, INT J PROD RES, V44, P5005, DOI 10.1080/00207540600547414
   Ramirez A., 2015, EMPIR SOFTW ENG, V21, P1
   Regnell B, 2008, IEEE SOFTWARE, V25, P42, DOI 10.1109/MS.2008.48
   Riegel N, 2015, LECT NOTES COMPUT SC, V9013, P300, DOI 10.1007/978-3-319-16101-3_22
   Robertson S., 2012, MASTERING REQUIREMEN
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Saaty T. L, 2000, FUNDAMENTALS DECISIO, V6
   Saliu O, 2005, 29TH ANNUAL IEEE/NASA SOFTWARE ENGINEERING WORKSHOP, PROCEEDINGS, P14, DOI 10.1109/SEW.2005.42
   Sauerwein E., 1996, INT WORK SEM PROD EC, V1, P313
   Sheskin J.D., 2004, Handbook of Parametric and Nonparametric Statistical Procedures, VThird
   Svahnberg M, 2010, INFORM SOFTWARE TECH, V52, P237, DOI 10.1016/j.infsof.2009.11.006
   Svahnberg M, 2008, ESEM'08: PROCEEDINGS OF THE 2008 ACM-IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, P288
   TVERSKY A, 1992, J RISK UNCERTAINTY, V5, P297, DOI 10.1007/BF00122574
   van den Akker M, 2008, INFORM SOFTWARE TECH, V50, P101, DOI 10.1016/j.infsof.2007.10.017
   Veerapen N, 2015, INFORM SOFTWARE TECH, V65, P1, DOI 10.1016/j.infsof.2015.03.008
   Violante MG, 2017, COMPUT IND, V86, P15, DOI 10.1016/j.compind.2016.12.007
   Voola P, 2012, ADV INTEL SOFT COMPU, V132, P915
   Wieringa R, 2015, SCI COMPUT PROGRAM, V101, P136, DOI 10.1016/j.scico.2014.11.013
   Xiaoqing Liu, 2004, Proceedings of the 28th Annual International Computer Software and Applications Conference. COMPSAC 2004, P410, DOI 10.1109/CMPSAC.2004.1342872
   Xu QL, 2009, DESIGN STUD, V30, P87, DOI 10.1016/j.destud.2008.07.001
   Zhang ., 2014, RN, V14
   Ziemer S., 2006, P 18 INT C SOFTW ENG, P144
NR 76
TC 12
Z9 13
U1 0
U2 7
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD SEP
PY 2019
VL 45
IS 9
BP 839
EP 857
DI 10.1109/TSE.2018.2810895
PG 19
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA IZ6LH
UT WOS:000487192800001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Hosseini, S
   Turhan, B
   Gunarathna, D
AF Hosseini, Seyedrebvar
   Turhan, Burak
   Gunarathna, Dimuthu
TI A Systematic Literature Review and Meta-analysis on Cross Project Defect
   Prediction
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Review
DE Defect prediction; fault prediction; cross project; systematic
   literature review; meta-analysis; within project
ID SOFTWARE FAULT PREDICTION; MODELS; CODE; QUALITY; METRICS;
   CLASSIFICATION; VALIDATION; COMPLEXITY; LESSONS; MODULES
AB Background: Cross project defect prediction (CPDP) recently gained considerable attention, yet there are no systematic efforts to analyse existing empirical evidence. Objective: To synthesise literature to understand the state-of-the-art in CPDP with respect to metrics, models, data approaches, datasets and associated performances. Further, we aim to assess the performance of CPDP versus within project DP models. Method: We conducted a systematic literature review. Results from primary studies are synthesised (thematic, meta-analysis) to answer research questions. Results: We identified 30 primary studies passing quality assessment. Performance measures, except precision, vary with the choice of metrics. Recall, precision, f-measure, and AUC are the most common measures. Models based on Nearest-Neighbour and Decision Tree tend to perform well in CPDP, whereas the popular naive Bayes yields average performance. Performance of ensembles varies greatly across f-measure and AUC. Data approaches address CPDP challenges using row/column processing, which improve CPDP in terms of recall at the cost of precision. This is observed in multiple occasions including the meta-analysis of CPDP versus WPDP. NASA and Jureczko datasets seem to favour CPDP over WPDP more frequently. Conclusion: CPDP is still a challenge and requires more research before trustworthy applications can take place. We provide guidelines for further research.
C1 [Hosseini, Seyedrebvar] Univ Oulu, Fac Informat Technol & Elect Engn, M3S, Oulu 90014, Finland.
   [Turhan, Burak] Brunel Univ London, Dept Comp Sci, London UB8 3PH, England.
   [Gunarathna, Dimuthu] Vaimo Finland Oy, Oulu 90100, Finland.
C3 University of Oulu; Brunel University
RP Hosseini, S (corresponding author), Univ Oulu, Fac Informat Technol & Elect Engn, M3S, Oulu 90014, Finland.
EM rebvar@oulu.fi; burak.turhan@brunel.ac.uk; dimuthu.gunarathna@vaimo.com
RI Turhan, Burak/G-7400-2011
OI Turhan, Burak/0000-0003-1511-2163
CR [Anonymous], 2007, The promise repository of empirical software engineering data
   [Anonymous], 2010, P 6 INT C PRED MOD S
   [Anonymous], CORR
   [Anonymous], CPDP SLR REPLICATION
   [Anonymous], CORR
   [Anonymous], REQUIREMENTS ENG
   [Anonymous], 2003, P 18 INT JOINT C ART
   [Anonymous], 2009, SYSTEMATIC REV CRDS
   [Anonymous], 2016, P 2016 INT C INT INF
   [Anonymous], 1982, METAANALYSIS CUMULAT
   [Anonymous], 1988, STAT POWER ANAL BEHA
   [Anonymous], PROC INT CONF SOFTW
   [Anonymous], P 10 INT C EV ASS SO
   [Anonymous], J PARAMETR
   [Anonymous], 2007, PROMISE 07, DOI DOI 10.1109/PROMISE.2007.10
   [Anonymous], 2012, NATL J SYST INF TECH
   [Anonymous], 2015, PROMISE REPOSITORY E
   [Anonymous], 2008, Proceedings of the 4th International Workshop on Predictor Models in Software Engineering, PROMISE '08
   [Anonymous], 1984, METAANALYSIS SOCIAL
   Basili VR, 1996, IEEE T SOFTWARE ENG, V22, P751, DOI 10.1109/32.544352
   Basili VR, 1999, IEEE T SOFTWARE ENG, V25, P456, DOI 10.1109/32.799939
   Borenstein M., 2009, CRITICISMS META ANAL, P377
   Borenstein M, 2010, RES SYNTH METHODS, V1, P97, DOI 10.1002/jrsm.12
   Bowes D, 2014, AUTOMAT SOFTW ENG, V21, P287, DOI 10.1007/s10515-013-0129-8
   Brereton P, 2007, J SYST SOFTWARE, V80, P571, DOI 10.1016/j.jss.2006.07.009
   Briand LC, 2002, IEEE T SOFTWARE ENG, V28, P706, DOI 10.1109/TSE.2002.1019484
   Canfora G, 2015, SOFTW TEST VERIF REL, V25, P426, DOI 10.1002/stvr.1570
   Canfora G, 2013, 2013 IEEE SIXTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST 2013), P252, DOI 10.1109/ICST.2013.38
   Çatal Ç, 2016, TURK J ELECTR ENG CO, V24, P3714, DOI 10.3906/elk-1409-137
   Catal C, 2009, EXPERT SYST APPL, V36, P7346, DOI 10.1016/j.eswa.2008.10.027
   Catal C, 2009, INFORM SCIENCES, V179, P1040, DOI 10.1016/j.ins.2008.12.001
   Chawla NV, 2002, J ARTIF INTELL RES, V16, P321, DOI 10.1613/jair.953
   Chen L, 2015, INFORM SOFTWARE TECH, V62, P67, DOI 10.1016/j.infsof.2015.01.014
   Chenal M, 2015, LECT NOTES COMPUT SC, V9290, P397, DOI 10.1007/978-3-319-23318-5_22
   Cheung S.-C., 2011, P 19 ACM SIGSOFT S 1, P15
   COHEN J, 1960, EDUC PSYCHOL MEAS, V20, P37, DOI 10.1177/001316446002000104
   Cruz AEC, 2009, INT SYMP EMP SOFTWAR, P461
   D'Ambros Marco, 2010, Proceedings of the 2010 7th IEEE Working Conference on Mining Software Repositories (MSR 2010), P31, DOI 10.1109/MSR.2010.5463279
   D'Ambros M, 2012, EMPIR SOFTW ENG, V17, P531, DOI 10.1007/s10664-011-9173-9
   da Costa DA, 2017, IEEE T SOFTWARE ENG, V43, P641, DOI 10.1109/TSE.2016.2616306
   Davies S, 2014, J SOFTW-EVOL PROC, V26, P107, DOI 10.1002/smr.1619
   Demsar J, 2006, J MACH LEARN RES, V7, P1
   DERSIMONIAN R, 1986, CONTROL CLIN TRIALS, V7, P177, DOI 10.1016/0197-2456(86)90046-2
   Dougherty J., 1995, Machine Learning. Proceedings of the Twelfth International Conference on Machine Learning, P194
   El Emam K, 2001, J SYST SOFTWARE, V56, P63, DOI 10.1016/S0164-1212(00)00086-8
   FAYYAD UM, 1993, IJCAI-93, VOLS 1 AND 2, P1022
   Fenton NE, 1999, IEEE T SOFTWARE ENG, V25, P675, DOI 10.1109/32.815326
   Field AP, 2001, PSYCHOL METHODS, V6, P161, DOI 10.1037//1082-989X.6.2.161
   Ghotra B, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P789, DOI 10.1109/ICSE.2015.91
   Gyimóthy T, 2005, IEEE T SOFTWARE ENG, V31, P897, DOI 10.1109/TSE.2005.112
   Haibo He, 2009, IEEE Transactions on Knowledge and Data Engineering, V21, P1263, DOI 10.1109/TKDE.2008.239
   Hall T, 2012, IEEE T SOFTWARE ENG, V38, P1276, DOI 10.1109/TSE.2011.103
   Hannay JE, 2009, INFORM SOFTWARE TECH, V51, P1110, DOI 10.1016/j.infsof.2009.02.001
   He P., 2014, ARXIV14114228
   He P., 2014, ARXIV14050773
   He P, 2015, INFORM SOFTWARE TECH, V59, P170, DOI 10.1016/j.infsof.2014.11.006
   He ZM, 2012, AUTOMAT SOFTW ENG, V19, P167, DOI 10.1007/s10515-011-0090-3
   Hedges LV., 2014, STAT METHODS META AN
   Herbold S., 2013, P 9 INT C PREDICTIVE, P1
   Herzig K, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P39, DOI 10.1109/ICSE.2015.133
   Hintze JL, 1998, AM STAT, V52, P181, DOI 10.2307/2685478
   Hosseini S., 2016, P THE 12 INT C PREDI, P1, DOI DOI 10.1145/2972958.2972964
   Hosseini S, 2018, INFORM SOFTWARE TECH, V95, P296, DOI 10.1016/j.infsof.2017.06.004
   Jackson J. E, 2005, USERS GUIDE PRINCIPA, V587
   Jelihovschi E.G., 2014, TEMA (São Carlos), V15, P3
   Jing XY, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P496, DOI 10.1145/2786805.2786813
   Jureczko M., 2010, Model Methods Syst Dependability Oficyna Wydawnicza Politech Wroclawskiej, P69
   Jureczko M, 2015, E-INFORMATICA, V9, P21, DOI 10.5277/e-Inf150102
   Kamei Y, 2016, EMPIR SOFTW ENG, V21, P2072, DOI 10.1007/s10664-015-9400-x
   Kitchenham B., 2015, Evidence-Based Software Engineering and Systematic Reviews
   Kitchenham B.A., 2007, TECHNICAL REPORT VER
   Kitchenham B, 2010, INFORM SOFTWARE TECH, V52, P792, DOI 10.1016/j.infsof.2010.03.006
   Kitchenham BA, 2007, IEEE T SOFTWARE ENG, V33, P316, DOI 10.1109/TSE.2007.1101
   Kocaguneli E, 2012, IEEE T SOFTWARE ENG, V38, P425, DOI 10.1109/TSE.2011.27
   Kotsiantis S., 2006, International Journal of Computer Science, V1, P111
   Lanza M, 2016, IEEE SOFTWARE, V33, P102, DOI 10.1109/MS.2016.156
   Lessmann S, 2008, IEEE T SOFTWARE ENG, V34, P485, DOI 10.1109/TSE.2008.35
   Liebchen G., 2016, P 12 INT C PRED MOD, DOI DOI 10.1145/2972958.2972967
   Liu Y, 2010, IEEE T SOFTWARE ENG, V36, P852, DOI 10.1109/TSE.2010.51
   Ma BJ, 2014, INT J SOFTW ENG KNOW, V24, P61, DOI 10.1142/S021819401450003X
   Ma Y, 2012, INFORM SOFTWARE TECH, V54, P248, DOI 10.1016/j.infsof.2011.09.007
   Macbeth G, 2011, UNIV PSYCHOL, V10, P545, DOI 10.11144/Javeriana.upsy10-2.cdcp
   Malhotra R, 2015, EXPERT SYST, V32, P203, DOI 10.1111/exsy.12078
   Menzies T, 2007, IEEE T SOFTWARE ENG, V33, P2, DOI 10.1109/TSE.2007.256941
   Menzies T, 2013, IEEE T SOFTWARE ENG, V39, P822, DOI 10.1109/TSE.2012.83
   Menzies T, 2012, EMPIR SOFTW ENG, V17, P1, DOI 10.1007/s10664-011-9193-5
   Menzies Tim, 2014, Sharing data and models in software engineering
   Misirli AT, 2013, IEEE SOFTWARE, V30, P54, DOI 10.1109/MS.2013.93
   Mittas N, 2008, J SYST SOFTWARE, V81, P616, DOI 10.1016/j.jss.2007.07.039
   Mizuno O, 2014, INT WORKSH EMPIR ENG, P43, DOI 10.1109/IWESEP.2014.9
   Mockus A, 2009, 2009 6TH IEEE INTERNATIONAL WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES, P11, DOI 10.1109/MSR.2009.5069476
   Moser R, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P181, DOI 10.1145/1368088.1368114
   Nagappan N, 2005, PROC INT CONF SOFTW, P284, DOI 10.1145/1062455.1062514
   Nagappan N, 2005, PROC INT CONF SOFTW, P580, DOI 10.1145/1062455.1062558
   Nagappan N., 2006, 28th International Conference on Software Engineering Proceedings, P452, DOI 10.1145/1134285.1134349
   Nagappan N, 2006, ISSRE 2006:17TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P62
   Nam J, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P508, DOI 10.1145/2786805.2786814
   Nam J, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P382, DOI 10.1109/ICSE.2013.6606584
   Nelson A, 2011, SOFTWARE PRACT EXPER, V41, P283, DOI 10.1002/spe.1004
   Ohlsson N, 1996, IEEE T SOFTWARE ENG, V22, P886, DOI 10.1109/32.553637
   Pan SJ, 2010, IEEE T KNOWL DATA EN, V22, P1345, DOI 10.1109/TKDE.2009.191
   Panichella A, 2014, 2014 SOFTWARE EVOLUTION WEEK - IEEE CONFERENCE ON SOFTWARE MAINTENANCE, REENGINEERING, AND REVERSE ENGINEERING (CSMR-WCRE), P164, DOI 10.1109/CSMR-WCRE.2014.6747166
   Peters F, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P801, DOI 10.1109/ICSE.2015.92
   Pizzi NJ, 2002, IEEE IJCNN, P2405, DOI 10.1109/IJCNN.2002.1007518
   Premraj R, 2011, INT SYMP EMP SOFTWAR, P215, DOI 10.1109/ESEM.2011.30
   Radjenovic D, 2013, INFORM SOFTWARE TECH, V55, P1397, DOI 10.1016/j.infsof.2013.02.009
   Rafique Y, 2013, IEEE T SOFTWARE ENG, V39, P835, DOI 10.1109/TSE.2012.28
   Rahman F, 2012, Proceedings of the ACM SIGSOFT 20th International Symposium on the Foundations of Software Engineering, FSE '12, P61
   Riley RD, 2011, BMJ-BRIT MED J, V342, DOI 10.1136/bmj.d549
   Robert C., 2002, ANN C BRIT ED RES AS
   Ryu D, 2017, SOFTWARE QUAL J, V25, P235, DOI 10.1007/s11219-015-9287-1
   Ryu D, 2016, EMPIR SOFTW ENG, V21, P43, DOI 10.1007/s10664-014-9346-4
   Ryu D, 2015, J COMPUT SCI TECH-CH, V30, P969, DOI 10.1007/s11390-015-1575-5
   Shepperd M, 2013, IEEE T SOFTWARE ENG, V39, P1208, DOI 10.1109/TSE.2013.11
   Singh P., 2015, World Academy of Science, Engineering and Technology, International Journal of Computer, Electrical, Automation, Control and Information Engineering, V9, P800
   Singh P., 2013, Int. J. Comput. Appl., V74, P5, DOI DOI 10.5120/12903-9587
   Slavin R.E., 1986, Educational Researcher, V15, P5, DOI [10.3102/0013189X015009005, DOI 10.3102/0013189X015009005, 10.3102/0013189x015009005]
   Sliwerski J., 2005, ACM SIGSOFT SOFTWARE, P1, DOI DOI 10.1145/1082983.1083147
   Subramanyam R, 2003, IEEE T SOFTWARE ENG, V29, P297, DOI 10.1109/TSE.2003.1191795
   Tantithamthavorn C, 2016, PROC INT CONF SOFTW, P321, DOI 10.1145/2884781.2884857
   Teng CM, 1999, MACHINE LEARNING, PROCEEDINGS, P239
   Thomas Zimmermann., 2009, P THE 7 JOINT M EURO, P91, DOI DOI 10.1145/1595696.1595713
   Thongmak M, 2003, SERP'03: PROCEEDINGS OF THE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING RESEARCH AND PRACTICE, VOLS 1 AND 2, P621
   TOMEK I, 1976, IEEE T SYST MAN CYB, V6, P769, DOI 10.1109/tsmc.1976.4309452
   Turhan B, 2013, INFORM SOFTWARE TECH, V55, P1101, DOI 10.1016/j.infsof.2012.10.003
   Turhan B, 2012, EMPIR SOFTW ENG, V17, P62, DOI 10.1007/s10664-011-9182-8
   Turhan B, 2011, EUROMICRO CONF PROC, P396, DOI 10.1109/SEAA.2011.59
   Turhan B, 2009, EMPIR SOFTW ENG, V14, P540, DOI 10.1007/s10664-008-9103-7
   Turhan B, 2009, EXPERT SYST APPL, V36, P9986, DOI 10.1016/j.eswa.2008.12.028
   Uchigaki S., 2012, Proceedings of the 2012 13th ACIS International Conference on Software Engineering, Artificial Intelligence, Networking and Parallel & Distributed Computing (SNPD 2012), P476, DOI 10.1109/SNPD.2012.34
   Watanabe S., 2008, P 4 INT WORKSH PRED, P19
   Williams C, 2008, P 2008 WORKSHOP DEFE, P32
   Wohlin C., 2012, Experimentation in Software Engineering
   WOHLIN Claes, 2014, P 18 INT C EVALUATIO, DOI [10.1145/2601248.2601268.10, 10.1145/2601248.2601268]
   Yap B.W., 2014, P 1 INT C ADV DAT IN, P13
   Yu LG, 2012, QUAL TECHNOL QUANT M, V9, P421, DOI 10.1080/16843703.2012.11673302
   Zhang F, 2016, EMPIR SOFTW ENG, V21, P2107, DOI 10.1007/s10664-015-9396-2
   Zhang Y, 2015, P INT COMP SOFTW APP, P264, DOI 10.1109/COMPSAC.2015.58
   Zhimin He, 2013, 2013 ACM / IEEE International Symposium on Empirical Software Engineering and Measurement (ESEM), P45, DOI 10.1109/ESEM.2013.20
   Zimmermann T., 2006, P 2006 INT WORKSHOP, P72, DOI DOI 10.1145/1137983.1138001
NR 140
TC 170
Z9 180
U1 1
U2 5
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD FEB
PY 2019
VL 45
IS 2
BP 111
EP 147
DI 10.1109/TSE.2017.2770124
PG 37
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA HL5XJ
UT WOS:000458805300001
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Bick, S
   Spohrer, K
   Hoda, R
   Scheerer, A
   Heinzl, A
AF Bick, Saskia
   Spohrer, Kai
   Hoda, Rashina
   Scheerer, Alexander
   Heinzl, Armin
TI Coordination Challenges in Large-Scale Software Development: A Case
   Study of Planning Misalignment in Hybrid Settings
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Large-scale software development; agile; hybrid; inter-team
   coordination; dependency awareness; planning alignment; information
   systems development
ID ORGANIZATION DESIGN; AGILE; MANAGEMENT; PROJECTS; IMPACT; SCRUM; TEAM;
   COLLABORATION; PRODUCTIVITY; METHODOLOGY
AB Achieving effective inter-team coordination is one of the most pressing challenges in large-scale software development. Hybrid approaches of traditional and agile development promise combining the overview and predictability of long-term planning on an inter-team level with the flexibility and adaptability of agile development on a team level. It is currently unclear, however, why such hybrids often fail. Our case study within a large software development unit of 13 teams at a global enterprise software company explores how and why a combination of traditional planning on an inter-team level and agile development on a team level can result in ineffective coordination. Based on a variety of data, including interviews with scrum masters, product owners, architects and senior management, and using Grounded Theory data analysis procedures, we identify a lack of dependency awareness across development teams as a key explanation of ineffective coordination. Our findings show how a lack of dependency awareness emerges from misaligned planning activities of specification, prioritization, estimation and allocation between agile team and traditional inter-team levels and ultimately prevents effective coordination. Knowing about these issues, large-scale hybrid projects in similar contexts can try to better align their planning activities across levels to improve dependency awareness and in turn achieve more effective coordination.
C1 [Bick, Saskia; Scheerer, Alexander] SAP SE, D-69190 Walldorf, Germany.
   [Spohrer, Kai] Univ Mannheim, Informat Syst, D-68131 Mannheim, Germany.
   [Heinzl, Armin] Univ Mannheim, D-68131 Mannheim, Germany.
   [Heinzl, Armin] Univ Mannheim, Gen Management & Informat Syst, D-68131 Mannheim, Germany.
   [Hoda, Rashina] Univ Auckland, Dept Elect & Comp Engn, Software Engn, Auckland 1010, New Zealand.
C3 University of Mannheim; University of Mannheim; University of Mannheim;
   University of Auckland
RP Bick, S (corresponding author), SAP SE, D-69190 Walldorf, Germany.
EM saskia.bick@sap.com; spohrer@uni-mannheim.de; r.hoda@auckland.ac.nz;
   alexander.scheerer@sap.com; heinzl@uni-mannheim.de
OI Spohrer, Kai/0000-0001-8659-7554; Hoda, Rashina/0000-0001-5147-8096
CR Agile Alliance, 2016, SCRUM SCRUMS DEF
   Alavi M, 2001, MIS QUART, V25, P107, DOI 10.2307/3250961
   Anderson N., 2001, INT HDB WORK ORG PSY, P289
   [Anonymous], 2006, EUROPEAN J INFORM SY
   [Anonymous], 2012, Disciplined agile delivery: A practitioner's guide to agile software delivery in the enterprise
   [Anonymous], 2010, P 43 HAW INT C SYST
   [Anonymous], ACM SIGSOFT SOFTW EN
   [Anonymous], 2012, P 23 AUSTR C INF PRO
   [Anonymous], 2010, Practices for Scaling Lean & Agile Development: Large, Multisite, and Offshore Product Development with Large-Scale Scrum
   [Anonymous], PACIS
   [Anonymous], 2013, P INT S SIGN LANG TR
   Badampudi D, 2013, LECT NOTES BUS INF P, V149, P180
   Barlow J. B., 2011, CAIS, V29, P25
   Batra D, 2010, COMMUN ASSOC INF SYS, V27, P379
   Beck K., 2011, MANIFESTO AGILE SOFT
   Begel A., 2007, 1 INT S EMP SOFTW EN, P10
   BENINGTON HD, 1983, ANN HIST COMPUT, V5, P350
   Boehm B, 2005, IEEE SOFTWARE, V22, P30, DOI 10.1109/MS.2005.129
   Boehm B, 2003, COMPUTER, V36, P57, DOI 10.1109/MC.2003.1204376
   Borici A., 2012, 2012 5th International Workshop on Cooperative and Human Aspects of Software Engineering, P5, DOI 10.1109/CHASE.2012.6223024
   Cao L., 2004, P 37 HAW INT C SYST
   Cao L, 2009, EUR J INFORM SYST, V18, P332, DOI 10.1057/ejis.2009.26
   Cataldo M., 2006, P 2006 20 06 ANN C C, P353, DOI DOI 10.1145/1180875.1180929
   Cataldo M, 2013, IEEE T SOFTWARE ENG, V39, P343, DOI 10.1109/TSE.2012.32
   Cataldo M, 2009, IEEE T SOFTWARE ENG, V35, P864, DOI 10.1109/TSE.2009.42
   Cataldo M, 2008, ESEM'08: PROCEEDINGS OF THE 2008 ACM-IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, P2
   Conboy K, 2010, ACM T SOFTW ENG METH, V20, DOI 10.1145/1767751.1767753
   Conboy K, 2009, INFORM SYST RES, V20, P329, DOI 10.1287/isre.1090.0236
   Crowston K., 2006, 485 I SOFTW RES
   Crowston K., 2003, ORG BUSINESS KNOWLED, P85
   Daneva M, 2013, J SYST SOFTWARE, V86, P1333, DOI 10.1016/j.jss.2012.12.046
   Davis JP, 2007, ACAD MANAGE REV, V32, P480, DOI 10.5465/AMR.2007.24351453
   de Souza CRB, 2007, LECT NOTES COMPUT SC, V4716, P182
   Deemer P., 2012, SCRUM PRIMER VERSION
   Dingsoyr T, 2018, EMPIR SOFTW ENG, V23, P490, DOI 10.1007/s10664-017-9524-2
   Dingsoyr T, 2014, LECT NOTES BUS INF P, V199, P1
   Dourish P., 1992, CSCW '92. Sharing Perspectives. Proceedings of the Conference on Computer-Supported Cooperative Work, P107, DOI 10.1145/143457.143468
   Eisenhardt KM, 2007, ACAD MANAGE J, V50, P25, DOI 10.5465/AMJ.2007.24160888
   EISENHARDT KM, 1989, ACAD MANAGE REV, V14, P532, DOI 10.2307/258557
   Fitzgerald Brian, 2013, 2013 35th International Conference on Software Engineering (ICSE), P863, DOI 10.1109/ICSE.2013.6606635
   Fry C, 2007, AGILE 2007, PROCEEDINGS, P136, DOI 10.1109/AGILE.2007.38
   GALBRAITH JR, 1974, INTERFACES, V4, P28, DOI 10.1287/inte.4.3.28
   Glaser B., 1992, EMERGENCE VERSUS FOR
   Glaser B. G., 1978, [No title captured]
   Goh J.C., 2012, Journal of the Association for Information Systems, V14, P722
   Heikkila Ville T., 2013, 2013 ACM / IEEE International Symposium on Empirical Software Engineering and Measurement (ESEM), P85, DOI 10.1109/ESEM.2013.27
   Heikkilä V, 2010, EUROMICRO CONF PROC, P289, DOI 10.1109/SEAA.2010.37
   Hildenbrand T., 2008, IMPROVING TRACEABILI
   Hoda R, 2017, PROC INT CONF SOFTW, P141, DOI 10.1109/ICSE.2017.21
   Hoda R, 2016, J SYST SOFTWARE, V117, P245, DOI 10.1016/j.jss.2016.02.049
   Hoda R, 2012, EMPIR SOFTW ENG, V17, P609, DOI 10.1007/s10664-011-9161-0
   Howison J, 2014, MIS QUART, V38, P29, DOI 10.25300/MISQ/2014/38.1.02
   Kane GC, 2007, ORGAN SCI, V18, P796, DOI 10.1287/orsc.1070.0286
   Kettunen P., 2008, SOFTWARE PROCESS IMP, V13, P183, DOI [10.1002/, DOI 10.1002/SPIP.354]
   Kude T, 2014, P 22 EUR C INF SYST, P1
   Lagerberg Lina, 2013, 2013 ACM / IEEE International Symposium on Empirical Software Engineering and Measurement (ESEM), P348, DOI 10.1109/ESEM.2013.53
   Larman C., 2008, Scaling Lean and Agile Development: Thinking and Organizational Tools for Large-Scale Scrum
   LEE AS, 1989, MIS QUART, V13, P33, DOI 10.2307/248698
   Lee AS, 2003, INFORM SYST RES, V14, P221, DOI 10.1287/isre.14.3.221.16560
   Lee G, 2013, IEEE T SOFTWARE ENG, V39, P1753, DOI 10.1109/TSE.2013.40
   Leffingwell D., 2014, Scaled agile framework 3.0
   Li YD, 2012, INT J ANTENN PROPAG, V2012, DOI 10.1155/2012/170963
   Lindberg A, 2016, INFORM SYST RES, V27, P751, DOI 10.1287/isre.2016.0673
   LITWAK E, 1962, ADMIN SCI QUART, V6, P395, DOI 10.2307/2390723
   Mahadevan L, 2015, COMMUN ASSOC INF SYS, V36, P77
   MARKUS ML, 1988, MANAGE SCI, V34, P583, DOI 10.1287/mnsc.34.5.583
   Marshall S., 2010, ACM SIGPLAN NOTICES, P74, DOI DOI 10.1145/1932682.1869467
   Maruping LM, 2009, INFORM SYST RES, V20, P377, DOI 10.1287/isre.1090.0238
   MINTZBERG H, 1980, MANAGE SCI, V26, P322, DOI 10.1287/mnsc.26.3.322
   Moe NB, 2010, INFORM SOFTWARE TECH, V52, P480, DOI 10.1016/j.infsof.2009.11.004
   oxforddictionaries.com, 2017, HYBR
   Paasivaara M, 2014, INFORM SOFTWARE TECH, V56, P1556, DOI 10.1016/j.infsof.2014.06.008
   Pikkarainen M, 2008, EMPIR SOFTW ENG, V13, P303, DOI 10.1007/s10664-008-9065-9
   Ralph P, 2016, INFORM SOFTWARE TECH, V70, P232, DOI 10.1016/j.infsof.2015.06.010
   Ramasubbu N, 2015, MIS QUART, V39, P787, DOI 10.25300/MISQ/2015/39.4.3
   Reifer DJ, 2003, IEEE SOFTWARE, V20, P12, DOI 10.1109/MS.2003.1207448
   Royce W. W., 1987, P 9 INT C SOFTW ENG
   Scheel A., 2014, 2014 17 INT C INFORM, P1
   Schwaber K., 2011, SCRUM GUIDE
   Schwaber K., 2016, SCALED PROFESSIONAL
   Sharp H, 2008, INT J HUM-COMPUT ST, V66, P506, DOI 10.1016/j.ijhcs.2007.10.004
   Soh C., 1995, P 16 INT C INFORM SY, P29, DOI DOI 10.1504/IJSTM.2010.029673
   Srikanth K, 2011, STRATEGIC MANAGE J, V32, P849, DOI 10.1002/smj.908
   Stol KJ, 2014, ACM T SOFTW ENG METH, V23, DOI 10.1145/2533685
   Strode DE, 2012, J SYST SOFTWARE, V85, P1222, DOI 10.1016/j.jss.2012.02.017
   Sutherland J., 2001, Cutter IT Journal, V14, P5
   Theocharis G, 2015, LECT NOTES COMPUT SC, V9459, P149, DOI 10.1007/978-3-319-26844-6_11
   Thompson J.D., 2011, Organizations in action: Social science bases of administrative theory
   VANDEVEN AH, 1976, AM SOCIOL REV, V41, P322
   VersionOne, 2015, STAT AG SURV VERS ON
   Vlietland J, 2015, INFORM SOFTWARE TECH, V57, P52, DOI 10.1016/j.infsof.2014.08.008
   Vodde B., 2016, LESS FRAMEWORK
   Whitworth E, 2007, AGILE 2007, PROCEEDINGS, P26, DOI 10.1109/AGILE.2007.60
   Yin R.K., 2014, Applications of case study research, V2nd
   Yuan MH, 2009, IEEE T ENG MANAGE, V56, P494, DOI 10.1109/TEM.2008.927819
   Zmud RW, 1980, MIS QUART, V4, P45, DOI 10.2307/249336
NR 96
TC 63
Z9 66
U1 10
U2 62
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD OCT
PY 2018
VL 44
IS 10
BP 932
EP 950
DI 10.1109/TSE.2017.2730870
PG 19
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science; Engineering
GA GX5PZ
UT WOS:000447803400002
OA Green Published
DA 2024-07-18
ER

PT J
AU Moreau, L
   Batlajery, BV
   Huynh, TD
   Michaelides, D
   Packer, H
AF Moreau, Luc
   Batlajery, Belfrit Victor
   Trung Dong Huynh
   Michaelides, Danius
   Packer, Heather
TI A Templating System to Generate Provenance
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Provenance; PROV; provenance generation; template
AB PROV-TEMPLATEis a declarative approach that enables designers and programmers to design and generate provenance compatible with the PROV standard of the World Wide Web Consortium. Designers specify the topology of the provenance to be generated by composing templates, which are provenance graphs containing variables, acting as placeholders for values. Programmers write programs that log values and package them up in sets of bindings, a data structure associating variables and values. An expansion algorithm generates instantiated provenance from templates and sets of bindings in any of the serialisation formats supported by PROV. A quantitative evaluation shows that sets of bindings have a size that is typically 40 percent of that of expanded provenance templates and that the expansion algorithm is suitably tractable, operating in fractions of milliseconds for the type of templates surveyed in the article. Furthermore, the approach shows four significant software engineering benefits: separation of responsibilities, provenance maintenance, potential runtime checks and static analysis, and provenance consumption. The article gathers quantitative data and qualitative benefits descriptions from four different applications making use of PROV-TEMPLATE. The system is implemented and released in the open-source library ProvToolbox for provenance processing.
C1 [Moreau, Luc; Batlajery, Belfrit Victor; Trung Dong Huynh; Michaelides, Danius; Packer, Heather] Univ Southampton, Dept Elect & Comp Sci, Southampton SO17 1BJ, Hants, England.
C3 University of Southampton
RP Moreau, L (corresponding author), Univ Southampton, Dept Elect & Comp Sci, Southampton SO17 1BJ, Hants, England.
EM l.moreau@ecs.soton.ac.uk; B.V.Batlajery@soton.ac.uk;
   tdh@ecs.soton.ac.uk; dtm@ecs.soton.ac.uk; hp3@ecs.soton.ac.uk
RI Moreau, Luc/C-9061-2011; Huynh, Trung Dong/E-4185-2018
OI Huynh, Trung Dong/0000-0003-4937-2473; Moreau, Luc/0000-0002-3494-120X
FU EPSRC SOCIAM [EP/J017728/1]; ORCHID [EP/I011587/1]; FP7 SmartSociety
   [600854]; ESRC eBook [ES/K007246/1]; EPSRC [EP/J017728/2, EP/J017728/1]
   Funding Source: UKRI; ESRC [ES/K007246/1] Funding Source: UKRI
FX This work is funded in part by the EPSRC SOCIAM (EP/J017728/1) and
   ORCHID (EP/I011587/1) projects, the FP7 SmartSociety (600854) project,
   and the ESRC eBook (ES/K007246/1) project. The data referred to as
   smart, ebook, and picaso supporting this study are openly available from
   the University of Southampton repository at DOI: 10.5258/SOTON/390436.
   As far as food data are concerned, their sets of bindings cannot be made
   openly available because they contain commercially sensitive data, but
   the templates and measurements are available.
CR Alper Pinar., 2013, JOINT EDBTICDT 2013, P313
   Altintas I, 2006, LECT NOTES COMPUT SC, V4145, P118
   [Anonymous], 2011, LINKED DATA EVOLVING
   [Anonymous], 2004, XML Schema Part 2: Datatypes
   [Anonymous], 2016, P 23 INT C TEL MAY
   Behajjame K., 2013, PROV O PROV ONTOLOGY
   Belhajjame K, 2015, J WEB SEMANT, V32, P16, DOI 10.1016/j.websem.2015.01.003
   Belhajjame Khalid., 2013, PROV DM PROV DATA MO
   Bose R, 2005, ACM COMPUT SURV, V37, P1, DOI 10.1145/1057977.1057978
   Brauer PC, 2015, LECT NOTES COMPUT SC, V8628, P223, DOI 10.1007/978-3-319-16462-5_19
   Brockmans S., 2006, 5 INT SEM WEB C ISWC, P187
   Carothers G., 2014, RDF 1 1 TURTL
   Chapman AdrianeP., 2008, P 2008 ACM SIGMOD IN, P993, DOI DOI 10.1145/1376616.1376715
   Chen P, 2015, IEEE ACM INT SYMP, P525, DOI 10.1109/CCGrid.2015.86
   Cheney J., 2013, PROV-N: The provenance notation
   Cheney J, 2011, MATH STRUCT COMP SCI, V21, P1301, DOI 10.1017/S0960129511000211
   Cheney J, 2007, FOUND TRENDS DATABAS, V1, P379, DOI 10.1561/1900000006
   Cheney James., 2007, IEEE Data Eng. Bull, V30, P22
   Chirigati F., 2013, Proceedings of the 5th USENIX Conference on Theory and Practice of Provenance, P1
   Clifford B, 2008, CONCURR COMP-PRACT E, V20, P565, DOI 10.1002/cpe.1256
   Cohen-Boulakia S, 2008, CONCURR COMP-PRACT E, V20, P497, DOI 10.1002/cpe.1232
   Cuevas-Vicenttin V., 2014, PROVONE PROV EXTENSI
   Curbera F, 2008, LECT NOTES COMPUT SC, V5331, P100
   Curcin V, 2017, J BIOMED INFORM, V65, P1, DOI 10.1016/j.jbi.2016.10.022
   Danger R, 2015, FUTURE GENER COMP SY, V49, P8, DOI 10.1016/j.future.2015.01.014
   De Nies T., 2015, P 24 ACM INT C INFOR, P1823
   Firth H, 2015, LECT NOTES COMPUT SC, V8628, P16, DOI 10.1007/978-3-319-16462-5_2
   Frew J, 2008, CONCURR COMP-PRACT E, V20, P485, DOI 10.1002/cpe.1247
   Garijo D., 2012, P 2 INT WORKSH LINK
   Ghoshal Devarshi., 2013, Proceedings of the Joint EDBT/ICDT 2013 Workshops, P290
   Gil Y., 2010, Provenance XG Final Report'
   Groth P, 2009, IEEE T PARALL DISTR, V20, P1246, DOI 10.1109/TPDS.2008.215
   Happel H.J., 2006, P WORKSH SEM WORKSH, P5
   Holland D. A., 2008, CONCURENCY COMPUT PR, V20
   Huynh T D., 2014, International Provenance and Annotation Workshop, P275
   Huynh T. D., 2013, P 1 AAAI C HUM COMP
   Huynh TD., 2013, PROV IMPLEMENTATION
   Magliacane Sara, 2012, The Semantic Web. 11th International Semantic Web Conference (ISWC 2012). Proceedings, P399, DOI 10.1007/978-3-642-35173-0_29
   McPhillips T., 2015, INT J DIGIT CURATION, V10, P1
   McPhillips T., 2015, P 7 USENIX WORKSH TH
   Michaelides D., 2014, PROV TEM PLATE TEMPL
   Miles Simon, 2007, Journal of Grid Computing, V5, P1, DOI 10.1007/s10723-006-9055-3
   Miles S, 2007, J WEB SEMANT, V5, P28, DOI 10.1016/j.websem.2006.11.003
   Miles S, 2011, ACM T SOFTW ENG METH, V20, DOI 10.1145/2000791.2000792
   Moreau Luc, 2010, Foundations and Trends in Web Science, V2, P99, DOI 10.1561/1800000010
   Moreau L., 2015, P 7 USENIX WORKSH TH
   Moreau L., 2016, ProvToolbox-Java library to create and convert W3C PROV data model representations
   Moreau L., 2013, PROVENANCE INTRO PRO
   Moreau L., 2013, PROV XML PROV XML SC
   Moreau L, 2008, CONCURR COMP-PRACT E, V20, P409, DOI 10.1002/cpe.1233
   Moreau L, 2015, ELECTRON P THEOR COM, P129, DOI 10.4204/EPTCS.181.9
   Moreau L, 2014, LECT NOTES COMPUT SC, V8411, P291
   Moreau L, 2011, J WEB SEMANT, V9, P202, DOI 10.1016/j.websem.2011.03.001
   Nies T. D., 2013, CONSTRAINTS PROV DAT
   Packer HS, 2015, COMPUT SOC SCI, P159, DOI 10.1007/978-3-319-08681-1_8
   Ramchurn S., 2015, HAC ER DISASTER RESP
   Shadbolt N, 2006, IEEE INTELL SYST, V21, P96, DOI 10.1109/MIS.2006.62
   Silva CT, 2011, COMPUT GRAPH FORUM, V30, P75, DOI 10.1111/j.1467-8659.2010.01830.x
   Sun L., 2013, P 3 ACM C DAT APPL S, P285
   Tan WangChiew., 2007, IEEE DATA ENG B, V30, P3
   Tennison Jeni, 2015, MODEL TABULAR DATA M
   Weitzner DJ, 2008, COMMUN ACM, V51, P82, DOI 10.1145/1349026.1349043
   Zhu H, 2013, ACM T SOFTW ENG METH, V22, DOI 10.1145/2491509.2491517
NR 63
TC 23
Z9 23
U1 0
U2 3
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD FEB
PY 2018
VL 44
IS 2
BP 103
EP 121
DI 10.1109/TSE.2017.2659745
PG 19
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA FW1ND
UT WOS:000425065000001
OA Green Submitted, Green Accepted, hybrid
DA 2024-07-18
ER

PT J
AU Yi, QP
   Yang, ZJ
   Guo, SJ
   Wang, C
   Liu, J
   Zhao, C
AF Yi, Qiuping
   Yang, Zijiang
   Guo, Shengjian
   Wang, Chao
   Liu, Jian
   Zhao, Chen
TI Eliminating Path Redundancy via Postconditioned Symbolic Execution
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Symbolic execution; testing and debugging; testing tools
AB Symbolic execution is emerging as a powerful technique for generating test inputs systematically to achieve exhaustive path coverage of a bounded depth. However, its practical use is often limited by path explosionbecause the number of paths of a program can be exponential in the number of branch conditions encountered during the execution. To mitigate the path explosion problem, we propose a new redundancy removal method called postconditioned symbolic execution. At each branching location, in addition to determine whether a particular branch is feasible as in traditional symbolic execution, our approach checks whether the branch is subsumed by previous explorations. This is enabled by summarizing previously explored paths by weakest precondition computations. Postconditioned symbolic execution can identify path suffixes shared by multiple runs and eliminate them during test generation when they are redundant. Pruning away such redundant paths can lead to a potentially exponential reduction in the number of explored paths. Since the new approach is computationally expensive, we also propose several heuristics to reduce its cost. We have implemented our method in the symbolic execution engine KLEE [1] and conducted experiments on a large set of programs from the GNU Coreutils suite. Our results confirm that redundancy due to common path suffix is both abundant and widespread in real-world applications.
C1 [Yi, Qiuping] Univ Chinese Acad Sci, Chinese Acad Sci, Natl Engn Res Ctr Fundamental Software, Inst Software, Beijing 100049, Peoples R China.
   [Yang, Zijiang] Western Michigan Univ, Dept Comp Sci, Kalamazoo, MI 49008 USA.
   [Guo, Shengjian] Virginia Tech, Dept Elect & Comp Engn, Blacksburg, VA 24061 USA.
   [Wang, Chao] Univ Southern Calif, Dept Comp Sci, Los Angeles, CA 90007 USA.
   [Liu, Jian] Inst Informat Engn, Key Lab Network Assessment Technol, Beijing 100195, Peoples R China.
   [Liu, Jian] Inst Informat Engn, Beijing Key Lab Network Secur Technol, Beijing 100195, Peoples R China.
   [Liu, Jian] Univ Chinese Acad Sci, Chinese Acad Sci, Beijing 100195, Peoples R China.
   [Zhao, Chen] Chinese Acad Sci, Natl Engn Res Ctr Fundamental Software, Beijing 100864, Peoples R China.
   [Zhao, Chen] Chinese Acad Sci, State Key Lab Comp Sci, Inst Software, Beijing 100864, Peoples R China.
C3 Chinese Academy of Sciences; Institute of Software, CAS; University of
   Chinese Academy of Sciences, CAS; Western Michigan University; Virginia
   Polytechnic Institute & State University; University of Southern
   California; Chinese Academy of Sciences; Institute of Information
   Engineering, CAS; Chinese Academy of Sciences; Institute of Information
   Engineering, CAS; Chinese Academy of Sciences; University of Chinese
   Academy of Sciences, CAS; Chinese Academy of Sciences; Chinese Academy
   of Sciences; Institute of Software, CAS
RP Yi, QP (corresponding author), Univ Chinese Acad Sci, Chinese Acad Sci, Natl Engn Res Ctr Fundamental Software, Inst Software, Beijing 100049, Peoples R China.
EM qiuping@nfs.iscas.ac.cn; zijiang.yang@wmich.edu; guosj@vt.edu;
   wang626@usc.edu; liujian6@iie.ac.cn; zhaochen@iscas.ac.cn
FU National Science Foundation of China (NSFC) [61472318, 61572481,
   61632015]; US National Science Foundation (NSF) [CCF-1149454,
   DGE-1522883, CCF-1500024]; Direct For Computer & Info Scie & Enginr;
   Division of Computing and Communication Foundations [1149454, 1500024]
   Funding Source: National Science Foundation
FX This work was supported in part by the National Science Foundation of
   China (NSFC) under grant 61472318, 61572481 and 61632015, and the US
   National Science Foundation (NSF) under grants CCF-1149454, DGE-1522883,
   and CCF-1500024. Any opinions, findings, and conclusions expressed in
   this material are those of the authors and do not necessarily reflect
   the views of the funding agencies. Zijiang Yang and Jian Liu are the
   corresponding authors.
CR Albarghouthi Aws, 2012, Computer Aided Verification. Proceedings 24th International Conference, CAV 2012, P672, DOI 10.1007/978-3-642-31424-7_48
   Albarghouthi A, 2012, LECT NOTES COMPUT SC, V7148, P39, DOI 10.1007/978-3-642-27940-9_4
   Anand S, 2008, LECT NOTES COMPUT SC, V4963, P367, DOI 10.1007/978-3-540-78800-3_28
   [Anonymous], 2006, P 13 ACM C COMPUTER
   [Anonymous], 2010, Proceedings of the 19th international symposium on Software testing and analysis, DOI 10.1145/1831708.1831732
   [Anonymous], 2011, P 2011 INT S SOFTWAR
   Aquino Andrea., 2015, Proceedings of the 2015 International Symposium on Software Testing and Analysis, P305
   Avgerinos T., 2011, P NETW DISTR SYST SE, P283
   Avgerinos T, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P1083, DOI 10.1145/2568225.2568293
   Baluda M, 2016, IEEE T SOFTWARE ENG, V42, P403, DOI 10.1109/TSE.2015.2490067
   Beyer D, 2012, PROCEEDINGS OF THE 12TH CONFERENCE ON FORMAL METHODS IN COMPUTER-AIDED DESIGN (FMCAD 2012), P106
   Bounimova E, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P122, DOI 10.1109/ICSE.2013.6606558
   Bugrara S., 2013, 2013 USENIX Annual Technical Conference, P199
   Burnim Jacob, 2008, 2008 23rd IEEE/ACM International Conference on Automated Software Engineering, P443, DOI 10.1109/ASE.2008.69
   Cadar C., 2008, Proceedings of the 8th USENIX conference on Operating systems design and implementation, OSDI'08, (USA), P209
   Chipounov V, 2011, ACM SIGPLAN NOTICES, V46, P265, DOI [10.1145/1961296.1950396, 10.1145/1961295.1950396]
   Chu DH, 2014, LECT NOTES COMPUT SC, V8734, P323, DOI 10.1007/978-3-319-11164-3_27
   Ciortea Liviu, 2009, Operating Systems Review, V43, P5, DOI 10.1145/1713254.1713257
   Collingbourne P, 2011, EUROSYS 11: PROCEEDINGS OF THE EUROSYS 2011 CONFERENCE, P315
   Cui HM, 2013, ACM SIGPLAN NOTICES, V48, P329, DOI 10.1145/2499368.2451152
   D'Silva V, 2010, LECT NOTES COMPUT SC, V5944, P129, DOI 10.1007/978-3-642-11319-2_12
   Duc-Hiep Chu, 2012, Computer Aided Verification. Proceedings 24th International Conference, CAV 2012, P616, DOI 10.1007/978-3-642-31424-7_43
   Ganesh V, 2007, LECT NOTES COMPUT SC, V4590, P519
   Ge X, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P992, DOI 10.1145/1985793.1985971
   Godefroid P., 2007, SIGPLAN Notices, V42, P47, DOI [10.1145/1190216.1190226, 10.1145/1190215.1190226]
   Godefroid P, 2005, ACM SIGPLAN NOTICES, V40, P213, DOI 10.1145/1064978.1065036
   Godefroid P, 2010, POPL'10: PROCEEDINGS OF THE 37TH ANNUAL ACM SIGPLAN-SIGACT SYMPOSIUM ON PRINCIPLES OF PROGRAMMING LANGUAGES, P43, DOI 10.1145/1706299.1706307
   Godefroid Patrice, 2008, EMSOFT, P207
   Godefroid Patrice, 2008, Network and Distributed Systems Security
   Gulavani BS, 2008, LECT NOTES COMPUT SC, V4963, P443, DOI 10.1007/978-3-540-78800-3_33
   Jaffar Joxan, 2012, Computer Aided Verification. Proceedings 24th International Conference, CAV 2012, P758, DOI 10.1007/978-3-642-31424-7_61
   JAFFAR J, 1992, ACM T PROGR LANG SYS, V14, P339, DOI 10.1145/129393.129398
   Jaffar J., 2013, P 2013 9 JOINT M FDN, P48
   Jaffar J, 2012, LNCS, P396, DOI DOI 10.1007/978-3-642-29860-8_
   Jaffar J, 2009, LECT NOTES COMPUT SC, V5732, P454, DOI 10.1007/978-3-642-04244-7_37
   Jaffar Joxan, 2008, AAAI, P297
   Jia XH, 2015, ADV SOC SCI EDUC HUM, V41, P177
   Ma KK, 2011, LECT NOTES COMPUT SC, V6887, P95, DOI 10.1007/978-3-642-23702-7_11
   Kroening Daniel, 2011, Computer Aided Verification. Proceedings 23rd International Conference, CAV 2011, P573, DOI 10.1007/978-3-642-22110-1_45
   Kuznetsov V, 2012, ACM SIGPLAN NOTICES, V47, P193, DOI 10.1145/2345156.2254088
   LI YY, 2013, PROC ACM SIGPL CONF, V31, P19
   Majumdar R, 2007, PROC INT CONF SOFTW, P416
   Marinescu PD, 2012, PROC INT CONF SOFTW, P716, DOI 10.1109/ICSE.2012.6227146
   McMillan K. L., 2006, Computer Aided Verification. 18th International Conference. CAV 2006. Proceedings (Lecture Notes in Computer Science Vol. 4144), P123, DOI 10.1007/11817963_14
   McMillan KL, 2010, LECT NOTES COMPUT SC, V6174, P104, DOI 10.1007/978-3-642-14295-6_10
   Moonzoo Kim, 2012, 2012 IEEE Fifth International Conference on Software Testing, Verification and Validation (ICST 2012), P340, DOI 10.1109/ICST.2012.114
   Nori AV, 2009, LECT NOTES COMPUT SC, V5505, P178, DOI 10.1007/978-3-642-00768-2_17
   Pandey R, 2010, MENOPAUSE, V17, P602, DOI 10.1097/gme.0b013e3181d0f7f0
   Pasareanu Corina S., 2009, International Journal on Software Tools for Technology Transfer, V11, P339, DOI 10.1007/s10009-009-0118-1
   Pasareanu Corina S., 2008, P 2008 INT S SOFTW T, P15, DOI [DOI 10.1145/1390630.1390635, DOI 10.1145/1390630]
   Person S, 2011, PLDI 11: PROCEEDINGS OF THE 2011 ACM CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P504
   Qiu R, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P632, DOI 10.1109/ICSE.2015.79
   Ramos DA, 2015, PROCEEDINGS OF THE 24TH USENIX SECURITY SYMPOSIUM, P49
   Rojas Jose Miguel, 2013, BYTECODE 13 ETAPS
   Sen K., 2005, P 10 EUR SOFTW ENG C, V30, P263, DOI DOI 10.1145/1081706.1081750
   Sen K, 2006, LECT NOTES COMPUT SC, V4144, P419
   Sen K, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P842, DOI 10.1145/2786805.2786830
   Seo H, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P413, DOI 10.1145/2635868.2635872
   Siddiqui JH, 2012, ACM SIGPLAN NOTICES, V47, P523, DOI 10.1145/2398857.2384654
   Pham VT, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P891, DOI 10.1109/ICSE.2015.99
   Visser Willem, 2012, P FSE, DOI DOI 10.1145/2393596.2393665
   Weissenbacher G, 2012, LECT NOTES COMPUT SC, V7214, P556, DOI 10.1007/978-3-642-28756-5_48
   Xiao XS, 2013, IEEE INT CONF AUTOM, P246, DOI 10.1109/ASE.2013.6693084
   Yang G., 2012, P 2012 INT S SOFTW T, P144, DOI DOI 10.1145/2338965.2336771
   Yang GW, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P1343, DOI 10.1109/ICSE.2013.6606713
   Zamfir C, 2010, EUROSYS'10: PROCEEDINGS OF THE EUROSYS 2010 CONFERENCE, P321
   Zhang YF, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P643, DOI 10.1109/ICSE.2015.80
NR 67
TC 21
Z9 26
U1 1
U2 39
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JAN
PY 2018
VL 44
IS 1
BP 25
EP 43
DI 10.1109/TSE.2017.2659751
PG 19
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA FS8VW
UT WOS:000422693800004
OA Bronze
DA 2024-07-18
ER

PT J
AU Li, N
   Offutt, J
AF Li, Nan
   Offutt, Jeff
TI Test Oracle Strategies for Model-Based Testing
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Test oracle; RIPR model; test oracle strategy; test automation;
   subsumption; model-based testing
ID MUTATION
AB Testers use model-based testing to design abstract tests from models of the system's behavior. Testers instantiate the abstract tests into concrete tests with test input values and test oracles that check the results. Given the same test inputs, more elaborate test oracles have the potential to reveal more failures, but may also be more costly. This research investigates the ability for test oracles to reveal failures. We define ten new test oracle strategies that vary in amount and frequency of program state checked. We empirically compared them with two baseline test oracle strategies. The paper presents several main findings. (1) Test oracles must check more than runtime exceptions because checking exceptions alone is not effective at revealing failures. (2) Test oracles do not need to check the entire output state because checking partial states reveals nearly as many failures as checking entire states. (3) Test oracles do not need to check program states multiple times because checking states less frequently is as effective as checking states more frequently. In general, when state machine diagrams are used to generate tests, checking state invariants is a reasonably effective low cost approach to creating test oracles.
C1 [Li, Nan] Medidata Solut, Div Res & Dev, New York, NY 10014 USA.
   [Offutt, Jeff] George Mason Univ, Fairfax, VA 22030 USA.
C3 George Mason University
RP Li, N (corresponding author), Medidata Solut, Div Res & Dev, New York, NY 10014 USA.
EM nli@mdsol.com; offutt@gmu.edu
CR Ammann P., 2008, GRAPH COVERAGE WEB A
   Ammann Paul, 2008, Introduction to software testing, V1st
   Andrews JH, 2005, PROC INT CONF SOFTW, P402, DOI 10.1145/1062455.1062530
   [Anonymous], 2008, CLASS OF TREE
   [Anonymous], 1999, Testing Object-Oriented Systems: Models, Patterns, and Tools
   [Anonymous], REPOSITORY PUBLICATI
   Barr ET, 2015, IEEE T SOFTWARE ENG, V41, P507, DOI 10.1109/TSE.2014.2372785
   Briand LC, 2004, IEEE T SOFTWARE ENG, V30, P770, DOI 10.1109/TSE.2004.79
   Burdy L., 2005, International Journal on Software Tools for Technology Transfer, V7, P212, DOI 10.1007/s10009-004-0167-4
   Danial A., 2006, CLOC
   Deitel H., 2005, JAVA HOW TO PROGRAM
   DEMILLO RA, 1991, IEEE T SOFTWARE ENG, V17, P900, DOI 10.1109/32.92910
   Fraser G, 2012, IEEE T SOFTWARE ENG, V38, P278, DOI 10.1109/TSE.2011.93
   FREEDMAN RS, 1991, IEEE T SOFTWARE ENG, V17, P553, DOI 10.1109/32.87281
   Halbwachs N, 1998, LECT NOTES COMPUT SC, V1427, P1, DOI 10.1007/BFb0028726
   Hierons RM, 2009, ACM COMPUT SURV, V41, DOI 10.1145/1459352.1459354
   HOWDEN WE, 1978, IEEE T SOFTWARE ENG, V4, P293, DOI 10.1109/TSE.1978.231514
   Lewis, 2004, CLASS OF BLACKJACK
   Li N., 2013, STRUCTURED TEST AUTO
   Li N., 2014, P IEEE 7 INT C SOFTW, P84
   Li N, 2009, IEEE ICST WORKSHOP, P220, DOI 10.1109/ICSTW.2009.30
   Lilja D.J., 2005, Measuring Computer Performance: A Practitioner's Guide
   Liskov B., 2000, PROGRAM DEV JAVA ABS
   Lowry R., 2008, CONCEPTS APPL INFERE
   Ma YS, 2005, SOFTW TEST VERIF REL, V15, P97, DOI 10.1002/stvr.308
   Ma Yu-Seung., 2005, Description of method-level mutation operators for java
   Mateo P. R., 2013, P 25 INT C SOFTW ENG, P300
   Morell L. J., 1984, THESIS
   MORELL LJ, 1990, IEEE T SOFTWARE ENG, V16, P844, DOI 10.1109/32.57623
   Nan Li, 2015, 2015 IEEE Power & Energy Society General Meeting, P1, DOI 10.1109/PESGM.2015.7286139
   Nan Li, 2012, 2012 IEEE Fifth International Conference on Software Testing, Verification and Validation (ICST 2012), P471, DOI 10.1109/ICST.2012.128
   Nan Li, 2012, 2012 IEEE Fifth International Conference on Software Testing, Verification and Validation (ICST 2012), P280, DOI 10.1109/ICST.2012.108
   *OBJ MAN GROUP, 2006, OBJ CONSTR LANG
   Offutt J, 1999, LECT NOTES COMPUT SC, V1723, P416
   OFFUTT J, 1988, THESIS
   OSTRAND TJ, 1988, COMMUN ACM, V31, P676, DOI 10.1145/62959.62964
   Pezze M., 2008, Software Testing and Analysis: Process, Principles and Techniques
   Rusma M., 2004, CLASS OF TRIANGLE
   Shrestha Kavir, 2011, Proceedings 2011 IEEE Fourth International Conference on Software Testing, Verification and Validation (ICST 2011), P110, DOI 10.1109/ICST.2011.50
   Sprenkle S, 2007, ISSRE 2007: 18TH IEEE INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P117, DOI 10.1109/ISSRE.2007.26
   Staats M, 2012, PROC INT CONF SOFTW, P870, DOI 10.1109/ICSE.2012.6227132
   Staats M, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P391, DOI 10.1145/1985793.1985847
   Staats M, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P892, DOI 10.1145/1985793.1985936
   Xie Q, 2007, ACM T SOFTW ENG METH, V16, DOI 10.1145/1189748.1189752
   Yu TT, 2013, PROC INT SYMP SOFTW, P11, DOI 10.1109/ISSRE.2013.6698900
NR 45
TC 40
Z9 45
U1 0
U2 11
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD APR 1
PY 2017
VL 43
IS 4
BP 372
EP 395
DI 10.1109/TSE.2016.2597136
PG 24
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA ES7IH
UT WOS:000399722800005
DA 2024-07-18
ER

PT J
AU Dou, WS
   Xu, C
   Cheung, SC
   Wei, J
AF Dou, Wensheng
   Xu, Chang
   Cheung, S.
   Wei, Jun
TI CACheck: Detecting and Repairing Cell Arrays in Spreadsheets
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Spreadsheet; cell array; ambiguous computation smell
ID ERRORS
AB Spreadsheets are widely used by end users for numerical computation in their business. Spreadsheet cells whose computation is subject to the same semantics are often clustered in a row or column as a cell array. When a spreadsheet evolves, the cells in a cell array can degenerate due to ad hoc modifications. Such degenerated cell arrays no longer keep cells prescribing the same computational semantics, and are said to exhibit ambiguous computation smells. We propose CACheck, a novel technique that automatically detects and repairs smelly cell arrays by recovering their intended computational semantics. Our empirical study on the EUSES and Enron corpora finds that such smelly cell arrays are common. Our study also suggests that CACheck is useful for detecting and repairing real spreadsheet problems caused by smelly cell arrays. Compared with our previous work AmCheck, CACheck detects smelly cell arrays with higher precision and recall rate.
C1 [Dou, Wensheng; Wei, Jun] Chinese Acad Sci, Inst Software, State Key Lab Comp Sci, Beijing 100190, Peoples R China.
   [Xu, Chang] Nanjing Univ, Dept Comp Sci & Technol, State Key Lab Novel Software Technol, Nanjing 210023, Jiangsu, Peoples R China.
   [Cheung, S.] Hong Kong Univ Sci & Technol, Dept Comp Sci & Engn, Kowloon, Hong Kong, Peoples R China.
C3 Chinese Academy of Sciences; Institute of Software, CAS; Nanjing
   University; Hong Kong University of Science & Technology
RP Dou, WS (corresponding author), Chinese Acad Sci, Inst Software, State Key Lab Comp Sci, Beijing 100190, Peoples R China.
EM wsdou@otcaix.iscas.ac.cn; changxu@nju.edu.cn; scc@cse.ust.hk;
   wj@otcaix.iscas.ac.cn
RI Liu, Chenyu/KBQ-8899-2024; Wei, Junyong/AAC-8450-2019; Cheung, Shing
   Chi/U-5882-2018
OI Wei, Junyong/0000-0001-7649-3380; Cheung, Shing Chi/0000-0002-3508-7172
FU Beijing Natural Science Foundation [4164104]; National Key Research and
   Development Plan [2016YFB1000803]; Research Grants Council of Hong Kong
   [611811]; National Natural Science Foundation of China [61472174,
   91318301, 61321491]; Collaborative Innovation Center of Novel Software
   Technology and Industrialization of China
FX The authors wish to thank TSE editors and anonymous reviewers for their
   valuable comments on improving this article. This work was supported in
   part by Beijing Natural Science Foundation (4164104), National Key
   Research and Development Plan (2016YFB1000803), Research Grants Council
   (General Research Fund 611811) of Hong Kong, National Natural Science
   Foundation (Grant Nos. 61472174, 91318301, 61321491) of China, and the
   Collaborative Innovation Center of Novel Software Technology and
   Industrialization of China.
CR Abraham R., 2006, 28th International Conference on Software Engineering Proceedings, P182, DOI 10.1145/1134285.1134312
   Abraham R, 2007, J VISUAL LANG COMPUT, V18, P71, DOI 10.1016/j.jvlc.2006.06.001
   Abraham R, 2007, PROC INT CONF SOFTW, P251
   Abraham R, 2006, IEEE SYMPOSIUM ON VISUAL LANGUAGES AND HUMAN-CENTRIC COMPUTING, PROCEEDINGS, P43
   Abraham R, 2009, IEEE T SOFTWARE ENG, V35, P94, DOI 10.1109/TSE.2008.73
   [Anonymous], 1 C EM ANT MOUNT VIE
   [Anonymous], 2013, P 2013 C CTR ADV STU
   [Anonymous], P INT C INF SYST IMP
   [Anonymous], EUR SPREADSHEET RISK
   [Anonymous], J SYST SOFTW
   [Anonymous], EXCEL 2013 POWER PRO
   [Anonymous], 2006, DECISION LINE
   [Anonymous], THESIS
   [Anonymous], AUTOMATED SOFTWARE E
   Barowy DW, 2014, ACM SIGPLAN NOTICES, V49, P507, DOI [10.1145/2714064.2660207, 10.1145/2660193.2660207]
   Burnett M, 2002, IEEE 2002 SYMPOSIA ON HUMAN CENTRIC COMPUTING LANGUAGES AND ENVIRONMENTS, PROCEEDINGS, P140, DOI 10.1109/HCC.2002.1046366
   Chambers C, 2010, J VISUAL LANG COMPUT, V21, P249, DOI 10.1016/j.jvlc.2010.08.004
   Chambers C, 2009, J VISUAL LANG COMPUT, V20, P269, DOI 10.1016/j.jvlc.2009.04.002
   Cheung SC, 2016, PROC INT CONF SOFTW, P464, DOI 10.1145/2884781.2884796
   Cunha Jacome, 2010, Proceedings 2010 IEEE Symposium on Visual Languages and Human-Centric Computing (VL/HCC 2010), P93, DOI 10.1109/VLHCC.2010.22
   Cunha J, 2012, S VIS LANG HUM CEN C, P243, DOI 10.1109/VLHCC.2012.6344535
   Cunha J, 2012, LECT NOTES COMPUT SC, V7336, P202, DOI 10.1007/978-3-642-31128-4_15
   Davis JS, 1996, INT J HUM-COMPUT ST, V45, P429, DOI 10.1006/ijhc.1996.0061
   de Moura L, 2008, LECT NOTES COMPUT SC, V4963, P337, DOI 10.1007/978-3-540-78800-3_24
   Dou WS, 2016, 2016 IEEE/ACM 38TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING COMPANION (ICSE-C), P162, DOI 10.1145/2889160.2889238
   Dou WS, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P848, DOI 10.1145/2568225.2568316
   Fisher Marc, 2005, P 1 WORKSHOP END USE, P1
   Gulwani S, 2011, PLDI 11: PROCEEDINGS OF THE 2011 ACM CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P62
   Gulwani S, 2011, POPL 11: PROCEEDINGS OF THE 38TH ANNUAL ACM SIGPLAN-SIGACT SYMPOSIUM ON PRINCIPLES OF PROGRAMMING LANGUAGES, P317, DOI 10.1145/1926385.1926423
   Harris WR, 2011, PLDI 11: PROCEEDINGS OF THE 2011 ACM CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P317
   Hermans F., 2015, PROC 1 INT C LIVE CO, P1
   Hermans F, 2015, PROCEEDINGS 2015 IEEE SYMPOSIUM ON VISUAL LANGUAGES AND HUMAN-CENTRIC COMPUTING (VL/HCC), P153, DOI 10.1109/VLHCC.2015.7357210
   Hermans F, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P7, DOI 10.1109/ICSE.2015.129
   Hermans F, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P292, DOI 10.1109/ICSE.2013.6606575
   Hermans F, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P409, DOI 10.1109/ICSM.2012.6405300
   Hermans F, 2012, PROC INT CONF SOFTW, P441, DOI 10.1109/ICSE.2012.6227171
   Hermans F, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P451, DOI 10.1145/1985793.1985855
   Hermans F, 2010, LECT NOTES COMPUT SC, V6183, P52, DOI 10.1007/978-3-642-14107-2_4
   Hofer B, 2013, LECT NOTES COMPUT SC, V7793, P68, DOI 10.1007/978-3-642-37057-1_6
   Jannach D, 2014, J SYST SOFTWARE, V94, P129, DOI 10.1016/j.jss.2014.03.058
   Jha S., 2010, P 32 ACM IEEE INT C, V1, P215, DOI DOI 10.1145/1806799.1806833
   Lu Lanyue., 2013, Proceedings of the 11th USENIX Conference on File and Storage Technologies, FAST'13, P31
   Mittermeir R, 2002, NINTH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P221, DOI 10.1109/WCRE.2002.1173080
   Panko RR, 2010, DECIS SUPPORT SYST, V49, P235, DOI 10.1016/j.dss.2010.02.009
   Powell SG, 2008, DECIS SUPPORT SYST, V46, P128, DOI 10.1016/j.dss.2008.06.001
   Reichwein J, 1999, USENIX ASSOCIATION PROCEEDINGS OF THE 2ND CONFERENCE ON DOMAIN-SPECIFIC LANGUAGES (DSL'99), P25
   Rothermel G, 1998, PROC INT CONF SOFTW, P198, DOI 10.1109/ICSE.1998.671118
   Rothermel K. J., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, P230, DOI 10.1109/ICSE.2000.870414
   Ruthruff JR, 2006, IEEE T SOFTWARE ENG, V32, P213, DOI 10.1109/TSE.2006.37
   Shan Lu, 2007, Operating Systems Review, V41, P103, DOI 10.1145/1323293.1294272
   Shi Y, 2010, ACM SIGPLAN NOTICES, V45, P160, DOI 10.1145/1932682.1869474
   Singh Rishabh, 2012, Computer Aided Verification. Proceedings 24th International Conference, CAV 2012, P634, DOI 10.1007/978-3-642-31424-7_44
   Tan L, 2014, EMPIR SOFTW ENG, V19, P1665, DOI 10.1007/s10664-013-9258-8
NR 53
TC 19
Z9 20
U1 0
U2 3
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAR 1
PY 2017
VL 43
IS 3
BP 226
EP 251
DI 10.1109/TSE.2016.2584059
PG 26
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA ER2CW
UT WOS:000398602600003
DA 2024-07-18
ER

PT J
AU Cotroneo, D
   Pietrantuono, R
   Russo, S
AF Cotroneo, Domenico
   Pietrantuono, Roberto
   Russo, Stefano
TI RELAI Testing: A Technique to Assess and Improve Software Reliability
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Software testing; reliability; operational testing; random testing;
   sampling; operational profile
ID SENSITIVITY; MODELS
AB Testing software to assess or improve reliability presents several practical challenges. Conventional operational testing is a fundamental strategy that simulates the real usage of the system in order to expose failures with the highest occurrence probability. However, practitioners find it unsuitable for assessing/achieving very high reliability levels; also, they do not see the adoption of a "real" usage profile estimate as a sensible idea, being it a source of non-quantifiable uncertainty. Oppositely, debug testing aims to expose as many failures as possible, but regardless of their impact on runtime reliability. These strategies are used either to assess or to improve reliability, but cannot improve and assess reliability in the same testing session. This article proposes Reliability Assessment and Improvement (RELAI) testing, a new technique thought to improve the delivered reliability by an adaptive testing scheme, while providing, at the same time, a continuous assessment of reliability attained through testing and fault removal. The technique also quantifies the impact of a partial knowledge of the operational profile. RELAI is positively evaluated on four software applications compared, in separate experiments, with techniques conceived either for reliability improvement or for reliability assessment, demonstrating substantial improvements in both cases.
C1 [Cotroneo, Domenico; Pietrantuono, Roberto; Russo, Stefano] Univ Naples Federico II, DIETI, Via Claudio 2180125, Naples, Italy.
C3 University of Naples Federico II
RP Cotroneo, D; Pietrantuono, R; Russo, S (corresponding author), Univ Naples Federico II, DIETI, Via Claudio 2180125, Naples, Italy.
EM cotroneo@unina.it; roberto.pietrantuono@unina.it; Stefano.Russo@unina.it
RI Russo, Stefano/H-7723-2013
OI Russo, Stefano/0000-0002-8747-3446; Pietrantuono,
   Roberto/0000-0003-2449-1724
FU European Commission [324356]; MIUR under the project SVEVIA of the
   public-private laboratory COSMIC [PON02_00485_3487758, PON02_00669]
FX This work has been partially supported by the European Commission under
   the FP7 Marie Curie Industry-Academia Partnerships and Pathways (IAPP)
   projects ICEBERG (nr. 324356, www.iceberg-sqa.eu) and by MIUR under the
   project SVEVIA (PON02_00485_3487758) of the public-private laboratory
   COSMIC (PON02_00669).
CR Anand S, 2013, J SYST SOFTWARE, V86, P1978, DOI 10.1016/j.jss.2013.02.061
   [Anonymous], 2015, SOFTWARE FAULT EMULA
   [Anonymous], 1999, Testing Object-Oriented Systems: Models, Patterns, and Tools
   [Anonymous], 2014, SEKE
   Bai CG, 2010, CHIN CONTR CONF, P6031
   Beizer B, 1997, IEEE SOFTWARE, V14, P14, DOI 10.1109/52.582968
   Bishop Christopher M, 2006, PATTERN RECOGN, V128, P1
   Cai KY, 2008, J SYST SOFTWARE, V81, P1406, DOI 10.1016/j.jss.2007.11.721
   Cai Kai-Yuan., 1998, KLUW INT SER SOFTW E
   Cai KY, 2004, INFORM SOFTWARE TECH, V46, P989, DOI 10.1016/j.infsof.2004.07.006
   Cai KY, 2002, INFORM SOFTWARE TECH, V44, P841, DOI 10.1016/S0950-5849(02)00108-8
   Cai KY, 2000, INFORM SCIENCES, V126, P137, DOI 10.1016/S0020-0255(00)00018-9
   Cangusso K. C. J., 2004, OVERIEW SOFTWARE CVV
   Cao P., 2013, ARXIV E PRINTS, V1309.3052
   Chen TY, 2008, J SYST SOFTWARE, V81, P2146, DOI 10.1016/j.jss.2008.03.062
   Chen TY, 2009, IEEE T RELIAB, V58, P179, DOI 10.1109/TR.2008.2011687
   Chen TY, 2004, LECT NOTES COMPUT SC, V3321, P320
   CHILLAREGE R, 1992, IEEE T SOFTWARE ENG, V18, P943, DOI 10.1109/32.177364
   Cinque M, 2014, LECT NOTES COMPUT SC, V8583, P461, DOI 10.1007/978-3-319-09156-3_33
   COBB RH, 1990, IEEE SOFTWARE, V7, P44, DOI 10.1109/52.60601
   Cotroneo D, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P142, DOI 10.1109/ICSE.2013.6606560
   Cotroneo D, 2013, IEEE T RELIAB, V62, P408, DOI 10.1109/TR.2013.2257051
   Cotroneo D, 2013, J SYST SOFTWARE, V86, P1613, DOI 10.1016/j.jss.2013.02.020
   CURRIT PA, 1986, IEEE T SOFTWARE ENG, V12, P3, DOI 10.1109/TSE.1986.6312914
   da Silva Odair Jacinto, 2010, Proceedings 2010 Fourth IEEE International Conference on Secure Software Integration and Reliability Improvement (SSIRI 2010), P113, DOI 10.1109/SSIRI.2010.24
   Demsar J, 2006, J MACH LEARN RES, V7, P1
   Duraes JA, 2006, IEEE T SOFTWARE ENG, V32, P849, DOI 10.1109/TSE.2006.113
   Frankl PG, 1998, IEEE T SOFTWARE ENG, V24, P586, DOI 10.1109/32.707695
   Hamlet R., 2002, RANDOM TESTING ENCY
   HORVITZ DG, 1952, J AM STAT ASSOC, V47, P663, DOI 10.2307/2280784
   Huang CY, 2005, IEEE T RELIAB, V54, P592, DOI 10.1109/TR.2005.858099
   Jain M., 2011, P INT C SOFT COMP PR, P1027
   Kallepalli C, 2001, IEEE T SOFTWARE ENG, V27, P1023, DOI 10.1109/32.965342
   Linger R. C., 1988, Proceedings COMPSAC 88: The Twelfth International Computer Software and Applications Conference (Cat. No.88CH2611-2), P10, DOI 10.1109/CMPSAC.1988.17141
   Lv JP, 2014, J SYST SOFTWARE, V97, P192, DOI 10.1016/j.jss.2014.08.004
   Lv JP, 2014, IEEE T SOFTWARE ENG, V40, P396, DOI 10.1109/TSE.2014.2310194
   Lyu M., 1996, Handbook of Software Reliability Engineering
   Madani L, 2005, 16TH IEEE INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P325, DOI 10.1109/ISSRE.2005.40
   Mayer J., 2006, P 5 ACM IEEE INT S E, P105
   Mei-Hwa Chen, 1994, Proceedings. 5th International Symposium on Software Reliability Engineering (Cat. No.94TH8017), P276, DOI 10.1109/ISSRE.1994.341387
   MILLS HD, 1987, IEEE SOFTWARE, V4, P19, DOI 10.1109/MS.1987.231413
   Musa J. D., 1994, Proceedings. 5th International Symposium on Software Reliability Engineering (Cat. No.94TH8017), P334, DOI 10.1109/ISSRE.1994.341399
   MUSA JD, 1993, IEEE SOFTWARE, V10, P14, DOI 10.1109/52.199724
   Musa JD, 1996, COMPUTER, V29, P61, DOI 10.1109/2.544239
   Natella R, 2013, IEEE T SOFTWARE ENG, V39, P80, DOI 10.1109/TSE.2011.124
   NEMENYI P, 1962, BIOMETRICS, V18, P263
   OSTRAND TJ, 1988, COMMUN ACM, V31, P676, DOI 10.1145/62959.62964
   Pasquini A, 1996, IEEE T RELIAB, V45, P531, DOI 10.1109/24.556576
   Pietrantuono R, 2010, IEEE T SOFTWARE ENG, V36, P323, DOI 10.1109/TSE.2010.6
   Poore J., 1990, 1880 CDRL
   Poulding S, 2010, IEEE T SOFTWARE ENG, V36, P763, DOI 10.1109/TSE.2010.24
   RAO JNK, 1962, J ROY STAT SOC B, V24, P482
   Riebisch M, 2003, LECT NOTES COMPUT SC, V2591, P394
   Sarbu Constantin, 2008, 2008 IEEE International Symposium on Software Reliability Engineering, P127, DOI 10.1109/ISSRE.2008.14
   Schulz D, 2003, INT J ROBOT RES, V22, P99, DOI 10.1177/0278364903022002002
   SELBY RW, 1987, IEEE T SOFTWARE ENG, V13, P1027, DOI 10.1109/TSE.1987.233525
   Sridharan Mohan, 2010, Proceedings of the 2010 IEEE 21st International Symposium on Software Reliability Engineering (ISSRE 2010), P378, DOI 10.1109/ISSRE.2010.16
   Strigini L., 1997, PASCONWO6CCN2TN12
   Tappenden AF, 2009, IEEE T RELIAB, V58, P619, DOI 10.1109/TR.2009.2034288
   Thevenod-Fosse Pascale., 1991, Software Testing, Verification and Reliability, V1, P5
   Trammell C., 1995, Proceedings. Second IEEE International Software Engineering Standards Symposium (ISESS'95) Experience and Practice (Cat. No.95TB8092), P208, DOI 10.1109/SESS.1995.525966
   Trivedi K.S., 2001, Probability and statistics with reliability, queueing, and computer science applications, V2nd
   WHITTAKER JA, 1994, IEEE T SOFTWARE ENG, V20, P812, DOI 10.1109/32.328991
   Zachariah B, 2007, IEEE T RELIAB, V56, P246, DOI 10.1109/TR.2007.895310
NR 64
TC 21
Z9 24
U1 1
U2 13
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAY
PY 2016
VL 42
IS 5
BP 452
EP 475
DI 10.1109/TSE.2015.2491931
PG 24
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA DM1IA
UT WOS:000376097700003
DA 2024-07-18
ER

PT J
AU Lee, S
   Kang, S
   Kim, S
   Staats, M
AF Lee, Seonah
   Kang, Sungwon
   Kim, Sunghun
   Staats, Matt
TI The Impact of View Histories on Edit Recommendations
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Programming environments/construction tools; interactive environments;
   software maintenance; data mining; association rules; programmer
   interaction histories
ID SOFTWARE; COMPREHENSION
AB Recommendation systems are intended to increase developer productivity by recommending files to edit. These systems mine association rules in software revision histories. However, mining coarse-grained rules using only edit histories produces recommendations with low accuracy, and can only produce recommendations after a developer edits a file. In this work, we explore the use of finer-grained association rules, based on the insight that view histories help characterize the contexts of files to edit. To leverage this additional context and fine-grained association rules, we have developed MI, a recommendation system extending ROSE, an existing edit-based recommendation system. We then conducted a comparative simulation of ROSE and MI using the interaction histories stored in the Eclipse Bugzilla system. The simulation demonstrates that MI predicts the files to edit with significantly higher recommendation accuracy than ROSE (about 63 over 35 percent), and makes recommendations earlier, often before developers begin editing. Our results clearly demonstrate the value of considering both views and edits in systems to recommend files to edit, and results in more accurate, earlier, and more flexible recommendations.
C1 [Lee, Seonah; Kang, Sungwon] Korea Adv Inst Sci & Technol, Dept Comp Sci, Taejon 305701, South Korea.
   [Kim, Sunghun] Hong Kong Univ Sci & Technol, Dept Comp Sci & Engn, Hong Kong, Hong Kong, Peoples R China.
   [Staats, Matt] Univ Luxembourg, Interdisciplinary Ctr Secur Reliabil & Trust, Luxembourg, Luxembourg.
C3 Korea Advanced Institute of Science & Technology (KAIST); Hong Kong
   University of Science & Technology; University of Luxembourg
RP Lee, S (corresponding author), Korea Adv Inst Sci & Technol, Dept Comp Sci, 373-1 Guseong Dong, Taejon 305701, South Korea.
EM saleese@kaist.ac.kr; sungwon.kang@kaist.ac.kr; hunkim@cse.ust.hk;
   staatsm@gmail.com
OI Lee, Seonah/0000-0002-2004-2924
FU framework of international cooperation program [NRF-2013K2A1A2055116];
   Basic Science Research Program through the National Research Foundation
   of Korea (NRF) - Ministry of Education [NRF-2013R1A6A3A 01060158];
   Ministry of Science, ICT & Future Planning (MSIP), Korea, under the
   Information Technology Research Center (ITRC) support program
   [NIPA-2014-H0301-14-1020]
FX This work was supported under the framework of international cooperation
   program managed by National Research Foundation of Korea
   (NRF-2013K2A1A2055116), and was supported by Basic Science Research
   Program through the National Research Foundation of Korea (NRF) funded
   by the Ministry of Education (NRF-2013R1A6A3A 01060158). This research
   was also supported by the Ministry of Science, ICT & Future Planning
   (MSIP), Korea, under the Information Technology Research Center (ITRC)
   support program (NIPA-2014-H0301-14-1020) supervised by the National IT
   Industry Promotion Agency (NIPA).
CR Agrawal R., 1993, SIGMOD Record, V22, P207, DOI 10.1145/170036.170072
   Arcuri A, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1, DOI 10.1145/1985793.1985795
   Bacchelli A, 2011, EUR CON SFTWR MTNCE, P15, DOI 10.1109/CSMR.2011.6
   Begel A., 2010, Software Engineering, 2010 ACM/IEEE 32nd International Conference on, V1, P125
   Canfora Gerardo., 2010, P IEEE INT C SOFTWAR, P1
   Cubranic D, 2003, PROC INT CONF SOFTW, P408, DOI 10.1109/ICSE.2003.1201219
   DeLine R, 2005, 2005 IEEE Symposium on Visual Language and Human-Centric Computing, Proceedings, P241, DOI 10.1109/VLHCC.2005.32
   Dey AK, 2001, PERS UBIQUIT COMPUT, V5, P4, DOI 10.1007/s007790170019
   Fawcett T, 2006, PATTERN RECOGN LETT, V27, P861, DOI 10.1016/j.patrec.2005.10.010
   Fluri B, 2007, IEEE T SOFTWARE ENG, V33, P725, DOI 10.1109/TSE.2007.70731
   Han J., 2006, DATA MINING CONCEPTS
   Hattori L., 2010, Joint ERCIM Workshop on Software Evolution (EVOL) and International Workshop on Principles of Software Evolution (IWPSE), P13
   Hattori L, 2011, CONF PROC INT SYMP C, P161, DOI 10.1109/ICPC.2011.39
   Jaafar F., 2011, 2011 18th Working Conference on Reverse Engineering, P325, DOI 10.1109/WCRE.2011.47
   Kawrykow D, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P351, DOI 10.1145/1985793.1985842
   Kersten Mik, 2006, P 14 ACM SIGSOFT INT, P1
   Kim D, 2013, IEEE T SOFTWARE ENG, V39, P1597, DOI 10.1109/TSE.2013.24
   Kim M, 2009, PROC INT CONF SOFTW, P309, DOI 10.1109/ICSE.2009.5070531
   Lee S, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P1315, DOI 10.1109/ICSE.2013.6606706
   Lee S, 2013, J SYST SOFTWARE, V86, P2154, DOI 10.1016/j.jss.2013.03.103
   Lee T., 2011, Proceedings of the 19th ACM SIGSOFT symposium and the 13th European conference on Foundations of software engineering, P311
   Littlestone N., 1988, Machine Learning, V2, P285, DOI 10.1023/A:1022869011914
   McGrath J., 1994, HUMAN COMPUTER INTER, P162
   Parnin C, 2006, INT C PROGRAM COMPRE, P13, DOI 10.1109/ICPC.2006.14
   Parnin Chris, 2006, P INT WORKSH MIN SOF, P155
   Piorkowski D., 2012, Proc. of the ACM Annual Conference on Human Factors in Computing Systems (CHI'12), P1471
   Piorkowski D, 2011, S VIS LANG HUM CEN C, P109, DOI 10.1109/VLHCC.2011.6070387
   Robbes R., 2010, Proceedings of the 2010 7th IEEE Working Conference on Mining Software Repositories (MSR 2010), P161, DOI 10.1109/MSR.2010.5463278
   Robbes R, 2008, WORK CONF REVERSE EN, P42, DOI 10.1109/WCRE.2008.47
   Robbes R, 2007, INT C PROGRAM COMPRE, P155
   Robillard MP, 2010, IEEE SOFTWARE, V27, P80, DOI 10.1109/MS.2009.161
   Robillard MP, 2010, J SOFTW MAINT EVOL-R, V22, P143, DOI 10.1002/smr.413
   Sawadsky N, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P812, DOI 10.1109/ICSE.2013.6606627
   Singer J, 2005, PROC IEEE INT CONF S, P325
   The Eclipse Foundation, 2014, ECL BUGZ
   Ying ATT, 2011, CONF PROC INT SYMP C, P31, DOI 10.1109/ICPC.2011.35
   Ying ATT, 2004, IEEE T SOFTWARE ENG, V30, P574, DOI 10.1109/TSE.2004.52
   Zimmermann T, 2005, IEEE T SOFTWARE ENG, V31, P429, DOI 10.1109/TSE.2005.72
NR 38
TC 12
Z9 15
U1 0
U2 7
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAR
PY 2015
VL 41
IS 3
BP 314
EP 330
DI 10.1109/TSE.2014.2362138
PG 17
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA CD9ZG
UT WOS:000351460000006
DA 2024-07-18
ER

PT J
AU Brosig, F
   Meier, P
   Becker, S
   Koziolek, A
   Koziolek, H
   Kounev, S
AF Brosig, Fabian
   Meier, Philipp
   Becker, Steffen
   Koziolek, Anne
   Koziolek, Heiko
   Kounev, Samuel
TI Quantitative Evaluation of Model-Driven Performance Analysis and
   Simulation of Component-Based Architectures
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Software architectures; quality analysis and evaluation; design tools
   and techniques
ID DESIGN; PREDICTION; SYSTEMS; TOOL
AB During the last decade, researchers have proposed a number of model transformations enabling performance predictions. These transformations map performance-annotated software architecture models into stochastic models solved by analytical means or by simulation. However, so far, a detailed quantitative evaluation of the accuracy and efficiency of different transformations is missing, making it hard to select an adequate transformation for a given context. This paper provides an in-depth comparison and quantitative evaluation of representative model transformations to, e.g., queueing petri nets and layered queueing networks. The semantic gaps between typical source model abstractions and the different analysis techniques are revealed. The accuracy and efficiency of each transformation are evaluated by considering four case studies representing systems of different size and complexity. The presented results and insights gained from the evaluation help software architects and performance engineers to select the appropriate transformation for a given context, thus significantly improving the usability of model transformations for performance prediction.
C1 [Brosig, Fabian; Kounev, Samuel] Univ Wurzburg, Dept Comp Sci, D-97074 Wurzburg, Germany.
   [Koziolek, Anne] Karlsruhe Inst Technol, D-76131 Karlsruhe, Germany.
   [Meier, Philipp] Codecentric AG, D-80687 Munich, Germany.
   [Becker, Steffen] Univ Paderborn, Dept Software Engn, D-33102 Paderborn, Germany.
   [Koziolek, Heiko] ABB Corp Res, D-68526 Ladenburg, Germany.
C3 University of Wurzburg; Helmholtz Association; Karlsruhe Institute of
   Technology; University of Paderborn; ABB
RP Brosig, F (corresponding author), Univ Wurzburg, Dept Comp Sci, D-97074 Wurzburg, Germany.
EM fabian.brosig@uni-wuerzburg.de; philstyler@googlemail.com;
   steffen.becker@upb.de; koziolek@kit.edu; heiko.koziolek@de.abb.com;
   samuel.kounev@uni-wuerzburg.de
RI Koziolek, Heiko/AAF-5917-2020; Koziolek, Anne/AAG-5242-2020; Koziolek,
   Anne/T-2305-2019
OI Koziolek, Anne/0000-0002-1593-3394; 
FU German Research Foundation (DFG) within the Collaborative Research
   Center "On-The-Fly Computing" [SFB 901]; DFG [KO 3445/6-1]
FX This work was partially supported by the German Research Foundation
   (DFG) within the Collaborative Research Center "On-The-Fly Computing"
   (SFB 901) and by DFG grant No "KO 3445/6-1".
CR [Anonymous], 4 INT ICST C SIM TOO
   [Anonymous], 2005, UML PROF SCHED PERF
   Balsamo S, 2004, IEEE T SOFTWARE ENG, V30, P295, DOI 10.1109/TSE.2004.9
   Balsamo S., 2004, Software Engineering Notes, V29, P115, DOI 10.1145/974043.974062
   Balsamo S, 2006, EUROMICRO CONF PROC, P64, DOI 10.1109/EUROMICRO.2006.34
   Bause F., 1993, Proceedings. 5th International Workshop on Petri Nets and Performance Models (Cat. No.93TH0558-7), P14, DOI 10.1109/PNPM.1993.393439
   Becker S, 2009, J SYST SOFTWARE, V82, P3, DOI 10.1016/j.jss.2008.03.066
   Bernardi S, 2007, J SYST SOFTWARE, V80, P1843, DOI 10.1016/j.jss.2007.02.029
   Bertolino A, 2004, LECT NOTES COMPUT SC, V3054, P233
   Bolch G., 2006, Queueing Networks and Markov Chains: Modeling and Performance Evaluation with Computer Science Applications, VSecond
   Bondarev E, 2004, EUROMICRO CONF PROC, P40, DOI 10.1109/EURMIC.2004.1333354
   Brosig F., 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P183, DOI 10.1109/ASE.2011.6100052
   de Gooijer T., 2012, 3 ACM SPEC INT C PER, P205
   Di Marco A, 2004, FOURTH WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE (WICSA 2004), PROCEEDINGS, P37, DOI 10.1109/WICSA.2004.1310688
   DiMarco A., 2006, P 2 INT C QUAL SOFTW, ppp
   Distefano S, 2011, IEEE T SOFTWARE ENG, V37, P65, DOI 10.1109/TSE.2010.10
   Franks G., 1996, Software Quality, P15
   Franks G., 1999, THESIS CARLETON U OT
   Franks G, 2011, SIMUL SERIES, V43, P8
   Franks G, 2009, IEEE T SOFTWARE ENG, V35, P148, DOI 10.1109/TSE.2008.74
   Grassi V, 2007, J SYST SOFTWARE, V80, P528, DOI 10.1016/j.jss.2006.07.023
   Gu G.P., 2002, P 3 INT WORKSHOP SOF, P227
   Hamlet D, 2009, ACM T SOFTW ENG METH, V18, DOI 10.1145/1525880.1525885
   Hissam SA, 2002, LECT NOTES COMPUT SC, V2370, P108
   Huber N., 2010, 2010 32nd International Conference on Software Engineering (ICSE), P1, DOI 10.1145/1810295.1810297
   Kounev S, 2006, IEEE T SOFTWARE ENG, V32, P486, DOI 10.1109/TSE.2006.69
   Koziolek H, 2008, LECT NOTES COMPUT SC, V5119, P58, DOI 10.1007/978-3-540-69814-2_6
   Koziolek H, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P776, DOI 10.1145/1985793.1985902
   Koziolek H, 2010, PERFORM EVALUATION, V67, P634, DOI 10.1016/j.peva.2009.07.007
   Liu Y, 2005, IEEE T SOFTWARE ENG, V31, P928, DOI 10.1109/TSE.2005.127
   Meier P., 2011, Proceedings of the 2011 IEEE 19th International Symposium on Modelling, Analysis & Simulation of Computer and Telecommunication Systems (MASCOTS 2011), P339, DOI 10.1109/MASCOTS.2011.23
   Meier P., 2010, THESIS KARLSRUHE I T
   Menasce DanielA., 1994, CAPACITY PLANNING PE
   Nou R, 2009, J SYST SOFTWARE, V82, P486, DOI 10.1016/j.jss.2008.07.048
   Object Management Group (OMG), 2007, UML PROF MARTE BET 1
   Petriu D. C., 2007, P 6 INT WORKSH SOFTW, P91
   Petriu DB, 2007, SOFTW SYST MODEL, V6, P163, DOI 10.1007/s10270-006-0026-8
   Rathfelder Christoph, 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P352, DOI 10.1109/ASE.2011.6100073
   Röttger S, 2007, SOFTW SYST MODEL, V6, P185, DOI 10.1007/s10270-006-0024-x
   ROLIA JA, 1995, IEEE T SOFTWARE ENG, V21, P689, DOI 10.1109/32.403785
   Sachs K., 2011, J SOFTW SYST MODEL, V12, P705
   Sitaraman M., 2001, Software Engineering Notes, V26, P3, DOI 10.1145/379377.375223
   Smith C.U., 2005, P 5 INT WORKSHOP SOF, P87
   Smith CU, 2010, PERFORM EVALUATION, V67, P548, DOI 10.1016/j.peva.2010.01.006
   SMITH CU, 2002, PERFORMANCE SOLUTION
   Spinner S., 2012, P 33 INT C APPL THEO, P388
   Tribastone, 2008, P 7 INT WORKSHOP SOF, P67
   Tribastone M., 2010, P 1 JOINT WOSPSIPEW, P183
   Tribastone M, 2012, IEEE T SOFTWARE ENG, V38, P205, DOI 10.1109/TSE.2010.82
   Xiuping Wu, 2004, Software Engineering Notes, V29, P290, DOI 10.1145/974043.974089
NR 50
TC 44
Z9 50
U1 0
U2 12
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD FEB
PY 2015
VL 41
IS 2
BP 157
EP 175
DI 10.1109/TSE.2014.2362755
PG 19
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA CD9ZJ
UT WOS:000351460400003
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Brandt, J
   Gemünde, M
   Schneider, K
   Shukla, SK
   Talpin, JP
AF Brandt, Jens
   Gemuende, Mike
   Schneider, Klaus
   Shukla, Sandeep K.
   Talpin, Jean-Pierre
TI Embedding Polychrony into Synchrony
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Model-driven embedded software; synchronous programming; polychronous
   programming; programming models; synchrony hypothesis; synchronous
   guarded commands
ID LANGUAGES
AB This paper presents an embedding of polychronous programs into synchronous ones. Due to this embedding, it is not only possible to deepen the understanding of these different models of computation, but, more importantly, it is possible to transfer compilation techniques that were developed for synchronous programs to polychronous programs. This transfer is nontrivial because the underlying paradigms differ more than their names suggest: Since synchronous systems react deterministically to given inputs in discrete steps, they are typically used to describe reactive systems with a totally ordered notion of time. In contrast, polychronous system models entail a partially ordered notion of time, and are most suited to interface a system with an asynchronous environment by specifying input/output constraints from which a deterministic controller may eventually be refined and synthesized. As particular examples for the mentioned cross fertilization, we show how a simulator and a verification backend for synchronous programs can be made available to polychronous specifications, which is a first step toward integrating heterogeneous models of computation.
C1 [Brandt, Jens; Gemuende, Mike; Schneider, Klaus] Univ Kaiserslautern, Dept Comp Sci, D-67653 Kaiserslautern, Germany.
   [Shukla, Sandeep K.] Virginia Tech Arlington Res Ctr, Hume Ctr Natl Secur & Technol, Arlington, VA 22203 USA.
   [Talpin, Jean-Pierre] IRISA INRIA Rennes, INRIA Rennes Bretagne Atlantique, F-35042 Rennes, France.
C3 University of Kaiserslautern; Universite de Rennes
RP Brandt, J (corresponding author), Univ Kaiserslautern, Dept Comp Sci, POB 3049, D-67653 Kaiserslautern, Germany.
EM brandt@cs.uni-kl.de; gemuende@cs.uni-kl.de;
   klaus.schneider@cs.uni-kl.de; shukla@vt.edu; talpin@irisa.fr
RI SHUKLA, SANDEEP/T-6430-2019; Brandt, Jens/IQW-2942-2023
OI SHUKLA, SANDEEP/0000-0001-5525-7426; Brandt, Jens/0000-0003-1193-5496
FU US Air Force [FA8750-11-1-0042]
FX The authors would like to thank the INRIA associated project POLYCORE
   for travel support that enabled them to get together to work on this
   project, and US Air Force Contract (FA8750-11-1-0042) for partial
   support of the work of one of the authors.
CR [Anonymous], 2006, 6 INT C APPL CONC SY
   Benveniste A, 2003, P IEEE, V91, P64, DOI 10.1109/JPROC.2002.805826
   Benveniste A, 2000, INFORM COMPUT, V163, P125, DOI [10.1006/inco.2000.9999, 10.1006/inco.2000.2898]
   Berry G., 1993, Foundations of Software Technology and Theoretical Computer Science. 13th Conference Proceedings, P72
   Berry G., 1991, FORMAL METHODS VLSI
   Berry G., 1999, P 11 IFIP WG 10 5 AD
   Berry Gerard., 1998, Proof, Language and Interaction: Essays in Honour of Robin Milner
   Boldt M, 2008, EURASIP J EMBED SYST, DOI 10.1155/2008/594129
   Brandt J., 2007, FORUM SPECIFICATION, P98
   Brandt J., 2011, 38211 U KAIS DEP COM
   Cassandras C. G., 2008, INTRO TODISCRETE EVE
   Chandy K.M., 1989, Parallel program design
   Dill D. L., 1996, LNCS, P390, DOI DOI 10.1007/3-540-61474-586
   Gamatie A, 2010, DESIGNING EMBEDDED SYSTEMS WITH THE SIGNAL PROGRAMMING LANGUAGE, P1, DOI 10.1007/978-1-4419-0941-1
   Gamatié A, 2007, ACM T SOFTW ENG METH, V16, DOI 10.1145/1217295.1217298
   Girault A, 1999, IEEE T COMPUT AID D, V18, P742, DOI 10.1109/43.766725
   Halbwachs N, 2005, Third ACM & IEEE International Conference on Formal Methods and Models for Co-Design, Proceedings, P3, DOI 10.1109/MEMCOD.2005.1487884
   Halbwachs N, 2002, LECT NOTES COMPUT SC, V2491, P240
   Halbwachs Nicolas., 1993, Synchronous Programming of Reactive Systems
   Harel D., 1996, ACM Transactions on Software Engineering and Methodology, V5, P293, DOI 10.1145/235321.235322
   Jantsch Axel., 2004, MODELING EMBEDDED SY
   Jarvinen H., 1990, P IEEE
   Jose BA, 2010, ASIA S PACIF DES AUT, P13, DOI 10.1109/ASPDAC.2010.5419925
   Le Guernic P, 2003, J CIRCUIT SYST COMP, V12, P261, DOI 10.1142/S0218126603000763
   Lee EA, 1998, IEEE T COMPUT AID D, V17, P1217, DOI 10.1109/43.736561
   LEE EA, 1995, P IEEE, V83, P773, DOI 10.1109/5.381846
   Logothetis G, 2003, DESIGN, AUTOMATION AND TEST IN EUROPE CONFERENCE AND EXHIBITION, PROCEEDINGS, P196
   MILNER R, 1983, THEOR COMPUT SCI, V25, P267, DOI 10.1016/0304-3975(83)90114-7
   Milner R., 1981, CSR7580 U ED DEP COM
   Object Management Group, 2008, MOD AN REAL TIM EMB
   Rocheteau F., 1992, Real-Time: Theory in Practice. REX Workshop Proceedings, P195, DOI 10.1007/BFb0031993
   Schneider K, 2001, SECOND INTERNATIONAL CONFERENCE ON APPLICATION OF CONCURRENCY TO SYSTEMS DESIGN, PROCEEDINGS, P143, DOI 10.1109/CSD.2001.981772
   Schneider K., 2002, Theorem Proving in Higher Order Logics. 15th International Conference, TPHOLs 2002. Proceedings (Lecture Notes in Computer Science Vol.2410), P314
   Schneider K., 2001, LPAR, (London, UK), P39, DOI DOI 10.1007/3-540-45653-8
   SCHNEIDER K, 2004, COMPILERS ARCHITECTU, P179, DOI DOI 10.1145/1023833.1023859
   SCHNEIDER K., 2000, WORKSH DISTR PAR EMB, P205
   Schneider K, 2006, ELECTRON NOTES THEOR, V153, P71, DOI 10.1016/j.entcs.2006.02.028
   Schneider Klaus, 2009, Technical Report. Internal Report 375
   Shukla SK, 2010, SYNTHESIS OF EMBEDDED SOFTWARE: FRAMEWORKS AND METHODOLOGIES FOR CORRECTNESS BY CONSTRUCTION, P1, DOI 10.1007/978-1-4419-6400-7
   Titzer BL, 2005, ACM SIGPLAN NOTICES, V40, P59, DOI 10.1145/1070891.1065919
NR 40
TC 1
Z9 3
U1 0
U2 4
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUL
PY 2013
VL 39
IS 7
BP 917
EP 929
DI 10.1109/TSE.2012.85
PG 13
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 174AO
UT WOS:000321125200003
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Zisman, A
   Spanoudakis, G
   Dooley, J
   Siveroni, I
AF Zisman, Andrea
   Spanoudakis, George
   Dooley, James
   Siveroni, Igor
TI Proactive and Reactive Runtime Service Discovery: A Framework and Its
   Evaluation
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Web-services discovery; composite web services; context-aware QoS model;
   application development in services
AB The identification of services during the execution of service-based applications to replace services in them that are no longer available and/or fail to satisfy certain requirements is an important issue. In this paper, we present a framework to support runtime service discovery. This framework can execute service discovery queries in pull and push mode. In pull mode, it executes queries when a need for finding a replacement service arises. In push mode, queries are subscribed to the framework to be executed proactively and, in parallel with the operation of the application, to identify adequate services that could be used if the need for replacing a service arises. Hence, the proactive (push) mode of query execution makes it more likely to avoid interruptions in the operation of service-based applications when a service in them needs to be replaced at runtime. In both modes of query execution, the identification of services relies on distance-based matching of structural, behavioral, quality, and contextual characteristics of services and applications. A prototype implementation of the framework has been developed and an evaluation was carried out to assess the performance of the framework. This evaluation has shown positive results, which are discussed in the paper.
C1 [Zisman, Andrea; Spanoudakis, George; Siveroni, Igor] City Univ London, Sch Informat, London EC1V 0HB, England.
   [Dooley, James] Univ Essex, Sch Comp Sci & Elect Engn, Colchester CO4 3SQ, Essex, England.
C3 City University London; University of Essex
RP Zisman, A (corresponding author), City Univ London, Sch Informat, Northampton Sq, London EC1V 0HB, England.
EM a.zisman@soi.city.ac.uk; G.E.Spanoudakis@city.ac.uk; jpdool@essex.ac.uk;
   igor@siveroni.com
OI Siveroni, Igor/0000-0003-2595-3062
FU European Commission [F6-34363, F7-257351]
FX This work was partially funded by the European Commission initially as
   part of the F6 project GREDIA (F6-34363) and subsequently as part of the
   F7 project ASSERT4SOA (F7-257351).
CR Aggarwal R., 2004, P 2 INT C SERV COMP
   [Anonymous], 2003, Journal of Web Semantics
   [Anonymous], P IEEE INT C WEB SER
   Ardagna B, 2007, IEEE SOFTWARE, V24, P39, DOI 10.1109/MS.2007.174
   Baresi L., 2007, SERVICE ORIENTED COM, V1
   BEERI C, 2006, P 32 INT C VER LARG
   Bormann F., 2005, P 14 IST MOB WIR COM
   Bouhini C., 2010, P IEEE INT C SERV OR
   Cuddy S., 2005, P IEEE INT C WIR MOB
   Dai Y, 2009, J COMPUT SCI TECH-CH, V24, P250, DOI 10.1007/s11390-009-9221-8
   Deora V., 2003, P 1 INT C SERV OR CO
   Dolley J., 2009, GRID TECHNOLOGY MAXI
   Doulkeridis C, 2006, ELECTRON NOTES THEOR, V146, P101, DOI 10.1016/j.entcs.2005.11.010
   Driss M., 2010, P 8 INT C SERV OR CO
   DSD, 2013, DYN SERV DISC FRAM P
   Friedrich G, 2010, IEEE T SOFTWARE ENG, V36, P198, DOI 10.1109/TSE.2010.8
   Grirori D., 2006, P 16 IEEE INT C AUT
   Guinea S., 2011, P 9 INT C SERV OR CO
   Jun N., 2010, P INT C SERV SCI
   Kazhamiakin R., 2009, P INT C SERV OR COMP
   Keller U., 2005, P EUR SEM WEB C
   Kim J., 2007, P 7 IEEE INT C COMP
   Klusch M., 2006, P INT C AUT AG MULT
   Leitner P., 2010, P IEEE INT C WEB SER
   Li L., 2003, P INT C WORLD WID WE
   Lin KJ, 2010, SERV ORIENTED COMPUT, V4, P157, DOI 10.1007/s11761-010-0063-6
   Mahbub K, 2011, AUTOMAT SOFTW ENG, V18, P117, DOI 10.1007/s10515-010-0077-5
   Meng L., 2011, P IEEE INT C WEB SER
   Metzer A., 2010, P WORKSH SOFTW ENG A
   MIKHAIEL R, 2006, P 4 INT C SERV OR CO
   Morato J., 2004, P 2 GLOB WORDNET C
   Moser O., 2008, P 17 INT WORLD WID W
   Niu H., 1999, P 37 ACM SE REG C
   Pantazoglou M., 2006, P 4 INT C SERV OR CO
   Pawar P., 2006, P IEEE INT WORKSH SE
   Shen Z., 2005, P 3 INT C SERV COMP
   Singh S., 2005, P 3 EUR C WEB SERV
   Spanoudakis G., 2007, P IEEE INT C WEB SER
   Spanoudakis G, 2010, IEEE T SOFTWARE ENG, V36, P371, DOI 10.1109/TSE.2009.88
   Srivastava A., 2010, P IEEE INT C WEB SER
   Tosi Davide, 2009, International Journal of Autonomic Computing, V1, P58, DOI 10.1504/IJAC.2009.024500
   Treiber M, 2007, IEEE INTERNET COMPUT, V11, P66, DOI 10.1109/MIC.2007.99
   Vu L., 2005, P COOP INF SYST C
   Xu L., 2003, P 15 C ADV INF SYST
   Ye Y., 2001, P 16 INT C AUT SOFTW
   Yunyao L.Y., 2005, P ACM SIGMOD INT C M
   Zisman A., 2008, P IEEE INT C AUT SOF
   Zisman A., 2007, P IEEE INT SERV COMP
   Zisman A., 2008, P INT SERV COMP C
NR 49
TC 24
Z9 25
U1 0
U2 8
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUL
PY 2013
VL 39
IS 7
BP 954
EP 974
DI 10.1109/TSE.2012.84
PG 21
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 174AO
UT WOS:000321125200005
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Dejaeger, K
   Verbraken, T
   Baesens, B
AF Dejaeger, Karel
   Verbraken, Thomas
   Baesens, Bart
TI Toward Comprehensible Software Fault Prediction Models Using Bayesian
   Network Classifiers
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Software fault prediction; Bayesian networks; classification;
   comprehensibility
ID DEFECT PREDICTION; METRICS; ALGORITHMS; DISCOVERY; CRITIQUE; INDUCTION;
   SELECTION; CODE
AB Software testing is a crucial activity during software development and fault prediction models assist practitioners herein by providing an upfront identification of faulty software code by drawing upon the machine learning literature. While especially the Naive Bayes classifier is often applied in this regard, citing predictive performance and comprehensibility as its major strengths, a number of alternative Bayesian algorithms that boost the possibility of constructing simpler networks with fewer nodes and arcs remain unexplored. This study contributes to the literature by considering 15 different Bayesian Network (BN) classifiers and comparing them to other popular machine learning techniques. Furthermore, the applicability of the Markov blanket principle for feature selection, which is a natural extension to BN theory, is investigated. The results, both in terms of the AUC and the recently introduced H-measure, are rigorously tested using the statistical framework of Demsar. It is concluded that simple and comprehensible networks with less nodes can be constructed using BN classifiers other than the Naive Bayes classifier. Furthermore, it is found that the aspects of comprehensibility and predictive performance need to be balanced out, and also the development context is an item which should be taken into account during model selection.
C1 [Dejaeger, Karel; Verbraken, Thomas; Baesens, Bart] Katholieke Univ Leuven, Fac Business & Econ, Dept Decis Sci & Informat Management, B-3000 Louvain, Belgium.
   [Baesens, Bart] Univ Southampton, Sch Management, Highfield Southampton SO17 1BJ, England.
C3 KU Leuven; University of Southampton
RP Dejaeger, K (corresponding author), Katholieke Univ Leuven, Fac Business & Econ, Dept Decis Sci & Informat Management, Naamsestr 69, B-3000 Louvain, Belgium.
EM Karel.Dejaeger@econ.kuleuven.be; Thomas.Verbraken@econ.kuleuven.be;
   Bart.Baesens@econ.kuleuven.be
FU Odysseus program (Flemish Government, FWO) [G.0915.09]
FX This research was supported by the Odysseus program (Flemish Government,
   FWO) under grant G.0915.09.
CR Ali S, 2006, APPL SOFT COMPUT, V6, P119, DOI 10.1016/j.asoc.2004.12.002
   Aliferis C.F., 2003, P AMIA ANN S
   Aliferis CF, 2010, J MACH LEARN RES, V11, P171
   [Anonymous], 2002, INT C SYST BIOL
   [Anonymous], 1995, 11 C UNC ART INT SAN, DOI DOI 10.1109/TGRS.2004.834800
   [Anonymous], THESIS U TOLEDO
   [Anonymous], 2007, PROMISE 07, DOI DOI 10.1109/PROMISE.2007.10
   [Anonymous], P 15 INT S SOFTW REL
   Arisholm E, 2006, P 5 ACM IEEE INT S E
   Askira-Gelman I, 1998, P ANN HICSS, P247, DOI 10.1109/HICSS.1998.648319
   Azar D, 2011, INFORM SOFTWARE TECH, V53, P388, DOI 10.1016/j.infsof.2010.11.013
   Baesens B, 2003, J OPER RES SOC, V54, P627, DOI 10.1057/palgrave.jors.2601545
   Baisch E, 1997, IEEE SYS MAN CYBERN, P1045, DOI 10.1109/ICSMC.1997.638086
   Boehm B., 2006, 28th International Conference on Software Engineering Proceedings, P12, DOI 10.1145/1134285.1134288
   BOEHM BW, 1988, IEEE T SOFTWARE ENG, V14, P1462, DOI 10.1109/32.6191
   Breiman L., 2001, Machine Learning, V45, P5, DOI 10.1023/A:1010933404324
   Castillo E., 1997, Expert Systems and Probabilistic Network Models, V493, P543
   Catal C, 2011, EXPERT SYST APPL, V38, P4626, DOI 10.1016/j.eswa.2010.10.024
   Catal C, 2011, EXPERT SYST APPL, V38, P2347, DOI 10.1016/j.eswa.2010.08.022
   Catal C, 2009, EXPERT SYST APPL, V36, P7346, DOI 10.1016/j.eswa.2008.10.027
   Catal C, 2009, INFORM SCIENCES, V179, P1040, DOI 10.1016/j.ins.2008.12.001
   Cheng J, 2002, ARTIF INTELL, V137, P43, DOI 10.1016/S0004-3702(02)00191-1
   Chickering D. M., 2003, Journal of Machine Learning Research, V3, P507, DOI 10.1162/153244303321897717
   Chickering DM, 2004, J MACH LEARN RES, V5, P1287
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   CHOW CK, 1968, IEEE T INFORM THEORY, V14, P462, DOI 10.1109/TIT.1968.1054142
   COOPER GF, 1992, MACH LEARN, V9, P309, DOI 10.1007/BF00994110
   Dallmeier V., 2007, P 22 IEEE ACM INT C, P433
   Dejaeger K, 2012, IEEE T SOFTWARE ENG, V38, P375, DOI 10.1109/TSE.2011.55
   Demsar J, 2006, J MACH LEARN RES, V7, P1
   Domingos P, 1997, MACH LEARN, V29, P103, DOI 10.1023/A:1007413511361
   Domingos P, 1999, DATA MIN KNOWL DISC, V3, P409, DOI 10.1023/A:1009868929893
   Duda R., 1973, Pattern Classification and Scene Analysis
   DUNN OJ, 1961, J AM STAT ASSOC, V56, P52, DOI 10.2307/2282330
   Elish KO, 2008, J SYST SOFTWARE, V81, P649, DOI 10.1016/j.jss.2007.07.040
   Evett M., 1999, P 3 ANN C GEN PROGR, P60
   Fawcett T, 2006, PATTERN RECOGN LETT, V27, P861, DOI 10.1016/j.patrec.2005.10.010
   FAYYAD UM, 1993, IJCAI-93, VOLS 1 AND 2, P1022
   Fenton N. E., 1998, Software metrics: a rigorous and practical approach
   Fenton NE, 1999, J SYST SOFTWARE, V47, P149, DOI 10.1016/S0164-1212(99)00035-7
   Fenton NE, 1999, IEEE T SOFTWARE ENG, V25, P675, DOI 10.1109/32.815326
   Fischer M., 2003, P INT C SOFTW MAINT
   Flach P., 2011, P 28 INT C MACH LEAR, P657
   Friedman N, 1997, MACH LEARN, V29, P131, DOI 10.1023/A:1007465528199
   Goedertier S, 2011, APPL SOFT COMPUT, V11, P1697, DOI 10.1016/j.asoc.2010.04.025
   Gokhale SS, 2007, IEEE T DEPEND SECURE, V4, P32, DOI 10.1109/TDSC.2007.4
   Gondra I, 2008, J SYST SOFTWARE, V81, P186, DOI 10.1016/j.jss.2007.05.035
   Goodenough J. B., 1975, IEEE Transactions on Software Engineering, VSE-1, P156, DOI 10.1109/TSE.1975.6312836
   Gyimóthy T, 2005, IEEE T SOFTWARE ENG, V31, P897, DOI 10.1109/TSE.2005.112
   Halstead M. H., 1977, ELEMENTS SOFTWARE SC
   Hand DJ, 2009, MACH LEARN, V77, P103, DOI 10.1007/s10994-009-5119-5
   Hand DJ, 2001, INT STAT REV, V69, P385, DOI 10.1111/j.1751-5823.2001.tb00465.x
   Harrold MaryJean., 2000, ICSE 00 P C FUTURE S, P61
   HECKERMAN D, 1995, MACH LEARN, V20, P197, DOI 10.1023/A:1022623210503
   HOLTE RC, 1993, MACH LEARN, V11, P63, DOI 10.1023/A:1022631118932
   Hudepohl JP, 1996, IEEE SOFTWARE, V13, P56, DOI 10.1109/52.536459
   Huysmans J, 2011, DECIS SUPPORT SYST, V51, P141, DOI 10.1016/j.dss.2010.12.003
   Jiang Y., 2009, P 5 INT C PRED MOD S
   Jiang Y, 2007, ISSRE 2007: 18TH IEEE INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P237, DOI 10.1109/ISSRE.2007.24
   Jiang Y, 2008, EMPIR SOFTW ENG, V13, P561, DOI 10.1007/s10664-008-9079-3
   Jorgensen M, 2006, INFORM SOFTWARE TECH, V48, P297, DOI 10.1016/j.infsof.2005.07.002
   Kamiya T., 1999, P 2 IEEE INT S OBJ O
   Kanmani S, 2007, INFORM SOFTWARE TECH, V49, P483, DOI 10.1016/j.infsof.2006.07.005
   Khoshgoftaar TM, 2002, EIGHTH IEEE SYMPOSIUM ON SOFTWARE METRICS, PROCEEDINGS, P203, DOI 10.1109/METRIC.2002.1011339
   Khoshgoftaar TM, 2002, IEEE T RELIAB, V51, P455, DOI 10.1109/TR.2002.804488
   Kocaguneli E., 2009, P INT C SOFTW ENG KN
   KONONENKO I, 1991, LECT NOTES ARTIF INT, V482, P206, DOI 10.1007/BFb0017015
   Kotsiantis S. B., 2007, Emerging artificial intelligence applications in computer engineering, DOI DOI 10.31449/INF.V31I3.148
   Kumar V., 2006, Introduction to Data Mining
   Langley P., 1994, Proceedings of the Tenth international conference on Uncertainty in artificial intelligence, P399, DOI DOI 10.1016/B978-1-55860-332-5.50055-9
   Larranaga P, 1996, IEEE T SYST MAN CY A, V26, P487, DOI 10.1109/3468.508827
   Lehman E.L., 1975, Nonparametrics: Statistical Methods Based on Ranks
   Lessmann S, 2008, IEEE T SOFTWARE ENG, V34, P485, DOI 10.1109/TSE.2008.35
   LI HF, 1987, IEEE T SOFTWARE ENG, V13, P697, DOI 10.1109/TSE.1987.233475
   Ma BJ, 2010, ADV INTEL SYS RES, V14, P396
   Mahmood S, 2005, INFORM SOFTWARE TECH, V47, P693, DOI 10.1016/j.infsof.2005.03.007
   Marcus A, 2008, IEEE T SOFTWARE ENG, V34, P287, DOI 10.1109/TSE.2007.70768
   Menzies T., 2010, AUTOMAT SOFTW ENG, P1
   Menzies T, 2007, IEEE T SOFTWARE ENG, V33, P2, DOI 10.1109/TSE.2007.256941
   Nemenyi P. B., 1963, doctoral dissertation
   Ostrand TJ, 2005, IEEE T SOFTWARE ENG, V31, P340, DOI 10.1109/TSE.2005.49
   Ostrand TJ., 2004, Proceedings of the 2004 ACM SIGSOFT International Symposium on Software Testing and Analysis, ISSTA '04, V29, P86, DOI [DOI 10.1145/1013886.1007524, 10.1145/1013886.1007524]
   Pearl J., 1988, PROBABILISTIC REASON
   Quah T.-S., 2003, P INT C SOFTW MAINT
   Raymond Eric, 1999, KNOWLEDGE TECHNOLOGY, V12, P23, DOI DOI 10.1007/S12130-999-1026-0
   Royce W.W., 1970, P IEEE WESCON IEEE, P1
   Sessions V., 2009, J. Data Inform. Qual., V1, P1, DOI [10.1145/1659225.1659227, DOI 10.1145/1659225.1659227]
   SHEPPERD M, 1994, J SYST SOFTWARE, V26, P197, DOI 10.1016/0164-1212(94)90011-6
   SHEPPERD M, 1988, SOFTWARE ENG J, V3, P30, DOI 10.1049/sej.1988.0003
   SHERER SA, 1995, J SYST SOFTWARE, V29, P97, DOI 10.1016/0164-1212(94)00051-N
   Shull F, 2002, EIGHTH IEEE SYMPOSIUM ON SOFTWARE METRICS, PROCEEDINGS, P249, DOI 10.1109/METRIC.2002.1011343
   Spirtes P., 2000, CAUSATION PREDICTION
   TODD BS, 1994, METHOD INFORM MED, V33, P402
   Tomaszewski P, 2007, J SYST SOFTWARE, V80, P1227, DOI 10.1016/j.jss.2006.12.548
   Tosun A., 2011, SOFTW QUAL J, P1
   Tosun Aye, 2009, P 5 INT C PRED MOD S
   Tsamardinos I, 2006, MACH LEARN, V65, P31, DOI 10.1007/s10994-006-6889-7
   Turhan B., 2008, P 34 EUR C SOFTW ENG
   Turhan B, 2007, ICSOFT 2007: PROCEEDINGS OF THE SECOND INTERNATIONAL CONFERENCE ON SOFTWARE AND DATA TECHNOLOGIES, VOL SE, P244
   Turhan B, 2009, EMPIR SOFTW ENG, V14, P540, DOI 10.1007/s10664-008-9103-7
   Turhan B, 2009, DATA KNOWL ENG, V68, P278, DOI 10.1016/j.datak.2008.10.005
   Vandecruys O, 2008, J SYST SOFTWARE, V81, P823, DOI 10.1016/j.jss.2007.07.034
   Verbeke W, 2011, EXPERT SYST APPL, V38, P2354, DOI 10.1016/j.eswa.2010.08.023
   Verbraken T., 2011, INTELLIGENT IN PRESS
   Witten I. H., 2005, DATA MINING PRACTICA
   Wu XD, 2008, KNOWL INF SYST, V14, P1, DOI 10.1007/s10115-007-0114-2
   Yuan XH, 2000, 3RD IEEE SYMPOSIUM ON APPLICATION SPECIFIC SYSTEMS AND SOFTWARE ENGINEERING TECHNOLOGY, PROCEEDINGS, P85, DOI 10.1109/ASSET.2000.888052
   Zhang HY, 2008, IEEE T SOFTWARE ENG, V34, P301, DOI 10.1109/TSE.2007.70771
   Zimmermann T., 2009, P S FDN SOFTW ENG
NR 109
TC 125
Z9 133
U1 2
U2 49
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD FEB
PY 2013
VL 39
IS 2
BP 237
EP 257
DI 10.1109/TSE.2012.20
PG 21
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 079ML
UT WOS:000314174500007
DA 2024-07-18
ER

PT J
AU Chen, WN
   Zhang, J
AF Chen, Wei-Neng
   Zhang, Jun
TI Ant Colony Optimization for Software Project Scheduling and Staffing
   with an Event-Based Scheduler
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Software project planning; project scheduling; resource allocation;
   workload assignment; ant colony optimization (ACO)
ID EVOLUTIONARY APPROACH; SEARCH; ALGORITHM; MODEL
AB Research into developing effective computer aided techniques for planning software projects is important and challenging for software engineering. Different from projects in other fields, software projects are people-intensive activities and their related resources are mainly human resources. Thus, an adequate model for software project planning has to deal with not only the problem of project task scheduling but also the problem of human resource allocation. But as both of these two problems are difficult, existing models either suffer from a very large search space or have to restrict the flexibility of human resource allocation to simplify the model. To develop a flexible and effective model for software project planning, this paper develops a novel approach with an event-based scheduler (EBS) and an ant colony optimization (ACO) algorithm. The proposed approach represents a plan by a task list and a planned employee allocation matrix. In this way, both the issues of task scheduling and employee allocation can be taken into account. In the EBS, the beginning time of the project, the time when resources are released from finished tasks, and the time when employees join or leave the project are regarded as events. The basic idea of the EBS is to adjust the allocation of employees at events and keep the allocation unchanged at nonevents. With this strategy, the proposed method enables the modeling of resource conflict and task preemption and preserves the flexibility in human resource allocation. To solve the planning problem, an ACO algorithm is further designed. Experimental results on 83 instances demonstrate that the proposed method is very promising.
C1 [Chen, Wei-Neng; Zhang, Jun] Sun Yat Sen Univ, Minist Educ, Key Lab Machine Intelligence & Sensor Network, Dept Comp Sci, Guangzhou 510006, Guangdong, Peoples R China.
   [Chen, Wei-Neng; Zhang, Jun] Sun Yat Sen Univ, Key Lab Software Technol, Educ Dept Guangdong Prov, Guangzhou 510006, Guangdong, Peoples R China.
C3 Sun Yat Sen University; Sun Yat Sen University
RP Chen, WN (corresponding author), Sun Yat Sen Univ, Minist Educ, Key Lab Machine Intelligence & Sensor Network, Dept Comp Sci, 132 Wai Huan Dong Rd, Guangzhou 510006, Guangdong, Peoples R China.
EM chenwn3@mail.sysu.edu.cn; junzhang@ieee.org
RI Zhang, Jun/E-9359-2011
OI Zhang, Jun/0000-0001-7835-9871
FU National Science Fund for Distinguished Young Scholars [61125205];
   National natural Science Foundation of China [61070004]; NSFC Joint Fund
   with Guangdong [U0835002]
FX This work was supported in part by the National Science Fund for
   Distinguished Young Scholars under Grant 61125205, in part by the
   National natural Science Foundation of China under Grant 61070004, and
   in part by the NSFC Joint Fund with Guangdong under Key Project
   U0835002.
CR Aguilar-Ruiz JS, 2001, INFORM SOFTWARE TECH, V43, P875, DOI 10.1016/S0950-5849(01)00193-8
   Alba E., 2005, P 6 MAT INT C, P1152
   Alba E, 2007, INFORM SCIENCES, V177, P2380, DOI 10.1016/j.ins.2006.12.020
   [Anonymous], P 9 INT WORKSH PROJ
   [Anonymous], 2004, ANT COLONY OPTIMIZAT
   Antoniol G, 2004, LECT NOTES COMPUT SC, V3103, P1425
   Antoniol G., 2005, P 21 IEEE INT C SOFT
   Bai RB, 2010, IEEE T EVOLUT COMPUT, V14, P580, DOI 10.1109/TEVC.2009.2033583
   Barreto A, 2008, COMPUT OPER RES, V35, P3073, DOI 10.1016/j.cor.2007.01.010
   Bauer Andreas., 2000, Central European Journal of Operations Research, V8, P125
   Bellenguez-Morineau O, 2007, RAIRO-OPER RES, V41, P155, DOI 10.1051/ro:2007015
   Blum C, 2005, COMPUT OPER RES, V32, P1565, DOI 10.1016/j.cor.2003.11.018
   Blum C., 2004, Journal of Mathematical Modelling and Algorithms, V3, P285, DOI DOI 10.1023/B:JMMA.0000038614.39977.6F
   Boehm BW., 2000, SOFTWARE COST ESTIMA, VII
   Boehm BW., 1981, Software Engineering Economics
   Brucker P, 1999, EUR J OPER RES, V112, P3, DOI 10.1016/S0377-2217(98)00204-5
   Chang C.K., 1998, P 22 ANN INT COMP SO
   Chang CK, 2008, INFORM SOFTWARE TECH, V50, P1142, DOI 10.1016/j.infsof.2008.03.002
   Chang CK, 1999, IEEE SOFTWARE, V16, P80, DOI 10.1109/52.805479
   Chang CK, 2001, ANN SOFTW ENG, V11, P107, DOI 10.1023/A:1012543203763
   Chen WN, 2010, IEEE T SYST MAN CY C, V40, P64, DOI 10.1109/TSMCC.2009.2027335
   Chen WN, 2009, IEEE T SYST MAN CY C, V39, P29, DOI 10.1109/TSMCC.2008.2001722
   Clarke J., 2003, IEE Proceedings-Software, V150, P161, DOI 10.1049/ip-sen:20030559
   Ding R.-G., 2003, PROJECT MANAGEMENT T, V1
   Dorigo M., 1997, IEEE Transactions on Evolutionary Computation, V1, P53, DOI 10.1109/4235.585892
   Dorigo M, 1996, IEEE T SYST MAN CY B, V26, P29, DOI 10.1109/3477.484436
   Duggan J, 2004, IEEE SOFTWARE, V21, P76, DOI 10.1109/MS.2004.1293077
   Garousi V, 2010, IEEE T SOFTWARE ENG, V36, P778, DOI 10.1109/TSE.2010.5
   Ge Y., 2009, P INT C ART INT COMP
   Günther M, 2010, LECT NOTES COMPUT SC, V6025, P451, DOI 10.1007/978-3-642-12242-2_46
   Harman M, 2010, IEEE T SOFTWARE ENG, V36, P226, DOI 10.1109/TSE.2009.71
   Hu XM, 2009, IEEE T SYST MAN CY C, V39, P659, DOI 10.1109/TSMCC.2009.2021952
   Kolisch R, 1997, EUR J OPER RES, V96, P205, DOI 10.1016/S0377-2217(96)00170-1
   Kumar VKA, 1998, IEEE T ENG MANAGE, V45, P49, DOI 10.1109/17.658660
   Lee L.-H., 2007, INT J APPL SCI ENG, V5, P159
   LIU LC, 1989, IEEE T SOFTWARE ENG, V15, P1280, DOI 10.1109/TSE.1989.559781
   Mansouri S., 2009, Search Based Software Engineering : A Comprehensive Analysis and Review of Trends Techniques and Applications (Tech. Rep.)
   Merkle D, 2002, IEEE T EVOLUT COMPUT, V6, P333, DOI 10.1109/TEVC.2002.802450
   Nan N, 2009, IEEE T SOFTWARE ENG, V35, P624, DOI 10.1109/TSE.2009.18
   Ngo-The A, 2009, IEEE T SOFTWARE ENG, V35, P109, DOI 10.1109/TSE.2008.80
   Nissen V, 2010, LECT NOTES COMPUT SC, V6234, P384, DOI 10.1007/978-3-642-15461-4_35
   Özdamar L, 1999, IEEE T SYST MAN CY C, V29, P44, DOI 10.1109/5326.740669
   OZDAMAR L, 1995, IIE TRANS, V27, P574, DOI 10.1080/07408179508936773
   PFAHRINGER B, 1996, TR9609 AUSTR RES I A
   Praditwong K, 2011, IEEE T SOFTWARE ENG, V37, P264, DOI 10.1109/TSE.2010.26
   Shtub A., 2005, PROJECT MANAGEMENT P, V2nd
   Simons CL, 2010, IEEE T SOFTWARE ENG, V36, P798, DOI 10.1109/TSE.2010.34
   Stützle T, 2000, FUTURE GENER COMP SY, V16, P889, DOI 10.1016/S0167-739X(00)00043-1
   Weglarz J, 2011, EUR J OPER RES, V208, P177, DOI 10.1016/j.ejor.2010.03.037
   Yannibelli V, 2011, EXPERT SYST APPL, V38, P8403, DOI 10.1016/j.eswa.2011.01.035
   [No title captured]
NR 51
TC 112
Z9 121
U1 4
U2 64
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JAN
PY 2013
VL 39
IS 1
BP 1
EP 17
DI 10.1109/TSE.2012.17
PG 17
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 063KJ
UT WOS:000312996800001
DA 2024-07-18
ER

PT J
AU Kim, M
   Notkin, D
   Grossman, D
   Wilson, G
AF Kim, Miryung
   Notkin, David
   Grossman, Dan
   Wilson, Gary, Jr.
TI Identifying and Summarizing Systematic Code Changes via Rule Inference
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Software evolution; program differencing; rule learning; logic-based
   program representation
ID TOOL; REFACTORINGS
AB Programmers often need to reason about how a program evolved between two or more program versions. Reasoning about program changes is challenging as there is a significant gap between how programmers think about changes and how existing program differencing tools represent such changes. For example, even though modification of a locking protocol is conceptually simple and systematic at a code level, diff extracts scattered text additions and deletions per file. To enable programmers to reason about program differences at a high level, this paper proposes a rule-based program differencing approach that automatically discovers and represents systematic changes as logic rules. To demonstrate the viability of this approach, we instantiated this approach at two different abstraction levels in Java: first at the level of application programming interface (API) names and signatures, and second at the level of code elements (e.g., types, methods, and fields) and structural dependences (e.g., method-calls, field-accesses, and subtyping relationships). The benefit of this approach is demonstrated through its application to several open source projects as well as a focus group study with professional software engineers from a large e-commerce company.
C1 [Kim, Miryung; Wilson, Gary, Jr.] Univ Texas Austin, Dept Elect & Comp Engn, Austin, TX 78712 USA.
   [Notkin, David; Grossman, Dan] Univ Washington, Dept Comp Sci & Engn, Seattle, WA 98195 USA.
   [Notkin, David] Univ Washington, Comp Sci & Engn Fac, Seattle, WA 98195 USA.
C3 University of Texas System; University of Texas Austin; University of
   Washington; University of Washington Seattle; University of Washington;
   University of Washington Seattle
RP Kim, M (corresponding author), Univ Texas Austin, Dept Elect & Comp Engn, Austin, TX 78712 USA.
EM miryung@ece.utexas.edu; notkin@cs.washington.edu; djg@cs.washington.edu;
   gwilson@austin.utexas.edu
FU US National Science Foundation [CCF-1043810, CCF-1117902, CCF-1149391];
   Microsoft SEIF Award; Division of Computing and Communication
   Foundations; Direct For Computer & Info Scie & Enginr [1117902] Funding
   Source: National Science Foundation
FX The authors thank Wei Wu and Hoan Nguyen for their help with the
   evaluation of the API-matching tool. This work was in part supported by
   the US National Science Foundation under grants CCF-1043810,
   CCF-1117902, and CCF-1149391, and by a Microsoft SEIF Award.
CR [Anonymous], 2007, Proceedings of the IEEE/ACM International Conference on Automated Software Engineering
   [Anonymous], 2010, Proceedings of the International Conference on Software Maintenance (ICSM)
   Antoniol G, 2004, 7TH INTERNATIONAL WORKSHOP ON PRINCIPLES OF SOFTWARE EVOLUTION, P31, DOI 10.1109/IWPSE.2004.1334766
   Apiwattanapong T, 2004, 19TH INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P2, DOI 10.1109/ASE.2004.1342719
   BALAS E, 1976, SIAM REV, V18, P710, DOI 10.1137/1018115
   Boshernitsan M, 2007, CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, VOLS 1 AND 2, P567
   Breu S, 2006, IEEE INT CONF AUTOM, P221
   Chesley OC, 2005, PROC IEEE INT CONF S, P401
   Cordy JR, 2006, SCI COMPUT PROGRAM, V61, P190, DOI 10.1016/j.scico.2006.04.002
   Dagenais B, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P481, DOI 10.1145/1368088.1368154
   Demeyer S, 2000, ACM SIGPLAN NOTICES, V35, P166, DOI 10.1145/354222.353183
   DICE LR, 1945, ECOLOGY, V26, P297, DOI 10.2307/1932409
   Dig D, 2006, LECT NOTES COMPUT SC, V4067, P404
   Fluri B, 2007, IEEE T SOFTWARE ENG, V33, P725, DOI 10.1109/TSE.2007.70731
   Fowler M., 2000, Refactoring: Improving the Design of Existing Code
   Godfrey MW, 2005, IEEE T SOFTWARE ENG, V31, P166, DOI 10.1109/TSE.2005.28
   Griswold WilliamG., 2001, REFLECTION 01, P250
   HORWITZ S, 1990, SIGPLAN NOTICES, V25, P234, DOI 10.1145/93548.93574
   HUNT JW, 1977, COMMUN ACM, V20, P350, DOI 10.1145/359581.359603
   JACKSON D, 1994, INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE, PROCEEDINGS, P243, DOI 10.1109/ICSM.1994.336770
   Janzen D., 2003, Proceedings of the 2nd Annual Conference on Aspect-Oriented Software Development (AOSD), P178, DOI 10.1145/643603.643622
   Kamiya T, 2002, IEEE T SOFTWARE ENG, V28, P654, DOI 10.1109/TSE.2002.1019480
   Kiczales G, 1997, LECT NOTES COMPUT SC, V1241, P220, DOI 10.1007/BFb0053381
   Kim M., 2008, THESIS U WASHINGTON
   Kim M, 2007, PROC INT CONF SOFTW, P333
   Kim M, 2009, PROC INT CONF SOFTW, P309, DOI 10.1109/ICSE.2009.5070531
   Kim S, 2005, WCRE: 12TH WORKING CONFERENCE ON REVERSE ENGINEERING 2005, PROCEEDINGS, P143
   Ko AJ, 2007, PROC INT CONF SOFTW, P344
   Kok S., 2005, P 22 INT C MACHINE L, P441, DOI DOI 10.1145/1102351.1102407
   Loh A., 2010, 2010 32nd International Conference on Software Engineering (ICSE), P263, DOI 10.1145/1810295.1810348
   Mens T, 2004, IEEE T SOFTWARE ENG, V30, P126, DOI 10.1109/TSE.2004.1265817
   Miller R. C., 2001, 01UIST. Proceedings of the 14th Annual ACM Symposium on User Interface Software and Technology, P81, DOI 10.1145/502348.502361
   Neamtiu Iulian., 2005, Iulian Neamtiu and Including Bind. Understanding source code evolution using abstract syntax tree matching. In Proceedings of the International Workshop on Mining Software Repositories, pages 2-6, 2005., P2
   Nguyen H.A., 2010, P ACM SIGPLAN INT C, P10
   Opdyke W.F., 2000, P S OBJ OR PROGR EMP
   Padioleau Y, 2008, EUROSYS'08: PROCEEDINGS OF THE EUROSYS 2008 CONFERENCE, P247, DOI 10.1145/1357010.1352618
   Raghavan S, 2004, PROC IEEE INT CONF S, P188, DOI 10.1109/ICSM.2004.1357803
   Ren XX, 2004, ACM SIGPLAN NOTICES, V39, P432, DOI 10.1145/1035292.1029012
   Schäfer T, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P471, DOI 10.1145/1368088.1368153
   Sillito J, 2008, IEEE T SOFTWARE ENG, V34, P434, DOI 10.1109/TSE.2008.26
   Tarr P., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P107, DOI 10.1109/ICSE.1999.841000
   Van Rysselberghe F, 2003, SIXTH INTERNATIONAL WORKSHOP ON PRINCIPLES OF SOFTWARE EVOLUTION, PROCEEDINGS, P126, DOI 10.1109/IWPSE.2003.1231219
   Visser E, 2003, LECT NOTES COMPUT SC, V3016, P216
   Volder K.D., 1998, THESIS VRIJE U BRUSS
   Weissgerber P, 2006, IEEE INT CONF AUTOM, P231
   Wloka J, 2009, PROC INT CONF SOFTW, P567, DOI 10.1109/ICSE.2009.5070557
   Wu Wei, 2010, P 32 ACMIEEE INT C S, P325, DOI DOI 10.1145/1806799.1806848
   WUU Y, 1991, SOFTWARE PRACT EXPER, V21, P739, DOI 10.1002/spe.4380210706
   Xing Z., 2005, 20 IEEEACM INT C AUT, P54, DOI DOI 10.1145/1101908.1101919
   Zimmermann T, 2004, PROC INT CONF SOFTW, P563, DOI 10.1109/ICSE.2004.1317478
NR 50
TC 35
Z9 40
U1 0
U2 11
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JAN
PY 2013
VL 39
IS 1
BP 45
EP 62
DI 10.1109/TSE.2012.16
PG 18
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 063KJ
UT WOS:000312996800003
DA 2024-07-18
ER

PT J
AU Altintas, NI
   Cetin, S
   Dogru, AH
   Oguztuzun, H
AF Altintas, N. Ilker
   Cetin, Semih
   Dogru, Ali H.
   Oguztuzun, Halit
TI Modeling Product Line Software Assets Using Domain-Specific Kits
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Asset modeling; domain-specific kits; feature models; reuse; software
   asset; software product lines
ID VARIABILITY MANAGEMENT; REUSE; LANGUAGE
AB Software Product Line Engineering (SPLE) is a prominent paradigm for the assembly of a family of products using product line core assets. The modeling of software assets that together form the actual products is critical for achieving the strategic benefits of Software Product Lines (SPLs). We propose a feature-based approach to software asset modeling based on abstractions provided by Domain-Specific Kits (DSKs). This approach involves a software Asset Metamodel (AMM) used to derive Asset Modeling Languages (AMLs) that define reusable software assets in domain-specific terms. The approach also prescribes a roadmap for modeling these software assets in conjunction with the product line reference architecture. Asset capabilities can be modeled using feature diagrams as the external views of the software assets. Internal views can be expressed in terms of Domain-Specific Artifacts (DSAs) with Variability Points (VPs), where the domain-specific artifacts are created using Domain-Specific Kits. This approach produces loosely coupled and highly cohesive software assets that are reusable for multiple product lines. The approach is validated by assessing software asset reuse in two different product lines in the finance domain. We also evaluated the productivity gains in large-scale complex projects, and found that the approach yielded a significant reduction in the total project effort.
C1 [Altintas, N. Ilker] Akbank TAS, Sabanci Ctr, TR-34330 Istanbul, Turkey.
   [Cetin, Semih] Cybersoft Informat Technol Co, Istanbul, Turkey.
   [Dogru, Ali H.; Oguztuzun, Halit] Middle E Tech Univ, Dept Comp Engn, TR-06531 Ankara, Turkey.
   [Dogru, Ali H.] Middle E Tech Univ, Software Engn Degree Program, TR-06531 Ankara, Turkey.
   [Dogru, Ali H.] Middle E Tech Univ, Software Engn Res Grp, TR-06531 Ankara, Turkey.
C3 Cybersoft Information Technologies; Middle East Technical University;
   Middle East Technical University; Middle East Technical University
RP Altintas, NI (corresponding author), Akbank TAS, Sabanci Ctr, 4 Levent, TR-34330 Istanbul, Turkey.
EM ilker.altintas@akbank.com; semih.cetin@cs.com.tr;
   dogru@ceng.metu.edu.tr; oguztuzn@ceng.metu.edu.tr
RI Dogru, Ali/ABA-4664-2020; Oğuztüzün, Halit/ABA-3509-2020
OI Oguztuzun, Halit/0000-0001-9928-0441
FU Technology and Innovation Funding Programs Directorate (TEYDEB) of the
   Scientific and Technological Research Council of Turkey (TUBITAK)
   (OCTOPODA Project) [3060543]
FX This work has been partially supported by the Technology and Innovation
   Funding Programs Directorate (TEYDEB) of the Scientific and
   Technological Research Council of Turkey (TUBITAK) (OCTOPODA Project,
   No/Date: 3060543 and 01.09.2006).
CR Acher M., 2010, I3S CNRS U NIC SOPH, pCollet
   Aksit M, 1998, LECT NOTES COMPUT SC, V1543, P435
   Altintas N.I., 2005, P TURK SOFTW ARCH WO
   Altintas N.I., 2007, THESIS MIDDLE E TU
   Altintas N.I., 2006, P 2 INT C TRENDS ENT, P54
   Altintas NI, 2008, LECT NOTES COMPUT SC, V5030, P166, DOI 10.1007/978-3-540-68073-4_15
   Altintas NI, 2006, LECT NOTES COMPUT SC, V3888, P15
   Anastasopoulos M., 2000, 08900E IESE FRAUNH I
   Anda B., 2005, INT S EMP SOFTW ENG, P407
   [Anonymous], 2012, OMG RAS SPECIFICATIO
   [Anonymous], 1997, 1220711997 IEEE
   [Anonymous], 2010, RATIONAL ASSET MANAG
   [Anonymous], 2004, Software Factories
   [Anonymous], 2000, Generative programming: methods, tools, and applications
   Apel S, 2009, J OBJECT TECHNOL, V8, P49, DOI 10.5381/jot.2009.8.5.c5
   Bachman F., 2005, CMUSEI2005TR012
   Batory D., 2006, P EUR C OBJ OR PROGR
   Berg Kathrin., 2005, WHITE RIVER S AFRICA, P182
   Beuche D, 2004, SCI COMPUT PROGRAM, V53, P333, DOI 10.1016/j.scico.2003.04.005
   Boehm B, 1999, COMPUTER, V32, P111, DOI 10.1109/2.789755
   Bosch J, 2002, LECT NOTES COMPUT SC, V2290, P13
   Bühne S, 2005, 13TH IEEE INTERNATIONAL CONFERENCE ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P41, DOI 10.1109/RE.2005.45
   Bunting D., 2003, WEB SERVICES COMPOSI
   Buuhne S., 2004, PROC WORKSHOP, P5
   Cechticky V, 2004, LECT NOTES COMPUT SC, V3107, P101
   Cetin S, 2006, P EUROSPI2 C, P62
   Cetin S., 2009, HDB RES COMPLEX DYNA
   Cetin S., 2006, P INT C SOFTW ENG AD, P48
   Cetin S, 2007, 2007 IEEE INTERNATIONAL CONFERENCE ON PERVASIVE SERVICES, P169
   Cetin S, 2006, LECT NOTES COMPUT SC, V4103, P193
   Clerc V, 2007, SECOND IEEE INTERNATIONAL CONFERENCE ON GLOBAL SOFTWARE ENGINEERING, PROCEEDINGS, P225
   Dao TM, 2010, LECT NOTES COMPUT SC, V6287, P377, DOI 10.1007/978-3-642-15579-6_26
   de Almeida E.S., 2007, THESIS UFPE
   Filho EDS, 2008, LECT NOTES COMPUT SC, V5292, P50, DOI 10.1007/978-3-540-88030-1_6
   Ebert C, 2001, IEEE SOFTWARE, V18, P62, DOI 10.1109/52.914748
   Eriksson M, 2005, LECT NOTES COMPUT SC, V3714, P33
   Estublier Jacky., 2005, SIGSOFT SOFTWARE ENG, V30, P316, DOI [10.1145/1095430.1081757, DOI 10.1145/1095430.1081757]
   Favaro J, 2009, LECT NOTES COMPUT SC, V5791, P41
   Frakes WB, 2005, IEEE T SOFTWARE ENG, V31, P529, DOI 10.1109/TSE.2005.85
   Gallagher B.P., 2000, CMUSEI2000TN007
   Greenfield J., 2003, OOPSLA 03 COMPANION, P16, DOI DOI 10.1145/949344.949348
   Griss Martin L., 1994, Proceedings of the 1994 ACM Symposium on Applied Computing, SAC'94, P47, DOI DOI 10.1145/326619.326658
   Griss ML, 1998, FIFTH INTERNATIONAL CONFERENCE ON SOFTWARE REUSE - PROCEEDINGS, P76, DOI 10.1109/ICSR.1998.685732
   Groher I, 2009, LECT NOTES COMPUT SC, V5560, P111, DOI 10.1007/978-3-642-03764-1_4
   Haddad HM, 2007, INTERNATIONAL CONFERENCE ON INFORMATION TECHNOLOGY, PROCEEDINGS, P597
   Harrison W.H., 2002, RC22685W0212147 IBM
   Hartmann H, 2008, SPLC 2008: 12TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE, PROCEEDINGS, P12, DOI 10.1109/SPLC.2008.15
   Herbsleb JD, 2001, IEEE SOFTWARE, V18, P16, DOI 10.1109/52.914732
   Jackson M., 2001, PROBLEM FRAMES ANAL
   Jacobson I., 1997, Software Reuse: Architecture, Process and Organization for Business Success
   Kang KC, 1998, ANN SOFTW ENG, V5, P143, DOI 10.1023/A:1018980625587
   Kang Kyo C, 1990, Technical Report
   Kath O., 2009, P INT WORKSH SOFTW R
   Kaya O, 2008, P 11 SDPS TRANSD C I
   Kazman R., 1994, ICSE-16. 16th International Conference on Software Engineering (Cat. No.94CH3409-0), P81, DOI 10.1109/ICSE.1994.296768
   Larsen G, 2006, IBM SYST J, V45, P541, DOI 10.1147/sj.453.0541
   Lee J, 2004, LECT NOTES COMPUT SC, V3014, P250
   Lee J, 2010, J SYST SOFTWARE, V83, P1123, DOI 10.1016/j.jss.2010.01.048
   Lee J, 2006, COMMUN ACM, V49, P55, DOI 10.1145/1183236.1183266
   Lee K, 2004, LECT NOTES COMPUT SC, V3107, P69
   Lee K, 2002, LECT NOTES COMPUT SC, V2319, P62
   Lee K, 2006, SPLC 2006: 10TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE, PROCEEDINGS, P103
   Mei H., 2003, P 27 ANN INT COMP SO
   Model Driven Architecture OMG, 2007, MOD DRIV ARCH OMG
   Northrop L., 2001, SOFTWARE PRODUCT LIN
   Northrop L.M., 2007, FRAMEWORK SOFTWARE P
   Northrop L.M., 2004, CMUSEI2004TR022
   Peng X, 2008, LECT NOTES COMPUT SC, V5030, P142, DOI 10.1007/978-3-540-68073-4_13
   Pohl K., 2005, SOFTWARE PRODUCT LIN, V10
   Rosenmuller Marko., 2010, VAMOS, P123
   Rothenberger MA, 2003, IEEE T SOFTWARE ENG, V29, P825, DOI 10.1109/TSE.2003.1232287
   Smite D, 2011, IEEE SOFTWARE, V28, P15, DOI 10.1109/MS.2011.70
   Svahnberg M., 2005, SOFTWARE PRACTICE EX, V35, P1
   Tarr P., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P107, DOI 10.1109/ICSE.1999.841000
   Thompson J. M., 2003, Requirements Engineering, V8, P42, DOI 10.1007/s00766-003-0166-0
   van der Linden F, 2002, IEEE SOFTWARE, V19, P41, DOI 10.1109/MS.2002.1020286
   van der Storm T, 2007, LECT NOTES COMPUT SC, V4829, P66
   van Ommering R, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P255, DOI 10.1109/ICSE.2002.1007973
   van Ommering R, 2000, COMPUTER, V33, P78, DOI 10.1109/2.825699
   Voelter M., 2007, P P C OBJ OR PROGR S
   Walter T, 2010, LECT NOTES COMPUT SC, V6138, P321, DOI 10.1007/978-3-642-13595-8_25
   Wang ZS, 2008, ICICSE: 2008 INTERNATIONAL CONFERENCE ON INTERNET COMPUTING IN SCIENCE AND ENGINEERING, PROCEEDINGS, P363, DOI 10.1109/ICICSE.2008.63
   Weiss D.M., 1999, Software Product-Line Engineering-A Family-Based Software Development Process
   White J, 2009, IEEE SOFTWARE, V26, P47, DOI 10.1109/MS.2009.95
   Zdun U., 2005, P INT WORKSH SOFTW F
   Zubrow D., 2003, CMUSEI2003TN031
NR 86
TC 6
Z9 6
U1 1
U2 16
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD NOV-DEC
PY 2012
VL 38
IS 6
BP 1376
EP 1402
DI 10.1109/TSE.2011.109
PG 27
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 043PI
UT WOS:000311556100008
DA 2024-07-18
ER

PT J
AU Liu, P
   Zhang, C
AF Liu, Peng
   Zhang, Charles
TI Pert: The Application-Aware Tailoring of Java Object Persistence
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Object persistence; program analysis; performance optimization
AB Persistence is a widely used technique which allows the objects that represent the results of lengthy computations to outlive the process that creates it in order to considerably speed up subsequent program executions. We observe that conventional persistence techniques usually do not consider the application contexts of the persistence operations, where not all of the object states need to be persisted. Leveraging this observation, we have designed and implemented a framework called Pert, which first performs static program analysis to estimate the actual usage of the persisted object, given the context of its usage in the program. The Pert runtime uses the statically computed information to efficiently make tailoring decisions to prune the redundant and unused object states during the persistence operations. Our evaluation result shows that the Pert-based optimization can speed up the conventional persistence operations by 1 to 45 times. The amount of persisted data is also dramatically reduced, as the result of the application-aware tailoring.
C1 [Liu, Peng; Zhang, Charles] Hong Kong Univ Sci & Technol, Dept Comp Sci & Engn, Kowloon, Hong Kong, Peoples R China.
C3 Hong Kong University of Science & Technology
RP Liu, P (corresponding author), Hong Kong Univ Sci & Technol, Dept Comp Sci & Engn, Kowloon, Hong Kong, Peoples R China.
EM lpxz@ust.hk; charlesz@cse.ust.hk
CR [Anonymous], P 33 INT C SOFTW ENG
   [Anonymous], 2006, PROBABILITY STAT ENG
   Bond MD, 2007, ACM SIGPLAN NOTICES, V42, P97, DOI 10.1145/1297105.1297035
   Carey M. J., 1993, SIGMOD Record, V22, P12, DOI 10.1145/170036.170041
   Elbaum S, 2009, IEEE T SOFTWARE ENG, V35, P29, DOI 10.1109/TSE.2008.103
   Fetzer C, 2004, IEEE T SOFTWARE ENG, V30, P547, DOI 10.1109/TSE.2004.35
   Islam TZ, 2009, PROCEEDINGS OF THE CONFERENCE ON HIGH PERFORMANCE COMPUTING NETWORKING, STORAGE AND ANALYSIS
   Lhoták O, 2003, LECT NOTES COMPUT SC, V2622, P153
   Marron M, 2008, LECT NOTES COMPUT SC, V4959, P245
   Milanova A., 2002, Software Engineering Notes, V27, P1, DOI 10.1145/566171.566174
   Naik M, 2006, ACM SIGPLAN NOTICES, V41, P308, DOI 10.1145/1133981.1134018
   Philippsen N., 1999, Parallel and Distributed Processing. 11th IPPS/SPDP'99 Workshops Held in Conjunction with the 13th International Parallel Processing Symposium and 10th Symposium on Parallel and Distributed Processing. Proceedings, P718
   PLANK JS, 1995, PROCEEDINGS OF THE 1995 USENIX TECHNICAL CONFERENCE, P213
   Saff David., 2005, PROC ASE, P114, DOI DOI 10.1145/1101908.1101927
   Whaley J, 2004, ACM SIGPLAN NOTICES, V39, P131, DOI 10.1145/996893.996859
   Xu G., 2007, P THE 6 JOINT M EURO, P85, DOI DOI 10.1145/1287624.1287638
   Zeller A, 1999, LECT NOTES COMPUT SC, V1687, P253, DOI 10.1145/318774.318946
   [No title captured]
   [No title captured]
   [No title captured]
NR 20
TC 0
Z9 1
U1 0
U2 4
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUL-AUG
PY 2012
VL 38
IS 4
BP 909
EP 922
DI 10.1109/TSE.2011.66
PG 14
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 983LE
UT WOS:000307120000011
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Mesbah, A
   van Deursen, A
   Roest, D
AF Mesbah, Ali
   van Deursen, Arie
   Roest, Danny
TI Invariant-Based Automatic Testing of Modern Web Applications
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Automated testing; web applications; Ajax
AB AJAX-based Web 2.0 applications rely on stateful asynchronous client/server communication, and client-side runtime manipulation of the DOM tree. This not only makes them fundamentally different from traditional web applications, but also more error-prone and harder to test. We propose a method for testing AJAX applications automatically, based on a crawler to infer a state-flow graph for all (client-side) user interface states. We identify AJAX-specific faults that can occur in such states (related to, e.g., DOM validity, error messages, discoverability, back-button compatibility) as well as DOM-tree invariants that can serve as oracles to detect such faults. Our approach, called ATUSA, is implemented in a tool offering generic invariant checking components, a plugin-mechanism to add application-specific state validators, and generation of a test suite covering the paths obtained during crawling. We describe three case studies, consisting of six subjects, evaluating the type of invariants that can be obtained for AJAX applications as well as the fault revealing capabilities, scalability, required manual effort, and level of automation of our testing approach.
C1 [Mesbah, Ali] Univ British Columbia, Dept Elect & Comp Engn, Fac Appl Sci, Vancouver, BC V6T 1Z4, Canada.
   [van Deursen, Arie; Roest, Danny] Delft Univ Technol, Dept Software Technol, Fac Elect Engn Math & Comp Sci, NL-2628 CD Delft, Netherlands.
C3 University of British Columbia; Delft University of Technology
RP Mesbah, A (corresponding author), Univ British Columbia, Dept Elect & Comp Engn, Fac Appl Sci, 2332 Main Mall, Vancouver, BC V6T 1Z4, Canada.
EM amesbah@ece.ubc.ca; arie.vandeursen@tudelft.nl;
   d.roest@student.tudelft.nl
RI Mesbah, Ali/C-3675-2013; van Deursen, Arie/G-3084-2011
OI Mesbah, Ali/0000-0002-8783-7967; van Deursen, Arie/0000-0003-4850-3312
CR Andrews A, 2005, SOFTWARE SYSTEMS MOD, V4, P326, DOI DOI 10.1007/S10270-004-0077-7
   [Anonymous], 1999, Testing Object-Oriented Systems: Models, Patterns, and Tools
   [Anonymous], THESIS DELFT U TECHN
   Artzi Shay., 2008, P 2008 INT S SOFTWAR, P261, DOI [10.1145/1390630.1390662, DOI 10.1145/1390630.1390662]
   Barnett M., 2004, J OBJECT TECHNOLOGY, V3, P1
   Benedikt M., 2002, Proceedings 11th International Conference on World Wide Web WWW02, page, P654
   Bertolino A, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P85, DOI 10.1109/FOSE.2007.25
   Bezemer CP, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P81, DOI 10.1145/1595696.1595711
   Clarke L. A., 2006, Software Engineering Notes, V31, P25, DOI 10.1145/1127878.1127900
   de Alfaro L, 2001, LECT NOTES COMPUT SC, V2102, P337
   de Alfaro L., 2001, P WORLD WID WEB C
   Elbaum S, 2005, IEEE T SOFTWARE ENG, V31, P187, DOI 10.1109/TSE.2005.36
   Ernst MD, 2001, IEEE T SOFTWARE ENG, V27, P99, DOI 10.1109/32.908957
   Garrett JJ, 2005, AJAX NEW APPROACH WE
   Groeneveld F., 2010, TUDSERG2010037
   Halfond W., 2008, P ACM SIGSOFT S FDN, P181
   Halfond WGJ, 2009, ISSTA 2009: INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P285
   Halfond WilliamG. J., 2007, P THE 6 JOINT M EURO, P145
   Huang YW, 2005, COMPUT NETW, V48, P739, DOI 10.1016/j.comnet.2005.01.003
   Kals S., 2006, P 15 INT C WORLD WID, P247, DOI [DOI 10.1145/1135777.1135817, 10.1145/1135777.1135817]
   Levenshtein V. I., 1966, SOV PHYS DOKL, V10, P707
   Marchetto Alessandro, 2008, 2008 First IEEE International Conference on Software Testing, Verification and Validation (ICST '08), P121, DOI 10.1109/ICST.2008.22
   Marchetto Alessandro, 2008, International Journal on Software Tools for Technology Transfer, V10, P477, DOI 10.1007/s10009-008-0086-x
   Memon AM, 2007, SOFTW TEST VERIF REL, V17, P137, DOI 10.1002/stvr.364
   Mesbah Ali, 2008, 2008 8th International Conference on Web Engineering (ICWE), P122, DOI 10.1109/ICWE.2008.24
   Mesbah A., 2011, P 33 INT C SOFTW ENG
   Mesbah A, 2007, CSMR 2007: 11TH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P181
   Mesbah A, 2008, J SYST SOFTWARE, V81, P2194, DOI 10.1016/j.jss.2008.04.005
   Mesbah A, 2009, PROC INT CONF SOFTW, P210, DOI 10.1109/ICSE.2009.5070522
   Meyer B, 2008, COMPUTER, V41, P99, DOI 10.1109/MC.2008.306
   Pattabiraman K., 2010, P IEEE 21 INT C SOFT
   Ricca F, 2001, PROC INT CONF SOFTW, P25, DOI 10.1109/ICSE.2001.919078
   Roest D., 2010, P 3 INT C SOFTW TEST, P128
   Sprenkle S, 2007, ISSRE 2007: 18TH IEEE INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P117, DOI 10.1109/ISSRE.2007.26
   Sprenkle Sara., 2005, AUTOMAT SOFTW ENG, P253, DOI DOI 10.1145/1101908.1101947
   Stepien Bernard, 2008, International Journal on Software Tools for Technology Transfer, V10, P371, DOI 10.1007/s10009-008-0082-1
   Wassermann G, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P171, DOI 10.1145/1368088.1368112
   WEYUKER EJ, 1982, COMPUT J, V25, P465, DOI 10.1093/comjnl/25.4.465
   YEN JY, 1971, MANAGE SCI, V17, P712, DOI 10.1287/mnsc.17.11.712
   Yin R.K., 2011, Qualitative research from start to finish
NR 40
TC 95
Z9 104
U1 0
U2 23
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JAN-FEB
PY 2012
VL 38
IS 1
BP 35
EP 53
DI 10.1109/TSE.2011.28
PG 19
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 881HG
UT WOS:000299472600005
DA 2024-07-18
ER

PT J
AU Krishnamurthy, D
   Rolia, J
   Xu, M
AF Krishnamurthy, Diwakar
   Rolia, Jerry
   Xu, Min
TI WAM-The Weighted Average Method for Predicting the Performance of
   Systems with Bursts of Customer Sessions
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Performance of systems; modeling techniques; queuing theory; operational
   analysis
ID NETWORK
AB Predictive performance models are important tools that support system sizing, capacity planning, and systems management exercises. We introduce the Weighted Average Method (WAM) to improve the accuracy of analytic predictive performance models for systems with bursts of concurrent customers. WAM considers the customer population distribution at a system to reflect the impact of bursts. The WAM approach is robust with respect to distribution functions, including heavy-tail-like distributions, for workload parameters. We demonstrate the effectiveness of WAM using a case study involving a multitier TPC-W benchmark system. To demonstrate the utility of WAM with multiple performance modeling approaches, we developed both Queuing Network Models and Layered Queuing Models for the system. Results indicate that WAM improves prediction accuracy for bursty workloads for QNMs and LQMs by 10 and 12 percent, respectively, with respect to a Markov Chain approach reported in the literature.
C1 [Krishnamurthy, Diwakar; Xu, Min] Univ Calgary, Dept Elect & Comp Engn, Calgary, AB T2N 1N4, Canada.
   [Rolia, Jerry] Hewlett Packard Labs, Automated Infrastruct Lab, Bristol BS34 8QZ, Avon, England.
C3 University of Calgary; Hewlett-Packard
RP Krishnamurthy, D (corresponding author), Univ Calgary, Dept Elect & Comp Engn, 2500 Univ Dr NW, Calgary, AB T2N 1N4, Canada.
EM dkrishna@ucalgary.ca; jerry.rolia@hp.com; m.xu@ucalgary.ca
FU Natural Sciences and Engineering Research Council of Canada (NSERC)
FX This work has been financially supported by the Natural Sciences and
   Engineering Research Council of Canada (NSERC).
CR ALMEIDA V., 2002, ACM Perf. Eval. Rev, V30, P3
   Andersson M, 2003, IC'03: PROCEEDINGS OF THE INTERNATIONAL CONFERENCE ON INTERNET COMPUTING, VOLS 1 AND 2, P508
   [Anonymous], 1991, The Art of Computer Systems Performance Analysis: Techniques for Experimental Design, Measurement, Simulation, and Modeling
   Arlitt M., 2001, ACM T INTERNET TECHN, V1, P44
   Balsamo S, 2004, IEEE T SOFTWARE ENG, V30, P295, DOI 10.1109/TSE.2004.9
   Bonald T, 2003, COMPUT NETW, V42, P521, DOI 10.1016/S1389-1286(03)00200-7
   BONDI AB, 1986, PERFORM EVALUATION, V6, P219, DOI 10.1016/0166-5316(86)90019-2
   BUZEN JP, 1973, COMMUN ACM, V16, P527, DOI 10.1145/362342.362345
   CASALE G, 2006, P JOINT ACM SIGMETRI, P169
   Casale G., 2008, PROC ACM SIGMETRICS, P13
   CHANDY KM, 1982, COMMUN ACM, V25, P126, DOI 10.1145/358396.358403
   CHEN Y, 2007, P 4 INT C AUT COMP
   Crovella ME, 1997, PROCEEDINGS OF THE 1997 WINTER SIMULATION CONFERENCE, P1005, DOI 10.1145/268437.268733
   Eager DL, 2000, PERF E R SI, V28, P217, DOI 10.1145/345063.339418
   Harchol-Balter M, 1999, J PARALLEL DISTR COM, V59, P204, DOI 10.1006/jpdc.1999.1577
   Kleinrock L., 1975, Queuing Systems, VI
   Kounev S, 2003, INT SYM PERFORM ANAL, P143, DOI 10.1109/ISPASS.2003.1190241
   KRISHNAMURTHY D, 2004, THESIS CARLETON U
   Krishnamurthy D, 2006, IEEE T SOFTWARE ENG, V32, P868, DOI 10.1109/TSE.2006.106
   LELAND WE, 1994, IEEE ACM T NETWORK, V2, P1, DOI 10.1109/90.282603
   Menasce D., 2000, Proceedings of the 2nd ACM Conference on Electronic Commerce, P56
   Menasce D., 2006, P INT COMPUTER MEASU, P475
   Menasce D. A., 2001, Capacity Planning for Web Services: Metrics, Models, and Methods
   Menasce DanielA., 1994, CAPACITY PLANNING PE
   MEYER JF, 1993, P INT WORKSH PERF MO
   Mi NF, 2007, PERFORM EVALUATION, V64, P1082, DOI 10.1016/j.peva.2007.06.016
   MOLLOY MK, 1982, IEEE T COMPUT, V31, P913, DOI 10.1109/TC.1982.1676110
   Mosberger D., 1998, Performance Evaluation Review, V26, P31, DOI 10.1145/306225.306235
   Park K, 1996, 1996 INTERNATIONAL CONFERENCE ON NETWORK PROTOCOLS, PROCEEDINGS, P171, DOI 10.1109/ICNP.1996.564935
   PAXSON V, 1995, IEEE ACM T NETWORK, V3, P226, DOI 10.1109/90.392383
   Psounis K, 2005, PERFORM EVALUATION, V62, P456, DOI 10.1016/j.peva.2005.07.030
   REISER M, 1979, IEEE T COMMUN, V27, P1199, DOI 10.1109/TCOM.1979.1094531
   ROLIA JA, 1995, IEEE T SOFTWARE ENG, V21, P689, DOI 10.1109/32.403785
   SANDERS WH, 1995, PERFORM EVALUATION, V24, P89, DOI 10.1016/0166-5316(95)00012-M
   Taqqu MS, 1995, FRACTALS, V3, P785, DOI 10.1142/S0218348X95000692
   TIWARI N, 2006, P INT C COMP MEAS GR, P537
   Urgaonkar B, 2007, ACM T WEB, V1, DOI 10.1145/1232722.1232724
   Vallamsetty U., 2003, Electronic Commerce Research, V3, P167, DOI 10.1023/A:1021585529079
   WOODSIDE CM, 1995, IEEE T COMPUT, V44, P20, DOI 10.1109/12.368012
   Zhang Q., 2007, 4 INT C AUTONOMIC CO, P27
   2011, TPC W BENCHMARK
NR 41
TC 10
Z9 10
U1 0
U2 4
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD SEP-OCT
PY 2011
VL 37
IS 5
BP 718
EP 735
DI 10.1109/TSE.2011.65
PG 18
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 823YC
UT WOS:000295162900008
DA 2024-07-18
ER

PT J
AU Bowman, M
   Briand, LC
   Labiche, Y
AF Bowman, Michael
   Briand, Lionel C.
   Labiche, Yvan
TI Solving the Class Responsibility Assignment Problem in Object-Oriented
   Analysis with Multi-Objective Genetic Algorithms
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Object-oriented analysis and design; class responsibility assignment;
   UML; genetic algorithm
ID EVOLUTIONARY ALGORITHMS
AB In the context of object-oriented analysis and design (OOAD), class responsibility assignment is not an easy skill to acquire. Though there are many methodologies for assigning responsibilities to classes, they all rely on human judgment and decision making. Our objective is to provide decision-making support to reassign methods and attributes to classes in a class diagram. Our solution is based on a multi-objective genetic algorithm (MOGA) and uses class coupling and cohesion measurement for defining fitness functions. Our MOGA takes as input a class diagram to be optimized and suggests possible improvements to it. The choice of a MOGA stems from the fact that there are typically many evaluation criteria that cannot be easily combined into one objective, and several alternative solutions are acceptable for a given OO domain model. Using a carefully selected case study, this paper investigates the application of our proposed MOGA to the class responsibility assignment problem, in the context of object-oriented analysis and domain class models. Our results suggest that the MOGA can help correct suboptimal class responsibility assignment decisions and perform far better than simpler alternative heuristics such as hill climbing and a single-objective GA.
C1 [Bowman, Michael] Carleton Univ, Dept Syst & Comp Engn, Ottawa, ON K1S 5B6, Canada.
   [Briand, Lionel C.] Univ Oslo, N-0316 Oslo, Norway.
   [Briand, Lionel C.] Simula Res Lab, N-1325 Lysaker, Norway.
C3 Carleton University; University of Oslo
RP Bowman, M (corresponding author), Carleton Univ, Dept Syst & Comp Engn, Ottawa, ON K1S 5B6, Canada.
EM mgbowman@connect.carleton.ca; briand@simula.no;
   yvan.labiche@sce.carleton.ca
OI Labiche, Yvan/0000-0001-8880-4836
FU CITO (Ontario); IBM Rational; Ontario Graduate Scholarship
FX This research was supported by CITO (Ontario) and IBM Rational. Michael
   Bowman received an Ontario Graduate Scholarship.
CR [Anonymous], 2004, Applying UML and Patterns: An Introduction to Object-Oriented Analysis and Design and Iterative Development
   Bentley P., 1997, Soft Computing in Engineering Design and Manufacturing, V5, P231
   BOWMAN M, 2007, THESIS CARLETON U
   Bowman M., 2008, SCE0702 CARL U
   Briand L, 1997, PROC INT CONF SOFTW, P412, DOI 10.1145/253228.253367
   Briand L. C., 1998, Empirical Software Engineering, V3, P65, DOI 10.1023/A:1009783721306
   Briand LC, 1999, IEEE T SOFTWARE ENG, V25, P91, DOI 10.1109/32.748920
   BRUEGGE B, 2004, ARENA
   Bruegge B., 2009, OBJECT ORIENTED SOFT
   Castillo F, 2007, GENET EVOL COMPUT, V4, P149, DOI 10.1007/978-0-387-49650-4_10
   Clarke J., 2003, IEE Proceedings-Software, V150, P161, DOI 10.1049/ip-sen:20030559
   COBB HG, 1993, PROCEEDINGS OF THE FIFTH INTERNATIONAL CONFERENCE ON GENETIC ALGORITHMS, P523
   De Jong K., 1988, Machine Learning, V3, P121, DOI 10.1023/A:1022606120092
   Deb K., 2000, Parallel Problem Solving from Nature PPSN VI. 6th International Conference. Proceedings (Lecture Notes in Computer Science Vol.1917), P849
   Demeyer S., 2003, OBJECT ORIENTED REEN
   Devore J.L., 1999, PROBABILITY STAT ENG, V5th
   FORREST S, 1993, P WORKSH FDN GEN ALG
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   Goldberg David E, 1989, GENETIC ALGORITHMS S
   Harman M, 2007, GECCO 2007: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOL 1 AND 2, P1106
   Haupt R, 1998, PRACTICAL GENETIC AL
   Kleppe A.G., 2003, MDA Explained; The Model Driven Architecture: Practice and Promise
   Lanza Michele, 2006, Objectoriented metrics in practice: using software metrics to characterize, evaluate, and improve the design of object-oriented systems
   Laumanns M, 2001, LECT NOTES COMPUT SC, V1993, P181
   López-Ibáñez M, 2005, IEEE C EVOL COMPUTAT, P435, DOI 10.1109/CEC.2005.1554716
   Mens T, 2004, IEEE T SOFTWARE ENG, V30, P126, DOI 10.1109/TSE.2004.1265817
   OKEEFFE M, 2004, P WORKSH DIR SOFTW E
   Pender T., 2003, UML BIBLE
   Perneger TV, 1998, BRIT MED J, V316, P1236, DOI 10.1136/bmj.316.7139.1236
   RIVASDAVALOS F, 2005, P EV MULT OPT
   SCHAFFER JD, 1989, PROCEEDINGS OF THE THIRD INTERNATIONAL CONFERENCE ON GENETIC ALGORITHMS, P51
   SENG I, 2006, P C GEN EV COMP
   Smith J. E., 1996, Parallel Problem Solving from Nature - PPSN IV. International Conference on Evolutionary Computation - The 4th International Conference on Parallel Problem Solving from Nature. Proceedings, P441, DOI 10.1007/3-540-61723-X_1008
   SRINIVAS N, 1995, Evolutionary computation., V2, P221, DOI [DOI 10.1162/EVCO.1994.2.3.221, 10.1162/evco.1994.2.3.221]
   Svetinovic D, 2005, 13th IEEE International Conference on Requirements Engineering, Proceedings, P189, DOI 10.1109/RE.2005.17
   Van Veldhuizen DA, 2000, EVOL COMPUT, V8, P125, DOI 10.1162/106365600568158
   Whitmire ScottA., 1997, OBJECT ORIENTED DESI
   Yoo S., 2007, Proceedings of the 2007 international symposium on Software testing and analysis, P140, DOI 10.1145/1273463.1273483
   Zitzler E, 1999, IEEE T EVOLUT COMPUT, V3, P257, DOI 10.1109/4235.797969
   Zitzler E., 2001, TIK-Rep. 103
NR 40
TC 70
Z9 75
U1 0
U2 8
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD NOV-DEC
PY 2010
VL 36
IS 6
BP 817
EP 837
DI 10.1109/TSE.2010.70
PG 21
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 682SU
UT WOS:000284424100007
DA 2024-07-18
ER

PT J
AU Bendraou, R
   Jézéquel, JM
   Gervais, MP
   Blanc, X
AF Bendraou, Reda
   Jezequel, Jean-Marc
   Gervais, Marie-Pierre
   Blanc, Xavier
TI A Comparison of Six UML-Based Languages for Software Process Modeling
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Metamodeling; process modeling and execution; software process modeling
   languages; UML
AB Describing and managing activities, resources, and constraints of software development processes is a challenging goal for many organizations. A first generation of Software Process Modeling Languages (SPMLs) appeared in the 1990s but failed to gain broad industrial support. Recently, however, a second generation of SPMLs has appeared, leveraging the strong industrial interest for modeling languages such as UML. In this paper, we propose a comparison of these UML-based SPMLs. While not exhaustive, this comparison concentrates on SPMLs most representative of the various alternative approaches, ranging from UML-based framework specializations to full-blown executable metamodeling approaches. To support the comparison of these various approaches, we propose a frame gathering a set of requirements for process modeling, such as semantic richness, modularity, executability, conformity to the UML standard, and formality. Beyond discussing the relative merits of these approaches, we also evaluate the overall suitability of these UML-based SPMLs for software process modeling. Finally, we discuss the impact of these approaches on the current state of the practice, and conclude with lessons we have learned in doing this comparison.
C1 [Bendraou, Reda; Blanc, Xavier] Univ Paris 06, Equipe MoVe 8Eme Etage B 811, LIP6, F-75016 Paris, France.
   [Jezequel, Jean-Marc] INRIA Rennes Bretagne Atlantique, Triskell Team, IRISA, F-35042 Rennes, France.
   [Gervais, Marie-Pierre] Univ Paris Ouest Nanterre La Defense, Equipe MoVe 8Eme Etage B 814Bis, LIP6, F-75016 Paris, France.
C3 Sorbonne Universite; Universite de Rennes; Sorbonne Universite;
   Universite Paris Nanterre
RP Bendraou, R (corresponding author), Univ Paris 06, Equipe MoVe 8Eme Etage B 811, LIP6, 4 Pl Jussieu,104 Ave President Kennedy, F-75016 Paris, France.
EM reda.bendraou@lip6.fr; Jezequel@inria.fr; Marie-Pierre.gervais@lip6.fr;
   xavier.blanc@lip6.fr
RI Jezequel, Jean-Marc/AAF-3854-2019
OI Jezequel, Jean-Marc/0000-0002-0582-9745; Bendraou,
   Reda/0000-0003-3259-6286
FU S-Cube Network of Excellence; IST [IST-3408]
FX This work has been partially supported by the S-Cube Network of
   Excellence of the European FP7 and the IST Modelplex project, contract
   no. IST-3408.
CR *ANSI IEEE, 1987, IEEE STAND SOFTW VER
   ARMENISE P, 1993, INT J SOFTW ENG KNOW, V3, P401, DOI 10.1142/S0218194093000197
   BANDINELLI SC, 1993, IEEE T SOFTWARE ENG, V19, P1128, DOI 10.1109/32.249659
   BARROS JP, 2003, P WS CRIT SYST DEV U, P129
   Bendraou R, 2005, LECT NOTES COMPUT SC, V3713, P17, DOI 10.1007/11557432_3
   BENDRAOU R, 2009, UML4SPM PUBLICATIONS
   Bendraou R, 2007, 14TH ASIA-PACIFIC SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P390, DOI 10.1109/ASPEC.2007.60
   Bendraou R, 2007, EUROMICRO CONF PROC, P314
   Bendraou R, 2006, IEEE INT ENTERP DIST, P297
   Briand LC, 2005, IEEE T SOFTWARE ENG, V31, P833, DOI 10.1109/TSE.2005.105
   CHOU SC, 2002, J OBJECT TECHNOLOGY, V1, P137
   Chou SC, 2000, J OBJECT ORIENTED PR, V13, P21
   COMBEMALE B, 2006, P INT C ENT INF
   CONRADI R, 1992, P 2 EUR WORKSH SOFTW, P3
   CONRADI R, 1992, P 2 EUR WORKSH SOFTW, P167
   Cugola G, 2001, IEEE T SOFTWARE ENG, V27, P827, DOI 10.1109/32.950318
   CURTIS B, 1992, COMMUN ACM, V35, P75, DOI 10.1145/130994.130998
   Di Nitto E, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P155, DOI 10.1109/ICSE.2002.1007964
   DOWSON M, 1991, P 1 EUR WORKSH SOFTW, P15
   Dumas Marlon., 2001, ≪ UML≫ 2001-The Unified Modeling Language. Modeling Languages, Concepts, P76, DOI 10.1007/3-540-45441-17
   EVANS AS, 1999, P 2 INT C UN MOD LAN, P140
   Fahland D., 2005, P 12 INT WORKSHOP AB, P131
   Farahbod R, 2004, LECT NOTES COMPUT SC, V3052, P78
   FEILER PH, 1993, P 2 INT C SOFTW PROC, P28
   Finkelstein A., 1994, Software process modelling and technology
   Franch X, 1998, EUROMICRO CONF PROC, P753, DOI 10.1109/EURMIC.1998.708098
   FRANCH X, 1997, P 9 SOFTW ENG KNOWL, P397
   Fuggetta A., 2000, P C LIM IR FUT SOFTW, P25, DOI DOI 10.1145/336512.336521
   GUNTER CA, 1991, SEMANTIC DOMAINS
   Henderson-Sellers B, 2005, INFORM SOFTWARE TECH, V47, P49, DOI 10.1016/j.infsof.2004.06.001
   Hinz S, 2005, LECT NOTES COMPUT SC, V3649, P220, DOI 10.1007/11538394_15
   *IBM, 2009, RAT PORT MAN RPM
   *IBM, 2008, RAT PROC WORKB RPW
   *IBM, 2009, IBM RAT METH COMP RM
   Jablonski S., 1996, WORKFLOW MANAGEMENT
   Jaccheri M. L., 1999, PROCESS SUPPORT DIST, P570
   Kaiser G. E., 1990, Proceedings of the Twenty-Third Annual Hawaii International Conference on System Sciences, P131, DOI 10.1109/HICSS.1990.205161
   Klein M., 2000, Computer Supported Cooperative Work: The Journal of Collaborative Computing, V9, P399, DOI 10.1023/A:1008759413689
   Lonchamp J., 1993, Second International Conference on the Software Process. Continuous Software Process Improvement (Cat. No.93TH0509-0), P41, DOI 10.1109/SPCON.1993.236823
   McUmber WE, 2001, PROC INT CONF SOFTW, P433, DOI 10.1109/ICSE.2001.919116
   *MOD, 2009, IST3408 MOD IST EUR
   *MOD, 511731 MOD IST EUR P
   MONTANGERO C, 1999, LECT NOTES COMPUTER, P1
   *OASIS, 2007, WEB SERV BU IN PRESS
   *OMG, 2001, FORMAL010967 OMG
   OMG, 2000, FORMAL000502 OMG
   *OMG, 2005, FORMAL050106 OMG
   *OMG, 2006, FORMAL060404 OMG
   *OMG, 2007, FORMAL070204 OMG
   *OMG, 2007, FORMAL070206 OMG
   *OMG, 2004, AD20041104 OMG
   OMG, 2006, DTC060201 OMG
   *OMG, 2007, PTC070303 OMG
   *OMG, 2000, FORMAL000301 OMG
   *OMG, 2005, AD050402 OMG
   OMG SPEM1.0, 2002, FORMAL021114 OMG
   *OS, 2009, OS IRIS SUIT
   OUYANG C, 2005, BPM0513
   Popescu C.M., 1995, PROJECT PLANNING SCH
   RUIZGONZALEZ F, 2004, UPGRADE EUROPEAN INF, V5, P6
   Russell N, 2005, LECT NOTES COMPUT SC, V3716, P353
   Russell N, 2005, LECT NOTES COMPUT SC, V3520, P216
   SARSTEDT S, 2006, SEMANTICS FDN TOOL S
   SCHLENOFF C, 1996, 5910 INT
   *STL, 2009, STL UML2 0 SEM PROJ
   Storrle H., 2005, Software Engineering, P117
   Sutton S. M.  Jr., 1995, ACM Transactions on Software Engineering and Methodology, V4, P221, DOI 10.1145/214013.214017
   SUTTON SM, 1995, 9578 CMPSCI U MASS
   Van der Aalst WMP, 2003, DISTRIB PARALLEL DAT, V14, P5, DOI 10.1023/A:1022883727209
   Vitolins V, 2005, NINTH IEEE INTERNATIONAL EDOC ENTERPRISE COMPUTING CONFERENCE, PROCEEDINGS, P181, DOI 10.1109/EDOC.2005.29
   White S.A., 2004, The Workflow Handbook 2004, P265
   Wise RK, 2000, PERFUSION-UK, V15, P155, DOI 10.1177/026765910001500211
   WOHED P, 2005, P ER 2005, P63
   Zamli KZ, 2001, ACS/IEEE INTERNATIONAL CONFERENCE ON COMPUTER SYSTEMS AND APPLICATIONS, PROCEEDINGS, P435, DOI 10.1109/AICCSA.2001.934035
   2009, EPF ECLIPSE PROCESS
   2008, MPM MICROSOFT PROJEC
NR 76
TC 47
Z9 50
U1 1
U2 17
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD SEP-OCT
PY 2010
VL 36
IS 5
BP 662
EP 675
DI 10.1109/TSE.2009.85
PG 14
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 653YP
UT WOS:000282135000005
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Do, H
   Mirarab, S
   Tahvildari, L
   Rothermel, G
AF Do, Hyunsook
   Mirarab, Siavash
   Tahvildari, Ladan
   Rothermel, Gregg
TI The Effects of Time Constraints on Test Case Prioritization: A Series of
   Controlled Experiments
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Regression testing; test case prioritization; cost-benefits; Bayesian
   networks; empirical studies
ID COST-EFFECTIVENESS; MUTATION; FAULTS; SUITE
AB Regression testing is an expensive process used to validate modified software. Test case prioritization techniques improve the cost-effectiveness of regression testing by ordering test cases such that those that are more important are run earlier in the testing process. Many prioritization techniques have been proposed and evidence shows that they can be beneficial. It has been suggested, however, that the time constraints that can be imposed on regression testing by various software development processes can strongly affect the behavior of prioritization techniques. If this is correct, a better understanding of the effects of time constraints could lead to improved prioritization techniques and improved maintenance and testing processes. We therefore conducted a series of experiments to assess the effects of time constraints on the costs and benefits of prioritization techniques. Our first experiment manipulates time constraint levels and shows that time constraints do play a significant role in determining both the cost-effectiveness of prioritization and the relative cost-benefit trade-offs among techniques. Our second experiment replicates the first experiment, controlling for several threats to validity including numbers of faults present, and shows that the results generalize to this wider context. Our third experiment manipulates the number of faults present in programs to examine the effects of faultiness levels on prioritization and shows that faultiness level affects the relative cost-effectiveness of prioritization techniques. Taken together, these results have several implications for test engineers wishing to cost-effectively regression test their software systems. These include suggestions about when and when not to prioritize, what techniques to employ, and how differences in testing processes may relate to prioritization cost-effectiveness.
C1 [Do, Hyunsook] N Dakota State Univ, Dept Comp Sci 2740, Fargo, ND 58102 USA.
   [Mirarab, Siavash] IBM Corp, Vancouver, BC V5R 6G9, Canada.
   [Tahvildari, Ladan] Univ Waterloo, Dept Elect & Comp Engn, Waterloo, ON N2L 3G1, Canada.
   [Rothermel, Gregg] Univ Nebraska, Dept Comp Sci & Engn, Lincoln, NE 68588 USA.
C3 North Dakota State University Fargo; University of Waterloo; University
   of Nebraska System; University of Nebraska Lincoln
RP Do, H (corresponding author), N Dakota State Univ, Dept Comp Sci 2740, 258 IACC Bldg,1320 Albrecht Blvd, Fargo, ND 58102 USA.
EM hyunsook.do@ndsu.edu; smirarab@uwaterloo.ca; ltahvild@uwaterloo.ca;
   grother@cse.unl.edu
OI Mirarab, Siavash/0000-0001-5410-1518
FU US National Science Foundation (NSF) [CNS-0454203, CCR-0080898,
   CCR-0347518]; Natural Sciences and Engineering Research Council (NSERC)
   of Canada; Ontario Ministry of Research and Innovation (MRI)
FX This work was supported in part by the US National Science Foundation
   (NSF) under Awards CNS-0454203, CCR-0080898, and CCR-0347518 to the
   University of Nebraska-Lincoln. This work was also funded in part by the
   Natural Sciences and Engineering Research Council (NSERC) of
   Canada-Strategic Project Grants (SPG) and Ontario Ministry of Research
   and Innovation (MRI)-Early Researcher Award (ERA) to the University of
   Waterloo. Bouchaib Falah helped collect the number of faults based on
   the LOC model. The authors thank the anonymous reviewers of the
   conference version of this paper, and of earlier versions of this paper,
   for providing insightful comments.
CR Alspaugh S., 2007, P ACM INT WORKSH EMP, P17
   Andrews JH, 2005, PROC INT CONF SOFTW, P402, DOI 10.1145/1062455.1062530
   [Anonymous], P 24 INT C SOFTW ENG
   [Anonymous], INT S SOFTW TEST AN
   [Anonymous], COMM ACM
   Bell R., 2006, Proc. 2006 International Symposium on Software Testing and Analysis, P61
   BOEHM B, 2003, ACM SIGSOFT SOFTWARE, V28, P4
   Boehm BW., 2000, SOFTWARE COST ESTIMA, VII
   CHIDAMBER SR, 1991, SIGPLAN NOTICES, V26, P197
   COLLBERG C, 2004, TR0411 U AR DEP COMP
   *CULP ASS INC, 2010, CULP COMP BEN SURV
   Do H, 2006, EMPIR SOFTW ENG, V11, P33, DOI 10.1007/s10664-006-5965-8
   Do H., 2008, Proceedings of the 16th ACM SIGSOFT International Symposium on Foundations of software engineering (SIGSOFT '08/FSE-16), P71
   Do HS, 2004, 15TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P113
   Do HS, 2005, EMPIR SOFTW ENG, V10, P405, DOI 10.1007/s10664-005-3861-2
   Do H, 2006, IEEE T SOFTWARE ENG, V32, P733, DOI 10.1109/TSE.2006.92
   Do Hyunsook., 2008, Proceedings of the International Symposium on Software Testing and Analysis (ISSTA), P51
   Do Hyunsook., 2006, P ACM SIGSOFT INT S, P141, DOI DOI 10.1145/1181775.1181793
   Elbaum S, 2002, IEEE T SOFTWARE ENG, V28, P159, DOI 10.1109/32.988497
   Elbaum S, 2001, PROC INT CONF SOFTW, P329, DOI 10.1109/ICSE.2001.919106
   Elbaum S., 2000, Software Engineering Notes, V25, P102, DOI 10.1145/347636.348910
   Freimut B, 2005, IEEE T SOFTWARE ENG, V31, P1074, DOI 10.1109/TSE.2005.136
   Harrold MJ, 2001, IEEE T SOFTWARE ENG, V27, P248, DOI 10.1109/32.910860
   Hou SS, 2008, PROC IEEE INT CONF S, P257, DOI 10.1109/ICSM.2008.4658074
   Jeffrey D, 2006, P INT COMP SOFTW APP, P411
   Johnson R., 1992, Elementary statistics
   Jones C., 1997, APPL SOFTWARE MEASUR
   Jones TA, 2003, COMPUT GEOSCI-UK, V29, P209, DOI 10.1016/S0098-3004(02)00109-7
   KINNEER A, 2006, TRUNLCSE20060006
   Korel B, 2005, PROC IEEE INT CONF S, P559
   Korel B, 2008, PROC IEEE INT CONF S, P247, DOI 10.1109/ICSM.2008.4658073
   KUSUMOTO S, 1992, IEICE T INF SYST, VE75D, P674
   Leon D, 2003, ISSRE 2003: 14TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P442, DOI 10.1109/ISSRE.2003.1251065
   LEUNG HKN, 1991, PROCEEDINGS - CONFERENCE ON SOFTWARE MAINTENANCE 1991, P201, DOI 10.1109/ICSM.1991.160330
   Li Z, 2007, IEEE T SOFTWARE ENG, V33, P225, DOI 10.1109/TSE.2007.38
   Liu WL, 2007, INT C COMP AID DES C, P252
   Malishevsky AG, 2002, PROC IEEE INT CONF S, P204, DOI 10.1109/ICSM.2002.1167767
   MIRARAB S, 2008, THESIS U WATERLOO
   MIRARAB S, 2008, P INT C SOFTW TEST V, P278
   Mirarab S, 2007, LECT NOTES COMPUT SC, V4422, P276
   MULLER MM, 2003, P INT WORKSH EC DRIV, P2631
   Ostrand TJ, 2005, IEEE T SOFTWARE ENG, V31, P340, DOI 10.1109/TSE.2005.49
   OSTRAND TJ, 1988, COMMUN ACM, V31, P676, DOI 10.1145/62959.62964
   Park H, 2008, PROCEEDINGS OF THE SECOND INTERNATIONAL CONFERENCE ON INFORMATION SECURITY AND ASSURANCE, P32
   Perry DewayneE., 1993, P 4 EUROPEAN SOFTWAR, P48
   Phillips J.J., 2003, RETURN INVESTMENT TR, V2nd
   Ramsey FredL., 1997, STAT SLEUTH
   Rothermel G, 2001, IEEE T SOFTWARE ENG, V27, P929, DOI 10.1109/32.962562
   Rothermel G, 1996, IEEE T SOFTWARE ENG, V22, P529, DOI 10.1109/32.536955
   Rothermel G., 1999, Proceedings IEEE International Conference on Software Maintenance - 1999 (ICSM'99). `Software Maintenance for Business Change' (Cat. No.99CB36360), P179, DOI 10.1109/ICSM.1999.792604
   Rothermel G., 1997, ACM Transactions on Software Engineering and Methodology, V6, P173, DOI 10.1145/248233.248262
   Saltelli A., 2004, SENSITIVITY ANAL PRA
   SAMPATH S, 2008, P 1 INT C SOFTW TEST, P141
   Sherriff M, 2007, ISSRE 2007: 18TH IEEE INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P81, DOI 10.1109/ISSRE.2007.25
   Shull F, 2002, EIGHTH IEEE SYMPOSIUM ON SOFTWARE METRICS, PROCEEDINGS, P249, DOI 10.1109/METRIC.2002.1011343
   van Solingen R, 2004, IEEE SOFTWARE, V21, P32, DOI 10.1109/MS.2004.1293070
   WAGNER S, 2007, P 1 INT S EMP SOFTW, P440
   Wagner Stefan., 2006, Proceedings of the 2006 International Symposium on Software Testing and Analysis, ISSTA '06, P73
   Walcott K.R., 2006, P INT S SOFTW TEST A, P1, DOI DOI 10.1145/1146238.1146240
   Wang WE, 1997, EIGHTH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P264, DOI 10.1109/ISSRE.1997.630875
   Yoo S., 2009, P 18 INT S SOFTWARE, P201, DOI 10.1145/1572272.1572296
   Zhang L, 2009, PROCEEDINGS OF 2009 INTERNATIONAL SYMPOSIUM ON AIRCRAFT AIRWORTHINESS, P212
NR 62
TC 100
Z9 109
U1 0
U2 9
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD SEP-OCT
PY 2010
VL 36
IS 5
BP 593
EP 617
DI 10.1109/TSE.2010.58
PG 25
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 653YP
UT WOS:000282135000002
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Uchitel, S
   Brunet, G
   Chechik, M
AF Uchitel, Sebastian
   Brunet, Greg
   Chechik, Marsha
TI Synthesis of Partial Behavior Models from Properties and Scenarios
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Modal transition systems; merge; synthesis; partial behavior models
ID STATE MACHINES; REFINEMENT
AB Synthesis of behavior models from software development artifacts such as scenario-based descriptions or requirements specifications helps reduce the effort of model construction. However, the models favored by existing synthesis approaches are not sufficiently expressive to describe both universal constraints provided by requirements and existential statements provided by scenarios. In this paper, we propose a novel synthesis technique that constructs behavior models in the form of Modal Transition Systems (MTS) from a combination of safety properties and scenarios. MTSs distinguish required, possible, and proscribed behavior, and their elaboration not only guarantees the preservation of the properties and scenarios used for synthesis but also supports further elicitation of new requirements.
C1 [Uchitel, Sebastian] Univ Buenos Aires, Dept Comp, FCEN, RA-1053 Buenos Aires, DF, Argentina.
   [Uchitel, Sebastian] Univ London Imperial Coll Sci Technol & Med, Dept Comp, London SW7 2RH, England.
   [Brunet, Greg] Oracle Corp, Secure Enterprise Search Grp, Redwood Shores, CA 94065 USA.
   [Chechik, Marsha] Univ Toronto, Dept Comp Sci, Toronto, ON M5S 3G4, Canada.
C3 University of Buenos Aires; Imperial College London; Oracle; University
   of Toronto
RP Uchitel, S (corresponding author), Univ Buenos Aires, Dept Comp, FCEN, C1428EGA, RA-1053 Buenos Aires, DF, Argentina.
EM suchitel@dc.uba.ar; greg.brunet@utoronto.ca; chechik@cs.toronto.edu
OI Uchitel, Sebastian/0000-0001-9352-1478
FU CONICET; ERC [StG 204853-2]; PICT [11-32440]; UBACYT; NSERC
FX The authors thank the anonymous ICSE and TSE referees for their comments
   first on a conference version of this paper [47] and then on an earlier
   version of the journal paper. They gratefully acknowledge the support of
   CONICET, ERC StG 204853-2, PICT 11-32440, UBACYT, and NSERC. Nicolas
   D'Ippolito and Dario Fischbein contributed to the development of the
   MTSA tool. G. Brunet participated in early work leading to this paper
   while he was a graduate student at the University of Toronto and a
   research associate at Imperial College London.
CR ABADI M, 1991, THEOR COMPUT SCI, V82, P253, DOI 10.1016/0304-3975(91)90224-P
   [Anonymous], 1952, INTRO METAMATHEMATIC
   [Anonymous], 1997, The Theory and Practice of Concurrency
   [Anonymous], THESIS EINDHOVEN U T
   [Anonymous], 2006, Proceedings of the 14th ACM SIGSOFT international symposium on Foundations of software engineering, SIGSOFT '06/FSE-14
   [Anonymous], 1999, Concurrency-state models and Java programs
   Bontemps Y, 2005, IEEE T SOFTWARE ENG, V31, P999, DOI 10.1109/TSE.2005.137
   BRUNET G., 2006, THESIS U TORONTO
   Bruns G., 2000, CONCUR 2000 - Concurrency Theory. 11th International Conference. Proceedings (Lecture Notes in Computer Science Vol.1877), P168
   Castro J, 2002, INFORM SYST, V27, P365, DOI 10.1016/S0306-4379(02)00012-1
   De Landtsheer R, 2003, 11TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, PROCEEDINGS, P200
   DIPPOLITO N, 2007, THESIS U BUENOS AIRE
   DIPPOLITO N, 2008, P TOOLS TRACK INT C
   Dwyer M. B., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P411, DOI 10.1109/ICSE.1999.841031
   FISCHBEIN D, 2008, P ACM SIGSOFT INT S
   Fischbein D., 2006, ROSATEA 06, P39
   GIANNAKOPOULOU D, 2003, P JOINT EUR SOFTW EN
   GURFINKEL A, 2005, P 13 ADV RES WORK C, P65
   HAREL D, 1987, SCI COMPUT PROGRAM, V8, P231, DOI 10.1016/0167-6423(87)90035-9
   Harel D., 2003, COME LETS PLAY SCENA, DOI 10.1007/978-3-642-19029-2
   Havelund K, 2001, 16TH ANNUAL INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2001), PROCEEDINGS, P135, DOI 10.1109/ASE.2001.989799
   Heitmeyer C. L., 1996, ACM Transactions on Software Engineering and Methodology, V5, P231, DOI 10.1145/234426.234431
   Holzmann GJ, 1997, IEEE T SOFTWARE ENG, V23, P279, DOI 10.1109/32.588521
   HUSSAIN A., 2004, P 1 INT S LEV APPL F, P235
   Hussain A, 2006, ELECTRON NOTES THEOR, V155, P401, DOI 10.1016/j.entcs.2005.11.067
   Huth M, 2001, LECT NOTES COMPUT SC, V2028, P155
   Huth MRA, 2004, MATH STRUCT COMP SCI, V14, P469, DOI 10.1017/S0960129504004268
   Kazhamiakin R, 2004, PROCEEDINGS OF THE SECOND INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING AND FORMAL METHODS, P406, DOI 10.1109/SEFM.2004.1347546
   KOSKIMIES K, 1994, SOFTWARE PRACT EXPER, V24, P643, DOI 10.1002/spe.4380240704
   KRAMER J, 1983, IEE PROC-E, V130, P1, DOI 10.1049/ip-e.1983.0001
   KRUGER I, 1999, DISTRIBUTED PARALLEL
   Larsen K. G., 1996, Formal Systems Specification. The RPC-Memory Specification Case Study, P405, DOI 10.1007/BFb0024437
   Larsen K. G., 1990, Proceedings. Fifth Annual IEEE Symposium on Logic in Computer Science (90CH2897-7), P108, DOI 10.1109/LICS.1990.113738
   LARSEN KG, 1995, P 1 INT WORKSH TOOLS, P17
   LARSEN KG, 2007, P EUR S PROGR
   Larsen U, 1988, Eur J Popul, V3, P203, DOI 10.1109/LICS.1988.5119
   LETIER E, 2002, P 10 ACM SIGSOFT S F, P119
   LETIER E, 2006, 022006 IMP COLL
   LETIER E, 2005, P ACM SIGSOFT FOUND, P70
   Lichtenstein O., 1985, P 12 ACM SIGACT SIGP, P97, DOI DOI 10.1145/318593.318622
   Magee J., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, P499, DOI 10.1109/ICSE.2000.870440
   Manna Z., 1983, VERIFICATION CONCURR
   PONSARD C, 2004, P WORKSH FORM METH C
   Sun J, 2006, IEEE T SOFTWARE ENG, V32, P349, DOI 10.1109/TSE.2006.55
   Sutcliffe AG, 1998, IEEE T SOFTWARE ENG, V24, P1072, DOI 10.1109/32.738340
   UCHITEL S, 2004, ACM T SOFTWARE ENG M, V13
   UCHITEL S, 2004, P 12 ACM SIGSOFT INT, P43, DOI DOI 10.1145/1029894.1029904
   Uchitel S, 2007, PROC INT CONF SOFTW, P34
   van Lamsweerde A, 2003, PROC INT CONF SOFTW, P744, DOI 10.1109/ICSE.2003.1201266
   van Lamsweerde A, 2000, IEEE T SOFTWARE ENG, V26, P978, DOI 10.1109/32.879820
   VANTRAN H, 2004, P IEEE INT S REQ ENG, P218
   VARDI MY, 1986, P 1 S LOG COMP SCI C, P322
NR 52
TC 56
Z9 61
U1 0
U2 3
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAY-JUN
PY 2009
VL 35
IS 3
BP 384
EP 406
DI 10.1109/TSE.2008.107
PG 23
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 450NL
UT WOS:000266408000005
DA 2024-07-18
ER

PT J
AU Ye, CY
   Cheung, SC
   Chan, WK
   Xu, C
AF Ye, Chunyang
   Cheung, S. C.
   Chan, W. K.
   Xu, Chang
TI Atomicity Analysis of Service Composition across Organizations
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Atomicity; privacy protection; process algebra; theory and models; Web
   services
ID BUSINESS TRANSACTIONS; SPECIFICATION; SUPPORT; WEB; STRATEGIES;
   MIDDLEWARE; WORKFLOWS
AB Atomicity is a highly desirable property for achieving application consistency in service compositions. To achieve atomicity, a service composition should satisfy the atomicity sphere, a structural criterion for the backend processes of involved services. Existing analysis techniques for the atomicity sphere generally assume complete knowledge of all involved backend processes. Such an assumption is invalid when some service providers do not release all details of their backend processes to service consumers outside the organizations. To address this problem, we propose a process algebraic framework to publish atomicity-equivalent public views from the backend processes. These public views extract relevant task properties and reveal only partial process details that service providers need to expose. Our framework enables the analysis of the atomicity sphere for service. compositions using these public views instead of their backend processes. This allows service consumers to choose suitable services such that their composition satisfies the atomicity sphere without disclosing the details of their backend processes. Based on the theoretical result, we present algorithms to construct atomicity-equivalent public views and to analyze the atomicity sphere for a service composition. Two case studies from the supply chain and insurance domains are given to evaluate our proposal and demonstrate the applicability of our approach.
C1 [Ye, Chunyang; Cheung, S. C.; Xu, Chang] Hong Kong Univ Sci & Technol, Dept Comp Sci & Engn, Kowloon, Hong Kong, Peoples R China.
   [Chan, W. K.] City Univ Hong Kong, Dept Comp Sci, Kowloon, Hong Kong, Peoples R China.
C3 Hong Kong University of Science & Technology; City University of Hong
   Kong
RP Ye, CY (corresponding author), Hong Kong Univ Sci & Technol, Dept Comp Sci & Engn, Clear Water Bay, Kowloon, Hong Kong, Peoples R China.
EM cyye@cse.ust.hk; scc@cse.ust.hk; wkchan@cs.cityu.edu.hk;
   changxu@cse.ust.hk
RI Xu, Chang/O-4543-2015; Chan, Wah Kheong/AGA-6636-2022; Liu,
   Chenyu/KBQ-8899-2024; Cheung, Shing Chi/U-5882-2018
OI Chan, Wah Kheong/0000-0002-9105-5837; Chan, Wing
   Kwong/0000-0001-7726-6235; Cheung, Shing Chi/0000-0002-3508-7172
FU Research Grants Council of Hong Kong [6167/04E, 612306, 111107, 717308,
   HKBU 1/05C]; National Science Foundation of China [60736015]; National
   Basic Research of China 973 [2006CB303000]
FX This research was partially supported by the Research Grants Council of
   Hong Kong under grant nos. 6167/04E, 612306, 111107, 717308, and HKBU
   1/05C, the National Science Foundation of China under grants no
   60736015, and National Basic Research of China 973 under grant no.
   2006CB303000.
CR [Anonymous], NOTES DATA BASE OPER
   [Anonymous], P INT C SOFTW ENG
   [Anonymous], 1999, Concurrency-state models and Java programs
   ANSARI M, 1992, PROC INT CONF VERY L, P65
   Bergstra J.A., 2001, HDB PROCESS ALGEBRA
   BRAND D, 1983, J ACM, V30, P323, DOI 10.1145/322374.322380
   Broy M, 2007, ACM T SOFTW ENG METH, V16, DOI 10.1145/1189748.1189753
   Bussler C, 2002, LECT NOTES COMPUT SC, V2465, P377
   BUSSLER C, 2002, PUBLIC PROCESS INHER, P19
   Butler M, 2005, J UNIVERS COMPUT SCI, V11, P712
   Butler M, 2005, LECT NOTES COMPUT SC, V3525, P133
   BUTLER M, 2004, P 6 INT C COORD MOD, P87
   Cardoso J, 2003, J INTELL INF SYST, V21, P191, DOI 10.1023/A:1025542915514
   CARDOSO J, 2003, P IFIP TC5 WG5 12 IN, P303
   Casati F., 2001, Advances in exception handling techniques (Lecture Notes in Computer Science Vol.2022), P251
   Casati F, 1999, ACM T DATABASE SYST, V24, P405, DOI 10.1145/328939.328996
   Casati F, 2000, IEEE T SOFTWARE ENG, V26, P760, DOI 10.1109/32.879813
   Chiu D. K. W., 2004, Information Technology & Management, V5, P221, DOI 10.1023/B:ITEM.0000031580.57966.d4
   Chiu DKW, 2002, DISTRIB PARALLEL DAT, V12, P193, DOI 10.1023/A:1016503218569
   CHIU DKW, 2003, P IFIPTC2 WG2 69 WOR, P137
   CHIU DKW, 2004, P 5 VLDB WORKSH TECH, P107
   Cormen T.H., 1990, INTRO ALGORITHMS, P449
   *CROSSFLOW CONS AG, 1999, INS REQ CROSS FLOW D
   Dalal S, 2003, IEEE INTERNET COMPUT, V7, P30, DOI 10.1109/MIC.2003.1167337
   DAYAL U, 1990, SIGMOD REC, V19, P204, DOI 10.1145/93605.98730
   DAYAL U, 1991, PROC INT CONF VERY L, P113
   Deora V, 2004, LECT NOTES COMPUT SC, V3307, P252
   Elmagarmid A., 1992, Database Transactional Models for Advanced Applications
   FISCHER J, 2007, P 22 IEEE ACM INT C, P54
   Foster H, 2004, IEEE INTERNATIONAL CONFERENCE ON WEB SERVICES, PROCEEDINGS, P738, DOI 10.1109/ICWS.2004.1314806
   Foster H, 2003, 18TH IEEE INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P152, DOI 10.1109/ASE.2003.1240303
   FOSTER H, 2006, THESIS IMPERIAL COLL
   Foster H., 2007, In Proceedings of the 6th ESEC/SIGSOFT Symposium on Foundations of Software Engineering, P225
   Fu X, 2005, IEEE T SOFTWARE ENG, V31, P1042, DOI 10.1109/TSE.2005.141
   Fu X, 2004, THEOR COMPUT SCI, V328, P19, DOI 10.1016/j.tcs.2004.07.004
   Fu X., 2004, P 13 INT C WORLD WID, P621
   Garcia-Molina H., 1987, SIGMOD Record, V16, P249, DOI 10.1145/38714.38742
   Greenfield P., 2005, P 31 INT C VER LARG, P1199
   Grefen P, 2001, VLDB J, V10, P316, DOI 10.1007/s007780100056
   Hagen C, 2000, IEEE T SOFTWARE ENG, V26, P943, DOI 10.1109/32.879818
   Hinz S, 2005, LECT NOTES COMPUT SC, V3649, P220, DOI 10.1007/11538394_15
   Jacobsen HA, 2000, 37TH INTERNATIONAL CONFERENCE ON TECHNOLOGY OF OBJECT-ORIENTED LANGUAGES AND SYSTEMS, PROCEEDINGS, P242, DOI 10.1109/TOOLS.2000.891373
   Kumar A, 2002, DECIS SUPPORT SYST, V32, P265, DOI 10.1016/S0167-9236(01)00114-2
   Lee P.A., 1990, FAULT TOLERANCE, P143
   Liu DR, 2003, INFORM SYST, V28, P505, DOI 10.1016/S0306-4379(02)00028-5
   MAZZARA M, 2005, P 7 INT C COORD MOD, P1
   Medjahed B, 2003, VLDB J, V12, P333, DOI 10.1007/s00778-003-0101-5
   NAKAJIMA S, 2004, P 4 INT C WEB ENG, P488
   PAPAZOGLOU MP, 2006, P SERV OR COMP
   Sadiq W, 2000, INFORM SYST, V25, P117, DOI 10.1016/S0306-4379(00)00012-0
   Schuldt H, 2002, ACM T DATABASE SYST, V27, P63, DOI 10.1145/507234.507236
   Schulz KA, 2004, DATA KNOWL ENG, V51, P109, DOI 10.1016/j.datak.2004.03.008
   Uchitel S, 2004, ACM T SOFTW ENG METH, V13, P37, DOI 10.1145/1005561.1005563
   van den Hove S, 2002, CLIM POLICY, V2, P3, DOI 10.1016/S1469-3062(02)00008-6
   van der Aalst WMP, 2002, THEOR COMPUT SCI, V270, P125, DOI 10.1016/S0304-3975(00)00321-2
   Vonk J, 2003, DISTRIB PARALLEL DAT, V14, P137, DOI 10.1023/A:1024884626434
   VONK J, 1999, P 10 INT C DAT EXP S, P942
   Wang X, 2007, ADV INTEL SYS RES, DOI 10.2991/iske.2007.208
   WEIKUM G, 1991, ACM T DATABASE SYST, V16, P132, DOI 10.1145/103140.103145
   Wohlstadter E, 2004, PROC INT CONF SOFTW, P189, DOI 10.1109/ICSE.2004.1317441
   Wombacher A, 2004, IEEE INTERNATIONAL CONFERENCE ON WEB SERVICES, PROCEEDINGS, P316, DOI 10.1109/ICWS.2004.1314753
   YE CY, 2006, P 14 ACM SIGSOFT INT, P186
   YEMINI S, 1985, ACM T PROGR LANG SYS, V7, P214, DOI 10.1145/3318.3320
   Zeng LZ, 2004, IEEE T SOFTWARE ENG, V30, P311, DOI 10.1109/TSE.2004.11
   Zhang J, 1994, ENTOMOLOGY TRENDS AG, V2, P67
   2008, ATOMICITY ANAL TOOL
NR 66
TC 23
Z9 27
U1 0
U2 12
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JAN-FEB
PY 2009
VL 35
IS 1
BP 2
EP 28
DI 10.1109/TSE.2008.86
PG 27
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 431UK
UT WOS:000265089400001
DA 2024-07-18
ER

PT J
AU d'Amorim, M
   Lauterburg, S
   Marinov, D
AF d'Amorim, Marcelo
   Lauterburg, Steven
   Marinov, Darko
TI Delta execution for efficient state-space exploration of object-oriented
   programs
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article; Proceedings Paper
CT International Symposium on Software Testing and Analysis (ISSTA)
CY 2007
CL Univ London Sch Oriental & African Studies, Brunei Gallery, London,
   ENGLAND
HO Univ London Sch Oriental & African Studies, Brunei Gallery
DE software/program verification; model checking; testing and debugging;
   performance; Delta Execution
AB We present Delta Execution, a technique that speeds up state-space exploration of object-oriented programs. State-space exploration is the essence of model checking and an increasingly popular approach for automating test generation. A key issue in exploration of object-oriented programs is handling the program state, in particular, the heap. We exploit the fact that many execution paths in state-space exploration partially overlap. Delta Execution simultaneously operates on several states/heaps and shares the common parts across the executions, separately executing only the "deltas" where the executions differ. We implemented Delta Execution in two model checkers: JPF, a popular general-purpose model checker for Java programs, and BOX, a specialized model checker that we developed for efficient exploration of sequential Java programs. The results of bounded-exhaustive exploration of 10 basic subject programs and one larger case study show that Delta Execution reduces exploration time from 1.06x to 126.80x (with median 5.60x) in JPF and from 0.58x to 4.16x (with median 2.23x) in BOX. The results of nonexhaustive exploration in JPF show that Delta Execution reduces exploration time from 0.92x to 6.28x (with median 4.52x).
C1 [d'Amorim, Marcelo] Univ Fed Pernambuco, Ctr Informat, BR-50732970 Recife, PE, Brazil.
   [Lauterburg, Steven; Marinov, Darko] Univ Illinois, Dept Comp Sci, Urbana, IL 61801 USA.
C3 Universidade Federal de Pernambuco; University of Illinois System;
   University of Illinois Urbana-Champaign
RP d'Amorim, M (corresponding author), Univ Fed Pernambuco, Ctr Informat, Caixa Postal 7851, BR-50732970 Recife, PE, Brazil.
EM damorim@cin.ufpe.br; slauter2@cs.uiuc.edu; marinov@cs.uiuc.edu
RI d'Amorim, Marcelo/D-1703-2017
OI d'Amorim, Marcelo/0000-0002-1323-8769
CR Anand S, 2007, LECT NOTES COMPUT SC, V4424, P134
   ANDREWS T, 2004, P 6 INT C COMP AID V, P484
   [Anonymous], ACM SIGSOFT SOFTW EN
   [Anonymous], 2001, P ACM SIGPLAN 2001 C, DOI DOI 10.1145/378795.378846
   ARTHO C, 2004, P INT C COMPUT AID V, P462
   Ball T, 2000, LECT NOTES COMPUT SC, V1885, P113
   Boyapati C., 2002, ISSTA 02, P123, DOI DOI 10.1145/566172.566191
   BRYANT RE, 1992, COMPUT SURV, V24, P293, DOI 10.1145/136035.136043
   Burch J.R., 1990, P 5 ANN IEEE S LOGIC, P1
   Cadar C., 2006, CCS '06: Proceedings of the 13th ACM conference on Computer and communications security, New York, NY, USA, P322
   Clarke E, 2004, LECT NOTES COMPUT SC, V2988, P168, DOI 10.1007/978-3-540-24730-2_15
   Clarke EM, 1999, MODEL CHECKING, P1
   Corbett J. C., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, P439, DOI 10.1109/ICSE.2000.870434
   Csallner C, 2004, SOFTWARE PRACT EXPER, V34, P1025, DOI 10.1002/spe.602
   D'Amorim M., 2007, THESIS U ILLINOIS UR
   d'Amorim M, 2006, LECT NOTES COMPUT SC, V4260, P549
   d'Amorim M, 2006, IEEE INT CONF AUTOM, P59
   DAMORIM M, 2007, P ACM SIGSOFT INT S, P50
   DARGA PT, 2006, P 21 ACM SIGPLAN C O, P363
   Demartini C, 1999, SOFTWARE PRACT EXPER, V29, P577, DOI 10.1002/(SICI)1097-024X(199906)29:7<577::AID-SPE246>3.0.CO;2-V
   Godefroid P, 2005, ACM SIGPLAN NOTICES, V40, P213, DOI 10.1145/1064978.1065036
   Godefroid Patrice., 1997, Proceedings of POPL, P174
   Holzmann GJ, 1997, IEEE T SOFTWARE ENG, V23, P279, DOI 10.1109/32.588521
   Iosif R, 2001, 16TH ANNUAL INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2001), PROCEEDINGS, P254, DOI 10.1109/ASE.2001.989811
   Khurshid S, 2003, LECT NOTES COMPUT SC, V2619, P553
   LERDA F, 2001, P 8 INT SPIN WORKSH, P80
   Lhotak O., 2004, P ACM SIGPLAN C PROG, P158
   Musuvathi M, 2002, USENIX ASSOCIATION PROCEEDINGS OF THE FIFTH SYMPOSIUM ON OPERATING SYSTEMS DESIGN AND IMPLEMENTATION, P75, DOI 10.1145/1060289.1060297
   MUSUVATHI M, 2005, P INT SPIN WORKSH MO, P28
   Musuvathi M, 2007, PLDI'07: PROCEEDINGS OF THE 2007 ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P446, DOI 10.1145/1250734.1250785
   Offutt AJ, 1999, SOFTWARE PRACT EXPER, V29, P167, DOI 10.1002/(SICI)1097-024X(199902)29:2<167::AID-SPE225>3.0.CO;2-V
   Pacheco C, 2005, LECT NOTES COMPUT SC, V3586, P504
   Perkins CE, 1999, WMCSA '99, SECOND IEEE WORKSHOP ON MOBILE COMPUTING SYSTEMS AND APPLICATIONS, PROCEEDINGS, P90, DOI 10.1109/MCSA.1999.749281
   Qadeer S., 2004, JOINT CAV ISSTA SPEC
   RUGINA R, 2004, P STAT AN S AUG, P228
   Sen K., 2005, P 10 EUR SOFTW ENG C, V30, P263, DOI DOI 10.1145/1081706.1081750
   SOBEIH A, 2005, P INT C FORM ENG MET, P235
   STOTTS D, 2002, P 2002 XP AG UN, P131
   *SUN MICR, 2008, JSTAT JAV VIRT MACH
   Veanes M., 2005, P 10 EUROPEAN SOFTWA, P273, DOI DOI 10.1145/1095430.1081751
   Visser W., 2003, Automated Software Engineering, V10, P203, DOI 10.1023/A:1022920129859
   VISSER W, 2006, P INT S SOFTW TEST A, P37, DOI DOI 10.1145/1146238.1146243
   Visser W., 2004, P 2004 ACM SIGSOFT I, P97, DOI [DOI 10.1145/1007512.1007526, 10.1145/1007512.1007526]
   Whaley John., 2004, PROGRAMMING LANGUAGE, P131
   Xie T, 2005, LECT NOTES COMPUT SC, V3440, P365
   Xie T, 2004, 19TH INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P196
   Yorsh G, 2004, LECT NOTES COMPUT SC, V2988, P530
   ZHOU Y, 2007, P WORKSH HOT TOP SYS
   [No title captured]
NR 49
TC 11
Z9 12
U1 1
U2 4
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD SEP-OCT
PY 2008
VL 34
IS 5
BP 597
EP 613
DI 10.1109/TSE.2008.37
PG 17
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Engineering
GA 351WM
UT WOS:000259456600003
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Lodi, G
   Panzieri, F
   Rossi, D
   Turrini, E
AF Lodi, Giorgia
   Panzieri, Fabio
   Rossi, Davide
   Turrini, Elisa
TI SLA-driven clustering of QoS-aware application servers
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Service Level Agreement; Quality of Service; QoS-aware application
   server; QoS-aware cluster; dynamic cluster; configuration; monitoring;
   load balancing
AB In this paper, we discuss the design, implementation, and experimental evaluation of a middleware architecture for enabling Service Level Agreement (SLA)-driven clustering of QoS-aware application servers. Our middleware architecture supports application server technologies with dynamic resource management: Application servers can dynamically change the amount of clustered resources assigned to hosted applications on-demand so as to meet application-level Quality of Service (QoS) requirements. These requirements can include timeliness, availability, and high throughput and are specified in SLAs. A prototype of our architecture has been implemented using the open-source J2EE application server JBoss. The evaluation of this prototype shows that our approach makes possible JBoss' resource usage optimization and allows JBoss to effectively meet the QoS requirements of the applications it hosts, i.e., to honor the SLAs of those applications.
C1 Univ Bologna, Dept Comp Sci, I-40126 Bologna, Italy.
C3 University of Bologna
RP Lodi, G (corresponding author), Univ Bologna, Dept Comp Sci, Mura Anteo Zamboni 7, I-40126 Bologna, Italy.
EM lodig@cs.unibo.it; panzieri@cs.unibo.it; rossi@cs.unibo.it;
   turrini@cs.unibo.it
RI Rossi, Davide/F-9168-2012
OI LODI, GIORGIA/0009-0000-9032-4831
CR ABDELLATIF T, 2004, P INT S DISTR OBJ AP
   [Anonymous], JAVA 2 PLATFORM ENTE
   [Anonymous], P 5 S OP SYST DES IM
   APPLEBY K, 2001, P 7 IFIP IEEE INT S
   Aron M., 2000, P ACM SIGMETRICS C J
   Asadzadeh P, 2006, WILEY SER PARA DIST, P431, DOI 10.1002/0471732710.ch22
   *ASP IND CONS WHIT, 2006, SLA APPL SERV PROV
   BALASUBRAMANIAN J, 2004, P 8 INT IEEE ENT DIS
   *BEA SYST, 2003, BEA WEBLOGIC SERV 8
   *BEA SYST, 2006, WEBLOGIC CLUST
   BOUCHENAK S, 2004, P 11 ACM SIGOPS EUR
   Buco M., 2004, IBM SYSTEMS J
   Coulouris G.F., 2005, Distributed Systems: Concepts and Design
   Debusmann M., 2003, P 8 INT IFIP IEEE S
   DEMIGUEL MA, 2002, P 10 INT WORKSH QUAL
   FLEURY M, 2003, P ACM IFIP USENIX IN
   INGHAM DB, 2000, IEEE INTERNET COMPUT, V41
   *JBOSS, 2006, JBOSS ENT MIDDL SYST
   Keller A., 2003, RC22456 IBM
   LODI G, 2004, P 1 IEEE INT WORKSH
   Lodi G., 2006, UBLCS200606
   Mitchell B, 2005, INFORM COMM TECH KNO, V2, P30
   MYERSON J, 2004, USE SLAS WEB SERVI 1
   Ogata K., 1997, Instrumentation and Controls Series, V3rd ed.
   PACIFICI G, 2005, RC23651 IBM
   PACIFICI G, 2002, RC22676 IBM
   PROISE J, 2002, PROGRAMMING MICROSOF
   Roehm B., 2004, WEBSPHERE HDB SERIES
   ROEHM B, 2004, IBM WEBSPHERE APPL S
   ROSSI D, 2005, P JOINT INT C AUT AU
   ROSSI D, 2004, P 1 IEEE INT WORKSH
   Shen Kai, 2002, P 5 S OP SYST DES IM
   SKENE J, 2004, P 26 INT C SOFTW ENG
   *STAND PERF EV COR, 2006, SPECJAPPSERVER2004
   Sun Microsystems, 2002, JAV MAN EXT INSTR AG
   *TAPAS PROJ, 2006, TRUST QOS AW PROV AP
   WANG N, 2000, COMPUTER BASED SOFTW
   Wustenhoff E., 2002, SERVICE LEVEL AGREEM
   ZHAO T, 2002, P 16 INT PAR DISTR P
   2006, JMETER
   2004, IBM SYSTEMS J, V43
   2006, JGROUPS A TOOLKIT RE
   2006, APACHE MOD JK
   2006, SERVICE LEVEL AGREEM
NR 44
TC 37
Z9 40
U1 0
U2 2
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAR
PY 2007
VL 33
IS 3
BP 186
EP 197
DI 10.1109/TSE.2007.28
PG 12
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 130GN
UT WOS:000243788000004
DA 2024-07-18
ER

PT J
AU Hou, DQ
   Hoover, HJ
AF Hou, Daqing
   Hoover, H. James
TI Using SCL to specify and check design intent in source code
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE design intent; structural constraints; program analysis; object-oriented
   software; SCL; FCL
AB Software developers often fail to respect the intentions of designers due to missing or ignored documentation of design intent. SCL ( Structural Constraint Language) addresses this problem by enabling designers to formalize and confirm compliance with design intent. The designer expresses his intent as constraints on the program model using the SCL language. The SCL conformance checking tool examines developer code to confirm that the code honors these constraints. This paper presents the design of the SCL language and its checker, a set of practical examples of applying SCL, and our experience with using it both in an industrial setting and on open-source software.
C1 Avra Software Lab Inc, Edmonton, AB T6E 2R1, Canada.
   Univ Alberta, Dept Comp Sci, Edmonton, AB T6G 2E8, Canada.
C3 University of Alberta
RP Hou, DQ (corresponding author), Avra Software Lab Inc, 9723-88 Ave, Edmonton, AB T6E 2R1, Canada.
EM daqing@cs.ualberta.ca; hoover@cs.ualberta.ca
RI Hou, Daqing/KLE-3625-2024
OI Hou, Daqing/0000-0001-8401-7157
CR ATLEE JM, 1993, IEEE T SOFTWARE ENG, V19, P24, DOI 10.1109/32.210305
   Biddle Robert, 2002, P 25 AUSTR C COMP SC, P7
   Bloch J., 2001, EFFECTIVE JAVA PROGR
   BOKOWSKI B, 1999, P EUR SOFTW ENG C FD
   BRAND D, 2002, P IEEE 2002 INT S SO
   Bush WR, 2000, SOFTWARE PRACT EXPER, V30, P775, DOI 10.1002/(SICI)1097-024X(200006)30:7<775::AID-SPE309>3.0.CO;2-H
   Chechik M, 2001, IEEE T SOFTWARE ENG, V27, P651, DOI 10.1109/32.935856
   Constantine L.L., 1999, Software for Use: A Practical Guide to the Models and Methods of Usage-Centered Design
   Crew RF, 1997, PROCEEDINGS OF THE CONFERENCE ON DOMAIN-SPECIFIC LANGUAGES, P229
   Das Manuvir., 2002, P ACM SIGPLAN 2002 C
   Devanbu PT, 1999, ACM T SOFTW ENG METH, V8, P177, DOI 10.1145/304399.304402
   *ECL FDN, 2005, JDT JAV DEV TOOLS
   Engler D, 2000, P S OP SYST DES IMPL
   Engler DR, 1999, IEEE T SOFTWARE ENG, V25, P387, DOI 10.1109/32.798327
   Evans David., 1994, P ACM SIGSOFT S FDN
   FAGAN ME, 1976, IBM SYST J, V15, P182, DOI 10.1147/sj.153.0182
   Flanagan C., 2002, P ACM SIGPLAN 2002 C
   Florijn G, 1997, LECT NOTES COMPUT SC, V1241, P472, DOI 10.1007/BFb0053391
   FONTOURA M, 2000, P EUR C OBJ OR PROGR
   Foster J., 2002, P ACM SIGPLAN 2002 C
   FREEDMAN DP, 1990, HDB WALKTROUGHS INSP
   FROEHLICH G, 1997, P 1997 INT C SOF MAY
   HALLEM S., 2002, P ACM SIGPLAN C PROG
   Holt RC, 1998, FIFTH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P210, DOI 10.1109/WCRE.1998.723191
   HOLT RC, 2000, P WORK C REV ENG, P349
   Horváth L, 2003, IEEE IND ELEC, P872, DOI 10.1109/IECON.2003.1280097
   HORVATH L, 1999, P 1999 IEEE INT C SY, V2, P348
   HOU D, 2003, THESIS U ALBERTA EDM
   HOU D, 2006, P INT C SOFTW MAINT
   HOU D, 2004, P CTR ADV STUD C CAS
   HOU D, 2004, P 4 IEEE INT WORKSH
   HOVEMEYER D, 2004, COMP ACM SIGPLAN C O
   Jackson D, 2002, ACM T SOFTW ENG METH, V11, P256, DOI 10.1145/505145.505149
   Jackson D., 1995, ACM Transactions on Software Engineering and Methodology, V4, P109, DOI 10.1145/210134.210135
   KACZOROL O, 2006, P 10 EUR C SOFTW MAI
   LARUS J, 2004, SE SOFTW ENG C
   LIN YH, 1993, CS9323 BROWN U DEP C
   Mendelzon A, 1995, SOFTWARE-CONC TOOL, V16, P170
   Mens K, 2006, COMPUT LANG SYST STR, V32, P140, DOI 10.1016/j.cl.2005.09.002
   *MICR, 2003, DISPL TOOL TIPS CALL
   Minsky N., 1996, THEORY PRACTICE OBJE, V2
   *MIZ ORG, MIZ PROJ
   NEWCOMER J, 2004, MVP MICROSOFT VALUED
   *OBJ MAN GROUP, 2004, UN MOD LANG 2 0
   Paul S, 1996, IEEE T SOFTWARE ENG, V22, P202, DOI 10.1109/32.489080
   Pingali K, 1997, ACM T PROGR LANG SYS, V19, P462, DOI 10.1145/256167.256217
   REIMER D, 2004, P INT S SOFTW TEST A, P243
   Shepherd George., 1996, MFC INTERNALS INSIDE
   Shih CH, 1997, P 4 ACM S SOL MOD AP, P255
   WONG K, 1995, IEEE SOFTWARE, V12, P46, DOI 10.1109/52.363166
   XIE Y, 2005, P ACM SIGPLAN SIGACT
   XIE Y, 2003, P ACM SIGSOFT 2003 C
NR 52
TC 38
Z9 45
U1 0
U2 3
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUN
PY 2006
VL 32
IS 6
BP 404
EP 423
DI 10.1109/TSE.2006.60
PG 20
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 055VP
UT WOS:000238479000004
DA 2024-07-18
ER

PT J
AU Li, ZM
   Lu, S
   Myagmar, S
   Zhou, YY
AF Li, ZM
   Lu, S
   Myagmar, S
   Zhou, YY
TI CP-Miner: Finding copy-paste and related bugs in large-scale software
   code
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE software analysis; code reuse; code duplication; debugging aids; data
   mining
AB Recent studies have shown that large software suites contain significant amounts of replicated code. It is assumed that some of this replication is due to copy-and-paste activity and that a significant proportion of bugs in operating systems are due to copy-paste errors. Existing static code analyzers are either not scalable to large software suites or do not perform robustly where replicated code is modified with insertions and deletions. Furthermore, the existing tools do not detect copy-paste related bugs. In this paper, we propose a tool, CIF-Miner, that uses data mining techniques to efficiently identify copy-pasted code in large software suites and detects copy-paste bugs. Specifically, it takes less than 20 minutes for CP-Miner to identify 190,000 copy-pasted segments in Linux and 150,000 in FreeBSD. Moreover, CP-Miner has detected many new bugs in popular operating systems, 49 in Linux and 31 in FreeBSD, most of which have since been confirmed by the corresponding developers and have been rectified in the following releases. In addition, we have found some interesting characteristics of copy-paste in operating system code. Specifically, we analyze the distribution of copy-pasted code by size (number lines of code), granularity (basic blocks and functions), and modification within copy-pasted code. We also analyze copy-paste across different modules and various software versions.
C1 Univ Illinois, Dept Comp Sci, Urbana, IL 61801 USA.
C3 University of Illinois System; University of Illinois Urbana-Champaign
RP Univ Illinois, Dept Comp Sci, 1304 W Springfield Ave, Urbana, IL 61801 USA.
EM zli4@uiuc.edu; shanlu@uiuc.edu; myagmar@uiuc.edu; yyzhou@uiuc.edu
OI Lu, Shan/0000-0002-0757-4600
FU Division Of Computer and Network Systems; Direct For Computer & Info
   Scie & Enginr [1001158] Funding Source: National Science Foundation
CR Agrawal R., 1995, P 11 INT C DAT ENG
   Aho A.V., 1986, COMPILERS PRINCIPLES
   Aiken Alex., 2005, MOSS SYSTEM DETECTIN
   [Anonymous], P FAST
   [Anonymous], 2005, Linux kernel mailing list
   BAKER BS, 1995, SECOND WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P86, DOI 10.1109/WCRE.1995.514697
   Baxter ID, 1998, PROC IEEE INT CONF S, P368, DOI 10.1109/ICSM.1998.738528
   Choi J.-D., 2002, PROGRAMMING LANGUAGE, P258
   Chou Andy., 2001, P 18 ACM S OPERATING, P73
   CONDIT J, 2003, P ACM SIGPLAN 2003 C, P232
   Ducasse S., 1999, Proceedings IEEE International Conference on Software Maintenance - 1999 (ICSM'99). `Software Maintenance for Business Change' (Cat. No.99CB36360), P109, DOI 10.1109/ICSM.1999.792593
   Engler Dawson., 2003, Proceedings of the Nineteenth ACM Symposium on Operating Systems Principles, SOSP '03, P237, DOI DOI 10.1145/945445.945468
   Engler Dawson R., 2001, Proceedings of the 18th ACM Symposium on Operating Systems Principles, P57
   HALLEM S, 2002, PLDI, P00069, DOI DOI 10.1145/512529.512539
   JANKOWITZ HT, 1988, COMPUT J, V31, P1, DOI 10.1093/comjnl/31.1.1
   JOHNSON JH, 1994, INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE, PROCEEDINGS, P120, DOI 10.1109/ICSM.1994.336783
   Kamiya T, 2002, IEEE T SOFTWARE ENG, V28, P654, DOI 10.1109/TSE.2002.1019480
   KONTOGIANNIS K, 1995, 3 WORKSH AI SOFTW EN
   Krinke J., 2001, P 8 WORK C REV ENG
   Li ZM, 2004, USENIX ASSOCIATION PROCEEDINGS OF THE SIXTH SYMPOSIUM ON OPERATING SYSTEMS DESIGN AND IMPLEMENTATION (OSDE '04), P289
   MANBER U, 1994, PROCEEDINGS OF THE WINTER 1994 USENIX CONFERENCE, P1
   Mayrand J, 1996, INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE, PROCEEDINGS, P244, DOI 10.1109/ICSM.1996.565012
   NETHERCOTE N, 2003, P 3 WORKSH RUNT VER
   Prechelt L, 2002, J UNIVERS COMPUT SCI, V8, P1016
   Savage S, 1997, ACM T COMPUT SYST, V15, P391, DOI 10.1145/269005.266641
   Schleimer Saul, 2003, P 2003 ACM SIGMOD IN, P76, DOI [10.1145/872757.872770, DOI 10.1145/872757.872770]
   Yan X., 2003, P SIAM INT C DAT MIN
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
NR 39
TC 319
Z9 387
U1 2
U2 12
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAR
PY 2006
VL 32
IS 3
BP 176
EP 192
DI 10.1109/TSE.2006.28
PG 17
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 033LC
UT WOS:000236848300003
DA 2024-07-18
ER

PT J
AU Verdickt, T
   Dhoedt, B
   Gielen, F
   Demeester, P
AF Verdickt, T
   Dhoedt, B
   Gielen, F
   Demeester, P
TI Automatic inclusion of middleware performance attributes into
   architectural UML software models
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE distributed software engineering tools and techniques; performance of
   systems : modeling techniques
ID SYSTEMS
AB Distributed systems often use a form of communication middleware to cope with different forms of heterogeneity, including geographical spreading of the components, different programming languages and platform architectures, etc. The middleware will, of course, impact the architecture and the performance of the system. This paper presents a model transformation framework to automatically include the architectural impact and the overhead incurred by using a middleware layer between several system components. Using this framework, architects can model the system in a middleware-independent fashion. Accurate, middleware-aware models can then be obtained automatically using a middleware model repository. The actual transformation algorithm will be presented in more detail. The resulting models can be used to obtain performance models of the system. From those performance models, early indications of the system performance can be extracted.
C1 Univ Ghent, IBBT, IMEC, Dept Informat Technol, B-9050 Ghent, Belgium.
C3 IMEC; Ghent University
RP Univ Ghent, IBBT, IMEC, Dept Informat Technol, Gaston Crommenlaan 8, B-9050 Ghent, Belgium.
EM tom.verdick@intec.ugent.be; bart.dhoedt@intec.ugent.be;
   frank.gielen@intec.ugent.be; piet.demeester@intec.ugent.be
RI Demeester, Piet/N-6619-2013; Dhoedt, Bart AGMH/K-5851-2015
OI Dhoedt, Bart AGMH/0000-0002-7271-7479
CR Chen SP, 2005, J SYST SOFTWARE, V74, P35, DOI 10.1016/j.jss.2003.05.005
   Ciardo G., 1990, Proceedings of the Third International Workshop on Petri Nets and Performance Models (PNPM89) (Cat. No.89TH0288-1), P142, DOI 10.1109/PNPM.1989.68548
   Cortellessa V, 2001, PERFORM EVALUATION, V45, P81, DOI 10.1016/S0166-5316(01)00036-0
   FRANKS G, 1995, PERFORM EVALUATION, V24, P117, DOI 10.1016/0166-5316(95)96869-T
   GU PG, 2002, P 3 INT WORKSH SOFTW, P227
   KAHKIPURO P, 2000, THESIS
   Lazowska Edward D, 1984, Quantitative system performance: computer system analysis using queueing network models
   MARSAN MA, 1984, ACM T COMPUT SYST, V2, P93, DOI 10.1145/190.191
   Miller I., 2003, MDA GUIDE VERSION 1
   *OBJ MAN GROUP, 2001, UN MOD LANG SPEC VER
   *OBJ MAN GROUP, 2003, UML PROF SCHED PERF
   *OBJ MAN GROUP, 2002, FORMAL020101 OMG
   Object Management Group, 2002, COMM OBJ REQ BROK AR
   Petriu D., 2000, Proceedings Second International Workshop on Software and Performance. WOSP2000, P189, DOI 10.1145/350391.350431
   Petriu DC, 2002, LECT NOTES COMPUT SC, V2324, P159
   SMITH CU, 1996, P COMP MAN GROUP DEC
   SMITH CU, 1998, P CMG C, P886
   Verdickt T, 2003, EUROMICRO CONF PROC, P117
   WOODSIDE M, 2004, P WORKSH SOFTW PERF
NR 19
TC 20
Z9 23
U1 0
U2 5
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD AUG
PY 2005
VL 31
IS 8
BP 695
EP 711
DI 10.1109/TSE.2005.88
PG 17
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 953OL
UT WOS:000231086500005
OA Green Published
DA 2024-07-18
ER

PT J
AU Andritsos, P
   Tzerpos, V
AF Andritsos, P
   Tzerpos, V
TI Information-theoretic software clustering
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article; Proceedings Paper
CT 10th Working Conference on Reverse Engineering (WCRE 2003)
CY NOV 13-16, 2003
CL VICTORIA, CANADA
SP Reengn Forum, IEEE Comp Soc, Tech Council Sofware Engn, Univ Victoria, Univ Alberta
DE reverse engineering; reengineering; architecture reconstruction;
   clustering; information theory
ID ARCHITECTURE; ALGORITHMS
AB The majority of the algorithms in the software clustering literature utilize structural information to decompose large software systems. Approaches using other attributes, such as file names or ownership information, have also demonstrated merit. At the same time, existing algorithms commonly deem all attributes of the software artifacts being clustered as equally important, a rather simplistic assumption. Moreover, no method that can assess the usefulness of a particular attribute for clustering purposes has been presented in the literature. In this paper, we present an approach that applies information theoretic techniques in the context of software clustering. Our approach allows for weighting schemes that reflect the importance of various attributes to be applied. We introduce LIMBO, a scalable hierarchical clustering algorithm based on the minimization of information loss when clustering a software system. We also present a method that can assess the usefulness of any nonstructural attribute in a software clustering context. We applied LIMBO to three large software systems in a number of experiments. The results indicate that this approach produces clusterings that come close to decompositions prepared by system experts. Experimental results were also used to validate our usefulness assessment method. Finally, we experimented with well-established weighting schemes from information retrieval, web search, and data clustering. We report results as to which weighting schemes show merit in the decomposition of software systems.
C1 Univ Toronto, Dept Comp Sci, Toronto, ON M5S 2E4, Canada.
   York Univ, Dept Comp Sci & Engn, N York, ON M3J 1P3, Canada.
C3 University of Toronto; York University - Canada
RP Univ Toronto, Dept Comp Sci, 40 St George St, Toronto, ON M5S 2E4, Canada.
EM periklis@cs.toronto.edu; bil@cs.yorku.ca
CR Andritsos P, 2001, PROG COMPREHEN, P157, DOI 10.1109/WPC.2001.921727
   ANDRITSOS P, 2004, P 9 INT C EXT DATABA
   [Anonymous], THESIS U STUTTGART
   [Anonymous], P 13 IR C ART INT CO
   [Anonymous], P 23 ANN INT ACM SIG
   [Anonymous], 1999, P ANN ALL C COMM CON
   [Anonymous], P 6 WORK C REV ENG
   Anquetil N., 2003, IEE Proceedings-Software, V150, P185, DOI 10.1049/ip-sen:20030581
   Anquetil N, 1999, J SOFTW MAINT-RES PR, V11, P201, DOI 10.1002/(SICI)1096-908X(199905/06)11:3<201::AID-SMR192>3.0.CO;2-1
   ANQUETIL N, 1997, P CASCON 1997, P184
   Bauer M, 2004, CSMR 2004: EIGHTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P3, DOI 10.1109/CSMR.2004.1281401
   Bowman I. T., 1998, PROC CTR ADV STUD C, P123
   BOWMAN IT, 1999, P 7 INT WORKSH PROGR
   BOWMAN IT, 1999, P 21 INT C SOFTW ENG
   Brin S, 1998, COMPUT NETWORKS ISDN, V30, P107, DOI 10.1016/S0169-7552(98)00110-X
   CHOI DW, 1990, ANNU REV NEUROSCI, V13, P171, DOI 10.1146/annurev.ne.13.030190.001131
   Cover Thomas A., 1991, ELEM INF THEORY, DOI 10.1002/047174882X
   GIBSON D, 1998, P C VER LARG DAT
   Godfrey M., 2000, P 2 INT S CONSTR SOF
   HUTCHENS DH, 1985, IEEE T SOFTWARE ENG, V11, P749, DOI 10.1109/TSE.1985.232524
   Koschke R, 2000, PROG COMPREHEN, P201, DOI 10.1109/WPC.2000.852494
   Lindig C, 1997, PROC INT CONF SOFTW, P349, DOI 10.1145/253228.253354
   MANCORIDIS S, 1999, P INT C SOFTW MAINT
   MERLO E, 1993, IJCAI-93, VOLS 1 AND 2, P1339
   Mitchell BS, 2001, PROC IEEE INT CONF S, P744, DOI 10.1109/ICSM.2001.972795
   Muller H. A., 1993, Journal of Software Maintenance: Research and Practice, V5, P181, DOI 10.1002/smr.4360050402
   Sartipi K, 2001, PROC IEEE INT CONF S, P408, DOI 10.1109/ICSM.2001.972754
   SCHWANKE RW, 1991, 13TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P83, DOI 10.1109/ICSE.1991.130626
   SCHWANKE RW, 1989, 2 INT WORKSH SOFTW C, P86
   Siff M, 1997, INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE, PROCEEDINGS, P170, DOI 10.1109/ICSM.1997.624243
   Slonim N, 2000, ADV NEUR IN, V12, P617
   SLONIM N, 2001, MONTHLY NOTICES ROYA, V323
   Tzerpos V, 2000, SEVENTH WORKING CONFERENCE ON REVERSE ENGINEERING - PROCEEDINGS, P258
   Tzerpos V., 1999, MOJO DISTANCE METRIC, P187
   Wen ZH, 2003, PROG COMPREHEN, P227
   XIAO C, IN PRESS P 9 EUR C S
   YATES RB, 1999, MODERN INFORMATION R
NR 37
TC 138
Z9 163
U1 0
U2 7
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD FEB
PY 2005
VL 31
IS 2
BP 150
EP 165
DI 10.1109/TSE.2005.25
PG 16
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Engineering
GA 899ZR
UT WOS:000227185100005
DA 2024-07-18
ER

PT J
AU Antoniol, G
   Cimitile, A
   Di Lucca, GA
   Di Penta, M
AF Antoniol, G
   Cimitile, A
   Di Lucca, GA
   Di Penta, M
TI Assessing staffing needs for a software maintenance project through
   queuing simulation
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE software maintenance staffing; software process management;
   discrete-event simulation; process modeling; process simulation; queuing
   theory; schedule estimation
AB We present an approach based on queuing theory and stochastic simulation to help planning, managing, and controlling the project staffing and the. resulting service level in distributed multiphase maintenance processes. Data from a Y2K massive maintenance intervention on a large COBOL/JCL financial software system were used to simulate and study different service center configurations for a geographically distributed software maintenance project. In particular, a monolithic configuration Corresponding to the customer's point-of-view and more fine-grained configurations, accounting for different process phases as well as for rework, were studied. The queuing theory and stochastic simulation provided a means to assess,staffing, evaluate service level, and assess the likelihood to meet the project deadline while executing the project. It turned out to be an effective staffing tool for managers, provided that it is complemented with other project-management tools, in order to prioritize activities, avoid conflicts, and check the availability of resources.
C1 Univ Sannio, Dept Engn, Res Ctr Software Technol, I-82100 Benevento, Italy.
C3 University of Sannio
RP Univ Sannio, Dept Engn, Res Ctr Software Technol, Via Traiano, I-82100 Benevento, Italy.
EM antoniol@ieee.org; cimitile@unisannio.it; dilucca@unisannio.it;
   dipenta@unisannio.it
RI Di Penta, Massimiliano/AAF-9656-2021
OI Di Penta, Massimiliano/0000-0002-0340-9747; Di Lucca,
   Giuseppe/0000-0003-3632-0156
CR Abdel-Hamid T., 1991, SOFTWARE PROJECT DYN
   ABDELHAMID TK, 1993, COMPUTER, V26, P20, DOI 10.1109/2.204681
   ABDELHAMID TK, 1989, IEEE T SOFTWARE ENG, V15, P109, DOI 10.1109/32.21738
   [Anonymous], 1995, MYTHICAL MAN MONTH
   Antoniol G, 2001, PROC IEEE INT CONF S, P510, DOI 10.1109/ICSM.2001.972764
   Arnold RobertS., 1993, Software Reengineering
   Banks Jerry, 1998, DISCRETE EVENT SYSTE
   Boehm BW., 2000, SOFTWARE COST ESTIMA, VII
   Boehm BW., 1981, Software Engineering Economics
   Box G.E., 1970, Time series, forecasting and control
   BRIAND LC, 1992, P IEEE INT C SOFTW M
   Daly J, 1995, INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE, 1995 PROCEEDINGS, P20, DOI 10.1109/ICSM.1995.526524
   DEMARCO T, 1982, CONTROLLING SOFTWARE
   Devore J.L., 1999, PROBABILITY STAT ENG, V5th
   Di Penta M, 2001, FIFTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P131, DOI 10.1109/CSMR.2001.914977
   GROSS D, 1998, FOUNDAMENTALS QUEUIN
   Hollander M., 2014, Nonparametric Statistical Methods, Solutions Manual, Vthird
   HOST M, 1999, PROSIM           JUL
   *IEEE, 1998, 1219 IEEE
   JONES C, 1999, MASS UPDATES SOFTWAR
   JORGENSEN M, 1995, IEEE T SOFTWARE ENG, V21, P674, DOI 10.1109/32.403791
   Kellner MI, 1999, J SYST SOFTWARE, V46, P91, DOI 10.1016/S0164-1212(99)00003-5
   Khoshgoftaar TM, 1996, INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE, PROCEEDINGS, P69, DOI 10.1109/ICSM.1996.564990
   Lynd EC, 1997, INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE, PROCEEDINGS, P206, DOI 10.1109/ICSM.1997.624247
   MARTIN RH, 2000, INT J SOFTWARE PROCE, V5, P147
   PAPAPANAGIOTAKIS G, 1994, J SOFTW MAINT-RES PR, V6, P73, DOI 10.1002/smr.4360060203
   Pearse T, 1995, INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE, 1995 PROCEEDINGS, P295, DOI 10.1109/ICSM.1995.526551
   PIGOSKI TM, 1994, INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE, PROCEEDINGS, P392, DOI 10.1109/ICSM.1994.336755
   Podnar I, 2001, FIFTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P192, DOI 10.1109/CSMR.2001.914986
   RAFFO DM, 2000, J SYSTEMS SOFTWARE, V47
   RAFFO DM, 2000, INT J SOFTWARE PROCE, V5, P159
   Ramaswamy R, 2000, IEEE SOFTWARE, V17, P90, DOI 10.1109/52.896255
   Shepperd M, 1997, IEEE T SOFTWARE ENG, V23, P736, DOI 10.1109/32.637387
   Stark GE, 1997, J SOFTW MAINT-RES PR, V9, P365, DOI 10.1002/(SICI)1096-908X(199711/12)9:6<365::AID-SMR160>3.0.CO;2-J
   Stark GE, 1996, INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE, PROCEEDINGS, P152, DOI 10.1109/ICSM.1996.565000
   STONE M, 1974, J R STAT SOC B, V36, P111, DOI 10.1111/j.2517-6161.1974.tb00994.x
   WIENEREHRLICH WK, 1984, IEEE T SOFTWARE ENG, V10, P376, DOI 10.1109/TSE.1984.5010250
NR 37
TC 44
Z9 49
U1 0
U2 9
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JAN
PY 2004
VL 30
IS 1
BP 43
EP 58
DI 10.1109/TSE.2004.1265735
PG 16
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 757QD
UT WOS:000187572200004
DA 2024-07-18
ER

PT J
AU Xie, YC
   Engler, D
AF Xie, YC
   Engler, D
TI Using redundancies to find errors
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article; Proceedings Paper
CT Conference on the Foundations of Software Engineering
CY NOV, 2002
CL CHARLESTON, SOUTH CAROLINA
SP ACM SIGSOFT
DE extensible compilation; error detection; program redundancy; software
   quality
ID PROGRAMS
AB Programmers generally attempt to perform useful work. If they performed an action, it was because they believed it served some purpose. Redundant operations violate this belief. However, in the past, redundant operations have been typically regarded as minor cosmetic problems rather than serious errors. This paper demonstrates that, in fact, many redundancies are as serious as traditional hard errors (such as race conditions or null pointer dereferences). We experimentally test this idea by writing and applying five redundancy checkers to a number of large open source projects, finding many errors. We then show that, even when redundancies are harmless, they strongly correlate with the presence of traditional hard errors. Finally, we show how flagging redundant operations gives a way to detect mistakes and omissions in specifications. For example, a locking specification that binds shared variables to their protecting locks can use redundancies to detect missing bindings by flagging critical sections that include no shared state.
C1 Stanford Univ, Comp Syst Lab, Stanford, CA 94305 USA.
C3 Stanford University
RP Xie, YC (corresponding author), Stanford Univ, Comp Syst Lab, 353 Serra Mall, Stanford, CA 94305 USA.
CR Aho A.V., 1986, COMPILERS PRINCIPLES
   AIKEN A, 1998, P 1 INT C TOOLS ALG
   [Anonymous], PLDI 92
   ASHCRAFT K, 2002, P IEEE S SEC PRIV MA
   BALL T, 2001, P SPIN 2001 WORKSH M
   Bush WR, 2000, SOFTWARE PRACT EXPER, V30, P775, DOI 10.1002/(SICI)1097-024X(200006)30:7<775::AID-SPE309>3.0.CO;2-H
   Casella G., 2002, STAT INFERENCE
   CHAN FT, 1987, SOFTWARE PRACT EXPER, V17, P227, DOI 10.1002/spe.4380170306
   Chou Andy, 2001, P 18 ACM S OP SYST P
   DeLine R., 2001, P ACM SIGPLAN 2001 C
   Engler D., 2003, SOSP 03
   Engler Dawson R., 2001, Proceedings of the 18th ACM Symposium on Operating Systems Principles, P57
   Evans D., 1994, P FSE 94, P87, DOI DOI 10.1145/193173.195297
   FLANAGAN C, 2002, P ACM SIGPLAN 2002 C, P234
   Freedman D., 1997, Statistics, V3rd
   HALLEM S, 2002, PLDI, P00069, DOI DOI 10.1145/512529.512539
   HUANG JC, 1979, IEEE T SOFTWARE ENG, V5, P226, DOI 10.1109/TSE.1979.234184
   Kennedy K., 1981, Program flow analysis. Theory and applications, P5
   Knoop J., 1994, SIGPLAN Notices, V29, P147, DOI 10.1145/773473.178256
   Morel E., 1981, Program flow analysis. Theory and applications, P160
   MOREL E, 1979, COMMUN ACM, V22, P96, DOI 10.1145/359060.359069
   Osterweil L. J., 1976, Software - Practice and Experience, V6, P473, DOI 10.1002/spe.4380060405
   Savage S, 1997, ACM T COMPUT SYST, V15, P391, DOI 10.1145/269005.266641
   STERLING N, 1993, PROCEEDINGS OF THE WINTER 1993 USENIX CONFERENCE, P97
   WAGNER D, 2000, P 2000 NETW DISTR SY
NR 25
TC 15
Z9 24
U1 1
U2 5
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD OCT
PY 2003
VL 29
IS 10
BP 915
EP 928
DI 10.1109/TSE.2003.1237172
PG 14
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Conference Proceedings Citation Index - Science (CPCI-S); Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 729CF
UT WOS:000185753100005
DA 2024-07-18
ER

PT J
AU Berling, T
   Runeson, P
AF Berling, T
   Runeson, P
TI Efficient evaluation of multifactor dependent system performance using
   fractional factorial design
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE fractional factorial design; performance of systems; performance
   evaluation; prototyping
ID COMBINATORIAL DESIGN
AB Performance of computer-based systems may depend on many different factors, internal and external. In order to design a system to have the desired performance or to validate that the system has the required performance, the effect of the influencing factors must be known. Common methods give no or little guidance on how to vary the factors during prototyping or validation. Varying the factors in all possible combinations would be too expensive and too time-consuming. This paper introduces a systematic approach to the prototyping and the validation of a system's performance, by treating the prototyping or validation as an experiment, in which the fractional factorial design methodology is commonly used. To show that this is possible, a case study evaluating the influencing factors of the false and real target rate of a radar system is described. Our findings show that prototyping and validation of system performance become structured and effective when using the fractional factorial design. The methodology enables planning, performance, structured analysis, and gives guidance for appropriate test cases. The methodology yields not only main factors, but also interacting factors. The effort is minimized for finding the results, due to the methodology. The case study shows that after 112 test Cases, of 1,024 possible, the knowledge gained was enough to draw conclusions on the effects and interactions of 10 factors. This is a reduction with a factor 5-9 compared to alternative methods.
C1 Ericsson Microwave Syst AB, SE-43149 Molndal, Sweden.
   Lund Univ, Dept Commun Syst, SE-22100 Lund, Sweden.
C3 AstraZeneca; Ericsson; Lund University
RP Ericsson Microwave Syst AB, SE-43149 Molndal, Sweden.
EM tomas.berling@emw.ericsson.se; per.runeson@telecom.lth.se
RI Runeson, Per/H-5113-2019
OI Runeson, Per/0000-0003-2795-4851
CR Ankenman BE, 1999, J QUAL TECHNOL, V31, P363
   [Anonymous], 2000, DESIGN ANAL EXPT
   [Anonymous], 1998, COMBINATORIAL THEORY
   [Anonymous], 2000, Simulation Modeling and Analysis
   Barton R.R., 1999, GRAPHICAL METHODS DE
   Barton RR, 2001, WSC'01: PROCEEDINGS OF THE 2001 WINTER SIMULATION CONFERENCE, VOLS 1 AND 2, P47, DOI 10.1109/WSC.2001.977245
   Berling T., 2000, Proceedings Seventh IEEE International Conference and Workshop on the Engineering of Computer Based Systems (ECBS 2000), P318, DOI 10.1109/ECBS.2000.839891
   Bingham TC, 1997, J QUAL TECHNOL, V29, P370, DOI 10.1080/00224065.1997.11979789
   Box G.E., 1978, STAT EXPT
   BROWNLIE R, 1992, AT&T TECH J, V71, P41, DOI 10.1002/j.1538-7305.1992.tb00164.x
   Cohen DM, 1997, IEEE T SOFTWARE ENG, V23, P437, DOI 10.1109/32.605761
   Cohen DM, 1996, IEEE SOFTWARE, V13, P83, DOI 10.1109/52.536462
   Donohue J.M., 1994, P 1994 WINT SIM C, P200
   EHRLICH WK, 1997, P 19 INT C SOFTW ENG, P205
   Fenton N. E., 1998, Software metrics: a rigorous and practical approach
   Kleijnen J.P.C., 1987, STAT TOOLS SIMULATIO
   MANDL R, 1985, COMMUN ACM, V28, P1054, DOI 10.1145/4372.4375
   Phadke M.S., 1995, QUALITY ENG USING RO
   Taguchi G., 1987, SYSTEM EXPT DESIGN, V1
   2001, ISO91261
NR 20
TC 21
Z9 23
U1 1
U2 8
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD SEP
PY 2003
VL 29
IS 9
BP 769
EP 781
DI 10.1109/TSE.2003.1232283
PG 13
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 719EY
UT WOS:000185191700001
DA 2024-07-18
ER

PT J
AU Shaw, SC
   Goldstein, M
   Munro, M
   Burd, E
AF Shaw, SC
   Goldstein, M
   Munro, M
   Burd, E
TI Moral dominance relations for program comprehension
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE directed graphical model; generalized conditional independence;
   dominance tree; program comprehension; reengineering; reuse candidate;
   reverse engineering; testing
ID LEGACY SYSTEMS; CONDITIONAL-INDEPENDENCE; IDENTIFYING OBJECTS
AB Dominance trees have been used as a means for reengineering legacy systems into potential reuse candidates. The dominance relation suggests the reuse candidates which are identified by strongly directly dominated subtrees. We review the approach and illustrate how the dominance tree may fail to show the relationship between the strongly directly dominated procedures and the directly dominated procedures. We introduce a relation of generalized conditional independence which strengthens the argument for the adoption of the potential reuse candidates suggested by the dominance tree and explains their relationship with the directly dominated vertices. This leads to an improved dominance tree, the moral dominance tree, which helps aid program comprehension available from the tree. The generalized conditional independence relation also identifies potential reuse candidates that are missed by the dominance relation.
C1 Univ Durham, Dept Math Sci, Sci Labs, Durham DH1 3LE, England.
   Univ Durham, Res Inst Software Evolut, Dept Comp Sci, Durham DH1 3LE, England.
C3 Durham University; Durham University
RP Univ Durham, Dept Math Sci, Sci Labs, South Rd, Durham DH1 3LE, England.
EM S.C.Shaw@durham.ac.uk; Michael.Goldstein@durham.ac.uk;
   malcolm.munro@durham.ac.uk; Liz.Burd@durham.ac.uk
RI Burd, Liz/B-4876-2011
OI Shaw, Simon/0009-0003-3214-747X
CR [Anonymous], IEEE STAND GLOSS SOF
   [Anonymous], 1977, Flow Analysis of Computer Programs
   Bobbio A, 2001, RELIAB ENG SYST SAFE, V71, P249, DOI 10.1016/S0951-8320(00)00077-6
   Burd E, 1996, PROCEEDINGS OF THE THIRD WORKING CONFERENCE ON REVERSE ENGINEERING, P189, DOI 10.1109/WCRE.1996.558903
   Burd E, 1997, PROG COMPREHEN, P130, DOI 10.1109/WPC.1997.601279
   Burd E, 1998, J SYST SOFTWARE, V44, P121, DOI 10.1016/S0164-1212(98)10049-3
   Burd E, 2000, ANN SOFTW ENG, V9, P193, DOI 10.1023/A:1018928825530
   Burd E., 1999, Proceedings IEEE International Conference on Software Maintenance - 1999 (ICSM'99). `Software Maintenance for Business Change' (Cat. No.99CB36360), P401, DOI 10.1109/ICSM.1999.792638
   Burd E, 1996, INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE, PROCEEDINGS, P238, DOI 10.1109/ICSM.1996.565011
   Canfora G, 2001, INFORM SOFTWARE TECH, V43, P401, DOI 10.1016/S0950-5849(01)00149-5
   Canfora G., 1994, Proceedings. IEEE Third Workshop on Program Comprehension (Cat. No.94TH06767), P30, DOI 10.1109/WPC.1994.341246
   CIMITILE A, 1995, J SYST SOFTWARE, V28, P117, DOI 10.1016/0164-1212(94)00049-S
   Cimitile A, 1997, PROG COMPREHEN, P138, DOI 10.1109/WPC.1997.601281
   Cimitile A, 1999, J SYST SOFTWARE, V44, P199, DOI 10.1016/S0164-1212(98)10057-2
   Cowell R. G., 1999, Probabilistic Networks and Expert Systems, V543
   DAWID AP, 1979, J ROY STAT SOC B MET, V41, P1
   DAWID AP, 1980, ANN STAT, V8, P598, DOI 10.1214/aos/1176345011
   Goldstein M., 1990, INFLUENCE DIAGRAMS B, P143
   Jensen FV, 1996, INTRO BAYESIAN NETWO
   Lauritzen S. L., 1996, GRAPHICAL MODELS, V17
   LAURITZEN SL, 1988, J ROY STAT SOC B MET, V50, P157
   LAURITZEN SL, 1990, NETWORKS, V20, P491, DOI 10.1002/net.3230200503
   MULLER HA, 1993, SOFTWARE MAINTENANCE, V5, P181
   Pearl J., 1988, PROBABILISTIC INFERE
   SMITH JQ, 1989, ANN STAT, V17, P654, DOI 10.1214/aos/1176347132
   SMITH JQ, 1990, INFLUENCE DIAGRAMS B, P89
   SPIEGELHALTER DJ, 1990, INFLUENCE DIAGRAMS B, P113
   Whittaker J, 1990, GRAPHICAL MODELS APP
   Wooff DA, 2002, IEEE T SOFTWARE ENG, V28, P510, DOI 10.1109/TSE.2002.1000453
NR 29
TC 6
Z9 6
U1 0
U2 2
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD SEP
PY 2003
VL 29
IS 9
BP 851
EP 863
DI 10.1109/TSE.2003.1232289
PG 13
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 719EY
UT WOS:000185191700007
OA Green Published, Green Accepted
DA 2024-07-18
ER

PT J
AU Kitchenham, B
   Pickard, LM
   Linkman, S
   Jones, PW
AF Kitchenham, B
   Pickard, LM
   Linkman, S
   Jones, PW
TI Modeling software bidding risks
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE software projects; bidding; risk; software cost estimation; Monte Carlo
   simulation; software bidding model; model validation; contingency costs
ID UNCERTAINTY; MANAGEMENT
AB We discuss a method of developing a software bidding model that allows users to visualize the uncertainty involved in pricing decisions and make appropriate bid/no bid decisions. We present a generic bidding model developed using the modeling method. The model elements were identified after a review of bidding research in software and other industries. We describe the method we developed to validate our model and report the main results of our model validation, including the results of applying the model to four bidding scenarios.
C1 Univ Keele, Dept Comp Sci, Keele ST5 5BG, Staffs, England.
   Univ Keele, Dept Math, Keele ST5 5BG, Staffs, England.
C3 Keele University; Keele University
RP Univ Keele, Dept Comp Sci, Keele ST5 5BG, Staffs, England.
EM barbara@cs.keele.ac.uk; lesley@cs.keele.ac.uk; steve@cs.keele.ac.uk;
   p.w.jones@maths.keele.ac.uk
RI Kitchenham, Barbara/AAL-4311-2020
OI Kitchenham, Barbara/0000-0002-6134-8460
CR ABDELHAMID TK, 1989, COMMUN ACM, V32, P1426, DOI 10.1145/76380.76383
   [Anonymous], 1998, Forecasting methods and applications
   Berry M, 2000, SEVENTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM - METRICS 2001, PROCEEDINGS, P222, DOI 10.1109/METRIC.2001.915531
   Boehm BW., 1981, Software Engineering Economics
   Carter B., 1994, Introducing RISKMAN methodology
   Dawood NN, 1996, ADV ENG SOFTW, V25, P225, DOI 10.1016/0965-9978(95)00091-7
   DEMARCO T, 1982, CONTROLLING SOFTWARE
   Easton FF, 1999, EUR J OPER RES, V116, P305, DOI 10.1016/S0377-2217(98)00101-5
   FAIRLEY R, 1994, IEEE SOFTWARE, V11, P57, DOI 10.1109/52.281716
   Fenton NE, 1999, IEEE T SOFTWARE ENG, V25, P675, DOI 10.1109/32.815326
   Jorgensen M, 2001, INFORM SOFTWARE TECH, V43, P939, DOI 10.1016/S0950-5849(01)00203-8
   JORGENSEN M, 2002, ACHIEVING QUALITY IN
   Kansala K, 1997, IEEE SOFTWARE, V14, P61, DOI 10.1109/52.589236
   KICHENHAM B, 2001, TRSE0103 KEEL U
   Kitchenham B, 1997, IEEE SOFTWARE, V14, P69, DOI 10.1109/52.589239
   KITCHENHAM B, 2002, P EMP ASS EV SOFTW E
   KITCHENHAM B, 2002, TRSE0201 KEEL U
   Kitchenham BA, 2002, IEEE T SOFTWARE ENG, V28, P721, DOI 10.1109/TSE.2002.1027796
   KOLLER G, 2000, RISK MODELLING DETER
   LINDLAND OI, 1994, IEEE SOFTWARE, V11, P42, DOI 10.1109/52.268955
   PICKARD L, IN PRESS ACM SURVEYS
   PICKARD L, 2000, TRSE0003 KEEL U
   PICKARD L, 2002, TRSE0202 KEEL U
   PICKARD L, 2002, TRSE0204 KEEL U
   POWELL AL, 2002, THESIS U YORK
   Stamelos I, 2001, INFORM SOFTWARE TECH, V43, P759, DOI 10.1016/S0950-5849(01)00183-5
NR 26
TC 32
Z9 37
U1 0
U2 4
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUN
PY 2003
VL 29
IS 6
BP 542
EP 554
DI 10.1109/TSE.2003.1205181
PG 13
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 685XV
UT WOS:000183290400005
DA 2024-07-18
ER

PT J
AU Sun, XY
   Chen, X
   Liu, YH
   Grundy, J
   Li, L
AF Sun, Xiaoyu
   Chen, Xiao
   Liu, Yonghui
   Grundy, John
   Li, Li
TI Taming Android Fragmentation Through Lightweight Crowdsourced Testing
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Index Terms-Software testing; crowd-based software enginee-ring; android
   fragmentation; compatibility issues
AB Android fragmentation refers to the overwhelming diversity of Android devices and OS versions. These lead to the impossibility of testing an app on every supported device, leaving a number of compatibility bugs scattered in the community and thereby resulting in poor user experiences. To mitigate this, our fellow researchers have designed various works to automatically detect such compatibility issues. However, the current state-of-the-art tools can only be used to detect specific kinds of compatibility issues (i.e., compatibility issues caused by API signature evolution), i.e., many other essential types of compatibility issues are still unrevealed. For example, customized OS versions on real devices and semantic changes of OS could lead to serious compatibility issues, which are non-trivial to be detected statically. To this end, we propose a novel, lightweight, crowdsourced testing approach, LazyCow, to fill this research gap and enable the possibility of taming Android fragmentation through crowdsourced efforts. Specifically, crowdsourced testing is an emerging alternative to conventional mobile testing mechanisms that allow developers to test their products on real devices to pinpoint platform-specific issues. Experimental results on thousands of test cases on real-world Android devices show that LazyCow is effective in automatically identifying and verifying API-induced compatibility issues. Also, after investigating the user experience through qualitative metrics, users' satisfaction provides strong evidence that LazyCow is useful and welcome in practice.
C1 [Sun, Xiaoyu] Australian Natl Univ, Sch Comp, Canberra, ACT 2601, Australia.
   [Chen, Xiao; Liu, Yonghui; Grundy, John] Monash Univ, Fac Informat Technol, Melbourne, Vic 3800, Australia.
   [Li, Li] Beihang Univ, Sch Software, Beijing 100191, Peoples R China.
C3 Australian National University; Monash University; Beihang University
RP Sun, XY (corresponding author), Australian Natl Univ, Sch Comp, Canberra, ACT 2601, Australia.
EM Xiaoyu.Sun.IEEE@gmail.com; xiao.chen@monash.edu; yonghui.liu@monash.edu;
   john.grundy@monash.edu; lilicoding@ieee.org
RI Li, Li/AAR-3316-2020; Sun, Xiaoyu/CAG-6501-2022; Grundy,
   John/I-6681-2012
OI Li, Li/0000-0003-2990-1614; Grundy, John/0000-0003-4928-7076; Sun,
   Xiaoyu/0000-0001-7434-0452
FU Australian Research Council (ARC) under Laureate Fellowship project
   [FL190100035]
FX This work was supported by the Australian Research Council (ARC) under a
   Laureate Fellowship project FL190100035.
CR [Anonymous], 2015, Android Fragmentation visualized
   [Anonymous], 2021, SOURCE CODE ANDROID
   [Anonymous], 2021, TINKER
   [Anonymous], 2021, Junit
   [Anonymous], 2022, ABOUT US
   [Anonymous], 2021, CTS SETUP STEPS
   [Anonymous], 2014, INT J STW ENG APPL
   Bao J., 2019, ANDROID APP HOOK PLU
   Brandom R., 2019, THERE ARE NOW 2 5 BI
   Cai HP, 2019, PROCEEDINGS OF THE 28TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA '19), P216, DOI 10.1145/3293882.3330564
   Chao Guo, 2020, ISSTA '20: Proceedings of the 29th ACM SIGSOFT International Symposium on Software Testing and Analysis, P545, DOI 10.1145/3395363.3404363
   Chen X, 2019, FRONT COMPUT SCI-CHI, V13, P943, DOI 10.1007/s11704-018-7308-5
   Cheng J, 2015, 9TH IEEE INTERNATIONAL SYMPOSIUM ON SERVICE-ORIENTED SYSTEM ENGINEERING (SOSE 2015), P302, DOI 10.1109/SOSE.2015.36
   Choudhary SR, 2015, IEEE INT CONF AUTOM, P429, DOI 10.1109/ASE.2015.89
   Compat, 2021, TEST SUITE
   Cotroneo D, 2020, EMPIR SOFTW ENG, V25, P3357, DOI 10.1007/s10664-020-09838-3
   Dan Han, 2012, 2012 19th Working Conference on Reverse Engineering (WCRE), P83, DOI 10.1109/WCRE.2012.18
   Elbaum S., 2004, Software Engineering Notes, V29, P65, DOI 10.1145/1013886.1007522
   Fraser Gordon, 2011, PROC 19 ACM SIGSOFT, P416, DOI 10.1145/2025113.2025179
   Gao RZ, 2019, EMPIR SOFTW ENG, V24, P537, DOI 10.1007/s10664-018-9618-5
   Github, 2016, ANDR HIDD API
   Glob, 2022, APP TESTING
   Grundy John, 2023, P 37 IEEE ACM INT C, DOI [10.1145/3551349.3561151, DOI 10.1145/3551349.3561151]
   Halpern M, 2015, INT SYM PERFORM ANAL, P215, DOI 10.1109/ISPASS.2015.7095807
   Ham HK, 2011, COMM COM INF SC, V257, P314
   He DJ, 2018, IEEE INT CONF AUTOM, P167, DOI 10.1145/3238147.3238185
   Hong Liang, 2019, 2019 IEEE 5th International Conference on Computer and Communications (ICCC), P526, DOI 10.1109/ICCC47050.2019.9064081
   Huang H., 2021, ARXIV
   Huang HX, 2018, IEEE INT CONF AUTOM, P532, DOI 10.1145/3238147.3238181
   Joorabchi Mona Erfani, 2013, 2013 ACM / IEEE International Symposium on Empirical Software Engineering and Measurement (ESEM), P15, DOI 10.1109/ESEM.2013.9
   Jun-fei Huang, 2014, 2014 2nd IEEE International Conference on Mobile Cloud Computing, Services and Engineering (MobileCloud), P85, DOI 10.1109/MobileCloud.2014.13
   Kaasila J., 2012, PROC 11 INT C MOBILE, P1
   Kamran M., 2016, INT J COMPUT SCI INF, V14, P992
   Ki T, 2019, PROC INT CONF SOFTW, P246, DOI 10.1109/ICSE.2019.00040
   Kong PF, 2019, IEEE T RELIAB, V68, P45, DOI 10.1109/TR.2018.2865733
   Lanui A, 2019, ASIA PAC SOFWR ENG, P158, DOI 10.1109/APSEC48747.2019.00030
   Li C, 2018, ASIA PAC SOFWR ENG, P278, DOI 10.1109/APSEC.2018.00042
   Li HY, 2019, PROCEEDINGS OF THE 28TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA '19), P390, DOI 10.1145/3293882.3339000
   Li L, 2018, ISSTA'18: PROCEEDINGS OF THE 27TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P153, DOI 10.1145/3213846.3213857
   Li L, 2017, INFORM SOFTWARE TECH, V88, P67, DOI 10.1016/j.infsof.2017.04.001
   Li L, 2016, PROC IEEE INT CONF S, P411, DOI 10.1109/ICSME.2016.35
   Liu CH, 2019, MULTIMED TOOLS APPL, V78, P4885, DOI 10.1007/s11042-018-6268-y
   Liu CH, 2016, 2016 INTERNATIONAL COMPUTER SYMPOSIUM (ICS), P611, DOI [10.1109/ICS.2016.124, 10.1109/ICS.2016.0125]
   Liu P., 2022, ARXIV
   Liu P, 2021, 2021 IEEE/ACM 43RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE (ICSE-SEIP 2021), P308, DOI 10.1109/ICSE-SEIP52600.2021.00040
   Liu P, 2020, IEEE WORK CONF MIN S, P548, DOI 10.1145/3379597.3387503
   Liu Pei, 2022, arXiv
   Liu YP, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P1013, DOI 10.1145/2568225.2568229
   Lu X, 2016, PROC INT CONF SOFTW, P3, DOI 10.1145/2884781.2884828
   Mahmud T., 2022, PROC IEEEACM 16 INT, P34
   Mahmud T, 2021, 2021 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2021), P480, DOI 10.1109/SANER50967.2021.00051
   Memon A, 2004, PROC INT CONF SOFTW, P459, DOI 10.1109/ICSE.2004.1317468
   Mutchler P, 2016, 2016 IEEE SYMPOSIUM ON SECURITY AND PRIVACY WORKSHOPS (SPW 2016), P204, DOI 10.1109/SPW.2016.31
   Naith Q, 2018, PROCEEDINGS OF THE 3RD INTERNATIONAL CONFERENCE ON CROWD SCIENCE AND ENGINEERING (ICCSE 2018), DOI 10.1145/3265689.3265690
   Nayebi F, 2012, 2012 25TH IEEE CANADIAN CONFERENCE ON ELECTRICAL & COMPUTER ENGINEERING (CCECE)
   Orso A., 2002, Software Engineering Notes, V27, P65, DOI 10.1145/566171.566182
   Park Je-Ho., 2013, 2013 INT C INFORM SC, P1, DOI DOI 10.1109/ICISA.2013.6579465
   Scalabrino Simone, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P288, DOI 10.1109/MSR.2019.00055
   Silva B, 2022, I C DEPEND SYS NETWO, P567, DOI 10.1109/DSN53405.2022.00062
   Stack OverFlow, 2018, NATIVE ERROR ANDROID
   Statcounter, 2021, MOB VEND MARK SHAR W
   Sun XY, 2021, ACM T SOFTW ENG METH, V30, DOI 10.1145/3440033
   Vilkomir S, 2018, SOFTWARE QUAL J, V26, P197, DOI 10.1007/s11219-017-9357-7
   Wei LL, 2020, IEEE T SOFTWARE ENG, V46, P1176, DOI 10.1109/TSE.2018.2876439
   Wei LL, 2019, PROC INT CONF SOFTW, P878, DOI 10.1109/ICSE.2019.00094
   Wei LL, 2016, IEEE INT CONF AUTOM, P226, DOI 10.1145/2970276.2970312
   Wikipedia, 2019, LIK SCAL
   Wikipedia, 2019, HOT SWAPP
   Wu GQ, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON WEB SERVICES (ICWS 2017), P253, DOI 10.1109/ICWS.2017.40
   Wu L., 2013, PROC 20 SIGSAC C COM, P623, DOI DOI 10.1145/2508859.2516728
   Xia H, 2020, PROC INT CONF SOFTW, P886, DOI 10.1145/3377811.3380357
   Zhang T, 2017, 2017 11TH IEEE SYMPOSIUM ON SERVICE-ORIENTED SYSTEM ENGINEERING (SOSE), P75, DOI 10.1109/SOSE.2017.28
   Zhang T, 2015, 9TH IEEE INTERNATIONAL SYMPOSIUM ON SERVICE-ORIENTED SYSTEM ENGINEERING (SOSE 2015), P179, DOI 10.1109/SOSE.2015.35
   Zhang ZY, 2019, 2019 IEEE/ACM 6TH INTERNATIONAL CONFERENCE ON MOBILE SOFTWARE ENGINEERING AND SYSTEMS (MOBILESOFT 2019), P40, DOI 10.1109/MOBILESoft.2019.00016
   Zhou XY, 2014, P IEEE S SECUR PRIV, P409, DOI 10.1109/SP.2014.33
NR 75
TC 2
Z9 2
U1 2
U2 6
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUN 1
PY 2023
VL 49
IS 6
BP 3599
EP 3615
DI 10.1109/TSE.2023.3266324
PG 17
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA J9KW5
UT WOS:001012752300014
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Khan, F
   David, I
   Varro, D
   McIntosh, S
AF Khan, Faizan
   David, Istvan
   Varro, Daniel
   McIntosh, Shane
TI Code Cloning in Smart Contracts on the Ethereum Platform: An Extended
   Replication Study
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Cloning; Codes; Smart contracts; Blockchains; Nanoelectromechanical
   systems; Computer languages; Syntactics; Code cloning; Ethereum;
   blockchain; empirical study
ID BLOCKCHAIN
AB Smart contracts are programs deployed on blockchains that run upon meeting predetermined conditions. Once deployed, smart contracts are immutable, thus, defects in the deployed code cannot be fixed. As a consequence, software engineering anti-patterns, such as code cloning, pose a threat to code quality and security if unnoticed before deployment. In this paper, we report on the cloning practices of the Ethereum blockchain platform by analyzing 33,073 smart contracts amounting to over 4MLOC. Prior work reported an unusually high 79.2% of code clones in Ethereum smart contracts. We replicate this study at the conceptual level, i.e., we answer the same research questions by employing different methods. In particular, we analyze clones at the granularity of functions instead of code files, thereby providing a more fine-grained estimate of the clone ratio. Furthermore, we analyze more complex clone types, allowing for a richer analysis of cloning cases. To achieve this finer granularity of cloning analysis, we rely on the NiCad clone detection tool and extend it with support for Solidity, the programming language of the Ethereum platform. Our analysis shows that most findings of the original study hold at the finer granularity of our study as well; but also sheds light on some differences, and contributes new findings. Most notably, we report a 30.13% overall clone ratio, out of which 27.03% are exact duplicates. Our findings motivate improving the reuse mechanisms of Solidity, and in a broader context, of programming languages used for the development of smart contracts. Tool builders and language engineers can use this paper in the design and development of such reuse mechanisms. Business stakeholders can use this paper to better assess the security risks and technical outlooks of blockchain platforms.
C1 [Khan, Faizan; Varro, Daniel] McGill Univ, Dept Elect & Comp Engn, Montreal H3A 0G4, PQ, Canada.
   [David, Istvan] Univ Montreal, Dept Comp Sci & Operat Res, Montreal H3T 1J4, PQ, Canada.
   [McIntosh, Shane] Univ Waterloo, David R Cheriton Sch Comp Sci, Waterloo N2L 3G1, ON, Canada.
C3 McGill University; Universite de Montreal; University of Waterloo
RP David, I (corresponding author), Univ Montreal, Dept Comp Sci & Operat Res, Montreal H3T 1J4, PQ, Canada.
EM faizan.khan3@mail.mcgill.ca; istvan.david@umontreal.ca;
   daniel.varro@mcgill.ca; shane.mcintosh@uwaterloo.ca
RI David, Istvan/KEI-9054-2024; Varro, Daniel/AAC-4234-2022
OI Varro, Daniel/0000-0002-8790-252X; David, Istvan/0000-0002-4870-8433
CR Agbo CC, 2019, HEALTHCARE-BASEL, V7, DOI 10.3390/healthcare7020056
   Alexopoulo C, 2019, PROCEEDINGS OF THE 52ND ANNUAL HAWAII INTERNATIONAL CONFERENCE ON SYSTEM SCIENCES, P3377
   [Anonymous], 2017, The parity wallet hack explained
   [Anonymous], 2008, PROC CAN C COMP SCI
   [Anonymous], 2007, Tech. Rep. 2007-541
   Bartoletti Massimo, 2017, Financial Cryptography and Data Security. FC 2017 International Workshops WAHC, BITCOIN, VOTING, WTSC, and TA. Revised Selected Papers: LNCS 10323, P494, DOI 10.1007/978-3-319-70278-0_31
   Baxter ID, 1998, PROC IEEE INT CONF S, P368, DOI 10.1109/ICSM.1998.738528
   Belchior R, 2021, ACM COMPUT SURV, V54, DOI 10.1145/3471140
   Beller M, 2015, INT C PROGRAM COMPRE, P240, DOI 10.1109/ICPC.2015.34
   Bellon S, 2007, IEEE T SOFTWARE ENG, V33, P577, DOI 10.1109/TSE.2007.70725
   Carver J.C., 2010, 1 INT WORKSHOP REPLI, P1
   Chatterji D, 2013, WORK CONF REVERSE EN, P112, DOI 10.1109/WCRE.2013.6671286
   CORDY JR, 1991, COMPUT LANG, V16, P97, DOI 10.1016/0096-0551(91)90019-6
   Cruzes DS, 2011, INFORM SOFTWARE TECH, V53, P440, DOI 10.1016/j.infsof.2011.01.004
   Dannen C., 2017, INTRO ETHEREUM SOLID, DOI [10.1007/978-1-4842-2535-6, DOI 10.1007/978-1-4842-2535-6]
   Dennis A. R., 2015, AIS T REPLICATION RE, V1, P1
   DORFMAN R, 1979, REV ECON STAT, V61, P146, DOI 10.2307/1924845
   Durieux T, 2020, PROC INT CONF SOFTW, P530, DOI 10.1145/3377811.3380364
   Gao ZP, 2019, PROC IEEE INT CONF S, P394, DOI 10.1109/ICSME.2019.00067
   Ghaleb Asem, 2020, ISSTA '20: Proceedings of the 29th ACM SIGSOFT International Symposium on Software Testing and Analysis, P415, DOI 10.1145/3395363.3397385
   Hasanain W. O. A., 2020, THESIS CARLETON U OT
   Hasanain W, 2018, 2018 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY AND SECURITY (QRS 2018), P482, DOI 10.1109/QRS.2018.00061
   Jiang LX, 2007, PROC INT CONF SOFTW, P96
   Juergens E, 2010, EUR CON SFTWR MTNCE, P78, DOI 10.1109/CSMR.2010.33
   Kapser CJ, 2008, EMPIR SOFTW ENG, V13, P645, DOI 10.1007/s10664-008-9076-6
   Kondo M, 2020, EMPIR SOFTW ENG, V25, P4617, DOI 10.1007/s10664-020-09852-5
   Koschke R, 2008, 2008 FRONTIERS OF SOFTWARE MAINTENANCE, P119, DOI 10.1109/FOSM.2008.4659255
   Kumar A., 2021, PROC IOP C SERIES MA, V1022
   Lague B, 1997, INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE, PROCEEDINGS, P314, DOI 10.1109/ICSM.1997.624264
   Li XQ, 2020, FUTURE GENER COMP SY, V107, P841, DOI 10.1016/j.future.2017.08.020
   Liu H, 2019, INT C PROGRAM COMPRE, P105, DOI 10.1109/ICPC.2019.00024
   Mehar MI, 2019, J CASES INF TECHNOL, V21, P19, DOI 10.4018/JCIT.2019010102
   Mondal M, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P50, DOI 10.1109/SANER.2018.8330196
   Parizi RM, 2018, LECT NOTES COMPUT SC, V10974, P75, DOI 10.1007/978-3-319-94478-4_6
   Rouhani S, 2019, IEEE ACCESS, V7, P50759, DOI 10.1109/ACCESS.2019.2911031
   Roy CK, 2014, 2014 SOFTWARE EVOLUTION WEEK - IEEE CONFERENCE ON SOFTWARE MAINTENANCE, REENGINEERING, AND REVERSE ENGINEERING (CSMR-WCRE), P18, DOI 10.1109/CSMR-WCRE.2014.6747168
   Roy CK, 2008, INT C PROGRAM COMPRE, P172, DOI 10.1109/ICPC.2008.41
   Roy CK, 2009, SCI COMPUT PROGRAM, V74, P470, DOI 10.1016/j.scico.2009.02.007
   Saha RK, 2013, IEEE WORK CONF MIN S, P139, DOI 10.1109/MSR.2013.6624021
   Scherer M., 2017, THESIS UMEA U UMEA
   SHANNON CE, 1948, BELL SYST TECH J, V27, P379, DOI 10.1002/j.1538-7305.1948.tb01338.x
   Swan Melanie, 2015, BLOCKCHAIN BLUEPRINT
   Treleaven P, 2017, COMPUTER, V50, P14, DOI 10.1109/MC.2017.3571047
   Tsantalis N, 2015, IEEE T SOFTWARE ENG, V41, P1055, DOI 10.1109/TSE.2015.2448531
   Tuzun E., 2012, 2012 Proceedings of the 6th International Workshop on Software Clones (IWSC 2012), P57, DOI 10.1109/IWSC.2012.6227867
   Ueda Y, 2002, EIGHTH IEEE SYMPOSIUM ON SOFTWARE METRICS, PROCEEDINGS, P67, DOI 10.1109/METRIC.2002.1011326
   van Bladel B, 2020, PROCEEDINGS OF THE 2020 IEEE 27TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER '20), P492, DOI [10.1109/SANER48275.2020.9054798, 10.1109/saner48275.2020.9054798]
   Van Rossum G., 2001, Python org, V1565, P28
   van Tonder R., 2016, 2016 IEEE 24 INT C P, P1
   Wang Tiantian, 2013, P 2013 9 JOINT M FDN, P455
   Wöhrer M, 2021, 2021 IEEE INTERNATIONAL CONFERENCE ON BLOCKCHAIN (BLOCKCHAIN 2021), P244, DOI 10.1109/Blockchain53845.2021.00040
NR 51
TC 8
Z9 8
U1 2
U2 2
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD APR 1
PY 2023
VL 49
IS 4
BP 2006
EP 2019
DI 10.1109/TSE.2022.3207428
PG 14
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA E9NM9
UT WOS:000978723600033
DA 2024-07-18
ER

PT J
AU Trubiani, C
   Pinciroli, R
   Biaggi, A
   Fontana, FA
AF Trubiani, Catia
   Pinciroli, Riccardo
   Biaggi, Andrea
   Fontana, Francesca Arcelli
TI Automated Detection of Software Performance Antipatterns in Java-Based
   Applications
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Codes; Software performance; Software; Java; Runtime; Monitoring; System
   performance; Dynamic analysis; Java-based applications; software
   performance antipatterns
AB The detection of performance issues in Java-based applications is not trivial since many factors concur to poor performance, and software engineers are not sufficiently supported for this task. The goal of this manuscript is the automated detection of performance problems in running systems to guarantee that no quality-based hinders prevent their successful usage. Starting from software performance antipatterns, i.e., bad practices (e.g., extensive interaction between software methods) expressing both the problem and the solution with the purpose of identifying shortcomings and promptly fixing them, we develop a framework that automatically detects seven software antipatterns capturing a variety of performance issues in Java-based applications. Our approach is applied to real-world case studies from different domains, and it captures four real-life performance issues of Hadoop and Cassandra that were not predicted by state-of-the-art approaches. As empirical evidence, we calculate the accuracy of the proposed detection rules, we show that code commits inducing and fixing real-life performance issues present interesting variations in the number of detected antipattern instances, and solving one of the detected antipatterns improves the system performance up to 50%.
C1 [Trubiani, Catia; Pinciroli, Riccardo] Gran Sasso Sci Inst, I-67100 Laquila, Italy.
   [Biaggi, Andrea; Fontana, Francesca Arcelli] Univ Milano Bicocca, I-20126 Milan, Italy.
C3 Gran Sasso Science Institute (GSSI); University of Milano-Bicocca
RP Trubiani, C (corresponding author), Gran Sasso Sci Inst, I-67100 Laquila, Italy.
EM catia.trubiani@gssi.it; riccardo.pinciroli@gssi.it;
   a.biaggi1@campus.unimib.it; francesca.arcelli@unimib.it
RI Fontana, Francesca Arcelli/K-4785-2016; PINCIROLI,
   RICCARDO/AAH-3575-2021
OI PINCIROLI, RICCARDO/0000-0003-3375-7256; Arcelli Fontana,
   Francesca/0000-0002-1195-530X; Trubiani, Catia/0000-0002-7675-6942
FU MUR PRIN project [SEDUCE 2017TWRCNB]
FX This work was supported by MUR PRIN project under Grant SEDUCE
   2017TWRCNB.~
CR Aleti A, 2013, IEEE T SOFTWARE ENG, V39, P658, DOI 10.1109/TSE.2012.64
   Ali A, 2020, PROCEEDINGS OF SC20: THE INTERNATIONAL CONFERENCE FOR HIGH PERFORMANCE COMPUTING, NETWORKING, STORAGE AND ANALYSIS (SC20), DOI 10.1109/SC41405.2020.00073
   Alshoaibi D, 2019, LECT NOTES COMPUT SC, V11664, P75, DOI 10.1007/978-3-030-27455-9_6
   [Anonymous], CLOUDSTORE SYNCHRONI
   [Anonymous], WEBGOAT 8 DELIBERATE
   [Anonymous], Train ticket: A benchmark microservice system
   [Anonymous], APACHE HADOOP
   [Anonymous], TESTDFSIO
   Bass Len, 2015, DevOps: A Software Architect's Perspective
   Brosig F., 2009, PROC INT C PERFORM E, P1
   Calinescu R, 2020, LECT NOTES COMPUT SC, V12076, P357, DOI 10.1007/978-3-030-45234-6_18
   Calinescu R, 2012, COMMUN ACM, V55, P69, DOI 10.1145/2330667.2330686
   Canfora G, 2019, IEEE T SOFTWARE ENG, V45, P1230, DOI 10.1109/TSE.2018.2834344
   Capilla R, 2012, REQUIR ENG, V17, P255, DOI 10.1007/s00766-011-0137-9
   Chen JF, 2022, IEEE T SOFTWARE ENG, V48, P1529, DOI 10.1109/TSE.2020.3023955
   Chen JF, 2017, PROC IEEE INT CONF S, P341, DOI 10.1109/ICSME.2017.13
   Chen TH, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P1001, DOI 10.1145/2568225.2568259
   Cortellessa V, 2014, SOFTW SYST MODEL, V13, P391, DOI 10.1007/s10270-012-0246-z
   David F, 2014, ACM SIGPLAN NOTICES, V49, P291, DOI [10.1145/2714064.2660210, 10.1145/2660193.2660210]
   De La Vara Jose Luis, 2011, SEKE, P438
   de Oliveira AB, 2017, IEEE INT CONF SOFTW, P103, DOI 10.1109/ICST.2017.17
   Dudney B., 2003, J2EE_AntiPatterns
   Feitosa D, 2019, INFORM SOFTWARE TECH, V105, P1, DOI 10.1016/j.infsof.2018.07.014
   Fontana FA, 2016, EMPIR SOFTW ENG, V21, P1143, DOI 10.1007/s10664-015-9378-4
   Fontana FA, 2013, PROC IEEE INT CONF S, P260, DOI 10.1109/ICSM.2013.37
   Galster M, 2012, INT CONF QUAL SOFTW, P167, DOI 10.1109/QSIC.2012.35
   Georges A, 2007, ACM SIGPLAN NOTICES, V42, P57, DOI 10.1145/1297105.1297033
   Hallal HH, 2004, QSIC 2004: PROCEEDINGS OF THE FOURTH INTERNATIONAL CONFERENCE ON QUALITY SOFTWARE, P258
   Harkema M., 2002, PROC INT WORKSHOP SO, P114
   Harman M, 2018, IEEE INT WORK C SO, P1, DOI 10.1109/SCAM.2018.00009
   Hautojrvi P., 1979, Experimentation in software engineering, V1ST, DOI [10.1007/978-3-642-81316-0, 10.1007/978-3-642-29044-2., DOI 10.1007/978-3-642-29044-2]
   Hecht G, 2014, INT CONF CLOUD COMP, P278, DOI 10.1109/CloudCom.2014.141
   Heger C, 2016, 2016 12TH EUROPEAN DEPENDABLE COMPUTING CONFERENCE (EDCC 2016), P185, DOI 10.1109/EDCC.2016.16
   Heyman J., Locust: An open source load testing tool
   Horky V, 2016, PROCEEDINGS OF THE 2016 ACM/SPEC INTERNATIONAL CONFERENCE ON PERFORMANCE ENGINEERING (ICPE'16), P275, DOI 10.1145/2851553.2851569
   Hovemeyer D, 2007, PASTE'07 PROCEEDINGS OF THE 2007 ACM SIGPLAN- SIGSOFT WORKSHOP ON PROGRAM ANALYSIS FOR SOFTWARE TOOLS & ENGINEERING, P9, DOI 10.1145/1251535.1251537
   Hunt C., 2011, Java performance
   Huttermann M., 2012, DevOps for Developers
   Jin GL, 2012, ACM SIGPLAN NOTICES, V47, P77, DOI 10.1145/2345156.2254075
   Nguyen K, 2016, PROCEEDINGS OF OSDI'16: 12TH USENIX SYMPOSIUM ON OPERATING SYSTEMS DESIGN AND IMPLEMENTATION, P349
   Koziolek H, 2010, PERFORM EVALUATION, V67, P634, DOI 10.1016/j.peva.2009.07.007
   Leite L, 2020, ACM COMPUT SURV, V52, DOI 10.1145/3359981
   Leitner P., 2017, P 8 ACMSPEC INT C PE, P373
   Li ZH, 2019, PROC INT CONF SOFTW, P152, DOI 10.1109/ICSE.2019.00032
   Liao LZ, 2022, IEEE T SOFTWARE ENG, V48, P4986, DOI 10.1109/TSE.2021.3131529
   Liu H, 2012, IEEE T SOFTWARE ENG, V38, P220, DOI 10.1109/TSE.2011.9
   Luo Q, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P25, DOI [10.1109/MSR.2016.013, 10.1145/2901739.2901765]
   Mariani L, 2011, IEEE T SOFTWARE ENG, V37, P486, DOI 10.1109/TSE.2010.93
   Mostafa S, 2017, PROCEEDINGS OF THE 26TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA'17), P23, DOI 10.1145/3092703.3092725
   Mytkowicz T, 2010, PLDI '10: PROCEEDINGS OF THE 2010 ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P187, DOI 10.1145/1806596.1806618
   Nistor A, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P902, DOI 10.1109/ICSE.2015.100
   OpenMRS, MED REC SYST
   Parsons T, 2008, J OBJECT TECHNOL, V7, P55, DOI 10.5381/jot.2008.7.3.a1
   Rabiser R, 2017, J SYST SOFTWARE, V125, P309, DOI 10.1016/j.jss.2016.12.034
   Reichelt DG, 2018, COMPANION OF THE 2018 ACM/SPEC INTERNATIONAL CONFERENCE ON PERFORMANCE ENGINEERING (ICPE '18), P127, DOI 10.1145/3185768.3186289
   Schulz H, 2021, PROCEEDINGS OF THE ACM/SPEC INTERNATIONAL CONFERENCE ON PERFORMANCE ENGINEERING (ICPE '21), P21, DOI 10.1145/3427921.3450240
   Shokri A, 2021, 2021 IEEE 18TH INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE (ICSA), P138, DOI 10.1109/ICSA51549.2021.00021
   Smith CU, 2020, PROCEEDINGS OF THE ACM/SPEC INTERNATIONAL CONFERENCE ON PERFORMANCE ENGINEERING (ICPE'20), P173, DOI 10.1145/3358960.3379138
   Smith Connie U., 2003, 29 INT C COMP MEAS G, P717
   Song LH, 2014, ACM SIGPLAN NOTICES, V49, P561, DOI [10.1145/2660193.2660234, 10.1145/2714064.2660234]
   Su PF, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P818, DOI 10.1145/3338906.3338923
   Syer MD, 2017, AUTOMAT SOFTW ENG, V24, P189, DOI 10.1007/s10515-016-0196-8
   Tate B., 2003, BITTER EJB
   Tate BruceA., 2002, BITTER JAVA
   TeaStore, MICR SERV REF TEST A
   The Apache Software Foundation, CASS STRESS
   The Apache Software Foundation, AP CASS OP SOURC SQL
   Thomé J, 2020, IEEE T SOFTWARE ENG, V46, P163, DOI 10.1109/TSE.2018.2844343
   Trubiani Catia, 2023, Zenodo, DOI 10.5281/ZENODO.5878953
   Trubiani C, 2018, INFORM SOFTWARE TECH, V95, P329, DOI 10.1016/j.infsof.2017.11.016
   Trubiani C, 2014, J SYST SOFTWARE, V95, P141, DOI 10.1016/j.jss.2014.03.081
   Van Hoorn A., 2012, P 3 ACM SPEC INT C P, P247, DOI DOI 10.1145/2188286.2188326
   von Kistowski J, 2018, I S MOD ANAL SIM COM, P223, DOI 10.1109/MASCOTS.2018.00030
   Voneva S., 2020, PROC EUR C SOFTW ARC, P228
   Waller Jan, 2015, ACM SIGSOFT Software Engineering Notes, V40, P1, DOI [10.1145/2735399, 10.1145/2735399.2735416]
   Walter B, 2018, J SYST SOFTWARE, V144, P1, DOI 10.1016/j.jss.2018.05.057
   Wert A, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P552, DOI 10.1109/ICSE.2013.6606601
   Yamashita A, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P682, DOI 10.1109/ICSE.2013.6606614
   YourKit GmbH, YOURKIT JAV PROF FEA
   YourKit GmbH, PROF OV RED AV
   YourKit GmbH, YOURKIT CUST
   Zhang HY, 2010, IEEE SOFTWARE, V27, P58, DOI 10.1109/MS.2010.66
   Zhao YT, 2020, IEEE 17TH INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE (ICSA 2020), P202, DOI 10.1109/ICSA47634.2020.00027
   Zhou X, 2021, IEEE T SOFTWARE ENG, V47, P243, DOI 10.1109/TSE.2018.2887384
   Zhou X, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P683, DOI 10.1145/3338906.3338961
NR 85
TC 1
Z9 1
U1 5
U2 10
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD APR 1
PY 2023
VL 49
IS 4
BP 2873
EP 2891
DI 10.1109/TSE.2023.3234321
PG 19
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA E9NM9
UT WOS:000978723600083
OA hybrid
DA 2024-07-18
ER

PT J
AU Wattanakriengkrai, S
   Wang, D
   Kula, RG
   Treude, C
   Thongtanunam, P
   Ishio, T
   Matsumoto, K
AF Wattanakriengkrai, Supatsara
   Wang, Dong
   Kula, Raula Gaikovina
   Treude, Christoph
   Thongtanunam, Patanamon
   Ishio, Takashi
   Matsumoto, Kenichi
TI Giving Back: Contributions Congruent to Library Dependency Changes in a
   Software Ecosystem
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Software ecosystem; dependency changes; npm ecosystem
ID SOCIOTECHNICAL CONGRUENCE; COORDINATION
AB The widespread adoption of third-party libraries for contemporary software development has led to the creation of large inter-dependency networks, where sustainability issues of a single library can have widespread network effects. Maintainers of these libraries are often overworked, relying on the contributions of volunteers to sustain these libraries. To understand these contributions, in this work, we leverage socio-technical techniques to introduce and formalise dependency-contribution congruence (DC congruence) at both ecosystem and library level, i.e., to understand the degree and origins of contributions congruent to dependency changes, analyze whether they contribute to library dormancy (i.e., a lack of activity), and investigate similarities between these congruent contributions compared to typical contributions. We conduct a large-scale empirical study to measure the DC congruence for the npm ecosystem using 1.7 million issues, 970 thousand pull requests (PRs), and over 5.3 million commits belonging to 107,242 npm libraries. We find that the most congruent contributions originate from contributors who can only submit (not commit) to both a client and a library. At the project level, we find that DC congruence shares an inverse relationship with the likelihood that a library becomes dormant. Specifically, a library is less likely to become dormant if the contributions are congruent with upgrading dependencies. Finally, by comparing the source code of contributions, we find statistical differences in the file path and added lines in the source code of congruent contributions when compared to typical contributions. Our work has implications to encourage dependency contributions, especially to support library maintainers in sustaining their projects.
C1 [Wattanakriengkrai, Supatsara; Kula, Raula Gaikovina; Ishio, Takashi; Matsumoto, Kenichi] Nara Inst Sci & Technol, Ikoma 6300192, Japan.
   [Wang, Dong] Kyushu Univ, Fukuoka 8190395, Japan.
   [Treude, Christoph; Thongtanunam, Patanamon] Univ Melbourne, Parkville, Vic 3010, Australia.
C3 Nara Institute of Science & Technology; Kyushu University; University of
   Melbourne
RP Wattanakriengkrai, S (corresponding author), Nara Inst Sci & Technol, Ikoma 6300192, Japan.
EM wattanakri.supatsara.ws3@is.naist.jp; wang.dong.vt8@is.naist.jp;
   raula-k@is.naist.jp; christoph.treude@unimelb.edu.au;
   patanamon.t@unimelb.edu.au; ishio@is.naist.jp; matumoto@is.naist.jp
RI Kula, Raula/AAD-6079-2019; Treude, Christoph/AAZ-6257-2021
OI Kula, Raula/0000-0003-2324-0608; MATSUMOTO, KENICHI/0000-0002-7418-9323;
   Ishio, Takashi/0000-0003-4106-699X; Wang, Dong/0000-0002-2004-0902;
   Treude, Christoph/0000-0002-6919-2149; Wattanakriengkrai,
   Supatsara/0000-0001-9978-9889
FU Japanese Society for the Promotion of Science (JSPS) KAKENHI [20K19774,
   20H05706]; Australian Research Council's Discovery Early Career
   Researcher Award (DECRA) [DE210101091]; Grants-in-Aid for Scientific
   Research [20H05706, 20K19774] Funding Source: KAKEN
FX This work was supported in part by the Japanese Society for the
   Promotion of Science (JSPS) KAKENHI under Grants 20K19774 and 20H05706.
   P. Thongtanunam was supported in part by Australian Research Council's
   Discovery Early Career Researcher Award (DECRA) funding scheme under
   Grant DE210101091.(Corresponding author: Supatsara Wattanakriengkrai.).
CR Abdalkareem R, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P385, DOI 10.1145/3106237.3106267
   Baltes S, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-021-10072-8
   Bavota G, 2015, EMPIR SOFTW ENG, V20, P1275, DOI 10.1007/s10664-014-9325-9
   Blincoe K, 2019, INFORM SOFTWARE TECH, V110, P174, DOI 10.1016/j.infsof.2019.03.005
   Brindescu C, 2020, EMPIR SOFTW ENG, V25, P562, DOI 10.1007/s10664-019-09735-4
   Cataldo M, 2013, IEEE T SOFTWARE ENG, V39, P343, DOI 10.1109/TSE.2012.32
   Cataldo M, 2008, ESEM'08: PROCEEDINGS OF THE 2008 ACM-IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, P2
   Cataldo Marcelo, 2006, P 2006 20 ANNIVERSAR, P353, DOI DOI 10.1145/1180875.1180929
   Chinthanet B, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-021-09951-x
   CLIFF N, 1993, PSYCHOL BULL, V114, P494, DOI 10.1037/0033-2909.114.3.494
   Coelho J, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P186, DOI 10.1145/3106237.3106246
   Cogo FR, 2021, IEEE T SOFTWARE ENG, V47, P2457, DOI 10.1109/TSE.2019.2952130
   Cohen J., 2013, APPL MULTIPLE REGRES
   Constantinou E, 2017, INNOV SYST SOFTW ENG, V13, P101, DOI 10.1007/s11334-017-0303-4
   Constantinou E, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P34, DOI 10.1109/SANER.2017.7884607
   Cox DR., 1984, Analysis of Survival Data
   Decan A, 2019, EMPIR SOFTW ENG, V24, P381, DOI 10.1007/s10664-017-9589-y
   Decan A, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P2, DOI 10.1109/SANER.2017.7884604
   Dey T, 2019, 15TH INTERNATIONAL CONFERENCE ON PREDICTIVE MODELS AND DATA ANALYTICS IN SOFTWARE ENGINEERING (PROMISE'19), P36, DOI 10.1145/3345629.3345634
   Dietrich Jens, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P349, DOI 10.1109/MSR.2019.00061
   Kula RG, 2017, Arxiv, DOI [arXiv:1709.04638, DOI 10.48550/ARXIV.1709.04638]
   German DM, 2013, EUR CON SFTWR MTNCE, P243, DOI 10.1109/CSMR.2013.33
   Gerosa M, 2021, PROC INT CONF SOFTW, P1046, DOI 10.1109/ICSE43902.2021.00098
   GitHub-Nice-registry/all-the-package-repos, 2017, NORM RESP URLS EV PA
   Golzadeh Mehdi, 2019, ESEC/FSE 2019: Proceedings of the 2019 27th ACM Joint Meeting on European Software Engineering Conference and Symposium on the Foundations of Software Engineering, P1226, DOI 10.1145/3338906.3342497
   Google, 2022, HER COM OUR OP SOURC
   GRAMBSCH PM, 1994, BIOMETRIKA, V81, P515
   Harrell FE, 1996, STAT MED, V15, P361, DOI 10.1002/(SICI)1097-0258(19960229)15:4<361::AID-SIM168>3.0.CO;2-4
   He H, 2021, PROCEEDINGS OF THE 29TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '21), P478, DOI 10.1145/3468264.3468571
   Ishio T, 2017, IEEE WORK CONF MIN S, P257, DOI 10.1109/MSR.2017.19
   Jiang J, 2019, J SYST SOFTWARE, V154, P196, DOI 10.1016/j.jss.2019.04.055
   Jiffriya M. A. C., 2014, 7th International Conference on Information and Automation for Sustainability (ICIAfS), P1, DOI 10.1109/ICIAFS.2014.7069593
   Kikas R, 2017, IEEE WORK CONF MIN S, P102, DOI 10.1109/MSR.2017.55
   Kononenko O, 2018, 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING - SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2018), P124, DOI 10.1145/3183519.3183542
   Kraemer HC, 2003, J AM ACAD CHILD PSY, V42, P1524, DOI 10.1097/00004583-200312000-00022
   KRUSKAL WH, 1952, J AM STAT ASSOC, V47, P583, DOI 10.1080/01621459.1952.10483441
   Kula Raula Gaikovina, 2018, Empirical Software Engineering, V23, P384, DOI 10.1007/s10664-017-9521-5
   Kwan I., 2009, WORKSH SOCIOTECHNICA, P1
   Kwan I, 2011, IEEE T SOFTWARE ENG, V37, P307, DOI 10.1109/TSE.2011.29
   Li J, 2012, PROCEEDINGS OF 2012 INTERNATIONAL SYMPOSIUM - WOMEN'S HUMAN RESOURCES DEVELOPMENT & MANAGEMENT, FEMALE SURVIVAL & DEVELOPMENT, P160, DOI 10.1109/ICSSP.2012.6225961
   Li ZX, 2021, J COMPUT SCI TECH-CH, V36, P191, DOI 10.1007/s11390-020-9935-1
   Mauerer W, 2022, IEEE T SOFTWARE ENG, V48, P3159, DOI 10.1109/TSE.2021.3082074
   Mirsaeedi E, 2020, PROC INT CONF SOFTW, P1183, DOI 10.1145/3377811.3380335
   Nassif M, 2017, PROC IEEE INT CONF S, P261, DOI 10.1109/ICSME.2017.64
   npm, 2014, US
   Portillo-Rodriguez J., 2013, AGENT ARCHITECTURE W
   Ragkhitwetsagul C, 2018, EMPIR SOFTW ENG, V23, P2464, DOI 10.1007/s10664-017-9564-7
   Robbes Romain, 2012, P ACM SIGSOFT 20 INT, P56
   Robles G, 2006, INT FED INFO PROC, V203, P273
   Romano J., 2006, P ANN M SO ASS I RES
   Samoladas I, 2010, INFORM SOFTWARE TECH, V52, P902, DOI 10.1016/j.infsof.2010.05.001
   Schober P, 2018, ANESTH ANALG, V126, P1763, DOI 10.1213/ANE.0000000000002864
   Stringer J, 2020, ASIA PAC SOFWR ENG, P228, DOI 10.1109/APSEC51365.2020.00031
   Thongtanunam P, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P141, DOI 10.1109/SANER.2015.7081824
   UKKONEN E, 1992, THEOR COMPUT SCI, V92, P191, DOI 10.1016/0304-3975(92)90143-4
   Valetto G., 2007, P IEEE 4 INT WORKSH, P25
   Valiev M, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P644, DOI 10.1145/3236024.3236062
   Wagstrom P., 2010, Academy of Management Annual Meeting Proceedings, P1, DOI [DOI 10.5465/AMBPP.2010.54500789, 10.5465/AMBPP.2010.54500789]
   Wang D, 2021, INFORM SOFTWARE TECH, V139, DOI 10.1016/j.infsof.2021.106637
   Wang D, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-021-09997-x
   Wang J, 2012, EUR MANAG J, V30, P352, DOI 10.1016/j.emj.2012.03.001
   Wang Y, 2020, PROC IEEE INT CONF S, P35, DOI 10.1109/ICSME46990.2020.00014
   Win Y, 2015, 2015 IEEE 29TH INTERNATIONAL CONFERENCE ON ADVANCED INFORMATION NETWORKING AND APPLICATIONS WORKSHOPS WAINA 2015, P558, DOI 10.1109/WAINA.2015.37
   Wittern E, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P351, DOI [10.1145/2901739.2901743, 10.1109/MSR.2016.043]
   Yu Y, 2016, INFORM SOFTWARE TECH, V74, P204, DOI 10.1016/j.infsof.2016.01.004
   Yue RR, 2017, PROC IEEE INT CONF S, P422, DOI 10.1109/ICSME.2017.16
   Zapata RE, 2018, PROC IEEE INT CONF S, P559, DOI 10.1109/ICSME.2018.00067
   Zerouali A, 2018, LECT NOTES COMPUT SC, V10826, P95, DOI 10.1007/978-3-319-90421-4_6
   Zhang WQ, 2019, J SYST SOFTWARE, V156, P21, DOI 10.1016/j.jss.2019.05.030
NR 69
TC 2
Z9 2
U1 1
U2 2
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD APR 1
PY 2023
VL 49
IS 4
BP 2566
EP 2579
DI 10.1109/TSE.2022.3225197
PG 14
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA E9NM9
UT WOS:000978723600066
OA hybrid, Green Submitted
DA 2024-07-18
ER

PT J
AU Hoffmann, M
   Mendez, D
   Fagerholm, F
   Luckhardt, A
AF Hoffmann, Marco
   Mendez, Daniel
   Fagerholm, Fabian
   Luckhardt, Anton
TI The Human Side of Software Engineering Teams: An Investigation of
   Contemporary Challenges
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Software engineering; human challenges; virtual teams; human values;
   diversity; survey research
ID LANGUAGE DIFFERENCES; DIVERSITY
AB Context: There have been numerous recent calls for research on the human side of software engineering and its impact on various factors such as productivity, developer happiness and project success. An analysis of which challenges in software engineering teams are most frequent is still missing. As teams are more international, it is more frequent that their members have different human values as well as different communication habits. Additionally, virtual team setups (working geographically separated, remote communication using digital tools and frequently changing team members) are increasingly prevalent. Objective: We aim to provide a starting point for a theory about contemporary human challenges in teams and their causes in software engineering. To do so, we look to establish a reusable set of challenges and start out by investigating the effect of team virtualization. Virtual teams often use digital communication and consist of members with different nationalities that may have more divergent human values due to cultural differences compared to single nationality teams. Method: We designed a survey instrument and asked respondents to assess the frequency and criticality of a set of challenges, separated in context & rdquo;within teams & rdquo; as well as & rdquo;between teams and clients & rdquo;, compiled from previous empirical work, blog posts, and pilot survey feedback. For the team challenges, we asked if mitigation measures were already in place to tackle the challenge. Respondents were also asked to provide information about their team setup. The survey included the Personal Value Questionnaire to measure Schwartz human values. Finally, respondents were asked if there were additional challenges at their workplace. The survey was first piloted and then distributed to professionals working in software engineering teams via social networking sites and personal business networks. Result: In this article, we report on the results obtained from 192 respondents. We present a set of challenges that takes the survey feedback into account and introduce two categories of challenges; & rdquo;interpersonal & rdquo; and & rdquo;intrapersonal & rdquo;. We found no evidence for links between human values and challenges. We found some significant links between the number of distinct nationalities in a team and certain challenges, with less frequent and critical challenges occurring if 2-3 different nationalities were present compared to a team having members of just one nationality or more than three. A higher degree of virtualization seems to increase the frequency of some human challenges, which warrants further research about how to improve working processes when teams work from remote or in a distributed fashion. Conclusion: We present a set of human challenges in software engineering that can be used for further research on causes and mitigation measures, which serves as our starting point for a theory about causes of contemporary human challenges in software engineering teams. We report on evidence that a higher degree of virtualization of teams leads to an increase of certain challenges. This warrants further research to gather more evidence and test countermeasures, such as whether the employment of virtual reality software incorporating facial expressions and movements can help establish a less detached way of communication.
C1 [Hoffmann, Marco] QualityMinds GmbH, Nurnberg, Germany.
   [Mendez, Daniel; Fagerholm, Fabian] Blekinge Inst Technol, Karlskrona, Sweden.
   [Mendez, Daniel; Luckhardt, Anton] Fortiss GmbH, D-80805 Munich, Germany.
   [Fagerholm, Fabian] Aalto Univ, Espoo 02150, Finland.
   [Luckhardt, Anton] Tech Univ Munich, Munich, Germany.
C3 Blekinge Institute Technology; fortiss; Aalto University; Technical
   University of Munich
RP Hoffmann, M (corresponding author), QualityMinds GmbH, Nurnberg, Germany.
EM marco@acureus.com; daniel.mendez@bth.se; fabian.fagerholm@aalto.fi;
   luckhardt@fortiss.org
RI Mendez, Daniel/ABA-4579-2021; Fagerholm, Fabian/B-1952-2015
OI Mendez, Daniel/0000-0003-0619-6027; Fagerholm,
   Fabian/0000-0002-7298-3021
CR Almomani MA, 2018, J SOFTW-EVOL PROC, V30, DOI 10.1002/smr.1953
   Alsanoosy T, 2018, PROCEEDINGS OF THE 13TH INTERNATIONAL CONFERENCE ON EVALUATION OF NOVEL APPROACHES TO SOFTWARE ENGINEERING, P159, DOI 10.5220/0006770701590168
   Aubé C, 2011, GROUP DYN-THEOR RES, V15, P357, DOI 10.1037/a0025400
   Batista E, 2019, WORK STYLE DIFFERENC
   Beecham S, 2013, 2013 IEEE 8TH INTERNATIONAL CONFERENCE ON GLOBAL SOFTWARE ENGINEERING (ICGSE 2013), P41, DOI 10.1109/ICGSE.2013.14
   Berg RW, 2012, BUS PROF COMMUN Q, V75, P404, DOI 10.1177/1080569912453480
   Borchers G, 2003, PROC INT CONF SOFTW, P540, DOI 10.1109/ICSE.2003.1201234
   Bortz J., 2010, Statistik fur Human- und Sozialwissenschaftler, P117
   Bradner E., 2003, PROC 36 ANN HAWAII I, p271a
   Brand A, 2015, LEARN PUBL, V28, P151, DOI 10.1087/20150211
   Brewer P, 2012, INT MARKET REV, V29, P673, DOI 10.1108/02651331211277991
   Capretz LF, 2014, IEEE SOFTWARE, V31, P104
   Casey V., 2004, PRACTICAL EXPERIENCE
   Casey V, 2009, INT CONF GLOBAL SOFT, P8, DOI 10.1109/ICGSE.2009.9
   Conboy K, 2011, IEEE SOFTWARE, V28, P48, DOI 10.1109/MS.2010.132
   De Paoli D, 2015, J CORP REAL ESTATE, V17, P63, DOI 10.1108/JCRE-08-2014-0020
   Fazli F, 2017, PROCEEDINGS OF THE 50TH ANNUAL HAWAII INTERNATIONAL CONFERENCE ON SYSTEM SCIENCES, P454
   Fernández DM, 2017, EMPIR SOFTW ENG, V22, P2298, DOI 10.1007/s10664-016-9451-7
   Flint M, 2016, 10 COMMON PROBLEMS P
   Foster D, 2018, TEACH TEACH, V24, P840, DOI 10.1080/13540602.2018.1486295
   Graziotin D, 2014, PEERJ, V2, DOI 10.7717/peerj.289
   Hammond K, 2016, YOUR SLOWDECISIONS A
   Han SJ, 2016, SMALL GR RES, V47, P351, DOI 10.1177/1046496416653480
   Henderson LS, 2018, INT J PROJ MANAG, V36, P954, DOI 10.1016/j.ijproman.2018.06.001
   Hofstede G., 2010, CULTURES ORG SOFTWAR
   HOLM S, 1979, SCAND J STAT, V6, P65
   House RJ., 2004, Culture, Leadership, and Organizations: The GLOBE Study of 62 Societies, DOI DOI 10.1177/0022022105278546
   Huang HY, 2007, SIGMIS CPR 2007: PROCEEDINGS OF THE 2007 ACM SIGMIS CPR CONFERENCE GLOBAL INFORMATION TECHNOLOGY WORKFORCE, P36
   Klitmoller A, 2015, PERS REV, V44, P270, DOI 10.1108/PR-11-2013-0205
   Leffingwell D., 2010, Agile Software Requirements: Lean Requirements Practices for Teams, Programs, and the Enterprise
   Lenberg P, 2015, 2015 IEEE/ACM 8TH INTERNATIONAL WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING CHASE 2015, P43, DOI 10.1109/CHASE.2015.13
   Lewis R. D., 1999, Cross Cultural Communication: A Visual Approach
   Liang TP, 2007, IND MANAGE DATA SYST, V107, P636, DOI 10.1108/02635570710750408
   Luckhardt A., 2019, ANAL HUMAN ERRORS RE
   MANN HB, 1947, ANN MATH STAT, V18, P50, DOI 10.1214/aoms/1177730491
   McSweeney B, 2013, INT MARKET REV, V30, P483, DOI 10.1108/IMR-04-2013-0082
   Menezes A, 2018, 2018 IEEE/ACM 11TH INTERNATIONAL WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING (CHASE), P45, DOI 10.1145/3195836.3195857
   Neeley T, 2015, HARVARD BUS REV, V93, P74
   Paasivaara M., 2010, 14578050 AALT U SCH
   Pudelko M, 2015, INT J HUM RESOUR MAN, V26, P127, DOI 10.1080/09585192.2015.964928
   Renee M, 2019, TOP 10 DIVERSITY ISS
   Schaufeli WB, 2018, ORGAN DYN, V47, P99, DOI 10.1016/j.orgdyn.2018.01.003
   Schwartz SH, 2012, J PERS SOC PSYCHOL, V103, P663, DOI 10.1037/a0029393
   SHAPIRO SS, 1965, BIOMETRIKA, V52, P591, DOI 10.1093/biomet/52.3-4.591
   Sherman L.E., 2013, Cyberpsychology: Journal of Psychosocial Research on Cyberspace, V7, DOI DOI 10.5817/CP2013-2-3
   Smite D, 2014, EMPIR SOFTW ENG, V19, P105, DOI 10.1007/s10664-012-9217-9
   Spichkova M, 2015, Arxiv, DOI arXiv:1503.03584
   Storey MA, 2021, IEEE T SOFTWARE ENG, V47, P2125, DOI 10.1109/TSE.2019.2944354
   Storey MA, 2020, EMPIR SOFTW ENG, V25, P4097, DOI 10.1007/s10664-020-09858-z
   Tenzer H, 2017, J WORLD BUS, V52, P45, DOI 10.1016/j.jwb.2016.11.002
   Tenzer H, 2015, LEADERSHIP QUART, V26, P606, DOI 10.1016/j.leaqua.2015.05.006
   Wagner S., 2008, Software Productivity Analysis and Cost Estimation (SPACE 2008), P1
   Wang YQ, 2017, ASIA PAC SOFWR ENG, P31, DOI 10.1109/APSEC.2017.9
   Wethington E, 2000, ADV GROUP, V17, P229
   Whittle J, 2021, IEEE SOFTWARE, V38, P106, DOI 10.1109/MS.2019.2956701
   Yugendhar A., 2017, INT J ENG MANAGE RES, V7, P194
NR 56
TC 4
Z9 6
U1 4
U2 7
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JAN 1
PY 2023
VL 49
IS 1
BP 211
EP 225
DI 10.1109/TSE.2022.3148539
PG 15
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA L1HD8
UT WOS:001020827200011
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Larsén, S
   Falleri, JR
   Baudry, B
   Monperrus, M
AF Larsen, Simon
   Falleri, Jean-Remy
   Baudry, Benoit
   Monperrus, Martin
TI Spork: Structured Merge for Java With Formatting Preservation
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Codes; Java; Merging; Syntactics; Semantics; Computer languages; Time
   complexity; Version control; structured merge
ID CODE; PRECISION; CONFLICTS
AB The highly parallel workflows of modern software development have made merging of source code a common activity for developers. The state of the practice is based on line-based merge, which is ubiquitously used with & quot;git merge & quot;. Line-based merge is however a generalized technique for any text that cannot leverage the structured nature of source code, making merge conflicts a common occurrence. As a remedy, research has proposed structured merge tools, which typically operate on abstract syntax trees instead of raw text. Structured merging greatly reduces the prevalence of merge conflicts but suffers from important limitations, the main ones being a tendency to alter the formatting of the merged code and being prone to excessive running times. In this paper, we present spork, a novel structured merge tool for java. spork is unique as it preserves formatting to a significantly greater degree than comparable state-of-the-art tools. spork is also overall faster than the state of the art, in particular significantly reducing worst-case running times in practice. We demonstrate these properties by replaying 1740 real-world file merges collected from 119 open-source projects, and further demonstrate several key differences between spork and the state of the art with in-depth case studies.
C1 [Larsen, Simon; Falleri, Jean-Remy; Baudry, Benoit; Monperrus, Martin] Univ Bordeaux, KTH Royal Inst Technol, Bordeaux INP, CNRS,LaBRI,IUF, Bordeaux, France.
C3 Universite de Bordeaux; Centre National de la Recherche Scientifique
   (CNRS)
RP Monperrus, M (corresponding author), Univ Bordeaux, KTH Royal Inst Technol, Bordeaux INP, CNRS,LaBRI,IUF, Bordeaux, France.
EM slarse@kth.se; jr.falleri@gmail.com; baudry@kth.se; monperrus@kth.se
RI Monperrus, Martin/I-3640-2012
OI Monperrus, Martin/0000-0003-3505-3383; Baudry,
   Benoit/0000-0002-4015-4640
CR Accioly P, 2018, IEEE WORK CONF MIN S, P576, DOI 10.1145/3196398.3196437
   Accioly P, 2018, EMPIR SOFTW ENG, V23, P2051, DOI 10.1007/s10664-017-9586-1
   Adzemovic H., 2020, THESIS KTH ROYAL I T
   Apel S., 2011, P 19 ACM SIGSOFT S 1, P190, DOI DOI 10.1145/2025113.2025141
   Apel S, 2012, IEEE INT CONF AUTOM, P120, DOI 10.1145/2351676.2351694
   Apel Sven., 2010, VAMOS, P13
   Apiwattanapong T, 2004, 19TH INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P2, DOI 10.1109/ASE.2004.1342719
   Asenov D, 2017, LECT NOTES COMPUT SC, V10202, P152, DOI 10.1007/978-3-662-54494-5_9
   Bird C, 2012, P ACM SIGSOFT 20 INT, P45
   Bird C, 2009, 2009 6TH IEEE INTERNATIONAL WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES, P1, DOI 10.1109/MSR.2009.5069475
   Brindescu C, 2020, PROC INT CONF SOFTW, P801, DOI 10.1145/3377811.3380344
   Brindescu C, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P322, DOI 10.1145/2568225.2568322
   Brun Y, 2013, IEEE T SOFTWARE ENG, V39, P1358, DOI 10.1109/TSE.2013.28
   Buse R.P., 2008, Proceedings of the 2008 International Symposium on Software Testing and Analysis, P121
   Cavalcanti G, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P1002, DOI 10.1109/ASE.2019.00097
   Cavalcanti G, 2017, P ACM PROGRAM LANG, V1, DOI 10.1145/3133883
   Cavalcanti G, 2015, INT SYMP EMP SOFTWAR, P267, DOI 10.1109/ESEM.2015.7321191
   Chawathe S. S., 1996, SIGMOD Record, V25, P493, DOI 10.1145/235968.233366
   Costa C, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P523, DOI 10.1145/2950290.2950339
   Dias K, 2020, INFORM SOFTWARE TECH, V121, DOI 10.1016/j.infsof.2020.106256
   Falleri Jean-Remy, 2014, P 29 ACM IEEE INT C, P313
   Fluri B, 2007, IEEE T SOFTWARE ENG, V33, P725, DOI 10.1109/TSE.2007.70731
   Ghiotto G, 2020, IEEE T SOFTWARE ENG, V46, P892, DOI 10.1109/TSE.2018.2871083
   Hattori L., 2010, 2010 32nd International Conference on Software Engineering (ICSE), P235, DOI 10.1145/1810295.1810339
   Ji T, 2020, PROC INT SYMP SOFTW, P70, DOI 10.1109/ISSRE5003.2020.00016
   Kasi BK, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P732, DOI 10.1109/ICSE.2013.6606619
   Kerby DS., 2014, Compr Psychol, V3, p11.IT.3.1, DOI DOI 10.2466/11.IT.3.1
   Lars~en S., 2020, THESIS KTH ROYAL I T
   Lessenich O., 2012, THESIS U PASSAU PASS
   Lessenich O, 2018, AUTOMAT SOFTW ENG, V25, P279, DOI 10.1007/s10515-017-0227-0
   Lessenich O, 2017, IEEE INT CONF AUTOM, P543, DOI 10.1109/ASE.2017.8115665
   Lessenich O, 2015, AUTOMAT SOFTW ENG, V22, P367, DOI 10.1007/s10515-014-0151-5
   Lindholm Tancred., 2004, Proceedings of the 2004 ACM Symposium on Document Engineering, Milwaukee, Wisconsin, USA, October 28-30, 2004, P1
   Mckee S, 2017, PROC IEEE INT CONF S, P467, DOI 10.1109/ICSME.2017.53
   Mens T, 2002, IEEE T SOFTWARE ENG, V28, P449, DOI 10.1109/TSE.2002.1000449
   Munaiah N, 2017, EMPIR SOFTW ENG, V22, P3219, DOI 10.1007/s10664-017-9512-6
   Muslu K, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P334, DOI 10.1145/2568225.2568284
   Nagappan M, 2013, 2013 9 JOINT M EUR S, P466, DOI [DOI 10.1145/2491411.2491415, 10.1145/2491411.2491415]
   Nelson N, 2019, EMPIR SOFTW ENG, V24, P2863, DOI 10.1007/s10664-018-9674-x
   Nieminen A, 2012, COLLABORATECOM, P540, DOI 10.4108/icst.collaboratecom.2012.250435
   Nishimura Y, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P661, DOI 10.1109/SANER.2016.46
   Owhadi-Kareshk M, 2019, INT SYMP EMP SOFTWAR, P363
   Pawlak R, 2016, SOFTWARE PRACT EXPER, V46, P1155, DOI 10.1002/spe.2346
   R_onnau S., 2009, PROC 18 ACM C INF KN, P2105
   Ronnau S, 2008, DOCENG'08: PROCEEDINGS OF THE EIGHTH ACM SYMPOSIUM ON DOCUMENT ENGINEERING, P52
   Sarma A, 2012, IEEE T SOFTWARE ENG, V38, P889, DOI 10.1109/TSE.2011.64
   Savchenko V, 2019, LECT NOTES COMPUT SC, V11964, P140, DOI 10.1007/978-3-030-37487-7_12
   Shen B, 2019, P ACM PROGRAM LANG, V3, DOI 10.1145/3360596
   Tavares AT, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P1014, DOI 10.1109/ASE.2019.00098
   Tomczak M., 2014, NEED REPORT EFFECT S, DOI DOI 10.1186/S13054-016-1208-6
   Vale G, 2022, IEEE T SOFTWARE ENG, V48, P4964, DOI 10.1109/TSE.2021.3130098
   Waddingtona D, 2007, SCI COMPUT PROGRAM, V68, P64, DOI 10.1016/j.scico.2006.04.010
   Westfechtel B., 1991, Proceedings of the 3rd International Workshop on Software Configuration Management, P68, DOI 10.1145/111062.111071
   Zhu FM, 2018, P ACM PROGRAM LANG, V2, DOI 10.1145/3276536
   Zhu FM, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: COMPANION PROCEEDINGS (ICSE-COMPANION 2019), P286, DOI 10.1109/ICSE-Companion.2019.00117
NR 55
TC 0
Z9 0
U1 3
U2 9
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JAN 1
PY 2023
VL 49
IS 1
BP 64
EP 83
DI 10.1109/TSE.2022.3143766
PG 20
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA L1HD8
UT WOS:001020827200004
OA Green Published, Green Submitted
DA 2024-07-18
ER

PT J
AU Aniche, M
   Treude, C
   Zaidman, A
AF Aniche, Mauricio
   Treude, Christoph
   Zaidman, Andy
TI How Developers Engineer Test Cases: An Observational Study
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE software engineering; software testing; developer testing
ID UNIT TEST; SOFTWARE; COVERAGE; QUALITY
AB One of the main challenges that developers face when testing their systems lies in engineering test cases that are good enough to reveal bugs. And while our body of knowledge on software testing and automated test case generation is already quite significant, in practice, developers are still the ones responsible for engineering test cases manually. Therefore, understanding the developers' thought- and decision-making processes while engineering test cases is a fundamental step in making developers better at testing software. In this paper, we observe 13 developers thinking-aloud while testing different real-world open-source methods, and use these observations to explain how developers engineer test cases. We then challenge and augment our main findings by surveying 72 software developers on their testing practices. We discuss our results from three different angles. First, we propose a general framework that explains how developers reason about testing. Second, we propose and describe in detail the three different overarching strategies that developers apply when testing. Third, we compare and relate our observations with the existing body of knowledge and propose future studies that would advance our knowledge on the topic.
C1 [Aniche, Mauricio; Zaidman, Andy] Delft Univ Technol, NL-2628 XE Delft, Netherlands.
   [Treude, Christoph] Univ Melbourne, Parkville, Vic 3010, Australia.
C3 Delft University of Technology; University of Melbourne
RP Aniche, M (corresponding author), Delft Univ Technol, NL-2628 XE Delft, Netherlands.
EM m.f.aniche@tudelft.nl; christoph.treude@unimelb.edu.au;
   a.e.zaidman@tudelft.nl
RI Treude, Christoph/AAZ-6257-2021
OI Treude, Christoph/0000-0002-6919-2149
FU Dutch Science Foundation NWO [VI.C.182.032]; Swiss National Science
   Foundation [200021M_205146]; Swiss National Science Foundation (SNF)
   [200021M_205146] Funding Source: Swiss National Science Foundation (SNF)
FX This work was supported in part by the Dutch Science Foundation
   NWOthrough the Vici "TestShift" project under Grant VI.C.182.032. We
   gratefullyacknowledge the support of the Swiss National Science
   Foundation throughthe SNF Projects under Grant 200021M_205146.
CR Aniche M., 2021, DEV ENG TEST CASES O, DOI [10.5281/zenodo.5171673, DOI 10.5281/ZENODO.5171673]
   Aniche M., 2015, TESTES AUTOMATIZADOS
   Aniche M., 2012, TEST DRIVEN DEV TEST, V2
   [Anonymous], 2009, Growing Object-Oriented Software, Guided by Tests
   [Anonymous], 2012, How Google Tests Software
   [Anonymous], 2016, Effective Debugging: 66 Specific Ways to Debug Software and Systems
   Athanasiou D, 2014, IEEE T SOFTWARE ENG, V40, P1100, DOI 10.1109/TSE.2014.2342227
   Bai Gina R., 2021, ITiCSE '21: Proceedings of the 26th ACM Conference on Innovation and Technology in Computer Science Education, P248, DOI 10.1145/3430665.3456368
   Barr ET, 2015, IEEE T SOFTWARE ENG, V41, P507, DOI 10.1109/TSE.2014.2372785
   Bavota G, 2015, EMPIR SOFTW ENG, V20, P1052, DOI 10.1007/s10664-014-9313-0
   Beck K., 2000, EXTREME PROGRAMMING
   Beck Kent L., 2003, Test Driven Development By Example
   Beller M, 2019, IEEE T SOFTWARE ENG, V45, P261, DOI 10.1109/TSE.2017.2776152
   Beller M, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P572, DOI 10.1145/3180155.3180175
   Beller M, 2017, IEEE WORK CONF MIN S, P356, DOI 10.1109/MSR.2017.62
   Beller M, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P179, DOI 10.1145/2786805.2786843
   Berner S, 2007, PROC INT CONF SOFTW, P612
   Bingchiang Jeng, 1994, ACM Transactions on Software Engineering and Methodology, V3, P254, DOI 10.1145/196092.193171
   Brandt C. E., EMPIR SOFTW ENG
   Çalikli G, 2013, SOFTWARE QUAL J, V21, P377, DOI 10.1007/s11219-012-9180-0
   Daka E, 2014, PROC INT SYMP SOFTW, P201, DOI 10.1109/ISSRE.2014.11
   Danglot B, 2019, J SYST SOFTWARE, V157, DOI 10.1016/j.jss.2019.110398
   Demeyer S., 2009, OBJECT ORIENTED REEN
   Detienne Francoise, 2001, Software design cognitive aspects.
   Digital.ai, 14 ANN STAT AG REP
   Du Bois B, 2005, NINTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P334, DOI 10.1109/CSMR.2005.25
   Elbaum S, 2001, PROC IEEE INT CONF S, P170, DOI 10.1109/ICSM.2001.972727
   Enoiu E, 2020, COMPANION OF THE 2020 IEEE 20TH INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY, AND SECURITY (QRS-C 2020), P272, DOI 10.1109/QRS-C51114.2020.00053
   Facebook, 2017, BUILD TEST FAC
   Feathers Michael, 2004, Working Effectively With Legacy Code: Work Effect Leg Code
   Fonteyn ME., 1993, Qualitative Health Research, V3, P430, DOI [DOI 10.1177/104973239300300403, 10.1177/104973239300300403]
   Fowler M., 2001, Software Development, V9, P28
   Fowler M., SOFTWARE TESTING GUI
   Fowler M., 1999, Refactoring: Improving the Design of Existing Code
   Fucci D, 2017, IEEE T SOFTWARE ENG, V43, P597, DOI 10.1109/TSE.2016.2616877
   Greiler M, 2012, PROC INT CONF SOFTW, P244, DOI 10.1109/ICSE.2012.6227189
   Habib A, 2019, Arxiv, DOI arXiv:1906.00307
   Hilton M, 2018, IEEE INT CONF AUTOM, P53, DOI 10.1145/3238147.3238183
   Hoffman D., 1999, Software Testing, Verification and Reliability, V9, P3, DOI 10.1002/(SICI)1099-1689(199903)9:1<3::AID-STVR169>3.0.CO;2-Z
   HOWDEN WE, 1985, IEEE SOFTWARE, V2, P6, DOI 10.1109/MS.1985.231754
   Hunt Andy., 2003, Pragmatic Unit Testing in Java with JUnit
   Hurdugaci V, 2012, EUR CON SFTWR MTNCE, P11, DOI 10.1109/CSMR.2012.12
   Itkonen J, 2013, IEEE T SOFTWARE ENG, V39, P707, DOI 10.1109/TSE.2012.55
   Itkonen J, 2009, INT SYMP EMP SOFTWAR, P495
   Kaner C., 2013, The Domain Testing Workbook
   Kashiwa Y, 2021, PROC IEEE INT CONF S, P171, DOI 10.1109/ICSME52107.2021.00022
   Kochhar PS, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE (ICSE-SEIP 2019), P61, DOI 10.1109/ICSE-SEIP.2019.00015
   Kochhar PS, 2015, IEEE ICST WORKSHOP
   Lawrance J, 2005, 2005 IEEE SYMPOSIUM ON VISUAL LANGUAGE AND HUMAN-CENTRIC COMPUTING, PROCEEDINGS, P53, DOI 10.1109/VLHCC.2005.44
   Legeard B., 2002, FME 2002: Formal Methods-Getting IT Right. International Symposium of Formal Methods Europe (Lecture Notes in Computer Science Volume 2391), P21
   Marsavina C, 2014, IEEE INT WORK C SO, P195, DOI 10.1109/SCAM.2014.28
   Martin RC, 2007, IEEE SOFTWARE, V24, P32, DOI 10.1109/MS.2007.85
   Mathur A.P., 2013, FDN SOFTWARE TESTING, V2nd
   McMinn P., 2011, 2011 IEEE Fourth International Conference on Software Testing, Verification and Validation Workshops (ICSTW), P153, DOI 10.1109/ICSTW.2011.100
   Meszaros G., 2007, Xunit test patterns: refactoring test code
   Meyer AN, 2021, IEEE T SOFTWARE ENG, V47, P863, DOI 10.1109/TSE.2019.2904957
   Meyer AN, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P19, DOI 10.1145/2635868.2635892
   Monperrus M., 2017, ARXIV
   Moonen L., 2008, Software Evolution, P173
   Moonen Leon, 2001, P 2 INT C EXTR PROGR
   Myers Glenford J., 2011, The Art of Software Testing
   OSTRAND TJ, 1988, COMMUN ACM, V31, P676, DOI 10.1145/62959.62964
   Pacheco C., 2007, OOPSLA 2007 COMPANIO, P815
   Page A., 2008, WE TEST SOFTWARE MIC
   Palomba F, 2018, PROC IEEE INT CONF S, P311, DOI 10.1109/ICSME.2018.00040
   Pezz M., 2008, Software Testing and Analysis: Process, Principles and Techniques
   Pham R, 2015, 7TH INTERNATIONAL WORKSHOP ON SOCIAL SOFTWARE ENGINEERING (SSE 2015), P1, DOI 10.1145/2804381.2804382
   Pham R, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P112, DOI 10.1109/ICSE.2013.6606557
   Planning S, 2002, The economic impacts of inadequate infrastructure for software testing
   Prado MP, 2018, J SYST SOFTWARE, V141, P66, DOI 10.1016/j.jss.2018.03.052
   Ralph P, 2021, Arxiv, DOI arXiv:2010.03525
   Reid SC, 1997, FOURTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM, PROCEEDINGS, P64, DOI 10.1109/METRIC.1997.637166
   RETTIG M, 1991, COMMUN ACM, V34, P25, DOI 10.1145/103167.103170
   Runeson P, 2006, IEEE SOFTWARE, V23, P22, DOI 10.1109/MS.2006.91
   Salman I, 2019, EMPIR SOFTW ENG, V24, P1727, DOI 10.1007/s10664-018-9668-8
   Samuel P, 2005, ASIAN TEST SYMPOSIUM, P94, DOI 10.1109/ATS.2005.31
   Santos A, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-020-09895-8
   Singer L., 2015, PROC INT SUMMER SCH, P124
   Song Yoonki., 2007, Proc. ETX at OOPSLA, P26
   Spadini D, 2019, EMPIR SOFTW ENG, V24, P1461, DOI 10.1007/s10664-018-9663-0
   Spadini D, 2018, PROC IEEE INT CONF S, P1, DOI 10.1109/ICSME.2018.00010
   Spadini D, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P677, DOI 10.1145/3180155.3180192
   Spadini D, 2017, IEEE WORK CONF MIN S, P402, DOI 10.1109/MSR.2017.61
   Tarlinder A, 2016, Developer testing: Building quality into software
   TEASLEY BE, 1994, J APPL PSYCHOL, V79, P142, DOI 10.1037/0021-9010.79.1.142
   Thummalapenta S, 2011, LECT NOTES COMPUT SC, V6603, P294, DOI 10.1007/978-3-642-19811-3_21
   Tillmann N, 2006, IEEE SOFTWARE, V23, P38, DOI 10.1109/MS.2006.117
   Trautsch F, 2020, J SYST SOFTWARE, V159, DOI 10.1016/j.jss.2019.110421
   Tufano M, 2016, IEEE INT CONF AUTOM, P4, DOI 10.1145/2970276.2970340
   Van Deursen A., 2002, PROC 3 INT C EXTREME, P71
   Van Rompaey B, 2009, EUR CON SFTWR MTNCE, P209, DOI 10.1109/CSMR.2009.39
   Vassallo C, 2017, PROC IEEE INT CONF S, P183, DOI 10.1109/ICSME.2017.67
   Vassallo C, 2016, PROC IEEE INT CONF S, P519, DOI 10.1109/ICSME.2016.72
   Vonken F., 2012, 2012 19th Working Conference on Reverse Engineering (WCRE), P29, DOI 10.1109/WCRE.2012.13
   Whittaker J. A., 2009, Exploratory software testing: tips, tricks, tours, and techniques to guide test design
   Whittaker JA, 2000, IEEE SOFTWARE, V17, P70, DOI 10.1109/52.819971
   Winters Titus, 2020, Software Engineering at Google
   Xie T., 2010, PROC FSESDP WORKSHOP, P415
   Yu CS, 2019, PROC IEEE INT CONF S, P501, DOI 10.1109/ICSME.2019.00084
   Zaidman Andy, 2008, 2008 First IEEE International Conference on Software Testing, Verification and Validation (ICST '08), P220, DOI 10.1109/ICST.2008.47
   Zaidman A, 2011, EMPIR SOFTW ENG, V16, P325, DOI 10.1007/s10664-010-9143-7
   Zhu H, 1997, ACM COMPUT SURV, V29, P366, DOI 10.1145/267580.267590
NR 102
TC 10
Z9 10
U1 2
U2 14
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD DEC 1
PY 2022
VL 48
IS 12
BP 4925
EP 4946
DI 10.1109/TSE.2021.3129889
PG 22
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 6X8ON
UT WOS:000896667600010
OA hybrid, Green Submitted
DA 2024-07-18
ER

PT J
AU Gong, LN
   Rajbahadur, GK
   Hassan, AE
   Jiang, SJ
AF Gong, Lina
   Rajbahadur, Gopi Krishnan
   Hassan, Ahmed E.
   Jiang, Shujuan
TI Revisiting the Impact of Dependency Network Metrics on Software Defect
   Prediction
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Dependency network metrics; code metrics; software defect prediction;
   social network analysis (SNA); within-project; cross-version;
   cross-project; effort-aware
ID STATIC CODE ATTRIBUTES; MEAN ABSOLUTE ERROR; FRAMEWORK; QUALITY; MODELS;
   COMPLEXITY; REGRESSION; SYSTEM; CHURN; TIME
AB Software dependency network metrics extracted from the dependency graph of the software modules by the application of Social Network Analysis (SNA metrics) have been shown to improve the performance of the Software Defect prediction (SDP) models. However, the relative effectiveness of these SNA metrics over code metrics in improving the performance of the SDP models has been widely debated with no clear consensus. Furthermore, some of the common SDP scenarios like predicting the number of defects in a module (Defect-count) in Cross-version and Cross-project SDP contexts remain unexplored. Such lack of clear directive on the effectiveness of SNA metrics when compared to the widely used code metrics prevents us from potentially building better performing SDP models. Therefore, through a case study of 9 open source software projects across 30 versions, we study the relative effectiveness of SNA metrics when compared to code metrics across 3 commonly used SDP contexts (Within-project, Cross-version and Cross-project) and scenarios (Defect-count, Defect-classification (classifying if a module is defective) and Effort-aware (ranking the defective modules w.r.t to the involved effort)). We find the SNA metrics by themselves or along with code metrics improve the performance of SDP models over just using code metrics on 5 out of the 9 studied SDP scenarios (three SDP scenarios across three SDP contexts). However, we note that in some cases the improvements afforded by considering SNA metrics over or alongside code metrics might only be marginal, whereas in other cases the improvements could be potentially large. Based on these findings we suggest that the future work should: consider SNA metrics alongside code metrics in their SDP models; as well as consider Ego metrics and Global metrics, the two different types of the SNA metrics separately when training SDP models as they behave differently.
C1 [Gong, Lina] China Univ Min & Technol, Sch Comp Sci & Technol, Xuzhou 221116, Jiangsu, Peoples R China.
   [Rajbahadur, Gopi Krishnan; Hassan, Ahmed E.] Queens Univ, Sch Comp, Software Anal & Intelligence Lab SAIL, Kingston, ON, Canada.
   [Jiang, Shujuan] China Univ Min & Technol, Sch Comp Sci & Technol, Xuzhou 221008, Peoples R China.
C3 China University of Mining & Technology; Queens University - Canada;
   China University of Mining & Technology
RP Rajbahadur, GK (corresponding author), Queens Univ, Sch Comp, Software Anal & Intelligence Lab SAIL, Kingston, ON, Canada.
EM gonglina@nuaa.edu.cn; krishnan@cs.queensu.ca; ahmed@cs.queensu.ca;
   shjjiang@cumt.edu.cn
FU Fundamental Research Funds for theCentral Universities [2019XKQYMS84]
FX This work was supported in part by the Fundamental Research Funds for
   theCentral Universities under Grant 2019XKQYMS84
CR Amasaki S, 2020, EMPIR SOFTW ENG, V25, P1573, DOI 10.1007/s10664-019-09777-8
   Andreou AS, 2016, J SYST SOFTWARE, V122, P72, DOI 10.1016/j.jss.2016.09.001
   [Anonymous], 2006, ISESE '06: Proceedings of the 5th International Symposium on Empirical Software Engineering. Volume II: Short Papers and Posters, DOI DOI 10.1145/1159733.1159739.
   [Anonymous], 2008, Proceedings of the 4th International Workshop on Predictor Models in Software Engineering, PROMISE '08
   Arar ÖF, 2017, APPL SOFT COMPUT, V59, P197, DOI 10.1016/j.asoc.2017.05.043
   Arisholm E, 2010, J SYST SOFTWARE, V83, P2, DOI 10.1016/j.jss.2009.06.055
   Armstrong RA, 2014, OPHTHAL PHYSL OPT, V34, P502, DOI 10.1111/opo.12131
   Assar S, 2016, EMPIR SOFTW ENG, V21, P1437, DOI 10.1007/s10664-015-9391-7
   Basili VR, 1996, IEEE T SOFTWARE ENG, V22, P751, DOI 10.1109/32.544352
   Bettenburg Nicolas, 2010, Proceedings of the 18th IEEE International Conference on Program Comprehension (ICPC 2010), P124, DOI 10.1109/ICPC.2010.46
   Bird C., 2011, P 19 ACM SIGSOFT S 1, P4, DOI DOI 10.1145/2025113.2025119
   Briand LC, 2000, J SYST SOFTWARE, V51, P245, DOI 10.1016/S0164-1212(99)00102-8
   Cameron AC, 1997, J ECONOMETRICS, V77, P329
   Chai T, 2014, GEOSCI MODEL DEV, V7, P1247, DOI 10.5194/gmd-7-1247-2014
   Chen Y, 2006, LECT NOTES COMPUT SC, V4318, P153
   Chicco D, 2020, BMC GENOMICS, V21, DOI 10.1186/s12864-019-6413-7
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   Cruz AEC, 2009, INT SYMP EMP SOFTWAR, P461
   D'Ambros M, 2012, EMPIR SOFTW ENG, V17, P531, DOI 10.1007/s10664-011-9173-9
   D'Ambros M, 2009, WORK CONF REVERSE EN, P135, DOI 10.1109/WCRE.2009.19
   da Costa DA, 2017, IEEE T SOFTWARE ENG, V43, P641, DOI 10.1109/TSE.2016.2616306
   Demsar J, 2006, J MACH LEARN RES, V7, P1
   Efron B, 2000, J AM STAT ASSOC, V95, P1293, DOI 10.2307/2669773
   Fangjun Wu, 2014, Journal of Software, V9, P541, DOI 10.4304/jsw.9.3.541-552
   Friedman M, 1940, ANN MATH STAT, V11, P86, DOI 10.1214/aoms/1177731944
   Ghotra B, 2017, IEEE WORK CONF MIN S, P146, DOI 10.1109/MSR.2017.18
   Ghotra B, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P789, DOI 10.1109/ICSE.2015.91
   Graves TL, 2000, IEEE T SOFTWARE ENG, V26, P653, DOI 10.1109/32.859533
   Gunes Koru A., 2005, P 2005 WORKSHOP PRED, P1
   Gupta S, 2017, COMPUTING, V99, P889, DOI 10.1007/s00607-016-0538-1
   Hall T, 2012, IEEE T SOFTWARE ENG, V38, P1276, DOI 10.1109/TSE.2011.103
   Halstead M. H., 1977, ELEMENTS SOFTWARE SC
   Harrell FE, 2015, SPRINGER SER STAT, P1, DOI 10.1007/978-3-319-19425-7_1
   Hassan AE, 2009, PROC INT CONF SOFTW, P78, DOI 10.1109/ICSE.2009.5070510
   Hautojrvi P., 1979, Experimentation in software engineering, V1ST, DOI [10.1007/978-3-642-81316-0, 10.1007/978-3-642-29044-2., DOI 10.1007/978-3-642-29044-2]
   Herbold S, 2021, IEEE T SOFTWARE ENG, V47, P2617, DOI 10.1109/TSE.2019.2957794
   Herbold S, 2019, IEEE T SOFTWARE ENG, V45, P632, DOI 10.1109/TSE.2018.2790413
   Herbold S, 2018, IEEE T SOFTWARE ENG, V44, P811, DOI 10.1109/TSE.2017.2724538
   Hosseini S, 2019, IEEE T SOFTWARE ENG, V45, P111, DOI 10.1109/TSE.2017.2770124
   Jiang T, 2013, IEEE INT CONF AUTOM, P279, DOI 10.1109/ASE.2013.6693087
   Jiarpakdee J, 2018, PROC IEEE INT CONF S, P92, DOI 10.1109/ICSME.2018.00018
   Kamei Y, 2013, IEEE T SOFTWARE ENG, V39, P757, DOI 10.1109/TSE.2012.70
   Kitchenham B. A., 2001, IEE Proceedings-Software, V148, P81, DOI 10.1049/ip-sen:20010506
   Klotins E, 2019, EMPIR SOFTW ENG, V24, P68, DOI 10.1007/s10664-018-9620-y
   Kocaguneli E, 2013, IEEE T SOFTWARE ENG, V39, P1040, DOI 10.1109/TSE.2012.88
   Langdon WB, 2016, INFORM SOFTWARE TECH, V73, P16, DOI 10.1016/j.infsof.2016.01.003
   Lessmann S, 2008, IEEE T SOFTWARE ENG, V34, P485, DOI 10.1109/TSE.2008.35
   Li ZQ, 2019, IEEE T SOFTWARE ENG, V45, P391, DOI 10.1109/TSE.2017.2780222
   Liu JP, 2017, INT SYMP EMP SOFTWAR, P11, DOI 10.1109/ESEM.2017.8
   Ma WWY, 2016, INFORM SOFTWARE TECH, V69, P50, DOI 10.1016/j.infsof.2015.09.001
   Madeyski L, 2015, SOFTWARE QUAL J, V23, P393, DOI 10.1007/s11219-014-9241-7
   McCabe T. J., 1976, IEEE Transactions on Software Engineering, VSE-2, P308, DOI 10.1109/TSE.1976.233837
   Meneely A., 2008, P 16 ACM SIGSOFT INT, P13, DOI DOI 10.1145/1453101.1453106
   Menzies T, 2007, IEEE T SOFTWARE ENG, V33, P2, DOI 10.1109/TSE.2007.256941
   Moser R, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P181, DOI 10.1145/1368088.1368114
   Myrtveit I, 2005, IEEE T SOFTWARE ENG, V31, P380, DOI 10.1109/TSE.2005.58
   Nagappan N, 2005, PROC INT CONF SOFTW, P284, DOI 10.1145/1062455.1062514
   Nagappan Nachiappan, 2010, Proceedings of the 2010 IEEE 21st International Symposium on Software Reliability Engineering (ISSRE 2010), P309, DOI 10.1109/ISSRE.2010.25
   Nagappan Nachiappan, 2007, 2007 First International Symposium on Empirical Software Engineering and Measurement, P364
   Nagappan N., 2006, 28th International Conference on Software Engineering Proceedings, P452, DOI 10.1145/1134285.1134349
   Nagappan N, 2006, ISSRE 2006:17TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P62
   NEMENYI P, 1962, BIOMETRICS, V18, P263
   Nguyen THD, 2010, PROC IEEE INT CONF S
   Okutan A, 2014, EMPIR SOFTW ENG, V19, P154, DOI 10.1007/s10664-012-9218-8
   Ostrand TJ., 2004, Proceedings of the 2004 ACM SIGSOFT International Symposium on Software Testing and Analysis, ISSTA '04, V29, P86, DOI [DOI 10.1145/1013886.1007524, 10.1145/1013886.1007524]
   Palomba F, 2019, IEEE T SOFTWARE ENG, V45, P194, DOI 10.1109/TSE.2017.2770122
   Peters F, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P801, DOI 10.1109/ICSE.2015.92
   Peters F, 2013, IEEE T SOFTWARE ENG, V39, P1054, DOI 10.1109/TSE.2013.6
   Prateek S, 2013, ASIA PAC SOFWR ENG, P124, DOI 10.1109/APSEC.2013.27
   Premraj R, 2011, INT SYMP EMP SOFTWAR, P215, DOI 10.1109/ESEM.2011.30
   Rahman F, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P432, DOI 10.1109/ICSE.2013.6606589
   Rajbahadur GK, 2021, IEEE T SOFTWARE ENG, V47, P1414, DOI 10.1109/TSE.2019.2924371
   Rajbahadur GK, 2017, IEEE WORK CONF MIN S, P135, DOI 10.1109/MSR.2017.4
   Rathore SS, 2017, SOFT COMPUT, V21, P7417, DOI 10.1007/s00500-016-2284-x
   Rathore SS, 2017, EXPERT SYST APPL, V82, P357, DOI 10.1016/j.eswa.2017.04.014
   Shepperd M, 2014, IEEE T SOFTWARE ENG, V40, P603, DOI 10.1109/TSE.2014.2322358
   Shepperd M, 2013, IEEE T SOFTWARE ENG, V39, P1208, DOI 10.1109/TSE.2013.11
   Shepperd M, 2012, INFORM SOFTWARE TECH, V54, P820, DOI 10.1016/j.infsof.2011.12.008
   Shin Y, 2012, EMPIR SOFTW ENG, V17, P390, DOI 10.1007/s10664-011-9165-9
   Shin Y, 2011, IEEE T SOFTWARE ENG, V37, P772, DOI 10.1109/TSE.2010.81
   Shin Y, 2009, 2009 6TH IEEE INTERNATIONAL WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES, P61, DOI 10.1109/MSR.2009.5069481
   Sliwerski J., 2005, ACM SIGSOFT SOFTWARE, P1, DOI DOI 10.1145/1082983.1083147
   Sohn J, 2021, IEEE T SOFTWARE ENG, V47, P1605, DOI 10.1109/TSE.2019.2930977
   Song QB, 2019, IEEE T SOFTWARE ENG, V45, P1253, DOI 10.1109/TSE.2018.2836442
   Song QB, 2011, IEEE T SOFTWARE ENG, V37, P356, DOI 10.1109/TSE.2010.90
   Steyerberg EW, 2016, J CLIN EPIDEMIOL, V69, P245, DOI 10.1016/j.jclinepi.2015.04.005
   Tantithamthavorn C, 2019, IEEE T SOFTWARE ENG, V45, P683, DOI 10.1109/TSE.2018.2794977
   Tantithamthavorn C, 2017, IEEE T SOFTWARE ENG, V43, P1, DOI 10.1109/TSE.2016.2584050
   Tantithamthavorn C, 2016, 2016 IEEE/ACM 38TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING COMPANION (ICSE-C), P867, DOI 10.1145/2889160.2889256
   Tantithamthavorn C, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P812, DOI 10.1109/ICSE.2015.93
   Tosun Aye, 2009, P 5 INT C PRED MOD S
   Turhan B, 2008, PROCEEDINGS OF THE 34TH EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS, P191, DOI 10.1109/SEAA.2008.52
   WAGNER CH, 1982, AM STAT, V36, P46, DOI 10.2307/2684093
   Wang S, 2020, IEEE T SOFTWARE ENG, V46, P1267, DOI 10.1109/TSE.2018.2877612
   Xia X, 2016, IEEE T SOFTWARE ENG, V42, P977, DOI 10.1109/TSE.2016.2543218
   Xu Z, 2018, INT C PROGRAM COMPRE, P132, DOI 10.1145/3196321.3196331
   Xu Z, 2019, J SYST SOFTWARE, V154, P59, DOI 10.1016/j.jss.2019.03.027
   Yang XL, 2017, INFORM SOFTWARE TECH, V87, P206, DOI 10.1016/j.infsof.2017.03.007
   Yatish S, 2019, PROC INT CONF SOFTW, P654, DOI 10.1109/ICSE.2019.00075
   Zhang F, 2017, IEEE T SOFTWARE ENG, V43, P476, DOI 10.1109/TSE.2016.2599161
   Zhang F, 2016, EMPIR SOFTW ENG, V21, P2107, DOI 10.1007/s10664-015-9396-2
   Zhou YM, 2010, J SYST SOFTWARE, V83, P660, DOI 10.1016/j.jss.2009.11.704
   Zimmermann T, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P531, DOI 10.1145/1368088.1368161
NR 103
TC 14
Z9 14
U1 0
U2 4
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD DEC 1
PY 2022
VL 48
IS 12
BP 5030
EP 5049
DI 10.1109/TSE.2021.3131950
PG 20
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 6X8ON
UT WOS:000896667600015
OA Green Submitted, Bronze
DA 2024-07-18
ER

PT J
AU Wagner, S
   Wyrich, M
AF Wagner, Stefan
   Wyrich, Marvin
TI Code Comprehension Confounders: A Study of Intelligence and Personality
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Code comprehension; intelligence; personality; human factors;
   confounding parameters; empirical study
ID PROGRAM COMPREHENSION; INDIVIDUAL-DIFFERENCES; CHILDHOOD
AB Program comprehension is a cognitive psychological process. Accordingly, literature and intuition suggest that a developer's intelligence and personality have an impact on their performance in comprehending source code. Some researchers have made this suggestion in the past when discussing threats to validity of their study results. However, the lack of studies investigating the relationship of intelligence and personality to performance in code comprehension makes scientifically sound reasoning about their influence difficult. We conduct the first large-scale empirical evaluation, a correlational study with undergraduates, to investigate the correlation of intelligence and personality with performance in code comprehension, that is, in this context, with correctness in answering comprehension questions on code snippets. We found that personality traits are unlikely to impact code comprehension performance, at least not when their influence is considered in isolation. Conscientiousness, in combination with other factors, however, explains some of the variance in code comprehension performance. For intelligence, significant small to moderate positive effects on code comprehension performance were found for three of four factors measured, i.e., fluid intelligence, visual perception, and cognitive speed. Crystallized intelligence has a positive but statistically insignificant effect on code comprehension performance. According to our results, several intelligence facets as well as the personality trait conscientiousness are potential confounders that should not be neglected in code comprehension studies of individual performance and should be controlled for via an appropriate study design. We call for the conduct of further studies on the relationship between intelligence and personality with code comprehension, in part because code comprehension involves more facets than we can measure in a single study and because our regression model explains only a small portion of the variance in code comprehension performance.
C1 [Wagner, Stefan; Wyrich, Marvin] Univ Stuttgart, Inst Software Engn, D-70569 Stuttgart, Germany.
C3 University of Stuttgart
RP Wagner, S (corresponding author), Univ Stuttgart, Inst Software Engn, D-70569 Stuttgart, Germany.
EM stefan.wagner@iste.uni-stuttgart.de; marvin.wyrich@iste.uni-stuttgart.de
RI Wagner, Stefan/A-5200-2018
OI Wagner, Stefan/0000-0002-5256-8429
CR Anonymous, 2021, Zenodo, DOI 10.5281/ZENODO.5031619
   [Anonymous], 2009, PROC IEEE 13 INT MUL
   Arockiam L., 2005, PROC SOFTW MEAS EUR
   Ashton M. C, 2021, HEXACO PERSONALITY I
   Ashton MC, 2001, EUR J PERSONALITY, V15, P327, DOI 10.1002/per.417
   Baron Marvin Munoz, 2020, P ACM IEEE INT S EMP, V5, P1
   Bell D, 2010, SIGMIS CPR '10: PROCEEDINGS OF THE 2010 ACM SIGMIS COMPUTER PERSONNEL RESEARCH CONFERENCE, P43
   BICKLEY PG, 1995, INTELLIGENCE, V20, P309, DOI 10.1016/0160-2896(95)90013-6
   Boehm B. W., 1976, 2nd International Conference on Software Engineering, P592
   Carroll B J., 1993, Human cognitive abilities: A survey of factor-analytical studies
   Carroll J. B., 2005, CONT INTELLECTUAL AS
   Caspi A, 2000, J PERS SOC PSYCHOL, V78, P158, DOI 10.1037/0022-3514.78.1.158
   COHEN J, 1992, PSYCHOL BULL, V112, P155, DOI 10.1037/0033-2909.112.1.155
   CRONBACH LJ, 1957, AM PSYCHOL, V12, P671, DOI 10.1037/h0043943
   Cruz S, 2015, COMPUT HUM BEHAV, V46, P94, DOI 10.1016/j.chb.2014.12.008
   Da Cunha AD, 2007, COMMUN ACM, V50, P109, DOI 10.1145/1230819.1241672
   Deary IJ, 2000, INTELLIGENCE, V28, P49, DOI 10.1016/S0160-2896(99)00031-8
   Fakhoury S, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P936, DOI 10.1145/3236024.3275426
   Hautojrvi P., 1979, Experimentation in software engineering, V1ST, DOI [10.1007/978-3-642-81316-0, 10.1007/978-3-642-29044-2., DOI 10.1007/978-3-642-29044-2]
   HOLM S, 1979, SCAND J STAT, V6, P65
   Jedlitschka A., 2008, Guide to advanced empirical software engineering, P201, DOI DOI 10.1007/978-1-84800-044-5_8
   Kanij T, 2013, CONF SOFTW ENG EDUC, P239, DOI 10.1109/CSEET.2013.6595255
   Karimi Z, 2016, J SYST SOFTWARE, V111, P228, DOI 10.1016/j.jss.2015.09.011
   Ko AJ, 2003, PROG COMPREHEN, P175
   Kreuzpointner L, 2013, LEISTUNGSPRUPOUNDFSY
   Lee K, 2018, ASSESSMENT, V25, P543, DOI 10.1177/1073191116659134
   McCrae R. R., 2020, CAMBRIDGE HDB PERSON, V2nd
   Mindermann K, 2020, PROC INT CONF SOFTW, P306, DOI 10.1145/3377812.3390892
   Minelli R, 2015, INT C PROGRAM COMPRE, P25, DOI 10.1109/ICPC.2015.12
   O'Brien MP, 2004, J SOFTW MAINT EVOL-R, V16, P427, DOI 10.1002/smr.307
   Oliveira D, 2020, PROC IEEE INT CONF S, P348, DOI 10.1109/ICSME46990.2020.00041
   Peitek N, 2020, IEEE T SOFTWARE ENG, V46, P442, DOI 10.1109/TSE.2018.2863303
   Peitek N, 2018, PROCEEDINGS OF THE 12TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT (ESEM 2018), DOI 10.1145/3239235.3240495
   Pourhoseingholi Mohamad Amin, 2012, Gastroenterol Hepatol Bed Bench, V5, P79
   Rohrer JM, 2018, ADV METH PRACT PSYCH, V1, P27, DOI 10.1177/2515245917745629
   Ryckman RM., 2012, Theories of personality
   Scalabrino S, 2021, IEEE T SOFTWARE ENG, V47, P595, DOI 10.1109/TSE.2019.2901468
   Schröter I, 2017, INT C PROGRAM COMPRE, P308, DOI 10.1109/ICPC.2017.9
   Siegmund J, 2020, COMMUN ACM, V63, P30, DOI 10.1145/3347093
   Siegmund J, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 5, P13, DOI 10.1109/SANER.2016.35
   Siegmund J, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P9, DOI 10.1109/ICSE.2015.24
   Siegmund J, 2015, EMPIR SOFTW ENG, V20, P1159, DOI 10.1007/s10664-014-9318-8
   Siegmund J, 2014, EMPIR SOFTW ENG, V19, P1299, DOI 10.1007/s10664-013-9286-4
   thenounproject, 2021, ICONS NOUN PROJECT B
   VONMAYRHAUSER A, 1995, COMPUTER, V28, P44, DOI 10.1109/2.402076
   Wyrich M, 2021, PROC INT CONF SOFTW, P512, DOI 10.1109/ICSE43902.2021.00055
   Wyrich M, 2019, PEERJ COMPUT SCI, DOI 10.7717/peerj-cs.173
   Xia X, 2018, IEEE T SOFTWARE ENG, V44, P951, DOI 10.1109/TSE.2017.2734091
NR 48
TC 4
Z9 4
U1 1
U2 5
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD DEC 1
PY 2022
VL 48
IS 12
BP 4789
EP 4801
DI 10.1109/TSE.2021.3127131
PG 13
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 6X8ON
UT WOS:000896667600004
OA hybrid
DA 2024-07-18
ER

PT J
AU Hoda, R
AF Hoda, Rashina
TI Socio-Technical Grounded Theory for Software Engineering
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Guidelines; Data collection; Software engineering; Tools; Systematics;
   Sociology; Encoding; Socio-technical grounded theory; STGT; grounded
   theory; GT; software engineering; research method; theory; theory
   development; qualitative research; data analysis; guidelines; evaluation
ID ROLES
AB Grounded Theory (GT), a sociological research method designed to study social phenomena, is increasingly being used to investigate the human and social aspects of software engineering (SE). However, being written by and for sociologists, GT is often challenging for a majority of SE researchers to understand and apply. Additionally, SE researchers attempting ad hoc adaptations of traditional GT guidelines for modern socio-technical (ST) contexts often struggle in the absence of clear and relevant guidelines to do so, resulting in poor quality studies. To overcome these research community challenges and leverage modern research opportunities, this paper presents Socio-Technical Grounded Theory (STGT) designed to ease application and achieve quality outcomes. It defines what exactly is meant by an ST research context and presents the STGT guidelines that expand GT's philosophical foundations, provide increased clarity and flexibility in its methodological steps and procedures, define possible scope and contexts of application, encourage frequent reporting of a variety of interim, preliminary, and mature outcomes, and introduce nuanced evaluation guidelines for different outcomes. It is hoped that the SE research community and related ST disciplines such as computer science, data science, artificial intelligence, information systems, human computer/robot/AI interaction, human-centered emerging technologies (and increasingly other disciplines being transformed by rapid digitalisation and AI-based augmentation), will benefit from applying STGT to conduct quality research studies and systematically produce rich findings and mature theories with confidence.
C1 [Hoda, Rashina] Monash Univ, Fac Informat Technol, Melbourne, Vic 3800, Australia.
C3 Monash University
RP Hoda, R (corresponding author), Monash Univ, Fac Informat Technol, Melbourne, Vic 3800, Australia.
EM rashina.hoda@monash.edu
OI Hoda, Rashina/0000-0001-5147-8096
CR A. of Internet Research, 2012, ETHICAL DECISION MAK
   Adolph S, 2012, J SYST SOFTWARE, V85, P1269, DOI 10.1016/j.jss.2012.01.059
   Adolph S, 2011, EMPIR SOFTW ENG, V16, P487, DOI 10.1007/s10664-010-9152-6
   [Anonymous], 1995, Philosophy of education
   [Anonymous], 2001, Using Grounded Theory in Nursing
   [Anonymous], 2011, Status Passage
   Babchuk W. A., 1996, Proceedings of the 15th Annual Midwest Research-to-Practice Conference in Adult, Continuing, and Community Education, V12, P1
   BAKER C, 1992, J ADV NURS, V17, P1355, DOI 10.1111/j.1365-2648.1992.tb01859.x
   Becker P.H., 1993, Qualitative Health Research, V3, P254
   Bick S, 2018, IEEE T SOFTWARE ENG, V44, P932, DOI 10.1109/TSE.2017.2730870
   Bruscaglioni L, 2016, QUAL QUANT, V50, P2009, DOI 10.1007/s11135-015-0248-3
   Burch Robert, 2018, STANFORD ENCY PHILOS
   Calefato F, 2018, EMPIR SOFTW ENG, V23, P1352, DOI 10.1007/s10664-017-9546-9
   Charmaz K., 2014, CONSTRUCTING GROUNDE
   Coleman G, 2007, INFORM SOFTWARE TECH, V49, P654, DOI 10.1016/j.infsof.2007.02.011
   Coyne IT, 1997, J ADV NURS, V26, P623, DOI 10.1046/j.1365-2648.1997.t01-25-00999.x
   Dagenais B., 2010, Proc. of the ICSE 10, P275, DOI DOI 10.1145/1806799.1806842
   Dittrich D., 2012, The Menlo Report: Ethical Principles Guiding Information and Communication Technology Research
   Douven Igor, 2017, The Stanford Encyclopedia of Philosophy
   Easterbrook S., 2008, GUIDE ADV EMPIRICAL, P285, DOI [DOI 10.1007/978-1-84800-044-5_11, DOI 10.1007/978-1-84800-044-511]
   Ebert C, 2018, IEEE SOFTWARE, V35, P94, DOI 10.1109/MS.2018.3571228
   El-Emam K., 2001, Empirical Software Engineering, V6, P291, DOI 10.1023/A:1011962213685
   Fassinger RE, 2005, J COUNS PSYCHOL, V52, P156, DOI 10.1037/0022-0167.52.2.156
   Fernández DM, 2019, J SYST SOFTWARE, V148, P170, DOI 10.1016/j.jss.2018.11.019
   Gibson B., 2013, Rediscovering grounded theory
   Glaser B.G., 1978, Sociology Pr
   Glaser B.G., 1998, DOING GROUNDED THEOR
   Glaser B. G., 1967, DISCOVERY GROUNDED T, DOI 10.1515/9783111660211/html
   Glaser Barney G., 1980, TIME DYING
   Glaser Barney G., 1992, Basic of grounded theory analysis: emergence vs. forcing
   Gold NE, 2020, IEEE WORK CONF MIN S, P265, DOI 10.1145/3379597.3387462
   Gregory P, 2016, INFORM SOFTWARE TECH, V77, P92, DOI 10.1016/j.infsof.2016.04.006
   Guba E.G., 1994, COMPETING PARADIGMS, V1
   Heath H, 2004, INT J NURS STUD, V41, P141, DOI 10.1016/S0020-7489(03)00113-5
   Hidellaarachchi D, 2022, IEEE T SOFTWARE ENG, V48, P2105, DOI 10.1109/TSE.2021.3051898
   Hine C., 2008, The SAGE handbook of online research methods, P257, DOI [DOI 10.4135/9780857020055.N14, 10.4135/9780857020055, DOI 10.4135/9780857020055]
   Hoda R., 2010, Proceedings of the 32nd International Conference on Software Engineering - Volume 1, ICSE '10, V1, P285, DOI [10.1145/1806799.1806843, DOI 10.1145/1806799.1806843]
   Hoda R, 2018, IEEE SOFTWARE, V35, P58, DOI 10.1109/MS.2018.290111318
   Hoda R, 2017, PROC INT CONF SOFTW, P141, DOI 10.1109/ICSE.2017.21
   Hoda R, 2013, IEEE T SOFTWARE ENG, V39, P422, DOI 10.1109/TSE.2012.30
   Hoda R, 2012, EMPIR SOFTW ENG, V17, P609, DOI 10.1007/s10664-011-9161-0
   Hoda R, 2011, INFORM SOFTWARE TECH, V53, P521, DOI 10.1016/j.infsof.2010.10.009
   Hussain W, 2022, IEEE T SOFTWARE ENG, V48, P1818, DOI 10.1109/TSE.2020.3038802
   James W., 1975, PRAGMATISM, V1
   Jantunen S, 2014, J SYST SOFTWARE, V95, P32, DOI 10.1016/j.jss.2014.03.050
   Kennedy TJT, 2006, MED EDUC, V40, P101, DOI 10.1111/j.1365-2929.2005.02378.x
   Kenny M, 2014, QUAL REP, V19
   Kitchenham Barbara, 2004, Joint Technical Report, V2004, P1
   Madampe K, 2020, 2020 IEEE/ACM 42ND INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: NEW IDEAS AND EMERGING RESULTS (ICSE-NIER 2020), P37, DOI 10.1145/3377816.3381722
   Maglyas A, 2013, J SYST SOFTWARE, V86, P3071, DOI 10.1016/j.jss.2013.07.045
   Martin V., 2019, The Sage Handbook of grounded theory, P222
   Masood Z, 2022, IEEE T SOFTWARE ENG, V48, P1579, DOI 10.1109/TSE.2020.3025317
   Masood Z, 2020, EMPIR SOFTW ENG, V25, P4962, DOI 10.1007/s10664-020-09876-x
   Melegati J, 2021, 2021 IEEE/ACM 13TH INTERNATIONAL WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING (CHASE 2021), P41, DOI 10.1109/CHASE52884.2021.00013
   Novielli N, 2018, IEEE WORK CONF MIN S, P364, DOI 10.1145/3196398.3196403
   Patton M. Q., 2002, QUALITATIVE RES EVAL
   Peirce Charles S., 1960, Collected papers of Charles Sanders Peirce
   Perera H, 2020, PROC INT CONF SOFTW, P409, DOI 10.1145/3377811.3380393
   Pink S., 2013, DOING VISUAL ETHNOGR
   Prikladnicki R., 2013, CHASE 2013 SIGSOFT S, V38, P34
   Reichertz J., 2007, SAGE HDB GROUNDED TH, P214, DOI DOI 10.4135/9781848607941.N10
   RENNIE DL, 1988, CAN PSYCHOL, V29, P139, DOI 10.1037/h0079765
   Richardson R., 2006, Qualitative Research, V6, P497
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Russo A., 2001, HDB SOFTWARE ENG KNO, VI, P889
   SANDELOWSKI M, 1995, RES NURS HEALTH, V18, P179, DOI 10.1002/nur.4770180211
   Schwandt T, 1994, Handbook of qualitative research
   Schwartz D., 1989, Qualitative Sociology, V12, P119, DOI DOI 10.1007/BF00988995
   Scott J., 2006, Social theory: Central issues in sociology
   Seaman CB, 1999, IEEE T SOFTWARE ENG, V25, P557, DOI 10.1109/32.799955
   Sedano T, 2017, PROC INT CONF SOFTW, P130, DOI 10.1109/ICSE.2017.20
   Shank G, 1998, THEOR PSYCHOL, V8, P841, DOI 10.1177/0959354398086007
   Sharp H, 2016, IEEE T SOFTWARE ENG, V42, P786, DOI 10.1109/TSE.2016.2519887
   Shastri Y, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-020-09899-4
   Shastri Y, 2021, J SYST SOFTWARE, V173, DOI 10.1016/j.jss.2020.110871
   Singer J, 2002, IEEE T SOFTWARE ENG, V28, P1171, DOI 10.1109/TSE.2002.1158289
   Singer J., 2001, Empirical Software Engineering, V6, P287, DOI DOI 10.1023/A:1011998412776
   Sjoberg D. I. K., 2008, Guide to Advanced Empirical Software Engineering, P312
   Sousa L, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P921, DOI 10.1145/3180155.3180239
   Stol KJ, 2016, PROC INT CONF SOFTW, P120, DOI 10.1145/2884781.2884833
   Storey MA., 2010, P FSE SDP WORKSH FUT, P359, DOI DOI 10.1145/1882362.1882435
   Storey MA, 2020, EMPIR SOFTW ENG, V25, P4097, DOI 10.1007/s10664-020-09858-z
   Strauss A., 1987, QUALITATIVE ANAL SOC
   Strauss A., 1994, HDB QUALITATIVE RES, P273, DOI DOI 10.1007/BF00988593
   Strauss A.L., 1990, BASICS QUALITATIVE R
   Stray V, 2016, J SYST SOFTWARE, V114, P101, DOI 10.1016/j.jss.2016.01.004
   STRUTZEL E, 1968, NURS RES, V17, P364
   Timonen V, 2018, INT J QUAL METH, V17, DOI 10.1177/1609406918758086
   Townsend L., 2021, SOCIAL MEDIA RES GUI
   Waterman M, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P347, DOI 10.1109/ICSE.2015.54
   Watling CJ, 2012, MED TEACH, V34, P850, DOI 10.3109/0142159X.2012.704439
   Whitworth B., 2011, Virtual Communities, V3, P1461
   Wohlin C, 2015, EMPIR SOFTW ENG, V20, P1427, DOI 10.1007/s10664-014-9319-7
   Wolfswinkel JF, 2013, EUR J INFORM SYST, V22, P45, DOI 10.1057/ejis.2011.51
NR 94
TC 37
Z9 39
U1 4
U2 18
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD OCT 1
PY 2022
VL 48
IS 10
BP 3808
EP 3832
DI 10.1109/TSE.2021.3106280
PG 25
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 5L3GA
UT WOS:000870301800006
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Lopez-Fernandez, D
   Diaz, J
   Garcia-Martin, J
   Perez, J
   Gonzalez-Prieto, A
AF Lopez-Fernandez, Daniel
   Diaz, Jessica
   Garcia-Martin, Javier
   Perez, Jorge
   Gonzalez-Prieto, Angel
TI DevOps Team Structures: Characterization and Implications
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Software; Companies; Interviews; Taxonomy; Telecommunications;
   Stakeholders; Collaboration; DevOps; team structures; grounded theory
AB Context: DevOps can be defined as a cultural movement to improve and accelerate the delivery of business value by making the collaboration between development and operations effective. Objective: This paper aims to help practitioners and researchers to better understand the organizational structure and characteristics of teams adopting DevOps. Method: We conducted an exploratory study by leveraging in-depth, semi-structured interviews with relevant stakeholders of 31 multinational software-intensive companies, together with industrial workshops and observations at organizations' facilities that supported triangulation. We used Grounded Theory as qualitative research method to explore the structure and characteristics of teams, and statistical analysis to discover their implications in software delivery performance. Results: We describe a taxonomy of team structures that shows emerging, stable and consolidated product teams that are classified according to six variables, such as collaboration frequency, product ownership sharing, and autonomy, among others, as well as their implications on software delivery performance. These teams are often supported by horizontal teams (DevOps platform teams, Centers of Excellence, and chapters) that provide them with platform technical capabilities, mentoring and evangelization, and even temporarily may facilitate human resources. Conclusion: This study aims to strengthen evidence and support practitioners in making better informed about organizational team structures by analyzing their main characteristics and implications in software delivery performance.
C1 [Lopez-Fernandez, Daniel; Diaz, Jessica; Garcia-Martin, Javier; Perez, Jorge] Univ Politecn Madrid, ETSI Sistemas Informat, Madrid 28031, Spain.
   [Gonzalez-Prieto, Angel] UAM UCM UC3M, Inst Ciencias Matemat, Madrid 28049, Spain.
C3 Universidad Politecnica de Madrid; Consejo Superior de Investigaciones
   Cientificas (CSIC); CSIC - Instituto de Ciencia de Materiales de Madrid
   (ICMM); CSIC - Instituto de Ciencias Matematicas (ICMAT)
RP Lopez-Fernandez, D (corresponding author), Univ Politecn Madrid, ETSI Sistemas Informat, Madrid 28031, Spain.
EM daniel.lopez@upm.es; yesica.diaz@upm.es; jgarciam@upm.es;
   jorgeenrique.perez@upm.es; angel.gonzalezprieto@uam.es
RI Diaz, Jessica/J-9751-2012; González-Prieto, Ángel/ABD-2755-2021;
   Pérez-Martínez, Jorge Enrique/AAS-5194-2020
OI Diaz, Jessica/0000-0001-6738-9370; González-Prieto,
   Ángel/0000-0003-2326-6752; Pérez-Martínez, Jorge
   Enrique/0000-0003-3349-6017; Lopez Fernandez,
   Daniel/0000-0003-1265-010X; GARCIA MARTIN, JAVIER/0000-0002-4308-2953
FU Comunidad de Madrid under Convenio Plurianual with the Universidad
   Politecnica de Madrid in the actuation line of "Programa de Excelencia
   para el Profesorado Universitario"
FX The authors would like to thank Vass, Clarive, Autentia, Ebury,
   Carrefour, Vilt, IBM, AtSistemas, Entelgy, Analyticalways, Mango
   eBusiness, Adidas, Seur, Zooplus, as well as other participating
   companies that prefer to remain anonymous. This work was supported by
   the Comunidad de Madrid under Convenio Plurianual with the Universidad
   Politecnica de Madrid in the actuation line of "Programa de Excelencia
   para el Profesorado Universitario".
CR Allspaw J., 2009, PROC VELOCITY WEB PE
   ATLAS.ti Scientific Software Development GmbH, US
   Bahadori K, 2019, LECT NOTES COMPUT SC, V11350, P142, DOI 10.1007/978-3-030-06019-0_11
   Bick S, 2018, IEEE T SOFTWARE ENG, V44, P932, DOI 10.1109/TSE.2017.2730870
   Charmaz K., 2014, CONSTRUCTING GROUNDE
   Creswell J. W., 2013, RES DESIGN QUALITATI
   Cruzes DS, 2011, INT SYMP EMP SOFTWAR, P275, DOI 10.1109/ESEM.2011.36
   D ~ iaz J., 2018, PROC 19 INT C AGILE, P1
   D. Research and Assessment, ACC STAT DEV 2018 ST
   Debois P, 2008, AGILE 2008, PROCEEDINGS, P202, DOI 10.1109/Agile.2008.42
   Denzin N.K., 1978, RES ACT THEORETICAL
   Díaz J, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-020-09919-3
   Díaz J, 2019, LECT NOTES COMPUT SC, V11915, P323, DOI 10.1007/978-3-030-35333-9_23
   DUNN OJ, 1961, J AM STAT ASSOC, V56, P52, DOI 10.2307/2282330
   Easterbrook S., 2008, GUIDE ADV EMPIRICAL, P285, DOI [DOI 10.1007/978-1-84800-044-5_11, DOI 10.1007/978-1-84800-044-511]
   Erich F, 2014, LECT NOTES COMPUT SC, V8892, P277, DOI 10.1007/978-3-319-13835-0_21
   Halaweh Mohanad., 2008, Twenty Ninth International Conference on Information Systems, P1
   Hautojrvi P., 1979, Experimentation in software engineering, V1ST, DOI [10.1007/978-3-642-81316-0, 10.1007/978-3-642-29044-2., DOI 10.1007/978-3-642-29044-2]
   Iden J, 2011, INFORM SOFTWARE TECH, V53, P394, DOI 10.1016/j.infsof.2010.12.002
   IEEE Computer Society, 2020, P2675D2 IEEE COMP SO
   Leite L., 2020, IEEE ACM 42 INT C SO, P505, DOI 10.1145/3387940.3391455
   Leite L, 2021, INFORM SOFTWARE TECH, V139, DOI 10.1016/j.infsof.2021.106672
   Leite L, 2020, PROC INT CONF SOFTW, P296, DOI 10.1145/3377812.3390807
   Leite L, 2020, ACM COMPUT SURV, V52, DOI 10.1145/3359981
   Lethbridge TC, 2005, EMPIR SOFTW ENG, V10, P311, DOI 10.1007/s10664-005-1290-x
   Lincoln Y. S., 1985, NATURALISTIC INQUIRY
   Luz WP, 2019, J SYST SOFTWARE, V157, DOI 10.1016/j.jss.2019.07.083
   Lwakatare L E., 2016, ICSEA 2016: The Eleventh International Conference on Software Engineering Advances, IARIA, 2016, P91
   Lwakatare LE, 2016, LECT NOTES COMPUT SC, V10027, P399, DOI 10.1007/978-3-319-49094-6_27
   Nybom K., 2016, INT C AG SOFTW DEV, P131, DOI [10.1007/978-3-319-33515-5_11, DOI 10.1007/978-3-319-33515-5_11]
   Ralph P, 2020, EMPIRICAL STANDARDS, V46, P1
   Ralph P, 2019, IEEE T SOFTWARE ENG, V45, P712, DOI 10.1109/TSE.2018.2796554
   Riungu-Kalliosaari L, 2016, LECT NOTES COMPUT SC, V10027, P590, DOI 10.1007/978-3-319-49094-6_44
   Rosenthal R., 1994, HDB RES SYNTHESIS
   Saldana J., 2016, CODING MANUAL QUALIT, DOI DOI 10.1017/CBO9781107415324.004
   Salleh N, 2018, INFORM SOFTWARE TECH, V98, P161, DOI 10.1016/j.infsof.2017.12.001
   Seaman CB, 1999, IEEE T SOFTWARE ENG, V25, P557, DOI 10.1109/32.799955
   Senapathi M., 2018, ser. EASE'18, P57
   Shahin M., 2017, P 21 INT C EV ASS SO, P384
   SJOBERG D.I., 2008, BUILDING THEORIES SO
   Skelton M., DEVOPS TOPOLOGIES
   Smeds J, 2015, LECT NOTES BUS INF P, V212, P166, DOI 10.1007/978-3-319-18612-2_14
   Spiegler SV, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-021-09949-5
   Stol KJ, 2016, PROC INT CONF SOFTW, P120, DOI 10.1145/2884781.2884833
   Stray V., 2018, PROC 19 INT C AGILE, P1
   STRUTZEL E, 1968, NURS RES, V17, P364
   Yin R. K., 2018, Case Study Research and Applications: Design and Methods, DOI DOI 10.1016/J.TECHFORE.2018.10.013
NR 47
TC 4
Z9 4
U1 8
U2 22
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD OCT 1
PY 2022
VL 48
IS 10
BP 3716
EP 3736
DI 10.1109/TSE.2021.3102982
PG 21
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 5L3GA
UT WOS:000870301800001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Xia, TP
   Shu, R
   Shen, XP
   Menzies, T
AF Xia, Tianpei
   Shu, Rui
   Shen, Xipeng
   Menzies, Tim
TI Sequential Model Optimization for Software Effort Estimation
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Estimation; Software; Tools; Optimization; Data models; Task analysis;
   Mathematical model; Effort estimation; COCOMO; hyperparameter tuning;
   regression trees; sequential model optimization
ID GENETIC ALGORITHM
AB Many methods have been proposed to estimate how much effort is required to build and maintain software. Much of that research tries to recommend a single method - an approach that makes the dubious assumption that one method can handle the diversity of software project data. To address this drawback, we apply a configuration technique called "ROME" (Rapid Optimizing Methods for Estimation), which uses sequential model-based optimization (SMO) to find what configuration settings of effort estimation techniques work best for a particular data set. We test this method using data from 1161 traditional waterfall projects and 120 contemporary projects (from GitHub). In terms of magnitude of relative error and standardized accuracy, we find that ROME achieves better performance than the state-of-the-art methods for both traditional waterfall and contemporary projects. In addition, we conclude that we should not recommend one method for estimation. Rather, it is better to search through a wide range of different methods to find what works best for the local data. To the best of our knowledge, this is the largest effort estimation experiment yet attempted and the only one to test its methods on traditional waterfall and contemporary projects.
C1 [Xia, Tianpei; Shu, Rui; Shen, Xipeng; Menzies, Tim] North Carolina State Univ, Dept Comp Sci, Raleigh, NC 27695 USA.
C3 North Carolina State University
RP Xia, TP (corresponding author), North Carolina State Univ, Dept Comp Sci, Raleigh, NC 27695 USA.
EM txia4@ncsu.edu; rshu@ncsu.edu; xshen5@ncsu.edu; timm@ieee.org
RI Xia, Tianpei/HGC-8847-2022; Menzies, Tim/X-7680-2019
OI Menzies, Tim/0000-0002-5040-3196; Shen, Xipeng/0000-0003-3599-8010; Xia,
   Tianpei/0000-0002-6340-8041
FU National Science Foundation [1703487]; Division of Computing and
   Communication Foundations; Direct For Computer & Info Scie & Enginr
   [1703487] Funding Source: National Science Foundation
FX This work was partially funded by a National Science Foundation Grant
   #1703487.
CR [Anonymous], 1993, MONOGRAPHS STAT APPL
   [Anonymous], 2008, Proceedings of the 4th international workshop on Predictor models in software engineering, DOI [DOI 10.1145/1370788.1370804, 10.1145/1370788.1370804]
   [Anonymous], 2011, ACM T INTEL SYST TEC, DOI DOI 10.1145/1961189.1961199
   Benediktsson O, 2003, SOFTWARE QUAL J, V11, P265, DOI 10.1023/A:1025809010217
   Bergstra J., 2011, P 24 ADV NEUR INF PR
   Bergstra J, 2012, J MACH LEARN RES, V13, P281
   Biedenkapp A., 2018, ARTIF INTELL, V1, P35
   Bjorner N., 2015, Tools and Algorithms for the Construction and Analysis of Systems, V9035, P194, DOI DOI 10.1007/978-3-662-46681-0
   Blank S., 2019, HARVARD BUSINESS REV, P2
   Boehm B, 2000, COST ESTIMATION COCO
   BOEHM BW, 1984, IEEE T SOFTWARE ENG, V10, P4, DOI 10.1109/TSE.1984.5010193
   Breiman L., 2001, Mach. Learn., V45, P5
   Burgess CJ, 2001, INFORM SOFTWARE TECH, V43, P863, DOI 10.1016/S0950-5849(01)00192-6
   Chiu NH, 2007, J SYST SOFTWARE, V80, P628, DOI 10.1016/j.jss.2006.06.006
   Coelho J, 2020, INFORM SOFTWARE TECH, V122, DOI 10.1016/j.infsof.2020.106274
   Corazza A, 2013, EMPIR SOFTW ENG, V18, P506, DOI 10.1007/s10664-011-9187-3
   Cowing K., 2002, NASA SHUT CHECKOUT L
   Das S, 2016, IEEE DATA MINING, P853, DOI [10.1109/ICDM.2016.164, 10.1109/ICDM.2016.0102]
   Dejaeger K, 2012, IEEE T SOFTWARE ENG, V38, P375, DOI 10.1109/TSE.2011.55
   Feldt R, 2010, 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING & KNOWLEDGE ENGINEERING (SEKE 2010), P374
   Finnie GR, 1997, J SYST SOFTWARE, V39, P281, DOI 10.1016/S0164-1212(97)00055-1
   Foss T, 2003, IEEE T SOFTWARE ENG, V29, P985, DOI 10.1109/TSE.2003.1245300
   Franceschi L, 2017, PR MACH LEARN RES, V70
   Frazier Peter I., 2018, INFORMs tutorials in operations research, Recent advances in optimization and modeling of contemporary problems, P255, DOI DOI 10.1287/EDUC.2018.0188
   Fu W., 2016, ARXIV160902613
   Fu W, 2016, INFORM SOFTWARE TECH, V76, P135, DOI 10.1016/j.infsof.2016.04.017
   Germano S., 2016, FINISH LINE CLOSE 25
   Han JX, 2019, P INT COMP SOFTW APP, P21, DOI 10.1109/COMPSAC.2019.00013
   Hardy Melissa A, 1993, Regression with Dummy Variables, V93
   Hazrati V., 2011, IT PROJECTS 400 OVER
   Huang SJ, 2008, EUR J OPER RES, V188, P898, DOI 10.1016/j.ejor.2007.07.002
   Huang SJ, 2006, INFORM SOFTWARE TECH, V48, P1034, DOI 10.1016/j.infsof.2005.12.020
   JEFFERY DR, 1990, SOFTWARE ENG J, V5, P215, DOI 10.1049/sej.1990.0024
   Jorgensen M, 2009, IEEE T SOFTWARE ENG, V35, P368, DOI 10.1109/TSE.2009.2
   KEMERER CF, 1987, COMMUN ACM, V30, P416, DOI 10.1145/22899.22906
   Kitchenham B. A., 2001, IEE Proceedings-Software, V148, P81, DOI 10.1049/ip-sen:20010506
   Kocaguneli E, 2013, IEEE T SOFTWARE ENG, V39, P1040, DOI 10.1109/TSE.2012.88
   Kocaguneli E, 2012, IEEE T SOFTWARE ENG, V38, P1403, DOI 10.1109/TSE.2011.111
   Kocaguneli E, 2012, IEEE T SOFTWARE ENG, V38, P425, DOI 10.1109/TSE.2011.27
   Krishna R, 2018, 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING - SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2018), P306, DOI 10.1145/3183519.3183548
   Langdon WB, 2016, INFORM SOFTWARE TECH, V73, P16, DOI 10.1016/j.infsof.2016.01.003
   Li JZ, 2007, EMPIR SOFTW ENG, V12, P65, DOI 10.1007/s10664-006-7552-4
   Lindauer M., 2017, WARMSTARTING MODEL B
   Mair C, 2000, J SYST SOFTWARE, V53, P23, DOI 10.1016/S0164-1212(00)00005-4
   McConnell S., 2006, Software Estimation: Demystifying the Black Art
   Mendes E, 2004, 10TH INTERNATIONAL SYMPOSIUM ON SOFTWARE METRICS, PROCEEDINGS, P348, DOI 10.1109/METRIC.2004.1357920
   Mendes E, 2002, 2002 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P79, DOI 10.1109/ISESE.2002.1166928
   Menzies T, 2006, IEEE T SOFTWARE ENG, V32, P883, DOI 10.1109/TSE.2006.114
   Menzies T, 2017, EMPIR SOFTW ENG, V22, P2658, DOI 10.1007/s10664-016-9472-2
   Menzies T, 2008, INNOV SYST SOFTW ENG, V4, P169, DOI 10.1007/s11334-008-0046-3
   Minku LL, 2013, INFORM SOFTWARE TECH, V55, P1512, DOI 10.1016/j.infsof.2012.09.012
   Mittas N, 2013, IEEE T SOFTWARE ENG, V39, P537, DOI 10.1109/TSE.2012.45
   Mockus J., 1978, Towards global optimisation. II, P117
   Molokken K, 2003, 2003 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P223, DOI 10.1109/ISESE.2003.1237981
   Nair V, 2020, IEEE T SOFTWARE ENG, V46, P794, DOI 10.1109/TSE.2018.2870895
   Nair V, 2018, IEEE WORK CONF MIN S, P341, DOI 10.1145/3196398.3196442
   Neter J., 1996, APPL LINEAR STAT MOD, V81, P1126
   Ochodek M, 2011, INFORM SOFTWARE TECH, V53, P200, DOI 10.1016/j.infsof.2010.10.005
   Olsson Fredrik, 2009, A literature survey of active machine learning in the context of natural language processing
   Port D, 2008, ESEM'08: PROCEEDINGS OF THE 2008 ACM-IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, P51
   PRAAGMAN J, 1985, EUR J OPER RES, V19, P144, DOI 10.1016/0377-2217(85)90321-2
   Robles Gregorio., 2014, Proceedings of the 11th Working Conference on Mining Software Repositories, P222
   Roman K, 2016, FEDERAL GOVT CANADAC
   Royce W. W., 1987, Proceedings of the 9th International Conference on Software Engineering (Cat. No.87CH2432-3), P328
   Sarro F, 2018, ACM T SOFTW ENG METH, V27, DOI 10.1145/3234940
   Sarro F, 2016, PROC INT CONF SOFTW, P619, DOI 10.1145/2884781.2884830
   Shepperd M, 1997, IEEE T SOFTWARE ENG, V23, P736, DOI 10.1109/32.637387
   Shepperd M., 2000, Empirical Software Engineering, V5, P175, DOI 10.1023/A:1026582314146
   Shepperd M, 1996, PROC INT CONF SOFTW, P170, DOI 10.1109/ICSE.1996.493413
   Shepperd M, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P304, DOI 10.1109/FOSE.2007.23
   Shepperd M, 2012, INFORM SOFTWARE TECH, V54, P820, DOI 10.1016/j.infsof.2011.12.008
   Sheta A. F., 2006, J. Comput. Sci., V2, P118
   Sommerville I., 2010, SOFTWARE ENG
   Stensrud E, 2003, EMPIR SOFTW ENG, V8, P139, DOI 10.1023/A:1023010612345
   Storn R, 1997, J GLOBAL OPTIM, V11, P341, DOI 10.1023/A:1008202821328
   Trendowicz A., 2014, SOFTWARE PROJECT EFF, P277
   Vasilescu B, 2016, PROC INT CONF SOFTW, P994, DOI 10.1145/2884781.2884875
   Wahyudin D, 2007, INT J WEB INF SYST, V3, P116, DOI 10.1108/17440080710829252
   Walkerden F., 1999, Empirical Software Engineering, V4, P135, DOI 10.1023/A:1009872202035
   Whigham PA, 2015, ACM T SOFTW ENG METH, V24, DOI 10.1145/2738037
   Yu Y, 2016, INFORM SOFTWARE TECH, V74, P204, DOI 10.1016/j.infsof.2016.01.004
NR 81
TC 8
Z9 8
U1 0
U2 6
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUN 1
PY 2022
VL 48
IS 6
BP 1994
EP 2009
DI 10.1109/TSE.2020.3047072
PG 16
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 2D5IM
UT WOS:000811580600010
DA 2024-07-18
ER

PT J
AU Liu, D
   Jiang, H
   Li, XC
   Ren, ZL
   Qiao, L
   Ding, ZH
AF Liu, Dong
   Jiang, He
   Li, Xiaochen
   Ren, Zhilei
   Qiao, Lei
   Ding, Zuohua
TI DPWord2Vec: Better Representation of Design Patterns in Semantics
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Design pattern; word embedding; Word2Vec; semantic similarity; tag
   recommendation; design pattern selection
ID TAG RECOMMENDATION SYSTEM; SELECTION
AB With the plain text descriptions of design patterns, developers could better learn and understand the definitions and usage scenarios of design patterns. To facilitate the automatic usage of these descriptions, e.g., recommending design patterns by free-text queries, design patterns and natural languages should be adequately associated. Existing studies usually use texts in design pattern books as the representations of design patterns to calculate similarities with the queries. However, this way is problematic. Lots of information of design patterns may be absent from design pattern books and many words would be out of vocabulary due to the content limitation of these books. To overcome these issues, a more comprehensive method should be constructed to estimate the relatedness between design patterns and natural language words. Motivated by Word2Vec, in this study, we propose DPWord2Vec that embeds design patterns and natural language words into vectors simultaneously. We first build a corpus containing more than 400 thousand documents extracted from design pattern books, Wikipedia, and Stack Overflow. Next, we redefine the concept of context window to associate design patterns with words. Then, the design pattern and word vector representations are learnt by leveraging an advanced word embedding method. The learnt design pattern and word vectors can be universally used in textual description based design pattern tasks. An evaluation shows that DPWord2Vec outperforms the baseline algorithms by 24.2-120.9 percent in measuring the similarities between design patterns and words in terms of Spearman's rank correlation coefficient. Moreover, we adopt DPWord2Vec on two typical design pattern tasks. In the design pattern tag recommendation task, the DPWord2Vec-based method outperforms two state-of-the-art algorithms by 6.6 and 32.7 percent respectively when considering Recall@10. In the design pattern selection task, DPWord2Vec improves the existing methods by 6.5-70.7 percent in terms of MRR.
C1 [Liu, Dong; Li, Xiaochen] Dalian Univ Technol, Sch Software, Dalian 116620, Peoples R China.
   [Jiang, He; Ren, Zhilei] Dalian Univ Technol, Sch Software, Key Lab Ubiquitous Network & Serv Software Liaoni, Dalian 116620, Peoples R China.
   [Li, Xiaochen] Univ Luxembourg, Software Verificat & Validat Lab, L-1855 Luxembourg, Luxembourg.
   [Qiao, Lei] Beijing Inst Control Engn, Beijing 100190, Peoples R China.
   [Ding, Zuohua] Zhejiang Sci Tech Univ, Sch Informat Sci, Hangzhou 310018, Peoples R China.
C3 Dalian University of Technology; Dalian University of Technology;
   University of Luxembourg; Zhejiang Sci-Tech University
RP Jiang, H (corresponding author), Dalian Univ Technol, Sch Software, Key Lab Ubiquitous Network & Serv Software Liaoni, Dalian 116620, Peoples R China.
EM dongliu@mail.dlut.edu.cn; jianghe@dlut.edu.cn; xiaochen.li@uni.lu;
   zren@dlut.edu.cn; fly2moon@aliyun.com; zouhuading@hotmail.com
FU National Key Research and Development Program of China [2018YFB1003903];
   National Natural Science Foundation of China [61722202, 61772107,
   61751210]
FX This work was supported by the National Key Research and Development
   Program of China under Grant No. 2018YFB1003903, and the National
   Natural Science Foundation of China under Grant Nos. 61722202, 61772107,
   and 61751210.
CR Al-Kofahi J., 2010, Proc. Int'l Conf. Software Maintenance (ICSM 10), P1
   Alexander C., 1977, PATTERN LANGUAGE TOW
   Alon U, 2018, ACM SIGPLAN NOTICES, V53, P404, DOI [10.1145/3192366.3192412, 10.1145/3296979.3192412]
   [Anonymous], 2015, P 2015 C N AM CHAPT, DOI 10.3115/v1/N15-1186
   Barua A, 2014, EMPIR SOFTW ENG, V19, P619, DOI 10.1007/s10664-012-9231-y
   Bezdek James C., 1981, PATTERN RECOGN
   Bouassida N, 2015, J UNIVERS COMPUT SCI, V21, P1746
   Calefato F, 2018, EMPIR SOFTW ENG, V23, P1352, DOI 10.1007/s10664-017-9546-9
   Chen CY, 2021, IEEE T SOFTWARE ENG, V47, P432, DOI 10.1109/TSE.2019.2896123
   Chen CY, 2017, PROC INT CONF SOFTW, P450, DOI 10.1109/ICSE.2017.48
   CHURCH KW, 1990, 27TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, P76
   Cilibrasi RL, 2007, IEEE T KNOWL DATA EN, V19, P370, DOI 10.1109/TKDE.2007.48
   Cohen J., 1988, STAT POWER ANAL BEHA
   De Lucia A, 2018, ACM T SOFTW ENG METH, V26, DOI 10.1145/3176643
   DEERWESTER S, 1990, J AM SOC INFORM SCI, V41, P391, DOI 10.1002/(SICI)1097-4571(199009)41:6<391::AID-ASI1>3.0.CO;2-9
   Dit B, 2011, CONF PROC INT SYMP C, P11, DOI 10.1109/ICPC.2011.47
   Dodge Y., 2010, The concise encyclopedia of statistics
   Douglass B., 2003, REAL TIME DESIGN PAT
   Faitelson D, 2017, PROC INT CONF SOFTW, P735, DOI 10.1109/ICSE.2017.73
   Fowler M., 2002, Patterns of Enterprise Application Architecture
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   Gomes P, 2002, LECT NOTES ARTIF INT, V2416, P534
   Griffiths TL, 2004, P NATL ACAD SCI USA, V101, P5228, DOI 10.1073/pnas.0307752101
   Guo J, 2017, PROC INT CONF SOFTW, P3, DOI 10.1109/ICSE.2017.9
   Hasheminejad SMH, 2012, J SYST SOFTWARE, V85, P408, DOI 10.1016/j.jss.2011.08.031
   Hastie T., 2001, ELEMENTS STAT LEARNI, DOI 10.1007/978-0-387-84858-7_2
   Henkel J, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P163, DOI 10.1145/3236024.3236085
   Henninger Scott., 2007, Proceedings of the 14th Conference on Pattern Languages of Programs, PLoP '07, p14:1, DOI DOI 10.1145/1772070.1772087
   Hotho A., 2005, LDV FORUM, V20, P19, DOI DOI 10.1111/j.1365-2621.1978.tb09773.x
   Huang E. H, 2012, ANN M ASS COMP LING, P873
   Hussain S, 2017, APPL SOFT COMPUT, V58, P225, DOI 10.1016/j.asoc.2017.04.043
   Jiang H, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: COMPANION PROCEEDINGS (ICSE-COMPANION 2019), P232, DOI 10.1109/ICSE-Companion.2019.00090
   Keivanloo I, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P664, DOI 10.1145/2568225.2568292
   Kim DK, 2007, J VISUAL LANG COMPUT, V18, P560, DOI 10.1016/j.jvlc.2007.02.009
   Li XC, 2020, IEEE T SOFTWARE ENG, V46, P1081, DOI 10.1109/TSE.2018.2876006
   Liu J, 2018, AUTOMAT SOFTW ENG, V25, P675, DOI 10.1007/s10515-018-0239-4
   Luong Thang, 2013, P 17 C COMP NAT LANG, P104
   Mahmoud A, 2015, ACM T SOFTW ENG METH, V25, DOI 10.1145/2824251
   Mcmillan C, 2013, ACM T SOFTW ENG METH, V22, DOI 10.1145/2522920.2522930
   Mihalcea R., 2006, P 21 NAT C ART INT, V6, P775
   Mikolov T., 2013, ADV NEURAL INFORM PR, V26, P3111, DOI DOI 10.5555/2999792.2999959
   Muangon W., 2013, INT J COMPUTER APPL, V70, P16, DOI DOI 10.5120/12231-8433
   Nie LM, 2016, IEEE T SERV COMPUT, V9, P771, DOI 10.1109/TSC.2016.2560165
   Palma F., 2012, 2012 Third International Workshop on Recommendation Systems for Software Engineering (RSSE), P1, DOI 10.1109/RSSE.2012.6233399
   Panichella A, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P522, DOI 10.1109/ICSE.2013.6606598
   Pavlic L, 2014, COMPUT SCI INF SYST, V11, P645, DOI 10.2298/CSIS130824025P
   Pennington J., 2014, P 2014 C EMP METH NA, P1532
   Piech C, 2015, PR MACH LEARN RES, V37, P1093
   PORTER MF, 1980, PROGRAM-AUTOM LIBR, V14, P130, DOI 10.1108/eb046814
   Powers D. M. W., 1998, New methods in language processing and computational natural language learning, P151, DOI DOI 10.3115/1603899.1603924
   Le Q, 2014, PR MACH LEARN RES, V32, P1188
   Rosen C, 2016, EMPIR SOFTW ENG, V21, P1192, DOI 10.1007/s10664-015-9379-3
   Sawilowsky SS, 2009, J MOD APPL STAT METH, V8, P597, DOI 10.22237/jmasm/1257035100
   Schumacher M., 2005, Security Patterns: Integrating Security and Systems Engineering, V1st
   Siegel S., 1956, Nonparametric statistics for the behavioral sciences
   Nguyen T, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P551, DOI 10.1145/3236024.3236036
   Tian Y, 2014, 2014 SOFTWARE EVOLUTION WEEK - IEEE CONFERENCE ON SOFTWARE MAINTENANCE, REENGINEERING, AND REVERSE ENGINEERING (CSMR-WCRE), P44, DOI 10.1109/CSMR-WCRE.2014.6747213
   Nguyen TD, 2017, PROC INT CONF SOFTW, P438, DOI 10.1109/ICSE.2017.47
   Uysal AK, 2016, EXPERT SYST APPL, V43, P82, DOI 10.1016/j.eswa.2015.08.050
   Voorhees Ellen M., 2001, Trec, V7, P361, DOI DOI 10.1017/S1351324901002789
   Wang SW, 2018, EMPIR SOFTW ENG, V23, P800, DOI 10.1007/s10664-017-9533-1
   Wang SW, 2014, PROC IEEE INT CONF S, P291, DOI 10.1109/ICSME.2014.51
   Xia X, 2013, IEEE WORK CONF MIN S, P287, DOI 10.1109/MSR.2013.6624040
   Yang XL, 2016, J COMPUT SCI TECH-CH, V31, P910, DOI 10.1007/s11390-016-1672-0
   Ye DH, 2016, PROC IEEE INT CONF S, P389, DOI 10.1109/ICSME.2016.11
   Ye X, 2016, PROC INT CONF SOFTW, P404, DOI 10.1145/2884781.2884862
   Zhang C, 2012, IEEE T SOFTWARE ENG, V38, P1213, DOI 10.1109/TSE.2011.79
   Zhou C., 2015, arXiv preprint arXiv:151108629
   Zhou PY, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P272, DOI 10.1109/SANER.2017.7884628
   Zhu H, 2015, IEEE T SOFTWARE ENG, V41, P1138, DOI 10.1109/TSE.2015.2445341
NR 70
TC 2
Z9 2
U1 0
U2 14
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD APR 1
PY 2022
VL 48
IS 4
BP 1228
EP 1248
DI 10.1109/TSE.2020.3017336
PG 21
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 0N4HC
UT WOS:000782799700008
DA 2024-07-18
ER

PT J
AU Liu, H
   Shen, MZ
   Zhu, JQ
   Niu, N
   Li, G
   Zhang, L
AF Liu, Hui
   Shen, Mingzhu
   Zhu, Jiaqi
   Niu, Nan
   Li, Ge
   Zhang, Lu
TI Deep Learning Based Program Generation From Requirements Text: Are We
   There Yet?
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Software; Unified modeling language; Object oriented modeling;
   Syntactics; Tools; DSL; Deep learning; Software requirements; code
   generation; deep learning; data set
AB To release developers from time-consuming software development, many approaches have been proposed to generate source code automatically according to software requirements. With significant advances in deep learning and natural language processing, deep learning-based approaches are proposed to generate source code from natural language descriptions. The key insight is that given a large corpus of software requirements and their corresponding implementations, advanced deep learning techniques may learn how to translate software requirements into source code that fulfill such requirements. Although such approaches are reported to be highly accurate, they are evaluated on datasets that are rather small, lack of diversity, and significantly different from real-world software requirements. To this end, we build a large scale dataset that is composed of longer requirements as well as validated implementations. We evaluate the state-of-the-art approaches on this new dataset, and the results suggest that their performance on our dataset is significantly lower than that on existing datasets concerning the common metrics, i.e., BLEU. Evaluation results also suggest that the generated programs often contain syntactic and semantical errors, and none of them can pass even a single predefined test case. Further analysis reveals that the state-of-the-art approaches learn little from software requirements, and most of the successfully generated statements are popular statements in the training programs. Based on this finding, we propose a popularity-based approach that always generates the most popular statements in training programs regardless of the input (software requirements). Evaluation results suggest that none of the state-of-the-art approaches can outperform this simple statistics-based approach. As a conclusion, deep learning-based program generation requires significant improvement in the future, and our dataset may serve as a basis for future research in this direction.
C1 [Liu, Hui; Shen, Mingzhu; Zhu, Jiaqi] Beijing Inst Technol, Sch Comp Sci & Technol, Beijing 100081, Peoples R China.
   [Niu, Nan] Univ Cincinnati, Dept Elect Engn & Comp Sci, Cincinnati, OH 45221 USA.
   [Li, Ge; Zhang, Lu] Peking Univ, Key Lab High Confidence Software Technol, Minist Educ, Beijing 100871, Peoples R China.
C3 Beijing Institute of Technology; University System of Ohio; University
   of Cincinnati; Peking University
RP Liu, H (corresponding author), Beijing Inst Technol, Sch Comp Sci & Technol, Beijing 100081, Peoples R China.
EM liuhui08@bit.edu.cn; 3120181025@bit.edu.cn; zhujiaqi@bit.edu.cn;
   nan.niu@uc.edu; lige@pku.edu.cn; zhanglu@sei.pku.edu.cn
RI chen, xian/KHW-2227-2024
OI Zhang, Lu/0000-0001-8304-7055; Liu, Hui/0000-0002-3267-6801; Niu,
   Nan/0000-0001-5566-2368
FU National Key Research and Development Program of China [2017YFB1001803];
   National Natural Science Foundation of China [61772071, 61690205];
   National Science Foundation [CCF-1350487]
FX The authors would like to thank the associate editor and the anonymous
   reviewers for their insightful comments and constructive suggestions.
   This work was sponsored in part by the National Key Research and
   Development Program of China (2017YFB1001803), the National Natural
   Science Foundation of China (61772071, 61690205), and the National
   Science Foundation (CCF-1350487).
CR Allamanis M, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P38, DOI 10.1145/2786805.2786849
   Alon U, 2019, P ACM PROGRAM LANG, V3, DOI 10.1145/3290353
   Alur R, 2018, COMMUN ACM, V61, P84, DOI 10.1145/3208071
   Nguyen AT, 2018, PROC IEEE INT CONF S, P194, DOI 10.1109/ICSME.2018.00029
   [Anonymous], 2011, ACL
   [Anonymous], 2019, Stack Overflow
   [Anonymous], 2020, Natural Language Toolkit
   [Anonymous], 2018, P INT C LEARNING REP
   [Anonymous], 2016, MAGIC GATHERING
   [Anonymous], 2017, PROC 5 INT C LEARN R
   [Anonymous], 2001, P 12 EUROPEAN C MACH
   [Anonymous], 2019, PYTHON DOCUMENTS
   Bird S., 2009, NATURAL LANGUAGE PRO
   Booch G., The Unified Modelling Language User Guide
   Chen CY, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P665, DOI 10.1145/3180155.3180222
   Chen X., 2018, P INT C LEARN REPR
   Dahl D. A., 1994, HUMAN LANGUAGE TECHN, P43
   Deng Yuntian, 2017, PR MACH LEARN RES, P980
   Devlin J, 2017, PR MACH LEARN RES, V70
   Dick J., 2017, REQUIR ENG, VFourth
   Dong L, 2016, PROCEEDINGS OF THE 54TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, VOL 1, P33
   Dong L, 2018, PROCEEDINGS OF THE 56TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (ACL), VOL 1, P731
   Feng Y, 2018, ACM SIGPLAN NOTICES, V53, P420, DOI [10.1145/3192366.3192382, 10.1145/3296979.3192382]
   Feng Y, 2017, ACM SIGPLAN NOTICES, V52, P422, DOI [10.1145/3062341.3062351, 10.1145/3140587.3062351]
   Gulwani S, 2011, POPL 11: PROCEEDINGS OF THE 38TH ANNUAL ACM SIGPLAN-SIGACT SYMPOSIUM ON PRINCIPLES OF PROGRAMMING LANGUAGES, P317, DOI 10.1145/1926385.1926423
   Gvero T, 2015, ACM SIGPLAN NOTICES, V50, P416, DOI [10.1145/2858965.2814295, 10.1145/2814270.2814295]
   HAREL D, 1990, IEEE T SOFTWARE ENG, V16, P403, DOI 10.1109/32.54292
   Hayati SA, 2018, 2018 CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING (EMNLP 2018), P925
   Hindle A, 2012, PROC INT CONF SOFTW, P837, DOI 10.1109/ICSE.2012.6227135
   Jiang L, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P614, DOI 10.1109/ASE.2019.00062
   Karaivanov S., 2014, P 2014 ACM INT S NEW, P173, DOI 10.1145/2661136.2661148
   Kraemer FA, 2011, LECT NOTES COMPUT SC, V6981, P183, DOI 10.1007/978-3-642-24485-8_14
   Lee W, 2018, PROCEEDINGS OF THE 39TH ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, PLDI 2018, P436, DOI [10.1145/3192366.3192410, 10.1145/3296979.3192410]
   Lerman P. M., 1980, J R Stat Soc, C: Appl Stat, V29, P77, DOI DOI 10.2307/2346413
   LEVENSHT.VI, 1965, DOKL AKAD NAUK SSSR+, V163, P845
   Li J, 2018, PROCEEDINGS OF THE TWENTY-SEVENTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P4159
   Ling W, 2016, PROCEEDINGS OF THE 54TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, VOL 1, P599
   Linz P, 2011, An Introduction to Formal Languages and Automata
   Liu D., 2005, P ACL WORKSH INTR EX, P25
   Liu H, 2016, PROC INT CONF SOFTW, P1063, DOI 10.1145/2884781.2884841
   Manku GS, 2007, P 16 INT C WORLD WID, P141, DOI DOI 10.1145/1242572.1242592
   Mei H, 2018, SCI CHINA INFORM SCI, V61, DOI 10.1007/s11432-017-9355-3
   Mou LL, 2016, AAAI CONF ARTIF INTE, P1287
   Oda Y, 2015, IEEE INT CONF AUTOM, P574, DOI 10.1109/ASE.2015.36
   ORegan G, 2017, Concise guide to formal methods
   Papineni K, 2002, 40TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, PROCEEDINGS OF THE CONFERENCE, P311, DOI 10.3115/1073083.1073135
   Parisotto Emilio, 2017, P 5 INT C LEARN REPR
   Quirk C, 2015, PROCEEDINGS OF THE 53RD ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS AND THE 7TH INTERNATIONAL JOINT CONFERENCE ON NATURAL LANGUAGE PROCESSING, VOL 1, P878
   Rabinovich M, 2017, PROCEEDINGS OF THE 55TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (ACL 2017), VOL 1, P1139, DOI 10.18653/v1/P17-1105
   Raghothaman M, 2016, PROC INT CONF SOFTW, P357, DOI 10.1145/2884781.2884808
   Raychev V, 2014, ACM SIGPLAN NOTICES, V49, P419, DOI [10.1145/2594291.2594321, 10.1145/2666356.2594321]
   Shin R, 2019, P INT C LEARN REPR
   Shu CX, 2017, AAAI CONF ARTIF INTE, P1539
   Soley R, 2000, OMG001105
   Sommerville I., 1992, SOFTWARE ENG, V4th
   Stehnii A, 2018, THESIS UKRANIAN CATH
   Sun ZY, 2019, AAAI CONF ARTIF INTE, P7055
   Sunyé G, 2002, INFORM SYST, V27, P445, DOI 10.1016/S0306-4379(02)00014-5
   Wang Adrienne., 2014, P 2014 C EMP METH NA, P1284
   Whalen M. W., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, P725, DOI 10.1109/ICSE.2000.870481
   Whalen M. W., 1999, 14th IEEE International Conference on Automated Software Engineering, P315, DOI 10.1109/ASE.1999.802346
   WING JM, 1990, COMPUTER, V23, P8, DOI 10.1109/2.58215
   Wu Y, 2016, arXiv, P1
   Yan SH, 2020, PROCEEDINGS OF THE 2020 IEEE 27TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER '20), P344, DOI [10.1109/SANER48275.2020.9054840, 10.1109/saner48275.2020.9054840]
   Yao ZY, 2018, WEB CONFERENCE 2018: PROCEEDINGS OF THE WORLD WIDE WEB CONFERENCE (WWW2018), P1693, DOI 10.1145/3178876.3186081
   Yin PC, 2018, CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING (EMNLP 2018): PROCEEDINGS OF SYSTEM DEMONSTRATIONS, P7
   Yin PC, 2017, PROCEEDINGS OF THE 55TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (ACL 2017), VOL 1, P440, DOI 10.18653/v1/P17-1041
   Yin PC, 2018, IEEE WORK CONF MIN S, P476, DOI 10.1145/3196398.3196408
   Zelle JM, 1996, PROCEEDINGS OF THE THIRTEENTH NATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE AND THE EIGHTH INNOVATIVE APPLICATIONS OF ARTIFICIAL INTELLIGENCE CONFERENCE, VOLS 1 AND 2, P1050
   Zhang J, 2019, PROC INT CONF SOFTW, P783, DOI 10.1109/ICSE.2019.00086
NR 70
TC 17
Z9 17
U1 2
U2 19
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD APR 1
PY 2022
VL 48
IS 4
BP 1268
EP 1289
DI 10.1109/TSE.2020.3018481
PG 22
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 0N4HC
UT WOS:000782799700010
OA hybrid
DA 2024-07-18
ER

PT J
AU Su, GX
   Liu, L
   Zhang, MJ
   Rosenblum, DS
AF Su, Guoxin
   Liu, Li
   Zhang, Minjie
   Rosenblum, David S.
TI Quantitative Verification for Monitoring Event-Streaming Systems
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Task analysis; Probabilistic logic; Model checking; Measurement;
   Monitoring; Pipelines; Computational modeling; Discrete-time markov
   chain; event stream; parametric model checking; performance monitoring;
   probabilistic model checking; statistical inference
ID MODEL CHECKING
AB High-performance data streaming technologies are increasingly adopted in IT companies to support the integration of heterogeneous and possibly distributed applications. Compared with the traditional message queuing middleware, a streaming platform enables the implementation of event-streaming systems (ESS) which include not only complex queues but also pipelines that transform and react to the streams of data. By analysing the centralised data streams, one can evaluate the Quality-of-Service for other systems and components that produce or consume those streams. We consider the exploitation of probabilistic model checking as a performance monitoring technique for ESS systems. Probabilistic model checking is a mature, powerful verification technique with successful application in performance analysis. However, an ESS system may contain quantitative parameters that are determined by event streams observed in a certain period of time. In this paper, we present a novel theoretical framework called QV4M (meaning "quantitative verification for monitoring") for monitoring ESS systems, which is based on two recent methods of probabilistic model checking. QV4M assumes the parameters in a probabilistic system model as random variables and infers the statistical significance for the probabilistic model checking output. We also present an empirical evaluation of computational time and data cost for QV4M.
C1 [Su, Guoxin; Zhang, Minjie] Univ Wollongong, Sch Comp & Informat Technol, Wollongong, NSW 2522, Australia.
   [Liu, Li] Chongqing Univ, Sch Big Data & Software Engn, Chongqing 400044, Peoples R China.
   [Rosenblum, David S.] Natl Univ Singapore, Sch Comp, Dept Comp Sci, Singapore 119077, Singapore.
C3 University of Wollongong; Chongqing University; National University of
   Singapore
RP Liu, L (corresponding author), Chongqing Univ, Sch Big Data & Software Engn, Chongqing 400044, Peoples R China.
EM guoxin@uow.edu.au; dcsliuli@cqu.edu.cn; minjie@uow.edu.au;
   david@comp.nus.edu.sg
RI Su, Gang/G-6092-2011
OI Su, Guoxin/0000-0002-2087-4894; Liu, Li/0000-0002-4776-5292
FU National Major Science and Technology Projects of China [2018AAA0100703,
   2018AAA0100700]; National Natural Science Foundation of China [61502260,
   61977012]; Singapore Ministry of Education [MOE2015-T2-1-137]
FX This work was partially supported by the National Major Science and
   Technology Projects of China under grants 2018AAA0100703 and
   2018AAA0100700, the National Natural Science Foundation of China under
   grants 61502260 and 61977012, and the Singapore Ministry of Education
   under grant MOE2015-T2-1-137.
CR [Anonymous], 2014, P 10 INT ACM SIGS C
   Baier C, 2008, PRINCIPLES OF MODEL CHECKING, P1
   Benveniste A, 2014, FORM METHOD SYST DES, V44, P1, DOI 10.1007/s10703-013-0191-7
   Calinescu R, 2016, IEEE T RELIAB, V65, P107, DOI 10.1109/TR.2015.2452931
   Calinescu R, 2011, IEEE T SOFTWARE ENG, V37, P387, DOI 10.1109/TSE.2010.92
   Calinescu R, 2009, PROC INT CONF SOFTW, P100, DOI 10.1109/ICSE.2009.5070512
   Cheng S.-W., 2006, INT WORKSH SELF AD S, P2, DOI DOI 10.1145/1137677.1137679
   Cortellessa V, 2002, J LOGIC ALGEBR PROGR, V51, P77, DOI 10.1016/S1567-8326(01)00016-9
   Daws C, 2005, LECT NOTES COMPUT SC, V3407, P280
   Dehnert C, 2017, LECT NOTES COMPUT SC, V10427, P592, DOI 10.1007/978-3-319-63390-9_31
   Dehnert C, 2015, LECT NOTES COMPUT SC, V9206, P214, DOI 10.1007/978-3-319-21690-4_13
   Dunning T., 2016, STREAMING ARCHITECTU
   Filieri A, 2016, IEEE T SOFTWARE ENG, V42, P75, DOI 10.1109/TSE.2015.2421318
   Filieri A, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P200, DOI 10.1109/ICSE.2015.41
   Ghezzi C, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P33, DOI 10.1109/ICSE.2013.6606549
   Hahn Ernst Moritz, 2011, International Journal on Software Tools for Technology Transfer, V13, P3, DOI 10.1007/s10009-010-0146-x
   Hérault T, 2004, LECT NOTES COMPUT SC, V2937, P73
   Hogg RV., 2005, Introduction to mathematical statistics
   Jansen N, 2014, LECT NOTES COMPUT SC, V8657, P404, DOI 10.1007/978-3-319-10696-0_31
   Katoen JP, 2016, PROCEEDINGS OF THE 31ST ANNUAL ACM-IEEE SYMPOSIUM ON LOGIC IN COMPUTER SCIENCE (LICS 2016), P31, DOI 10.1145/2933575.2934574
   Kwiatkowska Marta, 2011, Computer Aided Verification. Proceedings 23rd International Conference, CAV 2011, P585, DOI 10.1007/978-3-642-22110-1_47
   Llerena YRS, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P454, DOI 10.1145/3106237.3106301
   Quatmann T, 2016, LECT NOTES COMPUT SC, V9938, P50, DOI 10.1007/978-3-319-46520-3_4
   Rodrigues G, 2005, LECT NOTES COMPUT SC, V3442, P111, DOI 10.1007/978-3-540-31984-9_9
   Stewart W.J., 1994, Introduction to the Numerical Solution of Markov Chains
   Su G, 2017, PROC INT CONF SOFTW, P484, DOI 10.1109/ICSE.2017.51
   Su GX, 2016, PROC INT CONF SOFTW, P73, DOI 10.1145/2884781.2884814
   Su GX, 2016, IEEE T SOFTWARE ENG, V42, P623, DOI 10.1109/TSE.2015.2508444
   Sun J, 2009, LECT NOTES COMPUT SC, V5643, P709, DOI 10.1007/978-3-642-02658-4_59
   Taolue Chen, 2014, CONCUR 2014 - Concurrency Theory. 25th International Conference, CONCUR 2014. Proceedings: LNCS 8704, P218, DOI 10.1007/978-3-662-44584-6_16
   Tarasyuk Anton, 2012, Integrated Formal Methods. Proceedings 9th International Conference, IFM 2012, P237, DOI 10.1007/978-3-642-30729-4_17
   Younes HLS, 2006, INFORM COMPUT, V204, P1368, DOI 10.1016/j.ic.2006.05.002
NR 32
TC 1
Z9 2
U1 0
U2 9
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD FEB 1
PY 2022
VL 48
IS 2
BP 538
EP 550
DI 10.1109/TSE.2020.2996033
PG 13
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA ZB4EB
UT WOS:000756796100011
OA Green Published
DA 2024-07-18
ER

PT J
AU Wang, WH
   Zhang, YQ
   Sui, YL
   Wan, Y
   Zhao, Z
   Wu, J
   Yu, PS
   Xu, GD
AF Wang, Wenhua
   Zhang, Yuqun
   Sui, Yulei
   Wan, Yao
   Zhao, Zhou
   Wu, Jian
   Yu, Philip S.
   Xu, Guandong
TI Reinforcement-Learning-Guided Source Code Summarization Using
   Hierarchical Attention
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Code summarization; hierarchical attention; reinforcement learning
ID NEURAL-NETWORKS; GO
AB Code summarization (aka comment generation) provides a high-level natural language description of the function performed by code, which can benefit the software maintenance, code categorization and retrieval. To the best of our knowledge, the state-of-the-art approaches follow an encoder-decoder framework which encodes source code into a hidden space and later decodes it into a natural language space. Such approaches suffer from the following drawbacks: (a) they are mainly input by representing code as a sequence of tokens while ignoring code hierarchy; (b) most of the encoders only input simple features (e.g., tokens) while ignoring the features that can help capture the correlations between comments and code; (c) the decoders are typically trained to predict subsequent words by maximizing the likelihood of subsequent ground truth words, while in real world, they are excepted to generate the entire word sequence from scratch. As a result, such drawbacks lead to inferior and inconsistent comment generation accuracy. To address the above limitations, this paper presents a new code summarization approach using hierarchical attention network by incorporating multiple code features, including type-augmented abstract syntax trees and program control flows. Such features, along with plain code sequences, are injected into a deep reinforcement learning (DRL) framework (e.g., actor-critic network) for comment generation. Our approach assigns weights (pays "attention") to tokens and statements when constructing the code representation to reflect the hierarchical code structure under different contexts regarding code features (e.g., control flows and abstract syntax trees). Our reinforcement learning mechanism further strengthens the prediction results through the actor network and the critic network, where the actor network provides the confidence of predicting subsequent words based on the current state, and the critic network computes the reward values of all the possible extensions of the current state to provide global guidance for explorations. Eventually, we employ an advantage reward to train both networks and conduct a set of experiments on a real-world dataset. The experimental results demonstrate that our approach outperforms the baselines by around 22 to 45 percent in BLEU-1 and outperforms the state-of-the-art approaches by around 5 to 60 percent in terms of S-BLEU and C-BLEU.
C1 [Wang, Wenhua; Zhang, Yuqun] Southern Univ Sci & Technol, Dept Comp Sci & Engn, Shenzhen 518055, Guangdong, Peoples R China.
   [Wang, Wenhua; Sui, Yulei; Xu, Guandong] Univ Technol, Sch Comp Sci, Sydney, NSW 2008, Australia.
   [Wan, Yao; Zhao, Zhou; Wu, Jian] Zhejiang Univ, Hangzhou 310027, Zhejiang, Peoples R China.
   [Yu, Philip S.] Univ Illinois, Chicago, IL 60607 USA.
C3 Southern University of Science & Technology; University of Technology
   Sydney; Zhejiang University; University of Illinois System; University
   of Illinois Chicago; University of Illinois Chicago Hospital
RP Zhang, YQ (corresponding author), Southern Univ Sci & Technol, Dept Comp Sci & Engn, Shenzhen 518055, Guangdong, Peoples R China.; Sui, YL; Xu, GD (corresponding author), Univ Technol, Sch Comp Sci, Sydney, NSW 2008, Australia.
EM 11760006@mail.sustech.edu.cn; zhangyq@sustech.edu.cn;
   Yulei.Sui@uts.edu.au; wanyao@zju.edu.cn; Zhaozhou@zju.edu.cn;
   wujian2000@zju.edu.an; psyu@uic.edu; Guandong.Xu@uts.edu.au
RI Sui, Yulei/AAL-5915-2020; Xu, Guandong/HSH-3463-2023; Zhao,
   zhuo/JYO-7894-2024; zhao, zhao/JAC-1686-2023
OI Sui, Yulei/0000-0002-9510-6574; Xu, Guandong/0000-0003-4493-6663; Yu,
   Philip/0000-0002-3491-5968
FU National Natural Science Foundation of China [61902169]; Shenzhen
   Science and Technology Program [KQTD2016112514355531]; Science and
   Technology Innovation Committee Foundation of Shenzhen
   [JCYJ20170817110848086]; Australia Research Council [DP200101374,
   LP170100891, DE170101081, DP200101328]; National key R&D program sub
   project "large scale cross-modality medical knowledge management"
   [2018AAA0102100]; Zhejiang public welfare technology research project
   [LGF20F020013]; National Key RD Program Project of "Software Testing
   Evaluation Method Research and its Database Development on Artificial
   IntelligenceMedical Information System" under the Fifth Electronics
   Research Institute of the Ministry of Industry and Information T
   [2019YFC0118802]; National Key R&D Program Project of "Full Life Cycle
   Detection Platform and Application Demonstration of Medical Artificial
   Intelligence Product" under the National Institutes for Food and Drug
   Control [2019YFB1404802]; NSF [III-1526499, III-1763325, III-1909323,
   CNS-1930941]; Australian Research Council [DE170101081] Funding Source:
   Australian Research Council
FX This work was partially supported by the National Natural Science
   Foundation of China (Grant No. 61902169), Shenzhen Science and
   Technology Program (Grant No. KQTD2016112514355531), Science and
   Technology Innovation Committee Foundation of Shenzhen (Grant No.
   JCYJ20170817110848086) and Australia Research Council (Grant No.
   DP200101374, LP170100891, DE170101081 and DP200101328), the National key
   R&D program sub project "large scale cross-modality medical knowledge
   management" under grantNo. 2018AAA0102100, the Zhejiang public welfare
   technology research project under grant No. LGF20F020013, the National
   Key R&D Program Project of "Software Testing Evaluation Method Research
   and its Database Development on Artificial IntelligenceMedical
   Information System" under the Fifth Electronics Research Institute of
   the Ministry of Industry and Information Technology (No.
   2019YFC0118802), and the National Key R&D Program Project of "Full Life
   Cycle Detection Platform and Application Demonstration of Medical
   Artificial Intelligence Product" under the National Institutes for Food
   and Drug Control (No. 2019YFB1404802), NSF under grants III-1526499,
   III-1763325, III-1909323, andCNS-1930941.
CR Abrahamsson P., 2002, Agile Software Development Methods: Review and Analysis
   Aho Alfred V., 1986, Addison Wesley, V7, P9
   Allamanis M, 2016, PR MACH LEARN RES, V48
   Allamanis M, 2015, PR MACH LEARN RES, V37, P2123
   Alon U., 2018, CODE2SEQ GENERATING
   Nguyen AT, 2017, PROC IEEE ACM INT C, P164, DOI 10.1109/ICSE-C.2017.118
   [Anonymous], 2017, P 2017 C EMP METH NA
   [Anonymous], 2015, P 2015 C EMP METH NA, DOI [10.18653/v1/D15-1166, DOI 10.48550/ARXIV.1508.04025]
   [Anonymous], 2012, P 29 INT C INT C MAC
   Bahdanau D, 2016, Arxiv, DOI [arXiv:1409.0473, 10.48550/arXiv.1409.0473]
   Banerjee S, 2005, ACL WORKSHOP INTRINS, P65
   Barone Antonio Valerio Miceli, 2017, P 8 INT JOINT C NAT, V2, P314
   Barr ET, 2015, IEEE T SOFTWARE ENG, V41, P507, DOI 10.1109/TSE.2014.2372785
   Baxter ID, 1998, PROC IEEE INT CONF S, P368, DOI 10.1109/ICSM.1998.738528
   Chen QY, 2018, IEEE INT CONF AUTOM, P826, DOI 10.1145/3238147.3240471
   Dam H. K., 2016, FSE 2016, P1
   de Souza S.C.B., 2005, P 23 ANN INT C DES C, P68, DOI [10.1145/1085313, 10.1145/1085313.1085331]
   Duchi J, 2011, J MACH LEARN RES, V12, P2121
   Fan LL, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P408, DOI 10.1145/3180155.3180222
   Ghanbari A, 2019, PROCEEDINGS OF THE 28TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA '19), P19, DOI 10.1145/3293882.3330559
   Grave Edouard, 2016, ARXIV161204426
   Gu XD, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P631, DOI 10.1145/2950290.2950334
   Haije T., 2016, INF SOFTW TECHNOL, V55, P258
   Hochreiter S, 1997, NEURAL COMPUT, V9, P1735, DOI [10.1162/neco.1997.9.1.1, 10.1007/978-3-642-24797-2]
   Hu DC, 2020, ADV INTELL SYST COMP, V1038, P432, DOI 10.1007/978-3-030-29513-4_31
   Hu X, 2018, PROCEEDINGS OF THE TWENTY-SEVENTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P2269
   Hu X, 2018, INT C PROGRAM COMPRE, P200, DOI 10.1145/3196321.3196334
   Hu Xing, 2019, EMPIR SOFTW ENG, P1
   Hua JR, 2019, INT J SOFTW TOOLS TE, V21, P249, DOI 10.1007/s10009-019-00512-8
   Husheng Zhou, 2020, 2020 IEEE/ACM 42nd International Conference on Software Engineering (ICSE), P347, DOI 10.1145/3377811.3380422
   Iyer S, 2016, PROCEEDINGS OF THE 54TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, VOL 1, P2073
   Jain S, 2019, 2019 CONFERENCE OF THE NORTH AMERICAN CHAPTER OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS: HUMAN LANGUAGE TECHNOLOGIES (NAACL HLT 2019), VOL. 1, P3543
   Kajko-Mattsson M, 2005, EMPIR SOFTW ENG, V10, P31, DOI 10.1023/B:LIDA.0000048322.42751.ca
   Kalchbrenner Nal, 2016, ARXIV161010099
   Keneshloo Y, 2020, IEEE T NEUR NET LEAR, V31, P2469, DOI 10.1109/TNNLS.2019.2929141
   Kilickaya M, 2017, 15TH CONFERENCE OF THE EUROPEAN CHAPTER OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (EACL 2017), VOL 1: LONG PAPERS, P199
   Konda VR, 2003, SIAM J CONTROL OPTIM, V42, P1143, DOI 10.1137/S0363012901385691
   Konda VR, 2000, ADV NEUR IN, V12, P1008
   Le TDB, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P579, DOI 10.1145/2786805.2786880
   Li J., 2016, EMNLP, DOI [DOI 10.18653/V1/D16-1127.URL, 10.18653/v1/D16-1127, DOI 10.18653/V1/D16-1127]
   Li JH, 2017, PROCEEDINGS OF THE 55TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (ACL 2017), VOL 1, P688, DOI 10.18653/v1/P17-1064
   Li X, 2019, PROCEEDINGS OF THE 28TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA '19), P169, DOI 10.1145/3293882.3330574
   Li Y., 2016, P 4 INT C LEARNING R
   Lientz B. P., 1980, Software maintenance management
   Lin CY, 2004, ROUGE: A Package for Automatic Evaluation of Summaries, P74, DOI DOI 10.1253/JCJ.34.1213
   Ling W, 2016, PROCEEDINGS OF THE 54TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, VOL 1, P599
   Liu ZX, 2018, IEEE INT CONF AUTOM, P373, DOI 10.1145/3238147.3238190
   Maddison CJ, 2014, PR MACH LEARN RES, V32, P649
   Mnih V, 2015, NATURE, V518, P529, DOI 10.1038/nature14236
   Mou LL, 2016, AAAI CONF ARTIF INTE, P1287
   Movshovitz-Attias Dana, 2013, ACL
   Narayanan A., 2017, Graph2vec: Learning distributed representations of graphs
   Nguyen Khanh, 2017, P 2017 C EMP METH NA, P1464, DOI [DOI 10.18653/V1/D17-1153, 10.18653/v1/D17- 1153]
   Nie LM, 2016, IEEE T SERV COMPUT, V9, P771, DOI 10.1109/TSC.2016.2560165
   Oda Y, 2015, IEEE INT CONF AUTOM, P574, DOI 10.1109/ASE.2015.36
   Papineni K, 2002, 40TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, PROCEEDINGS OF THE CONFERENCE, P311, DOI 10.3115/1073083.1073135
   Parisotto E., 2016, NEUROSYMBOLIC PROGRA
   Piech C, 2015, PR MACH LEARN RES, V37, P1093
   PIRINEN T.A., 2019, The fifth Workshop on Computational Linguistics for Uralic Languages, P104
   Ponti EM, 2018, PROCEEDINGS OF THE 56TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (ACL), VOL 1, P1531
   Pouget-Abadie J., 2014, P SSST 8 8 WORKSH SY, P78
   Ranzato M., 2015, Sequence level training with recurrent neural networks
   Ren Z, 2017, PROC CVPR IEEE, P1151, DOI 10.1109/CVPR.2017.128
   Rosenfeld R, 2000, P IEEE, V88, P1270, DOI 10.1109/5.880083
   Saha RK, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P268, DOI 10.1109/ICSE.2015.47
   Sai Zhang, 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P63, DOI 10.1109/ASE.2011.6100145
   Schmidhuber J, 2015, NEURAL NETWORKS, V61, P85, DOI 10.1016/j.neunet.2014.09.003
   Shi HY, 2018, 2018 CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING (EMNLP 2018), P4631
   Silver D, 2016, NATURE, V529, P484, DOI 10.1038/nature16961
   Sridhara Giriprasad, 2010, 25 IEEEACM INT C AUT, P43
   Sutskever I, 2014, ADV NEUR IN, V27
   Sutton R. S., 1998, Adaptive Computation and Machine Learning
   Sutton RS, 2000, ADV NEUR IN, V12, P1057
   Sutton RS, 1998, Introduction to reinforcement learning, V135
   Tan SH, 2017, PROC IEEE ACM INT C, P180, DOI 10.1109/ICSE-C.2017.76
   Tan SH, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P727, DOI 10.1145/2950290.2950295
   Wan Y, 2018, IEEE INT CONF AUTOM, P397, DOI 10.1145/3238147.3238206
   Wang S, 2016, IEEE INT CONF AUTOM, P708, DOI 10.1145/2970276.2970341
   WATKINS CJCH, 1992, MACH LEARN, V8, P279, DOI 10.1007/BF00992698
   WILLIAMS RJ, 1992, MACH LEARN, V8, P229, DOI 10.1007/BF00992696
   Wiseman Sam, 2016, EMNLP, P1296, DOI DOI 10.18653/V1/D16-1137
   Wu M., 2019, CHARACTERING DETECTI
   Wu MY, 2020, PROC INT CONF SOFTW, P937, DOI 10.1145/3377811.3380358
   Wu MY, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P760, DOI 10.1109/ASE.2019.00075
   Xiong YF, 2017, PROC INT CONF SOFTW, P416, DOI 10.1109/ICSE.2017.45
   Yang D, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P391, DOI [10.1109/MSR.2016.047, 10.1145/2901739.2901767]
   Yang Z., 2016, P 2016 C N AM CHAPT, P1480, DOI [DOI 10.18653/V1/N16-1174, 10.18653/v1/n16-1174]
   Yao ZY, 2019, WEB CONFERENCE 2019: PROCEEDINGS OF THE WORLD WIDE WEB CONFERENCE (WWW 2019), P2203, DOI 10.1145/3308558.3313632
   Yen IL, 2017, 2017 11TH IEEE SYMPOSIUM ON SERVICE-ORIENTED SYSTEM ENGINEERING (SOSE), P1, DOI 10.1109/SOSE.2017.26
   Yu LT, 2017, AAAI CONF ARTIF INTE, P2852
   Zhang JM, 2019, IEEE INT CONF SOFTW, P252, DOI 10.1109/ICST.2019.00033
   Zhang LM, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P199, DOI 10.1145/3180155.3180198
   Zhang MS, 2021, IEEE T SOFTWARE ENG, V47, P1089, DOI 10.1109/TSE.2019.2911283
   Zhang MS, 2018, IEEE INT CONF AUTOM, P132, DOI 10.1145/3238147.3238187
   Zheng TL, 2019, WORLD WIDE WEB, V22, P275, DOI 10.1007/s11280-018-0562-5
   Zhu YK, 2017, INT CONF ACOUST SPEE, P5335, DOI 10.1109/ICASSP.2017.7953175
NR 96
TC 46
Z9 48
U1 2
U2 27
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JAN 1
PY 2022
VL 48
IS 1
BP 102
EP 119
DI 10.1109/TSE.2020.2979701
PG 18
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA YG0HJ
UT WOS:000742179000006
OA Green Published, hybrid
DA 2024-07-18
ER

PT J
AU Yan, M
   Xia, X
   Fan, YR
   Hassan, AE
   Lo, D
   Li, SP
AF Yan, Meng
   Xia, Xin
   Fan, Yuanrui
   Hassan, Ahmed E.
   Lo, David
   Li, Shanping
TI Just-In-Time Defect Identification and Localization: A Two-Phase
   Framework
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Defect localization; just-in-time; defect identification; software
   naturalness
ID BUGS
AB Defect localization aims to locate buggy program elements (e.g., buggy files, methods or lines of code) based on defect symptoms, e.g., bug reports or program spectrum. However, when we receive the defect symptoms, the defect has been exposed and negative impacts have been introduced. Thus, one challenging task is: whether we can locate buggy program prior to the appearance of the defect symptom (e.g., when buggy program elements are being committed to a version control system). We refer to this type of defect localization as " Just-In-Time (JIT) Defect localization". Although many prior studies have proposed various JIT defect identification methods to identify whether a new change is buggy, these prior methods do not locate the suspicious positions. Thus, JIT defect localization is the next step of JIT defect identification (i.e., after a buggy change is identified, suspicious source code lines are located). To address this problem, we propose a two-phase framework, i.e., JIT defect identification and JIT defect localization. Given a new change, JIT defect identification will identify it as buggy change or clean change first. If a new change is identified as buggy, JIT defect localization will rank the source code lines introduced by the new change according to their suspiciousness scores. The source code lines ranked at the top of the list are estimated as the defect location. For JIT defect identification phase, we use 14 change-level features to build a classifier by following existing approach. For JIT defect localization phase, we propose a JIT defect localization approach that leverages software naturalness with the N-gram model. To evaluate the proposed framework, we conduct an empirical study on 14 open source projects with a total of 177,250 changes. The results show that software naturalness is effective for our JIT defect localization. Our model achieves a reasonable performance, and outperforms the two baselines (i.e., random guess and a static bug finder (i.e., PMD)) by a substantial margin in terms of four ranking measures.
C1 [Yan, Meng] Chongqing Univ, Sch Big Data & Software Engn, Chongqing 400000, Peoples R China.
   [Yan, Meng; Fan, Yuanrui; Li, Shanping] Zhejiang Univ, Coll Comp Sci & Technol, Hangzhou 310027, Zhejiang, Peoples R China.
   [Yan, Meng] PengCheng Lab, Shenzhe 518066, Guangdong, Peoples R China.
   [Xia, Xin] Monash Univ, Fac Informat Technol, Melbourne, Vic 3800, Australia.
   [Hassan, Ahmed E.] Queens Univ, Sch Comp, Kingston, ON K7L 3N6, Canada.
   [Lo, David] Singapore Management Univ, Sch Informat Syst, Singapore 188065, Singapore.
C3 Chongqing University; Zhejiang University; Monash University; Queens
   University - Canada; Singapore Management University
RP Xia, X (corresponding author), Monash Univ, Fac Informat Technol, Melbourne, Vic 3800, Australia.
EM mengy@cqu.edu.cn; xin.xia@monash.edu; yrfan@zju.edu.cn;
   ahmed@cs.queensu.ca; davidlo@smu.edu.sg; shan@zju.edu.cn
RI KHALIFA, AHMED khalifa/HKF-2246-2023; Lo, David/A-2493-2012
OI KHALIFA, AHMED khalifa/0000-0002-2918-7572; Fan,
   Yuanrui/0000-0001-5234-0152; Yan, Meng/0000-0002-9538-9121; Lo,
   David/0000-0002-4367-7201; Xia, Xin/0000-0002-6302-3256
FU Australian Research Council's Discovery Early Career Researcher Award
   (DECRA) [DE200100021]; China Postdoctoral Science Foundation
   [2019T120517]; Australian Research Council [DE200100021] Funding Source:
   Australian Research Council
FX This research was partially supported by the Australian Research
   Council's Discovery Early Career Researcher Award (DECRA) funding scheme
   (DE200100021) and the China Postdoctoral Science Foundation
   (2019T120517). Additionally, we are very grateful to Hellendoorn and
   Devanbu [24] and Rosen et al. [10] for sharing their scripts.
CR Abdi H, 2007, ENCY MEASUREMENT STA, P103, DOI DOI 10.4135/9781412952644
   Abreu R, 2009, J SYST SOFTWARE, V82, P1780, DOI 10.1016/j.jss.2009.06.035
   Allamanis M, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P281, DOI 10.1145/2635868.2635883
   Lam AN, 2017, INT C PROGRAM COMPRE, P218, DOI 10.1109/ICPC.2017.24
   Lam AN, 2015, IEEE INT CONF AUTOM, P476, DOI 10.1109/ASE.2015.73
   Arong, 2014, PROCEEDINGS OF 2014 IEEE INTERNATIONAL CONFERENCE ON PROGRESS IN INFORMATICS AND COMPUTING (PIC), P51, DOI 10.1109/PIC.2014.6972294
   Campbell J. C., 2014, P 11 WORK C MIN SOFT, P252, DOI [DOI 10.1145/2597073.2597102, 10.1145/2597073.2597102]
   Neto EC, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P380, DOI 10.1109/SANER.2018.8330225
   Chen SF, 1999, COMPUT SPEECH LANG, V13, P359, DOI 10.1006/csla.1999.0128
   Christopher D. M., 2008, INTRO INFORM RETRIEV
   Cliff N., 2014, ORDINAL METHODS BEHA
   Copeland T, 2005, PMD APPL EASY TO USE, V10
   da Costa DA, 2017, IEEE T SOFTWARE ENG, V43, P641, DOI 10.1109/TSE.2016.2616306
   Fan YR, 2021, IEEE T SOFTWARE ENG, V47, P1559, DOI 10.1109/TSE.2019.2929761
   Fan YR, 2018, EMPIR SOFTW ENG, V23, P3346, DOI 10.1007/s10664-018-9602-0
   Fu W, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P72, DOI 10.1145/3106237.3106257
   Hassan AE, 2004, 7TH INTERNATIONAL WORKSHOP ON PRINCIPLES OF SOFTWARE EVOLUTION, P76, DOI 10.1109/IWPSE.2004.1334771
   Hassan F, 2017, INT SYMP EMP SOFTWAR, P38, DOI 10.1109/ESEM.2017.11
   Hellendoorn VJ, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P763, DOI 10.1145/3106237.3106290
   Hindle A, 2012, PROC INT CONF SOFTW, P837, DOI 10.1109/ICSE.2012.6227135
   Hintze JL, 1998, AM STAT, V52, P181, DOI 10.2307/2685478
   Hovemeyer D, 2004, ACM SIGPLAN NOTICES, V39, P92, DOI 10.1145/1052883.1052895
   Huang Q, 2019, EMPIR SOFTW ENG, V24, P2823, DOI 10.1007/s10664-018-9661-2
   Huang Q, 2017, PROC IEEE INT CONF S, P159, DOI 10.1109/ICSME.2017.51
   Jones J.A., 2005, P 20 IEEE ACM INT C, P273, DOI [10.1145/1101908.1101949, DOI 10.1145/1101908.1101949]
   Kamei Y., 2010, Proceedings of the 26th International Conference on Software Maintenance, P1, DOI 10.1109/ICSM.2010.5609530
   Kamei Y, 2013, IEEE T SOFTWARE ENG, V39, P757, DOI 10.1109/TSE.2012.70
   Kim S, 2008, IEEE T SOFTWARE ENG, V34, P181, DOI 10.1109/TSE.2007.70773
   Kim S, 2007, PROC INT CONF SOFTW, P489
   Kim S, 2006, IEEE INT CONF AUTOM, P81
   Liu C, 2005, SIAM PROC S, P286, DOI 10.1145/1081706.1081753
   Lukins SK, 2010, INFORM SOFTWARE TECH, V52, P972, DOI 10.1016/j.infsof.2010.04.002
   MANN HB, 1947, ANN MATH STAT, V18, P50, DOI 10.1214/aoms/1177730491
   Mockus A, 2000, BELL LABS TECH J, V5, P169, DOI 10.1002/bltj.2229
   Munaiah N, 2017, EMPIR SOFTW ENG, V22, P3219, DOI 10.1007/s10664-017-9512-6
   Nayrolles M, 2018, IEEE WORK CONF MIN S, P153, DOI 10.1145/3196398.3196438
   Nugroho YS, 2020, EMPIR SOFTW ENG, V25, P790, DOI 10.1007/s10664-019-09772-z
   Pascarella L, 2019, J SYST SOFTWARE, V150, P22, DOI 10.1016/j.jss.2018.12.001
   Poshyvanyk D, 2007, IEEE T SOFTWARE ENG, V33, P420, DOI [10.1109/TSE.2007.1016, 10.1109/TSE.2007.1016.]
   Rahman F, 2012, Proceedings of the ACM SIGSOFT 20th International Symposium on the Foundations of Software Engineering, FSE '12, P61
   Rahman F, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P424, DOI 10.1145/2568225.2568269
   Rahman MM, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P349, DOI 10.1109/SANER.2016.80
   Rao S., 2011, P 8 WORK C MIN SOFTW, P43
   Ray B, 2016, PROC INT CONF SOFTW, P428, DOI 10.1145/2884781.2884848
   Raychev V, 2014, ACM SIGPLAN NOTICES, V49, P419, DOI [10.1145/2594291.2594321, 10.1145/2666356.2594321]
   Rosen C, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P966, DOI 10.1145/2786805.2803183
   Saha RK, 2013, IEEE INT CONF AUTOM, P345, DOI 10.1109/ASE.2013.6693093
   Santos EA, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P311, DOI 10.1109/SANER.2018.8330219
   Shihab E., 2012, P ACM SIGSOFT 20 INT, P1
   Shin Yoo, 2012, Search Based Software Engineering. Proceedings of the 4th International Symposium (SSBSE 2012), P244, DOI 10.1007/978-3-642-33119-0_18
   Sliwerski J., 2005, ACM SIGSOFT SOFTWARE, P1, DOI DOI 10.1145/1082983.1083147
   Hoang T, 2019, IEEE T SOFTWARE ENG, V45, P1002, DOI 10.1109/TSE.2018.2810892
   Tu ZP, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P269, DOI 10.1145/2635868.2635875
   Tufano M, 2017, J SOFTW-EVOL PROC, V29, DOI 10.1002/smr.1838
   Wang S, 2016, IEEE INT CONF AUTOM, P708, DOI 10.1145/2970276.2970341
   Wen M, 2016, IEEE INT CONF AUTOM, P262, DOI 10.1145/2970276.2970359
   WILCOXON F, 1945, BIOMETRICS BULL, V1, P80, DOI 10.1093/jee/39.2.269
   Xia X, 2016, ESEM'16: PROCEEDINGS OF THE 10TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, DOI 10.1145/2961111.2962606
   Xiaoyuan Xie, 2013, Search Based Software Engineering. 5th International Symposium, SSBSE 2013. Proceedings: LNCS 8084, P224, DOI 10.1007/978-3-642-39742-4_17
   Xie XY, 2013, ACM T SOFTW ENG METH, V22, DOI 10.1145/2522920.2522924
   Xu BW, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P413, DOI [10.1109/MSR.2016.049, 10.1145/2901739.2901746]
   Yang XL, 2017, INFORM SOFTWARE TECH, V87, P206, DOI 10.1016/j.infsof.2017.03.007
   Yang XL, 2015, 2015 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE SECURITY AND RELIABILITY (QRS 2015), P17, DOI 10.1109/QRS.2015.14
   Yang YB, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P157, DOI 10.1145/2950290.2950353
   Youm KC, 2017, INFORM SOFTWARE TECH, V82, P177, DOI 10.1016/j.infsof.2016.11.002
   Zhou J, 2012, PROC INT CONF SOFTW, P14, DOI 10.1109/ICSE.2012.6227210
   Zimmermann T., 2006, P 2006 INT WORKSHOP, P72, DOI DOI 10.1145/1137983.1138001
NR 67
TC 31
Z9 32
U1 2
U2 28
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JAN 1
PY 2022
VL 48
IS 1
BP 82
EP 101
DI 10.1109/TSE.2020.2978819
PG 20
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA YG0HJ
UT WOS:000742179000005
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Zhang, HX
   Wang, SW
   Chen, TH
   Hassan, AE
AF Zhang, Haoxiang
   Wang, Shaowei
   Chen, Tse-Hsun
   Hassan, Ahmed E.
TI Reading Answers on Stack Overflow: Not Enough!
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Programming; Software; Guidelines; Maintenance engineering; Knowledge
   discovery; Timing; Crowdsourced knowledge sharing and management; stack
   overflow; commenting; empirical software engineering
AB Stack Overflow is one of the most active communities for developers to share their programming knowledge. Answers posted on Stack Overflow help developers solve issues during software development. In addition to posting answers, users can also post comments to further discuss their associated answers. As of Aug 2017, there are 32.3 million comments that are associated with answers, forming a large collection of crowdsourced repository of knowledge on top of the commonly-studied Stack Overflow answers. In this study, we wish to understand how the commenting activities contribute to the crowdsourced knowledge. We investigate what users discuss in comments, and analyze the characteristics of the commenting dynamics, (i.e., the timing of commenting activities and the roles of commenters). We find that: 1) the majority of comments are informative and thus can enhance their associated answers from a diverse range of perspectives. However, some comments contain content that is discouraged by Stack Overflow. 2) The majority of commenting activities occur after the acceptance of an answer. More than half of the comments are fast responses occurring within one day of the creation of an answer, while later comments tend to be more informative. Most comments are rarely integrated back into their associated answers, even though such comments are informative. 3) Insiders (i.e., users who posted questions/answers before posting a comment in a question thread) post the majority of comments within one month, and outsiders (i.e., users who never posted any question/answer before posting a comment) post the majority of comments after one month. Inexperienced users tend to raise limitations and concerns while experienced users tend to enhance the answer through commenting. Our study provides insights into the commenting activities in terms of their content, timing, and the individuals who perform the commenting. For the purpose of long-term knowledge maintenance and effective information retrieval for developers, we also provide actionable suggestions to encourage Stack Overflow users/engineers/moderators to leverage our insights for enhancing the current Stack Overflow commenting system for improving the maintenance and organization of the crowdsourced knowledge.
C1 [Zhang, Haoxiang; Hassan, Ahmed E.] Queens Univ, Software Anal & Intelligence Lab SAIL, Kingston, ON K7L 3N6, Canada.
   [Wang, Shaowei] Mississippi State Univ, Dept Comp Sci & Engn, Mississippi State, MS 39762 USA.
   [Chen, Tse-Hsun] Concordia Univ, Software PErformance Anal & Reliabil SPEAR Lab, Montreal, PQ H3G 1M8, Canada.
C3 Queens University - Canada; Mississippi State University; Concordia
   University - Canada
RP Wang, SW (corresponding author), Mississippi State Univ, Dept Comp Sci & Engn, Mississippi State, MS 39762 USA.
EM hzhang@cs.queensu.ca; wang@cse.msstate.edu; peterc@encs.concordia.ca;
   ahmed@cs.queensu.ca
RI KHALIFA, AHMED khalifa/HKF-2246-2023
OI KHALIFA, AHMED khalifa/0000-0002-2918-7572; Chen,
   Tse-Hsun/0000-0003-4027-0905
CR An L, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P283, DOI 10.1109/SANER.2017.7884629
   Anderson Ashton, 2012, P 18 ACM SIGKDD INT, DOI DOI 10.1145/2339530.2339665
   [Anonymous], 2014, Proceedings of the 17th ACM conference on Computer supported cooperative work social computing
   Asaduzzaman M, 2013, IEEE WORK CONF MIN S, P97, DOI 10.1109/MSR.2013.6624015
   Bacchelli A., 2012, 2012 Third International Workshop on Recommendation Systems for Software Engineering (RSSE), P26, DOI 10.1109/RSSE.2012.6233404
   Calefato F, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P430, DOI 10.1109/MSR.2015.56
   Carreño LVG, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P582, DOI 10.1109/ICSE.2013.6606604
   Castelle M., 2018, Proceedings of the 2nd Workshop on Abusive Language Online, ALW2'18, P160
   Cen L., 2014, PIR SIGIR
   Chandra S, 2013, PROCEEDINGS OF 2013 INTERNATIONAL CONFERENCE ON CIRCUITS, POWER AND COMPUTING TECHNOLOGIES (ICCPCT 2013), P494
   Chen Bee-Chung., 2011, PROC KDD 11, P159
   Chen N, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P767, DOI 10.1145/2568225.2568263
   Choetkiertikul M, 2015, 2015 24TH AUSTRALASIAN SOFTWARE ENGINEERING CONFERENCE (ASWEC 2015), P155, DOI 10.1109/ASWEC.2015.28
   Cleary B, 2013, 2013 6TH INTERNATIONAL WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING (CHASE), P159, DOI 10.1109/CHASE.2013.6614756
   Dalip DH, 2013, SIGIR'13: THE PROCEEDINGS OF THE 36TH INTERNATIONAL ACM SIGIR CONFERENCE ON RESEARCH & DEVELOPMENT IN INFORMATION RETRIEVAL, P543
   Fischer F, 2017, P IEEE S SECUR PRIV, P121, DOI 10.1109/SP.2017.31
   Fu B, 2013, 19TH ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING (KDD'13), P1276
   Guimaraes R., 2012, P 18 BRAZ S MULT WEB, P253, DOI DOI 10.1145/2382636.2382690
   Meng N, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P372, DOI 10.1145/3180155.3180201
   Park D, 2016, 34TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, CHI 2016, P1114, DOI 10.1145/2858036.2858389
   Poché E, 2017, INT C PROGRAM COMPRE, P196, DOI 10.1109/ICPC.2017.26
   Ragkhitwetsagul C, 2021, IEEE T SOFTWARE ENG, V47, P560, DOI 10.1109/TSE.2019.2900307
   Reich Zvi., 2011, PARTICIPATORY JOURNA, P96, DOI DOI 10.1002/9781444340747.CH6
   Shmueli Erez., 2012, P 21 INT C WORLD WID, P429
   Srba I, 2016, IEEE SOFTWARE, V33, P80, DOI 10.1109/MS.2016.34
   Stack Overflow, PRIV COMM EV
   Tian Q., 2013, ICWSM, DOI DOI 10.1609/ICWSM.V7I1.14457
   Tian Y, 2017, IEEE INT CONF AUTOM, P153, DOI 10.1109/ASE.2017.8115628
   Treude C, 2017, PROC IEEE INT CONF S, P509, DOI 10.1109/ICSME.2017.24
   Treude C, 2016, PROC INT CONF SOFTW, P392, DOI 10.1145/2884781.2884800
   Wang SW, 2018, EMPIR SOFTW ENG, V23, P1552, DOI 10.1007/s10664-017-9558-5
   Wang SW, 2018, EMPIR SOFTW ENG, V23, P800, DOI 10.1007/s10664-017-9533-1
   Wang Shaowei, 2013, SAC '13 Proceedings of the 28th Annual ACM Symposium on Applied Computing, P1019
   Wang SY, 2019, IEEE T PATTERN ANAL, V41, P2783, DOI [10.1109/INTMAG.2018.8508542, 10.1109/TNNLS.2017.2771290, 10.1109/TPAMI.2018.2861871]
   Wu YH, 2019, EMPIR SOFTW ENG, V24, P637, DOI 10.1007/s10664-018-9634-5
   Xu BW, 2017, IEEE INT CONF AUTOM, P706, DOI 10.1109/ASE.2017.8115681
   Xu BW, 2016, IEEE INT CONF AUTOM, P51, DOI 10.1145/2970276.2970357
   Zhang HJ, 2019, I C OPT COMMUN NETW, DOI 10.1109/icocn.2019.8934433
   Zou J, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P446, DOI 10.1109/MSR.2015.60
NR 39
TC 21
Z9 21
U1 2
U2 5
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD NOV 1
PY 2021
VL 47
IS 11
BP 2520
EP 2533
DI 10.1109/TSE.2019.2954319
PG 14
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA WW2QE
UT WOS:000717767100013
DA 2024-07-18
ER

PT J
AU Pham, V
   Böhme, M
   Santosa, AE
   Caciulescu, AR
   Roychoudhury, A
AF Pham, Van-Thuan
   Bohme, Marcel
   Santosa, Andrew E.
   Caciulescu, Alexandru Razvan
   Roychoudhury, Abhik
TI Smart Greybox Fuzzing
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Fuzzing; Computer bugs; Libraries; Tools; Dictionaries; Open area test
   sites; Schedules; Vulnerability detection; smart fuzzing; automated
   testing; file format; grammar; input structure
AB Coverage-based greybox fuzzing (CGF) is one of the most successful approaches for automated vulnerability detection. Given a seed file (as a sequence of bits), a CGF randomly flips, deletes or copies some bits to generate new files. CGF iteratively constructs (and fuzzes) a seed corpus by retaining those generated files which enhance coverage. However, random bitflips are unlikely to produce valid files (or valid chunks in files), for applications processing complex file formats. In this work, we introduce smart greybox fuzzing (SGF) which leverages a high-level structural representation of the seed file to generate new files. We define innovative mutation operators that work on the virtual file structure rather than on the bit level which allows SGF to explore completely new input domains while maintaining file validity. We introduce a novel validity-based power schedule that enables SGF to spend more time generating files that are more likely to pass the parsing stage of the program, which can expose vulnerabilities much deeper in the processing logic. Our evaluation demonstrates the effectiveness of SGF. On several libraries that parse complex chunk-based files, our tool AFLsmart achieves substantially more branch coverage (up to 87 percent improvement) and exposes more vulnerabilities than baseline AFL. Our tool AFLsmart discovered 42 zero-day vulnerabilities in widely-used, well-tested tools and libraries; 22 CVEs were assigned.
C1 [Pham, Van-Thuan; Bohme, Marcel] Monash Univ, Fac Informat Technol, Clayton, Vic 3800, Australia.
   [Santosa, Andrew E.] Veracode, Burlington, MA USA.
   [Caciulescu, Alexandru Razvan] Univ Politehn Bucuresti, Singapore, Singapore.
   [Roychoudhury, Abhik] Natl Univ Singapore, Dept Comp Sci, Singapore, Singapore.
C3 Monash University; National University of Singapore
RP Roychoudhury, A (corresponding author), Natl Univ Singapore, Dept Comp Sci, Singapore, Singapore.
EM thuanpv.nus@gmail.com; marcel.boehme@monash.edu; santosa_1999@yahoo.com;
   alexandru.razvan.c@gmail.com; abhik@comp.nus.edu.sg
FU National Research Foundation, Prime Ministers Office, Singapore under
   its National Cybersecurity R&D Program (TSUNAMi project)
   [NRF2014NCRNCR001-21]; Australian Government through an Australian
   Research Council [DE190100046]; Australian Research Council
   [DE190100046] Funding Source: Australian Research Council
FX This research was partially supported by a grant from the National
   Research Foundation, Prime Ministers Office, Singapore under its
   National Cybersecurity R&D Program (TSUNAMi project, No.
   NRF2014NCRNCR001-21) and administered by the National Cybersecurity R&D
   Directorate. This research was partially funded by the Australian
   Government through an Australian Research Council Discovery Early Career
   Researcher Award (DE190100046).
CR [Anonymous], 2019, PEACH FUZZER FIXUP
   [Anonymous], 2019, LIBPROTOBUF MUTATOR
   [Anonymous], 2018, COMMON VULNERABILITY
   [Anonymous], 2018, libFuzzer-a library for coverage-guided fuzz testing.
   [Anonymous], 2018, THE SPIKE
   [Anonymous], 2018, 010EDITOR TEMPLATES
   [Anonymous], 2018, 010EDITOR HEX EDITOR
   [Anonymous], 2018, AFL DICT
   [Anonymous], 2018, HACKERNEWS AFL FUZZ
   [Anonymous], 2018, WAVPACK HYBRID LOSSL
   [Anonymous], 2018, HOT FUZZ BUG DETECTI
   [Anonymous], 2019, STRUCTURE AWARE FUZZ
   Arcuri A, 2014, SOFTW TEST VERIF REL, V24, P219, DOI 10.1002/stvr.1486
   Aschermann C., P 26 ANN NETW DISTR
   Böhme M, 2016, IEEE T SOFTWARE ENG, V42, P345, DOI 10.1109/TSE.2015.2487274
   BOHME M, 2019, ICSE 2019, P1
   Böhme M, 2019, IEEE T SOFTWARE ENG, V45, P489, DOI 10.1109/TSE.2017.2785841
   Böhme M, 2018, ACM T SOFTW ENG METH, V27, DOI 10.1145/3210309
   Böhme M, 2017, CCS'17: PROCEEDINGS OF THE 2017 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P2329, DOI 10.1145/3133956.3134020
   Bruening D, 2003, INT SYM CODE GENER, P265, DOI 10.1109/CGO.2003.1191551
   Cadar C., 2008, Proceedings of the 8th USENIX conference on Operating systems design and implementation, OSDI'08, (USA), P209
   Cha SK, 2015, P IEEE S SECUR PRIV, P725, DOI 10.1109/SP.2015.50
   Chen P, 2018, P IEEE S SECUR PRIV, P711, DOI 10.1109/SP.2018.00046
   Chipounov V, 2011, ACM SIGPLAN NOTICES, V46, P265, DOI [10.1145/1961296.1950396, 10.1145/1961295.1950396]
   Dang YN, 2012, PROC INT CONF SOFTW, P1084, DOI 10.1109/ICSE.2012.6227111
   Dolan-Gavitt B, 2016, P IEEE S SECUR PRIV, P110, DOI 10.1109/SP.2016.15
   Gan ST, 2018, P IEEE S SECUR PRIV, P679, DOI 10.1109/SP.2018.00040
   Godefroid P, 2017, IEEE INT CONF AUTOM, P50, DOI 10.1109/ASE.2017.8115618
   Godefroid P, 2012, COMMUN ACM, V55, P40, DOI 10.1145/2093548.2093564
   Godefroid P, 2008, PLDI'08: PROCEEDINGS OF THE 2008 SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN & IMPLEMENTATION, P206, DOI 10.1145/1375581.1375607
   Holler Christian, 2012, P 21 USENIX SEC S US, P445
   Lemieux C, 2018, IEEE INT CONF AUTOM, P475, DOI 10.1145/3238147.3238176
   Li YK, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P627, DOI 10.1145/3106237.3106295
   Lian Y., 2017, ROOTEDCON
   Lin Zhiqiang., 2008, P 16 ACM SIGSOFT INT, P83
   Manes V. J., 2018, CoRR
   Mathis B, 2019, PROCEEDINGS OF THE 40TH ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION (PLDI '19), P548, DOI 10.1145/3314221.3314651
   Padhye R, 2019, PROCEEDINGS OF THE 28TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA '19), P329, DOI 10.1145/3293882.3330576
   Padhye R, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: COMPANION PROCEEDINGS (ICSE-COMPANION 2019), P266, DOI 10.1109/ICSE-Companion.2019.00107
   Peng H, 2018, P IEEE S SECUR PRIV, P697, DOI 10.1109/SP.2018.00056
   Petsios T, 2017, CCS'17: PROCEEDINGS OF THE 2017 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P2155, DOI 10.1145/3133956.3134073
   Pham V.-T., 2018, ARXIV PREPRINT ARXIV
   Rawat S, 2017, 24TH ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2017), DOI 10.14722/ndss.2017.23404
   Schwartz EJ, 2010, P IEEE S SECUR PRIV, P317, DOI 10.1109/SP.2010.26
   Stephens N, 2016, 23RD ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2016), DOI 10.14722/ndss.2016.23368
   Pham VT, 2016, IEEE INT CONF AUTOM, P543, DOI 10.1145/2970276.2970316
   Wang JJ, 2019, PROC INT CONF SOFTW, P724, DOI 10.1109/ICSE.2019.00081
   Website, 2018, AM FUZZY LOP
   Website, 2018, EXPLANATION WAVE FIL
   Website, 2018, HONGGFUZZ
   Website, 2018, PEACH FUZZER DISCOVE
   Website, 2018, DOMATO DOM FUZZER
   You W, 2019, P IEEE S SECUR PRIV, P769, DOI 10.1109/SP.2019.00057
   You W, 2019, PROC INT CONF SOFTW, P712, DOI 10.1109/ICSE.2019.00080
   Zeller A., 2019, Generating Software Tests
NR 55
TC 80
Z9 89
U1 2
U2 19
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD SEPT 1
PY 2021
VL 47
IS 9
BP 1980
EP 1997
DI 10.1109/TSE.2019.2941681
PG 18
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA UR3QY
UT WOS:000696667700013
DA 2024-07-18
ER

PT J
AU Tong, HN
   Liu, B
   Wang, SH
AF Tong, Haonan
   Liu, Bin
   Wang, Shihai
TI Kernel Spectral Embedding Transfer Ensemble for Heterogeneous Defect
   Prediction
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Kernel; Predictive models; Software metrics; Correlation; Buildings;
   Data models; Heterogeneous defect prediction; cross-project defect
   prediction; class imbalance learning; spectral embedding; transfer
   learning; ensemble learning; multiple kernel learning
ID CANONICAL CORRELATION-ANALYSIS; STATIC CODE ATTRIBUTES;
   EMPIRICAL-ANALYSIS; FAULT-PRONENESS; SOFTWARE METRICS; MACHINE;
   VALIDATION; QUALITY; MODEL; AREA
AB Cross-project defect prediction (CPDP) refers to predicting defects in the target project lacking of defect data by using prediction models trained on the historical defect data of other projects (i.e., source data). However, CPDP requires the source and target projects have common metric set (CPDP-CM). Recently, heterogeneous defect prediction (HDP) has drawn the increasing attention, which predicts defects across projects having heterogeneous metric sets. However, building high-performance HDP methods remains a challenge owing to several serious challenges including class imbalance problem, nonlinear, and the distribution differences between source and target datasets. In this paper, we propose a novel kernel spectral embedding transfer ensemble (KSETE) approach for HDP. KSETE first addresses the class-imbalance problem of the source data and then tries to find the latent common feature space for the source and target datasets by combining kernel spectral embedding, transfer learning, and ensemble learning. Experiments are performed on 22 public projects in both HDP and CPDP-CM scenarios in terms of multiple well-known performance measures such as, AUC, G-Measure, and MCC. The experimental results show that (1) KSETE improves the performance over previous HDP methods by at least 22.7, 138.9, and 494.4 percent in terms of AUC, G-Measure, and MCC, respectively. (2) KSETE improves the performance over previous CPDP-CM methods by at least 4.5, 30.2, and 17.9 percent in AUC, G-Measure, and MCC, respectively. It can be concluded that the proposed KSETE is very effective in both the HDP scenario and the CPDP-CM scenario.
C1 [Tong, Haonan; Liu, Bin; Wang, Shihai] Beihang Univ, Sch Reliabil & Syst Engn, Sci & Technol Reliabil & Environm Engn Lab, Beijing 100191, Peoples R China.
C3 Beihang University
RP Wang, SH (corresponding author), Beihang Univ, Sch Reliabil & Syst Engn, Sci & Technol Reliabil & Environm Engn Lab, Beijing 100191, Peoples R China.
EM tonghaonan@buaa.edu.cn; liubin@buaa.edu.cn; wangshihai@buaa.edu.cn
FU  [61400020404]
FX This work is funded by #61400020404. We thank the editors and anonymous
   reviewers for their constructive comments and suggestions for improving
   this paper.
CR Abaei G, 2015, KNOWL-BASED SYST, V74, P28, DOI 10.1016/j.knosys.2014.10.017
   Aman H, 2015, IEICE T INF SYST, VE98D, P2218, DOI 10.1587/transinf.2015EDP7107
   Arisholm E, 2010, J SYST SOFTWARE, V83, P2, DOI 10.1016/j.jss.2009.06.055
   Bach Francis R, 2004, P 21 INT C MACH LEAR, P6, DOI 10.1145/1015330.1015424
   Bansiya J, 2002, IEEE T SOFTWARE ENG, V28, P4, DOI 10.1109/32.979986
   Bhatia R., 1997, MATRIX ANAL
   BOEHM BW, 1988, IEEE T SOFTWARE ENG, V14, P1462, DOI 10.1109/32.6191
   Bowes David., 2016, Proceedings of the 25th International Symposium on Software Testing and Analysis, P330, DOI DOI 10.1145/2931037.2931039
   Bradley AP, 1997, PATTERN RECOGN, V30, P1145, DOI 10.1016/S0031-3203(96)00142-2
   Breiman L, 2001, MACH LEARN, V45, P5, DOI 10.1023/A:1010933404324
   Cao XD, 2013, IEEE I CONF COMP VIS, P3208, DOI 10.1109/ICCV.2013.398
   Catal C, 2011, EXPERT SYST APPL, V38, P4626, DOI 10.1016/j.eswa.2010.10.024
   Catal C, 2009, EXPERT SYST APPL, V36, P7346, DOI 10.1016/j.eswa.2008.10.027
   Chawla NV, 2002, J ARTIF INTELL RES, V16, P321, DOI 10.1613/jair.953
   Chen L, 2015, INFORM SOFTWARE TECH, V62, P67, DOI 10.1016/j.infsof.2015.01.014
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   Cliff N., 2014, Ordinal Methods for Behavioral Data Analysis
   Cohen J., 1988, STAT POWER ANAL BEHA
   COX DR, 1958, J R STAT SOC B, V20, P215
   Czibula G, 2014, INFORM SCIENCES, V264, P260, DOI 10.1016/j.ins.2013.12.031
   D'Ambros M, 2012, EMPIR SOFTW ENG, V17, P531, DOI 10.1007/s10664-011-9173-9
   Dejaeger K, 2013, IEEE T SOFTWARE ENG, V39, P237, DOI 10.1109/TSE.2012.20
   Demsar J, 2006, J MACH LEARN RES, V7, P1
   Elish KO, 2008, J SYST SOFTWARE, V81, P649, DOI 10.1016/j.jss.2007.07.040
   Fu W, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P72, DOI 10.1145/3106237.3106257
   Gao KH, 2011, SOFTWARE PRACT EXPER, V41, P579, DOI 10.1002/spe.1043
   Ghotra B, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P789, DOI 10.1109/ICSE.2015.91
   Gönen M, 2011, J MACH LEARN RES, V12, P2211
   Grolman E, 2016, KNOWL-BASED SYST, V107, P70, DOI 10.1016/j.knosys.2016.05.057
   Gyimóthy T, 2005, IEEE T SOFTWARE ENG, V31, P897, DOI 10.1109/TSE.2005.112
   Hall T, 2012, IEEE T SOFTWARE ENG, V38, P1276, DOI 10.1109/TSE.2011.103
   Halstead M. H., 1977, ELEMENTS SOFTWARE SC
   Hand DJ, 2009, MACH LEARN, V77, P103, DOI 10.1007/s10994-009-5119-5
   Hardoon DR, 2004, NEURAL COMPUT, V16, P2639, DOI 10.1162/0899766042321814
   Hastie T, ELEMENTS STAT LEARNI, P241
   Huang JL, 2015, INFORM SOFTWARE TECH, V67, P108, DOI 10.1016/j.infsof.2015.07.004
   Huang Q, 2017, PROC IEEE INT CONF S, P159, DOI 10.1109/ICSME.2017.51
   Jing XY, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P496, DOI 10.1145/2786805.2786813
   Jureczko M, 2010, P 6 INT C PREDICTIVE, DOI DOI 10.1145/1868328.1868342
   Kamei Y, 2013, IEEE T SOFTWARE ENG, V39, P757, DOI 10.1109/TSE.2012.70
   Kanmani S, 2007, INFORM SOFTWARE TECH, V49, P483, DOI 10.1016/j.infsof.2006.07.005
   Kim S, 2008, IEEE T SOFTWARE ENG, V34, P181, DOI 10.1109/TSE.2007.70773
   Kitchenham B, 2009, INFORM SOFTWARE TECH, V51, P7, DOI 10.1016/j.infsof.2008.09.009
   Krishna R, 2019, IEEE T SOFTWARE ENG, V45, P1081, DOI 10.1109/TSE.2018.2821670
   LANCZOS C, 1950, J RES NAT BUR STAND, V45, P255, DOI 10.6028/jres.045.026
   Laradji IH, 2015, INFORM SOFTWARE TECH, V58, P388, DOI 10.1016/j.infsof.2014.07.005
   Lee T, 2016, IEEE T SOFTWARE ENG, V42, P1015, DOI 10.1109/TSE.2016.2550458
   Li WW, 2016, KNOWL-BASED SYST, V91, P263, DOI 10.1016/j.knosys.2015.09.035
   Li ZQ, 2018, AUTOMAT SOFTW ENG, V25, P201, DOI 10.1007/s10515-017-0220-7
   Ma WWY, 2016, INFORM SOFTWARE TECH, V69, P50, DOI 10.1016/j.infsof.2015.09.001
   Ma Y, 2017, IEICE T INF SYST, VE100D, P1903, DOI 10.1587/transinf.2016EDL8238
   Ma Y, 2012, INFORM SOFTWARE TECH, V54, P248, DOI 10.1016/j.infsof.2011.09.007
   Macbeth G, 2011, UNIV PSYCHOL, V10, P545, DOI 10.11144/Javeriana.upsy10-2.cdcp
   Madeyski L, 2014, Software Quality Journal, V23, P1, DOI DOI 10.1007/S11219-014-9241-7
   Mahmoodzadeh Zahra, 2015, 2015 IEEE Power & Energy Society General Meeting, P1, DOI 10.1109/PESGM.2015.7286219
   Malhotra R, 2017, EMPIR SOFTW ENG, V22, P2806, DOI 10.1007/s10664-016-9488-7
   MATTHEWS BW, 1975, BIOCHIM BIOPHYS ACTA, V405, P442, DOI 10.1016/0005-2795(75)90109-9
   McCabe T. J., 1976, IEEE Transactions on Software Engineering, VSE-2, P308, DOI 10.1109/TSE.1976.233837
   Menzies T., 2012, The PROMISE Repository of empirical software engineering data
   Menzies T, 2007, IEEE T SOFTWARE ENG, V33, P637, DOI 10.1109/TSE.2007.70721
   Menzies T, 2007, IEEE T SOFTWARE ENG, V33, P2, DOI 10.1109/TSE.2007.256941
   Menzies T, 2010, AUTOMAT SOFTW ENG, V17, P375, DOI 10.1007/s10515-010-0069-5
   Nam J, 2018, IEEE T SOFTWARE ENG, V44, P874, DOI 10.1109/TSE.2017.2720603
   Nam J, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P508, DOI 10.1145/2786805.2786814
   Nam J, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P382, DOI 10.1109/ICSE.2013.6606584
   Nemenyi P. B., 1963, doctoral dissertation
   Olague HM, 2007, IEEE T SOFTWARE ENG, V33, P402, DOI 10.1109/TSE.2007.1015.
   Pan SJ, 2010, IEEE T KNOWL DATA EN, V22, P1345, DOI 10.1109/TKDE.2009.191
   Peters F, 2013, IEEE T SOFTWARE ENG, V39, P1054, DOI 10.1109/TSE.2013.6
   Petric J, 2016, PROCEEDINGS OF THE 20TH INTERNATIONAL CONFERENCE ON EVALUATION AND ASSESSMENT IN SOFTWARE ENGINEERING 2016 (EASE '16), DOI 10.1145/2915970.2916007
   Quattoni A, 2008, PROC CVPR IEEE, P2300
   Rana ZA, 2015, KNOWL-BASED SYST, V90, P1, DOI 10.1016/j.knosys.2015.10.009
   Rathore SS, 2017, KNOWL-BASED SYST, V119, P232, DOI 10.1016/j.knosys.2016.12.017
   Romano J, 2006, ANN M FLOR ASS I RES, P1
   Ryu D, 2016, EMPIR SOFTW ENG, V21, P43, DOI 10.1007/s10664-014-9346-4
   Ryu D, 2015, J COMPUT SCI TECH-CH, V30, P969, DOI 10.1007/s11390-015-1575-5
   SCOTT AJ, 1974, BIOMETRICS, V30, P507, DOI 10.2307/2529204
   Shepperd M, 2014, IEEE T SOFTWARE ENG, V40, P603, DOI 10.1109/TSE.2014.2322358
   Shepperd M, 2013, IEEE T SOFTWARE ENG, V39, P1208, DOI 10.1109/TSE.2013.11
   Shi XX, 2013, IEEE T KNOWL DATA EN, V25, P906, DOI 10.1109/TKDE.2011.252
   Singh P, 2017, IEEE T SYST MAN CY-S, V47, P826, DOI 10.1109/TSMC.2016.2521840
   Tantithamthavorn C, 2020, IEEE T SOFTWARE ENG, V46, P1200, DOI 10.1109/TSE.2018.2876537
   Tantithamthavorn C, 2019, IEEE T SOFTWARE ENG, V45, P683, DOI 10.1109/TSE.2018.2794977
   Tantithamthavorn C, 2017, IEEE T SOFTWARE ENG, V43, P1, DOI 10.1109/TSE.2016.2584050
   Turhan B, 2009, EMPIR SOFTW ENG, V14, P540, DOI 10.1007/s10664-008-9103-7
   Um TT, 2014, IEEE INT CONF ROBOT, P5679, DOI 10.1109/ICRA.2014.6907694
   Wang D, 2015, ASIAPAC SIGN INFO PR, P1225, DOI 10.1109/APSIPA.2015.7415532
   Wang S, 2013, IEEE T RELIAB, V62, P434, DOI 10.1109/TR.2013.2259203
   Wang S, 2016, PROC INT CONF SOFTW, P297, DOI 10.1145/2884781.2884804
   Wen M, 2018, IEEE Transactions on Software Engineering
   WILCOXON F, 1945, BIOMETRICS BULL, V1, P80, DOI 10.1093/jee/39.2.269
   Xia X, 2016, IEEE T SOFTWARE ENG, V42, P977, DOI 10.1109/TSE.2016.2543218
   Xu Z, 2019, INFORM SOFTWARE TECH, V106, P182, DOI 10.1016/j.infsof.2018.10.004
   Xu Z, 2016, PROC INT SYMP SOFTW, P309, DOI 10.1109/ISSRE.2016.13
   Yang XX, 2015, IEEE T RELIAB, V64, P234, DOI 10.1109/TR.2014.2370891
   Yang XL, 2015, 2015 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE SECURITY AND RELIABILITY (QRS 2015), P17, DOI 10.1109/QRS.2015.14
   Yang YB, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P157, DOI 10.1145/2950290.2950353
   Yatish S, 2019, PROC INT CONF SOFTW, P654, DOI 10.1109/ICSE.2019.00075
   Zhang F, 2016, PROC INT CONF SOFTW, P309, DOI 10.1145/2884781.2884839
   Zhang F, 2016, EMPIR SOFTW ENG, V21, P2107, DOI 10.1007/s10664-015-9396-2
   Zhao YY, 2015, INFORM SOFTWARE TECH, V57, P186, DOI 10.1016/j.infsof.2014.09.006
   Zhimin He, 2013, 2013 ACM / IEEE International Symposium on Empirical Software Engineering and Measurement (ESEM), P45, DOI 10.1109/ESEM.2013.20
   Zimmerman T, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P91, DOI 10.1145/1595696.1595713
NR 103
TC 30
Z9 31
U1 2
U2 32
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD SEPT 1
PY 2021
VL 47
IS 9
BP 1886
EP 1906
DI 10.1109/TSE.2019.2939303
PG 21
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA UR3QY
UT WOS:000696667700008
DA 2024-07-18
ER

PT J
AU Rao, C
   Li, N
   Lei, Y
   Guo, J
   Zhang, YD
   Kacker, RN
   Kuhn, DR
AF Rao, Chang
   Li, Nan
   Lei, Yu
   Guo, Jin
   Zhang, Yadong
   Kacker, Raghu N.
   Kuhn, D. Richard
TI Combinatorial Test Generation for Multiple Input Models With Shared
   Parameters
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Combinatorial testing; Tway test generation; multiple input models;
   shared
ID COVERING ARRAYS; ALGORITHM
AB Combinatorial testing typically considers a single input model and creates a single test set that achieves t-way coverage. This paper addresses the problem of combinatorial test generation for multiple input models with shared parameters. We formally define the problem and propose an efficient approach to generating multiple test sets, one for each input model, that together satisfy t-way coverage for all of these input models while minimizing the amount of redundancy between these test sets. We report an experimental evaluation that applies our approach to five real-world applications. The results show that our approach can significantly reduce the amount of redundancy between the test sets generated for multiple input models and perform better than a postoptimization approach.
C1 [Rao, Chang; Guo, Jin; Zhang, Yadong] Southwest Jiaotong Univ, Sch Informat Sci & Technol, Chengdu 611756, Sichuan, Peoples R China.
   [Rao, Chang] Chongqing Jiaotong Univ, Coll Traff & Transportat, Chongqing 400074, Peoples R China.
   [Li, Nan] Dassault Syst, Res & Dev, New York, NY 10014 USA.
   [Lei, Yu] Univ Texas Arlington, Dept Comp Sci & Engn, Arlington, TX 76013 USA.
   [Kacker, Raghu N.; Kuhn, D. Richard] NIST, Informat & Technol Lab, Gaithersburg, MD 20899 USA.
C3 Southwest Jiaotong University; Chongqing Jiaotong University; University
   of Texas System; University of Texas Arlington; National Institute of
   Standards & Technology (NIST) - USA
RP Li, N (corresponding author), Dassault Syst, Res & Dev, New York, NY 10014 USA.
EM changrao@my.swjtu.edu.cn; nli@mdsol.com; ylei@cse.uta.edu;
   jguo_scce@home.swjtu.edu.cn; ydzhang@home.swjtu.edu.cn;
   raghu.kacker@nist.gov; kuhn@nist.gov
RI Lei, Yu/IAN-0544-2023
OI RAO, CHANG/0000-0003-4147-0124
FU China Scholarship Council [201707000108]; National Natural Science
   Foundation of China [61703349]; China State Railway Corporation
   [N2018G062, K2018G011]; Fundamental Research Funds for the Central
   Universities [2682017CX101, 70NANB15H199]; National Institute of
   Standards and Technology
FX This research was supported by China Scholarship Council under Grant
   201707000108, National Natural Science Foundation of China under Grant
   No. 61703349, China State Railway Corporation under Grants N2018G062 and
   K2018G011 and Fundamental Research Funds for the Central Universities
   under Grant No. 2682017CX101. In addition, Lei's work was partly
   supported by a research grant 70NANB15H199 from National Institute of
   Standards and Technology. Disclaimer: We identify certain software
   products in this document, but such identification does not imply
   recommendation by the U.S. National Institute of Standards and
   Technology, nor does it imply that the products identified are
   necessarily the best available for the purpose.
CR Ammann Paul, 2008, Introduction to software testing, V1st
   [Anonymous], 1988, Statistical power analysis for the behavioral sciences
   Biagiola M, 2020, IEEE INT CONF SOFTW, P175, DOI 10.1109/ICST46399.2020.00027
   Blue D, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P182, DOI 10.1109/ICSE.2013.6606564
   Bryce RC, 2007, SOFTW TEST VERIF REL, V17, P159, DOI 10.1002/stvr.365
   Bryce RC, 2009, SOFTW TEST VERIF REL, V19, P37, DOI 10.1002/stvr.393
   Calvagna A, 2010, J AUTOM REASONING, V45, P331, DOI 10.1007/s10817-010-9171-4
   Chen TY, 1998, INFORM SOFTWARE TECH, V40, P347, DOI 10.1016/S0950-5849(98)00050-0
   Cohen DM, 1997, IEEE T SOFTWARE ENG, V23, P437, DOI 10.1109/32.605761
   Cohen MB, 2008, IEEE T SOFTWARE ENG, V34, P633, DOI 10.1109/TSE.2008.50
   Cohen MB, 2007, TAIC PART 2007 - TESTING: ACADEMIC AND INDUSTRIAL CONFERENCE - PRACTICE AND RESEARCH TECHNIQUES, PROCEEDINGS, P121, DOI 10.1109/TAIC.PART.2007.17
   Colbourn CJ, 2010, DESIGN CODE CRYPTOGR, V55, P201, DOI 10.1007/s10623-009-9333-8
   Nguyen CD, 2013, IEEE INT CONF AUTOM, P622, DOI 10.1109/ASE.2013.6693123
   Czerwonka J, 2006, 10 PAC NW SOFTW QUAL
   Durelli VHS, 2016, J SYST SOFTWARE, V113, P324, DOI 10.1016/j.jss.2015.12.022
   Esfandyari S, 2018, INFORM SOFTWARE TECH, V94, P165, DOI 10.1016/j.infsof.2017.10.007
   Forbes M, 2008, J RES NATL INST STAN, V113, P287, DOI 10.6028/jres.113.022
   Gargantini Angelo, 2014, Hardware and Software: Verification and Testing. 10th International Haifa Verification Conference, HVC 2014. Proceedings: LNCS 8855, P220, DOI 10.1007/978-3-319-13338-6_17
   Grindal M, 2007, PROCEEDINGS OF THE IASTED INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P255
   Harrold M. J., 1993, ACM Transactions on Software Engineering and Methodology, V2, P270, DOI 10.1145/152388.152391
   Hartman A, 2004, DISCRETE MATH, V284, P149, DOI 10.1016/j.disc.2003.11.029
   Henard C, 2014, IEEE T SOFTWARE ENG, V40, P650, DOI 10.1109/TSE.2014.2327020
   Jia Y, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P540, DOI 10.1109/ICSE.2015.71
   Johansen Martin Fagereng, 2012, P 16 INT SOFTWARE PR, P46, DOI [10.1145/2362536.2362547, DOI 10.1145/2362536.2362547]
   Kampel L, 2020, OPTIM LETT, V14, P1543, DOI 10.1007/s11590-019-01459-0
   Kampel L, 2017, IEEE ICST WORKSHOP, P229, DOI 10.1109/ICSTW.2017.43
   Khalsa SK, 2014, PROC INT SYMP SOFTW, P323, DOI 10.1109/ISSRE.2014.15
   Kleine K, 2018, MATH COMPUT SCI, V12, P51, DOI 10.1007/s11786-017-0326-0
   Kuhn DR, 2004, IEEE T SOFTWARE ENG, V30, P418, DOI 10.1109/TSE.2004.24
   Lei Y, 2008, SOFTW TEST VERIF REL, V18, P125, DOI 10.1002/stvr.381
   Lei Y, 2007, ECBS 2007: 14TH ANNUAL IEEE INTERNATIONAL CONFERENCE AND WORKSHOPS ON THE ENGINEERING OF COMPUTER-BASED SYSTEMS, PROCEEDINGS, P549
   Li N, 2016, IEEE INT CONF AUTOM, P637, DOI 10.1145/2970276.2970325
   Lin JK, 2015, IEEE INT CONF AUTOM, P494, DOI 10.1109/ASE.2015.61
   Moore H, 2009, MATLAB ENG, P672
   Moura L, 2019, THEOR COMPUT SCI, V800, P146, DOI 10.1016/j.tcs.2019.10.022
   Myers J. L., 2013, Research design and statistical analysis, DOI DOI 10.4324/9780203726631
   Nguyen C. D., 2011, M AGI C TOOL FSM SUB
   Nguyen C.D., 2012, Proceedings of the 2012 International Symposium on Software Testing and Analysis, P100, DOI 10.1145/04000800.2336765
   Nie CH, 2011, ACM COMPUT SURV, V43, DOI 10.1145/1883612.1883618
   PESARIN F., 2001, Multivariate permutation tests with applications in biostatistics
   Rao C, 2019, STRIDE TOOL EXPT RES
   Rao C, 2017, IEEE ICST WORKSHOP, P199, DOI 10.1109/ICSTW.2017.39
   Satish P, 2013, IEEE ICST WORKSHOP, P331, DOI 10.1109/ICSTW.2013.44
   Segall I., 2011, P 2011 INT S SOFTWAR, P254
   Simos DE, 2016, COMPUTER, V49, P80, DOI 10.1109/MC.2016.314
   Tonella P, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P562, DOI 10.1145/2568225.2568242
   Torres-Jimenez J, 2017, OPTIM LETT, V11, P457, DOI 10.1007/s11590-016-1012-x
   Torres-Jimenez J, 2012, INFORM SCIENCES, V185, P137, DOI 10.1016/j.ins.2011.09.020
   Tung YW, 2000, AEROSP CONF PROC, P431, DOI 10.1109/AERO.2000.879426
   Tzoref-Brill R, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P235, DOI 10.1145/3236024.3236067
   Vahabzadeh A, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P210, DOI 10.1145/3180155.3180203
   Wang WH, 2016, SOFTW TEST VERIF REL, V26, P318, DOI 10.1002/stvr.1599
   Wu H., 2019, SURVEY CONSTRAINED C
   Wu HY, 2015, IEEE T EVOLUT COMPUT, V19, P575, DOI 10.1109/TEVC.2014.2362532
   Yamada A., 2015, 2015 IEEE 8th International Conference on Software Testing, Verification and Validation (ICST), P1
   Yamada A, 2016, IEEE INT CONF AUTOM, P614, DOI 10.1145/2970276.2970335
   Yoo S, 2012, SOFTW TEST VERIF REL, V22, P67, DOI [10.1002/stv.430, 10.1002/stvr.430]
   Yu L., 2015, P INT C WIR COMM SIG, P1
   Yu LB, 2013, 2013 IEEE SIXTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST 2013), P370, DOI 10.1109/ICST.2013.52
   Yu LB, 2013, 2013 IEEE SIXTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST 2013), P242, DOI 10.1109/ICST.2013.35
   Yuan X, 2011, IEEE T SOFTWARE ENG, V37, P559, DOI 10.1109/TSE.2010.50
   Zamansky A, 2017, IEEE ICST WORKSHOP, P249, DOI 10.1109/ICSTW.2017.45
   Zhong H, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P981, DOI 10.1145/2950290.2983959
   Zou KH, 2003, RADIOLOGY, V227, P617, DOI 10.1148/radiol.2273011499
NR 64
TC 2
Z9 2
U1 3
U2 14
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAR 17
PY 2021
VL 48
IS 7
BP 2606
EP 2628
DI 10.1109/TSE.2021.3065950
PG 23
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 2Y5YY
UT WOS:000825973400001
DA 2024-07-18
ER

PT J
AU Pradhan, D
   Wang, S
   Ali, S
   Yue, T
   Liaaen, M
AF Pradhan, Dipesh
   Wang, Shuai
   Ali, Shaukat
   Yue, Tao
   Liaaen, Marius
TI CBGA-ES<SUP>+</SUP>: A Cluster-Based Genetic Algorithm with
   Non-Dominated Elitist Selection for Supporting Multi-Objective Test
   Optimization
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Elitist selection; multi-objective genetic algorithm; multi-objective
   test optimization; search
ID RESOURCE-ALLOCATION; EVOLUTIONARY ALGORITHMS; SEARCH; INTEGRATION;
   STRATEGIES
AB Many real-world test optimization problems (e.g., test case prioritization) are multi-objective intrinsically and can be tackled using various multi-objective search algorithms (e.g., Non-dominated Sorting Genetic Algorithm (NSGA-II)). However, existing multi-objective search algorithms have certain randomness when selecting parent solutions for producing offspring solutions. In a worse case, suboptimal parent solutions may result in offspring solutions with bad quality, and thus affect the overall quality of the solutions in the next generation. To address such a challenge, we propose CBGA-ES+, a novel cluster-based genetic algorithm with non-dominated elitist selection to reduce the randomness when selecting the parent solutions to support multi-objective test optimization. We empirically compared CBGA-ES+ with random search and greedy (as baselines), four commonly used multi-objective search algorithms (i.e., Multi-objective Cellular genetic algorithm (MOCell), NSGA-II, Pareto Archived Evolution Strategy (PAES), and Strength Pareto Evolutionary Algorithm (SPEA2)), and the predecessor of CBGA-ES+ (named CBGA-ES) using five multi-objective test optimization problems with eight subjects (two industrial, one real world, and five open source). The results showed that CBGA-ES+ managed to significantly outperform the selected search algorithms for a majority of the experiments. Moreover, for the solutions in the same search space, CBGA-ES+ managed to perform better than CBGA-ES, MOCell, NSGA-II, PAES, and SPEA2 for 2.2, 13.6, 14.5, 17.4, and 9.9 percent, respectively. Regarding the running time of the algorithm, CBGA-ES+ was faster than CBGA-ES for all the experiments.
C1 [Pradhan, Dipesh; Yue, Tao] Simula Res Lab, POB 134, N-1325 Lysaker, Norway.
   [Pradhan, Dipesh; Yue, Tao] Univ Oslo, Problemveien 7, N-0315 Oslo, Norway.
   [Wang, Shuai] Testify As, POB 134, N-1325 Lysaker, Norway.
   [Ali, Shaukat] Simula Res Lab, POB 134, N-1325 Lysaker, Norway.
   [Liaaen, Marius] Cisco Syst, Oslo, Norway.
C3 University of Oslo
RP Pradhan, D (corresponding author), Simula Res Lab, POB 134, N-1325 Lysaker, Norway.
EM dipesh@simula.no; shuai.wang@testify.no; shaukat@simula.no;
   tao@simula.no; marliaae@cisco.com
RI yue, tao/H-6783-2013
OI Yue, Tao/0000-0003-3262-5577; Pradhan, Dipesh/0000-0002-1549-4555; Ali,
   Shaukat/0000-0002-9979-3519
FU Research Council of Norway (RCN) [203461/O30, 240024/F20]
FX This research was supported by the Research Council of Norway (RCN)
   funded Certus SFI (grant no. 203461/O30). Tao Yue and Shaukat Ali are
   also supported by RCN funded Zen-Configurator project (grant no.
   240024/F20) and RCN funded MBT4CPS project.
CR Aibinu AM, 2016, ENG SCI TECHNOL, V19, P2022, DOI 10.1016/j.jestch.2016.08.003
   [Anonymous], 2012, CASE STUDY RES SOFTW, DOI DOI 10.1002/9781118181034
   [Anonymous], 2018, TESTCASE JUNIT API
   [Anonymous], 2005, ACM SIGSOFT SOFTW EN
   [Anonymous], 2002, OREDA Offshore Reliability Data Handbook, OREDA Participants, V4th
   [Anonymous], 2018, AB COMP CLUST
   [Anonymous], 2006, 1362862006 ISO
   [Anonymous], 1993, Modern heuristic techniques for combinatorial problems
   Arcuri A, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1, DOI 10.1145/1985793.1985795
   Bandyopadhyay S, 2010, METRON, V68, P161, DOI 10.1007/BF03263533
   Binkley D, 2015, IEEE INT WORK C SO, P1, DOI 10.1109/SCAM.2015.7335396
   Briand LC., 2002, P 14 INT C SOFTW ENG, P43, DOI DOI 10.1145/568760.568769
   Briand LC, 2005, GECCO 2005: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOLS 1 AND 2, P1021
   Brindle A., 1981, TR812 U ALB DEP COM
   Brownlee J, 2011, CLEVER ALGORITHMS NA
   Bühler O, 2008, COMPUT OPER RES, V35, P3144, DOI 10.1016/j.cor.2007.01.015
   Colanzi TE, 2011, LECT NOTES COMPUT SC, V6956, P188, DOI 10.1007/978-3-642-23716-4_18
   Dai YS, 2003, J SYST SOFTWARE, V66, P47, DOI 10.1016/S0164-1212(02)00062-6
   Deb K, 2002, IEEE C EVOL COMPUTAT, P825, DOI 10.1109/CEC.2002.1007032
   Deb K, 2002, IEEE T EVOLUT COMPUT, V6, P182, DOI 10.1109/4235.996017
   Demir GN, 2007, GECCO 2007: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOL 1 AND 2, P1943
   Dubois-Lacoste J., 2011, TRIRIDIA2011004
   Durillo J. J., 2008, Parallel Problem Solving from Nature - PPSN X. 10th International Conference, P661, DOI 10.1007/978-3-540-87700-4_66
   Durillo JJ, 2011, ADV ENG SOFTW, V42, P760, DOI 10.1016/j.advengsoft.2011.05.014
   Elbaum S, 2001, PROC INT CONF SOFTW, P329, DOI 10.1109/ICSE.2001.919106
   Epitropakis M. G., 2015, P INT S SOFTW TEST A, P234, DOI [DOI 10.1145/2771783.2771788, 10.1145/2771783.2771788]
   GOLD D, 1991, CONFERENCE RECORD OF THE TWENTY-FIFTH ASILOMAR CONFERENCE ON SIGNALS, SYSTEMS & COMPUTERS, VOLS 1 AND 2, P69, DOI 10.1109/ACSSC.1991.186416
   Goldberg D. E., 1987, Genetic Algorithms and their Applications: Proceedings of the Second International Conference on Genetic Algorithms, P41
   Assunçao WKG, 2014, INFORM SCIENCES, V267, P119, DOI 10.1016/j.ins.2013.12.040
   Assunçao WKG, 2011, GECCO-2011: PROCEEDINGS OF THE 13TH ANNUAL GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P1867
   Guizzo G, 2017, APPL SOFT COMPUT, V56, P331, DOI 10.1016/j.asoc.2017.03.012
   HAJELA P, 1992, STRUCT OPTIMIZATION, V4, P99, DOI 10.1007/BF01759923
   Hao D, 2016, IEEE T SOFTWARE ENG, V42, P490, DOI 10.1109/TSE.2015.2496939
   Hoffmann Marc R., Eclemma - java code coverage for eclipse
   Just R, 2014, P 2014 INT S SOFTW T, P437, DOI DOI 10.1145/2610384.2628055
   KITCHENHAM B, 1995, IEEE SOFTWARE, V12, P52, DOI 10.1109/52.391832
   Knowles J., 2006, TIK REPORT, V214, P327
   Knowles J, 1999, P 1999 C EV COMP CEC, P98, DOI [DOI 10.1109/CEC.1999.781913, 10.1109/cec.1999.781913]
   Konak A, 2006, RELIAB ENG SYST SAFE, V91, P992, DOI 10.1016/j.ress.2005.11.018
   Li W, 2012, PROCEEDINGS OF THE ASME SUMMER HEAT TRANSFER CONFERENCE, 2012, VOL 2, P41, DOI 10.1109/ISdea.2012.565
   Li Y, 2017, EMPIR SOFTW ENG, V22, P175, DOI 10.1007/s10664-015-9418-0
   Li Z, 2007, IEEE T SOFTWARE ENG, V33, P225, DOI 10.1109/TSE.2007.38
   Liang Y, 2011, APPL SOFT COMPUT, V11, P2017, DOI 10.1016/j.asoc.2010.06.017
   LLOYD SP, 1982, IEEE T INFORM THEORY, V28, P129, DOI 10.1109/TIT.1982.1056489
   Lu YF, 2016, PROC INT CONF SOFTW, P535, DOI 10.1145/2884781.2884874
   MacQueen J., 1967, P 5 BERK S MATH STAT, P281
   Maia C. L. B., 2009, P AN 41 S BRAS PESQ, P1824
   MANN HB, 1947, ANN MATH STAT, V18, P50, DOI 10.1214/aoms/1177730491
   Martin W, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P435, DOI 10.1145/2950290.2950320
   McMinn P., 2011, 2011 IEEE Fourth International Conference on Software Testing, Verification and Validation Workshops (ICSTW), P153, DOI 10.1109/ICSTW.2011.100
   Montgomery D.C., 1991, DESIGN ANAL EXPT
   Nebro AJ, 2009, MCDM: 2009 IEEE SYMPOSIUM ON COMPUTATIONAL INTELLIGENCE IN MULTI-CRITERIA DECISION-MAKING, P66
   Nebro AJ, 2008, IEEE T EVOLUT COMPUT, V12, P439, DOI 10.1109/TEVC.2007.913109
   Nebro AJ, 2009, INT J INTELL SYST, V24, P726, DOI 10.1002/int.20358
   Neumann Geoffrey, 2015, Search-Based Software Engineering. 7th International Symposium, SSBSE 2015. Proceedings: LNCS 9275, P318, DOI 10.1007/978-3-319-22183-0_29
   Pietrantuono R, 2018, IEEE T EVOLUT COMPUT, V22, P347, DOI 10.1109/TEVC.2017.2691060
   Pitangueira AM, 2017, INFORM SOFTWARE TECH, V87, P104, DOI 10.1016/j.infsof.2017.03.001
   Pradhan D, 2017, IEEE INT CONF SOFTW, P367, DOI 10.1109/ICST.2017.40
   Pradhan D, 2016, LECT NOTES COMPUT SC, V9976, P172, DOI 10.1007/978-3-319-47443-4_11
   Pradhan D, 2016, GECCO'16: PROCEEDINGS OF THE 2016 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P1085, DOI 10.1145/2908812.2908850
   Praditwong K, 2011, IEEE T SOFTWARE ENG, V37, P264, DOI 10.1109/TSE.2010.26
   Qing Gu, 2010, 2010 International Symposium on Parallel and Distributed Processing with Applications (ISPA 2010), P419, DOI 10.1109/ISPA.2010.62
   Rothermel G, 2001, IEEE T SOFTWARE ENG, V27, P929, DOI 10.1109/32.962562
   Rothermel G, 1996, IEEE T SOFTWARE ENG, V22, P529, DOI 10.1109/32.536955
   Rothermel G., 1999, Proceedings IEEE International Conference on Software Maintenance - 1999 (ICSM'99). `Software Maintenance for Business Change' (Cat. No.99CB36360), P179, DOI 10.1109/ICSM.1999.792604
   Sareni B., 1998, IEEE Transactions on Evolutionary Computation, V2, P97, DOI 10.1109/4235.735432
   Sarro F, 2016, PROC INT CONF SOFTW, P619, DOI 10.1145/2884781.2884830
   Sayyad AS, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P492, DOI 10.1109/ICSE.2013.6606595
   Sayyad AS, 2013, INT WORK REAL ARTIF, P21, DOI 10.1109/RAISE.2013.6615200
   Shukla A, 2015, 2015 1ST INTERNATIONAL CONFERENCE ON FUTURISTIC TRENDS ON COMPUTATIONAL ANALYSIS AND KNOWLEDGE MANAGEMENT (ABLAZE), P515, DOI 10.1109/ABLAZE.2015.7154916
   Sihan Li, 2010, Proceedings of the Tenth International Conference on Quality Software (QSIC 2010), P72, DOI 10.1109/QSIC.2010.15
   Srinivas N., 1994, Evolutionary Computation, V2, P221, DOI 10.1162/evco.1994.2.3.221
   Sun W., 2013, Proceedings of the 28th Symposium on Applied Computing, SAC '13, P1074
   Thiele L, 2009, EVOL COMPUT, V17, P411, DOI 10.1162/evco.2009.17.3.411
   Van Veldhuizen DA, 1998, TR9803 AIR FORC I TE
   Vargha A, 2000, J EDUC BEHAV STAT, V25, P101, DOI 10.3102/10769986025002101
   Vidács L, 2014, 2014 SOFTWARE EVOLUTION WEEK - IEEE CONFERENCE ON SOFTWARE MAINTENANCE, REENGINEERING, AND REVERSE ENGINEERING (CSMR-WCRE), P204, DOI 10.1109/CSMR-WCRE.2014.6747172
   Walcott K.R., 2006, P INT S SOFTW TEST A, P1, DOI DOI 10.1145/1146238.1146240
   Wang S, 2016, PROC INT CONF SOFTW, P631, DOI 10.1145/2884781.2884880
   Wang S, 2016, 2016 IEEE/ACM 38TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING COMPANION (ICSE-C), P182, DOI 10.1145/2889160.2889240
   Wang S, 2015, 2015 IEEE 26TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING (ISSRE), P393, DOI 10.1109/ISSRE.2015.7381833
   Wang S, 2015, J SYST SOFTWARE, V103, P370, DOI 10.1016/j.jss.2014.08.024
   Wang SA, 2013, GECCO'13: PROCEEDINGS OF THE 2013 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P1493
   Wang Z, 2010, IEEE T RELIAB, V59, P563, DOI 10.1109/TR.2010.2057310
   Wang Z, 2008, IEEE C EVOL COMPUTAT, P1148, DOI 10.1109/CEC.2008.4630941
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
   Yoo S, 2012, SOFTW TEST VERIF REL, V22, P67, DOI [10.1002/stv.430, 10.1002/stvr.430]
   Yoo S., 2007, Proceedings of the 2007 international symposium on Software testing and analysis, P140, DOI 10.1145/1273463.1273483
   Yoo S, 2011, LECT NOTES COMPUT SC, V6956, P219, DOI 10.1007/978-3-642-23716-4_20
   Yoo S, 2010, J SYST SOFTWARE, V83, P689, DOI 10.1016/j.jss.2009.11.706
   Zhang Y., 2012, The SBSE repository: A repository and analysis of authors and research articles on search based software engineering
   Zheng Jin-Hua, 2007, Journal of Software, V18, P1287, DOI 10.1360/jos181287
   Zheng Li, 2013, Search Based Software Engineering. 5th International Symposium, SSBSE 2013. Proceedings: LNCS 8084, P111, DOI 10.1007/978-3-642-39742-4_10
   Zhou AM, 2006, IEEE C EVOL COMPUTAT, P892
   Zhu JK, 2009, COMM COM INF SC, V51, P45, DOI 10.1007/978-3-642-04962-0_6
   Zitzler E, 1999, IEEE T EVOLUT COMPUT, V3, P257, DOI 10.1109/4235.797969
   Zitzler E., 2001, TIK-Report, V103, P1
   Zitzler E, 2000, EVOL COMPUT, V8, P173, DOI 10.1162/106365600568202
NR 98
TC 17
Z9 18
U1 6
U2 29
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JAN 1
PY 2021
VL 47
IS 1
BP 86
EP 107
DI 10.1109/TSE.2018.2882176
PG 22
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA PR6XN
UT WOS:000607376900004
DA 2024-07-18
ER

PT J
AU Wang, JY
   Sun, J
   Qin, SC
   Jegourel, C
AF Wang, Jingyi
   Sun, Jun
   Qin, Shengchao
   Jegourel, Cyrille
TI Automatically 'Verifying' Discrete-Time Complex Systems through
   Learning, Abstraction and Refinement
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Verification; model learning; abstraction refinement; cyber-physical
   system
ID PROBABILISTIC-AUTOMATA; VERIFICATION
AB Precisely modeling complex systems like cyber-physical systems is challenging, which often renders model-based system verification techniques like model checking infeasible. To overcome this challenge, we propose a method called LAR to automatically 'verify' such complex systems through a combination of learning, abstraction and refinement from a set of system log traces. We assume that log traces and sampling frequency are adequate to capture 'enough' behaviour of the system. Given a safety property and the concrete system log traces as input, LAR automatically learns and refines system models, and produces two kinds of outputs. One is a counterexample with a bounded probability of being spurious. The other is a probabilistic model based on which the given property is 'verified'. The model can be viewed as a proof obligation, i.e., the property is verified if the model is correct. It can also be used for subsequent system analysis activities like runtime monitoring ormodel-based testing. Our method has been implemented as a self-contained software toolkit. The evaluation on multiple benchmark systems as well as a real-worldwater treatment system shows promising results.
C1 [Wang, Jingyi; Qin, Shengchao] Shenzhen Univ, Coll Comp Sci & Software Engn, Shenzhen 518060, Peoples R China.
   [Wang, Jingyi; Sun, Jun; Jegourel, Cyrille] Singapore Univ Technol & Design, Singapore 487372, Singapore.
   [Qin, Shengchao] Teesside Univ, Sch Comp Media & Arts, Middlesbrough TS1 3BX, Cleveland, England.
C3 Shenzhen University; Singapore University of Technology & Design;
   University of Teesside
RP Wang, JY (corresponding author), Shenzhen Univ, Coll Comp Sci & Software Engn, Shenzhen 518060, Peoples R China.
EM jingyi_wang@sutd.edu.sg; sunjun@sutd.edu.sg; S.Qin@tees.ac.uk;
   cyrille_jegourel@sutd.edu.sg
RI Wang, Jingyi/AHE-1352-2022; Qin, Shengchao/F-4823-2012; Jegourel,
   Cyrille/JKI-6108-2023
OI Wang, Jingyi/0000-0001-7113-7635; Qin, Shengchao/0000-0003-3028-8191; 
FU National Natural Science Foundation of China [61772347]; Science and
   Technology Foundation of Shenzhen City [JCYJ20170302153712968]
FX This work was supported in part by National Natural Science Foundation
   of China under Grant No. 61772347 and Science and Technology Foundation
   of Shenzhen City under Grant No. JCYJ20170302153712968.
CR Abate A, 2017, MEMOCODE 2017: PROCEEDINGS OF THE 15TH ACM-IEEE INTERNATIONAL CONFERENCE ON FORMAL METHODS AND MODELS FOR SYSTEM DESIGN, P92, DOI 10.1145/3127041.3131362
   Abate A, 2015, LECT NOTES COMPUT SC, V9206, P195, DOI 10.1007/978-3-319-21690-4_12
   Abeel T, 2009, J MACH LEARN RES, V10, P931
   ANGLUIN D, 1987, INFORM COMPUT, V75, P87, DOI 10.1016/0890-5401(87)90052-6
   Angluin D, 1988, Identifying languages from stochastic examples
   [Anonymous], 1998, ACM Trans Inform Syst Secur TISSEC, DOI DOI 10.1145/290163.290168
   ~azdil T. Br, 2014, Lecture Notes in Computer Science, P98
   Baier C, 2008, PRINCIPLES OF MODEL CHECKING, P1
   Carrasco R. C., 1994, Grammatical Inference and Applications. Second International Colloquium, ICGI-94 Proceedings, P139
   Carrasco RC, 1999, RAIRO-INF THEOR APPL, V33, P1, DOI 10.1051/ita:1999102
   Chang CC, 2011, ACM T INTEL SYST TEC, V2, DOI 10.1145/1961189.1961199
   Clarke E, 2003, TIME-ICTL 2003: 10TH INTERNATIONAL SYMPOSIUM ON TEMPORAL REPRESENTATION AND REASONING AND FOURTH INTERNATIONAL CONFERENCE ON TEMPORAL LOGIC, PROCEEDINGS, P7
   Clarke E, 2003, J ACM, V50, P752, DOI 10.1145/876638.876643
   Clarke EM, 2011, LECT NOTES COMPUT SC, V6996, P1, DOI 10.1007/978-3-642-24372-1_1
   CORTES C, 1995, MACH LEARN, V20, P273, DOI 10.1007/BF00994018
   De la Higuera C., 2010, GRAMMATICAL INFERENC, V96
   Feng Y., 2011, INT C RUNTIME VERIFI, P276
   Graf S, 1997, LECT NOTES COMPUT SC, V1254, P72
   Haesaert S, 2017, SIAM J CONTROL OPTIM, V55, P2333, DOI 10.1137/16M1079397
   Haesaert S, 2017, AUTOMATICA, V79, P115, DOI 10.1016/j.automatica.2017.01.037
   Hansson H., 1994, Formal Aspects of Computing, V6, P512, DOI 10.1007/BF01211866
   Havelund K, 2002, LECT NOTES COMPUT SC, V2280, P342
   Henzinger T. A., 2004, SIGPLAN Notices, V39, P232, DOI 10.1145/982962.964021
   Henzinger TA, 2002, ACM SIGPLAN NOTICES, V37, P58, DOI 10.1145/565816.503279
   Hermanns H, 2008, LECT NOTES COMPUT SC, V5123, P162
   Hua Mao, 2011, Proceedings of the 2011 Eighth International Conference on Quantitative Evaluation of Systems (QEST 2011), P111, DOI 10.1109/QEST.2011.21
   Jegourel C, 2017, LECT NOTES COMPUT SC, V10503, P333, DOI 10.1007/978-3-319-66335-7_23
   Karsai G, 2008, LECT NOTES COMPUT SC, V5287, P46, DOI 10.1007/978-3-540-87785-1_5
   Katoen J.-P., 2007, COUNTEREXAMPLES PROB
   Kermorvant C, 2002, LECT NOTES ARTIF INT, V2484, P149
   Kroening D, 2004, LECT NOTES COMPUT SC, V3308, P224
   Kwiatkowsa M., 2012, 2012 Ninth International Conference on Quantitative Evaluation of Systems (QEST 2012), P203, DOI 10.1109/QEST.2012.14
   Kwiatkowska Marta, 2011, Computer Aided Verification. Proceedings 23rd International Conference, CAV 2011, P585, DOI 10.1007/978-3-642-22110-1_47
   Legay A, 2010, LECT NOTES COMPUT SC, V6418, P122, DOI 10.1007/978-3-642-16612-9_11
   Mao H., 2012, P QFM 2012, V103, P209
   Mao H, 2016, MACH LEARN, V105, P255, DOI 10.1007/s10994-016-5565-9
   Nouri A, 2014, LECT NOTES COMPUT SC, V8734, P340, DOI 10.1007/978-3-319-11164-3_28
   Parker D., PRISM DTMC BENCHMARK
   Pretschner A, 2005, PROC INT CONF SOFTW, P722
   Rohr C, 2013, LECT NOTES COMPUT SC, V8100, P142
   Ron D, 1996, MACH LEARN, V25, P117, DOI 10.1007/BF00114008
   Ron D., 1995, Proceedings of the Eighth Annual Conference on Computational Learning Theory, P31, DOI 10.1145/225298.225302
   Sen K, 2004, LECT NOTES COMPUT SC, V3114, P202
   Sen K, 2004, INT CONF QUANT EVAL, P146
   Soudjani SEZ, 2013, SIAM J APPL DYN SYST, V12, P921, DOI 10.1137/120871456
   Soudjani SEZ, 2015, LOG METH COMPUT SCI, V11, DOI 10.2168/LMCS-11(3:8)2015
   Tkachev I, 2017, INFORM COMPUT, V253, P1, DOI 10.1016/j.ic.2016.11.006
   Wachter B, 2007, INT CONF QUANT EVAL, P129, DOI 10.1109/QEST.2007.10
   Wald Abraham, 1947, SEQUENTIAL ANAL
   Wang JY, 2017, LECT NOTES COMPUT SC, V10202, P3, DOI 10.1007/978-3-662-54494-5_1
   Wolf V., 2003, P INT C CONC THEOR, P492
   Yingke Chen, 2012, NASA Formal Methods. Proceedings of the 4th International Symposium, NFM 2012, P216, DOI 10.1007/978-3-642-28891-3_22
   Younes H. L. S., 2002, Computer Aided Verification. 14th International Conference, CAV 2002. Proceedings (Lecture Notes in Computer Science Vol.2404), P223
   Younes H. L. S, 2005, THESIS COMPUTER SCI
   Younes HLS, 2011, LECT NOTES COMPUT SC, V6527, P144, DOI 10.1007/978-3-642-19829-8_10
   Zamani M, 2014, IEEE T AUTOMAT CONTR, V59, P3135, DOI 10.1109/TAC.2014.2351652
NR 56
TC 3
Z9 3
U1 0
U2 5
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JAN 1
PY 2021
VL 47
IS 1
BP 189
EP 203
DI 10.1109/TSE.2018.2886898
PG 15
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA PR6XN
UT WOS:000607376900009
OA Green Accepted, Green Submitted
DA 2024-07-18
ER

PT J
AU Kim, M
   Zimmermann, T
   DeLine, R
   Begel, A
AF Kim, Miryung
   Zimmermann, Thomas
   DeLine, Robert
   Begel, Andrew
TI Data Scientists in Software Teams: State of the Art and Challenges
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Data science; development roles; software engineering; industry
ID ANALYTICS
AB The demand for analyzing large scale telemetry, machine, and quality data is rapidly increasing in software industry. Data scientists are becoming popular within software teams, e.g., Facebook, Linkedln and Microsoft are creating a new career path for data scientists. In this paper, we present a large-scale survey with 793 professional data scientists at Microsoft to understand their educational background, problem topics that they work on, tool usages, and activities. We cluster these data scientists based on the time spent for various activities and identify 9 distinct clusters of data scientists, and their corresponding characteristics. We also discuss the challenges that they face and the best practices they share with other data scientists. Our study finds several trends about data scientists in the software engineering context at Microsoft, and should inform managers on how to leverage data science capability effectively within their teams.
C1 [Kim, Miryung] Univ Calif Los Angeles, 420 Westwood Plaza,4532-H Boelter Hall, Los Angeles, CA 90095 USA.
   [Zimmermann, Thomas; DeLine, Robert; Begel, Andrew] Microsoft Res, One Microsoft Way, Redmond, WA 98052 USA.
C3 University of California System; University of California Los Angeles;
   Microsoft
RP Kim, M (corresponding author), Univ Calif Los Angeles, 420 Westwood Plaza,4532-H Boelter Hall, Los Angeles, CA 90095 USA.
EM miryung@cs.ucla.edu; tzimmer@microsoft.com; rdeline@microsoft.com;
   abegel@microsoft.com
RI Begel, Andrew/AAP-9630-2020; Zimmermann, Thomas/C-4377-2019
OI Begel, Andrew/0000-0002-7425-4818; Zimmermann,
   Thomas/0000-0003-4905-1469
CR [Anonymous], 39 INT C SOFTW ENG H
   [Anonymous], 2011, BIG DATA NEXT FRONTI
   [Anonymous], 2015, The Field Guide to Data Science
   [Anonymous], MSRTR20161127 MICR C
   [Anonymous], 38 IEEE ACM INT C SO
   Basili VR, 1999, IEEE T SOFTWARE ENG, V25, P456, DOI 10.1109/32.799939
   Brace Ian., 2013, Questionnaire Design: How to Plan, Structure and Write Survey Material for Effective Market Research, V3rd
   Buse RPL, 2012, PROC INT CONF SOFTW, P987, DOI 10.1109/ICSE.2012.6227122
   Buse Raymond PL, 2010, P FSE SDP WORKSHOP F, P77
   Davenport TH, 2012, HARVARD BUS REV, V90, P70
   Davenport ThomasH., 2010, Analytics at Work: Smarter Decisions, Better Results
   Fisher Danyel, 2012, Interactions, V19, P50, DOI 10.1145/2168931.2168943
   Foreman John W., 2013, Data smart: Using data science to transform information into insight
   Guo P., 2013, Data Science Workflow: Overview and Challenge
   Harris H., 2013, ANAL ANAL INTROSPECT
   Hudson W., 2013, ENCY HUMAN COMPUTER, V2nd
   Kandel S, 2012, IEEE T VIS COMPUT GR, V18, P2917, DOI 10.1109/TVCG.2012.219
   Kaufman L., 2009, FINDING GROUPS DATA
   Lave J., 1991, SITUATED LEARNING LE, DOI DOI 10.1017/CBO9780511815355
   Lehmann EL, 2010, TESTING STAT HYPOTHE
   May T., 2009, The new know, innovation power by analytics
   McDonald J.H., 2009, HDB BIOL STAT, V2
   O'Neil C., 2013, DOING DATA SCI STRAI
   Patil DJ., 2011, Building data science teams
   Punter T, 2003, 2003 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P80, DOI 10.1109/ISESE.2003.1237967
   Robbes R, 2013, IEEE SOFTWARE, V30, P46, DOI 10.1109/MS.2013.92
   ROUSSEEUW PJ, 1987, J COMPUT APPL MATH, V20, P53, DOI 10.1016/0377-0427(87)90125-7
   Singer J, 2002, IEEE T SOFTWARE ENG, V28, P1171, DOI 10.1109/TSE.2002.1158289
   Smith E, 2013, 2013 6TH INTERNATIONAL WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING (CHASE), P89, DOI 10.1109/CHASE.2013.6614738
   Zhang DM, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P1487
   Zhang DM, 2013, IEEE SOFTWARE, V30, P30, DOI 10.1109/MS.2013.94
   Zhang DM, 2012, PROC INT CONF SOFTW, P997
   Zimmermann T, 2016, PERSPECTIVES ON DATA SCIENCE FOR SOFTWARE ENGINEERING, P137
NR 33
TC 95
Z9 101
U1 2
U2 15
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD NOV
PY 2018
VL 44
IS 11
BP 1024
EP 1038
DI 10.1109/TSE.2017.2754374
PG 15
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA HA1IB
UT WOS:000449964600001
DA 2024-07-18
ER

PT J
AU Betts, A
   Chong, N
   Deligiannis, P
   Donaldson, AF
   Ketema, J
AF Betts, Adam
   Chong, Nathan
   Deligiannis, Pantazis
   Donaldson, Alastair F.
   Ketema, Jeroen
TI Implementing and Evaluating Candidate-Based Invariant Generation
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Formal verification; GPUs; invariant generation
ID VERIFICATION
AB The discovery of inductive invariants lies at the heart of static program verification. Presently, many automatic solutions to inductive invariant generation are inflexible, only applicable to certain classes of programs, or unpredictable. An automatic technique that circumvents these deficiencies to some extent is candidate-based invariant generation, whereby a large number of candidate invariants are guessed and then proven to be inductive or rejected using a sound program analyzer. This paper describes our efforts to apply candidate-based invariant generation in GPUVerify, a static checker for programs that run on GPUs. We study a set of 383 GPU programs that contain loops, drawn from a number of open source suites and vendor SDKs. Among this set, 253 benchmarks require provision of loop invariants for verification to succeed. We describe the methodology we used to incrementally improve the invariant generation capabilities of GPUVerify to handle these benchmarks, through candidate-based invariant generation, using cheap static analysis to speculate potential program invariants. We also describe a set of experiments that we used to examine the effectiveness of our rules for candidate generation, assessing rules based on their generality (the extent to which they generate candidate invariants), hit rate (the extent to which the generated candidates hold), worth (the extent to which provable candidates actually help in allowing verification to succeed), and influence (the extent to which the success of one generation rule depends on candidates generated by another rule). We believe that our methodology may serve as a useful framework for other researchers interested in candidate-based invariant generation. The candidates produced by GPUVerify help to verify 231 of the 253 programs. This increase in precision, however, makes GPUVerify sluggish: the more candidates that are generated, the more time is spent determining which are inductive invariants. To speed up this process, we have investigated four under-approximating program analyses that aim to reject false candidates quickly and a framework whereby these analyses can run in sequence or in parallel. Across two platforms, running Windows and Linux, our results show that the best combination of these techniques running sequentially speeds up invariant generation across our benchmarks by 1: 17 x (Windows) and 1: 01 x (Linux), with per-benchmark best speedups of 93: 58 x (Windows) and 48: 34 x (Linux), and worst slowdowns of 10: 24 x (Windows) and 43: 31 x (Linux). We find that parallelizing the strategies marginally improves overall invariant generation speedups to 1: 27 x (Windows) and 1: 11 x (Linux), maintains good best-case speedups of 91: 18 x (Windows) and 44: 60 x (Linux), and, importantly, dramatically reduces worst-case slowdowns to 3: 15 x (Windows) and 3: 17 x (Linux).
C1 [Betts, Adam; Chong, Nathan; Deligiannis, Pantazis; Donaldson, Alastair F.; Ketema, Jeroen] Imperial Coll London, Dept Comp, London SW7 2AZ, England.
C3 Imperial College London
RP Betts, A (corresponding author), Imperial Coll London, Dept Comp, London SW7 2AZ, England.
EM abetts@imperial.ac.uk; nyc04@imperial.ac.uk;
   p.deligiannis@imperial.ac.uk; afd@imperial.ac.uk;
   j.ketema@imperial.ac.uk
OI Deligiannis, Pantazis/0000-0001-7582-4520
FU EU FP7 STREP project CARP [287767]; EPSRC PSL project [EP/I006761/1];
   Imperial College London's EPSRC Impact Acceleration Account; EPSRC
   [EP/I006761/1, EP/R006865/1] Funding Source: UKRI
FX This work was supported by the EU FP7 STREP project CARP (project number
   287767), the EPSRC PSL project (EP/I006761/1), Imperial College London's
   EPSRC Impact Acceleration Account, and a gift from Intel Corporation.
CR [Anonymous], C AMP SAMPL PROJ DOW
   [Anonymous], 1993, Program Verification: Fundamental Issues in Computer Science, DOI [10.1090/psapm/019/0235771, DOI 10.1090/PSAPM/019/0235771]
   [Anonymous], TRANSLATION VALIDATI
   [Anonymous], 2014, P OFAUSTRALASIAN C R
   [Anonymous], CUDA-MEMCHECK
   [Anonymous], ACC PAR PROC SDK
   [Anonymous], GPU COMP SDK
   [Anonymous], POLYPENCH C POLYHEDR
   [Anonymous], 2013, CUDA C PROGRAMMING G
   [Anonymous], BAS CL
   [Anonymous], P 6 INT S NASA FORM
   [Anonymous], P 2 USENIX WORKSH HO
   [Anonymous], ACM T ARCHIT CODE OP
   [Anonymous], SYNTHESIS PARALLEL A
   [Anonymous], 2012, CTR RELIABLE HIGH PE
   [Anonymous], P 4 WORKSH TOOLS AUT
   Baghdadi R, 2015, INT CONFER PARA, P138, DOI 10.1109/PACT.2015.17
   Bakhoda A, 2009, INT SYM PERFORM ANAL, P163, DOI 10.1109/ISPASS.2009.4919648
   Ball T., 2003, International Journal on Software Tools for Technology Transfer, V5, P49, DOI 10.1007/s10009-002-0095-0
   Bardsley E., 2014, P IWOCL, P1, DOI [10.1145/2664666.2664673, DOI 10.1145/2664666.2664673]
   BARNETT M, 2005, LNCS, V4111, P364, DOI DOI 10.1007/11804192_17
   Barnett Mike, 2005, PASTE, V31, P82, DOI [DOI 10.1145/1108792, DOI 10.1145/1108792.1108813]
   Barrett Clark, 2011, Computer Aided Verification. Proceedings 23rd International Conference, CAV 2011, P171, DOI 10.1007/978-3-642-22110-1_14
   Betts A, 2015, ACM T PROGR LANG SYS, V37, DOI 10.1145/2743017
   Betts A, 2012, ACM SIGPLAN NOTICES, V47, P113, DOI 10.1145/2398857.2384625
   Blom S, 2014, SCI COMPUT PROGRAM, V95, P376, DOI 10.1016/j.scico.2014.03.013
   Che SA, 2009, I S WORKL CHAR PROC, P44, DOI 10.1109/IISWC.2009.5306797
   Chong N, 2013, ACM SIGPLAN NOTICES, V48, P605, DOI [10.1145/2544173.2509517, 10.1145/2509136.2509517]
   Clarke E, 2004, LECT NOTES COMPUT SC, V2988, P168, DOI 10.1007/978-3-540-24730-2_15
   Collingbourne P, 2014, IEEE T SOFTWARE ENG, V40, P710, DOI 10.1109/TSE.2013.2297120
   Collingbourne P, 2013, LECT NOTES COMPUT SC, V7792, P270, DOI 10.1007/978-3-642-37036-6_16
   Cousot P., 1977, C RECORD 4 ANN ACM S, P238, DOI DOI 10.1145/512950.512973
   Danalis A., 2010, Proceedings of the 3rd Workshop on General-Purpose Computation on Graphics Processing Units, P63, DOI [10.1145/1735688.1735702, DOI 10.1145/1735688.1735702]
   de Moura L, 2008, LECT NOTES COMPUT SC, V4963, P337, DOI 10.1007/978-3-540-78800-3_24
   DeLine R., 2005, Technical report. MSR-TR-2005-70
   Dillig I, 2013, ACM SIGPLAN NOTICES, V48, P443, DOI [10.1145/2509136.2509511, 10.1145/2544173.2509511]
   Ernst MD, 2001, IEEE T SOFTWARE ENG, V27, P99, DOI 10.1109/32.908957
   Flanagan C., 2001, FME 2001: Formal Methods for Increasing Software Productivity. International Symposium on Formal Methods Europe. Proceedings (Lecture Notes in Computer Science Vol.2021), P500
   Flanagan C, 2001, INFORM PROCESS LETT, V77, P97, DOI 10.1016/S0020-0190(00)00196-4
   Graf S, 1997, LECT NOTES COMPUT SC, V1254, P72
   Gupta A, 2009, LECT NOTES COMPUT SC, V5643, P634, DOI 10.1007/978-3-642-02658-4_48
   Jaccard P., 1912, New Phytologist, V11, P37, DOI [10.1111/j.1469-8137.1912.tb05611.x, DOI 10.1111/J.1469-8137.1912.TB05611.X]
   Jeannet B, 2014, ACM SIGPLAN NOTICES, V49, P529, DOI 10.1145/2535838.2535843
   Jeannet B, 2009, LECT NOTES COMPUT SC, V5643, P661, DOI 10.1007/978-3-642-02658-4_52
   Khronos OpenCL Working Group, 2013, OPENCL SPEC VERS 2 0
   Kojima Kensuke, 2013, Programming Languages and Systems. 11th Asian Symposium, APLAS 2013. Proceedings: LNCS 8301, P58, DOI 10.1007/978-3-319-03542-0_5
   Kovács L, 2009, LECT NOTES COMPUT SC, V5503, P470
   Lal Akash, 2012, Computer Aided Verification. Proceedings 24th International Conference, CAV 2012, P427, DOI 10.1007/978-3-642-31424-7_32
   Leung A, 2012, ACM SIGPLAN NOTICES, V47, P383, DOI 10.1145/2345156.2254110
   Li G., 2010, Proceedings of the eighteenth ACM SIGSOFT international symposium on Founda- tions of software engineering, FSE '10, P187
   Li GD, 2012, ACM SIGPLAN NOTICES, V47, P215, DOI 10.1145/2370036.2145844
   Liew D, 2016, IEEE INT CONF SOFTW, P45, DOI 10.1109/ICST.2016.11
   McMillan KL, 2006, LECT NOTES COMPUT SC, V4144, P123
   Mytkowicz T, 2009, ACM SIGPLAN NOTICES, V44, P265, DOI 10.1145/1508284.1508275
   Nimmer J. W., 2002, Software Engineering Notes, V27, P11, DOI 10.1145/605466.605469
   Pereira P., 2016, P SAC, P1648, DOI [10.1145/2851613.2851830, DOI 10.1145/2851613.2851830]
   Polikarpova N, 2013, LECT NOTES COMPUT SC, V8174, P251, DOI 10.1007/978-3-642-40787-1_15
   Polikarpova N, 2009, ISSTA 2009: INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P93
   van Eijk CAJ, 1998, DESIGN, AUTOMATION AND TEST IN EUROPE, PROCEEDINGS, P618, DOI 10.1109/DATE.1998.655922
   Verdoolaege Sven, 2014, IMPACT 4 WORKSHOP PO, P1
   Zheng M., 2011, P 16 ACM S PRINC PRA, P135, DOI [DOI 10.1145/2038037.1941574, DOI 10.1145/1941553.1941574]
NR 61
TC 2
Z9 2
U1 0
U2 2
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUL
PY 2018
VL 44
IS 7
BP 631
EP 650
DI 10.1109/TSE.2017.2718516
PG 20
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA GN3LJ
UT WOS:000438906900002
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Rempel, P
   Mäder, P
AF Rempel, Patrick
   Maeder, Parick
TI Preventing Defects: The Impact of Requirements Traceability Completeness
   on Software Quality
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Requirements traceability; traceability completeness; traceability
   metrics; change impact analysis; requirements satisfaction analysis;
   source code justification analysis; software quality; error proneness;
   defects; bugs; empirical validation; regression analysis
ID MODEL; MAINTENANCE; METRICS; LINKS
AB Requirements traceability has long been recognized as an important quality of a well-engineered system. Among stakeholders, traceability is often unpopular due to the unclear benefits. In fact, little evidence exists regarding the expected traceability benefits. There is a need for empirical work that studies the effect of traceability. In this paper, we focus on the four main requirements implementation supporting activities that utilize traceability. For each activity, we propose generalized traceability completeness measures. In a defined process, we selected 24 medium to large-scale open-source projects. For each software project, we quantified the degree to which a studied development activity was enabled by existing traceability with the proposed measures. We analyzed that data in a multi-level Poisson regression analysis. We found that the degree of traceability completeness for three of the studied activities significantly affects software quality, which we quantified as defect rate. Our results provide for the first time empirical evidence that more complete traceability decreases the expected defect rate in the developed software. The strong impact of traceability completeness on the defect rate suggests that traceability is of great practical value for any kind of software development project, even if traceability is not mandated by a standard or regulation.
C1 [Rempel, Patrick; Maeder, Parick] Tech Univ Ilmenau, Software Engn Safety Crit Syst Grp, D-98693 Ilmenau, Germany.
C3 Technische Universitat Ilmenau
RP Rempel, P (corresponding author), Tech Univ Ilmenau, Software Engn Safety Crit Syst Grp, D-98693 Ilmenau, Germany.
EM patrick.rempel@tu.ilmenau.de; patrick.maeder@tu-ilmenau.de
RI Mäder, Patrick/A-1848-2018
OI Mäder, Patrick/0000-0001-6871-2707; Rempel, Patrick/0000-0002-9914-1182
FU German Ministry of Education and Research (BMBF) [01IS14026A,
   01IS16003B]; Thuringer Aufbaubank (TAB) grant [2015FE9033]
FX We are funded by the German Ministry of Education and Research (BMBF)
   grants: 01IS14026A, 01IS16003B and by the Thuringer Aufbaubank (TAB)
   grant: 2015FE9033. We would like to thank Jana Waldchen and Michael
   Rzanny for sharing their statistical expertise and providing early
   feedback on our empirical validation methods.
CR Activiti Team, 2015, ACT LIGHT WEIGHT WOR
   Ahn Y, 2003, J SOFTW MAINT EVOL-R, V15, P71, DOI 10.1002/smr.269
   Ali N, 2013, IEEE T SOFTWARE ENG, V39, P725, DOI 10.1109/TSE.2012.71
   [Anonymous], 2010, 615083 IEC
   [Anonymous], 2006, CMMI DEV VERS 1 2
   Arkley P, 2005, 13th IEEE International Conference on Requirements Engineering, Proceedings, P385, DOI 10.1109/RE.2005.49
   Atlassian, 2015, JIR SOFTW ISS PROJ T
   Belsley D. A., 2005, REGRESSION DIAGNOSTI
   Bohner SA, 1996, INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE, PROCEEDINGS, P42, DOI 10.1109/ICSM.1996.564987
   Bouillon Elke, 2013, Requirements Engineering: Foundation for Software Quality. 19th International Working Conference, REFSQ 2013. Proceedings, P158, DOI 10.1007/978-3-642-37422-7_12
   Briand LC, 2000, J SYST SOFTWARE, V51, P245, DOI 10.1016/S0164-1212(99)00102-8
   Cataldo M, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P161, DOI 10.1145/1985793.1985816
   Center of Excellence for Software Traceability (COEST), 2015, SOFTW TRAC
   Center of Excellence for Software Traceability (COEST), 2015, WHAT IS TRAC
   Cleland-Huang J, 2003, IEEE T SOFTWARE ENG, V29, P796, DOI 10.1109/TSE.2003.1232285
   Cleland-Huang J., 2004, Proceedings. 12th IEEE International Requirements Engineering Conference, P214, DOI [10.1109/ICRE.2004.1335680, DOI 10.1109/ICRE.2004.1335680]
   Cleland-Huang J., 2014, FOSE P FUTURE SOFTWA, P55
   Cleland-Huang J, 2007, COMPUTER, V40, P27, DOI 10.1109/MC.2007.195
   Codehaus Team, 2015, COD COLL SOFTW DEV E
   COSTELLO RJ, 1995, J SYST SOFTWARE, V29, P39, DOI 10.1016/0164-1212(94)00127-9
   Crawley MJ., 2012, R BOOK
   Dasgupta T, 2013, PROC IEEE INT CONF S, P320, DOI 10.1109/ICSM.2013.43
   de Halleux J., 2015, QUICKGRAPH GRAPH DAT
   De Lucia A, 2011, IEEE T SOFTWARE ENG, V37, P205, DOI 10.1109/TSE.2010.89
   De Lucia A, 2008, 2008 FRONTIERS OF SOFTWARE MAINTENANCE, P21, DOI 10.1109/FOSM.2008.4659245
   Dellarosa D., 1982, 115ONR DTIC
   Dick J., 2002, P 1 INT WORKSH TRAC, P18
   Dit B, 2013, 2013 7TH INTERNATIONAL WORKSHOP ON TRACEABILITY IN EMERGING FORMS OF SOFTWARE ENGINEERING (TEFSE), P105, DOI 10.1109/TEFSE.2013.6620164
   Domges R, 1998, COMMUN ACM, V41, P54, DOI 10.1145/290133.290149
   Falessi D., 2011, Proceedings of the 19th ACM SIGSOFT symposium and the 13th European conference on Foundations of software engineering, P460
   Finch WH, 2014, CH CRC STAT SOC BEHA, P1
   Finkelstein A, 2012, SOFTWARE SYSTEMS TRA
   Fitzgerald C, 2011, INT REQUIR ENG CONF, P229, DOI 10.1109/RE.2011.6051658
   Flyvbjerg B, 2006, QUAL INQ, V12, P219, DOI 10.1177/1077800405284363
   GeoServer Team, 2015, GEOSERVER OP SOUR SE
   GeoTools Team, 2015, GEO TOOLS OP SOURC J
   Gethers M., 2011, 2011 IEEE 27th International Conference on Software Maintenance, P133, DOI 10.1109/ICSM.2011.6080780
   Google, 2015, GOOGL COD PORJ HOST
   Gotel O., 2012, SOFTWARE SYSTEMS TRA, P3, DOI [DOI 10.1007/978-1-4471-2239-5_1, 10.1007/978-1-4471-2239-5_1]
   Gotel O. C. Z., 1994, Proceedings of the First International Conference on Requirements Engineering (Cat. No.94TH0613-0), P94, DOI 10.1109/ICRE.1994.292398
   Grady S., 2015, CHANGING TACK EVOLVI
   Grails Team, 2015, GRAILS FRAM A POW GR
   Graves TL, 2000, IEEE T SOFTWARE ENG, V26, P653, DOI 10.1109/32.859533
   Groovy Team, 2015, ECL TOOL SUPP GROOV
   Groovy Team, 2015, GROOV MULT LANG JAV
   GumTree Team, 2015, GUM TREE SCI SUIT PE
   Gunter CA, 2000, IEEE SOFTWARE, V17, P37, DOI 10.1109/52.896248
   Heindl M., 2005, P 10 EUROPEAN SOFTWA, P60
   Herbsleb JD, 2005, PROC INT CONF SOFTW, P524
   HornetQ Team, 2015, HORNETQ OP SOURC PRO
   Hull E, 2011, REQUIREMENTS ENGINEERING, THIRD EDITION, P1, DOI 10.1007/978-1-84996-405-0
   Ingram C., 2012, Software and Systems Traceability, P23
   IronJacamar Team, 2015, IR IMPL JAV EE CONN
   *ISO, 2004, 155042004 ISOIEC
   Jaber K, 2013, IEEE ACCESS, V1, P726, DOI 10.1109/ACCESS.2013.2286822
   JBoss Community, 2015, NAR TRANS TOOLK WHIC
   JBoss Community, 2015, JBOSS FAM LIGHTW CLO
   JBoss Community, 2015, ERR FRAM JAV GWT WEB
   JBoss Community, 2015, DROOLS BUS RUL MAN S
   JBoss Community, 2015, TORQUEBOX NEW KIND R
   Kabacoff R., 2011, R IN ACTION
   Keenan E, 2012, PROC INT CONF SOFTW, P1375, DOI 10.1109/ICSE.2012.6227244
   Kelly T., 1999, Arguing safety-a systematic approach to managing safety cases
   KIM JO, 1981, SOCIOL METHOD RES, V10, P187, DOI 10.1177/004912418101000203
   Kitchenham B, 1996, IEEE SOFTWARE, V13, P12, DOI 10.1109/52.476281
   Kpodjedo S, 2011, EMPIR SOFTW ENG, V16, P141, DOI 10.1007/s10664-010-9151-7
   Kuang HY, 2015, J SOFTW-EVOL PROC, V27, P838, DOI 10.1002/smr.1736
   Linåker J, 2016, LECT NOTES COMPUT SC, V9619, P63, DOI 10.1007/978-3-319-30282-9_5
   Lindvall M, 1996, SOFTWARE PRACT EXPER, V26, P1161, DOI 10.1002/(SICI)1097-024X(199610)26:10<1161::AID-SPE58>3.0.CO;2-X
   Linsbauer L, 2015, 2015 IEEE/ACM 8TH INTERNATIONAL SYMPOSIUM ON SOFTWARE AND SYSTEMS TRACEABILITY, P57, DOI 10.1109/SST.2015.16
   Linsbauer Lukas., 2013, P 17 INT SOFTW PROD, P131
   de la Vara JL, 2016, INFORM SOFTWARE TECH, V72, P16, DOI 10.1016/j.infsof.2015.11.008
   Mäder P, 2015, EMPIR SOFTW ENG, V20, P413, DOI 10.1007/s10664-014-9314-z
   Mäder P, 2013, IEEE SOFTWARE, V30, P58, DOI 10.1109/MS.2013.60
   Mäder P, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P171, DOI 10.1109/ICSM.2012.6405269
   Mäder P, 2009, PROCEEDINGS OF THE 2009 17TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, P143, DOI 10.1109/RE.2009.23
   Mäder P, 2009, 2009 ICSE WORKSHOP ON TRACEABILITY IN EMERGING FORMS OF SOFTWARE ENGINEERING (TEFSE), P21, DOI 10.1109/TEFSE.2009.5069578
   Mäder P, 2008, INT REQUIR ENG CONF, P23, DOI 10.1109/RE.2008.24
   Mahmoud Anas, 2010, 2010 IEEE Proceedings of 34th Annual Computer Software and Applications Conference (COMPSAC 2010), P246, DOI 10.1109/COMPSAC.2010.29
   Mahmoud A, 2011, INT REQUIR ENG CONF, P335, DOI 10.1109/RE.2011.6051663
   Maindonald J., 2010, DATA ANAL GRAPHICS U, V10
   Marcus A, 2003, PROC INT CONF SOFTW, P125, DOI 10.1109/ICSE.2003.1201194
   MongoDB, 2015, MONGODB OP SOURC DOC
   Nagappan N., 2006, 28th International Conference on Software Engineering Proceedings, P452, DOI 10.1145/1134285.1134349
   Nagappan N, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P521, DOI 10.1145/1368088.1368160
   Nejati S, 2012, INFORM SOFTWARE TECH, V54, P569, DOI 10.1016/j.infsof.2012.01.005
   Niu N, 2014, INT REQUIR ENG CONF, P133, DOI 10.1109/RE.2014.6912255
   Panesar-Walawege Rajwinder Kaur, 2010, Proceedings of the Third IEEE International Conference on Software Testing, Verification and Validation (ICST 2010), P335, DOI 10.1109/ICST.2010.12
   Panesar-Walawege RK, 2011, 22ND IEEE INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING (ISSRE), P30, DOI 10.1109/ISSRE.2011.11
   Panichella A, 2013, EUR CON SFTWR MTNCE, P199, DOI 10.1109/CSMR.2013.29
   Pfleeger S. L., 1990, Proceedings. Conference on Software Maintenance 1990 (Cat. No.90CH2921-5), P320, DOI 10.1109/ICSM.1990.131381
   Pinheiro FAC, 2004, SPRING INT SER ENG C, V753, P91
   Pohl K, 2010, REQUIREMENTS ENGINEERING: FUNDAMENTALS, PRINCIPLES, AND TECHNIQUES, P1, DOI 10.1007/978-3-642-12578-2
   Pohl K, 1996, PROCEEDINGS OF THE SECOND INTERNATIONAL CONFERENCE ON REQUIREMENTS ENGINEERING, P76, DOI 10.1109/ICRE.1996.491432
   Rajlich VT, 2000, COMPUTER, V33, P66, DOI 10.1109/2.869374
   Ramesh B, 1998, COMMUN ACM, V41, P37, DOI 10.1145/290133.290147
   Ramesh B., 1995, Proceedings of the Second IEEE International Symposium on Requirements Engineering (Cat. No.95TH8040), P89, DOI 10.1109/ISRE.1995.512549
   Regan G., 2014, CCIS, V425, P206, DOI [10.1007/978-3-662-43896-1_18, DOI 10.1007/978-3-662-43896-1_18]
   Regan G, 2012, EUROMICRO CONF PROC, P319, DOI 10.1109/SEAA.2012.80
   Rempel Patrick, 2013, Requirements Engineering: Foundation for Software Quality. 19th International Working Conference, REFSQ 2013. Proceedings, P125, DOI 10.1007/978-3-642-37422-7_10
   Rempel P., 2017, HARVARD DATAVERSE, DOI [10.7910/DVN/PLCBZV, DOI 10.7910/DVN/PLCBZV]
   Rempel P, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P943, DOI 10.1145/2568225.2568290
   Rempel P, 2015, INT REQUIR ENG CONF, P176, DOI 10.1109/RE.2015.7320420
   Rempel P, 2015, LECT NOTES COMPUT SC, V9013, P81, DOI 10.1007/978-3-319-16101-3_6
   Rempel P, 2013, S VIS LANG HUM CEN C, P195, DOI 10.1109/RE.2013.6636719
   Rempel P, 2013, 2013 7TH INTERNATIONAL WORKSHOP ON TRACEABILITY IN EMERGING FORMS OF SOFTWARE ENGINEERING (TEFSE), P100, DOI 10.1109/TEFSE.2013.6620163
   Rierson Leanna, 2013, Developing Safety-Critical Software: A Practical Guide for Aviation Software and DO-178C Compliance
   Rocher G., 2016, CONTRIBUTING GRAILS
   RTCA, 2011, DO-178c
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Seam2 Team, 2015, SEAM2 FRAM POW OP SO
   Smooks Team, 2015, SMOOKS EXT FRAM BUIL
   Sneed HM, 1995, INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE, 1995 PROCEEDINGS, P168, DOI 10.1109/ICSM.1995.526539
   SonarSource, 2015, SONARQUBE OP PLATF M
   SonarSource, 2015, SONARQUBE C PLUG
   SourceForge Community, 2015, SOURCEFORGE DOWNL DE
   Subramanyam R, 2003, IEEE T SOFTWARE ENG, V29, P297, DOI 10.1109/TSE.2003.1191795
   The Apache Software Foundation, 2015, AP SUBV OP SOURC VER
   The Apache Software Foundation, 2015, AP SOFTW FDN
   The Apache Software Foundation, 2015, AP HAD SOFTW LIB FRA
   The Apache Software Foundation, 2015, AP ARCH EXT REP MAN
   The Apache Software Foundation, 2016, GUID HAD COR COMM
   The Apache Software Foundation, 2015, AP DERB OP SOURC REL
   The Apache Software Foundation, 2015, AP AXIS2 THE WEB SER
   The Apache Software Foundation, 2015, AP PIG PLATF AN LARG
   The Apache Software Foundation, 2016, COMM PATCH DERB SUBV
   The Apache Software Foundation, 2015, AP LUC JAV BAS IND S
   The R Foundation, 2015, WIND AND MACOS
   von Knethen A, 2002, IEEE JOINT INTERNATIONAL CONFERENCE ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P273, DOI 10.1109/ICRE.2002.1048538
   Yin R.K., 2014, Applications of case study research, V2nd
NR 130
TC 49
Z9 56
U1 2
U2 25
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD AUG 1
PY 2017
VL 43
IS 8
BP 777
EP 797
DI 10.1109/TSE.2016.2622264
PG 21
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA FD7FW
UT WOS:000407693000005
DA 2024-07-18
ER

PT J
AU Sadeghi, A
   Bagheri, H
   Garcia, J
   Malek, S
AF Sadeghi, Alireza
   Bagheri, Hamid
   Garcia, Joshua
   Malek, Sam
TI A Taxonomy and Qualitative Comparison of Program Analysis Techniques for
   Security Assessment of Android Software
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Taxonomy and survey; security assessment; android platform; program
   analysis
ID MALWARE DETECTION; MOBILE; RISK; APP
AB In parallel with the meteoric rise of mobile software, we are witnessing an alarming escalation in the number and sophistication of the security threats targeted at mobile platforms, particularly Android, as the dominant platform. While existing research has made significant progress towards detection and mitigation of Android security, gaps and challenges remain. This paper contributes a comprehensive taxonomy to classify and characterize the state-of-the-art research in this area. We have carefully followed the systematic literature review process, and analyzed the results of more than 300 research papers, resulting in the most comprehensive and elaborate investigation of the literature in this area of research. The systematic analysis of the research literature has revealed patterns, trends, and gaps in the existing literature, and underlined key challenges and opportunities that will shape the focus of future research efforts.
C1 [Sadeghi, Alireza; Garcia, Joshua; Malek, Sam] Univ Calif Irvine, Sch Informat & Comp Sci, Irvine, CA 92612 USA.
   [Bagheri, Hamid] Univ Nebraska, Dept Comp Sci & Engn, Lincoln, NE 68588 USA.
C3 University of California System; University of California Irvine;
   University of Nebraska System; University of Nebraska Lincoln
RP Sadeghi, A (corresponding author), Univ Calif Irvine, Sch Informat & Comp Sci, Irvine, CA 92612 USA.
EM alirezs1@uci.edu; bagheri@unl.edu; joshug4@uci.edu; malek@uci.edu
RI Garcia, Joshua/AAO-4575-2021
OI Garcia, Joshua/0000-0002-1696-8783; /0000-0001-6686-466X; Sadeghi,
   Alireza/0000-0002-5817-3911
FU National Science Foundation [CCF-1252644, CNS-1629771, CCF-1618132];
   Defense Advanced Research Projects Agency [D11AP00282]; Army Research
   Office [W911NF-09-1-0273]; Department of Homeland Security
   [HSHQDC-14-C-B0040]; Air Force Office of Scientific Research
   [FA95501610030]; Division of Computing and Communication Foundations;
   Direct For Computer & Info Scie & Enginr [1618132, 1550206] Funding
   Source: National Science Foundation
FX This work was supported in part by awards CCF-1252644, CNS-1629771 and
   CCF-1618132 from the National Science Foundation, D11AP00282 from the
   Defense Advanced Research Projects Agency, W911NF-09-1-0273 from the
   Army Research Office, HSHQDC-14-C-B0040 from the Department of Homeland
   Security, and FA95501610030 from the Air Force Office of Scientific
   Research.
CR Aafer Y., 2015, 22 ACM SIGSAC C COMP
   Aafer Y., 2013, 9 INT ICST C SEC PRI
   Abraham A., 2015, 10 INT C MAL UNW SOF
   Achara J. P., 2014, 7 ACM C SEC PRIV WIR
   Achara JP, 2014, J COMPUT VIROL HACKI, V10, P229, DOI 10.1007/s11416-013-0197-0
   Adebayo OS, 2014, 2014 4TH WORLD CONGRESS ON INFORMATION AND COMMUNICATION TECHNOLOGIES (WICT), P123, DOI 10.1109/WICT.2014.7077314
   Afonso VM, 2015, J COMPUT VIROL HACKI, V11, P9, DOI 10.1007/s11416-014-0226-7
   Agarwal Yuvraj, 2013, P 11 ANN INT C MOB S, P97, DOI DOI 10.1145/2462456.2464460
   Ali-Gombe A., 2015, 5 PROGR PROT REV ENG
   Allix K., 2014, IEEE 38 ANN COMP SOF
   Almohri H. M. J., 2014, 4 ACM C DAT APPL C D
   Amamra A., 2012, 7 INT C MAL UNW SOFT
   Amos B., 2013, 9 INT WIR COMM MOB C
   Andriatsimandefitra R., 2014, 8 INT C NETW SYST SE
   Andronio N., 2015, 18 INT S RES ATT INT
   [Anonymous], ANDROID REVERSING DE
   [Anonymous], 2 IEEE INT C PERV CO
   [Anonymous], 2014, WORKSHOP MOBILE SECU
   [Anonymous], 2010, P 5 INT C MAL UNW SO
   [Anonymous], 2011, PROC 20 USENIX SECUR
   [Anonymous], 2011, Proceedings of the Network and Distributed System Security Symposium, NDSS, San Diego, California, USA, 6-9 February
   [Anonymous], 7 INT C INF SYST SEC
   [Anonymous], 17 IEEE INT C HIGH P
   [Anonymous], 2015, P MOB SEC TECHN WORK
   [Anonymous], 2010, P USENIX S OP SYST D
   [Anonymous], 2008, NETW DISTR SYST SEC
   [Anonymous], 2015, P 22 ACM C COMP COMM
   Apvrille L., 2015, IEEE TRUSTCOM BIGDAT
   Aresu M., 2015, 10 INT C MAL UNW SOF
   Armando A., 2012, 7 INT S TRUSTW GLOB
   Arp D, 2014, 21ST ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2014), DOI 10.14722/ndss.2014.23247
   Arzt S., 2013, 4 INT C RUNT VER REN
   Arzt S., 2013, SOFTW ENG WORKSH FAC
   Arzt S, 2014, ACM SIGPLAN NOTICES, V49, P259, DOI [10.1145/2666356.2594299, 10.1145/2594291.2594299]
   Aswini AM, 2014, 2014 FIFTH INTERNATIONAL CONFERENCE ON THE APPLICATIONS OF DIGITAL INFORMATION AND WEB TECHNOLOGIES (ICADIWT), P81, DOI 10.1109/ICADIWT.2014.6814679
   Au K. W. Y., 2012, ACM C COMP COMM SEC
   Avdiienko V., 2015, 37 IEEE ACM INT C SO
   Backes M., 2013, 19 INT C TOOLS ALG C
   Backes M., 2014, 30 ANN COMP SEC APPL
   Backes M., 2015, 24 USENIX SEC S WASH
   Bae C., 2015, 11 INT C SEC PRIV CO
   Bagheri Hamid, 2016, 2016 46th Annual IEEE/IFIP International Conference on Dependable Systems and Networks (DSN). Proceedings, P514, DOI 10.1109/DSN.2016.53
   Bagheri H., 2015, GMUCSTR20155 DEP COM
   Bagheri H., 2015, 20 INT S FM 2015 FOR
   Bagheri H, 2015, IEEE T SOFTWARE ENG, V41, P866, DOI 10.1109/TSE.2015.2419611
   Bai G., 2010, 6 IT ICS C SEC PRIV
   Bal G., 2012, P MOB SEC TECHN WORK
   Barbon G., 2015, 14 IFIP TC 8 INT C C
   Barrera D., 2014, 7 ACM C SEC PRIV WIR
   Barrera D., 2012, WORKSH SEC PRIV SMAR
   Barrera D, 2010, PROCEEDINGS OF THE 17TH ACM CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY (CCS'10), P73, DOI 10.1145/1866307.1866317
   Barros P., 2015, 30 IEEE ACM INT C AU
   Bartel A., 2012, IEEE ACM INT C AUT S
   Bartel A, 2014, IEEE T SOFTWARE ENG, V40, P617, DOI 10.1109/TSE.2014.2322867
   Bartel Alexandre, 2012, P ACM SIGPLAN INT WO, P27
   Bartsch S., 2013, INT C AV REL SEC REG
   Batyuk L., 2011, 6 INT C MAL UNW SOFT
   Bente I., 2011, 4 INT C TRUST TRUSTW
   Beresford A. R., 2011, 12 WORKSH MOB COMP S
   Berthome P., 2012, 7 INT C AV REL SEC P
   Bhandari S., 2015, 8 INT C SEC INF NETW
   Bhoraskar R., 2014, 23 USENIX SEC S SAN
   Bianchi A., 2015, IEEE S SEC PRIV SAN
   Blackshear S., 2013, ACM SIGPLAN C PROGR
   Blackshear S., 2015, 4 ACM SIGPLAN INT WO
   Boggs N., 2013, ANN COMP SEC APPL C
   Bojjagani S., 2015, ADV SIGN PROC INT RE
   Bose A., 2008, 6 INT C MOB SYST APP
   Brereton P, 2007, J SYST SOFTWARE, V80, P571, DOI 10.1016/j.jss.2006.07.009
   Bucicoiu M., 2015, 10 ACM S INF COMP CO
   Bugiel S, 2012, NDSS, V17, P19
   Bugiel S., 2011, 1 ACM WORKSH SEC PRI
   Bugiel S., 2011, T201104 TECHN U DARM
   Bugiel S., 2013, 22 USENIX SEC S WASH
   Bugliesi M., 2013, FORM TECHN DISTR SYS
   Buhov D., 2015, 10 INT C AV REL SEC
   Burguera I., 2011, 1 ACM WORKSH SEC PRI
   Cai F., 2014, SHTECHSIST20141 SHAN
   Calzavara S, 2016, 1ST IEEE EUROPEAN SYMPOSIUM ON SECURITY AND PRIVACY, P47, DOI 10.1109/EuroSP.2016.16
   Canfora G., 2013, INT C AV REL SEC REG
   Canfora G., 2015, 3 INT WORKSH SOFTW D
   Canfora  Gerardo, 2015, 10 INT C AV REL SEC
   Cao C., 2015, 31 ANN COMP SEC APPL
   Cao C., 2014, 10 INT C SEC PRIV CO
   Cao Y., 2014, 22 ANN NETW DISTR SY
   Cen L, 2015, IEEE T DEPEND SECURE, V12, P400, DOI 10.1109/TDSC.2014.2355839
   Cerbo F. D., 2010, 4 INT WORKSH COMP FO
   Chakradeo S., 2013, Proceedings of ACM Conference on Security and Privacy in Wireless and Mobile Networks WiSec, P13
   Chan P. P., 2012, 5 ACM C SEC PRIV WIR
   Chaudhuri A., 2009, WORKSH PROGR LANG AN
   Chen C.-M., 2014, INT C TRUSTW SYST AP
   Chen K., 2015, 24 USENIX SEC S WASH
   Chen K., 2014, 36 INT C SOFTW ENG H
   Chen KevinZhijie., 2013, NDSS
   Chen Q. A., 2014, 23 USENIX SEC S SAN
   Chen Y.-L., 2015, IEEE TRUSTCOM BIGDAT
   Cheng J., 2007, 5 INT C MOB SYST APP
   Cheng S., 2013, 5 INT S CYB SAF SEC
   Chin E., 2011, P 9 INT C MOB SYST A, P239, DOI DOI 10.1145/1999995.2000018
   Chin E., 2013, 14 INT WORKSH INF SE
   Conti M., 2014, 4 ACM WORKSH SEC PRI
   Conti M., 2010, 13 INT C INF SEC BOC
   Cooley B., 2014, 12 INT C APPL CRYPT
   Costamagna V., 2016, 1 INT WORKSH INN MOB
   Cozza R., 2014, MARKET SHARE ULTRAMO
   Crussell J., 2012, 17 EUR S RES COMP SE
   Crussell J., 2013, 18 EUR S RES COMP SE
   Crussell J., 2014, 12 ANN INT C MOB SYS
   Cui X., 2015, 8 ACM C SEC PRIV WIR
   Cui X., 2014, 19 AUSTR C INF SEC P
   Dagon D, 2004, IEEE PERVAS COMPUT, V3, P11, DOI 10.1109/MPRV.2004.21
   Dai G., 2015, 8 ACM C SEC PRIV WIR
   Dai SF, 2012, 2012 7TH INTERNATIONAL CONFERENCE ON COMPUTING AND CONVERGENCE TECHNOLOGY (ICCCT2012), P550
   Dam M., 2012, ACM C COMP COMM SEC
   Davi L., 2010, 13 INT C INF SEC BOC
   Davis B., 2012, MOBILE SECUR TECHNOL
   Davis Benjamin., 2013, 11 ANN INT C MOB SYS
   Deng H., 2015, 10 ACM S INF COMP CO
   Deshotels L., 2014, 3 ACM SIGPLAN PROGR
   Desnos A., 2012, 45 HAW INT C SYST SC
   Dini G., 2012, 6 INT C MATH METH MO
   Dini G., 2013, INT C AV REL SEC REG
   Dixon B., 2011, 1 ACM WORKSH SEC PRI
   Do Q., 2014, 13 IEEE INT C TRUST
   Dolberg L., 2014, 10 INT ICST C SEC PR
   Eder T., 2013, 2013 INT C AV REL SE
   Egele M., 2013, 2013 ACM SIGSAC C CO
   Egners A., 2012, 11 IEEE INT C TRUST
   Elish K. O., 2012, IEEE MOB SEC TECH MO
   Elish K. O., 2013, TR1303 VIRG POL I ST
   Elish K. O., 2015, IEEE MOB SEC TECHN M
   Enck W., 2009, ACM C COMP COMM SEC
   Enck W., 2011, 20 USENIX SEC S SAN
   Ernst M. D., 2004, P ACM SIGPLAN SIGSOF
   Ernst MD, 2014, CCS'14: PROCEEDINGS OF THE 21ST ACM CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P1092, DOI 10.1145/2660267.2660343
   Fahl S., 2012, ACM CCS 12, P50, DOI DOI 10.1145/2382196.2382205
   Falsina L., 2015, 31 ANN COMP SEC APPL
   Fang Z., 2015, 11 INT C INF SEC PRA
   Fang ZR, 2014, COMPUT SECUR, V43, P205, DOI 10.1016/j.cose.2014.02.007
   Faruki P., 2014, 13 IEEE INT C TRUST
   Faruki P., 2013, 6 INT C SEC INF NETW
   Faruki P, 2015, IEEE COMMUN SURV TUT, V17, P998, DOI 10.1109/COMST.2014.2386139
   Fedler R., 2013, ACM WORKSH SEC PRIV
   Fedler R., 2013, 8 INT C MAL UNW SOFT
   Feizollah A, 2015, DIGIT INVEST, V13, P22, DOI 10.1016/j.diin.2015.02.001
   Feldman S., 2014, 11 IEEE INT C MOB AD
   Felt A. P., 2012, 7 USENIX WORKSH HOT
   Felt A. P., 2011, 20 USENIX SEC S SAN
   Felt A. P., 2011, P 1 ACM WORKSH SEC P, P3, DOI DOI 10.1145/2046614.2046618
   Felt A. P., 2012, S US PRIV SEC WASH D
   Felt AP, 2011, PROCEEDINGS OF THE 18TH ACM CONFERENCE ON COMPUTER & COMMUNICATIONS SECURITY (CCS 11), P627
   Feng Y, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P576, DOI 10.1145/2635868.2635869
   Ferrara P., 2015, 31 ANN COMP SEC APPL
   Feth D., 2012, 6 INT C SOFTW SEC RE
   Ford W., 2000, Secure electronic commerce: building the infrastructure for digital signatures and encryption
   Fratantonio Y., 2015, 12 INT C DET INTR MA
   Freiling F. C., 2014, 10 INT ICST C SEC PR
   Fuchs A. P., 2009, CSTR4991 U MARYL DEP
   Gajrani J., 2015, 8 INT C SEC INF NETW
   Gallingani D., 2014, BLACKHAT LAS VEG US
   Gallo R., 2015, 8 ACM C SEC PRIV WIR
   Gascon Hugo, 2013, P 2013 ACM WORKSH AR, P45
   Gates CS, 2014, IEEE T DEPEND SECURE, V11, P252, DOI 10.1109/TDSC.2013.58
   Gates CS, 2014, IEEE T DEPEND SECURE, V11, P238, DOI 10.1109/TDSC.2014.2302293
   Geneiatakis D, 2015, COMPUT SECUR, V49, P192, DOI 10.1016/j.cose.2014.10.005
   Georgiev M., 2014, 21 ANN NETW DISTR SY
   Gianazza A., 2014, ARXIV14024826
   Gibler C., 2012, P 5 INT C TRUST TRUS, V7344, P291, DOI DOI 10.1007/978-3-642-30921-2
   Gilbert P., 2011, P 2 INT WORKSHOP MOB, P21, DOI DOI 10.1145/1999732.1999740
   Gonzalez H., 2014, 10 INT ICST C SEC PR
   Gonzalez H, 2015, 8 EUR WORKSH SYST SE
   Gordon MI, 2015, 22ND ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2015), DOI 10.14722/ndss.2015.23089
   Gorla A., 2014, 36 INT C SOFTW ENG H
   Graa M., 2014, IEEE 8 INT C SOFTW S
   Graa M., 2012, P INT C CYBERSPACE S, P33
   Grace M., 2012, 10 INT C MOB SYST AP
   Grace M., 2012, P 19 ANN NETW DISTR
   Grace M. C., 2012, 5 ACM C SEC PRIV WIR
   Guo C., 2013, 28 IEEE ACM INT C AU
   Ham HS, 2013, 2013 INTERNATIONAL CONFERENCE ON ICT CONVERGENCE (ICTC 2013): FUTURE CREATIVE CONVERGENCE TECHNOLOGIES FOR NEW ICT ECOSYSTEMS, P492
   Ham YJ, 2014, INT J SECUR APPL, V8, P231, DOI 10.14257/ijsia.2014.8.1.22
   Hamandi K., 2013, 27 INT C ADV INF NET
   Han H., 2015, IEEE 2 INT C CYB SEC
   Han Z., 2014, 13 IEEE INT C TRUST
   Hanna S., 2012, 9 INT C DET INTR MAL
   Hao S., 2013, 11 ANN INT C MOB SYS
   Hao S, 2014, MOBISYS'14: PROCEEDINGS OF THE 12TH ANNUAL INTERNATIONAL CONFERENCE ON MOBILE SYSTEMS, APPLICATIONS, AND SERVICES, P204, DOI 10.1145/2594368.2594390
   Harbach M., 2014, CHI C HUM FACT COMP
   Hardy N., 1988, Operating Systems Review, V22, P36, DOI 10.1145/54289.871709
   Haris M., 2014, ARXIV14104978CS
   Heuser S., 2014, 23 USENIX SEC S SAN
   Ho T.-H., 2014, 4 ACM C DAT APPL SEC
   Hoffmann J., 2013, 28 ANN ACM S APPL CO
   Hoffmann J, 2013, LECT NOTES COMPUT SC, V8145, P348, DOI 10.1007/978-3-642-41284-4_18
   Holavanalli S., 2013, 28 IEEE ACM INT C AU
   Hornyack P., 2011, 18 ACM C COMP COMM S
   Hu W., 2014, 7 ACM C SEC PRIV WIR
   Hu WJ, 2014, 2014 23RD INTERNATIONAL CONFERENCE ON COMPUTER COMMUNICATION AND NETWORKS (ICCCN)
   Huang H., 2015, 10 ACM S INF COMP CO
   Huang H., 2015, 22 ACM SIGSAC C COMP
   Huang H., 2013, 6 INT C TRUST TRUSTW
   Huang J., 2015, 24 USENIX SEC S WASH
   Huang J., 2014, 36 INT C SOFTW ENG H
   Isohara T., 2011, 7 INT C COMP INT SEC
   Jang J., 2013, 28 ANN ACM S APPL CO
   Jeon C., 2013, 28 ANN ACM S APPL CO
   Jeon J., 2012, ACM WORKSH SEC PRIV
   Jeong J., 2014, 9 INT C MAL UNW SOFT
   Jeong Y., 2014, S APPL COMP GYEONGJ
   Jia L., 2013, 18 EUR S RES COMP SE
   Jiang X, 2013, P 8 ACM SIGSAC S INF, P329
   Jiao H., 2014, 10 INT C SEC PRIV CO
   Jiao S., 2015, 11 INT C INF SEC PRA
   Jin X., 2014, 2014 ACM SIGSAC C CO
   Jing Y., 2014, 4 ACM C DAT APPL SEC
   Jing Y., 2014, 30 ANN COMP SEC APPL
   Jing YM, 2015, IEEE T DEPEND SECURE, V12, P571, DOI 10.1109/TDSC.2014.2366457
   John M. M., 2015, 8 INT C SEC INF NETW
   Johnson R., 2012, 6 INT C SOFTW SEC RE
   Johnson R., 2015, 10 INT C MAL UNW SOF
   Jung C., 2013, IEEE 7 INT C SOFTW S
   Kadir A. F. A., 2015, 9 INT C NETW SYST SE
   Kantola D., 2012, WORKSH SEC PRIV SMAR
   Karami M., 2013, 7 INT C SOFTW SEC RE
   Kate P. M., 2015, 3 INT S WOM COMP INF
   Kato M., 2013, 37 ANN IEEE COMP SOF
   Kelley P. G., 2013, ACM SIG CHI C HUM FA
   Kelley P. G., 2012, WORKSH FIN CRYPT DAT
   Khune RS, 2012, 2012 INTERNATIONAL CONFERENCE ON RADAR, COMMUNICATION AND COMPUTING (ICRCC), P180, DOI 10.1109/ICRCC.2012.6450572
   Kim D., 2013, P 3 INT C COMP SCI I
   Kim J., 2012, IEEE MOB SEC TECHN M
   KING JC, 1976, COMMUN ACM, V19, P385, DOI 10.1145/360248.360252
   Kitchenham B., 2004, PROCEDURES PERFORMIN, V33, P1
   Klieber W., 2014, SOAP
   Kou XM, 2011, 2011 4TH IEEE INTERNATIONAL CONFERENCE ON BROADBAND NETWORK AND MULTIMEDIA TECHNOLOGY (4TH IEEE IC-BNMT2011), P624, DOI 10.1109/ICBNMT.2011.6156010
   Kuhnel M., 2015, IEEE TRUSTCOM BIGDAT
   Kywe S. M., 2014, 13 IEEE INT C TRUST
   Lalande J.-F., 2013, INT C AV REL SEC REG
   Lange M., 2011, 1 ACM WORKSH SEC PRI
   Lei L., 2012, 15 INT C INF SEC CRY
   Leontiadis I., 2012, WORKSH MOB COMP SYST
   Li D., 2015, 2015 10 JOINT M FOUN
   Li L., 2015, 30 IFIP TC 11 INT C
   Li L., 2014, ARXIV14047431CS
   Li L., 2015, 37 IEEE ACM INT C SO
   Li L., 2014, 13 IEEE INT C TRUST
   Li Q., 2015, INT C CYB EN DISTR C
   Li S., 2015, 3 INT C HUM ASP INF
   Li T., 2014, ACM SIGSAC C COMP CO
   Li X., 2014, IEEE 8 INT C SOFTW S
   Li Y., 2015, 11 INT C SEC PRIV CO
   Liang SH, 2013, ADV MATER RES-SWITZ, V763, P8, DOI 10.4028/www.scientific.net/AMR.763.8
   Lin YD, 2013, COMPUT SECUR, V39, P340, DOI 10.1016/j.cose.2013.08.010
   Lindorfer Martina, 2014, 2014 Third International Workshop on Building Analysis Datasets and Gathering Experience Returns for Security (BADGERS). Proceedings, P3, DOI 10.1109/BADGERS.2014.7
   Lindorfer M., 2015, 39 IEEE ANN COMP SOF
   Lindorfer M., 2014, 11 INT C DET INTR MA
   Liu B., 2014, 11 USENIX S NETW SYS
   Liu B., 2015, 13 ANN INT C MOB SYS
   Livshits B, 2005, LECT NOTES COMPUT SC, V3780, P139
   Livshits B., 2013, 22 USENIX SEC S WASH
   Lortz S., 2014, 4 ACM WORKSH SEC PRI
   Lu KJ, 2015, 22ND ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2015), DOI 10.14722/ndss.2015.23287
   Lu L., 2012, ACM C COMP COMM SEC
   Lu Z., 2012, 36 ANN IEEE COMP SOF
   Luo T., 2011, 27 ANN COMP SEC APPL
   Luo W., 2013, 1 INT WORKSH SEC EMB
   Luoshi Z., 2013, P 1 INT WORKSH CLOUD
   Ma B., 2014, 10 ICST INT C SEC PR
   Ma K., 2015, 22 INT C NEUR INF PR
   Ma S., 2013, IEEE GLOB COMM C ATL
   Ma S., 2015, 39 IEEE ANN COMP SOF
   Maggi F., 2013, ACM WORKSH SEC PRIV
   Mahmood R., 2012, 7 INT WORKSH AUT SOF
   Maier D., 2014, 9 INT C AV REL SEC F
   Malek S., 2012, 6 INT C SOFTW SEC RE
   Mann C., 2012, ACM S APPL COMP RIV
   Marforio C., 2012, 28 ANN COMP SEC APPL
   Mas'ud M. Z., 2013, 9 INT C INF ASS SEC
   Matsumoto S., 2013, 7INT C UB INF MAN CO
   Miller C., 2009, Fuzzing the phone in your phone
   Milosevic J., 2014, 9 INT C AV REL SEC F
   Mitchell M., 2014, 4 ACM C DAT APPL SEC
   Moonsamy V., 2013, 9 INT ICST C SEC PRI
   Moonsamy V, 2014, FUTURE GENER COMP SY, V36, P122, DOI 10.1016/j.future.2013.09.014
   Mulliner C., 2013, ANN COMP SEC APPL C
   Mulliner C., 2014, 9 ACM S INF COMP COM
   Mutti S., 2015, 31 ANN COMP SEC APPL
   Nadji Y., 2011, 27 ANN COMP SEC APPL
   Nadkarni A., 2013, ACM SIGSAC C COMP CO
   Nan Y., 2015, 24 USENIX SEC S WASH
   Nasim F., 2015, 1 INT C COD CRYPT IN
   Nauman M., 2010, 5 ACM S INF COMP SEC
   Neuner S., 2014, ARXIV14107749
   Ng Y., 2014, IEEE 38 ANN COMP SOF
   Nishimoto Y., 2013, 9 INT ICST C SEC PRI
   Octeau D, 2010, NASTR01402010 PENNS
   Octeau D., 2015, 37 IEEE ACM INT C SO
   Octeau D., 2012, 20 ACM SIGSOFT S FOU
   Octeau Damien, 2013, P 22 USENIX C SEC SE, P543
   Ongtang M., 2009, 25 ANN COMP SEC APPL
   Ongtang M., 2010, 26 ANN COMP SEC APPL
   Onwuzurike L, 2015, 8 ACM C SEC PRIV WIR
   P. Institute, 2013, BIG DAT AN CYB DEF
   Pan X., 2014, 13 IEEE INT C TRUST
   Pandita R., 2013, 22 USENIX SEC S WASH
   Paturi A., 2013, 2013 INT C COLL TECH
   Paupore J., 2015, 15 WORKSH HOT TOPP O
   Pearce P, 2012, 7TH ACM SYMPOSIUM ON INFORMATION, COMPUTER AND COMMUNICATIONS SECURITY (ASIACCS 2012)
   Peiravian N., 2013, IEEE 25 INT C TOOLS
   Peng H., 2012, ACM CCS
   Petracca G., 2015, 31 ANN COMP SEC APPL
   Petsas T, 2014, 7 EUR WORKSH SYST SE
   Poeplau S, 2014, 21ST ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2014), DOI 10.14722/ndss.2014.23328
   Polakis I., 2013, ANN COMP SEC APPL C
   Portokalidis G., 2010, 26 ANN COMP SEC APPL
   Protsenko M., 2013, 8 INT C MAL UNW SOFT
   Protsenko M., 2015, 10 INT C AV REL SEC
   Qian C., 2014, 44 ANN IEEE IFIP INT
   Qiu J., 2014, 4 PROGR PROT REV ENG
   Qu Z., 2014, ACM SIGSAC C COMP CO
   Quan D., 2014, 13 IEEE INT C TRUST
   Rashidi B., 2015, Journal of Wireless Mobile Networks, Ubiquitous Computing, and Dependable Applications JoWUA, V6, P3
   Rasthofer S., 2014, 9 INT C AV REL SEC F
   Rasthofer S., 2015, 9 INT C INF SEC THEO
   Rasthofer S., 2015, SCI INF C LOND UK JU
   Rasthofer S, 2014, 21ST ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2014), DOI 10.14722/ndss.2014.23039
   Rastogi V., 2015, 11 INT C SEC PRIV CO
   Rastogi V., 2013, P 3 ACM C DAT APPL S, P209
   Rastogi V, 2014, IEEE T INF FOREN SEC, V9, P99, DOI 10.1109/TIFS.2013.2290431
   Ravitch T., 2014, 4 PROGR PROT REV ENG
   Reina A., 2013, P ACM EUR WORKSH SYS
   Ren C., 2015, 24 USENIX SEC S WASH
   Ren C., 2014, ACM IEEE INT C AUT S
   Reps T., 1995, C REC 22 ACM SIGPLAN
   Response S. S., 2015, 2015 INTERNET SECURI
   Roesner F., 2013, 22 USENIX SEC S WASH
   Roesner F., 2012, IEEE S SEC PRIV SAN
   Rohrer F., 2013, ANN COMP SEC APPL C
   Rosen S., 2013, 3 ACM C DAT APPL SEC
   Rumee S. T. A., 2013, 16 INT C INF SEC DAL
   Russello G., 2013, ANN COMP SEC APPL C
   Russello G., 2011, IEEE 3RD INT C PRIV
   Sadeghi A., 2015, 37 IEEE ACM INT C SO
   Sadeghi A., 2014, 17 INT C FUND APPR S
   Sahs J., 2012, EUR INT SEC INF C OD
   Sakamoto S., 2014, Journal of Internet Services and Information Security (JISIS), V4, P55
   SALTZER JH, 1975, P IEEE, V63, P1278, DOI 10.1109/PROC.1975.9939
   Salva S., 2013, INF SEC S AFR JOH S
   Sanz B., 2013, INT JOINT C SOCO CIS
   Sanz B., 2012, INT JOINT C CISIS IC
   Sanz B., 2013, 10 INT C SEC CRYPT R
   Sanz B, 2013, CYBERNET SYST, V44, P469, DOI 10.1080/01969722.2013.803889
   Sarma N., 2012, P 17 ACM S ACC CONTR, P13, DOI DOI 10.1145/2295136.2295141
   Sarwar G., 2013, 10 INT C SEC CRYPT R
   Sayfullina L., 2015, IEEE TRUSTCOM BIGDAT
   Sbirlea D., 2013, IBM J RES DEV, V57
   Schmeelk S., 2015, 10 ANN CYB INF SEC R
   Schmidt A.-D., 2009, 4 INT C MAL UNW SOFT
   Schmidt A.-D., 2009, IEEE INT C COMM DRES
   Schreckling D., 2012, ACM S APPL COMP RIV
   Schreckling D., 2012, 6 IFIP WG 11 2 INT W
   Schrittwieser S., 2012, 19 ANN NETW DISTR SY
   Schutte J., 2014, 13 IEEE INT C TRUST
   Schutte J., 2015, 29 IEEE INT C ADV IN
   Seneviratne Suranga, 2015, P 8 ACM C SEC PRIV W, P1
   Seo SH, 2014, J NETW COMPUT APPL, V38, P43, DOI 10.1016/j.jnca.2013.05.008
   Shabtai A., 2009, ARXIV09125101CS
   Shabtai A., 2010, INT C COMP INT SEC N
   Shabtai A, 2012, J INTELL INF SYST, V38, P161, DOI 10.1007/s10844-010-0148-x
   Shabtai A, 2010, IEEE SECUR PRIV, V8, P35, DOI 10.1109/MSP.2010.2
   Shahriar H., 2014, 7 INT C SEC INF NETW
   Shamili A. S., 2010, 20 INT C PATT REC IS
   Shao S., 2014, IEEE 12 INT C DEP AU
   Shao Y., 2014, 30 ANN COMP SEC APPL
   Shebaro B, 2014, TRANS DATA PRIV, V7, P27
   Shebaro B, 2015, IEEE T DEPEND SECURE, V12, P150, DOI 10.1109/TDSC.2014.2320731
   Shekhar S., 2012, 21 USENIX SEC S BELL
   Shen F., 2014, ACM IEEE INT C AUT S
   Shen T., 2014, 13 IEEE INT C TRUST
   Shin W., 2010, IEEE INT S POL DISTR
   Shklovski I., 2014, CHI C HUM FACT COMP
   Short A., 2014, 11 IEEE INT C MOB AD
   Smalley Stephen., 2013, NDSS, V310, P20, DOI 10.1.1.391.2279
   Smith E., 2015, 7 INT C VERI SOFTW T
   Song F., 2014, 12 AS S PROGR LANG S
   Song Y., 2015, 5 ANN ACM CCS WORKSH
   Sounthiraraj D, 2014, 21ST ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2014), DOI 10.14722/ndss.2014.23205
   Spreitzenbarth M., 2013, 28 ANN ACM S APPL CO
   Stevens R., 2012, WORKSH MOB SEC TECHN
   Su X., 2012, 8 INT C MOB AD HOC S
   Suarez-Tangil G, 2014, IEEE COMMUN SURV TUT, V16, P961, DOI 10.1109/SURV.2013.101613.00077
   Suarez-Tangil G, 2014, EXPERT SYST APPL, V41, P1104, DOI 10.1016/j.eswa.2013.07.106
   Sufatrio, 2015, ACM COMPUT SURV, V47, DOI 10.1145/2733306
   Sun M., 2014, 30 ANN COMP SEC APPL
   Sun M., 2014, 7 ACM C SEC PRIV WIR
   Sun X., 2014, 29 IFIP TC 11 INT C
   Sung-Hoon Lee, 2013, International Journal of Computer and Communication Engineering, V2, P324, DOI 10.7763/IJCCE.2013.V2.197
   Swiderski F., 2004, Threat modeling
   Tam K, 2015, 22ND ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2015), DOI 10.14722/ndss.2015.23145
   Tchakounte et P Dayang F., 2013, International Journal of Science and Technology, V2, P669
   Teufl P, 2016, SECUR COMMUN NETW, V9, P389, DOI 10.1002/sec.675
   Tian D., 2015, 11 INT C SEC PRIV CO
   Titze D., 2015, 29 IEEE INT C ADV IN
   Titze D., 2013, App-ray: User-driven and fully automated android app security assessment
   Tripp O., 2014, 23 USENIX SEC S SAN
   Vallee-Rai R., 1999, Proceedings of the 1999 Conference of the Centre for Advanced Studies on Collaborative Research, CASCON'99, page, P13
   van der Veen V., 2013, THESIS VU U AMSTERDA
   Vanciu R., 2013, 28 IEEE ACM INT C AU
   Vecchiato D., 2015, 30 ANN ACM S APPL CO
   Vidas T., 2013, 3 ACM C DAT APPL SEC
   Vidas T., 2014, 9 ACM S INF COMP COM
   Vidas T., 2011, P WEB, V2, P91
   Vidas T., 2014, 4 ACM WORKSH SEC PRI
   Vigneri L., 2015, ARXIV150406093
   Wang D., 2015, 8 ACM C SEC PRIV WIR
   Wang H., 2015, P 31 ANN COMPUTER SE
   Wang H., 2015, INT S SOFTW TEST AN
   Wang N., 2015, 17 INT C HUM COMP IN
   Wang R., 2015, 24 USENIX SEC S WASH
   Wang R., 2013, ACM SIGSAC C COMPUT
   Wang W, 2014, IEEE T INF FOREN SEC, V9, P1869, DOI 10.1109/TIFS.2014.2353996
   Wang X., 2014, 22 ANN NETW DISTR SY
   Wang Y., 2014, P 4 ACM C DATA APPL, P25
   Wang Y., 2013, 27 ANN IFIP WG 11 3
   Wei F., 2014, 2014 ACM SIGSAC C CO
   Wei X., 2012, 18 ANN INT C MOB COM
   Wei Z., 2014, 4 ACM WORKSH SEC PRI
   Werthmann T., 2013, PSIOS BRING YOUR OWN
   Wijesekera P., 2015, 24 USENIX SEC S WASH
   Wognsen ER, 2014, SCI COMPUT PROGRAM, V92, P25, DOI 10.1016/j.scico.2013.11.037
   Wu CC, 2014, 21ST ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2014), DOI 10.14722/ndss.2014.23164
   Wu D.-J., 2012, 7 AS JOINT C INF SEC
   Wu JL, 2015, SECUR COMMUN NETW, V8, P2338, DOI 10.1002/sec.1179
   Wu L., 2013, ACM SIGSAC C COMP CO
   Wu W.-C., 2014, C RES AD CONV SYST T
   Xia M., 2015, 2015 IEEE S SEC PRIV
   Xiao J., 2015, 11 INT C SEC PRIV CO
   Xiao X., 2012, IEEE ACM INT C AUT S
   Xiao X., 2014, 10 INT ICST C SEC PR
   Xie L., 2010, 3 ACM C WIR NET SEC
   Xie Z., 2014, 7 ACM C SEC PRIV WIR
   Xie Z., 2015, 8 ACM C SEC PRIV WIR
   Xing L., 2014, IEEE S SEC PRIV BERK
   Xu JL, 2013, TSINGHUA SCI TECHNOL, V18, P418, DOI 10.1109/TST.2013.6574680
   Xu R., 2012, 21 USENIX SEC S BELL
   Xu W., 2013, IEEE 24 INT S SOFTW
   Xu Z., 2015, 5 ACM C DAT APPL SEC
   Yan L., 2015, 11 INT C SEC PRIV CO
   Yan L. K., 2012, 21 USENIX SEC S BEL
   Yang C., 2014, 19 EUR S RES COMP SE
   Yang C., 2015, 11 INT C SEC PRIV CO
   Yang K., 2014, 9 ACM S INF COMP COM
   Yang S., 2015, 37 IEEE ACM INT C SO
   Yang W., 2014, 9 ACM S INF COMP COM
   Yang W., 2015, 37 IEEE ACM INT C SO
   Yang Z., 2012, 3 WORLD C SOFTW ENG
   Yang Z., 2013, ACM SIGSAC C COMP CO
   Ye H., 2013, 11 INT C ADV MOB COM
   Yerima S. Y., 2013, 27 IEEE INT C ADV IN
   You W., 2015, 10 ACM S INF COMP CO
   You W., 2015, 8 ACM C SEC PRIV WIR
   You YS, 2013, P INT COMP SOFTW APP, P180, DOI 10.1109/COMPSAC.2013.32
   Zhang F., 2014, 7 ACM C SEC PRIV WIR
   Zhang L., 2014, 10 INT ICST INT C SE
   Zhang M., 2014, ACM SIGSAC C COMP CO
   Zhang M., 2014, 9 ACM S INF COMP COM
   Zhang M, 2014, 21ST ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2014), DOI 10.14722/ndss.2014.23255
   Zhang N., 2015, 2015 IEEE S SEC PRIV
   Zhang X., 2014, 11 INT C DET INTR MA
   Zhang Xiao, 2013, Proceedings of the 29th Annual Computer Security Applications Conference, P9
   Zhang Y., 2015, 11 INT C SEC PRIV CO
   Zhang Y., 2014, 10 INT ICST C SEC PR
   Zhang Y., 2013, ACM SIGSAC C COMP CO
   Zhao K., 2015, IEEE S COMP COMM COM
   Zhao M., 2011, 2 INT C INF COMP APP
   Zhao S., 2014, 13 IEEE INT C TRUST
   Zhao Z., 2012, 7 INT C MAL UNW SOFT
   Zhauniarovich Y., 2013, ACM SIGSAC C COMPUT
   Zhauniarovich Y., 2015, 5 ACM C DAT APPL SEC
   Zhauniarovich Y, 2014, IEEE T DEPEND SECURE, V11, P211, DOI 10.1109/TDSC.2014.2300482
   Zheng C., 2012, WORKSH SEC PRIV SMAR
   Zheng M., 2012, 9 INT C DET INTR MAL
   Zheng M., 2013, 12 IEEE INT C TRUST
   Zheng M., 2014, INT WIR COMMM MOB CO
   Zheng M., 2014, 9 ACM S INF COMP COM
   Zhongyang Y., 2013, 8 ACM S INF COMP COM
   Zhou Q., 2013, 12 IEEE INT C TRUST
   Zhou W., 2013, 3 ACM C DAT APPL SEC
   Zhou W., 2013, 8 ACM S INF COMP SEC
   Zhou W., 2012, 2 ACM C DAT APPL SEC
   Zhou W., 2014, 4 ACM C DAT APPL C D
   Zhou XY, 2014, P IEEE S SECUR PRIV, P409, DOI 10.1109/SP.2014.33
   Zhou Y., 2014, 7 INT C TRUST TRUSTW
   Zhou Y., 2012, 19 ANN NETW DIST SEC
   Zhou Y., 2011, 4 C TRUST TRUSTW COM
   Zhou Y., 2012, IEEE S SEC PRIV SAN
   Zhou Y., 2015, 10 ACM S INF COMP CO
   Zhou Y., 2015, 8 ACM C SEC PRIV WIR
   Zhou Y., 2013, P 20 NETWORK DISTRIB
   Zhu H., 2014, 20 ACM SIGKDD INT C
   Zuo C., 2015, 10 ACM S INF COMP CO
NR 501
TC 77
Z9 88
U1 5
U2 34
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUN 1
PY 2017
VL 43
IS 6
BP 492
EP 530
DI 10.1109/TSE.2016.2615307
PG 39
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA EX8XS
UT WOS:000403534100001
OA Bronze
DA 2024-07-18
ER

PT J
AU Giuffrida, C
   Iorgulescu, C
   Tamburrelli, G
   Tanenbaum, AS
AF Giuffrida, Cristiano
   Iorgulescu, Clin
   Tamburrelli, Giordano
   Tanenbaum, Andrew
TI Automating Live Update for Generic Server Programs
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Live update; DSU; checkpoint-restart; quiescence detection;
   record-replay; garbage collection
ID SOFTWARE VERSION CHANGE; TERMINATION DETECTION; GARBAGE COLLECTION;
   QUIESCENCE; ALGORITHM
AB The pressing demand to deploy software updates without stopping running programs has fostered much research on live update systems in the past decades. Prior solutions, however, either make strong assumptions on the nature of the update or require extensive and error-prone manual effort, factors which discourage the adoption of live update. This paper presents Mutable Checkpoint-Restart ( MCR), a new live update solution for generic ( multiprocess and multithreaded) server programs written in C. Compared to prior solutions, MCR can support arbitrary software updates and automate most of the common live update operations. The key idea is to allow the running version to safely reach a quiescent state and then allow the new version to restart as similarly to a fresh program initialization as possible, relying on existing code paths to automatically restore the old program threads and reinitialize a relevant portion of the program data structures. To transfer the remaining data structures, MCR relies on a combination of precise and conservative garbage collection techniques to trace all the global pointers and apply the required state transformations on the fly. Experimental results on popular server programs ( Apache httpd, nginx, OpenSSH and vsftpd) confirm that our techniques can effectively automate problems previously deemed difficult at the cost of negligible performance overhead ( 2 percent on average) and moderate memory overhead ( 3.9 x on average, without optimizations).
C1 [Giuffrida, Cristiano; Tamburrelli, Giordano; Tanenbaum, Andrew] Vrije Univ Amsterdam, De Boelelaan, NL-1081 HV Amsterdam, Netherlands.
   [Iorgulescu, Clin] Ecole Polytech Fed Lausanne, CH-1015 Lausanne, Switzerland.
C3 Vrije Universiteit Amsterdam; Swiss Federal Institutes of Technology
   Domain; Ecole Polytechnique Federale de Lausanne
RP Giuffrida, C (corresponding author), Vrije Univ Amsterdam, De Boelelaan, NL-1081 HV Amsterdam, Netherlands.
EM giuffrida@cs.vu.nl; calin.iorgulescu@epfl.ch; g.tamburrelli@cs.vu.nl;
   ast@cs.vu.nl
RI Giuffrida, Cristiano/GYE-2013-2022
OI Giuffrida, Cristiano/0000-0002-8329-5929; Iorgulescu,
   Calin/0000-0003-0382-6820; Tanenbaum, Andrew/0000-0002-9547-801X
FU European Research Council [227874]; European Research Council (ERC)
   [227874] Funding Source: European Research Council (ERC)
FX This work was supported by European Research Council under ERC Advanced
   Grant 227874.
CR Ajmani S, 2006, LECT NOTES COMPUT SC, V4067, P452
   ALTEKAR G., 2005, USENIX SEC S, V14, P19
   Altekar G, 2009, SOSP'09: PROCEEDINGS OF THE TWENTY-SECOND ACM SIGOPS SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES, P193
   Arnold J, 2009, EUROSYS'09: PROCEEDINGS OF THE FOURTH EUROSYS CONFERENCE, P187
   Baker J, 2009, CONCURR COMP-PRACT E, V21, P1572, DOI 10.1002/cpe.1391
   Baumann A., 2007, P USENIX ANN TECH C
   Baumann Andrew., 2005, Proceedings of the USENIX Annual Technical Conference (USENIX '05), P32
   Berger ED, 2002, ACM SIGPLAN NOTICES, V37, P1, DOI 10.1145/583854.582421
   Biederman E.W., 2006, Proceedings of the Linux Symposium, V1, P101
   BOEHM HJ, 1993, SIGPLAN NOTICES, V28, P197, DOI 10.1145/173262.155109
   Boehm HJ, 2002, ACM SIGPLAN NOTICES, V37, P93, DOI 10.1145/565816.503282
   Chen HB, 2007, PROC INT CONF SOFTW, P271
   DeMara RF, 2007, IEEE T PARALL DISTR, V18, P1529, DOI 10.1109/TPDS.2007.1066
   Desnoyers M, 2012, IEEE T PARALL DISTR, V23, P375, DOI 10.1109/TPDS.2011.159
   Dumitras Tudor, 2009, P 10 ACM IFIP USENIX
   Fabry R. S., 1976, 2nd International Conference on Software Engineering, P470
   FRIEDER O, 1991, J SYST SOFTWARE, V14, P111, DOI 10.1016/0164-1212(91)90096-O
   Giuffrida C., 2012, Proceedings 2012 Fourth International Workshop on Hot Topics in Software Upgrades (HotSWUp 2012), P16, DOI 10.1109/HotSWUp.2012.6226610
   Giuffrida C, 2014, ACM/IFIP/USENIX MIDDLEWARE 2014, P133, DOI 10.1145/2663165.2663328
   Giuffrida C, 2013, ACM SIGPLAN NOTICES, V48, P279, DOI 10.1145/2499368.2451147
   Giuffrida Cristiano., 2013, LISA, P89
   GUPTA D, 1993, SOFTWARE PRACT EXPER, V23, P949, DOI 10.1002/spe.4380230903
   Gupta D, 1996, IEEE T SOFTWARE ENG, V22, P120, DOI 10.1109/32.485222
   Haibo Chen, 2006, VEE 2006. Proceedings of the Second International Conference on Virtual Execution Environments, P35
   Hayden C. M., 2012, Proceedings 2012 Fourth International Workshop on Hot Topics in Software Upgrades (HotSWUp 2012), P6, DOI 10.1109/HotSWUp.2012.6226617
   Hayden CM, 2014, ACM T PROGR LANG SYS, V36, DOI 10.1145/2629460
   Hayden CM, 2012, IEEE T SOFTWARE ENG, V38, P1340, DOI 10.1109/TSE.2011.101
   Henderson Fergus., 2002, P 3 INT S MEMORY MAN, P150, DOI [DOI 10.1145/512429.512449, 10.1145/773039.512449]
   Hirzel M, 2002, ACM T PROGR LANG SYS, V24, P593, DOI 10.1145/586088.586089
   Hirzel M., 2000, P ISMM, P1
   Johnson P, 2009, INT CON DISTR COMP S, P343, DOI 10.1109/ICDCS.2009.16
   Kolbitsch C, 2011, PROCEEDINGS OF THE 18TH ACM CONFERENCE ON COMPUTER & COMMUNICATIONS SECURITY (CCS 11), P285
   KRAMER J, 1990, IEEE T SOFTWARE ENG, V16, P1293, DOI 10.1109/32.60317
   Kravets I., 2012, P WORKSH RUNT ENV SY, P1
   Laadan O, 2010, PERF E R SI, V38, P155, DOI 10.1145/1811099.1811057
   Lattner C, 2004, INT SYM CODE GENER, P75, DOI 10.1109/CGO.2004.1281665
   MAKRIS K., 2009, P 2009 C USENIX ANN, P31
   Makris Kristis., 2007, Proceedings of the 2nd ACM SIGOPS/EuroSys European Conference on Computer Systems 2007, P327
   McKenney Paul E, 1998, Parallel and Distributed Computing and Systems, V509518, P509
   McKenney PaulE., WHAT IS RCU FUNDAMEN
   Mittal N, 2007, DISTRIB COMPUT, V20, P141, DOI 10.1007/s00446-007-0031-3
   Moseley T., 2006, P WORKSH BIN INSTR A, P1
   Mytkowicz T, 2009, ACM SIGPLAN NOTICES, V44, P265, DOI 10.1145/1508284.1508275
   Neamtiu I, 2006, ACM SIGPLAN NOTICES, V41, P72, DOI 10.1145/1133981.1133991
   Neamtiu I, 2009, PLDI'09 PROCEEDINGS OF THE 2009 ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P13, DOI 10.1145/1542476.1542479
   Park S, 2009, SOSP'09: PROCEEDINGS OF THE TWENTY-SECOND ACM SIGOPS SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES, P177
   Rafkind J, 2009, ISMM'09: PROCEEDINGS OF THE 2009 ACM SIGPLAN INTERNATIONAL SYMPOSIUM ON MEMORY MANAGEMENT, P39
   Siniavine M., 2013, Dependable Systems and Networks (DSN), 2013 43rd Annual IEEE/IFIP International Conference on, P1
   Subhraveti Dinesh, 2011, Performance Evaluation Review, V39, P109, DOI 10.1145/2007116.2007129
   Subramanian S, 2009, PLDI'09 PROCEEDINGS OF THE 2009 ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P1, DOI 10.1145/1542476.1542478
   Vandewoude Y, 2007, IEEE T SOFTWARE ENG, V33, P856, DOI 10.1109/TSE.2007.70733
   Viennot N, 2013, ACM SIGPLAN NOTICES, V48, P127, DOI 10.1145/2499368.2451130
NR 52
TC 7
Z9 8
U1 0
U2 7
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAR 1
PY 2017
VL 43
IS 3
BP 207
EP 225
DI 10.1109/TSE.2016.2584066
PG 19
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA ER2CW
UT WOS:000398602600002
DA 2024-07-18
ER

PT J
AU Octeau, D
   Luchaup, D
   Jha, S
   McDaniel, P
AF Octeau, Damien
   Luchaup, Daniel
   Jha, Somesh
   McDaniel, Patrick
TI Composite Constant Propagation and its Application to Android Program
   Analysis
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Composite constant; constant propagation; inter-component communication;
   ICC; Android application analysis
AB Many program analyses require statically inferring the possible values of composite types. However, current approaches either do not account for correlations between object fields or do so in an ad hoc manner. In this paper, we introduce the problem of composite constant propagation. We develop the first generic solver that infers all possible values of complex objects in an interprocedural, flow and context-sensitive manner, taking field correlations into account. Composite constant propagation problems are specified using COAL, a declarative language. We apply our COAL solver to the problem of inferring Android Inter-Component Communication (ICC) values, which is required to understand how the components of Android applications interact. Using COAL, we model ICC objects in Android more thoroughly than the state-of-the-art. We compute ICC values for 489 applications from the Google Play store. The ICC values we infer are substantially more precise than previous work. The analysis is efficient, taking two minutes per application on average. While this work can be used as the basis for many whole-program analyses of Android applications, the COAL solver can also be used to infer the values of composite objects in many other contexts.
C1 [Octeau, Damien; Jha, Somesh] Univ Wisconsin, Dept Comp Sci, 1210 W Dayton St, Madison, WI 53706 USA.
   [Octeau, Damien; McDaniel, Patrick] Penn State Univ, Dept Comp Sci & Engn, University Pk, PA 16802 USA.
   [Luchaup, Daniel] Carnegie Mellon Univ, CyLab, Pittsburgh, PA 15213 USA.
C3 University of Wisconsin System; University of Wisconsin Madison;
   Pennsylvania Commonwealth System of Higher Education (PCSHE);
   Pennsylvania State University; Pennsylvania State University -
   University Park; Carnegie Mellon University
RP Octeau, D (corresponding author), Univ Wisconsin, Dept Comp Sci, 1210 W Dayton St, Madison, WI 53706 USA.; Octeau, D (corresponding author), Penn State Univ, Dept Comp Sci & Engn, University Pk, PA 16802 USA.
EM octeau@cse.psu.edu; luchaup@andrew.cmu.edu; jha@cs.wisc.edu;
   mcdaniel@cse.psu.edu
FU National Science Foundation [CNS-1064900, CNS-1228700, CNS-1228620,
   CNS-1219495]; Google Faculty Research Award; Direct For Computer & Info
   Scie & Enginr; Division Of Computer and Network Systems [1564105]
   Funding Source: National Science Foundation
FX The authors thank Matthew Dering for writing the initial version of the
   ICC matching program. They also thank William Harris for comments
   provided during the writing of this article. This material is based upon
   work supported by National Science Foundation Grants Nos. CNS-1064900,
   CNS-1228700, CNS-1228620, and CNS-1219495. Any opinions, findings, and
   conclusions or recommendations expressed in this material are those of
   the authors and do not necessarily reflect the views of the National
   Science Foundation. This research was also supported by a Google Faculty
   Research Award. The material in this paper was presented in part at the
   37th International Conference on Software Engineering (ICSE'15).
CR [Anonymous], 2014, NDSS
   [Anonymous], 2005, International Conference on World Wide Web, DOI [10.1145/1060745.1060809, DOI 10.1145/1060745.1060809]
   [Anonymous], 2013, TRUSTLOOK NEWS   NOV
   [Anonymous], 2010, P USENIX S OP SYST D
   Arzt S, 2014, ACM SIGPLAN NOTICES, V49, P259, DOI [10.1145/2666356.2594299, 10.1145/2594291.2594299]
   Balakrishnan G, 2004, LECT NOTES COMPUT SC, V2985, P5
   Bodden E, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P241, DOI 10.1145/1985793.1985827
   Bodden Eric, 2012, P ACM SIGPLAN INT WO, P3, DOI DOI 10.1145/2259051.2259052
   Bugiel S., 2012, P 19 ANN NDSS S FEB
   CALLAHAN D, 1986, SIGPLAN NOTICES, V21, P152, DOI 10.1145/13310.13327
   CHASE DR, 1990, SIGPLAN NOTICES, V25, P296, DOI 10.1145/93548.93585
   Chin E., 2011, P 9 INT C MOB SYST A, P239, DOI DOI 10.1145/1999995.2000018
   Christensen AS, 2003, LECT NOTES COMPUT SC, V2694, P1
   Cousot P., 1977, SIGPLAN Notices, V12, P1, DOI 10.1145/872734.806926
   Cui XM, 2014, LECT NOTES COMPUT SC, V8544, P446
   CYTRON R, 1991, ACM T PROGR LANG SYS, V13, P451, DOI 10.1145/115372.115320
   Dering ML, 2014, IEEE MILIT COMMUN C, P300, DOI 10.1109/MILCOM.2014.52
   Dietz M., 2011, Proceedings of the 20th USENIX Conference on Security, SEC'11, P23
   Felt AdriennePorter., 2011, USENIX SECURITY S, V30, P88
   Feng Y, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P576, DOI 10.1145/2635868.2635869
   Hooimeijer P, 2009, PLDI'09 PROCEEDINGS OF THE 2009 ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P188, DOI 10.1145/1542476.1542498
   Huang JJ, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P1036, DOI 10.1145/2568225.2568301
   Jones N. D., 1980, 21st Annual Symposium on Foundations of Computer Science, P185, DOI 10.1109/SFCS.1980.16
   JONES N. D., 1982, P 9 ACM SIGPLAN SIGA, P66, DOI DOI 10.1145/582153.582161
   Kiezun A, 2009, ISSTA 2009: INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P105
   KLIEBER W., 2014, Proceedings of the 3rd ACM SIGPLAN International Workshop on the State of the Art in Java Program Analysis, P1
   Lhoták O, 2003, LECT NOTES COMPUT SC, V2622, P153
   Li L, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P280, DOI 10.1109/ICSE.2015.48
   Lu Long, 2012, P 2012 ACM C COMP CO, P229, DOI DOI 10.1145/2382196.2382223
   Merlo E., 1993, Proceedings. Conference on Software Maintenance 1993. CSM-93 (Cat. No.93CH3360-5), P120, DOI 10.1109/ICSM.1993.366950
   Metzger R., 1993, ACM Letters on Programming Languages and Systems, V2, P213, DOI 10.1145/176454.176526
   Octeau D., 2012, P ACM SIGSOFT 20 INT
   Octeau D, 2016, ACM SIGPLAN NOTICES, V51, P469, DOI 10.1145/2914770.2837661
   Octeau D, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P77, DOI 10.1109/ICSE.2015.30
   Octeau Damien, 2013, P 22 USENIX C SEC SE, P543
   Quinonez J, 2008, LECT NOTES COMPUT SC, V5142, P616, DOI 10.1007/978-3-540-70592-5_26
   Reps T, 2005, SCI COMPUT PROGRAM, V58, P206, DOI 10.1016/j.scico.2005.02.009
   Sagiv M, 1996, THEOR COMPUT SCI, V167, P131, DOI 10.1016/0304-3975(96)00072-2
   Saxena P, 2010, P IEEE S SECUR PRIV, P513, DOI 10.1109/SP.2010.38
   Shen F., 2014, P 29 ACMIEEE INT C A, P515, DOI DOI 10.1145/2642937.2643018
   Vallée-Rai R, 2000, LECT NOTES COMPUT SC, V1781, P18
   Wassermann G, 2007, PLDI'07: PROCEEDINGS OF THE 2007 ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P32, DOI 10.1145/1250734.1250739
   Wei FG, 2014, CCS'14: PROCEEDINGS OF THE 21ST ACM CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P1329, DOI 10.1145/2660267.2660357
   [No title captured], DOI [10.1145/155090.155099, DOI 10.1145/155090.155099]
NR 44
TC 16
Z9 18
U1 0
U2 2
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD NOV 1
PY 2016
VL 42
IS 11
BP 999
EP 1014
DI 10.1109/TSE.2016.2550446
PG 16
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA ED5BK
UT WOS:000388866100001
OA hybrid
DA 2024-07-18
ER

PT J
AU Sakti, A
   Pesant, G
   Guéhéneuc, YG
AF Sakti, Abdelilah
   Pesant, Gilles
   Gueheneuc, Yann-Gael
TI Instance Generator and Problem Representation to Improve Object Oriented
   Code Coverage
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Automatic test data generation; search based software testing; unit
   class testing; seeding strategy; diversification strategy; Java testing
ID UNIT TESTS; ALGORITHMS
AB Search-based approaches have been extensively applied to solve the problem of software test-data generation. Yet, test-data generation for object-oriented programming (OOP) is challenging due to the features of OOP, e.g., abstraction, encapsulation, and visibility that prevent direct access to some parts of the source code. To address this problem we present a new automated search-based software test-data generation approach that achieves high code coverage for unit-class testing. We first describe how we structure the test-data generation problem for unit-class testing to generate relevant sequences of method calls. Through a static analysis, we consider only methods or constructors changing the state of the class-under-test or that may reach a test target. Then we introduce a generator of instances of classes that is based on a family of means-of-instantiation including subclasses and external factory methods. It also uses a seeding strategy and a diversification strategy to increase the likelihood to reach a test target. Using a search heuristic to reach all test targets at the same time, we implement our approach in a tool, JTExpert, that we evaluate on more than a hundred Java classes from different open-source libraries. JTExpert gives better results in terms of search time and code coverage than the state of the art, EvoSuite, which uses traditional techniques.
C1 [Sakti, Abdelilah; Pesant, Gilles; Gueheneuc, Yann-Gael] Ecole Polytech, Dept Comp & Software Engn, Montreal, PQ H3C 3A7, Canada.
C3 Universite de Montreal; Polytechnique Montreal
RP Sakti, A (corresponding author), Ecole Polytech, Dept Comp & Software Engn, Montreal, PQ H3C 3A7, Canada.
EM abdelilah.sakti@polymtl.ca; Gilles.Pesant@polymtl.ca;
   yann-gael.gueheneuc@polymtl.ca
RI Guéhéneuc, Yann-Gaël/K-9371-2019
CR Alshahwan N., 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P3, DOI 10.1109/ASE.2011.6100082
   Alshraideh M, 2006, SOFTW TEST VERIF REL, V16, P175, DOI 10.1002/stvr.354
   ANDREWS J.H., 2006, Proceedings of the 1st international workshop on Random testing, P36, DOI [10.1145/1145735.1145741, DOI 10.1145/1145735.1145741]
   Andrews JH, 2011, IEEE T SOFTWARE ENG, V37, P80, DOI 10.1109/TSE.2010.46
   Arcuri A, 2008, INFORM SCIENCES, V178, P3075, DOI 10.1016/j.ins.2007.11.024
   Arcuri A, 2014, SOFTW TEST VERIF REL, V24, P219, DOI 10.1002/stvr.1486
   Arcuri A, 2011, LECT NOTES COMPUT SC, V6956, P33, DOI 10.1007/978-3-642-23716-4_6
   BARBEY S, 1994, SOFTWARE QUALITY MANAGEMENT II, VOL 2: BUILDING QUALITY INTO SOFTWARE, P411
   Binkley D, 2004, IEEE T SOFTWARE ENG, V30, P715, DOI 10.1109/TSE.2004.78
   Ciupa I, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P71, DOI 10.1145/1368088.1368099
   Clarke L. A., 1976, IEEE Transactions on Software Engineering, VSE-2, P215, DOI 10.1109/TSE.1976.233817
   Csallner C, 2004, SOFTWARE PRACT EXPER, V34, P1025, DOI 10.1002/spe.602
   E. J. development tools (JDT), 2013, JDT PROJECT PROVIDES
   Fraser G., 2012, 2012 IEEE Fifth International Conference on Software Testing, Verification and Validation (ICST 2012), P121, DOI 10.1109/ICST.2012.92
   Fraser Gordon, 2011, Proceedings 2011 IEEE Fourth International Conference on Software Testing, Verification and Validation (ICST 2011), P80, DOI 10.1109/ICST.2011.53
   FRASER G., 2013, Software Testing Verification and Validation Workshop, IEEE International Conference on, P406
   Fraser G, 2013, IEEE T SOFTWARE ENG, V39, P276, DOI 10.1109/TSE.2012.14
   Fraser G, 2012, IEEE T SOFTWARE ENG, V38, P278, DOI 10.1109/TSE.2011.93
   Fraser Gordon, 2011, PROC 19 ACM SIGSOFT, P416, DOI 10.1145/2025113.2025179
   Godefroid P, 2005, ACM SIGPLAN NOTICES, V40, P213, DOI 10.1145/1064978.1065036
   Harman M, 2002, SCAM 2002: SECOND IEEE INTERNATIONAL WORKSHOP ON SOURCE CODE ANALYSIS MANIPULATION, PROCEEDINGS, P55, DOI 10.1109/SCAM.2002.1134105
   HARMAN M., 2007, Proceedings of the the 6th joint meeting of the European software engineering conference and the ACM SIGSOFT symposium on The foundations of software engineering, P155, DOI DOI 10.1145/1287624.1287647
   HOFFMANN M.R., 2012, Jacoco is a free code coverage library for java
   JUnit, 2013, JUN SIMPL FRAM WRIT
   KING JC, 1976, COMMUN ACM, V19, P385, DOI 10.1145/360248.360252
   KOREL B, 1990, IEEE T SOFTWARE ENG, V16, P870, DOI 10.1109/32.57624
   MANN HB, 1947, ANN MATH STAT, V18, P50, DOI 10.1214/aoms/1177730491
   McMinn P, 2004, SOFTW TEST VERIF REL, V14, P105, DOI 10.1002/stvr.294
   McMinn P., 2012, 2012 IEEE Fifth International Conference on Software Testing, Verification and Validation (ICST 2012), P141, DOI 10.1109/ICST.2012.94
   MCMINN P., 2010, Proceedings of the First International Workshop on Software Test Output Validation, P1
   McMinn P, 2012, IEEE T SOFTWARE ENG, V38, P453, DOI 10.1109/TSE.2011.18
   Myers Glenford J., 2011, The Art of Software Testing
   Oriat C, 2005, LECT NOTES COMPUT SC, V3712, P242
   Pacheco C, 2005, LECT NOTES COMPUT SC, V3586, P504
   Pacheco C, 2007, PROC INT CONF SOFTW, P75
   Parasoft, 2013, JTEST JAV STAT AN CO
   Pargas R. P., 1999, Software Testing, Verification and Reliability, V9, P263, DOI 10.1002/(SICI)1099-1689(199912)9:4<263::AID-STVR190>3.0.CO;2-Y
   Pasareanu C.S., 2011, Proceedings of the 2011 International Symposium on Software Testing and Analysis, ISSTA '11, P34, DOI DOI 10.1145/2001420.2001425
   Pasareanu Corina S., 2010, P 25 IEEE ACM INT C, P179, DOI [10.1145/1858996.1859035, DOI 10.1145/1858996.1859035]
   R Development Core Team, 2012, R LANG ENV STAT COMP
   Reflection, 2013, JAVA REFLECTION API
   Reflections, 2013, JAVA RUNTIME METADAT
   RIBEIRO J.C. B., 2008, Proceedings of the 10th annual conference on Genetic and evolutionary computation, P1783
   Sen K, 2006, LECT NOTES COMPUT SC, V4144, P419
   TAHCHIEV P., 2011, JUNIT IN ACTION
   Tonella P., 2004, Software Engineering Notes, V29, P119, DOI 10.1145/1013886.1007528
   Vargha A, 2000, J EDUC BEHAV STAT, V25, P101, DOI 10.3102/10769986025002101
   Visser W., 2006, P ACM SIGSOFT INT S, P37
   VOS T., 2013, Sbst contest: Java unit testing at the class level
   Wappler S, 2006, GECCO 2006: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOL 1 AND 2, P1925
   Xie T, 2005, LECT NOTES COMPUT SC, V3440, P365
   Xie T, 2009, I C DEPEND SYS NETWO, P359, DOI 10.1109/DSN.2009.5270315
   Yin R.K, 2009, Case study research: Design and methods
NR 53
TC 43
Z9 47
U1 0
U2 10
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAR
PY 2015
VL 41
IS 3
BP 294
EP 313
DI 10.1109/TSE.2014.2363479
PG 20
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA CD9ZG
UT WOS:000351460000005
DA 2024-07-18
ER

PT J
AU Belli, F
   Beyazit, M
AF Belli, Fevzi
   Beyazit, Mutlu
TI Exploiting Model Morphology for Event-Based Testing
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Model-based mutation testing; grammar-based testing; (model) morphology;
   mutant selection; test generation
ID MUTATION; GENERATION
AB Model-based testing employs models for testing. Model-based mutation testing (MBMT) additionally involves fault models, called mutants, by applying mutation operators to the original model. A problem encountered with MBMT is the elimination of equivalent mutants and multiple mutants modeling the same faults. Another problem is the need to compare a mutant to the original model for test generation. This paper proposes an event-based approach to MBMT that is not fixed on single events and a single model but rather operates on sequences of events of length k >= 1 and invokes a sequence of models that are derived from the original one by varying its morphology based on k. The approach employs formal grammars, related mutation operators, and algorithms to generate test cases, enabling the following: (1) the exclusion of equivalent mutants and multiple mutants; (2) the generation of a test case in linear time to kill a selected mutant without comparing it to the original model; (3) the analysis of morphologically different models enabling the systematic generation of mutants, thereby extending the set of fault models studied in related literature. Three case studies validate the approach and analyze its characteristics in comparison to random testing and another MBMT approach.
C1 [Belli, Fevzi] Univ Paderborn, Dept Elect Engn & Informat Technol, D-33098 Paderborn, Germany.
   [Belli, Fevzi] Izmir Inst Technol, Dept Comp Engn, Izmir, Turkey.
   [Beyazit, Mutlu] Yasar Univ, Dept Comp Engn, Izmir, Turkey.
C3 University of Paderborn; Izmir Institute of Technology; Yasar University
RP Belli, F (corresponding author), Univ Paderborn, Dept Elect Engn & Informat Technol, Warburger Str 100, D-33098 Paderborn, Germany.
EM belli@adt.upb.de; mutlu.beyazit@yasar.edu.tr
CR Acree A. T., 1979, GITICS7008
   Adamopoulos K, 2004, LECT NOTES COMPUT SC, V3103, P1338
   Agrawal H., 1989, Technical Report. Technical Report SERCTR- 41- P
   Aichernig B. K., 2003, Formal Aspects of Computing, V15, P280, DOI 10.1007/s00165-003-0011-8
   Aichernig B. K., 2011, Proceedings 2011 IEEE Fourth International Conference on Software Testing, Verification and Validation (ICST 2011), P120, DOI 10.1109/ICST.2011.57
   Aichernig BK, 2012, INT CONF QUAL SOFTW, P21, DOI 10.1109/QSIC.2012.58
   Aichernig BK, 2010, LECT NOTES COMPUT SC, V6286, P228
   Ammann Paul, 2008, Introduction to software testing, V1st
   Ammann PE, 1998, SECOND INTERNATIONAL CONFERENCE ON FORMAL ENGINEERING METHODS, PROCEEDINGS, P46, DOI 10.1109/ICFEM.1998.730569
   Andrews JH, 2005, PROC INT CONF SOFTW, P402, DOI 10.1145/1062455.1062530
   [Anonymous], INT J SOFTWARE INFOR
   [Anonymous], 2011, P 8 EUR SOFTW ENG C, DOI DOI 10.1145/2025113.2025144
   [Anonymous], NUIMCSTR200504
   [Anonymous], 1990, Software testing techniques {
   Arcuri A, 2012, IEEE T SOFTWARE ENG, V38, P1088, DOI 10.1109/TSE.2011.85
   Arcuri A, 2012, IEEE T SOFTWARE ENG, V38, P258, DOI 10.1109/TSE.2011.121
   Arcuri A, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1, DOI 10.1145/1985793.1985795
   Belli Fevzi, 2013, Implementation and Application of Automata. 18th International Conference, CIAA 2013. Proceedings: LNCS 7982, P48, DOI 10.1007/978-3-642-39274-0_6
   Belli F., 2012, 2012 International Conference on Software Security and Reliability Companion, P198, DOI 10.1109/SERE-C.2012.24
   Belli Fevzi, 2011, Proceedings 2011 IEEE Fourth International Conference on Software Testing, Verification and Validation (ICST 2011), P249, DOI 10.1109/ICST.2011.30
   Belli Fevzi, 2010, Proceedings 2010 Fourth IEEE International Conference on Secure Software Integration and Reliability Improvement (SSIRI 2010), P121, DOI 10.1109/SSIRI.2010.23
   Belli F, 2001, 12TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P34, DOI 10.1109/ISSRE.2001.989456
   Belli F., 2004, Theoretical Aspects of Computing - ICTAC 2004. First International Colloquium. Revised Selected Papers (Lecture Notes in Computer Science Vol.3407), P220
   Belli F., 2006, Proc. 2nd Workshop Mutation Analysis, P9, DOI 10.1109/MUTATION.2006.2
   Belli F, 2012, ADV COMPUT, V85, P277, DOI 10.1016/B978-0-12-396526-4.00006-0
   Belli F, 2012, IEICE T INF SYST, VE95D, P2211, DOI 10.1587/transinf.E95.D.2211
   Black PE, 2001, KLUW INT S ADV DATA, V24, P14
   Black PE, 2000, FIFTEENTH IEEE INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P81, DOI 10.1109/ASE.2000.873653
   Boroday S, 2007, ELECTRON NOTES THEOR, V190, P3, DOI 10.1016/j.entcs.2007.08.002
   BUDD TA, 1985, COMPUT LANG, V10, P63, DOI 10.1016/0096-0551(85)90011-6
   Chen TY, 1996, IEEE T SOFTWARE ENG, V22, P109, DOI 10.1109/32.485221
   CHOMSKY N, 1956, IRE T INFORM THEOR, V2, P113
   DEMILLO RA, 1978, COMPUTER, V11, P34, DOI 10.1109/C-M.1978.218136
   DURAN JW, 1984, IEEE T SOFTWARE ENG, V10, P438, DOI 10.1109/TSE.1984.5010257
   Ehrig H., 1996, HDB GRAPH GRAMMARS C, V1-3
   FELLEISEN M, 1991, SCI COMPUT PROGRAM, V17, P35, DOI 10.1016/0167-6423(91)90036-W
   Fraser G, 2007, USIC 2007: PROCEEDINGS OF THE SEVENTH INTERNATIONAL CONFERENCE ON QUALITY SOFTWARE, P107
   GARG VK, 1992, THEOR COMPUT SCI, V96, P285, DOI 10.1016/0304-3975(92)90339-H
   Grün BJM, 2009, IEEE ICST WORKSHOP, P192, DOI 10.1109/ICSTW.2009.37
   HAMLET RG, 1977, IEEE T SOFTWARE ENG, V3, P279, DOI 10.1109/TSE.1977.231145
   Harrold MJ, 1997, J SYST SOFTWARE, V36, P273, DOI 10.1016/S0164-1212(96)00175-6
   Hierons R., 1999, Software Testing, Verification and Reliability, V9, P233, DOI 10.1002/(SICI)1099-1689(199912)9:4<233::AID-STVR191>3.0.CO;2-3
   Hierons RM, 2009, ACM COMPUT SURV, V41, DOI 10.1145/1459352.1459354
   Hollmann A., 2011, THESIS U PADERBORN
   Hopcroft J. E., 2006, INTRO AUTOMATA THEOR
   Klint P, 2005, ACM T SOFTW ENG METH, V14, P331, DOI 10.1145/1072997.1073000
   Kramer M. E., 2012, ULCHAPTER2012280
   MAURER PM, 1990, IEEE SOFTWARE, V7, P50, DOI 10.1109/52.56422
   Mens T, 2006, ELECTRON NOTES THEOR, V152, P125, DOI 10.1016/j.entcs.2005.10.021
   Mitchell M., 1998, INTRO GENETIC ALGORI
   NTAFOS SC, 1988, IEEE T SOFTWARE ENG, V14, P868, DOI 10.1109/32.6165
   Offut A. J., 1997, Software Testing, Verification and Reliability, V7, P165, DOI 10.1002/(SICI)1099-1689(199709)7:3<165::AID-STVR143>3.0.CO;2-U
   Offutt A. J., 1996, SIGSOFT Software Engineering Notes, V21, P195, DOI [10.1145/229000.226317, 10.1145/226295.226317]
   Offutt J., 2006, 2 WORKSH MUT AN ISSR, P12
   Okun V., 2002, P INT C SYST SCI APP, P1351
   PAAKKI J, 1995, ACM COMPUT SURV, V27, P196, DOI 10.1145/210376.197409
   Purdom P., 1972, BIT (Nordisk Tidskrift for Informationsbehandling), V12, P366, DOI 10.1007/BF01932308
   Rumbaugh J., 2004, UNIFIED MODELING LAN, V2nd
   Sirer EG, 1999, USENIX ASSOCIATION PROCEEDINGS OF THE 2ND CONFERENCE ON DOMAIN-SPECIFIC LANGUAGES (DSL'99), P1
   Takagi T., 2011, P JOINT C INT WORKSH, P7
   Utting M., 2006, Practical Model-Based Testing
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
   Wood A., 1996, 961 CORP INF CTR
   Xie Q, 2008, ACM T SOFTW ENG METH, V18, DOI 10.1145/1416563.1416567
   Zhang Liu-ze, 2010, Instrument Techniques and Sensor, P1
   Zheng LX, 2009, P INT COMP SOFTW APP, P130, DOI 10.1109/COMPSAC.2009.193
   Zhou Z. Q., 2004, TR200412 U HONG KONG
   Zhu H, 1997, ACM COMPUT SURV, V29, P366, DOI 10.1145/267580.267590
NR 68
TC 7
Z9 8
U1 0
U2 9
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD FEB
PY 2015
VL 41
IS 2
BP 113
EP 134
DI 10.1109/TSE.2014.2360690
PG 22
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA CD9ZJ
UT WOS:000351460400001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Draxler, S
   Stevens, G
   Boden, A
AF Draxler, Sebastian
   Stevens, Gunnar
   Boden, Alexander
TI Keeping the Development Environment Up to Date-A Study of the Situated
   Practices of Appropriating the Eclipse IDE
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Programmer workbench; human factors in software design; deployment;
   usage experience
ID CASE TOOLS; SYSTEMS-DEVELOPMENT; ACCEPTANCE; TECHNOLOGY; PERCEPTIONS;
   IMPACT
AB Software engineers and developers are surrounded by highly complex software systems. What does it take to cope with these? We introduce a field study that explores the maintenance of the Eclipse Integrated Development Environment by software developers as part of their daily work. The study focuses on appropriation of the Eclipse IDE. We present an empirical view on appropriation as a means to maintain the collective ability to work. We visited seven different organizations and observed and interviewed their members. Each organization was chosen to provide an overall picture of Eclipse use throughout the industry. The results decompose the appropriation of Eclipse by software developers in organizations into four categories: learning, tailoring and discovering, as well as the cross-cutting category: collaboration. The categories are grounded in situations that provoked a need to change as well as in policies adopted for coping with this need. By discussing these categories against the background of Eclipse and its ecosystem, we want to illustrate in what ways appropriation of component- or plugin-based software is nowadays a common and highly complex challenge for Eclipse users, and how the related appropriation practices can be supported by IT systems.
C1 [Draxler, Sebastian; Stevens, Gunnar] Univ Siegen, Dept Informat Syst & New Media, D-57068 Siegen, Germany.
   [Boden, Alexander] Fraunhofer Inst Appl Informat Technol FIT, Usabil & User Experience Design Competence Ctr, D-3754 St Augustin, Germany.
C3 Universitat Siegen; Fraunhofer Gesellschaft
RP Draxler, S (corresponding author), Univ Siegen, Dept Informat Syst & New Media, Holderlinstr 3, D-57068 Siegen, Germany.
EM sebastian.draxler@uni-siegen.de; gunnar.stevens@uni-siegen.de;
   alexander.boden@fit.fraunhofer.de
FU German Federal Ministry for Education and Research within research
   initiative Software Engineering
FX The authors wish to thank the organizations that participated in the
   study. This endeavor was funded by the German Federal Ministry for
   Education and Research within the research initiative Software
   Engineering 2006. The autors thank Dave Randall for his valuable
   support.
CR [Anonymous], P CSCW 90
   [Anonymous], 1993, NIST SPEC PUBL, P500
   [Anonymous], COMPUTER
   [Anonymous], 2012, P 2012 ACM ANN C HUM, DOI DOI 10.1145/2207676.2208687
   Asplund F, 2011, LECT NOTES BUS INF P, V83, P270
   Balka Ellen., 2006, P 2006 20 ANN C COMP, P229
   Bennett C, 2008, J SOFTW MAINT EVOL-R, V20, P291, DOI 10.1002/smr.372
   Boehm B.A., 2006, Proceedings of ICSE'06 Conference, P12, DOI DOI 10.1145/1134285.1134288
   Bosch J, 2010, J SYST SOFTWARE, V83, P67, DOI 10.1016/j.jss.2009.06.051
   Bourguin G, 2013, INT J DISTRIB SYST T, V4, P15, DOI 10.4018/ijdst.2013100102
   Bruckhaus T, 1996, IEEE SOFTWARE, V13, P29, DOI 10.1109/52.536456
   Chau PYK, 1996, INFORM MANAGE-AMSTER, V30, P269, DOI 10.1016/S0378-7206(96)01074-9
   Coleman G, 2008, J SYST SOFTWARE, V81, P772, DOI 10.1016/j.jss.2007.07.027
   DAVIS FD, 1989, MIS QUART, V13, P319, DOI 10.2307/249008
   des Riviéres J, 2004, IBM SYST J, V43, P371, DOI 10.1147/sj.432.0371
   Dourish P., 2003, Computer Supported Cooperative Work: The Journal of Collaborative Computing, V12, P465, DOI 10.1023/A:1026149119426
   Draxler S, 2011, COMPUT SUPP COOP W J, V20, P403, DOI 10.1007/s10606-011-9148-9
   Elshazly H., 1993, J INF TECHNOL MANAGE, V4
   FERNSTROM C, 1992, IEEE SOFTWARE, V9, P36, DOI 10.1109/52.120600
   Findlater L, 2008, CHI 2008: 26TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS VOLS 1 AND 2, CONFERENCE PROCEEDINGS, P1267
   FINLAY PN, 1994, MIS QUART, V18, P353, DOI 10.2307/249520
   Forte G., 1993, COMPUTER AIDED SOFTW, V1, P3
   Fowler L., 2000, 9 ANN TEACH LEARN FO
   Gamma E., 2004, CONTRIBUTING ECLISPE
   GANTT M, 1992, P SIGCHI C HUM FACT, P107
   Geer D, 2005, COMPUTER, V38, P16
   Hansen K. M., 2003, P ESEC TOOL INT WORK, P11
   Hardgrave BC, 2003, IEEE T ENG MANAGE, V50, P322, DOI 10.1109/TEM.2003.817293
   Iivari J, 1996, COMMUN ACM, V39, P94, DOI 10.1145/236156.236183
   Ivan Aaen A. S., 1992, P IFIP WG8 2 WORK C, P61
   Kahler H., 2001, J COMPUT SCI
   KEMERER CF, 1992, IEEE SOFTWARE, V9, P23, DOI 10.1109/52.136161
   KERNIGHAN BW, 1976, SOFTWARE ENG NOTES, V1, P15
   Lundell B, 2004, J SYST SOFTWARE, V72, P271, DOI 10.1016/S0164-1212(03)00087-6
   Maansaari J, 1999, INFORM MANAGE-AMSTER, V36, P37, DOI 10.1016/S0378-7206(99)00004-X
   MacLean Allan., 1990, CHI 90, P175, DOI DOI 10.1145/97243.97271
   McClure Carma., 1989, CASE IS SOFTWARE AUT
   Mendoza L. E., 2001, REV COLOMBIANA COMPU
   Murphy GC, 2006, IEEE SOFTWARE, V23, P76, DOI 10.1109/MS.2006.105
   Murphy-Hill E., 2011, P ACM 2011 C COMPUTE, P405, DOI DOI 10.1145/1958824.1958888
   ORLIKOWSKI WJ, 1993, MIS QUART, V17, P309, DOI 10.2307/249774
   Pipek V., 2005, From tailoring to appropriation support: Negotiating groupware usage
   Poole M. S., 1989, Proceedings of the Twenty-Second Annual Hawaii International Conference on System Sciences. Vol.IV: Emerging Technologies and Applications Track (IEEE Cat. No.89TH0245-1), P149, DOI 10.1109/HICSS.1989.48152
   Rai A., 1996, Journal of Management Information Systems, V13, P205
   Riemenschneider CK, 2002, IEEE T SOFTWARE ENG, V28, P1135, DOI 10.1109/TSE.2002.1158287
   Robbins J., 2005, PERSPECTIVES FREE OP, P245
   Schmidt K., 2000, WORKPLACE STUDIES, P141, DOI DOI 10.1017/CBO9780511628122.007
   Sharma S, 2000, COMMUN ACM, V43, P80, DOI 10.1145/323830.323848
   Shull F, 2008, GUIDE ADV EMPIRICAL
   Sigfridsson A., 2010, THESIS U LIMERICK LI
   Stevens G, 2010, J ORGAN END USER COM, V22, P58, DOI 10.4018/joeuc.2010040104
   Strauss A. L., 1997, Grounded Theory in Practice
   Strubing J., 1992, ARBEITSSTIL HABITUS, V34
   Thompson R., 1991, MANAG INF SYST Q, V15
   Twidale M. B., 2005, Computer Supported Cooperative Work: The Journal of Collaborative Computing, V14, P505, DOI 10.1007/s10606-005-9007-7
   Wulf V., 2011, Proceedings of the CSCW 2011, P505, DOI DOI 10.1145/1958824.1958902
   Yang P.H.-L., 1999, INF MANAGE, V35, P89
   Yin R.K., 2014, Applications of case study research, V2nd
   Zelkowitz MV, 1996, J SYST SOFTWARE, V35, P3, DOI 10.1016/0164-1212(95)00082-8
   Zettel J, 2005, EMPIR SOFTW ENG, V10, P367, DOI 10.1007/s10664-005-1287-5
NR 60
TC 2
Z9 2
U1 0
U2 4
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD NOV
PY 2014
VL 40
IS 11
BP 1061
EP 1074
DI 10.1109/TSE.2014.2354047
PG 14
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA AW4AO
UT WOS:000346224200002
DA 2024-07-18
ER

PT J
AU Shepperd, M
   Song, QB
   Sun, ZB
   Mair, C
AF Shepperd, Martin
   Song, Qinbao
   Sun, Zhongbin
   Mair, Carolyn
TI Data Quality: Some Comments on the NASA Software Defect Datasets
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Empirical software engineering; data quality; machine learning; defect
   prediction
ID STATIC CODE ATTRIBUTES
AB Background-Self-evidently empirical analyses rely upon the quality of their data. Likewise, replications rely upon accurate reporting and using the same rather than similar versions of datasets. In recent years, there has been much interest in using machine learners to classify software modules into defect-prone and not defect-prone categories. The publicly available NASA datasets have been extensively used as part of this research. Objective-This short note investigates the extent to which published analyses based on the NASA defect datasets are meaningful and comparable. Method-We analyze the five studies published in the IEEE Transactions on Software Engineering since 2007 that have utilized these datasets and compare the two versions of the datasets currently in use. Results-We find important differences between the two versions of the datasets, implausible values in one dataset and generally insufficient detail documented on dataset preprocessing. Conclusions-It is recommended that researchers 1) indicate the provenance of the datasets they use, 2) report any preprocessing in sufficient detail to enable meaningful replication, and 3) invest effort in understanding the data prior to applying machine learners.
C1 [Shepperd, Martin] Brunel Univ, Dept IS & Comp, Uxbridge UB8 3PH, Middx, England.
   [Song, Qinbao; Sun, Zhongbin] Xi An Jiao Tong Univ, Dept Comp Sci, Xian, Peoples R China.
   [Song, Qinbao; Sun, Zhongbin] Xi An Jiao Tong Univ, Dept Comp Sci & Technol, Xian, Peoples R China.
   [Mair, Carolyn] Univ Arts, London Coll Fash, Grad Sch, London W1G 0BJ, England.
C3 Brunel University; Xi'an Jiaotong University; Xi'an Jiaotong University;
   University of Arts London
RP Shepperd, M (corresponding author), Brunel Univ, Dept IS & Comp, Uxbridge UB8 3PH, Middx, England.
EM martin.shepperd@brunel.ac.uk; qbsong@mail.xjtu.edu.cn;
   zhongbin@stu.xjtu.edu.cn
RI Shepperd, Martin/F-9683-2013
OI Shepperd, Martin/0000-0003-1874-6145
FU National Natural Science Foundation of China [61070006]
FX The authors would like to thank the NASA MDP organization for making
   their defect datasets publicly available. They also thank David Bowes
   and David Gray for useful discussions, the authors of the other TSE
   studies for providing additional information concerning their analysis
   techniques, and the reviewers for their careful reading and constructive
   comments. This work was supported in part by the National Natural
   Science Foundation of China under grant 61070006.
CR Armstrong JS, 2007, INT J FORECASTING, V23, P321, DOI 10.1016/j.ijforecast.2007.03.004
   Bezdek JC, 1999, IEEE T FUZZY SYST, V7, P368, DOI 10.1109/91.771092
   Boetticher G., 2007, IMPROVING CREDIBILIT, P52
   Catal C, 2009, EXPERT SYST APPL, V36, P7346, DOI 10.1016/j.eswa.2008.10.027
   Fan WF, 2008, PROC VLDB ENDOW, V1, P1522, DOI 10.14778/1454159.1454220
   Gray D, 2011, P 15 ANN C EV ASS SO
   Hall T, 2012, IEEE T SOFTWARE ENG, V38, P1276, DOI 10.1109/TSE.2011.103
   Ince DC, 2012, NATURE, V482, P485, DOI 10.1038/nature10836
   Jiang Y, 2007, ISSRE 2007: 18TH IEEE INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P237, DOI 10.1109/ISSRE.2007.24
   Kaminsky K, 2004, NAFIPS 2004: ANNUAL MEETING OF THE NORTH AMERICAN FUZZY INFORMATION PROCESSING SOCIETY, VOLS 1AND 2, P10
   Keung J, 2013, AUTOMAT SOFTW ENG, V20, P543, DOI 10.1007/s10515-012-0108-5
   Lessmann S, 2008, IEEE T SOFTWARE ENG, V34, P485, DOI 10.1109/TSE.2008.35
   Liebchen G., 2011, THESIS BRUNEL U
   Liebchen G., 2008, P INT WORKSH PRED MO
   Liu Y, 2010, IEEE T SOFTWARE ENG, V36, P852, DOI 10.1109/TSE.2010.51
   Menzies T, 2007, IEEE T SOFTWARE ENG, V33, P2, DOI 10.1109/TSE.2007.256941
   Menzies T, 2012, EMPIR SOFTW ENG, V17, P1, DOI 10.1007/s10664-011-9193-5
   Shepperd M., 2011, Proceedings of the 2nd International Workshop on Emerging Trends in Software Metrics, P1, DOI DOI 10.1145/1985374.1985376
   Song QB, 2011, IEEE T SOFTWARE ENG, V37, P356, DOI 10.1109/TSE.2010.90
   Stodden V., 2010, 477310 MIT SLOAN SCH
   Zhang HY, 2007, IEEE T SOFTWARE ENG, V33, P635, DOI 10.1109/TSE.2007.70706
NR 21
TC 321
Z9 353
U1 5
U2 64
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD SEP
PY 2013
VL 39
IS 9
BP 1208
EP 1215
DI 10.1109/TSE.2013.11
PG 8
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 207ZG
UT WOS:000323643000003
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Haidry, SEZ
   Miller, T
AF Haidry, Shifa-e-Zehra
   Miller, Tim
TI Using Dependency Structures for Prioritization of Functional Test Suites
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Software engineering; testing and debugging; test execution
ID ALGORITHMS
AB Test case prioritization is the process of ordering the execution of test cases to achieve a certain goal, such as increasing the rate of fault detection. Increasing the rate of fault detection can provide earlier feedback to system developers, improving fault fixing activity and, ultimately, software delivery. Many existing test case prioritization techniques consider that tests can be run in any order. However, due to functional dependencies that may exist between some test cases-that is, one test case must be executed before another-this is often not the case. In this paper, we present a family of test case prioritization techniques that use the dependency information from a test suite to prioritize that test suite. The nature of the techniques preserves the dependencies in the test ordering. The hypothesis of this work is that dependencies between tests are representative of interactions in the system under test, and executing complex interactions earlier is likely to increase the fault detection rate, compared to arbitrary test orderings. Empirical evaluations on six systems built toward industry use demonstrate that these techniques increase the rate of fault detection compared to the rates achieved by the untreated order, random orders, and test suites ordered using existing" coarse-grained" techniques based on function coverage.
C1 [Haidry, Shifa-e-Zehra; Miller, Tim] Univ Melbourne, Dept Comp & Informat Syst, Melbourne, Vic 3010, Australia.
C3 University of Melbourne
RP Haidry, SEZ (corresponding author), Univ Melbourne, Dept Comp & Informat Syst, Melbourne, Vic 3010, Australia.
EM s.haidry2@pgrad.unimelb.edu.au; tmiller@unimelb.edu.au
OI Miller, Tim/0000-0003-4908-6063
CR [Anonymous], 1999, NORMAL ACCIDENTS LIV
   BACH J, 1996, TESTING TECHNIQU OCT
   BASANIERI F., 2002, LECT NOTES COMPUTER, V2460, P275
   Elbaum S, 2002, IEEE T SOFTWARE ENG, V28, P159, DOI 10.1109/32.988497
   Elbaum S, 2001, PROC INT CONF SOFTW, P329, DOI 10.1109/ICSE.2001.919106
   FLOYD RW, 1962, COMMUN ACM, V5, P345, DOI 10.1145/367766.368168
   Jeffrey D, 2008, J SYST SOFTWARE, V81, P196, DOI 10.1016/j.jss.2007.05.006
   Jiang B, 2009, IEEE INT CONF AUTOM, P233, DOI 10.1109/ASE.2009.77
   Jungyoon Kim, 2004, Proceedings of the 28th Annual International Computer Software and Applications Conference. COMPSAC 2004, P416, DOI 10.1109/CMPSAC.2004.1342873
   Krishnamoorthi R, 2009, INFORM SOFTWARE TECH, V51, P799, DOI 10.1016/j.infsof.2008.08.007
   Kundu D., 2009, SOFTW TEST VERIF REL, V19, P97
   LEW KS, 1988, IEEE T SOFTWARE ENG, V14, P1645, DOI 10.1109/32.9052
   Li JJ, 2005, 16th IEEE International Symposium on Software Reliability Engineering, Proceedings, P75, DOI 10.1109/ISSRE.2005.33
   Li JJ, 2006, INFORM SOFTWARE TECH, V48, P1187, DOI 10.1016/j.infsof.2006.06.007
   Li Z, 2007, IEEE T SOFTWARE ENG, V33, P225, DOI 10.1109/TSE.2007.38
   Liu WL, 2007, INT C COMP AID DES C, P252
   Ma ZK, 2008, ASIA PAC SOFWR ENG, P471, DOI 10.1109/APSEC.2008.63
   Miller T, 2012, SOFTW TEST VERIF REL, V22, P33, DOI 10.1002/stvr.431
   Peirce B., 1852, ASTRON J, V2, P161, DOI [10.1086/100259, DOI 10.1086/100259]
   Poole J, 1995, A method to determine a basis set of paths to perform program testing
   Ross SM, 2003, J ENG TECHNOL, V20, P38
   Rothermel G, 2001, IEEE T SOFTWARE ENG, V27, P929, DOI 10.1109/32.962562
   Rothermel G, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P130, DOI 10.1109/ICSE.2002.1007962
   Ryser J., 2000, P 17 INT C TEST COMP
   SIDNEY JB, 1975, OPER RES, V23, P283, DOI 10.1287/opre.23.2.283
   Srikanth H, 2005, 2005 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING (ISESE), PROCEEDINGS, P62, DOI 10.1109/ISESE.2005.1541815
   Stocks P, 1996, IEEE T SOFTWARE ENG, V22, P777, DOI 10.1109/32.553698
   Tonella P, 2006, PROC IEEE INT CONF S, P123
   WARSHALL S, 1962, J ACM, V9, P11, DOI 10.1145/321105.321107
   Wong W., 1997, P 8 INT S SOFTW REL, P230
   Yoo S, 2009, ISSTA 2009: INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P201
NR 31
TC 36
Z9 39
U1 0
U2 15
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD FEB
PY 2013
VL 39
IS 2
BP 258
EP 275
DI 10.1109/TSE.2012.26
PG 18
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 079ML
UT WOS:000314174500008
DA 2024-07-18
ER

PT J
AU Arcuri, A
   Briand, L
AF Arcuri, Andrea
   Briand, Lionel
TI Formal Analysis of the Probability of Interaction Fault Detection Using
   Random Testing
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Combinatorial testing; random testing; interaction testing; theory;
   constraint; feature diagram; lower bound
ID TEST-GENERATION; TEST SUITES
AB Modern systems are becoming highly configurable to satisfy the varying needs of customers and users. Software product lines are hence becoming a common trend in software development to reduce cost by enabling systematic, large-scale reuse. However, high levels of configurability entail new challenges. Some faults might be revealed only if a particular combination of features is selected in the delivered products. But testing all combinations is usually not feasible in practice, due to their extremely large numbers. Combinatorial testing is a technique to generate smaller test suites for which all combinations of t features are guaranteed to be tested. In this paper, we present several theorems describing the probability of random testing to detect interaction faults and compare the results to combinatorial testing when there are no constraints among the features that can be part of a product. For example, random testing becomes even more effective as the number of features increases and converges toward equal effectiveness with combinatorial testing. Given that combinatorial testing entails significant computational overhead in the presence of hundreds or thousands of features, the results suggest that there are realistic scenarios in which random testing may outperform combinatorial testing in large systems. Furthermore, in common situations where test budgets are constrained and unlike combinatorial testing, random testing can still provide minimum guarantees on the probability of fault detection at any interaction level. However, when constraints are present among features, then random testing can fare arbitrarily worse than combinatorial testing. As a result, in order to have a practical impact, future research should focus on better understanding the decision process to choose between random testing and combinatorial testing, and improve combinatorial testing in the presence of feature constraints.
C1 [Arcuri, Andrea] Simula Res Lab, N-1325 Lysaker, Norway.
   [Briand, Lionel] Univ Luxembourg, Interdisciplinary Ctr ICT Secur Reliabil & Trust, Luxembourg, Luxembourg.
C3 University of Luxembourg
RP Arcuri, A (corresponding author), Simula Res Lab, POB 134, N-1325 Lysaker, Norway.
EM arcur@simula.no; lionel.briand@uni.lu
FU Norwegian Research Council; Luxembourg research funding agency
FX The work described in this paper was supported by the Norwegian Research
   Council. This paper was produced as part of the ITEA-2 project called
   VERDE. Lionel Briand was partly supported by a PEARL grant from the
   Luxembourg research funding agency.
CR Arcuri A., 2010, P ACM INT S SOFTW TE, P219, DOI DOI 10.1145/1831708.1831736
   Arcuri A, 2010, LECT NOTES COMPUT SC, V6435, P95, DOI 10.1007/978-3-642-16573-3_8
   Bach J., 2004, P 22 PACIFIC NW SOFT, P180
   Calvagna A., 2010, J AUTOM REASONING, V45, P1
   Chateauneuf M, 2002, J COMB DES, V10, P217, DOI 10.1002/jcd.10002
   Cohen DM, 1996, IEEE SOFTWARE, V13, P83, DOI 10.1109/52.536462
   Cohen MB, 2003, ISSRE 2003: 14TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P394, DOI 10.1109/ISSRE.2003.1251061
   Cohen MB, 2003, PROC INT CONF SOFTW, P38, DOI 10.1109/ICSE.2003.1201186
   Cohen MB, 2008, IEEE T SOFTWARE ENG, V34, P633, DOI 10.1109/TSE.2008.50
   Colbourn C., 2009, COVERING ARRAY TABLE
   Colbourn C.J., 2004, Le Matematiche, VLIX, P125
   Cormen Thomas H., 2001, INTRO ALGORITHMS
   DURAN JW, 1984, IEEE T SOFTWARE ENG, V10, P438, DOI 10.1109/TSE.1984.5010257
   Ellims M, 2008, LECT NOTES COMPUT SC, V5219, P16, DOI 10.1007/978-3-540-87698-4_5
   Feller W., 1968, An Introduction to Probability Theory and Its Applications, V1
   FOUCHE S, 2009, P ISSTA, P177, DOI DOI 10.1145/1572272.1572294
   Garvin B., 2010, J EMPIRICAL SOFTWARE, V16, P1
   Godbole A.P., 1996, Combinatorics, Probability and Computing, V5, P105
   Grindal M, 2005, SOFTW TEST VERIF REL, V15, P167, DOI 10.1002/stvr.319
   Hemmati H., 2011, Proceedings 2011 IEEE Fourth International Conference on Software Testing, Verification and Validation (ICST 2011), P327, DOI 10.1109/ICST.2011.12
   Hemmati H, 2010, LECT NOTES COMPUT SC, V6435, P63, DOI 10.1007/978-3-642-16573-3_6
   Kuhn D., 2009, P MOD SIM WORLD NASA, P14
   Kuhn DR, 2004, IEEE T SOFTWARE ENG, V30, P418, DOI 10.1109/TSE.2004.24
   Kuhn Rick, 2008, IT Professional, V10, P19, DOI 10.1109/MITP.2008.54
   Lei Y, 1998, THIRD IEEE INTERNATIONAL HIGH-ASSURANCE SYSTEMS ENGINEERING SYMPOSIUM, PROCEEDINGS, P254, DOI 10.1109/HASE.1998.731623
   Lei Y, 2008, SOFTW TEST VERIF REL, V18, P125, DOI 10.1002/stvr.381
   McGregor JD, 2010, IEEE SOFTWARE, V27, P16, DOI 10.1109/MS.2010.74
   Mitrinovic D, 1970, Analytic Inequalities
   Motwani M., 1995, RANDOMIZED ALGORITHM
   Nie CH, 2011, ACM COMPUT SURV, V43, DOI 10.1145/1883612.1883618
   Perrouin Gilles, 2010, Proceedings of the Third IEEE International Conference on Software Testing, Verification and Validation (ICST 2010), P459, DOI 10.1109/ICST.2010.43
   Pretschner Alexander., 2008, 2008 1 INT C SOFTWAR, P338
   Sinnema M, 2007, INFORM SOFTWARE TECH, V49, P717, DOI 10.1016/j.infsof.2006.08.001
   Stevens B., 1998, Designs, Codes and Cryptography, V15, P279, DOI 10.1023/A:1008329410829
   Sugumaran V., 2006, COMMUN ACM, V49, P28
   Tai KC, 2002, IEEE T SOFTWARE ENG, V28, P109, DOI 10.1109/32.979992
   Yilmaz C, 2006, IEEE T SOFTWARE ENG, V32, P20, DOI 10.1109/TSE.2006.8
NR 37
TC 43
Z9 45
U1 0
U2 0
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD SEP-OCT
PY 2012
VL 38
IS 5
BP 1088
EP 1099
DI 10.1109/TSE.2011.85
PG 12
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 009BA
UT WOS:000308999100007
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Zhang, C
   Jacobsen, HA
AF Zhang, Charles
   Jacobsen, Hans-Arno
TI Mining Crosscutting Concerns through Random Walks
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Aspect mining; mining crosscutting concerns
ID MIDDLEWARE
AB Inspired by our past manual aspect mining experiences, this paper describes a probabilistic random walk model to approximate the process of discovering crosscutting concerns (CCs) in the absence of the domain knowledge about the investigated application. The random walks are performed on the concept graphs extracted from the program sources to calculate metrics of "utilization" and "aggregation" for each of the program elements. We rank all the program elements based on these metrics and use a threshold to produce a set of candidates that represent crosscutting concerns. We implemented the algorithm as the Prism CC miner (PCM) and evaluated PCM on Java applications ranging from a small-scale drawing application to a medium-sized middleware application and to a large-scale enterprise application server. Our quantification shows that PCM is able to produce comparable results (95 percent accuracy for the top 125 candidates) with respect to the manual mining effort. PCM is also significantly more effective as compared to the conventional approach.
C1 [Zhang, Charles] Hong Kong Univ Sci & Technol, Dept Comp Sci & Engn, Kowloon, Hong Kong, Peoples R China.
   [Jacobsen, Hans-Arno] Univ Toronto, Bell Univ Lab, Comp Engn Grp, Middleware Syst Res Grp,Dept Elect & Comp Engn, Toronto, ON M5S 3G4, Canada.
   [Jacobsen, Hans-Arno] Univ Toronto, Dept Comp Sci, Toronto, ON M5S 3G4, Canada.
C3 Hong Kong University of Science & Technology; University of Toronto;
   University of Toronto
RP Zhang, C (corresponding author), Hong Kong Univ Sci & Technol, Dept Comp Sci & Engn, Kowloon, Hong Kong, Peoples R China.
EM charlesz@cse.ust.hk; jacobsen@eecg.toronto.edu
RI Zhang, Charles/C-6840-2013
FU NSERC; IBM; Hong Kong RGC GRF grant
FX The authors wish to express deep appreciation to Andrew Clement, Matt
   Chapman, and Matthew Webster of IBM United Kingdom for supporting this
   research. Special thanks to Andrew Clement for technical help and
   insights and to Julie Waterhouse of IBM Canada for provisioning the
   project and reviewing an early draft of this paper. The authors also
   thank Subbarao Meduri of IBM US for technical verification of the paper.
   Thanks to Adrian Colyer who has played the crucial role of initiating
   and provisioning the project. The authors are also extremely grateful
   for many insightful comments from Prem Devanbu that helped improve this
   manuscript significantly. IBM, AIX, DB2, DB2 Universal Database, and
   WebSphere are trademarks or registered trademarks of International
   Business Machines Corporation in the US, other countries, or both. Java
   is a trademark of Sun Microsystems, Inc., in the US, other countries, or
   both. Linux is a registered trademark of Linus Torvalds in the US, other
   countries, or both. UNIX is a registered trademark of The Open Group in
   the US and other countries. Other company, product, and service names
   may be trademarks or service marks of others. This research has been
   supported in part by an NSERC grant, by an IBM PhD fellowship for the
   first author, and by a Hong Kong RGC GRF grant. The authors are very
   grateful for this support.
CR Adams B., 2010, P 32 ACMIEEE INT C S, P305
   [Anonymous], 2009, INTRO INFORM RETRIEV
   Baldi PF, 2008, ACM SIGPLAN NOTICES, V43, P543, DOI 10.1145/1449955.1449807
   Breu S, 2005, FIFTH IEEE INTERNATIONAL WORKSHOP ON SOURCE CODE ANALYSIS AND MANIPULATION, PROCEEDINGS, P57, DOI 10.1109/SCAM.2005.9
   Breu S, 2004, 19TH INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P310, DOI 10.1109/ASE.2004.1342754
   Breu S., 2006, P IEEE AUT SOFTW ENG
   Bruntink M, 2005, IEEE T SOFTWARE ENG, V31, P804, DOI 10.1109/TSE.2005.114
   Ceccato M, 2006, SOFTWARE QUAL J, V14, P209, DOI 10.1007/s11219-006-9217-3
   Colyer A., 2004, P 3 INT C ASPECT ORI, P56, DOI DOI 10.1145/976270.976279
   Eaddy M, 2008, IEEE T SOFTWARE ENG, V34, P497, DOI 10.1109/TSE.2008.36
   Hannemann J., 2001, P IEEE ICSE WORKSH A
   Haveliwala TH, 2003, IEEE T KNOWL DATA EN, V15, P784, DOI 10.1109/TKDE.2003.1208999
   Hunleth F., 2002, P JOINT C LANG COMP
   Inoue K, 2003, PROC INT CONF SOFTW, P14, DOI 10.1109/ICSE.2003.1201184
   Janzen D., 2003, Proceedings of the 2nd Annual Conference on Aspect-Oriented Software Development (AOSD), P178, DOI 10.1145/643603.643622
   Kiczales G, 1997, LECT NOTES COMPUT SC, V1241, P220, DOI 10.1007/BFb0053381
   Kiczales G., 2001, ECOOP 2001 - Object-Oriented Programming. 15th European Conference. Proceedings (Lecture Notes in Computer Science Vol.2072), P327
   Kit LK, 2006, ACM SIGPLAN NOTICES, V41, P383, DOI 10.1145/1167515.1167506
   Kleinberg JM, 1999, J ACM, V46, P604, DOI 10.1145/324133.324140
   Liu XH, 2008, PROCEEDINGS OF THE 2008 IEEE INTERNATIONAL CONFERENCE ON NETWORKING, ARCHITECTURE, AND STORAGE, P278, DOI 10.1109/NAS.2008.58
   Marin M, 2007, ACM T SOFTW ENG METH, V17, DOI 10.1145/1314493.1314496
   Page L., 1999, PAGERANK CITATION RA, DOI DOI 10.1109/IISWC.2012.6402911
   Robillard M. P., 2002, P 24 INT C SOFTW ENG
   Sadtler C., 2012, WEBSPHERE APPL SERVE
   Sampaio Americo., 2005, P 20 IEEEACM INT C A, P352
   Shepherd D., 2005, ASE 05 P 20 IEEEACM, P184
   Shepherd D., 2007, P 6 INT C ASP OR SOF, P212, DOI 10.1145/1218563.1218587
   Tonella P, 2005, IEEE T SOFTWARE ENG, V31, P819, DOI 10.1109/TSE.2005.115
   Tonella P, 2004, 11TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P112, DOI 10.1109/WCRE.2004.13
   Yu YJ, 2004, 12TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, PROCEEDINGS, P38
   Zhang C, 2004, ACM SIGPLAN NOTICES, V39, P188, DOI 10.1145/1035292.1028992
   Zhang C, 2003, IEEE T PARALL DISTR, V14, P1058, DOI 10.1109/TPDS.2003.1247668
   Zhang C., 2007, P 6 INT C ASP OR SOF
   Zhang C., 2002, CASCON 2003
   Zhang C., 2005, AOSD 05, P63, DOI DOI 10.1145/1052898.1052904
   Zhang Charles., 2003, AOSD 03, P130
   Zhang H., 2004, P 3 INT WORKSH ALG M
NR 37
TC 7
Z9 8
U1 0
U2 7
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD SEP-OCT
PY 2012
VL 38
IS 5
BP 1123
EP 1137
DI 10.1109/TSE.2011.83
PG 15
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 009BA
UT WOS:000308999100009
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Cornelissen, B
   Zaidman, A
   van Deursen, A
AF Cornelissen, Bas
   Zaidman, Andy
   van Deursen, Arie
TI A Controlled Experiment for Program Comprehension through Trace
   Visualization
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Program comprehension; dynamic analysis; controlled experiment
ID SEQUENCE; DIAGRAMS; FEATURES; VIEWS
AB Software maintenance activities require a sufficient level of understanding of the software at hand that unfortunately is not always readily available. Execution trace visualization is a common approach in gaining this understanding, and among our own efforts in this context is EXTRAVIS, a tool for the visualization of large traces. While many such tools have been evaluated through case studies, there have been no quantitative evaluations to the present day. This paper reports on the first controlled experiment to quantitatively measure the added value of trace visualization for program comprehension. We designed eight typical tasks aimed at gaining an understanding of a representative subject system, and measured how a control group (using the Eclipse IDE) and an experimental group (using both Eclipse and EXTRAVIS) performed these tasks in terms of time spent and solution correctness. The results are statistically significant in both regards, showing a 22 percent decrease in time requirements and a 43 percent increase in correctness for the group using trace visualization.
C1 [Cornelissen, Bas] Software Improvement Grp, NL-1096 HA Amsterdam, Netherlands.
   [Zaidman, Andy; van Deursen, Arie] Delft Univ Technol, Fac Elect Engn Math & Comp Sci, NL-2628 CD Delft, Netherlands.
C3 Delft University of Technology
RP Cornelissen, B (corresponding author), Software Improvement Grp, Amstelpl 1, NL-1096 HA Amsterdam, Netherlands.
EM b.cornelissen@sig.eu; a.e.zaidman@tudelft.nl; arie.vandeursen@tudelft.nl
RI van Deursen, Arie/G-3084-2011; Zaidman, Andy/O-6542-2014
OI van Deursen, Arie/0000-0003-4850-3312; Zaidman, Andy/0000-0003-2413-3935
FU NWO
FX This research is sponsored by NWO via the Jacquard Reconstructor
   project. The authors would like to thank the 34 subjects for their
   participation, Danny Holten for his implementation of EXTRAVIS, Cathal
   Boogerd for performing one of the pilot studies, and Bart Van Rompaey
   for assisting in the experimental design. Also, many thanks to
   CHECKSTYLE's lead developer, Oliver Burn, who assisted in the design of
   their task review protocol.
CR Basili VR, 1997, J SYST SOFTWARE, V38, P3, DOI 10.1016/S0164-1212(97)00065-4
   Bennett C, 2008, J SOFTW MAINT EVOL-R, V20, P291, DOI 10.1002/smr.372
   Briand LC, 2003, 10TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P57, DOI 10.1109/WCRE.2003.1287237
   Briand LC, 2006, IEEE T SOFTWARE ENG, V32, P642, DOI 10.1109/TSE.2006.96
   CORBI TA, 1989, IBM SYST J, V28, P294, DOI 10.1147/sj.282.0294
   CORNELISSEN B, 2009, TUDSERG2009001
   Cornelissen B, 2007, INT C PROGRAM COMPRE, P49
   Cornelissen B, 2007, CSMR 2007: 11TH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P213
   Cornelissen B, 2009, INT C PROGRAM COMPRE, P100, DOI 10.1109/ICPC.2009.5090033
   Cornelissen B, 2009, IEEE T SOFTWARE ENG, V35, P684, DOI 10.1109/TSE.2009.28
   Cornelissen B, 2008, J SYST SOFTWARE, V81, P2252, DOI 10.1016/j.jss.2008.02.068
   Dalton AR, 2008, INT C PROGRAM COMPRE, P43, DOI 10.1109/ICPC.2008.22
   De Pauw W, 1998, PROCEEDINGS OF THE FOURTH USENIX CONFERENCE ON OBJECT-ORIENTED TECHNOLOGIES AND SYSTEMS, P219
   De Pauw Wim., 2006, Proceedings of the 2006 ACM symposium on Software visualization, SoftVis '06, P37, DOI DOI 10.1145/1148493.1148499
   DEPAUW W, 1993, SIGPLAN NOTICES, V28, P326, DOI 10.1145/167962.165919
   DEPAUW W, 2001, P INT SEM SOFRW VIS, P151
   Di Penta M, 2007, INT C PROGRAM COMPRE, P281
   Greevy O., 2006, Proceedings of the 2006 ACM symposium on Software visualization, P47, DOI [10.1145/1148493.1148501, DOI 10.1145/1148493.1148501]
   Hamou-Lhadj A, 2005, NINTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P112, DOI 10.1109/CSMR.2005.46
   Hamou-Lhadj A, 2004, PROG COMPREHEN, P70, DOI 10.1109/WPC.2004.1311049
   Hamou-Lhadj A, 2002, PROG COMPREHEN, P159, DOI 10.1109/WPC.2002.1021337
   Hamou-Lhadj A, 2006, INT C PROGRAM COMPRE, P181, DOI 10.1109/ICPC.2006.45
   Hamou-Lhadj Abdelwahab., 2004, CASCON, P42
   Jerding D, 1997, PROCEEDINGS OF THE FOURTH WORKING CONFERENCE ON REVERSE ENGINEERING, P56, DOI 10.1109/WCRE.1997.624576
   Jerding DF, 1998, IEEE T VIS COMPUT GR, V4, P257, DOI 10.1109/2945.722299
   Jerding DF, 1997, PROC INT CONF SOFTW, P360, DOI 10.1145/253228.253356
   Jiang J, 2007, INT C PROGRAM COMPRE, P259
   Kleyn M.F., 1988, PROC OOPSLA, P191
   Koskimies K, 1996, PROC INT CONF SOFTW, P366, DOI 10.1109/ICSE.1996.493431
   Koskinen J, 2006, INT C PROGRAM COMPRE, P212, DOI 10.1109/ICPC.2006.37
   Kuhn A, 2006, PROC IEEE INT CONF S, P320
   Lange CFJ, 2007, INT C PROGRAM COMPRE, P221
   Lionel CB, 2005, PROC IEEE INT CONF S, P81
   OECHSLE R, 2001, P ACM 2001 S SOFTW V, P176
   Pacione MJ, 2004, 11TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P70, DOI 10.1109/WCRE.2004.7
   Pacione MJ, 2003, 10TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P80, DOI 10.1109/WCRE.2003.1287239
   Quante J, 2008, INT C PROGRAM COMPRE, P73, DOI 10.1109/ICPC.2008.15
   Reiss SP, 2001, PROC INT CONF SOFTW, P221, DOI 10.1109/ICSE.2001.919096
   Reiss SP, 2007, J VISUAL LANG COMPUT, V18, P126, DOI 10.1016/j.jvlc.2007.01.003
   Riva C, 2002, SIXTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P47, DOI 10.1109/CSMR.2002.995789
   Salah M, 2004, PROC IEEE INT CONF S, P72, DOI 10.1109/ICSM.2004.1357792
   Salah M, 2005, PROC IEEE INT CONF S, P155
   Salah M, 2003, 10TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P238, DOI 10.1109/WCRE.2003.1287254
   Salah M, 2006, 10TH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P69
   Simmons S, 2006, J SOFTW MAINT EVOL-R, V18, P457, DOI 10.1002/smr.338
   Souder T, 2001, PROC IEEE INT CONF S, P612, DOI 10.1109/ICSM.2001.972778
   Storey MA, 2005, PROG COMPREHEN, P181, DOI 10.1109/WPC.2005.38
   Systä T, 2001, SOFTWARE PRACT EXPER, V31, P371, DOI 10.1002/spe.386
   Systa Tarja., 1999, P WORKSHOP OBJECT OR, P304
   Van Rompaey B, 2008, WORK CONF REVERSE EN, P269, DOI 10.1109/WCRE.2008.29
   VOETS R, 2008, THESIS DELFT U TECHN
   WILDE N, 1995, J SOFTW MAINT-RES PR, V7, P49, DOI 10.1002/smr.4360070105
   WOHLIN C, 2003, EXPT SOFTW ENG INTRO
   Yin R.K., 2011, Qualitative research from start to finish
   Zaidman A, 2004, CSMR 2004: EIGHTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P329, DOI 10.1109/CSMR.2004.1281435
   Zaidman A., 2008, 2008 1st international conference on software testing, verification, and validation, P220
NR 56
TC 76
Z9 83
U1 0
U2 10
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAY-JUN
PY 2011
VL 37
IS 3
BP 341
EP 355
DI 10.1109/TSE.2010.47
PG 15
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 768KZ
UT WOS:000290934800004
OA Green Accepted, Green Published
DA 2024-07-18
ER

PT J
AU Liu, Y
   Khoshgoftaar, TM
   Seliya, N
AF Liu, Yi (Cathy)
   Khoshgoftaar, Taghi M.
   Seliya, Naeem
TI Evolutionary Optimization of Software Quality Modeling with Multiple
   Repositories
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Genetic programming; optimization; software quality; defects; machine
   learning; software measurement
ID DEFECT-PREDICTION
AB A novel search-based approach to software quality modeling with multiple software project repositories is presented. Training a software quality model with only one software measurement and defect data set may not effectively encapsulate quality trends of the development organization. The inclusion of additional software projects during the training process can provide a cross-project perspective on software quality modeling and prediction. The genetic-programming-based approach includes three strategies for modeling with multiple software projects: Baseline Classifier, Validation Classifier, and Validation-and-Voting Classifier. The latter is shown to provide better generalization and more robust software quality models. This is based on a case study of software metrics and defect data from seven real-world systems. A second case study considers 17 different (nonevolutionary) machine learners for modeling with multiple software data sets. Both case studies use a similar majority-voting approach for predicting fault-proneness class of program modules. It is shown that the total cost of misclassification of the search-based software quality models is consistently lower than those of the non-search-based models. This study provides clear guidance to practitioners interested in exploiting their organization's software measurement data repositories for improved software quality modeling.
C1 [Liu, Yi (Cathy)] Georgia Coll, J Whitney Bunting Sch Business, Milledgeville, GA 31061 USA.
   [Liu, Yi (Cathy)] State Univ, Milledgeville, GA 31061 USA.
   [Khoshgoftaar, Taghi M.] Florida Atlantic Univ, Dept Comp & Elect Engn & Comp Sci, Boca Raton, FL 33431 USA.
   [Seliya, Naeem] Univ Michigan, Dept Comp & Informat Sci, Dearborn, MI 48128 USA.
C3 University System of Georgia; Georgia College & State University;
   University System of Georgia; Georgia College & State University; State
   University System of Florida; Florida Atlantic University; University of
   Michigan System; University of Michigan
RP Liu, Y (corresponding author), Georgia Coll, J Whitney Bunting Sch Business, 231 W Hancock St, Milledgeville, GA 31061 USA.
EM yi.liu@gcsu.edu; taghi@cse.fau.edu; nseliya@umich.edu
FU The J. Whitney Bunting School of Business at Georgia College and State
   University, Milledgeville
FX The authors are grateful to the guest editors of the special section on
   Search-Based Optimization for Software Engineering, Professor Harman and
   Dr. Mansouri, and the four anonymous reviewers for their constructive
   criticism and suggestions which went toward improving this paper. They
   thank the various members of the Empirical Software Engineering
   Laboratory and Data Mining and Machine Learning Laboratory at Florida
   Atlantic University for their reviews of this paper. They are grateful
   to the staff of the NASA Metrics Data Program for making the software
   measurement data available. The work of Yi Liu was supported in part by
   a summer research grant from The J. Whitney Bunting School of Business
   at Georgia College and State University, Milledgeville.
CR [Anonymous], CSR0904 U BIRM
   [Anonymous], 1997, Software metrics: A rigorous and practical approach
   [Anonymous], POWER DECISION TABLE
   [Anonymous], P 15 INT C MACH LEAR
   [Anonymous], 1992, GENETIC PROGRAMMING
   ARCURI A, 2008, P 2008 IEEE INT C SO, P161
   Atkeson CG, 1997, ARTIF INTELL REV, V11, P11, DOI 10.1023/A:1006559212014
   Banzhaf W., 1998, GENETIC PROGRAMMING
   Breiman L, 1996, MACH LEARN, V24, P123, DOI 10.1007/bf00058655
   Briand LC, 2002, IEEE T SOFTWARE ENG, V28, P706, DOI 10.1109/TSE.2002.1019484
   Cohen W.W., 1995, P 12 INT C MACH LEAR, P115, DOI [DOI 10.1016/B978-1-55860-377-6.50023-2, 10.1016/B978-1-55860-377-6.50023-2]
   Cuadrado-Gallego JJ, 2006, SOFTWARE QUAL J, V14, P339, DOI 10.1007/s11219-006-0039-0
   FOLLECO A, 2008, P IEEE WORLD C COMP
   Frank E, 2000, MACH LEARN, V41, P5, DOI 10.1023/A:1007670802811
   Freund Y, 1999, MACHINE LEARNING, PROCEEDINGS, P124
   Gagné C, 2006, LECT NOTES COMPUT SC, V3905, P109
   Gaines B. R., 1995, Journal of Intelligent Information Systems: Integrating Artificial Intelligence and Database Technologies, V5, P211, DOI 10.1007/BF00962234
   Guo L, 2003, 18TH IEEE INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P249, DOI 10.1109/ASE.2003.1240314
   Harman M, 2001, INFORM SOFTWARE TECH, V43, P833, DOI 10.1016/S0950-5849(01)00189-6
   Harman M, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P342, DOI 10.1109/FOSE.2007.29
   HOLTE RC, 1993, MACH LEARN, V11, P63, DOI 10.1023/A:1022631118932
   IBA H, 1994, COM ADAP SY, P265
   KANER C, 2004, P 10 IEEE INT SOFTW
   Khoshgoftaar T., 1999, International Journal of Reliability, Quality and Safety Engineering, V6, P303
   Khoshgoftaar T. M., 2000, Empirical Software Engineering, V5, P313, DOI 10.1023/A:1009896203228
   Khoshgoftaar TM, 2007, IEEE T RELIAB, V56, P237, DOI 10.1109/TR.2007.896763
   Khoshgoftaar TM, 2009, SOFTWARE QUAL J, V17, P25, DOI 10.1007/s11219-008-9058-3
   Khoshgoftaar TM, 2004, 10TH INTERNATIONAL SYMPOSIUM ON SOFTWARE METRICS, PROCEEDINGS, P119, DOI 10.1109/METRIC.2004.1357896
   Khoshgoftaar TM, 2004, EMPIR SOFTW ENG, V9, P229, DOI 10.1023/B:EMSE.0000027781.18360.9b
   KHOSHGOFTAAR TM, 2008, P 20 INT C SOFTW ENG
   Kim S, 2007, PROC INT CONF SOFTW, P489
   Koru AG, 2005, IEEE SOFTWARE, V22, P23, DOI 10.1109/MS.2005.149
   Kushchu I, 2002, IEEE T EVOLUT COMPUT, V6, P431, DOI 10.1109/TEVC.2002.805038
   Lessmann S, 2008, IEEE T SOFTWARE ENG, V34, P485, DOI 10.1109/TSE.2008.35
   Menzies T, 2007, IEEE T SOFTWARE ENG, V33, P2, DOI 10.1109/TSE.2007.256941
   Mitchell T. M., 1997, MACHINE LEARNING
   Pizzi NJ, 2002, IEEE IJCNN, P2405, DOI 10.1109/IJCNN.2002.1007518
   Platt J.C., 1998, 9814 MICR RES
   Quinlan J. R., 1993, PROGRAMS MACHINE LEA
   Schneidewind NF, 2002, COMPUTER, V35, P77, DOI 10.1109/2.982919
   Schneidewind NF, 2000, SEVENTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM - METRICS 2001, PROCEEDINGS, P328, DOI 10.1109/METRIC.2001.915540
   Shepperd M, 2001, IEEE T SOFTWARE ENG, V27, P1014, DOI 10.1109/32.965341
   Shirabad J.S., 2005, The PROMISE Repository of Software Engineering Databases
   van der Meulen MJP, 2007, ISSRE 2007: 18TH IEEE INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P203, DOI 10.1109/ISSRE.2007.12
   Witten I. H., 2005, DATA MINING PRACTICA
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
   Zhang BT, 1995, EVOL COMPUT, V3, P17, DOI 10.1162/evco.1995.3.1.17
   1998, GP TOOL
NR 48
TC 94
Z9 102
U1 0
U2 11
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD NOV-DEC
PY 2010
VL 36
IS 6
BP 852
EP 864
DI 10.1109/TSE.2010.51
PG 13
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 682SU
UT WOS:000284424100009
DA 2024-07-18
ER

PT J
AU Pettersson, N
   Löwe, W
   Nivre, J
AF Pettersson, Niklas
   Lowe, Welf
   Nivre, Joakim
TI Evaluation of Accuracy in Design Pattern Occurrence Detection
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Patterns; object-oriented design methods; measurement techniques;
   evaluation; reverse engineering; reengineering; restructuring
AB Detection of design pattern occurrences is part of several solutions to software engineering problems, and high accuracy of detection is important to help solve the actual problems. The improvement in accuracy of design pattern occurrence detection requires some way of evaluating various approaches. Currently, there are several different methods used in the community to evaluate accuracy. We show that these differences may greatly influence the accuracy results, which makes it nearly impossible to compare the quality of different techniques. We propose a benchmark suite to improve the situation and a community effort to contribute to, and evolve, the benchmark suite. Also, we propose fine-grained metrics assessing the accuracy of various approaches in the benchmark suite. This allows comparing the detection techniques and helps improve the accuracy of detecting design pattern occurrences.
C1 [Pettersson, Niklas; Lowe, Welf] Linnaeus Univ, Sch Comp Sci Phys & Math, S-35195 Vaxjo, Sweden.
   [Nivre, Joakim] Uppsala Univ, Dept Linguist & Philol, S-75126 Uppsala, Sweden.
C3 Linnaeus University; Uppsala University
EM niklas.pettersson@lnu.se; welf.lowe@lnu.se; joakim.nivre@lingfil.uu.se
FU Swedish National Graduate School in Computer Science (CUGS); Swedish
   Agency for Innovation Systems (Vinnova) [P22479-1 A]
FX The authors thank the anonymous reviewers of the IEEE Transactions on
   Software Engineering for their valuable comments. They also thank the
   participants of the First International Workshop on Design Pattern
   Detection for Reverse Engineering (DPD4RE) for suggestions on the first
   version of the paper. This research is partially funded by the Swedish
   National Graduate School in Computer Science (CUGS) and the Swedish
   Agency for Innovation Systems (Vinnova), Project No. P22479-1 A.
CR Abeille Anne., 2003, TREEBANKS BUILDING U
   Abney S., 1991, PROCEDURE QUANTITATI, P306
   AHLGREN P, 2006, P C CURR RES INF SCI
   Antoniol G, 1998, PROG COMPREHEN, P153, DOI 10.1109/WPC.1998.693342
   BALANYI Z, 2003, P IEEE INT C SOFTW M
   Beyer D, 2003, 10TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P216, DOI 10.1109/WCRE.2003.1287252
   BROWN K, 1996, TR9607 N CAR STAT U
   COSTAGLIOLA G, 2006, P C SOFTW MAINT REEN
   COSTAGLIOLA G, 2005, P C SOFTW MAINT REEN
   DONG J, 2007, P INT WORKSH SYST SO
   Dong J, 2008, APPLIED COMPUTING 2008, VOLS 1-3, P765
   Driesen K, 1996, ACM SIGPLAN NOTICES, V31, P306, DOI 10.1145/236338.236369
   Fülöp LJ, 2008, CSMR 2008: 12TH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, P143
   FULOP L, 2006, P 6 IEEE INT WORKSH
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   GRISHMAN R, 1992, THIRD CONFERENCE ON APPLIED NATURAL LANGUAGE PROCESSING, P156
   Guéhéneuc YG, 2006, 10TH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P121
   Guéhéneuc YG, 2008, IEEE T SOFTWARE ENG, V34, P667, DOI 10.1109/TSE.2008.48
   GUEHENEUC YG, 2004, P 19 C OBJ OR PROGR, P301
   Halamoda-Kenzaoui B., 2020, PRECIS NANOMED, V3, P608, DOI [10.33218/001c.13521, DOI 10.33218/001C.13521, DOI 10.3115/1596276.1596305]
   HEUZEROTH D, 2003, P 11 INT WORKSH PROG
   KACZOR O, 2006, P C SOFTW MAINT REEN
   Keller R. K., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P226, DOI 10.1109/ICSE.1999.841012
   Kramer C, 1996, PROCEEDINGS OF THE THIRD WORKING CONFERENCE ON REVERSE ENGINEERING, P208, DOI 10.1109/WCRE.1996.558905
   Marcus M. P., 1993, Computational Linguistics, V19, P313, DOI DOI 10.21236/ADA273556
   Meyer M, 2006, WORK CONF REVERSE EN, P305
   Niere J, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P338, DOI 10.1109/ICSE.2002.1007980
   NIERE J, 2003, P 11 IEEE INT WORKSH
   PETTERSSON N, 2005, P INT C SOFTW ENG WO
   PETTERSSON N, 2009, DESIGN PATTERN DETEC
   PETTERSSON N, 2006, THESIS VAXJO U SCH M
   PETTERSSON N, 2006, P 1 INT WORKSH DES P
   Pettersson N, 2007, INT C PROGRAM COMPRE, P189, DOI 10.1109/ICPC.2007.8
   Philippow I., 2005, Software System Model, V4, P55
   Schultz UP, 2000, FIFTEENTH IEEE INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P197, DOI 10.1109/ASE.2000.873664
   SEEMANN J., 1998, Proceedings of 5th international symposium on Foundations of Software Engineering, P10, DOI DOI 10.1145/288195.288207
   SHI N, 2006, P INT C AUT SOFTW EN
   Sim SE, 2003, PROC INT CONF SOFTW, P74, DOI 10.1109/ICSE.2003.1201189
   SMITH JM, 2003, P IEEE INT C AUT SOF
   Tsantalis N, 2006, IEEE T SOFTWARE ENG, V32, P896, DOI 10.1109/TSE.2006.112
   Tu Peng, 2008, SEKE 2008. The 20th International Conference Proceedings on Software Engineering & Knowledge Engineering, P454
   Vokác M, 2006, J OBJECT TECHNOL, V5, P139, DOI 10.5381/jot.2006.5.1.a6
   VORHEES EM, 2002, P 12 TEXT RETR C, P355
   WENDEHALS L, 2006, P WORKSH DYN ANAL
   WENDEHALS L, 2003, P INT C SOFTW ENG 20
   WENDEHALS L, 2004, P 2 INT FUJ DAYS, P7
   2008, PINOT
NR 47
TC 39
Z9 54
U1 0
U2 9
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUL-AUG
PY 2010
VL 36
IS 4
BP 575
EP 590
DI 10.1109/TSE.2009.92
PG 16
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 631LE
UT WOS:000280347600009
DA 2024-07-18
ER

PT J
AU Lerner, BS
   Christov, S
   Osterweil, LJ
   Bendraou, R
   Kannengiesser, U
   Wise, A
AF Lerner, Barbara Staudt
   Christov, Stefan
   Osterweil, Leon J.
   Bendraou, Reda
   Kannengiesser, Udo
   Wise, Alexander
TI Exception Handling Patterns for Process Modeling
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Exception handling patterns; process modeling; process modeling
   languages
AB Process modeling allows for analysis and improvement of processes that coordinate multiple people and tools working together to carry out a task. Process modeling typically focuses on the normative process, that is, how the collaboration transpires when everything goes as desired. Unfortunately, real-world processes rarely proceed that smoothly. A more complete analysis of a process requires that the process model also include details about what to do when exceptional situations arise. We have found that, in many cases, there are abstract patterns that capture the relationship between exception handling tasks and the normative process. Just as object-oriented design patterns facilitate the development, documentation, and maintenance of object-oriented programs, we believe that process patterns can facilitate the development, documentation, and maintenance of process models. In this paper, we focus on the exception handling patterns that we have observed over many years of process modeling. We describe these patterns using three process modeling notations: UML 2.0 Activity Diagrams, BPMN, and Little-JIL. We present both the abstract structure of the pattern as well as examples of the pattern in use. We also provide some preliminary statistical survey data to support the claim that these patterns are found commonly in actual use and discuss the relative merits of the three notations with respect to their ability to represent these patterns.
C1 [Lerner, Barbara Staudt] Mt Holyoke Coll, Dept Comp Sci, S Hadley, MA 01075 USA.
   [Christov, Stefan; Osterweil, Leon J.; Wise, Alexander] Univ Massachusetts, Dept Comp Sci, Amherst, MA 01003 USA.
   [Bendraou, Reda] Univ Paris 06, MoVe LIP6, F-75016 Paris, France.
   [Kannengiesser, Udo] NICTA, Alexandria, NSW 1435, Australia.
   [Kannengiesser, Udo] Univ New S Wales, Sch Engn & Comp Sci, Sydney, NSW 2052, Australia.
C3 Mount Holyoke College; University of Massachusetts System; University of
   Massachusetts Amherst; Sorbonne Universite; Australian National
   University; University of New South Wales Sydney
RP Lerner, BS (corresponding author), Mt Holyoke Coll, Dept Comp Sci, 50 Coll St, S Hadley, MA 01075 USA.
EM blerner@mtholyoke.edu; christov@cs.umass.edu; ljo@cs.umass.edu;
   reda.bendraou@lip6.fr; udo.kannengiesser@nicta.com.au; wise@cs.umass.edu
OI Bendraou, Reda/0000-0003-3259-6286; Kannengiesser,
   Udo/0000-0001-5310-8566
FU US National Science Foundation [CCR-0427071, CCR-0204321, CCR-0205575];
   US National Science Foundation; Department of Broadband, Communications;
   Digital Economy; Australian Research Council
FX The authors wish to express their gratitude to numerous individuals who
   have contributed examples and insights supporting the points made in
   this paper. In particular, they wish to thank Lori A. Clarke, George
   Avrunin, Beth Henneman, Phil Henneman, Ethan Katsh, Dan Rainey, Norm
   Sondheimer, Mohammed S. Raunak, Rachel Cobleigh, Bin Chen, and Matt
   Marzilli for conversations, examples, and constructive comments, all of
   which have contributed to this work. This material is based upon work
   supported by the US National Science Foundation under Award Nos.
   CCR-0427071, CCR-0204321, and CCR-0205575. The views and conclusions
   contained herein are those of the authors and should not be interpreted
   as necessarily representing the official policies or endorsements,
   either expressed or implied, of the US National Science Foundation, or
   the US Government. NICTA is funded by the Australian Government as
   represented by the Department of Broadband, Communications, and the
   Digital Economy and the Australian Research Council through the ICT
   Centre of Excellence program.
CR Ambler S W., 1998, Process patterns. Building large-scale systems using object technology
   [Anonymous], 2007, Web Services Business Process Execution Language (BPEL)
   [Anonymous], 2010, Business Process Model and Notation (BPMN). Version 2.0
   [Anonymous], 2006, BPM Center Report BPM-06-04: 288-302
   [Anonymous], P ACM SIGSOFT S SOFT
   [Anonymous], 2008, BPMN modeling and reference guide: understanding and using BPMN
   Avizienis A, 2004, IEEE T DEPEND SECURE, V1, P11, DOI 10.1109/TDSC.2004.2
   Casati F, 1999, ACM T DATABASE SYST, V24, P405, DOI 10.1145/328939.328996
   Cass A.G., 2005, Proceedings of the 20th IEEE/ACM international Conference on Automated software engineering, P295
   CASS AG, 2003, P 9 EUR WORKSH SOFTW, P16
   CHRISTOV SC, 2007, P MOD SOFTW ENG WORK
   Clarke L., 2006, P 2006 INT C DIG GOV, P356
   COPLIEN JO, 1994, PATTERN LANGUAGES PR
   CURBERA F, 2003, P C BUS PROC MAN
   FONG P, 2010, EXCEPTION HANDLING W
   Gamma Erich., 1994, DESIGN PATTERNS
   GOLANI M, 2003, BUSINESS PROCESS MOD, P48
   HAASE A, 2002, P 7 EUR C PATT LANG
   Hagen C, 2000, IEEE T SOFTWARE ENG, V26, P943, DOI 10.1109/32.879818
   Henneman EA, 2007, TRANSFUS MED REV, V21, P49, DOI 10.1016/j.tmrv.2006.08.007
   LI J, 2003, P 10 AS PAC SOFTW EN
   Li M., 2006, UNIFYING SOFTWARE PR
   LO RKL, 2009, BUSINESS PROCESS MAN, V15
   Longshaw Andy, 2005, P 10 EUR C PATT LANG
   Longshaw Andy, 2004, P 9 EUR C PATT LANG
   *MOD, 2010, IST3408 MOD
   MULLER D, 2007, P MOV MEAN INT SYST
   Nepal S, 2005, LECT NOTES COMPUT SC, V3760, P40
   *OMG, 2010, UNJ MOD LANG SUP SPE
   OMG, 2008, SOFTW PROC ENG MET V
   *OMG, 2010, OCL OBJ CONSTR LANG
   Osterweil L., 1987, Proceedings of the 9th International Conference on Software Engineering (Cat. No.87CH2432-3), P2
   Osterweil L.J., 2004, Journal of E-Government, V1, P63, DOI DOI 10.1300/J399V01N04_05
   RAUNAK MS, 2006, P SOFTW PROC WORKSH, P178
   RAUNAK MS, 2009, P WORKSH SOFTW ENG H
   Reijers HA, 2003, J MANAGE INFORM SYST, V20, P229
   Russell N, 2005, LECT NOTES COMPUT SC, V3716, P353
   Russell N, 2005, LECT NOTES COMPUT SC, V3520, P216
   Schäfer M, 2008, ACM T WEB, V2, DOI 10.1145/1346237.1346242
   Scheer A.-W., 2000, ARIS BUSINESS PROCES
   Simidchieva Borislava I., 2008, P 2008 INT C DIG GOV, P63
   STELTING S, 2005, ROBUST JAVA EXCEPTIO
   ten Teije A, 2006, ARTIF INTELL MED, V36, P193, DOI 10.1016/j.artmed.2005.10.006
   van der Aalst W. M. P, 2007, BPM0703
   van der Aalst WMP, 2004, LECT NOTES COMPUT SC, V3098, P1
   Van der Aalst WMP, 2003, DISTRIB PARALLEL DAT, V14, P5, DOI 10.1023/A:1022883727209
   van der Maas AAF, 2000, ARTIF INTELL MED, V18, P29, DOI 10.1016/S0933-3657(99)00028-7
   Wise A, 2000, FIFTEENTH IEEE INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P155, DOI 10.1109/ASE.2000.873660
   Wise A, 2006, LITTLE JIL 1 5 LANGU
   ZENG L, 2006, P 7 IEEE INT C E COM, P355
   2010, ECLIPSE PROCESS FRAM
NR 51
TC 57
Z9 69
U1 0
U2 15
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAR-APR
PY 2010
VL 36
IS 2
BP 162
EP 183
DI 10.1109/TSE.2010.1
PG 22
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 574ZH
UT WOS:000276032300004
DA 2024-07-18
ER

PT J
AU Elbaum, S
   Chin, HN
   Dwyer, MB
   Jorde, M
AF Elbaum, Sebastian
   Chin, Hui Nee
   Dwyer, Matthew B.
   Jorde, Matthew
TI Carving and Replaying Differential Unit Test Cases from System Test
   Cases
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Automated test generation; carving and replay; regression testing
AB Unit test cases are focused and efficient. System tests are effective at exercising complex usage patterns. Differential unit tests (DUTs) are a hybrid of unit and system tests that exploits their strengths. They are generated by carving the system components, while executing a system test case, that influence the behavior of the target unit and then reassembling those components so that the unit can be exercised as it was by the system test. In this paper, we show that DUTs retain some of the advantages of unit tests, can be automatically generated, and have the potential for revealing faults related to intricate system executions. We present a framework for carving and replaying DUTs that accounts for a wide variety of strategies and trade-offs, we implement an automated instance of the framework with several techniques to mitigate test cost and enhance flexibility and robustness, and we empirically assess the efficacy of carving and replaying DUTs on three software artifacts.
C1 [Elbaum, Sebastian; Chin, Hui Nee; Dwyer, Matthew B.; Jorde, Matthew] Univ Nebraska, Dept Comp Sci & Engn, Lincoln, NE 68588 USA.
C3 University of Nebraska System; University of Nebraska Lincoln
RP Elbaum, S (corresponding author), Univ Nebraska, Dept Comp Sci & Engn, Lincoln, NE 68588 USA.
EM elbaum@cse.unl.edu; huinee@gmail.com; dwyer@cse.unl.edu;
   majordej@gmail.com
OI Dwyer, Matthew/0000-0002-1937-1544
FU US National Science Foundation [0347518, 0429149, 0541263, 0454203]; IBM
   Eclipse; Lockheed Martin Software Technology Initiative; US Army Resarch
   Office [W911NF-04-1-0104]; Direct For Computer & Info Scie & Enginr;
   Division of Computing and Communication Foundations [0347518] Funding
   Source: National Science Foundation; Division Of Computer and Network
   Systems; Direct For Computer & Info Scie & Enginr [0454203] Funding
   Source: National Science Foundation; Division of Computing and
   Communication Foundations; Direct For Computer & Info Scie & Enginr
   [0429149, 0541263] Funding Source: National Science Foundation
FX This work was supported in part by the US National Science Foundation
   through CAREER award 0347518, CCF awards 0429149 and 0541263, CRI award
   0454203, an IBM Eclipse Innovation Award, the Lockheed Martin Software
   Technology Initiative, and by the US Army Resarch Office through DURIP
   award W911NF-04-1-0104. The authors would like to thank B. Weide for
   inspiring this effort, S. Reddy for the feasibility exploration she
   provided through her thesis, and J. Dokulil for his effort in the
   initial implementation of the CR tool. They would also like to thank V.
   Ranganath for supporting their use of Indus and O. Tkachuk for
   implementing preliminary versions of the static analysis.
CR [Anonymous], P 3 INT WORKSH DYN A
   BACH J, 1996, TESTING TECHNIQU OCT
   Beck Kent, 1999, Extreme Programming Explained: Embrace Change
   Beck Kent L., 2003, Test Driven Development By Example
   BINDER R, 1999, TESTING OBJECT ORIEN, P943
   Binkley D, 2001, PROC IEEE INT CONF S, P82, DOI 10.1109/ICSM.2001.972714
   Binkley D, 1997, IEEE T SOFTWARE ENG, V23, P498, DOI 10.1109/32.624306
   Boyapati C., 2002, ISSTA 02, P123, DOI DOI 10.1145/566172.566191
   Briand LC, 2004, IEEE T SOFTWARE ENG, V30, P770, DOI 10.1109/TSE.2004.79
   Carzaniga A., 2000, Proceeding of the Nineteenth Annual ACM Symposium on Principles of Distributed Computing, P219, DOI 10.1145/343477.343622
   CHEN YF, 1994, PROC INT CONF SOFTW, P211
   Cheon Y, 2002, LECT NOTES COMPUT SC, V2374, P231
   CHIN HN, 2008, TRUNLCSE20070005 U N
   Csallner C, 2004, SOFTWARE PRACT EXPER, V34, P1025, DOI 10.1002/spe.602
   Dahm Markus., 2002, BYTE CODE ENG LIB
   Dieckmann S, 1999, LECT NOTES COMPUT SC, V1628, P92
   Do HS, 2005, EMPIR SOFTW ENG, V10, P405, DOI 10.1007/s10664-005-3861-2
   Elbaum S, 2003, SOFTW TEST VERIF REL, V13, P65, DOI 10.1002/stvr.263
   ELBAUM S, 2006, P 14 ACM SIGSOFT INT, P253
   Flanagan Cormac, 2004, P 2004 ACM SIGPLAN S, P49, DOI [10.1145/996821.996838, DOI 10.1145/996821.996838]
   GAMMA E, 2005, JUNIT
   HILDEBRANDT R, 2000, P INT S SOFTW TEST A, P135
   JARAMILLO C, 1999, P EUR SOFTW ENG C FD, P268
   *JTEST, JTEST PROD OV
   Leung H. K. N., 1990, Proceedings. Conference on Software Maintenance 1990 (Cat. No.90CH2921-5), P290, DOI 10.1109/ICSM.1990.131377
   Leung H. K. N., 1989, Proceedings: Conference on Software Maintenance (Cat. No.89CH2744-1), P60, DOI 10.1109/ICSM.1989.65194
   Onoma AK, 1998, COMMUN ACM, V41, P81, DOI 10.1145/274946.274960
   Pacheco C, 2005, LECT NOTES COMPUT SC, V3586, P504
   Ranganath V.P., 2004, PRUNING INTERFERENCE, P39
   REDDY SK, 2004, THESIS U NEBRASKA
   REPS T, 2000, P EUR SOFTW ENG C FD, P432
   Rothermel G, 2004, ACM T SOFTW ENG METH, V13, P277, DOI 10.1145/1027092.1027093
   Rothermel G, 1996, IEEE T SOFTWARE ENG, V22, P529, DOI 10.1109/32.536955
   ROTHERMEL G, 2006, SOFTWARE INFRASTRUCT
   SAFF D, 2004, P INT S SOFTW TEST A, P76
   Saff David., 2005, PROC ASE, P114, DOI DOI 10.1145/1101908.1101927
   WEIDE B, 2001, P 4 ICSE WORKSH COMP, P82
   WEYUKER EJ, 1982, COMPUT J, V25, P465, DOI 10.1093/comjnl/25.4.465
   XIE T, 2006, AUTOMATED SOFTWA JUL
   *XSTREAM, 2005, XSTREAM 1 1 2
   Xu G., 2007, P THE 6 JOINT M EURO, P85, DOI DOI 10.1145/1287624.1287638
NR 41
TC 30
Z9 38
U1 0
U2 5
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JAN-FEB
PY 2009
VL 35
IS 1
BP 29
EP 45
DI 10.1109/TSE.2008.103
PG 17
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 431UK
UT WOS:000265089400002
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Shoham, S
   Yahav, E
   Fink, SJ
   Pistoia, M
AF Shoham, Sharon
   Yahav, Eran
   Fink, Stephen J.
   Pistoia, Marco
TI Static specification mining using automata-based abstractions
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article; Proceedings Paper
CT International Symposium on Software Testing and Analysis (ISSTA)
CY 2007
CL Univ London Sch Oriental & African Studies, Brunei Gallery, London,
   ENGLAND
HO Univ London Sch Oriental & African Studies, Brunei Gallery
DE specification mining; static analysis; typestate
AB We present a novel approach to client-side mining of temporal API specifications based on static analysis. Specifically, we present an interprocedural analysis over a combined domain that abstracts both aliasing and event sequences for individual objects. The analysis uses a new family of automata-based abstractions to represent unbounded event sequences, designed to disambiguate distinct usage patterns and merge similar usage patterns. Additionally, our approach includes an algorithm that summarizes abstract traces based on automata clusters and effectively rules out spurious behaviors. We show experimental results mining specifications from a number of Java clients and APIs. The results indicate that effective static analysis for client-side mining requires fairly precise treatment of aliasing and abstract event sequences. Based on the results, we conclude that static client-side specification mining shows promise as a complement or alternative to dynamic approaches.
C1 [Shoham, Sharon] Technion Israel Inst Technol, Dept Comp Sci, IL-32000 Haifa, Israel.
   [Yahav, Eran; Fink, Stephen J.; Pistoia, Marco] IBM TJ Watson Res Ctr, Hawthorne, NY 10532 USA.
C3 Technion Israel Institute of Technology; International Business Machines
   (IBM)
RP Shoham, S (corresponding author), Technion Israel Inst Technol, Dept Comp Sci, IL-32000 Haifa, Israel.
EM sharonsh@cs.technion.ac.il; eyahav@us.ibm.com; sifink@us.ibm.com;
   pistoia@us.ibm.com
OI Yahav, Eran/0000-0003-4305-6314; Shoham Buchbinder,
   Sharon/0000-0002-7226-3526
CR Alur R, 2005, ACM SIGPLAN NOTICES, V40, P98, DOI 10.1145/1047659.1040314
   Ammons G, 2002, ACM SIGPLAN NOTICES, V37, P4, DOI 10.1145/565816.503275
   ANDERSSON HI, 1994, QUAL LIFE RES, V3, pS19, DOI 10.1007/BF00433371
   CHASE DR, 1990, P SIGPLAN 90 C PROGR, P296
   Cook J. E., 1998, ACM Transactions on Software Engineering and Methodology, V7, P215, DOI 10.1145/287000.287001
   Cousot P., 1977, C RECORD 4 ANN ACM S, P238, DOI DOI 10.1145/512950.512973
   Dallmeier V., 2006, P 2006 INT WORKSH DY, P17, DOI DOI 10.1145/1138912.1138918
   Demsky B, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P313, DOI 10.1109/ICSE.2002.1007978
   Engler Dawson R., 2001, Proceedings of the 18th ACM Symposium on Operating Systems Principles, P57
   Ernst MD, 2001, IEEE T SOFTWARE ENG, V27, P99, DOI 10.1109/32.908957
   Fink Stephen., 2006, INT S SOFTWARE TESTI, P133, DOI DOI 10.1145/1146238.1146254
   GOLD EM, 1967, INFORM CONTROL, V10, P447, DOI 10.1016/S0019-9958(67)91165-5
   HANGAL S, 2002, TRACKING DOWN SOFTWA
   KUNCAK V, 2002, P 29 ACM SIGPLAN SIG
   LAM P, 2003, P 17 EUR C OBJ OR PR
   Lie D, 2001, CONF PROC INT SYMP C, P192, DOI 10.1109/ISCA.2001.937448
   LIVSHITS VB, 2005, P 10 EUR SOFTW ENG C, P296, DOI DOI 10.1145/1095430.1081754
   Lo D., 2006, SIGSOFT FSE, P265
   LORENZOLI D, 2007, P 18 IEEE INT S SOFT
   MANDELIN D, 2005, PLDI 05, P48, DOI [10.1145/1065010.1065018, DOI 10.1145/1065010.1065018]
   Mariani L, 2007, IEEE SOFTWARE, V24, P76, DOI 10.1109/MS.2007.138
   Nandi M, 2005, LECT NOTES COMPUT SC, V3797, P77, DOI 10.1145/1094811.1094818
   PISTOIA M, 1999, JAVA 2 NETWORK SECUR
   Reps ThomasW., 1995, P ACM S PRINCIPLES P, P49
   SALCIANU AD, 2005, P 6 INT C VER MOD CH
   Vasudevan P, 2006, FOURTH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING RESEARCH, MANAGEMENT AND APPLICATIONS, PROCEEDINGS, P289, DOI 10.1109/SERA.2006.25
   *WALA, 2008, TJ WATS LIB AN
   Wasylkowski Andrzej, 2007, P 6 JOINT M EUROPEAN, P35, DOI [10.1145/1287624.1287632, DOI 10.1145/1287624.1287632]
   WEIMER W, 2005, P INT C TOOLS ALG CO
   Whaley J., 2002, Software Engineering Notes, V27, P221, DOI 10.1145/566171.566212
   YORSH G, 2007, SYMBOLIC SUMMARIZATI
   2008, GALLERY MINED SPECIF
NR 32
TC 42
Z9 51
U1 1
U2 6
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD SEP-OCT
PY 2008
VL 34
IS 5
BP 651
EP 666
DI 10.1109/TSE.2008.63
PG 16
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Engineering
GA 351WM
UT WOS:000259456600006
DA 2024-07-18
ER

PT J
AU Srivastava, S
   Hicks, M
   Foster, JS
   Jenkins, P
AF Srivastava, Saurabh
   Hicks, Michael
   Foster, Jeffrey S.
   Jenkins, Patrick
TI Modular information hiding and type-safe linking for C
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE coding tools and techniques; C; modules/packages; information hiding;
   type-safe linking; CMOD; software reliability
AB This paper presents CMOD, a novel tool that provides a sound module system for C. CMOD works by enforcing a set of four rules that are based on principles of modular reasoning and on current programming practice. CMOD's rules flesh out the convention that. h header files are module interfaces and. c source files are module implementations. Although this convention is well known, existing explanations of it are incomplete, omitting important subtleties needed for soundness. In contrast, we have formally proven that CMOD's rules enforce both information hiding and type-safe linking. To use CMOD, the programmer develops and builds their software as usual, redirecting the compiler and linker to CMOD's wrappers. We evaluated CMOD by applying it to 30 open source programs, totaling more than one million lines of code. Violations to CMOD's rules revealed more than a thousand information hiding errors, dozens of typing errors, and hundreds of cases that, although not currently bugs, make programming mistakes more likely as the code evolves. At the same time, programs generally adhere to the assumptions underlying CMOD's rules and, so, we could fix rule violations with a modest effort. We conclude that CMOD can effectively support modular programming in C: It soundly enforces type-safe linking and information hiding while being largely compatible with existing practice.
C1 [Srivastava, Saurabh; Hicks, Michael; Foster, Jeffrey S.; Jenkins, Patrick] Univ Maryland, Dept Comp Sci, College Pk, MD 20742 USA.
C3 University System of Maryland; University of Maryland College Park
RP Srivastava, S (corresponding author), Univ Maryland, Dept Comp Sci, AV Williams Bldg, College Pk, MD 20742 USA.
EM saurabhs@cs.umd.edu; mwh@cs.umd.edu; jfoster@cs.umd.edu;
   patjenk@gmail.com
CR [Anonymous], 1991, OBJECT ORIENTED PROG
   [Anonymous], 65 BELL LAB
   [Anonymous], 2002, P USENIX ANN TECHN C
   Blume M, 1999, ACM T PROGR LANG SYS, V21, P813, DOI 10.1145/325478.325518
   Cannon L.W., 1990, RECOMMENDED C STYLE
   CARDELLI L, 1997, P 24 ACM SIGPLAN SIG, P266
   CONDIT J, 2007, P EUR S PROGR
   Ernst MD, 2002, IEEE T SOFTWARE ENG, V28, P1146, DOI 10.1109/TSE.2002.1158288
   FAVRE JM, 2003, P 3 IEEE INT WORKSH
   Flatt Matthew., 1998, P ACM SIGPLAN 1998 C, P236
   *GCC, 2008, PREC HEAD US GNU COM
   GLEW N, 1999, P 26 ACM SIGPLAN SIG
   Kernighan B.W., 1988, The C Programming Language
   Kernighan B. W., 1999, The Practice of Programming, V1st
   KING KN, 1996, C PROGRAMMING MODERN
   MCCLOSKEY B, 2005, P 12 FAST SOFTW ENCR
   MCCONNELL S., 1993, CODE COMPLETE
   MORRIS R, 1999, P 17 ACM S OP SYST P
   MORRISETT G, 2006, COMMUNICATION    JUL
   Necula GC, 2002, LECT NOTES COMPUT SC, V2304, P213
   NECULA GC, 2005, ACM T PROGRAMMING LA, V27
   Pierce B., 2005, ADV TOPICS TYPES PRO
   *PROD GIMP SOFTW, 1999, PC LINK FLEXELINT
   REID A, 2000, P 4 S OP SYST DES IM
   SPULER D, 1992, 927 J COOK U
   SRIVASTAVA S, 2007, CST4874 U MARYL
   Srivastava S, 2007, PROCEEDINGS OF THE TLDI 2007: 2007 ACM SIGPLAN INTERNATIONAL WORKSHOP ON TYPES IN LANGUAGES DESIGN AND IMPLEMENTATION, P3, DOI 10.1145/1190315.1190319
   STEVENS WP, 1974, IBM SYST J, V13, P115, DOI 10.1147/sj.132.0115
   VANDEVOORDE D, 2006, N2073060143JTC1SC22W
   VANOMMERING R, 2000, IEEE SOFTWARE
   2008, ONCE ONLY HEADERS C
   2008, COM COMPONENT OBJECT
NR 32
TC 0
Z9 0
U1 0
U2 3
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAY-JUN
PY 2008
VL 34
IS 3
BP 357
EP 376
DI 10.1109/TSE.2008.25
PG 20
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 306CA
UT WOS:000256223600004
DA 2024-07-18
ER

PT J
AU Desmet, L
   Verbaeten, P
   Joosen, W
   Piessens, F
AF Desmet, Lieven
   Verbaeten, Pierre
   Joosen, Wouter
   Piessens, Frank
TI Provable protection against web application vulnerabilities related to
   session data dependencies
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE software/program verification; security; reliability; data sharing;
   Web-based services; Web technologies
AB Web applications are widely adopted and their correct functioning is mission critical for many businesses. At the same time, Web applications tend to be error prone and implementation vulnerabilities are readily and commonly exploited by attackers. The design of countermeasures that detect or prevent such vulnerabilities or protect against their exploitation is an important research challenge for the fields of software engineering and security engineering. In this paper, we focus on one specific type of implementation vulnerability, namely, broken dependencies on session data. This vulnerability can lead to a variety of erroneous behavior at runtime and can easily be triggered by a malicious user by applying attack techniques such as forceful browsing. This paper shows how to guarantee the absence of runtime errors due to broken dependencies on session data in Web applications. The proposed solution combines development-time program annotation, static verification, and runtime checking to provably protect against broken data dependencies. We have developed a prototype implementation of our approach, building on the JML annotation language and the existing static verification tool ESC/Java2, and we successfully applied our approach to a representative J2EE-based e-commerce application. We show that the annotation overhead is very small, that the performance of the fully automatic static verification is acceptable, and that the performance overhead of the runtime checking is limited.
C1 [Desmet, Lieven; Verbaeten, Pierre; Joosen, Wouter; Piessens, Frank] Katholieke Univ Leuven, Dept Comp Sci, B-3001 Heverlee, Belgium.
C3 KU Leuven
RP Desmet, L (corresponding author), Katholieke Univ Leuven, Dept Comp Sci, Postbus 2402,Celestijnenlaan 200A, B-3001 Heverlee, Belgium.
EM Lieven.Desmet@cs.kuleuven.be; Pierre.Verbaeten@cs.kuleuven.be;
   Wouterjoosen@cs.kuleuven.be; Frank.Piessens@cs.kuleuven.be
RI Piessens, Frank/B-1695-2014
OI Desmet, Lieven/0000-0001-5155-7472
CR ALDRICH J, 2003, THESIS U WASHINGTON
   [Anonymous], 1999, JavaSpaces Principles, Patterns, and Practice
   [Anonymous], FMSE 04
   [Anonymous], 2006, WEB APPL FIR EV CRIT
   [Anonymous], 1999, 2616 IETF RFC
   [Anonymous], 1986, Abstraction and Specification in Program Development
   Armstrong E., 2005, J2EE 1 4 TUTORIAL
   BAETEN JCM, 2001, P 16 ACM S APPL COMP, P576
   Barnett M, 2005, LECT NOTES COMPUT SC, V3362, P49
   Bass Len, 2012, SEI S SOFTW
   Burdy L., 2005, International Journal on Software Tools for Technology Transfer, V7, P212, DOI 10.1007/s10009-004-0167-4
   Cardelli L, 2005, PROC INT CONF SOFTW, P2
   Clements P. C., 1996, Proceedings of the 8th International Workshop on Software Specification and Design, P16, DOI 10.1109/IWSSD.1996.501143
   DESMET L, 2006, P 5 INT S SOFTW COMP, P34
   DESMET L, 2007, PROVABLE PROTECTION
   DESMET L, 2005, 427 CW KATH U DEP CO
   FORSTER K, 2007, WHY FIREWALLS FAIL P
   Golnabi K, 2006, IEEE IFIP NETW OPER, P305, DOI 10.1109/NOMS.2006.1687561
   Gould C, 2004, PROC INT CONF SOFTW, P645, DOI 10.1109/ICSE.2004.1317486
   Haldar V., 2005, P 21 ANN COMPUTER SE, P303, DOI DOI 10.1109/CSAC.2005.21
   Halfond WilliamG. J., 2005, P 20 IEEEACM INT C A, P174, DOI DOI 10.1145/1101908
   Huang XG, 2004, CHINESE J ELECTRON, V13, P40
   Jacobs B, 2005, SEFM 2005: THIRD IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING AND FORMAL METHODS, PROCEEDINGS, P137, DOI 10.1109/SEFM.2005.39
   Jovanovic N., 2006, PLAS 2006. Proceedings of the 2006 Programming Languages and Analysis for Security Workshop, P27, DOI 10.1145/1134744.1134751
   *KINDSOFTWARE, 2007, EXT STAT CHECK JAV V
   Kiniry JosephR., 2006, SAVCBS '06, P19
   Le Traon Y, 2006, IEEE T SOFTWARE ENG, V32, P571, DOI 10.1109/TSE.2006.79
   LEAVENS GT, 2007, JAVA MODELING LANGUA
   Livshits VB, 2005, USENIX ASSOCIATION PROCEEDINGS OF THE 14TH USENIX SECURITY SYMPOSIUM, P271
   Medvidovic N, 2000, IEEE T SOFTWARE ENG, V26, P70, DOI 10.1109/32.825767
   MEYER B, 1992, COMPUTER, V25, P40, DOI 10.1109/2.161279
   Miller M. S., 2006, Ph.D. Dissertation
   NEUMANN PG, 2006, P 13 ACM C COMP COMM
   NGUYENTUONG A, 2005, P 20 IFIP INT INF SE, P295
   Offutt J, 2004, 15TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P187, DOI 10.1109/ISSRE.2004.13
   Pavlova M, 2004, INT FED INFO PROC, V153, P1
   Perry D. E., 1992, SIGSOFT Software Engineering Notes, V17, P40, DOI 10.1145/141874.141884
   Pettit S., 2001, Anatomy of a Web Application: Security Considerations
   Pietraszek T, 2006, LECT NOTES COMPUT SC, V3858, P124
   RAGHAVAN AD, 2005, 0003E IOW STAT U DEP
   RAGHVENDRA V, 2000, INTERNETWORKING, V3
   RISTIC I, 2006, IN SECURE, V1, P6
   SAMAR V, 1996, P 3 ACM C COMP COMM, P1
   Shaw M., 1996, SOFTWARE ARCHITECTUR
   *SUN MICR INC, 2007, JAV SERVL TECHN
   Szyperski C., 2002, Component Software: Beyond Object-Oriented Programming
   *WEBSCURITY INC, 2007, WEAK LINK MIT WEB AP
   XU W, 2006, P 15 US SEC S, P9
NR 48
TC 3
Z9 3
U1 0
U2 8
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JAN-FEB
PY 2008
VL 34
IS 1
BP 50
EP 64
DI 10.1109/TSE.2007.70742
PG 15
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 265QH
UT WOS:000253375500005
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Dai, YS
   Xie, M
   Long, Q
   Ng, SH
AF Dai, Yuan-Shun
   Xie, Min
   Long, Quan
   Ng, Szu-Hui
TI Uncertainty analysis in software reliability modeling by Bayesian
   approach with maximum-entropy principle
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE software reliability; uncertainty analysis; Bayesian method; Monte
   Carlo; Markov model; Graph theory
ID PERFORMANCE
AB In software reliability modeling, the parameters of the model are typically estimated from the test data of the corresponding component. However, the widely used point estimators are subject to random variations in the data, resulting in uncertainties in these estimated parameters. Ignoring the parameter uncertainty can result in grossly underestimating the uncertainty in the total system reliability. This paper attempts to study and quantify the uncertainties in the software reliability modeling of a single component with correlated parameters and in a large system with numerous components. Another characteristic challenge in software testing and reliability is the lack of available failure data from a single test, which often makes modeling difficult. This lack of data poses a bigger challenge in the uncertainty analysis of the software reliability modeling. To overcome this challenge, this paper proposes utilizing experts' opinions and historical data from previous projects to complement the small number of observations to quantify the uncertainties. This is done by combining the Maximum- Entropy Principle ( MEP) into the Bayesian approach. This paper further considers the uncertainty analysis at the system level, which contains multiple components, each with its respective model/ parameter/ uncertainty, by using a Monte Carlo approach. Some examples with different modeling approaches ( NHPP, Markov, Graph theory) are illustrated to show the generality and effectiveness of the proposed approach. Furthermore, we illustrate how the proposed approach for considering the uncertainties in various components improves a large- scale system reliability model.
C1 Univ Tennessee, Dept Ind & Informat Engn, Dept Elect Engn & Comp Sci, Knoxville, TN 37996 USA.
   Natl Univ Singapore, Ind & Syst Engn Dept, Singapore 117548, Singapore.
C3 University of Tennessee System; University of Tennessee Knoxville;
   National University of Singapore
RP Dai, YS (corresponding author), Univ Tennessee, Dept Ind & Informat Engn, Dept Elect Engn & Comp Sci, Knoxville, TN 37996 USA.
EM ydai1@utk.edu; mxie@nus.edu.sg; longquan@nus.edu.sg; isensh@nus.edu.sg
RI Xie, Min/A-5552-2011; Xie, Min/IUQ-1412-2023
OI Xie, Min/0000-0002-8500-8364; 
CR Abbas AE, 2006, IEEE T ENG MANAGE, V53, P146, DOI 10.1109/TEM.2005.861803
   Adams T, 1996, IEEE T SOFTWARE ENG, V22, P687, DOI 10.1109/32.541438
   [Anonymous], 2004, Computing System Reliability. Models and Analysis
   Berger AL, 1996, COMPUT LINGUIST, V22, P39
   Berger J. O., 1985, STAT DECISION THEORY, DOI DOI 10.1007/978-1-4757-4286-2
   Berger J, 2006, BAYESIAN ANAL, V1, P385, DOI 10.1214/06-BA115
   Bernardo J.M., 1994, Bayesian Theory
   Dai YS, 2003, J SYST SOFTWARE, V66, P47, DOI 10.1016/S0164-1212(02)00062-6
   Dai YS, 2003, RELIAB ENG SYST SAFE, V79, P103, DOI 10.1016/S0951-8320(02)00200-4
   Dai YS, 2006, IEEE T RELIAB, V55, P337, DOI 10.1109/TR.2006.874940
   DeGroot MH, 2002, PROBABILITY STAT
   Eyink GL, 2006, J STAT PHYS, V123, P1071, DOI 10.1007/s10955-006-9124-9
   GOEL AL, 1979, IEEE T RELIAB, V28, P206, DOI 10.1109/TR.1979.5220566
   Goldstein M, 2006, BAYESIAN ANAL, V1, P403, DOI 10.1214/06-BA116
   HAVERKORT BR, 1995, IEEE T RELIAB, V44, P147, DOI 10.1109/24.376541
   HOLMES DE, 2006, P AM I PHYS C BAY IN, V872, P195
   Jaynes E. T., 1963, STAT PHYS, V3, P181
   Jelinski Z., 1972, Statistical Computer Performance Evaluation, P465, DOI DOI 10.1016/B978-0-12-266950-7.50028-1
   JEWELL WS, 1985, IEEE T SOFTWARE ENG, V11, P1465, DOI 10.1109/TSE.1985.231890
   Kapur J. N., 1989, Maximum Entropy Models in Science and Engineering
   Kim S, 2004, IEEE T SOFTWARE ENG, V30, P218
   Kurowicka D., 2006, Uncertainty Analysis with High Dimensional Dependence Modelling
   MASERA M, 1987, IEEE T RELIAB, V36, P145, DOI 10.1109/TR.1987.5222319
   MILLER KW, 1992, IEEE T SOFTWARE ENG, V18, P33, DOI 10.1109/32.120314
   Myrtveit I, 2005, IEEE T SOFTWARE ENG, V31, P380, DOI 10.1109/TSE.2005.58
   OCONNOR PDT, 1995, MICROELECTRON RELIAB, V35, P1347, DOI 10.1016/0026-2714(95)99382-S
   Pham H., 2000, SOFTWARE RELIABILITY
   Robert CP, 2001, The Bayesian Choice: From Decision-Theoretic Foundations to Computational Implementation, V2nd
   Selby RW, 2005, IEEE T SOFTWARE ENG, V31, P495, DOI 10.1109/TSE.2005.69
   Shannon C. E., 1948, BELL SYST TECH J, V27, P379, DOI DOI 10.1002/J.1538-7305.1948.TB01338.X
   Soundappan P, 2004, RELIAB ENG SYST SAFE, V85, P295, DOI 10.1016/j.ress.2004.03.018
   Trivedi K. S., 1982, PROBABILITY STAT REL
   Tseng CY, 2006, PHYSICA A, V370, P530, DOI 10.1016/j.physa.2006.03.024
   Wooff DA, 2002, IEEE T SOFTWARE ENG, V28, P510, DOI 10.1109/TSE.2002.1000453
   Xie M, 1997, QUAL RELIAB ENG INT, V13, P347, DOI 10.1002/(SICI)1099-1638(199711/12)13:6<347::AID-QRE116>3.0.CO;2-O
   Yang B, 2000, RELIAB ENG SYST SAFE, V70, P323, DOI 10.1016/S0951-8320(00)00069-7
   Yin L, 2001, P A REL MAI, P229, DOI 10.1109/RAMS.2001.902472
   YIN L, 1999, P 10 INT S SOFTW REL, P6
NR 38
TC 53
Z9 64
U1 0
U2 25
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD NOV
PY 2007
VL 33
IS 11
BP 781
EP 795
DI 10.1109/TSE.2007.70739
PG 15
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 214JZ
UT WOS:000249735100004
DA 2024-07-18
ER

PT J
AU Antoniol, G
   Guéhéneuc, YG
AF Antoniol, Giuliano
   Gueheneuc, Yann-Gael
TI Feature identification:: An epidemiological metaphor
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article; Proceedings Paper
CT 21st International Conference on Software Maintenance (ICSM 2005)
CY SEP 26-29, 2005
CL Budapest, HUNGARY
SP IEEE
DE program understanding; dynamic analysis; static analysis; feature
   identification; epidemiology; FIREFOX and MOZILLA; Web browsers
ID SOFTWARE
AB Feature identification is a technique to identify the source code constructs activated when exercising one of the features of a program. We propose new statistical analyses of static and dynamic data to accurately identify features in large multithreaded object-oriented programs. We draw inspiration from epidemiology to improve previous approaches to feature identification and develop an epidemiological metaphor. We build our metaphor on our previous approach to feature identification, in which we use processor emulation, knowledge-based filtering, probabilistic ranking, and metamodeling. We carry out three case studies to assess the usefulness of our metaphor, using the "save a bookmark" feature of Web browsers as an illustration. In the first case study, we compare our approach with three previous approaches ( a naive approach, a concept analysis-based approach, and our previous probabilistic approach) in identifying the feature in MOZILLA, a large, real-life, multithreaded object-oriented program. In the second case study, we compare the implementation of the feature in the FIREFOX and MOZILLA Web browsers. In the third case study, we identify the same feature in two more Web browsers, Chimera ( in C) and ICEBrowser ( in Java), and another feature in JHOTDRAW and XFIG, to highlight the generalizability of our metaphor.
C1 Ecole Polytech, Dept Informat, Montreal, PQ H3C 3A7, Canada.
   Univ Montreal, Dept Informat & Rech Operat, Montreal, PQ H3C 3J7, Canada.
C3 Universite de Montreal; Polytechnique Montreal; Universite de Montreal
RP Antoniol, G (corresponding author), Ecole Polytech, Dept Informat, CP 6079,Succ Centreville, Montreal, PQ H3C 3A7, Canada.
EM antoniol@ieee.org; guehene@iro.umontreal.ca
RI Guéhéneuc, Yann-Gaël/K-9371-2019
CR Agrawal Hiralal, 1990, PLDI, P246, DOI 10.1145/93542.93576
   Antoniol G, 1998, FIFTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM - METRICS 1998, PROCEEDINGS, P23, DOI 10.1109/METRIC.1998.731224
   ANTONIOL G, 2005, P 21 INT C SOFTW MAI
   Ball T, 1996, PROCEEDINGS OF THE 29TH ANNUAL IEEE/ACM INTERNATIONAL SYMPOSIUM ON MICROARCHITECTURE - MICRO-29, P46, DOI 10.1109/MICRO.1996.566449
   BEZIVIN J, 2001, P 39 INT C TECHN OBJ, P348
   Chen YL, 2000, TRANSPORT RES B-METH, V34, P241, DOI 10.1016/S0191-2615(99)00023-5
   CHIKOFSKY EJ, 1990, IEEE SOFTWARE, V7, P13, DOI 10.1109/52.43044
   CONCLING J, 1995, J SOFTWARE MAINTENAN, V7, P49
   EDWARDS D, 2004, SERCTR270
   Eisenbarth T, 2003, IEEE T SOFTWARE ENG, V29, P210, DOI 10.1109/TSE.2003.1183929
   Eisenbarth T, 2001, PROC IEEE INT CONF S, P602, DOI 10.1109/ICSM.2001.972777
   Eisenberg AD, 2005, PROC IEEE INT CONF S, P337
   Ernst M. D., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P213, DOI 10.1109/ICSE.1999.841011
   ERNST MD, 2003, P 1 ICSE WORKSH DYN
   Greevy O, 2005, PROC IEEE INT CONF S, P347
   GUEHENEUC YG, 2001, PTIDEJ TOOL SUITE EV
   GUEHENEUC YG, 2001, P 1 IJCAI WORKSH MOD, P57
   Gyimóthy T, 2005, IEEE T SOFTWARE ENG, V31, P897, DOI 10.1109/TSE.2005.112
   Hamou-Lhadj A, 2002, PROG COMPREHEN, P159, DOI 10.1109/WPC.2002.1021337
   HAMOULHADJ A, 2003, P 1 INT C SOFTW ENG
   Harrold MJ, 1998, ACM SIGPLAN NOTICES, V33, P83, DOI 10.1145/277633.277647
   JEFFERY C, 2003, P 1 ICSE WORKSH DYN
   Kollmann R, 2002, NINTH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P22, DOI 10.1109/WCRE.2002.1173061
   Koru AG, 2005, IEEE T SOFTWARE ENG, V31, P625, DOI 10.1109/TSE.2005.89
   Melski D, 1999, LECT NOTES COMPUT SC, V1575, P47
   *OBJ MAN GROUP, 2005, MOD DRIV ARCH
   PAGEL BU, 1996, P 1 EUR C PATT LANG
   REISS S, 2003, P 1 ICSE WORKSH DYN
   Reiss SP, 2001, PROC INT CONF SOFTW, P221, DOI 10.1109/ICSE.2001.919096
   Renieris M., 1999, 1999 WORKSHOP NEW PA, P70, DOI [10.1145/331770.331788., DOI 10.1145/331770.331788]
   Salah M, 2005, PROC IEEE INT CONF S, P639
   Salah M, 2004, PROC IEEE INT CONF S, P72, DOI 10.1109/ICSM.2004.1357792
   Snedecor GW, 1983, Statistical Methods, V6th
   Sunyé G, 2000, LECT NOTES COMPUT SC, V1850, P44
   Thomas SJ, 2002, COMPUT SCI ENG, V4, P26, DOI 10.1109/MCISE.2002.1032426
   WILDE N, 1992, J SOFTWARE MAINT JAN, P49
NR 36
TC 43
Z9 59
U1 0
U2 4
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD SEP
PY 2006
VL 32
IS 9
BP 627
EP 641
DI 10.1109/TSE.2006.88
PG 15
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Engineering
GA 087WU
UT WOS:000240774300002
DA 2024-07-18
ER

PT J
AU Sproston, J
   Donatelli, S
AF Sproston, Jeremy
   Donatelli, Susanna
TI Backward bisimulation in Markov chain model checking
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article; Proceedings Paper
CT 1st International Conference on the Quantitative Evaluation of Systems
   (QEST 2004)
CY SEP 27-30, 2004
CL Enschede, NETHERLANDS
SP Royal Netherlands Acad Arts & Sci, Netherlands Org Sci Res, Dutch Res Sch, Inst Programming Res & Algorithm, Univ Twente, Dept Elect Engn, Math & Comp Sci, Univ Twente, Ctr Telemat & Informat Technol
DE Markov processes; model checking; temporal logic; verification
AB Equivalence relations can be used to reduce the state space of a system model, thereby permitting more efficient analysis. We study backward stochastic bisimulation in the context of model checking continuous-time Markov chains against Continuous Stochastic Logic (CSL) properties. While there are simple CSL properties that are not preserved when reducing the state space of a continuous-time Markov chain using backward stochastic bisimulation, we show that the equivalence can nevertheless be used in the verification of a practically significant class of CSL properties. We consider an extension of these results to Markov reward models and Continuous Stochastic Reward Logic. Furthermore, we identify the logical properties for which the requirement on the equality of state-labeling sets ( normally imposed on state equivalences in a model-checking context) can be omitted from the definition of the equivalence, resulting in a better state-space reduction.
C1 Univ Turin, Dipartimento Informat, I-10149 Turin, Italy.
C3 University of Turin
RP Sproston, J (corresponding author), Univ Turin, Dipartimento Informat, I-10149 Turin, Italy.
EM sproston@di.unito.it; susi@di.unito.it
RI Sproston, Jeremy/AAI-5434-2021
CR [Anonymous], SOFTWARE TOOLS TECHN
   [Anonymous], SOFTWARE TOOLS TECHN
   [Anonymous], MODEL CHECKING
   [Anonymous], 1971, Dynamic Probabilistic Systems. Volume2- Semi-Markov and decision processes
   Aziz Adnan, 2000, ACM Trans. Comput. Logic, V1, P162, DOI DOI 10.1145/343369.343402
   Baier C, 2005, INFORM COMPUT, V200, P149, DOI 10.1016/j.ic.2005.03.001
   Baier C, 2003, IEEE T SOFTWARE ENG, V29, P524, DOI 10.1109/TSE.2003.1205180
   Bernardo M, 1998, THEOR COMPUT SCI, V202, P1, DOI 10.1016/S0304-3975(97)00127-8
   BROWNE MC, 1988, THEOR COMPUT SCI, V59, P115, DOI 10.1016/0304-3975(88)90098-9
   Buchholz P, 1999, THEOR COMPUT SCI, V215, P263, DOI 10.1016/S0304-3975(98)00169-8
   BUCHHOLZ P, 1994, J APPL PROBAB, V31, P59, DOI 10.2307/3215235
   CHIOLA G, 1993, IEEE T COMPUT, V42, P1343, DOI 10.1109/12.247838
   CLARKE EM, 1986, ACM T PROGR LANG SYS, V8, P244, DOI 10.1145/5397.5399
   Cormen T.H., 1990, Introduction to Algorithms
   COURCOUBETIS C, 1995, J ASSOC COMPUT MACH, V42, P857, DOI 10.1145/210332.210339
   Derisavi S, 2003, INFORM PROCESS LETT, V87, P309, DOI 10.1016/S0020-0190(03)00343-0
   Desharnais J, 2003, J LOGIC ALGEBR PROGR, V56, P99, DOI 10.1016/S1567-8326(02)00068-1
   Hansson H., 1994, Formal Aspects of Computing, V6, P512, DOI 10.1007/BF01211866
   Henzinger TA, 2003, FORM METHOD SYST DES, V23, P303, DOI 10.1023/A:1026228213080
   Hermanns H, 1998, COMPUT NETWORKS ISDN, V30, P901, DOI 10.1016/S0169-7552(97)00133-5
   Hillston J., 1996, A Compositional Approach to Performance Modelling
   Holzmann GJ, 1997, IEEE T SOFTWARE ENG, V23, P279, DOI 10.1109/32.588521
   Howard R.A., 1971, SEMIMARKOV DECISION, V1
   KANELLAKIS PC, 1990, INFORM COMPUT, V86, P43, DOI 10.1016/0890-5401(90)90025-D
   Kemeny J., 1960, Finite Markov Chains
   Kwiatkowska M, 2004, INT CONF QUANT EVAL, P322
   LYNCH N, 1995, INFORM COMPUT, V121, P214, DOI 10.1006/inco.1995.1134
   Marsan M.A., 1995, MODELING GEN STOCHAS
   Pnueli Amir., 1977, P 18 ANN S FDN COMPU, P46, DOI DOI 10.1109/SFCS.1977.32
   SCHWAGMEYER P L, 1984, P275
   Sproston J, 2004, INT CONF QUANT EVAL, P220
   Vardi M.Y., 1985, FOCS'85, P327
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
NR 39
TC 22
Z9 22
U1 0
U2 3
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD AUG
PY 2006
VL 32
IS 8
BP 531
EP 546
DI 10.1109/TSE.2006.74
PG 16
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Engineering
GA 081XU
UT WOS:000240351700002
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Hayes, JH
   Dekhtyar, A
   Sundaram, SK
AF Hayes, JH
   Dekhtyar, A
   Sundaram, SK
TI Advancing candidate link generation for requirements tracing: The study
   of methods
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE requirements tracing; dynamic link generation; Verification and
   Validation (V&V); Independent Validation and Verification ( IV&V);
   information retrieval; TF-IDF; LSI; recall; precision
AB This paper addresses the issues related to improving the overall quality of the dynamic candidate link generation for the requirements tracing process for Verification and Validation and Independent Verification and Validation analysts. The contribution of the paper is four-fold: We define goals for a tracing tool based on analyst responsibilities in the tracing process, we introduce several new measures for validating that the goals have been satisfied, we implement analyst feedback in the tracing process, and we present a prototype tool that we built, RETRO (REquirements TRacing On-target), to address these goals. We also present the results of a study used to assess RETRO's support of goals and goal elements that can be measured objectively.
C1 Univ Kentucky, Dept Comp Sci, Lexington, KY 40506 USA.
C3 University of Kentucky
RP Univ Kentucky, Dept Comp Sci, 301 Rose St, Lexington, KY 40506 USA.
EM hayes@cs.uky.edu; dekhtyar@cs.uky.edu; skart2@uky.edu
CR ABRAHAMS M, 1998, P IEEE WESCON 98 SEP, P130
   ANEZIN D, 1994, THESIS G MASON U
   Antoniol G, 2002, IEEE T SOFTWARE ENG, V28, P970, DOI 10.1109/TSE.2002.1041053
   Antoniol G, 2000, ANN SOFTW ENG, V9, P35, DOI 10.1023/A:1018916522804
   Baeza-Yates Ricardo, 1999, MODERN INFORM RETRIE, V463
   BOHNER S, 1995, THESIS G MASON U
   BROUSE P, 1992, THESIS G MASON U
   CASOTTO A, 1993, P IEEE ACM INT C COM, P350
   Cleland-Huang J, 2002, IEEE JOINT INTERNATIONAL CONFERENCE ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P289, DOI 10.1109/ICRE.2002.1048540
   DEERWESTER S, 1990, J AM SOC INFORM SCI, V41, P391, DOI 10.1002/(SICI)1097-4571(199009)41:6<391::AID-ASI1>3.0.CO;2-9
   Dekhtyar A., 2004, P INT WORKSHOP MININ, P22
   Egyed A, 2002, ASE 2002: 17TH IEEE INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, P163, DOI 10.1109/ASE.2002.1115010
   Egyed A, 2001, PROC INT CONF SOFTW, P123, DOI 10.1109/ICSE.2001.919087
   Flesch R, 1948, J APPL PSYCHOL, V32, P221, DOI 10.1037/h0057532
   Flesch RF, 1943, J GEN PSYCHOL, V28, P63, DOI 10.1080/00221309.1943.10545195
   Gotel O. C. Z., 1994, Proceedings of the First International Conference on Requirements Engineering (Cat. No.94TH0613-0), P94, DOI 10.1109/ICRE.1994.292398
   *GSFC SBRS, 1997, SDST089 GSFC SBRS
   *GSFC SBRS, 1997, SDST059A GSFC SBRS
   Hayes J., 2005, P 3 INT WORKSHOP TRA, P20
   Hayes JH, 2004, 12TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, PROCEEDINGS, P249
   Hayes JH, 2003, 11TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, PROCEEDINGS, P138
   Hayes JH, 2002, 15TH CONFERENCE ON SOFTWARE ENGINEERING EDUCATION AND TRAINING, PROCEEDINGS, P192, DOI 10.1109/CSEE.2002.995211
   HAYES JH, 2004, 42304 TR U KENT
   HAYES JH, 2004, 42204 TR U KENT
   HAYES JH, 1990, P SOFTW QUAL WEEK MA
   HAYES JH, 2005, P WORKSH MIN SOFTW R, P58
   HAYES JH, 2005, INT J SOFTW ENG KNOW, V15, P185
   Hoffmann M, 2004, 12TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, PROCEEDINGS, P301
   *HOLAGENT CORP, 2006, RDD100 HOLAGENT CORP
   *INCOSE, 1996, INCOSE REQ MAN TOOL
   Marchal D, 2003, J STRUCT GEOL, V25, P135, DOI 10.1016/S0191-8141(02)00011-1
   *MDP, 2005, CM 1 PROJ
   MUNDIE T, 1995, P AM SOC MECH ENG AS
   OFFUTT J, 2004, ACM SIGSOFT SOFTWARE, V29, P1
   PIERCE R, 1978, P SOFTW QUAL ASS WOR
   Pinheiro FAC, 1996, IEEE SOFTWARE, V13, P52, DOI 10.1109/52.506462
   Pohl K, 1996, PROCEEDINGS OF THE SECOND INTERNATIONAL CONFERENCE ON REQUIREMENTS ENGINEERING, P76, DOI 10.1109/ICRE.1996.491432
   Ramesh B, 2001, IEEE T SOFTWARE ENG, V27, P58, DOI 10.1109/32.895989
   RAMESH B, 1992, IEEE T SOFTWARE ENG, V18, P498, DOI 10.1109/32.142872
   Ramesh B, 1998, COMMUN ACM, V41, P37, DOI 10.1145/290133.290147
   Rumbaugh J., 1991, OBJECT ORIENTED MODE
   SAVVIDIS I, 1995, THESIS G MASON U
   Settimi R, 2004, 7TH INTERNATIONAL WORKSHOP ON PRINCIPLES OF SOFTWARE EVOLUTION, P49, DOI 10.1109/IWPSE.2004.1334768
   Sjoberg DIK, 2002, 2002 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P17, DOI 10.1109/ISESE.2002.1166921
   Spanoudakis G, 2004, J SYST SOFTWARE, V72, P105, DOI 10.1016/S0164-1212(03)00242-5
   Spanoudakis G., 2002, ACM INT C PROCEEDING, P135, DOI [10.1145/568760.568786, DOI 10.1145/568760.568786]
   SUNDARAM SK, 2005, P WORKSH PRED MOD SO
   Tsumaki T, 2000, SEVENTH ASIA-PACIFIC SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P206, DOI 10.1109/APSEC.2000.896701
   WATKINS R, 1994, IEEE SOFTWARE, V11, P104, DOI 10.1109/52.300100
   Yadla S, 2005, INNOV SYST SOFTW ENG, V1, P116, DOI 10.1007/s11334-005-0011-3
   2005, TELELOGIC PRODUCT DO
   2005, PREDICTOR MODELS SOF
   2006, RATIONAL REQUISITEPR
   2006, SQL SERVER PERFORMAN
NR 54
TC 269
Z9 325
U1 0
U2 14
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JAN
PY 2006
VL 32
IS 1
BP 4
EP 19
DI 10.1109/TSE.2006.3
PG 16
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 004MK
UT WOS:000234756700001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Desai, N
   Mallya, AU
   Chopra, AK
   Singh, MP
AF Desai, N
   Mallya, AU
   Chopra, AK
   Singh, MP
TI Interaction Protocols as design abstractions for business processes
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE multiagent systems; software reuse; interaction-based modeling; software
   design methodologies; rule-based processing; pi-calculus
ID MODELS
AB Business process modeling and enactment are notoriously complex, especially in open settings, where business partners are autonomous, requirements must be continually finessed, and exceptions frequently arise because of real-world or organizational problems. Traditional approaches, which attempt to capture processes as monolithic flows, have proven inadequate in addressing these challenges. We propose (business) protocols as components for developing business processes. A protocol is an abstract, modular, publishable specification of an interaction among different roles to be played by different participants. When instantiated with the participants' internal policies, protocols yield concrete business processes. Protocols are reusable and refinable, thus simplifying business process design. We show how protocols and their composition are theoretically founded in the pi-calculus.
C1 N Carolina State Univ, Dept Comp Sci, Raleigh, NC 27695 USA.
   Veraz Networks, San Jose, CA 95131 USA.
C3 North Carolina State University
RP N Carolina State Univ, Dept Comp Sci, Suite 110,Box 7535, Raleigh, NC 27695 USA.
EM nvdesai@ncsu.edu; aumallya@ncsu.edu; akchopra@ncsu.edu; singh@ncsu.edu
RI Singh, Munindar P/L-8500-2013; Desai, Nirmit/AAQ-5161-2021
OI Singh, Munindar P/0000-0003-3599-3893; 
CR AGARWAL V, 2005, P 14 INT C WORLD WID, P128
   ALLEN R, 1997, ACM T SOFTWARE E JUL
   [Anonymous], 2004, W3C MEMB SUBMISS
   [Anonymous], 1999, Communicating and Mobile Systems: The Calculus
   BAINA K, 2004, P ADV INF SYST ENG 1
   Bauer B., 2001, Agent Uml: A Formalism For Specifying Multiagent Interaction
   Bergenti F, 2004, MU S ART SOC SIM ORG, P19
   BPEL, 2003, BUS PROC EX LANG WEB
   Bresciani P, 2004, AUTON AGENT MULTI-AG, V8, P203, DOI 10.1023/B:AGNT.0000018806.20944.ef
   Canal C, 2003, IEEE T SOFTWARE ENG, V29, P242, DOI 10.1109/TSE.2003.1183935
   Desai N, 2004, IEEE INTERNATIONAL CONFERENCE ON WEB SERVICES, PROCEEDINGS, P35, DOI 10.1109/ICWS.2004.1314721
   GEREDE CE, 2004, P INT C SERV OR COMP
   Hoare CAR., 1985, Communicating Sequential Processes
   ITU, 1996, MESS SEQ CHARTS REC
   Jacobson Ivar., 1999, AW OBJ TECHNOL S
   Kavantzas N., 2004, WEB SERVICES CHOREOG
   Ladkin P. B., 1995, Formal Aspects of Computing, V7, P473, DOI 10.1007/BF01211629
   MALLYA AU, 2005, DEV AGENT COMM, P37
   Malone, 2003, ORG BUSINESS KNOWLED
   OWL, 2004, WEB ONT LANG
   Plasil F, 2002, IEEE T SOFTWARE ENG, V28, P1056, DOI 10.1109/TSE.2002.1049404
   *ROSETTANET, 1998, HOM PAG
   *SET, 2003, SEC EL T SET SPEC
   Singh M. P., 1999, Artificial Intelligence and Law, V7, P97, DOI 10.1023/A:1008319631231
   Singh MP, 2004, ACM SIGPLAN NOTICES, V39, P73, DOI 10.1145/1052883.1052893
   Solanki Monika., 2004, P INT WORLD WIDE WEB, P544
   Uchitel S, 2004, ACM T SOFTW ENG METH, V13, P37, DOI 10.1145/1005561.1005563
   Uchitel S, 2003, IEEE T SOFTWARE ENG, V29, P99, DOI 10.1109/TSE.2003.1178048
   Venkatraman M., 1999, Autonomous Agents and Multi-Agent Systems, V2, P217, DOI 10.1023/A:1010056221226
   Vitharana P, 2004, IEEE T SYST MAN CY C, V34, P460, DOI 10.1109/TSMCC.2004.829258
   Whittle J., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, P314, DOI 10.1109/ICSE.2000.870422
   Zambonelli F, 2003, ACM T SOFTW ENG METH, V12, P317, DOI 10.1145/958961.958963
   2002, P 1 INT SEM WEB C IS
NR 33
TC 71
Z9 81
U1 0
U2 11
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD DEC
PY 2005
VL 31
IS 12
BP 1015
EP 1027
DI 10.1109/TSE.2005.140
PG 13
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 995RU
UT WOS:000234122300003
DA 2024-07-18
ER

PT J
AU Baumstark, LB
   Wills, LM
AF Baumstark, LB
   Wills, LM
TI Retargeting sequential image-processing programs for data parallel
   execution
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article; Proceedings Paper
CT 10th Working Conference on Reverse Engineering (WCRE 2003)
CY NOV 13-16, 2003
CL VICTORIA, CANADA
SP Reengn Forum, IEEE Comp Soc, Tech Council Sofware Engn, Univ Victoria, Univ Alberta
DE Reengineering; SIMD processors; data-level parallelization; explicitly
   parallel program representation; program recognition
ID ARCHITECTURE; TECHNOLOGY; SOFTWARE; DESIGN
AB New compact, low-power implementation technologies for processors and imaging arrays can enable a new generation of portable video products. However, software compatibility with large bodies of existing applications written in C prevents more efficient, higher performance data parallel architectures from being used in these embedded products. If this software could be automatically retargeted explicitly for data parallel execution, product designers could incorporate these architectures into embedded products. The key challenge is exposing the parallelism that is inherent in these applications but that is obscured by artifacts imposed by sequential programming languages. This paper presents a recognition-based approach for automatically extracting a data parallel program model from sequential image processing code and retargeting it to data parallel execution mechanisms. The explicitly parallel model presented, called multidimensional data flow ( MDDF), captures a model of how operations on data regions ( e. g., rows, columns, and tiled blocks) are composed and interact. To extract an MDDF model, a partial recognition technique is used that focuses on identifying array access patterns in loops, transforming only those program elements that hinder parallelization, while leaving the core algorithmic computations intact. The paper presents results of retargeting a set of production programs to a representative data parallel processor array to demonstrate the capacity to extract parallelism using this technique. The retargeted applications yield a potential execution throughput limited only by the number of processing elements, exceeding thousands of instructions per cycle in massively parallel implementations.
C1 State Univ W Georgia, Dept Comp Sci, Carrollton, GA 30118 USA.
   Georgia Inst Technol, Sch Elect & Comp Engn, Atlanta, GA 30332 USA.
C3 University System of Georgia; University of West Georgia; University
   System of Georgia; Georgia Institute of Technology
RP State Univ W Georgia, Dept Comp Sci, Carrollton, GA 30118 USA.
EM lewisb@westga.edu; Linda.wills@ece.gatech.edu
CR ALLEN F, 1988, J PARALLEL DISTR COM, V5, P617, DOI 10.1016/0743-7315(88)90015-9
   Allen R., 1986, Proceedings of the 1986 International Conference on Parallel Processing (Cat. No.86CH2355-6), P164
   ALLEN R, 1987, ACM T PROGR LANG SYS, V9, P491, DOI 10.1145/29873.29875
   [Anonymous], P COMPCON 95 TECHN I
   [Anonymous], INT TECHN ROADM SEM
   [Anonymous], P COMPC SAN FRANC CA
   BANERJEE U, 1993, P IEEE, V81, P211, DOI 10.1109/5.214548
   BARNES GH, 1968, IEEE T COMPUT, VC 17, P746, DOI 10.1109/TC.1968.229158
   Baumstark L, 2003, 10TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P24, DOI 10.1109/WCRE.2003.1287234
   BAXENDALE A, 1999, CURR OPIN CPNS INVES, V1, P86
   Bhattacharyya SS, 1999, J VLSI SIG PROCESS S, V21, P151, DOI 10.1023/A:1008052406396
   Bik AJC, 2002, INT J PARALLEL PROG, V30, P65, DOI 10.1023/A:1014230429447
   BIK AJC, 1999, 199921 LEID U LEID I
   BLUME B, 1994, P 7 WORKSH LANG COMP
   BOUKNIGHT WJ, 1972, PR INST ELECTR ELECT, V60, P369, DOI 10.1109/PROC.1972.8647
   BURGER D, 1997, 1342 TR U WISC MAD C
   Callahan D., 1988, Proceedings. Supercomputing '88 (IEEE Cat. No.88CH2617-9), P98, DOI 10.1109/SUPERC.1988.44642
   Cat HH, 1996, PROCEEDINGS OF THE THIRD INTERNATIONAL CONFERENCE ON MASSIVELY PARALLEL PROCESSING USING OPTICAL INTERCONNECTIONS, P44, DOI 10.1109/MPPOI.1996.559035
   Chamberlain BL, 2000, IEEE T SOFTWARE ENG, V26, P197, DOI 10.1109/32.842947
   Cheong G., 1997, P 2 SUIF COMP WORKSH
   COCKSHOTT P, 2001, VECTOR PASCAL
   Colaitis MJ, 1996, P IEEE, V84, P1019, DOI 10.1109/5.503301
   DALE D, 1999, P INT C PAR DISTR PR, P1243
   Davies J., 1986, Proceedings of the 1986 International Conference on Parallel Processing (Cat. No.86CH2355-6), P833
   Devillard N, 2001, ASTR SOC P, V238, P525
   Di Martino B, 1999, J SYST ARCHITECT, V45, P427, DOI 10.1016/S1383-7621(98)00016-2
   Di Martino B, 2000, IEEE CONCURR, V8, P37, DOI 10.1109/4434.824311
   DiMartino B, 1996, FOURTH WORKSHOP ON PROGRAM COMPREHENSION, PROCEEDINGS, P164, DOI 10.1109/WPC.1996.501131
   FERRANTE J, 1987, ACM T PROGR LANG SYS, V9, P319, DOI 10.1145/24039.24041
   FOSTER IT, 1995, J PARALLEL DISTR COM, V26, P24, DOI 10.1006/jpdc.1995.1044
   FRANCHETTI F, 2002, P INT PAR DISTR PROC
   Gentile A, 2004, J PARALLEL DISTR COM, V64, P1318, DOI 10.1016/j.jpdc.2004.06.013
   Gentile A, 2004, IEEE T COMPUT, V53, P960, DOI 10.1109/TC.2004.48
   GU J, 1995, P 1995 ACM IEEE C SU
   Huson C., 1986, Proceedings of the 1986 International Conference on Parallel Processing (Cat. No.86CH2355-6), P827
   Kessler C. W., 1996, Scientific Programming, V5, P251
   KIM W, 1993, P HOT CHIPS 5 C MAR
   KLEIHORST RP, 2001, P IEEE INT S CIRC SY, V5, P215
   KUCK DJ, 1980, P COMPSAC 80, P709
   KYO S, 2002, P IAPR WORKSH MACH V, P632
   LEE EA, 2001, M0111 UCBERL DEP EL
   Lee RB, 1996, IEEE MICRO, V16, P51, DOI 10.1109/40.526925
   Lee SL, 1996, STRUCT ENG MECH, V4, P9, DOI 10.12989/sem.1996.4.1.009
   Loveman D. B., 1993, IEEE Parallel & Distributed Technology: Systems & Applications, V1, P25, DOI 10.1109/88.219857
   Macke T., 1986, Proceedings of the 1986 International Conference on Parallel Processing (Cat. No.86CH2355-6), P171
   Murthy PK, 2002, IEEE T SIGNAL PROCES, V50, P2064, DOI 10.1109/TSP.2002.800830
   Nguyen H., 1999, ICS 99, P11
   Nyland LS, 2000, IEEE T SOFTWARE ENG, V26, P293, DOI 10.1109/32.844491
   Oberman S, 1999, IEEE MICRO, V19, P37, DOI 10.1109/40.755466
   Peleg A, 1996, IEEE MICRO, V16, P42, DOI 10.1109/40.526924
   PHILLIP M, 1998, P HOTCHIPS 10 C AUG
   POLYCHRONOPOULOS C, 1989, P INT C PARALLEL PRO, V2, P39
   Raman SK, 2000, IEEE MICRO, V20, P47, DOI 10.1109/40.865866
   RICH C, 1990, IEEE SOFTWARE, V7, P82, DOI 10.1109/52.43053
   RICH C, 1990, PROGRAMMERS APPRENTI, P23
   Rinard M. C., 1992, Proceedings. Supercomputing '92. (Cat. No.92CH3216-9), P245, DOI 10.1109/SUPERC.1992.236678
   SANDER S, 2002, THESIS GEORGIA I TEC
   SMITH K, 1988, P INT C PAR PROC AUG, V2, P58
   Sreraman N, 2000, INT J PARALLEL PROG, V28, P363, DOI 10.1023/A:1007559022013
   SUBHLOK J, 1993, P 4 ACM SIGPLAN S PR, P13
   TUCKER LW, 1988, COMPUTER, V21, P26, DOI 10.1109/2.74
   *TX INSTR, 2000, SPRU400 TEX INSTR
   WATERS RC, 1979, IEEE T SOFTWARE ENG, V5, P237, DOI 10.1109/TSE.1979.234185
   Willner J, 2002, EKON SAMF TIDSKR, V55, P64
   *WORLDSCAPE INC, 2004, SINGL INSTR MULT ARR
   YAMASHITA N, 1994, IEEE J SOLID-ST CIRC, V29, P1336, DOI 10.1109/4.328633
   ZIMA H, 1991, SUPERCOMPILERS PARAL, P112
NR 67
TC 5
Z9 6
U1 0
U2 3
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD FEB
PY 2005
VL 31
IS 2
BP 116
EP 136
DI 10.1109/TSE.2005.26
PG 21
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Engineering
GA 899ZR
UT WOS:000227185100003
DA 2024-07-18
ER

PT J
AU Avritzer, A
   Weyuker, EJ
AF Avritzer, A
   Weyuker, EJ
TI The role of modeling in the performance testing of e-commerce
   applications
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE software performance testing; software testing; performance modeling;
   simulation; workload characterization
AB An e-commerce scalability case study is presented in which both traditional performance testing and performance modeling were used to help tune the application for high performance. This involved the creation of a system simulation model as well as the development of an approach for test case generation and execution. We describe our experience using a simulation model to help diagnose production system problems, and discuss ways that the effectiveness of performance testing efforts were improved by its use.
C1 Siemens Corp Res, Princeton, NJ 08540 USA.
   AT&T Labs Res, Florham Pk, NJ 07932 USA.
C3 Siemens AG; AT&T
RP Siemens Corp Res, Princeton, NJ 08540 USA.
EM alberto.avritzer@siemens.com; weyuker@research.att.com
CR Avritzer A., 1999, IEE Proceedings-Software, V146, P232, DOI 10.1049/ip-sen:19990653
   AVRITZER A, 1995, IEEE T SOFTWARE ENG, V21, P705, DOI 10.1109/32.464549
   Avritzer A, 1996, IEEE SOFTWARE, V13, P76, DOI 10.1109/52.536461
   AVRITZER A, 2004, P ACM 4 INT WORKSH S, P1
   CORTELLESSA V, 2004, P 4 INT WORKSH SOFTW, P197
   Gerla M., 1982, COMPUTER NETWORK ARC, P361
   HOHWILLER L, 2000, P IEEE 8 INT S MOD A
   KATAOKA B, 2002, WEBSPHERE APPL SERVE, P828
   Larzelere AR, 1998, IEEE COMPUT SCI ENG, V5, P27, DOI 10.1109/99.660290
   LAVENBERG SS, 1983, COMPUTER PERFORMANCE
   MacKay D.J.C., 2003, Information theory, inference, and learning algorithms
   Menascé DA, 2004, INT CONF QUANT EVAL, P186, DOI 10.1145/974044.974075
   Nadeau T.D., 2003, MPLS network management: MIBs, tools, and techniques
   Snedecor GW, 1983, Statistical Methods, V6th
   VEKKATARMAN S, 1998, P IEEE 11 INT C VLSI
NR 15
TC 26
Z9 33
U1 0
U2 3
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD DEC
PY 2004
VL 30
IS 12
BP 1072
EP 1083
DI 10.1109/TSE.2004.107
PG 12
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 881RI
UT WOS:000225886200015
DA 2024-07-18
ER

PT J
AU Briand, LC
   Di Penta, M
   Labiche, Y
AF Briand, LC
   Di Penta, M
   Labiche, Y
TI Assessing and improving state-based class testing: A series of
   experiments
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE state-based testing; testing experimentation; UML statecharts; category
   partition
ID MUTATION; DESIGN
AB This paper describes an empirical investigation of the cost effectiveness of well-known state-based testing techniques for classes or clusters of classes that exhibit a state-dependent behavior. This is practically relevant as many object-oriented methodologies recommend modeling such components with statecharts which can then be used as a basis for testing. Our results, based on a series of three experiments, show that in most cases state-based techniques are not likely to be sufficient by themselves to catch most of the faults present in the code. Though useful, they need to be complemented with black-box, functional testing. We focus here on a particular technique, Category Partition, as this is the most commonly used and referenced black-box, functional testing technique. Two different oracle strategies have been applied for checking the success of test cases. One is a very precise oracle checking the concrete state of objects whereas the other one is based on the notion of state invariant (abstract states). Results show that there is a significant difference between them, both in terms of fault detection and cost. This is therefore an important choice to make that should be driven by the characteristics of the component to be tested, such as its criticality, complexity, and test budget.
C1 Carleton Univ, Software Qual Engn Lab, Dept Syst & Comp Engn, Ottawa, ON K1S 5B6, Canada.
   Univ Sannio, Res Ctr Software Technol, Dept Engn, I-82100 Benevento, Italy.
C3 Carleton University; University of Sannio
RP Carleton Univ, Software Qual Engn Lab, Dept Syst & Comp Engn, 1125 Colonel By Dr, Ottawa, ON K1S 5B6, Canada.
EM briand@sce.carleton.ca; dipenta@unisannio.it; labiche@sce.carleton.ca
RI Di Penta, Massimiliano/AAF-9656-2021
OI Labiche, Yvan/0000-0001-8880-4836; Di Penta,
   Massimiliano/0000-0002-0340-9747
CR Alexander RT, 2000, 11TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P15, DOI 10.1109/ISSRE.2000.885857
   [Anonymous], 1999, Testing Object-Oriented Systems: Models, Patterns, and Tools
   [Anonymous], 1990, Software testing techniques {
   [Anonymous], 1979, Tech. Rep.GIT-ICS-79/08
   [Anonymous], P ICSE
   Antoniol G, 2002, 13TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P269, DOI 10.1109/ISSRE.2002.1173268
   Ball T, 2000, SOFTW TEST VERIF REL, V10, P149, DOI 10.1002/1099-1689(200009)10:3<149::AID-STVR206>3.0.CO;2-T
   Bogdanov K, 2001, SOFTW TEST VERIF REL, V11, P39, DOI 10.1002/stvr.217
   Booch Grady, 1999, UNIFIED MODELING LAN, DOI DOI 10.1007/3-540-40011-7_10
   Briand L., 2004, SCE0403 CARL U
   Briand LC, 2004, PROC INT CONF SOFTW, P86, DOI 10.1109/ICSE.2004.1317431
   BRIAND LC, 2004, SCE0402 CARL U
   Bruegge B., 2000, Object-Oriented Software Engineering Conquering Complex and Changing Systems
   BUDD TA, 1982, ACTA INFORM, V18, P31, DOI 10.1007/BF00625279
   CHOW TS, 1978, IEEE T SOFTWARE ENG, V4, P178, DOI 10.1109/TSE.1978.231496
   Delamaro ME, 2001, IEEE T SOFTWARE ENG, V27, P228, DOI 10.1109/32.910859
   DEMILLO RA, 1978, COMPUTER, V11, P34, DOI 10.1109/C-M.1978.218136
   Devore J.L., 1999, PROBABILITY STAT ENG, V5th
   Fenton N. E., 1998, Software metrics: a rigorous and practical approach
   Frankl PG, 1997, J SYST SOFTWARE, V38, P235, DOI 10.1016/S0164-1212(96)00154-9
   FRANKL PG, 1993, IEEE T SOFTWARE ENG, V19, P774, DOI 10.1109/32.238581
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   Gomaa H., 2000, DESIGNING CONCURRENT
   Graves TL, 2001, ACM T SOFTW ENG METH, V10, P184, DOI 10.1145/367008.367020
   Hong HS, 2000, SOFTW TEST VERIF BEH, V10, P203, DOI 10.1002/1099-1689(200012)10:4<203::AID-STVR212>3.0.CO;2-2
   Juristo N., 2013, BASICS SOFTWARE ENG
   KIM S, 2000, P MUT 2000 C OCT
   KIM S, 2000, P NET OBJECT DAY OCT
   Kim S., 1999, P 12 INT C SOFTW SYS, P9
   KING KN, 1991, SOFTWARE PRACT EXPER, V21, P685, DOI 10.1002/spe.4380210704
   KUNG D, 1994, P INT COMP SOFTW APP, P222, DOI 10.1109/CMPSAC.1994.342801
   Lee D, 1996, P IEEE, V84, P1090, DOI 10.1109/5.533956
   MEYER B, 1992, COMPUTER, V25, P40, DOI 10.1109/2.161279
   Offutt A. J., 1999, Proceedings Fifth IEEE International Conference on Engineering of Complex Computer Systems (ICECCS'99) (Cat. No.PR00434), P119, DOI 10.1109/ICECCS.1999.802856
   OFFUTT AJ, 1992, ACM T SOFTW ENG METH, V1, P3
   Offutt J, 1999, LECT NOTES COMPUT SC, V1723, P416
   OSTRAND TJ, 1988, COMMUN ACM, V31, P676, DOI 10.1145/62959.62964
   Trochim W.M., 2004, RES METHODS KNOWLEDG, V2nd
   Warmer J., 1999, AW OBJ TECHNOL S
   WEYUKER E, 1994, IEEE T SOFTWARE ENG, V20, P353, DOI 10.1109/32.286420
   WEYUKER EJ, 1982, COMPUT J, V25, P465, DOI 10.1093/comjnl/25.4.465
   WEYUKER EJ, 1990, IEEE T SOFTWARE ENG, V16, P121, DOI 10.1109/32.44376
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
NR 43
TC 62
Z9 68
U1 0
U2 7
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD NOV
PY 2004
VL 30
IS 11
BP 770
EP 793
DI 10.1109/TSE.2004.79
PG 24
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 867OX
UT WOS:000224853000005
DA 2024-07-18
ER

PT J
AU Zhang, XH
   Tao, JB
   Tan, KG
   Törngren, M
   Sánchez, JMG
   Ramli, MR
   Tao, X
   Gyllenhammar, M
   Wotawa, F
   Mohan, N
   Nica, M
   Felbinger, H
AF Zhang, Xinhai
   Tao, Jianbo
   Tan, Kaige
   Torngren, Martin
   Sanchez, Jose Manuel Gaspar
   Ramli, Muhammad Rusyadi
   Tao, Xin
   Gyllenhammar, Magnus
   Wotawa, Franz
   Mohan, Naveen
   Nica, Mihai
   Felbinger, Hermann
TI Finding Critical Scenarios for Automated Driving Systems: A Systematic
   Mapping Study
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Critical scenario; automated driving; systematic mapping study
ID AUTONOMOUS VEHICLES; SAFETY; VALIDATION; GENERATION; DESIGN
AB Scenario-based approaches have been receiving a huge amount of attention in research and engineering of automated driving systems. Due to the complexity and uncertainty of the driving environment, and the complexity of the driving task itself, the number of possible driving scenarios that an Automated Driving System or Advanced Driving-Assistance System may encounter is virtually infinite. Therefore it is essential to be able to reason about the identification of scenarios and in particular critical ones that may impose unacceptable risk if not considered. Critical scenarios are particularly important to support design, verification and validation efforts, and as a basis for a safety case. In this paper, we present the results of a systematic mapping study in the context of autonomous driving. The main contributions are: (i) introducing a comprehensive taxonomy for critical scenario identification methods; (ii) giving an overview of the state-of-the-art research based on the taxonomy encompassing 86 papers between 2017 and 2020; and (iii) identifying open issues and directions for further research. The provided taxonomy comprises three main perspectives encompassing the problem definition (the why), the solution (the methods to derive scenarios), and the assessment of the established scenarios. In addition, we discuss open research issues considering the perspectives of coverage, practicability, and scenario space explosion.
C1 [Zhang, Xinhai] Sigma Technol Grp, S-11846 Stockholm, Sweden.
   [Zhang, Xinhai] Scania CV AB, S-15187 Sodertalje, Sweden.
   [Tao, Jianbo; Nica, Mihai; Felbinger, Hermann] AVL, A-8020 Graz, Austria.
   [Tan, Kaige; Torngren, Martin; Sanchez, Jose Manuel Gaspar; Ramli, Muhammad Rusyadi; Tao, Xin; Gyllenhammar, Magnus; Mohan, Naveen] KTH, Mechatron Div, S-11428 Stockholm, Sweden.
   [Tao, Xin] KTH, Integrated Transport Res Lab ITRL, SE-10044 Stockholm, Sweden.
   [Gyllenhammar, Magnus] Zenseact AB, S-41756 Gothenburg, Sweden.
   [Wotawa, Franz] Graz Univ Technol, Inst forSoftware Technol, CD Lab Qual Assurance Methodol Autonomous Safety, A-8010 Graz, Austria.
C3 Scania; Anstalt fur Verbrennungskraftmaschinen List; Royal Institute of
   Technology; Royal Institute of Technology; Graz University of Technology
RP Zhang, XH (corresponding author), Sigma Technol Grp, S-11846 Stockholm, Sweden.
EM xinhai@kth.se; Jianbo.tao@avl.com; kaiget@kth.se; martint@kth.se;
   jmgs@kth.se; ramli2@kth.se; taoxin@kth.se; gyllenha@kth.se;
   wotawa@ist.tugraz.at; naveenm@kth.se; mihai.nica@avl.com;
   Hermann.Felbinger@avl.com
RI Törngren, Martin/ADN-5708-2022; Tan, Kaige/HTN-1343-2023
OI Törngren, Martin/0000-0002-4300-885X; Tan, Kaige/0000-0003-4535-3849;
   Gyllenhammar, Magnus/0000-0001-9020-6501; Wotawa,
   Franz/0000-0002-0462-2283; Ramli, Muhammad Rusyadi/0000-0002-3022-6110;
   Tao, Xin/0000-0002-7933-039X
FU KTH Royal Institute of Technology [876038]; European Union's Horizon
   2020; Quality Assurance Methodologies for Autonomous Cyber-Physical
   Systems (QAMCAS); Austrian Federal Ministry for Digital and Economic
   Affairs; National Foundation for Research, Technology and Development;
   Christian Doppler Research Association
FX The authors of this paper have received support from a number of
   initiatives including: TECoSA -the Vinnova Competence Center for
   Trustworthy Edge Computing Systems and Applications at KTH Royal
   Institute of Technology and the ECSEL projects InSecTT (grant agreement
   No 876038 -www.insectt.eu) and ArchitectECA2030 (grant agreement No
   877539 -https://autoc3rt.automotive.oth-aw. de/). The ECSEL projects
   have received funding from the ECSEL Joint Undertaking which receives
   support from the European Union's Horizon 2020 research and innovation
   programme and Austria, Sweden, Spain, Italy, France, Portugal, Ireland,
   Finland, Slovenia, Poland, Netherlands, Turkey. Finally, support is also
   acknowledged from the CD -Laboratory for Quality Assurance Methodologies
   for Autonomous Cyber-Physical Systems (QAMCAS) ( https://qamcas.ist.
   tugraz.at/) with financial support by the Austrian Federal Ministry for
   Digital and Economic Affairs, the National Foundation for Research,
   Technology and Development and the Christian Doppler Research
   Association.
CR Abeysirigoonawardena Y, 2019, IEEE INT CONF ROBOT, P8271, DOI [10.1109/icra.2019.8793740, 10.1109/ICRA.2019.8793740]
   Abu Alhaija H, 2018, INT J COMPUT VISION, V126, P961, DOI 10.1007/s11263-018-1070-x
   Akagi Y, 2019, IEEE INT C INTELL TR, P667, DOI 10.1109/ITSC.2019.8917311
   Aleti A, 2013, IEEE T SOFTWARE ENG, V39, P658, DOI 10.1109/TSE.2012.64
   Althoff M, 2018, IEEE INT VEH SYM, P1326, DOI 10.1109/IVS.2018.8500374
   Amersbach C, 2019, TRAFFIC INJ PREV, V20, pS52, DOI 10.1080/15389588.2019.1624732
   [Anonymous], 2021, 5083 ISOAWI TS
   [Anonymous], 2018, ISO 26262
   [Anonymous], 2019, 21448 ISOPAS
   [Anonymous], 2021, ISO/SAE 21434
   [Anonymous], 1995, Scenario-based design: Envisioning work and technology in system development
   [Anonymous], 2017, P INT CONN VEH S, DOI DOI 10.4271/2017-01-1998
   ASAM, 2021, ASAM STAND HIGHL AUT
   Bach J, 2016, IEEE INT VEH SYM, P1149, DOI 10.1109/IVS.2016.7535534
   Bakker J., 2017, PROC 25 INT C ENHANC, P1
   Batsch F, 2019, IEEE INT C INTELL TR, P419, DOI 10.1109/ITSC.2019.8917119
   BEGLEROVIC H, 2017, 2017 IEEE 20 INT C I, P1, DOI DOI 10.1109/ITSC.2017.8317768
   Ben Abdessalem R, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1016, DOI 10.1145/3180155.3180160
   Bhagat P. M., 2013, INT J ENG ADV TECHNO, V3, P341
   Bithar V., 2019, P WCX SAE WORLD C EX, DOI [10.4271/2019-01-1133, DOI 10.4271/2019-01-1133]
   Bolte JA, 2019, IEEE INT VEH SYM, P438, DOI 10.1109/IVS.2019.8813817
   Brereton P, 2007, J SYST SOFTWARE, V80, P571, DOI 10.1016/j.jss.2006.07.009
   Browne CB, 2012, IEEE T COMP INTEL AI, V4, P1, DOI 10.1109/TCIAIG.2012.2186810
   Cao P., 2018, SAE TECHNICAL PAPER, DOI [10.4271/2018-01-1614, DOI 10.4271/2018-01-1614]
   Censi A, 2019, IEEE INT CONF ROBOT, P8536, DOI [10.1109/ICRA.2019.8794364, 10.1109/icra.2019.8794364]
   Chance G, 2020, 2020 IEEE INTERNATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE TESTING (AITEST), P31, DOI 10.1109/AITEST49225.2020.00012
   Chen Q., 2014, SAE Technical Paper 2014-01-0519, DOI DOI 10.4271/2014-01-0519
   Chen T., 2017, SAE TECH PAPER 2017, DOI [10.4271/2017-01-1992, DOI 10.4271/2017-01-1992]
   Choi EH, 2014, LECT NOTES COMPUT SC, V8763, P186, DOI 10.1007/978-3-662-44857-1_14
   Chou G, 2018, IEEE T COMPUT AID D, V37, P2906, DOI 10.1109/TCAD.2018.2858464
   Corso A, 2020, arXiv, DOI 10.48550/arXiv.2005.02979
   Corso A, 2019, IEEE INT C INTELL TR, P163, DOI 10.1109/ITSC.2019.8917242
   Cotta C., 2008, ADAPTIVE MULTILEVEL
   Cutrone S., 2019, P IEEE INT C SYST MA, P1995
   de Gelder E, 2017, IEEE INT VEH SYM, P589, DOI 10.1109/IVS.2017.7995782
   Dosilovic FK, 2018, 2018 41ST INTERNATIONAL CONVENTION ON INFORMATION AND COMMUNICATION TECHNOLOGY, ELECTRONICS AND MICROELECTRONICS (MIPRO), P210, DOI 10.23919/MIPRO.2018.8400040
   Dreossi T, 2019, J AUTOM REASONING, V63, P1031, DOI 10.1007/s10817-018-09509-5
   Du P., 2019, SAE Int. J. Connect. Autom. Veh., V2, P241
   Duan JL, 2022, IEEE INTEL TRANSP SY, V14, P115, DOI 10.1109/MITS.2019.2926269
   Fan CC, 2018, LECT NOTES COMPUT SC, V10981, P347, DOI 10.1007/978-3-319-96145-3_19
   Feng S, 2022, IEEE T INTELL TRANSP, V23, P1213, DOI 10.1109/TITS.2020.3023668
   Feng S, 2021, IEEE T INTELL TRANSP, V22, P1573, DOI 10.1109/TITS.2020.2972211
   Feng S, 2021, IEEE T INTELL TRANSP, V22, P5635, DOI 10.1109/TITS.2020.2988309
   Feng S, 2020, ACCIDENT ANAL PREV, V144, DOI 10.1016/j.aap.2020.105664
   Frazzoli E., 2014, MIT Technol. Rev
   Gambi A, 2019, PROCEEDINGS OF THE 28TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA '19), P318, DOI 10.1145/3293882.3330566
   Gambi A, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P257, DOI 10.1145/3338906.3338942
   Gambi A, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: COMPANION PROCEEDINGS (ICSE-COMPANION 2019), P290, DOI 10.1109/ICSE-Companion.2019.00119
   Gangopadhyay B, 2019, IEEE INT C INTELL TR, P1961, DOI 10.1109/ITSC.2019.8917103
   Giesler B., 2017, ENERG SOURCE PART B, V12, P16
   Gladisch C, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P26, DOI 10.1109/ASE.2019.00013
   Gyllenhammar M., 2020, P 10 EUROPEAN C EMBE, P1
   Hallerbach Sven, 2018, SAE International Journal of Connected and Automated Vehicles, P93, DOI 10.4271/2018-01-1066
   Hannawald L., 2013, VERKEHRSUNFALLFORSCH, V31
   Harel-Canada F, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P851, DOI 10.1145/3368089.3409754
   Hauer F, 2019, LECT NOTES COMPUT SC, V11698, P69, DOI 10.1007/978-3-030-26601-1_5
   He Y., 2019, MATH PROBLEMS ENG, P1
   Hu WH, 2020, ACCIDENT ANAL PREV, V145, DOI 10.1016/j.aap.2020.105699
   Huang L, 2018, IEEE INT VEH SYM, P49, DOI 10.1109/IVS.2018.8500600
   Huang W., 2017, P 2017 IEEE 20 INT C, P922
   Huang ZY, 2017, WINT SIMUL C PROC, P3078, DOI 10.1109/WSC.2017.8248028
   Frazier PI, 2018, Arxiv, DOI arXiv:1807.02811
   IEEE Committee VT/ITS-Intelligent Transportation Systems, 2022, P2846 IEEE COMM VT I
   International Organization for Standardization, 2021, 34503 ISODIS
   International Organization for Standardization, 2021, 34501 ISODIS
   ISO, 2021, 34502 ISODIS
   Fremont DJ, 2019, Arxiv, DOI arXiv:1809.09310
   Jenkins IR, 2018, IEEE INT C INTELL TR, P3340, DOI 10.1109/ITSC.2018.8569661
   Jha S, 2019, I C DEPEND SYS NETWO, P112, DOI 10.1109/DSN.2019.00025
   Jinwei Zhou, 2017, IFAC - Papers Online, V50, P5985, DOI 10.1016/j.ifacol.2017.08.1261
   Johnson-Roberson Matthew, 2017, 2017 IEEE International Conference on Robotics and Automation (ICRA), P746, DOI 10.1109/ICRA.2017.7989092
   Junietz P., 2019, CONTROL STRATEGIES A, P47
   Junietz P.M., 2019, THESIS TU DARMSTADT
   Junietz P, 2018, IEEE INT C INTELL TR, P60, DOI 10.1109/ITSC.2018.8569326
   Kaelbling LP, 1996, J ARTIF INTELL RES, V4, P237, DOI 10.1613/jair.301
   Kalra N, 2016, TRANSPORT RES A-POL, V94, P182, DOI 10.1016/j.tra.2016.09.010
   Kato S, 2018, ACM IEEE INT CONF CY, P287, DOI 10.1109/ICCPS.2018.00035
   Kato S, 2015, IEEE MICRO, V35, P60, DOI 10.1109/MM.2015.133
   Kerry C. F., 2017, BROOKINGS
   Khastgir S., 2017, P WCXTM 17 SAE WORLD, P1, DOI [10.4271/2017-01-1672, DOI 10.4271/2017-01-1672]
   Kim Y, 2017, IEEE INT C INTELL TR
   Kitchenham B., 2007, GUIDELINES PERFORMIN
   Klischat M, 2019, IEEE INT VEH SYM, P2352, DOI 10.1109/IVS.2019.8814230
   Klück F, 2019, 2019 IEEE 19TH INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY AND SECURITY (QRS 2019), P418, DOI 10.1109/QRS.2019.00058
   Klück F, 2019, LECT NOTES COMPUT SC, V11812, P140, DOI 10.1007/978-3-030-31280-0_9
   Klück F, 2018, IEEE INT SYMP SOFTW, P118, DOI 10.1109/ISSREW.2018.00-20
   Kochenderfe MJ, 2019, ALG OPT, V1st
   Koopman P., 2019, P 27 SAF CRIT SYST S
   Koren M., 2018, PROC IEEE INTELL VEH, P1
   Koren M, 2019, IEEE INT C INTELL TR, P4178, DOI 10.1109/ITSC.2019.8917403
   Koschi M, 2019, IEEE INT C INTELL TR, P2879, DOI [10.1109/itsc.2019.8917287, 10.1109/ITSC.2019.8917287]
   Kramer Birte, 2020, Model-Based Safety and Assessment. 7th International Symposium, IMBSA 2020. Proceedings. Lecture Notes in Computer Science (LNCS 12297), P163, DOI 10.1007/978-3-030-58920-2_11
   Kuhn DR, 2015, ADV COMPUT, V99, P1, DOI 10.1016/bs.adcom.2015.05.003
   Kuutti S, 2020, IEEE INT CONF ROBOT, P108, DOI [10.1109/icra40945.2020.9197351, 10.1109/ICRA40945.2020.9197351]
   Lakkaraju H, 2017, AAAI CONF ARTIF INTE, P2124
   LaValle SM, 2001, ALGORITHMIC AND COMPUTATIONAL ROBOTICS: NEW DIRECTIONS, P293
   Lee CW, 2020, IEEE INT VEH SYM, P1317, DOI 10.1109/IV47402.2020.9304552
   Lee R, 2015, IEEEAAIA DIGIT AVION
   Lefevre S., 2014, ROBOMECH J, V1, P1, DOI 10.1186/s40648-014-0001-z
   Leveson N. G., 2016, ENG SAFER WORLD SYST
   Li L, 2021, IEEE T INTELL TRANSP, V22, P6297, DOI 10.1109/TITS.2020.2991039
   Li L, 2019, SCI ROBOT, V4, DOI 10.1126/scirobotics.aaw4106
   Li L, 2018, ARTIF INTELL REV, V50, P441, DOI 10.1007/s10462-018-9631-5
   Li L, 2016, IEEE T INTELL VEHICL, V1, P158, DOI 10.1109/TIV.2016.2608003
   Li N, 2017, P AMER CONTR CONF, P636, DOI 10.23919/ACC.2017.7963024
   Li YH, 2020, INFORM SOFTWARE TECH, V117, DOI 10.1016/j.infsof.2019.106200
   Liu H, 2002, DATA MIN KNOWL DISC, V6, P393, DOI 10.1023/A:1016304305535
   Ma X, 2019, P WCX SAE WORLD C EX
   Mahmud SMS, 2017, IATSS RES, V41, P153, DOI 10.1016/j.iatssr.2017.02.001
   Masuda S, 2018, IET INTELL TRANSP SY, V12, P1088, DOI 10.1049/iet-its.2018.5335
   McMinn P., 2011, 2011 IEEE Fourth International Conference on Software Testing, Verification and Validation Workshops (ICSTW), P153, DOI 10.1109/ICSTW.2011.100
   Meinke K, 2012, COMM COM INF SC, V336, P200
   Menzel T, 2018, IEEE INT VEH SYM, P1821, DOI 10.1109/IVS.2018.8500406
   Mousavi SS, 2018, LECT NOTE NETW SYST, V16, P426, DOI 10.1007/978-3-319-56991-8_32
   Mullins GE, 2018, J SYST SOFTWARE, V137, P197, DOI 10.1016/j.jss.2017.10.031
   Nabhan M., 2019, 2019 IEEE INT C CONN, P1
   National Highway Traffic Safety Administration (NHTSA), 2017, 2016 FAT MOT VEH CRA
   Neurohr C, 2021, IEEE ACCESS, V9, P18016, DOI 10.1109/ACCESS.2021.3053159
   Neurohr C, 2020, IEEE INT VEH SYM, P121, DOI [10.1109/iv47402.2020.9304823, 10.1109/IV47402.2020.9304823]
   Nie CH, 2011, ACM COMPUT SURV, V43, DOI 10.1145/1883612.1883618
   Nitsche P, 2017, ACCIDENT ANAL PREV, V107, P137, DOI 10.1016/j.aap.2017.07.011
   O'Kelly M, 2018, ADV NEUR IN, V31
   On-Road Automated Driving (ORAD) Committee, 2021, J3016 ORAD SAE
   Pan ZQ, 2019, IEEE ACCESS, V7, P36322, DOI 10.1109/ACCESS.2019.2905015
   Pei KX, 2017, PROCEEDINGS OF THE TWENTY-SIXTH ACM SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES (SOSP '17), P1, DOI 10.1145/3132747.3132785
   Ponn T., 2019, P ESV INT TECHNICAL, P10
   Ponn T, 2019, PROCEEDINGS OF THE 5TH INTERNATIONAL CONFERENCE ON VEHICLE TECHNOLOGY AND INTELLIGENT TRANSPORT SYSTEMS (VEHITS 2019), P333, DOI 10.5220/0007678603330342
   Qi Y., 2019, P WCX SAE WORLD C EX, DOI [10.4271/2019-01-0139, DOI 10.4271/2019-01-0139]
   Qin X, 2021, Arxiv, DOI arXiv:1910.13645
   Reiss R.-D., 2012, Approximate Distributions of Order Statistics: With Applications to Nonparametric Statistics
   Reiterer F, 2019, IEEE INT VEH SYM, P2119, DOI 10.1109/IVS.2019.8813893
   Riedmaier S, 2020, IEEE ACCESS, V8, P87456, DOI 10.1109/ACCESS.2020.2993730
   Roesener C, 2016, 2016 IEEE 19TH INTERNATIONAL CONFERENCE ON INTELLIGENT TRANSPORTATION SYSTEMS (ITSC), P1360, DOI 10.1109/ITSC.2016.7795734
   Sargent RWH, 2000, J COMPUT APPL MATH, V124, P361, DOI 10.1016/S0377-0427(00)00418-0
   Shalev-Shwartz S, 2018, Arxiv, DOI arXiv:1708.06374
   Shetty A, 2021, TRANSPORT RES C-EMER, V128, DOI 10.1016/j.trc.2021.103133
   So JJ, 2019, KSCE J CIV ENG, V23, P2702, DOI 10.1007/s12205-019-1287-4
   Stark L, 2019, 2019 IEEE INTERNATIONAL CONFERENCE OF VEHICULAR ELECTRONICS AND SAFETY (ICVES 19)
   Stark L, 2019, TRAFFIC INJ PREV, V20, pS126, DOI 10.1080/15389588.2019.1605167
   Stellet JE, 2019, IEEE INT VEH SYM, P45, DOI 10.1109/IVS.2019.8813894
   Stumper D, 2018, IEEE INT C INTELL TR, P3378, DOI 10.1109/ITSC.2018.8569505
   Sui B, 2019, ACCIDENT ANAL PREV, V132, DOI 10.1016/j.aap.2019.07.018
   Sutton RS, 2018, ADAPT COMPUT MACH LE, P1
   Tao JB, 2019, IEEE ICST WORKSHOP, P234, DOI 10.1109/ICSTW.2019.00058
   The British Standards Institution, 2020, Operational Design Domain (ODD) taxonomy for an automated driving system (ADS)-Specification
   Tian YC, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P303, DOI 10.1145/3180155.3180220
   Torngren M., 2021, HIPEAC VIS, DOI [10.5281/zenodo.4710500, DOI 10.5281/ZENODO.4710500]
   Törngren M, 2018, IEEE INT C INTELL TR, P1721, DOI 10.1109/ITSC.2018.8569945
   Tuncali CE, 2020, IEEE T INTELL VEHICL, V5, P265, DOI 10.1109/TIV.2019.2955903
   Tuncali CE, 2019, IEEE INT C INTELL TR, P661, DOI 10.1109/ITSC.2019.8917375
   Tuncali CE, 2018, IEEE INT VEH SYM, P1555
   Tuncali CE, 2017, IEEE INT CON AUTO SC, P1059, DOI 10.1109/COASE.2017.8256245
   Ulbrich S, 2015, IEEE INT C INTELL TR, P982, DOI 10.1109/ITSC.2015.164
   Underwriters Laboratories Northbrook USA, 2020, 4600 ANSIUL
   Wagner S., 2019, SAE Int. J. Connected Automated Vehicles, V2, P263
   Wagner S, 2018, IEEE INT VEH SYM, P1521, DOI 10.1109/IVS.2018.8500624
   Wang JJ, 2018, IEEE INT VEH SYM, P1543, DOI 10.1109/IVS.2018.8500669
   Wang L., 2017, 26th International Technical Conference on the Enhanced Safety of Vehicles, P1
   Wang X., 2021, ASME LETT DYN SYS CO, V1
   Weber H, 2019, TRAFFIC INJ PREV, V20, pS65, DOI 10.1080/15389588.2019.1630827
   WING JM, 1990, COMPUTER, V23, P8, DOI 10.1109/2.58215
   Winner H, 2019, LECT N MOBIL, P185, DOI 10.1007/978-3-319-94896-6_16
   Xia Q, 2018, INT J AUTO TECH-KOR, V19, P751, DOI 10.1007/s12239-018-0072-6
   Xiao JK, 2015, MATH PROBL ENG, V2015, DOI 10.1155/2015/647234
   Xie F., 2018, SAE TECH PAPER 2018, DOI [DOI 10.4271/2018-01-1633, 10.4271/2018-01-1633]
   Xu JX, 2019, IEEE INT C INT ROBOT, P5049, DOI [10.1109/IROS40897.2019.8968102, 10.1109/iros40897.2019.8968102]
   Yu HD, 2018, ASIA S PACIF DES AUT, P9, DOI [10.1109/ASPDAC.2018.8297275, 10.1109/TEST.2018.8624868]
   Yue B., 2020, COMPEND PL GENOME, V8, p123 398
   Zendel O, 2015, IEEE I CONF COMP VIS, P2066, DOI 10.1109/ICCV.2015.239
   Zhang C, 2018, IEEE INT VEH SYM, P320, DOI 10.1109/IVS.2018.8500622
   Zhang MS, 2018, IEEE INT CONF AUTOM, P132, DOI 10.1145/3238147.3238187
   Zhang SA, 2018, IEEE INT C INTELL TR, P3935, DOI 10.1109/ITSC.2018.8569800
   Zhang X., 2021, KTH
   Zhao D., 2015, PROC DYN SYST CONTRO
   Zhao D, 2017, IEEE T INTELL TRANSP, V18, P595, DOI 10.1109/TITS.2016.2582208
   Zhou JW, 2018, P AMER CONTR CONF, P4790, DOI 10.23919/ACC.2018.8431291
NR 176
TC 32
Z9 34
U1 19
U2 38
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAR 1
PY 2023
VL 49
IS 3
BP 991
EP 1026
DI 10.1109/TSE.2022.3170122
PG 36
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA A1QF2
UT WOS:000952938700004
OA Green Published
DA 2024-07-18
ER

PT J
AU Ebbers, F
AF Ebbers, Frank
TI A Large-Scale Analysis of IoT Firmware Version Distribution in the Wild
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Internet of Things; IoT; embedded systems; firmware; version; patch;
   update; up-to-dateness; fingerprinting
ID CYBER SECURITY; INTERNET; DEVICES; PRIVACY; THREATS; PATCH
AB This paper examines the up-to-dateness of installed firmware versions of Internet of Things devices accessible via public Internet. It takes a novel approach to identify versions based on the source code of their web interfaces. It analyzes data sets of 1.06m devices collected using the IoT search engine Censys and then maps the results against the latest version each manufacturer offers. A fully scalable and adaptive approach is developed by applying the SEMMA data mining process. This approach relies on three data artifacts: raw data from Censys, a mapping table with firmware versions, and a keyword search list. The results confirm the heterogeneity of connected IoT devices and show that only 2.45 percent of the IoT devices "in the wild " run the latest available firmware. Installed versions are 19.2 months old on average. This real-world evidence suggests that the updating processes and methods used by engineers so far are not sufficient to keep IoT devices up-to-date. This paper identifies and quantifies influencing factors and captures the global and diverse distribution of IoT devices. It finds manufacturer and device type influence the up-to-dateness of firmware, whereas the country in which the device is deployed is less significant.
C1 [Ebbers, Frank] Fraunhofer Inst Syst & Innovat Res ISI, D-76139 Karlsruhe, Germany.
C3 Fraunhofer Gesellschaft
RP Ebbers, F (corresponding author), Fraunhofer Inst Syst & Innovat Res ISI, D-76139 Karlsruhe, Germany.
EM frank.ebbers@isi.fraunhofer.de
FU SPARTA- European Union's Horizon 2020 Research and Innovation Programme
   [830892]
FX This work was supported by the SPARTA project which has received funding
   from the European Union's Horizon 2020 Research and Innovation Programme
   under Grant Agreement No 830892.
CR A. P. I. WhoisXML, LIST IP ADDR COUNTR
   A10 Networks, STAT DDOS WEAP
   Acar G, 2018, PROCEEDINGS OF THE 2018 WORKSHOP ON IOT SECURITY AND PRIVACY (IOT S&P '18), P29, DOI 10.1145/3229565.3229568
   AimPoint Group, 2020, CYB HYG REP LESS LEA
   Anand P, 2020, IEEE ACCESS, V8, P168825, DOI 10.1109/ACCESS.2020.3022842
   Antonakakis M, 2017, PROCEEDINGS OF THE 26TH USENIX SECURITY SYMPOSIUM (USENIX SECURITY '17), P1093
   Arora A, 2010, INFORM SYST RES, V21, P115, DOI 10.1287/isre.1080.0226
   Avast, PC TRENDS REP
   Baresi L, 2017, IEEE T SOFTWARE ENG, V43, P340, DOI 10.1109/TSE.2016.2592913
   Canonical, 2017, TAK CHARG IOTS SEC V
   Capgemini, SECURING INTERNET TH
   Celik ZB, 2019, ACM COMPUT SURV, V52, DOI 10.1145/3333501
   census, About us
   Chattopadhyay T, 2019, WEB CONFERENCE 2019: PROCEEDINGS OF THE WORLD WIDE WEB CONFERENCE (WWW 2019), P196, DOI 10.1145/3308558.3313692
   Chen Charlie C., 2008, Information Management & Computer Security, V16, P360, DOI 10.1108/09685220810908787
   Chen Y, 2016, MIS QUART, V40, P205, DOI 10.25300/MISQ/2016/40.1.09
   Cheng SM, 2017, IEEE COMMUN MAG, V55, P29, DOI 10.1109/MCOM.2017.1600993
   Cui M., 2013, P NDSS
   DAVIS FD, 1989, MANAGE SCI, V35, P982, DOI 10.1287/mnsc.35.8.982
   Dissanayake N, 2022, INFORM SOFTWARE TECH, V144, DOI 10.1016/j.infsof.2021.106771
   European Parliament, DIR EU 2019 770
   Fahmideh M., 2021, IEEE T MICROW THEORY, P1, DOI DOI 10.1109/TSE.2021.3070692
   Fawaz K, 2019, COMPUTER, V52, P40, DOI 10.1109/MC.2018.2888765
   Feng X, 2018, PROCEEDINGS OF THE 27TH USENIX SECURITY SYMPOSIUM, P327
   Forescout Research Labs, US
   Forget Alain, 2016, S USABLE PRIVACY SEC, P97
   Fournier-Viger Philippe, 2013, Advanced Data Mining and Applications. 9th International Conference, ADMA 2013. Proceedings: LNCS 8346, P109, DOI 10.1007/978-3-642-53914-5_10
   GitHub, 2020, OCT REP 2020
   Gratian M, 2018, COMPUT SECUR, V73, P345, DOI 10.1016/j.cose.2017.11.015
   Guo H, 2020, IEEE ACM T NETWORK, V28, P2323, DOI 10.1109/TNET.2020.3009425
   He DJ, 2021, IEEE NETWORK, V35, P202, DOI 10.1109/MNET.011.2000450
   Huang DY, 2020, PROC ACM INTERACT MO, V4, DOI 10.1145/3397333
   IDG Research Services, 2019, STUD INT THINGS
   IEEE, SOFTW ENG BOD KNOWL
   IEFT, SOFTW UPD INT THINGS
   ITU, 2018, GLOB CYB IND
   Jones KR, 2020, CCS '20: PROCEEDINGS OF THE 2020 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P551, DOI 10.1145/3372297.3423346
   Knapp H., 2018, Intermediate statistics using SPSS
   Kolias C, 2017, COMPUTER, V50, P80, DOI 10.1109/MC.2017.201
   Kumar D, 2019, PROCEEDINGS OF THE 28TH USENIX SECURITY SYMPOSIUM, P1169
   Liu P., 2021, IFIZZ DEEP STATE EFF
   Liu Simon, 2009, IT Professional, V11, P49, DOI 10.1109/MITP.2009.38
   Lo NW, 2020, ADV INTELL SYST COMP, V1050, P187, DOI 10.1007/978-3-030-30440-9_18
   Makhdoom I, 2019, IEEE COMMUN SURV TUT, V21, P1636, DOI 10.1109/COMST.2018.2874978
   Mangino A, 2020, ACM TRANS MANAG INF, V11, DOI 10.1145/3394504
   Marrapese P., 2020, ABUSING P2P HACK 3 M
   Matherly J., 2018, COMPLETE GUIDE SHODA
   Meidan Y., 2017, P S APPL COMP, P506, DOI [10.1145/3019612.3019878, DOI 10.1145/3019612.3019878]
   Morgner P, 2020, P IEEE S SECUR PRIV, P429, DOI 10.1109/SP40000.2020.00021
   Mugarza I, 2019, IEEE ACCESS, V7, P42269, DOI 10.1109/ACCESS.2019.2905925
   Nappa A, 2015, P IEEE S SECUR PRIV, P692, DOI 10.1109/SP.2015.48
   Neshenko N, 2019, IEEE COMMUN SURV TUT, V21, P2702, DOI 10.1109/COMST.2019.2910750
   Ortiz J, 2019, PROCEEDINGS OF THE 2019 INTERNATIONAL CONFERENCE ON INTERNET OF THINGS DESIGN AND IMPLEMENTATION (IOTDI '19), P106, DOI 10.1145/3302505.3310073
   Perdisci R, 2020, 2020 5TH IEEE EUROPEAN SYMPOSIUM ON SECURITY AND PRIVACY (EUROS&P 2020), P474, DOI 10.1109/EuroSP48549.2020.00037
   Pfister P., 2016, PATCH INT THINGS IOT
   Pour MS, 2019, DIGIT INVEST, V28, pS40, DOI 10.1016/j.diin.2019.01.014
   Privitera D., 2018, PROC ACM SIGSAC C CO
   Ransbotham S, 2016, INFORM SYST RES, V27, P834, DOI 10.1287/isre.2016.0683
   Ray S, 2017, IEEE SPECTRUM, V54, P30
   Rodriguez Elvira, 2021, Superspreaders: Quantifying the Role of IoT Manufacturers in Device Infections.
   S. A. S. Institute, INTR SEMMA
   ServiceNow, 2018, COSTS CONS GAPS VULN
   Shahzad M, 2020, IEEE T DEPEND SECURE, V17, P730, DOI 10.1109/TDSC.2019.2893950
   Shim JP, 2019, 25TH AMERICAS CONFERENCE ON INFORMATION SYSTEMS (AMCIS 2019)
   Shim JP, 2020, COMMUN ASSOC INF SYS, V46, P511, DOI 10.17705/1CAIS.04621
   Shodan, About us
   Singer Z., 2019, INTERNET THINGS EFFE
   Sivanathan A, 2019, IEEE T MOBILE COMPUT, V18, P1745, DOI 10.1109/TMC.2018.2866249
   Smith KJ, 2021, INT J INFORM MANAGE, V56, DOI 10.1016/j.ijinfomgt.2020.102123
   StatCounter, SOFTW VERS SHAR
   Stolikj M, 2013, IEEE T CONSUM ELECTR, V59, P435, DOI 10.1109/TCE.2013.6531128
   Tollefsen R, 2021, 21ST IEEE/ACM INTERNATIONAL SYMPOSIUM ON CLUSTER, CLOUD AND INTERNET COMPUTING (CCGRID 2021), P684, DOI 10.1109/CCGrid51090.2021.00082
   Torabi S, 2018, I C DEPEND SYS NETWO, P562, DOI 10.1109/DSN.2018.00064
   Vaniea K, 2016, 34TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, CHI 2016, P3215, DOI 10.1145/2858036.2858303
   Vitale F, 2017, PROCEEDINGS OF THE 2017 ACM SIGCHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS (CHI'17), P4242, DOI 10.1145/3025453.3025509
   Wang Xu, 2019, PROC IEEE 20 INT S W, P1
   Weissbach M, 2016, 2016 IEEE 3RD WORLD FORUM ON INTERNET OF THINGS (WF-IOT), P171, DOI 10.1109/WF-IoT.2016.7845450
   WhatWeb, US
   Yu R, 2021, PROC IEEE 2 INT C BI, P596
   Yu Tianlong., 2015, P 14 ACM WORKSHOP HO, P5, DOI DOI 10.1145/2834050.2834095
   Zandberg K, 2019, IEEE ACCESS, V7, P71907, DOI 10.1109/ACCESS.2019.2919760
   Zhao ZL, 2021, PROC INT CONF SOFTW, P1111, DOI 10.1109/ICSE43902.2021.00103
NR 82
TC 2
Z9 2
U1 1
U2 5
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD FEB 1
PY 2023
VL 49
IS 2
BP 816
EP 830
DI 10.1109/TSE.2022.3163969
PG 15
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 9F0FH
UT WOS:000937151900019
OA Green Submitted, hybrid
DA 2024-07-18
ER

PT J
AU Ayala, C
   Turhan, B
   Franch, X
   Juristo, N
AF Ayala, Claudia
   Turhan, Burak
   Franch, Xavier
   Juristo, Natalia
TI Use and Misuse of the Term "Experiment" in Mining Software Repositories
   Research
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Software; Software engineering; Data mining; Systematics; Resource
   management; Tools; Terminology; Empirical software engineering;
   controlled experiment; mining software repositories; research
   methodology
ID GUIDELINES; DESIGN; TOOLS
AB The significant momentum and importance of Mining Software Repositories (MSR) in Software Engineering (SE) has fostered new opportunities and challenges for extensive empirical research. However, MSR researchers seem to struggle to characterize the empirical methods they use into the existing empirical SE body of knowledge. This is especially the case of MSR experiments. To provide evidence on the special characteristics of MSR experiments and their differences with experiments traditionally acknowledged in SE so far, we elicited the hallmarks that differentiate an experiment from other types of empirical studies and characterized the hallmarks and types of experiments in MSR. We analyzed MSR literature obtained from a small-scale systematic mapping study to assess the use of the term experiment in MSR. We found that 19% of the papers claiming to be an experiment are indeed not an experiment at all but also observational studies, so they use the term in a misleading way. From the remaining 81% of the papers, only one of them refers to a genuine controlled experiment while the others stand for experiments with limited control. MSR researchers tend to overlook such limitations, compromising the interpretation of the results of their studies. We provide recommendations and insights to support the improvement of MSR experiments.
C1 [Ayala, Claudia; Franch, Xavier] Univ Politecn Cataluna, BarcelonaTECH, Barcelona 08034, Spain.
   [Turhan, Burak] Univ Oulu, Oulu 90570, Finland.
   [Turhan, Burak] Monash Univ, Clayton, Vic 3800, Australia.
   [Juristo, Natalia] Univ Politecn Madrid, Boadilla Del Monte 28660, Spain.
C3 Universitat Politecnica de Catalunya; University of Oulu; Monash
   University; Universidad Politecnica de Madrid
RP Ayala, C (corresponding author), Univ Politecn Cataluna, BarcelonaTECH, Barcelona 08034, Spain.
EM cayala@essi.upc.edu; burak.turhan@oulu.fi; franch@essi.upc.edu;
   natalia@fi.upm.es
RI Turhan, Burak/G-7400-2011; Franch, Xavier/KAM-2369-2024
OI Turhan, Burak/0000-0003-1511-2163; Franch, Xavier/0000-0001-9733-8830
FU Spanish project: MCI [PID2020117191RB-I00/AEI/10.13039/501100011033]
FX This work was partially supported by the Spanish project: MCI
   PID2020117191RB-I00/AEI/10.13039/501100011033.
CR Albright L., 2000, Review of General Psychology, V4, P337, DOI [10.1037/1089-2680.4.4.337, DOI 10.1037//1089-2680.4.4.337]
   Alpaydin E., 2015, INTRO MACHINE LEARNI, P475
   Arcuri A, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1, DOI 10.1145/1985793.1985795
   Baltes S, 2021, Arxiv, DOI arXiv:2002.07764
   Basili VR, 2007, LECT NOTES COMPUT SC, V4336, P33
   Bird C, 2009, 2009 6TH IEEE INTERNATIONAL WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES, P1, DOI 10.1109/MSR.2009.5069475
   Brereton P, 2007, J SYST SOFTWARE, V80, P571, DOI 10.1016/j.jss.2006.07.009
   Budgen D., 2008, P PPIG 2008, P195, DOI DOI 10.1007/978-3-642-02152-7_36
   Campbell DT., 1963, EXPT QUASIEXPERIMENT
   Claude B., 2018, INTRO STUDY EXPT MED
   Corrin WJ, 1998, ADV EDUC PR, V7, P35
   Cosentino V, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P137, DOI [10.1109/MSR.2016.023, 10.1145/2901739.2901776]
   deF, 2016, P 31 ANN ACM S APPL, P1472, DOI DOI 10.1145/2851613.2851786
   Demeyer S, 2013, IEEE WORK CONF MIN S, P353, DOI 10.1109/MSR.2013.6624049
   Drummond C, 2018, J EXP THEOR ARTIF IN, V30, P1, DOI 10.1080/0952813X.2017.1413140
   Felderer M., 2020, CONT EMPIRICAL METHO
   Franzese M., 2019, Correlation Analysis
   Gerber A. S., 2013, OXFORD HDB POLITICAL
   Godfrey MW, 2009, IEEE SOFTWARE, V26, P67, DOI 10.1109/MS.2009.10
   Grimes DA, 2002, LANCET, V359, P145, DOI 10.1016/S0140-6736(02)07373-7
   Hacking I., 1983, REPRESENTING INTERVE, DOI [https://doi.org/10.1017/CBO9780511814563, DOI 10.1017/CBO9780511814563]
   Halkidi M., 2011, INTELL DATA ANAL
   Han J, 2012, MOR KAUF D, P1
   Hassan AE, 2008, 2008 FRONTIERS OF SOFTWARE MAINTENANCE, P48, DOI 10.1109/FOSM.2008.4659248
   Hautojrvi P., 1979, Experimentation in software engineering, V1ST, DOI [10.1007/978-3-642-81316-0, 10.1007/978-3-642-29044-2., DOI 10.1007/978-3-642-29044-2]
   Hemmati H, 2013, IEEE WORK CONF MIN S, P343, DOI 10.1109/MSR.2013.6624048
   Hill J., 2004, APPL BAYESIAN MODELI
   Howison J., 2004, "International Workshop on Mining Software Repositories (MSR 2004)" W17S Workshop - 26th International Conference on Software Engineering, P7, DOI 10.1049/ic:20040467
   Jedlitschka A., 2008, Guide to advanced empirical software engineering, P201, DOI DOI 10.1007/978-1-84800-044-5_8
   Jedlitschka A, 2014, EMPIR SOFTW ENG, V19, P1921, DOI 10.1007/s10664-013-9268-6
   Jung W, 2012, IEICE T INF SYST, VE95D, P1384, DOI 10.1587/transinf.E95.D.1384
   Juzgado Natalia Juristo, 2001, Basics of software engineering experimentation
   Kagdi H, 2007, J SOFTW MAINT EVOL-R, V19, P77, DOI 10.1002/smr.344
   Kalliamvakou E, 2016, EMPIR SOFTW ENG, V21, P2035, DOI 10.1007/s10664-015-9393-5
   Kampenes VB, 2009, INFORM SOFTWARE TECH, V51, P71, DOI 10.1016/j.infsof.2008.04.006
   Kitchenham B. A., 2007, EBSE200701 DURH U
   Kitchenham BA, 2002, IEEE T SOFTWARE ENG, V28, P721, DOI 10.1109/TSE.2002.1027796
   Ko AJ, 2015, EMPIR SOFTW ENG, V20, P110, DOI 10.1007/s10664-013-9279-3
   Kroes P, 2016, SCI ENG ETHICS, V22, P633, DOI 10.1007/s11948-015-9634-4
   Langley P., 1988, Machine Learning, V3, P5, DOI 10.1023/A:1022623814640
   Levine G., 1993, EXPT METHODS PSICHOL
   Madeyski L, 2017, J INTELL FUZZY SYST, V32, P1509, DOI 10.3233/JIFS-169146
   Menzies T, 2019, INFORM SOFTWARE TECH, V112, P35, DOI 10.1016/j.infsof.2019.04.005
   Millar R., 2015, ENCY SCI ED, P418
   Molléri JS, 2020, INFORM SOFTWARE TECH, V119, DOI 10.1016/j.infsof.2019.106240
   Montgomery D., 2013, DESIGN ANAL EXPT
   Mukaka MM, 2012, MALAWI MED J, V24, P69
   Nagappan M, 2013, 2013 9 JOINT M EUR S, P466, DOI [DOI 10.1145/2491411.2491415, 10.1145/2491411.2491415]
   Neto FGD, 2019, J SYST SOFTWARE, V156, P246, DOI 10.1016/j.jss.2019.07.002
   Petersen K, 2015, INFORM SOFTWARE TECH, V64, P1, DOI 10.1016/j.infsof.2015.03.007
   Phillips Carl V, 2004, Epidemiol Perspect Innov, V1, P3, DOI 10.1186/1742-5573-1-3
   Posnett D., 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P362, DOI 10.1109/ASE.2011.6100074
   Ralph Paul, 2020, ACM SIGSOFT SOFTWARE, V45, P17, DOI [DOI 10.1145/3385678.3385681, 10.1145/3385678.3385681]
   Röhrig B, 2009, DTSCH ARZTEBL INT, V106, P262, DOI 10.3238/arztebl.2009.0262
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Schiaffonati V, 2016, PHILOSOPHIES, V1, P87, DOI 10.3390/philosophies1010087
   Sekhon JS, 2012, AM POLIT SCI REV, V106, P35, DOI 10.1017/S0003055411000542
   Shadish W. R., 2002, EXPT QUASI EXPT DESI
   Shadish WR, 1996, J CONSULT CLIN PSYCH, V64, P1290, DOI 10.1037/0022-006X.64.6.1290
   Shepperd M. J., 2019, ARXIV
   Sjoberg DIK, 2005, IEEE T SOFTWARE ENG, V31, P733, DOI 10.1109/TSE.2005.97
   Storey MA, 2020, EMPIR SOFTW ENG, V25, P4097, DOI 10.1007/s10664-020-09858-z
   Suresh Kp, 2011, J Hum Reprod Sci, V4, P8, DOI 10.4103/0974-1208.82352
   Tan L, 2019, EMPIR SOFTW ENG, V24, P1458, DOI 10.1007/s10664-019-09724-7
   Thad Dunning, 2012, NATURAL EXPT SOCIAL
   The association of Faculties of Medicine of Canada, VIRT TXB PUBL HLTH C
   Thiese MS, 2014, BIOCHEM MEDICA, V24, P199, DOI 10.11613/BM.2014.022
   Torchiano M, 2017, IEEE-ACM INT WKSP CO, P33, DOI 10.1109/CESI.2017.5
   von Elm E, 2008, J CLIN EPIDEMIOL, V61, P344, DOI 10.2471/BLT.07.045120
   Wang Y, 2015, INT SYMP EMP SOFTWAR, P58
   West SG, 2008, AM J PUBLIC HEALTH, V98, P1359, DOI 10.2105/AJPH.2007.124446
   Witten IH, 2011, MOR KAUF D, P1
   Wohlin C, 2015, EMPIR SOFTW ENG, V20, P1427, DOI 10.1007/s10664-014-9319-7
   Xie T, 2009, COMPUTER, V42, P55, DOI 10.1109/MC.2009.256
NR 74
TC 8
Z9 7
U1 1
U2 6
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD NOV 1
PY 2022
VL 48
IS 11
BP 4229
EP 4248
DI 10.1109/TSE.2021.3113558
PG 20
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 6C4JD
UT WOS:000881981800001
OA Green Submitted, Green Published, Green Accepted
DA 2024-07-18
ER

PT J
AU Zhan, X
   Liu, TM
   Liu, YP
   Liu, Y
   Li, L
   Wang, HY
   Luo, XP
AF Zhan, Xian
   Liu, Tianming
   Liu, Yepang
   Liu, Yang
   Li, Li
   Wang, Haoyu
   Luo, Xiapu
TI A Systematic Assessment on Android Third-Party Library Detection Tools
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Tools; Codes; Libraries; Feature extraction; Resilience; Malware;
   Computer science; Third-party library; android; library detection;
   empirical study; tool comparisons
AB Third-party libraries (TPLs) have become a significant part of the Android ecosystem. Developers can employ various TPLs to facilitate their app development. Unfortunately, the popularity of TPLs also brings new security issues. For example, TPLs may carry malicious or vulnerable code, which can infect popular apps to pose threats to mobile users. Furthermore, TPL detection is essential for downstream tasks, such as vulnerabilities and malware detection. Thus, various tools have been developed to identify TPLs. However, no existing work has studied these TPL detection tools in detail, and different tools focus on different applications and techniques with performance differences. A comprehensive understanding of these tools will help us make better use of them. To this end, we conduct a comprehensive empirical study to fill the gap by evaluating and comparing all publicly available TPL detection tools based on six criteria: accuracy of TPL construction, effectiveness, efficiency, accuracy of version identification, resiliency to code obfuscation, and ease of use. Besides, we enhance these open-source tools by fixing their limitations, to improve their detection ability. Finally, we build an extensible framework that integrates all existing available TPL detection tools, providing an online service for the research community. We release the evaluation dataset and enhanced tools. According to our study, we also present the essential findings and discuss promising implications to the community; e.g., 1) Most existing TPL detection techniques more or less depend on package structure to construct in-app TPL candidates. However, using package structure as the module decoupling feature is error-prone. We hence suggest future researchers using the class dependency to substitute package structure. 2) Extracted features include richer semantic information (e.g., class dependencies) can achieve better resiliency to code obfuscation. 3) Existing tools usually have a low recall; that is because previous tools ignore some features of Android apps and TPLs, such as the compilation mechanism, the new format of TPLs, TPL dependency. Most existing tools cannot effectively find partial import TPLs, obfuscated TPLs, which directly limit their capability. 4) Existing tools are complementary to each other; we can build a better tool via combining the advantages of each tool. We believe our work provides a clear picture of existing TPL detection techniques and also gives a road-map for future research.
C1 [Zhan, Xian; Luo, Xiapu] Hong Kong Polytech Univ, Dept Comp, Hong Kong, Peoples R China.
   [Liu, Tianming; Li, Li] Monash Univ, Clayton, Vic 3800, Australia.
   [Liu, Yepang] Southern Univ Sci & Technol, Dept Comp Sci & Engn, Shenzhen 518055, Guangdong, Peoples R China.
   [Liu, Yang] Nanyang Technol Univ, Sch Comp Sci & Engn, Singapore 639798, Singapore.
   [Wang, Haoyu] Beijing Univ Posts & Telecommun, Sch Comp Sci, Beijing 100876, Peoples R China.
C3 Hong Kong Polytechnic University; Monash University; Southern University
   of Science & Technology; Nanyang Technological University; Beijing
   University of Posts & Telecommunications
RP Luo, XP (corresponding author), Hong Kong Polytech Univ, Dept Comp, Hong Kong, Peoples R China.
EM csxzhan@comp.polyu.edu.hk; tianming.liu@monash.edu;
   liuyp1@sustech.edu.cn; yangliu@ntu.edu.sg; li.li@monash.edu;
   haoyuwang@bupt.edu.cn; csxluo@comp.polyu.edu.hk
RI chen, minghui/KFR-8832-2024; Li, Chun/KBC-9591-2024; li,
   fangyu/KCY-0521-2024; Liu, Yang/D-2306-2013; Yu, Chongxiu/KDM-7354-2024;
   Li, Li/AAR-3316-2020; Liu, Yepang/G-6183-2018
OI li, fangyu/0009-0009-8303-9157; Liu, Yang/0000-0001-7300-9215; Yu,
   Chongxiu/0000-0002-8221-6221; Liu, Yepang/0000-0001-8147-8126; Li,
   Li/0000-0003-2990-1614; Liu, Tianming/0000-0002-5216-933X; zhan,
   xian/0000-0001-9814-5977
FU National Research Foundation, Singapore, through its the AI Singapore
   Programme [AISG2-RP-2020-019]; National Research Foundation, Prime
   Ministers Office, Singapore [NRF2018NCR-NCR005-0001]; NRF
   Investigatorship [NRFI06-2020-0022-0001]; National Research Foundation
   through its National Satellite of Excellence in Trustworthy Software
   Systems (NSOE-TSS) Project under the National Cybersecurity RD (NCR)
   [NRF2018NCR-NSOE003-0001]; Singapore National Research Foundation under
   NCR Award [NRF2018NCRNSOE004-0001]; Australian Research Council (ARC)
   [DE200100016, DP200100020]; Hong Kong RGC Projects [PolyU15222317,
   PolyU15223918]; NSFC [61802164]; Guandong Basic and Applied Basic
   Research Fundation [2021A1515011562]; National Natural Science
   Foundation of China [62072046]
FX This work was supported in part by the National Research Foundation,
   Singapore, through its the AI Singapore Programme under Grant
   AISG2-RP-2020-019, in part by the National Research Foundation, Prime
   Ministers Office, Singapore, through its National Cybersecurity R&D
   Program under Award NRF2018NCR-NCR005-0001, in part by the NRF
   Investigatorship under Grant NRFI06-2020-0022-0001, in part by the
   National Research Foundation through its National Satellite of
   Excellence in Trustworthy Software Systems (NSOE-TSS) Project under the
   National Cybersecurity R&D (NCR) Grant Award NRF2018NCR-NSOE003-0001, in
   part by the Singapore National Research Foundation under NCR Award
   NRF2018NCRNSOE004-0001, in part by the Australian Research Council (ARC)
   through a Discovery Early Career Researcher Award (DECRA) Project under
   Grant DE200100016 and a Discovery Project under Grant DP200100020, in
   part by the Hong Kong RGC Projects under Grants PolyU15222317 and
   PolyU15223918, in part by the NSFC under Grant 61802164, in part by the
   Guandong Basic and Applied Basic Research Fundation under Grant
   2021A1515011562, and in part by the National Natural Science Foundation
   of China Grant 62072046.
CR 2021, 2021, APKTOOL
   Allecijfers, 2019, About us
   [Anonymous], 2019, LIB SCRAPER
   [Anonymous], 2014, OKHTTP V 2 0 0
   [Anonymous], 2013, SDHASH
   [Anonymous], 2018, ANDROIDDESIGN SUPPOR
   [Anonymous], 2014, OKIO
   [Anonymous], 2021, Code obfuscation
   [Anonymous], 2016, LIBRADAR
   [Anonymous], 2019, APP FUTURE
   [Anonymous], 2016, JACCARD INDEX
   [Anonymous], 2021, SVM
   [Anonymous], 2019, LIBSCOUT LIB PROFILE
   [Anonymous], 2021, DEX ENCRYPTION
   [Anonymous], 2020, JACKSON DATABIND
   [Anonymous], 2021, PACKAGE FLATTENING
   [Anonymous], 2021, TOP TIER VENUES SOFT
   [Anonymous], 2021, CONTROL FLOW RANDOMI
   [Anonymous], 2007, FINDING ALL ELEMENTA
   [Anonymous], 2019, BENCHMARK DATA
   [Anonymous], 2020, LIBDETECT
   [Anonymous], 2017, OSSPOLICE
   [Anonymous], 2017, JAVA PACKAGAING TECH
   [Anonymous], 2019, DEX2JAR
   [Anonymous], 2020, ANDROID APP BUNDLE
   [Anonymous], 2007, BIP
   [Anonymous], 2019, PROGUARD
   [Anonymous], 2021, DEAD CODE REMOVAL
   [Anonymous], 2019, DASHO
   [Anonymous], 2021, TOP TIER VENUES SECU
   [Anonymous], 2014, P 30 ANN COMP SEC AP
   [Anonymous], 2018, ANDROID DESIGN SUPPO
   [Anonymous], 2017, ANDROID DESIGN SUPPO
   [Anonymous], 2017, LIBD
   [Anonymous], 2020, F1 SCOR
   [Anonymous], 2019, GOOGLE MVN
   [Anonymous], 2019, ABOUT US
   [Anonymous], 2012, P 2 ACM C DATA APPL, DOI DOI 10.1145/2133601.2133640
   [Anonymous], 2020, QUESTIONNAIRE USER S
   [Anonymous], 2021, STRING ENCRYPTION
   [Anonymous], 2018, GOOGLE GUAVA
   [Anonymous], 2021, RENAMING
   [Anonymous], 2016, ANDROGUARD
   [Anonymous], 2020, LIBID UPDATED CODE
   [Anonymous], 2020, National vulnerability database
   [Anonymous], 2021, Soot
   Appbrain, 2021, US
   ART, 2013, US
   Backes M, 2016, CCS'16: PROCEEDINGS OF THE 2016 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P356, DOI 10.1145/2976749.2978333
   Baset SA, 2017, PROC IEEE ACM INT C, P250, DOI 10.1109/ICSE-C.2017.79
   Baykara M., 2018, 2018 6 INT S DIG FOR, P1, DOI [10.1109/ISDFS.2018.8355388, DOI 10.1109/ISDFS.2018.8355388]
   BitBucket, 2019, US
   Chen K, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P175, DOI 10.1145/2568225.2568286
   Chen K, 2015, PROCEEDINGS OF THE 24TH USENIX SECURITY SYMPOSIUM, P659
   Choudhary SR, 2015, IEEE INT CONF AUTOM, P429, DOI 10.1109/ASE.2015.89
   Cordella LP, 2004, IEEE T PATTERN ANAL, V26, P1367, DOI 10.1109/TPAMI.2004.75
   Dong SK, 2018, L N INST COMP SCI SO, V254, P172, DOI 10.1007/978-3-030-01701-9_10
   Duan R, 2017, CCS'17: PROCEEDINGS OF THE 2017 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P2169, DOI 10.1145/3133956.3134048
   F droid, 2019, About Us
   Fan LL, 2018, IEEE INT CONF AUTOM, P486, DOI 10.1145/3238147.3238170
   Fan LL, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P408, DOI 10.1145/3180155.3180222
   github, 2019, US
   Gurobi, 2020, About us
   Han HM, 2018, WIRELESS PERS COMMUN, V103, P491, DOI 10.1007/s11277-018-5456-4
   Hanna Steve, 2013, Detection of Intrusions and Malware, and Vulnerability Assessment. 9th International Conference, DIMVA 2012. Revised Selected Papers, P62, DOI 10.1007/978-3-642-37300-8_4
   Hemel A., 2011, P 8 WORK C MIN SOFTW, P63
   Jcenter, 2019, US
   Kitchenham B., 2007, Guidelines for performing systematic literature reviews in software engineering
   Kong PF, 2019, IEEE T RELIAB, V68, P45, DOI 10.1109/TR.2018.2865733
   kotlin, 2020, US
   Li L, 2021, IEEE T SOFTWARE ENG, V47, P676, DOI 10.1109/TSE.2019.2901679
   Li L, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P403, DOI 10.1109/SANER.2016.52
   Li MH, 2020, IEEE T SOFTWARE ENG, V46, P981, DOI 10.1109/TSE.2018.2872958
   Li MH, 2017, PROC INT CONF SOFTW, P335, DOI 10.1109/ICSE.2017.38
   Lin J., 2014, Modeling {users'} mobile app privacy preferences: restoring usability in a sea of permission settings, P199
   Liu B., 2015, P ANN INT C MOB SYST, P89
   Ma Z, 2016, 2016 IEEE/ACM 38TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING COMPANION (ICSE-C), P653, DOI 10.1145/2889160.2889178
   Maven, 2019, US
   Narayanan A, 2014, 2014 IEEE NINTH INTERNATIONAL CONFERENCE ON INTELLIGENT SENSORS, SENSOR NETWORKS AND INFORMATION PROCESSING (IEEE ISSNIP 2014)
   Soh C, 2016, ASIA PAC SOFWR ENG, P41, DOI [10.1109/APSEC.2016.017, 10.1109/APSEC.2016.40]
   Su T, 2022, IEEE T SOFTWARE ENG, V48, P1115, DOI 10.1109/TSE.2020.3013438
   Sun X, 2014, IFIP ADV INF COMM TE, V428, P142
   Tang W, 2020, PROCEEDINGS OF THE 2020 IEEE 27TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER '20), P104, DOI [10.1109/SANER48275.2020.9054845, 10.1109/saner48275.2020.9054845]
   Wang H., 2015, PROC ISSTA, P71, DOI [10.1145/2771783.2771795, DOI 10.1145/2771783.2771795]
   Wang HY, 2017, PROC IEEE ACM INT C, P515, DOI 10.1109/ICSE-C.2017.161
   Wang Y, 2018, 2018 IEEE/ACM 5TH INTERNATIONAL CONFERENCE ON MOBILE SOFTWARE ENGINEERING AND SYSTEMS (MOBILESOFT), P13, DOI 10.1145/3197231.3197248
   WOHLIN Claes, 2014, P 18 INT C EVALUATIO, DOI [10.1145/2601248.2601268.10, 10.1145/2601248.2601268]
   Xu J, 2022, IEEE T MOBILE COMPUT, V21, P167, DOI 10.1109/TMC.2020.3003336
   Zeng X, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P987, DOI 10.1145/2950290.2983958
   Zhan X, 2020, IEEE INT CONF AUTOM, P919, DOI 10.1145/3324884.3416582
   Zhan X, 2019, 2019 IEEE 26TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER), P321, DOI [10.1109/SANER.2019.8667975, 10.1109/saner.2019.8667975]
   Zhang F., 2014, P 2014 ACM C SEC PRI, P25, DOI DOI 10.1145/2627393.2627395
   Zhou W., 2013, Proceedings of the third ACM conference on Data and application security and privacy, P185
   Zicheng Zhang, 2020, WiSec '20: Proceedings of the 13th ACM Conference on Security and Privacy in Wireless and Mobile Networks, P144, DOI 10.1145/3395351.3399346
NR 94
TC 4
Z9 5
U1 2
U2 7
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD NOV 1
PY 2022
VL 48
IS 11
BP 4249
EP 4273
DI 10.1109/TSE.2021.3115506
PG 25
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 6C4JD
UT WOS:000881981800002
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Trinkenreich, B
   Guizani, M
   Wiese, IS
   Conte, T
   Gerosa, M
   Sarma, A
   Steinmacher, I
AF Trinkenreich, Bianca
   Guizani, Mariam
   Wiese, Igor Scaliante
   Conte, Tayana
   Gerosa, Marco
   Sarma, Anita
   Steinmacher, Igor
TI Pots of Gold at the End of the Rainbow: What is Success for Open Source
   Contributors?
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Interviews; Engineering profession; Data models; Analytical models; Open
   source software; Gold; Data analysis; Open source software; success;
   career; qualitative analysis
ID OPEN-SOURCE SOFTWARE; CAREER SUCCESS; DEVELOPERS; MOTIVATIONS; WOMEN;
   PARTICIPATION; PERFORMANCE; PROJECTS
AB Success in Open Source Software (OSS) is often perceived as an exclusively code-centric endeavor. This perception can exclude a variety of individuals with a diverse set of skills and backgrounds, in turn helping exacerbate the current diversity & inclusion imbalance in OSS. Because one's perspective of success can affect one's personal, professional, and life choices, to support a diverse class of individuals we must first understand how OSS contributors understand success. Thus far, research has used a uni-dimensional, code-centric lens to define success. In this paper, we challenge this status quo to reveal OSS contributors' multifaceted definitions of success. We do so through interviews with 27 OSS contributors whose communities recognize them as successful, and a follow-up open survey with 193 OSS contributors. Our study provides nuanced definitions of success perceptions in OSS, which might help devise strategies to attract and retain a diverse set of contributors, helping them attain their unique "pot of gold at the end of the rainbow".
C1 [Trinkenreich, Bianca; Gerosa, Marco; Steinmacher, Igor] No Arizona Univ, Flagstaff, AZ 86011 USA.
   [Guizani, Mariam; Sarma, Anita] Oregon State Univ, Sch Elect Engn & Comp Sci, Corvallis, OR 97331 USA.
   [Wiese, Igor Scaliante; Steinmacher, Igor] Univ Tecnol Fed Parana UTFPR, Dept Comp Sci, BR-86812460 Apucarana, PR, Brazil.
   [Conte, Tayana] Fed Univ Amazonas UFAM, Inst Comp IComp, BR-69067005 Manaus, Amazonas, Brazil.
C3 Northern Arizona University; Oregon State University; Universidade
   Tecnologica Federal do Parana; Universidade Federal de Amazonas
RP Trinkenreich, B (corresponding author), No Arizona Univ, Flagstaff, AZ 86011 USA.
EM bt473@nau.edu; guizanim@oregonstate.edu; igor@utfpr.edu.br;
   tayana@icomp.ufam.edu.br; Marco.Gerosaj@nau.edu;
   anita.sarma@oregonstate.edu; igorts@utfpr.edu.br
RI Trinkenreich, Bianca/ABE-4435-2020; Guizani, Mariam/JXN-1149-2024; Igor,
   Steinmacher/B-6414-2012; Gerosa, Marco Aurelio/A-6686-2009
OI Igor, Steinmacher/0000-0002-0612-5790; Gerosa, Marco
   Aurelio/0000-0003-1399-7535; Guizani, Mariam/0000-0003-2545-2612; Sarma,
   Anita/0000-0002-1859-1692
FU NSF [1815486, 1815503, 1900903, 1901031]; CNPq [313067/2020-1]
FX The authors would like to thank our interviewees and survey participants
   for their time. This work was supported in part by NSF under Grants
   1815486, 1815503, 1900903, and 1901031 and in part by CNPq under Grant
   313067/2020-1.
CR Agrawal A., 2018, PROC 40 INT C SOFTW, V18
   Akkermans J, 2017, CAREER DEV INT, V22, P586, DOI 10.1108/CDI-08-2017-0143
   AlMarzouq M, 2015, DECIS SUPPORT SYST, V80, P27, DOI 10.1016/j.dss.2015.09.004
   [Anonymous], 2016, INT C SOFTWARE ENG K
   [Anonymous], 2006, The Internet and Higher Education, DOI [10.1016/j.iheduc.2005.11.00, DOI 10.1016/J.IHEDUC.2005.11.00, DOI 10.1016/J.IHEDUC.2005.11.001]
   [Anonymous], 2007, Basics of qualitative research: Techniques and procedures for developing grounded theory
   [Anonymous], 2005, Perspectives on free and open source software
   [Anonymous], 2011, P 19 ACM SIGSOFT S 1
   Arthur MB, 2005, J ORGAN BEHAV, V26, P177, DOI 10.1002/job.290
   Babchuk WA, 2017, ADULT EDUC QUART, V67, P71, DOI 10.1177/0741713616671930
   Barcomb A, 2020, IEEE T SOFTWARE ENG, V46, P962, DOI 10.1109/TSE.2018.2872713
   Benson GS, 2020, HUM RESOUR MANAG J, V30, P392, DOI 10.1111/1748-8583.12266
   Borges HS, 2019, COMPUTER, V52, P27, DOI 10.1109/MC.2018.2888770
   Bosu A, 2019, EMPIR SOFTW ENG, V24, P2636, DOI 10.1007/s10664-019-09708-7
   Canedo ED., 2020, P 14 ACM IEEE INT S, DOI [10.1145/3382494.3410682, DOI 10.1145/3382494.3410682]
   Cantor N., 1986, HDB MOTIVATION COGNI, P96
   Carillo K, 2017, J STRATEGIC INF SYST, V26, P322, DOI 10.1016/j.jsis.2017.03.001
   Cho YJ, 2017, EUR J TRAIN DEV, V41, P490, DOI 10.1108/EJTD-12-2016-0093
   Choi N, 2015, LIBR INFORM SCI RES, V37, P109, DOI 10.1016/j.lisr.2015.02.007
   Colazo J, 2014, DECIS SUPPORT SYST, V67, P100, DOI 10.1016/j.dss.2014.08.007
   Copenhaver Kimberly, 2017, Journal of Electronic Resources Librarianship, V29, P245, DOI 10.1080/1941126X.2017.1378543
   Di Penta Massimiliano, 2012, P ACM SIGSOFT 20 INT, P1
   Dias E, 2021, PROC INT CONF SOFTW, P982, DOI 10.1109/ICSE43902.2021.00093
   Dries N, 2008, J VOCAT BEHAV, V73, P254, DOI 10.1016/j.jvb.2008.05.005
   Ducheneaut N., 2005, Computer Supported Cooperative Work: The Journal of Collaborative Computing, V14, P323, DOI 10.1007/s10606-005-9000-1
   Dyke LS, 2006, SEX ROLES, V55, P357, DOI 10.1007/s11199-006-9091-2
   Easterbrook S., 2008, GUIDE ADV EMPIRICAL, P285, DOI [DOI 10.1007/978-1-84800-044-5_11, DOI 10.1007/978-1-84800-044-511]
   Fagerholm Fabian, 2014, P 8 ACM IEEE INT S E, DOI DOI 10.1145/2652524.2652540
   Fiesler C, 2017, CSCW'17: PROCEEDINGS OF THE 2017 ACM CONFERENCE ON COMPUTER SUPPORTED COOPERATIVE WORK AND SOCIAL COMPUTING, P1375, DOI 10.1145/2998181.2998210
   Forte A, 2013, AM BEHAV SCI, V57, P535, DOI 10.1177/0002764212469362
   Frank L.K., 1939, J SOC PHILOS, V4, P293
   Gattiker U.E., 1986, J BUS PSYCHOL, V1, P78, DOI DOI 10.1007/BF01018805
   Gerosa M, 2021, PROC INT CONF SOFTW, P1046, DOI 10.1109/ICSE43902.2021.00098
   Ghosh R.A., 2002, Free / Libre and Open Source Software: Survey and Study Deliverable D18 : FINAL REPORT Part IV: Survey of Developers
   Graziotin D, 2018, J SYST SOFTWARE, V140, P32, DOI 10.1016/j.jss.2018.02.041
   Hann I., 2004, International Conference on Information Systems, P821
   Hannah DR, 2011, J MANAGE INQUIRY, V20, P14, DOI 10.1177/1056492610375988
   Hars A, 2002, INT J ELECTRON COMM, V6, P25
   Hennequin E., 2007, Career Development International, V12, P565, DOI 10.1108/13620430710822029
   Hertel G, 2003, RES POLICY, V32, P1159, DOI 10.1016/S0048-7333(03)00047-7
   Ingram C, 2020, PROC INT CONF SOFTW, P161, DOI 10.1145/3377811.3380333
   Izquierdo D, 2019, IEEE SOFTWARE, V36, P28, DOI 10.1109/MS.2018.2874322
   Kalliamvakou E, 2019, IEEE T SOFTWARE ENG, V45, P87, DOI 10.1109/TSE.2017.2768368
   Karniol R, 1996, ANNU REV PSYCHOL, V47, P593, DOI 10.1146/annurev.psych.47.1.593
   Kimmelmann N, 2013, IT-INF TECHNOL, V55, P204, DOI 10.1515/itit.2013.1009
   Lakhani K. R., 2003, Why Hackers Do What They Do: Understanding Motivation and Effort in Free/Open Source Software Projects, DOI [10.2139/ssrn.443040, DOI 10.2139/SSRN]
   Lewin K., 1936, J NERVOUS MENTAL DIS, V84, P612
   Li PL, 2020, EMPIR SOFTW ENG, V25, P322, DOI 10.1007/s10664-019-09773-y
   Lim S, 2008, LIBR INFORM SCI RES, V30, P115, DOI 10.1016/j.lisr.2007.10.002
   Midha V, 2012, J SYST SOFTWARE, V85, P895, DOI 10.1016/j.jss.2011.11.010
   Nafus D, 2012, NEW MEDIA SOC, V14, P669, DOI 10.1177/1461444811422887
   Nowogrodzki A, 2019, NATURE, V571, P133, DOI 10.1038/d41586-019-02046-0
   Papoutsoglou M, 2020, SIMUL MODEL PRACT TH, V105, DOI 10.1016/j.simpat.2020.102157
   Picot-Clémente R, 2015, PROCEEDINGS OF THE 2015 IEEE/ACM INTERNATIONAL CONFERENCE ON ADVANCES IN SOCIAL NETWORKS ANALYSIS AND MINING (ASONAM 2015), P888, DOI 10.1145/2808797.2810063
   Porter A. M., 2019, PHYS PHDS 10 YEARS L
   Raman N, 2020, 2020 IEEE/ACM 42ND INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: NEW IDEAS AND EMERGING RESULTS (ICSE-NIER 2020), P57, DOI 10.1145/3377816.3381732
   Roberts JA, 2006, MANAGE SCI, V52, P984, DOI 10.1287/mnsc.1060.0554
   Robles G, 2019, IEEE SOFTWARE, V36, P12, DOI 10.1109/MS.2019.2933672
   Robles G, 2016, IFIP ADV INF COMM TE, V472, P163, DOI 10.1007/978-3-319-39225-7_13
   Santoro G, 2021, IEEE T ENG MANAGE, V68, P378, DOI 10.1109/TEM.2019.2907874
   Sarma A, 2016, INT CONF GLOBAL SOFT, P1, DOI 10.1109/ICGSE.2016.35
   Savickas M. L., 2005, Career development and counseling: Putting theory and research to work, P42, DOI DOI 10.4324/9781315693590-26
   Seaman CB, 1999, IEEE T SOFTWARE ENG, V25, P557, DOI 10.1109/32.799955
   Sen R, 2012, DECIS SUPPORT SYST, V52, P364, DOI 10.1016/j.dss.2011.09.003
   Silva J, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P421, DOI 10.1145/3368089.3409724
   Silva JO, 2020, J SYST SOFTWARE, V162, DOI 10.1016/j.jss.2019.110487
   Silva JO, 2017, XXXI BRAZILIAN SYMPOSIUM ON SOFTWARE ENGINEERING (SBES 2017), P224, DOI 10.1145/3131151.3131156
   Singh V, 2019, 13TH EUROPEAN CONFERENCE ON SOFTWARE ARCHITECTURE (ECSA 2019), VOL 2, P94, DOI 10.1145/3344948.334968
   Sinha Vibha Singhal, 2011, P 8 WORK C MIN SOFTW, P133
   Spaeth S, 2015, INFORM SYST RES, V26, P224, DOI 10.1287/isre.2014.0539
   Spencer D., 2009, CARD SORTING DESIGNI
   Steinmacher I, 2019, IEEE SOFTWARE, V36, P41, DOI 10.1109/MS.2018.110162131
   Steinmacher I, 2015, PROCEEDINGS OF THE 2015 ACM INTERNATIONAL CONFERENCE ON COMPUTER-SUPPORTED COOPERATIVE WORK AND SOCIAL COMPUTING (CSCW'15), P1379, DOI 10.1145/2675133.2675215
   Sturges J., 1999, BRIT J MANAGE, V10, P239, DOI [10.1111/1467-8551.00130, DOI 10.1111/1467-8551.00130]
   Subramaniam C, 2009, DECIS SUPPORT SYST, V46, P576, DOI 10.1016/j.dss.2008.10.005
   Trainer EH, 2016, ACM CONFERENCE ON COMPUTER-SUPPORTED COOPERATIVE WORK AND SOCIAL COMPUTING (CSCW 2016), P1118, DOI 10.1145/2818048.2819946
   Trainer EH, 2015, PROCEEDINGS OF THE 2015 ACM INTERNATIONAL CONFERENCE ON COMPUTER-SUPPORTED COOPERATIVE WORK AND SOCIAL COMPUTING (CSCW'15), P417, DOI 10.1145/2675133.2675172
   Trinkenreich Bianca, 2020, Proceedings of the ACM on Human-Computer Interaction, V4, DOI 10.1145/3415251
   Valk R, 2014, J GLOB MOBIL, V2, P203, DOI 10.1108/JGM-07-2013-0047
   Vasilescu B, 2015, CHI 2015: PROCEEDINGS OF THE 33RD ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, P3789, DOI 10.1145/2702123.2702549
   Visagie S, 2014, S AFR J BUS MANAG, V45, P43, DOI 10.4102/sajbm.v45i1.116
   von Krogh G, 2012, MIS QUART, V36, P649
   Wang ZD, 2020, ACM T SOFTW ENG METH, V29, DOI 10.1145/3387111
   Wohlin C, 2015, EMPIR SOFTW ENG, V20, P1427, DOI 10.1007/s10664-014-9319-7
   Wu CG, 2007, INFORM MANAGE-AMSTER, V44, P253, DOI 10.1016/j.im.2006.12.006
   Wu ZF, 2018, INT J SOFTW ENG KNOW, V28, P845, DOI 10.1142/S0218194018500250
   Zhou JY, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-021-09979-z
   Zhou MH, 2012, PROC INT CONF SOFTW, P518, DOI 10.1109/ICSE.2012.6227164
   Zlotnick F., 2017, Github open source survey 2017
NR 89
TC 5
Z9 5
U1 1
U2 2
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD OCT 1
PY 2022
VL 48
IS 10
BP 3940
EP 3953
DI 10.1109/TSE.2021.3108032
PG 14
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 5L3GA
UT WOS:000870301800012
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Gao, CY
   Zeng, JCA
   Wen, ZY
   Lo, D
   Xia, X
   King, I
   Lyu, MR
AF Gao, Cuiyun
   Zeng, Jichuan
   Wen, Zhiyuan
   Lo, David
   Xia, Xin
   King, Irwin
   Lyu, Michael R.
TI Emerging App Issue Identification via Online Joint Sentiment-Topic
   Tracing
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Magneto electrical resistivity imaging technique; Social networking
   (online); User experience; Labeling; Mobile applications; Internet;
   Adaptation models; User reviews; online topic modeling; emerging issues;
   review sentiment; word embedding
ID MODELS
AB Millions of mobile apps are available in app stores, such as Apple's App Store and Google Play. For a mobile app, it would be increasingly challenging to stand out from the enormous competitors and become prevalent among users. Good user experience and well-designed functionalities are the keys to a successful app. To achieve this, popular apps usually schedule their updates frequently. If we can capture the critical app issues faced by users in a timely and accurate manner, developers can make timely updates, and good user experience can be ensured. There exist prior studies on analyzing reviews for detecting emerging app issues. These studies are usually based on topic modeling or clustering techniques. However, the short-length characteristics and sentiment of user reviews have not been considered. In this paper, we propose a novel emerging issue detection approach named MERIT to take into consideration the two aforementioned characteristics. Specifically, we propose an Adaptive Online Biterm Sentiment-Topic (AOBST) model for jointly modeling topics and corresponding sentiments that takes into consideration app versions. Based on the AOBST model, we infer the topics negatively reflected in user reviews for one app version, and automatically interpret the meaning of the topics with most relevant phrases and sentences. Experiments on popular apps from Google Play and Apple's App Store demonstrate the effectiveness of MERIT in identifying emerging app issues, improving the state-of-the-art method by 22.3 percent in terms of F1-score. In terms of efficiency, MERIT can return results within acceptable time.
C1 [Gao, Cuiyun; Zeng, Jichuan; King, Irwin; Lyu, Michael R.] Chinese Univ Hong Kong, Dept Comp Sci & Engn, Hong Kong, Peoples R China.
   [Wen, Zhiyuan] Hong Kong Polytech Univ, Dept Comp, Kowloon, Hong Kong, Peoples R China.
   [Lo, David] Singapore Management Univ, Sch Informat Syst, Singapore 188065, Singapore.
   [Xia, Xin] Monash Univ, Fac Informat Technol, Clayton, Vic 3800, Australia.
C3 Chinese University of Hong Kong; Hong Kong Polytechnic University;
   Singapore Management University; Monash University
RP Zeng, JCA (corresponding author), Chinese Univ Hong Kong, Dept Comp Sci & Engn, Hong Kong, Peoples R China.
EM gaocuiyun@hit.edu.cn; jczeng@cse.cuhk.edu.hk; cszwen@comp.polyu.edu.hk;
   davidlo@smu.edu.sg; xin.xia@monash.edu; king@cse.cuhk.edu.hk;
   lyu@cse.cuhk.edu.hk
RI Lo, David/A-2493-2012; King, Irwin/C-9681-2015
OI Lo, David/0000-0002-4367-7201; King, Irwin/0000-0001-8106-6447
FU National Natural Science Foundation of China [62002084]; Research Grants
   Council of the Hong Kong Special Administrative Region, China [CUHK
   14210717]; National Research Foundation, Singapore under its Industry
   Alignment Fund Pre-positioning (IAF-PP) Funding Initiative
FX This work was supported in part by the National Natural Science
   Foundation of China under Grant 62002084, in part by the Research Grants
   Council of the Hong Kong Special Administrative Region, China under
   Grant CUHK 14210717, and in part by the National Research Foundation,
   Singapore under its Industry Alignment Fund Pre-positioning (IAF-PP)
   Funding Initiative. Any opinions, findings, and conclusions or
   recommendations expressed in this material are those of the author(s)
   and do not reflect the views of National Research Foundation, Singapore.
CR Ahmed A., 2010, UAI'10, P20
   Ahmed S. E., 2006, TECHNOMETRICS, V48, P573
   AlSumait L, 2008, IEEE DATA MINING, P3, DOI 10.1109/ICDM.2008.140
   [Anonymous], HUGE FACEBOOK REDESI
   [Anonymous], PEOPLE ARE REALLY HA
   [Anonymous], MOBILE MARKETERS GUI
   [Anonymous], FACEBOOK MESSENGER I
   [Anonymous], 2019, DISCUSSION FULL SCRE
   [Anonymous], GENSIM TOOL
   [Anonymous], APP STORE OPTIMIZATI
   [Anonymous], MICROSOFT ADMITS USE
   [Anonymous], 2014, STAT ANAL 12 MILLION
   [Anonymous], POKEMON GO IS SUDDEN
   [Anonymous], 2019, ENGAGING USERS APP U
   App Annie, US
   Arun R, 2010, LECT NOTES ARTIF INT, V6118, P391
   Blei DM, 2002, ADV NEUR IN, V14, P601
   Calefato F, 2018, EMPIR SOFTW ENG, V23, P1352, DOI 10.1007/s10664-017-9546-9
   Cambronero J, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P964, DOI 10.1145/3338906.3340458
   Chen N, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P767, DOI 10.1145/2568225.2568263
   Chen TH, 2016, EMPIR SOFTW ENG, V21, P1843, DOI 10.1007/s10664-015-9402-8
   Chen Y, 2013, SIGIR'13: THE PROCEEDINGS OF THE 36TH INTERNATIONAL ACM SIGIR CONFERENCE ON RESEARCH & DEVELOPMENT IN INFORMATION RETRIEVAL, P43
   CHURCH KW, 1990, 27TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, P76
   COHEN J, 1968, PSYCHOL BULL, V70, P213, DOI 10.1037/h0026256
   Das R, 2015, PROCEEDINGS OF THE 53RD ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS AND THE 7TH INTERNATIONAL JOINT CONFERENCE ON NATURAL LANGUAGE PROCESSING, VOL 1, P795
   Di Sorbo A, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P499, DOI 10.1145/2950290.2950299
   Diao Q., 2012, Proceedings of the 50th Annual Meeting of the Association for Computational Lin- guistics, P536
   Fu B, 2013, 19TH ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING (KDD'13), P1276
   Gao CY, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE (ICSE-SEIP 2019), P279, DOI 10.1109/ICSE-SEIP.2019.00040
   Gao CY, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P48, DOI 10.1145/3180155.3180218
   Gao CY, 2015, 9TH IEEE INTERNATIONAL SYMPOSIUM ON SERVICE-ORIENTED SYSTEM ENGINEERING (SOSE 2015), P284, DOI 10.1109/SOSE.2015.13
   Gao CY, 2015, 2015 IEEE 26TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING (ISSRE), P35, DOI 10.1109/ISSRE.2015.7381797
   Genc-Nayebi N, 2017, J SYST SOFTWARE, V125, P207, DOI 10.1016/j.jss.2016.11.027
   Gerlach M, 2018, SCI ADV, V4, DOI 10.1126/sciadv.aaq1360
   Grano G, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P72, DOI 10.1109/SANER.2018.8330198
   Gu XD, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P933, DOI 10.1145/3180155.3180167
   Gu XD, 2015, IEEE INT CONF AUTOM, P760, DOI 10.1109/ASE.2015.57
   Guo PJ, 2010, Proceedings of the 32nd ACM/IEEE International Conference on Software Engineering, P495
   Guzman E, 2014, INT REQUIR ENG CONF, P153, DOI 10.1109/RE.2014.6912257
   Hasan M, 2018, J INF SCI, V44, P443, DOI 10.1177/0165551517698564
   Hoffman M., 2010, P ADV NEUR INF PROC, V23:856-864
   Hofmann T, 1999, SIGIR'99: PROCEEDINGS OF 22ND INTERNATIONAL CONFERENCE ON RESEARCH AND DEVELOPMENT IN INFORMATION RETRIEVAL, P50, DOI 10.1145/312624.312649
   Hong Yan, 2014, JMIR Hum Factors, V1, pe2, DOI 10.2196/humanfactors.3787
   Hu MQ, 2004, PROCEEDING OF THE NINETEENTH NATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE AND THE SIXTEENTH CONFERENCE ON INNOVATIVE APPLICATIONS OF ARTIFICIAL INTELLIGENCE, P755
   Hu WH, 2016, PROCEEDINGS OF THE 54TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (ACL 2016), VOL 2, P380
   Huang JJ, 2017, WORLD WIDE WEB, V20, P325, DOI 10.1007/s11280-016-0390-4
   Iacob C, 2013, IEEE WORK CONF MIN S, P41, DOI 10.1109/MSR.2013.6624001
   Islam A., 2008, ACM Trans. Knowl. Discov. Data, V2, P1, DOI [10.1145/1376815.1376819, DOI 10.1145/1376815.1376819]
   Islam MR, 2017, IEEE WORK CONF MIN S, P203, DOI 10.1109/MSR.2017.9
   Jiang D., 2016, PROC 26 INT C COMPUT, P2689
   Kaleel SB, 2015, J COMPUT SCI-NETH, V6, P47, DOI 10.1016/j.jocs.2014.11.004
   Khalid H, 2015, IEEE SOFTWARE, V32, P70, DOI 10.1109/MS.2014.50
   Li C., 2012, Cikm, P155, DOI DOI 10.1145/2396761.2396785
   Li CL, 2016, SIGIR'16: PROCEEDINGS OF THE 39TH INTERNATIONAL ACM SIGIR CONFERENCE ON RESEARCH AND DEVELOPMENT IN INFORMATION RETRIEVAL, P165, DOI 10.1145/2911451.2911499
   Li JX, 2016, CONCURR COMP-PRACT E, V28, P3115, DOI 10.1002/cpe.3657
   Li S., 2016, PROC54TH ANN M ASS C
   Licorish S. A., 2017, INT C EV ASS SOFTW E, P108
   Likert R, 1932, TECHNIQUE MEASUREMEN
   Lim SL, 2013, 2013 IEEE CONGRESS ON EVOLUTIONARY COMPUTATION (CEC), P2672
   Lin B, 2019, PROC INT CONF SOFTW, P548, DOI 10.1109/ICSE.2019.00066
   Lin C., 2009, P 18 ACM C INF KNOWL, P375, DOI DOI 10.1145/1645953.1646003
   LIN JH, 1991, IEEE T INFORM THEORY, V37, P145, DOI 10.1109/18.61115
   Liu B, 2011, DATA CENTRIC SYST AP, P459, DOI 10.1007/978-3-642-19460-3_11
   Maalej W, 2015, INT REQUIR ENG CONF, P116, DOI 10.1109/RE.2015.7320414
   Man YC, 2016, PROC INT SYMP SOFTW, P138, DOI 10.1109/ISSRE.2016.27
   Marcus A, 2011, 29TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, P227
   Martin W, 2017, IEEE T SOFTWARE ENG, V43, P817, DOI 10.1109/TSE.2016.2630689
   Martin W, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P435, DOI 10.1145/2950290.2950320
   McIlroy S, 2016, EMPIR SOFTW ENG, V21, P1346, DOI 10.1007/s10664-015-9388-2
   Mei QZ, 2007, KDD-2007 PROCEEDINGS OF THE THIRTEENTH ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P490
   Mikolov T., 2013, ADV NEURAL INFORM PR, V26, P3111, DOI DOI 10.5555/2999792.2999959
   Nayebi M., 2016, P 4 INT WORKSHOP REL, P1, DOI DOI 10.1145/2993274.2993281
   Nayebi M, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P552, DOI 10.1109/SANER.2016.116
   nltk, 2019, PART OF SPEECH TAGGI
   Noei E, 2021, IEEE T SOFTWARE ENG, V47, P367, DOI 10.1109/TSE.2019.2893171
   O'Malley G, 2014, JMIR MHEALTH UHEALTH, V2, DOI 10.2196/mhealth.3262
   Palomba F, 2017, PROC INT CONF SOFTW, P106, DOI 10.1109/ICSE.2017.18
   Parikh AP., 2016, EMNLP
   Pennington J., 2014, P 2014 C EMP METH NA, P1532, DOI [DOI 10.3115/V1/D14-1162, 10.3115/v1/D14-1162]
   Vu PM, 2016, IEEE INT CONF AUTOM, P726, DOI 10.1145/2970276.2970365
   Vu PM, 2015, IEEE INT CONF AUTOM, P749, DOI 10.1109/ASE.2015.85
   Platzer Elisabeth, 2011, 22nd Central European Conference on Information and Intelligent Systems. Proceedings, P309
   Prasad NR, 2009, CMC-COMPUT MATER CON, V14, P1, DOI 10.1145/1541880.1541882
   Le Q, 2014, PR MACH LEARN RES, V32, P1188
   RangarajanSridhar V. K., 2015, P 1 WORKSH VECT SPAC, P192, DOI [DOI 10.3115/V1/W15-1526, 10.3115/v1/w15-1526]
   Rousseeuw PJ, 2011, WIRES DATA MIN KNOWL, V1, P73, DOI 10.1002/widm.2
   Srivastava A., 2017, PROC 5 INT C LEARN R
   statista, 2018, NUMBER APPS AVAILABL
   Steyvers M., 2015, Handbook of Latent Semantic Analysis, DOI [10.4324/9780203936399.ch21, DOI 10.4324/9780203936399.CH21, DOI 10.1371/JOURNAL.PONE.0073791]
   Thung F, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P420, DOI 10.1109/ICSM.2012.6405302
   Uddin G, 2017, IEEE INT CONF AUTOM, P978, DOI 10.1109/ASE.2017.8115715
   WILCOXON F, 1945, BIOMETRICS BULL, V1, P80, DOI 10.1093/jee/39.2.269
   Xie W, 2016, IEEE T KNOWL DATA EN, V28, P2216, DOI 10.1109/TKDE.2016.2556661
   Yan X., 2013, P 22 INT C WORLD WID, P1445, DOI DOI 10.1145/2488388.2488514
   Yan XH, 2015, AAAI CONF ARTIF INTE, P353
   Zhao WZ, 2015, BMC BIOINFORMATICS, V16, DOI 10.1186/1471-2105-16-S13-S8
   Zhou Y, 2020, Arxiv, DOI arXiv:1903.00894
NR 97
TC 2
Z9 2
U1 2
U2 10
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD AUG 1
PY 2022
VL 48
IS 8
BP 3025
EP 3043
DI 10.1109/TSE.2021.3076179
PG 19
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 4D1BG
UT WOS:000846878500019
OA Green Accepted, Green Submitted
DA 2024-07-18
ER

PT J
AU Sun, BC
   Gong, DW
   Tian, T
   Yao, XJ
AF Sun, Baicai
   Gong, Dunwei
   Tian, Tian
   Yao, Xiangjuan
TI Integrating an Ensemble Surrogate Model's Estimation into Test Data
   Generation
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Testing; Estimation; Data models; Optimization; Computational
   efficiency; Training; Sun; MPI program; path coverage testing;
   evolutionary optimization algorithm; ensemble surrogate model; test data
   generation
ID AUTOMATIC-GENERATION; OPTIMIZATION; ALGORITHM; PATHS; REGRESSION;
   SELECTION; PROGRAMS
AB For the path coverage testing of a Message-Passing Interface (MPI) program, test data generation based on an evolutionary optimization algorithm (EOA) has been widely known. However, during the use of the above technique, it is necessary to evaluate the fitness of each evolutionary individual by executing the program, which is generally computationally expensive. In order to reduce the computational cost, this article proposes a method of integrating an ensemble surrogate model's estimation into the process of generating test data. The proposed method first produces a number of test inputs using an EOA, and forms a training set together with their real fitness. Then, this article trains an ensemble surrogate model (ESM) based on the training set, which is employed to estimate the fitness of each individual. Finally, a small number of individuals with good estimations are selected to further execute the program, so as to have their real fitness for the subsequent evolution. This article applies the proposed method to seven benchmark MPI programs, which is compared with several state-of-the-art approaches. The experimental results show that the proposed method can generate test data with significantly low computational cost.
C1 [Sun, Baicai; Gong, Dunwei] China Univ Min & Technol, Sch Informat & Control Engn, Xuzhou 221116, Jiangsu, Peoples R China.
   [Gong, Dunwei] Qingdao Univ Sci & Technol, Sch Informat Sci & Technol, Qingdao 266061, Shandong, Peoples R China.
   [Tian, Tian] Shandong Jianzhu Univ, Sch Comp Sci & Technol, Jinan 250101, Shandong, Peoples R China.
   [Yao, Xiangjuan] China Univ Min & Technol, Sch Math, Xuzhou 221116, Jiangsu, Peoples R China.
C3 China University of Mining & Technology; Qingdao University of Science &
   Technology; Shandong Jianzhu University; China University of Mining &
   Technology
RP Gong, DW (corresponding author), China Univ Min & Technol, Sch Informat & Control Engn, Xuzhou 221116, Jiangsu, Peoples R China.
EM baicaisun@gmail.com; dwgong@vip.163.com; tian_tiantian@126.com;
   yaoxj@cumt.edu.cn
OI Gong, Dunwei/0000-0003-2838-4301; Yao, Xiangjuan/0000-0003-3207-703X;
   Sun, Baicai/0000-0001-6781-0866
FU National Key Research and Development Program of China
   [2018YFB1003802-01]; National Natural Science Foundation of China
   [61773384, 61763026, 61673404, 61573362, 61503220]
FX This article was jointly supported by National Key Research and
   Development Program of China(2018YFB1003802-01), andNationalNatural
   Science Foundation of China (61773384, 61763026, 61673404, 61573362,
   61503220).
CR Akhmetova D., 2017, PROC INT C PARALLEL, P277
   [Anonymous], 2010, Introduction to high performance computing for scientists and engineers
   [Anonymous], 1994, INTRO BOOTSTRAP
   Berkelaar M., 2004, LPSOLVE OPEN SOURCE
   Bo LL, 2019, IEEE ACCESS, V7, P26984, DOI 10.1109/ACCESS.2019.2901588
   Breiman L, 1996, MACH LEARN, V24, P123, DOI 10.1007/bf00058655
   Chang R., 2014, U.S. Patent., Patent No. [8,924,938, 8924938]
   CHEN GL, 2004, PARALLEL ALGORITHM P
   Christiansen H, 2007, LECT NOTES ARTIF INT, V4571, P742
   Dietterich TG, 2000, LECT NOTES COMPUT SC, V1857, P1, DOI 10.1007/3-540-45014-9_1
   Freund Y, 2004, J MACH LEARN RES, V4, P933, DOI 10.1162/1532443041827916
   Ghiduk AS, 2014, INFORM PROCESS LETT, V114, P304, DOI 10.1016/j.ipl.2014.01.009
   Gropp W, 1996, PARALLEL COMPUT, V22, P789, DOI 10.1016/0167-8191(96)00024-5
   Gropp William D, 1999, USING MPI PORTABLE P, V1
   Gupta N, 2018, ACM COMPUT SURV, V51, DOI 10.1145/3232520
   Igel C, 2008, J MACH LEARN RES, V9, P993
   Jannesari A, 2016, INT J PARALLEL PROG, V44, P644, DOI 10.1007/s10766-015-0363-8
   Liu B, 2014, IEEE T EVOLUT COMPUT, V18, P180, DOI 10.1109/TEVC.2013.2248012
   Lv XW, 2018, IET SOFTW, V12, P306, DOI 10.1049/iet-sen.2017.0260
   M_uller M., 2011, SLIDES PRESENTED THI
   Myers Glenford J, 2004, The art of software testing, V2
   Panichella A, 2018, IEEE T SOFTWARE ENG, V44, P122, DOI 10.1109/TSE.2017.2663435
   Quinlan JR, 1996, PROCEEDINGS OF THE THIRTEENTH NATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE AND THE EIGHTH INNOVATIVE APPLICATIONS OF ARTIFICIAL INTELLIGENCE CONFERENCE, VOLS 1 AND 2, P725
   Regis RG, 2014, IEEE T EVOLUT COMPUT, V18, P326, DOI 10.1109/TEVC.2013.2262111
   Sahoo B. K., 2016, WORLD J ENG TECHNOL, V4
   Scalabrino S, 2018, IEEE INT CONF AUTOM, P868, DOI 10.1145/3238147.3240477
   Shewry MC, 1987, Journal of Applied Statistics, V14, P165, DOI DOI 10.1080/02664768700000020
   Souza PSL, 2014, CONCURR COMP-PRACT E, V26, P21, DOI 10.1002/cpe.2937
   Souza SRS, 2008, CONCURR COMP-PRACT E, V20, P1893, DOI 10.1002/cpe.1297
   Sun BC, 2019, INFORM SOFTWARE TECH, V114, P190, DOI 10.1016/j.infsof.2019.07.002
   Sun CL, 2015, SOFT COMPUT, V19, P1461, DOI 10.1007/s00500-014-1283-z
   Sun CL, 2013, INFORM SCIENCES, V221, P355, DOI 10.1016/j.ins.2012.09.030
   Tian T, 2019, J SYST SOFTWARE, V155, P130, DOI 10.1016/j.jss.2019.04.049
   Tian T, 2016, AUTOMAT SOFTW ENG, V23, P469, DOI 10.1007/s10515-014-0173-z
   Tong H, 2019, IEEE C EVOL COMPUTAT, P1996, DOI [10.1109/cec.2019.8789910, 10.1109/CEC.2019.8789910]
   Wang HD, 2019, IEEE T EVOLUT COMPUT, V23, P203, DOI 10.1109/TEVC.2018.2834881
   Windisch A, 2007, GECCO 2007: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOL 1 AND 2, P1121
   Xiang HY, 2017, STRUCT MULTIDISCIP O, V55, P701, DOI 10.1007/s00158-016-1528-9
   Xiao AY, 2014, MATH PROBL ENG, V2014, DOI 10.1155/2014/671872
   Xu ZX, 2006, INT CONF QUAL SOFTW, P107
   Yan J, 2008, INFORM PROCESS LETT, V107, P87, DOI 10.1016/j.ipl.2008.01.007
   Yu HB, 2018, INFORM SCIENCES, V454, P59, DOI 10.1016/j.ins.2018.04.062
   Yu HB, 2018, PROC IEEE ACM INT C, P527, DOI 10.1145/3183440.3190336
   Yue H, 2015, ASIA PAC SOFWR ENG, P246, DOI 10.1109/APSEC.2015.34
   Martínez SZ, 2013, GECCO'13: PROCEEDINGS OF THE 2013 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P1405
   Zhang D, 2006, ADV MACHINE LEARNING
   Zhou R, 2006, ARTIF INTELL, V170, P385, DOI 10.1016/j.artint.2005.12.002
   Zhou Z.-H., 2012, ENSEMBLE METHODS FDN, DOI DOI 10.1201/B12207
   Zhou ZZ, 2005, IEEE C EVOL COMPUTAT, P2832
NR 49
TC 12
Z9 13
U1 0
U2 12
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD APR 1
PY 2022
VL 48
IS 4
BP 1336
EP 1350
DI 10.1109/TSE.2020.3019406
PG 15
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 0N4HC
UT WOS:000782799700013
DA 2024-07-18
ER

PT J
AU Menendez, HD
   Boreale, M
   Gorla, D
   Clark, D
AF Menendez, Hector D.
   Boreale, Michele
   Gorla, Daniele
   Clark, David
TI Output Sampling for Output Diversity in Automatic Unit Test Generation
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Unit testing; output sampling; output diversity; SMTsolver; OutGen
AB Diverse test sets are able to expose bugs that test sets generated with structural coverage techniques cannot discover. Input-diverse test set generators have been shown to be effective for this, but also have limitations: e.g., they need to be complemented with semantic information derived from the Software Under Test. We demonstrate how to drive the test set generation process with semantic information in the form of output diversity. We present the first totally automatic output sampling for output diversity unit test set generation tool, called OutGen. OutGen transforms a program into an SMT formula in bit-vector arithmetic. It then applies universal hashing in order to generate an output-based diverse set of inputs. The result offers significant diversity improvements when measured as a high output uniqueness count. It achieves this by ensuring that the test set's output probability distribution is uniform, i.e., highly diverse. The use of output sampling, as opposed to any of input sampling, CBMC, CAVM, behaviour diversity or random testing improves mutation score and bug detection by up to 4150 and 963 percent respectively on programs drawn from three different corpora: the R-project, SIR and CodeFlaws. OutGen test sets achieve an average mutation score of up to 92 percent, and 70 percent of the test sets detect the defect. Moreover, OutGen is the only automatic unit test generation tool that is able to detect bugs on the real number C functions from the R-project.
C1 [Menendez, Hector D.] Middlesex Univ London, Dept Comp Sci, London NW4 4BT, England.
   [Boreale, Michele] Univ Florence, Comp Sci Informat, Dipartimento Stat Informat Applicaz, Scuola Sci, I-50121 Florence, FI, Italy.
   [Gorla, Daniele] Univ Rome Sapienza, Dept Comp Sci, I-00100 Rome, Italy.
   [Clark, David] UCL, Dept Comp Sci, London WC1E 6BT, England.
C3 Middlesex University; University of Florence; Sapienza University Rome;
   University of London; University College London
RP Menendez, HD (corresponding author), Middlesex Univ London, Dept Comp Sci, London NW4 4BT, England.
EM h.menendez@mdx.ac.uk; michele.boreale@unifi.it; gorla@di.uniroma1.it;
   david.clark@ucl.ac.uk
RI Gorla, Daniele/E-5911-2017; Menendez, Hector/C-1883-2014
OI Gorla, Daniele/0000-0001-8859-9844; Menendez,
   Hector/0000-0002-6314-3725; Clark, David/0000-0002-7004-934X; Boreale,
   Michele/0000-0002-1972-7491
FU EPSRC [EP/P005888/1]; NVIDIA Corporation; EPSRC [EP/P005888/1] Funding
   Source: UKRI
FX This work has been supported by the InfoTestSS EP/P005888/1 research
   project from EPSRC. We gratefully acknowledge the support of NVIDIA
   Corporation with the donation of the Titan V GPU used for this research.
   Many thanks to Robert Feldt for useful discussion on how to find a
   language to explain and present the novelty in this work.
CR Almasi MM, 2017, 2017 IEEE/ACM 39TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2017), P263, DOI 10.1109/ICSE-SEIP.2017.27
   Alshahwan N., 2014, Proceedings of the 2014 International Symposium on Software Testing and Analysis, P181
   Alshahwan N, 2012, PROC INT CONF SOFTW, P1345, DOI 10.1109/ICSE.2012.6227083
   Anand S, 2013, J SYST SOFTWARE, V86, P1978, DOI 10.1016/j.jss.2013.02.061
   Androutsopoulos K, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P573, DOI 10.1145/2568225.2568314
   [Anonymous], 2016, P 25 INT S SOFTW TES, DOI DOI 10.1145/2931037.2931056
   [Anonymous], 2011, Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics), DOI [DOI 10.1007/978-3-642-22670-0_9, DOI 10.1007/978-3-642-22670-0.9]
   Arcuri A, 2014, SOFTW TEST VERIF REL, V24, P219, DOI 10.1002/stvr.1486
   Bellare M, 2000, INFORM COMPUT, V163, P510, DOI 10.1006/inco2000.2885
   Bin Noor T, 2015, 2015 IEEE 26TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING (ISSRE), P58, DOI 10.1109/ISSRE.2015.7381799
   Boreale Michele, 2014, Information Security. 17th International Conference, ISC 2014. Proceedings: LNCS 8783, P216, DOI 10.1007/978-3-319-13257-0_13
   Braun M, 2013, LECT NOTES COMPUT SC, V7791, P102, DOI 10.1007/978-3-642-37051-9_6
   Brillout Angelo, 2009, Proceedings of the 2009 9th International Conference Formal Methods in Computer-Aided Design (FMCAD), P69, DOI 10.1109/FMCAD.2009.5351141
   Chakraborty Supratik, 2015, Tools and Algorithms for the Construction and Analysis of Systems. 21st International Conference, TACAS 2015, held as part of the European Joint Conferences on Theory and Practice of Software, ETAPS 2015. Proceedings: LNCS 9035, P304, DOI 10.1007/978-3-662-46681-0_25
   Chakraborty S, 2016, AAAI CONF ARTIF INTE, P3218
   Chakraborty S, 2013, LECT NOTES COMPUT SC, V8124, P200, DOI 10.1007/978-3-642-40627-0_18
   Chan S.-O., 2014, P 25 ANN ACMSIAM S D, P1193
   Chen TY, 2010, J SYST SOFTWARE, V83, P60, DOI 10.1016/j.jss.2009.02.022
   Chistikov D, 2017, ACTA INFORM, V54, P729, DOI 10.1007/s00236-017-0297-2
   CHOULAKIAN V, 1994, CAN J STAT, V22, P125, DOI 10.2307/3315828
   Clark D, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P599, DOI 10.1109/ICSE.2015.202
   Cover T. M., 2012, ELEMENTS INFORM THEO
   Diakonikolas I., 2016, Electron. Colloquium Comput. Complex., V23, P178
   Dutra R, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P549, DOI 10.1145/3180155.3180248
   Feldt R, 2016, IEEE INT CONF SOFTW, P223, DOI 10.1109/ICST.2016.33
   Fraser G, 2013, IEEE T SOFTWARE ENG, V39, P276, DOI 10.1109/TSE.2012.14
   Fraser Gordon, 2011, PROC 19 ACM SIGSOFT, P416, DOI 10.1145/2025113.2025179
   Gao ZB, 2016, IEEE INT CONF SOFTW, P379, DOI 10.1109/ICST.2016.53
   GEHAN EA, 1965, BIOMETRIKA, V52, P203, DOI 10.1093/biomet/52.1-2.203
   Gentleman R., 2009, The r project for statistical computing
   Gomes C.P., 2007, Advances in Neural Information Processing Systems 19, P481
   Gotlieb A, 2010, J SYST SOFTWARE, V83, P2618, DOI 10.1016/j.jss.2010.08.021
   Henard C, 2016, PROC INT CONF SOFTW, P523, DOI 10.1145/2884781.2884791
   Jia Y, 2008, TACI PART 2008:TESTING: ACADEMIC AND INDUSTRIAL CONFERENCE PRACTICE AND RESEARCH TECHNIQUES, PROCEEDINGS, P94, DOI 10.1109/TAIC-PART.2008.18
   Kim J, 2017, LECT NOTES COMPUT SC, V10452, P143, DOI 10.1007/978-3-319-66299-2_12
   Kroening D., 2014, CBMC-C bounded model checker, P389, DOI DOI 10.1007/978-3-642-54862-8_26
   Marhuenda Y, 2005, STATISTICS-ABINGDON, V39, P315, DOI 10.1080/02331880500178562
   Matinnejad R, 2016, PROC INT CONF SOFTW, P595, DOI 10.1145/2884781.2884797
   Mondal D., 2015, 8th International Conference on Software Testing, Verification and Validation, ICST15, P1
   Papadakis M, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P537, DOI 10.1145/3180155.3180183
   Poulding S, 2014, GECCO'14: PROCEEDINGS OF THE 2014 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P1279, DOI 10.1145/2576768.2598339
   Rojas Jose Miguel, 2015, Search-Based Software Engineering. 7th International Symposium, SSBSE 2015. Proceedings: LNCS 9275, P93, DOI 10.1007/978-3-319-22183-0_7
   Rothermel Gregg., 2006, Software-artifact infrastructure repository
   Rubinstein R. Y., 2016, SIMULATION MONTE CAR, V10
   Scalabrino S, 2018, IEEE INT CONF AUTOM, P868, DOI 10.1145/3238147.3240477
   Shamshiri S, 2015, IEEE INT CONF AUTOM, P201, DOI 10.1109/ASE.2015.86
   Shi QK, 2016, IEEE T RELIAB, V65, P19, DOI 10.1109/TR.2015.2434953
   Smite D, 2008, 2008 3RD IEEE INTERNATIONAL CONFERENCE GLOBAL SOFTWARE ENGINEERING, PROCEEDINGS, P173, DOI 10.1109/ICGSE.2008.22
   Steele M, 2005, MODSIM 2005: INTERNATIONAL CONGRESS ON MODELLING AND SIMULATION: ADVANCES AND APPLICATIONS FOR MANAGEMENT AND DECISION MAKING, P1300
   Tan SH, 2017, PROC IEEE ACM INT C, P180, DOI 10.1109/ICSE-C.2017.76
   Tuch H, 2005, LECT NOTES ARTIF INT, V3835, P474, DOI 10.1007/11591191_33
NR 51
TC 1
Z9 1
U1 0
U2 8
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JAN 1
PY 2022
VL 48
IS 1
BP 295
EP 308
DI 10.1109/TSE.2020.2987377
PG 14
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA YG0HJ
UT WOS:000742179000017
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Manès, VJM
   Han, H
   Han, C
   Cha, SK
   Egele, M
   Schwartz, EJ
   Woo, M
AF Manes, Valentin J. M.
   Han, HyungSeok
   Han, Choongwoo
   Cha, Sang Kil
   Egele, Manuel
   Schwartz, Edward J.
   Woo, Maverick
TI The Art, Science, and Engineering of Fuzzing: A Survey
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Fuzzing; Security; Computer bugs; Terminology; Software security;
   automated software testing; fuzzing; fuzz testing
ID GENERATION
AB Among the many software testing techniques available today, fuzzing has remained highly popular due to its conceptual simplicity, its low barrier to deployment, and its vast amount of empirical evidence in discovering real-world software vulnerabilities. At a high level, fuzzing refers to a process of repeatedly running a program with generated inputs that may be syntactically or semantically malformed. While researchers and practitioners alike have invested a large and diverse effort towards improving fuzzing in recent years, this surge of work has also made it difficult to gain a comprehensive and coherent view of fuzzing. To help preserve and bring coherence to the vast literature of fuzzing, this paper presents a unified, general-purpose model of fuzzing together with a taxonomy of the current fuzzing literature. We methodically explore the design decisions at every stage of our model fuzzer by surveying the related literature and innovations in the art, science, and engineering that make modern-day fuzzers effective.
C1 [Manes, Valentin J. M.] KAIST Cyber Secur Res Ctr, Daejeon, South Korea.
   [Han, HyungSeok] Korea Adv Inst Sci & Technol, Daejeon, South Korea.
   [Cha, Sang Kil] Korea Adv Inst Sci & Technol, Comp Sci, Daejeon, South Korea.
   [Han, Choongwoo] Naver Corp, Daejeon, South Korea.
   [Egele, Manuel] Boston Univ, Boston, MA 02215 USA.
   [Schwartz, Edward J.] Carnegie Mellon Univ, Inst Software Engn, Pittsburgh, PA 15213 USA.
   [Woo, Maverick] Carnegie Mellon Univ, Pittsburgh, PA 15213 USA.
C3 Korea Advanced Institute of Science & Technology (KAIST); Korea Advanced
   Institute of Science & Technology (KAIST); Naver; Boston University;
   Software Engineering Institute; Carnegie Mellon University; Carnegie
   Mellon University
RP Cha, SK (corresponding author), Korea Adv Inst Sci & Technol, Comp Sci, Daejeon, South Korea.
EM valentin.manes@kaist.ac.kr; hyungseok.han@kaist.ac.kr;
   cwhan.tunz@navercorp.com; sangkilc@kaist.ac.kr; megele@bu.edu;
   edmcman@cmu.edu; pooh@cmu.edu
RI Schwartz, Edward/HKO-7555-2023
OI Schwartz, Edward/0000-0003-0094-4805; Cha, Sang Kil/0000-0002-6012-7228
FU Institute of Information & communications Technology Planning &
   Evaluation (IITP) - Korea government (MSIT) [2019-0-01697]; Siemens
   Corporation
FX The authors would like to thank the anonymous reviewers for their
   helpful feedback and the developers of BFF for pointing out a mistake in
   an earlier draft. This work was partly supported by (1) an Institute of
   Information & communications Technology Planning & Evaluation (IITP)
   grant funded by the Korea government (MSIT) under Grant No.2019-0-01697,
   Development of Automated Vulnerability Discovery Technologies for
   Blockchain Platform Security and (2) the Siemens Corporation.
CR A. H. H, 2014, MELK ELF FUZZ
   Abadi M, 2005, P 12 ACM C COMP COMM, DOI [10.1145/1102120.1102165, DOI 10.1145/1102120.1102165]
   Abadi M, 2009, ACM T INFORM SYST SE, V13, DOI 10.1145/1609956.1609960
   Abdelnur Humberto J., 2007, P 1 INT C PRINC SYST, P47
   Aitel D., 2001, P BLACK HAT US
   Aitel D., 2001, SHAREFUZZ
   Aizatsky M., 2016, Google Testing Blog
   Amini P., 2012, SULLEY
   Anand S, 2013, J SYST SOFTWARE, V86, P1978, DOI 10.1016/j.jss.2013.02.061
   [Anonymous], 2019, CWE 758 RELIANCE UND
   [Anonymous], 2014, FUZZING PROJECT
   [Anonymous], 2016, NEUR FUZZ
   [Anonymous], 2016, TRIF LIN SYSC FUZZ
   [Anonymous], 2016, FIDGETY AFL
   [Anonymous], 2018, Cisco secure development lifecycle
   [Anonymous], 2010, P NETW DISTR SYST SE
   [Anonymous], 2013, GOOGLE CHROMIUM SECU
   [Anonymous], 2012, ART SOFTWARE TESTING, DOI DOI 10.1002/9781119202486
   [Anonymous], 2008, Fuzzing for Software Security
   [Anonymous], 2019, MICROSOFT SECURITY D
   [Anonymous], 2019, Structure-aware fuzzing with libfuzzer
   [Anonymous], 2011, P 2011 INT S SOFTWAR
   [Anonymous], 2015, BINSPECTOR EVOLVING
   [Anonymous], 2015, LIBFUZZER
   [Anonymous], 2015, DHARMA
   Appelt Dennis, 2014, P 2014 INT S SOFTWAR, P259
   Apple Inc, TN2334 APPL INC
   Arcuri A, 2012, IEEE T SOFTWARE ENG, V38, P258, DOI 10.1109/TSE.2011.121
   Ars Technica, 2014, PWN2OWN PERF ANT FAN
   Aschermann C, 2019, 26TH ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2019), DOI 10.14722/ndss.2019.23412
   Aschermann C, 2019, 26TH ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2019), DOI 10.14722/ndss.2019.23371
   Au Kathy Wain Yee, 2012, P 2012 ACM C COMP CO, P217
   Avgerinos T, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P1083, DOI 10.1145/2568225.2568293
   Avizienis A, 2004, IEEE T DEPEND SECURE, V1, P11, DOI 10.1109/TDSC.2004.2
   Bai G., 2013, NDSS
   Banks G, 2006, LECT NOTES COMPUT SC, V4176, P343
   Bastani O, 2017, ACM SIGPLAN NOTICES, V52, P95, DOI [10.1145/3062341.3062349, 10.1145/3140587.3062349]
   Beer I., 2014, PWN4FUN SPRING 20 2
   Beizer Boris, 1995, Black-box testing: techniques for functional testing of software and systems
   Bellard F, 2005, USENIX Association Proceedings of the FREENIX/Open Source Track, P41
   Berry D., 1985, BANDIT PROBLEMS SEQU
   Böhme M, 2019, IEEE T SOFTWARE ENG, V45, P489, DOI 10.1109/TSE.2017.2785841
   Böhme M, 2018, ACM T SOFTW ENG METH, V27, DOI 10.1145/3210309
   Böhme M, 2017, CCS'17: PROCEEDINGS OF THE 2017 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P2329, DOI 10.1145/3133956.3134020
   Bounimova E, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P122, DOI 10.1109/ICSE.2013.6606558
   Boyer R. S., 1975, SIGPLAN Notices, V10, P234, DOI 10.1145/390016.808445
   Bratus S., 2008, TR2008634 DARTM COLL
   Brubaker C, 2014, P IEEE S SECUR PRIV, P114, DOI 10.1109/SP.2014.15
   Bruening D. L., 2004, Ph.D. Dissertation
   Budi A, 2011, PLDI 11: PROCEEDINGS OF THE 2011 ACM CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P447
   Caballero J, 2010, PROCEEDINGS OF THE 17TH ACM CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY (CCS'10), P413, DOI 10.1145/1866307.1866354
   Caballero J, 2007, CCS'07: PROCEEDINGS OF THE 14TH ACM CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P317
   Cadar C., 2008, Proceedings of the 8th USENIX conference on Operating systems design and implementation, OSDI'08, (USA), P209
   Cai Y, 2012, PROC INT CONF SOFTW, P606, DOI 10.1109/ICSE.2012.6227156
   Caselden D., 2013, UCBEECS201385 U CAL
   CERT, 2012, FAIL OBS ENG
   CERT, 2010, BAS FUZZ FRAM
   Cha SK, 2015, P IEEE S SECUR PRIV, P725, DOI 10.1109/SP.2015.50
   Cha SK, 2012, P IEEE S SECUR PRIV, P380, DOI 10.1109/SP.2012.31
   Chen HX, 2018, PROCEEDINGS OF THE 2018 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY (CCS'18), P2095, DOI 10.1145/3243734.3243849
   Chen K, 2007, PLAS'07: PROCEEDINGS OF THE 2007 ACM SIGPLAN WORKSHOP ON PROGRAMMING LANGUAGES AND ANALYSIS FOR SECURITY, P75, DOI 10.1145/1255329.1255344
   Chen P, 2018, P IEEE S SECUR PRIV, P711, DOI 10.1109/SP.2018.00046
   Chen TY, 2010, J SYST SOFTWARE, V83, P60, DOI 10.1016/j.jss.2009.02.022
   Chen Y, 2013, ACM SIGPLAN NOTICES, V48, P197, DOI 10.1145/2499370.2462173
   Chen YT, 2016, ACM SIGPLAN NOTICES, V51, P85, DOI [10.1145/2980983.2908095, 10.1145/2908080.2908095]
   Cheng JH, 2018, CHI 2018: EXTENDED ABSTRACTS OF THE 2018 CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, DOI 10.1145/3170427.3188467
   Chipounov V, 2011, ACM SIGPLAN NOTICES, V46, P265, DOI [10.1145/1961296.1950396, 10.1145/1961295.1950396]
   Chrome Security Team, 2012, CLUSTERFUZZ
   Comparetti PM, 2009, P IEEE S SECUR PRIV, P110, DOI 10.1109/SP.2009.14
   Corina J, 2017, CCS'17: PROCEEDINGS OF THE 2017 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P2123
   Cui WD, 2016, PROC INT CONF SOFTW, P820, DOI 10.1145/2884781.2884844
   Cui WD, 2008, CCS'08: PROCEEDINGS OF THE 15TH ACM CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P391
   De Moura L, 2011, COMMUN ACM, V54, P69, DOI 10.1145/1995376.1995394
   de Ruiter J, 2015, PROCEEDINGS OF THE 24TH USENIX SECURITY SYMPOSIUM, P193
   Della Toffola L, 2017, IEEE INT CONF AUTOM, P44, DOI 10.1109/ASE.2017.8115617
   DeMott Jared., 2007, BlackHat and Defcon
   Dewey K, 2015, IEEE INT CONF AUTOM, P482, DOI 10.1109/ASE.2015.65
   Dewey Kyle, 2014, P 29 ACMIEEE INT C A, P725
   Dietz W, 2012, PROC INT CONF SOFTW, P760, DOI 10.1109/ICSE.2012.6227142
   Dingning Yang, 2012, 2012 IEEE 11th International Conference on Trust, Security and Privacy in Computing and Communications (TrustCom), P1070, DOI 10.1109/TrustCom.2012.99
   Dolan-Gavitt B, 2009, CCS'09: PROCEEDINGS OF THE 16TH ACM CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P566
   Doupe Adam, 2012, 21 USENIX SECURITY S, P523
   Duchene Fabien., 2014, P 4 ACM C DATA APPL, P37, DOI DOI 10.1145/2557547.2557550
   Duran D., 2011, P CANSECWEST, P246
   Eddington M., 2014, Peach fuzzing platform
   Edwards A., 2001, MSRTR200150 MICR RES
   Embleton S., 2006, P BLACK HAT US
   EVRON G., 2007, Open Source Fuzzing Tools, V1st
   Felt AP, 2011, PROCEEDINGS OF THE 18TH ACM CONFERENCE ON COMPUTER & COMMUNICATIONS SECURITY (CCS 11), P627
   Fewer S., 2015, COLLECTION BURPSUITE
   Foote J., 2012, GDB EXPLOITABLE
   Gan ST, 2018, P IEEE S SECUR PRIV, P679, DOI 10.1109/SP.2018.00040
   Ganesh V, 2009, PROC INT CONF SOFTW, P474, DOI 10.1109/ICSE.2009.5070546
   Gascon Hugo, 2015, SECURITY PRIVACY COM, P330
   GitHub, 2019, PUBL FUZZ
   Godefroid P, 2005, ACM SIGPLAN NOTICES, V40, P213, DOI 10.1145/1064978.1065036
   Godefroid P., 2007, P 2 INT WORKSHOP RAN, P1, DOI [DOI 10.1145/1292414.1292416, 10.1145/1292414.1292416.]
   Godefroid P, 2017, IEEE INT CONF AUTOM, P50, DOI 10.1109/ASE.2017.8115618
   Godefroid P, 2008, PLDI'08: PROCEEDINGS OF THE 2008 SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN & IMPLEMENTATION, P206, DOI 10.1145/1375581.1375607
   Godefroid Patrice, 2008, Network and Distributed Systems Security
   Goodman P, 2018, IEEE SECUR PRIV, V16, P61, DOI 10.1109/MSP.2018.1870859
   GrammaTech, 2016, GRAMM BLOGS CYB GRAN
   Grieco G, 2016, ACM SIGPLAN NOTICES, V51, P13, DOI [10.1145/2976002.2976017, 10.1145/3241625.2976017]
   Grubb S., 2011, FSFUZZER
   Guo JM, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P739, DOI 10.1145/3236024.3264835
   Haller Istvan, 2016, P ACM SIGSAC C COMP, P517, DOI DOI 10.1145/2976749.2978405
   Haller Istvan, 2013, P 22 USENIX SEC S, P49, DOI DOI 10.5555/2534766.2534772
   Hamlet Dick., 2006, RT 06, P1
   Han H, 2019, 26TH ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2019), DOI 10.14722/ndss.2019.23263
   Han H, 2017, CCS'17: PROCEEDINGS OF THE 2017 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P2345, DOI 10.1145/3133956.3134103
   Han W, 2018, 25TH ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2018), DOI 10.14722/ndss.2018.23312
   Helin A., 2011, RADAMSA
   Hocevar S., 2006, ZZUF
   Hoglund G., 2003, P BLACK HAT US
   Holler Christian, 2012, P 21 USENIX SEC S US, P445
   Householder A. D., 2012, CMUSEI2012TN018 CERT
   HOWDEN WE, 1975, IEEE T COMPUT, VC 24, P554, DOI 10.1109/T-C.1975.224259
   InfoSec Institute, 2011, C MILL REV HIS PROC
   Iozzo V., 2010, P BLACK HAT US
   Jana S, 2012, P IEEE S SECUR PRIV, P80, DOI 10.1109/SP.2012.15
   Jayaraman K., 2009, NASA FORMAL METHODS, P121
   Jeon Y, 2017, CCS'17: PROCEEDINGS OF THE 2017 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P2373, DOI 10.1145/3133956.3134062
   Johansson W, 2014, 2014 IEEE SEVENTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST), P323, DOI 10.1109/ICST.2014.45
   Jones D., 2006, TRINITY
   Joshi P, 2009, PLDI'09 PROCEEDINGS OF THE 2009 ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P110, DOI 10.1145/1542476.1542489
   Jr R. L. S., 2012, THESIS U TENNESSEE
   Jung J, 2008, CCS'08: PROCEEDINGS OF THE 15TH ACM CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P279
   Jurczyk M., 2019, COMPARECOVERAGE
   Kaksonen R, 2001, INT FED INFO PROC, V64, P174
   Kanade A., 2010, P 18 ACM SIGSOFT INT, P277, DOI DOI 10.1145/1882291.1882332
   Kapravelos A, 2014, PROCEEDINGS OF THE 23RD USENIX SECURITY SYMPOSIUM, P641
   Kargén U, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P782, DOI 10.1145/2786805.2786844
   Kario H., 2015, TLSFUZZER
   Kim SY, 2017, 2017 USENIX ANNUAL TECHNICAL CONFERENCE (USENIX ATC '17), P689
   KING JC, 1976, COMMUN ACM, V19, P385, DOI 10.1145/360248.360252
   Klees G, 2018, PROCEEDINGS OF THE 2018 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY (CCS'18), P2123, DOI 10.1145/3243734.3243804
   Koopman P, 1997, SYM REL DIST SYST, P72, DOI 10.1109/RELDIS.1997.632800
   Koret J., 2014, THE NIGHTMARE
   lafintel, 2016, Circumventing Fuzzing Roadblocks with Compiler Transformations
   Lai Z., 2010, ICSE, P235, DOI [10.1145/1806799.1806836, DOI 10.1145/1806799.1806836]
   Laurenzano MA, 2010, INT SYM PERFORM ANAL, P175, DOI 10.1109/ISPASS.2010.5452024
   Le Goues C, 2012, PROC INT CONF SOFTW, P3, DOI 10.1109/ICSE.2012.6227211
   Lee B, 2015, PROCEEDINGS OF THE 24TH USENIX SECURITY SYMPOSIUM, P81
   Lee S., 2017, P NETW DISTR SYST SE
   Lemieux C, 2018, ISSTA'18: PROCEEDINGS OF THE 27TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P254, DOI 10.1145/3213846.3213874
   Lemieux C, 2018, IEEE INT CONF AUTOM, P475, DOI 10.1145/3238147.3238176
   Li J, 2018, CYBERSECURITY, V1, DOI 10.1186/s42400-018-0002-y
   Li YK, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P627, DOI 10.1145/3106237.3106295
   Liang HL, 2018, IEEE T RELIAB, V67, P1199, DOI 10.1109/TR.2018.2834476
   Lidbury C, 2015, ACM SIGPLAN NOTICES, V50, P65, DOI [10.1145/2737924.2737986, 10.1145/2813885.2737986]
   Lin Zhiqiang., 2008, P 16 ACM SIGSOFT INT, P83
   Liu P, 2017, PROC INT CONF SOFTW, P643, DOI 10.1109/ICSE.2017.65
   Luk CK, 2005, ACM SIGPLAN NOTICES, V40, P190, DOI 10.1145/1064978.1065034
   Ma L, 2015, IEEE INT CONF AUTOM, P212, DOI 10.1109/ASE.2015.49
   Mahmood R., 2012, 2012 Proceedings of 7th International Workshop on Automation of Software Test (AST 2012), P22, DOI 10.1109/IWAST.2012.6228986
   Martignoni L, 2012, ASPLOS XVII: SEVENTEENTH INTERNATIONAL CONFERENCE ON ARCHITECTURAL SUPPORT FOR PROGRAMMING LANGUAGES AND OPERATING SYSTEMS, P337
   McKeeman William M., 1998, DIGIT TECH J, V10, P100
   Mckinney D., 2005, ANTIPARSER
   Microsoft Corporation, 2011, MINIFUZZ
   Microsoft Corporation, 2009, EXPL CRASH AN MSEC D
   MILLER BP, 1990, COMMUN ACM, V33, P32, DOI 10.1145/96267.96279
   Miller Charlie, 2008, CANSECWEST
   Molnar David, 2009, P 18 C USENIX SEC S, V9, P67
   Muench M., 2018, NDSS
   Mulliner Collin., 2011, Proceedings of the 20th USENIX conference on Security, SEC'11, P24
   MWR Labs, 2016, KERNELFUZZER
   Nagarakatte S, 2010, ACM SIGPLAN NOTICES, V45, P31
   Nagarakatte S, 2009, PLDI'09 PROCEEDINGS OF THE 2009 ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P245, DOI 10.1145/1542476.1542504
   NCC Group, 2016, HOD FUZZ
   Nethercote N, 2007, ACM SIGPLAN NOTICES, V42, P89, DOI 10.1145/1273442.1250746
   Newsome J., 2005, NDSS, V5, P3
   Oleksiuk Dmytro, 2009, IOCTL FUZZER
   P. Project, 2000, DYNINST PUTT PERF HI
   Pacheco C, 2007, PROC INT CONF SOFTW, P75
   Pailoor S, 2018, PROCEEDINGS OF THE 27TH USENIX SECURITY SYMPOSIUM, P729
   Pan JF, 2017, PROCEEDINGS OF THE 26TH USENIX SECURITY SYMPOSIUM (USENIX SECURITY '17), P149
   Park C.-S., 2008, FSE, P135
   Pei KX, 2017, PROCEEDINGS OF THE TWENTY-SIXTH ACM SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES (SOSP '17), P1, DOI 10.1145/3132747.3132785
   Peng H, 2018, P IEEE S SECUR PRIV, P697, DOI 10.1109/SP.2018.00056
   Petsios T, 2017, P IEEE S SECUR PRIV, P615, DOI 10.1109/SP.2017.27
   Raffelt Harald, 2005, P 10 INT WORKSH FORM, P62, DOI [10.1145/1081180.1081189, DOI 10.1145/1081180.1081189]
   Rasthofer S, 2017, PROC INT CONF SOFTW, P300, DOI 10.1109/ICSE.2017.35
   Rawat S, 2017, 24TH ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2017), DOI 10.14722/ndss.2017.23404
   Rebert A, 2014, PROCEEDINGS OF THE 23RD USENIX SECURITY SYMPOSIUM, P861
   Regehr J, 2012, ACM SIGPLAN NOTICES, V47, P335, DOI 10.1145/2345156.2254104
   Ruderman J., 2008, LITHIUM
   Samak M, 2015, ACM SIGPLAN NOTICES, V50, P175, DOI [10.1145/2737924.2737998, 10.1145/2813885.2737998]
   Schneider F. B., 2000, ACM Transactions on Information and Systems Security, V3, P30, DOI 10.1145/353323.353382
   Schumilo S, 2017, PROCEEDINGS OF THE 26TH USENIX SECURITY SYMPOSIUM (USENIX SECURITY '17), P167
   Schwartz EJ, 2010, P IEEE S SECUR PRIV, P317, DOI 10.1109/SP.2010.26
   Schwarz M, 2018, PROCEEDINGS OF THE 2018 ACM ASIA CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY (ASIACCS'18), P587, DOI 10.1145/3196494.3196508
   Security M., 2013, ORANGFUZZ
   Security M., 2016, FUNFUZZ
   Sen K., 2007, P 22 IEEE ACM INT C, P323, DOI [DOI 10.1145/1321631.1321679, 10.1145/1321631.1321679]
   Sen K., 2005, P 10 EUR SOFTW ENG C, V30, P263, DOI DOI 10.1145/1081706.1081750
   Sen K, 2008, PLDI'08: PROCEEDINGS OF THE 2008 SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN & IMPLEMENTATION, P11, DOI 10.1145/1375581.1375584
   Serebryany K., 2012, USENIX ATC 2012, P309
   Serebryany Konstantin, 2009, Proceedings of the Workshop on Binary Instrumentation and Applications, WBIA'09, P62, DOI DOI 10.1145/1791194.1791203
   Shen S., 2019, P NETW DISTR SYST SE
   Sialveras Z., 2015, P ZERONIGHTS
   Somorovsky J, 2016, CCS'16: PROCEEDINGS OF THE 2016 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P1492, DOI 10.1145/2976749.2978411
   Song DY, 2019, 26TH ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2019), DOI 10.14722/ndss.2019.23176
   Song D, 2019, P IEEE S SECUR PRIV, P1275, DOI 10.1109/SP.2019.00010
   Song W, 2017, IEEE INT CONF AUTOM, P27, DOI 10.1109/ASE.2017.8115615
   Spensky C., 2015, LL FUZZER
   Stepanov E, 2015, INT SYM CODE GENER, P46, DOI 10.1109/CGO.2015.7054186
   Stephens N, 2016, 23RD ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2016), DOI 10.14722/ndss.2016.23368
   SUTTON M., 2005, FileFuzz
   Sutton M., 2007, Fuzzing: brute force vulnerability discovery
   Sutton M., 2005, P BLACK HAT AS
   Swiecki Robert, 2010, honggfuzz
   Takanen A, 2018, ADV TOP SCI TECH CHI, P1
   Thiel D., 2008, P BLACK HAT EU
   Tice C, 2014, PROCEEDINGS OF THE 23RD USENIX SECURITY SYMPOSIUM, P941
   Tillmann N, 2008, LECT NOTES COMPUT SC, V4966, P134
   Trabish D, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P350, DOI 10.1145/3180155.3180251
   Trail of Bits, 2016, GRR
   Valotta R., 2012, P DEEPSEC
   van Tonder R, 2018, IEEE INT CONF AUTOM, P612, DOI 10.1145/3238147.3238200
   Pham VT, 2016, IEEE INT CONF AUTOM, P543, DOI 10.1145/2970276.2970316
   Veggalam S, 2016, LECT NOTES COMPUT SC, V9878, P581, DOI 10.1007/978-3-319-45744-4_29
   Vuagnoux M., 2005, P CHAOS COMM C, P47
   Vyukov D., 2015, GO FUZZ
   Vyukov Dmitry, 2015, syzkaller
   Wang JJ, 2017, P IEEE S SECUR PRIV, P579, DOI 10.1109/SP.2017.23
   Wang S, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P523, DOI 10.1145/3106237.3106258
   Wang TL, 2010, P IEEE S SECUR PRIV, P495, DOI 10.1109/SP.2010.37
   Wang X, 2013, SOSP'13: PROCEEDINGS OF THE TWENTY-FOURTH ACM SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES, P260, DOI 10.1145/2517349.2522728
   Weaver V.M., 2015, PERF FUZZER TARGETED
   Wei JY, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P213, DOI 10.1145/3236024.3236039
   Winter S, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P51, DOI 10.1145/1985793.1985801
   Wong MY, 2016, 23RD ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2016), DOI 10.14722/ndss.2016.23118
   Woo M, 2013, P 2013 ACM SIGSAC C, P511
   Xie T, 2009, I C DEPEND SYS NETWO, P359, DOI 10.1109/DSN.2009.5270315
   Xu DP, 2017, P IEEE S SECUR PRIV, P921, DOI 10.1109/SP.2017.56
   Xu W, 2017, CCS'17: PROCEEDINGS OF THE 2017 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P2313, DOI 10.1145/3133956.3134046
   Yun I, 2018, PROCEEDINGS OF THE 27TH USENIX SECURITY SYMPOSIUM, P745
   Zalewski M, 2014, American fuzzy lop
   Zalewski M., 2014, Technical "whitepaper"for afl-fuzz
   Zalewski M., 2010, REF FUZZ
   Zalewski M., 2011, CROSSFUZZ
   Zalewski Michal, 2015, NEW AFL PERSISTENT M
   Zeller A, 2002, IEEE T SOFTWARE ENG, V28, P183, DOI 10.1109/32.988498
   Zetter K., 2016, A famed hacker is grading thousands of programs and may revolutionize software in the process
   Zhang MW, 2014, ACM SIGPLAN NOTICES, V49, P129, DOI 10.1145/2674025.2576208
   Zhao L, 2019, 26TH ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2019), DOI 10.14722/ndss.2019.23504
   Zimmermann M., 2014, TAVOR
NR 247
TC 206
Z9 222
U1 1
U2 42
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD NOV 1
PY 2021
VL 47
IS 11
BP 2312
EP 2331
DI 10.1109/TSE.2019.2946563
PG 20
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA WW2QE
UT WOS:000717767100001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Afzal, A
   Motwani, M
   Stolee, KT
   Brun, Y
   Le Goues, C
AF Afzal, Afsoon
   Motwani, Manish
   Stolee, Kathryn T.
   Brun, Yuriy
   Le Goues, Claire
TI SOSRepair: Expressive Semantic Search for Real-World Program Repair
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Maintenance engineering; Semantic search; Encoding; Benchmark testing;
   Computer bugs; Software; Automated program repair; semantic code search;
   patch quality; program repair quality; SOSRepair
ID RESPONSIBILITY; GENERATION; COMPLEXITY; CAUSALITY
AB Automated program repair holds the potential to significantly reduce software maintenance effort and cost. However, recent studies have shown that it often produces low-quality patches that repair some but break other functionality. We hypothesize that producing patches by replacing likely faulty regions of code with semantically-similar code fragments, and doing so at a higher level of granularity than prior approaches can better capture abstraction and the intended specification, and can improve repair quality. We create SOSRepair, an automated program repair technique that uses semantic code search to replace candidate buggy code regions with behaviorally-similar (but not identical) code written by humans. SOSRepair is the first such technique to scale to real-world defects in real-world systems. On a subset of the ManyBugs benchmark of such defects, SOSRepair produces patches for 22 (34%) of the 65 defects, including 3, 5, and 6 defects for which previous state-of-the-art techniques Angelix, Prophet, and GenProg do not, respectively. On these 22 defects, SOSRepair produces more patches (9, 41%) that pass all independent tests than the prior techniques. We demonstrate a relationship between patch granularity and the ability to produce patches that pass all independent tests. We then show that fault localization precision is a key factor in SOSRepair's success. Manually improving fault localization allows SOSRepair to patch 23 (35%) defects, of which 16 (70%) pass all independent tests. We conclude that (1) higher-granularity, semantic-based patches can improve patch quality, (2) semantic search is promising for producing high-quality real-world defect repairs, (3) research in fault localization can significantly improve the quality of program repair techniques, and (4) semi-automated approaches in which developers suggest fix locations may produce high-quality patches.
C1 [Afzal, Afsoon; Le Goues, Claire] Carnegie Mellon Univ, Sch Comp Sci, Pittsburgh, PA 15213 USA.
   [Motwani, Manish; Brun, Yuriy] Univ Massachusetts, Coll Informat & Comp Sci, Amherst, MA 01003 USA.
   [Stolee, Kathryn T.] North Carolina State Univ, Dept Comp Sci, Raleigh, NC 27695 USA.
C3 Carnegie Mellon University; University of Massachusetts System;
   University of Massachusetts Amherst; North Carolina State University
RP Afzal, A (corresponding author), Carnegie Mellon Univ, Sch Comp Sci, Pittsburgh, PA 15213 USA.
EM afsoona@cs.cmu.edu; mmotwani@cs.umass.edu; ktstolee@ncsu.edu;
   brun@cs.umass.edu; clegoues@cs.cmu.edu
RI Motwani, Manish/V-3320-2019
OI Motwani, Manish/0000-0001-5129-3980; Stolee,
   Kathryn/0000-0003-0584-7094; Le Goues, Claire/0000-0002-3931-060X; Brun,
   Yuriy/0000-0003-3027-7986
FU National Science Foundation [CCF-1453474, CCF-1563797, CCF-1564162,
   CCF-1645136, CCF-1763423]
FX This work is supported by the National Science Foundation under grants
   no. CCF-1453474, CCF-1563797, CCF-1564162, CCF-1645136, and CCF-1763423.
CR Abd-El-Malek M., 2005, ACM SIGOPS Operating Systems Review, P59, DOI DOI 10.1145/1095810.1095817
   afl fuzz, 2018, AM FUZZY LOP
   Angell R, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P871, DOI 10.1145/236024.3264590
   [Anonymous], 2013, P 2013 INT S SOFTW T, DOI DOI 10.1145/2483760.2483767
   [Anonymous], 2010, IEEE Data Eng. Bull.
   Bader J, 2019, P ACM PROGRAM LANG, V3, DOI 10.1145/3360585
   Barr ET, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P306, DOI 10.1145/2635868.2635898
   BESCHASTNIKH I., 2011, P 19 ACM SIGSOFT S 1, P267, DOI DOI 10.1145/2025113.2025151
   Beschastnikh I, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P468, DOI 10.1145/2568225.2568246
   Beschastnikh I, 2015, IEEE T SOFTWARE ENG, V41, P408, DOI 10.1109/TSE.2014.2369047
   Bhatia S, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P60, DOI 10.1145/3180155.3180219
   Blasi A, 2018, ISSTA'18: PROCEEDINGS OF THE 27TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P242, DOI 10.1145/3213846.3213872
   Böhme M, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P117, DOI 10.1145/3106237.3106255
   Brun Y, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P754, DOI 10.1145/3236024.3264838
   Cadar C., 2008, Proceedings of the 8th USENIX conference on Operating systems design and implementation, OSDI'08, (USA), P209
   Carzaniga A., 2010, Proceedings of the eighteenth ACM SIGSOFT international symposium on Foundations of software engineering, P237
   Carzaniga A, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P782, DOI 10.1109/ICSE.2013.6606624
   Chen LS, 2017, IEEE INT CONF AUTOM, P637, DOI 10.1109/ASE.2017.8115674
   Cheng X, 2017, IEEE INT CONF AUTOM, P996, DOI 10.1109/ASE.2017.8115718
   D'Antoni L, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P582, DOI 10.1145/3106237.3106241
   D'Antoni L, 2016, LECT NOTES COMPUT SC, V9780, P383, DOI 10.1007/978-3-319-41540-6_21
   Dallmeier V., 2010, P 19 INT S SOFTWARE, P85, DOI [DOI 10.1145/1831708.1831719, 10.1145/1831708.1831719]
   de Moura L, 2008, LECT NOTES COMPUT SC, V4963, P337, DOI 10.1007/978-3-540-78800-3_24
   Engler D., 2001, Operating Systems Review, V35, P57, DOI 10.1145/502059.502041
   Fraser G, 2013, IEEE T SOFTWARE ENG, V39, P276, DOI 10.1109/TSE.2012.14
   Freire C, 2015, PROC VLDB ENDOW, V9, P180
   Gabel M, 2010, 18 ACM SIGSOFT INT S, P147
   Galhotra S, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P498, DOI 10.1145/3106237.3106277
   Gao Q, 2015, IEEE INT CONF AUTOM, P307, DOI 10.1109/ASE.2015.81
   Ghezzi C, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P277, DOI 10.1145/2568225.2568234
   Goffi A., 2016, P 25 INT S SOFTW TES, P213, DOI DOI 10.1145/2931037.2931061
   Gulwani S, 2018, ACM SIGPLAN NOTICES, V53, P465, DOI [10.1145/3192366.3192387, 10.1145/3296979.3192387]
   Gupta R, 2017, AAAI CONF ARTIF INTE, P1345
   Gvero T, 2015, ACM SIGPLAN NOTICES, V50, P416, DOI [10.1145/2858965.2814295, 10.1145/2814270.2814295]
   Hindle A, 2012, PROC INT CONF SOFTW, P837, DOI 10.1109/ICSE.2012.6227135
   Nguyen HDT, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P772, DOI 10.1109/ICSE.2013.6606623
   Hua JR, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P12, DOI 10.1145/3180155.3180245
   Jha S., 2010, P 32 ACM IEEE INT C, V1, P215, DOI DOI 10.1145/1806799.1806833
   Jiang JJ, 2018, ISSTA'18: PROCEEDINGS OF THE 27TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P298, DOI 10.1145/3213846.3213871
   Jones JA, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P467, DOI 10.1109/ICSE.2002.1007991
   Ke YL, 2015, IEEE INT CONF AUTOM, P295, DOI 10.1109/ASE.2015.60
   Kim D, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P802, DOI 10.1109/ICSE.2013.6606626
   KING JC, 1976, COMMUN ACM, V19, P385, DOI 10.1145/360248.360252
   Krka I, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P305, DOI 10.1145/1595696.1595756
   Lattner C., 2019, CLANG C LANGUAGE FAM
   Le Goues C, 2012, IEEE T SOFTWARE ENG, V38, P54, DOI 10.1109/TSE.2011.104
   Le Goues C, 2015, IEEE T SOFTWARE ENG, V41, P1236, DOI 10.1109/TSE.2015.2454513
   Le TDB, 2015, IEEE INT CONF AUTOM, P115, DOI 10.1109/ASE.2015.83
   Le TDB, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P331, DOI 10.1109/SANER.2015.7081843
   Le XBD, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P163, DOI 10.1145/3180155.3182536
   Le XBD, 2017, PROCEEDINGS OF THE 26TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA'17), P376, DOI 10.1145/3092703.3098225
   Le XBD, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P593, DOI 10.1145/3106237.3106309
   Le XBD, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P213, DOI 10.1109/SANER.2016.76
   Liu XL, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P118, DOI 10.1109/SANER.2018.8330202
   Lo D., 2006, SIGSOFT FSE, P265
   Lo D, 2006, WORK CONF REVERSE EN, P51
   Lo D, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P345, DOI 10.1145/1595696.1595761
   Lo David., 2010, Proceedings of the IEEE/ACM international conference on Automated software engineering, ASE '10, P387
   Long F, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P727, DOI 10.1145/3106237.3106253
   Long F, 2016, PROC INT CONF SOFTW, P702, DOI 10.1145/2884781.2884872
   Long F, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P166, DOI 10.1145/2786805.2786811
   Long F, 2016, ACM SIGPLAN NOTICES, V51, P298, DOI 10.1145/2914770.2837617
   Macho C, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P106, DOI 10.1109/SANER.2018.8330201
   Marginean A, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE (ICSE-SEIP 2019), P269, DOI 10.1109/ICSE-SEIP.2019.00039
   Martinez M, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE COMPANION 2014), P492, DOI 10.1145/2591062.2591114
   Mechtaev S, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P129, DOI 10.1145/3180155.3180247
   Mechtaev S, 2016, PROC INT CONF SOFTW, P691, DOI 10.1145/2884781.2884807
   Mechtaev S, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P448, DOI 10.1109/ICSE.2015.63
   Meliou A, 2014, PROC VLDB ENDOW, V7, P1715, DOI 10.14778/2733004.2733070
   Meliou A, 2010, PROC VLDB ENDOW, V4, P34, DOI 10.14778/1880172.1880176
   Monperrus M, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P234, DOI 10.1145/2568225.2568324
   Motwani M, 2019, PROC INT CONF SOFTW, P188, DOI 10.1109/ICSE.2019.00035
   Motwani M, 2018, EMPIR SOFTW ENG, V23, P2901, DOI [10.1007/s10664-017-9550-0, 10.1145/3180155.3182533]
   Mu K., 2013, ESEC FSE NEW IDEAS T, P631, DOI DOI 10.1145/2491411.2494580
   Mu  slu K., 2015, ISSTA 15, P373, DOI [10.1145/27717 83.2771792, DOI 10.1145/2771783.2771792]
   Pacheco C., 2007, OOPSLA 2007 COMPANIO, P815
   Qi YH, 2013, PROC IEEE INT CONF S, P180, DOI 10.1109/ICSM.2013.29
   Qi Zichao, 2015, P 2015 INT S SOFTW T, P24, DOI DOI 10.1145/2771783.2771791
   Reiss SP, 2001, PROC INT CONF SOFTW, P221, DOI 10.1109/ICSE.2001.919096
   Reiss SP, 2009, PROC INT CONF SOFTW, P243, DOI 10.1109/ICSE.2009.5070525
   Rolim R, 2017, PROC INT CONF SOFTW, P404, DOI 10.1109/ICSE.2017.44
   Saha RK, 2017, IEEE INT CONF AUTOM, P648, DOI 10.1109/ASE.2017.8115675
   Saha S, 2019, PROC INT CONF SOFTW, P13, DOI 10.1109/ICSE.2019.00020
   Schur M., 2013, Joint Meeting of the European Software Engineering Conference and the ACM SIGSOFT Symposium on the Foundations of Software Engineering, ESEC/FSE'13, Saint Petersburg, Russian Federation, August 18-26, 2013, P422
   Shamshiri S, 2015, IEEE INT CONF AUTOM, P201, DOI 10.1109/ASE.2015.86
   Shin Hwei Tan, 2012, 2012 IEEE Fifth International Conference on Software Testing, Verification and Validation (ICST 2012), P260, DOI 10.1109/ICST.2012.106
   Smith EK, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P532, DOI 10.1145/2786805.2786825
   Solar-Lezama A, 2005, ACM SIGPLAN NOTICES, V40, P281, DOI 10.1145/1064978.1065045
   Stolee K. T, 2012, P ACM SIGSOFT INT S
   Stolee KT, 2016, J SYST SOFTWARE, V116, P35, DOI 10.1016/j.jss.2015.04.081
   Stolee KT, 2014, ACM T SOFTW ENG METH, V23, DOI 10.1145/2581377
   Tan SH, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P187, DOI 10.1145/3180155.3180243
   Terragni V., 2016, P 25 INT S SOFTWARE, P118
   Tian Y, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P752, DOI 10.1145/3106237.3106300
   Timperley CS, 2018, PROC IEEE ACM INT C, P446, DOI 10.1145/3183440.3195050
   Tu ZP, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P269, DOI 10.1145/2635868.2635875
   van Tonder R, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P151, DOI 10.1145/3180155.3180250
   von Essen C, 2015, FORM METHOD SYST DES, V47, P26, DOI 10.1007/s10703-015-0223-6
   Walls RJ, 2015, 2015 IEEE 26TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING (ISSRE), P496, DOI 10.1109/ISSRE.2015.7381842
   Wang K, 2018, PROCEEDINGS OF THE 39TH ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, PLDI 2018, P481, DOI 10.1145/3192366.3192384
   Wang Q, 2017, IEEE INT CONF SOFTW, P321, DOI 10.1109/ICST.2017.36
   Wang XL, 2017, SIGMOD'17: PROCEEDINGS OF THE 2017 ACM INTERNATIONAL CONFERENCE ON MANAGEMENT OF DATA, P1369, DOI 10.1145/3035918.3035925
   Wang XL, 2016, SIGMOD'16: PROCEEDINGS OF THE 2016 INTERNATIONAL CONFERENCE ON MANAGEMENT OF DATA, P2177, DOI 10.1145/2882903.2899388
   Wang X, 2015, SIGMOD'15: PROCEEDINGS OF THE 2015 ACM SIGMOD INTERNATIONAL CONFERENCE ON MANAGEMENT OF DATA, P1231, DOI 10.1145/2723372.2750549
   Wang YP, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P1028, DOI 10.1145/2950290.2983934
   Weimer W, 2013, IEEE INT CONF AUTOM, P356, DOI 10.1109/ASE.2013.6693094
   Weimer W, 2009, PROC INT CONF SOFTW, P364, DOI 10.1109/ICSE.2009.5070536
   Weimer Westley, 2006, Proceedings of the 5th International Conference on Generative Programming and Component Engineering (GPCE'06), P181, DOI DOI 10.1145/1173706.1173734
   Wen M, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1, DOI 10.1145/3180155.3180233
   Xin Q, 2017, IEEE INT CONF AUTOM, P660, DOI 10.1109/ASE.2017.8115676
   Xiong YF, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P789, DOI 10.1145/3180155.3180182
   Xuan JF, 2017, IEEE T SOFTWARE ENG, V43, P34, DOI 10.1109/TSE.2016.2560811
   Yang JQ, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P831, DOI 10.1145/3106237.3106274
   Yu ZX, 2019, EMPIR SOFTW ENG, V24, P33, DOI 10.1007/s10664-018-9619-4
   Zhong H, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P913, DOI 10.1109/ICSE.2015.101
NR 115
TC 14
Z9 17
U1 3
U2 15
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD OCT 1
PY 2021
VL 47
IS 10
BP 2162
EP 2181
DI 10.1109/TSE.2019.2944914
PG 20
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA WH1IX
UT WOS:000707441900007
OA hybrid
DA 2024-07-18
ER

PT J
AU Storey, MA
   Zimmermann, T
   Bird, C
   Czerwonka, J
   Murphy, B
   Kalliamvakou, E
AF Storey, Margaret-Anne
   Zimmermann, Thomas
   Bird, Christian
   Czerwonka, Jacek
   Murphy, Brendan
   Kalliamvakou, Eirini
TI Towards a Theory of Software Developer Job Satisfaction and Perceived
   Productivity
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Productivity; Software; Companies; Software engineering; Complexity
   theory; Psychology; Measurement; Software engineering management;
   empirical studies; software companies; theory
ID PERFORMANCE; ORGANIZATION; MOTIVATION
AB Developer satisfaction and work productivity are important considerations for software companies. Enhanced developer satisfaction may improve the attraction, retention and health of employees, while higher productivity should reduce costs and increase customer satisfaction through faster software improvements. Many researchers and companies assume that perceived productivity and job satisfaction are related and may be used as proxies for one another, but these claims are a current topic of debate. There are also many social and technical factors that may impact satisfaction and productivity, but which factors have the most impact is not clear, especially for specific development contexts. Through our research, we developed a theory articulating a bi-directional relationship between software developer job satisfaction and perceived productivity, and identified what additional social and technical factors, challenges and work context variables influence this relationship. The constructs and relationships in our theory were derived in part from related literature in software engineering and knowledge work, and we validated and extended these concepts through a rigorously designed survey instrument. We instantiate our theory with a large software company, which suggests a number of propositions about the relative impact of various factors and challenges on developer satisfaction and perceived productivity. Our survey instrument and analysis approach can be applied to other development settings, while our findings lead to concrete recommendations for practitioners and researchers.
C1 [Storey, Margaret-Anne; Kalliamvakou, Eirini] Univ Victoria, Dept Comp Sci, Victoria, BC V8P 5C2, Canada.
   [Zimmermann, Thomas; Bird, Christian] Microsoft Corp, Res Dept, Redmond, WA 98052 USA.
   [Czerwonka, Jacek] Microsoft Corp, TSE, Redmond, WA 98052 USA.
   [Murphy, Brendan] Microsoft, Res Dept, Cambridge CB3 0FB, England.
C3 University of Victoria; Microsoft; Microsoft; Microsoft
RP Kalliamvakou, E (corresponding author), Univ Victoria, Dept Comp Sci, Victoria, BC V8P 5C2, Canada.
EM mstorey@uvic.ca; tzimmer@microsoft.com; cabird@microsoft.com;
   jacekcz@microsoft.com; bmurphy@microsoft.com; ikaliam@uvic.ca
RI Zimmermann, Thomas/C-4377-2019
OI Zimmermann, Thomas/0000-0003-4905-1469
CR Acton T., 2003, J EUR IND TRAIN, V27, P137, DOI DOI 10.1108/03090590310468958
   Aranda J, 2009, PROC INT CONF SOFTW, P298, DOI 10.1109/ICSE.2009.5070530
   Beecham S, 2008, INFORM SOFTWARE TECH, V50, P860, DOI 10.1016/j.infsof.2007.09.004
   BOEHM BW, 1987, COMPUTER, V20, P43, DOI 10.1109/MC.1987.1663694
   BRIEF AP, 1989, J APPL SOC PSYCHOL, V19, P717, DOI 10.1111/j.1559-1816.1989.tb01254.x
   BROWN SP, 1993, J MARKETING RES, V30, P63, DOI 10.2307/3172514
   Dagenais B., 2010, Proc. of the ICSE 10, P275, DOI DOI 10.1145/1806799.1806842
   Deutskens E, 2004, MARKET LETT, V15, P21, DOI 10.1023/B:MARK.0000021968.86465.00
   Dolbier CL, 2005, AM J HEALTH PROMOT, V19, P194, DOI 10.4278/0890-1171-19.3.194
   Dowdy Shirley, 2011, Statistics for research, V512
   Durlak JA, 2009, J PEDIATR PSYCHOL, V34, P917, DOI 10.1093/jpepsy/jsp004
   Fishbein M., 1973, Advances in Communication Research, P3
   Flyvbjerg B, 2006, QUAL INQ, V12, P219, DOI 10.1177/1077800405284363
   Foucault M, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P829, DOI 10.1145/2786805.2786870
   Franca A. C. C., 2012, 2012 26th Brazilian Symposium on Software Engineering (SBES), P61, DOI 10.1109/SBES.2012.28
   França ACC, 2013, 2013 6TH INTERNATIONAL WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING (CHASE), P9, DOI 10.1109/CHASE.2013.6614726
   França ACC, 2014, INFORM SOFTWARE TECH, V56, P79, DOI 10.1016/j.infsof.2013.06.006
   Franca C., 2014, Motivated software engineers are engaged and focused, while satisfied ones are happy, P32
   Franca C., 2018, IEEE T SOFTWARE ENG
   Graziotin D., 2017, ARXIV170304993
   GREENBERGER DB, 1989, ORGAN BEHAV HUM DEC, V43, P29, DOI 10.1016/0749-5978(89)90056-3
   Hackman J.R. e., 1980, Work redesign
   HACKMAN JR, 1975, J APPL PSYCHOL, V60, P159, DOI 10.1037/h0076546
   HILL RJ, 1977, CONTEMP SOCIOL, V6, P244, DOI 10.2307/2065853
   Johnson B., 2019, IEEE Transactions on Software Engineering
   Judge TA, 2001, PSYCHOL BULL, V127, P376, DOI 10.1037//0033-2909.127.3.376
   Kalliamvakou E, 2019, IEEE T SOFTWARE ENG, V45, P87, DOI 10.1109/TSE.2017.2768368
   Katz R, 2005, RES TECHNOL MANAGE, V48, P19, DOI 10.1080/08956308.2005.11657344
   Kaufman L., 2009, FINDING GROUPS DATA
   Kuper A., 2004, SOCIAL SCI ENCY
   Macdonald S., 1997, EMPL ASSIST Q, V13, P1, DOI [DOI 10.1300/J022V13N02_01, 10.1300/J022v13n0201, DOI 10.1300/J022V13N0201]
   Meyer AN, 2017, INT SYMP EMP SOFTWAR, P105, DOI 10.1109/ESEM.2017.17
   Meyer AN, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P19, DOI 10.1145/2635868.2635892
   Murphy-Hill E., 2019, IEEE T SOFTWARE ENG
   NELDER JA, 1972, J R STAT SOC SER A-G, V135, P370, DOI 10.2307/2344614
   OLSON JM, 1993, ANNU REV PSYCHOL, V44, P117, DOI 10.1146/annurev.psych.44.1.117
   Orpen C, 1981, PSYCHOL STUD, V26, P104
   PIERCE JL, 1989, ACAD MANAGE J, V32, P622, DOI 10.5465/256437
   Punter T, 2003, 2003 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P80, DOI 10.1109/ISESE.2003.1237967
   Rigby PC, 2016, PROC INT CONF SOFTW, P1006, DOI 10.1145/2884781.2884851
   ROUSSEEUW PJ, 1987, J COMPUT APPL MATH, V20, P53, DOI 10.1016/0377-0427(87)90125-7
   Sadowski Caitlin, 2019, Rethinking productivity in software engineering, DOI DOI 10.1007/978-1-4842-4221-6_9
   Sharp H, 2009, INFORM SOFTWARE TECH, V51, P219, DOI 10.1016/j.infsof.2008.05.009
   Shaw JD, 2004, PERS PSYCHOL, V57, P847, DOI 10.1111/j.1744-6570.2004.00008.x
   Sjoberg D. I. K., 2008, Guide to Advanced Empirical Software Engineering, P312
   Stinson LL, 1999, MON LABOR REV, V122, P12
   Stol KJ, 2015, SCI COMPUT PROGRAM, V101, P79, DOI 10.1016/j.scico.2014.11.010
   Storey M.-A., 2019, MAT THEORY SOFTWAR S
   Wagner S., 2018, ARXIV180106475, P1, DOI [10.48550/arXiv.1801.06475, DOI 10.48550/ARXIV.1801.06475]
   Wagner S., 2008, TUMINFO09I03201FI I
   Wanous JP, 1997, J APPL PSYCHOL, V82, P247, DOI 10.1037/0021-9010.82.2.247
   Wright T A, 2000, J Occup Health Psychol, V5, P84, DOI 10.1037/1076-8998.5.1.84
NR 52
TC 26
Z9 31
U1 1
U2 18
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD OCT 1
PY 2021
VL 47
IS 10
BP 2125
EP 2142
DI 10.1109/TSE.2019.2944354
PG 18
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science; Engineering
GA WH1IX
UT WOS:000707441900005
DA 2024-07-18
ER

PT J
AU de Andrade, HS
   Schroeder, J
   Crnkovic, I
AF de Andrade, Hugo Sica
   Schroeder, Jan
   Crnkovic, Ivica
TI Software Deployment on Heterogeneous Platforms: A Systematic Mapping
   Study
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Task analysis; Program processors; Systematics; Heterogeneous networks;
   Central Processing Unit; Field programmable gate arrays; Software
   deployment; heterogeneous computing; heterogeneous platforms; systematic
   mapping study
ID CLASSIFICATION
AB Context: Multiple types of processing units (e.g., CPUs, GPUs and FPGAs) can be used jointly to achieve better performance in computational systems. However, these units are built with fundamentally different characteristics and demand attention especially towards software deployment. Objective: The goal of this work is to summarize the state-of-the-art of software deployment on heterogeneous platforms. We provide an overview of the research area by searching for and categorizing relevant studies, as well as discussing gaps and trends of the field. We are interested in the main concerns (RQ1) and the approaches used (RQ2) when deploying software on heterogeneous platforms. Method: In order to achieve our goal, we performed a systematic mapping study, which refers to a method for reviewing literature with basis on predefined search strategies and a multi-step selection process. Results: We selected and analyzed 146 primary studies from multiple sources and found that the area of research is dominated by solution proposals. The majority of the studies discuss concerns about scheduling, the quality of the software, and its architecture. A large number of studies focuses on the problem of scheduling tasks and processes. We found approaches that are applied at different binding times (i.e., design time, runtime, orthogonal). Conclusion: The evaluation of the proposed solutions in an industrial context is missing. Also, the proposed methods have not been evaluated in development processes. Most of the methods address a particular concern, or a few concerns, while there is a lack of a holistic approach.
C1 [de Andrade, Hugo Sica; Schroeder, Jan; Crnkovic, Ivica] Chalmers, Dept Comp Sci & Engn, S-41296 Gothenburg, Sweden.
   [de Andrade, Hugo Sica; Schroeder, Jan; Crnkovic, Ivica] Univ Gothenburg, Dept Comp Sci & Engn, S-40530 Gothenburg, Sweden.
C3 Chalmers University of Technology; University of Gothenburg
RP de Andrade, HS (corresponding author), Chalmers, Dept Comp Sci & Engn, S-41296 Gothenburg, Sweden.
EM sica@chalmers.se; jan.schroder@gu.se; ivica.crnkovic@chalmers.se
OI Andrade, Hugo/0000-0002-8389-7217; Ivica, Crnkovic/0000-0002-5278-755X
FU research project "Ralf 3Software for Embedded High Performance
   Architecture" - Swedish Foundation for Strategic Research"; research
   project "HELPING-Heterogeneous Platform DeploymentModelling of Embedded
   Systems" - Swedish Research Council; research project "HoliDev-Holistic
   DevOps Framework" - Vinnova
FX This research was supported by the research projects "Ralf 3Software for
   Embedded High Performance Architecture" funded by Swedish Foundation for
   Strategic Research", "HELPING-Heterogeneous Platform DeploymentModelling
   of Embedded Systems" funded by the Swedish Research Council, and
   "HoliDev-Holistic DevOps Framework" funded by Vinnova.
CR Aleti A, 2013, IEEE T SOFTWARE ENG, V39, P658, DOI 10.1109/TSE.2012.64
   Andrade H., 2019, DATASET SOFTWARE DEP, DOI [10.5281/zenodo.3334842, DOI 10.5281/ZENODO.3334842]
   Andrade H, 2018, ASIA PAC SOFWR ENG, P209, DOI 10.1109/APSEC.2018.00035
   Blem E, 2013, INT S HIGH PERF COMP, P1, DOI 10.1109/HPCA.2013.6522302
   Brodtkorb AR, 2010, SCI PROGRAMMING-NETH, V18, P1, DOI 10.3233/SPR-2009-0296
   Budgen D., 2008, P PPIG 2008, P195, DOI DOI 10.1007/978-3-642-02152-7_36
   Carzaniga A., 1998, CUCS8579 U COL
   Crnkovic I, 2005, LECT NOTES COMPUT SC, V3549, P257
   Crnkovic I, 2011, IEEE T SOFTWARE ENG, V37, P593, DOI 10.1109/TSE.2010.83
   Dean J, 2008, COMMUN ACM, V51, P107, DOI 10.1145/1327452.1327492
   Dearle A, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P269, DOI 10.1109/FOSE.2007.20
   Dieste O, 2009, EMPIR SOFTW ENG, V14, P513, DOI 10.1007/s10664-008-9091-7
   Kitchenham B., 2007, 2007001 EBSE
   Koziolek Anne, 2011, JOINT ACM SIGSOFT C, P33
   Petersen K, 2008, 12 INT C EV ASS SOFT, P1, DOI 10.5555/2227115.2227123
   Rodriguez P, 2017, J SYST SOFTWARE, V123, P263, DOI 10.1016/j.jss.2015.12.015
   Sujeeth AK, 2013, LECT NOTES COMPUT SC, V7920, P52, DOI 10.1007/978-3-642-39038-8_3
   Svogor Ivan, 2013, CIT. Journal of Computing and Information Technology, V21, P211, DOI 10.2498/cit.1002284
   Wieringa R, 2006, REQUIR ENG, V11, P102, DOI 10.1007/s00766-005-0021-6
   WOHLIN Claes, 2014, P 18 INT C EVALUATIO, DOI [10.1145/2601248.2601268.10, 10.1145/2601248.2601268]
NR 20
TC 0
Z9 0
U1 1
U2 6
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD AUG 1
PY 2021
VL 47
IS 8
BP 1683
EP 1707
DI 10.1109/TSE.2019.2932665
PG 25
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA TZ7YH
UT WOS:000684687400010
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Ragavan, SS
   Codoban, M
   Piorkowski, D
   Dig, D
   Burnett, M
AF Ragavan, Sruti Srinivasa
   Codoban, Mihai
   Piorkowski, David
   Dig, Danny
   Burnett, Margaret
TI Version Control Systems: An Information Foraging Perspective
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Tools; Control systems; Software; Software engineering; Computer bugs;
   Animals; Lenses; Human factors in software desgin; software engineering;
   version control
AB Version Control Systems (VCS) are an important source of information for developers. This calls for a principled understanding of developers' information seeking in VCS-both for improving existing tools and for understanding requirements for new tools. Our prior work investigated empirically how and why developers seek information in VCS: in this paper, we complement and enrich our prior findings by reanalyzing the data via a theory's lens. Using the lens of Information Foraging Theory (IFT), we present new insights not revealed by the prior empirical work. First, while looking for specific information, participants' foraging behaviors were consistent with other foraging situations in SE; therefore, prior research on IFT-based SE tool design can be leveraged for VCS. Second, in change awareness foraging, participants consumed similar diets, but in subtly different ways than in other situations; this calls for further investigations into change awareness foraging. Third, while committing changes, participants attempted to enable future foragers, but the competing needs of different foraging situations led to tensions that participants failed to balance: this opens up a new avenue for research at the intersection of IFT and SE, namely, creating forageable information. Finally, the results of using an IFT lens on these data provides some evidence as to IFT's scoping and utility for the version control domain.
C1 [Ragavan, Sruti Srinivasa; Dig, Danny; Burnett, Margaret] Oregon State Univ, Sch Elect Engn & Comp Sci, Corvallis, OR 97331 USA.
   [Codoban, Mihai] Microsoft, Tools Software Engineers Grp, Redmond, WA 98052 USA.
   [Piorkowski, David] IBM Thomas J Watson Res Ctr, IBM Res AI, Yorktown Hts, NY 10598 USA.
C3 Oregon State University; Microsoft; International Business Machines
   (IBM)
RP Ragavan, SS (corresponding author), Oregon State Univ, Sch Elect Engn & Comp Sci, Corvallis, OR 97331 USA.
EM srinivas@ecs.oregonstate.edu; micodoba@microsoft.com;
   david.piorkowski@ibm.com; digd@ecs.oregonstate.edu;
   burnett@ecs.oregonstate.edu
OI Burnett, Margaret/0000-0001-6536-7629; Piorkowski,
   David/0000-0002-6740-4902
FU DARPA [N66001-17-2-4030]; NSF [1314384, CCF-1553741]
FX The authors wish to thank the reviewers; their feedback and suggestions
   greatly improved this paper. This work was supported by DARPA
   #N66001-17-2-4030, NSF #1314384 and NSF CCF-1553741. Any opinions,
   findings, conclusions or recommendations expressed are the authors' and
   do not necessarily reflect the views of NSF, DARPA, the Army Research
   Office, or the US government.
CR Alali A, 2008, INT C PROGRAM COMPRE, P182, DOI 10.1109/ICPC.2008.24
   Nguyen AT, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P511, DOI 10.1145/2950290.2950333
   [Anonymous], 2007, INFORM FORAGING THEO, DOI DOI 10.1093/ACPROF:OSO/9780195173321.001.0001
   [Anonymous], 2012, P ACM SIGSOFT 20 INT, DOI DOI 10.1145/2393596.2393656
   [Anonymous], 2013, P SIGCHI C HUMAN FAC
   Bhowmik Tanmay, 2015, ACM Transactions on Management Information Systems, V6, DOI 10.1145/2795235
   Bhowmik T, 2016, IEEE T CYBERNETICS, V46, P1784, DOI 10.1109/TCYB.2015.2420316
   Biehl JT, 2007, CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, VOLS 1 AND 2, P1313
   Brindescu C, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P322, DOI 10.1145/2568225.2568322
   Brun Y., 2011, Proceedings of the 19th ACM SIGSOFT symposium and the 13th European Conference on Foundations of Software Engineering (FSE'11), P168, DOI [10.1145/2025113.2025139, DOI 10.1145/2025113.2025139]
   Campbell JL, 2013, SOCIOL METHOD RES, V42, P294, DOI 10.1177/0049124113500475
   Card SK, 1997, IEEE SYMPOSIUM ON INFORMATION VISUALIZATION, PROCEEDINGS, P92, DOI 10.1109/INFVIS.1997.636792
   Chi E., 2001, Proceedings of the SIGCHI Conference on Human Factors in Computing Systems, P490, DOI [10.1145/365024.365325, DOI 10.1145/365024.365325]
   Chi E. H., 1998, CHI 98. Human Factors in Computing Systems. CHI 98 Conference Proceedings, P400, DOI 10.1145/274644.274699
   Chi E.H., 2003, Proceedings of the 21th Annual International ACM Conference on Human Factors in Computing Systems (CHI'03), Fort Lauderdale, Florida, P505, DOI [DOI 10.1145/642611.642699, 10.1145/642611.642699]
   Codoban M, 2015, PROC IEEE INT CONF S, P1, DOI 10.1109/ICSM.2015.7332446
   de Souza CRB, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P241, DOI 10.1145/1368088.1368122
   Cortés-Coy LF, 2014, IEEE INT WORK C SO, P275, DOI 10.1109/SCAM.2014.14
   Fleming SD, 2013, ACM T SOFTW ENG METH, V22, DOI 10.1145/2430545.2430551
   Gutwin C., 2004, Computer Supported Cooperative Work Conference Proceedings, P72, DOI 10.1145/1031607.1031621
   Gutwin C, 2005, LECT NOTES COMPUT SC, V3425, P383
   Guzzi A, 2015, PROCEEDINGS OF THE 2015 ACM INTERNATIONAL CONFERENCE ON COMPUTER-SUPPORTED COOPERATIVE WORK AND SOCIAL COMPUTING (CSCW'15), P518, DOI 10.1145/2675133.2675177
   Hayashi S, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P469, DOI 10.1109/SANER.2015.7081858
   Henley AZ, 2017, PROCEEDINGS OF THE 2017 ACM SIGCHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS (CHI'17), P5690, DOI 10.1145/3025453.3025645
   Henley AZ, 2014, S VIS LANG HUM CEN C, P77, DOI 10.1109/VLHCC.2014.6883026
   Johnson P., 2012, IEEE Software, V29, P94, DOI 10.1109/MS.2012.127
   Kasi BK, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P732, DOI 10.1109/ICSE.2013.6606619
   Kawrykow D, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P351, DOI 10.1145/1985793.1985842
   Kim S, 2008, IEEE T SOFTWARE ENG, V34, P181, DOI 10.1109/TSE.2007.70773
   Kirinuki H., 2014, P 22 INT C PROGRAM C, P262
   Ko AJ, 2007, PROC INT CONF SOFTW, P344
   Ko AJ, 2006, IEEE T SOFTWARE ENG, V32, P971, DOI 10.1109/TSE.2006.116
   Kuttal SK, 2013, S VIS LANG HUM CEN C, P59, DOI 10.1109/VLHCC.2013.6645244
   Lawrance J, 2007, VL/HCC 2007: IEEE SYMPOSIUM ON VISUAL LANGUAGES AND HUMAN-CENTRIC COMPUTING, PROCEEDINGS, P15, DOI 10.1109/VLHCC.2007.25
   Lawrance J, 2010, CHI2010: PROCEEDINGS OF THE 28TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, VOLS 1-4, P25
   Lawrance J, 2008, 2008 IEEE SYMPOSIUM ON VISUAL LANGUAGES AND HUMAN-CENTRIC COMPUTING, PROCEEDINGS, P57, DOI 10.1109/VLHCC.2008.4639059
   Marzban Maryam, 2012, Computer Science and Convergence, P231
   Nabi T, 2016, S VIS LANG HUM CEN C, P129, DOI 10.1109/VLHCC.2016.7739675
   Negara S, 2012, LECT NOTES COMPUT SC, V7313, P79, DOI 10.1007/978-3-642-31057-7_5
   Niu N, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P572, DOI 10.1109/ICSE.2013.6606603
   Perez A., 2014, Proceedings of the 22nd International Conference on Program Comprehension, P37
   Piorkowski D., 2012, Proc. of the ACM Annual Conference on Human Factors in Computing Systems (CHI'12), P1471
   Piorkowski D, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P97, DOI 10.1145/2950290.2950302
   Pirolli P, 1999, PSYCHOL REV, V106, P643, DOI 10.1037/0033-295X.106.4.643
   Pirolli P., 1995, P SIGCHI C HUM FACT, P51, DOI DOI 10.1145/223904.223911
   Ragavan S. S, 2018, SOFTWARE HIST
   Ragavan SS, 2017, PROCEEDINGS OF THE 2017 ACM SIGCHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS (CHI'17), P6232, DOI 10.1145/3025453.3025818
   Ragavan SS, 2016, 34TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, CHI 2016, P3509, DOI 10.1145/2858036.2858469
   Robbes R, 2007, ELECTRON NOTES THEOR, V166, P93, DOI 10.1016/j.entcs.2006.06.015
   Sarma A, 2012, IEEE T SOFTWARE ENG, V38, P889, DOI 10.1109/TSE.2011.64
   Sellen A. J., 2002, Conference Proceedings. Conference on Human Factors in Computing Systems. CHI 2002, P227, DOI 10.1145/503376.503418
   Shivaji S, 2013, IEEE T SOFTWARE ENG, V39, P552, DOI 10.1109/TSE.2012.43
   Shull F, 2008, GUIDE ADV EMPIRICAL
   Sillito J., 2006, Proc. of the ACM SIGSOFT Int'l Symp. on Foundations of Software Engineering, P23, DOI DOI 10.1145/1181775.1181779
   Spool J., 2004, USER INTERFACE ENG
   Stephens D.W., 1986, pi
   Zanjani Motahareh Bahrami, 2014, P 11 WORK C MIN SOFT, P162, DOI [10.1145/2597073.2597096, DOI 10.1145/2597073.2597096]
NR 57
TC 3
Z9 3
U1 1
U2 6
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD AUG 1
PY 2021
VL 47
IS 8
BP 1644
EP 1655
DI 10.1109/TSE.2019.2931296
PG 12
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA TZ7YH
UT WOS:000684687400007
OA hybrid
DA 2024-07-18
ER

PT J
AU Salama, M
   Bahsoon, R
   Lago, P
AF Salama, Maria
   Bahsoon, Rami
   Lago, Patricia
TI Stability in Software Engineering: Survey of the State-of-the-Art and
   Research Directions
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Stability criteria; Software engineering; Computer architecture;
   Software systems; Taxonomy; Software architecture; longevity; quality;
   stability; architecture design; architecture evaluation; architectural
   stability
ID DESIGN STABILITY; ARCHITECTURAL STABILITY; ADAPTIVE SYSTEMS; ROBUST
   SOFTWARE; REQUIREMENTS; EVOLUTION; MODEL; RELIABILITY; FRAMEWORK;
   PATTERNS
AB With the increasing dependence on software systems, their longevity is becoming a pressing need. Stability is envisioned as a primary property to achieve longevity. Stability has been defined and treated in many different ways in the literature. We conduct a systematic literature review to analyse the state-of-the-art related to stability as a software property. We formulate a taxonomy for characterising the notion, analyse the definitions found in the literature, and present research studies dealing with stability. Also, as architecture is one of the software artefacts with profound effects throughout the software lifecycle, we focus on software engineering practices for realising architectural stability. The analysis results show a wide variation in dimensions when dealing with stability. The state-of-the-art indicates the need for a shift towards a multi-dimensional concept that could cope with runtime dynamics and emerging software paradigms. More research efforts should be directed toward the identified gaps. The presented taxonomy and analysis of the literature aim to help the research community in consolidating the existing research efforts and deriving future developments.
C1 [Salama, Maria; Bahsoon, Rami] Univ Birmingham, Sch Comp Sci, Birmingham B15 2TT, W Midlands, England.
   [Lago, Patricia] Vrije Univ Amsterdam, Software & Serv Grp S4, Dept Comp Sci, Fac Sci, De Boelelaan 1081a, NL-1081 HV Amsterdam, Netherlands.
C3 University of Birmingham; Vrije Universiteit Amsterdam
RP Salama, M (corresponding author), Univ Birmingham, Sch Comp Sci, Birmingham B15 2TT, W Midlands, England.
EM m.salama@cs.bham.ac.uk; r.bhasoon@cs.bham.ac.uk; p.lago@vu.nl
RI Salama, Maria/AAO-6240-2021; Lago, Patricia/ABH-2308-2020
OI Salama, Maria/0000-0002-3184-683X; Lago, Patricia/0000-0002-2234-0845
FU School of Computer, Science University of Birmingham UK; Stevie Jivani
   Student Development Scholarship
FX This work was partially funded by the School of Computer, Science
   University of Birmingham UK, and the Stevie Jivani Student Development
   Scholarship for conducting research visit at the Vrije Universiteit
   Amsterdam.
CR Abbas T, 2014, 17TH IEEE INTERNATIONAL MULTI TOPIC CONFERENCE 2014, P155, DOI 10.1109/INMIC.2014.7097329
   AbuHassan A, 2019, SOFTW SYST MODEL, V18, P557, DOI 10.1007/s10270-016-0573-6
   Afzal W, 2009, INFORM SOFTWARE TECH, V51, P957, DOI 10.1016/j.infsof.2008.12.005
   Alenezi M., 2015, P THE INT C ENG MIS, P1, DOI DOI 10.1145/2832987.2833014
   Alenezi M, 2015, INT J CLOUD APPL COM, V5, P24, DOI [10.4018/IJCAC.2015100102, 10.4018/ijcac.2015100102]
   Aleti A, 2013, IEEE T SOFTWARE ENG, V39, P658, DOI 10.1109/TSE.2012.64
   Almeida R., 2011, P 6 INT S SOFTW ENG, P190, DOI DOI 10.1145/1988008.1988035
   Almeida R, 2012, 2012 NINTH EUROPEAN DEPENDABLE COMPUTING CONFERENCE (EDCC 2012), P173, DOI 10.1109/EDCC.2012.30
   Alshayeb M, 2005, J SYST SOFTWARE, V74, P269, DOI 10.1016/j.jss.2004.02.002
   Alshayeb M, 2011, IET SOFTW, V5, P415, DOI 10.1049/iet-sen.2010.0050
   Alshayeb M, 2013, IET SOFTW, V7, P339, DOI 10.1049/iet-sen.2013.0030
   Alshayeb M, 2011, J RES PRACT INF TECH, V43, P269
   Ameller D, 2013, IEEE SOFTWARE, V30, P61, DOI 10.1109/MS.2012.176
   Ampatzoglou A, 2015, IEEE T SOFTWARE ENG, V41, P781, DOI 10.1109/TSE.2015.2414917
   Anderson S, 2000, LECT NOTES COMPUT SC, V1943, P361
   Anderson S, 2001, REQUIREMENTS EVOLUTI, P27
   Anderson T, 1985, Resilient Computing Systems, V1
   Andersson J, 2009, LECT NOTES COMPUT SC, V5525, P27, DOI 10.1007/978-3-642-02161-9_2
   Angelopoulos K, 2013, PROCEEDINGS OF THE 8TH INTERNATIONAL SYMPOSIUM ON SOFTWARE ENGINEERING FOR ADAPTIVE AND SELF-MANAGING SYSTEMS (SEAMS 2013), P23, DOI 10.1109/SEAMS.2013.6595489
   Anish PR, 2016, PROC INT CONF SOFTW, P843, DOI 10.1145/2884781.2884801
   [Anonymous], OXFORD ENGLISH DICT
   [Anonymous], 2006, P 2 INT C QUAL SOFTW
   [Anonymous], 2008, WILEY ONLINE LIB
   [Anonymous], 91261 ISOIEC
   [Anonymous], 2002, COMPUTATIONAL INTELL
   [Anonymous], P 1 INT WORKSH SELF
   [Anonymous], P 18 INT C EV ASS SO
   Aversano L, 2013, WORK CONF REVERSE EN, P417, DOI 10.1109/WCRE.2013.6671317
   Avgeriou P., 2009, SIGSOFT SOFTW ENG NO, V34, P27
   Avizienis A, 2004, IEEE T DEPEND SECURE, V1, P11, DOI 10.1109/TDSC.2004.2
   Avritzer A., 2005, PROC 5 INT WORKSHOP, P43
   Azar D, 2011, INFORM SOFTWARE TECH, V53, P388, DOI 10.1016/j.infsof.2010.11.013
   Babar MA, 2009, COMPUTER, V42, P26, DOI 10.1109/MC.2009.233
   Baggen R, 2012, SOFTWARE QUAL J, V20, P287, DOI 10.1007/s11219-011-9144-9
   Bahsoon R, 2004, PROC IEEE INT CONF S, P443, DOI 10.1109/ICSM.2004.1357832
   Bahsoon R, 2005, IEE P-SOFTW, V152, P167, DOI 10.1049/ip-sen:20045059
   Bahsoon R., 2003, Book of Abstracts. ACS/IEEE International Conference on Computer Systems and Applications (Cat. No.03EX722)
   Bahsoon R., 2003, P 25 INT C SOFTW ENG, P443
   Bahsoon R, 2003, P 5 WORKSH EC DRIV S
   Bahsoon R, 2009, LECT NOTES COMPUT SC, V5872, P304, DOI 10.1007/978-3-642-05290-3_43
   Bahsoon R, 2006, I C COMP SYST APPLIC, P1142
   Balsamo S, 2004, IEEE T SOFTWARE ENG, V30, P295, DOI 10.1109/TSE.2004.9
   Bansiya J., 2000, ACM Computing Surveys (CSUR), V32, P18
   Bansiya J, 1999, EVALUATING STRUCTURA, P599
   Baqais A, 2016, 2016 7 INT C COMPUTE, P1
   BARBACCI M, 1998, CMUSEI97TR029
   Barber K. S., 2003, Requirements Engineering, V8, P222, DOI 10.1007/s00766-002-0159-4
   Barnes JM, 2013, IEEE INT CONF AUTOM, P213, DOI 10.1109/ASE.2013.6693081
   Bass L., 2005, P 5 WORK IEEE IFIP C, P193
   Bass L., 1997, SOFTWARE ARCHITECTUR
   Becker C, 2014, CEUR Workshop Proceedings, P1
   Becker C, 2016, IEEE SOFTWARE, V33, P56, DOI 10.1109/MS.2015.158
   Becker S., 2007, P EUR C OBJ OR TECHN, P72
   Becker T, 2012, IEEE INT C COMPUT, P353, DOI 10.1109/ICCSE.2012.56
   Bencomo N., 2010, 2010 32nd International Conference on Software Engineering (ICSE), P199, DOI 10.1145/1810295.1810329
   Bengtsson P, 1998, FIFTH INTERNATIONAL CONFERENCE ON SOFTWARE REUSE - PROCEEDINGS, P308, DOI 10.1109/ICSR.1998.685756
   Bengtsson P, 2004, J SYST SOFTWARE, V69, P129, DOI 10.1016/S0164-1212(03)00080-3
   Bengtsson P, 1999, PROCEEDINGS OF THE THIRD EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, P139, DOI 10.1109/CSMR.1999.756691
   Bennett K. H., 2000, P C FUT SOFTW ENG, P73
   Berry D. M., 2005, P REFSQ
   Bevan J, 2003, 10TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P134, DOI 10.1109/WCRE.2003.1287244
   Bhatia N. P., 2002, Stability theory of dynamical systems
   Black S, 2001, J SOFTW MAINT EVOL-R, V13, P263, DOI 10.1002/smr.233
   Black S, 2008, INFORM SOFTWARE TECH, V50, P723, DOI 10.1016/j.infsof.2007.07.008
   Blair G, 2009, COMPUTER, V42, P22, DOI 10.1109/MC.2009.326
   Bobbio A., 2008, BAYESIAN NETWORKS, P225
   Boehm B.W., 2000, International Conference on Software Engineering. Proceedings of the Conference on The Future of Software Engineering, P319
   Bogart C, 2015, 2015 30TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING WORKSHOP (ASEW), P86, DOI 10.1109/ASEW.2015.21
   Borgida A, 2013, 2013 5TH INTERNATIONAL WORKSHOP ON MODELING IN SOFTWARE ENGINEERING (MISE), P62, DOI 10.1109/MiSE.2013.6595298
   Bosch J., 2010, Proceedings of the Fourth European Conference on Software Architecture: Companion Volume, P93, DOI DOI 10.1145/1842752.1842776
   Bouktif S., 2004, Journal of Object Technology, V3, P227
   Bouktif S, 2014, ACM TRANS MANAG INF, V5, DOI 10.1145/2555596
   Bracciali A, 2005, LECT NOTES ARTIF INT, V3451, P322
   Brataas G., 2004, Software Engineering Notes, V29, P125, DOI 10.1145/974043.974064
   Breivold HP, 2012, J SYST SOFTWARE, V85, P2574, DOI 10.1016/j.jss.2012.05.085
   Breivold HP, 2012, INFORM SOFTWARE TECH, V54, P16, DOI 10.1016/j.infsof.2011.06.002
   Brereton P, 2007, J SYST SOFTWARE, V80, P571, DOI 10.1016/j.jss.2006.07.009
   BRIAND LC, 1993, CONFERENCE ON SOFTWARE MAINTENANCE 1993, CSM-93: PROCEEDINGS, P88
   Brünink M, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P795, DOI 10.1145/2635868.2666599
   Buchgeher G., 2010, Proceedings Fifth International Conference on Software Engineering Advances (ICSEA 2010), P141, DOI 10.1109/ICSEA.2010.29
   Bush D, 2003, 11TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, PROCEEDINGS, P23
   Bush D., 2002, P INT WORKSH PRINC S, P133
   C ~amara J., 2014, PROC 10 INT ACM SIGS, P63
   Calinescu R., 2017, Self-Aware Computing Systems, P337
   Calinescu R, 2012, COMMUN ACM, V55, P69, DOI 10.1145/2330667.2330686
   Camara J., 2014, Journal of the Brazilian Computer Society, V20, P1
   Cámara J, 2017, IEEE T DEPEND SECURE, V14, P50, DOI 10.1109/TDSC.2015.2429128
   Cámara J, 2016, J SYST SOFTWARE, V122, P507, DOI 10.1016/j.jss.2015.09.021
   Cámara J, 2014, 9TH INTERNATIONAL SYMPOSIUM ON SOFTWARE ENGINEERING FOR ADAPTIVE AND SELF-MANAGING SYSTEMS (SEAMS 2014), P155, DOI 10.1145/2593929.2593933
   Cámara J, 2013, COMPUTING, V95, P689, DOI 10.1007/s00607-013-0311-7
   Camara J, 2013, LAT-AM SYMP DEP COMP, P1, DOI 10.1109/LADC.2013.17
   Camara Javier, 2012, 7 INT S SOFTW ENG AD, P53, DOI [DOI 10.1109/SEAMS.2012.6224391, 10.1109/SEAMS.2012.6224391, 10.1109/seams.2012.6224391]
   Camara Javier., 2013, Assurances for Self-Adaptive Systems: Principles, Models, and Techniques
   Canal C., 2006, L OBJET, V12
   Canal C., 2016, STABILITY BASED ADAP, P322
   Capilla R, 2017, IEEE SOFTWARE, V34, P108, DOI 10.1109/MS.2017.54
   Caprarescu B. A., 2010, ECSA, P22
   CASAVANT TL, 1988, IEEE T SOFTWARE ENG, V14, P1578, DOI 10.1109/32.9046
   Celesti Antonio, 2010, 2010 IEEE 3rd International Conference on Cloud Computing (CLOUD 2010), P337, DOI 10.1109/CLOUD.2010.46
   Celiku O., 2007, P INT WORKSH LIV UNC
   Charters S., 2007, GUIDELINES PERFORMIN
   Chatzikonstantinou G, 2016, INFORM SOFTWARE TECH, V75, P105, DOI 10.1016/j.infsof.2016.04.005
   Chauvel F, 2014, INT CONF UTIL CLOUD, P307, DOI 10.1109/UCC.2014.40
   Chawla M. K., 2015, P 8 ANN ACM IND C P 8 ANN ACM IND C NE, P9
   Chen BH, 2014, J SYST SOFTWARE, V90, P114, DOI 10.1016/j.jss.2013.12.033
   Chen LP, 2013, IEEE SOFTWARE, V30, P38, DOI 10.1109/MS.2012.174
   Chen T., 2014, HDB ENG SELF AWARE S
   Cheng BHC, 2009, LECT NOTES COMPUT SC, V5525, P1, DOI 10.1007/978-3-642-02161-9_1
   Chiang CC, 2007, IRI 2007: PROCEEDINGS OF THE 2007 IEEE INTERNATIONAL CONFERENCE ON INFORMATION REUSE AND INTEGRATION, P719, DOI 10.1109/IRI.2007.4296705
   Chitchyan R, 2016, 2016 IEEE/ACM 38TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING COMPANION (ICSE-C), P533, DOI 10.1145/2889160.2889217
   Chomchumpol A, 2015, 2015 9TH MALAYSIAN SOFTWARE ENGINEERING CONFERENCE (MYSEC2015), P54, DOI 10.1109/MySEC.2015.7475195
   Chow J., 2011, P 2 INT WORKSH EM TR, P38
   Clements P., 2000, Tech. Rep. CMU/SEI-2000-TN-009
   Cline M, 2000, COMMUN ACM, V43, P101, DOI 10.1145/332833.332846
   Conejero JM, 2012, INFORM SOFTWARE TECH, V54, P212, DOI 10.1016/j.infsof.2011.09.003
   Conejero JM, 2009, LECT NOTES BUS INF P, V33, P136
   Constantinou E, 2017, SOFTWARE PRACT EXPER, V47, P1027, DOI 10.1002/spe.2484
   Constantinou E, 2015, 30TH ANNUAL ACM SYMPOSIUM ON APPLIED COMPUTING, VOLS I AND II, P1580, DOI 10.1145/2695664.2695895
   Cook S, 2001, PROC IEEE INT CONF S, P592, DOI 10.1109/ICSM.2001.972776
   Correia JP, 2009, PROC IEEE INT CONF S, P61, DOI 10.1109/ICSM.2009.5306346
   Cotroneo D, 2014, ACM J EMERG TECH COM, V10, DOI 10.1145/2539117
   Cui HM, 2013, SOSP'13: PROCEEDINGS OF THE TWENTY-FOURTH ACM SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES, P388, DOI 10.1145/2517349.2522735
   Cui Heming., 2010, Proceedings of 9th USENIX Symposium on Operating Systems Design and Implementation, OSDI'10, P207
   Dalpiaz Fabiano., 2013, RES CHALLENGES INFOR, P1, DOI DOI 10.1109/RCIS.2013.6577674
   Dantas F, 2000, P BRAZ S SOFTW ENG, P40
   Dantas F, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1082, DOI 10.1145/1985793.1986001
   Daqing Hou, 2011, 2011 18th Working Conference on Reverse Engineering, P131, DOI 10.1109/WCRE.2011.24
   de Lemos R., 2013, Lecture Notes in Computer Science, V7475, P1, DOI DOI 10.1007/978-3-642-35813-5_1
   de Silva L, 2012, J SYST SOFTWARE, V85, P132, DOI 10.1016/j.jss.2011.07.036
   Del Rosso C, 2006, J SOFTW MAINT EVOL-R, V18, P351, DOI 10.1002/smr.337
   Dijkstra E. W., 1982, Selected Writings on Computing: A Personal Perspective, P41
   DIJKSTRA EW, 1974, COMMUN ACM, V17, P643, DOI 10.1145/361179.361202
   Dobrica L, 2002, IEEE T SOFTWARE ENG, V28, P638, DOI 10.1109/TSE.2002.1019479
   Dolev S, 2006, IEEE T COMPUT, V55, P385, DOI 10.1109/TC.2006.61
   Dolev S., 2000, Proceeding of the Nineteenth Annual ACM Symposium on Principles of Distributed Computing, P309, DOI 10.1145/343477.343633
   Dolev S, 2009, ACM T PROGR LANG SYS, V31, DOI 10.1145/1552309.1552312
   Dolev ST, 2004, 15TH INTERNATIONAL WORKSHOP ON DATABASE AND EXPERT SYSTEMS APPLICATIONS, PROCEEDINGS, P684, DOI 10.1109/DEXA.2004.1333553
   Duboc L., 2007, P THE 6 JOINT M EURO, P375, DOI [10.1145/1287624.1287679, DOI 10.1145/1287624.1287679]
   Duboc L, 2008, INT REQUIR ENG CONF, P247, DOI 10.1109/RE.2008.22
   Dyba Tore, 2007, 2007 First International Symposium on Empirical Software Engineering and Measurement, P225
   Elish M, 2006, P INT COMP SOFTW APP, P215
   Elish MO, 2005, 29TH ANNUAL IEEE/NASA SOFTWARE ENGINEERING WORKSHOP, PROCEEDINGS, P183, DOI 10.1109/SEW.2005.28
   Elish MO, 2003, SEVENTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P193, DOI 10.1109/CSMR.2003.1192427
   Emmerich W, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P537, DOI 10.1109/ICSE.2002.1007997
   Eom YH, 2012, ACM SIGPLAN NOTICES, V47, P287, DOI 10.1145/2345156.2254099
   Esfahani Naeem, 2013, Uncertainty in SelfAdaptive Software Systems, P214, DOI [DOI 10.1007/978-3-642-35813-59, DOI 10.1007/978-3-642-35813-5_9]
   Evensen K. D, 2011, P 44 HAW INT C SYST, P1
   Falcone Y, 2009, LECT NOTES COMPUT SC, V5779, P40, DOI 10.1007/978-3-642-04694-0_4
   Falessi D, 2011, ACM COMPUT SURV, V43, DOI 10.1145/1978802.1978812
   Falessi D, 2010, EMPIR SOFTW ENG, V15, P250, DOI 10.1007/s10664-009-9121-0
   Faniyi Funmilade, 2014, 2014 IEEE/IFIP Conference on Software Architecture (WICSA), P91, DOI 10.1109/WICSA.2014.18
   Farias K, 2014, SOFTW SYST MODEL, V13, P1473, DOI 10.1007/s10270-012-0308-2
   Fayad M, 2005, Proceedings of the 2005 IEEE International Conference on Information Reuse and Integration, P108
   Fayad M, 2002, COMMUN ACM, V45, P111
   Fayad ME, 2007, IRI 2007: PROCEEDINGS OF THE 2007 IEEE INTERNATIONAL CONFERENCE ON INFORMATION REUSE AND INTEGRATION, P707, DOI 10.1109/IRI.2007.4296703
   Fayad ME, 2007, IRI 2007: PROCEEDINGS OF THE 2007 IEEE INTERNATIONAL CONFERENCE ON INFORMATION REUSE AND INTEGRATION, P701, DOI 10.1109/IRI.2007.4296702
   Fayad M. E., 2002, P WORKSH MOD BAS SOF, P211
   Fayad ME, 2005, Proceedings of the 2005 IEEE International Conference on Information Reuse and Integration, P597
   Fayad ME, 2003, PROCEEDINGS OF THE 2003 IEEE INTERNATIONAL CONFERENCE ON INFORMATION REUSE AND INTEGRATION, P566, DOI 10.1109/IRI.2003.1251466
   Fayad ME, 2002, COMMUN ACM, V45, P109, DOI 10.1145/505248.505278
   Fayad ME, 2001, COMMUN ACM, V44, P95, DOI 10.1145/383694.383713
   Fayad ME, 2016, PROCEEDINGS OF 2016 FUTURE TECHNOLOGIES CONFERENCE (FTC), P725, DOI 10.1109/FTC.2016.7821685
   Fayad ME, 2016, PROCEEDINGS OF 2016 FUTURE TECHNOLOGIES CONFERENCE (FTC), P706, DOI 10.1109/FTC.2016.7821682
   Febrero F, 2016, INFORM SOFTWARE TECH, V70, P18, DOI 10.1016/j.infsof.2015.09.006
   Febrero F, 2014, INFORM SOFTWARE TECH, V56, P839, DOI 10.1016/j.infsof.2014.03.006
   Feng T, 2006, SNPD 2006: SEVENTH ACIS INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING ARTIFICIAL INTELLIGENCE, NETWORKING, AND PARALLEL/DISTRIBUTED COMPUTING, PROCEEDINGS, P43
   Fenton N. E., 1998, Software metrics: a rigorous and practical approach
   Figueiredo E, 2009, 2009 JOINT WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE AND EUROPEAN CONFERENCE ON SOFTWARE ARCHITECTURE, P261, DOI 10.1109/WICSA.2009.5290815
   Figueiredo E, 2009, INT C PROGRAM COMPRE, P138, DOI 10.1109/ICPC.2009.5090037
   Filieri A, 2012, FORM ASP COMPUT, V24, P163, DOI 10.1007/s00165-011-0207-2
   Filieri A, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P341, DOI 10.1145/1985793.1985840
   FINKELSTEIN A, 1992, INT J SOFTW ENG KNOW, V2, P31, DOI 10.1142/S0218194092000038
   Fontana FA, 2016, 2016 13TH WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE (WICSA), P21, DOI 10.1109/WICSA.2016.37
   Fontana FA, 2011, IEEE ANNU SOFTW ENG, P48, DOI 10.1109/SEW.2011.13
   Frakes WB, 2005, IEEE T SOFTWARE ENG, V31, P529, DOI 10.1109/TSE.2005.85
   Garlan D., 2000, FUTURE SOFTWARE ENG, P91
   Garlan D., 2015, P INT C FUT SOFTW EN, P29
   Garlan D., 2009, Autonomic Computing and Networking, P31, DOI [DOI 10.1007/978-0-387-89828-5, DOI 10.1007/978-0-387-89828-52]
   Georgas JC, 2005, PROC INT CONF SOFTW, P658
   Ghosh R, 2010, SYM REL DIST SYST, P343, DOI 10.1109/SRDS.2010.49
   GHOSH S, 1993, ACM T PROGR LANG SYS, V15, P735, DOI 10.1145/155183.155228
   GLASS RL, 1995, IEEE SOFTWARE, V12, P63, DOI 10.1109/52.391837
   Göde N, 2011, EUR CON SFTWR MTNCE, P65, DOI 10.1109/CSMR.2011.11
   Gomaa H, 2011, SOFTWARE MODELING AND DESIGN: UML, USE CASES, PATTERNS, AND SOFTWARE ARCHITECTURES, P1, DOI 10.1017/CBO9780511779183
   Gorbenko A., 2008, P 2008 RISEEFTS JOIN, P49, DOI DOI 10.1145/1479772.1479781
   Gorbenko A, 2010, SYM REL DIST SYST, P92, DOI 10.1109/SRDS.2010.40
   Goverdhana R, 2004, PROCEEDINGS OF THE 2004 IEEE INTERNATIONAL CONFERENCE ON INFORMATION REUSE AND INTEGRATION (IRI-2004), P54, DOI 10.1109/IRI.2004.1431436
   Greenwood P, 2007, LECT NOTES COMPUT SC, V4609, P176
   Griesse R, 2007, THESIS KARL FRANZENS
   Grosser D, 2003, NINTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM, PROCEEDINGS, P252, DOI 10.1109/METRIC.2003.1232472
   Grosser D, 2002, ASE 2002: 17TH IEEE INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, P295, DOI 10.1109/ASE.2002.1115033
   Gu Q, 2013, J SYST SOFTWARE, V86, P1307, DOI 10.1016/j.jss.2012.12.035
   Guelfi N, 2011, OPEN COMPUT SCI, V1, P294, DOI 10.2478/s13537-011-0025-x
   Gurgel A, 2012, P INT COMP SOFTW APP, P89, DOI 10.1109/COMPSAC.2012.18
   Hammad M, 2011, SOFTWARE QUAL J, V19, P35, DOI 10.1007/s11219-010-9103-x
   Hamza H, 2003, LECT NOTES COMPUT SC, V2817, P191
   Hamza H. S, 2002, P WORKSH MOD BAS SOF
   Hamza H. S, 2002, P 17 ANN ACM SIGPLAN, P110
   Hamza H. S., 2004, P 19 ANN ACM SIGPLAN, P220
   Hamza H. S, 2003, P 18 ANN ACM SIGPLAN, P308
   Hamza H. S, 2005, P 20 ANN ACM SIGPLAN, P220
   Hamza HS., 2005, Proceedings of 2005 Workshop on Modeling and Analysis of Concerns in Software, P1
   Han SY, 2012, IEEE SYS MAN CYBERN, P1251, DOI 10.1109/ICSMC.2012.6377904
   Handani F., 2015, P INT C INF TECHN SY, P1
   Harder Jan, 2013, Journal of Software: Evolution and Process, V25, P1063, DOI 10.1002/smr.1551
   Heaven W, 2011, INT REQUIR ENG CONF, P79, DOI 10.1109/RE.2011.6051653
   Heitlager I, 2007, QUATIC 2007: 6TH INTERNATIONAL CONFERENCE ON THE QUALITY OF INFORMATION AND COMMUNICATIONS TECHNOLOGY, PROCEEDINGS, P30, DOI 10.1109/QUATIC.2007.8
   Hellerstein Joseph, 2009, IEEE Transactions on Network and Service Management, V6, P206, DOI 10.1109/TNSM.2009.04.090401
   Heo J, 2009, ACM/IEEE SIXTH INTERNATIONAL CONFERENCE ON AUTONOMIC COMPUTING AND COMMUNICATIONS (ICAC '09), P77
   Herzig K. S., 2010, 2010 32nd International Conference on Software Engineering (ICSE), P393, DOI 10.1145/1810295.1810401
   Hochstein L, 2005, INFORM SOFTWARE TECH, V47, P643, DOI 10.1016/j.infsof.2004.11.005
   Hollenbach C, 1997, COMMUN ACM, V40, P41, DOI 10.1145/255656.255694
   Holling C.S., 1973, Annual Rev Ecol Syst, V4, P1, DOI 10.1146/annurev.es.04.110173.000245
   Immonen A, 2008, SOFTW SYST MODEL, V7, P49, DOI 10.1007/s10270-006-0040-x
   International Organization for Standardization and International Electrotechnical Commission (ISO/IEC), 2010, 247652010E ISOIECIEE
   Ives AR, 2007, SCIENCE, V317, P58, DOI 10.1126/science.1133258
   Jaktman CB, 1999, INT FED INFO PROC, V12, P455
   Jamshidi P, 2013, EUR CON SFTWR MTNCE, P305, DOI 10.1109/CSMR.2013.39
   Jazayeri M, 2002, LECT NOTES COMPUT SC, V2361, P13
   Jenkins S, 2007, INFORM SCIENCES, V177, P2587, DOI 10.1016/j.ins.2007.01.021
   Jia CJ, 2016, J SYST SOFTWARE, V116, P206, DOI 10.1016/j.jss.2015.01.058
   Jiang ZM, 2015, IEEE T SOFTWARE ENG, V41, P1091, DOI 10.1109/TSE.2015.2445340
   Jiao WP, 2013, IEEE INT C ENG COMP, P37, DOI 10.1109/ICECCS.2013.16
   Jones C, 1996, COMPUTER, V29, P92, DOI 10.1109/2.507640
   Kabinna S, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P326, DOI 10.1109/SANER.2016.29
   Kagdi H, 2007, J SOFTW MAINT EVOL-R, V19, P77, DOI 10.1002/smr.344
   Kamata MI, 2007, INT REQUIR ENG CONF, P69, DOI 10.1109/RE.2007.31
   KAZMAN R, 1994, PROC INT CONF SOFTW, P81, DOI 10.1109/ICSE.1994.296768
   Kazman R, 1998, IEEE INT C ENG COMP, P68, DOI 10.1109/ICECCS.1998.706657
   Kazman R, 2001, PROC INT CONF SOFTW, P297, DOI 10.1109/ICSE.2001.919103
   Kazman R, 1996, IEEE SOFTWARE, V13, P47, DOI 10.1109/52.542294
   Kelly D, 2006, IEEE T SOFTWARE ENG, V32, P315, DOI 10.1109/TSE.2006.42
   Kemerer CF, 1999, IEEE T SOFTWARE ENG, V25, P493, DOI 10.1109/32.799945
   Keuler T, 2008, SEVENTH WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE, PROCEEDINGS, P19, DOI 10.1109/WICSA.2008.24
   Khakpour N., 2010, P 2010 ACM S APPL CO, P2536
   Kim JS, 2010, J SYST SOFTWARE, V83, P1216, DOI 10.1016/j.jss.2010.01.049
   Klein M., 1999, CMUSEI99TR022
   Kounev Samuel., 2012, Resilience Assessment and Evaluation of Computing Systems, P65
   Koziolek A., 2011, MODELS SOFTWARE ENG, V6627, P384
   Koziolek Anne, 2011, JOINT ACM SIGSOFT C, P33
   Koziolek H., 2011, P JOINT ACM SIGSOFT, P3, DOI DOI 10.1145/2000259.2000263
   Kramer J, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P259, DOI 10.1109/FOSE.2007.19
   Krinke J., 2011, P 5 INT WORKSHOP SOF, P28
   Krinke J, 2008, EIGHTH IEEE INTERNATIONAL WORKING CONFERENCE ON SOURCE CODE ANALYSIS AND MANIPULATION, PROCEEDINGS, P57, DOI 10.1109/SCAM.2008.14
   KRUCHTEN PB, 1995, IEEE SOFTWARE, V12, P42, DOI 10.1109/52.469759
   KRUEGER CW, 1992, COMPUT SURV, V24, P131, DOI 10.1145/130844.130856
   Krupitzer C, 2015, PERVASIVE MOB COMPUT, V17, P184, DOI 10.1016/j.pmcj.2014.09.009
   Kwasnik BH, 1999, LIBR TRENDS, V48, P22
   Laddaga R, 1999, IEEE INTELL SYST APP, V14, P26, DOI 10.1109/MIS.1999.769879
   Lago P, 2015, COMMUN ACM, V58, P70, DOI 10.1145/2714560
   Laprie J. C., 2008, 38 IEEE IFIP INT C D, P8
   Lavall~ee M, 2011, P 12 INT WORKSH PRIN, P61
   Lehman MM, 2001, ANN SOFTW ENG, V11, P15, DOI 10.1023/A:1012535017876
   Leigh J. R., 2004, Control theory, V64
   Letier E, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P83, DOI 10.1109/ICSE.2002.1007958
   Letier E, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P883, DOI 10.1145/2568225.2568239
   Leucker M, 2009, J LOGIC ALGEBR PROGR, V78, P293, DOI 10.1016/j.jlap.2008.08.004
   Lewis P. R., 2011, Proceedings of the 2011 Fifth IEEE Conference on Self-Adaptive and Self-Organizing Systems Workshops (SASOW 2011), P102, DOI 10.1109/SASOW.2011.25
   Lewis P. R., 2014, COMPUTER ME, P267, DOI [10.1142/9781783264186_0018, DOI 10.1142/9781783264186_0018]
   Lewis PR, 2015, COMPUTER, V48, P62, DOI 10.1109/MC.2015.235
   Li W, 2000, INFORM SOFTWARE TECH, V42, P373, DOI 10.1016/S0950-5849(99)00088-9
   LYAPUNOV AM, 1992, INT J CONTROL, V55, P531, DOI 10.1080/00207179208934253
   Magee J, 1999, INT FED INFO PROC, V12, P35
   Magee J., LTSA LABELLED TRANSI
   Mahdavi-Hezavehi S, 2017, INFORM SOFTWARE TECH, V90, P1, DOI 10.1016/j.infsof.2017.03.013
   Mahdy A, 2002, P 9 C PATT LANG PROG, P431
   Mahdy A., 2002, P WORKSH MOD BAS SOF
   Mahdy AM, 2004, PROCEEDINGS OF THE 2004 IEEE INTERNATIONAL CONFERENCE ON INFORMATION REUSE AND INTEGRATION (IRI-2004), P18, DOI 10.1109/IRI.2004.1431430
   Mannaert H, 2012, SOFTWARE PRACT EXPER, V42, P89, DOI 10.1002/spe.1051
   Mannaert H, 2011, SCI COMPUT PROGRAM, V76, P1210, DOI 10.1016/j.scico.2010.11.009
   Marquez D., 2007, P 5 INT MATH METH RE
   Martin R. C., 2002, AGILE SOFTWARE DEV P
   Mattsson M, 2000, J SOFTW MAINT-RES PR, V12, P79, DOI 10.1002/(SICI)1096-908X(200003/04)12:2<79::AID-SMR204>3.0.CO;2-A
   Mattsson M, 1999, TOOLS, V29, P118, DOI 10.1109/TOOLS.1999.779005
   McCann KS, 2000, NATURE, V405, P228, DOI 10.1038/35012234
   McDonnell T, 2013, PROC IEEE INT CONF S, P70, DOI 10.1109/ICSM.2013.18
   Medeiros A. L., 2010, 2010 IV Brazilian Symposium on Software Components, Architectures and Reuse (SBCARS), P130, DOI 10.1109/SBCARS.2010.23
   Medvidovic N, 2000, IEEE T SOFTWARE ENG, V26, P70, DOI 10.1109/32.825767
   Meedeniya I., 2011, QOSAISARCS, P85
   Mencagli Gabriele, 2013, 2013 International Conference on High Performance Computing & Simulation (HPCS), P11, DOI 10.1109/HPCSim.2013.6641387
   Mencagli G., 2011, Proceedings of the 2011 IEEE 3rd International Conference on Cloud Computing Technology and Science (CloudCom 2011), P296, DOI 10.1109/CloudCom.2011.47
   Mencagli G., 2013, P 1 ACM WORKSH OPT T, P33
   Mencagli G, 2014, ACM T AUTON ADAP SYS, V9, DOI 10.1145/2567929
   Meng A.C., 2001, EVALUATING SELF ADAP, P65
   Mirakhorli M, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P377, DOI 10.1109/MSR.2015.44
   Mo R, 2016, PROC INT CONF SOFTW, P499, DOI 10.1145/2884781.2884825
   Moghaddam FA, 2017, 11TH EUROPEAN CONFERENCE ON SOFTWARE ARCHITECTURE (ECSA 2017) - COMPANION VOLUME, P23, DOI 10.1145/3129790.3129824
   Mohagheghi P, 2004, PROC INT CONF SOFTW, P282, DOI 10.1109/ICSE.2004.1317450
   Mohanani R, 2016, 2016 IEEE/ACM 38TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING COMPANION (ICSE-C), P835, DOI 10.1145/2889160.2889254
   Molesini A, 2008, SEVENTH WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE, PROCEEDINGS, P29, DOI 10.1109/WICSA.2008.26
   Molesini A, 2010, J SYST SOFTWARE, V83, P711, DOI 10.1016/j.jss.2009.05.022
   Mondal M., 2012, P ACM S APPL COMPUTI, P1227, DOI DOI 10.1145/2245276.2231969
   Mondal M, 2018, EMPIR SOFTW ENG, V23, P693, DOI 10.1007/s10664-017-9528-y
   Mondal M, 2012, APPL COMPUT REV, V12, P20, DOI 10.1145/2387358.2387360
   MUSA JD, 1990, IEEE SOFTWARE, V7, P36, DOI 10.1109/52.60588
   Naab M., 2012, Proceedings of the 8th international ACM SIGSOFT conference on Quality of Software Architectures, P13
   Naganathan ER, 2009, 2009 THIRD IEEE INTERNATIONAL CONFERENCE ON SECURE SOFTWARE INTEGRATION AND RELIABILITY IMPROVEMENT, PROCEEDINGS, P431, DOI 10.1109/SSIRI.2009.35
   Naganathan ER., 2009, Proceedings of International Conference on Interaction Sciences, P643
   Nakagawa Elisa Yumi, 2008, 2008 IEEE 32nd International Computer Software and Applications Conference (COMPSAC), P1234, DOI 10.1109/COMPSAC.2008.171
   Nakatani T, 2014, IEICE T INF SYST, VE97D, P1039, DOI 10.1587/transinf.E97.D.1039
   Nakatani T, 2011, ASIA PAC SOFWR ENG, P357, DOI 10.1109/APSEC.2011.56
   Nehaniv C. L., 2007, P 3 INT IEEE WORKSH, pVI
   Neil M, 2008, RELIAB ENG SYST SAFE, V93, P933, DOI 10.1016/j.ress.2007.03.009
   Huynh NT, 2016, ACSIS-ANN COMPUT SCI, V8, P1715, DOI 10.15439/2016F170
   Nord R., 2003, Integrating the architecture tradeoff analaysis method (ATAM) with the cost benefit analysis method (CBAM), V1st
   Nord R. L., 2014, SIGSOFT SOFTW ENG NO, V39, P32
   Nord RL, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE COMPANION 2014), P185, DOI 10.1145/2591062.2591185
   Nuseibeh B, 2001, COMPUTER, V34, P115, DOI 10.1109/2.910904
   Olague HM, 2006, J SOFTW MAINT EVOL-R, V18, P237, DOI 10.1002/smr.332
   Oreizy P, 1999, IEEE INTELL SYST APP, V14, P54, DOI 10.1109/5254.769885
   Oreizy P, 1998, PROC INT CONF SOFTW, P177, DOI 10.1109/ICSE.1998.671114
   Ortu M, 2015, 2015 IEEE 2ND INTERNATIONAL WORKSHOP ON PATTERNS PROMOTION AND ANTI-PATTERNS PREVENTION (PPAP), P11, DOI 10.1109/PPAP.2015.7076850
   Ozkaya I., 2010, Proceedings of the Workshop on Sharing and Reusing Architectural Knowledge (SHARK), P52, DOI DOI 10.1145/1833335.1833343
   Ozkaya I., 2007, CMUSEI2007TR003
   Pandey R.K., 2010, ACM SIGSOFT Software Engineering Notes, V35, P1, DOI DOI 10.1145/1764810.1764828
   PARNAS DL, 1979, IEEE T SOFTWARE ENG, V5, P128, DOI 10.1109/TSE.1979.234169
   Pataricza A, 2013, LECT NOTES COMPUT SC, V8166, P1, DOI 10.1007/978-3-642-40894-6_1
   Patidar A, 2015, 2015 2ND INTERNATIONAL CONFERENCE ON COMPUTING FOR SUSTAINABLE GLOBAL DEVELOPMENT (INDIACOM), P967
   Patikirikorala T., 2012, 2012 7th International Symposium on Software Engineering for Adaptive and Self-Managing Systems, P33, DOI 10.1109/SEAMS.2012.6224389
   Patikirikorala T., 2011, 6th International Symposium on Software Engineering for Adaptive and Self-Managing Systems, P218, DOI DOI 10.1145/1988008.1988040
   Pelliccione P, 2009, IEEE T SOFTWARE ENG, V35, P325, DOI 10.1109/TSE.2008.104
   Penzenstadler Birgit, 2012, 16th International Conference on Evaluation & Assessment in Software Engineering (EASE 2012), P32, DOI 10.1049/ic.2012.0004
   Perez-Palacin D., 2011, P JOINT ACM SIGSOFT PROCJOINT ACM SIGSOF, P171
   Perry D. E., 1992, SIGSOFT Software Engineering Notes, V17, P40, DOI 10.1145/141874.141884
   Perry DE., 2000, P C FUT SOFTW ENG, P345, DOI DOI 10.1145/336512.336586
   Petersen K, 2008, 12 INT C EV ASS SOFT, P1, DOI 10.5555/2227115.2227123
   Petke Justyna, 2014, Genetic Programming. 17th European Conference (EuroGP 2014). Revised Selected Papers: LNCS 8599, P137, DOI 10.1007/978-3-662-44303-3_12
   Petrov P., 2012, 2012 IEEE First International Workshop on the Twin Peaks of Requirements and Architecture (Twin Peaks), P20, DOI 10.1109/TwinPeaks.2012.6344556
   Pfahl Dietmar, 2007, Software Process: Improvement and Practice, V12, P475, DOI 10.1002/spip.336
   Pfahl D, 2006, LECT NOTES COMPUT SC, V3966, P262
   Poornima U. S., 2015, INVESTIGATION COUPLI, P645
   Porter J., 2010, P 10 ACM INT C EMB S, P29
   Prabhakar P, 2016, HSCC'16: PROCEEDINGS OF THE 19TH INTERNATIONAL CONFERENCE ON HYBRID SYSTEMS: COMPUTATION AND CONTROL, P71, DOI 10.1145/2883817.2883840
   Prabhakar P, 2015, LECT NOTES COMPUT SC, V8931, P318
   Rafiliu S, 2013, REAL-TIME SYST, V49, P367, DOI 10.1007/s11241-013-9176-2
   Rafiliu S, 2011, EUROMICRO, P151, DOI 10.1109/ECRTS.2011.22
   Rahman MS, 2014, IEEE INT WORK C SO, P31, DOI 10.1109/SCAM.2014.13
   Rajlich VT, 2000, COMPUTER, V33, P66, DOI 10.1109/2.869374
   Ramirez Andres J., 2012, 2012 7th International Symposium on Software Engineering for Adaptive and Self-Managing Systems, P99, DOI 10.1109/SEAMS.2012.6224396
   Ratiu D, 2004, CSMR 2004: EIGHTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P223
   Riaz M, 2009, INT SYMP EMP SOFTWAR, P368, DOI 10.1109/esem.2009.5314233
   Riaz M, 2009, COMM COM INF SC, V59, P119
   Robillard MP, 2006, PROC IEEE INT CONF S, P479
   Roshandel R, 2007, LECT NOTES COMPUT SC, V4880, P108
   ROWE GW, 1985, J THEOR BIOL, V115, P269, DOI 10.1016/S0022-5193(85)80100-4
   Ruohonen J, 2015, 2015 IEEE/ACM 2ND INTERNATIONAL WORKSHOP ON SOFTWARE ARCHITECTURE AND METRICS (SAM), P41, DOI 10.1109/SAM.2015.13
   Salama M, 2017, J SYST SOFTWARE, V133, P95, DOI 10.1016/j.jss.2017.07.041
   Salama M, 2015, 2015 IEEE 8TH INTERNATIONAL CONFERENCE ON CLOUD COMPUTING, P844, DOI 10.1109/CLOUD.2015.116
   Salehie M, 2009, ACM T AUTON ADAP SYS, V4, DOI 10.1145/1516533.1516538
   Samadzadeh M. H., 1994, 22nd Annual 1994 ACM Computer Science Conference. Scaling Up: Meeting the Challenge of Complexity in Real-World Computing Applications. Proceedings, P312, DOI 10.1145/197530.197642
   Samoladas I, 2008, INT FED INFO PROC, V275, P237
   Sangpuwong A., 2014, COMP STABILITY MODEL, P322
   Schmid S., 2010, P 3 INT WORKSH REL A, P1
   SCHNEIDER M, 1993, COMPUT SURV, V25, P45, DOI 10.1145/151254.151256
   Schneidewind NF, 1999, IEEE T SOFTWARE ENG, V25, P769, DOI 10.1109/32.824387
   Seo C, 2008, SEVENTH WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE, PROCEEDINGS, P277, DOI 10.1109/WICSA.2008.28
   Sethi K, 2009, 2009 JOINT WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE AND EUROPEAN CONFERENCE ON SOFTWARE ARCHITECTURE, P269, DOI 10.1109/WICSA.2009.5290817
   Shaw M., 2006, CMUISRI06101
   Shaw M., 1996, SOFTWARE ARCHITECTUR
   Shin ME, 2005, SCI COMPUT PROGRAM, V57, P27, DOI 10.1016/j.scico.2004.10.003
   Singh S. K, 2010, P 17 C PATT LANG PRO, P1
   Sjoberg DIK, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P358, DOI 10.1109/FOSE.2007.30
   SMITH LMC, 1992, STRUCT PROGRAM, V13, P35
   Software Engineering Standards Committee of the IEEE Computer Society, 1998, 10611998 IEEE
   Software Engineering Standards Committee of the IEEE Computer Society, 1998, 8301998 IEEE, P1
   Software Engineering Standards Subcommittee of the Technical Committee on Software Engineering of the IEEE Computer Society, 1988, 98211988 IEEE
   Software Engineering Standards Subcommittee of the Technical Committee on Software Engineering of the IEEE Computer Society, 1988, 98221988 IEEE
   Sommerville I., 2011, Software engineering
   Soong N. L, 1997, P ANN C, P163
   Standards Committee of the IEEE Reliability Society, 2017, IEEE Std 1633-2016 (Revision of IEEE Std 1633-2008), P1, DOI DOI 10.1109/IEEESTD.2017.7827907
   Stankovic JA, 2001, 22ND IEEE REAL-TIME SYSTEMS SYMPOSIUM, PROCEEDINGS, P59, DOI 10.1109/REAL.2001.990596
   STANKOVIC JA, 1985, IEEE T SOFTWARE ENG, V11, P1141, DOI 10.1109/TSE.1985.231862
   Sterbenz J.P., 2013, Computer Communications and Networks (ICCCN), 2013 22nd International Conference on, P1
   Szvetits M, 2016, SOFTW SYST MODEL, V15, P31, DOI 10.1007/s10270-013-0394-9
   Tabuada P, 2012, EMSOFT '12: PROCEEDINGS OF THE TENTH AMC INTERNATIONAL CONFERENCE ON EMBEDDED SOFTWARE 2012, P217
   Tamburri D. A., 2012, 2012 7th IEEE International Conference on Global Software Engineering (ICGSE 2012), P114, DOI 10.1109/ICGSE.2012.25
   Tamburri DA, 2015, J INTERNET SERV APPL, V6, DOI 10.1186/s13174-015-0024-6
   Tamburri DA, 2013, 2013 6TH INTERNATIONAL WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING (CHASE), P93, DOI 10.1109/CHASE.2013.6614739
   Tamburri DA, 2013, ACM COMPUT SURV, V46, DOI 10.1145/2522968.2522971
   Tamburri DA, 2013, IEEE SOFTWARE, V30, P29, DOI 10.1109/MS.2012.170
   Tang A, 2006, J SYST SOFTWARE, V79, P1792, DOI 10.1016/j.jss.2006.04.029
   TANG D, 1995, DIG PAP INT SYMP FAU, P434, DOI 10.1109/FTCS.1995.466956
   Threm D, 2015, 2015 IEEE 26TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING (ISSRE), P112, DOI 10.1109/ISSRE.2015.7381805
   Ting C, 2011, COMM COM INF SC, V231, P387
   Tonu SA, 2006, 10TH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P259
   Tsantalis N, 2005, IEEE T SOFTWARE ENG, V31, P601, DOI 10.1109/TSE.2005.83
   van Gurp J, 2005, J SOFTW MAINT EVOL-R, V17, P277, DOI 10.1002/smr.313
   van Gurp J, 2002, J SYST SOFTWARE, V61, P105, DOI 10.1016/S0164-1212(01)00152-2
   van Lamsweerde A., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, P5, DOI 10.1109/ICSE.2000.870392
   van Lamsweerde A., 2009, REQUIREMENTS ENG SYS
   Van Landuyt D., 2012, DOMAIN DRIVEN DISCOV, P1
   Van Landuyt D, 2009, AOSD'09: 8TH INTERNATIONAL CONFERENCE ON ASPECT-ORIENTED SOFTWARE DEVELOPMENT, P75
   Van Landuyt D, 2009, 2009 ICSE WORKSHOP ON ASPECT-ORIENTED REQUIREMENTS ENGINEERING AND ARCHITECTURE DESIGN, P1, DOI 10.1109/EA.2009.5071576
   Vasa R, 2007, PROC IEEE INT CONF S, P74
   Venters C. C., 2014, CEUR WORKSH P CEUR, P7
   Villegas NM, 2017, MANAGING TRADE-OFFS IN ADAPTABLE SOFTWARE ARCHITECTURES, P17, DOI 10.1016/B978-0-12-802855-1.00002-2
   Villegas Norha M., 2011, 2011 ICSE S SOFTW EN, P80
   Wang HT, 2015, SCI CHINA PHYS MECH, V58, DOI 10.1007/s11433-015-5721-4
   Wang J, 2010, PROC 48 ANN SE REGIO, P1
   Wang Z-J., 2006, ACM SIGSOFT Software Engineering Notes, V31, P1
   Weis T, 2011, P 2011 WORKSH ORG CO, P59, DOI DOI 10.1145/1998642.1998653
   Welsh K, 2014, LECT NOTES COMPUT SC, V8780, P122, DOI 10.1007/978-3-662-44871-7_5
   Williams BJ, 2010, INFORM SOFTWARE TECH, V52, P31, DOI 10.1016/j.infsof.2009.07.002
   Witt B.I., 1994, Software architecture and design: principles, models, and methods
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
   Wohlin C, 2014, 18 INT C EV ASS SOFT, P1, DOI DOI 10.1145/2601248.2601268
   Wolfram N., 2018, P 5 IFIP C SUST INT, P21
   Wu SS, 2007, IRI 2007: PROCEEDINGS OF THE 2007 IEEE INTERNATIONAL CONFERENCE ON INFORMATION REUSE AND INTEGRATION, P730
   Xavier P. E, 2009, SIGSOFT SOFTW ENG NO, V34, P1
   Yamauchi Y, 2010, PODC 2010: PROCEEDINGS OF THE 2010 ACM SYMPOSIUM ON PRINCIPLES OF DISTRIBUTED COMPUTING, P406, DOI 10.1145/1835698.1835794
   Yang JF, 2014, COMMUN ACM, V57, P58, DOI 10.1145/2500875
   Yau S. S., 1984, Proceedings COMPSAC 84. The IEEE Computer Society's Eighth International Computer Software & Applications Conference (Cat. No. 84CH2096-6), P109
   YAU SS, 1980, IEEE T SOFTWARE ENG, V6, P545, DOI 10.1109/TSE.1980.234503
   YAU SS, 1985, IEEE T SOFTWARE ENG, V11, P849, DOI 10.1109/TSE.1985.232544
   Yavari E, 2013, P 18 ANN ACM SIGPLAN, P324
   Yerramalla S, 2005, I C DEPEND SYS NETWO, P70, DOI 10.1109/DSN.2005.89
   Yu L, 2009, IET SOFTW, V3, P26, DOI 10.1049/iet-sen:20070099
   ZAMES G, 1966, IEEE T AUTOMAT CONTR, VAC11, P465, DOI 10.1109/TAC.1966.1098356
   Zhao JJ, 2002, J SOFTW MAINT EVOL-R, V14, P317, DOI 10.1002/smr.258
NR 419
TC 2
Z9 2
U1 1
U2 13
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUL 1
PY 2021
VL 47
IS 7
BP 1468
EP 1510
DI 10.1109/TSE.2019.2925616
PG 43
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA TL9VG
UT WOS:000675200000001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Rajbahadur, GK
   Wang, SW
   Oliva, GA
   Kamei, Y
   Hassan, AE
AF Rajbahadur, Gopi Krishnan
   Wang, Shaowei
   Oliva, Gustavo A.
   Kamei, Yasutaka
   Hassan, Ahmed E.
TI The Impact of Feature Importance Methods on the Interpretation of Defect
   Classifiers
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Software engineering; Computational modeling; Internet; Software
   quality; Predictive models; Neural networks; Logistics; Model
   interpretation; model agnostic interpretation; built-in interpretation;
   feature Importance analysis; variable importance
ID PREDICTION MODELS; RESEARCHER BIAS; CODE CHANGES; SOFTWARE; METRICS;
   FRAMEWORK; RULE
AB Classifier specific (CS) and classifier agnostic (CA) feature importance methods are widely used (often interchangeably) by prior studies to derive feature importance ranks from a defect classifier. However, different feature importance methods are likely to compute different feature importance ranks even for the same dataset and classifier. Hence such interchangeable use of feature importance methods can lead to conclusion instabilities unless there is a strong agreement among different methods. Therefore, in this paper, we evaluate the agreement between the feature importance ranks associated with the studied classifiers through a case study of 18 software projects and six commonly used classifiers. We find that: 1) The computed feature importance ranks by CA and CS methods do not always strongly agree with each other. 2) The computed feature importance ranks by the studied CA methods exhibit a strong agreement including the features reported at top-1 and top-3 ranks for a given dataset and classifier, while even the commonly used CS methods yield vastly different feature importance ranks. Such findings raise concerns about the stability of conclusions across replicated studies. We further observe that the commonly used defect datasets are rife with feature interactions and these feature interactions impact the computed feature importance ranks of the CS methods (not the CA methods). We demonstrate that removing these feature interactions, even with simple methods like CFS improves agreement between the computed feature importance ranks of CA and CS methods. In light of our findings, we provide guidelines for stakeholders and practitioners when performing model interpretation and directions for future research, e.g., future research is needed to investigate the impact of advanced feature interaction removal methods on computed feature importance ranks of different CS methods.
C1 [Rajbahadur, Gopi Krishnan] Huawei, Ctr Software Excellence, Markham, ON, Canada.
   [Oliva, Gustavo A.; Hassan, Ahmed E.] Queens Univ, Sch Comp, Software Anal & Intelligence Lab SAIL, Kingston, ON K7L 3N6, Canada.
   [Wang, Shaowei] Univ Manitoba, Dept Comp Sci, Winnipeg, MB R3T 2N2, Canada.
   [Kamei, Yasutaka] Kyushu Univ, Grad Sch, Principles Software Languages POSL Lab, Fukuoka 8190395, Japan.
   [Kamei, Yasutaka] Kyushu Univ, Faulty Informat Sci & Elect Engn, Fukuoka 8190395, Japan.
C3 Huawei Technologies; Queens University - Canada; University of Manitoba;
   Kyushu University; Kyushu University
RP Wang, SW (corresponding author), Univ Manitoba, Dept Comp Sci, Winnipeg, MB R3T 2N2, Canada.
EM gopi.krishnan.rajbahadur1@huawei.com; shaowei@cs.umanitoba.ca;
   gustavo@cs.queensu.ca; kamei@ait.kyushu-u.ac.jp; ahmed@cs.queensu.ca
RI KHALIFA, AHMED khalifa/HKF-2246-2023
OI KHALIFA, AHMED khalifa/0000-0002-2918-7572; Rajbahadur, Gopi
   Krishnan/0000-0003-1812-5365
FU JSPS KAKENHI Japan [JP18H03222]; JSPS International Joint Research
   Program; SNSF
FX This work was partially supported by JSPS KAKENHI Japan grant no.
   JP18H03222 and JSPS International Joint Research Program with SNSF
   (Project "SENSOR").
CR Abebe SL, 2016, EMPIR SOFTW ENG, V21, P1107, DOI 10.1007/s10664-015-9377-5
   Akoglu H, 2018, TURK J EMERG MED, V18, P91, DOI 10.1016/j.tjem.2018.08.001
   Angelis L, 2000, SEVENTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM - METRICS 2001, PROCEEDINGS, P4
   Arisholm E., 2006, ISESE 06 P 2006 ACMI, P8
   Arisholm E, 2010, J SYST SOFTWARE, V83, P2, DOI 10.1016/j.jss.2009.06.055
   Auret L, 2011, CHEMOMETR INTELL LAB, V105, P157, DOI 10.1016/j.chemolab.2010.12.004
   Avati A, 2018, BMC MED INFORM DECIS, V18, DOI 10.1186/s12911-018-0677-8
   Bachmann Adrian, 2010, Proceedings of the 2010 7th IEEE Working Conference on Mining Software Repositories (MSR 2010), P62, DOI 10.1109/MSR.2010.5463286
   Bao L., 2019, IEEE Transactions on Software Engineering (TSE)
   Bao LF, 2017, IEEE WORK CONF MIN S, P170, DOI 10.1109/MSR.2017.58
   Ben Othmane L, 2017, DATA SCI ENG, V2, P107, DOI 10.1007/s41019-016-0019-8
   Bergstra J, 2012, J MACH LEARN RES, V13, P281
   Bird C., 2011, P 19 ACM SIGSOFT S 1, P4, DOI DOI 10.1145/2025113.2025119
   Bird C, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P121, DOI 10.1145/1595696.1595716
   Bird C, 2009, PROC INT CONF SOFTW, P518, DOI 10.1109/ICSE.2009.5070550
   Blincoe K, 2019, EMPIR SOFTW ENG, V24, P1610, DOI 10.1007/s10664-018-9656-z
   Breiman L., 2001, Machine Learning, V45, P5, DOI 10.1023/A:1010933404324
   Briand LC, 1998, NINTH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P334, DOI 10.1109/ISSRE.1998.730898
   Caglayan B, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P89, DOI 10.1109/ICSE.2015.138
   Cahill J, 2013, IEEE AUS SOFT ENGR, P211, DOI 10.1109/ASWEC.2013.33
   Calefato F, 2019, EMPIR SOFTW ENG, V24, P854, DOI 10.1007/s10664-018-9642-5
   Candès E, 2018, J R STAT SOC B, V80, P551, DOI 10.1111/rssb.12265
   Cataldo M, 2009, IEEE T SOFTWARE ENG, V35, P864, DOI 10.1109/TSE.2009.42
   Chakraborty Supriyo, Interpretability of Deep Learning Models: A Survey of Results, 2017 IEEE SMARTWORLD
   Chen D, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P456, DOI 10.1145/3236024.3236050
   Covert I.C., 2020, Advances in Neural Information Processing Systems, V33, P17212
   D'Ambros M, 2012, EMPIR SOFTW ENG, V17, P531, DOI 10.1007/s10664-011-9173-9
   De González AB, 2007, ANN APPL STAT, V1, P371, DOI 10.1214/07-AOAS124
   Dehghan A, 2017, IEEE WORK CONF MIN S, P124, DOI 10.1109/MSR.2017.53
   Devlin S., 2019, ARXIV 190507631
   Dey T, 2018, PROMISE'18: PROCEEDINGS OF THE 14TH INTERNATIONAL CONFERENCE ON PREDICTIVE MODELS AND DATA ANALYTICS IN SOFTWARE ENGINEERING, P66, DOI 10.1145/3273934.3273942
   EFRON B, 1983, J AM STAT ASSOC, V78, P316, DOI 10.2307/2288636
   El-Emam K., 2001, Empirical Software Engineering, V6, P207, DOI 10.1023/A:1011487332587
   Esteves G, 2020, AUTOMAT SOFTW ENG, V27, P369, DOI 10.1007/s10515-020-00277-4
   Fan YR, 2018, EMPIR SOFTW ENG, V23, P3346, DOI 10.1007/s10664-018-9602-0
   Fisher A, 2019, J MACH LEARN RES, V20
   Freeman G.H., 1985, J. Appl Stat, V12, P3
   Frieman JH, 2008, ANN APPL STAT, V2, P916, DOI 10.1214/07-AOAS148
   Fu W, 2016, INFORM SOFTWARE TECH, V76, P135, DOI 10.1016/j.infsof.2016.04.017
   Gay G, 2010, AUTOMAT SOFTW ENG, V17, P439, DOI 10.1007/s10515-010-0072-x
   Ghaleb TA, 2019, EMPIR SOFTW ENG, V24, P2102, DOI 10.1007/s10664-019-09695-9
   Ghotra B, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P789, DOI 10.1109/ICSE.2015.91
   Gosiewska A., 2019, IBREAKDOWN UNCERTAIN
   Gousios G, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P345, DOI 10.1145/2568225.2568260
   Grömping U, 2009, AM STAT, V63, P308, DOI 10.1198/tast.2009.08199
   Guo L, 2004, 15TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P417
   Halimu C, 2019, PROCEEDINGS OF THE 3RD INTERNATIONAL CONFERENCE ON MACHINE LEARNING AND SOFT COMPUTING (ICMLSC 2019), P1, DOI 10.1145/3310986.3311023
   Hall M. A., 1999, Correlation-based feature subset selection for machine learning
   Hall MA, 2003, IEEE T KNOWL DATA EN, V15, P1437, DOI 10.1109/TKDE.2003.1245283
   Haran M, 2007, IEEE T SOFTWARE ENG, V33, P287, DOI 10.1109/TSE.2007.1004
   Harrell FE, 2015, SPRINGER SER STAT, DOI 10.1007/978-3-319-19425-7
   Hassan AE, 2005, PROC IEEE INT CONF S, P263
   Herbsleb JD, 2003, IEEE T SOFTWARE ENG, V29, P481, DOI 10.1109/TSE.2003.1205177
   Herzig K, 2016, EMPIR SOFTW ENG, V21, P303, DOI 10.1007/s10664-015-9376-6
   Herzig K, 2014, PROC INT SYMP SOFTW, P300, DOI 10.1109/ISSRE.2014.21
   Hihn J, 2015, 2015 30TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING WORKSHOP (ASEW), P5, DOI 10.1109/ASEW.2015.27
   Dam HK, 2018, 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: NEW IDEAS AND EMERGING TECHNOLOGIES RESULTS (ICSE-NIER), P53, DOI 10.1145/3183399.3183424
   Hooker S, 2019, ADV NEUR IN, V32
   Huang Q, 2017, PROC IEEE INT CONF S, P159, DOI 10.1109/ICSME.2017.51
   Husain A., 2015, THESIS YOUNGSTOWN ST
   Jaccard P., 1901, B SOCIT VAUDOISE SCI, V37, P547, DOI [10.5169/seals-266440, DOI 10.5169/SEALS-266440]
   Jahanshahi H, 2019, 15TH INTERNATIONAL CONFERENCE ON PREDICTIVE MODELS AND DATA ANALYTICS IN SOFTWARE ENGINEERING (PROMISE'19), P90, DOI 10.1145/3345629.3351449
   Janitza S, 2013, BMC BIOINFORMATICS, V14, DOI 10.1186/1471-2105-14-119
   Jiarpakdee J, 2022, IEEE T SOFTWARE ENG, V48, P166, DOI 10.1109/TSE.2020.2982385
   Jiarpakdee J, 2020, EMPIR SOFTW ENG, V25, P3590, DOI 10.1007/s10664-020-09848-1
   Jiarpakdee J, 2021, IEEE T SOFTWARE ENG, V47, P320, DOI 10.1109/TSE.2019.2891758
   Jiarpakdee J, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: COMPANION PROCEEDINGS (ICSE-COMPANION 2019), P210, DOI 10.1109/ICSE-Companion.2019.00084
   Jiarpakdee J, 2018, PROC IEEE INT CONF S, P92, DOI 10.1109/ICSME.2018.00018
   Kamei Y, 2013, IEEE T SOFTWARE ENG, V39, P757, DOI 10.1109/TSE.2012.70
   Kendall M. G., 1948, RANK CORRELATION MET
   KITCHENHAM B, 1995, IEEE T SOFTWARE ENG, V21, P929, DOI 10.1109/32.489070
   Knab P., 2006, PROC INT WORKSHOP MI, P119
   Kononenko O, 2015, PROC IEEE INT CONF S, P111, DOI 10.1109/ICSM.2015.7332457
   Kuhn M, 2007, VARIABLE IMPORTANCE
   Kuhn M, 2008, J STAT SOFTW, V28, P1, DOI 10.18637/jss.v028.i05
   Lessmann S, 2008, IEEE T SOFTWARE ENG, V34, P485, DOI 10.1109/TSE.2008.35
   Lewis C, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P372, DOI 10.1109/ICSE.2013.6606583
   Lipton ZC., 2018, QUEUE, V16, P31, DOI 10.1145/3236386.3241340
   Lundberg S. M., 2018, ARXIV 180203888
   Lundberg SM, 2017, ADV NEUR IN, V30
   Ma SQ, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P175, DOI 10.1145/3236024.3236082
   Malgonde O, 2019, EMPIR SOFTW ENG, V24, P1017, DOI 10.1007/s10664-018-9647-0
   Marks L., 2011, P 7 INT C PRED MOD S, DOI [10.1145/2020390.202040, DOI 10.1145/2020390.202040]
   Martens D, 2019, EMPIR SOFTW ENG, V24, P3316, DOI 10.1007/s10664-019-09706-9
   McIntosh S, 2018, IEEE T SOFTWARE ENG, V44, P412, DOI 10.1109/TSE.2017.2693980
   McIntosh S, 2016, EMPIR SOFTW ENG, V21, P2146, DOI 10.1007/s10664-015-9381-9
   Menzies T, 2012, EMPIR SOFTW ENG, V17, P1, DOI 10.1007/s10664-011-9193-5
   Molnar Molnar C. C., Lulu. com
   Morales R, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P171, DOI 10.1109/SANER.2015.7081827
   Mori T, 2019, EMPIR SOFTW ENG, V24, P779, DOI 10.1007/s10664-018-9638-1
   Muller MP, 2005, CLIN INFECT DIS, V40, P1079, DOI 10.1086/428577
   Nagappan N, 2005, PROC INT CONF SOFTW, P284, DOI 10.1145/1062455.1062514
   Niedermayr R, 2019, PROCEEDINGS OF EASE 2019 - EVALUATION AND ASSESSMENT IN SOFTWARE ENGINEERING, P189, DOI 10.1145/3319008.3319021
   Parnin C., 2011, P 2011 INT S SOFTWAR, P199, DOI [10.1145/2001420.2001445, DOI 10.1145/2001420.2001445]
   Peng K., 2020, ARXIV 200306887
   Premraj R, 2011, INT SYMP EMP SOFTWAR, P215, DOI 10.1109/ESEM.2011.30
   Rajbahadur GK, 2021, IEEE T SOFTWARE ENG, V47, P1414, DOI 10.1109/TSE.2019.2924371
   Rajbahadur GK, 2017, IEEE WORK CONF MIN S, P135, DOI 10.1109/MSR.2017.4
   Ribeiro MT, 2016, KDD'16: PROCEEDINGS OF THE 22ND ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P1135, DOI 10.1145/2939672.2939778
   Santos Jaime, 2013, Advances in Data Mining. Applications and Theoretical Aspects. 13th Industrial Conference, ICDM 2013. Proceedings: LNCS 7987, P85, DOI 10.1007/978-3-642-39736-3_7
   Sayyad Shirabad J., 2005, The PROMISE Repository of Software Engineering Databases
   Shapley Lloyd S, 1953, Contributions to the Theory of Games (AM-28), V2, P307, DOI DOI 10.1515/9781400881970-018
   Shepperd M, 2014, IEEE T SOFTWARE ENG, V40, P603, DOI 10.1109/TSE.2014.2322358
   Shihab E., 2012, P ACM SIGSOFT 20 INT, P62, DOI 10
   Shihab E., 2011, Proceedings of the ACM SIGSOFT symposium and the European Conference on Foundations of Software Engineering, P300
   Strobl C, 2007, BMC BIOINFORMATICS, V8, DOI 10.1186/1471-2105-8-25
   Strobl C, 2008, BMC BIOINFORMATICS, V9, DOI 10.1186/1471-2105-9-307
   Subramanyam R, 2003, IEEE T SOFTWARE ENG, V29, P297, DOI 10.1109/TSE.2003.1191795
   Tantithamthavorn C, 2020, IEEE T SOFTWARE ENG, V46, P1200, DOI 10.1109/TSE.2018.2876537
   Tantithamthavorn C, 2018, 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING - SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2018), P286, DOI 10.1145/3183519.3183547
   Tantithamthavorn C, 2019, IEEE T SOFTWARE ENG, V45, P683, DOI 10.1109/TSE.2018.2794977
   Tantithamthavorn C, 2017, IEEE T SOFTWARE ENG, V43, P1, DOI 10.1109/TSE.2016.2584050
   Tantithamthavorn C, 2016, IEEE T SOFTWARE ENG, V42, P1092, DOI 10.1109/TSE.2016.2553030
   Tantithamthavorn C, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P812, DOI 10.1109/ICSE.2015.93
   Theisen C, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P199, DOI 10.1109/ICSE.2015.148
   Thong Hoang, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P34, DOI 10.1109/MSR.2019.00016
   Tian Y, 2015, PROC IEEE INT CONF S, P301, DOI 10.1109/ICSM.2015.7332476
   Treude Christoph, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P84, DOI 10.1109/MSR.2019.00022
   Viggiato M., 2020, Proceedings of the AAAI Conference on Artificial Intelligence and Interactive Digital Entertainment, V16, P294
   Wang SW, 2018, EMPIR SOFTW ENG, V23, P1552, DOI 10.1007/s10664-017-9558-5
   Wright MN, 2016, BMC BIOINFORMATICS, V17, DOI 10.1186/s12859-016-0995-8
   Wu XD, 2008, KNOWL INF SYST, V14, P1, DOI 10.1007/s10115-007-0114-2
   Yu TT, 2019, IEEE T SOFTWARE ENG, V45, P558, DOI 10.1109/TSE.2018.2791521
   Zhang F, 2017, IEEE T SOFTWARE ENG, V43, P476, DOI 10.1109/TSE.2016.2599161
   Zhou JY, 2021, IEEE T SOFTWARE ENG, V47, P2919, DOI 10.1109/TSE.2020.2974469
   Zimmerman T, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P91, DOI 10.1145/1595696.1595713
   Zimmermann T, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P531, DOI 10.1145/1368088.1368161
NR 127
TC 37
Z9 40
U1 4
U2 30
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD FEB 4
PY 2021
VL 48
IS 7
BP 2245
EP 2261
DI 10.1109/TSE.2021.3056941
PG 17
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 2Y5ZE
UT WOS:000825974000001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU El-Fakih, K
   Bochmann, GV
AF El-Fakih, Khaled
   Bochmann, Gregor V.
TI Symbolic Refinement of Extended State Machines with Applications to the
   Automatic Derivation of Sub-Components and Contr ollers
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Requirements/specifications; component design and refinement; discrete
   event control systems; extended state machines; submodule construction
   and automatic derivation of a component behavior
AB Nowadays, extended state machines are prominent requirements specification techniques due to their capabilities of modeling complex systems in a compact way. These machines extend the standard state machines with variables and have transitions guarded by enabling predicates and may include variable update statements. Given a system modeled as an extended state machine, with possibly infinite state space and some non-controllable (parameterized) interactions, a pruning procedure is proposed to symbolically derive a maximal sub-machine of the original system that satisfies certain conditions; namely, some safeness and absence of undesirable deadlocks which could be produced during pruning. In addition, the user may specify, as predicates associated with states, some general goal assertions that should be preserved in the obtained sub-machine. Further, one may also specify some specific requirements such as the elimination of certain undesirable deadlocks at states, or fail states that should never be reached. Application examples are given considering deadlock avoidance and loops including infinite loops over non-controllable interactions showing that the procedure may not terminate. In addition, the procedure is applied for finding a controller of a system to be controlled. The approach generalizes existing work in respect to the considered extended machine model and the possibility of user defined control objectives written as assertions at states.
C1 [El-Fakih, Khaled] Amer Univ Sharjah, Coll Engn, Sharjah, U Arab Emirates.
   [Bochmann, Gregor V.] Univ Ottawa, Sch Elect Engn & Comp Sci, Ottawa, ON, Canada.
C3 American University of Sharjah; University of Ottawa
RP El-Fakih, K (corresponding author), Amer Univ Sharjah, Coll Engn, Sharjah, U Arab Emirates.
EM kelfakih@aus.edu; Bochmann@uottawa.ca
OI Bochmann, Gregor/0000-0001-9870-1144
FU AUS [FRG16-T18]
FX The first author would like to acknowledge the partial support of AUS
   FRG16-T18.
CR Aho A.V., 1986, COMPILERS PRINCIPLES
   Barnett Mike, 2005, PASTE, V31, P82, DOI [DOI 10.1145/1108792, DOI 10.1145/1108792.1108813]
   Bochmann G. V., 2012, Discrete Event Dyn. Syst, V23, P27
   BRANDIN BA, 1994, IEEE T AUTOMAT CONTR, V39, P329, DOI 10.1109/9.272327
   Ciolek D, 2017, IEEE T SOFTWARE ENG, V43, P19, DOI 10.1109/TSE.2016.2564959
   Cousot P., 1977, C RECORD 4 ANN ACM S, P238, DOI DOI 10.1145/512950.512973
   Daou B, 2005, LECT NOTES COMPUT SC, V3731, P396
   de Alfaro L., 2001, Software Engineering Notes, V26, P109, DOI 10.1145/503271.503226
   Delzanno G., 2000, Computer Aided Verification, V1855, P53
   Dijkstra E. W., 1976, A Discipline of Pro-gramming
   Drissi J., 1999, 113 DIRO U MONTR
   El-Fakih K, 2016, COMPUT J, V59, P1805, DOI 10.1093/comjnl/bxw028
   Fei ZN, 2014, IEEE T CONTR SYST T, V22, P2368, DOI 10.1109/TCST.2014.2303134
   Furia CA, 2014, ACM COMPUT SURV, V46, DOI 10.1145/2506375
   Giannakopoulou D, 2002, ASE 2002: 17TH IEEE INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, P3, DOI 10.1109/ASE.2002.1114984
   Huajun Qin, 1991, Formal Aspects of Computing, V3, P284, DOI 10.1007/BF01245634
   Inverardi P, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P3, DOI 10.1109/ICSE.2013.6606546
   Jéron T, 2006, INT FED INFO PROC, V209, P197
   Kalyon G, 2012, DISCRETE EVENT DYN S, V22, P121, DOI 10.1007/s10626-011-0101-3
   Kelekar S. G. H, 1994, P 13 INT S PROT SPEC, P307
   Kumar R, 1997, DISCRETE EVENT DYN S, V7, P295, DOI 10.1023/A:1008258331497
   Le Gall T, 2005, IEEE DECIS CONTR P, P30
   LIN F, 1988, INFORM SCIENCES, V44, P173, DOI 10.1016/0020-0255(88)90001-1
   MERLIN P, 1983, ACM T PROGR LANG SYS, V5, P1, DOI 10.1145/357195.357196
   Ouedraogo L, 2011, IEEE T AUTOM SCI ENG, V8, P560, DOI 10.1109/TASE.2011.2124457
   PARROW J, 1989, THEOR COMPUT SCI, V68, P175, DOI 10.1016/0304-3975(89)90128-X
   Petrenko A, 1996, COMPUT COMMUN, V19, P1236, DOI 10.1016/S0140-3664(96)01157-7
   RAMADGE PJG, 1989, P IEEE, V77, P81, DOI 10.1109/5.21072
   Tao Z., MOBILE NETW APPL, V2, P259
   Villa T., 2012, UNKNOWN COMPONENT PR, DOI [10.1007/978-0-387-68759-9, DOI 10.1007/978-0-387-68759-9]
   Yevtushenko N, 2001, ICCAD 2001: IEEE/ACM INTERNATIONAL CONFERENCE ON COMPUTER AIDED DESIGN, DIGEST OF TECHNICAL PAPERS, P103, DOI 10.1109/ICCAD.2001.968605
NR 31
TC 1
Z9 1
U1 0
U2 0
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JAN 1
PY 2021
VL 47
IS 1
BP 1
EP 16
DI 10.1109/TSE.2018.2878728
PG 16
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA PR6XN
UT WOS:000607376900001
DA 2024-07-18
ER

PT J
AU Panach, JI
   Dieste, O
   Marín, B
   España, S
   Vegas, S
   Pastor, O
   Juristo, N
AF Ignacio Panach, Jose
   Dieste, Oscar
   Marin, Beatriz
   Espana, Sergio
   Vegas, Sira
   Pastor, Oscar
   Juristo, Natalia
TI Evaluating Model-Driven Development Claims with Respect to Quality: A
   Family of Experiments
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Automatic programming; methodologies; validation
ID DIAGRAMS
AB Context: There is a lack of empirical evidence on the differences between model-driven development (MDD), where code is automatically derived from conceptual models, and traditional software development method, where code is manually written. In our previous work, we compared both methods in a baseline experiment concluding that quality of the software developed following MDD was significantly better only for more complex problems (with more function points). Quality was measured through test cases run on a functional system. Objective: This paper reports six replications of the baseline to study the impact of problem complexity on software quality in the context of MDD. Method: We conducted replications of two types: strict replications and object replications. Strict replications were similar to the baseline, whereas we used more complex experimental objects (problems) in the object replications. Results: MDD yields better quality independently of problem complexity with a moderate effect size. This effect is bigger for problems that are more complex. Conclusions: Thanks to the bigger size of the sample after aggregating replications, we discovered an effect that the baseline had not revealed due to the small sample size. The baseline results hold, which suggests that MDD yields better quality for more complex problems.
C1 [Ignacio Panach, Jose] Univ Valencia, Escola Tecn Super Engn, Dept Informat, Avinguda Univ S-N, Valencia 46100, Spain.
   [Dieste, Oscar; Vegas, Sira; Juristo, Natalia] Univ Politecn Madrid, Escuela Tecn Super Ingenieros Informat, Campus Montegancedo, Boadilla Del Monte 28660, Spain.
   [Marin, Beatriz] Univ Diego Portales, Escuela Informat & Telecomunicac, Fac Ingn, Ejercito 441, Santiago, Chile.
   [Espana, Sergio] Univ Utrecht, Utrecht, Netherlands.
   [Pastor, Oscar] Univ Politecn Valencia, Ctr Invest Metodos Producc Software, Camino Vera S-N,Edificio 1F, Valencia 46022, Spain.
C3 University of Valencia; Universidad Politecnica de Madrid; University
   Diego Portales; Utrecht University; Universitat Politecnica de Valencia
RP Panach, JI (corresponding author), Univ Valencia, Escola Tecn Super Engn, Dept Informat, Avinguda Univ S-N, Valencia 46100, Spain.
EM joigpana@uv.es; odieste@fi.upm.es; beatriz.marin@mail.udp.cl;
   s.espana@uu.nl; svegas@fi.upm.es; opastor@pros.upv.es; natalia@fi.upm.es
RI Panach, Jose Ignacio/ABF-2099-2020; Marín, Beatriz/Z-5032-2019; López,
   Oscar Pastor/S-4216-2016; Dieste, Oscar/K-6193-2014; España,
   Sergio/B-1171-2010; VEGAS, SIRA/R-6742-2018
OI Panach, Jose Ignacio/0000-0002-7043-6227; Marín,
   Beatriz/0000-0001-8025-0023; Dieste, Oscar/0000-0002-3060-7853; España,
   Sergio/0000-0001-7343-4270; VEGAS, SIRA/0000-0001-8535-9386
FU Spanish Ministry of Science and Innovation project DataMe
   [TIN201680811-P, TIN2014-60490-P]; ERDF [PROMETEO/2018/176]
FX This work was developed with the support of the Spanish Ministry of
   Science and Innovation project DataMe (TIN201680811-P), TIN2014-60490-P
   and was co-financed by ERDF. It also has the support of Generalitat
   Valencianawith GISPRO project (PROMETEO/2018/176).
CR Abrahao S, 2013, IEEE T SOFTWARE ENG, V39, P327, DOI 10.1109/TSE.2012.27
   Albayrak O, 2012, EMPIRICAL SOFTW ENG, V19, P241
   [Anonymous], 2003, INFORM SYST J
   [Anonymous], 2014, STAKEHOLDER GOAL ANA, DOI DOI 10.1007/978-3-662-43839-8
   Baker P, 2005, LECT NOTES COMPUT SC, V3713, P476, DOI 10.1007/11557432_36
   Basili VR, 1999, IEEE T SOFTWARE ENG, V25, P456, DOI 10.1109/32.799939
   Biffl S., 2006, Automated Software Engineering, V13, P373, DOI 10.1007/s10851-006-8531-5
   Brambilla M., 2012, Model-Driven Software Engineering in Practice, DOI [DOI 10.1007/978-3-031-02549-5, 10.2200/S00441ED1V01Y201208SWE001, DOI 10.2200/S00441ED1V01Y201208SWE001]
   Bunse C, 2009, LECT NOTES COMPUT SC, V5421, P66, DOI 10.1007/978-3-642-01648-6_8
   Canfora G, 2005, J SYST SOFTWARE, V77, P113, DOI 10.1016/j.jss.2004.11.007
   Cohen J., 1988, STAT POWER ANAL BEHA
   Cooper H, 2009, PSYCHOL METHODS, V14, P165, DOI 10.1037/a0015565
   Cruz-Lemus JA, 2009, EMPIR SOFTW ENG, V14, P685, DOI 10.1007/s10664-009-9106-z
   da Silva FQB, 2014, EMPIR SOFTW ENG, V19, P501, DOI 10.1007/s10664-012-9227-7
   de Magalhaes C.V. C., 2014, International Conference on Evaluation and Assessment in Software Engineering, P1, DOI 10.1109/CBMI.2014.6849827
   Dieste O., 2010, International Workshop on Replication in Empirical Software Engineering Research, P1
   Embley DW, 2011, HANDBOOK OF CONCEPTUAL MODELING: THEORY, PRACTICE AND RESEARCH CHALLENGES, P3
   Faul F, 2007, BEHAV RES METHODS, V39, P175, DOI 10.3758/BF03193146
   Fernández-Sáez AM, 2015, INFORM SOFTWARE TECH, V57, P644, DOI 10.1016/j.infsof.2014.05.014
   Fucci D, 2014, EMPIR SOFTW ENG, V19, P277, DOI 10.1007/s10664-013-9259-7
   Galecki A.T., 2014, LINEAR MIXED MODELS, DOI DOI 10.1201/B17198
   Glass G. V., 1976, ED RES, V5, P3, DOI [DOI 10.3102/0013189X005010003, 10.2307/1174772ISSN0536-1036, 10.3102/0013189x005010003]
   Gómez MN, 2014, EMPIR SOFTW ENG, V19, P343, DOI 10.1007/s10664-013-9265-9
   Gómez OS, 2014, INFORM SOFTWARE TECH, V56, P1033, DOI 10.1016/j.infsof.2014.04.004
   Gonzalez-Huerta J, 2015, INFORM SOFTWARE TECH, V57, P405, DOI 10.1016/j.infsof.2014.05.018
   Hadar I, 2013, INFORM SOFTWARE TECH, V55, P1823, DOI 10.1016/j.infsof.2013.05.003
   Hailpern B, 2006, IBM SYST J, V45, P451, DOI 10.1147/sj.453.0451
   Hunter J. E., 1982, METAANALYSIS CUMULAT, V15, P20
   (IEEE) IoEaEE, 1991, IEEE STAND COMP DICT
   Iso/iec, 2005, 25000 ISOIEC
   Juristo N., 2013, BASICS SOFTWARE ENG
   Juristo N, 2011, EMPIR SOFTW ENG, V16, P295, DOI 10.1007/s10664-010-9141-9
   Kapteijns T., 2009, CODE CENTRIC MODEL C, P22
   Kuehl R.O., 2000, Design of experiments: statistical principles of research designand analysis, V2nd
   Martínez Y, 2013, INFORM SOFTWARE TECH, V55, P189, DOI 10.1016/j.infsof.2012.07.004
   Meservy TO, 2005, COMPUTER, V38, P52, DOI 10.1109/MC.2005.316
   Meyers L., 2006, APPL MULTIVARIATE RE
   Panach JI, 2015, INFORM SOFTWARE TECH, V62, P164, DOI 10.1016/j.infsof.2015.02.012
   Parkinson Northcote., 1957, PARKINSONS LAW OTHER
   Riley RD, 2010, BMJ-BRIT MED J, V340, DOI 10.1136/bmj.c221
   Runeson P, 2014, EMPIR SOFTW ENG, V19, P1781, DOI 10.1007/s10664-013-9262-z
   Santos JAM, 2015, 30TH ANNUAL ACM SYMPOSIUM ON APPLIED COMPUTING, VOLS I AND II, P1472, DOI 10.1145/2695664.2695682
   Scanniello G, 2015, ACM T SOFTW ENG METH, V24, DOI 10.1145/2699696
   Scanniello G, 2014, J VISUAL LANG COMPUT, V25, P494, DOI 10.1016/j.jvlc.2014.03.002
   Scanniello G, 2014, ACM T SOFTW ENG METH, V23, DOI 10.1145/2491912
   Sfetsos P, 2012, 2012 EIGHTH INTERNATIONAL CONFERENCE ON THE QUALITY OF INFORMATION AND COMMUNICATIONS TECHNOLOGY (QUATIC 2012), P57, DOI 10.1109/QUATIC.2012.36
   Shahin Mojtaba., 2014, P 22 INT C PROGRAM C, P3
   Shepperd M, 2018, 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: NEW IDEAS AND EMERGING TECHNOLOGIES RESULTS (ICSE-NIER), P73, DOI 10.1145/3183399.3183423
   Wohlin C., 2012, EXPT SOFTWARE ENG IN
NR 49
TC 10
Z9 10
U1 0
U2 2
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JAN 1
PY 2021
VL 47
IS 1
BP 130
EP 145
DI 10.1109/TSE.2018.2884706
PG 16
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA PR6XN
UT WOS:000607376900006
OA Green Published
DA 2024-07-18
ER

PT J
AU Liu, K
   Kim, D
   Bissyandé, TF
   Yoo, S
   Le Traon, Y
AF Liu, Kui
   Kim, Dongsun
   Bissyande, Tegawende F.
   Yoo, Shin
   Le Traon, Yves
TI Mining Fix Patterns for FindBugs Violations
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Fix pattern; pattern mining; program repair; findbugs violation;
   unsupervised learning
ID SOURCE CODE; BUGS
AB Several static analysis tools, such as Splint or FindBugs, have been proposed to the software development community to help detect security vulnerabilities or bad programming practices. However, the adoption of these tools is hindered by their high false positive rates. If the false positive rate is too high, developers may get acclimated to violation reports from these tools, causing concrete and severe bugs being overlooked. Fortunately, some violations are actually addressed and resolved by developers. We claim that those violations that are recurrently fixed are likely to be true positives, and an automated approach can learn to repair similar unseen violations. However, there is lack of a systematic way to investigate the distributions on existing violations and fixed ones in the wild, that can provide insights into prioritizing violations for developers, and an effective way to mine code and fix patterns which can help developers easily understand the reasons of leading violations and how to fix them. In this paper, we first collect and track a large number of fixed and unfixed violations across revisions of software. The empirical analyses reveal that there are discrepancies in the distributions of violations that are detected and those that are fixed, in terms of occurrences, spread and categories, which can provide insights into prioritizing violations. To automatically identify patterns in violations and their fixes, we propose an approach that utilizes convolutional neural networks to learn features and clustering to regroup similar instances. We then evaluate the usefulness of the identified fix patterns by applying them to unfixed violations. The results show that developers will accept and merge a majority (69/116) of fixes generated from the inferred fix patterns. It is also noteworthy that the yielded patterns are applicable to four real bugs in the Defects4J major benchmark for software testing and automated repair.
C1 [Liu, Kui; Kim, Dongsun; Bissyande, Tegawende F.; Le Traon, Yves] Univ Luxembourg, Interdisciplinary Ctr Secur Reliabil & Trust SnT, L-4365 Esch Sur Alzette, Luxembourg.
   [Liu, Kui] Nanjing Univ Aeronaut & Astronaut, Coll Comp Sci & Technol, Nanjing, Peoples R China.
   [Kim, Dongsun] Kyungpook Natl Univ, Sch Comp Sci & Engn, Daegu, South Korea.
   [Yoo, Shin] Korea Adv Inst Sci & Technol, Sch Comp, Daejeon, South Korea.
C3 University of Luxembourg; Nanjing University of Aeronautics &
   Astronautics; Kyungpook National University; Korea Advanced Institute of
   Science & Technology (KAIST)
RP Kim, D (corresponding author), Univ Luxembourg, Interdisciplinary Ctr Secur Reliabil & Trust SnT, L-4365 Esch Sur Alzette, Luxembourg.; Kim, D (corresponding author), Kyungpook Natl Univ, Sch Comp Sci & Engn, Daegu, South Korea.
EM kui.liu@nuaa.edu.cn; darkrsw@knu.ac.kr; tegawende.bissyande@uni.lu;
   shin.yoo@kaist.ac.kr; yves.letraon@uni.lu
RI Yoo, Shin/E-3247-2015; LE TRAON, Yves/T-2911-2019; Kim,
   Dongsun/B-4856-2015
OI Yoo, Shin/0000-0002-0836-6993; Bissyande, Tegawende
   F./0000-0001-7270-9869; LIU, Kui/0000-0003-0145-615X; Kim,
   Dongsun/0000-0003-0272-6860; LE TRAON, Yves/0000-0002-1045-4861
FU Fonds National de la Recherche (FNR), Luxembourg [FIXPATTERN
   C15/IS/9964569, RECOMMEND C15/IS/10449467]; Next-Generation Information
   Computing Development Program through the National Research Foundation
   of Korea (NRF) - Ministry of Science, ICT [2017M3C4A7068179]
FX This work was supported by the Fonds National de la Recherche (FNR),
   Luxembourg, under projects FIXPATTERN C15/IS/9964569 and RECOMMEND
   C15/IS/10449467, and Next-Generation Information Computing Development
   Program through the National Research Foundation of Korea (NRF) funded
   by the Ministry of Science, ICT (2017M3C4A7068179).
CR Aha DW, 1997, ARTIF INTELL REV, V11, P7, DOI 10.1023/A:1006538427943
   Allamanis M, 2018, ACM COMPUT SURV, V51, DOI 10.1145/3212695
   Allamanis M, 2015, PR MACH LEARN RES, V37, P2123
   [Anonymous], 2018, ARXIV181001791
   [Anonymous], Maven
   [Anonymous], 3 0 1 FINDBUGS BUG D
   Avgustinov P, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P437, DOI 10.1109/ICSE.2015.62
   Ayewah N., 2010, Proceedings of the 19th international symposium on Software testing and analysis, P241
   Ayewah N, 2007, PASTE'07 PROCEEDINGS OF THE 2007 ACM SIGPLAN- SIGSOFT WORKSHOP ON PROGRAM ANALYSIS FOR SOFTWARE TOOLS & ENGINEERING, P1, DOI 10.1145/1251535.1251536
   Barr ET, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P306, DOI 10.1145/2635868.2635898
   Bessey A, 2010, COMMUN ACM, V53, P66, DOI 10.1145/1646353.1646374
   Bissyand~e T. F., 2015, ARXIV150705742
   Bui N. D., 2017, ARXIV171006159
   Chen K., 2013, EFFICIENT ESTIMATION, P2
   Cifuentes Cristina, 2009, P 2 INT WORKSHOP DEF, P16, DOI DOI 10.1145/1555860.1555866
   Ciresan D, 2012, PROC CVPR IEEE, P3642, DOI 10.1109/CVPR.2012.6248110
   Dallmeier V., 2007, P 22 IEEE ACM INT C, P433
   Dallmeier V, 2009, IEEE INT CONF AUTOM, P550, DOI 10.1109/ASE.2009.15
   Darke P, 2012, ASIA PAC SOFWR ENG, P306, DOI 10.1109/APSEC.2012.97
   Diomidis S, GHTORRENT
   Do HS, 2005, EMPIR SOFTW ENG, V10, P405, DOI 10.1007/s10664-005-3861-2
   Engler D., 2001, Operating Systems Review, V35, P57, DOI 10.1145/502059.502041
   Falleri Jean-Remy, 2014, P 29 ACM IEEE INT C, P313
   Fry Z.P., 2012, INT S SOFTWARE TESTI, P177, DOI 10.1145/04000800.2336775
   Github, PMD EXT CROSS LANG S
   Goldberg Y, 2014, ARXIV PREPRINT ARXIV
   Gu XD, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P933, DOI 10.1145/3180155.3180167
   Gu XD, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P631, DOI 10.1145/2950290.2950334
   Haihao Shen, 2011, Proceedings 2011 IEEE Fourth International Conference on Software Testing, Verification and Validation (ICST 2011), P299, DOI 10.1109/ICST.2011.51
   Hanam Q., 2014, P 11 WORKING C MININ, P152
   HASTIE T., 2009, Unsupervised Learning, P485
   Heckman S, 2011, INFORM SOFTWARE TECH, V53, P363, DOI 10.1016/j.infsof.2010.12.007
   Heckman S, 2009, SECOND INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION, AND VALIDATION, PROCEEDINGS, P161, DOI 10.1109/ICST.2009.45
   Heckman S, 2008, ESEM'08: PROCEEDINGS OF THE 2008 ACM-IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, P41
   Herzig K, 2013, IEEE WORK CONF MIN S, P121, DOI 10.1109/MSR.2013.6624018
   Hindle A, 2012, PROC INT CONF SOFTW, P837, DOI 10.1109/ICSE.2012.6227135
   Nguyen HDT, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P772, DOI 10.1109/ICSE.2013.6606623
   Hovemeyer D, 2004, ACM SIGPLAN NOTICES, V39, P92, DOI 10.1145/1052883.1052895
   I. P. A. Group, SPLINT
   Jiang SY, 2017, IEEE INT CONF AUTOM, P135, DOI 10.1109/ASE.2017.8115626
   Jongwon Yoon, 2014, 2014 21st Asia-Pacific Software Engineering Conference (APSEC), P3, DOI 10.1109/APSEC.2014.81
   Jung YB, 2005, LECT NOTES COMPUT SC, V3672, P203
   Junker M., 2012, Formal Methods and Software Engineering, P316
   Just R, 2014, P 2014 INT S SOFTW T, P437, DOI DOI 10.1145/2610384.2628055
   Kaleeswaran S, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P266, DOI 10.1145/2568225.2568258
   Kawrykow D, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P351, DOI 10.1145/1985793.1985842
   Kim D, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P802, DOI 10.1109/ICSE.2013.6606626
   Kim S, 2007, P 6 JOINT M EUR SOFT, P45, DOI DOI 10.1145/1287624.1287633
   Kim S, 2007, P 4 INT WORKSH MIN S
   Kim Y, 2010, INFORM SOFTWARE TECH, V52, P210, DOI 10.1016/j.infsof.2009.10.004
   Koyuncu A, 2017, PROCEEDINGS OF THE 26TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA'17), P237, DOI 10.1145/3092703.3092713
   Kremenek T, 2003, LECT NOTES COMPUT SC, V2694, P295
   Kremenek T., 2004, Software Engineering Notes, V29, P83, DOI 10.1145/1041685.1029909
   Krizhevsky A, 2017, COMMUN ACM, V60, P84, DOI 10.1145/3065386
   Le Goues C, 2012, IEEE T SOFTWARE ENG, V38, P54, DOI 10.1109/TSE.2011.104
   Le Goues C, 2015, IEEE T SOFTWARE ENG, V41, P1236, DOI 10.1109/TSE.2015.2454513
   Le Goues C, 2012, PROC INT CONF SOFTW, P3, DOI 10.1109/ICSE.2012.6227211
   Le XBD, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P213, DOI 10.1109/SANER.2016.76
   Lecun Y, 1998, P IEEE, V86, P2278, DOI 10.1109/5.726791
   LIP6, COCCINELLE
   Liu K, 2018, ASIA PAC SOFWR ENG, P658, DOI 10.1109/APSEC.2018.00085
   Liu K, 2018, PROC IEEE INT CONF S, P275, DOI 10.1109/ICSME.2018.00037
   LLVM, CLANG STATIC ANAL
   Long F, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P727, DOI 10.1145/3106237.3106253
   Long F, 2016, PROC INT CONF SOFTW, P702, DOI 10.1145/2884781.2884872
   Lu S., 2005, P WORKSH EV SOFTW DE, P16
   Marjam_aki D, CPPCHECK
   Martinez M, 2017, EMPIR SOFTW ENG, V22, P1936, DOI 10.1007/s10664-016-9470-4
   Matsugu M, 2003, NEURAL NETWORKS, V16, P555, DOI 10.1016/S0893-6080(03)00115-1
   Mechtaev S, 2016, PROC INT CONF SOFTW, P691, DOI 10.1145/2884781.2884807
   Mechtaev S, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P448, DOI 10.1109/ICSE.2015.63
   Meng N, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P392, DOI 10.1109/ICSE.2015.58
   Meng N, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P502, DOI 10.1109/ICSE.2013.6606596
   Meng N, 2011, ACM SIGPLAN NOTICES, V46, P329, DOI 10.1145/1993316.1993537
   Mikolov T., 2013, ADV NEURAL INFORM PR, V26, P3111, DOI DOI 10.5555/2999792.2999959
   Monperrus M, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P234, DOI 10.1145/2568225.2568324
   Mou LL, 2016, AAAI CONF ARTIF INTE, P1287
   Muske T, 2015, 2015 IEEE 26TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING (ISSRE), P270, DOI 10.1109/ISSRE.2015.7381820
   N. S. U. Computer Science, TER PROM REP
   Nistor A, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P902, DOI 10.1109/ICSE.2015.100
   Padioleau Y, 2008, EUROSYS'08: PROCEEDINGS OF THE EUROSYS 2008 CONFERENCE, P247, DOI 10.1145/1357010.1352618
   Pan K, 2009, EMPIR SOFTW ENG, V14, P286, DOI 10.1007/s10664-008-9077-5
   Pei Y, 2014, IEEE T SOFTWARE ENG, V40, P427, DOI 10.1109/TSE.2014.2312918
   Pelleg D., 2000, P 17 INT C MACH LEAR, DOI DOI 10.1007/3-540-44491-2_3
   Peng H, 2015, LECT NOTES ARTIF INT, V9403, P547, DOI 10.1007/978-3-319-25159-2_49
   Rolim R, 2017, PROC INT CONF SOFTW, P404, DOI 10.1109/ICSE.2017.44
   Rolim Reudismam, 2018, ARXIV180303806
   Root S, EVALUATION FINDBUGS
   Smith EK, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P532, DOI 10.1145/2786805.2786825
   Son S, 2011, ACM SIGPLAN NOTICES, V46, P1069, DOI 10.1145/2076021.2048146
   Spacco J., 2006, PROC 2006 INT WORK M, P133
   Synopsys, COVERITY
   Tan SH, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P727, DOI 10.1145/2950290.2950295
   Tao YD, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P64, DOI 10.1145/2635868.2635873
   Nguyen TD, 2017, PROC INT CONF SOFTW, P438, DOI 10.1109/ICSE.2017.47
   Venkatasubramanyam RD, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE COMPANION 2014), P472, DOI 10.1145/2591062.2591123
   Vetro Antonio, 2011, 15th Annual Conference on Evaluation & Assessment in Software Engineering (EASE 2011), P144, DOI 10.1049/ic.2011.0018
   Wang S, 2016, PROC INT CONF SOFTW, P297, DOI 10.1145/2884781.2884804
   Weimer W, 2009, PROC INT CONF SOFTW, P364, DOI 10.1109/ICSE.2009.5070536
   Williams CC, 2005, IEEE T SOFTWARE ENG, V31, P466, DOI 10.1109/TSE.2005.63
   Witten IH, 2011, MOR KAUF D, P1
   Xiong YF, 2017, PROC INT CONF SOFTW, P416, DOI 10.1109/ICSE.2017.45
   Xuan JF, 2017, IEEE T SOFTWARE ENG, V43, P34, DOI 10.1109/TSE.2016.2560811
   Yi K, 2007, INFORM PROCESS LETT, V102, P118, DOI 10.1016/j.ipl.2006.11.004
   Zeiler M. D., 2012, CoRR
   Zhong H, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P913, DOI 10.1109/ICSE.2015.101
NR 106
TC 73
Z9 83
U1 0
U2 19
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JAN 1
PY 2021
VL 47
IS 1
BP 165
EP 188
DI 10.1109/TSE.2018.2884955
PG 24
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA PR6XN
UT WOS:000607376900008
OA Green Published, Green Submitted
DA 2024-07-18
ER

PT J
AU Wang, S
   Liu, TY
   Nam, J
   Tan, L
AF Wang, Song
   Liu, Taiyue
   Nam, Jaechang
   Tan, Lin
TI Deep Semantic Feature Learning for Software Defect Prediction
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Semantics; Predictive models; Feature extraction; Task analysis;
   Computer bugs; Data models; Defect prediction; quality assurance; deep
   learning; semantic features
ID OBJECT-ORIENTED SOFTWARE; METRICS; NETWORKS; FAULTS; CROSS
AB Software defect prediction, which predicts defective code regions, can assist developers in finding bugs and prioritizing their testing efforts. Traditional defect prediction features often fail to capture the semantic differences between different programs. This degrades the performance of the prediction models built on these traditional features. Thus, the capability to capture the semantics in programs is required to build accurate prediction models. To bridge the gap between semantics and defect prediction features, we propose leveraging a powerful representation-learning algorithm, deep learning, to learn the semantic representations of programs automatically from source code files and code changes. Specifically, we leverage a deep belief network (DBN) to automatically learn semantic features using token vectors extracted from the programs' abstract syntax trees (AST) (for file-level defect prediction models) and source code changes (for change-level defect prediction models). We examine the effectiveness of our approach on two file-level defect prediction tasks (i.e., file-level within-project defect prediction and file-level cross-project defect prediction) and two change-level defect prediction tasks (i.e., change-level within-project defect prediction and change-level cross-project defect prediction). Our experimental results indicate that the DBN-based semantic features can significantly improve the examined defect prediction tasks. Specifically, the improvements of semantic features against existing traditional features (in F1) range from 2.1 to 41.9 percentage points for file-level within-project defect prediction, from 1.5 to 13.4 percentage points for file-level cross-project defect prediction, from 1.0 to 8.6 percentage points for change-level within-project defect prediction, and from 0.6 to 9.9 percentage points for change-level cross-project defect prediction.
C1 [Wang, Song; Liu, Taiyue; Tan, Lin] Univ Waterloo, Dept Elect & Comp Engn, Waterloo, ON N2L 3G1, Canada.
   [Nam, Jaechang] Handong Global Univ, Sch Comp Sci & Elect Engn, Pohang 37554, South Korea.
   [Nam, Jaechang] Univ Waterloo, Waterloo, ON N2L 3G1, Canada.
C3 University of Waterloo; Handong Global University; University of
   Waterloo
RP Wang, S (corresponding author), Univ Waterloo, Dept Elect & Comp Engn, Waterloo, ON N2L 3G1, Canada.
EM song.wang@uwaterloo.ca; t67liu@uwaterloo.ca; jcnam@handong.edu;
   lintan@uwaterloo.ca
OI Tan, Lin/0000-0002-6690-8332; Nam, Jaechang/0000-0003-1678-2185
FU Natural Sciences and Engineering Research Council of Canada; National
   Research Foundation of Korea (NRF) - Korea government (MSIT)
   [2018R1C1B6001919]
FX The authors thank the anonymous reviewers for their feedback which
   helped improve this paper. This work has been partially supported by the
   Natural Sciences and Engineering Research Council of Canada and the
   National Research Foundation of Korea (NRF) grant funded by the Korea
   government (MSIT) (No.2018R1C1B6001919).
CR ABREU FBE, 1994, J SYST SOFTWARE, V26, P87, DOI 10.1016/0164-1212(94)90099-X
   Amasaki S, 2003, ISSRE 2003: 14TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P215, DOI 10.1109/ISSRE.2003.1251044
   Lam AN, 2015, IEEE INT CONF AUTOM, P476, DOI 10.1109/ASE.2015.73
   Nguyen AT, 2012, IEEE INT CONF AUTOM, P70, DOI 10.1145/2351676.2351687
   [Anonymous], 2007, PROMISE 07, DOI DOI 10.1109/PROMISE.2007.10
   [Anonymous], 2012, P ACM SIGSOFT 20 INT
   Arisholm E, 2007, ISSRE 2007: 18TH IEEE INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P215, DOI 10.1109/ISSRE.2007.22
   Bansiya J, 2002, IEEE T SOFTWARE ENG, V28, P4, DOI 10.1109/32.979986
   Bengio Y, 2009, FOUND TRENDS MACH LE, V2, P1, DOI 10.1561/2200000006
   Blei DM, 2003, J MACH LEARN RES, V3, P993, DOI 10.1162/jmlr.2003.3.4-5.993
   Chawla NV, 2002, J ARTIF INTELL RES, V16, P321, DOI 10.1613/jair.953
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   Ciresan D, 2012, PROC CVPR IEEE, P3642, DOI 10.1109/CVPR.2012.6248110
   Cliff N., 2014, ORDINAL METHODS BEHA
   Elish KO, 2008, J SYST SOFTWARE, V81, P649, DOI 10.1016/j.jss.2007.07.040
   Frakes WB., 1992, Information retrieval: Data structures and algorithms
   Gayatri N, 2010, LECT NOTES ENG COMP, P124
   Giger E, 2011, P 8 WORK C MIN SOFTW, P83, DOI [10.1145/1985441.1985456, DOI 10.1145/1985441.1985456]
   Gu XD, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P933, DOI 10.1145/3180155.3180167
   Gu XD, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P631, DOI 10.1145/2950290.2950334
   Guo J, 2017, PROC INT CONF SOFTW, P3, DOI 10.1109/ICSE.2017.9
   Hall M., 2009, ACM SIGKDD Explor. Newsl, V11, P18, DOI DOI 10.1145/1656274.1656278
   Halstead M.H., 1977, OPERATING PROGRAMMIN
   Han J, 1995, LECT NOTES COMPUT SC, V930, P195
   Harrison R, 1998, IEEE T SOFTWARE ENG, V24, P491, DOI 10.1109/32.689404
   Hassan AE, 2009, PROC INT CONF SOFTW, P78, DOI 10.1109/ICSE.2009.5070510
   He HB, 2009, IEEE T KNOWL DATA EN, V21, P1263, DOI 10.1109/TKDE.2008.239
   Herzig K, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P392, DOI 10.1109/ICSE.2013.6606585
   Hinton GE, 2006, SCIENCE, V313, P504, DOI 10.1126/science.1127647
   Hinton GE, 2006, NEURAL COMPUT, V18, P1527, DOI 10.1162/neco.2006.18.7.1527
   Jiang LX, 2007, PROC INT CONF SOFTW, P96
   Jiang T, 2013, IEEE INT CONF AUTOM, P279, DOI 10.1109/ASE.2013.6693087
   Jing XY, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P414, DOI 10.1145/2568225.2568320
   Jureczko M, 2010, P 6 INT C PREDICTIVE, DOI DOI 10.1145/1868328.1868342
   Kamei Y, 2016, EMPIR SOFTW ENG, V21, P2072, DOI 10.1007/s10664-015-9400-x
   Kamei Y, 2013, IEEE T SOFTWARE ENG, V39, P757, DOI 10.1109/TSE.2012.70
   Karpathy Andrej., 2016, ICLR, P1
   Khoshgoftaar TM, 2002, EIGHTH IEEE SYMPOSIUM ON SOFTWARE METRICS, PROCEEDINGS, P203, DOI 10.1109/METRIC.2002.1011339
   Kim S, 2008, IEEE T SOFTWARE ENG, V34, P181, DOI 10.1109/TSE.2007.70773
   Kim S, 2007, PROC INT CONF SOFTW, P489
   Kim S, 2006, IEEE INT CONF AUTOM, P81
   Kim S, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P481, DOI 10.1145/1985793.1985859
   Kitchenham BA, 2007, IEEE T SOFTWARE ENG, V33, P316, DOI 10.1109/TSE.2007.1101
   Krizhevsky A, 2017, COMMUN ACM, V60, P84, DOI 10.1145/3065386
   Li LQ, 2017, PROC IEEE INT CONF S, P249, DOI 10.1109/ICSME.2017.46
   Liu YX, 2009, PROC IEEE INT CONF S, P233, DOI 10.1109/ICSM.2009.5306318
   Manning C.D., 1999, FDN STAT NATURAL LAN
   Martin R., 1994, ANAL DEPENDENCIES, V12, P151
   McCabe T. J., 1976, IEEE Transactions on Software Engineering, VSE-2, P308, DOI 10.1109/TSE.1976.233837
   McIntosh S, 2018, IEEE T SOFTWARE ENG, V44, P412, DOI 10.1109/TSE.2017.2693980
   Mende T, 2010, EUR CON SFTWR MTNCE, P107, DOI 10.1109/CSMR.2010.18
   Meneely A., 2008, P 16 ACM SIGSOFT INT, P13, DOI DOI 10.1145/1453101.1453106
   Menzies T, 2007, IEEE T SOFTWARE ENG, V33, P2, DOI 10.1109/TSE.2007.256941
   Menzies T, 2010, AUTOMAT SOFTW ENG, V17, P375, DOI 10.1007/s10515-010-0069-5
   Mnih Andriy., 2009, Advances in neural information processing systems, P1081
   Mockus A, 2000, BELL LABS TECH J, V5, P169, DOI 10.1002/bltj.2229
   Mohamed AR, 2012, IEEE T AUDIO SPEECH, V20, P14, DOI 10.1109/TASL.2011.2109382
   Moser R, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P181, DOI 10.1145/1368088.1368114
   Mou LL, 2016, AAAI CONF ARTIF INTE, P1287
   Nagappan N, 2005, PROC INT CONF SOFTW, P284, DOI 10.1145/1062455.1062514
   Nagappan Nachiappan, 2007, 2007 First International Symposium on Empirical Software Engineering and Measurement, P364
   Nagappan N., 2006, 28th International Conference on Software Engineering Proceedings, P452, DOI 10.1145/1134285.1134349
   Nam J, 2018, IEEE T SOFTWARE ENG, V44, P874, DOI 10.1109/TSE.2017.2720603
   Nam J, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P508, DOI 10.1145/2786805.2786814
   Nam J, 2015, IEEE INT CONF AUTOM, P452, DOI 10.1109/ASE.2015.56
   Nam J, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P382, DOI 10.1109/ICSE.2013.6606584
   Navarro G, 2001, ACM COMPUT SURV, V33, P31, DOI 10.1145/375360.375365
   Ostrand T. J., 2010, P 6 INT C PRED MOD S, P19, DOI [DOI 10.1145/1868328, 10.1145/1868328]
   Paikari E, 2012, INT J SOFTW ENG KNOW, V22, P747, DOI 10.1142/S0218194012400116
   Pan SJ, 2011, IEEE T NEURAL NETWOR, V22, P199, DOI 10.1109/TNN.2010.2091281
   Pascanu R, 2015, INT CONF ACOUST SPEE, P1916, DOI 10.1109/ICASSP.2015.7178304
   Pathiranage CD, 2008, 2008 4TH INTERNATIONAL CONFERENCE ON INFORMATION AND AUTOMATION FOR SUSTAINABILITY (ICIAFS), P13
   Perl H, 2015, CCS'15: PROCEEDINGS OF THE 22ND ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P426, DOI 10.1145/2810103.2813604
   Pinzger Martin, 2008, P 16 ACM SIGSOFT INT, P2, DOI DOI 10.1145/1453101.1453105
   Prechelt L, 2014, INFORM SOFTWARE TECH, V56, P1377, DOI 10.1016/j.infsof.2014.05.001
   Quah TS, 2003, PROC IEEE INT CONF S, P116
   Radford A., 2017, LEARNING GENERATE RE
   Rahman F, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P424, DOI 10.1145/2568225.2568269
   Rahman F, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P432, DOI 10.1109/ICSE.2013.6606589
   Ratzinger J, 2007, LECT NOTES COMPUT SC, V4422, P12
   Raychev V, 2014, ACM SIGPLAN NOTICES, V49, P419, DOI [10.1145/2594291.2594321, 10.1145/2666356.2594321]
   Salakhutdinov R, 2009, INT J APPROX REASON, V50, P969, DOI 10.1016/j.ijar.2008.11.006
   Sarikaya R, 2014, IEEE-ACM T AUDIO SPE, V22, P778, DOI 10.1109/TASLP.2014.2303296
   Seide F, 2011, 12TH ANNUAL CONFERENCE OF THE INTERNATIONAL SPEECH COMMUNICATION ASSOCIATION 2011 (INTERSPEECH 2011), VOLS 1-5, P444
   Shen Y, 2013, IEEE IMTC P, P1045
   Sliwerski J., 2005, ACM SIGSOFT SOFTWARE, P1, DOI DOI 10.1145/1082983.1083147
   Tamrawi A, 2011, P 19 ACM SIGSOFT S 1, P365, DOI [DOI 10.1145/2025113.2025163, 10.31274/etd-180810-1814, DOI 10.31274/ETD-180810-1814]
   Tan M, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P99, DOI 10.1109/ICSE.2015.139
   Tantithamthavorn C, 2017, IEEE T SOFTWARE ENG, V43, P1, DOI 10.1109/TSE.2016.2584050
   Tantithamthavorn C, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P812, DOI 10.1109/ICSE.2015.93
   Tao W., 2010, PROC INT C COMPUT IN, P1
   Nguyen TT, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P932, DOI 10.1145/1985793.1985950
   Turhan B, 2009, EMPIR SOFTW ENG, V14, P540, DOI 10.1007/s10664-008-9103-7
   Wang J, 2012, INT CONF QUAL SOFTW, P13, DOI 10.1109/QSIC.2012.19
   Wang JJ, 2017, 2017 IEEE/ACM 39TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2017), P83, DOI 10.1109/ICSE-SEIP.2017.8
   Wang S, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P523, DOI 10.1145/3106237.3106258
   Wang S, 2016, PROC INT CONF SOFTW, P297, DOI 10.1145/2884781.2884804
   Weyuker E. J., P 3 INT C PRED MOD S, P8
   White M, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P334, DOI 10.1109/MSR.2015.38
   Witten I. H., 2005, DATA MINING PRACTICA
   Xia X, 2016, IEEE T RELIAB, V65, P1810, DOI 10.1109/TR.2016.2588139
   Xia X, 2016, IEEE T SOFTWARE ENG, V42, P977, DOI 10.1109/TSE.2016.2543218
   Xie X, 2012, P 8 INT C PRED MOD S, P19, DOI [DOI 10.1145/2365324.2365329, 10.1145/2365324.2365329]
   Xu BW, 2016, IEEE INT CONF AUTOM, P51, DOI 10.1145/2970276.2970357
   Yang XL, 2015, 2015 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE SECURITY AND RELIABILITY (QRS 2015), P17, DOI 10.1109/QRS.2015.14
   Yoon KC, 2011, ASIA PACIF MICROWAVE, P311
   Yuan ZL, 2014, SIGCOMM'14: PROCEEDINGS OF THE 2014 ACM CONFERENCE ON SPECIAL INTEREST GROUP ON DATA COMMUNICATION, P371, DOI [10.1145/2619239.2631434, 10.1145/2740070.2631434]
   Zhang F., 2014, P 11 WORK C MIN SOFT, P182, DOI [10.1145/2597073.2597078, DOI 10.1145/2597073.2597078]
   Zhang F, 2016, PROC INT CONF SOFTW, P309, DOI 10.1145/2884781.2884839
   Zhang YQ, 2012, PROC INT SYMP SOFTW, P189, DOI 10.1109/ISSREW.2012.51
   Zimmerman T, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P91, DOI 10.1145/1595696.1595713
NR 111
TC 137
Z9 149
U1 8
U2 15
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD DEC 1
PY 2020
VL 46
IS 12
BP 1267
EP 1293
DI 10.1109/TSE.2018.2877612
PG 27
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA PD6GQ
UT WOS:000597780900001
DA 2024-07-18
ER

PT J
AU Yu, TT
   Wen, W
   Han, X
   Hayes, JH
AF Yu, Tingting
   Wen, Wei
   Han, Xue
   Hayes, Jane Huffman
TI ConPredictor: Concurrency Defect Prediction in Real-World Applications
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Concurrency; defect prediction; software quality; software metrics
ID SOFTWARE; METRICS; MUTATION
AB Concurrent programs are difficult to test due to their inherent non-determinism. To address this problem, testing often requires the exploration of thread schedules of a program; this can be time-consuming when applied to real-world programs. Software defect prediction has been used to help developers find faults and prioritize their testing efforts. Prior studies have used machine learning to build such predicting models based on designed features that encode the characteristics of programs. However, research has focused on sequential programs; to date, no work has considered defect prediction for concurrent programs, with program characteristics distinguished from sequential programs. In this paper, we present ConPredictor, an approach to predict defects specific to concurrent programs by combining both static and dynamic program metrics. Specifically, we propose a set of novel static code metrics based on the unique properties of concurrent programs. We also leverage additional guidance from dynamic metrics constructed based on mutation analysis. Our evaluation on four large open source projects shows that ConPredictor improved both within-project defect prediction and cross-project defect prediction compared to traditional features.
C1 [Yu, Tingting; Wen, Wei; Han, Xue; Hayes, Jane Huffman] Univ Kentucky, Dept Comp Sci, Lexington, KY 40506 USA.
C3 University of Kentucky
RP Yu, TT (corresponding author), Univ Kentucky, Dept Comp Sci, Lexington, KY 40506 USA.
EM tyu@cs.uky.edu; wei.wen0@uky.edu; xha225@g.uky.edu; hayes@cs.uky.edu
RI feng, wen/HTS-9745-2023; wen, Wen/KBB-1727-2024; 温, 家琦/GYV-3177-2022;
   yu, tingting/HGA-4783-2022; Wen, Wen/JED-8171-2023
OI Han, Xue/0000-0002-2527-2497
FU US National Science Foundation [CCF-1464032, CCF-1652149, CCF-1511117]
FX This work was supported in part by US National Science Foundation grants
   CCF-1464032, CCF-1652149, and CCF-1511117.
CR Agrawal H., 1989, Technical Report. Technical Report SERCTR- 41- P
   Alpaydin E, 2004, INTRO MACHINE LEARNI
   Ammann Paul, 2008, Introduction to software testing, V1st
   Andrews JH, 2005, PROC INT CONF SOFTW, P402, DOI 10.1145/1062455.1062530
   [Anonymous], P 23 INT C SOFTW ENG
   [Anonymous], 2011, P 8 EUR SOFTW ENG C, DOI DOI 10.1145/2025113.2025144
   Barandela R, 2004, LECT NOTES COMPUT SC, V3138, P806
   Basili VR, 1996, IEEE T SOFTWARE ENG, V22, P751, DOI 10.1109/32.544352
   Bernstein A., 2010, P 18 ACM SIGSOFT INT, P97
   Bird C, 2010, SIGSOFT FSE, P369
   Bird C, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P121, DOI 10.1145/1595696.1595716
   Bowes David., 2016, Proceedings of the 25th International Symposium on Software Testing and Analysis, P330, DOI DOI 10.1145/2931037.2931039
   Bradbury JeremyS., 2006, MUTATION ANAL, P11
   Breiman L., 2001, Machine Learning, V45, P5, DOI 10.1023/A:1010933404324
   Bron Arkady, 2005, P ACM SIGPLAN S PRIN, P206
   Challagulla VUB, 2008, INT J ARTIF INTELL T, V17, P389, DOI 10.1142/S0218213008003947
   Chawla NV, 2002, J ARTIF INTELL RES, V16, P321, DOI 10.1613/jair.953
   Cheung S.-C., 2011, P 19 ACM SIGSOFT S 1, P15
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   CLIFF N, 1993, PSYCHOL BULL, V114, P494, DOI 10.1037/0033-2909.114.3.494
   COX DR, 1958, J R STAT SOC B, V20, P215
   Delamaro ME, 2001, IEEE T SOFTWARE ENG, V27, P228, DOI 10.1109/32.910859
   DEMILLO RA, 1978, COMPUTER, V11, P34, DOI 10.1109/C-M.1978.218136
   Deng DD, 2013, ACM SIGPLAN NOTICES, V48, P785, DOI [10.1145/2544173.2509539, 10.1145/2509136.2509539]
   Estabrooks A, 2004, COMPUT INTELL-US, V20, P18, DOI 10.1111/j.0824-7935.2004.t01-1-00228.x
   Fenton N. E., 1998, Software metrics: a rigorous and practical approach
   Ganai MK, 2010, LECT NOTES COMPUT SC, V6418, P253, DOI 10.1007/978-3-642-16612-9_20
   Ghosh S, 2002, SCAM 2002: SECOND IEEE INTERNATIONAL WORKSHOP ON SOURCE CODE ANALYSIS MANIPULATION, PROCEEDINGS, P17, DOI 10.1109/SCAM.2002.1134101
   Ghotra B, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P789, DOI 10.1109/ICSE.2015.91
   Giger E, 2012, INT SYMP EMP SOFTWAR, P171, DOI 10.1145/2372251.2372285
   Gligoric Milos, 2010, Proceedings of the Third IEEE International Conference on Software Testing, Verification and Validation (ICST 2010), P55, DOI 10.1109/ICST.2010.33
   Gligoric Milos., 2013, Proceedings of the 2013 International Symposium on Software Testing and Analysis. ISSTA 2013, P224, DOI DOI 10.1145/2483760.2483773
   Hall M., 2009, ACM SIGKDD Explor. Newsl, V11, P18, DOI DOI 10.1145/1656274.1656278
   Hall T, 2012, IEEE T SOFTWARE ENG, V38, P1276, DOI 10.1109/TSE.2011.103
   Harman M., 2014, Proceedings of the 29th ACM/IEEE international conference on Automated software engineering, P397
   Harrold MJ, 2001, IEEE T SOFTWARE ENG, V27, P248, DOI 10.1109/32.910860
   Herzig K, 2013, PROC INT SYMP SOFTW, P118, DOI 10.1109/ISSRE.2013.6698911
   Hong S., 2012, ISSTA, P210, DOI [10.1145/2338965.2336779, DOI 10.1145/2338965.2336779]
   Hosmer DW, 2013, WILEY SER PROBAB ST, P89
   Jia Y, 2011, IEEE T SOFTWARE ENG, V37, P649, DOI 10.1109/TSE.2010.62
   Jia Y, 2009, INFORM SOFTWARE TECH, V51, P1379, DOI 10.1016/j.infsof.2009.04.016
   Jiang T, 2013, IEEE INT CONF AUTOM, P279, DOI 10.1109/ASE.2013.6693087
   Jin GL, 2012, ACM SIGPLAN NOTICES, V47, P77, DOI 10.1145/2345156.2254075
   Just R, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P654, DOI 10.1145/2635868.2635929
   Kahlon V, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P13, DOI 10.1145/1595696.1595701
   Kamei Y, 2013, IEEE T SOFTWARE ENG, V39, P757, DOI 10.1109/TSE.2012.70
   Khoshgoftaar T. M., 1995, Annals of Software Engineering, V1, P141, DOI 10.1007/BF02249049
   Kim S, 2008, IEEE T SOFTWARE ENG, V34, P181, DOI 10.1109/TSE.2007.70773
   Kim S, 2007, PROC INT CONF SOFTW, P489
   Kim S, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P481, DOI 10.1145/1985793.1985859
   KING KN, 1991, SOFTWARE PRACT EXPER, V21, P685, DOI 10.1002/spe.4380210704
   Kohavi R, 1997, ARTIF INTELL, V97, P273, DOI 10.1016/S0004-3702(97)00043-X
   Kusano M, 2013, IEEE INT CONF AUTOM, P722, DOI 10.1109/ASE.2013.6693142
   Lattner C, 2004, INT SYM CODE GENER, P75, DOI 10.1109/CGO.2004.1281665
   Lee T., 2011, Proceedings of the 19th ACM SIGSOFT symposium and the 13th European conference on Foundations of software engineering, P311
   Lessmann S, 2008, IEEE T SOFTWARE ENG, V34, P485, DOI 10.1109/TSE.2008.35
   LLVM Pass, 1953, WRIT LLVM PASS
   Lu S, 2008, ACM SIGPLAN NOTICES, V43, P329, DOI 10.1145/1353536.1346323
   Luo Li P., 2006, 28th International Conference on Software Engineering Proceedings, P413, DOI 10.1145/1134285.1134343
   Ma Y, 2012, INFORM SOFTWARE TECH, V54, P248, DOI 10.1016/j.infsof.2011.09.007
   Mathews M. E., 1995, P 13 PAC NW SOFTW QU, P5
   McCabe T. J., 1976, IEEE Transactions on Software Engineering, VSE-2, P308, DOI 10.1109/TSE.1976.233837
   Mende T., 2009, P 5 INT C PREDICTOR, P1, DOI [10.1145/1540438.1540448, DOI 10.1145/1540438.1540448]
   Meneely A., 2008, P 16 ACM SIGSOFT INT, P13, DOI DOI 10.1145/1453101.1453106
   Menzies T, 2007, IEEE T SOFTWARE ENG, V33, P2, DOI 10.1109/TSE.2007.256941
   Menzies T, 2010, AUTOMAT SOFTW ENG, V17, P409, DOI 10.1007/s10515-010-0070-z
   Moser R, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P181, DOI 10.1145/1368088.1368114
   Nagappan N, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P521, DOI 10.1145/1368088.1368160
   Nam J., 2017, IEEE T SOFTWARE ENG, DOI [10.1109/TSE.2017.2780222, DOI 10.1109/TSE.2017.2780222]
   Nam J, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P382, DOI 10.1109/ICSE.2013.6606584
   Nguyen T. H. D., 2010, Proceedings 17th Working Conference on Reverse Engineering (WCRE 2010), P259, DOI 10.1109/WCRE.2010.37
   Nguyen T.N. D., 2010, Proceedings of the International Conference on Software Maintenance, P1, DOI DOI 10.1109/ICSM.2010.5609560
   Ohlsson N, 1996, IEEE T SOFTWARE ENG, V22, P886, DOI 10.1109/32.553637
   Quinlan J. R., 1993, PROGRAMS MACHINE LEA
   Radjenovic D, 2013, INFORM SOFTWARE TECH, V55, P1397, DOI 10.1016/j.infsof.2013.02.009
   Rahman F, 2012, Proceedings of the ACM SIGSOFT 20th International Symposium on the Foundations of Software Engineering, FSE '12, P61
   Rahman F, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P432, DOI 10.1109/ICSE.2013.6606589
   Romano J, 2006, ANN M FLOR ASS I RES, P1
   Schuler D, 2009, ISSTA 2009: INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P69
   Shan Lu, 2007, Operating Systems Review, V41, P103, DOI 10.1145/1323293.1294272
   Shepperd M, 2014, IEEE T SOFTWARE ENG, V40, P603, DOI 10.1109/TSE.2014.2322358
   Subramanyam R, 2003, IEEE T SOFTWARE ENG, V29, P297, DOI 10.1109/TSE.2003.1191795
   Tan M, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P99, DOI 10.1109/ICSE.2015.139
   Turhan B, 2012, EMPIR SOFTW ENG, V17, P62, DOI 10.1007/s10664-011-9182-8
   Turhan B, 2009, EMPIR SOFTW ENG, V14, P540, DOI 10.1007/s10664-008-9103-7
   Walpole R. E., 1993, NEW YEAR MACMILLAN, V3
   Witten I. H., 2005, DATA MINING PRACTICA
   Wong W. Eric, 2001, MUTATION TESTING NEW
   Xia X, 2016, IEEE T SOFTWARE ENG, V42, P977, DOI 10.1109/TSE.2016.2543218
   Yang YB, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P157, DOI 10.1145/2950290.2950353
   Yin ZN, 2011, SOSP 11: PROCEEDINGS OF THE TWENTY-THIRD ACM SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES, P159
   Yu T., 2013, Proceedings of the International Symposium on Software Testing and Analysis, P167
   Yu TT, 2016, IEEE INT CONF SOFTW, P168, DOI 10.1109/ICST.2016.39
   Yu-Seung Ma, 2006, 28th International Conference on Software Engineering Proceedings, P827
   Zaman S., 2012, 2012 9th IEEE Working Conference on Mining Software Repositories (MSR 2012), P199, DOI 10.1109/MSR.2012.6224281
   Zhang F., 2014, P 11 WORK C MIN SOFT, P182, DOI [10.1145/2597073.2597078, DOI 10.1145/2597073.2597078]
   Zhang HY, 2007, 13TH PACIFIC RIM INTERNATIONAL SYMPOSIUM ON DEPENDABLE COMPUTING, PROCEEDINGS, P93, DOI 10.1109/PRDC.2007.28
   Zimmermann T, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P531, DOI 10.1145/1368088.1368161
NR 98
TC 32
Z9 33
U1 2
U2 20
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUN
PY 2019
VL 45
IS 6
BP 558
EP 575
DI 10.1109/TSE.2018.2791521
PG 18
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA ID5AF
UT WOS:000471686800002
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Li, ZQ
   Jing, XY
   Zhu, XK
   Zhang, HY
   Xu, BW
   Ying, S
AF Li, Zhiqiang
   Jing, Xiao-Yuan
   Zhu, Xiaoke
   Zhang, Hongyu
   Xu, Baowen
   Ying, Shi
TI On the Multiple Sources and Privacy Preservation Issues for
   Heterogeneous Defect Prediction
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Heterogeneous defect prediction; multiple sources; privacy preservation;
   utility; source selection; manifold discriminant alignment
ID STATIC CODE ATTRIBUTES; RESEARCHER BIAS; MACHINE; CLASSIFICATION;
   METRICS; MODELS; FAULTS
AB Heterogeneous defect prediction (HDP) refers to predicting defect-proneness of software modules in a target project using heterogeneous metric data from other projects. Existing HDP methods mainly focus on predicting target instances with single source. In practice, there exist plenty of external projects. Multiple sources can generally provide more information than a single project. Therefore, it is meaningful to investigate whether the HDP performance can be improved by employing multiple sources. However, a precondition of conducting HDP is that the external sources are available. Due to privacy concerns, most companies are not willing to share their data. To facilitate data sharing, it is essential to study how to protect the privacy of data owners before they release their data. In this paper, we study the above two issues in HDP. Specifically, to utilize multiple sources effectively, we propose a multi-source selection based manifold discriminant alignment (MSMDA) approach. To protect the privacy of data owners, a sparse representation based double obfuscation algorithm is designed and applied to HDP. Through a case study of 28 projects, our results show that MSMDA can achieve better performance than a range of baseline methods. The improvement is 3.4-15:3 percent in g-measure and 3.0-19:1 percent in AUC.
C1 [Li, Zhiqiang; Jing, Xiao-Yuan; Zhu, Xiaoke; Xu, Baowen; Ying, Shi] Wuhan Univ, State Key Lab Software Engn, Sch Comp, Wuhan 430072, Hubei, Peoples R China.
   [Jing, Xiao-Yuan] Nanjing Univ Posts & Telecommun, Coll Automat, Nanjing 210023, Jiangsu, Peoples R China.
   [Zhu, Xiaoke] Henan Univ, Sch Comp & Informat Engn, Kaifeng 475001, Peoples R China.
   [Zhang, Hongyu] Univ Newcastle, Sch Elect Engn & Comp, Callaghan, NSW 2308, Australia.
C3 Wuhan University; Nanjing University of Posts & Telecommunications;
   Henan University; University of Newcastle
RP Jing, XY (corresponding author), Wuhan Univ, State Key Lab Software Engn, Sch Comp, Wuhan 430072, Hubei, Peoples R China.; Jing, XY (corresponding author), Nanjing Univ Posts & Telecommun, Coll Automat, Nanjing 210023, Jiangsu, Peoples R China.
EM lzq115@163.com; jingxy_2000@126.com; whuzxk@whu.edu.cn;
   hongyu.zhang@newcastle.edu.au; bwxu@nju.edu.cn; yingshi@whu.edu.cn
RI zhang, hongyu/ABC-3702-2021; Xu, Baowen/IXW-4882-2023; He,
   Chen/JLM-5059-2023
OI zhang, hongyu/0000-0002-3063-9425; Xu, Baowen/0000-0001-7743-1296; Zhu,
   Xiaoke/0000-0002-0664-1832
FU NSFC-Key Project of General Technology Fundamental Research United Fund
   [U1736211]; National Key Research and Development Program of China
   [2017YFB0202001]; National Nature Science Foundation of China [61373038,
   61672392, 61472178, 61672208, U1404618, 41571417]; Science and
   Technology Program in Henan province [1721102410064]; Science and
   Technique Development Program of Henan [172102210186];
   Province-School-Region Project of Henan University [2016S11]; Research
   Foundation of Henan University [2015YBZR024]
FX The authors would like to thank the editors and anonymous reviewers for
   their constructive comments and suggestions. This work was supported by
   the NSFC-Key Project of General Technology Fundamental Research United
   Fund under Grant No. U1736211, the National Key Research and Development
   Program of China under Grant No. 2017YFB0202001, the National Nature
   Science Foundation of China under Grant Nos. 61373038, 61672392,
   61472178, 61672208, U1404618, 41571417, the Science and Technology
   Program in Henan province under Grant No. 1721102410064, the Science and
   Technique Development Program of Henan under Grant No. 172102210186, the
   Province-School-Region Project of Henan University under Grant No.
   2016S11, and Research Foundation of Henan University No. 2015YBZR024.
CR [Anonymous], EMPIRICAL SOFTWARE E
   [Anonymous], P 30 IEEE ACM INT C
   [Anonymous], 2010, Proceedings of 2010 IEEE Conference on Computer Vision and Pattern Recognition, DOI DOI 10.1109/CVPR.2010.5539857
   Briand LC, 2002, IEEE T SOFTWARE ENG, V28, P706, DOI 10.1109/TSE.2002.1019484
   Budi A, 2011, PLDI 11: PROCEEDINGS OF THE 2011 ACM CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P447
   Canfora G, 2015, SOFTW TEST VERIF REL, V25, P426, DOI 10.1002/stvr.1570
   Castro M, 2008, ACM SIGPLAN NOTICES, V43, P319, DOI 10.1145/1353536.1346322
   Chen L, 2016, SCI CHINA INFORM SCI, V59, DOI 10.1007/s11432-015-5426-3
   Chen L, 2015, INFORM SOFTWARE TECH, V62, P67, DOI 10.1016/j.infsof.2015.01.014
   Cheng M., 2016, P 28 INT C SOFTW ENG, P171
   Cheung S.-C., 2011, P 19 ACM SIGSOFT S 1, P15
   Clause J, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P21, DOI 10.1145/1985793.1985797
   Cliff N., 2014, Ordinal Methods for Behavioral Data Analysis
   D'Ambros M, 2012, EMPIR SOFTW ENG, V17, P531, DOI 10.1007/s10664-011-9173-9
   Demsar J, 2006, J MACH LEARN RES, V7, P1
   Duda RO., 2012, Pattern classificatio
   Elish KO, 2008, J SYST SOFTWARE, V81, P649, DOI 10.1016/j.jss.2007.07.040
   Fan RE, 2008, J MACH LEARN RES, V9, P1871
   Fu W, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P72, DOI 10.1145/3106237.3106257
   Fu W, 2016, INFORM SOFTWARE TECH, V76, P135, DOI 10.1016/j.infsof.2016.04.017
   Gao KH, 2011, SOFTWARE PRACT EXPER, V41, P579, DOI 10.1002/spe.1043
   Ghotra B, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P789, DOI 10.1109/ICSE.2015.91
   Golub G.H., 2013, Matrix Computations, DOI DOI 10.56021/9781421407944
   Hall T, 2012, IEEE T SOFTWARE ENG, V38, P1276, DOI 10.1109/TSE.2011.103
   Hassan AE, 2009, PROC INT CONF SOFTW, P78, DOI 10.1109/ICSE.2009.5070510
   He HB, 2009, IEEE T KNOWL DATA EN, V21, P1263, DOI 10.1109/TKDE.2008.239
   He Peng., 2014, CORR
   He ZM, 2012, AUTOMAT SOFTW ENG, V19, P167, DOI 10.1007/s10515-011-0090-3
   Herbold S., 2013, P 9 INT C PREDICTIVE, P1
   Hollander M., 2014, Nonparametric Statistical Methods, Solutions Manual, Vthird
   Jiang T, 2013, IEEE INT CONF AUTOM, P279, DOI 10.1109/ASE.2013.6693087
   Jiang Y, 2008, EMPIR SOFTW ENG, V13, P561, DOI 10.1007/s10664-008-9079-3
   Jing XY, 2017, IEEE T SOFTWARE ENG, V43, P321, DOI 10.1109/TSE.2016.2597849
   Jing XY, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P414, DOI 10.1145/2568225.2568320
   Jing XY, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE COMPANION 2014), P632, DOI 10.1145/2591062.2591151
   Jing XY, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P496, DOI 10.1145/2786805.2786813
   Jureczko M, 2010, P 6 INT C PREDICTIVE, DOI DOI 10.1145/1868328.1868342
   Kamei Y, 2016, EMPIR SOFTW ENG, V21, P2072, DOI 10.1007/s10664-015-9400-x
   Kamei Y, 2013, IEEE T SOFTWARE ENG, V39, P757, DOI 10.1109/TSE.2012.70
   Kim SJ, 2007, IEEE J-STSP, V1, P606, DOI 10.1109/JSTSP.2007.910971
   Kim S, 2008, IEEE T SOFTWARE ENG, V34, P181, DOI 10.1109/TSE.2007.70773
   Kim S, 2007, PROC INT CONF SOFTW, P489
   Kim S, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P481, DOI 10.1145/1985793.1985859
   Lee T, 2016, IEEE T SOFTWARE ENG, V42, P1015, DOI 10.1109/TSE.2016.2550458
   Lessmann S, 2008, IEEE T SOFTWARE ENG, V34, P485, DOI 10.1109/TSE.2008.35
   Li BY, 2014, 2014 IEEE SEVENTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST), P233, DOI 10.1109/ICST.2014.36
   Li M, 2012, AUTOMAT SOFTW ENG, V19, P201, DOI 10.1007/s10515-011-0092-1
   Ma Y, 2012, INFORM SOFTWARE TECH, V54, P248, DOI 10.1016/j.infsof.2011.09.007
   Menzies T, 2007, IEEE T SOFTWARE ENG, V33, P637, DOI 10.1109/TSE.2007.70721
   Menzies T, 2007, IEEE T SOFTWARE ENG, V33, P2, DOI 10.1109/TSE.2007.256941
   Menzies T, 2010, AUTOMAT SOFTW ENG, V17, P375, DOI 10.1007/s10515-010-0069-5
   Menzies T, 2013, IEEE T SOFTWARE ENG, V39, P822, DOI 10.1109/TSE.2012.83
   Nagappan N, 2005, PROC INT CONF SOFTW, P284, DOI 10.1145/1062455.1062514
   Nagappan Nachiappan, 2010, Proceedings of the 2010 IEEE 21st International Symposium on Software Reliability Engineering (ISSRE 2010), P309, DOI 10.1109/ISSRE.2010.25
   Nam J, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P508, DOI 10.1145/2786805.2786814
   Nam J, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P382, DOI 10.1109/ICSE.2013.6606584
   Pan SJ, 2010, IEEE T KNOWL DATA EN, V22, P1345, DOI 10.1109/TKDE.2009.191
   Panichella A, 2014, 2014 SOFTWARE EVOLUTION WEEK - IEEE CONFERENCE ON SOFTWARE MAINTENANCE, REENGINEERING, AND REVERSE ENGINEERING (CSMR-WCRE), P164, DOI 10.1109/CSMR-WCRE.2014.6747166
   Patel VM, 2015, IEEE SIGNAL PROC MAG, V32, P53, DOI 10.1109/MSP.2014.2347059
   Peters F, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P801, DOI 10.1109/ICSE.2015.92
   Peters F, 2013, IEEE WORK CONF MIN S, P409, DOI 10.1109/MSR.2013.6624057
   Peters F, 2013, IEEE T SOFTWARE ENG, V39, P1054, DOI 10.1109/TSE.2013.6
   Peters F, 2012, PROC INT CONF SOFTW, P189, DOI 10.1109/ICSE.2012.6227194
   Qi FM, 2016, IEEE INT CONF AUTOM, P75, DOI 10.1145/2970276.2970302
   Rahman F, 2012, Proceedings of the ACM SIGSOFT 20th International Symposium on the Foundations of Software Engineering, FSE '12, P61
   Ryu D, 2017, SOFTWARE QUAL J, V25, P235, DOI 10.1007/s11219-015-9287-1
   Ryu D, 2016, EMPIR SOFTW ENG, V21, P43, DOI 10.1007/s10664-014-9346-4
   Shen Y, 2013, IEEE IMTC P, P1045
   Shepperd M, 2014, IEEE T SOFTWARE ENG, V40, P603, DOI 10.1109/TSE.2014.2322358
   Shepperd M, 2013, IEEE T SOFTWARE ENG, V39, P1208, DOI 10.1109/TSE.2013.11
   Shivaji S, 2013, IEEE T SOFTWARE ENG, V39, P552, DOI 10.1109/TSE.2012.43
   Si XS, 2010, SCI CHINA INFORM SCI, V53, P2032, DOI 10.1007/s11432-010-4073-y
   Tan M, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P99, DOI 10.1109/ICSE.2015.139
   Taneja K., 2011, ESECFSE, P201
   Tantithamthavorn C, 2017, IEEE T SOFTWARE ENG, V43, P1, DOI 10.1109/TSE.2016.2584050
   Tantithamthavorn C, 2016, PROC INT CONF SOFTW, P321, DOI 10.1145/2884781.2884857
   Tantithamthavorn C, 2016, IEEE T SOFTWARE ENG, V42, P1092, DOI 10.1109/TSE.2016.2553030
   Tantithamthavorn C, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P812, DOI 10.1109/ICSE.2015.93
   Thomas Zimmermann., 2009, P THE 7 JOINT M EURO, P91, DOI DOI 10.1145/1595696.1595713
   Tosun A, 2010, INFORM SOFTWARE TECH, V52, P1242, DOI 10.1016/j.infsof.2010.06.006
   Tuia D, 2014, IEEE T GEOSCI REMOTE, V52, P7708, DOI 10.1109/TGRS.2014.2317499
   Turhan B, 2013, INFORM SOFTWARE TECH, V55, P1101, DOI 10.1016/j.infsof.2012.10.003
   Turhan B, 2009, EMPIR SOFTW ENG, V14, P540, DOI 10.1007/s10664-008-9103-7
   Wang C., 2011, 22 INT JOINT C ART I, P1541
   Wang S, 2013, IEEE T RELIAB, V62, P434, DOI 10.1109/TR.2013.2259203
   Wang S, 2016, PROC INT CONF SOFTW, P297, DOI 10.1145/2884781.2884804
   Wang TJ, 2016, SOFTW TEST VERIF REL, V26, P498, DOI 10.1002/stvr.1610
   Wang TJ, 2016, AUTOMAT SOFTW ENG, V23, P569, DOI 10.1007/s10515-015-0179-1
   Watanabe S., 2008, P 4 INT WORKSH PRED, P19
   Weiss Karl, 2016, Journal of Big Data, V3, DOI 10.1186/s40537-016-0043-6
   Wilson DR, 1997, J ARTIF INTELL RES, V6, P1, DOI 10.1613/jair.346
   Wright J, 2009, IEEE T PATTERN ANAL, V31, P210, DOI 10.1109/TPAMI.2008.79
   Xia X, 2016, IEEE T SOFTWARE ENG, V42, P977, DOI 10.1109/TSE.2016.2543218
   Xia X, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P311, DOI 10.1109/SANER.2015.7081841
   Yang YB, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P157, DOI 10.1145/2950290.2950353
   Zhang F, 2016, PROC INT CONF SOFTW, P309, DOI 10.1145/2884781.2884839
   Zhang HY, 2007, IEEE T SOFTWARE ENG, V33, P635, DOI 10.1109/TSE.2007.70706
   Zhang ZW, 2017, AUTOMAT SOFTW ENG, V24, P47, DOI 10.1007/s10515-016-0194-x
   Zhou YM, 2012, SCI CHINA INFORM SCI, V55, P2800, DOI 10.1007/s11432-012-4745-x
   Zimmermann T, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P531, DOI 10.1145/1368088.1368161
NR 100
TC 74
Z9 79
U1 2
U2 25
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD APR
PY 2019
VL 45
IS 4
BP 391
EP 411
DI 10.1109/TSE.2017.2780222
PG 21
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA HU4MK
UT WOS:000465248900004
DA 2024-07-18
ER

PT J
AU Marchetto, A
   Scanniello, G
   Susi, A
AF Marchetto, Alessandro
   Scanniello, Giuseppe
   Susi, Angelo
TI Combining Code and Requirements Coverage with Execution Cost for Test
   Suite Reduction
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Multi-objective approach; regression testing; testing; test suite
   reduction
ID MULTIOBJECTIVE TECHNIQUE; GENETIC ALGORITHM; TRACEABILITY; OPTIMIZATION
AB Test suites tend to become large and complex after software evolution iterations, thus increasing effort and cost to execute regression testing. In this context, test suite reduction approaches could be applied to identify subsets of original test suites that preserve the capability of satisfying testing requirements and revealing faults. In this paper, we propose Multi-Objective test suites REduction (named MORE+): a three-dimension approach for test suite reduction. The first dimension is the structural one and concerns the information on how test cases in a suite exercise the under-test application. The second dimension is functional and concerns how test cases exercise business application requirements. The third dimension is the cost and concerns the time to execute test cases. We define MORE+ as a multi-objective approach that reduces test suites so maximizing their capability in revealing faults according to the three considered dimensions. We have compared MORE+ with seven baseline approaches on 20 Java applications. Results showed, in particular, the effectiveness of MORE+ in reducing test suites with respect to these baselines, i.e., significantly more faults are revealed with test suites reduced by applying MORE+.
C1 [Scanniello, Giuseppe] Univ Basilicata, DiMIE, I-85100 Potenza, Italy.
   [Susi, Angelo] Fdn Bruno Kessler, I-38123 Trento, Italy.
   [Marchetto, Alessandro] Bruno Kessler Fdn, CIT, Software Engn Grp, Trento, Italy.
C3 University of Basilicata; Fondazione Bruno Kessler; Fondazione Bruno
   Kessler
RP Scanniello, G (corresponding author), Univ Basilicata, DiMIE, I-85100 Potenza, Italy.
EM alex.marchetto@gmail.com; giuseppe.scanniello@unibas.it; susi@fbk.eu
RI Marchetto, Alessandro/AAE-4179-2022
OI Marchetto, Alessandro/0000-0002-6833-896X; Susi,
   Angelo/0000-0002-5026-7462; Scanniello, Giuseppe/0000-0003-0024-7508
CR Abadi A, 2008, INT C PROGRAM COMPRE, P103, DOI 10.1109/ICPC.2008.30
   Alipour MA, 2016, IEEE INT CONF AUTOM, P16, DOI 10.1145/2970276.2970361
   [Anonymous], 1989, INSIGHTS REGRESSION
   [Anonymous], 2005, ADDISON WESLEY OBJEC
   [Anonymous], 2009, INTRO INFORM RETRIEV
   [Anonymous], 2015, THESIS
   ANSCOMBE FJ, 1953, J ROY STAT SOC B, V15, P1
   Arcuri A, 2013, SOFTW TEST VERIF REL, V23, P119, DOI 10.1002/stvr.457
   Asghar MW, 2013, EUR CON SFTWR MTNCE, P417, DOI 10.1109/CSMR.2013.62
   Back T, 1998, GENETIC ALGORITHMST
   Baker R.D., 1995, Randomization Tests
   BASILI VR, 1987, IEEE T SOFTWARE ENG, V13, P1278, DOI 10.1109/TSE.1987.232881
   BENJAMINI Y, 1995, J R STAT SOC B, V57, P289, DOI 10.1111/j.2517-6161.1995.tb02031.x
   Campos J, 2013, INT CONF QUAL SOFTW, P253, DOI 10.1109/QSIC.2013.17
   Chen TY, 1996, INFORM PROCESS LETT, V60, P135, DOI 10.1016/S0020-0190(96)00135-4
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   Clerc M, 2002, IEEE T EVOLUT COMPUT, V6, P58, DOI 10.1109/4235.985692
   da Silva B. C., 2011, P 2 INT WORKSH EM TR, P52
   De Lucia A, 2007, ACM T SOFTW ENG METH, V16, DOI 10.1145/1276933.1276934
   de Souza LS, 2011, PROC INT C TOOLS ART, P245, DOI 10.1109/ICTAI.2011.45
   Deb K, 2002, IEEE T EVOLUT COMPUT, V6, P182, DOI 10.1109/4235.996017
   Deb K., 2010, MULTIOBJECTIVE OPTIM
   DEERWESTER S, 1990, J AM SOC INFORM SCI, V41, P391, DOI 10.1002/(SICI)1097-4571(199009)41:6<391::AID-ASI1>3.0.CO;2-9
   Durillo JJ, 2011, ADV ENG SOFTW, V42, P760, DOI 10.1016/j.advengsoft.2011.05.014
   Eaddy M, 2008, IEEE T SOFTWARE ENG, V34, P497, DOI 10.1109/TSE.2008.36
   Fogel D.B., 1995, EVOLUTIONARY COMPUTA
   Gligoric M., 2015, P 2015 INT S SOFTWAR, P211, DOI 10.1145/2771783.2771784
   Gligoric M., 2013, P 2013 INT S SOFTW T, P302, DOI DOI 10.1145/2483760.2483769
   Gonzalez-Sanchez A., 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P83, DOI 10.1109/ASE.2011.6100153
   Gopinath R, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P72, DOI 10.1145/2568225.2568278
   Gotel O. C. Z., 1994, Proceedings of the First International Conference on Requirements Engineering (Cat. No.94TH0613-0), P94, DOI 10.1109/ICRE.1994.292398
   Gotlieb Arnaud., 2014, Proceedings of the 2014 International Symposium on Software Testing and Analysis, P171
   Groce A, 2014, 2014 IEEE SEVENTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST), P243, DOI 10.1109/ICST.2014.37
   Hao Zhong, 2006, 28th International Conference on Software Engineering Proceedings, P636, DOI 10.1145/1134285.1134380
   Inozemtseva L, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P435, DOI 10.1145/2568225.2568271
   Islam MM, 2012, EUR CON SFTWR MTNCE, P21, DOI 10.1109/CSMR.2012.13
   Jeffrey D, 2007, IEEE T SOFTWARE ENG, V33, P108, DOI 10.1109/TSE.2007.18
   Karlsson J., IEEE SOFTW, V14, P67
   KIRKPATRICK S, 1983, SCIENCE, V220, P671, DOI 10.1126/science.220.4598.671
   Klock S., 2011, 6th international workshop on Traceability in emerging forms of software engineering, P24
   Lin CT, 2014, INFORM SOFTWARE TECH, V56, P1322, DOI 10.1016/j.infsof.2014.04.013
   Lormans M., 2005, Proceedings of the 3rd international workshop on Traceability in emerging forms of software engineering, P37
   Lukins SK, 2010, INFORM SOFTWARE TECH, V52, P972, DOI 10.1016/j.infsof.2010.04.002
   Ma XY, 2005, IEEE SYS MAN CYBERN, P133
   Malishevsky A. G., COST COGNIZANT TEST, P41
   Malishevsky AG, 2002, PROC IEEE INT CONF S, P204, DOI 10.1109/ICSM.2002.1167767
   Marchetto A., 2013, ICSEA 2013 8, P18
   Marchetto A, 2016, IEEE T SOFTWARE ENG, V42, P918, DOI 10.1109/TSE.2015.2510633
   Marchetto A, 2011, LECT NOTES COMPUT SC, V6956, P158, DOI 10.1007/978-3-642-23716-4_16
   Marchetto A, 2011, EMPIR SOFTW ENG, V16, P103, DOI 10.1007/s10664-010-9149-1
   Marchetto A, 2009, J WEB ENG, V8, P316
   Marcus A, 2003, PROC INT CONF SOFTW, P125, DOI 10.1109/ICSE.2003.1201194
   MATHUR VK, 1991, J ECON EDUC, V22, P172, DOI 10.2307/1182422
   McMaster S, 2005, PROC IEEE INT CONF S, P539
   Mirarab S, 2012, IEEE T SOFTWARE ENG, V38, P936, DOI 10.1109/TSE.2011.56
   Murphy-Hill E, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P1, DOI 10.1145/2568225.2568226
   Panichella A, 2015, IEEE T SOFTWARE ENG, V41, P358, DOI 10.1109/TSE.2014.2364175
   Pfleeger SL, 2000, IEEE SOFTWARE, V17, P27, DOI 10.1109/52.819965
   Qusef Abdallah, 2010, 2010 IEEE International Conference on Software Maintenance. pp, P1
   Rothermel G, 2002, SOFTW TEST VERIF REL, V12, P219, DOI 10.1002/stvr.256
   Rothermel G, 2004, ACM T SOFTW ENG METH, V13, P277, DOI 10.1145/1027092.1027093
   Rudiger Lincke., 2008, International Symposium on Software Testing and Analysis, P131, DOI 10.1145/1390630.1390648
   Selvakumar S., 2011, EUROPEAN J SCI RES, V49, P332
   Shaowei Wang, 2011, 2011 18th Working Conference on Reverse Engineering, P92, DOI 10.1109/WCRE.2011.72
   Shi A, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P246, DOI 10.1145/2635868.2635921
   Shi A, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P237, DOI 10.1145/2786805.2786878
   Smith A.M., 2009, P 2009 ACM S APPL CO, p[461, 467], DOI DOI 10.1145/1529282.1529382
   Smith A.M., 2007, P 22 IEEEACM INT C A, P539
   Spearman C, 1904, AM J PSYCHOL, V15, P72, DOI 10.2307/1412159
   Sundaram SK, 2010, REQUIR ENG, V15, P313, DOI 10.1007/s00766-009-0096-6
   Tonella P., 2012, 2012 IEEE Fifth International Conference on Software Testing, Verification and Validation (ICST 2012), P21, DOI 10.1109/ICST.2012.82
   Wohlin C., 2012, Experimentation in Software Engineering
   WONG WE, 1995, PROC INT CONF SOFTW, P41, DOI 10.1145/225014.225018
   Yoo S, 2012, SOFTW TEST VERIF REL, V22, P67, DOI [10.1002/stv.430, 10.1002/stvr.430]
   Yoo S., 2007, Proceedings of the 2007 international symposium on Software testing and analysis, P140, DOI 10.1145/1273463.1273483
   Yuanyuan Zhang, 2010, 2010 Proceedings of Second International Symposium on Search Based Software Engineering (SSBSE), P47, DOI 10.1109/SSBSE.2010.16
   Zhang LM, 2011, 22ND IEEE INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING (ISSRE), P170, DOI 10.1109/ISSRE.2011.26
   Zitzler E., 2000, EUROGEN 2001 Evol. Methods Des. Optim. Control Appl. Ind. Probl, P95
   Zou XC, 2010, EMPIR SOFTW ENG, V15, P119, DOI 10.1007/s10664-009-9114-z
NR 79
TC 14
Z9 16
U1 2
U2 9
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD APR
PY 2019
VL 45
IS 4
BP 363
EP 390
DI 10.1109/TSE.2017.2777831
PG 28
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA HU4MK
UT WOS:000465248900003
OA Green Published
DA 2024-07-18
ER

PT J
AU Segura, S
   Parejo, JA
   Troya, J
   Ruiz-Cortés, A
AF Segura, Sergio
   Parejo, Jose A.
   Troya, Javier
   Ruiz-Cortes, Antonio
TI Metamorphic Testing of RESTful Web APIs
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Metamorphic testing; REST; RESTful Web services; web API
ID SERVICES
AB Web Application Programming Interfaces (APIs) allow systems to interact with each other over the network. Modern Web APIs often adhere to the REST architectural style, being referred to as RESTful Web APIs. RESTful Web APIs are decomposed into multiple resources (e.g., a video in the YouTube API) that clients can manipulate through HTTP interactions. Testing Web APIs is critical but challenging due to the difficulty to assess the correctness of API responses, i.e., the oracle problem. Metamorphic testing alleviates the oracle problem by exploiting relations (so-called metamorphic relations) among multiple executions of the program under test. In this paper, we present a metamorphic testing approach for the detection of faults in RESTful Web APIs. We first propose six abstract relations that capture the shape of many of the metamorphic relations found in RESTful Web APIs, we call these Metamorphic Relation Output Patterns (MROPs). Each MROP can then be instantiated into one or more concrete metamorphic relations. The approach was evaluated using both automatically seeded and real faults in six subject Web APIs. Among other results, we identified 60 metamorphic relations (instances of the proposed MROPs) in the Web APIs of Spotify and YouTube. Each metamorphic relation was implemented using both random and manual test data, running over 4.7K automated tests. As a result, 11 issues were detected (3 in Spotify and 8 in YouTube), 10 of them confirmed by the API developers or reproduced by other users, supporting the effectiveness of the approach.
C1 [Segura, Sergio; Parejo, Jose A.; Troya, Javier; Ruiz-Cortes, Antonio] Univ Seville, Dept Comp Languages & Syst, Seville 41004, Spain.
C3 University of Sevilla
RP Segura, S (corresponding author), Univ Seville, Dept Comp Languages & Syst, Seville 41004, Spain.
EM sergiosegura@us.es; japarejo@us.es; jtroya@us.es; aruiz@us.es
RI Maestre, Jose Antonio Parejo/A-2822-2009; Troya, Javier/B-6951-2017;
   Segura, Sergio/A-9615-2011; Cortés, Antonio Ruiz/B-9056-2008
OI Maestre, Jose Antonio Parejo/0000-0002-4708-4606; Troya,
   Javier/0000-0002-1314-9694; Segura, Sergio/0000-0001-8816-6213; Cortés,
   Antonio Ruiz/0000-0001-9827-1834
FU European Commission (FEDER) under CICYT project BELI [TIN2015-70560-R];
   Spanish Government under CICYT project BELI [TIN2015-70560-R];
   Andalusian Government project COPAS [P12-TIC-1867]
FX We would like to thank Spotify and YouTube developers for their
   outstanding work and active support in the resolution of issues. We
   would also like to thank the anonymous reviewers for their helpful
   comments and suggestions. This work has been partially supported by the
   European Commission (FEDER) and Spanish Government under CICYT project
   BELI (TIN2015-70560-R), and the Andalusian Government project COPAS
   (P12-TIC-1867).
CR Allamaraju S., 2010, Restful web services cookbook: solutions for improving scalability and simplicity
   [Anonymous], 2010, REST PRACTICE HYPERM
   [Anonymous], J SYST SOFTW
   [Anonymous], 2000, ARCHITECTURAL STYLES
   Bai XY, 2005, SOSE 2005: IEEE INTERNATIONAL WORKSHOP ON SERVICE-ORIENTED SYSTEM ENGINEERING, P207
   Barr ET, 2015, IEEE T SOFTWARE ENG, V41, P507, DOI 10.1109/TSE.2014.2372785
   Bozkurt M., 2010, Testing Web Services: A Survey
   Canfora Gerardo, 2009, Software Engineering. International Summer Schools ISSSE 2006-2008. Revised Tutorial Lectures, P78, DOI 10.1007/978-3-540-95888-8_4
   Castro-Cabrera C, 2012, COMM COM INF SC, V314, P168
   Chakrabarti SK, 2009, 2009 COMPUTATION WORLD: FUTURE COMPUTING, SERVICE COMPUTATION, COGNITIVE, ADAPTIVE, CONTENT, PATTERNS, P302, DOI 10.1109/ComputationWorld.2009.116
   Chan WK, 2007, INT J WEB SERV RES, V4, P61, DOI 10.4018/jwsr.2007040103
   Chan WK, 2010, SOFTW TEST VERIF REL, V20, P89, DOI 10.1002/stvr.408
   Chen T. Y., 1998, Technical Report hkust-cs98-01
   Chen TY, 2016, COMPUTER, V49, P48, DOI 10.1109/MC.2016.176
   Chen TY, 2009, BMC BIOINFORMATICS, V10, DOI 10.1186/1471-2105-10-24
   Chunyan Ma, 2008, 2008 International Conference on Computer Science and Software Engineering (CSSE 2008), P731, DOI 10.1109/CSSE.2008.790
   DEMILLO RA, 1978, COMPUTER, V11, P34, DOI 10.1109/C-M.1978.218136
   Jacobson D., 2014, OPEN SOURCE CONVENTI
   Jacobson D., 2011, APIs: A Strategy Guide
   Jia Y, 2011, IEEE T SOFTWARE ENG, V37, P649, DOI 10.1109/TSE.2010.62
   Kanewala U, 2016, SOFTW TEST VERIF REL, V26, P245, DOI 10.1002/stvr.1594
   Kankanamge Charitha., 2012, Web Services Testing with Soapui
   Lindvall M, 2016, 2016 IEEE/ACM 1ST INTERNATIONAL WORKSHOP ON METAMORPHIC TESTING (MET), P26, DOI [10.1145/2896971.2896979, 10.1109/MET.2016.013]
   Lindvall M, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P129, DOI 10.1109/ICSE.2015.348
   Liu H, 2014, IEEE T SOFTWARE ENG, V40, P4, DOI 10.1109/TSE.2013.46
   Ma YS, 2005, SOFTW TEST VERIF REL, V15, P97, DOI 10.1002/stvr.308
   Masse M., 2011, REST API Design Rulebook: Designing Consistent RESTfulWeb Service Interface
   Murphy C., 2008, 20 INT C SOFTWARE EN, P867
   Murphy C, 2009, SECOND INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION, AND VALIDATION, PROCEEDINGS, P436, DOI 10.1109/ICST.2009.19
   Pinheiro P. V. P., 2013, P BRAZ WORKSH SYST A, P1
   Porres Ivan., 2011, Proceedings of the 2011 ACM Symposium on Applied Computing, P1598, DOI DOI 10.1145/1982185.1982521
   Rauf I, 2011, APPL COMPUT REV, V11, P19
   Richardson L., 2008, RESTFUL WEB SERVICES
   Richardson Leonard, 2013, Restful web APIs
   Segura S., 2016, AUTOMATED METAMORPHI
   Segura S, 2016, IEEE T SOFTWARE ENG, V42, P805, DOI 10.1109/TSE.2016.2532875
   Su FH, 2015, 10TH INTERNATIONAL WORKSHOP ON AUTOMATION OF SOFTWARE TEST AST 2015, P55, DOI 10.1109/AST.2015.19
   Sun CA, 2012, INT J WEB SERV RES, V9, P51, DOI 10.4018/jwsr.2012010103
   Troya J., 2017, J SYST SOFTW
   Tsai WT, 2002, 7TH IEEE INTERNATIONAL SYMPOSIUM ON HIGH ASSURANCE SYSTEMS ENGINEERING, PROCEEDINGS, P173, DOI 10.1109/HASE.2002.1173120
   Tsai WT, 2002, 7TH IEEE INTERNATIONAL SYMPOSIUM ON HIGH ASSURANCE SYSTEMS ENGINEERING, PROCEEDINGS, P171, DOI 10.1109/HASE.2002.1173119
   Le V, 2014, ACM SIGPLAN NOTICES, V49, P216, DOI [10.1145/2666356.2594334, 10.1145/2594291.2594334]
   WEYUKER EJ, 1982, COMPUT J, V25, P465, DOI 10.1093/comjnl/25.4.465
   Zhou Z. Q., 2007, TR200706 U HONG KONG
   Zhou ZQ, 2016, IEEE T SOFTWARE ENG, V42, P264, DOI 10.1109/TSE.2015.2478001
   Zhou ZQ, 2012, SOFTW TEST VERIF REL, V22, P221, DOI 10.1002/stvr.437
NR 46
TC 83
Z9 87
U1 3
U2 25
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD NOV
PY 2018
VL 44
IS 11
BP 1083
EP 1099
DI 10.1109/TSE.2017.2764464
PG 17
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA HA1IB
UT WOS:000449964600004
OA Green Submitted
DA 2024-07-18
ER

PT J
AU McBurney, PW
   Jiang, SY
   Kessentini, M
   Kraft, NA
   Armaly, A
   Mkaouer, MW
   McMillan, C
AF McBurney, Paul W.
   Jiang, Siyuan
   Kessentini, Marouane
   Kraft, Nicholas A.
   Armaly, Ameer
   Mkaouer, Mohamed Wiem
   McMillan, Collin
TI Towards Prioritizing Documentation Effort
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Code documentation; program comprehension; software maintenance
ID SOURCE CODE; IDENTIFIER NAMES; NEURAL-NETWORKS; SOFTWARE; MAINTENANCE;
   CONTEXT; METRICS
AB Programmers need documentation to comprehend software, but they often lack the time to write it. Thus, programmers must prioritize their documentation effort to ensure that sections of code important to program comprehension are thoroughly explained. In this paper, we explore the possibility of automatically prioritizing documentation effort. We performed two user studies to evaluate the effectiveness of static source code attributes and textual analysis of source code towards prioritizing documentation effort. The first study used open-source API Libraries while the second study was conducted using closed-source industrial software from ABB. Our findings suggest that static source code attributes are poor predictors of documentation effort priority, whereas textual analysis of source code consistently performed well as a predictor of documentation effort priority.
C1 [McBurney, Paul W.] Univ Penn, Dept Comp & Informat Sci, 200 S 33Rd St, Philadelphia, PA 19104 USA.
   [Jiang, Siyuan; Armaly, Ameer; McMillan, Collin] Univ Notre Dame, Dept Comp Sci & Engn, Notre Dame, IN 46556 USA.
   [Kessentini, Marouane; Mkaouer, Mohamed Wiem] Univ Michigan Dearborn, Dept Comp & Informat Sci, Dearborn, MI 48128 USA.
   [Kraft, Nicholas A.] ABB Corp Res, Raleigh, NC 27606 USA.
C3 University of Pennsylvania; University of Notre Dame; University of
   Michigan System; University of Michigan Dearborn; ABB
RP Jiang, SY (corresponding author), Univ Notre Dame, Dept Comp Sci & Engn, Notre Dame, IN 46556 USA.
EM paulmcb@seas.upenn.edu; sjiang1@nd.edu; marouane@umich.edu;
   nicholas.a.kraft@us.abb.com; aarmaly@nd.edu; mmkaouer@umich.edu;
   cmc@nd.edu
RI Mkaouer, Mohamed Wiem/N-7476-2017
OI Mkaouer, Mohamed Wiem/0000-0001-6010-7561; Jiang,
   Siyuan/0000-0002-0684-789X
FU National Science Foundation Graduate Research Fellowship Program
   [DGE-1313583]; National Science Foundation [CCF-1452959, CNS-1510329]
FX This material is based upon work supported by the National Science
   Foundation Graduate Research Fellowship Program under Grant No.
   DGE-1313583. This work is also supported by the National Science
   Foundation CCF-1452959 and CNS-1510329 grants. Any opinions, findings,
   and conclusions expressed herein are the authors', and do not
   necessarily reflect those of the sponsors. The authors would like to
   thank the participants of the user studies for their valuable feedback.
   Additionally, the authors would like to thank the employees at ABB
   Corporate Research who took time and great consideration in our
   closed-source study.
CR [Anonymous], 2007, P INT WORKSH PRINC S
   [Anonymous], 2010, P 32 ACMIEEE INT C S
   [Anonymous], 2006, Google's PageRank and beyond: The science of search engine rankings
   [Anonymous], 2009, CHI 09 EXTENDED ABST, DOI [10.1145/1520340.1520678, DOI 10.1145/1520340.1520678]
   [Anonymous], AUTOMAT SOFTW ENG
   [Anonymous], OBJECT ORIENTED METR
   [Anonymous], 2000, P C FUTURE SOFTWARE, DOI DOI 10.1145/336512.336556
   Arcuri A, 2013, EMPIR SOFTW ENG, V18, P594, DOI 10.1007/s10664-013-9249-9
   Beyer D, 2005, PROG COMPREHEN, P259, DOI 10.1109/WPC.2005.12
   Binkley D, 2007, FoSE 2007: Future of Software Engineering, P104, DOI 10.1109/FOSE.2007.27
   Bugde S, 2008, 2008 3RD IEEE INTERNATIONAL CONFERENCE GLOBAL SOFTWARE ENGINEERING, PROCEEDINGS, P182, DOI 10.1109/ICGSE.2008.18
   Butler S, 2009, WORK CONF REVERSE EN, P31, DOI 10.1109/WCRE.2009.50
   Butler S, 2010, EUR CON SFTWR MTNCE, P156, DOI 10.1109/CSMR.2010.27
   CHIDAMBER SR, 1991, SIGPLAN NOTICES, V26, P197
   Chilimbi TM, 2009, PROC INT CONF SOFTW, P34, DOI 10.1109/ICSE.2009.5070506
   De Lucia A., 2012, 2012 IEEE 20th International Conference on Program Comprehension, P193
   De Lucia A, 2002, PROC IEEE INT CONF S, P234, DOI 10.1109/ICSM.2002.1167771
   Deissenböck F, 2005, PROG COMPREHEN, P97, DOI 10.1109/WPC.2005.14
   Dit B, 2013, J SOFTW-EVOL PROC, V25, P53, DOI 10.1002/smr.567
   Dragan N, 2006, PROC IEEE INT CONF S, P24
   Dragan N, 2010, PROC IEEE INT CONF S
   Eddy BP, 2013, CONF PROC INT SYMP C, P13, DOI 10.1109/ICPC.2013.6613829
   Fenton NE, 2000, IEEE T SOFTWARE ENG, V26, P797, DOI 10.1109/32.879815
   Finnie GR, 1997, J SYST SOFTWARE, V39, P281, DOI 10.1016/S0164-1212(97)00055-1
   Fluri B, 2007, 14TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P70, DOI 10.1109/WCRE.2007.21
   Forward A., 2002, Proceedings of the 2002 ACM symposium on Document engineering, P26, DOI 10.1145/585058.585065
   Gall H, 1998, PROC IEEE INT CONF S, P190, DOI 10.1109/ICSM.1998.738508
   Gil J, 2005, ACM SIGPLAN NOTICES, V40, P97, DOI 10.1145/1103845.1094819
   Graham S. L., 1982, SIGPLAN Notices, V17, P120, DOI 10.1145/872726.806987
   Hagan MT, 1997, NEURAL NETWORK DESIG
   Haiduc S., 2010, 2010 32nd International Conference on Software Engineering (ICSE), P223, DOI 10.1145/1810295.1810335
   Haiduc S., 2010, Proceedings 17th Working Conference on Reverse Engineering (WCRE 2010), P35, DOI 10.1109/WCRE.2010.13
   Halstead M.H., 1977, OPERATING PROGRAMMIN
   Hassan AE, 2004, PROC IEEE INT CONF S, P284, DOI 10.1109/ICSM.2004.1357812
   Holmes R, 2005, PROC INT CONF SOFTW, P117
   Inoue K, 2003, PROC INT CONF SOFTW, P14, DOI 10.1109/ICSE.2003.1201184
   Kajko-Mattsson M, 2005, EMPIR SOFTW ENG, V10, P31, DOI 10.1023/B:LIDA.0000048322.42751.ca
   Katz I. R., 1987, Human-Computer Interaction, V3, P351, DOI 10.1207/s15327051hci0304_2
   Landauer TK, 1998, DISCOURSE PROCESS, V25, P259, DOI 10.1080/01638539809545028
   Lantz Bjorn, 2013, ELECT J BUSINESS RES, V11, P16, DOI DOI 10.1111/J.1365-2929.2004.02012.X
   Lawrie D, 2006, INT C PROGRAM COMPRE, P3, DOI 10.1109/ICPC.2006.51
   Lawrie D, 2007, INNOV SYST SOFTW ENG, V3, P303, DOI 10.1007/s11334-007-0031-2
   Lethbridge TC, 2003, IEEE SOFTWARE, V20, P35, DOI 10.1109/MS.2003.1241364
   Li Wei, 2006, P 23 INT C MACH LEAR, DOI [10.1145/1143844.1143917, DOI 10.1145/1143844.1143917]
   Li YH, 2006, IEEE T KNOWL DATA EN, V18, P1138, DOI 10.1109/TKDE.2006.130
   López-Martín C, 2015, J SYST SOFTWARE, V101, P127, DOI 10.1016/j.jss.2014.12.002
   McBurney P. W., 2014, P 22 INT C PROGRAM C, P279
   McBurney PW, 2016, EMPIR SOFTW ENG, V21, P17, DOI 10.1007/s10664-014-9344-6
   McBurney PW, 2016, IEEE T SOFTWARE ENG, V42, P103, DOI 10.1109/TSE.2015.2465386
   McCabe T. J., 1976, IEEE Transactions on Software Engineering, VSE-2, P308, DOI 10.1109/TSE.1976.233837
   Menzies T, 2007, IEEE T SOFTWARE ENG, V33, P2, DOI 10.1109/TSE.2007.256941
   MILLER GA, 1995, COMMUN ACM, V38, P39, DOI 10.1145/219717.219748
   Moreno L, 2013, CONF PROC INT SYMP C, P230, DOI 10.1109/ICPC.2013.6613855
   Moreno L, 2013, CONF PROC INT SYMP C, P23, DOI 10.1109/ICPC.2013.6613830
   Moreno L, 2012, IEEE INT CONF AUTOM, P358, DOI 10.1145/2351676.2351747
   Murphy G. C., 1995, SIGSOFT Software Engineering Notes, V20, P18, DOI 10.1145/222132.222136
   Nagappan N., 2006, 28th International Conference on Software Engineering Proceedings, P452, DOI 10.1145/1134285.1134349
   Norman G, 2010, ADV HEALTH SCI EDUC, V15, P625, DOI 10.1007/s10459-010-9222-y
   Ouni A, 2015, SOFTWARE QUAL J, V23, P323, DOI 10.1007/s11219-014-9233-7
   Ratzinger Jacek, 2007, 2007 First International Symposium on Empirical Software Engineering and Measurement, P354
   Reps T, 1997, LECT NOTES COMPUT SC, V1301, P432, DOI 10.1145/267896.267925
   Rodeghero P, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P390, DOI 10.1145/2568225.2568247
   Roehm T, 2012, PROC INT CONF SOFTW, P255, DOI 10.1109/ICSE.2012.6227188
   Roy CK, 2009, SCI COMPUT PROGRAM, V74, P470, DOI 10.1016/j.scico.2009.02.007
   SALTON G, 1975, COMMUN ACM, V18, P613, DOI 10.1145/361219.361220
   SHEPPERD M, 1994, J SYST SOFTWARE, V26, P197, DOI 10.1016/0164-1212(94)90011-6
   Shmerlin Y, 2015, LECT NOTES BUS INF P, V215, P100, DOI 10.1007/978-3-319-19243-7_10
   Sillito J, 2008, IEEE T SOFTWARE ENG, V34, P434, DOI 10.1109/TSE.2008.26
   Soetens QD, 2013, PROC IEEE INT CONF S, P384, DOI 10.1109/ICSM.2013.53
   Sridhara Giriprasad, 2010, 25 IEEEACM INT C AUT, P43
   Stylos J, 2006, IEEE SYMPOSIUM ON VISUAL LANGUAGES AND HUMAN-CENTRIC COMPUTING, PROCEEDINGS, P195
   Subramanyam R, 2003, IEEE T SOFTWARE ENG, V29, P297, DOI 10.1109/TSE.2003.1191795
   Sullivan Gail M, 2013, J Grad Med Educ, V5, P541, DOI 10.4300/JGME-5-4-18
   Takang AA, 1996, J PROGRAM LANG, V4, P143
   Tom E, 2013, J SYST SOFTWARE, V86, P1498, DOI 10.1016/j.jss.2012.12.052
   WILCOXON F, 1945, BIOMETRICS BULL, V1, P80, DOI 10.1093/jee/39.2.269
   Ying ATT, 2004, IEEE T SOFTWARE ENG, V30, P574, DOI 10.1109/TSE.2004.52
   Zimmermann T, 2005, IEEE T SOFTWARE ENG, V31, P429, DOI 10.1109/TSE.2005.72
NR 78
TC 15
Z9 18
U1 1
U2 13
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD SEP
PY 2018
VL 44
IS 9
BP 897
EP 913
DI 10.1109/TSE.2017.2716950
PG 17
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA GT9EL
UT WOS:000444842700005
OA Bronze, Green Published
DA 2024-07-18
ER

PT J
AU Meyer, AN
   Barton, LE
   Murphy, GC
   Zimmermann, T
   Fritz, T
AF Meyer, Andre N.
   Barton, Laura E.
   Murphy, Gail C.
   Zimmermann, Thomas
   Fritz, Thomas
TI The Work Life of Developers: Activities, Switches and Perceived
   Productivity
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Productivity; developer activity; work fragmentation; interruptions;
   human factors; user studies
ID SOFTWARE-DEVELOPMENT
AB Many software development organizations strive to enhance the productivity of their developers. All too often, efforts aimed at improving developer productivity are undertaken without knowledge about how developers spend their time at work and how it influences their own perception of productivity. To fill in this gap, we deployed a monitoring application at 20 computers of professional software developers from four companies for an average of 11 full work day in situ. Corroborating earlier findings, we found that developers spend their time on a wide variety of activities and switch regularly between them, resulting in highly fragmented work. Our findings extend beyond existing research in that we correlate developers' work habits with perceived productivity and also show productivity is a personal matter. Although productivity is personal, developers can be roughly grouped into morning, low-at-lunch and afternoon people. A stepwise linear regression per participant revealed that more user input is most often associated with a positive, and emails, planned meetings and work unrelated websites with a negative perception of productivity. We discuss opportunities of our findings, the potential to predict high and low productivity and suggest design approaches to create better tool support for planning developers' work day and improving their personal productivity.
C1 [Meyer, Andre N.; Fritz, Thomas] Univ Zurich, CH-8006 Zurich, Switzerland.
   [Barton, Laura E.; Murphy, Gail C.] Univ British Columbia, Vancouver, BC V6T 1Z4, Canada.
   [Zimmermann, Thomas] Microsoft Res, Redmond, WA 98052 USA.
C3 University of Zurich; University of British Columbia; Microsoft
RP Meyer, AN (corresponding author), Univ Zurich, CH-8006 Zurich, Switzerland.
EM ameyer@ifi.uzh.ch; n4v9a@ugrad.cs.ubc.ca; murphy@cs.ubc.ca;
   tzimmer@microsoft.com; fritz@ifi.uzh.ch
RI Zimmermann, Thomas/C-4377-2019
OI Zimmermann, Thomas/0000-0003-4905-1469
FU ABB; SNF; NSERC
FX The authors would like to thank the study participants and all of our
   reviewers for their insightful remarks. This work was funded in part by
   ABB, SNF and NSERC.
CR Albrech A., 1979, PROC JOINT SHAREGUID, P83
   Amann S, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P124, DOI 10.1109/SANER.2016.39
   [Anonymous], P 7 INT C PRED MOD S
   [Anonymous], 2010, CASCON First Decade High Impact Papers, DOI [DOI 10.1145/1925805.1925815, 10.1145/1925805.1925815]
   Bailey BP, 2001, HUMAN-COMPUTER INTERACTION - INTERACT'01, P593
   Blackburn JD, 1996, IEEE T SOFTWARE ENG, V22, P875, DOI 10.1109/32.553636
   BOEHM BW, 1987, COMPUTER, V20, P43, DOI 10.1109/MC.1987.1663694
   Bravata DM, 2007, JAMA-J AM MED ASSOC, V298, P2296, DOI 10.1001/jama.298.19.2296
   Cataldo M, 2008, ESEM'08: PROCEEDINGS OF THE 2008 ACM-IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, P2
   Chong J, 2006, CSCW 06, P29, DOI [DOI 10.1145/1180875.1180882, 10.1145/1180875.1180882]
   Consolvo S, 2008, CHI 2008: 26TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS VOLS 1 AND 2, CONFERENCE PROCEEDINGS, P1797
   Cutrell E, 2001, HUMAN-COMPUTER INTERACTION - INTERACT'01, P263
   Czerwinski M., 2000, PEOPL COMP 14 P HCI, V2, P71
   Czerwinski Mary, 2004, P SIGCHI C HUM FACT, P175, DOI [10.1145/985692.985715, DOI 10.1145/985692.985715]
   DeMarco T., 1985, Proceedings of the 8th International Conference on Software Engineering (Cat. No.85CH2139-4), P268
   Devanbu P, 1996, PROC INT CONF SOFTW, P189, DOI 10.1109/ICSE.1996.493415
   Epstein DA, 2016, 34TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, CHI 2016, P1109, DOI 10.1145/2858036.2858045
   Fogg B. J., 2002, Persuasive technology: using computers to change what we think and do, DOI DOI 10.1145/764008.763957
   Fritz T, 2014, 32ND ANNUAL ACM CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS (CHI 2014), P487, DOI 10.1145/2556288.2557383
   Gonçalves MK, 2011, J UNIVERS COMPUT SCI, V17, P1913
   Gonzalez V.M., 2004, Proceedings of the SIGCHI Conference on Human Factors in Computing Systems, P113, DOI [DOI 10.1145/985692.985707, 10.1145/985692.985707]
   Graziotin D, 2013, LECT NOTES COMPUT SC, V7983, P50, DOI 10.1007/978-3-642-39259-7_7
   Hollis V, 2015, CHI 2015: PROCEEDINGS OF THE 33RD ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, P2643, DOI 10.1145/2702123.2702196
   Humphrey W.S., 1996, INTRO PERSONAL SOFTW
   Humphrey WS, 1996, IEEE SOFTWARE, V13, P77, DOI 10.1109/52.493023
   Iqbal ST, 2007, CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, VOLS 1 AND 2, P677
   Johnson PM, 2003, PROC INT CONF SOFTW, P641, DOI 10.1109/ICSE.2003.1201249
   JONES C, 1994, COMPUTER, V27, P98, DOI 10.1109/2.312055
   Khan IA, 2011, COGN TECHNOL WORK, V13, P245, DOI 10.1007/s10111-010-0164-1
   Kim YH, 2016, 34TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, CHI 2016, P272, DOI 10.1145/2858036.2858428
   Ko AJ, 2007, PROC INT CONF SOFTW, P344
   LaToza T. D., 2006, 28th International Conference on Software Engineering Proceedings, P492, DOI 10.1145/1134285.1134355
   Li I, 2011, UBICOMP'11: PROCEEDINGS OF THE 2011 ACM INTERNATIONAL CONFERENCE ON UBIQUITOUS COMPUTING, P405
   Mark G., 2005, P SIGCHI C HUM FACT, P321, DOI [10.1145/1054972.1055017, DOI 10.1145/1054972.1055017]
   Mark G, 2016, 34TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, CHI 2016, P1717, DOI 10.1145/2858036.2858262
   Mark G, 2016, 34TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, CHI 2016, P1739, DOI 10.1145/2858036.2858202
   Mark G, 2014, 32ND ANNUAL ACM CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS (CHI 2014), P3025, DOI 10.1145/2556288.2557204
   Mark G, 2008, CHI 2008: 26TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS VOLS 1 AND 2, CONFERENCE PROCEEDINGS, P107
   Mathur A, 2015, PROCEEDINGS OF THE 2015 ACM INTERNATIONAL JOINT CONFERENCE ON PERVASIVE AND UBIQUITOUS COMPUTING (UBICOMP 2015), P577, DOI 10.1145/2750858.2807528
   Meyer AN, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P19, DOI 10.1145/2635868.2635892
   Minelli R, 2015, INT C PROGRAM COMPRE, P25, DOI 10.1109/ICPC.2015.12
   Mockus A, 2002, ACM T SOFTW ENG METH, V11, P309, DOI 10.1145/567793.567795
   Monk CA, 2008, J EXP PSYCHOL-APPL, V14, P299, DOI 10.1037/a0014402
   Parnin C, 2011, SOFTWARE QUAL J, V19, P5, DOI 10.1007/s11219-010-9104-9
   Parnin C, 2010, CHI2010: PROCEEDINGS OF THE 28TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, VOLS 1-4, P93
   Perlow LA, 1999, ADMIN SCI QUART, V44, P57, DOI 10.2307/2667031
   PERRY DE, 1994, IEEE SOFTWARE, V11, P36, DOI 10.1109/52.300082
   Roehm T, 2012, PROC INT CONF SOFTW, P255, DOI 10.1109/ICSE.2012.6227188
   Sanchez H, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P251, DOI 10.1109/SANER.2015.7081835
   StackOverflow, 2016, STACK OV DEV SURV 20
   Taillard J, 1999, J SLEEP RES, V8, P291, DOI 10.1046/j.1365-2869.1999.00176.x
   Treude C, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P625, DOI 10.1145/2786805.2786827
   van Solingen R, 1998, IEEE SOFTWARE, V15, P97, DOI 10.1109/52.714843
   Vasilescu B, 2016, PROC INT CONF SOFTW, P994, DOI 10.1145/2884781.2884875
   Wagner S., 2008, Software Productivity Analysis and Cost Estimation (SPACE 2008), P1
   WALSTON CE, 1977, IBM SYST J, V16, P54, DOI 10.1147/sj.161.0054
   Zhou Minghui, 2010, P 18 ACM SIGSOFT INT, P137, DOI DOI 10.1145/1882291.1882313
   Züger M, 2015, CHI 2015: PROCEEDINGS OF THE 33RD ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, P2981, DOI 10.1145/2702123.2702593
NR 58
TC 84
Z9 89
U1 0
U2 11
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD DEC
PY 2017
VL 43
IS 12
BP 1178
EP 1193
DI 10.1109/TSE.2017.2656886
PG 16
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA FQ1RH
UT WOS:000418134800006
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Bossi, L
   Bertino, E
   Hussain, SR
AF Bossi, Lorenzo
   Bertino, Elisa
   Hussain, Syed Rafiul
TI A System for Profiling and Monitoring Database Access Patterns by
   Application Programs for Anomaly Detection
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Database; insider attacks; anomaly detection; application profile; SQL
   injection
AB Database Management Systems (DBMSs) provide access control mechanisms that allow database administrators (DBAs) to grant application programs access privileges to databases. Though such mechanisms are powerful, in practice finer-grained access control mechanism tailored to the semantics of the data stored in the DMBS is required as a first class defense mechanism against smart attackers. Hence, custom written applications which access databases implement an additional layer of access control. Therefore, securing a database alone is not enough for such applications, as attackers aiming at stealing data can take advantage of vulnerabilities in the privileged applications and make these applications to issue malicious database queries. An access control mechanism can only prevent application programs from accessing the data to which the programs are not authorized, but it is unable to prevent misuse of the data to which application programs are authorized for access. Hence, we need a mechanism able to detect malicious behavior resulting from previously authorized applications. In this paper, we present the architecture of an anomaly detection mechanism, DetAnom, that aims to solve such problem. Our approach is based the analysis and profiling of the application in order to create a succinct representation of its interaction with the database. Such a profile keeps a signature for every submitted query and also the corresponding constraints that the application program must satisfy to submit the query. Later, in the detection phase, whenever the application issues a query, a module captures the query before it reaches the database and verifies the corresponding signature and constraints against the current context of the application. If there is a mismatch, the query is marked as anomalous. The main advantage of our anomaly detection mechanism is that, in order to build the application profiles, we need neither any previous knowledge of application vulnerabilities nor any example of possible attacks. As a result, our mechanism is able to protect the data from attacks tailored to database applications such as code modification attacks, SQL injections, and also from other data-centric attacks as well. We have implemented our mechanism with a software testing technique called concolic testing and the PostgreSQL DBMS. Experimental results show that our profiling technique is close to accurate, requires acceptable amount of time, and the detection mechanism incurs low runtime overhead.
C1 [Bossi, Lorenzo; Bertino, Elisa; Hussain, Syed Rafiul] Purdue Univ, Dept Comp Sci, W Lafayette, IN 47907 USA.
C3 Purdue University System; Purdue University
RP Bossi, L (corresponding author), Purdue Univ, Dept Comp Sci, W Lafayette, IN 47907 USA.
EM lbossi@purdue.edu; bertino@purdue.edu; hussain1@purdue.edu
FU Department of Homeland Security (DHS) Science and Technology
   Directorate, Homeland Security Advanced Research Projects Agency, Cyber
   Security Division
FX The work reported in this paper has been funded in part under
   subcontract to Northrop Grumman Systems Corporation in support of a
   contract with Department of Homeland Security (DHS) Science and
   Technology Directorate, Homeland Security Advanced Research Projects
   Agency, Cyber Security Division. The views expressed in this work are
   those of the authors and do not necessarily reflect the official policy
   or position of the Department of Homeland Security or of Northrop
   Grumman Systems Corporation.
CR [Anonymous], 1979, PROC ACM SIGMOD INT
   [Anonymous], TRUST PLATF MOD
   [Anonymous], POSTGRESQL 9 1 8
   [Anonymous], 2012, CYB WATCH SURV BAD I
   Balakrishnan A., 2005, CS701 CONSTRUCTION C, V19
   Bertino E., 2012, Data Protection From insider Threats
   Bertino E, 2007, IEEE IPCCC, P449, DOI 10.1109/PCCC.2007.358926
   Bertino Elisa., 2011, Proceedings of the 6th ACM Symposium on Information, Computer and Communications Security, ASIACCS '11, P10, DOI [10.1145/1966913.1966916, DOI 10.1145/1966913.1966916]
   Cadar C, 2013, COMMUN ACM, V56, P82, DOI 10.1145/2408776.2408795
   Cheung A, 2012, PROC VLDB ENDOW, V5, P1471, DOI 10.14778/2350229.2350262
   Collins M., 2013, Spotlight on: Programmers as malicious insiders
   Dasgupta A, 2009, PROC INT CONF DATA, P1403, DOI 10.1109/ICDE.2009.98
   Emmi M., 2007, Proceedings of the 2007 international symposium on Software testing and analysis, P151
   Gao D, 2004, P 11 ACM C COMP COMM, P318, DOI [10.1145/1030083.1030126, DOI 10.1145/1030083.1030126]
   GIFFIN J, 2004, P 11 ANN NETW DISTR
   Halfond J., 2006, Proceedings of the IEEE international symposium on secure software engineering, V1, P13
   Hussain S.R., 2015, Proceedings of the 5th ACM Conference on Data and Application Security and Privacy, CODASPY '15, P25
   Huth C., 2013, Components and considerations in building an insider threat program
   Lee SY, 2002, LECT NOTES COMPUT SC, V2502, P264
   Lindholm T., 2013, The Java virtual machine specification
   Majumdar R, 2007, PROC INT CONF SOFTW, P416
   Melton Jim, 2001, SQL: 1999: understanding relational language components
   Paleari R, 2008, LECT NOTES COMPUT SC, V5137, P126, DOI 10.1007/978-3-540-70542-0_7
   Ramachandra K, 2012, P ACM SIGMOD INT C M, P133, DOI DOI 10.1145/2213836.2213852
   Reps T, 1997, LECT NOTES COMPUT SC, V1301, P432, DOI 10.1145/267896.267925
   Roemer R, 2012, ACM T INFORM SYST SE, V15, DOI 10.1145/2133375.2133377
   Sallam A., 2015, IEEE Systems Journal, VPP, P1
   Sallam A, 2014, CCS'14: PROCEEDINGS OF THE 21ST ACM CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P1493, DOI 10.1145/2660267.2662384
   Sen K., 2005, P 10 EUR SOFTW ENG C, V30, P263, DOI DOI 10.1145/1081706.1081750
   Sen K, 2006, LECT NOTES COMPUT SC, V4144, P419
   Seshadri A, 2004, P IEEE S SECUR PRIV, P272
   Shu XK, 2015, CCS'15: PROCEEDINGS OF THE 22ND ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P401, DOI 10.1145/2810103.2813654
   Srinivasan R, 2010, LECT NOTES COMPUT SC, V6503, P66, DOI 10.1007/978-3-642-17714-9_6
   Valeur F, 2005, LECT NOTES COMPUT SC, V3548, P123
   Vallee-Rai R., 1999, Proceedings of the 1999 Conference of the Centre for Advanced Studies on Collaborative Research, CASCON'99, page, P13
   Vigna G, 2009, J COMPUT SECUR, V17, P305, DOI 10.3233/JCS-2009-0321
   Wagner D, 2001, P IEEE S SECUR PRIV, P156, DOI 10.1109/SECPRI.2001.924296
   Walpole J., 2000, Proceedings DARPA Information Survivability Conference and Exposition. DIS-CEX'00, P119
   Xiaokui Shu, 2015, Research in Attacks, Intrusions and Defenses. 18th International Symposium, RAID 2015. Proceedings: LNCS 9404, P270, DOI 10.1007/978-3-319-26362-5_13
   Xu K, 2015, 2015 IEEE 28TH COMPUTER SECURITY FOUNDATIONS SYMPOSIUM CSF 2015, P497, DOI 10.1109/CSF.2015.37
NR 40
TC 16
Z9 17
U1 0
U2 13
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAY
PY 2017
VL 43
IS 5
BP 415
EP 431
DI 10.1109/TSE.2016.2598336
PG 17
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA EU9BO
UT WOS:000401332400002
DA 2024-07-18
ER

PT J
AU Bate, L
   Burns, A
   Davis, RI
AF Bate, Lain
   Burns, Alan
   Davis, Robert I.
TI An Enhanced Bailout Protocol for Mixed Criticality Embedded Software
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Real-time systems; mixed criticality; fixed priority scheduling; mode
   changes
AB To move mixed criticality research into industrial practice requires models whose run-time behaviour is acceptable to systems engineers. Certain aspects of current models, such as abandoning lower criticality tasks when certain situations arise, do not give the robustness required in application domains such as the automotive and aerospace industries. In this paper a new bailout protocol is developed that still guarantees high criticality software but minimises the negative impact on lower criticality software via a timely return to normal operation. We show how the bailout protocol can be integrated with existing techniques, utilising both offline slack and online gain-time to further improve performance. Static analysis is provided for schedulability guarantees, while scenario based evaluation via simulation is used to explore the effectiveness of the protocol.
C1 [Bate, Lain; Burns, Alan; Davis, Robert I.] Univ York, Dept Comp Sci, York YO10 5DD, N Yorkshire, England.
   [Davis, Robert I.] INRIA, F-54600 Villers Ls Nancy, France.
C3 University of York - UK; Inria
RP Bate, L (corresponding author), Univ York, Dept Comp Sci, York YO10 5DD, N Yorkshire, England.
EM iain.bate@york.ac.uk; alan.burns@york.ac.uk; rob.davis@york.ac.uk
RI Burns, Alan/AAF-2700-2019
FU ESPRC [EP/K011626/1]; EU [611085]; EPSRC [EP/K011626/1] Funding Source:
   UKRI
FX The research described in this paper was funded, in part, by the ESPRC
   grant, MCC (EP/K011626/1) and the EU FP7 IP PROXIMA (611085). EPSRC
   Research Data Management: No new primary data was created during this
   study. The authors would like to thank Frank Soboczenski for his help in
   producing the graphs used in this paper.
CR [Anonymous], THESIS
   AUDSLEY N, 1993, SOFTWARE ENG J, V8, P284, DOI 10.1049/sej.1993.0034
   Audsley N. C., 1994, Proceedings 11th IEEE Workshop on Real-Time Operating Systems and Software. RTOSS '94 (Cat. No.94TH0639-5), P23, DOI 10.1109/RTOSS.1994.292567
   Audsley NC, 2001, INFORM PROCESS LETT, V79, P39, DOI 10.1016/S0020-0190(00)00165-4
   Baruah S., 2011, Proceedings of the 2011 IEEE 32nd Real-Time Systems Symposium (RTSS 2011), P3, DOI 10.1109/RTSS.2011.9
   Baruah S. K., 2011, Proceedings of the 2011 IEEE 32nd Real-Time Systems Symposium (RTSS 2011), P34, DOI 10.1109/RTSS.2011.12
   Baruah S.K., 2012, International Conference on Real-Time and Network Systems (RTNS), P11
   Baruah S, 2008, ECRTS 2008: PROCEEDINGS OF THE 20TH EUROMICRO CONFERENCE ON REAL-TIME SYSTEMS, P147, DOI 10.1109/ECRTS.2008.26
   Baruah S, 2012, IEEE T COMPUT, V61, P1140, DOI 10.1109/TC.2011.142
   Baruah SK, 2010, LECT NOTES COMPUT SC, V6281, P90, DOI 10.1007/978-3-642-15155-2_10
   Bate I, 2003, REAL-TIME SYST, V25, P5, DOI 10.1023/A:1022920502619
   Bate L, 2015, EUROMICRO, P259, DOI 10.1109/ECRTS.2015.30
   Bernat G, 2004, REAL TIM SYST SYMP P, P328, DOI 10.1109/REAL.2004.48
   Bini E, 2005, REAL-TIME SYST, V30, P129, DOI 10.1007/s11241-005-0507-9
   Bini E, 2006, EUROMICRO, P13, DOI 10.1109/ECRTS.2006.26
   Burns A, 2014, REAL TIM SYST SYMP P, P21, DOI 10.1109/RTSS.2014.12
   Burns A., 2016, MCC12016A U YORK DEP
   Burns A., 2015, DAGST SEM MIX CRIT M, V5, P92
   Burns Alan., 2014, PROC 2 WORKSHOP MIXE, P3
   Burns Alan., 2013, Mixed criticality systems-a review. pages, P1
   Davis RI, 2007, RTSS 2007: 28TH IEEE INTERNATIONAL REAL-TIME SYSTEMS SYMPOSIUM, PROCEEDINGS, P3, DOI 10.1109/RTSS.2007.11
   DAVIS RI, 1993, REAL-TIME SYSTEMS SYMPOSIUM: PROCEEDINGS, P222, DOI 10.1109/REAL.1993.393496
   Dorin F, 2010, REAL-TIME SYST, V46, P305, DOI 10.1007/s11241-010-9107-4
   Ekberg P, 2012, EUROMICRO, P135, DOI 10.1109/ECRTS.2012.24
   Eker J, 2003, P IEEE, V91, P127, DOI 10.1109/JPROC.2002.805829
   Fleming Tom, 2013, WORKSH MIX CRIT SCHE, P7
   Fleming Tom., 2014, PROC 2 WORKSHOP MIXE, P33
   Gettings O, 2015, PROCEEDINGS OF THE 23RD INTERNATIONAL CONFERENCE ON REAL-TIME AND NETWORKS SYSTEMS (RTNS) 2015, P237, DOI 10.1145/2834848.2834850
   Graydon P., 2013, Proceedings of the Workshop on Mixed Criticality (WMC), P19
   Graydon P, 2014, COMPUT J, V57, P759, DOI 10.1093/comjnl/bxt027
   Huang Pengcheng, 2013, P 2013 IEEE 18 C EM, P1, DOI [DOI 10.1155/2013/376123, 10.1109/ETFA.2013.6647967, DOI 10.1109/ETFA.2013.6647967]
   LEHOCZKY JP, 1992, REAL-TIME SYSTEMS SYMPOSIUM : PROCEEDINGS, P110, DOI 10.1109/REAL.1992.242671
   Lu Y, 2012, REAL TIM SYST SYMP P, P351, DOI 10.1109/RTSS.2012.85
   Nan Guan, 2011, Proceedings of the 2011 IEEE 32nd Real-Time Systems Symposium (RTSS 2011), P13, DOI 10.1109/RTSS.2011.10
   Punnekkat S., 1997, Advances in Computing Science - ASIAN '97. Third Asian Computing Science Conference. Proceedings, P72
   Ren JK, 2015, EUROMICRO, P25, DOI 10.1109/ECRTS.2015.10
   Santy F., 2013, Proceedings of the 21st International Conference on Real-Time Networks and Systems, P183
   Santy F, 2012, EUROMICRO, P155, DOI 10.1109/ECRTS.2012.39
   Singhoff F., 2004, Ada Letters, V24, P1
   Sprunt B., 1988, Proceedings. Real-Time Systems Symposium (IEEE Cat. No.88CH2618-7), P251, DOI 10.1109/REAL.1988.51120
   Su H, 2013, DES AUT TEST EUROPE, P147
   Tindell K.W., 1996, A very simple protocol for mode changes in priority preemptive systems
   Vestal S, 2007, RTSS 2007: 28TH IEEE INTERNATIONAL REAL-TIME SYSTEMS SYMPOSIUM, PROCEEDINGS, P239, DOI 10.1109/RTSS.2007.47
   Wartel F, 2013, INT SYM IND EMBED, P241, DOI 10.1109/SIES.2013.6601497
NR 44
TC 18
Z9 19
U1 0
U2 4
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD APR 1
PY 2017
VL 43
IS 4
BP 298
EP 320
DI 10.1109/TSE.2016.2592907
PG 23
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA ES7IH
UT WOS:000399722800001
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Tantithamthavorn, C
   McIntosh, S
   Hassan, AE
   Matsumoto, K
AF Tantithamthavorn, Chakkrit
   McIntosh, Shane
   Hassan, Ahmed E.
   Matsumoto, Kenichi
TI An Empirical Comparison of Model Validation Techniques for Defect
   Prediction Models
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Defect prediction models; model validation techniques; bootstrap
   validation; cross validation; holdout validation
ID CROSS-VALIDATION; ERROR RATE; PROGNOSTIC MODELS; SOFTWARE; REGRESSION;
   PERFORMANCE; CODE; BOOTSTRAP; FRAMEWORK; SELECTION
AB Defect prediction models help software quality assurance teams to allocate their limited resources to the most defect-prone modules. Model validation techniques, such as k-fold cross-validation, use historical data to estimate how well a model will perform in the future. However, little is known about how accurate the estimates of model validation techniques tend to be. In this paper, we investigate the bias and variance of model validation techniques in the domain of defect prediction. Analysis of 101 public defect datasets suggests that 77 percent of them are highly susceptible to producing unstable results-selecting an appropriate model validation technique is a critical experimental design choice. Based on an analysis of 256 studies in the defect prediction literature, we select the 12 most commonly adopted model validation techniques for evaluation. Through a case study of 18 systems, we find that single-repetition holdout validation tends to produce estimates with 46-229 percent more bias and 53-863 percent more variance than the top-ranked model validation techniques. On the other hand, out-of-sample bootstrap validation yields the best balance between the bias and variance of estimates in the context of our study. Therefore, we recommend that future defect prediction studies avoid singlerepetition holdout validation, and instead, use out-of-sample bootstrap validation.
C1 [Tantithamthavorn, Chakkrit; Matsumoto, Kenichi] Nara Inst Sci & Technol, Grad Sch Informat Sci, Ikoma 6300192, Japan.
   [McIntosh, Shane] McGill Univ, Dept Elect & Comp Engn, Montreal, PQ H3A 0G4, Canada.
   [Hassan, Ahmed E.] Queens Univ, Sch Comp, Kingston, ON K7L 3N6, Canada.
C3 Nara Institute of Science & Technology; McGill University; Queens
   University - Canada
RP Tantithamthavorn, C (corresponding author), Nara Inst Sci & Technol, Grad Sch Informat Sci, Ikoma 6300192, Japan.
EM chakkrit-t@is.naist.jp; shane.mcintosh@mcgill.ca; ahmed@cs.queensu.ca;
   matumoto@is.naist.jp
RI Hassan, Ahmed/AAB-7241-2019; MATSUMOTO, KENICHI/AAD-9090-2019; Ali,
   Ahmed/HOF-4672-2023; KHALIFA, AHMED khalifa/HKF-2246-2023
OI MATSUMOTO, KENICHI/0000-0002-7418-9323; KHALIFA, AHMED
   khalifa/0000-0002-2918-7572; Tantithamthavorn,
   Chakkrit/0000-0002-5516-9984
FU JSPS Program for Advancing Strategic International Networks to
   Accelerate the Circulation of Talented Researchers: Interdisciplinary
   Global Networks for Accelerating Theory and Practice in Software
   Ecosystem; JSPS [16J03360]; Natural Sciences and Engineering Research
   Council of Canada (NSERC); Grants-in-Aid for Scientific Research
   [16J03360] Funding Source: KAKEN
FX The authors would like to thank Frank E. Harrell Jr. for fruitful
   discussion on the state of the art and practice of model validation
   techniques and performance measures. This study would not have been
   possible without the data shared in the Tera-PROMISE repository (curated
   by Tim Menzies, Mitch Rees-Jones, Rahul Krishna and Carter Pape [69]),
   as well as the data shared by Shepperd et al. [93], Zimmermann et al.
   [122], Kim et al. [56], [118], and D'Ambros et al. [21], [22], as well
   as High Performance Computing (HPC) systems provided by the Compute
   Canada 2 and the Centre for Advanced Computing at Queen's University. 3
   This work was supported by the JSPS Program for Advancing Strategic
   International Networks to Accelerate the Circulation of Talented
   Researchers: Interdisciplinary Global Networks for Accelerating Theory
   and Practice in Software Ecosystem, the Grant-in-Aid for JSPS Fellows
   (No. 16J03360), and the Natural Sciences and Engineering Research
   Council of Canada (NSERC).
CR ALTMAN DG, 1994, J NATL CANCER I, V86, P829, DOI 10.1093/jnci/86.11.829
   Altman DG, 2000, STAT MED, V19, P453, DOI 10.1002/(SICI)1097-0258(20000229)19:4<453::AID-SIM350>3.3.CO;2-X
   [Anonymous], P INT C PRED MOD SOF
   [Anonymous], 2013, P 9 INT C PRED MOD S, DOI DOI 10.1145/2499393.2499394
   [Anonymous], 2019, R: A language for environment for statistical computing
   [Anonymous], 2014, RANDOMFOREST BREIMAN
   [Anonymous], SCOTTKNOTTESD R PACK
   [Anonymous], 2012, THESIS
   [Anonymous], 2010, Pract. Assess. Res. Eval.
   [Anonymous], 2010, P 19 ANN WIR OPT COM
   [Anonymous], P INT C PRED MOD SOF
   [Anonymous], 1988, Statistical Power Analysis for the Behavioral Sciences
   [Anonymous], 1950, MONTHLY WEATHER REV
   [Anonymous], 2014, e1071: Misc Functions of the Department of Statistics (e1071)
   [Anonymous], 2007, PROMISE 07, DOI DOI 10.1109/PROMISE.2007.10
   Arcuri A, 2011, LECT NOTES COMPUT SC, V6956, P33, DOI 10.1007/978-3-642-23716-4_6
   Arcuri A, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1, DOI 10.1145/1985793.1985795
   Arisholm E, 2010, J SYST SOFTWARE, V83, P2, DOI 10.1016/j.jss.2009.06.055
   Austin PC., 2014, Stat Methods Med Res
   Azzeh M, 2015, J SYST SOFTWARE, V103, P36, DOI 10.1016/j.jss.2015.01.028
   Beleites C, 2005, CHEMOMETR INTELL LAB, V79, P91, DOI 10.1016/j.chemolab.2005.04.008
   Bird C., 2011, P 19 ACM SIGSOFT S 1, P4, DOI DOI 10.1145/2025113.2025119
   BOX GEP, 1964, J ROY STAT SOC B, V26, P211, DOI 10.1111/j.2517-6161.1964.tb00553.x
   Braga-Neto UM, 2004, BIOINFORMATICS, V20, P374, DOI 10.1093/bioinformatics/btg419
   BREIMAN L, 1992, INT STAT REV, V60, P291, DOI 10.2307/1403680
   Breiman L, 2001, MACH LEARN, V45, P5, DOI 10.1023/A:1010933404324
   Canty A., 2014, boot: Bootstrap R (S-Plus) functions
   Cheung S.-C., 2011, P 19 ACM SIGSOFT S 1, P15
   COHEN J, 1992, PSYCHOL BULL, V112, P155, DOI 10.1037/0033-2909.112.1.155
   CONCATO J, 1993, ANN INTERN MED, V118, P201, DOI 10.7326/0003-4819-118-3-199302010-00009
   COX DR, 1958, BIOMETRIKA, V45, P562, DOI 10.2307/2333203
   D'Ambros Marco, 2010, Proceedings of the 2010 7th IEEE Working Conference on Mining Software Repositories (MSR 2010), P31, DOI 10.1109/MSR.2010.5463279
   D'Ambros M, 2012, EMPIR SOFTW ENG, V17, P531, DOI 10.1007/s10664-011-9173-9
   Davis Jesse, 2006, P 23 INT C MACH LEAR, P233, DOI [DOI 10.1145/1143844.1143874, 10.1145/1143844.1143874]
   DAVISON AC, 1992, BIOMETRIKA, V79, P279
   Dejaeger K, 2012, IEEE T SOFTWARE ENG, V38, P375, DOI 10.1109/TSE.2011.55
   den Boer S, 2005, CRIT CARE, V9, pR458, DOI 10.1186/cc3765
   Domingos P, 1997, MACH LEARN, V29, P103, DOI 10.1023/A:1007413511361
   Dougherty ER, 2010, CURR BIOINFORM, V5, P53, DOI 10.2174/157489310790596385
   Efron B, 1997, J AM STAT ASSOC, V92, P548, DOI 10.2307/2965703
   EFRON B, 1986, J AM STAT ASSOC, V81, P461, DOI 10.2307/2289236
   EFRON B, 1983, J AM STAT ASSOC, V78, P316, DOI 10.2307/2288636
   EFRON B, 1983, AM STAT, V37, P36, DOI 10.2307/2685844
   Efron B., 1993, INTRO BOOTSTRAP, VVolume 914, DOI DOI 10.1007/978-1-4899-4541-9
   Gao KH, 2007, IEEE T RELIAB, V56, P223, DOI 10.1109/TR.2007.896761
   GEISSER S, 1975, J AM STAT ASSOC, V70, P320, DOI 10.2307/2285815
   Ghotra B, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P789, DOI 10.1109/ICSE.2015.91
   Giovanni S., 2010, Ensemble Methods in Data Mining
   Guo L, 2004, 15TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P417
   Haibo He, 2009, IEEE Transactions on Knowledge and Data Engineering, V21, P1263, DOI 10.1109/TKDE.2008.239
   Hall T, 2012, IEEE T SOFTWARE ENG, V38, P1276, DOI 10.1109/TSE.2011.103
   HANLEY JA, 1982, RADIOLOGY, V143, P29, DOI 10.1148/radiology.143.1.7063747
   Harrell FE, 2015, SPRINGER SER STAT, DOI 10.1007/978-3-319-19425-7
   Harrell FE, 1996, STAT MED, V15, P361, DOI 10.1002/(SICI)1097-0258(19960229)15:4<361::AID-SIM168>3.0.CO;2-4
   Hastie T., 2009, The Elements of Statistical Learning
   Huanjing Wang, 2010, 2010 Ninth International Conference on Machine Learning and Applications (ICMLA 2010), P135, DOI 10.1109/ICMLA.2010.27
   Isaksson A, 2008, PATTERN RECOGN LETT, V29, P1960, DOI 10.1016/j.patrec.2008.06.018
   Jelihovschi E., 2014, SCOTTKNOTT CLUSTERIN
   Jiang Y., 2008, DEFECTS 08 P 2008 WO, P16, DOI [DOI 10.1145/1390817.1390822, 10.1145/1390817.1390822]
   Jiang Y, 2007, ISSRE 2007: 18TH IEEE INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P237, DOI 10.1109/ISSRE.2007.24
   Jiang Y, 2008, EMPIR SOFTW ENG, V13, P561, DOI 10.1007/s10664-008-9079-3
   Jiang Y, 2013, INT J SOFTW ENG KNOW, V23, P1399, DOI 10.1142/S0218194013500447
   Jureczko M., 2010, P 6 INT C PREDICTIVE
   Kampstra P., 2008, Journal of Statistical Software, V28, P1, DOI [10.18637/jss.v028.c01, DOI 10.18637/JSS.V028.C01, 10.18637/jss.v028.c01.papers3://publication/uuid/692988CE-7E10-498E-96EC-E7A0CE3620A3]
   Khoshgoftaar TM, 2004, EMPIR SOFTW ENG, V9, P229, DOI 10.1023/B:EMSE.0000027781.18360.9b
   Kim JH, 2009, COMPUT STAT DATA AN, V53, P3735, DOI 10.1016/j.csda.2009.04.009
   Kim S, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P481, DOI 10.1145/1985793.1985859
   Kocaguneli E, 2013, J SYST SOFTWARE, V86, P1879, DOI 10.1016/j.jss.2013.02.053
   Kohavi R., 1995, IJCAI-95. Proceedings of the Fourteenth International Joint Conference on Artificial Intelligence, P1137
   Kohavi R., 1996, Machine Learning. Proceedings of the Thirteenth International Conference (ICML '96), P275
   Kuhn M, 2015, LIB ASCL
   Kuhn M, 2008, J STAT SOFTW, V28, P1, DOI 10.18637/jss.v028.i05
   Lessmann S, 2008, IEEE T SOFTWARE ENG, V34, P485, DOI 10.1109/TSE.2008.35
   Ma Y, 2012, INFORM SOFTWARE TECH, V54, P248, DOI 10.1016/j.infsof.2011.09.007
   Mende T, 2010, EUR CON SFTWR MTNCE, P107, DOI 10.1109/CSMR.2010.18
   Menzies T., 2015, The promise repository of empirical software engineering data
   Menzies T, 2007, IEEE T SOFTWARE ENG, V33, P2, DOI 10.1109/TSE.2007.256941
   Menzies T, 2012, EMPIR SOFTW ENG, V17, P1, DOI 10.1007/s10664-011-9193-5
   MILLER ME, 1991, STAT MED, V10, P1213, DOI 10.1002/sim.4780100805
   Mittas N, 2013, IEEE T SOFTWARE ENG, V39, P537, DOI 10.1109/TSE.2012.45
   Mockus A, 2000, BELL LABS TECH J, V5, P169, DOI 10.1002/bltj.2229
   Molinaro AM, 2005, BIOINFORMATICS, V21, P3301, DOI 10.1093/bioinformatics/bti499
   Moore D.S., 2007, The Basic Practice of Statistics, V2
   Myrtveit I, 2005, IEEE T SOFTWARE ENG, V31, P380, DOI 10.1109/TSE.2005.58
   Myrtveit I, 2012, EMPIR SOFTW ENG, V17, P23, DOI 10.1007/s10664-011-9183-7
   Nagappan N, 2005, PROC INT CONF SOFTW, P284, DOI 10.1145/1062455.1062514
   Nagappan N, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P521, DOI 10.1145/1368088.1368160
   Peduzzi P, 1996, J CLIN EPIDEMIOL, V49, P1373, DOI 10.1016/S0895-4356(96)00236-3
   Peters F, 2013, IEEE T SOFTWARE ENG, V39, P1054, DOI 10.1109/TSE.2013.6
   Priddy K.L., 2005, SPIE, DOI DOI 10.1117/3.633187
   Rahman F, 2012, Proceedings of the ACM SIGSOFT 20th International Symposium on the Foundations of Software Engineering, FSE '12, P61
   Rahman F, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P432, DOI 10.1109/ICSE.2013.6606589
   Rahman Foyzur, 2013, P 2013 9 JOINT M FDN, P147
   Rufibach K, 2010, J CLIN EPIDEMIOL, V63, P938, DOI 10.1016/j.jclinepi.2009.11.009
   SCOTT AJ, 1974, BIOMETRICS, V30, P507, DOI 10.2307/2529204
   Shepperd M, 2001, IEEE T SOFTWARE ENG, V27, P1014, DOI 10.1109/32.965341
   Shepperd M, 2013, IEEE T SOFTWARE ENG, V39, P1208, DOI 10.1109/TSE.2013.11
   Shihab E., 2012, P ACM SIGSOFT 20 INT, P62, DOI 10
   Shihab E., 2011, Proceedings of the ACM SIGSOFT symposium and the European Conference on Foundations of Software Engineering, P300
   Song QB, 2011, IEEE T SOFTWARE ENG, V37, P356, DOI 10.1109/TSE.2010.90
   Steyerberg EW, 2000, STAT MED, V19, P1059, DOI 10.1002/(SICI)1097-0258(20000430)19:8<1059::AID-SIM412>3.3.CO;2-S
   Steyerberg EW., 2019, Clinical Prediction Models: A Practical Approach to Development, Validation, and Updating, P277
   Steyerberg EW, 2010, EPIDEMIOLOGY, V21, P128, DOI 10.1097/EDE.0b013e3181c30fb2
   STONE M, 1974, J R STAT SOC B, V36, P111, DOI 10.1111/j.2517-6161.1974.tb00994.x
   Tan M, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P99, DOI 10.1109/ICSE.2015.139
   Tantithamthavorn C, 2016, PROC INT CONF SOFTW, P321, DOI 10.1145/2884781.2884857
   Tantithamthavorn C, 2016, 2016 IEEE/ACM 38TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING COMPANION (ICSE-C), P867, DOI 10.1145/2889160.2889256
   Tantithamthavorn C, 2016, IEEE T SOFTWARE ENG, V42, P1092, DOI 10.1109/TSE.2016.2553030
   Tantithamthavorn C, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P812, DOI 10.1109/ICSE.2015.93
   Tarvo Alexander, 2008, 2008 IEEE International Symposium on Software Reliability Engineering, P259, DOI 10.1109/ISSRE.2008.21
   Thomas Zimmermann., 2009, P THE 7 JOINT M EURO, P91, DOI DOI 10.1145/1595696.1595713
   Torchiano M., 2015, effsize: Efficient effect size computation. R package version 0.5.4
   Tosun A, 2008, ESEM'08: PROCEEDINGS OF THE 2008 ACM-IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, P318
   Turhan B, 2013, INFORM SOFTWARE TECH, V55, P1101, DOI 10.1016/j.infsof.2012.10.003
   Turhan B, 2012, EMPIR SOFTW ENG, V17, P62, DOI 10.1007/s10664-011-9182-8
   Turhan B, 2009, EXPERT SYST APPL, V36, P9986, DOI 10.1016/j.eswa.2008.12.028
   WOLPERT DH, 1992, NEURAL NETWORKS, V5, P241, DOI 10.1016/S0893-6080(05)80023-1
   Yan Ma, 2007, 2007 3rd International Workshop on Predictor Models in Software Engineering, P1
   Yue Jiang, 2009, 2009 20th International Symposium on Software Reliability Engineering (ISSRE 2009), P99, DOI 10.1109/ISSRE.2009.13
   Zimmermann T, 2007, ISSRE 2007: 18TH IEEE INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P227, DOI 10.1109/ISSRE.2007.19
   Zimmermann T, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P531, DOI 10.1145/1368088.1368161
NR 121
TC 324
Z9 352
U1 7
U2 13
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JAN
PY 2017
VL 43
IS 1
BP 1
EP 18
DI 10.1109/TSE.2016.2584050
PG 18
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA EK2TT
UT WOS:000393780300001
HC Y
HP N
DA 2024-07-18
ER

PT J
AU Lee, T
   Nam, JC
   Han, DY
   Kim, SH
   In, HP
AF Lee, Taek
   Nam, Jaechang
   Han, Donggyun
   Kim, Sunghun
   In, Hoh Peter
TI Developer Micro Interaction Metrics for Software Defect Prediction
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Defect prediction; software quality; software metrics; developer
   interaction; Mylyn
ID CODE CHURN; COMPLEXITY; FAULTS; INDICATORS; VALIDATION; FRAMEWORK
AB To facilitate software quality assurance, defect prediction metrics, such as source code metrics, change churns, and the number of previous defects, have been actively studied. Despite the common understanding that developer behavioral interaction patterns can affect software quality, these widely used defect prediction metrics do not consider developer behavior. We therefore propose micro interaction metrics (MIMs), which are metrics that leverage developer interaction information. The developer interactions, such as file editing and browsing events in task sessions, are captured and stored as information by Mylyn, an Eclipse plug-in. Our experimental evaluation demonstrates that MIMs significantly improve overall defect prediction accuracy when combined with existing software measures, perform well in a cost-effective manner, and provide intuitive feedback that enables developers to recognize their own inefficient behaviors during software development.
C1 [Lee, Taek; In, Hoh Peter] Korea Univ, Seoul, South Korea.
   [Nam, Jaechang] Univ Waterloo, Waterloo, ON N2L 3G1, Canada.
   [Han, Donggyun] Univ Colleage London, London, England.
   [Kim, Sunghun] Hong Kong Univ Sci & Technol, Hong Kong, Hong Kong, Peoples R China.
C3 Korea University; University of Waterloo; University of London;
   University College London; Hong Kong University of Science & Technology
RP Lee, T (corresponding author), Korea Univ, Seoul, South Korea.
EM comtaek@korea.ac.kr; jc.nam@uwaterloo.ca; d.han.14@ucl.ac.uk;
   hunkim@cse.ust.hk; hoh_in@korea.ac.kr
OI Han, DongGyun/0000-0002-8599-2197
FU Next-Generation Information Computing Development Program through the
   National Research Foundation of Korea (NRF) - Ministry of Education,
   Science and Technology [2012M3C4A7033345]
FX The authors are very grateful to Tim Menzies for his valuable comments
   on using Wilcoxon hypothesis testing, 10 times 10-fold cross validation,
   and the CFS feature selection algorithm. This research was supported by
   Next-Generation Information Computing Development Program through the
   National Research Foundation of Korea (NRF) funded by the Ministry of
   Education, Science and Technology (2012M3C4A7033345). T. Lee and H. P.
   In are the corresponding authors.
CR Alpaydin E., 2010, Introduction to Machine Learning
   [Anonymous], 2011, P ACM SIGSOFT S EURO
   [Anonymous], 1998, CORRELATION BASED FE
   [Anonymous], AUTOMAT SOFTW ENG
   [Anonymous], 2006, PROBABILITY STAT ENG
   [Anonymous], 2007, PROMISE 07, DOI DOI 10.1109/PROMISE.2007.10
   Arisholm E, 2010, J SYST SOFTWARE, V83, P2, DOI 10.1016/j.jss.2009.06.055
   Bacchelli A, 2010, LECT NOTES COMPUT SC, V6013, P59
   Basili V.R., 1994, Encyclopedia of Software Engineering, P528532
   Basili VR, 1996, IEEE T SOFTWARE ENG, V22, P751, DOI 10.1109/32.544352
   Bettenburg Nicolas, 2010, Proceedings of the 18th IEEE International Conference on Program Comprehension (ICPC 2010), P124, DOI 10.1109/ICPC.2010.46
   Bird C., 2011, P 19 ACM SIGSOFT S 1, P4, DOI DOI 10.1145/2025113.2025119
   Bird C, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P121, DOI 10.1145/1595696.1595716
   Breiman L., 2001, Machine Learning, V45, P5, DOI 10.1023/A:1010933404324
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   CLIFF N, 1993, PSYCHOL BULL, V114, P494, DOI 10.1037/0033-2909.114.3.494
   Crosby P.B., 1979, QUALITY IS FREE ART
   Czerwonka Jacek, 2011, Proceedings 2011 IEEE Fourth International Conference on Software Testing, Verification and Validation (ICST 2011), P357, DOI 10.1109/ICST.2011.24
   D'Ambros Marco, 2010, Proceedings of the 2010 7th IEEE Working Conference on Mining Software Repositories (MSR 2010), P31, DOI 10.1109/MSR.2010.5463279
   Ghotra B, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P789, DOI 10.1109/ICSE.2015.91
   Gu ZX, 2012, PROC INT CONF SOFTW, P1630, DOI 10.1109/ICSE.2012.6227220
   Gyimóthy T, 2005, IEEE T SOFTWARE ENG, V31, P897, DOI 10.1109/TSE.2005.112
   Hall M., 2009, ACM SIGKDD Explor. Newsl, V11, P18, DOI DOI 10.1145/1656274.1656278
   Hall MA, 2003, IEEE T KNOWL DATA EN, V15, P1437, DOI 10.1109/TKDE.2003.1245283
   Hassan AE, 2009, PROC INT CONF SOFTW, P78, DOI 10.1109/ICSE.2009.5070510
   Hata H, 2012, PROC INT CONF SOFTW, P200, DOI 10.1109/ICSE.2012.6227193
   Kamei Y, 2016, EMPIR SOFTW ENG, V21, P2072, DOI 10.1007/s10664-015-9400-x
   Kersten M, 2005, P 2005 INT C ASP OR, P159, DOI DOI 10.1145/1052898.1052912
   Kersten Mik, 2006, P 14 ACM SIGSOFT INT, P1
   Khomh F, 2012, EMPIR SOFTW ENG, V17, P243, DOI 10.1007/s10664-011-9171-y
   Kim D, 2011, IEEE T SOFTWARE ENG, V37, P430, DOI 10.1109/TSE.2011.20
   Kim S, 2008, IEEE T SOFTWARE ENG, V34, P181, DOI 10.1109/TSE.2007.70773
   Kim S, 2007, PROC INT CONF SOFTW, P489
   Ko AJ, 2005, J VISUAL LANG COMPUT, V16, P41, DOI 10.1016/j.jvlc.2004.08.003
   Koru AG, 2008, EMPIR SOFTW ENG, V13, P473, DOI 10.1007/s10664-008-9080-x
   LaToza T. D., 2006, 28th International Conference on Software Engineering Proceedings, P492, DOI 10.1145/1134285.1134355
   Lee T., 2011, Proceedings of the 19th ACM SIGSOFT symposium and the 13th European conference on Foundations of software engineering, P311
   Lessmann S, 2008, IEEE T SOFTWARE ENG, V34, P485, DOI 10.1109/TSE.2008.35
   Lewis C, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P372, DOI 10.1109/ICSE.2013.6606583
   Mende T., 2009, P 5 INT C PREDICTOR, P1, DOI [10.1145/1540438.1540448, DOI 10.1145/1540438.1540448]
   Mende T, 2010, EUR CON SFTWR MTNCE, P107, DOI 10.1109/CSMR.2010.18
   Meneely A., 2008, P 16 ACM SIGSOFT INT, P13, DOI DOI 10.1145/1453101.1453106
   Menzies T, 2007, IEEE T SOFTWARE ENG, V33, P2, DOI 10.1109/TSE.2007.256941
   Mockus A, 2000, PROC IEEE INT CONF S, P120, DOI 10.1109/ICSM.2000.883028
   Moser R, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P181, DOI 10.1145/1368088.1368114
   Murphy GC, 2006, IEEE SOFTWARE, V23, P76, DOI 10.1109/MS.2006.105
   Nagappan N, 2005, PROC INT CONF SOFTW, P284, DOI 10.1145/1062455.1062514
   Nagappan N, 2005, PROC INT CONF SOFTW, P580, DOI 10.1145/1062455.1062558
   Nagappan N., 2006, 28th International Conference on Software Engineering Proceedings, P452, DOI 10.1145/1134285.1134349
   Ohlsson N, 1996, IEEE T SOFTWARE ENG, V22, P886, DOI 10.1109/32.553637
   Ostrand TJ, 2005, IEEE T SOFTWARE ENG, V31, P340, DOI 10.1109/TSE.2005.49
   Rahman F, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P432, DOI 10.1109/ICSE.2013.6606589
   Robbes R, 2008, WORK CONF REVERSE EN, P42, DOI 10.1109/WCRE.2008.47
   Robbes R, 2007, INT C PROGRAM COMPRE, P155
   Romano Jeanine, 2006, ANN M FLOR ASS I RES, V177, P34
   Scott S, 1999, MACHINE LEARNING, PROCEEDINGS, P379
   Shin Y, 2011, IEEE T SOFTWARE ENG, V37, P772, DOI 10.1109/TSE.2010.81
   Shivaji S, 2009, IEEE INT CONF AUTOM, P600, DOI 10.1109/ASE.2009.76
   Sliwerski J., 2005, ACM SIGSOFT SOFTWARE, P1, DOI DOI 10.1145/1082983.1083147
   Subramanyam R, 2003, IEEE T SOFTWARE ENG, V29, P297, DOI 10.1109/TSE.2003.1191795
   Vahid F., 2001, EMBEDDED SYSTEM DESI
   Ying ATT, 2011, CONF PROC INT SYMP C, P31, DOI 10.1109/ICPC.2011.35
   Zhang HY, 2009, PROC IEEE INT CONF S, P274, DOI 10.1109/ICSM.2009.5306304
   Zimmermann T, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P531, DOI 10.1145/1368088.1368161
   Zou LJ, 2007, INT C PROGRAM COMPRE, P135
   [No title captured]
NR 66
TC 43
Z9 44
U1 2
U2 11
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD NOV 1
PY 2016
VL 42
IS 11
BP 1015
EP 1035
DI 10.1109/TSE.2016.2550458
PG 21
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA ED5BK
UT WOS:000388866100002
DA 2024-07-18
ER

PT J
AU Noureddine, MA
   Zaraket, FA
AF Noureddine, Mohammad A.
   Zaraket, Fadi A.
TI Model Checking Software with First Order Logic Specifications Using AIG
   Solvers
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Software verification; static analysis; Boolean satisfiability solvers;
   Hoare triplet
AB Static verification techniques leverage Boolean formula satisfiability solvers such as SAT and SMT solvers that operate on conjunctive normal form and first order logic formulae, respectively, to validate programs. They force bounds on variable ranges and execution time and translate the program and its specifications into a Boolean formula. They are limited to programs of relatively low complexity for the following reasons. (1) A small increase in the bounds can cause a large increase in the size of the translated formula. (2) Boolean satisfiability solvers are restricted to using optimizations that apply at the level of the formula. Finally, (3) the Boolean formulae often need to be regenerated with higher bounds to ensure the correctness of the translation. We present a method that uses And-Inverter-Graph (AIG) sequential circuits, and AIG synthesis and verification frameworks to validate programs. An AIG is a Boolean formula with memory elements, logically complete negated conjunction gates, and a hierarchical structure. Encoding the validation problem of a program as an AIG (1) typically provides a more succinct representation than a Boolean formulae encoding with no memory elements, (2) preserves the high-level structure of the program, and (3) enables the use of a number of powerful automated analysis techniques that have no counterparts for other Boolean formulae such as CNF. Our method takes an imperative program with a first order logic specification consisting of a precondition and a postcondition pair, and a bound on the program variable ranges, and produces an AIG with a designated output that is true when the program violates the specification. Our method uses AIG synthesis reduction techniques to reduce the AIG, and then uses AIG verification techniques to check the satisfiability of the designated output. The results show that our method can validate designs that are not possible with other state of the art techniques, and with bounds that are an order of magnitude larger.
C1 [Noureddine, Mohammad A.] Univ Illinois, Dept Comp Sci, Champaign, IL 61820 USA.
   [Zaraket, Fadi A.] Amer Univ Beirut, Dept Elect & Comp Engn, Beirut, Lebanon.
C3 University of Illinois System; University of Illinois Urbana-Champaign;
   American University of Beirut
RP Noureddine, MA (corresponding author), Univ Illinois, Dept Comp Sci, Champaign, IL 61820 USA.
EM nouredd2@illinois.edu; zfadi@utexas.edu
OI Zaraket, Fadi/0000-0001-5909-6375
FU University Research Board (URB) grant from the American University of
   Beirut
FX This work was funded by a two year University Research Board (URB) grant
   from the American University of Beirut.
CR Albarghouthi Aws, 2012, Computer Aided Verification. Proceedings 24th International Conference, CAV 2012, P672, DOI 10.1007/978-3-642-31424-7_48
   Aloul FA, 2002, DES AUT CON, P731, DOI 10.1109/DAC.2002.1012719
   Amla N, 2005, LECT NOTES COMPUT SC, V3725, P254
   Armando A, 2006, LECT NOTES COMPUT SC, V3925, P146
   Aziz A, 2002, FORM METHOD SYST DES, V21, P193, DOI 10.1023/A:1016043502772
   Baudin Patrick., 2008, ACSL ANSI C SPECIFIC, Vpreliminary
   Baumgartner J., 2002, Computer Aided Verification. 14th International Conference, CAV 2002. Proceedings (Lecture Notes in Computer Science Vol.2404), P151
   Baumgartner P, 2009, J APPL LOGIC, V7, P58, DOI 10.1016/j.jal.2007.07.005
   Beyer Dirk, 2007, International Journal on Software Tools for Technology Transfer, V9, P505, DOI 10.1007/s10009-007-0044-z
   Beyer D., 2012, FSE
   Beyer D., 2014, Tools and Algorithms for the Con- struction and Analysis of Systems, P373
   Beyer D., 2012, P 8 INT DOCT WORKSH, P1, DOI DOI 10.1007/978-3-642-36046-6_1
   Bjesse P, 2004, ICCAD-2004: INTERNATIONAL CONFERENCE ON COMPUTER AIDED DESIGN, IEEE/ACM DIGEST OF TECHNICAL PAPERS, P42, DOI 10.1109/ICCAD.2004.1382541
   Bjesse P, 2000, LECT NOTES COMPUT SC, V1954, P372
   Bjrner N., 2009, P 6 INT WORKSH CONST
   Bradley A. R., 2007, The Calculus of Computation
   Bradley AR, 2011, LECT NOTES COMPUT SC, V6538, P70, DOI 10.1007/978-3-642-18275-4_7
   Brayton R, 2010, LECT NOTES COMPUT SC, V6174, P24, DOI 10.1007/978-3-642-14295-6_5
   BURCH JR, 1992, INFORM COMPUT, V98, P142, DOI 10.1016/0890-5401(92)90017-A
   Bybell T, 2010, Gtkwave electronic waveform viewer
   Clarke E, 2004, LECT NOTES COMPUT SC, V2988, P168, DOI 10.1007/978-3-540-24730-2_15
   Cohen E, 2009, LECT NOTES COMPUT SC, V5674, P23, DOI 10.1007/978-3-642-03359-9_2
   Cormen T. H., 2009, Introduction to Algorithms, VSecond
   Edwards SA, 2005, DES AUT TEST EUROPE, P66, DOI 10.1109/DATE.2005.307
   Een N., 2011, 2011 Formal Methods in Computer-Aided Design (FMCAD), P125
   Een N., 2003, ELECT NOTES THEORETI, V89, P543, DOI 10.1016/s1571-0661(05)82542-3
   Falke S, 2013, IEEE INT CONF AUTOM, P706, DOI 10.1109/ASE.2013.6693138
   Fu ZH, 2005, DES AUT TEST EUROPE, P1108
   Gurfinkel Arie., 2014, P INT C TOOLS ALGORI, V8413, P93, DOI 10.1007/978-3-642-54862-8_7
   Heizmann Matthias, 2013, Computer Aided Verification. 25th International Conference, CAV 2013. Proceedings. LNCS 8044, P36, DOI 10.1007/978-3-642-39799-8_2
   Ho PH, 2000, ICCAD - 2000 : IEEE/ACM INTERNATIONAL CONFERENCE ON COMPUTER AIDED DESIGN, P120, DOI 10.1109/ICCAD.2000.896461
   Hurst AP, 2007, FMCAD 2007: FORMAL METHODS IN COMPUTER AIDED DESIGN, PROCEEDINGS, P181
   Khurshid S, 2003, LECT NOTES COMPUT SC, V2619, P553
   Kuehlmann A, 2001, LECT NOTES COMPUT SC, V2102, P104
   Kuehlmann A, 2001, DES AUT CON, P232, DOI 10.1109/DAC.2001.935510
   Marinov D, 2005, LECT NOTES COMPUT SC, V3569, P187
   McMillan KL, 2003, LECT NOTES COMPUT SC, V2725, P1
   Mishchenko Alan, 2008, 2008 IEEE/ACM International Conference on Computer-Aided Design (ICCAD), P234, DOI 10.1109/ICCAD.2008.4681580
   Mishchenko A., 2013, IWLS
   Mishchenko A, 2006, DES AUT CON, P532, DOI 10.1109/DAC.2006.229287
   Mony H, 2005, DES AUT CON, P463
   Mony H, 2004, LECT NOTES COMPUT SC, V3312, P159
   Morse J., 2014, TACAS, V8413, P405
   Moskewicz MW, 2001, DES AUT CON, P530, DOI 10.1109/DAC.2001.935565
   Nipkow T., 2002, ISABELLE HOL PROOF A, DOI DOI 10.1007/3-540-45949-9
   PARR TJ, 1995, SOFTWARE PRACT EXPER, V25, P789, DOI 10.1002/spe.4380250705
   Pasareanu Corina S., 2008, P 2008 INT S SOFTW T, P15, DOI [DOI 10.1145/1390630.1390635, DOI 10.1145/1390630]
   Sorensson N., 2005, SAT, V2005, P1
   Tortak E, 2007, LECT NOTES COMPUT SC, V4424, P632
   Visser W., 2003, Automated Software Engineering, V10, P203, DOI 10.1023/A:1022920129859
   Wang D, 2003, THESIS
   Williams P. F., 2000, Lecture Notes in Computer Science, V1855, P124
   Xie F, 2003, LECT NOTES COMPUT SC, V2805, P582
   Zaraket F. A., 2007, P 22 IEEE ACM INT C, P114
   Zaraket F, 2007, PROC INT CONF SOFTW, P13
   Zhu Q, 2006, DES AUT CON, P229, DOI 10.1109/DAC.2006.229206
NR 56
TC 4
Z9 4
U1 0
U2 2
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD AUG
PY 2016
VL 42
IS 8
BP 741
EP 763
DI 10.1109/TSE.2016.2520468
PG 23
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA DT4UE
UT WOS:000381475800002
DA 2024-07-18
ER

PT J
AU Jovanovic, A
   Lime, D
   Roux, OH
AF Jovanovic, Aleksandra
   Lime, Didier
   Roux, Olivier H.
TI Integer Parameter Synthesis for Real-Time Systems
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Timed automata; parameters; synthesis; model-checking; real-time
   systems; symbolic algorithms
ID MODEL-CHECKING
AB We provide a subclass of parametric timed automata (PTA) that we can actually and efficiently analyze, and we argue that it retains most of the practical usefulness of PTA for the modeling of real-time systems. The currently most useful known subclass of PTA, L/U automata, has a strong syntactical restriction for practical purposes, and we show that the associated theoretical results are mixed. We therefore advocate for a different restriction scheme: since in classical timed automata, real-valued clocks are always compared to integers for all practical purposes, we also search for parameter values as bounded integers. We show that the problem of the existence of parameter values such that some TCTL property is satisfied is PSPACE-complete. In such a setting, we can of course synthesize all the values of parameters and we give symbolic algorithms, for reachability and unavoidability properties, to do it efficiently, i.e., without an explicit enumeration. This also has the practical advantage of giving the result as symbolic constraints between the parameters. We finally report on a few experimental results to illustrate the practical usefulness of our approach.
C1 [Jovanovic, Aleksandra; Lime, Didier; Roux, Olivier H.] Ecole Cent Nantes IRCCyN UMR CNRS 6597, Nantes, France.
C3 Nantes Universite; Ecole Centrale de Nantes
RP Jovanovic, A (corresponding author), Ecole Cent Nantes IRCCyN UMR CNRS 6597, Nantes, France.
EM aleksandra.jovanovic@cs.ox.ac.uk; Didier.Lime@irccyn.ec-nantes.fr;
   olivier-h.roux@irccyn.ec-nantes.fr
OI Lime, Didier/0000-0001-9429-7586; Roux, Olivier H./0000-0003-1665-0481
FU ANR national research program ImpRo [ANR-2010-BLAN-0317]; ANR national
   research program PACS [ANR-2014]
FX The authors thank the anonymous reviewers for their very useful
   comments. This work was partially funded by the ANR national research
   programs ImpRo (ANR-2010-BLAN-0317) and PACS (ANR-2014). A preliminary
   version of this work appeared in [20].
CR ALUR R, 1994, THEOR COMPUT SCI, V126, P183, DOI 10.1016/0304-3975(94)90010-8
   ALUR R, 1993, INFORM COMPUT, V104, P2, DOI 10.1006/inco.1993.1024
   Alur R., 1993, Proceedings of the Twenty-Fifth Annual ACM Symposium on the Theory of Computing, P592, DOI 10.1145/167088.167242
   André É, 2008, ELECTRON NOTES THEOR, V223, P29, DOI 10.1016/j.entcs.2008.12.029
   Bagnara R, 2005, FORM ASP COMPUT, V17, P222, DOI 10.1007/s00165-005-0061-1
   Behrmann G, 2004, LECT NOTES COMPUT SC, V3185, P200
   BERTHOMIEU B, 1991, IEEE T SOFTWARE ENG, V17, P259, DOI 10.1109/32.75415
   Bozzelli L, 2009, FORM METHOD SYST DES, V35, P121, DOI 10.1007/s10703-009-0074-0
   Bruyère V, 2007, LOG METH COMPUT SCI, V3, DOI 10.2168/LMCS-3(1:7)2007
   Bucci G, 2004, IEEE T SOFTWARE ENG, V30, P97, DOI 10.1109/TSE.2004.1265815
   Bucci Giacomo, 2010, International Journal on Software Tools for Technology Transfer, V12, P391, DOI 10.1007/s10009-010-0156-8
   D'Souza D., 1999, Foundations of Software Technology and Theoretical Computer Science. 19th Conference. Proceedings (Lecture Notes in Computer Science Vol.1738), P60
   D'Souza D, 2002, SADHANA-ACAD P ENG S, V27, P181, DOI 10.1007/BF02717183
   Doyen L, 2007, INFORM PROCESS LETT, V102, P208, DOI 10.1016/j.ipl.2006.11.018
   Halbwachs N., 1994, LECT NOTES COMPUTER, V864, P223
   HENZINGER TA, 1994, INFORM COMPUT, V111, P193, DOI 10.1006/inco.1994.1045
   Henzinger TA, 1997, LECT NOTES COMPUT SC, V1254, P460, DOI 10.1007/s100090050008
   Hune T, 2002, J LOGIC ALGEBR PROGR, V52-3, P183, DOI 10.1016/S1567-8326(02)00037-1
   Jard C., 2012, 21 INT WORKSH CONC S
   Jovanovic Aleksandra, 2013, Automated Technology for Verification and Analysis. 11th International Symposium, ATVA 2013. Proceedings: LNCS 8172, P87, DOI 10.1007/978-3-319-02444-8_8
   Jovanovic A, 2013, LECT NOTES COMPUT SC, V7795, P401, DOI 10.1007/978-3-642-36742-7_28
   Jurdzinski M, 2007, LECT NOTES COMPUT SC, V4596, P838
   Laroussinie F, 2002, LECT NOTES COMPUT SC, V2303, P264
   Larsen K. G., 1995, Fundamentals of Computation Theory. 10th International Conference, FCT'95. Proceedings, P62
   Lime D, 2009, LECT NOTES COMPUT SC, V5505, P54, DOI 10.1007/978-3-642-00768-2_6
   Merlin P. M., 1974, A study of the recoverability of computing systems
   Meyer R. R., 1974, Mathematical Programming, V7, P223, DOI 10.1007/BF01585518
   Miller JS, 2000, LECT NOTES COMPUT SC, V1790, P296
   Minsky M., 1967, Computation: finite and infinite machines
   Savitch W. J., 1970, Journal of computer and system sciences, V4, P177, DOI [DOI 10.1016/S0022-0000(70)80006-X, 10. 1016/S0022-0000(70)80006-X]
   Schrijver A., 1998, THEORY LINEAR INTEGE
   SUZUKI I, 1990, IEEE T SOFTWARE ENG, V16, P1273, DOI 10.1109/32.60315
   Thierry-Mieg Y, 2009, LECT NOTES COMPUT SC, V5505, P1, DOI 10.1007/978-3-642-00768-2_1
   Traonouez LM, 2009, J UNIVERS COMPUT SCI, V15, P3273
   Virbitskaite IB, 1999, LECT NOTES COMPUT SC, V1662, P134
   Wang F, 1996, INFORM COMPUT, V130, P131, DOI 10.1006/inco.1996.0086
NR 36
TC 60
Z9 60
U1 0
U2 4
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAY
PY 2015
VL 41
IS 5
BP 445
EP 461
DI 10.1109/TSE.2014.2357445
PG 17
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA CI1BN
UT WOS:000354475400002
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Panichella, A
   Oliveto, R
   Di Penta, M
   De Lucia, A
AF Panichella, Annibale
   Oliveto, Rocco
   Di Penta, Massimiliano
   De Lucia, Andrea
TI Improving Multi-Objective Test Case Selection by Injecting Diversity in
   Genetic Algorithms
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Test case selection; regression testing; orthogonal design; singular
   value decomposition; genetic algorithms; empirical studies
ID OPTIMIZATION; MINIMIZATION; PRIORITIZATION; CRITERIA; DESIGN
AB A way to reduce the cost of regression testing consists of selecting or prioritizing subsets of test cases from a test suite according to some criteria. Besides greedy algorithms, cost cognizant additional greedy algorithms, multi-objective optimization algorithms, and multi-objective genetic algorithms (MOGAs), have also been proposed to tackle this problem. However, previous studies have shown that there is no clear winner between greedy and MOGAs, and that their combination does not necessarily produce better results. In this paper we show that the optimality of MOGAs can be significantly improved by diversifying the solutions (sub-sets of the test suite) generated during the search process. Specifically, we introduce a new MOGA, coined as DIversity based Genetic Algorithm (DIV-GA), based on the mechanisms of orthogonal design and orthogonal evolution that increase diversity by injecting new orthogonal individuals during the search process. Results of an empirical study conducted on eleven programs show that DIV-GA outperforms both greedy algorithms and the traditional MOGAs from the optimality point of view. Moreover, the solutions (sub-sets of the test suite) provided by DIV-GA are able to detect more faults than the other algorithms, while keeping the same test execution cost.
C1 [Panichella, Annibale; De Lucia, Andrea] Univ Salerno, Dept Math & Comp Sci, I-84084 Salerno, Italy.
   [Oliveto, Rocco] Univ Molise, Dept Biosci & Terr, I-86090 Pesche, Isernia, Italy.
   [Di Penta, Massimiliano] Univ Sannio, Dept Engn, I-82100 Benevento, Italy.
C3 University of Salerno; University of Molise; University of Sannio
RP Panichella, A (corresponding author), Univ Salerno, Dept Math & Comp Sci, I-84084 Salerno, Italy.
EM apanichella@unisa.it; rocco.oliveto@unimol.it; dipenta@unisannio.it;
   adelucia@unisa.it
RI De Lucia, Andrea/AAG-6781-2020; Panichella, Annibale/AAJ-8443-2020; Di
   Penta, Massimiliano/AAF-9656-2021
OI De Lucia, Andrea/0000-0002-4238-1425; Di Penta,
   Massimiliano/0000-0002-0340-9747
CR Aguirre HE, 2005, LECT NOTES COMPUT SC, V3410, P355
   [Anonymous], 1995, P 12 INT C TEST COMP
   [Anonymous], MATLAB VERS 7 10 0 R
   [Anonymous], INT S SOFTW TEST AN
   [Anonymous], 2006, Evolutionary Algorithms for Solving Multi-Objective Problems (Genetic and Evolutionary Computation)
   Arcuri A, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1, DOI 10.1145/1985793.1985795
   Auger A, 2009, FOGA'09: PROCEEDINGS OF THE 10TH ACM SIGRVO CONFERENCE ON FOUNDATIONS OF GENETIC ALGORITHMS, P87
   Bates S., 1993, Conference Record of the Twentieth Annual ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages, P384, DOI 10.1145/158511.158694
   Black J, 2004, PROC INT CONF SOFTW, P106, DOI 10.1109/ICSE.2004.1317433
   Bryce RC, 2005, PROC INT CONF SOFTW, P146
   Chen TY, 2010, J SYST SOFTWARE, V83, P60, DOI 10.1016/j.jss.2009.02.022
   Chen TY, 1996, INFORM PROCESS LETT, V60, P135, DOI 10.1016/S0020-0190(96)00135-4
   Cohen J., 1988, STAT POWER ANAL BEHA
   Cohen MB, 2008, IEEE T SOFTWARE ENG, V34, P633, DOI 10.1109/TSE.2008.50
   Conover W. J., 1998, PRACTICAL NONPARAMET, V3rd
   Crepinsek M, 2013, ACM COMPUT SURV, V45, DOI 10.1145/2480741.2480752
   De Lucia A., 2012, 2012 Proceedings of 7th International Workshop on Automation of Software Test (AST 2012), P145, DOI 10.1109/IWAST.2012.6228983
   De Lucia A, 2012, PROCEEDINGS OF THE FOURTEENTH INTERNATIONAL CONFERENCE ON GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P617, DOI 10.1145/2330163.2330251
   Deb K, 2002, IEEE T EVOLUT COMPUT, V6, P182, DOI 10.1109/4235.996017
   Deb K., 2001, MULTIOBJECTIVE OPTIM, DOI DOI 10.1109/TEVC.2002.804322
   Do HS, 2004, 15TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P113
   Do HS, 2005, EMPIR SOFTW ENG, V10, P405, DOI 10.1007/s10664-005-3861-2
   Eiben A. E., 1998, Fundamenta Informaticae, V35, P35
   Elbaum S, 2002, IEEE T SOFTWARE ENG, V28, P159, DOI 10.1109/32.988497
   Elbaum S, 2001, PROC INT CONF SOFTW, P329, DOI 10.1109/ICSE.2001.919106
   Elbaum S., 2000, Software Engineering Notes, V25, P102, DOI 10.1145/347636.348910
   Fischer K. F., 1977, The IEEE Computer Society's First International Computer Software and Applications Conference, P421
   Garousi V, 2010, J SYST SOFTWARE, V83, P2251, DOI 10.1016/j.jss.2010.07.012
   Goldberg D. E., 1989, GENETIC ALGORITHMS S
   Harik G.R., 1995, 6th International Conference on Genetic Algorithms, P24
   Harman M., 2011, 2011 IEEE Fourth International Conference on Software Testing, Verification and Validation Workshops (ICSTW), P111, DOI 10.1109/ICSTW.2011.60
   Harrold M. J., 1993, ACM Transactions on Software Engineering and Methodology, V2, P270, DOI 10.1145/152388.152391
   Hemmati H., 2011, Proceedings 2011 IEEE Fourth International Conference on Software Testing, Verification and Validation (ICST 2011), P327, DOI 10.1109/ICST.2011.12
   Hemmati H, 2013, ACM T SOFTW ENG METH, V22, DOI 10.1145/2430536.2430540
   Hemmati H, 2010, LECT NOTES COMPUT SC, V6435, P63, DOI 10.1007/978-3-642-16573-3_6
   Hiroyasu T, 2008, LECT NOTES COMPUT SC, V5199, P722, DOI 10.1007/978-3-540-87700-4_72
   Holland J.H., 1992, Adaptation in Natural and Artificial Systems, DOI DOI 10.7551/MITPRESS/1090.001.0001
   HOLM S, 1979, SCAND J STAT, V6, P65
   Jeffrey D, 2005, PROC IEEE INT CONF S, P549
   Kifetew F. M., 2013, P INT S SOFTW TEST A, P1
   Köppen M, 2007, LECT NOTES COMPUT SC, V4403, P727
   Li H, 2006, LECT NOTES COMPUT SC, V4221, P696
   Li Z, 2007, IEEE T SOFTWARE ENG, V33, P225, DOI 10.1109/TSE.2007.38
   Maaranen H, 2007, J GLOBAL OPTIM, V37, P405, DOI 10.1007/s10898-006-9056-6
   Mahfoud S. W., 1995, 9500 U ILL URB CHAMP
   Malishevsky Alexey G., 2006, TRUNLCSE20060004
   Marler RT, 2004, STRUCT MULTIDISCIP O, V26, P369, DOI 10.1007/s00158-003-0368-6
   Marré M, 2003, IEEE T SOFTWARE ENG, V29, P974, DOI 10.1109/TSE.2003.1245299
   McMaster S, 2005, PROC IEEE INT CONF S, P539
   Montgomery D.C., 1991, DESIGN ANAL EXPT
   Panichella A., 2013, IMPROVING MULTIOBJEC
   Rothermel G, 1998, PROC IEEE INT CONF S, P34, DOI 10.1109/ICSM.1998.738487
   Rothermel G, 2001, IEEE T SOFTWARE ENG, V27, P929, DOI 10.1109/32.962562
   Rothermel G, 2002, SOFTW TEST VERIF REL, V12, P219, DOI 10.1002/stvr.256
   Rothermel G, 1996, IEEE T SOFTWARE ENG, V22, P529, DOI 10.1109/32.536955
   Rothermel G, 1998, IEEE T SOFTWARE ENG, V24, P401, DOI 10.1109/32.689399
   Rothermel G., 1993, Proceedings. Conference on Software Maintenance 1993. CSM-93 (Cat. No.93CH3360-5), P358, DOI 10.1109/ICSM.1993.366926
   Runeson P, 2006, IEEE SOFTWARE, V23, P22, DOI 10.1109/MS.2006.91
   Sampath S, 2013, IEEE T SOFTWARE ENG, V39, P1326, DOI 10.1109/TSE.2013.16
   Shin Yoo, 2010, 2010 Proceedings of Second International Symposium on Search Based Software Engineering (SSBSE), P19, DOI 10.1109/SSBSE.2010.12
   Srikanth H., 2005, P INT S EMP SOFTW EN, P60
   Stinson D.R., 2008, SIGACT NEWS, V39, P17
   Strang, 2009, Introduction to linear algebra
   Toffolo A, 2003, EVOL COMPUT, V11, P151, DOI 10.1162/106365603766646816
   Walcott K.R., 2006, P INT S SOFTW TEST A, P1, DOI DOI 10.1145/1146238.1146240
   WONG WE, 1995, PROC INT CONF SOFTW, P41, DOI 10.1145/225014.225018
   Yau S. S., 1987, P INT COMP SOFTW APP
   Yoo S, 2012, SOFTW TEST VERIF REL, V22, P67, DOI [10.1002/stv.430, 10.1002/stvr.430]
   Yoo S., 2007, Proceedings of the 2007 international symposium on Software testing and analysis, P140, DOI 10.1145/1273463.1273483
   Yoo S, 2011, LECT NOTES COMPUT SC, V6956, P219, DOI 10.1007/978-3-642-23716-4_20
   Yoo S, 2010, J SYST SOFTWARE, V83, P689, DOI 10.1016/j.jss.2009.11.706
   Zhang QF, 1999, IEEE T EVOLUT COMPUT, V3, P53, DOI 10.1109/4235.752920
   Zhu JK, 2009, COMM COM INF SC, V51, P45, DOI 10.1007/978-3-642-04962-0_6
   Zitzler E, 2007, LECT NOTES COMPUT SC, V4403, P862
NR 74
TC 91
Z9 96
U1 0
U2 16
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD APR
PY 2015
VL 41
IS 4
BP 358
EP 383
DI 10.1109/TSE.2014.2364175
PG 26
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA CG2PC
UT WOS:000353115800002
DA 2024-07-18
ER

PT J
AU Bergersen, GR
   Sjoberg, DIK
   Dybå, T
AF Bergersen, Gunnar R.
   Sjoberg, Dag I. K.
   Dyba, Tore
TI Construction and Validation of an Instrument for Measuring Programming
   Skill
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Skill; programming; performance; instrument; measurement; empirical
   software engineering
ID CONJOINT-MEASUREMENT; WORKING-MEMORY; RASCH MODEL; EFFECT SIZE;
   SOFTWARE; PERFORMANCE; KNOWLEDGE; ACQUISITION; ABILITIES;
   MAINTAINABILITY
AB Skilled workers are crucial to the success of software development. The current practice in research and industry for assessing programming skills is mostly to use proxy variables of skill, such as education, experience, and multiple-choice knowledge tests. There is as yet no valid and efficient way to measure programming skill. The aim of this research is to develop a valid instrument that measures programming skill by inferring skill directly from the performance on programming tasks. Over two days, 65 professional developers from eight countries solved 19 Java programming tasks. Based on the developers' performance, the Rasch measurement model was used to construct the instrument. The instrument was found to have satisfactory (internal) psychometric properties and correlated with external variables in compliance with theoretical expectations. Such an instrument has many implications for practice, for example, in job recruitment and project allocation.
C1 [Bergersen, Gunnar R.; Sjoberg, Dag I. K.; Dyba, Tore] Univ Oslo, Dept Informat, NO-0316 Oslo, Norway.
C3 University of Oslo
RP Bergersen, GR (corresponding author), Univ Oslo, Dept Informat, POB 1080 Blindern, NO-0316 Oslo, Norway.
EM gunnab@ifi.uio.no; dagsj@ifi.uio.no; tore.dyba@sintef.no
RI Bergersen, Gunnar/AAF-9256-2020
FU Simula Research Laboratory; Research Council of Norway [182567,
   193236/I40, 217594/O30]
FX This work was supported by Simula Research Laboratory and the Research
   Council of Norway through grants no. 182567, 193236/I40, and 217594/O30.
   The authors thank the anonymous referees for valuable comments, Erik
   Arisholm and Jo Hannay for useful discussions and feedback on an earlier
   version of this paper, Steinar Haugen, Gunnar Carelius, Arne Salicath,
   and Linda Sorlie for technical assistance, Steinar Haugen, Sindre Mehus,
   Arne Salicath, Aleksey Udovydchenko, and Alexander Ottesen for
   developing new tasks, Magdalena Ivanovska for assistance with
   mathematical notation, Lenore Hietkamp for copyediting, and the
   companies and developers who participated in the study.
CR Ackerman PL, 2007, J EXP PSYCHOL-APPL, V13, P57, DOI 10.1037/1076-898X.13.2.57
   American Educational Research Association American Psychological Association and National Council on Measurement in Education., 1999, STAND ED PSYCH TEST
   Anda BCD, 2009, IEEE T SOFTWARE ENG, V35, P407, DOI 10.1109/TSE.2008.89
   ANDERSON JR, 1987, PSYCHOL REV, V94, P192, DOI 10.1037/0033-295X.94.2.192
   ANDERSON JR, 1982, PSYCHOL REV, V89, P369, DOI 10.1037/0033-295X.89.4.369
   ANDERSON JR, 1989, COGNITIVE SCI, V13, P467, DOI 10.1207/s15516709cog1304_1
   ANDRICH D, 1978, PSYCHOMETRIKA, V43, P561, DOI 10.1007/BF02293814
   Andrich D., 2006, RUMM2020
   Andrich D, 2010, HANDBOOK OF POLYTOMOUS ITEM RESPONSE THEORY MODELS, P123
   [Anonymous], HUMAN ACTION CONCEPT
   [Anonymous], [No title captured]
   [Anonymous], 2005, Measuring the Mind: Conceptual Issues in Contemporary Psychometrics
   [Anonymous], 1991, Measurement, design, and analysis: An integrated approach
   [Anonymous], 2005, PROC IEEE INT S EMPI
   Arisholm E, 2004, IEEE T SOFTWARE ENG, V30, P521, DOI 10.1109/TSE.2004.43
   Arisholm E., 2002, Nordic Journal of Computing, V9, P231
   Arisholm E, 2007, IEEE T SOFTWARE ENG, V33, P65, DOI 10.1109/TSE.2007.17
   Basili VR, 2007, EMPIR SOFTW ENG, V12, P107, DOI 10.1007/s10664-006-9030-4
   Beecham S, 2008, INFORM SOFTWARE TECH, V50, P860, DOI 10.1016/j.infsof.2007.09.004
   Benander AC, 2000, J SYST SOFTWARE, V54, P17, DOI 10.1016/S0164-1212(00)00023-6
   Bergersen Gunnar R., 2012, 16th International Conference on Evaluation & Assessment in Software Engineering (EASE 2012), P101, DOI 10.1049/ic.2012.0013
   Bergersen GR, 2011, INT SYMP EMP SOFTWAR, P305, DOI 10.1109/ESEM.2011.39
   Bergersen GR, 2011, J INDIVID DIFFER, V32, P201, DOI 10.1027/1614-0001/a000052
   Bloch J., 2001, EFFECTIVE JAVA PROGR
   Bond T., 2020, Applying the Rasch model: fundamental measurement in the human sciences
   Borsboom D, 2003, PSYCHOL REV, V110, P203, DOI 10.1037/0033-295X.110.2.203
   Borsboom D, 2004, PSYCHOL REV, V111, P1061, DOI 10.1037/0033-295x.111.4.1061
   Borsboom D, 2008, THEOR PSYCHOL, V18, P111, DOI 10.1177/0959354307086925
   BRAUN HI, 1990, J EDUC MEAS, V27, P93, DOI 10.1111/j.1745-3984.1990.tb00736.x
   Briand L., 1996, Empirical Software Engineering, V1, P61, DOI 10.1007/BF00125812
   BROOKS FP, 1987, COMPUTER, V20, P10, DOI 10.1109/MC.1987.1663532
   CAMPBELL DT, 1959, PSYCHOL BULL, V56, P81, DOI 10.1037/h0046016
   Campbell J.P., 1990, Handbook of industrial and organizational psychology, P687, DOI DOI 10.1026/1617-6391.3.3.135
   Campbell J.P., 1993, PERSONNEL SELECTION, P35
   Campbell J.P., 1996, FRONT IND ORG PSYCH, P258
   Carroll J.B., 1993, Human cognitive abilities: A survey of factor-analytic studies, DOI [DOI 10.1017/CB09780511571312, 10.1017/CB09780511571312]
   Cattell R. B., 1971, Abilities: Their structure, growth and action
   Chase W.G., 1982, PSYCHOL LEARNING MOT, P1, DOI [10.1016/S0079-7421, DOI 10.1016/S0079-7421]
   CHATFIELD C, 1995, J ROY STAT SOC A STA, V158, P419, DOI 10.2307/2983440
   Chilton M. A., 2004, Data Base for Advances in Information Systems, V35, P88, DOI 10.1145/1017114.1017122
   Chinn S, 2000, STAT MED, V19, P3127, DOI 10.1002/1097-0258(20001130)19:22<3127::AID-SIM784>3.3.CO;2-D
   Cockburn A., 1998, C C USERS J, V16, P43
   Cockburn A., 1998, C C USERS J, V16, P37
   Cockburn A., 1998, C C USERS J, V16, P60
   Cockburn A., 1998, C C USERS J, V16, P53
   Cohen B., 1989, DEV SOCIOLOGICAL KNO
   Curtis B., 1984, Proceedings of the 7th International Conference on Software Engineering (cat. no. 84CH2011-5), P97
   CURTIS B, 1980, P IEEE, V68, P1144, DOI 10.1109/PROC.1980.11813
   Dahl FA, 2008, EUR J EPIDEMIOL, V23, P237, DOI 10.1007/s10654-008-9230-x
   Dekleva S, 1997, INFORM SYST RES, V8, P95, DOI 10.1287/isre.8.1.95
   DeMarco T, 1999, PEOPLEWARE PRODUCTIV
   Dyba T., 2000, Empirical Software Engineering, V5, P357, DOI 10.1023/A:1009800404137
   Dybå T, 2006, INFORM SOFTWARE TECH, V48, P745, DOI 10.1016/j.infsof.2005.08.009
   Dybå T, 2012, INT SYMP EMP SOFTWAR, P19, DOI 10.1145/2372251.2372256
   Edwards JR, 2000, PSYCHOL METHODS, V5, P155, DOI 10.1037//1082-989X.5.2.155
   Embretson SE, 1996, PSYCHOL ASSESSMENT, V8, P341, DOI 10.1037/1040-3590.8.4.341
   Ericsson K.A., 2003, The Psychology of Problem Solving, P31, DOI DOI 10.1017/CBO9780511615771.003
   Ericsson K.A., 1991, GEN THEORY EXPERTISE
   Ericsson KA, 2006, CAMBRIDGE HANDBOOK OF EXPERTISE AND EXPERT PERFORMANCE, P223
   ERICSSON KA, 1993, PSYCHOL REV, V100, P363, DOI 10.1037/0033-295X.100.3.363
   Eriksson H.-E., 1997, UML TOOLKIT
   Feigenspan J., 2012, 2012 IEEE 20th International Conference on Program Comprehension, P73
   FENTON N, 1994, IEEE T SOFTWARE ENG, V20, P199, DOI 10.1109/32.268921
   Fenton N.E., 1991, Software Testing, Verification and Reliability, V1, P27, DOI DOI 10.1002/STVR.4370010204
   FERGUSON GA, 1956, CAN J PSYCHOLOGY, V10, P121, DOI 10.1037/h0083676
   Feynman R., 1998, The meaning of it all: Thoughts of a citizen scientist
   Fitts P. M., 1967, Human performance
   Fleury AE, 2000, SIGCSE BULL, V32, P197, DOI 10.1145/331795.331854
   FLOYD RW, 1979, COMMUN ACM, V22, P455, DOI 10.1145/359138.359140
   Freedman R., 2013, J COMPUT SCI COLL, V29, P26
   GRANT EE, 1967, IEEE TRANS HUM FACT, VHFE8, P33, DOI 10.1109/THFE.1967.233303
   Hacking I., 1990, TAMING CHANCE, DOI DOI 10.1017/CBO9780511819766
   Hands B, 1999, J Outcome Meas, V3, P216
   Hannay JE, 2007, IEEE T SOFTWARE ENG, V33, P87, DOI 10.1109/TSE.2007.12
   Humphry Stephen M, 2008, J Appl Meas, V9, P249
   Jeffery D. R., 1979, Proceedings of the 4th International Conference on Software Engineering, P369
   Kampenes VB, 2007, INFORM SOFTWARE TECH, V49, P1073, DOI 10.1016/j.infsof.2007.02.015
   Kampenes VB, 2009, INFORM SOFTWARE TECH, V51, P71, DOI 10.1016/j.infsof.2008.04.006
   Kane M., 1999, ED MEASUREMENT, V18, P5, DOI [10.1111/j.1745-3992.1999.tb00010.x, DOI 10.1111/J.1745-3992.1999.TB00010.X]
   KANFER R, 1989, J APPL PSYCHOL, V74, P657, DOI 10.1037/0021-9010.74.4.657
   Karahasanovic A., 2007, Proc. Ninth Australas. Conf. Comput. Educ., V66, P81
   Karahasanovic A, 2007, J SYST SOFTWARE, V80, P1541, DOI 10.1016/j.jss.2006.10.041
   Karahasanovic A, 2009, BEHAV INFORM TECHNOL, V28, P139, DOI 10.1080/01449290701682761
   Krantz D. H., 1971, Foundations of Measurement, V1
   Kvaern K., 2006, THESIS U OSLO OSLO
   Kyburg HenryE., 1984, THEORY MEASUREMENT
   Kyllonen P.C., 1990, Learning and Individual Differences, V2, P129, DOI DOI 10.1016/1041-6080(90)90020-H
   Kyngdon A, 2008, THEOR PSYCHOL, V18, P89, DOI 10.1177/0959354307086924
   Linacre JM., 1994, RASCH MEASUREMENT T, V7, P328, DOI DOI 10.1177/0265532216638890
   Locke E.A., 1986, GEN LAB FIELD SETTIN
   Loehlin J.C., 2004, LATENT VARIABLE MODE
   LUCE RD, 1964, J MATH PSYCHOL, V1, P1, DOI 10.1016/0022-2496(64)90015-X
   MACKAY DG, 1982, PSYCHOL REV, V89, P483, DOI 10.1037/0033-295X.89.5.483
   McCall J.A., 1994, ENCY SOFTWARE ENG, P958
   McCracken M., 2001, ACM SIGCSE Bull., V33, P125, DOI [10.1145/572133.572137, DOI 10.1145/572133.572137, DOI 10.1145/572139.572181, 10.1145/]
   Messick S., 1989, ED MEASUREMENT, V3rd, P12
   Messick S., 1994, Educational Researcher, V23, P13, DOI [10.3102/0013189X023002013, DOI 10.3102/0013189X023002013, 10.2307/1176219]
   Michell J, 1997, BRIT J PSYCHOL, V88, P355, DOI 10.1111/j.2044-8295.1997.tb02641.x
   Newell A., 1981, COGNITIVE SKILLS THE, P1, DOI DOI 10.4324/9780203728178
   Nunnally JC, 1978, PSYCHOMETRIC THEORY, V2nd
   Pear TH, 1928, NATURE, V122, P611, DOI 10.1038/122611a0
   Pirolli P, 1998, PSYCHOL REV, V105, P58, DOI 10.1037/0033-295X.105.1.58
   Prechelt L., 1999, 18 U KARLSR
   Rasch G., 1960, Probabilistic models for some intelligence and attainment tests
   Robilliard PN, 1999, COMMUN ACM, V42, P87, DOI 10.1145/291469.291476
   Rummel R., 1970, Applied Factor Analysis
   Schmidt FL, 1998, PSYCHOL BULL, V124, P262, DOI 10.1037/0033-2909.124.2.262
   SCHMIDT FL, 1986, J APPL PSYCHOL, V71, P432, DOI 10.1037/0021-9010.71.3.432
   Schmitt N, 1996, PSYCHOL ASSESSMENT, V8, P350, DOI 10.1037/1040-3590.8.4.350
   SCHOOLER JW, 1993, J EXP PSYCHOL GEN, V122, P166, DOI 10.1037/0096-3445.122.2.166
   Shadish W. R., 2002, EXPT QUASI EXPT DESI
   Shavelson R., 1991, GENERALIZABILITY THE
   SHEIL BA, 1981, COMPUT SURV, V13, P101, DOI 10.1145/356835.356840
   SHUTE VJ, 1991, J EDUC COMPUT RES, V7, P1, DOI 10.2190/VQJD-T1YD-5WVB-RYPJ
   Sjoberg D. I. K., 2008, Guide to Advanced Empirical Software Engineering, P312
   Sjoberg DIK, 2013, IEEE T SOFTWARE ENG, V39, P1144, DOI 10.1109/TSE.2012.89
   Sjoberg DIK, 2005, IEEE T SOFTWARE ENG, V31, P733, DOI 10.1109/TSE.2005.97
   Sjoberg DIK, 2002, 2002 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P17, DOI 10.1109/ISESE.2002.1166921
   Skiena S., 2003, TEXTS COMP SCI, DOI 10.1007/b97559
   Smith Everett V Jr, 2002, J Appl Meas, V3, P205
   SMITH RM, 1988, EDUC PSYCHOL MEAS, V48, P657, DOI 10.1177/0013164488483009
   SOLOWAY E, 1984, IEEE T SOFTWARE ENG, V10, P595, DOI 10.1109/TSE.1984.5010283
   STEVENS SS, 1946, SCIENCE, V103, P677, DOI 10.1126/science.103.2684.677
   Streiner DL., 1995, HLTH MEASUREMENT SCA
   Syang A., 1993, SIGCSE Bulletin, V25, P53, DOI 10.1145/169073.169109
   Unsworth N, 2005, BEHAV RES METHODS, V37, P498, DOI 10.3758/BF03192720
   Unsworth N, 2009, MEMORY, V17, P635, DOI 10.1080/09658210902998047
   Vokác M, 2004, EMPIR SOFTW ENG, V9, P149, DOI 10.1023/B:EMSE.0000027778.69251.1f
   Waldman D.A., 1989, HUM PERFORM, V2, P29
   WIEDENBECK S, 1985, INT J MAN MACH STUD, V23, P383, DOI 10.1016/S0020-7373(85)80041-9
   Wilking D, 2008, LECT NOTES COMPUT SC, V5082, P157
   Wilson M., 2005, CONSTRUCTING MEASURE
   Wright B. D., 1979, RATING SCALE ANAL
NR 133
TC 49
Z9 55
U1 0
U2 34
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD DEC
PY 2014
VL 40
IS 12
BP 1163
EP 1184
DI 10.1109/TSE.2014.2348997
PG 22
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science; Engineering
GA AW4AQ
UT WOS:000346224400002
DA 2024-07-18
ER

PT J
AU Bavota, G
   Oliveto, R
   Gethers, M
   Poshyvanyk, D
   De Lucia, A
AF Bavota, Gabriele
   Oliveto, Rocco
   Gethers, Malcom
   Poshyvanyk, Denys
   De Lucia, Andrea
TI Methodbook: Recommending Move Method Refactorings via Relational Topic
   Models
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Refactoring; relational topic models; empirical studies
ID COHESION; VALIDATION; METRICS
AB During software maintenance and evolution the internal structure of the software system undergoes continuous changes. These modifications drift the source code away from its original design, thus deteriorating its quality, including cohesion and coupling of classes. Several refactoring methods have been proposed to overcome this problem. In this paper we propose a novel technique to identify Move Method refactoring opportunities and remove the Feature Envy bad smell from source code. Our approach, coined as Methodbook, is based on relational topic models (RTM), a probabilistic technique for representing and modeling topics, documents (in our case methods) and known relationships among these. Methodbook uses RTM to analyze both structural and textual information gleaned from software to better support move method refactoring. We evaluated Methodbook in two case studies. The first study has been executed on six software systems to analyze if the move method operations suggested by Methodbook help to improve the design quality of the systems as captured by quality metrics. The second study has been conducted with eighty developers that evaluated the refactoring recommendations produced by Methodbook. The achieved results indicate that Methodbook provides accurate and meaningful recommendations for move method refactoring operations.
C1 [Bavota, Gabriele] Univ Sannio, Dept Engn, Benevento, Italy.
   [Oliveto, Rocco] Univ Molise, Dept Biosci & Terr, Pesche, IS, Italy.
   [Oliveto, Rocco] Univ Molise, Lab Comp Sci & Sci Computat, Pesche, IS, Italy.
   [Gethers, Malcom] Univ Maryland Baltimore Cty, Dept Informat Syst, Baltimore, MD 21250 USA.
   [Poshyvanyk, Denys] Coll William & Mary, Williamsburg, VA 23185 USA.
   [De Lucia, Andrea] Univ Salerno, Dept Management & Informat Technol, Fisciano, SA, Italy.
C3 University of Sannio; University of Molise; University of Molise;
   University System of Maryland; University of Maryland Baltimore County;
   William & Mary; University of Salerno
RP Bavota, G (corresponding author), Univ Sannio, Dept Engn, Benevento, Italy.
EM gbavota@unisannio.it; rocco.oliveto@unimol.it; mgethers@umbc.edu;
   denys@cs.wm.edu; adelucia@unisa.it
RI De Lucia, Andrea/AAG-6781-2020
OI De Lucia, Andrea/0000-0002-4238-1425; BAVOTA,
   Gabriele/0000-0002-2216-3148; Poshyvanyk, Denys/0000-0002-5626-7586
CR Abadi A., 2009, P 3 WORKSH REF TOOLS
   [Anonymous], PRACTICAL NONPARAMET
   [Anonymous], 2007, Proceedings of the IEEE/ACM International Conference on Automated Software Engineering
   [Anonymous], 2010, IEEE INT C SOFTWARE
   [Anonymous], 2006, P 2006 INT WORKSH MI
   [Anonymous], P 1 INT SOFTW METR S
   [Anonymous], 2010, ASE 10 P IEEE ACM IN, DOI DOI 10.1145/1858996.1859024
   Arisholm E, 2004, IEEE T SOFTWARE ENG, V30, P521, DOI 10.1109/TSE.2004.43
   Bajracharya S, 2009, 2009 6TH IEEE INTERNATIONAL WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES, P111, DOI 10.1109/MSR.2009.5069489
   Basili VR, 1996, IEEE T SOFTWARE ENG, V22, P751, DOI 10.1109/32.544352
   Bavota G., 2013, TECHNICAL REPORT
   Bavota G, 2010, PROC IEEE INT CONF S
   Bavota G, 2014, EMPIR SOFTW ENG, V19, P1617, DOI 10.1007/s10664-013-9256-x
   Bavota G, 2014, ACM T SOFTW ENG METH, V23, DOI 10.1145/2559935
   Bavota G, 2013, EMPIR SOFTW ENG, V18, P901, DOI 10.1007/s10664-012-9226-8
   Bavota G, 2011, J SYST SOFTWARE, V84, P397, DOI 10.1016/j.jss.2010.11.918
   Binkley AB, 1998, PROC INT CONF SOFTW, P452, DOI 10.1109/ICSE.1998.671604
   Blei DM, 2003, J MACH LEARN RES, V3, P993, DOI 10.1162/jmlr.2003.3.4-5.993
   Briand L. C., 1998, Empirical Software Engineering, V3, P65, DOI 10.1023/A:1009783721306
   Brown WH., 1998, AntiPatterns: refactoring software, architectures, and projects in crisis
   Chang J, 2010, ANN APPL STAT, V4, P124, DOI 10.1214/09-AOAS309
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   Cover T. M., 1991, ELEMENTS INFORM THEO
   DEERWESTER S, 1990, J AM SOC INFORM SCI, V41, P391, DOI 10.1002/(SICI)1097-4571(199009)41:6<391::AID-ASI1>3.0.CO;2-9
   Dig D, 2008, IEEE T SOFTWARE ENG, V34, P321, DOI 10.1109/TSE.2008.29
   Dit B., 2011, P 19 IEEE INT C PROG
   Fokaefs M, 2009, PROC IEEE INT CONF S, P93, DOI 10.1109/ICSM.2009.5306332
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   Gethers M., 2011, 2011 IEEE 27th International Conference on Software Maintenance, P133, DOI 10.1109/ICSM.2011.6080780
   Gethers M., 2011, P 33 IEEE ACM INT C
   Grissom R. J., 2005, EFFECT SIZES RES BRO
   HOLM S, 1979, SCAND J STAT, V6, P65
   Joshi P, 2009, EUR CON SFTWR MTNCE, P237, DOI 10.1109/CSMR.2009.54
   Khomh F, 2009, INT CONF QUAL SOFTW, P305, DOI 10.1109/QSIC.2009.47
   Kim M., 2012, P 20 INT S FDN SOFTW
   Liu YX, 2009, PROC IEEE INT CONF S, P233, DOI 10.1109/ICSM.2009.5306318
   Maqbool O, 2007, IEEE T SOFTWARE ENG, V33, P759, DOI 10.1109/TSE.2007.70732
   Marcus A, 2008, IEEE T SOFTWARE ENG, V34, P287, DOI 10.1109/TSE.2007.70768
   Maruyama K., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P236, DOI 10.1109/ICSE.1999.841013
   Mitchell BS, 2006, IEEE T SOFTWARE ENG, V32, P193, DOI 10.1109/TSE.2006.31
   Moha N, 2010, IEEE T SOFTWARE ENG, V36, P20, DOI 10.1109/TSE.2009.50
   Murphy-Hill E, 2009, PROC INT CONF SOFTW, P287, DOI 10.1109/ICSE.2009.5070529
   Murphy-Hill E, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P421, DOI 10.1145/1368088.1368146
   O'Keeffe M, 2006, 10TH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P247
   Panichella A, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P522, DOI 10.1109/ICSE.2013.6606598
   Poshyvanyk D, 2009, EMPIR SOFTW ENG, V14, P5, DOI 10.1007/s10664-008-9088-2
   Praditwong K, 2011, IEEE T SOFTWARE ENG, V37, P264, DOI 10.1109/TSE.2010.26
   Pressman R.S., 1992, Software Engineering: A Practitioner's Approach, Vthird
   Seng O, 2006, GECCO 2006: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOL 1 AND 2, P1909
   Simon F, 2001, FIFTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P30, DOI 10.1109/CSMR.2001.914965
   Sommerville I, 2001, Software Engineering
   STEVENS WP, 1974, IBM SYST J, V13, P115, DOI 10.1147/sj.132.0115
   Trifu A, 2005, WCRE: 12TH WORKING CONFERENCE ON REVERSE ENGINEERING 2005, PROCEEDINGS, P155
   Tsantalis N, 2009, IEEE T SOFTWARE ENG, V35, P347, DOI 10.1109/TSE.2009.1
   Wang Y, 2009, PROC IEEE INT CONF S, P413, DOI 10.1109/ICSM.2009.5306290
   Yates R. B., 1999, MODERN INFORM RETRIE
   Yin R.K., 2011, Qualitative research from start to finish
NR 57
TC 97
Z9 105
U1 1
U2 14
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUL
PY 2014
VL 40
IS 7
BP 671
EP 694
DI 10.1109/TSE.2013.60
PG 24
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA AM9HF
UT WOS:000340191000003
OA Green Submitted
DA 2024-07-18
ER

PT J
AU He, Q
   Han, J
   Yang, Y
   Jin, H
   Schneider, JG
   Versteeg, S
AF He, Qiang
   Han, Jun
   Yang, Yun
   Jin, Hai
   Schneider, Jean-Guy
   Versteeg, Steve
TI Formulating Cost-Effective Monitoring Strategies for Service-Based
   Systems
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Service-based system; web service; QoS; response time; monitoring;
   criticality; cost of monitoring; value of monitoring
ID ARCHITECTURE; NEGOTIATION; ADAPTATION; QUALITY; VIDEO
AB When operating in volatile environments, service-based systems (SBSs) that are dynamically composed from component services must be monitored in order to guarantee timely and successful delivery of outcomes in response to user requests. However, monitoring consumes resources and very often impacts on the quality of the SBSs being monitored. Such resource and system costs need to be considered in formulating monitoring strategies for SBSs. The critical path of a composite SBS, i.e., the execution path in the service composition with the maximum execution time, is of particular importance in cost-effective monitoring as it determines the response time of the entire SBS. In volatile operating environments, the critical path of an SBS is probabilistic, as every execution path can be critical with a certain probability, i.e., its criticality. As such, it is important to estimate the criticalities of different execution paths when deciding which parts of the SBS to monitor. Furthermore, cost-effective monitoring also requires management of the trade-off between the benefit and cost of monitoring. In this paper, we propose CriMon, a novel approach to formulating and evaluating monitoring strategies for SBSs. CriMon first calculates the criticalities of the execution paths and the component services of an SBS and then, based on those criticalities, generates the optimal monitoring strategy considering both the benefit and cost of monitoring. CriMon has two monitoring strategy formulation methods, namely local optimisation and global optimisation. In-lab experimental results demonstrate that the response time of an SBS can be managed cost-effectively through CriMon-based monitoring. The effectiveness and efficiency of the two monitoring strategy formulation methods are also evaluated and compared.
C1 [He, Qiang; Han, Jun; Yang, Yun; Schneider, Jean-Guy] Swinburne Univ Technol, Sch Software & Elect Engn, Hawthorn, Vic 3122, Australia.
   [Jin, Hai] Huazhong Univ Sci & Technol, Sch Comp Sci & Technol, Serv Comp Technol & Syst Lab, Cluster & Grid Comp Lab, Wuhan 430074, Peoples R China.
   [Versteeg, Steve] CA Technol, Melbourne, Vic 3004, Australia.
C3 Swinburne University of Technology; Huazhong University of Science &
   Technology
RP He, Q (corresponding author), Swinburne Univ Technol, Sch Software & Elect Engn, Hawthorn, Vic 3122, Australia.
EM qhe@swin.edu.au; jhan@swin.edu.au; yyang@swin.edu.au; hjin@hust.edu.cn;
   jschneider@swin.edu.au; steve.versteeg@ca.com
RI , Jun/Q-7503-2019
OI Schneider, Jean-Guy/0000-0002-9827-5496
FU Australian Research Council [LP0775188, DP110101340]; CA Labs;
   Australian Research Council [LP0775188] Funding Source: Australian
   Research Council
FX This work was partly supported by the Australian Research Council
   (projects LP0775188 and DP110101340) and CA Labs. This paper is a
   significant revision and extension of [47].
CR Akbar MM, 2001, LECT NOTES COMPUT SC, V2074, P659
   Al-Masri E., 2008, 17 INT WORLD WIDE WE, P795
   ALRIFAI M., 2010, Proceedings of the 19th international conference. WWW '10, P11, DOI [10. 1145/1772690. 1772693, DOI 10.1145/1772690.1772693]
   [Anonymous], WORKSH SERV MON AD M
   [Anonymous], 2011, P ACM S APPL COMPUTI
   [Anonymous], CISC IOS NETFLOW
   [Anonymous], 1998, INTEGER PROGRAMMING
   Ardagna D, 2007, IEEE T SOFTWARE ENG, V33, P369, DOI 10.1109/TSE.2007.1011.
   Barbon F, 2006, ICWS 2006: IEEE INTERNATIONAL CONFERENCE ON WEB SERVICES, PROCEEDINGS, P63
   Baresi L, 2007, IET SOFTW, V1, P219, DOI 10.1049/iet-sen:20070027
   Baresi L, 2005, LECT NOTES COMPUT SC, V3826, P478
   Baresi L, 2005, LECT NOTES COMPUT SC, V3826, P269
   Baresi L, 2011, IEEE T SOFTWARE ENG, V37, P247, DOI 10.1109/TSE.2010.37
   Baresi L, 2010, IEEE INTERNET COMPUT, V14, P50, DOI 10.1109/MIC.2010.66
   Bettini C, 2007, WORLD WIDE WEB, V10, P503, DOI 10.1007/s11280-007-0028-7
   Calinescu R, 2011, IEEE T SOFTWARE ENG, V37, P387, DOI 10.1109/TSE.2010.92
   CLARK CE, 1961, OPER RES, V9, P145, DOI 10.1287/opre.9.2.145
   Di Nitto E, 2008, AUTOMAT SOFTW ENG, V15, P313, DOI 10.1007/s10515-008-0032-x
   Di Nitto E, 2007, LECT NOTES COMPUT SC, V4749, P295
   Eppstein D, 1998, SIAM J COMPUT, V28, P652, DOI 10.1137/S0097539795290477
   Gu XH, 2002, INT CON DISTR COMP S, P194
   Guinea S, 2011, LECT NOTES COMPUT SC, V7084, P359, DOI 10.1007/978-3-642-25535-9_24
   Harney J., 2007, P 16 INT C WORLD WID, P1023
   Harney J, 2006, LECT NOTES COMPUT SC, V4294, P179
   He Q, 2008, LECT NOTES COMPUT SC, V5364, P22
   Heward Garth, 2010, Proceedings of the 21st Australian Software Engineering Conference (ASWEC 2010), P192, DOI 10.1109/ASWEC.2010.28
   Heward G, 2010, LECT NOTES COMPUT SC, V6470, P587, DOI 10.1007/978-3-642-17358-5_43
   Katsaros G, 2012, J SYST SOFTWARE, V85, P1029, DOI 10.1016/j.jss.2011.11.1043
   Keller A., 2003, Journal of Network and Systems Management, V11, P57, DOI 10.1023/A:1022445108617
   Kelley J.E., 1959, Papers presented at the December 1-3, 1959, Eastern Joint IRE-AIEE-ACM Computer Conference, P160, DOI DOI 10.1145/1460299.1460318
   Kertesz A., 2012, Proceedings of the 2012 20th Euromicro International Conference on Parallel, Distributed and Network-Based Processing (PDP 2012), P567, DOI 10.1109/PDP.2012.25
   Khalaf R., 2003, P 12 INT C WORLD WID
   Klein A, 2010, LECT NOTES COMPUT SC, V6470, P182, DOI 10.1007/978-3-642-17358-5_13
   Klein Adrian., 2012, Proceedings of the 21st International Conference on World Wide Web, WWW'12, P959
   Koksalan MuratM., 2001, MULTIPLE CRITERIA DE
   Leitner Philipp, 2010, 2010 IEEE International Conference on Web Services (ICWS), P369, DOI 10.1109/ICWS.2010.21
   Lu X., 2002, P 12 INT PACK VID WO
   Mahbub K, 2005, 2005 IEEE INTERNATIONAL CONFERENCE ON WEB SERVICES, VOLS 1 AND 2, PROCEEDINGS, P257
   Misailovic Sasa, 2010, 32 INT C SOFTW ENG, p25S34, DOI [10.1145/1806799.1806808, DOI 10.1145/1806799.1806808]
   Nano O., 2006, P ECHALLENGES E 2006
   OASIS, 2007, Web Services Business Process Execution Language Version 2.0
   Qiang He, 2012, 2012 IEEE International Conference on Services Computing (SCC), P178, DOI 10.1109/SCC.2012.39
   Rabaey J.M., 1995, DIGITAL INTEGRATED C
   Rahman M, 2007, P IEEE INT C E-SCI, P35
   Raimondi F., 2008, Proceedings of the 16th ACM SIGSOFT International Symposium on Foundations of software engineering, P170, DOI DOI 10.1145/1453101.1453125
   Reibman AR, 2004, IEEE T MULTIMEDIA, V6, P327, DOI 10.1109/TMM.2003.822785
   Robinson WN, 2003, 11TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, PROCEEDINGS, P65
   Russell S., 2016, Artificial intelligence a modern approach
   S-Cube, 2013, SOFTW SERV SYST NETW
   Sahai A, 2002, LECT NOTES COMPUT SC, V2506, P28
   Selçuk K, 2009, PROC INT CONF DATA, P1761, DOI 10.1109/ICDE.2009.168
   Son JH, 2001, J SYST SOFTWARE, V58, P211, DOI 10.1016/S0164-1212(01)00039-5
   Spanoudakis G, 2006, INT J COOP INF SYST, V15, P325, DOI 10.1142/S0218843006001384
   Tao S, 2008, IEEE ACM T NETWORK, V16, P1052, DOI 10.1109/TNET.2007.910617
   Trivedi K.S., 2001, Probability and statistics with reliability, queueing, and computer science applications, V2nd
   Verbowski C., 2006, Proceedings of the 7th USENIX Symposium on Operating Systems Design and Implementation (OSDI'06), P117
   Wang WL, 2006, J SYST SOFTWARE, V79, P132, DOI 10.1016/j.jss.2005.09.004
   Wassermann B, 2011, LECT NOTES COMPUT SC, V7084, P344, DOI 10.1007/978-3-642-25535-9_23
   Yan J, 2007, FUTURE GENER COMP SY, V23, P748, DOI 10.1016/j.future.2007.02.004
   Zeng LZ, 2004, IEEE T SOFTWARE ENG, V30, P311, DOI 10.1109/TSE.2004.11
   Zheng Zibin., 2010, P 32 ACMIEEE INT C S, V1, P35, DOI DOI 10.1145/1806799.1806809
NR 61
TC 23
Z9 24
U1 0
U2 14
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAY
PY 2014
VL 40
IS 5
BP 461
EP 482
DI 10.1109/TSE.2013.48
PG 22
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA AJ8JW
UT WOS:000337950500003
DA 2024-07-18
ER

PT J
AU Berger, T
   She, S
   Lotufo, R
   Wasowski, A
   Czarnecki, K
AF Berger, Thorsten
   She, Steven
   Lotufo, Rafael
   Wasowski, Andrzej
   Czarnecki, Krzysztof
TI A Study of Variability Models and Languages in the Systems Software
   Domain
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Empirical software engineering; software product lines; variability
   modeling; feature modeling; configuration; open source
AB Variability models represent the common and variable features of products in a product line. Since the introduction of FODA in 1990, several variability modeling languages have been proposed in academia and industry, followed by hundreds of research papers on variability models and modeling. However, little is known about the practical use of such languages. We study the constructs, semantics, usage, and associated tools of two variability modeling languages, Kconfig and CDL, which are independently developed outside academia and used in large and significant software projects. We analyze 128 variability models found in 12 open-source projects using these languages. Our study 1) supports variability modeling research with empirical data on the real-world use of its flagship concepts. However, we 2) also provide requirements for concepts and mechanisms that are not commonly considered in academic techniques, and 3) challenge assumptions about size and complexity of variability models made in academic papers. These results are of interest to researchers working on variability modeling and analysis techniques and to designers of tools, such as feature dependency checkers and interactive product configurators.
C1 [Berger, Thorsten; Wasowski, Andrzej] IT Univ Copenhagen, DK-2300 Copenhagen, Denmark.
   [She, Steven; Lotufo, Rafael; Czarnecki, Krzysztof] Univ Waterloo, Dept Elect & Comp Engn, Generat Software Dev Lab, Waterloo, ON N2L 3G1, Canada.
C3 IT University Copenhagen; University of Waterloo
RP Berger, T (corresponding author), IT Univ Copenhagen, Rued Langgaards Vej 7, DK-2300 Copenhagen, Denmark.
OI Wasowski, Andrzej/0000-0003-0532-2685
FU German National Academic Foundation; German Federal Ministry of
   Education and Research [01IS10033D]; Ontario Research Fund
FX This work was supported by the German National Academic Foundation, the
   German Federal Ministry of Education and Research (01IS10033D), and the
   Ontario Research Fund.
CR Abbasi E., 2012, PCSTRCONF000001 PREC
   [Anonymous], 2013, SPL2GO CAT
   [Anonymous], 2012, COMM VAR LANG CVL OM
   [Anonymous], P 13 INT SOFTW PROD
   [Anonymous], 2009, COMM VAR LANG CVL RF
   [Anonymous], 1993, REUS DRIV SOFTW PROC
   [Anonymous], 2008, GUIDE ADV EMPIRICAL, DOI DOI 10.1007/978-1-84800-044-511
   [Anonymous], 2012, P 6 INT WORKSH VAR M
   [Anonymous], 2000, Generative programming: methods, tools, and applications
   [Anonymous], 2006, TECHNICAL REPORT
   Asikainen T, 2004, LECT NOTES COMPUT SC, V3014, P225
   Asikainen T., 2004, P WORKSH SOFTW VAR M
   Bagheri E, 2011, J RES PRACT INF TECH, V43, P109
   BECKER M, 2003, P 1 WORKSH SOFTW VAR
   Benavides D., 2006, P JISB 15 JOURN ING
   Benavides D, 2010, INFORM SYST, V35, P615, DOI 10.1016/j.is.2010.01.001
   Benavides David, 2005, P 17 INT C ADV INF S
   Berger T., 2013, P 7 INT WORKSH VAR M
   Berger T., 2010, P 14 INT C SOFTW PRO
   Berger T., 2010, P IEEE ACM INT C AUT
   Berger T., 2013, FORMAL SEMANTICS CDL
   Berger Thorsten, 2010, TECHNICAL REPORT
   Boskovic M., 2010, P INT C MOD SOFTW EN
   Boucher Q., 2010, P INT WORKSH VAR MOD
   Chen LP, 2011, INFORM SOFTWARE TECH, V53, P344, DOI 10.1016/j.infsof.2010.12.006
   Cosmo R.D., 2010, P 14 INT C SOFTW PRO
   Czarnecki K., 2005, Software Process Improvement and Practice, V10, P143, DOI 10.1002/spip.225
   Czarnecki K, 2012, VAMOS
   Czarnecki Krzysztof., 2005, Software Process: Improvement and Practice, P2005
   DELANNAY G, 2007, P WORKSH OP SOURC SO
   Dhungana D., 2007, 1 INT WORKSH VAR MOD, P119
   Dhungana D., 2010, P 4 INT WORKSH VAR M
   Dhungana D., 2008, P 1 WORKSH AN SOFTW
   Dhungana D., 2007, P IEEE ACM 22 INT C
   Dhungana D, 2007, INT FED INFO PROC, V244, P238
   Dhungana D, 2010, J SYST SOFTWARE, V83, P1108, DOI 10.1016/j.jss.2010.02.018
   Egyed A, 2003, IEEE T SOFTWARE ENG, V29, P116, DOI 10.1109/TSE.2003.1178051
   Eisenhardt KM, 2007, ACAD MANAGE J, V50, P25, DOI 10.5465/AMJ.2007.24160888
   Fowler M., 2010, Domain-specific languages
   Friedrich IF, 2001, IEEE MICRO, V21, P54, DOI 10.1109/40.928765
   Galindo J. A., 2010, P 1 INT WORKSH AUT C
   Gillan C., 2007, P 1 INT WORKSH VAR M
   Grunbacher P., 2009, P IEEE ACM 24 INT C
   Gunter A., 1999, XPS-99: Knowledge-Based Systems. Survey and Future Directions. 5th Biannual German Conference. Proceedings, P47
   Hotz L., 2006, Configuration in Industrial Product Families - The ConIPF Methodology
   Hubaux A., 2012, P ECAI WORKSH CONF C
   Hubaux A., 2008, P 12 INT SOFTW PROD
   Hubaux A., 2010, P INT WORKSH VAR MOD
   Janota M., 2010, P 36 C CURR TRENDS T
   Kang Kyo C, 1990, Technical Report
   Kastner C., 2007, P 11 INT SOFTW PROD
   Koleilat W., 2007, TECHNICAL REPORT
   Loesch F., 2007, P 11 INT SOFTW PROD
   Lohmann D., 2006, P 1 ACM SIGOPS EUROS
   Lotufo R., 2010, P 14 INT C SOFTW PRO
   Massa AnthonyJ., 2003, Embedded software development with eCos
   Mendonca M., 2008, P 7 INT C GEN PROGR
   Mendonca M., 2009, THESIS U WATERLOO
   Mendonca M., 2009, P 24 ACM SIGPLAN C C
   Mendonca M., 2009, P 13 INT SOFTW PROD
   Passos L., 2011, P 3 INT WORKSH FEAT
   Rabiser R., 2012, P IEEE ACM 27 INT C
   Rabiser R, 2010, INFORM SOFTWARE TECH, V52, P324, DOI 10.1016/j.infsof.2009.11.001
   Reiser M.O., 2007, P 1 INT WORKSH VAR M
   RIEBISCH M, 2002, P 6 WORLD C INT DES
   Roy C., 2007, 2007541 QUEENS U SCH
   Schmid K, 2004, SCI COMPUT PROGRAM, V53, P259, DOI 10.1016/j.scico.2003.04.002
   Schmid K., 2011, P 5 WORKSH VAR MOD S
   Schmid K., 2010, P 14 INT C SOFTW PRO
   Schobbens PY, 2007, COMPUT NETW, V51, P456, DOI 10.1016/j.comnet.2006.08.008
   Segura S., 2009, P 3 INT WORKSH VAR M
   Segura Sergio, 2012, P 6 INT WORKSH VAR M, P63, DOI [10.1145/2110147.2110155, DOI 10.1145/2110147.2110155]
   She S., 2013, FORMAL SEMANTICS KCO
   She Steven, 2010, P 4 INT WORKSH VAR M
   Sincero J., 2008, P 1 WORKSH AN SOFTW
   SINCERO J., 2007, Proc. SPLC Workshop on Open Source Software and Product Lines
   Sinnema M., 2004, Software Product Lines, P25
   Sinnema M, 2007, INFORM SOFTWARE TECH, V49, P717, DOI 10.1016/j.infsof.2006.08.001
   STEGER M, 2004, P 3 INT SOFTW PROD L
   Stumptner M, 1997, AI COMMUN, V10, P111
   Sugumaran V, 2006, COMMUN ACM, V49, P29
   Tartler R., 2011, P EUR 6 C COMP SYST
   THUM T, 2009, P 31 INT C SOFTW ENG
   van Ommering R, 2000, COMPUTER, V33, P78, DOI 10.1109/2.825699
   Veer B., 2010, ECOS COMPONENT WRITE
   White J., 2008, P 12 INT SOFTW PROD
   Xiong Y., 2012, P INT C SOFTW ENG IC
   Zippel R., 2012, KCONFIG LANGUAGE TXT
NR 88
TC 99
Z9 103
U1 0
U2 19
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD DEC
PY 2013
VL 39
IS 12
BP 1611
EP 1640
DI 10.1109/TSE.2013.34
PG 30
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 260PO
UT WOS:000327607000001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Liu, H
   Guo, X
   Shao, WZ
AF Liu, Hui
   Guo, Xue
   Shao, Weizhong
TI Monitor-Based Instant Software Refactoring
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Software refactoring; code smell detection; monitor; instant refactoring
ID IDENTIFICATION; OPPORTUNITIES; CODE; SMELLS
AB Software refactoring is an effective method for improvement of software quality while software external behavior remains unchanged. To facilitate software refactoring, a number of tools have been proposed for code smell detection and/or for automatic or semi-automatic refactoring. However, these tools are passive and human driven, thus making software refactoring dependent on developers' spontaneity. As a result, software engineers with little experience in software refactoring might miss a number of potential refactorings or may conduct refactorings later than expected. Few refactorings might result in poor software quality, and delayed refactorings may incur higher refactoring cost. To this end, we propose a monitor-based instant refactoring framework to drive inexperienced software engineers to conduct more refactorings promptly. Changes in the source code are instantly analyzed by a monitor running in the background. If these changes have the potential to introduce code smells, i.e., signs of potential problems in the code that might require refactorings, the monitor invokes corresponding smell detection tools and warns developers to resolve detected smells promptly. Feedback from developers, i.e., whether detected smells have been acknowledged and resolved, is consequently used to optimize smell detection algorithms. The proposed framework has been implemented, evaluated, and compared with the traditional human-driven refactoring tools. Evaluation results suggest that the proposed framework could drive inexperienced engineers to resolve more code smells (by an increase of 140 percent) promptly. The average lifespan of resolved smells was reduced by 92 percent. Results also suggest that the proposed framework could help developers to avoid similar code smells through timely warnings at the early stages of software development, thus reducing the total number of code smells by 51 percent.
C1 [Liu, Hui; Guo, Xue] Beijing Inst Technol, Sch Comp Sci & Technol, Beijing 100081, Peoples R China.
   [Shao, Weizhong] Peking Univ, Key Lab High Confidence Software Technol, Minist Educ, Beijing 100871, Peoples R China.
   [Shao, Weizhong] Peking Univ, Software Inst, Sch Elect Engn & Comp Sci, Beijing 100871, Peoples R China.
C3 Beijing Institute of Technology; Peking University; Peking University
RP Liu, H (corresponding author), Beijing Inst Technol, Sch Comp Sci & Technol, Beijing 100081, Peoples R China.
EM liuhui08@bit.edu.cn; 630632077@qq.com; wzshao@pku.edu.cn
RI LIU, HUI/C-6133-2014
FU National Natural Science Foundation of China [61003065, 61272169];
   Specialized Research Fund for the Doctoral Program of Higher Education
   [20101101120027]; Beijing Institute of Technology [2010Y0711]
FX The work was funded by the National Natural Science Foundation of China
   (No. 61003065, and 61272169), the Specialized Research Fund for the
   Doctoral Program of Higher Education (No. 20101101120027), and the
   Excellent Young Scholars Research Fund of the Beijing Institute of
   Technology (No. 2010Y0711).
CR [Anonymous], 2010, IEEE INT C SOFTWAREM
   Arnold R.S., 1986, Tutorial on Software Restructuring
   BAKER BS, 1995, SECOND WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P86, DOI 10.1109/WCRE.1995.514697
   Balazinska M, 2000, SEVENTH WORKING CONFERENCE ON REVERSE ENGINEERING - PROCEEDINGS, P98, DOI 10.1109/WCRE.2000.891457
   Bavota G, 2011, J SYST SOFTWARE, V84, P397, DOI 10.1016/j.jss.2010.11.918
   Bavota Gabriele., 2010, Proceedings of the IEEE International Conference on Software Maintenance ICSM, P1
   Baxter ID, 1998, PROC IEEE INT CONF S, P368, DOI 10.1109/ICSM.1998.738528
   Bellon S, 2007, IEEE T SOFTWARE ENG, V33, P577, DOI 10.1109/TSE.2007.70725
   Biegel B., 2010, P IEEEACM INT C AUTO, P167
   BOEHM BW, 1983, J SYST SOFTWARE, V3, P3, DOI 10.1016/0164-1212(83)90003-1
   Burd E, 2002, SCAM 2002: SECOND IEEE INTERNATIONAL WORKSHOP ON SOURCE CODE ANALYSIS MANIPULATION, PROCEEDINGS, P36, DOI 10.1109/SCAM.2002.1134103
   Cusumano M.A., 1995, MICROSOFT SECRETS
   Ducasse S., 1999, Proceedings IEEE International Conference on Software Maintenance - 1999 (ICSM'99). `Software Maintenance for Business Change' (Cat. No.99CB36360), P109, DOI 10.1109/ICSM.1999.792593
   Fluri B, 2007, IEEE T SOFTWARE ENG, V33, P725, DOI 10.1109/TSE.2007.70731
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   Fuhrer R. M., 2007, P 1 WORKSH REF TOOLS, P30
   Göde N, 2009, EUR CON SFTWR MTNCE, P219, DOI 10.1109/CSMR.2009.20
   Griswold W. G., 1993, ACM Transactions on Software Engineering and Methodology, V2, P228, DOI 10.1145/152388.152389
   Kamiya T, 2002, IEEE T SOFTWARE ENG, V28, P654, DOI 10.1109/TSE.2002.1019480
   Kim Miryung, 2012, P 20 INT S FDN SOFTW, DOI [10.1145/'2393596.2393655, DOI 10.1145/2393596.2393655]
   Koschke R., 2008, SOFTWARE EVOLUTION, P15, DOI DOI 10.1007/978-3-540-76440-3_2
   Koschke R, 2006, WORK CONF REVERSE EN, P253
   Liu H, 2007, IET SOFTW, V1, P29, DOI 10.1049/iet-sen:20060023
   Liu H, 2006, ASPEC 2006: 13TH ASIA-PACIFIC SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P269
   Liu H, 2012, IEEE T SOFTWARE ENG, V38, P220, DOI 10.1109/TSE.2011.9
   Mealy E., 2006, 2006 Australian Software Engineering Conference
   Mealy E, 2006, 2006 AUSTRALIAN SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P331
   Mens T, 2004, IEEE T SOFTWARE ENG, V30, P126, DOI 10.1109/TSE.2004.1265817
   Moha N, 2006, IEEE INT CONF AUTOM, P297
   Moha N, 2010, IEEE T SOFTWARE ENG, V36, P20, DOI 10.1109/TSE.2009.50
   Munro MatthewJames., 2005, Software Metrics, P15, DOI 10.1109/metrics.2005.38
   Murphy-Bill E, 2008, IEEE SOFTWARE, V25, P38, DOI 10.1109/MS.2008.123
   Murphy-Chutorian E., 2008, Proc. Computer Vision and Pattern Recognition Workshop, P1
   Murphy-Hill E, 2012, IEEE T SOFTWARE ENG, V38, P5, DOI 10.1109/TSE.2011.41
   Opdyke W. F., 1992, Refactoring object-oriented frameworks
   Robbes R, 2007, ELECTRON NOTES THEOR, V166, P93, DOI 10.1016/j.entcs.2006.06.015
   Roy CK, 2009, SCI COMPUT PROGRAM, V74, P470, DOI 10.1016/j.scico.2009.02.007
   Rudiger Lincke., 2008, International Symposium on Software Testing and Analysis, P131, DOI 10.1145/1390630.1390648
   Tourwé T, 2003, SEVENTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P91, DOI 10.1109/CSMR.2003.1192416
   Travassos GH, 1999, ACM SIGPLAN NOTICES, V34, P47, DOI 10.1145/320385.320389
   Tsantalis N, 2011, J SYST SOFTWARE, V84, P1757, DOI 10.1016/j.jss.2011.05.016
   Tsantalis N, 2010, J SYST SOFTWARE, V83, P391, DOI 10.1016/j.jss.2009.09.017
   Tsantalis N, 2009, IEEE T SOFTWARE ENG, V35, P347, DOI 10.1109/TSE.2009.1
   van Emden E, 2002, NINTH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P97, DOI 10.1109/WCRE.2002.1173068
   Van Rompaey B, 2007, IEEE T SOFTWARE ENG, V33, P800, DOI 10.1109/TSE.2007.70745
   Wake W.C., 2003, Refactoring Workbook, V1st
   Zhang M, 2011, J SOFTW MAINT EVOL-R, V23, P179, DOI 10.1002/smr.521
NR 47
TC 36
Z9 37
U1 0
U2 25
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD AUG
PY 2013
VL 39
IS 8
BP 1112
EP 1126
DI 10.1109/TSE.2013.4
PG 15
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 191BU
UT WOS:000322388400005
DA 2024-07-18
ER

PT J
AU Zhang, C
   Budgen, D
AF Zhang, Cheng
   Budgen, David
TI What Do We Know about the Effectiveness of Software Design Patterns?
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Design patterns; systematic literature review; empirical software
   engineering
ID SYSTEMATIC LITERATURE-REVIEWS
AB Context. Although research in software engineering largely seeks to improve the practices and products of software development, many practices are based upon codification of expert knowledge, often with little or no underpinning from objective empirical evidence. Software design patterns seek to codify expert knowledge to share experience about successful design structures. Objectives. To investigate how extensively the use of software design patterns has been subjected to empirical study and what evidence is available about how and when their use can provide an effective mechanism for knowledge transfer about design. Method. We conducted a systematic literature review in the form of a mapping study, searching the literature up to the end of 2009 to identify relevant primary studies about the use of the 23 patterns catalogued in the widely referenced book by the "Gang of Four." These studies were then categorized according to the forms of study employed, the patterns that were studied, as well as the context within which the study took place. Results. Our searches identified 611 candidate papers. Applying our inclusion/exclusion criteria resulted in a final set of 10 papers that described 11 instances of "formal" experimental studies of object-oriented design patterns. We augmented our analysis by including seven "experience" reports that described application of patterns using less rigorous observational forms. We report and review the profiles of the empirical evidence for those patterns for which multiple studies exist. Conclusions. We could not identify firm support for any of the claims made for patterns in general, although there was some support for the usefulness of patterns in providing a framework for maintenance, and some qualitative indication that they do not help novices learn about design. For future studies we recommend that researchers use case studies that focus upon some key patterns, and seek to identify the impact that their use can have upon maintenance.
C1 [Zhang, Cheng; Budgen, David] Univ Durham, Sci Labs, Sch Engn & Comp Sci, Durham DH1 3LE, England.
C3 Durham University
RP Zhang, C (corresponding author), Univ Durham, Sci Labs, Sch Engn & Comp Sci, South Rd, Durham DH1 3LE, England.
EM cheng.zhang2@durham.ac.uk; david.budgen@durham.ac.uk
OI Budgen, David/0000-0001-7143-0241
FU UK Engineering & Physical Sciences Research Council [EP/E046983/1];
   EPSRC [EP/E046983/1] Funding Source: UKRI
FX This work was partly supported by an award from the UK Engineering &
   Physical Sciences Research Council (EP/E046983/1: Evidence-based
   Practices Informing Computing (EPIC)). The authors would like to
   acknowledge the help received from Professor Barbara Kitchenham and they
   are very grateful to the anonymous reviewers for their observations and
   suggestions.
CR ADELSON B, 1985, IEEE T SOFTWARE ENG, V11, P1351, DOI 10.1109/TSE.1985.231883
   [Anonymous], P EASE 2009 BCS EWIC
   [Anonymous], 1996, Pattern oriented software architecture: a system of patters
   [Anonymous], 1977, PATTERN LANGUAGE TOW
   [Anonymous], P ICSE WORKSH PROC M
   [Anonymous], P INT WORKSH EMP STU
   [Anonymous], 2007, P 11 ECOOP WORKSH QU
   Aversano L, 2009, IET SOFTW, V3, P395, DOI 10.1049/iet-sen.2008.0105
   Aversano L, 2007, SEVENTH IEEE INTERNATIONAL WORKING CONFERENCE ON SOURCE CODE ANALYSIS AND MANIPULATION, PROCEEDINGS, P180, DOI 10.1109/SCAM.2007.21
   Aversano Lerina., 2007, PROC THE 6 EUROPEAN, P385, DOI [DOI 10.1145/1287624.1287680, 10.1145/1287624.1287680.]
   Bieman JM, 2003, NINTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM, PROCEEDINGS, P40, DOI 10.1109/METRIC.2003.1232454
   Bieman JM, 2001, PROC IEEE INT CONF S, P580, DOI 10.1109/ICSM.2001.972775
   Brereton O.P., 2008, P 12 INT C EV ASS SO
   Brereton P, 2007, J SYST SOFTWARE, V80, P571, DOI 10.1016/j.jss.2006.07.009
   Budgen D, 2009, IET SOFTW, V3, P410, DOI 10.1049/iet-sen.2008.0106
   Chatzigeorgiou A, 2008, COMPUT EDUC, V51, P1007, DOI 10.1016/j.compedu.2007.10.003
   Chung Eric S, 2004, P 5 C DES INT SYST P, P233, DOI [10.1145/1013115.1013148, DOI 10.1145/1013115.1013148]
   Cinneide M.O., 2006, P C PATT LANG PROGR
   Détienne F, 2002, PRACT SER, pVII
   Di Penta M, 2008, PROC IEEE INT CONF S, P217, DOI 10.1109/ICSM.2008.4658070
   Dupuis R., 2004, GUIDE SOFTWARE ENG B
   Dyba T, 2005, IEEE SOFTWARE, V22, P58, DOI 10.1109/MS.2005.6
   Dybå T, 2008, INFORM SOFTWARE TECH, V50, P833, DOI 10.1016/j.infsof.2008.01.006
   Ellis B, 2007, PROC INT CONF SOFTW, P302
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   Gattrell M., 2009, P 16 WORK C REV ENG, P160
   Glass RL, 2002, INFORM SOFTWARE TECH, V44, P491, DOI 10.1016/S0950-5849(02)00049-6
   Glass RL, 2004, COMMUN ACM, V47, P89, DOI 10.1145/990680.990686
   GUINDON R, 1990, INT J MAN MACH STUD, V33, P279, DOI 10.1016/S0020-7373(05)80120-8
   Hahsler M., 2004, FREE OPEN SOURCE SOF
   Hanssen GK, 2007, LECT NOTES COMPUT SC, V4764, P7
   HAYES-ROTH B, 1979, Cognitive Science, V3, P275, DOI 10.1207/s15516709cog0304_1
   HOST M, 2007, P 1 INT S EMP SOFTW, P479
   Izurieta C., 2007, P 1 INT S EMP SOFTW, P459
   JALIL MA, 2007, P 2007 INT C COMP SC, P97, DOI DOI 10.1109/ICCSA.2007.32
   Jeanmart S, 2009, INT SYMP EMP SOFTWAR, P69, DOI 10.1109/ESEM.2009.5316015
   Khomh F, 2008, CSMR 2008: 12TH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, P274
   Kitchenham B, 2007, IET SOFTW, V1, P161, DOI 10.1049/iet-sen:20060052
   Kitchenham B., 2007, Joint Report
   Kitchenham BA, 2004, PROC INT CONF SOFTW, P273
   Kitchenham B, 2010, INFORM SOFTWARE TECH, V52, P792, DOI 10.1016/j.infsof.2010.03.006
   Kitchenham B, 2009, INFORM SOFTWARE TECH, V51, P7, DOI 10.1016/j.infsof.2008.09.009
   Kitchenham BA, 2011, INFORM SOFTWARE TECH, V53, P638, DOI 10.1016/j.infsof.2010.12.011
   Kohls Christian., 2008, Proceedings of the 15th Conference on Pattern Languages of Programs, PLoP '08, p15:1
   LINDSAY RM, 1993, AM STAT, V47, P217, DOI 10.2307/2684982
   Masuda G., 1998, P ACM SIGSOFT 6 INT, P111
   Mohagheghi P, 2008, LECT NOTES COMPUT SC, V5095, P432, DOI 10.1007/978-3-540-69100-6_31
   Ng TH, 2007, PROC INT CONF SOFTW, P168
   Ng TH., 2006, P 2006 INT WORKSHOP, P51, DOI DOI 10.1145/1137702.1137713
   Petticrew M, 2006, SYSTEMATIC REVIEWS IN THE SOCIAL SCIENCES: A PRACTICAL GUIDE, P1, DOI 10.1002/9780470754887
   Prechelt L, 2001, IEEE T SOFTWARE ENG, V27, P1134, DOI 10.1109/32.988711
   Prechelt L, 2002, IEEE T SOFTWARE ENG, V28, P595, DOI 10.1109/TSE.2002.1010061
   Prechelt L., 1998, P SOFTW 98
   Pretorius R, 2008, ESEM'08: PROCEEDINGS OF THE 2008 ACM-IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, P342
   Rittel H.W.J., 1984, DEV DESIGN METHODOLO, P135
   SCHMIDT DC, 1995, COMMUN ACM, V38, P65, DOI 10.1145/226239.226255
   Sommerville Ian, 2016, Software engineering 8
   Torchiano M, 2002, PROC IEEE INT CONF S, P230, DOI 10.1109/ICSM.2002.1167770
   Vokác M, 2004, EMPIR SOFTW ENG, V9, P149, DOI 10.1023/B:EMSE.0000027778.69251.1f
   Wendorff P, 2001, FIFTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P77, DOI 10.1109/CSMR.2001.914971
   Whitley KN, 1997, J VISUAL LANG COMPUT, V8, P109, DOI 10.1006/jvlc.1996.0030
   Williams L, 2003, COMPUTER, V36, P39, DOI 10.1109/MC.2003.1204373
   Wydaeghe B., 1998, P C TECHN OBJ OR LAN
   Yin R.K., 2011, Qualitative research from start to finish
   Yuanhong W., 1997, P TECHN OBJ OR LANG, P159
   Zhang C., 2011, SURVEY EXPERIE UNPUB
NR 66
TC 68
Z9 84
U1 0
U2 39
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD SEP-OCT
PY 2012
VL 38
IS 5
BP 1213
EP 1231
DI 10.1109/TSE.2011.79
PG 19
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 009BA
UT WOS:000308999100014
DA 2024-07-18
ER

PT J
AU Svensson, RB
   Gorschek, T
   Regnell, B
   Torkar, R
   Shahrokni, A
   Feldt, R
AF Svensson, Richard Berntsson
   Gorschek, Tony
   Regnell, Bjorn
   Torkar, Richard
   Shahrokni, Ali
   Feldt, Robert
TI Quality Requirements in Industrial Practice-An Extended Interview Study
   at Eleven Companies
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Management; process; requirements/specifications
ID SOFTWARE; MANAGEMENT
AB In order to create a successful software product and assure its quality, it is not enough to fulfill the functional requirements, it is also crucial to find the right balance among competing quality requirements (QR). An extended, previously piloted, interview study was performed to identify specific challenges associated with the selection, tradeoff, and management of QR in industrial practice. Data were collected through semistructured interviews with 11 product managers and 11 project leaders from 11 software companies. The contribution of this study is fourfold: First, it compares how QR are handled in two cases, companies working in business-to-business markets and companies that are working in business-to-consumer markets. These two are also compared in terms of impact on the handling of QR. Second, it compares the perceptions and priorities of QR by product and project management, respectively. Third, it includes an examination of the interdependencies among quality requirements perceived as most important by the practitioners. Fourth, it characterizes the selection and management of QR in downstream development activities.
C1 [Svensson, Richard Berntsson; Regnell, Bjorn] Lund Univ, Dept Comp Sci, S-22100 Lund, Sweden.
   [Gorschek, Tony; Torkar, Richard] Blekinge Inst Technol, Sch Comp, S-37179 Karlskrona, Sweden.
   [Shahrokni, Ali; Feldt, Robert] Chalmers Univ Technol, SE-41296 Gothenburg, Sweden.
C3 Lund University; Blekinge Institute Technology; Chalmers University of
   Technology
RP Svensson, RB (corresponding author), Lund Univ, Dept Comp Sci, POB 118, S-22100 Lund, Sweden.
EM richard.berntsson_svensson@cs.lth.se; tony.gorschek@bth.se;
   bjorn.regnell@cs.lth.se; richard.torkar@bth.se; nimli@chalmers.se;
   robert.feldt@chalmers.se
RI Gorschek, Tony/E-3445-2013
OI Regnell, Bjorn/0000-0002-9380-6120; Feldt, Robert/0000-0002-5179-4205
FU VINNOVA (the Swedish Agency for Innovation Systems) within the MARS
   project; Industrial Excellence Center EASE-Embedded Applications
   Software Engineering
FX This work was partly funded by VINNOVA (the Swedish Agency for
   Innovation Systems) within the MARS project and by the Industrial
   Excellence Center EASE-Embedded Applications Software Engineering,
   (http://ease.cs.lth.se). Furthermore, the authors would like to thank
   all of the participants and their companies who have helped in making
   the data collection possible for this research.
CR [Anonymous], P 25 INT C INF TECHN
   [Anonymous], P 34 ANN HAW INT C S
   [Anonymous], P WORKSH MEAS REQ PR
   [Anonymous], P IEEE 1 INT S REQ E
   [Anonymous], P 5 INT S EMP SOFTW
   [Anonymous], P INT S EMP SOFTW EN
   [Anonymous], P IEEE 5 INT S REQ E
   [Anonymous], P C EUR IND REQ ENG
   [Anonymous], P EUR SOFTW PROC IMP
   [Anonymous], P 2 INT WORKSH SOFTW
   Aurum A., 2005, Engineering and Managing Software Requirements
   Barney S, 2008, J SYST ARCHITECT, V54, P576, DOI 10.1016/j.sysarc.2007.12.004
   Chung L., 1995, Proceedings of the Second IEEE International Symposium on Requirements Engineering (Cat. No.95TH8040), P132, DOI 10.1109/ISRE.1995.512554
   Chung L., 2000, Non-functional Requirements in Software Engineering
   Cleland-Huang J, 2005, PROC INT CONF SOFTW, P362
   Cysneiros LM, 2004, IEEE T SOFTWARE ENG, V30, P328, DOI 10.1109/TSE.2004.10
   Ebert C, 1998, INFORM SOFTWARE TECH, V40, P175, DOI 10.1016/S0950-5849(98)00049-4
   Fricker S, 2007, LECT NOTES COMPUT SC, V4542, P144
   Gorschek T, 2006, REQUIR ENG, V11, P79, DOI 10.1007/s00766-005-0020-7
   Gorschek T, 2008, INFORM SOFTWARE TECH, V50, P67, DOI 10.1016/j.infsof.2007.10.003
   Gorschek T, 2007, REQUIR ENG, V12, P163, DOI 10.1007/s00766-007-0047-z
   Grimstad S, 2006, INFORM SOFTWARE TECH, V48, P302, DOI 10.1016/j.infsof.2005.04.004
   Ivarsson M, 2011, EMPIR SOFTW ENG, V16, P365, DOI 10.1007/s10664-010-9146-4
   Ivarsson M, 2009, REQUIR ENG, V14, P155, DOI 10.1007/s00766-009-0080-1
   Jacobs S, 1999, IEEE INTERNATIONAL SYMPOSIUM ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P172, DOI 10.1109/ISRE.1999.777997
   Jung HW, 2004, IEEE SOFTWARE, V21, P88, DOI 10.1109/MS.2004.1331309
   Karlsson L, 2007, INFORM SOFTWARE TECH, V49, P588, DOI 10.1016/j.infsof.2007.02.008
   Kazman R., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P54, DOI 10.1109/ICSE.1999.840995
   Konrad S, 2008, INT REQUIR ENG CONF, P217, DOI 10.1109/RE.2008.31
   LAUESEN S, 2002, SOFTWARE REQUIREMENT
   Lehtola L., 2006, Software Process Improvement and Practice, V11, P7, DOI 10.1002/spip.249
   Leung HKN, 2001, INFORM MANAGE, V38, P137, DOI 10.1016/S0378-7206(00)00060-4
   Molokken K., 2003, Proceedings 2003 International Symposium on Empirical Software Engineering. ISESE 2003, P223
   Patton M. Q., 2002, QUALITATIVE RES EVAL
   Pettersson F, 2008, J SYST SOFTWARE, V81, P972, DOI 10.1016/j.jss.2007.08.032
   Robson C., 2002, Real world research
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Svensson RB, 2009, LECT NOTES COMPUT SC, V5512, P218, DOI 10.1007/978-3-642-02050-6_19
   TURBAN E., 2006, ELECT COMMERCE MANAG
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
NR 40
TC 47
Z9 50
U1 0
U2 10
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUL-AUG
PY 2012
VL 38
IS 4
BP 923
EP 935
DI 10.1109/TSE.2011.47
PG 13
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 983LE
UT WOS:000307120000012
OA Green Published
DA 2024-07-18
ER

PT J
AU Arcuri, A
   Iqbal, MZ
   Briand, L
AF Arcuri, Andrea
   Iqbal, Muhammad Zohaib
   Briand, Lionel
TI Random Testing: Theoretical Results and Practical Implications
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Coupon collector; random testing; theory; Schur function;
   predictability; partition testing; adaptive random testing
ID PARTITION
AB A substantial amount of work has shed light on whether random testing is actually a useful testing technique. Despite its simplicity, several successful real-world applications have been reported in the literature. Although it is not going to solve all possible testing problems, random testing appears to be an essential tool in the hands of software testers. In this paper, we review and analyze the debate about random testing. Its benefits and drawbacks are discussed. Novel results addressing general questions about random testing are also presented, such as how long does random testing need, on average, to achieve testing targets (e.g., coverage), how does it scale, and how likely is it to yield similar results if we rerun it on the same testing problem (predictability). Due to its simplicity that makes the mathematical analysis of random testing tractable, we provide precise and rigorous answers to these questions. Results show that there are practical situations in which random testing is a viable option. Our theorems are backed up by simulations and we show how they can be applied to most types of software and testing criteria. In light of these results, we then assess the validity of empirical analyzes reported in the literature and derive guidelines for both practitioners and scientists.
C1 [Arcuri, Andrea; Iqbal, Muhammad Zohaib; Briand, Lionel] Certus Software V&V Ctr, Simula Res Lab, N-1325 Lysaker, Norway.
RP Arcuri, A (corresponding author), Certus Software V&V Ctr, Simula Res Lab, POB 134, N-1325 Lysaker, Norway.
EM arcuri@simula.no; zohaib@simula.no; briand@simula.no
OI Iqbal, Muhammad Zohaib Z/0000-0001-8190-5327
FU Norwegian Research Council
FX The work described in this paper was supported by the Norwegian Research
   Council. This paper was produced as part of the ITEA-2 project called
   VERDE.
CR Andrews James H., 2008, 2008 23rd IEEE/ACM International Conference on Automated Software Engineering, P19, DOI 10.1109/ASE.2008.12
   [Anonymous], 1994, Mathematical Statistics and Data Analysis
   [Anonymous], 1998, The art of computer programming: Sorting and searching
   [Anonymous], 1994, Encyclopedia of software Engineering
   [Anonymous], 2010, Proceedings of the 19th International Symposium on Software Testing and Analysis, ISSTA'10
   Arcuri A., 2011, IEEE T SOFTWARE ENG
   Arcuri A, 2012, IEEE T SOFTWARE ENG, V38, P1088, DOI 10.1109/TSE.2011.85
   Arcuri A, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1, DOI 10.1145/1985793.1985795
   Arcuri A, 2010, LECT NOTES COMPUT SC, V6435, P95, DOI 10.1007/978-3-642-16573-3_8
   Arcuri A, 2009, LECT NOTES COMPUT SC, V5792, P156, DOI 10.1007/978-3-642-04944-6_13
   Arcuri Andrea., 2011, ISSTA
   Boland PJ, 2003, IEEE T SOFTWARE ENG, V29, P88, DOI 10.1109/TSE.2003.1166591
   Chen TY, 2006, J SYST SOFTWARE, V79, P591, DOI 10.1016/j.jss.2005.05.029
   Chen TY, 1996, IEEE T SOFTWARE ENG, V22, P109, DOI 10.1109/32.485221
   CHEN TY, 1994, IEEE T SOFTWARE ENG, V20, P977, DOI 10.1109/32.368132
   Ciupa I, 2011, SOFTW TEST VERIF REL, V21, P3, DOI 10.1002/stvr.415
   Cormen Thomas H., 2001, INTRO ALGORITHMS
   DEMILLO RA, 1978, COMPUTER, V11, P34, DOI 10.1109/C-M.1978.218136
   DURAN JW, 1984, IEEE T SOFTWARE ENG, V10, P438, DOI 10.1109/TSE.1984.5010257
   Feller W., 1968, An Introduction to Probability Theory and Its Applications, V1
   Fraser G., 2011, Proceedings of the 11th International Conference on Quality Software (QSIC 2011), P31, DOI 10.1109/QSIC.2011.19
   Godefroid Patrice, 2005, ACM SIGPLAN NOTICES, P213, DOI DOI 10.1145/1064978.1065036
   Groce A, 2007, PROC INT CONF SOFTW, P621
   GUTJAHR WJ, 1995, IEEE T SOFTWARE ENG, V21, P219, DOI 10.1109/32.372149
   Gutjahr WJ, 1999, IEEE T SOFTWARE ENG, V25, P661, DOI 10.1109/32.815325
   HAMLET D, 1990, IEEE T SOFTWARE ENG, V16, P1402, DOI 10.1109/32.62448
   Harman M., 2010, P INT WORKSH SEARCH
   Harman M, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P342, DOI 10.1109/FOSE.2007.29
   Harman M, 2010, IEEE T SOFTWARE ENG, V36, P226, DOI 10.1109/TSE.2009.71
   Harman M, 2009, AOSD'09: 8TH INTERNATIONAL CONFERENCE ON ASPECT-ORIENTED SOFTWARE DEVELOPMENT, P185
   Holst L., 2001, EXTREMES, V4, P129
   Iqbal MZ, 2010, LECT NOTES COMPUT SC, V6394, P286
   Lyu M., 1996, Handbook of Software Reliability Engineering
   Matsumoto M., 1998, ACM Transactions on Modeling and Computer Simulation, V8, P3, DOI 10.1145/272991.272995
   McMinn P, 2004, SOFTW TEST VERIF REL, V14, P105, DOI 10.1002/stvr.294
   Motwani M., 1995, RANDOMIZED ALGORITHM
   Myers G J., 2004, The Art of Software Testing, V2nd ed.
   Pacheco C, 2007, PROC INT CONF SOFTW, P75
   Pournelle G. H., 1953, Journal of Mammalogy, V34, P133, DOI 10.1890/0012-9658(2002)083[1421:SDEOLC]2.0.CO;2
   ROSEN B, 1969, Z WAHRSCHEINLICHKEIT, V13, P256, DOI 10.1007/BF00539204
   Sharma R., 2011, P FUND APPR SOFW ENG
   Shioda S, 2007, J COMPUT APPL MATH, V200, P154, DOI 10.1016/j.cam.2005.12.011
   Tillmann N, 2008, LECT NOTES COMPUT SC, V4966, P134
   Tonella P., 2004, Software Engineering Notes, V29, P119, DOI 10.1145/1013886.1007528
   TSOUKALAS MZ, 1993, IEEE T SOFTWARE ENG, V19, P687, DOI 10.1109/32.238569
   venod-Fosse P. The, 1991, SOFTW TEST VERIF REL, V1, P15
   Vos Tanja E. J., 2010, Proceedings of the Third IEEE International Conference on Software Testing, Verification and Validation (ICST 2010), P175, DOI 10.1109/ICST.2010.24
   Wegener J, 2001, INFORM SOFTWARE TECH, V43, P841, DOI 10.1016/S0950-5849(01)00190-2
   WEYUKER EJ, 1980, IEEE T SOFTWARE ENG, V6, P236, DOI 10.1109/TSE.1980.234485
   WEYUKER EJ, 1991, IEEE T SOFTWARE ENG, V17, P703, DOI 10.1109/32.83906
   White DR, 2011, IEEE T EVOLUT COMPUT, V15, P515, DOI 10.1109/TEVC.2010.2083669
   Zhan Y, 2008, J SYST SOFTWARE, V81, P262, DOI 10.1016/j.jss.2007.05.039
NR 52
TC 99
Z9 115
U1 0
U2 13
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAR-APR
PY 2012
VL 38
IS 2
BP 258
EP 277
DI 10.1109/TSE.2011.121
PG 20
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 913ZF
UT WOS:000301915200003
DA 2024-07-18
ER

PT J
AU Artzi, S
   Dolby, J
   Tip, F
   Pistoia, M
AF Artzi, Shay
   Dolby, Julian
   Tip, Frank
   Pistoia, Marco
TI Fault Localization for Dynamic Web Applications
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Fault localization; statistical debugging; program analysis; web
   applications; PHP
AB In recent years, there has been significant interest in fault-localization techniques that are based on statistical analysis of program constructs executed by passing and failing executions. This paper shows how the Tarantula, Ochiai, and Jaccard fault-localization algorithms can be enhanced to localize faults effectively in web applications written in PHP by using an extended domain for conditional and function-call statements and by using a source mapping. We also propose several novel test-generation strategies that are geared toward producing test suites that have maximal fault-localization effectiveness. We implemented various fault-localization techniques and test-generation strategies in Apollo, and evaluated them on several open-source PHP applications. Our results indicate that a variant of the Ochiai algorithm that includes all our enhancements localizes 87.8 percent of all faults to within 1 percent of all executed statements, compared to only 37.4 percent for the unenhanced Ochiai algorithm. We also found that all the test-generation strategies that we considered are capable of generating test suites with maximal fault-localization effectiveness when given an infinite time budget for test generation. However, on average, a directed strategy based on path-constraint similarity achieves this maximal effectiveness after generating only 6.5 tests, compared to 46.8 tests for an undirected test-generation strategy.
C1 [Artzi, Shay] IBM Software Grp, Littleton, MA 01460 USA.
   [Dolby, Julian; Tip, Frank; Pistoia, Marco] IBM Thomas J Watson Res Ctr, Yorktown Hts, NY 10598 USA.
C3 International Business Machines (IBM); International Business Machines
   (IBM)
RP Artzi, S (corresponding author), IBM Software Grp, 550 King St, Littleton, MA 01460 USA.
EM artzi@us.ibm.com; dolby@us.ibm.com; ftip@us.ibm.com; pistoia@us.ibm.com
CR Abreu R, 2007, TAIC PART 2007 - TESTING: ACADEMIC AND INDUSTRIAL CONFERENCE - PRACTICE AND RESEARCH TECHNIQUES, PROCEEDINGS, P89, DOI 10.1109/TAIC.PART.2007.13
   Abreu R, 2006, 12TH PACIFIC RIM INTERNATIONAL SYMPOSIUM ON DEPENDABLE COMPUTING, PROCEEDINGS, P39
   Agrawal H, 1995, SIXTH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P143, DOI 10.1109/ISSRE.1995.497652
   [Anonymous], 2010, ISSTA
   [Anonymous], 2010, ICSE
   [Anonymous], 2005, ASE, DOI [10.1145/1101908.1101966, DOI 10.1145/1101908.1101966]
   [Anonymous], P S NETW DISTR SYST
   [Anonymous], 2008, ISSTA
   Artzi S., 2011, P INT C SOFTW ENG
   Artzi S., 2010, ISSTA, P49, DOI DOI 10.1145/1831708.1831715
   Artzi S, 2010, IEEE T SOFTWARE ENG, V36, P474, DOI 10.1109/TSE.2010.31
   Artzi Shay., 2010, P 32 ACMIEEE INT C S, P265
   Artzi Shay., 2008, P 2008 INT S SOFTWAR, P261, DOI [10.1145/1390630.1390662, DOI 10.1145/1390630.1390662]
   Baudry B., 2006, 28th International Conference on Software Engineering Proceedings, P82, DOI 10.1145/1134285.1134299
   Burnim Jacob, 2008, 2008 23rd IEEE/ACM International Conference on Automated Software Engineering, P443, DOI 10.1109/ASE.2008.69
   CADAR C., 2006, P C COMP COMM SEC
   Chen MY, 2002, INTERNATIONAL CONFERENCE ON DEPENDABLE SYSTEMS AND NETWORKS, PROCEEDINGS, P595, DOI 10.1109/DSN.2002.1029005
   Chilimbi TM, 2009, PROC INT CONF SOFTW, P34, DOI 10.1109/ICSE.2009.5070506
   Cleve H, 2005, PROC INT CONF SOFTW, P342
   Dallmeier V, 2005, LECT NOTES COMPUT SC, V3586, P528
   GODEFROID P, 2005, P ACM SIGPLAN C PROG
   HORWITZ S, 1990, ACM T PROGR LANG SYS, V12, P26, DOI [10.1145/77606.77608, 10.1145/960116.53994]
   HUTCHINS M, 1994, PROC INT CONF SOFTW, P191, DOI 10.1109/ICSE.1994.296778
   Jain A. K., 1988, Algorithms for Clustering Data, P446
   Jiang B., 2009, P 33 ANN IEEE INT CO
   Jin G., 2010, P 25 ANN ACM SIGPLAN
   Jones J.A., 2005, P 20 IEEE ACM INT C, P273, DOI [10.1145/1101908.1101949, DOI 10.1145/1101908.1101949]
   Jones JA, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P467, DOI 10.1109/ICSE.2002.1007991
   Liblit B, 2005, ACM SIGPLAN NOTICES, V40, P15, DOI 10.1145/1064978.1065014
   Liblit B, 2003, ACM SIGPLAN NOTICES, V38, P141, DOI 10.1145/780822.781148
   Liu C., 2005, P EUR SOFTW ENG C HE, V30, P286
   Lyle J., 1987, Proceedings of the ICCEA, ICCEA'87, P877
   MINAMIDE Y, 2005, P INT C WORLD WID WE
   NAINAR PA, 2007, P INT S SOFTW TEST A
   PAN H, 1992, SERCTR116P PURD U
   Park S, 2010, 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING & KNOWLEDGE ENGINEERING (SEKE 2010), P645
   Ren Xiaoxia., 2007, ISSTA, P239
   Renieris M, 2003, 18TH IEEE INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P30, DOI 10.1109/ASE.2003.1240292
   Santelices R, 2009, PROC INT CONF SOFTW, P56, DOI 10.1109/ICSE.2009.5070508
   Sen K., 2005, P EUR SOFTW ENG C HE
   Stoerzer Maximilian., 2006, P 14 ACM SIGSOFT INT, P57
   TIP F, 1995, J PROGRAM LANG, V3, P121
   Wassermann G., 2008, P 2008 INT S SOFTW T, P249, DOI DOI 10.1145/1390630.1390661
   Xiangyu Zhang, 2006, 28th International Conference on Software Engineering Proceedings, P272, DOI 10.1145/1134285.1134324
   Yilmaz C, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P81, DOI 10.1145/1368088.1368100
   Yu YB, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P201, DOI 10.1145/1368088.1368116
   Zeller A., 2002, Software Engineering Notes, V27, P1, DOI 10.1145/605466.605468
   Zeller A, 1999, LECT NOTES COMPUT SC, V1687, P253, DOI 10.1145/318774.318946
   Zhang ZY, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P43, DOI 10.1145/1595696.1595705
NR 49
TC 15
Z9 22
U1 0
U2 7
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAR-APR
PY 2012
VL 38
IS 2
BP 314
EP 335
DI 10.1109/TSE.2011.76
PG 22
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 913ZF
UT WOS:000301915200006
DA 2024-07-18
ER

PT J
AU Bodden, E
   Havelund, K
AF Bodden, Eric
   Havelund, Klaus
TI Aspect-Oriented Race Detection in Java
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article; Proceedings Paper
CT International Symposium on Software Testing and Analysis
CY JUL 20-24, 2008
CL Seattle, WA
DE Race detection; runtime verification; aspect-oriented programming;
   semantic pointcuts; static analysis
ID VERIFICATION; TOOLS
AB In the past, researchers have developed specialized programs to aid programmers in detecting concurrent programming errors such as deadlocks, livelocks, starvation, and data races. In this work, we propose a language extension to the aspect-oriented programming language AspectJ, in the form of three new pointcuts, lock(), unlock(), and maybeShared(). These pointcuts allow programmers to monitor program events where locks are granted or handed back, and where values are accessed that may be shared among multiple Java threads. We decide thread locality using a static thread-local-objects analysis developed by others. Using the three new primitive pointcuts, researchers can directly implement efficient monitoring algorithms to detect concurrent-programming errors online. As an example, we describe a new algorithm which we call RACER, an adaption of the well-known ERASER algorithm to the memory model of Java. We implemented the new pointcuts as an extension to the AspectBench Compiler, implemented the RACER algorithm using this language extension, and then applied the algorithm to the NASA K9 Rover Executive and two smaller programs. Our experiments demonstrate that our implementation is effective in finding subtle data races. In the Rover Executive, RACER finds 12 data races, with no false warnings. Only one of these races was previously known.
C1 [Bodden, Eric] Tech Univ Darmstadt, Software Technol Grp, D-64289 Darmstadt, Germany.
   [Havelund, Klaus] CALTECH, Jet Prop Lab, Lab Reliable Software, Pasadena, CA 91109 USA.
C3 Technical University of Darmstadt; National Aeronautics & Space
   Administration (NASA); NASA Jet Propulsion Laboratory (JPL); California
   Institute of Technology
RP Bodden, E (corresponding author), Tech Univ Darmstadt, Software Technol Grp, Hsch Str 10,S2-02 A209, D-64289 Darmstadt, Germany.
EM eric@bodden.de; klaus.havelund@jpl.nasa.gov
RI Bodden, Eric/AAE-1365-2021
OI Bodden, Eric/0000-0003-3470-3647
CR Agarwal R., 2005, HAIF VER C, P191
   Allan C, 2005, ACM SIGPLAN NOTICES, V40, P345, DOI 10.1145/1103845.1094839
   [Anonymous], P 3 INT WORKSH DYN A
   [Anonymous], THESIS RWTH AACHEN U
   AOTANI T, 2005, P SOFTW ENG PROP LAN
   Aotani Tomoyuki., 2007, AOSD 07, P161
   Artho C, 2004, LECT NOTES COMPUT SC, V3299, P150
   Artho C, 2003, SOFTW TEST VERIF REL, V13, P207, DOI 10.1002/stvr.281
   Avgustinov P., 2005, ASPECT ORIENTED SYST, P87
   Barringer H, 2004, LECT NOTES COMPUT SC, V2937, P44
   Bensalem S., 2006, PADTAD'06, P41, DOI DOI 10.1145/1147403.1147412
   Bensalem S, 2006, LECT NOTES COMPUT SC, V3875, P208
   BODDEN E, 2006, P INT NET OBJECTDAYS, P49
   BODDEN E, 2007, ABC20076
   Bodden E., 2008, ISSTA 08, P155
   Bodden E, 2007, LECT NOTES COMPUT SC, V4609, P525
   Brat G, 2004, FORM METHOD SYST DES, V25, P167, DOI 10.1023/B:FORM.0000040027.28662.a4
   Bruneton Eric, 2002, P AD EXT COMP SYST
   Chen F, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P221, DOI 10.1145/1368088.1368119
   Chen F, 2007, OOPSLA: 22ND INTERNATIONAL CONFERENCE ON OBJECT-ORIENTED PROGRAMMING, SYSTEMS, LANGUAGES, AND APPLICATIONS, PROCEEDINGS, P569
   COHEN S, JTREK COMPAQ NO LONG
   DAHM M, 2010, BCEL
   Eichberg M, 2004, LECT NOTES COMPUT SC, V3302, P366
   Elmas T, 2007, PLDI'07: PROCEEDINGS OF THE 2007 ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P245, DOI 10.1145/1250734.1250762
   Eustace Alan., 1995, Proceedings of the USENIX 1995 Technical Conference, P25
   Eytani Y, 2007, CONCURR COMP-PRACT E, V19, P267, DOI 10.1002/cpe.1068
   Flanagan Cormac., 2004, POPL 04, P256
   Goetz B, 2006, JAVA CONCURRENCY PRA
   GOLDBERG A, 2003, P 5 ECOOP WORKSH FOR
   Gosling J., 2005, JAVA TM LANGUAGE SPE, V3rd
   Gray J., 1986, Proceedings Fifth Symposium on Reliability in Distributed Software and Database Systems (Cat. No.86CH2260-8), P3
   Halpert R.L., 2007, Proceedings of the International Conference on Parallel Computing Technologies, P353, DOI DOI 10.1109/PACT.2007.23
   Harrow JJ, 2000, LECT NOTES COMPUT SC, V1885, P331
   Havelund K, 2004, FORM METHOD SYST DES, V24, P189, DOI 10.1023/B:FORM.0000017721.39909.4b
   Havelund K, 2000, LECT NOTES COMPUT SC, V1885, P245
   Kinneer A, 2007, PROC INT CONF SOFTW, P51, DOI 10.1109/ICSECOMPANION.2007.68
   LAMPORT L, 1978, COMMUN ACM, V21, P558, DOI 10.1145/359545.359563
   LEA D, 1996, CONCURRENT PROGRAMMI
   Lhoták O, 2003, LECT NOTES COMPUT SC, V2622, P153
   Manson Jeremy., 2005, Proceedings of the 32Nd ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages, POPL'05, P378, DOI DOI 10.1145/1040305.1040336
   Necula GC, 2002, LECT NOTES COMPUT SC, V2304, P213
   OCALLAHAN R, 2003, P 9 ACM SIGPLAN S PR, P167
   Savage S, 1997, ACM T COMPUT SYST, V15, P391, DOI 10.1145/269005.266641
   Stolz V, 2006, ELECTRON NOTES THEOR, V144, P109, DOI 10.1016/j.entcs.2006.02.007
   UR S, 2006, HARDWARE SOFTWARE VE
   VISSER W, 2003, P 15 IEEE INT C AUT, P203
   VONPRAUN C, 2001, P ACM C OBJ OR PROGR, P70
   WANG L, 2003, ELECT NOTES THEORETI, V89
   2010, ASPECTJ PROGRAMMING
   2010, SOOT WEBSITE
   2010, ASPECTJ HOME PAGE
NR 51
TC 14
Z9 18
U1 0
U2 4
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUL-AUG
PY 2010
VL 36
IS 4
BP 509
EP 527
DI 10.1109/TSE.2010.25
PG 19
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Engineering
GA 631LE
UT WOS:000280347600005
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Dong, J
   Yang, S
   Zhang, K
AF Dong, Jing
   Yang, Sheng
   Zhang, Kang
TI Visualizing design patterns in their applications and compositions
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE design pattern; UML; model-driven architecture; Web service; visual tool
AB Design patterns are generic design solutions that can be applied and composed in different applications where pattern-related information is generally implicit in the Unified Modeling Language ( UML) diagrams of the applications. It is unclear in which pattern instances each modeling element, such as class, attribute, and operation, participates. It is hard for a designer to find the design patterns used in an application design. Consequently, the benefits of design patterns are compromised because designers cannot communicate with each other in terms of the design patterns they used and their design decisions and trade-offs. In this paper, we present a UML profile that defines new stereotypes, tagged values, and constraints for tracing design patterns in UML diagrams. These new stereotypes and tagged values are attached to a modeling element to explicitly represent the role the modeling element plays in a design pattern so that the user can identify the pattern in a UML diagram. Based on this profile, we also develop a Web service ( tool) for explicitly visualizing design patterns in UML diagrams. With this service, users are able to visualize design patterns in their applications and compositions because pattern-related information can be dynamically displayed. A real-world case study and a comparative experiment with existing approaches are conducted to evaluate our approach.
C1 Univ Texas, Dept Comp Sci, Richardson, TX 75083 USA.
C3 University of Texas System; University of Texas Dallas
RP Dong, J (corresponding author), Univ Texas, Dept Comp Sci, 2601 N Floyd Rd, Richardson, TX 75083 USA.
EM jdong@utdallas.edu; syang@utdallas.edu; kzhang@utdallas.edu
CR Alencar P., 1999, Proceedings. Twenty-Third Annual International Computer Software and Applications Conference (Cat. No.99CB37032), P160, DOI 10.1109/CMPSAC.1999.812694
   Alur D., 2001, Core J2EE patterns: Best practices and design strategies, V1st
   [Anonymous], 1996, Pattern oriented software architecture: a system of patters
   [Anonymous], 1814, DTSCH BLATTER, V3, P576
   [Anonymous], 1995, Design patterns for object-oriented software development
   Berner S, 1999, LECT NOTES COMPUT SC, V1723, P249
   Booch Grady, 1999, UNIFIED MODELING LAN, DOI DOI 10.1007/3-540-40011-7_10
   Cerami E., 2002, WEB SERVICES ESSENTI
   COPLIEN JO, 1995, PATTERN LANGUAGES OF PROGRAM DESIGN, P183
   Di Battista G., 1999, Graph Drawing: Algorithms for the Visualization of Graphs, V357
   DING C, 1990, IEEE T SOFTWARE ENG, V16, P543, DOI 10.1109/32.52777
   Dong J, 2005, ITCC 2005: INTERNATIONAL CONFERENCE ON INFORMATION TECHNOLOGY: CODING AND COMPUTING, VOL 2, P385, DOI 10.1109/ITCC.2005.293
   Dong J, 2003, 200S IEEE SYMPOSIUM ON HUMAN CENTRIC COMPUTING LANGUAGES AND ENVIRONMENTS, P123
   Dong J, 2004, INFORM SOFTWARE TECH, V46, P293, DOI 10.1016/j.infsof.2003.09.003
   DONG J, 2003, DESIGN PATTERN COMPO, P287
   Dong J, 2007, ECBS 2007: 14TH ANNUAL IEEE INTERNATIONAL CONFERENCE AND WORKSHOPS ON THE ENGINEERING OF COMPUTER-BASED SYSTEMS, PROCEEDINGS, P371
   Eden AH, 1997, AUTOMATED SOFTWARE ENGINEERING, 12TH IEEE INTERNATIONAL CONFERENCE, PROCEEDINGS, P143, DOI 10.1109/ASE.1997.632834
   Florentine BD, 1997, DIAGN CYTOPATHOL, V17, P472, DOI 10.1002/(SICI)1097-0339(199712)17:6<472::AID-DC18>3.0.CO;2-J
   Fontoura M, 2000, LECT NOTES COMPUT SC, V1850, P63
   Fowler M., 1997, ANAL PATTERNS REUSAB
   France RB, 2004, IEEE T SOFTWARE ENG, V30, P193, DOI 10.1109/TSE.2004.1271174
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   GANNOD GC, 1999, P 6 WORK C REV ENG, P77
   GUEHENEUC Y, 2004, P 11 WORK C REV ENG
   GUEHENEUC YG, 2006, P C SOFTW MAINT REEN
   Hausmann JH, 2001, IEEE SYMPOSIA ON HUMAN-CENTRIC COMPUTING LANGUAGES AND ENVIRONMENTS, PROCEEDINGS, P80, DOI 10.1109/HCC.2001.995242
   Heuzeroth D., 2002, P 6 INT C INT DES PR
   Kandé MM, 2000, LECT NOTES COMPUT SC, V1939, P513
   Keller R. K., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P226, DOI 10.1109/ICSE.1999.841012
   KRAMER C, 1996, P WORK C REV ENG NOV
   Lahtinen S, 2003, 200S IEEE SYMPOSIUM ON HUMAN CENTRIC COMPUTING LANGUAGES AND ENVIRONMENTS, P227
   Lauder A., 1998, Precise Visual Speci cation of Design Patterns, P114
   Le Guennec A, 2000, LECT NOTES COMPUT SC, V1939, P482
   MAPDLSDEN D, 2002, P 40 INT C OBJ OR LA
   McCabe T. J., 1976, IEEE Transactions on Software Engineering, VSE-2, P308, DOI 10.1109/TSE.1976.233837
   Medvidovic N, 2002, ACM T SOFTW ENG METH, V11, P2, DOI 10.1145/504087.504088
   MEDYNSKIY Y, 2003, P ACM INT C HUM FACT, P513
   Mikkonen T, 1998, PROC INT CONF SOFTW, P115, DOI 10.1109/ICSE.1998.671108
   NICKERSON JV, 1994, THESIS NEW YORK U
   Niere J, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P338, DOI 10.1109/ICSE.2002.1007980
   *OBJ MAN GROUP, 2001, UN MOD LANG SPEC VER
   Peltonen J, 2001, IEEE SYMPOSIA ON HUMAN-CENTRIC COMPUTING LANGUAGES AND ENVIRONMENTS, PROCEEDINGS, P264, DOI 10.1109/HCC.2001.995273
   REISS SP, 2000, P 33 HAW INT C SYST
   Rumbaugh James, 1999, The unified modeling language reference manual
   Sauer S, 2001, IEEE SYMPOSIA ON HUMAN-CENTRIC COMPUTING LANGUAGES AND ENVIRONMENTS, PROCEEDINGS, P248, DOI 10.1109/HCC.2001.995271
   Schäfer T, 2006, IEEE T SOFTWARE ENG, V32, P753, DOI 10.1109/TSE.2006.94
   SIX JM, 2000, THESIS U TEXAS DALLA
   Sunyé G, 2000, LECT NOTES COMPUT SC, V1850, P44
   VLISSIDES J, 1998, NOTATION NOTATION NO
   WAGNER G, 2002, P 3 INT WORKSH AG OR
   Warmer J.B., 1998, OBJECT CONSTRAINT LA
   2002, WEB SERVICES ARCHITE
NR 52
TC 42
Z9 52
U1 0
U2 9
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUL
PY 2007
VL 33
IS 7
BP 433
EP 453
DI 10.1109/TSE.2007.1012
PG 21
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 172KQ
UT WOS:000246803600001
DA 2024-07-18
ER

PT J
AU Koru, AG
   Tian, JJ
AF Koru, AG
   Tian, JJ
TI Comparing high-change modules and modules with the highest measurement
   values in two large-scale open-source products
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE product metrics; maintainability; maintenance planning; open-source
   software
ID OBJECT-ORIENTED SOFTWARE; NEURAL-NETWORKS; PRONE SOFTWARE; DESIGN
   METRICS; SYSTEMS; DEFECT; MAINTAINABILITY; MAINTENANCE; FAILURES;
   QUALITY
AB Identifying change-prone modules can enable software developers to take focused preventive actions that can reduce maintenance costs and improve quality. Some researchers observed a correlation between change proneness and structural measures, such as size, coupling, cohesion, and inheritance measures. However, the modules with the highest measurement values were not found to be the most troublesome modules by some of our colleagues in industry, which was confirmed by our previous study of six large-scale industrial products. To obtain additional evidence, we identified and compared high-change modules and modules with the highest measurement values in two large-scale open-source products, Mozilla and OpenOffice, and we characterized the relationship between them. Contrary to common intuition, we found through formal hypothesis testing that the top modules in change-count rankings and the modules with the highest measurement values were different. In addition, we observed that high-change modules had fairly high places in measurement rankings, but not the highest places. The accumulated findings from these two open-source products, together with our previous similar findings for six closed-source products, should provide practitioners with additional guidance in identifying the change-prone modules.
C1 Univ Maryland Baltimore Cty, Dept Informat Syst, Baltimore, MD 21250 USA.
   So Methodist Univ, Dept Comp Sci & Engn, Dallas, TX 75275 USA.
C3 University System of Maryland; University of Maryland Baltimore County;
   Southern Methodist University
RP Univ Maryland Baltimore Cty, Dept Informat Syst, 1000 Hilltop Circle, Baltimore, MD 21250 USA.
EM gkoru@umbc.edu; tian@engr.smu.edu
RI Koru, Gunes/AAR-5819-2020
CR BASILI VR, 1983, IEEE T SOFTWARE ENG, V9, P664, DOI 10.1109/TSE.1983.235431
   Binkley AB, 1998, PROC INT CONF SOFTW, P452, DOI 10.1109/ICSE.1998.671604
   Breiman L, 1998, BIOMETRICS, DOI [10.1201/9781315139470, DOI 10.2307/2530946]
   Briand L. C., 1998, Empirical Software Engineering, V3, P65, DOI 10.1023/A:1009783721306
   Briand LC, 2000, J SYST SOFTWARE, V51, P245, DOI 10.1016/S0164-1212(99)00102-8
   Briand LC, 1996, IEEE T SOFTWARE ENG, V22, P68, DOI 10.1109/32.481535
   Briand LC, 1999, IEEE T SOFTWARE ENG, V25, P91, DOI 10.1109/32.748920
   BRIAND LC, 1993, IEEE T SOFTWARE ENG, V19, P1028, DOI 10.1109/32.256851
   Cartwright M, 2000, IEEE T SOFTWARE ENG, V26, P786, DOI 10.1109/32.879814
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   Clark L.A., 1993, Statistical Models in S, P377
   El Emam K, 2002, IEEE T SOFTWARE ENG, V28, P494, DOI 10.1109/TSE.2002.1000452
   El Emam K, 2001, J SYST SOFTWARE, V56, P63, DOI 10.1016/S0164-1212(00)00086-8
   Emam KE, 2001, IEEE T SOFTWARE ENG, V27, P630, DOI 10.1109/32.935855
   Fenton NE, 2000, IEEE T SOFTWARE ENG, V26, P797, DOI 10.1109/32.879815
   Ferenc R, 2002, PROC IEEE INT CONF S, P172, DOI 10.1109/ICSM.2002.1167764
   *FRONTENDART LTD, 2003, SET US GUID COL CAN
   Hamburg M., 1977, Statistical analysis for decision making
   HARRISON R, 1998, J EMPIRICAL SOFTWARE, V3, P255
   HENRY S, 1981, IEEE T SOFTWARE ENG, V7, P510, DOI 10.1109/TSE.1981.231113
   Juran J.Godfrey., 1999, Quality handbook
   KAFURA D, 1987, IEEE T SOFTWARE ENG, V13, P335, DOI 10.1109/TSE.1987.233164
   KAFURA D, 1981, J SYST SOFTWARE, V2, P121, DOI 10.1016/0164-1212(81)90032-7
   KAUFRA D, 1985, P 8 INT C SOFTW ENG, P378
   Khoshgoftaar T. M., 1995, Annals of Software Engineering, V1, P141, DOI 10.1007/BF02249049
   Khoshgoftaar TM, 2002, IEEE T RELIAB, V51, P455, DOI 10.1109/TR.2002.804488
   Khoshgoftaar TM, 1997, IEEE T NEURAL NETWOR, V8, P902, DOI 10.1109/72.595888
   Khoshgoftaar TM, 1996, IEEE T RELIAB, V45, P456, DOI 10.1109/24.537016
   KITCHENHAM BA, 1990, SOFTWARE ENG J, V5, P50, DOI 10.1049/sej.1990.0007
   Koru AG, 2004, IEEE SOFTWARE, V21, P54, DOI 10.1109/MS.2004.12
   Koru AG, 2003, J SYST SOFTWARE, V67, P153, DOI 10.1016/S0164-1212(02)00126-7
   LAMB DA, 1997, DATA MODEL OBJECT OR
   LI W, 1993, J SYST SOFTWARE, V23, P111, DOI 10.1016/0164-1212(93)90077-B
   LORENZ M, 1995, OBJECT ORIENTED METR
   MUNSON JC, 1992, IEEE T SOFTWARE ENG, V18, P423, DOI 10.1109/32.135775
   PARETO V, 2001, ROOTS ITALIAN SCH EC, V2
   PORTER AA, 1990, IEEE SOFTWARE, V7, P46, DOI 10.1109/52.50773
   *R DEV COR TEAM R, 2003, LANG ENV STAT COMP
   Raymond E., 1999, CATHEDRAL BAZAAR MUS
   ROMBACH HD, 1987, IEEE T SOFTWARE ENG, V13, P344, DOI 10.1109/TSE.1987.233165
   *SCI TOOLW INC, 2003, UND C US GUID REF
   SHEN VY, 1985, IEEE T SOFTWARE ENG, V11, P317, DOI 10.1109/TSE.1985.232222
   Shepperd M., 1993, DERIVATION VALIDATIO
   TIAN J, 1995, IEEE T SOFTWARE ENG, V21, P945, DOI 10.1109/32.489071
   TIAN J, 1995, IEEE T SOFTWARE ENG, V21, P641, DOI 10.1109/32.403788
   Tian J, 1998, J SYST SOFTWARE, V44, P135, DOI 10.1016/S0164-1212(98)10050-X
   Tian J, 2001, J SYST SOFTWARE, V57, P207, DOI 10.1016/S0164-1212(01)00011-5
   TIAN J, 2000, SOFTWARE QUALITY PRO, V2, P32
   Venables W.N., 1994, MODERN APPL STAT S P
   WEYUKER EJ, 1988, IEEE T SOFTWARE ENG, V14, P1357, DOI 10.1109/32.6178
NR 50
TC 57
Z9 65
U1 0
U2 5
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD AUG
PY 2005
VL 31
IS 8
BP 625
EP 642
DI 10.1109/TSE.2005.89
PG 18
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 953OL
UT WOS:000231086500001
DA 2024-07-18
ER

PT J
AU Frakes, WB
   Kang, K
AF Frakes, WB
   Kang, K
TI Software reuse research: Status and future
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article; Proceedings Paper
CT 8th International Conference on Software Reuse
CY JUL 05-09, 2004
CL Madrid, SPAIN
DE software reuse; domain engineering; research; metrics; architectures;
   generators; finance
AB This paper briefly summarizes software reuse research, discusses major research contributions and unsolved problems, provides pointers to key publications, and introduces four papers selected from The Eighth International Conference on Software Reuse (ICSR8).
C1 Virginia Tech, Dept Comp Sci, Falls Church, VA 22046 USA.
   Pohang Univ Sci & Technol, Dept Comp Sci & Engn, Pohang 790784, South Korea.
C3 Virginia Polytechnic Institute & State University; Pohang University of
   Science & Technology (POSTECH)
RP Virginia Tech, Dept Comp Sci, Falls Church, VA 22046 USA.
EM wfrakes@vt.edu; kck@postech.ac.kr
CR Alonso O, 2003, IEEE SOFTWARE, V20, P98, DOI 10.1109/MS.2003.1196330
   [Anonymous], 1996, Pattern oriented software architecture: a system of patters
   Atkinson Colin., 2002, COMPONENT BASED PROD
   Favaro JM, 1998, ANN SOFTW ENG, V5, P5, DOI 10.1023/A:1018976424679
   Frakes W, 1998, ANN SOFTW ENG, V5, P125, DOI 10.1023/A:1018972323770
   Frakes W, 1996, ACM COMPUT SURV, V28, P415, DOI 10.1145/234528.234531
   Gomaa H., 2004, Designing Software Product Lines with UML: From Use Cases to PatternBased Software Architectures
   Kang K.C., 2003, DOMAIN ORIENTED SYST, P29
   Kang KC, 2002, IEEE SOFTWARE, V19, P58, DOI 10.1109/MS.2002.1020288
   Kang Kyo C, 1990, Technical Report
   KRAMER J, 2000, SOFTWARE ARCHITECTUR, P31
   KRUEGER C, 2003, IEEE SOFTWARE    JUL, P29
   Leveson N.G., 1995, Safeware: System Safety and Computers
   Meyer B, 2001, COMPUTER, V34, P92, DOI 10.1109/2.940017
   STROUSTRUP B, 1996, P 4 INT C SOFTW REUS
   Tracz W., 1995, SIGSOFT Software Engineering Notes, V20, P49, DOI 10.1145/219308.219318
   van Ommering R, 2000, COMPUTER, V33, P78, DOI 10.1109/2.825699
   Weiss D.M., 1999, Software Product-Line Engineering-A Family-Based Software Development Process
NR 18
TC 315
Z9 357
U1 0
U2 38
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUL
PY 2005
VL 31
IS 7
BP 529
EP 536
DI 10.1109/TSE.2005.85
PG 8
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Engineering
GA 951EW
UT WOS:000230912900001
DA 2024-07-18
ER

PT J
AU Dinh-Trong, TT
   Bieman, JM
AF Dinh-Trong, TT
   Bieman, JM
TI The FreeBSD project: A replication case study of open source development
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article; Proceedings Paper
CT Workshop on Mining Software Repositories held in conjunction with the
   27th International Conference on Software Engineering (ICSE)
CY MAY 17, 2005
CL St Louis, MO
DE software engineering process; process measurement; qualitative process
   analysis; testing and debugging; reliability; maintenance process;
   maintainability; open source software; measurement; defect density; code
   ownership; FreeBSD
ID OPEN SOURCE SOFTWARE
AB Case studies can help to validate claims that open source software development produces higher quality software at lower cost than traditional commercial development. One problem inherent in case studies is external validity-we do not know whether or not results from one case study apply to another development project. We gain or lose confidence in case study results when similar case studies are conducted on other projects. This case study of the FreeBSD project, a long-lived open source project, provides further understanding of open source development. The paper details a method for mining repositories and querying project participants to retrieve key process information. The FreeBSD development process is fairly well-defined with proscribed methods for determining developer responsibilities, dealing with enhancements and defects, and managing releases. Compared to the Apache project, FreeBSD uses 1) a smaller set of core developers-developers who control the code base-that implement a smaller percentage of the system, 2) a larger set of top developers to implement 80 percent of the system, and 3) a more well-defined testing process. FreeBSD and Apache have a similar ratio of core developers to people involved in adapting and debugging the system and people who report problems. Both systems have similar defect densities and the developers are also users in both systems.
C1 Colorado State Univ, Dept Comp Sci, Software Assurance Lab, Ft Collins, CO 80523 USA.
C3 Colorado State University
RP Colorado State Univ, Dept Comp Sci, Software Assurance Lab, Ft Collins, CO 80523 USA.
EM trungdt@cs.colostate.edu; bieman@cs.colostate.edu
CR [Anonymous], 1997, Software metrics: A rigorous and practical approach
   Cooke D, 1999, COMPUTER, V32, P58, DOI 10.1109/MC.1999.762801
   Dinh-Trong T, 2004, 10TH INTERNATIONAL SYMPOSIUM ON SOFTWARE METRICS, PROCEEDINGS, P96, DOI 10.1109/METRIC.2004.1357894
   Feller J., 2001, ACM SIGSOFT Software Engineering Notes, V26, P51
   FELLER J, 2002, P 24 INT C SOFTW ENG, P669
   Fitzgerald B, 2004, IEEE SOFTWARE, V21, P50, DOI 10.1109/MS.2004.1259216
   Fogel K., 1999, OPEN SOURCE DEV CVS
   *FREE BSD PROJ, 2003, FREEBSD VERS 5 0 COM
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   *GNATS GNU PROJ, 2003, GNATS VERS 4 0
   Godfrey MW, 2000, PROC IEEE INT CONF S, P131, DOI 10.1109/ICSM.2000.883030
   Harris JS, 2004, IEEE SOFTWARE, V21, P42, DOI 10.1109/MS.2004.1259211
   Kerlinger F.N., 1986, FDN BEHAV RES, V3rd
   Krantz D. H., 1971, Foundations of Measurement, V1
   LAWRIE T, 2002, ACM SIGSOFT SOFTWARE, V27, P34, DOI DOI 10.1145/638574.638584
   LONCONSOLE A, 2001, ACM SIGSOFT SOFTWARE, V26, P52
   Lussier S, 2004, IEEE SOFTWARE, V21, P68, DOI 10.1109/MS.2004.1259222
   Messerschmitt DG, 2004, IEEE SOFTWARE, V21, P89, DOI 10.1109/MS.2004.1259234
   Michell J., 1990, INTRO LOGIC PSYCHOL
   Mockus A, 2002, ACM T SOFTW ENG METH, V11, P309, DOI 10.1145/567793.567795
   Nunnally JC, 1978, PSYCHOMETRIC THEORY
   Perkins G, 1999, IEEE SOFTWARE, V16, P80, DOI 10.1109/52.744573
   Raymond ES, 2004, IEEE SOFTWARE, V21, P88, DOI 10.1109/MS.2004.1259228
   Schach S. R., 2002, IEE Proceedings-Software, V149, P18, DOI 10.1049/ip-sen:20020198
   Serrano N, 2004, IEEE SOFTWARE, V21, P56, DOI 10.1109/MS.2004.1259219
   Wilson G, 1999, IEEE SOFTWARE, V16, P23, DOI 10.1109/52.744561
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
   Wu MW, 2001, COMPUTER, V34, P33, DOI 10.1109/2.928619
NR 28
TC 77
Z9 88
U1 1
U2 11
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUN
PY 2005
VL 31
IS 6
BP 481
EP 494
DI 10.1109/TSE.2005.73
PG 14
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Engineering
GA 940AX
UT WOS:000230117200005
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Hsiung, PA
   Lin, SW
   Tseng, CH
   Lee, TY
   Fu, JM
   Bin See, W
AF Hsiung, PA
   Lin, SW
   Tseng, CH
   Lee, TY
   Fu, JM
   Bin See, W
TI VERTAF: An application framework for the design and verification of
   embedded real-time software
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE application framework; code generation; embedded real-time software;
   formal synthesis; formal verification; scheduling; software components;
   UML modeling
AB The growing complexity of embedded real-time software requirements calls for the design of reusable software components, the synthesis and generation of software code, and the automatic guarantee of nonfunctional properties such as performance, time constraints, reliability, and security. Available application frameworks targeted at the automatic design of embedded real-time software are poor in integrating functional and nonfunctional requirements. To bridge this gap, we reveal the design flow and the internal architecture of a newly proposed framework called Verifiable Embedded Real-Time Application Framework (VERTAF), which integrates software component-based reuse, formal synthesis, and formal verification. A formal UML-based embedded real-time object model is proposed for component reuse. Formal synthesis employs quasi-static and quasi-dynamic scheduling with automatic generation of multilayer portable efficient code. Formal verification integrates a model checker kernel from SGM, by adapting it for embedded software. The proposed architecture for VERTAF is component-based and allows plug-and-play for the scheduler and the verifier. Using VERTAF to develop application examples significantly reduced design effort and illustrated how high-level reuse of software components combined with automatic synthesis and verification can increase design productivity.
C1 Natl Chung Cheng Univ, Dept Comp Sci & Informat Engn, Chiayi 621, Taiwan.
   Natl Taipei Univ Technol, Dept Elect Engn, Taipei 10608, Taiwan.
   Cheng Shiu Univ, Dept Elect Engn, Niaosong 833, Kaohsiung Cty, Taiwan.
   Aerosp Ind Dev Corp, Taichung 407, Taiwan.
C3 National Chung Cheng University; National Taipei University of
   Technology; Cheng Shiu University
RP Natl Chung Cheng Univ, Dept Comp Sci & Informat Engn, 160 San Hsing,Min Hsiung, Chiayi 621, Taiwan.
EM hpa@computer.org; lsw92@cs.ccu.edu.tw; tch92@cs.ccu.edu.tw;
   tylee@ntut.edu.tw; marsfuh@csu.edu.tw; winbinsee@ms.aidc.com.tw
RI Lin, Shang-Wei/D-9749-2017; Hsiung, Pao-Ann/B-1293-2011
OI Hsiung, Pao-Ann/0000-0002-3639-1467; Lin, Shang-Wei/0000-0002-9726-3434
CR ACHAUER B, 1996, ACM OOPS MESSENGER, V7, P21
   ALUR R, 1994, THEOR COMPUT SCI, V126, P183, DOI 10.1016/0304-3975(94)90010-8
   Amnell T., 2003, P 1 INT WORKSH FORM
   [Anonymous], 2000, P 7 SAS
   [Anonymous], 1999, DOING HARD TIME DEV
   BANNISTER JA, 1983, ACTA INFORM, V20, P261, DOI 10.1007/BF01257086
   Bernardi S., 2002, PROC 3 INT WORKSHOP, P35
   Bollella Greg., 2000, REAL TIME SPECIFICAT
   Brown JE, 1996, EPIDEMIOLOGY, V7, P62, DOI 10.1097/00001648-199601000-00011
   CHOI Y, 2001, P 8 EUR SOFTW ENG C
   Clarke EM, 1999, MODEL CHECKING, P1
   CLARKE EM, 1981, P LOG PROGR WORKSH
   DAMMAG H, 1999, P 18 IEEE S REL DIST
   DENIZ D, 2003, P INT WORKSH LANG CO, P133
   Elkoutbi M, 1998, PROCEEDINGS OF THE HIGH-PERFORMANCE COMPUTING (HPC'98), P432
   FAYAD ME, 1997, COMM ACM, V40
   FENGLER O, 2004, P 23 IASTED INT C MO
   GERGELEIT M, 1996, ACM OOPS MESSENGER, V7, P51
   GRIMSHAW A, 1989, P IEEE GLOBECOM, P141
   HALBWACHS N, 1991, P IEEE, V79, P1305, DOI 10.1109/5.97300
   HAMMER DK, 1996, ACM OOPS MESSENGER, V7, P78
   Hansson HA, 1996, REAL-TIME SYST, V11, P223, DOI 10.1007/BF00337680
   Heitmeyer C, 1998, LECT NOTES COMPUT SC, V1427, P526, DOI 10.1007/BFb0028775
   HENZINGER T, 1992, P IEEE LOG COMP SCI
   Hsiung PA, 2003, 16TH INTERNATIONAL CONFERENCE ON VLSI DESIGN, PROCEEDINGS, P249, DOI 10.1109/ICVD.2003.1183145
   Hsiung PA, 2000, J SYST ARCHITECT, V46, P1435, DOI 10.1016/S1383-7621(00)00034-5
   Hsiung PA, 1998, TOOLS 27: TECHNOLOGY OF OBJECT-ORIENTED LANGUAGES, PROCEEDINGS, P138, DOI 10.1109/TOOLS.1998.713595
   HSIUNG PA, 2003, P 9 INT C REAL TIM E
   HSIUNG PA, 2003, P 1 ACM IEEE IFIP IN, P114
   ISHIKAWA Y, 1990, SIGPLAN NOTICES, V25, P289, DOI 10.1145/97946.97980
   Kim YH, 2000, J IND ENG CHEM, V6, P72
   KNAPP A, 2002, P 7 INT S FORM TECHN
   Kodase S, 2003, DESIGNERS FORUM: DESIGN, AUTOMATION AND TEST IN EUROPE CONFERENCE AND EXHIBITION, P170
   KUAN T, 1995, P OOPSLA 95 C WORKSH, V18
   Lavazza L., 2001, METHODOLOGY FORMALIZ
   LIAO WS, 2003, P 16 IEEE INT SOC C
   LIU CL, 1973, J ACM, V20, P46, DOI 10.1145/321738.321743
   POTKONJAK M, 1999, ACM T DES AUTOMAT EL, V4, P430
   QUEILLE JP, 1982, P INT S PROGR
   RATNER RS, 1973, COMPUTATIONAL REQUIR, V2
   ROUBTSOVA EE, 2000, ELECT OTES THEORETIC, V39
   RTCA, 1992, DO-178B Software Considerations in Airborne Systems and Equipment Certification
   Rumbaugh J., 1999, UML REFERENCE GUIDE
   Saldhana J., 2000, P INT C SOFTWARE ENG, P103
   Samek M., 2002, PRACTICAL STATECHART
   Schmidt D.C., 1997, HDB PROGRAMMING LANG, V1
   SEE WB, 2000, DOMAIN SPECIFIC APPL, P327
   Selic B., 1996, Proceedings of the 4th International Workshop on Parallel and Distributed Real-Time Systems, P11, DOI 10.1109/WPDRTS.1996.557427
   Selic B., 1994, REAL TIME OBJECT ORI
   Selic B., 1993, P IFIP C HARDW DESCR
   Shen T., 2003, THESIS NATL CHUNG CH
   Stewart DB, 1997, IEEE T SOFTWARE ENG, V23, P759, DOI 10.1109/32.637390
   Su FS, 2002, CODES 2002: PROCEEDINGS OF THE TENTH INTERNATIONAL SYMPOSIUM ON HARDWARE/SOFTWARE CODESIGN, P211, DOI 10.1109/CODES.2002.1003627
   Szyperski C., 2002, Component Software: Beyond Object-Oriented Programming
   THOMPSON JM, 1999, P ACM SIGSOFT FOUND, P163
   Wang F, 2002, IEEE T COMPUT, V51, P61, DOI 10.1109/12.980017
   WANG S, 2002, P INT C EUR URAPID D
   WELCH LR, 1996, ACM OOPS MESSENGER, V7, P70
   ZULKERNINE M, 2001, P 15 INT PAR DISTR P, P1552
NR 59
TC 27
Z9 40
U1 0
U2 5
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD OCT
PY 2004
VL 30
IS 10
BP 656
EP 674
DI 10.1109/TSE.2004.68
PG 19
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 856EV
UT WOS:000224029400003
DA 2024-07-18
ER

PT J
AU Li, P
   Ravindran, B
   Suhaib, S
   Feizabadi, S
AF Li, P
   Ravindran, B
   Suhaib, S
   Feizabadi, S
TI A formally verified application-level framework for real-time scheduling
   on POSIX real-time operating systems
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE real-time scheduling; time/utility functions; utility accrual
   scheduling; Portable Operating System Interface (POSIX); model checking
AB This paper presents a framework, called meta scheduler, for implementing real-time scheduling algorithms. The meta scheduler is a portable middleware layer component designed for implementations over POSIX-compliant operating systems. It accommodates pluggable real-time scheduling algorithms while offering the flexibility of platform independence-the singular underlying OS requirement is the now nearly ubiquitous POSIX compliance. The versatility of pluggable schedulers positions the meta scheduler for deployment in an interoperable heterogeneous real-time environment. We present the design of the meta scheduler and outline its implementation. Furthermore, we present a mechanized correctness verification using the UPPAAL model checker. Prototype implementation of the meta scheduler over QNX Neutrino real-time operating system demonstrates high performance and a small footprint.
C1 Virginia Polytech Inst & State Univ, Real Time Syst Lab, Bradley Dept Elect & Comp Engn, Blacksburg, VA 24061 USA.
C3 Virginia Polytechnic Institute & State University
RP Li, P (corresponding author), Virginia Polytech Inst & State Univ, Real Time Syst Lab, Bradley Dept Elect & Comp Engn, Blacksburg, VA 24061 USA.
EM peli2@vt.edu; binoy@vt.edu; ssuhaib@vt.edu; shahrooz@vt.edu
CR [Anonymous], STTT
   BARRETO LP, 2002, P AOSD WORKSH ASP CO
   Bollella G, 2000, COMPUTER, V33, P47, DOI 10.1109/2.846318
   BUTTAZZO G, 1995, RESPONSIVE COMPUTER, P67
   BUTTAZZO GC, 2004, S HA R K PROJECT
   Chen K, 1996, REAL-TIME SYST, V10, P293, DOI 10.1007/BF00383389
   CHUA H, 1999, P IEEE INT C MULT CO
   Clark R., 1999, Parallel and Distributed Processing. 11th IPPS/SPDP'99 Workshops Held in Conjunction with the 13th International Parallel Processing Symposium and 10th Symposium on Parallel and Distributed Processing. Proceedings, P353
   CLARK RK, 1990, THESIS CARNEGIE MELL
   Deng Z, 1997, EUROMICRO, P191, DOI 10.1109/EMWRTS.1997.613785
   FEIZABADI S, 2003, P WORKSH JAV TECHN R
   *FSMLABS, 1997, RT LIN
   GILL CD, 2001, REAL-TIME SYST, V20, P3
   Goyal P, 1996, PROCEEDINGS OF THE SECOND SYMPOSIUM ON OPERATING SYSTEMS DESIGN AND IMPLEMENTATION (OSDI '96), P107, DOI 10.1145/248155.238766
   HOARE CAR, 1978, COMMUN ACM, V21, P666, DOI 10.1145/359576.359585
   Holzmann GJ, 1997, IEEE T SOFTWARE ENG, V23, P279, DOI 10.1109/32.588521
   HORN WA, 1974, NAV RES LOG, V21, P177, DOI 10.1002/nav.3800210113
   *IEEE OP GROUP, 2001, OP GROUP BAS SPEC IS
   Jensen E. D., 1985, Proceedings of the Real-Time Systems Symposium (Cat. No.85CH2220-2), P112
   Jensen E. D., 1990, Proceedings. IEEE Workshop on Experimental Distributed Systems (Cat. No.90TH0337-6), P35, DOI 10.1109/EDS.1990.138047
   JENSEN ED, DISTRIBUTED REAL TIM
   KOREN G, 1992, REAL-TIME SYSTEMS SYMPOSIUM : PROCEEDINGS, P290, DOI 10.1109/REAL.1992.242650
   KUO TW, 2000, P IEEE RTSS, P256
   Larsen K. G., 1997, International Journal on Software Tools for Technology Transfer, V1, P134, DOI 10.1007/s100090050010
   Leslie IM, 1996, IEEE J SEL AREA COMM, V14, P1280, DOI 10.1109/49.536480
   Li P, 2004, TENTH INTERNATIONAL CONFERENCE ON PARALLEL AND DISTRIBUTED SYSTEMS, PROCEEDINGS, P187
   Li P, 2001, INT SYM PERFORM ANAL, P22
   LIU CL, 1973, J ACM, V20, P46, DOI 10.1145/321738.321743
   LOCKE CD, 1986, THESIS CARNEGIE MELL
   MAYNARD D, 1988, 88121 CMU COMP SCI D
   MERCER C, 1995, P IEEE REAL TIM EMB
   *OBJ MAN GROUP, 1998, REAL TIM CORBA 1 0 J
   OIKAWA S, 1999, P IEEE REAL TIM EMB
   *OP GROUP RES I RE, 1998, MK7 3A REL NOT
   *QNX SOFTW SYST LT, 2002, QNX NEUTR OS VERS 6
   Rajkumar R, 1998, P SPIE ACM C MULT CO
   Regehr J, 2001, 22ND IEEE REAL-TIME SYSTEMS SYMPOSIUM, PROCEEDINGS, P3, DOI 10.1109/REAL.2001.990591
   RIVAS MA, 2000, P EUR C REAL TIM SYS, P67
   Singhal M., 1994, Advanced Concepts in Operating Systems
   STEWART DB, 1991, IEEE INTERNATIONAL CONFERENCE ON SYSTEMS ENGINEERING //, P139, DOI 10.1109/ICSYSE.1991.161098
   Wang JG, 2004, IEEE T PARALL DISTR, V15, P119
   Wang Y.-C., 1999, Proceedings 20th IEEE Real-Time Systems Symposium (Cat. No.99CB37054), P246, DOI 10.1109/REAL.1999.818850
   Wendorf J. W., 1988, Proceedings. Real-Time Systems Symposium (IEEE Cat. No.88CH2618-7), P172, DOI 10.1109/REAL.1988.51113
   *WIND RIV SYST, 2003, VXWORKS 5X
   2001, DYNAMIC SCHEDULING R
NR 45
TC 42
Z9 44
U1 0
U2 10
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD SEP
PY 2004
VL 30
IS 9
BP 613
EP 629
DI 10.1109/TSE.2004.45
PG 17
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 845HM
UT WOS:000223233000005
DA 2024-07-18
ER

PT J
AU Caporuscio, M
   Carzaniga, A
   Wolf, AL
AF Caporuscio, M
   Carzaniga, A
   Wolf, AL
TI Design and evaluation of a support service for mobile, wireless
   publish/subscribe applications
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE publish/subscribe; mobility; wireless networks
AB This paper presents the design and evaluation of a support service for mobile, wireless clients of a distributed publish/subscribe system. A distributed publish/subscribe system is a networked communication infrastructure where messages are published by senders and then delivered to the receivers whose subscriptions match the messages. Communication therefore does not involve the use of explicit addresses, but rather emerges from the dynamic arrangement of publishers and subscribers. Such a communication mechanism is an ideal platform for a variety of internet applications, including multiparty messaging, personal information management, information sharing, online news distribution, service discovery, and electronic auctions. Our goal is to support such applications on mobile, wireless host devices in such a way that the applications can, if they chose, be oblivious to the mobility and intermittent connectivity of their hosts as they move from one publish/subscribe access point to another. In this paper, we describe a generic, value-added service that can be used in conjunction with publish/subscribe systems to achieve these goals. We detail the implementation of the service and present the results of our evaluation of the service in both wireline and emulated wireless environments.
C1 Univ Aquila, Dipartimento Informat, I-67100 Laquila, Italy.
   Univ Colorado, Dept Comp Sci, Boulder, CO 80309 USA.
C3 University of L'Aquila; University of Colorado System; University of
   Colorado Boulder
RP Univ Aquila, Dipartimento Informat, Via Vetoio 1, I-67100 Laquila, Italy.
EM caporusc@di.itnivaq.it; carzanig@cs.colorado.edu; alw@cs.colorado.edu
RI Caporuscio, Mauro/AAB-1320-2021
OI Caporuscio, Mauro/0000-0001-6981-0966
CR *3 GEN PARTN PROJ, 2002, DIG CELL TEL SYST PH
   [Anonymous], P 2003 C APPL TECHN
   [Anonymous], 2001, P 2 ACM INT WORKSH D
   Banavar G, 1999, INT CON DISTR COMP S, P262, DOI 10.1109/ICDCS.1999.776528
   CABRERA LF, 2001, P 8 WORKSH HOT TOP O
   CALHOUN P, 2000, 2794 RFC
   CAPORUSCIO M, 2003, CUCS94403 U COL DEP
   Carzaniga A, 2001, ACM T COMPUT SYST, V19, P332, DOI 10.1145/380749.380767
   CARZANIGA A, 2001, P US NATL SCI FDN WO
   Cugola G, 2001, IEEE T SOFTWARE ENG, V27, P827, DOI 10.1109/32.950318
   FENKAM P, 2002, P 11 IEEE INT WORKSH
   Fuggetta A, 1998, IEEE T SOFTWARE ENG, V24, P342, DOI 10.1109/32.685258
   KOJO M, 2001, P 11 GI ITG C MEAS M
   KOJO M, 2001, SEAWIND V3 0 USER MA
   MEIER R, 2002, P 1 INT WORKSH DISTR
   *OBJ MAN GROUP, 1999, NOT SERV
   Pietzuch PR, 2002, 22ND INTERNATIONAL CONFERENCE ON DISTRIBUTED COMPUTING SYSTEMS WORKSHOP, PROCEEDINGS, P611, DOI 10.1109/ICDCSW.2002.1030837
   Roach A. B., 2002, 3265 RFC
   Schooler E., 2002, 3261 RFC
   Segall B., 1997, P AUSTR UNIX OP SYST, P243
   *SUN MICR INC, 1999, JAV MESS SERV
   *SUN MICR INC, 1998, JAV DISTR EV SPEC
   *TIBCO INC, 1996, TIBR WAN ROUT GLOB D
   Wong D, 1999, COMMUN ACM, V42, P92, DOI 10.1145/295685.295717
NR 24
TC 64
Z9 88
U1 0
U2 5
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD DEC
PY 2003
VL 29
IS 12
BP 1059
EP 1071
DI 10.1109/TSE.2003.1265521
PG 13
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 751PJ
UT WOS:000187075900002
DA 2024-07-18
ER

PT J
AU Alur, R
   Etessami, K
   Yannakakis, M
AF Alur, R
   Etessami, K
   Yannakakis, M
TI Inference of message sequence charts
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE message sequence charts; requirements analysis; formal verification;
   scenarios; concurrent state machines; deadlock freedom; realizability;
   synthesis
AB Software designers draw Message Sequence Charts for early modeling of the individual behaviors they expect from the concurrent system under design. Can they be sure that precisely the behaviors they have described are realizable by some implementation of the components of the concurrent system? If so, can we automatically synthesize concurrent state machines realizing the given MSCs? If, on the other hand, other unspecified and possibly unwanted scenarios are "implied" by their MSCs, can the software designer be automatically warned and provided the implied MSCs? In this paper, we provide a framework in which all these questions are answered positively. We first describe the formal framework within which one can derive implied MSCs and then provide polynomial-time algorithms for implication, realizability, and synthesis.
C1 Univ Penn, Dept Comp & Informat Sci, Philadelphia, PA 19104 USA.
   Univ Edinburgh, Sch Informat, Edinburgh EH9 3JZ, Midlothian, Scotland.
   Stanford Univ, Dept Comp Sci, Stanford, CA 94305 USA.
C3 University of Pennsylvania; University of Edinburgh; Stanford University
RP Univ Penn, Dept Comp & Informat Sci, 609 Levine,200 S 33rd St, Philadelphia, PA 19104 USA.
EM alur@cis.upenn.edu; kousha@inf.ed.nc.uk; mihalis@cs.stanford.edu
CR Alur R., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, P304, DOI 10.1109/ICSE.2000.870421
   Alur R, 1999, LECT NOTES COMPUT SC, V1664, P114
   Alur R, 1996, SOFTWARE-CONC TOOL, V17, P70
   ALUR R, 2003, INFERENCE MESSAGE SE
   ANGLUIN D, 1983, COMPUT SURV, V15, P237, DOI 10.1145/356914.356918
   BENABDALLAH H, 1997, P 2 INT WORKSH TOOLS
   BENABDHALLAH H, 1998, P 4 INT C TOOLS ALG, P118
   BIERMANN AW, 1972, IEEE T COMPUT, VC 21, P592, DOI 10.1109/TC.1972.5009015
   Damm Werner., 1999, PROC 3 IFIP INT C FO, P293
   Diekert V., 1995, BOOK TRACES
   HAREL D, 1999, UNPUB SYNTHESIZING O
   HOLZMANN GJ, 1996, P 6 INT C TOOLS ALG
   Holzwarth JF, 1997, CURR OPIN COLLOID IN, V2, P1, DOI 10.1016/S1359-0294(97)80002-7
   Koskimies K, 1998, IEEE SOFTWARE, V15, P87, DOI 10.1109/52.646888
   KOSKIMIES K, 1994, SOFTWARE PRACT EXPER, V24, P643, DOI 10.1002/spe.4380240704
   KRUGER I, 1999, DISTRIBUTED PARALLEL
   LEUE S, 1998, P 13 IEEE C AUT SOFT
   LOHREY M, 2002, P CONCUR 2002 CONC T
   MAIER D, 1981, J ACM, V28, P680, DOI 10.1145/322276.322280
   MUKUND M, 2000, P CONCUR 2000 CONC T
   Muscholl A., 1998, FDN SOFTWARE SCI COM
   Papadimitriou C., 1986, Theory of Database Concurrency Control
   Rudolph E., 1996, Computer Networks and ISDN Systems-SDL and MSC, V28
   Rumbaugh James, 1999, The unified modeling language reference manual
NR 24
TC 87
Z9 97
U1 0
U2 4
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUL
PY 2003
VL 29
IS 7
BP 623
EP 633
DI 10.1109/TSE.2003.1214326
PG 11
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 698HG
UT WOS:000183992500004
DA 2024-07-18
ER

PT J
AU Vitharana, P
   Zahedi, F
   Jain, H
AF Vitharana, P
   Zahedi, F
   Jain, H
TI Knowledge-based repository scheme for storing and retrieving business
   components: A theoretical design and an empirical analysis
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE business component; software reuse; software library; component
   repository; empirical study
ID SOFTWARE; CLASSIFICATION; REUSE
AB Component-based development (CDB) promises to reduce complexity and cost of software development and maintenance through reuse. For CBD to be successful, a vibrant market for commercial business components is essential. One of the key requirements of an active market for business components is an effective scheme for classifying and describing them at various levels of detail, as well as a corresponding repository for storing and retrieving these components. Such a scheme needs to support various constituents such as business users, managers, and application assemblers. The scheme and repository should help users and managers to select components that match their requirements and aid application assemblers in identifying components most compatible with their deployment environment (such as the platform) and system inputs (such as data types). Drawing from the concepts of group technology and software reuse paradigm, this paper proposes a scheme for classifying and describing business components and the design of a knowledge-based repository for their storage and retrieval. The proposed scheme is implemented in a prototype repository. The effectiveness of the prototype and the underlying classification and coding scheme is assessed empirically through controlled experiments. Results support the assertion that the scheme is effective in enhancing the users' and analysts' ability to find the needed business components.
C1 Syracuse Univ, Sch Management, Syracuse, NY 13244 USA.
   Univ Wisconsin, Sch Business Adm, Milwaukee, WI 53201 USA.
C3 Syracuse University; University of Wisconsin System; University of
   Wisconsin Milwaukee
RP Syracuse Univ, Sch Management, Suite 400, Syracuse, NY 13244 USA.
EM padmal@syr.edu; zahedi@uwm.edu; jain@uwm.edu
RI Jain, Hemant/A-9340-2009
CR Allen Paul., 1998, Component-based development for enterprise systems: Applying the SE- LECT Perspective
   [Anonymous], 1997, Software engineering with reusable components
   Atkinson Colin., 2002, COMPONENT BASED PROD
   BAKER S, 1997, CORBA DISTRIBUTED OB
   BANKER RD, 1991, MIS QUART, V15, P375, DOI 10.2307/249649
   BILLO RE, 1995, IIE TRANS, V27, P542, DOI 10.1080/07408179508936770
   Blaha M., 1998, Object-Oriented Modeling and Design for Database Applications
   BRAUN C, 1999, P 5 S SOFTW REUS, P31
   BROWN W, 2000, LARGE SCALE COMPONEN
   BURTON BA, 1987, IEEE SOFTWARE, V4, P25, DOI 10.1109/MS.1987.231060
   Damiani E, 1999, ACM T SOFTW ENG METH, V8, P425, DOI 10.1145/322993.322997
   FRAKES WB, 1994, IEEE T SOFTWARE ENG, V20, P617, DOI 10.1109/32.310671
   GATES L, 2001, APPL DEV TRENDS  DEC
   Herzum P., 2000, BUSINESS COMPONENT F
   Hosmer D W., 2004, Applied Logistic Regression
   Isakowitz T, 1996, IEEE T SOFTWARE ENG, V22, P407, DOI 10.1109/32.508314
   MELING R, 2000, P AUSTR SOFTW ENG C
   Mili A, 1998, ANN SOFTW ENG, V5, P349, DOI 10.1023/A:1018964121953
   Mili R, 1997, IEEE T SOFTWARE ENG, V23, P445, DOI 10.1109/32.605762
   MOUGIN P, 2001, WEB SERVICES BUSINES
   Podgurski A., 1993, ACM Transactions on Software Engineering and Methodology, V2, P286, DOI 10.1145/152388.152392
   PRIETODIAZ R, 1991, COMMUN ACM, V34, P88, DOI 10.1145/103167.103176
   PRIETODIAZ R, 1987, IEEE SOFTWARE, V4, P6, DOI 10.1109/MS.1987.229789
   PRIETODIAZ R, 1985, THESIS U CALIFORNIA
   Ranganathan S.R., 1967, Prolegomena to Library Classification
   Snead C., 1989, GROUP TECHNOLOGY
   Szyperski C., 2002, COMPONENT SOFTWARE, V2nd
   VICKERY B.C., 1960, FACETED CLASSIFICATI
   VITHARANA P, IN PRESS COMM ACM
   Wallnau K., 2002, Building systems from commercial components
   Weyuker EJ, 1998, IEEE SOFTWARE, V15, P54, DOI 10.1109/52.714817
NR 31
TC 37
Z9 47
U1 1
U2 9
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUL
PY 2003
VL 29
IS 7
BP 649
EP 664
DI 10.1109/TSE.2003.1214328
PG 16
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 698HG
UT WOS:000183992500006
DA 2024-07-18
ER

PT J
AU Bobbio, A
   Franceschinis, G
   Gaeta, R
   Portinale, L
AF Bobbio, A
   Franceschinis, G
   Gaeta, R
   Portinale, L
TI Parametric fault tree for the dependability analysis of redundant
   systems and its high-level Petri Net semantics
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE dependability analysis; parametric fault tree; stochastic well-formed
   nets
ID ALGORITHM
AB In order to cope efficiently with the dependability analysis of redundant systems with replicated units, anew, more compact fault-tree formalism, called Parametric Fault Tree (PFT), is defined. In a PFT formalism, replicated units are folded and indexed so that only one representative of the similar replicas is included in the model. From the PFT, a list of parametric cut sets can be derived, where only the relevant patterns leading to the system failure are evidenced regardless of the actual identity of the component in the cut set. The paper provides an algorithm to convert a PFT into a class of High-Level Petri Nets, called SWN. The purpose of this conversion is twofold: to exploit the modeling power and flexibility of the SWN formalism, allowing the analyst to include statistical dependencies that could not have been accommodated into the corresponding PFT and to exploit the capability of the SWN formalism to generate a lumped Markov chain, thus alleviating the state explosion problem. The search for the minimal cut sets (qualitative analysis) can be often performed by a structural T-invariant analysis on the generated SWN. The advantages that can be obtained from the translation of a PFT into a SWN are investigated considering a fault-tolerant multiprocessor system example.
C1 Univ Piemonte Orientale, Dipartimento Informat, Alessandria, Italy.
   Univ Turin, Dipartimento Informat, I-10149 Turin, Italy.
C3 University of Eastern Piedmont Amedeo Avogadro; University of Turin
RP Univ Piemonte Orientale, Dipartimento Informat, Alessandria, Italy.
EM bobbio@unipmn.it; giuliana@unipmn.it; rossano@di.unito.it;
   portinal@unipmn.it
RI GAETA, Rossano/C-6256-2011
OI GAETA, Rossano/0000-0002-6521-403X; BOBBIO, Andrea/0000-0002-6690-3961
CR Anand A., 1998, Annual Reliability and Maintainability Symposium 1998 Proceedings. International Symposium on Product Quality and Integrity (Cat. No.98CH36161), P69, DOI 10.1109/RAMS.1998.653591
   [Anonymous], 1995, MODELLING GEN STOCHA
   Barlow R., 1981, STAT THEORY RELIABIL
   BERTHELOT G, 1987, ADV PETRI NETS, V86, P359
   BERTHELOT G, 1986, ADV PETRI NETS, V85, P19
   BERTONCELLO C, 2001, PFT2SWN MANUAL
   Bobbio A., 1999, Proceedings 8th International Workshop on Petri Nets and Performance Models (Cat. No.PR00331), P146, DOI 10.1109/PNPM.1999.796561
   BOBBIO A, 2002, P SAFECOMP 2002 C SE
   Carrasco JA, 1999, IEEE T RELIAB, V48, P31, DOI 10.1109/24.765925
   Chiola G., 1991, Proceedings of the Fourth International Workshop on Petri Nets and Performance Models (PNPM91) (Cat. No.91TH0386-3), P144, DOI 10.1109/PNPM.1991.238773
   CHIOLA G, 1995, PERFORM EVALUATION, V24, P47, DOI 10.1016/0166-5316(95)00008-L
   CHIOLA G, 1993, IEEE T COMPUT, V42, P1343, DOI 10.1109/12.247838
   Dugan JB, 2000, IEEE T RELIAB, V49, P49, DOI 10.1109/24.855536
   DUGAN JB, 1993, RELIAB ENG SYST SAFE, V39, P291, DOI 10.1016/0951-8320(93)90005-J
   Dutuit Y, 1996, IEEE T RELIAB, V45, P422, DOI 10.1109/24.537011
   FRANCESCHINIS G, 2002, P 2 WORKSH MOD OBJ C
   Gaeta R, 2001, INT WORKSH PETRI NET, P29, DOI 10.1109/PNPM.2001.953353
   GENRICH HJ, 1990, P ADV PETR NETS, P179
   HADDAD S, 1987, LNCS, V266
   HADDAD S, 1988, P 9 EUR WORKSH APPL
   Henley E.J., 1981, RELIABILITY ENG RISK
   HURA GS, 1988, IEEE T RELIAB, V37, P469, DOI 10.1109/24.9864
   LEE WS, 1985, IEEE T RELIAB, V34, P194, DOI 10.1109/TR.1985.5222114
   Leveson N.G., 1995, Safeware: System Safety and Computers
   MALHOTRA M, 1995, IEEE T RELIAB, V44, P428, DOI 10.1109/24.406578
   Manian R, 1999, P A REL MAI, P105, DOI 10.1109/RAMS.1999.744104
   MARSAN MA, 1997, NETWORK PERFORMANCE
   PETERKA G, 1989, IEEE T SOFTWARE ENG, V15, P209, DOI 10.1109/32.21746
   Portinale L., 1993, Applications and Theory of Petri Nets 1993. 14th International Conference Proceedings, P339
   Schneeweiss W.G., 1999, FAULT TREE METHOD
   SILVERMAN M, 1986, P 12 INT C ALL CLIN, P457
NR 31
TC 40
Z9 43
U1 0
U2 9
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAR
PY 2003
VL 29
IS 3
BP 270
EP 287
DI 10.1109/TSE.2003.1183940
PG 18
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 651QH
UT WOS:000181331700007
DA 2024-07-18
ER

PT J
AU Meunier, QL
   Pons, E
   Heydemann, K
AF Meunier, Quentin L.
   Pons, Etienne
   Heydemann, Karine
TI LeakageVerif: Efficient and Scalable Formal Verification of Leakage in
   Symbolic Expressions
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Application security; computer security; crypt ography; industry
   applications; security; side-channel attacks
ID MASKING
AB Side-channel attacks are a powerful class of attacks targeting cryptographic devices. Masking is a popular protection technique to thwart such attacks as it can be theoretically proven secure. However, correctly implementing masking schemes is a non-trivial task and error-prone. If several techniques have been proposed to formally verify masked implementations, they all come with limitations regarding expressiveness, scalability or accuracy. In this work, we propose a symbolic approach, based on a variant of the classical substitution method, for formally verifying arithmetic and boolean masked programs. This approach is more accurate and scalable than existing approaches thanks to a careful design and implementation of key heuristics, algorithms and data structures involved in the verification process. We present all the details of this approach and the open-source tool called LeakageVerif which implements it as a python library, and which offers constructions for symbolic expressions and functions for their verification. We compare LeakageVerif to three existing state-of-the-art tools on a set of 46 masked programs, and we show that it has very good scalability and accuracy results while providing all the necessary constructs for describing algorithmic to assembly masking schemes. Finally, we also provide the set of 46 benchmarks, named MaskedVerifBenchs and written for comparing the different verification tools, in the hope that they will be useful to the community for future comparisons.
C1 [Meunier, Quentin L.; Pons, Etienne; Heydemann, Karine] Sorbonne Univ, CNRS, LIP6, Lab Informat Paris 6, F-75005 Paris, France.
C3 Sorbonne Universite; Centre National de la Recherche Scientifique (CNRS)
RP Meunier, QL (corresponding author), Sorbonne Univ, CNRS, LIP6, Lab Informat Paris 6, F-75005 Paris, France.
EM quentin.meunier@lip6.fr; etienne.pons@lip6.fr; karine.heydemann@lip6.fr
CR [Anonymous], 2014, P 20 INT C TOOLS ALG
   Barthe Gilles, 2014, Foundations of Security Analysis and Design VII. FOSAD 2012/2013 Tutorial Lectures: LNCS 8604, P146, DOI 10.1007/978-3-319-10082-1_6
   Barthe G., 2018, CRYPTOLOGY EPRINT AR
   Barthe G, 2019, LECT NOTES COMPUT SC, V11735, P300, DOI 10.1007/978-3-030-29959-0_15
   Barthe G, 2015, LECT NOTES COMPUT SC, V9056, P457, DOI 10.1007/978-3-662-46800-5_18
   Ben El Ouahma I, 2019, J CRYPTOGR ENG, V9, P231, DOI 10.1007/s13389-019-00205-7
   Ben El Ouahma Ines, 2017, P 6 INT WORKSH SEC P, V49, P17, DOI [10.29007/hhnf, DOI 10.29007/HHNF]
   Coron JS, 2017, LECT NOTES COMPUT SC, V10529, P93, DOI 10.1007/978-3-319-66787-4_5
   Coron JS, 2014, LECT NOTES COMPUT SC, V8424, P410, DOI 10.1007/978-3-662-43933-3_21
   Coron JS, 2014, LECT NOTES COMPUT SC, V8731, P188, DOI 10.1007/978-3-662-44709-3_11
   Coron JS, 2014, LECT NOTES COMPUT SC, V8441, P441, DOI 10.1007/978-3-642-55220-5_25
   de Moura L, 2008, LECT NOTES COMPUT SC, V4963, P337, DOI 10.1007/978-3-540-78800-3_24
   Eldib H., 2014, ACM IEEE DES AUT C, P1, DOI DOI 10.1145/2593069.2593193
   Eldib H, 2015, IEEE T COMPUT AID D, V34, P1558, DOI 10.1109/TCAD.2015.2424951
   Gao PF, 2022, IEEE T SOFTWARE ENG, V48, P973, DOI 10.1109/TSE.2020.3008852
   Gao PF, 2019, ACM T SOFTW ENG METH, V28, DOI 10.1145/3330392
   Gao PF, 2019, LECT NOTES COMPUT SC, V11427, P155, DOI 10.1007/978-3-030-17462-0_9
   Goubin L., 2001, Cryptographic Hardware and Embedded Systems - CHES 2001. Third International Workshop. Proceedings (Lecture Notes in Computer Science Vol.2162), P3
   Gro H., 2016, IACR Cryptol. ePrint Arch, P486
   Herbst C, 2006, LECT NOTES COMPUT SC, V3989, P239
   Ishai Y, 2003, LECT NOTES COMPUT SC, V2729, P463, DOI 10.1007/978-3-540-45146-4_27
   Jungk Bernhard, 2018, IACR Transactions on Cryptographic Hardware and Embedded Systems 2018, V2018, P627
   Kocher P., 1999, Advances in Cryptology - CRYPTO'99. 19th Annual International Cryptology Conference. Proceedings, P388
   Mangard S, 2008, POWER ANAL ATTACKS R
   Meunier Quentin L., 2020, P INT WORKSH SEC PRO
   Nikova S, 2006, LECT NOTES COMPUT SC, V4307, P529
   Reparaz O, 2015, LECT NOTES COMPUT SC, V9215, P764, DOI 10.1007/978-3-662-47989-6_37
   Rivain M, 2010, LECT NOTES COMPUT SC, V6225, P413, DOI 10.1007/978-3-642-15031-9_28
   Yao Y, 2018, PROCEEDINGS OF THE 2018 IEEE INTERNATIONAL SYMPOSIUM ON HARDWARE ORIENTED SECURITY AND TRUST (HOST), P57, DOI 10.1109/HST.2018.8383891
   Zhang J, 2018, LECT NOTES COMPUT SC, V10982, P157, DOI 10.1007/978-3-319-96142-2_12
NR 30
TC 0
Z9 0
U1 0
U2 1
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUN 1
PY 2023
VL 49
IS 6
BP 3359
EP 3375
DI 10.1109/TSE.2023.3252671
PG 17
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA J9KW5
UT WOS:001012752300002
DA 2024-07-18
ER

PT J
AU Tan, X
   Zhou, MH
   Zhang, L
AF Tan, Xin
   Zhou, Minghui
   Zhang, Li
TI Understanding Mentors' Engagement in OSS Communities via Google Summer
   of Code
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Codes; Mentoring; Organizations; Taxonomy; Internet; Encoding; Task
   analysis; Mentor; mentoring process; newcomer onboarding; open source
   communities; summer of code; taxonomy
ID SELF-DETERMINATION THEORY; SOFTWARE DEVELOPERS; MOTIVATION;
   COMMUNICATION; CONTRIBUTORS; NEWCOMERS; BARRIERS; SHAPE
AB A constant influx of newcomers is essential for the sustainability and success of open source software (OSS) projects. However, successful onboarding is always challenging because newcomers face various initial contributing barriers. To support newcomer onboarding, OSS communities widely adopt the mentoring approach. Despite its significance, previous mentoring studies tend to focus on the newcomer's perspective, leaving the mentor's perspective relatively under-studied. To better support mentoring, we study the popular Google Summer of Code (GSoC). It is a well-established global program that offers stipends and mentors to students aiming to bring more student developers into OSS development. We combine online data analysis, an email survey, and semi-structured interviews with the GSoC mentors to understand their motivations, challenges, strategies, and gains. We propose a taxonomy of GSoC mentors' engagement with four themes, ten categories, 34 sub-categories, and 118 codes, as well as the mentors' attitudes toward the codes. In particular, we find that mentors participating in GSoC are primarily intrinsically motivated, and some new motivators emerge adapting to the contemporary challenges, e.g., sustainability and advertisement of projects. Forty-one challenges and 52 strategies associated with the program timeline are identified, most of which are first time revealed. Although almost all the challenges are agreed upon by specific mentors, some mentors believe that several challenges are reasonable and even have a positive effect. For example, the cognitive differences between mentors and mentees can stimulate new perspectives. Most of the mentors agreed that they had adopted these strategies during the mentoring process, but a few strategies recommended by the GSoC administration were not agreed upon. Self-satisfaction, different skills, and peer recognition are the main gains of mentors to participate in GSoC. Eventually, we discuss practical implications for mentors, students, OSS communities, GSoC programs, and researchers.
C1 [Tan, Xin; Zhang, Li] Beihang Univ, Sch Comp Sci & Engn, State Key Lab Software Dev Environm, Beijing 100191, Peoples R China.
   [Zhou, Minghui] Peking Univ, Sch Comp Sci & Engn, Beijing 100871, Peoples R China.
C3 Beihang University; Peking University
RP Zhang, L (corresponding author), Beihang Univ, Sch Comp Sci & Engn, State Key Lab Software Dev Environm, Beijing 100191, Peoples R China.
EM xintan@buaa.edu.cn; zhmh@pku.edu.cn; lily@buaa.edu.cn
OI Tan, Xin/0000-0003-1099-3336; Zhou, Minghui/0000-0001-6324-3964; Zhang,
   Li/0000-0002-2258-5893
FU National Natural Science Foundation of China [62202022, 62141209,
   61825201]; State Key Laboratory of Software Development Environment
   [SKLSDE-2022ZX-08]
FX This work was supported in part by the National Natural
   ScienceFoundation of China under Grants 62202022, 62141209, and
   61825201, and inpart by Self-determined Research Funds of the State Key
   Laboratory of SoftwareDevelopment Environment under Grant
   SKLSDE-2022ZX-08. Recommendedfor acceptance by R. Hoda.
CR Alderman M.K., 2013, MOTIVATION ACHIEVEME
   Allaho Mohammad Y., 2013, 2013 IEEE/ACM International Conference on Advances in Social Networks Analysis and Mining (ASONAM), P56
   [Anonymous], 2011, Proceedings of the 2011 44th Hawaii International Conference on System Sciences", HICSS'11, DOI [DOI 10.1109/HICSS.2011.264, 10.1109/HICSS.2011.264]
   Balali S, 2020, PROCEEDINGS OF THE 16TH INTERNATIONAL SYMPOSIUM ON OPEN COLLABORATION (OPENSYM), DOI 10.1145/3412569.3412571
   Balali S, 2018, COMPUT SUPP COOP W J, V27, P679, DOI 10.1007/s10606-018-9310-8
   Baltes S, 2016, ESEM'16: PROCEEDINGS OF THE 10TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, DOI 10.1145/2961111.2962628
   Bayati S, 2019, 2019 IEEE/ACM 12TH INTERNATIONAL WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING (CHASE 2019), P49, DOI 10.1109/CHASE.2019.00020
   Begel Andrew, 2008, P 4 INT WORKSH COMP, P3, DOI [DOI 10.1145/RESEARCH(ICER'1404520.1404522, 10.1145/Research(ICER'1404520.1404522]
   Bosu A, 2019, EMPIR SOFTW ENG, V24, P2636, DOI 10.1007/s10664-019-09708-7
   Burgess T.F., 2001, GEN INTRO DESIGN QUE
   Canfora G., 2012, P ACM SIGSOFT 20 INT, P1
   Canto S, 2013, RECALL, V25, P105, DOI 10.1017/S0958344012000274
   Casalnuovo C, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P817, DOI 10.1145/2786805.2786854
   Cruzes DS, 2011, INT SYMP EMP SOFTWAR, P275, DOI 10.1109/ESEM.2011.36
   DECI EL, 1987, J PERS SOC PSYCHOL, V53, P1024, DOI 10.1037/0022-3514.53.6.1024
   Ducheneaut N., 2005, Computer Supported Cooperative Work: The Journal of Collaborative Computing, V14, P323, DOI 10.1007/s10606-005-9000-1
   Fagerholm Fabian, 2014, P 8 ACM IEEE INT S E, DOI DOI 10.1145/2652524.2652540
   Feller J., 2002, Understanding Open Source Software development
   Foucault M, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P829, DOI 10.1145/2786805.2786870
   Frey BS, 1997, INT J IND ORGAN, V15, P427, DOI 10.1016/S0167-7187(96)01028-4
   Gagné M, 2005, J ORGAN BEHAV, V26, P331, DOI 10.1002/job.322
   Galletta A., 2013, MASTERING SEMISTRUCT, DOI DOI 10.18574/NYU/9780814732939.001.0001
   Gerosa M, 2021, PROC INT CONF SOFTW, P1046, DOI 10.1109/ICSE43902.2021.00098
   Gold NE, 2020, IEEE WORK CONF MIN S, P265, DOI 10.1145/3379597.3387462
   Hannebauer Christoph., 2014, Proceedings of the 1st International Workshop on CrowdSourcing in Software Engineering, CSI-SE 2014, P11
   Hars A, 2002, INT J ELECTRON COMM, V6, P25
   Heckman J.J., 1990, ECONOMETRICS, P201, DOI [DOI 10.1007/978-1-349-20570-7_29, 10.1007/978-1-349-20570-7_29]
   Hertel G, 2003, RES POLICY, V32, P1159, DOI 10.1016/S0048-7333(03)00047-7
   Krishnamurthy R, 2016, ACM TRANS MANAG INF, V6, DOI 10.1145/2820618
   Lakhani K., 2005, PERSPECTIVES FREE OP
   Lee A, 2017, PROC INT CONF SOFTW, P187, DOI 10.1109/ICSE.2017.25
   Leung W.C., 2001, BMG, V322, P1
   Levine SS, 2014, ORGAN SCI, V25, P1414, DOI 10.1287/orsc.2013.0872
   Martin AJ, 2009, REV EDUC RES, V79, P327, DOI 10.3102/0034654308325583
   Mendez C, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1004, DOI 10.1145/3180155.3180241
   Mota J. S., 2021, ANAIS COMPUT BEACH, V12, P117
   Musicant David R, 2011, P 7 INT S WIK OP C W, P173, DOI DOI 10.1145/2038558.2038586
   Nakakoji K, 2010, COLLABORATIVE SOFTWARE ENGINEERING, P219, DOI 10.1007/978-3-642-10294-3_11
   Narayan S, 2017, CSCW'17: PROCEEDINGS OF THE 2017 ACM CONFERENCE ON COMPUTER SUPPORTED COOPERATIVE WORK AND SOCIAL COMPUTING, P1785, DOI 10.1145/2998181.2998307
   Opengart R, 2015, HUM RESOUR DEV REV, V14, P234, DOI 10.1177/1534484315598434
   Padala HS, 2022, IEEE T SOFTWARE ENG, V48, P241, DOI 10.1109/TSE.2020.2984173
   Petrillo F., 2011, IHC+ CLIHC, P358, DOI [10.5555/2254436.2254496, DOI 10.5555/2254436.2254496]
   Pierre J., 2019, PROC ACM HUM COMPUT, V3, P1
   Qiu HS, 2019, PROC INT CONF SOFTW, P688, DOI 10.1109/ICSE.2019.00078
   Raymond Eric, 1999, KNOWLEDGE TECHNOLOGY, V12, P23, DOI DOI 10.1007/S12130-999-1026-0
   Roberts JA, 2006, MANAGE SCI, V52, P984, DOI 10.1287/mnsc.1060.0554
   Rolandsson B., 2009, P INT C ORG LEARN KN, P1
   Ryan RM, 2000, AM PSYCHOL, V55, P68, DOI 10.1037/0003-066X.55.1.68
   Scacchi W., 2007, PAPER PRESENTED EURO, P459, DOI [DOI 10.1145/1287624.1287689, 10.1145/1287624.1287689.]
   Shah SK, 2006, MANAGE SCI, V52, P1000, DOI 10.1287/mnsc.1060.0553
   Silva J, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P421, DOI 10.1145/3368089.3409724
   Silva JO, 2020, J SYST SOFTWARE, V162, DOI 10.1016/j.jss.2019.110487
   Silva JO, 2017, XXXI BRAZILIAN SYMPOSIUM ON SOFTWARE ENGINEERING (SBES 2017), P224, DOI 10.1145/3131151.3131156
   Silva JO, 2017, PROC IEEE INT CONF S, P69, DOI 10.1109/ICSME.2017.81
   Simpson R, 2017, CONF SOFTW ENG EDUC, P87, DOI 10.1109/CSEET.2017.23
   Smith E, 2013, 2013 6TH INTERNATIONAL WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING (CHASE), P89, DOI 10.1109/CHASE.2013.6614738
   Spencer D., 2009, CARD SORTING DESIGNI
   Steinmacher I, 2021, J INTERNET SERV APPL, V12, DOI 10.1186/s13174-021-00140-z
   Steinmacher I, 2015, PROCEEDINGS OF THE 2015 ACM INTERNATIONAL CONFERENCE ON COMPUTER-SUPPORTED COOPERATIVE WORK AND SOCIAL COMPUTING (CSCW'15), P1379, DOI 10.1145/2675133.2675215
   Steinmacher I, 2015, INFORM SOFTWARE TECH, V59, P67, DOI 10.1016/j.infsof.2014.11.001
   Storey MA, 2017, IEEE T SOFTWARE ENG, V43, P185, DOI 10.1109/TSE.2016.2584053
   Tan X, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P398, DOI 10.1145/3368089.3409746
   Thabane L, 2010, BMC MED RES METHODOL, V10, DOI 10.1186/1471-2288-10-1
   Tomprou Maria, 2019, P CHI C HUM FACT COM, P1
   Trainer E.H., 2014, P 18 INT C SUPP GROU, P111, DOI DOI 10.1145/2660398.2660420
   von Krogh G, 2012, MIS QUART, V36, P649
   Wertsch J.W., 1984, NEW DIRECTIONS CHILD, P7, DOI [10.1002/cd.23219842303, DOI 10.1002/CD.23219842303]
   Xiao WX, 2022, PROC INT CONF SOFTW, P1830, DOI 10.1145/3510003.3510196
   Xin Tan, 2019, Proceedings of the ACM on Human-Computer Interaction, V3, DOI 10.1145/3359210
   Ye YW, 2003, PROC INT CONF SOFTW, P419
   Zhou MH, 2012, PROC INT CONF SOFTW, P518, DOI 10.1109/ICSE.2012.6227164
   Zimmermann T, 2016, PERSPECTIVES ON DATA SCIENCE FOR SOFTWARE ENGINEERING, P137
NR 72
TC 2
Z9 2
U1 2
U2 6
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAY 1
PY 2023
VL 49
IS 5
BP 3106
EP 3130
DI 10.1109/TSE.2023.3242415
PG 25
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA G8MH8
UT WOS:000991628700005
DA 2024-07-18
ER

PT J
AU Wang, Y
   Sun, P
   Pei, L
   Yu, Y
   Xu, C
   Cheung, SC
   Yu, H
   Zhu, ZL
AF Wang, Ying
   Sun, Peng
   Pei, Lin
   Yu, Yue
   Xu, Chang
   Cheung, Shing-Chi
   Yu, Hai
   Zhu, Zhiliang
TI Plumber: Boosting the Propagation of Vulnerability Fixes in the
   <i>npm</i> Ecosystem
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Empirical study; npm ecosystem; vulnerable dependencies
AB Vulnerabilities are known reported security threats that affect a large amount of packages in the npm ecosystem. To mitigate these security threats, the open-source community strongly suggests vulnerable packages to timely publish vulnerability fixes and recommends affected packages to update their dependencies. However, there are still serious lags in the propagation of vulnerability fixes in the ecosystem. In our preliminary study on the latest versions of 356,283 active npm packages, we found that 20.0% of them can still introduce vulnerabilities via direct or transitive dependencies although the involved vulnerable packages have already published fix versions for over a year. Prior study by (Chinthanet et al. 2021) lays the groundwork for research on how to mitigate propagation lags of vulnerability fixes in an ecosystem. They conducted an empirical investigation to identify lags that might occur between the vulnerable package release and its fixing release. They found that factors such as the branch upon which a fix landed and the severity of the vulnerability had a small effect on its propagation trajectory throughout the ecosystem. To ensure quick adoption and propagation of a release that contains the fix, they gave several actionable advice to developers and researchers. However, it is still an open question how to design an effective technique to accelerate the propagation of vulnerability fixes. Motivated by this problem, in this paper, we conducted an empirical study to learn the scale of packages that block the propagation of vulnerability fixes in the ecosystem and investigate their evolution characteristics. Furthermore, we distilled the remediation strategies that have better effects on mitigating the fix propagation lags. Leveraging our empirical findings, we propose an ecosystem-level technique, Plumber, for deriving feasible remediation strategies to boost the propagation of vulnerability fixes. To precisely diagnose the causes of fix propagation blocking, Plumber models the vulnerability metadata, and npm dependency metadata and continuously monitors their evolution. By analyzing a full-picture of the ecosystem-level dependency graph and the corresponding fix propagation statuses, it derives remediation schemes for pivotal packages. In the schemes, Plumber provides customized remediation suggestions with vulnerability impact analysis to arouse package developers' awareness. We applied Plumber to generating 268 remediation reports for the identified pivotal packages, to evaluate its remediation effectiveness based on developers' feedback. Encouragingly, 47.4% our remediation reports received positive feedback from many well-known npm projects, such as Tensorflow/tfjs, Ethers.js, and GoogleChrome/workbox. Our reports have boosted the propagation of vulnerability fixes into 16,403 root packages through 92,469 dependency paths. On average, each remediated package version is receiving 72,678 downloads per week by the time of this work.
C1 [Wang, Ying] Northeasthern Univ, Software Coll, Boston, MA 02115 USA.
   [Wang, Ying] Hong Kong Univ Sci & Technol, Dept Comp Sci & Engn, Hong Kong, Peoples R China.
   [Wang, Ying] Nanjing Univ, State Key Lab Novel Software Technol, Nanjing 210093, Jiangsu, Peoples R China.
   [Sun, Peng; Pei, Lin; Yu, Hai] Northeasthern Univ, Software Coll, Shenyang 110819, Peoples R China.
   [Yu, Yue] Natl Univ Def Technol, Natl Lab Parallel & Distributed Proc, Changsha 410073, Peoples R China.
   [Yu, Yue] Natl Univ Def Technol, Coll Comp, Changsha 410073, Peoples R China.
   [Xu, Chang] Nanjing Univ, Dept Comp Sci & Technol, State Key Lab Novel Software Technol, Nanjing 210093, Jiangsu, Peoples R China.
   [Cheung, Shing-Chi] Hong Kong Univ Sci & Technol, Guangzhou HKUST Fok Ying Tung Res Inst, Guangzhou 511458, Peoples R China.
   [Zhu, Zhiliang] Northeastern Univ, Natl Frontiers Sci Ctr Ind Intelligence & Syst Opt, Key Lab Data Analyt & Optimizat Smart Ind, Shenyang 110819, Peoples R China.
   [Zhu, Zhiliang] Northeastern Univ, Software Coll, Shenyang 110819, Peoples R China.
C3 Hong Kong University of Science & Technology; Nanjing University;
   National University of Defense Technology - China; National University
   of Defense Technology - China; Nanjing University; Hong Kong University
   of Science & Technology; Northeastern University - China; Northeastern
   University - China
RP Yu, Y (corresponding author), Natl Univ Def Technol, Natl Lab Parallel & Distributed Proc, Changsha 410073, Peoples R China.; Yu, Y (corresponding author), Natl Univ Def Technol, Coll Comp, Changsha 410073, Peoples R China.
EM wangying@swc.neu.edu.cn; sunpengneu@163.com; 476853285@qq.com;
   yuyue@nudt.edu.cn; changxu@nju.edu.cn; scc@cse.ust.hk;
   yuhai@mail.neu.edu.cn; ZHUZhiLiang_NEU@163.com
RI tong, li/KDO-7821-2024; Yang, han/KFS-2671-2024; Zhang,
   yuxuan/JXM-9935-2024; Liu, min/JXW-8493-2024; YU, Hai/E-6831-2018; Wang,
   Weiyi/JZC-7841-2024; lin, lin/KCZ-0185-2024; li, tong/JYO-7530-2024;
   lin, lin/KFB-9548-2024; Cheung, Shing Chi/U-5882-2018
OI YU, Hai/0000-0002-8024-1781; Yu, Yue/0000-0002-9865-2212; Cheung, Shing
   Chi/0000-0002-3508-7172; Xu, Chang/0000-0002-6299-4704
FU National Grand RD Plan [2020AAA0103504]; National Natural Science
   Foundation of China [61932021, 62141210, 61902056]; Major Key Project of
   PCL [PCL2021A06]; Hong Kong RGC/GRF [16207120]; MSRA grant; ITF
   [MHP/055/19, PiH/255/21]; Research Grants Council (RGC) Research Impact
   Fund [R5034-18]; Leading-edge Technology Program of Jiangsu Natural
   Science Foundation [BK20202001]; Open Fund of State Key Lab. for Novel
   Software Technology, Nanjing University [KFKT2021B01]; 111 Project
   [B16009]
FX This work was supported by the National Grand R & D Plan under Grants
   2020AAA0103504, in part by the National Natural Science Foundation of
   China under Grants 61932021, 62141210, and 61902056, in part by the
   Major Key Project of PCL under Grant PCL2021A06, in part by the Hong
   Kong RGC/GRF under Grant 16207120, in part by MSRA grant, in part by ITF
   under Grant MHP/055/19, PiH/255/21, in part by Research Grants Council
   (RGC) Research Impact Fund under Grant R5034-18, and in part by the
   Leading-edge Technology Program of Jiangsu Natural Science Foundation
   under Grant BK20202001, in part by the Open Fund of State Key Lab. for
   Novel Software Technology, Nanjing University under Grant KFKT2021B01,
   and in part by 111 Project under Grant B16009
CR Abdalkareem R, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P385, DOI 10.1145/3106237.3106267
   [Anonymous], 2021, CVSS SCOR
   [Anonymous], 2021, MEOW 195
   [Anonymous], 2021, ETHERS JS
   [Anonymous], 2021, XML CRYPT 231
   [Anonymous], 2021, SWAP COR
   [Anonymous], 2021, GOOGL GAX
   [Anonymous], 2021, SEMV
   [Anonymous], 2021, OPAC 1034
   [Anonymous], 2021, TRUFFL 1147
   [Anonymous], 2021, NPM SEC ADV
   [Anonymous], 2021, CSSN 7491
   [Anonymous], 2021, TENSORFLOWTFJS
   [Anonymous], 2021, XML CRYPT 1215
   [Anonymous], 2021, GOOGL WORKB
   [Anonymous], 2021, NODE SQLITE3 1493
   [Anonymous], 2021, MET 299
   [Anonymous], 2021, CVE202123624
   [Anonymous], 2021, MAPB 7
   [Anonymous], 2021, NOD SEMV
   [Anonymous], 2021, GOOGL CLOUD STOR
   [Anonymous], 2021, GITH ADV DB
   [Anonymous], 2021, ABOUT US
   [Anonymous], 2021, REACT REAL 1
   [Anonymous], 2021, SNYK VULN DB
   [Anonymous], 2021, 153 PEER
   [Anonymous], 2021, NPM AUD
   [Anonymous], 2021, COMM 8616B1 LEARN WE
   [Anonymous], 2021, CVE202125912
   [Anonymous], 2021, CONF
   [Anonymous], 2021, IM CROPP 42
   [Anonymous], 2021, CVE202128918
   [Anonymous], 2021, ANG CLI 21608
   [Anonymous], 2021, NPM PUBL REG
   [Anonymous], 2021, GOOGL
   [Anonymous], 2021, MICR JUST
   [Anonymous], 2021, ETH JS 1439
   BASILI VR, 1986, IEEE T SOFTWARE ENG, V12, P733, DOI 10.1109/TSE.1986.6312975
   Bavota G, 2015, EMPIR SOFTW ENG, V20, P1275, DOI 10.1007/s10664-014-9325-9
   Bogart C, 2021, ACM T SOFTW ENG METH, V30, DOI 10.1145/3447245
   Bogart C, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P109, DOI 10.1145/2950290.2950325
   Bogart C, 2015, 2015 30TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING WORKSHOP (ASEW), P86, DOI 10.1109/ASEW.2015.21
   Cadariu M, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P516, DOI 10.1109/SANER.2015.7081868
   Cai WW, 2021, FRONT COMPUT SCI-CHI, V15, DOI 10.1007/s11704-020-9518-x
   Chen ZP, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P750, DOI 10.1145/3368089.3409759
   Chinthanet B, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-021-09951-x
   Creswell J. W., 2016, Qualitative Inquiry & Research Design Choosing Among Five Aproaches, DOI DOI 10.1089/TMJ.2009.0067
   Decan A, 2022, IEEE T SOFTWARE ENG, V48, P4087, DOI 10.1109/TSE.2021.3112204
   Decan A, 2019, EMPIR SOFTW ENG, V24, P381, DOI 10.1007/s10664-017-9589-y
   Decan A, 2018, IEEE WORK CONF MIN S, P181, DOI 10.1145/3196398.3196401
   Decan A, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P2, DOI 10.1109/SANER.2017.7884604
   DEP, 2021, US
   Derr E, 2017, CCS'17: PROCEEDINGS OF THE 2017 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P2187, DOI 10.1145/3133956.3134059
   Di Penta M, 2009, INFORM SOFTWARE TECH, V51, P1469, DOI 10.1016/j.infsof.2009.04.013
   Dietrich Jens, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P349, DOI 10.1109/MSR.2019.00061
   Duan R, 2017, CCS'17: PROCEEDINGS OF THE 2017 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P2169, DOI 10.1145/3133956.3134048
   Foo D, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P791, DOI 10.1145/3236024.3275535
   Kula RG, 2017, Arxiv, DOI [arXiv:1709.04638, DOI 10.48550/ARXIV.1709.04638]
   He H, 2021, PROCEEDINGS OF THE 29TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '21), P478, DOI 10.1145/3468264.3468571
   Henkel J, 2005, PROC INT CONF SOFTW, P274
   Hora A, 2015, PROC IEEE INT CONF S, P251, DOI 10.1109/ICSM.2015.7332471
   Hu J., 2021, FRONT COMP SCI-SWITZ, V15, P1
   Humbatova N, 2020, PROC INT CONF SOFTW, P1110, DOI 10.1145/3377811.3380395
   Jafari AJ, 2022, IEEE T SOFTWARE ENG, V48, P3790, DOI 10.1109/TSE.2021.3106247
   Jang H., 2021, IFIP International Conference on ICT Systems Security and Privacy Protection, P66
   Khoshnevis S., 2023, FRONT COMP SCI-SWITZ, V17, P1
   Kim S, 2017, P IEEE S SECUR PRIV, P595, DOI 10.1109/SP.2017.62
   Kula Raula Gaikovina, 2018, Empirical Software Engineering, V23, P384, DOI 10.1007/s10664-017-9521-5
   Liu CW, 2022, PROC INT CONF SOFTW, P672, DOI 10.1145/3510003.3510142
   Massacci F, 2011, LECT NOTES COMPUT SC, V6542, P195, DOI 10.1007/978-3-642-19125-1_15
   McCamant S., 2003, Software Engineering Notes, V28, P287, DOI 10.1145/949952.940110
   McHugh ML, 2012, BIOCHEM MEDICA, V22, P276, DOI 10.11613/bm.2012.031
   Mirhosseini S, 2017, IEEE INT CONF AUTOM, P84, DOI 10.1109/ASE.2017.8115621
   Pashchenko I, 2022, IEEE T SOFTWARE ENG, V48, P1592, DOI 10.1109/TSE.2020.3025443
   Pashchenko I, 2018, PROCEEDINGS OF THE 12TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT (ESEM 2018), DOI 10.1145/3239235.3268920
   Phan Nam FL, 2010, Proceedings of the IEEE/ACM International Conference on Automated Software Engineering, ASE'10, (New York, NY, USA), P447
   Piantadosi V, 2019, IEEE INT CONF SOFTW, P68, DOI 10.1109/ICST.2019.00017
   Plate H, 2015, PROC IEEE INT CONF S, P411, DOI 10.1109/ICSM.2015.7332492
   Ponta SE, 2018, PROC IEEE INT CONF S, P449, DOI 10.1109/ICSME.2018.00054
   Raemaekers S, 2017, J SYST SOFTWARE, V129, P140, DOI 10.1016/j.jss.2016.04.008
   Raemaekers S, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P378, DOI 10.1109/ICSM.2012.6405296
   Ruiz IJM, 2016, IEEE SOFTWARE, V33, P74, DOI 10.1109/MS.2014.81
   Sawant AA, 2018, EMPIR SOFTW ENG, V23, P2158, DOI 10.1007/s10664-017-9554-9
   Sun XB, 2021, FRONT COMPUT SCI-CHI, V15, DOI 10.1007/s11704-020-9441-1
   Wang Y, 2020, ARXIV
   Wittern E, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P351, DOI [10.1145/2901739.2901743, 10.1109/MSR.2016.043]
   Woo S, 2021, PROCEEDINGS OF THE 30TH USENIX SECURITY SYMPOSIUM, P3041
   [许畅 Xu Chang], 2020, [中国科学. 信息科学, Scientia Sinica Informationis], V50, P1595
   Zapata RE, 2018, PROC IEEE INT CONF S, P559, DOI 10.1109/ICSME.2018.00067
   Zerouali A, 2019, 2019 IEEE 26TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER), P619, DOI [10.1109/saner.2019.8667984, 10.1109/SANER.2019.8667984]
   Zimmermann M, 2019, PROCEEDINGS OF THE 28TH USENIX SECURITY SYMPOSIUM, P995
NR 91
TC 0
Z9 0
U1 3
U2 4
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAY 1
PY 2023
VL 49
IS 5
BP 3155
EP 3181
DI 10.1109/TSE.2023.3243262
PG 27
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA G8MH8
UT WOS:000991628700007
DA 2024-07-18
ER

PT J
AU Albuquerque, D
   Guimaraes, E
   Tonin, G
   Rodríguez, P
   Perkusich, M
   Almeida, H
   Perkusich, A
   Chagas, F
AF Albuquerque, Danyllo
   Guimaraes, Everton
   Tonin, Graziela
   Rodriguez, Pilar
   Perkusich, Mirko
   Almeida, Hyggo
   Perkusich, Angelo
   Chagas, Ferdinandy
TI Managing Technical Debt Using Intelligent Techniques-A Systematic
   Mapping Study
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Time division multiplexing; Cognition; Codes; Costs; Systematics;
   Software systems; Knowledge discovery; Technical debt; intelligent
   techniques; technical debt management activities; systematic mapping
   study
ID ARTIFICIAL-INTELLIGENCE; DECISION-MAKING; STATE; TOOL
AB Technical Debt (TD) is a metaphor reflecting technical compromises that can yield short-term benefits but might hurt the long-term health of a software system. With the increasing amount of data generated when performing software development activities, an emergent research field has gained attention: applying Intelligent Techniques to solve Software Engineering problems. Intelligent Techniques were used to explore data for knowledge discovery, reasoning, learning, planning, perception, or supporting decision-making. Although these techniques can be promising, there is no structured understanding related to their application to support Technical Debt Management (TDM) activities. Within this context, this study aims to investigate to what extent the literature has proposed and evaluated solutions based on Intelligent Techniques to support TDM activities. To this end, we performed a Systematic Mapping Study (SMS) to investigate to what extent the literature has proposed and evaluated solutions based on Intelligent Techniques to support TDM activities. In total, 150 primary studies were identified and analyzed, dated from 2012 to 2021. The results indicated a growing interest in applying Intelligent Techniques to support TDM activities, the most used: Machine Learning and Reasoning under uncertainty. Intelligent Techniques aimed to assist mainly TDM activities related to identification, measurement, and monitoring. Design TD, Code TD, and Architectural TD are the TD types in the spotlight. Most studies were categorized at automation levels 1 and 2, meaning that existing approaches still require substantial human intervention. Symbolists and Analogizers are levels of explanation presented by most Intelligent Techniques, implying that these solutions conclude a general truth after considering a sufficient number of particular cases. Moreover, we also cataloged the empirical research types, contributions, and validation strategies described in primary studies. Based on our findings, we argue that there is still room to improve the use of Intelligent Techniques to support TDM activities. The open issues that emerged from this study can represent future opportunities for practitioners and researchers.
C1 [Albuquerque, Danyllo; Perkusich, Mirko; Almeida, Hyggo; Perkusich, Angelo; Chagas, Ferdinandy] Univ Fed Campina Grande, Intelligent Software Engn Grp ISE VIRTUS, BR-58429900 Campina Grande, PB, Brazil.
   [Guimaraes, Everton] Penn State Univ, Malvern, PA 19355 USA.
   [Tonin, Graziela] Fed Univ Fronteira Sul, BR-89802 Chapeco, SC, Brazil.
   [Rodriguez, Pilar] Univ Politecn Madrid, Madrid 28040, Spain.
C3 Universidade Federal de Campina Grande; Pennsylvania Commonwealth System
   of Higher Education (PCSHE); Pennsylvania State University; Universidade
   Federal da Fronteira Sul; Universidad Politecnica de Madrid
RP Guimaraes, E (corresponding author), Penn State Univ, Malvern, PA 19355 USA.
EM danyllo@copin.ufcg.edu.br; ezt157@psu.edu; gttonin@gmail.com;
   pilar.rodriguez@upm.es; mperkusich@gmail.com; hyggo@dsc.ufcg.edu.br;
   perkusic@dee.ufcg.edu.br; ferdinandy@copin.ufcg.edu.br
RI de Almeida, Hyggo Oliveira/H-8167-2013; Perkusich, Angelo/I-2447-2013;
   Rodriguez, Pilar/C-1449-2015
OI Perkusich, Angelo/0000-0002-7377-1258; Albuquerque,
   Danyllo/0000-0001-5515-7812; Tavares Guimaraes,
   Everton/0000-0002-6740-6561; Rodriguez, Pilar/0000-0002-0618-6104;
   Perkusich, Mirko/0000-0002-9433-4962
FU IFPB employee qualification incentive program (PIQIFPB) -Public Notice
   [21/2021/PRPIPG]
FX This work was supported by IFPB employee qualification incentive program
   (PIQIFPB) -Public Notice under Grant Nr 21/2021/PRPIPG.
CR Albuquerque Danyllo, 2022, Figshare, DOI 10.6084/m9.figshare.21215192.v1
   Albuquerque D, 2022, INTERNATIONAL CONFERENCE ON TECHNICAL DEBT 2022 (TECHDEBT 2022), P21, DOI 10.1145/3524843.3528097
   Alpaydin E, 2014, ADAPT COMPUT MACH LE, P1
   Alves NSR, 2016, INFORM SOFTWARE TECH, V70, P100, DOI 10.1016/j.infsof.2015.10.008
   Ampatzoglou A, 2015, INFORM SOFTWARE TECH, V64, P52, DOI 10.1016/j.infsof.2015.04.001
   Arjovsky M, 2017, PR MACH LEARN RES, V70
   Avgeriou P, 2016, Dagstuhl reports, V6, DOI DOI 10.4230/DAGREP.6.4.110
   Azeem MI, 2019, INFORM SOFTWARE TECH, V108, P115, DOI 10.1016/j.infsof.2018.12.009
   Behutiye WN, 2017, INFORM SOFTWARE TECH, V82, P139, DOI 10.1016/j.infsof.2016.10.004
   Bin Ali N, 2014, J SYST SOFTWARE, V97, P65, DOI 10.1016/j.jss.2014.06.059
   Ciolkowski M, 2017, LECT NOTES COMPUT SC, V10611, P523, DOI 10.1007/978-3-319-69926-4_42
   Cunningham W., 1993, OOPS Messenger, V4, P29
   Das T, 2020, IEEE COMMUN SURV TUT, V22, P472, DOI 10.1109/COMST.2019.2935453
   de Jesus JS, 2017, CONF BUS INFORM, V1, P444, DOI 10.1109/CBI.2017.62
   Domingos P., 2015, The Master Algorithm: How the Quest for the Ultimate Learning Machine Will Remake Our World
   Duan YQ, 2019, INT J INFORM MANAGE, V48, P63, DOI 10.1016/j.ijinfomgt.2019.01.021
   Fabbri S, 2016, PROCEEDINGS OF THE 20TH INTERNATIONAL CONFERENCE ON EVALUATION AND ASSESSMENT IN SOFTWARE ENGINEERING 2016 (EASE '16), DOI 10.1145/2915970.2916013
   Feldt R, 2018, INT WORK REAL ARTIF, P35, DOI 10.1145/3194104.3194109
   Feldt R, 2014, 2014 IEEE SEVENTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST), P343, DOI 10.1109/ICST.2014.47
   Flisar J, 2019, IEEE ACCESS, V7, P106475, DOI 10.1109/ACCESS.2019.2933318
   Ford L., 1987, Artificial Intelligence Review, V1, P255, DOI 10.1007/BF00142926
   Harman M, 2012, ACM COMPUT SURV, V45, DOI 10.1145/2379776.2379787
   KITCHENHAM B, 1995, IEEE SOFTWARE, V12, P52, DOI 10.1109/52.391832
   Kitchenham B, 2013, INFORM SOFTWARE TECH, V55, P2049, DOI 10.1016/j.infsof.2013.07.010
   Kosti MV, 2017, 2017 43RD EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS (SEAA), P329, DOI 10.1109/SEAA.2017.59
   Kumar A, 2014, PROCEEDINGS OF THE 2014 INTERNATIONAL CONFERENCE ON INFORMATION SYSTEMS AND COMPUTER NETWORKS (ISCON), P118, DOI 10.1109/ICISCON.2014.6965230
   Kumar P., 2020, INTERNET THINGS BIG, P171
   Li ZY, 2015, J SYST SOFTWARE, V101, P193, DOI 10.1016/j.jss.2014.12.027
   Maldonado ED, 2017, IEEE T SOFTWARE ENG, V43, P1044, DOI 10.1109/TSE.2017.2654244
   Marinescu R, 2012, IBM J RES DEV, V56, DOI 10.1147/JRD.2012.2204512
   Martini A, 2018, SCI COMPUT PROGRAM, V163, P42, DOI 10.1016/j.scico.2018.03.007
   Martini A, 2016, 2016 42ND EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS (SEAA), P92, DOI 10.1109/SEAA.2016.48
   Mendes T. S., 2015, PROC INT C ENTERPRIS, V2, P457
   Meneses Santos Rafael, 2020, 17th International Conference on Information Technology-New Generations (ITNG 2020). Advances in Intelligent Systems and Computing (AISC 1134), P679, DOI 10.1007/978-3-030-43020-7_93
   Misirli AT, 2014, IEEE T SOFTWARE ENG, V40, P533, DOI 10.1109/TSE.2014.2321179
   MOSTOW J, 1985, IEEE T SOFTWARE ENG, V11, P1253, DOI 10.1109/TSE.1985.231876
   P~erez B., 2020, PROC EUR C SOFTW ARC, P5
   Partridge D., 1986, ARTIF INTELL
   Perkusich M, 2020, INFORM SOFTWARE TECH, V119, DOI 10.1016/j.infsof.2019.106241
   Petersen K, 2015, INFORM SOFTWARE TECH, V64, P1, DOI 10.1016/j.infsof.2015.03.007
   Plösch R, 2018, 2018 IEEE/ACM INTERNATIONAL CONFERENCE ON TECHNICAL DEBT (TECHDEBT), P95, DOI 10.1145/3194164.3194172
   Poole D.L., 2010, ARTIF INTELL, DOI DOI 10.1017/9781108164085
   Ren XX, 2019, ACM T SOFTW ENG METH, V28, DOI 10.1145/3324916
   ROTH EM, 1992, ERGONOMICS, V35, P1163, DOI 10.1080/00140139208967389
   Sala I, 2021, PROCEEDINGS OF EVALUATION AND ASSESSMENT IN SOFTWARE ENGINEERING (EASE 2021), P278, DOI 10.1145/3463274.3464455
   Seaman C., 2012, Proceedings 2012 Third International Workshop on Managing Technical Debt (MTD 2012), P45, DOI 10.1109/MTD.2012.6225999
   Shaw M, 2003, PROC INT CONF SOFTW, P726, DOI 10.1109/ICSE.2003.1201262
   SHERIDAN TB, 1980, TECHNOL REV, V83, P61
   Silva V.M, 2019, Journal of Software Engineering Research and Development, V7, P1
   Sowa J.F., 2014, Principles of Semantic Networks: Explorations in the representation of knowledge
   Tom E., 2012, P 20 EUR C INF SYST, P16
   Tonella P, 2007, EMPIR SOFTW ENG, V12, P551, DOI 10.1007/s10664-007-9037-5
   Tosun A, 2017, SOFTWARE QUAL J, V25, P273, DOI 10.1007/s11219-015-9297-z
   Tsintzira Angeliki-Agathi, 2020, INT C QUALITY INFORM, P53, DOI DOI 10.1007/978-3-030-58793-2_5
   Wang H, 2015, INTERNATIONAL CONFERENCE ON COMPUTER SCIENCE AND COMMUNICATION ENGINEERING (CSCE 2015), P353
   Wang SM, 2023, IEEE T SOFTWARE ENG, V49, P1188, DOI 10.1109/TSE.2022.3173346
   WOHLIN Claes, 2014, P 18 INT C EVALUATIO, DOI [10.1145/2601248.2601268.10, 10.1145/2601248.2601268]
   Wong WE, 2021, J SYST SOFTWARE, V180, DOI 10.1016/j.jss.2021.111029
NR 58
TC 4
Z9 4
U1 2
U2 3
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD APR 1
PY 2023
VL 49
IS 4
BP 2202
EP 2220
DI 10.1109/TSE.2022.3214764
PG 19
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA E9NM9
UT WOS:000978723600044
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Salza, P
   Schwizer, C
   Gu, J
   Gall, HC
AF Salza, Pasquale
   Schwizer, Christoph
   Gu, Jian
   Gall, Harald C.
TI On the Effectiveness of Transfer Learning for Code Search
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Codes; Bit error rate; Task analysis; Transformers; Micromechanical
   devices; Transfer learning; Data models; Code search; transfer learning;
   source code modeling; multimodal embeddings; stackoverflow; deep
   learning
ID REPRESENTATION
AB The Transformer architecture and transfer learning have marked a quantum leap in natural language processing, improving the state of the art across a range of text-based tasks. This paper examines how these advancements can be applied to and improve code search. To this end, we pre-train a BERT-based model on combinations of natural language and source code data and fine-tune it on pairs of StackOverflow question titles and code answers. Our results show that the pre-trained models consistently outperform the models that were not pre-trained. In cases where the model was pre-trained on natural language "and" source code data, it also outperforms an information retrieval baseline based on Lucene. Also, we demonstrated that the combined use of an information retrieval-based approach followed by a Transformer leads to the best results overall, especially when searching into a large search pool. Transfer learning is particularly effective when much pre-training data is available and fine-tuning data is limited. We demonstrate that natural language processing models based on the Transformer architecture can be directly applied to source code analysis tasks, such as code search. With the development of Transformer models designed more specifically for dealing with source code data, we believe the results of source code analysis tasks can be further improved.
C1 [Salza, Pasquale; Schwizer, Christoph; Gu, Jian; Gall, Harald C.] Univ Zurich, Zurich, Switzerland.
C3 University of Zurich
RP Salza, P (corresponding author), Univ Zurich, Zurich, Switzerland.
EM salza@ifi.uzh.ch; christoph@schwizer.dev; gu@ifi.uzh.ch; gall@ifi.uzh.ch
OI Gall, Harald/0000-0002-3874-5628
FU Swiss National Science Foundation (SNSF) project "Melise -Machine
   Learning Assisted Software Development" [SNSF204632]
FX We are grateful for the anonymous reviewers' comments and feedback that
   helped to improve the paper significantly. The research leading to these
   results has received funding from the Swiss National Science Foundation
   (SNSF) project "Melise -Machine Learning Assisted Software Development"
   (SNSF204632).
CR Ahmad WU, 2021, 2021 CONFERENCE OF THE NORTH AMERICAN CHAPTER OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS: HUMAN LANGUAGE TECHNOLOGIES (NAACL-HLT 2021), P2655
   Allamanis M, 2018, Arxiv, DOI arXiv:1711.00740
   Allamanis M, 2015, PR MACH LEARN RES, V37, P2123
   Allamanis M, 2013, IEEE WORK CONF MIN S, P207, DOI 10.1109/MSR.2013.6624029
   Alon U, 2018, ACM SIGPLAN NOTICES, V53, P404, DOI [10.1145/3192366.3192412, 10.1145/3296979.3192412]
   Nguyen AT, 2015, IEEE INT CONF AUTOM, P585, DOI 10.1109/ASE.2015.74
   [Anonymous], 2013, ADV NEURAL INFORM PR
   [Anonymous], 2006, PROC IEEE COMPUT SOC
   Baltrusaitis T, 2019, IEEE T PATTERN ANAL, V41, P423, DOI 10.1109/TPAMI.2018.2798607
   Bojanowski P., 2017, Transactions of the Association for Computational Linguistics, V5, P135, DOI DOI 10.1162/TACLA00051
   Boyd S.P., 2012, Advances in Neural Information Processing Systems, P962
   Brunsfeld M., 2020, TREE SITT
   Cambronero J, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P964, DOI 10.1145/3338906.3340458
   Chen Mark, 2021, arXiv, DOI DOI 10.48550/ARXIV.2107.03374
   Chen MX, 2019, KDD'19: PROCEEDINGS OF THE 25TH ACM SIGKDD INTERNATIONAL CONFERENCCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P2287, DOI 10.1145/3292500.3330723
   Clark K, 2019, BLACKBOXNLP WORKSHOP ON ANALYZING AND INTERPRETING NEURAL NETWORKS FOR NLP AT ACL 2019, P276, DOI 10.18653/v1/w19-4828
   Devlin J., 2020, BERT BASE
   Devlin J, 2019, 2019 CONFERENCE OF THE NORTH AMERICAN CHAPTER OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS: HUMAN LANGUAGE TECHNOLOGIES (NAACL HLT 2019), VOL. 1, P4171
   Fang S, 2021, INFORM SOFTWARE TECH, V134, DOI 10.1016/j.infsof.2021.106542
   Feng ZY, 2020, Arxiv, DOI [arXiv:2002.08155, 10.48550/arXiv.2002.08155]
   Google, 2022, GOOGL BIGQ
   Gu J, 2021, PROC IEEE INT CONF S, P483, DOI 10.1109/ICSME52107.2021.00049
   Gu XD, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P933, DOI 10.1145/3180155.3180167
   Guo WZ, 2019, IEEE ACCESS, V7, P63373, DOI 10.1109/ACCESS.2019.2916887
   Gururangan S, 2020, Arxiv, DOI [arXiv:2004.10964, DOI 10.48550/ARXIV.2004.10964]
   Hindle A, 2012, PROC INT CONF SOFTW, P837, DOI 10.1109/ICSE.2012.6227135
   Hu X, 2018, INT C PROGRAM COMPRE, P200, DOI 10.1145/3196321.3196334
   Husain H, 2020, Arxiv, DOI arXiv:1909.09436
   Hussain Y, 2020, INT J SOFTW ENG KNOW, V30, P649, DOI 10.1142/S0218194020500230
   Hussain Y, 2020, INFORM SOFTWARE TECH, V125, DOI 10.1016/j.infsof.2020.106309
   Iyer S, 2018, 2018 CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING (EMNLP 2018), P1643
   Iyer S, 2016, PROCEEDINGS OF THE 54TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, VOL 1, P2073
   Jain P, 2021, 2021 CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING (EMNLP 2021), P5954
   Kanade A, 2020, PR MACH LEARN RES, V119
   Karampatsis RM, 2019, Arxiv, DOI arXiv:1903.05734
   Karimpanal TG, 2019, ADAPT BEHAV, V27, P111, DOI 10.1177/1059712318818568
   Kingma D. P., 2014, arXiv
   Lampiris G, 2020, ANN OPER RES, V294, P225, DOI 10.1007/s10479-019-03337-5
   Li HY, 2019, Arxiv, DOI arXiv:1908.09804
   Li YJ, 2017, Arxiv, DOI arXiv:1511.05493
   Liu YH, 2019, Arxiv, DOI arXiv:1907.11692
   Lu S, 2021, Arxiv, DOI arXiv:2102.04664
   Luan SF, 2019, P ACM PROGRAM LANG, V3, DOI 10.1145/3360578
   Lv F, 2015, IEEE INT CONF AUTOM, P260, DOI 10.1109/ASE.2015.42
   Manning C. D., 2008, INTRO INFORMATION RE
   Mikolov T., 2013, ADV NEURAL INFORM PR, V26, P3111, DOI DOI 10.5555/2999792.2999959
   Min SW, 2020, Arxiv, DOI arXiv:1911.03868
   Montgomery D. C., 2020, DESIGN ANAL EXPT
   Mou LL, 2016, AAAI CONF ARTIF INTE, P1287
   Palomba F, 2017, PROC INT CONF SOFTW, P106, DOI 10.1109/ICSE.2017.18
   Pan SJ, 2010, IEEE T KNOWL DATA EN, V22, P1345, DOI 10.1109/TKDE.2009.191
   Pennington J., 2014, P 2014 C EMP METH NA, P1532, DOI [DOI 10.3115/V1/D14-1162, 10.3115/v1/D14-1162]
   Pruksachatkun Yada, 2020, P 58 ANN M ASS COMPU, P5231
   Radford Alec, 2018, IMPROVING LANGUAGE U, DOI DOI 10.18653/V1/N18-1202
   Raychev V, 2016, ACM SIGPLAN NOTICES, V51, P731, DOI 10.1145/3022671.2984041
   Sachdev S, 2018, MAPL'18: PROCEEDINGS OF THE 2ND ACM SIGPLAN INTERNATIONAL WORKSHOP ON MACHINE LEARNING AND PROGRAMMING LANGUAGES, P31, DOI 10.1145/3211346.3211353
   Salza Pasquale, 2022, Zenodo, DOI 10.5281/ZENODO.6856794
   Schuster M, 2012, INT CONF ACOUST SPEE, P5149, DOI 10.1109/ICASSP.2012.6289079
   Sennrich R, 2016, PROCEEDINGS OF THE 54TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, VOL 1, P1715
   Shuai J, 2020, INT C PROGRAM COMPRE, P196, DOI 10.1145/3387904.3389269
   Shuteng Niu, 2020, IEEE Transactions on Artificial Intelligence, V1, P151, DOI 10.1109/TAI.2021.3054609
   Sinha K, 2021, 2021 CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING (EMNLP 2021), P2888
   Storks S, 2020, Arxiv, DOI [arXiv:1904.01172, DOI 10.48550/ARXIV.1904.01172]
   Subramanian S, 2013, IEEE WORK CONF MIN S, P85, DOI 10.1109/MSR.2013.6624012
   Sui Y., 2020, PROC C OBJECT ORIENT, P1
   Svajlenko J, 2014, PROC IEEE INT CONF S, P476, DOI 10.1109/ICSME.2014.77
   Terragni V., 2016, P 25 INT S SOFTWARE, P118
   Terragni V, 2021, 2021 36TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING ASE 2021, P542, DOI 10.1109/ASE51524.2021.9678576
   Tufano M, 2019, ACM T SOFTW ENG METH, V28, DOI 10.1145/3340544
   Vargha A, 2000, J EDUC BEHAV STAT, V25, P101, DOI 10.3102/10769986025002101
   Vaswani A, 2017, ADV NEUR IN, V30
   Wan Y, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P13, DOI 10.1109/ASE.2019.00012
   Wang K, 2019, Arxiv, DOI arXiv:1907.02136
   Wang K, 2019, Arxiv, DOI arXiv:1905.05251
   Wikimedia Foundation Inc, 2022, ENGL WIK
   Wu YH, 2016, Arxiv, DOI [arXiv:1609.08144, DOI 10.48550/ARXIV.1609.08144]
   Xian YQ, 2017, PROC CVPR IEEE, P3077, DOI 10.1109/CVPR.2017.328
   Yang Wu, 2011, Proceedings of the 2011 8th IEEE International Conference on Advanced Video and Signal Based Surveillance (AVSS 2011), P408, DOI 10.1109/AVSS.2011.6027363
   Ye X, 2016, PROC INT CONF SOFTW, P404, DOI 10.1145/2884781.2884862
   You Y, 2020, Arxiv, DOI arXiv:1904.00962
   Zhang J, 2019, PROC INT CONF SOFTW, P783, DOI 10.1109/ICSE.2019.00086
   Zhang JF, 2021, FINDINGS OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, ACL-IJCNLP 2021, P4454
   Zhou Y., 2019, 33 INT C NEURAL INF, P10197
   Zhu YK, 2015, Arxiv, DOI [arXiv:1506.06724, DOI 10.48550/ARXIV.1506.06724]
NR 84
TC 9
Z9 9
U1 2
U2 7
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD APR 1
PY 2023
VL 49
IS 4
BP 1804
EP 1822
DI 10.1109/TSE.2022.3192755
PG 19
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA E9NM9
UT WOS:000978723600022
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Winter, E
   Bowes, D
   Counsell, S
   Hall, T
   Haraldsson, S
   Nowack, V
   Woodward, J
AF Winter, Emily
   Bowes, David
   Counsell, Steve
   Hall, Tracy
   Haraldsson, Saemundur
   Nowack, Vesna
   Woodward, John
TI How do Developers Really Feel About Bug Fixing? Directions for Automatic
   Program Repair
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Computer bugs; Software; Debugging; Automation; Maintenance engineering;
   Task analysis; Manuals
ID ACCEPTANCE; TRUST; TIME
AB Automatic program repair (APR) is a rapidly advancing field of software engineering that aims to supplement or replace manual bug fixing with an automated tool. For APR to be successfully adopted in industry, it is vital that APR tools respond to developer needs and preferences. However, very little research has considered developers' general attitudes to APR or developers' current bug fixing practices (the activity APR aims to replace). This article responds to this gap by reporting on a survey of 386 software developers about their bug finding and fixing practices and experiences, and their instinctive attitudes towards APR. We find that bug finding and fixing is not necessarily as onerous for developers as has often been suggested, being rated as more satisfying than developers' general work. The fact that developers derive satisfaction and benefit from bug fixing indicates that APR adoption is not as simple as APR replacing an unwanted activity. When it comes to potential APR approaches, we find a strong preference for developers being kept in the loop (for example, choosing between different fixes or validating fixes) as opposed to a fully automated process. This suggests that advances in APR should be careful to consider the agency of the developer, as well as what information is presented to developers alongside fixes. It also indicates that there are key barriers related to trust that would need to be overcome for full scale APR adoption, supported by the fact that even those developers who stated that they were positive about APR listed several caveats and concerns. We find very few statistically significant relationships between particular demographic variables (for example, developer experience, age, education) and key attitudinal variables, suggesting that developers' instinctive attitudes towards APR are little influenced by experience level but are held widely across the developer community.
C1 [Winter, Emily; Bowes, David; Hall, Tracy; Nowack, Vesna] Univ Lancaster, Sch Comp & Commun, Lancaster LA1 4YW, England.
   [Counsell, Steve] Brunel Univ London, Dept Comp Sci, Uxbridge UB8 3PH, England.
   [Haraldsson, Saemundur] Univ Stirling, Dept Comp Sci & Math, Stirling FK9 4LA, Scotland.
   [Woodward, John] Queen Mary Univ London, Sch Elect Engn & Comp Sci, London E1 4NS, England.
C3 Lancaster University; Brunel University; University of Stirling;
   University of London; Queen Mary University London
RP Winter, E (corresponding author), Univ Lancaster, Sch Comp & Commun, Lancaster LA1 4YW, England.
EM e.winter@lancaster.ac.uk; d.h.bowes@lancaster.ac.uk;
   steve.counsell@brunel.ac.uk; tracy.hall@lancaster.ac.uk;
   saemundur.haraldsson@stir.ac.uk; v.nowack@qmul.ac.uk;
   j.woodward@qmul.ac.uk
OI Woodward, John/0000-0002-2093-8990; Haraldsson,
   Saemundur/0000-0003-0395-5884; Bowes, David/0000-0001-7014-2811
FU Engineering and Physical Sciences Research Council [EP/S005730/1]; EPSRC
   [EP/S005730/1] Funding Source: UKRI
FX This work was supported by the Engineering and Physical Sciences
   Research Council under Grant EP/S005730/1.
CR Akbarinasaji S, 2018, J SYST SOFTWARE, V136, P173, DOI 10.1016/j.jss.2017.02.021
   Araujo T, 2017, COMMUN METHODS MEAS, V11, P173, DOI 10.1080/19312458.2017.1317337
   Bader J, 2019, P ACM PROGRAM LANG, V3, DOI 10.1145/3360585
   Balachandran V, 2013, IEEE INT WORK C SO, P167, DOI 10.1109/SCAM.2013.6648198
   Baltes S, 2016, ESEM'16: PROCEEDINGS OF THE 10TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, DOI 10.1145/2961111.2962628
   Beller M, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P572, DOI 10.1145/3180155.3180175
   Böhme M, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P117, DOI 10.1145/3106237.3106255
   BOURQUE L.B., 1995, CONDUCT SELF ADM MAI
   Cambronero Jose Pablo, 2019, 2019 IEEE Symposium on Visual Languages and Human-Centric Computing (VL/HCC). Proceedings, P181, DOI 10.1109/VLHCC.2019.8818884
   Campbell JL, 2013, SOCIOL METHOD RES, V42, P294, DOI 10.1177/0049124113500475
   Chang LC, 2003, SOCIOL METHODOL, V33, P55, DOI 10.1111/j.0081-1750.2003.t01-1-00127.x
   Chen LS, 2021, IEEE T SOFTWARE ENG, V47, P2841, DOI 10.1109/TSE.2020.2970009
   Daniel B, 2009, IEEE INT CONF AUTOM, P433, DOI 10.1109/ASE.2009.17
   DAVIS FD, 1989, MIS QUART, V13, P319, DOI 10.2307/249008
   de Mello RM, 2016, ESEM'16: PROCEEDINGS OF THE 10TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, DOI 10.1145/2961111.2962632
   Ghanbari A, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P1118, DOI 10.1109/ASE.2019.00116
   Gulwani S, 2018, ACM SIGPLAN NOTICES, V53, P465, DOI [10.1145/3192366.3192387, 10.1145/3296979.3192387]
   Gyimesi P, 2021, SOFTW TEST VERIF REL, V31, DOI 10.1002/stvr.1751
   Hata H, 2019, Arxiv, DOI arXiv:1812.07170
   Hilton M, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P197, DOI 10.1145/3106237.3106270
   Hoff KA, 2015, HUM FACTORS, V57, P407, DOI 10.1177/0018720814547570
   Huijts NMA, 2007, ENERG POLICY, V35, P2780, DOI 10.1016/j.enpol.2006.12.007
   Johnson B, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P672, DOI 10.1109/ICSE.2013.6606613
   Kaleeswaran S, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P266, DOI 10.1145/2568225.2568258
   Kalyanpur A, 2006, LECT NOTES COMPUT SC, V4011, P170
   Kim D, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P802, DOI 10.1109/ICSE.2013.6606626
   Kirbas S, 2021, IEEE SOFTWARE, V38, P43, DOI 10.1109/MS.2021.3071086
   Kochhar Pavneet Singh, 2016, 25 INT S SOFTWARE TE, P165, DOI 10.1145/2931037.2931051
   Kong XL, 2018, J SYST SOFTWARE, V137, P480, DOI 10.1016/j.jss.2017.06.039
   Krafft MF, 2016, 2016 IEEE/ACM 38TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING COMPANION (ICSE-C), P232, DOI 10.1145/2889160.2889248
   Le Goues C, 2012, PROC INT CONF SOFTW, P3, DOI 10.1109/ICSE.2012.6227211
   Lee J, 2018, P ACM PROGRAM LANG, V2, DOI 10.1145/3276528
   Liu C, 2013, 2013 IEEE SIXTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST 2013), P282, DOI 10.1109/ICST.2013.24
   Liu K, 2019, PROCEEDINGS OF THE 28TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA '19), P31, DOI 10.1145/3293882.3330577
   Loewenstein GF, 2001, PSYCHOL BULL, V127, P267, DOI 10.1037//0033-2909.127.2.267
   Marginean A, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE (ICSE-SEIP 2019), P269, DOI 10.1109/ICSE-SEIP.2019.00039
   Marsh S, 2003, ANNU REV INFORM SCI, V37, P465, DOI 10.1002/aris.1440370111
   Martinez M., 2014, HAL01075938 INR
   Masuck C., 2005, J COMPUTING SCI COLL, V21, P19
   Monperrus M, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P234, DOI 10.1145/2568225.2568324
   Nath ShimulKumar., 2012, Proceedings of the 27th Annual ACM Symposium on Applied Computing. SAC'12, P1123, DOI DOI 10.1145/2245276.2231953
   Noller Y, 2022, PROC INT CONF SOFTW, P2228, DOI 10.1145/3510003.3510040
   Palan S, 2018, J BEHAV EXP FINANC, V17, P22, DOI 10.1016/j.jbef.2017.12.004
   Pan K, 2009, EMPIR SOFTW ENG, V14, P286, DOI 10.1007/s10664-008-9077-5
   Parnin C., 2011, P 2011 INT S SOFTWAR, P199, DOI [10.1145/2001420.2001445, DOI 10.1145/2001420.2001445]
   Peer E, 2017, J EXP SOC PSYCHOL, V70, P153, DOI 10.1016/j.jesp.2017.01.006
   Perscheid M, 2017, SOFTWARE QUAL J, V25, P83, DOI 10.1007/s11219-015-9294-2
   Ploski Jan, 2007, ACM SIGSOFT Softw Eng Notes, V32, P6, DOI DOI 10.1145/1317471.1317478
   Russo D, 2022, IEEE T SOFTWARE ENG, V48, P819, DOI 10.1109/TSE.2020.3003413
   Spinellis D, 2005, IEEE SOFTWARE, V22, P108, DOI 10.1109/MS.2005.140
   Tao YD, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P64, DOI 10.1145/2635868.2635873
   Wagner Stefan, 2020, Contemporary Empirical Methods in Software Engineering, P93, DOI [DOI 10.1007/978-3-030-32489-6_4, 10.1007/978-3-030-32489-6-4]
   Wan ZY, 2020, IEEE T SOFTWARE ENG, V46, P1241, DOI 10.1109/TSE.2018.2877678
   Weimer W, 2021, 2 INT WORKSHOP AUTOM
   Winter E. R., 2022, IEEE T SOFTW ENG, DOI [10.1109/TSE2022.3152089, DOI 10.1109/TSE2022.3152089]
   Wong CP, 2021, PROCEEDINGS OF THE 29TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '21), P354, DOI 10.1145/3468264.3468600
   Ye H, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-020-09920-w
   Yi JY, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P740, DOI 10.1145/3106237.3106262
   Yiling Lou, 2020, ISSTA '20: Proceedings of the 29th ACM SIGSOFT International Symposium on Software Testing and Analysis, P75, DOI 10.1145/3395363.3397351
   Zou WQ, 2020, IEEE T SOFTWARE ENG, V46, P836, DOI 10.1109/TSE.2018.2870414
NR 60
TC 3
Z9 3
U1 2
U2 6
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD APR 1
PY 2023
VL 49
IS 4
BP 1823
EP 1841
DI 10.1109/TSE.2022.3194188
PG 19
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA E9NM9
UT WOS:000978723600023
OA Green Accepted, hybrid, Green Submitted
DA 2024-07-18
ER

PT J
AU Tei, K
   Tahara, Y
   Ohsuga, A
AF Tei, Kenji
   Tahara, Yasuyuki
   Ohsuga, Akihiko
TI Towards Scalable Model Checking of Reflective Systems via Labeled
   Transition Systems
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Model checking; labeled transition system; reflection; SPIN model
   checker
ID MAUDE
AB Reflection is a technique that enables a system to inspect or change its structure and/or behavior at runtime. It is a key enabler of many techniques for developing systems that have to function despite rapidly changing requirements and environments. A crucial issue in developing reflective systems is to ensure the correctness of their behaviors, because object-level behaviors are affected by metalevel behaviors. In this paper, we present an extended labeled transition system (LTS), which we call a metalevel LTS (MLTS), that supports data representation of another LTS for use in modeling a reflective tower. We show that two of the existing state reduction techniques for an LTS (symmetry reduction and divergence-sensitive stutter bisimulation) are also applicable to an MLTS. Then, we introduce two strategies for implementing an MLTS model in Promela, thereby enabling verification with the SPIN model checker. We also present case studies of applying MLTSs to two reflection applications: self-adaptation of a reconnaissance robot system, and dynamic evolution of an Internet-of-things (IoT) system. The case studies demonstrate the applicability of our approach and its scalability improvement through the state reduction techniques.
C1 [Tei, Kenji] Waseda Univ, Tokyo, Tokyo 698050, Japan.
   [Tahara, Yasuyuki; Ohsuga, Akihiko] Univ Electrocommun, Chofu, Tokyo 1828585, Japan.
C3 Waseda University; University of Electro-Communications - Japan
RP Tei, K (corresponding author), Waseda Univ, Tokyo, Tokyo 698050, Japan.
EM ktei@aoni.waseda.jp; tahara@uec.ac.jp; ohsuga@uec.ac.jp
OI Tei, Kenji/0000-0003-1106-1709; Ohsuga, Akihiko/0000-0001-6717-7028;
   Tahara, Yasuyuki/0000-0002-1939-4455
FU JSPS KAKENHI
FX This work was supported in part by JSPS KAKENHI.
CR Andersson J, 2009, 2009 ICSE WORKSHOP ON SOFTWARE ENGINEERING FOR ADAPTIVE AND SELF-MANAGING SYSTEMS, P38, DOI 10.1109/SEAMS.2009.5069072
   Arcaini P, 2017, ACM T AUTON ADAP SYS, V11, DOI 10.1145/3019598
   Baier C, 2008, PRINCIPLES OF MODEL CHECKING, P1
   Bencomo N., 2010, 2010 32nd International Conference on Software Engineering (ICSE), P199, DOI 10.1145/1810295.1810329
   Borda A, 2018, 2018 IEEE/ACM 13TH INTERNATIONAL SYMPOSIUM ON SOFTWARE ENGINEERING FOR ADAPTIVE AND SELF-MANAGING SYSTEMS (SEAMS), P1, DOI 10.1145/3194133.3194146
   Bruni R, 2015, SCI COMPUT PROGRAM, V99, P75, DOI 10.1016/j.scico.2013.11.043
   Bruni R, 2012, LECT NOTES COMPUT SC, V7212, P240, DOI 10.1007/978-3-642-28872-2_17
   Capra L, 2018, IFAC PAPERSONLINE, V51, P480, DOI 10.1016/j.ifacol.2018.06.343
   CHENG KT, 1993, ACM IEEE D, P86
   Chiba S., 1998, P OOPSLA 98 WORKSH R
   Cimatti A., 2002, P INT C COMP AID VER, P359, DOI DOI 10.1007/3-540-45657-0_29
   Clarke EM, 1998, LECT NOTES COMPUT SC, V1427, P147, DOI 10.1007/BFb0028741
   Clarke T.A., 2018, HDB MODEL CHECKING, DOI DOI 10.1007/978-3-319-10575-8
   Clavel M, 2002, THEOR COMPUT SCI, V285, P187, DOI 10.1016/S0304-3975(01)00359-0
   DannyWeyns Bradley, 2013, Revised Selected and Invited Papers, P76, DOI [10.1007/978-3-642-35813-5_4, DOI 10.1007/978-3-642-35813-5_4]
   Doucet F, 2003, DESIGN, AUTOMATION AND TEST IN EUROPE CONFERENCE AND EXHIBITION, PROCEEDINGS, P382
   Emerson EA, 1997, LECT NOTES COMPUT SC, V1217, P19, DOI 10.1007/BFb0035378
   Escobar S, 2014, INFORM COMPUT, V238, P157, DOI 10.1016/j.ic.2014.07.007
   Ferrarotti F, 2018, LECT NOTES COMPUT SC, V10742, P117, DOI 10.1007/978-3-319-74313-4_10
   Flanagan D., 2005, JAVA NUTSHELL
   Grech N., 2018, PROC 32 EUR C OBJECT
   HAREL D, 1987, SCI COMPUT PROGRAM, V8, P231, DOI 10.1016/0167-6423(87)90035-9
   Holzmann GJ, 2004, The SPIN model checker: primer and reference manual, V1003
   Klarl A, 2015, 2015 IEEE 24TH INTERNATIONAL CONFERENCE ON ENABLING TECHNOLOGIES - INFRASTRUCTURE FOR COLLABORATIVE ENTERPRISES, P3, DOI 10.1109/WETICE.2015.32
   Kramer J, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P259, DOI 10.1109/FOSE.2007.19
   Kyungmin Bae, 2014, Rewriting and Typed Lambda Calculi. Joint International Conference, RTA-TLCA 2014, Held as Part of the Vienna Summer of Logic, VSL 2014. Proceedings: LNCS 8560, P61, DOI 10.1007/978-3-319-08918-8_5
   Li Y, 2019, ACM T SOFTW ENG METH, V28, DOI 10.1145/3295739
   MAES P, 1987, SIGPLAN NOTICES, V22, P147
   Meseguer J, 2008, THEOR COMPUT SCI, V403, P239, DOI 10.1016/j.tcs.2008.04.040
   Meseguer J, 2020, J LOG ALGEBR METHODS, V110, DOI 10.1016/j.jlamp.2019.100483
   Nahabedian L, 2016, PROCEEDINGS OF 2016 IEEE/ACM 11TH INTERNATIONAL SYMPOSIUM ON SOFTWARE ENGINEERING FOR ADAPTIVE AND SELF-MANAGING SYSTEMS (SEAMS), P96, DOI [10.1109/SEAMS.2016.019, 10.1145/2897053.2897056]
   Nahabedian L, 2020, IEEE T SOFTWARE ENG, V46, P1220, DOI 10.1109/TSE.2018.2876843
   Salehie M, 2009, ACM T AUTON ADAP SYS, V4, DOI 10.1145/1516533.1516538
   Sawyer P., 2010, Proceedings of the 2010 IEEE 18th International Conference on Requirements Engineering (RE2010), P95, DOI 10.1109/RE.2010.21
   Schewe Klaus-Dieter, 2018, Abstract State Machines, Alloy, B, TLA, VDM, and Z. 6th International Conference, ABZ 2018. Proceedings: LNCS 10817, P16, DOI 10.1007/978-3-319-91271-4_2
   Smith B. C., 1984, P 11 ACM SIGACT SIGP, P23, DOI [DOI 10.1145/800017.800513, 10.1145/800017.800513]
   Sun J, 2009, LECT NOTES COMPUT SC, V5643, P709, DOI 10.1007/978-3-642-02658-4_59
   Sykes Daniel., 2008, Proceedings of the 2008 international workshop on Software engineering for adaptive and self-managing systems, SEAMS '08, P1
   Tahara Yasuyuki, 2017, 2017 IEEE/ACM 12th International Symposium on Software Engineering for Adaptive and Self-Managing Systems (SEAMS). Proceedings, P152, DOI 10.1109/SEAMS.2017.4
   Vogel T, 2014, ACM T AUTON ADAP SYS, V8, DOI 10.1145/2555612
   Weissbach M, 2016, 2016 IEEE 3RD WORLD FORUM ON INTERNET OF THINGS (WF-IOT), P171, DOI 10.1109/WF-IoT.2016.7845450
   Weyns D, 2012, ACM T AUTON ADAP SYS, V7, DOI 10.1145/2168260.2168268
NR 42
TC 1
Z9 1
U1 1
U2 3
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAR 1
PY 2023
VL 49
IS 3
BP 1299
EP 1322
DI 10.1109/TSE.2022.3174408
PG 24
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA A1QF2
UT WOS:000952938700017
OA hybrid
DA 2024-07-18
ER

PT J
AU Iannone, E
   Guadagni, R
   Ferrucci, F
   De Lucia, A
   Palomba, F
AF Iannone, Emanuele
   Guadagni, Roberta
   Ferrucci, Filomena
   De Lucia, Andrea
   Palomba, Fabio
TI The Secret Life of Software Vulnerabilities: A Large-Scale Empirical
   Study
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Software vulnerabilities; mining software repositories; empirical
   software engineering
ID PREDICTION MODELS; CLASSIFICATION; ACCURACY; SMELL
AB Software vulnerabilities are weaknesses in source code that can be potentially exploited to cause loss or harm. While researchers have been devising a number of methods to deal with vulnerabilities, there is still a noticeable lack of knowledge on their software engineering life cycle, for example how vulnerabilities are introduced and removed by developers. This information can be exploited to design more effective methods for vulnerability prevention and detection, as well as to understand the granularity at which these methods should aim. To investigate the life cycle of known software vulnerabilities, we focus on how, when, and under which circumstances the contributions to the introduction of vulnerabilities in software projects are made, as well as how long, and how they are removed. We consider 3,663 vulnerabilities with public patches from the National Vulnerability Database-pertaining to 1,096 open-source software projects on GitHub-and define an eight-step process involving both automated parts (e.g., using a procedure based on the SZZ algorithm to find the vulnerability-contributing commits) and manual analyses (e.g., how vulnerabilities were fixed). The investigated vulnerabilities can be classified in 144 categories, take on average at least 4 contributing commits before being introduced, and half of them remain unfixed for at least more than one year. Most of the contributions are done by developers with high workload, often when doing maintenance activities, and removed mostly with the addition of new source code aiming at implementing further checks on inputs. We conclude by distilling practical implications on how vulnerability detectors should work to assist developers in timely identifying these issues.
C1 [Iannone, Emanuele; Guadagni, Roberta; Ferrucci, Filomena; De Lucia, Andrea; Palomba, Fabio] Univ Salerno, Software Engn SeSa Lab, I-84084 Fisciano, Italy.
C3 University of Salerno
RP Iannone, E (corresponding author), Univ Salerno, Software Engn SeSa Lab, I-84084 Fisciano, Italy.
EM r.guadagni1@studenti.unisa.it; eiannone@unisa.it; fferrucci@unisa.it;
   adelucia@unisa.it; fpalomba@unisa.it
RI Iannone, Emanuele/ABK-1299-2022
OI Iannone, Emanuele/0000-0001-7489-9969; FERRUCCI,
   Filomena/0000-0002-0975-8972; Palomba, Fabio/0000-0001-9337-5116; De
   Lucia, Andrea/0000-0002-4238-1425
FU Swiss National Science Foundation - SNF [PZ00P2_186090]; Swiss National
   Science Foundation (SNF) [PZ00P2_186090] Funding Source: Swiss National
   Science Foundation (SNF)
FX The work of Fabio Palomba was supported in part by Swiss National
   ScienceFoundation - SNF Project under Grant PZ00P2_186090 (TED).
CR Abid C., IEEE T SOFTWARE ENG, DOI DOI 10.1109/TSE.2020.3005995
   Alhazmi OH, 2007, COMPUT SECUR, V26, P219, DOI 10.1016/j.cose.2006.10.002
   Aloraini B, 2019, J SYST SOFTWARE, V158, DOI 10.1016/j.jss.2019.110427
   Aranha DF, 2019, COMPUT SECUR, V86, P335, DOI 10.1016/j.cose.2019.06.009
   Ardi S, 2007, ARES 2007: SECOND INTERNATIONAL CONFERENCE ON AVAILABILITY, RELIABILITY AND SECURITY, PROCEEDINGS, P1017
   Austin A, 2011, INT SYMP EMP SOFTWAR, P97, DOI 10.1109/ESEM.2011.18
   Avancini A, 2011, IEEE INT WORK C SO, P85, DOI 10.1109/SCAM.2011.7
   Baddoo N, 2003, J SYST SOFTWARE, V66, P23, DOI 10.1016/S0164-1212(02)00060-2
   Bartsch S., 2011, 2011 Sixth International Conference on Availability, Reliability and Security, P479, DOI 10.1109/ARES.2011.82
   Bavota G., 2012, 2012 12th IEEE Working Conference on Source Code Analysis and Manipulation (SCAM 2012), P104, DOI 10.1109/SCAM.2012.20
   Bavota G, 2015, J SYST SOFTWARE, V107, P1, DOI 10.1016/j.jss.2015.05.024
   Borges H, 2016, PROC IEEE INT CONF S, P334, DOI 10.1109/ICSME.2016.31
   Canfora G, 2005, 2005 11TH INTERNATIONAL SYMPOSIUM ON SOFTWARE METRICS (METRICS), P259
   Canfora G, 2020, COMPUT SECUR, V99, DOI 10.1016/j.cose.2070.10706
   Castro M, 2006, Usenix Association 7th Usenix Symposium on Operating Systems Design and Implementation, P147
   Catolino G, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN SOCIETY (ICSE-SEIS 2019), P11, DOI 10.1109/ICSE-SEIS.2019.00010
   Catolino G, 2018, J SYST SOFTWARE, V143, P14, DOI 10.1016/j.jss.2018.05.003
   Ceccato M, 2016, IEEE INT CONF AUTOM, P167, DOI 10.1145/2970276.2970343
   CHILLAREGE R, 1992, IEEE T SOFTWARE ENG, V18, P943, DOI 10.1109/32.177364
   Chowdhury I, 2011, J SYST ARCHITECT, V57, P294, DOI 10.1016/j.sysarc.2010.06.003
   COHEN J, 1960, EDUC PSYCHOL MEAS, V20, P37, DOI 10.1177/001316446002000104
   CppCheck, 2022, About us
   cve mitre, 2022, COMM VULN EXP
   cwe.mitre, 2020, CWE Top 25 Most Dangerous Softw. Weaknesses
   da Costa DA, 2017, IEEE T SOFTWARE ENG, V43, P641, DOI 10.1109/TSE.2016.2616306
   di Biase M, 2016, IEEE INT WORK C SO, P21, DOI 10.1109/SCAM.2016.30
   Di Nucci D, 2018, IEEE T SOFTWARE ENG, V44, P5, DOI 10.1109/TSE.2017.2659747
   Du Bois B, 2004, 11TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P144, DOI 10.1109/WCRE.2004.33
   dwheeler, 2022, FLAWFINDER
   Finifter M., 2013, 22 USENIX SECURITY S, P273
   Fowler M., 1999, Refactoring: Improving the Design of Existing Code
   Fraser G, 2013, IEEE T SOFTWARE ENG, V39, P276, DOI 10.1109/TSE.2012.14
   Frei S, 2010, ECONOMICS OF INFORMATION SECURITY AND PRIVACY, P79, DOI 10.1007/978-1-4419-6967-5_6
   Fu Y, 2015, INFORM SOFTWARE TECH, V57, P369, DOI 10.1016/j.infsof.2014.05.017
   git scm, 2022, GIT GIT MERG DOC
   github, 2022, CVE SEARCH TOOL
   Patro SGK, 2015, Arxiv, DOI arXiv:1503.06462
   Heagerty PJ, 2005, BIOMETRICS, V61, P92, DOI 10.1111/j.0006-341X.2005.030814.x
   Henderson R, 2001, STAT MED, V20, P3083, DOI 10.1002/sim.913
   Herzig K, 2013, IEEE WORK CONF MIN S, P121, DOI 10.1109/MSR.2013.6624018
   Hindle A, 2009, INT C PROGRAM COMPRE, P30, DOI 10.1109/ICPC.2009.5090025
   Hindle Abram, 2008, P 2008 INT WORKING C, P99
   Hsieh HF, 2005, QUAL HEALTH RES, V15, P1277, DOI 10.1177/1049732305276687
   Huang SG, 2010, INT C COMPUT ENG APP, P295, DOI 10.1109/ICCEA.2010.209
   Iannone E., 2022, SECRET LIFE SOFTWARE
   Jin GL, 2012, ACM SIGPLAN NOTICES, V47, P77, DOI 10.1145/2345156.2254075
   Jovanovic N, 2006, P IEEE S SECUR PRIV, P258, DOI 10.1109/SP.2006.29
   Kamei Y, 2013, IEEE T SOFTWARE ENG, V39, P757, DOI 10.1109/TSE.2012.70
   KAPLAN EL, 1958, J AM STAT ASSOC, V53, P457, DOI 10.2307/2281868
   Kitchenham B. A., 1996, SIGSOFT Software Engineering Notes, V21, P11, DOI 10.1145/381790.381795
   Kitchenham BA, 2004, PROC INT CONF SOFTW, P273
   Li F, 2017, CCS'17: PROCEEDINGS OF THE 2017 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P2201, DOI 10.1145/3133956.3134072
   Liu MY, 2019, PROCEEDINGS OF THE 2019 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE COMPANION (GECCCO'19 COMPANION), P417, DOI 10.1145/3319619.3322026
   Livshits VB, 2005, USENIX ASSOCIATION PROCEEDINGS OF THE 14TH USENIX SECURITY SYMPOSIUM, P271
   liwerski J, 2005, ACM SIGSOFT SOFTWARE, V30, P1, DOI [10.1145/1082983.1083147, DOI 10.1145/1083142.1083147, DOI 10.1145/1082983.1083147]
   Martin M, 2005, ACM SIGPLAN NOTICES, V40, P365, DOI 10.1145/1103845.1094840
   McGraw G., 2006, Software security: building security in
   McHugh ML, 2012, BIOCHEM MEDICA, V22, P276, DOI 10.11613/bm.2012.031
   Mell P, 2006, IEEE SECUR PRIV, V4, P85, DOI 10.1109/MSP.2006.145
   Meneely Andrew, 2013, 2013 ACM / IEEE International Symposium on Empirical Software Engineering and Measurement (ESEM), P65, DOI 10.1109/ESEM.2013.19
   Menzies T, 2013, IEEE T SOFTWARE ENG, V39, P822, DOI 10.1109/TSE.2012.83
   Miller RupertG., 2011, Survival analysis
   Mirhosseini S, 2017, IEEE INT CONF AUTOM, P84, DOI 10.1109/ASE.2017.8115621
   Morrison Patrick., 2017, P HOT TOPICS SCI SEC, P85, DOI DOI 10.1145/3055305.3055312
   Morrison PJ, 2018, EMPIR SOFTW ENG, V23, P1383, DOI 10.1007/s10664-017-9541-1
   Muniz R, 2017, ACM INT CONF PR SER, P51, DOI 10.1145/3168365.3168382
   Murphy-Bill E, 2008, IEEE SOFTWARE, V25, P38, DOI 10.1109/MS.2008.123
   Murphy-Hill E, 2012, IEEE T SOFTWARE ENG, V38, P5, DOI 10.1109/TSE.2011.41
   Nagaria B, 2022, IEEE T SOFTWARE ENG, V48, P1853, DOI 10.1109/TSE.2020.3040554
   Neuhaus S, 2007, CCS'07: PROCEEDINGS OF THE 14TH ACM CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P529
   nvd nist, 2022, VULN METR
   nvd nist, 2022, NAT VULN DAT
   Oliveira D., 2014, P 30 ANN COMP SEC AP, P296, DOI [10.1145/2664243.2664254, DOI 10.1145/2664243.2664254]
   Palomba F, 2016, P 25 INT S SOFTW TES, P130, DOI [10.1145/2931037.2931057, DOI 10.1145/2931037.2931057]
   Palomba F, 2021, IEEE T SOFTWARE ENG, V47, P108, DOI 10.1109/TSE.2018.2883603
   Palomba F, 2018, IEEE T SOFTWARE ENG, V44, P977, DOI 10.1109/TSE.2017.2752171
   pandasecurity, 2018, MED
   PARNAS DL, 1994, PROC INT CONF SOFTW, P279, DOI 10.1109/ICSE.1994.296790
   Pascarella Luca, 2018, Proceedings of the ACM on Human-Computer Interaction, V2, DOI 10.1145/3274404
   Pascarella L, 2019, J SYST SOFTWARE, V150, P22, DOI 10.1016/j.jss.2018.12.001
   Pecorelli F, 2020, IEEE WORK CONF MIN S, P220, DOI 10.1145/3379597.3387457
   Perl H, 2015, CCS'15: PROCEEDINGS OF THE 22ND ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P426, DOI 10.1145/2810103.2813604
   Pfleeger C. P., 2002, Security in computing
   Poller A, 2017, CSCW'17: PROCEEDINGS OF THE 2017 ACM CONFERENCE ON COMPUTER SUPPORTED COOPERATIVE WORK AND SOCIAL COMPUTING, P2489, DOI 10.1145/2998181.2998191
   Reason J., 1990, Human error, DOI [10.1017/CBO9781139062367, DOI 10.1017/CBO9781139062367]
   Rodríguez-Pérez G, 2022, IEEE T SOFTWARE ENG, V48, P1400, DOI 10.1109/TSE.2020.3021380
   Rodríguez-Pérez G, 2018, INFORM SOFTWARE TECH, V99, P164, DOI 10.1016/j.infsof.2018.03.009
   Sae-Lim N., 2016, P IEEE 24 INT C PROG, P1, DOI [DOI 10.1109/ICPC.2016.7503705, 10.1109/ICPC.2016.7503705]
   Sahal E., 2018, P 12 ACM IEEE INT S, P1
   Scholte T, 2012, COMPUT SECUR, V31, P344, DOI 10.1016/j.cose.2011.12.013
   Shahzad M, 2012, PROC INT CONF SOFTW, P771, DOI 10.1109/ICSE.2012.6227141
   Shar LK, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P642, DOI 10.1109/ICSE.2013.6606610
   Shirey R.W., 2007, INTERNET SECURITY GL
   Smith B., 2011, Proceedings 2011 IEEE Fourth International Conference on Software Testing, Verification and Validation (ICST 2011), P220, DOI 10.1109/ICST.2011.15
   Smith J, 2019, IEEE T SOFTWARE ENG, V45, P877, DOI 10.1109/TSE.2018.2810116
   Spadini D, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P908, DOI 10.1145/3236024.3264598
   Spearman C, 2010, INT J EPIDEMIOL, V39, P1137, DOI 10.1093/ije/dyq191
   spotbugs, 2022, US
   Su Zhang, 2011, Database and Expert Systems Applications. Proceedings 22nd International Conference, DEXA 2011, P217, DOI 10.1007/978-3-642-23088-2_15
   Thomas TW, 2018, PROCEEDINGS OF THE 2018 CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS (CHI 2018), DOI 10.1145/3173574.3173836
   Tufano M, 2017, IEEE T SOFTWARE ENG, V43, P1063, DOI 10.1109/TSE.2017.2653105
   Tufano M, 2017, J SOFTW-EVOL PROC, V29, DOI 10.1002/smr.1838
   U.S. NIST computer security division, 2022, US
   Vasilescu B, 2015, CHI 2015: PROCEEDINGS OF THE 33RD ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, P3789, DOI 10.1145/2702123.2702549
   Vassallo C, 2019, SCI COMPUT PROGRAM, V180, P1, DOI 10.1016/j.scico.2019.05.002
   wikipedia, 2017, WANN RANS ATT
   Yang LM, 2017, IEEE GLOB COMM CONF
   Zeller A., 2005, Why Programs Fail: A Guide to Systematic Debugging
NR 108
TC 16
Z9 16
U1 0
U2 5
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JAN 1
PY 2023
VL 49
IS 1
BP 44
EP 63
DI 10.1109/TSE.2022.3140868
PG 20
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA L1HD8
UT WOS:001020827200003
DA 2024-07-18
ER

PT J
AU Li, LP
   Liu, H
   Li, KJ
   Jiang, YJ
   Sun, R
AF Li, Leping
   Liu, Hui
   Li, Kejun
   Jiang, Yanjie
   Sun, Rui
TI Generating Concise Patches for Newly Released Programming Assignments
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Maintenance engineering; Codes; Task analysis; Programming profession;
   Cloning; Location awareness; Syntactics; Feedback generation; program
   repair; programming assignments
ID REPAIR
AB In programming courses, providing students with concise and constructive feedback on faulty submissions (programs) is highly desirable. However, providing feedback manually is often time-consuming and tedious. To release tutors from the manual construction of concise feedback, researchers have proposed approaches such as CLARA and Refactory to construct feedback automatically. The key to such approaches is to fix a faulty program by making it equivalent to one of its correct reference programs whose overall structure is identical to that of the faulty submission. However, for a newly released assignment, it is likely that there are no correct reference programs at all, let alone correct reference programs sharing identical structure with the faulty submission. Therefore, in this paper, we propose AssignmentMender generating concise patches for newly released assignments. The key insight of AssignmentMender is that a faulty submission can be repaired by reusing fine-grained code snippets from submissions (even when they are faulty) for the same assignment. It automatically locates suspicious code in the faulty program and leverages static analysis to retrieve reference code from existing submissions with a graph-based matching algorithm. Finally, it generates candidate patches by modifying the suspicious code based on the reference code. Different from existing approaches, AssignmentMender exploits faulty submissions in addition to bug-free submissions to generate patches. Another advantage of AssignmentMender is that it can leverage submissions whose overall structures are different from those of the to-be-fixed submission. Evaluation results on 128 faulty submissions from 10 assignments show that AssignmentMender improves the state-of-the-art in feedback generation for newly released assignments. A case study involving 40 students and 80 submissions further provides initial evidence showing that the proposed approach is useful in practice.
C1 [Li, Leping; Liu, Hui; Li, Kejun; Jiang, Yanjie] Beijing Inst Technol, Sch Comp Sci & Technol, Beijing 100081, Peoples R China.
   [Sun, Rui] Baidu Inc, Beijing 100085, Peoples R China.
C3 Beijing Institute of Technology; Baidu
RP Liu, H (corresponding author), Beijing Inst Technol, Sch Comp Sci & Technol, Beijing 100081, Peoples R China.
EM 3120170473@bit.edu.cn; liuhui08@bit.edu.cn; likejun@bit.edu.cn;
   jiangyanjie@bit.edu.cn; sr19930829@163.com
OI Liu, Hui/0000-0002-3267-6801
FU National Natural Science Foundation of China [61690205, 62172037]
FX This work was supported by the National Natural Science Foundation of
   China under Grants 61690205 and 62172037.
CR Abreu R, 2006, 12TH PACIFIC RIM INTERNATIONAL SYMPOSIUM ON DEPENDABLE COMPUTING, PROCEEDINGS, P39
   Abreu R, 2009, IEEE INT CONF AUTOM, P88, DOI 10.1109/ASE.2009.25
   Ackling T, 2011, GECCO-2011: PROCEEDINGS OF THE 13TH ANNUAL GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P1427
   [Anonymous], LINKS TASKS
   Arcuri A, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P1003
   Assiri FY, 2014, 2014 IEEE SEVENTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST), P273, DOI 10.1109/ICST.2014.40
   Chen MY, 2002, INTERNATIONAL CONFERENCE ON DEPENDABLE SYSTEMS AND NETWORKS, PROCEEDINGS, P595, DOI 10.1109/DSN.2002.1029005
   CodeForces, 2019, US
   Debroy Vidroha, 2010, Proceedings of the Third IEEE International Conference on Software Testing, Verification and Validation (ICST 2010), P65, DOI 10.1109/ICST.2010.66
   Gulwani S, 2018, ACM SIGPLAN NOTICES, V53, P465, DOI [10.1145/3192366.3192387, 10.1145/3296979.3192387]
   Gulwani S, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P41, DOI 10.1145/2635868.2635912
   Hu Y, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P388, DOI 10.1109/ASE.2019.00044
   Jia Y, 2011, IEEE T SOFTWARE ENG, V37, P649, DOI 10.1109/TSE.2010.62
   Jiang JJ, 2018, ISSTA'18: PROCEEDINGS OF THE 27TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P298, DOI 10.1145/3213846.3213871
   Jones JA, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P467, DOI 10.1109/ICSE.2002.1007991
   Just R, 2014, P 2014 INT S SOFTW T, P437, DOI DOI 10.1145/2610384.2628055
   Kaleeswaran S, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P739, DOI 10.1145/2950290.2950363
   Ke YL, 2015, IEEE INT CONF AUTOM, P295, DOI 10.1109/ASE.2015.60
   Kou R, 2016, INT WORKSH EMPIR ENG, P45, DOI 10.1109/IWESEP.2016.15
   Le XBD, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P593, DOI 10.1145/3106237.3106309
   Le XBD, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P213, DOI 10.1109/SANER.2016.76
   Liu K, 2020, PROC INT CONF SOFTW, P615, DOI 10.1145/3377811.3380338
   Liu K, 2018, PROC IEEE INT CONF S, P275, DOI 10.1109/ICSME.2018.00037
   Long F, 2016, ACM SIGPLAN NOTICES, V51, P298, DOI 10.1145/2914770.2837617
   Mechtaev S, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P129, DOI 10.1145/3180155.3180247
   Mechtaev S, 2016, PROC INT CONF SOFTW, P691, DOI 10.1145/2884781.2884807
   Monperrus M, 2018, ACM COMPUT SURV, V51, DOI 10.1145/3105906
   Ray B, 2016, PROC INT CONF SOFTW, P428, DOI 10.1145/2884781.2884848
   Rolim R, 2017, PROC INT CONF SOFTW, P404, DOI 10.1109/ICSE.2017.44
   SHENEAMER A, 2016, INT J COMPUTER APPL, V137, P1, DOI DOI 10.5120/IJCA2016908896
   Singh R, 2013, ACM SIGPLAN NOTICES, V48, P15, DOI 10.1145/2499370.2462195
   Wang K, 2018, PROCEEDINGS OF THE 39TH ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, PLDI 2018, P481, DOI 10.1145/3192366.3192384
   Wei HH, 2017, PROCEEDINGS OF THE TWENTY-SIXTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P3034
   Weimer W, 2009, PROC INT CONF SOFTW, P364, DOI 10.1109/ICSE.2009.5070536
   White M, 2016, IEEE INT CONF AUTOM, P87, DOI 10.1145/2970276.2970326
   Wong WE, 2016, IEEE T SOFTWARE ENG, V42, P707, DOI 10.1109/TSE.2016.2521368
   Xin Q, 2017, IEEE INT CONF AUTOM, P660, DOI 10.1109/ASE.2017.8115676
   Xiong YF, 2017, PROC INT CONF SOFTW, P416, DOI 10.1109/ICSE.2017.45
   Xuan JF, 2017, IEEE T SOFTWARE ENG, V43, P34, DOI 10.1109/TSE.2016.2560811
   Yi JY, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P740, DOI 10.1145/3106237.3106262
   Zimmerman K, 2015, IEEE INT CONF AUTOM, P283, DOI 10.1109/ASE.2015.54
NR 41
TC 5
Z9 5
U1 1
U2 2
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JAN 1
PY 2023
VL 49
IS 1
BP 450
EP 467
DI 10.1109/TSE.2022.3153522
PG 18
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA L1HD8
UT WOS:001020827200024
DA 2024-07-18
ER

PT J
AU Tabassum, S
   Minku, LL
   Feng, DY
AF Tabassum, Sadia
   Minku, Leandro L.
   Feng, Danyi
TI Cross-Project Online Just-In-Time Software Defect Prediction
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Training; Software; Training data; Predictive models; Codes; Resource
   management; Open source software; Software defect prediction;
   cross-project learning; transfer learning; online learning; verification
   latency; concept drift
ID MACHINE
AB Cross-Project (CP) Just-In-Time Software Defect Prediction (JIT-SDP) makes use of CP data to overcome the lack of data necessary to train well performing JIT-SDP classifiers at the beginning of software projects. However, such approaches have never been investigated in realistic online learning scenarios, where Within-Project (WP) software changes naturally arrive over time and can be used to automatically update the classifiers. We provide the first investigation of when and to what extent CP data are useful for JIT-SDP in such realistic scenarios. For that, we propose three different online CP JIT-SDP approaches that can be updated with incoming CP and WP training examples over time. We also collect data on 9 proprietary software projects and use 10 open source software projects to analyse these approaches. We find that training classifiers with incoming CP+WP data can lead to absolute improvements in G-mean of up to 53.89% and up to 35.02% at the initial stage of the projects compared to classifiers using WP-only and CP-only data, respectively. Using CP+WP data was also shown to be beneficial after a large number of WP data were received. Using CP data to supplement WP data helped the classifiers to reduce or prevent large drops in predictive performance that may occur over time, leading to absolute G-Mean improvements of up to 37.35% and 48.16% compared to WP-only and CP-only data during such periods, respectively. During periods of stable predictive performance, absolute improvements were of up to 29.03% and up to 41.25% compared to WP-only and CP-only classifiers, respectively. Our results highlight the importance of using both CP and WP data together in realistic online JIT-SDP scenarios.
C1 [Tabassum, Sadia; Minku, Leandro L.] Univ Birminigham, Sch Comp Sci, Birmingham B15 2TT, England.
   [Feng, Danyi] Xiliu Tech, Beijing 100050, Peoples R China.
RP Minku, LL (corresponding author), Univ Birminigham, Sch Comp Sci, Birmingham B15 2TT, England.
EM sxt901@cs.bham.ac.uk; L.L.Minku@bham.ac.uk; danyi@ouchteam.com
OI Tabassum, Sadia/0000-0002-5096-7100; Minku, Leandro/0000-0002-2639-0671
FU EPSRC [EP/R006660/2]; EPSRC [EP/R006660/2] Funding Source: UKRI
FX This work was supported by EPSRC under Grant EP/R006660/2.
CR Agrawal A, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1050, DOI 10.1145/3180155.3180197
   Cabral GG, 2019, PROC INT CONF SOFTW, P666, DOI 10.1109/ICSE.2019.00076
   Canfora G, 2013, 2013 IEEE SIXTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST 2013), P252, DOI 10.1109/ICST.2013.38
   Catolino G, 2019, 2019 IEEE/ACM 6TH INTERNATIONAL CONFERENCE ON MOBILE SOFTWARE ENGINEERING AND SYSTEMS (MOBILESOFT 2019), P99, DOI 10.1109/MOBILESoft.2019.00023
   Chen X, 2018, INFORM SOFTWARE TECH, V93, P1, DOI 10.1016/j.infsof.2017.08.004
   Demsar J, 2006, J MACH LEARN RES, V7, P1
   Ditzler G, 2015, IEEE COMPUT INTELL M, V10, P12, DOI 10.1109/MCI.2015.2471196
   Domingos P., 2000, Proceedings. KDD-2000. Sixth ACM SIGKDD International Conference on Knowledge Discovery and Data Mining, P71, DOI 10.1145/347090.347107
   Duarte M., 2020, detecta: A python module to detect events in data
   Falessi D, 2020, EMPIR SOFTW ENG, V25, P4805, DOI 10.1007/s10664-020-09868-x
   Fan YR, 2021, IEEE T SOFTWARE ENG, V47, P1559, DOI 10.1109/TSE.2019.2929761
   Flint SW, 2021, IEEE WORK CONF MIN S, P85, DOI 10.1109/MSR52588.2021.00022
   Gama J, 2013, MACH LEARN, V90, P317, DOI 10.1007/s10994-012-5320-9
   Gyimóthy T, 2005, IEEE T SOFTWARE ENG, V31, P897, DOI 10.1109/TSE.2005.112
   Hall T, 2012, IEEE T SOFTWARE ENG, V38, P1276, DOI 10.1109/TSE.2011.103
   Harman M, 2014, LECT NOTES COMPUT SC, V8636, P240
   He ZM, 2012, AUTOMAT SOFTW ENG, V19, P167, DOI 10.1007/s10515-011-0090-3
   Jing XY, 2017, IEEE T SOFTWARE ENG, V43, P321, DOI 10.1109/TSE.2016.2597849
   Kamei Y, 2016, EMPIR SOFTW ENG, V21, P2072, DOI 10.1007/s10664-015-9400-x
   Kamei Y, 2013, IEEE T SOFTWARE ENG, V39, P757, DOI 10.1109/TSE.2012.70
   Li J, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY AND SECURITY (QRS), P318, DOI 10.1109/QRS.2017.42
   Malhotra R, 2015, APPL SOFT COMPUT, V27, P504, DOI 10.1016/j.asoc.2014.11.023
   McIntosh S, 2018, IEEE T SOFTWARE ENG, V44, P412, DOI 10.1109/TSE.2017.2693980
   Mende T, 2010, EUR CON SFTWR MTNCE, P107, DOI 10.1109/CSMR.2010.18
   Menzies T, 2017, EMPIR SOFTW ENG, V22, P2658, DOI 10.1007/s10664-016-9472-2
   Minku L. L., 2020, COMMITGURU CHINESE 1
   Mittas N, 2013, IEEE T SOFTWARE ENG, V39, P537, DOI 10.1109/TSE.2012.45
   Moser R, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P181, DOI 10.1145/1368088.1368114
   Nam J, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P382, DOI 10.1109/ICSE.2013.6606584
   Panichella A, 2014, 2014 SOFTWARE EVOLUTION WEEK - IEEE CONFERENCE ON SOFTWARE MAINTENANCE, REENGINEERING, AND REVERSE ENGINEERING (CSMR-WCRE), P164, DOI 10.1109/CSMR-WCRE.2014.6747166
   Rosen C, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P966, DOI 10.1145/2786805.2803183
   Ryu D, 2017, SOFTWARE QUAL J, V25, P235, DOI 10.1007/s11219-015-9287-1
   Ryu D, 2016, EMPIR SOFTW ENG, V21, P43, DOI 10.1007/s10664-014-9346-4
   Song QB, 2019, IEEE T SOFTWARE ENG, V45, P1253, DOI 10.1109/TSE.2018.2836442
   Tabassum S, 2020, PROC INT CONF SOFTW, P554, DOI 10.1145/3377811.3380403
   Tan M, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P99, DOI 10.1109/ICSE.2015.139
   Vapnik V.N., 2000, The Nature of Statistical Learning Theory, DOI DOI 10.1007/978-1-4757-3264-1_1
   Vargha A, 2000, J EDUC BEHAV STAT, V25, P101, DOI 10.3102/10769986025002101
   Wahono R. S., 2015, Journal of Software Engineering, V1, P1
   Wang S, 2018, IEEE T NEUR NET LEAR, V29, P4802, DOI 10.1109/TNNLS.2017.2771290
   Wang TJ, 2016, AUTOMAT SOFTW ENG, V23, P569, DOI 10.1007/s10515-015-0179-1
   Zhimin He, 2013, 2013 ACM / IEEE International Symposium on Empirical Software Engineering and Measurement (ESEM), P45, DOI 10.1109/ESEM.2013.20
   Zhu K, 2020, IET SOFTW, V14, P185, DOI 10.1049/iet-sen.2019.0278
   Zhu QM, 2020, PATTERN RECOGN LETT, V136, P71, DOI 10.1016/j.patrec.2020.03.030
   Zimmerman T, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P91, DOI 10.1145/1595696.1595713
NR 45
TC 8
Z9 8
U1 2
U2 4
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JAN 1
PY 2023
VL 49
IS 1
BP 268
EP 287
DI 10.1109/TSE.2022.3150153
PG 20
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA L1HD8
UT WOS:001020827200014
OA Green Published
DA 2024-07-18
ER

PT J
AU Spray, J
   Sinha, R
   Sen, A
   Cheng, XB
AF Spray, John
   Sinha, Roopak
   Sen, Arnab
   Cheng, Xingbin
TI Building Maintainable Software Using Abstraction Layering
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Codes; Software; Programming; Couplings; Measurement; Maintenance
   engineering; ISO Standards; Maintainability; ALA; modularity;
   reusability; analysability; modifiability; testability
ID METRICS
AB Increased software maintainability can help improve a company's profitability by directly reducing ongoing software development costs. Abstraction Layered Architecture (ALA) is a reference architecture for building maintainable applications, but its effectiveness in commercial projects has remained unexplored. This research, carried out as a 16-month joint industry-academic project, explores developing commercial code bases using ALA and the extent to which ALA improves maintainability. An existing application from Datamars, New Zealand, was re-developed by using ALA and compared with the original application. In order to carry out these comparisons, we developed suitable measures by adapting maintainability characteristics from the ISO 25010 family of standards. Specifically, we determined metrics to capture the five sub-characteristics of maintainability: modularity, reusability, analysability, modifiability, and testability; and used them to test our hypothesis that the use of ALA improved maintainability of the application. During the evaluation, we found that the modularity, reusability, analysability, and testability of the re-developed ALA application were higher than for the original application. The modifiability of the ALA-based application was lower in the short-term, but shown to trend upwards in the longer term. Our findings led to proposing a generalised ALA-based development method that promises a significant reduction in maintenance costs.
C1 [Spray, John; Cheng, Xingbin] Datamars, Auckland 1060, New Zealand.
   [Sinha, Roopak; Sen, Arnab] Auckland Univ Technol, Dept Comp Sci & Software Engn, Auckland 1010, New Zealand.
C3 Auckland University of Technology
RP Sinha, R (corresponding author), Auckland Univ Technol, Dept Comp Sci & Software Engn, Auckland 1010, New Zealand.
EM johnspray74@gmail.com; roopak.sinha@aut.ac.nz; arnab.sen210@gmail.com;
   dyx.scpro@gmail.com
RI Sinha, Roopak/T-3740-2019
OI Sinha, Roopak/0000-0001-9486-7833; Sen, Arnab/0000-0001-5216-9113; ,
   Rosman/0000-0001-7813-5077
FU Callaghan Innovation New Zealand Fellowship [DAMAE1802, DAMAE1903]
FX This research was supported by Callaghan Innovation New Zealand
   Fellowship Grants DAMAE1802 andDAMAE1903.
CR Abreu F. B., 1994, P 4 INT C SOFTW QUAL, V186, P1
   Aggarwal KK, 2006, PROC WRLD ACAD SCI E, V15, P285
   ALBRECHT AJ, 1983, IEEE T SOFTWARE ENG, V9, P639, DOI 10.1109/TSE.1983.235271
   [Anonymous], 1994, Object-oriented software metrics: a practical guide
   [Anonymous], 2016, 250232016 BS ISOIEC
   [Anonymous], 1977, Elements of software science
   [Anonymous], 2011, 250102011 BS ISOIEC
   Apel Sven, 2013, Feature-Oriented Software Product Lines-Concepts and Implementation, DOI DOI 10.1007/978-3-642-37521-7
   Arafat O., 2009, Proceedings of Proceedings of the 24th ACM SIGPLAN conference companion on Object oriented programming systems languages and applications, P857, DOI [10.1145/1639950.1640047, DOI 10.1145/1639950.1640047]
   Balaji S, 2012, International Journal of Information Technology and Business Management, V2, P26
   Banker R. D., 1991, Journal of Management Information Systems, V8, P127
   Bengtsson P, 2004, J SYST SOFTWARE, V69, P129, DOI 10.1016/S0164-1212(03)00080-3
   Boehm B., 1996, American Programmer, V9, P2
   Buschmann F., 2007, PATTERN ORIENTED SOF, V5
   CHEN JY, 1993, INFORM SOFTWARE TECH, V35, P232, DOI 10.1016/0950-5849(93)90071-A
   Cheng X., 2020, THESIS AUCKLAND U TE
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   Di Nucci D, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P612, DOI 10.1109/SANER.2018.8330266
   Evans E., 2003, Domain-Driven Design
   Feldt R, 2010, 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING & KNOWLEDGE ENGINEERING (SEKE 2010), P374
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   Goel B. M., 2012, INT J COMPUT APPL, V60, P32
   Harrison W. A., 1981, SIGPLAN Notices, V16, P63, DOI 10.1145/947825.947829
   HENRY S, 1981, IEEE T SOFTWARE ENG, V7, P510, DOI 10.1109/TSE.1981.231113
   Johnson RE, 1997, COMMUN ACM, V40, P39, DOI 10.1145/262793.262799
   Kaur U, 2015, INT J COMPUTER APPL, V118, DOI [10.5120/20707-3021, DOI 10.5120/20707-3021]
   KAZMAN R, 1994, PROC INT CONF SOFTW, P81, DOI 10.1109/ICSE.1994.296768
   Kitchenham B, 2009, INFORM SOFTWARE TECH, V51, P7, DOI 10.1016/j.infsof.2008.09.009
   Krasner Herb, 2018, COST POOR QUALITY SO
   KRUCHTEN PB, 1995, IEEE SOFTWARE, V12, P42, DOI 10.1109/52.469759
   Laing V., 2001, SATC3230814 NASA GOD, V771
   LI W, 1993, J SYST SOFTWARE, V23, P111, DOI 10.1016/0164-1212(93)90077-B
   Martin R. C., 2002, AGILE SOFTWARE DEV P
   McCabe T. J., 1976, IEEE Transactions on Software Engineering, VSE-2, P308, DOI 10.1109/TSE.1976.233837
   Noor K.B., 2008, American Journal of Applied Sciences, V5, P1602, DOI [DOI 10.3844/AJASSP.2008.1602.1604, 10.3844/ajassp, DOI 10.3844/AJASSP]
   Saraiva JDG, 2015, J SYST SOFTWARE, V103, P85, DOI 10.1016/j.jss.2015.01.014
   Sarkar S, 2006, ASPEC 2006: 13TH ASIA-PACIFIC SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P165
   Schwaber K., 1997, BUSINESS OBJECT DESI, DOI [10.1007/978-1-4471-0947-1_11, DOI 10.1007/978-1-4471-0947-1_11]
   Smacchia P, 2007, PRODUCT DESCRIPTION
   Spray J, 2018, LECT NOTES COMPUT SC, V11048, P131, DOI 10.1007/978-3-030-00761-4_9
   Steidl D, 2013, CONF PROC INT SYMP C, P83, DOI 10.1109/ICPC.2013.6613836
   Thönes J, 2015, IEEE SOFTWARE, V32, P116, DOI 10.1109/MS.2015.11
   Zhou YM, 2007, J SYST SOFTWARE, V80, P1349, DOI 10.1016/j.jss.2006.10.049
NR 43
TC 4
Z9 4
U1 1
U2 3
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD NOV 1
PY 2022
VL 48
IS 11
BP 4397
EP 4410
DI 10.1109/TSE.2021.3119012
PG 14
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 6C4JD
UT WOS:000881981800009
DA 2024-07-18
ER

PT J
AU Decan, A
   Mens, T
   Zerouali, A
   De Roover, C
AF Decan, Alexandre
   Mens, Tom
   Zerouali, Ahmed
   De Roover, Coen
TI Back to the Past - Analysing Backporting Practices in Package Dependency
   Networks
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE D.2 Software engineering; D.2.7 Distribution; Maintenance; and
   Enhancement; D.2.7.g Maintainability; D.2.7.n Version control; D.2.8
   Metrics/Measurement; D.2.13 Reusable software; D.2.13.b Reusable
   libraries; D.2.16 Configuration management; D.2.16.f Software release
   management and delivery
AB The practice of backporting aims to bring the benefits of a bug or vulnerability fix from a higher to a lower release of a software package. When such a package adheres to semantic versioning, backports can be recognised as new releases in a lower major train. This is particularly useful in case a substantial number of software packages continues to depend on that lower major train. In this article, we study the backporting practices in four popular package distributions, namely Cargo, npm, Packagist and RubyGems. We observe that many dependent packages could benefit from backports provided by their dependencies. In particular, we find that a majority of security vulnerabilities affect more than one major train but are only fixed in the highest one, letting thousands of dependent packages exposed to the vulnerability. Despite that, we find that backporting updates is quite infrequent, and mostly practised by long-lived and more active packages for a variety of reasons.
C1 [Decan, Alexandre; Mens, Tom] Univ Mons, Software Engn Lab, B-7000 Mons, Belgium.
   [Zerouali, Ahmed; De Roover, Coen] Vrije Univ Brussel, Software Languages Lab, B-1050 Brussels, Belgium.
C3 University of Mons; Vrije Universiteit Brussel
RP Decan, A (corresponding author), Univ Mons, Software Engn Lab, B-7000 Mons, Belgium.
EM alexandre.decan@umons.ac.be; tom.mens@umons.ac.be;
   ahmed.zerouali@vub.be; coen.de.roover@vub.be
RI Zerouali, Ahmed/AAH-4948-2020; Mens, Tom/B-6518-2013
OI Mens, Tom/0000-0003-3636-5020; De Roover, Coen/0000-0002-1710-1268
FU Belgian Science Foundation FWO Vlaanderen; Belgian Science Foundation
   F.R.S.-FNRS [O.0157.18F-RG43, T.0017.18]
FX This work was supported by the Belgian Science Foundations FWO
   Vlaanderen and F.R.S.-FNRS under Grants O.0157.18F-RG43 (Excellence of
   Science Project SECO-ASSIST) and T.0017.18.
CR Bird C, 2009, 2009 6TH IEEE INTERNATIONAL WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES, P1, DOI 10.1109/MSR.2009.5069475
   Bogart C., 2017, VALUES PRACTICES 18
   Bogart C, 2021, ACM T SOFTW ENG METH, V30, DOI 10.1145/3447245
   Bogart C, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P109, DOI 10.1145/2950290.2950325
   Chinthanet B, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-021-09951-x
   CLIFF N, 1993, PSYCHOL BULL, V114, P494, DOI 10.1037/0033-2909.114.3.494
   Cox J, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P109, DOI 10.1109/ICSE.2015.140
   Decan A., 2018, PORTION PYTHON DATA
   Decan A, 2021, IEEE T SOFTWARE ENG, V47, P1226, DOI 10.1109/TSE.2019.2918315
   Decan A, 2021, SCI COMPUT PROGRAM, V208, DOI 10.1016/j.scico.2021.102656
   Decan A, 2019, EMPIR SOFTW ENG, V24, P381, DOI 10.1007/s10664-017-9589-y
   Decan A, 2018, IEEE WORK CONF MIN S, P181, DOI 10.1145/3196398.3196401
   Decan A, 2018, PROC IEEE INT CONF S, P404, DOI 10.1109/ICSME.2018.00050
   Gonzalez-Barahona J. M., 2017, IFIP Advances in Information and Communication Technology, P182
   Hautojrvi P., 1979, Experimentation in software engineering, V1ST, DOI [10.1007/978-3-642-81316-0, 10.1007/978-3-642-29044-2., DOI 10.1007/978-3-642-29044-2]
   HOLM S, 1979, SCAND J STAT, V6, P65
   Katz J., 2020, LIB IO OPEN SOURCE R, DOI [10.5281/zenodo.3626071, DOI 10.5281/ZENODO.3626071]
   Lauinger T, 2017, 24TH ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2017), DOI 10.14722/ndss.2017.23414
   MANN HB, 1947, ANN MATH STAT, V18, P50, DOI 10.1214/aoms/1177730491
   Mirhosseini S, 2017, IEEE INT CONF AUTOM, P84, DOI 10.1109/ASE.2017.8115621
   Opdebeeck R, 2020, IEEE INT WORK C SO, P238, DOI 10.1109/SCAM51674.2020.00032
   Raemaekers S, 2017, J SYST SOFTWARE, V129, P140, DOI 10.1016/j.jss.2016.04.008
   Ray B, 2013, IEEE INT CONF AUTOM, P367, DOI 10.1109/ASE.2013.6693095
   Ren LY, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P1199, DOI 10.1145/3338906.3342488
   Rodriguez LR, 2015, 2015 ELEVENTH EUROPEAN DEPENDABLE COMPUTING CONFERENCE (EDCC), P132, DOI 10.1109/EDCC.2015.23
   Romano J., 2006, P ANN M SO ASS I RES
   Shariffdeen R, 2021, ISSTA '21: PROCEEDINGS OF THE 30TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P633, DOI 10.1145/3460319.3464821
   Shariffdeen RS, 2021, ACM T SOFTW ENG METH, V30, DOI 10.1145/3412376
   Soto-Valero C, 2021, PROCEEDINGS OF THE 29TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '21), P1021, DOI 10.1145/3468264.3468589
   Soto-Valero C, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-020-09914-8
   Thung Ferdian, 2016, 2016 IEEE International Conference on Software Maintenance and Evolution (ICSME), P222, DOI 10.1109/ICSME.2016.71
   Tian Y, 2012, PROC INT CONF SOFTW, P386, DOI 10.1109/ICSE.2012.6227176
   Wang Y, 2020, PROC IEEE INT CONF S, P35, DOI 10.1109/ICSME46990.2020.00014
   Zerouali A, 2019, J SOFTW-EVOL PROC, V31, DOI 10.1002/smr.2157
   Zimmermann M, 2019, PROCEEDINGS OF THE 28TH USENIX SECURITY SYMPOSIUM, P995
NR 35
TC 6
Z9 7
U1 0
U2 0
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD OCT 1
PY 2022
VL 48
IS 10
BP 4087
EP 4099
DI 10.1109/TSE.2021.3112204
PG 13
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 5L3GA
UT WOS:000870301800021
DA 2024-07-18
ER

PT J
AU Dang, XY
   Gong, DW
   Yao, XJ
   Tian, T
   Liu, H
AF Dang, Xiangying
   Gong, Dunwei
   Yao, Xiangjuan
   Tian, Tian
   Liu, Huai
TI Enhancement of Mutation Testing via Fuzzy Clustering and
   Multi-Population Genetic Algorithm
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Mutation testing; fuzzy clustering; mutation clustering; test data
   generation; multi-population genetic algorithm (MGA)
ID MUTANT REDUCTION; COST
AB Mutation testing, a fundamental software testing technique, which is a typical way to evaluate the adequacy of a test suite. In mutation testing, a set of mutants are generated by seeding the different classes of faults into a program under test. Test data shall be generated in the way that as many mutants can be killed as possible. Thanks to numerous tools to implement mutation testing for different languages, a huge amount of mutants are normally generated even for small-sized programs. However, a large number of mutants not only leads to a high cost of mutation testing, but also make the corresponding test data generation a non-trivial task. In this paper, we make use of intelligent technologies to improve the effectiveness and efficiency of mutation testing from two perspectives. A machine learning technique, namely fuzzy clustering, is applied to categorize mutants into different clusters. Then, a multi-population genetic algorithm via individual sharing is employed to generate test data for killing the mutants in different clusters in parallel when the problem of test data generation as an optimization one. A comprehensive framework, termed as FUZGENMUT, is thus developed to implement the proposed techniques. The experiments based on nine programs of various sizes show that fuzzy clustering can help to reduce the cost of mutation testing effectively, and that the multi-population genetic algorithm improves the efficiency of test data generation while delivering the high mutant-killing capability. The results clearly indicate that the huge potential of using intelligent technologies to enhance the efficacy and thus the practicality of mutation testing.
C1 [Dang, Xiangying; Gong, Dunwei] China Univ Min & Technol, Sch Informat & Control Engn, Xuzhou 221116, Jiangsu, Peoples R China.
   [Dang, Xiangying] Xuzhou Univ Technol, Sch Informat Engn, Sch Big Data, Xuzhou 221000, Jiangsu, Peoples R China.
   [Dang, Xiangying; Gong, Dunwei] Xuzhou Univ Technol, Key Lab Intelligent Ind Control Technol Jiangsu P, Xuzhou 221000, Jiangsu, Peoples R China.
   [Dang, Xiangying; Gong, Dunwei] Qingdao Univ Sci & Technol, Sch Informat Sci & Technol, Qingdao 266061, Shandong, Peoples R China.
   [Yao, Xiangjuan] China Univ Min & Technol, Sch Math, Xuzhou 221116, Jiangsu, Peoples R China.
   [Tian, Tian] Shandong Jianzhu Univ, Sch Comp Sci & Technol, Jinan 250101, Peoples R China.
   [Liu, Huai] Swinburne Univ Technol, Dept Comp Sci & Software Engn, Hawthorn, Vic 3122, Australia.
C3 China University of Mining & Technology; Xuzhou University of
   Technology; Xuzhou University of Technology; Qingdao University of
   Science & Technology; China University of Mining & Technology; Shandong
   Jianzhu University; Swinburne University of Technology
RP Gong, DW (corresponding author), China Univ Min & Technol, Sch Informat & Control Engn, Xuzhou 221116, Jiangsu, Peoples R China.; Gong, DW (corresponding author), Qingdao Univ Sci & Technol, Sch Informat Sci & Technol, Qingdao 266061, Shandong, Peoples R China.; Yao, XJ (corresponding author), China Univ Min & Technol, Sch Math, Xuzhou 221116, Jiangsu, Peoples R China.
EM dangpaper@163.com; dwgong@vip.163.com; yaoxj@cumt.edu.cn;
   tian_tiantian@126.com; hliu@swin.edu.au
RI Liu, Huai/M-4871-2019
OI Liu, Huai/0000-0003-3125-4399; Yao, Xiangjuan/0000-0003-3207-703X; Dang,
   Xiangying/0000-0003-0028-3330; Gong, Dunwei/0000-0003-2838-4301
FU National Key Research and Development Program of China
   [2018YFB1003802-01]; National Natural Science Foundation of China
   [61773384, 61573362, 61503220]
FX This work was jointly supported in part by the National Key Research and
   Development Program of China (2018YFB1003802-01), and the National
   Natural Science Foundation of China (61773384, 61573362 and 61503220).
CR [Anonymous], 2019, PROC IEEE INT C SOFT, P231
   Ayari K, 2007, GECCO 2007: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOL 1 AND 2, P1074
   Barus AC, 2016, IEEE T COMPUT, V65, P3509, DOI 10.1109/TC.2016.2547380
   Changbin Ji, 2009, Proceedings 21st International Conference on Software Engineering & Knowledge Engineering (SEKE 2009), P422
   Dang XY, 2020, IEEE T RELIAB, V69, P334, DOI 10.1109/TR.2019.2922684
   [党向盈 Dang Xiangying], 2016, [计算机学报, Chinese Journal of Computers], V39, P2355
   DEMILLO RA, 1978, COMPUTER, V11, P34, DOI 10.1109/C-M.1978.218136
   DEMILLO RA, 1991, IEEE T SOFTWARE ENG, V17, P900, DOI 10.1109/32.92910
   Derezinska A, 2017, FED CONF COMPUT SCI, P1315, DOI 10.15439/2017F375
   Lima JAD, 2019, J SYST SOFTWARE, V154, P92, DOI 10.1016/j.jss.2019.04.031
   EVERITT B, 1980, QUAL QUANT, V14, P75, DOI 10.1007/BF00154794
   GATH I, 1989, IEEE T PATTERN ANAL, V11, P773, DOI 10.1109/34.192473
   Gelbard R, 2007, DATA KNOWL ENG, V63, P155, DOI 10.1016/j.datak.2007.01.002
   Gong DW, 2021, ACM T SOFTW ENG METH, V30, DOI 10.1145/3423132
   [巩敦卫 Gong Dunwei], 2017, [电子学报, Acta Electronica Sinica], V45, P1518
   Gong DW, 2017, INFORM SOFTWARE TECH, V81, P82, DOI 10.1016/j.infsof.2016.05.001
   Gopinath R, 2017, IEEE T RELIAB, V66, P854, DOI 10.1109/TR.2017.2705662
   Gosain A, 2016, PROCEDIA COMPUT SCI, V79, P100, DOI 10.1016/j.procs.2016.03.014
   HAMLET RG, 1977, IEEE T SOFTWARE ENG, V3, P279, DOI 10.1109/TSE.1977.231145
   Huang Y. H., 2011, THESIS U SCI TECHNOL
   Hussain S., 2008, THESIS
   Jia Y, 2011, IEEE T SOFTWARE ENG, V37, P649, DOI 10.1109/TSE.2010.62
   Jia Y, 2008, TACI PART 2008:TESTING: ACADEMIC AND INDUSTRIAL CONFERENCE PRACTICE AND RESEARCH TECHNIQUES, PROCEEDINGS, P94, DOI 10.1109/TAIC-PART.2008.18
   Jiang H, 2018, ACM T INTERNET TECHN, V18, DOI 10.1145/3106164
   Jimenez M, 2018, PROCEEDINGS OF THE 12TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT (ESEM 2018), DOI 10.1145/3239235.3240500
   Kintis M., 2017, Empir. Softw. Eng., V8, P1
   Kintis M, 2015, SOFTW TEST VERIF REL, V25, P508, DOI 10.1002/stvr.1529
   KOREL B, 1990, IEEE T SOFTWARE ENG, V16, P870, DOI 10.1109/32.57624
   Liu H, 2014, IEEE T SOFTWARE ENG, V40, P4, DOI 10.1109/TSE.2013.46
   Ma YS, 2016, J SYST SOFTWARE, V115, P18, DOI 10.1016/j.jss.2016.01.007
   Masud M., 2005, PROC CAN C ELECT COM, P1049
   Miyamoto S, 2008, STUD FUZZ SOFT COMP, V229, P1
   Mouchawrab S, 2011, IEEE T SOFTWARE ENG, V37, P161, DOI 10.1109/TSE.2010.32
   Namin AS, 2015, SOFTW TEST VERIF REL, V25, P572, DOI 10.1002/stvr.1542
   Offut A. J., 1997, Software Testing, Verification and Reliability, V7, P165, DOI 10.1002/(SICI)1099-1689(199709)7:3<165::AID-STVR143>3.0.CO;2-U
   OFFUTT AJ, 1987, SIGPLAN NOTICES, V22, P177, DOI 10.1145/960114.29669
   Papadakis Mike, 2010, Proceedings of the 2010 IEEE 21st International Symposium on Software Reliability Engineering (ISSRE 2010), P121, DOI 10.1109/ISSRE.2010.38
   Papadakis M., 2015, PROC ANN ACM S APPL, P572
   Papadakis M., 2010, P 5 WORKSH AUT SOFTW, P111, DOI [http://doi.acm.org/10.1145/1808266, DOI 10.1145/1808266.1808283]
   Papadakis M, 2019, ADV COMPUT, V112, P275, DOI 10.1016/bs.adcom.2018.03.015
   Papadakis M, 2018, IEEE ICST WORKSHOP, P32, DOI 10.1109/ICSTW.2018.00025
   Papadakis M, 2011, SOFTWARE QUAL J, V19, P691, DOI 10.1007/s11219-011-9142-y
   Polo M, 2009, SOFTW TEST VERIF REL, V19, P111, DOI 10.1002/stvr.392
   Schuler D, 2013, SOFTW TEST VERIF REL, V23, P353, DOI 10.1002/stvr.1473
   Silva RA, 2017, INFORM SOFTWARE TECH, V81, P19, DOI 10.1016/j.infsof.2016.01.017
   Souza F.C., 2014, P 11 IESELAW, P1
   Souza FCM, 2016, 2016 IEEE/ACM 9TH INTERNATIONAL WORKSHOP ON SEARCH-BASED SOFTWARE TESTING (SBST), P45, DOI [10.1145/2897010.2897012, 10.1109/SBST.2016.018]
   Sridharan Mohan, 2010, Proceedings of the 2010 IEEE 21st International Symposium on Software Reliability Engineering (ISSRE 2010), P378, DOI 10.1109/ISSRE.2010.16
   Strug J, 2017, FED CONF COMPUT SCI, P99, DOI 10.15439/2017F215
   Sun BC, 2022, IEEE T SOFTWARE ENG, V48, P1336, DOI 10.1109/TSE.2020.3019406
   Sun BC, 2019, INFORM SOFTWARE TECH, V114, P190, DOI 10.1016/j.infsof.2019.07.002
   Sun CA, 2017, INFORM SOFTWARE TECH, V81, P65, DOI 10.1016/j.infsof.2016.02.006
   Chekam TT, 2020, EMPIR SOFTW ENG, V25, P434, DOI 10.1007/s10664-019-09778-7
   Vercammen S, 2018, PROCEEDINGS OF THE 9TH ACM SIGSOFT INTERNATIONAL WORKSHOP ON AUTOMATING TEST CASE DESIGN, SELECTION, AND EVALUATION (A-TEST '18), P23, DOI 10.1145/3278186.3278190
   Visser W, 2016, IEEE INT CONF AUTOM, P39, DOI 10.1145/2970276.2970345
   Yao X., 2014, COMPUT INTEL NEUROSC, P1
   Yao XJ, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P919, DOI 10.1145/2568225.2568265
   [张功杰 Zhang Gongjie], 2015, [计算机学报, Chinese Journal of Computers], V38, P2318
   Zhang J, 2019, IEEE T SOFTWARE ENG, V45, P898, DOI 10.1109/TSE.2018.2809496
   [张岩 Zhang Yan], 2013, [计算机学报, Chinese Journal of Computers], V36, P2429
NR 60
TC 11
Z9 12
U1 1
U2 17
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUN 1
PY 2022
VL 48
IS 6
BP 2141
EP 2156
DI 10.1109/TSE.2021.3052987
PG 16
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 2D5IM
UT WOS:000811580600019
DA 2024-07-18
ER

PT J
AU Miller, BP
   Zhang, MX
   Heymann, ER
AF Miller, Barton P.
   Zhang, Mengxiao
   Heymann, Elisa R.
TI The Relevance of Classic Fuzz Testing: Have We Solved This One?
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Tools; Testing; Software; Operating systems; Fuzzing; Software
   reliability; Linux; Testing and debugging; testing tools
AB As fuzz testing has passed its 30th anniversary, and in the face of the incredible progress in fuzz testing techniques and tools, the question arises if the classic, basic fuzz technique is still useful and applicable? In that tradition, we have updated the basic fuzz tools and testing scripts and applied them to a large collection of Unix utilities on Linux, FreeBSD, and MacOS. As before, our failure criteria was whether the program crashed or hung. We found that 9 crash or hang out of 74 utilities on Linux, 15 out of 78 utilities on FreeBSD, and 12 out of 76 utilities on MacOS. A total of 24 different utilities failed across the three platforms. We note that these failure rates are somewhat higher than our in previous 1995, 2000, and 2006 studies of the reliability of command line utilities. In the basic fuzz tradition, we debugged each failed utility and categorized the causes the failures. Classic categories of failures, such as pointer and array errors and not checking return codes, were still broadly present in the current results. In addition, we found a couple of new categories of failures appearing. We present examples of these failures to illustrate the programming practices that allowed them to happen. As a side note, we tested the limited number of utilities available in a modern programming language (Rust) and found them to be of no better reliability than the standard ones.
C1 [Miller, Barton P.; Zhang, Mengxiao; Heymann, Elisa R.] Univ Wisconsin, Comp Sci Dept, Madison, WI 53706 USA.
C3 University of Wisconsin System; University of Wisconsin Madison
RP Miller, BP (corresponding author), Univ Wisconsin, Comp Sci Dept, Madison, WI 53706 USA.
EM bart@cs.wisc.edu; mzhang464@wisc.edu; elisa@cs.wisc.edu
FU  [CS736]
FX The pioneering fuzz studies done at the University of Wisconsin-Madison
   were all conducted as semester projects in Miller's graduate Advanced
   Operating Systems (CS736) course. The work of the students who conducted
   those studies went well beyond the reaches of their classroom and
   continues to influence software testing and security practices to this
   day. These students were: Lars Fredriksen and Bryan So (1990); David
   Koski, Cjin Pheow Lee, Vivekananda Maganty, Ravi Murthy, Ajitkumar
   Nataranjan, and Jeff Steidl (1995); Justin Forrester (2000); and Gregory
   Cooksey and Frederick Moore (2006). In this study, wewould like to thank
   Yi (Emma) He for her efforts in helping to revise the fuzz tools and run
   the initial experiments. We also thank James Kupsch and Josef (Bolo)
   Burger for helping to find an obscure bug in ptyjig.
CR [Anonymous], 1995, 1268 U WISC MAD
   ANSI C, US
   Donovan Alan A.A., 2015, The Go Programming Language, V1st
   Eichenhofer JO, 2020, IEEE ACCESS, V8, P128050, DOI 10.1109/ACCESS.2020.3008395
   Forrester J. E., 2000, PROC 4 USENIX WINDOW, P46
   gcc, LANGUAGE STANDARDS S
   github, RUST COREUTILS REPOS
   Heymann E., 2020, INTRO SOFTWARE SECUR
   I. OpenSSL Foundation, OPENSSL FDN
   Isola A, GO COREUTILS REPOSIT
   Klabnik S., 2019, RUST PROGRAMMING LAN
   Klees G, 2018, PROCEEDINGS OF THE 2018 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY (CCS'18), P2123, DOI 10.1145/3243734.3243804
   Kplybon, CLUSTERFUZZ
   Kupsch J A., 2014, Continuous Software Assurance Marketplace, V22
   L. C. I. Project, LIBFUZZER A LIB COVE
   Lagergren E, GO COREUTILS REPOSIT
   lcamtuf. american fuzzy lop, AM FUZZY LOP
   Li J, 2018, CYBERSECURITY, V1, DOI 10.1186/s42400-018-0002-y
   Liang HL, 2018, IEEE T RELIAB, V67, P1199, DOI 10.1109/TR.2018.2834476
   Manès VJM, 2021, IEEE T SOFTWARE ENG, V47, P2312, DOI 10.1109/TSE.2019.2946563
   MCKUSICK MK, 1984, ACM T COMPUT SYST, V2, P181, DOI 10.1145/989.990
   Miller BartonP., 2006, RT 06, P46, DOI 10.1145/1145735.1145743
   MILLER BP, 1990, COMMUN ACM, V33, P32, DOI 10.1145/96267.96279
   N. I. of Standards and Technology, 2020, CVE201918634
   PIKE R, 1995, COMPUT SYST, V8, P221
   Rymon R., WHITESOURCE BOLT
   Scheifler R., 2004, XWINDOWSYSTEM PROTOC
   SPAFFORD EH, 1989, COMMUN ACM, V32, P678, DOI 10.1145/63526.63527
   Swiecki Robert, Honggfuzz
   Velting R., 2017, WOULD REWRITING UNIX
   Vimpari M., 2016, EVALUATION FREE FUZZ
NR 31
TC 6
Z9 6
U1 1
U2 6
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUN 1
PY 2022
VL 48
IS 6
BP 2028
EP 2039
DI 10.1109/TSE.2020.3047766
PG 12
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 2D5IM
UT WOS:000811580600012
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Sharafi, Z
   Bertram, I
   Flanagan, M
   Weimer, W
AF Sharafi, Zohreh
   Bertram, Ian
   Flanagan, Michael
   Weimer, Westley
TI Eyes on Code: A Study on Developers' Code Navigation Strategies
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Navigation; Task analysis; Computer bugs; Tools; Maintenance
   engineering; Software; Switches; Code navigation; eye tracking; human
   factors; software maintenance
ID STEREOTYPE THREAT; CONTEXTS; USAGE
AB What code navigation strategies do developers use and what mechanisms do they employ to find relevant information? Do their strategies evolve over the course of longer tasks? Answers to these questions can provide insight to educators and software tool designers to support a wide variety of programmers as they tackle increasingly-complex software systems. However, little research to date has measured developers' code navigation strategies in ecologically-valid settings, or analyzed how strategies progressed throughout a maintenance task. We propose a novel experimental design that more accurately represents the software maintenance process in terms of software complexity and IDE interactions. Using this framework, we conduct an eye-tracking study (n=36) of realistic bug-fixing tasks, dynamically and empirically identifying relevant code areas. We introduce a three-phase model to characterize developers' navigation behavior supported by statistical variations in eye movements over time. We also propose quantifiable notion of "thrashing" with the code as a navigation activity. We find that thrashing is associated with lower effectiveness. Our results confirm that the relevance of various code elements changes over time, and that our proposed three-phase model is capable of capturing these significant changes. We discuss our findings and their implications for tool designers, educators, and the research community.
C1 [Sharafi, Zohreh; Bertram, Ian; Flanagan, Michael; Weimer, Westley] Univ Michigan, Dept Elect Engn & Comp Sci, Ann Arbor, MI 48109 USA.
C3 University of Michigan System; University of Michigan
RP Sharafi, Z (corresponding author), Univ Michigan, Dept Elect Engn & Comp Sci, Ann Arbor, MI 48109 USA.
EM zohrehsh@umich.edu; ianbtr@umich.edu; mflanag@umich.edu;
   weimerw@umich.edu
RI Sharafi, Zohreh/HRC-2499-2023
CR Abid NJ, 2019, PROC INT CONF SOFTW, P384, DOI 10.1109/ICSE.2019.00052
   Ahmed TM, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P99, DOI 10.1109/MSR.2015.17
   Ali N, 2015, EMPIR SOFTW ENG, V20, P442, DOI 10.1007/s10664-014-9315-y
   [Anonymous], Tiobe index
   [Anonymous], ECLIPSE FDN USAGE DA
   [Anonymous], 1968, Proceedings of the December 9-11, 1968, fall joint computer conference, part I
   [Anonymous], 2006, P SIGCHI C HUM FACT, DOI DOI 10.1145/1124772.1124808
   [Anonymous], 2001, TOBIIPRO
   [Anonymous], ECLIPSE
   [Anonymous], 2007, Eye tracking methodology: Theory and practice, DOI DOI 10.1007/978-3-319-57883-5
   [Anonymous], TESLA PULLED COPS SL
   Aschwanden Christoph, 2006, P 39 HAW INT C SYST
   Beckwith L., 2005, P SIGCHI C HUMAN FAC, P869, DOI [10.1145/1054972.1055094, DOI 10.1145/1054972.1055094]
   Blascheck T, 2017, COMPUT GRAPH FORUM, V36, P87, DOI 10.1111/cgf.13170
   Busjahn Teresa, 2011, P 11 KOL CALL INT C, p1s9
   Caldara R, 2011, BEHAV RES METHODS, V43, P864, DOI 10.3758/s13428-011-0092-x
   Cristino F, 2010, BEHAV RES METHODS, V42, P692, DOI 10.3758/BRM.42.3.692
   CROSBY ME, 1990, COMPUTER, V23, P24, DOI 10.1109/2.48797
   De Vries J., 2014, OMNEXT
   Dewhurst R, 2012, BEHAV RES METHODS, V44, P1079, DOI 10.3758/s13428-012-0212-2
   Farnsworth B., 2018, 10 Most Used Eye Tracking Metrics and Terms
   Fritz T, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P7, DOI 10.1145/2635868.2635905
   Goldberg J.H., 2010, Proceedings of the 3rd BELIV'10 Workshop: Beyond Time and Errors: Novel Evaluation Methods for Information Visualization, P71, DOI [10.1145/2110192.2110203, DOI 10.1145/2110192.2110203]
   Goldberg JH, 1999, INT J IND ERGONOM, V24, P631, DOI 10.1016/S0169-8141(98)00068-7
   Guarnera DT, 2018, 2018 ACM SYMPOSIUM ON EYE TRACKING RESEARCH & APPLICATIONS (ETRA 2018), DOI 10.1145/3204493.3208343
   Jarodzka H., 2010, P S EYE TRACK RES AP, P211, DOI [10.1145/1743666, DOI 10.1145/1743666, DOI 10.1145/1743666.1743718]
   JUST MA, 1976, COGNITIVE PSYCHOL, V8, P441, DOI 10.1016/0010-0285(76)90015-3
   Kersten M, 2005, P 2005 INT C ASP OR, P159, DOI DOI 10.1145/1052898.1052912
   Kersten Mik, 2006, P 14 ACM SIGSOFT INT, P1
   Kevic K, 2017, J SYST SOFTWARE, V128, P252, DOI 10.1016/j.jss.2016.03.030
   Kevic K, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P202, DOI 10.1145/2786805.2786864
   Kitchenham BA, 2002, IEEE T SOFTWARE ENG, V28, P721, DOI 10.1109/TSE.2002.1027796
   Ko AJ, 2006, IEEE T SOFTWARE ENG, V32, P971, DOI 10.1109/TSE.2006.116
   Lao JP, 2017, BEHAV RES METHODS, V49, P559, DOI 10.3758/s13428-016-0737-x
   LaToza T. D., 2006, 28th International Conference on Software Engineering Proceedings, P492, DOI 10.1145/1134285.1134355
   Matos R., 2005, COGNITIVE LOAD THEOR, V2010
   Minelli R, 2014, INT CONF QUAL SOFTW, P276, DOI 10.1109/QSIC.2014.11
   Murphy-Hill E, 2012, IEEE T SOFTWARE ENG, V38, P5, DOI 10.1109/TSE.2011.41
   Obaidellah U, 2018, ACM COMPUT SURV, V51, DOI 10.1145/3145904
   Olsson P., 2007, MASTERS THESIS
   Parnin C, 2006, INT C PROGRAM COMPRE, P13, DOI 10.1109/ICPC.2006.14
   Peterson C. S., 2019, PROC 11 ACM S EYE TR
   Piorkowski D, 2011, S VIS LANG HUM CEN C, P109, DOI 10.1109/VLHCC.2011.6070387
   Poole A., 2005, Eye Tracking in Human-Computer Interaction and Usability Research: Current Status and Future Prospects"
   Pressman R.S., 2005, Software engineering: a Practitioner's Approach
   Robillard MP, 2004, IEEE T SOFTWARE ENG, V30, P889, DOI 10.1109/TSE.2004.101
   Rodeghero Paige, 2015, 2015 ACM/IEEE International Symposium on Empirical Software Engineering and Measurement (ESEM). Proceedings, P1, DOI 10.1109/ESEM.2015.7321188
   Rodeghero P, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P390, DOI 10.1145/2568225.2568247
   Roehm T, 2012, PROC INT CONF SOFTW, P255, DOI 10.1109/ICSE.2012.6227188
   Salvucci DD, 2000, 2000 S EYE TRACKING, P71, DOI [10.1145/355017.355028, DOI 10.1145/355017.355028]
   Shapiro JR, 2007, PERS SOC PSYCHOL REV, V11, P107, DOI 10.1177/1088868306294790
   Sharafi Z, 2015, ASIA PAC SOFWR ENG, P96, DOI 10.1109/APSEC.2015.53
   Sharafi Z, 2015, INFORM SOFTWARE TECH, V67, P79, DOI 10.1016/j.infsof.2015.06.008
   Shard B., 2012, P S EYE TRACK RES AP, P381
   Sharif B, 2019, 2019 IEEE/ACM 6TH INTERNATIONAL WORKSHOP ON EYE MOVEMENTS IN PROGRAMMING (EMIP 2019), P41, DOI 10.1109/EMIP.2019.00015
   Siegmund J, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P378, DOI 10.1145/2568225.2568252
   Siegmund J, 2015, EMPIR SOFTW ENG, V20, P1159, DOI 10.1007/s10664-014-9318-8
   Siegmund J, 2014, EMPIR SOFTW ENG, V19, P1299, DOI 10.1007/s10664-013-9286-4
   Sillito J, 2008, IEEE T SOFTWARE ENG, V34, P434, DOI 10.1109/TSE.2008.26
   Singer J, 2005, PROC IEEE INT CONF S, P325
   Spencer SJ, 1999, J EXP SOC PSYCHOL, V35, P4, DOI 10.1006/jesp.1998.1373
   STEELE CM, 1995, J PERS SOC PSYCHOL, V69, P797, DOI 10.1037/0022-3514.69.5.797
   Storey MA, 2005, PROG COMPREHEN, P181, DOI 10.1109/WPC.2005.38
   Uwano H., 2005, Eye Tracking Research and Applications Symposium (ETRA), V2005, P133
   Wobbrock JO, 2011, 29TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, P143, DOI 10.1145/1978942.1978963
   Yang CK, 2018, CHI 2018: EXTENDED ABSTRACTS OF THE 2018 CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, DOI 10.1145/3170427.3188490
   Yoon Y., 2011, Proceedings of the 3rd ACM SIGPLAN workshop on Evaluation and usability of programming languages and tools, P25
NR 67
TC 5
Z9 5
U1 2
U2 4
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAY 1
PY 2022
VL 48
IS 5
BP 1692
EP 1704
DI 10.1109/TSE.2020.3032064
PG 13
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science; Engineering
GA 1I8CJ
UT WOS:000797454000015
DA 2024-07-18
ER

PT J
AU Barcomb, A
   Stol, KJ
   Fitzgerald, B
   Riehle, D
AF Barcomb, Ann
   Stol, Klaas-Jan
   Fitzgerald, Brian
   Riehle, Dirk
TI Managing Episodic Volunteers in Free/Libre/Open Source Software
   Communities
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Best practices; community management; episodic volunteering; free
   software; open source software
ID DELPHI METHOD; PROJECTS; NEWCOMERS; BARRIERS; SPECIALIZATION;
   MOTIVATION; PERIPHERY; DESIGN; TOOL
AB We draw on the concept of episodic volunteering (EV) from the general volunteering literature to identify practices for managing EV in free/libre/open source software (FLOSS) communities. Infrequent but ongoing participation is widespread, but the practices that community managers are using to manage EV, and their concerns about EV, have not been previously documented. We conducted a policy Delphi study involving 24 FLOSS community managers from 22 different communities. Our panel identified 16 concerns related to managing EV in FLOSS, which we ranked by prevalence. We also describe 65 practices for managing EV in FLOSS. Almost three-quarters of these practices are used by at least three community managers. We report these practices using a systematic presentation that includes context, relationships between practices, and concerns that they address. These findings provide a coherent framework that can help FLOSS community managers to better manage episodic contributors.
C1 [Barcomb, Ann; Riehle, Dirk] Friedrich Alexander Univ Erlangen Nurnberg, Open Source Res Grp, D-91054 Erlangen, Germany.
   [Barcomb, Ann] Univ Limerick, Irish Software Res Ctr, Limerick V94 T9PX, Ireland.
   [Stol, Klaas-Jan; Fitzgerald, Brian] Lero, Irish Software Res Ctr, Univ Coll Cork, Cork T12 YN60, Ireland.
C3 University of Erlangen Nuremberg; University of Limerick; University
   College Cork
RP Barcomb, A (corresponding author), Friedrich Alexander Univ Erlangen Nurnberg, Open Source Res Grp, D-91054 Erlangen, Germany.
EM ann@barcomb.org; klaas-jan.stol@lero.ie; brian.fitzgerald@ul.ie;
   dirk@riehle.org
RI Riehle, Dirk/X-8137-2019; Stol, Klaas-Jan/I-6269-2013
OI Riehle, Dirk/0000-0002-8139-5600; Stol, Klaas-Jan/0000-0002-1038-5050
FU Science Foundation Ireland [13/RC/2094, 15/SIRG/3293]; Science
   Foundation Ireland (SFI) [15/SIRG/3293] Funding Source: Science
   Foundation Ireland (SFI)
FX The authors would like to thank the community mentors who contributed
   significant time to participate in this study: R. Bowen, N. Bowers,
   A.-I. Chiuta, S. M. Coughlan, A. El Acheche, B."bex" Exelbierd, L.
   Kisuuki, N. Kolokotronis, G. Lelarge, G. Link, S. Park, Pkpacheco, A.
   Pinheiro, A. Randal, J. A. Rey, C. Shorter, H. Tabunshchyk, I. Vancsa,
   H. Woo, S. Zacchiroli, V. Zimmerman, and the participants who preferred
   to remain anonymous. Additionally, we would like to thank the reviewers
   for their constructive feedback. Finally, S. B. Segletes provided
   helpful formatting advice. This work was supported, in part, by Science
   Foundation Ireland grants 13/RC/2094 and 15/SIRG/3293.
CR Ågerfalk PJ, 2008, MIS QUART, V32, P385
   Amrit C, 2010, J INF TECHNOL, V25, P216, DOI 10.1057/jit.2010.7
   [Anonymous], 2002, P INT WORKSH PRINC S
   Balali S, 2018, COMPUT SUPP COOP W J, V27, P679, DOI 10.1007/s10606-018-9310-8
   Bao LF, 2021, IEEE T SOFTWARE ENG, V47, P1277, DOI 10.1109/TSE.2019.2918536
   Barcomb A., IN PRESS, DOI [10.1109/TSE.2020.2985093, DOI 10.1109/TSE.2020.2985093]
   Barcomb A, 2020, IEEE T SOFTWARE ENG, V46, P962, DOI 10.1109/TSE.2018.2872713
   Barcomb A, 2019, PROC INT CONF SOFTW, P948, DOI 10.1109/ICSE.2019.00100
   Bayati Shahab, 2018, 2018 IEEE/ACM 40th International Conference on Software Engineering: Companion (ICSE-Companion). Proceedings, P224, DOI 10.1145/3183440.3195073
   Bosu A, 2019, INT SYMP EMP SOFTWAR, P295
   Braun V., 2006, QUAL RES PSYCHOL, V3, P77, DOI [DOI 10.1191/1478088706QP063OA, 10.1191/1478088706qp063oa]
   Bryen L.M., 2006, Working Paper No. CPNS 32
   Burnett M, 2016, 34TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, CHI 2016, P2586, DOI 10.1145/2858036.2858274
   Capiluppi A., 2012, Open Source Systems: Long-Term Sustainability: Vol. 378. IFIP Advances in Information and Communication Technology, V378, P178, DOI [10.1007/978-3-642-33442-9_12, DOI 10.1007/978-3-642-33442-9_12]
   Capiluppi A, 2007, INT FED INFO PROC, V234, P31
   Carillo K., 2015, P INT C INF SYST
   Carillo K, 2017, J STRATEGIC INF SYST, V26, P322, DOI 10.1016/j.jsis.2017.03.001
   Carvalho A, 2017, PERS REV, V46, P410, DOI 10.1108/PR-04-2014-0081
   Cnaan R. A., VRIJWILLIGE INZET ON, V2, P29
   Cnaan RA, 2017, NONPROFIT MANAG LEAD, V28, P85, DOI 10.1002/nml.21268
   Conboy K, 2010, ACM T SOFTW ENG METH, V20, DOI 10.1145/1767751.1767753
   Crotts J. C., 2003, Journal of Travel Research, V42, P186, DOI 10.1177/0047287503254955
   Crowston K., 2005, First Monday, V10, DOI 10.5210/fm.v10i2.1207
   Crowston K., 2004, P 2004 ACM WORKSH IN, P18, DOI DOI 10.1145/1029997.1030003
   CuIp K., 2000, Journal of Volunteer Administration, V19, P10
   Dahlander L, 2005, RES POLICY, V34, P481, DOI 10.1016/j.respol.2005.02.003
   Dahlander L, 2011, ORGAN SCI, V22, P961, DOI 10.1287/orsc.1100.0571
   DALKEY N, 1963, MANAGE SCI, V9, P458, DOI 10.1287/mnsc.9.3.458
   Davies Julius, 2010, Proceedings of the 2010 7th IEEE Working Conference on Mining Software Repositories (MSR 2010), P86, DOI 10.1109/MSR.2010.5463288
   Delbecq A.L., 1975, Group techniques for program planning: A guide to nominal group and Delphi process
   Dias L. F, 2017, 5 WORKSH SOFTW VIS E, P10
   Dinh-Trong TT, 2005, IEEE T SOFTWARE ENG, V31, P481, DOI 10.1109/TSE.2005.73
   Fang YL, 2009, J MANAGE INFORM SYST, V25, P9, DOI 10.2753/MIS0742-1222250401
   Foucault M, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P829, DOI 10.1145/2786805.2786870
   Gamalielsson J, 2014, J SYST SOFTWARE, V89, P128, DOI 10.1016/j.jss.2013.11.1077
   GUBA EG, 1981, ECTJ-EDUC COMMUN TEC, V29, P75
   Hager M.A., 2013, INT J VOLUNTEER ADM, V29, P13
   HARRISON DA, 1995, J APPL PSYCHOL, V80, P371, DOI 10.1037/0021-9010.80.3.371
   HILL KQ, 1975, TECHNOL FORECAST SOC, V7, P179, DOI 10.1016/0040-1625(75)90057-8
   Hustinx L., 2003, Voluntas, V14, P167, DOI [10.1023/A:1023948027200, DOI 10.1023/A:1023948027200]
   Hyde MK, 2016, NONPROF VOLUNT SEC Q, V45, P45, DOI 10.1177/0899764014558934
   Hyde MK, 2014, BMC PUBLIC HEALTH, V14, DOI 10.1186/1471-2458-14-992
   Izquierdo D, 2019, IEEE SOFTWARE, V36, P28, DOI 10.1109/MS.2018.2874322
   Izquierdo-Cortazar D., 2009, 2009 42 HAW INT C SY, P1, DOI DOI 10.1109/HICSS.2009.498
   Jensen C, 2007, PROC INT CONF SOFTW, P364
   Kim YY, 2008, INT J INTERCULT REL, V32, P359, DOI 10.1016/j.ijintrel.2008.04.005
   Koch S, 2002, INFORM SYST J, V12, P27, DOI 10.1046/j.1365-2575.2002.00110.x
   Krafft MF, 2016, 2016 IEEE/ACM 38TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING COMPANION (ICSE-C), P232, DOI 10.1145/2889160.2889248
   Krishnamurthy R, 2016, ACM TRANS MANAG INF, V6, DOI 10.1145/2820618
   Labuschagne A, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P381, DOI 10.1109/MSR.2015.45
   Lakhani K., 2006, THESIS MIT CAMBRIDGE
   Lee A, 2017, INT SYMP EMP SOFTWAR, P1, DOI 10.1109/ESEM.2017.7
   Lee A, 2017, PROC INT CONF SOFTW, P187, DOI 10.1109/ICSE.2017.25
   Linstone H.A., 2002, The Delphi method: Techniques and applications, V18
   Loo R, 2002, POLICING, V25, P762, DOI 10.1108/13639510210450677
   Lundell B., 2017, Open source systems: Towards robust practices, V496, P80
   M H., 2017, P 13 INT S OP COLL
   Macduff N., 1990, Voluntary Action Leadership, P15
   Macduff N., 2005, Emerging areas of volunteering, DOI DOI 10.1177/0899764014558934
   Masmoudi H, 2009, INT FED INFO PROC, V299, P284
   Meijs L., 2007, International Journal of Volunteer Administration, V24, P68
   Mendez C, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1004, DOI 10.1145/3180155.3180241
   Miller L.E., 2006, DETERMINING WHAT COU
   Mockus A, 2002, ACM T SOFTW ENG METH, V11, P309, DOI 10.1145/567793.567795
   Nafus D, 2012, NEW MEDIA SOC, V14, P669, DOI 10.1177/1461444811422887
   Neulinger K, 2016, LECT NOTES COMPUT SC, V9694, P509, DOI 10.1007/978-3-319-39696-5_31
   Nunn M., 2000, The Fletcher Forum of World Affairs, V24, P115
   Okoli C, 2004, INFORM MANAGE-AMSTER, V42, P15, DOI 10.1016/j.im.2003.11.002
   Osterloh M, 2007, RES POLICY, V36, P157, DOI 10.1016/j.respol.2006.10.004
   Pham R, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P1209, DOI 10.1109/ICSE.2013.6606680
   Pinto G, 2018, 2018 IEEE/ACM 11TH INTERNATIONAL WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING (CHASE), P110, DOI 10.1145/3195836.3195858
   Pinto G, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P112, DOI 10.1109/SANER.2016.68
   Riehle D., 2020, CS202001 FRIEDR AL U
   Riehle D, 2014, P ANN HICSS, P3286, DOI 10.1109/HICSS.2014.407
   Rozas D., 2017, THESIS U SURREY GUIL
   Rullani F, 2013, RES POLICY, V42, P941, DOI 10.1016/j.respol.2012.10.008
   Safrit R.D., 2002, Journal of Volunteer Administration, V20, P12
   Setia P, 2012, INFORM SYST RES, V23, P144, DOI 10.1287/isre.1100.0311
   Sholler D, 2019, PLOS COMPUT BIOL, V15, DOI 10.1371/journal.pcbi.1007296
   Singh V, 2019, IFIP ADV INF COMM TE, V556, P68, DOI 10.1007/978-3-030-20883-7_7
   Smith KA, 2010, CAN J NONPROFIT SOC, V1, P65
   Steinmacher I, 2019, COMPUT SUPP COOP W J, V28, P247, DOI 10.1007/s10606-018-9335-z
   Steinmacher I, 2019, IEEE SOFTWARE, V36, P41, DOI 10.1109/MS.2018.110162131
   Steinmacher I, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P256, DOI 10.1145/3180155.3180208
   Steinmacher I, 2015, INFORM SOFTWARE TECH, V59, P67, DOI 10.1016/j.infsof.2014.11.001
   Steinmacher I, 2013, 2013 6TH INTERNATIONAL WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING (CHASE), P25, DOI 10.1109/CHASE.2013.6614728
   Storey MA, 2017, IEEE T SOFTWARE ENG, V43, P185, DOI 10.1109/TSE.2016.2584053
   Takhteyev Y., 2010, Investigating the geography of open source software through GitHub
   Tang FY, 2010, AGEING SOC, V30, P859, DOI 10.1017/S0144686X10000140
   TUROFF M, 1970, TECHNOL FORECAST SOC, V2, P149, DOI 10.1016/0040-1625(70)90161-7
   Vasilescu B, 2014, EMPIR SOFTW ENG, V19, P955, DOI 10.1007/s10664-013-9244-1
   von Krogh G, 2003, RES POLICY, V32, P1217, DOI 10.1016/S0048-7333(03)00050-7
   von Krogh G, 2007, J STRATEGIC INF SYST, V16, P236, DOI 10.1016/j.jsis.2007.06.001
   von Krogh G, 2012, MIS QUART, V36, P649
   Wang J, 2012, EUR MANAG J, V30, P352, DOI 10.1016/j.emj.2012.03.001
   WEAVER WT, 1971, PHI DELTA KAPPAN, V52, P267
   Zhou MH, 2015, IEEE T SOFTWARE ENG, V41, P82, DOI 10.1109/TSE.2014.2349496
NR 97
TC 4
Z9 4
U1 2
U2 14
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JAN 1
PY 2022
VL 48
IS 1
BP 260
EP 277
DI 10.1109/TSE.2020.2985093
PG 18
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science; Engineering
GA YG0HJ
UT WOS:000742179000015
OA Green Submitted, Green Published
DA 2024-07-18
ER

PT J
AU Silva, D
   da Silva, JP
   Santos, G
   Terra, R
   Valente, MT
AF Silva, Danilo
   da Silva, Joao Paulo
   Santos, Gustavo
   Terra, Ricardo
   Valente, Marco Tulio
TI RefDiff 2.0: A Multi-Language Refactoring Detection Tool
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Codes; Java; Source coding; History; Crawlers; Measurement; Refactoring;
   source code analysis; code repositories; git
AB Identifying refactoring operations in source code changes is valuable to understand software evolution. Therefore, several tools have been proposed to automatically detect refactorings applied in a system by comparing source code between revisions. The availability of such infrastructure has enabled researchers to study refactoring practice in large scale, leading to important advances on refactoring knowledge. However, although a plethora of programming languages are used in practice, the vast majority of existing studies are restricted to the Java language due to limitations of the underlying tools. This fact poses an important threat to external validity. Thus, to overcome such limitation, in this paper we propose RefDiff 2.0, a multi-language refactoring detection tool. Our approach leverages techniques proposed in our previous work and introduces a novel refactoring detection algorithm that relies on the Code Structure Tree (CST), a simple yet powerful representation of the source code that abstracts away the specificities of particular programming languages. Despite its language-agnostic design, our evaluation shows that RefDiff's precision (96 percent) and recall (80 percent) are on par with state-of-the-art refactoring detection approaches specialized in the Java language. Our modular architecture also enables one to seamlessly extend RefDiff to support other languages via a plugin system. As a proof of this, we implemented plugins to support two other popular programming languages: JavaScript and C. Our evaluation in these languages reveals that precision and recall ranges from 88 to 91 percent. With these results, we envision RefDiff as a viable alternative for breaking the single-language barrier in refactoring research and in practical applications of refactoring detection.
C1 [Silva, Danilo; Valente, Marco Tulio] Univ Fed Minas Gerais, Dept Comp Sci, BR-31270010 Belo Horizonte, MG, Brazil.
   [da Silva, Joao Paulo] Quimbik Inc, San Rafael, CA 94901 USA.
   [Santos, Gustavo] Fed Univ Technol UTFPR, Software Engn, BR-85660000 Dois Vizinhos, PR, Brazil.
   [Terra, Ricardo] Fed Univ Lavras UFLA, Dept Comp Sci, BR-37200000 Lavras, MG, Brazil.
C3 Universidade Federal de Minas Gerais; Universidade Tecnologica Federal
   do Parana; Universidade Federal de Lavras
RP Silva, D (corresponding author), Univ Fed Minas Gerais, Dept Comp Sci, BR-31270010 Belo Horizonte, MG, Brazil.
EM danilofs@dcc.ufmg.br; joao@jpribeiro.com.br; gustavosantos@utfpr.edu.br;
   terra@dcc.ufla.br; mtov@dcc.ufmg.br
RI Silva, João Paulo/ABD-7911-2020
OI Silva, João Paulo/0000-0002-0695-9111
FU FAPEMIG; CNPq
FX Our research was supported by grants from FAPEMIG and CNPq.
CR [Anonymous], 2018, REFACTORING IMPROVIN
   Bavota G., 2012, 2012 12th IEEE Working Conference on Source Code Analysis and Manipulation (SCAM 2012), P104, DOI 10.1109/SCAM.2012.20
   Borges H, 2018, J SYST SOFTWARE, V146, P112, DOI 10.1016/j.jss.2018.09.016
   Borges H, 2016, PROC IEEE INT CONF S, P334, DOI 10.1109/ICSME.2016.31
   Chaparro O, 2014, PROC IEEE INT CONF S, P456, DOI 10.1109/ICSME.2014.73
   Chierichetti F, 2010, PROC APPL MATH, V135, P293
   Demeyer S, 2000, ACM SIGPLAN NOTICES, V35, P166, DOI 10.1145/354222.353183
   Dig D, 2006, LECT NOTES COMPUT SC, V4067, P404
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   Henkel J, 2005, PROC INT CONF SOFTW, P274
   Hora A, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1102, DOI 10.1145/3180155.3180212
   Kim M., 2012, P ACM SIGSOFT 20 INT, P1
   Kim M., 2010, PROC 18 ACM SIGSOFT, P371, DOI [10.1145/1882291.1882353, DOI 10.1145/1882291.1882353]
   Kim M, 2014, IEEE T SOFTWARE ENG, V40, P633, DOI 10.1109/TSE.2014.2318734
   Kim M, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P151, DOI 10.1145/1985793.1985815
   Murphy-Hill E, 2012, IEEE T SOFTWARE ENG, V38, P5, DOI 10.1109/TSE.2011.41
   Negara S, 2013, LECT NOTES COMPUT SC, V7920, P552, DOI 10.1007/978-3-642-39038-8_23
   Prete K, 2010, PROC IEEE INT CONF S
   Ratzinger J., 2008, Proceedings of the 2008 international working conference on Mining software repositories, P35, DOI [10.1145/1370750.1370759, DOI 10.1145/1370750.1370759]
   Salton G, 1986, Introduction to Modern Information Retrieval
   Silva D, 2017, IEEE WORK CONF MIN S, P269, DOI 10.1109/MSR.2017.14
   Silva D, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P858, DOI 10.1145/2950290.2950305
   Soares G, 2010, IEEE SOFTWARE, V27, P52, DOI 10.1109/MS.2010.63
   Tsantalis N., 2013, C CTR ADV STUD COLL, P132, DOI [10.5555/2555523.2555539, DOI 10.5555/2555523.2555539]
   Tsantalis N, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P483, DOI 10.1145/3180155.3180206
   Weissgerber P, 2006, IEEE INT CONF AUTOM, P231
   Weissgerber Peter., 2006, Proceedings of the 2006 International Workshop on Mining Software Repositories, MSR '06, P112
   Xing Z., 2005, 20 IEEEACM INT C AUT, P54, DOI DOI 10.1145/1101908.1101919
   Xing ZC, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P951
NR 29
TC 9
Z9 9
U1 0
U2 3
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD DEC 1
PY 2021
VL 47
IS 12
BP 2786
EP 2802
DI 10.1109/TSE.2020.2968072
PG 17
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA XM6HB
UT WOS:000728924600009
DA 2024-07-18
ER

PT J
AU Scoccia, GL
   Malavolta, I
   Autili, M
   Di Salle, A
   Inverardi, P
AF Scoccia, Gian Luca
   Malavolta, Ivano
   Autili, Marco
   Di Salle, Amleto
   Inverardi, Paola
TI Enhancing Trustability of Android Applications via User-Centric Flexible
   Permissions
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Privacy; Runtime; Usability; Social networking (online); Libraries;
   Fatigue; Smart phones; Android permissions; static analysis;
   trustability
ID PRIVACY
AB The Android OS market is experiencing a growing share globally. It is becoming the mobile platform of choice for an increasing number of users. People rely on Android mobile devices for surfing the web, purchasing products, or to be part of a social network. The large amount of personal information that is exchanged makes privacy an important concern. As a result, the trustability of mobile apps is a fundamental aspect to be considered, particularly with regard to meeting the expectations of end users. The rigidities of the Android permission model confine end users into a secondary role, offering the only option of choosing between either privacy or functionalities. In this paper, we aim at improving the trustability of Android apps by proposing a user-centric approach to the flexible management of Android permissions. The proposed approach empowers end users to selectively grant permission by specifying (i) the desired level of permissions granularity and (ii) the specific features of the app in which the chosen permission levels are granted. Four experiments have been designed, conducted, and reported for evaluating it. The experiments consider performance, usability, and acceptance from both the end user's and developer's perspective. Results confirm confidence on the approach.
C1 [Scoccia, Gian Luca; Autili, Marco; Di Salle, Amleto; Inverardi, Paola] Univ Aquila, Dept Informat Engn Comp Sci & Math DISIM, I-67100 Laquila, AQ, Italy.
   [Malavolta, Ivano] Vrije Univ Amsterdam, Dept Comp Sci, NL-1081 HV Amsterdam, Netherlands.
C3 University of L'Aquila; Vrije Universiteit Amsterdam
RP Scoccia, GL (corresponding author), Univ Aquila, Dept Informat Engn Comp Sci & Math DISIM, I-67100 Laquila, AQ, Italy.
EM gianluca.scoccia@univaq.it; i.malavolta@vu.nl; marco.autili@univaq.it;
   amleto.disalle@univaq.it; paola.inverardi@univaq.it
RI AUTILI, Marco/AAG-7127-2020; Scoccia, Gian Luca/AFA-9951-2022;
   Malavolta, Ivano/E-9018-2017
OI AUTILI, Marco/0000-0001-5951-1567; Scoccia, Gian
   Luca/0000-0003-3588-2659; Malavolta, Ivano/0000-0001-5773-8346; DI
   SALLE, AMLETO/0000-0002-0163-9784; INVERARDI, Paola/0000-0001-6734-1318
CR Acquisti A, 2017, ACM COMPUT SURV, V50, DOI 10.1145/3054926
   Akhawe D., 2013, USENIX SEC S, P257
   Almuhimedi H, 2015, CHI 2015: PROCEEDINGS OF THE 33RD ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, P787, DOI 10.1145/2702123.2702210
   Andriotis P, 2018, J INF SECUR APPL, V40, P31, DOI 10.1016/j.jisa.2018.02.004
   Andriotis P, 2017, LECT NOTES COMPUT SC, V10292, P604, DOI 10.1007/978-3-319-58460-7_42
   Andriotis P, 2016, IEEE INT WORKS INFOR, DOI 10.14324/000.ds.1520825
   [Anonymous], 2014, NONPARAMETRIC STAT S
   [Anonymous], 2012, Lecture Notes in Computer Science
   [Anonymous], 2010, P 6 S US PRIV SEC
   [Anonymous], 2018, ICT LEIT WORK PROGRA
   Arzt S, 2014, ACM SIGPLAN NOTICES, V49, P259, DOI [10.1145/2666356.2594299, 10.1145/2594291.2594299]
   Avdiienko V, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P426, DOI 10.1109/ICSE.2015.61
   Balebako R., 2014, The privacy and security behaviors of smartphone app developers, DOI 10.14722/usec.2014.23006
   Balebako Rebecca, 2015, P 5 ANN ACM CCS WORK, P63, DOI DOI 10.1145/2808117.2808119
   Bangor A, 2008, INT J HUM-COMPUT INT, V24, P574, DOI 10.1080/10447310802205776
   Bartel Alexandre, 2012, P ACM SIGPLAN INT WO, P27
   Beresford A. R., 2011, P 12 WORKSH MOB COMP, V11, DOI [10.1145/2184489.2184500, DOI 10.1145/2184489.2184500]
   Bodden E, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P241, DOI 10.1145/1985793.1985827
   Böhme R, 2011, PROCEEDINGS OF THE 2011 NEW SECURITY PARADIGMS WORKSHOP (NSPW'11), P67
   Bourque Pierre, 2014, SWEBOK: Guide to the Software Engineering Body of Knowledge, V3rd
   Brutschy L, 2015, ACM SIGPLAN NOTICES, V50, P316, DOI [10.1145/2858965.2814296, 10.1145/2814270.2814296]
   Chen Y., 2018, P 25 ANN NETW DISTR
   Chen Y, 2017, PROCEEDINGS OF THE 26TH USENIX SECURITY SYMPOSIUM (USENIX SECURITY '17), P1253
   Chia PernHui., 2012, WWW 12 P 21 INT C WO, P311, DOI [10.1145/2187836.2187879, DOI 10.1145/2187836.2187879]
   Chitkara Saksham, 2017, Proceedings of the ACM on Interactive, Mobile, Wearable and Ubiquitous Technologies, V1, DOI 10.1145/3132029
   Das T, 2016, PROC IEEE INT CONF S, P443, DOI 10.1109/ICSME.2016.49
   Dawoud A, 2019, 26TH ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2019), DOI 10.14722/ndss.2019.23398
   Egelman S., 2013, The economics of information security and privacy, P211
   Fang ZR, 2016, ASIA CCS'16: PROCEEDINGS OF THE 11TH ACM ASIA CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P747, DOI 10.1145/2897845.2897914
   Fang ZR, 2014, COMPUT SECUR, V43, P205, DOI 10.1016/j.cose.2014.02.007
   Felt Adrienne Porter, 2012, P 2 ACM WORKSHOP SEC, P33, DOI 10.1145/2381934.2381943
   Felt AP, 2012, P 8 S USABLE PRIVACY, P1, DOI DOI 10.1145/2335356.2335360
   Fuchs A.P., 2009, SCANDROID AUTOMATED
   Gartner I., 2012, GARTNER SAYS FREE AP
   Guo Y, 2018, INT C PROGRAM COMPRE, P266, DOI 10.1145/3196321.3196329
   Hao H., 2013, P 8 ACM SIGSAC S INF, P25
   Harman M., 2012, 2012 9th IEEE Working Conference on Mining Software Repositories (MSR 2012), P108, DOI 10.1109/MSR.2012.6224306
   Huang W., 2015, P 2015 INT S SOFTWAR, P106, DOI 10.1145/2771783.2771803
   JEON J, 2012, P 2 ACM WORKSH SEC P, DOI 10.1145/2381934.2381938
   Jordan P.W., 1996, Usability Evaluation in Industry, DOI DOI 10.1201/9781498710411
   Kelley P., 2013, PROC C HUMAN FACTORS, P3393, DOI [10.1145/2470654.2466466, DOI 10.1145/2470654.2466466]
   KIRAKOWSKI J, 1993, BRIT J EDUC TECHNOL, V24, P210, DOI 10.1111/j.1467-8535.1993.tb00076.x
   Kummer M, 2019, MANAGE SCI, V65, P3470, DOI 10.1287/mnsc.2018.3132
   Lella A., 2015, GLOBAL MOBILE REPORT
   Lin J., 2014, Modeling {users'} mobile app privacy preferences: restoring usability in a sea of permission settings, P199
   Liu B., 2016, 12 S USABLE PRIVACY, P27
   Madden Mary, 2014, Public Perceptions of Privacy and Security in the Post -Snowden Era
   Malavolta I, 2015, 2ND ACM INTERNATIONAL CONFERENCE ON MOBILE SOFTWARE ENGINEERING AND SYSTEMS MOBILESOFT 2015, P56, DOI 10.1109/MobileSoft.2015.15
   Motiee Sara., 2010, Proceedings of the 6th Symposium on Usable Privacy and Security, P1, DOI [DOI 10.1145/1837110.1837112, 10.1145/1837110.1837112]
   Nauman M., 2010, P 5 ACM S INF COMP C, V10, P328, DOI [10.1145/1755688.1755732, DOI 10.1145/1755688.1755732]
   Olejnik K, 2017, P IEEE S SECUR PRIV, P1058, DOI 10.1109/SP.2017.25
   Peruma A, 2018, 2018 IEEE/ACM 5TH INTERNATIONAL CONFERENCE ON MOBILE SOFTWARE ENGINEERING AND SYSTEMS (MOBILESOFT), P56, DOI 10.1145/3197231.3197246
   Petracca G, 2017, PROCEEDINGS OF THE 26TH USENIX SECURITY SYMPOSIUM (USENIX SECURITY '17), P379
   Razaghpanah A, 2018, 25TH ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2018), DOI 10.14722/ndss.2018.23353
   Scoccia GL, 2018, 2018 IEEE/ACM 5TH INTERNATIONAL CONFERENCE ON MOBILE SOFTWARE ENGINEERING AND SYSTEMS (MOBILESOFT), P45, DOI 10.1145/3197231.3197236
   Scoccia GL, 2017, PROC IEEE ACM INT C, P365, DOI 10.1109/ICSE-C.2017.84
   Shen F., 2014, P 29 ACMIEEE INT C A, P515, DOI DOI 10.1145/2642937.2643018
   Smith A., 2013, SMARTPHONE OWNERSHIP, V12, P2013
   University of Alabama at Birmingham Online Masters in Management Information Systems, 2014, FUT MOB APPL
   Vallee-Rai R., 1999, Proceedings of the 1999 Conference of the Centre for Advanced Studies on Collaborative Research, CASCON'99, page, P13
   Wang HY, 2017, ACM T INFORM SYST, V35, DOI 10.1145/3086677
   Wang Y., 2014, P 4 ACM C DATA APPL, P25
   Wijesekera P, 2017, P IEEE S SECUR PRIV, P1077, DOI 10.1109/SP.2017.51
   Wijesekera P, 2018, PROCEEDINGS OF THE 2018 CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS (CHI 2018), DOI 10.1145/3173574.3173842
   Wohlin C., 2012, Experimentation in Software Engineering
   Xu R., 2012, 21 USENIX SEC S USEN, P539
   Zhauniarovich Y, 2016, LECT NOTES COMPUT SC, V9854, P346, DOI 10.1007/978-3-319-45719-2_16
   Zhou YJ, 2011, LECT NOTES COMPUT SC, V6740, P93, DOI 10.1007/978-3-642-21599-5_7
NR 68
TC 5
Z9 5
U1 0
U2 7
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD OCT 1
PY 2021
VL 47
IS 10
BP 2032
EP 2051
DI 10.1109/TSE.2019.2941936
PG 20
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA WH1IX
UT WOS:000707441900001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Zhang, HX
   Wang, SW
   Chen, TH
   Zou, Y
   Hassan, AE
AF Zhang, Haoxiang
   Wang, Shaowei
   Chen, Tse-Hsun
   Zou, Ying
   Hassan, Ahmed E.
TI An Empirical Study of Obsolete Answers on Stack Overflow
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Aging; Knowledge engineering; Message systems; Google; Computer
   languages; Software engineering; Security; Q&amp; A website; stack
   overflow; obsolete knowledge; knowledge sharing
ID CODE
AB Stack Overflow accumulates an enormous amount of software engineering knowledge. However, as time passes, certain knowledge in answers may become obsolete. Such obsolete answers, if not identified or documented clearly, may mislead answer seekers and cause unexpected problems (e.g., using an out-dated security protocol). In this paper, we investigate how the knowledge in answers becomes obsolete and identify the characteristics of such obsolete answers. We find that: 1) More than half of the obsolete answers (58.4 percent) were probably already obsolete when they were first posted. 2) When an obsolete answer is observed, only a small proportion (20.5 percent) of such answers are ever updated. 3) Answers to questions in certain tags (e.g., node.js, ajax, android, and objective-c) are more likely to become obsolete. Our findings suggest that Stack Overflow should develop mechanisms to encourage the whole community to maintain answers (to avoid obsolete answers) and answer seekers are encouraged to carefully go through all information (e.g., comments) in answer threads.
C1 [Zhang, Haoxiang; Wang, Shaowei; Hassan, Ahmed E.] Queens Univ, Software Anal & Intelligence Lab SAIL, Kingston, ON K7L 3N6, Canada.
   [Chen, Tse-Hsun] Concordia Univ, Dept Comp Sci & Software Engn, Montreal, PQ H3G 1M8, Canada.
   [Zou, Ying] Queens Univ, Dept Elect & Comp Engn, Kingston, ON K7L 3N6, Canada.
C3 Queens University - Canada; Concordia University - Canada; Queens
   University - Canada
RP Wang, SW (corresponding author), Queens Univ, Software Anal & Intelligence Lab SAIL, Kingston, ON K7L 3N6, Canada.
EM hzhang@cs.queensu.ca; shaowei@cs.queensu.ca; peterc@encs.concordia.ca;
   ying.zou@queensu.ca; ahmed@cs.queensu.ca
RI KHALIFA, AHMED khalifa/HKF-2246-2023; Zou, Ying/KLC-9380-2024
OI KHALIFA, AHMED khalifa/0000-0002-2918-7572; Chen,
   Tse-Hsun/0000-0003-4027-0905
CR Abdalkareem R, 2017, INFORM SOFTWARE TECH, V88, P148, DOI 10.1016/j.infsof.2017.04.005
   Agichtein E, 2008, P 2008 INT C WEB SEA, P183
   [Anonymous], 2013, ARXIV13116876
   Asaduzzaman M, 2013, IEEE WORK CONF MIN S, P97, DOI 10.1109/MSR.2013.6624015
   Azad S, 2017, ACM T SOFTW ENG METH, V25, DOI 10.1145/2990497
   Benjamini Y, 2001, ANN STAT, V29, P1165
   Beyer S, 2018, INT C PROGRAM COMPRE, P211, DOI 10.1145/3196321.3196333
   Boslaugh S., 2008, Statistics in a nutshell-a desktop quick reference
   Chunyang Chen, 2017, Proceedings of the ACM on Human-Computer Interaction, V1, DOI 10.1145/3134667
   Duijn M, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P410, DOI 10.1109/MSR.2015.51
   Fischer F, 2017, P IEEE S SECUR PRIV, P121, DOI 10.1109/SP.2017.31
   Gao Q, 2015, IEEE INT CONF AUTOM, P307, DOI 10.1109/ASE.2015.81
   Khadka R, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P36
   Linares-Vasquez M., 2014, P 22 INT C PROGR COM, P83, DOI DOI 10.1145/2597008.2597155
   McDonnell T, 2013, PROC IEEE INT CONF S, P70, DOI 10.1109/ICSM.2013.18
   Ponzanelli L, 2014, PROC IEEE INT CONF S, P541, DOI 10.1109/ICSME.2014.90
   Ponzanelli L, 2014, INT CONF QUAL SOFTW, P343, DOI 10.1109/QSIC.2014.27
   Ragkhitwetsagul Chaiyong, 2018, **DROPPED REF**
   Rebouças M, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P634, DOI 10.1109/SANER.2016.66
   Robbes R., 2012, P ACM SIGSOFT 20 INT
   Sadowski C, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P191, DOI 10.1145/2786805.2786855
   Seaman C, 2008, ESEM'08: PROCEEDINGS OF THE 2008 ACM-IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, P149
   Seaman CB, 1999, IEEE T SOFTWARE ENG, V25, P557, DOI 10.1109/32.799955
   Shaowei Wang, 2018, Empirical Software Engineering, V23, P1552, DOI 10.1007/s10664-017-9558-5
   Tran T., 2013, Research in Computing Science, V70, P183
   Treude C, 2016, PROC INT CONF SOFTW, P392, DOI 10.1145/2884781.2884800
   Uddin G, 2015, IEEE SOFTWARE, V32, P68, DOI 10.1109/MS.2014.80
   Vassallo Carmine, 2014, Proceedings of the 22nd International Conference on Program Comprehension, P106
   Viera AJ, 2005, FAM MED, V37, P360
   Wang SW, 2018, EMPIR SOFTW ENG, V23, P1552, DOI 10.1007/s10664-017-9558-5
   Wang SW, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P604, DOI 10.1109/ICSM.2012.6405332
   Wong E, 2013, IEEE INT CONF AUTOM, P562, DOI 10.1109/ASE.2013.6693113
   Wu YH, 2019, EMPIR SOFTW ENG, V24, P637, DOI 10.1007/s10664-018-9634-5
   Yao Y, 2015, INFORM SCIENCES, V302, P70, DOI 10.1016/j.ins.2014.12.038
   Zagalsky A., 2012, 2012 Third International Workshop on Recommendation Systems for Software Engineering (RSSE), P38, DOI 10.1109/RSSE.2012.6233407
   Zhang TY, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P886, DOI 10.1145/3180155.3180260
   Zhou J, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P266, DOI 10.1145/2950290.2950298
NR 37
TC 31
Z9 36
U1 1
U2 4
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD APR 1
PY 2021
VL 47
IS 4
BP 850
EP 862
DI 10.1109/TSE.2019.2906315
PG 13
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA RP8GH
UT WOS:000641961100009
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Ghassabani, E
   Whalen, M
   Gacek, A
   Heimdahl, M
AF Ghassabani, Elaheh
   Whalen, Michael
   Gacek, Andrew
   Heimdahl, Mats
TI Inductive Validity Cores
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Computational modeling; Analytical models; Tools; Safety; Mathematical
   model; Approximation algorithms; Model checking; Inductive validity
   cores; SMT-based model checking; requirements analysis; proof
   explanation
ID MAXSAT
AB Symbolic model checkers can construct proofs of properties over highly complex models. However, the results reported by the tool when a proof succeeds do not generally provide much insight to the user. It is often useful for users to have traceability information related to the proof: which portions of the model were necessary to construct it. This traceability information can be used to diagnose a variety of modeling problems such as overconstrained axioms and underconstrained properties, measure completeness of a set of requirements over a model, and assist with design optimization given a set of requirements for an existing or synthesized implementation. In this paper, we present a comprehensive treatment of a suite of algorithms to compute inductive validity cores (IVCs), minimal sets of model elements necessary to construct inductive proofs of safety properties for sequential systems. The algorithms are based on the UNSAT core support built into current SMT solvers and novel encodings of the inductive problem to generate approximate and guaranteed minimal inductive validity cores as well as all inductive validity cores. We demonstrate that our algorithms are correct, describe their implementation in the JKind model checker for Lustre models, and present several use cases for the algorithms. We then present a substantial experiment in which we benchmark the efficiency and efficacy of the algorithms.
C1 [Ghassabani, Elaheh; Whalen, Michael; Heimdahl, Mats] Univ Minnesota, Dept Comp Sci & Engn, Minneapolis, MN 55455 USA.
   [Gacek, Andrew] Adv Technol Ctr, Rockwell Collins, Cedar Rapids, IA 52498 USA.
C3 University of Minnesota System; University of Minnesota Twin Cities;
   Rockwell Collins
RP Ghassabani, E (corresponding author), Univ Minnesota, Dept Comp Sci & Engn, Minneapolis, MN 55455 USA.
EM ghass013@umn.edu; mwwhalen@umn.edu; andrew.gacek@rockwellcollins.com;
   heimdahl@umn.edu
FU DARPA Systems of Systems Integration Technology and Experimentation
   phase 2 project [FA8650-16-C-7656]; NASA Compositional Verification of
   Flight-Critical Systems [NNA13AA21C]
FX This work was sponsored by the DARPA Systems of Systems Integration
   Technology and Experimentation phase 2 project (contract:
   FA8650-16-C-7656) as well as the NASA Compositional Verification of
   Flight-Critical Systems (contract: NNA13AA21C). We would like to thank
   Mona Rahimi for discussions that led to the initial IVC idea, John
   Backes and Anitha Murugesan for discussions on various aspects of IVCs,
   and Lucas Wagner for his work integrating them into the Spear
   requirements tool.
CR AGRAWAL H, 1990, SIGPLAN NOTICES, V25, P246, DOI 10.1145/93548.93576
   Backes J, 2015, LECT NOTES COMPUT SC, V9058, P82, DOI 10.1007/978-3-319-17524-9_7
   Bailey J, 2005, LECT NOTES COMPUT SC, V3350, P174
   Barnat J, 2016, P 36 IARCS ANN C FDN, DOI DOI 10.4230/LIPICS.FSTTCS.2016.50
   Beer I, 1997, LECT NOTES COMPUT SC, V1254, P279
   Belov Anton, 2012, Principles and Practice of Constraint Programming. Proceedings 18th International Conference, CP 2012, P158, DOI 10.1007/978-3-642-33558-7_14
   Belov A, 2013, DES AUT TEST EUROPE, P1411
   Belov A, 2012, AI COMMUN, V25, P97, DOI 10.3233/AIC-2012-0523
   Ben-David Shoham, 2013, Automated Technology for Verification and Analysis. 11th International Symposium, ATVA 2013. Proceedings: LNCS 8172, P148, DOI 10.1007/978-3-319-02444-8_12
   Bendík J, 2017, PROCEEDINGS OF THE 26TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA'17), P408, DOI 10.1145/3092703.3098239
   Bendík J, 2016, LECT NOTES COMPUT SC, V9763, P121, DOI 10.1007/978-3-319-41591-8_9
   Bourbouh Hamza, 2017, AUTOMATED ANAL STATE, DOI DOI 10.29007/B8GQ
   Chockler H, 2003, LECT NOTES COMPUT SC, V2860, P111
   Chockler H, 2001, LECT NOTES COMPUT SC, V2102, P66
   Chockler H, 2007, MEMOCODE'07: FIFTH ACM & IEEE INTERNATIONAL CONFERENCE ON FORMAL METHODS AND MODELS FOR CO-DESIGN, PROCEEDINGS, P189
   Chockler H, 2010, DES AUT CON, P182
   Chockler H, 2009, FORM METHOD SYST DES, V34, P37, DOI 10.1007/s10703-008-0060-y
   Cimatti A, 2007, LECT NOTES COMPUT SC, V4501, P334
   Cimatti A, 2013, LECT NOTES COMPUT SC, V7795, P93
   Claessen K, 2007, FMCAD 2007: FORMAL METHODS IN COMPUTER AIDED DESIGN, PROCEEDINGS, P139, DOI 10.1109/.32
   Claessen K, 2012, Proceedings of the 12th Conference on Formal Methods in Computer-Aided Design (FMCAD 2012), P52
   Cleland-Huang J, 2007, COMPUTER, V40, P27, DOI 10.1109/MC.2007.195
   Cofer Darren, 2012, NASA Formal Methods. Proceedings of the 4th International Symposium, NFM 2012, P126, DOI 10.1007/978-3-642-28891-3_13
   Das S, 2005, I CONF VLSI DESIGN, P201
   Davies Jessica, 2011, Principles and Practice of Constraint Programming - CP 2011. Proceedings of the 17th International Conference (CP 2011), P225, DOI 10.1007/978-3-642-23786-7_19
   de Moura L, 2008, LECT NOTES COMPUT SC, V4963, P337, DOI 10.1007/978-3-540-78800-3_24
   Dutertre B, 2006, TOOL PAPER
   Een N., 2011, 2011 Formal Methods in Computer-Aided Design (FMCAD), P125
   Egyed A, 2002, ASE 2002: 17TH IEEE INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, P163, DOI 10.1109/ASE.2002.1115010
   Gacek A, 2018, LECT NOTES COMPUT SC, V10982, P20, DOI 10.1007/978-3-319-96142-2_3
   Gaucher F, 2003, SLICING LUSTRE PROGR
   Ghassabani E, 2018, THESIS U MINNESOTA T
   Ghassabani E, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P314, DOI 10.1145/2950290.2950346
   Ghassabani E, 2017, IEEE INT CONF AUTOM, P194, DOI 10.1109/ASE.2017.8115632
   Ghassabani E, 2017, PROCEEDINGS OF THE 17TH CONFERENCE ON FORMAL METHODS IN COMPUTER AIDED DESIGN (FMCAD 2017), P31, DOI 10.23919/FMCAD.2017.8102238
   Gotel O., 2012, SOFTWARE SYSTEMS TRA, P3, DOI [DOI 10.1007/978-1-4471-2239-5_1, 10.1007/978-1-4471-2239-5_1]
   Gotel O. C. Z., 1994, Proceedings of the First International Conference on Requirements Engineering (Cat. No.94TH0613-0), P94, DOI 10.1109/ICRE.1994.292398
   Grosse D, 2007, DES AUT TEST EUROPE, P1176
   Gupta A, 2003, ICCAD-2003: IEEE/ACM DIGEST OF TECHNICAL PAPERS, P416, DOI 10.1109/ICCAD.2003.1257811
   Gurfinkel A, 2012, ACM T COMPUT LOG, V13, DOI 10.1145/2071368.2071369
   Hagen G, 2008, P INT C FORM METH CO, P15
   HALBWACHS N, 1991, P IEEE, V79, P1305, DOI 10.1109/5.97300
   Hammond J, 2001, FIFTH IEEE INTERNATIONAL SYMPOSIUM ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P102
   Hardin D, 2009, LECT NOTES COMPUT SC, V5885, P266, DOI 10.1007/978-3-642-10373-5_14
   Hayes JH, 2003, 11TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, PROCEEDINGS, P138
   Heimdahl M. P, 2013, P ACM INT C HIGH INT
   Heimdahl MPE, 2002, ASE 2002: 17TH IEEE INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, P37, DOI 10.1109/ASE.2002.1114992
   Huan Chen, 2011, 2011 IEEE/IFIP 19th International Conference on VLSI and System-on-Chip, P142, DOI 10.1109/VLSISoC.2011.6081636
   Ivrii A, 2014, 2014 FORMAL METHODS IN COMPUTER-AIDED DESIGN (FMCAD), P115, DOI 10.1109/FMCAD.2014.6987603
   Kahsai T, 2011, LECT NOTES COMPUT SC, V6617, P192, DOI 10.1007/978-3-642-20398-5_15
   Keenan E, 2012, PROC INT CONF SOFTW, P1375, DOI 10.1109/ICSE.2012.6227244
   Kupferman O., 2003, International Journal on Software Tools for Technology Transfer, V4, P224, DOI 10.1007/s100090100062
   Kupferman O., 2008, P INT C FORM METH CO, P25
   Kupferman O, 2006, LECT NOTES COMPUT SC, V4137, P37
   Li H. F., 2004, Automated Software Engineering, V11, P63, DOI 10.1023/B:AUSE.0000008668.12782.6c
   Liffiton MH, 2008, J AUTOM REASONING, V40, P1, DOI 10.1007/s10817-007-9084-z
   Liffiton MH, 2016, CONSTRAINTS, V21, P223, DOI 10.1007/s10601-015-9183-0
   Marques-Silva J, 2010, INT SYM MVL, P9, DOI 10.1109/ISMVL.2010.11
   McMillan K. L, 1999, 199901 CAD BERK LABS
   McMillan KL, 2003, LECT NOTES COMPUT SC, V2619, P2
   Mebsout A, 2016, PROCEEDINGS OF THE 2016 16TH CONFERENCE ON FORMAL METHODS IN COMPUTER-AIDED DESIGN (FMCAD 2016), P117, DOI 10.1109/FMCAD.2016.7886669
   Miller SP, 2010, COMMUN ACM, V53, P58, DOI 10.1145/1646353.1646372
   Morgado A, 2013, CONSTRAINTS, V18, P478, DOI 10.1007/s10601-013-9146-2
   Murugesan A, 2016, INT REQUIR ENG CONF, P359, DOI 10.1109/RE.2016.35
   Murugesan A, 2015, LECT NOTES COMPUT SC, V9058, P279, DOI 10.1007/978-3-319-17524-9_20
   Nadel A., 2014, J. Satisf. Boolean Model. Comput, V9, P27
   Parker David, 2012, Proceedings. Lecture Notes in Computer Science, P248, DOI [10.1007/978-3-642-31759-0_19, DOI 10.1007/978-3-642-31759-0_19, DOI 10.1007/978-3-642-31759-019]
   Pike L, 2006, IEEE T SOFTWARE ENG, V32, P347, DOI 10.1109/TSE.2006.41
   Ranjan R. K, 2014, U.S. Patent, Patent No. 8826201
   Rushby J, 2009, SEFM 2009: SEVENTH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING AND FORMAL METHODS, P3, DOI 10.1109/SEFM.2009.39
   Ryvchin V, 2011, LECT NOTES COMPUT SC, V6695, P174
   Schuler D., 2011, Proceedings 2011 IEEE Fourth International Conference on Software Testing, Verification and Validation (ICST 2011), P90, DOI 10.1109/ICST.2011.32
   Schuppan V, 2006, ELECTRON NOTES THEOR, V149, P79, DOI 10.1016/j.entcs.2005.11.018
   Sheeran M, 2000, LECT NOTES COMPUT SC, V1954, P108
   TIP F, 1995, J PROGRAM LANG, V3, P121
   Torlak E, 2008, LECT NOTES COMPUT SC, V5014, P326, DOI 10.1007/978-3-540-68237-0_23
   Wagner L, 2017, P SAF SEC SYST SOFTW
   Weiser M., 1981, 5th International Conference on Software Engineering, P439
   Whalen M, 2008, LECT NOTES COMPUT SC, V4916, P68
   Whalen M, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P102, DOI 10.1109/ICSE.2013.6606556
   You DJ, 2015, 2015 IEEE 26TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING (ISSRE), P228, DOI 10.1109/ISSRE.2015.7381816
   Zave P., 1997, ACM Transactions on Software Engineering and Methodology, V6, P1, DOI 10.1145/237432.237434
   Zhang L, 2003, LNCS, V2919
   Zhang LM, 2013, IEEE INT CONF AUTOM, P92, DOI 10.1109/ASE.2013.6693070
NR 84
TC 1
Z9 1
U1 0
U2 2
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD FEB 1
PY 2021
VL 47
IS 2
BP 279
EP 299
DI 10.1109/TSE.2019.2891709
PG 21
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA QG7HE
UT WOS:000617753400004
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Soltani, M
   Panichella, A
   van Deursen, A
AF Soltani, Mozhan
   Panichella, Annibale
   van Deursen, Arie
TI Search-Based Crash Reproduction and Its Impact on Debugging
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Debugging; Tools; Software; Core dumps; Explosions; Computer bugs;
   Search-based software testing; genetic algorithms; automated crash
   reproduction; empirical software engineering
ID SOFTWARE; EXECUTION; FAILURES
AB Software systems fail. These failures are often reported to issue tracking systems, where they are prioritized and assigned to responsible developers to be investigated. When developers debug software, they need to reproduce the reported failure in order to verify whether their fix actually prevents the failure from happening again. Since manually reproducing each failure could be a complex task, several automated techniques have been proposed to tackle this problem. Despite showing advancements in this area, the proposed techniques showed various types of limitations. In this paper, we present EvoCrash, a new approach to automated crash reproduction based on a novel evolutionary algorithm, called Guided Genetic Algorithm (GGA). We report on our empirical study on using EvoCrash to reproduce 54 real-world crashes, as well as the results of a controlled experiment, involving human participants, to assess the impact of EvoCrash tests in debugging. Based on our results, EvoCrash outperforms state-of-the-art techniques in crash reproduction and uncovers failures that are undetected by classical coverage-based unit test generation tools. In addition, we observed that using EvoCrash helps developers provide fixes more often and take less time when debugging, compared to developers debugging and fixing code without using EvoCrash tests.
C1 [Soltani, Mozhan; Panichella, Annibale; van Deursen, Arie] Delft Univ Technol, Software Engn Res Grp, NL-2628 Delft, Netherlands.
C3 Delft University of Technology
RP Soltani, M (corresponding author), Delft Univ Technol, Software Engn Res Grp, NL-2628 Delft, Netherlands.
EM m.soltani@tudelft.nl; A.Panichella@tudelft.nl;
   Arie.vanDeursen@tudelft.nl
RI van Deursen, Arie/G-3084-2011
OI van Deursen, Arie/0000-0003-4850-3312
FU EU Project STAMP [ICT-16-10, 731529]; Dutch 4TU project "Big Software on
   the Run"; National Research Fund, Luxembourg [FNR/P10/03]
FX The authors would like to thank Andy Zaidman and all the experiment
   participants for their invaluable collaboration. In addition, the
   authors thank Marieke I lu isman for reviewing the paper and providing
   constructive feedback. This research was partially funded by the EU
   Project STAMP ICT-16-10 No.731529, the Dutch 4TU project "Big Software
   on the Run" and National Research Fund, Luxembourg FNR/P10/03.
CR Afshan S, 2013, 2013 IEEE SIXTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST 2013), P352, DOI 10.1109/ICST.2013.11
   [Anonymous], 2017, UI APPL EXERCISER MO
   [Anonymous], 2014, P ACM IEEE INT C AUT, DOI DOI 10.1145/2642937.2642986
   [Anonymous], 2013, P 2013 INT S SOFTW T, DOI DOI 10.1145/2483760.2483774
   [Anonymous], 2000, JRAPTURE CAPTURE REP
   Arcuri A, 2016, LECT NOTES COMPUT SC, V9962, P3, DOI 10.1007/978-3-319-47106-8_1
   Arcuri A, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P155, DOI 10.1145/2786805.2786828
   Arcuri A, 2014, SOFTW TEST VERIF REL, V24, P219, DOI 10.1002/stvr.1486
   Arcuri A, 2013, EMPIR SOFTW ENG, V18, P594, DOI 10.1007/s10664-013-9249-9
   Artzi S., 2010, ISSTA, P49, DOI DOI 10.1145/1831708.1831715
   Artzi S, 2008, LECT NOTES COMPUT SC, V5142, P542, DOI 10.1007/978-3-540-70592-5_23
   Baars A., 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P53, DOI 10.1109/ASE.2011.6100119
   Baier C, 2008, PRINCIPLES OF MODEL CHECKING, P1
   Bell J, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P362, DOI 10.1109/ICSE.2013.6606582
   Bianchi FA, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P705, DOI 10.1145/3106237.3106292
   Boyapati C., 2002, Software Engineering Notes, V27, P123, DOI 10.1145/566171.566191
   Braione P, 2017, PROCEEDINGS OF THE 26TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA'17), P90, DOI 10.1145/3092703.3092715
   Bühler O, 2008, COMPUT OPER RES, V35, P3144, DOI 10.1016/j.cor.2007.01.015
   Buse RPL, 2011, ACM SIGPLAN NOTICES, V46, P643, DOI 10.1145/2076021.2048117
   Cao Y., 2014, Proceedings of the ACM/IEEE International Conference on Automated Software Engineering ASE, P791
   Ceccato M, 2012, PROC INT CONF SOFTW, P452, DOI 10.1109/ICSE.2012.6227170
   Chen N, 2015, IEEE T SOFTWARE ENG, V41, P198, DOI 10.1109/TSE.2014.2363469
   Cibulski H., 2011, 2011 IEEE Fourth International Conference on Software Testing, Verification and Validation Workshops (ICSTW), P115, DOI 10.1109/ICSTW.2011.28
   Clause J, 2007, PROC INT CONF SOFTW, P261
   Coelho R, 2017, EMPIR SOFTW ENG, V22, P1264, DOI 10.1007/s10664-016-9443-7
   Coelho R, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P134, DOI 10.1109/MSR.2015.20
   Dang YN, 2012, PROC INT CONF SOFTW, P1084, DOI 10.1109/ICSE.2012.6227111
   Deb K., 2014, SEARCH METHODOLOGIES, P403, DOI DOI 10.1007/978-1-4614-6940-7_15
   Degbotse A, 2017, EL PACKAG TECH CONF
   Fraser G, 2017, 2017 IEEE/ACM 10TH INTERNATIONAL WORKSHOP ON SEARCH-BASED SOFTWARE TESTING (SBST), P39, DOI 10.1109/SBST.2017.6
   Fraser G, 2016, 2016 IEEE/ACM 9TH INTERNATIONAL WORKSHOP ON SEARCH-BASED SOFTWARE TESTING (SBST), P33, DOI [10.1109/SBST.2016.014, 10.1145/2897010.2897020]
   Fraser G, 2015, ACM T SOFTW ENG METH, V24, DOI 10.1145/2699688
   Fraser G, 2015, EMPIR SOFTW ENG, V20, P611, DOI 10.1007/s10664-013-9288-2
   Fraser G, 2015, J SYST SOFTWARE, V103, P311, DOI 10.1016/j.jss.2014.05.032
   Fraser G, 2013, 2013 IEEE SIXTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST 2013), P362, DOI 10.1109/ICST.2013.51
   Fraser G, 2013, IEEE T SOFTWARE ENG, V39, P276, DOI 10.1109/TSE.2012.14
   Godefroid P, 2005, ACM SIGPLAN NOTICES, V40, P213, DOI 10.1145/1064978.1065036
   Gómez M, 2016, 2016 IEEE/ACM INTERNATIONAL CONFERENCE ON MOBILE SOFTWARE ENGINEERING AND SYSTEMS (MOBILESOFT 2016), P88, DOI [10.1109/MobileSoft.2016.033, 10.1145/2897073.2897088]
   Harman M, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P342, DOI 10.1109/FOSE.2007.29
   Harman M, 2012, LECT NOTES COMPUT SC, V7007, P1
   Host M., 2000, Empirical Software Engineering, V5, P201, DOI 10.1023/A:1026586415054
   Jaygarl Hojun, 2010, P 19 INT S SOFTWARE, P159
   Jia Y, 2008, EIGHTH IEEE INTERNATIONAL WORKING CONFERENCE ON SOURCE CODE ANALYSIS AND MANIPULATION, PROCEEDINGS, P249, DOI 10.1109/SCAM.2008.36
   Jin W, 2012, PROC INT CONF SOFTW, P474, DOI 10.1109/ICSE.2012.6227168
   Kifetew FM, 2014, 2014 IEEE SEVENTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST), P163, DOI 10.1109/ICST.2014.29
   Kifetew FM, 2013, IEEE INT CONF AUTOM, P604, DOI 10.1109/ASE.2013.6693120
   Leitner A, 2009, SECOND INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION, AND VALIDATION, PROCEEDINGS, P416, DOI 10.1109/ICST.2009.30
   Machiry A., 2013, P 2013 9 JOINT M FDN, P224
   Mao K., 2016, P 25 INT S SOFTW TES, P94
   McMinn P, 2004, SOFTW TEST VERIF REL, V14, P105, DOI 10.1002/stvr.294
   McMinn P., 2011, 2011 IEEE Fourth International Conference on Software Testing, Verification and Validation Workshops (ICSTW), P153, DOI 10.1109/ICSTW.2011.100
   Moran K, 2016, IEEE INT CONF SOFTW, P33, DOI 10.1109/ICST.2016.34
   Mortensen T, 2012, ACCOUNT FORUM, V36, P251, DOI 10.1016/j.accfor.2012.06.003
   Narayanasamy S, 2005, CONF PROC INT SYMP C, P284, DOI 10.1109/ISCA.2005.16
   Nayrolles M, 2017, J SOFTW-EVOL PROC, V29, DOI 10.1002/smr.1789
   Nayrolles M, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P101, DOI 10.1109/SANER.2015.7081820
   Orso A., 2014, P FUTURE SOFTWARE EN, P117, DOI [10.1145/2593882.2593885, DOI 10.1145/2593882.2593885]
   Pacheco C, 2007, PROC INT CONF SOFTW, P75
   Panichella A, 2015, 2015 IEEE/ACM 8TH INTERNATIONAL SYMPOSIUM ON SOFTWARE AND SYSTEMS TRACEABILITY, P15, DOI 10.1109/SST.2015.10
   Panichella A, 2015, IEEE T SOFTWARE ENG, V41, P358, DOI 10.1109/TSE.2014.2364175
   Panichella S, 2016, PROC INT CONF SOFTW, P547, DOI 10.1145/2884781.2884847
   Parnin C, 2011, CONF PROC INT SYMP C, P197, DOI 10.1109/ICPC.2011.49
   Prasetya I. S. Wishnu B., 2014, Future Internet Testing. First International Workshop, FITTEST 2013. Revised Selected Papers, P101, DOI 10.1007/978-3-319-07785-7_7
   Puschner P, 1998, REAL TIM SYST SYMP P, P134, DOI 10.1109/REAL.1998.739738
   Ramler R, 2012, EUROMICRO CONF PROC, P286, DOI 10.1109/SEAA.2012.42
   Rössler J, 2013, 2013 IEEE SIXTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST 2013), P114, DOI 10.1109/ICST.2013.18
   Rojas H, 2015, NEW AGENDAS COMMUN, P93
   Rojas J.M., 2015, Automated Unit Test Generation During Software Development: A Controlled Experiment and Think-aloud Observations, P338
   Rojas JM, 2017, EMPIR SOFTW ENG, V22, P852, DOI 10.1007/s10664-015-9424-2
   Saff David., 2005, PROC ASE, P114, DOI DOI 10.1145/1101908.1101927
   Saier MH, 2007, WATER AIR SOIL POLL, V181, P1, DOI 10.1007/s11270-007-9372-6
   Sakti A, 2015, IEEE T SOFTWARE ENG, V41, P294, DOI 10.1109/TSE.2014.2363479
   Sjoberg DIK, 2005, IEEE T SOFTWARE ENG, V31, P733, DOI 10.1109/TSE.2005.97
   Soltani M, 2017, PROC INT CONF SOFTW, P209, DOI 10.1109/ICSE.2017.27
   Soltani M, 2016, 2016 IEEE/ACM 9TH INTERNATIONAL WORKSHOP ON SEARCH-BASED SOFTWARE TESTING (SBST), P1, DOI [10.1109/SBST.2016.009, 10.1145/2897010.2897015]
   Tillmann N, 2008, LECT NOTES COMPUT SC, V4966, P134
   Vargha A, 2000, J EDUC BEHAV STAT, V25, P101, DOI 10.3102/10769986025002101
   Weeratunge D, 2010, ASPLOS XV: FIFTEENTH INTERNATIONAL CONFERENCE ON ARCHITECTURAL SUPPORT FOR PROGRAMMING LANGUAGES AND OPERATING SYSTEMS, P155
   Wegener J, 2001, INFORM SOFTWARE TECH, V43, P841, DOI 10.1016/S0950-5849(01)00190-2
   Wettel R, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P551, DOI 10.1145/1985793.1985868
   Xiao XS, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P611, DOI 10.1145/1985793.1985876
   Xuan JF, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P910, DOI 10.1145/2786805.2803206
   Yu TT, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P694, DOI 10.1145/3106237.3106266
   Yuan Ding, 2014, 11 USENIX S OPERATIN, P249
   Zamfir C, 2010, EUROSYS'10: PROCEEDINGS OF THE EUROSYS 2010 CONFERENCE, P321
NR 85
TC 19
Z9 19
U1 1
U2 10
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD DEC 1
PY 2020
VL 46
IS 12
BP 1294
EP 1317
DI 10.1109/TSE.2018.2877664
PG 24
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA PD6GQ
UT WOS:000597780900002
OA Green Published
DA 2024-07-18
ER

PT J
AU Li, XC
   Jiang, H
   Kamei, Y
   Chen, X
AF Li, Xiaochen
   Jiang, He
   Kamei, Yasutaka
   Chen, Xin
TI Bridging Semantic Gaps between Natural Languages and APIs with Word
   Embedding
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Tools; Natural languages; Training; Software; Task analysis; Semantics;
   Estimation; Relatedness estimation; word embedding; word2Vec; query
   expansion; API documents linking
AB Developers increasingly rely on text matching tools to analyze the relation between natural language words and APIs. However, semantic gaps, namely textual mismatches between words and APIs, negatively affect these tools. Previous studies have transformed words or APIs into low-dimensional vectors for matching; however, inaccurate results were obtained due to the failure of modeling words and APIs simultaneously. To resolve this problem, two main challenges are to be addressed: the acquisition of massive words and APIs for mining and the alignment of words and APIs for modeling. Therefore, this study proposes Word2API to effectively estimate relatedness of words and APIs. Word2API collects millions of commonly used words and APIs from code repositories to address the acquisition challenge. Then, a shuffling strategy is used to transform related words and APIs into tuples to address the alignment challenge. Using these tuples, Word2API models words and APIs simultaneously. Word2API outperforms baselines by 10-49.6 percent of relatedness estimation in terms of precision and NDCG. Word2API is also effective on solving typical software tasks, e.g., query expansion and API documents linking. A simple system with Word2API-expanded queries recommends up to 21.4 percent more related APIs for developers. Meanwhile, Word2API improves comparison algorithms by 7.9-17.4 percent in linking questions in Question&Answer communities to API documents.
C1 [Li, Xiaochen; Jiang, He] Dalian Univ Technol, Sch Software, Dalian 116023, Peoples R China.
   [Li, Xiaochen; Jiang, He] Dalian Univ Technol, Key Lab Ubiquitous Network & Serv Software Liaoni, Dalian 116023, Peoples R China.
   [Kamei, Yasutaka] Kyushu Univ, Principles Software Languages Grp POSL, Fukuoka 8190395, Japan.
   [Chen, Xin] Hangzhou Dianzi Univ, Sch Comp Sci & Technol, Hangzhou 310005, Peoples R China.
C3 Dalian University of Technology; Dalian University of Technology; Kyushu
   University; Hangzhou Dianzi University
RP Jiang, H (corresponding author), Dalian Univ Technol, Sch Software, Dalian 116023, Peoples R China.; Jiang, H (corresponding author), Dalian Univ Technol, Key Lab Ubiquitous Network & Serv Software Liaoni, Dalian 116023, Peoples R China.
EM li1989@mail.dlut.edu.cn; jianghe@dlut.edu.cn; kamei@ait.kyushu-u.ac.jp;
   chenxin4391@mail.dlut.edu.cn
FU National Key Research and Development Program of China [2018YFB1003900];
   National Natural Science Foundation of China [61722202]; JSPS KAKENHI
   [JP15H05306, JP18H03222]
FX We thank the volunteers for their contributions to the exhausted human
   judgements processes. We thank the reviewers for their insightful
   comments to improve this paper. Their comments help us look deep into
   Word2API. Thiswork is supported by the National Key Research and
   Development Program of China under Grants 2018YFB1003900, and supported
   in part by the National Natural Science Foundation of China under Grants
   No. 61722202 and the JSPS KAKENHI GrantNumber JP15H05306 and JP18H03222.
CR Allamanis M, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P38, DOI 10.1145/2786805.2786849
   Apache, 2008, AP LUC
   Baeza-Yates R A, 2011, MODERN INFORM RETRIE
   Beyer S, 2015, INT C PROGRAM COMPRE, P94, DOI 10.1109/ICPC.2015.18
   Bloch J., 2006, 21 ACM SIGPLAN S OBJ, P506, DOI DOI 10.1145/1176617.1176622
   Brown P. F., 1993, Computational Linguistics, V19, P263
   Campbell BA, 2017, PROC IEEE INT CONF S, P628, DOI 10.1109/ICSME.2017.56
   Chen CY, 2017, PROC INT CONF SOFTW, P450, DOI 10.1109/ICSE.2017.48
   CHURCH KW, 1990, 27TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, P76
   Cilibrasi RL, 2007, IEEE T KNOWL DATA EN, V19, P370, DOI 10.1109/TKDE.2007.48
   COHEN J, 1960, EDUC PSYCHOL MEAS, V20, P37, DOI 10.1177/001316446002000104
   Corley CS, 2015, PROC IEEE INT CONF S, P556, DOI 10.1109/ICSM.2015.7332513
   Gracia J, 2008, LECT NOTES COMPUT SC, V5175, P136, DOI 10.1007/978-3-540-85481-4_12
   Gu XD, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P631, DOI 10.1145/2950290.2950334
   Hill E, 2014, 2014 SOFTWARE EVOLUTION WEEK - IEEE CONFERENCE ON SOFTWARE MAINTENANCE, REENGINEERING, AND REVERSE ENGINEERING (CSMR-WCRE), P34, DOI 10.1109/CSMR-WCRE.2014.6747190
   Howard MJ, 2013, IEEE WORK CONF MIN S, P377, DOI 10.1109/MSR.2013.6624052
   Jiang H, 2017, PROC INT CONF SOFTW, P712, DOI 10.1109/ICSE.2017.71
   Kalliamvakou E, 2016, EMPIR SOFTW ENG, V21, P2035, DOI 10.1007/s10664-015-9393-5
   Keivanloo I, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P664, DOI 10.1145/2568225.2568292
   Landauer TK, 1997, PSYCHOL REV, V104, P211, DOI 10.1037/0033-295X.104.2.211
   Lotufo R, 2015, EMPIR SOFTW ENG, V20, P516, DOI 10.1007/s10664-014-9311-2
   Lu ML, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P545, DOI 10.1109/SANER.2015.7081874
   Lund K, 1996, BEHAV RES METH INSTR, V28, P203, DOI 10.3758/BF03204766
   Lv F, 2015, IEEE INT CONF AUTOM, P260, DOI 10.1109/ASE.2015.42
   Mahmoud A, 2015, ACM T SOFTW ENG METH, V25, DOI 10.1145/2824251
   Maldonado ED, 2017, IEEE T SOFTWARE ENG, V43, P1044, DOI 10.1109/TSE.2017.2654244
   McMillan C, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P111, DOI 10.1145/1985793.1985809
   Mihalcea R., 2006, P 21 NAT C ART INT, V6, P775
   Mikolov T., 2013, ADV NEURAL INFORM PR, V26, P3111, DOI DOI 10.5555/2999792.2999959
   Mikolov T., 2013, INT C LEARN REPR SCO, DOI 10.48550/ARXIV.1301.3781
   MILLER GA, 1995, COMMUN ACM, V38, P39, DOI 10.1145/219717.219748
   Nie LM, 2016, IEEE T SERV COMPUT, V9, P771, DOI 10.1109/TSC.2016.2560165
   Oracle, 2017, OV HID METH
   Papineni K, 2002, 40TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, PROCEEDINGS OF THE CONFERENCE, P311, DOI 10.3115/1073083.1073135
   Parnin C., CROWD DOCUMENTATION, V11
   Pascarella L, 2017, IEEE WORK CONF MIN S, P227, DOI 10.1109/MSR.2017.63
   Piccioni Marco, 2013, 2013 ACM / IEEE International Symposium on Empirical Software Engineering and Measurement (ESEM), P5, DOI 10.1109/ESEM.2013.14
   PORTER MF, 1980, PROGRAM-AUTOM LIBR, V14, P130, DOI 10.1108/eb046814
   Raghothaman M, 2016, PROC INT CONF SOFTW, P357, DOI 10.1145/2884781.2884808
   Robillard MP, 2011, EMPIR SOFTW ENG, V16, P703, DOI 10.1007/s10664-010-9150-8
   Roldan-Vega M, 2013, PROC IEEE INT CONF S, P512, DOI 10.1109/ICSM.2013.84
   Storey MA, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P251, DOI 10.1145/1368088.1368123
   Subramanian S, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P643, DOI 10.1145/2568225.2568313
   Sungur A, 2015, SOIL SEDIMENT CONTAM, V24, P1, DOI 10.1080/15320383.2014.907238
   Sutskever I, 2014, ADV NEUR IN, V27
   Tantithamthavorn C, 2016, PROC INT CONF SOFTW, P321, DOI 10.1145/2884781.2884857
   Tian Y, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE COMPANION 2014), P568, DOI 10.1145/2591062.2591071
   Tian Y, 2014, 2014 SOFTWARE EVOLUTION WEEK - IEEE CONFERENCE ON SOFTWARE MAINTENANCE, REENGINEERING, AND REVERSE ENGINEERING (CSMR-WCRE), P44, DOI 10.1109/CSMR-WCRE.2014.6747213
   Treude C, 2016, PROC INT CONF SOFTW, P392, DOI 10.1145/2884781.2884800
   Nguyen TD, 2017, PROC INT CONF SOFTW, P438, DOI 10.1109/ICSE.2017.47
   Tseng CS, 2014, INNOVATION, COMMUNICATION AND ENGINEERING, P677
   Voorhees E.M., 2001, NIST Special Publication 500-250: The Tenth Text REtrieval Conference (TREC 2001), P1
   Weisstein Eric W., 2004, Bonferroni correction
   Wikipedia, 2017, APPL PROGR INT
   Yang JQ, 2014, EMPIR SOFTW ENG, V19, P1856, DOI 10.1007/s10664-013-9264-x
   Ye X, 2016, PROC INT CONF SOFTW, P404, DOI 10.1145/2884781.2884862
   Zhou Y, 2017, PROC INT CONF SOFTW, P27, DOI 10.1109/ICSE.2017.11
NR 57
TC 16
Z9 17
U1 0
U2 12
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD OCT 1
PY 2020
VL 46
IS 10
BP 1081
EP 1097
DI 10.1109/TSE.2018.2876006
PG 17
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science; Engineering
GA OA7HI
UT WOS:000577950900003
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Gallaba, K
   McIntosh, S
AF Gallaba, Keheliya
   McIntosh, Shane
TI Use and Misuse of Continuous Integration Features: An Empirical Study of
   Projects That (Mis)Use Travis CI
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Tools; Organizations; Software; Computer languages; Control systems;
   Electronic mail; Feature extraction; Continuous integration;
   anti-patterns; mining software repositories
ID VERIFICATION
AB Continuous Integration (CI) is a popular practice where software systems are automatically compiled and tested as changes appear in the version control system of a project. Like other software artifacts, CI specifications require maintenance effort. Although there are several service providers like Travis CI offering various CI features, it is unclear which features are being (mis)used. In this paper, we present a study of feature use and misuse in 9,312 open source systems that use Travis CI. Analysis of the features that are adopted by projects reveals that explicit deployment code is rare-48.16 percent of the studied Travis CI specification code is instead associated with configuring job processing nodes. To analyze feature misuse, we propose Hansel-an anti-pattern detection tool for Travis CI specifications. We define four anti-patterns and Hansel detects anti-patterns in the Travis CI specifications of 894 projects in the corpus (9.60 percent), and achieves a recall of 82.76 percent in a sample of 100 projects. Furthermore, we propose Gretel-an anti-pattern removal tool for Travis CI specifications, which can remove 69.60 percent of the most frequently occurring anti-pattern automatically. Using Gretel, we have produced 36 accepted pull requests that remove Travis CI anti-patterns automatically.
C1 [Gallaba, Keheliya; McIntosh, Shane] McGill Univ, Dept Elect & Comp Engn, Montreal, PQ H3A 0G4, Canada.
C3 McGill University
RP Gallaba, K (corresponding author), McGill Univ, Dept Elect & Comp Engn, Montreal, PQ H3A 0G4, Canada.
EM keheliya.gallaba@mail.mcgill.ca; shane.mcintosh@mcgill.ca
RI Gallaba, Keheliya/X-1042-2019
OI Gallaba, Keheliya/0000-0002-5880-5114
CR Adams B, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 5, P78, DOI 10.1109/SANER.2016.108
   Alicherry M, 2009, IEEE SYMP COMP COMMU, P556
   [Anonymous], ELECT COMMUNICATIONS
   Beller M, 2017, IEEE WORK CONF MIN S, P356, DOI 10.1109/MSR.2017.62
   Brown WilliamJ., 1999, AntiPatterns and Patterns in Software Configuration Management
   Cannizzo F, 2008, AGILE 2008, PROCEEDINGS, P501, DOI 10.1109/Agile.2008.31
   Chambwera M, 2014, COMMUNITY-BASED ADAPTATION TO CLIMATE CHANGE: SCALING IT UP, P55
   Cito J, 2017, IEEE WORK CONF MIN S, P323, DOI 10.1109/MSR.2017.67
   Dösinger S, 2012, IEEE INT CONF AUTOM, P374, DOI 10.1145/2351676.2351751
   Duvall Paul M., 2007, Continuous integration: improving software quality and reducing risk
   Elbaum S, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P235, DOI 10.1145/2635868.2635910
   Garcia M, 2009, CEDILLE, P146
   Hilton M, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P197, DOI 10.1145/3106237.3106270
   Hilton M, 2016, IEEE INT CONF AUTOM, P426, DOI 10.1145/2970276.2970358
   Huberman A.M., 2013, Qualitative data analysis: A methods sourcebook, V3rd
   Humble Jez, 2010, Continuous Delivery: Reliable Software Releases through Build, Test, and Deployment Automation
   Jha AK, 2017, IEEE WORK CONF MIN S, P25, DOI 10.1109/MSR.2017.41
   Kalliamvakou E., 2014, P 11 WORKING C MININ, P92, DOI DOI 10.1145/2597073.2597074
   Laukkanen E, 2017, INFORM SOFTWARE TECH, V82, P55, DOI 10.1016/j.infsof.2016.10.001
   Leppanen Marko, 2015, IEEE Software, V32, P64, DOI 10.1109/MS.2015.50
   Marinescu R, 2004, PROC IEEE INT CONF S, P350, DOI 10.1109/ICSM.2004.1357820
   McIntosh S, 2012, EMPIR SOFTW ENG, V17, P578, DOI 10.1007/s10664-011-9169-5
   Meyer M, 2014, IEEE SOFTWARE, V31, P14, DOI 10.1109/MS.2014.58
   Moha N, 2010, IEEE T SOFTWARE ENG, V36, P20, DOI 10.1109/TSE.2009.50
   Rahman A, 2018, IEEE INT CONF SOFTW, P34, DOI 10.1109/ICST.2018.00014
   SCOTT AJ, 1974, BIOMETRICS, V30, P507, DOI 10.2307/2529204
   Shambaugh R, 2016, ACM SIGPLAN NOTICES, V51, P416, DOI [10.1145/2908080.2908083, 10.1145/2980983.2908083]
   Sharma T, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P189, DOI [10.1109/MSR.2016.028, 10.1145/2901739.2901761]
   Ståhl D, 2014, J SYST SOFTWARE, V87, P48, DOI 10.1016/j.jss.2013.08.032
   Tantithamthavorn C, 2017, IEEE T SOFTWARE ENG, V43, P1, DOI 10.1109/TSE.2016.2584050
   van der Bent E, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P164, DOI 10.1109/SANER.2018.8330206
   Vasilescu B, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P805, DOI 10.1145/2786805.2786850
NR 32
TC 36
Z9 39
U1 0
U2 7
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JAN
PY 2020
VL 46
IS 1
BP 33
EP 50
DI 10.1109/TSE.2018.2838131
PG 18
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA KE2MI
UT WOS:000508392800003
OA Green Published
DA 2024-07-18
ER

PT J
AU Böhme, M
   Pham, VT
   Roychoudhury, A
AF Bohme, Marcel
   Van-Thuan Pham
   Roychoudhury, Abhik
TI Coverage-Based Greybox Fuzzing as Markov Chain
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Vulnerability detection; fuzzing; path exploration; symbolic execution;
   automated testing
AB Coverage-based Greybox Fuzzing (CGF) is a random testing approach that requires no program analysis. A new test is generated by slightly mutating a seed input. If the test exercises a new and interesting path, it is added to the set of seeds; otherwise, it is discarded. We observe that most tests exercise the same few "high-frequency" paths and develop strategies to explore significantly more paths with the same number of tests by gravitating towards low-frequency paths. We explain the challenges and opportunities of CGF using a Markov chain model which specifies the probability that fuzzing the seed that exercises path i generates an input that exercises path j. Each state (i.e., seed) has an energy that specifies the number of inputs to be generated from that seed. We show that CGF is considerably more efficient if energy is inversely proportional to the density of the stationary distribution and increases monotonically every time that seed is chosen. Energy is controlled with a power schedule. We implemented several schedules by extending AFL. In 24 hours, AFLFast exposes 3 previously unreported CVEs that are not exposed by AFL and exposes 6 previously unreported CVEs 7x faster than AFL. AFLFast produces at least an order of magnitude more unique crashes than AFL. We compared AFLFast to the symbolic executor Klee. In terms of vulnerability detection, AFLFast is significantly more effective than Klee on the same subject programs that were discussed in the original Klee paper. In terms of code coverage, AFLFast only slightly outperforms Klee while a combination of both tools achieves best results by mitigating the individual weaknesses.
C1 [Bohme, Marcel; Van-Thuan Pham; Roychoudhury, Abhik] Natl Univ Singpore, Sch Comp, Dept Comp Sci, Singapore, Singapore.
RP Böhme, M (corresponding author), Natl Univ Singpore, Sch Comp, Dept Comp Sci, Singapore, Singapore.
EM marcel@comp.nus.edu.sg; thuanpv@comp.nus.edu.sg; abhik@comp.nus.edu.sg
OI Pham, Thuan/0000-0002-9871-3695; Bohme, Marcel/0000-0002-4470-1824;
   ROYCHOUDHURY, Abhik/0000-0002-7127-1137
FU National Research Foundation, Prime Minister's Office, Singapore under
   its National Cybersecurity R&D Program (TSUNAMi project)
   [NRF2014NCRNCR-001-21]
FX We thank Micha Zalewski, all members of the AFL community, and the
   members of Team Codejitsu for the interesting discussions about our
   research and the independent evaluation of AFLFAST. This research was
   partially supported by a grant from the National Research Foundation,
   Prime Minister's Office, Singapore under its National Cybersecurity R&D
   Program (TSUNAMi project, No. NRF2014NCRNCR-001-21) and administered by
   the National Cybersecurity R&D Directorate. An earlier version appeared
   at the 23rd ACM Conference on Computer and Communications Security (ACM
   CCS'16) [1].
CR [Anonymous], 1998, Cambridge Series in Statistical and Probabilistic Mathematics
   [Anonymous], PULLING JPEGS OUT TH
   [Anonymous], PROC INT CONF SOFTW
   [Anonymous], 2012, THESIS
   [Anonymous], SYMBOLIC EXECUTION V
   [Anonymous], 2016, NDSS
   [Anonymous], 2012, ACM QUEUE, DOI DOI 10.1145/2090147.2094081
   [Anonymous], 2016, P 31 IEEE ACM INT C
   [Anonymous], 2013, JOINT M EUROPEAN SOF, DOI [10.1145/2491411.2491430, DOI 10.1145/2491411.2491430]
   Bellard F, 2005, USENIX Association Proceedings of the FREENIX/Open Source Track, P41
   Böhme M, 2016, IEEE T SOFTWARE ENG, V42, P345, DOI 10.1109/TSE.2015.2487274
   Bohme M., 2017, Proceedings of the 24th ACM Conference on Computer and Communications Security, P1
   Böhme M, 2019, IEEE T SOFTWARE ENG, V45, P489, DOI 10.1109/TSE.2017.2785841
   Brin S, 1998, COMPUT NETWORKS ISDN, V30, P107, DOI 10.1016/S0169-7552(98)00110-X
   Cadar C., 2008, Proceedings of the 8th USENIX conference on Operating systems design and implementation, OSDI'08, (USA), P209
   Cha SK, 2015, P IEEE S SECUR PRIV, P725, DOI 10.1109/SP.2015.50
   Chen YT, 2016, ACM SIGPLAN NOTICES, V51, P85, DOI [10.1145/2980983.2908095, 10.1145/2908080.2908095]
   Chipounov V, 2011, ACM SIGPLAN NOTICES, V46, P265, DOI [10.1145/1961296.1950396, 10.1145/1961295.1950396]
   Ganesh V, 2009, PROC INT CONF SOFTW, P474, DOI 10.1109/ICSE.2009.5070546
   Geldenhuys Jaco, 2012, P 2012 INT S SOFTWAR, P166, DOI DOI 10.1145/2338965.2336773
   KIRKPATRICK S, 1983, SCIENCE, V220, P671, DOI 10.1126/science.220.4598.671
   MILLER BP, 1990, COMMUN ACM, V33, P32, DOI 10.1145/96267.96279
   Rebert A, 2014, PROCEEDINGS OF THE 23RD USENIX SECURITY SYMPOSIUM, P861
   Serebryany K., 2012, USENIX ATC 2012, P309
   Sparks S, 2007, TWENTY-THIRD ANNUAL COMPUTER SECURITY APPLICATIONS CONFERENCE, PROCEEDINGS, P477, DOI 10.1109/ACSAC.2007.27
   Wang TL, 2010, P IEEE S SECUR PRIV, P495, DOI 10.1109/SP.2010.37
   Woo M, 2013, P 2013 ACM SIGSAC C, P511
NR 27
TC 400
Z9 433
U1 1
U2 44
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAY
PY 2019
VL 45
IS 5
BP 489
EP 506
DI 10.1109/TSE.2017.2785841
PG 18
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA HY6HC
UT WOS:000468230000002
DA 2024-07-18
ER

PT J
AU Singh, VB
   Sharma, M
   Pham, H
AF Singh, V. B.
   Sharma, Meera
   Pham, Hoang
TI Entropy Based Software Reliability Analysis of Multi-Version Open Source
   Software
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Entropy; feature improvement; new feature; release time problem;
   software repositories; cobb-douglas
ID FAULT-DETECTION; TESTING-EFFORT; MODEL; TIME; OPTIMIZATION; PREDICTION;
   COMPLEXITY; SYSTEMS
AB The number of issues fixed in the current release of the software is one of the factors which decides the next release of the software. The source code files get changed during fixing of these issues. The uncertainty arises due to these changes is quantified using entropy based measures. We developed a Non-Homogeneous Poisson Process model for Open Source Software to understand the fixing of issues across releases. Based on this model, optimal release-updating using entropy and maximizing the active user's satisfaction level subject to fixing of issues up to a desired level, is investigated as well. The proposed models have been validated on five products of the Apache open source project. The optimal release time estimated from the proposed model is close to the observed release time at different active user's satisfaction levels. The proposed decision model can assist management to appropriately determine the optimal release-update time. The proposed entropy based model for issues estimation shows improvement in performance for 21 releases out of total 23 releases, when compared with well-known traditional software reliability growth models, namely GO model [1] and S-shaped model [2]. The proposed model is also found statistically significant.
C1 [Singh, V. B.] Univ Delhi, Delhi Coll Arts & Commerce, Delhi 110023, India.
   [Sharma, Meera] Univ Delhi, Swami Shraddhanand Coll, Delhi 110036, India.
   [Pham, Hoang] Rutgers State Univ, Dept Ind & Syst Engn, Piscataway, NJ 08855 USA.
C3 University of Delhi; University of Delhi; Rutgers University System;
   Rutgers University New Brunswick
RP Singh, VB (corresponding author), Univ Delhi, Delhi Coll Arts & Commerce, Delhi 110023, India.
EM vbsingh@dcac.du.ac.in; meerakaushik@gmail.com; hoang84pham@gmail.com
RI SINGH, V.B./GNW-3297-2022
OI SINGH, V B/0000-0001-6678-4977
CR Adams B., 2013, P 1 INT WORKSH REL E, DOI [10.1109/ICSE.2013.6606779, DOI 10.1109/ICSE.2013.6606779]
   [Anonymous], 1996, HDB SOFTWARE RELIABI
   [Anonymous], 1989, 98211988 IEEE
   [Anonymous], 2001, CATHEDRAL BAZAAR
   [Anonymous], 2010, Product Release planning: methods, Tools and Applications
   [Anonymous], 2014, 8 ACMIEEE INT S EMPI
   Baisli V. R., 1980, TUTORIAL MODELS METH
   Chaturvedi KK, 2014, INT J SYST ASSUR ENG, V5, P155, DOI 10.1007/s13198-014-0226-5
   Dai Y. S., 2007, IEEE T SOFTW ENG, V33
   Gacek C, 2004, IEEE SOFTWARE, V21, P34, DOI 10.1109/MS.2004.1259206
   GOEL AL, 1979, IEEE T RELIAB, V28, P206, DOI 10.1109/TR.1979.5220566
   Goldberg David E, 1989, GENETIC ALGORITHMS S
   Greer D, 2004, INFORM SOFTWARE TECH, V46, P243, DOI 10.1016/j.infsof.2003.07.002
   Hassan AE, 2009, PROC INT CONF SOFTW, P78, DOI 10.1109/ICSE.2009.5070510
   Huang CY, 2005, IEEE T RELIAB, V54, P583, DOI 10.1109/TR.2005.859230
   Inoue S, 2017, INT J RELIAB QUAL SA, V24, DOI 10.1142/S0218539317500036
   Inoue S, 2009, IN C IND ENG ENG MAN, P223, DOI 10.1109/IEEM.2009.5373378
   Kamavaram S., 2002, P 13 INT S SOFTW REL, P209
   Kapur PK, 2013, INT J RELIAB QUAL SA, V20, DOI 10.1142/S0218539313500125
   Kapur PK, 2012, IEEE T RELIAB, V61, P758, DOI 10.1109/TR.2012.2207531
   Kapur P. K., 2010, P 4 NAT C COMP NAT D, P431
   Kapur P.K., 1999, Contributions to hardware and software reliability
   KAPUR PK, 1991, INT J SYST SCI, V22, P1563, DOI 10.1080/00207729108910731
   Li X, 2011, INFORM SOFTWARE TECH, V53, P929, DOI 10.1016/j.infsof.2011.04.005
   Michlmayr M, 2015, IEEE SOFTWARE, V32, P54
   Musa J. D., 1987, Software Reliability: Measure-ment, Prediction, Application
   PAINTON L, 1995, IEEE T RELIAB, V44, P172, DOI 10.1109/24.387368
   Park J, 2015, J SYST SOFTWARE, V101, P236, DOI 10.1016/j.jss.2014.12.029
   Peng R, 2015, INT J SYST SCI, V46, P1628, DOI 10.1080/00207721.2013.827261
   Pham H., 2000, SOFTWARE RELIABILITY
   Raymond E, 1997, CATHEDRAL BAZAAR MUS
   Roy P, 2015, EXPERT SYST APPL, V42, P4709, DOI 10.1016/j.eswa.2015.01.043
   Ruhe G, 2003, 2003 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P262, DOI 10.1109/ISESE.2003.1237987
   Ruhe G., 2004, International Journal of Hybrid Intelligent Systems, V1, P99
   Samoladas I, 2010, INFORM SOFTWARE TECH, V52, P902, DOI 10.1016/j.infsof.2010.05.001
   SHANNON CE, 1948, BELL SYST TECH J, V27, P623, DOI 10.1002/j.1538-7305.1948.tb00917.x
   Singh O, 2017, INT J RELIAB QUAL SA, V24, DOI 10.1142/S0218539317500012
   Singh VB, 2014, 2014 IEEE INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING WORKSHOPS (ISSREW), P478, DOI 10.1109/ISSREW.2014.95
   SPINELLIS D, 2015, IEEE SOFTW, V32, P3
   Svahnberg M, 2010, INFORM SOFTWARE TECH, V52, P237, DOI 10.1016/j.infsof.2009.11.006
   Tamura Y, 2008, INT J RELIAB QUAL SA, V15, P33, DOI 10.1142/S0218539308002915
   Tamura Y, 2009, INT J SYST SCI, V40, P429, DOI 10.1080/00207720802556245
   VARIAN HR, 1991, INTERMEDIATE MICROEC
   Wright HK, 2012, PROC INT CONF SOFTW, P1281, DOI 10.1109/ICSE.2012.6227099
   Wright HK, 2009, ESEC-FSE DOCTORAL SYMPOSIUM 2009, P27
   Xie M., 1991, SOFTWARE RELIABILITY
   Yamada S, 2016, SPRINGER SER RELIAB, P1, DOI 10.1007/978-3-319-31818-9
   Yamada S, 2014, SPRINGERBRIEF STAT, P1, DOI 10.1007/978-4-431-54565-1
   YAMADA S, 1983, IEEE T RELIAB, V32, P475, DOI 10.1109/TR.1983.5221735
   Yang JE, 1999, RELIAB ENG SYST SAFE, V65, P229, DOI 10.1016/S0951-8320(98)00103-3
   Yang JF, 2016, J SYST SOFTWARE, V115, P102, DOI 10.1016/j.jss.2016.01.025
   Yue F, 2015, NEUROCOMPUTING, V169, P13, DOI 10.1016/j.neucom.2014.09.103
   Zeephongsekul P, 2010, INT J RELIAB QUAL SA, V17, P587, DOI 10.1142/S0218539310003974
   Zhang J, 2016, J SYST ENG ELECTRON, V27, P260, DOI 10.1109/JSEE.2016.00026
   Zhang T, 2016, J SYST SOFTWARE, V117, P166, DOI 10.1016/j.jss.2016.02.034
NR 55
TC 30
Z9 32
U1 2
U2 19
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD DEC
PY 2018
VL 44
IS 12
BP 1207
EP 1223
DI 10.1109/TSE.2017.2766070
PG 17
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA HD6AP
UT WOS:000452614100004
DA 2024-07-18
ER

PT J
AU Han, AR
   Cha, S
AF Han, Ah-Rim
   Cha, Sungdeok
TI Two-Phase Assessment Approach to Improve the Efficiency of Refactoring
   Identification
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Refactoring assessment; refactoring identification; maintainability
   improvement
ID OPPORTUNITIES; OPTIMIZATION; METRICS
AB To automate the refactoring identification process, a large number of candidates need to be compared. Such an overhead can make the refactoring approach impractical if the software size is large and the computational load of a fitness function is substantial. In this paper, we propose a two-phase assessment approach to improving the efficiency of the process. For each iteration of the refactoring process, refactoring candidates are preliminarily assessed using a lightweight, fast delta assessment method called the Delta Table. Using multiple Delta Tables, candidates to be evaluated with a fitness function are selected. A refactoring can be selected either interactively by the developer or automatically by choosing the best refactoring, and the refactorings are applied one after another in a stepwise fashion. The Delta Table is the key concept enabling a two-phase assessment approach because of its ability to quickly calculate the varying amounts of maintainability provided by each refactoring candidate. Our approach has been evaluated for three large-scale open-source projects. The results convincingly show that the proposed approach is efficient because it saves a considerable time while still achieving the same amount of fitness improvement as the approach examining all possible candidates.
C1 [Han, Ah-Rim; Cha, Sungdeok] Korea Univ, Dept Comp Sci & Engn, Seoul 02841, South Korea.
C3 Korea University
RP Han, AR (corresponding author), Korea Univ, Dept Comp Sci & Engn, Seoul 02841, South Korea.
EM arhan@korea.ac.kr; scha@korea.ac.kr
OI Han, Ah-Rim/0000-0001-7552-9118
FU Basic Science Research Program through the National Research Foundation
   of Korea (NRF) - Ministry of Education [NRF-2014R1A1A2054098]
FX This research was supported by Basic Science Research Program through
   the National Research Foundation of Korea (NRF) funded by the Ministry
   of Education (NRF-2014R1A1A2054098). We also gratefully acknowledge Yoo
   Shin and Ingwon Song for the valuable comments when revising this paper.
CR Abreu F., 1995, P EUR C OBJ OR PROGR
   Ah-Rim Han, 2014, 2014 21st Asia-Pacific Software Engineering Conference (APSEC), P430, DOI 10.1109/APSEC.2014.69
   Aittokoski T, 2008, INT C ENG OPT ENGOPT, P841
   Al Dallal J, 2012, ACM T SOFTW ENG METH, V21, DOI 10.1145/2089116.2089118
   Apache Ant, 2015, APACHE ANT
   Bansiya J, 2002, IEEE T SOFTWARE ENG, V28, P4, DOI 10.1109/32.979986
   Bavota G., 2014, Recommendation Systems in Software Engineering, P387
   Bavota G, 2014, IEEE T SOFTWARE ENG, V40, P671, DOI 10.1109/TSE.2013.60
   Bonja C., 2006, ACM SE 44 P 44 ANN S, P91
   Bouktif S, 2006, GECCO 2006: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOL 1 AND 2, P1885
   Briand L. C., 1998, Empirical Software Engineering, V3, P65, DOI 10.1023/A:1009783721306
   Cheng KC, 2008, LECT NOTES COMPUT SC, V5202, P635, DOI 10.1007/978-3-540-85958-1_56
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   Davidor Y., 1991, Foundations of Genetic Algorithms, V1, P23
   Demeyer S., 2002, Object-Oriented Reengineering Patterns
   Du Bois B, 2004, 11TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P144, DOI 10.1109/WCRE.2004.33
   Eiben A. E., 1994, Proceedings of the First IEEE Conference on Evolutionary Computation. IEEE World Congress on Computational Intelligence (Cat. No.94TH0650-2), P542, DOI 10.1109/ICEC.1994.350002
   Eigen, 2016, EIGEN
   Fokaefs M, 2012, J SYST SOFTWARE, V85, P2241, DOI 10.1016/j.jss.2012.04.013
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   Han AR, 2015, INFORM SOFTWARE TECH, V59, P53, DOI 10.1016/j.infsof.2014.10.007
   Han AR, 2013, INFORM SOFTWARE TECH, V55, P966, DOI 10.1016/j.infsof.2012.12.002
   HARMAN M., 2007, Proceedings of the the 6th joint meeting of the European software engineering conference and the ACM SIGSOFT symposium on The foundations of software engineering, P155, DOI DOI 10.1145/1287624.1287647
   Harman M, 2007, GECCO 2007: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOL 1 AND 2, P1106
   Harman M, 2013, INT WORKS EMERG TREN, P1
   Higo Y, 2008, J SOFTW MAINT EVOL-R, V20, P435, DOI 10.1002/smr.394
   Kerievsky J., 2005, Refactoring to Patterns
   KIRKPATRICK S, 1983, SCIENCE, V220, P671, DOI 10.1126/science.220.4598.671
   Krishnan GP, 2013, PROC IEEE INT CONF S, P360, DOI 10.1109/ICSM.2013.47
   Lee S, 2011, SOFTWARE PRACT EXPER, V41, P521, DOI 10.1002/spe.1031
   LI W, 1993, J SYST SOFTWARE, V23, P111, DOI 10.1016/0164-1212(93)90077-B
   Liu H, 2008, IET SOFTW, V2, P446, DOI 10.1049/iet-sen:20070033
   Liu H, 2012, IEEE T SOFTWARE ENG, V38, P220, DOI 10.1109/TSE.2011.9
   Mkaouer M. W., 2014, P 29 ACM IEEE INT C, P331, DOI [DOI 10.1145/2642937.2642965, 10.1145/2642937.2642965. u r l, DOI 10.1145/2642937.2642965.URL]
   Mkaouer MW, 2016, EMPIR SOFTW ENG, V21, P2503, DOI 10.1007/s10664-015-9414-4
   Mkaouer W, 2014, GECCO'14: PROCEEDINGS OF THE 2014 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P1263, DOI 10.1145/2576768.2598366
   O'Keeffe M, 2008, J SOFTW MAINT EVOL-R, V20, P345, DOI 10.1002/smr.378
   O'Keeffe M, 2008, J SYST SOFTWARE, V81, P502, DOI 10.1016/j.jss.2007.06.003
   O'Keeffe M, 2007, FRONT ARTIF INTEL AP, V161, P315
   Oliveto R, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P820, DOI 10.1145/1985793.1985913
   Ouni A, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P347, DOI 10.1109/ICSM.2012.6405292
   Piveta Eduardo, 2008, 2008 IEEE 32nd International Computer Software and Applications Conference (COMPSAC), P319, DOI 10.1109/COMPSAC.2008.119
   Rizzo ML, 2009, ASTIN BULL, V39, P691, DOI 10.2143/AST.39.2.2044654
   Sakti Abdelilah, 2012, Search Based Software Engineering. Proceedings of the 4th International Symposium (SSBSE 2012), P213, DOI 10.1007/978-3-642-33119-0_16
   Santiago A, 2014, STUD COMPUT INTELL, V547, P453, DOI 10.1007/978-3-319-05170-3_31
   Sayyad AS, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P492, DOI 10.1109/ICSE.2013.6606595
   Seng O., 2006, PROCEEDINGS OF THE 8, P1916
   Tahvildari L, 2003, SEVENTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P183, DOI 10.1109/CSMR.2003.1192426
   Tsantalis N., 2014, JDEODORANT
   Tsantalis N, 2008, CSMR 2008: 12TH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, P329
   Tsantalis N, 2015, IEEE T SOFTWARE ENG, V41, P1055, DOI 10.1109/TSE.2015.2448531
   Tsantalis N, 2010, J SYST SOFTWARE, V83, P391, DOI 10.1016/j.jss.2009.09.017
   Tsantalis N, 2009, IEEE T SOFTWARE ENG, V35, P347, DOI 10.1109/TSE.2009.1
   Zibran MF, 2011, IEEE INT WORK C SO, P105, DOI 10.1109/SCAM.2011.21
   Zibran MF, 2011, CONF PROC INT SYMP C, P266, DOI 10.1109/ICPC.2011.45
   Zibran MF, 2013, IET SOFTW, V7, P167, DOI 10.1049/iet-sen.2012.0058
NR 56
TC 2
Z9 2
U1 0
U2 3
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD OCT
PY 2018
VL 44
IS 10
BP 1001
EP 1023
DI 10.1109/TSE.2017.2731853
PG 23
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA GX5PZ
UT WOS:000447803400005
DA 2024-07-18
ER

PT J
AU Nam, J
   Fu, W
   Kim, S
   Menzies, T
   Tan, L
AF Nam, Jaechang
   Fu, Wei
   Kim, Sunghun
   Menzies, Tim
   Tan, Lin
TI Heterogeneous Defect Prediction
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Defect prediction; quality assurance; heterogeneous metrics; transfer
   learning
ID SOFTWARE; QUALITY; METRICS; DESIGN
AB Many recent studies have documented the success of cross-project defect prediction (CPDP) to predict defects for new projects lacking in defect data by using prediction models built by other projects. However, most studies share the same limitations: it requires homogeneous data; i.e., different projects must describe themselves using the same metrics. This paper presents methods for heterogeneous defect prediction (HDP) that matches up different metrics in different projects. Metric matching for HDP requires a "large enough" sample of distributions in the source and target projects-which raises the question on how large is "large enough" for effective heterogeneous defect prediction. This paper shows that empirically and theoretically, "large enough" may be very small indeed. For example, using a mathematical model of defect prediction, we identify categories of data sets were as few as 50 instances are enough to build a defect prediction model. Our conclusion for this work is that, even when projects use different metric sets, it is possible to quickly transfer lessons learned about defect prediction.
C1 [Nam, Jaechang] Handong Global Univ, Sch Comp Sci & Elect Engn, Pohang, South Korea.
   [Fu, Wei; Menzies, Tim] North Carolina State Univ, Dept Comp Sci, Raleigh, NC 27695 USA.
   [Kim, Sunghun] Hong Kong Univ Sci & Technol, Dept Comp Sci & Engn, Hong Kong, Hong Kong, Peoples R China.
   [Tan, Lin] Univ Waterloo, Dept Elect & Comp Engn, Waterloo, ON, Canada.
C3 Handong Global University; North Carolina State University; Hong Kong
   University of Science & Technology; University of Waterloo
RP Nam, J (corresponding author), Handong Global Univ, Sch Comp Sci & Elect Engn, Pohang, South Korea.
EM jcnam@handong.edu; wfu@ncsu.edu; hunkim@cse.ust.hk;
   tim.menzies@gmail.com; lintan@uwaterloo.ca
RI Menzies, Tim/X-7680-2019; Fu, Wei/AAF-7120-2019; Fu, Wei/AAN-6829-2021
OI Menzies, Tim/0000-0002-5040-3196; Nam, Jaechang/0000-0003-1678-2185
FU Direct For Computer & Info Scie & Enginr; Division of Computing and
   Communication Foundations [1506586] Funding Source: National Science
   Foundation
CR [Anonymous], P 22 C INN APPL ART
   [Anonymous], SOFTWARE VERIFICATIO
   [Anonymous], IEEE1012
   [Anonymous], P INT C PRED MOD SOF
   [Anonymous], 2010, P 6 INT C PRED MOD S, DOI DOI 10.1145/1868328.1868336
   [Anonymous], P 7 INT C PRED MOD S
   [Anonymous], 2012, ACM SIGSOFT 20 INT S
   [Anonymous], PROC INT CONF SOFTW
   [Anonymous], 33 ANN IEEE SOFTW EN
   [Anonymous], RECOMMENDATION SYSTE
   Arcuri A, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1, DOI 10.1145/1985793.1985795
   Basili VR, 1996, IEEE T SOFTWARE ENG, V22, P751, DOI 10.1109/32.544352
   Bettenburg N, 2015, EMPIR SOFTW ENG, V20, P294, DOI 10.1007/s10664-013-9292-6
   Bird C., 2011, P 19 ACM SIGSOFT S 1, P4, DOI DOI 10.1145/2025113.2025119
   Bruin J., 2011, newtest: command to compute new test @ONLINE. Feb. 2011
   Budgen D, 2006, CONF SOFTW ENG EDUC, P4, DOI 10.1109/CSEET.2006.41
   Canfora G, 2013, 2013 IEEE SIXTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST 2013), P252, DOI 10.1109/ICST.2013.38
   Catal C, 2009, INFORM SCIENCES, V179, P1040, DOI 10.1016/j.ins.2008.12.001
   Cheung S.-C., 2011, P 19 ACM SIGSOFT S 1, P15
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   Corder G., 2009, NONPARAMETRIC STAT S
   D'Ambros M, 2012, EMPIR SOFTW ENG, V17, P531, DOI 10.1007/s10664-011-9173-9
   Dallmeier V, 2012, IEEE T SOFTWARE ENG, V38, P243, DOI 10.1109/TSE.2011.105
   Endres A., 2003, A Handbook of Software and Systems Engineering: Empirical Observations, Laws, and Theories
   FAGAN ME, 1976, IBM SYST J, V15, P182, DOI 10.1147/sj.153.0182
   Fu W, 2016, INFORM SOFTWARE TECH, V76, P135, DOI 10.1016/j.infsof.2016.04.017
   Fukushima T., 2014, Proceedings of the 11th Working Conference on Mining Software Repositories, MSR 2014, P172, DOI DOI 10.1145/2597073.2597075
   Gao KH, 2011, SOFTWARE PRACT EXPER, V41, P579, DOI 10.1002/spe.1043
   Ghotra B, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P789, DOI 10.1109/ICSE.2015.91
   Giger E, 2012, INT SYMP EMP SOFTWAR, P171, DOI 10.1145/2372251.2372285
   Glass R. L., 2002, FACTS FALLACIES SOFT
   Guyon Isabelle, 2003, J MACH LEARN RES, V3, P1157, DOI DOI 10.1162/153244303322753616
   Hall M., 2009, ACM SIGKDD Explor. Newsl, V11, P18, DOI DOI 10.1145/1656274.1656278
   Hall MA, 2003, IEEE T KNOWL DATA EN, V15, P1437, DOI 10.1109/TKDE.2003.1245283
   Halstead M.H., 1977, OPERATING PROGRAMMIN
   He P, 2015, INFORM SOFTWARE TECH, V59, P170, DOI 10.1016/j.infsof.2014.11.006
   He Peng., 2014, CORR
   He ZM, 2012, AUTOMAT SOFTW ENG, V19, P167, DOI 10.1007/s10515-011-0090-3
   Jing XY, 2017, IEEE T SOFTWARE ENG, V43, P321, DOI 10.1109/TSE.2016.2597849
   Jing XY, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P496, DOI 10.1145/2786805.2786813
   Jones C., 2010, Software engineering best practices: Lessons from successful projects in the top companies
   Kamei Y, 2013, IEEE T SOFTWARE ENG, V39, P757, DOI 10.1109/TSE.2012.70
   Kim D, 2013, IEEE T SOFTWARE ENG, V39, P1597, DOI 10.1109/TSE.2013.24
   Kim M, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P990, DOI 10.1145/2786805.2804429
   Klas M., 2010, 2010 32nd International Conference on Software Engineering (ICSE), P119, DOI 10.1145/1810295.1810313
   Kocaguneli E, 2013, IEEE T SOFTWARE ENG, V39, P1040, DOI 10.1109/TSE.2012.88
   Krishna R, 2016, IEEE INT CONF AUTOM, P122, DOI 10.1145/2970276.2970339
   Landwehr N, 2005, MACH LEARN, V59, P161, DOI 10.1007/s10994-005-0466-3
   Lee T., 2011, Proceedings of the 19th ACM SIGSOFT symposium and the 13th European conference on Foundations of software engineering, P311
   Lessmann S, 2008, IEEE T SOFTWARE ENG, V34, P485, DOI 10.1109/TSE.2008.35
   Lewis C, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P372, DOI 10.1109/ICSE.2013.6606583
   Li M, 2012, AUTOMAT SOFTW ENG, V19, P201, DOI 10.1007/s10515-011-0092-1
   LILLIEFORS HW, 1967, J AM STAT ASSOC, V62, P399, DOI 10.2307/2283970
   Liu Huiqing, 2002, Genome Inform, V13, P51
   Lustgarten Jonathan L, 2008, AMIA Annu Symp Proc, P445
   Ma Y, 2012, INFORM SOFTWARE TECH, V54, P248, DOI 10.1016/j.infsof.2011.09.007
   MASSEY FJ, 1951, J AM STAT ASSOC, V46, P68, DOI 10.2307/2280095
   Matouek Jir'i., 2006, UNDERSTANDING USING
   McCabe T. J., 1976, IEEE Transactions on Software Engineering, VSE-2, P308, DOI 10.1109/TSE.1976.233837
   Menzies T, 2002, ASE 2002: 17TH IEEE INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, P183, DOI 10.1109/ASE.2002.1115012
   Menzies T., 2012, The PROMISE Repository of empirical software engineering data
   Menzies T, 2007, IEEE T SOFTWARE ENG, V33, P2, DOI 10.1109/TSE.2007.256941
   Menzies T, 2013, IEEE T SOFTWARE ENG, V39, P822, DOI 10.1109/TSE.2012.83
   Nagappan N, 2005, PROC INT CONF SOFTW, P580, DOI 10.1145/1062455.1062558
   Nagappan N., 2006, 28th International Conference on Software Engineering Proceedings, P452, DOI 10.1145/1134285.1134349
   Nam J, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P508, DOI 10.1145/2786805.2786814
   Nam J, 2015, IEEE INT CONF AUTOM, P452, DOI 10.1109/ASE.2015.56
   Nam J, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P382, DOI 10.1109/ICSE.2013.6606584
   Ohlsson N, 1996, IEEE T SOFTWARE ENG, V22, P886, DOI 10.1109/32.553637
   Ostrand TJ, 2005, IEEE T SOFTWARE ENG, V31, P340, DOI 10.1109/TSE.2005.49
   Pan SJ, 2010, IEEE T KNOWL DATA EN, V22, P1345, DOI 10.1109/TKDE.2009.191
   Panichella A, 2014, 2014 SOFTWARE EVOLUTION WEEK - IEEE CONFERENCE ON SOFTWARE MAINTENANCE, REENGINEERING, AND REVERSE ENGINEERING (CSMR-WCRE), P164, DOI 10.1109/CSMR-WCRE.2014.6747166
   Peters F, 2012, PROC INT CONF SOFTW, P189, DOI 10.1109/ICSE.2012.6227194
   Pinzger Martin, 2008, P 16 ACM SIGSOFT INT, P2, DOI DOI 10.1145/1453101.1453105
   Posnett D., 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P362, DOI 10.1109/ASE.2011.6100074
   Rahman F, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P424, DOI 10.1145/2568225.2568269
   Rahman F, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P432, DOI 10.1109/ICSE.2013.6606589
   Romano J, 2006, ANN M FLOR ASS I RES, P1
   Ryu D, 2017, SOFTWARE QUAL J, V25, P235, DOI 10.1007/s11219-015-9287-1
   Ryu D, 2016, EMPIR SOFTW ENG, V21, P43, DOI 10.1007/s10664-014-9346-4
   SHEPPERD M, 1994, J SYST SOFTWARE, V26, P197, DOI 10.1016/0164-1212(94)90011-6
   Shepperd M, 2013, IEEE T SOFTWARE ENG, V39, P1208, DOI 10.1109/TSE.2013.11
   Shihab E, 2014, PROC IEEE INT CONF S, P639, DOI 10.1109/ICSME.2014.114
   Shivaji S, 2013, IEEE T SOFTWARE ENG, V39, P552, DOI 10.1109/TSE.2012.43
   Shull F, 2002, EIGHTH IEEE SYMPOSIUM ON SOFTWARE METRICS, PROCEEDINGS, P249, DOI 10.1109/METRIC.2002.1011343
   Sigweni B., 2014, Proceedings ofthe 10th International Conference on Predictive Models in Software Engineering, P32
   Song QB, 2011, IEEE T SOFTWARE ENG, V37, P356, DOI 10.1109/TSE.2010.90
   Spearman C, 2010, INT J EPIDEMIOL, V39, P1137, DOI 10.1093/ije/dyq191
   Tantithamthavorn C, 2017, IEEE T SOFTWARE ENG, V43, P1, DOI 10.1109/TSE.2016.2584050
   Tantithamthavorn C, 2016, PROC INT CONF SOFTW, P321, DOI 10.1145/2884781.2884857
   Thomas Zimmermann., 2009, P THE 7 JOINT M EURO, P91, DOI DOI 10.1145/1595696.1595713
   Turhan B, 2012, EMPIR SOFTW ENG, V17, P62, DOI 10.1007/s10664-011-9182-8
   Turhan B, 2009, EMPIR SOFTW ENG, V14, P540, DOI 10.1007/s10664-008-9103-7
   Valentini G., 2003, ICML, P752
   VOAS JM, 1995, IEEE SOFTWARE, V12, P17, DOI 10.1109/52.382180
   Watanabe S., 2008, P 4 INT WORKSH PRED, P19
   Weiss Karl, 2016, Journal of Big Data, V3, DOI 10.1186/s40537-016-0043-6
   WILCOXON F, 1945, BIOMETRICS BULL, V1, P80, DOI 10.1093/jee/39.2.269
   Yang YB, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P157, DOI 10.1145/2950290.2950353
   Zhang F., 2014, P 11 WORK C MIN SOFT, P182, DOI [10.1145/2597073.2597078, DOI 10.1145/2597073.2597078]
   Zhang Y, 2015, P INT COMP SOFTW APP, P264, DOI 10.1109/COMPSAC.2015.58
NR 101
TC 123
Z9 135
U1 2
U2 10
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD SEP
PY 2018
VL 44
IS 9
BP 874
EP 896
DI 10.1109/TSE.2017.2720603
PG 23
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA GT9EL
UT WOS:000444842700004
DA 2024-07-18
ER

PT J
AU Bianchi, FA
   Margara, A
   Pezzè, M
AF Bianchi, Francesco Adalberto
   Margara, Alessandro
   Pezze, Mauro
TI A Survey of Recent Trends in Testing Concurrent Software Systems
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Survey; classification; testing; concurrent systems; parallel systems;
   distributed systems
ID RACE DETECTION; DEADLOCK DETECTION; RUNTIME ANALYSIS; MODEL CHECKING;
   ATOMICITY; SOUND; BUGS
AB Many modern software systems are composed of multiple execution flows that run simultaneously, spanning from applications designed to exploit the power of modern multi-core architectures to distributed systems consisting of multiple components deployed on different physical nodes. We collectively refer to such systems as concurrent systems. Concurrent systems are difficult to test, since the faults that derive from their concurrent nature depend on the interleavings of the actions performed by the individual execution flows. Testing techniques that target these faults must take into account the concurrency aspects of the systems. The increasingly rapid spread of parallel and distributed architectures led to a deluge of concurrent software systems, and the explosion of testing techniques for such systems in the last decade. The current lack of a comprehensive classification, analysis and comparison of the many testing techniques for concurrent systems limits the understanding of the strengths and weaknesses of each approach and hampers the future advancements in the field. This survey provides a framework to capture the key features of the available techniques to test concurrent software systems, identifies a set of classification criteria to review and compare the available techniques, and discusses in details their strengths and weaknesses, leading to a thorough assessment of the field and paving the road for future progresses.
C1 [Bianchi, Francesco Adalberto; Margara, Alessandro; Pezze, Mauro] Univ Svizzera Italiana, USI Lugano, Fac Informat, CH-6900 Lugano, Switzerland.
C3 Universita della Svizzera Italiana
RP Margara, A (corresponding author), Univ Svizzera Italiana, USI Lugano, Fac Informat, CH-6900 Lugano, Switzerland.
EM francesco.bianchi@usi.ch; alessandro.margara@polimi.it;
   mauro.pezze@usi.ch
RI Margara, Alessandro/JVZ-4321-2024
OI PEZZE, MAURO/0000-0001-5193-7379
CR Agarwal R., 2005, ASE, P233
   Aichernig BK, 2006, LECT NOTES COMPUT SC, V3922, P324
   Alexandrov A, 2014, VLDB J, V23, P939, DOI 10.1007/s00778-014-0357-y
   Anderson Z, 2008, PLDI'08: PROCEEDINGS OF THE 2008 SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN & IMPLEMENTATION, P149, DOI 10.1145/1375581.1375600
   Andrews G. R., 1991, Concurrent Programming: Principles and Practice
   ANDREWS GR, 1983, COMPUT SURV, V15, P3, DOI 10.1145/356901.356903
   [Anonymous], 2000, Programming Language Design and Implementation, DOI [DOI 10.1145/358438.349328, 10.1145/349299.349328]
   [Anonymous], 1996, LECT NOTES COMPUTER, DOI DOI 10.1007/3-540-60761-7
   [Anonymous], 2007, NSDI
   [Anonymous], 2013, PROGRAMMING ERLANG
   [Anonymous], 1987, Concurrency Control and Recovery in Database Systems
   Armstrong Joe, 1996, Concurrent Programming in Erlang
   Aviram A, 2012, COMMUN ACM, V55, P111, DOI 10.1145/2160718.2160742
   Barham P, 2004, USENIX ASSOCIATION PROCEEDINGS OF THE SIXTH SYMPOSIUM ON OPERATING SYSTEMS DESIGN AND IMPLEMENTATION (OSDE '04), P259
   Batty M, 2011, POPL 11: PROCEEDINGS OF THE 38TH ANNUAL ACM SIGPLAN-SIGACT SYMPOSIUM ON PRINCIPLES OF PROGRAMMING LANGUAGES, P55, DOI 10.1145/1926385.1926394
   Bergan T, 2010, ASPLOS XV: FIFTEENTH INTERNATIONAL CONFERENCE ON ARCHITECTURAL SUPPORT FOR PROGRAMMING LANGUAGES AND OPERATING SYSTEMS, P53
   Berger ED, 2009, ACM SIGPLAN NOTICES, V44, P81, DOI 10.1145/1639949.1640096
   Bindal S., 2013, Proceedings of the International Symposium on Software Testing and Analysis, P145, DOI DOI 10.1145/2483760.2483764
   Biswas S, 2014, ACM SIGPLAN NOTICES, V49, P28, DOI [10.1145/2666356.2594323, 10.1145/2594291.2594323]
   Blanchette JC, 2011, PPDP 11 - PROCEEDINGS OF THE 2011 SYMPOSIUM ON PRINCIPLES AND PRACTICES OF DECLARATIVE PROGRAMMING, P113
   Bocchino RL, 2009, OOPSLA 2009, CONFERENCE PROCEEDINGS, P97
   Bochmann GV, 2008, LECT NOTES COMPUT SC, V5047, P169, DOI 10.1007/978-3-540-68524-1_13
   Boehm HJ, 2008, ACM SIGPLAN NOTICES, V43, P68, DOI 10.1145/1379022.1375591
   Bond MD, 2010, PLDI '10: PROCEEDINGS OF THE 2010 ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P255, DOI 10.1145/1806596.1806626
   Boyapati C, 2001, ACM SIGPLAN NOTICES, V36, P56, DOI 10.1145/504311.504287
   Bradbury JeremyS., 2006, MUTATION ANAL, P11
   Brinksma E, 1998, TESTING OF COMMUNICATING SYSTEMS, P67
   Bron Arkady, 2005, P ACM SIGPLAN S PRIN, P206
   Burckhardt S, 2010, ASPLOS XV: FIFTEENTH INTERNATIONAL CONFERENCE ON ARCHITECTURAL SUPPORT FOR PROGRAMMING LANGUAGES AND OPERATING SYSTEMS, P167
   Burnim J., 2011, ISSTA, P122
   Cai Y, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P491, DOI 10.11455/2568225.2568312
   Cai Y, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P450, DOI 10.1145/2786805.2786839
   Cai Y, 2012, PROC INT CONF SOFTW, P606, DOI 10.1109/ICSE.2012.6227156
   Campbell Colin., 2010, Parallel Programming with Microsoft .NET: Design Patterns for Decomposition and Coordination on Multicore Architectures
   CARVER R, 1993, INTERNATIONAL TEST CONFERENCE 1993 PROCEEDINGS, P845, DOI 10.1109/TEST.1993.470617
   Carver RH, 1998, IEEE T SOFTWARE ENG, V24, P471, DOI 10.1109/32.689403
   Chanudaud S, 2000, POSITIF, P97, DOI 10.1109/ICDSN.2000.857521
   Chen F, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P221, DOI 10.1145/1368088.1368119
   Chen J, 2004, LECT NOTES COMPUT SC, V3235, P229
   Chen JLZ, 2007, ELE COM ENG, P313, DOI 10.1145/1321631.1321678
   Chen QC, 2009, LECT NOTES COMPUT SC, V5503, P425
   Choi JD, 2002, ACM SIGPLAN NOTICES, V37, P258, DOI 10.1145/543552.512560
   CLARKE EM, 1986, ACM T PROGR LANG SYS, V8, P244, DOI 10.1145/5397.5399
   Clarke EM, 1999, MODEL CHECKING, P1
   Cogumbreiro T, 2015, ACM SIGPLAN NOTICES, V50, P150, DOI [10.1145/2688500.2688519, 10.1145/2858788.2688519]
   Coons KE, 2010, PPOPP 2010: PROCEEDINGS OF THE 2010 ACM SIGPLAN SYMPOSIUM ON PRINCIPLES AND PRACTICE OF PARALLEL PROGRAMMING, P15, DOI 10.1145/1693453.1693458
   Dao D, 2009, LECT NOTES COMPUT SC, V5501, P94, DOI 10.1007/978-3-642-00722-4_8
   Dean J, 2004, USENIX ASSOCIATION PROCEEDINGS OF THE SIXTH SYMPOSIUM ON OPERATING SYSTEMS DESIGN AND IMPLEMENTATION (OSDE '04), P137
   Deligiannis Pantazis, 2015, ACM SIGPLAN Notices, V50, P154, DOI 10.1145/2737924.2737996
   Diaz J, 2012, IEEE T PARALL DISTR, V23, P1369, DOI 10.1109/TPDS.2011.308
   Dig D, 2011, IEEE SOFTWARE, V28, P17, DOI 10.1109/MS.2011.1
   Dimitrov D, 2014, ACM SIGPLAN NOTICES, V49, P305, DOI [10.1145/2594291.2594322, 10.1145/2666356.2594322]
   Dingel J., 2004, Software Engineering Notes, V29, P13, DOI 10.1145/1041685.1029900
   DINNING A, 1990, SIGPLAN NOTICES, V25, P1, DOI 10.1145/99164.99165
   Elmas T, 2007, PLDI'07: PROCEEDINGS OF THE 2007 ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P245, DOI 10.1145/1250734.1250762
   Emerson E. A., 1980, Automata, Languages and Programming, Seventh Colloquium, P169
   Emmi M, 2011, POPL 11: PROCEEDINGS OF THE 38TH ANNUAL ACM SIGPLAN-SIGACT SYMPOSIUM ON PRINCIPLES OF PROGRAMMING LANGUAGES, P411, DOI 10.1145/1926385.1926432
   Engler D., 2003, Operating Systems Review, V37, P237, DOI 10.1145/1165389.945468
   Eslamimehr M, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P353, DOI 10.1145/2635868.2635918
   Eslamimehr M, 2014, ACM SIGPLAN NOTICES, V49, P301, DOI [10.1145/2692916.2555263, 10.1145/2555243.2555263]
   Farzan A., 2012, P ACM SIGSOFT INT S, P1
   Flanagan C, 2005, ACM SIGPLAN NOTICES, V40, P110, DOI 10.1145/1047659.1040315
   Flanagan C, 2004, ACM SIGPLAN NOTICES, V39, P256, DOI 10.1145/982962.964023
   Flanagan C, 2003, ACM SIGPLAN NOTICES, V38, P338, DOI 10.1145/780822.781169
   Flanagan C, 1999, LECT NOTES COMPUT SC, V1576, P91
   Flanagan C, 2009, PLDI'09 PROCEEDINGS OF THE 2009 ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P121, DOI 10.1145/1542476.1542490
   Flanagan C, 2008, PLDI'08: PROCEEDINGS OF THE 2008 SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN & IMPLEMENTATION, P293, DOI 10.1145/1375581.1375618
   Fonseca P, 2011, EUROSYS 11: PROCEEDINGS OF THE EUROSYS 2011 CONFERENCE, P215
   Fonseca P, 2010, I C DEPEND SYS NETWO, P221, DOI 10.1109/DSN.2010.5544315
   Ganai M. K., 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P123, DOI 10.1109/ASE.2011.6100045
   Gao Q, 2011, ACM SIGPLAN NOTICES, V46, P239, DOI 10.1145/1961296.1950394
   Geels Dennis., 2007, Proceedings of the 4th USENIX Conference on Networked Systems Design and Implementation, NSDI '07, P21
   Gligoric Milos, 2010, Proceedings of the Third IEEE International Conference on Software Testing, Verification and Validation (ICST 2010), P55, DOI 10.1109/ICST.2010.33
   Gligoric Milos., 2013, Proceedings of the 2013 International Symposium on Software Testing and Analysis. ISSTA 2013, P224, DOI DOI 10.1145/2483760.2483773
   Godefroid P., 1997, Conference Record of POPL '97: The 24th ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages, P174, DOI 10.1145/263699.263717
   Haar S, 2007, LECT NOTES COMPUT SC, V4581, P171
   Hammer C, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P231, DOI 10.1145/1368088.1368120
   Havelund K, 2000, LECT NOTES COMPUT SC, V1885, P245
   HERLIHY MP, 1990, ACM T PROGR LANG SYS, V12, P463, DOI 10.1145/78969.78972
   Heumann ST, 2013, ACM SIGPLAN NOTICES, V48, P239, DOI 10.1145/2517327.2442540
   Hierons RM, 2008, COMPUT J, V51, P497, DOI 10.1093/comjnl/bxm096
   Hierons RM, 2012, DISTRIB COMPUT, V25, P35, DOI 10.1007/s00446-011-0149-1
   Hoare C. A. R., 1978, Communications of the ACM, V21, P666, DOI 10.1145/359576.359585
   Holzmann GJ, 1997, IEEE T SOFTWARE ENG, V23, P279, DOI 10.1109/32.588521
   Hong S., 2012, ISSTA, P210, DOI [10.1145/2338965.2336779, DOI 10.1145/2338965.2336779]
   Hong S, 2013, 2013 IEEE SIXTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST 2013), P232, DOI 10.1109/ICST.2013.32
   Hovemeyer D, 2002, LECT NOTES COMPUT SC, V2374, P133
   Hsiao CH, 2014, ACM SIGPLAN NOTICES, V49, P326, DOI [10.1145/2666356.2594330, 10.1145/2594291.2594330]
   Huang J., 2011, ISSTA, P144, DOI [10.1145/2001420.2001438, DOI 10.1145/2001420.2001438]
   Huang J, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P847, DOI 10.1109/ICSE.2015.96
   Huang J, 2014, ACM SIGPLAN NOTICES, V49, P337, DOI [10.1145/2666356.2594315, 10.1145/2594291.2594315]
   JAGADISH HV, 1990, ACM T DATABASE SYST, V15, P558, DOI 10.1145/99935.99944
   Jagannath Vilas., 2011, P 2011 INT S SOFTWAR, P133
   Jensen K, 2009, COLOURED PETRI NETS: MODELLING AND VALIDATION OF CONCURRENT SYSTEMS, P1, DOI 10.1007/b95112
   Jia Y, 2011, IEEE T SOFTWARE ENG, V37, P649, DOI 10.1109/TSE.2010.62
   Jones S. P., 1996, Conference Record of POPL '96: The 23rd ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages, P295, DOI 10.1145/237721.237794
   Joshi Pallavi, 2008, 2008 23rd IEEE/ACM International Conference on Automated Software Engineering, P288, DOI 10.1109/ASE.2008.39
   Joshi P, 2009, PLDI'09 PROCEEDINGS OF THE 2009 ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P110, DOI 10.1145/1542476.1542489
   Joshi Pallavi, 2010, P 18 ACM SIGSOFT INT, P327, DOI 10.1145/1882291.1882339
   Kähkönen K, 2012, IEEE INT CONF AUTOM, P150, DOI 10.1145/2351676.2351698
   Kahlon V, 2010, LECT NOTES COMPUT SC, V6174, P434, DOI 10.1007/978-3-642-14295-6_39
   Karmani RK, 2011, ACM SIGPLAN NOTICES, V46, P125, DOI 10.1145/2038037.1941573
   Kasikci B, 2013, SOSP'13: PROCEEDINGS OF THE TWENTY-FOURTH ACM SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES, P406, DOI 10.1145/2517349.2522736
   Kasikci B, 2012, ASPLOS XVII: SEVENTEENTH INTERNATIONAL CONFERENCE ON ARCHITECTURAL SUPPORT FOR PROGRAMMING LANGUAGES AND OPERATING SYSTEMS, P185
   Kim K, 2009, IEEE INT CONF AUTOM, P495, DOI 10.1109/ASE.2009.82
   Kobayashi N, 2006, LECT NOTES COMPUT SC, V4137, P233
   Krena B., 2012, RV, P177, DOI DOI 10.1007/978-3-642-29860-8
   Lai Z., 2010, ICSE, P235, DOI [10.1145/1806799.1806836, DOI 10.1145/1806799.1806836]
   LAMPORT L, 1979, IEEE T COMPUT, V28, P690, DOI 10.1109/TC.1979.1675439
   LAMPORT L, 1978, COMMUN ACM, V21, P558, DOI 10.1145/359545.359563
   Lauterburg S, 2009, IEEE INT CONF AUTOM, P468, DOI 10.1109/ASE.2009.88
   Li D, 2011, OOPSLA 11: PROCEEDINGS OF THE 2011 ACM INTERNATIONAL CONFERENCE ON OBJECT ORIENTED PROGRAMMING SYSTEMS LANGUAGES AND APPLICATIONS, P35
   Lin Y, 2013, 2013 IEEE SIXTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST 2013), P164, DOI 10.1109/ICST.2013.41
   Lin ZY, 2015, IEEE INT CONF AUTOM, P178, DOI 10.1109/ASE.2015.87
   LIPTON RJ, 1975, COMMUN ACM, V18, P717, DOI 10.1145/361227.361234
   Liu TP, 2011, SOSP 11: PROCEEDINGS OF THE TWENTY-THIRD ACM SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES, P327
   Liu X., 2007, P C NETW SYST DES IM, P257
   Liu Xuezheng., 2008, Proceedings of the 5th USENIX Symposium on Networked Systems Design and Implementation, NSDI'08, P423
   Lu S., 2006, P INT C ARCH SUPP PR, P37
   Lu S, 2008, ACM SIGPLAN NOTICES, V43, P329, DOI 10.1145/1353536.1346323
   Lu Shan., 2007, P 6 JOINT M EUROPEAN, P533
   Maiya P, 2014, ACM SIGPLAN NOTICES, V49, P316, DOI [10.1145/2666356.2594311, 10.1145/2594291.2594311]
   Manson J., 2005, SIGPLAN Notices, V40, P378, DOI 10.1145/1047659.1040336
   Marino D, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P322, DOI 10.1109/ICSE.2013.6606578
   Marino D, 2009, PLDI'09 PROCEEDINGS OF THE 2009 ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P134, DOI 10.1145/1542476.1542491
   MATTSON T. G., 2004, Patterns for parallel programming
   McDonald, 2001, PARALLEL PROGRAMMING
   Meijer E., 2012, ACM QUEUE, V10, P20
   Milner R, 1982, CALCULUS COMMUNICATI
   Morasca S., 1990, Real-Time Systems: Theory and Applications. Proceedings of the Conference Organized by the British Computer Society, P119
   Musuvathi M., 2008, Proceedings of the 8th USENIX conference on Operating systems design and implementation, OSDI'08, P267
   Musuvathi M, 2007, PLDI'07: PROCEEDINGS OF THE 2007 ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P446, DOI 10.1145/1250734.1250785
   Musuvathi M, 2008, PLDI'08: PROCEEDINGS OF THE 2008 SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN & IMPLEMENTATION, P362, DOI 10.1145/1375581.1375625
   Mutlu E, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P381, DOI 10.1145/2786805.2786820
   Nagaraj K, 2012, P 9 USENIX C NETW SY, P353
   Naik M, 2009, PROC INT CONF SOFTW, P386, DOI 10.1109/ICSE.2009.5070538
   Narayanasamy S, 2007, PLDI'07: PROCEEDINGS OF THE 2007 ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P22, DOI 10.1145/1250734.1250738
   Netzer R.H.B., 1991, THESIS
   Nistor A, 2012, PROC INT CONF SOFTW, P727, DOI 10.1109/ICSE.2012.6227145
   Norris B, 2013, ACM SIGPLAN NOTICES, V48, P131, DOI [10.1145/2509136.2509514, 10.1145/2544173.2509514]
   O'Callahan R., 2003, SIGPLAN Notices, V38, P166, DOI 10.1145/966049.781528
   Okur S, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P1117, DOI 10.1145/2568225.2568309
   PAPADIMITRIOU CH, 1979, J ACM, V26, P631, DOI 10.1145/322154.322158
   Park C.-S., 2008, FSE, P135
   Park S, 2010, 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING & KNOWLEDGE ENGINEERING (SEKE 2010), P645
   Park S, 2009, ACM SIGPLAN NOTICES, V44, P25, DOI 10.1145/1508284.1508249
   Perkovic D, 1996, PROCEEDINGS OF THE SECOND SYMPOSIUM ON OPERATING SYSTEMS DESIGN AND IMPLEMENTATION (OSDI '96), P47, DOI 10.1145/248155.238760
   Petri C. A., 1966, RADCTR65377, VI
   Petrov B, 2012, ACM SIGPLAN NOTICES, V47, P251, DOI 10.1145/2345156.2254095
   Ponce de Leon Hernan, 2013, Testing Software and Systems. 25th IFIP WG 6.1 International Conference, ICTSS 2013. Proceedings: LNCS 8254, P98, DOI 10.1007/978-3-642-41707-8_7
   Pozniansky E, 2003, ACM SIGPLAN NOTICES, V38, P178, DOI 10.1145/966049.781529
   Pradel M, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P282, DOI 10.1109/ICSE.2013.6606574
   Pradel M, 2012, ACM SIGPLAN NOTICES, V47, P521, DOI 10.1145/2345156.2254126
   Pradel Michael, 2014, Proceedings of the 2014 International Symposium on Software Testing and Analysis, P13, DOI DOI 10.1145/2610384.2610393
   Prvulovic M, 2003, CONF PROC INT SYMP C, P110, DOI 10.1109/ISCA.2003.1206993
   Pugh W., 1999, Proceedings of the ACM 1999 Java Grande Conference, P89, DOI 10.1145/304065.304106
   Queille J.P., 1982, Specification and verification of concurrent systems in CESAR, P337, DOI DOI 10.1007/3-540-11494-722
   Rajagopalan AK, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P914, DOI 10.1145/2786805.2803209
   Raychev V, 2013, ACM SIGPLAN NOTICES, V48, P151, DOI [10.1145/2544173.2509538, 10.1145/2509136.2509538]
   Reynolds P, 2006, USENIX ASSOCIATION PROCEEDINGS OF THE 3RD SYMPOSIUM ON NETWORKED SYSTEMS DESIGN & IMPLEMENTATION (NSDI 06), P115
   Russell S., 2016, Artificial intelligence a modern approach
   Sakamoto Kazuki, 2012, Pro Multithreading and Memory Management for iOS and OS X, P139
   Samak M, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P131, DOI 10.1145/2786805.2786874
   Samak M, 2015, ACM SIGPLAN NOTICES, V50, P175, DOI [10.1145/2737924.2737998, 10.1145/2813885.2737998]
   Samak M, 2014, ACM SIGPLAN NOTICES, V49, P29, DOI [10.1145/2692916.2555262, 10.1145/2555243.2555262]
   Samak M, 2014, ACM SIGPLAN NOTICES, V49, P473, DOI [10.1145/2714064.2660238, 10.1145/2660193.2660238]
   Santhiar A., 2016, P 25 INT S SOFTW TES, P366, DOI DOI 10.1145/2931037.2931068
   SARIKAYA B, 1984, IEEE T COMMUN, V32, P389, DOI 10.1109/TCOM.1984.1096074
   Savage S, 1997, ACM T COMPUT SYST, V15, P391, DOI 10.1145/269005.266641
   Sen A, 2010, INT HIGH LEVEL DESIG, P75, DOI 10.1109/HLDVT.2010.5496659
   Sen K, 2006, LECT NOTES COMPUT SC, V3922, P339
   Sen K., 2003, Software Engineering Notes, V28, P337, DOI 10.1145/949952.940116
   Sen K., 2007, P 22 IEEE ACM INT C, P323, DOI [DOI 10.1145/1321631.1321679, 10.1145/1321631.1321679]
   Sen K, 2008, PLDI'08: PROCEEDINGS OF THE 2008 SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN & IMPLEMENTATION, P11, DOI 10.1145/1375581.1375584
   Shacham O., 2005, PPoPP, P107
   Shacham O, 2011, OOPSLA 11: PROCEEDINGS OF THE 2011 ACM INTERNATIONAL CONFERENCE ON OBJECT ORIENTED PROGRAMMING SYSTEMS LANGUAGES AND APPLICATIONS, P51
   Shan Lu, 2007, Operating Systems Review, V41, P103, DOI 10.1145/1323293.1294272
   Sheng TW, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P401, DOI 10.1145/1985793.1985848
   Shi Y., 2010, P ACM INT C OBJ OR P, P160, DOI [DOI 10.1145/1869459.1869474, DOI 10.1145/1932682.1869474]
   Shirako J, 2008, ICS'08: PROCEEDINGS OF THE 2008 ACM INTERNATIONAL CONFERENCE ON SUPERCOMPUTING, P277
   Singh A., 2006, Operating Systems Review, V40, P389, DOI 10.1145/1218063.1217973
   SINGHAL M, 1989, COMPUTER, V22, P37, DOI 10.1109/2.43525
   Sinha N, 2010, PROCEEDINGS OF THE ASME TURBO EXPO 2010, VOL 1, P47
   Smaragdakis Y, 2012, POPL 12: PROCEEDINGS OF THE 39TH ANNUAL ACM SIGPLAN-SIGACT SYMPOSIUM ON PRINCIPLES OF PROGRAMMING LANGUAGES, P387
   Sorrentino Francesco, 2010, P 18 ACM SIGSOFT INT, P37, DOI DOI 10.1145/1882291.1882300
   STROM RE, 1986, IEEE T SOFTWARE ENG, V12, P157, DOI 10.1109/TSE.1986.6312929
   Tasharofi S, 2013, IEEE INT CONF AUTOM, P114, DOI 10.1109/ASE.2013.6693072
   TAYLOR RN, 1992, IEEE T SOFTWARE ENG, V18, P206, DOI 10.1109/32.126769
   Terragni V, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P246, DOI 10.1109/ICSE.2015.45
   Thomson P, 2014, ACM SIGPLAN NOTICES, V49, P15, DOI [10.1145/2692916.2555260, 10.1145/2555243.2555260]
   Tian Chen., 2008, Proceedings of the 2008 international Symposium on Software Testing and Analysis, P143, DOI DOI 10.1145/1390630.1390649
   Trainin E., 2009, Proceedings of the 7th Workshop on Parallel and Distributed Systems Testing, Analysis, and Debugging - PADTAD'09, DOI [10.1145/1639622.1639629, DOI 10.1145/1639622.1639629]
   Vaziri M, 2006, ACM SIGPLAN NOTICES, V41, P334, DOI 10.1145/1111320.1111067
   Vechev M, 2009, LECT NOTES COMPUT SC, V5578, P261, DOI 10.1007/978-3-642-02652-2_21
   Veeraraghavan K, 2011, SOSP 11: PROCEEDINGS OF THE TWENTY-THIRD ACM SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES, P369
   Visser W., 2003, Automated Software Engineering, V10, P203, DOI 10.1023/A:1022920129859
   Visser W., 2004, Software Engineering Notes, V29, P97, DOI 10.1145/1013886.1007526
   von Praun C, 2001, ACM SIGPLAN NOTICES, V36, P70, DOI 10.1145/504311.504288
   von Praun C., 2004, J OBJECT TECHNOLOGY, V6, P103, DOI DOI 10.5381/jot.2004.3.6.a5
   Wang C, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P221, DOI 10.1145/1985793.1985824
   Wang LQ, 2006, IEEE T SOFTWARE ENG, V32, P93, DOI 10.1109/TSE.2006.1599419
   West S, 2015, ACM SIGPLAN NOTICES, V50, P273, DOI [10.1145/2858788.2688545, 10.1145/2688500.2688545]
   Wester B, 2013, ACM SIGPLAN NOTICES, V48, P27, DOI 10.1145/2499368.2451120
   Williams A, 2005, LECT NOTES COMPUT SC, V3586, P602
   Wyatt Derek, 2013, Akka Concurrency
   Xu MG, 2005, IEEE VTS VEH TECHNOL, P1
   Yabandeh M., 2009, Symposium on Networked Systems Design and Implementation, P229
   Yabandeh M, 2010, ACM T COMPUT SYST, V28, DOI 10.1145/1731060.1731062
   Yu JJ, 2012, PROCEEDINGS OF THE ASME TURBO EXPO 2012, VOL 7, PTS A AND B, P485, DOI 10.1145/2398857.2384651
   Yu T., 2013, Proceedings of the International Symposium on Software Testing and Analysis, P167
   Yu TT, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P48, DOI 10.1145/2568225.2568294
   Yu Y., 2005, P 20 ACM S OP SYST P, P221
   Zaharia Matei, 2010, 2 USENIX WORKSHOP HO
   Zhai K., 2012, P 2012 INT S SOFTW T, P221
   Zhang W, 2011, ACM SIGPLAN NOTICES, V46, P251, DOI 10.1145/1961296.1950395
   Zhang W, 2010, ASPLOS XV: FIFTEENTH INTERNATIONAL CONFERENCE ON ARCHITECTURAL SUPPORT FOR PROGRAMMING LANGUAGES AND OPERATING SYSTEMS, P179
NR 216
TC 32
Z9 37
U1 0
U2 18
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD AUG
PY 2018
VL 44
IS 8
BP 747
EP 783
DI 10.1109/TSE.2017.2707089
PG 37
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA GQ6CY
UT WOS:000441791100003
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Banerjee, A
   Chong, LK
   Ballabriga, C
   Roychoudhury, A
AF Banerjee, Abhijeet
   Chong, Lee Kee
   Ballabriga, Clement
   Roychoudhury, Abhik
TI EnergyPatch: Repairing Resource Leaks to Improve Energy-Efficiency of
   Android Apps
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Mobile apps; energy bugs; non-functional testing; energy-aware test
   generation
AB Increased usage of mobile devices, such as smartphones and tablets, has led to widespread popularity and usage of mobile apps. If not carefully developed, such apps may demonstrate energy-inefficient behaviour, where one or more energy-intensive hardware components (such as Wifi, GPS, etc) are left in a high-power state, even when no apps are using these components. We refer to such kind of energy-inefficiencies as energy bugs. Executing an app with an energy bug causes the mobile device to exhibit poor energy consumption behaviour and a drastically shortened battery life. Since mobiles apps can have huge input domains, therefore exhaustive exploration is often impractical. We believe that there is a need for a framework that can systematically detect and fix energy bugs in mobile apps in a scalable fashion. To address this need, we have developed EnergyPatch, a framework that uses a combination of static and dynamic analysis techniques to detect, validate and repair energy bugs in Android apps. The use of a lightweight, static analysis technique enables EnergyPatch to quickly narrow down to the potential program paths along which energy bugs may occur. Subsequent exploration of these potentially buggy program paths using a dynamic analysis technique helps in validations of the reported bugs and to generate test cases. Finally, EnergyPatch generates repair expressions to fix the validated energy bugs. Evaluation with real-life apps from repositories such as F-droid and Github, shows that EnergyPatch is scalable and can produce results in reasonable amount of time. Additionally, we observed that the repair expressions generated by EnergyPatch could bring down the energy consumption on tested apps up to 60 percent.
C1 [Banerjee, Abhijeet; Chong, Lee Kee; Roychoudhury, Abhik] Natl Univ Singapore, Sch Comp, Singapore 119077, Singapore.
   [Ballabriga, Clement] Univ Lille, F-59650 Villeneuve, France.
C3 National University of Singapore; Universite de Lille
RP Banerjee, A (corresponding author), Natl Univ Singapore, Sch Comp, Singapore 119077, Singapore.
EM abhijeet@comp.nus.edu.sg; cleekee@gmail.com; Clement.Ballabriga@lifl.fr;
   abhik@comp.nus.edu.sg
OI ROYCHOUDHURY, Abhik/0000-0002-7127-1137
FU Singapore MoE [MOE2013-T2-1-115]
FX The work was partially supported by a Singapore MoE Tier 2 grant
   MOE2013-T2-1-115 "Energy aware programming".
CR Anand S., 2007, TOOLS ALGORITHMS CON
   Anand S, 2007, LECT NOTES COMPUT SC, V4424, P134
   Anand Saswat, 2012, P ACM SIGSOFT 20 INT
   [Anonymous], 2011, P 10 ACM WORKSH HOT
   [Anonymous], 2010, P ACM IEEE 32 INT C, DOI DOI 10.1145/1806799.1806874
   [Anonymous], 2010, PROC 8 INT C MOBILE, DOI [DOI 10.1145/1814433, 10.1145/1814433.1814441, DOI 10.1145/1814433.1814441]
   [Anonymous], 2010, Proceedings of the 32nd ACM/IEEE International Conference on Software Engineering- Volume 1, ICSE '10
   ASM, JAV BYET MAN AN FRAM
   Baek W, 2010, PLDI '10: PROCEEDINGS OF THE 2010 ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P198, DOI 10.1145/1806596.1806620
   Banerjee A, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P588, DOI 10.1145/2635868.2635871
   Chilimbi TM, 2004, ACM SIGPLAN NOTICES, V39, P156, DOI 10.1145/1037187.1024412
   Cohen M, 2012, ACM SIGPLAN NOTICES, V47, P831, DOI 10.1145/2398857.2384676
   Cousot P., 1977, C RECORD 4 ANN ACM S, P238, DOI DOI 10.1145/512950.512973
   Dong Mian., 2011, MobiSys '11, P335, DOI DOI 10.1145/1999995.2000027
   Guo CR, 2013, IEEE INT CONF AUTOM, P389, DOI 10.1109/ASE.2013.6693097
   Hao S, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P92, DOI 10.1109/ICSE.2013.6606555
   Havelund K., 2000, Int. J. Softw. Tools Technol. Transfer, V2, P366, DOI [DOI 10.1007/S100090050043, 10.1007/s100090050043]
   Honig T., 2011, HOTPOWER
   Huxing Zhang, 2011, 2011 IEEE/IFIP 41st International Conference on Dependable Systems and Networks Workshops (DSN-W), P265, DOI 10.1109/DSNW.2011.5958824
   Li D, 2013, P 2013 INT S SOFTW T, P78, DOI DOI 10.1145/2483760.2483780
   Li D, 2016, PROC INT CONF SOFTW, P249, DOI 10.1145/2884781.2884867
   Li Mengchen., 2013, Proceedings of the 2013 International Symposium on Software Testing and Analysis, ISSTA 2013, P112, DOI 10.1145/2483760.2483778
   Liu YP, 2014, IEEE T SOFTWARE ENG, V40, P911, DOI 10.1109/TSE.2014.2323982
   Machiry A., 2013, P 2013 9 JOINT M FDN, P224
   Manotas I, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P503, DOI 10.11455/2568225.2568297
   Memon A, 2003, 10TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P260, DOI 10.1109/WCRE.2003.1287256
   Mittal R, 2012, MOBICOM 12: PROCEEDINGS OF THE 18TH ANNUAL INTERNATIONAL CONFERENCE ON MOBILE COMPUTING AND NETWORKING, P317
   Orlovich M, 2006, LECT NOTES COMPUT SC, V4134, P405
   Pathak A., 2012, Mobisys, DOI DOI 10.1145/2307636.2307661
   Pathak Abhijit D., 2012, Proceedings of the PCIM ASIA 2012. International Conference and Exhibition for Power Electronics, Intelligent Motion, Renewable Energy and Energy Management, P29
   Rayside D., 2007, INT C AUTOMATED SOFT, P194
   TIWARI V, 1994, IEEE IC CAD, P384
   Torlak Emina., 2010, P 32 ACMIEEE INT C S, P535
   van der Merwe H., 2012, ACM SIGSOFT Softw. Eng. Notes, P1
   Xie Y., 2005, Proceedings of the 10th European Software Engineering Conference Held Jointly with 13th ACM SIGSOFT International Symposium on Foundations of Software Engineering, P115, DOI [10.1145/1081706.1081728, DOI 10.1145/1081706.1081728]
   Yan DC, 2013, PROC INT SYMP SOFTW, P411, DOI 10.1109/ISSRE.2013.6698894
   Zhang L, 2010, PROCEEDINGS OF 2010 INTERNATIONAL CONFERENCE ON PUBLIC ADMINISTRATION (6TH), VOL II, P105, DOI 10.1145/1878961.1878982
NR 37
TC 47
Z9 55
U1 0
U2 1
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAY
PY 2018
VL 44
IS 5
BP 470
EP 490
DI 10.1109/TSE.2017.2689012
PG 21
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA GF9RH
UT WOS:000432315500004
DA 2024-07-18
ER

PT J
AU McIntosh, S
   Kamei, Y
AF McIntosh, Shane
   Kamei, Yasutaka
TI Are Fix-Inducing Changes a Moving Target? A Longitudinal Case Study of
   Just-In-Time Defect Prediction
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Just-In-Time prediction; defect prediction; mining software repositories
ID SOFTWARE; FAULTS
AB Just-In-Time (JIT) models identify fix-inducing code changes. JIT models are trained using techniques that assume that past fix-inducing changes are similar to future ones. However, this assumption may not hold, e.g., as system complexity tends to accrue, expertise may become more important as systems age. In this paper, we study JIT models as systems evolve. Through a longitudinal case study of 37,524 changes from the rapidly evolving QT and OPENSTACK systems, we find that fluctuations in the properties of fix-inducing changes can impact the performance and interpretation of JIT models. More specifically: (a) the discriminatory power (AUC) and calibration (Brier) scores of JIT models drop considerably one year after being trained; (b) the role that code change properties (e.g., Size, Experience) play within JIT models fluctuates over time; and (c) those fluctuations yield over- and underestimates of the future impact of code change properties on the likelihood of inducing fixes. To avoid erroneous or misleading predictions, JIT models should be retrained using recently recorded data (within three months). Moreover, quality improvement plans should be informed by JIT models that are trained using six months (or more) of historical data, since they are more resilient to period-specific fluctuations in the importance of code change properties.
C1 [McIntosh, Shane] McGill Univ, Dept Elect & Comp Engn, Montreal, PQ H3A 0G4, Canada.
   [Kamei, Yasutaka] Kyushu Univ, Principles Software Languages Grp POSL, Fukuoka 8128581, Japan.
C3 McGill University; Kyushu University
RP McIntosh, S (corresponding author), McGill Univ, Dept Elect & Comp Engn, Montreal, PQ H3A 0G4, Canada.
EM shane.mcintosh@mcgill.ca; kamei@ait.kyushu-u.ac.jp
FU Natural Sciences and Engineering Research Council of Canada (NSERC);
   JSPS KAKENHI [15H05306]; Grants-in-Aid for Scientific Research
   [15H05306] Funding Source: KAKEN
FX This research was partially supported by the Natural Sciences and
   Engineering Research Council of Canada (NSERC) and JSPS KAKENHI Grant
   Numbers 15H05306.
CR [Anonymous], 1999, CATHEDRAL BAZAAR
   [Anonymous], 2014, 11 WORKING C MINING, DOI [DOI 10.1145/2597073.2597076, DOI 10.1145/2597073]
   [Anonymous], 2007, PROMISE 07, DOI DOI 10.1109/PROMISE.2007.10
   Antoniol G., 2008, P IBM CTR ADV STUD C
   Aranda J, 2009, PROC INT CONF SOFTW, P298, DOI 10.1109/ICSE.2009.5070530
   BELADY LA, 1976, IBM SYST J, V15, P225, DOI 10.1147/sj.153.0225
   Bird C, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P121, DOI 10.1145/1595696.1595716
   Cheung S.-C., 2011, P 19 ACM SIGSOFT S 1, P15
   D'Ambros Marco, 2010, Proceedings of the 2010 7th IEEE Working Conference on Mining Software Repositories (MSR 2010), P31, DOI 10.1109/MSR.2010.5463279
   da Costa DA, 2017, IEEE T SOFTWARE ENG, V43, P641, DOI 10.1109/TSE.2016.2616306
   Ekanayake J, 2009, 2009 6TH IEEE INTERNATIONAL WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES, P51, DOI 10.1109/MSR.2009.5069480
   Ghotra B, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P789, DOI 10.1109/ICSE.2015.91
   Giger E, 2012, INT SYMP EMP SOFTWAR, P171, DOI 10.1145/2372251.2372285
   Graves TL, 2000, IEEE T SOFTWARE ENG, V26, P653, DOI 10.1109/32.859533
   Harrell FE, 2015, SPRINGER SER STAT, DOI 10.1007/978-3-319-19425-7
   HARRELL FE, 1984, STAT MED, V3, P143, DOI 10.1002/sim.4780030207
   HARRELL FE, 1985, CANCER TREAT REP, V69, P1071
   Hassan AE, 2009, PROC INT CONF SOFTW, P78, DOI 10.1109/ICSE.2009.5070510
   Hata H, 2012, PROC INT CONF SOFTW, P200, DOI 10.1109/ICSE.2012.6227193
   Herzig K, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P392, DOI 10.1109/ICSE.2013.6606585
   Kamei Y, 2016, EMPIR SOFTW ENG, V21, P2072, DOI 10.1007/s10664-015-9400-x
   Kamei Y, 2013, IEEE T SOFTWARE ENG, V39, P757, DOI 10.1109/TSE.2012.70
   Kim S, 2008, IEEE T SOFTWARE ENG, V34, P181, DOI 10.1109/TSE.2007.70773
   Kim S, 2007, PROC INT CONF SOFTW, P489
   Kim S, 2006, IEEE INT CONF AUTOM, P81
   Kim S, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P481, DOI 10.1145/1985793.1985859
   Kononenko O, 2015, PROC IEEE INT CONF S, P111, DOI 10.1109/ICSM.2015.7332457
   Matsumoto S, 2010, P 6 INT C PREDICTIVE, P1, DOI DOI 10.1145/1868328.1868356
   McIntosh S, 2016, EMPIR SOFTW ENG, V21, P2146, DOI 10.1007/s10664-015-9381-9
   Menzies T., 2013, IEEE T SOFTWARE ENG, V39, P334
   Mockus A, 2000, BELL LABS TECH J, V5, P169, DOI 10.1002/bltj.2229
   Morales R, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P171, DOI 10.1109/SANER.2015.7081827
   Nagappan N, 2005, PROC INT CONF SOFTW, P284, DOI 10.1145/1062455.1062514
   Nagappan N., 2006, 28th International Conference on Software Engineering Proceedings, P452, DOI 10.1145/1134285.1134349
   Nam J, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P382, DOI 10.1109/ICSE.2013.6606584
   Nguyen T. H. D., 2010, Proceedings 17th Working Conference on Reverse Engineering (WCRE 2010), P259, DOI 10.1109/WCRE.2010.37
   Porter A., 1998, ACM Transactions on Software Engineering and Methodology, V7, P41, DOI 10.1145/268411.268421
   Rahman Foyzur, 2013, P 2013 9 JOINT M FDN, P147
   Sarle WS, 1990, SAS STAT USERS GUIDE
   Shihab E., 2012, P ACM SIGSOFT 20 INT
   Sliwerski J., 2005, ACM SIGSOFT SOFTWARE, P1, DOI DOI 10.1145/1082983.1083147
   Tan M, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P99, DOI 10.1109/ICSE.2015.139
   Tantithamthavorn C, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P812, DOI 10.1109/ICSE.2015.93
   Thongtanunam P, 2017, EMPIR SOFTW ENG, V22, P768, DOI 10.1007/s10664-016-9452-6
   Thongtanunam P, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P168, DOI 10.1109/MSR.2015.23
   Turhan B, 2012, EMPIR SOFTW ENG, V17, P62, DOI 10.1007/s10664-011-9182-8
   Zhou MH, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P271, DOI 10.1145/1985793.1985831
   Zimmermann T., 2008, PREDICTING BUGS HIST, P69, DOI [10.1007/978-3-540-76440-3_4, DOI 10.1007/978-3-540-76440-3_4]
NR 48
TC 129
Z9 137
U1 0
U2 8
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAY
PY 2018
VL 44
IS 5
BP 412
EP 428
DI 10.1109/TSE.2017.2693980
PG 17
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA GF9RH
UT WOS:000432315500001
DA 2024-07-18
ER

PT J
AU Salvaneschi, G
   Proksch, S
   Amann, S
   Nadi, S
   Mezini, M
AF Salvaneschi, Guido
   Proksch, Sebastian
   Amann, Sven
   Nadi, Sarah
   Mezini, Mira
TI On the Positive Effect of Reactive Programming on Software
   Comprehension: An Empirical Study
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Reactive programming; empirical study; controlled experiment; software
   comprehension
ID MENTAL REPRESENTATIONS; DESIGN
AB Starting from the first investigations with strictly functional languages, reactive programming has been proposed as the programming paradigm for reactive applications. Over the years, researchers have enriched reactive languages with more powerful abstractions, embedded these abstractions into mainstream languages-including object-oriented languages-and applied reactive programming to several domains, such as GUIs, animations, Web applications, robotics, and sensor networks. However, an important assumption behind this line of research is that, beside other claimed advantages, reactive programming makes a wide class of otherwise cumbersome applications more comprehensible. This claim has never been evaluated. In this paper, we present the first empirical study that evaluates the effect of reactive programming on comprehension. The study involves 127 subjects and compares reactive programming to the traditional object-oriented style with the Observer design pattern. Our findings show that program comprehension is significantly enhanced by the reactive-programming paradigm-a result that suggests to further develop research in this field.
C1 [Salvaneschi, Guido] Tech Univ Darmstadt, Dept Comp Sci, React Syst Grp, D-64289 Darmstadt, Germany.
   [Proksch, Sebastian; Amann, Sven; Mezini, Mira] Tech Univ Darmstadt, Dept Comp Sci, Software Technol Grp, D-64289 Darmstadt, Germany.
   [Nadi, Sarah] Univ Alberta, Dept Comp Sci, Edmonton, AB T6G 2R3, Canada.
C3 Technical University of Darmstadt; Technical University of Darmstadt;
   University of Alberta
RP Salvaneschi, G (corresponding author), Tech Univ Darmstadt, Dept Comp Sci, React Syst Grp, D-64289 Darmstadt, Germany.
EM salvaneschi@cs.tu-darmstadt.de; proksch@cs.tu-darmstadt.de;
   amann@cs.tu-darmstadt.de; nadi@ualberta.ca; mezini@cs.tu-darmstadt.de
OI Proksch, Sebastian/0000-0003-1856-9361
FU European Research Council [321217]; German Federal Ministry of Education
   and Research [01IS12054]; European Research Council (ERC) [321217]
   Funding Source: European Research Council (ERC)
FX This research has been funded by the European Research Council (grant
   No. 321217) and by the German Federal Ministry of Education and Research
   (grant No. 01IS12054). The authors want to thank Stefan Hanenberg for
   the inspiring discussions on controlled experiments and the useful
   suggestions on the analysis of the data presented in this work.
CR Ali Mohamed., 2010, Proceedings of the 1st International Conference and Exhibition on Computing for Geospatial Research Application, P66
   [Anonymous], 2002, Software Design-Cognitive Aspects
   [Anonymous], 1996, Structure and interpretation of computer programs
   [Anonymous], 2012, QUAL INQ
   [Anonymous], 2014, P 8 ACM INT C DISTR
   Bainomugisha E, 2013, ACM COMPUT SURV, V45, DOI 10.1145/2501654.2501666
   Busjahn T., 2014, ICER 2014 P 10 ANN I, P3, DOI DOI 10.1145/2632320.2632344
   COOPER GH, 2006, PROC EUR CONF PROGR, V3924, P294
   Cornelissen B, 2011, IEEE T SOFTWARE ENG, V37, P341, DOI 10.1109/TSE.2010.47
   Corritore CL, 1999, INT J HUM-COMPUT ST, V50, P61, DOI 10.1006/ijhc.1998.0236
   Di Penta M, 2007, INT C PROGRAM COMPRE, P281
   Elliott C., 1998, Principles of Declarative Programming. 10th International Symposium, PLILP'98. Held Jointly with the 6th International Conference, ALP'98. Proceedings, P284, DOI 10.1007/BFb0056621
   Elliott C, 1997, ACM SIGPLAN NOTICES, V32, P263, DOI 10.1145/258949.258973
   Ellis B, 2007, PROC INT CONF SOFTW, P302
   Endrikat S, 2011, CONF PROC INT SYMP C, P51, DOI 10.1109/ICPC.2011.46
   Felgentreff T., 2014, P EUR C OBJ OR PROGR, P411
   Felgentreff T, 2015, ACM SIGPLAN NOTICES, V50, P767, DOI [10.1145/2814270.2814311, 10.1145/2858965.2814311]
   Fleming SD, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P759, DOI 10.1145/1368088.1368195
   FREEMANBENSON BN, 1990, SIGPLAN NOTICES, V25, P77, DOI 10.1145/97946.97957
   Gamma E., 2000, Design Patterns: Elements of Reusable Object-Oriented Software
   Gedik B, 2009, SOFTWARE PRACT EXPER, V39, P1347, DOI 10.1002/spe.941
   Hanenberg S., 2010, P INT C OBJ OR PROGR
   Hanenberg S, 2010, ACM SIGPLAN NOTICES, V45, P22, DOI 10.1145/1932682.1869462
   Hoppe M, 2013, ACM SIGPLAN NOTICES, V48, P457, DOI [10.1145/2509136.2509528, 10.1145/2544173.2509528]
   Hudak P, 2003, LECT NOTES COMPUT SC, V2638, P159
   Jbara A, 2015, INT C PROGRAM COMPRE, P244, DOI 10.1109/ICPC.2015.35
   Juristo N., 2010, BASICS SOFTWARE ENG
   Kevic K., 2015, P JOINT M EUR SOFTW, P836
   Kleinschmager S., 2011, Proceedings of the 3rd ACM SIGPLAN Workshop on Evaluation and Usability of Programming Languages and Tools, P15, DOI [10.1145/2089155, DOI 10.1145/2089155]
   Ko AJ, 2005, PROC INT CONF SOFTW, P126
   Krishnaswami NR, 2012, POPL 12: PROCEEDINGS OF THE 39TH ANNUAL ACM SIGPLAN-SIGACT SYMPOSIUM ON PRINCIPLES OF PROGRAMMING LANGUAGES, P45
   LaToza T. D., 2006, 28th International Conference on Software Engineering Proceedings, P492, DOI 10.1145/1134285.1134355
   LaToza Thomas D., 2010, P 32 ACM IEEE INT C, P185, DOI DOI 10.1145/1806799.1806829
   LaToza Thomas D., 2007, P ESECFSE 2007 DUBR, P361, DOI [DOI 10.1145/1287624.1287675, 10.1145/1287624.1287675]
   Letovsky S., 1986, 1 WORKSH EMP STUD PR
   Liberty J., 2011, Programming reactive extensions and linq, V1st
   Lin YT, 2016, IEEE T EDUC, V59, P175, DOI 10.1109/TE.2015.2487341
   Maier I, 2013, LECT NOTES COMPUT SC, V7920, P707, DOI 10.1007/978-3-642-39038-8_29
   Maier Ingo., 2012, Deprecating the observer pattern with Scala
   MAYER C, 2012, P 27 ANN ACM SIGPLAN, V47, P683, DOI DOI 10.1145/2398857.2384666
   Meyerovich LA, 2009, OOPSLA 2009, CONFERENCE PROCEEDINGS, P1
   Myers BA, 1997, IEEE T SOFTWARE ENG, V23, P347, DOI 10.1109/32.601073
   Newton R, 2007, PROCEEDINGS OF THE SIXTH INTERNATIONAL SYMPOSIUM ON INFORMATION PROCESSING IN SENSOR NETWORKS, P489, DOI 10.1109/IPSN.2007.4379709
   Oliveira F.P., 2012, Proteccao Civil e Ordenamento do Territorio: A Necessaria Consideracao dos Riscos no Planeamento Territorial, P1
   Pankratius V, 2012, PROC INT CONF SOFTW, P123, DOI 10.1109/ICSE.2012.6227200
   PENNINGTON N, 1987, COGNITIVE PSYCHOL, V19, P295, DOI 10.1016/0010-0285(87)90007-7
   Prechelt L, 2000, COMPUTER, V33, P23, DOI 10.1109/2.876288
   Quante J, 2008, INT C PROGRAM COMPRE, P73, DOI 10.1109/ICPC.2008.15
   Ramalingam V., 1997, Empirical Studies of Programmers: Seventh Workshop. Papers presented at the Seventh Workshop on Empirical Studies of Programmers, P124, DOI 10.1145/266399.266411
   Roehm T, 2012, PROC INT CONF SOFTW, P255, DOI 10.1109/ICSE.2012.6227188
   Salman I, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P666, DOI 10.1109/ICSE.2015.82
   Salvaneschi G., 2013, COORDINATION MODELS
   Salvaneschi G, 2016, PROC INT CONF SOFTW, P796, DOI 10.1145/2884781.2884815
   Salvaneschi G, 2016, PLATEAU'16: PROCEEDINGS OF THE 7TH INTERNATIONAL WORKSHOP ON EVALUATION AND USABILITY OF PROGRAMMING LANGUAGES AND TOOLS, P30, DOI 10.1145/3001878.3001884
   Salvaneschi G, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P564, DOI 10.1145/2635868.2635895
   Salvaneschi G, 2014, IEEE SOFTWARE, V31, P52, DOI 10.1109/MS.2014.101
   Salvaneschi Guido, 2014, P 13 INT C MOD, P25, DOI DOI 10.1145/2577080.2577083
   Salvaneschi Guido., 2014, Transactions on Aspect-Oriented Software Development
   Soloway E., SOFTWARE REUSABILITY
   Stylos J, 2007, PROC INT CONF SOFTW, P529
   Stylos Jeffrey., 2008, Proc. of the 16th International Symposium on Foundations of Software Eng, P105
   Turner R., 2014, P S EYE TRACK RES AP, P231
   von Mayrhauser A., 1994, ICSE-16. 16th International Conference on Software Engineering (Cat. No.94CH3409-0), P39, DOI 10.1109/ICSE.1994.296764
   Wettel R, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P551, DOI 10.1145/1985793.1985868
NR 64
TC 15
Z9 16
U1 1
U2 11
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD DEC
PY 2017
VL 43
IS 12
BP 1125
EP 1143
DI 10.1109/TSE.2017.2655524
PG 19
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA FQ1RH
UT WOS:000418134800003
DA 2024-07-18
ER

PT J
AU Herbold, S
AF Herbold, Steffen
TI Comments on ScottKnottESD in Response to "An Empirical Comparison of
   Model Validation Techniques for Defect Prediction Models"
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Scott-knott test; log transformation; statistics
AB In this article, we discuss the ScottKnottESD test, which was proposed in a recent paper "An Empirical Comparison of Model Validation Techniques for Defect Prediction Models" that was published in this journal. We discuss the implications and the empirical impact of the proposed normality correction of ScottKnottESD and come to the conclusion that this correction does not necessarily lead to the fulfillment of the assumptions of the original Scott-Knott test and may cause problems with the statistical analysis.
C1 [Herbold, Steffen] Univ Goettingen, Inst Comp Sci, D-37073 Gottingen, Germany.
C3 University of Gottingen
RP Herbold, S (corresponding author), Univ Goettingen, Inst Comp Sci, D-37073 Gottingen, Germany.
EM herbold@cs.uni-goettingen.de
OI Herbold, Steffen/0000-0001-9765-2803
CR [Anonymous], 2000, Software Cost Estimation with COCOMO II
   Bartlett MS, 1937, PROC R SOC LON SER-A, V160, P0268, DOI 10.1098/rspa.1937.0109
   BROWN MB, 1974, J AM STAT ASSOC, V69, P364, DOI 10.2307/2285659
   Cohen J., 1988, STAT POWER ANAL BEHA
   Demsar J, 2006, J MACH LEARN RES, V7, P1
   Feng Changyong, 2014, Shanghai Arch Psychiatry, V26, P105, DOI 10.3969/j.issn.1002-0829.2014.02.009
   Friedman M, 1940, ANN MATH STAT, V11, P86, DOI 10.1214/aoms/1177731944
   Herbold S, 2017, SHERBOLD REPLICATION
   Herbold S, 2018, IEEE T SOFTWARE ENG, V44, P811, DOI 10.1109/TSE.2017.2724538
   Herbsleb JD, 2001, PROC INT CONF SOFTW, P81, DOI 10.1109/ICSE.2001.919083
   Hopkins W. G., 2000, NEW VIEW STAT NEW VI
   Jiang Y, 2008, EMPIR SOFTW ENG, V13, P561, DOI 10.1007/s10664-008-9079-3
   Jureczko M, 2010, P 6 INT C PREDICTIVE, DOI DOI 10.1145/1868328.1868342
   Kempthorne O, 1919, T ROY SOC EDINBURGH, V52, P399, DOI [DOI 10.1017/S0080456800012163, 10.1017/S0080456800012163]
   Ma Y, 2012, INFORM SOFTWARE TECH, V54, P248, DOI 10.1016/j.infsof.2011.09.007
   Mockus A, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P503, DOI 10.1109/ICSE.2002.1007994
   Nemenyi P. B., 1963, doctoral dissertation
   Osborne JW., 2002, PRACT ASSESS RES EVA, V8, P6, DOI DOI 10.7275/4VNG-5608
   SCOTT AJ, 1974, BIOMETRICS, V30, P507, DOI 10.2307/2529204
   SHAPIRO SS, 1965, BIOMETRIKA, V52, P591, DOI 10.1093/biomet/52.3-4.591
   Tantithamthavorn C., 2016, Scottknottesd: The scott-knott effect size difference (esd) test. R package version
   Tantithamthavorn C. K., 2017, ZENODO
   Tantithamthavorn C, 2017, IEEE T SOFTWARE ENG, V43, P1, DOI 10.1109/TSE.2016.2584050
NR 23
TC 24
Z9 26
U1 2
U2 6
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD NOV
PY 2017
VL 43
IS 11
BP 1091
EP 1094
DI 10.1109/TSE.2017.2748129
PG 4
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA FM5XS
UT WOS:000415117000007
DA 2024-07-18
ER

PT J
AU Sarro, F
   Ferrucci, F
   Harman, M
   Manna, A
   Ren, J
AF Sarro, Federica
   Ferrucci, Filomena
   Harman, Mark
   Manna, Alessandra
   Ren, Jian
TI Adaptive Multi-Objective Evolutionary Algorithms for Overtime Planning
   in Software Projects
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Software engineering; management; planning; search-based software
   engineering; project scheduling; overtime; hyperheuristic;
   multi-objective evolutionary algorithms; NSGAII
ID GENETIC ALGORITHM; OPTIMIZATION; PERFORMANCE; CROSSOVER; SEARCH; WORK;
   ASSOCIATIONS; MANAGEMENT; IMPACT
AB Software engineering and development is well-known to suffer from unplanned overtime, which causes stress and illness in engineers and can lead to poor quality software with higher defects. Recently, we introduced a multi-objective decision support approach to help balance project risks and duration against overtime, so that software engineers can better plan overtime. This approach was empirically evaluated on six real world software projects and compared against state-of-the-art evolutionary approaches and currently used overtime strategies. The results showed that our proposal comfortably outperformed all the benchmarks considered. This paper extends our previous work by investigating adaptive multi-objective approaches to meta-heuristic operator selection, thereby extending and (as the results show) improving algorithmic performance. We also extended our empirical study to include two new real world software projects, thereby enhancing the scientific evidence for the technical performance claims made in the paper. Our new results, over all eight projects studied, showed that our adaptive algorithm outperforms the considered state of the art multi-objective approaches in 93 percent of the experiments (with large effect size). The results also confirm that our approach significantly outperforms current overtime planning practices in 100 percent of the experiments (with large effect size).
C1 [Sarro, Federica; Harman, Mark] UCL, CREST Ctr, London WC1E 6BT, England.
   [Ferrucci, Filomena; Manna, Alessandra] Univ Salerno, I-84084 Fisciano, SA, Italy.
   [Ren, Jian] Beihang Univ, Beijing 100191, Peoples R China.
C3 University of London; University College London; University of Salerno;
   Beihang University
RP Sarro, F (corresponding author), UCL, CREST Ctr, London WC1E 6BT, England.
EM f.sarro@ucl.ac.uk; fferrucci@unisa.it; mark.harman@ucl.ac.uk;
   a.manna9@studenti.unisa.it; jian.ren@cs.ucl.ac.uk
RI Ferrucci, Filomena/AAG-6799-2020
OI Ferrucci, Filomena/0000-0002-0975-8972; Sarro,
   Federica/0000-0002-9146-442X
FU EPSRC [EP/J017515]; Microsoft Azure Research; EPSRC [EP/J017515/1]
   Funding Source: UKRI
FX The authors thank Andreas Andreou, Guenther Ruhe, and Costantinos
   Stylianou for providing two of the datasets used in the present study.
   This research was funded by the EPSRC grant EP/J017515 and the Microsoft
   Azure Research Grant F. Sarro 2014.
CR Alba E, 2007, INFORM SCIENCES, V177, P2380, DOI 10.1016/j.ins.2006.12.020
   Alvarez-Valdes R, 2006, J HEURISTICS, V12, P95, DOI 10.1007/s10732-006-5224-6
   [Anonymous], RAPID DEV TAMING WIL
   [Anonymous], 2014, P 2014 INT S SOFTW T
   [Anonymous], 2010, P 12 ANN C CYB INF S
   [Anonymous], 2008, 4 INT S MAN ENG INF
   [Anonymous], P CONSTR RES C
   [Anonymous], 2007, P IEEE C COMP VIS PA
   [Anonymous], TR9803 AFB DEP EL CO
   [Anonymous], 1988, Statistical Power Analysis for the Behavioral Sciences
   [Anonymous], P 37 INT C SOFTW ENG
   [Anonymous], GUID PROJ MAN BOD KN
   [Anonymous], 214 ETH COMP ENG NET
   Antoniol G, 2005, PROC IEEE INT CONF S, P240
   Arcuri A, 2013, EMPIR SOFTW ENG, V18, P594, DOI 10.1007/s10664-013-9249-9
   Arcuri A, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1, DOI 10.1145/1985793.1985795
   Barr ET, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P306, DOI 10.1145/2635868.2635898
   Barreto A, 2008, COMPUT OPER RES, V35, P3073, DOI 10.1016/j.cor.2007.01.010
   Barros MD, 2016, GECCO'16: PROCEEDINGS OF THE 2016 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P1061, DOI 10.1145/2908812.2908824
   Beckers DGJ, 2008, WORK STRESS, V22, P33, DOI 10.1080/02678370801984927
   Biafore B., 2011, Successful project management: Applying best practices and real-world techniques with Microsoft Project
   Burton FR, 2014, PROCEDIA COMPUT SCI, V28, P11, DOI 10.1016/j.procs.2014.03.002
   CHANG CK, 1994, P INT COMP SOFTW APP, P57, DOI 10.1109/CMPSAC.1994.342832
   Chatfield C., 2013, MICROSOFT PROJECT 20
   Chicano F, 2011, GECCO-2011: PROCEEDINGS OF THE 13TH ANNUAL GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P1915
   Consoli PA, 2014, LECT NOTES COMPUT SC, V8886, P359, DOI 10.1007/978-3-319-13563-2_31
   Corazza A, 2013, EMPIR SOFTW ENG, V18, P506, DOI 10.1007/s10664-011-9187-3
   de Freitas FG, 2011, LECT NOTES COMPUT SC, V6956, P18, DOI 10.1007/978-3-642-23716-4_5
   De Jong K., 1987, Genetic Algorithms and their Applications: Proceedings of the Second International Conference on Genetic Algorithms, P210
   Deb K, 2002, IEEE T EVOLUT COMPUT, V6, P182, DOI 10.1109/4235.996017
   Deb K, 2014, IEEE T EVOLUT COMPUT, V18, P577, DOI 10.1109/TEVC.2013.2281535
   Di Penta M, 2011, SOFTWARE PRACT EXPER, V41, P495, DOI 10.1002/spe.1001
   Driesen K, 2010, CHRONOBIOL INT, V27, P1062, DOI 10.3109/07420528.2010.489877
   Durillo JJ, 2011, ADV ENG SOFTW, V42, P760, DOI 10.1016/j.advengsoft.2011.05.014
   Ferrucci Filomena, 2010, 2010 Proceedings of Second International Symposium on Search Based Software Engineering (SSBSE), P89, DOI 10.1109/SSBSE.2010.20
   Ferrucci F., 2014, Softw. Proj. Manag. Chang. World, P373
   Ferrucci F, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P462, DOI 10.1109/ICSE.2013.6606592
   Ferrucci F, 2009, LECT NOTES COMPUT SC, V5891, P307, DOI 10.1007/978-3-642-05415-0_22
   Ficco M, 2016, SOFT COMPUT, V20, P2641, DOI 10.1007/s00500-015-1665-x
   Gay G, 2010, AUTOMAT SOFTW ENG, V17, P87, DOI 10.1007/s10515-009-0059-7
   Gueorguiev S., 2009, P 11 ANN C GENETIC E, P1673, DOI DOI 10.1145/1569901.1570125
   Guizzo G, 2014, LECT NOTES COMPUT SC, V8636, P77
   Harman M., 2002, GEN EV COMP C GECCO, P1351
   Harman M, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P342, DOI 10.1109/FOSE.2007.29
   Harman M, 2012, INT SYMP EMP SOFTWAR, P1, DOI 10.1145/2372251.2372253
   Harman M, 2012, ACM COMPUT SURV, V45, DOI 10.1145/2379776.2379787
   Harman M, 2012, LECT NOTES COMPUT SC, V7007, P1
   Harman M, 2010, IEEE T SOFTWARE ENG, V36, P226, DOI 10.1109/TSE.2009.71
   Hericko M, 2008, INFORM PROCESS LETT, V108, P101, DOI 10.1016/j.ipl.2008.04.014
   Huang SJ, 2006, INFORM SOFTWARE TECH, V48, P1034, DOI 10.1016/j.infsof.2005.12.020
   Jia Y, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P540, DOI 10.1109/ICSE.2015.71
   Jin NL, 2014, 2014 IEEE CONGRESS ON EVOLUTIONARY COMPUTATION (CEC), P3016, DOI 10.1109/CEC.2014.6900527
   Kang D, 2011, SOFTWARE PRACT EXPER, V41, P551, DOI 10.1002/spe.1030
   Kapur P, 2008, J SOFTW MAINT EVOL-R, V20, P365, DOI 10.1002/smr.379
   Kelley J.E. J., 1963, Industrial Scheduling, P347
   Kleppa E, 2008, J OCCUP ENVIRON MED, V50, P658, DOI 10.1097/JOM.0b013e3181734330
   Kocaguneli E, 2012, IEEE T SOFTWARE ENG, V38, P1403, DOI 10.1109/TSE.2011.111
   Le Goues C, 2012, PROCEEDINGS OF THE FOURTEENTH INTERNATIONAL CONFERENCE ON GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P959, DOI 10.1145/2330163.2330296
   Lefley M, 2003, LECT NOTES COMPUT SC, V2724, P2477
   Lehre PK, 2011, SOFT COMPUT, V15, P1675, DOI 10.1007/s00500-010-0610-2
   Lipke W., 1999, CROSS TALK, P17
   Lyneis JM, 2007, SYST DYNAM REV, V23, P157, DOI 10.1002/sdr.377
   Mann C, 2005, AGILE 2005, PROCEEDINGS, P70, DOI 10.1109/ADC.2005.1
   McMinn P., 2010, 2010 Proceedings of Second International Symposium on Search Based Software Engineering (SSBSE), P9, DOI 10.1109/SSBSE.2010.11
   McMinn P, 2013, INFORM SOFTWARE TECH, V55, P153, DOI 10.1016/j.infsof.2012.03.010
   Meunier H, 2000, IEEE C EVOL COMPUTAT, P317, DOI 10.1109/CEC.2000.870312
   Minku LL, 2014, IEEE T SOFTWARE ENG, V40, P83, DOI 10.1109/TSE.2013.52
   Minku LL, 2012, PROCEEDINGS OF THE FOURTEENTH INTERNATIONAL CONFERENCE ON GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P1221, DOI 10.1145/2330163.2330332
   Nebro AJ, 2013, LECT NOTES COMPUT SC, V8109, P269, DOI 10.1007/978-3-642-40643-0_28
   Neumann Geoffrey, 2015, Search-Based Software Engineering. 7th International Symposium, SSBSE 2015. Proceedings: LNCS 9275, P318, DOI 10.1007/978-3-319-22183-0_29
   Nishikitani M, 2005, IND HEALTH, V43, P623, DOI 10.2486/indhealth.43.623
   Olaechea R, 2014, 18TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE (SPLC 2014), VOL 1, P92, DOI 10.1145/2648511.2648521
   Pendharkar PC, 2004, COMPUT OPER RES, V31, P481, DOI 10.1016/S0305-0548(02)00229-0
   Pulido GT, 2003, LECT NOTES COMPUT SC, V2632, P252
   Raiha Outi, 2009, Proceedings of the 2009 World Congress on Nature & Biologically Inspired Computing (NaBIC 2009), P619, DOI 10.1109/NABIC.2009.5393431
   Raiha Outi, 2010, Proceedings 10th International Conference on Intelligent Systems Design and Applications (ISDA 2010), P266, DOI 10.1109/ISDA.2010.5687255
   Ren J, 2011, LECT NOTES COMPUT SC, V6956, P127, DOI 10.1007/978-3-642-23716-4_14
   ROYSTON JP, 1982, J R STAT SOC C-APPL, V31, P115
   Saliu M.O., 2007, P 6 JOINT M EUROPEAN, P105, DOI DOI 10.1145/1287624.1287641
   Sarro F, 2012, P 27 ANN ACM S APPL, P1221, DOI DOI 10.1145/2245276.2231968
   Sarro F, 2016, PROC INT CONF SOFTW, P619, DOI 10.1145/2884781.2884830
   Spears W.M., 1991, Methodologies for Intelligent Systems, volume 542 of Lecture Notes in Computer Science, V542, P409
   Stylianou C., 2014, Software project management in a changing world, P73, DOI [https://doi.org/10.1007/978-3-642-55035-5_4, DOI 10.1007/978-3-642-55035-5_4]
   Stylianou C, 2012, PROC INT C TOOLS ART, P277, DOI 10.1109/ICTAI.2012.45
   van der Hulst M, 2001, WORK STRESS, V15, P227, DOI 10.1080/02678370110066580
   Vargha A, 2000, J EDUC BEHAV STAT, V25, P101, DOI 10.3102/10769986025002101
   Veerapen N, 2015, INFORM SOFTWARE TECH, V65, P1, DOI 10.1016/j.infsof.2015.03.008
   Wang Z, 2010, IEEE T RELIAB, V59, P754, DOI 10.1109/TR.2010.2055927
   White DR, 2009, LECT NOTES COMPUT SC, V5481, P220, DOI 10.1007/978-3-642-01181-8_19
   Yourdon E., 1997, DEATH MARCH COMPLETE
   Zhang Y, 2008, LECT NOTES COMPUT SC, V5025, P88, DOI 10.1007/978-3-540-69062-7_8
   Zitzler E, 1999, IEEE T EVOLUT COMPUT, V3, P257, DOI 10.1109/4235.797969
   Zitzler E, 2003, IEEE T EVOLUT COMPUT, V7, P117, DOI 10.1109/TEVC.2003.810758
NR 93
TC 32
Z9 33
U1 0
U2 11
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD OCT
PY 2017
VL 43
IS 10
BP 898
EP 917
DI 10.1109/TSE.2017.2650914
PG 20
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science; Engineering
GA FJ9YP
UT WOS:000413137700001
OA Green Submitted, hybrid
DA 2024-07-18
ER

PT J
AU Tsantalis, N
   Mazinanian, D
   Krishnan, GP
AF Tsantalis, Nikolaos
   Mazinanian, Davood
   Krishnan, Giri Panamoottil
TI Assessing the Refactorability of Software Clones
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Code duplication; software clone management; clone refactoring;
   refactorability assessment; empirical study
ID METHOD REFACTORING OPPORTUNITIES; CODE CLONES
AB The presence of duplicated code in software systems is significant and several studies have shown that clones can be potentially harmful with respect to the maintainability and evolution of the source code. Despite the significance of the problem, there is still limited support for eliminating software clones through refactoring, because the unification and merging of duplicated code is a very challenging problem, especially when software clones have gone through several modifications after their initial introduction. In this work, we propose an approach for automatically assessing whether a pair of clones can be safely refactored without changing the behavior of the program. In particular, our approach examines if the differences present between the clones can be safely parameterized without causing any side-effects. The evaluation results have shown that the clones assessed as refactorable by our approach can be indeed refactored without causing any compile errors or test failures. Additionally, the computational cost of the proposed approach is negligible (less than a second) in the vast majority of the examined cases. Finally, we perform a large-scale empirical study on over a million clone pairs detected by four different clone detection tools in nine open-source projects to investigate how refactorability is affected by different clone properties and tool configuration options. Among the highlights of our conclusions, we found that a) clones in production code tend to be more refactorable than clones in test code, b) clones with a close relative location (i.e., same method, type, or file) tend to be more refactorable than clones in distant locations (i.e., same hierarchy, or unrelated types), c) Type-1 clones tend to be more refactorable than the other clone types, and d) clones with a small size tend to be more refactorable than clones with a larger size.
C1 [Tsantalis, Nikolaos; Mazinanian, Davood; Krishnan, Giri Panamoottil] Concordia Univ, Dept Comp Sci & Software Engn, Montreal, PQ H3G 1M8, Canada.
C3 Concordia University - Canada
RP Tsantalis, N (corresponding author), Concordia Univ, Dept Comp Sci & Software Engn, Montreal, PQ H3G 1M8, Canada.
EM nikolaos.tsantalis@concordia.ca; d_mazina@cse.concordia.ca;
   giri.krishnan@concordia.ca
RI Tsantalis, Nikolaos/AAR-7845-2020
OI Tsantalis, Nikolaos/0000-0003-2508-3845; Mazinanian,
   Davood/0000-0002-1407-8218
FU Natural Sciences and Engineering Council of Canada (NSERC); Faculty of
   Engineering and Computer Science at Concordia University; NSERC;
   European Union (European Social Fund-ESF); Greek national funds through
   the Operational Program "Education and Lifelong Learning" of the
   National Strategic Reference Framework (NSRF)-Research Funding Program:
   Thalis-Athens University of Economics and Business-Software Engineering
   Research Platform
FX The authors would like to thank the Natural Sciences and Engineering
   Council of Canada (NSERC) and the Faculty of Engineering and Computer
   Science at Concordia University for their generous support. Also, they
   would like to thank Raphael Stein (funded with an Undergraduate Student
   Research Award from NSERC) for his contribution in the graphical user
   interface of the tool presented in this paper. Nikolaos Tsantalis has
   been also partially funded by the European Union (European Social
   Fund-ESF) and Greek national funds through the Operational Program
   "Education and Lifelong Learning" of the National Strategic Reference
   Framework (NSRF)-Research Funding Program: Thalis-Athens University of
   Economics and Business-Software Engineering Research Platform.
CR BALAS E, 1986, SIAM J COMPUT, V15, P1054, DOI 10.1137/0215075
   Barbour L., 2011, 2011 IEEE 27th International Conference on Software Maintenance, P273, DOI 10.1109/ICSM.2011.6080794
   Baxter ID, 1998, PROC IEEE INT CONF S, P368, DOI 10.1109/ICSM.1998.738528
   Bellon S, 2007, IEEE T SOFTWARE ENG, V33, P577, DOI 10.1109/TSE.2007.70725
   Bettenburg N, 2012, SCI COMPUT PROGRAM, V77, P760, DOI 10.1016/j.scico.2010.11.010
   Bian YX, 2013, J SYST SOFTWARE, V86, P2077, DOI 10.1016/j.jss.2013.03.061
   Choi E., 2011, PROC 5 INT WORKSHOP, P7
   Conte Donatello, 2007, Journal of Graph Algorithms and Applications, V11, P99, DOI 10.7155/jgaa.00139
   Cormen T. H., 2009, Introduction to Algorithms, VSecond
   Daniel B., 2007, P THE 6 JOINT M EURO, P185, DOI 10.1145/1287624.1287651
   Deissenboeck F., 2010, 2010 32nd International Conference on Software Engineering (ICSE), P499, DOI 10.1145/1810295.1810449
   Durand PJ, 1999, INTERNET J CHEM, V2
   FERRANTE J, 1987, ACM T PROGR LANG SYS, V9, P319, DOI 10.1145/24039.24041
   Fraser G., ACM T SOFTW IN PRESS
   Gamma Erich, 1995, DESIGN PATTERNS ELEM
   Gode N., 2011, CLONE EVOLUTION
   Göde N, 2013, J SOFTW-EVOL PROC, V25, P165, DOI 10.1002/smr.520
   Goto A, 2013, INT WORKS SOFTW CLON, P23, DOI 10.1109/IWSC.2013.6613038
   Hell P., 2004, SERIES OXFORD LECT S
   Higo Y, 2011, EUR CON SFTWR MTNCE, P75, DOI 10.1109/CSMR.2011.12
   Higo Y, 2008, J SOFTW MAINT EVOL-R, V20, P435, DOI 10.1002/smr.394
   Hintze JL, 1998, AM STAT, V52, P181, DOI 10.2307/2685478
   Nguyen HA, 2012, IEEE T SOFTWARE ENG, V38, P1008, DOI 10.1109/TSE.2011.90
   Hotta K, 2012, EUR CON SFTWR MTNCE, P53, DOI 10.1109/CSMR.2012.16
   Jiang LX, 2007, PROC INT CONF SOFTW, P96
   JOHNSON R, 1994, SIGPLAN NOTICES, V29, P171, DOI 10.1145/773473.178258
   Juergens E, 2009, PROC INT CONF SOFTW, P485, DOI 10.1109/ICSE.2009.5070547
   Kamiya T, 2002, IEEE T SOFTWARE ENG, V28, P654, DOI 10.1109/TSE.2002.1019480
   Komondoor R, 2001, LECT NOTES COMPUT SC, V2126, P40
   Koschke R, 2006, WORK CONF REVERSE EN, P253
   Krinke J, 2001, EIGHTH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P301, DOI 10.1109/WCRE.2001.957835
   Krishnan GP, 2014, 2014 SOFTWARE EVOLUTION WEEK - IEEE CONFERENCE ON SOFTWARE MAINTENANCE, REENGINEERING, AND REVERSE ENGINEERING (CSMR-WCRE), P104, DOI 10.1109/CSMR-WCRE.2014.6747160
   Lin Y, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P164, DOI 10.1145/2568225.2568298
   Liu Chao, 2006, Proc. 12th ACMSIGKDD Int'l Con. on Knowledge Discovery and Data Mining (KDD 06), P872, DOI DOI 10.1145/1150402.1150522
   Lozano A, 2008, PROC IEEE INT CONF S, P227, DOI 10.1109/ICSM.2008.4658071
   MCGREGOR JJ, 1982, SOFTWARE PRACT EXPER, V12, P23, DOI 10.1002/spe.4380120103
   Mondal M, 2014, 2014 SOFTWARE EVOLUTION WEEK - IEEE CONFERENCE ON SOFTWARE MAINTENANCE, REENGINEERING, AND REVERSE ENGINEERING (CSMR-WCRE), P114, DOI 10.1109/CSMR-WCRE.2014.6747161
   Mondal M, 2014, IEEE INT WORK C SO, P11, DOI 10.1109/SCAM.2014.11
   Mondal M, 2012, APPL COMPUT REV, V12, P20, DOI 10.1145/2387358.2387360
   Mondal M, 2014, SCI COMPUT PROGRAM, V95, P445, DOI 10.1016/j.scico.2013.11.027
   Murphy-Hill E, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P421, DOI 10.1145/1368088.1368146
   Opdyke W. F., 1992, Refactoring object-oriented frameworks
   Ott L. M., 1993, Proceedings First International Software Metrics Symposium (Cat. No.93TH0518-1), P71, DOI 10.1109/METRIC.1993.263799
   Roy CK, 2014, 2014 SOFTWARE EVOLUTION WEEK - IEEE CONFERENCE ON SOFTWARE MAINTENANCE, REENGINEERING, AND REVERSE ENGINEERING (CSMR-WCRE), P18, DOI 10.1109/CSMR-WCRE.2014.6747168
   Roy CK, 2009, IEEE ICST WORKSHOP, P157, DOI 10.1109/ICSTW.2009.18
   Roy CK, 2008, INT C PROGRAM COMPRE, P172, DOI 10.1109/ICPC.2008.41
   Roy CK, 2009, SCI COMPUT PROGRAM, V74, P470, DOI 10.1016/j.scico.2009.02.007
   Selim G. M. K., 2010, Proceedings 17th Working Conference on Reverse Engineering (WCRE 2010), P13, DOI 10.1109/WCRE.2010.11
   Shepherd D, 2004, SERP'04: PROCEEDINGS OF THE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING RESEARCH AND PRACTICE, VOLS 1 AND 2, P601
   Soares G, 2013, IEEE T SOFTWARE ENG, V39, P147, DOI 10.1109/TSE.2012.19
   Soares G, 2010, IEEE SOFTWARE, V27, P52, DOI 10.1109/MS.2010.63
   Speicher D., 2012, P 26 WORKSH LOG PROG, P75
   Tairas R, 2012, INFORM SOFTWARE TECH, V54, P1297, DOI 10.1016/j.infsof.2012.06.011
   Tip F, 2003, ACM SIGPLAN NOTICES, V38, P13, DOI 10.1145/949343.949308
   Tsantalis N., 2013, C CTR ADV STUD COLL, P132, DOI [10.5555/2555523.2555539, DOI 10.5555/2555523.2555539]
   Tsantalis N, 2011, J SYST SOFTWARE, V84, P1757, DOI 10.1016/j.jss.2011.05.016
   Valiente G., 2002, ALGORITHMS TREES GRA, DOI DOI 10.1007/978-3-662-04921-1
   van Leeuwen J., 1994, HDB THEORETICAL COMP
   Wang W, 2014, PROC IEEE INT CONF S, P331, DOI 10.1109/ICSME.2014.55
   Zhao JJ, 1999, INTERNATIONAL SYMPOSIUM ON SOFTWARE ENGINEERING FOR PARALLEL AND DISTRIBUTED SYSTEMS, PROCEEDINGS, P13, DOI 10.1109/PDSE.1999.779735
   Zhenchang Xing, 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P576, DOI 10.1109/ASE.2011.6100129
   Zibran MF, 2011, IEEE INT WORK C SO, P105, DOI 10.1109/SCAM.2011.21
   Zibran MF, 2013, IET SOFTW, V7, P167, DOI 10.1049/iet-sen.2012.0058
NR 63
TC 48
Z9 51
U1 0
U2 9
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD NOV
PY 2015
VL 41
IS 11
BP 1055
EP 1090
DI 10.1109/TSE.2015.2448531
PG 36
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA CW5EM
UT WOS:000365018200002
DA 2024-07-18
ER

PT J
AU Xu, C
   Xi, W
   Cheung, SC
   Ma, XX
   Cao, C
   Lu, J
AF Xu, Chang
   Xi, Wang
   Cheung, S. C.
   Ma, Xiaoxing
   Cao, Chun
   Lu, Jian
TI CINA: Suppressing the Detection of Unstable Context Inconsistency
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Constraint; context inconsistency; impact propagation; instability
   analysis; pervasive computing
ID AWARE; MOBILE; SPECIFICATION; RESOLUTION; MODEL
AB Context-aware applications adapt their behavior based on contexts. Contexts can, however, be incorrect. A popular means to build dependable applications is to augment them with a set of constraints to govern the consistency of context values. These constraints are evaluated upon context changes to detect inconsistencies so that they can be timely handled. However, we observe that many context inconsistencies are unstable. They vanish by themselves and do not require handling. Such inconsistencies are detected due to misaligned sensor sampling or improper inconsistency detection scheduling. We call them unstable context inconsistencies (or STINs). STINs should be avoided to prevent unnecessary inconsistency handling and unstable behavioral adaptation to applications. In this article, we study STINs systematically, from examples to theoretical analysis, and present algorithms to suppress their detection. Our key insight is that only certain patterns of context changes can make a consistency constraint subject to the detection of STINs. We derive such patterns and proactively use them to suppress the detection of STINs. We implemented our idea and applied it to real-world applications. Experimental results confirmed its effectiveness in suppressing the detection of numerous STINs with negligible overhead, while preserving the detection of stable context inconsistencies that require inconsistency handling.
C1 [Xu, Chang; Xi, Wang; Ma, Xiaoxing; Cao, Chun; Lu, Jian] Nanjing Univ, State Key Lab Novel Software Technol, Nanjing 210023, Jiangsu, Peoples R China.
   [Xu, Chang; Xi, Wang; Ma, Xiaoxing; Cao, Chun; Lu, Jian] Nanjing Univ, Dept Comp Sci & Technol, Nanjing 210023, Jiangsu, Peoples R China.
   [Cheung, S. C.] Hong Kong Univ Sci & Technol, Dept Comp Sci & Engn, Kowloon, Hong Kong, Peoples R China.
C3 Nanjing University; Nanjing University; Hong Kong University of Science
   & Technology
RP Xu, C (corresponding author), Nanjing Univ, State Key Lab Novel Software Technol, Nanjing 210023, Jiangsu, Peoples R China.
EM changxu@nju.edu.cn; swangex@gmail.com; scc@cse.ust.hk; xxm@nju.edu.cn;
   caochun@nju.edu.cn; lj@nju.edu.cn
RI Liu, Jingyi/JWP-6326-2024; xi, wang/HIZ-7736-2022; Ma,
   Xiaoxing/K-4290-2012; Xu, Chang/O-4543-2015; Liu, Chenyu/KBQ-8899-2024;
   Ma, Xiaoxing/X-6505-2018; Cheung, Shing Chi/U-5882-2018
OI Ma, Xiaoxing/0000-0001-7970-1384; Cheung, Shing Chi/0000-0002-3508-7172
FU National Basic Research 973 Program [2015CB352202]; National Natural
   Science Foundation of China [61472174, 91318301, 61321491]; Research
   Grants Council of Hong Kong [611813]
FX The authors wish to thank Sam Malek and anonymous reviewers for their
   valuable comments on improving this article. This work was supported in
   part by National Basic Research 973 Program (Grant No. 2015CB352202),
   and National Natural Science Foundation (Grant Nos. 61472174, 91318301,
   61321491) of China, and by Research Grants Council (611813) of Hong
   Kong. All correspondence should be addressed to Chang Xu.
CR Abowd G. D., 2000, ACM Transactions on Computer-Human Interaction, V7, P29, DOI 10.1145/344949.344988
   Agostini Alessandra, 2009, International Journal of Web Engineering and Technology, V5, P3, DOI 10.1504/IJWET.2009.025011
   [Anonymous], 2015, ANDROID API GUIDES S
   [Anonymous], 1999, P SIGCHI C HUM FACT, DOI DOI 10.1145/302979.303126
   [Anonymous], 2006, VLDB
   Bass T, 2000, COMMUN ACM, V43, P99, DOI 10.1145/332051.332079
   Bettini C, 2010, PERVASIVE MOB COMPUT, V6, P161, DOI 10.1016/j.pmcj.2009.06.002
   Blanc X, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P511, DOI 10.1145/1368088.1368158
   Bu YY, 2006, INT CONF QUAL SOFTW, P193
   Bulling A, 2014, ACM COMPUT SURV, V46, DOI 10.1145/2499621
   Capra L, 2003, IEEE T SOFTWARE ENG, V29, P929, DOI 10.1109/TSE.2003.1237173
   Castelli G, 2007, FIFTH ANNUAL IEEE INTERNATIONAL CONFERENCE ON PERVASIVE COMPUTING AND COMMUNICATIONS, PROCEEDINGS, P229, DOI 10.1109/PERCOM.2007.4
   Chang X., 2005, Proceedings of the 10th European software engineering conference held jointly with 13th ACM SIGSOFT international symposium on Foundations of software engineering (ESEC/FSE-13). ACM, New York, NY, P336, DOI DOI 10.1145/1095430.1081759
   Chen CH, 2011, INT CONF PERVAS COMP, P10, DOI 10.1109/PERCOM.2011.5767574
   Chen GL, 2004, PROCEEDINGS OF MOBIQUITOUS 2004, P246
   Chomicki J, 2003, IEEE T KNOWL DATA EN, V15, P244, DOI 10.1109/TKDE.2003.1161596
   Demsky B, 2006, IEEE T SOFTWARE ENG, V32, P931, DOI 10.1109/TSE.2006.122
   Dey A. K., 2015, THE CONTEXT TOOLKIT
   Egyed A., 2006, 28th International Conference on Software Engineering Proceedings, P381, DOI 10.1145/1134285.1134339
   Egyed A, 2007, PROC INT CONF SOFTW, P292
   Griswold WG, 2003, PROC INT CONF SOFTW, P363, DOI 10.1109/ICSE.2003.1201215
   Guizzo E., 2015, GOOGLES SELF DRIVING
   Henricksen K, 2004, SECOND IEEE ANNUAL CONFERENCE ON PERVASIVE COMPUTING AND COMMUNICATIONS, PROCEEDINGS, P77, DOI 10.1109/PERCOM.2004.1276847
   Huang Y, 2012, IEEE T PARALL DISTR, V23, P744, DOI 10.1109/TPDS.2011.176
   iOS developer library, 2015, EV HANDL GUID IOS
   iOS developer library, 2015, CLLOCATIONMANAGER CL
   Java community process, 2015, JSR 179 LOC API J2ME
   Java community process, 2015, JSR 82 JAV APIS BLUE
   Julien C, 2006, IEEE T SOFTWARE ENG, V32, P281, DOI 10.1109/TSE.2006.47
   Kehrer T, 2013, IEEE INT CONF AUTOM, P191, DOI 10.1109/ASE.2013.6693079
   Khoussainova N., 2006, MobiDE 2006. Proceedings of the Fifth ACM International Workshop on Data Engineering for Wireless and Mobile Access, P43, DOI 10.1145/1140104.1140114
   KLYNE G, COMPOSITE CAPABILITY
   Kshemkalyani AD, 2007, IEEE T COMPUT, V56, P1578, DOI 10.1109/TC.2007.70749
   Kshemkalyani AD, 2012, J PARALLEL DISTR COM, V72, P219, DOI 10.1016/j.jpdc.2011.09.004
   Liu YP, 2013, J SYST SOFTWARE, V86, P854, DOI 10.1016/j.jss.2012.11.055
   Lu H, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P61, DOI 10.1145/1368088.1368098
   Lukowicz P., 2002, UbiComp 2002: Ubiquitous Computing. 4th International Conference. Proceedings (Lecture Notes in Computer Science Vol.2498), P361
   Malan D., 2004, Proc of the MobiSys 2004 Workshop on Applications of Mobile Embedded Systems (WAMES 2004), P12
   Murphy AL, 2006, ACM T SOFTW ENG METH, V15, P279, DOI 10.1145/1151695.1151698
   Nentwich C, 2003, PROC INT CONF SOFTW, P455, DOI 10.1109/ICSE.2003.1201223
   Nentwich C, 2003, ACM T SOFTW ENG METH, V12, P28, DOI 10.1145/839268.839271
   Nentwich C., 2002, ACM T INTERNET TECHN, V2, P151, DOI [10.1145/514183.514186, DOI 10.1145/514183.514186]
   Nuseibeh B, 2001, J SYST SOFTWARE, V58, P171, DOI 10.1016/S0164-1212(01)00036-X
   Ranganathan A., 2002, IEEE Pervasive Computing, V1, P51, DOI 10.1109/MPRV.2002.1037722
   Ranganathan A, 2003, PERS UBIQUIT COMPUT, V7, P353, DOI 10.1007/s00779-003-0251-x
   Rao J., 2006, VLDB, P175
   Reiss SP, 2006, IEEE T SOFTWARE ENG, V32, P682, DOI 10.1109/TSE.2006.91
   Sama M, 2010, IEEE T SOFTWARE ENG, V36, P644, DOI 10.1109/TSE.2010.35
   Sama M, 2010, J SYST SOFTWARE, V83, P906, DOI 10.1016/j.jss.2009.11.005
   Sui J., 2014, P 21 AS PAC SOFTW EN, P342
   Tse T. H., 2004, Proceedings of the 28th Annual International Computer Software and Applications Conference. COMPSAC 2004, P458, DOI 10.1109/CMPSAC.2004.1342879
   UNGER SH, 1995, IEEE T COMPUT, V44, P754, DOI 10.1109/12.391185
   Wang ZM, 2007, PROC INT CONF SOFTW, P406
   Xi W., 2014, P 21 AS PAC SOFTW EN, P414
   Xiong YF, 2012, PROC INT CONF SOFTW, P58, DOI 10.1109/ICSE.2012.6227206
   Xiong YF, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P315, DOI 10.1145/1595696.1595757
   Xu C., 2008, P 6 ANN IEEE INT C P, P45
   Xu C., 2007, P 6 JOINT M EUR SOFT, P569
   Xu C, 2013, SCI CHINA INFORM SCI, V56, DOI 10.1007/s11432-013-4907-5
   Xu C, 2012, J SYST SOFTWARE, V85, P2812, DOI 10.1016/j.jss.2012.04.078
   Xu C, 2010, ACM T SOFTW ENG METH, V19, DOI 10.1145/1656250.1656253
   Xu C, 2008, INT CON DISTR COMP S, P713, DOI 10.1109/ICDCS.2008.46
   Yang WH, 2015, SCI CHINA INFORM SCI, V58, DOI 10.1007/s11432-015-5300-3
   Yang YL, 2013, IEEE T PARALL DISTR, V24, P1546, DOI 10.1109/TPDS.2012.259
   Ye CY, 2009, IEEE T SOFTWARE ENG, V35, P2, DOI 10.1109/TSE.2008.86
NR 65
TC 9
Z9 10
U1 0
U2 6
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD SEP
PY 2015
VL 41
IS 9
BP 842
EP 865
DI 10.1109/TSE.2015.2418760
PG 24
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA CR9TT
UT WOS:000361700500001
DA 2024-07-18
ER

PT J
AU Wu, LJ
   Su, KL
   Cai, SW
   Zhang, XS
   Zhang, CY
   Wang, SP
AF Wu, Lijun
   Su, Kaile
   Cai, Shaowei
   Zhang, Xiaosong
   Zhang, Chenyi
   Wang, Shupeng
TI An I/O Efficient Approach for Detecting All Accepting Cycles
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Model checking; detection of all accepting cycles; state space
   explosion; accepting strongly connected component; breath-first search
ID DIRECTED MODEL CHECKING; SEARCH ALGORITHM
AB Existing algorithms for I/O Linear Temporal Logic (LTL) model checking usually output a single counterexample for a system which violates the property. However, in real-world applications, such as diagnosis and debugging in software and hardware system designs, people often need to have a set of counterexamples or even all counterexamples. For this purpose, we propose an I/O efficient approach for detecting all accepting cycles, called Detecting All Accepting Cycles (DAAC), where the properties to be verified are in LTL. Different from other algorithms for finding all cycles, DAAC first searches for the accepting strongly connected components (ASCCs), and then finds all accepting cycles of every ASCC, which can avoid searching for a great many paths that are impossible to be extended to accepting cycles. In order to further lower DAAC's I/O complexity and improve its performance, we propose an intersection computation technique and a dynamic path management technique, and exploit a minimal perfect hash function (MPHF). We carry out both complexity and experimental comparisons with the state-of-the-art algorithms including Detect Accepting Cycle (DAC), Maximal Accepting Predecessors (MAP) and Iterative-Deepening Depth-First Search (IDDFS). The comparative results show that our approach is better on the whole in terms of I/O complexity and practical performance, despite the fact that it finds all counterexamples.
C1 [Wu, Lijun; Zhang, Xiaosong] Univ Elect Sci & Technol, Sch Comp Sci & Engn, Chengdu, Peoples R China.
   [Wu, Lijun; Zhang, Chenyi] Univ Queensland, Sch Informat Technol & Elect Engn, Brisbane, Qld, Australia.
   [Su, Kaile] Griffith Univ, Inst Integrated & Intelligent Syst, Brisbane, Qld 4111, Australia.
   [Su, Kaile] Minist Educ, Key Lab High Confidence Software Technol, Beijing, Peoples R China.
   [Cai, Shaowei] Chinese Acad Sci, Inst Software, State Key Lab Comp Sci, Beijing, Peoples R China.
   [Wang, Shupeng] Univ Elect Sci & Technol, Sch Comp Sci & Engn, Chengdu, Peoples R China.
C3 University of Electronic Science & Technology of China; University of
   Queensland; Griffith University; Chinese Academy of Sciences; Institute
   of Software, CAS; University of Electronic Science & Technology of China
RP Wu, LJ (corresponding author), Univ Elect Sci & Technol, Sch Comp Sci & Engn, Chengdu, Peoples R China.
EM wljuestc@sina.com; shaowei001@sina.com; wljuestc@yahoo.com;
   gzzsudocwlj@sina.com; Chenyi001@sina.com; shupengwanguestc@sina.com
OI Cai, Shaowei/0000-0003-1730-6922; Zhang, Chenyi/0000-0002-3054-5883; Su,
   Kaile/0000-0001-6741-9699
FU National Natural Science Foundation of China [61370072, 61073033,
   61472369, 61421091]; China National 973 Project [2014CB340301]
FX The authors would like to thank the editor, associate editor and
   anonymous reviewers for their highly valuable comments and suggestions.
   This work was supported by National Natural Science Foundation of China
   (Nos. 61370072, 61073033, 61472369 and 61421091) and China National 973
   Project 2014CB340301. X. Zhang is the corresponding author.
CR Abello J., 1998, Algorithms - ESA '98. 6th Annual European Symposium. Proceedings, P332
   AGGARWAL A, 1988, COMMUN ACM, V31, P1116, DOI 10.1145/48529.48535
   Aljazzar H, 2010, IEEE T SOFTWARE ENG, V36, P37, DOI 10.1109/TSE.2009.57
   [Anonymous], 1986, P 1 S LOG COMP SCI L
   Barnat J, 2008, LECT NOTES COMPUT SC, V4963, P48, DOI 10.1007/978-3-540-78800-3_5
   Barnat J, 2003, 18TH IEEE INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P106, DOI 10.1109/ASE.2003.1240299
   Barnat J, 2007, LECT NOTES COMPUT SC, V4590, P281
   Barnat J, 2006, LECT NOTES COMPUT SC, V4144, P278, DOI 10.1007/11817963_26
   Botelho FC, 2007, LECT NOTES COMPUT SC, V4619, P139
   Botelho FabianoC., 2007, Proceedings of the Sixteenth ACM Conference on Conference on Information and Knowledge Management, CIKM'07, P653
   Brim L, 2004, LECT NOTES COMPUT SC, V3312, P352
   Cerná I, 2003, LECT NOTES COMPUT SC, V2648, P49
   Copty F., 2001, Correct Hardware Design and Verification Methods. 11th IFIP WG 10.5 Advanced Research Working Conference, CHARME 2001. Proceedings (Lecture Notes in Computer Science Vol.2144), P275
   Dementiev R, 2005, LECT NOTES COMPUT SC, V3669, P640
   Diestel R., 2005, GRAPTH THEORY
   Ding B, 2011, PROC VLDB ENDOW, V4, P255, DOI 10.14778/1938545.1938550
   Edelkamp S, 2006, LECT NOTES COMPUT SC, V3925, P1
   Edelkamp S, 2008, LECT NOTES COMPUT SC, V5123, P530
   Ehrenfeucht F. A., 1973, CUCS02423 U COL
   Fey G, 2008, IEEE T COMPUT AID D, V27, P1138, DOI 10.1109/TCAD.2008.923234
   Jabbar S, 2006, LECT NOTES COMPUT SC, V3855, P237
   Johnson D. B., 1975, SIAM Journal on Computing, V4, P77, DOI 10.1137/0204007
   Korf RE, 2004, PROCEEDING OF THE NINETEENTH NATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE AND THE SIXTEENTH CONFERENCE ON INNOVATIVE APPLICATIONS OF ARTIFICIAL INTELLIGENCE, P650
   Korf RE, 2008, J ACM, V55, DOI 10.1145/1455248.1455250
   Korf Richard E, 2005, PROC NATL CONF ARTIF, V5, P1380
   Korf RichardE., 2003, Proceedings of the 18th International Joint Conference on Artificial Intelligence, P1539
   Leue Stefan, 2012, Model Checking Software. Proceedings 19th International Workshop, SPIN 2012, P24, DOI 10.1007/978-3-642-31759-0_5
   Mehlhorn K, 2002, LECT NOTES COMPUT SC, V2461, P723
   Pelánek R, 2007, LECT NOTES COMPUT SC, V4595, P263
   Schuppan V., 2004, International Journal on Software Tools for Technology Transfer, V5, P185, DOI 10.1007/s10009-003-0121-x
   Stern U., 1992, P INT C COMP AID VER, P172
   Sülflow A, 2009, DES AUT TEST EUROPE, P1326
   Tarjan R., 1973, SIAM Journal on Computing, V2, P211, DOI 10.1137/0202017
   TIERNAN JC, 1970, COMMUN ACM, V13, P722, DOI 10.1145/362814.362819
   WEINBLATT H, 1972, J ACM, V19, P43, DOI 10.1145/321679.321684
   Yamada T, 2002, DISCRETE APPL MATH, V118, P279, DOI 10.1016/S0166-218X(01)00201-3
NR 36
TC 1
Z9 1
U1 0
U2 13
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD AUG
PY 2015
VL 41
IS 8
BP 730
EP 744
DI 10.1109/TSE.2015.2411284
PG 15
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA CP0KI
UT WOS:000359563800001
OA Green Published
DA 2024-07-18
ER

PT J
AU Zhou, MH
   Mockus, A
AF Zhou, Minghui
   Mockus, Audris
TI Who Will Stay in the FLOSS Community? Modeling Participant's Initial
   Behavior
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Long term contributor; open source software; issue tracking system;
   mining software repository; extent of involvement; interaction with
   environment; initial behavior
ID OPEN SOURCE SOFTWARE; PERSON-ORGANIZATION FIT; DEVELOPERS; METAANALYSIS;
   PERFORMANCE; MOTIVATION; GOVERNANCE; INNOVATION; EMERGENCE; IMPACT
AB Motivation: To survive and succeed, FLOSS projects need contributors able to accomplish critical project tasks. However, such tasks require extensive project experience of long term contributors (LTCs). Aim: We measure, understand, and predict how the newcomers' involvement and environment in the issue tracking system (ITS) affect their odds of becoming an LTC. Method: ITS data of Mozilla and Gnome, literature, interviews, and online documents were used to design measures of involvement and environment. A logistic regression model was used to explain and predict contributor's odds of becoming an LTC. We also reproduced the results on new data provided by Mozilla. Results: We constructed nine measures of involvement and environment based on events recorded in an ITS. Macro-climate is the overall project environment while micro-climate is person-specific and varies among the participants. Newcomers who are able to get at least one issue reported in the first month to be fixed, doubled their odds of becoming an LTC. The macro-climate with high project popularity and the micro-climate with low attention from peers reduced the odds. The precision of LTC prediction was 38 times higher than for a random predictor. We were able to reproduce the results with new Mozilla data without losing the significance or predictive power of the previously published model. We encountered unexpected changes in some attributes and suggest ways to make analysis of ITS data more reproducible. Conclusions: The findings suggest the importance of initial behaviors and experiences of new participants and outline empirically-based approaches to help the communities with the recruitment of contributors for long-term participation and to help the participants contribute more effectively. To facilitate the reproduction of the study and of the proposed measures in other contexts, we provide the data we retrieved and the scripts we wrote at https://www.passion-lab.org/projects/developerfluency.html.
C1 [Zhou, Minghui] Peking Univ, Sch Elect Engn & Comp Sci, Beijing 100871, Peoples R China.
   [Zhou, Minghui] Minist Educ, Key Lab High Confidence Software Technol, Beijing 100871, Peoples R China.
   [Mockus, Audris] Univ Tennessee, Dept Elect Engn & Comp Sci, Knoxville, TN 37996 USA.
C3 Peking University; University of Tennessee System; University of
   Tennessee Knoxville
RP Zhou, MH (corresponding author), Peking Univ, Sch Elect Engn & Comp Sci, Beijing 100871, Peoples R China.
EM zhmh@pku.edu.cn; audris@utk.edu
RI Mockus, Audris/AEY-3361-2022
FU National Basic Research Program of China [2015CB352200]; National
   Natural Science Foundation of China [91118004, 61432001]; National
   Hi-Tech Research and Development Program of China (863) Grant
   [2012AA011202]
FX Partial support by the National Basic Research Program of China Grant
   2015CB352200, the National Natural Science Foundation of China Grants
   91118004 and 61432001, and the National Hi-Tech Research and Development
   Program of China (863) Grant 2012AA011202. The authors thank Andre
   Klapper, Johannes Schmid, David Boswell, Thomas Dullmann, Enrico
   Nicoletto, Andrey Bondarenko, and many others who participated in this
   study. They thank the reviewers for their many valuable suggestions that
   greatly improved the paper.
CR Anda BCD, 2009, IEEE T SOFTWARE ENG, V35, P407, DOI 10.1109/TSE.2008.89
   Anvik J, 2011, ACM T SOFTW ENG METH, V20, DOI 10.1145/2000791.2000794
   Blumberg M., 1982, ACAD MANAGE REV, V7, P560, DOI [10.5465/amr.1982.4285240, DOI 10.5465/AMR.1982.4285240]
   Boh WF, 2007, MANAGE SCI, V53, P1315, DOI 10.1287/mnsc.1060.0687
   Daniel S., 2011, INT C INF SYST SHANG, P7
   Dillman DA., 2009, INTERNET MAIL MIXED
   Ducheneaut N., 2005, Computer Supported Cooperative Work: The Journal of Collaborative Computing, V14, P323, DOI 10.1007/s10606-005-9000-1
   Ehrlich Kate, 2012, Proceedings of the ACM 2012 Conference on Computer Supported Cooperative Work, CSCW '12, P945
   ERICSSON KA, 1993, PSYCHOL REV, V100, P363, DOI 10.1037/0033-295X.100.3.363
   German D. M., 2003, Software Process Improvement and Practice, V8, P201, DOI 10.1002/spip.189
   Hahn J, 2008, INFORM SYST RES, V19, P369, DOI 10.1287/isre.1080.0192
   Hertel G, 2003, RES POLICY, V32, P1159, DOI 10.1016/S0048-7333(03)00047-7
   Hoffman BJ, 2006, J VOCAT BEHAV, V68, P389, DOI 10.1016/j.jvb.2005.08.003
   Ioannidis JPA, 2005, PLOS MED, V2, P696, DOI 10.1371/journal.pmed.0020124
   Jialiang Xie, 2013, 2013 ACM / IEEE International Symposium on Empirical Software Engineering and Measurement (ESEM), P247, DOI 10.1109/ESEM.2013.62
   Johnson VE, 2013, P NATL ACAD SCI USA, V110, P19313, DOI 10.1073/pnas.1313476110
   Joon Koh, 2007, Communications of the ACM, V50, P68, DOI 10.1145/1216016.1216023
   Ko AJ, 2007, PROC INT CONF SOFTW, P344
   Kraut RE, 2011, BUILDING SUCCESSFUL ONLINE COMMUNITIES: EVIDENCE-BASED SOCIAL DESIGN, P1
   Kristof-Brown AL, 2005, PERS PSYCHOL, V58, P281, DOI 10.1111/j.1744-6570.2005.00672.x
   Lakhani K., 2005, Why hackers do what they do: Understanding motivation and effort in free/open source software projects
   Lakhani KR, 2003, RES POLICY, V32, P923, DOI 10.1016/S0048-7333(02)00095-1
   Lohr S.L., 2010, Sampling: Design and Analysis, VSecond
   Mockus A, 2002, ACM T SOFTW ENG METH, V11, P309, DOI 10.1145/567793.567795
   Mockus A., 2014, P FUT SOFTW ENG HYD
   Mockus A, 2007, LECT NOTES COMPUT SC, V4336, P91
   Mockus A, 2009, PROC INT CONF SOFTW, P67, DOI 10.1109/ICSE.2009.5070509
   Nakakoji Kumiyo, 2002, P INT WORKSHOP PRINC, P76, DOI DOI 10.1145/512035.512055
   O'Mahony S, 2007, ACAD MANAGE J, V50, P1079
   Pournelle G. H., 1953, Journal of Mammalogy, V34, P133, DOI 10.1890/0012-9658(2002)083[1421:SDEOLC]2.0.CO;2
   RASCH RH, 1992, MIS QUART, V16, P395, DOI 10.2307/249535
   REIS C.R., 2002, P OPEN SOURCE SOFTWA, P155
   Roberts JA, 2006, MANAGE SCI, V52, P984, DOI 10.1287/mnsc.1060.0554
   Scacchi W., 2002, IEE Proceedings-Software, V149, P24, DOI 10.1049/ip-sen:20020202
   Schmidt K., 1996, Computer Supported Cooperative Work (CSCW), V5, P155, DOI 10.1007/BF00133655
   Shah SK, 2006, MANAGE SCI, V52, P1000, DOI 10.1287/mnsc.1060.0553
   Steinmacher I, 2013, 2013 6TH INTERNATIONAL WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING (CHASE), P25, DOI 10.1109/CHASE.2013.6614728
   Stewart KJ, 2006, MIS QUART, V30, P291
   Tourangeau R, 2000, PSYCHOL SURVEY RESPO
   Verquer ML, 2003, J VOCAT BEHAV, V63, P473, DOI 10.1016/S0001-8791(02)00036-2
   von Hippel E, 2003, ORGAN SCI, V14, P209, DOI 10.1287/orsc.14.2.209.14992
   von Krogh G, 2003, RES POLICY, V32, P1217, DOI 10.1016/S0048-7333(03)00050-7
   Wagstrom P., 2009, THESIS CARNEGIE MELL
   Xie JL, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE COMPANION 2014), P556, DOI 10.1145/2591062.2591073
   Zanetti M. S., 2013, ABS13027191 CORR
   Zhou MH, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P271, DOI 10.1145/1985793.1985831
   Zhou Minghui, 2010, P 18 ACM SIGSOFT INT, P137, DOI DOI 10.1145/1882291.1882313
NR 47
TC 78
Z9 92
U1 1
U2 18
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JAN
PY 2015
VL 41
IS 1
BP 82
EP 99
DI 10.1109/TSE.2014.2349496
PG 18
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA AY8EZ
UT WOS:000347788400006
OA Bronze
DA 2024-07-18
ER

PT J
AU Lin, CT
   Li, YF
AF Lin, Chu-Ti
   Li, Yan-Fu
TI Rate-Based Queueing Simulation Model of Open Source Software Debugging
   Activities
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Queueing theory; rate-based simulation; open source software (OSS); bug
   reporting; report judgment; bug fixing; optimal version-updating time;
   non-homogeneous continuous time Markov chain (NHCTMC); multi-attribute
   utility theory (MAUT)
ID RELIABILITY-ANALYSIS; MAINTENANCE; PREDICTION; FAILURES; QUALITY; TIME
AB Open source software (OSS) approach has become increasingly prevalent for software development. As the widespread utilization of OSS, the reliability of OSS products becomes an important issue. By simulating the testing and debugging processes of software life cycle, the rate-based queueing simulation model has shown its feasibility for closed source software (CSS) reliability assessment. However, the debugging activities of OSS projects are different in many ways from those of CSS projects and thus the simulation approach needs to be calibrated for OSS projects. In this paper, we first characterize the debugging activities of OSS projects. Based on this, we propose a new rate-based queueing simulation framework for OSS reliability assessment including the model and the procedures. Then a decision model is developed to determine the optimal version-updating time with respect to two objectives: minimizing the time for version update, and maximizing OSS reliability. To illustrate the proposed framework, three real datasets from Apache and GNOME projects are used. The empirical results indicate that our framework is able to effectively approximate the real scenarios. Moreover, the influences of the core contributor staffing levels are analyzed and the optimal version-updating times are obtained.
C1 [Lin, Chu-Ti] Natl Chiayi Univ, Dept Comp Sci & Informat Engn, Chiayi, Taiwan.
   [Li, Yan-Fu] Ecole Cent Paris, Lab Ind Engn, Paris, France.
C3 National Chiayi University; Universite Paris Saclay
RP Lin, CT (corresponding author), Natl Chiayi Univ, Dept Comp Sci & Informat Engn, Chiayi, Taiwan.
EM chutilin@mail.ncyu.edu.tw; yanfu.li@ecp.fr
RI Li, Yan-Fu/B-6610-2014; Keung, Jacky/ABA-7089-2020
OI Li, Yan-Fu/0000-0001-5755-7115; 
FU National Science Council, Taiwan [NSC 100-2221-E-415-007-MY2, NSC
   102-2221-E-415-009]
FX This work was supported in part by the National Science Council, Taiwan,
   under Grants NSC 100-2221-E-415-007-MY2 and NSC 102-2221-E-415-009.
CR Duc AN, 2011, IFIP ADV INF COMM TE, V365, P1
   [Anonymous], NASA OP SOURC SOFTW
   [Anonymous], FORRESTER OPEN SOURC
   [Anonymous], 1996, HDB SOFTWARE RELIABI
   [Anonymous], AP 2 REL HIST
   [Anonymous], P 29 INT C SOFTW ENG
   [Anonymous], REL ENG SYST SAFETY
   [Anonymous], 2013, FREE OPEN SOURCE SOF
   [Anonymous], RAT ECL ENT DEV ENV
   Cai KY, 2008, INFORM SOFTWARE TECH, V50, P1232, DOI 10.1016/j.infsof.2007.12.001
   Capra E, 2011, J SYST SOFTWARE, V84, P144, DOI 10.1016/j.jss.2010.09.004
   Dai YS, 2005, IEEE T RELIAB, V54, P100, DOI 10.1109/TR.2004.841709
   Fishburn P.C., 1970, Utility theory for decision making: Technical report
   Gokhale SS, 2005, IEEE T SOFTWARE ENG, V31, P643, DOI 10.1109/TSE.2005.86
   Gokhale SS, 2006, IEEE T RELIAB, V55, P281, DOI 10.1109/TR.2006.874911
   Goseva-Popstojanova K, 2000, IEEE T RELIAB, V49, P37, DOI 10.1109/24.855535
   Hu QP, 2007, RELIAB ENG SYST SAFE, V92, P332, DOI 10.1016/j.ress.2006.04.007
   Huang CY, 2006, IEEE T RELIAB, V55, P436, DOI 10.1109/TR.2006.879607
   Huang CY, 2010, IEEE T COMPUT, V59, P283, DOI 10.1109/TC.2009.103
   KARUNANITHI N, 1992, IEEE T SOFTWARE ENG, V18, P563, DOI 10.1109/32.148475
   Keeney R. L., 1976, DECISION MULTIPLE OB
   Kemerer CF, 1999, IEEE T SOFTWARE ENG, V25, P493, DOI 10.1109/32.799945
   Li X, 2011, INFORM SOFTWARE TECH, V53, P929, DOI 10.1016/j.infsof.2011.04.005
   Li YF, 2009, J SYST SOFTWARE, V82, P241, DOI 10.1016/j.jss.2008.06.001
   Lin CT, 2012, APPL MATH COMPUT, V219, P2478, DOI 10.1016/j.amc.2012.08.083
   Lin CT, 2011, MATH COMPUT MODEL, V54, P3046, DOI 10.1016/j.mcm.2011.07.033
   Lin CT, 2009, IEEE T RELIAB, V58, P711, DOI 10.1109/TR.2009.2019669
   Midha V, 2012, DECIS SUPPORT SYST, V54, P23, DOI 10.1016/j.dss.2012.03.002
   Mockus A, 2002, ACM T SOFTW ENG METH, V11, P309, DOI 10.1145/567793.567795
   Musa J. D., 1987, Software Reliability: Measure-ment, Prediction, Application
   Pham H., 2000, SOFTWARE RELIABILITY
   Rahmani Cobra, 2010, Journal of Software, V5, P1384, DOI 10.4304/jsw.5.12.1384-1394
   Raymond Eric Steven, 2001, The Cathedral and the Bazaar: Musings on Linux and Open Source by an Accidental Revolutionary
   Rossi B, 2010, IFIP ADV INF COMM TE, V319, P268
   Samoladas I, 2010, INFORM SOFTWARE TECH, V52, P902, DOI 10.1016/j.infsof.2010.05.001
   Scacchi W., 2006, Software Process Improvement and Practice, V11, P95, DOI 10.1002/spip.255
   Schneidewind NF, 2002, PROC IEEE INT CONF S, P238, DOI 10.1109/ICSM.2002.1167772
   Scholz R., 2002, Embedded case study methods: Integrating quantitative and qualitative knowledge
   Shepperd M, 1997, IEEE T SOFTWARE ENG, V23, P736, DOI 10.1109/32.637387
   Smith N., 2006, Software Process Improvement and Practice, V11, P423, DOI 10.1002/spip.280
   Stamelos I, 2002, INFORM SYST J, V12, P43, DOI 10.1046/j.1365-2575.2002.00117.x
   Tamura Y, 2008, INT J RELIAB QUAL SA, V15, P33, DOI 10.1142/S0218539308002915
   Tamura Y, 2009, INT J SYST SCI, V40, P429, DOI 10.1080/00207720802556245
   Tausworthe RC, 1996, IEEE SOFTWARE, V13, P77, DOI 10.1109/52.506464
   TOMEK LA, 1993, IEEE T SOFTWARE ENG, V19, P1071, DOI 10.1109/32.256854
   Turnu I, 2006, J SYST ARCHITECT, V52, P610, DOI 10.1016/j.sysarc.2006.06.005
   von Winterfeldt D., 1986, Decision analysis and behavioral research
   Xie M, 2003, IEEE T SOFTWARE ENG, V29, P471, DOI 10.1109/TSE.2003.1199075
   Xie M., 1991, SOFTWARE RELIABILITY
   Yu LG, 2006, J SOFTW MAINT EVOL-R, V18, P311, DOI 10.1002/smr.335
NR 50
TC 18
Z9 18
U1 0
U2 21
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD NOV
PY 2014
VL 40
IS 11
BP 1075
EP 1099
DI 10.1109/TSE.2014.2354032
PG 25
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA AW4AO
UT WOS:000346224200003
DA 2024-07-18
ER

PT J
AU Littlewood, B
   Povyakalo, A
AF Littlewood, Bev
   Povyakalo, Andrey
TI Conservative Bounds for the <i>pfd</i> of a 1-out-of-2 Software-Based
   System Based on an Assessor's Subjective Probability of "Not Worse Than
   Independence"
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE System reliability; software fault tolerance; 1-out-of-2 system;
   dependent failures; subjective probability
ID MULTIVERSION SOFTWARE; RELIABILITY
AB We consider the problem of assessing the reliability of a 1-out-of-2 software-based system, in which failures of the two channels cannot be assumed to be independent with certainty. An informal approach to this problem assesses the channel probabilities of failure on demand (pfds) conservatively, and then multiplies these together in the hope that the conservatism will be sufficient to overcome any possible dependence between the channel failures. Our intention here is to place this kind of reasoning on a formal footing. We introduce a notion of "not worse than independence" and assume that an assessor has a prior belief about this, expressed as a probability. We obtain a conservative prior system pfd, and show how a conservative posterior system pfd can be obtained following the observation of a number of demands without system failure. We present some illustrative numerical examples, discuss some of the difficulties involved in this way of reasoning, and suggest some avenues of future research.
C1 [Littlewood, Bev; Povyakalo, Andrey] City Univ London, Ctr Software Reliabil, London EC1V 0HB, England.
C3 City University London
RP Littlewood, B (corresponding author), City Univ London, Ctr Software Reliabil, London EC1V 0HB, England.
EM b.littlewood@csr.city.ac.uk; andrey@csr.city.ac.uk
FU Leverhulme Trust; DISPO project; C&I Nuclear Industry Forum (CINIF)
   Nuclear Research Programme by EDF Energy Limited; Nuclear
   Decommissioning Authority (Sellafield Ltd, Magnox Ltd.); AWE plc; Urenco
   UK Ltd; Horizon Nuclear Power; UnCoDe project; EPSRC [EP/E000517/1]
   Funding Source: UKRI
FX The authors would like to thank several colleagues for extensive
   discussions about the issues dealt with in this paper: Bob Jennings and
   Bob Yates from the Office of Nuclear Regulation; Silke Kuball from EDF;
   Peter Bishop, Lorenzo Strigini, and Robin Bloomfield from CSR. The
   authors would also like to thank the associate editor and three
   reviewers for extensive and helpful comments on an earlier version of
   the paper. Support for the work reported was provided by: the UnCoDe
   project, funded by the Leverhulme Trust; the DISPO project, funded under
   the C&I Nuclear Industry Forum (CINIF) Nuclear Research Programme by EDF
   Energy Limited, Nuclear Decommissioning Authority (Sellafield Ltd,
   Magnox Ltd.), AWE plc, Urenco UK Ltd, and Horizon Nuclear Power. The
   views expressed in this paper are those of the authors and do not
   necessarily represent the views of CINIF members. CINIF does not accept
   liability for any damage or loss incurred as a result of the information
   contained in this paper.
CR Bishop P, 2011, IEEE T SOFTWARE ENG, V37, P708, DOI 10.1109/TSE.2010.67
   BLOOMFIELD R, 2003, P INT C DEP SYST NET
   ECKHARDT DE, 1991, IEEE T SOFTWARE ENG, V17, P692, DOI 10.1109/32.83905
   ECKHARDT DE, 1985, IEEE T SOFTWARE ENG, V11, P1511, DOI 10.1109/TSE.1985.231895
   HSE, 2011, TECHNICAL REPORT
   Knight J.C., 1986, P 16 INT S FAULT TOL
   KNIGHT JC, 1986, IEEE T SOFTWARE ENG, V12, P96, DOI 10.1109/TSE.1986.6312924
   LITTLEWOOD B, 1989, IEEE T SOFTWARE ENG, V15, P1596, DOI 10.1109/32.58771
   Littlewood B, 1997, IEEE T SOFTWARE ENG, V23, P673, DOI 10.1109/32.637384
   Littlewood B, 2001, ACM COMPUT SURV, V33, P177, DOI 10.1145/384192.384195
   Littlewood B., 2000, TECHNICAL REPORT
   MAY J, 1995, SOFTWARE ENG J, V10, P206, DOI 10.1049/sej.1995.0026
   Povyakalo A., 2010, TECHNICAL REPORT
   Wood RT, 2010, NUREGCR7007
NR 14
TC 5
Z9 5
U1 0
U2 7
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD DEC
PY 2013
VL 39
IS 12
BP 1641
EP 1653
DI 10.1109/TSE.2013.31
PG 13
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 260PO
UT WOS:000327607000002
OA Green Submitted, Green Accepted
DA 2024-07-18
ER

PT J
AU Maras, J
   Stula, M
   Carlson, J
   Crnkovic, I
AF Maras, Josip
   Stula, Maja
   Carlson, Jan
   Crnkovic, Ivica
TI Identifying Code of Individual Features in Client-Side Web Applications
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Web applications; feature location; program slicing; code extraction
AB Web applications are one of today's fastest growing software systems. Structurally, they are composed of two parts: the server side, used for data access and business logic, and the client side, used as a user interface. In recent years, with developers building complex interfaces, the client side is playing an increasingly important role. Unfortunately, the techniques and tools used to support development are not as advanced as in other disciplines. From the user's perspective, the client side offers a number of features that are relatively easy to distinguish. However, the same cannot be said for their implementation details. This makes the understanding, maintenance, and reuse of code difficult. The goal of the work presented in this paper is to improve reusability, maintainability, and performance of client-side web applications by identifying the code that implements a particular feature. We have evaluated the approach based on three different experiments: extracting features, extracting library functionalities, and page optimization. The evaluation shows that the method is able to identify the implementation details of individual features, and that by extracting the identified code, a considerable reduction in code size and increase in performance can be achieved.
C1 [Maras, Josip; Stula, Maja] Univ Split, Fac Elect Engn Mech Engn & Naval Architecture, Split 21000, Croatia.
   [Carlson, Jan; Crnkovic, Ivica] Malardalen Univ, S-72123 Vasteras, Sweden.
C3 University of Split; Malardalen University
RP Maras, J (corresponding author), Univ Split, Fac Elect Engn Mech Engn & Naval Architecture, Rudera Boskovica 32, Split 21000, Croatia.
EM josip.maras@fesb.hr; maja.stula@fesb.hr; jan.carlson@mdh.se;
   ivica.crnkovic@mdh.se
RI Stula, Maja/E-4824-2017; Carlson, Jan/D-4717-2012
OI Stula, Maja/0000-0003-3954-7049; Ivica, Crnkovic/0000-0002-5278-755X;
   Carlson, Jan/0000-0002-8461-0230
CR AGRAWAL H, 1990, SIGPLAN NOTICES, V25, P246, DOI 10.1145/93548.93576
   [Anonymous], THESIS U CALGARY
   [Anonymous], MSRTR201266
   [Anonymous], 2012, XMLHttpRequest
   [Anonymous], P INT C SOFTW ENG IC
   [Anonymous], P WORLD WID WEB C
   [Anonymous], P 18 IEEE INT C PROG
   [Anonymous], TR1218 DEP COMP SCI
   [Anonymous], P 19 ACM SIGSOFT S 1
   [Anonymous], 2008, IEEE Std, DOI [DOI 10.1109/IEEESTD.2008.4578383, 10.1109/IEEESTD.2008.4578383]
   [Anonymous], QUANTIFYING RELATION
   [Anonymous], 2008, Proceedings of the 4th International Workshop on End-user Software Engineering, DOI [DOI 10.1145/1370847.1370848, 10.1145/1370847.1370848]
   [Anonymous], P INT C WEB ENG ICWE
   Artzi S, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P571, DOI 10.1145/1985793.1985871
   BIGGERSTAFF TJ, 1993, PROC INT CONF SOFTW, P482, DOI 10.1109/ICSE.1993.346017
   Coffey J., 2010, Proceedings 2010 8th IEEE European Conference on Web Services (ECOWS 2010), P99, DOI 10.1109/ECOWS.2010.28
   Dit B, 2013, J SOFTW-EVOL PROC, V25, P53, DOI 10.1002/smr.567
   Eisenbarth T, 2003, IEEE T SOFTWARE ENG, V29, P210, DOI 10.1109/TSE.2003.1183929
   HORWITZ S, 1988, SIGPLAN NOTICES, V23, P35
   HORWITZ S, 1989, ACM T PROGR LANG SYS, V11, P345, DOI 10.1145/65979.65980
   Kapser C, 2006, WORK CONF REVERSE EN, P19
   Li P, 2009, LECT NOTES COMPUT SC, V5648, P260
   Livshits Benjamin., 2008, Proceedings of the 16th Symposium on Foun- dations of Software Engineering (FSE), P350
   Marchetto A, 2012, IET SOFTW, V6, P33, DOI 10.1049/iet-sen.2010.0152
   Marchetto A, 2011, EMPIR SOFTW ENG, V16, P103, DOI 10.1007/s10664-010-9149-1
   Mesbah A, 2012, IEEE T SOFTWARE ENG, V38, P35, DOI 10.1109/TSE.2011.28
   Oney S, 2009, S VIS LANG HUM CEN C, P105, DOI 10.1109/VLHCC.2009.5295287
   Poshyvanyk D, 2007, IEEE T SOFTWARE ENG, V33, P420, DOI [10.1109/TSE.2007.1016, 10.1109/TSE.2007.1016.]
   Rajlich V, 2002, PROG COMPREHEN, P271, DOI 10.1109/WPC.2002.1021348
   Saxena P, 2010, P IEEE S SECUR PRIV, P513, DOI 10.1109/SP.2010.38
   Tonella P., 2005, Automated Software Engineering, V12, P259, DOI 10.1007/s10515-005-6208-8
   Weiser M., 1981, 5th International Conference on Software Engineering, P439
   WILDE N, 1995, J SOFTW MAINT-RES PR, V7, P49, DOI 10.1002/smr.4360070105
NR 33
TC 13
Z9 15
U1 0
U2 15
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD DEC
PY 2013
VL 39
IS 12
BP 1680
EP 1697
DI 10.1109/TSE.2013.38
PG 18
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 260PO
UT WOS:000327607000004
DA 2024-07-18
ER

PT J
AU Andrade, WL
   Machado, PDL
AF Andrade, Wilkerson L.
   Machado, Patricia D. L.
TI Generating Test Cases for Real-Time Systems Based on Symbolic Models
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Real-time systems and embedded systems; formal methods; symbolic
   execution; testing strategies
ID INTERRUPTIONS; CHECKING
AB The state space explosion problem is one of the challenges to be faced by test case generation techniques, particularly when data values need to be enumerated. This problem gets even worse for real-time systems (RTS) that also have time constraints. The usual solution in this context, based on finite state machines or time automata, consists of enumerating data values (restricted to finite domains) while treating time symbolically. In this paper, a symbolic model for conformance testing of real-time systems software named TIOSTS that addresses both data and time symbolically is presented. Moreover, a test case generation process is defined to select more general test cases with variables and parameters that can be instantiated at testing execution time. Generation is based on a combination of symbolic execution and constraint solving for the data part and symbolic analysis for timed aspects. Furthermore, the practical application of the process is investigated through a case study.
C1 [Andrade, Wilkerson L.; Machado, Patricia D. L.] Bairro Univ, Fed Univ Campina Grande UFCG, BR-58429900 Campina Grande, PB, Brazil.
RP Andrade, WL (corresponding author), Bairro Univ, Fed Univ Campina Grande UFCG, Rua Aprigio Veloso 882, BR-58429900 Campina Grande, PB, Brazil.
EM wilkerson@computacao.ufcg.edu.br; patricia@computacao.ufcg.edu.br
RI Machado, Patricia/B-5346-2009
OI Machado, Patricia/0000-0002-0661-0067; L. Andrade,
   Wilkerson/0000-0003-0656-6139
FU INRIA (Equipe Associee TReaTiES); National Institute of Science and
   Technology for Software Engineering (INES); CNPq [573964/2008-4]
FX This work was a part of an international cooperation supported by INRIA
   (Equipe Associee TReaTiES). This work was supported by the National
   Institute of Science and Technology for Software Engineering
   (INES-http://www.ines.org.br), funded by CNPq, grant 573964/2008-4.
CR ALUR R, 1994, THEOR COMPUT SCI, V126, P183, DOI 10.1016/0304-3975(94)90010-8
   Andrade W. L., 2011, 2011 IEEE Fourth International Conference on Software Testing, Verification and Validation Workshops (ICSTW), P9, DOI 10.1109/ICSTW.2011.82
   Andrade W.L., 2008, P 2 BRAZ WORKSH SYST, P34
   Andrade W.L., 2011, THESIS FED U CAMPINA
   Andrade WL, 2012, FORM ASP COMPUT, V24, P331, DOI 10.1007/s00165-011-0197-0
   Andrade WL, 2009, LECT NOTES COMPUT SC, V5902, P54, DOI 10.1007/978-3-642-10452-7_5
   Bertrand N, 2011, LECT NOTES COMPUT SC, V6605, P96, DOI 10.1007/978-3-642-19835-9_10
   Bornot S., 1998, P INT C COMP SIGN DI, P264
   Cardell-Oliver R., 2000, Formal Aspects of Computing, V12, P350, DOI 10.1007/s001650070009
   Clarke L. A., 1976, IEEE Transactions on Software Engineering, VSE-2, P215, DOI 10.1109/TSE.1976.233817
   Ehlers R, 2010, REAL TIM SYST SYMP P, P360, DOI 10.1109/RTSS.2010.36
   En-Nouaary A, 2002, IEEE T SOFTWARE ENG, V28, P1023, DOI 10.1109/TSE.2002.1049402
   Frantzen L, 2006, LECT NOTES COMPUT SC, V4262, P40
   Gaston C, 2006, LECT NOTES COMPUT SC, V3964, P1
   Hessel A, 2004, LECT NOTES COMPUT SC, V2931, P114
   Jard C., 2005, International Journal on Software Tools for Technology Transfer, V7, P297, DOI 10.1007/s10009-004-0153-x
   Jeannet B, 2005, LECT NOTES COMPUT SC, V3440, P349
   Jéron T, 2006, INT FED INFO PROC, V209, P197
   Jobstl Elisabeth, 2010, Proceedings of the Third IEEE International Conference on Software Testing, Verification and Validation (ICST 2010), P479, DOI 10.1109/ICST.2010.48
   King J. C., 1975, Programming Methodology, P278, DOI 10.1145/390016.808444
   Krichen M, 2009, FORM METHOD SYST DES, V34, P238, DOI 10.1007/s10703-009-0065-1
   Larsen K. G., 1997, International Journal on Software Tools for Technology Transfer, V1, P134, DOI 10.1007/s100090050010
   Larsen KG, 2005, LECT NOTES COMPUT SC, V3395, P79
   Lestiennes G, 2002, 13TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P3, DOI 10.1109/ISSRE.2002.1173206
   Li SH, 2004, 11TH ASIA-PACIFIC SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P358
   Macedo A.Q., 2010, P 4 IEEE INT C SOFTW, P37
   Merayo MG, 2008, IEEE T COMPUT, V57, P835, DOI 10.1109/TC.2008.15
   Nguena-Timo O., 2011, 2011 IEEE Fourth International Conference on Software Testing, Verification and Validation Workshops (ICSTW), P1, DOI 10.1109/ICSTW.2011.71
   Rusu V, 2000, LECT NOTES COMPUT SC, V1945, P338
   Seshia SA, 2003, LECT NOTES COMPUT SC, V2725, P154
   Sommerville I., 2010, SOFTWARE ENG
   Takaki M, 2010, INNOV SYST SOFTW ENG, V6, P243, DOI 10.1007/s11334-010-0124-1
   Timo Omer Nguena, 2010, 2010 8th IEEE International Workshop on Factory Communication Systems (WFCS 2010), P241, DOI 10.1109/WFCS.2010.5548628
   Timo O.N., 2010, P 4 IEEE INT C SOFTW, P25
   Tretmans J, 1999, LECT NOTES COMPUT SC, V1664, P46
   von Styp S, 2010, LECT NOTES COMPUT SC, V6246, P243, DOI 10.1007/978-3-642-15297-9_19
NR 36
TC 7
Z9 7
U1 0
U2 21
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD SEP
PY 2013
VL 39
IS 9
BP 1216
EP 1229
DI 10.1109/TSE.2013.13
PG 14
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 207ZG
UT WOS:000323643000004
DA 2024-07-18
ER

PT J
AU Janevski, N
   Goseva-Popstojanova, K
AF Janevski, Nikola
   Goseva-Popstojanova, Katerina
TI Session Reliability of Web Systems under Heavy-Tailed Workloads: An
   Approach Based on Design and Analysis of Experiments
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Reliability; statistical methods; modeling and prediction; simulation;
   web servers; Internet applications
ID SOFTWARE; AVAILABILITY; PERFORMANCE; PREDICTION
AB While workload characterization and performance of web systems have been studied extensively, reliability has received much less attention. In this paper, we propose a framework for session reliability modeling which integrates the user view represented by the session layer and the system view represented by the service layer. A unique characteristic of the session layer is that, in addition to the user navigation patterns, it incorporates the session length in number of requests and allows us to account for heavy-tailed workloads shown to exist in real web systems. The service layer is focused on the request reliability as it is observed at the service provider side. It considers the multitier web server architecture and the way components interact in serving each request. Within this framework, we develop a session reliability model and solve it using simulation. Instead of the traditional one-factor-at-a-time sensitivity analysis, we use statistical design and analysis of experiments, which allow us to identify the factors and interactions that have statistically significant effect on session reliability. Our findings indicate that session reliability, which accounts for the distribution of failed requests within sessions, provides better representation of the user perceived quality than the request-based reliability.
C1 [Janevski, Nikola; Goseva-Popstojanova, Katerina] W Virginia Univ, Lane Dept Comp Sci & Elect Engn, POB 6109, Morgantown, WV 26506 USA.
C3 West Virginia University
RP Janevski, N (corresponding author), W Virginia Univ, Lane Dept Comp Sci & Elect Engn, POB 6109, Morgantown, WV 26506 USA.
EM njanevsk@mix.wvu.edu; katerina.goseva@mail.wvu.edu
OI Goseva-Popstojanova, Katerina/0000-0003-4683-672X
FU US National Science Foundation [CNS-0447715, CCF-0916284]
FX This work was funded in part by the US National Science Foundation under
   the grants CNS-0447715 and CCF-0916284. The authors thank the associate
   editor and the anonymous referees for their comments which contributed
   toward improving the paper.
CR [Anonymous], 2010, SAS ETS R 9 22 US GU
   Banerjee Sean, 2010, Proceedings of the 2010 IEEE 21st International Symposium on Software Reliability Engineering (ISSRE 2010), P239, DOI 10.1109/ISSRE.2010.46
   Boston Consulting Group, 2002, TECHNICAL REPORT
   Box G.E. P., 1978, The Design and Analysis of Industrial Experiments
   Brosch F, 2010, LECT NOTES COMPUT SC, V6093, P36, DOI 10.1007/978-3-642-13821-8_5
   Brunner E, 1997, J AM STAT ASSOC, V92, P1494, DOI 10.2307/2965420
   Casale G, 2012, IEEE T SOFTWARE ENG, V38, P778, DOI 10.1109/TSE.2011.58
   Cheung L, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P111, DOI 10.1145/1368088.1368104
   CHEUNG RC, 1980, IEEE T SOFTWARE ENG, V6, P118, DOI 10.1109/TSE.1980.234477
   Cortellessa V, 2007, LECT NOTES COMPUT SC, V4608, P140
   Datla V, 2005, INT CONF E BUS ENG, P305, DOI 10.1109/ICEBE.2005.85
   Filieri A, 2010, LECT NOTES COMPUT SC, V6092, P1, DOI 10.1007/978-3-642-13238-4_1
   Gokhale SS, 2005, INT J RELIAB QUAL SA, V12, P267, DOI 10.1142/S0218539305001768
   Gokhale SS, 2006, P INT COMP SOFTW APP, P495
   Goseva-Popstojanova K, 2006, EMPIR SOFTW ENG, V11, P71, DOI 10.1007/s10664-006-5966-7
   Goseva-Popstojanova K, 2004, 15TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P403, DOI 10.1109/ISSRE.2004.19
   Goseva-Popstojanova K, 2003, IEEE T SOFTWARE ENG, V29, P946, DOI 10.1109/TSE.2003.1237174
   Goseva-Popstojanova K, 2001, 12TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P22, DOI 10.1109/ISSRE.2001.989455
   Goseva-Popstojanova K, 2001, PERFORM EVALUATION, V45, P179, DOI 10.1016/S0166-5316(01)00034-7
   Goseva-Popstojanova K, 2006, ISSRE 2006:17TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P197
   Goseva-Popstojanova K, 2006, I C DEPEND SYS NETWO, P505, DOI 10.1109/DSN.2006.2
   Goseva-Popstojanova K, 2005, 16TH IEEE INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P43, DOI 10.1109/ISSRE.2005.25
   Haverkort B.R., 2001, Performability modelling: techniques and tools
   HILL BM, 1975, ANN STAT, V3, P1163, DOI 10.1214/aos/1176343247
   Immonen A, 2008, SOFTW SYST MODEL, V7, P49, DOI 10.1007/s10270-006-0040-x
   Janevski N., 2012, P IEEE INT C COMM, P1451
   Johnson N.L., 1971, Continuous univariate distributions-1. Distributions in statistics
   Kaâniche M, 2003, 2003 INTERNATIONAL CONFERENCE ON DEPENDABLE SYSTEMS AND NETWORKS, PROCEEDINGS, P709
   Kaâniche M, 2001, IEEE IC COMP COM NET, P40, DOI 10.1109/ICCCN.2001.956217
   Kallepalli C, 2001, IEEE T SOFTWARE ENG, V27, P1023, DOI 10.1109/32.965342
   Koziolek H., 2010, P 21 IEEE INT S SOFT, P259
   Krishnamurthy D, 2011, IEEE T SOFTWARE ENG, V37, P718, DOI 10.1109/TSE.2011.65
   Li Z., 2003, P 27 ANN INT COMP SO
   Mason R.L., 2003, STAT DESIGN ANAL EXP, V2nd
   Menasce D., 2000, EC'00. Proceedings of the 2nd ACM Conference on Electronic Commerce, P56, DOI 10.1145/352871.352878
   Menasce D.A., 2000, SCALING E BUSINESS T
   Menasce D.A., 2002, CAPACITY PLANNING WE
   Menascé DA, 2000, PERFORM EVALUATION, V42, P223, DOI 10.1016/S0166-5316(00)00034-1
   Menascé DA, 2002, IEEE INTERNET COMPUT, V6, P83, DOI 10.1109/MIC.2002.1003136
   Merzbacher M, 2002, INTERNATIONAL CONFERENCE ON DEPENDABLE SYSTEMS AND NETWORKS, PROCEEDINGS, P473, DOI 10.1109/DSN.2002.1028932
   Montgomery DC., 2001, Design and Analysis of Experiments
   Popic P., 2005, P 16 INT S SOFTW REL
   Pournelle G. H., 1953, Journal of Mammalogy, V34, P133, DOI 10.1890/0012-9658(2002)083[1421:SDEOLC]2.0.CO;2
   Reussner RH, 2003, J SYST SOFTWARE, V66, P241, DOI 10.1016/S0164-1212(02)00080-8
   Roshandel R, 2007, LECT NOTES COMPUT SC, V4880, P108
   Ross S.M., 2002, Simulation
   Sato N, 2007, P IEEE I C SERV COMP, P114
   Schroeder B, 2006, USENIX ASSOCIATION PROCEEDINGS OF THE 3RD SYMPOSIUM ON NETWORKED SYSTEMS DESIGN & IMPLEMENTATION (NSDI 06), P239
   Tian J, 2004, IEEE T SOFTWARE ENG, V30, P754, DOI 10.1109/TSE.2004.87
   TPC-W Transactional Web Commerce Benchmark, 2002, TPC W T WEB COMM BEN
   Wang WL, 2006, J SYST SOFTWARE, V79, P132, DOI 10.1016/j.jss.2005.09.004
   Xie W, 2003, 2003 IEEE INTERNATIONAL CONFERENCE ON COMMUNICATIONS, VOLS 1-5, P1796
   Yacoub S, 2004, IEEE T RELIAB, V53, P465, DOI 10.1109/TR.2004.838034
   Zheng Zibin., 2010, P 32 ACMIEEE INT C S, V1, P35, DOI DOI 10.1145/1806799.1806809
   Zibin Zheng, 2010, 2010 IEEE International Conference on Web Services (ICWS), P83, DOI 10.1109/ICWS.2010.10
   2013, WEB SERVICES FAILURE
NR 56
TC 2
Z9 2
U1 0
U2 14
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD AUG
PY 2013
VL 39
IS 8
BP 1157
EP 1178
DI 10.1109/TSE.2013.3
PG 22
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 191BU
UT WOS:000322388400008
DA 2024-07-18
ER

PT J
AU Kitchenham, B
   Sjoberg, DIK
   Dybå, T
   Brereton, OP
   Budgen, D
   Höst, M
   Runeson, P
AF Kitchenham, Barbara
   Sjoberg, Dag I. K.
   Dyba, Tore
   Brereton, O. Pearl
   Budgen, David
   Host, Martin
   Runeson, Per
TI Trends in the Quality of Human-Centric Software Engineering
   Experiments-A Quasi-Experiment
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Quality evaluation; empirical studies; human-centric experiments;
   experimentation; software engineering
AB Context: Several text books and papers published between 2000 and 2002 have attempted to introduce experimental design and statistical methods to software engineers undertaking empirical studies. Objective: This paper investigates whether there has been an increase in the quality of human-centric experimental and quasi-experimental journal papers over the time period 1993 to 2010. Method: Seventy experimental and quasi-experimental papers published in four general software engineering journals in the years 1992-2002 and 2006-2010 were each assessed for quality by three empirical software engineering researchers using two quality assessment methods (a questionnaire-based method and a subjective overall assessment). Regression analysis was used to assess the relationship between paper quality and the year of publication, publication date group (before 2003 and after 2005), source journal, average coauthor experience, citation of statistical text books and papers, and paper length. The results were validated both by removing papers for which the quality score appeared unreliable and using an alternative quality measure. Results: Paper quality was significantly associated with year, citing general statistical texts, and paper length (p < 0.05). Paper length did not reach significance when quality was measured using an overall subjective assessment. Conclusions: The quality of experimental and quasi-experimental software engineering papers appears to have improved gradually since 1993.
C1 [Kitchenham, Barbara; Brereton, O. Pearl] Keele Univ, Sch Comp & Math, Keele ST5 5BG, Staffs, England.
   [Sjoberg, Dag I. K.] Univ Oslo, Dept Informat, NO-0316 Oslo, Norway.
   [Dyba, Tore] SINTEF, NO-7465 Trondheim, Norway.
   [Budgen, David] Univ Durham, Sci Labs, Sch Engn & Comp Sci, Durham DH1 3LE, England.
   [Host, Martin; Runeson, Per] Lund Univ, Dept Comp Sci, SE-22100 Lund, Sweden.
C3 Keele University; University of Oslo; SINTEF; Durham University; Lund
   University
RP Kitchenham, B (corresponding author), Keele Univ, Sch Comp & Math, Keele ST5 5BG, Staffs, England.
EM b.a.kitchenham@cs.keele.ac.uk; Dag.Sjoberg@ifi.uio.no;
   Tore.Dyba@sintef.no; o.p.brereton@keele.ac.uk;
   David.Budgen@durham.ac.uk; Martin.Host@cs.lth.se; Per.Runeson@cs.lth.se
RI Kitchenham, Barbara/AAL-4311-2020; Höst, Martin/KDN-4323-2024; Runeson,
   Per/H-5113-2019
OI Kitchenham, Barbara/0000-0002-6134-8460; Höst,
   Martin/0000-0002-9360-8693; Runeson, Per/0000-0003-2795-4851; Budgen,
   David/0000-0001-7143-0241
CR [Anonymous], 2000, READ PAPER BASICS EV
   Campbell, 2002, EXPT QUASIEXPERIMENT
   Campbell D.T., 1966, Experimental and quasi-experimental designs for research
   Cook T. D., 1979, Quasi-experimentation: Design analysis issues for field settings
   Crombie I., 1996, The Pocket Guide to Appraisal
   Dieste Oscar, 2007, 2007 First International Symposium on Empirical Software Engineering and Measurement, P215
   Dieste O, 2011, INT SYMP EMP SOFTWAR, P285, DOI 10.1109/ESEM.2011.37
   Dybå T, 2006, INFORM SOFTWARE TECH, V48, P745, DOI 10.1016/j.infsof.2005.08.009
   Fink A., 2005, CONDUCTING RES LIT R
   Fisher L. D., 1990, Statistical issues in drug research and development, P331, DOI DOI 10.1201/9780203738610
   Jedlitschka A., 2008, Guide to Advanced Empirical Software Engineering
   Jüni P, 1999, JAMA-J AM MED ASSOC, V282, P1054, DOI 10.1001/jama.282.11.1054
   Juristo J., 2001, BASICS SOFTWARE ENG
   KAMPENES VB, 2007, THESIS U OSLO
   Kampenes VB, 2007, INFORM SOFTWARE TECH, V49, P1073, DOI 10.1016/j.infsof.2007.02.015
   Kampenes VB, 2009, INFORM SOFTWARE TECH, V51, P71, DOI 10.1016/j.infsof.2008.04.006
   Kitchenham B.A., 2010, P C EMP SOFTW ENG ME
   Kitchenham BA, 2002, IEEE T SOFTWARE ENG, V28, P721, DOI 10.1109/TSE.2002.1027796
   Kitchenham BA, 2012, INFORM SOFTWARE TECH, V54, P804, DOI 10.1016/j.infsof.2011.11.008
   Liu H, 2008, J SYST SOFTWARE, V81, P222, DOI 10.1016/j.jss.2007.05.007
   Rosenberger William F., 1996, Pharmacoepidemiology and Drug Safety, V5, P95, DOI 10.1002/(SICI)1099-1557(199603)5:2<95::AID-PDS228>3.0.CO;2-4
   Rosnow R.L., 1997, People studying people: Artifacts and ethics in behavioral research
   SHROUT PE, 1979, PSYCHOL BULL, V86, P420, DOI 10.1037/0033-2909.86.2.420
   Singer J, 1999, P WORKSH EMP STUD SO, P71
   Sjoberg DIK, 2005, IEEE T SOFTWARE ENG, V31, P733, DOI 10.1109/TSE.2005.97
   Wagner AK, 2002, J CLIN PHARM THER, V27, P299, DOI 10.1046/j.1365-2710.2002.00430.x
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
   Wojcicki MA, 2007, EMPIR SOFTW ENG, V12, P617, DOI 10.1007/s10664-007-9044-6
NR 28
TC 13
Z9 14
U1 1
U2 13
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUL
PY 2013
VL 39
IS 7
BP 1002
EP 1017
DI 10.1109/TSE.2012.76
PG 16
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 174AO
UT WOS:000321125200007
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Yilmaz, C
AF Yilmaz, Cemal
TI Test Case-Aware Combinatorial Interaction Testing
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Software quality assurance; combinatorial interaction testing; covering
   arrays
ID TEST-GENERATION; ALGORITHM; COVERAGE
AB The configuration spaces of modern software systems are too large to test exhaustively. Combinatorial interaction testing (CIT) approaches, such as covering arrays, systematically sample the configuration space and test only the selected configurations by using a battery of test cases. Traditional covering arrays, while taking system-wide interoption constraints into account, do not provide a systematic way of handling test case-specific interoption constraints. The basic justification for t-way covering arrays is that they can cost effectively exercise all system behaviors caused by the settings of t or fewer options. In this paper, we hypothesize, however, that in the presence of test case-specific interoption constraints, many such behaviors may not be tested due to masking effects caused by the overlooked test case-specific constraints. For example, if a test case refuses to run in a configuration due to an unsatisfied test case-specific constraint, none of the valid option setting combinations appearing in the configuration will be tested by that test case. To account for test case-specific constraints, we introduce a new combinatorial object, called a test case-aware covering array. A t-way test case-aware covering array is not just a set of configurations, as is the case in traditional covering arrays, but a set of configurations, each of which is associated with a set of test cases such that all test case-specific constraints are satisfied and that, for each test case, each valid combination of option settings for every combination of t options appears at least once in the set of configurations that the test case is associated with. We furthermore present three algorithms to compute test case-aware covering arrays. Two of the algorithms aim to minimize the number of configurations required (one is fast, but produces larger arrays, the other is slower, but produces smaller arrays), whereas the remaining algorithm aims to minimize the number of test runs required. The results of our empirical studies conducted on two widely used highly configurable software systems suggest that test case-specific constraints do exist in practice, that traditional covering arrays suffer from masking effects caused by ignorance of such constraints, and that test case-aware covering arrays are better than other approaches in handling test case-specific constraints, thus avoiding masking effects.
C1 Sabanci Univ, Fac Engn & Nat Sci, TR-34956 Istanbul, Turkey.
C3 Sabanci University
RP Yilmaz, C (corresponding author), Sabanci Univ, Fac Engn & Nat Sci, TR-34956 Istanbul, Turkey.
EM cyilmaz@sabanciuniv.edu
RI Yilmaz, Cemal/AAY-4500-2020
OI Yilmaz, Cemal/0000-0003-4124-2295
FU European Community; Scientific and Technological Research Council of
   Turkey [109E182]
FX This research was supported by a Marie Curie International Reintegration
   Grant within the Seventh European Community Framework Programme
   (FP7-PEOPLE-IRG-2008), and by the Scientific and Technological Research
   Council of Turkey (109E182).
CR Baral C., 2003, KNOWLEDGE REPRESENTA
   BROWNLIE R, 1992, AT&T TECH J, V71, P41, DOI 10.1002/j.1538-7305.1992.tb00164.x
   Bryce R.C., 2005, P 20 IEEE ACM INT C, P440
   Bryce RC, 2007, SOFTW TEST VERIF REL, V17, P159, DOI 10.1002/stvr.365
   Bryce RC, 2006, INFORM SOFTWARE TECH, V48, P960, DOI 10.1016/j.infsof.2006.03.004
   Bryce RC, 2009, SOFTW TEST VERIF REL, V19, P37, DOI 10.1002/stvr.393
   Bryce RC, 2007, GECCO 2007: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOL 1 AND 2, P1082
   Cohen DM, 1997, IEEE T SOFTWARE ENG, V23, P437, DOI 10.1109/32.605761
   Cohen M.B., 2007, P 2007 INT S SOFTW T, P129
   Cohen MB, 2003, ISSRE 2003: 14TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P394, DOI 10.1109/ISSRE.2003.1251061
   Cohen MB, 2003, PROC INT CONF SOFTW, P38, DOI 10.1109/ICSE.2003.1201186
   Czerwonka J., 2006, P 24 PAC NW SOFTW QU, P285
   Dalal S. R., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P285, DOI 10.1109/ICSE.1999.841019
   Dumlu Emine., 2011, P 2011 INT S SOFTWAR, P243
   Eiter T, 2009, LECT NOTES COMPUT SC, V5689, P40, DOI 10.1007/978-3-642-03754-2_2
   Ellguth E, 2009, LECT NOTES COMPUT SC, V5753, P490, DOI 10.1007/978-3-642-04238-6_47
   Fouche Sandro., 2007, Proceedings of the the 6th joint meeting of the European software engineering conference and the ACM SIGSOFT symposium on The foundations of software engineering, ESEC-FSE '07, P557
   Ghazi SA, 2003, IEEE C EVOL COMPUTAT, P1420
   Hartman A, 2005, GRAPH THEORY, COMBINATORICS AND ALGORITHMS: INTERDISCIPLINARY APPLICATIONS, P237
   Kobayashi N., 2002, THESIS OSAKA U
   Kuhn DR, 2004, IEEE T SOFTWARE ENG, V30, P418, DOI 10.1109/TSE.2004.24
   Lei Y, 2008, SOFTW TEST VERIF REL, V18, P125, DOI 10.1002/stvr.381
   Marek V., 1999, LOGIC PROGRAMMING PA
   Mats G., 2006, HSIKITR06001 U SKVD
   Nie CH, 2011, ACM COMPUT SURV, V43, DOI 10.1145/1883612.1883618
   Niemelä I, 1999, ANN MATH ARTIF INTEL, V25, P241, DOI 10.1023/A:1018930122475
   Schroeder PJ, 2004, 2004 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P49
   Shiba T., 2004, Proceedings of the 28th Annual International Computer Software and Applications Conference. COMPSAC 2004, P72, DOI 10.1109/CMPSAC.2004.1342808
   Tai KC, 2002, IEEE T SOFTWARE ENG, V28, P109, DOI 10.1109/32.979992
   Tung YW, 2000, AEROSP CONF PROC, P431, DOI 10.1109/AERO.2000.879426
   Williams A., 2000, NEW DIR ORG
   Williams A. W., 2002, Testing of Communicating Systems XIV. Application to Internet Technologies and Services. IFIP TC6/WG6.1 Fourteenth International Conference on Testing of Communicating Systems (TestCom 2002), P283
   Yilmaz C, 2006, IEEE T SOFTWARE ENG, V32, P20, DOI 10.1109/TSE.2006.8
NR 33
TC 19
Z9 19
U1 0
U2 12
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAY
PY 2013
VL 39
IS 5
BP 684
EP 706
DI 10.1109/TSE.2012.65
PG 23
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 140GL
UT WOS:000318642300006
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Ramasubbu, N
   Kemerer, CF
   Hong, J
AF Ramasubbu, Narayan
   Kemerer, Chris F.
   Hong, Jeff
TI Structural Complexity and Programmer Team Strategy: An Experimental Test
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Object-oriented programming; complexity measures; software quality;
   software productivity; programming teams; maintenance process; CK
   metrics; software management
ID ORIENTED DESIGN COMPLEXITY; DISTRIBUTED COGNITION; SOFTWARE-DEVELOPMENT;
   PERCEIVED EASE; METRICS; INTERDEPENDENCE; COMPREHENSION; ACCEPTANCE;
   PAIRS
AB This study develops and empirically tests the idea that the impact of structural complexity on perfective maintenance of object-oriented software is significantly determined by the team strategy of programmers (independent or collaborative). We analyzed two key dimensions of software structure, coupling and cohesion, with respect to the maintenance effort and the perceived ease-of-maintenance by pairs of programmers. Hypotheses based on the distributed cognition and task interdependence theoretical frameworks were tested using data collected from a controlled lab experiment employing professional programmers. The results show a significant interaction effect between coupling, cohesion, and programmer team strategy on both maintenance effort and perceived ease-of-maintenance. Highly cohesive and low-coupled programs required lower maintenance effort and were perceived to be easier to maintain than the low-cohesive programs and high-coupled programs. Further, our results would predict that managers who strategically allocate maintenance tasks to either independent or collaborative programming teams depending on the structural complexity of software could lower their team's maintenance effort by as much as 70 percent over managers who use simple uniform resource allocation policies. These results highlight the importance of achieving congruence between team strategies employed by collaborating programmers and the structural complexity of software.
C1 [Ramasubbu, Narayan; Kemerer, Chris F.] Univ Pittsburgh, Joseph M Katz Grad Sch Business, Pittsburgh, PA 15260 USA.
   [Kemerer, Chris F.] King Abdulaziz Univ, Jeddah, Saudi Arabia.
   [Hong, Jeff] Singapore Management Univ, Sch Informat Syst, Singapore 178902, Singapore.
C3 Pennsylvania Commonwealth System of Higher Education (PCSHE); University
   of Pittsburgh; King Abdulaziz University; Singapore Management
   University
RP Ramasubbu, N (corresponding author), Univ Pittsburgh, Joseph M Katz Grad Sch Business, 276C Mervis Hall, Pittsburgh, PA 15260 USA.
EM narayanr@katz.pitt.edu; ckemerer@katz.pitt.edu; minteck.2010@smu.edu.sg
RI Ramasubbu, Narayan/N-1364-2019; RAMASUBBU, Narayanasamy/E-8571-2012
OI Ramasubbu, Narayan/0000-0002-6959-0729; 
CR ADAMOV R, 1990, J SYST SOFTWARE, V12, P55, DOI 10.1016/0164-1212(90)90066-U
   [Anonymous], 2003, ORG ACTION SOCIAL SC
   [Anonymous], 2006, APPL MANOVA DISCRIMI, DOI DOI 10.1002/047178947X
   [Anonymous], 1996, COGNITION WILD
   Arisholm E, 2004, IEEE T SOFTWARE ENG, V30, P521, DOI 10.1109/TSE.2004.43
   Arisholm E, 2004, IEEE T SOFTWARE ENG, V30, P491, DOI 10.1109/TSE.2004.41
   Arisholm E, 2007, IEEE T SOFTWARE ENG, V33, P65, DOI 10.1109/TSE.2007.17
   Arisholm E, 2006, INFORM SOFTWARE TECH, V48, P1046, DOI 10.1016/j.infsof.2006.01.002
   Balijepally V, 2009, MIS QUART, V33, P91
   Bandi RK, 2003, IEEE T SOFTWARE ENG, V29, P77, DOI 10.1109/TSE.2003.1166590
   Banker RD, 2000, INFORM SYST RES, V11, P219, DOI 10.1287/isre.11.3.219.12209
   BANKER RD, 1993, COMMUN ACM, V36, P81, DOI 10.1145/163359.163375
   Bird C., 2008, P 16 ACM SIGSOFT FDN
   Briand L. C., 1998, Empirical Software Engineering, V3, P65, DOI 10.1023/A:1009783721306
   CAMPBELL DJ, 1988, ACAD MANAGE REV, V13, P40, DOI 10.2307/258353
   Chen X., 2010, REGRESSION STATA
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   Darcy DP, 2005, IEEE T SOFTWARE ENG, V31, P982, DOI 10.1109/TSE.2005.130
   Darcy DP, 2005, IEEE SOFTWARE, V22, P17, DOI 10.1109/MS.2005.160
   DAVIS FD, 1989, MIS QUART, V13, P319, DOI 10.2307/249008
   DHAMA H, 1995, J SYST SOFTWARE, V29, P65, DOI 10.1016/0164-1212(94)00128-A
   Du Bois B., 2004, P 11 WORK C REV ENG
   Du Bois B., 2005, P 9 EUR C SOFTW MAIN
   FENTON NE, 1987, INFORM SOFTWARE TECH, V29, P301, DOI 10.1016/0950-5849(87)90029-2
   Fioravanti F, 2001, IEEE T SOFTWARE ENG, V27, P1062, DOI 10.1109/32.988708
   Flor N.V., 1991, P 4 ANN WORKSH EMP S, P36
   GIBSON VR, 1989, COMMUN ACM, V32, P347, DOI 10.1145/62065.62073
   Goodman P.S., 1986, DESIGNING EFFECTIVE, P120
   Hagemeister J., 1992, ACM SIGSOFT SOFTWARE, V17, P79
   Hollan J., 2000, ACM Transactions on Computer-Human Interaction, V7, P174, DOI 10.1145/353485.353487
   Kemerer C. F., 1995, Annals of Software Engineering, V1, P1, DOI 10.1007/BF02249043
   KRAUT RE, 1995, COMMUN ACM, V38, P69, DOI 10.1145/203330.203345
   Lui KM, 2008, IEEE T SOFTWARE ENG, V34, P197, DOI 10.1109/TSE.2007.70755
   McDowell C, 2006, COMMUN ACM, V49, P90, DOI 10.1145/1145287.1145293
   McGrath J.E., 1984, GROUPS INTERACTION P
   Morris MG, 1997, IEEE SOFTWARE, V14, P58, DOI 10.1109/52.595956
   Nosek J. T., 1990, Journal of Software Maintenance: Research and Practice, V2, P157, DOI 10.1002/smr.4360020303
   Nosek JT, 1998, COMMUN ACM, V41, P105, DOI 10.1145/272287.272333
   Parrish A, 2004, IEEE SOFTWARE, V21, P76, DOI 10.1109/MS.2004.1331306
   Riemenschneider CK, 2002, IEEE T SOFTWARE ENG, V28, P1135, DOI 10.1109/TSE.2002.1158287
   ROGERS Y, 1994, J INFORM TECHNOL, V9, P119, DOI 10.1057/jit.1994.12
   SAAVEDRA R, 1993, J APPL PSYCHOL, V78, P61, DOI 10.1037/0021-9010.78.1.61
   Salleh N, 2011, IEEE T SOFTWARE ENG, V37, P509, DOI 10.1109/TSE.2010.59
   Sangwan RS, 2008, IEEE SOFTWARE, V25, P66, DOI 10.1109/MS.2008.96
   Sawyer S, 2004, COMMUN ACM, V47, P95, DOI 10.1145/1035134.1035140
   SCHNEIDEWIND NF, 1987, IEEE T SOFTWARE ENG, V13, P303, DOI 10.1109/TSE.1987.233161
   Seacord R.C., 2003, MODERNIZING LEGACY S, P1
   Seaman CB, 1998, IEEE T SOFTWARE ENG, V24, P559, DOI 10.1109/32.708569
   SHAFFER JP, 1995, ANNU REV PSYCHOL, V46, P561, DOI 10.1146/annurev.ps.46.020195.003021
   SHAPIRO SS, 1965, BIOMETRIKA, V52, P591, DOI 10.1093/biomet/52.3-4.591
   Sharp H, 2006, LECT NOTES COMPUT SC, V4044, P1
   Statacorps L.P., 2009, Stata statistical software
   Storey MA, 2006, SOFTWARE QUAL J, V14, P187, DOI 10.1007/s11219-006-9216-4
   Subramanyam R, 2003, IEEE T SOFTWARE ENG, V29, P297, DOI 10.1109/TSE.2003.1191795
   TVERSKY A, 1974, SCIENCE, V185, P1124, DOI 10.1126/science.185.4157.1124
   Venkatesh V, 1996, DECISION SCI, V27, P451, DOI 10.1111/j.1540-5915.1996.tb01822.x
   Venkatesh V, 2000, INFORM SYST RES, V11, P342, DOI 10.1287/isre.11.4.342.11872
   vonMayrhauser A, 1996, IEEE T SOFTWARE ENG, V22, P424, DOI 10.1109/32.508315
   WAGEMAN R, 1995, ADMIN SCI QUART, V40, P145, DOI 10.2307/2393703
   Williams L, 2000, IEEE SOFTWARE, V17, P19, DOI 10.1109/52.854064
NR 60
TC 14
Z9 15
U1 0
U2 20
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD SEP-OCT
PY 2012
VL 38
IS 5
BP 1054
EP 1068
DI 10.1109/TSE.2011.88
PG 15
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science; Engineering
GA 009BA
UT WOS:000308999100005
OA Green Published
DA 2024-07-18
ER

PT J
AU de Souza, CRB
   Redmiles, DF
AF de Souza, Cleidson R. B.
   Redmiles, David F.
TI The Awareness Network, <i>To Whom</i> Should I Display My Actions? And,
   <i>Whose</i> Actions Should I Monitor?
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Computer-supported cooperative work; organizational management and
   coordination; programming environments; programming teams; tools
ID SOFTWARE-DEVELOPMENT; COORDINATION
AB The concept of awareness plays a pivotal role in research in Computer-Supported Cooperative Work. Recently, software engineering researchers interested in the collaborative nature of software development have explored the implications of this concept in the design of software development tools. A critical aspect of awareness is the associated coordinative work practices of displaying and monitoring actions. This aspect concerns how colleagues monitor one another's actions to understand how these actions impact their own work and how they display their actions in such a way that others can easily monitor them while doing their own work. In this paper, we focus on an additional aspect of awareness: the identification of the social actors who should be monitored and the actors to whom their actions should be displayed. We address this aspect by presenting software developers' work practices based on ethnographic data from three different software development teams. In addition, we illustrate how these work practices are influenced by different factors, including the organizational setting, the age of the project, and the software architecture. We discuss how our results are relevant for both CSCW and software engineering researchers.
C1 [de Souza, Cleidson R. B.] IBM Res Brazil, BR-04007005 Sao Paulo, Brazil.
   [Redmiles, David F.] Univ Calif Irvine, Donald Bren Sch Informat & Comp Sci, Dept Informat, Irvine, CA 92697 USA.
C3 Getulio Vargas Foundation; University of California System; University
   of California Irvine
RP de Souza, CRB (corresponding author), IBM Res Brazil, Rua Tutoia 1157, BR-04007005 Sao Paulo, Brazil.
EM cleidson.desouza@acm.org; redmiles@ics.uci.edu
RI de Souza, Cleidson R B/J-4409-2014
OI de Souza, Cleidson R B/0000-0003-3240-3122
FU Brazilian Government [CNPq 473220/2008-3]; Fundacao de Amparo a Pesquisa
   do Estado do Para (FAPESPA) [003/2008]; US National Science Foundation
   (NSF) [0534775]; IBM Eclipse Technology Exchange; NSF [0943262,
   0808783]; Direct For Computer & Info Scie & Enginr [0943262, 0534775]
   Funding Source: National Science Foundation; Div Of Information &
   Intelligent Systems [0534775, 0943262] Funding Source: National Science
   Foundation; Div Of Information & Intelligent Systems; Direct For
   Computer & Info Scie & Enginr [0808783] Funding Source: National Science
   Foundation
FX Cleidson de Souza was supported by the Brazilian Government under grant
   CNPq 473220/2008-3 and the Fundacao de Amparo a Pesquisa do Estado do
   Para (FAPESPA) through "Edital Universal N<SUP>o</SUP> 003/2008." Both
   authors received support for this work from the US National Science
   Foundation (NSF) under grant 0534775 and through an IBM Eclipse
   Technology Exchange grant. David Redmiles also received funding from the
   NSF under grants 0943262 and 0808783. The authors also wish to thank
   their technical editor, Sandra Rush, for fast editing of earlier
   versions of this work. Any remaining errors are their own. They wish to
   thank Paul Dourish, Stewart Sutton, Matthew Bietz, their other
   colleagues, the guest editors, and anonymous reviewers for their helpful
   feedback. Finally, very importantly, they wish to thank the Alpha, Beta,
   and Gamma developers for allowing the data collection and providing
   feedback on their work. Cleidson de Souza was with the Federal
   University of Para, Belem-PA 66075-110, Brazil.
CR ACKERMAN MS, 2002, WHOS THERE KNOWLEDGE
   Amrit C, 2008, INFORM SYST MANAGE, V25, P57, DOI 10.1080/10580530701777156
   [Anonymous], 1996, Pattern oriented software architecture: a system of patters
   [Anonymous], THESIS MIT
   BENTLEY R, 1992, P ACM C COMP SUPP CO
   Biehl JT, 2007, CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, VOLS 1 AND 2, P1313
   Brooks FP, 1974, The Mythical Man-Month: Essays on Software Engineering
   CATALDO M, 2006, P 20 C COMP SUPP COO
   Cataldo Marcel., 2008, P 2 ACM IEEE INT S E
   Cataldo M, 2009, IEEE T SOFTWARE ENG, V35, P864, DOI 10.1109/TSE.2009.42
   CHENG LT, 2003, P ACM QUEUE, P40
   CONWAY ME, 1968, DATAMATION, V14, P28
   CURTIS B, 1988, COMMUN ACM, V31, P1268, DOI 10.1145/50087.50089
   de Souza CRB, 2009, COMPUT SUPP COOP W J, V18, P445, DOI 10.1007/s10606-009-9101-3
   de Souza CRB, 2009, IEEE SOFTWARE, V26, P17, DOI 10.1109/MS.2009.176
   de Souza CRB, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P241, DOI 10.1145/1368088.1368122
   DESOUZA CRB, 2007, P EUR C COMP SUPP CO, P99
   DESOUZA CRB, 2004, P WORKSH SOC NETW DE
   DOURISH P, 1992, P C COMP SUPP COOP W
   EHRLICH K, 2006, P IEEE INT C GLOB SO
   EHRLICH K, 2002, SHARING EXPERTISE KN
   Estublier Jacky., 2005, SCM 05, P59
   FUGGETTA A, 2000, P C FUT SOFTW ENG
   Gamma Erich, 1995, DESIGN PATTERNS ELEM
   GRINTER RE, 2003, J COMPUTER SUPPORTED, V12, P297
   GRUDIN J, 1994, COMPUTER, V27, P19, DOI 10.1109/2.291294
   Gutwin C., 2002, Computer Supported Cooperative Work: The Journal of Collaborative Computing, V11, P411, DOI 10.1023/A:1021271517844
   HARPER R, 1989, P EUR C COMP SUPP CO
   Heath C., 2002, Computer Supported Cooperative Work: The Journal of Collaborative Computing, V11, P317, DOI 10.1023/A:1021247413718
   Heath C., 1992, Computer Supported Cooperative Work (CSCW), V1, P69, DOI 10.1007/BF00752451
   HEATH C, 1993, P EUR C COMP SUPP CO
   Heath Christian., 2000, TECHNOLOGY ACTION
   HEDGE R, 2008, P IEEE ACM INT C AUT, P178
   HERBSLEB JD, 2001, P INT C SOFTW ENG
   Jorgensen D.L., 1989, Participant Observation: A Methodology for Human Studies, p133 pp
   KANTOR M, 2001, P 8 IFIP TC 13 C HUM
   LOVSTRAND L, 1991, P EUR C COMP SUPP CO
   MALONE TW, 1994, ACM COMPUT SURV, V26, P87, DOI 10.1145/174666.174668
   McCracken G, 1988, LONG INTERVIEW
   Nardi A.B., 2002, SPECIAL ISSUE CSCW A, V11, P205, DOI DOI 10.1023/A:1015241914483
   Nardi BA, 2002, COMMUN ACM, V45, P89, DOI 10.1145/505248.505251
   PARNAS DL, 1972, COMMUN ACM, V15, P1053, DOI 10.1145/361598.361623
   Perry DE, 2001, ACM T SOFTW ENG METH, V10, P308, DOI 10.1145/383876.383878
   SARMA A, 2003, P 25 INT C SOFTW ENG
   Schmidt K., 2002, Computer Supported Cooperative Work: The Journal of Collaborative Computing, V11, P285, DOI 10.1023/A:1021272909573
   Schmidt K., 1996, Computer Supported Cooperative Work (CSCW), V5, P155, DOI 10.1007/BF00133655
   Schmidt K, 2009, ECSCW 2009: PROCEEDINGS OF THE 11TH EUROPEAN CONFERENCE ON COMPUTER SUPPORTED COOPERATIVE WORK, P223, DOI 10.1007/978-1-84882-854-4_14
   Sommerville I., 2000, Software Engineering, V6
   Sosa ME, 2004, MANAGE SCI, V50, P1674, DOI 10.1287/mnsc.1040.0289
   SUCHMAN L, 1997, CTR COORDINATION CAS, P41
   TEASLEY S, 2000, P C COMP SUPP COOP W
   Thompson J., 2017, Organizations in action
   TRAINER E, 2005, P ECL TECHN EXCH
   TREUDE C, 2010, P 32 ACM IEEE INT C, V1, P365
   VALLETO G, 2007, P WORKSH MIN SOFTW R
   VANDEVEN AH, 1976, AM SOCIOL REV, V41, P322
   ZHANG J, 2007, P 16 INT C WORLD WID, P221
NR 57
TC 39
Z9 43
U1 0
U2 8
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAY-JUN
PY 2011
VL 37
IS 3
BP 325
EP 340
DI 10.1109/TSE.2011.19
PG 16
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 768KZ
UT WOS:000290934800003
DA 2024-07-18
ER

PT J
AU Canal, C
   Poizat, P
   Salaün, G
AF Canal, Carlos
   Poizat, Pascal
   Salaun, Gwen
TI Model-based adaptation of behavioral mismatching components
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE software components; interfaces; mismatch; composition; software
   adaptation; adaptation contracts; vectors; transition systems;
   synchronous products; Petri nets; tools
ID TOOL; PETRI; NETS
AB Component-Based Software Engineering focuses on the reuse of existing software components. In practice, most components cannot be integrated directly into an application-to-be because they are incompatible. Software Adaptation aims at generating, as automatically as possible, adaptors to compensate for a mismatch between component interfaces and is therefore a promising solution for the development of a real market of components promoting software reuse. In this paper, we present our approach for software adaptation, which relies on an abstract notation based on synchronous vectors and transition systems for governing adaptation rules. Our proposal is supported by dedicated algorithms that automatically generate adaptor protocols. These algorithms have been implemented in a tool, called Adaptor, which can be used through a user-friendly graphical interface.
C1 [Canal, Carlos; Salaun, Gwen] Univ Malaga, LCC, Dept Lenguajes & Ciencias Computac, ETSI Informat, Malaga 29701, Spain.
   [Poizat, Pascal] Univ Evry Essonne, CNRS, IBISC FRE 3190, F-91000 Evry, France.
   [Poizat, Pascal] INRIA, ARLES Project Team, Paris, France.
C3 Universidad de Malaga; Universite Paris Saclay; Centre National de la
   Recherche Scientifique (CNRS); Inria
RP Canal, C (corresponding author), Univ Malaga, LCC, Dept Lenguajes & Ciencias Computac, ETSI Informat, Campus Teatinos, Malaga 29701, Spain.
EM canal@lcc.uma.es; pascal.poizat@inria.fr; salaun@lcc.uma.es
RI ; Canal, Carlos/H-4782-2015
OI Poizat, Pascal/0000-0001-7979-9510; Canal, Carlos/0000-0002-8002-0372
CR Agha G, 2002, COMMUN ACM, V45, P30
   Allen R., 1997, ACM Transactions on Software Engineering and Methodology, V6, P213, DOI 10.1145/258077.258078
   [Anonymous], MICROSOFT WINDOWS WO
   Arnold A., 1994, Finite transition systems
   Attiogbé C, 2007, IEEE T SOFTWARE ENG, V33, P157, DOI 10.1109/TSE.2007.21
   Autili M, 2007, PROC INT CONF SOFTW, P784
   Back R. J., 2005, 660 TURK CTR COMP SC
   Becker S, 2006, LECT NOTES COMPUT SC, V3938, P193
   Ben Mokhtar S, 2007, J SYST SOFTWARE, V80, P1941, DOI 10.1016/j.jss.2007.03.002
   Bergstra J.A., 2001, HDB PROCESS ALGEBRA
   BERNARDO M, 2003, FORMAL METHODS SOFTW
   Berthomieu B, 2004, INT J PROD RES, V42, P2741, DOI [10.1080/00207540412331312688, 10.1080/00207540410001705257]
   Beugnard A, 1999, COMPUTER, V32, P38, DOI 10.1109/2.774917
   Bracciali A, 2005, J SYST SOFTWARE, V74, P45, DOI 10.1016/j.jss.2003.05.007
   Brogi A, 2006, SCI COMPUT PROGRAM, V63, P39, DOI 10.1016/j.scico.2005.07.012
   Burnett M, 2004, COMMUN ACM, V47, P53, DOI 10.1145/1015864.1015889
   Canal C, 2003, IEEE T SOFTWARE ENG, V29, P242, DOI 10.1109/TSE.2003.1183935
   Canal C., 2006, LOBJET, V12, P9
   DEALFARO L, 2001, P 9 ANN S FDN SOFTW, P109
   Dustdar S., 2005, International Journal of Web and Grid Services, V1, P1, DOI 10.1504/IJWGS.2005.007545
   Foster H, 2003, 18TH IEEE INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P152, DOI 10.1109/ASE.2003.1240303
   Foster H., 2006, Proceedings of the 28th International Conference on Software Engineering (ICSE'06), P771, DOI DOI 10.1145/1134285.1134408
   Fu X., 2004, P 13 INT C WORLD WID, P621
   Hopcroft J.E., 1979, Introduction to Automata Theory, Languages, and Computation
   Inverardi P, 2003, LECT NOTES COMPUT SC, V2804, P92
   Inverardi P, 2003, J SYST SOFTWARE, V65, P173, DOI 10.1016/S0164-1212(02)00037-7
   Liu XZ, 2007, P INT COMP SOFTW APP, P676
   MILNER R, 1994, COMMUNICATION CONCUR
   MURATA T, 1989, P IEEE, V77, P541, DOI 10.1109/5.24143
   NEZHAD H.R. MOTAHARI., 2007, 16th international conference on World Wide Web (WWW '07), P993, DOI [10.1145/1242572.1242706, DOI 10.1145/1242572.1242706]
   NIERSTRASZ O, 1995, ACM COMPUT SURV, V27, P262, DOI 10.1145/210376.210389
   Plasil F, 2002, IEEE T SOFTWARE ENG, V28, P1056, DOI 10.1109/TSE.2002.1049404
   Rackoff C., 1978, Theoretical Computer Science, V6, P223, DOI 10.1016/0304-3975(78)90036-1
   Reussner RH, 2003, FUTURE GENER COMP SY, V19, P627, DOI 10.1016/S0167-739X(02)00173-5
   Salan G., 2006, INT J BUSINESS PROCE, V1, P116, DOI [10.1504/IJBPIM.2006.010025, DOI 10.1504/IJBPIM.2006.010025]
   SCHMIDT HW, 2002, P 5 INT C FORM METH, P213
   Spitznagel B, 2003, PROC INT CONF SOFTW, P374, DOI 10.1109/ICSE.2003.1201216
   Uchitel S, 2003, IEEE T SOFTWARE ENG, V29, P99, DOI 10.1109/TSE.2003.1178048
   Yellin DM, 1997, ACM T PROGR LANG SYS, V19, P292, DOI 10.1145/244795.244801
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
NR 63
TC 63
Z9 74
U1 0
U2 8
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUL-AUG
PY 2008
VL 34
IS 4
BP 546
EP 563
DI 10.1109/TSE.2008.31
PG 18
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 330JI
UT WOS:000257936500009
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Sillito, J
   Murphy, GC
   De Volder, K
AF Sillito, Jonathan
   Murphy, Gail C.
   De Volder, Kris
TI Asking and answering questions during a programming change task
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE change tasks; software evolution; empirical study; development
   environments; programming tools; program comprehension
ID CONCEPT ASSIGNMENT; SOURCE CODE; COMPREHENSION; SUPPORT; DESIGN; SYSTEM;
   MODEL
AB Little is known about the specific kinds of questions programmers ask when evolving a code base and how well existing tools support those questions. To better support the activity of programming, answers are needed to three broad research questions: 1) What does a programmer need to know about a code base when evolving a software system? 2) How does a programmer go about finding that information? 3) How well do existing tools support programmers in answering those questions? We undertook two qualitative studies of programmers performing change tasks to provide answers to these questions. In this paper, we report on an analysis of the data from these two user studies. This paper makes three key contributions. The first contribution is a catalog of 44 types of questions programmers ask during software evolution tasks. The second contribution is a description of the observed behavior around answering those questions. The third contribution is a description of how existing deployed and proposed tools do, and do not, support answering programmers' questions.
C1 [Sillito, Jonathan] Univ Calgary, Dept Comp Sci, Calgary, AB T2N 1N4, Canada.
   [Murphy, Gail C.; De Volder, Kris] Univ British Columbia, Dept Comp Sci, Vancouver, BC V6T 1Z4, Canada.
C3 University of Calgary; University of British Columbia
RP Sillito, J (corresponding author), Univ Calgary, Dept Comp Sci, 2500 Univ Dr NW, Calgary, AB T2N 1N4, Canada.
EM sillito@ucalgary.ca; murphy@cs.ubc.ca; kdvolder@cs.ubc.ca
CR Andrew J Ko, 2004, P SIGCHI C HUMAN FAC, V6, P151, DOI [DOI 10.1145/985692.985712, 10.1145/985692.985712]
   [Anonymous], PLDI 04 P ACM SIGPLA
   [Anonymous], P WORKSH EMP STUD PR
   [Anonymous], 1984, Smalltalk-80: The Interactive Programming Environment
   [Anonymous], 2006, The C# Programming Language
   [Anonymous], 1980, Winthrop computer systems series
   Baniassad ELA, 1998, PROC INT CONF SOFTW, P64, DOI 10.1109/ICSE.1998.671103
   BASILI VR, 1987, IEEE T SOFTWARE ENG, V13, P1278, DOI 10.1109/TSE.1987.232881
   BIGGERSTAFF TJ, 1994, COMMUN ACM, V37, P72, DOI 10.1145/175290.175300
   BROOKS R, 1983, INT J MAN MACH STUD, V18, P543, DOI 10.1016/S0020-7373(83)80031-5
   Brown M. H., 1991, Proceedings. 1991 IEEE Workshop on Visual Languages (Cat. No.91TH0402-8), P4, DOI 10.1109/WVL.1991.238857
   Brown M.H., 1988, ALGORITHM ANIMATION
   Chen BS, 2000, IEEE T FUZZY SYST, V8, P249, DOI 10.1109/91.855915
   de Alwis B, 2006, IEEE SYMPOSIUM ON VISUAL LANGUAGES AND HUMAN-CENTRIC COMPUTING, PROCEEDINGS, P51
   DeLine Robert., 2005, SOFTVIS 05, P183, DOI [10.1145/1056018.1056044, DOI 10.1145/1056018.1056044]
   Eisenbarth T, 2003, IEEE T SOFTWARE ENG, V29, P210, DOI 10.1109/TSE.2003.1183929
   Erdem A, 1998, 13TH IEEE INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P230, DOI 10.1109/ASE.1998.732658
   Erdos K, 1998, PROG COMPREHEN, P98, DOI 10.1109/WPC.1998.693322
   Flor N.V., 1991, P 4 ANN WORKSH EMP S, P36
   FLYNT C, 2003, TCL TK DEV GUIDE
   Fyson MJ, 1998, J SOFTW MAINT-RES PR, V10, P93, DOI 10.1002/(SICI)1096-908X(199803/04)10:2<93::AID-SMR169>3.0.CO;2-6
   Glaser B. G., 1967, DISCOV GROUNDED THEO
   Gold N, 2001, PROC IEEE INT CONF S, P545, DOI 10.1109/ICSM.2001.972768
   HARANDI MT, 1990, IEEE SOFTWARE, V7, P74, DOI 10.1109/52.43052
   Harman M, 2002, NINTH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P11, DOI 10.1109/WCRE.2002.1173060
   HENNINGER S, 1991, P 14 INT ACM SIGIR C, P408
   HERBSLEB JD, 1993, HUMAN FACTORS IN COMPUTING SYSTEMS, P7
   Holmes R, 2005, PROC INT CONF SOFTW, P117
   Ibrahim S, 2003, ASIA-PACIFIC SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P371, DOI 10.1109/APSEC.2003.1254391
   JACKSON D, 1994, P 13 INT C SOFTW ENG, P13
   JACKSON D, 1994, P 2 ACM SIGSOFT S FD, P2
   Janzen D., 2003, Proceedings of the 2nd Annual Conference on Aspect-Oriented Software Development (AOSD), P178, DOI 10.1145/643603.643622
   Johnson WL, 1995, 10TH KNOWLEDGE-BASED SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P155, DOI 10.1109/KBSE.1995.490131
   Kamiya T, 2002, IEEE T SOFTWARE ENG, V28, P654, DOI 10.1109/TSE.2002.1019480
   KO AJ, 2007, P INT C SOFTW ENG
   Ko AJ, 2006, IEEE T SOFTWARE ENG, V32, P971, DOI 10.1109/TSE.2006.116
   KOENEMANN J, 1991, P C HUM FACT COMP SY, P125
   KOZACZYNSKI W, 1991, P KNOWL BAS SOFTW EN, P162
   LETOVSKY S, 1987, J SYST SOFTWARE, V7, P325, DOI 10.1016/0164-1212(87)90032-X
   LETOVSKY S, 1986, P C EMP STUD PROGR, P80
   Mancoridis S, 1998, PROG COMPREHEN, P45, DOI 10.1109/WPC.1998.693283
   MAYS R, 1996, POWER PROGRAMMING LE
   MIYAKE N, 1986, COGNITIVE SCI, V10, P151, DOI 10.1207/s15516709cog1002_2
   MULLER HA, 1993, SOFTWARE MAINTENANCE, V5, P181
   MYERS BA, 1988, P IEEE WORKSH VIS LA, P192
   OBRIEN PD, 1987, P C OBJ OR PROGR SYS, P91
   PENNINGTON N, 1987, COGNITIVE PSYCHOL, V19, P295, DOI 10.1016/0010-0285(87)90007-7
   REISS SP, 1990, IEEE SOFTWARE, V7, P57, DOI 10.1109/52.56450
   Ren XX, 2004, ACM SIGPLAN NOTICES, V39, P432, DOI 10.1145/1035292.1029012
   Robillard MP, 2004, IEEE T SOFTWARE ENG, V30, P889, DOI 10.1109/TSE.2004.101
   Robillard MP, 2003, PROC INT CONF SOFTW, P822, DOI 10.1109/ICSE.2003.1201304
   SHNEIDERMAN B, 1979, INT J COMPUT INF SCI, V8, P219, DOI 10.1007/BF00977789
   Sillito J., 2005, P INT S EMP SOFTW EN
   Sillito J., 2006, Proceedings of the 14th ACM SIGSOFT international symposium on Foundations of software engineering, P23, DOI DOI 10.1145/1181775.1181779
   Singer Janice., 1997, P 1997 C CTR ADV STU, P209
   Sinha V, 2006, IEEE SYMPOSIUM ON VISUAL LANGUAGES AND HUMAN-CENTRIC COMPUTING, PROCEEDINGS, P187
   SOLOWAY E, 1984, IEEE T SOFTWARE ENG, V10, P595, DOI 10.1109/TSE.1984.5010283
   Stallman R. M., 1981, SIGPLAN Notices, V16, P147, DOI 10.1145/872730.806466
   Steffen J.L., 1985, Winter USENIX Technical Conference, P170
   Steven J., 2000, PROC INT S SOFTWARE, P158
   Storey MAD, 1997, PROG COMPREHEN, P17, DOI 10.1109/WPC.1997.601257
   Storey MAD, 2000, SCI COMPUT PROGRAM, V36, P183, DOI 10.1016/S0167-6423(99)00036-2
   STOREY MAD, 1996, SOFTWARE VISUALIZATI, P244
   Strauss A., 1990, BASICS QUALITATIVE R
   Stroustrup B., 1991, C PROGRAMMING LANGUA, VSecond
   TEITELMAN W, 1981, COMPUTER, V14, P25, DOI 10.1109/C-M.1981.220410
   Tidwell D., 2001, XSLT
   Van Someren MW, 1994, AcademicPress
   VONMAYRHAUSER A, 1993, PROCEEDINGS OF THE SIXTH INTERNATIONAL WORKSHOP ON COMPUTER-AIDED SOFTWARE ENGINEERING - CASE 93, P230, DOI 10.1109/CASE.1993.634824
   Walenstein A, 2002, PROG COMPREHEN, P75, DOI 10.1109/WPC.2002.1021322
   WALENSTEIN A, 2002, THESIS SIMON FRASER
   Weiser Mark., 1981, Proceedings of the 5th International Conference on Software Engineering, P439
   Wilde N, 1996, PROCEEDINGS OF THE THIRD WORKING CONFERENCE ON REVERSE ENGINEERING, P270, DOI 10.1109/WCRE.1996.558934
   Williams L, 2000, IEEE SOFTWARE, V17, P19, DOI 10.1109/52.854064
   WOODS DD, 1984, INT J MAN MACH STUD, V21, P229, DOI 10.1016/S0020-7373(84)80043-7
   WOODS SG, 1997, CONSTRAINT BASED DES
NR 76
TC 174
Z9 207
U1 0
U2 7
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUL-AUG
PY 2008
VL 34
IS 4
BP 434
EP 451
DI 10.1109/TSE.2008.26
PG 18
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 330JI
UT WOS:000257936500002
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Vandewoude, Y
   Ebraert, P
   Berbers, Y
   D'Hondt, T
AF Vandewoude, Yves
   Ebraert, Peter
   Berbers, Yolande
   D'Hondt, Theo
TI Tranquillity: A low disruptive alternative to quiescence for ensuring
   safe dynamic updates
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article; Proceedings Paper
CT 22nd IEEE International Conference on Software Maintenance
CY SEP 24-27, 2006
CL Philadelphia, PA
SP IEEE
DE distributed objects; componentware; language classifications;
   programming languages; software/software engineering; application-aware
   adaptation; support for adaptation; operating systems; software/software
   engineering; distributed objects; components; containers; language
   constructs and features
AB This paper revisits a problem that was identified by Kramer and Magee: placing a system in a consistent state before and after runtime changes. We show that their notion of quiescence as a necessary and sufficient condition for safe runtime changes is too strict and results in a significant disruption in the application being updated. In this paper, we introduce a weaker condition: tranquillity. We show that tranquillity is easier to obtain and less disruptive for the running application but still a sufficient condition to ensure application consistency. We present an implementation of our approach on a component middleware platform and experimentally verify the validity and practical applicability of our approach using data retrieved from a case study.
C1 Katholieke Univ Leuven, Dept Comp Sci, B-3001 Heverlee, Belgium.
   Vrije Univ Brussels, Programming Technol Lab, B-1050 Brussels, Belgium.
C3 KU Leuven; Vrije Universiteit Brussel
RP Vandewoude, Y (corresponding author), Katholieke Univ Leuven, Dept Comp Sci, Celestijnenlaan 200A, B-3001 Heverlee, Belgium.
EM yves.vandewoude@cs.kuleuven.be; pebraert@vub.ac.be;
   yolande.berbers@cs.kuleuven.be; tjdhondt@vub.ac.be
RI Berbers, Yolande/N-3810-2013
CR ALDRICH J, 2003, P 16 EUR C OBJ OR PR, P74
   Bieber Guy., 2001, Introduction to service-oriented programming
   BOHNER S, 1996, INTRO SOFTWARE CHANG
   DEMOURA AL, 2002, P 2 ICDCS INT WORKSH, V2
   FABRY RS, 1976, P 2 INT C SOFTW ENG, P470
   GAHIDE P, 2002, P 1 AOSD WORKSH ASP
   GERLACH J, 2003, RUN TIME EVOLUTION D
   GOULLON H, 1978, P 3 INT C SOFTW ENG
   Gupta D, 1996, IEEE T SOFTWARE ENG, V22, P120, DOI 10.1109/32.485222
   GUPTA D, 1994, THESIS INDIAN I TECH
   Hicks Michael, 2001, Ph. D. Dissertation
   HOFMEISTER C, 1993, THESIS U MARYLAND
   Ketfi A., 2003, P 8 INT WORKSH COMP
   KRAMER J, 1990, IEEE T SOFTWARE ENG, V16, P1293, DOI 10.1109/32.60317
   LISKOV B, 1988, P C PROGR LANG DES I, P260
   RAUSCH A, 2000, P 12 AUSTR SOFTW ENG
   Reuter A, 1993, T PROCESSING CONCEPT
   Szyperski C., 2002, COMPONENT SOFTWARE, V2nd
   URTING D, 2002, P 40 INT C TECHN OBJ
   Vandewoude Y., 2007, THESIS KATHOLIEKE U
   VANDEWOUDE Y, 2006, P ERCIM WORKSH SOFTW
   VANDEWOUDE Y, 2006, P 22 IEEE INT C SOFT
   Vandewoude Y., 2004, P 1 EUR C US MOD INF, P219
   WILS A, 2004, P IASTED C ADV COMP
NR 24
TC 79
Z9 88
U1 0
U2 6
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD DEC
PY 2007
VL 33
IS 12
BP 856
EP 868
DI 10.1109/TSE.2007.70733
PG 13
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Engineering
GA 223RG
UT WOS:000250389400005
DA 2024-07-18
ER

PT J
AU Saougkos, D
   Manis, G
   Blekas, K
   Zarras, AV
AF Saougkos, Dimitris
   Manis, George
   Blekas, Konstantinos
   Zarras, Apostolos V.
TI Revisiting Java bytecode compression for embedded and mobile computing
   environments
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Java; compression (coding)
ID DISCRETE-DATA; CODE; EXTRACTION
AB Pattern-based Java bytecode compression techniques rely on the identification of identical instruction sequences that occur more than once. Each occurrence of such a sequence is substituted by a single instruction. The sequence defines a pattern that is used for extending the standard bytecode instruction set with the instruction that substitutes the pattern occurrences in the original bytecode. Alternatively, the pattern may be stored in a dictionary that serves for the bytecode decompression. In this case, the instruction that substitutes the pattern in the original bytecode serves as an index to the dictionary. In this paper, we investigate a bytecode compression technique that considers a more general case of patterns. Specifically, we employ the use of an advanced pattern discovery technique that allows locating patterns of an arbitrary length, which may contain a variable number of wildcards in place of certain instruction opcodes or operands. We evaluate the benefits and the limitations of this technique in various scenarios that aim at compressing the reference implementation of MIDP, a standard Java environment for the development of applications for mobile devices.
C1 Univ Ioannina, Dept Comp Sci, GR-45110 Ioannina, Greece.
C3 University of Ioannina
RP Saougkos, D (corresponding author), Univ Ioannina, Dept Comp Sci, POB 1186, GR-45110 Ioannina, Greece.
EM dsaougkos@cs.uoi.gr; manis@cs.uoi.gr; kblekas@cs.uoi.gr;
   zarras@cs.uoi.gr
CR Bengio Y, 2000, ADV NEUR IN, V12, P400
   Beszédes A, 2003, ACM COMPUT SURV, V35, P223, DOI 10.1145/937503.937504
   Blekas K, 2004, LECT NOTES COMPUT SC, V3025, P210
   BRANDLY Q, 2004, LECT NOTES ARTIF INT, V3025, P210
   CHEUNG W, 2003, P 7 INT WORKSH SOFTW, P17
   Clausen LR, 2000, ACM T PROGR LANG SYS, V22, P471, DOI 10.1145/353926.353933
   Cooper KD, 1999, ACM SIGPLAN NOTICES, V34, P139, DOI 10.1145/301631.301655
   De Sutter B, 2002, ACM SIGPLAN NOTICES, V37, P275, DOI 10.1145/583854.582445
   Debray SK, 2000, ACM T PROGR LANG SYS, V22, P378, DOI 10.1145/349214.349233
   EVANS WS, 2001, PLDI 01 P ACM SIGPLA, P148
   Franz M, 1997, COMMUN ACM, V40, P87, DOI 10.1145/265563.265576
   *IBM CORP, 1998, CODEPACK POWERPC COD
   Komondoor R, 2003, PROG COMPREHEN, P33
   KOZUCH M, 1994, PR IEEE COMP DESIGN, P270, DOI 10.1109/ICCD.1994.331903
   Krinke J, 2001, EIGHTH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P301, DOI 10.1109/WCRE.2001.957835
   Latendresse M, 2005, SCI COMPUT PROGRAM, V57, P295, DOI 10.1016/j.scico.2004.07.005
   Lefurgy C, 1997, INT SYMP MICROARCH, P194, DOI 10.1109/MICRO.1997.645810
   Lekatsas H, 1999, IEEE T COMPUT AID D, V18, P1689, DOI 10.1109/43.811316
   LINDHOLM T, 1999, STRUCTURE JAVA VIRTU
   Meila M, 2001, MACH LEARN, V42, P9, DOI 10.1023/A:1007648401407
   PUGH W, 1999, P 1999 ACM SIGPLAN C, P247
   RAYSIDE D, 1999, P 9 NRC IBM CTR ADV, P1
   Tip F, 2002, ACM T PROGR LANG SYS, V24, P625, DOI 10.1145/586088.586090
   WOLFE Andrew., 1992, P 25 ANN INT S MICRO, P81
   [No title captured]
NR 25
TC 1
Z9 3
U1 0
U2 2
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUL
PY 2007
VL 33
IS 7
BP 478
EP 496
DI 10.1109/TSE.2007.1021
PG 19
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 172KQ
UT WOS:000246803600003
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Haran, M
   Karr, A
   Last, M
   Orso, A
   Porter, AA
   Sanil, A
   Fouché, S
AF Haran, Murali
   Karr, Alan
   Last, Michael
   Orso, Alessandro
   Porter, Adam A.
   Sanil, Ashish
   Fouche, Sandro
TI Techniques for classifying executions of deployed software to support
   software engineering tasks
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE execution classification; remote analysis/measurement
AB There is an increasing interest in techniques that support analysis and measurement of fielded software systems. These techniques typically deploy numerous instrumented instances of a software system, collect execution data when the instances run in the field, and analyze the remotely collected data to better understand the system's in-the-field behavior. One common need for these techniques is the ability to distinguish execution outcomes ( e. g., to collect only data corresponding to some behavior or to determine how often and under which condition a specific behavior occurs). Most current approaches, however, do not perform any kind of classification of remote executions and either focus on easily observable behaviors ( e. g., crashes) or assume that outcomes' classifications are externally provided ( e. g., by the users). To address the limitations of existing approaches, we have developed three techniques for automatically classifying execution data as belonging to one of several classes. In this paper, we introduce our techniques and apply them to the binary classification of passing and failing behaviors. Our three techniques impose different overheads on program instances and, thus, each is appropriate for different application scenarios. We performed several empirical studies to evaluate and refine our techniques and to investigate the trade-offs among them. Our results show that 1) the first technique can build very accurate models, but requires a complete set of execution data; 2) the second technique produces slightly less accurate models, but needs only a small fraction of the total execution data; and 3) the third technique allows for even further cost reductions by building the models incrementally, but requires some sequential ordering of the software instances' instrumentation.
C1 Penn State Univ, Dept Stat, University Pk, PA 16802 USA.
   Natl Inst Stat Sci, Res Triangle Pk, NC 27709 USA.
   Georgia Inst Technol, Coll Comp, Atlanta, GA 30332 USA.
   Univ Maryland, Dept Comp Sci, Bethesda, MD 20814 USA.
C3 Pennsylvania Commonwealth System of Higher Education (PCSHE);
   Pennsylvania State University; Pennsylvania State University -
   University Park; University System of Georgia; Georgia Institute of
   Technology
RP Haran, M (corresponding author), Penn State Univ, Dept Stat, University Pk, PA 16802 USA.
EM mharan@stat.psu.edu; karr@niss.org; mlast@niss.org; orso@cc.gatech.edu;
   aporter@cs.umd.edu; ashish@niss.org; sandro@cs.umd.edu
CR Agrawal R., 1994, P INT VLDB C VLDB 94, P487, DOI DOI 10.5555/645920.672836
   Anderson J. M., 1997, Operating Systems Review, V31, P1, DOI 10.1145/269005.266637
   [Anonymous], P ACM SIGSOFT S FDN
   ARNOLD M, 2001, P ACM SIGPLAN 2001 C, P168, DOI DOI 10.1145/378795.378832
   Blewitt ME, 2008, NAT GENET, V40, P663, DOI 10.1038/ng.142
   Bowring J., 2002, PASTE 02, P2
   BOWRING JF, 2004, P INT S SOFTW TEST A, P195
   Breiman L., 2001, Machine Learning, V45, P5, DOI 10.1023/A:1010933404324
   Dickinson W, 2001, PROC INT CONF SOFTW, P339, DOI 10.1109/ICSE.2001.919107
   Dickinson W., 2001, ESEC FSE 01, P246, DOI DOI 10.1145/503209.503243
   Duda R., 1973, Pattern Classification and Scene Analysis
   Elbaum S, 2005, IEEE T SOFTWARE ENG, V31, P312, DOI 10.1109/TSE.2005.50
   Fan W, 1999, MACHINE LEARNING, PROCEEDINGS, P97
   Francis P, 2004, 15TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P451, DOI 10.1109/ISSRE.2004.43
   HARAN M, 2005, P 10 EUR SOFTW ENG C, P146
   Hilbert DM, 2000, ACM COMPUT SURV, V32, P384, DOI 10.1145/371578.371593
   Joshi MV, 2001, SIGMOD REC, V30, P91, DOI 10.1145/376284.375673
   LARUS J, 1995, P SIGPLAN C PROGR LA
   Leon D., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, P116, DOI 10.1109/ICSE.2000.870403
   LIBLIT B, 2003, P ACM SIGPLAN 2003 C, P141
   LIBLIT B, 2005, P C PROGR LANG DES I
   MILLER BP, 1995, COMPUTER, V28, P37, DOI 10.1109/2.471178
   ORSO A, 2005, P 3 INT ICSE WORKSH
   ORSO A, 2003, P ACM 2003 S SOFTW V, P67
   Pavlopoulou C., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P277, DOI 10.1109/ICSE.1999.841018
   Podgurski A, 2003, PROC INT CONF SOFTW, P465, DOI 10.1109/ICSE.2003.1201224
   Romer Ted, 1997, P USENIX WIND NT WOR
   SHAWETAYLOR J, 2001, KERNEL METHODS PATTE
   SRIVASTAVA A, 1994, P SIGPLAN C PROGR LA
   TRAUB O, 2000, UNPUB EPHEMERAL INST
   WALL D, 1987, P 2 INT S ARCH SUPP
   YILMAZ C, 2004, P INT S SOFTW TEST A, P45
   2007, MICROSOFT ONLINE CRA
NR 33
TC 22
Z9 28
U1 0
U2 5
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAY
PY 2007
VL 33
IS 5
BP 287
EP 304
DI 10.1109/TSE.2007.1004
PG 18
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 151PR
UT WOS:000245303400002
DA 2024-07-18
ER

PT J
AU Kshemkalyani, A
   Wu, B
AF Kshemkalyani, Ajay
   Wu, Bin
TI Detecting arbitrary stable properties using efficient snapshots
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE distributed system; global state; stable predicate; stable property;
   distributed snapshot
ID DISTRIBUTED SNAPSHOTS; SYSTEMS; TIME; ALGORITHMS
AB A stable property continues to hold in an execution once it becomes true. Detecting arbitrary stable properties efficiently in distributed executions is still an open problem. The known algorithms for detecting arbitrary stable properties and snapshot algorithms used to detect such stable properties suffer from drawbacks such as the following: They incur the overhead of a large number of messages per global snapshot, or alter application message headers, or use inhibition, or use the execution history, or assume a strong property such as causal delivery of messages in the system. We solve the problem of detecting an arbitrary stable property efficiently under the following assumptions: P1) The application messages should not be modified, not even by timestamps or message coloring. P2) No inhibition is allowed. P3) The algorithm should not use the message history. P4) Any process can initiate the algorithm. This paper proposes a family of nonintrusive algorithms requiring 6(n-1) control messages, where n is the number of processes. A three-phase strategy of uncoordinated observation of local states is used to give a consistent snapshot from which any stable property can be detected. A key feature of our algorithms is that they do not rely on the processes continually and pessimistically reporting their activity. Only the relevant activity that occurs in the thin slice during the algorithm execution needs to be examined.
C1 Univ Illinois, Dept Comp Sci, Chicago, IL 60607 USA.
C3 University of Illinois System; University of Illinois Chicago;
   University of Illinois Chicago Hospital
RP Kshemkalyani, A (corresponding author), Univ Illinois, Dept Comp Sci, 851 S Morgan St, Chicago, IL 60607 USA.
EM ajayk@cs.uic.edu; bwu3@uic.edu
CR ACHARYA A, 1992, INFORM PROCESS LETT, V44, P317, DOI 10.1016/0020-0190(92)90107-7
   ALAGAR S, 1994, INFORM PROCESS LETT, V50, P311, DOI 10.1016/0020-0190(94)00055-7
   ATREYA R, 2003, P 7 INT C PRINC DIST, P20
   CHANDY KM, 1985, ACM T COMPUT SYST, V3, P63, DOI 10.1145/214451.214456
   Critchlow C, 1996, DISTRIB COMPUT, V10, P11, DOI 10.1007/s004460050021
   FIDGE C, 1991, COMPUTER, V24, P28, DOI 10.1109/2.84874
   HELARY JM, 1994, DISTRIB COMPUT, V7, P137, DOI 10.1007/BF02277858
   HELARY JM, 1987, P 6 ACM S PRINC DIST, P125
   HELARY JM, 1989, P 3 INT WORKSH DISTR, P124
   HO GS, 1982, IEEE T SOFTWARE ENG, V8, P554, DOI 10.1109/TSE.1982.235884
   KSHEMKALYANI A, 2005, P INT C EMB UB COMP, P572
   Kshemkalyani A. D., 1995, Distributed Systems Engineering, V2, P224, DOI 10.1088/0967-1846/2/4/005
   Kshemkalyani A. D., 1990, Proceedings of the Second IEEE Symposium on Parallel and Distributed Processing 1990 (Cat. No.TH0328-5), P126, DOI 10.1109/SPDP.1990.143519
   LAI TH, 1987, INFORM PROCESS LETT, V25, P153, DOI 10.1016/0020-0190(87)90125-6
   LAMPORT L, 1978, COMMUN ACM, V21, P558, DOI 10.1145/359545.359563
   LI HF, 1987, P 7 INT C DISTR COMP, P364
   MARZULLO K, 1994, DISTRIB COMPUT, V8, P81, DOI 10.1007/BF02280830
   MATTERN F, 1993, J PARALLEL DISTR COM, V18, P423, DOI 10.1006/jpdc.1993.1075
   Mattern F., 1989, Parallel and Distributed Algorithms. Proceedings of the International Workshop, P215
   Raynal M., 1988, Distributed Algorithms and Protocols
   SCHIPER A, 1994, DISTRIB COMPUT, V8, P93, DOI 10.1007/BF02280831
   SPEZIALETTI M, 1986, P 6 INT C DISTR COMP, P382
   Sridhar N., 2002, Proceedings of the 14th IASTED International Conference Parallel and Distributed Computing and Systems, P96
   VENKATESAN S, 1994, DISTRIB COMPUT, V8, P105, DOI 10.1007/BF02280832
   VENKATESAN S, 1989, P 9 INT C DISTR COMP, P53
   WEISER M, 1982, COMMUN ACM, V25, P446, DOI 10.1145/358557.358577
   2006, TOP 500 SUPERCOMPUTE
NR 27
TC 8
Z9 10
U1 0
U2 3
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAY
PY 2007
VL 33
IS 5
BP 330
EP 346
DI 10.1109/TSE.2007.1000
PG 17
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 151PR
UT WOS:000245303400005
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Shinjo, Y
   Pu, C
AF Shinjo, Y
   Pu, C
TI Achieving efficiency <i>and</i> portability in systems software:: A case
   study on POSIX-compliant multithreaded programs
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE performance; portability; threads; software libraries; concurrent
   programming; runtime specialization; thread-specific data
ID SPECIALIZATION
AB Portable (standards-compliant) systems software is usually associated with unavoidable overhead from the standards-prescribed interface. For example, consider the POSIX Threads standard facility for using thread-specific data (TSD) to implement multithreaded code. The first TSD reference must be preceded by pthread_ getspecific(), typically implemented as a function or macro with 40-50 instructions. This paper proposes a method that uses the runtime specialization facility of the Tempo program specializer to convert such unavoidable source code into simple memory references of one or two instructions for execution. Consequently, the source code remains standard compliant and the executed code's performance is similar to direct global variable access. Measurements show significant performance gains over a range of code sizes. A random number generator ( 10 lines of C) shows a speedup of 4.8 times on a SPARC and 2.2 times on a Pentium. A time converter ( 2,800 lines) was sped up by 14 and 22 percent, respectively, and a parallel genetic algorithm system ( 14,000 lines) was sped up by 13 and 5 percent.
C1 Univ Tsukuba, Dept Comp Sci, Tsukuba, Ibaraki 3058573, Japan.
   Georgia Inst Technol, Coll Comp, Atlanta, GA 30332 USA.
C3 University of Tsukuba; University System of Georgia; Georgia Institute
   of Technology
RP Univ Tsukuba, Dept Comp Sci, 1-1-1 Tennoudai, Tsukuba, Ibaraki 3058573, Japan.
EM yas@cs.tsukuba.ac.jp; calton@cc.gatech.edu
RI Shinjo, Yasushi/W-1972-2019
CR ANDERSON TE, 1991, P 13 ACM S OP SYST P, P95
   [Anonymous], 1993, Partial Evaluation and Automatic Program Generation
   Bershad B.N., 1995, P 15 ACM S OP SYST P, P267
   Cohen A., 1998, WIN32 MULTITHREADED
   Consel C., 1996, Partial Evaluation. International Seminar. Selected Papers, P54
   CONSEL C, 2003, 129903 LABRI
   Cowan C, 1996, PROCEEDINGS OF THE FIFTH INTERNATIONAL WORKSHOP ON OBJECT-ORIENTATION IN OPERATING SYSTEMS, P72, DOI 10.1109/IWOOOS.1996.557870
   DRAVES RP, 1991, P 13 ACM S OP SYST P, P122
   Engler D.R., 1995, S OPERATING SYSTEMS, P251
   GOODMAN ED, 1996, 967101 MICH STAT U
   Grant B, 2000, ACM T PROGR LANG SYS, V22, P932, DOI 10.1145/365151.367161
   *HAL COMP SYST INC, 1998, SPARC64 PROC
   JONES MB, 1991, PROCEEDINGS OF THE WINTER 1991 USENIX CONFERENCE, P81
   Knuth D. E., 1969, The Art of Computer Programming, Vol. 2, Seminumerical Algorithms, V2
   LEMEUR AF, 2002, P ACM SIGPLAN WORKSH, P9
   LEMEUR AF, 2002, P IFIP ACM C COMP DE, P1
   LEMEUR AF, 2004, HIGHER ORDER SYMBOLI, V17, P47
   Lewis Bil., 1998, MULTITHREADED PROGRA
   Marlet R, 1997, AUTOMATED SOFTWARE ENGINEERING, 12TH IEEE INTERNATIONAL CONFERENCE, PROCEEDINGS, P183, DOI 10.1109/ASE.1997.632838
   MARLET R, 1999, J AUTOMATED SOFTWARE, V5, P411
   MARSH BD, 1991, P 13 ACM S OP SYST P, P110
   McNamee D, 2001, ACM T COMPUT SYST, V19, P217, DOI 10.1145/377769.377778
   Muller G, 1998, INT CON DISTR COMP S, P240, DOI 10.1109/ICDCS.1998.679507
   NORTON SJ, 1997, THREAD TIME MULTITHR
   Ousterhout J.K., 1996, 1996 USENIX TECHN C
   Poletto M, 1999, ACM T PROGR LANG SYS, V21, P324, DOI 10.1145/316686.316697
   Savage S., 2015, P 16 ACM S OP SYST P, P27, DOI [10.1145/268998.266641, DOI 10.1145/268998.266641]
   Schultz UP, 2003, ACM T PROGR LANG SYS, V25, P452, DOI 10.1145/778559.778561
   *SEQ COMP SYST INC, 1985, BAL 8000 PAR PROGR
   Shinjo Y, 1997, PARALLEL COMPUT, V22, P1429, DOI 10.1016/S0167-8191(96)00045-2
   *SUN MICR INC, 1997, ULTRASPARC II US MAN
   *SYST API, 1996, PORT OP SYST INT P 1
   WALDSPURGER A, 1993, P 20 ANN INT S COMP, P120
   [No title captured]
NR 34
TC 1
Z9 1
U1 0
U2 2
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD SEP
PY 2005
VL 31
IS 9
BP 785
EP 800
DI 10.1109/TSE.2005.98
PG 16
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 964CZ
UT WOS:000231857600005
DA 2024-07-18
ER

PT J
AU Mock, M
   Atkinson, DC
   Chambers, C
   Eggers, SJ
AF Mock, M
   Atkinson, DC
   Chambers, C
   Eggers, SJ
TI Program slicing with dynamic points-to sets
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE dynamic analysis; points-to analysis; program slicing
ID EFFICIENT
AB Program slicing is a potentially useful analysis for aiding program understanding. However, in reality even slices of small programs are often too large to be useful. Imprecise pointer analyses have been suggested as one cause of this problem. In this paper, we use dynamic points-to data, which represents optimistic pointer information, to obtain a bound on the best case slice size improvement that can be achieved with improved pointer precision. Our experiments show that slice size can be reduced significantly for programs that make frequent use of calls through function pointers because for them the dynamic pointer data results in a considerably smaller call graph, which leads to fewer data dependences. Programs without or with only few calls through function pointers, however, show considerably less improvement. We discovered that C programs appear to have a significant fraction of direct and nonspurious pointer data dependences so that reducing spurious dependences via pointers is only of limited benefit. Consequently, to make slicing useful in general for such programs, improvements beyond better pointer analyses will be necessary. On the other hand, since we show that collecting dynamic function pointer information can be performed with little overhead ( average slowdown of 10 percent for our benchmarks), dynamic pointer information may be a practical approach to making slicing of programs with frequent function pointer use more successful in practice.
C1 Univ Pittsburgh, Dept Comp Sci, Pittsburgh, PA 15260 USA.
   Santa Clara Univ, Dept Comp Engn, Santa Clara, CA 95053 USA.
   Univ Washington, Dept Comp Sci & Engn, Seattle, WA 98195 USA.
C3 Pennsylvania Commonwealth System of Higher Education (PCSHE); University
   of Pittsburgh; Santa Clara University; University of Washington;
   University of Washington Seattle
RP Univ Pittsburgh, Dept Comp Sci, Pittsburgh, PA 15260 USA.
EM mock@cs.pitt.edu; atkinson@engr.scu.edu; chambers@cs.washington.edu;
   eggers@cs.washington.edu
CR Agrawal G, 2001, ACM SIGPLAN NOTICES, P6
   Aho A.V., 1986, COMPILERS PRINCIPLES
   Amdahl G.M., 1967, AFIPS 1967 SPRING JO, P483
   Andersen L. O., 1994, Ph.D. thesis
   Anderson P, 2002, INFORM SOFTWARE TECH, V44, P743, DOI 10.1016/S0950-5849(02)00105-2
   [Anonymous], PLDI 03
   [Anonymous], P 25 ACM SIGPLAN SIG
   [Anonymous], PLDI 00
   [Anonymous], PLDI 98
   Atkinson D. C., 1998, Software Engineering Notes, V23, P46, DOI 10.1145/291252.288217
   Atkinson DC, 2004, 11TH ASIA-PACIFIC SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P326, DOI 10.1109/APSEC.2004.16
   Atkinson DC, 2001, PROC IEEE INT CONF S, P52, DOI 10.1109/ICSM.2001.972711
   Atkinson DC, 1996, PROC INT CONF SOFTW, P16, DOI 10.1109/ICSE.1996.493398
   ATKINSON DC, 1999, THESIS U CALIFORNIA
   BENT L, 2001, CS20010668 U CAL DEP
   Binkley D, 2003, THIRD IEEE INTERNATIONAL WORKSHOP ON SOURCE CODE ANALYSIS AND MANIPULATION - PROCEEDINGS, P203, DOI 10.1109/SCAM.2003.1238046
   Binkley D, 2003, PROC IEEE INT CONF S, P44, DOI 10.1109/ICSM.2003.1235405
   BINKLEY D, 2004, ADV COMPUTERS
   Binkley D., 1996, Advances in Computers, V43, P1
   CYTRON R, 1991, ACM T PROGR LANG SYS, V13, P451, DOI 10.1145/115372.115320
   DAS M, 2000, P ACM SIGPLAN C PROG, P35
   Diwan A, 2001, ACM T PROGR LANG SYS, V23, P30, DOI 10.1145/383721.383732
   DIWAN A, 1998, P ACM SIGPLAN 98 C P, P106
   Francel MA, 2001, SCI COMPUT PROGRAM, V40, P151, DOI 10.1016/S0167-6423(01)00013-2
   GALLAGHER KB, 1991, IEEE T SOFTWARE ENG, V17, P751, DOI 10.1109/32.83912
   Ghiya R., 2001, Proc. of the ACM SIGPLAN 2001 conference on Programming Language Design and Implementation, P47
   Graham S. L., 1982, SIGPLAN Notices, V17, P120, DOI 10.1145/872726.806987
   *GRAMMATECH INC, 2000, COD US GUID REF MAN
   Harris N, 1998, LIBRARY, V20, P74
   Heintze Nevin., 2001, PLDI 01, P254
   HIND M, 2000, P INT S SOFTW TEST A, P113
   HOLLOWAY G, 1997, P 2 SUIF COMP WORKSH
   HORWITZ S, 1990, ACM T PROGR LANG SYS, V12, P26, DOI [10.1145/77606.77608, 10.1145/960116.53994]
   HORWITZ S, 1995, P 3 ACM SIGSOFT S FD, P104
   JA R, 1991, ART COMPUTER SYSTEMS
   KOREL B, 1988, INFORM PROCESS LETT, V29, P155, DOI 10.1016/0020-0190(88)90054-3
   Korel B., 1994, P INT S SOFTWARE TES, P66
   Krinke J, 2002, PROC IEEE INT CONF S, P22, DOI 10.1109/ICSM.2002.1167744
   Liang D., 1999, Proceedings IEEE International Conference on Software Maintenance - 1999 (ICSM'99). `Software Maintenance for Business Change' (Cat. No.99CB36360), P421, DOI 10.1109/ICSM.1999.792640
   LIANG D, 2000, P 2000 INT C SOFTW E, P366
   Liang DL, 1999, LECT NOTES COMPUT SC, V1687, P199, DOI 10.1145/318774.318943
   LYLE JR, 1995, IR5691 NIST
   *MIPS COMP SYST, 1990, UMIPS V REF MAN PIX
   Mock M, 2000, INT SYMP MICROARCH, P291, DOI 10.1109/MICRO.2000.898079
   Mock M, 2001, ACM SIGPLAN NOTICES, P66
   MOCK M, 1999, P 2 WORKSH FEEDB DIR, P100
   MOCK M, 2002, P 10 ACM SIGSOFT S F, P71
   MOCK MU, 2002, THESIS U WASHINGTON
   PANDE HD, 1994, IEEE T SOFTWARE ENG, V20, P385, DOI 10.1109/32.286418
   Ryder BG, 2001, ACM T PROGR LANG SYS, V23, P105, DOI 10.1145/383043.381532
   Shapiro M., 1997, Proceedings of the 4th International Static Analysis Symposium (SAS), P16
   Shapiro M., 1997, P 24 ACM SIGPLAN SIG, P1
   Shivers O. G., 1991, THESIS CARNEGIE MELL
   Steensgaard Bjarne., 1996, POINTS TO ANAL ALMOS, P32
   TIP F, 1995, J PROGRAM LANG, V3, P121
   Tip F, 2001, ACM T SOFTW ENG METH, V10, P5, DOI 10.1145/366378.366379
   VENKATESH GA, 1995, ACM T PROGR LANG SYS, V17, P197, DOI 10.1145/201059.201062
   WEISER M, 1984, IEEE T SOFTWARE ENG, V10, P352, DOI 10.1109/TSE.1984.5010248
   Whaley John., 2004, PROGRAMMING LANGUAGE, P131
   WILSON RP, 1994, SIGPLAN NOTICES, V29, P31, DOI 10.1145/193209.193217
   Zhang XG, 2004, PROC INT CONF SOFTW, P502, DOI 10.1109/ICSE.2004.1317472
NR 61
TC 16
Z9 22
U1 0
U2 4
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD AUG
PY 2005
VL 31
IS 8
BP 657
EP 678
DI 10.1109/TSE.2005.94
PG 22
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 953OL
UT WOS:000231086500003
DA 2024-07-18
ER

PT J
AU Miller, J
   Yin, ZC
AF Miller, J
   Yin, ZC
TI A cognitive-based mechanism for constructing software inspection teams
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE planning for SQA and V&V; code inspections and walkthroughs; programming
   teams; software psychology
ID QUESTIONNAIRE LENGTH; PERSONALITY; EXPERIENCE; PROGRAM; STYLE
AB Software inspection is well-known as an effective means of defect detection. Nevertheless, recent research has suggested that the technique requires further development to optimize the inspection process. As the process is inherently group-based, one approach to improving performance is to attempt to minimize the commonality within the process and the group. This paper proposes an approach to add diversity into the process by using a cognitively-based team selection mechanism. The paper argues that a team with diverse information processing strategies, as defined by the selection mechanism, will maximize the number of different defects discovered.
C1 Univ Alberta, Dept Elect & Comp Engn, Edmonton, AB, Canada.
C3 University of Alberta
RP Univ Alberta, Dept Elect & Comp Engn, Edmonton, AB, Canada.
EM jm@ee.ualberta.ca; zyin@ualberta.ca
CR ALLINSON CW, 1990, PSYCHOL REP, V67, P859, DOI 10.2466/PR0.67.7.859-866
   [Anonymous], 2002, RTI PROJECT
   [Anonymous], 1985, MANUAL GUIDE DEV USE
   APPLEGATE WB, 1990, NEW ENGL J MED, V322, P1207
   Basili VR, 1996, PROC INT CONF SOFTW, P442, DOI 10.1109/ICSE.1996.493439
   BASILI VR, 1996, INT SOFTWARE ENG RES
   Briand LC, 2000, IEEE T SOFTWARE ENG, V26, P518, DOI 10.1109/32.852741
   BURCHELL B, 1992, QUAL QUANT, V26, P233
   Carver Jeffrey C, 2003, THESIS U MARYLAND
   COURTNEY RE, 1993, SOFTWARE ENG J, V8, P5, DOI 10.1049/sej.1993.0002
   DAVIS DL, 1990, PSYCHOL REP, V66, P167, DOI 10.2466/PR0.66.1.167-175
   Ditiberio JK., 1993, INTRO TYPE COLL
   DOOLAN EP, 1992, SOFTWARE PRACT EXPER, V22, P173, DOI 10.1002/spe.4380220205
   DOYLE J, 1998, 13 WORC POL I
   FAGAN ME, 1986, IEEE T SOFTWARE ENG, V12, P744, DOI 10.1109/TSE.1986.6312976
   FAGAN ME, 1976, IBM SYST J, V15, P182, DOI 10.1147/sj.153.0182
   Furnham A, 1999, PERS INDIV DIFFER, V27, P1113, DOI 10.1016/S0191-8869(99)00053-7
   HEBERLEIN TA, 1978, AM SOCIOL REV, V43, P447, DOI 10.2307/2094771
   HELGESON JG, 1994, PSYCHOL MARKET, V11, P493, DOI 10.1002/mar.4220110506
   HERZOG AR, 1981, PUBLIC OPIN QUART, V45, P549, DOI 10.1086/268687
   Hollander M., 1973, NONPARAMETRIC STAT M
   HUNT RG, 1989, ORGAN BEHAV HUM DEC, V44, P436, DOI 10.1016/0749-5978(89)90018-6
   Johnson DH, 1999, J WILDLIFE MANAGE, V63, P763, DOI 10.2307/3802789
   Jung C., 1971, THE PORTABLE JUNG
   Lawrence G., 1993, PEOPLE TYPES TIGER S
   MASON RO, 1973, MANAGE SCI, V19, P475, DOI 10.1287/mnsc.19.5.475
   MAXWELL TA, 1995, THESIS ROCKEFELLER C
   McGrath J.E., 1984, GROUPS INTERACTION P
   Miller J, 2000, J SYST SOFTWARE, V54, P29, DOI 10.1016/S0164-1212(00)00024-8
   Miller J, 2004, J SYST SOFTWARE, V73, P183, DOI 10.1016/j.jss.2003.12.019
   MILLER J, 1999, J SOFTWARE TESTING V, V9, P167
   Myers I. B., 1995, Gifts differing: understanding personality type
   NUTT PC, 1989, MAKING TOUGHT DECISI
   PIRIE WR, 1983, NPSP NONPARAMETRIC S
   POIRER D, 1998, GROW WITH TYP
   Regnell B., 2000, Empirical Software Engineering, V5, P331, DOI 10.1023/A:1009848320066
   RUSSELL GW, 1991, IEEE SOFTWARE, V8, P25, DOI 10.1109/52.62929
   SELKE T, 1999, 9913 DUK U I STAT DE
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
   YAMMARINO FJ, 1991, PUBLIC OPIN QUART, V55, P613, DOI 10.1086/269284
   YIN Z, 2003, THESIS U ALBERTA
   Yin ZC, 2004, INFORM SOFTWARE TECH, V46, P185, DOI 10.1016/S0950-5849(03)00127-7
NR 42
TC 28
Z9 32
U1 0
U2 5
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD NOV
PY 2004
VL 30
IS 11
BP 811
EP 825
DI 10.1109/TSE.2004.69
PG 15
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 867OX
UT WOS:000224853000007
DA 2024-07-18
ER

PT J
AU Kang, JA
   Cheng, AMK
AF Kang, JA
   Cheng, AMK
TI Shortening matching time in OPS5 production systems
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE matching; knowledge-based systems; expert systems; rule-based systems;
   OPS5; Rete; response time
AB A rule-based system must satisfy stringent timing constraints when applied to a real-time environment. As the scale of rule-based expert systems increases, the efficiency of systems becomes a pressing concern. The most critical performance factor in the implementation of a production system is the condition-testing algorithm. We propose a new method based on the widely used RETE match algorithm. We show an approach designed to reduce the response time of rule-based expert systems by reducing the matching time. There are two steps in the method we propose: The first makes an index structure of the tokens to reduce the alpha-node-level join candidates. The second chooses the highest time tag for certain beta-nodes to reduce the amount of combinatorial match that is problematical in a real-time production system application. For this purpose, a simple compiler is implemented in C and the response time of test programs is measured.
C1 Humax Co Ltd, Sungham, Kyounggi Do, South Korea.
   Univ Houston, Dept Comp Sci, Real Time Syst Lab, Houston, TX 77204 USA.
C3 University of Houston System; University of Houston
RP Humax Co Ltd, Humax Venture Tower 271-2, Sungham, Kyounggi Do, South Korea.
EM miminy@humaxdigital.com; cheng@cs.uh.edu
OI Cheng, Albert M. K./0000-0003-2134-3056
CR ACHARYA A, 1993, P 2 INT C INF KNOWL
   ACHARYA A, 1992, IEEE T PARALLEL DIST, V3
   BRANT DA, 1993, P ACM SIGMOD INT C M
   CHEN J, 1995, P 11 C ART INT APPL
   CHEN MS, 1996, IEEE T KNOWLEDGE DAT, V8
   Cheng AMK, 2004, IEEE T KNOWL DATA EN, V16, P271, DOI 10.1109/TKDE.2004.1269603
   CHENG AMK, 2000, P IEEE CS INT PAR DI
   CHENG AMK, 2000, IEEE T KNOWLEDGE DAT, V12
   CHENG AMK, 1993, P IEEE INT PAR PROC
   DOORENBOS RB, 1993, P 11 NAT C AI
   FORGY C, 1981, CMUCS81135
   Forgy C. L., 1982, ARTIFICIAL INTELLIGE, V19
   GUPTA A, 1986, THESIS CARNEGIE MELL
   HANSON E, 1996, IEEE T KNOWLEDGE DAT, V8
   HANSON E, 1993, TR93036 U FLOR CIS D
   ISHIDA T, 1994, IEEE T KNOWLEDGE DAT, V6
   KANG JA, 2000, THESIS U HOUSTON
   LEE HS, 1992, ARTIFICIAL INTELLIGE, V54
   LEE P, 1997, P 6 INT C INF KNOWL
   LEE PY, 2002, IEEE T KNOWLEDGE DAT, V14
   Lee YH, 2004, IEEE T SOFTWARE ENG, V30, P112, DOI 10.1109/TSE.2004.1265816
   LEE YH, 2000, P IEEE CS REAL TIM T
   McDermott J., 1978, PATTERN DIRECTED INF
   MIRANKER DP, 1987, P AM ASS ART INT C
   NAYAK P, 1994, MACHINE ARCHITECTURE
   OBERMEYER L, 1995, P 7 INT C TOOLS ART
   PAUL CJ, 1991, COMM ACM, V34
   PERLIN M, 1991, P IEEE INT C TOOLS A
   SCHMOLZE JG, 1992, P 4 NATL C AI
   TAMBE M, 1992, P IEEE INT C TOOLS A
   TSAI HY, 1994, P 12 NATL C AI
   WANG C, 1994, P 24 INT C PAR PROC
   WANG CK, 1990, P INT C PAR PROC, V3
   WANG Y, 1992, P 8 INT C DAT ENG
   ZUPAN B, 1998, IEEE T KNOWLEDGE DAT, V10
NR 35
TC 11
Z9 13
U1 0
U2 7
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUL
PY 2004
VL 30
IS 7
BP 448
EP 457
DI 10.1109/TSE.2004.32
PG 10
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 826DE
UT WOS:000221808600003
DA 2024-07-18
ER

PT J
AU Chan, ATS
   Chuang, SN
AF Chan, ATS
   Chuang, SN
TI MobiPADS: A reflective middleware for context-aware mobile computing
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE middleware; mobile applications; mobile computing support services;
   mobile environments
AB Traditionally, middleware technologies, such as CORBA, Java RMI, and Microsoft's DCOM, have provided a set of distributed computing services that essentially abstract the underlying network services to a monolithic "black box." In a mobile operating environment, the fundamental assumption of middleware abstracting a unified distributed service for all types of applications operating over a static network infrastructure is no longer valid. In particular, mobile applications are not able to leverage the benefits of adaptive computing to optimize its computation based on current contextual situations. In this paper, we introduce the Mobile Platform for Actively Deployable Service (MobiPADS) system. MobiPADS is designed to support context-aware processing by providing an executing platform to enable active service deployment and reconfiguration of the service composition in response to environments of varying contexts. Unlike most mobile middleware, MobiPADS supports dynamic adaptation at both the middleware and application layers to provide flexible configuration of resources to optimize the operations of mobile applications. Within the MobiPADS system, services (known as mobilets) are configured as chained service objects to provide augmented services to the underlying mobile applications so as to alleviate the adverse conditions of a wireless environment.
C1 Hong Kong Polytech Univ, Dept Comp, Hong Kong, Hong Kong, Peoples R China.
C3 Hong Kong Polytechnic University
RP Chan, ATS (corresponding author), Hong Kong Polytech Univ, Dept Comp, Hong Kong, Hong Kong, Peoples R China.
CR [Anonymous], 2003, P 12 INT C WORLD WID
   Ben-Natan R., 1995, CORBA: a guide to common object request broker architecture
   Blair G., 2001, IEEE DISTRIBUTED SYS, V2
   CAPRA L, 2002, P 24 INT C SOFTW ENG
   Chakravarthy S., 1993, UFCISTR93007
   Chuang SN, 2002, PROC INT CONF PARAL, P429, DOI 10.1109/ICPP.2002.1040899
   Downing T., 1998, JAVA RMI REMOTE METH
   GEHANI NH, 1992, PROC INT CONF VERY L, P327
   HAUSEL B, 1996, P ACM INT C MOB COMP
   KAASHOEK F, 1997, IEEE T COMPUTERS MAR, P337
   KISTLER J, 1992, ACM T COMPUT SYST, V6, P1
   KOJO M, 1995, C199515 U HELS DEP C
   KON F, 2002, COMM ACM         JUN
   Liljeberg M., 1995, Proceedings. Second International Workshop on Services in Distributed and Networked Environments (Cat. No.95TH8091), P132, DOI 10.1109/SDNE.1995.470453
   PARLAVANTAS N, 2000, P WORKSH REFL MET AR
   Postel Jon., 1981, Information RFC 793
   Smith B. C., 1984, P 11 ACM SIGACT SIGP, P23, DOI [DOI 10.1145/800017.800513, 10.1145/800017.800513]
   SMITH W, 2001, GWDPERF82 GLOB GRID
   Thai T., 1999, LEARNING DCOM
NR 19
TC 96
Z9 106
U1 0
U2 8
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD DEC
PY 2003
VL 29
IS 12
BP 1072
EP 1085
DI 10.1109/TSE.2003.1265522
PG 14
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 751PJ
UT WOS:000187075900003
DA 2024-07-18
ER

PT J
AU Satoh, I
AF Satoh, I
TI A testing framework for mobile computing software
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE testing; mobile computing; mobile agent; network-dependent application
AB We present a framework for testing applications for mobile computing devices. When a device is moved into and attached to a new network, the proper functioning of applications running on the device often depends on the resources and services provided locally in the current network. This framework provides an application-level emulator for mobile computing devices to solve this problem. Since the emulator is constructed as a mobile agent, it can carry applications across networks on behalf of its target device and allow the applications to connect to local servers in its current network in the same way as if they had been moved with and executed on the device itself. This paper also demonstrates the utility of this framework by describing the development of typical network-dependent applications in mobile and ubiquitous computing settings.
C1 Natl Inst Informat, Chiyoda Ku, Tokyo 1018430, Japan.
C3 Research Organization of Information & Systems (ROIS); National
   Institute of Informatics (NII) - Japan
RP Satoh, I (corresponding author), Natl Inst Informat, Chiyoda Ku, 2-1-2 Hitotsubashi, Tokyo 1018430, Japan.
EM ichiro@nii.ac.jp
CR Abowd GD, 1997, WIREL NETW, V3, P421, DOI 10.1023/A:1019194325861
   Arnold K., 1999, JINI SPECIFICATION
   Cheverst K., 2000, P ACM C MOBILE COMPU, P20, DOI DOI 10.1145/345910.345916
   Davies N., 1995, P USENIX S MOB LOC I
   Fuggetta Alfonso., 1998, IEEE Trans. Softw. Eng, V24
   *INT BUS MACH CORP, 1998, REM ABSTR WIND TOOLK
   JING J, 1999, ACM COMPUTING SURVEY
   KANGAS K, 1999, P C MOB COMP NETW MO, P48
   Lange B.D., 1998, Programming and Deploying Java Mobile Agents with Aglets
   LE M, 1994, P WORKSH MOB WIR INF
   *MICR CORP, 2000, UN PLUG PLAY DEV ARC
   MINAR N, 2000, P S AG SYST APPL S M
   Nakajima T, 2002, 2002 SYMPOSIUM ON APPLICATIONS AND THE INTERNET (SAINT 2002), PROCEEDINGS, P246, DOI 10.1109/SAINT.2002.994487
   Noble Brian, 1997, P ACM S OP SYST PRIN P ACM S OP SYST PRIN
   PERKINS C, 1996, 2002 RFC
   Roman Gruia-Catalin., 2000, P 22 INT C SOFTWARE, P241
   Satoh I., 2000, Proceedings 20th IEEE International Conference on Distributed Computing Systems, P161, DOI 10.1109/ICDCS.2000.840918
   SATOH I, 2001, CLUSTER COMPUTING AJ, V7
   SATOH I, 2001, P C MOB AG MA 01 DEC
   SATOH I, 2000, P S AG SYST APPL S M
   SATOH I, 2002, P C MOB AG MA 02 OCT
NR 21
TC 65
Z9 76
U1 0
U2 4
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD DEC
PY 2003
VL 29
IS 12
BP 1112
EP 1121
DI 10.1109/TSE.2003.1265525
PG 10
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 751PJ
UT WOS:000187075900006
DA 2024-07-18
ER

PT J
AU Bailey, MW
   Davidson, JW
AF Bailey, MW
   Davidson, JW
TI Automatic detection and diagnosis of faults in generated code for
   procedure calls
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE target-sensitive test suite generation; automatic fault isolation;
   procedure-calling convention; code generation; compiler testing and
   debugging
AB In this paper, we present a compiler testing technique that closes the gap between existing compiler implementations and correct compilers. Using formal specifications of procedure-calling conventions, we have built a target-sensitive test suite generator that builds test cases for a specific aspect of compiler code generators: the procedure-calling sequence generator. By exercising compilers with these specification-derived target-specific test suites, our automated testing tool has exposed bugs in every compiler tested on the MIPS and one compiler on the SPARC. These compilers include some that have been in heavy use for many years. Once a fault has been detected, the system can often suggest the nature of the problem. The testing system is an invaluable tool for detecting, isolating, and correcting faults in today's compilers.
C1 Hamilton Coll, Dept Comp Sci, Clinton, NY 13323 USA.
   Univ Virginia, Dept Comp Sci, Charlottesville, VA 22904 USA.
C3 Hamilton College; University of Virginia
RP Hamilton Coll, Dept Comp Sci, 198 Coll Hill Rd, Clinton, NY 13323 USA.
EM mbailey@hamilton.edu; jwd@virginia.edu
RI Bailey, Mark W/A-3148-2008
CR AHO AV, 1991, IEEE T COMMUN, V39, P1604, DOI 10.1109/26.111442
   APPEL AW, 1996, COMMUNICATION    MAY
   BAILEY MW, 1995, POPL 95 22 ACM SIGPL, P298
   BENITEZ ME, 1988, P SIGPLAN 88 C PROGR, P329
   Fraser Christopher W., 1995, A retargetable C compiler: Design and implementation
   FRASER CW, 1991, SOFTWARE PRACT EXPER, V21, P963, DOI 10.1002/spe.4380210906
   FUJIWARA S, 1991, IEEE T SOFTWARE ENG, V17, P591, DOI 10.1109/32.87284
   Hennie F.C., 1964, Proc. 5th Ann. Symp. Switch. Theory and Logical Design, P95
   HO RC, 1995, ACM COMP AR, P404, DOI 10.1109/ISCA.1995.524579
   Hopcroft J.E., 1979, Introduction to Automata Theory, Languages, and Computation
   JOHNSON SC, 1981, 102 BELL LABS
   JOHNSON WL, 1968, COMMUN ACM, V11, P805, DOI 10.1145/364175.364185
   Kernighan B.W., 1988, The C Programming Language
   Kohavi Z., 1978, Switching and Finite Automata Theory, Vsecond
   MEALY GH, 1955, AT&T TECH J, V34, P1045, DOI 10.1002/j.1538-7305.1955.tb03788.x
   Muller T., 1993, Proceedings of the 26th Annual International Symposium on Microarchitecture (Cat. No.93TH0602-3), P12, DOI 10.1109/MICRO.1993.282761
   PROEBSTING TA, 1994, POPL 94 21 ACM SIGPL, P280
   SIDHU DP, 1989, IEEE T SOFTWARE ENG, V15, P413, DOI 10.1109/32.16602
   STALLMAN RM, 1992, USING PORTING GNU CC
   WEAVER GE, 1997, 9758 U MASS DEP COMP
   YANNAKAKIS M, 1995, J COMPUT SYST SCI, V50, P209, DOI 10.1006/jcss.1995.1019
NR 21
TC 6
Z9 7
U1 0
U2 3
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD NOV
PY 2003
VL 29
IS 11
BP 1031
EP 1042
DI 10.1109/TSE.2003.1245304
PG 12
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 740KU
UT WOS:000186402200007
DA 2024-07-18
ER

PT J
AU Lanza, M
   Ducasse, S
AF Lanza, M
   Ducasse, S
TI Polymetric views - A lightweight visual approach to reverse engineering
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE reverse engineering; object-oriented programming; software
   visualization; software metrics
ID DESIGN; LEGACY
AB Reverse engineering software systems has become a major concern in software industry because of their sheer size and complexity. This problem needs to be tackled since the systems in question are of considerable worth to their owners and maintainers. In this article, we present the concept of a polymetric view, a lightweight software visualization technique enriched with software metrics information. Polymetric views help to understand the structure and detect problems of a software system in the initial phases of a reverse engineering process. We discuss the benefits and limits of several predefined polymetric views we have implemented in our tool CodeCrawler. Moreover, based on clusters of different polymetric views, we have developed a methodology which supports and guides a software engineer in the first phases of a reverse engineering of a large software system. We have refined this methodology by repeatedly applying it on industrial systems and illustrate it by applying a selection of polymetric views to a case study.
C1 Univ Bern, Inst Informat & Angew Math, Software Composit Grp, CH-3012 Bern, Switzerland.
C3 University of Bern
RP Univ Bern, Inst Informat & Angew Math, Software Composit Grp, Neubruckstr 10, CH-3012 Bern, Switzerland.
EM Lanza@iam.unibe.ch; ducasse@iam.unibe.ch
RI Lanza, Michele/JNQ-9470-2023
OI Lanza, Michele/0000-0003-4391-0197; Ducasse,
   Stephane/0000-0001-6070-6599
CR [Anonymous], 1999, GRAPH DRAWING ALGORI
   [Anonymous], PRINCIPLES SOFTWARE
   Beck Kent, 1997, SMALLTALK BEST PRACT
   Brown M. H., 1991, Proceedings. 1991 IEEE Workshop on Visual Languages (Cat. No.91TH0402-8), P4, DOI 10.1109/WVL.1991.238857
   CARD SK, 1999, READINGS INFORMATION
   Casais E, 1998, J OBJECT-ORIENT PROG, V10, P45
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   CHIKOFSKY EJ, 1990, IEEE SOFTWARE, V7, P13, DOI 10.1109/52.43044
   CONSENS M, 1993, P 1993 ACM SIGMOD IN, V22, P511
   Cooper Alan, 2014, About Face: The Essentials of Interaction Design, V4th
   Demeyer S., 2001, FAMIX 2 1 FAMOOS INF
   Demeyer S., 1999, P LMO 99 LANG MOD OB, P69
   DEMEYER S, 1999, P 2 INT C UN MOD LAN
   Demeyer S., 2002, Object-Oriented Reengineering Patterns
   Demeyer Serge, 1999, P 6 WORK C REV ENG W
   Ducasse S., 2001, Technique et Science Informatiques, V20, P539
   Ducasse S., 1999, Proceedings IEEE International Conference on Software Maintenance - 1999 (ICSM'99). `Software Maintenance for Business Change' (Cat. No.99CB36360), P109, DOI 10.1109/ICSM.1999.792593
   DUCASSE S, 2000, P 2 INT S CONSTR SOF
   DUCASSE S, 1999, FAMOOS OBJECT ORIENT
   DUCASSE S, 2000, BEOC ANAL REPORT
   EICK SG, 1992, IEEE T SOFTWARE ENG, V18, P957, DOI 10.1109/32.177365
   Fenton N., 1996, SOFTWARE METRICS RIG, VSecond
   FIORAVANTI F, 1998, P INT C SOFTW ENG IC
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   GAMMA E, 1995, DESIGN PATTERNS
   Henderson-Sellers B., 1996, Object-Oriented Metrics, measures of complexity
   Jerding DF, 1997, PROC INT CONF SOFTW, P360, DOI 10.1145/253228.253356
   JOHNSON RE, 1992, P C OBJ OR PROGR SYS, P63
   Kleyn M.F., 1988, PROC OOPSLA, P191
   KLIMAS EJ, 1996, SMALLTALK STYLE
   LANGE DB, 1995, P OOPSLA 95, P342
   LANZA M, 1999, THESIS U BERN
   LANZA M, 2001, P OOPSLA 2001, P300
   LEWERENTZ C, 1998, P OBJ OR TECHN EC 98
   LITTMAN D, 1996, EMPIRICAL STUDIES PR, P80
   LORENZ M, 1994, OBJECT ORIENTATED SO
   PARNAS DL, 1994, P INT C SOFTW ENG
   PAUW WD, 1993, P OOPSLA, P326
   PETRE M, 1995, COMMUN ACM, V38, P33, DOI 10.1145/203241.203251
   Price B. A., 1993, Journal of Visual Languages and Computing, V4, P211, DOI 10.1006/jvlc.1993.1015
   REISS SP, 1990, SOFTWARE PRACT EXPER, V20, pS89, DOI 10.1002/spe.4380201308
   Richner T., 1999, Proceedings IEEE International Conference on Software Maintenance - 1999 (ICSM'99). `Software Maintenance for Business Change' (Cat. No.99CB36360), P13, DOI 10.1109/ICSM.1999.792487
   Riel AJ., 1996, Object-Oriented Design Heuristics
   Rilling J, 2002, NINTH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P299, DOI 10.1109/WCRE.2002.1173087
   Roberts KC, 1997, MICROCIRCULATION-LON, V4, P253, DOI 10.3109/10739689709146788
   Rugaber S, 1998, IEEE SOFTWARE, V15, P28, DOI 10.1109/52.687941
   Sommerville I., 2000, Software Engineering, V6
   Stasko J.T., 1998, SOFTWARE VISUALIZATI
   STASKO JT, 1990, COMPUTER, V23, P27, DOI [10.1109/2.58216, 10.1145/379088.1046618]
   Storey MAD, 1999, J SYST SOFTWARE, V44, P171, DOI 10.1016/S0164-1212(98)10055-9
   STOREY MAD, 1995, P 1995 INT C SOFTW M
   TICHELAAR S, 2001, THESIS U BERNE
   Tilley S. R., 1993, Proceedings. Conference on Software Maintenance 1993. CSM-93 (Cat. No.93CH3360-5), P142, DOI 10.1109/ICSM.1993.366948
   vonMayrhauser A, 1996, IEEE T SOFTWARE ENG, V22, P424, DOI 10.1109/32.508315
   WARE C, 2000, INFORMATION VISUALIZ
NR 55
TC 205
Z9 216
U1 0
U2 11
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD SEP
PY 2003
VL 29
IS 9
BP 782
EP 795
DI 10.1109/TSE.2003.1232284
PG 14
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 719EY
UT WOS:000185191700002
DA 2024-07-18
ER

PT J
AU Xu, SW
   Chee, YS
AF Xu, SW
   Chee, YS
TI Transformation-based diagnosis of student programs for programming
   tutoring systems
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE automatic program diagnosis; programming tutoring systems; program
   representation; program transformation; program comparison; program
   matching
AB A robust technology that automates the diagnosis of students' programs is essential for programming tutoring systems. Such technology should be able to determine whether programs coded by a student are correct. If a student's program is incorrect, the system should be able to pinpoint errors in the program as well as explain and correct the errors. Due to the difficulty of this problem, no existing system performs this task entirely satisfactorily, and this problem still hampers the development of programming tutoring systems. This paper describes a transformation-based approach to automate the diagnosis of students' programs for programming tutoring systems. Improved control-flow analysis and data-flow analysis are used in program analysis. Automatic diagnosis of student programs is achieved by comparing the student program with a specimen program at the semantic level after both are standardized. The approach was implemented and tested on 525 real student programs for nine different programming tasks. Test results show that the method satisfies the requirements stated above. Compared to other existing approaches to automatic diagnosis of student programs, the approach developed here is more rigorous and safer in identifying student programming errors. It is also simpler to make use of in practice. Only specimen programs are needed for the diagnosis of student programs. The techniques of program standardization and program comparison developed here may also be useful for research in the fields of program understanding and software maintenance.
C1 Peoplesoft Inc, Santa Clara, CA 95054 USA.
   Natl Univ Singapore, Sch Comp, Singapore 117543, Singapore.
C3 National University of Singapore
RP Peoplesoft Inc, 2525 Augustine Dr, Santa Clara, CA 95054 USA.
EM songwen_xu@peoplesoft.com; cheeys@comp.nus.edu.sg
CR Abd-El-Hafiz S.K., 1995, KNOWLEDGE BASED APPR
   ADAM A, 1980, ARTIF INTELL, V15, P75, DOI 10.1016/0004-3702(80)90023-5
   ALLEMANG D, 1991, IEEE EXPERT, V6, P13, DOI 10.1109/64.108947
   ANDERSON JR, 1984, COGNITIVE SCI, V8, P87, DOI 10.1016/S0364-0213(84)80013-0
   ELSOMCOOK M, 1988, ARTIF INTELL, P361
   FERRANTE J, 1987, ACM T PROGR LANG SYS, V9, P319, DOI 10.1145/24039.24041
   GEGGHARRISON TS, 1994, ARTIF INTELL, V5, P255
   Goldberg A., 1983, Smalltalk 80: The Language and Its Implementation
   HAHN JS, 1997, AUTOMATIC SOFTWARE E, V4, P439
   Hattori N, 1996, INFORM SOFTWARE TECH, V38, P25, DOI 10.1016/0950-5849(95)01042-4
   Hopcroft J.E., 1979, Introduction to Automata Theory, Languages, and Computation
   HORWITZ S, 1990, SIGPLAN NOTICES, V25, P234, DOI 10.1145/93548.93574
   JACKSON D, 1994, INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE, PROCEEDINGS, P243, DOI 10.1109/ICSM.1994.336770
   JOHNSON WL, 1985, IEEE T SOFTWARE ENG, V11, P267, DOI 10.1109/TSE.1985.232210
   KOZACZYNSKI W, 1992, IEEE T SOFTWARE ENG, V18, P1065, DOI 10.1109/32.184761
   LEMUT E, 1992, COGNITIVE MODELS INT
   LOOI CK, 1991, INSTR SCI, V20, P215, DOI 10.1007/BF00120883
   LOVEMAN DB, 1977, J ACM, V24, P121, DOI 10.1145/321992.322000
   McGregor J. D., 1996, Annals of Software Engineering, V2, P51, DOI 10.1007/BF02063806
   Muchnick S., 1997, ADV COMPILER DESIGN
   Murray W., 1988, AUTOMATIC PROGRAM DE
   PETTOROSSI A, 1994, J LOGIC PROGRAM, V20, P261, DOI 10.1016/0743-1066(94)90028-0
   RICH C, 1990, IEEE SOFTWARE, V7, P82, DOI 10.1109/52.43053
   Shapiro EY., 1983, Algorithmic Program Debugging
   Thorburn G, 1997, COMPUT EDUC, V29, P195, DOI 10.1016/S0360-1315(97)00021-3
   UENO H, 1995, IEICE T INF SYST, VE78D, P1108
   YANG X, 1992, ANN PHYS-LEIPZIG, V1, P3, DOI 10.1002/andp.19925040103
NR 27
TC 39
Z9 47
U1 4
U2 8
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD APR
PY 2003
VL 29
IS 4
BP 360
EP 384
DI 10.1109/TSE.2003.1191799
PG 25
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 664PT
UT WOS:000182070000006
DA 2024-07-18
ER

PT J
AU Egyed, A
AF Egyed, A
TI A scenario-driven approach to trace dependency analysis
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article; Proceedings Paper
CT 23rd International Conference on Software Engineering (ICSE 2001)
CY MAY 12-19, 2001
CL TORONTO, CANADA
SP IEEE Comp Soc, IEEE Comp Soc, Tech Council Software Engn, Assoc Comp Machinery, ACM SIGSOFT Special Interest Grp Software Engn, ACM SIGSOFT Special Interest Grp Programming Languages, ACD Syst, Alberta Software Engn Res Consortium, Avaya Commun, Bell Canada, Canada Natl Res Council Canada, Cisco Syst, Commun & Informat Technol Ontario, IBM Toronto Lab, Alberta Informat Circle Res Excellence, MacDonald Dettwiler, Microsoft Res, Nokia, Rational Software, Software Product Ctr Inc, Sun Microsyst
DE traceability; test scenarios; software. models; Unified Modeling
   Language (UML)
ID REQUIREMENTS
AB Software development artifacts-such as model descriptions, diagrammatic languages, abstract (formal) specifications, and source code-are highly interrelated where changes in some of them affect others. Trace dependencies characterize such relationships abstractly. This paper presents an automated approach to generating and validating trace dependencies. It addresses the severe problem that the absence of trace information or the uncertainty of its correctness limits the usefulness of software models during software development. It also automates what is normally a time consuming and costly activity due to the quadratic explosion of potential trace dependencies between development artifacts.
C1 Teknowledge Corp, Marina Del Rey, CA 90292 USA.
C3 Teknowledge Corporation
RP Teknowledge Corp, 4640 Admiralty Way,Suite 231, Marina Del Rey, CA 90292 USA.
EM aegyed@ieee.org
RI Egyed, Alexander/E-2632-2017
OI Egyed, Alexander/0000-0003-3128-5427
CR ABIANTOUN M, 1999, INTERLIBRARY LOAN MA
   ANTONIOL G, 1998, P IEEE INT C SOFTW M
   Boehm B, 1998, COMPUTER, V31, P33, DOI 10.1109/2.689675
   Boehm BW., 2000, SOFTWARE COST ESTIMA, VII
   Booch Grady, 1999, UNIFIED MODELING LAN, DOI DOI 10.1007/3-540-40011-7_10
   CLARKE S, 1998, P 1999 ACM SIGPLAN C, P325
   Egyed A, 2002, ASE 2002: 17TH IEEE INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, P163, DOI 10.1109/ASE.2002.1115010
   EGYED AF, 2000, THESIS U SO CALIFORN
   Gotel O. C. Z., 1994, Proceedings of the First International Conference on Requirements Engineering (Cat. No.94TH0613-0), P94, DOI 10.1109/ICRE.1994.292398
   Graham Dorothy., 1999, Software Test Automation: Effective Use of Test Execution Tools
   HAUMER P, 1999, P 32 ANN HAW INT C S
   Hughes T, 1998, FOURTH ANNUAL SYMPOSIUM ON HUMAN INTERACTION WITH COMPLEX SYSTEMS, PROCEEDINGS, P37, DOI 10.1109/HUICS.1998.659952
   JACKSON J, 1991, IEE C TOOLS TECHN MA
   KHRISS I, 1998, P C UN MOD LANG JUN
   Koskimies K, 1998, IEEE SOFTWARE, V15, P87, DOI 10.1109/52.646888
   Lange DB, 1997, COMPUTER, V30, P63, DOI 10.1109/2.589912
   Murphy G.C., 1995, Proceedings of the 3rd ACM SIGSOFT symposium on Foundations of software engineering, P18
   Pinheiro FAC, 1996, IEEE SOFTWARE, V13, P52, DOI 10.1109/52.506462
   Rumbaugh James, 1999, The unified modeling language reference manual
   SNELTING G, 1998, P ACM SIGSOFT S FDN, P99, DOI DOI 10.1145/288195.288273
   Tarr P., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P107, DOI 10.1109/ICSE.1999.841000
   WATKINS R, 1994, IEEE SOFTWARE, V11, P104, DOI 10.1109/52.300100
NR 22
TC 67
Z9 88
U1 1
U2 9
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD FEB
PY 2003
VL 29
IS 2
BP 116
EP 132
DI 10.1109/TSE.2003.1178051
PG 17
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Engineering
GA 644EB
UT WOS:000180904000003
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Xu, DX
   Yin, JW
   Deng, Y
   Ding, JH
AF Xu, DX
   Yin, JW
   Deng, Y
   Ding, JH
TI A formal architectural model for logical agent mobility
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE mobile agent; mobility; modeling; predicate/transition net; Petri net;
   software architecture
ID SPECIFICATION
AB The process of agent migration is the major difference between logical code mobility of software agents and physical mobility of mobile nodes in ad hoc networks. Without considering agent transfer, it would make little sense to mention the modeling of strong code mobility, which aims to make a migrated agent restarted exactly from the state when it was stopped before migration. From the perspective of system's architecture, this paper proposes a two-layer approach for the formal modeling of logical agent mobility (LAM) using predicate/transition (PrT) nets. We view a mobile agent system as a set of agent spaces and agents could migrate from one space to another. Each agent space is explicitly abstracted to be a component, consisting of an environmental part and an internal connector dynamically binding agents with their environment. We use a system net, agent nets, and a connector net to model the environment, agents, and the connector, respectively. In particular, agent nets are packed up as parts of tokens in system nets, so that agent transfer and location change are naturally captured by transition firing (token game) in Petri nets. Agent nets themselves are active only at specific places and disabled at all the other places in a system net. The semantics of such a two-layer LAM model is defined by transforming it into a PrT net. This facilitates the analysis of several properties about location, state, and connection. In addition, this paper also presents a case study of modeling and analyzing an information retrieval system with mobile agents.
C1 Texas A&M Univ, Dept Comp Sci, College Stn, TX 77843 USA.
   Dell Comp Corp, Enterprise Servers Grp, Austin, TX 78682 USA.
   Florida Int Univ, Sch Comp Sci, Miami, FL 33199 USA.
C3 Texas A&M University System; Texas A&M University College Station; State
   University System of Florida; Florida International University
RP Texas A&M Univ, Dept Comp Sci, College Stn, TX 77843 USA.
EM xudian@cs.tamu.edu; jianwen_yin@dell.com; deng@cs.fiu.edu;
   jding01@cs.fiu.edu
CR ALLEN R, 1998, P C FUND APPR SOFTW
   Asperti A., 1996, UBLCS9610
   Blum AL, 1997, ARTIF INTELL, V90, P281, DOI 10.1016/S0004-3702(96)00047-1
   Carzaniga A, 1997, PROC INT CONF SOFTW, P22, DOI 10.1145/253228.253236
   FOURNET C, 1996, P 7 INT C CONC THEOR, P406
   Fuggetta A, 1998, IEEE T SOFTWARE ENG, V24, P342, DOI 10.1109/32.685258
   GENESERETH MR, 1994, COMMUN ACM, V37, P48, DOI 10.1145/176789.176794
   GENRICH HJ, 1987, LECT NOTES COMPUT SC, V254, P207
   GENRICH HJ, 1981, THEOR COMPUT SCI, V13, P109, DOI 10.1016/0304-3975(81)90113-4
   Gray R.S., 2001, Handbook of Agent Technology
   Harrison C.G., 1995, MOBILE AGENTS ARE TH
   HE X, 1999, P 11 INT C SOFTW ENG
   Holvoet T, 1998, PARALLEL COMPUT, V24, P1107, DOI 10.1016/S0167-8191(98)00044-1
   HUBER P, 1985, ADV PETRINETS, P215
   INVERARDI P, 1995, IEEE T SOFTWARE ENG, V21, P373, DOI 10.1109/32.385973
   KARNIK NM, 1998, IEEE CONCURRENCY JUL, P52
   Lakos C., 1994, Application and Theory of Petri Nets 1994. 15th International Conference. Proceedings, P338
   LANGE B, 1998, P EUR C OBJ OR PROGR
   LINDQVIST M, 1990, P 11 INT C APPL THEO
   MASCOLO C, 1999, P 7 EUR SOFTW ENG C
   MASCOLO C, 1999, P 3 INT C COORD MOD, P37
   McCann PJ, 1998, IEEE T SOFTWARE ENG, V24, P97, DOI 10.1109/32.666824
   Moldt D, 1997, LECT NOTES COMPUT SC, V1248, P82
   MURATA T, 1989, P IEEE, V77, P541, DOI 10.1109/5.24143
   Oliver J., 1998, PI1163 INRIA
   PICCO GP, 1999, P 21 INT C SOFTW ENG
   Roman G.-C., 1997, ACM Transactions on Software Engineering and Methodology, V6, P250, DOI 10.1145/258077.258079
   SEKIGUCHI T, 1997, P FORM METH OP OBJ B
   SERUGENDO D, 1998, WORLD WIDE WEB, V1, P139
   SHAW M, 1996, SOFTWARE ACHITECTURE
   TROYA JM, 1998, P WORKSH REFL OO PRO
   Valk R, 1998, LECT NOTES COMPUT SC, V1420, P1
   VALK R, 1978, P INT C AUT LANG PRO, P464
   Wang J, 1999, INFORM SOFTWARE TECH, V41, P451, DOI 10.1016/S0950-5849(99)00009-9
   Wermelinger M, 1998, IEEE T SOFTWARE ENG, V24, P331, DOI 10.1109/32.685257
   Xu D., 2002, Proceedings of the 14th International Conference on Software Engineering and Knowledge Engineering, P193
   Xu DX, 1998, INFORM SOFTWARE TECH, V40, P435, DOI 10.1016/S0950-5849(98)00061-5
   Xu DX, 2000, IEEE SYS MAN CYBERN, P3177, DOI 10.1109/ICSMC.2000.886486
NR 38
TC 42
Z9 44
U1 0
U2 6
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JAN
PY 2003
VL 29
IS 1
BP 31
EP 45
DI 10.1109/TSE.2003.1166587
PG 15
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 633GD
UT WOS:000180273500003
DA 2024-07-18
ER

PT J
AU Liu, BH
   Zhang, H
   Ma, WG
   Li, GY
   Li, SS
   Shen, HF
AF Liu, Bohan
   Zhang, He
   Ma, Weigang
   Li, Gongyuan
   Li, Shanshan
   Shen, Haifeng
TI The <i>Why</i>, <i>When</i>, <i>What,</i> and <i>How</i> About
   Predictive Continuous Integration: A Simulation-Based Investigation
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Software; Costs; Servers; Testing; Machine learning; Codes; Surveys;
   Continuous integration; machine learning; software process simulation;
   discrete-event simulation
AB Continuous Integration (CI) enables developers to detect defects early and thus reduce lead time. However, the high frequency and long duration of executing CI have a detrimental effect on this practice. Existing studies have focused on using CI outcome predictors to reduce frequency. Since there is no reported project using predictive CI, it is difficult to evaluate its economic impact. This research aims to investigate predictive CI from a process perspective, including why and when to adopt predictors, what predictors to be used, and how to practice predictive CI in real projects. We innovatively employ Software Process Simulation to simulate a predictive CI process with a Discrete-Event Simulation (DES) model and conduct simulation-based experiments. We develop the Rollback-based Identification of Defective Commits (RIDEC) method to account for the negative effects of false predictions in simulations. Experimental results show that: 1) using predictive CI generally improves the effectiveness of CI, reducing time costs by up to 36.8% and the average waiting time before executing CI by 90.5%; 2) the time-saving varies across projects, with higher commit frequency projects benefiting more; and 3) predictor performance does not strongly correlate with time savings, but the precision of both failed and passed predictions should be paid more attention. Simulation-based evaluation helps identify overlooked aspects in existing research. Predictive CI saves time and resources, but improved prediction performance has limited cost-saving benefits. The primary value of predictive CI lies in providing accurate and quick feedback to developers, aligning with the goal of CI.
C1 [Liu, Bohan; Zhang, He; Ma, Weigang; Li, Gongyuan; Li, Shanshan] Nanjing Univ, Software Inst, State Key Lab Novel Software Technol, Nanjing 210093, Jiangsu, Peoples R China.
   [Shen, Haifeng] Australian Catholic Univ, Peter Faber Business Sch, Sydney, NSW 2060, Australia.
C3 Nanjing University; Australian Catholic University
RP Zhang, H (corresponding author), Nanjing Univ, Software Inst, State Key Lab Novel Software Technol, Nanjing 210093, Jiangsu, Peoples R China.
EM dg1732003@smail.nju.edu.cn; hezhang@nju.edu.cn;
   mf21320110@smail.nju.edu.cn; gyli@smail.nju.edu.cn; lss@nju.edu.cn;
   Haifeng.Shen@acu.edu.au
RI Shan-Shan, Li/Q-9503-2017; Li, Gongyuan/KBC-1669-2024
OI ma, wei gang/0009-0002-6353-2322
FU National Natural Science Foundation of China
FX No Statement Available
CR Abdalkareem R, 2021, IEEE T SOFTWARE ENG, V47, P2740, DOI 10.1109/TSE.2020.2967380
   Abdalkareem R, 2021, IEEE T SOFTWARE ENG, V47, P448, DOI 10.1109/TSE.2019.2897300
   Abdel-Hamid T., 1991, SOFTWARE PROJECT DYN
   Baum T, 2017, J SOFTW-EVOL PROC, V29, DOI 10.1002/smr.1865
   Beller M, 2017, IEEE WORK CONF MIN S, P447, DOI 10.1109/MSR.2017.24
   Bohan Liu, 2020, EASE2020. Proceedings of the Evaluation and Assessment in Software Engineering, P21, DOI 10.1145/3383219.3383222
   Borshchev A., 2004, P 22 INT C SYST DYN, V22, P25
   Brabec J, 2020, LECT NOTES COMPUT SC, V12140, P74, DOI 10.1007/978-3-030-50423-6_6
   Breiman L, 2001, MACH LEARN, V45, P5, DOI 10.1023/A:1010933404324
   BREIMAN L., 1984, Classificationand regression trees
   Breunig MM, 2000, SIGMOD REC, V29, P93, DOI 10.1145/335191.335388
   Chen BH, 2020, IEEE INT CONF AUTOM, P42, DOI 10.1145/3324884.3416616
   Chen TQ, 2016, KDD'16: PROCEEDINGS OF THE 22ND ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P785, DOI 10.1145/2939672.2939785
   Concas G, 2013, J SOFTW-EVOL PROC, V25, P1225, DOI 10.1002/smr.1599
   Bahnsen AC, 2015, Arxiv, DOI arXiv:1505.04637
   Dai Q., 2021, Master's dissertation
   Di Penta M, 2011, SOFTWARE PRACT EXPER, V41, P495, DOI 10.1002/spe.1001
   Downs J, 2012, PROC INT CONF SOFTW, P507, DOI 10.1109/ICSE.2012.6227165
   Falleri Jean-Remy, 2014, P 29 ACM IEEE INT C, P313
   Felderer M., 2020, Contemporary Empirical Methods in Software Engineering, P1
   Finlay J, 2014, INFORM SOFTWARE TECH, V56, P183, DOI 10.1016/j.infsof.2013.09.001
   Fowler Martin., 2009, Martin Fowler
   Gao C., 2014, P INT C SOFTW SYST P, P50
   Gao C., 2015, PROC INT C SOFTW SYS, P157
   Garousi V, 2016, J SOFTW-EVOL PROC, V28, P272, DOI 10.1002/smr.1758
   Ghaleb TA, 2019, EMPIR SOFTW ENG, V24, P2102, DOI 10.1007/s10664-019-09695-9
   Gong HJ, 2017, ICSSP'17: PROCEEDINGS OF THE 2017 INTERNATIONAL CONFERENCE ON SOFTWARE AND SYSTEM PROCESS, P50, DOI 10.1145/3084100.3084106
   Hassan AE, 2006, IEEE INT CONF AUTOM, P189
   Hassan F, 2017, INT SYMP EMP SOFTWAR, P157, DOI 10.1109/ESEM.2017.23
   Hilton M, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P197, DOI 10.1145/3106237.3106270
   Hilton M, 2016, IEEE INT CONF AUTOM, P426, DOI 10.1145/2970276.2970358
   Jeni LA, 2013, INT CONF AFFECT, P245, DOI 10.1109/ACII.2013.47
   Jin XH, 2021, PROC INT CONF SOFTW, P213, DOI 10.1109/ICSE43902.2021.00031
   Jin XH, 2020, PROC INT CONF SOFTW, P13, DOI 10.1145/3377811.3380437
   Kellner MI, 1999, J SYST SOFTWARE, V46, P91, DOI 10.1016/S0164-1212(99)00003-5
   Kitchenham BA, 2005, INFORM SOFTWARE TECH, V47, P747, DOI 10.1016/j.infsof.2004.05.005
   Laukkanen E, 2017, INFORM SOFTWARE TECH, V82, P55, DOI 10.1016/j.infsof.2016.10.001
   Laurikkala J, 2001, LECT NOTES ARTIF INT, V2101, P63, DOI 10.1007/3-540-48229-6_9
   Liu B., Cisimulator
   Liu BH, 2016, ASIA PAC SOFWR ENG, P225, DOI [10.1109/APSEC.2016.040, 10.1109/APSEC.2016.56]
   Louppe Gilles, 2012, Machine Learning and Knowledge Discovery in Databases. Proceedings of the European Conference (ECML PKDD 2012), P346, DOI 10.1007/978-3-642-33460-3_28
   Maria A, 1997, PROCEEDINGS OF THE 1997 WINTER SIMULATION CONFERENCE, P7, DOI 10.1145/268437.268440
   MASSEY FJ, 1951, J AM STAT ASSOC, V46, P68, DOI 10.2307/2280095
   METROPOLIS N, 1949, J AM STAT ASSOC, V44, P335, DOI 10.2307/2280232
   Neu H, 2002, LECT NOTES COMPUT SC, V2559, P78
   Ni AS, 2017, IEEE WORK CONF MIN S, P455, DOI 10.1109/MSR.2017.26
   Raffo DM, 2000, J SYST SOFTWARE, V53, P31, DOI 10.1016/S0164-1212(00)00006-6
   Rasmusson J, 2004, LECT NOTES COMPUT SC, V3134, P13
   Rausch T, 2017, IEEE WORK CONF MIN S, P345, DOI 10.1109/MSR.2017.54
   Richardson G., 1981, INTRO SYSTEM DYNAMIC
   Rogers RO, 2004, LECT NOTES COMPUT SC, V3092, P68
   Saidani I, 2020, INFORM SOFTWARE TECH, V128, DOI 10.1016/j.infsof.2020.106392
   Sánchez PJ, 2006, Proceedings of the 2006 Winter Simulation Conference, Vols 1-5, P2, DOI 10.1109/WSC.2006.323033
   Schroter A., 2010, 2010 32nd International Conference on Software Engineering (ICSE), P511, DOI 10.1145/1810295.1810456
   Smith MR, 2014, MACH LEARN, V95, P225, DOI 10.1007/s10994-013-5422-z
   Stahl Daniel, 2013, P 2013 12 IASTED INT, P736
   Vasilescu B, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P805, DOI 10.1145/2786805.2786850
   von Rueden L, 2020, LECT NOTES COMPUT SC, V12080, P548, DOI 10.1007/978-3-030-44584-3_43
   Wolf T, 2009, PROC INT CONF SOFTW, P1, DOI 10.1109/ICSE.2009.5070503
   Xia J, 2017, 2017 14TH WEB INFORMATION SYSTEMS AND APPLICATIONS CONFERENCE (WISA 2017), P234, DOI 10.1109/WISA.2017.53
   Xia J, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY AND SECURITY COMPANION (QRS-C), P311, DOI 10.1109/QRS-C.2017.59
   Xie Z, 2018, PROCEEDINGS OF THE TWENTY-SEVENTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P2875
   Zeiml S, 2019, WINT SIMUL C PROC, P2119, DOI 10.1109/WSC40007.2019.9004876
   Zhang H, 2010, LECT NOTES COMPUT SC, V6195, P309, DOI 10.1007/978-3-642-14347-2_27
NR 64
TC 0
Z9 0
U1 0
U2 2
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD DEC
PY 2023
VL 49
IS 12
BP 5223
EP 5249
DI 10.1109/TSE.2023.3330510
PG 27
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA CL0K1
UT WOS:001125287400009
DA 2024-07-18
ER

PT J
AU Imtiaz, N
   Williams, L
AF Imtiaz, Nasif
   Williams, Laurie
TI Are Your Dependencies Code Reviewed?: Measuring Code Review Coverage in
   Dependency Updates
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Review
DE Codes; Phantoms; Software; Software development management; Source
   coding; Security; Supply chains; Software supply chain security; open
   source security; dependency analysis
AB As modern software extensively uses free open source packages as dependencies, developers have to regularly pull in new third-party code through frequent updates. However, without a proper review of every incoming change, vulnerable and malicious code can sneak into the codebase through these dependencies. The goal of this study is to aid developers in securely accepting dependency updates by measuring if the code changes in an update have passed through a code review process. We implement Depdive, an update audit tool for packages in Crates.io, npm, PyPI, and RubyGems registry. Depdive first (i) identifies the files and the code changes in an update that cannot be traced back to the package's source repository, i.e., phantom artifacts; and then (ii) measures what portion of changes in the update, excluding the phantom artifacts, has passed through a code review process, i.e., code review coverage. Using Depdive, we present an empirical study across the latest ten updates of the most downloaded 1000 packages in each of the four registries. We further evaluated our results through a maintainer agreement survey. We find that phantom artifacts are not uncommon in the updates (20.1% of the analyzed updates had at least one phantom file). The phantoms can appear either due to legitimate reasons, such as in the case of programmatically generated files, or from accidental inclusion, such as in the case of files that are ignored in the repository. Regarding code review coverage (CRC), we find the updates are typically only partially code-reviewed (52.5% of the time). Further, only 9.0% of the packages had all their updates in our data set fully code-reviewed, indicating that even the most used packages can introduce non-reviewed code in the software supply chain. We also observe that updates either tend to have high CRC or low CRC, suggesting that packages at the opposite end of the spectrum may require a separate set of treatments.
C1 [Imtiaz, Nasif; Williams, Laurie] North Carolina State Univ, Dept Comp Sci, Raleigh, NC 27606 USA.
C3 North Carolina State University
RP Imtiaz, N (corresponding author), North Carolina State Univ, Dept Comp Sci, Raleigh, NC 27606 USA.
EM simtiaz@ncsu.edu; lawilli3@ncsu.edu
OI Williams, Laurie/0000-0003-3300-6540
CR Alfadel M, 2021, 2021 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2021), P446, DOI 10.1109/SANER50967.2021.00048
   [Anonymous], 2021, SLSA requirements
   [Anonymous], 2021, Security Scorecards for Open Source Projects
   [Anonymous], 2021, Prow
   [Anonymous], 2021, Reproducible builds
   [Anonymous], 2021, Semantic Versioning
   [Anonymous], 2020, Shifting supply chain security left with dependency review
   [Anonymous], 2021, Security issue: Compromised NPM packages of UA-parser-JS
   [Anonymous], 2019, 9 reasons for keeping software dependencies up to date
   [Anonymous], 2014, 11 WORKING C MINING, DOI [DOI 10.1145/2597073.2597076, DOI 10.1145/2597073]
   [Anonymous], 2018, A tutorial for tagging releases in git
   [Anonymous], 2021, Travis CI flaw exposed secrets of thousands of open source projects
   [Anonymous], 2021, Push and pull: When and why to update your dependencies
   [Anonymous], 2021, Safeguarding artifact integrity across any software supply chain
   [Anonymous], 2021, Gerrit code review
   [Anonymous], 2018, Compromised NPM package: Event-stream
   [Anonymous], 2021, Dependabot
   Bacchelli A, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P712, DOI 10.1109/ICSE.2013.6606617
   Bommarito E, 2019, Arxiv, DOI arXiv:1907.11073
   Bosu A, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P257, DOI 10.1145/2635868.2635880
   Deming W. E., 2020, For good measure, P83
   Duan RA, 2020, Arxiv, DOI [arXiv:2002.01139, 10.48550/ARXIV.2002.01139, DOI 10.48550/ARXIV.2002.01139]
   Ferreira G, 2021, PROC INT CONF SOFTW, P1334, DOI 10.1109/ICSE43902.2021.00121
   Flowers R., 2021, Supply chain attack: NPM library used by Facebook and others was compromised
   Goswami P, 2020, PROC IEEE INT CONF S, P677, DOI 10.1109/ICSME46990.2020.00071
   Imtiaz N, 2021, P 15 ACM IEEE INT S
   Imtiaz N, 2021, Arxiv, DOI arXiv:2112.06804
   Kononenko O, 2015, PROC IEEE INT CONF S, P111, DOI 10.1109/ICSM.2015.7332457
   Ladisa P, 2022, Arxiv, DOI arXiv:2204.04008
   Liu C., 2022, arXiv
   McIntosh S, 2016, EMPIR SOFTW ENG, V21, P2146, DOI 10.1007/s10664-015-9381-9
   Mirhosseini S, 2017, IEEE INT CONF AUTOM, P84, DOI 10.1109/ASE.2017.8115621
   Ohm Marc, 2020, Detection of Intrusions and Malware, and Vulnerability Assessment. 17th International Conference, DIMVA 2020. Proceedings. Lecture Notes in Computer Science (LNCS 12223), P23, DOI 10.1007/978-3-030-52683-2_2
   Sadowski C, 2018, 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING - SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2018), P181, DOI 10.1145/3183519.3183525
   Sejfia Adriana, 2022, arXiv
   Sharma Ax, 2022, Dev corrupts NPM libs ' colors' and ' faker' breaking thousands of apps
   Synopsys, 2021, 2021 open source security and risk analysis report
   Torres-Arias S, 2019, PROCEEDINGS OF THE 28TH USENIX SECURITY SYMPOSIUM, P1393
   Van Kemenade Hugo, 2022, Zenodo, DOI 10.5281/ZENODO.5812615
   Vu DL, 2021, PROCEEDINGS OF THE 29TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '21), P780, DOI 10.1145/3468264.3468592
   Washburn J., 2017, What is FOSS, and why should I be worried about it?
   Yang Jeong, 2021, INT C SOFTW ENG ART, P43
   Zahan N, 2022, Arxiv, DOI arXiv:2112.10165
   Zimmermann M, 2019, PROCEEDINGS OF THE 28TH USENIX SECURITY SYMPOSIUM, P995
NR 44
TC 0
Z9 0
U1 2
U2 2
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD NOV
PY 2023
VL 49
IS 11
BP 4932
EP 4945
DI 10.1109/TSE.2023.3319509
PG 14
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA Z3ZN2
UT WOS:001111494200008
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Macklon, F
   Viggiato, M
   Romanova, N
   Buzon, C
   Paas, D
   Bezemer, CP
AF Macklon, Finlay
   Viggiato, Markos
   Romanova, Natalia
   Buzon, Chris
   Paas, Dale
   Bezemer, Cor-Paul
TI A Taxonomy of Testable HTML5 Canvas Issues
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Issue reports; issue taxonomy; web applications; html5 canvas
ID BUG; AGREEMENT
AB The HTML5 < canvas > is widely used to display high quality graphics in web applications. However, the combination of web, GUI, and visual techniques that are required to build < canvas > applications, together with the lack of testing and debugging tools, makes developing such applications very challenging. To help direct future research on testing < canvas > applications, in this paper we present a taxonomy of testable < canvas > issues. First, we extracted 2,403 < canvas >-related issue reports from 123 open-source GitHub projects that use the HTML5 < canvas >. Second, we constructed our taxonomy by manually classifying a random sample of 332 issue reports. Our manual classification identified five broad categories of testable < canvas > issues, such as Visual and Performance issues. We found that Visual issues are the most frequent (35%), while Performance issues are relatively infrequent (5%). We also found that many testable < canvas > issues that present themselves visually on the < canvas > are actually caused by other components of the web application. Our taxonomy of testable < canvas > issues can be used to steer future research into < canvas > issues and testing.
C1 [Macklon, Finlay; Viggiato, Markos; Bezemer, Cor-Paul] Univ Alberta, Analyt Software Games & Repository Data ASGAARD La, Camrose, AB T4V 2R3, Canada.
   [Romanova, Natalia; Buzon, Chris; Paas, Dale] Prodigy Educ, Toronto, ON M9N 2R3, Canada.
C3 University of Alberta
RP Macklon, F (corresponding author), Univ Alberta, Analyt Software Games & Repository Data ASGAARD La, Camrose, AB T4V 2R3, Canada.
EM macklon@ualberta.ca; viggiato@ualberta.ca;
   natalia.romanova@prodigygame.com; christopher.buzon@prodigygame.com;
   dale.paas@prodigygame.com; bezemer@ualberta.ca
OI Macklon, Finlay/0000-0002-1319-7215; Viggiato,
   Markos/0000-0002-8500-3723; Bezemer, Cor-Paul/0000-0002-0474-5718
FU Prodigy Education; Natural Sciences and Engineering Research Council of
   Canada [ALLRP 550309]
FX This work was supported in part by Prodigy Education and in part by the
   Natural Sciences and Engineering Research Council of Canada under Grant
   ALLRP 550309.& nbsp;
CR AbhiThakare, 2018, FAT ERR HOV
   Adobe, 2021, AD FLASH PLAYER EOL
   Adobe, 2017, FLASH FUT INT CONT
   Alégroth E, 2016, INFORM SOFTWARE TECH, V73, P66, DOI 10.1016/j.infsof.2016.01.012
   [Anonymous], 2013, EMIROZER FILLING HAL
   [Anonymous], 2010, RHYSBURNIE PIXELATED
   [Anonymous], 2013, RAMI DABAIN DETACHCO
   [Anonymous], 2007, 4 INT WORKSHOP MININ
   [Anonymous], 2015, MAKSIMS MAXPIXELRATI
   [Anonymous], 2015, Journal of Software Engineering Research and Development, DOI [10.1186/s40411-015-0023-0, DOI 10.1186/S40411-015-0023-0]
   Anvik John, 2005, P 2005 OOPSLA WORKSH, P35
   Anvik John, 2006, P 28 INT C SOFTWARE, P361, DOI DOI 10.1145/1134285.1134336
   Artstein R, 2008, COMPUT LINGUIST, V34, P555, DOI 10.1162/coli.07-034-R2
   aSqrd eSqrd, 2016, NOD OUTS VIEW PORT P
   Bajaj K, 2014, P 11 WORK C MIN SOFT, P112
   Bajammal M, 2022, IEEE T SOFTWARE ENG, V48, P1722, DOI 10.1109/TSE.2020.3032986
   Bajammal M, 2018, IEEE INT CONF SOFTW, P193, DOI 10.1109/ICST.2018.00028
   Basques K., 2017, ANAL RUNTIME PERFORM
   Baudry B., 2015, PROC IEEE 8 INT C SO, P1
   boardfish, 2019, OBJ CLIPP EACH OTH
   Bogner Justus, 2022, arXiv
   Brereton P, 2007, J SYST SOFTWARE, V80, P571, DOI 10.1016/j.jss.2006.07.009
   Catolino G, 2019, J SYST SOFTWARE, V152, P165, DOI 10.1016/j.jss.2019.03.002
   cbranje, 2015, ERR CAUS GRAPH NOT R
   chirotaq, 2015, WEBGLR DOES NOT DRAW
   cnatis, 2017, CROSS OR IM REQ
   COHEN J, 1960, EDUC PSYCHOL MEAS, V20, P37, DOI 10.1177/001316446002000104
   CRLbazin, 2020, DISPL PROBL IMP WORK
   danpalmer Bug, 2017, REND CANV EL VIS PAG
   danvk, 2021, DRAG ZOOM LEFT RIGHT
   Dogan S, 2014, J SYST SOFTWARE, V91, P174, DOI 10.1016/j.jss.2014.01.010
   Erwin4, 2016, SCAL PROBL
   fadedyellowroses, 2018, PISK IS VER SLOW CHR
   frostbytedata, 2018, NOD CLICK EV FIR MOU
   github, 2017, ASELA WIJESINGHE NOT
   github, 2012, KNOB CREATES 200PX H
   github, 2020, PWS2016 ERROR CANVAS
   Hoetzlein RC, 2012, IEEE COMPUT GRAPH, V32, P98, DOI 10.1109/MCG.2012.102
   iKrushYou, 2020, LEG IT LONG WORKS 0
   Issa A, 2012, IEEE INT S WEB SYST, P11, DOI 10.1109/WSE.2012.6320526
   jordyvandomselaar, 2016, SCROLL LIN IS CURS
   Kamienski AV, 2021, IEEE WORK CONF MIN S, P520, DOI 10.1109/MSR52588.2021.00066
   Karampatsis RM, 2020, IEEE WORK CONF MIN S, P573, DOI 10.1145/3379597.3387491
   Kartojal, 2017, DEB 2 5 0 CHART JS E
   lamego, 2018, DIST FUZZ BUBBL CANV
   Landman D, 2017, PROC INT CONF SOFTW, P507, DOI 10.1109/ICSE.2017.53
   Leitner P., 2017, P 8 ACMSPEC INT C PE, P373
   marcbruederlin, 2017, DET DEV PIX RAT
   Marchetto A, 2009, J WEB ENG, V8, P316
   mathiastiberghien, 2020, DAM REDR BOUND ISS C
   michaelgrc, 2015, DRAW STRAIGHT LIN WA
   Moot K., 2012, HANDLING USER INPUT
   Mozilla, 2021, CANV GRAPH CANV EL
   Mozilla, 2021, CANVASRENDERINGCONTE
   Mozilla, 2021, CROSS ORIGIN RESOURC
   Mozilla, 2021, ALL CROSS OR US IM C
   Mozilla, 2021, INTR DOM
   newerton, 2014, CALC BYT
   nicoladaoud, 2019, BLOCKS DONT SNAP COR
   NisSAM, 2012, SAV RET IM BLACK BAC
   Nokitoo, 2018, ENT DESTR MEM LEAK
   Nurmuliani N, 2004, 12TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, PROCEEDINGS, P240
   Ocariza FS, 2017, IEEE T SOFTWARE ENG, V43, P128, DOI 10.1109/TSE.2016.2586066
   Passonneau R., 2006, Measuring Agreement on Set-Valued Items (MASI) for Semantic and Pragmatic Annotation
   paulmasson, 2016, DOC PAG IFR UNR IOS
   pdfowler, 2018, CONT CORS ISS
   pdincubus, 2013, 0 IE8 SHOWS FULL PIE
   peternewman, 2019, WIND IC AN NON 1 1 A
   pilootchoum, 2020, ONSN NOT WORK PROP
   Ralph P, 2019, IEEE T SOFTWARE ENG, V45, P712, DOI 10.1109/TSE.2018.2796554
   rbishop bah, 2013, CANV PATH MOUS FLAK
   Ricca F, 2021, LECT NOTES COMPUT SC, V12607, P472, DOI 10.1007/978-3-030-67731-2_35
   RitterD, 2018, GAUG CRASH MY APP
   Rosenberg A., 2004, AUGMENTING KAPPA STA
   SimilarTech, 2022, HTML5 CANV TAG MARK
   Smite D, 2014, EMPIR SOFTW ENG, V19, P105, DOI 10.1007/s10664-012-9217-9
   Soviut, 2014, BAB CANV IS WRONG SI
   Sucan M., 2010, SVG CANVAS CHOOSING
   Tan L, 2014, EMPIR SOFTW ENG, V19, P1665, DOI 10.1007/s10664-013-9258-8
   Usman M, 2017, INFORM SOFTWARE TECH, V85, P43, DOI 10.1016/j.infsof.2017.01.006
   Viggiato M, 2022, IEEE T GAMES, V14, P350, DOI 10.1109/TG.2021.3072545
   Vijayaraghavan G, 2003, Star East, V2003, P1
   Vincenttbk, 2014, HAL DOES NOT DIS HID
   vincenttheeten, 2012, CANN GET FONT WORK
   WHATWG, 2021, FETCH LIV STAND
   williamngan, 2018, CANV FONT DOESNT SET
   Woo A, 1996, IEEE COMPUT GRAPH, V16, P21, DOI 10.1109/38.536271
   Zaman S., 2011, Proceedings of the 8th working conference on mining software repositories, P93, DOI [10.1145/1985441.1985457, DOI 10.1145/1985441.1985457]
NR 88
TC 0
Z9 0
U1 4
U2 8
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUN 1
PY 2023
VL 49
IS 6
BP 3647
EP 3659
DI 10.1109/TSE.2023.3270740
PG 13
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA J9KW5
UT WOS:001012752300017
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Yedida, R
   Kang, HJ
   Tu, HY
   Yang, XQ
   Lo, DV
   Menzies, T
AF Yedida, Rahul
   Kang, Hong Jin
   Tu, Huy
   Yang, Xueqi
   Lo, David
   Menzies, Tim
TI How to Find Actionable Static Analysis Warnings: A Case Study With
   FindBugs
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Codes; Computer bugs; Static analysis; Training; Source coding;
   Measurement; Industries; Software analytics; static analysis; false
   alarms; locality; hyperparameter optimization
ID ANALYSIS TOOLS
AB Automatically generated static code warnings suffer from a large number of false alarms. Hence, developers only take action on a small percent of those warnings. To better predict which static code warnings should not be ignored, we suggest that analysts need to look deeper into their algorithms to find choices that better improve the particulars of their specific problem. Specifically, we show here that effective predictors of such warnings can be created by methods that locally adjust the decision boundary (between actionable warnings and others). These methods yield a new high water-mark for recognizing actionable static code warnings. For eight open-source Java projects (cassandra, jmeter, commons, lucene-solr, maven, ant, tomcat, derby) we achieve perfect test results on 4/8 datasets and, overall, a median AUC (area under the true negatives, true positives curve) of 92%.
C1 [Yedida, Rahul; Yang, Xueqi; Menzies, Tim] North Carolina State Univ, Dept Comp Sci, Raleigh, NC 27695 USA.
   [Kang, Hong Jin; Lo, David] Singapore Management Univ, Sch Comp & Informat Syst, Singapore City 188065, Singapore.
   [Tu, Huy] Meta Platforms Inc, New York, NY 94025 USA.
C3 North Carolina State University; Singapore Management University
RP Menzies, T (corresponding author), North Carolina State Univ, Dept Comp Sci, Raleigh, NC 27695 USA.
EM yedida@ncsu.edu; hjkang.2018@smu.edu.sg; huyqtu7@gmail.com;
   xyang37@ncsu.edu; davidlo@smu.edu.sg; timm@ieee.org
RI Menzies, Tim/X-7680-2019; Yang, Xueqi/KQU-3325-2024; Lo,
   David/A-2493-2012
OI Menzies, Tim/0000-0002-5040-3196; Lo, David/0000-0002-4367-7201; Yedida,
   Rahul/0000-0003-2069-5949
FU NSF [1908762]
FX This work was supported by NSF under Grant #1908762.
CR Aggarwal CC, 2001, LECT NOTES COMPUT SC, V1973, P420
   Agrawal A, 2022, IEEE T SOFTWARE ENG, V48, P2939, DOI 10.1109/TSE.2021.3073242
   Agrawal A, 2021, IEEE T SOFTWARE ENG, V47, P2182, DOI 10.1109/TSE.2019.2945020
   Agrawal A, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1050, DOI 10.1145/3180155.3180197
   Austin PC, 2017, STAT METHODS MED RES, V26, P796, DOI 10.1177/0962280214558972
   Ayewah N., 2010, Proceedings of the 19th international symposium on Software testing and analysis, P241
   Banerjee S, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P740, DOI 10.1145/3338906.3338919
   Barkan E., 2021, US Patent, Patent No. [10,916,343, 10916343]
   Beller M, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P470, DOI 10.1109/SANER.2016.105
   Bergstra J, 2012, J MACH LEARN RES, V13, P281
   Berthelot D, 2019, ADV NEUR IN, V32
   Calcagno C, 2015, LECT NOTES COMPUT SC, V9058, P3, DOI 10.1007/978-3-319-17524-9_1
   Chakraborty J., 2022, CAN WE ACHIEVE FAIRN
   Chawla NV, 2002, J ARTIF INTELL RES, V16, P321, DOI 10.1613/jair.953
   Christakis M, 2016, IEEE INT CONF AUTOM, P332, DOI 10.1145/2970276.2970347
   Cohen P. R., 1995, Empirical methods for artificial intelligence, V139
   Cordeiro FR, 2020, SIBGRAPI, P9, DOI 10.1109/SIBGRAPI51738.2020.00010
   Deb K, 2005, EVOL COMPUT, V13, P501, DOI 10.1162/106365605774666895
   Feng ZY, 2020, Arxiv, DOI [arXiv:2002.08155, 10.48550/arXiv.2002.08155]
   Habib A, 2018, IEEE INT CONF AUTOM, P317, DOI 10.1145/3238147.3238213
   Hanam Q., 2014, P 11 WORKING C MININ, P152
   Heckman S, 2009, SECOND INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION, AND VALIDATION, PROCEEDINGS, P161, DOI 10.1109/ICST.2009.45
   Heckman S, 2008, ESEM'08: PROCEEDINGS OF THE 2008 ACM-IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, P41
   Imtiaz N, 2019, PROC INT SYMP SOFTW, P323, DOI 10.1109/ISSRE.2019.00040
   Ioffe S, 2015, P INT C MACH LEARN, V2015, P1
   Johnson B, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P672, DOI 10.1109/ICSE.2013.6606613
   Joshy AK, 2021, ISSTA '21: PROCEEDINGS OF THE 30TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P540, DOI 10.1145/3460319.3464832
   Kang H. J., 2022, arXiv
   Kharkar A, 2022, PROC INT CONF SOFTW, P1307, DOI 10.1145/3510003.3510153
   Kim H, 2022, PROC INT CONF SOFTW, P1282, DOI 10.1145/3510003.3510098
   Kim S, 2007, P 6 JOINT M EUR SOFT, P45, DOI DOI 10.1145/1287624.1287633
   Kingma DP, 2014, ADV NEUR IN, V27
   Krizhevsky A, 2017, COMMUN ACM, V60, P84, DOI 10.1145/3065386
   Kumar A., 2020, SVM RBF KERNEL PARAM
   LeCun Y, 1989, NEURAL COMPUT, V1, P541, DOI 10.1162/neco.1989.1.4.541
   Li H, 2018, ADV NEUR IN, V31
   Li LQ, 2017, PROC IEEE INT CONF S, P249, DOI 10.1109/ICSME.2017.46
   Liang G., 2010, P 25 IEEEACM INT C A, P93, DOI [DOI 10.1145/1858996.1859013, 10.1145/1858996.1859013, 10.1145/1858996, DOI 10.1145/1858996]
   Ma KD, 2019, IEEE IMAGE PROC, P2344, DOI [10.1109/ICIP.2019.8803390, 10.1109/icip.2019.8803390]
   McNicol Don, 2005, A primer of signal detection theory, DOI DOI 10.4324/9781410611949
   Montufar G. F., 2014, ADV NEURAL INFORM PR, P2924
   Muske T, 2020, IEEE INT WORK C SO, P259, DOI 10.1109/SCAM51674.2020.00035
   Nachtigall M, 2022, PROCEEDINGS OF THE 31ST ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, ISSTA 2022, P532, DOI 10.1145/3533767.3534374
   Nam J, 2019, INFORM SOFTWARE TECH, V112, P164, DOI 10.1016/j.infsof.2019.04.014
   Panichella S, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P161, DOI 10.1109/SANER.2015.7081826
   Peduzzi P, 1996, J CLIN EPIDEMIOL, V49, P1373, DOI 10.1016/S0895-4356(96)00236-3
   Ribeiro MT, 2016, KDD'16: PROCEEDINGS OF THE 22ND ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P1135, DOI 10.1145/2939672.2939778
   Roland Croft, 2021, P 15 ACM IEEE INT S, DOI [DOI 10.1145/3475716.3475781, 10.1145/3475716.3475781]
   RUMELHART DE, 1986, NATURE, V323, P533, DOI 10.1038/323533a0
   Ruthruff JR, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P341, DOI 10.1145/1368088.1368135
   Sadowski C, 2018, COMMUN ACM, V61, P58, DOI 10.1145/3188720
   Santurkar S, 2018, ADV NEUR IN, V31
   Srivastava N, 2014, J MACH LEARN RES, V15, P1929
   Thung F, 2012, IEEE INT CONF AUTOM, P50, DOI 10.1145/2351676.2351685
   Tiganov D, 2022, COMMUN ACM, V65, P52, DOI 10.1145/3486600
   Tomassi DA, 2021, 2021 36TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING ASE 2021, P292, DOI 10.1109/ASE51524.2021.9678535
   Tu H., 2021, PROC IEEEACM 36 INT, P394
   Tu H, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-022-10121-w
   Tu H, 2021, IEEE WORK CONF MIN S, P1, DOI 10.1109/MSR52588.2021.00013
   Tu H, 2022, IEEE T SOFTWARE ENG, V48, P278, DOI 10.1109/TSE.2020.2986415
   Vassallo C, 2020, EMPIR SOFTW ENG, V25, P1419, DOI 10.1007/s10664-019-09750-5
   Vaswani A, 2017, ADV NEUR IN, V30
   Wang J., 2018, PROC IEEEACM 12 INT, P1
   Wang S, 2020, IEEE T SOFTWARE ENG, V46, P1267, DOI 10.1109/TSE.2018.2877612
   White M, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P781, DOI 10.1109/ICSE.2015.248
   Witten IH, 2011, MOR KAUF D, P1
   Yang XQ, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-021-09948-6
   Yang XQ, 2021, EXPERT SYST APPL, V167, DOI 10.1016/j.eswa.2020.114134
   Yedida R, 2022, IEEE T SOFTWARE ENG, V48, P3103, DOI 10.1109/TSE.2021.3079841
   Yu Z, 2022, IEEE T SOFTWARE ENG, V48, P1676, DOI 10.1109/TSE.2020.3031401
   Zampetti F, 2017, IEEE WORK CONF MIN S, P334, DOI 10.1109/MSR.2017.2
   Zhai XH, 2019, IEEE I CONF COMP VIS, P1476, DOI 10.1109/ICCV.2019.00156
   Zheng J, 2006, IEEE T SOFTWARE ENG, V32, P240, DOI 10.1109/TSE.2006.38
   Zhu J. Lafferty R. Rosenfeld., 2005, SEMISUPERVISED LEARN
NR 74
TC 1
Z9 1
U1 2
U2 4
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD APR 1
PY 2023
VL 49
IS 4
BP 2856
EP 2872
DI 10.1109/TSE.2023.3234206
PG 17
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA E9NM9
UT WOS:000978723600082
OA Green Accepted, Green Submitted
DA 2024-07-18
ER

PT J
AU Cabral, GG
   Minku, LL
AF Cabral, George G.
   Minku, Leandro L.
TI Towards Reliable Online Just-in-Time Software Defect Prediction
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Software; Reliability; Training; Codes; Software reliability; Software
   quality; Indexes; Just-in-time software defect prediction; online
   learning; concept drift; verification latency; class imbalance learning
AB Throughout its development period, a software project experiences different phases, comprises modules with different complexities and is touched by many different developers. Hence, it is natural that problems such as Just-in-Time Software Defect Prediction (JIT-SDP) are affected by changes in the defect generating process (concept drifts), potentially hindering predictive performance. JIT-SDP also suffers from delays in receiving the labels of training examples (verification latency), potentially exacerbating the challenges posed by concept drift and further hindering predictive performance. However, little is known about what types of concept drift affect JIT-SDP and how they affect JIT-SDP classifiers in view of verification latency. This work performs the first detailed analysis of that. Among others, it reveals that different types of concept drift together with verification latency significantly impair the stability of the predictive performance of existing JIT-SDP approaches, drastically affecting their reliability over time. Based on the findings, a new JIT-SDP approach is proposed, aimed at providing higher and more stable predictive performance (i.e., reliable) over time. Experiments based on ten GitHub open source projects show that our approach was capable of produce significantly more stable predictive performances in all investigated datasets while maintaining or improving the predictive performance obtained by state-of-art methods.
C1 [Cabral, George G.] Univ Fed Rural Pernambuco, Dept Comp, BR-2171900 Recife, Brazil.
   [Minku, Leandro L.] Univ Birmingham, Sch Comp Sci, Birmingham B15 2SQ, England.
C3 Universidade Federal Rural de Pernambuco (UFRPE); University of
   Birmingham
RP Cabral, GG (corresponding author), Univ Fed Rural Pernambuco, Dept Comp, BR-2171900 Recife, Brazil.; Minku, LL (corresponding author), Univ Birmingham, Sch Comp Sci, Birmingham B15 2SQ, England.
EM george.gcabral@ufrpe.br; L.L.Minku@bham.ac.uk
OI Minku, Leandro/0000-0002-2639-0671
FU EPSRC [EP/R006660/2, EP/P005578/1]; EPSRC [EP/R006660/2, EP/P005578/1]
   Funding Source: UKRI
FX This work was supported by EPSRC under Grants EP/R006660/2 and
   EP/P005578/1.
CR Alshahwan N, 2018, LECT NOTES COMPUT SC, V11036, P3, DOI 10.1007/978-3-319-99241-9_1
   [Anonymous], TOOL DETECT BUGS JAV
   Bowes D, 2017, IEEE INT SYMP SOFTW, P44, DOI 10.1109/ISSREW.2017.11
   Cabral GG, 2019, PROC INT CONF SOFTW, P666, DOI 10.1109/ICSE.2019.00076
   Catolino G, 2019, 2019 IEEE/ACM 6TH INTERNATIONAL CONFERENCE ON MOBILE SOFTWARE ENGINEERING AND SYSTEMS (MOBILESOFT 2019), P99, DOI 10.1109/MOBILESoft.2019.00023
   Chen X, 2018, INFORM SOFTWARE TECH, V93, P1, DOI 10.1016/j.infsof.2017.08.004
   Gama J, 2014, ACM COMPUT SURV, V46, DOI 10.1145/2523813
   Gama J, 2013, MACH LEARN, V90, P317, DOI 10.1007/s10994-012-5320-9
   Harman M, 2018, IEEE INT WORK C SO, P1, DOI 10.1109/SCAM.2018.00009
   Hulten G., 2001, KDD-2001. Proceedings of the Seventh ACM SIGKDD International Conference on Knowledge Discovery and Data Mining, P97, DOI 10.1145/502512.502529
   Jeni LA, 2013, INT CONF AFFECT, P245, DOI 10.1109/ACII.2013.47
   Kamei Y, 2016, EMPIR SOFTW ENG, V21, P2072, DOI 10.1007/s10664-015-9400-x
   Kamei Y, 2013, IEEE T SOFTWARE ENG, V39, P757, DOI 10.1109/TSE.2012.70
   Lewis C, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P372, DOI 10.1109/ICSE.2013.6606583
   Luque A, 2019, PATTERN RECOGN, V91, P216, DOI 10.1016/j.patcog.2019.02.023
   McIntosh S, 2018, IEEE T SOFTWARE ENG, V44, P412, DOI 10.1109/TSE.2017.2693980
   Mende T, 2010, EUR CON SFTWR MTNCE, P107, DOI 10.1109/CSMR.2010.18
   Menzies T, 2017, EMPIR SOFTW ENG, V22, P2658, DOI 10.1007/s10664-016-9472-2
   Menzies T, 2013, IEEE T SOFTWARE ENG, V39, P822, DOI 10.1109/TSE.2012.83
   Mittas N, 2013, IEEE T SOFTWARE ENG, V39, P537, DOI 10.1109/TSE.2012.45
   Qiao L, 2019, PLOS ONE, V14, DOI 10.1371/journal.pone.0211359
   Rosen C, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P966, DOI 10.1145/2786805.2803183
   Scanniello G, 2013, IEEE INT CONF AUTOM, P640, DOI 10.1109/ASE.2013.6693126
   Song QB, 2019, IEEE T SOFTWARE ENG, V45, P1253, DOI 10.1109/TSE.2018.2836442
   Tabassum S, 2020, PROC INT CONF SOFTW, P554, DOI 10.1145/3377811.3380403
   Tan M, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P99, DOI 10.1109/ICSE.2015.139
   Vargha A, 2000, J EDUC BEHAV STAT, V25, P101, DOI 10.3102/10769986025002101
   Wang S, 2018, IEEE T NEUR NET LEAR, V29, P4802, DOI 10.1109/TNNLS.2017.2771290
   Wang S, 2015, IEEE T KNOWL DATA EN, V27, P1356, DOI 10.1109/TKDE.2014.2345380
   Yang XL, 2015, 2015 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE SECURITY AND RELIABILITY (QRS 2015), P17, DOI 10.1109/QRS.2015.14
   Yang X, 2019, SCAND J CLIN LAB INV, V79, P551, DOI 10.1080/00365513.2019.1674004
NR 31
TC 8
Z9 8
U1 2
U2 11
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAR 1
PY 2023
VL 49
IS 3
BP 1342
EP 1358
DI 10.1109/TSE.2022.3175789
PG 17
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA A1QF2
UT WOS:000952938700019
OA Green Published
DA 2024-07-18
ER

PT J
AU Ouatiti, YE
   Sayagh, M
   Kerzazi, N
   Hassan, AE
AF Ouatiti, Youssef Esseddiq
   Sayagh, Mohammed
   Kerzazi, Noureddine
   Hassan, Ahmed E. E.
TI An Empirical Study on Log Level Prediction for Multi-Component Systems
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Log level prediction; machine learning; multi-component systems;
   software logging
AB Logging statements are used to trace the execution of a software system. Practitioners leverage different logging information (e.g., the content of a log message) to decide for each logging statement an appropriate log level, which is leveraged to adjust the verbosity of logs so that only important log messages are traced. Deciding for the log level can be done differently from one to another component of a multi-component system, such as OpenStack and its 28 components. For example, a component might aim for increasing the verbosity of its log messages, while another component for the same multi-component system might aim at decreasing such a verbosity. Such different logging strategies can exist since each component can be developed and maintained by a different team. While a prior work leveraged an ordinal regression model to recommend the appropriate log level for a new logging statement, their evaluation did not consider the particularities that each component can have within a multi-component system. For instance, their model might not perform well at each component level of a multi-component system. The same model's interpretability can mislead the developers of each component that has its unique logging strategy. In this paper, we quantify the impact of the particularities of each component of a multi-component system on the performance and interpretability of the log level prediction model of prior work. We observe that the performance of the log level prediction models that are trained at the whole project level (aka., global models) have lower performances (AUC) on 72% to 100% of the components of our five evaluated multi-component systems, compared to the same models when evaluated on the whole multi-component system. We observe that the models that are trained at the component level (aka., local models) statistically outperform the global model on 33% to 77% of the components of our evaluated multi-component systems. Furthermore, we observe that the rankings of the most important features that are obtained from the global models are statistically different from the feature importance rankings of 50% to 87% of the local models of our evaluated multi-component systems. Finally, we observe that 60% and 35% of the Spring and OpenStack components do not have enough data points to train their own local models (aka., data lacking components). Leveraging a peer-local model for such type of components is more promising than using the global model.
C1 [Ouatiti, Youssef Esseddiq; Hassan, Ahmed E. E.] Queens Univ, Sch Comp, Kingston, ON K7L 3N6, Canada.
   [Sayagh, Mohammed] Univ Quebec, IT & Software Engn, Quebec City, PQ H3C 1K3, Canada.
   [Kerzazi, Noureddine] Informat Aide Decis, UM5R ENSIAS, Rabat 10112, Morocco.
C3 Queens University - Canada; University of Quebec
RP Ouatiti, YE (corresponding author), Queens Univ, Sch Comp, Kingston, ON K7L 3N6, Canada.
EM oyoussefesseddiq@gmail.com; sayaghmohammed@gmail.com;
   nkerzazi@gmail.com; ahmed@cs.queensu.ca
OI Sayagh, Mohammed/0000-0002-2724-0034
CR [Anonymous], 2010, PROC ACMIEEE INT S E
   Bettenburg N., 2012, 2012 9th IEEE Working Conference on Mining Software Repositories (MSR 2012), P60, DOI 10.1109/MSR.2012.6224300
   Chen YJ, 2019, WEB CONFERENCE 2019: PROCEEDINGS OF THE WORLD WIDE WEB CONFERENCE (WWW 2019), P2659, DOI 10.1145/3308558.3313501
   D'Ambros M, 2012, EMPIR SOFTW ENG, V17, P531, DOI 10.1007/s10664-011-9173-9
   El-Sayed N, 2017, INT CON DISTR COMP S, P1333, DOI 10.1109/ICDCS.2017.317
   Fu Q, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE COMPANION 2014), P24, DOI 10.1145/2591062.2591175
   Fu W, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P49, DOI 10.1145/3106237.3106256
   Graves TL, 2000, IEEE T SOFTWARE ENG, V26, P653, DOI 10.1109/32.859533
   HANLEY JA, 1982, RADIOLOGY, V143, P29, DOI 10.1148/radiology.143.1.7063747
   Harrell F.E., 2001, Regression modeling strategies: with applications to linear models, logistic regression, and survival analysis
   Hassan AE, 2009, PROC INT CONF SOFTW, P78, DOI 10.1109/ICSE.2009.5070510
   Hassani M, 2018, EMPIR SOFTW ENG, V23, P3248, DOI 10.1007/s10664-018-9603-z
   HURVICH CM, 1989, BIOMETRIKA, V76, P297, DOI 10.2307/2336663
   Hurvich CM, 1993, J Time Series Anal, DOI [DOI 10.1111/J.1467-9892.1993.TB00144.X, 10.1111/j.1467-9892.1993.tb00144.x]
   Jiarpakdee J, 2021, IEEE T SOFTWARE ENG, V47, P320, DOI 10.1109/TSE.2019.2891758
   Kabinna S, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P326, DOI 10.1109/SANER.2016.29
   Lee D, 2020, EMPIR SOFTW ENG, V25, P3396, DOI 10.1007/s10664-020-09840-9
   Li H, 2021, IEEE T SOFTWARE ENG, V47, P2858, DOI 10.1109/TSE.2020.2970422
   Li H, 2018, EMPIR SOFTW ENG, V23, P2655, DOI 10.1007/s10664-018-9595-8
   Li H, 2017, EMPIR SOFTW ENG, V22, P1684, DOI 10.1007/s10664-016-9456-2
   Li H, 2017, EMPIR SOFTW ENG, V22, P1831, DOI 10.1007/s10664-016-9467-z
   LI Z, IN PRESS, DOI DOI 10.1109/TSE.2021.3060918
   Li ZH, 2021, PROC INT CONF SOFTW, P1461, DOI 10.1109/ICSE43902.2021.00131
   Li ZH, 2019, PROC INT CONF SOFTW, P152, DOI 10.1109/ICSE.2019.00032
   Lin QW, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P480, DOI 10.1145/3236024.3236060
   Liu ZX, 2021, IEEE T SOFTWARE ENG, V47, P2012, DOI 10.1109/TSE.2019.2941943
   Liu ZX, 2018, IEEE INT CONF AUTOM, P373, DOI 10.1145/3238147.3238190
   LOCKE S, IN PRESS, DOI DOI 10.1109/TSE.2021.3083715
   McIntosh, 2014, PROC WORK C MINING S, P292
   Menzies T, 2013, IEEE T SOFTWARE ENG, V39, P822, DOI 10.1109/TSE.2012.83
   NI C, IN PRESS, DOI DOI 10.1109/TSE.2020.3001739
   Oliner A, 2012, COMMUN ACM, V55, P63, DOI 10.1145/2076450.2076466
   Pecchia A, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P169, DOI 10.1109/ICSE.2015.145
   Rajbahadur GK, 2019, 2019 ACM/IEEE 22ND INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS 2019), P12, DOI 10.1109/MODELS.2019.00-19
   Rudin C, 2019, NAT MACH INTELL, V1, P206, DOI 10.1038/s42256-019-0048-x
   Shang WY, 2015, EMPIR SOFTW ENG, V20, P1, DOI 10.1007/s10664-013-9274-8
   Tantithamthavorn C., 2017, Scottknottesd: The Scott-Knott Effect Size Difference (esd) Test
   Tantithamthavorn C, 2020, IEEE T SOFTWARE ENG, V46, P1200, DOI 10.1109/TSE.2018.2876537
   Tantithamthavorn C, 2018, 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING - SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2018), P286, DOI 10.1145/3183519.3183547
   Tantithamthavorn C, 2019, IEEE T SOFTWARE ENG, V45, P683, DOI 10.1109/TSE.2018.2794977
   Thongtanunam P, 2021, IEEE T SOFTWARE ENG, V47, P2698, DOI 10.1109/TSE.2020.2964660
   Wilks D. S, 2011, International Geophysics Series, V100, DOI DOI 10.1002/MET.16
   Xia X, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P311, DOI 10.1109/SANER.2015.7081841
   Xu Y, 2018, PROCEEDINGS OF THE 2018 USENIX ANNUAL TECHNICAL CONFERENCE, P481
   Yuan D., 2012, P 2012 USENIX S OP S, P293
   YUAN D, 2011, PROC 16 INT C ARCHIT, P3
   Yuan D, 2012, PROC INT CONF SOFTW, P102, DOI 10.1109/ICSE.2012.6227202
   Yuan Ding, 2014, 11 USENIX S OPERATIN, P249
   Zhang F, 2016, PROC INT CONF SOFTW, P309, DOI 10.1145/2884781.2884839
   Zimmerman T, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P91, DOI 10.1145/1595696.1595713
NR 50
TC 0
Z9 0
U1 0
U2 2
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD FEB 1
PY 2023
VL 49
IS 2
BP 473
EP 484
DI 10.1109/TSE.2022.3154672
PG 12
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 9F0FH
UT WOS:000937151900001
DA 2024-07-18
ER

PT J
AU Rossolini, G
   Biondi, A
   Buttazzo, G
AF Rossolini, Giulio
   Biondi, Alessandro
   Buttazzo, Giorgio
TI Increasing the Confidence of Deep Neural Networks by Coverage Analysis
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Neural networks coverage; DNNs robustness; adversarial examples
   detection
AB The great performance of machine learning algorithms and deep neural networks in several perception and control tasks is pushing the industry to adopt such technologies in safety-critical applications, as autonomous robots and self-driving vehicles. At present, however, several issues need to be solved to make deep learning methods more trustworthy, predictable, safe, and secure against adversarial attacks. Although several methods have been proposed to improve the trustworthiness of deep neural networks, most of them are tailored for specific classes of adversarial examples, hence failing to detect other corner cases or unsafe inputs that heavily deviate from the training samples. This paper presents a lightweight monitoring architecture based on coverage paradigms to enhance the model robustness against different unsafe inputs. In particular, four coverage analysis methods are proposed and tested in the architecture for evaluating multiple detection logic. Experimental results show that the proposed approach is effective in detecting both powerful adversarial examples and out-of-distribution inputs, introducing limited extra-execution time and memory requirements.
C1 [Rossolini, Giulio; Biondi, Alessandro; Buttazzo, Giorgio] Scuola Superiore Sant Anna, Dept Excellence Robot & AI, I-56127 Pisa, Italy.
C3 Scuola Superiore Sant'Anna
RP Rossolini, G (corresponding author), Scuola Superiore Sant Anna, Dept Excellence Robot & AI, I-56127 Pisa, Italy.
EM giulio.rossolini@santannapisa.it; alessandro.biondi@santannapisa.it;
   giorgio.buttazzo@santannapisa.it
RI Biondi, Alessandro/KDO-0511-2024
OI Biondi, Alessandro/0000-0002-6625-9336; BUTTAZZO, Giorgio
   Carlo/0000-0003-4959-4017
CR Abbasi M, 2018, Arxiv, DOI arXiv:1808.08282
   Biggio Battista, 2013, Machine Learning and Knowledge Discovery in Databases. European Conference, ECML PKDD 2013. Proceedings: LNCS 8190, P387, DOI 10.1007/978-3-642-40994-3_25
   Borg M, 2018, Arxiv, DOI arXiv:1812.05389
   Brown TB, 2018, Arxiv, DOI arXiv:1712.09665
   Carlini N, 2017, Arxiv, DOI arXiv:1711.08478
   Carlini N, 2017, P IEEE S SECUR PRIV, P39, DOI 10.1109/SP.2017.49
   Carlini Nicholas, 2017, ACM WORKSH ART INT S, P3
   Carrara F, 2019, LECT NOTES COMPUT SC, V11130, P313, DOI 10.1007/978-3-030-11012-3_26
   Deng J, 2009, PROC CVPR IEEE, P248, DOI 10.1109/CVPRW.2009.5206848
   Goodfellow I.J., 2015, PROC 3 INT C LEARN R
   Harel-Canada F, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P851, DOI 10.1145/3368089.3409754
   Hayhurst KJ, 2001, NASATM2001210876, DOI [10.5555/886632, DOI 10.5555/886632]
   He KM, 2016, PROC CVPR IEEE, P770, DOI 10.1109/CVPR.2016.90
   Hein M, 2017, ADV NEUR IN, V30
   Hinton G, 2015, Arxiv, DOI arXiv:1503.02531
   Huang XW, 2020, COMPUT SCI REV, V37, DOI 10.1016/j.cosrev.2020.100270
   Jia YQ, 2014, PROCEEDINGS OF THE 2014 ACM CONFERENCE ON MULTIMEDIA (MM'14), P675, DOI 10.1145/2647868.2654889
   Johnson J, 2021, IEEE T BIG DATA, V7, P535, DOI 10.1109/TBDATA.2019.2921572
   Kantaros Y., 2020, ARXIV
   Kingma D. P, 2014, 3 INT C LEARN REPR I, P1
   Kurakin A, 2017, Arxiv, DOI arXiv:1611.01236
   Kurakin Alexey, 2017, INT C LEARN REPR
   LeCun Y., 2010, MNIST HANDWRITTEN DI
   Li X., 2019, ARXIV
   Ma L, 2018, Arxiv, DOI arXiv:1803.07519
   Madry A., 2018, ARXIV
   Meng DY, 2017, CCS'17: PROCEEDINGS OF THE 2017 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P135, DOI 10.1145/3133956.3134057
   Mustafa A, 2019, IEEE I CONF COMP VIS, P3384, DOI 10.1109/ICCV.2019.00348
   Nesti F., IEEE T NEUR NET LEAR
   O'Shea K, 2015, Arxiv, DOI arXiv:1511.08458
   Ozbulak U, 2018, Arxiv, DOI arXiv:1811.08577
   Papernot N, 2016, Arxiv, DOI arXiv:1511.04508
   Papernot N, 2018, Arxiv, DOI [arXiv:1803.04765, 10.48550/arXiv.1803.04765]
   Papernot N, 2016, 1ST IEEE EUROPEAN SYMPOSIUM ON SECURITY AND PRIVACY, P372, DOI 10.1109/EuroSP.2016.36
   Paszke A, 2019, ADV NEUR IN, V32
   Pei KX, 2017, PROCEEDINGS OF THE TWENTY-SIXTH ACM SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES (SOSP '17), P1, DOI 10.1145/3132747.3132785
   Samangouei P., 2018, PROC 6 INT C LEARN R
   Sensoy M, 2018, ADV NEURAL INFORM PR, P3183
   Shafahi A, 2020, Arxiv, DOI arXiv:1809.02104
   Shaham U, 2018, NEUROCOMPUTING, V307, P195, DOI 10.1016/j.neucom.2018.04.027
   Sinha A, 2020, Arxiv, DOI arXiv:1710.10571
   Sotgiu A, 2020, EURASIP J INF SECUR, V2020, DOI 10.1186/s13635-020-00105-y
   Srisakaokul S, 2019, Arxiv, DOI [arXiv:1809.00065, 10.48550/arXiv.1809.00065, DOI 10.48550/ARXIV.1809.00065]
   Sun L, 2018, PROCEEDINGS OF 2018 THE 2ND INTERNATIONAL CONFERENCE ON COMPUTER SCIENCE AND ARTIFICIAL INTELLIGENCE (CSAI 2018) / 2018 THE 10TH INTERNATIONAL CONFERENCE ON INFORMATION AND MULTIMEDIA TECHNOLOGY (ICIMT 2018), P77, DOI 10.1145/3297156.3297224
   Sun YC, 2019, Arxiv, DOI arXiv:1803.04792
   Szegedy C, 2014, Arxiv, DOI [arXiv:1312.6199, DOI 10.1109/CVPR.2015.7298594]
   Szegedy C, 2016, PROC CVPR IEEE, P2818, DOI 10.1109/CVPR.2016.308
   TramŠr F, 2020, Arxiv, DOI arXiv:1705.07204
   Wang JY, 2019, PROC INT CONF SOFTW, P1245, DOI 10.1109/ICSE.2019.00126
   Weng T., 2018, PROC 6 INT C LEARN R
   Wong E, 2018, PR MACH LEARN RES, V80
   Xiao H, 2017, Arxiv, DOI [arXiv:1708.07747, DOI 10.48550/ARXIV.1708.07747]
   Xu WL, 2018, 25TH ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2018), DOI 10.14722/ndss.2018.23198
   Yan SA, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P775, DOI 10.1145/3368089.3409671
   Zhu H, 1997, ACM COMPUT SURV, V29, P366, DOI 10.1145/267580.267590
NR 55
TC 3
Z9 3
U1 0
U2 5
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD FEB 1
PY 2023
VL 49
IS 2
BP 802
EP 815
DI 10.1109/TSE.2022.3163682
PG 14
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 9F0FH
UT WOS:000937151900018
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Li, F
   Zhou, JY
   Li, YZ
   Hao, D
   Zhang, L
AF Li, Feng
   Zhou, Jianyi
   Li, Yinzhu
   Hao, Dan
   Zhang, Lu
TI AGA: An Accelerated Greedy Additional Algorithm for Test Case
   Prioritization
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Test case prioritization; additional strategy; acceleration
ID SOFTWARE; MUTATION
AB In recent years, many test case prioritization (TCP) techniques have been proposed to speed up the process of fault detection. However, little work has taken the efficiency problem of these techniques into account. In this paper, we target the Greedy Additional (GA) algorithm, which has been widely recognized to be effective but less efficient, and try to improve its efficiency while preserving effectiveness. In our Accelerated GA (AGA) algorithm, we use some extra data structures to reduce redundant data accesses in the GA algorithm and thus the time complexity is reduced from O(m(2)n) to O(kmn) when n > m, where m is the number of test cases, n is the number of program elements, and k is the iteration number. Moreover, we observe the impact of iteration numbers on prioritization efficiency on our dataset and propose to use a specific iteration number in the AGA algorithm to further improve the efficiency. We conducted experiments on 55 open-source subjects. In particular, we implemented each TCP algorithm with two kinds of widely-used input formats, adjacency matrix and adjacency list. Since a TCP algorithm with adjacency matrix is less efficient than the algorithm with adjacency list, the result analysis is mainly conducted based on TCP algorithms with adjacency list. The results show that AGA achieves 5.95X speedup ratio over GA on average, while it achieves the same average effectiveness as GA in terms of Average Percentage of Fault Detected (APFD). Moreover, we conducted an industrial case study on 22 subjects, collected from Baidu, and find that the average speedup ratio of AGA over GA is 44.27X, which indicates the practical usage of AGA in real-world scenarios.
C1 [Li, Feng; Zhou, Jianyi; Hao, Dan; Zhang, Lu] Peking Univ, Inst Software, Sch Comp Sci, Beijing, Peoples R China.
   [Li, Feng; Zhou, Jianyi; Hao, Dan; Zhang, Lu] Peking Univ, Key Lab High Confidence Software Technol, MoE, Beijing 100871, Peoples R China.
   [Li, Yinzhu] Baidu Online Network Technol Beijing Co Ltd, Beijing, Peoples R China.
C3 Peking University; Peking University; Baidu
RP Hao, D (corresponding author), Peking Univ, Inst Software, Sch Comp Sci, Beijing, Peoples R China.; Hao, D (corresponding author), Peking Univ, Key Lab High Confidence Software Technol, MoE, Beijing 100871, Peoples R China.
EM lifeng2014@pku.edu.cn; zhoujianyi@pku.edu.cn; liyinzhu@baidu.com;
   haodan@pku.edu.cn; zhanglucs@pku.edu.cn
RI Hao, Dan/A-8600-2015
FU National Natural Science Foundation of China [61872008]
FX This work was supported in part by the National Natural Science
   Foundation of China under Grant 61872008.
CR Abu Hasan M, 2017, COMM COM INF SC, V750, P269, DOI 10.1007/978-981-10-6544-6_25
   Andrews JH, 2005, PROC INT CONF SOFTW, P402, DOI 10.1145/1062455.1062530
   [Anonymous], 2021, PIT MUTATION TESTING
   [Anonymous], 2021, BULLSEYE TESTING TEC
   Arafeen MJ, 2013, 2013 IEEE SIXTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST 2013), P312, DOI 10.1109/ICST.2013.12
   Azizi M, 2018, IEEE INT SYMP SOFTW, P245, DOI [10.1109/1SSREW.2018.00014, 10.1109/ISSREW.2018.00014]
   Baker J.E., P INT C GEN ALG THEI, P101
   Bartlett MS, 1937, PROC R SOC LON SER-A, V160, P0268, DOI 10.1098/rspa.1937.0109
   Bin Noor T, 2015, 2015 IEEE 26TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING (ISSRE), P58, DOI 10.1109/ISSRE.2015.7381799
   bitbucket, 2021, ATL CLOV
   Catal C, 2013, SOFTWARE QUAL J, V21, P445, DOI 10.1007/s11219-012-9181-z
   Chen JF, 2018, J SYST SOFTWARE, V135, P107, DOI 10.1016/j.jss.2017.09.031
   Chen JJ, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P656, DOI 10.1145/3236024.3236053
   Cohen J., 1988, STAT POWER ANAL BEHA
   Cormen T.H., 2009, INTRO ALGORITHMS
   Daran M., 1996, SIGSOFT Software Engineering Notes, V21, P158, DOI [10.1145/229000.226313, 10.1145/226295.226313]
   Di Nucci D, 2020, IEEE T SOFTWARE ENG, V46, P674, DOI 10.1109/TSE.2018.2868082
   Do H., 2008, Proceedings of the 16th ACM SIGSOFT International Symposium on Foundations of software engineering (SIGSOFT '08/FSE-16), P71
   Do HS, 2004, 15TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P113
   Do H, 2006, IEEE T SOFTWARE ENG, V32, P733, DOI 10.1109/TSE.2006.92
   Do H, 2010, IEEE T SOFTWARE ENG, V36, P593, DOI 10.1109/TSE.2010.58
   Elbaum S, 2002, IEEE T SOFTWARE ENG, V28, P159, DOI 10.1109/32.988497
   Elbaum S, 2001, PROC INT CONF SOFTW, P329, DOI 10.1109/ICSE.2001.919106
   Elbaum S., 2000, Software Engineering Notes, V25, P102, DOI 10.1145/347636.348910
   Elbaum S, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P235, DOI 10.1145/2635868.2635910
   Epitropakis M. G., 2015, P INT S SOFTW TEST A, P234, DOI [DOI 10.1145/2771783.2771788, 10.1145/2771783.2771788]
   Fisher RA, 1970, STAT METHODS RES WOR, P66, DOI DOI 10.1007/978-1-4612-4380-9_6
   Fraser G, 2007, PROCEEDINGS OF THE IASTED INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P267
   Gopinath R, 2014, PROC INT SYMP SOFTW, P189, DOI 10.1109/ISSRE.2014.40
   Haghighatkhah A, 2018, LECT NOTES COMPUT SC, V11271, P243, DOI 10.1007/978-3-030-03673-7_18
   Hao D, 2016, FRONT COMPUT SCI-CHI, V10, P769, DOI 10.1007/s11704-016-6112-3
   Hao D, 2016, IEEE T SOFTWARE ENG, V42, P490, DOI 10.1109/TSE.2015.2496939
   Henard C, 2016, PROC INT CONF SOFTW, P523, DOI 10.1145/2884781.2884791
   Jiang B, 2009, IEEE INT CONF AUTOM, P233, DOI 10.1109/ASE.2009.77
   Jones JA, 2003, IEEE T SOFTWARE ENG, V29, P195, DOI 10.1109/TSE.2003.1183927
   Just R, 2014, P 2014 INT S SOFTW T, P437, DOI DOI 10.1145/2610384.2628055
   Just R, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P654, DOI 10.1145/2635868.2635929
   Kapfhammer G. M., 2007, PROC ACM INT WORKSHO, P19
   Knauss E, 2015, 2015 IEEE/ACM 2ND INTERNATIONAL WORKSHOP ON RAPID CONTINUOUS SOFTWARE ENGINEERING (RCOSE), P19, DOI 10.1109/RCoSE.2015.11
   Korel B, 2005, PROC IEEE INT CONF S, P559
   Kumar A., 2010, P QCON SAN FRANC, P1
   Li X, 2019, PROCEEDINGS OF THE 28TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA '19), P169, DOI 10.1145/3293882.3330574
   Li X, 2017, P ACM PROGRAM LANG, V1, DOI 10.1145/3133916
   Li Z, 2007, IEEE T SOFTWARE ENG, V33, P225, DOI 10.1109/TSE.2007.38
   LIN S, 1965, AT&T TECH J, V44, P2245, DOI 10.1002/j.1538-7305.1965.tb04146.x
   Lou YL, 2015, 2015 IEEE 26TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING (ISSRE), P46, DOI 10.1109/ISSRE.2015.7381798
   Lu YF, 2016, PROC INT CONF SOFTW, P535, DOI 10.1145/2884781.2884874
   Luo Q, 2019, IEEE T SOFTWARE ENG, V45, P1054, DOI 10.1109/TSE.2018.2822270
   Luo Q, 2018, PROC IEEE INT CONF S, P240, DOI 10.1109/ICSME.2018.00033
   Luo Q, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P559, DOI 10.1145/2950290.2950344
   Ma ZK, 2008, ASIA PAC SOFWR ENG, P471, DOI 10.1109/APSEC.2008.63
   MANN HB, 1947, ANN MATH STAT, V18, P50, DOI 10.1214/aoms/1177730491
   Mäntylä MV, 2015, EMPIR SOFTW ENG, V20, P1384, DOI 10.1007/s10664-014-9338-4
   Marijan D, 2013, PROC IEEE INT CONF S, P540, DOI 10.1109/ICSM.2013.91
   Marré M, 2003, IEEE T SOFTWARE ENG, V29, P974, DOI 10.1109/TSE.2003.1245299
   MCCULLAGH P, 1980, J ROY STAT SOC B MET, V42, P109
   Mei H, 2012, IEEE T SOFTWARE ENG, V38, P1258, DOI 10.1109/TSE.2011.106
   Mei L., 2009, P 18 INT C WORLD WID, P901, DOI DOI 10.1145/1526709.1526830
   Memon A, 2017, 2017 IEEE/ACM 39TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2017), P233, DOI 10.1109/ICSE-SEIP.2017.16
   Miranda B, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P222, DOI 10.1145/3180155.3180210
   Mohanty S., 2011, INT J COMPUT SCI INF, V2, P1042
   Papadakis M, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P537, DOI 10.1145/3180155.3180183
   Papadakis M, 2014, 2014 IEEE SEVENTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST), P1, DOI 10.1109/ICST.2014.11
   Paterson D, 2018, INT WORKSH AUTOMAT, P57, DOI 10.1145/3194733.3194735
   Pearson S, 2017, PROC INT CONF SOFTW, P609, DOI 10.1109/ICSE.2017.62
   Petke Justyna, 2013, P ESEC FSE 2013, DOI [DOI 10.1145/2491411.2491436, 10.1145/2491411.2491436]
   Qu X., 2008, P 2008 INT S SOFTW T, P75
   Rothermel G, 2001, IEEE T SOFTWARE ENG, V27, P929, DOI 10.1109/32.962562
   Rothermel G., 1999, Proceedings IEEE International Conference on Software Maintenance - 1999 (ICSM'99). `Software Maintenance for Business Change' (Cat. No.99CB36360), P179, DOI 10.1109/ICSM.1999.792604
   Saha RK, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P268, DOI 10.1109/ICSE.2015.47
   SHAPIRO SS, 1965, BIOMETRIKA, V52, P591, DOI 10.1093/biomet/52.3-4.591
   Shin D, 2019, SOFTW TEST VERIF REL, V29, DOI 10.1002/stvr.1695
   Sohn J, 2017, PROCEEDINGS OF THE 26TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA'17), P273, DOI 10.1145/3092703.3092717
   TUKEY JW, 1949, BIOMETRICS, V5, P99, DOI 10.2307/3001913
   Wang S, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P523, DOI 10.1145/3106237.3106258
   Wang WE, 1997, EIGHTH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P264, DOI 10.1109/ISSRE.1997.630875
   Yoo S, 2012, SOFTW TEST VERIF REL, V22, P67, DOI [10.1002/stv.430, 10.1002/stvr.430]
   Yoo S, 2009, ISSTA 2009: INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P201
   Zhang LM, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P192, DOI 10.1109/ICSE.2013.6606565
   Zhang LM, 2009, PROC IEEE INT CONF S, P19, DOI 10.1109/ICSM.2009.5306350
   Zhang M, 2017, P 26 ACM SIGS INT S, P261, DOI DOI 10.1145/3092703.3092731
   Zhou JY, 2022, ACM T SOFTW ENG METH, V31, DOI 10.1145/3471906
NR 82
TC 4
Z9 4
U1 3
U2 12
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD DEC 1
PY 2022
VL 48
IS 12
BP 5102
EP 5119
DI 10.1109/TSE.2021.3137929
PG 18
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 6X8ON
UT WOS:000896667600019
OA Green Submitted, hybrid
DA 2024-07-18
ER

PT J
AU Tushev, M
   Ebrahimi, F
   Mahmoud, A
AF Tushev, Miroslav
   Ebrahimi, Fahimeh
   Mahmoud, Anas
TI A Systematic Literature Review of Anti-Discrimination Design Strategies
   in the Digital Sharing Economy
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Digital discrimination; sharing economy; systematic review;
   evidence-based design
ID TRUST; RACE; ONLINE; PEOPLE; AIRBNB; HOME
AB Appilications of the Digital Sharing Economy (DSE), such as Uber, Airbnb, and TaskRabbit, have become a main facilitator of economic growth and shared prosperity in modern-day societies. However, recent research has revealed that the participation of minority groups in DSE activities is often hindered by different forms of bias and discrimination. Evidence of such behavior has been documented across almost all domains of DSE, including ridesharing, lodging, and freelancing. However, little is known about the underlying design decisions of DSE platforms which allow certain demographics of the market to gain unfair advantage over others. To bridge this knowledge gap, in this paper, we systematically synthesize evidence from 58 interdisciplinary studies to identify the pervasive discrimination concerns affecting DSE platforms along with their triggering features and mitigation strategies. Our objective is to consolidate such interdisciplinary evidence from a software design point of view. Our results show that existing evidence is mainly geared towards documenting and mitigating issues of racism and sexism affecting platforms of ridesharing, lodging, and freelancing. Our review further shows that discrimination concerns in the DSE market are commonly enabled by features of user profiles and commonly impact reputation systems.
C1 [Tushev, Miroslav; Ebrahimi, Fahimeh; Mahmoud, Anas] Louisiana State Univ, Dept Comp Sci & Engn, Baton Rouge, LA 70803 USA.
C3 Louisiana State University System; Louisiana State University
RP Mahmoud, A (corresponding author), Louisiana State Univ, Dept Comp Sci & Engn, Baton Rouge, LA 70803 USA.
EM mtushe1@lsu.edu; febrah1@lsu.edu; mahmoud@csc.lsu.edu
FU U.S. National Science Foundation [CNS 1951411]
FX This work was supported by the U.S. National Science Foundation under
   Grant CNS 1951411.
CR Abrahao B, 2017, P NATL ACAD SCI USA, V114, P9848, DOI 10.1073/pnas.1604234114
   Abramova O, 2020, PROC EUR C INF SYST
   Adams M., 2013, READINGS DIVERSITY S, V3rd
   Ahuja R., 2017, 1917 TRIN COLL DUBL
   Ameri M, 2020, ACAD MANAG DISCOV, V6, P176, DOI 10.5465/amd.2018.0054
   Barzilay Arianne Renan, 2016, Seton Hall Law Review, V47, P393, DOI [10.2139/ssrn.2995906, DOI 10.2139/SSRN.2995906]
   Bertrand Marianne, 2016, 22014 NAT BUR EC RES
   Brown AE, 2023, J PLAN EDUC RES, V43, P268, DOI 10.1177/0739456X19871687
   Carol S, 2019, POPUL SPACE PLACE, V25, DOI 10.1002/psp.2249
   Cheng MM, 2018, INT J HOSP MANAG, V70, P95, DOI 10.1016/j.ijhm.2017.11.002
   Choi E, 2019, LECT NOTES COMPUT SC, V11864, P3, DOI 10.1007/978-3-030-34971-4_1
   Countouris N, 2018, CAMB LAW HANDBOOKS, P486
   Cui RM, 2020, MANAGE SCI, V66, P1071, DOI 10.1287/mnsc.2018.3273
   Dann D., 2017, J SELF GOVERNANCE MA, V5, P53, DOI [DOI 10.22381/JSME5420173, 10.22381/JSME5420173]
   Dillahunt TR, 2015, CHI 2015: PROCEEDINGS OF THE 33RD ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, P2285, DOI 10.1145/2702123.2702189
   Doleac JL, 2013, ECON J, V123, pF469, DOI 10.1111/ecoj.12082
   Edelman B, 2017, AM ECON J-APPL ECON, V9, P1, DOI 10.1257/app.20160213
   Ert E, 2019, ANN TOURISM RES, V75, P279, DOI 10.1016/j.annals.2019.01.004
   Ert E, 2016, TOURISM MANAGE, V55, P62, DOI 10.1016/j.tourman.2016.01.013
   Foong Eureka, 2018, Proceedings of the ACM on Human-Computer Interaction, V2, DOI 10.1145/3274322
   Galperin H, 2019, DIGITAL ECONOMIES AT GLOBAL MARGINS, P295
   Ge Y., 2017, 22776 NAT BUR EC RES
   Goel N, 2020, PROCEEDINGS OF THE 12TH ACM CONFERENCE ON WEB SCIENCE, WEBSCI 2020, P355, DOI 10.1145/3394231.3397926
   Greenwood B., 2018, Academy of Management Proceedings, V2018, P12196
   Hamari J, 2016, J ASSOC INF SCI TECH, V67, P2047, DOI 10.1002/asi.23552
   Hannák A, 2017, CSCW'17: PROCEEDINGS OF THE 2017 ACM CONFERENCE ON COMPUTER SUPPORTED COOPERATIVE WORK AND SOCIAL COMPUTING, P1914, DOI 10.1145/2998181.2998327
   Hanrahan B V., 2017, ECSCW Exploratory Papers, P1
   Hautojrvi P., 1979, Experimentation in software engineering, V1ST, DOI [10.1007/978-3-642-81316-0, 10.1007/978-3-642-29044-2., DOI 10.1007/978-3-642-29044-2]
   Hawlitschek F, 2018, ELECTRON COMMER R A, V29, P50, DOI 10.1016/j.elerap.2018.03.005
   Jaeger B., 2020, J ECON PSYCHOL
   Jaeger B, 2019, J ECON PSYCHOL, V75, DOI 10.1016/j.joep.2018.11.004
   Jha N, 2019, EMPIR SOFTW ENG, V24, P3659, DOI 10.1007/s10664-019-09716-7
   Kakar V, 2018, J HOUS ECON, V40, P25, DOI 10.1016/j.jhe.2017.08.001
   Karlsson L, 2017, ANN TOURISM RES, V62, P1, DOI 10.1016/j.annals.2016.10.002
   Kitchenham BA, 2004, PROC INT CONF SOFTW, P273
   Kitchenham B, 2009, INFORM SOFTWARE TECH, V51, P7, DOI 10.1016/j.infsof.2008.09.009
   Koh V, 2019, EPJ DATA SCI, V8, DOI 10.1140/epjds/s13688-019-0189-5
   Laouenan M., 2017, Ethnic discrimination on an online marketplace of vacation rental
   Leong N, 2017, GEORGETOWN LAW J, V105, P1271
   Leung WW, 2020, PROCEEDINGS OF THE 2020 CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS (CHI'20), DOI 10.1145/3313831.3376874
   Levy K., 2017, Berkeley Tech Law Journal, V32, P1183, DOI DOI 10.15779/Z38BV79V7K
   Luca Michael, 2017, Innovation Policy and the Economy, V17, P77, DOI DOI 10.1086/688845
   Ma X, 2017, CSCW'17: PROCEEDINGS OF THE 2017 ACM CONFERENCE ON COMPUTER SUPPORTED COOPERATIVE WORK AND SOCIAL COMPUTING, P2397, DOI 10.1145/2998181.2998269
   Mahmoud A, 2016, REQUIR ENG, V21, P357, DOI 10.1007/s00766-016-0252-8
   Malin BJ, 2017, COMMUN CULT CRIT, V10, P382, DOI 10.1111/cccr.12157
   Mao ZX, 2020, J HOSP TOUR MANAG, V42, P67, DOI 10.1016/j.jhtm.2019.11.012
   Mapelli Elizabeth A, 2018, Am Univ Law Rev, V67, P1947
   Martin CJ, 2016, ECOL ECON, V121, P149, DOI 10.1016/j.ecolecon.2015.11.027
   MAYER RC, 1995, ACAD MANAGE REV, V20, P709, DOI 10.2307/258792
   Mesch GS, 2012, COMPUT HUM BEHAV, V28, P1471, DOI 10.1016/j.chb.2012.03.010
   Mohammed A., 2017, Job Market Paper
   Monachou F.G, 2019, P 33 INT C NEUR INF
   Moody J, 2019, TRANSPORT RES F-TRAF, V62, P258, DOI 10.1016/j.trf.2019.01.003
   Mylopoulos J, 1999, COMMUN ACM, V42, P31, DOI 10.1145/291469.293165
   Nodtvedt KB, 2021, J EXP PSYCHOL-APPL, V27, P508, DOI 10.1037/xap0000355
   Nowak A, 2017, IEEE SOFTWARE, V34, P67, DOI 10.1109/MS.2017.3571572
   Pallais A, 2014, AM ECON REV, V104, P3565, DOI 10.1257/aer.104.11.3565
   Picard E., 2018, Racial discrimination in the sharing economy evidence from online experiments
   Qiu W., 2018, PROC C HUM FACTORS C, P1
   Quattrone G, 2016, PROCEEDINGS OF THE 25TH INTERNATIONAL CONFERENCE ON WORLD WIDE WEB (WWW'16), P1385, DOI 10.1145/2872427.2874815
   Radanovic G, 2016, ACM T INTEL SYST TEC, V7, DOI 10.1145/2856102
   Reed R., 2017, Georgia State University Law Review, V33, P517
   Rogers B., 2015, U CHI L REV DIALOGUE, V82, P85, DOI DOI 10.2139/SSRN.2608017
   Rosario R., 2016, Journal of Information Systems Education, V20, P289
   Ruvolo M., 2020, Access Denied? Perceptions of New Mobility Services among Disabled People in San Francisco
   Shaheen S., 2015, Mobility and the sharing economy: Impacts synopsis
   Simonovits B, 2018, CORVINUS J SOCIOL PO, V9, P55, DOI 10.14267/CJSSP.2018.1.03
   Su N, 2020, INT J HOSP MANAG, V89, DOI 10.1016/j.ijhm.2019.102405
   ter Huurne M, 2017, J CONSUM BEHAV, V16, P485, DOI 10.1002/cb.1667
   Thebault-Spieker J, 2015, PROCEEDINGS OF THE 2015 ACM INTERNATIONAL CONFERENCE ON COMPUTER-SUPPORTED COOPERATIVE WORK AND SOCIAL COMPUTING (CSCW'15), P265, DOI 10.1145/2675133.2675278
   Tjaden JD, 2018, EUR SOCIOL REV, V34, P418, DOI 10.1093/esr/jcy024
   Todisco M., 2015, STANFORD LAW REV, V67
   Tushev M, 2020, INT REQUIR ENG CONF, P204, DOI 10.1109/RE48521.2020.00031
   van der Cruijsen C, 2019, J ECON BEHAV ORGAN, V166, P751, DOI 10.1016/j.jebo.2019.08.021
   van Lamsweerde A, 2001, FIFTH IEEE INTERNATIONAL SYMPOSIUM ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P249
   Wang D., 2015, 2015090104 TECHN SCI
   Williams G, 2020, AUTOMAT SOFTW ENG, V27, P229, DOI 10.1007/s10515-020-00274-7
   WOHLIN Claes, 2014, P 18 INT C EVALUATIO, DOI [10.1145/2601248.2601268.10, 10.1145/2601248.2601268]
   Ye T., 2017, Proceedings of Thirty Eighth International Conference on Information Systems, P1
   Zhu G, 2017, INT J CONTEMP HOSP M, V29, P2218, DOI 10.1108/IJCHM-09-2016-0496
NR 80
TC 2
Z9 2
U1 5
U2 12
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD DEC 1
PY 2022
VL 48
IS 12
BP 5148
EP 5157
DI 10.1109/TSE.2021.3139961
PG 10
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 6X8ON
UT WOS:000896667600022
OA hybrid
DA 2024-07-18
ER

PT J
AU Ebnenasir, A
AF Ebnenasir, Ali
TI Verification and Synthesis of Responsive Symmetric Uni-Rings
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Parameterized protocols; verification; synthesis; LeadsTo properties
ID SYSTEMS
AB This paper investigates the verification and synthesis of parameterized protocols that satisfy leadsto properties on symmetric unidirectional rings (a.k.a. uni-rings) of deterministic, self-disabling and constant-space processes. First, we show that when R and Q are conjunctive global state predicates, verifying 'R leadsto Q' (denoted R wavy left right arrow Q) for parameterized protocols on symmetric unirings is undecidable. Then, we show that surprisingly synthesizing symmetric uni-ring protocols that satisfy R wavy left right arrow Q is actually decidable. We identify necessary and sufficient conditions for the decidability of synthesis based on which we design and implement a sound and complete algorithm that takes the predicates R and Q, and automatically generates a parameterized protocol that satisfies R wavy left right arrow Q for unbounded (but finite) ring sizes. Moreover, we show that verifying leadsto properties remains undecidable even if R and Q are local state predicates! This result would lead to the impossibility of computing a cutoff for local leadsto on symmetric rings of deterministic, self-disabling and constant-space processes. We further show that verifying local and global deadlocks in our formal setting are decidable problems. We also present a cutoff theorem that enables the construction of symmetric rings where deadlocks are reachable.
C1 [Ebnenasir, Ali] Michigan Technol Univ, Dept Comp Sci, Houghton, MI 49931 USA.
C3 Michigan Technological University
RP Ebnenasir, A (corresponding author), Michigan Technol Univ, Dept Comp Sci, Houghton, MI 49931 USA.
EM aebnenas@mtu.edu
CR Abdulla PA, 2004, LECT NOTES COMPUT SC, V3170, P35
   Aminof B, 2016, LECT NOTES ARTIF INT, V9706, P499, DOI 10.1007/978-3-319-40229-1_34
   [Anonymous], 2000, Lecture Notes in Computer Science
   Attie PC, 1998, ACM T PROGR LANG SYS, V20, P51, DOI 10.1145/271510.271519
   Bernard Samuel, 2009, IPDPS'09, P1, DOI [10.1109/IPDPS.2009.5161053, DOI 10.1109/IPDPS.2009.5161053]
   BHAT G, 1995, IEEE S LOG, P388, DOI 10.1109/LICS.1995.523273
   Clarke EM, 1996, FORM METHOD SYST DES, V9, P77, DOI 10.1007/BF00625969
   Conchon Sylvain, 2012, Computer Aided Verification. Proceedings 24th International Conference, CAV 2012, P718, DOI 10.1007/978-3-642-31424-7_55
   De Moura L, 2011, COMMUN ACM, V54, P69, DOI 10.1145/1995376.1995394
   DIJKSTRA EW, 1974, COMMUN ACM, V17, P643, DOI 10.1145/361179.361202
   Ebnenasir A, 2021, IEEE T SOFTWARE ENG, V47, P614, DOI 10.1109/TSE.2019.2901485
   Ebnenasir A, 2019, 2019 FORMAL METHODS IN COMPUTER AIDED DESIGN (FMCAD), P78, DOI [10.23919/fmcad.2019.8894272, 10.23919/FMCAD.2019.8894272]
   Emerson EA, 2004, LECT NOTES COMPUT SC, V3210, P325
   Emerson EA, 1996, FORM METHOD SYST DES, V9, P105, DOI 10.1007/BF00625970
   Emerson EA., 2003, INT J FOUND COMPUT S, V14, P527, DOI DOI 10.1142/S0129054103001881
   Farahat A, 2012, INT CON DISTR COMP S, P496, DOI 10.1109/ICDCS.2012.66
   Farzan A, 2016, PROCEEDINGS OF THE 31ST ANNUAL ACM-IEEE SYMPOSIUM ON LOGIC IN COMPUTER SCIENCE (LICS 2016), P185, DOI 10.1145/2933575.2935310
   Finkbeiner Bernd, 2013, International Journal on Software Tools for Technology Transfer, V15, P519, DOI 10.1007/s10009-012-0228-z
   Fioravanti F, 2013, THEOR PRACT LOG PROG, V13, P175, DOI 10.1017/S1471068411000627
   Gascón A, 2014, ELECTRON P THEOR COM, P5, DOI 10.4204/EPTCS.157.5
   Ghilardi S, 2010, LECT NOTES ARTIF INT, V6173, P22
   Gouda M.G., 2001, P 5 INT WORKSHOP SEL, P114
   Gouda MG, 1996, J PARALLEL DISTR COM, V35, P43, DOI 10.1006/jpdc.1996.0066
   Grinchtein O, 2006, LECT NOTES ARTIF INT, V4130, P483
   Ip CN, 1999, FORM METHOD SYST DES, V14, P273, DOI 10.1023/A:1008723125149
   Jacobs S, 2012, LECT NOTES COMPUT SC, V7214, P362, DOI 10.1007/978-3-642-28756-5_25
   Klinkhamer A, 2019, ACM T COMPUT LOG, V20, DOI 10.1145/3326456
   Klinkhamer A, 2016, IEEE T PARALL DISTR, V27, P3338, DOI 10.1109/TPDS.2016.2536023
   Klinkhamer AP, 2017, LECT NOTES COMPUT SC, V10522, P100, DOI 10.1007/978-3-319-68972-2_7
   Klinkhamer AP, 2013, LECT NOTES COMPUT SC, V8255, P163, DOI 10.1007/978-3-319-03089-0_12
   Lazic M., 2018, P 21 INT C PRINC DIS, P1
   Matthews O, 2016, PROCEEDINGS OF THE 2016 16TH CONFERENCE ON FORMAL METHODS IN COMPUTER-AIDED DESIGN (FMCAD 2016), P101, DOI 10.1109/FMCAD.2016.7886667
   McMillan K. L., 2001, Correct Hardware Design and Verification Methods. 11th IFIP WG 10.5 Advanced Research Working Conference, CHARME 2001. Proceedings (Lecture Notes in Computer Science Vol.2144), P179
   Mirzaie N., 2018, PROC 22 INT C PRINC
   Namjoshi KS, 2018, LECT NOTES COMPUT SC, V10806, P379, DOI 10.1007/978-3-319-89963-3_22
   Namjoshi KS, 2016, LECT NOTES COMPUT SC, V9636, P589, DOI 10.1007/978-3-662-49674-9_39
   PNUELI A, 1990, ANN IEEE SYMP FOUND, P746
   Roychoudhury A, 2000, LECT NOTES COMPUT SC, V1785, P172
   Sánchez A, 2014, INT WORKSHOP TEMPORA, P132, DOI 10.1109/TIME.2014.11
   SUZUKI I, 1988, INFORM PROCESS LETT, V28, P213, DOI 10.1016/0020-0190(88)90211-6
   Varghese G., 1993, THESIS MIT CAMBRIDGE
   WOLPER P, 1990, LECT NOTES COMPUT SC, V407, P68
NR 42
TC 0
Z9 0
U1 0
U2 0
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD NOV 1
PY 2022
VL 48
IS 11
BP 4447
EP 4464
DI 10.1109/TSE.2021.3119771
PG 18
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 6C4JD
UT WOS:000881981800012
DA 2024-07-18
ER

PT J
AU Gui, BF
   Song, W
   Xiong, HL
   Huang, J
AF Gui, Binfa
   Song, Wei
   Xiong, Hailong
   Huang, Jeff
TI Automated Use-After-Free Detection and Exploit Mitigation: How Far Have
   We Gone?
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Instruments; Static analysis; Detectors; Performance analysis; Tools;
   Runtime; Databases; Use-After-Free; vulnerability detection; exploit
   mitigation; program analysis; survey
ID MEMORY MANAGEMENT; SAFE
AB C/C++ programs frequently encounter memory errors, such as Use-After-Free (UAF), buffer overflow, and integer overflow. Among these memory errors, UAF vulnerabilities are increasingly being exploited by attackers to disrupt critical software systems, leading to serious consequences, such as remote code execution and data breaches. Researchers have proposed dozens of approaches to detect UAFs in testing environments and to mitigate UAF exploit in production environments. However, to the best of our knowledge, no comprehensive studies have evaluated and compared these approaches. In this paper, we shed light on the current UAF detection and exploit mitigation approaches and provide a systematic overview, comprehensive comparison, and evaluation. Specifically, we evaluate the effectiveness and efficiency of publicly available UAF detection and exploit mitigation tools. The experimental results show that static UAF detectors are suitable for detecting intra-procedural UAFs but are not sufficient to detect inter-procedural UAFs in real-world programs. Dynamic UAF detectors are still the first choice for detecting inter-procedural UAFs. Our evaluation also demonstrates that the runtime overhead of existing UAF exploit mitigation tools is relatively stable whereas the memory overhead may vary dramatically with respect to different programs. Finally, we envision potential valuable future research directions.
C1 [Gui, Binfa; Song, Wei; Xiong, Hailong] Nanjing Univ Sci & Technol, Sch Comp Sci & Engn, Nanjing 210094, Peoples R China.
   [Huang, Jeff] Texas A&M Univ, Parasol Lab, College Stn, TX 77843 USA.
C3 Nanjing University of Science & Technology; Texas A&M University System;
   Texas A&M University College Station
RP Song, W (corresponding author), Nanjing Univ Sci & Technol, Sch Comp Sci & Engn, Nanjing 210094, Peoples R China.
EM guibinfa@gmail.com; wsong@njust.edu.cn; 1512960062@qq.com;
   jeff@cse.tamu.edu
OI Song, Wei/0000-0002-4324-3382
FU National Natural Science Foundation of China [61761136003]
FX This work was supported by the National Natural Science Foundation of
   China under Grant 61761136003.
CR Afek J., 2007, DANGLING POINTER SMA
   Ainsworth S, 2020, P IEEE S SECUR PRIV, P578, DOI 10.1109/SP40000.2020.00058
   Allen F.E., 1970, ACM Sigplan Not, V5, P1, DOI [DOI 10.1145/800028.808479, 10.1145/390013.808479, DOI 10.1145/390013.808479]
   [Anonymous], The Kernel Address Sanitizer
   [Anonymous], 2007, P THE 6 JOINT M EUR
   [Anonymous], 2010, P USENIX SEC S
   [Anonymous], SCUDO MALLOC
   [Anonymous], 2021, DETECTING CRITICAL C
   [Anonymous], 2012, INT C SOFTWARE ENG F
   [Anonymous], JULIET TEST SUITE 1
   [Anonymous], MUDFLAP POINTER DEBU
   Austin ToddM., 1994, P ACM SIGPLAN 1994 C, P290
   Bai JJ, 2019, PROCEEDINGS OF THE 2019 USENIX ANNUAL TECHNICAL CONFERENCE, P255
   Baldoni R, 2018, ACM COMPUT SURV, V51, DOI 10.1145/3182657
   Bauer M., 2021, PROC IEEE EUR S SECU, P863
   Berger ED, 2006, ACM SIGPLAN NOTICES, V41, P158, DOI 10.1145/1133981.1134000
   BERRY DM, 1977, COMPUT LANG, V2, P135, DOI 10.1016/0096-0551(77)90002-9
   Bhatkar S, 2003, USENIX ASSOCIATION PROCEEDINGS OF THE 12TH USENIX SECURITY SYMPOSIUM, P105
   Biere A, 2003, ADV COMPUT, V58, P117
   Boehm H.-J., 2002, A Garbage Collector for C and C++
   BOEHM HJ, 1988, SOFTWARE PRACT EXPER, V18, P807, DOI 10.1002/spe.4380180902
   Böhme M, 2019, IEEE T SOFTWARE ENG, V45, P489, DOI 10.1109/TSE.2017.2785841
   Bounov D, 2016, 23RD ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2016), DOI 10.14722/ndss.2016.23421
   Bruening D., 2004, THESIS MIT USA
   Bruening D, 2011, PROCEED CGO, P213, DOI 10.1109/CGO.2011.5764689
   Burow Nathan, 2018, PROC S NETW DISTRIB, P1
   Caballero Juan, 2012, P 2012 INT S SOFTW T, P133
   Cadar C., 2008, OSDI, V8, P209, DOI DOI 10.5555/1855741.1855756
   Cai Y, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P706, DOI 10.1145/3338906.3338927
   Chao Zhang, 2016, 2016 IEEE International Workshop on Electromagnetics (iWEM): Applications and Student Innovation Competition, P1, DOI 10.1109/iWEM.2016.7505075
   Chen P, 2018, P IEEE S SECUR PRIV, P711, DOI 10.1109/SP.2018.00046
   Chirica L., 1973, P S HIGH LEV LANG CO, P141
   Clang, About us
   Condit J, 2003, ACM SIGPLAN NOTICES, V38, P232, DOI 10.1145/780822.781157
   Dang THY, 2017, PROCEEDINGS OF THE 26TH USENIX SECURITY SYMPOSIUM (USENIX SECURITY '17), P815
   Daniel M., 2008, PROC 2 USENIX WORKSH
   Das S., 2019, PROCEED INGS 20 ACM, P19
   de Moura L, 2008, LECT NOTES COMPUT SC, V4963, P337, DOI 10.1007/978-3-540-78800-3_24
   Deligiannis P, 2015, IEEE INT CONF AUTOM, P166, DOI 10.1109/ASE.2015.30
   DeLozier C, 2013, ACM SIGPLAN NOTICES, V48, P287, DOI [10.1145/2544173.2509550, 10.1145/2509136.2509550]
   Dewey D, 2015, PROCEEDINGS 10TH INTERNATIONAL CONFERENCE ON AVAILABILITY, RELIABILITY AND SECURITY ARES 2015, P90, DOI 10.1109/ARES.2015.61
   Dhurjati D, 2006, I C DEPEND SYS NETWO, P269, DOI 10.1109/DSN.2006.31
   Dhurjati D, 2006, ACM SIGPLAN NOTICES, V41, P144, DOI 10.1145/1133981.1133999
   Dinesh S, 2020, P IEEE S SECUR PRIV, P1497, DOI 10.1109/SP40000.2020.00009
   Duck GJ, 2018, ACM SIGPLAN NOTICES, V53, P181, DOI [10.1145/3296979.3192388, 10.1145/3192366.3192388]
   EDELSON DR, 1992, P USENIX CPLUSPLUS C, P1
   Eigler FrankCh., 2003, GCC DEV SUMMIT
   Engler D., 2003, Operating Systems Review, V37, P237, DOI 10.1145/1165389.945468
   Fan XK, 2017, PROCEEDINGS OF THE 26TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA'17), P329, DOI 10.1145/3092703.3092729
   Feist J, 2014, J COMPUT VIROL HACKI, V10, P211, DOI 10.1007/s11416-014-0203-1
   Filardo NW, 2020, P IEEE S SECUR PRIV, P608, DOI 10.1109/SP40000.2020.00098
   Fioraldi A, 2020, 2020 IEEE SECURE DEVELOPMENT (SECDEV 2020), P23, DOI 10.1109/SecDev45635.2020.00019
   Gawlik Robert, 2014, P 30 ANN COMPUTER SE, P396
   Grossman D, 2002, ACM SIGPLAN NOTICES, V37, P282, DOI 10.1145/543552.512563
   HARIRI A.-A., 2015, ABUSING SILENT MITIG
   HASTINGS R, 1991, PROCEEDINGS OF THE WINTER 1992 USENIX CONFERENCE, P125
   Hong S, 2013, J SYST SOFTWARE, V86, P377, DOI 10.1016/j.jss.2012.08.063
   Huang J, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P609, DOI 10.1145/3180155.3180225
   Huang J, 2014, ACM SIGPLAN NOTICES, V49, P337, DOI [10.1145/2666356.2594315, 10.1145/2594291.2594315]
   HWAddressSanitizer, US
   Iyer Vivek, 2010, Proceedings of the 2010 IEEE 21st International Symposium on Software Reliability Engineering (ISSRE 2010), P339, DOI 10.1109/ISSRE.2010.22
   Jang D, 2014, 21ST ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2014), DOI 10.14722/ndss.2014.23287
   Jim T, 2002, USENIX ASSOCIATION PROCEEDINGS OF THE GENERAL TRACK, P275
   Jung R, 2021, COMMUN ACM, V64, P144, DOI 10.1145/3418295
   Kremenek T., 2008, Finding software bugs with the clang static analyzer
   Kroening D., 2014, CBMC-C bounded model checker, P389, DOI DOI 10.1007/978-3-642-54862-8_26
   Lee B, 2015, 22ND ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2015), DOI 10.14722/ndss.2015.23238
   Lemieux C, 2018, IEEE INT CONF AUTOM, P475, DOI 10.1145/3238147.3238176
   Liu BC, 2019, MIDDLEWARE'19: PROCEEDINGS OF THE 2019 MIDDLEWARE'19: 20TH INTERNATIONAL MIDDLEWARE CONFERENCE, P1, DOI 10.1145/3361525.3361532
   Liu DP, 2018, PROCEEDINGS OF THE 2018 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY (CCS'18), P1635, DOI 10.1145/3243734.3243826
   Liu TP, 2016, PROC INT CONF SOFTW, P911, DOI 10.1145/2884781.2884784
   Lvin VB, 2008, ACM SIGPLAN NOTICES, V43, P115, DOI 10.1145/1353536.1346296
   Lyu CY, 2019, PROCEEDINGS OF THE 28TH USENIX SECURITY SYMPOSIUM, P1949
   Marjamaki D., 2013, Cppcheck: a tool for static c/c++ code analysis
   Milburn A, 2017, 24TH ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2017), DOI 10.14722/ndss.2017.23183
   Nagarakatte S., 2014, P ANN IEEE ACM INT S, P175
   Nagarakatte S, 2012, CONF PROC INT SYMP C, P189, DOI 10.1109/ISCA.2012.6237017
   Nagarakatte S, 2010, ACM SIGPLAN NOTICES, V45, P31
   Necula GC, 2005, ACM T PROGR LANG SYS, V27, P477, DOI 10.1145/1065887.1065892
   Necula GC, 2002, ACM SIGPLAN NOTICES, V37, P128, DOI 10.1145/565816.503286
   Nethercote N, 2007, PLDI'07: PROCEEDINGS OF THE 2007 ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P89, DOI 10.1145/1250734.1250746
   Nguyen M.-D., 2020, P 23 INT S RES ATT I, P47
   Novark G, 2010, PROCEEDINGS OF THE 17TH ACM CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY (CCS'10), P573, DOI 10.1145/1866307.1866371
   Oiwa Y, 2009, PLDI'09 PROCEEDINGS OF THE 2009 ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P259, DOI 10.1145/1542476.1542505
   Oleksenko O, 2018, P ACM MEAS ANAL COMP, V2, DOI 10.1145/3224423
   Olesen MC, 2014, SCI COMPUT PROGRAM, V91, P141, DOI 10.1016/j.scico.2012.10.011
   Prakash A, 2015, 22ND ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2015), DOI 10.14722/ndss.2015.23297
   Qiang WZ, 2019, IEEE ACCESS, V7, P45961, DOI 10.1109/ACCESS.2019.2908022
   Sarbinowski P, 2016, ANN COMPUT SECURITY, P448, DOI 10.1145/2991079.2991121
   Serebryany K., 2011, RV, P110, DOI [10.1007/978-3-642-29860-8_9, 10.1007/, DOI 10.1007/978-3-642-29860-8_9]
   Serebryany Konstantin, 2009, Proceedings of the Workshop on Binary Instrumentation and Applications, WBIA'09, P62, DOI DOI 10.1145/1791194.1791203
   Serebryany Konstantin, 2012, USENIX, P309
   Sharifi R, 2020, ANN I S COM, P762, DOI 10.1109/ISCA45697.2020.00068
   Shen Z, 2020, ANN COMPUT SECURITY, P454, DOI 10.1145/3427228.3427645
   Shin J, 2019, 26TH ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2019), DOI 10.14722/ndss.2019.23541
   Silvestro S, 2018, PROCEEDINGS OF THE 27TH USENIX SECURITY SYMPOSIUM, P117
   Silvestro S, 2017, CCS'17: PROCEEDINGS OF THE 2017 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P2389, DOI 10.1145/3133956.3133957
   Simpson MS, 2013, SOFTWARE PRACT EXPER, V43, P93, DOI 10.1002/spe.2105
   Song D, 2019, P IEEE S SECUR PRIV, P1275, DOI 10.1109/SP.2019.00010
   Sotirov A, 2007, Heap Feng Shui in Javascript
   Suan Hsi Yong, 2003, Software Engineering Notes, V28, P307, DOI 10.1145/949952.940113
   Sui YL, 2016, PROCEEDINGS OF THE 25TH INTERNATIONAL CONFERENCE ON COMPILER CONSTRUCTION (CC 2016), P265, DOI 10.1145/2892208.2892235
   TscanCode, About us
   Valasek C., 2010, Understanding the low fragmentation heap
   van der Kouwe E, 2018, 34TH ANNUAL COMPUTER SECURITY APPLICATIONS CONFERENCE (ACSAC 2018), P17, DOI 10.1145/3274694.3274705
   van der Kouwe E, 2017, PROCEEDINGS OF THE TWELFTH EUROPEAN CONFERENCE ON COMPUTER SYSTEMS (EUROSYS 2017), P405, DOI 10.1145/3064176.3064211
   Vojdani V, 2016, IEEE INT CONF AUTOM, P391, DOI 10.1145/2970276.2970337
   VOROBYOV K, 2018, PROC INT C TESTS PRO, P139
   Vorobyov K., 2010, P SSV, P1
   Vorobyov K, 2017, ACM SIGPLAN NOTICES, V52, P47, DOI 10.1145/3156685.3092269
   Vorobyov K, 2017, LECT NOTES COMPUT SC, V10548, P294, DOI 10.1007/978-3-319-67531-2_18
   Wang HJ, 2020, PROC INT CONF SOFTW, P999, DOI 10.1145/3377811.3380386
   Wang Y, 2018, INTERNETWARE'18: PROCEEDINGS OF THE TENTH ASIA-PACIFIC SYMPOSIUM ON INTERNETWARE, DOI 10.1145/3275219.3275231
   Wei Xu, 2004, Software Engineering Notes, V29, P117, DOI 10.1145/1041685.1029913
   Wickman B, 2021, PROCEEDINGS OF THE 30TH USENIX SECURITY SYMPOSIUM, P2453
   Williams-King David, 2020, ASPLOS '20: Proceedings of the Twenty-Fifth International Conference on Architectural Support for Programming Languages and Operating Systems, P133, DOI 10.1145/3373376.3378470
   Xia HY, 2019, MICRO'52: THE 52ND ANNUAL IEEE/ACM INTERNATIONAL SYMPOSIUM ON MICROARCHITECTURE, P545, DOI 10.1145/3352460.3358288
   Xu W, 2015, CCS'15: PROCEEDINGS OF THE 22ND ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P414, DOI 10.1145/2810103.2813637
   Yan H, 2017, ANN COMPUT SECURITY, P42, DOI 10.1145/3134600.3134620
   Yan H, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P327, DOI 10.1145/3180155.3180178
   Yason M. V., 2014, UNDERSTANDING IES NE
   Ye JY, 2014, CCS'14: PROCEEDINGS OF THE 21ST ACM CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P1529, DOI 10.1145/2660267.2662394
   Younan Y, 2015, 22ND ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2015), DOI 10.14722/ndss.2015.23190
   Yun I, 2018, PROCEEDINGS OF THE 27TH USENIX SECURITY SYMPOSIUM, P745
   Zalewski M, 2014, American fuzzy lop
   Zhang C, 2015, 22ND ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2015), DOI 10.14722/ndss.2015.23099
   Zhang MJ, 2018, ROUTL CONTEMP CHINA, P1, DOI 10.1109/ICNSC.2018.8361272
   Zhang T, 2019, TWENTY-FOURTH INTERNATIONAL CONFERENCE ON ARCHITECTURAL SUPPORT FOR PROGRAMMING LANGUAGES AND OPERATING SYSTEMS (ASPLOS XXIV), P631, DOI 10.1145/3297858.3304017
   Zhu KL, 2020, IEEE ACCESS, V8, P78713, DOI 10.1109/ACCESS.2020.2990197
NR 129
TC 2
Z9 2
U1 1
U2 5
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD NOV 1
PY 2022
VL 48
IS 11
BP 4569
EP 4589
DI 10.1109/TSE.2021.3121994
PG 21
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 6C4JD
UT WOS:000881981800019
OA hybrid
DA 2024-07-18
ER

PT J
AU Chen, S
   Chen, CY
   Fan, LL
   Fan, MM
   Zhan, X
   Liu, Y
AF Chen, Sen
   Chen, Chunyang
   Fan, Lingling
   Fan, Mingming
   Zhan, Xian
   Liu, Yang
TI Accessible or Not? An Empirical Investigation of Android App
   Accessibility
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Testing; Mobile applications; Tools; Internet; Guidelines; Fans;
   Statistics; Mobile accessibility; empirical study; automated
   accessibility testing; Android app; Xbot
ID WEBSITE ACCESSIBILITY
AB Mobile apps provide new opportunities to people with disabilities to act independently in the world. Following the law of the US, EU, mobile OS vendors such as Google and Apple have included accessibility features in their mobile systems and provide a set of guidelines and toolsets for ensuring mobile app accessibility. Motivated by this trend, researchers have conducted empirical studies by using the inaccessibility issue rate of each page (i.e., screen level) to represent the characteristics of mobile app accessibility. However, there still lacks an empirical investigation directly focusing on the issues themselves (i.e., issue level) to unveil more fine-grained findings, due to the lack of an effective issue detection method and a relatively comprehensive dataset of issues. To fill in this literature gap, we first propose an automated app page exploration tool, named Xbot, to facilitate app accessibility testing and automatically collect accessibility issues by leveraging the instrumentation technique and static program analysis. Owing to the relatively high activity coverage (around 80%) achieved by Xbot when exploring apps, Xbot achieves better performance on accessibility issue collection than existing testing tools such as Google Monkey. With Xbot, we are able to collect a relatively comprehensive accessibility issue dataset and finally collect 86,767 issues from 2,270 unique apps including both closed-source and open-source apps, based on which we further carry out an empirical study from the perspective of accessibility issues themselves to investigate novel characteristics of accessibility issues. Specifically, we extensively investigate these issues by checking 1) the overall severity of issues with multiple criteria, 2) the in-depth relation between issue types and app categories, GUI component types, 3) the frequent issue patterns quantitatively, and 4) the fixing status of accessibility issues. Finally, we highlight some insights to the community and hope to raise the attention to maintaining mobile app accessibility for users especially the elderly and disabled.
C1 [Chen, Sen] Tianjin Univ, Coll Intelligence & Comp, Tianjin 300350, Peoples R China.
   [Chen, Chunyang] Monash Univ, Melbourne, Vic 3800, Australia.
   [Fan, Lingling] Nankai Univ, Coll Cyber Sci, Tianjin 300350, Peoples R China.
   [Fan, Mingming] Hong Kong Univ Sci & Technol, Hong Kong, Peoples R China.
   [Zhan, Xian] Hong Kong Polytech Univ, Hong Kong, Peoples R China.
   [Liu, Yang] Nanyang Technol Univ, Sch Comp Sci & Engn, Singapore 639798, Singapore.
C3 Tianjin University; Monash University; Nankai University; Hong Kong
   University of Science & Technology; Hong Kong Polytechnic University;
   Nanyang Technological University
RP Chen, CY (corresponding author), Monash Univ, Melbourne, Vic 3800, Australia.; Fan, LL (corresponding author), Nankai Univ, Coll Cyber Sci, Tianjin 300350, Peoples R China.
EM senchen@tju.edu.cn; chunyang.chen@monash.edu; linglingfan@nankai.edu.cn;
   mingmingfan@ust.hk; chichoxian@gmail.com; yangliu@ntu.edu.sg
RI chen, minghui/KFR-8832-2024; Liu, Yang/D-2306-2013; li,
   fangyu/KCY-0521-2024; zhang, xiang/JJD-7003-2023
OI Liu, Yang/0000-0001-7300-9215; li, fangyu/0009-0009-8303-9157; Fan,
   Mingming/0000-0002-0356-4712; zhan, xian/0000-0001-9814-5977; Chen,
   Chunyang/0000-0003-2011-9618
FU National Natural Science Foundation of China [62102284, 62102197]
FX This work was supported by the National Natural Science Foundation of
   China under Grants 62102284 and 62102197.
CR Alshayban A, 2020, PROC INT CONF SOFTW, P1323, DOI 10.1145/3377811.3380392
   Amazon, 2019, AMAZON ASSISTANT
   Andow B, 2017, PROCEEDINGS OF THE 10TH ACM CONFERENCE ON SECURITY AND PRIVACY IN WIRELESS AND MOBILE NETWORKS (WISEC 2017), P23, DOI 10.1145/3098243.3098247
   Android-UIAutomatorViewer, 2019, ANDROIDUIAUTOMATORVI
   [Anonymous], 2019, M W TEST MANN WHITNE
   [Anonymous], 2019, GOOGLE MONKEY GOOGLE
   [Anonymous], 2018, It accessibility laws and policies
   [Anonymous], 2019, IBM ACCESSIBILITY
   [Anonymous], 2019, GOOGLE PLAY STOREVES
   [Anonymous], 2019, APPLE ACCESSIBILITY
   [Anonymous], 2019, MICROSOFT ACCESSIBIL
   [Anonymous], 2019, FACEBOOK ACCESSIBILI
   Anselm, 2019, TORCHIE VOLUME BUTTO
   Apkmonk, 2019, US
   Apple-Accessibility-Guideline, 2019, ACCESSIBILITY GUIDEL
   Apple-VoiceOver, 2019, VOICEOVER IPHONE
   Atlantic, 2018, SMART CITY IS ACCESS
   BBC, 2019, BBC MOBILE ACCESSIBI
   Bigham JP, 2010, ASSETS 2010: PROCEEDINGS OF THE 12TH INTERNATIONAL ACM SIGACCESS CONFERENCE ON COMPUTERS AND ACCESSIBILITY, P35
   Billingham L, 2014, LIBR MANAGE, V35, P565, DOI 10.1108/LM-11-2013-0107
   Booking, 2019, US
   Thorve S, 2018, PROC IEEE INT CONF S, P534, DOI 10.1109/ICSME.2018.00062
   Chen JS, 2020, Arxiv, DOI arXiv:2003.00380
   Chen S., 2019, MOBILE ACCESSIBILITY
   Chen S, 2020, PROC INT CONF SOFTW, P1310, DOI 10.1145/3377811.3380417
   Chen S, 2019, PROC INT CONF SOFTW, P596, DOI 10.1109/ICSE.2019.00070
   Chen S, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P797, DOI 10.1145/3236024.3275523
   Clegg-Vinell R., 2014, PROC 11 WEB C
   De Oliveira G.A.A., 2016, PROC 15 BRAZ S HUM F
   Díaz-Bossini JM, 2014, PROCEDIA COMPUT SCI, V27, P57, DOI 10.1016/j.procs.2014.02.008
   Eler MM, 2018, IEEE INT CONF SOFTW, P116, DOI 10.1109/ICST.2018.00021
   Espadinha C, 2011, DISABIL REHABIL, V33, P475, DOI 10.3109/09638288.2010.498554
   F droid, 2019, About Us
   Fan LL, 2018, IEEE INT CONF AUTOM, P486, DOI 10.1145/3238147.3238170
   Fan LL, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P408, DOI 10.1145/3180155.3180222
   Gilbertson TD., 2012, P INT CROSS DISCIPLI, P4, DOI DOI 10.1145/2207016.2207024
   Google-Accessibility, 2019, GOOGLE ACCESSIBILITY
   Google-Accessibility-Guideline, 2019, ACCESSIBILITY GUIDEL
   Google-Accessibility-Scanner, 2019, ACCESSIBILITY SCANNE
   Google-Accessibility-Suite, 2019, ANDROID ACCESSIBILIT
   Google-Accessibility-Test-Framework, 2019, ACCESSIBILITY TEST F
   Google-Android-Studio, 2019, ANDROID STUDIO IDE
   Google-Espresso, 2018, ESPRESSO ANDROID DEV
   Google-Lint, 2018, ANDROID LINT
   Google-Play-Store, 2019, US
   Google-Play-Store-Bankdroid, 2019, BANKDROID
   Google-Play-Store-Battery, 2019, BATTERY SAVER BATARI
   Google-Play-Store-Bitcoin, 2019, BITCOIN
   Google-Robolectric, 2018, ROBOLECTRIC
   GoogleMobile-First-Indexing, 2019, MOBILE 1 INDEXING
   Grellmann B, 2018, ASSETS'18: PROCEEDINGS OF THE 20TH INTERNATIONAL ACM SIGACCESS CONFERENCE ON COMPUTERS AND ACCESSIBILITY, P410, DOI 10.1145/3234695.3241011
   GSA, 2018, European accessibility act-Employment, Social Affairs, Inclusion
   Hackett S, 2005, BEHAV INFORM TECHNOL, V24, P407, DOI 10.1080/01449290500066661
   Hokkanen L, 2015, LECT NOTES BUS INF P, V212, P81, DOI 10.1007/978-3-319-18612-2_7
   IBM, 2016, MOBILE APPS ARE IMPR
   Jaramillo-Alcázar A, 2018, ADV INTELL SYST, V721, P552, DOI 10.1007/978-3-319-73450-7_52
   Kane SK, 2009, ASSETS'09: PROCEEDINGS OF THE 11TH INTERNATIONAL ACM SIGACCESS CONFERENCE ON COMPUTERS AND ACCESSIBILITY, P115
   Ladner R. E., 2015, Interactions, V22, P24, DOI DOI 10.1145/2723869
   Linares-Vásquez M, 2017, PROC IEEE INT CONF S, P399, DOI 10.1109/ICSME.2017.27
   Liu YP, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P1013, DOI 10.1145/2568225.2568229
   Mao K., 2016, P 25 INT S SOFTW TES, P94
   Park K., 2014, Proceedings of HCI Korea (Seoul, KOR), HCIK'15, P31
   Pecorelli F, 2020, INT C PROGRAM COMPRE, P296, DOI 10.1145/3387904.3389256
   Rello L., 2012, PROC TEXT CUSTOMIZAT
   Ross AS, 2020, ACM T ACCESS COMPUT, V13, DOI 10.1145/3348797
   Ross AS, 2018, ASSETS'18: PROCEEDINGS OF THE 20TH INTERNATIONAL ACM SIGACCESS CONFERENCE ON COMPUTERS AND ACCESSIBILITY, P119, DOI 10.1145/3234695.3236364
   Rubinov K, 2018, COMPUTER, V51, P60, DOI 10.1109/MC.2018.2141024
   Sanchez J., 2013, P 2013 ACM C PERV UB, P753, DOI DOI 10.1145/2494091.2496002
   Serra LC, 2015, PROCEDIA COMPUT SCI, V67, P348, DOI 10.1016/j.procs.2015.09.279
   Silva C, 2018, PROCEEDINGS OF THE 8TH INTERNATIONAL CONFERENCE ON SOFTWARE DEVELOPMENT AND TECHNOLOGIES FOR ENHANCING ACCESSIBILITY AND FIGHTING INFO-EXCLUSION (DSAI 2018), P286, DOI 10.1145/3218585.3218673
   Su T, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P245, DOI 10.1145/3106237.3106298
   Trewin Shari., 2010, Proceedings of the 2010 international cross disciplinary conference on web accessibility (W4A), P32, DOI DOI 10.1145/1805986.1806029
   United-Nations, 2018, ARTICLE 9 ACCESSIBIL
   Vendome C, 2019, PROC IEEE INT CONF S, P41, DOI 10.1109/ICSME.2019.00014
   W3C-Web-Accessibility, 2018, WEB CONTENT ACCESSIB
   W3CMobileAccessibility, 2018, MOBILE ACCESSIBILITY
   w3schools, 2019, ALT ATTRIBUTE HTML
   WCAG, 2019, Web content accessibility guidelines (WCAG) overview
   Wei LL, 2016, IEEE INT CONF AUTOM, P226, DOI 10.1145/2970276.2970312
   Wikipedia, 2019, GOOGLE TALKBACK
   Yan SG, 2019, ACM T ACCESS COMPUT, V12, DOI 10.1145/3300176
   Yu Daihua X, 2015, Perspect Health Inf Manag, V12, p1h
   Zhang XY, 2017, PROCEEDINGS OF THE 2017 ACM SIGCHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS (CHI'17), P6024, DOI 10.1145/3025453.3025846
NR 83
TC 10
Z9 11
U1 0
U2 5
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD OCT 1
PY 2022
VL 48
IS 10
BP 3954
EP 3968
DI 10.1109/TSE.2021.3108162
PG 15
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 5L3GA
UT WOS:000870301800013
OA Green Submitted, Green Published
DA 2024-07-18
ER

PT J
AU Hoch, R
   Luckeneder, C
   Popp, R
   Kaindl, H
AF Hoch, Ralph
   Luckeneder, Christoph
   Popp, Roman
   Kaindl, Hermann
TI Verification of Consistency Between Process Models, Object Life Cycles,
   and Context-Dependent Semantic Specifications
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Unified modeling language; Semantics; Business; Model checking; Context
   modeling; Software; Task analysis; Process models; object life cycles;
   semantic specifications; formal consistency verification; model checking
AB Process models in general, and those specifying process-oriented software in particular, should be formally verified. While activity-oriented process models have been verified against object life cycles, formally specified semantic specifications of actions were not involved. Hence, previous approaches for the verification of process models did not make use of declaratively represented knowledge of actions. This paper presents a new approach for verification of consistency between process models, object life cycles, and context-dependent semantic action specifications. This approach involves declarative specifications of all the actions of a process, which also depend on the context of use of the actions. These context-dependent specifications define the 'logic' of the process flow, which is grounded in (extended) object life cycles. Since a subtyping relation is enforced, reuse is facilitated through substitutability. Our extension of object life cycles makes them applicable to processes including non-monotonicity, and even to model communication based on physical interaction in cyber-physical systems. As a consequence, this formal consistency verification ensures that all the involved specifications 'fit together', both procedurally and logically.
C1 [Hoch, Ralph; Luckeneder, Christoph; Popp, Roman; Kaindl, Hermann] TU Wien, Inst Comp Technol, A-1040 Vienna, Austria.
C3 Technische Universitat Wien
RP Kaindl, H (corresponding author), TU Wien, Inst Comp Technol, A-1040 Vienna, Austria.
EM ralph.hoch@tuwien.ac.at; christoph.lucketzeder@tuwien.ac.at;
   roman.popp@tuwien.ac.at; hermann.kaindl@tuwien.ac.at
OI Kaindl, Hermann/0000-0002-1133-0529; Hoch, Ralph/0000-0002-8131-1091
FU ProREUSE Project of the Austrian FFG [834167]; FeatureOpt Project of the
   Austrian FFG [849928]; VerASoS Project of the Austrian FFG [861210]
FX This work was supported in part by the ProREUSE Project under Grant
   834167 of the Austrian FFG, the FeatureOpt Project under Grant 849928 of
   the Austrian FFG, and the VerASoS Project under Grant 861210 of the
   Austrian FFG.
CR Baier C, 2008, PRINCIPLES OF MODEL CHECKING, P1
   Borrego D, 2013, DATA KNOWL ENG, V87, P167, DOI 10.1016/j.datak.2013.04.008
   Bozzano M., 2021, NUXMV 2 0 0 USER MAN
   Cavada R, 2014, LECT NOTES COMPUT SC, V8559, P334, DOI 10.1007/978-3-319-08867-9_22
   Eshuis R, 2006, ACM T SOFTW ENG METH, V15, P1, DOI 10.1145/1125808.1125809
   Eshuis R, 2004, IEEE T SOFTWARE ENG, V30, P437, DOI 10.1109/TSE.2004.33
   Eshuis R, 2016, SOFTW SYST MODEL, V15, P281, DOI 10.1007/s10270-014-0406-4
   Estañol M, 2018, INFORM SOFTWARE TECH, V93, P147, DOI 10.1016/j.infsof.2017.09.003
   Filieri A., 2012, CONQUERING COMPLEXIT, P253
   Ghezzi C, 2014, REQUIR ENG, V19, P231, DOI 10.1007/s00766-013-0198-z
   Goldsby HJ, 2008, LECT NOTES COMPUT SC, V5002, P212
   Grobelna I, 2014, ADV INTELL SYST, V286, P233, DOI 10.1007/978-3-319-07013-1_22
   Hoch R., 2015, P 48 HAW INT C SYST, P1370
   Hoch R, 2016, ADV INTELL SYST, V444, P589, DOI 10.1007/978-3-319-31232-3_55
   Hull R, 2011, LECT NOTES COMPUT SC, V6551, P1, DOI 10.1007/978-3-642-19589-1_1
   Kaindl H, 2017, INT CONF RES CHAL, P286, DOI 10.1109/RCIS.2017.7956548
   L_ubke D., 2019, ANAL DATA FLOW COMPL, P59
   Liang J., 2009, Proc. IEEE Intl Conf. Comm. (ICC 09), P1
   LISKOV BH, 1994, ACM T PROGR LANG SYS, V16, P1811, DOI 10.1145/197320.197383
   Maidl M, 2000, ANN IEEE SYMP FOUND, P643, DOI 10.1109/SFCS.2000.892332
   Meyer A, 2014, LECT NOTES COMPUT SC, V8831, P359, DOI 10.1007/978-3-662-45391-9_25
   nuXmv, NUXMV NUXMV MOD CHEC
   OMG, 2014, OMG document formal/2014-02-03
   OMG Object Management Group, 2017, UNIFIED MODELING LAN
   Popp R., 2017, PROC 50 HAWAII INT C, P1
   Rathmair M, 2015, LECT NOTES BUS INF P, V235, P126, DOI 10.1007/978-3-319-25897-3_9
   Ross R., 2003, PRINCIPLES BUSINESS
   Ryndina K, 2007, LECT NOTES COMPUT SC, V4364, P80
   Schumacher J., 2003, CUSTOMER RELATIONSHI
   Song W, 2021, IEEE T CLOUD COMPUT, V9, P88, DOI 10.1109/TCC.2018.2844247
   Thielscher M, 2005, THEOR PRACT LOG PROG, V5, P533, DOI 10.1017/S1471068405002358
   Thielscher Michael., 1998, ELECT T ARTIFICIAL I, V2, P179
   UL Muram F, 2014, Arxiv, DOI arXiv:1404.0852
   Weber I, 2010, DISTRIB PARALLEL DAT, V27, P271, DOI 10.1007/s10619-010-7060-9
   WEGNER P, 1988, LECT NOTES COMPUT SC, V322, P55
NR 35
TC 0
Z9 0
U1 0
U2 3
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD OCT 1
PY 2022
VL 48
IS 10
BP 4041
EP 4059
DI 10.1109/TSE.2021.3110191
PG 19
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 5L3GA
UT WOS:000870301800018
DA 2024-07-18
ER

PT J
AU Mohanani, R
   Ralph, P
   Turhan, B
   Mandic, V
AF Mohanani, Rahul
   Ralph, Paul
   Turhan, Burak
   Mandic, Vladimir
TI How Templated Requirements Specifications Inhibit Creativity in Software
   Engineering
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Creativity; Stakeholders; Task analysis; Encoding; Software design;
   Protocols; Software systems; Cognitive bias; software design; fixation;
   critical thinking; requirements; requirements engineering; protocol
   analysis
ID DESIGN FIXATION; SPECIFICITY; FRAMEWORK; DRIVEN; MODEL
AB Desiderata is a general term for stakeholder needs, desires or preferences. Recent experiments demonstrate that presenting desiderata as templated requirements specifications leads to less creative solutions. However, these experiments do not establish how the presentation of desiderata affects design creativity. This study, therefore, aims to explore the cognitive mechanisms by which presenting desiderata as templated requirements specifications reduces creativity during software design. Forty-two software designers, organized into 21 pairs, participated in a dialog-based protocol study. Their interactions were transcribed and the transcripts were analyzed in two ways: (1) using inductive process coding and (2) using an a-priori coding scheme focusing on fixation and critical thinking. Process coding shows that participants exhibited seven categories of behavior: making design moves, uncritically accepting, rejecting, grouping, questioning, assuming and considering quality criteria. Closed coding shows that participants tend to accept given requirements and priority levels while rejecting newer, more innovative design ideas. Overall, the results suggest that designers fixate on desiderata presented as templated requirements specifications, hindering critical thinking. More precisely, requirements fixation mediates the negative relationship between specification formality and creativity.
C1 [Mohanani, Rahul] Fortiss, D-80805 Munich, Germany.
   [Ralph, Paul] Dalhousie Univ, Fac Comp Sci, Halifax, NS B3H 1W5, Canada.
   [Turhan, Burak] Univ Oulu, M3S Grp, Oulu 90570, Finland.
   [Turhan, Burak] Monash Univ, Fac IT, Clayton, Vic, Australia.
   [Mandic, Vladimir] Univ Novi Sad, Fac Tech Sci, Novi Sad 21000, Serbia.
C3 fortiss; Dalhousie University; University of Oulu; Monash University;
   University of Novi Sad
RP Mohanani, R (corresponding author), Fortiss, D-80805 Munich, Germany.; Turhan, B (corresponding author), Univ Oulu, M3S Grp, Oulu 90570, Finland.
EM rahul.mohanani@gmail.com; paul@paulralph.name; turhanb@computer.org;
   vladman@uns.ac.rs
RI Ralph, D. Paul/H-4322-2019; Mohanani, Rahul/AAG-9762-2019; Mandic,
   Vladimir/I-6306-2019; Turhan, Burak/G-7400-2011
OI Ralph, D. Paul/0000-0002-7411-0857; Mohanani, Rahul/0000-0001-7018-8836;
   Mandic, Vladimir/0000-0001-6996-2222; Turhan, Burak/0000-0003-1511-2163
FU HPY: Research Foundation grant, 2016
FX This work was supported by the HPY: Research Foundation grant (HPY:n
   Tutkimussaatio Apurahat), 2016.
CR Akin Omer., 1988, Expert Systems for Engineering Design, P173
   AMABILE TM, 1988, RES ORGAN BEHAV, V10, P123
   [Anonymous], 2010, THESIS U BRIT COLUMB
   [Anonymous], 2011, Software designers, are you biased?, DOI 10.1145/1988676.1988678
   Archer M., 2013, CRITICAL REALISM ESS
   Arora C, 2015, IEEE T SOFTWARE ENG, V41, P944, DOI 10.1109/TSE.2015.2428709
   Bahill A. T., 1997, PROC INCOSE INT S, P340
   BELADY LA, 1976, IBM SYST J, V15, P225, DOI 10.1147/sj.153.0225
   Berry DM, 2004, LECT NOTES COMPUT SC, V2941, P50
   Bhowmik T, 2014, INT REQUIR ENG CONF, P243, DOI 10.1109/RE.2014.6912266
   Boden M. A., 2004, CREATIVE MIND MYTHS
   Brooks F.P., 2010, Design of Design: Essays from a Computer Scientist
   Browne GJ, 2002, INFORM MANAGE-AMSTER, V39, P625, DOI 10.1016/S0378-7206(02)00014-9
   Calikli G., 2010, P 6 INT C PRED MOD S
   Edna DCB, 2018, LECT NOTES COMPUT SC, V10918, P642, DOI 10.1007/978-3-319-91797-9_45
   Carroll N, 2016, 2016 IEEE/ACM INTERNATIONAL WORKSHOP ON SOFTWARE ENGINEERING IN HEALTHCARE SYSTEMS (SEHS), P1, DOI 10.1109/SEHS.2016.009
   Chakraborty S, 2010, J ASSOC INF SYST, V11, P212
   Checkland P, 2000, SYST RES BEHAV SCI, V17, pS11, DOI 10.1002/1099-1743(200011)17:1+<::AID-SRES374>3.0.CO;2-O
   Chotisarn N, 2013, INT CONF INFO SCI, P951, DOI 10.1109/ICIST.2013.6747696
   Chow T, 2008, J SYST SOFTWARE, V81, P961, DOI 10.1016/j.jss.2007.08.020
   Christiaans HHCM, 2002, CREATIVITY RES J, V14, P41, DOI 10.1207/S15326934CRJ1401_4
   Chrysikou EG, 2005, J EXP PSYCHOL LEARN, V31, P1134, DOI 10.1037/0278-7393.31.5.1134
   Crawford B., 2012, 2012 5th International Workshop on Cooperative and Human Aspects of Software Engineering, P20, DOI 10.1109/CHASE.2012.6223015
   Cross N, 2004, DESIGN STUD, V25, P427, DOI 10.1016/j.destud.2004.06.002
   CROSS N., 1992, RES DESIGN THINKING
   Cross N., 2001, DESIGN KNOWING LEARN, P79, DOI DOI 10.1016/B978-008043868-9/50005-X
   Cruzes DS, 2011, INT SYMP EMP SOFTWAR, P275, DOI 10.1109/ESEM.2011.36
   DORST K., 1995, DESIGN STUD, V16, P261, DOI DOI 10.1016/0142-694X(94)00012-3
   ERICSSON KA, 1980, PSYCHOL REV, V87, P215, DOI 10.1037/0033-295X.87.3.215
   Femmer H, 2015, 2015 IEEE/ACM 2ND INTERNATIONAL WORKSHOP ON REQUIREMENTS ENGINEERING AND TESTING (RET), P13, DOI 10.1109/RET.2015.11
   Finke RA, 1996, CONSCIOUS COGN, V5, P381, DOI 10.1006/ccog.1996.0024
   Goguen J., 1994, REQUIREMENTS ENG SOC
   Goldin L., 1997, Automated Software Engineering, V4, P375, DOI 10.1023/A:1008617922496
   GUILFORD JP, 1959, AM PSYCHOL, V14, P469, DOI 10.1037/h0046827
   GUINDON R, 1990, INT J MAN MACH STUD, V33, P279, DOI 10.1016/S0020-7373(05)80120-8
   Hashem A, 2003, J BIOMED INFORM, V36, P61, DOI 10.1016/S1532-0464(03)00057-1
   Healy M., 2000, Qualitative Market Research, V3, P118, DOI [DOI 10.1108/13522750010333861, https://doi.org/10.1108/13522750010333861]
   Horkoff J., 2015, PROC C CREATIVITY CO, P165
   Horowitz R., 1999, THESIS TEL AVIV U TE
   Hughes J, 2003, BEHAV INFORM TECHNOL, V22, P127, DOI 10.1080/0144929031000081341
   IEEE Computer Society. Software Engineering Standards Committee and IEEE-SA Standards Board, 1998, 8301998 IEEE COMP SO
   JACKSON M, 1995, PROC INT CONF SOFTW, P283, DOI 10.1145/225014.225041
   Jackson M., 1993, PROC IEEE 1 INT S RE, P56
   Jansson D., 1991, DESIGN STUDIES, V12, P3, DOI [DOI 10.1016/0142-694X(91)90003-F, 10.1016/0142-694X(91)90003-F]
   Jonassen DH, 1997, ETR&D-EDUC TECH RES, V45, P65, DOI 10.1007/BF02299613
   Jorgensen M, 2012, IEEE T SOFTWARE ENG, V38, P677, DOI 10.1109/TSE.2011.40
   Karac I, 2021, IEEE T SOFTWARE ENG, V47, P1315, DOI 10.1109/TSE.2019.2920377
   Kim J, 2014, HUM-COMPUT INTERACT, V29, P516, DOI 10.1080/07370024.2014.896706
   Kruger C, 2006, DESIGN STUD, V27, P527, DOI 10.1016/j.destud.2006.01.001
   Lichtenstein S, 2006, CONSTRUCTION OF PREFERENCE, P1, DOI 10.2277/ 0521542200
   Maiden N, 2005, 13TH IEEE INTERNATIONAL CONFERENCE ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P105, DOI 10.1109/RE.2005.34
   Maiden N, 2004, IEEE SOFTWARE, V21, P68, DOI 10.1109/MS.2004.1331305
   Maiden Neil, 2010, Proceedings of the 2010 IEEE 18th International Conference on Requirements Engineering (RE2010), P57, DOI 10.1109/RE.2010.16
   Maiden N, 2001, IEEE SOFTWARE, V18, P10, DOI 10.1109/52.951486
   Maiden N., 2004, P ACM C DESIGNING IN, P113
   Mair Carolyn., 2011, P 2 INT WORKSHOP EME, P81
   Mao-Lin Chiu, 2003, Design Studies, V24, P1, DOI 10.1016/S0142-694X(02)00007-8
   Mayer R. E., 1999, HDB CREATIVITY
   Mehrotra G, 2021, SCI COMPUT PROGRAM, V204, DOI 10.1016/j.scico.2020.102593
   Michalko M., 2006, THINKERTOYS CANDBOOK
   Mingers J., 2004, Information and Organization, V14, P87, DOI 10.1016/j.infoandorg.2003.06.001
   Mohanani R., 2021, TEMPLATED REQUIREMEN, DOI [10.5281/zenodo.4678669, DOI 10.5281/ZENODO.4678669]
   Mohanani R, 2021, IEEE T SOFTWARE ENG, V47, P936, DOI 10.1109/TSE.2019.2909033
   Mohanani R, 2020, IEEE T SOFTWARE ENG, V46, P1318, DOI 10.1109/TSE.2018.2877759
   Mohanani R, 2017, 2017 43RD EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS (SEAA), P210, DOI 10.1109/SEAA.2017.21
   Mohanani R, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P895, DOI 10.1145/2568225.2568235
   Murukannaiah PK, 2016, INT REQUIR ENG CONF, P176, DOI 10.1109/RE.2016.68
   Nelson H., 2003, DESIGN WAY INTENTION
   Nguyen L, 2009, INFORM SOFTWARE TECH, V51, P655, DOI 10.1016/j.infsof.2008.09.002
   Niknafs A, 2017, EMPIR SOFTW ENG, V22, P80, DOI 10.1007/s10664-015-9416-2
   Nuseibeh B, 2003, PROC INT CONF SOFTW, P676, DOI 10.1109/ICSE.2003.1201254
   Nuseibeh B, 2000, COMPUTER, V33, P24, DOI 10.1109/2.839317
   PARNAS DL, 1995, SCI COMPUT PROGRAM, V25, P41, DOI 10.1016/0167-6423(95)96871-J
   Perttula M, 2007, J ENG DESIGN, V18, P93, DOI 10.1080/09544820600679679
   Plucker J.A., 2019, The Cambridge handbook of creativity, V2nd ed., P44
   Potts C, 1997, RE '97 - PROCEEDINGS OF THE THIRD IEEE INTERNATIONAL SYMPOSIUM ON REQUIREMENTS ENGINEERING, P118, DOI 10.1109/ISRE.1997.566849
   Purcell A.T., 1996, DESIGN STUD, V17, P363, DOI [10.1016/S0142-694X(96)00023-3, DOI 10.1016/S0142-694X(96)00023-3, https://doi.org/10.1016/S0142-694X(96)00023-3]
   Ralph P, 2018, SCI COMPUT PROGRAM, V156, P68, DOI 10.1016/j.scico.2018.01.002
   Ralph P, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P24, DOI 10.1145/2568225.2568261
   Ralph P, 2015, 2015 IEEE/ACM 5TH INTERNATIONAL WORKSHOP ON THE TWIN PEAKS OF REQUIREMENTS AND ARCHITECTURE (TWINPEAKS), P20, DOI 10.1109/TwinPeaks.2015.12
   Ralph P, 2013, REQUIR ENG, V18, P293, DOI 10.1007/s00766-012-0161-4
   Ralph P, 2011, LECT NOTES BUS INF P, V93, P92
   RHODES M, 1961, PHI DELTA KAPPAN, V42, P305
   Rodriguez P, 2020, IEEE T SOFTWARE ENG, V46, P1340, DOI 10.1109/TSE.2018.2878031
   Saldana J., 2016, CODING MANUAL QUALIT, DOI DOI 10.1017/CBO9781107415324.004
   Salman I., 2018, EMPIR SOFTW ENG, V24, P1
   Schmid K., 2006, SOFTW TECHNIK TRENDS, V26, P20
   Schmidt R, 2001, J MANAGE INFORM SYST, V17, P5, DOI 10.1080/07421222.2001.11045662
   Schon D., 1984, The Reflective Practitioner: How Professionals Think in Action
   Sedano T, 2019, PROC INT CONF SOFTW, P200, DOI 10.1109/ICSE.2019.00036
   Stanovich K. E., 2009, WHAT INTELLIGENCE TE
   Sternberg R.J., 1999, Handbook of Creativity, DOI [10.1017/cbo9780511807916.003, DOI 10.1017/CBO9780511807916.003]
   Svensson RB, 2015, INT REQUIR ENG CONF, P66, DOI 10.1109/RE.2015.7320409
   Toh C., 2014, Design Computing and Cognition, V12, P95
   TVERSKY A, 1974, SCIENCE, V185, P1124, DOI 10.1126/science.185.4157.1124
   van Lamsweerde A, 2004, 12TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, PROCEEDINGS, P4
   van Lamsweerde A, 1998, IEEE T SOFTWARE ENG, V24, P908, DOI 10.1109/32.730542
   Vetterli C, 2013, IEEE INTERNET COMPUT, V17, P91, DOI 10.1109/MIC.2013.32
   Ward TB, 2004, CREATIVITY RES J, V16, P1, DOI 10.1207/s15326934crj1601_1
   Wirth J, 2009, COMPUT HUM BEHAV, V25, P299, DOI 10.1016/j.chb.2008.12.004
   Xu S., 2005, P EMP SOFTW ENG NOOS
   Youmans RJ, 2014, AI EDAM, V28, P129, DOI 10.1017/S0890060414000043
   Youmans RJ, 2011, J CREATIVE BEHAV, V45, P101, DOI 10.1002/j.2162-6057.2011.tb01089.x
   Youmans RJ, 2011, DESIGN STUD, V32, P115, DOI 10.1016/j.destud.2010.08.001
   Zahner D, 2010, AI EDAM, V24, P231, DOI 10.1017/S0890060410000077
   Zhang LX, 2011, 2011 INTERNATIONAL CONFERENCE ON AEROSPACE ENGINEERING AND INFORMATION TECHNOLOGY (AEIT 2011), P129, DOI 10.1109/CCIENG.2011.6007974
   DICTIONARY
NR 107
TC 4
Z9 4
U1 1
U2 9
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD OCT 1
PY 2022
VL 48
IS 10
BP 4074
EP 4086
DI 10.1109/TSE.2021.3112503
PG 13
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 5L3GA
UT WOS:000870301800020
OA Green Submitted, Green Accepted, hybrid
DA 2024-07-18
ER

PT J
AU Zhan, X
   Liu, TM
   Fan, LL
   Li, L
   Chen, S
   Luo, XP
   Liu, Y
AF Zhan, Xian
   Liu, Tianming
   Fan, Lingling
   Li, Li
   Chen, Sen
   Luo, Xiapu
   Liu, Yang
TI Research on Third-Party Libraries in Android Apps: A Taxonomy and
   Systematic Literature Review
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Review
DE Libraries; Systematics; Internet; Bibliographies; Tools; Taxonomy;
   Ecosystems; Third-party library; android; literature review;
   applications
ID AD LIBRARIES
AB Third-party libraries (TPLs) have been widely used in mobile apps, which play an essential part in the entire Android ecosystem. However, TPL is a double-edged sword. On the one hand, it can ease the development of mobile apps. On the other hand, it also brings security risks such as privacy leaks or increased attack surfaces (e.g., by introducing over-privileged permissions) to mobile apps. Although there are already many studies for characterizing third-party libraries, including automated detection, security and privacy analysis of TPLs, TPL attributes analysis, etc., what strikes us odd is that there is no systematic study to summarize those studies' endeavors. To this end, we conduct the first systematic literature review on Android TPL-related research. Following a well-defined systematic literature review protocol, we collected 74 primary research papers closely related to Android third-party library from 2012 to 2020. After carefully examining these studies, we designed a taxonomy of TPL-related research studies and conducted a systematic study to summarize current solutions, limitations, challenges and possible implications of new research directions related to third-party library analysis. We hope that these contributions can give readers a clear overview of existing TPL-related studies and inspire them to go beyond the current status quo by advancing the discipline with innovative approaches.
C1 [Zhan, Xian; Luo, Xiapu] Hong Kong Polytech Univ, Hong Kong, Peoples R China.
   [Liu, Tianming; Li, Li] Monash Univ, Clayton, Vic 3800, Australia.
   [Fan, Lingling] Nankai Univ, Coll Cyber Sci, Nankai 300071, Peoples R China.
   [Chen, Sen] Tianjin Univ, Coll Intelligence & Comp, Tianjin 300072, Peoples R China.
   [Liu, Yang] Nanyang Technol Univ, Sch Comp Sci & Engn, Singapore 639798, Singapore.
C3 Hong Kong Polytechnic University; Monash University; Nankai University;
   Tianjin University; Nanyang Technological University
RP Luo, XP (corresponding author), Hong Kong Polytech Univ, Hong Kong, Peoples R China.; Fan, LL (corresponding author), Nankai Univ, Coll Cyber Sci, Nankai 300071, Peoples R China.
EM csxzhan@comp.polyu.edu.hk; tianming.liu@monash.edu;
   linglingfim@nankai.edu.cn; li.li@monash.edu; ecnuchensen@gmail.com;
   csxluo@comp.polyu.edu.hk; yangliu@ntu.edu.sg
RI Liu, Yang/D-2306-2013; li, fangyu/KCY-0521-2024; chen,
   minghui/KFR-8832-2024; Li, Li/AAR-3316-2020
OI Liu, Yang/0000-0001-7300-9215; li, fangyu/0009-0009-8303-9157; Li,
   Li/0000-0003-2990-1614; zhan, xian/0000-0001-9814-5977
FU National Research Foundation, Singapore under its the AI Singapore
   Programme [AISG2-RP-2020-019]; National Research Foundation, Prime
   Ministers Office, Singapore under its National Cybersecurity RD Program
   [NRF2018NCR-NCR0050001]; NRF Investigatorship [NRFI06-2020-0022-0001];
   National Research Foundation through its National Satellite of
   Excellence in Trustworthy Software Systems (NSOE-TSS) project under the
   National Cybersecurity RD (NCR) Grant [NRF2018NCR-NSOE003-0001];
   Singapore National Research Foundation under NCR Award
   [NRF2018NCRNSOE004-0001]; Australian Research Council (ARC)
   [DE200100016, DP200100020]; Hong Kong RGC [PolyU15222317,
   PolyU15223918]; National Natural Science Foundation of China [62102284,
   62102197]
FX This work was partially supported by the National Research Foundation,
   Singapore under its the AI Singapore Programme AISG2-RP-2020-019, the
   National Research Foundation, Prime Ministers Office, Singapore under
   its National Cybersecurity R&D Program Award No. NRF2018NCR-NCR0050001,
   NRF Investigatorship NRFI06-2020-0022-0001, the National Research
   Foundation through its National Satellite of Excellence in Trustworthy
   Software Systems (NSOE-TSS) project under the National Cybersecurity R&D
   (NCR) Grant Award No. NRF2018NCR-NSOE003-0001 and the Singapore National
   Research Foundation under NCR Award Nos. NRF2018NCRNSOE004-0001 and the
   Australian Research Council (ARC) under a Discovery Early Career
   Researcher Award (DECRA) Project DE200100016 and a Discovery Project
   DP200100020 and Hong Kong RGC Projects PolyU15222317, PolyU15223918, and
   the National Natural Science Foundation of China under Grants 62102284
   and 62102197.
CR Ahasanuzzaman M, 2022, IEEE T SOFTWARE ENG, V48, P209, DOI 10.1109/TSE.2020.2983399
   Ahasanuzzaman M, 2020, EMPIR SOFTW ENG, V25, P824, DOI 10.1007/s10664-019-09766-x
   [Anonymous], 2014, TAINTDROID
   [Anonymous], 2021, DYNAMIC CODE EXECUTI
   [Anonymous], 2021, ACM Digital Library
   [Anonymous], 2016, ANDROZOO
   [Anonymous], 2021, MONKEY
   [Anonymous], 2019, AIDL
   [Anonymous], 2021, KOTLIN
   [Anonymous], 2011, PROC 20 USENIX SECUR
   [Anonymous], 2020, Androguard"
   [Anonymous], 2021, EXODUS PRIVACY
   [Anonymous], 2021, SOURCE CLEAR
   [Anonymous], 2021, JAVA REFLECTION
   [Anonymous], 2014, P 30 ANN COMP SEC AP
   [Anonymous], APKTOOL
   [Anonymous], 2021, DROIDKUNGFU
   [Anonymous], 1992, NETWORK DISTRIBUTED
   [Anonymous], 2021, BAKSMALI
   [Anonymous], 2020, JNI
   [Anonymous], 2015, GOOGLE ANDROID LIB
   [Anonymous], 2017, Proceedings of the 9th Asia-Pacific Symposium on Internetware-Internetware'17, DOI DOI 10.23919/EETA.2017.7993206
   [Anonymous], 2015, DROIDBOX
   [Anonymous], 2012, P 2 ACM C DATA APPL, DOI DOI 10.1145/2133601.2133640
   [Anonymous], 2021, STATISTA
   [Anonymous], 2021, GOOGLE ADMOB
   [Anonymous], 2021, Android Debug Bridge (adb)
   [Anonymous], 2021, GOOGLE ANDROID GMS
   [Anonymous], 2021, Soot
   Backes M, 2016, CCS'16: PROCEEDINGS OF THE 2016 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P356, DOI 10.1145/2976749.2978333
   Baset SA, 2017, PROC IEEE ACM INT C, P250, DOI 10.1109/ICSE-C.2017.79
   Bauer V, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P483, DOI 10.1109/ICSM.2012.6405311
   Baykara M., 2018, 2018 6 INT S DIG FOR, P1, DOI [10.1109/ISDFS.2018.8355388, DOI 10.1109/ISDFS.2018.8355388]
   Bhoraskar R, 2014, PROCEEDINGS OF THE 23RD USENIX SECURITY SYMPOSIUM, P1021
   Blei DM, 2003, J MACH LEARN RES, V3, P993, DOI 10.1162/jmlr.2003.3.4-5.993
   Book T., 2015, EMPIRICAL STUDY MOBI, P1
   Book T., 2013, P 3 ACM WORKSH SEC P, P79, DOI DOI 10.1145/2516760.2516762
   Book T, 2013, Arxiv, DOI arXiv:1303.0857
   Burke R, 2002, USER MODEL USER-ADAP, V12, P331, DOI 10.1023/A:1021240730564
   Chen G, 2019, WEB CONFERENCE 2019: PROCEEDINGS OF THE WORLD WIDE WEB CONFERENCE (WWW 2019), P207, DOI 10.1145/3308558.4089729
   Chen K, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P175, DOI 10.1145/2568225.2568286
   Chen K, 2016, P IEEE S SECUR PRIV, P357, DOI 10.1109/SP.2016.29
   Chen K, 2015, PROCEEDINGS OF THE 24TH USENIX SECURITY SYMPOSIUM, P659
   Cho G, 2015, PROCEEDINGS 10TH INTERNATIONAL CONFERENCE ON AVAILABILITY, RELIABILITY AND SECURITY ARES 2015, P382, DOI 10.1109/ARES.2015.62
   Choudhary SR, 2015, IEEE INT CONF AUTOM, P429, DOI 10.1109/ASE.2015.89
   Crussell Jonathan, 2013, Computer Security - ESORICS 2013. 18th European Symposium on Research in Computer Security. Proceedings: LNCS 8134, P182, DOI 10.1007/978-3-642-40203-6_11
   Crussell J, 2014, MOBISYS'14: PROCEEDINGS OF THE 12TH ANNUAL INTERNATIONAL CONFERENCE ON MOBILE SYSTEMS, APPLICATIONS, AND SERVICES, P123, DOI 10.1145/2594368.2594391
   Demetriou S, 2016, 23RD ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2016), DOI 10.14722/ndss.2016.23082
   Derr E, 2017, CCS'17: PROCEEDINGS OF THE 2017 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P2187, DOI 10.1145/3133956.3134059
   Dong F, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P257, DOI 10.1145/3236024.3236045
   Dong F, 2018, HOTMOBILE'18: PROCEEDINGS OF THE 19TH INTERNATIONAL WORKSHOP ON MOBILE COMPUTING SYSTEMS & APPLICATIONS, P75, DOI 10.1145/3177102.3177113
   Duan R, 2017, CCS'17: PROCEEDINGS OF THE 2017 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P2169, DOI 10.1145/3133956.3134048
   Faruki P, 2015, IEEE COMMUN SURV TUT, V17, P998, DOI 10.1109/COMST.2014.2386139
   Grace M.C., 2012, P 5 ACM C SEC PRIV W, P101, DOI DOI 10.1145/2185448.2185464
   Gui JP, 2017, Arxiv, DOI arXiv:1702.07681
   Gui JP, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P100, DOI 10.1109/ICSE.2015.32
   Hammad M, 2019, J SYST SOFTWARE, V149, P83, DOI 10.1016/j.jss.2018.11.049
   Hammad M, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE (ICSA 2017), P59, DOI 10.1109/ICSA.2017.18
   Han HM, 2018, WIRELESS PERS COMMUN, V103, P491, DOI 10.1007/s11277-018-5456-4
   Hanna Steve, 2013, Detection of Intrusions and Malware, and Vulnerability Assessment. 9th International Conference, DIMVA 2012. Revised Selected Papers, P62, DOI 10.1007/978-3-642-37300-8_4
   Harty J, 2021, 2021 IEEE/ACM 8TH INTERNATIONAL CONFERENCE ON MOBILE SOFTWARE ENGINEERING AND SYSTEMS (MOBILESOFT 2021), P56, DOI 10.1109/MobileSoft52590.2021.00013
   He BY, 2018, IEEE INFOCOM SER, P2465, DOI 10.1109/INFOCOM.2018.8486010
   Hu W., 2014, P 2014 ACM C SECURIT, P141, DOI DOI 10.1145/2627393.2627404
   Huang KF, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P518, DOI 10.1145/3368089.3409689
   IEEE Xplore Digital Library, 2021, IEEE XPLORE DELIVERI
   Jin L, 2021, IEEE T MOBILE COMPUT, V20, P1138, DOI 10.1109/TMC.2019.2953609
   Kawabata H, 2013, IEEE ICC
   Kitchenham B., 2007, Guidelines for performing systematic literature reviews in software engineering
   Kong PF, 2019, IEEE T RELIAB, V68, P45, DOI 10.1109/TR.2018.2865733
   Kühnel M, 2015, 2015 IEEE TRUSTCOM/BIGDATASE/ISPA, VOL 1, P214, DOI [10.1109/Trustcom-2015.377, 10.1109/Trustcom.2015.377]
   Le Yu, 2016, 2016 46th Annual IEEE/IFIP International Conference on Dependable Systems and Networks (DSN). Proceedings, P538, DOI 10.1109/DSN.2016.55
   Leontiadis Ilias, 2012, P 12 WORKSH MOB COMP, P1
   Li BD, 2019, 2019 IEEE 26TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER), P344, DOI [10.1109/SANER.2019.8668009, 10.1109/saner.2019.8668009]
   Li L, 2021, IEEE T SOFTWARE ENG, V47, P676, DOI 10.1109/TSE.2019.2901679
   Li L, 2017, IEEE TRUST BIG, P136, DOI 10.1109/Trustcom/BigDataSE/ICESS.2017.230
   Li L, 2017, INFORM SOFTWARE TECH, V88, P67, DOI 10.1016/j.infsof.2017.04.001
   Li L, 2017, IEEE T INF FOREN SEC, V12, P1269, DOI 10.1109/TIFS.2017.2656460
   Li L, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P403, DOI 10.1109/SANER.2016.52
   Li MH, 2020, IEEE T SOFTWARE ENG, V46, P981, DOI 10.1109/TSE.2018.2872958
   Li MH, 2017, PROC INT CONF SOFTW, P335, DOI 10.1109/ICSE.2017.38
   Liu B., 2015, P ANN INT C MOB SYST, P89
   Liu Bin, 2014, 11 USENIX S NETW SYS, P57
   Liu TM, 2020, WEB CONFERENCE 2020: PROCEEDINGS OF THE WORLD WIDE WEB CONFERENCE (WWW 2020), P1715, DOI 10.1145/3366423.3380242
   Ma Z, 2016, 2016 IEEE/ACM 38TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING COMPANION (ICSE-C), P653, DOI 10.1145/2889160.2889178
   Meng W, 2016, 23RD ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2016), DOI 10.14722/ndss.2016.23353
   Moonsamy V, 2014, 2014 INTERNATIONAL SYMPOSIUM ON INFORMATION THEORY AND ITS APPLICATIONS (ISITA), P314
   Moran K, 2016, IEEE INT CONF SOFTW, P33, DOI 10.1109/ICST.2016.34
   Narayanan A, 2014, 2014 IEEE NINTH INTERNATIONAL CONFERENCE ON INTELLIGENT SENSORS, SENSOR NETWORKS AND INFORMATION PROCESSING (IEEE ISSNIP 2014)
   Nath S., 2015, P 13 ANN INT C MOB S, P59
   NVD, 2021, NVD
   Ogawa H, 2018, 2018 SIXTH INTERNATIONAL SYMPOSIUM ON COMPUTING AND NETWORKING WORKSHOPS (CANDARW 2018), P452, DOI 10.1109/CANDARW.2018.00088
   Paturi A., 2015, PROC NDSS WORKSHOP U, P1
   Pearce P, 2012, 7TH ACM SYMPOSIUM ON INFORMATION, COMPUTER AND COMMUNICATIONS SECURITY (ASIACCS 2012)
   Qiu JY, 2021, ACM COMPUT SURV, V53, DOI 10.1145/3417978
   Rashidi B., 2015, Journal of Wireless Mobile Networks, Ubiquitous Computing, and Dependable Applications JoWUA, V6, P3
   Rastogi V., 2016, PROC 23 ANN NETW DIS, P1
   Ruiz IJM, 2016, IEEE SOFTWARE, V33, P74, DOI 10.1109/MS.2014.81
   Ruiz IJM, 2014, IEEE SOFTWARE, V31, P86, DOI 10.1109/MS.2014.79
   Sadeghi A, 2017, IEEE T SOFTWARE ENG, V43, P492, DOI 10.1109/TSE.2016.2615307
   Salza P, 2020, EMPIR SOFTW ENG, V25, P2341, DOI 10.1007/s10664-019-09754-1
   Salza P, 2018, INT C PROGRAM COMPRE, P255, DOI 10.1145/3196321.3196341
   ScienceDirect, 2021, SCIENCEDIRECT
   Seo J, 2016, 23RD ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2016), DOI 10.14722/ndss.2016.23485
   Shekhar S., 2012, P 21 USENIX C SEC S, P553
   Short A, 2014, IEEE INT CONF MOB, P749, DOI 10.1109/MASS.2014.131
   Soh C, 2016, ASIA PAC SOFWR ENG, P41, DOI [10.1109/APSEC.2016.017, 10.1109/APSEC.2016.40]
   Son S, 2016, 23RD ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2016), DOI 10.14722/ndss.2016.23407
   SpringerLink, 2021, SPRINGERLINK
   Stevens Ryan, 2012, WORKSHOP MOBILE SECU, V10
   Sufatrio, 2015, ACM COMPUT SURV, V47, DOI 10.1145/2733306
   Sun M., 2014, P 2014 ACM C SECURIT, P165, DOI DOI 10.1145/2627393
   Sun Mingshen., 2015, Proceedings of the 8th ACM Conference on Security Privacy in Wireless and Mobile Networks, P9
   Tang W, 2020, PROCEEDINGS OF THE 2020 IEEE 27TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER '20), P104, DOI [10.1109/SANER48275.2020.9054845, 10.1109/saner48275.2020.9054845]
   Tang YT, 2022, IEEE T SOFTWARE ENG, V48, P3044, DOI 10.1109/TSE.2021.3077654
   Tongaonkar Alok, 2013, Passive and Active Measurement. 14th International Conference, PAM 2013. Proceedings, P63, DOI 10.1007/978-3-642-36516-4_7
   Ullah I, 2014, IEEE CONF COMPUT, P547, DOI 10.1109/INFCOMW.2014.6849290
   Vallina-Rodriguez Narseo, 2012, Proceedings of the 2012 ACM conference on Internet measurement conference, P343
   Wang FB, 2016, LECT NOTES COMPUT SC, V9878, P458, DOI 10.1007/978-3-319-45744-4_23
   Wang H., 2015, PROC ISSTA, P71, DOI [10.1145/2771783.2771795, DOI 10.1145/2771783.2771795]
   Wang Hao-Yu, 2017, Journal of Software, V28, P1373, DOI 10.13328/j.cnki.jos.005221
   Wang HY, 2017, PROC IEEE ACM INT C, P515, DOI 10.1109/ICSE-C.2017.161
   Wang Y., 2014, P 4 ACM C DATA APPL, P25
   Wang Y, 2018, 2018 IEEE/ACM 5TH INTERNATIONAL CONFERENCE ON MOBILE SOFTWARE ENGINEERING AND SYSTEMS (MOBILESOFT), P13, DOI 10.1145/3197231.3197248
   Wang Y, 2020, PROC IEEE INT CONF S, P35, DOI 10.1109/ICSME46990.2020.00014
   Wang Y, 2019, PROC INT CONF SOFTW, P572, DOI 10.1109/ICSE.2019.00068
   Wang Y, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P319, DOI 10.1145/3236024.3236056
   Watanabe T, 2017, IEEE WORK CONF MIN S, P14, DOI 10.1109/MSR.2017.23
   WOHLIN Claes, 2014, P 18 INT C EVALUATIO, DOI [10.1145/2601248.2601268.10, 10.1145/2601248.2601268]
   Woo S, 2021, PROC INT CONF SOFTW, P860, DOI 10.1109/ICSE43902.2021.00083
   Xu J, 2022, IEEE T MOBILE COMPUT, V21, P167, DOI 10.1109/TMC.2020.3003336
   Yang Wenbo., 2014, Proceedings of the 9th ACM symposium on Information, computer and communications security, P483
   Yasumatsu T, 2019, PROCEEDINGS OF THE NINTH ACM CONFERENCE ON DATA AND APPLICATION SECURITY AND PRIVACY (CODASPY '19), P13, DOI 10.1145/3292006.3300020
   Yu L, 2021, IEEE T SOFTWARE ENG, V47, P221, DOI 10.1109/TSE.2018.2886875
   Yu L, 2018, IEEE T SOFTWARE ENG, V44, P834, DOI 10.1109/TSE.2017.2730198
   Yu L, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P415, DOI 10.1109/SANER.2016.67
   Yutian Tang, 2019, 2019 34th IEEE/ACM International Conference on Automated Software Engineering (ASE). Proceedings, P682, DOI 10.1109/ASE.2019.00069
   Zhan JW, 2017, LECT NOTES COMPUT SC, V10343, P80, DOI 10.1007/978-3-319-59870-3_5
   Zhan X, 2021, PROC INT CONF SOFTW, P1695, DOI 10.1109/ICSE43902.2021.00150
   Zhan X, 2020, IEEE INT CONF AUTOM, P919, DOI 10.1145/3324884.3416582
   Zhan X, 2019, 2019 IEEE 26TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER), P321, DOI [10.1109/SANER.2019.8667975, 10.1109/saner.2019.8667975]
   Zhang F., 2014, P 2014 ACM C SEC PRI, P25, DOI DOI 10.1145/2627393.2627395
   Zhang JX, 2019, PROCEEDINGS OF THE 28TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA '19), P55, DOI 10.1145/3293882.3330563
   Zhang Xiao, 2013, Proceedings of the 29th Annual Computer Security Applications Conference, P9
   Zhang Y, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P141, DOI 10.1109/SANER.2018.8330204
   Zhauniarovich Y, 2014, LECT NOTES COMPUT SC, V8566, P130, DOI 10.1007/978-3-662-43936-4_9
   Zhou W., 2013, Proceedings of the third ACM conference on Data and application security and privacy, P185
   Zicheng Zhang, 2020, WiSec '20: Proceedings of the 13th ACM Conference on Security and Privacy in Wireless and Mobile Networks, P144, DOI 10.1145/3395351.3399346
NR 147
TC 11
Z9 12
U1 4
U2 15
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD OCT 1
PY 2022
VL 48
IS 10
BP 4181
EP 4213
DI 10.1109/TSE.2021.3114381
PG 33
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 5L3GA
UT WOS:000870301800026
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Locke, S
   Li, H
   Chen, TH
   Shang, WY
   Liu, W
AF Locke, Steven
   Li, Heng
   Chen, Tse-Hsun (Peter)
   Shang, Weiyi
   Liu, Wei
TI LogAssist: Assisting Log Analysis Through Log Summarization
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Task analysis; Runtime; Tools; Testing; Faces; Anomaly detection;
   Software systems; Log analysis; log compression; n-gram modeling; log
   abstraction; workflow characterization; log reduction
AB Logs contain valuable information about the runtime behaviors of software systems. Thus, practitioners rely on logs for various tasks such as debugging, system comprehension, and anomaly detection. However, logs are difficult to analyze due to their unstructured nature and large size. In this paper, we propose a novel approach called LogAssist that assists practitioners with log analysis. LogAssist provides an organized and concise view of logs by first grouping logs into event sequences (i.e., workflows), which better illustrate the system runtime execution paths. Then, LogAssist compresses the log events in workflows by hiding consecutive events and applying n-gram modeling to identify common event sequences. We evaluated LogAssist on logs generated by one enterprise and two open source systems. We find that LogAssist can reduce the number of log events that practitioners need to investigate by up to 99 percent. Through a user study with 19 participants, we find that LogAssist can assist practitioners by reducing the time required for log analysis tasks by an average of 40 percent. The participants also rated LogAssist an average of 4.53 out of 5 for improving their experiences of performing log analysis. Finally, we document our experiences and lessons learned from developing and adopting LogAssist in practice. We believe that LogAssist and our reported experiences may lay the basis for future analysis and interactive exploration on logs.
C1 [Locke, Steven; Chen, Tse-Hsun (Peter); Liu, Wei] Concordia Univ, Software PErformance Anal & Reliabil SPEAR Lab, Montreal, PQ H3G 1M8, Canada.
   [Shang, Weiyi] Concordia Univ, Dept Comp Sci & Software Engn, Montreal, PQ H3G 1M8, Canada.
   [Li, Heng] Polytech Montreal, Dept Comp Engn & Software Engn, Montreal, PQ H3T 1J4, Canada.
C3 Concordia University - Canada; Concordia University - Canada; Universite
   de Montreal; Polytechnique Montreal
RP Locke, S (corresponding author), Concordia Univ, Software PErformance Anal & Reliabil SPEAR Lab, Montreal, PQ H3G 1M8, Canada.
EM s_loc@encs.concordia.ca; heng.li@polymtl.ca; peterc@encs.concordia.ca;
   shang@encs.concordia.ca; w_liu201@encs.concordia.ca
OI Locke, Steven/0000-0001-7401-2993; Li, Heng/0000-0001-5441-6763; Liu,
   Wei/0000-0001-8956-730X; Chen, Tse-Hsun/0000-0003-4027-0905
CR [Anonymous], 2008, PROC 1 USENIX C ANAL
   [Anonymous], 2018, AUTOMATED ROOT CAUSE
   Balakrishnan R, 2006, P 20 IEEE INT PAR DI, P435
   Barik T, 2016, 2016 IEEE/ACM 38TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING COMPANION (ICSE-C), P92, DOI 10.1145/2889160.2889231
   Chen AR, 2022, IEEE T SOFTWARE ENG, V48, P2905, DOI 10.1109/TSE.2021.3071473
   Chen AR, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-020-09893-w
   Chen TH, 2017, 2017 IEEE/ACM 39TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2017), P243, DOI 10.1109/ICSE-SEIP.2017.26
   Chen TH, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P666, DOI 10.1145/2950290.2950303
   Chow Michael, 2014, P 11 S OP SYST DES I, P217
   Christensen R., 2013, Proceedings of the ACM International Conference on Management of Data SIGMOD, P1283
   Cito J, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P393, DOI 10.1145/2786805.2786826
   Dai H, 2020, arXiv
   Ding Rui, 2015, P 2015 USENIX TECHN, P139
   Du M, 2017, CCS'17: PROCEEDINGS OF THE 2017 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P1285, DOI 10.1145/3133956.3134015
   Elastic Search, OP SOURC LOG STOR
   Elasticsearch, ELASTIC
   Feng B, 2016, IEEE TRUST BIG, P1358, DOI [10.1109/TrustCom.2016.0215, 10.1109/TrustCom.2016.213]
   Fu Q, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE COMPANION 2014), P24, DOI 10.1145/2591062.2591175
   Fu Q, 2013, IEEE WORK CONF MIN S, P397, DOI 10.1109/MSR.2013.6624054
   Fu QA, 2009, IEEE DATA MINING, P149, DOI 10.1109/ICDM.2009.60
   Hassan AE, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P713, DOI 10.1145/1368088.1379445
   Hätönen K, 2003, LECT NOTES COMPUT SC, V2737, P360
   He PJ, 2018, IEEE INT CONF AUTOM, P178, DOI 10.1145/3238147.3238193
   He PJ, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON WEB SERVICES (ICWS 2017), P33, DOI 10.1109/ICWS.2017.13
   He SL, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P60, DOI 10.1145/3236024.3236083
   Jiang ZM, 2008, J SOFTW MAINT EVOL-R, V20, P249, DOI 10.1002/smr.374
   Jiang ZM, 2015, IEEE T SOFTWARE ENG, V41, P1091, DOI 10.1109/TSE.2015.2445340
   Jiang ZM, 2008, PROC IEEE INT CONF S, P307, DOI 10.1109/ICSM.2008.4658079
   Jinfu Chen, 2019, 2019 34th IEEE/ACM International Conference on Automated Software Engineering (ASE). Proceedings, P669, DOI 10.1109/ASE.2019.00068
   Jinyang Liu, 2019, 2019 34th IEEE/ACM International Conference on Automated Software Engineering (ASE). Proceedings, P863, DOI 10.1109/ASE.2019.00085
   LaToza Thomas D., 2010, P 32 ACM IEEE INT C, P185, DOI DOI 10.1145/1806799.1806829
   Li H, 2021, IEEE T SOFTWARE ENG, V47, P2858, DOI 10.1109/TSE.2020.2970422
   Li YG, 2020, ACM T SOFTW ENG METH, V29, DOI 10.1145/3385187
   Lin QW, 2016, 2016 IEEE/ACM 38TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING COMPANION (ICSE-C), P102, DOI 10.1145/2889160.2889232
   Lou J, 2010, PROTEIN ENG DES SEL, V23, P311, DOI 10.1093/protein/gzq001
   Mell P, 2014, IEEE MILIT COMMUN C, P192, DOI 10.1109/MILCOM.2014.37
   Nagappan Meiyappan, 2009, 2009 20th International Symposium on Software Reliability Engineering (ISSRE 2009), P41, DOI 10.1109/ISSRE.2009.23
   Nagaraj K., 2012, NSDI 12, P353
   Nageswaran P, 1999, U.S. Patent, Patent No. [5,991,792, 5991792]
   Oliner A, 2012, COMMUN ACM, V55, P63, DOI 10.1145/2076450.2076466
   Oliner A, 2007, I C DEPEND SYS NETWO, P575, DOI 10.1109/DSN.2007.103
   Otten F. J, 2008, THESIS RHODES U GRAH
   Reiss C., 2011, Technical report
   Schroeder B, 2007, USENIX ASSOCIATION PROCEEDINGS OF THE 5TH USENIX CONFERENCE ON FILE AND STORAGE TECHNOLOGIES ( FAST '07), P1
   Shang WY, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P402, DOI 10.1109/ICSE.2013.6606586
   Skibinski Przemyslaw, 2007, P 11 EASTEUROPEAN C, P330
   Splunk, TURN MACH DAT ANSW
   Syer MD, 2013, PROC IEEE INT CONF S, P110, DOI 10.1109/ICSM.2013.22
   Syer MD., 2014, ICPE, V14, P259
   Virtanen P, 2020, NAT METHODS, V17, P261, DOI 10.1038/s41592-019-0686-2
   Xu W, 2009, IEEE DATA MINING, P588, DOI 10.1109/ICDM.2009.19
   Xu W, 2009, SOSP'09: PROCEEDINGS OF THE TWENTY-SECOND ACM SIGOPS SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES, P117
   Yao KD, 2020, EMPIR SOFTW ENG, V25, P3043, DOI 10.1007/s10664-020-09822-x
   Yao KD, 2020, EMPIR SOFTW ENG, V25, P488, DOI 10.1007/s10664-019-09748-z
   Yuan D, 2010, ASPLOS XV: FIFTEENTH INTERNATIONAL CONFERENCE ON ARCHITECTURAL SUPPORT FOR PROGRAMMING LANGUAGES AND OPERATING SYSTEMS, P143
   Zhu JM, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE (ICSE-SEIP 2019), P121, DOI 10.1109/ICSE-SEIP.2019.00021
NR 56
TC 7
Z9 7
U1 3
U2 18
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD SEPT 1
PY 2022
VL 48
IS 9
BP 3227
EP 3241
DI 10.1109/TSE.2021.3083715
PG 15
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 4Q5BQ
UT WOS:000856098100001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Yao, KD
   Sayagh, M
   Shang, WY
   Hassan, AE
AF Yao, Kundi
   Sayagh, Mohammed
   Shang, Weiyi
   Hassan, Ahmed E.
TI Improving State-of-the-Art Compression Techniques for Log Management
   Tools
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Tools; Indexes; IP networks; Software systems; Runtime; Monitoring;
   Message systems; Software log compression; software logging; log
   management tools
AB Log data records important runtime information about the running of a software system for different purposes including performance assurance, capacity planning, and anomaly detection. Log management tools such as ELK Stack and Splunk are widely adopted to manage and leverage log data in order to assist DevOps in real-time log analytics and decision making. To enable fast queries and to save storage space, such tools split log data into small blocks (e.g., 16KB), then index and compress each block separately. Previous log compression studies focus on improving the compression of either large-sized log files or log streams, without considering improving the compression of small log blocks (the actual compression need by modern log management tools). The evaluation of four state-of-the-art compression approaches (e.g., Logzip, a variation of Logzip by pre-extracting log templates named Logzip-E, LogArchive and Cowic) indicates that these approaches do not perform well on small log blocks. In fact, the compressed blocks that are preprocessed using Logzip, Logzip-E, LogArchive or Cowic are even larger (on median 1.3 times, 1.5 times, 0.2 times or 6.6 times) than the compressed blocks without any preprocessing. Hence, we propose an approach named LogBlock to preprocess small log blocks before compressing them with a general compressor such as gzip, deflate and lz4, which are widely adopted by log management tools. LogBlock reduces the repetitiveness of logs by preprocessing the log headers and rearranging the log content leading to an improved compression ratio for a log file. Our evaluation on 16 log files shows that, for 16KB to 128KB block sizes, the compressed blocks by LogBlock are on median 5 to 21 percent smaller than the same compressed blocks without preprocessing (outperforming the state-of-the-art compression approaches). LogBlock achieves both a higher compression ratio (a median of 1.7 to 8.4 times, 1.9 to 10.0 times, 1.3 to 1.9 times and 6.2 to 11.4 times) and a faster compression speed (a median of 30.8 to 49.7 times, 42.6 to 53.8 times, 4.5 to 6.0 times and 2.5 to 4.0 times) than Logzip, Logzip-E, LogArchive and Cowic. LogBlock can help improve the storage efficiency of log management tools.
C1 [Yao, Kundi; Hassan, Ahmed E.] Queens Univ, Software Anal & Intelligence Lab SAIL, Kingston, ON K7L 3N6, Canada.
   [Sayagh, Mohammed] ETS Quebec Univ, Software & IT Engn Dept, Montreal, PQ H3C 1K3, Canada.
   [Shang, Weiyi] Concordia Univ, Dept Comp Sci & Software Engn, Montreal, PQ, Canada.
C3 Queens University - Canada; Concordia University - Canada
RP Yao, KD (corresponding author), Queens Univ, Software Anal & Intelligence Lab SAIL, Kingston, ON K7L 3N6, Canada.
EM kundi@cs.queensu.ca; mohammed.sayagh@etsmtl.ca; shang@encs.concordia.ca;
   ahmed@cs.queensu.ca
RI KHALIFA, AHMED khalifa/HKF-2246-2023
OI KHALIFA, AHMED khalifa/0000-0002-2918-7572; Sayagh,
   Mohammed/0000-0002-2724-0034
CR Aceto G, 2013, IEEE T NETW SERV MAN, V10, P162, DOI 10.1109/TNSM.2013.011713.110215
   Agarwal Rachit, 2015, NSDI 15 P 12 USENIX, P337
   [Anonymous], SIEM AIOPS APPL MANA
   [Anonymous], LOGBACK PROJECT
   [Anonymous], What is the ELK Stack?
   [Anonymous], LUCENE50STOREDFIELDS
   [Anonymous], LOGHUB LARGE COLLECT
   [Anonymous], NGINX | High Performance Load Balancer, Web Server, Reverse
   [Anonymous], LOG MANAGEMENT SECUR
   [Anonymous], SPLUNK ENTERPRISE CL
   [Anonymous], LUCENE87STOREDFIELDS
   [Anonymous], CLOUD MONITORING SER
   [Anonymous], STORE COMPRESSION LU
   [Anonymous], Apache log4j 2
   [Anonymous], The rocket-fast Syslog Server - rsyslog
   [Anonymous], 2009, Introduction to the Practice of Statistics
   [Anonymous], SENTRY APPL MONITORI
   [Anonymous], SYSLOG NG LOG MANAGE
   Balakrishnan R, 2006, P 20 IEEE INT PAR DI, P435
   Champagne J, 2018, MAGNIFYING GLASS SEA
   Christensen R., 2013, Proceedings of the ACM International Conference on Management of Data SIGMOD, P1283
   Feng B, 2016, IEEE TRUST BIG, P1358, DOI [10.1109/TrustCom.2016.0215, 10.1109/TrustCom.2016.213]
   Fu Q, 2013, IEEE WORK CONF MIN S, P397, DOI 10.1109/MSR.2013.6624054
   Fu QA, 2009, IEEE DATA MINING, P149, DOI 10.1109/ICDM.2009.60
   Hassan AE, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P713, DOI 10.1145/1368088.1379445
   Hätönen K, 2003, LECT NOTES COMPUT SC, V2737, P360
   He SL, 2016, PROC INT SYMP SOFTW, P207, DOI 10.1109/ISSRE.2016.21
   Jiang ZM, 2008, J SOFTW MAINT EVOL-R, V20, P249, DOI 10.1002/smr.374
   Jinyang Liu, 2019, 2019 34th IEEE/ACM International Conference on Automated Software Engineering (ASE). Proceedings, P863, DOI 10.1109/ASE.2019.00085
   Kabinna S, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P154, DOI [10.1145/2901739.2901769, 10.1109/MSR.2016.025]
   Kononenko O., 2014, P 11 WORKING C MININ, P328, DOI [10.1145/2597073.2597091, DOI 10.1145/2597073.2597091]
   Li H, 2021, IEEE T SOFTWARE ENG, V47, P2858, DOI 10.1109/TSE.2020.2970422
   Li H, 2017, EMPIR SOFTW ENG, V22, P1831, DOI 10.1007/s10664-016-9467-z
   Lin H, 2015, IEEE ACM INT SYMP, P21, DOI 10.1109/CCGrid.2015.45
   Marron M., 2018, ACM SIGPLAN Notices - DLS, V18, P25, DOI [DOI 10.1145/3276945.3276952, 10.1145/3393673, DOI 10.1145/3393673]
   Mell P, 2014, IEEE MILIT COMMUN C, P192, DOI 10.1109/MILCOM.2014.37
   Otten Frederick John, 2008, THESIS RHODES U
   Shang WY, 2014, PROC IEEE INT CONF S, P21, DOI 10.1109/ICSME.2014.24
   Skibinski Przemyslaw, 2007, P 11 EASTEUROPEAN C, P330
   Surti R., 2018, LITTLELOG LOG COMPRE
   Swinscow TDV., 2002, STAT SQUARE ONE
   Yang S, 2018, PROCEEDINGS OF THE 2018 USENIX ANNUAL TECHNICAL CONFERENCE, P335
   Yao KD, 2020, EMPIR SOFTW ENG, V25, P3043, DOI 10.1007/s10664-020-09822-x
   Yao KD, 2020, EMPIR SOFTW ENG, V25, P488, DOI 10.1007/s10664-019-09748-z
   Yuan D, 2012, PROC INT CONF SOFTW, P102, DOI 10.1109/ICSE.2012.6227202
   Zamfir VA, 2019, I C CONTR SYS COMP S, P188, DOI 10.1109/CSCS.2019.00039
   Zeng Y, 2019, EMPIR SOFTW ENG, V24, P3394, DOI 10.1007/s10664-019-09687-9
   Zhu JM, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE (ICSE-SEIP 2019), P121, DOI 10.1109/ICSE-SEIP.2019.00021
NR 48
TC 4
Z9 4
U1 1
U2 10
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD AUG 1
PY 2022
VL 48
IS 8
BP 2748
EP 2760
DI 10.1109/TSE.2021.3069958
PG 13
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 4D1BG
UT WOS:000846878500004
DA 2024-07-18
ER

PT J
AU Eberhart, Z
   Bansal, A
   McMillan, C
AF Eberhart, Zachary
   Bansal, Aakash
   McMillan, Collin
TI A Wizard of Oz Study Simulating API Usage Dialogues With a Virtual
   Assistant
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Intelligent agents; discourse; software/software engineering; wizard of
   oz (WoZ); virtual assistants
ID RELIABILITY; CODE
AB Virtual Assistant technology is rapidly proliferating to improve productivity in a variety of tasks. While several virtual assistants for everyday tasks are well-known (e.g., Siri, Cortana, Alexa), assistants for specialty tasks such as software engineering are rarer. One key reason software engineering assistants are rare is that very few experimental datasets are available and suitable for training the AI that is the bedrock of current virtual assistants. In this paper, we present a set of Wizard of Oz experiments that we designed to build a dataset for creating a virtual assistant. Our target is a hypothetical virtual assistant for helping programmers use APIs. In our experiments, we recruited 30 professional programmers to complete programming tasks using two APIs. The programmers interacted with a simulated virtual assistant for help - the programmers were not aware that the assistant was actually operated by human experts. We then annotated the dialogue acts in the corpus along four dimensions: illocutionary intent, API information type(s), backward-facing function, and traceability to specific API components. We observed a diverse range of interactions that will facilitate the development of dialogue strategies for virtual assistants for API usage.
C1 [Eberhart, Zachary; Bansal, Aakash; McMillan, Collin] Univ Notre Dame, Dept Comp Sci & Engn, Notre Dame, IN 46556 USA.
C3 University of Notre Dame
RP Eberhart, Z (corresponding author), Univ Notre Dame, Dept Comp Sci & Engn, Notre Dame, IN 46556 USA.
EM zeberhar@nd.edu; abansal1@nd.edu; cmc@nd.edu
FU NSF [CCF-1452959, CCF-1717607]
FX The authors would like to sincerely thank the participants in the Wizard
   of Oz experiments, as well as the anonymous reviewers whose
   reccomendations have greatly improved the manuscript. This work was
   supported in part by the NSF CCF-1452959 and CCF-1717607 grants. Any
   opinions, findings, and conclusions expressed herein are the authors'
   and do not necessarily reflect those of the sponsors.
CR Amann S, 2019, IEEE T SOFTWARE ENG, V45, P1170, DOI 10.1109/TSE.2018.2827384
   Andrew J Ko, 2004, P SIGCHI C HUMAN FAC, V6, P151, DOI [DOI 10.1145/985692.985712, 10.1145/985692.985712]
   [Anonymous], 2008, Proceedings of the 22nd International Conference on Computational Linguistics (Coling 2008)
   [Anonymous], 2011, P ACM 2011 C COMPUTE, DOI DOI 10.1145/1958824.1958904
   [Anonymous], 2009, CHI 09 EXTENDED ABST, DOI [10.1145/1520340.1520678, DOI 10.1145/1520340.1520678]
   [Anonymous], 2012, ACM SIGSOFT SOFTWARE
   [Anonymous], 2011, P 2 INT WORKSHOP WEB
   Antoniol G, 2002, IEEE T SOFTWARE ENG, V28, P970, DOI 10.1109/TSE.2002.1041053
   Arnaoudova V, 2015, 2015 IEEE/ACM 37th IEEE International Conference on Software Engineering, Vol 2, P949, DOI 10.1109/ICSE.2015.301
   Asri L. E, 2017, CORR
   Atefi S., 2020, CORR
   Bach Kent& Robert M. Harnish, 1979, Linguistic Communication and Speech Acts
   Bengtsson M., 2016, PLAN PERFORM QUALITA, V2, P8, DOI DOI 10.1016/J.NPLS.2016.01.001
   Benzm_uller C., 2006, PROC 5 INT C LANG RE, P1766
   Benzmuller C., 2003, ADV TECHNOLOGIES MAT, VVIII, P471
   Bernsen N. O., 1994, TECH REP WPCS 94 1
   Bertomeu N, 2006, P INT QUEST ANSW WOR, P1
   Boehm B., 2006, 28th International Conference on Software Engineering Proceedings, P12, DOI 10.1145/1134285.1134288
   Bradley NC, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P993, DOI 10.1145/3180155.3180238
   Brown F. A., 2017, U.S. Patent, Patent No. [9,824,188, 9824188]
   Bunt H., 2017, Multimodal Interaction with W3C Standards: Toward Natural User Interfaces to Everything, P109, DOI [10.1007/978-3-319-42816-1, DOI 10.1007/978-3-319-42816-1]
   Bunt Harry, 2009, P EDAML AAMAS WORKSH, P13
   Buse RPL, 2012, PROC INT CONF SOFTW, P782, DOI 10.1109/ICSE.2012.6227140
   Chen C, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE COMPANION 2014), P456, DOI 10.1145/2591062.2591128
   Clark A., 2004, SIGDIAL 04 P 5 SIGDI, P163
   Cooper R. S., 2004, U.S. Patent, Patent No. [6,757,362, 6757362]
   Core M. G., 1997, Proceedings of the AAAI Fall Symposium on Communicative Action in Humans and Machines, P28
   Craggs R, 2005, COMPUT LINGUIST, V31, P289, DOI 10.1162/089120105774321109
   DAHLBACK N, 1993, KNOWL-BASED SYST, V6, P258, DOI 10.1016/0950-7051(93)90017-N
   Daniel G, 2020, IEEE ACCESS, V8, P15332, DOI 10.1109/ACCESS.2020.2966919
   De Roover C, 2013, CONF PROC INT SYMP C, P152, DOI 10.1109/ICPC.2013.6613843
   Dow S, 2005, IEEE PERVAS COMPUT, V4, P18, DOI 10.1109/MPRV.2005.93
   Downe-Wamboldt B, 1992, Health Care Women Int, V13, P313
   Duala-Ekoko E, 2012, PROC INT CONF SOFTW, P266, DOI 10.1109/ICSE.2012.6227187
   Ed-Douibi H, 2020, LECT NOTES COMPUT SC, V12128, P538, DOI 10.1007/978-3-030-50578-3_40
   Eisenberg DS, 2010, CHI2010: PROCEEDINGS OF THE 28TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, VOLS 1-4, P1331
   Gangadharaiah Rashmi, 2018, P 2018 C N AM CHAPTE, V3, P25
   Gao G, 2020, S VIS LANG HUM CEN C, DOI 10.1109/vl/hcc50065.2020.9127274
   Green A, 2004, RO-MAN 2004: 13TH IEEE INTERNATIONAL WORKSHOP ON ROBOT AND HUMAN INTERACTIVE COMMUNICATION, PROCEEDINGS, P575, DOI 10.1109/ROMAN.2004.1374824
   Gu XD, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P631, DOI 10.1145/2950290.2950334
   Hajdinjak M, 2006, COMPUT LINGUIST, V32, P263, DOI 10.1162/coli.2006.32.2.263
   He H, 2018, 2018 CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING (EMNLP 2018), P2333
   Hsieh HF, 2005, QUAL HEALTH RES, V15, P1277, DOI 10.1177/1049732305276687
   Jinshui Wang, 2011, 2011 IEEE 27th International Conference on Software Maintenance, P213, DOI 10.1109/ICSM.2011.6080788
   Kang Y., 2018, Proceedings of the 2018 Conference of the North American Chapter of the Association for Computational Linguistics: Human Language Technologies, Volume, P33, DOI DOI 10.18653/V1/N18-3005
   Katsakioris M. M., 2019, PROC COMBINED WORKSH, P1
   Kitchenham BA, 2002, IEEE T SOFTWARE ENG, V28, P721, DOI 10.1109/TSE.2002.1027796
   Ko AJ, 2011, S VIS LANG HUM CEN C, P173, DOI 10.1109/VLHCC.2011.6070395
   Krippendorff K, 2004, HUM COMMUN RES, V30, P411, DOI 10.1093/hcr/30.3.411
   Krippendorff K, 2011, COMMUN METHODS MEAS, V5, P93, DOI 10.1080/19312458.2011.568376
   Kruijff-Korbayova I., 2006, PROC 5 INT C LANG RE, P2018
   LeClair A, 2019, PROC INT CONF SOFTW, P795, DOI 10.1109/ICSE.2019.00087
   Leech Geoffrey, 2003, Proceedings of the Corpus Linguistics 2003 Conference, P441
   Lv ZH, 2016, LECT NOTES COMPUT SC, V9584, P31, DOI 10.1007/978-3-319-32865-2_4
   Maalej W, 2013, IEEE T SOFTWARE ENG, V39, P1264, DOI 10.1109/TSE.2013.12
   McCowan Iain, 2005, Proceedings of the 5th International Conference on Methods and Techniques in Behavioral Research, V88
   Mealin S, 2012, S VIS LANG HUM CEN C, P71, DOI 10.1109/VLHCC.2012.6344485
   Meng Michael, 2019, Communication Design Quarterly Review, V7, P40, DOI 10.1145/3358931.3358937
   Meng M, 2018, Journal of Technical Writing and Communication, V48, P295, DOI [10.1177/0047281617721853, 10.1177/0047281617721853?journalCode=jtwa, DOI 10.1177/0047281617721853]
   Okur E., 2019, CORR
   Perry DE., 2000, P C FUT SOFTW ENG, P345, DOI DOI 10.1145/336512.336586
   Piccioni Marco, 2013, 2013 ACM / IEEE International Symposium on Empirical Software Engineering and Measurement (ESEM), P5, DOI 10.1109/ESEM.2013.14
   Pineda L. A., 2002, MICAI 2002: Advances in Artificial Intelligence.Second Mexican International Conference on Artificial Intelligence. Proceedings (Lecture Notes in Artificial Intelligence Vol. 2313), P166
   Popescu-Belis A., 2005, ISSCO Working-Paper, V62, P1
   Pruski P, 2015, REQUIR ENG, V20, P215, DOI 10.1007/s00766-015-0224-4
   Reithinger N., 1997, 5 EUR C SPEECH COMM
   Riek LD, 2012, J HUM-ROBOT INTERACT, V1, P119, DOI 10.5898/JHRI.1.1.Riek
   Rieser V, 2011, THEOR APPL NAT LANG, P1, DOI 10.1007/978-3-642-24942-6
   Rieser Verena, 2005, P 6 SIGDIAL WORKSH D, P97
   Robillard MP, 2017, PROC IEEE INT CONF S, P479, DOI 10.1109/ICSME.2017.17
   Robillard MP, 2011, EMPIR SOFTW ENG, V16, P703, DOI 10.1007/s10664-010-9150-8
   Robillard MP, 2009, IEEE SOFTWARE, V26, P27, DOI 10.1109/MS.2009.193
   Scheffler K., 2002, P HUMAN LANGUAGE TEC, P12
   Schmidt B, 2018, PROCEEDINGS OF THE 2018 ACM INTERNATIONAL JOINT CONFERENCE ON PERVASIVE AND UBIQUITOUS COMPUTING AND PROCEEDINGS OF THE 2018 ACM INTERNATIONAL SYMPOSIUM ON WEARABLE COMPUTERS (UBICOMP/ISWC'18 ADJUNCT), P794, DOI 10.1145/3267305.3274131
   Seaman CB, 1999, IEEE T SOFTWARE ENG, V25, P557, DOI 10.1109/32.799955
   Serban I. V., 2015, CORR
   Spooren W, 2010, CORPUS LINGUIST LING, V6, P241, DOI 10.1515/CLLT.2010.009
   Stolcke A, 2000, COMPUT LINGUIST, V26, P339, DOI 10.1162/089120100561737
   Subramanian S, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P643, DOI 10.1145/2568225.2568313
   Tian Y, 2017, IEEE INT CONF AUTOM, P153, DOI 10.1109/ASE.2017.8115628
   Treude C, 2016, PROC INT CONF SOFTW, P392, DOI 10.1145/2884781.2884800
   Treude C, 2015, 2015 IEEE/ACM 37th IEEE International Conference on Software Engineering, Vol 2, P649, DOI 10.1109/ICSE.2015.214
   Walker MA, 2001, 39TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, PROCEEDINGS OF THE CONFERENCE, P515
   Wang JS, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P762, DOI 10.1109/ICSE.2013.6606622
   White RW, 2018, COMMUN ACM, V61, P106, DOI 10.1145/3185336
   Whittaker S., 2002, PROC 3 INT C LANG RE, P1602
   Wiebe J, 2005, LECT NOTES COMPUT SC, V3406, P486
   Williams J.D., 2003, P 4 SIGDIAL WORKSHOP, P135
   Witte R, 2008, IET SOFTW, V2, P3, DOI 10.1049/iet-sen:20070110
   Wood A, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P491, DOI 10.1145/3236024.3236031
   Ye X, 2016, PROC INT CONF SOFTW, P404, DOI 10.1145/2884781.2884862
   Young S., 2009, TECH REP
   Zhang TY, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P886, DOI 10.1145/3180155.3180260
   Zhong H, 2013, ACM SIGPLAN NOTICES, V48, P803, DOI [10.1145/2509136.2509523, 10.1145/2544173.2509523]
   Zhong H, 2009, LECT NOTES COMPUT SC, V5653, P318, DOI 10.1007/978-3-642-03013-0_15
NR 95
TC 3
Z9 3
U1 0
U2 20
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUN 1
PY 2022
VL 48
IS 6
BP 1883
EP 1904
DI 10.1109/TSE.2020.3040935
PG 22
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 2D5IM
UT WOS:000811580600004
OA Bronze, Green Submitted
DA 2024-07-18
ER

PT J
AU Keegan, M
   Braberman, V
   D'Ippolito, N
   Piterman, N
   Uchitel, S
AF Keegan, Maureen
   Braberman, Victor
   D'Ippolito, Nicolas
   Piterman, Nir
   Uchitel, Sebastian
TI Control and Discovery of Environment Behaviour
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Protocols; Learning automata; Testing; Sensors; Process control;
   Knowledge engineering; Internet; Adaptive systems; reactive systems;
   discrete event controllers; environment control and discovery
AB An important ability of self-adaptive systems is to be able to autonomously understand the environment in which they operate and use this knowledge to control the environment behaviour in such a way that system goals are achieved. How can this be achieved when the environment is unknown? Two phase solutions that require a full discovery of environment behaviour before computing a strategy that can guarantee the goals or report the non-existence of such a strategy (i.e., unrealisability) are impractical as the environment may exhibit adversarial behaviour to avoid full discovery. In this paper we formalise a control and discovery problem for reactive system environments. In our approach a strategy must be produced that will, for every environment, guarantee that unrealisablity will be correctly concluded or system goals will be achieved by controlling the environment behaviour. We present a solution applicable to environments characterisable as labeled transition systems (LTS). We use modal transition systems (MTS) to represent partial knowledge of environment behaviour, and rely on MTS controller synthesis to make exploration decisions. Each decision either contributes more knowledge about the environment's behaviour or contributes to achieving the system goals. We present an implementation restricted to GR(1) goals and show its viability.
C1 [Keegan, Maureen] Univ Buenos Aires FCEN UBA, Fac Ciencias Exactas & Nat, RA-1428 Buenos Aires C, DF, Argentina.
   [Braberman, Victor; Uchitel, Sebastian] FCEN UBA, RA-1053 Buenos Aires C, DF, Argentina.
   [Braberman, Victor; Uchitel, Sebastian] Consejo Nacl Invest Cient & Tecn, Inst Ciencias Computat ICC, RA-1428 Buenos Aires C, DF, Argentina.
   [D'Ippolito, Nicolas] ASAPP Inc, RA-1425 Buenos Aires C, DF, Argentina.
   [Piterman, Nir] Univ Leicester, Dept Informat, Leicester, Leics, England.
   [Piterman, Nir] Univ Gothenburg, Dept Comp Sci & Engn, S-41296 Gothenburg, Sweden.
   [Uchitel, Sebastian] Imperial Coll, London SW7 2RH, England.
C3 Consejo Nacional de Investigaciones Cientificas y Tecnicas (CONICET);
   University of Leicester; University of Gothenburg; Imperial College
   London
RP Uchitel, S (corresponding author), FCEN UBA, RA-1053 Buenos Aires C, DF, Argentina.; Uchitel, S (corresponding author), Consejo Nacl Invest Cient & Tecn, Inst Ciencias Computat ICC, RA-1428 Buenos Aires C, DF, Argentina.
EM maukeegan1@gmail.com; victor.braberman@gmail.com; ndippolito@dc.uba.ar;
   nir.piterman@gmail.com; suchitel@dc.uba.ar
OI Uchitel, Sebastian/0000-0001-9352-1478
FU ERC [772459]; Marie Sklodowska-Curie BeHAPI [778233]; ANPCYT [PICT
   2018-3835, PICT 2015-1718]; CONICET [11220130100688CO, 112201501
   00931CO]; UBACYT [20020170100419 BA]; European Research Council (ERC)
   [772459] Funding Source: European Research Council (ERC)
FX This work was supported by the following grants: the ERC Consolidator
   grant D-SynMA (No. 772459), the Marie Sklodowska-Curie BeHAPI (No.
   778233), the grants ANPCYT PICT 2018-3835, ANPCYT PICT 2015-1718,
   CONICET PIP 2014/16 Nffi 11220130100688CO, 2015/2017 Nffi 112201501
   00931CO and UBACYT 20020170100419 BA
CR Aarts F, 2015, FORM METHOD SYST DES, V46, P1, DOI 10.1007/s10703-014-0216-x
   ANGLUIN D, 1987, INFORM COMPUT, V75, P87, DOI 10.1016/0890-5401(87)90052-6
   [Anonymous], 2014, HSCC HSCC 14, DOI DOI 10.1145/2562059.2562128
   Belta C, 2007, IEEE ROBOT AUTOM MAG, V14, P61, DOI 10.1109/MRA.2007.339624
   Bennaceur A., 2012, P INT WORKSH ET SYST, P16
   Bennaceur A., 2019, MICS MEDIATOR SYNTHE
   Bennaceur A, 2015, IEEE T SOFTWARE ENG, V41, P221, DOI 10.1109/TSE.2014.2364844
   Bloem R, 2012, J COMPUT SYST SCI, V78, P911, DOI 10.1016/j.jcss.2011.08.007
   Chatterjee K, 2008, LECT NOTES COMPUT SC, V5201, P147, DOI 10.1007/978-3-540-85361-9_14
   D'Ippolito Nicolas, 2014, 2014 14th International Conference on Application of Concurrency to System Design, P52, DOI 10.1109/ACSD.2014.15
   D'Ippolito Nicolas, 2012, FM 2012: Formal Methods. Proceedings of the 18th International Symposium, P155, DOI 10.1007/978-3-642-32759-9_15
   D'Ippolito N, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P688, DOI 10.1145/2568225.2568264
   D'Ippolito N, 2013, ACM T SOFTW ENG METH, V22, DOI 10.1145/2430536.2430543
   D'Ippolito N, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P211, DOI 10.1145/1985793.1985823
   Dathathri S, 2017, ACM IEEE INT CONF CY, P37, DOI 10.1145/3055004.3055014
   De la Higuera Colin, 2010, GRAMMATICAL INFERENC
   Fainekos GE, 2009, AUTOMATICA, V45, P343, DOI 10.1016/j.automatica.2008.08.008
   Fiterau-Brostean P, 2016, LECT NOTES COMPUT SC, V9780, P454, DOI 10.1007/978-3-319-41540-6_25
   Foster H, 2003, 18TH IEEE INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P152, DOI 10.1109/ASE.2003.1240303
   Fu J, 2013, IEEE DECIS CONTR P, P5357, DOI 10.1109/CDC.2013.6760732
   Fu J, 2015, ENG APPL ARTIF INTEL, V37, P378, DOI 10.1016/j.engappai.2014.09.020
   Giannakopoulou D., 2003, PROC 9 EUR SOFTW ENG, P257
   Heaven W, 2009, LECT NOTES COMPUT SC, V5525, P109, DOI 10.1007/978-3-642-02161-9_6
   Heinz J, 2010, ACL 2010: 48TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, P897
   Inverardi P., 2007, INT WORKSH ENG SOFTW, P29
   Inverardi P, 2010, LECT NOTES COMPUT SC, V6416, P236, DOI 10.1007/978-3-642-16561-0_25
   Keegan M., 2020, MTSA TOOL DATA CONTR
   Kephart JO, 2003, COMPUTER, V36, P41, DOI 10.1109/MC.2003.1160055
   Larsen U, 1988, Eur J Popul, V3, P203, DOI 10.1109/LICS.1988.5119
   Lewerentz C., 1995, FORMAL DEV REACTIVE, V891
   Menghi C, 2018, LECT NOTES COMPUT SC, V10951, P399, DOI 10.1007/978-3-319-95582-7_24
   Nostro N, 2016, J SYST SOFTWARE, V111, P185, DOI 10.1016/j.jss.2015.09.038
   Pistore M, 2004, LECT NOTES COMPUT SC, V3192, P106
   Piterman N, 2006, LECT NOTES COMPUT SC, V3855, P364
   PNUELI A, 1989, CONFERENCE RECORD OF THE SIXTEENTH ANNUAL ACM SYMPOSIUM ON PRINCIPLES OF PROGRAMMING LANGUAGES, P179, DOI 10.1145/75277.75293
   Pnueli A., 1977, 18th Annual Symposium on Foundations of Computer Science, P46, DOI 10.1109/SFCS.1977.32
   Topcu U, 2012, HSCC 12: PROCEEDINGS OF THE 15TH ACM INTERNATIONAL CONFERENCE ON HYBRID SYSTEMS: COMPUTATION AND CONTROL, P85
   Uchitel S, 2009, IEEE T SOFTWARE ENG, V35, P384, DOI 10.1109/TSE.2008.107
   van Lamsweerde A., 2009, REQUIREMENTS ENG SYS
   Wenchao Li, 2011, 2011 9th IEEE/ACM International Conference on Formal Methods and Models for Codesign (MEMOCODE 2011), P43, DOI 10.1109/MEMCOD.2011.5970509
   Wong KW, 2018, IEEE T ROBOT, V34, P936, DOI 10.1109/TRO.2018.2830353
   Wong Kai Weng, 2014, ROBOTICS SCI SYSTEMS
NR 42
TC 2
Z9 2
U1 0
U2 2
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUN 1
PY 2022
VL 48
IS 6
BP 1965
EP 1978
DI 10.1109/TSE.2020.3044532
PG 14
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 2D5IM
UT WOS:000811580600008
DA 2024-07-18
ER

PT J
AU Teymourian, N
   Izadkhah, H
   Isazadeh, A
AF Teymourian, Navid
   Izadkhah, Habib
   Isazadeh, Ayaz
TI A Fast Clustering Algorithm for Modularization of Large-Scale Software
   Systems
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Clustering algorithms; Software algorithms; Search problems; Software
   systems; Semantics; Software architecture; Software clustering; software
   modularization; software maintenance; software comprehension;
   architecture recovery
ID INFORMATION
AB A software system evolves over time in order to meet the needs of users. Understanding a program is the most important step to apply new requirements. Clustering techniques through dividing a program into small and meaningful parts make it possible to understand the program. In general, clustering algorithms are classified into two categories: hierarchical and non-hierarchical algorithms (such as search-based approaches). While clustering problems generally tend to be NP-hard, search-based algorithms produce acceptable clustering and have time and space constraints and hence they are inefficient in large-scale software systems. Most algorithms which currently used in software clustering fields do not scale well when applied to large and very large applications. In this paper, we present a new and fast clustering algorithm, FCA, that can overcome space and time constraints of existing algorithms by performing operations on the dependency matrix and extracting other matrices based on a set of features. The experimental results on ten small-sized applications, ten folders with different functionalities from Mozilla Firefox, a large-sized application (namely ITK), and a very large-sized application (namely Chromium) demonstrate that the proposed algorithm achieves higher quality modularization compared with hierarchical algorithms. It can also compete with search-based algorithms and a clustering algorithm based on subsystem patterns. But the running time of the proposed algorithm is much shorter than that of the hierarchical and non-hierarchical algorithms. The source code of the proposed algorithm can be accessed at https://github.com/SoftwareMaintenanceLab.
C1 [Teymourian, Navid; Izadkhah, Habib; Isazadeh, Ayaz] Univ Tabriz, Dept Comp Sci, Tabriz 5166616471, Iran.
C3 University of Tabriz
RP Izadkhah, H (corresponding author), Univ Tabriz, Dept Comp Sci, Tabriz 5166616471, Iran.
EM nvd.teymourian@gmail.com; izadkhah@tabrizu.ac.ir; isazadeh@tabrizu.ac.ir
OI Teymourian, Navid/0000-0002-5535-2439
CR Akbari M, 2019, 2019 IEEE 5TH CONFERENCE ON KNOWLEDGE BASED ENGINEERING AND INNOVATION (KBEI 2019), P565, DOI 10.1109/KBEI.2019.8734939
   Amarjeet, 2018, SOFT COMPUT, V22, P6341, DOI 10.1007/s00500-017-2687-3
   Amarjeet, 2017, COMPUT LANG SYST STR, V47, P153, DOI 10.1016/j.cl.2016.09.003
   Andritsos P, 2005, IEEE T SOFTWARE ENG, V31, P150, DOI 10.1109/TSE.2005.25
   Corazza A, 2011, EUR CON SFTWR MTNCE, P35, DOI 10.1109/CSMR.2011.8
   Ducasse S, 2009, IEEE T SOFTWARE ENG, V35, P573, DOI 10.1109/TSE.2009.19
   Garcia J., 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P552, DOI 10.1109/ASE.2011.6100123
   Garcia J, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P901, DOI 10.1109/ICSE.2013.6606639
   Garcia J, 2013, IEEE INT CONF AUTOM, P486, DOI 10.1109/ASE.2013.6693106
   Huang JH, 2017, SOFT COMPUT, V21, P3415, DOI 10.1007/s00500-015-2018-5
   Huang JH, 2016, INFORM SCIENCES, V342, P96, DOI 10.1016/j.ins.2016.01.030
   Hussain I, 2015, INT ARAB J INF TECHN, V12, P32
   Hwa J, 2017, INT J SOFTW ENG KNOW, V27, P1033, DOI 10.1142/S0218194017500395
   Isazadeh A., 2017, Source code modularization: theory and techniques
   Izadkhah H, 2019, P 5 INT EL C ENTR AP, P1
   Izadkhah H, 2016, CYBERN INF TECHNOL, V16, P70, DOI 10.1515/cait-2016-0035
   Jalali NS, 2019, SOFT COMPUT, V23, P11141, DOI 10.1007/s00500-018-3666-z
   Kargar M, 2019, COMPUT ELECTR ENG, V80, DOI 10.1016/j.compeleceng.2019.106500
   Kargar M, 2017, 2017 18TH CSI INTERNATIONAL SYMPOSIUM ON COMPUTER SCIENCE AND SOFTWARE ENGINEERING CONFERENCE (CSSE), P55, DOI 10.1109/CSICSSE.2017.8320117
   Kumari AC, 2016, J SYST SOFTWARE, V117, P384, DOI 10.1016/j.jss.2016.04.007
   Lutellier T, 2018, IEEE T SOFTWARE ENG, V44, P159, DOI 10.1109/TSE.2017.2671865
   Lutellier T, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P69, DOI 10.1109/ICSE.2015.136
   Maqbool O, 2007, IEEE T SOFTWARE ENG, V33, P759, DOI 10.1109/TSE.2007.70732
   Misra J., 2012, 2012 19th Working Conference on Reverse Engineering (WCRE), P113, DOI 10.1109/WCRE.2012.21
   Mitchell B.S., 2002, A heuristic search approach to solving the software clustering problem
   Mitchell BS, 2006, IEEE T SOFTWARE ENG, V32, P193, DOI 10.1109/TSE.2006.31
   Mohammadi S, 2019, INFORM SOFTWARE TECH, V105, P252, DOI 10.1016/j.infsof.2018.09.001
   Monçores MC, 2018, COMPUT OPER RES, V91, P92, DOI 10.1016/j.cor.2017.10.004
   Naseem R, 2013, J SYST SOFTWARE, V86, P2045, DOI 10.1016/j.jss.2013.03.080
   Parsa S, 2005, J RES PRACT INF TECH, V37, P127
   Praditwong K, 2011, IEEE T SOFTWARE ENG, V37, P264, DOI 10.1109/TSE.2010.26
   Prajapati A, 2016, LECT NOTES COMPUT SC, V9734, P296, DOI 10.1007/978-3-319-40349-6_28
   Ramírez A, 2018, INFORM SCIENCES, V463, P92, DOI 10.1016/j.ins.2018.06.034
   Shokoufandeh A, 2002, NINTH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P3, DOI 10.1109/WCRE.2002.1173059
   Shtern Mark, 2012, Advances in Software Engineering, DOI 10.1155/2012/792024
   Tajgardan Mahjoubeh, 2016, Journal of Applied Computer Science Methods, V8, P99, DOI 10.1515/jacsm-2016-0007
   Tzerpos V, 2000, SEVENTH WORKING CONFERENCE ON REVERSE ENGINEERING - PROCEEDINGS, P258
   Wen Z, 2004, PROG COMPREHEN, P194, DOI 10.1109/WPC.2004.1311061
   Wu JW, 2005, PROC IEEE INT CONF S, P525
   Xia X, 2018, IEEE T SOFTWARE ENG, V44, P951, DOI 10.1109/TSE.2017.2734091
   Xiao CC, 2005, NINTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P124
NR 41
TC 16
Z9 16
U1 0
U2 1
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD APR 1
PY 2022
VL 48
IS 4
BP 1451
EP 1462
DI 10.1109/TSE.2020.3022212
PG 12
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 0N4HC
UT WOS:000782799700020
DA 2024-07-18
ER

PT J
AU Jiarpakdee, J
   Tantithamthavorn, C
   Dam, HK
   Grundy, J
AF Jiarpakdee, Jirayus
   Tantithamthavorn, Chakkrit (Kla)
   Dam, Hoa Khanh
   Grundy, John
TI An Empirical Study of Model-Agnostic Techniques for Defect Prediction
   Models
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Explainable software analytics; software quality assurance; defect
   prediction models; model-agnostic techniques
ID PRONE SOFTWARE MODULES; GLOBAL OPTIMIZATION
AB Software analytics have empowered software organisations to support a wide range of improved decision-making and policy-making. However, such predictions made by software analytics to date have not been explained and justified. Specifically, current defect prediction models still fail to explain why models make such a prediction and fail to uphold the privacy laws in terms of the requirement to explain any decision made by an algorithm. In this paper, we empirically evaluate three model-agnostic techniques, i.e., two state-of-the-art Local Interpretability Model-agnostic Explanations technique (LIME) and BreakDown techniques, and our improvement of LIME with Hyper Parameter Optimisation (LIME-HPO). Through a case study of 32 highly-curated defect datasets that span across 9 open-source software systems, we conclude that (1) model-agnostic techniques are needed to explain individual predictions of defect models; (2) instance explanations generated by model-agnostic techniques are mostly overlapping (but not exactly the same) with the global explanation of defect models and reliable when they are re-generated; (3) model-agnostic techniques take less than a minute to generate instance explanations; and (4) more than half of the practitioners perceive that the contrastive explanations are necessary and useful to understand the predictions of defect models. Since the implementation of the studied model-agnostic techniques is available in both Python and R, we recommend model-agnostic techniques be used in the future.
C1 [Jiarpakdee, Jirayus; Tantithamthavorn, Chakkrit (Kla); Grundy, John] Monash Univ, Fac Informat Technol, Clayton, Vic 3800, Australia.
   [Dam, Hoa Khanh] Univ Wollongong, Sch Comp & Informat Technol, Fac Engn & Informat Sci, Wollongong, NSW W2522, Australia.
C3 Monash University; University of Wollongong
RP Jiarpakdee, J (corresponding author), Monash Univ, Fac Informat Technol, Clayton, Vic 3800, Australia.
EM jirayus.jiarpakdee@monash.edu; chakkrit@monash.edu; hoa@uow.edu.au;
   john.grundy@monash.edu
RI Dam, Hoa Khanh/C-6058-2014; Grundy, John/I-6681-2012
OI Dam, Hoa Khanh/0000-0003-4246-0526; Tantithamthavorn,
   Chakkrit/0000-0002-5516-9984; Grundy, John/0000-0003-4928-7076
FU Australian Research Council's Discovery Early Career Researcher Award
   (DECRA) [DE200100941]; ARC Laureate Fellowship [FL190100035]; Australian
   Research Council [DE200100941] Funding Source: Australian Research
   Council
FX This study would not have been possible without the data shared by
   Yatish et al. [112], as well as computing resources provided by Monash
   University. Tantithamthavorn was supported by the Australian Research
   Council's Discovery Early Career Researcher Award (DECRA) funding scheme
   DE200100941. Grundy was supported by ARC Laureate Fellowship
   FL190100035.
CR Agrawal A, 2018, ARXIV 181201550
   Agrawal A, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1050, DOI 10.1145/3180155.3180197
   [Anonymous], 2014, 11 WORKING C MINING, DOI [DOI 10.1145/2597073.2597076, DOI 10.1145/2597073]
   [Anonymous], 2020, EMPIRICAL STUDY MODE
   Anvik John, 2006, P 28 INT C SOFTWARE, P361, DOI DOI 10.1145/1134285.1134336
   Arisholm E, 2010, J SYST SOFTWARE, V83, P2, DOI 10.1016/j.jss.2009.06.055
   Bas C. V. F., 1980, The Scientific Image
   Bettenburg N., 2012, 2012 9th IEEE Working Conference on Mining Software Repositories (MSR 2012), P60, DOI 10.1109/MSR.2012.6224300
   Biecek P., 2017, PYBREAKDOWN PYTHON I
   Biecek Przemyslaw, 2024, CRAN
   Bird C., 2011, P 19 ACM SIGSOFT S 1, P4, DOI DOI 10.1145/2025113.2025119
   Cahill J, 2013, IEEE AUS SOFT ENGR, P211, DOI 10.1109/ASWEC.2013.33
   Canfora G, 2013, 2013 IEEE SIXTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST 2013), P252, DOI 10.1109/ICST.2013.38
   Chen D, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P456, DOI 10.1145/3236024.3236050
   Coelho E., 2012, DEVELOPMENT, V3, P7, DOI DOI 10.5120/IJAIS12-450574
   D'Ambros Marco, 2010, Proceedings of the 2010 7th IEEE Working Conference on Mining Software Repositories (MSR 2010), P31, DOI 10.1109/MSR.2010.5463279
   D'Ambros M, 2012, EMPIR SOFTW ENG, V17, P531, DOI 10.1007/s10664-011-9173-9
   Efron B., 1993, INTRO BOOTSTRAP, DOI 10.1007/978-1-4899-4541-9
   Elish KO, 2008, J SYST SOFTWARE, V81, P649, DOI 10.1016/j.jss.2007.07.040
   French S., 2014, WILEY STATSREF STAT
   Friedman JH, 2001, ANN STAT, V29, P1189, DOI 10.1214/aos/1013203451
   Fu W, 2016, INFORM SOFTWARE TECH, V76, P135, DOI 10.1016/j.infsof.2016.04.017
   Gevrey M, 2003, ECOL MODEL, V160, P249, DOI 10.1016/S0304-3800(02)00257-0
   Ghotra B, 2017, IEEE WORK CONF MIN S, P146, DOI 10.1109/MSR.2017.18
   Ghotra B, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P789, DOI 10.1109/ICSE.2015.91
   Gosiewska A., 2019, ARXIV190311420
   Guidotti R, 2019, ACM COMPUT SURV, V51, DOI 10.1145/3236009
   Gunes Koru A., 2005, P 2005 WORKSHOP PRED, P1
   Hall M., 2009, ACM SIGKDD Explor. Newsl, V11, P18, DOI DOI 10.1145/1656274.1656278
   Hall T, 2012, IEEE T SOFTWARE ENG, V38, P1276, DOI 10.1109/TSE.2011.103
   HANLEY JA, 1982, RADIOLOGY, V143, P29, DOI 10.1148/radiology.143.1.7063747
   Harrell FE, 2015, SPRINGER SER STAT, DOI 10.1007/978-3-319-19425-7
   Hastie T., 2001, Springer Series in Statistics, DOI [10.1007/978-0-387-84858-7, 10.1007/978-0-387-21606-5, DOI 10.1007/978-0-387-21606-5]
   Hilton D.J., 2005, The psychology of counterfactual thinking, P44, DOI DOI 10.1080/01691864.2019.1694068
   Dam HK, 2018, 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: NEW IDEAS AND EMERGING TECHNOLOGIES RESULTS (ICSE-NIER), P53, DOI 10.1145/3183399.3183424
   Horne Z, 2019, TRENDS COGN SCI, V23, P187, DOI 10.1016/j.tics.2018.12.004
   Huang Q, 2017, PROC IEEE INT CONF S, P159, DOI 10.1109/ICSME.2017.51
   J Fox, 2020, CAR COMPANION APPL R
   Jiang Y., 2008, DEFECTS 08 P 2008 WO, P16, DOI [DOI 10.1145/1390817.1390822, 10.1145/1390817.1390822]
   Jiarpakdee J., IEEE T SOFTW ENG
   Jiarpakdee J, 2018, PROC IEEE INT CONF S, P711, DOI 10.1109/ICSME.2018.00083
   Jiarpakdee J, 2018, PROC IEEE INT CONF S, P92, DOI 10.1109/ICSME.2018.00018
   Jiarpakdee J, 2016, IEEE INT SYMP SOFTW, P51, DOI 10.1109/ISSREW.2016.30
   Kamei Y, 2013, IEEE T SOFTWARE ENG, V39, P757, DOI 10.1109/TSE.2012.70
   Kaur A, 2008, 2008 INTERNATIONAL CONFERENCE ON ADVANCED COMPUTER THEORY AND ENGINEERING, P37, DOI 10.1109/ICACTE.2008.204
   Kitchenham BA, 2008, Guide to advanced empirical software engineering, P63, DOI [DOI 10.1007/978-1-84800-044-5_3, 10.1007/ 978-1-84800-044-5_3]
   Krishnan R., 2017, SOCIAL SCI RES NETWO, P1
   Krosnick JA, 1999, ANNU REV PSYCHOL, V50, P537, DOI 10.1146/annurev.psych.50.1.537
   Kuhn M., 2017, Caret: classification and regression training
   Leake D. B., 2014, EVALUATING EXPLANATI
   Lessmann S, 2008, IEEE T SOFTWARE ENG, V34, P485, DOI 10.1109/TSE.2008.35
   Lewis C, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P372, DOI 10.1109/ICSE.2013.6606583
   Liaw Andy, 2022, CRAN
   LIPTON P, 1990, ROY INST PH, V27, P247, DOI 10.1017/S1358246100005130
   Lipton ZC, 2018, COMMUN ACM, V61, P36, DOI 10.1145/3233231
   Litwin M. S., 1995, How to Measure Survey Reliability and Validity, V7
   Lombrozo T, 2006, TRENDS COGN SCI, V10, P464, DOI 10.1016/j.tics.2006.08.004
   Lundberg SM, 2017, ADV NEUR IN, V30
   Mende T., 2009, P 5 INT C PREDICTOR, P1, DOI [10.1145/1540438.1540448, DOI 10.1145/1540438.1540448]
   Mende Thilo., 2010, P 6 INT C PREDICTIVE, P5
   Menzies T, 2007, IEEE T SOFTWARE ENG, V33, P2, DOI 10.1109/TSE.2007.256941
   Menzies T, 2013, IEEE SOFTWARE, V30, P31, DOI 10.1109/MS.2013.86
   Menzies T, 2013, IEEE T SOFTWARE ENG, V39, P822, DOI 10.1109/TSE.2012.83
   Menzies T, 2012, EMPIR SOFTW ENG, V17, P1, DOI 10.1007/s10664-011-9193-5
   Miller KW, 2005, IEEE TECHNOL SOC MAG, V24, P36, DOI 10.1109/MTAS.2005.1563500
   Miller T, 2019, ARTIF INTELL, V267, P1, DOI 10.1016/j.artint.2018.07.007
   Mullen KM, 2011, J STAT SOFTW, V40, P1
   Nagappan N., 2006, 28th International Conference on Software Engineering Proceedings, P452, DOI 10.1145/1134285.1134349
   Nam J, 2018, IEEE T SOFTWARE ENG, V44, P874, DOI 10.1109/TSE.2017.2720603
   Natekin A, 2013, FRONT NEUROROBOTICS, V7, DOI 10.3389/fnbot.2013.00021
   Nelson E., 1967, MANAGEMENT HDB ESTIM
   Okutan A, 2014, EMPIR SOFTW ENG, V19, P154, DOI 10.1007/s10664-012-9218-8
   Pascarella L, 2019, J SYST SOFTWARE, V150, P22, DOI 10.1016/j.jss.2018.12.001
   Pedersen T. L., 2019, LIME: Local Interpretable Model-Agnostic Explanations
   Petkovic D., 2016, 2016 IEEE FRONT ED C, DOI 10.1109/FIE.2016.7757406
   Quinlan J., 1994, The Morgan Kaufmann Series in Machine Learning, V16, P235
   QUINLAN JR, 1987, INT J MAN MACH STUD, V27, P221, DOI 10.1016/S0020-7373(87)80053-6
   R. C. Team and contributors worldwide, STATS R STATS PACK R
   Rahman F, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P432, DOI 10.1109/ICSE.2013.6606589
   Rahman F, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P491, DOI 10.1145/1985793.1985860
   Rajbahadur GK, 2017, IEEE WORK CONF MIN S, P135, DOI 10.1109/MSR.2017.4
   Ribeiro M., 2016, LIME EXPLAINING PRED
   Ribeiro M.T., 2016, ARXIV
   Ribeiro MT, 2016, KDD'16: PROCEEDINGS OF THE 22ND ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P1135, DOI 10.1145/2939672.2939778
   Rodríguez D, 2012, INFORM SCIENCES, V191, P14, DOI 10.1016/j.ins.2011.01.039
   Salmon W. C., 1984, Scientific Explanation and the Causal Structure of the World
   Shihab E, 2012, An exploration of challenges limiting pragmaticsoftware defect prediction
   Shivaji S, 2013, IEEE T SOFTWARE ENG, V39, P552, DOI 10.1109/TSE.2012.43
   Staniak M, 2018, R J, V10, P395
   Storn R, 1997, J GLOBAL OPTIM, V11, P341, DOI 10.1023/A:1008202821328
   Strobl C, 2008, BMC BIOINFORMATICS, V9, DOI 10.1186/1471-2105-9-307
   Tan M, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P99, DOI 10.1109/ICSE.2015.139
   Tantithamthavorn C., 2018, SCOTTKNOTTESD SCOTT
   Tantithamthavorn C., IEEE T SOFTWARE ENG
   Tantithamthavorn C, 2018, 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING - SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2018), P286, DOI 10.1145/3183519.3183547
   Tantithamthavorn C, 2019, IEEE T SOFTWARE ENG, V45, P683, DOI 10.1109/TSE.2018.2794977
   Tantithamthavorn C, 2017, IEEE T SOFTWARE ENG, V43, P1, DOI 10.1109/TSE.2016.2584050
   Tantithamthavorn C, 2016, PROC INT CONF SOFTW, P321, DOI 10.1145/2884781.2884857
   Tantithamthavorn C, 2016, 2016 IEEE/ACM 38TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING COMPANION (ICSE-C), P867, DOI 10.1145/2889160.2889256
   Tantithamthavorn C, 2016, IEEE T SOFTWARE ENG, V42, P1092, DOI 10.1109/TSE.2016.2553030
   Tantithamthavorn C, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P812, DOI 10.1109/ICSE.2015.93
   Thomas Zimmermann., 2009, P THE 7 JOINT M EURO, P91, DOI DOI 10.1145/1595696.1595713
   Thongtanunam P, 2016, PROC INT CONF SOFTW, P1039, DOI 10.1145/2884781.2884852
   Thongtanunam P, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P141, DOI 10.1109/SANER.2015.7081824
   Tosun A, 2009, INT SYMP EMP SOFTWAR, P478
   Van Bouwel J, 2002, J THEOR SOC BEHAV, V32, P437, DOI 10.1111/1468-5914.00197
   Wang S., IEEE T SOFTWARE ENG
   Wang TJ, 2016, AUTOMAT SOFTW ENG, V23, P569, DOI 10.1007/s10515-015-0179-1
   WILCOXON F, 1945, BIOMETRICS BULL, V1, P80, DOI 10.1093/jee/39.2.269
   Yang YB, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P157, DOI 10.1145/2950290.2950353
   Yatish S, 2019, PROC INT CONF SOFTW, P654, DOI 10.1109/ICSE.2019.00075
NR 111
TC 60
Z9 63
U1 3
U2 52
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JAN 1
PY 2022
VL 48
IS 1
BP 166
EP 185
DI 10.1109/TSE.2020.2982385
PG 20
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science; Engineering
GA YG0HJ
UT WOS:000742179000010
DA 2024-07-18
ER

PT J
AU Herbold, S
AF Herbold, Steffen
TI On the Costs and Profit of Software Defect Prediction
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Predictive models; Software; Quality assurance; Measurement;
   Mathematical model; Machine learning; Computational modeling; Defect
   prediction; costs; return on investment
AB Defect prediction can be a powerful tool to guide the use of quality assurance resources. However, while lots of research covered methods for defect prediction as well as methodological aspects of defect prediction research, the actual cost saving potential of defect prediction is still unclear. Within this article, we close this research gap and formulate a cost model for software defect prediction. We derive mathematically provable boundary conditions that must be fulfilled by defect prediction models such that there is a positive profit when the defect prediction model is used. Our cost model includes aspects like the costs for quality assurance, the costs of post-release defects, the possibility that quality assurance fails to reveal predicted defects, and the relationship between software artifacts and defects. We initialize the cost model using different assumptions, perform experiments to show trends of the behavior of costs on real projects. Our results show that the unrealistic assumption that defects only affect a single software artifact, which is a standard practice in the defect prediction literature, leads to inaccurate cost estimations. Moreover, the results indicate that thresholds for machine learning metrics are also not suited to define success criteria for software defect prediction.
C1 [Herbold, Steffen] Univ Goettingen, Inst Comput Sci, D-37073 Gottingen, Germany.
C3 University of Gottingen
RP Herbold, S (corresponding author), Univ Goettingen, Inst Comput Sci, D-37073 Gottingen, Germany.
EM herbold@cs.uni-goettingen.de
OI Herbold, Steffen/0000-0001-9765-2803
FU DFG [402774445]
FX This work is partially funded by DFG Grant 402774445. Thanks to Jens
   Grabowski for his continuous support.
CR [Anonymous], 2012, P ACM SIGSOFT 20 INT
   Arisholm E., 2006, ISESE 06 P 2006 ACMI, P8
   Canfora G, 2015, SOFTW TEST VERIF REL, V25, P426, DOI 10.1002/stvr.1570
   Canfora G, 2013, 2013 IEEE SIXTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST 2013), P252, DOI 10.1109/ICST.2013.38
   Catal C, 2009, EXPERT SYST APPL, V36, P7346, DOI 10.1016/j.eswa.2008.10.027
   Cheung S.-C., 2011, P 19 ACM SIGSOFT S 1, P15
   D'Ambros Marco, 2010, Proceedings of the 2010 7th IEEE Working Conference on Mining Software Repositories (MSR 2010), P31, DOI 10.1109/MSR.2010.5463279
   D'Ambros M, 2012, EMPIR SOFTW ENG, V17, P531, DOI 10.1007/s10664-011-9173-9
   Drummond C, 2006, MACH LEARN, V65, P95, DOI 10.1007/s10994-006-8199-5
   Etkin D. S, 2004, P 5 BIENN FRESHW SPI, P1
   Hall T, 2012, IEEE T SOFTWARE ENG, V38, P1276, DOI 10.1109/TSE.2011.103
   He ZM, 2012, AUTOMAT SOFTW ENG, V19, P167, DOI 10.1007/s10515-011-0090-3
   Hemmati H, 2015, J SYST SOFTWARE, V103, P412, DOI 10.1016/j.jss.2014.11.040
   Herbold S., 2017, SYSTEMATIC MAPPING S
   Herbold S, 2019, SHERBOLD REPLICATION, DOI [10.5281/zenodo.3537703, DOI 10.5281/ZENODO.3537703]
   Herbold S, 2018, IEEE T SOFTWARE ENG, V44, P811, DOI 10.1109/TSE.2017.2724538
   Herzig K, 2013, PROC INT SYMP SOFTW, P118, DOI 10.1109/ISSRE.2013.6698911
   Hosseini S, 2018, INFORM SOFTWARE TECH, V95, P296, DOI 10.1016/j.infsof.2017.06.004
   Hosseini S, 2019, IEEE T SOFTWARE ENG, V45, P111, DOI 10.1109/TSE.2017.2770124
   Huang Q, 2017, PROC IEEE INT CONF S, P159, DOI 10.1109/ICSME.2017.51
   Jiang Y, 2008, EMPIR SOFTW ENG, V13, P561, DOI 10.1007/s10664-008-9079-3
   Jing XY, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P496, DOI 10.1145/2786805.2786813
   Jureczko M, 2010, P 6 INT C PREDICTIVE, DOI DOI 10.1145/1868328.1868342
   Khoshgoftaar T. M., 1998, Empirical Software Engineering, V3, P275, DOI 10.1023/A:1009736205722
   Khoshgoftaar TM, 2004, EMPIR SOFTW ENG, V9, P229, DOI 10.1023/B:EMSE.0000027781.18360.9b
   Kingman J. F. C., 1992, POISSON PROCESSES, V3
   Krishna R, 2019, IEEE T SOFTWARE ENG, V45, P1081, DOI 10.1109/TSE.2018.2821670
   Mills C, 2018, PROC IEEE INT CONF S, P381, DOI 10.1109/ICSME.2018.00046
   Nakamura E, 2010, Q J ECON, V125, P961, DOI 10.1162/qjec.2010.125.3.961
   Nam J., 2017, IEEE Transactions on Software Engineering, V44, P874, DOI 10.1109/TSE.2017.2720603
   Nam J, 2015, IEEE INT CONF AUTOM, P452, DOI 10.1109/ASE.2015.56
   Ohlsson N, 1996, IEEE T SOFTWARE ENG, V22, P886, DOI 10.1109/32.553637
   Patry G, 2015, ENERGY SCI ENG, V3, P71, DOI 10.1002/ese3.47
   Pham H, 2003, EUR J OPER RES, V149, P475, DOI 10.1016/S0377-2217(02)00498-8
   Pugliatti M, 2007, EPILEPSIA, V48, P2224
   Stolfo S. J., 2000, P DARPA INF SURV C E, V2, P130, DOI 10.1109/DISCEX.2000.821515
   Tantithamthavorn C, 2018, 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING - SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2018), P286, DOI 10.1145/3183519.3183547
   Tantithamthavorn C, 2017, IEEE T SOFTWARE ENG, V43, P1, DOI 10.1109/TSE.2016.2584050
   Tantithamthavorn C, 2016, PROC INT CONF SOFTW, P321, DOI 10.1145/2884781.2884857
   Trautsch F, 2018, EMPIR SOFTW ENG, V23, P1036, DOI 10.1007/s10664-017-9537-x
   Wohlin C., 2012, Experimentation in Software Engineering
   Yang YB, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P157, DOI 10.1145/2950290.2950353
   Zhang F, 2016, PROC INT CONF SOFTW, P309, DOI 10.1145/2884781.2884839
   Zhang H., 2013, P 2013 9 JOINT M FDN, P643, DOI DOI 10.1145/2491411.2494581
   Zhang Y, 2015, P INT COMP SOFTW APP, P264, DOI 10.1109/COMPSAC.2015.58
   Zhou YM, 2018, ACM T SOFTW ENG METH, V27, DOI 10.1145/3183339
   Zimmerman T, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P91, DOI 10.1145/1595696.1595713
NR 47
TC 15
Z9 15
U1 6
U2 47
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD NOV 1
PY 2021
VL 47
IS 11
BP 2617
EP 2631
DI 10.1109/TSE.2019.2957794
PG 15
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA WW2QE
UT WOS:000717767100019
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Tosun, A
   Dieste, O
   Vegas, S
   Pfahl, D
   Rungi, K
   Juristo, N
AF Tosun, Ayse
   Dieste, Oscar
   Vegas, Sira
   Pfahl, Dietmar
   Rungi, Kerli
   Juristo, Natalia
TI Investigating the Impact of Development Task on External Quality in
   Test-Driven Development: An Industry Experiment
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Task analysis; Industries; Bibliographies; Productivity; Programming
   profession; Organizations; Test-driven development; industry experiment;
   experimental task; incremental test-last development; external quality
ID PRODUCTIVITY
AB Reviews on test-driven development (TDD) studies suggest that the conflicting results reported in the literature are due to unobserved factors, such as the tasks used in the experiments, and highlight that there are very few industry experiments conducted with professionals. The goal of this study is to investigate the impact of a new factor, the chosen task, and the development approach on external quality in an industrial experimental setting with 17 professionals. The participants are junior to senior developers in programming with Java, beginner to novice in unit testing, JUnit, and they have no prior experience in TDD. The experimental design is a 2 x 2 cross-over, i.e., we use two tasks for each of the two approaches, namely TDD and incremental test-last development (ITLD). Our results reveal that both development approach and task are significant factors with regards to the external quality achieved by the participants. More specifically, the participants produce higher quality code during ITLD in which splitting user stories into subtasks, coding, and testing activities are followed, compared to TDD. The results also indicate that the participants produce higher quality code during the implementation of Bowling Score Keeper, compared to that of Mars Rover API, although they perceived both tasks as of similar complexity. An interaction between the development approach and task could not be observed in this experiment. We conclude that variables that have not been explored so often, such as the extent to which the task is specified in terms of smaller subtasks, and developers' unit testing experience might be critical factors in TDD experiments. The real-world appliance of TDD and its implications on external quality still remain to be challenging unless these uncontrolled and unconsidered factors are further investigated by researchers in both academic and industrial settings.
C1 [Tosun, Ayse] Istanbul Tech Univ, Fac Comp & Informat Engn, TR-34467 Sariyer, Turkey.
   [Dieste, Oscar; Vegas, Sira; Juristo, Natalia] Univ Politecnica Madrid, Escuela Tecn Super Ingenieros Informat, Madrid 28040, Spain.
   [Pfahl, Dietmar] Univ Tartu, EE-50090 Tartu, Estonia.
   [Rungi, Kerli] Testlio OY, Tartu, Estonia.
C3 Istanbul Technical University; Universidad Politecnica de Madrid;
   University of Tartu
RP Tosun, A (corresponding author), Istanbul Tech Univ, Fac Comp & Informat Engn, TR-34467 Sariyer, Turkey.
EM tosunay@itu.edu.tr; odieste@fi.upm.es; svegas@fi.upm.es;
   dietmar.pfahl@ut.ee; kerli.rungi@gmail.com; natalia@fi.upm.es
RI Tosun, Ayse/B-4794-2014; Dieste, Oscar/K-6193-2014; Pfahl, Dietmar
   Alfred Paul Kurt/H-3084-2015; VEGAS, SIRA/R-6742-2018
OI Tosun, Ayse/0000-0003-1859-7872; Dieste, Oscar/0000-0002-3060-7853;
   Pfahl, Dietmar Alfred Paul Kurt/0000-0003-2400-501X; VEGAS,
   SIRA/0000-0001-8535-9386
FU Spanish Ministry of Science, Innovation, and Universities
   [PGC2018-097265-B-I00]; Estonian Centre of Excellence in ICT Research
   (EXCITE)
FX This work was supported in part by the Spanish Ministry of Science,
   Innovation, and Universities under research under Grant
   PGC2018-097265-B-I00, and by the Estonian Centre of Excellence in ICT
   Research (EXCITE).
CR Alain A., 2005, International Conference on Software Development, P104
   [Anonymous], 2015, BOWLING GAME KATA
   [Anonymous], 2011, P INT C PROD FOC SOF
   [Anonymous], 2013, BASICS SOFTWARE ENG
   [Anonymous], 2014, 8th Annual State of Agile Survey
   [Anonymous], 2003, TEST DRIVEN DEV EXAM
   [Anonymous], 2018, MARS ROVER KATA
   [Anonymous], 2002, THESIS N CAROLINA ST
   Bergersen GR, 2014, IEEE T SOFTWARE ENG, V40, P1163, DOI 10.1109/TSE.2014.2348997
   Bissi W, 2016, INFORM SOFTWARE TECH, V74, P45, DOI 10.1016/j.infsof.2016.02.004
   Canfora G., 2006, P 2006 ACMIEEE INT S, P364
   Canfora G, 2006, LECT NOTES COMPUT SC, V4034, P383
   COHEN J, 1992, PSYCHOL BULL, V112, P155, DOI 10.1037/0033-2909.112.1.155
   Dieste O, 2017, EMPIR SOFTW ENG, V22, P2457, DOI 10.1007/s10664-016-9471-3
   Dogsa T, 2011, SOFTWARE QUAL J, V19, P643, DOI 10.1007/s11219-011-9130-2
   Erdogmus H, 2005, IEEE T SOFTWARE ENG, V31, P226, DOI 10.1109/TSE.2005.37
   Field A., 2013, Sage, DOI DOI 10.1016/B978-012691360-6/50012-4
   Fucci Davide, 2013, 2013 ACM / IEEE International Symposium on Empirical Software Engineering and Measurement (ESEM), P103, DOI 10.1109/ESEM.2013.15
   Fucci D, 2017, IEEE T SOFTWARE ENG, V43, P597, DOI 10.1109/TSE.2016.2616877
   George B, 2004, INFORM SOFTWARE TECH, V46, P337, DOI 10.1016/j.infsof.2003.09.011
   George B., 2003, Proc. of the ACM SAC 2003. SAC 03, P1135, DOI [DOI 10.1145/952532.952753, 10.1145/952532.952753$, DOI 10.1145/952532.952753$]
   Geras A, 2004, 10TH INTERNATIONAL SYMPOSIUM ON SOFTWARE METRICS, PROCEEDINGS, P405, DOI 10.1109/METRIC.2004.1357925
   Gottesdiener E., 2010, BETTER SOFTW MAG, V4, P16
   I. O. for Standardization (ISO), 2017, 250102011 ISO IEC
   Janzen DS, 2008, IEEE SOFTWARE, V25, P77, DOI 10.1109/MS.2008.34
   Karac I, 2021, IEEE T SOFTWARE ENG, V47, P1315, DOI 10.1109/TSE.2019.2920377
   Kitchenham B, 1996, IEEE SOFTWARE, V13, P12, DOI 10.1109/52.476281
   Kou HB, 2010, AUTOMAT SOFTW ENG, V17, P57, DOI 10.1007/s10515-009-0058-8
   Kraemer HC, 2000, SCHIZOPHRENIA BULL, V26, P533, DOI 10.1093/oxfordjournals.schbul.a033474
   Lui KM, 2004, LECT NOTES COMPUT SC, V3092, P219
   Madeyski L, 2007, LECT NOTES COMPUT SC, V4764, P200
   Martin R., 2005, BOWLING GAME KATA
   Martin R. C., 2016, TDD DOESNT WORK
   Maximilien EM, 2003, PROC INT CONF SOFTW, P564, DOI 10.1109/ICSE.2003.1201238
   Misirli A., 2014, P 2 INT WORKSH COND, P25, DOI [10.1145/2593690.2593691, DOI 10.1145/2593690.2593691]
   Müller MM, 2007, EMPIR SOFTW ENG, V12, P593, DOI 10.1007/s10664-007-9048-2
   Munir H, 2014, INFORM SOFTWARE TECH, V56, P375, DOI 10.1016/j.infsof.2014.01.002
   Nagappan N, 2008, EMPIR SOFTW ENG, V13, P289, DOI 10.1007/s10664-008-9062-z
   Neil M., 2003, SOFTWARE QUALITY PRE, P136, DOI [10.1007/978-1-4615-0429-0_6, DOI 10.1007/978-1-4615-0429-0_6]
   Pinheiro J.C., 2000, MIXED EFFECTS MODELS, P3, DOI [10.1007/0-387-22747-41, DOI 10.1007/978-1-4419-0318-11, 10.1007/0-387-22747-4_1, DOI 10.1007/0-387-22747-4_1, DOI 10.1007/978-1-4419-0318-1_1]
   Rafique Y, 2013, IEEE T SOFTWARE ENG, V39, P835, DOI 10.1109/TSE.2012.28
   Ratner I. M., 2011, Proceedings of the 2011 Agile Conference, P240, DOI 10.1109/AGILE.2011.46
   Rodríguez P, 2012, INT SYMP EMP SOFTWAR, P139, DOI 10.1145/2372251.2372275
   Romano S, 2016, PROCEEDINGS OF THE 20TH INTERNATIONAL CONFERENCE ON EVALUATION AND ASSESSMENT IN SOFTWARE ENGINEERING 2016 (EASE '16), DOI 10.1145/2915970.2915996
   Scanniello Giuseppe, 2016, P 31 ANN ACM S APPL, P1422
   Sjoberg DIK, 2002, 2002 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P17, DOI 10.1109/ISESE.2002.1166921
   Slyngstad Odd Petter N., 2008, 2008 The Third International Conference on Software Engineering Advances (ICSEA), P214, DOI 10.1109/ICSEA.2008.8
   Tosun A, 2018, PROCEEDINGS OF THE 2018 INTERNATIONAL CONFERENCE ON SOFTWARE AND SYSTEM PROCESS (ICSSP 2018), P113, DOI 10.1145/3202710.3203153
   Tosun A, 2017, EMPIR SOFTW ENG, V22, P2763, DOI 10.1007/s10664-016-9490-0
   Turhan B, 2010, MAKING SOFTWARE WHAT
   Vegas S, 2016, IEEE T SOFTWARE ENG, V42, P120, DOI 10.1109/TSE.2015.2467378
   Williams L, 2003, ISSRE 2003: 14TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P34, DOI 10.1109/ISSRE.2003.1251029
   Wohlin C., 2012, Experimentation in Software Engineering
NR 53
TC 2
Z9 2
U1 1
U2 3
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD NOV 1
PY 2021
VL 47
IS 11
BP 2438
EP 2456
DI 10.1109/TSE.2019.2949811
PG 19
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA WW2QE
UT WOS:000717767100008
DA 2024-07-18
ER

PT J
AU Karac, I
   Turhan, B
   Juristo, N
AF Karac, Itir
   Turhan, Burak
   Juristo, Natalia
TI A Controlled Experiment with Novice Developers on the Impact of Task
   Description Granularity on Software Quality in Test-Driven Development
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Task analysis; Software quality; Productivity; Process control;
   Atmospheric measurements; Particle measurements; Test-driven
   development; programming task description; controlled experiment;
   empirical software engineering; crossover experiment; software quality;
   requirement granularity
ID EXTERNAL QUALITY; PRODUCTIVITY
AB Background: Test-Driven Development (TDD) is an iterative software development process characterized by test-code-refactor cycle. TDD recommends that developers work on small and manageable tasks at each iteration. However, the ability to break tasks into small work items effectively is a learned skill that improves with experience. In experimental studies of TDD, the granularity of task descriptions is an overlooked factor. In particular, providing a more granular task description in terms of a set of sub-tasks versus providing a coarser-grained, generic description. Objective: We aim to investigate the impact of task description granularity on the outcome of TDD, as implemented by novice developers, with respect to software quality, as measured by functional correctness and functional completeness. Method: We conducted a one-factor crossover experiment with 48 graduate students in an academic environment. Each participant applied TDD and implemented two tasks, where one of the tasks was presented using a more granular task description. Resulting artifacts were evaluated with acceptance tests to assess functional correctness and functional completeness. Linear mixed-effects models (LMM) were used for analysis. Results: Software quality improved significantly when participants applied TDD using more granular task descriptions. The effect of task description granularity is statistically significant and had a medium to large effect size. Moreover, the task was found to be a significant predictor of software quality which is an interesting result (because two tasks used in the experiment were considered to be of similar complexity). Conclusion: For novice TDD practitioners, the outcome of TDD is highly coupled with the ability to break down the task into smaller parts. For researchers, task selection and task description granularity requires more attention in the design of TDD experiments. Task description granularity should be taken into account in secondary studies. Further comparative studies are needed to investigate whether task descriptions affect other development processes similarly.
C1 [Karac, Itir] Univ Oulu, M3S Res Unit, Oulu 90014, Finland.
   [Turhan, Burak] Monash Univ, Clayton, Vic 3800, Australia.
   [Juristo, Natalia] Univ Politecn Madrid, Escuela Tecn Super Ingen Informat, Madrid 28040, Spain.
C3 University of Oulu; Monash University; Universidad Politecnica de Madrid
RP Karac, I (corresponding author), Univ Oulu, M3S Res Unit, Oulu 90014, Finland.
EM itir.karac@oulu.fi; burak.turhan@monash.edu; natalia@fi.upm.es
RI Turhan, Burak/G-7400-2011
OI Turhan, Burak/0000-0003-1511-2163
FU Academy of Finland [278354]; Spanish Ministry of Science, Innovation and
   Universities research grant [PGC2018-097265-B-I00]
FX This work was partially funded by Academy of Finland Project 278354 and
   Spanish Ministry of Science, Innovation and Universities research grant
   PGC2018-097265-B-I00.
CR [Anonymous], 2019, EXPT REPLICATION PAC, DOI [10.6084/m9. figshare.7957652, DOI 10.6084/M9.FIGSHARE.7957652]
   [Anonymous], 2014, JAVA TUTORIAL KATAS
   [Anonymous], 2010, MAKING SOFTWARE WHAT
   [Anonymous], 1998, IEEE Recommended Practice for Software Requirements Specifications, V2009, DOI DOI 10.1109/IEEESTD.1998.88286
   [Anonymous], 2013, MARS ROVER EXERCISE
   Basili VR, 1999, IEEE T SOFTWARE ENG, V25, P456, DOI 10.1109/32.799939
   Beck Kent L., 2003, Test Driven Development By Example
   Becker K, 2015, INFORM SOFTWARE TECH, V57, P494, DOI 10.1016/j.infsof.2014.06.003
   Bissi W, 2016, INFORM SOFTWARE TECH, V74, P45, DOI 10.1016/j.infsof.2016.02.004
   BORGIDA A, 1995, IEEE T SOFTWARE ENG, V21, P785, DOI 10.1109/32.469460
   Cockburn A, 2014, ELEPHANT CARPACIO
   Cockburn A, 2001, Writing effective use cases, the crystal collection for software professionals
   Dieste O, 2017, EMPIR SOFTW ENG, V22, P2457, DOI 10.1007/s10664-016-9471-3
   Erdogmus H, 2005, IEEE T SOFTWARE ENG, V31, P226, DOI 10.1109/TSE.2005.37
   Estácio B, 2016, 9TH IEEE/ACM INTERNATIONAL WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING (CHASE 2016), P44, DOI [10.1109/CHASE.2016.016, 10.1145/2897586.2897603]
   Fowler M., 2001, Software Development, V9, P28
   Fucci Davide, 2013, 2013 ACM / IEEE International Symposium on Empirical Software Engineering and Measurement (ESEM), P103, DOI 10.1109/ESEM.2013.15
   Fucci D., 2014, Proceedings of the 8th ACM/IEEE International Symposium on Empirical Software Engineering and Measurement, P10
   Fucci D, 2016, ESEM'16: PROCEEDINGS OF THE 10TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, DOI 10.1145/2961111.2962592
   Fucci D, 2017, IEEE T SOFTWARE ENG, V43, P597, DOI 10.1109/TSE.2016.2616877
   George B., 2003, Proc. of the ACM SAC 2003. SAC 03, P1135, DOI [DOI 10.1145/952532.952753, 10.1145/952532.952753$, DOI 10.1145/952532.952753$]
   Gonzalez C, 2005, J ECON PSYCHOL, V26, P1, DOI 10.1016/j.joep.2004.08.004
   Gray C. M., 2015, P INT C ENG DES, P309
   Griffith TL, 1996, MIS QUART, V20, P99, DOI 10.2307/249544
   ISO/IEC, 2011, ISO/IEC 25010:2011 Systems and software engineering-Systems and Software Quality Requirements and Evaluation (SQuaRE)-System and Software Quality models
   Jacqmin-Gadda H, 2007, COMPUT STAT DATA AN, V51, P5142, DOI 10.1016/j.csda.2006.05.021
   Jedlitschka A, 2005, 2005 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING (ISESE), PROCEEDINGS, P92, DOI 10.1109/ISESE.2005.1541818
   Karac I, 2018, IEEE SOFTWARE, V35, P81, DOI 10.1109/MS.2018.2801554
   Khan S. S., 2010, P INT C INF SYST
   Ko AJ, 2015, EMPIR SOFTW ENG, V20, P110, DOI 10.1007/s10664-013-9279-3
   Madeyski L, 2018, EMPIR SOFTW ENG, V23, P1982, DOI 10.1007/s10664-017-9574-5
   Madeyski L, 2010, TEST-DRIVEN DEVELOPMENT, P1, DOI 10.1007/978-3-642-04288-1
   Madeyski L, 2010, INFORM SOFTWARE TECH, V52, P169, DOI 10.1016/j.infsof.2009.08.007
   Martin R. C., 2002, AGILE SOFTWARE DEV P
   Mohanani R, 2021, IEEE T SOFTWARE ENG, V47, P936, DOI 10.1109/TSE.2019.2909033
   Mohanani R, 2020, IEEE T SOFTWARE ENG, V46, P1318, DOI 10.1109/TSE.2018.2877759
   Müller MM, 2007, EMPIR SOFTW ENG, V12, P593, DOI 10.1007/s10664-007-9048-2
   Munir H., 2014, Proc. 18th Int. Conf. Eval. Assess. Softw. Eng. - EASE, V14, P1
   Munir H, 2014, INFORM SOFTWARE TECH, V56, P375, DOI 10.1016/j.infsof.2014.01.002
   Nakagawa S, 2013, METHODS ECOL EVOL, V4, P133, DOI 10.1111/j.2041-210x.2012.00261.x
   Pinheiro J., 2018, Linear and nonlinear mixed effects models
   Pinheiro J., 2018, **DATA OBJECT**
   Pinheiro J. C., 2000, MIXED EFFECTS MODELS, DOI [DOI 10.1007/B98882, 10.1007/b98882]
   Rafique Y, 2013, IEEE T SOFTWARE ENG, V39, P835, DOI 10.1109/TSE.2012.28
   Raghavarao D, 2014, REPEATED MEASUREMENTS AND CROSS-OVER DESIGNS, P1, DOI 10.1002/9781118709153
   Ralph P, 2015, 2015 IEEE/ACM 5TH INTERNATIONAL WORKSHOP ON THE TWIN PEAKS OF REQUIREMENTS AND ARCHITECTURE (TWINPEAKS), P20, DOI 10.1109/TwinPeaks.2015.12
   Ralph P, 2013, REQUIR ENG, V18, P293, DOI 10.1007/s00766-012-0161-4
   Romano S, 2017, INFORM SOFTWARE TECH, V89, P64, DOI 10.1016/j.infsof.2017.03.010
   Salman I, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P666, DOI 10.1109/ICSE.2015.82
   Schwaber Ken., 2004, Agile Project Management With Scrum (Developer Best Practices)
   Shull F, 2010, IEEE SOFTWARE, V27, P16, DOI 10.1109/MS.2010.152
   Sjoberg DIK, 2005, IEEE T SOFTWARE ENG, V31, P733, DOI 10.1109/TSE.2005.97
   Tosun A, 2017, EMPIR SOFTW ENG, V22, P2763, DOI 10.1007/s10664-016-9490-0
   Vegas S, 2016, IEEE T SOFTWARE ENG, V42, P120, DOI 10.1109/TSE.2015.2467378
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
NR 55
TC 9
Z9 9
U1 1
U2 11
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUL 1
PY 2021
VL 47
IS 7
BP 1315
EP 1330
DI 10.1109/TSE.2019.2920377
PG 16
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA TJ6XV
UT WOS:000673623000001
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Al-Subaihin, AA
   Sarro, F
   Black, S
   Capra, L
   Harman, M
AF Al-Subaihin, Afnan A.
   Sarro, Federica
   Black, Sue
   Capra, Licia
   Harman, Mark
TI App Store Effects on Software Engineering Practices
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Software engineering; Software; Interviews; Data mining; Testing; Data
   collection; Business; Empirical software engineering; mobile app
   development; app store analysis
ID MOBILE APPS
AB In this paper, we study the app store as a phenomenon from the developers' perspective to investigate the extent to which app stores affect software engineering tasks. Through developer interviews and questionnaires, we uncover findings that highlight and quantify the effects of three high-level app store themes: bridging the gap between developers and users, increasing market transparency and affecting mobile release management. Our findings have implications for testing, requirements engineering and mining software repositories research fields. These findings can help guide future research in supporting mobile app developers through a deeper understanding of the app store-developer interaction.
C1 [Al-Subaihin, Afnan A.; Sarro, Federica; Black, Sue; Capra, Licia; Harman, Mark] UCL, London WC1E 6BT, England.
   [Al-Subaihin, Afnan A.] King Saud Univ, Coll Comp & Informat Sci, Riyadh 11451, Saudi Arabia.
   [Harman, Mark] Facebook Inc, London W1T 1FB, England.
C3 University of London; University College London; King Saud University;
   Facebook Inc
RP Al-Subaihin, AA (corresponding author), UCL, London WC1E 6BT, England.
EM afnan.alsubaihin.14@ucl.ac.uk; f.sarro@ucl.ac.uk; s.black@ucl.ac.uk;
   l.capra@ucl.ac.uk; mark.harman@ucl.ac.uk
OI Sarro, Federica/0000-0002-9146-442X
FU EPSRC [EP/J017515/1] Funding Source: UKRI
CR Abran A., 2001, Guide to the software engineering body of knowledge: trial version
   Adams B, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 5, P78, DOI 10.1109/SANER.2016.108
   Al-Subaihin A., 2015, P 3 INT WORKSH SOFTW, P1, DOI DOI 10.1145/2804345.2804346
   Al-Subaihin AA, 2016, ESEM'16: PROCEEDINGS OF THE 10TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, DOI 10.1145/2961111.2962600
   Armstrong M, 2006, RAND J ECON, V37, P668, DOI 10.1111/j.1756-2171.2006.tb00037.x
   Bavota G, 2015, IEEE T SOFTWARE ENG, V41, P384, DOI 10.1109/TSE.2014.2367027
   BENBASAT I, 1987, MIS QUART, V11, P369, DOI 10.2307/248684
   Bohnet I, 2005, J EUR ECON ASSOC, V3, P322
   Boyatzis R.E., 1998, TRANSFORMING QUALITA
   Braun V., 2006, QUAL RES PSYCHOL, V3, P77, DOI [DOI 10.1191/1478088706QP063OA, 10.1191/1478088706qp063oa]
   Catolino Gemma, 2017, 2017 IEEE/ACM 4th International Conference on Mobile Software Engineering and Systems (MOBILESoft). Proceedings, P194, DOI 10.1109/MOBILESoft.2017.31
   Chang T.-H., 2011, P 24 ANN ACM S USER, P245
   Chen N, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P767, DOI 10.1145/2568225.2568263
   Cruzes DS, 2011, INT SYMP EMP SOFTWAR, P275, DOI 10.1109/ESEM.2011.36
   Dan Han, 2012, 2012 19th Working Conference on Reverse Engineering (WCRE), P83, DOI 10.1109/WCRE.2012.18
   Di Sorbo A, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P499, DOI 10.1145/2950290.2950299
   Ferrucci F, 2015, PROCEEDINGS 41ST EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS SEAA 2015, P365, DOI 10.1109/SEAA.2015.23
   Finkelstein A, 2017, INFORM SOFTWARE TECH, V87, P119, DOI 10.1016/j.infsof.2017.03.002
   Francese Rita, 2017, 2017 IEEE/ACM 4th International Conference on Mobile Software Engineering and Systems (MOBILESoft). Proceedings, P133, DOI 10.1109/MOBILESoft.2017.33
   Fu B, 2013, 19TH ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING (KDD'13), P1276
   Genc-Nayebi N, 2017, J SYST SOFTWARE, V125, P207, DOI 10.1016/j.jss.2016.11.027
   Grano G, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P72, DOI 10.1109/SANER.2018.8330198
   Gravetter F. J., 2012, RES METHODS BEHAV SC
   Guerrouj L, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P321, DOI 10.1109/SANER.2015.7081842
   Guzman E, 2015, IEEE INT CONF AUTOM, P771, DOI 10.1109/ASE.2015.88
   Guzman E, 2014, INT REQUIR ENG CONF, P153, DOI 10.1109/RE.2014.6912257
   Harman M, 2016, 2016 IEEE/ACM INTERNATIONAL CONFERENCE ON MOBILE SOFTWARE ENGINEERING AND SYSTEMS (MOBILESOFT 2016), P243, DOI 10.1109/MobileSoft.2016.051
   Harman M., 2012, 2012 9th IEEE Working Conference on Mining Software Repositories (MSR 2012), P108, DOI 10.1109/MSR.2012.6224306
   Holzer A, 2011, TELEMAT INFORM, V28, P22, DOI 10.1016/j.tele.2010.05.006
   Hu HY, 2019, EMPIR SOFTW ENG, V24, P7, DOI 10.1007/s10664-018-9617-6
   Hu HY, 2018, EMPIR SOFTW ENG, V23, P3442, DOI 10.1007/s10664-018-9604-y
   Iacob C, 2013, IEEE WORK CONF MIN S, P41, DOI 10.1109/MSR.2013.6624001
   Jha N, 2018, EMPIR SOFTW ENG, V23, P3734, DOI 10.1007/s10664-018-9605-x
   Johann T, 2017, INT REQUIR ENG CONF, P21, DOI 10.1109/RE.2017.71
   Joorabchi Mona Erfani, 2013, 2013 ACM / IEEE International Symposium on Empirical Software Engineering and Measurement (ESEM), P15, DOI 10.1109/ESEM.2013.9
   Khalid H, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P610, DOI 10.1145/2635868.2635909
   Khalid H, 2016, IEEE SOFTWARE, V33, P34, DOI 10.1109/MS.2015.29
   Khalid H, 2015, IEEE SOFTWARE, V32, P70, DOI 10.1109/MS.2014.50
   Kitchenham B.A., 2002, ACM SIGSOFT Software Engineering Notes, V27, P18, DOI [DOI 10.1145/566493.566495, 10.1145/566493.566495]
   Kitchenham BA, 2008, Guide to advanced empirical software engineering, P63, DOI [DOI 10.1007/978-1-84800-044-5_3, 10.1007/ 978-1-84800-044-5_3]
   Kochhar P. S., 2015, ICST'15, P1
   Krutz D.E., 2016, P INT WORKSH APP MAR, P8, DOI [DOI 10.1145/2993259.2993260, 10.1145/2993259.2993260]
   Lee G, 2014, J MANAGE INFORM SYST, V31, P133, DOI 10.2753/MIS0742-1222310206
   Li SS, 2017, SIGIR'17: PROCEEDINGS OF THE 40TH INTERNATIONAL ACM SIGIR CONFERENCE ON RESEARCH AND DEVELOPMENT IN INFORMATION RETRIEVAL, P1137, DOI 10.1145/3077136.3080741
   Lim SL, 2015, IEEE T SOFTWARE ENG, V41, P40, DOI 10.1109/TSE.2014.2360674
   Linares-Vásquez M, 2017, PROC IEEE INT CONF S, P613, DOI 10.1109/ICSME.2017.47
   Linares-Vásquez M, 2015, PROC IEEE INT CONF S, P352, DOI 10.1109/ICSM.2015.7332486
   Linares-Vasquez Mario, 2013, P 2013 9 JOINT M FDN, P477, DOI DOI 10.1145/2491411.2491428
   Liu YZ, 2017, J SYST SOFTWARE, V133, P126, DOI 10.1016/j.jss.2017.08.024
   Lu M., 21 C EV ASS SOFTW EN
   Maalej W, 2015, INT REQUIR ENG CONF, P116, DOI 10.1109/RE.2015.7320414
   Manotas I., 2014, 2014003 U DEL
   Martens W., 2016, IEEE T SOFTWARE ENG, P1
   Martin W., 2015, RN1507 U COLL LOND
   Martin W, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P435, DOI 10.1145/2950290.2950320
   Mcilroy S, 2017, COMMUN ACM, V60, P62, DOI 10.1145/3141771
   McIlroy S, 2017, IEEE SOFTWARE, V34, P64, DOI 10.1109/MS.2015.149
   McMillan C., 2011, 2011 IEEE 27th International Conference on Software Maintenance, P343, DOI 10.1109/ICSM.2011.6080801
   Minelli R, 2013, EUR CON SFTWR MTNCE, P144, DOI 10.1109/CSMR.2013.24
   Miniukovich A, 2015, CHI 2015: PROCEEDINGS OF THE 33RD ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, P1163, DOI 10.1145/2702123.2702575
   Murphy-Hill E, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P1, DOI 10.1145/2568225.2568226
   Nayebi M., 2018, P C MIN SOFTW REP, P243
   Nayebi M, 2017, INT SYMP EMP SOFTWAR, P324, DOI 10.1109/ESEM.2017.46
   Nayebi M, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P552, DOI 10.1109/SANER.2016.116
   Noei E, 2017, EMPIR SOFTW ENG, V22, P3088, DOI 10.1007/s10664-017-9507-3
   O'Grady NP, 2002, CLIN INFECT DIS, V35, P1281, DOI 10.1086/502007
   Pagano D, 2013, S VIS LANG HUM CEN C, P125, DOI 10.1109/RE.2013.6636712
   Palomba F, 2017, PROC INT CONF SOFTW, P106, DOI 10.1109/ICSE.2017.18
   Palomba F, 2015, PROC IEEE INT CONF S, P291, DOI 10.1109/ICSM.2015.7332475
   Panichella S., 2017, P 2 ACM SIGSOFT INT, P8
   Vu PM, 2015, IEEE INT CONF AUTOM, P749, DOI 10.1109/ASE.2015.85
   Preuss T., 2012, IFPUG GUIDE IT SOFTW, P408
   Ries E, 2011, The Lean Startup
   Robson C., 2015, Real world research: A resource for users of social research methods in applied settings
   Rosen C, 2016, EMPIR SOFTW ENG, V21, P1192, DOI 10.1007/s10664-015-9379-3
   Roulston K., 2001, QUAL RES, V1, P279, DOI [DOI 10.1177/146879410100100302, 10.1177/146879410100100302]
   Ruiz IJM, 2016, IEEE SOFTWARE, V33, P86, DOI 10.1109/MS.2015.56
   Ruiz IJM, 2014, IEEE SOFTWARE, V31, P86, DOI 10.1109/MS.2014.79
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Salza P, 2018, INT C PROGRAM COMPRE, P255, DOI 10.1145/3196321.3196341
   Sarro F, 2018, PROCEEDINGS 2018 IEEE/ACM 11TH INTERNATIONAL WORKSHOP ON SEARCH-BASED SOFTWARE TESTING (SBST), P1, DOI 10.1145/3194718.3194730
   Sarro F, 2018, INT REQUIR ENG CONF, P76, DOI 10.1109/RE.2018.00018
   Sarro F, 2015, INT REQUIR ENG CONF, P76, DOI 10.1109/RE.2015.7320410
   Shah F.A., 2016, P INT WORKSH APP MAR, P15
   Shaw E, 2014, 2014 6TH INTERNATIONAL CONFERENCE ON MOBILE COMPUTING, APPLICATIONS AND SERVICES (MOBICASE), P166, DOI 10.4108/icst.mobicase.2014.257773
   Shen S., 2017, RELEASE STRATEGY OPT
   STRUTZEL E, 1968, NURS RES, V17, P364
   Syer MarkD., 2013, Proceedings of the 2013 Conference of the Center for Advanced Studies on Collaborative Research, CASCON '13, P283
   Tian Y, 2015, PROC IEEE INT CONF S, P301, DOI 10.1109/ICSM.2015.7332476
   Van Heeringen Harold, 2014, 2014 Joint Conference of the International Workshop on Software Measurement and the International Conference on Software Process and Product Measurement. (IWSM-MENSURA). Proceedings, P11, DOI 10.1109/IWSM.Mensura.2014.8
   Villarroel L, 2016, PROC INT CONF SOFTW, P14, DOI 10.1145/2884781.2884818
   Wasserman A.I., 2010, Proceedings of the FSE/SDP Workshop on Future of Software Engineering Research, P397, DOI [DOI 10.1145/1882362.1882443, 10.1145/1882362.1882443]
   Whitley B., 2012, Principles of research in behavioral science, V3rd
   Wohlin C, 2015, EMPIR SOFTW ENG, V20, P1427, DOI 10.1007/s10664-014-9319-7
   Xiangping Chen, 2019, Requirements Engineering, V24, P545, DOI 10.1007/s00766-018-0303-4
   Zhang Y, RN1410 UCL
   Zhu S, 2015, WISEC 15 P 8 ACM C S, P1
NR 97
TC 34
Z9 35
U1 1
U2 20
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD FEB 1
PY 2021
VL 47
IS 2
BP 300
EP 319
DI 10.1109/TSE.2019.2891715
PG 20
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA QG7HE
UT WOS:000617753400005
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Qu, Y
   Zheng, QH
   Chi, JL
   Jin, YX
   He, AC
   Cui, D
   Zhang, HS
   Liu, T
AF Qu, Yu
   Zheng, Qinghua
   Chi, Jianlei
   Jin, Yangxu
   He, Ancheng
   Cui, Di
   Zhang, Hengshan
   Liu, Ting
TI Using K-core Decomposition on Class Dependency Networks to Improve Bug
   Prediction Model's Practical Performance
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Computer bugs; Software; Mathematical model; Predictive models; Complex
   networks; Prediction algorithms; Software algorithms; Bug prediction;
   software defects; complex network; class dependency network;
   effort-aware bug prediction
ID COMMUNITY STRUCTURE; SOFTWARE SYSTEMS
AB In recent years, Complex Network theory and graph algorithms have been proved to be effective in predicting software bugs. On the other hand, as a widely-used algorithm in Complex Network theory, k-core decomposition has been used in software engineering domain to identify key classes. Intuitively, key classes are more likely to be buggy since they participate in more functions or have more interactions and dependencies. However, there is no existing research uses k-core decomposition to analyze software bugs. To fill this gap, we first use k-core decomposition on Class Dependency Networks to analyze software bug distribution from a new perspective. An interesting and widely existed tendency is observed: for classes in k-cores with larger k values, there is a stronger possibility for them to be buggy. Based on this observation, we then propose a simple but effective equation named as top-core which improves the order of classes in the suspicious class list produced by effort-aware bug prediction models. Based on an empirical study on 18 open-source Java systems, we show that the bug prediction models' performances are significantly improved in 85.2 percent experiments in the cross-validation scenario and in 80.95 percent experiments in the forward-release scenario, after using top-core. The models' average performances are improved by 11.5 and 12.6 percent, respectively. It is concluded that the proposed top-core equation can help the testers or code reviewers locate the real bugs more quickly and easily in software bug prediction practices.
C1 [Qu, Yu; Zheng, Qinghua; Chi, Jianlei; Jin, Yangxu; He, Ancheng; Cui, Di; Liu, Ting] Xi An Jiao Tong Univ, Key Lab Intelligent Networks & Network Secur MOEK, Sch Elect & Informat Engn, Minist Educ, Xian 710049, Peoples R China.
   [Zhang, Hengshan] Xian Univ Posts & Telecommun, Sch Comp Sci, Xian 710121, Peoples R China.
C3 Xi'an Jiaotong University; Xi'an University of Posts &
   Telecommunications
RP Liu, T (corresponding author), Xi An Jiao Tong Univ, Key Lab Intelligent Networks & Network Secur MOEK, Sch Elect & Informat Engn, Minist Educ, Xian 710049, Peoples R China.
EM quyuxjtu@xjtu.edu.cn; qhzheng@xjtu.edu.cn; chijianlei@stu.xjtu.edu.cn;
   jyx530@stu.xjtu.edu.cn; hg19941996@stu.xjtu.edu.cn;
   cuidi@stu.xjtu.edu.cn; zhanghs@xupt.edu.cn; tingliu@xjtu.edu.cn
RI Qu, Yu/AAD-9426-2020
OI Qu, Yu/0000-0002-1400-6740; Liu, Ting/0000-0002-7600-0934
FU National Key Research and Development Program of China [2016YFB0800202];
   National Natural Science Foundation of China [61602369, 61632015,
   61772408, U1766215, 61721002, 61833015]; Ministry of Education
   Innovation Research Team [IRT_17R86]; Shaanxi Province postdoctoral
   research project funding [2016BSHEDZZ108]; project of Chinese academy of
   engineering "The Online and Offline Mixed Educational Service System for
   'The Belt and Road' Training in MOOC China; Project of China Knowledge
   Centre for Engineering Science and Technology
FX This work is partially supported by the National Key Research and
   Development Program of China (2016YFB0800202), National Natural Science
   Foundation of China (61602369, 61632015, 61772408, U1766215, 61721002,
   61833015), Ministry of Education Innovation Research Team (IRT_17R86),
   Shaanxi Province postdoctoral research project funding (2016BSHEDZZ108),
   consulting research project of Chinese academy of engineering "The
   Online and Offline Mixed Educational Service System for 'The Belt and
   Road' Training in MOOC China", and Project of China Knowledge Centre for
   Engineering Science and Technology.
CR Agrawal A, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1050, DOI 10.1145/3180155.3180197
   [Anonymous], 2009, PROC ACM INT C PREDI
   [Anonymous], 2010, P 6 INT C PRED MOD S
   [Anonymous], 2006, NIPS
   Bader GD, 2003, BMC BIOINFORMATICS, V4, DOI 10.1186/1471-2105-4-2
   Barabási AL, 1999, SCIENCE, V286, P509, DOI 10.1126/science.286.5439.509
   Baxter G, 2006, ACM SIGPLAN NOTICES, V41, P397, DOI 10.1145/1167515.1167507
   Benni KE, 2018, IEEE T SOFTWARE ENG, V44, P534, DOI 10.1109/TSE.2017.2731766
   Brandes U, 2001, J MATH SOCIOL, V25, P163, DOI 10.1080/0022250X.2001.9990249
   Breiman L, 2001, MACH LEARN, V45, P5, DOI 10.1023/A:1010933404324
   Chakrabarti D, 2006, ACM COMPUT SURV, V38, pA1, DOI 10.1145/1132952.1132954
   Chawla NV, 2002, J ARTIF INTELL RES, V16, P321, DOI 10.1613/jair.953
   Chen L, 2016, SCI CHINA INFORM SCI, V59, DOI 10.1007/s11432-015-5426-3
   Concas G, 2017, INT J SOFTW ENG KNOW, V27, P1063, DOI 10.1142/S0218194017500401
   D'Ambros Marco, 2010, Proceedings of the 2010 7th IEEE Working Conference on Mining Software Repositories (MSR 2010), P31, DOI 10.1109/MSR.2010.5463279
   Di Nucci D, 2018, IEEE T SOFTWARE ENG, V44, P5, DOI 10.1109/TSE.2017.2659747
   Ferenc R, 2018, PROMISE'18: PROCEEDINGS OF THE 14TH INTERNATIONAL CONFERENCE ON PREDICTIVE MODELS AND DATA ANALYTICS IN SOFTWARE ENGINEERING, P12, DOI 10.1145/3273934.3273936
   Fu W, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P72, DOI 10.1145/3106237.3106257
   Giatsidis C, 2011, 2011 INTERNATIONAL CONFERENCE ON ADVANCES IN SOCIAL NETWORKS ANALYSIS AND MINING (ASONAM 2011), P87, DOI 10.1109/ASONAM.2011.65
   Goyal P, 2018, KNOWL-BASED SYST, V151, P78, DOI 10.1016/j.knosys.2018.03.022
   Grover A, 2016, KDD'16: PROCEEDINGS OF THE 22ND ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P855, DOI 10.1145/2939672.2939754
   Guo PJ, 2010, Proceedings of the 32nd ACM/IEEE International Conference on Software Engineering, P495
   Guo YC, 2018, PROC IEEE ACM INT C, P325, DOI 10.1145/3183440.3194992
   Hall T, 2012, IEEE T SOFTWARE ENG, V38, P1276, DOI 10.1109/TSE.2011.103
   Herbold S, 2018, IEEE T SOFTWARE ENG, V44, P811, DOI 10.1109/TSE.2017.2724538
   Herzig K, 2013, PROC INT SYMP SOFTW, P118, DOI 10.1109/ISSRE.2013.6698911
   Hosmer DW, 2013, WILEY SER PROBAB ST, P1, DOI 10.1002/9781118548387
   Jureczko M, 2010, P 6 INT C PREDICTIVE, DOI DOI 10.1145/1868328.1868342
   Kamei Y, 2010, PROC IEEE INT CONF S
   Kamei Y, 2013, IEEE T SOFTWARE ENG, V39, P757, DOI 10.1109/TSE.2012.70
   Kim S, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P481, DOI 10.1145/1985793.1985859
   Kitsak M, 2010, NAT PHYS, V6, P888, DOI [10.1038/NPHYS1746, 10.1038/nphys1746]
   Lessmann S, 2008, IEEE T SOFTWARE ENG, V34, P485, DOI 10.1109/TSE.2008.35
   Li Y., 2017, THESIS U TEXAS DALLA
   Louridas P, 2008, ACM T SOFTW ENG METH, V18, DOI 10.1145/1391984.1391986
   Loyola P, 2017, PROC INT SYMP SOFTW, P361, DOI 10.1109/ISSRE.2017.30
   Ma WWY, 2016, INFORM SOFTWARE TECH, V69, P50, DOI 10.1016/j.infsof.2015.09.001
   Mende T., 2009, P 5 INT C PREDICTOR, P1, DOI [10.1145/1540438.1540448, DOI 10.1145/1540438.1540448]
   Mende T, 2010, EUR CON SFTWR MTNCE, P107, DOI 10.1109/CSMR.2010.18
   Menzies T., 2015, The promise repository of empirical software engineering data
   Meyer P, 2014, ADV COMPLEX SYST, V17, DOI 10.1142/S0219525915500046
   Monden A, 2013, IEEE T SOFTWARE ENG, V39, P1345, DOI 10.1109/TSE.2013.21
   Nguyen T.N. D., 2010, Proceedings of the International Conference on Software Maintenance, P1, DOI DOI 10.1109/ICSM.2010.5609560
   Pan WF, 2018, FUTURE GENER COMP SY, V83, P431, DOI 10.1016/j.future.2017.09.039
   Pan WF, 2018, FUTURE GENER COMP SY, V81, P188, DOI 10.1016/j.future.2017.10.006
   Panichella A, 2016, GECCO'16: PROCEEDINGS OF THE 2016 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P1077, DOI 10.1145/2908812.2908938
   Pinzger Martin, 2008, P 16 ACM SIGSOFT INT, P2, DOI DOI 10.1145/1453101.1453105
   Premraj R, 2011, INT SYMP EMP SOFTWAR, P215, DOI 10.1109/ESEM.2011.30
   Qu Y, 2018, IEEE INT CONF AUTOM, P844, DOI 10.1145/3238147.3240469
   Qu Y, 2015, J SYST SOFTWARE, V108, P193, DOI 10.1016/j.jss.2015.06.015
   Shippey T, 2016, ESEM'16: PROCEEDINGS OF THE 10TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, DOI 10.1145/2961111.2962620
   Sora I, 2015, 2015 IEEE 10TH JUBILEE INTERNATIONAL SYMPOSIUM ON APPLIED COMPUTATIONAL INTELLIGENCE AND INFORMATICS (SACI), P495, DOI 10.1109/SACI.2015.7208254
   Storn R, 1997, J GLOBAL OPTIM, V11, P341, DOI 10.1023/A:1008202821328
   Subelj L, 2011, PHYSICA A, V390, P2968, DOI 10.1016/j.physa.2011.03.036
   Tang YM, 2015, 2015 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE SECURITY AND RELIABILITY (QRS 2015), P27, DOI 10.1109/QRS.2015.15
   Tantithamthavorn C, 2019, IEEE T SOFTWARE ENG, V45, P683, DOI 10.1109/TSE.2018.2794977
   Watts DJ, 1998, NATURE, V393, P440, DOI 10.1038/30918
   Wuchty S, 2005, PROTEOMICS, V5, P444, DOI 10.1002/pmic.200400962
   Xi Tan, 2011, 2011 18th Working Conference on Reverse Engineering, P244, DOI 10.1109/WCRE.2011.37
   Yang YB, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P157, DOI 10.1145/2950290.2950353
   Yang YB, 2015, IEEE T SOFTWARE ENG, V41, P331, DOI 10.1109/TSE.2014.2370048
   Zhang F, 2017, IEEE T SOFTWARE ENG, V43, P476, DOI 10.1109/TSE.2016.2599161
   Zhang Y, 2012, PROC INT CONF DATA, P1049, DOI 10.1109/ICDE.2012.35
   Zhao YY, 2017, AUTOMAT SOFTW ENG, V24, P393, DOI 10.1007/s10515-016-0198-6
   Zhou YM, 2018, ACM T SOFTW ENG METH, V27, DOI 10.1145/3183339
   Zimmermann T, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P531, DOI 10.1145/1368088.1368161
NR 66
TC 26
Z9 28
U1 4
U2 19
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD FEB 1
PY 2021
VL 47
IS 2
BP 348
EP 366
DI 10.1109/TSE.2019.2892959
PG 19
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA QG7HE
UT WOS:000617753400008
DA 2024-07-18
ER

PT J
AU Barcomb, A
   Kaufmann, A
   Riehle, D
   Stol, KJ
   Fitzgerald, B
AF Barcomb, Ann
   Kaufmann, Andreas
   Riehle, Dirk
   Stol, Klaas-Jan
   Fitzgerald, Brian
TI Uncovering the Periphery: A Qualitative Survey of Episodic Volunteering
   in Free/Libre and Open Source Software Communities
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Companies; Lenses; Open source software; Sustainable development; Task
   analysis; Community management; episodic volunteering; free software;
   open source software; peripheral developer
ID OPEN SOURCE PROJECTS; ONLINE COMMUNITIES; MOTIVATION; MODEL;
   PARTICIPATION; CONTRIBUTORS; DEVELOPERS; INNOVATION; MULTIPLE; IDENTITY
AB Free/Libre and Open Source Software (FLOSS) communities are composed, in part, of volunteers, many of whom contribute infrequently. However, these infrequent volunteers contribute to the sustainability of FLOSS projects, and should ideally be encouraged to continue participating, even if they cannot be persuaded to contribute regularly. Infrequent contributions are part of a trend which has been widely observed in other sectors of volunteering, where it has been termed "episodic volunteering" (EV). Previous FLOSS research has focused on the Onion model, differentiating core and peripheral developers, with the latter considered as a homogeneous group. We argue this is too simplistic, given the size of the periphery group and the myriad of valuable activities they perform beyond coding. Our exploratory qualitative survey of 13 FLOSS communities investigated what episodic volunteering looks like in a FLOSS context. EV is widespread in FLOSS communities, although not specifically managed. We suggest several recommendations for managing EV based on a framework drawn from the volunteering literature. Also, episodic volunteers make a wide range of value-added contributions other than code, and they should neither be expected nor coerced into becoming habitual volunteers.
C1 [Barcomb, Ann; Kaufmann, Andreas; Riehle, Dirk] Friedrich Alexander Univ Erlangen Nurnberg, Open Source Res Grp, D-91058 Erlangen, Germany.
   [Barcomb, Ann; Fitzgerald, Brian] Univ Limerick, Lero, Irish Software Res Ctr, Limerick V94 T9PX, Ireland.
   [Stol, Klaas-Jan] Univ Coll Cork, Lero, Irish Software Res Ctr, Cork T12 K8AF, Ireland.
C3 University of Erlangen Nuremberg; University of Limerick; University
   College Cork
RP Barcomb, A (corresponding author), Friedrich Alexander Univ Erlangen Nurnberg, Open Source Res Grp, D-91058 Erlangen, Germany.
EM ann@barcomb.org; andreas.kaufmann@fau.de; dirk@riehle.org;
   k.stol@ucc.ie; bf@lero.ie
RI Stol, Klaas-Jan/I-6269-2013; Riehle, Dirk/X-8137-2019; Fitzgerald,
   Brian/E-7790-2010
OI Stol, Klaas-Jan/0000-0002-1038-5050; Riehle, Dirk/0000-0002-8139-5600;
   Barcomb, Ann/0000-0003-2126-9511; Fitzgerald, Brian/0000-0001-9193-2863;
   Kaufmann, Andreas/0000-0003-1463-3389
FU Science Foundation Ireland [13/RC/2094, 15/SIRG/3293]; Science
   Foundation Ireland (SFI) [15/SIRG/3293] Funding Source: Science
   Foundation Ireland (SFI)
FX This work was supported, in part, by Science Foundation Ireland grants
   13/RC/2094 and 15/SIRG/3293.
CR Ågerfalk PJ, 2008, MIS QUART, V32, P385
   Amrit C, 2010, J INF TECHNOL, V25, P216, DOI 10.1057/jit.2010.7
   Andersson C, 2002, 2002 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P37, DOI 10.1109/ISESE.2002.1166923
   [Anonymous], 2001, P AM C INF SYST COMM
   [Anonymous], 2005, 1 MONDAY, DOI DOI 10.5210/FM.V10I2.1207
   [Anonymous], 1 MONDAY
   [Anonymous], 2002, P INT WORKSH PRINC S
   Bacon J., 2012, ART COMMUNITY BUILDI
   Bagozzi RP, 2006, MANAGE SCI, V52, P1099, DOI 10.1287/mnsc.1060.0545
   Berdou E., 2007, THESIS
   Bonaccorsi A., 2007, Proceedings of the First International Workshop on Emerging Trends in FLOSS Research and Development, P13, DOI DOI 10.1109/FLOSS.2007.3
   Braun V., 2006, QUAL RES PSYCHOL, V3, P77, DOI [DOI 10.1191/1478088706QP063OA, 10.1191/1478088706qp063oa]
   Bryen L. M., 2006, TECH REP
   Capiluppi A, 2007, INT FED INFO PROC, V234, P31
   Carillo K, 2017, J STRATEGIC INF SYST, V26, P322, DOI 10.1016/j.jsis.2017.03.001
   Cataldo M, 2008, CSCW: 2008 ACM CONFERENCE ON COMPUTER SUPPORTED COOPERATIVE WORK, CONFERENCE PROCEEDINGS, P579
   Chacón F, 2007, SOC BEHAV PERSONAL, V35, P627, DOI 10.2224/sbp.2007.35.5.627
   Christley S., 2007, P INT C OP SOURC SYS
   Clary EG, 1998, J PERS SOC PSYCHOL, V74, P1516, DOI 10.1037/0022-3514.74.6.1516
   Cnaan R., 2005, Vrijwillige Inzet Onderzocht, V2, P29
   Cravens J., 2006, The International Journal of Volunteer Administration, V24, P15
   Crowston K., 2006, Software Process Improvement and Practice, V11, P123, DOI 10.1002/spip.259
   Crowston K., 2006, P IEEE 39 HAW INT C, DOI DOI 10.1109/HICSS.2006.101
   Crowston K., 2003, P 24 INT C INFORM SY, P1
   Crowston K., 2003, 123 SCH INF STUD FAC
   Crowston K., 2004, P 2004 ACM WORKSH IN, P18, DOI DOI 10.1145/1029997.1030003
   Crowston K, 2007, IEEE T PROF COMMUN, V50, P185, DOI 10.1109/TPC.2007.902654
   Crowston K, 2017, J INTERNET SERV APPL, V8, DOI 10.1186/s13174-017-0061-4
   Crowston K, 2012, ACM COMPUT SURV, V44, DOI 10.1145/2089125.2089127
   Dahlander L, 2005, RES POLICY, V34, P481, DOI 10.1016/j.respol.2005.02.003
   Dahlander L, 2011, ORGAN SCI, V22, P961, DOI 10.1287/orsc.1100.0571
   Davies Julius, 2010, Proceedings of the 2010 7th IEEE Working Conference on Mining Software Repositories (MSR 2010), P86, DOI 10.1109/MSR.2010.5463288
   de Alwis B, 2009, 2009 ICSE WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING, P36, DOI 10.1109/CHASE.2009.5071408
   De Souza C., 2005, P 2005 ACM INT C SUP, P197, DOI 10.1145/1099203.1099239
   Dempsey B. J., 1999, TR199905 U N CAR SCH
   Dinh-Trong TT, 2005, IEEE T SOFTWARE ENG, V31, P481, DOI 10.1109/TSE.2005.73
   Ducheneaut N., 2005, Computer Supported Cooperative Work: The Journal of Collaborative Computing, V14, P323, DOI 10.1007/s10606-005-9000-1
   Dunn J, 2016, VOLUNTAS, V27, P425, DOI 10.1007/s11266-015-9548-4
   Fang YL, 2009, J MANAGE INFORM SYST, V25, P9, DOI 10.2753/MIS0742-1222250401
   Faraj S, 2011, ORGAN SCI, V22, P1224, DOI 10.1287/orsc.1100.0614
   Feller J., 2002, Understanding Open Source Software development
   Filippova A, 2015, PROCEEDINGS OF THE 2015 ACM INTERNATIONAL CONFERENCE ON COMPUTER-SUPPORTED COOPERATIVE WORK AND SOCIAL COMPUTING (CSCW'15), P1393, DOI 10.1145/2675133.2675254
   Filo K, 2009, J SPORT MANAGE, V23, P361, DOI 10.1123/jsm.23.3.361
   Fitzgerald B, 2006, MIS QUART, V30, P587
   Foucault M, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P829, DOI 10.1145/2786805.2786870
   Gamalielsson J, 2014, J SYST SOFTWARE, V89, P128, DOI 10.1016/j.jss.2013.11.1077
   Geldenhuys J, 2010, EUROMICRO CONF PROC, P447, DOI 10.1109/SEAA.2010.66
   Goeminne M, 2013, SCI COMPUT PROGRAM, V78, P971, DOI 10.1016/j.scico.2011.11.004
   Goetz J. P., 1984, Ethnography and qualitative design in educational research
   Grube JA, 2000, PERS SOC PSYCHOL B, V26, P1108, DOI 10.1177/01461672002611007
   GUBA EG, 1981, ECTJ-EDUC COMMUN TEC, V29, P75
   Guest G, 2006, FIELD METHOD, V18, P59, DOI 10.1177/1525822X05279903
   Guion L. A., 2011, FAMILY YOUTH COMMUNI
   Hager M.A., 2013, INT J VOLUNTEER ADM, V29, P13
   Hager M.A., 2004, Volunteer Management Practices and Retention of Volunteers
   Handy F., 2006, Voluntary Action, V7, P31
   Handy F., 2007, TECH REP
   Hannebauer C., 2017, P 13 INT S OP COLL
   HARRISON DA, 1995, J APPL PSYCHOL, V80, P371, DOI 10.1037/0021-9010.80.3.371
   Hars A, 2002, INT J ELECTRON COMM, V6, P25
   Herraiz I., 2006, Proceedings of the 2006 International Workshop on Global Software Development for the Practitioner, P27
   Hertel G, 2003, RES POLICY, V32, P1159, DOI 10.1016/S0048-7333(03)00047-7
   Hinds P., 2006, P 2006 20 ANN C COMP, P343
   Hruschka DJ., 2004, Field Methods, V16, P307, DOI [DOI 10.1177/1525822X04266540, 10.1177/1525822X04266540]
   Hustinx L., 2008, INT J VOLUNTEER ADM, V25, P50
   Hustinx L., 2003, Voluntas, V14, P167, DOI [10.1023/A:1023948027200, DOI 10.1023/A:1023948027200]
   Hyde MK, 2016, NONPROF VOLUNT SEC Q, V45, P45, DOI 10.1177/0899764014558934
   Hyde MK, 2014, BMC PUBLIC HEALTH, V14, DOI 10.1186/1471-2458-14-992
   Iriberri A, 2009, ACM COMPUT SURV, V41, DOI 10.1145/1459352.1459356
   Jacobs JA, 1998, MON LABOR REV, V121, P42
   Jansen H., 2010, FORUM QUALITATIVE SO, V11
   Jin X., 2005, P 38 ANN HAWAII INT, p198a
   Kagdi H, 2008, PROC IEEE INT CONF S, P157, DOI 10.1109/ICSM.2008.4658064
   Koch S, 2002, INFORM SYST J, V12, P27, DOI 10.1046/j.1365-2575.2002.00110.x
   Krishnamurthy R, 2016, ACM TRANS MANAG INF, V6, DOI 10.1145/2820618
   Krishnamurthy S., 2005, First Monday, DOI [10.5210/fm.v0i0.1477., DOI 10.5210/FM.V0I0.1477]
   Lakhani K. R., 2006, THESIS
   Lakhani K.R., 2005, Perspectives on free and open source software, P3, DOI DOI 10.2139/SSRN.443040
   Lee A, 2017, INT SYMP EMP SOFTWAR, P1, DOI 10.1109/ESEM.2017.7
   Lee A, 2017, PROC INT CONF SOFTW, P187, DOI 10.1109/ICSE.2017.25
   Lee GK, 2003, ORGAN SCI, V14, P633, DOI 10.1287/orsc.14.6.633.24866
   Lu YD, 2017, MIS QUART, V41, P607, DOI 10.25300/MISQ/2017/41.2.12
   Lundell B, 2006, INT FED INFO PROC, V203, P155
   Ma Y., 2014, P 29 ANN ACM S APPL, P1171
   Maass W., 2004, P WORKSH OP SOURC SO, P64
   Macduff N., 1990, VOLUNTARY ACTION LEA, P15
   Macduff N., 2005, Emerging areas of volunteering, DOI DOI 10.1177/0899764014558934
   Macduff N, 2009, J COMMUNITY PRACT, V17, P400, DOI 10.1080/10705420903300488
   Masmoudi H., 2013, PROC INT C ENG TECHN, P1
   Masmoudi H, 2009, INT FED INFO PROC, V299, P284
   MAYS N, 1995, BRIT MED J, V311, P109, DOI 10.1136/bmj.311.6997.109
   Meijs L., 2007, International Journal of Volunteer Administration, V24, P68
   Merrill Mary., 2006, INT J VOLUNTEER ADM, V24, P9
   Michlmayr M, 2015, IEEE SOFTWARE, V32, P54
   Miles M. B., 1984, Qualitative data analysis: An expanded sourcebook
   Mockus A, 2002, ACM T SOFTW ENG METH, V11, P309, DOI 10.1145/567793.567795
   Moon J. Y., 2000, 1 MONDAY, V5, P11
   MOWDAY RT, 1979, J VOCAT BEHAV, V14, P224, DOI 10.1016/0001-8791(79)90072-1
   Myers MD, 1997, MIS QUART, V21, P241, DOI 10.2307/249422
   Nafus D, 2012, NEW MEDIA SOC, V14, P669, DOI 10.1177/1461444811422887
   Neulinger K, 2016, LECT NOTES COMPUT SC, V9694, P509, DOI 10.1007/978-3-319-39696-5_31
   Nunn M., 2000, The Fletcher Forum of World Affairs, V24, P115
   Oliva Gustavo A., 2012, Collaboration and Technology. Proceedings of the 18th International Conference, CRIWG 2012, P97, DOI 10.1007/978-3-642-33284-5_8
   Omoto AM, 2005, CLAR SYMP, P83
   Omoto AM, 2002, AM BEHAV SCI, V45, P846, DOI 10.1177/0002764202045005007
   Palyart M., 2017, IEEE T SOFTW ENG
   Pham R, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P1209, DOI 10.1109/ICSE.2013.6606680
   Pinto G, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P112, DOI 10.1109/SANER.2016.68
   Riehle D, 2014, P ANN HICSS, P3286, DOI 10.1109/HICSS.2014.407
   Riehle D, 2012, INF SYST E-BUS MANAG, V10, P5, DOI 10.1007/s10257-010-0149-x
   ROZAS D, 2017, THESIS
   Rullani F, 2013, RES POLICY, V42, P941, DOI 10.1016/j.respol.2012.10.008
   Safrit R.D., 2002, Journal of Volunteer Administration, V20, P12
   Seaman CB, 1999, IEEE T SOFTWARE ENG, V25, P557, DOI 10.1109/32.799955
   SEIDLER J, 1974, AM SOCIOL REV, V39, P816, DOI 10.2307/2094155
   Setia P, 2012, INFORM SYST RES, V23, P144, DOI 10.1287/isre.1100.0311
   Shah SK, 2006, MANAGE SCI, V52, P1000, DOI 10.1287/mnsc.1060.0553
   Silva JO, 2017, PROC IEEE INT CONF S, P69, DOI 10.1109/ICSME.2017.81
   Singh V, 2008, CSCW: 2008 ACM CONFERENCE ON COMPUTER SUPPORTED COOPERATIVE WORK, CONFERENCE PROCEEDINGS, P699
   Smith DavidHorton., 2006, A Dictionary of Nonprofit Terms and Concepts
   Snyder M, 2008, SOC ISS POLICY REV, V2, P1, DOI 10.1111/j.1751-2409.2008.00009.x
   Spector PE, 2006, ORGAN RES METHODS, V9, P221, DOI 10.1177/1094428105284955
   Spencer L., 2013, QUALITATIVE RES PRAC, V2nd
   Steinmacher I., 2014, Proceedings of the 7th international workshop on cooperative and human aspects of software engineering, P72, DOI DOI 10.1145/2593702.2593704.ACM
   Steinmacher I, 2016, PROC INT CONF SOFTW, P273, DOI 10.1145/2884781.2884806
   Steinmacher I, 2014, IFIP ADV INF COMM TE, V427, P153
   Stewart KJ, 2006, MIS QUART, V30, P291
   Takhteyev Y., 2010, Investigating the geography of open source software through GitHub
   Tang FY, 2010, AGEING SOC, V30, P859, DOI 10.1017/S0144686X10000140
   van Wesel P, 2017, PROC IEEE INT CONF S, P544, DOI 10.1109/ICSME.2017.25
   Vasilescu B, 2016, PROC INT CONF SOFTW, P994, DOI 10.1145/2884781.2884875
   von Krogh G, 2003, RES POLICY, V32, P1217, DOI 10.1016/S0048-7333(03)00050-7
   von Krogh G, 2012, MIS QUART, V36, P649
   Wang J, 2012, EUR MANAG J, V30, P352, DOI 10.1016/j.emj.2012.03.001
   West J, 2006, R&D MANAGE, V36, P319, DOI 10.1111/j.1467-9310.2006.00436.x
   Wu CG, 2007, INFORM MANAGE-AMSTER, V44, P253, DOI 10.1016/j.im.2006.12.006
   Xu B, 2016, INFORM SYST J, V26, P641, DOI 10.1111/isj.12077
   Ye YW, 2003, PROC INT CONF SOFTW, P419
   Yu L., 2007, 4 INT WORKSHOP MININ, P8, DOI 10.1109/msr.2007.19
   Zhou MH, 2015, IEEE T SOFTWARE ENG, V41, P82, DOI 10.1109/TSE.2014.2349496
   Zhou MH, 2012, PROC INT CONF SOFTW, P518, DOI 10.1109/ICSE.2012.6227164
NR 141
TC 20
Z9 20
U1 1
U2 14
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD SEPT 1
PY 2020
VL 46
IS 9
BP 962
EP 980
DI 10.1109/TSE.2018.2872713
PG 19
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science; Engineering
GA NR7AS
UT WOS:000571714100001
OA hybrid, Green Submitted
DA 2024-07-18
ER

PT J
AU Falessi, D
   Roll, J
   Guo, JLC
   Cleland-Huang, J
AF Falessi, Davide
   Roll, Justin
   Guo, Jin L. C.
   Cleland-Huang, Jane
TI Leveraging Historical Associations between Requirements and Source Code
   to Identify Impacted Classes
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Measurement; Semantics; Natural language processing; Complexity theory;
   Open source software; Task analysis; Impact analysis; mining software
   repositories; traceability
ID SOFTWARE; LINKS; GENERATION; VALIDATION; MANAGEMENT; METRICS; AGILE
AB As new requirements are introduced and implemented in a software system, developers must identify the set of source code classes which need to be changed. Therefore, past effort has focused on predicting the set of classes impacted by a requirement. In this paper, we introduce and evaluate a new type of information based on the intuition that the set of requirements which are associated with historical changes to a specific class are likely to exhibit semantic similarity to new requirements which impact that class. This new Requirements to Requirements Set (R2RS) family of metrics captures the semantic similarity between a new requirement and the set of existing requirements previously associated with a class. The aim of this paper is to present and evaluate the usefulness of R2RS metrics in predicting the set of classes impacted by a requirement. We consider 18 different R2RS metrics by combining six natural language processing techniques to measure the semantic similarity among texts (e.g., VSM) and three distribution scores to compute overall similarity (e.g., average among similarity scores). We evaluate if R2RS is useful for predicting impacted classes in combination and against four other families of metrics that are based upon temporal locality of changes, direct similarity to code, complexity metrics, and code smells. Our evaluation features five classifiers and 78 releases belonging to four large open-source projects, which result in over 700,000 candidate impacted classes. Experimental results show that leveraging R2RS information increases the accuracy of predicting impacted classes practically by an average of more than 60 percent across the various classifiers and projects.
C1 [Falessi, Davide; Roll, Justin] Calif Polytech State Univ San Luis Obispo, San Luis Obispo, CA 93407 USA.
   [Guo, Jin L. C.] McGill Univ, Sch Comp Sci, Montreal, PQ H3A 0G4, Canada.
   [Cleland-Huang, Jane] Univ Notre Dame, Comp Sci & Engn, South Bend, IN 46556 USA.
C3 California State University System; California Polytechnic State
   University San Luis Obispo; McGill University; University of Notre Dame
RP Falessi, D (corresponding author), Calif Polytech State Univ San Luis Obispo, San Luis Obispo, CA 93407 USA.
EM dfalessi@calpoly.edu; jroll@calpoly.edu; jguo@us.mcgill.ca;
   JaneClelandHuang@nd.edu
RI Falessi, Davide/AAA-4587-2021
OI Falessi, Davide/0000-0002-6340-0058; Cleland-Huang,
   Jane/0000-0001-9436-5606
FU Cal Poly SURP grant "Enhancing Software Impact Analysis via Semantic
   Requirements Analysis"; Cal Poly RSCA grant "Software Change
   Predictability via Semantic Requirements Analysis"; US National Science
   Foundation [CCF-1319680]
FX Davide Falessi was partially supported by the Cal Poly SURP grant
   "Enhancing Software Impact Analysis via Semantic Requirements Analysis"
   and the Cal Poly RSCA grant "Software Change Predictability via Semantic
   Requirements Analysis". The Notre Dame researchers were partially funded
   in this project by the US National Science Foundation Grant CCF-1319680.
CR Acharya M, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P746, DOI 10.1145/1985793.1985898
   [Anonymous], 1990, Entropy and Information Theory
   [Anonymous], 2016, DATA MINING PRACTICA, DOI DOI 10.1016/C2009-0-19715-5
   [Anonymous], 2018, APACHE ISIS PROJECT
   [Anonymous], 2018, APACHE IGNITE PROJEC
   [Anonymous], 2018, APACHE ACCUMULO PROJ
   [Anonymous], 2018, APACHE TIKA PROJECT
   [Anonymous], 2013, Proceedings of the 2013 9th Joint Meeting on Foundations of Software Engineering-ESEC/FSE 2013, page
   [Anonymous], 1998, LEARNING TEXT CATEGO
   [Anonymous], 1999, Proceedings of the 37th annual meeting of the Association for Computational Linguistics on Computational Linguistics, DOI DOI 10.3115/1034678.1034693
   [Anonymous], 2008, INTRO INFORM RETRIEV, DOI DOI 10.1017/CBO9780511809071
   [Anonymous], 2007, PROMISE 07, DOI DOI 10.1109/PROMISE.2007.10
   [Anonymous], 2013, SEMANTIC MEASURES LI
   Antoniol G, 2002, IEEE T SOFTWARE ENG, V28, P970, DOI 10.1109/TSE.2002.1041053
   ANYANWU M.N., 2009, J COMPUTER SCI, V3, P230
   Arlot S, 2010, STAT SURV, V4, P40, DOI 10.1214/09-SS054
   Arvanitou EM., 2017, P 21 INT C EV ASS SO, P186, DOI [10.1145/3084226.3084239, DOI 10.1145/3084226.3084239]
   Asuncion HU, 2010, 2010 ACM IEEE 32 INT, V1, P95
   BASILI VR, 1986, IEEE T SOFTWARE ENG, V12, P733, DOI 10.1109/TSE.1986.6312975
   Bernstein A., 2007, 9 INT WORKSHOP PRINC, P11
   Bieman JM, 2003, NINTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM, PROCEEDINGS, P40, DOI 10.1109/METRIC.2003.1232454
   Bird C, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P121, DOI 10.1145/1595696.1595716
   Bohner SA, 1996, INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE, PROCEEDINGS, P42, DOI 10.1109/ICSM.1996.564987
   Bohner SA, 2003, 27TH ANNUAL NASA GODDARD/IEEE SOFTWARE ENGINEERING WORKSHOP - PROCEEDINGS, P175, DOI 10.1109/SEW.2002.1199468
   Breiman L, 1996, MACH LEARN, V24, P123, DOI 10.1007/bf00058655
   Breiman L., 2001, Mach. Learn., V45, P5
   Briand L., 1996, Empirical Software Engineering, V1, P61, DOI 10.1007/BF00125812
   Canfora G., 2005, P 11 IEEE INT SOFTWA, P29, DOI [DOI 10.1109/METRICS2005.18, DOI 10.1109/METRICS.2005.28]
   Chawla NV, 2005, DATA MINING AND KNOWLEDGE DISCOVERY HANDBOOK, P853, DOI 10.1007/0-387-25465-X_40
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   Cho ES, 2001, APSEC 2001: EIGHTH ASIA-PACIFIC SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P419
   Cleland-Huang J., 2014, FOSE P FUTURE SOFTWA, P55
   Corley C.D., 2005, P ACL WORKSHOP EMPIR, P13, DOI [10.3115/1631862.1631865, DOI 10.3115/1631862.1631865]
   D'Ambros M, 2012, EMPIR SOFTW ENG, V17, P531, DOI 10.1007/s10664-011-9173-9
   D'Ambros M, 2009, IEEE T SOFTWARE ENG, V35, P720, DOI 10.1109/TSE.2009.17
   Dasgupta T, 2013, PROC IEEE INT CONF S, P320, DOI 10.1109/ICSM.2013.43
   De Lucia A, 2004, PROC IEEE INT CONF S, P306, DOI 10.1109/ICSM.2004.1357816
   De Lucia A, 2010, SOFTWARE PRACT EXPER, V40, P1007, DOI 10.1002/spe.986
   Dekhtyar A, 2007, INT REQUIR ENG CONF, P141, DOI 10.1109/RE.2007.17
   Dit B, 2015, EMPIR SOFTW ENG, V20, P1198, DOI 10.1007/s10664-014-9339-3
   Dit B, 2013, J SOFTW-EVOL PROC, V25, P53, DOI 10.1002/smr.567
   Domingos P, 2012, COMMUN ACM, V55, P78, DOI 10.1145/2347736.2347755
   Dybå T, 2008, INFORM SOFTWARE TECH, V50, P833, DOI 10.1016/j.infsof.2008.01.006
   Eisenbarth T, 2003, IEEE T SOFTWARE ENG, V29, P210, DOI 10.1109/TSE.2003.1183929
   Eski S., 2011, 2011 IEEE Fourth International Conference on Software Testing, Verification and Validation Workshops (ICSTW), P566, DOI 10.1109/ICSTW.2011.43
   Falessi D., IEEE T SOFTW ENG, V39, P18
   Falessi D, 2017, INT SYMP EMP SOFTWAR, P151, DOI 10.1109/ESEM.2017.22
   Falessi D, 2017, EMPIR SOFTW ENG, V22, P996, DOI 10.1007/s10664-016-9460-6
   Falessi D, 2015, 2015 IEEE 7TH INTERNATIONAL WORKSHOP ON MANAGING TECHNICAL DEBT (MTD) PROCEEDINGS, P41, DOI 10.1109/MTD.2015.7332623
   Falessi D, 2011, ACM COMPUT SURV, V43, DOI 10.1145/1978802.1978812
   Fisher RA, 1922, J R STAT SOC, V85, P87, DOI 10.2307/2340521
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   GALLAGHER KB, 1991, IEEE T SOFTWARE ENG, V17, P751, DOI 10.1109/32.83912
   Gethers M., 2011, 2011 IEEE 27th International Conference on Software Maintenance, P133, DOI 10.1109/ICSM.2011.6080780
   Gil Y, 2017, EMPIR SOFTW ENG, V22, P2585, DOI 10.1007/s10664-017-9513-5
   Goknil A, 2014, INFORM SOFTWARE TECH, V56, P950, DOI 10.1016/j.infsof.2014.03.002
   Graves TL, 2000, IEEE T SOFTWARE ENG, V26, P653, DOI 10.1109/32.859533
   Guo C, 2013, IEEE INT CONF ASAP, P42
   Guo J, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P142, DOI [10.1145/2901739.2901740, 10.1109/MSR.2016.024]
   Guo L, 2004, 15TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P417
   Harris E., 2002, AMAI
   Hayes JH, 2006, IEEE T SOFTWARE ENG, V32, P4, DOI 10.1109/TSE.2006.3
   Hewitt J, 2005, IEEE INTERNATIONAL WORKSHOP ON SOFTWARE EVOLVABILITY, PROCEEDINGS, P41, DOI 10.1109/IWSE.2005.1
   HOROWITZ E, 1986, IEEE T SOFTWARE ENG, V12, P849, DOI 10.1109/TSE.1986.6312987
   Jiang SY, 2017, EMPIR SOFTW ENG, V22, P631, DOI 10.1007/s10664-016-9441-9
   Jivani A.G., 2011, Int. J. Comp. Tech. Appl, V2, P1930
   John G.H., 1994, P 11 INT C MACH LEAR, P121
   Kagdi H, 2013, EMPIR SOFTW ENG, V18, P933, DOI 10.1007/s10664-012-9233-9
   Karegowda AG, 2010, INT J INF TECHNOL KN, V2, P271, DOI DOI 10.1007/S12031-014-0367-7
   Keenan E, 2012, PROC INT CONF SOFTW, P1375, DOI 10.1109/ICSE.2012.6227244
   Khomh F, 2009, WORK CONF REVERSE EN, P75, DOI 10.1109/WCRE.2009.28
   Kim D, 2013, IEEE T SOFTWARE ENG, V39, P1597, DOI 10.1109/TSE.2013.24
   Kim S, 2007, PROC INT CONF SOFTW, P489
   Kim S, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P481, DOI 10.1145/1985793.1985859
   Kohavi R, 1997, ARTIF INTELL, V97, P273, DOI 10.1016/S0004-3702(97)00043-X
   LECESSIE S, 1992, APPL STAT-J ROY ST C, V41, P191
   Lehnert S., 2011, ILM12011200618 TU IL
   Lehnert S., 2011, PROC 12 INT WORKSHOP, P41, DOI DOI 10.1145/2024445.2024454
   Li BX, 2013, SOFTW TEST VERIF REL, V23, P613, DOI 10.1002/stvr.1475
   Lin J, 2006, RE'06: 14TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, PROCEEDINGS, P363
   Lindvall M, 1998, J SYST SOFTWARE, V43, P19, DOI 10.1016/S0164-1212(98)10019-5
   Mader Patrick, 2016, LNI, VP-252, P109
   Mirakhorli M, 2016, IEEE T SOFTWARE ENG, V42, P206, DOI 10.1109/TSE.2015.2479217
   Mitchell T. M., 1997, MACHINE LEARNING
   Moonen L, 2016, IEEE INT WORK C SO, P207, DOI 10.1109/SCAM.2016.9
   Munaiah N., 2016, EMPIR SOFTW ENG, V22, P1
   Murphy GC, 2016, 2016 IEEE/ACM 38TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING COMPANION (ICSE-C), P8, DOI 10.1145/2889160.2893462
   Nagappan M, 2013, 2013 9 JOINT M EUR S, P466, DOI [DOI 10.1145/2491411.2491415, 10.1145/2491411.2491415]
   Nagappan N., 2006, 28th International Conference on Software Engineering Proceedings, P452, DOI 10.1145/1134285.1134349
   O'Neal J. S., 2003, THESIS
   Olague HM, 2008, J SOFTW MAINT EVOL-R, V20, P171, DOI 10.1002/smr.366
   Pandanaboyana S, 2013, 2013 7TH INTERNATIONAL WORKSHOP ON TRACEABILITY IN EMERGING FORMS OF SOFTWARE ENGINEERING (TEFSE), P61, DOI 10.1109/TEFSE.2013.6620156
   Papineni K, 2002, 40TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, PROCEEDINGS OF THE CONFERENCE, P311, DOI 10.3115/1073083.1073135
   Poshyvanyk D, 2007, IEEE T SOFTWARE ENG, V33, P420, DOI [10.1109/TSE.2007.1016, 10.1109/TSE.2007.1016.]
   Poshyvanyk D, 2012, ACM T SOFTW ENG METH, V21, DOI 10.1145/2377656.2377660
   Rahimi M, 2016, PROC IEEE INT CONF S, P100, DOI 10.1109/ICSME.2016.57
   Rath M, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P834, DOI 10.1145/3180155.3180207
   Robillard MP, 2008, ACM T SOFTW ENG METH, V17, DOI 10.1145/13487689.13487691
   Rolfsnes T, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P201, DOI 10.1109/SANER.2016.101
   Rovegård P, 2008, IEEE T SOFTWARE ENG, V34, P516, DOI 10.1109/TSE.2008.32
   Rus V., 2013, P 51 ANN M ASS COMP, P163
   Rus Vasile, 2012, Proceedings of the Seventh Workshop on Building Educational Applications Using NLP, P157
   Shin Y, 2015, 2015 IEEE/ACM 8TH INTERNATIONAL SYMPOSIUM ON SOFTWARE AND SYSTEMS TRACEABILITY, P61, DOI 10.1109/SST.2015.13
   Sidney S., 1957, J NERV MENT DIS, V125, DOI DOI 10.1097/00005053-195707000-00032
   SonarSource S., TECH REP
   Spanoudakis G, 2004, J SYST SOFTWARE, V72, P105, DOI 10.1016/S0164-1212(03)00242-5
   Spinellis D, 2005, IEEE SOFTWARE, V22, P9, DOI 10.1109/MS.2005.111
   Ståhl D, 2016, 2016 IEEE/ACM 38TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING COMPANION (ICSE-C), P270, DOI 10.1145/2889160.2889252
   STEVENS SS, 1946, SCIENCE, V103, P677, DOI 10.1126/science.103.2684.677
   Sultanov H, 2011, REQUIR ENG, V16, P209, DOI 10.1007/s00766-011-0121-4
   Tsantalis N, 2005, IEEE T SOFTWARE ENG, V31, P601, DOI 10.1109/TSE.2005.83
   Walker RJ, 2006, P 2006 INT WORKSHOP, P98, DOI [10.1145/1137983.1138008, DOI 10.1145/1137983.1138008]
   Weiser M., 1981, 5th International Conference on Software Engineering, P439
   Wetzlmaier T., 2015, Improving Manual Change Impact Analysis with Tool Support: A Study in an Industrial Project, P47, DOI DOI 10.1007/978-3-319-13251-84
   Williams BJ, 2010, INFORM SOFTWARE TECH, V52, P31, DOI 10.1016/j.infsof.2009.07.002
   Witten I. H., 2005, DATA MINING PRACTICA
   Wohlin C., 2012, Experimentation in Software Engineering
   Ying ATT, 2004, IEEE T SOFTWARE ENG, V30, P574, DOI 10.1109/TSE.2004.52
   Zhou YM, 2009, IEEE T SOFTWARE ENG, V35, P607, DOI 10.1109/TSE.2009.32
   Zimmermann T, 2005, IEEE T SOFTWARE ENG, V31, P429, DOI 10.1109/TSE.2005.72
   Zimmermann T., 2008, PREDICTING BUGS HIST, P69, DOI [10.1007/978-3-540-76440-3_4, DOI 10.1007/978-3-540-76440-3_4]
NR 121
TC 8
Z9 9
U1 0
U2 8
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD APR 1
PY 2020
VL 46
IS 4
BP 420
EP 441
DI 10.1109/TSE.2018.2861735
PG 22
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA LI5MK
UT WOS:000529529700004
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Zhang, J
   Zhang, LM
   Harman, M
   Hao, D
   Jia, Y
   Zhang, L
AF Zhang, Jie
   Zhang, Lingming
   Harman, Mark
   Hao, Dan
   Jia, Yue
   Zhang, Lu
TI Predictive Mutation Testing
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE PMT; mutation testing; machine learning; binary classification
ID MACHINE; GENERATION; SOFTWARE; PERFORMANCE; SELECTION; COST
AB Test suites play a key role in ensuring software quality. A good test suite may detect more faults than a poor-quality one. Mutation testing is a powerful methodology for evaluating the fault-detection ability of test suites. In mutation testing, a large number of mutants may be generated and need to be executed against the test suite under evaluation to check how many mutants the test suite is able to detect, as well as the kind of mutants that the current test suite fails to detect. Consequently, although highly effective, mutation testing is widely recognized to be also computationally expensive, inhibiting wider uptake. To alleviate this efficiency concern, we propose Predictive Mutation Testing (PMT): the first approach to predicting mutation testing results without executing mutants. In particular, PMT constructs a classification model, based on a series of features related to mutants and tests, and uses the model to predict whether a mutant would be killed or remain alive without executing it. PMT has been evaluated on 163 real-world projects under two application scenarios (cross-version and cross-project). The experimental results demonstrate that PMT improves the efficiency of mutation testing by up to 151.4X while incurring only a small accuracy loss. It achieves above 0.80 AUC values for the majority of projects, indicating a good tradeoff between the efficiency and effectiveness of predictive mutation testing. Also, PMT is shown to perform well on different tools and tests, be robust in the presence of imbalanced data, and have high predictability (over 60 percent confidence) when predicting the execution results of the majority of mutants.
C1 [Zhang, Jie; Hao, Dan; Zhang, Lu] Peking Univ, Inst Software, EECS, Beijing 100080, Peoples R China.
   [Zhang, Lingming] Univ Texas Dallas, Dept Comp Sci, Richardson, TX 75080 USA.
   [Harman, Mark; Jia, Yue] UCL, London WC1E 6B, England.
   [Harman, Mark; Jia, Yue] Facebook, London W1T 1FB, England.
C3 Peking University; University of Texas System; University of Texas
   Dallas; University of London; University College London; Facebook Inc
RP Hao, D (corresponding author), Peking Univ, Inst Software, EECS, Beijing 100080, Peoples R China.
EM zhangfie_marina@pku.edu.cn; lingming.zhang@utdallas.edu;
   mark.harman@cs.ucl.ac.uk; haodan@pku.edu.cn; yue.jia@cs.ucl.ac.uk;
   zhanglucs@pku.edu.cn
RI Hao, Dan/A-8600-2015
OI Hao, Dan/0000-0001-8295-303X
FU National Key Research and Development Program [2016YFB1000801]; National
   Natural Science Foundation of China [61522201, 61529201]; NSF
   [CCF-1566589]; UT Dallas faculty start-up fund; Google Faculty Research
   Award; EPSRC grant DAASE Dynamic Adaptive Automated Software Engineering
   [EP/J017515/]; Direct For Computer & Info Scie & Enginr; Division of
   Computing and Communication Foundations [1566589] Funding Source:
   National Science Foundation
FX This work is mainly supported by the National Key Research and
   Development Program 2016YFB1000801, the National Natural Science
   Foundation of China under Grants No. 61522201 and 61529201. It is also
   supported in part by NSF Grant No. CCF-1566589, UT Dallas faculty
   start-up fund, Google Faculty Research Award. During the process of this
   research that took place while at UCL full time, Mark Harman and Yue Jia
   were part funded by the EPSRC grant DAASE Dynamic Adaptive Automated
   Software Engineering (EP/J017515/).
CR Adamopoulos K, 2004, LECT NOTES COMPUT SC, V3103, P1338
   Andrews JH, 2005, PROC INT CONF SOFTW, P402, DOI 10.1145/1062455.1062530
   [Anonymous], 2015, 8 IEEE INT C SOFTWAR
   [Anonymous], 1999, Advances in Kernel Methods-Support Vector Learning
   [Anonymous], 2011, P 8 EUR SOFTW ENG C, DOI DOI 10.1145/2025113.2025144
   [Anonymous], 2017, GITHUB DEV DOCUMENT
   [Anonymous], 2013, P 9 JOINT M FDN SOFT
   Barbosa EF, 2001, SOFTW TEST VERIF REL, V11, P113, DOI 10.1002/stvr.226
   Bhattacharya P, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P171, DOI 10.1145/1985793.1985817
   Breiman L., 2001, Machine Learning, V45, P5, DOI 10.1023/A:1010933404324
   Brillout A, 2010, LECT NOTES COMPUT SC, V6286, P208
   Brun Y, 2004, PROC INT CONF SOFTW, P480, DOI 10.1109/ICSE.2004.1317470
   Choi B. J., 1989, Proceedings of the Twenty-Second Annual Hawaii International Conference on System Sciences. Vol.II: Software Track (IEEE Cat. No.89TH0243-6), P275, DOI 10.1109/HICSS.1989.48002
   Coles H., 2016, P 25 INT S SOFTWARE, P449
   Cook B, 2006, ACM SIGPLAN NOTICES, V41, P415, DOI 10.1145/1133981.1134029
   Delahaye M, 2013, INT CONF QUAL SOFTW, P187, DOI 10.1109/QSIC.2013.47
   Delamaro M., 2001, XV Simposio Brasileiro de Engenharia de Software, P272
   DeMillo R. A., 1991, Proceedings of the Fifteenth Annual International Computer Software and Applications Conference (Cat. No.91CH3023-9), P351, DOI 10.1109/CMPSAC.1991.170202
   DEMILLO RA, 1978, COMPUTER, V11, P34, DOI 10.1109/C-M.1978.218136
   Fine S, 2003, DES AUT CON, P286
   Fraser G, 2015, EMPIR SOFTW ENG, V20, P783, DOI 10.1007/s10664-013-9299-z
   Gligoric M., 2013, P 2013 INT S SOFTW T, P302, DOI DOI 10.1145/2483760.2483769
   Gligoric Milos., 2013, Proceedings of the 2013 International Symposium on Software Testing and Analysis. ISSTA 2013, P224, DOI DOI 10.1145/2483760.2483773
   Gopinath R, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P72, DOI 10.1145/2568225.2568278
   Gupta N, 2000, FIFTEENTH IEEE INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P219, DOI 10.1109/ASE.2000.873666
   Gyimóthy T, 2005, IEEE T SOFTWARE ENG, V31, P897, DOI 10.1109/TSE.2005.112
   HAMLET RG, 1977, IEEE T SOFTWARE ENG, V3, P279, DOI 10.1109/TSE.1977.231145
   HANLEY JA, 1982, RADIOLOGY, V143, P29, DOI 10.1148/radiology.143.1.7063747
   Hao D, 2009, J COMPUT SCI TECH-CH, V24, P284, DOI 10.1007/s11390-009-9224-5
   Harman M., 2014, Proceedings of the 29th ACM/IEEE international conference on Automated software engineering, P397
   Henard C, 2016, PROC INT CONF SOFTW, P523, DOI 10.1145/2884781.2884791
   HOWDEN WE, 1982, IEEE T SOFTWARE ENG, V8, P371, DOI 10.1109/TSE.1982.235571
   Huang GB, 2004, IEEE IJCNN, P985
   Huang J, 2005, IEEE T KNOWL DATA EN, V17, P299, DOI 10.1109/TKDE.2005.50
   Inozemtseva L, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P435, DOI 10.1145/2568225.2568271
   Jalbert K., 2012, 2012 Proceedings of the First International Workshop on Realizing Artificial Intelligence Synergies in Software Engineering (RAISE 2012), P42, DOI 10.1109/RAISE.2012.6227969
   Jia Y, 2011, IEEE T SOFTWARE ENG, V37, P649, DOI 10.1109/TSE.2010.62
   Jia Yue, 2016, P 25 INT S SOFTWARE, P354
   Jiang Y, 2008, INT J SOFTW ENG KNOW, V18, P93, DOI 10.1142/S0218194008003556
   Just R., 2012, 2012 IEEE Fifth International Conference on Software Testing, Verification and Validation (ICST 2012), P720, DOI 10.1109/ICST.2012.162
   Just R., 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P612, DOI 10.1109/ASE.2011.6100138
   Just R., 2014, INT S SOFTWARE TESTI, P315, DOI [DOI 10.1145/2610384.2610388, 10.1145/2610384.2610388]
   Just R, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P654, DOI 10.1145/2635868.2635929
   KENT JT, 1983, BIOMETRIKA, V70, P163, DOI 10.1093/biomet/70.1.163
   KRAUSER EW, 1991, IEEE T SOFTWARE ENG, V17, P403, DOI 10.1109/32.90444
   Kurtz B, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P1088, DOI 10.1145/2950290.2983950
   Li YJ, 2010, 2010 INTERNATIONAL COLLOQUIUM ON COMPUTING, COMMUNICATION, CONTROL, AND MANAGEMENT (CCCM2010), VOL III, P1
   Liu M, 2013, SENSOR ACTUAT B-CHEM, V177, P970, DOI 10.1016/j.snb.2012.11.071
   Lou YL, 2015, 2015 IEEE 26TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING (ISSRE), P46, DOI 10.1109/ISSRE.2015.7381798
   Lu Lie., 2001, Proceedings of the ninth ACM international conference on Multimedia, P203
   Ma YS, 2005, SOFTW TEST VERIF REL, V15, P97, DOI 10.1002/stvr.308
   Ma YS, 2002, 13TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P352, DOI 10.1109/ISSRE.2002.1173287
   Madeyski L, 2010, INFORM SOFTWARE TECH, V52, P169, DOI 10.1016/j.infsof.2009.08.007
   McCabe T. J., 1976, IEEE Transactions on Software Engineering, VSE-2, P308, DOI 10.1109/TSE.1976.233837
   McCallum A., 1998, AAAI 98 WORKSH LEARN, V752, P41, DOI DOI 10.1109/TSMC.1985.6313426
   Michie D., 1994, MACHINE LEARNING NEU, V29
   Moon S, 2014, 2014 IEEE SEVENTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST), P153, DOI 10.1109/ICST.2014.28
   Mottu JM, 2006, LECT NOTES COMPUT SC, V4066, P376
   Namin AS, 2009, ISSTA 2009: INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P57
   Namin AS, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P351, DOI 10.1145/1368088.1368136
   Offutt A. J., 1992, P INT C PAR PROC
   OFFUTT AJ, 1994, IEEE T SOFTWARE ENG, V20, P337, DOI 10.1109/32.286422
   OFFUTT AJ, 1993, PROC INT CONF SOFTW, P100, DOI 10.1109/ICSE.1993.346062
   Papadakis M., 2012, 2012 IEEE Fifth International Conference on Software Testing, Verification and Validation (ICST 2012), P691, DOI 10.1109/ICST.2012.159
   Papadakis M., 2017, ADV COMPUT
   Papadakis M., 2010, P 5 WORKSH AUT SOFTW, P111, DOI [http://doi.acm.org/10.1145/1808266, DOI 10.1145/1808266.1808283]
   Papadakis M, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P936, DOI 10.1109/ICSE.2015.103
   Patil T. R., 2013, International Journal Of Computer Science And Applications, V6, P256
   Pelayo L, 2007, NAFIPS 2007 - 2007 ANNUAL MEETING OF THE NORTH AMERICAN FUZZY INFORMATION PROCESSING SOCIETY, P69, DOI 10.1109/NAFIPS.2007.383813
   Quinlan J. R., 1986, Machine Learning, V1, P81, DOI 10.1007/BF00116251
   Ray B, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P155, DOI 10.1145/2635868.2635922
   Rayadurgam S, 2001, EIGHTH ANNUAL IEEE INTERNATIONAL CONFERENCE AND WORKSHOP ON THE ENGINEERING OF COMPUTER BASED SYSTEMS, PROCEEDINGS, P83, DOI 10.1109/ECBS.2001.922409
   SAMUEL AL, 1959, IBM J RES DEV, V3, P211, DOI 10.1147/rd.441.0206
   Schuler D., 2011, Proceedings 2011 IEEE Fourth International Conference on Software Testing, Verification and Validation (ICST 2011), P90, DOI 10.1109/ICST.2011.32
   Schuler D, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P297, DOI 10.1145/1595696.1595750
   SHEATHER SJ, 1991, J ROY STAT SOC B, V53, P683
   Shi A, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P246, DOI 10.1145/2635868.2635921
   Shi A, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P237, DOI 10.1145/2786805.2786878
   Staats M, 2012, LECT NOTES COMPUT SC, V7212, P409, DOI 10.1007/978-3-642-28872-2_28
   Thierry T. C., 2017, P 39 INT C SOFTW ENG, P579
   Untch R. H., 1993, SIGSOFT Software Engineering Notes, V18, P139, DOI 10.1145/174146.154265
   VOAS JM, 1992, IEEE T SOFTWARE ENG, V18, P717, DOI 10.1109/32.153381
   Wang B, 2017, PROCEEDINGS OF THE 26TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA'17), P295, DOI 10.1145/3092703.3092714
   Webster PJ, 1998, J GEOPHYS RES-OCEANS, V103, P14451, DOI 10.1029/97JC02719
   Weng Cheng G., 2008, P 7 AUSTRALASIAN DAT, V87, P27, DOI DOI 10.1109/IJCNN.2011.6033267
   Wong W. E., 1995, SOFTWARE QUALITY PRO, P258
   Wong W. Eric, 2001, MUTATION TESTING NEW
   WONG WE, 1995, J SYST SOFTWARE, V31, P185, DOI 10.1016/0164-1212(94)00098-0
   Woodward M. R., 1988, Proceedings of the Second Workshop on Software Testing, Verification, and Analysis (Cat. No.88TH0225-3), P152, DOI 10.1109/WST.1988.5370
   Wu F, 2016, LECT NOTES COMPUT SC, V9962, P18, DOI 10.1007/978-3-319-47106-8_2
   Xuan JF, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P910, DOI 10.1145/2786805.2803206
   Yao XJ, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P919, DOI 10.1145/2568225.2568265
   Zhang J, 2015, SCI CHINA INFORM SCI, V58, DOI 10.1007/s11432-014-5241-2
   Zhang J, 2014, PROC INT SYMP SOFTW, P277, DOI 10.1109/ISSRE.2014.27
   Zhang Jie, 2016, P 25 INT S SOFTWARE, P342, DOI [10.1145/2931037, DOI 10.1145/2931037]
   Zhang JX, 2014, J INORG MATER, V29, P701, DOI 10.3724/SP.J.1077.2014.13531
   Zhang L., 2012, Proceedings of the 2012 International Symposium on Software Testing and Analysis, ISSTA 2012, P331, DOI [10.1145/2338965.2336793, DOI 10.1145/2338965.2336793]
   Zhang L., 2013, P 2013 INT S SOFTW T, P235
   Zhang LM, 2013, IEEE INT CONF AUTOM, P92, DOI 10.1109/ASE.2013.6693070
   Zhang LM, 2013, ACM SIGPLAN NOTICES, V48, P765, DOI [10.1145/2544173.2509551, 10.1145/2509136.2509551]
   Zhang YC, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P214, DOI 10.1145/2786805.2786858
   Zheng H, 2010, 2ND IEEE INTERNATIONAL CONFERENCE ON ADVANCED COMPUTER CONTROL (ICACC 2010), VOL. 2, P431, DOI 10.1109/ICACC.2010.5486640
   Zheng J, 2010, EXPERT SYST APPL, V37, P4537, DOI 10.1016/j.eswa.2009.12.056
NR 103
TC 70
Z9 78
U1 1
U2 12
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD SEP
PY 2019
VL 45
IS 9
BP 898
EP 918
DI 10.1109/TSE.2018.2809496
PG 21
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA IZ6LH
UT WOS:000487192800004
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Song, W
   Ma, XX
   Jacobsen, HA
AF Song, Wei
   Ma, Xiaoxing
   Jacobsen, Hans-Arno
TI Instance Migration Validity for Dynamic Evolution of Data-Aware
   Processes
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Data-aware process; dynamic evolution; instance migration; migration
   validity; trace slicing
ID SERVICE COMPOSITION; WORKFLOW; CORRECTNESS; INTEGRATION; SUPPORT
AB Likely more than many other software artifacts, business processes constantly evolve to adapt to ever changing application requirements. To enable dynamic process evolution, where changes are applied to in-flight processes, running process instances have to be migrated. On the one hand, as many instances as possible should be migrated to the changed process. On the other hand, the validity to migrate an instance should be guaranteed to avoid introducing dynamic change bugs after migration. As our theoretical results show, when the state of variables is taken into account, migration validity of data-aware process instances is undecidable. Based on the trace of an instance, existing approaches leverage trace replaying to check migration validity. However, they err on the side of caution, not identifying many instances as potentially safe to migrate. We present a more relaxed migration validity checking approach based on the dependence graph of a trace. We evaluate effectiveness and efficiency of our approach experimentally showing that it allows for more instances to safely migrate than for existing approaches and that it scales in the number of instances checked.
C1 [Song, Wei] Nanjing Univ Sci & Technol, Sch Comp Sci & Engn, Nanjing 210094, Jiangsu, Peoples R China.
   [Ma, Xiaoxing] Nanjing Univ, State Key Lab Novel Software Technol, Nanjing 210023, Jiangsu, Peoples R China.
   [Jacobsen, Hans-Arno] Tech Univ Munich, Middleware Syst Res Grp, D-85748 Garching, Germany.
   [Jacobsen, Hans-Arno] Univ Toronto, Toronto, ON M5S, Canada.
C3 Nanjing University of Science & Technology; Nanjing University;
   Technical University of Munich; University of Toronto
RP Song, W (corresponding author), Nanjing Univ Sci & Technol, Sch Comp Sci & Engn, Nanjing 210094, Jiangsu, Peoples R China.
EM wsong@njust.edu.cn; xxm@nju.edu.cn; arno.jacobsen@msrg.org
RI Ma, Xiaoxing/K-4290-2012; Ma, Xiaoxing/X-6505-2018
OI Jacobsen, Arno/0000-0003-0813-0101; Song, Wei/0000-0002-4324-3382; Ma,
   Xiaoxing/0000-0001-7970-1384
FU National Key R&D Program of China [2017YFB1001801]; National Natural
   Science Foundation of China [61761136003]; Natural Science Foundation of
   Jiangsu Province [BK20171427]; Fundamental Research Funds for the
   Central Universities [30917011322]; Deutsche Forschungsgemeinschaft
   (DFG) [JA 2441/2-1]; Alexander von Humboldt Foundation [5090551]
FX The authors are grateful to anonymous reviewers for their insightful and
   constructive comments. This work was supported in part by the National
   Key R&D Program of China under Grant No. 2017YFB1001801, the National
   Natural Science Foundation of China under Grant No. 61761136003, the
   Natural Science Foundation of Jiangsu Province under Grant No.
   BK20171427, the Fundamental Research Funds for the Central Universities
   under Grant No. 30917011322, the Deutsche Forschungsgemeinschaft (DFG)
   project under Grant No. JA 2441/2-1, and the Alexander von Humboldt
   Foundation under Grant No. 5090551. The work was completed in parts at
   the University of Toronto, Canada and at the Technische Universitat
   Munchen, Germany.
CR Andrews JH, 2005, PROC INT CONF SOFTW, P402, DOI 10.1145/1062455.1062530
   Andrikopoulos V, 2012, IEEE T SOFTWARE ENG, V38, P609, DOI 10.1109/TSE.2011.22
   [Anonymous], 2007, WEB SERV BUS PROC EX
   Ardagna D, 2007, IEEE T SOFTWARE ENG, V33, P369, DOI 10.1109/TSE.2007.1011.
   Banerjee A, 2012, P IEEE, V100, P283, DOI 10.1109/JPROC.2011.2165689
   Baresi L, 2017, IEEE T SOFTWARE ENG, V43, P340, DOI 10.1109/TSE.2016.2592913
   Baresi L, 2011, IEEE T SOFTWARE ENG, V37, P247, DOI 10.1109/TSE.2010.37
   Calvanese D., 2013, P 32 ACM SIGMOD SIGA, P1, DOI DOI 10.1145/2463664.2467796
   Cámara J, 2016, ACM T AUTON ADAP SYS, V10, DOI 10.1145/2774222
   Casati F, 1998, DATA KNOWL ENG, V24, P211, DOI 10.1016/S0169-023X(97)00033-5
   Casati F, 2000, LECT NOTES COMPUT SC, V1789, P13
   Cattie J, 2012, J VIRAL HEPATITIS, V19, P1
   Chen JJ, 2011, ACM T SOFTW ENG METH, V20, DOI 10.1145/2000791.2000793
   Dai PD, 2014, SPECTROSC SPECT ANAL, V34, P1, DOI 10.3964/j.issn.1000-0593(2014)01-0001-05
   Deng SG, 2016, IEEE T SERV COMPUT, V9, P291, DOI 10.1109/TSC.2014.2361138
   Fdhila W, 2015, INFORM SYST, V49, P1, DOI 10.1016/j.is.2014.10.004
   FERRANTE J, 1987, ACM T PROGR LANG SYS, V9, P319, DOI 10.1145/24039.24041
   Gupta D, 1996, IEEE T SOFTWARE ENG, V22, P120, DOI 10.1109/32.485222
   KRAMER J, 1990, IEEE T SOFTWARE ENG, V16, P1293, DOI 10.1109/32.60317
   Liske N, 2009, LECT NOTES COMPUT SC, V5900, P607, DOI 10.1007/978-3-642-10383-4_44
   Liu XZ, 2015, IEEE T SERV COMPUT, V8, P2, DOI 10.1109/TSC.2014.2304729
   Lü J, 2008, SCI CHINA SER F, V51, P683, DOI 10.1007/s11432-008-0057-6
   Ly LT, 2008, DATA KNOWL ENG, V64, P3, DOI 10.1016/j.datak.2007.06.007
   Mateescu R, 2012, IEEE T SOFTWARE ENG, V38, P755, DOI 10.1109/TSE.2011.62
   Mei H, 2012, COMPUTER, V45, P26, DOI 10.1109/MC.2012.189
   Mei LJ, 2015, IEEE T SERV COMPUT, V8, P740, DOI 10.1109/TSC.2014.2322621
   Mei LJ, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P371, DOI 10.1145/1368088.1368139
   Michelberger B, 2012, IEEE INT ENTERP DIST, P21, DOI 10.1109/EDOC.2012.13
   MURATA T, 1989, P IEEE, V77, P541, DOI 10.1109/5.24143
   Nanda MG, 2004, ACM SIGPLAN NOTICES, V39, P170, DOI 10.1145/1035292.1028991
   Ni YT, 2013, IEEE T SERV COMPUT, V6, P7, DOI 10.1109/TSC.2011.22
   Peltz C, 2003, COMPUTER, V36, P46, DOI 10.1109/MC.2003.1236471
   Pittke F, 2015, IEEE T SOFTWARE ENG, V41, P526, DOI 10.1109/TSE.2015.2396895
   Reichert M, 2009, LECT NOTES COMPUT SC, V5460, P115
   Rinderle S, 2004, DATA KNOWL ENG, V50, P9, DOI 10.1016/j.datak.2004.01.002
   Rinderle S, 2004, DISTRIB PARALLEL DAT, V16, P91, DOI 10.1023/B:DAPD.0000026270.78463.77
   Rinderle S, 2006, LECT NOTES COMPUT SC, V4275, P273
   Rinderle-Ma S., 2010, Proceedings 2010 IEEE 12th International Conference on Commerce and Enterprise Computing (CEC 2010), P56, DOI 10.1109/CEC.2010.18
   Rinderle-Ma S, 2008, LECT NOTES COMPUT SC, V5231, P232, DOI 10.1007/978-3-540-87877-3_18
   Ryu SH, 2008, ACM T WEB, V2, DOI 10.1145/1346237.1346241
   Sadoghi M, 2015, IEEE T KNOWL DATA EN, V27, P2824, DOI 10.1109/TKDE.2015.2421331
   Sidorova N, 2010, LECT NOTES COMPUT SC, V6051, P530, DOI 10.1007/978-3-642-13094-6_40
   Sipser M., 2006, INTRO THEORY COMPUTA
   Song J, 2011, COMPUT RISK MANAG, P129, DOI 10.1007/978-3-642-18387-4_15
   Song W, 2017, IEEE T PARALL DISTR, V28, P2979, DOI 10.1109/TPDS.2017.2696942
   Song W, 2018, IEEE T SERV COMPUT, V11, P215, DOI 10.1109/TSC.2016.2536025
   Song W, 2016, IEEE T SERV COMPUT, V9, P714, DOI 10.1109/TSC.2015.2426181
   Song W, 2013, IEEE INT C COMPUT, P1013, DOI 10.1109/CSE.2013.148
   Song W, 2012, 2012 IEEE ASIA-PACIFIC SERVICES COMPUTING CONFERENCE (APSCC), P225, DOI 10.1109/APSCC.2012.40
   Spanoudakis G, 2010, IEEE T SOFTWARE ENG, V36, P371, DOI 10.1109/TSE.2009.88
   Sun P, 2009, INFORM SOFTWARE TECH, V51, P284, DOI 10.1016/j.infsof.2008.02.004
   van der Aalst W, 2013, IEEE T SERV COMPUT, V6, P525, DOI 10.1109/TSC.2012.25
   Van der Aalst WMP, 2003, DISTRIB PARALLEL DAT, V14, P5, DOI 10.1023/A:1022883727209
   van der Aalst WMP, 2002, THEOR COMPUT SCI, V270, P125, DOI 10.1016/S0304-3975(00)00321-2
   van der Aalst WMP, 2001, INFORM SYST FRONT, V3, P297, DOI 10.1023/A:1011409408711
   Verbeek HMW, 2011, LECT NOTES BUS INF P, V72, P60
   Weidlich M, 2011, IEEE T SOFTWARE ENG, V37, P410, DOI 10.1109/TSE.2010.96
   Wombacher A, 2009, 2009 IEEE INTERNATIONAL CONFERENCE ON SERVICES COMPUTING, P1, DOI 10.1109/SCC.2009.11
   Wu GQ, 2014, 2014 IEEE 21ST INTERNATIONAL CONFERENCE ON WEB SERVICES (ICWS 2014), P401, DOI 10.1109/ICWS.2014.64
   Ye CY, 2009, IEEE T SOFTWARE ENG, V35, P2, DOI 10.1109/TSE.2008.86
   Zeng J, 2009, 2009 IEEE INTERNATIONAL CONFERENCE ON WEB SERVICES, VOLS 1 AND 2, P679, DOI 10.1109/ICWS.2009.96
   Zisman A, 2013, IEEE T SOFTWARE ENG, V39, P954, DOI 10.1109/TSE.2012.84
NR 62
TC 7
Z9 8
U1 0
U2 9
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD AUG
PY 2019
VL 45
IS 8
BP 782
EP 801
DI 10.1109/TSE.2018.2802925
PG 20
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA IT1QZ
UT WOS:000482622600003
DA 2024-07-18
ER

PT J
AU Damevski, K
   Chen, H
   Shepherd, DC
   Kraft, NA
   Pollock, L
AF Damevski, Kostadin
   Chen, Hui
   Shepherd, David C.
   Kraft, Nicholas A.
   Pollock, Lori
TI Predicting Future Developer Behavior in the IDE Using Topic Models
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Command recommendation systems; IDE interaction data
AB While early software command recommender systems drew negative user reaction, recent studies show that users of unusually complex applications will accept and utilize command recommendations. Given this new interest, more than a decade after first attempts, both the recommendation generation (backend) and the user experience (frontend) should be revisited. In this work, we focus on recommendation generation. One shortcoming of existing command recommenders is that algorithms focus primarily on mirroring the short-term past,-i.e., assuming that a developer who is currently debugging will continue to debug endlessly. We propose an approach to improve on the state of the art by modeling future task context to make better recommendations to developers. That is, the approach can predict that a developer who is currently debugging may continue to debug OR may edit their program. To predict future development commands, we applied Temporal Latent Dirichlet Allocation, a topic model used primarily for natural language, to software development interaction data (i.e., command streams). We evaluated this approach on two large interaction datasets for two different IDEs, Microsoft Visual Studio and ABB Robot Studio. Our evaluation shows that this is a promising approach for both predicting future IDE commands and producing empirically-interpretable observations.
C1 [Damevski, Kostadin] Virginia Commonwealth Univ, Dept Comp Sci, Richmond, VA 23284 USA.
   [Chen, Hui] CUNY Brooklyn Coll, Dept Comp & Informat Sci, Brooklyn, NY 11210 USA.
   [Shepherd, David C.; Kraft, Nicholas A.] ABB Corp Res, Raleigh, NC 27606 USA.
   [Pollock, Lori] Univ Delaware, Dept Comp & Informat Sci, Newark, DE USA.
C3 Virginia Commonwealth University; City University of New York (CUNY)
   System; Brooklyn College (CUNY); ABB; University of Delaware
RP Damevski, K (corresponding author), Virginia Commonwealth Univ, Dept Comp Sci, Richmond, VA 23284 USA.
EM damevski@acm.org; huichen@ieee.org; david.shepherd@us.abb.com;
   nicholas.a.kraft@us.abb.com; pollock@udel.edu
RI Damevski, Kostadin/F-4476-2014; Chen, Hui/C-9645-2013
OI Damevski, Kostadin/0000-0001-7799-2026; Chen, Hui/0000-0002-9840-4876;
   Shepherd, David C./0000-0003-2017-7842
CR Amann S, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P124, DOI 10.1109/SANER.2016.39
   Blei DM, 2003, J MACH LEARN RES, V3, P993, DOI 10.1162/jmlr.2003.3.4-5.993
   Chis Andrei, 2015, P 6 WORKSHOP EVALUAT, DOI [10.1145/2846680.2846684, DOI 10.1145/2846680.2846684]
   Damevski K, 2017, IEEE T SOFTWARE ENG, V43, P359, DOI 10.1109/TSE.2016.2592905
   Damevski K, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P126, DOI [10.1109/MSR.2016.022, 10.1145/2901739.2901741]
   Damevski K, 2016, EMPIR SOFTW ENG, V21, P724, DOI 10.1007/s10664-015-9373-9
   Erosheva E, 2004, P NATL ACAD SCI USA, V101, P5220, DOI 10.1073/pnas.0307760101
   Hindle A, 2012, PROC INT CONF SOFTW, P837, DOI 10.1109/ICSE.2012.6227135
   Iqbal ST, 2007, CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, VOLS 1 AND 2, P697
   Jiang ZM, 2008, INT CONF QUAL SOFTW, P181, DOI 10.1109/QSIC.2008.50
   Johnson B, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P878, DOI 10.1145/2786805.2803197
   Kersten M, 2005, P 2005 INT C ASP OR, P159, DOI DOI 10.1145/1052898.1052912
   Khodabandelou G., 2014, P 11 WORKING C MININ, DOI DOI 10.1145/2597073.2597101
   Kolling M., 2003, Computer Science Education, V13, P249
   Li W, 2014, AAAI CONF ARTIF INTE, P2922
   Maalej W., 2014, RECOMMENDATION SYSTE, P173
   Matejka J, 2009, UIST 2009: PROCEEDINGS OF THE 22ND ANNUAL ACM SYMPOSIUM ON USER INTERFACE SOFTWARE AND TECHNOLOGY, P193
   Minelli R., 2013, P 6TH SEMINAR SERIES
   Minelli R, 2015, INT C PROGRAM COMPRE, P25, DOI 10.1109/ICPC.2015.12
   Murphy GC, 2006, IEEE SOFTWARE, V23, P76, DOI 10.1109/MS.2006.105
   Murphy-Hill E., 2012, P ACM SIGSOFT 20 INT
   Murphy-Hill E, 2012, IEEE T SOFTWARE ENG, V38, P5, DOI 10.1109/TSE.2011.41
   Negara S, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P803, DOI 10.1145/2568225.2568317
   Pritchard JK, 2000, GENETICS, V155, P945
   Reeves B., 1996, MEDIA EQUATION PEOPL
   Soh Z, 2015, INT SYMP EMP SOFTWAR, P1, DOI 10.1109/ESEM.2015.7321209
   Srivastava J., 2000, SIGKDD EXPLORATIONS, V1, P12, DOI DOI 10.1145/846183.846188
   Vakilian M, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P1106, DOI 10.1145/2568225.2568282
   van der Aalst WMP, 2011, PROCESS MINING: DISCOVERY, CONFORMANCE AND ENHANCEMENT OF BUSINESS PROCESSES, P1, DOI 10.1007/978-3-642-19345-3
   Wallach Hanna M., 2009, Advances in neural information processing systems, P1973, DOI DOI 10.1007/S10708-008-9161-9
   Wang Y, 2012, TM LDA EFFICIENT ONL, P123, DOI DOI 10.1145/2339530.2339552
   Ying ATT, 2011, CONF PROC INT SYMP C, P31, DOI 10.1109/ICPC.2011.35
   Yoon Y., 2011, Proceedings of the 3rd ACM SIGPLAN workshop on Evaluation and usability of programming languages and tools, P25
NR 33
TC 13
Z9 13
U1 0
U2 8
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD NOV
PY 2018
VL 44
IS 11
BP 1100
EP 1111
DI 10.1109/TSE.2017.2748134
PG 12
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA HA1IB
UT WOS:000449964600005
DA 2024-07-18
ER

PT J
AU Zhang, F
   Niu, H
   Keivanloo, I
   Zou, Y
AF Zhang, Feng
   Niu, Haoran
   Keivanloo, Iman
   Zou, Ying
TI Expanding Queries for Code Search Using Semantically Related API
   Class-names
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Query expansion; code search; neural network language model; API
   class-name
ID ENGINE
AB When encountering unfamiliar programming tasks (e.g., connecting to a database), there is a need to seek potential working code examples. Instead of using code search engines, software developers usually post related programming questions on online Q&A forums (e.g., Stack Overflow). One possible reason is that existing code search engines would return effective code examples only if a query contains identifiers (e.g., class or method names). In other words, existing code search engines do not handle natural-language queries well (e.g., a description of a programming task). However, developers may not know the appropriate identifiers at the time of the search. As the demand of searching code examples is increasing, it is of significant interest to enhance code search engines. We conjecture that expanding natural-language queries with their semantically related identifiers has a great potential to enhance code search engines. In this paper, we propose an automated approach to find identifiers (in particular API class-names) that are semantically related to a given natural-language query. We evaluate the effectiveness of our approach using 74 queries on a corpus of 23,677,216 code snippets that are extracted from 24,666 open source Java projects. The results show that our approach can effectively recommend semantically related API class-names to expand the original natural-language queries. For instance, our approach successfully retrieves relevant code examples in the top 10 retrieved results for 76 percent of 74 queries, while it is 36 percent when using the original natural-language query; and the median rank of the first relevant code example is increased from 22 to 7.
C1 [Zhang, Feng] Queens Univ, Sch Comp, Kingston, ON K7L 3N6, Canada.
   [Niu, Haoran; Keivanloo, Iman; Zou, Ying] Queens Univ, Dept Elect & Comp Engn, Kingston, ON K7L 3N6, Canada.
C3 Queens University - Canada; Queens University - Canada
RP Niu, H (corresponding author), Queens Univ, Dept Elect & Comp Engn, Kingston, ON K7L 3N6, Canada.
EM feng@cs.queensu.ca; 13hn@queensu.ca; iman.keivanloo@ieee.org;
   ying.zou@queensu.ca
RI Zou, Ying/KLC-9380-2024; Zhang, Feng/AAQ-3506-2021
OI Zhang, Feng/0000-0001-9805-395X
CR [Anonymous], 2000, HDB PARAMETRIC NONPA
   [Anonymous], 1967, Principles of statistics
   [Anonymous], 2007, P 22 IEEE ACM INT C
   [Anonymous], 2012, Sample size calculator
   Bajracharya S.K., 2010, P 18 ACM SIGSOFT INT, P157, DOI 10.1145/1882291.1882316
   Bajracharya SK, 2012, EMPIR SOFTW ENG, V17, P424, DOI 10.1007/s10664-010-9144-6
   Carpineto C, 2012, ACM COMPUT SURV, V44, DOI 10.1145/2071389.2071390
   Chatterjee S, 2009, LECT NOTES COMPUT SC, V5503, P385
   Cox R., 2012, REGULAR EXPRESSION M
   DICE LR, 1945, ECOLOGY, V26, P297, DOI 10.2307/1932409
   Gay G., 2009, International Conference on Software Mainte- nance, P997
   Ge X, 2014, S VIS LANG HUM CEN C, P69, DOI 10.1109/VLHCC.2014.6883025
   Gottipati S., 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P323, DOI 10.1109/ASE.2011.6100069
   Greenwood P. E., 1996, A guide to chi-squared testing, V280
   Haiduc S, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P842, DOI 10.1109/ICSE.2013.6606630
   Hayes JH, 2006, IEEE T SOFTWARE ENG, V32, P4, DOI 10.1109/TSE.2006.3
   Holmes R, 2005, PROC INT CONF SOFTW, P117
   Jinqiu Yang, 2012, 2012 9th IEEE Working Conference on Mining Software Repositories (MSR 2012), P161, DOI 10.1109/MSR.2012.6224276
   Joachims T, 2002, P 8 ACM SIGKDD INT C, P133, DOI [DOI 10.1145/775047.775067, 10.1145/775047.775067]
   Joachims T, 2007, ACM T INFORM SYST, V25, DOI 10.1145/1229179.1229181
   Keivanloo I, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P664, DOI 10.1145/2568225.2568292
   Kuhn A, 2007, INFORM SOFTWARE TECH, V49, P230, DOI 10.1016/j.infsof.2006.10.017
   Lu ML, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P545, DOI 10.1109/SANER.2015.7081874
   Manning Christopher D., 2008, INTRO INFORM RETRIEV
   Marcus A, 2004, 11TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P214, DOI 10.1109/WCRE.2004.10
   Mcmillan C, 2013, ACM T SOFTW ENG METH, V22, DOI 10.1145/2522920.2522930
   McMillan C, 2012, IEEE T SOFTWARE ENG, V38, P1069, DOI 10.1109/TSE.2011.84
   Mikolov T., 2013, INT C LEARNING REPRE, P1
   Mishne A, 2012, ACM SIGPLAN NOTICES, V47, P997, DOI 10.1145/2398857.2384689
   Newcomb Doug, 2012, WIRED
   Rocchio J.J., 1971, Relevance feedback in information retrieval, P313
   SALTON G, 1975, COMMUN ACM, V18, P613, DOI 10.1145/361219.361220
   Shaowei Wang, 2011, 2011 18th Working Conference on Reverse Engineering, P119, DOI 10.1109/WCRE.2011.69
   Sisman B, 2013, IEEE WORK CONF MIN S, P309, DOI 10.1109/MSR.2013.6624044
   Sridhara G, 2008, INT C PROGRAM COMPRE, P123, DOI 10.1109/ICPC.2008.18
   Stolee KT, 2014, ACM T SOFTW ENG METH, V23, DOI 10.1145/2581377
   Svajlenko J, 2014, PROC IEEE INT CONF S, P476, DOI 10.1109/ICSME.2014.77
   Tian Y, 2014, 2014 SOFTWARE EVOLUTION WEEK - IEEE CONFERENCE ON SOFTWARE MAINTENANCE, REENGINEERING, AND REVERSE ENGINEERING (CSMR-WCRE), P44, DOI 10.1109/CSMR-WCRE.2014.6747213
   TIOBE, 2016, TIOBE IND
   Urbano J, 2013, SIGIR'13: THE PROCEEDINGS OF THE 36TH INTERNATIONAL ACM SIGIR CONFERENCE ON RESEARCH & DEVELOPMENT IN INFORMATION RETRIEVAL, P925
   Voorhees E.M., 1999, Proceedings of TREC
   Wang S., 2014, ACM/IEEE International Conference on Automated Software Engineering, ASE '14, Vasteras, Sweden - September 15 - 19, 2014, P677
   Wang X., 2010, Proceedings of the IEEE/ACM International Conference on Automated Software Engineering, ASE '10, P457
   Yin RK, 2002, Applied Social Research Methods Series, V34
   Zaragoza H., 2004, P 13 TEXT RETRIEVEL, P1
   Zobel J., 1998, Proceedings of the 21st Annual International ACM SIGIR Conference on Research and Development in Information Retrieval, P307, DOI 10.1145/290941.291014
NR 46
TC 29
Z9 29
U1 0
U2 5
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD NOV
PY 2018
VL 44
IS 11
BP 1070
EP 1082
DI 10.1109/TSE.2017.2750682
PG 13
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA HA1IB
UT WOS:000449964600003
DA 2024-07-18
ER

PT J
AU Panichella, A
   Kifetew, FM
   Tonella, P
AF Panichella, Annibale
   Kifetew, Fitsum Meshesha
   Tonella, Paolo
TI Automated Test Case Generation as a Many-Objective Optimisation Problem
   with Dynamic Selection of the Targets
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Evolutionary testing; many-objective optimisation; automatic test case
   generation
ID EVOLUTIONARY ALGORITHMS
AB The test case generation is intrinsically a multi-objective problem, since the goal is covering multiple test targets (e.g., branches). Existing search-based approaches either consider one target at a time or aggregate all targets into a single fitness function (whole-suite approach). Multi and many-objective optimisation algorithms (MOAs) have never been applied to this problem, because existing algorithms do not scale to the number of coverage objectives that are typically found in real-world software. In addition, the final goal for MOAs is to find alternative trade-off solutions in the objective space, while in test generation the interesting solutions are only those test cases covering one or more uncovered targets. In this paper, we present Dynamic Many-Objective Sorting Algorithm (DynaMOSA), a novel many-objective solver specifically designed to address the test case generation problem in the context of coverage testing. DynaMOSA extends our previous many-objective technique Many-Objective Sorting Algorithm (MOSA) with dynamic selection of the coverage targets based on the control dependency hierarchy. Such extension makes the approach more effective and efficient in case of limited search budget. We carried out an empirical study on 346 Java classes using three coverage criteria (i.e., statement, branch, and strong mutation coverage) to assess the performance of DynaMOSA with respect to the whole-suite approach (WS), its archive-based variant (WSA) and MOSA. The results show that DynaMOSA outperforms WSA in 28 percent of the classes for branch coverage (+8 percent more coverage on average) and in 27 percent of the classes for mutation coverage (+11 percent more killed mutants on average). It outperforms WS in 51 percent of the classes for statement coverage, leading to +11 percent more coverage on average. Moreover, DynaMOSA outperforms its predecessor MOSA for all the three coverage criteria in 19 percent of the classes with +8 percent more code coverage on average.
C1 [Panichella, Annibale] Univ Luxembourg, SnT, L-4365 Esch Sur Alzette, Luxembourg.
   [Kifetew, Fitsum Meshesha; Tonella, Paolo] Fdn Bruno Kessler, Software Engn Unit, I-38122 Trento, Italy.
C3 University of Luxembourg; Fondazione Bruno Kessler
RP Panichella, A (corresponding author), Univ Luxembourg, SnT, L-4365 Esch Sur Alzette, Luxembourg.
EM annibale.panichella@uni.lu; kifetew@fbk.eu; tonella@fbk.eu
RI Panichella, Annibale/AAJ-8443-2020; Tonella, Paolo/C-1702-2015; Kifetew,
   Fitsum Meshesha/AFM-7847-2022
OI Kifetew, Fitsum Meshesha/0000-0003-1860-8666; Panichella,
   Annibale/0000-0002-7395-3588
FU National Research Fund, Luxembourg [FNR/P10/03]
FX This work is partially supported by the National Research Fund,
   Luxembourg FNR/P10/03.
CR Afshan S, 2013, 2013 IEEE SIXTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST 2013), P352, DOI 10.1109/ICST.2013.11
   [Anonymous], PRACTICAL NONPARAMET
   [Anonymous], 2013, P INT S SOFTWARE TES
   Arcuri A, 2014, LECT NOTES COMPUT SC, V8636, P1
   Arcuri A, 2013, EMPIR SOFTW ENG, V18, P594, DOI 10.1007/s10664-013-9249-9
   Baker R.D., 1995, Randomization Tests
   Baresel A., 2004, Software Engineering Notes, V29, P108, DOI 10.1145/1013886.1007527
   Baresi L., 2010, 2010 32nd International Conference on Software Engineering (ICSE), P281, DOI 10.1145/1810295.1810353
   Cadar C., 2008, Proceedings of the 8th USENIX conference on Operating systems design and implementation, OSDI'08, (USA), P209
   Csallner C, 2004, SOFTWARE PRACT EXPER, V34, P1025, DOI 10.1002/spe.602
   Deb K, 2002, IEEE T EVOLUT COMPUT, V6, P182, DOI 10.1109/4235.996017
   Deb K., 2014, SEARCH METHODOLOGIES, P403, DOI DOI 10.1007/978-1-4614-6940-7_15
   Deb K, 2014, IEEE T EVOLUT COMPUT, V18, P577, DOI 10.1109/TEVC.2013.2281535
   di Perro F, 2007, IEEE T EVOLUT COMPUT, V11, P17, DOI 10.1109/TEVC.2006.876362
   Eler MM, 2014, P INT COMP SOFTW APP, P181, DOI 10.1109/COMPSAC.2014.26
   Ferrer J, 2012, SOFTWARE PRACT EXPER, V42, P1331, DOI 10.1002/spe.1135
   Fraser G, 2015, EMPIR SOFTW ENG, V20, P783, DOI 10.1007/s10664-013-9299-z
   Fraser G, 2014, ACM T SOFTW ENG METH, V24, DOI 10.1145/2685612
   Fraser G, 2013, IEEE T SOFTWARE ENG, V39, P276, DOI 10.1109/TSE.2012.14
   Fraser G, 2012, IEEE T SOFTWARE ENG, V38, P278, DOI 10.1109/TSE.2011.93
   Handl J, 2008, LECT NOTES COMPUT SC, V5199, P31, DOI 10.1007/978-3-540-87700-4_4
   Harman Mark, 2010, Proceedings of the IEEE Third International Conference on Software Testing Verification and Validation - Workshops (ICSTW 2010), P182, DOI 10.1109/ICSTW.2010.31
   Harman M, 2010, IEEE T SOFTWARE ENG, V36, P226, DOI 10.1109/TSE.2009.71
   Harman M, 2007, GECCO 2007: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOL 1 AND 2, P1098
   Harman Mark., 2007, Proceedings of the 2007 International Symposium on Software Testing and Analysis. ISSTA'07, P73, DOI [DOI 10.1145/1273463.1273475, http://doi.acm.org/10.1145/1273463.1273475]
   KING JC, 1976, COMMUN ACM, V19, P385, DOI 10.1145/360248.360252
   Knowles JD, 2001, LECT NOTES COMPUT SC, V1993, P269
   Koppen M., 2007, SUBSTITUTE DISTANCE, P727
   Laumanns M, 2002, EVOL COMPUT, V10, P263, DOI 10.1162/106365602760234108
   Li BD, 2015, ACM COMPUT SURV, V48, DOI 10.1145/2792984
   Ma L, 2015, IEEE INT CONF AUTOM, P212, DOI 10.1109/ASE.2015.49
   McCabe T. J., 1976, IEEE Transactions on Software Engineering, VSE-2, P308, DOI 10.1109/TSE.1976.233837
   McMinn P, 2004, SOFTW TEST VERIF REL, V14, P105, DOI 10.1002/stvr.294
   McMinn P., 2011, 2011 IEEE Fourth International Conference on Software Testing, Verification and Validation Workshops (ICSTW), P153, DOI 10.1109/ICSTW.2011.100
   Neumann F, 2008, P GEN EV COMP C, P641
   Oster N, 2006, LECT NOTES COMPUT SC, V4166, P426
   Pacheco C., 2007, OOPSLA 2007 COMPANIO, P815
   Panichella A, 2015, 2015 IEEE/ACM 8TH INTERNATIONAL SYMPOSIUM ON SOFTWARE AND SYSTEMS TRACEABILITY, P15, DOI 10.1109/SST.2015.10
   Panichella S, 2016, PROC INT CONF SOFTW, P547, DOI 10.1145/2884781.2884847
   Pinto G. H. L., 2010, 2010 Proceedings of 22nd International Conference on Tools with Artificial Intelligence (ICTAI 2010), P129, DOI 10.1109/ICTAI.2010.26
   Prasetya I. S. W. B., 2008, 2008 First IEEE International Conference on Software Testing, Verification and Validation (ICST '08), P151
   Ricca F, 2001, PROC INT CONF SOFTW, P25, DOI 10.1109/ICSE.2001.919078
   Rojas Jose Miguel, 2015, Search-Based Software Engineering. 7th International Symposium, SSBSE 2015. Proceedings: LNCS 9275, P93, DOI 10.1007/978-3-319-22183-0_7
   Rojas JM., 2016, EMPIR SOFTW ENG, P1, DOI DOI 10.1007/S10664-015-9424-2.
   Rueda U, 2016, 2016 IEEE/ACM 9TH INTERNATIONAL WORKSHOP ON SEARCH-BASED SOFTWARE TESTING (SBST), P19, DOI [10.1145/2897010.2897018, 10.1109/SBST.2016.012]
   Rueda U, 2015, 2015 IEEE/ACM 8TH INTERNATIONAL WORKSHOP ON SEARCH-BASED SOFTWARE TESTING (SBST), P19, DOI 10.1109/SBST.2015.12
   Sakti A, 2015, IEEE T SOFTWARE ENG, V41, P294, DOI 10.1109/TSE.2014.2363479
   Shamshiri S, 2015, GECCO'15: PROCEEDINGS OF THE 2015 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P1367, DOI 10.1145/2739480.2754696
   Tonella P., 2004, Software Engineering Notes, V29, P119, DOI 10.1145/1013886.1007528
   Vargha A, 2000, J EDUC BEHAV STAT, V25, P101, DOI 10.3102/10769986025002101
   von Lücken C, 2014, COMPUT OPTIM APPL, V58, P707, DOI 10.1007/s10589-014-9644-1
   Wegener J, 2001, INFORM SOFTWARE TECH, V43, P841, DOI 10.1016/S0950-5849(01)00190-2
   Xie T, 2005, LECT NOTES COMPUT SC, V3440, P365
   Yang SX, 2013, IEEE T EVOLUT COMPUT, V17, P721, DOI 10.1109/TEVC.2012.2227145
   Yuan Y, 2014, GECCO'14: PROCEEDINGS OF THE 2014 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P661, DOI 10.1145/2576768.2598342
   Zamfir C, 2010, EUROSYS'10: PROCEEDINGS OF THE EUROSYS 2010 CONFERENCE, P321
   Zhang QF, 2007, IEEE T EVOLUT COMPUT, V11, P712, DOI 10.1109/TEVC.2007.892759
   Zitzler E, 2004, LECT NOTES COMPUT SC, V3242, P832
   Zitzler E., 2001, 103 TIK SWISS FED I
NR 59
TC 175
Z9 183
U1 0
U2 30
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD FEB
PY 2018
VL 44
IS 2
BP 122
EP 158
DI 10.1109/TSE.2017.2663435
PG 37
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA FW1ND
UT WOS:000425065000002
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Di Nucci, D
   Palomba, F
   De Rosa, G
   Bavota, G
   Oliveto, R
   De Lucia, A
AF Di Nucci, Dario
   Palomba, Fabio
   De Rosa, Giuseppe
   Bavota, Gabriele
   Oliveto, Rocco
   De Lucia, Andrea
TI A Developer Centered Bug Prediction Model
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Scattering metrics; bug prediction; empirical study; mining software
   repositories
ID SOFTWARE; METRICS; VALIDATION; COMPLEXITY; FAULTS
AB Several techniques have been proposed to accurately predict software defects. These techniques generally exploit characteristics of the code artefacts (e.g., size, complexity, etc.) and/or of the process adopted during their development and maintenance (e.g., the number of developers working on a component) to spot out components likely containing bugs. While these bug prediction models achieve good levels of accuracy, they mostly ignore the major role played by human-related factors in the introduction of bugs. Previous studies have demonstrated that focused developers are less prone to introduce defects than non-focused developers. According to this observation, software components changed by focused developers should also be less error prone than components changed by less focused developers. We capture this observation by measuring the scattering of changes performed by developers working on a component and use this information to build a bug prediction model. Such a model has been evaluated on 26 systems and compared with four competitive techniques. The achieved results show the superiority of our model, and its high complementarity with respect to predictors commonly used in the literature. Based on this result, we also show the results of a "hybrid" prediction model combining our predictors with the existing ones.
C1 [Di Nucci, Dario; Palomba, Fabio; De Rosa, Giuseppe] Univ Salerno, I-84084 Fisciano, SA, Italy.
   [De Lucia, Andrea] Univ Salerno, Dept Comp Sci, Software Engn, I-84084 Fisciano, SA, Italy.
   [Palomba, Fabio] Delft Univ Technol, NL-2628 Delft, Netherlands.
   [Bavota, Gabriele] USI, CH-6900 Lugano, Switzerland.
   [Oliveto, Rocco] Univ Molise, I-86100 Pesche Is, Campobasso, Italy.
   [Oliveto, Rocco] Univ Molise, Comp Sci Program, I-86100 Pesche Is, Campobasso, Italy.
   [Oliveto, Rocco] Univ Molise, Software & Knowledge Engn STAKE Lab, I-86100 Pesche Is, Campobasso, Italy.
C3 University of Salerno; University of Salerno; Delft University of
   Technology; University of Molise; University of Molise; University of
   Molise
RP Di Nucci, D (corresponding author), Univ Salerno, I-84084 Fisciano, SA, Italy.
EM ddinucci@unisa.it; f.palomba@tudelft.nl; giuderos@gmail.com;
   gabriele.bavota@usi.ch; rocco.oliveto@unimol.it; adelucia@unisa.it
RI Di Nucci, Dario/Y-9679-2019; De Rosa, Giuseppe/AAL-4791-2020; De Lucia,
   Andrea/AAG-6781-2020
OI Di Nucci, Dario/0000-0002-3861-1902; De Rosa,
   Giuseppe/0000-0002-8528-051X; De Lucia, Andrea/0000-0002-4238-1425;
   Palomba, Fabio/0000-0001-9337-5116; BAVOTA, Gabriele/0000-0002-2216-3148
CR [Anonymous], PRACTICAL NONPARAMET
   [Anonymous], DEV CENTERED BUG PRE
   [Anonymous], P 8 WORK C MIN SOFTW
   [Anonymous], 2007, PROMISE 07, DOI DOI 10.1109/PROMISE.2007.10
   [Anonymous], 2005, ENCY STAT BEHAV SCI
   Baeza-Yates Ricardo, 1999, MODERN INFORM RETRIE, V463
   Basili V., 1994, The Goal Question Metric Approach, P528
   Basili VR, 1996, IEEE T SOFTWARE ENG, V22, P751, DOI 10.1109/32.544352
   Bavota G., 2012, 2012 12th IEEE Working Conference on Source Code Analysis and Manipulation (SCAM 2012), P104, DOI 10.1109/SCAM.2012.20
   Bavota G, 2013, PROC IEEE INT CONF S, P280, DOI 10.1109/ICSM.2013.39
   Bavota G, 2013, EMPIR SOFTW ENG, V18, P901, DOI 10.1007/s10664-012-9226-8
   Bell R., 2006, Proc. 2006 International Symposium on Software Testing and Analysis, P61
   Bell RM, 2013, EMPIR SOFTW ENG, V18, P478, DOI 10.1007/s10664-011-9178-4
   Bell RobertM., 2011, Proceedings of the 7th International Conference on Predictive Models in Software Engineering. Promise'11, DOI DOI 10.1145/2020390.2020392
   Bird C., 2011, P 19 ACM SIGSOFT S 1, P4, DOI DOI 10.1145/2025113.2025119
   Bird C, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P121, DOI 10.1145/1595696.1595716
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   D'Ambros M, 2012, EMPIR SOFTW ENG, V17, P531, DOI 10.1007/s10664-011-9173-9
   Devijver P. A., 1982, PATTERN RECOGNITION, V265
   Di Nucci D, 2015, PROC IEEE INT CONF S, P241, DOI 10.1109/ICSM.2015.7332470
   El Emam K, 2001, J SYST SOFTWARE, V56, P63, DOI 10.1016/S0164-1212(00)00086-8
   Freund Y, 1999, MACHINE LEARNING, PROCEEDINGS, P124
   Graves TL, 2000, IEEE T SOFTWARE ENG, V26, P653, DOI 10.1109/32.859533
   Grissom R. J., 2005, EFFECT SIZES RES BRO
   Gyimóthy T, 2005, IEEE T SOFTWARE ENG, V31, P897, DOI 10.1109/TSE.2005.112
   Hassan AE, 2005, PROC IEEE INT CONF S, P263
   Hassan AE, 2003, 10TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P123, DOI 10.1109/WCRE.2003.1287243
   Hassan AE, 2009, PROC INT CONF SOFTW, P78, DOI 10.1109/ICSE.2009.5070510
   Herzig K, 2013, IEEE WORK CONF MIN S, P121, DOI 10.1109/MSR.2013.6624018
   John G. H., 1995, Uncertainty in Artificial Intelligence. Proceedings of the Eleventh Conference (1995), P338
   Khoshgoftaar TM, 1996, SEVENTH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P364, DOI 10.1109/ISSRE.1996.558896
   Kim S, 2008, IEEE T SOFTWARE ENG, V34, P181, DOI 10.1109/TSE.2007.70773
   Kim S, 2007, PROC INT CONF SOFTW, P489
   Kohavi R, 1997, ARTIF INTELL, V97, P273, DOI 10.1016/S0004-3702(97)00043-X
   Kohavi R, 1995, LECT NOTES ARTIF INT, V912, P174
   LECESSIE S, 1992, APPL STAT-J ROY ST C, V41, P191
   Mancoridis S, 1998, PROG COMPREHEN, P45, DOI 10.1109/WPC.1998.693283
   Menzies T., 2012, The PROMISE Repository of empirical software engineering data
   Moonen L, 2001, EIGHTH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P13, DOI 10.1109/WCRE.2001.957806
   Moser R, 2008, ESEM'08: PROCEEDINGS OF THE 2008 ACM-IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, P309
   Moser R, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P181, DOI 10.1145/1368088.1368114
   Nagappan N, 2005, PROC INT CONF SOFTW, P284, DOI 10.1145/1062455.1062514
   Nagappan N, 2005, PROC INT CONF SOFTW, P580, DOI 10.1145/1062455.1062558
   Nagappan Nachiappan, 2010, Proceedings of the 2010 IEEE 21st International Symposium on Software Reliability Engineering (ISSRE 2010), P309, DOI 10.1109/ISSRE.2010.25
   Nagappan N., 2006, 28th International Conference on Software Engineering Proceedings, P452, DOI 10.1145/1134285.1134349
   Nikora AP, 2003, NINTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM, PROCEEDINGS, P338, DOI 10.1109/METRIC.2003.1232479
   Ohlsson N, 1996, IEEE T SOFTWARE ENG, V22, P886, DOI 10.1109/32.553637
   Ostrand T. J., 2010, P 6 INT C PRED MOD S, P19, DOI [DOI 10.1145/1868328, 10.1145/1868328]
   Posnett D, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P452, DOI 10.1109/ICSE.2013.6606591
   Rahman F, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P491, DOI 10.1145/1985793.1985860
   Rosenblatt F., 1961, AD0256582 CORN AER L
   Sliwerski J., 2005, ACM SIGSOFT SOFTWARE, P1, DOI DOI 10.1145/1082983.1083147
   Subramanyam R, 2003, IEEE T SOFTWARE ENG, V29, P297, DOI 10.1109/TSE.2003.1191795
   Zhou YM, 2010, J SYST SOFTWARE, V83, P660, DOI 10.1016/j.jss.2009.11.704
NR 54
TC 77
Z9 87
U1 1
U2 8
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JAN
PY 2018
VL 44
IS 1
BP 5
EP 24
DI 10.1109/TSE.2017.2659747
PG 20
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA FS8VW
UT WOS:000422693800003
DA 2024-07-18
ER

PT J
AU Nongpoh, B
   Ray, R
   Dutta, S
   Banerjee, A
AF Nongpoh, Bernard
   Ray, Rajarshi
   Dutta, Saikat
   Banerjee, Ansuman
TI AutoSense: A Framework for Automated Sensitivity Analysis of Program
   Data
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Approximate computing; sensitivity analysis; hypothesis testing;
   sequential probability ratio test
AB In recent times, approximate computing is being increasingly adopted across the computing stack, from algorithms to computing hardware, to gain energy and performance efficiency by trading accuracy within acceptable limits. Approximation aware programming languages have been proposed where programmers can annotate data with type qualifiers (e.g., precise and approx) to denote its reliability. However, programmers need to judiciously annotate so that the accuracy loss remains within the desired limits. This can be non-trivial for large applications where error resilient and non-resilient program data may not be easily identifiable. Mis-annotation of even one data as error resilient/insensitive may result in an unacceptable output. In this paper, we present AutoSense, a framework to automatically classify resilient (insensitive) program data versus the sensitive ones with probabilistic reliability guarantee. AutoSense implements a combination of dynamic and static analysis methods for data sensitivity analysis. The dynamic analysis is based on statistical hypothesis testing, while the static analysis is based on classical data flow analysis. Experimental results compare our automated data classification with reported manual annotations on popular benchmarks used in approximate computing literature. AutoSense achieves promising reliability results compared to manual annotations and earlier methods, as evident from the experimental results.
C1 [Nongpoh, Bernard; Ray, Rajarshi] Natl Inst Technol Meghalaya, Dept Comp Sci & Engn, Shillong, Meghalayn, India.
   [Dutta, Saikat] Jadavpur Univ, Dept Comp Sci & Engn, Kolkata, India.
   [Banerjee, Ansuman] Indian Stat Inst, Adv Comp & Microelect Unit, Kolkata, India.
C3 National Institute of Technology (NIT System); National Institute of
   Technology Meghalaya; Jadavpur University; Indian Statistical Institute;
   Indian Statistical Institute Kolkata
RP Nongpoh, B (corresponding author), Natl Inst Technol Meghalaya, Dept Comp Sci & Engn, Shillong, Meghalayn, India.
EM bernard.nongpoh@gmail.com; rajarshi.ray@nitm.ac.in;
   saikatdutta.pro2011@gmail.com; ansuman@isical.ac.in
FU National Institute of Technology Meghalaya and Visvesvaraya Ph.D.
   Scheme, GoI
FX This work was supported in part by National Institute of Technology
   Meghalaya and Visvesvaraya Ph.D. Scheme, GoI.
CR [Anonymous], 2022, Testing Statistical Hypotheses, DOI DOI 10.1007/978-3-030-70578-7
   Askarov A, 2010, LECT NOTES COMPUT SC, V6012, P64, DOI 10.1007/978-3-642-11957-6_5
   Baek W., 2010, SIGPLAN NOTICES, V45, P198
   Carbin M, 2013, ACM SIGPLAN NOTICES, V48, P33, DOI [10.1145/2544173.2509546, 10.1145/2509136.2509546]
   Carbin Michael., 2010, Proceedings of the 19th International Sym- posium on Software Testing and Analysis, ISSTA '10, P37, DOI DOI 10.1145/1831708.1831713
   Chippa V. K., 2013, P 50 ANN DES AUT C D
   Commons A., BCEL BYT COD ENG LIB
   Esmaeilzadeh H, 2012, INT SYMP MICROARCH, P449, DOI 10.1109/MICRO.2012.48
   Kreyszig E., 2009, Advanced engineering mathematics
   Lattner C, 2004, INT SYM CODE GENER, P75, DOI 10.1109/CGO.2004.1281665
   Legay A, 2010, LECT NOTES COMPUT SC, V6418, P122, DOI 10.1007/978-3-642-16612-9_11
   Lu QN, 2015, 2015 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE SECURITY AND RELIABILITY (QRS 2015), P11, DOI 10.1109/QRS.2015.13
   Miller Bruce R, SCIMARK 2 0
   Moore G. E., 2000, Readings in computer architecture, P56
   Nielson F., 1999, Principles of Program Analysis
   PALEM K, 2012, AUT CON, P924
   Palem K. V., 2014, P ACM SIGPLAN C PROG
   Rinard Martin, 2007, SIGPLAN Notices, V42, P369, DOI 10.1145/1297105.1297055
   Rinard M, 2007, OOPSLA: 22ND INTERNATIONAL CONFERENCE ON OBJECT-ORIENTED PROGRAMMING, SYSTEMS, LANGUAGES, AND APPLICATIONS, PROCEEDINGS, P369
   Rinard Martin, 2006, Proceedings of the 20th annual international conference on Supercomputing, P324, DOI 10.1145/1183401.1183447
   Roy P, 2014, ACM SIGPLAN NOTICES, V49, P95, DOI [10.1145/2597809.2597812, 10.1145/2666357.2597812]
   Saltelli A., 2004, SENSITIVITY ANAL PRA
   Sampson A, 2011, PLDI 11: PROCEEDINGS OF THE 2011 ACM CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P164
   Sampson A, 2011, ACM SIGPLAN NOTICES, V46, P164, DOI 10.1145/1993316.1993518
   Sidiroglou-Douskos S., 2011, P 19 ACM SIGS S 13 E
   Venkataramani S., 2015, Proceedings of the 52nd Annual Design Automation Conference, p120:1, DOI [DOI 10.1145/2744769.2751163, 10.1145/2744769.2751163]
   WALD A, 1945, ANN MATH STAT, V16, P117, DOI 10.1214/aoms/1177731118
   Weisstein EricW., Hypothesis Testing, From MathWorld--A Wolfram Web Resource
   Younes H. L. S., 2002, Computer Aided Verification. 14th International Conference, CAV 2002. Proceedings (Lecture Notes in Computer Science Vol.2404), P223
   Younes H. L. S., 2005, COMPUTER SCI
NR 30
TC 11
Z9 13
U1 0
U2 1
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD DEC
PY 2017
VL 43
IS 12
BP 1110
EP 1124
DI 10.1109/TSE.2017.2654251
PG 15
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA FQ1RH
UT WOS:000418134800002
DA 2024-07-18
ER

PT J
AU Wang, HJ
   Liu, T
   Guan, XH
   Shen, C
   Zheng, QH
   Yang, ZJ
AF Wang, Haijun
   Liu, Ting
   Guan, Xiaohong
   Shen, Chao
   Zheng, Qinghua
   Yang, Zijiang
TI Dependence Guided Symbolic Execution
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Symbolic execution; path coverage; program dependence
ID MUTATION
AB Symbolic execution is a powerful technique for systematically exploring the paths of a program and generating the corresponding test inputs. However, its practical usage is often limited by the path explosion problem, that is, the number of explored paths usually grows exponentially with the increase of program size. In this paper, we argue that for the purpose of fault detection it is not necessary to systematically explore the paths, and propose a new symbolic execution approach to mitigate the path explosion problem by predicting and eliminating the redundant paths based on symbolic value. Our approach can achieve the equivalent fault detection capability as traditional symbolic execution without exhaustive path exploration. In addition, we develop a practical implementation called Dependence Guided Symbolic Execution (DGSE) to soundly approximate our approach. Through exploiting program dependence, DGSE can predict and eliminate the redundant paths at a reasonable computational cost. Our empirical study shows that the redundant paths are abundant and widespread in a program. Compared with traditional symbolic execution, DGSE only explores 6.96 to 96.57 percent of the paths and achieves a speedup of 1.02 x to 49.56 x. We have released our tool and the benchmarks used to evaluate DGSE.
C1 [Wang, Haijun; Liu, Ting; Guan, Xiaohong; Shen, Chao; Zheng, Qinghua; Yang, Zijiang] Xi An Jiao Tong Univ, Minist Educ, Key Lab Intelligent Networks & Network Secur MOEK, Sch Elect & Informat Engn, Xian 710049, Peoples R China.
   [Yang, Zijiang] Western Michigan Univ, Dept Comp Sci, Kalamazoo, MI 49008 USA.
C3 Xi'an Jiaotong University; Western Michigan University
RP Wang, HJ (corresponding author), Xi An Jiao Tong Univ, Minist Educ, Key Lab Intelligent Networks & Network Secur MOEK, Sch Elect & Informat Engn, Xian 710049, Peoples R China.
EM hjwang@sei.xjtu.edu.cn; tingliu@mail.xjtu.edu.cn;
   xhguan@sei.xjtu.edu.cn; cshen@sei.xjtu.edu.cn; qhzheng@mail.xjtu.edu.cn;
   zijiang.yang@wmich.edu
RI Guan, Xiaohong/K-4206-2012
OI Shen, Chao/0000-0002-6959-0569; Liu, Ting/0000-0002-7600-0934
FU National Natural Science Foundation of China [91218301, U1301254,
   91418205, 61472318, 61428206, 61532015]; Fok Ying-Tong Education
   Foundation [151067]; Key Project of the National Research Program of
   China [2013BAK09B01]; Ministry of Education Innovation Research Team
   [IRT13035]; US National Science Foundation [CCF-1500365]; Fundamental
   Research Funds for the Central Universities
FX This work was supported by the National Natural Science Foundation of
   China (91218301, U1301254, 91418205, 61472318, 61428206, 61532015), Fok
   Ying-Tong Education Foundation (151067), Key Project of the National
   Research Program of China (2013BAK09B01), Ministry of Education
   Innovation Research Team (IRT13035), the Fundamental Research Funds for
   the Central Universities and the US National Science Foundation under
   grant CCF-1500365. Ting Liu and Zijiang Yang are the corresponding
   authors. Our tool and the benchmarks are available at:
   http://labs.xjtudlc.com/labs/wlaq/hjwang/toolbench.html.
CR Anand Saswat, 2009, International Journal on Software Tools for Technology Transfer, V11, P53, DOI 10.1007/s10009-008-0090-1
   Anand S, 2008, LECT NOTES COMPUT SC, V4963, P367, DOI 10.1007/978-3-540-78800-3_28
   Andrews JH, 2005, PROC INT CONF SOFTW, P402, DOI 10.1145/1062455.1062530
   [Anonymous], 2014, P 2014 INT S SOFTW T, DOI DOI 10.1145/2610384.2610389
   [Anonymous], 2010, P ACM SIGSOFT INT S
   [Anonymous], 2010, P 19 INT S SOFTW TES
   [Anonymous], 2010, Proceedings of the 19th international symposium on Software testing and analysis, DOI 10.1145/1831708.1831732
   [Anonymous], 2015, 2015 IEEE 8th International Conference on Software Testing, Verification and Validation (ICST)
   [Anonymous], 2013, JOINT M EUROPEAN SOF, DOI [10.1145/2491411.2491430, DOI 10.1145/2491411.2491430]
   Arcuri A, 2014, SOFTW TEST VERIF REL, V24, P219, DOI 10.1002/stvr.1486
   Artzi S., 2010, ISSTA, P49, DOI DOI 10.1145/1831708.1831715
   Banerjee Ansuman., 2010, P 18 ACM SIGSOFT INT, P177
   Böhme M, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P302, DOI 10.1109/ICSE.2013.6606576
   Boonstoppel P, 2008, LECT NOTES COMPUT SC, V4963, P351, DOI 10.1007/978-3-540-78800-3_27
   Braione P, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P602, DOI 10.1145/2786805.2786842
   Cadar C., 2008, Proceedings of the 8th USENIX conference on Operating systems design and implementation, OSDI'08, (USA), P209
   Cadar C, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1066, DOI 10.1145/1985793.1985995
   Clarke LoriA., 1976, Proc. of the 1976 annual conference, P488, DOI [10.1145/800191.805647, DOI 10.1145/800191.805647]
   Collard J.-F., 2000, Languages and Compilers for Parallel Computing. 12th International Workshop, LCPC'99. Proceedings (Lecture Notes in Computer Science Vol.1863), P286
   Csallner C, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P281, DOI 10.1145/1368088.1368127
   de Moura L, 2008, LECT NOTES COMPUT SC, V4963, P337, DOI 10.1007/978-3-540-78800-3_24
   Delamaro ME, 2014, 2014 IEEE SEVENTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST), P11, DOI 10.1109/ICST.2014.12
   Dinges P, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P425, DOI 10.1145/2635868.2635889
   Dinges Peter, 2014, P 29 ACM IEEE INT C, P31, DOI [10.1145/2642937.2642951, DOI 10.1145/2642937.2642951]
   Ernst MD, 2007, SCI COMPUT PROGRAM, V69, P35, DOI 10.1016/j.scico.2007.01.015
   Felsing D, 2014, P 29 ACM IEEE INT C, P349, DOI [10.1145/2642937.2642987, DOI 10.1145/2642937.2642987]
   Ge X, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P992, DOI 10.1145/1985793.1985971
   Ghosh I, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P992, DOI 10.1109/ICSE.2013.6606649
   Godefroid P., 2007, SIGPLAN Notices, V42, P47, DOI [10.1145/1190216.1190226, 10.1145/1190215.1190226]
   Godefroid P, 2005, ACM SIGPLAN NOTICES, V40, P213, DOI 10.1145/1064978.1065036
   Godefroid Patrice, 2008, Network and Distributed Systems Security
   Guo SJ, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P854, DOI 10.1145/2786805.2786841
   Gyimóthy T, 1999, LECT NOTES COMPUT SC, V1687, P303, DOI 10.1145/318774.319248
   HUTCHINS M, 1994, PROC INT CONF SOFTW, P191, DOI 10.1109/ICSE.1994.296778
   Khurshid S., 2005, WORKSHOP PROGRAM ANA, P103
   KING JC, 1976, COMMUN ACM, V19, P385, DOI 10.1145/360248.360252
   Li M, 2013, IEEE WORKSHOP SIG, P112, DOI 10.1109/SiPS.2013.6674490
   Ma YS, 2005, SOFTW TEST VERIF REL, V15, P97, DOI 10.1002/stvr.308
   Pasareanu Corina S., 2009, International Journal on Software Tools for Technology Transfer, V11, P339, DOI 10.1007/s10009-009-0118-1
   Pasareanu C.S., 2011, Proceedings of the 2011 International Symposium on Software Testing and Analysis, ISSTA '11, P34, DOI DOI 10.1145/2001420.2001425
   Pasareanu Corina S., 2010, P 25 IEEE ACM INT C, P179, DOI [10.1145/1858996.1859035, DOI 10.1145/1858996.1859035]
   Qi DW, 2013, ACM T SOFTW ENG METH, V22, DOI 10.1145/2522920.2522925
   Qi DW, 2012, ACM T SOFTW ENG METH, V21, DOI 10.1145/2211616.2211622
   Ranganath VP, 2007, ACM T PROGR LANG SYS, V29, DOI 10.1145/1275497.1275502
   Reps T., 1995, Conference Record of POPL'95: 22nd ACM SIGPLAN-SIGACT Symposium Principles of Programming Languages, P49, DOI 10.1145/199448.199462
   Rungta N, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P109, DOI 10.1109/ICSM.2012.6405261
   Santelices Raul, 2008, 2008 23rd IEEE/ACM International Conference on Automated Software Engineering, P218, DOI 10.1109/ASE.2008.32
   Santelices R.A., 2010, P 19 INT S SOFTW TES, P195, DOI [DOI 10.1145/1831708.1831733, 10.1145/1831708.1831733]
   Santelices R, 2013, SOFTW TEST VERIF REL, V23, P499, DOI 10.1002/stvr.1501
   Schwartz-Narbonne D, 2015, LECT NOTES COMPUT SC, V9058, P327, DOI 10.1007/978-3-319-17524-9_23
   Sen K., 2005, P 10 EUR SOFTW ENG C, V30, P263, DOI DOI 10.1145/1081706.1081750
   Sen K, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P842, DOI 10.1145/2786805.2786830
   Seo H, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P413, DOI 10.1145/2635868.2635872
   Siddiqui JH, 2012, ACM SIGPLAN NOTICES, V47, P523, DOI 10.1145/2398857.2384654
   Souza M, 2011, LECT NOTES COMPUT SC, V6617, P359, DOI 10.1007/978-3-642-20398-5_26
   Taneja K., 2011, Proceedings of ACM International Symposium on Software Testing and Analysis, P1, DOI DOI 10.1145/2001420.2001422
   Vallee-Rai R., 1999, Proceedings of the 1999 Conference of the Centre for Advanced Studies on Collaborative Research, CASCON'99, page, P13
   VOAS JM, 1992, IEEE T SOFTWARE ENG, V18, P717, DOI 10.1109/32.153381
   Wang H., 2014, P 26 INT C SOFTW ENG, P223
   Yang GW, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P1059, DOI 10.1145/2568225.2568319
   Yang GW, 2014, ACM T SOFTW ENG METH, V24, DOI 10.1145/2629536
   Yi QP, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P257, DOI 10.1109/ICSE.2015.46
   Zhang YF, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P643, DOI 10.1109/ICSE.2015.80
   Zheng Yunhui, 2013, P 9 JOINT M FDN SOFT, P114, DOI [10.1145/2491411.2491456, DOI 10.1145/2491411.2491456]
NR 64
TC 29
Z9 40
U1 1
U2 27
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAR 1
PY 2017
VL 43
IS 3
BP 252
EP 271
DI 10.1109/TSE.2016.2584063
PG 20
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA ER2CW
UT WOS:000398602600004
OA hybrid
DA 2024-07-18
ER

PT J
AU Ocariza, FS
   Bajaj, K
   Pattabiraman, K
   Mesbah, A
AF Ocariza, Frolin S., Jr.
   Bajaj, Kartik
   Pattabiraman, Karthik
   Mesbah, Ali
TI A Study of Causes and Consequences of Client-Side JavaScript Bugs
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Faults; JavaScript; Document Object Model (DOM); bug reports; empirical
   study
ID RELIABILITY
AB Client-side JavaScript is widely used in web applications to improve user-interactivity and minimize client-server communications. Unfortunately, JavaScript is known to be error-prone. While prior studies have demonstrated the prevalence of JavaScript faults, no attempts have been made to determine their causes and consequences. The goal of our study is to understand the root causes and impact of JavaScript faults and how the results can impact JavaScript programmers, testers and tool developers. We perform an empirical study of 502 bug reports from 19 bug repositories. The bug reports are thoroughly examined to classify and extract information about each bug' cause (the error) and consequence (the failure and impact). Our results show that the majority (68 percent) of JavaScript faults are DOM-related, meaning they are caused by faulty interactions of the JavaScript code with the Document Object Model (DOM). Further, 80 percent of the highest impact JavaScript faults are DOM-related. Finally, most JavaScript faults originate from programmer mistakes committed in the JavaScript code itself, as opposed to other web application components. These results indicate that JavaScript programmers and testers need tools that can help them reason about the DOM. Additionally, developers can use the error patterns we found to design more powerful static analysis tools for JavaScript.
C1 [Ocariza, Frolin S., Jr.; Bajaj, Kartik; Pattabiraman, Karthik; Mesbah, Ali] Univ British Columbia, Dept Elect & Comp Engn, 2332 Main Mall, Vancouver, BC V6T 1Z4, Canada.
C3 University of British Columbia
RP Ocariza, FS (corresponding author), Univ British Columbia, Dept Elect & Comp Engn, 2332 Main Mall, Vancouver, BC V6T 1Z4, Canada.
EM frolino@ece.ubc.ca; kbajaj@ece.ubc.ca; karthikp@ece.ubc.ca;
   amesbah@ece.ubc.ca
RI Mesbah, Ali/C-3675-2013; Ocariza, Frolin/AAH-8872-2020
OI Ocariza, Frolin/0000-0003-2468-3902; Mesbah, Ali/0000-0002-8783-7967
FU Natural Sciences and Engineering Research Council of Canada (NSERC);
   UBC; MITACS
FX This research was supported in part by the Natural Sciences and
   Engineering Research Council of Canada (NSERC), a Four Year Fellowship
   (FYF) from UBC, a MITACS Graduate Fellowship, and a research gift from
   Intel Corporation.
CR [Anonymous], 2014, FLOW STATIC TYPE CHE
   [Anonymous], 2005, CMUPDL05109
   [Anonymous], 2009, P 18 USENIX SEC S
   Anvik John, 2006, P 28 INT C SOFTWARE, P361, DOI DOI 10.1145/1134285.1134336
   Bae S, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P507, DOI 10.1145/2635868.2635916
   Bajaj K, 2014, P 11 WORK C MIN SOFT, P112
   Bettenburg N., 2008, P 16 ACM SIGSOFT INT, P308
   Bhattacharya P, 2012, PROC INT CONF SOFTW, P419, DOI 10.1109/ICSE.2012.6227173
   Braun Bastian, 2013, Engineering Secure Software and Systems. 5th International Symposium, ESSoS 2013. Proceedings, P1, DOI 10.1007/978-3-642-36563-8_1
   Carzaniga A., 2010, Proceedings of the eighteenth ACM SIGSOFT international symposium on Foundations of software engineering, P237
   Chanudaud S, 2000, POSITIF, P97, DOI 10.1109/ICDSN.2000.857521
   Choudhary S. R., 2012, 2012 IEEE Fifth International Conference on Software Testing, Verification and Validation (ICST 2012), P171, DOI 10.1109/ICST.2012.97
   Choudhary SR, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P702, DOI 10.1109/ICSE.2013.6606616
   Cinque M, 2007, I C DEPEND SYS NETWO, P585, DOI 10.1109/DSN.2007.54
   Elbaum S, 2005, IEEE T SOFTWARE ENG, V31, P187, DOI 10.1109/TSE.2005.36
   Fortuna E., 2010, P IEEE INT S WORKLOA, P1
   Goseva-Popstojanova K, 2004, 15TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P403, DOI 10.1109/ISSRE.2004.19
   Guha A., 2009, P 18 INT C WORLD WID, P561
   Hackett B, 2012, ACM SIGPLAN NOTICES, V47, P239, DOI 10.1145/2345156.2254094
   Hanam Q., 2016, P ACM SIGSOFT INT S, P11
   Jang D, 2010, PROCEEDINGS OF THE 17TH ACM CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY (CCS'10), P270, DOI 10.1145/1866307.1866339
   Jensen S.H., 2011, P 19 ACM SIGSOFT S 1, P59
   Jensen S. H., 2009, LNCS, V5673, DOI 10.1007/978-3-642-03237-0_17
   Joorabchi ME, 2014, P 11 WORK C MIN SOFT, P62, DOI [10.1145/2597073.2597098, DOI 10.1145/2597073.2597098]
   Kalyanakrishnan M, 1999, COMPUT NETW, V31, P47, DOI 10.1016/S0169-7552(98)00229-3
   Kim S, 2006, Proceedings of the 2006 international workshop on Mining software repositories, P173
   Li Z, 2006, P 1 WORKSH ARCH SYST, P25, DOI DOI 10.1145/1181309.1181314
   Marchetto A, 2009, J WEB ENG, V8, P316
   Marks L., 2011, P 7 INT C PRED MOD S, DOI [10.1145/2020390.202040, DOI 10.1145/2020390.202040]
   Martinsen JK, 2011, LECT NOTES COMPUT SC, V6757, P399, DOI 10.1007/978-3-642-22233-7_35
   Mesbah A, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P561, DOI 10.1145/1985793.1985870
   Mirshokraie S, 2013, 2013 IEEE SIXTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST 2013), P74, DOI 10.1109/ICST.2013.23
   Nikiforakis Nick, 2012, P 2012 ACM C COMP CO, P736, DOI DOI 10.1145/2382196.2382274
   Ocariza Frolin  Jr., 2013, 2013 ACM / IEEE International Symposium on Empirical Software Engineering and Measurement (ESEM), P55, DOI 10.1109/ESEM.2013.18
   Ocariza F. S.  Jr., 2012, 2012 IEEE Fifth International Conference on Software Testing, Verification and Validation (ICST 2012), P31, DOI 10.1109/ICST.2012.83
   Ocariza FS, 2016, SOFTW TEST VERIF REL, V26, P69, DOI 10.1002/stvr.1576
   Ocariza FS, 2011, 22ND IEEE INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING (ISSRE), P100, DOI 10.1109/ISSRE.2011.28
   Padmanabhan V. N., 2006, P C EM NETW EXP TECH
   Pradel M, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P314, DOI 10.1109/ICSE.2015.51
   Ratanaworabhan P., 2010, P 2010 USENIX C WEB, P3
   Richards G, 2010, PLDI '10: PROCEEDINGS OF THE 2010 ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P1, DOI 10.1145/1806596.1806598
   Samimi H, 2012, PROC INT CONF SOFTW, P277, DOI 10.1109/ICSE.2012.6227186
   Semenenko N, 2013, PROC IEEE INT CONF S, P528, DOI 10.1109/ICSM.2013.88
   Sprenkle Sara., 2005, AUTOMAT SOFTW ENG, P253, DOI DOI 10.1145/1101908.1101947
   Swartz A., 2005, BRIEF HIST AJAX
   Tian J, 2004, IEEE T SOFTWARE ENG, V30, P754, DOI 10.1109/TSE.2004.87
   Weinberger J., 2011, EECS201111 U CAL
   Weiss C, 2007, P 4 INT WORKSH MIN S, P1, DOI [10.1109/MSR.2007.13, DOI 10.1109/MSR.2007.13]
   Yin ZN, 2010, ACM SIGCOMM COMP COM, V40, P34, DOI 10.1145/1823844.1823849
   Yue C., 2009, Proceedings of the 18th international conference on World Wide Web, WWW, P961, DOI DOI 10.1145/1526709.1526838
   Zheng Y., 2011, Proceedings of the 20th International Conference on World Wide Web, P805
   Zimmermann Thomas, 2007, 2007 3rd International Workshop on Predictor Models in Software Engineering, P71
NR 52
TC 20
Z9 21
U1 13
U2 63
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD FEB 1
PY 2017
VL 43
IS 2
BP 128
EP 144
DI 10.1109/TSE.2016.2586066
PG 17
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA EN0XX
UT WOS:000395735900002
DA 2024-07-18
ER

PT J
AU El-Kassas, WS
   Abdullah, BA
   Yousef, AH
   Wahba, AM
AF El-Kassas, Wafaa S.
   Abdullah, Bassem A.
   Yousef, Ahmed H.
   Wahba, Ayman M.
TI Enhanced Code Conversion Approach for the Integrated Cross-Platform
   Mobile Development (ICPMD)
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Cross-platform mobile development; code conversion; code reuse;
   generated apps; ICPMD; source code patterns
AB Mobile development companies aim to maximize the return on investments by making their mobile applications (Apps) available on different mobile platforms. Consequently, the same App is developed several times; each time the developer uses the programming languages and development tools of a specific platform. Therefore, there is a need to have cross-platform mobile applications development solutions that enable the developers to develop the App once and run it everywhere. The Integrated Cross-Platform Mobile Applications Development (ICPMD) solution is one of the attempts that enables the developers to use the most popular programming languages like Java for Android and C# for Windows Phone 8 (WP8). ICPMD is used to transform both the source code and user interface to another language to generate full Apps on the target platform. This paper extends ICPMD by proposing a new code conversion approach based on XSLT and Regular Expressions to ease the conversion process. In addition, it provides the assessment method to compare the ICPMD efficiency with competing approaches. Several Apps are converted from WP8 to Android and vice versa. The ICPMD evaluation results show reasonable improvement over commercial cross-platform mobile development tools (Titanium and Xamarin).
C1 [El-Kassas, Wafaa S.; Abdullah, Bassem A.; Yousef, Ahmed H.; Wahba, Ayman M.] Ain Shams Univ, Dept Comp & Syst Engn, Fac Engn, Cairo, Egypt.
C3 Egyptian Knowledge Bank (EKB); Ain Shams University
RP El-Kassas, WS (corresponding author), Ain Shams Univ, Dept Comp & Syst Engn, Fac Engn, Cairo, Egypt.
EM wafaa.elkassas@gmail.com; babdullah@eng.asu.edu.eg;
   aliassan@eng.asu.edu.eg; ayman.wahba@eng.asu.edu.eg
RI Yousef, Ahmed Hassan/IUP-8948-2023; El-Kassas, Wafaa/ABC-8138-2020;
   Hassan, Ahmed/AAX-2139-2021; KHALIFA, AHMED khalifa/HKF-2246-2023
OI KHALIFA, AHMED khalifa/0000-0002-2918-7572; Abdullah,
   Bassem/0009-0002-7500-5220; Wahba, Ayman/0000-0002-7840-9469
CR Akinkuolie B. B., 2011, 2011 Fifth International Conference on Genetic and Evolutionary Computing, P163, DOI 10.1109/ICGEC.2011.47
   [Anonymous], 2010, P 32 ACMIEEE INT C S, DOI DOI 10.1145/1806799.1806831
   ANTEBI O, 2012, MOBILE COMPUTING APP, V95, P283
   Dhillon S., 2013, P IEEE 2 INT C MOB S
   El-Kassas W., 2014, 9 INT C COMP ENG SYS
   El-Kassas W, 2014, P C E CHALL E 2014, P1
   El-Kassas W. S., 2015, AIN SHAMS ENG J
   ElYamany HF, 2013, 2013 FOURTH INTERNATIONAL CONFERENCE ON E-LEARNING "BEST PRACTICES IN MANAGEMENT, DESIGN AND DEVELOPMENT OF E-COURSES: STANDARDS OF EXCELLENCE AND CREATIVITY, P325, DOI 10.1109/ECONF.2013.43
   Friberg J., 2014, THESIS
   Heitk├a┬Atter H., 2013, P 28 ANN ACM S APPL, P526, DOI [https://doi.org/10.1145/2480362.2480464, DOI 10.1145/2480362.2480464]
   Heitkötter H, 2013, LECT NOTES COMPUT SC, V7939, P405
   Heitkötter H, 2013, LECT NOTES BUS INF P, V140, P120
   Holzinger Andreas, 2012, Multidisciplinary Research and Practice for Information Systems. International Cross-Domain Conference and Workshop on Availability, Reliability and Security (CD-ARES 2012). Proceedings, P176, DOI 10.1007/978-3-642-32498-7_14
   Kim H. J., 2015, P 8 AUSTR WORKSH HLT, P55
   Kim T., 2013, P MULT UB ENG, V240, P313
   Klima P, 2013, LECT NOTES COMPUT SC, V8112, P442, DOI 10.1007/978-3-642-53862-9_56
   Lin PJ, 2014, LECT NOTES ELECTR EN, V293, P1093, DOI 10.1007/978-3-319-04573-3_133
   Ohrt J, 2012, COMPUTER, V45, P72, DOI 10.1109/MC.2012.121
   Palmieri Manuel, 2012, 2012 16th International Conference on Intelligence in Next Generation Networks (ICIN 2012): Realising the Power of the Network, P179, DOI 10.1109/ICIN.2012.6376023
   Perchat J, 2013, PROCEDIA COMPUT SCI, V19, P1004, DOI 10.1016/j.procs.2013.06.140
   Puder A., 2010, P 8 INT C PRINC PRAC
   Puder A, 2009, ELECTRON NOTES THEOR, V253, P97, DOI 10.1016/j.entcs.2009.11.017
   Puder A, 2013, MOBILE NETW APPL, V18, P3, DOI 10.1007/s11036-012-0374-2
   Raj CPR, 2012, ANNU IEEE IND CONF, P625
   Ribeiro A, 2012, 2012 EIGHTH INTERNATIONAL CONFERENCE ON THE QUALITY OF INFORMATION AND COMMUNICATIONS TECHNOLOGY (QUATIC 2012), P255, DOI 10.1109/QUATIC.2012.56
   Schlachter T, 2013, IFIP ADV INF COMM TE, V413, P196
   Smutny P., 2012, 2012 13th International Carpathian Control Conference (ICCC 2012), P653, DOI 10.1109/CarpathianCC.2012.6228727
   Tunali V., 2015, P 2 UL YON BIL SIST, P1357
   Xanthopoulos S., 2013, P 6 BALK C INF, P213
   Zhong H., 2010, P 32 ACM IEEE INT C, V1
NR 30
TC 9
Z9 11
U1 0
U2 8
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD NOV 1
PY 2016
VL 42
IS 11
BP 1036
EP 1053
DI 10.1109/TSE.2016.2543223
PG 18
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA ED5BK
UT WOS:000388866100003
DA 2024-07-18
ER

PT J
AU Börstler, J
   Paech, B
AF Borstler, Jurgen
   Paech, Barbara
TI The Role of Method Chains and Comments in Software Readability and
   Comprehension-An Experiment
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Software readability; software comprehension; software measurement;
   comments; method chains; experiment
ID PROGRAM COMPREHENSION; IDENTIFIER NAMES; CLOZE PROCEDURE; STYLE;
   DOCUMENTATION; MAINTENANCE; QUALITY; IMPACT; TOOLS
AB Software readability and comprehension are important factors in software maintenance. There is a large body of research on software measurement, but the actual factors that make software easier to read or easier to comprehend are not well understood. In the present study, we investigate the role of method chains and code comments in software readability and comprehension. Our analysis comprises data from 104 students with varying programming experience. Readability and comprehension were measured by perceived readability, reading time and performance on a simple cloze test. Regarding perceived readability, our results show statistically significant differences between comment variants, but not between method chain variants. Regarding comprehension, there are no significant differences between method chain or comment variants. Student groups with low and high experience, respectively, show significant differences in perceived readability and performance on the cloze tests. Our results do not show any significant relationships between perceived readability and the other measures taken in the present study. Perceived readability might therefore be insufficient as the sole measure of software readability or comprehension. We also did not find any statistically significant relationships between size and perceived readability, reading time and comprehension.
C1 [Borstler, Jurgen] Blekinge Inst Technol, Dept Software Engn, S-37179 Karlskrona, Sweden.
   [Paech, Barbara] Heidelberg Univ, Dept Comp Sci, D-69118 Heidelberg, Germany.
C3 Blekinge Institute Technology; Ruprecht Karls University Heidelberg
RP Börstler, J (corresponding author), Blekinge Inst Technol, Dept Software Engn, S-37179 Karlskrona, Sweden.
EM jurgen.borstler@bth.se; paech@informatik.uni-heidelberg.de
RI Börstler, Jürgen/IWE-4001-2023; Paech, Barbara/AAI-5997-2020
OI Börstler, Jürgen/0000-0003-0639-4234; 
CR Ambler ScottW., 1999, The Elements of Java Style
   [Anonymous], 1996, Pattern oriented software architecture: a system of patters
   [Anonymous], 2002, Software Design-Cognitive Aspects
   [Anonymous], 1978, The Elements of Programming Style
   [Anonymous], THESIS
   Arisholm E, 2006, IEEE T SOFTWARE ENG, V32, P365, DOI 10.1109/TSE.2006.59
   Binkley D, 2013, EMPIR SOFTW ENG, V18, P219, DOI 10.1007/s10664-012-9201-4
   Borstler J., 2015, SOFTW QUALITY J
   Borstler J., 2007, UMINF0723 UM U DEP C
   Buse RPL, 2010, IEEE T SOFTWARE ENG, V36, P546, DOI 10.1109/TSE.2009.70
   Butler S, 2010, EUR CON SFTWR MTNCE, P156, DOI 10.1109/CSMR.2010.27
   Chen JC, 2009, J SYST SOFTWARE, V82, P981, DOI 10.1016/j.jss.2008.12.036
   COOK C, 1984, INFORM PROCESS MANAG, V20, P199, DOI 10.1016/0306-4573(84)90050-5
   Deimel L., 1990, CMUSEI90EM3
   DuBay W, 2004, The principles of readability
   ELSHOFF JL, 1982, COMMUN ACM, V25, P512, DOI 10.1145/358589.358596
   Erlikh L., 2000, IT Professional, V2, P17, DOI 10.1109/6294.846201
   Foster J. R., 1993, THESIS
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   Fowler M., 2010, Domain-specific languages
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   Green R, 2011, COMMUN ACM, V54, P57, DOI 10.1145/2043174.2043191
   HALL WE, 1986, IEEE T SOFTWARE ENG, V12, P608, DOI 10.1109/TSE.1986.6312957
   Hargis G., 2000, ACM Journal of Computer Documentation, V24, P122, DOI 10.1145/344599.344634
   Jedlitschka A., 2008, Guide to advanced empirical software engineering, P201, DOI DOI 10.1007/978-1-84800-044-5_8
   Kerievsky J., 2005, Refactoring to Patterns
   Kernighan B. W., 1988, The C programming language, V2
   Keskin Y. E., 2014, FLUENT INTERFACE MOR
   Kim M, 2014, IEEE T SOFTWARE ENG, V40, P633, DOI 10.1109/TSE.2014.2318734
   Kintsch W., 1979, Perspectives in memory research
   Klare G.R., 2000, ACM Journal of Computer Documentation, V24, P148, DOI DOI 10.1145/344599.344645
   KNUTH DE, 1984, COMPUT J, V27, P97, DOI 10.1093/comjnl/27.2.97
   LaToza T. D., 2006, 28th International Conference on Software Engineering Proceedings, P492, DOI 10.1145/1134285.1134355
   Lawrie D, 2007, EMPIR SOFTW ENG, V12, P359, DOI 10.1007/s10664-006-9032-2
   Lethbridge TC, 2003, IEEE SOFTWARE, V20, P35, DOI 10.1109/MS.2003.1241364
   LIEBERHERR KJ, 1989, IEEE SOFTWARE, V6, P38, DOI 10.1109/52.35588
   Marinescu R, 2011, IEEE INT WORK C SO, P65, DOI 10.1109/SCAM.2011.9
   Martin R. C., 2008, Clean Code: A Handbook of Agile Software Craftsmanship
   Nguyen V, 2010, P 26 INT C SOFTW MAI, P1, DOI DOI 10.1109/ICSM.2010.5609554
   Norcio AF., 1982, Indentation, documentation and programmer comprehension, P118
   Nurvitadhi E., 2003, P 33 ANN FRONT ED, V1
   OMAN PW, 1991, J SYST SOFTWARE, V15, P287, DOI 10.1016/0164-1212(91)90044-7
   Posnett D, 2011, P 8 WORKING C MINING, P73
   Riel AJ., 1996, Object-Oriented Design Heuristics
   Siegmund J, 2014, EMPIR SOFTW ENG, V19, P1299, DOI 10.1007/s10664-013-9286-4
   Smith M., 1992, ACCOUNT AUDIT ACCOUN, V5, P84, DOI DOI 10.1108/09513579210019549
   Spinellis D, 2010, IEEE SOFTWARE, V27, P18, DOI 10.1109/MS.2010.95
   Storey MA, 2006, SOFTWARE QUAL J, V14, P187, DOI 10.1007/s11219-006-9216-4
   Sutter Herb, 2004, C++ coding standards: 101 rules, guidelines, and best practices
   Takang AA, 1996, J PROGRAM LANG, V4, P143
   TENNY T, 1988, IEEE T SOFTWARE ENG, V14, P1271, DOI 10.1109/32.6171
   Vermeulen A, 2000, The elements of Java (tm) style
   VONMAYRHAUSER A, 1995, COMPUTER, V28, P44, DOI 10.1109/2.402076
   Wohlin C., 2012, Experimentation in Software Engineering
   Woodfield S. N., 1981, 5th International Conference on Software Engineering, P215
   Yi Guo, 2011, 2011 18th Working Conference on Reverse Engineering, P239, DOI 10.1109/WCRE.2011.36
   Yip S. W. L., 1994, Proceedings. 1994 First Asia-Pacific Software Engineering Conference, P70, DOI 10.1109/APSEC.1994.465272
NR 57
TC 25
Z9 27
U1 0
U2 4
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD SEP
PY 2016
VL 42
IS 9
BP 886
EP 898
DI 10.1109/TSE.2016.2527791
PG 13
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA DX8UU
UT WOS:000384666100005
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Huang, CH
   Peled, DA
   Schewe, S
   Wang, F
AF Huang, Chung-Hao
   Peled, Doron A.
   Schewe, Sven
   Wang, Farn
TI A Game-Theoretic Foundation for the Maximum Software Resilience against
   Dense Errors
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Fault tolerance; resilience; formal verification; model-checking; game;
   strategy; complexity
AB Safety-critical systems need to maintain their functionality in the presence of multiple errors caused by component failures or disastrous environment events. We propose a game-theoretic foundation for synthesizing control strategies that maximize the resilience of a software system in defense against a realistic error model. The new control objective of such a game is called k-resilience. In order to be k-resilient, a system needs to rapidly recover from infinitely many waves of a small number of up to k close errors provided that the blocks of up to k errors are separated by short time intervals, which can be used by the system to recover. We first argue why we believe this to be the right level of abstraction for safety critical systems when local faults are few and far between. We then show how the analysis of k-resilience problems can be formulated as a model-checking problem of a mild extension to the alternating-time m-calculus (AMC). The witness for k resilience, which can be provided by the model checker, can be used for providing control strategies that are optimal with respect to resilience. We show that the computational complexity of constructing such optimal control strategies is low and demonstrate the feasibility of our approach through an implementation and experimental results.
C1 [Huang, Chung-Hao; Wang, Farn] Natl Taiwan Univ, Grad Inst Elect Engn, Taipei 106, Taiwan.
   [Peled, Doron A.] Bar Ilan Univ, Dept Comp Sci, Ramat Gan, Israel.
   [Schewe, Sven] Univ Liverpool, Dept Comp Sci, Verificat Grp, Liverpool, Merseyside, England.
   [Wang, Farn] Natl Taiwan Univ, Dept Elect Engn, Taipei 106, Taiwan.
C3 National Taiwan University; Bar Ilan University; University of
   Liverpool; National Taiwan University
RP Huang, CH (corresponding author), Natl Taiwan Univ, Grad Inst Elect Engn, Taipei 106, Taiwan.
EM yyergg@gmail.com; doron.peled@gmail.com; sven.schewe@liverpool.ac.uk;
   farn@ntu.edu.tw
OI Schewe, Sven/0000-0002-9093-9518
FU ISF Grant [126/12]; Engineering and Physical Science Research Council
   (EPSRC), United Kingdom [EP/H046623/1]; Grant MOST, Taiwan, ROC
   [103-2221-E-002-150-MY3]; Research Center for Information Technology
   Innovation (CITI), Academia Sinica, Taiwan, ROC; EPSRC [EP/H046623/1]
   Funding Source: UKRI
FX This article is an extended version of [25]. All tool implementation and
   related experiment materials are available at
   https://github.com/yyergg/Resil. Peled is partially supported by ISF
   Grant 126/12: "Efficient Synthesis Method of Control for Concurrent
   Systems." Schewe is supported by the Engineering and Physical Science
   Research Council (EPSRC), grant EP/H046623/1, United Kingdom. Wang is
   supported by Grant MOST 103-2221-E-002-150-MY3, Taiwan, ROC and a
   research project by Research Center for Information Technology
   Innovation (CITI), Academia Sinica, Taiwan, ROC. For more information,
   please email to farn@ntu.edu.tw.
CR Abd-El-Malek M., 2005, ACM SIGOPS Operating Systems Review, P59, DOI DOI 10.1145/1095810.1095817
   Alur R, 2002, J ACM, V49, P672, DOI 10.1145/585265.585270
   [Anonymous], 2000, Advances in Temporal Logic, DOI [10.1007/978-94-015-9586-5 6 [p. 11, DOI 10.1007/978-94-015-9586-56[P.11]
   [Anonymous], 1962, Proc. Internat. Congr. Mathematicians (Stockholm)
   [Anonymous], 2014, HSCC HSCC 14, DOI DOI 10.1145/2562059.2562128
   [Anonymous], 1989, C RECORD 16 ANN ACM, DOI DOI 10.1145/75277.75293
   ARORA A, 1993, IEEE T SOFTWARE ENG, V19, P1015, DOI 10.1109/32.256850
   ASARIN E, 1995, HYBRID SYSTEMS, V2
   Attie PC, 2004, ACM T PROGR LANG SYS, V26, P125, DOI 10.1145/963778.963782
   BELINA F, 1989, COMPUT NETWORKS ISDN, V16, P311, DOI 10.1016/0169-7552(89)90078-0
   Bloem Roderick, 2009, Proceedings of the 2009 9th International Conference Formal Methods in Computer-Aided Design (FMCAD), P85, DOI 10.1109/FMCAD.2009.5351139
   Bloem R, 2014, ELECTRON PROC THEOR, P34, DOI 10.4204/EPTCS.157.7
   Buchi J. R, 1990, Studies in Logic and the Foundations of Mathematics, P425, DOI [10.1007/978-1-4613-8928-6_23, DOI 10.1007/978-1-4613-8928-6_23]
   BUCHI JR, 1969, T AM MATH SOC, V138, P295, DOI 10.2307/1994916
   Castro M, 1999, USENIX ASSOCIATION PROCEEDINGS OF THE THIRD SYMPOSIUM ON OPERATING SYSTEMS DESIGN AND IMPLEMENTATION (OSDI '99), P173, DOI 10.1145/571637.571640
   Clement A., 2009, P 6 USENIX S NETWORK, V9, P153
   Cowling J, 2006, USENIX ASSOCIATION 7TH USENIX SYMPOSIUM ON OPERATING SYSTEMS DESIGN AND IMPLEMENTATION, P177
   DIJKSTRA EW, 1986, DISTRIB COMPUT, V1, P5, DOI 10.1007/BF01843566
   Doyen L., 2010, 2010 Tenth International Conference on Application of Concurrency to System Design (ACSD 2010), P77, DOI 10.1109/ACSD.2010.26
   Ebnenasir Ali, 2008, International Journal on Software Tools for Technology Transfer, V10, P455, DOI 10.1007/s10009-008-0083-0
   Emerson EA, 1999, LECT NOTES COMPUT SC, V1703, P142
   Fearnley J, 2011, LEIBNIZ INT PR INFOR, V13, P399, DOI 10.4230/LIPIcs.FSTTCS.2011.399
   Girault A, 2009, FORM METHOD SYST DES, V35, P190, DOI 10.1007/s10703-009-0084-y
   Guerraoui R, 2010, EUROSYS'10: PROCEEDINGS OF THE EUROSYS 2010 CONFERENCE, P363
   Hopcroft J.E., 1979, Introduction to Automata Theory, Languages, and Computation
   Huang CH, 2012, ELECTRON P THEOR COM, P15, DOI 10.4204/EPTCS.96.2
   IMMERMAN N, 1988, SIAM J COMPUT, V17, P935, DOI 10.1137/0217058
   IMMERMAN N, 1981, J COMPUT SYST SCI, V22, P384, DOI 10.1016/0022-0000(81)90039-8
   Jin H., 2004, International Journal on Software Tools for Technology Transfer, V6, P102, DOI 10.1007/s10009-004-0146-9
   Kotla R, 2009, ACM T COMPUT SYST, V27, DOI [10.1145/1323293.1294267, 10.1145/1658357.1658358]
   LUBACHEVSKY BD, 1984, ACTA INFORM, V21, P125, DOI 10.1007/BF00289237
   Miller DM, 1998, INT SYM MVL, P52, DOI 10.1109/ISMVL.1998.679287
   Papadimitriou C. H., 1994, Computational Complexity
   Pnueli A., 1989, P 16 INT C AUT LANG, P652
   Pradhan D.K., 1996, Fault-tolerant computer system design
   RABIN MO, 1969, T AM MATH SOC, V141, P1, DOI 10.2307/1995086
   RAMANATHAN P, 1990, COMPUTER, V23, P33, DOI 10.1109/2.58235
   Rushby J., 1992, P FTRTFT, P237, DOI DOI 10.1007/3-540-55092-5_13
   Schewe S, 2007, LECT NOTES COMPUT SC, V4407, P127, DOI 10.1007/978-3-540-71410-1_10
   Sommerville Ian, 2016, Software engineering 8
   Thomas W, 1994, LECT NOTES COMPUT SC, V880, P149
   Wang F, 2004, LECT NOTES COMPUT SC, V3116, P553
   Wang F, 2015, INT J SOFTW TOOLS TE, V17, P223, DOI 10.1007/s10009-014-0312-7
NR 43
TC 6
Z9 6
U1 0
U2 7
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUL
PY 2016
VL 42
IS 7
BP 605
EP 622
DI 10.1109/TSE.2015.2510001
PG 18
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA DR7AX
UT WOS:000380053500001
DA 2024-07-18
ER

PT J
AU Chavez, HM
   Shen, WW
   France, RB
   Mechling, BA
   Li, GY
AF Chavez, Hector M.
   Shen, Wuwei
   France, Robert B.
   Mechling, Benjamin A.
   Li, Guangyuan
TI An Approach to Checking Consistency between UML Class Model and Its Java
   Implementation
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Class diagrams; UML; Java; model checking
AB Model Driven Engineering (MDE) aims to expedite the software development process by providing support for transforming models to running systems. Many modeling tools provide forward engineering features, which automatically translate a model into a skeletal program that developers must complete. Inconsistencies between a design model and its implementation, however, can arise, particularly when a final implementation is developed dependently on the code from which it was generated. Manually checking that an implementation conforms to its model is a daunting task. Thus, an MDE tool that developers can use to check that implementations conform to their models can significantly improve a developer's productivity. This paper presents a model-based approach for testing whether or not an implementation satisfies the constraints imposed by its design model. Our model-based testing approach aims to efficiently reduce the test input space while supporting branch coverage criteria. To evaluate the approach's ability to uncover inconsistencies, we developed a prototypical tool and applied it to the Eclipse UML2 projects. We were able to uncover inconsistencies between the models and their implementations using the tool.
C1 [Chavez, Hector M.; Shen, Wuwei; Mechling, Benjamin A.] Western Michigan Univ, Comp Sci, Kalamazoo, MI 49008 USA.
   [France, Robert B.] Colorado State Univ, Comp Sci, Ft Collins, CO 80523 USA.
   [Li, Guangyuan] Chinese Acad Sci, Inst Software, State Key Lab Comp Sci, Beijing, Peoples R China.
C3 Western Michigan University; Colorado State University; Chinese Academy
   of Sciences; Institute of Software, CAS
RP Chavez, HM; Shen, WW; Mechling, BA (corresponding author), Western Michigan Univ, Comp Sci, Kalamazoo, MI 49008 USA.; France, RB (corresponding author), Colorado State Univ, Comp Sci, Ft Collins, CO 80523 USA.; Li, GY (corresponding author), Chinese Acad Sci, Inst Software, State Key Lab Comp Sci, Beijing, Peoples R China.
EM h6chavezchav@wmich.edu; wuwei.shen@wmich.edu; france@cs.colostate.edu;
   benjamin.a.mechling@wmich.edu; ligy@ios.ac.cn
RI Li, Geoffrey Ye/ABE-8992-2020
OI Li, Geoffrey Ye/0000-0002-7894-2415
FU National Natural Science Foundation of China [61472406]; Open Project of
   Shanghai Key Lab. of Trustworthy Computing [07dz22304201302]
FX The authors thank many anonymous reviewers for their constructive and
   detailed comments during the long journey of this project. Additionally,
   they really appreciate their colleagues Drs. Betty Cheng, Laura Dillon,
   Tao Xie and Zijiang Yang for their feedback, discussion, and support of
   this project. Dr. Li is supported by the National Natural Science
   Foundation of China (No. 61472406) and the Open Project of Shanghai Key
   Lab. of Trustworthy Computing (No.07dz22304201302).
CR Abdurazik A, 2000, LECT NOTES COMPUT SC, V1939, P383
   Aldrich J, 2002, ACM SIGPLAN NOTICES, V37, P311, DOI 10.1145/583854.582448
   Ammann Paul, 2008, Introduction to software testing, V1st
   Anandan S, 2012, MATER SCI FORUM, V712, P1, DOI 10.4028/www.scientific.net/MSF.712.1
   [Anonymous], P ACM SIGSOFT INT S
   [Anonymous], 2010, Journal on Satisfiability, Boolean Modeling and Computation, DOI DOI 10.3233/SAT190075
   [Anonymous], P WORKSH GRAPH TRANS
   Barbier F, 2003, IEEE T SOFTWARE ENG, V29, P459, DOI 10.1109/TSE.2003.1199074
   Benoit B., 2009, MODEL DRIVEN ENG DIS
   Boyapati C., 2002, Software Engineering Notes, V27, P123, DOI 10.1145/566171.566191
   Boyapati C, 2003, ACM SIGPLAN NOTICES, V38, P213, DOI 10.1145/640128.604156
   Briand Lionel, 2012, Modelling Foundations and Applications. Proceedings 8th European Conference, ECMFA 2012, P74, DOI 10.1007/978-3-642-31491-9_8
   Chavez H., 2013, P ACM IEEE INT C MOD, P220
   Ciraci S, 2010, LECT NOTES COMPUT SC, V6418, P198, DOI 10.1007/978-3-642-16612-9_16
   Clarke D., 2003, P ACM C OBJ OR PROGR, P374
   Darga P. T., 2006, 21 ACM SIGPLAN C OB
   France RB, 2004, IEEE T SOFTWARE ENG, V30, P193, DOI 10.1109/TSE.2004.1271174
   Gogolla M., 2003, P 6 INT C UN MOD LAN, P386
   Gonzalez Carlos A., 2012, Model Driven Engineering Languages and Systems. Proceedings 15th International Conference, MODELS 2012, P449, DOI 10.1007/978-3-642-33666-9_29
   Gueheneuc Y., 2004, P ACM SIGPLAN C OBJ
   HOGG J, 1991, SIGPLAN NOTICES, V26, P271
   IBM, 2010, RAT SOFTW ARCH
   Igarashi A, 2001, ACM T PROGR LANG SYS, V23, P396, DOI 10.1145/503502.503505
   Kim DK, 2008, SOFTWARE QUAL J, V16, P329, DOI 10.1007/s11219-008-9048-5
   Kollmann R, 2001, EIGHTH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P81, DOI 10.1109/WCRE.2001.957812
   Larsson D., 2004, ELECT NOTES THEOR CO, V102, P3
   Li XS, 2005, IEEE INT C ENG COMP, P411
   Marinov D, 2001, 16TH ANNUAL INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2001), PROCEEDINGS, P22, DOI 10.1109/ASE.2001.989787
   Mechling B. A., 2015, TR150101 WMUCS
   Milanova A., 2005, ASE, P76
   OMG, 2011, OMG UN MOD LANG OMG
   OMG, 2006, OBJ CONSTR LANG VERS
   Pires W, 2008, APPLIED COMPUTING 2008, VOLS 1-3, P735
   Rasch H, 2003, LECT NOTES COMPUT SC, V2884, P229
   Reactive Systems Inc, 2003, SOFTW TEST VAL REACT
   Schönböck J, 2013, ASIA PAC SOFWR ENG, P75, DOI 10.1109/APSEC.2013.21
   Sen K., 2005, P 10 EUR SOFTW ENG C, V30, P263, DOI DOI 10.1145/1081706.1081750
   The Eclipse Foundation, 2013, ECL MOD MDT
   Turner CJ, 2003, 18TH IEEE INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P271, DOI 10.1109/ASE.2003.1240319
   Visser W., 2003, Automated Software Engineering, V10, P203, DOI 10.1023/A:1022920129859
   Warmer J., 2003, OBJECT CONSTRAINT LA, Vsecond
   Yu F., 2007, Proceedings of the 6th joint meeting of the European Software Engineering Conference and the ACM SIGSOFT International Symposium on Foundations of Software Engineering (ESEC/FSE), P331
NR 42
TC 13
Z9 14
U1 0
U2 11
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD APR
PY 2016
VL 42
IS 4
BP 322
EP 344
DI 10.1109/TSE.2015.2488645
PG 23
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA DK6LP
UT WOS:000375035600002
DA 2024-07-18
ER

PT J
AU Paolieri, M
   Horváth, A
   Vicario, E
AF Paolieri, Marco
   Horvath, Andras
   Vicario, Enrico
TI Probabilistic Model Checking of Regenerative Concurrent Systems
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Probabilistic model checking; reachability; stochastic Petri net; Markov
   regenerative process; Markov renewal theory
ID PETRI NETS
AB We consider the problem of verifying quantitative reachability properties in stochastic models of concurrent activities with generally distributed durations. Models are specified as stochastic time Petri nets and checked against Boolean combinations of interval until operators imposing bounds on the probability that the marking process will satisfy a goal condition at some time in the interval [alpha, beta] after an execution that never violates a safety property. The proposed solution is based on the analysis of regeneration points in model executions: a regeneration is encountered after a discrete event if the future evolution depends only on the current marking and not on its previous history, thus satisfying the Markov property. We analyze systems in which multiple generally distributed timers can be started or stopped independently, but regeneration points are always encountered with probability 1 after a bounded number of discrete events. Leveraging the properties of regeneration points in probability spaces of execution paths, we show that the problem can be reduced to a set of Volterra integral equations, and we provide algorithms to compute their parameters through the enumeration of finite sequences of stochastic state classes encoding the joint probability density function (PDF) of generally distributed timers after each discrete event. The computation of symbolic PDFs is limited to discrete events before the first regeneration, and the repetitive structure of the stochastic process is exploited also before the lower bound a, providing crucial benefits for large time bounds. A case study is presented through the probabilistic formulation of Fischer's mutual exclusion protocol, a well-known real-time verification benchmark.
C1 [Paolieri, Marco; Vicario, Enrico] Univ Florence, Dept Informat Engn, Via Santa Marta 3, I-50139 Florence, Italy.
   [Horvath, Andras] Univ Turin, Dept Comp Sci, Corso Svizzera 185, I-10149 Turin, Italy.
C3 University of Florence; University of Turin
RP Paolieri, M; Vicario, E (corresponding author), Univ Florence, Dept Informat Engn, Via Santa Marta 3, I-50139 Florence, Italy.; Horváth, A (corresponding author), Univ Turin, Dept Comp Sci, Corso Svizzera 185, I-10149 Turin, Italy.
EM marco.paolieri@unifi.it; enrico.vicario@unifi.it; horvath@di.unito.it
RI Paolieri, Marco/KIG-1853-2024; vicario, enrico/ABG-4344-2020; Paolieri,
   Marco/KFR-8807-2024
OI Paolieri, Marco/0000-0001-5110-203X; vicario,
   enrico/0000-0002-4983-4386; Paolieri, Marco/0000-0001-5110-203X;
   Horvath, Andras/0000-0002-8210-545X
CR ALUR R, 1994, THEOR COMPUT SCI, V126, P183, DOI 10.1016/0304-3975(94)90010-8
   Alur R, 2006, LECT NOTES COMPUT SC, V3927, P19
   [Anonymous], 1995, Modeling and Analysis of Stochastic Systems
   Aziz Adnan, 2000, ACM Trans. Comput. Logic, V1, P162, DOI DOI 10.1145/343369.343402
   Baier C, 2003, IEEE T SOFTWARE ENG, V29, P524, DOI 10.1109/TSE.2003.1205180
   Ballarini Paolo, 2013, Quantitative Evaluation of Systems. 10th International Conference, QEST 2013. Proceedings: LNCS 8054, P355, DOI 10.1007/978-3-642-40196-1_30
   Behrmann G, 2011, SOFTWARE PRACT EXPER, V41, P133, DOI 10.1002/spe.1006
   Bengtsson J., 1996, Hybrid Systems III. Verification and Control, P232, DOI 10.1007/BFb0020949
   Bobbio A., 1995, Proceedings. International Computer Performance and Dependability Symposium (Cat. No.95TH8034), P124, DOI 10.1109/IPDS.1995.395811
   Brunner H., 1986, NUMERICAL SOLUTION V, V268
   Bryans J., 2003, ACM Transactions on Computational Logic, V4, P452, DOI 10.1145/937555.937558
   Bucci G, 2005, INT CONF QUANT EVAL, P13, DOI 10.1109/QEST.2005.17
   Carnevali Laura, 2011, Computer Safety, Reliability, and Security. Proceedings 30th International Conference, SAFECOMP 2011, P409, DOI 10.1007/978-3-642-24270-0_30
   Carnevali L, 2009, IEEE T SOFTWARE ENG, V35, P178, DOI 10.1109/TSE.2008.101
   Chen TL, 2009, IEEE S LOG, P309, DOI 10.1109/LICS.2009.21
   CHOI H, 1994, PERFORM EVALUATION, V20, P337, DOI 10.1016/0166-5316(94)90021-3
   Ciardo G, 2006, PERFORM EVALUATION, V63, P578, DOI 10.1016/j.peva.2005.06.001
   CIARDO G, 1994, IEEE T SOFTWARE ENG, V20, P506, DOI 10.1109/32.297939
   CINLAR E, 1975, MANAGE SCI, V21, P727, DOI 10.1287/mnsc.21.7.727
   Clark A, 2007, LECT NOTES COMPUT SC, V4486, P132
   Daws Conrado., 1996, HYBRID SYSTEMS 3, V1066, P208, DOI DOI 10.1007/BFB0020947
   Deavours DD, 2002, IEEE T SOFTWARE ENG, V28, P956, DOI 10.1109/TSE.2002.1041052
   Dill D. L., 1990, P INT WORKSH AUT VER, P197
   Dios JRMartinez-De., 2006, Physics for Radiation Protection, A Handbook, P1, DOI [10.1109/WAC.2006.375998, DOI 10.1109/WAC.2006.375998]
   Donatelli S, 2009, IEEE T SOFTWARE ENG, V35, P224, DOI 10.1109/TSE.2008.108
   Gafni E, 2002, SIAM J COMPUT, V31, P816
   GERMAN R, 1994, PERFORM EVALUATION, V20, P317, DOI 10.1016/0166-5316(94)90020-5
   Grunske L, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P31, DOI 10.1145/1368088.1368094
   Haas P. J., 2002, SPRING S OPERAT RES
   Horvath A., 2011, Proceedings of the 2011 Eighth International Conference on Quantitative Evaluation of Systems (QEST 2011), P131, DOI 10.1109/QEST.2011.23
   Horváth A, 2012, PERFORM EVALUATION, V69, P315, DOI 10.1016/j.peva.2011.11.002
   Infante Lopez G. G., 2001, Process Algebra and Probabilistic Methods. Performance Modelling and Verification. Joint International Workshop, PAPM-PROBMIV 2001. Proceedings (Lecture Notes in Computer Science Vol.2165), P57
   Katoen JP, 2011, PERFORM EVALUATION, V68, P90, DOI 10.1016/j.peva.2010.04.001
   Katoen JP, 2004, LECT NOTES COMPUT SC, V3185, P268
   Kwiatkowska M., 2004, International Journal on Software Tools for Technology Transfer, V6, P128, DOI 10.1007/s10009-004-0140-2
   Kwiatkowska Marta, 2011, Computer Aided Verification. Proceedings 23rd International Conference, CAV 2011, P585, DOI 10.1007/978-3-642-22110-1_47
   LYNCH N, 1992, REAL-TIME SYSTEMS SYMPOSIUM : PROCEEDINGS, P2, DOI 10.1109/REAL.1992.242681
   Puliafito A, 1998, PERFORM EVALUATION, V32, P1, DOI 10.1016/S0166-5316(97)00013-8
   Sanders W. H., 2001, Lectures on Formal Methods and Performance Analysis. First EEF/Euro Summer School on Trends in Computer Science. Revised Lectures (Lecture Notes in Computer Science Vol.2090), P315
   Sen K, 2005, LECT NOTES COMPUT SC, V3576, P266
   Trivedi Kishor S., 2009, Performance Evaluation Review, V36, P52, DOI 10.1145/1530873.1530884
   Trivedi K.S., 2001, Probability and statistics with reliability, queueing, and computer science applications, V2nd
   Vicario E, 2001, IEEE T SOFTWARE ENG, V27, P728, DOI 10.1109/32.940727
   Vicario E, 2009, IEEE T SOFTWARE ENG, V35, P703, DOI 10.1109/TSE.2009.36
   Younes H. L. S., 2006, International Journal on Software Tools for Technology Transfer, V8, P216, DOI 10.1007/s10009-005-0187-8
   Younes H. L. S., 2002, Computer Aided Verification. 14th International Conference, CAV 2002. Proceedings (Lecture Notes in Computer Science Vol.2404), P223
   Younes HLS, 2006, INFORM COMPUT, V204, P1368, DOI 10.1016/j.ic.2006.05.002
NR 47
TC 22
Z9 22
U1 0
U2 8
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD FEB
PY 2016
VL 42
IS 2
BP 153
EP 169
DI 10.1109/TSE.2015.2468717
PG 17
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA DE8GD
UT WOS:000370872900004
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Clarke, P
   O'Connor, RV
   Leavy, B
   Yilmaz, M
AF Clarke, Paul
   O'Connor, Rory V.
   Leavy, Brian
   Yilmaz, Murat
TI Exploring the Relationship between Software Process Adaptive Capability
   and Organisational Performance
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Software engineering; software engineering process; software
   development; software management
ID PROCESS IMPROVEMENT; AGILE METHODS; SCORECARD
AB Software development is a complex socio-technical activity, with the result that software development organisations need to establish and maintain robust software development processes. While much debate exists regarding the effectiveness of various software development approaches, no single approach is perfectly suited to all settings and no setting is unchanging. The capability to adapt the software process is therefore essential to sustaining an optimal software process. We designed an exploratory study to concurrently examine software process adaptive capability and organisational performance in 15 software development organisations, finding that companies with greater software process adaptive capability are shown to also experience greater business success. While our exploratory study of the complex relationship between these phenomena is limited in some respects, the findings indicate that software process adaptive capability may be worthy of further integration into software process engineering techniques. Software process adaptive capability may be an important organisational strength when deriving competitive advantage, and those responsible for the creation and evolution of software process models and methodologies may want to focus some of their future efforts in this area.
C1 [Clarke, Paul; O'Connor, Rory V.] Dublin City Univ, Sch Comp, Dublin 9, Ireland.
   [Clarke, Paul; O'Connor, Rory V.] Lero, Dublin, Ireland.
   [Leavy, Brian] Dublin City Univ, Sch Business, Dublin 9, Ireland.
   [Yilmaz, Murat] Canyaka Univ, Dept Comp Engn, Ankara, Turkey.
C3 Dublin City University; Dublin City University; Cankaya University
RP Clarke, P (corresponding author), Dublin City Univ, Sch Comp, Dublin 9, Ireland.
EM pclarke@computing.dcu.ie; roconnor@computing.dcu.ie; Brian.Leavy@dcu.ie;
   MYilmaz@cankaya.edu.tr
RI /T-8786-2019; Clarke, Paul/JAX-9606-2023
OI /0000-0002-2446-3224; Clarke, Paul/0000-0002-4487-627X; O'Connor,
   Rory/0000-0001-9253-0313
FU Science Foundation Ireland [03/CE2/I303 1]
FX This work is supported, in part, by Science Foundation Ireland grant
   03/CE2/I303 1 to Lero, the Irish Software Engineering Research Centre
   (www.lero.ie).
CR Aldrich H., 2001, ORG EVOLVING
   Aldrich H.E., 1979, Organizations and environments
   Anacleto A., 2004, 4 INT SPICE C PROC A, P33
   Andersen H., 2001, Proceedings of the Fourth SMESME International Conference, V4, P103
   [Anonymous], 2005, 15504 ISOIEC
   [Anonymous], CMUSEI2006TR008
   [Anonymous], 2017, 122072017 ISOIECIEEE
   [Anonymous], 2002, VTT PUBLICATIONS
   [Anonymous], 1992, CMUSEI92TR004
   [Anonymous], 2000, ISO 9001:2000
   [Anonymous], 2003, Official Journal of the European Union L, VL124, P36
   Ansoff I.H., 1965, CORPORATE STRATEGY
   Baddoo N, 2003, J SYST SOFTWARE, V66, P23, DOI 10.1016/S0164-1212(02)00060-2
   BASKERVILLE R, 2001, REALIGNING RES PRACT, P12
   Beck K., 1999, PROGRAMMING EXPLAINE
   BHARADWAJ SG, 1993, J MARKETING, V57, P83, DOI 10.2307/1252221
   Biro M., 2000, Software Process Improvement and Practice, V5, P213, DOI 10.1002/1099-1670(200012)5:4<213::AID-SPIP129>3.0.CO;2-0
   Boehm B., 2003, BALANCING AGILITY DI
   Bowers A. N., 2007, Software Process Improvement and Practice, V12, P283, DOI 10.1002/spip.326
   Brown M., 1996, Keeping score: Using the right metrics to drive world-class performance
   Cameron J, 2002, COMMUN ACM, V45, P72, DOI 10.1145/504729.504731
   Cater-Steel A., 2008, SOFTWARE PROCESS IMP
   Cater-Steel AP, 2001, 2001 AUSTRALIAN SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P262, DOI 10.1109/ASWEC.2001.948520
   Cepeda S., 2008, CROSSTALK J DEFENSE, V21, P14
   Clarke P., 2011, P 18 EUR C SYST SOFT, P27
   Clarke P, 2013, J SOFTW-EVOL PROC, V25, P981, DOI 10.1002/smr.1580
   Clarke P, 2012, COMM COM INF SC, V301, P1
   Clarke P, 2012, J SYST SOFTWARE, V85, P2356, DOI 10.1016/j.jss.2012.05.024
   Clarke P, 2012, INFORM SOFTWARE TECH, V54, P433, DOI 10.1016/j.infsof.2011.12.003
   Coleman G, 2008, J SYST SOFTWARE, V81, P772, DOI 10.1016/j.jss.2007.07.027
   Constantine L., 2012, METHODOLOGICAL AGILI
   Da Silva J. G., 2006, P 39 ANN HAW INT C S, p216b
   DeMarco T, 2002, COMPUTER, V35, P90, DOI 10.1109/MC.2002.1009175
   DEMARCO T, 1982, CONTROLLING SOFTWARE
   Dybå T, 2012, INT SYMP EMP SOFTWAR, P19, DOI 10.1145/2372251.2372256
   Dybå T, 2013, IEEE SOFTWARE, V30, P81, DOI 10.1109/MS.2013.4
   ECCLES RG, 1991, HARVARD BUS REV, V69, P131
   Ferreira AIF, 2007, PROC INT CONF SOFTW, P642
   Fitzgerald B, 2006, EUR J INFORM SYST, V15, P200, DOI 10.1057/palgrave.ejis.3000605
   Fowler M., 2001, Software Development, V9, P28
   Fricker S. A., 2013, SYSTEMS SOFTWARE SER, P155
   Garcia-Mireles G. A., 2013, P 20 EUR C SYST SOFT, P96
   Ghalayini AM, 1996, INT J OPER PROD MAN, V16, P63, DOI 10.1108/01443579610125787
   Gibson D., 2006, CMUSEI2006TR004
   Ginsberg M. P., 1995, CMUSEI94TR024 SOFTW
   Harper W., 1991, STATISTICS, V128
   Hart S., 1993, Journal of Marketing Management, V9, P23, DOI DOI 10.1080/0267257X.1993.9964215
   HAYES RH, 1980, HARVARD BUS REV, V58, P67
   Herbsleb J., 1994, BENEFITS CMM BASED S
   Herbsleb JD, 1996, PROC INT CONF SOFTW, P323, DOI 10.1109/ICSE.1996.493427
   Hinton PerryR., 1995, STAT EXPLAINED GUIDE
   Hudson M, 2001, INT J OPER PROD MAN, V21, P1096, DOI 10.1108/EUM0000000005587
   Hyde K., 2004, Software Process Improvement and Practice, V9, P217, DOI 10.1002/spip.205
   Jeners S., 2013, European Conference on Software Process Improvement, P167
   JENNINGS DF, 1994, STRATEGIC MANAGE J, V15, P459, DOI 10.1002/smj.4250150604
   Jones C., 2008, J DEFENSE SOFTWARE E, V21, P9
   Jost A. C., 2008, CROSSTALK J DEFENSE, V21, P22
   KAPLAN RS, 1992, HARVARD BUS REV, V70, P71
   Kennerley Mike., 2002, Business performance measurement: theory and practice
   Kettunen V., 2010, P 19 INT S SOFTW TES, P231, DOI [10.1145/1831708.1831737, DOI 10.1145/1831708.1831737]
   Lal R., 2011, THESIS
   Lawlis P, 1995, CROSSTALK, V8, P21
   Leung H. K. N., 2001, Software Process Improvement and Practice, V6, P67, DOI 10.1002/spip.137
   Lynch R.L., 1990, MEASURE UP YARDSTICK
   MAIDIQUE MA, 1985, RES POLICY, V14, P299, DOI 10.1016/0048-7333(85)90001-0
   Mintzberg H., 1988, STRATEGY SAFARI GUID
   Morgan RE, 2003, J BUS RES, V56, P163, DOI 10.1016/S0148-2963(01)00218-1
   Neely A. D., 2002, PERFORMANCE PRIME SC
   Nelson R.R., 1982, EVOL THEOR
   Niazi M, 2009, INFORM SOFTWARE TECH, V51, P1231, DOI 10.1016/j.infsof.2009.03.001
   OBRIEN RM, 1979, AM SOCIOL REV, V44, P851, DOI 10.2307/2094532
   Parker C., 2000, Work Studies, V49, P63, DOI [10.1108/00438020010311197, DOI 10.1108/00438020010311197]
   PAULK MC, 1998, P 16 ANN PAC NW SOFT, P350
   Petersen K, 2009, INT SYMP EMP SOFTWAR, P402
   Petter S.C., 2004, 37th Hawaii International Conference on System Sciences, P1
   Pino FJ, 2008, SOFTWARE QUAL J, V16, P237, DOI 10.1007/s11219-007-9038-z
   Poppendieck M., 2003, Lean Software Development: An Agile Tollkit
   Reid GC, 2000, SMALL BUS ECON, V14, P165, DOI 10.1023/A:1008168226739
   Reifer DJ, 2002, IEEE SOFTWARE, V19, P16, DOI 10.1109/MS.2002.1020280
   Sanders M., 1998, SPIRE HDB BETTER FAS
   Schwaber K., 2002, AGILE SOFTWARE DEV S
   Scott L, 2002, INFORM SOFTWARE TECH, V44, P601, DOI 10.1016/S0950-5849(02)00080-0
   Serrano M., 2005, P 1 INT RES WORKSH P, P81
   Smolander K, 2013, 2013 2ND SEMAT WORKSHOP ON A GENERAL THEORY OF SOFTWARE ENGINEERING (GTSE), P27, DOI 10.1109/GTSE.2013.6613867
   Sureshchandar GS, 2005, MEAS BUS EXCELL, V9, P12, DOI 10.1108/13683040510602849
   Syed-Abdullah S, 2006, EMPIR SOFTW ENG, V11, P143, DOI 10.1007/s10664-006-5968-5
   Teece DJ, 2007, STRATEGIC MANAGE J, V28, P1319, DOI 10.1002/smj.640
   Truex D., 2000, Accounting, Management and Information Technologies, V10, P53, DOI 10.1016/S0959-8022(99)00009-0
   Unterkalmsteiner M, 2012, IEEE T SOFTWARE ENG, V38, P398, DOI 10.1109/TSE.2011.26
   van Solingen R, 2004, IEEE SOFTWARE, V21, P32, DOI 10.1109/MS.2004.1293070
   VanDeGrift T., 2004, SIGCSE Bulletin, V36, P2, DOI 10.1145/1028174.971306
   von Wangenheim CG, 2006, INFORM SOFTWARE TECH, V48, P890, DOI 10.1016/j.infsof.2005.12.010
   Waal A.A. d., 2003, MANAGE DECIS, V41, P688
   Whitworth E, 2007, AGILE 2007, PROCEEDINGS, P26, DOI 10.1109/AGILE.2007.60
   Williams L. A., 2000, P 13 C SOFTW ENG ED, P69
NR 95
TC 41
Z9 43
U1 0
U2 28
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD DEC
PY 2015
VL 41
IS 12
BP 1169
EP 1183
DI 10.1109/TSE.2015.2467388
PG 15
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science; Engineering
GA CY5TP
UT WOS:000366470700002
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Schumann, MA
   Drusinsky, D
   Michael, JB
   Wijesekera, D
AF Schumann, Michael A.
   Drusinsky, Doron
   Michael, James B.
   Wijesekera, Duminda
TI Modeling Human-in-the-Loop Security Analysis and Decision-Making
   Processes
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Formal methods; information assurance; process modeling; software
   engineering; statechart assertions; verification and validation
ID STATECHARTS; VERIFICATION; VALIDATION
AB This paper presents a novel application of computer-assisted formal methods for systematically specifying, documenting, statically and dynamically checking, and maintaining human-centered workflow processes. This approach provides for end-to-end verification and validation of process workflows, which is needed for process workflows that are intended for use in developing and maintaining high-integrity systems. We demonstrate the technical feasibility of our approach by applying it on the development of the US government's process workflow for implementing, certifying, and accrediting cross-domain computer security solutions. Our approach involves identifying human-in-the-loop decision points in the process activities and then modeling these via statechart assertions. We developed techniques to specify and enforce workflow hierarchies, which was a challenge due to the existence of concurrent activities within complex workflow processes. Some of the key advantages of our approach are: it results in development of a model that is executable, supporting both upfront and runtime checking of process-workflow requirements; aids comprehension and communication among stakeholders and process engineers; and provides for incorporating accountability and risk management into the engineering of process workflows.
C1 [Schumann, Michael A.] KEYW Corp, Hanover, MD 21060 USA.
   [Drusinsky, Doron] Naval Postgrad Sch, Dept Comp Sci, Monterey, CA 93943 USA.
   [Michael, James B.] Naval Postgrad Sch, Dept Comp Sci, Arlington, VA 22203 USA.
   [Michael, James B.] Naval Postgrad Sch, Dept Elect & Comp Engn, Arlington, VA 22203 USA.
   [Wijesekera, Duminda] George Mason Univ, Dept Comp Sci, Fairfax, VA 22030 USA.
C3 KeyW Corporation; United States Department of Defense; United States
   Navy; Naval Postgraduate School; United States Department of Defense;
   United States Navy; Naval Postgraduate School; United States Department
   of Defense; United States Navy; Naval Postgraduate School; George Mason
   University
RP Schumann, MA (corresponding author), KEYW Corp, 7740 Milestone Pkwy,Suite 400, Hanover, MD 21060 USA.
EM mschumann@keywcorp.com; ddrusins@nps.edu; bmichael@nps.edu;
   dwijesek@gmu.edu
CR Alegria J.A.H., 2010, DCC20106 U CHIL
   [Anonymous], 2004, Workflow Management: Models, Methods, and Systems
   ARLOW J, 1997, SOFTWARE PROCESS IMP, V3, P105
   Bishop M., 2002, Computer Security: Art and Science
   Bruegge B., 2009, OBJECT ORIENTED SOFT
   Clempner J, 2010, INT J AP MAT COM-POL, V20, P349, DOI 10.2478/v10006-010-0026-2
   Crane ML, 2007, SOFTW SYST MODEL, V6, P415, DOI 10.1007/s10270-006-0042-8
   Drusinsky Doron, 2008, 2008 Second IEEE International Conference on Secure System Integration and Reliability Improvement (SSIRI), P47, DOI 10.1109/SSIRI.2008.54
   Drusinsky D., 2006, Modeling and verification using UML statecharts: a working guide to reactive systems design, runtime modeling and execution-based model checking
   Drusinsky D., 2008, P IEEE INT C SYST SY
   Drusinsky D, 2006, P IEEE RAP SYST PROT, P17, DOI 10.1109/RSP.2006.12
   Drusinsky D, 2009, LECT NOTES COMPUT SC, V5795, P586, DOI 10.1007/978-3-642-04425-0_45
   Drusinsky Doron., 2011, Practical Uml-based Specification, Validation, and Verification of Mission-critical Software: Space Exploration and Defense Software Examples in Practice
   Emmerich W., 1991, Proceedings of the Sixth International Workshop on Software Specification and Design (Cat. No.91TH0388-9), P175, DOI 10.1109/IWSSD.1991.213063
   Gabbar HossamA., 2006, MODERN FORMAL METHOD
   Grady JO, 2009, SYSTEMS ENG, V12, P91, DOI 10.1002/sys.20112
   GRUHN V, 1992, PROCEEDINGS OF THE FIFTH INTERNATIONAL WORKSHOP ON COMPUTER-AIDED SOFTWARE ENGINEERING, P196, DOI 10.1109/CASE.1992.200150
   Gruhn V, 2007, SCI COMPUT PROGRAM, V65, P4, DOI 10.1016/j.scico.2006.08.003
   HAREL D, 1987, SCI COMPUT PROGRAM, V8, P231, DOI 10.1016/0167-6423(87)90035-9
   Hibdon V. S., 1996, Proceedings of the IEEE 1996 National Aerospace and Electronics Conference NAECON 1996 (Cat. No.96CH35934), P482, DOI 10.1109/NAECON.1996.517693
   Hoare CAR., 1985, Communicating Sequential Processes
   Hopcroft John E., 2007, INTRO AUTOMATA THEOR, V3rd
   Hurtado Alegria J. A., 2011, P 2011 INT C SOFTW S, P23, DOI 10.1145/1987875.1987882
   IAR Systems, 2012, IAR VISUALSTATE
   Karniel A, 2011, IEEE T SYST MAN CY A, V41, P476, DOI 10.1109/TSMCA.2010.2091954
   Kelley D., 1995, AUTOMATA FORMAL LANG
   Koehler J, 2002, SIXTH INTERNATIONAL ENTERPRISE DISTRIBUTED OBJECT COMPUTING CONFERENCE, PROCEEDINGS, P96, DOI 10.1109/EDOC.2002.1137700
   Michael JB, 2011, IEEE SOFTWARE, V28, P86, DOI 10.1109/MS.2011.151
   Monin J.F., 2003, UNDERSTANDING FORMAL
   Muelder A., 2011, YAKINDU
   Oxford English Dictionary, 2012, OR N
   Qiu Zongyan, 2010, 2010 Fifth International Symposium on Service Oriented System Engineering (SOSE 2010), P252, DOI 10.1109/SOSE.2010.39
   Rumbaugh J., 1991, OBJECT ORIENTED MODE
   Ryan P., 2000, MODELLING ANAL SECUR, Vfirst
   Schumann M., 2009, P IEEE INT C SYST SY
   Schumann M.A., 2009, IATAC NEWSLETTER FEB, V12, P26
   Schumann M.A., 2012, THESIS NAVAL POSTGRA
   Sindre G, 2000, 37TH INTERNATIONAL CONFERENCE ON TECHNOLOGY OF OBJECT-ORIENTED LANGUAGES AND SYSTEMS, PROCEEDINGS, P120, DOI 10.1109/TOOLS.2000.891363
   Sipser M., 2013, Introduction to the theory of computation, V3
   van Dongen BF, 2005, LECT NOTES COMPUT SC, V3520, P372
   Webster Noah, 1983, WEBSTERS NEW UNIVERS
   Wong PYH, 2008, LECT NOTES COMPUT SC, V5256, P355, DOI 10.1007/978-3-540-88194-0_22
   Yang D, 2003, ECBS 2003: 10TH IEEE INTERNATIONAL CONFERENCE AND WORKSHOP ON THE ENGINEERING OF COMPUTER-BASED SYSTEMS, PROCEEDINGS, P55
   Ye JH, 2008, 2008 INTERNATIONAL SYMPOSIUM ON INTELLIGENT INFORMATION TECHNOLOGY APPLICATION, VOL II, PROCEEDINGS, P70, DOI 10.1109/IITA.2008.68
NR 44
TC 9
Z9 10
U1 1
U2 27
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD FEB
PY 2014
VL 40
IS 2
BP 154
EP 166
DI 10.1109/TSE.2014.2302433
PG 13
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA AF4FD
UT WOS:000334666000004
DA 2024-07-18
ER

PT J
AU Madeyski, L
   Orzeszyna, W
   Torkar, R
   Józala, M
AF Madeyski, Lech
   Orzeszyna, Wojciech
   Torkar, Richard
   Jozala, Mariusz
TI Overcoming the Equivalent Mutant Problem: A Systematic Literature Review
   and a Comparative Experiment of Second Order Mutation
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Mutation testing; equivalent mutant problem; higher order mutation;
   second order mutation
ID GUIDELINES
AB Context. The equivalent mutant problem (EMP) is one of the crucial problems in mutation testing widely studied over decades. Objectives. The objectives are: to present a systematic literature review (SLR) in the field of EMP; to identify, classify and improve the existing, or implement new, methods which try to overcome EMP and evaluate them. Method. We performed SLR based on the search of digital libraries. We implemented four second order mutation (SOM) strategies, in addition to first order mutation (FOM), and compared them from different perspectives. Results. Our SLR identified 17 relevant techniques (in 22 articles) and three categories of techniques: detecting (DEM); suggesting (SEM); and avoiding equivalent mutant generation (AEMG). The experiment indicated that SOM in general and JudyDiffOp strategy in particular provide the best results in the following areas: total number of mutants generated; the association between the type of mutation strategy and whether the generated mutants were equivalent or not; the number of not killed mutants; mutation testing time; time needed for manual classification. Conclusions. The results in the DEM category are still far from perfect. Thus, the SEM and AEMG categories have been developed. The JudyDiffOp algorithm achieved good results in many areas.
C1 [Madeyski, Lech; Orzeszyna, Wojciech; Jozala, Mariusz] Wroclaw Univ Technol, Inst Informat, PL-50370 Wroclaw, Poland.
   [Orzeszyna, Wojciech] Blekinge Inst Technol, Karlskrona, Sweden.
   [Torkar, Richard] Chalmers Univ Technol, Dept Comp Sci & Engn, Div Software Engn, SE-41296 Gothenburg, Sweden.
C3 Wroclaw University of Science & Technology; Blekinge Institute
   Technology; Chalmers University of Technology
RP Madeyski, L (corresponding author), Wroclaw Univ Technol, Inst Informat, Wyb Wyspianskiego 27, PL-50370 Wroclaw, Poland.
EM lech.madeyski@pwr.wroc.pl
RI Madeyski, Lech/D-4986-2012
OI Madeyski, Lech/0000-0003-3907-3357
CR Adamopoulos K, 2004, LECT NOTES COMPUT SC, V3103, P1338
   Ammann Paul, 2008, Introduction to software testing, V1st
   [Anonymous], 1999, COMPLEXITY APPROXIMA, DOI DOI 10.1007/978-3-642-58412-1
   [Anonymous], PROTOCOL SYSTEMATIC
   [Anonymous], 2011, JUMBL CLASS LEV MUT
   [Anonymous], 2004, TECHNICAL REPORT
   [Anonymous], 1990, COMPUT INTRACTABILIT
   [Anonymous], 1979, HEURISTICS DETERMINI
   Arcuri A, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1, DOI 10.1145/1985793.1985795
   Babar MA, 2009, INT SYMP EMP SOFTWAR, P347
   Brereton P, 2007, J SYST SOFTWARE, V80, P571, DOI 10.1016/j.jss.2006.07.009
   Budd T. A., 1978, AFIPS Conference Proceedings vol.47. 1978 National Computer Conference, P623
   BUDD TA, 1982, ACTA INFORM, V18, P31, DOI 10.1007/BF00625279
   Changbing Ji, 2009, 2009 33rd Annual IEEE International Computer Software and Applications Conference (COMPSAC 2009), P556, DOI 10.1109/COMPSAC.2009.192
   Cook T. D., 1979, Quasi-experimentation: Design analysis issues for field settings
   Delamaro M.E., 1996, P C PERFORMABILITY C, P79
   DEMILLO RA, 1978, COMPUTER, V11, P34, DOI 10.1109/C-M.1978.218136
   Derezinska A., 2007, ANN GDANSK U TECHNOL, V13, P389
   Derezinska A, 2008, DEPCOS - RELCOMEX 2008: PROCEEDINGS OF THE INTERNATIONAL CONFERENCE ON DEPENDABILITY OF COMPUTER SYSTEMS, P261, DOI 10.1109/DepCoS-RELCOMEX.2008.51
   du Bousquet L, 2008, ELECTRON NOTES THEOR, V203, P35, DOI 10.1016/j.entcs.2008.05.009
   Eldh S, 2007, LECT NOTES COMPUT SC, V4581, P74
   Ellims M, 2007, TAIC PART 2007 - Testing: Academic and Industrial Conference - Practice and Research Techniques, Proceedings, P185, DOI 10.1109/TAIC.PART.2007.28
   GOODMAN LA, 1961, ANN MATH STAT, V32, P148, DOI 10.1214/aoms/1177705148
   Grün BJM, 2009, IEEE ICST WORKSHOP, P192, DOI 10.1109/ICSTW.2009.37
   HAMLET RG, 1977, IEEE T SOFTWARE ENG, V3, P279, DOI 10.1109/TSE.1977.231145
   Harman Mark, 2010, Proceedings of the IEEE Third International Conference on Software Testing Verification and Validation - Workshops (ICSTW 2010), P80, DOI 10.1109/ICSTW.2010.13
   Harman M, 2001, KLUW INT S ADV DATA, V24, P5
   Harman M, 2012, ACM COMPUT SURV, V45, DOI 10.1145/2379776.2379787
   Hierons R.M., 1999, J SOFTW TEST VERIFIC, V9, P233, DOI 10.1002/(SICI)1099-1689(199912)9:43.0.CO;2-3
   Hossain E, 2009, INT CONF GLOBAL SOFT, P175, DOI 10.1109/ICGSE.2009.25
   Irvine SA, 2007, TAIC PART 2007 - TESTING: ACADEMIC AND INDUSTRIAL CONFERENCE - PRACTICE AND RESEARCH TECHNIQUES, PROCEEDINGS, P169, DOI 10.1109/TAIC.PART.2007.38
   Jia Y., 2012, MUTATION TESTING REP
   Jia Y, 2008, EIGHTH IEEE INTERNATIONAL WORKING CONFERENCE ON SOURCE CODE ANALYSIS AND MANIPULATION, PROCEEDINGS, P249, DOI 10.1109/SCAM.2008.36
   Jia Y, 2009, INFORM SOFTWARE TECH, V51, P1379, DOI 10.1016/j.infsof.2009.04.016
   Kaminski G, 2009, SECOND INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION, AND VALIDATION, PROCEEDINGS, P386, DOI 10.1109/ICST.2009.13
   Khan K.S., 2001, 4 U YORK
   Khan SU, 2011, INFORM SOFTWARE TECH, V53, P693, DOI 10.1016/j.infsof.2010.08.003
   KING KN, 1991, SOFTWARE PRACT EXPER, V21, P685, DOI 10.1002/spe.4380210704
   Kintis M, 2010, ASIA PAC SOFWR ENG, P300, DOI 10.1109/APSEC.2010.42
   Kitchenham B., 2007, Joint Report
   Kitchenham BA, 2002, IEEE T SOFTWARE ENG, V28, P721, DOI 10.1109/TSE.2002.1027796
   Kitchenham B, 2010, INFORM SOFTWARE TECH, V52, P792, DOI 10.1016/j.infsof.2010.03.006
   Kitchenham B, 2009, INT SYMP EMP SOFTWAR, P337, DOI 10.1109/esem.2009.5314238
   Kitchenham B, 2009, INFORM SOFTWARE TECH, V51, P7, DOI 10.1016/j.infsof.2008.09.009
   Langdon W.B., P TEST AC IND C PRAC, P21
   Langdon WB, 2010, J SYST SOFTWARE, V83, P2416, DOI 10.1016/j.jss.2010.07.027
   Ma YS, 2005, SOFTW TEST VERIF REL, V15, P97, DOI 10.1002/stvr.308
   Madeyski L., 2012, JUDY MUTATION TESTIN
   MADEYSKI L, 2008, Software Process: Improvement and Practice, V13, P281, DOI [10.1002/spip.382, DOI 10.1002/SPIP.382]
   Madeyski L., OVERCOMING EQUIVALEN
   Madeyski L, 2007, LECT NOTES COMPUT SC, V4589, P207
   Madeyski L, 2010, TEST-DRIVEN DEVELOPMENT, P1, DOI 10.1007/978-3-642-04288-1
   Madeyski L, 2010, IET SOFTW, V4, P32, DOI 10.1049/iet-sen.2008.0038
   Madeyski L, 2010, INFORM SOFTWARE TECH, V52, P169, DOI 10.1016/j.infsof.2009.08.007
   Martin E., 2007, P 16 INT C WORLD WID, P667, DOI DOI 10.1145/1242572.1242663
   Mresa E. S., 1999, Software Testing, Verification and Reliability, V9, P205, DOI 10.1002/(SICI)1099-1689(199912)9:4<205::AID-STVR186>3.0.CO;2-X
   Offut A. J., 1997, Software Testing, Verification and Reliability, V7, P165, DOI 10.1002/(SICI)1099-1689(199709)7:3<165::AID-STVR143>3.0.CO;2-U
   Offutt A. J., 1992, ACM Transactions on Software Engineering and Methodology, V1, P5, DOI 10.1145/125489.125473
   Offutt A. J., 1994, Software Testing, Verification and Reliability, V4, P131, DOI 10.1002/stvr.4370040303
   Offutt AJ, 1996, COMPASS '96 - PROCEEDINGS OF THE ELEVENTH ANNUAL CONFERENCE ON COMPUTER ASSURANCE, P224, DOI 10.1109/CMPASS.1996.507890
   Offutt AJ, 2001, KLUW INT S ADV DATA, V24, P34
   Offutt Jeff., 2006, Proceedings of the 2006 International Workshop on Automation of Software Test, P78, DOI DOI 10.1145/1138929.1138945
   Papadakis Mike, 2010, Proceedings of the IEEE Third International Conference on Software Testing Verification and Validation - Workshops (ICSTW 2010), P90, DOI 10.1109/ICSTW.2010.50
   Papadimitriou C. H., 1994, Computational Complexity
   Polo M, 2009, SOFTW TEST VERIF REL, V19, P111, DOI 10.1002/stvr.392
   Purushothaman R, 2005, IEEE T SOFTWARE ENG, V31, P511, DOI 10.1109/TSE.2005.74
   Rosenthal JA, 1996, J SOC SERV RES, V21, P37, DOI 10.1300/J079v21n04_02
   Schopfel J., 2010, P 12 INT C GRAY LIT
   Schuler David, 2010, Proceedings of the Third IEEE International Conference on Software Testing, Verification and Validation (ICST 2010), P45, DOI 10.1109/ICST.2010.30
   Schuler D, 2013, SOFTW TEST VERIF REL, V23, P353, DOI 10.1002/stvr.1473
   Schuler D, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P297, DOI 10.1145/1595696.1595750
   Schuler D, 2009, ISSTA 2009: INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P69
   Smith BH, 2007, TAIC PART 2007 - TESTING: ACADEMIC AND INDUSTRIAL CONFERENCE - PRACTICE AND RESEARCH TECHNIQUES, PROCEEDINGS, P193, DOI 10.1109/TAIC.PART.2007.12
   Thies A., 2010, P 32 INT C SOFTW ENG, P425
   Vincenzi AMR, 2002, INT J SOFTW ENG KNOW, V12, P675, DOI 10.1142/S021819400200113X
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
   Wong W. Eric, 2001, MUTATION TESTING NEW
   Yue Jia, 2011, IEEE Transactions on Software Engineering, V37, P649, DOI 10.1109/TSE.2010.62
   Zhu H, 1997, ACM COMPUT SURV, V29, P366, DOI 10.1145/267580.267590
NR 79
TC 118
Z9 124
U1 0
U2 17
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JAN
PY 2014
VL 40
IS 1
BP 23
EP 42
DI 10.1109/TSE.2013.44
PG 20
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA AF4FB
UT WOS:000334665800003
OA Green Submitted, Green Published, Bronze
DA 2024-07-18
ER

PT J
AU Ali, NM
   Hosking, J
   Grundy, J
AF Ali, Norhayati Mohd
   Hosking, John
   Grundy, John
TI A Taxonomy and Mapping of Computer-Based Critiquing Tools
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Design critics; critiquing systems; critic taxonomy; software tool
   support; survey
ID CRITICS; DESIGN; SOFTWARE; SYSTEMS; SUPPORT; RECOMMENDERS
AB Critics have emerged in recent times as a specific tool feature to support users in computer-mediated tasks. These computer-supported critics provide proactive guidelines or suggestions for improvement to designs, code, and other digital artifacts. The concept of a critic has been adopted in various domains, including medical, programming, software engineering, design sketching, and others. Critics have been shown to be an effective mechanism for providing feedback to users. We propose a new critic taxonomy based on extensive review of the critic literature. The groups and elements of our critic taxonomy are presented and explained collectively with examples, including the mapping of 13 existing critic tools, predominantly for software engineering and programming education tasks to the taxonomy. We believe this critic taxonomy will assist others in identifying, categorizing, developing, and deploying computer-supported critics in a range of domains.
C1 [Ali, Norhayati Mohd] Univ Putra Malaysia, Fac Comp Sci & Informat Technol, Software Engn & Informat Syst Dept, Serdang 43400, Selangor, Malaysia.
   [Hosking, John] Australian Natl Univ, Coll Engn & Comp Sci, Canberra, ACT 0200, Australia.
   [Grundy, John] Swinburne Univ Technol, Ctr Comp & Engn Software Syst, Hawthorn, Vic 3122, Australia.
C3 Universiti Putra Malaysia; Australian National University; Swinburne
   University of Technology
RP Ali, NM (corresponding author), Univ Putra Malaysia, Fac Comp Sci & Informat Technol, Software Engn & Informat Syst Dept, Serdang 43400, Selangor, Malaysia.
EM hayati@upm.edu.my; john.hosking@anu.edu.au; jgrundy@swin.edu.au
RI Ali, Norhayati Mohd/AAD-8635-2019; Grundy, John/AAF-1716-2019
OI Grundy, John/0000-0003-4928-7076; Hosking, John/0000-0002-4776-3828;
   Mohd Ali, Norhayati/0000-0002-9739-0492
FU FRST Software Process and Product Improvement project; Ministry of
   Higher Education Malaysia; Universiti Putra Malaysia
FX The authors gratefully acknowledge the financial assistance of the FRST
   Software Process and Product Improvement project, the Ministry of Higher
   Education Malaysia, and the Universiti Putra Malaysia in undertaking
   this research.
CR Ali Norhayati Mohd, 2010, Proceedings of 2010 International Symposium on Information Technology (ITSim 2010), P1152, DOI 10.1109/ITSIM.2010.5561498
   Ali NM, 2010, ASE 2010 25 IEEE ACM, P297
   Ali NM, 2009, S VIS LANG HUM CEN C, P111, DOI 10.1109/VLHCC.2009.5295286
   [Anonymous], 1986, Expert Critiquing Systems: Practice-Based Medical Consultation by Computer
   [Anonymous], KNOWL ACQUIS
   Bergenti F, 2000, 12 INT C SOFTW ENG K, P336
   Bézivin J, 2006, ELECTRON NOTES THEOR, V152, P69, DOI 10.1016/j.entcs.2006.01.015
   Blackwell A., 1999, 11 ANN WORKSH PSYCH, P24
   Bolcer G. A., 1995, Automated Software Engineering, V2, P203, DOI 10.1007/BF00871797
   Bosansky B., 2009, 2 INT S APPL SCI BIO, P1
   Burke R, 2002, USER MODEL USER-ADAP, V12, P331, DOI 10.1023/A:1021240730564
   Chen L, 2012, USER MODEL USER-ADAP, V22, P125, DOI [10.1007/s11257-011-9115-7, 10.1007/s11257-011-9108-6]
   Chen L, 2009, USER MODEL USER-ADAP, V19, P167, DOI 10.1007/s11257-008-9057-x
   Chesñevar CI, 2006, DATA KNOWL ENG, V59, P293, DOI 10.1016/j.datak.2005.09.005
   Cheung W.K., 2012, COMMUNICATION
   Coelho W., 2007, J ED RESOURCES COMPU, V7
   Cook S, 1999, LECT NOTES COMPUT SC, V1723, P372
   Dashofy EM, 2005, ACM T SOFTW ENG METH, V14, P199, DOI 10.1145/1061254.1061258
   FISCHER G, 1991, DECIS SUPPORT SYST, V7, P355, DOI 10.1016/0167-9236(91)90064-I
   Fischer G., 1990, SIGCHI Bulletin, P183
   FISCHER G, 1989, IEEE SOFTWARE, V6, P44, DOI 10.1109/52.16901
   FISCHER G, 1991, ACM T INFORM SYST, V9, P123, DOI 10.1145/123078.128727
   FISCHER G, 1991, INT J MAN MACH STUD, V35, P695, DOI 10.1016/S0020-7373(05)80184-1
   Fischer G., 2012, P INT WORK C ADV VIS
   Fischer G., 1987, Proceedings of the 10th international joint conference on Artificial intelligence, V1, P177
   Florijn Gern., 2002, RevJava - Design critiques and architectural conformance checking for Java software
   Fu MC, 1997, J COMPUT CIVIL ENG, V11, P60, DOI 10.1061/(ASCE)0887-3801(1997)11:1(60)
   Gertner AS, 1998, IEEE INTELL SYST APP, V13, P32, DOI 10.1109/5254.653222
   Green T.R.G., 1998, COGNITIVE DIMENSIONS
   Grundy J, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P819, DOI 10.1145/1368088.1368210
   Irandoust H., 2006, 2003321 DRDC VALC TR
   Kelly S, 1996, LECT NOTES COMPUT SC, V1080, P1
   Kleppe A, 2002, LECT NOTES COMPUT SC, V2263, P213
   Knauss E., 2010, COMMUNICATION
   Knauss E, 2009, PROC INT CONF SOFTW, P587, DOI 10.1109/ICSE.2009.5070562
   Kong C.S., 2009, P 17 INT C COMP ED, P19
   Lee C, 2009, COMPUT ASSIST LANG L, V22, P57, DOI 10.1080/09588220802613807
   Lemke A. C., 1990, AAAI-90 Proceedings. Eighth National Conference on Artificial Intelligence, P479
   Lin Qiu, 2008, Journal of Interactive Learning Research, V19, P119
   McCarthy K., 2006, 2006 International Conference on Intelligent User Interfaces, P267, DOI 10.1145/1111449.1111506
   McCarthy KK, 2005, Proceedings of the Thirty-Eighth Annual Conference of the American Association of Bovine Practitioners, P175, DOI 10.1145/1040830.1040871
   Nakakoji K., 1993, P 1 EUR WORKSH TOP C, P446
   NAKAKOJI K, 1995, P ACM MULT 95, P467
   Oh Y, 2004, MAKING PEN BASED INT
   Oh Y., 2008, P 13 INT C ASS COMP, P161
   Pisan Y., 2012, COMMUNICATION
   Pisan Yusuf., 2003, Proceedings of the fifth Australasian conference on Computing education - Volume 20, ACE'03, P59
   Qiu L., 2003, P INT C COMP ED
   Reilly J, 2005, KNOWL-BASED SYST, V18, P143, DOI 10.1016/j.knosys.2004.10.005
   Riesbeck C. K., 1998, IUI '98. 1998 International Conference on Intelligent User Interfaces, P145, DOI 10.1145/268389.268417
   Robbins J.E., 1998, TECHNICAL REPORT
   Robbins JE, 2000, INFORM SOFTWARE TECH, V42, P79, DOI 10.1016/S0950-5849(99)00083-X
   Robbins JE, 1998, KNOWL-BASED SYST, V11, P47, DOI 10.1016/S0950-7051(98)00055-0
   SILVERMAN BG, 1992, AI MAG, V13, P45
   SILVERMAN BG, 1992, COMMUN ACM, V35, P106, DOI 10.1145/129852.129861
   Souza C.R. B. d., 2003, 15 INT C SOFTWARE EN, P196
   Souza CRB, 2000, FIFTEENTH IEEE INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P313, DOI 10.1109/ASE.2000.873686
   Stolze M., 1994, P 3 INT C ART INT DE, P1
   Sumner Tamara., 1997, Proceedings of the ACM CHI Conference on Human Factors in Computing Systems Proc. (CHI) 1997, P83, DOI DOI 10.1145/258549
   Tianfield H, 2004, ARTIF INTELL REV, V22, P271, DOI 10.1007/s10462-004-4330-9
   TROCHIM WMK, 1989, EVAL PROGRAM PLANN, V12, P355, DOI 10.1016/0149-7189(89)90052-9
   Tyugu E., 2007, Algorithms and Architectures of Artificial Intelligence
   Zhu NP, 2007, J SYST SOFTWARE, V80, P1390, DOI 10.1016/j.jss.2006.10.028
NR 63
TC 10
Z9 12
U1 3
U2 19
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD NOV
PY 2013
VL 39
IS 11
BP 1494
EP 1520
DI 10.1109/TSE.2013.32
PG 27
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 245YN
UT WOS:000326501200003
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Carvajal, L
   Moreno, AM
   Sánchez-Segura, MI
   Seffah, A
AF Carvajal, Laura
   Moreno, Ana M.
   Sanchez-Segura, Maria-Isabel
   Seffah, Ahmed
TI Usability through Software Design
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Software usability; software design; software design patterns
AB Over the past two decades, the HCI community has proposed specific features that software applications should include to overcome some of the most common usability problems. However, incorporating such usability features into software applications may not be a straightforward process for software developers who have not been trained in usability (i.e., determining when, how, and why usability features should been considered). We have defined a set of usability guidelines for software development to help software engineers incorporate particular usability features into their applications. In this paper, we focus on the software design artifacts provided by the guidelines. We detail the structure of the proposed design artifacts and how they should be used according to the software development process and software architecture used in each application. We have tested our guidelines in an academic setting. Preliminary validation shows that the use of the guidelines reduces development time, improves the quality of the resulting designs, and significantly decreases the perceived complexity of the usability features from the developers' perspective.
C1 [Carvajal, Laura; Moreno, Ana M.] Univ Politecn Madrid, Fac Informat, E-28660 Madrid, Spain.
   [Sanchez-Segura, Maria-Isabel] Univ Carlos III Madrid, Dept Comp Sci, Madrid 28911, Spain.
   [Seffah, Ahmed] Concordia Univ, Montreal, PQ, Canada.
C3 Universidad Politecnica de Madrid; Universidad Carlos III de Madrid;
   Concordia University - Canada
RP Carvajal, L (corresponding author), Univ Politecn Madrid, Fac Informat, Campus Montegancedo, E-28660 Madrid, Spain.
EM lauraelena.carvajal@upm.es; ammoreno@fi.upm.es; misanche@inf.uc3m.es;
   seffah@encs.concordia.ca
RI Moreno, Ana M./AAC-1166-2020
OI Moreno, Ana M./0000-0001-8397-6794; SANCHEZ-SEGURA,
   MARIA-ISABEL/0000-0002-2339-7851
CR BASS L, 2001, CMUSEI2001TR005
   Bass L., 2002, J SYST SOFTWARE, V66, P188
   Bias R G, 2005, COST JUSTIFYING USAB
   Carvajal L., 2012, THESIS U POLITECNICA
   Cruz-Lemus JA, 2011, INFORM SOFTWARE TECH, V53, P1391, DOI 10.1016/j.infsof.2011.07.002
   Davis A., 2006, P 14 IEEE INT C REQ, P11
   Ferre X., 2003, P INTERACT C
   Fischer H, 2011, LECT NOTES COMPUT SC, V6776, P28, DOI 10.1007/978-3-642-21753-1_4
   Folmer E, 2005, LECT NOTES COMPUT SC, V3425, P38
   ISO/IEC, 2001, Technical Report, V1st
   John B, 2009, P 1 ACM SIGCHI S ENG
   John BE, 2005, LECT NOTES COMPUT SC, V3425, P1
   Juristo N, 2007, IEEE T SOFTWARE ENG, V33, P744, DOI 10.1109/TSE.2007.70741
   Juristo N, 2007, J SYST SOFTWARE, V80, P1506, DOI 10.1016/j.jss.2007.01.006
   Kujala S., 2005, HUMAN CTR SOFTWARE E
   Nebe K, 2009, LECT NOTES COMPUT SC, V5610, P652, DOI 10.1007/978-3-642-02574-7_73
   Nielsen J., 2008, ALERTBOX         JAN
   Patrick Meyer J., 2008, EXPANDED KRUSKAL WAL
   Ricca F, 2010, IEEE T SOFTWARE ENG, V36, P96, DOI 10.1109/TSE.2009.69
   Seffah A, 2004, COMMUN ACM, V47, P71, DOI 10.1145/1035134.1035136
   Seffah A, 2008, J SYST SOFTWARE, V81, P1845, DOI 10.1016/j.jss.2008.04.037
   United Nations Educational Scientific and Cultural Organization (UNESCO), 2018, INT TECHN GUID SEX E
   Vanderdonckt J, 1999, INTERACT COMPUT, V12, P81, DOI 10.1016/S0953-5438(99)00019-3
NR 23
TC 32
Z9 33
U1 5
U2 41
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD NOV
PY 2013
VL 39
IS 11
BP 1582
EP 1596
DI 10.1109/TSE.2013.29
PG 15
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 245YN
UT WOS:000326501200008
DA 2024-07-18
ER

PT J
AU Kocaguneli, E
   Menzies, T
   Keung, J
   Cok, D
   Madachy, R
AF Kocaguneli, Ekrem
   Menzies, Tim
   Keung, Jacky
   Cok, David
   Madachy, Ray
TI Active Learning and Effort Estimation: Finding the Essential Content of
   Software Effort Estimation Data
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Software cost estimation; active learning; analogy; k-NN
ID PREDICTION
AB Background: Do we always need complex methods for software effort estimation (SEE)? Aim: To characterize the essential content of SEE data, i.e., the least number of features and instances required to capture the information within SEE data. If the essential content is very small, then 1) the contained information must be very brief and 2) the value added of complex learning schemes must be minimal. Method: Our QUICK method computes the euclidean distance between rows (instances) and columns (features) of SEE data, then prunes synonyms (similar features) and outliers (distant instances), then assesses the reduced data by comparing predictions from 1) a simple learner using the reduced data and 2) a state-of-the-art learner (CART) using all data. Performance is measured using hold-out experiments and expressed in terms of mean and median MRE, MAR, PRED(25), MBRE, MIBRE, or MMER. Results: For 18 datasets, QUICK pruned 69 to 96 percent of the training data (median = 89 percent). K 1 nearest neighbor predictions (in the reduced data) performed as well as CART's predictions (using all data). Conclusion: The essential content of some SEE datasets is very small. Complex estimation methods may be overelaborate for such datasets and can be simplified. We offer QUICK as an example of such a simpler SEE method.
C1 [Kocaguneli, Ekrem; Menzies, Tim] W Virginia Univ, Lane Dept Comp Sci & Elect Engn, Morgantown, WV 26506 USA.
   [Keung, Jacky] City Univ Hong Kong, Dept Comp Sci, Hong Kong, Hong Kong, Peoples R China.
   [Cok, David] GrammaTech Inc, Ithaca, NY USA.
   [Madachy, Ray] Naval Postgraduate Sch, Monterey, CA 93943 USA.
C3 West Virginia University; City University of Hong Kong; United States
   Department of Defense; United States Navy; Naval Postgraduate School
RP Kocaguneli, E (corresponding author), W Virginia Univ, Lane Dept Comp Sci & Elect Engn, Morgantown, WV 26506 USA.
EM kocaguneli@gmail.com; tim@menzies.us; jackykeung@gmail.com;
   dcok@grammatech.com; rjmadach@nps.edu
RI Keung, Jacky/ABA-7089-2020; Menzies, Tim/X-7680-2019; Keung,
   Jacky/X-4693-2019
OI Menzies, Tim/0000-0002-5040-3196; Keung, Jacky/0000-0002-3803-9600
FU US National Science Foundation [CCF: 1017330, CCF: 1017263]; US Army
   Research Laboratory [W911QX-10-C-0066]
FX The work was funded by US National Science Foundation grants CCF:
   1017330 and CCF: 1017263. The research reported in this
   document/presentation was performed in connection with
   contract/instrument W911QX-10-C-0066 with the US Army Research
   Laboratory. The views and conclusions contained in this
   document/presentation are those of the authors and should not be
   interpreted as presenting the official policies or position, either
   expressed or implied, of the US Army Research Laboratory or the US
   Government unless so designated by other authorized documents. Citation
   of manufacturers or trade names does not constitute an official
   endorsement or approval of the use thereof. The US Government is
   authorized to reproduce and distribute reprints for Government purposes
   notwithstanding any copyright notation hereon. The authors would like to
   thank Brad Clark, Brendan Murphy, Jairus Hihn, and Ricardo Valerdi for
   their invaluable feedback and time.
CR ALBRECHT AJ, 1983, IEEE T SOFTWARE ENG, V9, P639, DOI 10.1109/TSE.1983.235271
   Alpaydin E, 2004, INTRO MACHINE LEARNI
   [Anonymous], 2000, Software Cost Estimation with COCOMO II
   [Anonymous], P JOINT C INT SOC PA
   [Anonymous], P CREST OP WORKSH OC
   [Anonymous], P INT WORKSH MACH LE
   [Anonymous], 2002, Applied Statistics for Software Managers
   [Anonymous], P NEUR INF PROC SYST
   Arnold A., 2007, P 7 IEEE INT C DAT M, P77, DOI [10.1109/ICDMW.2007.109, DOI 10.1109/ICDMW.2007.109]
   Bakir A, 2011, SOFTWARE QUAL J, V19, P537, DOI 10.1007/s11219-010-9112-9
   Balcan MF, 2009, J COMPUT SYST SCI, V75, P78, DOI 10.1016/j.jcss.2008.07.003
   Boehm BW., 1981, Software Engineering Economics
   Bowring J. F., 2004, Software Engineering Notes, V29, P195, DOI 10.1145/1013886.1007539
   Breiman L, 1998, BIOMETRICS, DOI [10.1201/9781315139470, DOI 10.2307/2530946]
   Briand L. C., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P313, DOI 10.1109/ICSE.1999.841022
   CHANG CL, 1974, IEEE T COMPUT, VC 23, P1179, DOI 10.1109/T-C.1974.223827
   Corazza A., 2010, Proceedings of the 6th international conference on predictive models in software engineering, P4
   Dejaeger K, 2012, IEEE T SOFTWARE ENG, V38, P375, DOI 10.1109/TSE.2011.55
   Foss T, 2003, IEEE T SOFTWARE ENG, V29, P985, DOI 10.1109/TSE.2003.1245300
   Hassan A.E, 2010, Proceedings of the FSE/SDP workshop on Future of Software Engineering Research, P161
   Jorgensen M, 2004, J SYST SOFTWARE, V70, P37, DOI 10.1016/S0164-1212(02)00156-5
   Jorgensen M, 2007, IEEE T SOFTWARE ENG, V33, P33, DOI 10.1109/TSE.2007.256943
   Jorgensen M, 2009, IEEE T SOFTWARE ENG, V35, P368, DOI 10.1109/TSE.2009.2
   Kadoda G., 2000, UK CBR Workshop, P1
   KEMERER CF, 1987, COMMUN ACM, V30, P416, DOI 10.1145/22899.22906
   Keung J., 2012, Automated Software Eng., P1
   Keung JW, 2008, ASIA PAC SOFWR ENG, P495, DOI 10.1109/APSEC.2008.43
   KITCHENHAM B, 1993, PROC INT CONF SOFTW, P477, DOI 10.1109/ICSE.1993.346018
   Kleijnen JPC, 1997, J STAT COMPUT SIM, V57, P111, DOI 10.1080/00949659708811805
   Kocaguneli E, 2012, IEEE T SOFTWARE ENG, V38, P1403, DOI 10.1109/TSE.2011.111
   Kocaguneli E, 2012, IEEE T SOFTWARE ENG, V38, P425, DOI 10.1109/TSE.2011.27
   Kocaguneli E, 2011, EUROMICRO CONF PROC, P419, DOI 10.1109/SEAA.2011.71
   Li YF, 2009, J SYST SOFTWARE, V82, P241, DOI 10.1016/j.jss.2008.06.001
   Lokan C., 2009, Proceedings of the Thirty-Second Australasian Conference on Computer Science - Volume 91, P47
   Lokan C, 2009, INT SYMP EMP SOFTWAR, P111, DOI 10.1109/ESEM.2009.5316019
   Ma Y, 2012, INFORM SOFTWARE TECH, V54, P248, DOI 10.1016/j.infsof.2011.09.007
   Mendes E, 2003, EMPIR SOFTW ENG, V8, P163, DOI 10.1023/A:1023062629183
   Mendes E, 2012, LECT NOTES BUS INF P, V102, P315
   Menzies T, 2006, IEEE T SOFTWARE ENG, V32, P883, DOI 10.1109/TSE.2006.114
   Menzies T, 2010, AUTOMAT SOFTW ENG, V17, P409, DOI 10.1007/s10515-010-0070-z
   Mittas N, 2013, IEEE T SOFTWARE ENG, V39, P537, DOI 10.1109/TSE.2012.45
   MIYAZAKI Y, 1994, J SYST SOFTWARE, V27, P3, DOI 10.1016/0164-1212(94)90110-4
   Pan SJ, 2010, IEEE T KNOWL DATA EN, V22, P1345, DOI 10.1109/TKDE.2009.191
   Shepperd M, 1997, IEEE T SOFTWARE ENG, V23, P736, DOI 10.1109/32.637387
   Shepperd M, 2001, IEEE T SOFTWARE ENG, V27, P1014, DOI 10.1109/32.965341
   Shepperd M, 2012, INFORM SOFTWARE TECH, V54, P820, DOI 10.1016/j.infsof.2011.12.008
   Walkerden F., 1999, Empirical Software Engineering, V4, P135, DOI 10.1023/A:1009872202035
   Wallace Byron C., 2010, P 16 ACM SIGKDD INT, P173, DOI DOI 10.1145/1835804.1835829
   Xie T., 2004, Formal Approaches to Software Testing, P1100
NR 49
TC 61
Z9 65
U1 0
U2 20
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD AUG
PY 2013
VL 39
IS 8
BP 1040
EP 1053
DI 10.1109/TSE.2012.88
PG 14
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 191BU
UT WOS:000322388400001
DA 2024-07-18
ER

PT J
AU di Bella, E
   Fronza, I
   Phaphoom, N
   Sillitti, A
   Succi, G
   Vlasenko, J
AF di Bella, Enrico
   Fronza, Ilenia
   Phaphoom, Nattakarn
   Sillitti, Alberto
   Succi, Giancarlo
   Vlasenko, Jelena
TI Pair Programming and Software Defects-A Large, Industrial Case Study
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Pair programming; software defects; case study
ID DESIGN; IMPACT; SUPPORT; SYSTEM
AB In the last decade, there has been increasing interest in pair programming (PP). However, despite the existing work, there is still a lack of substantial evidence of the effects of PP in industrial environments. To address this issue, we have analyzed the work of a team of 17 industrial developers for 14 months. The team is part of the IT department of a large Italian manufacturing company; it adopts a customized version of extreme programming (XP). We have investigated the effects of PP on software quality in five different scenarios. The results show that PP appears to provide a perceivable but small effect on the reduction of defects in these settings.
C1 [di Bella, Enrico] Univ Genoa, Dept Econ & Quantitat Methods, I-16126 Genoa, Italy.
   [Fronza, Ilenia; Phaphoom, Nattakarn; Sillitti, Alberto; Succi, Giancarlo; Vlasenko, Jelena] Free Univ Bozen Bolzano, CASE, I-39100 Bolzano, Italy.
C3 University of Genoa; Free University of Bozen-Bolzano
RP di Bella, E (corresponding author), Univ Genoa, Dept Econ & Quantitat Methods, Via Vivaldi 5, I-16126 Genoa, Italy.
EM edibella@economia.unige.it; ilenia.fronza@unibz.it;
   nattakarn.phaphoom@unibz.it; alberto.sillitti@unibz.it;
   giancarlo.succi@unibz.it; jelena.vlasenko@stud-inf.unibz.it
RI Di Bella, Enrico/AAX-7937-2020; Fronza, Ilenia/R-5792-2019; Succi,
   Giancarlo/AAZ-2354-2020
OI Di Bella, Enrico/0000-0002-2792-3476; Succi,
   Giancarlo/0000-0001-8847-0186; Fronza, Ilenia/0000-0003-0224-2452
CR Al-Kilidar H, 2005, 2005 AUSTRALIAN SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P78, DOI 10.1109/ASWEC.2005.24
   [Anonymous], 2010, Proceedings of the 32Nd ACM/IEEE International Conference on Software Engineering-Volume 1, ICSE'10
   [Anonymous], 2001, Resampling Methods: A Practical Guide to Data Analysis
   [Anonymous], 2005, ACM SIGCSE B, DOI DOI 10.1145/1151954.1067532
   [Anonymous], P ACM IEEE INT S EMP
   [Anonymous], 2002, Pair Programming Illuminated
   [Anonymous], 1991, Smoothing techniques: with implementation in S
   Arisholm E, 2007, IEEE T SOFTWARE ENG, V33, P65, DOI 10.1109/TSE.2007.17
   Baheti P., 2002, Extreme Programming and Agile Methods - XP/Agile Universe 2002 Second XP Universe and First Agile Universe Conference. Proceedings (Lecture Notes in Computer Science Vol.2418), P208
   Basili V., 1993, P 10 ANN C SOFTW MET
   Beck Kent, 1999, Extreme Programming Explained: Embrace Change
   Begel A, 2008, ESEM'08: PROCEEDINGS OF THE 2008 ACM-IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, P120
   Bellini E, 2005, LECT NOTES ARTIF INT, V3782, P455
   Berander P, 2004, 2004 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P167
   Bipp T, 2008, INFORM SOFTWARE TECH, V50, P231, DOI 10.1016/j.infsof.2007.05.006
   Bowman A., 1997, Applied Smoothing Techniques for Data Analysis: The Kernel Approach with S-Plus Illustrations
   Braught G., 2010, P 41 ACM TECHN S COM
   Canfora G, 2007, J SYST SOFTWARE, V80, P1317, DOI 10.1016/j.jss.2006.11.004
   Canfora G, 2006, 10TH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P195
   Chong J, 2007, PROC INT CONF SOFTW, P354
   Cockburn A., 2001, EXTREME PROGRAMMING, P223, DOI DOI 10.1108/00012530210448235
   Coman I., 2011, P 23 INT C SOFTW ENG
   Coman I.D., 2008, XP 08, P10
   Coman ID, 2009, PROC INT CONF SOFTW, P89, DOI 10.1109/ICSE.2009.5070511
   di Bella E, 2013, INFORM SCIENCES, V221, P72, DOI 10.1016/j.ins.2012.09.031
   Domino MA, 2007, INFORM TECHNOL MANAG, V8, P297, DOI 10.1007/s10799-007-0016-8
   Duque Rafael, 2008, 2008 The Third International Conference on Software Engineering Advances (ICSEA), P270, DOI 10.1109/ICSEA.2008.82
   Dybå T, 2007, IEEE SOFTWARE, V24, P12, DOI 10.1109/MS.2007.158
   Edwards R.L., 2010, ACM INROADS, V1, P48
   Favela J, 2004, LECT NOTES COMPUT SC, V3198, P215
   Fronza I, 2013, J SYST SOFTWARE, V86, P2, DOI 10.1016/j.jss.2012.06.025
   Fronza I, 2011, LECT NOTES BUS INF P, V77, P1
   Fronza I, 2009, INT SYMP EMP SOFTWAR, P226
   Gallis H, 2003, 2003 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P132, DOI 10.1109/ISESE.2003.1237972
   Hannay JE, 2008, IEEE T SOFTWARE ENG, V34, P242, DOI 10.1109/TSE.2008.13
   Hannay JE, 2010, IEEE T SOFTWARE ENG, V36, P61, DOI 10.1109/TSE.2009.41
   Harrison W., 2000, P 22 INT C SOFTW ENG
   Heiberg S., 2003, P INT C AG PROC EXTR
   Host M., 2000, Empirical Software Engineering, V5, P201, DOI 10.1023/A:1026586415054
   Hulkko H, 2005, PROC INT CONF SOFTW, P495
   Janes A., 2003, Extreme Programming and Agile Processes in Software Engineering. 4th International Conference, XP 2003. Proceedings (Lecture Notes in Computer Science Vol.2675), P205
   Katzenbach J.R., 1994, WISDOM TEAMS CREATIN
   Keeling M, 2010, LECT NOTES BUS INF P, V48, P287
   Koru AG, 2009, IEEE T SOFTWARE ENG, V35, P293, DOI 10.1109/TSE.2008.90
   Li Q., 2006, Nonparametric Econometrics: Theory and Practice
   Lui K. M., 2003, Extreme Programming and Agile Processes in Software Engineering. 4th International Conference, XP 2003. Proceedings (Lecture Notes in Computer Science Vol.2675), P225
   Lui KM, 2008, IEEE T SOFTWARE ENG, V34, P197, DOI 10.1109/TSE.2007.70755
   Lui KM, 2010, AGILE SOFTWARE DEVELOPMENT: CURRENT RESEARCH AND FUTURE DIRECTIONS, P143, DOI 10.1007/978-3-642-12575-1_7
   Madeyski L, 2007, LECT NOTES COMPUT SC, V4589, P207
   Madeyski L, 2006, LECT NOTES COMPUT SC, V4034, P278
   McDowell C, 2003, PROC INT CONF SOFTW, P602, DOI 10.1109/ICSE.2003.1201243
   MENDES E, 2006, P 11 ANN SIGCSE C IN, P108, DOI DOI 10.1145/1140124.1140155
   Moser R., 2007, P 8 INT C EXTREME PR, P18
   Müller MM, 2007, J SYST SOFTWARE, V80, P1460, DOI 10.1016/j.jss.2006.10.032
   Müller MM, 2006, INFORM SOFTWARE TECH, V48, P335, DOI 10.1016/j.infsof.2005.09.008
   Müller MM, 2005, J SYST SOFTWARE, V78, P166, DOI 10.1016/j.jss.2004.12.019
   Müller MM, 2004, EMPIR SOFTW ENG, V9, P335, DOI 10.1023/B:EMSE.0000039883.47173.39
   Murphy L., 2010, P 6 INT WORKSH COMP
   Nadaraya E.A., 1964, Theory of Probability and Its Applications, V61, P405, DOI [10.1137/1109020, DOI 10.1137/1109020]
   Nagappan N., 2003, SIGCSE Bulletin, V35, P359, DOI 10.1145/792548.612006
   NAWROCKI J, 2001, P EUR SOFTW CONTR ME
   Nickel A., 2010, Foundations of Digital Games (FDG) Conference (, P274
   Nosek JT, 1998, COMMUN ACM, V41, P105, DOI 10.1145/272287.272333
   Pedrycz W, 2001, J SYST SOFTWARE, V59, P65, DOI 10.1016/S0164-1212(01)00049-8
   Phaphoom N, 2011, LECT NOTES BUS INF P, V77, P208
   Phongpaibul Monvorath, 2007, 2007 First International Symposium on Empirical Software Engineering and Measurement, P265
   PHONGPAIBUL M, 2006, ISESE 06, P85
   Radermacher A, 2011, SIGCSE 11: PROCEEDINGS OF THE 42ND ACM TECHNICAL SYMPOSIUM ON COMPUTER SCIENCE EDUCATION, P655
   Shaochun X., 2006, P 5 IEEEACIS INT C C, P500, DOI DOI 10.1109/ICIS-COMSAR.2006.34
   Sheskin D., 2000, PARAMETRIC NONPARAME
   Sillitti A, 2004, J SYST ARCHITECT, V50, P393, DOI 10.1016/j.sysarc.2003.09.005
   Sillitti A, 2003, EUROMICRO CONF PROC, P336
   Sillitti A., 2011, P 33 INT C SOFTW ENG
   Sillitti A., 2012, P 34 INT C SOFTW ENG
   SIMONOFF J.S., 1998, SMOOTHING METHODS ST
   Sison R, 2009, ASIA PAC SOFWR ENG, P187, DOI 10.1109/APSEC.2009.71
   Sison R, 2008, ASIA PAC SOFWR ENG, P325, DOI 10.1109/APSEC.2008.61
   Succi G., 2002, Proceedings of the 3rd International Conference on Extreme Programming (XP), P212
   Tukey J.W., 1977, EXPLORATORY DATA ANA, V2
   VanDeGrift T., 2004, SIGCSE Bulletin, V36, P2, DOI 10.1145/1028174.971306
   VANHANEN J, 2007, 40 ANN HAW INT C SYS, pB274, DOI DOI 10.1109/HICSS.2007.218
   VANHANEN J, 2005, P INT S EMP SOFTW EN, P336
   Vanhanen J, 2007, EUROMICRO CONF PROC, P211
   Votta LG, 1994, 9 INT SOFTW PROC WOR, P93
   WATSON G, 1969, SANKHYA A, V26, P359
   Williams L, 2000, IEEE SOFTWARE, V17, P19, DOI 10.1109/52.854064
   Williams L, 2004, PROCEEDINGS OF THE AGILE DEVELOPMENT CONFERENCE, P11
   Williams LA, 2000, COMMUN ACM, V43, P108, DOI 10.1145/332833.332848
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
   Xu S., 2005, P CAN C EL COMP ENG, P1846
   Zacharis NZ, 2011, IEEE T EDUC, V54, P168, DOI 10.1109/TE.2010.2048328
NR 91
TC 32
Z9 33
U1 1
U2 22
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUL
PY 2013
VL 39
IS 7
BP 930
EP 953
DI 10.1109/TSE.2012.68
PG 24
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 174AO
UT WOS:000321125200004
DA 2024-07-18
ER

PT J
AU Carnevali, L
   Ridi, L
   Vicario, E
AF Carnevali, Laura
   Ridi, Lorenzo
   Vicario, Enrico
TI A Quantitative Approach to Input Generation in Real-Time Testing of
   Stochastic Systems
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Real-time testing; input generation; Time Petri Nets; non-Markovian
   Stochastic Petri Nets; stochastic processes; Difference Bound Matrix
ID ALGORITHM
AB In the process of testing of concurrent timed systems, input generation identifies values of temporal parameters that let the Implementation Under Test (IUT) execute selected cases. However, when some parameters are not under control of the driver, test execution may diverge from the selected input and produce an inconclusive behavior. We formulate the problem on the basis of an abstraction of the IUT which we call partially stochastic Time Petri Net (psTPN), where controllable parameters are modeled as nondeterministic values and noncontrollable parameters as random variables with general (GEN) distribution. With reference to this abstraction, we derive the analytical form of the probability that the IUT runs along a selected behavior as a function of choices taken on controllable parameters. In the applicative perspective of real-time testing, this identifies a theoretical upper limit on the probability of a conclusive result, thus providing a means to plan the number of test repetitions that are necessary to guarantee a given probability of test-case coverage. It also provides a constructive technique for an optimal or suboptimal approach to input generation and a way to characterize the probability of conclusive testing under other suboptimal strategies.
C1 [Carnevali, Laura; Ridi, Lorenzo; Vicario, Enrico] Univ Florence, Dipartimento Sistemi & Informat, I-50145 Florence, Italy.
C3 University of Florence
RP Carnevali, L (corresponding author), Univ Florence, Dipartimento Sistemi & Informat, Via Santa Marta 3, I-50145 Florence, Italy.
EM laura.carnevali@unifi.it; lorenzo.ridi@unifi.it; enrico.vicario@unifi.it
RI vicario, enrico/ABG-4344-2020
OI vicario, enrico/0000-0002-4983-4386
CR ALUR R, 1994, THEOR COMPUT SCI, V126, P183, DOI 10.1016/0304-3975(94)90010-8
   [Anonymous], 1992, DO178B RAD TECHN COM
   [Anonymous], 2012, JAV TOOLK J LINK
   Beizer Boris, 1995, Black-box testing: techniques for functional testing of software and systems
   Bernardi S, 2011, IEEE T IND INFORM, V7, P90, DOI 10.1109/TII.2010.2098415
   BERNTSEN J, 1991, ACM T MATH SOFTWARE, V17, P437, DOI 10.1145/210232.210233
   BERTHOMIEU B, 1991, IEEE T SOFTWARE ENG, V17, P259, DOI 10.1109/32.75415
   Bucci Giacomo, 2010, International Journal on Software Tools for Technology Transfer, V12, P391, DOI 10.1007/s10009-010-0156-8
   Carnevali Laura, 2011, Computer Safety, Reliability, and Security. Proceedings 30th International Conference, SAFECOMP 2011, P409, DOI 10.1007/978-3-642-24270-0_30
   Carnevali L., 2011, Proceedings of the 2011 Eighth International Conference on Quantitative Evaluation of Systems (QEST 2011), P153, DOI 10.1109/QEST.2011.29
   CARNEVALI L, 2007, P IEEE C EM TECHN FA
   Carnevali L., 2009, P 9 INT WORKSH PERF
   Carnevali L, 2008, LECT NOTES COMPUT SC, V5026, P87, DOI 10.1007/978-3-540-68624-8_7
   Carnevali L, 2011, IEEE T SOFTWARE ENG, V37, P826, DOI 10.1109/TSE.2011.4
   Carnevali L, 2009, IEEE T SOFTWARE ENG, V35, P178, DOI 10.1109/TSE.2008.101
   CHOW TS, 1978, IEEE T SOFTWARE ENG, V4, P178, DOI 10.1109/TSE.1978.231496
   Dantzig GB., 1973, Journal of Combinatorial Theory (A), V14, P288, DOI DOI 10.1016/0097-3165(73)90004-6
   Dill D., 1989, P WORKSH COMP AID VE
   En-Nouaary A, 2002, IEEE T SOFTWARE ENG, V28, P1023, DOI 10.1109/TSE.2002.1049402
   FUJIWARA S, 1991, IEEE T SOFTWARE ENG, V17, P591, DOI 10.1109/32.87284
   Hessel Anders, 2008, Formal Methods and Testing. An Outcome of the FORTEST Network. Revised Selected Papers, P77, DOI 10.1007/978-3-540-78917-8_3
   Hessel A, 2007, ELECTRON NOTES THEOR, V190, P47, DOI 10.1016/j.entcs.2007.08.005
   Hierons RM, 2009, ACM COMPUT SURV, V41, DOI 10.1145/1459352.1459354
   Jard C., 2004, INT J SOFTWARE TOOLS, V6
   Karsai G, 2003, P IEEE, V91, P145, DOI 10.1109/JPROC.2002.805824
   Krichen M., 2005, TESTING COMMUNICATIN, P375
   Krichen M., 2004, P 11 INT SPIN WORKSH
   Kwiatkowska M., 2000, CONCUR 2000 - Concurrency Theory. 11th International Conference. Proceedings (Lecture Notes in Computer Science Vol.1877), P123
   Larsen K.G., 2005, PERSP MOD BAS TEST D
   Merayo MG, 2008, COMPUT NETW, V52, P432, DOI 10.1016/j.comnet.2007.10.002
   Muccini H, 2004, IEEE T SOFTWARE ENG, V30, P160, DOI 10.1109/TSE.2004.1271170
   Myers G J., 2004, The Art of Software Testing, V2nd ed.
   NELDER JA, 1965, COMPUT J, V7, P308, DOI 10.1093/comjnl/7.4.308
   PENCZEK W, 2004, P 25 INT C APPL THEO
   Schmaltz J, 2008, LECT NOTES COMPUT SC, V5215, P250, DOI 10.1007/978-3-540-85778-5_18
   Schmidt D, 2006, IEEE RADIO WIRELESS, P1, DOI 10.1109/RWS.2006.1615079
   Springintveld J, 2001, THEOR COMPUT SCI, V254, P225, DOI 10.1016/S0304-3975(99)00134-6
   Tretmans Jan, 2008, Formal Methods and Testing. An Outcome of the FORTEST Network. Revised Selected Papers, P1, DOI 10.1007/978-3-540-78917-8_1
   Vicario E, 2001, IEEE T SOFTWARE ENG, V27, P728, DOI 10.1109/32.940727
   Vicario E, 2009, IEEE T SOFTWARE ENG, V35, P703, DOI 10.1109/TSE.2009.36
   Wilhelm R, 2008, ACM T EMBED COMPUT S, V7, DOI 10.1145/1347375.1347389
   Wolfram Research, 2012, MATH 5 2
   Wolovick N., 2009, P INT C SOFTW TEST V, P1
   Younes HLS, 2004, PROCEEDING OF THE NINETEENTH NATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE AND THE SIXTEENTH CONFERENCE ON INNOVATIVE APPLICATIONS OF ARTIFICIAL INTELLIGENCE, P742
NR 44
TC 6
Z9 6
U1 0
U2 12
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAR
PY 2013
VL 39
IS 3
BP 292
EP 304
DI 10.1109/TSE.2012.42
PG 13
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 098CA
UT WOS:000315520700001
DA 2024-07-18
ER

PT J
AU Littlewood, B
   Rushby, J
AF Littlewood, Bev
   Rushby, John
TI Reasoning about the Reliability of Diverse Two-Channel Systems in Which
   One Channel Is "Possibly Perfect"
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Software reliability; software fault tolerance; program correctness;
   assurance case; software diversity
AB This paper refines and extends an earlier one by the first author [1]. It considers the problem of reasoning about the reliability of fault-tolerant systems with two "channels" (i.e., components) of which one, A, because it is conventionally engineered and presumed to contain faults, supports only a claim of reliability, while the other, B, by virtue of extreme simplicity and extensive analysis, supports a plausible claim of "perfection." We begin with the case where either channel can bring the system to a safe state. The reasoning about system probability of failure on demand (pfd) is divided into two steps. The first concerns aleatory uncertainty about 1) whether channel A will fail on a randomly selected demand and 2) whether channel B is imperfect. It is shown that, conditional upon knowing p(A) (the probability that A fails on a randomly selected demand) and p(B) (the probability that channel B is imperfect), a conservative bound on the probability that the system fails on a randomly selected demand is simply p(A) x p(B). That is, there is conditional independence between the events " A fails" and " B is imperfect." The second step of the reasoning involves epistemic uncertainty, represented by assessors' beliefs about the distribution of (p(A), p(B)), and it is here that dependence may arise. However, we show that under quite plausible assumptions, a conservative bound on system pfd can be constructed from point estimates for just three parameters. We discuss the feasibility of establishing credible estimates for these parameters. We extend our analysis from faults of omission to those of commission, and then combine these to yield an analysis for monitored architectures of a kind proposed for aircraft.
C1 [Littlewood, Bev] City Univ London, Ctr Software Reliabil, London EC1V 0HB, England.
   [Rushby, John] SRI Int, Comp Sci Lab, Menlo Pk, CA 94025 USA.
C3 City University London; SRI International
RP Littlewood, B (corresponding author), City Univ London, Ctr Software Reliabil, London EC1V 0HB, England.
EM b.littlewood@csr.city.ac.uk; Rushby@csl.sri.com
FU INDEED project; UK Engineering and Physical Sciences Research Council;
   DISPO project; British Energy; AWE; Westinghouse under CINIF Nuclear
   Research Programme; US National Science Foundation (NSF) [CNS-0720908];
   NASA [NNX08AC64A, NNX08AY53A]; NDA (Sellafield, Magnox North, Magnox
   South); EPSRC [EP/E000517/1] Funding Source: UKRI; NASA [103298,
   NNX08AY53A, 93318, NNX08AC64A] Funding Source: Federal RePORTER
FX The authors were very fortunate that their original manuscript received
   very careful readings from the Associate Editor and three reviewers.
   Their extensive and thoughtful comments and constructive suggestions
   resulted in this final version being a great improvement on the
   original, both in readability and in technical accuracy. They thank them
   for what must have been a substantial effort on all their parts. They
   would also like to thank the following colleagues for valuable
   discussions about earlier versions of this work: Peter Bishop, Robin
   Bloomfield, Alan Burns, Bruno Dutertre, Pat Lincoln, Paul Miner, Peter
   Popov, Andrey Povyakalo, Bob Riemenschneider, N. Shankar, Lorenzo
   Strigini, David Wright, and Bob Yates. Bev Littlewood's work was
   supported by the INDEED project, funded by the UK Engineering and
   Physical Sciences Research Council, and by the DISPO project, funded by
   British Energy, NDA (Sellafield, Magnox North, Magnox South), AWE, and
   Westinghouse under the CINIF Nuclear Research Programme (the views
   expressed in this Report are those of the authors and do not necessarily
   represent the views of the members of the Parties; the Parties do not
   accept liability for any damage or loss incurred as a result of the
   information contained in this Report). John Rushby's research was
   supported by US National Science Foundation (NSF) grant CNS-0720908 and
   by NASA cooperative agreements NNX08AC64A and NNX08AY53A.
CR [Anonymous], 2007, ENG SAF MAN YELL BOO, V2
   [Anonymous], 1998, US COMP SAF CRIT APP
   [Anonymous], 2007, ENG SAF MAN YELL BOO, V1
   [Anonymous], 2005, DO297, P2005
   [Anonymous], 1998, SAF REC A 98 3 5
   [Anonymous], 2006, 24 CAST
   [Anonymous], 0056 UK MIN DEF
   [Anonymous], 2006, SAF ASS PRINC NUCL F
   [Anonymous], 2010, STAT SUMM COMM JET A
   [Anonymous], 2001, DEV GUID VEH BAS SOF
   [Anonymous], 1974, GUIDANCE SUITE
   [Anonymous], 2007, LIC SAF CRIT SOFTW N
   [Anonymous], 1992, DO178B
   [Anonymous], 1996, AER REC PRACT ARP 47
   [Anonymous], 2008, 670 CAP UK CIV AV AU
   Arora A, 1998, IEEE T SOFTWARE ENG, V24, P435, DOI 10.1109/32.689401
   Australian Transport Safety Bureau, 2011, AO2008070 AUSTR TRAN
   Barringer H, 2007, LECT NOTES COMPUT SC, V4839, P111
   Bishop P., 1998, P SAF CRIT SYST S
   BUTLER RW, 1993, IEEE T SOFTWARE ENG, V19, P3, DOI 10.1109/32.210303
   ECKHARDT DE, 1991, IEEE T SOFTWARE ENG, V17, P692, DOI 10.1109/32.83905
   ECKHARDT DE, 1985, IEEE T SOFTWARE ENG, V11, P1511, DOI 10.1109/TSE.1985.231895
   Federal Aviation Administration, 1988, 2513091A FED AV ADM
   Havelund K., 2004, International Journal on Software Tools for Technology Transfer, V6, P158, DOI 10.1007/s10009-003-0117-6
   Helton JC, 2004, RELIAB ENG SYST SAFE, V85, P1, DOI 10.1016/j.ress.2004.03.001
   Kelly T., 1998, Arguing safety-a systematic approach to safety case management
   Knight J.C., 1986, P FTCS, V16, P165
   KNIGHT JC, 1986, IEEE T SOFTWARE ENG, V12, P96, DOI 10.1109/TSE.1986.6312924
   Littlewood B, 2000, IEEE T SOFTWARE ENG, V26, P1157, DOI 10.1109/32.888629
   LITTLEWOOD B, 1989, IEEE T SOFTWARE ENG, V15, P1596, DOI 10.1109/32.58771
   Littlewood B, 2000, IEEE T SOFTWARE ENG, V26, P1022, DOI 10.1109/32.879822
   LITTLEWOOD B, 1993, COMMUN ACM, V36, P69, DOI 10.1145/163359.163373
   Littlewood B., 2010, ORAL HLTH STATUS ORA
   Littlewood B., 2012, ORAL HLTH STATUS ORA
   Littlewood B, 2007, IEEE T SOFTWARE ENG, V33, P347, DOI 10.1109/TSE.2007.1002
   Lloyd E., 1992, SYSTEMATIC SAFETY SA
   MAY J, 1995, SOFTWARE ENG J, V10, P206, DOI 10.1049/sej.1995.0026
   O'Hagan A., 2006, UNCERTAIN JUDGEMENTS, DOI DOI 10.1002/0470033312
   Ross S. M., 1996, Stochastic processes, V2nd
   Rouquet J.C., 1986, P INT WORKSH SAF COM
   Rushby J., 1986, P SAF CRIT SYST S SS, P210
   Rushby J, 2009, SEFM 2009: SEVENTH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING AND FORMAL METHODS, P3, DOI 10.1109/SEFM.2009.39
   SCHLICHTING RD, 1983, ACM T COMPUT SYST, V1, P222, DOI 10.1145/357369.357371
   Schneider F. B., 2000, ACM Transactions on Information and Systems Security, V3, P30, DOI 10.1145/353323.353382
   UK Air investigations, 2007, 42007 UK AIR INV
   WIKA KG, 1995, COMPASS '95 - PROCEEDINGS OF THE TENTH ANNUAL CONFERENCE ON COMPUTER ASSURANCE, P83, DOI 10.1109/CMPASS.1995.521889
   WILLSKY AS, 1976, AUTOMATICA, V12, P601, DOI 10.1016/0005-1098(76)90041-8
NR 47
TC 23
Z9 23
U1 0
U2 6
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD SEP-OCT
PY 2012
VL 38
IS 5
BP 1178
EP 1194
DI 10.1109/TSE.2011.80
PG 17
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 009BA
UT WOS:000308999100012
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Salmeron, JL
   Lopez, C
AF Salmeron, Jose L.
   Lopez, Cristina
TI Forecasting Risk Impact on ERP Maintenance with Augmented Fuzzy
   Cognitive Maps
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE ERP; fuzzy cognitive maps; risk management; simulation; software
   maintenance
ID SOFTWARE PROJECT RISK; CRITICAL SUCCESS FACTORS; MANAGEMENT; ENTERPRISE;
   SYSTEMS; FRAMEWORK; PERFORMANCE; VALIDATION; SIMULATION; KNOWLEDGE
AB Worldwide, firms have made great efforts to implement Enterprise Resource Planning (ERP) systems. Despite these efforts, ERP adoption success is not guaranteed. Successful adoption of an ERP system also depends on proper system maintenance. For this reason, companies should follow a maintenance strategy that drives the ERP system toward success. However, in general, ERP maintenance managers do not know what conditions they should target to successfully maintain their ERP systems. Furthermore, numerous risks threaten these projects, but they are normally dealt with intuitively. To date, there has been limited literature published regarding ERP maintenance risks or ERP maintenance success. To address this need, we have built a dynamic simulation tool that allows ERP managers to foresee the impact of risks on maintenance goals. This research would help professionals manage their ERP maintenance projects. Moreover, it covers a significant gap in the literature.
C1 [Salmeron, Jose L.; Lopez, Cristina] Univ Pablo de Olavide, Sch Engn, Seville 41013, Spain.
C3 Universidad Pablo de Olavide
RP Salmeron, JL (corresponding author), Univ Pablo de Olavide, Sch Engn, Ctra Utrera,Km 1, Seville 41013, Spain.
EM salmeron@upo.es; clopvar@upo.es
RI Salmeron, Jose L./E-9729-2010; López, Cristina/HKW-0760-2023; López
   Vargas, Cristina/F-7438-2016
OI López Vargas, Cristina/0000-0002-5112-2994; Salmeron, Jose
   L./0000-0001-7811-3716
FU Spanish Ministry of Science and Technology [MICINN-ECO2009.12853];
   Andalusian Regional Government [CICE-P07-SEJ-03080]
FX The authors wish to thank the Spanish Ministry of Science and Technology
   (MICINN-ECO2009.12853) and the Andalusian Regional Government
   (CICE-P07-SEJ-03080) for their financial support.
CR Al-Mashari M, 2002, IND MANAGE DATA SYST, V102, P165, DOI 10.1108/02635570210421354
   Allen Booz, 2000, INS ENT RES PLANN BI
   Aloini D, 2007, INFORM MANAGE-AMSTER, V44, P547, DOI 10.1016/j.im.2007.05.004
   [Anonymous], 2008, A Guide to the Project Management Body of Knowledge (PMBOK Guide), V4th
   [Anonymous], 1999, P 7 MEDITERRANEAN C
   [Anonymous], 1994, Presence Teleoperators Virtual Environ, DOI [10.1162/pres.1994.3.2.173, DOI 10.1162/PRES.1994.3.2.173]
   [Anonymous], 7 PAC AS C INF SYST
   Axelrod R., 1976, The Structure of Decision: Cognitive Maps of Political Elites
   Baldwin S., 1999, DELOITTE CONSULTING
   Bannerman PL, 2008, J SYST SOFTWARE, V81, P2118, DOI 10.1016/j.jss.2008.03.059
   Batista K.P., 2006, P 21 IEEE INT C SOFT, P453, DOI [10.1109/ICSM.2005.14, DOI 10.1109/ICSM.2005.14]
   Bellman R. E., 1971, Decision-making in a fuzzy environment, DOI 10.1287/mnsc.17.4.B141
   BOEHM BW, 1991, IEEE SOFTWARE, V8, P32, DOI 10.1109/52.62930
   Botta-Genoulaz V, 2006, INT J PROD ECON, V99, P202, DOI 10.1016/j.ijpe.2004.12.015
   Botta-Genoulaz V, 2005, COMPUT IND, V56, P510, DOI 10.1016/j.compind.2005.02.004
   Bryson N, 1997, INTELLIGENT INFORMATION SYSTEMS, (IIS'97) PROCEEDINGS, P231, DOI 10.1109/IIS.1997.645234
   Bueno S, 2009, EXPERT SYST APPL, V36, P5221, DOI 10.1016/j.eswa.2008.06.072
   Büyüközkan G, 2010, INFORM SCIENCES, V180, P441, DOI 10.1016/j.ins.2009.09.009
   Chand D, 2005, COMPUT IND, V56, P558, DOI 10.1016/j.compind.2005.02.011
   Chen JC, 2009, J SYST SOFTWARE, V82, P981, DOI 10.1016/j.jss.2008.12.036
   Cho H.K., 2002, P 36 ANN HAW INT C S, P17, DOI [10.1109/HICSS.2003.1173659, DOI 10.1109/HICSS.2003.1173659]
   Clayton MJ., 1997, Educ. Psychol, V17, P373, DOI DOI 10.1080/0144341970170401
   Cobelli C., 2008, Introduction to Modeling in Physiology and Medicine, P23
   Cule P, 2000, INFORM SYST MANAGE, V17, P65, DOI 10.1201/1078/43191.17.2.20000301/31229.8
   Davenport TH, 1998, HARVARD BUS REV, V76, P121
   de Bakker K, 2010, INT J PROJ MANAG, V28, P493, DOI 10.1016/j.ijproman.2009.07.002
   Dekleva S., 1992, Conference on Software Maintenance 1992 (Cat.No.92CH3206-0), P10, DOI 10.1109/ICSM.1992.242564
   Dorofee A., 1996, CONTINUOUS RISK MANA
   Dorofee A., 2009, P NDIA SYST ENG C
   Esteves J., 1999, ACTES 1 INT WORKSHOP, P359
   Esteves J, 2007, COMMUN ASSOC INF SYS, V19, P386
   Fan CF, 2004, J SYST SOFTWARE, V73, P193, DOI 10.1016/j.jss.2003.12.032
   Feyzioglu O, 2007, IN C IND ENG ENG MAN, P1447, DOI 10.1109/IEEM.2007.4419432
   FU LM, 1991, SIMULATION, V56, P251, DOI 10.1177/003754979105600409
   Gable GG, 2008, J ASSOC INF SYST, V9, P377, DOI 10.17705/1jais.00164
   Gattiker TF, 2005, MIS QUART, V29, P559
   Grant D., 2005, 38 ANN HAW INT C SYS, P1
   Han WM, 2007, J SYST SOFTWARE, V80, P42, DOI 10.1016/j.jss.2006.04.030
   Hirt SG, 2001, J SOFTW MAINT EVOL-R, V13, P373, DOI 10.1002/smr.238
   Houston DX, 2001, J SYST SOFTWARE, V59, P247, DOI 10.1016/S0164-1212(01)00066-8
   Huang SM, 2004, IND MANAGE DATA SYST, V104, P681, DOI 10.1108/02635570410561672
   Imtihan MR, 2008, PROCEEDINGS OF NINTH ACIS INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, ARTIFICIAL INTELLIGENCE, NETWORKING AND PARALLEL/DISTRIBUTED COMPUTING, P785, DOI 10.1109/SNPD.2008.135
   Jaconson S., 2007, AMR RES
   Jiang R, 2009, 2009 2ND IEEE INTERNATIONAL CONFERENCE ON COMPUTER SCIENCE AND INFORMATION TECHNOLOGY, VOL 2, P419, DOI 10.1109/ICCSIT.2009.5234813
   Kang I, 2004, EXPERT SYST APPL, V26, P545, DOI 10.1016/j.eswa.2003.10.012
   Keil M, 1998, COMMUN ACM, V41, P76, DOI 10.1145/287831.287843
   Kitchenham B, 2003, IEEE T SOFTWARE ENG, V29, P542, DOI 10.1109/TSE.2003.1205181
   Kleijen J. P. C., 1999, WSC'99. 1999 Winter Simulation Conference Proceedings. `Simulation - A Bridge to the Future' (Cat. No.99CH37038), P647, DOI 10.1109/WSC.1999.823147
   KOSKO B, 1986, INT J MAN MACH STUD, V24, P65, DOI 10.1016/S0020-7373(86)80040-2
   Kosko B., 1996, FUZZY ENG
   Kwak YH, 2004, TECHNOVATION, V24, P915, DOI 10.1016/S0166-4972(03)00033-6
   Kwon OB, 2001, EXPERT SYST APPL, V21, P191, DOI 10.1016/S0957-4174(01)00039-2
   LANDRY M, 1983, EUR J OPER RES, V14, P207, DOI 10.1016/0377-2217(83)90257-6
   Law CCH, 2010, COMPUT IND, V61, P297, DOI 10.1016/j.compind.2009.10.004
   Lee E, 2009, EXPERT SYST APPL, V36, P5880, DOI 10.1016/j.eswa.2008.07.057
   Lee S, 2000, INFORM MANAGE, V37, P37, DOI 10.1016/S0378-7206(99)00033-6
   Lee SJ, 2009, EXPERT SYST APPL, V36, P10447, DOI 10.1016/j.eswa.2009.01.070
   Leye S, 2009, UKSIM INT CONF COMP, P161, DOI 10.1109/UKSIM.2009.20
   LIENTZ BP, 1981, COMMUN ACM, V24, P763, DOI 10.1145/358790.358796
   Lihong Zhou, 2008, Information Management & Computer Security, V16, P166, DOI 10.1108/09685220810879636
   Linstone HA, 1975, The Delphi method
   Lu X. N., 2004, 2004 IEEE International Engineering Management Conference (IEEE Cat. No.04CH37574), P789
   MCFARLAN FW, 1981, HARVARD BUS REV, V59, P142
   McGinnis TC, 2007, INFORM MANAGE-AMSTER, V44, P626, DOI 10.1016/j.im.2007.05.006
   McNurlin B, 2001, MIT SLOAN MANAGE REV, V42, P13
   Mookerjee R, 2005, COMMUN ACM, V48, P75, DOI 10.1145/1096000.1096008
   Mursu A, 2003, EUR J INFORM SYST, V12, P182, DOI 10.1057/palgrave.ejis.3000462
   Nah FFH, 2001, J SOFTW MAINT EVOL-R, V13, P399, DOI 10.1002/smr.239
   NAHMIAS S, 1979, INT J PROD RES, V17, P215, DOI 10.1080/00207547908919609
   Neumann DE, 2002, IEEE T SOFTWARE ENG, V28, P904, DOI 10.1109/TSE.2002.1033229
   Ng C.S.P., 2003, P 36 ANN HAW INT C S, P1, DOI DOI 10.1109/HICSS.2003.1174609
   Ng C.S.P., 2003, PAC AS C INF SYST AD, P1039
   Ng C.S.P., 2006, P 39 ANN HAW INT C S, V8, P1, DOI [10.1109/HICSS.2006.426, DOI 10.1109/HICSS.2006.426]
   Ng CSP, 2002, J SYST SOFTWARE, V64, P87, DOI 10.1016/S0164-1212(02)00029-8
   Ng CSP, 2001, J SOFTW MAINT EVOL-R, V13, P431, DOI 10.1002/smr.241
   Nicolaou A. I., 2004, International Journal of Accounting Information Systems, V5, P25, DOI 10.1016/j.accinf.2004.02.002
   O'Leary D.E., 2000, ENTERPRISE RESOURCE
   Okoli C, 2004, INFORM MANAGE-AMSTER, V42, P15, DOI 10.1016/j.im.2003.11.002
   Olson DL, 2007, ENTERP INF SYST-UK, V1, P129, DOI 10.1080/17517570601088364
   ORAL M, 1993, EUR J OPER RES, V66, P216, DOI 10.1016/0377-2217(93)90314-D
   Osei-Bryson KM, 2004, COMPUT OPER RES, V31, P1165, DOI 10.1016/S0305-0548(03)00070-4
   Özesmi U, 2004, ECOL MODEL, V176, P43, DOI 10.1016/j.ecolmodel.2003.10.027
   Pala O., 1999, P 17 INT C SYST DYN
   Papageorgiou EI, 2006, INT J HUM-COMPUT ST, V64, P727, DOI 10.1016/j.ijhcs.2006.02.009
   Peng GC, 2009, J ENTERP INF MANAG, V22, P587, DOI 10.1108/17410390910993554
   Peng GC, 2009, IND MANAGE DATA SYST, V109, P926, DOI 10.1108/02635570910982283
   Pfleeger S. L., 1990, Proceedings. Conference on Software Maintenance 1990 (Cat. No.90CH2921-5), P320, DOI 10.1109/ICSM.1990.131381
   Poba-Nzaou P, 2008, BUS PROCESS MANAG J, V14, P530, DOI 10.1108/14637150810888064
   Rodriguez-Repiso L, 2007, TECHNOVATION, V27, P582, DOI 10.1016/j.technovation.2006.12.006
   Salmeron JL, 2010, J SYST SOFTWARE, V83, P1941, DOI 10.1016/j.jss.2010.05.073
   Salmeron JL, 2010, EXPERT SYST APPL, V37, P7581, DOI 10.1016/j.eswa.2010.04.085
   Salmeron JL, 2009, KNOWL-BASED SYST, V22, P275, DOI 10.1016/j.knosys.2009.01.002
   Schneider M, 1998, FUZZY SET SYST, V93, P161, DOI 10.1016/S0165-0114(96)00218-7
   Scott JE, 2002, COMMUN ACM, V45, P74, DOI 10.1145/505248.505249
   Sherer S. A., 1995, Proceedings of the Twenty-Eighth Hawaii International Conference on System Sciences, P369, DOI 10.1109/HICSS.1995.375618
   Sneed HM, 2003, PROC IEEE INT CONF S, P190, DOI 10.1109/ICSM.2003.1235421
   Stark GE, 1996, INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE, PROCEEDINGS, P152, DOI 10.1109/ICSM.1996.565000
   Sumner M, 2000, J INFORM TECHNOL, V15, P317, DOI 10.1080/02683960010009079
   Teltumbde A, 2000, INT J PROD RES, V38, P4507, DOI 10.1080/00207540050205262
   Wallace L, 2004, INFORM MANAGE-AMSTER, V42, P115, DOI 10.1016/j.im.2003.12.007
   Wallace L, 2004, DECISION SCI, V35, P289, DOI 10.1111/j.00117315.2004.02059.x
   Wallace L, 2004, COMMUN ACM, V47, P68, DOI 10.1145/975817.975819
   Willis TH, 2002, IND MANAGE DATA SYST, V102, P35, DOI 10.1108/02635570210414640
   Xirogiannis G, 2004, IEEE T ENG MANAGE, V51, P334, DOI 10.1109/TEM.2004.830861
   Xirogiannis G, 2008, EXPERT SYST APPL, V35, P2017, DOI 10.1016/j.eswa.2007.08.103
   Xirogiannis G, 2007, EXPERT SYST APPL, V32, P687, DOI 10.1016/j.eswa.2006.01.042
   YAU SS, 1980, IEEE T SOFTWARE ENG, V6, P545, DOI 10.1109/TSE.1980.234503
   Yi T, 2008, PROCEEDINGS OF 2008 INTERNATIONAL CONFERENCE ON MACHINE LEARNING AND CYBERNETICS, VOLS 1-7, P676, DOI 10.1109/ICMLC.2008.4620490
   Yu CS, 2005, IND MANAGE DATA SYST, V105, P115, DOI 10.1108/02635570510575225
   ZADEH LA, 1965, INFORM CONTROL, V8, P338, DOI 10.1016/S0019-9958(65)90241-X
   Zafiropoulos I., 2005, Information Management & Computer Security, V13, P212, DOI 10.1108/09685220510602031
NR 111
TC 69
Z9 74
U1 0
U2 39
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAR-APR
PY 2012
VL 38
IS 2
BP 439
EP 452
DI 10.1109/TSE.2011.8
PG 14
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science; Engineering
GA 913ZF
UT WOS:000301915200012
DA 2024-07-18
ER

PT J
AU Le Goues, C
   Nguyen, T
   Forrest, S
   Weimer, W
AF Le Goues, Claire
   ThanhVu Nguyen
   Forrest, Stephanie
   Weimer, Westley
TI GenProg: A Generic Method for Automatic Software Repair
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Automatic programming; corrections; testing and debugging
ID GENETIC ALGORITHMS
AB This paper describes GenProg, an automated method for repairing defects in off-the-shelf, legacy programs without formal specifications, program annotations, or special coding practices. GenProg uses an extended form of genetic programming to evolve a program variant that retains required functionality but is not susceptible to a given defect, using existing test suites to encode both the defect and required functionality. Structural differencing algorithms and delta debugging reduce the difference between this variant and the original program to a minimal repair. We describe the algorithm and report experimental results of its success on 16 programs totaling 1.25 M lines of C code and 120K lines of module code, spanning eight classes of defects, in 357 seconds, on average. We analyze the generated repairs qualitatively and quantitatively to demonstrate that the process efficiently produces evolved programs that repair the defect, are not fragile input memorizations, and do not lead to serious degradation in functionality.
C1 [Le Goues, Claire; Weimer, Westley] Univ Virginia, Dept Comp Sci, Charlottesville, VA 22904 USA.
   [ThanhVu Nguyen; Forrest, Stephanie] Univ New Mexico, Dept Comp Sci, Albuquerque, NM 87131 USA.
C3 University of Virginia; University of New Mexico
RP Le Goues, C (corresponding author), Univ Virginia, Dept Comp Sci, 85 Engineers Way,POB 400740, Charlottesville, VA 22904 USA.
EM legoues@cs.virginia.edu; tnguyen@cs.unm.edu; forrest@cs.unm.edu;
   weimer@cs.virginia.edu
OI Le Goues, Claire/0000-0002-3931-060X
FU US National Science Foundation [CCF-0905236]; US Air Force Office of
   Scientific Research [FA8750-11-2-0039]; MURI [FA9550-07-1-0532]; US
   Defense Advanced Research Projects Agency (DARPA) [FA8650-10-C-7089]; 
   [CCF-0621900];  [CCR-0331580];  [CCF-0954024];  [CNS-0716478]; Direct
   For Computer & Info Scie & Enginr; Division of Computing and
   Communication Foundations [0905236, 0954024] Funding Source: National
   Science Foundation; Division of Computing and Communication Foundations;
   Direct For Computer & Info Scie & Enginr [0905373] Funding Source:
   National Science Foundation
FX The authors thank David E. Evans, Mark Harman, John C. Knight, Anh
   Nguyen-Tuong, and Martin Rinard for insightful discussions. Stephanie
   Forrest and Westley Weimer gratefully acknowledge the support of the US
   National Science Foundation (grant CCF-0905236), US Air Force Office of
   Scientific Research grant FA8750-11-2-0039 and MURI grant
   FA9550-07-1-0532, and US Defense Advanced Research Projects Agency
   (DARPA) grant FA8650-10-C-7089. Stephanie Forrest acknowledges the
   partial support of CCF-0621900 and CCR-0331580; Westley Weimer
   acknowledges the partial support of CCF-0954024 and CNS-0716478.
CR Al-Ekram Raihan., 2005, C CTR ADV STUDIES CO, P1
   Alba E, 2007, GECCO 2007: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOL 1 AND 2, P1066
   Albertsson L, 2000, 8TH INTERNATIONAL SYMPOSIUM ON MODELING, ANALYSIS AND SIMULATION OF COMPUTER AND TELECOMMUNICATION SYSTEMS, PROCEEDINGS, P191, DOI 10.1109/MASCOT.2000.876444
   [Anonymous], 2001, Proceedings of the 18th ACM Symposium on Operating Systems Principles
   [Anonymous], 2006, P 2006 INT S SOFTWAR
   [Anonymous], 2003, Modernizing Legacy Systems: Software Technologies, Engineering Processes,and Business Practices
   [Anonymous], 2010, P IEEE ACM INT C AUT
   [Anonymous], INT SEC THREAT REP
   Anvik John, 2005, P 2005 OOPSLA WORKSH, P35
   Anvik John, 2006, P 28 INT C SOFTWARE, P361, DOI DOI 10.1145/1134285.1134336
   Arcuri A., 2008, P IEEE C EV COMP
   Arcuri A, 2008, LECT NOTES COMPUT SC, V5361, P61
   Ball T., 2001, Model Checking Software. 8th International SPIN Workshop. Proceedings (Lecture Notes in Computer Science Vol.2057), P103
   Ball T, 2003, ACM SIGPLAN NOTICES, V38, P97, DOI 10.1145/640128.604140
   Barreto A, 2008, COMPUT OPER RES, V35, P3073, DOI 10.1016/j.cor.2007.01.010
   Brumley D, 2008, P IEEE S SECUR PRIV, P143, DOI 10.1109/SP.2008.17
   Chaki S., 2004, Software Engineering Notes, V29, P73, DOI 10.1145/1041685.1029908
   Chiueh T., 2005, P NETW DISTR SYST SE
   Costa M, 2008, ACM T COMPUT SYST, V26, DOI 10.1145/1455258.1455259
   Cox B., 2006, P USENIX SEC S
   Cui W, 2006, P NETW DISTR SYST SE
   Debroy Vidroha, 2010, Proceedings of the Third IEEE International Conference on Software Testing, Verification and Validation (ICST 2010), P65, DOI 10.1109/ICST.2010.66
   DENNING DE, 1987, IEEE T SOFTWARE ENG, V13, P222, DOI 10.1109/TSE.1987.232894
   Eiben A. E., 2015, INTRO EVOLUTIONARY C
   Erlikh L., 2000, IT Professional, V2, P17, DOI 10.1109/6294.846201
   Fast E., 2010, P GEN EV COMP C
   FORREST S, 1993, SCIENCE, V261, P872, DOI 10.1126/science.8346439
   Forrest S., 1998, P 6 WORKSH HOT TOP O
   Forrest S., 2009, P GEN EV COMP C
   Groce A, 2005, ELECTRON NOTES THEOR, V119, P67, DOI 10.1016/j.entcs.2004.12.023
   Gustafson S., 2004, Genetic Programming and Evolvable Machines, V5, P271, DOI 10.1023/B:GENP.0000030194.98244.e3
   Harman M, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P342, DOI 10.1109/FOSE.2007.29
   Hovemeyer David., 2004, ACM Conference on Object-Oriented Programming Systems, Lan-guages, and Applications, OOPSLA '04, P132
   Howard M., 2006, SECURITY DEV LIFECYC
   Ingham KL, 2007, COMPUT NETW, V51, P1239, DOI 10.1016/j.comnet.2006.09.016
   Jones Terry, 1995, P 6 INT C GEN ALG, V95, P184
   Jorgensen M, 2007, IEEE T SOFTWARE ENG, V33, P33, DOI 10.1109/TSE.2007.256943
   Koza J.R., 1992, GENETIC PROGRAMMING, VVolume 1
   Kruegel Christopher., 2003, P 10 ACM C COMPUTER, P251
   Le Goues C, 2009, LECT NOTES COMPUT SC, V5505, P292, DOI 10.1007/978-3-642-00768-2_26
   Liblit B, 2003, ACM SIGPLAN NOTICES, V38, P141, DOI 10.1145/780822.781148
   Lippmann R., 2008, Recent advances in intrusion detection 11th international symposium, RAID 2008, Cambridge, MA, USA, September 15-17, 2008
   Livshits B, 2009, PLDI'09 PROCEEDINGS OF THE 2009 ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P75, DOI 10.1145/1542476.1542485
   Locasto M. E., 2007, CUCS03507
   Locasto M.E., 2007, P USENIX ANN TECHN C, P1
   Michael CC, 2001, IEEE T SOFTWARE ENG, V27, P1085, DOI 10.1109/32.988709
   MILLER BP, 1990, COMMUN ACM, V33, P32, DOI 10.1145/96267.96279
   Miller BL, 1996, EVOL COMPUT, V4, P113, DOI 10.1162/evco.1996.4.2.113
   Musuvathi M, 2007, PLDI'07: PROCEEDINGS OF THE 2007 ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P446, DOI 10.1145/1250734.1250785
   Necula GC, 2002, LECT NOTES COMPUT SC, V2304, P213
   Newsome J, 2005, P IEEE S SECUR PRIV, P226, DOI 10.1109/SP.2005.15
   Orlov Michael., 2009, Proceedings of the 11th Annual conference on Genetic and evolutionary computation, P1043
   Perkins JH, 2009, SOSP'09: PROCEEDINGS OF THE TWENTY-SECOND ACM SIGOPS SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES, P87
   Ramamoorthy CV, 1996, COMPUTER, V29, P47, DOI 10.1109/2.539720
   Schulte E., 2010, P IEEE ACM INT C AUT
   Sen K, 2007, P 22 IEEE ACM INT C, P571, DOI DOI 10.1145/1321631.1321746
   Seng O, 2006, GECCO 2006: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOL 1 AND 2, P1909
   Sidiroglou S, 2005, LECT NOTES COMPUT SC, V3650, P1
   Sidiroglou S, 2005, IEEE SECUR PRIV, V3, P41, DOI 10.1109/MSP.2005.144
   Sidiroglou S, 2009, ACM SIGPLAN NOTICES, V44, P37, DOI 10.1145/1508284.1508250
   Smirnov A., 2006, P 8 INT S SYST INF S
   SUTHERLAND J, 1995, ACM COMPUT SURV, V27, P274, DOI 10.1145/210376.210394
   TOMBINI E, 2004, P 20 ANN COMP SEC AP
   Walcott K. R., 2006, P INT S SOFTW TEST A
   Wang K, 2004, LECT NOTES COMPUT SC, V3224, P203
   Wappler S, 2006, GECCO 2006: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOL 1 AND 2, P1925
   Wei Hu, 2006, VEE 2006. Proceedings of the Second International Conference on Virtual Execution Environments, P2
   Weimer W, 2010, COMMUN ACM, V53, P109, DOI 10.1145/1735223.1735249
   Weimer W, 2009, PROC INT CONF SOFTW, P364, DOI 10.1109/ICSE.2009.5070536
   Weimer Westley, 2006, Proceedings of the 5th International Conference on Generative Programming and Component Engineering (GPCE'06), P181, DOI DOI 10.1145/1173706.1173734
   Whaley J., 2002, Software Engineering Notes, V27, P221, DOI 10.1145/566171.566212
   Zeller A, 2002, IEEE T SOFTWARE ENG, V28, P183, DOI 10.1109/32.988498
   Zeller A, 1999, LECT NOTES COMPUT SC, V1687, P253, DOI 10.1145/318774.318946
   2008, 36 HUMAN COMPETITIVE
   2008, BBC NEWS         DEC
NR 75
TC 469
Z9 526
U1 1
U2 13
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JAN-FEB
PY 2012
VL 38
IS 1
BP 54
EP 72
DI 10.1109/TSE.2011.104
PG 19
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 881HG
UT WOS:000299472600006
DA 2024-07-18
ER

PT J
AU Weidlich, M
   Mendling, J
   Weske, M
AF Weidlich, Matthias
   Mendling, Jan
   Weske, Mathias
TI Efficient Consistency Measurement Based on Behavioral Profiles of
   Process Models
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Process model analysis; process model alignment; behavioral abstraction;
   consistency checking; consistency measures
ID PETRI NETS; INTEGRATION
AB Engineering of process-driven business applications can be supported by process modeling efforts in order to bridge the gap between business requirements and system specifications. However, diverging purposes of business process modeling initiatives have led to significant problems in aligning related models at different abstract levels and different perspectives. Checking the consistency of such corresponding models is a major challenge for process modeling theory and practice. In this paper, we take the inappropriateness of existing strict notions of behavioral equivalence as a starting point. Our contribution is a concept called behavioral profile that captures the essential behavioral constraints of a process model. We show that these profiles can be computed efficiently, i.e., in cubic time for sound free-choice Petri nets w.r.t. their number of places and transitions. We use behavioral profiles for the definition of a formal notion of consistency which is less sensitive to model projections than common criteria of behavioral equivalence and allows for quantifying deviation in a metric way. The derivation of behavioral profiles and the calculation of a degree of consistency have been implemented to demonstrate the applicability of our approach. We also report the findings from checking consistency between partially overlapping models of the SAP reference model.
C1 [Weidlich, Matthias; Weske, Mathias] Univ Potsdam, Hasso Plattner Inst, D-14482 Potsdam, Germany.
   [Mendling, Jan] Humboldt Univ, Wirtschaftswissensch Fak, Inst Wirtschaftsinformat, D-10178 Berlin, Germany.
C3 University of Potsdam; Humboldt University of Berlin
RP Weidlich, M (corresponding author), Univ Potsdam, Hasso Plattner Inst, Prof Dr Helmert Str 2-3, D-14482 Potsdam, Germany.
EM matthias.weidlich@hpi.uni-potsdam.de; jan.mendling@wiwi.hu-berlin.de;
   mathias.weske@hpi.uni-potsdam.de
OI Weidlich, Matthias/0000-0003-3325-7227; Mendling,
   Jan/0000-0002-7260-524X
CR Alves A., 2007, Web Services Business Process Execution Language Version 2.0
   Andersson B, 2005, LECT NOTES COMPUT SC, V3520, P233
   [Anonymous], 1990, STAND GLOSS SOFTW EN
   [Anonymous], 2001, HDB PROCESS ALGEBRA, DOI DOI 10.1016/B978-044482830-9/50019-9
   [Anonymous], 1997, SAP R 3 BUSINESS BLU
   [Anonymous], 1989, Modern structured analysis
   Awad A, 2008, LECT NOTES COMPUT SC, V5240, P326, DOI 10.1007/978-3-540-85758-7_24
   Basten T, 2001, J LOGIC ALGEBR PROGR, V47, P47, DOI 10.1016/S1567-8326(00)00004-7
   Batory D, 2004, IEEE T SOFTWARE ENG, V30, P355, DOI 10.1109/TSE.2004.23
   Batory D, 2000, LECT NOTES COMPUT SC, V1844, P117
   BECKER J, 2007, PHYSICA, P23
   Cortadella J, 1998, IEEE T COMPUT, V47, P859, DOI 10.1109/12.707587
   de Alfaro L, 2009, IEEE T SOFTWARE ENG, V35, P258, DOI 10.1109/TSE.2008.106
   de Medeiros AKA, 2008, DATA KNOWL ENG, V64, P55, DOI 10.1016/j.datak.2007.06.010
   Decker G, 2009, DATA KNOWL ENG, V68, P777, DOI 10.1016/j.datak.2009.02.013
   Desel J., 1995, Free Choice Petri Nets
   DIJKMAN R, 2009, P 13 INT IEEE ENT DI
   Dijkman R, 2008, LECT NOTES COMPUT SC, V5240, P261, DOI 10.1007/978-3-540-85758-7_20
   Dijkman RM, 2008, INFORM SOFTWARE TECH, V50, P1281, DOI 10.1016/j.infsof.2008.02.006
   Doan A, 2005, AI MAG, V26, P83
   DUMAS M, 2009, IEEE DATA ENG B, V32, P23
   EBERT J, 1994, 9438 LEIDEN U DEP CO
   EHRIG M, 2007, P 4 AS PAC C CONC MO, V67, P71
   Eichner C., 2005, P SDL FOR, P133
   Eshuis R, 2004, IEEE T SOFTWARE ENG, V30, P437, DOI 10.1109/TSE.2004.33
   Esparza J., 2008, UNFOLDINGS PARTIAL O, V1
   Euzenat J., 2007, ONTOLOGY MATCHING, DOI 10.1007/978-3-540-49612-0
   Gottschalk F, 2008, INT J COOP INF SYST, V17, P177, DOI 10.1142/S0218843008001798
   Griss ML, 2000, LECT NOTES COMPUT SC, V1844, P137
   GROSSMANN G, 2005, P 3 INT C BUS PROC M, P186
   GROVER V, 1994, IEEE T ENG MANAGE, V41, P276, DOI 10.1109/17.310142
   Harel D, 2002, IEEE T SOFTWARE ENG, V28, P889, DOI 10.1109/TSE.2002.1033228
   HENKEL M, 2004, P 2 INT C SERV OR CO, P21
   Hidders J., 2005, Theory of computing 2005: Proceedings of the eleventh computing The Australian Theory symposium (CATS2005), P3
   Kiepuszewski B, 2003, ACTA INFORM, V39, P143, DOI 10.1007/s00236-002-0105-4
   Kindler E, 2009, LECT NOTES COMPUT SC, V5460, P27
   Klein M, 2004, IEEE INTERNET COMPUT, V8, P30, DOI 10.1109/MIC.2004.1260701
   Koehler J, 2008, ELECTRON NOTES THEOR, V211, P5, DOI 10.1016/j.entcs.2008.04.025
   KOVALYOV A, 1996, P INT WORKSH DISCR E, P1
   Küster JM, 2008, LECT NOTES COMPUT SC, V5240, P244, DOI 10.1007/978-3-540-85758-7_19
   Kuhne T., 2006, Softw Syst Model, V5, P369, DOI [DOI 10.1007/S10270-006-0017-9, 10.1007/s10270-006-0017-9]
   Li C, 2008, LECT NOTES COMPUT SC, V5231, P248
   Lipton R., 1975, REACHABILITY PROBLEM
   Lohmann N, 2008, LECT NOTES COMPUT SC, V4937, P77
   Lohmann N, 2009, LECT NOTES COMPUT SC, V5460, P46
   LUFTMAN J, 1999, COMM AIS, V1
   Madhusudan T, 2004, DATA KNOWL ENG, V50, P87, DOI 10.1016/j.datak.2004.01.005
   Mendling J, 2008, DATA KNOWL ENG, V64, P312, DOI 10.1016/j.datak.2007.06.019
   Mendling J, 2006, LECT NOTES COMPUT SC, V4103, P55
   Mendling J, 2008, LECT NOTES BUS INF P, V6, P1
   Momotko M, 2004, LECT NOTES COMPUT SC, V3255, P306
   MURATA T, 1989, P IEEE, V77, P541, DOI 10.1109/5.24143
   Nejati S, 2007, PROC INT CONF SOFTW, P54
   OmgBpmn Business Process Modeling Notation (BPMN), 2009, BUS PROC MOD NOT BPM
   PANKRATIUS V, 2005, P 2 AS PAC C CONC MO, P79
   Pohl K., 2005, SOFTWARE PRODUCT LIN, V10
   Preuner G, 2001, DATA KNOWL ENG, V36, P153, DOI 10.1016/S0169-023X(00)00043-4
   Rahm E, 2001, VLDB J, V10, P334, DOI 10.1007/s007780100057
   RAMACKERS GJ, 1994, THESIS LEIDEN U
   Razavian M, 2008, PROCEEDINGS OF THE FIFTH INTERNATIONAL CONFERENCE ON INFORMATION TECHNOLOGY: NEW GENERATIONS, P82
   Reijers HA, 2009, DATA KNOWL ENG, V68, P221, DOI 10.1016/j.datak.2008.09.004
   Rolland C., 2000, Requirements Engineering, V5, P180, DOI 10.1007/PL00010350
   Rosemann M, 2007, INFORM SYST, V32, P1, DOI 10.1016/j.is.2005.05.003
   Rull G, 2008, DATA KNOWL ENG, V66, P414, DOI 10.1016/j.datak.2008.04.009
   SCHNIEDERS A, 2006, P 9 INT C BUS INF SY, P583
   Schrefl M, 2002, ACM T SOFTW ENG METH, V11, P92, DOI 10.1145/504087.504091
   VALMARI A, 1996, P LECT PETRI NETS, V1, P429
   van der Aalst W, 2004, IEEE T KNOWL DATA EN, V16, P1128, DOI 10.1109/TKDE.2004.47
   van der Aalst WMP, 2005, INFORM SYST, V30, P245, DOI 10.1016/j.is.2004.02.002
   van der Aalst WMP, 1997, LECT NOTES COMPUT SC, V1248, P407
   Van der Aalst WMP, 1998, J CIRCUIT SYST COMP, V8, P21, DOI 10.1142/S0218126698000043
   van Dongen BF, 2007, COMPUT IND, V58, P578, DOI 10.1016/j.compind.2007.01.001
   van Dongen B, 2008, LECT NOTES COMPUT SC, V5074, P450
   van Glabbeek R, 2001, ACTA INFORM, V37, P229, DOI 10.1007/s002360000041
   VANDERAALST W, 2008, P FUNDAMENTAL APPROA
   Vanhatalo J, 2009, DATA KNOWL ENG, V68, P793, DOI 10.1016/j.datak.2009.02.015
   WARSHALL S, 1962, J ACM, V9, P11, DOI 10.1145/321105.321107
   WEIDLICH M, 2009, P INT C ADV INF SYST, P71
   WEIDLICH M, 2009, P IEEE INT C SERV CO
   Weidlich M., 2010, P 22 INT C ADV INF S
   WOMBACHER A, 2006, P SERV ORIENT EL COM, V80, P51
   Wombacher A, 2006, LECT NOTES COMPUT SC, V4275, P255
NR 82
TC 134
Z9 168
U1 0
U2 11
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAY-JUN
PY 2011
VL 37
IS 3
BP 410
EP 429
DI 10.1109/TSE.2010.96
PG 20
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 768KZ
UT WOS:000290934800008
DA 2024-07-18
ER

PT J
AU De Lucia, A
   Di Penta, M
   Oliveto, R
AF De Lucia, Andrea
   Di Penta, Massimiliano
   Oliveto, Rocco
TI Improving Source Code Lexicon via Traceability and Information Retrieval
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Software traceability; source code comprehensibility; source code
   identifier quality; information retrieval; software development
   environments; empirical software engineering
ID CONCEPTUAL COHESION; IDENTIFIER NAMES; REQUIREMENTS; SOFTWARE; QUALITY;
   METRICS; VALIDATION; DESIGN; LINKS
AB The paper presents an approach helping developers to maintain source code identifiers and comments consistent with high-level artifacts. Specifically, the approach computes and shows the textual similarity between source code and related high-level artifacts. Our conjecture is that developers are induced to improve the source code lexicon, i.e., terms used in identifiers or comments, if the software development environment provides information about the textual similarity between the source code under development and the related high-level artifacts. The proposed approach also recommends candidate identifiers built from high-level artifacts related to the source code under development and has been implemented as an Eclipse plug-in, called COde Comprehension Nurturant Using Traceability (COCONUT). The paper also reports on two controlled experiments performed with master's and bachelor's students. The goal of the experiments is to evaluate the quality of identifiers and comments (in terms of their consistency with high-level artifacts) in the source code produced when using or not using COCONUT. The achieved results confirm our conjecture that providing the developers with similarity between code and high-level artifacts helps to improve the quality of source code lexicon. This indicates the potential usefulness of COCONUT as a feature for software development environments.
C1 [De Lucia, Andrea] Univ Salerno, Dept Math & Informat, I-84084 Fisciano, SA, Italy.
   [Di Penta, Massimiliano] Univ Sannio, Dept Engn, I-82100 Benevento, Italy.
   [Oliveto, Rocco] Univ Molise, Dept Stat, I-86090 Pesche, IS, Italy.
C3 University of Salerno; University of Sannio; University of Molise
RP De Lucia, A (corresponding author), Univ Salerno, Dept Math & Informat, Via Ponte don Melillo, I-84084 Fisciano, SA, Italy.
EM adelucia@unisa.it; dipenta@unisannio.it; rocco.oliveto@unimol.it
RI De Lucia, Andrea/AAG-6781-2020; Di Penta, Massimiliano/AAF-9656-2021;
   Oliveto, Rocco/J-4037-2012
OI De Lucia, Andrea/0000-0002-4238-1425; Di Penta,
   Massimiliano/0000-0002-0340-9747
CR Abadi A, 2008, INT C PROGRAM COMPRE, P103, DOI 10.1109/ICPC.2008.30
   ABEBE S.L., 2008, Proceedings of the 12th European Conference on Software Maintenance and Reengineering, P189
   [Anonymous], PRACTICAL NONPARAMET
   [Anonymous], 1981, SIMULTANEOUS STAT IN
   [Anonymous], 1988, STAT POWER ANAL BEHA
   ANQUETIL N, 1998, P 1998 C CTR ADV STU
   Antoniol G, 2002, IEEE T SOFTWARE ENG, V28, P970, DOI 10.1109/TSE.2002.1041053
   Antoniol G, 2000, SEVENTH WORKING CONFERENCE ON REVERSE ENGINEERING - PROCEEDINGS, P240, DOI 10.1109/WCRE.2000.891475
   Antoniol G, 2000, PROG COMPREHEN, P253, DOI 10.1109/WPC.2000.852502
   Arisholm E, 2004, IEEE T SOFTWARE ENG, V30, P521, DOI 10.1109/TSE.2004.43
   Baeza-Yates Ricardo, 1999, MODERN INFORM RETRIE, V463
   Basili V., 1994, The Goal Question Metric Approach, P528
   Basili VR, 1996, IEEE T SOFTWARE ENG, V22, P751, DOI 10.1109/32.544352
   BINKLEY D, 2009, P 17 IEEE INT C PROG
   Briand LC, 2005, IEEE T SOFTWARE ENG, V31, P833, DOI 10.1109/TSE.2005.105
   Bruegge Bernd., 2003, OBJECT ORIENTED SOFT, V2nd
   BUTLER G, 1995, SECOND WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P22, DOI 10.1109/WCRE.1995.514690
   Capobianco G., 2009, P 16 WORK C REV ENG
   Caprile B, 2000, PROC IEEE INT CONF S, P97, DOI 10.1109/ICSM.2000.883022
   Cleland-Huang J, 2005, 13TH IEEE INTERNATIONAL CONFERENCE ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P135, DOI 10.1109/RE.2005.78
   Cleland-Huang J, 2007, COMPUTER, V40, P27, DOI 10.1109/MC.2007.195
   Corbo Filippo, 2007, 2007 IEEE International Conference on Software Maintenance, P525, DOI 10.1109/ICSM.2007.4362682
   Cullum J. K., 1998, LANCZOS ALGORITHMS L, V1
   De Lucia A, 2007, ACM T SOFTW ENG METH, V16, DOI 10.1145/1276933.1276934
   De Lucia A, 2006, PROC IEEE INT CONF S, P299
   De Lucia A, 2006, INT C PROGRAM COMPRE, P317, DOI 10.1109/ICPC.2006.28
   De Lucia A, 2008, 2008 FRONTIERS OF SOFTWARE MAINTENANCE, P21, DOI 10.1109/FOSM.2008.4659245
   De Lucia A, 2009, EMPIR SOFTW ENG, V14, P57, DOI 10.1007/s10664-008-9090-8
   DEERWESTER S, 1990, J AM SOC INFORM SCI, V41, P391, DOI 10.1002/(SICI)1097-4571(199009)41:6<391::AID-ASI1>3.0.CO;2-9
   Deissenboeck F, 2006, SOFTWARE QUAL J, V14, P261, DOI 10.1007/s11219-006-9219-1
   DELUCIA A, 2004, P 16 INT C SOFTW ENG, P31
   DUMAIS ST, 1991, BEHAV RES METH INS C, V23, P229, DOI 10.3758/BF03203370
   Etzkorn LH, 2002, J SOFTW MAINT EVOL-R, V14, P293, DOI 10.1002/smr.255
   Evans E., 2003, Domain-Driven Design
   FAGAN ME, 1976, IBM SYST J, V15, P182, DOI 10.1147/sj.153.0182
   Goad CL, 2000, J AGRIC BIOL ENVIR S, V5, P69, DOI 10.2307/1400632
   Gotel O. C. Z., 1994, Proceedings of the First International Conference on Requirements Engineering (Cat. No.94TH0613-0), P94, DOI 10.1109/ICRE.1994.292398
   Gyimóthy T, 2005, IEEE T SOFTWARE ENG, V31, P897, DOI 10.1109/TSE.2005.112
   Haiduc S, 2008, INT C PROGRAM COMPRE, P113, DOI 10.1109/ICPC.2008.29
   Hayes JH, 2006, IEEE T SOFTWARE ENG, V32, P4, DOI 10.1109/TSE.2006.3
   Hayes JH, 2003, 11TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, PROCEEDINGS, P138
   Kampenes VB, 2007, INFORM SOFTWARE TECH, V49, P1073, DOI 10.1016/j.infsof.2007.02.015
   Kim S, 2008, IEEE T SOFTWARE ENG, V34, P181, DOI 10.1109/TSE.2007.70773
   Kim S, 2007, PROC INT CONF SOFTW, P489
   LAWRIE D, 2006, P 6 IEEE INT WORK C
   Lawrie D, 2007, SEVENTH IEEE INTERNATIONAL WORKING CONFERENCE ON SOURCE CODE ANALYSIS AND MANIPULATION, PROCEEDINGS, P213, DOI 10.1109/SCAM.2007.17
   Lawrie D, 2007, J SOFTW MAINT EVOL-R, V19, P205, DOI 10.1002/smr.350
   Lawrie D, 2007, EMPIR SOFTW ENG, V12, P359, DOI 10.1007/s10664-006-9032-2
   Lawrie D, 2006, INT C PROGRAM COMPRE, P3, DOI 10.1109/ICPC.2006.51
   Lawrie D, 2007, INNOV SYST SOFTW ENG, V3, P303, DOI 10.1007/s11334-007-0031-2
   Lawrie DJ, 2006, INT C PROGRAM COMPRE, P149, DOI 10.1109/ICPC.2006.34
   Lormans M, 2008, EMPIR SOFTW ENG, V13, P727, DOI 10.1007/s10664-008-9078-4
   Marcus A, 2005, PROC IEEE INT CONF S, P133
   Marcus A, 2003, PROC INT CONF SOFTW, P125, DOI 10.1109/ICSE.2003.1201194
   Marcus A, 2008, IEEE T SOFTWARE ENG, V34, P287, DOI 10.1109/TSE.2007.70768
   Nagao M., 1994, P 15 C COMP LING, V1, P611
   Oppenheim A.N., 1992, QUESTIONNAIRE DESIGN
   PATEL S, 1992, P 14 INT C SOFTW ENG, P38
   PORTER MF, 1980, PROGRAM-AUTOM LIBR, V14, P130, DOI 10.1108/eb046814
   POSHYVANYK D, 2007, P ACM INT S GRAND CH, P27
   Poshyvanyk D, 2006, PROC IEEE INT CONF S, P469
   Reiss S. P, 2007, 22 IEEEACM INT C AUT, P74
   Ricca F, 2010, IEEE T SOFTWARE ENG, V36, P96, DOI 10.1109/TSE.2009.69
   Settimi R, 2004, 7TH INTERNATIONAL WORKSHOP ON PRINCIPLES OF SOFTWARE EVOLUTION, P49, DOI 10.1109/IWPSE.2004.1334768
   Sneed HM, 1996, PROCEEDINGS OF THE THIRD WORKING CONFERENCE ON REVERSE ENGINEERING, P169, DOI 10.1109/WCRE.1996.558901
   Takang AA, 1996, J PROGRAM LANG, V4, P143
   WOHLIN C, 2000, EXPERIMENTATION SOFT
   Yadla S, 2005, INNOV SYST SOFTW ENG, V1, P116, DOI 10.1007/s11334-005-0011-3
   Zimmermann T., 2007, PROC 3 INT WORKSHOP
   ZOU X, 2007, P INT S GRAND CHALL, P40
   [No title captured]
NR 71
TC 37
Z9 42
U1 0
U2 10
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAR-APR
PY 2011
VL 37
IS 2
BP 205
EP 227
DI 10.1109/TSE.2010.89
PG 23
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 739ZL
UT WOS:000288760900005
DA 2024-07-18
ER

PT J
AU MacDonell, S
   Shepperd, M
   Kitchenham, B
   Mendes, E
AF MacDonell, Stephen
   Shepperd, Martin
   Kitchenham, Barbara
   Mendes, Emilia
TI How Reliable Are Systematic Reviews in Empirical Software Engineering?
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Review
DE Empirical software engineering; meta-analysis; systematic review; cost
   estimation
AB BACKGROUND-The systematic review is becoming a more commonly employed research instrument in empirical software engineering. Before undue reliance is placed on the outcomes of such reviews it would seem useful to consider the robustness of the approach in this particular research context. OBJECTIVE-The aim of this study is to assess the reliability of systematic reviews as a research instrument. In particular, we wish to investigate the consistency of process and the stability of outcomes. METHOD-We compare the results of two independent reviews undertaken with a common research question. RESULTS-The two reviews find similar answers to the research question, although the means of arriving at those answers vary. CONCLUSIONS-In addressing a well-bounded research question, groups of researchers with similar domain experience can arrive at the same review outcomes, even though they may do so in different ways. This provides evidence that, in this context at least, the systematic review is a robust research method.
C1 [MacDonell, Stephen] Auckland Univ Technol, Sch Comp & Math Sci, Auckland 1142, New Zealand.
   [Shepperd, Martin] Brunel Univ, Dept IS & Comp, London UB8 3PH, England.
   [Kitchenham, Barbara] Univ Keele, Sch Comp & Math, Keele ST5 5BG, Staffs, England.
   [Mendes, Emilia] Univ Auckland, Dept Comp Sci, Auckland 1142, New Zealand.
C3 Auckland University of Technology; Brunel University; Keele University;
   University of Auckland
RP MacDonell, S (corresponding author), Auckland Univ Technol, Sch Comp & Math Sci, Private Bag 92006, Auckland 1142, New Zealand.
EM stephen.macdonell@aut.ac.nz; martin.shepperd@brunel.ac.uk;
   barbara@kitchenham.me.uk; emilia@cs.auckland.ac.nz
RI MacDonell, Stephen G./AAI-1579-2019; Kitchenham, Barbara/AAL-4311-2020;
   Shepperd, Martin/F-9683-2013; Kolyaka, Tanya/E-7464-2016; Mendes, Maria
   E/B-4207-2015
OI MacDonell, Stephen G./0000-0002-2231-6941; Kitchenham,
   Barbara/0000-0002-6134-8460; Shepperd, Martin/0000-0003-1874-6145;
   Kolyaka, Tanya/0000-0001-8595-4396; Mendes, Emilia/0000-0003-0449-5322
FU Engineering and Physical Sciences Research Council (EPSRC) of the United
   Kingdom [EP/D003504]; EPSRC [EP/E046983/1]; EPSRC [EP/E046983/1] Funding
   Source: UKRI
FX Martin Shepperd and Steve MacDonell were partly supported by the
   Engineering and Physical Sciences Research Council (EPSRC) of the United
   Kingdom under grant EP/D003504. Barbara Kitchenham's research is funded
   by the EPSRC project EP/E046983/1.
CR [Anonymous], HLTH ED J
   BASILI VR, 1981, J SYST SOFTWARE, V2, P47, DOI 10.1016/0164-1212(81)90046-7
   Basili VR, 1999, IEEE T SOFTWARE ENG, V25, P456, DOI 10.1109/32.799939
   Blettner M, 1999, INT J EPIDEMIOL, V28, P1, DOI 10.1093/ije/28.1.1
   *DARE, 2007, WHAT CRIT INCL REV D
   Davis A, 2006, RE'06: 14TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, PROCEEDINGS, P179
   Dyba T, 2005, IEEE SOFTWARE, V22, P58, DOI 10.1109/MS.2005.6
   Hayes W., 1999, Proceedings Sixth International Software Metrics Symposium (Cat. No.PR00403), P143, DOI 10.1109/METRIC.1999.809735
   Higgins JPT, 2003, BMJ-BRIT MED J, V327, P557, DOI 10.1136/bmj.327.7414.557
   Katrak Persis, 2004, BMC Med Res Methodol, V4, P22, DOI 10.1186/1471-2288-4-22
   KITCHENHAM B, 2004, P 26 IEEE INT C SOFT
   KITCHENHAM B, 2006, P 10 INT C EMP ASS S
   Kitchenham B.A., 2007, EBSE200701 KEELE U
   Kitchenham B, 2009, INFORM SOFTWARE TECH, V51, P7, DOI 10.1016/j.infsof.2008.09.009
   Kitchenham BA, 2007, IEEE T SOFTWARE ENG, V33, P316, DOI 10.1109/TSE.2007.1101
   KNIPSCHILD P, 1994, BRIT MED J, V309, P719, DOI 10.1136/bmj.309.6956.719
   MACDONELL S, 2007, P 1 INT S EMP SOFTW
   MILLER J, 1999, P IEEE 6 INT SOFTW M
   Oakley A, 2002, EDUC REV, V54, P277, DOI 10.1080/0013191022000016329
   Oakley A., 2005, EVID POLICY, V1, P5, DOI DOI 10.1332/1744264052703168
   Oakley A., 1995, A systematic review of smoking prevention programmes for young people
   Pauling L., 1986, How to live longer and feel better
   Petticrew M, 2003, BMJ-BRIT MED J, V326, P756, DOI 10.1136/bmj.326.7392.756
   Pickard LM, 1998, INFORM SOFTWARE TECH, V40, P811, DOI 10.1016/S0950-5849(98)00101-3
   ROMBAC H, 1993, EXPT SOFTWARE ENG IS
   SHADISH WR, 1995, SOC STUD SCI, V25, P477, DOI 10.1177/030631295025003003
NR 26
TC 56
Z9 58
U1 1
U2 16
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD SEP-OCT
PY 2010
VL 36
IS 5
BP 676
EP 687
DI 10.1109/TSE.2010.28
PG 12
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 653YP
UT WOS:000282135000006
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Guéhéneuc, YG
   Antoniol, G
AF Gueheneuc, Yann-Gael
   Antoniol, Giuliano
TI DeMIMA:: A multilayered approach for design pattern identification
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article; Proceedings Paper
CT International Symposium on Software Testing and Analysis (ISSTA)
CY 2007
CL Univ London Sch Oriental & African Studies, Brunei Gallery, London,
   ENGLAND
HO Univ London Sch Oriental & African Studies, Brunei Gallery
DE maintenance traceability; design patterns; interclass relationships
AB Design patterns are important in object-oriented programming because they offer design motifs, elegant solutions to recurrent design problems, which improve the quality of software systems. Design motifs facilitate system maintenance by helping maintainers to understand design and implementation. However, after implementation, design motifs are spread throughout the source code and are thus not directly available to maintainers. We present DeMIMA, an approach to semiautomatically identify microarchitectures that are similar to design motifs in source code and to ensure the traceability of these microarchitectures between implementation and design. DeMIMA consists of three layers: two layers to recover an abstract model of the source code, including binary class relationships, and a third layer to identify design patterns in the abstract model. We apply DeMIMA to five open-source systems and, on average, we observe 34 percent precision for the 12 design motifs considered. Through the use of explanation-based constraint programming, DeMIMA ensures 100 percent recall on the five systems. We also apply DeMIMA on 33 industrial components.
C1 [Gueheneuc, Yann-Gael] Univ Montreal, Dept Informat & Rech Operat, Montreal, PQ H3C 3J7, Canada.
   [Antoniol, Giuliano] Ecole Polytech, Dept Informat, Montreal, PQ H3C 3J7, Canada.
C3 Universite de Montreal; Universite de Montreal; Polytechnique Montreal
RP Guéhéneuc, YG (corresponding author), Univ Montreal, Dept Informat & Rech Operat, CP 6128,Succ Ctr Ville, Montreal, PQ H3C 3J7, Canada.
EM guehene@iro.umontreal.ca; antoniol@ieee.org
RI Guéhéneuc, Yann-Gaël/K-9371-2019
CR Albin-Amiot H., 2001, P 1 ECOOP WORKSH AUT
   Antoniol G, 2001, J SYST SOFTWARE, V59, P181, DOI 10.1016/S0164-1212(01)00061-9
   Antoniol G, 1998, PROG COMPREHEN, P153, DOI 10.1109/WPC.1998.693342
   Bansiya J., 1998, DOBBS J
   BECK K, 1994, P ECOOP 94, P139
   Bieman JM, 2003, NINTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM, PROCEEDINGS, P40, DOI 10.1109/METRIC.2003.1232454
   Brown K, 1996, TR9607 U ILL URB CHA
   CIVELLO F, 1993, P OOPSLA, P376
   Donovan A, 2004, ACM SIGPLAN NOTICES, V39, P15, DOI 10.1145/1035292.1028979
   DUCASSE S, 1995, P 10 C OBJ OR PROGR, P265
   EPPSTEIN D, 1995, PROCEEDINGS OF THE SIXTH ANNUAL ACM-SIAM SYMPOSIUM ON DISCRETE ALGORITHMS, P632
   Fowler M., 2002, Patterns of Enterprise Application Architecture
   Frakes WB., 1992, Information retrieval: Data structures and algorithms
   Gamma Erich., 1994, DESIGN PATTERNS
   Gamma Erich, 1998, JHOTDRAW
   Guéhéneuc YG, 2004, 11TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P172, DOI 10.1109/WCRE.2004.21
   Guéhéneuc YG, 2004, 11TH ASIA-PACIFIC SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P265, DOI 10.1109/APSEC.2004.13
   Guéhéneuc YG, 2002, ASE 2002: 17TH IEEE INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, P117, DOI 10.1109/ASE.2002.1115000
   GUEHENEUC YG, 2001, P 1 IJCAI WORKSH MOD, P57
   GUEHENEUC YG, 2004, P 19 C OBJ OR PROGR, P301
   Gyimóthy T, 2005, IEEE T SOFTWARE ENG, V31, P897, DOI 10.1109/TSE.2005.112
   Hedin G., 1997, LECT NOTES COMPUTER, V1357, P137
   HEUZEROTH D, 2002, P 6 WORLD C INT DES
   Jackson D., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P194, DOI 10.1109/ICSE.1999.841009
   Jackson D., 2000, 22 INT C SOFTW ENG F, P133, DOI DOI 10.1145/336512.336545
   Jahnke JH, 1997, LECT NOTES COMPUT SC, V1301, P193, DOI 10.1145/267896.267911
   JAHNKE JH, 1997, P 1 ESCE FSE WORKSH
   JUSSIEN N, 2001, P 1 CP WORKSH US INT
   JUSSIEN N, 2000, P TRICS TECHN IMPL C, P118
   Keller R. K., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P226, DOI 10.1109/ICSE.1999.841012
   Kramer C, 1996, PROCEEDINGS OF THE THIRD WORKING CONFERENCE ON REVERSE ENGINEERING, P208, DOI 10.1109/WCRE.1996.558905
   Kullbach B, 1999, PROCEEDINGS OF THE THIRD EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, P42, DOI 10.1109/CSMR.1999.756681
   *MERR WEBST, 2003, MERR WEBST ONL DICT
   Niere J, 2003, PROG COMPREHEN, P274
   Niere J, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P338, DOI 10.1109/ICSE.2002.1007980
   Niere J., 2001, P 2 WORKSH SOFT COMP, P89
   NOBLE J, 1995, P 18 C TECHN OBJ OR, P211
   *OBJ MAN GROUP, 2003, UML V1 5 SPEC
   Pettersson N, 2006, ASPEC 2006: 13TH ASIA-PACIFIC SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P317
   Philippow I., 2005, Software System Model, V4, P55
   Rich C., 1990, PROGRAMMERS APPRENTI
   Richner T., 1999, Proceedings IEEE International Conference on Software Maintenance - 1999 (ICSM'99). `Software Maintenance for Business Change' (Cat. No.99CB36360), P13, DOI 10.1109/ICSM.1999.792487
   SEEMANN J., 1998, Proceedings of 5th international symposium on Foundations of Software Engineering, P10, DOI DOI 10.1145/288195.288207
   THOMAS D, 2002, J OBJECT TECHNOLOGY, V1, P17
   Tonella P, 2001, PROC IEEE INT CONF S, P376, DOI 10.1109/ICSM.2001.972750
   Tsantalis N, 2006, IEEE T SOFTWARE ENG, V32, P896, DOI 10.1109/TSE.2006.112
   WILLS LM, 1992, THESIS MIT
   Wuyts R, 1998, TOOLS 26 - TECHNOLOGY OF OBJECT-ORIENTED LANGUAGES - PROCEEDINGS, P112, DOI 10.1109/TOOLS.1998.711007
NR 48
TC 107
Z9 135
U1 1
U2 10
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD SEP-OCT
PY 2008
VL 34
IS 5
BP 667
EP 684
DI 10.1109/TSE.2008.48
PG 18
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Engineering
GA 351WM
UT WOS:000259456600007
DA 2024-07-18
ER

PT J
AU Haley, CB
   Laney, R
   Moffett, JD
   Nuseibeh, B
AF Haley, Charles B.
   Laney, Robin
   Moffett, Jonathan D.
   Nuseibeh, Bashar
TI Security requirements engineering: A framework for representation and
   analysis
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE requirements engineering; security engineering; security requirements;
   argumentation
ID DESIGN; TRUST
AB This paper presents a framework for security requirements elicitation and analysis. The framework is based on constructing a context for the system, representing security requirements as constraints, and developing satisfaction arguments for the security requirements. The system context is described using a problem-oriented notation, then is validated against the security requirements through construction of a satisfaction argument. The satisfaction argument consists of two parts: a formal argument that the system can meet its security requirements and a structured informal argument supporting the assumptions expressed in the formal argument. The construction of the satisfaction argument may fail, revealing either that the security requirement cannot be satisfied in the context or that the context does not contain sufficient information to develop the argument. In this case, designers and architects are asked to provide additional, design information to resolve the problems. We evaluate the framework by applying it to a security requirements analysis within an air traffic control technology evaluation project.
C1 [Haley, Charles B.; Laney, Robin; Moffett, Jonathan D.; Nuseibeh, Bashar] Open Univ, Ctr Res Comp, Dept Comp, Milton Keynes MK7 6AA, Bucks, England.
C3 Open University - UK
RP Haley, CB (corresponding author), Open Univ, Ctr Res Comp, Dept Comp, Walton Hall, Milton Keynes MK7 6AA, Bucks, England.
EM c.b.laney@open.ac.uk; r.c.laney@open.ac.uk; j.moffet@open.ac.uk;
   b.nuseibeh@open.ac.uk
OI Laney, Robin/0000-0002-9319-8209; Nuseibeh, Bashar/0000-0002-3476-053X
CR Alexander I, 2003, COMPUT CONTROL ENG J, V14, P22, DOI 10.1049/cce:20030204
   ALLEN JH, 2001, P 5 NAT COLL INF SYS
   [Anonymous], 2001, Security Engineering: A Guide to Building Dependable Distributed Systems
   [Anonymous], NIST SPEC PUBL
   [Anonymous], 1998, NSPW 98 WORKSH NEW S
   [Anonymous], 1999, CHAOS REC SUCC
   [Anonymous], 1991, Technical Report SSL-92-45
   [Anonymous], 2006, CERT CC STAT 1988 20
   [Anonymous], 2005, 3 S REQTS ENGR INFO
   ANTON AI, 2001, ADV INFORM SECURITY, V2, P29
   Avizienis A, 2004, IEEE T DEPEND SECURE, V1, P11, DOI 10.1109/TDSC.2004.2
   Breaux TD, 2006, RE'06: 14TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, PROCEEDINGS, P49
   Brewer D. F. C., 1989, Proceedings 1989 IEEE Symposium on Security and Privacy (Cat. No.89CH2703-7), P206, DOI 10.1109/SECPRI.1989.36295
   Burge JE, 2004, DESIGN COMPUTING AND COGNITION '04, P557
   Capkun S., 2004, EPFLIC200443 SWISS F
   *CASA AUSTR CIV AV, 2004, ATSOC1002 CASA AUSTR
   CERVO F, 2006, AIRBORNE SEPARATION
   Chivers H, 2005, SOFTWARE PRACT EXPER, V35, P873, DOI 10.1002/spe.693
   Chung L., 2000, Non-functional Requirements in Software Engineering
   *COMP I, 2005, COMP
   Conklin J, 2003, COMP SUPP COMP W SER, P117
   Dash E., 2005, NY TIMES
   De Landtsheer R., 2005, Proceedings 10th European Software Engineering Conference/13th ACM SIGSOFT International Symposium on Foundations of Software Engineering (ESEC/SIGSOFT FSE), P41, DOI DOI 10.1145/1081706.1081715
   Devanbu P., 2000, FUTURE SOFTWARE ENG
   *FED TRAD COMM, 2006, MATT CARDSYSTEMS SOL
   Finkelstein A., 1989, Proceedings of Fifth International Workshop on Software Specification and Design (Cat. No.89CH2717-7), P185, DOI 10.1145/75199.75228
   Firesmith D., 2004, J OBJECT TECHNOLOGY, V3, P61, DOI DOI 10.5381/JOT.2004.3.1.C6
   FIRESMITH DG, 2003, CMUSEI2003TN033 C ME
   Fischer G., 1996, DESIGN RATIONALE CON, P267
   Giorgini P, 2005, 13TH IEEE INTERNATIONAL CONFERENCE ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P167, DOI 10.1109/RE.2005.43
   Glinz M., 2005, Pro- ceedings of the Third World Congress for Software Quality 3WCSQ'05, P55
   Haley CB, 2007, INTEGRATING SECURITY AND SOFTWARE ENGINEERING: ADVANCES AND FUTURE VISIONS, P16
   Haley C.B., 2006, SESS 06, P35, DOI DOI 10.1145/1137627.1137634
   Haley CB, 2006, REQUIR ENG, V11, P138, DOI 10.1007/s00766-005-0023-4
   Haley CB, 2004, 12TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, PROCEEDINGS, P102
   Haley CharlesB., 2004, PROC AOSD 04, P112, DOI [10.1145/976270.976285, DOI 10.1145/976270.976285]
   HEITMEYER CL, 2001, P INT WORKSH INF ASS, P84
   *ISO IEC, 1999, 154082 ISO IEC
   *ISO IEC, 1999, 154083 ISO IEC
   *ISO IEC, 1999, 154081 ISO IEC
   Jackson M., 2001, Problem Frames
   Jackson M., 1995, SOFTWARE REQUIREMENT
   Kavakli E., 2001, Requirements Engineering, V6, P237, DOI 10.1007/PL00010362
   Kelly Timothy Patrick, 1999, THESIS U YORK
   Kotonya G., 1998, Requirements engineering: processes and techniques
   Lautieri S, 2005, CONSTITUENTS OF MODERN SYSTEM-SAFETY THINKING, P65, DOI 10.1007/1-84628-130-X_5
   LEE J, 1991, HUMAN COMPUTER INTER, V6, P251
   Lee Y, 2002, COMPUT SECUR, V21, P345, DOI 10.1016/S0167-4048(02)00413-3
   LEVESON NG, 1986, COMPUT SURV, V18, P125, DOI 10.1145/7474.7528
   Liu L, 2003, 11TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, PROCEEDINGS, P151
   McDermott J., 1999, Proceedings 15th Annual Computer Security Applications Conference (ACSAC'99), P55, DOI 10.1109/CSAC.1999.816013
   Mead N.R., 2005, SECURITY QUALITY REQ, V30
   Moffett J., 1996, Requirements Engineering, V1, P27, DOI 10.1007/BF01235764
   MOFFETT JD, 2004, 200423 OPEN U DEP CO
   Mouratidis H, 2003, LECT NOTES COMPUT SC, V2681, P63
   MYLOPOULOS J, 1992, IEEE T SOFTWARE ENG, V18, P483, DOI 10.1109/32.142871
   MYLOPOULOS J, 1990, ACM T INFORM SYST, V8, P325, DOI 10.1145/102675.102676
   *NAT I STAND TECHN, 2006, CCMB200609001 NAT I
   *NAT I STAND TECHN, 2006, CCMB200609003 NAT I
   *NAT I STAND TECHN, 2006, CCMB200609002 NAT I
   Nuseibeh B, 2001, COMPUTER, V34, P115, DOI 10.1109/2.910904
   Pfleeger C. P., 2002, Security in computing
   Potts C., 1988, Proceedings of the 10th International Conference on Software Engineering (Cat. No.88CH2554-4), P418, DOI 10.1109/ICSE.1988.93722
   RAMESH B, 1992, IEEE T SOFTWARE ENG, V18, P498, DOI 10.1109/32.142872
   Redwine Samuel T., 2006, SOFTWARE ASSURANCE G
   RUSHBY J, 2001, P S REQ ENG INF SEC
   Senior Officials Group-Information Systems Security, 1991, INF TECHN SEC EV CRI
   Shum SB, 2003, COMP SUPP COMP W SER, P3
   Sindre G, 2000, 37TH INTERNATIONAL CONFERENCE ON TECHNOLOGY OF OBJECT-ORIENTED LANGUAGES AND SYSTEMS, PROCEEDINGS, P120, DOI 10.1109/TOOLS.2000.891363
   Spafford E. H., 1989, Computer Communication Review, V19, P17, DOI 10.1145/66093.66095
   Standish_Group, 1995, CHAOS REP
   Tettero O, 1997, COMPUT SECUR, V16, P145, DOI 10.1016/S0167-4048(97)00003-5
   The Standish Group, 2001, EXTR CHAOS
   THOMPSON K, 1984, COMMUN ACM, V27, P761, DOI 10.1145/358198.358210
   Toulmin S., 1958, The uses of argument
   Toulmin S.E., 1979, An introduction to reasoning
   van Lamsweerde A, 2004, PROC INT CONF SOFTW, P148, DOI 10.1109/ICSE.2004.1317437
   van Lamsweerde A, 2001, FIFTH IEEE INTERNATIONAL SYMPOSIUM ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P249
   Viega J, 2001, COMMUN ACM, V44, P31, DOI 10.1145/359205.359223
   Viega J., 2002, BUILDING SECURE SOFT
   WATSON M, 2006, UK ADS B RADAR ENV
   ZHUANG L, 2005, P 12 ACM C COMP COMM, P373
NR 82
TC 225
Z9 253
U1 0
U2 34
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JAN-FEB
PY 2008
VL 34
IS 1
BP 133
EP 153
DI 10.1109/TSE.2007.70754
PG 21
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 265QH
UT WOS:000253375500010
DA 2024-07-18
ER

PT J
AU Xing, ZC
   Stroulia, E
AF Xing, Zhenchang
   Stroulia, Eleni
TI API-evolution support with Diff-CatchUp
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article; Proceedings Paper
CT 22nd IEEE International Conference on Software Maintenance
CY SEP 24-27, 2006
CL Philadelphia, PA
SP IEEE
DE software reuse; API evolution; model differencing; software migration
AB Applications built on reusable component frameworks are subject to two independent, and potentially conflicting, evolution processes. The application evolves in response to the specific requirements and desired qualities of the application's stakeholders. On the other hand, the evolution of the component framework is driven by the need to improve the framework functionality and quality while maintaining its generality. Thus, changes to the component framework frequently change its API on which its client applications rely and, as a result, these applications break. To date, there has been some work aimed at supporting the migration of client applications to newer versions of their underlying frameworks, but it usually requires that the framework developers do additional work for that purpose or that the application developers use the same tools as the framework developers. In this paper, we discuss our approach to tackle the API-evolution problem in the context of reuse-based software development, which automatically recognizes the API changes of the reused framework and proposes plausible replacements to the "obsolete" API based on working examples of the framework code base. This approach has been implemented in the Diff-CatchUp tool. We report on two case studies that we have conducted to evaluate the effectiveness of our approach with its Diff-CatchUp prototype.
C1 Univ Alberta, Dept Comp Sci, Edmonton, AB T6G 2E1, Canada.
C3 University of Alberta
RP Xing, ZC (corresponding author), Univ Alberta, Dept Comp Sci, Edmonton, AB T6G 2E1, Canada.
EM xing@cs.ualberta.ca; stroulia@cs.ualberta.ca
RI Zhang, Shiwei/JIY-4344-2023; Stroulia, Eleni/H-6518-2018
OI Stroulia, Eleni/0000-0002-8784-8236
CR Chow KS, 1996, INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE, PROCEEDINGS, P359, DOI 10.1109/ICSM.1996.565039
   Cubranic D, 2003, PROC INT CONF SOFTW, P408, DOI 10.1109/ICSE.2003.1201219
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   Henkel J, 2005, PROC INT CONF SOFTW, P274
   Holmes R, 2005, PROC INT CONF SOFTW, P117
   KEMPER C, 2005, JAVAONE C
   McDonald D.W., 2000, CSCW 00, P231, DOI [DOI 10.1145/358916.3589941, 10.1145/358916.358994, DOI 10.1145/358916.358994]
   *OMG, UN MOD LANG SPEC
   Opdyke W. F., 1992, Refactoring object-oriented frameworks
   Ostertag E., 1992, ACM Transactions on Software Engineering and Methodology, V1, P205, DOI 10.1145/131736.131739
   Perkins J.H., 2006, ACM SIGSOFT SOFTWARE, V31, P111
   Rhodes B. J., 1996, PAAM 96. Proceedings of the First International Conference on the Practical Application of Intelligent Agents and Multi-Agent Technology, P487
   Roberts KC, 1997, MICROCIRCULATION-LON, V4, P253, DOI 10.3109/10739689709146788
   Xing Z., 2005, Proceedings of the 20th IEEE/ACM international Conference on Automated software engineering, P54
   XING Z, 2007, TR0713 U ALB
   Xing ZC, 2005, PROC IEEE INT CONF S, P621
   Xing ZC, 2007, AUTOMAT SOFTW ENG, V14, P215, DOI 10.1007/s10515-007-0007-3
   Xing ZC, 2006, PROC IEEE INT CONF S, P458
   Ye YW, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P513, DOI 10.1109/ICSE.2002.1007995
   ZAREMSKI AM, 1993, P 1 ACM SIGSOFT S FD, P182
NR 20
TC 92
Z9 107
U1 0
U2 7
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD DEC
PY 2007
VL 33
IS 12
BP 818
EP 836
DI 10.1109/TSE.2007.70747
PG 19
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Engineering
GA 223RG
UT WOS:000250389400003
DA 2024-07-18
ER

PT J
AU Le Traon, Y
   Baudry, B
   Jézéquel, JM
AF Le Traon, Yves
   Baudry, Benoit
   Jezequel, Jean-Marc
TI Design by contract to improve software vigilance
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE object-oriented design methods; programming by contract; diagnostics;
   metrics
ID PROGRAM; SLICES
AB Design by Contract is a lightweight technique for embedding elements of formal specification ( such as invariants, pre and postconditions) into an object-oriented design. When contracts are made executable, they can play the role of embedded, online oracles. Executable contracts allow components to be responsive to erroneous states and, thus, may help in detecting and locating faults. In this paper, we define Vigilance as the degree to which a program is able to detect an erroneous state at runtime. Diagnosability represents the effort needed to locate a fault once it has been detected. In order to estimate the benefit of using Design by Contract, we formalize both notions of Vigilance and Diagnosability as software quality measures. The main steps of measure elaboration are given, from informal definitions of the factors to be measured to the mathematical model of the measures. As is the standard in this domain, the parameters are then fixed through actual measures, based on a mutation analysis in our case. Several measures are presented that reveal and estimate the contribution of contracts to the overall quality of a system in terms of vigilance and diagnosability.
C1 France Telecom R&D, F-22307 Lannion, France.
   Univ Rennes 1, IRISA, F-35042 Rennes, France.
C3 Orange SA; Universite de Rennes
RP Le Traon, Y (corresponding author), France Telecom R&D, 2 Ave Pierre Marzin, F-22307 Lannion, France.
EM yves.letraon@rd.francetelecom.com; bbaudry@irisa.fr;
   Jean-Marc.Jezequel@irisa.fr
RI Jezequel, Jean-Marc/AAF-3854-2019; LE TRAON, Yves/T-2911-2019
OI Jezequel, Jean-Marc/0000-0002-0582-9745; LE TRAON,
   Yves/0000-0002-1045-4861
CR AGRAWAL H, 1995, P INT S SOFTW REL EN
   [Anonymous], 1986, Abstraction and Specification in Program Development
   [Anonymous], 1992, Dependability: Basic Concepts and Terminology
   BAUDRY B, 2001, P SOFTW METR S METR
   BAUDRY B, 2000, P 1 S MUT TEST OCT
   Baudry B., 2006, P INT C SOFTW ENG IC
   BRIAND L, 2002, P INT S SOFTW TEST A
   Briand L. c., 2003, SOFTWARE PRACTICE EX, V33
   Briand LC, 1996, IEEE T SOFTWARE ENG, V22, P68, DOI 10.1109/32.481535
   CarrilloCastellon M, 1996, J OBJECT-ORIENT PROG, V9, P23
   CHEON Y, 2002, P EUR C OBJ OR PROGR
   CHOCKLER H, 2002, P THEOR COMP SCI AUG
   DALLMEIER V, 2005, P F EUR C OBJ OR PRO
   DEMILLO RA, 1978, COMPUTER, V11, P34, DOI 10.1109/C-M.1978.218136
   FENKAM P, 2002, P AUT SOFTW ENG ASE
   FENTON NE, 1986, COMPUT J, V29, P330, DOI 10.1093/comjnl/29.4.330
   FINDLER RB, 2001, P OBJ OR PROGR SYST
   HOSKOTE Y, 1999, P 36 ANN C DES AUT D
   JERON T, 1999, P INT S SOFTW REL EN
   Jézéquel JM, 2001, IEEE SOFTWARE, V18, P76, DOI 10.1109/MS.2001.936221
   Jezequel JM, 1997, COMPUTER, V30, P129, DOI 10.1109/2.562936
   JONES JA, 2005, P AUT SOFTW ENG ASE
   KAMKAR M, 1995, J SYST SOFTWARE, V31, P197, DOI 10.1016/0164-1212(94)00099-9
   KITCHENHAM B, 1995, IEEE T SOFTWARE ENG, V21, P929, DOI 10.1109/32.489070
   Korel B, 1997, IEEE T SOFTWARE ENG, V23, P17, DOI 10.1109/32.581327
   Le Traon Y, 2003, J SYST SOFTWARE, V65, P31, DOI 10.1016/S0164-1212(02)00026-2
   LETRAON Y, 1998, P INT S SOFTW REL EN
   MA YS, 2002, P INT S SOFTW REL EN
   MEYER B, 1992, COMPUTER, V25, P40, DOI 10.1109/2.161279
   MEYER B, 2003, P INT WORKSH ABSTR S
   MEYER B, 1992, OBJECT ORIENTED SOFT
   MEYER B, 2000, J OBJECT ORIENTED PR, P39
   NORDBY JE, 2002, P INT C WORKSH ENG C
   OFFUTT AJ, 1996, SOFTWARE PRACTICE EX, V26
   *OMG, 2002, OBJ CONSTR LANG SPEC
   ROSENBLUM DS, 1995, IEEE T SOFTWARE ENG, V21, P19, DOI 10.1109/32.341844
   Sheppard M., 1993, DERIVATION VALIDATIO
   VOAS J, 1999, SOFTWARE QUALITY PRO, V1
   Voas J. M., 1992, Software Testing, Verification and Reliability, V2, P25, DOI 10.1002/stvr.4370020105
   WEISER M, 1982, COMMUN ACM, V25, P446, DOI 10.1145/358557.358577
   WEISER M, 1984, IEEE T SOFTWARE ENG, V10, P352, DOI 10.1109/TSE.1984.5010248
NR 41
TC 30
Z9 36
U1 0
U2 5
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD AUG
PY 2006
VL 32
IS 8
BP 571
EP 586
DI 10.1109/TSE.2006.79
PG 16
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 081XU
UT WOS:000240351700005
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Wang, F
   Huang, GD
   Yu, F
AF Wang, Farn
   Huang, Geng-Dian
   Yu, Fang
TI TCTL inevitability analysis of dense-time systems:: <i>From theory to
   engineering</i>
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE TCTL; real-time systems; inevitability; non-Zeno; model-checking;
   greatest fixpoint; abstraction
ID CONCURRENT SYSTEMS
AB Inevitability properties in branching temporal logics are of the syntax for all lozenge phi, where phi is an arbitrary ( timed) CTL ( Computation Tree Logic) formula. Such inevitability properties in dense-time logics can be analyzed with the greatest fixpoint calculation. We present algorithms to model-check inevitability properties. We discuss a technique for early decision on greatest fixpoint calculation which has shown promising performance against several benchmarks. We have experimented with various issues which may affect the performance of TCTL inevitability analysis. Specifically, our algorithms come with a parameter for the measurement of time-progress. We report the performance of our implementation with regard to various parameter values and with or without the non-Zeno computation requirement in the evaluation of greatest fixpoints. We have also experimented with safe abstraction techniques for model-checking TCTL inevitability properties. The experiment results help us in deducing rules for setting the parameter for verification performance. Finally, we summarize suggestions for configurations of efficient TCTL inevitability evaluation procedure.
C1 Natl Taiwan Univ, Dept Elect Engn, Taipei 106, Taiwan.
   Univ Calif Santa Barbara, Coll Engn, Dept Comp Sci, Santa Barbara, CA 93106 USA.
C3 National Taiwan University; University of California System; University
   of California Santa Barbara
RP Wang, F (corresponding author), Natl Taiwan Univ, Dept Elect Engn, BL 616,Nr 1,Sec 4,Roosevelt Rd, Taipei 106, Taiwan.
EM farn@cc.ee.ntu.edu.tw; gdhuang@ntu.edu.tw; yuf@cs.ucsb.edu
CR ALPERN B, 1985, INFORM PROCESS LETT, V21, P181, DOI 10.1016/0020-0190(85)90056-0
   Alur R., 1990, Proceedings. Fifth Annual IEEE Symposium on Logic in Computer Science (90CH2897-7), P414, DOI 10.1109/LICS.1990.113766
   Alur R., 1990, P 17 INT C AUT LANG, P322
   [Anonymous], SOFTWARE ENG PRACTIT
   [Anonymous], 1997, INT J SOFTWARE TOOLS
   Balarin F, 1996, REAL TIM SYST SYMP P, P52, DOI 10.1109/REAL.1996.563700
   Behrmann G., 1999, Computer Aided Verification. 11th International Conference, CAV'99. Proceedings (Lecture Notes in Computer Science Vol.1633), P341
   BEHRMANN G, 2004, P 10 INT C TOOLS ALG, P312
   CAMPOS SV, 1996, THESIS CARNEGIE MELL
   Clarke Edmund M., 2001, Model Checking
   CLARKE EM, 1986, ACM T PROGR LANG SYS, V8, P244, DOI 10.1145/5397.5399
   CLARKE EM, 2000, P COMP AID VER, P154
   COUSOT P, 1992, J LOGIC PROGRAM, V13, P103, DOI 10.1016/0743-1066(92)90030-7
   Daws Conrado., 1996, HYBRID SYSTEMS 3, V1066, P208, DOI DOI 10.1007/BFB0020947
   DILL DL, 1989, P WORKSH COMP AID VE, P197
   EAVES BC, 1992, MATH PROGRAM, V53, P307, DOI 10.1007/BF01585709
   EMERSON EA, 1987, INFORM PROCESS LETT, V24, P77, DOI 10.1016/0020-0190(87)90097-4
   HAARTSEN J, 2006, BLUETOOTH BASEBAND S
   HENZINGER TA, 1992, PROCEEDINGS OF THE SEVENTH ANNUAL IEEE SYMPOSIUM ON LOGIC IN COMPUTER SCIENCE, P394, DOI 10.1109/LICS.1992.185551
   HSIUNG PA, 1999, P IFIP JOINT INT C F, P279
   Laroussinie Francois., 1998, P JOINT INT C FORMAL, P439
   MAZURKIEWICZ A, 1989, THEOR COMPUT SCI, V64, P281, DOI 10.1016/0304-3975(89)90052-2
   MOLLER J, 1999, P ANN C EUR ASS COMP, P111
   MOLLER MO, 2002, ELECT NOTES THEORETI, V65
   OBER I, 2004, P 11 INT SPIN WORKSH, P127
   PETTERSSON P, 2000, B EUROPEAN ASS THEOR, V70, P40
   Wang F, 2002, IEEE T COMPUT, V51, P61, DOI 10.1109/12.980017
   Wang F, 2001, INT FED INFO PROC, V69, P235
   Wang F, 2000, P INT COMP SOFTW APP, V24, P509, DOI 10.1109/CMPSAC.2000.884774
   Wang F, 1998, THIRD IEEE INTERNATIONAL HIGH-ASSURANCE SYSTEMS ENGINEERING SYMPOSIUM, PROCEEDINGS, P134, DOI 10.1109/HASE.1998.731605
   Wang F, 2000, LECT NOTES COMPUT SC, V1785, P157
   WANG F, 2003, P 9 INT C REAL TIM E, P595
   WANG F, 2003, P J INT C VER MOD CH, P189
   WANG F, 2001, P WORKSH REAL TIM TO
   WANG F, 2003, P 9 INT C REAL TIM E, P254
   Wong-Toi H, 1995, THESIS STANFORD U
NR 36
TC 7
Z9 8
U1 0
U2 3
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUL
PY 2006
VL 32
IS 7
BP 510
EP 526
DI 10.1109/TSE.2006.71
PG 17
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 071MF
UT WOS:000239605600006
DA 2024-07-18
ER

PT J
AU Sun, J
   Dong, JS
AF Sun, Jun
   Dong, Jin Song
TI Design synthesis from interaction and state-based specifications
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Z language; live sequence charts; specification; synthesis
ID SUPERVISORY CONTROL; SYSTEMS; VERIFICATION
AB Interaction-based and state-based modeling are two complementary approaches of behavior modeling. The former focuses on global interactions between system components. The latter concentrates on the internal states of individual components. Both approaches have been proven useful in practice. One challenging and important research objective is to combine the modeling power of both effectively and then use the combination as the basis for automatic design synthesis. We present a combination of interaction-based and state-based modeling, namely, Live Sequence Charts and Z, for system specification. We then propose a way of generating distributed design from the combinations. Our approach handles systems with intensive interactive behaviors as well as complex state structures.
C1 Natl Univ Singapore, Dept Comp Sci, Singapore 117543, Singapore.
C3 National University of Singapore
RP Sun, J (corresponding author), Natl Univ Singapore, Dept Comp Sci, 3 Sci Dr 2, Singapore 117543, Singapore.
EM sunj@compu.nus.edu.sg; dongjs@compu.nus.edu.sg
RI Dong, Jin Song/B-9396-2013
OI Sun, Jun/0000-0002-3545-1392
CR [Anonymous], 2001, P ACM SIGPLAN 2001 C, DOI DOI 10.1145/378795.378846
   [Anonymous], 1989, C RECORD 16 ANN ACM, DOI DOI 10.1145/75277.75293
   *AP SOFTW FDN, 2001, XERC JAV PARS V1 4 4
   Bontemps Y, 2005, LECT NOTES COMPUT SC, V3466, P174
   Bontemps Y, 2004, FUND INFORM, V62, P139
   BONTEMPS Y, 2005, THESIS U NAMUR
   BONTEMPS Y, 2005, P FDN SOFTW SCI COMP, P364
   Broy M, 2005, SCI COMPUT PROGRAM, V54, P213, DOI 10.1016/j.scico.2004.04.003
   BROY M, 2002, ELECT NOTES THEORIES, V65
   Cavalcanti A, 1998, COMPUT J, V41, P1, DOI 10.1093/comjnl/41.1.1
   Damm W, 2001, FORM METHOD SYST DES, V19, P45, DOI 10.1023/A:1011227529550
   Dijkstra E. W., 1976, A Discipline of Pro-gramming
   DILL DL, 1991, P INT C COMP AID VER, P255
   FELDMANN RL, 1999, SFB501 U KAIS
   HAREL D, 1987, SCI COMPUT PROGRAM, V8, P231, DOI 10.1016/0167-6423(87)90035-9
   Harel D, 2005, LECT NOTES COMPUT SC, V3393, P309
   Harel D., 2002, International Journal of Foundations of Computer Science, V13, P5, DOI 10.1142/S0129054102000935
   Harel D., 2003, COME LETS PLAY SCENA, DOI 10.1007/978-3-642-19029-2
   HAUGEN O, 2003, P INT C UML, P388
   HENZINGER TA, 1997, P INT C CONC THEOR, P273
   Hoare CAR., 1985, Communicating Sequential Processes
   *INT TEL UN, 1999, MESS SEQ CHART MSC Z
   ISO/IEC, 2002, 135682002 ISOIEC
   Jones CB., 1990, SYSTEMATIC SOFTWARE
   KLOSE J, 2001, P 7 INT C TOOLS ALG, P512
   KOSKIMIES K, 1994, SOFTWARE PRACT EXPER, V24, P643, DOI 10.1002/spe.4380240704
   KRUGER I, 1998, P IFIP WG10 3 WG10 5, P61
   Kucera A, 1999, LECT NOTES COMPUT SC, V1664, P368
   Letier E, 2005, PROC INT CONF SOFTW, P382
   LIN F, 1988, INFORM SCIENCES, V44, P199, DOI 10.1016/0020-0255(88)90002-3
   LOISEAUX C, 1995, FORM METHOD SYST DES, V6, P11, DOI 10.1007/BF01384313
   Madhusudan P, 2002, THEOR COMPUT SCI, V274, P117, DOI 10.1016/S0304-3975(00)00307-8
   Mahony B, 2000, IEEE T SOFTWARE ENG, V26, P150, DOI 10.1109/32.841115
   MARELLY R, 2002, P 17 ANN ACM C OBJ O, P83
   Owre Sam., 1992, P 11 INT C AUTOMATED, P748
   PNUELI A, 1990, P IEEE S FDN COMP SC
   RAMADGE PJ, 1987, SIAM J CONTROL OPTIM, V25, P206, DOI 10.1137/0325013
   ROYCHOUDHURY A, 2003, P LECT CONC PETR NET, P789
   Smith G, 2001, FORM METHOD SYST DES, V18, P249, DOI 10.1023/A:1011269103179
   Sun J, 2005, LECT NOTES COMPUT SC, V3582, P415
   Sun J, 2002, ANN SOFTW ENG, V13, P329, DOI 10.1023/A:1016513914276
   SUN J, 2005, LIVE SEQUENCE CHARTS
   SUN J, 2005, TRC505 NAT U SING
   THOMSEN WH, 1995, P TECH AS P, P1
   Uchitel S, 2001, PROC INT CONF SOFTW, P188, DOI 10.1109/ICSE.2001.919093
   UCHITEL S, 2001, P JOINT 8 EUR SOFTW, P74
   WELCH P, 2003, COMMUNICATING SEQUEN
   Whittle J, 2003, PROC INT CONF SOFTW, P490, DOI 10.1109/ICSE.2003.1201227
   Woodcock J., 1996, Using Z: Specification, Refinement, and Proof
NR 49
TC 28
Z9 30
U1 1
U2 7
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUN
PY 2006
VL 32
IS 6
BP 349
EP 364
DI 10.1109/TSE.2006.55
PG 16
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 055VP
UT WOS:000238479000001
OA Green Published, Green Submitted
DA 2024-07-18
ER

PT J
AU Ruthruff, JR
   Burnett, M
   Rothermel, G
AF Ruthruff, JR
   Burnett, M
   Rothermel, G
TI Interactive fault localization techniques in a spreadsheet environment
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE fault localization; debugging; end-user software engineering;
   spreadsheets; end-user programming
AB End-user programmers develop more software than any other group of programmers, using software authoring devices such as multimedia simulation builders, e-mail filtering editors, by-demonstration macro builders, and spreadsheet environments. Despite this, there has been only a little research on finding ways to help these programmers with the dependability of the software they create. We have been working to address this problem in several ways, one of which includes supporting end-user debugging activities through interactive fault localization techniques. This paper investigates fault localization techniques in the spreadsheet domain, the most common type of end-user programming environment. We investigate a technique previously described in the research literature and two new techniques. We present the results of an empirical study to examine the impact of two individual factors on the effectiveness of fault localization techniques. Our results reveal several insights into the contributions such techniques can make to the end-user debugging process and highlight key issues of interest to researchers and practitioners who may design and evaluate future fault localization techniques.
C1 Univ Nebraska, Dept Comp Sci & Engn, Lincoln, NE 68588 USA.
   Oregon State Univ, Sch Elect Engn & Comp Sci, Corvallis, OR 97331 USA.
C3 University of Nebraska System; University of Nebraska Lincoln; Oregon
   State University
RP Univ Nebraska, Dept Comp Sci & Engn, Lincoln, NE 68588 USA.
EM ruthruff@cse.unl.edu; burnett@eecs.orst.edu; grother@cse.unl.edu
RI Jaafar, Mohamad Farid/B-4563-2010
CR Abraham R, 2004, 2004 IEEE SYMPOSIUM ON VISUAL LANGUAGES AND HUMAN CENTRIC COMPUTING: PROCEEDINGS, P165, DOI 10.1109/VLHCC.2004.29
   Agrawal H, 1995, SIXTH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P143, DOI 10.1109/ISSRE.1995.497652
   Agrawal Hiralal, 1990, PLDI, P246, DOI 10.1145/93542.93576
   Ahmad Y, 2003, 18TH IEEE INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P174
   ALLWOOD CM, 1984, COGNITIVE SCI, V8, P413, DOI 10.1016/S0364-0213(84)80009-9
   Andrew J Ko, 2004, P SIGCHI C HUMAN FAC, V6, P151, DOI [DOI 10.1145/985692.985712, 10.1145/985692.985712]
   [Anonymous], P INT C INF SYST IMP
   [Anonymous], 2003, TECHNOMETRICS
   [Anonymous], 2003, SOFTVIS 03, DOI DOI 10.1145/774833.774851
   Antoniu T, 2004, PROC INT CONF SOFTW, P439, DOI 10.1109/ICSE.2004.1317466
   Ayalew Y., 2003, P EUR SPREADSH RISKS
   BETTS M, 2004, COMPUTERWORLD    MAY, P47
   Boehm B, 2001, COMPUTER, V34, P135, DOI 10.1109/2.962984
   Brown D, 2003, 200S IEEE SYMPOSIUM ON HUMAN CENTRIC COMPUTING LANGUAGES AND ENVIRONMENTS, P203
   Bunus P, 2003, 18TH IEEE INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P253, DOI 10.1109/ASE.2003.1240315
   Burnett M, 2004, COMMUN ACM, V47, P53, DOI 10.1145/1015864.1015889
   Burnett M, 2003, PROC INT CONF SOFTW, P93, DOI 10.1109/ICSE.2003.1201191
   Burnett M, 2001, J FUNCT PROGRAM, V11, P155, DOI 10.1017/S0956796800003828
   Burnett M., 1999, Proceedings 1999 IEEE Symposium on Visual Languages, P30, DOI 10.1109/VL.1999.795872
   Chen TY, 1997, J SOFTW MAINT-RES PR, V9, P33, DOI 10.1002/(SICI)1096-908X(199701)9:1<33::AID-SMR143>3.0.CO;2-4
   Clermont M, 2003, 10TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P306, DOI 10.1109/WCRE.2003.1287261
   Cleve H, 2005, PROC INT CONF SOFTW, P342
   COOK C, 1997, P EMP SUTD PROGR 7 W, P20
   Cox P. T., 1989, 1989 IEEE Workshop on Visual Languages (Cat. No.89TH0277-4), P150, DOI 10.1109/WVL.1989.77057
   DeMillo R. A., 1996, SIGSOFT Software Engineering Notes, V21, P121, DOI [10.1145/229000.226310, 10.1145/226295.226310]
   Duesterwald Evelyn., 1992, PROCEEDING 2 IRVINE, P131
   Erwig Martin., 2002, PADL 02 P 4 INT S PR, P173
   Fisher M, 2002, 13TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P257, DOI 10.1109/ISSRE.2002.1173265
   FISHER M, 2005, TRUNLCSE20050003 U N
   Fisher Marc., 2005, P 1 WORKSHOP END USE, P47
   FRANCEL M, 1992, P ACM 30 ANN SE REG, P69
   HILZENRATH DS, 2003, WASHINGTON POST 1031
   Igarashi T, 1998, 1998 IEEE SYMPOSIUM ON VISUAL LANGUAGES, PROCEEDINGS, P118, DOI 10.1109/VL.1998.706154
   Jones JA, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P467, DOI 10.1109/ICSE.2002.1007991
   Karam MR, 2001, IEEE SYMPOSIA ON HUMAN-CENTRIC COMPUTING LANGUAGES AND ENVIRONMENTS, PROCEEDINGS, P280, DOI 10.1109/HCC.2001.995275
   Ko AJ, 2003, 200S IEEE SYMPOSIUM ON HUMAN CENTRIC COMPUTING LANGUAGES AND ENVIRONMENTS, P7
   KOREL B, 1990, J SYST SOFTWARE, V13, P187, DOI 10.1016/0164-1212(90)90094-3
   Krishna VB, 2001, PROC IEEE INT CONF S, P72, DOI 10.1109/ICSM.2001.972713
   LASKI J, 1993, IEEE T SOFTWARE ENG, V9, P347
   Lyle J., 1987, Proceedings of the ICCEA, ICCEA'87, P877
   MILLER R, 2001, P 14 S US INT SOFTW, P81
   NTAFOS SC, 1984, IEEE T SOFTWARE ENG, V10, P795, DOI 10.1109/TSE.1984.5010308
   PAN H, 1992, P 10 PAC NW SOFTW QU
   PANKO R., 1995, INFORMATION WEEK MAY, P100
   Panko R. R., 1998, Journal of End User Computing, V10, P15
   Phalgune A, 2005, 2005 IEEE SYMPOSIUM ON VISUAL LANGUAGE AND HUMAN-CENTRIC COMPUTING, PROCEEDINGS, P45, DOI 10.1109/VLHCC.2005.40
   Pierce BC, 2000, ACM T PROGR LANG SYS, V22, P1, DOI 10.1145/345099.345100
   Pytlik Brock., 2003, Proceedings of AADEBUG'03, P273
   RAPPS S, 1985, IEEE T SOFTWARE ENG, V11, P367, DOI 10.1109/TSE.1985.232226
   Raz O, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P302, DOI 10.1109/ICSE.2002.1007977
   Renieris M, 2003, 18TH IEEE INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P30, DOI 10.1109/ASE.2003.1240292
   ROBERTSON G, 2003, OTTAWA CITIZEN  0605
   Rothermel G, 2001, ACM T SOFTW ENG METH, V10, P110, DOI 10.1145/366378.366385
   Rothermel K. J., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, P230, DOI 10.1109/ICSE.2000.870414
   Ruthruff JR, 2005, J VISUAL LANG COMPUT, V16, P3, DOI 10.1016/j.jvlc.2004.07.001
   Ruthruff JR, 2005, PROC INT CONF SOFTW, P352
   Ruthruff JR, 2004, 2004 IEEE SYMPOSIUM ON VISUAL LANGUAGES AND HUMAN CENTRIC COMPUTING: PROCEEDINGS, P115, DOI 10.1109/VLHCC.2004.44
   RUTHRUFF JR, 2005, P 1 WORKSH END US SO, P57
   Sajaniemi J, 2000, J VISUAL LANG COMPUT, V11, P49, DOI 10.1006/jvlc.1999.0142
   Scaffidi C, 2005, 2005 IEEE SYMPOSIUM ON VISUAL LANGUAGE AND HUMAN-CENTRIC COMPUTING, PROCEEDINGS, P207, DOI 10.1109/VLHCC.2005.34
   Siegel S., 1998, NONPARAMETRIC STAT B, V2nd
   TIP F, 1995, J PROGRAM LANG, V3, P121
   Voas J. M., 1995, AADEBUG. 2nd International Workshop on Automated and Algorithmic Debugging, P133
   WAGNER E, 2003, P INT C INT US INT J, P331
   Wagner KD, 2004, J CLIN PSYCHIAT, V65, P30
   WEISER M, 1984, IEEE T SOFTWARE ENG, V10, P352, DOI 10.1109/TSE.1984.5010248
   Wilson A., 2003, P SIGCHI C HUM FACT, P305, DOI [DOI 10.1145/642611.642665, https://doi.org/10.1145/642611.642665]
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
NR 68
TC 13
Z9 14
U1 0
U2 5
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD APR
PY 2006
VL 32
IS 4
BP 213
EP 239
DI 10.1109/TSE.2006.37
PG 27
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 036HG
UT WOS:000237061600001
DA 2024-07-18
ER

PT J
AU Auer, M
   Trendowicz, A
   Graser, B
   Haunschmid, E
   Biffl, S
AF Auer, M
   Trendowicz, A
   Graser, B
   Haunschmid, E
   Biffl, S
TI Optimal project feature weights in analogy-based cost estimation:
   Improvement and limitations
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE software cost estimation; analogy-based cost estimation; project
   clustering; project features
ID REGRESSION-MODELS; NEURAL-NETWORKS; SOFTWARE
AB Cost estimation is a vital task in most important software project decisions such as resource allocation and bidding. Analogy-based cost estimation is particularly transparent, as it relies on historical information from similar past projects, whereby similarities are determined by comparing the projects' key attributes and features. However, one crucial aspect of the analogy-based method is not yet fully accounted for: the different impact or weighting of a project's various features. Current approaches either try to find the dominant features or require experts to weight the features. Neither of these yields optimal estimation performance. Therefore, we propose to allocate separate weights to each project feature and to find the optimal weights by extensive search. We test this approach on several real-world data sets and measure the improvements with commonly used quality metrics. We find that this method 1) increases estimation accuracy and reliability, 2) reduces the model's volatility and, thus, is likely to increase its acceptance in practice, and 3) indicates upper limits for analogy-based estimation quality as measured by standard metrics.
C1 Vienna Univ Technol, Inst Software Technol & Interact Syst, A-1040 Vienna, Austria.
   Fraunhofer Inst Expt Software Engn, D-67663 Kaiserslautern, Germany.
   Act Management Consulting, A-1160 Vienna, Austria.
   Vienna Univ Technol, Dept Comp Sci, A-1040 Vienna, Austria.
C3 Technische Universitat Wien; Fraunhofer Gesellschaft; Technische
   Universitat Wien
RP 145 W 58th St, New York, NY 10019 USA.
EM martin.auer@tuwien.ac.at; adam.trendowicz@iese.fhg.de;
   bernhard.graser@gwd.at; haunschmid@zid.tuwien.ac.at;
   stefan.biffl@tuwien.ac.at
RI Trendowicz, Adam/AAB-7935-2020; Biffl, Stefan/AAP-6073-2020
OI Biffl, Stefan/0000-0002-3413-7780
CR ALBRECHT AJ, 1983, IEEE T SOFTWARE ENG, V9, P639, DOI 10.1109/TSE.1983.235271
   Angelis L., 2000, Empirical Software Engineering, V5, P35, DOI 10.1023/A:1009897800559
   AUER M, 2004, P ACM IEEE INT A EMP
   AUER M, 2003, P IEEE INT C INF REU
   Bode J, 1998, INFORM MANAGE-AMSTER, V34, P33, DOI 10.1016/S0378-7206(98)00043-3
   Boehm BW., 2000, SOFTWARE COST ESTIMA, VII
   BRIAND LC, 1992, IEEE T SOFTWARE ENG, V18, P931, DOI 10.1109/32.177363
   Desharnais J. M., 1989, Analyse statistique de la productivitie des projects informatique a partie de la technique des point des function
   Finnie GR, 1997, J SYST SOFTWARE, V39, P281, DOI 10.1016/S0164-1212(97)00055-1
   Foss T, 2003, IEEE T SOFTWARE ENG, V29, P985, DOI 10.1109/TSE.2003.1245300
   Hughes RT, 1996, INFORM SOFTWARE TECH, V38, P67, DOI 10.1016/0950-5849(95)01045-9
   Jones C., 1998, Estimating Software Cost
   KEMMERER C, 1987, COMM ACM         MAY, P416
   Maxwell KD, 1996, IEEE T SOFTWARE ENG, V22, P706, DOI 10.1109/32.544349
   Mendes E, 2003, EMPIR SOFTW ENG, V8, P163, DOI 10.1023/A:1023062629183
   MENDES E, 2003, P 14 ACM C HYP HYP H
   Myrtveit I, 1999, IEEE T SOFTWARE ENG, V25, P510, DOI 10.1109/32.799947
   Shepperd M, 1997, IEEE T SOFTWARE ENG, V23, P736, DOI 10.1109/32.637387
   Shepperd M, 1996, PROC INT CONF SOFTW, P170, DOI 10.1109/ICSE.1996.493413
   Walkerden F., 1999, Empirical Software Engineering, V4, P135, DOI 10.1023/A:1009872202035
   Wieczorek I, 2002, EIGHTH IEEE SYMPOSIUM ON SOFTWARE METRICS, PROCEEDINGS, P237, DOI 10.1109/METRIC.2002.1011342
   WIECZOREK I, 2001, THESIS FRAUNHOFER I
NR 22
TC 76
Z9 78
U1 1
U2 13
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD FEB
PY 2006
VL 32
IS 2
BP 83
EP 92
DI 10.1109/TSE.2006.1599418
PG 10
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 012AD
UT WOS:000235309700002
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Sawyer, P
   Rayson, P
   Cosh, K
AF Sawyer, P
   Rayson, P
   Cosh, K
TI Shallow knowledge as an aid to deep understanding in early phase
   requirements engineering
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE specification; elicitation methods; tools; linguistic processing;
   document analysis
AB Requirements engineering's continuing dependence on natural language description has made it the focus of several efforts to apply language engineering techniques. The raw textual material that forms an input to early phase requirements engineering and which informs the subsequent formulation of the requirements is inevitably uncontrolled and this makes its processing very hard. Nevertheless, sufficiently robust techniques do exist that can be used to aid the requirements engineer provided that the scope of what can be achieved is understood. In this paper, we show how combinations of lexical and shallow semantic analysis techniques developed from corpus linguistics can help human analysts acquire the deep understanding needed as the first step towards the synthesis of requirements.
C1 Univ Lancaster, Dept Comp, Infolab21, Lancaster LA1 4WA, England.
   Payap Univ, Comp Informat Syst Program, Chiang Mai 50000, Thailand.
C3 Lancaster University
RP Univ Lancaster, Dept Comp, Infolab21, South Dr, Lancaster LA1 4WA, England.
EM sawyer@comp.lancs.ac.uk; paul@comp.lancs.ac.uk; kenneth_c@payap.ac.th
RI Rayson, Paul/HKW-7858-2023
OI Rayson, Paul/0000-0002-1257-2191; Sawyer, Peter
   Harvey/0000-0001-8044-2738
CR AGUILERA C, 1990, J SYSTEMS SOFTWARE, V13
   AMBRIOLA V, 1999, P 4 INT C APPL NAT L
   [Anonymous], DATABASE SYSTEMS, DOI DOI 10.1145/320434.320440
   [Anonymous], COMPUTATIONAL LINGUI
   ARCHER D, 2004, P KEYW WORKSH INV TA
   Aston G., 1998, BNC HDB EXPLORING BR
   BENTLEY R, 1992, P 4 ACM S COMP SUPP
   BERRY D, 1987, J SOFTWARE SYSTEMS, V7
   Berry-Rogghe G., 1973, The Computer and Literary Studies
   CASTRO J, 2002, INFORMATION SYSTEMS, V27
   COSH K, 2003, THESIS LANCASTER U U
   CUNNINGHAM H, 1999, J NATURAL LANGUAGE E, V5, P1
   CYRE W, 1997, FORMAL METHOS SYSTEM, V10
   DAG J, 2002, REQUIREMENTS ENG, V7
   Dag JNO, 2005, IEEE SOFTWARE, V22, P32, DOI 10.1109/MS.2005.1
   FABRINI F, 2001, P 7 INT WORKSH REQ E
   FANTECHI A, 2003, REQUIREMENTS ENG, V8
   GARIGLIANO R, 1994, P 13 INT C ART INT E
   GARIGLIANO R, 1995, J NATURAL LANGUAGE E, V1
   GERVASI V, 2002, SOFTWARE PRACTICE EX, V32
   GERVASI V, 1999, THESIS U STUDI PISA
   GOLDIN L, 1997, AUTOMATED SOFTWARE E, V4
   JURISTO N, 2000, IEEE SOFTWARE, V17
   KOF L, 2004, P IASTED IN C SOFTW
   LECCEUCHE R, 2000, P 15 IEEE INT C AUT
   LEE BS, 2002, P 19 INT C COMP LING
   Leech G., 1997, CORPUS ANNOTATION LI, DOI [10.4324/9781315841366-13, DOI 10.4324/9781315841366-13]
   Lenat D., 1995, COMM ACM, V38
   LUI K, 2000, SEMIOTICS INFORMATIO
   MAAREK Y, 1989, P 5 INT WORKSH SOFTW
   MAIDEN N, 2004, P 16 INT C ADV INF S
   Manning ChristopherD., 1999, Foundations of natural language processing
   MCARTHER T, 1981, LONGMAN LEXICON CONT
   METAIS E, 2002, DATA KNOWLEDGE ENG, V41
   Mich L., 2004, REQUIREMENTS ENG, V9
   MICH L, 2002, DIT020047 U TRENT DE
   MILLER G, 1995, COMM ACM, V38
   Oakes M., 1998, STAT CORPUS LINGUIST
   OSBORNE M, 1996, P 2 IEEE INT C REQ E
   Rayson P., 2004, P WORKSH NAM ENT REC, P7
   Rayson P, 2000, P 5 INT C APPL NAT L
   ROLLAND C, 1992, LECT NOTES COMPUTER, V593
   ROSENBURG L, 1998, P 15 ANN PAC NW SOFT
   RUPP C, 2000, P EUROSPI 2000
   RYAN K, 1993, P 1 IEEE INT S REQ E
   SAMPAIO A, 2005, P WORKSH EARL ASP 20
   SAWYER P, 2002, INFORMATION SYSTEMS, V4
   SAWYER P, 2004, P 10 INT WORKSH REQ
   STAMPER N, 1994, REQUIREMENTS ENG TEC
   STEUTEN A, 1999, P 4 INT C APPL NAT L
   Yu E., 1997, P 3 IEEE INT S REQ E
   [No title captured]
NR 52
TC 51
Z9 63
U1 0
U2 10
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD NOV
PY 2005
VL 31
IS 11
BP 969
EP 981
DI 10.1109/TSE.2005.129
PG 13
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 989GE
UT WOS:000233660100005
DA 2024-07-18
ER

PT J
AU Ostrand, TJ
   Weyuker, EJ
   Bell, RM
AF Ostrand, TJ
   Weyuker, EJ
   Bell, RM
TI Predicting the location and number of faults in large software systems
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article; Proceedings Paper
CT IEEE International Symposium on Software Testing and Analysis
CY JUL 11-14, 2004
CL Boston, MA
SP IEEE
DE software faults; fault-prone; prediction; regression model; empirical
   study; software testing
AB Advance knowledge of which files in the next release of a large software system are most likely to contain the largest numbers of faults can be a very valuable asset. To accomplish this, a negative binomial regression model has been developed and used to predict the expected number of faults in each file of the next release of a system. The predictions are based on the code of the file in the current release, and fault and modification history of the file from previous releases. The model has been applied to two large industrial systems, one with a history of 17 consecutive quarterly releases over 4 years, and the other with nine releases over 2 years. The predictions were quite accurate: For each release of the two systems, the 20 percent of the files with the highest predicted number of faults contained between 71 percent and 92 percent of the faults that were actually detected, with the overall average being 83 percent. The same model was also used to predict which files of the first system were likely to have the highest fault densities ( faults per KLOC). In this case, the 20 percent of the files with the highest predicted fault densities contained an average of 62 percent of the system's detected faults. However, the identified files contained a much smaller percentage of the code mass than the files selected to maximize the numbers of faults. The model was also used to make predictions from a much smaller input set that only contained fault data from integration testing and later. The prediction was again very accurate, identifying files that contained from 71 percent to 93 percent of the faults, with the average being 84 percent. Finally, a highly simplified version of the predictor selected files containing, on average, 73 percent and 74 percent of the faults for the two systems.
C1 AT&T Labs Res, Florham Pk, NJ 07932 USA.
C3 AT&T
RP AT&T Labs Res, 180 Pk Ave, Florham Pk, NJ 07932 USA.
EM ostrand@research.att.com; weyuker@research.att.com;
   rbell@research.att.com
CR ADAMS EN, 1984, IBM J RES DEV, V28, P2, DOI 10.1147/rd.281.0002
   [Anonymous], 2002, P 2002 ACM SIGSOFT I
   BASILI VR, 1984, COMMUN ACM, V27, P42, DOI 10.1145/69605.2085
   Fenton NE, 2000, IEEE T SOFTWARE ENG, V26, P797, DOI 10.1109/32.879815
   Graves TL, 2000, IEEE T SOFTWARE ENG, V26, P653, DOI 10.1109/32.859533
   Guo L., 2004, P INT S SOFTW REL EN
   Hatton L, 1997, IEEE SOFTWARE, V14, P89, DOI 10.1109/52.582978
   Khoshgoftaar TM, 1996, IEEE SOFTWARE, V13, P65, DOI 10.1109/52.476287
   McCabe T. J., 1976, IEEE Transactions on Software Engineering, VSE-2, P308, DOI 10.1109/TSE.1976.233837
   McCullagh P., 2019, Generalized linear models
   Moller K.-H., 1993, Proceedings First International Software Metrics Symposium (Cat. No.93TH0518-1), P82, DOI 10.1109/METRIC.1993.263798
   MUNSON JC, 1992, IEEE T SOFTWARE ENG, V18, P423, DOI 10.1109/32.135775
   Ohlsson N, 1996, IEEE T SOFTWARE ENG, V22, P886, DOI 10.1109/32.553637
   OSTRAND T, 2004, P IEE WORKSH DYN AN
   Pighin M, 2003, 2003 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P206, DOI 10.1109/ISESE.2003.1237979
   Rothermel G, 2001, IEEE T SOFTWARE ENG, V27, P929, DOI 10.1109/32.962562
   SAS Institute, 1999, SAS STAT US GUID VER
NR 17
TC 401
Z9 461
U1 1
U2 25
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD APR
PY 2005
VL 31
IS 4
BP 340
EP 355
DI 10.1109/TSE.2005.49
PG 16
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Engineering
GA 929BY
UT WOS:000229318300006
DA 2024-07-18
ER

PT J
AU Beyer, D
   Noack, A
   Lewerentz, C
AF Beyer, D
   Noack, A
   Lewerentz, C
TI Efficient relational calculation for software analysis
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article; Proceedings Paper
CT 10th Working Conference on Reverse Engineering (WCRE 2003)
CY NOV 13-16, 2003
CL VICTORIA, CANADA
SP Reengn Forum, IEEE Comp Soc, Tech Council Sofware Engn, Univ Victoria, Univ Alberta
DE logic programming; graph algorithms; data structures; reverse
   engineering; reengineering
ID DESIGN; TRANSFORMATIONS
AB Calculating with graphs and relations has many applications in the analysis of software systems, for example, the detection of design patterns or patterns of problematic design and the computation of design metrics. These applications require an expressive query language, in particular, for the detection of graph patterns, and an efficient evaluation of the queries even for large graphs. In this paper, we introduce RML, a simple language for querying and manipulating relations based on predicate calculus, and CrocoPat, an interpreter for RML programs. RML is general because it enables the manipulation not only of graphs (i.e., binary relations), but of relations of arbitrary arity. CrocoPat executes RML programs efficiently because it internally represents relations as binary decision diagrams, a data structure that is well-known as a compact representation of large relations in computer-aided verification. We evaluate RML by giving example programs for several software analyses and CrocoPat by comparing its performance with calculators for binary relations, a Prolog system, and a relational database management system.
C1 Univ Calif Berkeley, Dept Elect Engn & Comp Sci, Berkeley, CA 94720 USA.
   Brandenburg Tech Univ Cottbus, Software Syst Engn Res Grp, D-03013 Cottbus, Germany.
C3 University of California System; University of California Berkeley;
   Brandenburg University of Technology Cottbus
RP Univ Calif Berkeley, Dept Elect Engn & Comp Sci, Berkeley, CA 94720 USA.
EM beyer@eecs.berkeley.edu; an@informatik.tu-cottbus.de; cl@tu-cottbus.de
RI Beyer, Dirk/R-2534-2017
OI Beyer, Dirk/0000-0003-4832-7662; Lewerentz, Claus/0000-0002-2972-944X
CR Aho AlfredV., 1979, C REC 6 ANN ACM S PR, P110
   [Anonymous], PLDI 03
   [Anonymous], 2003, ALAN APT SERIES
   [Anonymous], 1994, MATH LOGIC
   [Anonymous], 1997, Software metrics: A rigorous and practical approach
   *ANSI ISO IEC, 1999, 90751999 ANSIISOIE 2
   Antoniol G, 1998, PROG COMPREHEN, P153, DOI 10.1109/WPC.1998.693342
   Aziz A, 1994, P 31 DES AUT C, P283, DOI 10.1145/196244.196379
   BERGHAMMER R, 2002, P 6 INT C REL METH C, P241
   BERMAN CL, 1991, IEEE T COMPUT AID D, V10, P1059, DOI 10.1109/43.85742
   BEYER D, 2004, UCBCSD041338 EECS CO
   Blaha M, 2004, COMPUTER, V37, P21, DOI 10.1109/MC.2004.1266291
   Blostein D, 1999, SOFTWARE PRACT EXPER, V29, P197, DOI 10.1002/(SICI)1097-024X(199903)29:3<197::AID-SPE228>3.0.CO;2-F
   Bollig B, 1996, IEEE T COMPUT, V45, P993, DOI 10.1109/12.537122
   Brace K.S., 1990, DAC, P40
   Bryant RandalE., 1992, ACM Computing Surveys (CSUR), V24, P293
   BRYANT RE, 1986, IEEE T COMPUT, V35, P677, DOI 10.1109/TC.1986.1676819
   BURCH JR, 1992, INFORM COMPUT, V98, P142, DOI 10.1016/0890-5401(92)90017-A
   Chen YF, 1998, IEEE T SOFTWARE ENG, V24, P682, DOI 10.1109/32.713323
   Ciupke O., 1999, Proceedings of Technology of Object-Oriented Languages and Systems - TOOLS 30 (Cat. No.PR00278), P18, DOI 10.1109/TOOLS.1999.787532
   Clocksin W. F., 2003, Programming in PROLOG
   DATE C.J., 2003, An Introduction to Database Systems, Veight
   Ebert J., 2002, ELECT NOTES THEORETI, V72
   Fahmy H, 2000, PROC IEEE INT CONF S, P88, DOI 10.1109/ICSM.2000.883020
   Fahmy HM, 2001, 16TH ANNUAL INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2001), PROCEEDINGS, P51, DOI 10.1109/ASE.2001.989790
   Feijs L, 1998, SOFTWARE PRACT EXPER, V28, P371, DOI 10.1002/(SICI)1097-024X(19980410)28:4<371::AID-SPE154>3.0.CO;2-1
   GAMMA E, 1995, DESIGN PATTERNS
   Garey M.R., 1979, COMPUTERS INTRACTABI
   Henderson-Sellers B., 1996, Object-Oriented Metrics, measures of complexity
   Heuzeroth D, 2003, PROG COMPREHEN, P94
   Holt RC, 1998, FIFTH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P210, DOI 10.1109/WCRE.1998.723191
   Janssen G, 2003, 16TH SYMPOSIUM ON INTEGRATED CIRCUITS AND SYSTEMS DESIGN, SBCCI 2003, PROCEEDINGS, P217, DOI 10.1109/SBCCI.2003.1232832
   Jeong Seon-Woong., 1991, INT C COMPUTER AIDED, P476
   Kazman R, 1998, SECOND EUROMICRO CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P104, DOI 10.1109/CSMR.1998.665762
   Keller R. K., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P226, DOI 10.1109/ICSE.1999.841012
   Kramer C, 1996, PROCEEDINGS OF THE THIRD WORKING CONFERENCE ON REVERSE ENGINEERING, P208, DOI 10.1109/WCRE.1996.558905
   Krinke J, 2001, EIGHTH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P301, DOI 10.1109/WCRE.2001.957835
   Kullbach B, 1999, PROCEEDINGS OF THE THIRD EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, P42, DOI 10.1109/CSMR.1999.756681
   Mendelzon A, 1995, SOFTWARE-CONC TOOL, V16, P170
   Mens K, 1999, TOOLS, V29, P33, DOI 10.1109/TOOLS.1999.778997
   MENS T, 2002, ELECT NOTES THEORETI, V72
   Murphy GC, 2001, IEEE T SOFTWARE ENG, V27, P364, DOI 10.1109/32.917525
   Niere J, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P338, DOI 10.1109/ICSE.2002.1007980
   O'Keefe R.A., 1990, The Craft of Prolog
   Sefika M, 1996, PROC INT CONF SOFTW, P387, DOI 10.1109/ICSE.1996.493433
   Shull F., 1996, CSTR3597 U MAR COMP
   *SWED I COMP SCI, 2003, QUINT PROL US MAN
   Tonella P., 1999, Proceedings IEEE International Conference on Software Maintenance - 1999 (ICSM'99). `Software Maintenance for Business Change' (Cat. No.99CB36360), P230, DOI 10.1109/ICSM.1999.792619
   WARSHALL S, 1962, J ACM, V9, P11, DOI 10.1145/321105.321107
   Widenius M., 2002, MySQL Reference Manual: Documentation From the Source
   Wong K., 1998, The Rigi User's Manual - Version 5.4.4
   Wu JW, 2002, PROG COMPREHEN, P239, DOI 10.1109/WPC.2002.1021345
NR 52
TC 46
Z9 57
U1 0
U2 6
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD FEB
PY 2005
VL 31
IS 2
BP 137
EP 149
DI 10.1109/TSE.2005.23
PG 13
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Engineering
GA 899ZR
UT WOS:000227185100004
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Bederson, BB
   Grosjean, J
   Meyer, J
AF Bederson, BB
   Grosjean, J
   Meyer, J
TI Toolkit design for interactive structured graphics
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE monolithic toolkits; polylithic toolkits; object-oriented design;
   composition; inheritance; Zoomable User Interfaces (ZUIs); animation;
   structured graphics; Graphical User Interfaces (GUIs); Pad plus; Jazz;
   Piccolo
ID USER-INTERFACE; PAD++
AB In this paper, we analyze toolkit designs for building graphical applications with rich user interfaces, comparing polylithic and monolithic toolkit-based solutions. Polylithic toolkits encourage extension by composition and follow a design philosophy similar to 3D scene graphs supported by toolkits including Java3D and OpenInventor. Monolithic toolkits, on the other hand, encourage extension by inheritance, and are more akin to 2D Graphical User Interface toolkits such as Swing or MFC. We describe Jazz (a polylithic toolkit) and Piccolo (a monolithic toolkit), each of which we built to support interactive 2D structured graphics applications in general, and Zoomable User Interface applications in particular. We examine the trade offs of each approach in terms of performance, memory requirements, and programmability. We conclude that a polylithic approach is most suitable for toolkit builders, visual design software where code is automatically generated, and application builders where there is much customization of the toolkit. Correspondingly, we find that monolithic approaches appear to be best for application builders where there is not much customization of the toolkit.
C1 Univ Maryland, Inst Adv Comp Studies, Dept Comp Sci, Human Comp Interact Lab, College Pk, MD 20742 USA.
C3 University System of Maryland; University of Maryland College Park
RP Univ Maryland, Inst Adv Comp Studies, Dept Comp Sci, Human Comp Interact Lab, College Pk, MD 20742 USA.
EM bederson@cs.umd.edu; jesse@cs.umd.edu; meyer@cs.umd.edu
OI Bederson, Benjamin/0000-0002-3247-779X
CR [Anonymous], 2003, ILOG
   Bederson B, 1998, SOFTWARE PRACT EXPER, V28, P1101, DOI 10.1002/(SICI)1097-024X(199808)28:10<1101::AID-SPE190>3.0.CO;2-V
   Bederson B. B., 2004, ACM Transactions on Computer-Human Interaction, V11, P90, DOI 10.1145/972648.972652
   Bederson B. B., 1994, P 7 ANN ACM S US INT, P17, DOI DOI 10.1145/192426.192435
   Bederson BB, 1996, J VISUAL LANG COMPUT, V7, P3, DOI 10.1006/jvlc.1996.0002
   BEDERSON BB, 2001, CHI LETT, V3, P71, DOI DOI 10.1145/502348.502359
   BEDERSON BB, 1995, P C HUM FACT COMP SY
   BEDERSON BB, 2000, CHI LETT, V2, P171
   FOX D, 1998, THESIS NEW YORK U NE
   Furnas G. W., 1986, ACM Sigchi Bull., V17, P16, DOI DOI 10.1145/22339.22342
   HUDSON SE, 1993, P UIST, P57
   Krasner G. E., 1988, J OBJECT ORIENTED PR, V1, P26
   LINTON MA, 1989, IEEE COMPUT, V22, P8
   Myers BA, 1997, IEEE T SOFTWARE ENG, V23, P347, DOI 10.1109/32.601073
   Ousterhout J.K., 1994, TCL TK TOOLKIT
   PERLIN K, 1999, CHI LETT, V1, P11
   Perlin K., 1993, P 20 ANN C COMPUTER, P57
   POOK S, 2000, P WORK C ADV VIS INT, P227
   Raskin Jef., 2000, HUMANE INTERFACE
   SMITH RB, 1995, P C OBJ OR PROGR SYS, P47
   STONE M, 1994, P CHI 94, P306
   TANG SH, 1994, P 7 S US INT SOFTW T, P167
   UNGAR D, 1987, P OOPSLA 87, P227
   2003, JAVA3D
   2003, MACROMEDIA FLASH
   2003, SOFTIMAGE
   2003, ADOBE SVG VIEWER
   2003, ECMA SCRIPT
   2003, SGI OPENINVENTOR
   2003, 3D STUDIO MAX
NR 30
TC 128
Z9 168
U1 1
U2 13
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD AUG
PY 2004
VL 30
IS 8
BP 535
EP 546
DI 10.1109/TSE.2004.44
PG 12
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 837CL
UT WOS:000222605000004
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Kuhn, DR
   Wallace, DR
   Gallo, AM
AF Kuhn, DR
   Wallace, DR
   Gallo, AM
TI Software fault interactions and implications for software testing
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE statistical methods; testing strategies; test design
ID COMBINATORIAL DESIGN; TEST-GENERATION
AB Exhaustive testing of computer software is intractable, but empirical studies of software failures suggest that testing can in some cases be effectively exhaustive. Data reported in this study and others show that software failures in a variety of domains were caused by combinations of relatively few conditions. These results have important implications for testing. If all faults in a system can be triggered by a combination of n or fewer parameters, then testing all n-tuples of parameters is effectively equivalent to exhaustive testing, if software behavior is not dependent on complex event sequences and variables have a small set of discrete values.
C1 Natl Inst Stand & Technol, Gaithersburg, MD 20899 USA.
   NASA, Goddard Space Flight Ctr, Greenbelt, MD 20771 USA.
C3 National Institute of Standards & Technology (NIST) - USA; National
   Aeronautics & Space Administration (NASA); NASA Goddard Space Flight
   Center
RP Natl Inst Stand & Technol, Gaithersburg, MD 20899 USA.
EM kuhn@nist.gov; dwallac@pop300.gsfc.nasa.gov; al.gallo@nasa.gov
CR Ammann PE, 1998, SECOND INTERNATIONAL CONFERENCE ON FORMAL ENGINEERING METHODS, PROCEEDINGS, P46, DOI 10.1109/ICFEM.1998.730569
   [Anonymous], P 27 NASA IEEE SOFTW
   [Anonymous], 1996, The CRC Handbook of Combinatorial Designs, CRC Press Series on Discrete Mathematics and its Applications
   [Anonymous], 1996, ARIANE 5, Flight 501 Failure
   BLACKBURN MR, 2001, P QUAL WEEK      JUN
   BROWNLIE R, 1992, AT&T TECH J, V71, P41, DOI 10.1002/j.1538-7305.1992.tb00164.x
   CHENG C, 2003, 3 INT C QUAL SOFTW N
   Cohen DM, 1997, IEEE T SOFTWARE ENG, V23, P437, DOI 10.1109/32.605761
   Cohen DM, 1996, IEEE SOFTWARE, V13, P83, DOI 10.1109/52.536462
   Cohen MB, 2003, PROC INT CONF SOFTW, P38, DOI 10.1109/ICSE.2003.1201186
   DALAL SR, 1999, P INT C SFTW ENG
   Jones TP, 1997, TERRA NOVA, V9, P19, DOI 10.1046/j.1365-3121.1997.d01-1.x
   Nair VN, 1998, STAT SINICA, V8, P165
   Pan J., 1999, P INT S FAULT TOL CO
   SLABODKIN G, 1998, GOVTT COMPUTER N JUL
   SMITH BD, 2000, P 5 INT C ART INT PL
   Stevens B., 1998, Designs, Codes and Cryptography, V15, P279, DOI 10.1023/A:1008329410829
   Tai KC, 2002, IEEE T SOFTWARE ENG, V28, P109, DOI 10.1109/32.979992
   Wallace D.R., 2001, International Journal of Reliability, Quality, and Safety Engineering, V8
   Williams AW, 2001, ACS/IEEE INTERNATIONAL CONFERENCE ON COMPUTER SYSTEMS AND APPLICATIONS, PROCEEDINGS, P304, DOI 10.1109/AICCSA.2001.934001
   WILLIAMS AW, 2002, P 14 INT C TEST COMM, P283
NR 21
TC 441
Z9 489
U1 3
U2 14
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUN
PY 2004
VL 30
IS 6
BP 418
EP 421
DI 10.1109/TSE.2004.24
PG 4
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 820IW
UT WOS:000221383400006
DA 2024-07-18
ER

PT J
AU Kim, S
   Bastani, FB
   Yen, IL
   Chen, IR
AF Kim, S
   Bastani, FB
   Yen, IL
   Chen, IR
TI Systematic reliability analysis of a class of application-specific
   embedded software frameworks
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE distributed embedded systems; software composition; application-oriented
   frameworks; software reliability assessment
ID STATECHARTS; NETWORKS
AB Dramatic advances in computer and communication technologies have made it economically feasible to extend the use of embedded computer systems to more and more critical applications. At the same time, these embedded computer systems are. becoming more complex and distributed. As the bulk of the complex application-specific logic of these systems is realized by software, the need for certifying software systems has grown substantially. While relatively mature techniques exist for certifying hardware systems, methods of rigorously certifying software systems are still being actively researched. Possible certification methods for embedded software systems range from formal verification to statistical testing. These methods have different strengths and weaknesses and can be used to complement each other. One potentially useful approach is to decompose the specification into distinct aspects that can be independently certified using the method that is most effective for it. Even though substantial research has been carried out to reduce the complexity of the software system through decomposition, one major hurdle is the need to certify the overall system on the basis of the aspect properties. One way to address this issue is to focus on architectures in which the aspects are relatively independent of each other. However, complex embedded systems are typically comprised of multiple architectures. In this paper, we present an alternative approach based on the use of application-oriented frameworks for implementing embedded systems. We show that it is possible to design such frameworks for embedded applications and derive expressions for determining the system reliability from the reliabilities of the framework and the aspects. The method is illustrated using a distributed multimedia collaboration system.
C1 Univ Texas, Dept Comp Sci, Richardson, TX 75038 USA.
   Virginia Polytech Inst & State Univ, Dept Comp Sci, Falls Church, VA 22043 USA.
C3 University of Texas System; University of Texas Dallas; Virginia
   Polytechnic Institute & State University
RP Kim, S (corresponding author), Univ Texas, Dept Comp Sci, MS EC-31,Box 830688, Richardson, TX 75038 USA.
EM ilyen@utdallas.edu; irchen@cs.vt.edu
CR Agre J, 2000, COMPUTER, V33, P106, DOI 10.1109/2.841788
   [Anonymous], 1996, HDB SOFTWARE RELIABI
   ATKINSON C, 1991, OBJECT ORIENTED REUS
   Balzer R., 1991, P 13 INT C SOFTW ENG, P158
   BASTANI FB, 1996, P 2 WORKSH OBJ OR RE
   BASTANI FB, 2001, P IEEE INT S SOFTW R
   BASTANI FB, 2000, P 5 IEEE INT S HIGH
   BASTANI FB, 2001, P 6 IEEE INT S HIGH
   BASTANI FB, 1999, ANNALS
   BELL J, 1990, ARTIF INTELL REV, V4, P79, DOI 10.1007/BF00133188
   BLAIR HA, 1989, THEOR COMPUT SCI, V68, P135, DOI 10.1016/0304-3975(89)90126-6
   COLEMAN D, 1992, IEEE T SOFTWARE ENG, V18, P9, DOI 10.1109/32.120312
   CUKIC B, 1996, P IEEE INT S SOFTW R
   DUGAN JB, 1994, IEEE T RELIAB, V43, P513, DOI 10.1109/24.370232
   DUGAN JB, 1993, J SYSTEMS SAFETY JUN
   EVERETT WW, 1998, P 9 ANN SOFTW REL EN
   FINKELSTEIN ACW, 1994, IEEE T SOFTWARE ENG, V20, P569, DOI 10.1109/32.310667
   HAREL D, 1987, SCI COMPUT PROGRAM, V8, P231, DOI 10.1016/0167-6423(87)90035-9
   HAREL D, 1990, IEEE T SOFTWARE ENG, V16, P403, DOI 10.1109/32.54292
   Heitmeyer C., 1995, Proceedings of the Second IEEE International Symposium on Requirements Engineering (Cat. No.95TH8040), P56, DOI 10.1109/ISRE.1995.512546
   Jackson D., 1995, ACM Transactions on Software Engineering and Methodology, V4, P365, DOI 10.1145/226241.226249
   JAYASIMHA DN, 1991, IEEE T SYST MAN CYB, V21, P1032, DOI 10.1109/21.120056
   JONES CB, 1983, ACM T PROGR LANG SYS, V5, P596, DOI 10.1145/69575.69577
   LAM SS, 1994, IEEE T SOFTWARE ENG, V20, P55, DOI 10.1109/32.263755
   Lamping John, 1997, P EUR C OBJ OR PROGR
   LEVESON NG, 1994, IEEE T SOFTWARE ENG, V20, P684, DOI 10.1109/32.317428
   MASON D, 1998, P 9 ANN SOFTW REL EN
   MUSA JD, 1993, IEEE SOFTWARE, V10, P14, DOI 10.1109/52.199724
   MUSA JD, 1990, SOFTWARE RELIABILITY, P178
   RUSSO DA, 2000, COMMUNICATION    MAY
   Smidts C, 1997, EIGHTH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P324, DOI 10.1109/ISSRE.1997.630880
   WINTER VL, 1998, COMMUNICATION    JUL
   ZAVE P, 1985, ACM T PROGR LANG SYS, V7, P10, DOI 10.1145/2363.2365
   Zave P, 1996, IEEE T SOFTWARE ENG, V22, P508, DOI 10.1109/32.538607
NR 34
TC 4
Z9 5
U1 0
U2 5
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD APR
PY 2004
VL 30
IS 4
BP 218
EP 230
PG 13
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 810YV
UT WOS:000220740500002
DA 2024-07-18
ER

PT J
AU Paulson, JW
   Succi, G
   Eberlein, A
AF Paulson, JW
   Succi, G
   Eberlein, A
TI An empirical study of open-source and closed-source software products
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE open source; software metrics; empirical studies; software growth models
AB This paper describes an empirical study of open-source and closed-source software projects. The motivation for this research is to quantitatively investigate common perceptions about open-source projects, and to validate these perceptions through an empirical study. This paper investigates the hypothesis that open-source software grows more quickly, but does not find evidence to support this. The project growth is similar for all the projects in the analysis, indicating that other factors may limit growth. The hypothesis that creativity is more prevalent in open-source software is also examined, and evidence to support this hypothesis is found using the metric of functions added over time. The concept of open-source projects succeeding because of their simplicity is not supported by the analysis, nor is the hypothesis of open-source projects being more modular. However, the belief that defects are found and fixed more rapidly in open-source projects is supported by an analysis of the functions modified. The paper finds support for two of the five common beliefs and concludes that, when implementing or switching to the open-source development model, practitioners should ensure that an appropriate metrics Collection strategy is in place to verify the perceived benefits.
C1 Gen Dynam Canada Ltd, Calgary, AB T2E 8P2, Canada.
   Free Univ Bozen, Fac Comp Sci, Ctr Appl Software Engn, I-39100 Bolzano, Italy.
   Amer Univ Sharjah, Dept Comp Engn, Sharjah, U Arab Emirates.
C3 Free University of Bozen-Bolzano; American University of Sharjah
RP Paulson, JW (corresponding author), Gen Dynam Canada Ltd, 1020 68th Ave,NW, Calgary, AB T2E 8P2, Canada.
EM jim.paulson@ieee.org; Giancarlo.Succi@unibz.it;
   eberlein@enel.ucalgary.ca
RI Succi, Giancarlo/AAZ-2354-2020
OI Succi, Giancarlo/0000-0001-8847-0186; Eberlein,
   Armin/0000-0003-1104-8424
CR COOK CR, 1994, J SYST SOFTWARE, V24, P223, DOI 10.1016/0164-1212(94)90065-5
   DALLE J, 2000, P ACTS SSII C
   GALL G, 1997, P INT C SOFTW MAINT
   GODFREY MW, 2000, P INT C SOFTW METR
   Kemerer CF, 1999, IEEE T SOFTWARE ENG, V25, P493, DOI 10.1109/32.799945
   LEHMAN MM, 1997, P 4 INT METR S
   Mockus A., 2000, P 22 INT C SOFTW ENG
   MOZILLA, 2003, OUR MISSION
   O'Reilly T, 1999, COMMUN ACM, V42, P32, DOI 10.1145/299157.299164
   PAULSON JW, 2001, THESIS U CALGARY ALB
   Pearson K., 1896, Philosophical Transactions of the Royal Society of London
   Raymond E.S., 2003, CATHEDRAL BAZAAR
   Wheeler D.A., 2003, WHY OPEN SOURCE SOFT
   WHEELER S, 2003, OPEN SOUCE SOFTWARE
NR 14
TC 148
Z9 171
U1 1
U2 20
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD APR
PY 2004
VL 30
IS 4
BP 246
EP 256
DI 10.1109/TSE.2004.1274044
PG 11
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 810YV
UT WOS:000220740500004
DA 2024-07-18
ER

PT J
AU Hungerford, BC
   Hevner, AR
   Collins, RW
AF Hungerford, BC
   Hevner, AR
   Collins, RW
TI Reviewing software diagrams: A cognitive study
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE defects; human cognitive theory; inspections; software diagrams;
   software quality; software reviews; verbal protocol methods
ID VERBAL PROTOCOL
AB Reviews and inspections of software artifacts throughout the development life cycle are effective techniques for identifying defects and improving software quality. While review methods for text-based artifacts (e.g., code) are well understood, very little guidance is available for performing reviews of software diagrams, which are rapidly becoming the dominant form of software specification and design. Drawing upon human cognitive theory, we study how 12 experienced software developers perform individual reviews on a software design containing two types of diagrams: entity-relationship diagrams and data flow diagrams. Verbal protocol methods are employed to describe and analyze defect search patterns among the software artifacts, both text and diagrams, within the design. Results indicate that search patterns that rapidly switch between the two design diagrams are the most effective. These findings support the cognitive theory thesis that how an individual processes information impacts processing success. We conclude with specific recommendations for improving the practice of,reviewing software diagrams.
C1 Univ Wisconsin, Dept Management Informat Syst, Oshkosh, WI 54901 USA.
   Univ S Florida, Dept Informat Syst & Decis Sci, Tampa, FL 33640 USA.
C3 University of Wisconsin System; State University System of Florida;
   University of South Florida
RP Univ Wisconsin, Dept Management Informat Syst, 800 Algoma Blvd, Oshkosh, WI 54901 USA.
EM bruce@hungerford.com; tahevner@coba.usf.edu; rcollins@coba.usf.edu
CR ANDERSON MJ, 1985, J ACCOUNTING RES, V23, P843, DOI 10.2307/2490841
   [Anonymous], 1984, VARIETIES ATTENTION
   [Anonymous], 1982, JUDGMENT CALLS RES
   Baecker R, 1997, COMMUN ACM, V40, P44, DOI 10.1145/248448.248458
   Barber P., 1988, APPL COGNITIVE PSYCH
   Biffl S, 2003, IEEE T SOFTWARE ENG, V29, P385, DOI 10.1109/TSE.2003.1199069
   Booch Grady, 1999, UNIFIED MODELING LAN, DOI DOI 10.1007/3-540-40011-7_10
   CHASE WG, 1973, COGNITIVE PSYCHOL, V4, P55, DOI 10.1016/0010-0285(73)90004-2
   CHI MTH, 1981, COGNITIVE SCI, V5, P121, DOI 10.1207/s15516709cog0502_2
   Cowan N., 1995, ATTENTION MEMORY INT
   DAMOS DL, 1980, ACTA PSYCHOL, V46, P15, DOI 10.1016/0001-6918(80)90057-8
   Ericsson K. A., 1993, PROTOCOL ANAL VERBAL
   FREDERIKSEN CH, 1990, DIAGNOSTIC MONITORING OF SKILL AND KNOWLEDGE ACQUISITION, P351
   Gibbins P., 1988, LOGIC PROLOG
   Glasgow Janice., 1995, DIAGRAMMATIC REASONI
   Green TRG, 1996, J VISUAL LANG COMPUT, V7, P131, DOI 10.1006/jvlc.1996.0009
   James W., 1890, The Principles of Psychology, V1
   Kim J, 2000, INFORM SYST RES, V11, P284, DOI 10.1287/isre.11.3.284.12206
   KLERSEY GF, 1989, ACCOUNT ORG SOC, V14, P133, DOI 10.1016/0361-3682(89)90038-X
   LARKIN JH, 1987, COGNITIVE SCI, V11, P65, DOI 10.1016/S0364-0213(87)80026-5
   Lohse GL, 1997, BEHAV INFORM TECHNOL, V16, P297, DOI 10.1080/014492997119707
   Mao JY, 2000, J MANAGE INFORM SYST, V17, P153
   Mayer R. E., 1997, HDB HUMAN COMPUTER I, P781, DOI 10.1016/B978-0-444-70536-5.50030-0
   Newell A., 1972, HUMAN PROBLEM SOLVIN, V104
   Norman D.A., 1982, Learning and memory
   PAYNE JW, 1978, ORGAN BEHAV HUM PERF, V22, P17, DOI 10.1016/0030-5073(78)90003-X
   PETRE M, 1995, COMMUN ACM, V38, P33, DOI 10.1145/203241.203251
   Porter A., 1998, ACM Transactions on Software Engineering and Methodology, V7, P41, DOI 10.1145/268411.268421
   Regnell B., 2000, Empirical Software Engineering, V5, P331, DOI 10.1023/A:1009848320066
   Reimann P., 1989, HUMAN MACHINE PROBLE, P161, DOI 10.1007/978-1-4684-8015-3_7
   Rogers E, 1996, PROCEEDINGS OF THE EIGHTEENTH ANNUAL CONFERENCE OF THE COGNITIVE SCIENCE SOCIETY, P213
   RUSSO JE, 1989, MEM COGNITION, V17, P759, DOI 10.3758/BF03202637
   Sauer C, 2000, IEEE T SOFTWARE ENG, V26, P1, DOI 10.1109/32.825763
   Schneider G. M., 1992, ACM Transactions on Software Engineering and Methodology, V1, P188, DOI 10.1145/128894.128897
   SCHWEIGER DM, 1983, ACAD MANAGE J, V26, P185, DOI 10.5465/256146
   SHULL F, 2002, P 8 IEEE S SOFTW MET
   SIMON HA, 1990, ANNU REV PSYCHOL, V41, P1, DOI 10.1146/annurev.ps.41.020190.000245
   TINSLEY HEA, 1975, J COUNS PSYCHOL, V22, P358, DOI 10.1037/h0076640
   Tolman E., 1959, PSYCHOL STUDY SCI, V2
   Travassos G. H., 1999, SIGPLAN Notices, V34, P47, DOI 10.1145/320385.320389
   Tufte ER, 1997, Beautiful Evidence
   Wheeler David A., 1996, Software Inspection: An Industry Best Practice for Defect Detection and Removal
   Wickens CD, 1995, HUM FACTORS, V37, P473, DOI 10.1518/001872095779049408
   Wieringa R, 1998, ACM COMPUT SURV, V30, P459, DOI 10.1145/299917.299919
   Winn W., 1994, COMPREHENSION GRAPHI
   Wohlin C, 2003, NINTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM, PROCEEDINGS, P286, DOI 10.1109/METRIC.2003.1232475
   Zhang XF, 1997, APPL MATH MODEL, V21, P2, DOI 10.1016/S0307-904X(96)00107-2
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
NR 57
TC 49
Z9 52
U1 1
U2 5
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD FEB
PY 2004
VL 30
IS 2
BP 82
EP 96
DI 10.1109/TSE.2004.1265814
PG 15
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science; Engineering
GA 775AR
UT WOS:000189019000001
DA 2024-07-18
ER

PT J
AU Bruns, G
   Chandra, S
AF Bruns, G
   Chandra, S
TI Searching,for points-to analysis
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article; Proceedings Paper
CT Conference on the Foundations of Software Engineering
CY NOV, 2002
CL CHARLESTON, SC
SP ACM SIGSOFT
DE points-to analysis; program analysis; reachability analysis; model
   checking
ID MAY-ALIAS ANALYSIS
AB The points-to analysis problem is to find the pointer relationships that could arise during program execution. Many points-to analysis algorithms exist, each making a particular trade off between cost of the analysis and precision of the results. In this paper, we show how points-to analysis, algorithms can be defined as transformed versions of an exact algorithm. We present a set of program transformations over a general program model and use them to define some existing points-to analysis algorithms. Doing so makes explicit the approximations involved in these algorithms. We also show how the transformations can be used to define new points-to analysis algorithms. Our transformations are generic and may be useful in the design of other program analysis algorithms.
C1 Bell Labs, Lucent Technol, Lisle, IL 60532 USA.
   IBM Corp, India Res Lab, IIT, New Delhi 110016, India.
C3 AT&T; Alcatel-Lucent; Lucent Technologies; International Business
   Machines (IBM); Indian Institute of Technology System (IIT System);
   Indian Institute of Technology (IIT) - Delhi
RP Bell Labs, Lucent Technol, 2701 Lucent Lane, Lisle, IL 60532 USA.
EM grb@research.bell-labs.com; satishchandra@in.ibm.com
CR [Anonymous], 1994, Program Analysis and Specialization for the C Programming Language
   [Anonymous], 1992, Programming Language Design and Implementation (PLDI), DOI DOI 10.1145/143103.143137
   [Anonymous], 1992, ACM LETT PROGRAM LAN
   [Anonymous], 1977, Flow Analysis of Computer Programs
   [Anonymous], PLDI 98
   [Anonymous], 1991, Annual ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages
   BENSALEM S, 1992, P 4 INT WORKSH COMP, P260
   CHAKARAVARTHY V, 2003, P 30 ANN ACM SIGPLAN
   CHASE DR, 1990, P SIGPLAN 90 C PROGR, P296
   CLARKE EM, 1992, P 19 ANN ACM S PRINC, P343
   Cousot P., 1977, C RECORD 4 ANN ACM S, P238, DOI DOI 10.1145/512950.512973
   DAS M, 2000, P ACM SIGPLAN C PROG, P35
   DEUTSCH A, 1994, SIGPLAN NOTICES, V29, P230, DOI 10.1145/773473.178263
   EMAMI M, 1994, P ACM SIGPLAN 94 C P, P242
   Ghiya R., 2001, Proc. of the ACM SIGPLAN 2001 conference on Programming Language Design and Implementation, P47
   HEINTZE N., 2001, P ACM SIGPLAN C PROG
   Heintze Nevin, 2001, ACM SIGPLAN NOTICES, P24, DOI [10.1145/378795.378802, DOI 10.1145/381694.378802]
   Hind M, 1999, ACM T PROGR LANG SYS, V21, P848, DOI 10.1145/325478.325519
   Hind M, 2001, ACM SIGPLAN NOTICES, P54
   Horwitz S, 1997, ACM T PROGR LANG SYS, V19, P1, DOI 10.1145/239912.239913
   JONES ND, 1994, HDB LOGIC COMPUTER S, P527
   LANDI W, 1992, THESIS RUTGERS U
   MARLOWE TJ, 1990, ACTA INFORM, V28, P121, DOI 10.1007/BF01237234
   MCALLESTER D, 2001, P STAT AN S
   NAMJOSHI KS, 2000, P 12 C COMP AID VER
   Nielson F., 1999, Principles of Program Analysis
   Reps T, 1998, INFORM SOFTWARE TECH, V40, P701, DOI 10.1016/S0950-5849(98)00093-7
   SCHMIDT D, 1998, P 25 ACM SIGPLAN SIG
   SHAPIRO M, 1997, P 24 ACM SIGPLAN SIG
   SHARIR M, 1980, PROGRAM FLOW ANAL TH
   Steensgaard B., 1996, P 23 ACM SIGPLAN SIG
   STEFFEN B, 1993, SCI COMPUT PROGRAM, V21, P115, DOI 10.1016/0167-6423(93)90003-8
NR 32
TC 1
Z9 1
U1 1
U2 3
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD OCT
PY 2003
VL 29
IS 10
BP 883
EP 897
DI 10.1109/TSE.2003.1237170
PG 15
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Engineering
GA 729CF
UT WOS:000185753100003
DA 2024-07-18
ER

PT J
AU Mossé, D
   Melhem, R
   Ghosh, S
AF Mossé, D
   Melhem, R
   Ghosh, S
TI A nonpreemptive real-time scheduler with recovery from transient faults
   and its implementation
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE fault tolerance; operating system; real-time; scheduling; transient
   faults
ID RESOURCE CONSTRAINTS; SYSTEMS; TASKS; ALGORITHMS; TOLERANCE
AB Real-time systems (RTS) are those whose correctness depends on satisfying the required functional as well as the required temporal properties. Due to the criticality of such systems, recovery from faults is an essential part of a RTS. In many systems, such as those supporting space applications, single event upsets (SEUs) are the prevalent type of faults; SEUs are transient faults and affect a single task at a time. This paper presents a scheme to guarantee that the execution of real-time tasks can tolerate SEUs and intermittent faults. assuming any queue-based scheduling technique. Three algorithms are presented to solve the problem of adding fault tolerance to a queue of real-time tasks by reserving sufficient slack in a schedule so that recovery can be carried out before the task deadline without compromising guarantees given to other tasks. The first algorithm is a dynamic programming optimal solution, the second is a linear-time heuristic for scheduling dynamic tasks, and the third algorithm comprises extensions to address queues with gaps between tasks (gaps are caused by precedence, resource, or timing constraints). We show through simulations that the heuristics closely approximate the optimal algorithm. Finally, the paper describes the implementation of the modified admission control algorithm, the nonpreemptive scheduler, and a recovery mechanism in the FT-RT-Mach operating system.
C1 Univ Pittsburgh, Dept Comp Sci, Pittsburgh, PA 15260 USA.
   I2 Technol, Santa Clara, CA 95051 USA.
C3 Pennsylvania Commonwealth System of Higher Education (PCSHE); University
   of Pittsburgh
EM mosse@cs.pitt.edu; melhem@cs.pitt.edu; sunondo@yahoo.com
CR AGRAWAL AK, 1991, MISSION CRITICAL OPE
   BALAJI S, 1989, P IEEE FAULT TOL COM, P366
   BELLI F, 1991, IEEE T SOFTWARE ENG, V17, P310, DOI 10.1109/32.75419
   DINATALE M, 1994, REAL TIM SYST SYMP P, P216, DOI 10.1109/REAL.1994.342714
   DONG L, 1998, P REAL TIM TECHN APP
   GAISLER J, 1994, P 24 INT S FAULT TOL, P128
   Ghosh S, 1997, IEEE T PARALL DISTR, V8, P272, DOI 10.1109/71.584093
   GHOSH S, 1998, J REAL TIME SYSTEMS, V15
   GHOSH S, 1997, P 6 IFIP C DEP COMP
   Jensen E. D., 1985, Proceedings of the Real-Time Systems Symposium (Cat. No.85CH2220-2), P112
   Johnson B., 1989, Design and Analysis of Fault-Tolerant Digital Systems
   KOPETZ H, 1989, IEEE MICRO, V9, P25, DOI 10.1109/40.16792
   KOPETZ H, 1991, LECT NOTES COMPTUER
   KOPETZ H, 1990, P 20 INT S FAULT TOL, P466
   KRISHNA CM, 1986, IEEE T COMPUT, V35, P448
   Lehoczky J., 1989, Proceedings. Real Time Systems Symposium (Cat. No.89CH2803-5), P166, DOI 10.1109/REAL.1989.63567
   LIESTMAN AL, 1986, IEEE T SOFTWARE ENG, V12, P1089, DOI 10.1109/TSE.1986.6312999
   Lin K. J., 1987, P IEEE REAL TIM SYST
   LIU CL, 1973, J ACM, V20, P46, DOI 10.1145/321738.321743
   LIU JW, 1989, P WORKSH OP SYST MIS
   MELHEM R, 1998, FORTS FAULT TOLERANC
   MOSSE D, 1993, THESIS U MARYLAND
   MOSSE D, 1994, P 24 INT S FAULT TOL
   MOSSE D, 1994, P INT C ROB VIS PAR
   NAKAJIMA T, 1992, P 2 INT WORKSH OBJ O, P165
   NG T, 1989, P 9 INT C DISTR COMP
   NIEHAUS D, 1991, PROCEEDING : TWELFTH REAL-TIME SYSTEMS SYMPOSIUM, P53, DOI 10.1109/REAL.1991.160358
   NIRKHE VM, 1990, PROCEEDINGS : 11TH REAL-TIME SYSTEMS SYMPOSIUM, P257, DOI 10.1109/REAL.1990.128756
   OH SK, 1992, 92325 QUEENS U DEP C
   OH YF, 1994, REAL-TIME SYST, V7, P315, DOI 10.1007/BF01088524
   RAMOSTHUEL S, 1993, THESIS CARNEGIE MELL
   RAMOSTHUEL S, 1994, P 4 IFIP C DEP COMP
   Randell B., 1975, IEEE T SOFTWARE ENG, VSE-1, P220
   SMITH TB, 1984, P 14 IEEE FAULT TOL
   SMITH TB, 1986, FAULT TOLERANT MULTI
   STANKOVIC JA, 1988, COMPUTER, V21, P10, DOI 10.1109/2.7053
   TOKUDA H, 1990, P USENIX MACH WORKSH
   TSUCHIYA T, 1995, REAL TIME COMPUTING, P197
   WENSLEY JH, 1978, P IEEE, V66, P1240, DOI 10.1109/PROC.1978.11114
   ZHAO W, 1987, IEEE T COMPUT, V36, P949, DOI 10.1109/TC.1987.5009518
   ZHAO W, 1987, J SYST SOFTWARE, V7, P195, DOI 10.1016/0164-1212(87)90041-0
NR 41
TC 17
Z9 21
U1 0
U2 4
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD AUG
PY 2003
VL 29
IS 8
BP 752
EP 767
DI 10.1109/TSE.2003.1223648
PG 16
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 708KQ
UT WOS:000184566400007
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Türker, UC
   Hierons, RM
   Barlas, G
   El-Fakih, K
AF Turker, Uraz Cengiz
   Hierons, Robert M.
   Barlas, Gerassimos
   El-Fakih, Khaled
TI Incomplete Adaptive Distinguishing Sequences for Non-Deterministic FSMs
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Adaptive distinguishing sequences/tests; non-deterministic finite state
   machines; software engineering/ software/program verification; software
   engineering/test design; software engineering/testing and debugging
ID FINITE-STATE MACHINES; TEST-GENERATION; IDENTIFICATION; DESIGN; LENGTH
AB The increasing complexity and criticality of software systems have led to growing interest in automated test generation. One of the most promising approaches is to use model-based testing (MBT), in which test automation is based on a model of the implementation under test (IUT), with much of the work concerning finite state machine (FSM) models. Many FSM-based test generation techniques use, possibly adaptive, sequences to check the state of the IUT. Of particular interest are adaptive distinguishing sequences (ADSs) because their use can lead to relatively small tests. However, not all systems possess an ADS. In this work, we generalise the notion of incomplete ADSs to non-deterministic partial and observable FSMs. We showthat the problem of checking the existence of a set of k incomplete ADSs that separates every pair of states is PSPACE-hard. Further, we generalise the notion of invertible sequences to non-deterministic partial and observable FSMs and show how invertible sequences can be used to derive additional incomplete ADSs. We propose a novel algorithm to generate incomplete ADSs and describe the results of experiments that evaluated its performance. The results indicate that the proposedmethod can generate sequences to identify states of the IUT and is faster and can process larger FSMs than other existing methods.
C1 [Turker, Uraz Cengiz] Univ Lancaster, Sch Comp & Commun, Lancaster LA1 4YW, England.
   [Hierons, Robert M.] Univ Sheffield, Dept Comp Sci, Sheffield S10 2TN, England.
   [Barlas, Gerassimos; El-Fakih, Khaled] Amer Univ Sharjah, Dept Comp Sci & Engn, Sharjah 26666, U Arab Emirates.
C3 Lancaster University; University of Sheffield; American University of
   Sharjah
RP Türker, UC (corresponding author), Univ Lancaster, Sch Comp & Commun, Lancaster LA1 4YW, England.
EM u.turker@lancaster.ac.uk; r.hierons@sheffield.ac.uk; gbarlas@aus.edu;
   kelfakih@aus.edu
OI Hierons, Robert/0000-0002-4771-1446; Barlas,
   Gerassimos/0000-0002-9792-9638; Turker, Uraz/0000-0001-5976-1945
FU UKRI: Trustworthy AutonomousSystems programme, Verifiability Node
   [EP/V026801/2]; EPSRC: RoboTest: Systematic Model-Based Testing and
   Simulationof Mobile Autonomous Robots [EP/R025134/1]
FX This work was supported in part by the UKRI: Trustworthy
   AutonomousSystems programme, Verifiability Node, under Grant
   EP/V026801/2 and in part by EPSRC: RoboTest: Systematic Model-Based
   Testing and Simulationof Mobile Autonomous Robots, under Grant
   EP/R025134/1.
CR Aho A.V., 1988, P IEEE 8 INT S PROT, P75
   Aho A.V., 1986, COMPILERS PRINCIPLES
   [Anonymous], 1999, Testing Object-Oriented Systems: Models, Patterns, and Tools
   Balogh R., 2019, Using Finite State Machines in Introductory Robotics: Methods and Applications for Teaching and Learning, P85
   Betin-Can A, 2004, 19TH INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P248, DOI 10.1109/ASE.2004.1342742
   BOUTE RT, 1974, IEEE T COMPUT, VC 23, P874, DOI 10.1109/T-C.1974.224043
   CHOW TS, 1978, IEEE T SOFTWARE ENG, V4, P178, DOI 10.1109/TSE.1978.231496
   Dorofeeva R, 2005, LECT NOTES COMPUT SC, V3731, P204
   Dorofeeva R, 2010, INFORM SOFTWARE TECH, V52, P1286, DOI 10.1016/j.infsof.2010.07.001
   El-Fakih K, 2004, IEEE T SOFTWARE ENG, V30, P425, DOI 10.1109/TSE.2004.31
   El-Fakih K, 2003, LECT NOTES COMPUT SC, V2644, P197
   El-Fakih K, 2021, IEEE T SOFTWARE ENG, V47, P1029, DOI 10.1109/TSE.2019.2911076
   El-Fakih K, 2018, FORM ASP COMPUT, V30, P319, DOI 10.1007/s00165-017-0450-2
   Endo AT, 2013, INFORM SOFTWARE TECH, V55, P1045, DOI 10.1016/j.infsof.2013.01.001
   Fabbri S. C. P. F., 1999, Proceedings. SCCC'99 XIX International Conference of the Chilean Computer Science Society, P96, DOI 10.1109/SCCC.1999.810159
   Friedman A., 1971, Computer Applications in Electrical Engineering Series
   FUJIWARA S, 1991, IEEE T SOFTWARE ENG, V17, P591, DOI 10.1109/32.87284
   Gaudel MC, 1995, LECT NOTES COMPUT SC, V915, P82
   GHEDAMSI A, 1993, IEEE INFOCOM SER, P782, DOI 10.1109/INFCOM.1993.253291
   Ghedamsi A., 1992, P 5 INT WORKSH PROT, P105
   Gill A., 1962, Introduction to the Theory of Finite-State Machines
   GONENC G, 1970, IEEE T COMPUT, VC 19, P551, DOI 10.1109/T-C.1970.222975
   Grieskamp W, 2011, SOFTW TEST VERIF REL, V21, P55, DOI 10.1002/stvr.427
   Harel D., 1998, MODELING REACTIVE SY
   Haydar M, 2004, LECT NOTES COMPUT SC, V3235, P115
   Hennie F.C., 1964, Proc. 5th Ann. Symp. Switch. Theory and Logical Design, P95
   HENNIE FC, 1968, FINITE STATE MODELS
   Hierons RM, 2006, IEEE T COMPUT, V55, P618, DOI 10.1109/TC.2006.80
   Hierons RM, 2004, IEEE T COMPUT, V53, P1330, DOI 10.1109/TC.2004.85
   Hierons RM, 1997, COMPUT J, V40, P220, DOI 10.1093/comjnl/40.4.220
   Hierons RM, 1996, COMPUT J, V39, P325, DOI 10.1093/comjnl/39.4.325
   Hierons RM, 2019, SCI COMPUT PROGRAM, V177, P1, DOI 10.1016/j.scico.2019.03.004
   Hierons RM, 2017, ACM T SOFTW ENG METH, V26, DOI 10.1145/3051121
   Hierons RM, 2017, LECT NOTES COMPUT SC, V10139, P147, DOI 10.1007/978-3-319-51963-0_12
   Hierons RM, 2016, IEEE T SOFTWARE ENG, V42, P1077, DOI 10.1109/TSE.2016.2539964
   Hierons RM, 2016, IEEE T COMPUT, V65, P3370, DOI 10.1109/TC.2016.2532869
   Hierons RM, 2015, COMPUT J, V58, P3089, DOI 10.1093/comjnl/bxv041
   Hierons RM, 2009, SEFM 2009: SEVENTH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING AND FORMAL METHODS, P157, DOI 10.1109/SEFM.2009.12
   Huang WL, 2017, FORM ASP COMPUT, V29, P335, DOI 10.1007/s00165-016-0402-2
   Jan Cerny, 1964, Matematicko-fyzikalny Casopis, V14, P208
   Kogan I., 1973, Avtomat. Telemekh., V2, P162
   Kozen D., 1977, 18th Annual Symposium on Foundations of Computer Science, P254, DOI 10.1109/SFCS.1977.16
   Kushik N, 2016, INT J SOFTW TOOLS TE, V18, P251, DOI 10.1007/s10009-014-0357-7
   Lee D, 1996, P IEEE, V84, P1090, DOI 10.1109/5.533956
   Lee D, 1996, IEEE T COMMUN, V44, P631, DOI 10.1109/26.494307
   LEE D, 1994, IEEE T COMPUT, V43, P306, DOI 10.1109/12.272431
   LUO G, 1994, IEEE T SOFTWARE ENG, V20, P149, DOI 10.1109/32.265636
   Luo G., 1995, Protocol Test Systems. 7th Workshop. 7th IFIP WG 6.1 International Workshop on Protocol Test Systems, P95
   McGrath RE, 2006, PSYCHOL METHODS, V11, P386, DOI 10.1037/1082-989X.11.4.386
   Naik K, 1997, IEEE ACM T NETWORK, V5, P585, DOI 10.1109/90.649519
   Neider Daniel, 2019, Models, Mindsets, Meta. The What, the How, and the Why Not? Essays Dedicated to Bernhard Steffen on the Occasion of His 60th Birthday. Lecture Notes in Computer Science (LNCS 11200), P390, DOI 10.1007/978-3-030-22348-9_23
   PETRENKO A, 1994, IFIP TRANS C, V19, P363
   Petrenko A, 2005, IEEE T COMPUT, V54, P1154, DOI 10.1109/TC.2005.152
   Petrenko A., 1993, IFIP Transactions C (Communication Systems), VC-19, P157
   Pinto Ferraz Fabbri S. C., 1994, Proceedings. 5th International Symposium on Software Reliability Engineering (Cat. No.94TH8017), P220, DOI 10.1109/ISSRE.1994.341378
   Pomeranz I, 1997, IEEE T COMPUT, V46, P783, DOI 10.1109/12.599899
   RYSTSOV IK, 1983, INFORM PROCESS LETT, V16, P147, DOI 10.1016/0020-0190(83)90067-4
   SABNANI K, 1988, COMPUT NETWORKS ISDN, V15, P285, DOI 10.1016/0169-7552(88)90064-5
   Shabaldina N, 2007, LECT NOTES COMPUT SC, V4581, P305
   Simao A, 2012, SOFTW TEST VERIF REL, V22, P435, DOI 10.1002/stvr.452
   Simao A, 2010, IEEE T COMPUT, V59, P1023, DOI 10.1109/TC.2010.17
   Starke P. H., 1972, ABSTRACT AUTOMATA
   Teetor P., 2011, R COOKBOOK
   Türker UC, 2014, LECT NOTES COMPUT SC, V8763, P32, DOI 10.1007/978-3-662-44857-1_3
   Türker UC, 2014, FORM METHOD SYST DES, V44, P264, DOI 10.1007/s10703-014-0205-0
   Tvardovskii A, 2017, AUTOM CONTROL COMPUT, V51, P724, DOI 10.3103/S0146411617070318
   Utting M, 2012, SOFTW TEST VERIF REL, V22, P297, DOI 10.1002/stvr.456
   Vasilevskii M. P., 1973, Cybernetics, V9, P653, DOI 10.1007/BF01068590
   von Bochmann G., 1994, SIGSOFT Software Engineering Notes, P109
   Vuong SonT., 1989, PROC 2 IFIP INT WORK, P161
   WILCOXON F, 1945, BIOMETRICS BULL, V1, P80, DOI 10.1093/jee/39.2.269
   Yevtushenko N., 1990, TEST DERIVATION METH
NR 72
TC 0
Z9 0
U1 0
U2 0
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD SEPT 1
PY 2023
VL 49
IS 9
BP 4371
EP 4389
DI 10.1109/TSE.2023.3291137
PG 19
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA S4DL9
UT WOS:001070689400005
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Janke, M
   Mäder, P
AF Janke, Mario
   Maeder, Patrick
TI FS<SUP>3</SUP>change: A Scalable Method for Change Pattern Mining
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Auto-completion; change patterns; code changes; data mining; frequent
   graph mining; scalability
AB Mining change patterns can give unique understanding on the evolution of dynamically changing systems like social relation graphs, weblinks, hardware descriptions and models. A more recent focus is source code change pattern mining that may qualitatively justify expected or uncover unexpected patterns. These patterns then offer a basis, e.g., for program language evolution or auto-completion support. We present a change pattern mining method that greatly expands the limits of input data and pattern complexity, over existing methods. We propose scalability solutions on conceptual and algorithmic level, thereby evolving the state-of-the-art sampling-based frequent subgraph mining method FS3, resulting in 75% reduction in memory consumption and a speedup of 6500 for a large scale dataset. Patterns can have 100,000 s of occurrences for which manual review is impossible and may lead to misinterpretation. We propose the novel content track approach for interactively exploring pattern contents in context, based on marginal distributions. We evaluate our approach by mining 1,000 open source projects contributing a total of 558 million changes and 2 billion contextual connections among them, thereby, demonstrating its scalability. A manual interpretation of 19 patterns shows sensible mined patterns allowing to deduct implications for language design and demonstrating the soundness of the approach.
C1 [Janke, Mario; Maeder, Patrick] Tech Univ Ilmenau, Software Engn Data Intens Syst & Visualizat Grp dA, D-98693 Ilmenau, Germany.
   [Maeder, Patrick] Friedrich Schiller Univ, Fac Biol Sci, D-07743 Jena, Germany.
C3 Technische Universitat Ilmenau; Friedrich Schiller University of Jena
RP Janke, M (corresponding author), Tech Univ Ilmenau, Software Engn Data Intens Syst & Visualizat Grp dA, D-98693 Ilmenau, Germany.
EM mario.janke@tu-ilmenau.de; patrick.maeder@tu-ilmenau.de
RI Mäder, Patrick/A-1848-2018
OI Mäder, Patrick/0000-0001-6871-2707
FU Deutsche Forschungsgemeinschaft [MA 5030/3-1]; German Ministry of
   Education and Research [01IS20062B]
FX This work was supported in part by 10.13039/501100001659-Deutsche
   Forschungsgemeinschaft under Grant MA 5030/3-1 and in part by the German
   Ministry of Education and Research under Grant 01IS20062B.& nbsp;
CR Bader J, 2019, P ACM PROGRAM LANG, V3, DOI 10.1145/3360585
   Barr ET, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P306, DOI 10.1145/2635868.2635898
   Carletti V, 2018, IEEE T PATTERN ANAL, V40, P804, DOI 10.1109/TPAMI.2017.2696940
   Chambi S, 2016, SOFTWARE PRACT EXPER, V46, P709, DOI 10.1002/spe.2325
   Coff L, 2020, BMC BIOINFORMATICS, V21, DOI 10.1186/s12859-020-3374-4
   Cordella LP, 2004, IEEE T PATTERN ANAL, V26, P1367, DOI 10.1109/TPAMI.2004.75
   Dilhara M, 2022, PROC INT CONF SOFTW, P736, DOI 10.1145/3510003.3510225
   Duong V. T. T., 2016, P 6 INT C EM DAT TEC, P110
   Falleri Jean-Remy, 2014, P 29 ACM IEEE INT C, P313
   Flamm C, 2022, IEEE ACM T COMPUT BI, V19, P429, DOI 10.1109/TCBB.2020.2998948
   Hashimoto M, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P351, DOI 10.1109/SANER.2015.7081845
   Higo Y, 2021, ASIA PAC SOFWR ENG, P61, DOI 10.1109/APSEC53868.2021.00014
   Hoan Anh Nguyen, 2019, 2019 IEEE/ACM 41st International Conference on Software Engineering (ICSE). Proceedings, P819, DOI 10.1109/ICSE.2019.00089
   Nguyen HA, 2013, IEEE INT CONF AUTOM, P180, DOI 10.1109/ASE.2013.6693078
   Janke M, 2022, IEEE T SOFTWARE ENG, V48, P848, DOI 10.1109/TSE.2020.3004892
   Jiang CT, 2013, KNOWL ENG REV, V28, P75, DOI 10.1017/S0269888912000331
   Jiang JJ, 2018, ISSTA'18: PROCEEDINGS OF THE 27TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P298, DOI 10.1145/3213846.3213871
   Koyuncu A, 2020, EMPIR SOFTW ENG, V25, P1980, DOI 10.1007/s10664-019-09780-z
   Martinez M, 2013, PROC IEEE INT CONF S, P388, DOI 10.1109/ICSM.2013.54
   Muttipati A. S., 2015, INT J ADV RES COMPUT, V6, P29
   Negara S, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P803, DOI 10.1145/2568225.2568317
   Nguyen PT, 2019, PROC INT CONF SOFTW, P1050, DOI 10.1109/ICSE.2019.00109
   Nguyen N, 2022, IEEE WORK CONF MIN S, P1, DOI 10.1145/3524842.3528470
   Nijssen S, 2005, ELECTRON NOTES THEOR, V127, P77, DOI 10.1016/j.entcs.2004.12.039
   Nugroho YS, 2020, EMPIR SOFTW ENG, V25, P790, DOI 10.1007/s10664-019-09772-z
   Paranjape P., 2020, FRONT COMP SCI-SWITZ, V14, P1
   Parvathala R. R. K., 2018, REPRESENTATION LEARN
   Pearce H, 2022, P IEEE S SECUR PRIV, P754, DOI 10.1109/SP46214.2022.00057
   Petermann A, 2017, BDCAT'17: PROCEEDINGS OF THE FOURTH IEEE/ACM INTERNATIONAL CONFERENCE ON BIG DATA COMPUTING, APPLICATIONS AND TECHNOLOGIES, P237, DOI 10.1145/3148055.3148064
   Saha TK, 2015, STAT ANAL DATA MIN, V8, P245, DOI 10.1002/sam.11277
   Shariffdeen RS, 2021, ACM T SOFTW ENG METH, V30, DOI 10.1145/3412376
   Thomas LT, 2010, ACM T KNOWL DISCOV D, V4, DOI 10.1145/1839490.1839491
   Tsantalis N, 2022, IEEE T SOFTWARE ENG, V48, P930, DOI 10.1109/TSE.2020.3007722
   Yan X., 2003, Proceedings of the ninth ACM SIGKDD international conference on Knowledge discovery and data mining, KDD '03, P286
   Yan XF, 2002, 2002 IEEE INTERNATIONAL CONFERENCE ON DATA MINING, PROCEEDINGS, P721, DOI 10.1109/ICDM.2002.1184038
   Zhou K., 2019, JOKEREN GBOLT
NR 36
TC 0
Z9 0
U1 1
U2 1
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUN 1
PY 2023
VL 49
IS 6
BP 3616
EP 3629
DI 10.1109/TSE.2023.3269500
PG 14
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA J9KW5
UT WOS:001012752300015
DA 2024-07-18
ER

PT J
AU Zhang, WQ
   Wei, LL
   Cheung, SC
   Liu, YP
   Li, SQ
   Liu, L
   Lyu, MR
AF Zhang, Wuqi
   Wei, Lili
   Cheung, Shing-Chi
   Liu, Yepang
   Li, Shuqing
   Liu, Lu
   Lyu, Michael R. R.
TI Combatting Front-Running in Smart Contracts: Attack Mining, Benchmark
   Construction and Vulnerability Detector Evaluation
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Smart contracts; Benchmark testing; Blockchains; Codes; History; Relays;
   Location awareness; Benchmark; dataset; empirical study; ethereum;
   front-running; smart contract; vulnerability; blockchain
AB Front-running attacks have been a major concern on the blockchain. Attackers launch front-running attacks by inserting additional transactions before upcoming victim transactions to manipulate victim transaction executions and make profits. Recent studies have shown that front-running attacks are prevalent on the Ethereum blockchain and have caused millions of US dollars loss. It is the vulnerabilities in smart contracts, which are blockchain programs invoked by transactions, that enable the front-running attack opportunities. Although techniques to detect front-running vulnerabilities have been proposed, their performance on realworld vulnerable contracts is unclear. There is no large-scale benchmark based on real attacks to evaluate their capabilities. We make four contributions in this paper. First, we design an effective algorithm to mine real-world attacks in the blockchain history. The evaluation shows that our mining algorithm is more effective and comprehensive, achieving higher recall in finding real attacks than the previous study. Second, we propose an automated and scalable vulnerability localization approach to localize code snippets in smart contracts that enable front-running attacks. The evaluation also shows that our localization approaches are effective in achieving higher precision in pinpointing vulnerabilities compared to the baseline technique. Third, we build a benchmark consisting of 513 real-world attacks with vulnerable code labeled in 235 distinct smart contracts, which is useful to help understand the nature of front-running attacks, vulnerabilities in smart contracts, and evaluate vulnerability detection techniques. Last but not least, we conduct an empirical evaluation of seven state-of-the-art vulnerability detection techniques on our benchmark. The evaluation experiment reveals the inadequacy of existing techniques in detecting front-running vulnerabilities, with a low recall of= 6.04%. Our further analysis identifies four common limitations in existing techniques: lack of support for inter-contract analysis, inefficient constraint solving for cryptographic operations, improper vulnerability patterns, and lack of token support.
C1 [Zhang, Wuqi; Cheung, Shing-Chi; Liu, Lu] Hong Kong Univ Sci & Technol, Dept Comp Sci & Engn, Hong Kong, Peoples R China.
   [Wei, Lili] McGill Univ, Dept Elect & Comp Engn, Montreal, PQ H3A 0G4, Canada.
   [Liu, Yepang] Southern Univ Sci & Technol, Res Inst Trustworthy Autonoumous Syst, Dept Comp Sci & Engn, Shenzhen 518055, Guangdong, Peoples R China.
   [Li, Shuqing; Lyu, Michael R. R.] Chinese Univ Hong Kong, Dept Comp Sci & Engn, Hong Kong, Peoples R China.
C3 Hong Kong University of Science & Technology; McGill University;
   Southern University of Science & Technology; Chinese University of Hong
   Kong
RP Cheung, SC (corresponding author), Hong Kong Univ Sci & Technol, Dept Comp Sci & Engn, Hong Kong, Peoples R China.
EM wzhangcb@connect.ust.hk; lili.wei@mcgill.ca; scc@cse.ust.hk;
   liuyp1@sustech.edu.cn; sqli21@cse.cuhk.edu.hk; lliubf@connect.ust.hk;
   lyu@cse.cuhk.edu.hk
RI Zhang, yuxuan/JXM-9935-2024; lin, lin/KFB-9548-2024; Wang,
   Weiyi/JZC-7841-2024; lin, lin/KCZ-0185-2024; Yang, han/KFS-2671-2024;
   tong, li/KDO-7821-2024; Liu, min/JXW-8493-2024; li, tong/JYO-7530-2024;
   Li, Shuqing/KIG-4921-2024; Liu, Yepang/G-6183-2018; Cheung, Shing
   Chi/U-5882-2018
OI Zhang, Wuqi/0000-0001-8039-0528; Liu, Lu/0000-0002-0922-4460; Liu,
   Yepang/0000-0001-8147-8126; Cheung, Shing Chi/0000-0002-3508-7172
FU National Natural Science Foundation of China [61932021]; Hong Kong
   Research Grant Council/General Research Fund [16205821, 14206921]; Hong
   Kong Research Grant Council/Research Impact Fund [R5034-18]; Natural
   Sciences and Engineering Research Council of Canada [RGPIN-2022-03744,
   DGECR-2022-00378]; Guangdong Basic and Applied Basic Research Fund
   [2021A1515011562]
FX & nbsp;This work was supported in part by the National Natural Science
   Foundation of China under Grant 61932021, in part by Hong Kong Research
   Grant Council/General Research Fund under Grants 16205821 and 14206921,
   in part by Hong Kong Research Grant Council/Research Impact Fund under
   Grant R5034-18, in part by the Natural Sciences and Engineering Research
   Council of Canada under Grant RGPIN-2022-03744, in part by the Natural
   Sciences and Engineering Research Council of Canada under Grant
   DGECR-2022-00378, and in part by Guangdong Basic and Applied Basic
   Research Fund under Grant 2021A1515011562.& nbsp;& nbsp;
CR Bao H, 2022, J RISK FINANC MANAG, V15, DOI 10.3390/jrfm15050215
   Bose P, 2022, P IEEE S SECUR PRIV, P161, DOI [10.1109/SP46214.2022.00072, 10.1109/SP46214.2022.9833721]
   Brereton P, 2007, J SYST SOFTWARE, V80, P571, DOI 10.1016/j.jss.2006.07.009
   Choi J, 2021, 2021 36TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING ASE 2021, P227, DOI 10.1109/ASE51524.2021.9678888
   Common Weakness Enumeration, 2023, CWE CWE 362 CONC EX
   Cooke A., 2023, EIP1155
   CORE Inc, 2023, CORE RANK PORT
   Cousot P, 1996, ACM COMPUT SURV, V28, P324, DOI 10.1145/234528.234740
   COWARD PD, 1991, INFORM SOFTWARE TECH, V33, P53, DOI 10.1016/0950-5849(91)90024-6
   Dafflon J., 2023, EIP777
   Daian P, 2019, Arxiv, DOI arXiv:1904.05234
   Durieux T, 2020, PROC INT CONF SOFTW, P530, DOI 10.1145/3377811.3380364
   Entriken W., 2023, EIP 721 NONFUNGIBLE
   Eskandari Shayan, 2020, Financial Cryptography and Data Security. FC 2019 International Workshops, VOTING and WTSC. Revised Selected Papers. Lecture Notes in Computer Science (LNCS 11599), P170, DOI 10.1007/978-3-030-43725-1_13
   Ethereum, 2021, Ethereum
   Ethereum foundation, 2023, HIST FORKS ETH
   Ethereum foundation, 2023, TOK STAND
   Etherscan, 2021, The Ethereum Blockchain Explorer
   etherscan.io, 2023, TRANSFERMANAGER ETH
   etherscan.io, 2023, ETH AV BLOCK TIM CHA
   Evans M. D. D., 2019, FRONT RUNNING COLLUS
   Feist J, 2019, 2019 IEEE/ACM 2ND INTERNATIONAL WORKSHOP ON EMERGING TRENDS IN SOFTWARE ENGINEERING FOR BLOCKCHAIN (WETSEB 2019), P8, DOI 10.1109/WETSEB.2019.00008
   Flashbots, 2023, MEV EXPL
   Ghaleb Asem, 2020, ISSTA '20: Proceedings of the 29th ACM SIGSOFT International Symposium on Software Testing and Analysis, P415, DOI 10.1145/3395363.3397385
   Grech N, 2018, P ACM PROGRAM LANG, V2, DOI 10.1145/3276486
   Grieco Gustavo, 2020, ISSTA '20: Proceedings of the 29th ACM SIGSOFT International Symposium on Software Testing and Analysis, P557, DOI 10.1145/3395363.3404366
   He JX, 2019, PROCEEDINGS OF THE 2019 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY (CCS'19), P531, DOI 10.1145/3319535.3363230
   Jiang B, 2018, IEEE INT CONF AUTOM, P259, DOI 10.1145/3238147.3238177
   Kalra S, 2018, 25TH ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2018), DOI 10.14722/ndss.2018.23082
   Kolluri A, 2019, PROCEEDINGS OF THE 28TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA '19), P363, DOI 10.1145/3293882.3330560
   Krupp J, 2018, PROCEEDINGS OF THE 27TH USENIX SECURITY SYMPOSIUM, P1317
   Liu C, 2018, PROC IEEE ACM INT C, P65, DOI 10.1145/3183440.3183495
   Liu H, 2018, IEEE INT CONF AUTOM, P814, DOI 10.1145/3238147.3240728
   Lu S., 2008, UNDERSTANDING DETECT
   Luu L, 2016, CCS'16: PROCEEDINGS OF THE 2016 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P254, DOI 10.1145/2976749.2978309
   Mossberg M, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P1186, DOI 10.1109/ASE.2019.00133
   Mueller B., 2018, PROC 9 ANN HITB SECU, P1
   NCC Group, 2021, DASP TOP 10
   Nguyen TD, 2020, PROC INT CONF SOFTW, P778, DOI 10.1145/3377811.3380334
   Nomic foundation, 2023, HARDH ETH DEV ENV PR
   Perez D, 2021, PROCEEDINGS OF THE 30TH USENIX SECURITY SYMPOSIUM, P1325
   Qin KH, 2022, P IEEE S SECUR PRIV, P198, DOI [10.1109/SP46214.2022.00046, 10.1109/SP46214.2022.9833734]
   Santoro J., 2023, ERC 4626 TOKENIZED V
   Schwartz EJ, 2010, P IEEE S SECUR PRIV, P317, DOI 10.1109/SP.2010.26
   Sergey I, 2017, Arxiv, DOI arXiv:1702.05511
   SmartContractSecurity, 2021, SWC REG SMART CONTR
   So S, 2021, PROCEEDINGS OF THE 30TH USENIX SECURITY SYMPOSIUM, P1361
   SRI Lab, 2023, SECURIFY2 SEC MAST S
   Su T, 2017, ACM COMPUT SURV, V50, DOI 10.1145/3020266
   Tikhomirov S, 2018, 2018 IEEE/ACM 1ST INTERNATIONAL WORKSHOP ON EMERGING TRENDS IN SOFTWARE ENGINEERING FOR BLOCKCHAIN (WETSEB), P9, DOI 10.1145/3194113.3194115
   Torres CF, 2021, PROCEEDINGS OF THE 30TH USENIX SECURITY SYMPOSIUM, P1343
   Torres CF, 2018, 34TH ANNUAL COMPUTER SECURITY APPLICATIONS CONFERENCE (ACSAC 2018), P664, DOI 10.1145/3274694.3274737
   Tsankov P, 2018, PROCEEDINGS OF THE 2018 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY (CCS'18), P67, DOI 10.1145/3243734.3243780
   Uniswap, 2021, DEC TRAD PROT
   Veloso N., 2022, CONKAS
   Veloso N., 2023, CONKAS MODULAR STAT
   Vogelsteller F., 2023, EIP 20 TOKEN STANDAR
   Wang HJ, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: NEW IDEAS AND EMERGING RESULTS (ICSE-NIER 2019), P1, DOI 10.1109/ICSE-NIER.2019.00009
   Wang S, 2019, P ACM PROGRAM LANG, V3, DOI 10.1145/3360615
   Wang Y, 2018, PROCEEDINGS OF THE 2018 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY (CCS'18), P1914, DOI 10.1145/3243734.3243847
   Wikipedia, 2022, FRONT RUNN
   Wood G., 2020, Ethereum: a secure decentralized generalized transaction ledger Berlin version
   Wüstholz V, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P1398, DOI 10.1145/3368089.3417064
   Wuestholz V, 2020, PROC INT CONF SOFTW, P789, DOI 10.1145/3377811.3380388
   Xue YX, 2020, IEEE INT CONF AUTOM, P1029, DOI 10.1145/3324884.3416553
   Zhuang Y, 2020, PROCEEDINGS OF THE TWENTY-NINTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P3283
NR 66
TC 0
Z9 0
U1 2
U2 4
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUN 1
PY 2023
VL 49
IS 6
BP 3630
EP 3646
DI 10.1109/TSE.2023.3270117
PG 17
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA J9KW5
UT WOS:001012752300016
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Fatima, S
   Ghaleb, TA
   Briand, L
AF Fatima, Sakina
   Ghaleb, Taher A.
   Briand, Lionel
TI Flakify: A Black-Box, Language Model-Based Predictor for Flaky Tests
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Flaky tests; software testing; black-box testing; natural language
   processing; CodeBERT
AB Software testing assures that code changes do not adversely affect existing functionality. However, a test case can be flaky, i.e., passing and failing across executions, even for the same version of the source code. Flaky test cases introduce overhead to software development as they can lead to unnecessary attempts to debug production or testing code. Besides rerunning test cases multiple times, which is time-consuming and computationally expensive, flaky test cases can be predicted using machine learning (ML) models, thus reducing the wasted cost of re-running and debugging these test cases. However, the state-of-the-art ML-based flaky test case predictors rely on pre-defined sets of features that are either project-specific, i.e., inapplicable to other projects, or require access to production code, which is not always available to software test engineers. Moreover, given the non-deterministic behavior of flaky test cases, it can be challenging to determine a complete set of features that could potentially be associated with test flakiness. Therefore, in this article, we propose Flakify, a black-box, language model-based predictor for flaky test cases. Flakify relies exclusively on the source code of test cases, thus not requiring to (a) access to production code (black-box), (b) rerun test cases, (c) pre-define features. To this end, we employed CodeBERT, a pre-trained language model, and fine-tuned it to predict flaky test cases using the source code of test cases. We evaluated Flakify on two publicly available datasets (FlakeFlagger and IDoFT) for flaky test cases and compared our technique with the FlakeFlagger approach, the best state-of-the-art ML-based, white-box predictor for flaky test cases, using two different evaluation procedures: (1) cross-validation and (2) per-project validation, i.e., prediction on new projects. Flakify achieved F1-scores of 79% and 73% on the FlakeFlagger dataset using cross-validation and per-project validation, respectively. Similarly, Flakify achieved F1-scores of 98% and 89% on the IDoFT dataset using the two validation procedures, respectively. Further, Flakify surpassed FlakeFlagger by 10 and 18 percentage points (pp) in terms of precision and recall, respectively, when evaluated on the FlakeFlagger dataset, thus reducing the cost bound to be wasted on unnecessarily debugging test cases and production code by the same percentages (corresponding to reduction rates of 25% and 64%). Flakify also achieved significantly higher prediction results when used to predict test cases on new projects, suggesting better generalizability over FlakeFlagger. Our results further show that a black-box version of FlakeFlagger is not a viable option for predicting flaky test cases.
C1 [Fatima, Sakina; Ghaleb, Taher A.; Briand, Lionel] Univ Ottawa, Sch EECS, Ottawa, ON K1N 6N5, Canada.
   [Briand, Lionel] Univ Luxembourg, SnT Ctr Secur Reliabil & Trust, L-4365 Esch Sur Alzette, Luxembourg.
C3 University of Ottawa; University of Luxembourg
RP Ghaleb, TA (corresponding author), Univ Ottawa, Sch EECS, Ottawa, ON K1N 6N5, Canada.
EM sfati077@uottawa.ca; tghaleb@uottawa.ca; lbriand@uottawa.ca
RI Ghaleb, Taher A/I-9457-2018
OI Ghaleb, Taher A/0000-0001-9336-7298; Briand, Lionel/0000-0002-1393-1010;
   Fatima, Sakina/0000-0001-9256-525X
FU Huawei Technologies Canada; Mitacs Canada; Natural Sciences and
   Engineering Research Council of Canada (NSERC)
FX This work was supported in part by research grant from Huawei
   Technologies Canada, Mitacs Canada, and in part by the Canada Research
   Chair and Discovery Grant programs of the Natural Sciences and
   Engineering Research Council of Canada (NSERC).
CR Agarap AF, 2018, arXiv, DOI 10.48550/arXiv.1803.08375
   Aljedaani W, 2021, PROCEEDINGS OF EVALUATION AND ASSESSMENT IN SOFTWARE ENGINEERING (EASE 2021), P170, DOI 10.1145/3463274.3463335
   Alshammari A, 2021, PROC INT CONF SOFTW, P1572, DOI 10.1109/ICSE43902.2021.00140
   Anjiang Wei, 2021, Tools and Algorithms for the Construction and Analysis of Systems. 27th International Conference, TACAS 2021. Held as Part of the European Joint Conferences on Theory and Practice of Software, ETAPS 2021. Proceedings. Lecture Notes in Computer Science (LNCS 12651), P270, DOI 10.1007/978-3-030-72016-2_15
   [Anonymous], 2001, ADAPT LEARN SYST SIG, DOI 10.1002/047084535X
   Bach N., 2007, LIT REV LANGUAGE STA, VII, P2
   Bach T, 2017, IEEE ICST WORKSHOP, P3, DOI 10.1109/ICSTW.2017.6
   Bell J, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P433, DOI 10.1145/3180155.3180164
   Branco P, 2016, ACM COMPUT SURV, V49, DOI 10.1145/2907070
   Camara Bruno, 2021, SAST'21: Brazilian Symposium on Systematic and Automated Software Testing, P46, DOI 10.1145/3482909.3482916
   Chawla NV, 2002, J ARTIF INTELL RES, V16, P321, DOI 10.1613/jair.953
   Clark K, 2020, INFORM SYST RES, DOI 10.48550/arXiv.2003.10555
   Devlin J, 2019, 2019 CONFERENCE OF THE NORTH AMERICAN CHAPTER OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS: HUMAN LANGUAGE TECHNOLOGIES (NAACL HLT 2019), VOL. 1, P4171
   Eck M, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P830, DOI 10.1145/3338906.3338945
   El Anigri Salma, 2021, Business Intelligence. 6th International Conference, CBI 2021. Proceedings. Lecture Notes in Business Information Processing (LNBIP 416), P130, DOI 10.1007/978-3-030-76508-8_11
   Feng ZY, 2020, FINDINGS OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, EMNLP 2020, P1536
   Flakify, 2022, BLACK BOX LANG MOD B, DOI [10.5281/zenodo.6994692, DOI 10.5281/ZENODO.6994692]
   Ghaleb TA, 2021, IEEE T SOFTWARE ENG, V47, P1998, DOI 10.1109/TSE.2019.2941880
   Goutte C, 2005, LECT NOTES COMPUT SC, V3408, P345
   gradle, 2019, ID AN FLAK TESTS MAV
   Guo CA, 2017, PR MACH LEARN RES, V70
   Guo D., 2021, PROC INT C LEARN REP, P1
   Haben G, 2021, IEEE WORK CONF MIN S, P219, DOI 10.1109/MSR52588.2021.00034
   Hochreiter S, 1997, NEURAL COMPUT, V9, P1735, DOI [10.1162/neco.1997.9.1.1, 10.1007/978-3-642-24797-2]
   Howard J, 2018, PROCEEDINGS OF THE 56TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (ACL), VOL 1, P328
   Husain H, 2020, Arxiv, DOI arXiv:1909.09436
   Jiang X., 2021, P 37 C UNCERTAINTY A, V161, P54
   Kanade A, 2020, PR MACH LEARN RES, V119
   Keim J, 2020, LECT NOTES COMPUT SC, V12292, P220, DOI 10.1007/978-3-030-58923-3_15
   Kowalczyk E, 2020, 2020 IEEE/ACM 42ND INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE (ICSE-SEIP), P110, DOI 10.1145/3377813.3381370
   Lam W, 2020, PROC INT SYMP SOFTW, P403, DOI 10.1109/ISSRE5003.2020.00045
   Lam W, 2020, P ACM PROGRAM LANG, V4, DOI 10.1145/3428270
   Lam W, 2019, PROCEEDINGS OF THE 28TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA '19), P101, DOI 10.1145/3293882.3330570
   Lam W, 2019, IEEE INT CONF SOFTW, P312, DOI 10.1109/ICST.2019.00038
   Lam Wing, 2020, ISSTA, P298, DOI 10.1145/3395363.3397364
   Lampel J, 2021, PROCEEDINGS OF THE 29TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '21), P1381, DOI 10.1145/3468264.3473931
   Liu YH, 2019, Arxiv, DOI arXiv:1907.11692
   Luo QZ, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P643, DOI 10.1145/2635868.2635920
   Melotti G, 2020, Arxiv, DOI arXiv:2005.14565
   Memon A., 2016, FLAKY TESTS CONTINUO
   Memon A, 2017, 2017 IEEE/ACM 39TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2017), P233, DOI 10.1109/ICSE-SEIP.2017.16
   Micco J., 2018, Advances in continuous integration testing at google
   Micco J., 2016, Flaky tests at google and how we mitigate them
   Moonen Leon, 2001, P 2 INT C EXTR PROGR
   Nadeau D, 2007, LINGUIST INVESTIG, V30, P3
   NOONAN RE, 1985, COMPUT LANG, V10, P225, DOI 10.1016/0096-0551(85)90018-9
   Camara BHP, 2021, INT C PROGRAM COMPRE, P444, DOI 10.1109/ICPC52881.2021.00052
   Pan C, 2021, APPL SCI-BASEL, V11, DOI 10.3390/app11114793
   Panichella A, 2020, PROC IEEE INT CONF S, P523, DOI 10.1109/ICSME46990.2020.00056
   Parry O, 2022, ACM T SOFTW ENG METH, V31, DOI 10.1145/3476105
   Parry O, 2022, 2022 ACM/IEEE 44TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE (ICSE-SEIP 2022), P253, DOI [10.1145/3510457.3513037, 10.1109/ICSE-SEIP55303.2022.9793965]
   Peruma A, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P1650, DOI 10.1145/3368089.3417921
   Peters M, 2018, STUD LATEINAMERIKA, V32, P1, DOI 10.5771/9783845286846
   Pinto Gustavo, 2020, MSR '20: Proceedings of the 17th International Conference on Mining Software Repositories, P492, DOI 10.1145/3379597.3387482
   Pontillo V, 2021, MALTESQUE '21: PROCEEDINGS OF THE 5TH INTERNATIONAL WORKSHOP ON MACHINE LEARNING TECHNIQUES FOR SOFTWARE QUALITY EVOLUTION, P19, DOI 10.1145/3472674.3473981
   Raymond M, 1995, EVOLUTION, V49, P1280, DOI 10.1111/j.1558-5646.1995.tb04456.x
   Shi A, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P545, DOI 10.1145/3338906.3338925
   Srivastava N, 2014, J MACH LEARN RES, V15, P1929
   Sun C, 2019, IEEE I CONF COMP VIS, P7463, DOI 10.1109/ICCV.2019.00756
   Sun C, 2019, LECT NOTES ARTIF INT, V11856, P194, DOI 10.1007/978-3-030-32381-3_16
   Vaswani A, 2017, ADV NEUR IN, V30
   Virginio Tassio, 2020, SBES '20: Proceedings of the 34th Brazilian Symposium on Software Engineering, P564, DOI 10.1145/3422392.3422499
   Wu JJ, 2021, Arxiv, DOI arXiv:2104.11230
   Wu YH, 2016, Arxiv, DOI [arXiv:1609.08144, DOI 10.48550/ARXIV.1609.08144]
   Xu H, 2019, 2019 CONFERENCE OF THE NORTH AMERICAN CHAPTER OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS: HUMAN LANGUAGE TECHNOLOGIES (NAACL HLT 2019), VOL. 1, P2324
   Yang ZL, 2019, ADV NEUR IN, V32
   Yao ZW, 2021, AAAI CONF ARTIF INTE, V35, P10665
   Ziftci C, 2020, PROC IEEE INT CONF S, P736, DOI 10.1109/ICSME46990.2020.00083
   Zolfaghari B, 2021, SOFTWARE PRACT EXPER, V51, P851, DOI 10.1002/spe.2929
NR 69
TC 14
Z9 14
U1 2
U2 7
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD APR 1
PY 2023
VL 49
IS 4
BP 1912
EP 1927
DI 10.1109/TSE.2022.3201209
PG 16
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA E9NM9
UT WOS:000978723600028
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Lei, ZY
   Chen, YX
   Yang, Y
   Xia, MY
   Qi, ZW
AF Lei, Zhanyao
   Chen, Yixiong
   Yang, Yang
   Xia, Mingyuan
   Qi, Zhengwei
TI Bootstrapping Automated Testing for RESTful Web Services
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Fuzz testing; RESTful web service; type inference
AB Modern RESTful services expose RESTful APIs to integrate with diversified applications. Most RESTful API parameters are weakly typed, which greatly increases the possible input value space. Weakly-typed parameters pose difficulties for automated testing tools to generate effective test cases to reveal web service defects related to parameter validation. We call this phenomenon the type collapse problem. To remedy this problem, we introduce FET (Format-encoded Type) techniques, including the FET, the FET lattice, and the FET inference to model fine-grained information for API parameters. Inferred FETcan enhance parameter validation, such as generating a parameter validator for a certain RESTful server. Enhanced by FET techniques, automated testing tools can generate targeted test cases. We demonstrate Leif, a trace-driven fuzzing tool, as a proof-of-concept implementation of FET techniques. Experiment results on 27 commercial services show that FET inference precisely captures documented parameter definitions, which helps Leif discover 11 new bugs and reduce 72% - 86% fuzzing time compared to state-of-the-art fuzzers. Leveraged by the inter-parameter dependency inference, Leif saves 15% fuzzing time.
C1 [Lei, Zhanyao; Chen, Yixiong; Yang, Yang; Qi, Zhengwei] Shanghai Jiao Tong Univ, Shanghai 200240, Peoples R China.
   [Xia, Mingyuan] AppetizerIO, Shanghai 202150, Peoples R China.
C3 Shanghai Jiao Tong University
RP Qi, ZW (corresponding author), Shanghai Jiao Tong Univ, Shanghai 200240, Peoples R China.
EM leizhanyao@sjtu.edu.cn; lawischen@sjtu.edu.cn;
   ylxy452782520@sjtu.edu.cn; ken@appetizer.io; qizhwei@sjtu.edu.cn
RI Yang, Yong/D-9724-2017
OI Lei, Zhanyao/0000-0001-9890-8196; qi, zhengwei/0000-0003-2730-2319
FU National Key Research Development Program of China [2016YFB1000502];
   National NSF of China [61672344, 61525204, 61732010]; Shanghai Pujiang
   Program [19PJ1430900]; Shanghai Key Laboratory of Scalable Computing and
   Systems
FX This work was supported in part by the National Key Research
   DevelopmentProgram of China under Grant 2016YFB1000502, in part by the
   National NSF of China under Grants 61672344, 61525204, and 61732010, in
   part by Shanghai Pujiang Program under Grant 19PJ1430900, and in part by
   the Shanghai Key Laboratory of Scalable Computing and Systems
CR [Anonymous], 2011, PROC INT C ADV COMPU
   [Anonymous], 2018, TNT FUZZER
   [Anonymous], 2021, FIDDLER
   [Anonymous], 2020, FUZZAPI
   [Anonymous], 2017, CVE20181257
   [Anonymous], 2018, CVE201718349
   [Anonymous], AppSpider
   [Anonymous], 2018, CVE201815756
   [Anonymous], 2020, CVE20205398
   [Anonymous], 2007, BURPSUITE
   [Anonymous], 2020, CVE20205421
   [Anonymous], 2020, CVE20205397
   [Anonymous], 2017, CVE20181275
   Arcuri A, 2019, ACM T SOFTW ENG METH, V28, DOI 10.1145/3293455
   Arcuri A, 2014, SOFTW TEST VERIF REL, V24, P219, DOI 10.1002/stvr.1486
   Atlidakis V, 2019, PROC INT CONF SOFTW, P748, DOI 10.1109/ICSE.2019.00083
   Aycock J, 2003, ACM COMPUT SURV, V35, P97, DOI 10.1145/857076.857077
   Bai XY, 2005, SOSE 2005: IEEE INTERNATIONAL WORKSHOP ON SERVICE-ORIENTED SYSTEM ENGINEERING, P207
   Baker P., 2007, Model Driven Testing - Using the UML Testing Profile, VFirst
   Berners-Lee T., 2005, RFC3986: Uniform Resource Identifier (URI): Generic Syntax
   Bertolino A, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P141, DOI 10.1145/1595696.1595719
   Breslaw D, 2016, MIRAI USES STOMP PRO
   Chaturvedi A, 2021, IEEE T SERV COMPUT, V14, P930, DOI 10.1109/TSC.2018.2821157
   Chen Y., 2021, FIGSHARE, DOI [10.6084/m9.figshare.13622720.v2, DOI 10.6084/M9.FIGSHARE.13622720.V2]
   Chen Yixiong, 2022, Figshare, DOI 10.6084/m9.figshare.19771225.v1
   Chen YX, 2021, LECT NOTES COMPUT SC, V12649, P46, DOI 10.1007/978-3-030-71500-7_3
   Chen Yixiong, 2021, Figshare, DOI 10.6084/m9.figshare.12377150.v1
   Chodorow Kristina, 2013, MongoDB: The Definitive Guide, V2nd
   CORTESI A., 2010, mitmproxy: A free and open source interactive HTTPS proxy
   Cotroneo D, 2019, EMPIR SOFTW ENG, V24, P3630, DOI 10.1007/s10664-019-09725-6
   Cousot P., 1977, C RECORD 4 ANN ACM S, P238, DOI DOI 10.1145/512950.512973
   Cox N., 2001, DIRECTORY SERVICES D
   Droettboom M, 2022, JSON SCHEMA
   Ed-douibi H, 2018, IEEE INT ENTERP DIST, P181, DOI 10.1109/EDOC.2018.00031
   Fertig T, 2015, WWW'15 COMPANION: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON WORLD WIDE WEB, P1497, DOI 10.1145/2740908.2743045
   Fielding R., 2000, ARCHITECTURAL STYLES, P76
   Gao CS, 2014, 2014 IEEE 21ST INTERNATIONAL CONFERENCE ON WEB SERVICES (ICWS 2014), P65, DOI 10.1109/ICWS.2014.22
   Godefroid P, 2008, PLDI'08: PROCEEDINGS OF THE 2008 SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN & IMPLEMENTATION, P206, DOI 10.1145/1375581.1375607
   Goessner S., 2007, JSONPath - XPath for JSON
   Google, 2022, ANDR MONK
   Hafif O, 2014, TRUSTWAVE, V15
   Hao M, 2020, FASTJSON 1 2 68 EARL
   Jensen SH, 2009, LECT NOTES COMPUT SC, V5673, P238, DOI 10.1007/978-3-642-03237-0_17
   Joy B., 2000, JAVA LANGUAGE SPECIF, V2nd
   Klyne G., 2002, RFC3339: Date and Time on the Internet: Timestamps
   Luo Xu, 2009, Proceedings of the 2009 11th IEEE International Symposium on Web Systems Evolution (WSE 2009), P59, DOI 10.1109/WSE.2009.5632118
   Mario H, 2022, SWAGGER CODEGEN
   Martin-Lopez A, 2022, IEEE T SERV COMPUT, V15, P2342, DOI 10.1109/TSC.2021.3050610
   Martin-Lopez A, 2019, LECT NOTES COMPUT SC, V11895, P399, DOI 10.1007/978-3-030-33702-5_31
   Moller A, 2017, PACKAGE DK BRICS AUT
   Moller Anders., 2018, Static Program Analysis
   Morlitz D, 2002, US Patent, Patent No. [09/726,985, 09726985]
   OAI (OpenAPI Initiative), 2021, OPENAPI SPEC
   OAI (OpenAPI Initiative), 2021, THEOPENAPI SPEC
   Oostvogels N, 2017, LECT NOTES COMPUT SC, V10360, P323, DOI 10.1007/978-3-319-60131-1_18
   Open API CSA Working Group, 2019, OP API SURV REP
   Ouyang L, 2018, Arxiv, DOI arXiv:1805.08427
   Raychev V, 2015, ACM SIGPLAN NOTICES, V50, P111, DOI [10.1145/2775051.2677009, 10.1145/2676726.2677009]
   S. S. Guide, 2022, DATA TYPES
   Scheurer D, 2016, LECT NOTES COMPUT SC, V10009, P57, DOI 10.1007/978-3-319-47846-3_5
   T. A. Documentation, 2022, GET US LOOK
   T. A. Documentation, 2022, GET FOLL IDS
   T. A. Documentation, 2022, US OBJ
   THOMPSON K, 1968, COMMUN ACM, V11, P419, DOI 10.1145/363347.363387
   Pham VT, 2016, IEEE INT CONF AUTOM, P543, DOI 10.1145/2970276.2970316
   Vu H, 2017, WEBIST: PROCEEDINGS OF THE 13TH INTERNATIONAL CONFERENCE ON WEB INFORMATION SYSTEMS AND TECHNOLOGIES, P340, DOI 10.5220/0006353403400343
   Wang TL, 2010, P IEEE S SECUR PRIV, P495, DOI 10.1109/SP.2010.37
   Wu Q., 2013, WORLD WIDE WED, P1421
   Yuan QL, 2008, IEEE INTL SYMPOS WEB, P41, DOI 10.1109/WSE.2008.4655394
NR 69
TC 0
Z9 1
U1 1
U2 6
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD APR 1
PY 2023
VL 49
IS 4
BP 1561
EP 1579
DI 10.1109/TSE.2022.3182663
PG 19
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA E9NM9
UT WOS:000978723600010
DA 2024-07-18
ER

PT J
AU Masood, Z
   Hoda, R
   Blincoe, K
AF Masood, Zainab
   Hoda, Rashina
   Blincoe, Kelly
TI What Drives and Sustains Self-Assignment in Agile Teams
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Task analysis; Software; Interviews; Lead; Business; Resource
   management; Companies; Self-assignment; agile teams; self-assignment
   factors; task allocation
ID WORK MOTIVATION; SOFTWARE
AB Self-assignment, where software developers choose their own tasks, is a common practice in agile teams. However, it is not known why developers select certain tasks. It is important for managers to be aware of these reasons to ensure sustainable self-assignment practices. We investigated developers' preferences while they are choosing tasks for themselves. We collected data from 42 participants working in 25 different software companies. We applied Grounded Theory procedures to study and analyse factors for self-assigning tasks, which we grouped into three categories: task-based, developer-based, and opinion-based. We found that developers have individual preferences and not all factors are important to every developer. Managers share some common and varying perspectives around the identified factors. Most managers want developers to give higher priority to certain factors. Developers often need to balance between task priority and their own individual preferences, and managers facilitate this through a variety of strategies. More risk-averse managers encourage expertise-based self-assignment to ensure tasks are completed quickly. Managers who are risk-balancing encourage developers to choose tasks that provide learning opportunities only when there is little risk of delays or reduced quality. Finally, growth-seeking managers regularly encourage team members to pick tasks outside their comfort zone to encourage growth opportunities. Our findings will help managers to understand what developers consider when self-assigning tasks and help them empower their teams to practice self-assignment in a sustainable manner.
C1 [Masood, Zainab; Blincoe, Kelly] Univ Auckland, Dept Elect Comp & Software Engn, Auckland 1010, New Zealand.
   [Hoda, Rashina] Monash Univ, Fac Informat Technol, Clayton, Vic 3800, Australia.
C3 University of Auckland; Monash University
RP Masood, Z (corresponding author), Univ Auckland, Dept Elect Comp & Software Engn, Auckland 1010, New Zealand.
EM zmas690@aucklanduni.ac.nz; rashina.hoda@monash.edu; kblincoe@acm.org
OI Blincoe, Kelly/0000-0003-4092-9706; Hoda, Rashina/0000-0001-5147-8096;
   Masood, Zainab/0000-0002-3592-8250
CR [Anonymous], 2006, Journal of Global Information Technology Management
   [Anonymous], 2013, The Scrum Guide
   Baltes S, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P187, DOI 10.1145/3236024.3236061
   Beecham S, 2008, INFORM SOFTWARE TECH, V50, P860, DOI 10.1016/j.infsof.2007.09.004
   De Smet A., 2018, MCKIN Q, V3, P76
   Deemer P., 2010, The scrum primer
   Deemer P., 2012, A Lightweight Guide to the Theory and Practice of Scrum
   DeMarco T, 1999, PEOPLEWARE PRODUCTIV
   Denzin N. K., 2018, SAGE HDB QUALITATIVE
   Franca A. Cesar C., 2011, 15th Annual Conference on Evaluation & Assessment in Software Engineering (EASE 2011), P154, DOI 10.1049/ic.2011.0019
   França C, 2020, IEEE T SOFTWARE ENG, V46, P118, DOI 10.1109/TSE.2018.2842201
   Gandomani TJ, 2020, IEEE ACCESS, V8, P117109, DOI 10.1109/ACCESS.2020.3004450
   Garvin D. A., 2013, GOOGLES PROJECT OXYG
   Graziotin D., 2017, P 21 INT C EVALUATIO, P324, DOI [DOI 10.1145/3084226.3084242, 10.1145/3084226.3084242]
   Gutwin C., 2004, Computer Supported Cooperative Work Conference Proceedings, P72, DOI 10.1145/1031607.1031621
   Hall T, 2008, IEEE SOFTWARE, V25, P92, DOI 10.1109/MS.2008.105
   Herbsleb J.D., 2006, Proc. Int'l Conf. Information Systems (ICIS 06), P38
   Hilton M, 2018, 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING - SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2018), P191, DOI 10.1145/3183519.3183527
   Hoda R, 2010, 2010 ICSE WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING (CHASE 2010), P5
   Hoda R, 2016, J SYST SOFTWARE, V117, P245, DOI 10.1016/j.jss.2016.02.049
   Imtiaz S, 2017, J SOFTW-EVOL PROC, V29, DOI 10.1002/smr.1832
   Kalliamvakou E, 2019, IEEE T SOFTWARE ENG, V45, P87, DOI 10.1109/TSE.2017.2768368
   KATZELL RA, 1990, AM PSYCHOL, V45, P144, DOI 10.1037/0003-066X.45.2.144
   Lewis S, 2015, HEALTH PROMOT PRACT, V16, P473, DOI 10.1177/1524839915580941
   Magazinius A, 2012, J SYST SOFTWARE, V85, P1770, DOI 10.1016/j.jss.2012.03.026
   Masood Z, 2020, EMPIR SOFTW ENG, V25, P4962, DOI 10.1007/s10664-020-09876-x
   Masood Z, 2017, LECT NOTES BUS INF P, V283, P267, DOI 10.1007/978-3-319-57633-6_19
   Masood Z, 2017, 2017 IEEE/ACM 10TH INTERNATIONAL WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING (CHASE 2017), P92, DOI 10.1109/CHASE.2017.18
   Melo CD, 2012, EUROMICRO CONF PROC, P376, DOI 10.1109/SEAA.2012.45
   Moe NB, 2008, ASWEC 2008: 19TH AUSTRALIAN SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P76, DOI 10.1109/ASWEC.2008.28
   Murgia A., 2014, Proceedings of the 11th working conference on mining software repositories, Ved, P262
   Pinjani P, 2013, INFORM MANAGE-AMSTER, V50, P144, DOI 10.1016/j.im.2012.10.002
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Ryan RM, 2000, AM PSYCHOL, V55, P68, DOI 10.1037/0003-066X.55.1.68
   Shastri Y, 2017, PROCEEDINGS OF THE 10TH INNOVATIONS IN SOFTWARE ENGINEERING CONFERENCE, P45, DOI 10.1145/3021460.3021465
   Simao M, 2016, ADV INTELL SYST, V465, P127, DOI 10.1007/978-3-319-33622-0_12
   Steers RM, 2004, ACAD MANAGE REV, V29, P379, DOI 10.2307/20159049
   Storey MA, 2021, IEEE T SOFTWARE ENG, V47, P2125, DOI 10.1109/TSE.2019.2944354
   Strauss A.L., 1990, BASICS QUALITATIVE R
   Tessem J, 2007, LECT NOTES COMPUT SC, V4536, P54
   van Solingen R, 2000, INFORM SOFTWARE TECH, V42, P965, DOI 10.1016/S0950-5849(00)00148-8
NR 41
TC 0
Z9 0
U1 1
U2 7
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD SEPT 1
PY 2022
VL 48
IS 9
BP 3626
EP 3639
DI 10.1109/TSE.2021.3101732
PG 14
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 4O3GR
UT WOS:000854591500024
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Chowdhury, MAR
   Abdalkareem, R
   Shihab, E
   Adams, B
AF Chowdhury, Md Atique Reza
   Abdalkareem, Rabe
   Shihab, Emad
   Adams, Bram
TI On the Untriviality of Trivial Packages: An Empirical Study of npm
   JavaScript Packages
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Trivial packages; npm ecosystem; mining software repository
ID SOFTWARE; EVOLUTION; CENTRALITY
AB Nowadays, developing software would be unthinkable without the use of third-party packages. Although such code reuse helps to achieve rapid continuous delivery of software to end-users, blindly reusing code has its pitfalls. For example, prior work has investigated the rationale for using packages that implement simple functionalities, known as trivial packages (i.e., in terms of the code size and complexity). This prior work showed that although these trivial packages were simple, they were popular and prevalent in the npm ecosystem. This popularity and prevalence of trivial packages peaked our interest in questioning the 'triviality of trivial packages'. To better understand and examine the triviality of trivial packages, we mine a large set of JavaScript projects that use trivial npm packages and evaluate their relative centrality. Specifically, we evaluate the triviality from two complementary points of view: based on project usage and ecosystem usage of these trivial packages. Our result shows that trivial packages are being used in central JavaScript files of a software project. Additionally, by analyzing all external package API calls in these JavaScript files, we found that a high percentage of these API calls are attributed to trivial packages. Therefore, these packages play a significant role in JavaScript files. Furthermore, in the package dependency network, we observed that 16.8 percent packages are trivial and in some cases removing a trivial package can impact approximately 29 percent of the ecosystem. Overall, our finding indicates that although smaller in size and complexity, trivial packages are highly depended on packages by JavaScript projects. Additionally, our study shows that although they might be called trivial, nothing about trivial packages is trivial.
C1 [Chowdhury, Md Atique Reza; Shihab, Emad] Concordia Univ, Dept Comp Sci & Software Engn, Data Driven Anal Software DAS Lab, Montreal, PQ H3G 1M8, Canada.
   [Abdalkareem, Rabe] Queens Univ, Sch Comp, Software Anal & Intelligence Lab SAIL, Kingston, ON K7L 3N6, Canada.
   [Adams, Bram] Queens Univ, Sch Comp, Lab Maintenance Construct & Intelligence Software, Kingston, ON K7L 3N6, Canada.
C3 Concordia University - Canada; Queens University - Canada; Queens
   University - Canada
RP Abdalkareem, R (corresponding author), Queens Univ, Sch Comp, Software Anal & Intelligence Lab SAIL, Kingston, ON K7L 3N6, Canada.
EM m_wdhu@encs.concordia.ca; abdrabe@gmail.com; eshihab@encs.concordia.ca;
   bram.adams@queensu.ca
RI Abdalkareem, Rabe/IQV-8842-2023; Abdalkareem, Rabe/AET-2496-2022
OI Abdalkareem, Rabe/0000-0001-9914-5434; Adams, Bram/0000-0001-7213-4006
CR Abdalkareem R, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P1062, DOI 10.1145/3106237.3121278
   Abdalkareem R, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P385, DOI 10.1145/3106237.3106267
   Ahasanuzzaman M, 2022, IEEE T SOFTWARE ENG, V48, P209, DOI 10.1109/TSE.2020.2983399
   [Anonymous], MADGE DEV TOOL GENER
   [Anonymous], 2008, US
   [Anonymous], CLIFF DELTA CLIFFS D
   [Anonymous], NETWORKX NETWORK GRA
   [Anonymous], WILCOX TEST WILCOXON
   Bavota G, 2013, PROC IEEE INT CONF S, P280, DOI 10.1109/ICSM.2013.39
   Bloemen R., 2014, PROC 11 WORK C MININ, P404
   Borgatti SP, 2005, SOC NETWORKS, V27, P55, DOI 10.1016/j.socnet.2004.11.008
   Cadini F, 2009, LECT NOTES COMPUT SC, V5508, P155, DOI 10.1007/978-3-642-03552-4_14
   Castelluccio M, 2019, EMPIR SOFTW ENG, V24, P3008, DOI 10.1007/s10664-018-9665-y
   Chowdhury M. A. R., 2019, UNTRIVIALITY TRIVIAL, DOI [10.5281/zenodo.4019236, DOI 10.5281/ZENODO.4019236]
   Cox R, 2019, COMMUN ACM, V62, P36, DOI 10.1145/3347446
   Decan A, 2021, IEEE T SOFTWARE ENG, V47, P1226, DOI 10.1109/TSE.2019.2918315
   Decan A, 2019, EMPIR SOFTW ENG, V24, P381, DOI 10.1007/s10664-017-9589-y
   Decan A, 2018, IEEE WORK CONF MIN S, P181, DOI 10.1145/3196398.3196401
   Decan A, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P493, DOI 10.1109/SANER.2016.12
   docs.npmjs, US
   Fard AM, 2017, IEEE INT CONF SOFTW, P230, DOI 10.1109/ICST.2017.28
   Feldthaus A, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P752, DOI 10.1109/ICSE.2013.6606621
   FREEMAN LC, 1977, SOCIOMETRY, V40, P35, DOI 10.2307/3033543
   Kula RG, 2017, Arxiv, DOI [arXiv:1709.04638, DOI 10.48550/ARXIV.1709.04638]
   German DM, 2013, EUR CON SFTWR MTNCE, P243, DOI 10.1109/CSMR.2013.33
   ghtorrent, US
   github, about us
   Godfrey MW, 2000, PROC IEEE INT CONF S, P131, DOI 10.1109/ICSM.2000.883030
   Gousios G., 2014, Proceedings of the 11th working conference on mining software repositories, Ved, P384, DOI [DOI 10.1145/2597073.2597126, 10.1145/2597073]
   Hassan AE, 2009, PROC INT CONF SOFTW, P78, DOI 10.1109/ICSE.2009.5070510
   Holmes R., 2007, P OOPSLA WORKSH ECL, P70
   Inoue K, 2012, PROC INT CONF SOFTW, P331, DOI 10.1109/ICSE.2012.6227181
   Kabbedijk J, 2011, LECT NOTES BUS INF P, V80, P44
   Kalliamvakou E., 2014, P 11 WORKING C MININ, P92, DOI DOI 10.1145/2597073.2597074
   Kamei Y, 2013, IEEE T SOFTWARE ENG, V39, P757, DOI 10.1109/TSE.2012.70
   Kikas R, 2017, IEEE WORK CONF MIN S, P102, DOI 10.1109/MSR.2017.55
   Kula RG, 2018, EMPIR SOFTW ENG, V23, P384, DOI 10.1007/s10664-017-9521-5
   LEHMAN MM, 1980, P IEEE, V68, P1060, DOI 10.1109/PROC.1980.11805
   Li J., DEPCHECK NPM
   LIM WC, 1994, IEEE SOFTWARE, V11, P23, DOI 10.1109/52.311048
   Macdomald F., PROGRAMMER ALMOST BR
   Manikas K, 2016, J SYST SOFTWARE, V117, P84, DOI 10.1016/j.jss.2016.02.003
   Mens T, 2016, PROC IEEE INT CONF S, P1, DOI 10.1109/ICSME.2016.19
   Mileva YM, 2010, LECT NOTES COMPUT SC, V6303, P173, DOI 10.1007/978-3-642-15585-7_17
   Murphy-Hill E, 2021, IEEE T SOFTWARE ENG, V47, P582, DOI 10.1109/TSE.2019.2900308
   npm, About us
   npms.io, US
   Qi XQ, 2012, INFORM SCIENCES, V194, P240, DOI 10.1016/j.ins.2011.12.027
   Rahman MT, 2019, EMPIR SOFTW ENG, V24, P826, DOI 10.1007/s10664-018-9639-0
   scite, About us
   Sorhus S., AWESOME AWESOME LIST
   Wagner S, 2019, RETHINKING PRODUCTIV, P69, DOI 10.1007/978-1-4842-4221-68
   White S., 2003, P 9 ACM SIGKDD INT C, P266, DOI DOI 10.1145/956750.956782
   Wittern E, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P351, DOI [10.1145/2901739.2901743, 10.1109/MSR.2016.043]
   Xie GW, 2009, PROC IEEE INT CONF S, P51, DOI 10.1109/ICSM.2009.5306356
   Yeoman, About us
   Zapata RE, 2018, PROC IEEE INT CONF S, P559, DOI 10.1109/ICSME.2018.00067
   Zerouali A, 2019, 2019 IEEE 26TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER), P589, DOI [10.1109/saner.2019.8667997, 10.1109/SANER.2019.8667997]
   Zimmermann M, 2019, PROCEEDINGS OF THE 28TH USENIX SECURITY SYMPOSIUM, P995
NR 59
TC 4
Z9 6
U1 1
U2 8
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD AUG 1
PY 2022
VL 48
IS 8
BP 2695
EP 2708
DI 10.1109/TSE.2021.3068901
PG 14
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 4D1BG
UT WOS:000846878500001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Khan, F
   Chen, BQ
   Varro, D
   McIntosh, S
AF Khan, Faizan
   Chen, Boqi
   Varro, Daniel
   McIntosh, Shane
TI An Empirical Study of Type-Related Defects in Python Projects
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Python; Annotations; Tools; Task analysis; Ecosystems; Software systems;
   Software measurement; Software defects; static type checkers; dynamic
   type systems; empirical study
ID DYNAMIC TYPE SYSTEMS
AB In recent years, Python has experienced an explosive growth in adoption, particularly among open source projects. While Python's dynamically-typed nature provides developers with powerful programming abstractions, that same dynamic type system allows for type-related defects to accumulate in code bases. To aid in the early detection of type-related defects, type annotations were introduced into the Python ecosystem (i.e., PEP-484) and static type checkers like mypy have appeared on the market. While applying a type checker like mypy can in theory help to catch type-related defects before they impact users, little is known about the real impact of adopting a type checker to reveal defects in Python projects. In this paper, we study the extent to which Python projects benefit from such type checking features. For this purpose, we mine the issue tracking and version control repositories of 210 Python projects on GitHub. Inspired by the work of Gao et al. on type-related defects in JavaScript, we add type annotations to test whether mypy detects an error that would have helped developers to avoid real defects. We observe that 15 percent of the defects could have been prevented by mypy. Moreover, we find that there is no significant difference between the experience level of developers committing type-related defects and the experience of developers committing defects that are not type-related. In addition, a manual analysis of the anti-patterns that most commonly lead to type-checking faults reveals that the redefinition of Python references, dynamic attribute initialization and incorrectly handled Null objects are the most common causes of type-related faults. Since our study is conducted on fixed public defects that have gone through code reviews and multiple test cycles, these results represent a lower bound on the benefits of adopting a type checker. Therefore, we recommend incorporating a static type checker like mypy into the development workflow, as not only will it prevent type-related defects but also mitigate certain anti-patterns during development.
C1 [Khan, Faizan; Chen, Boqi; Varro, Daniel] McGill Univ, Dept Elect & Comp Engn, Montreal, PQ H3A 0G4, Canada.
   [McIntosh, Shane] Univ Waterloo, David R Cheriton Sch Comp Sci, Waterloo, ON N2L 3G1, Canada.
C3 McGill University; University of Waterloo
RP Khan, F (corresponding author), McGill Univ, Dept Elect & Comp Engn, Montreal, PQ H3A 0G4, Canada.
EM faizan.khan3@mail.mcgill.ca; boqi.chen@mail.mcgill.ca;
   daniel.varro@mcgill.ca; shane.mcintosh@uwaterloo.ca
RI Varro, Daniel/AAC-4234-2022
OI Varro, Daniel/0000-0002-8790-252X; Chen, Boqi/0000-0002-1451-3603; Khan,
   Faizan/0000-0003-2644-3769
CR Berger ED, 2019, ACM T PROGR LANG SYS, V41, DOI 10.1145/3340571
   Bracha G., 2004, OOPSLA 04 WORKSH REV
   Cannon B., 2005, THESIS CALIFORNIA PO
   Cleve H, 2005, PROC INT CONF SOFTW, P342
   CLIFF N, 1993, PSYCHOL BULL, V114, P494, DOI 10.1037/0033-2909.114.3.494
   Daly M., 2009, WORK PROGR EMP STUD
   Damas L., 1982, C REC 9 ANN ACM S PR, P207, DOI DOI 10.1145/582153.582176
   Fischer L, 2016, ACM SIGPLAN NOTICES, V51, P154, DOI [10.1145/2816707.2816720, 10.1145/2936313.2816720]
   G. Inc, TOP 10 PRIM LANG TIM
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   Gao Z, 2017, PROC INT CONF SOFTW, P758, DOI 10.1109/ICSE.2017.75
   Github Inc, LINGUIST
   Gorbovitski M, 2010, ACM SIGPLAN NOTICES, V45, P27, DOI 10.1145/1899661.1869635
   Grigorik I., GH ARCH
   Hanenberg S, 2014, EMPIR SOFTW ENG, V19, P1335, DOI 10.1007/s10664-013-9289-1
   Hanenberg S, 2010, ACM SIGPLAN NOTICES, V45, P22, DOI 10.1145/1932682.1869462
   Hellendoorn VJ, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P152, DOI 10.1145/3236024.3236051
   Herzig K, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P392, DOI 10.1109/ICSE.2013.6606585
   Hindle A, 2009, INT C PROGRAM COMPRE, P30, DOI 10.1109/ICPC.2009.5090025
   HINDLEY R, 1969, T AM MATH SOC, V146, P29, DOI 10.2307/1995158
   Kleinschmager S., 2012, 2012 IEEE 20th International Conference on Program Comprehension, P153
   KREJCIE RV, 1970, EDUC PSYCHOL MEAS, V30, P607, DOI 10.1177/001316447003000308
   Lukasz Langa J. L., TYPE HINTS
   MANN HB, 1947, ANN MATH STAT, V18, P50, DOI 10.1214/aoms/1177730491
   McHugh ML, 2012, BIOCHEM MEDICA, V22, P276, DOI 10.11613/bm.2012.031
   McIntosh S, 2018, IEEE T SOFTWARE ENG, V44, P412, DOI 10.1109/TSE.2017.2693980
   Merriam S.B., 2009, Qualitative research:A guide to design and implementation
   MILNER R, 1978, J COMPUT SYST SCI, V17, P348, DOI 10.1016/0022-0000(78)90014-4
   Prechelt L, 2000, COMPUTER, V33, P23, DOI 10.1109/2.876288
   Ray B, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P155, DOI 10.1145/2635868.2635922
   Rigo Armin, 2006, COMP 21 ACM SIGPLAN, P944, DOI DOI 10.1145/1176617.1176753
   Rodríguez-Pérez G, 2020, EMPIR SOFTW ENG, V25, P1294, DOI 10.1007/s10664-019-09781-y
   Rodríguez-Pérez G, 2018, PROCEEDINGS OF THE 12TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT (ESEM 2018), DOI 10.1145/3239235.3267436
   Rodríguez-Pérez G, 2018, INFORM SOFTWARE TECH, V99, P164, DOI 10.1016/j.infsof.2018.03.009
   Salib M., 2004, THESIS MIT CAMBRIDGE
   Siek J, 2007, LECT NOTES COMPUT SC, V4609, P2
   Siek Jeremy, 2006, WORKSHOP SCHEME FUNC, P81
   Sliwerski J., 2005, ACM SIGSOFT SOFTWARE, P1, DOI DOI 10.1145/1082983.1083147
   Stuchlik A, 2012, ACM SIGPLAN NOTICES, V47, P97, DOI 10.1145/2168696.2047861
   Swanson E. B., 1976, 2nd International Conference on Software Engineering, P492
   Thongtanunam P, 2016, PROC INT CONF SOFTW, P1039, DOI 10.1145/2884781.2884852
   Zeller A, 2002, IEEE T SOFTWARE ENG, V28, P183, DOI 10.1109/32.988498
NR 42
TC 5
Z9 6
U1 0
U2 4
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD AUG 1
PY 2022
VL 48
IS 8
BP 3145
EP 3158
DI 10.1109/TSE.2021.3082068
PG 14
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 4D1BG
UT WOS:000846878500026
DA 2024-07-18
ER

PT J
AU Wang, JJ
   Yang, Y
   Wang, S
   Chen, CY
   Wang, DD
   Wang, Q
AF Wang, Junjie
   Yang, Ye
   Wang, Song
   Chen, Chunyang
   Wang, Dandan
   Wang, Qing
TI Context-Aware Personalized Crowdtesting Task Recommendation
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Task analysis; Computer bugs; Testing; Context modeling; Feature
   extraction; Crowdsourcing; Videos; Crowdsourced testing; task
   recommendation; testing context model
ID SOFTWARE-DEVELOPMENT
AB Crowdsourced software testing (short for crowdtesting) is a special type of crowdsourcing. It requires that crowdworkers master appropriate skill-sets and commit significant effort for completing a task. Abundant uncertainty may arise during a crowdtesting process due to imperfect information between the task requester and crowdworkers. For example, a worker frequently chooses tasks in an ad hoc manner in crowdtesting context, and an inappropriate task selection may lead to the worker's failing to detect any bugs, and significant testing effort unpaid and wasted. Recent studies have explored methods for supporting task requesters to make informed decisions on task pricing, worker recommendation, and so on. Unfortunately, very few study offers decision making support from the crowdworkers' perspectives. We motivate this study through a pilot study, revealing the large portion (74 percent) of unpaid crowdworkers' effort due to the inappropriate task choice. Drawn from our previous work on context-aware crowdworker recommendations, we advocate a more effective alternative to manual task selection would be to provide contextualized and personalized task recommendation considering the diverse distribution of worker preference and expertise, with objectives to increase their winning chances and to potentially reduce the frequency of unpaid crowd work. This paper proposes a context-aware personalized task recommendation approach PTRec, consisting of a testing context model and a learning-based task recommendation model to aid dynamic worker decision in selecting crowdtesting tasks. The testing context model is constructed in two perspectives, i.e., process context and resource context, to capture the in-process progress-oriented information and crowdworkers' characteristics respectively. Built on top of this context model, the learning-based task recommendation model extracts 60 features automatically, and employs random forest learner to generate dynamic and personalized task recommendation which matches workers' expertise and interest. The evaluation is conducted on 636 crowdtesting tasks involving 2,404 crowdworkers from one of the largest crowdtesting platforms, and results show our approach can achieve an average precision of 82 percent, average recall of 84 percent, and save an estimated average of 81 percent effort originally spent on exploring, significantly outperforming four commonly-used and state-of-the-art baselines. This indicates its potential in recommending proper tasks to workers so as to improve bug detection efficiency and increase their monetary earnings.
C1 [Wang, Junjie; Wang, Dandan; Wang, Qing] Chinese Acad Sci, Inst Software, State Key Lab Comp Sci, Lab Internet Software Technol, Beijing 100190, Peoples R China.
   [Wang, Junjie; Wang, Dandan; Wang, Qing] Univ Chinese Acad Sci, Beijing 100049, Peoples R China.
   [Yang, Ye] Stevens Inst Technol, Sch Syst & Enterprises, Hoboken, NJ 07030 USA.
   [Wang, Song] York Univ, Lassonde Sch Engn, Toronto, ON M3J 1P3, Canada.
   [Chen, Chunyang] Monash Univ, Informat Technol, Clayton, Vic 3800, Australia.
C3 Chinese Academy of Sciences; Institute of Software, CAS; Chinese Academy
   of Sciences; University of Chinese Academy of Sciences, CAS; Stevens
   Institute of Technology; York University - Canada; Monash University
RP Wang, Q (corresponding author), Chinese Acad Sci, Inst Software, State Key Lab Comp Sci, Lab Internet Software Technol, Beijing 100190, Peoples R China.
EM junjie@iscas.ac.cn; ye.yang@stevens.edu; wangsong@eecs.yorku.ca;
   chunyang.chen@monash.edu; dandan@iscas.ac.cn; wq@iscas.ac.cn
RI cao, yutong/JJF-4531-2023; wang, qi/ITT-9652-2023; Zhu,
   Jie/HPI-1935-2023; qi, li/JFE-7167-2023; li, bai/JNE-1502-2023
OI wang, jun jie/0000-0002-9941-6713; wang, dandan/0000-0002-8380-050X;
   Chen, Chunyang/0000-0003-2011-9618
FU National Key Research and Development Program of China [2018YFB
   1403400]; National Natural Science Foundation of China [62072442,
   62002348]
FX This work was supported by the National Key Research and Development
   Program of China under Grant 2018YFB 1403400, and in part by the
   National Natural Science Foundation of China under Grants 62072442 and
   62002348.
CR Abhinav K, 2020, INT CONF GLOBAL SOFT, P86, DOI 10.1145/3372787.3390435
   [Anonymous], 2020, DATAVIZCATALOGUE
   [Anonymous], 2020, US
   [Anonymous], 2020, PROJECTS BOARD
   [Anonymous], 2020, 2 MILLION DEV HAVE J
   [Anonymous], 2020, DEFINITIVE GUIDE CRO
   [Anonymous], 2020, WORLDS MOST RECOGNIZ
   [Anonymous], 2020, REV BEST CROWDSOURCE
   [Anonymous], 2011, PART 1-Proceedings of the 2011 annual conference extended abstracts on Human factors in computing systems, CHI EA '11, DOI DOI 10.1145/1979602.1979606
   [Anonymous], 2007, PROMISE 07, DOI DOI 10.1109/PROMISE.2007.10
   Begel A, 2013, IEEE SOFTWARE, V30, P52, DOI 10.1109/MS.2013.13
   Breiman L, 2001, MACH LEARN, V45, P5, DOI 10.1023/A:1010933404324
   Callison-Burch Chris., 2014, Proceedings of the AAAI conference on human computation and crowdsourcing, V2, P8
   Cao ZR, 2018, AUTOMAT SOFTW ENG, V25, P501, DOI 10.1007/s10515-018-0231-z
   Chen D, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P456, DOI 10.1145/3236024.3236050
   Chen N, 2012, IEEE INT CONF AUTOM, P140, DOI 10.1145/2351676.2351697
   Chun-Wei Chiang, 2018, Proceedings of the ACM on Human-Computer Interaction, V2, DOI 10.1145/3274306
   Cui Q., 2017, P SEKE, P218
   Cui Q, 2017, P INT COMP SOFTW APP, P75, DOI 10.1109/COMPSAC.2017.265
   DILLON M, 1983, INFORM PROCESS MANAG, V19, P402, DOI 10.1016/0306-4573(83)90062-6
   Feng Y, 2016, IEEE INT CONF AUTOM, P202, DOI 10.1145/2970276.2970367
   Feng Y, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P225, DOI 10.1145/2786805.2786862
   Fu W, 2016, INFORM SOFTWARE TECH, V76, P135, DOI 10.1016/j.infsof.2016.04.017
   Fujiwara Y, 2019, PROCEEDINGS OF THE 28TH ACM INTERNATIONAL CONFERENCE ON INFORMATION & KNOWLEDGE MANAGEMENT (CIKM '19), P2205, DOI 10.1145/3357384.3358092
   Gao RZ, 2019, EMPIR SOFTW ENG, V24, P537, DOI 10.1007/s10664-018-9618-5
   Georgiou T, 2017, CSCW'17: PROCEEDINGS OF THE 2017 ACM CONFERENCE ON COMPUTER SUPPORTED COOPERATIVE WORK AND SOCIAL COMPUTING, P1432, DOI 10.1145/2998181.2998259
   Gómez M, 2016, 2016 IEEE/ACM INTERNATIONAL CONFERENCE ON MOBILE SOFTWARE ENGINEERING AND SYSTEMS (MOBILESOFT 2016), P88, DOI [10.1109/MobileSoft.2016.033, 10.1145/2897073.2897088]
   Gomide VHM., 2014, INT J COMPUTER SCI I, V5, P575
   Gray ML, 2016, ACM CONFERENCE ON COMPUTER-SUPPORTED COOPERATIVE WORK AND SOCIAL COMPUTING (CSCW 2016), P134, DOI 10.1145/2818048.2819942
   Haghiri S, 2018, PR MACH LEARN RES, V80
   Hanrahan BV, 2015, CHI 2015: PROCEEDINGS OF THE 33RD ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, P1613, DOI 10.1145/2702123.2702279
   Hao R, 2019, PROC INT CONF SOFTW, P900, DOI 10.1109/ICSE.2019.00096
   Huang Q, 2018, EMPIR SOFTW ENG, V23, P418, DOI 10.1007/s10664-017-9522-4
   Irani LC, 2016, 34TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, CHI 2016, P4573, DOI 10.1145/2858036.2858592
   Irani Lilly C, 2013, P SIGCHI C HUM FACT, P611, DOI DOI 10.1145/2470654.2470742
   Jiang H, 2018, ACM T INTERNET TECHN, V18, DOI 10.1145/3106164
   Karim M. R., 2018, P WMNC 2017 10 WIR M, P1
   Lakhani K R, 2010, Harvard Business School General Management Unit Case, P610
   Lee U., 2013, P ASS COMPUTING MACH, DOI DOI 10.1145/2470654.2470730
   Mao K, 2017, J SYST SOFTWARE, V126, P57, DOI 10.1016/j.jss.2016.09.015
   Mao K, 2015, 9TH IEEE INTERNATIONAL SYMPOSIUM ON SERVICE-ORIENTED SYSTEM ENGINEERING (SOSE 2015), P347, DOI 10.1109/SOSE.2015.46
   Mao K, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P1205, DOI 10.1109/ICSE.2013.6606679
   Martin David, 2014, P 17 ACM C COMP SUPP, P224, DOI [10.1145/2531602.2531663, DOI 10.1145/2531602.2531663]
   McInnis B, 2016, 34TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, CHI 2016, P2271, DOI 10.1145/2858036.2858539
   Musson R, 2013, IEEE SOFTWARE, V30, P38, DOI 10.1109/MS.2013.67
   Niu HR, 2017, EMPIR SOFTW ENG, V22, P259, DOI 10.1007/s10664-015-9421-5
   OBERLIN TL, 1973, IEEE T SYST MAN CYB, VSMC3, P359, DOI 10.1109/TSMC.1973.4309246
   Saito S, 2019, WEB CONFERENCE 2019: PROCEEDINGS OF THE WORLD WIDE WEB CONFERENCE (WWW 2019), P3187, DOI 10.1145/3308558.3313716
   Saremi RL, 2017, 2017 IEEE/ACM 39TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2017), P103, DOI 10.1109/ICSE-SEIP.2017.2
   Stol KJ, 2019, IEEE T SOFTWARE ENG, V45, P237, DOI 10.1109/TSE.2017.2774297
   Storn R, 1997, J GLOBAL OPTIM, V11, P341, DOI 10.1023/A:1008202821328
   Tamrawi A, 2011, P 19 ACM SIGSOFT S 1, P365, DOI [DOI 10.1145/2025113.2025163, 10.31274/etd-180810-1814, DOI 10.31274/ETD-180810-1814]
   Tan M, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P99, DOI 10.1109/ICSE.2015.139
   Tantithamthavorn C, 2017, IEEE T SOFTWARE ENG, V43, P1, DOI 10.1109/TSE.2016.2584050
   Wang JJ, 2021, IEEE T SOFTWARE ENG, V47, P1259, DOI 10.1109/TSE.2019.2918520
   Wang JJ, 2020, PROC INT CONF SOFTW, P1535, DOI 10.1145/3377811.3380380
   Wang JJ, 2016, ESEM'16: PROCEEDINGS OF THE 10TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, DOI 10.1145/2961111.2962584
   Wang J, 2019, PROC INT CONF SOFTW, P912, DOI 10.1109/ICSE.2019.00097
   Wang JJ, 2019, INFORM SOFTWARE TECH, V110, P139, DOI 10.1016/j.infsof.2019.03.003
   Wang JJ, 2017, 2017 IEEE/ACM 39TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2017), P83, DOI 10.1109/ICSE-SEIP.2017.8
   Wang JJ, 2016, IEEE INT CONF AUTOM, P190, DOI 10.1145/2970276.2970300
   Wei HH, 2016, PROCEEDINGS OF THE 19TH ACM CONFERENCE ON COMPUTER SUPPORTED COOPERATIVE WORK AND SOCIAL COMPUTING COMPANION, P110, DOI 10.1145/2818052.2874338
   Wu QA, 2010, INFORM RETRIEVAL, V13, P254, DOI 10.1007/s10791-009-9112-1
   Xie M, 2017, PROC INT SYMP SOFTW, P316, DOI 10.1109/ISSRE.2017.25
   Xu JW, 2015, PROCEEDINGS OF THE TWENTY-FOURTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE (IJCAI), P3981
   Yang Y, 2016, ESEM'16: PROCEEDINGS OF THE 10TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, DOI 10.1145/2961111.2962594
   Zhang Xiao-Fang, 2018, Journal of Software, V29, P69, DOI 10.13328/j.cnki.jos.005377
   Zhang ZY, 2020, EMPIR SOFTW ENG, V25, P859, DOI 10.1007/s10664-019-09755-0
   Zhao GL, 2019, EMPIR SOFTW ENG, V24, P2140, DOI 10.1007/s10664-019-09696-8
   Zhou MH, 2012, PROC INT CONF SOFTW, P518, DOI 10.1109/ICSE.2012.6227164
   Zogaj S., 2014, J BUSINESS EC, V84, P375
NR 71
TC 8
Z9 8
U1 3
U2 17
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD AUG 1
PY 2022
VL 48
IS 8
BP 3131
EP 3144
DI 10.1109/TSE.2021.3081171
PG 14
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 4D1BG
UT WOS:000846878500025
DA 2024-07-18
ER

PT J
AU Bi, TT
   Xia, X
   Lo, D
   Grundy, J
   Zimmermann, T
AF Bi, Tingting
   Xia, Xin
   Lo, David
   Grundy, John
   Zimmermann, Thomas
TI An Empirical Study of Release Note Production and Usage in Practice
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Software; Production; Software development management; Stakeholders;
   Feature extraction; Testing; Task analysis; Release note; software
   documentation; empirical study
ID SOFTWARE; MANAGEMENT
AB The release note is one of the most important software artifacts that serves as a communication bridge between development teams and users. Release notes contain a set of crucial information, such as descriptions of enhancements, improvements, potential issues, development, evolution, testing, and maintenance of projects throughout the whole development life cycle. A comprehensive understanding of the characteristics of release notes and how to best document one for different targeted users would be highly beneficial. However, the release note is often neglected and has not to date been systematically investigated by researchers. In this paper, we conducted a descriptive case study to investigate release note production and usage in practice. We first performed a large scale empirical study of 32,425 release notes in 1,000 GitHub projects to understand the characteristics of real-world release notes, and eight categories of information identified that are normally documented in release notes. We then conducted interviews with 15 professionals and an online survey with 314 respondents to investigate their opinions on release notes in practice. Our results show that both release note producers and users consider that well-formed release notes impact software activities (e.g., software evolution) positively. We summarised 27 statements about release notes grouped into eight topics based on participants' opinions. Our study uncovers significant discrepancies between release note producers and users in perceiving release notes. Based on these findings, we provide a set of release note production and usage guidelines for practitioners and highlight future research directions.
C1 [Bi, Tingting; Xia, Xin; Grundy, John] Monash Univ, Fac Informat Technol, Melbourne, Vic 3800, Australia.
   [Lo, David] Singapore Management Univ, Sch Informat Syst, Singapore 188065, Singapore.
   [Zimmermann, Thomas] Microsoft Res, Redmond, WA 98052 USA.
C3 Monash University; Singapore Management University; Microsoft
RP Xia, X (corresponding author), Monash Univ, Fac Informat Technol, Melbourne, Vic 3800, Australia.
EM tingting.bi@monash.edu; xin.xia@monash.edu; davidlo@smu.edu.sg;
   john.grundy@monash.edu; tzimmer@microsoft.com
RI Grundy, John/I-6681-2012; Bi, Tingting/ABC-7609-2020; Lo,
   David/A-2493-2012
OI Lo, David/0000-0002-4367-7201
FU Australian Research Council's Discovery Early Career Researcher Award
   (DECRA) [DE200100021]; ARC [FL190100035, DP200100020];
   Singapore'sMinistry of Education [MOE2019-T2-1-193]
FX The authors would like to thank all the interviewees and participants of
   this study, without them, this work will never be accomplished. In
   addition, the authors would like to thank our anonymous reviewers for
   their constructive feedback and suggestions that greatly improved our
   paper. This work was partially supported by the Australian Research
   Council's Discovery Early Career Researcher Award (DECRA) funding scheme
   (DE200100021), ARC Laureate Fellowship funding scheme (FL190100035), ARC
   Discovery grant (DP200100020), and Singapore'sMinistry of Education
   (MOE2019-T2-1-193).
CR Abebe SL, 2016, EMPIR SOFTW ENG, V21, P1107, DOI 10.1007/s10664-015-9377-5
   Adams B, 2015, IEEE SOFTWARE, V32, P41
   Amandeep, 2004, LECT NOTES COMPUT SC, V3009, P248
   [Anonymous], 2007, GUIDE ADV EMPIRICAL
   [Anonymous], 2010, Product Release planning: methods, Tools and Applications
   [Anonymous], 2008, GUIDE ADV EMPIRICAL
   [Anonymous], 2011, P 2011 INT C SOFTWAR, DOI DOI 10.1145/1987875.1987911
   Aregui A, 2008, INT J APPROX REASON, V49, P575, DOI 10.1016/j.ijar.2008.06.002
   Arias-Arévalo P, 2018, ENVIRON VALUE, V27, P29, DOI 10.3197/096327118X15144698637513
   Basili V. R., 1994, Encyclopedia of Software Engineering, V1, P528
   Bennett K. H., 2000, P C FUT SOFTW ENG, P73
   Bhattacharya P, 2012, PROC INT CONF SOFTW, P419, DOI 10.1109/ICSE.2012.6227173
   Bi T., 2020, WHAT MAKE GOOD RELEA
   Borges H, 2016, PROC IEEE INT CONF S, P334, DOI 10.1109/ICSME.2016.31
   Carlshamre P., 2002, Requirements Engineering, V7, P139, DOI 10.1007/s007660200010
   Codoban M, 2015, PROC IEEE INT CONF S, P1, DOI 10.1109/ICSM.2015.7332446
   de Boer RC, 2009, 2009 ICSE WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING, P40, DOI 10.1109/CHASE.2009.5071409
   de Graaf KA, 2014, COMPUT IND, V65, P1053, DOI 10.1016/j.compind.2014.04.006
   Fischer M, 2003, PROC IEEE INT CONF S, P23, DOI 10.1109/ICSM.2003.1235403
   Huijgens H, 2017, INFORM SOFTWARE TECH, V89, P19, DOI 10.1016/j.infsof.2017.04.008
   Karvonen T, 2017, INFORM SOFTWARE TECH, V86, P87, DOI 10.1016/j.infsof.2017.01.009
   Khomh F, 2015, EMPIR SOFTW ENG, V20, P336, DOI 10.1007/s10664-014-9308-x
   Kitchenham BA, 2008, Guide to advanced empirical software engineering, P63, DOI [DOI 10.1007/978-1-84800-044-5_3, 10.1007/ 978-1-84800-044-5_3]
   Klepper S, 2016, INTERNATIONAL WORKSHOP ON CONTINUOUS SOFTWARE EVOLUTION AND DELIVERY, CSED 2016, P19, DOI [10.1109/CSED.2016.012, 10.1145/2896941.2896953]
   Lanubile F, 2010, IEEE SOFTWARE, V27, P52, DOI 10.1109/MS.2010.39
   Liao ZF, 2017, IEEE GLOB COMM CONF
   Mäntylä MV, 2013, PROC IEEE INT CONF S, P20, DOI 10.1109/ICSM.2013.13
   Mergel I, 2015, GOV INFORM Q, V32, P464, DOI 10.1016/j.giq.2015.09.004
   Michlmayr M, 2007, INT FED INFO PROC, V234, P295
   Moreno L, 2017, IEEE T SOFTWARE ENG, V43, P106, DOI 10.1109/TSE.2016.2591536
   Murphy GC, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: NEW IDEAS AND EMERGING RESULTS (ICSE-NIER 2019), P73, DOI 10.1109/ICSE-NIER.2019.00027
   Phillips Shaun, 2012, P ACM 2012 C COMPUTE, P1371, DOI DOI 10.1145/2145204.2145408
   Priestley M., 2001, P 19 ANN INT C COMPU, P132, DOI [10.1145/501516.501543, DOI 10.1145/501516.501543]
   Robles-Martinez G., 2003, PROC 3 WORKSHOP OPEN, P111
   Ruhe G, 2005, IEEE SOFTWARE, V22, P47, DOI 10.1109/MS.2005.164
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Sue V.M., 2016, Conducting online surveys
   van de Weerd I, 2006, RE'06: 14TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, PROCEEDINGS, P319
   van der Hoek A, 2003, SOFTWARE PRACT EXPER, V33, P77, DOI 10.1002/spe.496
   Vasilescu B, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P805, DOI 10.1145/2786805.2786850
   Whitehead J, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P214, DOI 10.1109/FOSE.2007.4
   Wohlin C., 2012, Experimentation in Software Engineering
   Wright HK, 2012, PROC INT CONF SOFTW, P1281, DOI 10.1109/ICSE.2012.6227099
   Yu Liguo., 2009, CLEI Electron Journal, V12, P1
NR 44
TC 0
Z9 0
U1 0
U2 1
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUN 1
PY 2022
VL 48
IS 6
BP 1834
EP 1852
DI 10.1109/TSE.2020.3038881
PG 19
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 2D5IM
UT WOS:000811580600001
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Franch, X
   Mendez, D
   Vogelsang, A
   Heldal, R
   Knauss, E
   Oriol, M
   Travassos, GH
   Carver, JC
   Zimmermann, T
AF Franch, Xavier
   Mendez, Daniel
   Vogelsang, Andreas
   Heldal, Rogardt
   Knauss, Eric
   Oriol, Marc
   Travassos, Guilherme H.
   Carver, Jeffrey C.
   Zimmermann, Thomas
TI How do Practitioners Perceive the Relevance of Requirements Engineering
   Research?
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Industries; Protocols; Requirements engineering; Buildings; Tools;
   Testing; Task analysis; Requirements engineering; survey; impact of
   research; practitioners' perception
AB Context: The relevance of Requirements Engineering (RE) research to practitioners is vital for a long-term dissemination of research results to everyday practice. Some authors have speculated about a mismatch between research and practice in the RE discipline. However, there is not much evidence to support or refute this perception. Objective: This article presents the results of a study aimed at gathering evidence from practitioners about their perception of the relevance of RE research and at understanding the factors that influence that perception. Method: We conducted a questionnaire-based survey of industry practitioners with expertise in RE. The participants rated the perceived relevance of 435 scientific papers presented at five top RE-related conferences. Results: The 153 participants provided a total of 2,164 ratings. The practitioners rated RE research as essential or worthwhile in a majority of cases. However, the percentage of non-positive ratings is still higher than we would like. Among the factors that affect the perception of relevance are the research's links to industry, the research method used, and respondents' roles. The reasons for positive perceptions were primarily related to the relevance of the problem and the soundness of the solution, while the causes for negative perceptions were more varied. The respondents also provided suggestions for future research, including topics researchers have studied for decades, like elicitation or requirement quality criteria. Conclusions: The study is valuable for both researchers and practitioners. Researchers can use the reasons respondents gave for positive and negative perceptions and the suggested research topics to help make their research more appealing to practitioners and thus more prone to industry adoption. Practitioners can benefit from the overall view of contemporary RE research by learning about research topics that they may not be familiar with, and compare their perception with those of their colleagues to self-assess their positioning towards more academic research.
C1 [Franch, Xavier; Oriol, Marc] Univ Politecn Cataluna, Barcelona 08034, Spain.
   [Mendez, Daniel] Blekinge Inst Technol, S-37141 Karlskrona, Sweden.
   [Mendez, Daniel] Fortiss GmbH, D-80805 Munich, Germany.
   [Vogelsang, Andreas] Univ Cologne, D-50923 Cologne, Germany.
   [Heldal, Rogardt] Western Norway Univ Appl Sci, N-5020 Bergen, Norway.
   [Knauss, Eric] Univ Gothenburg, S-40530 Gothenburg, Sweden.
   [Travassos, Guilherme H.] Univ Fed Rio de Janeiro, BR-21941901 Rio De Janeiro, Brazil.
   [Carver, Jeffrey C.] Univ Alabama, Tuscaloosa, AL 35487 USA.
   [Zimmermann, Thomas] Microsoft Res, Redmond, WA 98052 USA.
C3 Universitat Politecnica de Catalunya; Blekinge Institute Technology;
   fortiss; University of Cologne; Western Norway University of Applied
   Sciences; University of Gothenburg; Universidade Federal do Rio de
   Janeiro; University of Alabama System; University of Alabama Tuscaloosa;
   Microsoft
RP Franch, X (corresponding author), Univ Politecn Cataluna, Barcelona 08034, Spain.
EM franch@essi.upc.edu; Daniel.Mendez@bth.se; vogelsang@cs.uni-koeln.de;
   rohe@hvl.no; eric.knauss@cse.gu.se; moriol@essi.upc.edu;
   ght@cos.ufir.br; carver@cs.ua.edu; tzimmer@microsoft.com
RI Franch, Xavier/KAM-2369-2024; Mendez, Daniel/ABA-4579-2021; Oriol,
   Marc/ABG-2260-2020; Zimmermann, Thomas/C-4377-2019; Travassos, Guilherme
   Horta/G-2842-2012
OI Franch, Xavier/0000-0001-9733-8830; Mendez, Daniel/0000-0003-0619-6027;
   Oriol, Marc/0000-0003-1928-7024; Zimmermann, Thomas/0000-0003-4905-1469;
   Carver, Jeffrey/0000-0002-7824-9151; Travassos, Guilherme
   Horta/0000-0002-4258-0424; Knauss, Eric/0000-0002-6631-872X; Vogelsang,
   Andreas/0000-0003-1041-0815
FU Spanish project GENESIS [TIN201679269-R]; KKS foundation through the
   S.E.R.T. Research Profile project at Blekinge Institute of Technology;
   CNPq [304234/2018-4]
FX The authors would like to thank all participating survey respondents, as
   well as C. Coupette for her support during the elaboration of initial
   analysis scripts and first interpretations in earlier versions, and O.
   Dieste for his participation in the elaboration of paper abstracts. X.
   Franch's work was supported in part by the Spanish project GENESIS
   TIN201679269-R. D. Mendez' work was supported in part by the KKS
   foundation through the S.E.R.T. Research Profile project at Blekinge
   Institute of Technology. G.H. Travassos' work was supported in part by
   CNPq under Grant no. 304234/2018-4.
CR Alspaugh TA, 2013, S VIS LANG HUM CEN C, P165, DOI 10.1109/RE.2013.6636716
   Ameller D, 2021, IEEE T SOFTWARE ENG, V47, P818, DOI 10.1109/TSE.2019.2904476
   [Anonymous], 2011, 29148 ISOIECIEEE
   Baldridge DC, 2004, STRATEGIC MANAGE J, V25, P1063, DOI 10.1002/smj.406
   Beecham S, 2014, COMPUTER, V47, P80, DOI 10.1109/MC.2014.92
   Begel A, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P12, DOI 10.1145/2568225.2568233
   Brand A, 2015, LEARN PUBL, V28, P151, DOI 10.1087/20150211
   Carver JC, 2016, ESEM'16: PROCEEDINGS OF THE 10TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, DOI 10.1145/2961111.2962597
   Fernández DM, 2017, EMPIR SOFTW ENG, V22, P2298, DOI 10.1007/s10664-016-9451-7
   Franch X, 2004, LECT NOTES COMPUT SC, V2959, P11
   Franch X, 2020, mendezfe/repract2018: Release 2, DOI 10.5281/zenodo.4022177
   Franch X, 2017, INT REQUIR ENG CONF, P382, DOI 10.1109/RE.2017.17
   Garousi V., 2017, P 21 INT C EV ASS SO, P65
   Garousi V, 2020, EMPIR SOFTW ENG, V25, P1687, DOI 10.1007/s10664-020-09803-0
   Ghaisas S, 2014, IEEE SOFTWARE, V31, P88, DOI 10.1109/MS.2014.10
   GLASS RL, 1994, IEEE SOFTWARE, V11, P42, DOI 10.1109/52.329400
   Hautojrvi P., 1979, Experimentation in software engineering, V1ST, DOI [10.1007/978-3-642-81316-0, 10.1007/978-3-642-29044-2., DOI 10.1007/978-3-642-29044-2]
   Hummel M, 2013, BUS INFORM SYST ENG+, V5, P343, DOI 10.1007/s12599-013-0282-4
   Kaindia H., 2002, Requirements Engineering, V7, P113, DOI 10.1007/s007660200008
   Kaindl H, 2000, LECT NOTES COMPUT SC, V1789, P7
   Kano N., 1984, Journal of The Japanese Society for Quality Control, V31, P147, DOI [DOI 10.20684/QUALITY.14.2_147, 10.20684/quality.14.2_147]
   Kitchenham BA, 2008, Guide to advanced empirical software engineering, P63, DOI [DOI 10.1007/978-1-84800-044-5_3, 10.1007/ 978-1-84800-044-5_3]
   Lo D, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P415, DOI 10.1145/2786805.2786809
   Mahaux M, 2013, S VIS LANG HUM CEN C, P353, DOI 10.1109/RE.2013.6636750
   Malavolta I, 2013, IEEE T SOFTWARE ENG, V39, P869, DOI 10.1109/TSE.2012.74
   Mayring P., 2000, ADVNCS MTHMTCS EDUC, V1, P20, DOI [10.17169/fqs-1.2.1089, DOI 10.1007/978-94-017-9181-613]
   POTTS C, 1993, IEEE SOFTWARE, V10, P19, DOI 10.1109/52.232392
   RYAN WG, 1977, BUS HORIZONS, V20, P23, DOI 10.1016/0007-6813(77)90067-2
   Tastle WJ, 2007, INT J APPROX REASON, V45, P531, DOI 10.1016/j.ijar.2006.06.024
   Vogelsang A, 2019, SOFTWARE TECHNIK TRE, V39, P9
   Wohlrab R., 2019, J SOFTW EVOL PROCESS, V31, P31
NR 31
TC 4
Z9 4
U1 0
U2 5
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUN 1
PY 2022
VL 48
IS 6
BP 1947
EP 1964
DI 10.1109/TSE.2020.3042747
PG 18
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 2D5IM
UT WOS:000811580600007
OA Green Submitted, Green Published
DA 2024-07-18
ER

PT J
AU Sarhan, QI
   Ahmed, BS
   Bures, M
   Zamli, KZ
AF Sarhan, Qusay, I
   Ahmed, Bestoun S.
   Bures, Miroslav
   Zamli, Kamal Z.
TI Software Module Clustering: An In-Depth Literature Analysis
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Software; Search problems; Data mining; Software engineering; Software
   algorithms; Clustering algorithms; Systematics; Systematic literature
   study; software module clustering; clustering applications; clustering
   algorithms; clustering evaluation; clustering challenges
ID LEXICAL INFORMATION; ALGORITHM; OPTIMIZATION; KNOWLEDGE; EFFICIENT;
   SYSTEMS
AB Software module clustering is an unsupervised learning method used to cluster software entities (e.g., classes, modules, or files) with similar features. The obtained clusters may be used to study, analyze, and understand the software entities' structure and behavior. Implementing software module clustering with optimal results is challenging. Accordingly, researchers have addressed many aspects of software module clustering in the past decade. Thus, it is essential to present the research evidence that has been published in this area. In this study, 143 research papers from well-known literature databases that examined software module clustering were reviewed to extract useful data. The obtained data were then used to answer several research questions regarding state-of-the-art clustering approaches, applications of clustering in software engineering, clustering processes, clustering algorithms, and evaluation methods. Several research gaps and challenges in software module clustering are discussed in this paper to provide a useful reference for researchers in this field.
C1 [Sarhan, Qusay, I] Univ Duhok, Dept Comp Sci, Duhok 07006, Kurdistan Regio, Iraq.
   [Ahmed, Bestoun S.] Karlstad Univ, Dept Math & Comp Sci, S-65188 Karlstad, Sweden.
   [Ahmed, Bestoun S.; Bures, Miroslav] Czech Tech Univ, Fac Elect Engn, Dept Comp Sci, Karlovo Nam 35, Prague 13121 2, Czech Republic.
   [Zamli, Kamal Z.] Univ Malaysia Pahang, Coll Comp & Appl Sci, Fac Comp, Pekan 26600, Malaysia.
C3 University of Duhok; Karlstad University; Czech Technical University
   Prague; Universiti Malaysia Pahang Al-Sultan Abdullah (UMPSA)
RP Ahmed, BS (corresponding author), Karlstad Univ, Dept Math & Comp Sci, S-65188 Karlstad, Sweden.; Ahmed, BS (corresponding author), Czech Tech Univ, Fac Elect Engn, Dept Comp Sci, Karlovo Nam 35, Prague 13121 2, Czech Republic.
EM qusay.sarhan@uod.ac; bestoun@kau.se; buresm3@fel.cvut.cz;
   kamalz@ump.edu.my
RI Bures, Miroslav/AAQ-3424-2020; Sarhan, Qusay Idrees/AAU-8331-2020;
   Zamli, Kamal Z./F-6437-2010; Ahmed, Bestoun S./B-4429-2010
OI Bures, Miroslav/0000-0002-2994-7826; Zamli, Kamal
   Z./0000-0003-4626-0513; Ahmed, Bestoun S./0000-0001-9051-7609
FU Knowledge Foundation of Sweden (KKS) through the Synergy Project AIDA -A
   Holistic AI-driven Networking and Processing Framework for Industrial
   IoT [Rek:20200067]
FX This work has been partially funded by the Knowledge Foundation of
   Sweden (KKS) through the Synergy Project AIDA -A Holistic AI-driven
   Networking and Processing Framework for Industrial IoT (Rek:20200067).
CR Abd El-Raouf A, 2009, REC ADV COMPUT ENG, P412
   Adnan M. N., 2011, 2011 5th Malaysian Conference in Software Engineering (MySEC), P445, DOI 10.1109/MySEC.2011.6140714
   Adnan Rahmat, 2008, 2008 23rd IEEE/ACM International Conference on Automated Software Engineering, P383, DOI 10.1109/ASE.2008.54
   Adolfsson A, 2019, PATTERN RECOGN, V88, P13, DOI 10.1016/j.patcog.2018.10.026
   Ahmed BS, 2017, IEEE ACCESS, V5, P25706, DOI 10.1109/ACCESS.2017.2771562
   Akbari M, 2019, 2019 IEEE 5TH CONFERENCE ON KNOWLEDGE BASED ENGINEERING AND INNOVATION (KBEI 2019), P565, DOI 10.1109/KBEI.2019.8734939
   Alfa A. S., 2014, WIR TEL S APR 2014 9, P1
   Ali A, 2015, PROCEEDINGS OF THE 2015 INTERNATIONAL CONFERENCE ON APPLIED AND THEORETICAL COMPUTING AND COMMUNICATION TECHNOLOGY (ICATCCT), P238, DOI 10.1109/ICATCCT.2015.7456889
   Alkhalid A, 2011, IET SOFTW, V5, P274, DOI 10.1049/iet-sen.2010.0070
   Alkhalid A, 2013, P INT COMP SOFTW APP, P806, DOI 10.1109/COMPSAC.2013.132
   Alkhalid A, 2010, ADV ENG SOFTW, V41, P1160, DOI 10.1016/j.advengsoft.2010.08.002
   Amarjeet, 2018, SOFT COMPUT, V22, P6341, DOI 10.1007/s00500-017-2687-3
   Amarjeet, 2018, COMPUT LANG SYST STR, V51, P1, DOI 10.1016/j.cl.2017.08.001
   Amarjeet, 2017, J KING SAUD UNIV-COM, V29, P349, DOI 10.1016/j.jksuci.2015.09.004
   Amarjeet, 2014, INT CONF CONTEMP, P206, DOI 10.1109/IC3.2014.6897174
   [Anonymous], TIOBE PROGR COMM IND
   [Anonymous], 2013, P 26 IEEE CAN C EL C
   [Anonymous], 2017, PROC SOUTHEASTCON
   Antonellis P, 2009, ELECTRON NOTES THEOR, V233, P43, DOI 10.1016/j.entcs.2009.02.060
   Antonellis P, 2008, PROC ARTIF INTELL TE, P1
   Arshad S., 2016, PROC 9 HELLENIC C AR, P1
   Arunachalam N, 2017, INT CONF COMPUT POW, P247, DOI 10.1109/ICCPEIC.2017.8290371
   Ashiebi A., 2016, P IEEE INT C POW SYS, P1
   Bailey M, 2012, P 50 ANN SE REGIONAL, P106, DOI [10.1145/2184512.2184538, DOI 10.1145/2184512.2184538]
   Barros MD, 2012, PROCEEDINGS OF THE FOURTEENTH INTERNATIONAL CONFERENCE ON GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P1205, DOI 10.1145/2330163.2330330
   Beck F., 2010, Proceedings 17th Working Conference on Reverse Engineering (WCRE 2010), P99, DOI 10.1109/WCRE.2010.19
   Benkoczi R, 2018, IEEE WORK CONF MIN S, P331, DOI 10.1145/3196398.3196409
   Bishnoi Monika, 2016, 2016 International Conference on Computational Techniques in Information and Communication Technologies (ICCTICT). Proceedings, P659, DOI 10.1109/ICCTICT.2016.7514660
   Bittencourt RA, 2009, EUR CON SFTWR MTNCE, P251, DOI 10.1109/CSMR.2009.28
   Boussaidi G. E., 2012, 2012 19th Working Conference on Reverse Engineering (WCRE), P345, DOI 10.1109/WCRE.2012.44
   Brereton P, 2007, J SYST SOFTWARE, V80, P571, DOI 10.1016/j.jss.2006.07.009
   Cassell K, 2009, IEEE INT CONF AUTOM, P595, DOI 10.1109/ASE.2009.21
   Cho C., 2019, IEEE ACCESS, V7, p72 872
   Chong CY, 2015, ENASE 2015 - PROCEEDINGS OF THE 10TH INTERNATIONAL CONFERENCE ON EVALUATION OF NOVEL APPROACHES TO SOFTWARE ENGINEERING, P177
   Chong CY, 2013, INFORM SOFTWARE TECH, V55, P1994, DOI 10.1016/j.infsof.2013.07.002
   Corazza A, 2016, EMPIR SOFTW ENG, V21, P72, DOI 10.1007/s10664-014-9347-3
   Corazza A, 2011, EUR CON SFTWR MTNCE, P35, DOI 10.1109/CSMR.2011.8
   Corazza A, 2010, EUR CON SFTWR MTNCE, P88, DOI 10.1109/CSMR.2010.36
   Cui JF, 2011, INFORM SOFTWARE TECH, V53, P601, DOI 10.1016/j.infsof.2011.01.006
   Czibula I., 2010, PROC IEEE INT C AUTO, P1
   Czibula IG, 2009, PROCEEDINGS OF THE 10TH INTERNATIONAL SYMPOSIUM ON SYMBOLIC AND NUMERIC ALGORITHMS FOR SCIENTIFIC COMPUTING, P253, DOI 10.1109/SYNASC.2008.17
   Deiters C, 2013, INT WORK REAL ARTIF, P14, DOI 10.1109/RAISE.2013.6615199
   Dietrich J, 2008, SOFTVIS 2008: PROCEEDINGS OF THE 4TH ACM SYMPOSIUM ON SOFTWARE VISUALIZATION, P91
   Erdemir U, 2011, ASIA PAC SOFWR ENG, P315, DOI 10.1109/APSC.2011.33
   Faunes Martin., 2011, Proceed90 ings of the 2011 Conference of the Center for Advanced Studies on Collaborative Research, P188
   Fokaefs M, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1037, DOI 10.1145/1985793.1985989
   Fokaefs M, 2009, PROC IEEE INT CONF S, P93, DOI 10.1109/ICSM.2009.5306332
   Glorie M, 2009, J SOFTW MAINT EVOL-R, V21, P113, DOI 10.1002/smr.401
   Google Trends, 2020, Google Trends
   Hall M, 2018, IEEE T SOFTWARE ENG, V44, P613, DOI 10.1109/TSE.2017.2786222
   Hamad S., 2008, P IEEE S COMP COMM M, P169
   Han ZX, 2009, INT C PROGRAM COMPRE, P295, DOI 10.1109/ICPC.2009.5090065
   Harman M, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P342, DOI 10.1109/FOSE.2007.29
   Harman M, 2012, ACM COMPUT SURV, V45, DOI 10.1145/2379776.2379787
   Hasheminejad SMH, 2015, INFORM SOFTWARE TECH, V57, P329, DOI 10.1016/j.infsof.2014.05.013
   Hatami E, 2020, J SUPERCOMPUT, V76, P6786, DOI 10.1007/s11227-019-03112-0
   Huang JH, 2017, SOFT COMPUT, V21, P3415, DOI 10.1007/s00500-015-2018-5
   Huang JH, 2016, INFORM SCIENCES, V342, P96, DOI 10.1016/j.ins.2016.01.030
   Hussain A., 2013, P 6 INDIA SOFTWARE E, P45, DOI DOI 10.1145/2442754.2442761
   Ieva C, 2018, IEEE T RELIAB, V67, P758, DOI 10.1109/TR.2018.2828135
   Islam R, 2014, 2014 17TH INTERNATIONAL CONFERENCE ON COMPUTER AND INFORMATION TECHNOLOGY (ICCIT), P81, DOI 10.1109/ICCITechn.2014.7073117
   Jeet K., 2015, ACM SIGSOFT SOFTW EN, V40, P1, DOI DOI 10.1145/2693208.2693230
   Jensen D., 2017, PROC S APPL COMPUT, P1239
   Jin WX, 2018, 2018 IEEE INTERNATIONAL CONFERENCE ON WEB SERVICES (IEEE ICWS 2018), P211, DOI 10.1109/ICWS.2018.00034
   Joshi B, 2015, LECT NOTES COMPUT SC, V9490, P520, DOI 10.1007/978-3-319-26535-3_59
   Karande V, 2018, PROCEEDINGS OF THE 2018 ACM ASIA CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY (ASIACCS'18), P393, DOI 10.1145/3196494.3196504
   Kargar M, 2019, COMPUT ELECTR ENG, V80, DOI 10.1016/j.compeleceng.2019.106500
   Kargar M, 2019, IRAN CONF ELECTR ENG, P1879, DOI [10.1109/iraniancee.2019.8786745, 10.1109/IranianCEE.2019.8786745]
   Kargar M, 2017, 2017 18TH CSI INTERNATIONAL SYMPOSIUM ON COMPUTER SCIENCE AND SOFTWARE ENGINEERING CONFERENCE (CSSE), P55, DOI 10.1109/CSICSSE.2017.8320117
   Kaur J., 2016, 2016 IEEE Power and Energy Society General Meeting (PESGM), P1
   Kebir S., 2012, P ACM 5 INT C COMP S, P1, DOI [10.1145/2347583.2347584, DOI 10.1145/2347583.2347584]
   Khan B, 2008, PROCEEDINGS OF THE 2008 ADVANCED SOFTWARE ENGINEERING & ITS APPLICATIONS, P27, DOI 10.1109/ASEA.2008.17
   Khan Q, 2016, I C SCI TECH AUTO CO, P266, DOI 10.1109/STA.2016.7952038
   Kobayashi K, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P462, DOI 10.1109/ICSM.2012.6405308
   Köhler V, 2013, COMPUT OPTIM APPL, V55, P113, DOI 10.1007/s10589-012-9512-9
   Kreutzer P, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P61, DOI [10.1145/2901739.2901749, 10.1109/MSR.2016.016]
   Kumari AC, 2016, J SYST SOFTWARE, V117, P384, DOI 10.1016/j.jss.2016.04.007
   Kumari AC, 2013, IEEE INT ADV COMPUT, P813
   Lee J, 2017, IEEE INT C ENG COMP, P110, DOI 10.1109/ICECCS.2017.23
   Li XC, 2017, 2017 24TH ASIA-PACIFIC SOFTWARE ENGINEERING CONFERENCE WORKSHOPS (APSECW), P114, DOI 10.1109/APSECW.2017.15
   Liu D, 2015, P INT COMP SOFTW APP, P460, DOI 10.1109/COMPSAC.2015.256
   Liu Yong, 2008, 2008 International Conference on Computer Science and Software Engineering (CSSE 2008), P85, DOI 10.1109/CSSE.2008.1015
   Lövei L, 2008, ERLANG '08: PROCEEDINGS OF THE 2008 SIGPLAN ERLANG WORKSHOP, P83
   Lopez-Herrejon RE, 2015, INFORM SOFTWARE TECH, V61, P33, DOI 10.1016/j.infsof.2015.01.008
   Mahmoud A, 2013, CONF PROC INT SYMP C, P162, DOI 10.1109/ICPC.2013.6613844
   Malviya A. K., 2012, 2012 CSI 6 INT C SOF, P1
   Mamaghani Ali Safari, 2014, 2014 8th Malaysian Software Engineering Conference (MySEC), P321, DOI 10.1109/MySec.2014.6986037
   Mamaghani Ali Safari, 2009, Proceedings of the 2009 Ninth IEEE International Conference on Computer and Information Technology. CIT 2009, P20, DOI 10.1109/CIT.2009.111
   Marian Z, 2017, INT SYMP SYMB NUMERI, P239, DOI 10.1109/SYNASC.2017.00046
   Masoud H, 2014, J SYST SOFTWARE, V93, P110, DOI 10.1016/j.jss.2014.02.053
   Mather B., 2018, 2018 IEEE POW EN SOC, P1
   Misra J., 2012, 2012 19th Working Conference on Reverse Engineering (WCRE), P113, DOI 10.1109/WCRE.2012.21
   Mkaouer W, 2014, GECCO'14: PROCEEDINGS OF THE 2014 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P1263, DOI 10.1145/2576768.2598366
   Mohammadi S, 2019, INFORM SOFTWARE TECH, V105, P252, DOI 10.1016/j.infsof.2018.09.001
   Monçores MC, 2018, COMPUT OPER RES, V91, P92, DOI 10.1016/j.cor.2017.10.004
   Morsali .F, 2017, 2017 IEEE 4TH INTERNATIONAL CONFERENCE ON KNOWLEDGE-BASED ENGINEERING AND INNOVATION (KBEI), P977, DOI 10.1109/KBEI.2017.8324941
   Muhammad S, 2012, IET SOFTW, V6, P260, DOI 10.1049/iet-sen.2011.0061
   Naim SM, 2017, AUTOMAT SOFTW ENG, V24, P543, DOI 10.1007/s10515-017-0211-8
   Naseem R., 2012, PROC INT C EMERG TEC, P1
   Naseem R., 2016, P INT C SOFT COMP DA, P304
   Naseem R, 2019, CLUSTER COMPUT, V22, pS7287, DOI 10.1007/s10586-017-1408-0
   Naseem R, 2017, FRONT INFORM TECH EL, V18, P1082, DOI 10.1631/FITEE.1500373
   Naseem R, 2013, J SYST SOFTWARE, V86, P2045, DOI 10.1016/j.jss.2013.03.080
   Paixao Matheus, 2015, Search-Based Software Engineering. 7th International Symposium, SSBSE 2015. Proceedings: LNCS 9275, P282, DOI 10.1007/978-3-319-22183-0_24
   Pan WF, 2018, FUTURE GENER COMP SY, V83, P431, DOI 10.1016/j.future.2017.09.039
   Papachristou M, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P1184, DOI 10.1145/3338906.3342483
   Papas D, 2014, LECT NOTES ARTIF INT, V8445, P273, DOI 10.1007/978-3-319-07064-3_22
   Parashar A, 2011, COMM COM INF SC, V169, P126
   Patel C, 2009, EUR CON SFTWR MTNCE, P27, DOI 10.1109/CSMR.2009.62
   Pedreira O, 2015, INFORM SOFTWARE TECH, V57, P157, DOI 10.1016/j.infsof.2014.08.007
   Petersen K, 2015, INFORM SOFTWARE TECH, V64, P1, DOI 10.1016/j.infsof.2015.03.007
   Praditwong K., 2011, Proceedings of the Eighth International Joint Conference on Computer Science and Software Engineering (JCSSE 2011), P154, DOI 10.1109/JCSSE.2011.5930112
   Praditwong K, 2011, IEEE T SOFTWARE ENG, V37, P264, DOI 10.1109/TSE.2010.26
   Prajapati A, 2018, ARAB J SCI ENG, V43, P7083, DOI 10.1007/s13369-017-2989-x
   Psarras C, 2019, 2019 IEEE 19TH INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY AND SECURITY (QRS 2019), P121, DOI 10.1109/QRS.2019.00028
   Qifeng Zhang, 2010, 2010 Seventh International Conference on Fuzzy Systems and Knowledge Discovery (FSKD 2010), P2546, DOI 10.1109/FSKD.2010.5569799
   Radhakrishna V, 2013, PROCEDIA COMPUT SCI, V17, P121, DOI 10.1016/j.procs.2013.05.017
   Ramirez A, 2019, J SYST SOFTWARE, V149, P382, DOI 10.1016/j.jss.2018.12.015
   Rathee A, 2019, J COMPUT LANG, V52, P26, DOI 10.1016/j.cola.2019.01.006
   Rathee A, 2017, COMM COM INF SC, V712, P94, DOI 10.1007/978-981-10-5780-9_9
   Rathee A, 2018, PROCEDIA COMPUT SCI, V125, P740, DOI 10.1016/j.procs.2017.12.095
   Risi M, 2012, FORM ASP COMPUT, V24, P307, DOI 10.1007/s00165-011-0199-y
   Romano S., 2011, 2011 IEEE 27th International Conference on Software Maintenance, P500, DOI 10.1109/ICSM.2011.6080818
   Rosenberg CM, 2018, PROCEEDINGS OF THE 12TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT (ESEM 2018), DOI 10.1145/3239235.3239248
   Saeidi AM, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P429, DOI 10.1109/SANER.2015.7081853
   Saied MA, 2018, J SYST SOFTWARE, V145, P164, DOI 10.1016/j.jss.2018.08.032
   Sandhu P. S., 2010, 2010 International Conference on Electronics and Information Engineering (ICEIE 2010), P525, DOI 10.1109/ICEIE.2010.5559753
   Santos G, 2014, 2014 SOFTWARE EVOLUTION WEEK - IEEE CONFERENCE ON SOFTWARE MAINTENANCE, REENGINEERING, AND REVERSE ENGINEERING (CSMR-WCRE), P224, DOI 10.1109/CSMR-WCRE.2014.6747174
   Scanniello Giuseppe, 2010, Proceedings of the 2010 8th IEEE International Conference on Software Engineering and Formal Methods (SEFM 2010), P103, DOI 10.1109/SEFM.2010.19
   Scanniello Giuseppe, 2010, Proceedings of the 18th IEEE International Conference on Program Comprehension (ICPC 2010), P180, DOI 10.1109/ICPC.2010.17
   Scanniello G, 2013, IEEE INT CONF AUTOM, P640, DOI 10.1109/ASE.2013.6693126
   Scanniello G, 2011, CONF PROC INT SYMP C, P1, DOI 10.1109/ICPC.2011.13
   Schindler M, 2015, INT WORK REAL ARTIF, P13, DOI 10.1109/RAISE.2015.10
   Seo YS, 2022, J AMB INTEL HUM COMP, V13, P1625, DOI 10.1007/s12652-019-01455-3
   Serban G, 2008, LECT NOTES ARTIF INT, V5097, P693, DOI 10.1007/978-3-540-69731-2_67
   Shah Zubair, 2013, Advanced Data Mining and Applications. 9th International Conference, ADMA 2013. Proceedings: LNCS 8347, P47, DOI 10.1007/978-3-642-53917-6_5
   Shtern Mark, 2012, Advances in Software Engineering, DOI 10.1155/2012/792024
   Shtern Mark, 2010, Proceedings of the 18th IEEE International Conference on Program Comprehension (ICPC 2010), P64, DOI 10.1109/ICPC.2010.25
   Shtern M, 2009, INT C PROGRAM COMPRE, P248, DOI 10.1109/ICPC.2009.5090051
   Silva L.L., 2014, 13 INT C MOD MODULAR, P49, DOI [10.1145/2577080., DOI 10.1145/2577080]
   Singh V, 2016, PROCEEDINGS OF THE 10TH INDIACOM - 2016 3RD INTERNATIONAL CONFERENCE ON COMPUTING FOR SUSTAINABLE GLOBAL DEVELOPMENT, P2764
   Sora Ioana, 2010, IEEE International Joint Conference on Computational Cybernetics and Technical Informatics (ICCC-CONTI 2010). IEEE 8th International Conference on Computational Cybernetics and 9th International Conference on Technical Informatics, P259, DOI 10.1109/ICCCYB.2010.5491289
   Sözer H, 2019, LECT NOTES COMPUT SC, V11681, P71, DOI 10.1007/978-3-030-29983-5_5
   Srinivas C., 2013, P 2 INT C INN COMP C, P261
   Staffs Keele, 2007, Tech. Rep.
   Sudhamani M, 2019, EXPERT SYST APPL, V132, P63, DOI 10.1016/j.eswa.2019.04.045
   Sun Jiaze, 2018, Wuhan University Journal of Natural Sciences, V23, P93, DOI 10.1007/s11859-018-1299-9
   Supulniece I, 2015, PROCEDIA COMPUT SCI, V77, P167, DOI 10.1016/j.procs.2015.12.377
   Tabrizi AHF, 2019, 2019 IEEE 5TH CONFERENCE ON KNOWLEDGE BASED ENGINEERING AND INNOVATION (KBEI 2019), P454, DOI 10.1109/KBEI.2019.8735021
   Usman M, 2017, INFORM SOFTWARE TECH, V85, P43, DOI 10.1016/j.infsof.2017.01.006
   Vanya A, 2008, INT C PROGRAM COMPRE, P192, DOI 10.1109/ICPC.2008.34
   Varghese RBG, 2019, INFORM SOFTWARE TECH, V114, P107, DOI 10.1016/j.infsof.2019.06.002
   Vodithala Swathy, 2015, 2015 International Conference on Advanced Computing and Communication Systems (ICACCS). Proceedings, P1, DOI 10.1109/ICACCS.2015.7324095
   Wang Y, 2018, IEEE T SOFTWARE ENG, V44, P202, DOI 10.1109/TSE.2017.2679752
   WOHLIN Claes, 2014, P 18 INT C EVALUATIO, DOI [10.1145/2601248.2601268.10, 10.1145/2601248.2601268]
   Xi Tan, 2011, 2011 18th Working Conference on Reverse Engineering, P244, DOI 10.1109/WCRE.2011.37
   Yu YJ, 2007, 2007 IEEE INTERNATIONAL CONFERENCE ON WEB SERVICES, PROCEEDINGS, P388
   Yuxin Wang, 2010, 2010 International Conference on Intelligent Computing and Cognitive Informatics (ICICCI 2010), P247, DOI 10.1109/ICICCI.2010.45
   Zamli K. Z., 2018, PROC INTELL INTERACT, P167
   Zhang Y, 2012, FRONT COMPUT SCI-CHI, V6, P725, DOI 10.1007/s11704-012-2220-x
   Zhong LH, 2016, INT CONF SOFTW ENG, P304, DOI 10.1109/ICSESS.2016.7883072
   Zhong LH, 2016, IEEE INT CONGR BIG, P493, DOI 10.1109/BigDataCongress.2016.75
   Zhongnian Li, 2009, Proceedings of the 2009 9th International Conference on Electronic Measurement & Instruments (ICEMI 2009), P1, DOI 10.1109/ICEMI.2009.5274513
NR 163
TC 15
Z9 15
U1 3
U2 11
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUN 1
PY 2022
VL 48
IS 6
BP 1905
EP 1928
DI 10.1109/TSE.2020.3042553
PG 24
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 2D5IM
UT WOS:000811580600005
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Baltes, S
   Treude, C
   Robillard, MP
AF Baltes, Sebastian
   Treude, Christoph
   Robillard, Martin P.
TI Contextual Documentation Referencing on Stack Overflow
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Community question answering; software documentation; information
   diffusion; hyperlinks; stack overflow
AB Software engineering is knowledge-intensive and requires software developers to continually search for knowledge, often on community question answering platforms such as Stack Overflow. Such information sharing platforms do not exist in isolation, and part of the evidence that they exist in a broader software documentation ecosystem is the common presence of hyperlinks to other documentation resources found in forum posts. With the goal of helping to improve the information diffusion between Stack Overflow and other documentation resources, we conducted a study to answer the question of how and why documentation is referenced in Stack Overflow threads. We sampled and classified 759 links from two different domains, regular expressions and Android development, to qualitatively and quantitatively analyze the links' context and purpose, including attribution, awareness, and recommendations. We found that links on Stack Overflow serve a wide range of distinct purposes, ranging from citation links attributing content copied into Stack Overflow, over links clarifying concepts using Wikipedia pages, to recommendations of software components and resources for background reading. This purpose spectrum has major corollaries, including our observation that links to documentation resources are a reflection of the information needs typical to a technology domain. We contribute a framework and method to analyze the context and purpose of Stack Overflow links, a public dataset of annotated links, and a description of five major observations about linking practices on Stack Overflow. Those observations include the above-mentioned purpose spectrum, its interplay with documentation resources and applications domains, and the fact that links on Stack Overflow often lack context in form of accompanying quotes or summaries. We further point to potential tool support to enhance the information diffusion between Stack Overflow and other documentation resources.
C1 [Baltes, Sebastian; Treude, Christoph] Univ Adelaide, Adelaide, SA 5005, Australia.
   [Robillard, Martin P.] McGill Univ, Montreal, PQ H3A 0E9, Canada.
C3 University of Adelaide; McGill University
RP Baltes, S (corresponding author), Univ Adelaide, Adelaide, SA 5005, Australia.
EM sebastian.baltes@adelaide.edu.au; christoph.treude@adelaide.edu.au;
   martin@cs.mcgill.ca
RI Treude, Christoph/AAZ-6257-2021
OI Treude, Christoph/0000-0002-6919-2149
FU Australian Research Council's Discovery Early Career Researcher Award
   (DECRA) [DE180100153]; Australian Research Council [DE180100153] Funding
   Source: Australian Research Council
FX This work has been supported by the Australian Research Council's
   Discovery Early Career Researcher Award (DECRA) funding scheme
   (DE180100153).
CR Agrawal R., 1993, SIGMOD Record, V22, P207, DOI 10.1145/170036.170072
   Agrawal R., 1994, P INT VLDB C VLDB 94, P487, DOI DOI 10.5555/645920.672836
   [Anonymous], 2019, DO I WRIT GOOD ANSW
   [Anonymous], 2019, REF MAT WRITT OTH
   Baltes S., 2018, SOTorrent dataset 2018-06-17, DOI 10.5281/zenodo.1295405
   Baltes S., 2018, SOTorrent dataset 2018-07-31, DOI 10.5281/zenodo.1401828
   Baltes S., 2019, Contextual documentation referencing on stack overflow-Supplementary Material, DOI 10.5281/zenodo.2556642
   Baltes S., 2019, SBALTES CONDOR GITHU, DOI [10.5281/zenodo.2557446, DOI 10.5281/ZENODO.2557446]
   Baltes S, 2019, EMPIR SOFTW ENG, V24, P1259, DOI 10.1007/s10664-018-9650-5
   Baltes S, 2018, IEEE WORK CONF MIN S, P319, DOI 10.1145/3196398.3196430
   Calefato F, 2018, INFORM SOFTWARE TECH, V94, P186, DOI 10.1016/j.infsof.2017.10.009
   Charmaz K., 2014, Introducing Qualitative Methods
   Chevalier A, 2006, INT J HUM-COMPUT ST, V64, P1031, DOI 10.1016/j.ijhcs.2006.06.002
   COHEN J, 1960, EDUC PSYCHOL MEAS, V20, P37, DOI 10.1177/001316446002000104
   Duijn M, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P410, DOI 10.1109/MSR.2015.51
   Fisher RA, 1922, J R STAT SOC, V85, P87, DOI 10.2307/2340521
   Gao S, 2017, IEEE INT C ENG COMP, P90, DOI 10.1109/ICECCS.2017.30
   Gómez C, 2013, IEEE WORK CONF MIN S, P81, DOI 10.1109/MSR.2013.6624011
   Hata H, 2019, PROC INT CONF SOFTW, P1211, DOI 10.1109/ICSE.2019.00123
   Jiang J., 2019, SOFTWARE ENG METHODO, P101
   Jiarpakdee J, 2018, PROC IEEE INT CONF S, P92, DOI 10.1109/ICSME.2018.00018
   Li J, 2019, WORLD WIDE WEB, V22, P1699, DOI 10.1007/s11280-018-0621-y
   Maalej W, 2013, IEEE T SOFTWARE ENG, V39, P1264, DOI 10.1109/TSE.2013.12
   Mamykina L, 2011, 29TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, P2857
   Meng Michael, 2019, Communication Design Quarterly Review, V7, P40, DOI 10.1145/3358931.3358937
   Morrison P, 2013, IEEE WORK CONF MIN S, P69, DOI 10.1109/MSR.2013.6624008
   Pardo B., 2002, Computer Music Journal, V26, P27, DOI 10.1162/014892602760137167
   Ponzanelli L, 2014, INT CONF QUAL SOFTW, P343, DOI 10.1109/QSIC.2014.27
   PORTER MF, 1980, PROGRAM-AUTOM LIBR, V14, P130, DOI 10.1108/eb046814
   Robillard MP, 2011, EMPIR SOFTW ENG, V16, P703, DOI 10.1007/s10664-010-9150-8
   Slegers J., 2015, The decline of stack overflow
   Spolsky J., 2008, BLOG POST
   Stack Overflow, 2014, SELF SIGN CERT ANDR
   Stack Overflow, 2013, REGULAR EXPRESSION M
   Stack Overflow, 2012, FIND IND 1 MATCH REG
   Stack Overflow, 2016, US I JAV DOC
   Stack Overflow, 2014, MONGO FIND REGEX JAV
   Stack Overflow, 2015, REG HANDL ZER LENGTH
   Stack Overflow, 2015, JAV REG EXPR DISC RE
   Stack Overflow, 2012, SPLIT REG EXTR STRIN
   StackOverflow, 2016, CHECK STRING CONT ON
   StackOverflow, 2014, SEARCHING BOTHWORD I
   Storey Margaret-Anne, 2012, Crowd Documentation: Exploring the Coverage and the Dynamics of API Discussions on Stack Overflow, V11
   Tantithamthavorn C, 2018, 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING - SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2018), P286, DOI 10.1145/3183519.3183547
   Treude C, 2017, PROC IEEE INT CONF S, P509, DOI 10.1109/ICSME.2017.24
   Treude C, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P804, DOI 10.1145/1985793.1985907
   Vincent N, 2018, PROCEEDINGS OF THE 2018 CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS (CHI 2018), DOI 10.1145/3173574.3174140
   Xu BW, 2016, IEEE INT CONF AUTOM, P51, DOI 10.1145/2970276.2970357
   Yang J, 2014, P 25 ACM C HYP SOC M, P179
   Ye DH, 2017, EMPIR SOFTW ENG, V22, P375, DOI 10.1007/s10664-016-9430-z
NR 50
TC 6
Z9 6
U1 3
U2 5
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JAN 1
PY 2022
VL 48
IS 1
BP 135
EP 149
DI 10.1109/TSE.2020.2981898
PG 15
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA YG0HJ
UT WOS:000742179000008
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Jorgensen, M
   Bergersen, GR
   Liestol, K
AF Jorgensen, Magne
   Bergersen, Gunnar Rye
   Liestol, Knut
TI Relations Between Effort Estimates, Skill Indicators, and Measured
   Programming Skill
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE D.2.9.b cost estimation; D.2.1.d management; D.2.0 software engineering;
   D.2.0b software psychology
ID SOFTWARE-DEVELOPMENT; JUDGMENT; PREDICTIONS; STRATEGIES; KNOWLEDGE;
   SELECTION; UNAWARE
AB There are large skill differences among software developers, and clients and managers will benefit from being able to identify those with better skill. This study examines the relations between low effort estimates, and other commonly used skill indicators, and measured programming skill. One hundred and four professional software developers were recruited. After skill-related information was collected, they were asked to estimate the effort for four larger and five smaller programming tasks. Finally, they completed a programming skill test. The lowest and most over-optimistic effort estimates for the larger tasks were given by those with the lowest programming skill, which is in accordance with the well-known Dunning-Kruger effect. For the smaller tasks, however, those with the lowest programming skill had the highest and most over-pessimistic estimates. The other programming skill indicators, such as length of experience, company assessed skill and self-assessed skill, were only moderately correlated with measured skill and not particularly useful in guiding developer skill identification. A practical implication is that for larger and more complex tasks, the use of low effort estimates and commonly used skill indicators as selection criteria leads to a substantial risk of selecting among the least skilled developers.
C1 [Jorgensen, Magne] Metropolitan Univ, Simula Metropolitan Ctr Digital Engn, N-0167 Oslo, Norway.
   [Bergersen, Gunnar Rye] Univ Oslo, N-0315 Oslo, Norway.
   [Liestol, Knut] Univ Oslo, Dept Informat, N-0315 Oslo, Norway.
C3 University of Oslo; University of Oslo
RP Jorgensen, M (corresponding author), Metropolitan Univ, Simula Metropolitan Ctr Digital Engn, N-0167 Oslo, Norway.
EM magnej@simula.no; gunnab@ifi.uio.no; knutj@ifi.uio.no
OI Bergersen, Gunnar Rye/0000-0002-8135-9052; Liestol,
   Knut/0000-0002-7929-582X
CR Alicke M.D., 2011, Handbook of self-enhancement and selfprotection
   Anda BCD, 2009, IEEE T SOFTWARE ENG, V35, P407, DOI 10.1109/TSE.2008.89
   ANDRICH D, 1978, PSYCHOMETRIKA, V43, P561, DOI 10.1007/BF02293814
   [Anonymous], 2012, COMMONWEALTH GOVERNA
   Bergersen GR, 2014, IEEE T SOFTWARE ENG, V40, P1163, DOI 10.1109/TSE.2014.2348997
   Bergersen GR, 2011, J INDIVID DIFFER, V32, P201, DOI 10.1027/1614-0001/a000052
   Bryan G. E., 1994, 1994 IEEE Aerospace Applications Conference Proceedings (Cat. No.94TH0623-9), P55, DOI 10.1109/AERO.1994.291203
   Damisch L, 2006, J EXP PSYCHOL-APPL, V12, P166, DOI 10.1037/1076-898X.12.3.166
   Dunning David, 2004, Psychol Sci Public Interest, V5, P69, DOI 10.1111/j.1529-1006.2004.00018.x
   Fogarty GJ, 2005, INT J SPORT EXERC PS, V3, P41, DOI 10.1080/1612197X.2005.9671757
   Galwey N.W., 2014, Introduction to Mixed Modelling: Beyond Regression and Analysis Of Variance, V2nd
   GOODMAN LA, 1954, J AM STAT ASSOC, V49, P732, DOI 10.2307/2281536
   Halkjelsvik T, 2012, PSYCHOL BULL, V138, P238, DOI 10.1037/a0025996
   Hollingworth H. L., 1910, J PHILOS PSYCHOL SCI, V7, P461, DOI DOI 10.2307/2012819
   Jazayeri M, 2010, NAT NEUROSCI, V13, P1020, DOI 10.1038/nn.2590
   Jorgensen M, 2017, INT J PROJ MANAG, V35, P1573, DOI 10.1016/j.ijproman.2017.09.003
   Jorgensen M, 2017, 2017 IEEE/ACM 10TH INTERNATIONAL WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING (CHASE 2017), P30, DOI 10.1109/CHASE.2017.1
   Jorgensen M, 2016, INFORM SOFTWARE TECH, V78, P83, DOI 10.1016/j.infsof.2016.05.008
   Jorgensen M, 2016, IEEE SOFTWARE, V33, P48, DOI 10.1109/MS.2015.24
   Jorgensen M, 2013, INFORM SOFTWARE TECH, V55, P1640, DOI 10.1016/j.infsof.2013.03.001
   Jorgensen M, 2010, J SYST SOFTWARE, V83, P1039, DOI 10.1016/j.jss.2009.12.028
   Jorgenson M, 2009, IEEE SOFTWARE, V26, P79, DOI 10.1109/MS.2009.71
   Kern T, 2002, CALIF MANAGE REV, V44, P47, DOI 10.2307/41166122
   Krajc M, 2008, J ECON PSYCHOL, V29, P724, DOI 10.1016/j.joep.2007.12.006
   Kruger J, 1999, J PERS SOC PSYCHOL, V77, P1121, DOI 10.1037/0022-3514.77.6.1121
   Lohre E, 2016, J SYST SOFTWARE, V116, P49, DOI 10.1016/j.jss.2015.03.015
   Mair Patrick., 2007, PSYCHOL SCI, V49, P26
   Meeran S, 2016, INT J FORECASTING, V32, P112, DOI 10.1016/j.ijforecast.2015.05.001
   Molokken K, 2003, 2003 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P223, DOI 10.1109/ISESE.2003.1237981
   Pavel S.R., 2012, Journal of Aviation Technology and Engineering, V2, P125, DOI [DOI 10.5703/1288284314864, https://doi.org/10.5703/1288284314864]
   Rush C, 2001, CONCURRENT ENG-RES A, V9, P271, DOI [10.1177/1063293X0100900404, 10.1177/106329302023729]
   Siegmund J, 2014, EMPIR SOFTW ENG, V19, P1299, DOI 10.1007/s10664-013-9286-4
   Simons DJ, 2013, PSYCHON B REV, V20, P601, DOI 10.3758/s13423-013-0379-2
   SOMERS RH, 1962, AM SOCIOL REV, V27, P799, DOI 10.2307/2090408
   Tamrakar Ritesh, 2012, 16th International Conference on Evaluation & Assessment in Software Engineering (EASE 2012), P228, DOI 10.1049/ic.2012.0030
   Tu YK, 2004, J DENT, V32, P133, DOI 10.1016/j.jdent.2003.10.001
   Vierordt K., 1868, ZEITSINN NACH VERSUC
   Zell E, 2014, PERSPECT PSYCHOL SCI, V9, P111, DOI 10.1177/1745691613518075
NR 38
TC 3
Z9 4
U1 4
U2 9
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD DEC 1
PY 2021
VL 47
IS 12
BP 2892
EP 2906
DI 10.1109/TSE.2020.2973638
PG 15
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science; Engineering
GA XM6HB
UT WOS:000728924600015
DA 2024-07-18
ER

PT J
AU Wan, ZY
   Xia, X
   Lo, D
   Murphy, GC
AF Wan, Zhiyuan
   Xia, Xin
   Lo, David
   Murphy, Gail C.
TI How does Machine Learning Change Software Development Practices?
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Software; Interviews; Data models; Machine learning; Testing; Task
   analysis; Software engineering; Software engineering; machine learning;
   practitioner; empirical study
AB Adding an ability for a system to learn inherently adds uncertainty into the system. Given the rising popularity of incorporating machine learning into systems, we wondered how the addition alters software development practices. We performed a mixture of qualitative and quantitative studies with 14 interviewees and 342 survey respondents from 26 countries across four continents to elicit significant differences between the development of machine learning systems and the development of non-machine-learning systems. Our study uncovers significant differences in various aspects of software engineering (e.g., requirements, design, testing, and process) and work characteristics (e.g., skill variety, problem solving and task identity). Based on our findings, we highlight future research directions and provide recommendations for practitioners.
C1 [Wan, Zhiyuan] Zhejiang Univ, Ningbo Res Inst, Coll Comp Sci & Technol, Hangzhou 310058, Peoples R China.
   [Wan, Zhiyuan] Univ British Columbia, Dept Comp Sci, Vancouver, BC V6T 1Z4, Canada.
   [Xia, Xin] Monash Univ, Fac Informat Technol, Clayton, Vic 3800, Australia.
   [Lo, David] Singapore Management Univ, Sch Informat Syst, Singapore 188065, Singapore.
   [Murphy, Gail C.] Univ British Columbia, Dept Comp Sci, Vancouver, BC V6T 1Z4, Canada.
C3 Zhejiang University; University of British Columbia; Monash University;
   Singapore Management University; University of British Columbia
RP Xia, X (corresponding author), Monash Univ, Fac Informat Technol, Clayton, Vic 3800, Australia.
EM wanzhiyuan@zju.edu.cn; xin.xia@monash.edu; davidlo@smu.edu.sg;
   murphy@cs.ubc.ca
RI Xia, Xin/AAD-6217-2022; Lo, David/A-2493-2012
OI Xia, Xin/0000-0002-6302-3256; Lo, David/0000-0002-4367-7201
FU National Key Research and Development Program of China [2018YFB1003904]
FX The authors would like to thank all interviewees for their participation
   and survey participants for responding to our survey. This research was
   partially supported by the National Key Research and Development Program
   of China (2018YFB1003904).
CR Abadi M, 2016, PROCEEDINGS OF OSDI'16: 12TH USENIX SYMPOSIUM ON OPERATING SYSTEMS DESIGN AND IMPLEMENTATION, P265
   Amershi S, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE (ICSE-SEIP 2019), P291, DOI 10.1109/ICSE-SEIP.2019.00042
   Anjos A., 2017, INT C MACH LEARN ICM, P1
   [Anonymous], 2017, Machine Learning Yearning
   Baylor D, 2017, KDD'17: PROCEEDINGS OF THE 23RD ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P1387, DOI 10.1145/3097983.3098021
   Bourque Pierre, 2014, SWEBOK: Guide to the Software Engineering Body of Knowledge, V3rd
   Braun V., 2006, QUAL RES PSYCHOL, V3, P77, DOI [DOI 10.1191/1478088706QP063OA, 10.1191/1478088706qp063oa]
   Carver JC, 2007, PROC INT CONF SOFTW, P550
   COHEN J, 1960, EDUC PSYCHOL MEAS, V20, P37, DOI 10.1177/001316446002000104
   Ericson G., 2019, WHAT IS TEAM DATA SC
   Ferlitsch A., 2019, MAKING MACHINE MACHI
   Fisher Danyel, 2012, Interactions, V19, P50, DOI 10.1145/2168931.2168943
   Ghahramani Z, 2015, NATURE, V521, P452, DOI 10.1038/nature14541
   Guest G, 2006, FIELD METHOD, V18, P59, DOI 10.1177/1525822X05279903
   Gulzar MA, 2016, PROC INT CONF SOFTW, P784, DOI 10.1145/2884781.2884813
   Harris H., 2013, ANAL ANAL INTROSPECT
   Humphrey SE, 2007, J APPL PSYCHOL, V92, P1332, DOI 10.1037/0021-9010.92.5.1332
   Jordan MI, 2015, SCIENCE, V349, P255, DOI 10.1126/science.aaa8415
   Kandel S, 2012, IEEE T VIS COMPUT GR, V18, P2917, DOI 10.1109/TVCG.2012.219
   Kim M, 2018, IEEE T SOFTWARE ENG, V44, P1024, DOI 10.1109/TSE.2017.2754374
   Kim M, 2016, PROC INT CONF SOFTW, P96, DOI 10.1145/2884781.2884783
   Kitchenham BA, 2008, Guide to advanced empirical software engineering, P63, DOI [DOI 10.1007/978-1-84800-044-5_3, 10.1007/ 978-1-84800-044-5_3]
   LaToza T. D., 2006, 28th International Conference on Software Engineering Proceedings, P492, DOI 10.1145/1134285.1134355
   Lee K. C., 2012, P 18 ACM SIGKDD INT, P768
   Ma L, 2018, IEEE INT CONF AUTOM, P120, DOI 10.1145/3238147.3238202
   Ma SQ, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P175, DOI 10.1145/3236024.3236082
   Ma SQ, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P786, DOI 10.1145/3106237.3106291
   Pei KX, 2017, PROCEEDINGS OF THE TWENTY-SIXTH ACM SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES (SOSP '17), P1, DOI 10.1145/3132747.3132785
   Roh Y., 2018, ARXIV181103402
   Romano J, 2006, ANN M FLOR ASS I RES, P1
   Schelter S., 2019, CHALLENGES MACHINE L
   Talby D., 2019, LESSONS LEARNED TURN
   Thomas R., 2019, WHAT DO MACHINE LEAR
   Tian YC, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P303, DOI 10.1145/3180155.3180220
   Tyagi Pradeep K., 1989, Journal of the Academy of Marketing Science, V17, P235
   Wan Zhi-yuan, 2019, Journal of Zhejiang University (Engineering Science), V53, P819, DOI 10.3785/j.issn.1008-973X.2019.05.001
   Xie XY, 2011, J SYST SOFTWARE, V84, P544, DOI 10.1016/j.jss.2010.11.920
   Zinkevich M., 2019, Rules of Machine Learning: Best Practices for ML Engineering
NR 38
TC 92
Z9 98
U1 5
U2 31
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD SEPT 1
PY 2021
VL 47
IS 9
BP 1857
EP 1871
DI 10.1109/TSE.2019.2937083
PG 15
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA UR3QY
UT WOS:000696667700006
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Papadopoulos, AV
   Versluis, L
   Bauer, A
   Herbst, N
   von Kistowski, J
   Ali-Eldin, A
   Abad, CL
   Amaral, JN
   Tuma, P
   Iosup, A
AF Papadopoulos, Alessandro Vittorio
   Versluis, Laurens
   Bauer, Andre
   Herbst, Nikolas
   von Kistowski, Joakim
   Ali-Eldin, Ahmed
   Abad, Cristina L.
   Amaral, Jose Nelson
   Tuma, Petr
   Iosup, Alexandru
TI Methodological Principles for Reproducible Performance Evaluation in
   Cloud Computing
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Cloud computing; Performance evaluation; Benchmark testing; Systematics;
   Computer performance; Software engineering; Experimental evaluation;
   observation study; experimentation
ID AGREEMENT; INFRASTRUCTURE; REPEATABILITY; STATISTICS
AB The rapid adoption and the diversification of cloud computing technology exacerbate the importance of a sound experimental methodology for this domain. This work investigates how to measure and report performance in the cloud, and how well the cloud research community is already doing it. We propose a set of eight important methodological principles that combine best-practices from nearby fields with concepts applicable only to clouds, and with new ideas about the time-accuracy trade-off. We show how these principles are applicable using a practical use-case experiment. To this end, we analyze the ability of the newly released SPEC Cloud IaaS benchmark to follow the principles, and showcase real-world experimental studies in common cloud environments that meet the principles. Last, we report on a systematic literature review including top conferences and journals in the field, from 2012 to 2017, analyzing if the practice of reporting cloud performance measurements follows the proposed eight principles. Worryingly, this systematic survey and the subsequent two-round human reviews, reveal that few of the published studies follow the eight experimental principles. We conclude that, although these important principles are simple and basic, the cloud community is yet to adopt them broadly to deliver sound measurement of cloud environments.
C1 [Papadopoulos, Alessandro Vittorio] Malardalen Univ, S-72123 Vasteras, Sweden.
   [Versluis, Laurens; Iosup, Alexandru] Vrije Univ Amsterdam, NL-1081 HV Amsterdam, Netherlands.
   [Bauer, Andre; Herbst, Nikolas; von Kistowski, Joakim] Univ Wurzburg, D-97070 Wurzburg, Germany.
   [Ali-Eldin, Ahmed] Umea Univ, S-90187 Umea, Sweden.
   [Ali-Eldin, Ahmed] Univ Massachusetts, Amherst, MA 01003 USA.
   [Abad, Cristina L.] Escuela Super Politecn Litoral, Guayaquil, Ecuador.
   [Amaral, Jose Nelson] Univ Alberta, Edmonton, AB T6G 2R3, Canada.
   [Tuma, Petr] Charles Univ Prague, Prague 11000, Czech Republic.
C3 Malardalen University; Vrije Universiteit Amsterdam; University of
   Wurzburg; Umea University; University of Massachusetts System;
   University of Massachusetts Amherst; Escuela Superior Politecnica del
   Litoral; University of Alberta; Charles University Prague
RP Papadopoulos, AV (corresponding author), Malardalen Univ, S-72123 Vasteras, Sweden.
EM alessandro.papadopoulos@mdh.se; l.f.d.versluis@zni.nl;
   andre.bauer@uni-wuerzburg.de; nikolas.herbst@uni-wuerzburg.de;
   joakim.kistowski@uni-wuerzburg.de; ahmeda@cs.umu.se;
   cabad@fiec.espol.edu.ec; jamaral@ualberta.ca; petr.tuma@d3s.mff.cuni.cz;
   A.Iosup@zni.nl
RI Papadopoulos, Alessandro Vittorio/AAC-7031-2020; Tuma, Petr/A-3094-2009;
   Abad, Cristina/AAH-3666-2019; Iosup, Alexandru/G-4069-2012
OI Papadopoulos, Alessandro Vittorio/0000-0002-1364-8127; Tuma,
   Petr/0000-0002-7035-2322; Abad, Cristina/0000-0002-9263-673X; Bauer,
   Andre/0000-0002-5582-8812; Herbst, Nikolas/0000-0003-3462-6426; Amaral,
   Jose Nelson/0000-0002-9943-1809; Iosup, Alexandru/0000-0001-8030-9398
FU Swedish Foundation for Strategic Research [GMT14-0032]; Knowledge
   Foundation (KKS); German Research Foundation (DFG) [KO 3445/11-1]; US
   NSF [1836752]; Wallenberg Foundation; Swedish strategic research
   programme eSSENCE; Google Faculty Research Award; National Science and
   Engineering Research Council of Canada (NSERC); ECSEL Joint Undertaking
   (JU) [783162]; Dutch NWO Vidi grant MagnaData; Swedish Foundation for
   Strategic Research (SSF) [GMT14-0032] Funding Source: Swedish Foundation
   for Strategic Research (SSF)
FX This work was also supported by Swedish Foundation for Strategic
   Research under the project "Future factories in the cloud (FiC)" with
   grant number GMT14-0032, by the Knowledge Foundation (KKS), by the
   German Research Foundation (DFG) under grant No. KO 3445/11-1, by the US
   NSF grant No. 1836752, by the Wallenberg Foundation, by the Swedish
   strategic research programme eSSENCE, by the Google Faculty Research
   Award, by the National Science and Engineering Research Council of
   Canada (NSERC), by the ECSEL Joint Undertaking (JU) grant No 783162, by
   the Dutch NWO Vidi grant MagnaData, by generous donations by Oracle and
   Intel Labs, both USA, and by Solvinity, the Netherlands, and by SPEC
   Research.
CR Abedi Ali, 2017, P 8 ACM SPEC INT C P, P287, DOI DOI 10.1145/3030207.3030229
   Amaral JN, 2018, INT SYM PERFORM ANAL, P159, DOI 10.1109/ISPASS.2018.00029
   [Anonymous], 1991, Exploratory and Multivariate Data Analysis
   [Anonymous], 1993, How to lie with statistics
   Baker M, 2016, NATURE, V533, P452, DOI 10.1038/533452a
   Bal H, 2016, COMPUTER, V49, P54, DOI 10.1109/MC.2016.127
   Bauer A, 2019, IEEE T PARALL DISTR, V30, P800, DOI 10.1109/TPDS.2018.2870389
   Blackburn SM, 2016, ACM T PROGR LANG SYS, V38, DOI 10.1145/2983574
   Boisvert RF, 2016, COMMUN ACM, V59, P5, DOI 10.1145/2994031
   Bucek J, 2018, COMPANION OF THE 2018 ACM/SPEC INTERNATIONAL CONFERENCE ON PERFORMANCE ENGINEERING (ICPE '18), P41, DOI 10.1145/3185768.3185771
   Budgen D., 2006, 28th International Conference on Software Engineering Proceedings, P1051, DOI 10.1145/1134285.1134500
   Cavazos J, 2007, INT SYM CODE GENER, P185
   COHEN J, 1968, PSYCHOL BULL, V70, P213, DOI 10.1037/h0026256
   COHEN J, 1960, EDUC PSYCHOL MEAS, V20, P37, DOI 10.1177/001316446002000104
   Collberg C, 2016, COMMUN ACM, V59, P62, DOI 10.1145/2812803
   de Oliveira AugustoBorn., 2013, Proceedings of the 4th ACM/SPEC International Conference on Performance Engineering, ICPE'13, P137
   Easton V., 1997, Statistics Glossary, V1
   Eide E., 2007, Symposium A Quarterly Journal, P215
   Feitelson D.G., 2005, EXPT COMPUTER SCI NE
   Feitelson DG, 2016, LECT NOTES COMPUT SC, V9833, P3, DOI 10.1007/978-3-319-43659-3_1
   Ferro M., 2014, HIGH PERFORMANCE COM
   Firoz JS, 2016, PROCEEDINGS OF THE 2016 ACM/SPEC INTERNATIONAL CONFERENCE ON PERFORMANCE ENGINEERING (ICPE'16), P287, DOI 10.1145/2851553.2851573
   FLEISS JL, 1971, PSYCHOL BULL, V76, P378, DOI 10.1037/h0031619
   FLEMING PJ, 1986, COMMUN ACM, V29, P218, DOI 10.1145/5666.5673
   Folkerts Enno, 2013, Selected Topics in Performance Evaluation and Benchmarking. 4th TPC Technology Conference, TPCTC 2012. Revised Selected Papers, P173, DOI 10.1007/978-3-642-36727-4_12
   Frachtenberg E, 2005, LECT NOTES COMPUT SC, V3834, P257
   Fursin G, 2016, DES AUT TEST EUROPE, P864
   Georges A, 2007, OOPSLA: 22ND INTERNATIONAL CONFERENCE ON OBJECT-ORIENTED PROGRAMMING, SYSTEMS, LANGUAGES, AND APPLICATIONS, PROCEEDINGS, P57
   Grosvenor Matthew P., 2015, P 12 USENIX S NETW S, P1
   Handigol N., 2012, P 8 INT C EM NETW EX, P253, DOI DOI 10.1145/2413176.2413206
   Herbst N, 2018, ACM TRANS MODELING P, V3, DOI 10.1145/3236332
   Herbst Nikolas., 2016, Ready for rain? a view from spec research on the future of cloud metrics
   Herbst NR, 2015, 2015 IEEE/ACM 10TH INTERNATIONAL SYMPOSIUM ON SOFTWARE ENGINEERING FOR ADAPTIVE AND SELF-MANAGING SYSTEMS, P46, DOI 10.1109/SEAMS.2015.23
   Herndon T, 2014, CAMB J ECON, V38, P257, DOI 10.1093/cje/bet075
   Hesterberg TC, 2015, AM STAT, V69, P371, DOI 10.1080/00031305.2015.1089789
   Hoefler T, 2015, PROCEEDINGS OF SC15: THE INTERNATIONAL CONFERENCE FOR HIGH PERFORMANCE COMPUTING, NETWORKING, STORAGE AND ANALYSIS, DOI 10.1145/2807591.2807644
   Horky V., 2015, P 6 ACMSPEC INT C PE, P337, DOI [10.1145/2668930, DOI 10.1145/2668930]
   Hoste K, 2007, IEEE MICRO, V27, P63, DOI 10.1109/MM.2007.56
   Ilyushkin A, 2018, ACM TRANS MODELING P, V3, DOI 10.1145/3164537
   Iosup A., 2011, 2011 Proceedings of 11th IEEE/ACM International Symposium on Cluster, Cloud and Grid Computing (CCGrid 2011), P104, DOI 10.1109/CCGrid.2011.22
   Iosup Alexandru., 2006, WORKSHOP JOB SCHEDUL, P232
   Jcgm JCFGIM, 2008, JCGM, V50, P134, DOI [DOI 10.1373/CLINCHEM.2003.030528, 10.1373/clinchem.2003.030528]
   Joshi A, 2006, IEEE T COMPUT, V55, P769, DOI 10.1109/TC.2006.85
   Kalibera T, 2006, LECT NOTES COMPUT SC, V4054, P63
   Kell Stephen, 2012, VMIL, P33
   Kistowski Joakim v., 2015, P 6 ACMSPEC INT C PE, P333, DOI DOI 10.1145/2668930.2688819
   Kitchenham B, 2009, INFORM SOFTWARE TECH, V51, P7, DOI 10.1016/j.infsof.2008.09.009
   Krishnamurthy B, 2011, COMPUT COMMUN, V34, P43, DOI 10.1016/j.comcom.2010.09.014
   Lakew EB, 2017, IEEE ACM INT SYMP, P589, DOI 10.1109/CCGRID.2017.71
   LANDIS JR, 1977, BIOMETRICS, V33, P159, DOI 10.2307/2529310
   Lange KD, 2009, COMPUTER, V42, P95, DOI 10.1109/MC.2009.84
   Leitner P, 2016, ACM T INTERNET TECHN, V16, DOI 10.1145/2885497
   Ley M., 2002, String Processing and Information Retrieval. 9th International Symposium, SPIRE 2002. Proceedings (Lecture Notes in Computer Science Vol.2476), P1
   Li X., 2014, CLOUD COMPUTING DATA, P83, DOI 10.1007/978-1-4939-1905-54
   Lilja D.J., 2008, MEASURING COMPUTER P
   MALONY AD, 1992, IEEE T PARALL DISTR, V3, P433, DOI 10.1109/71.149962
   MALONY AD, 1991, SIGPLAN NOTICES, V26, P15, DOI 10.1145/127695.122760
   Mashey J. R., 2004, Computer Architecture News, V32, P1, DOI 10.1145/1040136.1040137
   Mytkowicz T, 2010, PLDI '10: PROCEEDINGS OF THE 2010 ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P187, DOI 10.1145/1806596.1806618
   Mytkowicz T, 2009, ACM SIGPLAN NOTICES, V44, P265, DOI 10.1145/1508284.1508275
   Papadopoulos A. V., 2016, ACM T MOD PERF EV CO, V1, P15
   Petersen K., 2007, Systematic Mapping Studies in Software Engineering, P1
   Petersen K, 2015, INFORM SOFTWARE TECH, V64, P1, DOI 10.1016/j.infsof.2015.03.007
   Petkovich JC, 2016, SOFTWARE PRACT EXPER, V46, P1411, DOI 10.1002/spe.2382
   Pieterse V., 2014, 1830 NAT I STAND TEC
   Reinhart A., 2015, Statistics done wrong: the woefully complete guide
   Ricci Robert, 2015, ACM SIGOPS Operating Systems Review, V49, P100
   Ricci R., 2007, P 4 USENIX C NETW SY, P1
   Sandve GK, 2013, PLOS COMPUT BIOL, V9, DOI 10.1371/journal.pcbi.1003285
   Sayeed M, 2008, COMPUT SCI ENG, V10, P60, DOI 10.1109/MCSE.2008.98
   Schad J, 2010, PROC VLDB ENDOW, V3, P460, DOI 10.14778/1920841.1920902
   Schwarzkopf M., 2012, P 4 USENIX C HOT TOP, P1
   Shipilev A., 2014, NANOTRUSTING NANOTIM
   Sjoberg DIK, 2005, IEEE T SOFTWARE ENG, V31, P733, DOI 10.1109/TSE.2005.97
   Soergela D. A. W, 2015, F1000RES, V3, P1
   Spring N., 2006, Operating Systems Review, V40, P17, DOI 10.1145/1113361.1113368
   Standard Performance Evaluation Corporation (SPEC), 2018, SPEC CLOUD LAAS 2018
   Stevens S.S., 1959, Measurement, P18
   STEVENS SS, 1946, SCIENCE, V103, P677, DOI 10.1126/science.103.2684.677
   Taylor B. N., 1297 NAT I STAND TEC
   Vitek J, 2012, ACM SIGPLAN NOTICES, V47, P30, DOI 10.1145/2442776.2442781
   Zannier C., 2006, 28th International Conference on Software Engineering Proceedings, P341, DOI 10.1145/1134285.1134333
   Zhang BX, 2010, LECT NOTES COMPUT SC, V6271, P484, DOI 10.1007/978-3-642-15277-1_46
NR 83
TC 33
Z9 35
U1 0
U2 9
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD AUG 1
PY 2021
VL 47
IS 8
BP 1528
EP 1543
DI 10.1109/TSE.2019.2927908
PG 16
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA TZ7YH
UT WOS:000684687400001
OA Green Submitted, hybrid
DA 2024-07-18
ER

PT J
AU Jiang, SJ
   Zhang, M
   Zhang, YM
   Wang, RC
   Yu, Q
   Keung, J
AF Jiang, Shujuan
   Zhang, Miao
   Zhang, Yanmei
   Wang, Rongcun
   Yu, Qiao
   Keung, Jacky
TI An Integration Test Order Strategy to Consider Control Coupling
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Couplings; Complexity theory; Measurement; Marine vehicles; Mathematical
   model; Software testing; Control coupling; integration test order;
   software testing; stubbing cost
ID GRAPH
AB Integration testing is a very important step in software testing. Existing methods evaluate the stubbing cost for class integration test orders by considering only the interclass direct relationships such as inheritance, aggregation, and association, but they omit the interclass indirect relationship caused by control coupling, which can also affect the test orders and the stubbing cost. In this paper, we introduce an integration test order strategy to consider control coupling. We advance the concept of transitive relationship to describe this kind of interclass dependency and propose a new measurement method to estimate the complexity of control coupling, which is the complexity of stubs created for a transitive relationship. We evaluate our integration test order strategy on 10 programs on various scales. The results show that considering the transitive relationship when generating class integration test orders can significantly reduce the stubbing cost for most programs and that our integration test order strategy obtains satisfactory results more quickly than other methods.
C1 [Jiang, Shujuan; Zhang, Yanmei; Wang, Rongcun] China Univ Min & Technol, Digitizat Engn Res Ctr, Minist Educ, Sch Comp Sci & Technol, Xuzhou, Jiangsu, Peoples R China.
   [Zhang, Miao; Keung, Jacky] City Univ Hong Kong, Dept Comp Sci, Kowloon, Peoples R China.
   [Yu, Qiao] Jiangsu Normal Univ, Sch Comp Sci & Technol, Xuzhou 221116, Jiangsu, Peoples R China.
C3 China University of Mining & Technology; City University of Hong Kong;
   Jiangsu Normal University
RP Zhang, YM (corresponding author), China Univ Min & Technol, Digitizat Engn Res Ctr, Minist Educ, Sch Comp Sci & Technol, Xuzhou, Jiangsu, Peoples R China.
EM shjjiang@cumt.edu.cn; miazhang9-c@my.cityu.edu.hk; ymzhang@cumt.edu.cn;
   rcwang@cumt.edu.cn; yuqiao@jsnu.edu.cn; Jacky.Keung@cityu.edu.hk
RI Jiang, Shujuan/K-4178-2012; yu, qiao/KFT-2125-2024; Yu,
   Qiao/IAP-6999-2023
OI Jiang, Shujuan/0000-0003-0643-0565; ZHANG, Miao/0000-0001-9659-9393;
   Keung, Jacky/0000-0002-3803-9600
FU National Natural Science Foundation of China [61673384, 61502497];
   Natural Science Foundation of Jiangsu Province [BK20181353]; General
   Research Fund of the Research Grants Council of Hong Kong [11208017];
   City University of Hong Kong [9678149, 7005028]; Intel [9220097]
FX The authors would like to thank the anonymous reviewers and editors for
   suggesting improvements and for their very helpful comments. This work
   is supported in part by the National Natural Science Foundation of China
   under grant No. 61673384, 61502497; and Natural Science Foundation of
   Jiangsu Province under grant No. BK20181353. Yanmei Zhang is the
   corresponding author. This work is also supported in part by the General
   Research Fund of the Research Grants Council of Hong Kong (No.11208017)
   and the research funds of City University of Hong Kong (9678149 and
   7005028), and the Research Support Fund by Intel (9220097).
CR Abdurazik A., 2006, P 2006 INT WORKSH AU, P50
   Bansal P., 2009, P 2009 INT C METH MO, P1
   Borner L, 2009, 2009 FIRST INTERNATIONAL CONFERENCE ON ADVANCES IN SYSTEM TESTING AND VALIDATION LIFECYCLE, P80, DOI 10.1109/VALID.2009.30
   Briand LC, 2003, IEEE T SOFTWARE ENG, V29, P594, DOI 10.1109/TSE.2003.1214324
   Briand LC., 2002, EXPT GENETIC ALGORIS
   Cabral RD, 2010, LECT NOTES COMPUT SC, V6435, P16, DOI 10.1007/978-3-642-16573-3_3
   FERRANTE J, 1987, ACM T PROGR LANG SYS, V9, P319, DOI 10.1145/24039.24041
   Assunçao WKG, 2014, INFORM SCIENCES, V267, P119, DOI 10.1016/j.ins.2013.12.040
   Guizzo G, 2015, GECCO'15: PROCEEDINGS OF THE 2015 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P1343, DOI 10.1145/2739480.2754725
   Hashim NL, 2005, QSIC 2005: FIFTH INTERNATIONAL CONFERENCE ON QUALITY SOFTWARE, PROCEEDINGS, P11
   Jiang SJ, 2012, INFORMATION-TOKYO, V15, P331
   Kung D, 1995, P INT COMP SOFTW APP, P239, DOI 10.1109/CMPSAC.1995.524786
   KUNG DC, 1995, J OBJECT-ORIENT PROG, V8, P51
   Liu S, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P956, DOI 10.1145/1985793.1985957
   Luckow Kasper, 2014, P 29 ACMIEEE INT C A, P575, DOI [10.1145/2642937.2643011, DOI 10.1145/2642937.2643011]
   Mariani T, 2016, GECCO'16: PROCEEDINGS OF THE 2016 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P1069, DOI 10.1145/2908812.2908816
   Melton H, 2007, EMPIR SOFTW ENG, V12, P389, DOI 10.1007/s10664-006-9033-1
   Spadini D, 2019, EMPIR SOFTW ENG, V24, P1461, DOI 10.1007/s10664-018-9663-0
   Steindl M., 2012, Proceedings of the 2012 10th Workshop on Intelligent Solutions in Embedded Systems (WISES 2012), P63
   Tarjan R., 1972, SIAM Journal on Computing, V1, P146, DOI 10.1137/0201010
   Vergilio Silvia Regina, 2012, International Journal on Software Tools for Technology Transfer, V14, P461, DOI 10.1007/s10009-012-0226-1
   Wang XY, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P291, DOI 10.1145/3180155.3180177
   Wang Y., 2017, IEEE T CIRCUITS-II, V65, P1059
   WILCOXON F, 1945, BIOMETRICS BULL, V1, P80, DOI 10.1093/jee/39.2.269
   Zhang M, 2017, J SYST SOFTWARE, V133, P54, DOI 10.1016/j.jss.2017.08.026
   Zhang Y. M., 2016, CHIN J COMPUT, V39, P1
   Zhengshan Wang, 2010, IEEE 34th Annual Computer Software and Applications Conference Workshops (COMPSACW 2010), P329, DOI 10.1109/COMPSACW.2010.64
NR 27
TC 8
Z9 11
U1 2
U2 26
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUL 1
PY 2021
VL 47
IS 7
BP 1350
EP 1367
DI 10.1109/TSE.2019.2921965
PG 18
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA TJ6XV
UT WOS:000673623000003
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Yu, ZX
   Bai, CG
   Seinturier, L
   Monperrus, M
AF Yu, Zhongxing
   Bai, Chenggang
   Seinturier, Lionel
   Monperrus, Martin
TI Characterizing the Usage, Evolution and Impact of Java Annotations in
   Practice
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Annotations; Java; Tools; Libraries; Runtime; Open source software;
   Annotation; software evolution; empirical study; statistical modelling
AB Annotations have been formally introduced into Java since Java 5. Since then, annotations have been widely used by the Java community for different purposes, such as compiler guidance and runtime processing. Despite the ever-growing use, there is still limited empirical knowledge about the actual usage of annotations in practice, the changes made to annotations during software evolution, and the potential impact of annotations on code quality. To fill this gap, we perform the first large-scale empirical study about Java annotations on 1,094 notable open-source projects hosted on GitHub. Our study systematically investigates annotation usage, annotation evolution, and annotation impact, and generates 10 novel and important findings. We also present the implications of our findings, which shed light for developers, researchers, tool builders, and language or library designers in order to improve all facets of Java annotation engineering.
C1 [Yu, Zhongxing] KTH Royal Inst Technol, S-11428 Stockholm, Sweden.
   [Monperrus, Martin] KTH Royal Inst Technol, Software Technol, S-11428 Stockholm, Sweden.
   [Bai, Chenggang] Beihang Univ, Dept Automat Control, Beijing Univ Aeronaut & Astronaut, Beijing 100191, Peoples R China.
   [Bai, Chenggang] Beihang Univ, Dept Automat Control, Beijing 100191, Peoples R China.
   [Seinturier, Lionel] Inria Lille Nord Europe, F-59650 Villeneuve Dascq, France.
   [Seinturier, Lionel] Univ Lille, Comp Sci, F-59000 Lille, France.
   [Seinturier, Lionel] Univ Lille, Comp Sci Dept, F-59000 Lille, France.
C3 Royal Institute of Technology; Royal Institute of Technology; Beihang
   University; Beihang University; Universite de Lille; Universite de Lille
RP Yu, ZX (corresponding author), KTH Royal Inst Technol, S-11428 Stockholm, Sweden.
EM zhoyu@kth.se; bcg@buaa.edu.cn; Lionel.Seinturier@inria.fr;
   martin.monperrus@csc.kth.se
RI Monperrus, Martin/I-3640-2012; Yu, Zhongxing/AAH-1064-2019
OI Monperrus, Martin/0000-0003-3505-3383; Yu, Zhongxing/0000-0003-3718-8476
FU Wallenberg AI, Autonomous Systems and Software Program (WASP) - Knut and
   Alice Wallenberg Foundation; National Natural Science Foundation of
   China [61772055]; Equipment Preliminary R&D Project of China
   [41402020102]
FX We are grateful to the anonymous reviewers for their insightful
   comments. Zhongxing Yu and Martin Monperrus are partially supported by
   the Wallenberg AI, Autonomous Systems and Software Program (WASP) funded
   by the Knut and Alice Wallenberg Foundation. Chenggang Bai is supported
   in part by the National Natural Science Foundation of China under Grant
   61772055 and Equipment Preliminary R&D Project of China under Grant
   41402020102.
CR [Anonymous], 2014, The Java Language Specification, Java SE
   Barros P, 2015, IEEE INT CONF AUTOM, P669, DOI 10.1109/ASE.2015.69
   Basit H.A., 2005, Proceedings of the 17th International Conference on Software Engineering and Knowledge Engineering, SEKE, P109
   Bird C., 2011, P 19 ACM SIGSOFT S 1, P4, DOI DOI 10.1145/2025113.2025119
   Casalnuovo C, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P755, DOI 10.1109/ICSE.2015.88
   Coblenz M, 2017, PROC INT CONF SOFTW, P496, DOI 10.1109/ICSE.2017.52
   Cohen J., 1975, Applied multiple correlation/regression analysis for the social sciences
   Devanbu P, 2016, PROC INT CONF SOFTW, P108, DOI 10.1145/2884781.2884812
   Dietl W, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P681, DOI 10.1145/1985793.1985889
   Dietrich Jens, 2017, EUR C OBJ OR PROGR, V9, P1, DOI [10.4230/LIPIcs.ECOOP.2017.9, DOI 10.4230/LIPICS.ECOOP.2017.9]
   Dyer R, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P779, DOI 10.1145/2568225.2568295
   Emam KE, 2001, IEEE T SOFTWARE ENG, V27, P630, DOI 10.1109/32.935855
   Ernst MD, 2016, PROC INT CONF SOFTW, P1133, DOI 10.1145/2884781.2884882
   Evans D, 1996, ACM SIGPLAN NOTICES, V31, P44, DOI 10.1145/249069.231389
   Falleri Jean-Remy, 2014, P 29 ACM IEEE INT C, P313
   Flanagan C, 2002, ACM SIGPLAN NOTICES, V37, P234, DOI 10.1145/543552.512558
   Gosling J., 2005, Java Language Specification, Vthird
   Gosling J., 2000, The Java Language Specification
   Grechanik M., 2010, P 2010 ACM IEEE INT, P11
   Guerra E., 2016, P 11 LAT AM C PATT L, P1
   Hasan S, 2016, PROC INT CONF SOFTW, P225, DOI 10.1145/2884781.2884869
   Hoppe M, 2013, ACM SIGPLAN NOTICES, V48, P457, DOI [10.1145/2509136.2509528, 10.1145/2544173.2509528]
   Hu MC, 2011, AM J DRUG ALCOHOL AB, V37, P367, DOI 10.3109/00952990.2011.597280
   Huang W, 2012, ACM SIGPLAN NOTICES, V47, P879, DOI 10.1145/2398857.2384680
   John S. G. P., APPL REGRESSIONANALY
   Josh J., 2017, PROJECT LOMBOK CLEAN
   Jungle T., 2018, ANNOTATIONS ITS BENE
   Kalliamvakou E, 2016, EMPIR SOFTW ENG, V21, P2035, DOI 10.1007/s10664-015-9393-5
   Khurshid S, 2002, ACM SIGPLAN NOTICES, V37, P231, DOI 10.1145/583854.582441
   Kochhar PS, 2017, Proceedings of the 21st International Conference on Evaluation and Assessment in Software Engineering, P298
   Landman D, 2017, PROC INT CONF SOFTW, P507, DOI 10.1109/ICSE.2017.53
   LUCKHAM DC, 1985, IEEE SOFTWARE, V2, P9, DOI 10.1109/MS.1985.230345
   Manning CD, 2014, PROCEEDINGS OF 52ND ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS: SYSTEM DEMONSTRATIONS, P55, DOI 10.3115/v1/p14-5010
   Mazinanian D, 2017, P ACM PROGRAM LANG, V1, DOI 10.1145/3133909
   Microsoft, 2015, SAL ANN
   Mockus A, 2000, PROC IEEE INT CONF S, P120, DOI 10.1109/ICSM.2000.883028
   Nagappan N, 2005, PROC INT CONF SOFTW, P284, DOI 10.1145/1062455.1062514
   Oracle, 2017, ANN TYP SUPPR
   Oracle, 2017, LESS ANN
   Oracle, 2018, ANN
   Overflow S., 2018, ARG ANN
   Papi Matthew M., 2008, INT S SOFT TEST AN I, P201
   Parnin C, 2013, EMPIR SOFTW ENG, V18, P1047, DOI 10.1007/s10664-012-9236-6
   Pawlak R, 2016, SOFTWARE PRACT EXPER, V46, P1155, DOI 10.1002/spe.2346
   Rahman F, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P491, DOI 10.1145/1985793.1985860
   Ray B, 2016, PROC INT CONF SOFTW, P428, DOI 10.1145/2884781.2884848
   Ray B, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P155, DOI 10.1145/2635868.2635922
   Riegler G., 2018, BE BETTER DEVELOPER
   Rocha M. T., 2011, 23 INT C SOFTW ENG K, P426
   Tan L, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P11, DOI 10.1145/1985793.1985796
   Tempero E, 2008, LECT NOTES COMPUT SC, V5142, P667, DOI 10.1007/978-3-540-70592-5_28
   Tempero E, 2009, IEEE AUS SOFT ENGR, P91, DOI 10.1109/ASWEC.2009.19
   Torvalds L., 2018, SPARSE A SEMANTIC PA
   Zhang HY, 2015, ACM SIGPLAN NOTICES, V50, P127, DOI [10.1145/2858965.2814279, 10.1145/2814270.2814279]
NR 54
TC 14
Z9 15
U1 6
U2 40
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAY 1
PY 2021
VL 47
IS 5
BP 969
EP 986
DI 10.1109/TSE.2019.2910516
PG 18
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA SC1RN
UT WOS:000650457700007
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Werner, C
   Li, ZS
   Lowlind, D
   Elazhary, O
   Ernst, N
   Damian, D
AF Werner, Colin
   Li, Ze Shi
   Lowlind, Derek
   Elazhary, Omar
   Ernst, Neil
   Damian, Daniela
TI Continuously Managing NFRs: Opportunities and Challenges in Practice
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Organizations; Software; Software engineering; Testing; Tools;
   Requirements engineering; Interviews; Non-functional requirements;
   continuous software engineering
ID REQUIREMENTS ENGINEERING PRACTICES; SOFTWARE; AGILE; DEPLOYMENT; DRIVEN
AB Non-functional requirements (NFR), which include performance, availability, and maintainability, are vitally important to overall software quality. However, research has shown NFRs are, in practice, poorly defined and difficult to verify. Continuous software engineering practices, which extend agile practices, emphasize fast paced, automated, and rapid release of software that poses additional challenges to handling NFRs. In this multi-case study we empirically investigated how three organizations, for which NFRs are paramount to their business survival, manage NFRs in their continuous practices. We describe four practices these companies use to manage NFRs, such as offloading NFRs to cloud providers or the use of metrics and continuous monitoring, both of which enable almost real-time feedback on managing the NFRs. However, managing NFRs comes at a cost-as we also identified a number of challenges these organizations face while managing NFRs in their continuous software engineering practices. For example, the organizations in our study were able to realize an NFR by strategically and heavily investing in configuration management and infrastructure as code, in order to offload the responsibility of NFRs; however, this offloading implied potential loss of control. Our discussion and key research implications show the opportunities, trade-offs, and importance of the unique give-and-take relationship between continuous software engineering and NFRs. Research artifacts may be found at https://doi.org/10.5281/zenodo.3376342.
C1 [Werner, Colin; Li, Ze Shi; Lowlind, Derek; Elazhary, Omar; Ernst, Neil; Damian, Daniela] Univ Victoria, Victoria, BC V8P 5C2, Canada.
C3 University of Victoria
RP Werner, C (corresponding author), Univ Victoria, Victoria, BC V8P 5C2, Canada.
EM colinwerner@uvic.ca; lize@uvic.ca; dereklowlind@uvic.ca;
   omazhary@uvic.ca; nernst@uvic.ca; danielad@uvic.ca
OI Damian, Daniela/0000-0003-0826-5460; Werner, Colin/0000-0002-4541-7796;
   Lowlind, Derek/0000-0002-0307-9020
FU Natural Sciences and Engineering Research Council of Canada [NSERC-CRD
   535876]
FX We thank our three partner organizations for their time and
   collaboration. This work was supported by the Natural Sciences and
   Engineering Research Council of Canada under Grant NSERC-CRD 535876.
CR Alsaqaf W, 2019, INFORM SOFTWARE TECH, V110, P39, DOI 10.1016/j.infsof.2019.01.009
   Anderson M., 2019, THESIS U VICTORIA BC
   Anisetti M, 2020, J PARALLEL DISTR COM, V135, P203, DOI 10.1016/j.jpdc.2019.09.003
   [Anonymous], 2002, CASE STUDY RES DESIG
   Aranda J, 2007, INT REQUIR ENG CONF, P39, DOI 10.1109/RE.2007.54
   Barbacci M. R., 2003, TR016 CARN MELL U
   Basiri A, 2016, IEEE SOFTWARE, V33, P35, DOI 10.1109/MS.2016.60
   Bass L., 1997, SOFTWARE ARCHITECTUR
   Behutiye W, 2020, INFORM SOFTWARE TECH, V123, DOI 10.1016/j.infsof.2019.106225
   Behutiye W, 2017, LECT NOTES COMPUT SC, V10611, P515, DOI 10.1007/978-3-319-69926-4_41
   Bellomo S, 2014, PROC IEEE INT CONF S, P545, DOI 10.1109/ICSME.2014.91
   Benlian A, 2011, DECIS SUPPORT SYST, V52, P232, DOI 10.1016/j.dss.2011.07.007
   Bittner EAC, 2013, P ANN HICSS, P106, DOI 10.1109/HICSS.2013.608
   Borg A., 2003, Proceedings of the 3rd Conference on Software Engineering Research and Practice in Sweden (SERPS'03), P1
   Bosch J., 2014, CONTINUOUS SOFTWARE, P3
   Boyatzis R.E., 1998, TRANSFORMING QUALITA
   Cao L, 2008, IEEE SOFTWARE, V25, P60, DOI 10.1109/MS.2008.1
   Caracciolo A, 2014, LECT NOTES COMPUT SC, V8627, P374, DOI 10.1007/978-3-319-09970-5_32
   Chen F, 2014, INT REQUIR ENG CONF, P451, DOI 10.1109/RE.2014.6912297
   Chen LP, 2013, IEEE SOFTWARE, V30, P38, DOI 10.1109/MS.2012.174
   CORBIN J, 1990, Z SOZIOL, V19, P418, DOI 10.1007/BF00988593
   Cosentino V, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P499, DOI 10.1109/SANER.2015.7081864
   Cruzes DS, 2011, INT SYMP EMP SOFTWAR, P275, DOI 10.1109/ESEM.2011.36
   Cusumano M, 2010, COMMUN ACM, V53, P27, DOI 10.1145/1721654.1721667
   Easterbrook S., 2008, GUIDE ADV EMPIRICAL, P285, DOI [DOI 10.1007/978-1-84800-044-5_11, DOI 10.1007/978-1-84800-044-511]
   Eckhardt J, 2016, PROC INT CONF SOFTW, P832, DOI 10.1145/2884781.2884788
   Ernst N. A., 2012, Proceedings of the 2012 IEEE Second International Workshop on Empirical Requirements Engineering (EmpiRE), P25, DOI 10.1109/EmpiRE.2012.6347678
   Fitzgerald B., 2014, P 1 INT WORKSH RAP C, P1, DOI DOI 10.1145/2593812.2593813
   Fitzgerald B, 2017, J SYST SOFTWARE, V123, P176, DOI 10.1016/j.jss.2015.06.063
   Fowler M., 2006, Continuous integration
   Glinz M, 2007, INT REQUIR ENG CONF, P21, DOI 10.1109/RE.2007.45
   Glinz M, 2015, COMPUT SCI-RES DEV, V30, P363, DOI 10.1007/s00450-014-0256-x
   Gralha C, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P823, DOI 10.1145/3180155.3180158
   Greenstein S.M., 1997, IND CORP CHANGE, V6, P247, DOI DOI 10.1093/ICC/6.2.247
   Groen EC, 2017, IEEE SOFTWARE, V34, P44, DOI 10.1109/MS.2017.33
   Guerriero M, 2019, PROC IEEE INT CONF S, P580, DOI 10.1109/ICSME.2019.00092
   Gupta S, 2018, 2018 IEEE 15TH INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE (ICSA), P1, DOI 10.1109/ICSA.2018.00009
   Hilton M, 2016, IEEE INT CONF AUTOM, P426, DOI 10.1145/2970276.2970358
   Humble J., 2018, ACCELERATE SCI LEAN
   Humble Jez, 2010, Continuous Delivery: Reliable Software Releases through Build, Test, and Deployment Automation
   Inayat I, 2015, COMPUT HUM BEHAV, V51, P915, DOI 10.1016/j.chb.2014.10.046
   Leppanen Marko, 2015, IEEE Software, V32, P64, DOI 10.1109/MS.2015.50
   Maalej W, 2016, IEEE SOFTWARE, V33, P48, DOI 10.1109/MS.2015.153
   Mann ZA, 2017, IEEE ACM INT SYMP, P609, DOI 10.1109/CCGRID.2017.10
   Mattos DI, 2020, EUROMICRO CONF PROC, P101, DOI 10.1109/SEAA51224.2020.00026
   Fernández DM, 2018, IEEE SOFTWARE, V35, P112, DOI 10.1109/MS.2017.4541045
   Miles M.B., 2014, Qualitative data analysis: A methods sourcebook, V3rd
   Misaghian N, 2018, REQUIR ENG, V23, P169, DOI 10.1007/s00766-016-0262-6
   Neely S, 2013, 2013 AGILE CONFERENCE (AGILE), P121, DOI 10.1109/AGILE.2013.17
   Nilsson Agneta., 2014, Agile Processes in Software Engineering and Extreme Programming, volume 179 of Lecture Notes in Business Information Processing, V179, P171
   Nouacer R, 2016, MICROPROCESS MICROSY, V47, P252, DOI 10.1016/j.micpro.2016.07.020
   Nuseibeh B., 2000, P C FUTURE SOFTWARE, P35, DOI [10.1145/336512.336523, DOI 10.1145/336512.336523]
   Ocean D., CURRENTS Q REPORT DE
   Opara-Martins J, 2016, J CLOUD COMPUT-ADV S, V5, DOI 10.1186/s13677-016-0054-z
   Opara-Martins J, 2014, 2014 INTERNATIONAL CONFERENCE ON INFORMATION SOCIETY (I-SOCIETY 2014), P92, DOI 10.1109/i-Society.2014.7009018
   Pahl C, 2018, ACM T INTERNET TECHN, V18, DOI 10.1145/3104028
   Petersen K, 2010, EMPIR SOFTW ENG, V15, P654, DOI 10.1007/s10664-010-9136-6
   POTTS C, 1993, IEEE SOFTWARE, V10, P19, DOI 10.1109/52.232392
   Rahman A, 2019, PROC INT CONF SOFTW, P164, DOI 10.1109/ICSE.2019.00033
   Ramesh B, 2010, INFORM SYST J, V20, P449, DOI 10.1111/j.1365-2575.2007.00259.x
   Rath M, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P834, DOI 10.1145/3180155.3180207
   Rehmann Kim-Thomas, 2016, ACM SIGMETRICS Performance Evaluation Review, V43, P43, DOI 10.1145/2897356.2897362
   Ries E, 2011, The Lean Startup
   Roller M.R., 2015, APPL QUALITATIVE RES
   Saatkamp K., 2017, PROC 7 INT C CLOUD C, P275
   Savor T, 2016, 2016 IEEE/ACM 38TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING COMPANION (ICSE-C), P21, DOI 10.1145/2889160.2889223
   Schön EM, 2017, COMPUT STAND INTER, V49, P79, DOI 10.1016/j.csi.2016.08.011
   Schwarz J, 2018, 2018 11TH INTERNATIONAL CONFERENCE ON THE QUALITY OF INFORMATION AND COMMUNICATIONS TECHNOLOGY (QUATIC), P220, DOI 10.1109/QUATIC.2018.00040
   Seaman CB, 1999, IEEE T SOFTWARE ENG, V25, P557, DOI 10.1109/32.799955
   Shu R, 2017, PROCEEDINGS OF THE SEVENTH ACM CONFERENCE ON DATA AND APPLICATION SECURITY AND PRIVACY (CODASPY'17), P269, DOI 10.1145/3029806.3029832
   SIMON HA, 1956, PSYCHOL REV, V63, P129, DOI 10.1037/h0042769
   Soni M, 2016, IEEE CONF CLOUD COMP, P85, DOI 10.1109/CCEM.2015.29
   Ståhl D, 2017, EMPIR SOFTW ENG, V22, P967, DOI 10.1007/s10664-016-9457-1
   Sutcliffe A, 2013, S VIS LANG HUM CEN C, P92, DOI 10.1109/RE.2013.6636709
   Targett E., 2018, AMAZON OUTAGE ESTIMA
   Wagner Stefan., 2006, ISESE '06: Proceedings of the 2006 ACM/IEEE international symposium on Empirical software engineering, P194
   Wagner Stefan, 2017, PROC IBERO AM C SOFT
   Werner C, 2020, INT REQUIR ENG CONF, P90, DOI 10.1109/RE48521.2020.00021
   Ying ATT, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P460, DOI 10.1145/2635868.2635877
   Yu ESK, 1997, RE '97 - PROCEEDINGS OF THE THIRD IEEE INTERNATIONAL SYMPOSIUM ON REQUIREMENTS ENGINEERING, P226, DOI 10.1109/ISRE.1997.566873
   Yu L, 2020, INFORM SOFTWARE TECH, V117, DOI 10.1016/j.infsof.2019.106199
NR 81
TC 12
Z9 12
U1 0
U2 1
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAR 17
PY 2021
VL 48
IS 7
BP 2629
EP 2642
DI 10.1109/TSE.2021.3066330
PG 14
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 2Y5YY
UT WOS:000825973400002
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Valero, V
   Diaz, G
   Boubeta-Puig, J
   Macia, H
   Brazalez, E
AF Valero, Valentin
   Diaz, Gregorio
   Boubeta-Puig, Juan
   Macia, Hermenegilda
   Brazalez, Enrique
TI A Compositional Approach for Complex Event Pattern Modeling and
   Transformation to Colored Petri Nets with Black Sequencing Transitions
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Analytical models; Tools; Semantics; Petri nets; Sequential analysis;
   Syntactics; Image color analysis; Colored Petri nets; CEP; EPL;
   compositional modeling; model-driven development
AB Prioritized Colored Petri Nets (PCPNs) are a well-known extension of plain Petri nets in which transitions can have priorities and the tokens on the places carry data information. In this paper, we propose an extension of the PCPN model with black sequencing transitions (BPCPN). This extension allows us to easily model the ordered firing of the same transition using an ordered set of tokens on one of its precondition places. Black sequencing transitions are then presented as a shorthand notation in order to model the processing of a flow of events, represented by one of their precondition places. We then show how black sequencing transitions can be encoded into PCPNs, and their application to model Complex Event Processing (CEP), defining a compositional approach to translate some of the most relevant event pattern operators. We have developed MEdit4CEP-BPCPN, an extension of the MEdit4CEP tool, to provide tool support for this novel technique, thus allowing end users to easily define event patterns and obtain an automatic translation into BPCPNs. This can, in turn, be transformed into a corresponding PCPN, and then be immediately used in CPN Tools. Finally, a health case study concerning the monitoring of pregnant women is considered to illustrate how the event patterns are created and how the BPCPN and PCPN models are obtained by using the MEdit4CEP-BPCPN tool.
C1 [Valero, Valentin; Diaz, Gregorio; Brazalez, Enrique] Univ Castilla La Mancha, Albacete Res Inst Informat, Dept Comp Sci, Albacete 02071, Spain.
   [Boubeta-Puig, Juan] Univ Cadiz, Dept Comp Sci & Engn, Cadiz 11519, Spain.
   [Macia, Hermenegilda] Univ Castilla La Mancha, Dept Math, Albacete 02071, Spain.
   [Macia, Hermenegilda] Univ Castilla La Mancha, Albacete Res Inst Informat, Albacete 02071, Spain.
C3 Universidad de Castilla-La Mancha; Universidad de Cadiz; Universidad de
   Castilla-La Mancha; Universidad de Castilla-La Mancha
RP Diaz, G (corresponding author), Univ Castilla La Mancha, Albacete Res Inst Informat, Dept Comp Sci, Albacete 02071, Spain.
EM valentin.zulero@uclm.es; gregorio.diaz@uclm.es; juan.boubeta@uca.es;
   Hermenegilda.Macia@uclm.es; enrique.brawlez@uclm.es
RI Boubeta-Puig, Juan/L-9429-2014; Valero, Valentin/G-8268-2015;
   Diaz-Descalzo, Gregorio/H-9912-2015; Macia, Hermenegilda/H-8497-2015
OI Boubeta-Puig, Juan/0000-0002-8989-7509; Valero,
   Valentin/0000-0003-3462-7656; Diaz-Descalzo,
   Gregorio/0000-0002-9116-9535; Macia, Hermenegilda/0000-0003-1462-5274;
   Brazalez, Enrique/0000-0001-6039-3051
FU Spanish Ministry of Science, Innovation and Universities; European Union
   FEDER funds [RTI2018-093608-B-C32, RTI2018093608-B-C33,
   SBPLY/17/180501/000276]; UCLM group research grant [2020-GRIN28708.];
   JCCM project
FX This work was supported by the Spanish Ministry of Science, Innovation
   and Universities and the European Union FEDER funds under Grants
   RTI2018-093608-B-C32 and RTI2018093608-B-C33, the JCCM project
   cofinanced with European Union FEDER funds, ref. SBPLY/17/180501/000276,
   and the UCLM group research grant with reference 2020-GRIN28708.
CR Agrawal J., 2008, SIGMOD 08, P147, DOI DOI 10.1145/1376616.1376634
   Ahmad W, 2012, IEEE INTL CONF IND I, P380, DOI 10.1109/INDIN.2012.6301058
   Al Bassit A, 2019, DEBS'19: PROCEEDINGS OF THE 13TH ACM INTERNATIONAL CONFERENCE ON DISTRIBUTED AND EVENT-BASED SYSTEMS, P91, DOI 10.1145/3328905.3329501
   Bok K, 2018, SENSORS-BASEL, V18, DOI 10.3390/s18093084
   Boubera-Puig J, 2014, EXPERT SYST APPL, V41, P445, DOI 10.1016/j.eswa.2013.07.070
   Boubeta-Puig J, 2019, INFORM SYST, V81, P267, DOI 10.1016/j.is.2017.11.005
   Boubeta-Puig J, 2015, KNOWL-BASED SYST, V89, P97, DOI 10.1016/j.knosys.2015.06.021
   Boubeta-Puig J, 2015, EXPERT SYST APPL, V42, P8095, DOI 10.1016/j.eswa.2015.06.045
   Calvo I, 2019, J INTELL FUZZY SYST, V37, P7389, DOI 10.3233/JIFS-179348
   Carle P, 2013, ASIA PAC SOFWR ENG, P323, DOI 10.1109/APSEC.2013.51
   CPN-Group, CPN TOOLS HOM
   Cugola G., 2010, P 4 ACM INT C DISTR, P50
   Czepa C, 2020, IEEE T SOFTWARE ENG, V46, P100, DOI 10.1109/TSE.2018.2859926
   Díaz G, 2020, NEURAL COMPUT APPL, V32, P405, DOI 10.1007/s00521-018-3850-1
   Díaz G, 2019, SCI PROGRAMMING-NETH, V2019, DOI 10.1155/2019/2604148
   Díaz G, 2019, LECT NOTES COMPUT SC, V11506, P729, DOI 10.1007/978-3-030-20521-8_60
   Eclipse Foundation, 2021, EPSILON
   Ericsson A., 2007, Proceedings of the 2007 inaugural international conference on Distributed event-based systems, P50
   Ericsson AnnMarie., 2007, Proceedings of the 2007 Inaugural International Conference on Distributed Event-based Systems - DEBS'07, P71
   Giatrakos N, 2020, VLDB J, V29, P313, DOI 10.1007/s00778-019-00557-w
   Gomez A., 2008, IEEE Latin America Transactions, V6, P324, DOI 10.1109/TLA.2008.4815285
   Gyllstrom D, 2008, PROC INT CONF DATA, P1391, DOI 10.1109/ICDE.2008.4497566
   Hafidi Y, 2020, IEEE T SYST MAN CY-S, V50, P3577, DOI 10.1109/TSMC.2018.2855209
   Hanisch H.-M., 1993, Applications and Theory of Petri Nets 1993. 14th International Conference Proceedings, P282
   Hanisch HM, 1997, ETFA '97 - 1997 IEEE 6TH INTERNATIONAL CONFERENCE ON EMERGING TECHNOLOGIES AND FACTORY AUTOMATION PROCEEDINGS, P391, DOI 10.1109/ETFA.1997.616302
   Hierons RM, 2018, IEEE T RELIAB, V67, P522, DOI 10.1109/TR.2018.2800093
   Hinze A, 2015, INFORM SYST, V48, P1, DOI 10.1016/j.is.2014.07.003
   Jensen Kurt, 2007, International Journal on Software Tools for Technology Transfer, V9, P213, DOI 10.1007/s10009-007-0038-x
   Jensen K, 1996, Coloured petri nets: basic concepts, analysis methods and practical use, DOI [10.1007/978-3-662-03241-1, DOI 10.1007/978-3-662-03241-1, 10.1007/978-3-662-06289-0, DOI 10.1007/978-3-662-06289-0]
   Jensen K, 2009, COLOURED PETRI NETS: MODELLING AND VALIDATION OF CONCURRENT SYSTEMS, P1, DOI 10.1007/b95112
   Kahloul L, 2016, INT J COMPUT INTEG M, V29, P889, DOI 10.1080/0951192X.2015.1130262
   Lorbeer J. U., 2018, P CEUR WORKSH P, V2060, P167
   Luckham D, 2012, EVENT PROCESSING FOR BUSINESS: ORGANIZING THE REAL-TIME ENTERPRISE, P1
   Luckham David C., 2001, POWER EVENTS INTRO C
   Macià H, 2016, IEEE ACCESS, V4, P7425, DOI 10.1109/ACCESS.2016.2621718
   Mandal S, 2017, LECT NOTES BUS INF P, V297, P141, DOI 10.1007/978-3-319-65015-9_9
   Offel M., 2018, P C LERN WISS DAT AN, P281
   Peterson J.L., 1981, Petri Net Theory and the Modeling of Systems
   Rausch M., 1995, Proceedings 1995 INRIA/IEEE Symposium on Emerging Technologies and Factory Automation. ETFA'95 (Cat. No.95TH8056), P592, DOI 10.1109/ETFA.1995.496811
   Robidoux R, 2010, IEEE T SYST MAN CY A, V40, P337, DOI 10.1109/TSMCA.2009.2034837
   Tax Niek, 2016, Journal of Innovation in Digital Ecosystems, V3, P183, DOI 10.1016/j.jides.2016.11.001
   Valero Ruiz V., 1999, Proceedings 8th International Workshop on Petri Nets and Performance Models (Cat. No.PR00331), P188, DOI 10.1109/PNPM.1999.796565
   Valero V, 2009, J LOGIC ALGEBR PROGR, V78, P359, DOI 10.1016/j.jlap.2008.09.002
   van der Aalst Wil M. P., 2013, Transactions on Petri Nets and Other Models of Concurrency VII, P6, DOI 10.1007/978-3-642-38143-0_2
   Wang L, 2019, IEEE-CAA J AUTOMATIC, V6, P1352, DOI 10.1109/JAS.2019.1911750
   Weidlich Matthias, 2013, Application and Theory of Petri Nets and Concurrency. 34th International Conference, PETRI NETS 2013. Proceedings: LNCS 7927, P270, DOI 10.1007/978-3-642-38697-8_15
   Westergaard M, 2009, LECT NOTES COMPUT SC, V5606, P313, DOI 10.1007/978-3-642-02424-5_19
NR 47
TC 7
Z9 7
U1 0
U2 5
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAR 11
PY 2021
VL 48
IS 7
BP 2584
EP 2605
DI 10.1109/TSE.2021.3065584
PG 22
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 2Y5ZG
UT WOS:000825974200001
OA Green Submitted, Green Published, hybrid
DA 2024-07-18
ER

PT J
AU Murphy-Hill, E
   Jaspan, C
   Sadowski, C
   Shepherd, D
   Phillips, M
   Winter, C
   Knight, A
   Smith, E
   Jorde, M
AF Murphy-Hill, Emerson
   Jaspan, Ciera
   Sadowski, Caitlin
   Shepherd, David
   Phillips, Michael
   Winter, Collin
   Knight, Andrea
   Smith, Edward
   Jorde, Matthew
TI What Predicts Software Developers' Productivity?
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Productivity; Software; Companies; Google; Tools; Task analysis; Time
   measurement; Productivity factors; software engineers; knowledge workers
AB Organizations have a variety of options to help their software developers become their most productive selves, from modifying office layouts, to investing in better tools, to cleaning up the source code. But which options will have the biggest impact? Drawing from the literature in software engineering and industrial/organizational psychology to identify factors that correlate with productivity, we designed a survey that asked 622 developers across 3 companies about these productivity factors and about self-rated productivity. Our results suggest that the factors that most strongly correlate with self-rated productivity were non-technical factors, such as job enthusiasm, peer support for new ideas, and receiving useful feedback about job performance. Compared to other knowledge workers, our results also suggest that software developers' self-rated productivity is more strongly related to task variety and ability to work remotely.
C1 [Murphy-Hill, Emerson; Jaspan, Ciera; Knight, Andrea; Jorde, Matthew] Google Inc, Developer Infrastruct, Sunnyvale, CA 94089 USA.
   [Sadowski, Caitlin] Google Inc, Chrome, Mountain View, CA 94043 USA.
   [Shepherd, David] ABB Inc, ISS SWE, Raleigh, NC 27606 USA.
   [Phillips, Michael] Natl Instruments Corp, Res & Dev, Austin, TX 78759 USA.
   [Winter, Collin] Waymo, Mountain View, CA 94043 USA.
   [Smith, Edward] Bloomberg LP, Bloomberg, New York, NY 10022 USA.
C3 Google Incorporated; Google Incorporated; ABB; National Instruments
   Corporation; Bloomberg L.P.
RP Murphy-Hill, E (corresponding author), Google Inc, Developer Infrastruct, Sunnyvale, CA 94089 USA.
EM emerson@csc.ncsu.edu; ciera@google.com; supertri@google.com;
   david.shepherd@us.abb.com; michael.phillips@ni.com;
   collinwinter@waymo.com; aknight@google.com; tedks@riseup.net;
   majorde@google.com
OI Shepherd, David C./0000-0003-2017-7842; Phillips,
   Michael/0000-0003-4571-1722
CR [Anonymous], 2006, P SIGCHI C HUM FACT, DOI DOI 10.1145/1124772.1124808
   Antikainen R., 2005, 3 C PERF MEAS MAN NI
   BAILY MN, 1992, BROOKINGS PAP ECO AC, P187
   BENJAMINI Y, 1995, J R STAT SOC B, V57, P289, DOI 10.1111/j.2517-6161.1995.tb02031.x
   Blackburn JD, 1996, IEEE T SOFTWARE ENG, V22, P875, DOI 10.1109/32.553636
   Brown JS, 2000, HARVARD BUS REV, V78, P73
   CAMPION MA, 1993, PERS PSYCHOL, V46, P823, DOI 10.1111/j.1744-6570.1993.tb01571.x
   Clark B, 1998, PROC INT CONF SOFTW, P477, DOI 10.1109/ICSE.1998.671610
   DeMarco T., 1985, Proceedings of the 8th International Conference on Software Engineering (Cat. No.85CH2139-4), P268
   Duarte CHC, 2017, EMPIR SOFTW ENG, V22, P818, DOI 10.1007/s10664-016-9453-5
   Finnie G. R., 1994, South African Computer Journal, P18
   FISHER RJ, 1993, J CONSUM RES, V20, P303, DOI 10.1086/209351
   Foulds LR, 2007, 6TH IEEE/ACIS INTERNATIONAL CONFERENCE ON COMPUTER AND INFORMATION SCIENCE, PROCEEDINGS, P724, DOI 10.1109/ICIS.2007.174
   Galesic M, 2009, PUBLIC OPIN QUART, V73, P349, DOI 10.1093/poq/nfp031
   GILL GK, 1991, IEEE T SOFTWARE ENG, V17, P1284, DOI 10.1109/32.106988
   Graziotin D, 2014, PEERJ, V2, DOI 10.7717/peerj.289
   GUZZO RA, 1985, PERS PSYCHOL, V38, P275, DOI 10.1111/j.1744-6570.1985.tb00547.x
   Hernaus T., 2010, THESIS
   Hernaus T, 2014, EUROMED J BUS, V9, P268, DOI 10.1108/EMJB-11-2013-0054
   IDASZAK JR, 1987, J APPL PSYCHOL, V72, P69, DOI 10.1037/0021-9010.72.1.69
   JEFFERY DR, 1987, J SYST SOFTWARE, V7, P115, DOI 10.1016/0164-1212(87)90016-1
   Kersten Mik, 2006, P 14 ACM SIGSOFT INT, P1
   KIDD A, 1994, HUMAN FACTORS IN COMPUTING SYSTEMS, CHI '94 CONFERENCE PROCEEDINGS - CELEBRATING INTERDEPENDENCE, P186, DOI 10.1145/191666.191740
   Kitchenham B, 2004, IEEE T SOFTWARE ENG, V30, P1023, DOI 10.1109/TSE.2004.104
   Kompaso S. M., 2010, International Journal of Business and Management, V5, DOI [10.5539/ijbm.v5n12p89, DOI 10.5539/IJBM.V5N12P89]
   London M., 2002, HUM RESOUR MANAGE R, V12, P81, DOI [10.1016/S1053-4822(01)00043-2, DOI 10.1016/S1053-4822(01)00043-2, 10.1016/s1053-4822(01)00043-2]
   Maxwell KD, 1996, IEEE T SOFTWARE ENG, V22, P706, DOI 10.1109/32.544349
   Meade AW, 2012, PSYCHOL METHODS, V17, P437, DOI 10.1037/a0028085
   Melitz MJ, 2003, ECONOMETRICA, V71, P1695, DOI 10.1111/1468-0262.00467
   Meyer AN, 2017, IEEE T SOFTWARE ENG, V43, P1178, DOI 10.1109/TSE.2017.2656886
   Meyer AN, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P19, DOI 10.1145/2635868.2635892
   Morgeson FP, 2006, J APPL PSYCHOL, V91, P1321, DOI 10.1037/0021-9010.91.6.1321
   Moser S, 1996, COMPUTER, V29, P45, DOI 10.1109/2.536783
   Nickerson R. S., 1998, REV GEN PSYCHOL, V2, P175, DOI DOI 10.1037/1089-2680.2.2.175
   Noll J., 2017, Motivation and autonomy in global software development: an empirical study, P394
   Palvalin M, 2015, INT J PRODUCT PERFOR, V64, P479, DOI 10.1108/IJPPM-06-2013-0122
   Parnin C, 2011, SOFTWARE QUAL J, V19, P5, DOI 10.1007/s11219-010-9104-9
   Parnin C, 2010, CHI2010: PROCEEDINGS OF THE 28TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, VOLS 1-4, P93
   Petersen K, 2011, INFORM SOFTWARE TECH, V53, P317, DOI 10.1016/j.infsof.2010.12.001
   PFLEEGER SL, 1991, INFORM SOFTWARE TECH, V33, P224, DOI 10.1016/0950-5849(91)90137-Z
   Ramirez Y.W., 2004, Journal of Intellectual Capital, V5, P602, DOI [10.1108/14691930410567040, DOI 10.1108/14691930410567040]
   Rubin D.B., 2004, MULTIPLE IMPUTATION, V81
   Savor T, 2016, 2016 IEEE/ACM 38TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING COMPANION (ICSE-C), P21, DOI 10.1145/2889160.2889223
   Smith E, 2013, 2013 6TH INTERNATIONAL WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING (CHASE), P89, DOI 10.1109/CHASE.2013.6614738
   Snipes W, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE COMPANION 2014), P105, DOI 10.1145/2591062.2591171
   Vasilescu B, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P805, DOI 10.1145/2786805.2786850
   Wagner S., 2008, Software Productivity Analysis and Cost Estimation (SPACE 2008), P1
   Zelenski JM, 2008, J HAPPINESS STUD, V9, P521, DOI 10.1007/s10902-008-9087-4
NR 48
TC 32
Z9 33
U1 2
U2 22
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAR 1
PY 2021
VL 47
IS 3
BP 582
EP 594
DI 10.1109/TSE.2019.2900308
PG 13
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA RA1TM
UT WOS:000631200300007
DA 2024-07-18
ER

PT J
AU Wang, HY
   Xu, C
   Guo, BY
   Ma, XX
   Lu, J
AF Wang, Huiyan
   Xu, Chang
   Guo, Bingying
   Ma, Xiaoxing
   Lu, Jian
TI Generic Adaptive Scheduling for Efficient Context Inconsistency
   Detection
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Context inconsistency detection; consistency constraint; scheduling
   strategy; susceptibility; cancellation condition
ID GENETIC ALGORITHM; SYSTEMS; MOBILE; SOFTWARE
AB Many applications use contexts to understand their environments and make adaptation. However, contexts are often inaccurate or even conflicting with each other (a.k.a. context inconsistency). To prevent applications from behaving abnormally or even failing, one promising approach is to deploy constraint checking to detect context inconsistencies. A variety of constraint checking techniques have been proposed, based on different incremental or parallel mechanisms for the efficiency. They are commonly deployed with the strategy that schedules constraint checking immediately upon context changes. This assures no missed inconsistency, but also limits the detection efficiency. One may break the limit by grouping context changes for checking together, but this can cause severe inconsistency missing problem (up to 79.2 percent). In this article, we propose a novel strategy GEAS to isolate latent interferences among context changes and schedule constraint checking with adaptive group sizes. This makes GEAS not only improve the detection efficiency, but also assure no missed inconsistency with theoretical guarantee. We experimentally evaluated GEAS with large-volume real-world context data. The results show that GEAS achieved significant efficiency gains for context inconsistency detection by 38.8-566.7 percent (or 1.4x-6.7x). When enhanced with an extended change-cancellation optimization, the gains were up to 2,755.9 percent (or 28.6x).
C1 [Wang, Huiyan; Xu, Chang; Guo, Bingying; Ma, Xiaoxing; Lu, Jian] Nanjing Univ, State Key Lab Novel Software Technol, Nanjing 210023, Jiangsu, Peoples R China.
   [Wang, Huiyan; Xu, Chang; Guo, Bingying; Ma, Xiaoxing; Lu, Jian] Nanjing Univ, Dept Comp Sci & Technol, Nanjing 210023, Jiangsu, Peoples R China.
C3 Nanjing University; Nanjing University
RP Xu, C (corresponding author), Nanjing Univ, State Key Lab Novel Software Technol, Nanjing 210023, Jiangsu, Peoples R China.; Xu, C (corresponding author), Nanjing Univ, Dept Comp Sci & Technol, Nanjing 210023, Jiangsu, Peoples R China.
EM cocowhy1013@gmail.com; changxu@nju.edu.cn; bingying_nju@outlook.com;
   xxm@nju.edu.cn; lj@nju.edu.cn
RI Ma, Xiaoxing/K-4290-2012
OI Wang, Huiyan/0000-0001-6879-1628; Xu, Chang/0000-0002-6299-4704
FU National Key R&D Program of China [2017YFB1001801]; National Natural
   Science Foundation of China [61690204]; Collaborative Innovation Center
   of Novel Software Technology and Industrialization, Jiangsu, China
FX The authors wish to thank the editor and anonymous reviewers for their
   valuable comments on improving this article. This work was supported in
   part by National Key R&D Program (Grant #2017YFB1001801) and National
   Natural Science Foundation (Grant #61690204) of China. The authors would
   also like to thank the support of the Collaborative Innovation Center of
   Novel Software Technology and Industrialization, Jiangsu, China.
CR [Anonymous], 2017, NUMBERS DONT LIE SEL
   [Anonymous], 2017, Autonomous vehicles: Emerging policy issues
   [Anonymous], 1999, P SIGCHI C HUM FACT, DOI DOI 10.1145/302979.303126
   [Anonymous], 2006, VLDB
   Blanc X, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P511, DOI 10.1145/1368088.1368158
   Brun Y., 2011, Proceedings of the 19th ACM SIGSOFT symposium and the 13th European Conference on Foundations of Software Engineering (FSE'11), P168, DOI [10.1145/2025113.2025139, DOI 10.1145/2025113.2025139]
   Bu YY, 2006, INT CONF QUAL SOFTW, P193
   Bu YY, 2006, LECT NOTES COMPUT SC, V4254, P741
   California DMV, 2016, AUTONOMOUS VEHICLE D
   Capra L, 2003, IEEE T SOFTWARE ENG, V29, P929, DOI 10.1109/TSE.2003.1237173
   Chang X., 2005, Proceedings of the 10th European software engineering conference held jointly with 13th ACM SIGSOFT international symposium on Foundations of software engineering (ESEC/FSE-13). ACM, New York, NY, P336, DOI DOI 10.1145/1095430.1081759
   Chaporkar P, 2007, MOBICOM'07: PROCEEDINGS OF THE THIRTEENTH ACM INTERNATIONAL CONFERENCE ON MOBILE COMPUTING AND NETWORKING, P135
   Chaudhuri Surajit, 2003, ACM INT C MAN DAT SI, P313, DOI DOI 10.1145/872757.872796
   Chen CH, 2011, INT CONF PERVAS COMP, P10, DOI 10.1109/PERCOM.2011.5767574
   Cheng BHC, 2009, LECT NOTES COMPUT SC, V5525, P1, DOI 10.1007/978-3-642-02161-9_1
   Chomicki J, 2003, IEEE T KNOWL DATA EN, V15, P244, DOI 10.1109/TKDE.2003.1161596
   Demsky B, 2006, IEEE T SOFTWARE ENG, V32, P931, DOI 10.1109/TSE.2006.122
   Demuth A, 2016, IEEE INT CONF AUTOM, P590, DOI 10.1145/2970276.2970304
   Egyed A., 2006, 28th International Conference on Software Engineering Proceedings, P381, DOI 10.1145/1134285.1134339
   Fescioglu-Unver N, 2015, INFORM SYST FRONT, V17, P1369, DOI 10.1007/s10796-014-9518-1
   Griswold WG, 2003, PROC INT CONF SOFTW, P363, DOI 10.1109/ICSE.2003.1201215
   Guizzo E., 2008, 3 ENG HUNDREDS ROBOT
   Guo BY, 2017, PROC IEEE INT CONF S, P137, DOI 10.1109/ICSME.2017.10
   HOU ESH, 1994, IEEE T PARALL DISTR, V5, P113, DOI 10.1109/71.265940
   Julien C, 2006, IEEE T SOFTWARE ENG, V32, P281, DOI 10.1109/TSE.2006.47
   Kehrer T, 2013, IEEE INT CONF AUTOM, P191, DOI 10.1109/ASE.2013.6693079
   Khoussainova N., 2006, MobiDE 2006. Proceedings of the Fifth ACM International Workshop on Data Engineering for Wireless and Mobile Access, P43, DOI 10.1145/1140104.1140114
   Kshemkalyani AD, 2007, IEEE T COMPUT, V56, P1578, DOI 10.1109/TC.2007.70749
   Kshemkalyani AD, 2012, J PARALLEL DISTR COM, V72, P219, DOI 10.1016/j.jpdc.2011.09.004
   Kulkarni D, 2010, IEEE T SOFTWARE ENG, V36, P184, DOI 10.1109/TSE.2010.11
   Lai Z, 2008, P 16 ACM SIGSOFT INT, P94
   LEUNG JYT, 1989, ALGORITHMICA, V4, P209, DOI 10.1007/BF01553887
   Lu H, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P61, DOI 10.1145/1368088.1368098
   Nentwich C, 2003, ACM T SOFTW ENG METH, V12, P28, DOI 10.1145/839268.839271
   Nentwich C., 2002, ACM T INTERNET TECHN, V2, P151, DOI [10.1145/514183.514186, DOI 10.1145/514183.514186]
   Nuseibeh B, 2000, COMPUTER, V33, P24, DOI 10.1109/2.839317
   Park I, 2005, P INT COMP SOFTW APP, P359
   Patil K. T., 2016, P INT C INF PROC, P392
   Ranganathan A., 2002, IEEE Pervasive Computing, V1, P51, DOI 10.1109/MPRV.2002.1037722
   Ranganathan A, 2003, PERS UBIQUIT COMPUT, V7, P353, DOI 10.1007/s00779-003-0251-x
   Rao J., 2006, VLDB, P175
   Reiss SP, 2005, PROC IEEE INT CONF S, P113
   Rosenfeld A, 2016, AAMAS'16: PROCEEDINGS OF THE 2016 INTERNATIONAL CONFERENCE ON AUTONOMOUS AGENTS & MULTIAGENT SYSTEMS, P1516
   Sama M, 2010, IEEE T SOFTWARE ENG, V36, P644, DOI 10.1109/TSE.2010.35
   Sama M, 2010, J SYST SOFTWARE, V83, P906, DOI 10.1016/j.jss.2009.11.005
   Sama Michele., 2006, Proceedings of the conference on Design, automation and test in Europe: Designers' forum, P136
   Sui J, 2016, INFORM SOFTWARE TECH, V74, P230, DOI 10.1016/j.infsof.2015.10.003
   TASSIULAS L, 1992, IEEE T AUTOMAT CONTR, V37, P1936, DOI 10.1109/9.182479
   Tse T. H., 2004, Proceedings of the 28th Annual International Computer Software and Applications Conference. COMPSAC 2004, P458, DOI 10.1109/CMPSAC.2004.1342879
   van Bunningen AH, 2005, INTERNATIONAL WORKSHOP ON UBIQUITOUS DATA MANAGEMENT, PROCEEDINGS, P17, DOI 10.1109/UDM.2005.7
   Wang ZM, 2007, PROC INT CONF SOFTW, P406
   Want R, 2004, SCI AM, V290, P56, DOI 10.1038/scientificamerican0104-56
   Xi W, 2016, INFORM SOFTWARE TECH, V74, P219, DOI 10.1016/j.infsof.2015.08.003
   Xu C, 2004, LECT NOTES COMPUT SC, V3222, P568
   Xu C., 2008, P 6 ANN IEEE INT C P, P45
   Xu C., 2012, MOBILE UBIQUITOUS SY, P285
   Xu C., 2007, P 6 JOINT M EUR SOFT, P569
   Xu C., 2007, P INT WORKSH SOFTW E
   Xu C, 2015, IEEE T SOFTWARE ENG, V41, P842, DOI 10.1109/TSE.2015.2418760
   Xu C, 2013, IEEE INT CONF AUTOM, P592, DOI 10.1109/ASE.2013.6693118
   Xu C, 2012, J SYST SOFTWARE, V85, P2812, DOI 10.1016/j.jss.2012.04.078
   Xu C, 2010, ACM T SOFTW ENG METH, V19, DOI 10.1145/1656250.1656253
   Xu C, 2008, INT CON DISTR COMP S, P713, DOI 10.1109/ICDCS.2008.46
   Xu Chen, 2013, Science China, Information Sciences, V56, DOI 10.1007/s11432-012-4679-3
   Xu YM, 2014, INFORM SCIENCES, V270, P255, DOI 10.1016/j.ins.2014.02.122
   Yang WH, 2018, ACM T INTERNET TECHN, V18, DOI 10.1145/3093894
   Yang WH, 2018, J SYST SOFTWARE, V138, P82, DOI 10.1016/j.jss.2017.12.009
   Yang Wenhua., 2014, Proceedings of the 29th ACM/IEEE international conference on Automated software engineering, P199
   Yin LZ, 2018, IEEE INT CONF AUTOM, P645, DOI 10.1145/3238147.3238223
NR 69
TC 5
Z9 5
U1 1
U2 7
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAR 1
PY 2021
VL 47
IS 3
BP 464
EP 497
DI 10.1109/TSE.2019.2898976
PG 34
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA RA1TM
UT WOS:000631200300003
DA 2024-07-18
ER

PT J
AU Costa, DE
   Mujahid, S
   Abdalkareem, R
   Shihab, E
AF Costa, Diego Elias
   Mujahid, Suhaib
   Abdalkareem, Rabe
   Shihab, Emad
TI Breaking Type Safety in Go: An Empirical Study on the Usage of the
   unsafe Package
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Go language; unsafe; type safety; software packages; Empirical Study
AB A decade after its first release, the Go language has become a major programming language in the development landscape. While praised for its clean syntax and C-like performance, Go also contains a strong static type-system that prevents arbitrary type casting and memory access, making the language type-safe by design. However, to give developers the possibility of implementing low-level code, Go ships with a special package called unsafe that offers developers a way around the type safety of Go programs. The package gives greater flexibility to developers but comes at a higher risk of runtime errors, chances of non-portability, and the loss of compatibility guarantees for future versions of Go. In this paper, we present the first large-scale study on the usage of the unsafe package in 2,438 popular Go projects. Our investigation shows that unsafe is used in 24 percent of Go projects, motivated primarily by communicating with operating systems and C code, but is also commonly used as a means of performance optimization. Developers are willing to use unsafe to break language specifications (e.g., string immutability) for better performance and 6 percent of the analyzed projects that use unsafe perform risky pointer conversions that can lead to program crashes and unexpected behavior. Furthermore, we report a series of real issues faced by projects that use unsafe, from crashing errors and non-deterministic behavior to having their deployment restricted from certain popular environments. Our findings can be used to understand how and why developers break type safety in Go, and help motivate further tools and language development that could make the usage of unsafe in Go even safer.
C1 [Costa, Diego Elias; Mujahid, Suhaib; Shihab, Emad] Concordia Univ, Dept Comp Sci & Software Engn, Data Driven Anal Software DAS Lab, Montreal, PQ H3G 1M8, Canada.
   [Abdalkareem, Rabe] Queens Univ, Sch Comp, Software Anal & Intelligence Lab SAIL, Kingston, ON K7L 3N6, Canada.
C3 Concordia University - Canada; Queens University - Canada
RP Costa, DE (corresponding author), Concordia Univ, Dept Comp Sci & Software Engn, Data Driven Anal Software DAS Lab, Montreal, PQ H3G 1M8, Canada.
EM diego.costa@concordia.ca; suhaib.mujahid@concordia.ca;
   abdrabe@gmail.com; emad.shihab@concordia.ca
RI Costa, Diego/Y-7589-2019; Abdalkareem, Rabe/IQV-8842-2023; Abdalkareem,
   Rabe/AET-2496-2022
OI Abdalkareem, Rabe/0000-0001-9914-5434; Costa, Diego
   Elias/0000-0001-7084-2594; Mujahid, Suhaib/0000-0003-2738-1387
FU Canadian Natural Sciences and Engineering Research Council (NSERC)
FX This research was financially supported by the Canadian Natural Sciences
   and Engineering Research Council (NSERC). The authors would like to
   thank Matthew Dempsky, for providing invaluable feedback and for
   communicating our work to members of theGo Team.
CR [Anonymous], 2020, Nature, DOI 10.1038/d41586-020-00154-w
   [Anonymous], 2016, CIL
   [Anonymous], 2020, FIX GO PROGRAMMING L
   [Anonymous], 2020, GO PROJECT GO PROGRA
   [Anonymous], 2019, VET GO PROGRAMMING L
   [Anonymous], 2019, GO 1 FUTURE GO PROGR
   [Anonymous], 2018, REMOVED USAGE PACKAG
   [Anonymous], 2015, WHAT ARE POSSIBLE CO
   [Anonymous], 2019, STACK OVERFLOW DEV S
   [Anonymous], 2018, RUNTIME ERROR UNSAFE
   [Anonymous], 2020, UNSAFE ARTICLE STATE
   Arzilli A., 2015, SUPPORT CHANNELS MAP
   Bitter W., 2015, INVALID USE UNSAFE P
   Blanchon V., 2019, GO WHAT IS UNSAFE PA
   Borges H, 2016, 12 INT C PREDICTIVE, P9
   Borges H, 2016, PROC IEEE INT CONF S, P334, DOI 10.1109/ICSME.2016.31
   Callau O., 2011, Proceedings of the 8th Working Conference on Mining Software Repositories, P23
   Chekrygin I., 2016, PROMETHEUS CRASHES H
   Cloud G., 2020, APP ENGINE
   CockreachDB, 2014, COCKROACHDB OP SOURC
   Costa D., 2017, P 8 ACM SPEC INT C P, P389, DOI [10.1145/3030207.3030221, DOI 10.1145/3030207.3030221]
   de Pádua GB, 2017, INT C PROGRAM COMPRE, P328, DOI 10.1109/ICPC.2017.1
   Dempsky M., 2016, GUARANTEES PACKAGE U
   Dempsky M., 2019, PROPOSAL UNSAFE CLAR
   Dempsky M., 2020, GO PLAYGROUND KEEPAL
   Eigler FrankCh., 2003, GCC DEV SUMMIT
   Evans AN, 2020, PROC INT CONF SOFTW, P246
   fiatjaf, 2017, STRANG ERR HAPP JUST
   Fincher S, 2005, EXPERT SYST, V22, P89, DOI 10.1111/j.1468-0394.2005.00299.x
   Francis, 2019, CLARIFICATION UNSAFE
   Frei S., 2020, FLAKY UNSAFE POINTER
   G. Inc, 2019, STATE OCTOVERSE STAT
   Glynn W., 2015, USE UNSAFE REFLECT S
   Golang, 2019, CGO GO PROGR LANG
   Golang, 2019, SYSC GO PROGR LANG
   Golang, 2019, REFL GO PROGR LANG
   Golang, 2019, AT GO PROGR LANG
   Golang, 2019, UNS GO PROGR LANG
   Golang, 2020, TEST GO PROGR LANG
   gotk3, 2013, GOTK3 GOTK3 GO BIND
   Griesemer R., 2017, PROPOSAL SPEC DISALL
   Hovemeyer D., 2005, ACM SIGSOFT Software Engineering Notes, P13
   Issa A., 2017, GOOGLE APP ENGINE FA
   Kalliamvakou E, 2016, EMPIR SOFTW ENG, V21, P2035, DOI 10.1007/s10664-015-9393-5
   Krikava F, 2019, P ACM PROGRAM LANG, V3, DOI 10.1145/3360589
   Lemire D., 2019, KEEP HEADERDATA ALIV
   Liron T., 2018, FEATURE PROVIDE NO C
   Mastrangelo C., 2018, PROPOSAL SYNC ATOMIC
   Mastrangelo L, 2019, P ACM PROGRAM LANG, V3, DOI 10.1145/3360584
   Mastrangelo L, 2015, ACM SIGPLAN NOTICES, V50, P695, DOI [10.1145/2814270.2814313, 10.1145/2858965.2814313]
   Mazinanian D, 2017, P ACM PROGRAM LANG, V1, DOI 10.1145/3133909
   McHugh ML, 2012, BIOCHEM MEDICA, V22, P276, DOI 10.11613/bm.2012.031
   Mihailenco V., 2015, USE UNSAFE BYTES STR
   Mihailenco V., 2016, USE UNSAFE REDUCE NU
   Mihailenco V., 2019, USE UNSAFE STRINGTOB
   Nagappan M, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P404, DOI 10.1145/2786805.2786834
   Romanov V., 2018, USAFE USE UNSAFE LEA
   Sandall T., 2018, REMOVE USE UNSAFE PO
   Schulze W., 2017, NO UNSAFE AWALTERSCH
   Siegert B., 2011, UNSAFE SIZEOF NOW RE
   Smirnov D., 2016, KNOWN ISSUE UNSAFE M
   Stockton C., 2017, SECURITY INCORRECT U
   T. G. Authors, 2019, TOOLSUNSAFEPTR GO GO
   T. G. Authors, 2020, GO2GENERICSFEEDBACK
   T. G. Foundation, 1997, GTK PROJ FREE OP SOU
   Taylor I. L., 2018, PROPOSAL GO 2 ONLY G
   Wang PP, 2019, 2019 IEEE 26TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER), P502, DOI [10.1109/SANER.2019.8667972, 10.1109/saner.2019.8667972]
NR 67
TC 4
Z9 5
U1 1
U2 3
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD FEB 8
PY 2021
VL 48
IS 7
BP 2277
EP 2294
DI 10.1109/TSE.2021.3057720
PG 18
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 2Y5ZJ
UT WOS:000825974500001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Vilela, J
   Castro, J
   Martins, LEG
   Gorschek, T
AF Vilela, Jessyka
   Castro, Jaelson
   Martins, Luiz Eduardo G.
   Gorschek, Tony
TI Safety Practices in Requirements Engineering: The Uni-REPM Safety Module
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Safety; Companies; Software; Capability maturity model; Requirements
   engineering; Systematics; Standards; Safety-critical systems;
   requirements engineering; maturity models; Uni-REPM; safety engineering
ID SOFTWARE COMPANIES; CRITICAL SYSTEMS; MATURITY MODEL
AB Context: Software is an important part in safety-critical system (SCS) development since it is becoming a major source of hazards. Requirements-related hazards have been associated with many accidents and safety incidents. Requirements issues tend to be mitigated in companies with high processes maturity levels since they do their business in a systematic, consistent and proactive approach. However, requirements engineers need systematic guidance to consider safety concerns early in the development process. Goal: the paper investigates which safety practices are suitable to be used in the Requirements Engineering (RE) process for SCS and how to design a safety maturity model for this area. Method: we followed the design science methodology to propose Uni-REPM SCS, a safety module for Unified Requirements Engineering Process Maturity Model (Uni-REPM). We also conducted a static validation with two practitioners and nine academic experts to evaluate its coverage, correctness, usefulness, and applicability. Results: The module has seven main processes, fourteen sub-processes and 148 practices that form the basis of safety processes maturity. Moreover, we describe its usage through a tool. Conclusions: The validation indicates a good coverage of practices and well receptivity by the experts. Finally, the module can help companies in evaluating their current practices.
C1 [Vilela, Jessyka] UFC, BR-63902580 Quixada, Ceara, Brazil.
   [Vilela, Jessyka; Castro, Jaelson] Univ Fed Pernambuco UFPE, BR-50740560 Recife, PE, Brazil.
   [Martins, Luiz Eduardo G.] Univ Fed Sao Paulo UNIFESP, Dept Ciencia & Tecnol, BR-04021001 Sao Jose Dos Campos, SP, Brazil.
   [Gorschek, Tony] Blekinge Inst Technol BTH, S-37141 Karlskrona, Sweden.
C3 Universidade Federal do Ceara; Universidade Federal de Pernambuco;
   Universidade Federal de Sao Paulo (UNIFESP); Blekinge Institute
   Technology
RP Vilela, J (corresponding author), UFC, BR-63902580 Quixada, Ceara, Brazil.; Vilela, J (corresponding author), Univ Fed Pernambuco UFPE, BR-50740560 Recife, PE, Brazil.
EM jessykavilela@ufc.br; jbc@cin.ufpe.br; legmartins@unifesp.br;
   tony.gorschek@bth.se
RI Martins, Luiz/AAL-7679-2020; Castro, Jaelson F B/C-8334-2009
OI Vilela, Jessyka/0000-0002-5541-5188
FU FACEPE [APQ 0880-1.03/14]; CNPq [305634/2016-0]; Knowledge Foundation
   Sweden [20140218]
FX This work was partially supported by FACEPE (grant number APQ
   0880-1.03/14), CNPq (grant number 305634/2016-0), and by a research
   grant for the ORION project (reference number 20140218) from The
   Knowledge Foundation Sweden. We also want to thank the subjects of
   module validation for their availability to contribute to our research.
CR Ahmad Rodina, 2015, Journal of Software, V10, P1199, DOI 10.17706/jsw.10.101199-1215
   [Anonymous], 1993, 1 IEEE INT S REQUIRE
   [Anonymous], 2000, P C FUTURE SOFTWARE, DOI DOI 10.1145/336512.336556
   [Anonymous], 2003, Software requirements
   [Anonymous], 2010, THESIS
   Becker J, 2009, BUS INFORM SYST ENG+, V1, P213, DOI 10.1007/s12599-009-0044-5
   Bosse T., 2013, P 4 INT AIR TRANSP O
   C. P. Team, 2006, CMUSEI2006TR008
   Cox K, 2009, IET SOFTW, V3, P339, DOI 10.1049/iet-sen.2008.0076
   D. of Defense of United States of America, 2012, MILSTD882E D DEF US
   D. of Defense of United States of America, 1993, MILSTD882C D DRF US
   D. of Defense of United States of America, 2000, MILSTD882D D DEF US
   Davis AM, 2006, REQUIR ENG, V11, P1, DOI 10.1007/s00766-004-0206-4
   De Bruin T., 2005, ACIS 2005 Proceedings, P109
   Defence Materiel Organisation, 2007, CMUSEI2007TN006 DEF
   DORLING A, 1993, SOFTWARE QUAL J, V2, P209, DOI 10.1007/BF00403764
   E. C. for Space Standardization, 2013, ECSSEHB40A ESA REQ S
   E. C. for Space Standardization, 2009, ECSSEST40C ESA REQ S
   Ekberg J, 2014, LECT NOTES COMPUT SC, V8696, P55, DOI 10.1007/978-3-319-10557-4_8
   Firesmith D., 2006, 28th International Conference on Software Engineering Proceedings, P1047, DOI 10.1145/1134285.1134498
   Fleming M., 2000, TECH REP
   Fraser P, 2002, IEMC-2002: IEEE INTERNATIONAL ENGINEERING MANAGEMENT CONFERENCE, VOLS I AND II, PROCEEDINGS, P244, DOI 10.1109/IEMC.2002.1038431
   Glinz M, 2015, COMPUT SCI-RES DEV, V30, P363, DOI 10.1007/s00450-014-0256-x
   Goncalves AP, 2010, SAFETY SCI, V48, P615, DOI 10.1016/j.ssci.2010.01.012
   Gorschek T., 2003, P REQ ENG FDN SOFTW, P83
   Gorschek T, 2006, IEEE SOFTWARE, V23, P88, DOI 10.1109/MS.2006.147
   Gorschek T, 2012, J SOFTW-EVOL PROC, V24, P83, DOI 10.1002/smr.535
   Graydon P. J., 2015, NASATM2015218804 LAN
   Gresse von Wangenheim C., 2010, P 10 INT C SOFTW PRO
   Grill T., 2008, DESIGN PATTERNS APPL
   Guillerm R, 2010, COMPLEX SYSTEMS DESIGN AND MANAGEMENT, P99, DOI 10.1007/978-3-642-15654-0_7
   Hall JG, 2008, SAFETY SCI, V46, P22, DOI 10.1016/j.ssci.2006.11.001
   Hall T., 2002, IEE Proceedings-Software, V149, P153, DOI 10.1049/ip-sen:20020694
   Heimdahl MPE, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P137, DOI 10.1109/FOSE.2007.18
   Hoyle David., 2001, ISO 9000 quality systems handbook, V4th
   I. O. for Standardization, 2012, SAF MACH SAF REL P 2
   I. O. for Standardization, 2011, SAF MACH SAF REL P 1
   I. O. for Standardization, 2011, 262626 ISO INT EL CO
   I. O. for Standardization, 2012, 159982 ISOTS INT EL
   I. O. for Standardization, 2014, 146392 IO STAND
   I. O. for Standardization, 2008, 204741 ISO INT EL CO
   I. O. for Standardization, 2012, 146391 IO STAND
   I. O. for Standardization, 2011, 61508 INT EL COMM
   I. O. for Standardization, 2008, 15998 ISO INT EL COM
   I. O. for Standardization, 2011, 15504102011 ISOIEC T
   I. O. for Standardization and I. E. Commission, 2004, 9126 ISOIEC
   I. O. for Standardization and I. E. Commission, 2011, 25010 ISO INT EL COM
   Johansson M, 2012, J SOFTW-EVOL PROC, V24, P501, DOI 10.1002/smr.499
   Juriste N, 2002, IEEE SOFTWARE, V19, P70, DOI 10.1109/MS.2002.1049395
   Kamsties E., 1998, Requirements Engineering, V3, P84, DOI 10.1007/BF02919967
   Kazaras K., 2011, 6 IET INT C SYST SAF, P1
   Kim TE, 2016, SAFETY SCI, V83, P93, DOI 10.1016/j.ssci.2015.11.014
   Kontogiannis T, 2017, SAFETY SCI, V100, P128, DOI 10.1016/j.ssci.2016.09.015
   Kotonya G., 1998, Requirements engineering: processes and techniques
   Lami Giuseppe, 2011, Computer Safety, Reliability, and Security. Proceedings 30th International Conference, SAFECOMP 2011, P284, DOI 10.1007/978-3-642-24270-0_21
   Lami G., 2011, P 6 IET INT C SYST S, P1
   Lami G, 2016, COMM COM INF SC, V609, P301, DOI 10.1007/978-3-319-38980-6_22
   Leffingwell D., 1997, American Programmer, V10, P13
   Leveson N.G., 1995, Safeware: System Safety and Computers
   Leveson NG, 2002, LECT NOTES COMPUT SC, V2491, P15
   Leveson NG, 2011, ENG SYST, P1
   Likert R., 2011, ARCH PSYCHOL
   Martins DC Jr, 2016, ADV MED TECH CLIN PR, P1, DOI 10.4018/978-1-5225-0353-8.ch001
   Martins L. E. G., REQUIREMENTS ENG SAF
   Martins LEG, 2017, IEEE SOFTWARE, V34, P49, DOI 10.1109/MS.2017.94
   Martins LEG, 2016, INFORM SOFTWARE TECH, V75, P71, DOI 10.1016/j.infsof.2016.04.002
   Marx F, 2012, BUS INFORM SYST ENG+, V4, P193, DOI 10.1007/s12599-012-0220-x
   Nikula U., 2011, STATE PRACTICE SURVE
   Panaroni Paolo, 2008, 2008 IEEE 32nd International Computer Software and Applications Conference (COMPSAC), P1053, DOI 10.1109/COMPSAC.2008.139
   Pernstål J, 2013, J SYST SOFTWARE, V86, P2797, DOI 10.1016/j.jss.2013.06.035
   PoppelbuSS Jens., 2011, ECIS, P28
   Reis T. L., 2016, SCIENTOMETRICS, V110, P1
   S. E. Institute, 2001, SYST ENG CAP MAT MOD
   S. E. Institute, 2001, CMMI SYST ENG SOFTW
   SAEED A, 1995, ISA T, V34, P283, DOI 10.1016/0019-0578(95)00019-V
   Santos G, 2012, 2012 EIGHTH INTERNATIONAL CONFERENCE ON THE QUALITY OF INFORMATION AND COMMUNICATIONS TECHNOLOGY (QUATIC 2012), P137, DOI 10.1109/QUATIC.2012.42
   Sawyer P., 1997, SOFTWARE PROCESS IMP, V3, P19, DOI [DOI 10.1002/(SICI)1099, 10.1002/(SICI)1099-1670(199703)3:13.0.CO;2-X, DOI 10.1002/(SICI)1099-1670(199703)3:1<19::AID-]
   Schedl G, 2008, IMPROVEMENTS IN SYSTEM SAFETY, P177, DOI 10.1007/978-1-84800-100-8_11
   Sechser B, 2011, COMM COM INF SC, V155, P212
   Shakeel R., 2014, P IEEE STUD C ENG SC, P63
   Simpson A, 2002, COMPONENTS OF SYSTEM SAFETY, P140
   Solemon B., 2008, International Symposium on Information Technology, V4, P1
   Solemon B, 2009, COMM COM INF SC, V59, P70
   Sommerville I., 2004, Software engineering. international computer science series
   Sommerville I., 2011, Software engineering
   Svahnberg M, 2015, REQUIR ENG, V20, P91, DOI 10.1007/s00766-013-0188-1
   Svahnberg M, 2013, REQUIR ENG, V18, P85, DOI 10.1007/s00766-012-0148-1
   Vilela J., REQUIREMENTS COMMUNI
   Vilela J, 2017, J SYST SOFTWARE, V125, P68, DOI 10.1016/j.jss.2016.11.031
   von Wangenheim CG, 2010, IEEE SOFTWARE, V27, P92, DOI 10.1109/MS.2010.96
   Wendler R, 2012, INFORM SOFTWARE TECH, V54, P1317, DOI 10.1016/j.infsof.2012.07.007
   Whitehead J, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P214, DOI 10.1109/FOSE.2007.4
   Wieringa R, 2010, LECT NOTES COMPUT SC, V6105, P61, DOI 10.1007/978-3-642-13335-0_5
   Williams Patricia, 2008, Information Management & Computer Security, V16, P58, DOI 10.1108/09685220810862751
NR 94
TC 4
Z9 4
U1 1
U2 9
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAR 1
PY 2020
VL 46
IS 3
BP 222
EP 250
DI 10.1109/TSE.2018.2846576
PG 29
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA KX9OY
UT WOS:000522205900001
DA 2024-07-18
ER

PT J
AU Xie, XF
   Chen, BH
   Zou, L
   Liu, Y
   Le, W
   Li, XH
AF Xie, Xiaofei
   Chen, Bihuan
   Zou, Liang
   Liu, Yang
   Le, Wei
   Li, Xiaohong
TI Automatic Loop Summarization via Path Dependency Analysis
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Disjunctive loop summary; path dependency automaton; path interleaving
ID ABSTRACT ACCELERATION; TEST-GENERATION; BIT-VECTORS; INVARIANTS; PRECISE
AB Analyzing loops is very important for various software engineering tasks such as bug detection, test case generation and program optimization. However, loops are very challenging structures for program analysis, especially when (nested) loops contain multiple paths that have complex interleaving relationships. In this paper, we propose the path dependency automaton (PDA) to capture the dependencies among the multiple paths in a loop. Based on the PDA, we first propose a loop classification to understand the complexity of loop summarization. Then, we propose a loop analysis framework, named Proteus, which takes a loop program and a set of variables of interest as inputs and summarizes path-sensitive loop effects (i.e., disjunctive loop summary) on the variables of interest. An algorithm is proposed to traverse the PDA to summarize the effect for all possible executions in the loop. We have evaluated Proteus using loops from five open-source projects and two well-known benchmarks and applying the disjunctive loop summary to three applications: loop bound analysis, program verification and test case generation. The evaluation results have demonstrated that Proteus can compute a more precise bound than the existing loop bound analysis techniques; Proteus can significantly outperform the state-of-the-art tools for loop program verification; and Proteus can help generate test cases for deep loops within one second, while symbolic execution tools KLEE and Pex either need much more time or fail.
C1 [Xie, Xiaofei; Li, Xiaohong] Tianjin Univ, Sch Comp Sci & Technol, Tianjin 300350, Peoples R China.
   [Chen, Bihuan] Fudan Univ, Sch Comp Sci, Shanghai 201203, Peoples R China.
   [Chen, Bihuan] Fudan Univ, Shanghai Key Lab Data Sci, Shanghai 201203, Peoples R China.
   [Zou, Liang; Liu, Yang] Nanyang Technol Univ, Sch Comp Sci Engn, Singapore 639798, Singapore.
   [Le, Wei] Iowa State Univ, Dept Comp Sci, Ames, IA 50011 USA.
C3 Tianjin University; Fudan University; Fudan University; Nanyang
   Technological University; Iowa State University
RP Li, XH (corresponding author), Tianjin Univ, Sch Comp Sci & Technol, Tianjin 300350, Peoples R China.
EM xiexiaofei@tju.edu.cn; bhchen@fudan.edu.cn; lzou@ntu.edu.sg;
   yangliu@ntu.edu.sg; weile@iastate.edu; xiaohongli@tju.edu.cn
RI liu, yang/HIU-0559-2022; liang, liang/IAO-8518-2023; Liu,
   Yang/HNJ-6693-2023; liu, yang/HHY-8583-2022; meng, meng/KHW-8303-2024;
   Liu, Yang/D-2306-2013; liu, yang/HQY-7531-2023; li, xiao/GSN-6181-2022;
   Xie, Xiaofei/ABE-4095-2020; li, xiaofeng/GXF-9442-2022; LIU,
   YANG/HWQ-4615-2023; yang, liu/HTN-9175-2023; yang, liu/GVU-8760-2022
OI Liu, Yang/0000-0001-7300-9215; le, wei/0000-0002-6797-0648; ,
   Xiaofei/0000-0002-1288-6502
FU National Research Foundation, Singapore under its National Cybersecurity
   RD Program [NRF2014, NCR-NCR001-30, M4192001.022.601001]; National
   Science Foundation of China [61572349, 61272106]; National Natural
   Science Foundation of China [61370079, NSFC-61732001]; US National
   Science Foundation (NSF) [1542117]; Direct For Computer & Info Scie &
   Enginr; Division of Computing and Communication Foundations [1542117]
   Funding Source: National Science Foundation
FX This research is supported in part by the National Research Foundation,
   Singapore under its National Cybersecurity R&D Program (Award No.
   NRF2014, NCR-NCR001-30, No. M4192001.022.601001), by the National
   Science Foundation of China (No. 61572349, 61272106), by the National
   Natural Science Foundation of China under Grant (No. 61370079), by the
   National Natural Science Foundation of China (NSFC-61732001) and by the
   US National Science Foundation (NSF) under Award 1542117.
CR Ancourt C, 2010, ELECTRON NOTES THEOR, V267, P3, DOI 10.1016/j.entcs.2010.09.002
   [Anonymous], 2015, TOOLS ALGORITHMS CON
   Balakrishnan G, 2008, LECT NOTES COMPUT SC, V5079, P238
   Balakrishnan Gogul, 2009, P 7 ACM INT C EMBEDD, P49, DOI [10.1145/1629335.1629343, DOI 10.1145/1629335.1629343]
   Bardin S, 2003, LECT NOTES COMPUT SC, V2725, P118
   Beyer D., 2010, 2010 Formal Methods in Computer-Aided Design (FMCAD 2010), P189
   Beyer D, 2015, LECT NOTES COMPUT SC, V9206, P622, DOI 10.1007/978-3-319-21690-4_42
   Beyer D, 2013, LECT NOTES COMPUT SC, V7793, P146, DOI 10.1007/978-3-642-37057-1_11
   Bozga M, 2006, LECT NOTES COMPUT SC, V4052, P577
   Bozga M, 2014, LECT NOTES COMPUT SC, V8318, P242, DOI 10.1007/978-3-642-54013-4_14
   Brain M, 2015, LECT NOTES COMPUT SC, V9291, P145, DOI 10.1007/978-3-662-48288-9_9
   Brummayer R, 2009, LECT NOTES COMPUT SC, V5505, P174, DOI 10.1007/978-3-642-00768-2_16
   Cadar C., 2008, Proceedings of the 8th USENIX conference on Operating systems design and implementation, OSDI'08, (USA), P209
   CHEN BH, 2016, PROC INT CONF SOFTW, P49, DOI DOI 10.1145/2884781.2884794
   Clarke E, 2004, LECT NOTES COMPUT SC, V2988, P168, DOI 10.1007/978-3-540-24730-2_15
   Cousot P., 1977, C RECORD 4 ANN ACM S, P238, DOI DOI 10.1145/512950.512973
   Cousot Patrick, 1978, P 5 ACM SIGACT SIGPL, p84S96, DOI DOI 10.1145/512760.512770
   de Moura L, 2008, LECT NOTES COMPUT SC, V4963, P337, DOI 10.1007/978-3-540-78800-3_24
   Demri S, 2013, LECT NOTES COMPUT SC, V7966, P162, DOI 10.1007/978-3-642-39212-2_17
   Dillig I, 2013, ACM SIGPLAN NOTICES, V48, P443, DOI [10.1145/2509136.2509511, 10.1145/2544173.2509511]
   Donaldson AF, 2011, LECT NOTES COMPUT SC, V6887, P351, DOI 10.1007/978-3-642-23702-7_26
   Donaldson AF, 2011, FORM METHOD SYST DES, V39, P83, DOI 10.1007/s10703-011-0124-2
   Duc-Hiep Chu, 2011, 2011 International Conference on Embedded Software (EMSOFT 2011), P319
   Ganesh V, 2007, LECT NOTES COMPUT SC, V4590, P519
   Garg P, 2014, LECT NOTES COMPUT SC, V8559, P69, DOI 10.1007/978-3-319-08867-9_5
   Godefroid Patrice., 2011, Proc. ISSTA, P23, DOI [10.1145/2001420.2001424, DOI 10.1145/2001420.2001424]
   Gonnord L, 2014, SCI COMPUT PROGRAM, V93, P125, DOI 10.1016/j.scico.2013.09.016
   Gonzalez-de-Aledo Pablo, 2015, Tools and Algorithms for the Construction and Analysis of Systems. 21st International Conference, TACAS 2015, held as part of the European Joint Conferences on Theory and Practice of Software, ETAPS 2015. Proceedings: LNCS 9035, P429, DOI 10.1007/978-3-662-46681-0_36
   Gopan D, 2006, LECT NOTES COMPUT SC, V4144, P452, DOI 10.1007/11817963_41
   Gopani D, 2007, LECT NOTES COMPUT SC, V4634, P349
   Gulavani BS, 2006, LECT NOTES COMPUT SC, V3920, P474
   Gulavani LS, 2008, LECT NOTES COMPUT SC, V5123, P370
   Gulwani S, 2010, PLDI '10: PROCEEDINGS OF THE 2010 ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P292, DOI 10.1145/1806596.1806630
   Gulwani S, 2009, ACM SIGPLAN NOTICES, V44, P127, DOI 10.1145/1594834.1480898
   Gulwani S, 2009, PLDI'09 PROCEEDINGS OF THE 2009 ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P375, DOI 10.1145/1542476.1542518
   Gupta A, 2009, LECT NOTES COMPUT SC, V5643, P634, DOI 10.1007/978-3-642-02658-4_48
   Haran Arvind, 2015, Tools and Algorithms for the Construction and Analysis of Systems. 21st International Conference, TACAS 2015, held as part of the European Joint Conferences on Theory and Practice of Software, ETAPS 2015. Proceedings: LNCS 9035, P451, DOI 10.1007/978-3-662-46681-0_42
   HOARE CAR, 1969, COMMUN ACM, V12, P576, DOI 10.1145/363235.363259
   Jeannet B, 2014, ACM SIGPLAN NOTICES, V49, P529, DOI 10.1145/2535838.2535843
   Kahsai T, 2011, ELECTRON PROC THEOR, P55, DOI 10.4204/EPTCS.72.6
   KARR M, 1976, ACTA INFORM, V6, P133, DOI 10.1007/BF00268497
   Kong S, 2010, LECT NOTES COMPUT SC, V6461, P328, DOI 10.1007/978-3-642-17164-2_23
   Kroening Daniel, 2013, Computer Aided Verification. 25th International Conference, CAV 2013. Proceedings. LNCS 8044, P381, DOI 10.1007/978-3-642-39799-8_26
   Kroening D, 2015, LECT NOTES COMPUT SC, V9109, P325, DOI 10.1007/978-3-319-19249-9_21
   Kroening D, 2013, FORM METHOD SYST DES, V42, P221, DOI 10.1007/s10703-012-0176-y
   Lander R. E., 1978, 19th Annual Symposium on Foundations of Computer Science, P92
   Lattner C, 2004, INT SYM CODE GENER, P75, DOI 10.1109/CGO.2004.1281665
   Lin SW, 2017, IEEE INT CONF AUTOM, P793, DOI 10.1109/ASE.2017.8115690
   Loginov A. A., 2006, THESIS
   Lokuciejewski P, 2009, INT SYM CODE GENER, P136, DOI 10.1109/CGO.2009.17
   Merz F, 2012, LECT NOTES COMPUT SC, V7152, P146, DOI 10.1007/978-3-642-27705-4_12
   Mine A., 2006, Higher-Order and Symbolic Computation, V19, P31, DOI 10.1007/s10990-006-8609-1
   Monniaux D., 2011, SAS, P253
   Monniaux D, 2009, ACM SIGPLAN NOTICES, V44, P140, DOI 10.1145/1594834.1480899
   Morse J, 2013, LECT NOTES COMPUT SC, V7795, P619, DOI 10.1007/978-3-642-36742-7_47
   OTTENSTEIN KJ, 1984, SIGPLAN NOTICES, V19, P177, DOI 10.1145/390011.808263
   Purandare R, 2010, ACM SIGPLAN NOTICES, V45, P270, DOI 10.1145/1932682.1869483
   Ray S, 2013, J AUTOM REASONING, V51, P241, DOI 10.1007/s10817-012-9258-1
   Rival X, 2007, ACM T PROGR LANG SYS, V29, DOI 10.1145/1275497.1275501
   Saxena P, 2009, ISSTA 2009: INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P225
   Schrammel P, 2011, LECT NOTES COMPUT SC, V6887, P233, DOI 10.1007/978-3-642-23702-7_19
   Seghir MN, 2011, LECT NOTES COMPUT SC, V6996, P351, DOI 10.1007/978-3-642-24372-1_25
   Sharma Rahul, 2011, Computer Aided Verification. Proceedings 23rd International Conference, CAV 2011, P703, DOI 10.1007/978-3-642-22110-1_57
   Sharma R, 2013, LECT NOTES COMPUT SC, V7935, P388, DOI 10.1007/978-3-642-38856-9_21
   Strejcek Jan., 2012, Proceedings of the 2012 International Symposium on Software Testing and Analysis, ISSTA 2012, P155, DOI DOI 10.1145/2338965.2336772
   Nguyen TV, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P608, DOI 10.1145/2568225.2568275
   Tillmann N, 2008, LECT NOTES COMPUT SC, V4966, P134
   Trenchh W. F., 2003, INTRO REAL ANAL
   Wilhelm R, 2008, ACM T EMBED COMPUT S, V7, DOI 10.1145/1347375.1347389
   Xiao XS, 2013, IEEE INT CONF AUTOM, P246, DOI 10.1109/ASE.2013.6693084
   Xie XF, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P84, DOI 10.1145/3106237.3106260
   Xie XF, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P61, DOI 10.1145/2950290.2950340
   Xie X, 2015, 2015 INTERNATIONAL CONFERENCE ON SOCIAL SCIENCE AND ENVIRONMENT (ICSSM 2015), P181
NR 73
TC 11
Z9 13
U1 0
U2 10
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUN
PY 2019
VL 45
IS 6
BP 537
EP 557
DI 10.1109/TSE.2017.2788018
PG 21
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA ID5AF
UT WOS:000471686800001
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Macedo, N
   Jorge, T
   Cunha, A
AF Macedo, Nuno
   Jorge, Tiago
   Cunha, Alcino
TI A Feature-Based Classification of Model Repair Approaches
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Model-driven engineering; consistency management; inconsistency
   handling; model repair
ID INCONSISTENCY; REQUIREMENTS; MANAGEMENT
AB Consistency management, the ability to detect, diagnose and handle inconsistencies, is crucial during the development process in Model-driven Engineering (MDE). As the popularity and application scenarios of MDE expanded, a variety of different techniques were proposed to address these tasks in specific contexts. Of the various stages of consistency management, this work focuses on inconsistency handling in MDE, particularly in model repair techniques. This paper proposes a feature-based classification system for model repair techniques, based on an systematic literature review of the area. We expect this work to assist developers and researchers from different disciplines in comparing their work under a unifying framework, and aid MDE practitioners in selecting suitable model repair approaches.
C1 [Macedo, Nuno; Cunha, Alcino] INESC TEC, High Assurance Software Lab, P-4704553 Braga, Portugal.
   [Macedo, Nuno; Cunha, Alcino] Univ Minho, P-4704553 Braga, Portugal.
   [Jorge, Tiago] European Space Agcy, F-75738 Paris, France.
C3 INESC TEC; Universidade do Minho; European Space Agency
RP Macedo, N (corresponding author), INESC TEC, High Assurance Software Lab, P-4704553 Braga, Portugal.; Macedo, N (corresponding author), Univ Minho, P-4704553 Braga, Portugal.
EM nfmmacedo@di.uminho.pt; tiago.jorge@esa.int; alcino@di.uminho.pt
RI Macedo, Nuno/A-1539-2013; Cunha, Alcino/I-4104-2015
OI Macedo, Nuno/0000-0002-4817-948X; Cunha, Alcino/0000-0002-2714-8027
FU North Portugal Regional Operational Programme (NORTE), under the
   PORTUGAL Partnership Agreement; European Regional Development Fund
   (ERDF) [NORTE-01-0145-FEDER-000016]
FX Work financed by the North Portugal Regional Operational Programme
   (NORTE 2020), under the PORTUGAL 2020 Partnership Agreement, and through
   the European Regional Development Fund (ERDF) through project
   "NORTE-01-0145-FEDER-000016".
CR Ali MS, 2010, INFORM SOFTWARE TECH, V52, P871, DOI 10.1016/j.infsof.2010.05.003
   Amelunxen C., 2007, P 3 INT S APPL GRAPH, P313
   Anjorin A, 2014, LECT NOTES COMPUT SC, V8569, P1
   [Anonymous], 2014, EDBT ICDT 2014
   Antkiewicz M, 2008, LECT NOTES COMPUT SC, V5235, P3, DOI 10.1007/978-3-540-88643-3_1
   Balzer R., 1991, P 13 INT C SOFTW ENG, P158
   BANCILHON F, 1981, ACM T DATABASE SYST, V6, P557, DOI 10.1145/319628.319634
   Becker SM, 2007, SOFTW SYST MODEL, V6, P287, DOI 10.1007/s10270-006-0045-5
   Benavides D, 2010, INFORM SYST, V35, P615, DOI 10.1016/j.is.2010.01.001
   Bergmann G, 2012, SOFTW SYST MODEL, V11, P431, DOI 10.1007/s10270-011-0197-9
   Blanc X, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P511, DOI 10.1145/1368088.1368158
   Chechik M, 2009, 2009 ICSE WORKSHOP ON MODELING IN SOFTWARE ENGINEERING (MISE), P7, DOI 10.1109/MISE.2009.5069890
   Cruzes DS, 2011, INT SYMP EMP SOFTWAR, P275, DOI 10.1109/ESEM.2011.36
   Cunha A, 2014, LECT NOTES COMPUT SC, V8411, P17
   Czarnecki K, 2006, IBM SYST J, V45, P621, DOI 10.1147/sj.453.0621
   da Silva MAA, 2010, LECT NOTES COMPUT SC, V6051, P348, DOI 10.1007/978-3-642-13094-6_28
   Dam H. K., 2010, P 26 IEEE INT C SOFT, P1
   Demuth A, 2013, LECT NOTES COMPUT SC, V8107, P287, DOI 10.1007/978-3-642-41533-3_18
   Easterbrook S, 1996, SOFTWARE ENG J, V11, P31, DOI 10.1049/sej.1996.0004
   Easterbrook S., 1991, Knowledge Acquisition, V3, P255, DOI 10.1016/1042-8143(91)90007-A
   Egyed Alexander, 2008, 2008 23rd IEEE/ACM International Conference on Automated Software Engineering, P99, DOI 10.1109/ASE.2008.20
   Egyed A., 2006, 28th International Conference on Software Engineering Proceedings, P381, DOI 10.1145/1134285.1134339
   Eramo R, 2012, SOFTW SYST MODEL, V11, P29, DOI 10.1007/s10270-010-0170-z
   FINKELSTEIN A, 1992, INT J SOFTW ENG KNOW, V2, P31, DOI 10.1142/S0218194092000038
   Finkelstein A., 1996, INT WORKSH MULT PERS, P172
   FINKELSTEIN ACW, 1994, IEEE T SOFTWARE ENG, V20, P569, DOI 10.1109/32.310667
   Galster M, 2014, IEEE T SOFTWARE ENG, V40, P282, DOI 10.1109/TSE.2013.56
   Ghallab M., 2004, AUTOMATED PLANNING T
   Giese H, 2009, SOFTW SYST MODEL, V8, P21, DOI 10.1007/s10270-008-0089-9
   Goedicke M, 1999, IEEE INTERNATIONAL SYMPOSIUM ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P92, DOI 10.1109/ISRE.1999.777989
   Greenyer J, 2011, LECT NOTES COMPUT SC, V6698, P144, DOI 10.1007/978-3-642-21470-7_11
   Grundy J, 1998, IEEE T SOFTWARE ENG, V24, P960, DOI 10.1109/32.730545
   Hausmann J.H., 2002, P UML 2002 WORKSHOP, P61
   Hegedüs A, 2011, S VIS LANG HUM CEN C, P17, DOI 10.1109/VLHCC.2011.6070373
   Hermann F, 2015, SOFTW SYST MODEL, V14, P241, DOI 10.1007/s10270-012-0309-1
   Hermann F, 2012, LECT NOTES COMPUT SC, V7212, P178, DOI 10.1007/978-3-642-28872-2_13
   Hettel T, 2009, LECT NOTES COMPUT SC, V5563, P100, DOI 10.1007/978-3-642-02408-5_8
   Hidaka S, 2016, SOFTW SYST MODEL, V15, P907, DOI 10.1007/s10270-014-0450-0
   Hinkel G, 2015, LECT NOTES COMPUT SC, V9152, P3, DOI 10.1007/978-3-319-21155-8_1
   Hoa Khanh Dam, 2014, 2014 IEEE/IFIP Conference on Software Architecture (WICSA), P153, DOI 10.1109/WICSA.2014.31
   Ivkovic I, 2004, PROC IEEE INT CONF S, P252, DOI 10.1109/ICSM.2004.1357809
   Jackson Daniel, 2006, Software abstractions: Logic, language, and analysis
   Kang Kyo C, 1990, Technical Report
   Kitchenham B. A., 2007, EBSF200701 KEEL U
   Kolovos Dimitrios S., 2008, 2008 First IEEE International Conference on Software Testing, Verification and Validation (ICST '08), P356, DOI 10.1109/ICST.2008.23
   Konigs Alexander, 2006, Softw. Syst. Model., V5, P349, DOI [10.1007/s10270-006-0016-x, DOI 10.1007/S10270-006-0016-X]
   Kortgen A.-T., 2010, 3 WORKSH LIV INC SOF, P21
   Küster JM, 2007, LECT NOTES COMPUT SC, V4735, P136
   Kusel A., 2013, P WORKSH MOD EV COL, P4
   Lauder Marius, 2012, Graph Transformations. Proceedings 6th International Conference, ICGT 2012, P401, DOI 10.1007/978-3-642-33654-6_27
   Leblebici E., 2014, ELECT COMMUN EASST, V67
   Liu W., 2002, WORKSH CONS PROBL UM, P106
   Lucas FJ, 2009, INFORM SOFTWARE TECH, V51, P1631, DOI 10.1016/j.infsof.2009.04.009
   Macedo N., 2016, SYSTEMATIC LIT REV M
   Macedo N., 2014, SOFTW SYST MODEL, V28, P1
   Macedo N, 2013, IEEE INT CONF AUTOM, P694, DOI 10.1109/ASE.2013.6693135
   Mafazi S., 2014, P 10 AS PAC C CONC M, V154, P39
   Meertens L., 1998, DESIGNING CONSTRAINT
   Mens T, 2006, LECT NOTES COMPUT SC, V4199, P200
   Nentwich C, 2003, PROC INT CONF SOFTW, P455, DOI 10.1109/ICSE.2003.1201223
   Nuseibeh B, 2000, COMPUTER, V33, P24, DOI 10.1109/2.839317
   Nuseibeh B., 1999, AUSTRALASIAN J INF S, V6
   OMG, 2011, MOF 2 0 QUER VIEW TR
   OMG, 2012, OMG Object Constraint Language (OCL), Version 2.3.1
   OMG, 2014, OMG MET OBJ FAC MOF
   Orejas F, 2014, LECT NOTES COMPUT SC, V8568, P74
   Petersen K., 2007, Systematic Mapping Studies in Software Engineering, P1
   Pinna Puissant J., 2010, Proceedings of the 3rd Workshop on Living with Inconsistencies in Software Development, P8
   Puissant J. P., 2012, THESIS
   Puissant JP, 2015, SOFTW SYST MODEL, V14, P461, DOI 10.1007/s10270-013-0317-9
   Ráth I, 2010, SOFTW SYST MODEL, V9, P453, DOI 10.1007/s10270-009-0122-7
   Reder A, 2010, P IEEE ACM INT C AUT, P347, DOI DOI 10.1145/1858996.1859069
   Reder A, 2012, IEEE INT CONF AUTOM, P220, DOI 10.1145/2351676.2351707
   Robinson WN, 1999, IEEE T SOFTWARE ENG, V25, P816, DOI 10.1109/32.824411
   Sasano Isao, 2011, Theory and Practice of Model Transformations. Proceedings of the 4th International Conference, ICMT 2011, P138, DOI 10.1007/978-3-642-21732-6_10
   Scheffczyk J, 2005, SEFM 2005: THIRD IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING AND FORMAL METHODS, PROCEEDINGS, P272, DOI 10.1109/SEFM.2005.33
   Schonenberger J., 2014, P 10 AS PAC C CONC M
   Schurr Andy., 1995, P 20 WORKSHOP GRAPH, V903, P151
   Song H, 2011, LECT NOTES COMPUT SC, V6981, P273, DOI 10.1007/978-3-642-24485-8_20
   Spanoudakis G, 1997, ANN SOFTW ENG, V3, P433, DOI 10.1023/A:1018998207415
   Spanoudakis G, 2001, HDB SOFTWARE ENG KNO, VI, P329
   Stevens P., 2014, LNCS, P32
   Stevens P, 2008, LECT NOTES COMPUT SC, V5235, P408, DOI 10.1007/978-3-540-88643-3_10
   Van Der Straeten R, 2003, LECT NOTES COMPUT SC, V2863, P326
   Van Der Straeten R., 2006, Applied Computing 2006. 21st Annual ACM Symposium on Applied Computing, P1210, DOI 10.1145/1141277.1141564
   Van der Straeten R, 2011, LECT NOTES COMPUT SC, V6698, P69, DOI 10.1007/978-3-642-21470-7_6
   Wagner R., 2003, P WORKSH CONS PROBL
   Wider A., 2014, P WORKSH EDBT ICDT J, P63
   Xiong B, 2007, IEEE INT CON AUTO SC, P1016
   Xiong YF, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P315, DOI 10.1145/1595696.1595757
   Yingfei Xiong, 2013, Software and Systems Modeling, V12, P89, DOI 10.1007/s10270-010-0187-3
NR 91
TC 42
Z9 46
U1 0
U2 4
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUL 1
PY 2017
VL 43
IS 7
BP 615
EP 640
DI 10.1109/TSE.2016.2620145
PG 26
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA FA8OD
UT WOS:000405704400002
OA Green Published, Green Submitted
DA 2024-07-18
ER

PT J
AU Barbosa, EA
   Garcia, A
   Robillard, MP
   Jakobus, B
AF Barbosa, Eiji Adachi
   Garcia, Alessandro
   Robillard, Martin P.
   Jakobus, Benjamin
TI Enforcing Exception Handling Policies with a Domain-Specific Language
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Exception handling; exception handling policy; policy specification;
   domain-specific language
ID JAVA
AB Current software projects deal with exceptions in implementation and maintenance phases without a clear definition of exception handling policies. We call an exception handling policy the set of design decisions that govern the use of exceptions in a software project. Without an explicit exception handling policy, developers can remain unaware of the originally intended use of exceptions. In this paper, we present Exception Handling Policies Language (EPL), a domain-specific language to specify and verify exception handling policies. The evaluation of EPL was based on a user-centric observational study and case studies. The user-centric study was performed to observe how potential users of the language actually use it. With this study, we could better understand the trade-offs related to different language design decisions based on concrete and well-documented observations and experiences reported by participants. We identified some language characteristics that hindered its use and that motivated new language constructs. In addition, we performed case studies with one open-source project and two industry-strength systems to investigate how specifying and verifying exception handling policies may assist in detecting exception handling problems. The results show that violations of exception handling policies help to indicate potential faults in the exception handling code.
C1 [Barbosa, Eiji Adachi; Garcia, Alessandro; Jakobus, Benjamin] Pontif Catholic Univ Rio de Janeiro, Dept Informat, OPUS Res Grp, Rua Marques de Sao Vicente,255 Gavea, BR-22453900 Rio De Janeiro, Brazil.
   [Robillard, Martin P.] McGill Univ, Sch Comp Sci, 3480 Univ St,McConnell Engn Bldg,Off 114N, Montreal, PQ H3A 2A7, Canada.
C3 McGill University
RP Barbosa, EA (corresponding author), Pontif Catholic Univ Rio de Janeiro, Dept Informat, OPUS Res Grp, Rua Marques de Sao Vicente,255 Gavea, BR-22453900 Rio De Janeiro, Brazil.
EM ebarbosa@inf.puc-rio.br; afgarcia@inf.puc-rio.br; martin@cs.mcgill.ca;
   bjakobus@inf.puc-rio.br
FU Fundacao Carlos Chagas Filho de Amparo a Pesquisa do Estado do Rio de
   Janeiro (FAPERJ) [E-26/100.386/2014]
FX Eiji Adachi Barbosa has been funded with support from Fundacao Carlos
   Chagas Filho de Amparo a Pesquisa do Estado do Rio de Janeiro (FAPERJ),
   grant E-26/100.386/2014.
CR [Anonymous], 1990, IEEE Std 610.12-1990, V42, P112, DOI [10.1109/IEEESTD.1990.101064, DOI 10.1109/IEEESTD.1990.101064]
   Barbosa E. A., 2012, 2012 26th Brazilian Symposium on Software Engineering (SBES), P171, DOI 10.1109/SBES.2012.22
   Barbosa E. A., 2012, 2012 Proceedings of 5th International Workshop on Exception Handling (WEH 2012), P52, DOI 10.1109/WEH.2012.6226601
   Barbosa E. A., 2011, 2011 Proceedings of 5th Latin-American Symposium on Dependable Computing Workshops (LADC-W 2011), P17, DOI 10.1109/LADCW.2011.19
   Barbosa EA, 2014, 2014 28TH BRAZILIAN SYMPOSIUM ON SOFTWARE ENGINEERING (SBES 2014), P11, DOI 10.1109/SBES.2014.19
   Bloch J., 2008, THE JAVA SERIES
   Brito PHS, 2009, J COMPUT SCI TECH-CH, V24, P212, DOI 10.1007/s11390-009-9219-2
   Cacho N, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P584, DOI 10.1145/2568225.2568308
   Cacho N, 2014, PROC IEEE INT CONF S, P31, DOI 10.1109/ICSME.2014.25
   Cacho Nelio., 2008, AOSD 08 P 7 INT C AS, P72
   Clements P. C., 1996, Proceedings of the 8th International Workshop on Software Specification and Design, P16, DOI 10.1109/IWSSD.1996.501143
   Coelho R, 2008, LECT NOTES COMPUT SC, V5142, P207, DOI 10.1007/978-3-540-70592-5_10
   Creswell J. W., 2007, DESIGNING CONDUCTING
   CRISTIAN F, 1982, IEEE T COMPUT, V31, P531, DOI 10.1109/TC.1982.1676035
   DAVIS FD, 1989, MIS QUART, V13, P319, DOI 10.2307/249008
   de Lemos R., 2001, EXCEPTION HANDLING S
   Ebert F, 2015, J SYST SOFTWARE, V106, P82, DOI 10.1016/j.jss.2015.04.066
   Ebert F, 2013, PROC IEEE INT CONF S, P448, DOI 10.1109/ICSM.2013.69
   Eichberg M, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P391, DOI 10.1145/1368088.1368142
   Figueiredo E, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P261, DOI 10.1145/1368088.1368124
   Fowler M., 2010, Domain-specific languages
   Garcia AF, 2001, J SYST SOFTWARE, V59, P197, DOI 10.1016/S0164-1212(01)00062-0
   GOODENOUGH JB, 1975, COMMUN ACM, V18, P683, DOI 10.1145/361227.361230
   Gurgel A., 2014, P 13 INT C MOD NEW Y, P61
   Jackobus B., 2015, P 26 INT S SOFTW REL, P189
   Kienzle Jorg., 2008, WEH 08, P32
   Knodel Jens, 2007, 2007 WORKING IEEEIFI, P12, DOI 10.1109/wicsa.2007.1
   Kulesza U, 2006, PROC IEEE INT CONF S, P223
   LISKOV BH, 1979, IEEE T SOFTWARE ENG, V5, P546, DOI 10.1109/TSE.1979.230191
   Litke J. D., 1990, Proceedings TRI-Ada '90, P403, DOI 10.1145/255471.255565
   Malayeri D, 2006, LECT NOTES COMPUT SC, V4119, P200
   Marinescu C., 2011, Proceedings of the 12th International Workshop on Principles of Software Evolution and the 7th Annual ERCIM Workshop on Software Evolution, IWPSE-EVOL'11, page, P56
   Marinescu C, 2014, INT SYMP SYMB NUMERI, P250, DOI 10.1109/SYNASC.2013.40
   Meyer B., 1992, Eiffel: The Language
   Murphy G. C., 1995, SIGSOFT Software Engineering Notes, V20, P18, DOI 10.1145/222132.222136
   Rahman MM, 2014, IEEE INT WORK C SO, P285, DOI 10.1109/SCAM.2014.15
   Robillard M. P., 2000, Software Engineering Notes, V25, P2, DOI 10.1145/357474.355046
   Sales R. J.  Jr., 2011, 2011 Proceedings of 5th Latin-American Symposium on Dependable Computing Workshops (LADC-W 2011), P9, DOI 10.1109/LADCW.2011.26
   Sawadpong P., 2012, 2012 IEEE 14th International Symposium on High-Assurance Systems Engineering (HASE 2012), P90, DOI 10.1109/HASE.2012.24
   Shah H, 2009, 2009 ICSE WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING, P80, DOI 10.1109/CHASE.2009.5071417
   Shah HB, 2010, IEEE T SOFTWARE ENG, V36, P150, DOI 10.1109/TSE.2010.7
   Silva T. B. L., 2013, P 28 ANN ACM S APPL, P1661, DOI DOI 10.1145/2480362.2480675
   Sinha S, 2000, IEEE T SOFTWARE ENG, V26, P849, DOI 10.1109/32.877846
   Soares S, 2002, ACM SIGPLAN NOTICES, V37, P174, DOI 10.1145/583854.582437
   Terra R, 2009, SOFTWARE PRACT EXPER, V39, P1073, DOI 10.1002/spe.931
   van Ommering R, 2001, COMPUT LANG, V27, P3, DOI 10.1016/S0096-0551(01)00013-3
NR 46
TC 16
Z9 17
U1 0
U2 5
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUN
PY 2016
VL 42
IS 6
BP 559
EP 584
DI 10.1109/TSE.2015.2506164
PG 26
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA DR7BD
UT WOS:000380054100004
DA 2024-07-18
ER

PT J
AU Ye, X
   Bunescu, R
   Liu, C
AF Ye, Xin
   Bunescu, Razvan
   Liu, Chang
TI Mapping Bug Reports to Relevant Files: A Ranking Model, a Fine-Grained
   Benchmark, and Feature Evaluation
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Bug reports; software maintenance; learning to rank
ID FEATURE LOCATION; PROBABILISTIC RANKING; INFORMATION-RETRIEVAL;
   PREDICTING FAULTS; SOURCE CODE; LOCALIZATION; EXECUTION; IR
AB When a new bug report is received, developers usually need to reproduce the bug and perform code reviews to find the cause, a process that can be tedious and time consuming. A tool for ranking all the source files with respect to how likely they are to contain the cause of the bug would enable developers to narrow down their search and improve productivity. This paper introduces an adaptive ranking approach that leverages project knowledge through functional decomposition of source code, API descriptions of library components, the bug-fixing history, the code change history, and the file dependency graph. Given a bug report, the ranking score of each source file is computed as a weighted combination of an array of features, where the weights are trained automatically on previously solved bug reports using a learning-to-rank technique. We evaluate the ranking system on six large scale open source Java projects, using the before-fix version of the project for every bug report. The experimental results show that the learning-to-rank approach outperforms three recent state-of-the-art methods. In particular, our method makes correct recommendations within the top 10 ranked source files for over 70 percent of the bug reports in the Eclipse Platform and Tomcat projects.
C1 [Ye, Xin; Bunescu, Razvan; Liu, Chang] Ohio Univ, Sch Elect Engn & Comp Sci, Athens, OH 45701 USA.
C3 University System of Ohio; Ohio University
RP Ye, X; Bunescu, R; Liu, C (corresponding author), Ohio Univ, Sch Elect Engn & Comp Sci, Athens, OH 45701 USA.
EM xy348709@ohio.edu; bunescu@ohio.edu; liuc@ohio.edu
RI Ye, Xin/T-5436-2018
CR Anh Tuan Nguyen, 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P263, DOI 10.1109/ASE.2011.6100062
   [Anonymous], 2006, P ACMSIGKDD INT C KN
   [Anonymous], 2017, Encyclopedia of Machine Learning and Data Mining, DOI DOI 10.1007/978-1-4899-7687-1964
   [Anonymous], 2009, OBJECT ORIENTED SOFT
   Antoniol G, 2005, PROC IEEE INT CONF S, P357
   Antoniol G, 2006, IEEE T SOFTWARE ENG, V32, P627, DOI 10.1109/TSE.2006.88
   Ashok B, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P373
   Bacchelli A, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P712, DOI 10.1109/ICSE.2013.6606617
   Bajracharya S.K., 2010, P 18 ACM SIGSOFT INT, P157, DOI 10.1145/1882291.1882316
   Bell R., 2006, Proc. 2006 International Symposium on Software Testing and Analysis, P61
   Bettenburg N., 2008, P 16 ACM SIGSOFT INT, P308
   BIGGERSTAFF TJ, 1993, PROC INT CONF SOFTW, P482, DOI 10.1109/ICSE.1993.346017
   Binkley D, 2014, PROC IEEE INT CONF S, P441, DOI 10.1109/ICSME.2014.70
   Blei DM, 2003, J MACH LEARN RES, V3, P993, DOI 10.1162/jmlr.2003.3.4-5.993
   Breu S, 2010, 2010 ACM CONFERENCE ON COMPUTER SUPPORTED COOPERATIVE WORK, P301
   Brun Y, 2004, PROC INT CONF SOFTW, P480, DOI 10.1109/ICSE.2004.1317470
   Burger Martin., 2011, Proceedings of the 2011 International Symposium on Software Testing and Analysis, ISSTA '11, P221, DOI DOI 10.1145/2001420.2001447
   Buse RPL, 2012, PROC INT CONF SOFTW, P987, DOI 10.1109/ICSE.2012.6227122
   Cleve H, 2005, PROC INT CONF SOFTW, P342
   Dallmeier V., 2007, P 22 IEEE ACM INT C, P433
   Dasgupta T, 2013, PROC IEEE INT CONF S, P320, DOI 10.1109/ICSM.2013.43
   Daum'e Hal., 2005, P C HUMAN LANGUAGE T, P97
   Dit B, 2013, IEEE WORK CONF MIN S, P131, DOI 10.1109/MSR.2013.6624019
   Dit B, 2013, J SOFTW-EVOL PROC, V25, P53, DOI 10.1002/smr.567
   Dit B, 2013, EMPIR SOFTW ENG, V18, P277, DOI 10.1007/s10664-011-9194-4
   Enslen E, 2009, 2009 6TH IEEE INTERNATIONAL WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES, P71, DOI 10.1109/MSR.2009.5069482
   Gay G, 2009, PROC IEEE INT CONF S, P351, DOI 10.1109/ICSM.2009.5306315
   Gethers M, 2012, PROC INT CONF SOFTW, P430, DOI 10.1109/ICSE.2012.6227172
   Hassan AE, 2009, PROC INT CONF SOFTW, P78, DOI 10.1109/ICSE.2009.5070510
   Jin Wei., 2013, P 2013 INT S SOFTWAR, P213, DOI DOI 10.1145/2483760.2483763
   Joachims T, 2002, P 8 ACM SIGKDD INT C, P133, DOI [DOI 10.1145/775047.775067, 10.1145/775047.775067]
   Kim D, 2013, IEEE T SOFTWARE ENG, V39, P1597, DOI 10.1109/TSE.2013.24
   Kim S, 2008, IEEE T SOFTWARE ENG, V34, P181, DOI 10.1109/TSE.2007.70773
   Kim S, 2007, PROC INT CONF SOFTW, P489
   Kleinberg JM, 1999, J ACM, V46, P604, DOI 10.1145/324133.324140
   Kohavi R, 1997, ARTIF INTELL, V97, P273, DOI 10.1016/S0004-3702(97)00043-X
   LaToza ThomasD., 2010, EVALUATION USABILITY, p8:1
   Lee T., 2011, Proceedings of the 19th ACM SIGSOFT symposium and the 13th European conference on Foundations of software engineering, P311
   Liu C., 2005, P EUR SOFTW ENG C HE, V30, P286
   Liu Dapeng, 2007, P 22 IEEEACM INT C A, P234, DOI 10.1145/1321631.1321667
   Lukins SK, 2010, INFORM SOFTWARE TECH, V52, P972, DOI 10.1016/j.infsof.2010.04.002
   MANN HB, 1947, ANN MATH STAT, V18, P50, DOI 10.1214/aoms/1177730491
   Manning Christopher D., 2008, INTRO INFORM RETRIEV
   Marcus A, 2004, 11TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P214, DOI 10.1109/WCRE.2004.10
   Mcmillan C, 2013, ACM T SOFTW ENG METH, V22, DOI 10.1145/2522920.2522930
   McMillan C, 2012, IEEE T SOFTWARE ENG, V38, P1069, DOI 10.1109/TSE.2011.84
   McMillan C, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P111, DOI 10.1145/1985793.1985809
   Menzies T, 2007, IEEE T SOFTWARE ENG, V33, P2, DOI 10.1109/TSE.2007.256941
   Moser R, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P181, DOI 10.1145/1368088.1368114
   Murphy-Hill E, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P332, DOI 10.1109/ICSE.2013.6606579
   Nagappan Nachiappan, 2010, Proceedings of the 2010 IEEE 21st International Symposium on Software Reliability Engineering (ISSRE 2010), P309, DOI 10.1109/ISSRE.2010.25
   Nagappan N., 2006, 28th International Conference on Software Engineering Proceedings, P452, DOI 10.1145/1134285.1134349
   Ostrand TJ, 2005, IEEE T SOFTWARE ENG, V31, P340, DOI 10.1109/TSE.2005.49
   Page L., 1999, 199966 STANF U STANF
   Poshyvanyk D, 2007, IEEE T SOFTWARE ENG, V33, P420, DOI [10.1109/TSE.2007.1016, 10.1109/TSE.2007.1016.]
   Poshyvanyk D, 2007, INT C PROGRAM COMPRE, P37
   Poshyvanyk D, 2006, INT C PROGRAM COMPRE, P137, DOI 10.1109/ICPC.2006.17
   Rahman F, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P432, DOI 10.1109/ICSE.2013.6606589
   Ramaswamy S, 2001, P NATL ACAD SCI USA, V98, P15149, DOI 10.1073/pnas.211566398
   Rao S., 2011, P 8 WORK C MIN SOFTW, P43
   Saha RK, 2013, IEEE INT CONF AUTOM, P345, DOI 10.1109/ASE.2013.6693093
   Shepherd David, 2007, P 6 INT C ASP OR SOF, P212
   Shivaji S, 2013, IEEE T SOFTWARE ENG, V39, P552, DOI 10.1109/TSE.2012.43
   Stoerzer Maximilian., 2006, P 14 ACM SIGSOFT INT, P57
   VOORHEES EM, 1999, P 8 TEXT RETR C TREC, V8, P77
   WHITNEY AW, 1971, IEEE T COMPUT, VC 20, P1100, DOI 10.1109/T-C.1971.223410
   Wilde N., 1992, Conference on Software Maintenance 1992 (Cat.No.92CH3206-0), P200, DOI 10.1109/ICSM.1992.242542
   Wong CP, 2014, PROC IEEE INT CONF S, P181, DOI 10.1109/ICSME.2014.40
   Ye X, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P689, DOI 10.1145/2635868.2635874
   Zhou J, 2012, PROC INT CONF SOFTW, P14, DOI 10.1109/ICSE.2012.6227210
   Zimmermann T, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P531, DOI 10.1145/1368088.1368161
NR 71
TC 53
Z9 64
U1 1
U2 12
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD APR
PY 2016
VL 42
IS 4
BP 379
EP 402
DI 10.1109/TSE.2015.2479232
PG 24
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA DK6LP
UT WOS:000375035600005
DA 2024-07-18
ER

PT J
AU Ozcelik, B
   Yilmaz, C
AF Ozcelik, Burcu
   Yilmaz, Cemal
TI Seer: A Lightweight Online Failure Prediction Approach
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Online failure prediction; hardware performance counters; software
   quality assurance; software reliability
AB Online failure prediction approaches aim to predict the manifestation of failures at runtime before the failures actually occur. Existing approaches generally refrain themselves from collecting internal execution data, which can further improve the prediction quality. One reason behind this general trend is the runtime overhead incurred by the measurement instruments that collect the data. Since these approaches are targeted at deployed software systems, excessive runtime overhead is generally undesirable. In this work we conjecture that large cost reductions in collecting internal execution data for online failure prediction may derive from pushing the substantial parts of the data collection work onto the hardware. To test this hypothesis, we present a lightweight online failure prediction approach, called Seer, in which most of the data collection work is performed by fast hardware performance counters. The hardware-collected data is augmented with further data collected by a minimal amount of software instrumentation that is added to the systems software. In our empirical evaluations conducted on three open source projects, Seer performed significantly better than other related approaches in predicting the manifestation of failures.
C1 [Yilmaz, Cemal] Sabanci Univ, Fac Engn & Nat Sci, TR-34956 Istanbul, Turkey.
C3 Sabanci University
RP Yilmaz, C (corresponding author), Sabanci Univ, Fac Engn & Nat Sci, TR-34956 Istanbul, Turkey.
EM cyilmaz@sabanciuniv.edu
RI Yilmaz, Cemal/AAY-4500-2020
OI Yilmaz, Cemal/0000-0003-4124-2295; Ozcelik Mutlu,
   Burcu/0000-0001-9615-4351
FU Marie Curie International Reintegration Grant within European Community;
   Scientific and Technological Research Council of Turkey [109E182]
FX This research was supported by a Marie Curie International Reintegration
   Grant within theseventh European Community Framework Programme
   (FP7-PEOPLE-IRG-2008), and by the Scientific and Technological Research
   Council of Turkey (109E182).
CR Abreu R, 2008, ENASE 2008: PROCEEDINGS OF THE THIRD INTERNATIONAL CONFERENCE ON EVALUATION OF NOVEL APPROACHES TO SOFTWARE ENGINEERING, P123
   Abreu R, 2008, APPLIED COMPUTING 2008, VOLS 1-3, P712
   Andrzejak A, 2007, 2007 10TH IFIP/IEEE INTERNATIONAL SYMPOSIUM ON INTEGRATED NETWORK MANAGEMENT (IM 2009), VOLS 1 AND 2, P159, DOI 10.1109/INM.2007.374780
   [Anonymous], STAR INT WORKSH SELF
   [Anonymous], P 19 EUR C OBJ OR PR
   [Anonymous], 1996, HDB SOFTWARE RELIABI
   [Anonymous], THESIS HUMBOLDT U BE
   [Anonymous], P 27 ANN NASA GODD I
   BLOOM BH, 1970, COMMUN ACM, V13, P422, DOI 10.1145/362686.362692
   Bodík P, 2005, ICAC 2005: SECOND INTERNATIONAL CONFERENCE ON AUTONOMIC COMPUTING, PROCEEDINGS, P89
   Bowring J. F., 2004, Software Engineering Notes, V29, P195, DOI 10.1145/1013886.1007539
   Cámara J, 2013, COMPUTING, V95, P689, DOI 10.1007/s00607-013-0311-7
   Casanova P, 2013, PROCEEDINGS OF THE 8TH INTERNATIONAL SYMPOSIUM ON SOFTWARE ENGINEERING FOR ADAPTIVE AND SELF-MANAGING SYSTEMS (SEAMS 2013), P103, DOI 10.1109/SEAMS.2013.6595497
   Casanova P, 2011, LECT NOTES COMPUT SC, V6903, P261, DOI 10.1007/978-3-642-23798-0_29
   Cassidy KJ, 2002, INTERNATIONAL CONFERENCE ON DEPENDABLE SYSTEMS AND NETWORKS, PROCEEDINGS, P478, DOI 10.1109/DSN.2002.1028933
   Chen MY, 2002, INTERNATIONAL CONFERENCE ON DEPENDABLE SYSTEMS AND NETWORKS, PROCEEDINGS, P595, DOI 10.1109/DSN.2002.1029005
   Cheng FT, 2005, IEEE INT CONF ROBOT, P4062
   Dickinson W., 2001, Software Engineering Notes, V26, P246, DOI 10.1145/503271.503243
   Dickinson W, 2001, PROC INT CONF SOFTW, P339, DOI 10.1109/ICSE.2001.919107
   Do HS, 2005, EMPIR SOFTW ENG, V10, P405, DOI 10.1007/s10664-005-3861-2
   Elbaum S, 2003, ISSRE 2003: 14TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P108, DOI 10.1109/ISSRE.2003.1251035
   Fu S, 2007, SYM REL DIST SYST, P175, DOI 10.1109/SRDS.2007.18
   Garg S, 1998, NINTH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P283, DOI 10.1109/ISSRE.1998.730892
   Garlan D, 2004, COMPUTER, V37, P46, DOI 10.1109/MC.2004.175
   Hamerly G, 2001, P 18 INT C MACH LEAR, P202, DOI DOI 10.5555/645530.655825
   Haran M., 2005, ESECSIGSOFT FSE, P146, DOI [10.1145/1095430.1081732, DOI 10.1145/1095430.1081732]
   Hatonen K, 1996, NOMS '96 - 1996 IEEE NETWORK OPERATIONS AND MANAGEMENT SYMPOSIUM, VOLS. 1-4, P520, DOI 10.1109/NOMS.1996.539622
   Hellerstein JL, 1999, INTEGRATED NETWORK MANAGEMENT VI, P309, DOI 10.1109/INM.1999.770691
   Hoglund Greg, 2004, Exploiting Software: How to Break Code
   Hughes GF, 2002, IEEE T RELIAB, V51, P350, DOI 10.1109/TR.2002.802886
   Jones JA, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P467, DOI 10.1109/ICSE.2002.1007991
   Kapadia N. H., 1999, Proceedings. The Eighth International Symposium on High Performance Distributed Computing (Cat. No.99TH8469), P47, DOI 10.1109/HPDC.1999.805281
   Lal R, 1998, THIRD IEEE INTERNATIONAL HIGH-ASSURANCE SYSTEMS ENGINEERING SYMPOSIUM, PROCEEDINGS, P232, DOI 10.1109/HASE.1998.731618
   Levy D, 2003, ISSRE 2003: 14TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P271, DOI 10.1109/ISSRE.2003.1251049
   Li L, 2002, 2002 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P91, DOI 10.1109/ISESE.2002.1166929
   Liang YL, 2006, I C DEPEND SYS NETWO, P425
   Liblit B, 2003, ACM SIGPLAN NOTICES, V38, P141, DOI 10.1145/780822.781148
   LIN TTY, 1990, IEEE T RELIAB, V39, P419, DOI 10.1109/24.58720
   Meng HN, 2007, PROCEEDINGS OF 2007 INTERNATIONAL CONFERENCE ON MACHINE LEARNING AND CYBERNETICS, VOLS 1-7, P3034
   Nassar F. A., 1985, Proceedings of the Real-Time Systems Symposium (Cat. No.85CH2220-2), P160
   Ozcelik B., 2010, Proceedings 2010 Second International Conference on Advances in System Testing and Validation Lifecycle (VALID), P93, DOI 10.1109/VALID.2010.10
   Pfefferman JD, 2002, IEEE T RELIAB, V51, P434, DOI 10.1109/TR.2002.804733
   Podgurski A, 2003, PROC INT CONF SOFTW, P465, DOI 10.1109/ICSE.2003.1201224
   Racunas P, 2007, INT S HIGH PERF COMP, P169
   Salfner F, 2005, LECT NOTES COMPUT SC, V3460, P143
   Salfner F., 2006, Proceedings. 20th International Parallel and Distributed Processing Symposium (IEEE Cat. No.06TH8860)
   Salfner F, 2007, SYM REL DIST SYST, P161, DOI 10.1109/SRDS.2007.35
   Salfner F, 2010, ACM COMPUT SURV, V42, DOI 10.1145/1670679.1670680
   Santos Joao, 2012, Testing Software and Systems. 24th IFIP WG 6.1 International Conference (ICTSS 2012). Proceedings, P215, DOI 10.1007/978-3-642-34691-0_16
   Shereshevsky M, 2003, 2003 INTERNATIONAL CONFERENCE ON DEPENDABLE SYSTEMS AND NETWORKS, PROCEEDINGS, P721, DOI 10.1109/DSN.2003.1209987
   Smeds N, 2003, LECT NOTES COMPUT SC, V2716, P260
   Vaidyanathan K., 1999, Proceedings 10th International Symposium on Software Reliability Engineering (Cat. No.PR00443), P84, DOI 10.1109/ISSRE.1999.809313
   Vilalta R, 2002, 2002 IEEE INTERNATIONAL CONFERENCE ON DATA MINING, PROCEEDINGS, P474, DOI 10.1109/ICDM.2002.1183991
   Vilalta R, 2002, IBM SYST J, V41, P461, DOI 10.1147/sj.413.0461
   Weiss GM, 1999, GECCO-99: PROCEEDINGS OF THE GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P718
   Witten I. H., 2005, DATA MINING PRACTICA
   Yilmaz C., 2010, Proceedings 2010 Second International Conference on Advances in System Testing and Validation Lifecycle (VALID), P87, DOI 10.1109/VALID.2010.8
   Yilmaz C., 2010, P 18 ACM SIGSOFT INT, P67
   Yilmaz C, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P81, DOI 10.1145/1368088.1368100
   Zeller A., 2005, Why Programs Fail: A Guide to Systematic Debugging
NR 60
TC 19
Z9 19
U1 0
U2 20
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JAN
PY 2016
VL 42
IS 1
BP 26
EP 46
DI 10.1109/TSE.2015.2442577
PG 21
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA DD5UC
UT WOS:000369989000003
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Tian, ZZ
   Zheng, QH
   Liu, T
   Fan, M
   Zhuang, EY
   Yang, ZJ
AF Tian, Zhenzhou
   Zheng, Qinghua
   Liu, Ting
   Fan, Ming
   Zhuang, Eryue
   Yang, Zijiang
TI Software Plagiarism Detection with Birthmarks Based on Dynamic Key
   Instruction Sequences
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Software plagiarism detection; software birthmark
ID SYSTEM; CODE
AB A software birthmark is a unique characteristic of a program. Thus, comparing the birthmarks between the plaintiff and defendant programs provides an effective approach for software plagiarism detection. However, software birthmark generation faces two main challenges: the absence of source code and various code obfuscation techniques that attempt to hide the characteristics of a program. In this paper, we propose a new type of software birthmark called DYnamic Key Instruction Sequence (DYKIS) that can be extracted from an executable without the need for source code. The plagiarism detection algorithm based on our new birthmarks is resilient to both weak obfuscation techniques such as compiler optimizations and strong obfuscation techniques implemented in tools such as SandMark, Allatori and Upx. We have developed a tool called DYKIS-PD (DYKIS Plagiarism Detection tool) and conducted extensive experiments on large number of binary programs. The tool, the benchmarks and the experimental results are all publicly available.
C1 [Liu, Ting] Xi An Jiao Tong Univ, Sch Elect & Informat Engn, Minist Educ, Key Lab Intelligent Networks & Network Secur MOEK, Xian 710049, Peoples R China.
   [Tian, Zhenzhou; Zheng, Qinghua; Fan, Ming; Zhuang, Eryue] Xi An Jiao Tong Univ, Dept Comp Sci & Technol, Minist Educ, Key Lab Intelligent Networks & Network Secur MOEK, Xian 710049, Peoples R China.
   [Yang, Zijiang] Western Michigan Univ, Dept Comp Sci, Kalamazoo, MI 49008 USA.
   [Yang, Zijiang] Xi An Jiao Tong Univ, Dept Comp Sci & Technol, Xian 710049, Peoples R China.
C3 Xi'an Jiaotong University; Xi'an Jiaotong University; Western Michigan
   University; Xi'an Jiaotong University
RP Tian, ZZ (corresponding author), Xi An Jiao Tong Univ, Dept Comp Sci & Technol, Minist Educ, Key Lab Intelligent Networks & Network Secur MOEK, Xian 710049, Peoples R China.
EM zztian@stu.xjtu.edu.cn; qhzheng@mail.xjtu.edu.cn;
   tingliu@mail.xjtu.edu.cn; fanming.911025@stu.xjtu.edu.cn;
   zhuangeryue@stu.xjtu.edu.cn; zijiang.yang@wmich.edu
FU National Science Foundation of China [91118005, 91218301, 61221063,
   61428206, 61203174, 91418205, 61472318]; Ministry of Education
   Innovation Research Team [IRT13035]; Key Projects in the National
   Science and Technology Pillar Program of China [2013BAK09B01];
   Fundamental Research Funds for the Central Universities; National
   Science Foundation (NSF) [CCF-1500365]; Direct For Computer & Info Scie
   & Enginr; Division of Computing and Communication Foundations [1500365]
   Funding Source: National Science Foundation
FX This work extends our previous conference paper published at IEEE HPCC.
   The research was supported in part by National Science Foundation of
   China under grants (91118005, 91218301, 61221063, 61428206, 61203174,
   91418205, 61472318), Ministry of Education Innovation Research Team
   (IRT13035), Key Projects in the National Science and Technology Pillar
   Program of China (2013BAK09B01), the Fundamental Research Funds for the
   Central Universities, and the National Science Foundation (NSF) under
   grant CCF-1500365. Any opinions, findings, and conclusions expressed in
   this material are those of the authors and do not necessarily reflect
   the views of the funding agencies. T. Liu is the corresponding author.
CR [Anonymous], P NETW DISTR SYST SE
   [Anonymous], 2006, P 2006 ACM SIGPLAN S
   [Anonymous], P INT S FUT SOFTW TE
   [Anonymous], 2005, P 2005 ACM S APPL CO, DOI DOI 10.1145/1066677.1066753
   [Anonymous], 2012, P 2 ACM C DATA APPL, DOI DOI 10.1145/2133601.2133640
   Bai Y, 2008, ASWEC 2008: 19TH AUSTRALIAN SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P644, DOI 10.1109/ASWEC.2008.21
   Bajracharya S.K., 2010, P 18 ACM SIGSOFT INT, P157, DOI 10.1145/1882291.1882316
   BAKER BS, 1995, SECOND WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P86, DOI 10.1109/WCRE.1995.514697
   Basit Hamid Abdul, 2005, SIGSOFT Softw. Eng. Notes, V30, P156, DOI [10.1145/1095430.1081733, DOI 10.1145/1095430.1081733]
   Baxter ID, 2004, PROC INT CONF SOFTW, P625, DOI 10.1109/ICSE.2004.1317484
   Bayer U., 2009, NDSS, VVolume 9, P8
   Bin Lu,, 2007, ICSC 2007: INTERNATIONAL CONFERENCE ON SEMANTIC COMPUTING, PROCEEDINGS, P37, DOI 10.1109/ICSC.2007.15
   Blackburn SM, 2006, ACM SIGPLAN NOTICES, V41, P169, DOI 10.1145/1167515.1167488
   Bruschi D, 2006, LECT NOTES COMPUT SC, V4064, P129
   Cavallaro L, 2008, LECT NOTES COMPUT SC, V5137, P143, DOI 10.1007/978-3-540-70542-0_8
   Chaki Sagar., 2011, Proceedings of the 17th ACM SIGKDD in-ternational conference on Knowledge discovery and data mining, P15
   Chan PPF, 2013, IEEE T INF FOREN SEC, V8, P101, DOI 10.1109/TIFS.2012.2223685
   Choi S, 2009, J SYST SOFTWARE, V82, P862, DOI 10.1016/j.jss.2008.11.848
   Collberg C, 2004, ACM SIGPLAN NOTICES, V39, P107, DOI 10.1145/996893.996856
   Collberg C., 2003, IEEE Security & Privacy, V1, P40, DOI 10.1109/MSECP.2003.1219058
   Collberg C., 1999, Conference Record of POPL '99. 26th ACM SIGPLAN-SIGACT. Symposium on Principles of Programming Languages, P311, DOI 10.1145/292540.292569
   Collberg C., 1998, 164 TR U AUCKL DEP C
   Cosma G, 2012, IEEE T COMPUT, V61, P379, DOI 10.1109/TC.2011.223
   Ducasse S., 1999, Proceedings IEEE International Conference on Software Maintenance - 1999 (ICSM'99). `Software Maintenance for Business Change' (Cat. No.99CB36360), P109, DOI 10.1109/ICSM.1999.792593
   Fukuda K, 2013, 2013 14TH ACIS INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, ARTIFICIAL INTELLIGENCE, NETWORKING AND PARALLEL/DISTRIBUTED COMPUTING (SNPD 2013), P505, DOI 10.1109/SNPD.2013.11
   Gabel M, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P321, DOI 10.1145/1368088.1368132
   Gao D., 2005, Recent Advances in Intrusion Detection. 8th International Symposium, RAID 2005. Revised Papers (Lecture Notes in Computer Science Vol. 3858), P63
   Guo FL, 2008, LECT NOTES COMPUT SC, V5230, P98
   Hemel A., 2011, P 8 WORK C MIN SOFTW, P63
   Hu X, 2009, CCS'09: PROCEEDINGS OF THE 16TH ACM CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P611
   Jhi YC, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P756, DOI 10.1145/1985793.1985899
   Ji JH, 2007, ITICSE 2007: 12TH ANNUAL CONFERENCE ON INNOVATION & TECHNOLOGY IN COMPUTER SCIENCE EDUCATION, P73, DOI 10.1145/1269900.1268807
   Jiang LX, 2007, PROC INT CONF SOFTW, P96
   Jiang LX, 2009, ISSTA 2009: INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P81
   Kamiya T, 2002, IEEE T SOFTWARE ENG, V28, P654, DOI 10.1109/TSE.2002.1019480
   Kang B., 2014, P 2014 C RES ADAPTIV, P272, DOI [10.1145/2663761.2664219, DOI 10.1145/2663761.2664219]
   Kawaguchi S, 2006, J SYST SOFTWARE, V79, P939, DOI 10.1016/j.jss.2005.06.044
   Kemerlis VP, 2012, ACM SIGPLAN NOTICES, V47, P121, DOI 10.1145/2365864.2151042
   Kim H, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P301, DOI 10.1145/1985793.1985835
   Kolter JZ, 2006, J MACH LEARN RES, V7, P2721
   Komondoor R, 2001, LECT NOTES COMPUT SC, V2126, P40
   Koschke R, 2006, WORK CONF REVERSE EN, P253
   Krinke J, 2001, EIGHTH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P301, DOI 10.1109/WCRE.2001.957835
   Li ZM, 2006, IEEE T SOFTWARE ENG, V32, P176, DOI 10.1109/TSE.2006.28
   Lim HI, 2012, IEICE T INF SYST, VE95D, P565, DOI 10.1587/transinf.E95.D.565
   Lim HI, 2009, INFORM SOFTWARE TECH, V51, P1338, DOI 10.1016/j.infsof.2009.04.011
   Linn C., 2003, P 10 ACM C COMP COMM, P290, DOI DOI 10.1145/948109.948149
   Liu Chao, 2006, Proc. 12th ACMSIGKDD Int'l Con. on Knowledge Discovery and Data Mining (KDD 06), P872, DOI DOI 10.1145/1150402.1150522
   Luk CK, 2005, ACM SIGPLAN NOTICES, V40, P190, DOI 10.1145/1064978.1065034
   Luo LN, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P389, DOI 10.1145/2635868.2635900
   MATTHEWS BW, 1975, BIOCHIM BIOPHYS ACTA, V405, P442, DOI 10.1016/0005-2795(75)90109-9
   McMillan C, 2012, PROC INT CONF SOFTW, P848, DOI 10.1109/ICSE.2012.6227134
   McMillan C, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P111, DOI 10.1145/1985793.1985809
   Min-Jae Kim, 2010, Proceedings of the 2010 13th IEEE International Symposium on Object and Component-Oriented Real-Time Distributed Computing (ISORC 2010). Volume I: Main Symposium, P80, DOI 10.1109/ISORC.2010.23
   Myles G, 2004, LECT NOTES COMPUT SC, V3225, P404
   Nagra Jasvir., 2002, AUST COMPUT SCI COMM, V24, P177, DOI 10.1145/563857.563822
   Newsom J., 2005, PRACTICAL APPROACHES, P1
   Park H, 2011, COMPUT J, V54, P108, DOI 10.1093/comjnl/bxp095
   Popov IV, 2007, USENIX ASSOCIATION PROCEEDINGS OF THE 16TH USENIX SECURITY SYMPOSIUM, P275
   Prechelt L, 2002, J UNIVERS COMPUT SCI, V8, P1016
   Rieck K, 2008, LECT NOTES COMPUT SC, V5137, P108, DOI 10.1007/978-3-540-70542-0_6
   Roundy KA, 2013, ACM COMPUT SURV, V46, DOI 10.1145/2522968.2522972
   Sæbjornsen A, 2009, ISSTA 2009: INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P117
   SCHULER D., 2007, ASE 07, P274, DOI 10.1145/1321631.1321672
   Stylos J, 2006, IEEE SYMPOSIUM ON VISUAL LANGUAGES AND HUMAN-CENTRIC COMPUTING, PROCEEDINGS, P195
   Tamada H, 2004, PROCEEDINGS OF THE IASTED INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P569
   Tamada H., 2007, NAISTISTR2007011 GRA
   Tian Z., 2014, INT C SOFTW ENG KNOW, P740
   Tian ZZ, 2013, 2013 IEEE 15TH INTERNATIONAL CONFERENCE ON HIGH PERFORMANCE COMPUTING AND COMMUNICATIONS & 2013 IEEE INTERNATIONAL CONFERENCE ON EMBEDDED AND UBIQUITOUS COMPUTING (HPCC_EUC), P619, DOI 10.1109/HPCC.and.EUC.2013.93
   Wang XR, 2009, 25TH ANNUAL COMPUTER SECURITY APPLICATIONS CONFERENCE, P149, DOI 10.1109/ACSAC.2009.24
   Wang XR, 2009, CCS'09: PROCEEDINGS OF THE 16TH ACM CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P280
   Xie X, 2010, INT CONF COMPUT AUTO, P47, DOI 10.1109/ICCAE.2010.5451791
   Yin H, 2007, CCS'07: PROCEEDINGS OF THE 14TH ACM CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P116
   Zhang F., 2014, P 2014 ACM C SEC PRI, P25, DOI DOI 10.1145/2627393.2627395
NR 74
TC 37
Z9 44
U1 0
U2 35
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD DEC
PY 2015
VL 41
IS 12
BP 1217
EP 1235
DI 10.1109/TSE.2015.2454508
PG 19
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA CY5TP
UT WOS:000366470700005
OA hybrid
DA 2024-07-18
ER

PT J
AU Ampatzoglou, A
   Chatzigeorgiou, A
   Charalampidou, S
   Avgeriou, P
AF Ampatzoglou, Apostolos
   Chatzigeorgiou, Alexander
   Charalampidou, Sofia
   Avgeriou, Paris
TI The Effect of GoF Design Patterns on Stability: A Case Study
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Design Tools and Techniques; Object-oriented programming;
   Metrics/Measurement
ID IMPACT; REPLICATION; SIMILARITY; ROLES
AB Stability refers to a software system's resistance to the "ripple effect", i.e., propagation of changes. In this paper, we investigate the stability of classes that participate in instances/occurrences of GoF design patterns. We examine whether the stability of such classes is affected by (a) the pattern type, (b) the role that the class plays in the pattern, (c) the number of pattern occurrences in which the class participates, and (d) the application domain. To this end, we conducted a case study on about 65.000 Java open-source classes, where we performed change impact analysis on classes that participate in zero, one (single pattern), or more than one (coupled) pattern occurrences. The results suggest that, the application of design patterns can provide the expected "shielding" of certain pattern-participating classes against changes, depending on their role in the pattern. Moreover, classes that participate in coupled pattern occurrences appear to be the least stable. The results can be used for assessing the benefits and liabilities of the use of patterns and for testing and refactoring prioritization, because less stable classes are expected to require more effort while testing, and urge for refactoring activities that would make them more resistant to change propagation.
C1 [Ampatzoglou, Apostolos; Charalampidou, Sofia; Avgeriou, Paris] Univ Groningen, Inst Math & Comp Sci, Groningen, Netherlands.
   [Chatzigeorgiou, Alexander] Univ Macedonia, Dept Appl Informat, Thessaloniki, Greece.
C3 University of Groningen; University of Macedonia
RP Ampatzoglou, A (corresponding author), Univ Groningen, Inst Math & Comp Sci, Groningen, Netherlands.
EM a.ampatzoglou@rug.nl; achat@uom.gr; s.charalampidou@rug.nl;
   paris@cs.rug.nl
RI Ampatzoglou, Apostolos/AAC-3632-2020; Chatzigeorgiou,
   Alexandros/AAL-6077-2021
OI Avgeriou, Paris/0000-0002-7101-0754
FU European Union (European Social Fund-ESF); Greek national fund through
   Operational Program "Education and Lifelong Learning" of the National
   Strategic Reference Framework (NSRF)-Research Funding Program:
   Thalis-Athens University of Economics and Business-SOFTWARE ENGINEERING
   RESEARCH PLATFORM
FX This research was cofinanced by the European Union (European Social
   Fund-ESF) and Greek national funds through the Operational Program
   "Education and Lifelong Learning" of the National Strategic Reference
   Framework (NSRF)-Research Funding Program: Thalis-Athens University of
   Economics and Business-SOFTWARE ENGINEERING RESEARCH PLATFORM. The
   authors would like to thank the Associate Editor Prof. Eric Tanter, and
   the anonymous reviewers for their valuable comments and suggestions to
   improve the quality of the paper. Apostolos Ampatzoglou is the
   corresponding author.
CR Ampatzoglou Apostolos, 2013, 2013 ACM / IEEE International Symposium on Empirical Software Engineering and Measurement (ESEM), P255, DOI 10.1109/ESEM.2013.48
   Ampatzoglou A, 2007, INFORM SOFTWARE TECH, V49, P445, DOI 10.1016/j.infsof.2006.07.003
   Ampatzoglou A, 2013, ENTERTAIN COMPUT, V4, P131, DOI 10.1016/j.entcom.2012.10.002
   Ampatzoglou A, 2013, J SYST SOFTWARE, V86, P1945, DOI 10.1016/j.jss.2013.03.063
   Ampatzoglou A, 2012, INFORM SOFTWARE TECH, V54, P331, DOI 10.1016/j.infsof.2011.10.006
   Ampatzoglou Apostolos., 2013, Proceedings of the 17th Panhellenic Conference on Informatics, PCI, P122
   [Anonymous], DISCOVERING STAT USI
   [Anonymous], 2003, ALAN APT SERIES
   [Anonymous], 1996, Pattern oriented software architecture: a system of patters
   [Anonymous], 2012, CASE STUDY RES SOFTW, DOI DOI 10.1002/9781118181034
   [Anonymous], 1997, Object-oriented software construction
   Aversano Lerina., 2007, PROC THE 6 EUROPEAN, P385, DOI [DOI 10.1145/1287624.1287680, 10.1145/1287624.1287680.]
   Basili V. R., 1994, Encyclopedia of Software Engineering, V1, P528
   Bieman JM, 2003, NINTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM, PROCEEDINGS, P40, DOI 10.1109/METRIC.2003.1232454
   Bieman JM, 2001, PROC IEEE INT CONF S, P580, DOI 10.1109/ICSM.2001.972775
   Binun A., 2009, IAITR200902 U BONN I
   Blondel VD, 2004, SIAM REV, V46, P647, DOI 10.1137/S0036144502415960
   Bohner SA, 1996, INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE, PROCEEDINGS, P42, DOI 10.1109/ICSM.1996.564987
   Di Penta M, 2008, PROC IEEE INT CONF S, P217, DOI 10.1109/ICSM.2008.4658070
   Elish M, 2006, P INT COMP SOFTW APP, P215
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   Gamma E., 1994, ANAL PATTERNS REUSAB
   Gatrell M, 2009, WORK CONF REVERSE EN, P160, DOI 10.1109/WCRE.2009.31
   Haney F.M., 1972, P AFIPS JOINT COMPUT, P173
   Hassaine S., 2011, P 27 INT C SOFTW MAI, P25
   HOROWITZ E, 1986, IEEE T SOFTWARE ENG, V12, P849, DOI 10.1109/TSE.1986.6312987
   *ISO, 1992, 9126 ISO
   Jaafar F, 2014, J SOFTW-EVOL PROC, V26, P77, DOI 10.1002/smr.1635
   Jeanmart S, 2009, INT SYMP EMP SOFTWAR, P69, DOI 10.1109/ESEM.2009.5316015
   Khomh F, 2008, CSMR 2008: 12TH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, P274
   Khomh F, 2009, WORK CONF REVERSE EN, P75, DOI 10.1109/WCRE.2009.28
   Khomh F, 2009, PROC IEEE INT CONF S, P83, DOI 10.1109/ICSM.2009.5306327
   Kouskouras KG, 2008, J SYST SOFTWARE, V81, P1725, DOI 10.1016/j.jss.2007.12.807
   Lehman M. M., 1985, Program Evolution: Processes of Software Change
   Li BX, 2013, SOFTW TEST VERIF REL, V23, P613, DOI 10.1002/stvr.1475
   Linares-Vasquez M, 2014, P 22 INT C PROGR COM, P232
   McNatt WB, 2001, P INT COMP SOFTW APP, P574, DOI 10.1109/CMPSAC.2001.960670
   Ng TH, 2007, PROC INT CONF SOFTW, P168
   Ng TH., 2006, P 2006 INT WORKSHOP, P51, DOI DOI 10.1145/1137702.1137713
   Prechelt L, 2001, IEEE T SOFTWARE ENG, V27, P1134, DOI 10.1109/32.988711
   Romano D., 2012, 2012 19th Working Conference on Reverse Engineering (WCRE), P437, DOI 10.1109/WCRE.2012.53
   Rovegård P, 2008, IEEE T SOFTWARE ENG, V34, P516, DOI 10.1109/TSE.2008.32
   Shi N, 2006, IEEE INT CONF AUTOM, P123
   SOMMERLAD P, 1998, P 3 EUR C PATT LANG
   SPSS Inc, 2013, SPSS MAN
   Tsantalis N, 2005, IEEE T SOFTWARE ENG, V31, P601, DOI 10.1109/TSE.2005.83
   Tsantalis N, 2006, IEEE T SOFTWARE ENG, V32, P896, DOI 10.1109/TSE.2006.112
   van Koten C, 2006, INFORM SOFTWARE TECH, V48, P59, DOI 10.1016/j.infsof.2005.03.002
   Vokác M, 2004, EMPIR SOFTW ENG, V9, P149, DOI 10.1023/B:EMSE.0000027778.69251.1f
   YAU SS, 1980, IEEE T SOFTWARE ENG, V6, P545, DOI 10.1109/TSE.1980.234503
   YAU SS, 1985, IEEE T SOFTWARE ENG, V11, P849, DOI 10.1109/TSE.1985.232544
   Yin R.K., 2011, Qualitative research from start to finish
   Zhang C, 2012, IEEE T SOFTWARE ENG, V38, P1213, DOI 10.1109/TSE.2011.79
NR 53
TC 44
Z9 47
U1 0
U2 11
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD AUG
PY 2015
VL 41
IS 8
BP 781
EP 802
DI 10.1109/TSE.2015.2414917
PG 22
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA CP0KI
UT WOS:000359563800004
OA Green Published
DA 2024-07-18
ER

PT J
AU Samuel, BM
   Watkins, LA
   Ehle, A
   Khatri, V
AF Samuel, Binny M.
   Watkins, Linwood A., III
   Ehle, Andrew
   Khatri, Vijay
TI Customizing the Representation Capabilities of Process Models:
   Understanding the Effects of Perceived Modeling Impediments
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Software process models; requirements/specifications management;
   requirements/specifications process; requirements/specification stools;
   UML; use cases; activity diagrams
ID INFORMATION-SYSTEMS; COGNITIVE FIT; ONTOLOGICAL DEFICIENCIES; CONCEPTUAL
   SCHEMAS; POTENTIAL PITFALLS; UML; IMPACT; DIAGRAMS; STRATEGY; INSIGHTS
AB Process modeling is useful during the analysis and design of systems. Prior research acknowledges both impediments to process modeling that limits its use as well as customizations that can be employed to help improve the creation of process models. However, no research to date has provided a rich examination of the linkages between perceived process modeling impediments and process modeling customizations. In order to help address this gap, we first conceptualized perceived impediments to using process models as a "lack of fit" between process modeling and another factor: 1) the role the process model is intended for; and 2) the task at hand. We conducted a case study at two large health insurance carriers to understand why the lack of fit existed and then show different types of process modeling customizations used to address the lack of fit and found a variety of "physical" and "process" customizations employed to overcome the lack of fits. We generalize our findings into propositions for future research that examine the dynamic interaction between process models and their need to be understood by individuals during systems analysis and design.
C1 [Samuel, Binny M.] Univ Western Ontario, Ivey Business Sch, London, ON N6G0N1, Canada.
   [Watkins, Linwood A., III; Ehle, Andrew; Khatri, Vijay] Indiana Univ, Kelley Sch Business, Bloomington, IN 47405 USA.
C3 Western University (University of Western Ontario); Indiana University
   System; IU Kelley School of Business; Indiana University Bloomington
RP Samuel, BM (corresponding author), Univ Western Ontario, Ivey Business Sch, 1255 Western Rd, London, ON N6G0N1, Canada.
EM bsamuel@ivey.ca; lawatkin@umail.iu.edu; andrew.ehle@yahoo.com;
   vkhatri@indiana.edu
RI Samuel, Binny/KTI-7294-2024; Samuel, Binny/KTI-7292-2024
OI Samuel, Binny/0000-0002-3223-4616; 
CR Agarwal R, 1999, IEEE T SOFTWARE ENG, V25, P541, DOI 10.1109/32.799953
   Agarwal R., 1999, INT J HUM-COMPUT ST, V45, P639
   [Anonymous], 1990, QUALITATIVE EVALUATI, DOI DOI 10.1002/NUR.4770140111
   [Anonymous], P 14 INT C INF SYST
   Bandara W, 2005, EUR J INFORM SYST, V14, P347, DOI 10.1057/palgrave.ejis.3000546
   Beatty J., 2007, P 2 INT WORKSH REQ E, P10
   BENBASAT I, 1987, MIS QUART, V11, P369, DOI 10.2307/248684
   Bendraou R, 2010, IEEE T SOFTWARE ENG, V36, P662, DOI 10.1109/TSE.2009.85
   Bittler R. S., 2009, ALGNING ENTERPRISE A
   Bowen PL, 2009, INFORM SYST RES, V20, P565, DOI 10.1287/isre.1080.0181
   Brown CV, 1999, MIS QUART, V23, P421, DOI 10.2307/249470
   Browne GJ, 2002, INFORM MANAGE-AMSTER, V39, P625, DOI 10.1016/S0378-7206(02)00014-9
   Browne GJ, 2012, J ASSOC INF SYST, V13, P1000
   Burton-Jones A., 2008, J ASS INFORM SYST, V9, P1
   Castro J, 2002, INFORM SYST, V27, P365, DOI 10.1016/S0306-4379(02)00012-1
   Cibran M., 2000, P EUR C OBJ OR PROGR
   Cockburn A., 2001, Writing effective use cases
   Cooper BL, 2000, MIS QUART, V24, P547, DOI 10.2307/3250947
   Cruz-Lemus JA, 2007, LECT NOTES COMPUT SC, V4802, P213
   CURTIS B, 1992, COMMUN ACM, V35, P75, DOI 10.1145/130994.130998
   Cushing B., 1982, ACCOUTING INFORM SYS
   Davern M, 2012, J ASSOC INF SYST, V13, P273
   de Cesare Sergio, 2008, Journal of Computing and Information Technology - CIT, V16, P157, DOI 10.2498/cit.1000898
   Dean D. L., 1994, Journal of Management Information Systems, V11, P43
   Dean DL, 2000, GROUP DECIS NEGOT, V9, P109, DOI 10.1023/A:1008702604327
   Dehnert J, 2004, INT J COOP INF SYST, V13, P289, DOI 10.1142/S0218843004000973
   Delfmann P, 2009, ENTERP MODELLING INF, V4, P3
   DeMarco T., 1979, STRUCTURED ANAL SYST
   Dingsoyr T, 2008, IEEE T SOFTWARE ENG, V34, P212, DOI 10.1109/TSE.2007.70767
   Dobing B, 2006, COMMUN ACM, V49, P109, DOI 10.1145/1125944.1125949
   Dobing B., 2000, Journal of Database Management, V11, P28, DOI 10.4018/jdm.2000100103
   Dobing B, 2008, J DATABASE MANAGE, V19, P1, DOI 10.4018/jdm.2008010101
   Dori D., 2001, Journal of Database Management, V12, P4, DOI 10.4018/jdm.2001010101
   Dori D, 2002, COMMUN ACM, V45, P82, DOI 10.1145/581571.581599
   Easterbrook S, 1998, IEEE T SOFTWARE ENG, V24, P4, DOI 10.1109/32.663994
   EISENHARDT KM, 1989, ACAD MANAGE REV, V14, P532, DOI 10.2307/258557
   Erickson J, 2008, J DATABASE MANAGE, V19, P42, DOI 10.4018/jdm.2008070103
   Erickson J, 2007, COMMUN ACM, V50, P46, DOI 10.1145/1278201.1278205
   Fettke P, 2009, COMMUN ASSOC INF SYS, V25, P571
   Fitzgerald B, 2003, COMMUN ACM, V46, P64, DOI 10.1145/641205.641206
   Gemino A, 2009, J DATABASE MANAGE, V20, P1, DOI 10.4018/jdm.2009010101
   Green Peter, 2011, Scandinavian Journal of Information Systems, V23, P59
   Grossman M, 2005, INFORM SOFTWARE TECH, V47, P383, DOI 10.1016/j.infsof.2004.09.005
   Hungerford BC, 2004, IEEE T SOFTWARE ENG, V30, P82, DOI 10.1109/TSE.2004.1265814
   Iivari J, 1996, COMMUN ACM, V39, P94, DOI 10.1145/236156.236183
   Indulska M, 2009, LECT NOTES COMPUT SC, V5565, P501, DOI 10.1007/978-3-642-02144-2_39
   Jamart P., 1994, Proceedings. Third International Conference on the Software Process. Applying the Software Process (Cat. No.94TH8001), P21, DOI 10.1109/SPCON.1994.344427
   Kalyuga S, 2003, EDUC PSYCHOL-US, V38, P23, DOI 10.1207/S15326985EP3801_4
   Kesari M., 2003, ACIS 2003 Proceedings, P2
   Khatri V, 2006, INFORM SYST RES, V17, P81, DOI 10.1287/isre.1060.0081
   Khatri V, 2006, IEEE T PROF COMMUN, V49, P109, DOI 10.1109/TPC.2006.875091
   Kobryn C, 2002, COMMUN ACM, V45, P107
   Lee AS, 2003, INFORM SYST RES, V14, P221, DOI 10.1287/isre.14.3.221.16560
   Lee JT, 1997, IEEE EXPERT, V12, P78, DOI 10.1109/64.592267
   Lerner B. S., 2008, 4 INT WORKSH EXC HAN
   Manzoni LV, 2003, IEEE T SOFTWARE ENG, V29, P181, DOI 10.1109/TSE.2003.1178058
   Mendling J, 2010, INFORM SYST, V35, P467, DOI 10.1016/j.is.2009.03.009
   Miles R., 2006, LEARNING UML 2 0
   Murata T, 2000, IEEE T SOFTWARE ENG, V26, P959, DOI 10.1109/32.879819
   Myers M. D., 2007, Information and Organization, V17, P2, DOI 10.1016/j.infoandorg.2006.11.001
   Napier NP, 2009, IEEE T SOFTWARE ENG, V35, P593, DOI 10.1109/TSE.2009.33
   Nelson HJ, 2009, J MANAGE INFORM SYST, V25, P271, DOI 10.2753/MIS0742-1222250409
   Osterweil L. J., 1997, 19 INT C SOFTW ENG B
   Ouyang C, 2009, ACM T SOFTW ENG METH, V19, DOI 10.1145/1555392.1555395
   Peleg M, 2000, IEEE T SOFTWARE ENG, V26, P742, DOI 10.1109/32.879812
   Pilone Dan., 2005, UML 20 NUTSHELL
   Pinggera J, 2015, SOFTW SYST MODEL, V14, P1055, DOI 10.1007/s10270-013-0349-1
   Ramesh B, 2001, IEEE T SOFTWARE ENG, V27, P58, DOI 10.1109/32.895989
   Recker J., 2011, MIS Q, V35, P1
   Recker J., 2007, P 3 BIENN ANU WORKSH, P93
   Recker J, 2012, INFORM SYST, V37, P557, DOI 10.1016/j.is.2011.07.001
   Recker J, 2010, EUR J INFORM SYST, V19, P501, DOI 10.1057/ejis.2010.38
   Recker J, 2010, BUS PROCESS MANAG J, V16, P181, DOI 10.1108/14637151011018001
   Recker J, 2010, EUR J INFORM SYST, V19, P76, DOI 10.1057/ejis.2010.5
   Recker J, 2010, DATA KNOWL ENG, V69, P516, DOI 10.1016/j.datak.2010.01.003
   Recker J, 2009, J ASSOC INF SYST, V10, P333, DOI 10.17705/1jais.00193
   Regan G., 2012, 38 EUR C SOFTW ENG A
   Rosemann M., 2000, AUSTR ACCOUNTING REV, V10, P19, DOI DOI 10.1111/J.1835-2561.2000.TB00067.X
   Rosemann M, 2006, BUS PROCESS MANAG J, V12, P249, DOI 10.1108/14637150610657567
   Rosemann M, 2006, BUS PROCESS MANAG J, V12, P377, DOI 10.1108/14637150610668024
   Sarker S., 2001, J ASSOC INF SYST, V2, P1
   Schultze U, 2011, INFORM ORGAN-UK, V21, P1, DOI 10.1016/j.infoandorg.2010.11.001
   Selonen P., 2003, Journal of Database Management, V14, P37, DOI 10.4018/jdm.2003070103
   Shanks G, 2003, COMMUN ACM, V46, P85, DOI 10.1145/944217.944244
   Shoval P., 2001, Journal of Database Management, V12, P15, DOI 10.4018/jdm.2001010102
   SINHA AP, 1992, IEEE T SOFTWARE ENG, V18, P368, DOI 10.1109/32.135770
   SWELLER J, 1994, COGNITION INSTRUCT, V12, P185, DOI 10.1207/s1532690xci1203_1
   Taylor JR, 1997, INTRO ERROR ANAL STU
   Tilley S., 2003, Proceedings of the 21st Annual International Conference on Documentation, P184
   VESSEY I, 1986, COMMUN ACM, V29, P48, DOI 10.1145/5465.5470
   Vessey I, 1991, INFORM SYST RES, V2, P63, DOI 10.1287/isre.2.1.63
   Vessey I, 2006, ADV MANAG INFORM SYS, V5, P141
   Wand Y, 2002, INFORM SYST RES, V13, P363, DOI 10.1287/isre.13.4.363.69
   Xu P, 2008, J MANAGE INFORM SYST, V25, P277, DOI 10.2753/MIS0742-1222250308
   Yin R. K., 2017, CASE STUDY RES DESIG
   ZHANG JJ, 1994, COGNITIVE SCI, V18, P87, DOI 10.1207/s15516709cog1801_3
NR 96
TC 12
Z9 12
U1 1
U2 17
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JAN
PY 2015
VL 41
IS 1
BP 19
EP 39
DI 10.1109/TSE.2014.2354043
PG 21
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA AY8EZ
UT WOS:000347788400003
DA 2024-07-18
ER

PT J
AU Miller, T
   Lu, B
   Sterling, L
   Beydoun, G
   Taveter, K
AF Miller, Tim
   Lu, Bin
   Sterling, Leon
   Beydoun, Ghassan
   Taveter, Kuldar
TI Requirements Elicitation and Specification Using the Agent Paradigm: The
   Case Study of an Aircraft Turnaround Simulator
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Agent; oriented software engineering; agent-oriented modelling;
   technology transfer
ID MULTIAGENT SYSTEMS; GENERATING REQUIREMENTS
AB In this paper, we describe research results arising from a technology transfer exercise on agent-oriented requirements engineering with an industry partner. We introduce two improvements to the state-of-the-art in agent-oriented requirements engineering, designed to mitigate two problems experienced by ourselves and our industry partner: (1) the lack of systematic methods for agent-oriented requirements elicitation and modelling; and (2) the lack of prescribed deliverables in agent-oriented requirements engineering. We discuss the application of our new approach to an aircraft turnaround simulator built in conjunction with our industry partner, and show how agent-oriented models can be derived and used to construct a complete requirements package. We evaluate this by having three independent people design and implement prototypes of the aircraft turnaround simulator, and comparing the three prototypes. Our evaluation indicates that our approach is effective at delivering correct, complete, and consistent requirements that satisfy the stakeholders, and can be used in a repeatable manner to produce designs and implementations. We discuss lessons learnt from applying this approach.
C1 [Miller, Tim; Lu, Bin] Univ Melbourne, Dept Comp & Informat Syst, Melbourne, Vic, Australia.
   [Sterling, Leon] Swinburne Univ Technol, Fac ICT, Melbourne, Vic, Australia.
   [Beydoun, Ghassan] Univ Wollongong, Fac Informat, Wollongong, NSW 2522, Australia.
   Tallinn Univ Technol, Inst Informat, EU-19086 Tallinn, Estonia.
C3 University of Melbourne; Swinburne University of Technology; University
   of Wollongong; Tallinn University of Technology
RP Miller, T (corresponding author), Univ Melbourne, Dept Comp & Informat Syst, Melbourne, Vic, Australia.
EM tmiller@unimelb.edu.au; lbin@unimelb.edu.au; lsterling@swin.edu.au;
   beydoun@uow.edu.au; kuldar.taveter@ttu.ee
RI Beydoun, Ghassan/L-5554-2017
OI Miller, Tim/0000-0003-4908-6063; Beydoun, Ghassan/0000-0001-8087-5445
FU Australian Research Council [LP0882140]; Australian Research Council
   [LP0882140] Funding Source: Australian Research Council
FX The authors would like to thank Alex Lopez for his valuable SRS reviews
   and cross validation; Daniel Thompson, Maksim Kozorez, and Mingwei Zhang
   for prototyping the ATS systems; and Keith Joshi, John Podlena, and
   Kayan Hau from Jeppesen for their highly valuable participation and
   discussions. This research is funded by the Australian Research Council
   Linkage Grant LP0882140.
CR Abushark Y, 2014, AAMAS'14: PROCEEDINGS OF THE 2014 INTERNATIONAL CONFERENCE ON AUTONOMOUS AGENTS & MULTIAGENT SYSTEMS, P933
   [Anonymous], 1994, CHAOS REP
   [Anonymous], J BRAZILIAN COMPUTER
   [Anonymous], 2003, Software requirements
   Blanes D, 2009, LECT NOTES COMPUT SC, V5788, P510, DOI 10.1007/978-3-642-04394-9_62
   Bresciani P, 2004, AUTON AGENT MULTI-AG, V8, P203, DOI 10.1023/B:AGNT.0000018806.20944.ef
   Cheng BHC, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P285, DOI 10.1109/FOSE.2007.17
   Chung L, 2009, LECT NOTES COMPUT SC, V5600, P363, DOI 10.1007/978-3-642-02463-4_19
   DARDENNE A, 1993, SCI COMPUT PROGRAM, V20, P3, DOI 10.1016/0167-6423(93)90021-G
   Deloach SA, 2001, INT J SOFTW ENG KNOW, V11, P231, DOI 10.1142/S0218194001000542
   Donzelli P, 2004, J RES PRACT INF TECH, V36, P277
   El Emam K, 2008, IEEE SOFTWARE, V25, P84, DOI 10.1109/MS.2008.107
   Ferber J., 2001, P 10 EUR WORKSH MOD, P1
   Gause D., 2000, P 4 IEEE INT C REQ E
   Gause DC, 2005, IEEE SOFTWARE, V22, P13, DOI 10.1109/MS.2005.143
   Gervasi V, 2010, LECT NOTES COMPUT SC, V6182, P248, DOI 10.1007/978-3-642-14192-8_22
   IEEE, 1998, 8301993 IEEE
   Lopez-Lorca A A., 2011, Information Systems Development, P455
   MacLean A., 1990, P INTERACT 90 3 C HU, P207
   Mahunnah Msury, 2013, Proceedings of the 6th International Conference on Health Informatics (HEALTHINF 2013), P269
   Maiden N, 2011, SOCIAL MODELING REQU, P155
   Maiden NAM, 2005, REQUIR ENG, V10, P276, DOI 10.1007/s00766-005-0010-9
   Mathieson I., 2004, P 27 AUSTR COMP SCI, V26, P351
   Mehta R, 2012, STUD COMPUT INTELL, V430, P113
   Miller T., 2014, EMOTIONALLY DRIVEN M
   Miller T, 2011, LECT NOTES COMPUT SC, V6788, P62, DOI 10.1007/978-3-642-22636-6_4
   Ncube C, 2007, LECT NOTES COMPUT SC, V4542, P33
   Paay J, 2009, INT J HUM-COMPUT ST, V67, P437, DOI 10.1016/j.ijhcs.2008.12.002
   Padgham L., 2004, WILEY SERIES AGENT T
   Pavón J, 2003, LECT NOTES ARTIF INT, V2691, P394
   Pedell Sonja, 2009, P 21 ANN C AUSTR COM, P309, DOI [10.1145/1738826.1738882, DOI 10.1145/1738826.1738882]
   Rao A. S., 1996, Agents Breaking Away. 7th European Workshop on Modelling Autonomous Agents in a Multi-Agent World, MAAMAW '96 Proceedings, P42, DOI 10.1007/BFb0031845
   Shvartsman I., 2010, Proceedings 2010 International Multiconference on Computer Science and Information Technology (IMCSIT 2010), P209
   Sterling L., 2009, P INT EV PROC AAAI S, P80
   Sterling LS, 2009, ART OF AGENT-ORIENTED MODELING, P1, DOI 10.1080/17482960903207997
   Sutcliffe A, 2003, 11TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, PROCEEDINGS, P320
   van Lamsweerde A., 1995, Proceedings of the Second IEEE International Symposium on Requirements Engineering (Cat. No.95TH8040), P194, DOI 10.1109/ISRE.1995.512561
   Wilmann D, 2005, QSIC 2005: FIFTH INTERNATIONAL CONFERENCE ON QUALITY SOFTWARE, PROCEEDINGS, P419
   Yu E., 2002, Agent-Oriented Software Engineering II. Second International Workshop, AOSE 2001. Revised Papers and Invited Contributions (Lecture Notes in Computer Science Vol.2222), P206
   Yu E., 2011, SOCIAL MODELLING REQ
   Yu ES, 2009, LECT NOTES COMPUT SC, V5600, P99, DOI 10.1007/978-3-642-02463-4_7
   Zambonelli F, 2003, ACM T SOFTW ENG METH, V12, P317, DOI 10.1145/958961.958963
   Zambonelli F., 2001, P 5 INT WORKSH AG OR, P231
   Zave P., 1997, ACM T SOFTW ENG METH, V6, P30
   Zowghi D, 2005, ENGINEERING AND MANAGING SOFTWARE REQUIREMENTS, P19, DOI 10.1007/3-540-28244-0_2
   [No title captured]
NR 46
TC 29
Z9 34
U1 1
U2 18
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD OCT
PY 2014
VL 40
IS 10
BP 1007
EP 1024
DI 10.1109/TSE.2014.2339827
PG 18
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA AR9ML
UT WOS:000343899100005
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Minku, LL
   Sudholt, D
   Yao, X
AF Minku, Leandro L.
   Sudholt, Dirk
   Yao, Xin
TI Improved Evolutionary Algorithm Design for the Project Scheduling
   Problem Based on Runtime Analysis
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Schedule and organizational issues; evolutionary algorithms; software
   project scheduling; software project management; search-based software
   engineering; runtime analysis
ID SOFTWARE PROJECT; INFORMATION-TECHNOLOGY; OPTIMIZATION; TIME
AB Several variants of evolutionary algorithms (EAs) have been applied to solve the project scheduling problem (PSP), yet their performance highly depends on design choices for the EA. It is still unclear how and why different EAs perform differently. We present the first runtime analysis for the PSP, gaining insights into the performance of EAs on the PSP in general, and on specific instance classes that are easy or hard. Our theoretical analysis has practical implications-based on it, we derive an improved EA design. This includes normalizing employees' dedication for different tasks to ensure they are not working overtime; a fitness function that requires fewer pre-defined parameters and provides a clear gradient towards feasible solutions; and an improved representation and mutation operator. Both our theoretical and empirical results show that our design is very effective. Combining the use of normalization to a population gave the best results in our experiments, and normalization was a key component for the practical effectiveness of the new design. Not only does our paper offer a new and effective algorithm for the PSP, it also provides a rigorous theoretical analysis to explain the efficiency of the algorithm, especially for increasingly large projects.
C1 [Minku, Leandro L.; Yao, Xin] Univ Birmingham, Sch Comp Sci, CERCIA, Birmingham B15 2TT, W Midlands, England.
   [Sudholt, Dirk] Univ Sheffield, Dept Comp Sci, Sheffield S1 4DP, S Yorkshire, England.
C3 University of Birmingham; University of Sheffield
RP Minku, LL (corresponding author), Univ Birmingham, Sch Comp Sci, CERCIA, Birmingham B15 2TT, W Midlands, England.
EM L.L.Minku@cs.bham.ac.uk; d.sudholt@sheffield.ac.uk; X.Yao@cs.bham.ac.uk
OI Yao, Xin/0000-0001-8837-4442; Minku, Leandro/0000-0002-2639-0671
FU EPSRC [EP/J017515/1]; NSFC [61329302]; Royal Society Wolfson Research
   Merit Award; EPSRC [EP/J017515/1] Funding Source: UKRI
FX The authors thank Enrique Alba for providing instances from [6],
   Francisco Chicano for pointing them to [7], Rami Bahsoon for the
   fruitful discussions, and the Associate Editor and anonymous reviewers
   for their constructive comments. This research was supported by EPSRC
   grant EP/J017515/1 and NSFC Grant 61329302. Xin Yao was supported by a
   Royal Society Wolfson Research Merit Award. A preliminary version with
   parts of the results and weaker theoretical results appeared in [1].
CR ABDELHAMID TK, 1983, COMMUN ACM, V26, P340, DOI 10.1145/69586.358135
   Agresti A, 1998, AM STAT, V52, P119, DOI 10.2307/2685469
   Alba E, 2007, INFORM SCIENCES, V177, P2380, DOI 10.1016/j.ins.2006.12.020
   [Anonymous], LNCS
   [Anonymous], 2013, P 12 WORKSHOP FDN GE
   Auger A., 2011, THEORY RANDOMIZED SE, V1
   Barreto A, 2008, COMPUT OPER RES, V35, P3073, DOI 10.1016/j.cor.2007.01.010
   Boehm BW., 2000, SOFTWARE COST ESTIMA, VII
   Boehm BW., 1981, Software Engineering Economics
   Chang CK, 2008, INFORM SOFTWARE TECH, V50, P1142, DOI 10.1016/j.infsof.2008.03.002
   Chang CK, 2001, ANN SOFTW ENG, V11, P107, DOI 10.1023/A:1012543203763
   CHAO C, 1995, THESIS U ILLINOIS CH
   Chen WN, 2013, IEEE T SOFTWARE ENG, V39, P1, DOI 10.1109/TSE.2012.17
   Chicano F, 2011, GECCO-2011: PROCEEDINGS OF THE 13TH ANNUAL GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P1915
   Chulani S, 1999, IEEE T SOFTWARE ENG, V25, P573, DOI 10.1109/32.799958
   Cormen Thomas H., 2001, INTRO ALGORITHMS
   Demsar J, 2006, J MACH LEARN RES, V7, P1
   Di Penta M, 2011, SOFTWARE PRACT EXPER, V41, P495, DOI 10.1002/spe.1001
   Doerr B, 2013, EVOL COMPUT, V21, P1, DOI 10.1162/EVCO_a_00055
   Droste S, 2002, THEOR COMPUT SCI, V276, P51, DOI 10.1016/S0304-3975(01)00182-7
   Eiben G, 2008, NAT COMPUT SER, P153, DOI 10.1007/978-3-540-72960-0_8
   Fitzgerald B, 2006, MIS QUART, V30, P587
   Gueorguiev S., 2009, P 11 ANN C GENETIC E, P1673, DOI DOI 10.1145/1569901.1570125
   Harman M, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P342, DOI 10.1109/FOSE.2007.29
   Hoos HH, 2000, J AUTOM REASONING, V24, P421, DOI 10.1023/A:1006350622830
   IVES B, 1991, MIS QUART, V15, P33, DOI 10.2307/249433
   Kapur P, 2008, J SOFTW MAINT EVOL-R, V20, P365, DOI 10.1002/smr.379
   Kocaguneli E, 2012, IEEE T SOFTWARE ENG, V38, P425, DOI 10.1109/TSE.2011.27
   Kolisch R, 2006, EUR J OPER RES, V174, P23, DOI 10.1016/j.ejor.2005.01.065
   Levina N, 2003, MIS QUART, V27, P331
   Lukasiewycz M, 2011, GECCO-2011: PROCEEDINGS OF THE 13TH ANNUAL GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P1723
   Luna F., 2011, Proceedings of the 2011 11th International Conference on Intelligent Systems Design and Applications (ISDA), P1110, DOI 10.1109/ISDA.2011.6121807
   Maciaszek L., 2005, Practical Software Engineering: A Case Study Approach
   Minku LL, 2013, ACM T SOFTW ENG METH, V22, DOI 10.1145/2522920.2522928
   Minku LL, 2012, PROCEEDINGS OF THE FOURTEENTH INTERNATIONAL CONFERENCE ON GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P1221, DOI 10.1145/2330163.2330332
   Motwani Rajeev, 1995, RANDOMIZED ALGORITHM
   Nan N, 2009, IEEE T SOFTWARE ENG, V35, P624, DOI 10.1109/TSE.2009.18
   Neumann F, 2010, NAT COMPUT SER, P3, DOI 10.1007/978-3-642-16544-3
   Oliveto PS, 2007, INT J AUTOM COMPUT, V4, P281, DOI 10.1007/s11633-007-0281-3
   Ren J, 2011, LECT NOTES COMPUT SC, V6956, P127, DOI 10.1007/978-3-642-23716-4_14
   Shepperd M, 1997, IEEE T SOFTWARE ENG, V23, P736, DOI 10.1109/32.637387
   Sommerville I, 2001, Software Engineering
   Stewart KJ, 2006, MIS QUART, V30, P291
   Sudholt D, 2013, IEEE T EVOLUT COMPUT, V17, P418, DOI 10.1109/TEVC.2012.2202241
   Yourdon E., 1997, DEATH MARCH COMPLETE
NR 45
TC 32
Z9 35
U1 0
U2 11
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JAN
PY 2014
VL 40
IS 1
BP 83
EP 102
DI 10.1109/TSE.2013.52
PG 20
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science; Engineering
GA AF4FB
UT WOS:000334665800006
OA Green Published, hybrid
DA 2024-07-18
ER

PT J
AU Hariri, N
   Castro-Herrera, C
   Mirakhorli, M
   Cleland-Huang, J
   Mobasher, B
AF Hariri, Negar
   Castro-Herrera, Carlos
   Mirakhorli, Mehdi
   Cleland-Huang, Jane
   Mobasher, Bamshad
TI Supporting Domain Analysis through Mining and Recommending Features from
   Online Product Listings
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Domain analysis; recommender systems; clustering; association rule
   mining; k-nearest neighbor
AB Domain analysis is a labor-intensive task in which related software systems are analyzed to discover their common and variable parts. Many software projects include extensive domain analysis activities, intended to jumpstart the requirements process through identifying potential features. In this paper, we present a recommender system that is designed to reduce the human effort of performing domain analysis. Our approach relies on data mining techniques to discover common features across products as well as relationships among those features. We use a novel incremental diffusive algorithm to extract features from online product descriptions, and then employ association rule mining and the k-nearest neighbor machine learning method to make feature recommendations during the domain analysis process. Our feature mining and feature recommendation algorithms are quantitatively evaluated and the results are presented. Also, the performance of the recommender system is illustrated and evaluated within the context of a case study for an enterprise-level collaborative software suite. The results clearly highlight the benefits and limitations of our approach, as well as the necessary preconditions for its success.
C1 [Hariri, Negar; Mirakhorli, Mehdi; Cleland-Huang, Jane; Mobasher, Bamshad] Depaul Univ, Sch Comp, Chicago, IL 60604 USA.
   [Castro-Herrera, Carlos] Google Inc, Chicago, IL 60654 USA.
C3 DePaul University; Google Incorporated
RP Hariri, N (corresponding author), Depaul Univ, Sch Comp, 243 S Wabash Ave, Chicago, IL 60604 USA.
EM nhariri@cs.depaul.edu; jhuang@cs.depaul.edu
OI Mobasher, Bamshad/0000-0001-9701-9178
FU US National Science Foundation (NSF) [III:0916852]
FX The work described in this paper was partially funded by grant
   III:0916852 from the US National Science Foundation (NSF).
CR ACHER M., 2012, P 6 INT WORKSH VAR M, P45, DOI DOI 10.1145/2110147.2110153
   Agrawal R., 1994, P C VER LARG DAT BAS, P487
   Agrawal R., P 20 INT C VERY LARG
   Alves V, 2008, SPLC 2008: 12TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE, PROCEEDINGS, P67, DOI 10.1109/SPLC.2008.18
   [Anonymous], P 3 INT WORKSH WEB I
   [Anonymous], 2008, P 17 ACM C INFORM KN
   Apel S, 2009, J OBJECT TECHNOL, V8, P49, DOI 10.5381/jot.2009.8.5.c5
   ARANGO G, 1989, DOMAIN ANAL ACQUISIT
   Bezdek James C., 1981, PATTERN RECOGN
   Blei DM, 2003, J MACH LEARN RES, V3, P993, DOI 10.1162/jmlr.2003.3.4-5.993
   Burke R, 2002, USER MODEL USER-ADAP, V12, P331, DOI 10.1023/A:1021240730564
   Burke Robin., 2000, ENCY LIB INFORM SYST, V69
   CAN F, 1990, ACM T DATABASE SYST, V15, P483, DOI 10.1145/99935.99938
   Castro-Herrera C, 2009, PROCEEDINGS OF THE 2009 17TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, P37, DOI 10.1109/RE.2009.20
   Castro-Herrera Carlos., 2009, the Symposium on Applied Computing, SAC'09, P1419, DOI [10.1145/1529282.1529601, DOI 10.1145/1529282.1529601]
   Chen K, 2005, 13TH IEEE INTERNATIONAL CONFERENCE ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P31
   Classen A, 2008, LECT NOTES COMPUT SC, V4961, P16, DOI 10.1007/978-3-540-78743-3_2
   Cleland-Huang J., 2009, AUTOMATED DETECTION
   Cleland-Huang J, 2007, COMPUTER, V40, P27, DOI 10.1109/MC.2007.195
   Coplien J, 1998, IEEE SOFTWARE, V15, P37, DOI 10.1109/52.730836
   Czarnecki K., 2005, Conference on Object Oriented Programming Systems Languages and Applications, P200, DOI [10.1145/1094855.1094934, DOI 10.1145/1094855.1094934]
   Dhillon IS, 2001, MACH LEARN, V42, P143, DOI 10.1023/A:1007612920971
   Duan C., 2006, TECHNICAL REPORT
   Dumitru H., 2011, P 33 INT C SOFTW ENG, P10
   Dumitru H., 2009, P ARG UND S
   Frakes W, 1998, ANN SOFTW ENG, V5, P125, DOI 10.1023/A:1018972323770
   Han J., 2000, P ACM SIGMOD INT C M, P1
   Herlocker JL, 2004, ACM T INFORM SYST, V22, P5, DOI 10.1145/963770.963772
   Kang K.C., 1990, CMUSEI90TR021
   Kang KC, 1998, ANN SOFTW ENG, V5, P143, DOI 10.1023/A:1018980625587
   Koren Y, 2009, COMPUTER, V42, P30, DOI 10.1109/MC.2009.263
   Krut R., 1993, CMUSEI93TR11
   Lewis KM, 2010, ELECTRON LIBR, V28, P401, DOI 10.1108/02640471011051981
   Lin WY, 2002, DATA MIN KNOWL DISC, V6, P83, DOI 10.1023/A:1013284820704
   Lora-Michiels A., 2010, VAMOS 10, P147
   Maalej W., 2009, 2009 Second International Workshop on Managing Requirements Knowledge, P32
   Manning Christopher D., 2008, INTRO INFORM RETRIEV
   Niu N., 2008, P 16 INT REQ ENG C
   Niu N, 2008, SPLC 2008: 12TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE, PROCEEDINGS, P87, DOI 10.1109/SPLC.2008.11
   Noppen J., 2009, VAMOS, P93
   Papagelis M, 2005, LECT NOTES COMPUT SC, V3477, P224
   Pazzani M. J., 2007, The Adaptive Web. Methods and Strategies of Web Personalization, P325
   Rendle S., 2009, P 25 C UNC ART INT U
   Sandvig J., 2007, P ACM C REC SYST
   Sarwar B., 2000, EC'00. Proceedings of the 2nd ACM Conference on Electronic Commerce, P158, DOI 10.1145/352871.352887
   Sarwar B., 2001, P 10 INT C WORLD WID, P285, DOI 10.1145/371920.372071
   Sarwar B.M., 2000, ACM E-Commerce 2000 Conf, P158
   Schafer J. B., 2007, The Adaptive Web. Methods and Strategies of Web Personalization, P291
   She S., 2008, THESIS U WATERLOO
   Simos M., 1996, STARSVCA02500100 LOC
   Spertus Ellen, 2005, Proceedings of the Eleventh ACM SIGKDD International Conference on Knowledge Discovery in Data Mining, P678, DOI DOI 10.1145/1081870.1081956
   von der Massen T., 2003, P INT WORKSH PROD FA
NR 52
TC 65
Z9 77
U1 0
U2 24
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD DEC
PY 2013
VL 39
IS 12
BP 1736
EP 1752
DI 10.1109/TSE.2013.39
PG 17
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 260PO
UT WOS:000327607000007
DA 2024-07-18
ER

PT J
AU Kailasam, S
   Gnanasambandam, N
   Dharanipragada, J
   Sharma, N
AF Kailasam, Sriram
   Gnanasambandam, Nathan
   Dharanipragada, Janakiram
   Sharma, Naveen
TI Optimizing Ordered Throughput Using Autonomic Cloud Bursting Schedulers
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Cloud bursting; ordered throughput; autonomic; data-intensive
ID OF-TASKS APPLICATIONS; STRATEGIES
AB Optimizing ordered throughput not only improves the system efficiency but also makes cloud bursting transparent to the user. This is critical from the perspective of user fairness in customer-facing systems, correctness in stream processing systems, and so on. In this paper, we consider optimizing ordered throughput for near real-time, data-intensive, independent computations using cloud bursting. Intercloud computation of data-intensive applications is a challenge due to large data transfer requirements, low intercloud bandwidth, and best-effort traffic on the Internet. The system model we consider is comprised of two processing stages. The first stage uses cloud bursting opportunistically for parallel processing, while the second stage (sequential) expects the output of the first stage to be in the same order as the arrival sequence. We propose three scheduling heuristics as part of an autonomic cloud bursting approach that adapt to changing workload characteristics, variation in bandwidth, and available resources to optimize ordered throughput. We also characterize the operational regimes for cloud bursting as stabilization mode versus acceleration mode, depending on the workload characteristics like the size of data to be transferred for a given compute load. The operational regime characterization helps in deciding how many instances can be optimally utilized in the external cloud.
C1 [Kailasam, Sriram; Dharanipragada, Janakiram] Indian Inst Technol, Distributed & Object Syst Lab, Dept Comp Sci & Engn, Madras 600036, Tamil Nadu, India.
   [Gnanasambandam, Nathan; Sharma, Naveen] Xerox Res Ctr, Webster, NY 14580 USA.
C3 Indian Institute of Technology System (IIT System); Indian Institute of
   Technology (IIT) - Madras
RP Kailasam, S (corresponding author), Indian Inst Technol, Distributed & Object Syst Lab, Dept Comp Sci & Engn, Madras 600036, Tamil Nadu, India.
EM ksriram@cse.iitm.ac.in; nathang@xerox.com; djram@iitm.ac.in;
   naveen.sharma@xerox.com
OI Kailasam, Sriram/0000-0002-2218-8660
CR Abramson D, 2002, FUTURE GENER COMP SY, V18, P1061, DOI 10.1016/S0167-739X(02)00085-7
   [Anonymous], P IEEE 4 INT C CLOUD
   [Anonymous], 2009, TECHNICAL REPORT
   Asaduzzaman S, 2007, J PARALLEL DISTR COM, V67, P1119, DOI 10.1016/j.jpdc.2007.06.006
   Asaduzzaman S, 2006, J PARALLEL DISTR COM, V66, P796, DOI 10.1016/j.jpdc.2006.01.005
   Bicer T, 2011, IEEE INT C CL COMP, P169, DOI 10.1109/CLUSTER.2011.21
   Casanova H., 2000, Proceedings 9th Heterogeneous Computing Workshop (HCW 2000) (Cat. No.PR00556), P349, DOI 10.1109/HCW.2000.843757
   da Silva FAB, 2009, PARALLEL COMPUT, V35, P57, DOI 10.1016/j.parco.2008.09.013
   de Assunçao MD, 2010, CLUSTER COMPUT, V13, P335, DOI 10.1007/s10586-010-0131-x
   Elmroth E., 2004, Applied Parallel Computing. State of the Art in Scientific Computing. 7th International Workshop, PARA 2004. Revised Selected Papers (Lecture Notes in Computer Science Vol. 3732), P1061
   Ernemann C, 2002, LECT NOTES COMPUT SC, V2536, P219
   Bittencourt LF, 2011, J INTERNET SERV APPL, V2, P207, DOI 10.1007/s13174-011-0032-0
   Giersch A, 2004, 12TH EUROMICRO CONFERENCE ON PARALLEL, DISTRIBUTED AND NETWORK-BASED PROCESSING, PROCEEDINGS, P364, DOI 10.1109/EMPDP.2004.1271468
   Gueyoung Jung, 2012, 2012 IEEE 5th International Conference on Cloud Computing (CLOUD), P811, DOI 10.1109/CLOUD.2012.108
   GUO T, 2012, P US ANN TECHN C JUN
   Harchol-Balter M, 2002, J ACM, V49, P260, DOI 10.1145/506147.506154
   Huedo E, 2004, SOFTWARE PRACT EXPER, V34, P631, DOI 10.1002/spe.584
   Jain M., 2002, P PASSIVE ACTIVE MEA, P14, DOI DOI 10.1109/JSAC.2003.814505
   Kailasam Sriram, 2010, 2010 39th International Conference on Parallel Processing Workshops (ICPPW), P285, DOI 10.1109/ICPPW.2010.54
   Kaya K, 2006, IEEE T PARALL DISTR, V17, P883, DOI 10.1109/TPDS.2006.105
   Kim H, 2009, CCGRID: 2009 9TH IEEE INTERNATIONAL SYMPOSIUM ON CLUSTER COMPUTING AND THE GRID, P484, DOI 10.1109/CCGRID.2009.82
   Kim Hyunjoo., 2011, COMETCLOUD AUTONOMIC, P275
   Kim S., 1988, International conference of parallel processing, V2, P1
   LARSON RC, 1987, OPER RES, V35, P895, DOI 10.1287/opre.35.6.895
   Lee YC, 2007, IEEE T COMPUT, V56, P815, DOI 10.1109/TC.2007.1042
   Maheswaran M, 1999, PROC HETER COMP WORK, P30, DOI 10.1109/HCW.1999.765094
   Mohamed H, 2008, CONCURR COMP-PRACT E, V20, P1851, DOI 10.1002/cpe.1268
   Myers R.H., 2016, Response Surface Methodology: Process and Product Optimization Using Designed Experiments
   Pei Fan, 2011, Proceedings of the 2011 IEEE 4th International Conference on Cloud Computing (CLOUD 2011), P460, DOI 10.1109/CLOUD.2011.54
   Rafaeli A, 2005, TECHNICAL REPORT
   Rahman M., 2011, 2011 IEEE International Symposium on Parallel & Distributed Processing, Workshops and Phd Forum, P966, DOI 10.1109/IPDPS.2011.243
   Ribeiro V.J., 2003, PASSIVE ACTIVE MEASU
   Rodero I, 2010, FUTURE GENER COMP SY, V26, P72, DOI 10.1016/j.future.2009.07.009
   Schad J, 2010, PROC VLDB ENDOW, V3, P460, DOI 10.14778/1920841.1920902
   SIH GC, 1993, IEEE T PARALL DISTR, V4, P175, DOI 10.1109/71.207593
   Topcuoglu H, 2002, IEEE T PARALL DISTR, V13, P260, DOI 10.1109/71.993206
   Van den Bossche R., 2011, Proceedings of the 2011 IEEE 3rd International Conference on Cloud Computing Technology and Science (CloudCom 2011), P320, DOI 10.1109/CloudCom.2011.50
   Varga A., 2008, An Overview of the Omnet++ Simulation Environment, P1
   Vecchiola C, 2012, FUTURE GENER COMP SY, V28, P58, DOI 10.1016/j.future.2011.05.008
   VENUGOPAL S, 2006, THESIS U MELBOURNE
   Wieder P., 2008, Grid Middleware and Services, P335
NR 41
TC 16
Z9 16
U1 0
U2 11
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD NOV
PY 2013
VL 39
IS 11
BP 1564
EP 1581
DI 10.1109/TSE.2013.26
PG 18
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 245YN
UT WOS:000326501200007
DA 2024-07-18
ER

PT J
AU Menzies, T
   Butcher, A
   Cok, D
   Marcus, A
   Layman, L
   Shull, F
   Turhan, B
   Zimmermann, T
AF Menzies, Tim
   Butcher, Andrew
   Cok, David
   Marcus, Andrian
   Layman, Lucas
   Shull, Forrest
   Turhan, Burak
   Zimmermann, Thomas
TI Local versus Global Lessons for Defect Prediction and Effort Estimation
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Data mining; clustering; defect prediction; effort estimation
ID ORIENTED DESIGN METRICS; PRONE CLASSES; EMPIRICAL VALIDATION; SOFTWARE
   METRICS; IDENTIFICATION; COMPLEXITY; QUALITY; CODE
AB Existing research is unclear on how to generate lessons learned for defect prediction and effort estimation. Should we seek lessons that are global to multiple projects or just local to particular projects? This paper aims to comparatively evaluate local versus global lessons learned for effort estimation and defect prediction. We applied automated clustering tools to effort and defect datasets from the PROMISE repository. Rule learners generated lessons learned from all the data, from local projects, or just from each cluster. The results indicate that the lessons learned after combining small parts of different data sources (i.e., the clusters) were superior to either generalizations formed over all the data or local lessons formed from particular projects. We conclude that when researchers attempt to draw lessons from some historical data source, they should 1) ignore any existing local divisions into multiple sources, 2) cluster across all available data, then 3) restrict the learning of lessons to the clusters from other sources that are nearest to the test data.
C1 [Menzies, Tim; Butcher, Andrew] W Virginia Univ, Lane Dept Comp Sci & Elect Engn, Morgantown, WV 26506 USA.
   [Cok, David] GrammaTech, Technol, Ithaca, NY USA.
   [Marcus, Andrian] Wayne State Univ, Dept Comp Sci, Detroit, MI 48202 USA.
   [Layman, Lucas; Shull, Forrest] Univ Maryland, Fraunhofer Ctr, College Pk, MD 20742 USA.
   [Turhan, Burak] Univ Oulu, Dept Informat Proc Sci, Oulu, Finland.
   [Zimmermann, Thomas] Microsoft Res, Res Software Engn Grp, Redmond, WA USA.
C3 West Virginia University; Wayne State University; University System of
   Maryland; University of Maryland College Park; University of Oulu;
   Microsoft
RP Menzies, T (corresponding author), W Virginia Univ, Lane Dept Comp Sci & Elect Engn, Morgantown, WV 26506 USA.
EM tim@menzies.us; abutcher@afrolegs.com; dcok@grammatech.com;
   amarcus@wayne.edu; llayman@fc-md.umd.edu; fshull@fc-md.umd.edu;
   turhanb@computer.org; tzimmer@microsoft.com
RI Turhan, Burak/G-7400-2011; Shull, Forrest/GZK-6750-2022; Menzies,
   Tim/X-7680-2019
OI Turhan, Burak/0000-0003-1511-2163; Menzies, Tim/0000-0002-5040-3196;
   Layman, Lucas/0000-0002-2534-8762; Marcus, Andrian/0000-0001-5450-5598
FU US National Science Foundation (NSF) [CCF: 1017330, CCF: 1017263];
   Qatar/WVU [NPRP 09-12-5-2-470]; Finnish Funding Agency for Technology
   and Innovation (TEKES); Academy of Finland [260871]; US Army Research
   Laboratory [W911QX-10-C-0066]; Division of Computing and Communication
   Foundations; Direct For Computer & Info Scie & Enginr [1017263] Funding
   Source: National Science Foundation; Academy of Finland (AKA) [260871]
   Funding Source: Academy of Finland (AKA)
FX The work was funded by US National Science Foundation (NSF) grants CCF:
   1017330 and CCF: 1017263, the Qatar/WVU research grant NPRP
   09-12-5-2-470, partly funded by the Finnish Funding Agency for
   Technology and Innovation (TEKES) under the Cloud Software Program and
   the Academy of Finland with Grant Decision No. 260871. Also, the
   research reported in this document was performed in connection with
   contract/instrument W911QX-10-C-0066 with the US Army Research
   Laboratory. The views and conclusions contained in this
   document/presentation are those of the authors and should not be
   interpreted as presenting the official policies or position, either
   expressed or implied, of the US Army Research Laboratory or the US
   Government unless so designated by other authorized documents. Citation
   of manufacturers or trade names does not constitute an official
   endorsement or approval of the use thereof.
CR Aggarwal K. K., 2009, Software Process: Improvement and Practice, V14, P39, DOI 10.1002/spip.389
   [Anonymous], 2005, P INT S EMP SOFTW EN
   [Anonymous], 2000, Software Cost Estimation with COCOMO II
   [Anonymous], 1992, C4 5 PROGRAMS MACHIN
   [Anonymous], 2005, Data mining: Practical machine learning tools and techniques
   [Anonymous], P 7 INT C PRED MOD S
   [Anonymous], THESIS W VIRGINIA U
   Arisholm E., 2006, ISESE 06 P 2006 ACMI, P8
   Basili VR, 1996, IEEE T SOFTWARE ENG, V22, P751, DOI 10.1109/32.544352
   BAY S, 1999, P 5 INT C KNOWL DISC
   Bettenburg N., 2012, 2012 9th IEEE Working Conference on Mining Software Repositories (MSR 2012), P60, DOI 10.1109/MSR.2012.6224300
   Boehm BW., 1981, Software Engineering Economics
   Boetticher GD, 2003, IEEE INTELL SYST, V18, P48, DOI 10.1109/MIS.2003.1200728
   Bouktif S, 2006, GECCO 2006: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOL 1 AND 2, P1893
   Briand L. C., 2001, Empirical Software Engineering, V6, P11, DOI 10.1023/A:1009815306478
   Briand LC, 2000, J SYST SOFTWARE, V51, P245, DOI 10.1016/S0164-1212(99)00102-8
   Briand LC, 2002, ADV COMPUT, V56, P97, DOI 10.1016/S0065-2458(02)80005-5
   Cai C. H., 1998, P INT DAT ENG APPL S
   Cartwright M, 2000, IEEE T SOFTWARE ENG, V26, P786, DOI 10.1109/32.879814
   Denaro G., 2003, P 5 CABERNET PLEN WO
   Du Q, 2008, INT J HIGH PERFORM C, V22, P438, DOI 10.1177/1094342007088380
   El Emam K, 2001, J SYST SOFTWARE, V56, P63, DOI 10.1016/S0164-1212(00)00086-8
   el Emam K., 1999, VALIDATION OBJECT OR, V1063
   Emam KE, 2001, IEEE T SOFTWARE ENG, V27, P630, DOI 10.1109/32.935855
   English M., 2009, P 5 INT C PRED MOD S
   Faloutsos C., 1995, SIGMOD Record, V24, P163, DOI 10.1145/568271.223812
   Fioravanti F, 2001, FIFTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P121, DOI 10.1109/CSMR.2001.914976
   Gaines B. R., 1992, Proceedings of the 5th Australian Joint Conference on Artificial Intelligence. AI '92, P349
   Gay G, 2010, AUTOMAT SOFTW ENG, V17, P439, DOI 10.1007/s10515-010-0072-x
   Glasberg D., 2000, 44146 NRC
   Glover F., 1993, TABU SEARCH
   Gyimóthy T, 2005, IEEE T SOFTWARE ENG, V31, P897, DOI 10.1109/TSE.2005.112
   Hao Pan, 2008, 2008 International Conference on Computer Science and Software Engineering (CSSE 2008), P78, DOI 10.1109/CSSE.2008.1057
   Harman M, 2001, INFORM SOFTWARE TECH, V43, P833, DOI 10.1016/S0950-5849(01)00189-6
   Holschuh T, 2009, PROC INT CONF SOFTW, P172, DOI 10.1109/ICSE-COMPANION.2009.5070975
   Janes A, 2006, INFORM SCIENCES, V176, P3711, DOI 10.1016/j.ins.2005.12.002
   Jie Xu, 2008, Journal of Computer Sciences, V4, P571, DOI 10.3844/jcssp.2008.571.577
   Jones C., 2007, Estimating Software Costs: Bringing Realism To Estimating
   Jorgensen M, 2004, J SYST SOFTWARE, V70, P37, DOI 10.1016/S0164-1212(02)00156-5
   Jorgensen M, 2007, IEEE T SOFTWARE ENG, V33, P33, DOI 10.1109/TSE.2007.256943
   Kitchenham BA, 2004, PROC INT CONF SOFTW, P273
   Kitchenham BA, 2007, IEEE T SOFTWARE ENG, V33, P316, DOI 10.1109/TSE.2007.1101
   Kocaguneli E., 2010, P IEEE ACM INT C AUT
   Lum K., 2006, P ISPA C
   MacDonell Stephen G., 2007, 2007 First International Symposium on Empirical Software Engineering and Measurement, P401
   Mei-Huei Tang, 1999, Proceedings Sixth International Software Metrics Symposium (Cat. No.PR00403), P242, DOI 10.1109/METRIC.1999.809745
   Menzies T, 2003, COMPUTER, V36, P22, DOI 10.1109/MC.2003.1244531
   Menzies T, 2011, P 26 IEEE ACM INT C
   Menzies T., 2005, P WORKSH PRED MOD SO
   Menzies T., 2012, The PROMISE Repository of empirical software engineering data
   Menzies T, 2007, IEEE T SOFTWARE ENG, V33, P2, DOI 10.1109/TSE.2007.256941
   Menzies T, 2010, AUTOMAT SOFTW ENG, V17, P375, DOI 10.1007/s10515-010-0069-5
   Nagappan N., 2006, 28th International Conference on Software Engineering Proceedings, P452, DOI 10.1145/1134285.1134349
   Novak PK, 2009, J MACH LEARN RES, V10, P377
   Olague HM, 2007, IEEE T SOFTWARE ENG, V33, P402, DOI 10.1109/TSE.2007.1015.
   Ping Yu, 2002, Proceedings of the Sixth European Conference on Software Maintenance and Reengineering, P99, DOI 10.1109/CSMR.2002.995794
   Posnett D., 2011, P IEEE ACM INT C AUT
   Quinlan J. R., 1992, Proceedings of the 5th Australian Joint Conference on Artificial Intelligence. AI '92, P343
   RUMELHART DE, 1986, NATURE, V323, P533, DOI 10.1038/323533a0
   Shatnawi R, 2008, J SYST SOFTWARE, V81, P1868, DOI 10.1016/j.jss.2007.12.794
   Shatnawi R, 2010, IEEE T SOFTWARE ENG, V36, P216, DOI 10.1109/TSE.2010.9
   Singh Y, 2010, SOFTWARE QUAL J, V18, P3, DOI 10.1007/s11219-009-9079-6
   Song QB, 2011, IEEE T SOFTWARE ENG, V37, P356, DOI 10.1109/TSE.2010.90
   Subramanyam R, 2003, IEEE T SOFTWARE ENG, V29, P297, DOI 10.1109/TSE.2003.1191795
   Succi G, 2003, J SYST SOFTWARE, V65, P1, DOI 10.1016/S0164-1212(02)00024-9
   Thapaliyal MP., 2010, INT J COMPUT APPL, DOI 10.5120/1379-1859
   Thongmak M, 2003, SERP'03: PROCEEDINGS OF THE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING RESEARCH AND PRACTICE, VOLS 1 AND 2, P621
   Turhan B, 2012, EMPIR SOFTW ENG, V17, P62, DOI 10.1007/s10664-011-9182-8
   Zhou YM, 2006, IEEE T SOFTWARE ENG, V32, P771, DOI 10.1109/TSE.2006.102
   Zimmermann T, 2009, P 7 JOINT M EUR SOFT
   Zlochin M, 2004, ANN OPER RES, V131, P373, DOI 10.1023/B:ANOR.0000039526.52305.af
NR 71
TC 151
Z9 164
U1 0
U2 19
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUN
PY 2013
VL 39
IS 6
BP 822
EP 834
DI 10.1109/TSE.2012.83
PG 13
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 149RG
UT WOS:000319338200007
DA 2024-07-18
ER

PT J
AU Mateo, PR
   Usaola, MP
   Alemán, JLF
AF Reales Mateo, Pedro
   Polo Usaola, Macario
   Fernandez Aleman, Jose Luis
TI Validating Second-Order Mutation at System Level
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Empirical evaluation; high-order mutation; mutation testing
AB Mutation has been recognized to be an effective software testing technique. It is based on the insertion of artificial faults in the system under test (SUT) by means of a set of mutation operators. Different operators can mutate each program statement in several ways, which may produce a huge number of mutants. This leads to very high costs for test case execution and result analysis. Several works have approached techniques for cost reduction in mutation testing, like n-order mutation where each mutant contains n artificial faults instead of one. There are two approaches to n-order mutation: increasing the effectiveness of mutation by searching for good n-order mutants, and decreasing the costs of mutation testing by reducing the mutants set through the combination of the first-order mutants into n-order mutants. This paper is focused on the second approach. However, this second use entails a risk: the possibility of leaving undiscovered faults in the SUT, which may distort the perception of the test suite quality. This paper describes an empirical study of different combination strategies to compose second-order mutants at system level as well as a cost-risk analysis of n-order mutation at system level.
C1 [Reales Mateo, Pedro; Polo Usaola, Macario] Univ Castilla La Mancha, E-13071 Ciudad Real, Spain.
   [Fernandez Aleman, Jose Luis] Univ Murcia, Fac Informat, E-30100 Murcia, Spain.
C3 Universidad de Castilla-La Mancha; University of Murcia
RP Mateo, PR (corresponding author), Univ Castilla La Mancha, Paseo Univ 4, E-13071 Ciudad Real, Spain.
EM pedro.reales@uclm.es; macario.polo@uclm.es; aleman@um.es
RI Fernández-Alemán, José Luis/H-5256-2019; Polo Usaola,
   Macario/N-3104-2014
OI Fernández-Alemán, José Luis/0000-0002-0176-450X; Polo Usaola,
   Macario/0000-0001-6519-6196
FU Spanish Ministry of Science and Technology [TIN2009-13718,
   TIN2009-13718-C02-02, TRA2009-0131]; Spanish Ministry of Education
FX This work has been partially financed by the Spanish Ministry of Science
   and Technology, projects PEGASO, TIN2009-13718, PANGEA,
   TIN2009-13718-C02-02, and DIMITRI, TRA2009-0131. Pedro Reales has an FPU
   grant from the Spanish Ministry of Education. The authors would like to
   thank their colleague Mercedes Fernandez Guerrero from the Department of
   Applied Mathematics at the University of Castilla-La Mancha for her kind
   support and help with the statistical analysis of the data.
CR Acree A.T., 1980, THESIS SCH INFORM CO
   Agrawal H., 1994, Conference Record of POPL '94: 21st ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages, P25, DOI 10.1145/174675.175935
   Ammann Paul, 2008, Introduction to software testing, V1st
   [Anonymous], 2011, SPSS Statistics.
   [Anonymous], P 11 ANN C GEN EV CO
   [Anonymous], 1979, HEURISTICS DETERMINI
   Barbosa EF, 2001, SOFTW TEST VERIF REL, V11, P113, DOI 10.1002/stvr.226
   BASILI VR, 1988, IEEE T SOFTWARE ENG, V14, P758, DOI 10.1109/32.6156
   Basili VR, 1999, IEEE T SOFTWARE ENG, V25, P456, DOI 10.1109/32.799939
   BUDD TA, 1982, ACTA INFORM, V18, P31, DOI 10.1007/BF00625279
   Delamaro M.E., 2000, P MUT 2000 S SAN JOS, P91
   DeMillo R.A., 1986, P 11 NASA SOFTW ENG
   DEMILLO RA, 1978, COMPUTER, V11, P34, DOI 10.1109/C-M.1978.218136
   Do H, 2004, 2004 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P60
   Ghosh S, 2001, SOFTW TEST VERIF REL, V11, P227, DOI 10.1002/stvr.239
   Grindal M, 2005, SOFTW TEST VERIF REL, V15, P167, DOI 10.1002/stvr.319
   Grün BJM, 2009, IEEE ICST WORKSHOP, P192, DOI 10.1109/ICSTW.2009.37
   Harman Mark, 2010, Proceedings of the IEEE Third International Conference on Software Testing Verification and Validation - Workshops (ICSTW 2010), P80, DOI 10.1109/ICSTW.2010.13
   Harman M., 2008, P 8 INT WORK C SOURC, P28
   Harrold M. J., 1993, ACM Transactions on Software Engineering and Methodology, V2, P270, DOI 10.1145/152388.152391
   Hierons R.M., 1999, J SOFTW TEST VERIFIC, V9, P233, DOI 10.1002/(SICI)1099-1689(199912)9:43.0.CO;2-3
   Hutchins M., 1994, P 16 INT C SOFTW ENG
   Jeffrey D, 2005, PROC IEEE INT CONF S, P549
   Jia Y, 2009, INFORM SOFTWARE TECH, V51, P1379, DOI 10.1016/j.infsof.2009.04.016
   Jia Y, 2008, TACI PART 2008:TESTING: ACADEMIC AND INDUSTRIAL CONFERENCE PRACTICE AND RESEARCH TECHNIQUES, PROCEEDINGS, P94, DOI 10.1109/TAIC-PART.2008.18
   Just Ren., 2011, Proceedings of the 6th International Workshop on Automation of Software Test. AST'11, P50, DOI [DOI 10.1145/1982595.1982606, 10.1145/1982595.1982606]
   Kaminski G., 2009, P INT C SOFTW TEST A
   Kaminski G., 2011, Proceedings of the 6th International Workshop on Automation of Software Test, P57, DOI [10.1145/1982595.1982608, DOI 10.1145/1982595.1982608]
   Kaminski G, 2011, INFORM SOFTWARE TECH, V53, P1137, DOI 10.1016/j.infsof.2011.03.009
   KING KN, 1991, SOFTWARE PRACT EXPER, V21, P685, DOI 10.1002/spe.4380210704
   Langdon WB, 2009, 2009 TESTING: ACADEMIC AND INDUSTRIAL CONFERENCE-PRACTICE AND RESEARCH TECHNIQUES, TAIC PART 2009, P21, DOI 10.1109/TAICPART.2009.18
   Langdon WB, 2010, J SYST SOFTWARE, V83, P2416, DOI 10.1016/j.jss.2010.07.027
   Ma YS, 2005, SOFTW TEST VERIF REL, V15, P97, DOI 10.1002/stvr.308
   Mateo Pedro Reales, 2010, Proceedings of the IEEE Third International Conference on Software Testing Verification and Validation - Workshops (ICSTW 2010), P110, DOI 10.1109/ICSTW.2010.18
   Mresa E. S., 1999, Software Testing, Verification and Reliability, V9, P205, DOI 10.1002/(SICI)1099-1689(199912)9:4<205::AID-STVR186>3.0.CO;2-X
   Offut A. J., 1997, Software Testing, Verification and Reliability, V7, P165, DOI 10.1002/(SICI)1099-1689(199709)7:3<165::AID-STVR143>3.0.CO;2-U
   Offutt A., 1997, WILEYS SOFTWARE TEST, V7, P165
   Offutt A. J., 1996, ACM Transactions on Software Engineering and Methodology, V5, P99, DOI 10.1145/227607.227610
   Offutt AJ, 1992, ACM T SOFTW ENG METH, V1, P15
   Papadakis Mike, 2010, Proceedings of the IEEE Third International Conference on Software Testing Verification and Validation - Workshops (ICSTW 2010), P90, DOI 10.1109/ICSTW.2010.50
   Papadakis M., 2011, P 5 INT C SOFTW DAT, P325
   Papadakis M., 2010, P AS PAC ENG C NOV D
   Polo M, 2007, SOFTW TEST VERIF REL, V17, P3, DOI 10.1002/stvr.348
   Polo M, 2009, SOFTW TEST VERIF REL, V19, P111, DOI 10.1002/stvr.392
   Usaola MP, 2010, IEEE SOFTWARE, V27, P80, DOI 10.1109/MS.2010.79
   Purushothaman R, 2005, IEEE T SOFTWARE ENG, V31, P511, DOI 10.1109/TSE.2005.74
   Tai KC, 2002, IEEE T SOFTWARE ENG, V28, P109, DOI 10.1109/32.979992
   Tallam Sriraman., 2005, PASTE 05, P35, DOI [10.1145/1108768.1108802, DOI 10.1145/1108768.1108802]
   UNTCH R, 1993, P 1993 INT S SOFTW T, P139, DOI DOI 10.1145/154183.154265
   Walton L., 2011, ECLIPSE METRICS PLUG
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
   Zeller A., 2010, P 3 INT C SOFTW TEST
NR 52
TC 26
Z9 27
U1 0
U2 10
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD APR
PY 2013
VL 39
IS 4
BP 570
EP 587
DI 10.1109/TSE.2012.39
PG 18
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 112UH
UT WOS:000316618800008
DA 2024-07-18
ER

PT J
AU Abrahao, S
   Gravino, C
   Insfran, E
   Scanniello, G
   Tortora, G
AF Abrahao, Silvia
   Gravino, Carmine
   Insfran, Emilio
   Scanniello, Giuseppe
   Tortora, Genoveffa
TI Assessing the Effectiveness of Sequence Diagrams in the Comprehension of
   Functional Requirements: Results from a Family of Five Experiments
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Documentation; software engineering; requirements specifications
ID SOFTWARE; UML; REPLICATIONS; KNOWLEDGE
AB Modeling is a fundamental activity within the requirements engineering process and concerns the construction of abstract descriptions of requirements that are amenable to interpretation and validation. The choice of a modeling technique is critical whenever it is necessary to discuss the interpretation and validation of requirements. This is particularly true in the case of functional requirements and stakeholders with divergent goals and different backgrounds and experience. This paper presents the results of a family of experiments conducted with students and professionals to investigate whether the comprehension of functional requirements is influenced by the use of dynamic models that are represented by means of the UML sequence diagrams. The family contains five experiments performed in different locations and with 112 participants of different abilities and levels of experience with UML. The results show that sequence diagrams improve the comprehension of the modeled functional requirements in the case of high ability and more experienced participants.
C1 [Abrahao, Silvia; Insfran, Emilio] Univ Politecn Valencia, Dept Comp Sci, Valencia 46022, Spain.
   [Gravino, Carmine; Tortora, Genoveffa] Univ Salerno, Dept Management & Informat Technol, I-84084 Fisciano, SA, Italy.
   [Scanniello, Giuseppe] Univ Basilicata, Dipartimento Matemat Informat & Econ, I-85100 Potenza, Italy.
C3 Universitat Politecnica de Valencia; University of Salerno; University
   of Basilicata
RP Abrahao, S (corresponding author), Univ Politecn Valencia, Dept Comp Sci, C Camino de Vera S-N, Valencia 46022, Spain.
EM sabrahao@dsic.upv.es; gravino@unisa.it; einsfran@dsic.upv.es;
   giuseppe.scanniello@unibas.it; tortora@unisa.it
RI Abrahão, Silvia/AAK-6976-2020; Insfran, Emilio/O-6934-2015
OI Abrahão, Silvia/0000-0003-3580-2014; Insfran,
   Emilio/0000-0003-0855-5564; Gravino, Carmine/0000-0002-4394-9035;
   Scanniello, Giuseppe/0000-0003-0024-7508
FU MULTIPLE [TIN2009-13838]
FX The authors wish to thank all the participants in the experiments. This
   research was partially supported by the MULTIPLE project (with ref.
   TIN2009-13838).
CR Anda B, 2006, EMPIR SOFTW ENG, V11, P555, DOI 10.1007/s10664-006-9020-6
   [Anonymous], P 6 INT C EMP ASS SO
   [Anonymous], PRACTICAL NONPARAMET
   [Anonymous], P 3 INT S EMP ENG ME
   [Anonymous], P INT S EMP SOFTW EN
   [Anonymous], P INT WORKSH EXP SOF
   [Anonymous], P AS PAC SOFTW ENG C
   [Anonymous], 1993, Software Requirements-objects, Functions and States
   [Anonymous], UN MOD LANG UML SPEC
   [Anonymous], COMPR MET V2
   [Anonymous], METHODS METAANALYSIS
   [Anonymous], OBJ CONSTR LANG OCL
   [Anonymous], 9 INT SOFTW METR S
   Antoniol G, 2002, IEEE T SOFTWARE ENG, V28, P970, DOI 10.1109/TSE.2002.1041053
   Baeza-Yates Ricardo, 1999, MODERN INFORM RETRIE, V463
   BASILI VR, 1986, IEEE T SOFTWARE ENG, V12, P733, DOI 10.1109/TSE.1986.6312975
   Basili VR, 1996, PROC INT CONF SOFTW, P442, DOI 10.1109/ICSE.1996.493439
   Basili VR, 1999, IEEE T SOFTWARE ENG, V25, P456, DOI 10.1109/32.799939
   Boehm BW., 1981, Software Engineering Economics
   Briand LC, 2005, IEEE T SOFTWARE ENG, V31, P833, DOI 10.1109/TSE.2005.105
   Bruegge B., 2009, OBJECT ORIENTED SOFT
   Budgen D, 2011, SOFTWARE PRACT EXPER, V41, P363, DOI 10.1002/spe.1009
   Cohen J., 1988, STAT POWER ANAL BEHA
   Colosimo M, 2009, INFORM SOFTWARE TECH, V51, P433, DOI 10.1016/j.infsof.2008.05.012
   Conallen J., 1999, BUILDING WEB APPL UM
   Cruz-Lemus JA, 2009, EMPIR SOFTW ENG, V14, P685, DOI 10.1007/s10664-009-9106-z
   Devore J., 1999, APPL STAT ENG SCI
   Dzidek WJ, 2008, IEEE T SOFTWARE ENG, V34, P407, DOI 10.1109/TSE.2008.15
   FENTON N, 1993, J SYST SOFTWARE, V22, P141, DOI 10.1016/0164-1212(93)90092-C
   Fisher RA, 1914, BIOMETRIKA, V10, P507
   Glass G.V., 1981, MetaAnalysis in Social Research
   Glezer C, 2005, INFORM SOFTWARE TECH, V47, P675, DOI 10.1016/j.infsof.2005.01.003
   Gravino C, 2008, LECT NOTES COMPUT SC, V5301, P615, DOI 10.1007/978-3-540-87875-9_43
   Hannay JE, 2008, IEEE T SOFTWARE ENG, V34, P242, DOI 10.1109/TSE.2008.13
   Hedges LV., 2014, STAT METHODS META AN
   Host M., 2000, Empirical Software Engineering, V5, P201, DOI 10.1023/A:1026586415054
   Jackson M., 1995, SOFTWARE REQUIREMENT
   Juristo N., 2013, BASICS SOFTWARE ENG
   Kampenes VB, 2007, INFORM SOFTWARE TECH, V49, P1073, DOI 10.1016/j.infsof.2007.02.015
   Kitchenham BA, 2002, IEEE T SOFTWARE ENG, V28, P721, DOI 10.1109/TSE.2002.1027796
   Kitchenham B, 2008, EMPIR SOFTW ENG, V13, P219, DOI 10.1007/s10664-008-9061-0
   NAKAJO T, 1991, IEEE T SOFTWARE ENG, V17, P830, DOI 10.1109/32.83917
   Nugroho A, 2008, LECT NOTES COMPUT SC, V5301, P600, DOI 10.1007/978-3-540-87875-9_42
   Nuseibeh B., 2000, P C FUTURE SOFTWARE, P35, DOI [10.1145/336512.336523, DOI 10.1145/336512.336523]
   Oppenheim A.N., 1992, QUESTIONNAIRE DESIGN
   Otero M. C., 2002, Empirical Software Engineering, V7, P27, DOI 10.1023/A:1014819010099
   Otero MC, 2005, J SYST SOFTWARE, V77, P91, DOI 10.1016/j.jss.2004.11.022
   Ricca F, 2010, IEEE T SOFTWARE ENG, V36, P96, DOI 10.1109/TSE.2009.69
   Rosenthal R., 1986, Meta-analytic procedures for social science research
   Shull F, 2004, EMPIR SOFTW ENG, V9, P111, DOI 10.1023/B:EMSE.0000013516.80487.33
   Shull FJ, 2008, EMPIR SOFTW ENG, V13, P211, DOI 10.1007/s10664-008-9060-1
   Sjoberg DIK, 2005, IEEE T SOFTWARE ENG, V31, P733, DOI 10.1109/TSE.2005.97
   Wieringa R.J., 1996, REQUIREMENTS ENG FRA
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
   Zimmermann T, 2005, IEEE T SOFTWARE ENG, V31, P429, DOI 10.1109/TSE.2005.72
NR 55
TC 47
Z9 48
U1 1
U2 11
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAR
PY 2013
VL 39
IS 3
BP 327
EP 342
DI 10.1109/TSE.2012.27
PG 16
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 098CA
UT WOS:000315520700003
OA Green Submitted, Green Published
DA 2024-07-18
ER

PT J
AU Harter, DE
   Kemerer, CF
   Slaughter, SA
AF Harter, Donald E.
   Kemerer, Chris F.
   Slaughter, Sandra A.
TI Does Software Process Improvement Reduce the Severity of Defects? A
   Longitudinal Field Study
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Software complexity; defect severity; requirements ambiguity; software
   process; CMM
ID OBJECT-ORIENTED METRICS; EMPIRICAL-ANALYSIS; CYCLE TIME; QUALITY;
   COMPLEXITY; MATURITY; NUMBER; PRODUCTIVITY; VALIDATION; FAULTS
AB As firms increasingly rely on information systems to perform critical functions, the consequences of software defects can be catastrophic. Although the software engineering literature suggests that software process improvement can help to reduce software defects, the actual evidence is equivocal. For example, improved development processes may only remove the "easier" syntactical defects, while the more critical defects remain. Rigorous empirical analyses of these relationships have been very difficult to conduct due to the difficulties in collecting the appropriate data on real systems from industrial organizations. This field study analyzes a detailed data set consisting of 7,545 software defects that were collected on software projects completed at a major software firm. Our analyses reveal that higher levels of software process improvement significantly reduce the likelihood of high severity defects. In addition, we find that higher levels of process improvement are even more beneficial in reducing severe defects when the system developed is large or complex, but are less beneficial in development when requirements are ambiguous, unclear, or incomplete. Our findings reveal the benefits and limitations of software process improvement for the removal of severe defects and suggest where investments in improving development processes may have their greatest effects.
C1 [Harter, Donald E.] Syracuse Univ, Whitman Sch Management, Syracuse, NY 13244 USA.
   [Kemerer, Chris F.] Univ Pittsburgh, Katz Grad Sch Business, Pittsburgh, PA 15260 USA.
   [Kemerer, Chris F.] King Abdulaziz Univ, Jeddah, Saudi Arabia.
   [Slaughter, Sandra A.] Georgia Inst Technol, Scheller Coll Business, Atlanta, GA 30308 USA.
C3 Syracuse University; Pennsylvania Commonwealth System of Higher
   Education (PCSHE); University of Pittsburgh; King Abdulaziz University;
   University System of Georgia; Georgia Institute of Technology
RP Harter, DE (corresponding author), Syracuse Univ, Whitman Sch Management, Syracuse, NY 13244 USA.
EM dharter@syr.edu; ckemerer@katz.pitt.edu; sandra.slaughter@mgt.gatech.edu
CR Agrawal M, 2007, IEEE T SOFTWARE ENG, V33, P145, DOI 10.1109/TSE.2007.29
   Ai CR, 2003, ECON LETT, V80, P123, DOI 10.1016/S0165-1765(03)00032-6
   Alshayeb M, 2003, IEEE T SOFTWARE ENG, V29, P1043, DOI 10.1109/TSE.2003.1245305
   Andersson C, 2007, IEEE T SOFTWARE ENG, V33, P273, DOI 10.1109/TSE.2007.1005
   [Anonymous], MANAGING SOFTWARE PR
   [Anonymous], CROSSTALK
   [Anonymous], IND STRENGTH SOFTWAR
   [Anonymous], ROI SOFTWARE QUALITY
   [Anonymous], 1992, PRACTICAL SOFTWARE M
   [Anonymous], QUAL STAND DEF MEAS
   [Anonymous], 1995, MYTHICAL MAN MONTH
   [Anonymous], IND QUALITY CONTROL
   [Anonymous], P INT C INF SYST
   [Anonymous], 2002, P 2002 ACM SIGSOFT I
   [Anonymous], 1998, Software process improvement
   [Anonymous], NY TIMES 0330
   [Anonymous], 1992, Juran on Quality by Design. The New Steps for planning Quality into Goods and Services
   [Anonymous], HARD LOOK SOFTWARE R
   [Anonymous], 1994, The Capability Maturity Model: Guidelines for Improving the Software Process
   [Anonymous], EC IMP IN INFR SOFTW
   [Anonymous], HDB SOFTWARE RELIABI
   [Anonymous], 7291983 ANSIIEEE
   Banker RD, 2000, INFORM SYST RES, V11, P219, DOI 10.1287/isre.11.3.219.12209
   BANKER RD, 1989, IEEE T SOFTWARE ENG, V15, P1199, DOI 10.1109/TSE.1989.559768
   BANKER RD, 1993, COMMUN ACM, V36, P81, DOI 10.1145/163359.163375
   Banker RD, 1998, MANAGE SCI, V44, P433, DOI 10.1287/mnsc.44.4.433
   Barry EJ, 2007, J SOFTW MAINT EVOL-R, V19, P1, DOI 10.1002/smr.342
   Boehm BW., 1981, Software Engineering Economics
   Cai KY, 1998, J SYST SOFTWARE, V40, P93, DOI 10.1016/S0164-1212(97)00003-4
   Cangussu JW, 2002, IEEE T SOFTWARE ENG, V28, P782, DOI 10.1109/TSE.2002.1027800
   Chillarege R., 1995, Handbook of Software Reliability Engineering, P359
   Clark BK, 2000, IEEE SOFTWARE, V17, P65, DOI 10.1109/52.895170
   Crosby P. B., 1979, QUALITY IS FREE ART
   Damian D, 2006, IEEE T SOFTWARE ENG, V32, P433, DOI 10.1109/TSE.2006.61
   Deming W.E., 1992, OUT CRISIS
   Diaz M, 1997, IEEE SOFTWARE, V14, P75, DOI 10.1109/52.605934
   Dybå T, 2005, IEEE T SOFTWARE ENG, V31, P410, DOI 10.1109/TSE.2005.53
   Emam KE, 2001, IEEE T SOFTWARE ENG, V27, P630, DOI 10.1109/32.935855
   GAFFNEY JE, 1984, IEEE T SOFTWARE ENG, V10, P459, DOI 10.1109/TSE.1984.5010260
   Gao J., 2003, TESTING QUALITY ASSU
   Grady R., 1997, SUCCESSFUL SOFTWARE
   Greene W.H., 1997, Econometric Analysis, Vthird
   Gyimóthy T, 2005, IEEE T SOFTWARE ENG, V31, P897, DOI 10.1109/TSE.2005.112
   HAGER JA, 1989, IEEE T SOFTWARE ENG, V15, P1638, DOI 10.1109/32.58775
   Harter DE, 2003, MANAGE SCI, V49, P784, DOI 10.1287/mnsc.49.6.784.16023
   Harter DE, 2000, MANAGE SCI, V46, P451, DOI 10.1287/mnsc.46.4.451.12056
   Herbsleb J, 1997, COMMUN ACM, V40, P30, DOI 10.1145/255656.255692
   Humphrey W.S., 1989, MANAGING SOFTWARE PR
   HUMPHREY WS, 1988, IEEE SOFTWARE, V5, P73, DOI 10.1109/52.2014
   Jones C., 1996, APPL SOFTWARE MEASUR
   Kemerer C. F., 1995, Annals of Software Engineering, V1, P1, DOI 10.1007/BF02249043
   Krishnan MS, 1999, IEEE T SOFTWARE ENG, V25, P800, DOI 10.1109/32.824401
   Krishnan MS, 2000, MANAGE SCI, V46, P745, DOI 10.1287/mnsc.46.6.745.11941
   Li G, 1998, MANAGE SCI, V44, P1517, DOI 10.1287/mnsc.44.11.1517
   Liao T.F., 1994, INTERPRETING PROBABI
   Lipow M., 1979, Journal of Systems and Software, V1, P71, DOI 10.1016/0164-1212(79)90006-2
   Lo JH, 2006, J SYST SOFTWARE, V79, P1312, DOI 10.1016/j.jss.2005.12.006
   Mann CC, 2002, TECHNOL REV, V105, P33
   Norton EC, 2004, STATA J, V4, P154, DOI 10.1177/1536867X0400400206
   Ostrand TJ, 2005, IEEE T SOFTWARE ENG, V31, P340, DOI 10.1109/TSE.2005.49
   PAULK MC, 1993, IEEE SOFTWARE, V10, P18, DOI 10.1109/52.219617
   Poulin J.S., 1997, MEASURING SOFTWARE R
   Ramasubbu N, 2008, MIS QUART, V32, P437
   SHEN VY, 1985, IEEE T SOFTWARE ENG, V11, P317, DOI 10.1109/TSE.1985.232222
   Subramanyam R, 2003, IEEE T SOFTWARE ENG, V29, P297, DOI 10.1109/TSE.2003.1191795
   Wang ETG, 2008, INFORM MANAGE-AMSTER, V45, P438, DOI 10.1016/j.im.2008.05.003
   WOHLWEND H, 1994, IEEE T SOFTWARE ENG, V20, P833, DOI 10.1109/32.368125
   Zhou YM, 2006, IEEE T SOFTWARE ENG, V32, P771, DOI 10.1109/TSE.2006.102
NR 68
TC 28
Z9 31
U1 0
U2 27
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUL-AUG
PY 2012
VL 38
IS 4
BP 810
EP 827
DI 10.1109/TSE.2011.63
PG 18
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 983LE
UT WOS:000307120000005
DA 2024-07-18
ER

PT J
AU Al Dallal, J
AF Al Dallal, Jehad
TI Measuring the Discriminative Power of Object-Oriented Class Cohesion
   Metrics
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Cohesive interactions; connectivity pattern; discrimination metric;
   discriminative power; lack of discrimination anomaly; object-oriented
   class cohesion
ID SUITE
AB Several object-oriented cohesion metrics have been proposed in the literature. These metrics aim to measure the relationship between class members, namely, methods and attributes. Different metrics use different models to represent the connectivity pattern of cohesive interactions (CPCI) between class members. Most of these metrics are normalized to allow for easy comparison of the cohesion of different classes. However, in some cases, these metrics obtain the same cohesion values for different classes that have the same number of methods and attributes but different CPCIs. This leads to incorrectly considering the classes to be the same in terms of cohesion, even though their CPCIs clearly indicate that the degrees of cohesion are different. We refer to this as a lack of discrimination anomaly (LDA) problem. In this paper, we list and discuss cases in which the LDA problem exists, as expressed through the use of 16 cohesion metrics. In addition, we empirically study the frequent occurrence of the LDA problem when the considered metrics are applied to classes in five open source Java systems. Finally, we propose a metric and a simulation-based methodology to measure the discriminative power of cohesion metrics. The discrimination metric measures the probability that a cohesion metric will produce distinct cohesion values for classes with the same number of attributes and methods but different CPCIs. A highly discriminating cohesion metric is more desirable because it exhibits a lower chance of incorrectly considering classes to be cohesively equal when they have different CPCIs.
C1 Kuwait Univ, Dept Informat Sci, Safat 13060, Kuwait.
C3 Kuwait University
RP Al Dallal, J (corresponding author), Kuwait Univ, Dept Informat Sci, POB 5969, Safat 13060, Kuwait.
EM j.aldallal@ku.edu.kw
RI Al Dallal, Jehad/HTL-9247-2023
OI Al Dallal, Jehad/0000-0003-3679-4351
FU Kuwait University [WI03/07]
FX The author would like to acknowledge the support of this work by Kuwait
   University Research Grant WI03/07. In addition, the author would like to
   thank Professor Steve Counsell for his insightful comments that helped
   improve the paper and Saqiba Sulman for assisting in collecting the
   required data.
CR Aggarwal KK, 2007, J OBJECT TECHNOL, V6, P127, DOI 10.5381/jot.2007.6.10.a5
   Al Dallal J, 2009, IET SOFTW, V3, P46, DOI 10.1049/iet-sen:20080054
   Al Dallal J., 2010, INT J COMPUTER SCI, V4, P45
   Al Dallal J, 2010, INFORM SOFTWARE TECH, V52, P1346, DOI 10.1016/j.infsof.2010.08.006
   Al Dallal J, 2007, PROC WRLD ACAD SCI E, V25, P448
   Alshayeb M, 2003, IEEE T SOFTWARE ENG, V29, P1043, DOI 10.1109/TSE.2003.1245305
   [Anonymous], ILLUSION
   [Anonymous], OPENBRAVO
   [Anonymous], ACM T SOFTWARE ENG M
   [Anonymous], 1997, Software metrics: A rigorous and practical approach
   [Anonymous], JABREF
   [Anonymous], GANTTPROJECT
   [Anonymous], 2006, INT J INF THEOR APPL
   [Anonymous], P 1995 S SOFTW REUS
   Badri L., 2004, J OBJECT TECHNOL, V3, P145
   Bansiya J, 1999, J OBJECT-ORIENT PROG, V11, P47
   BIEMAN JM, 1994, IEEE T SOFTWARE ENG, V20, P644, DOI 10.1109/32.310673
   Bonja C., 2006, ACM SE 44 P 44 ANN S, P91
   Briand L. C., 2001, Empirical Software Engineering, V6, P11, DOI 10.1023/A:1009815306478
   Briand L. C., 1998, Empirical Software Engineering, V3, P65, DOI 10.1023/A:1009783721306
   Briand LC, 2000, J SYST SOFTWARE, V51, P245, DOI 10.1016/S0164-1212(99)00102-8
   Briand LC, 2002, ADV COMPUT, V56, P97, DOI 10.1016/S0065-2458(02)80005-5
   Briand LC, 1999, IEEE T SOFTWARE ENG, V25, P722, DOI 10.1109/32.815329
   Chae HS, 2000, SOFTWARE PRACT EXPER, V30, P1405, DOI 10.1002/1097-024X(200010)30:12<1405::AID-SPE330>3.0.CO;2-3
   Chen ZQ, 2004, J COMPUT SCI TECH-CH, V19, P859, DOI 10.1007/BF02973449
   Chen ZQ, 2002, PROC IEEE INT CONF S, P377, DOI 10.1109/ICSM.2002.1167794
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   CHIDAMBER SR, 1991, SIGPLAN NOTICES, V26, P197
   Counsell S, 2006, ACM T SOFTW ENG METH, V15, P123, DOI 10.1145/1131421.1131422
   Gyimóthy T, 2005, IEEE T SOFTWARE ENG, V31, P897, DOI 10.1109/TSE.2005.112
   HANLEY JA, 1982, RADIOLOGY, V143, P29, DOI 10.1148/radiology.143.1.7063747
   Henderson-Sellers B., 1996, Object-Oriented Metrics, measures of complexity
   Hitz M., 1995, International Symposium on Applied Corporate Computing, P25
   KITCHENHAM B, 1995, IEEE T SOFTWARE ENG, V21, P929, DOI 10.1109/32.489070
   Li W., 1993, Proceedings First International Software Metrics Symposium (Cat. No.93TH0518-1), P52, DOI 10.1109/METRIC.1993.263801
   Marcus A, 2008, IEEE T SOFTWARE ENG, V34, P287, DOI 10.1109/TSE.2007.70768
   Siegel Sidney, 1988, Nonparametric statistics for the behavioral sciences
   Wang JM, 2005, INFORM SOFTWARE TECH, V47, P167, DOI 10.1016/j.infsof.2004.07.001
   Xu BW, 2001, SOFTWARE PRACT EXPER, V31, P1381, DOI 10.1002/spe.413
   Zhou Yigong, 2003, Proceedings of the ICOPE-03. International Conference on Power Engineering - 03, P1
NR 40
TC 40
Z9 42
U1 0
U2 8
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD NOV-DEC
PY 2011
VL 37
IS 6
BP 788
EP 804
DI 10.1109/TSE.2010.97
PG 17
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 854SE
UT WOS:000297513700003
DA 2024-07-18
ER

PT J
AU Vegas, S
   Juristo, N
   Basili, VR
AF Vegas, Sira
   Juristo, Natalia
   Basili, Victor R.
TI Maturing Software Engineering Knowledge through Classifications: A Case
   Study on Unit Testing Techniques
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article; Proceedings Paper
CT 23rd IEEE International Conference on Software Maintenance
CY OCT 02-05, 2007
CL Paris, FRANCE
SP IEEE, IEEE Comp Soc, IEEE France Sect, TCSE, IEEE Comp Soc, Tech Council Software Engn, Reeng Forum, Univ Waterloo, Univ Studi Sannio
DE Classification; software engineering; software testing; test design
   techniques; testing techniques; unit testing techniques
AB Classification makes a significant contribution to advancing knowledge in both science and engineering. It is a way of investigating the relationships between the objects to be classified and identifies gaps in knowledge. Classification in engineering also has a practical application; it supports object selection. They can help mature Software Engineering knowledge, as classifications constitute an organized structure of knowledge items. Till date, there have been few attempts at classifying in Software Engineering. In this research, we examine how useful classifications in Software Engineering are for advancing knowledge by trying to classify testing techniques. The paper presents a preliminary classification of a set of unit testing techniques. To obtain this classification, we enacted a generic process for developing useful Software Engineering classifications. The proposed classification has been proven useful for maturing knowledge about testing techniques, and therefore, SE, as it helps to: 1) provide a systematic description of the techniques, 2) understand testing techniques by studying the relationships among techniques ( measured in terms of differences and similarities), 3) identify potentially useful techniques that do not yet exist by analyzing gaps in the classification, and 4) support practitioners in testing technique selection by matching technique characteristics to project characteristics.
C1 [Vegas, Sira; Juristo, Natalia] Univ Politecn Madrid, DLSIIS, Fac Informat, E-28660 Madrid, Spain.
   [Basili, Victor R.] Univ Maryland, Dept Comp Sci, College Pk, MD 20742 USA.
   [Basili, Victor R.] Fraunhofer USA Inc, Fraunhofer Ctr Expt Software Engn Maryland, College Pk, MD 20740 USA.
C3 Universidad Politecnica de Madrid; University System of Maryland;
   University of Maryland College Park
RP Vegas, S (corresponding author), Univ Politecn Madrid, DLSIIS, Fac Informat, Campus Montegancedo, E-28660 Madrid, Spain.
EM svegas@fi.upm.es; natalia@fi.upm.es; basili@cs.umd.edu
RI Vegas, Sira/R-6742-2018
CR [Anonymous], P INT A ERSH MEM C P
   [Anonymous], THESIS U POLITECNICA
   Bass Len, 2012, SEI S SOFTW
   Baxter M.J., 1994, Exploratory Multivariate Analysis in Archaeology
   BERTOLINO A, 2004, SOFTWARE TESTING, pCH5
   CHILLAREGE R, 1996, HDB SOFTWARE RELIABI, pCH9
   Everitt B., 2001, Cluster analysis
   Glass R.L., 1992, Building quality software
   Glass RL, 2002, INFORM SOFTWARE TECH, V44, P491, DOI 10.1016/S0950-5849(02)00049-6
   Glass RL, 2004, COMMUN ACM, V47, P89, DOI 10.1145/990680.990686
   GLASS RL, 2003, IEEE SOFTWARE    MAY, P119
   HAYES F, 2001, COMPUTERWORLD    AUG
   *IEEE CS, 2004, SWEBOK GUID SOFTW EN
   KNIGHT M, 1992, HIST SCI
   Levy P., 1999, WILEY S PRO STAT SUR, VThird
   MAIBAUM TSE, 2000, P C FUT SOFTW ENG AC, P161
   Maiden NAM, 1996, SOFTWARE ENG J, V11, P183, DOI 10.1049/sej.1996.0024
   NEEDHAM RM, 1965, USE COMPUTERS ANTHR, V1, P345
   Novak J.D., 1998, LEARNING CREATING US
   Perry DE., 2000, P C FUT SOFTW ENG, P345, DOI DOI 10.1145/336512.336586
   Ramesh V, 2004, J SYST SOFTWARE, V70, P165, DOI [10.1016/S0164-1212(03)00015-3, 10.1016/S0164-1212(03)00014-1]
   ROBILLARD PN, 1998, COMMUN ACM, V42, P87
   Rosenberg A., 2000, PHILOS SCI CONT INTR
   SHEPARD RN, 1974, PSYCHOMETRIKA, V39, P373, DOI 10.1007/BF02291665
   Tudge C., 2000, The Variety of Life
   Vegas S, 2003, MANAGING SOFTWARE ENGINEERING KNOWLEDGE, P199
   Vegas S, 2005, EMPIR SOFTW ENG, V10, P437, DOI 10.1007/s10664-005-3862-1
   Vessey I, 2005, INFORM SOFTWARE TECH, V47, P245, DOI 10.1016/j.infsof.2004.08.006
   Vincenti WalterG., 1990, What Engineers Know and How They Know It Analytical Studies from Aeronautical History
   WOESE CR, 1987, MICROBIOL REV, V51, P221, DOI 10.1128/MMBR.51.2.221-271.1987
   Zhu H, 1997, ACM COMPUT SURV, V29, P366, DOI 10.1145/267580.267590
NR 31
TC 33
Z9 33
U1 0
U2 16
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUL-AUG
PY 2009
VL 35
IS 4
BP 551
EP 565
DI 10.1109/TSE.2009.13
PG 15
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Engineering
GA 474TB
UT WOS:000268305800009
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Koru, AG
   Zhang, DS
   El Emam, K
   Liu, HF
AF Koru, A. Guenes
   Zhang, Dongsong
   El Emam, Khaled
   Liu, Hongfang
TI An Investigation into the Functional Form of the Size-Defect
   Relationship for Software Modules
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Product metrics; software science; size-defect relationship; measurement
   applied to SQA and V&V; planning for SQA and V&V; open-source software
ID QUANTITATIVE-ANALYSIS; NEURAL-NETWORKS; FAULTS; PREDICTION; COMPLEXITY;
   MODELS; NUMBER
AB The importance of the relationship between the size and defect proneness of software modules is well recognized. Understanding the nature of that relationship can facilitate various development decisions related to prioritization of quality assurance activities. Overall, the previous research only drew a general conclusion that there was a monotonically increasing relationship between module size and defect proneness. In this study, we analyzed class-level size and defect data in order to increase our understanding of this crucial relationship. We studied four large-scale object-oriented products, Mozilla, Cn3d, JBoss, and Eclipse. We observed that defect proneness increased as class size increased, but at a slower rate; smaller classes were proportionally more problematic than larger classes. Therefore, practitioners should consider giving higher priority to smaller modules when planning focused quality assurance activities with limited resources. For example, in Mozilla and Eclipse, an inspection strategy investing 80 percent of available resources on 100-LOC classes and the rest on 1,000-LOC classes would be more than twice as cost-effective as the opposite strategy. These results should be immediately useful to guide focused quality-assurance activities in large-scale software projects.
C1 [Koru, A. Guenes; Zhang, Dongsong] Univ Maryland Baltimore Cty, Dept Informat Syst, Baltimore, MD 21250 USA.
   [El Emam, Khaled] Childrens Hosp Eastern Ontario, Res Inst, Ottawa, ON K1H 8L1, Canada.
   [El Emam, Khaled] Univ Ottawa, Fac Med, Ottawa, ON K1H 8L1, Canada.
   [El Emam, Khaled] Univ Ottawa, Sch Informat Technol & Engn, Ottawa, ON K1H 8L1, Canada.
   [Liu, Hongfang] Georgetown Univ, Dept Biostat Bioinformat & Biomath, Sch Med, Washington, DC 20057 USA.
C3 University System of Maryland; University of Maryland Baltimore County;
   University of Ottawa; Children's Hospital of Eastern Ontario; University
   of Ottawa; University of Ottawa; Georgetown University
RP Koru, AG (corresponding author), Univ Maryland Baltimore Cty, Dept Informat Syst, 1000 Hilltop Circle, Baltimore, MD 21250 USA.
EM gkoru@umbc.edu; zhangd@umbc.edu; kelemam@uottawa.edu;
   hl224@georgetown.edu
RI Liu, Hongfang/ISU-9369-2023; Koru, Gunes/AAR-5819-2020
OI Liu, Hongfang/0000-0002-4352-2533; 
CR AKIYAMA F, 1971, P INT FED INF PROC S, V1, P353
   ANDERSEN PK, 1982, ANN STAT, V10, P1100, DOI 10.1214/aos/1176345976
   Andersen PK., 1993, STAT MODELS BASED CO
   Andersson C, 2007, IEEE T SOFTWARE ENG, V33, P273, DOI 10.1109/TSE.2007.1005
   [Anonymous], ROI SOFTWARE QUALITY
   [Anonymous], P 3 INT WORKSH PRED
   Atkins DL, 2002, IEEE T SOFTWARE ENG, V28, P625, DOI 10.1109/TSE.2002.1019478
   BASILI VR, 1984, COMMUN ACM, V27, P42, DOI 10.1145/69605.2085
   BRIAND LC, 1993, IEEE T SOFTWARE ENG, V19, P1028, DOI 10.1109/32.256851
   Card DavidN., 1990, MEASURING SOFTWARE D
   Chayes Felix., 1971, Ratio correlation; a manual for students of petrology and geochemistry
   COMPTON BT, 1990, J SYST SOFTWARE, V12, P199, DOI 10.1016/0164-1212(90)90040-S
   COX DR, 1972, J R STAT SOC B, V34, P187
   El Emam K, 2002, IEEE T SOFTWARE ENG, V28, P494, DOI 10.1109/TSE.2002.1000452
   El Emam K, 2001, J SYST SOFTWARE, V56, P63, DOI 10.1016/S0164-1212(00)00086-8
   Emam KE, 2001, IEEE T SOFTWARE ENG, V27, P630, DOI 10.1109/32.935855
   Fenton NE, 2000, IEEE T SOFTWARE ENG, V26, P797, DOI 10.1109/32.879815
   Fenton NE, 1999, IEEE T SOFTWARE ENG, V25, P675, DOI 10.1109/32.815326
   FUNAMI Y, 1976, P MRI 24 INT S COMP, P133
   GAFFNEY JE, 1984, IEEE T SOFTWARE ENG, V10, P459, DOI 10.1109/TSE.1984.5010260
   Gyimóthy T, 2005, IEEE T SOFTWARE ENG, V31, P897, DOI 10.1109/TSE.2005.112
   Halstead M. H., 1977, ELEMENTS SOFTWARE SC
   HAMER PG, 1982, P 6 INT C SOFTW ENG, P197
   Harrell F.E., 2001, Regression modeling strategies: with applications to linear models, logistic regression, and survival analysis
   Hatton L, 1998, IEEE SOFTWARE, V15, P46, DOI 10.1109/52.676735
   Hatton L, 1997, IEEE SOFTWARE, V14, P89, DOI 10.1109/52.582978
   Hosmer D., 1999, APPL SURVIVAL ANAL R
   Khoshgoftaar TM, 1997, IEEE T NEURAL NETWOR, V8, P902, DOI 10.1109/72.595888
   Khoshgoftaar TM, 1996, IEEE T RELIAB, V45, P456, DOI 10.1109/24.537016
   Koru AG, 2005, IEEE T SOFTWARE ENG, V31, P625, DOI 10.1109/TSE.2005.89
   Koru AG, 2004, IEEE SOFTWARE, V21, P54, DOI 10.1109/MS.2004.12
   Koru AG, 2003, J SYST SOFTWARE, V67, P153, DOI 10.1016/S0164-1212(02)00126-7
   Laprie J.C., 1996, M R LYU EDITOR, P27
   LIPOW M, 1982, IEEE T SOFTWARE ENG, V8, P437, DOI 10.1109/TSE.1982.235579
   McCabe T. J., 1976, IEEE Transactions on Software Engineering, VSE-2, P308, DOI 10.1109/TSE.1976.233837
   Mockus A, 2002, ACM T SOFTW ENG METH, V11, P309, DOI 10.1145/567793.567795
   Mockus A., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, P263, DOI 10.1109/ICSE.2000.870417
   Moller K.H., 1993, Proc., P82
   MUNSON JC, 1992, IEEE T SOFTWARE ENG, V18, P423, DOI 10.1109/32.135775
   OTTENSTEIN LM, 1979, IEEE T SOFTWARE ENG, V5, P504, DOI 10.1109/TSE.1979.234211
   PORTER AA, 1990, IEEE SOFTWARE, V7, P46, DOI 10.1109/52.50773
   Raymond E., 1999, CATHEDRAL BAZAAR MUS
   Rosenberg J, 1997, FOURTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM, PROCEEDINGS, P137, DOI 10.1109/METRIC.1997.637174
   Schemper M, 1996, STAT MED, V15, P1999, DOI 10.1002/(SICI)1097-0258(19961015)15:19<1999::AID-SIM353>3.0.CO;2-D
   SCHNEIDEWIND NF, 1979, IEEE T SOFTWARE ENG, V5, P276, DOI 10.1109/TSE.1979.234188
   *SCI TOOLW, 2003, UND C US GUID REF MA, V1
   SELBY RW, 1991, IEEE T SOFTWARE ENG, V17, P141, DOI 10.1109/32.67595
   SHEN VY, 1985, IEEE T SOFTWARE ENG, V11, P317, DOI 10.1109/TSE.1985.232222
   THAYER R, 1978, SOFTWARE RELIABILITY
   THERNEAU TM, 1990, BIOMETRIKA, V77, P147, DOI 10.2307/2336057
   Therneau TM, 2000, STAT BIOL HEALTH
   Tian J., 2005, Software Quality Engineering: Testing, Quality Assurance, and Quantifiable Improvement
   Tian J., 2001, SOFTWARE QUALITY PRO, V3, P6
   Troster J., 1995, Annals of Software Engineering, V1, P95, DOI 10.1007/BF02249047
   2007, CONCURRENT VERSIONS
NR 55
TC 100
Z9 115
U1 0
U2 7
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAR-APR
PY 2009
VL 35
IS 2
BP 293
EP 304
DI 10.1109/TSE.2008.90
PG 12
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 424FT
UT WOS:000264551600011
DA 2024-07-18
ER

PT J
AU Gallagher, K
   Hatch, A
   Munro, M
AF Gallagher, Keith
   Hatch, Andrew
   Munro, Malcolm
TI Software architecture visualization: An evaluation framework and its
   application
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE software architecture; visualization; visualization methodologies;
   visualization assessment
ID MODEL
AB In order to characterize and improve software architecture visualization practice, the paper derives and constructs a qualitative framework, with seven key areas and 31 features, for the assessment of software architecture visualization tools. The framework is derived by the application of the Goal Question Metric paradigm to information obtained from a literature survey and addresses a number of stakeholder issues. The evaluation is performed from multiple stakeholder perspectives and in various architectural contexts. Stakeholders can apply the framework to determine if a particular software architecture visualization tool is appropriate to a given task. The framework is applied in the evaluation of a collection of six software architecture visualization tools. The framework may also be used as a design template for a comprehensive software architecture visualization tool.
C1 [Gallagher, Keith; Hatch, Andrew; Munro, Malcolm] Univ Durham, Dept Comp Sci, Visualisat Res Grp, Durham DH1 3LE, England.
C3 Durham University
RP Gallagher, K (corresponding author), Univ Durham, Dept Comp Sci, Visualisat Res Grp, S Road, Durham DH1 3LE, England.
EM k.b.gallagher@durham.ac.uk; andrew.hatch@durham.ac.uk;
   malcolm.munro@durham.ac.uk
OI Gallagher, Keith/0000-0002-1469-9866
CR Basili V. R., 1994, Encyclopedia of Software Engineering, V1, P528
   Bassil S., 2001, P WORKSH SOFTW VIS, P33
   Card S.K., 1999, READING INFORM VISUA
   Carmichael I, 1995, INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE, 1995 PROCEEDINGS, P134, DOI 10.1109/ICSM.1995.526535
   Eden A., 2001, P C MULT DES ENG
   Eden A., 2001, P IEEE 23 INT C SOFT, P5
   EDEN A, 2002, P 6 WORLD C INT DES
   Eisenstadt M., 1990, BYTE SMALL SYSTEMS J, P268
   Feijs L, 1998, COMMUN ACM, V41, P72, DOI 10.1145/290133.290151
   Gallagher K, 2005, 3RD IEEE INTERNATIONAL WORKSHOP ON VISUALIZING SOFTWARE FOR UNDERSTANDING AND ANALYSIS, PROCEEEDINGS, P76
   Green ThomasRG., 2000, P WORKING C ADV VISU, P21
   Green TRG, 1996, J VISUAL LANG COMPUT, V7, P131, DOI 10.1006/jvlc.1996.0009
   Grünheid R, 2000, WIRELESS PERS COMMUN, V13, P5, DOI 10.1023/A:1008834910241
   HATCH A, 2004, THESIS U DURHAM
   IEEE, 2000, IEEE REC PRACT ARCH
   Knight C., 1999, P INT C SOFTW MAINT, P436
   KRUCHTEN PB, 1995, IEEE SOFTWARE, V12, P42, DOI 10.1109/52.469759
   Maletic JI, 2002, VISSOFT 2002: FIRST INTERNATIONAL WORKSHOP ON VISUALIZING SOFTWARE FOR UNDERSTANDING AND ANALYSIS, PROCEEDINGS, P32, DOI 10.1109/VISSOF.2002.1019792
   Margaret-Anne D.Storey., 2005, SOFTVIS, P193, DOI DOI 10.1145/1056018.1056045
   Medvidovic N, 2000, IEEE T SOFTWARE ENG, V26, P70, DOI 10.1109/32.825767
   Price B. A., 1993, Journal of Visual Languages and Computing, V4, P211, DOI 10.1006/jvlc.1993.1015
   ROMAN GC, 1993, COMPUTER, V26, P11, DOI 10.1109/2.247643
   Shaw M., 1996, SOFTWARE ARCHITECTUR
   Shneiderman B., 2010, DESIGNING USER INTER
   SIM SE, 1999, P INT C SOFTW MAINT, P381, DOI DOI 10.1109/ICSM.1999.792636
   Sparx Systems, 2008, ENT ARCH
   Stasko J. T., 1992, Proceedings. 1992 IEEE Workshop on Visual Languages (Cat. No.92TH0471-3), P3, DOI 10.1109/WVL.1992.275790
   Storey MAD, 1999, J SYST SOFTWARE, V44, P171, DOI 10.1016/S0164-1212(98)10055-9
NR 28
TC 20
Z9 26
U1 1
U2 9
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAR-APR
PY 2008
VL 34
IS 2
BP 260
EP 270
DI 10.1109/TSE.2007.70757
PG 11
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 276SC
UT WOS:000254161500007
OA Green Accepted, Green Published
DA 2024-07-18
ER

PT J
AU Kim, S
   Whitehead, EJ
   Zhang, Y
AF Kim, Sunghun
   Whitehead, E. James, Jr.
   Zhang, Yi
TI Classifying software changes: Clean or buggy?
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE maintenance; software metrics; software fault diagnosis; configuration
   management; classification; association rules; data mining; machine
   learning
ID SYSTEM; FAULTS
AB This paper introduces a new technique for predicting latent software bugs, called change classification. Change classification uses a machine learning classifier to determine whether a new software change is more similar to prior buggy changes or clean changes. In this manner, change classification predicts the existence of bugs in software changes. The classifier is trained using features ( in the machine learning sense) extracted from the revision history of a software project stored in its software configuration management repository. The trained classifier can classify changes as buggy or clean, with a 78 percent accuracy and a 60 percent buggy change recall on average. Change classification has several desirable qualities: 1) The prediction granularity is small ( a change to a single file), 2) predictions do not require semantic information about the source code, 3) the technique works for a broad array of project types and programming languages, and 4) predictions can be made immediately upon the completion of a change. Contributions of this paper include a description of the change classification approach, techniques for extracting features from the source code and change histories, a characterization of the performance of change classification across 12 open source projects, and an evaluation of the predictive power of different groups of features.
C1 [Kim, Sunghun] MIT, Cambridge, MA 02139 USA.
   [Whitehead, E. James, Jr.; Zhang, Yi] Univ Calif Santa Cruz, Santa Cruz, CA 95064 USA.
C3 Massachusetts Institute of Technology (MIT); University of California
   System; University of California Santa Cruz
RP Kim, S (corresponding author), MIT, 77 Massachusetts Ave, Cambridge, MA 02139 USA.
EM hunkim@csail.mit.edu; ejw@cs.ucsc.edu; yiz@soe.ucsc.edu
OI Zhang, Yi/0000-0003-4299-1511
CR Alpaydin E, 2004, INTRO MACHINE LEARNI
   [Anonymous], ACM T ASIAN LANGUAGE, DOI DOI 10.1145/1039621.1039625
   [Anonymous], 2002, P 2002 ACM SIGSOFT I
   Antoniol G, 2000, SEVENTH WORKING CONFERENCE ON REVERSE ENGINEERING - PROCEEDINGS, P240, DOI 10.1109/WCRE.2000.891475
   Anvik John, 2006, P 28 INT C SOFTWARE, P361, DOI DOI 10.1145/1134285.1134336
   Bevan J., 2005, P 10 EUR SOFTW ENG C, P177, DOI DOI 10.1145/1081706.1081736
   Brun Y, 2004, PROC INT CONF SOFTW, P480, DOI 10.1109/ICSE.2004.1317470
   Cubranic D, 2003, PROC INT CONF SOFTW, P408, DOI 10.1109/ICSE.2003.1201219
   Di Lucca GA, 2002, PROC IEEE INT CONF S, P93, DOI 10.1109/ICSM.2002.1167756
   EESSAN AE, 2005, P 21 INT C SOFTW MAI, P263
   FISCHER M, 2003, P 19 INT C SOFTW MAI, P19
   FLANAGAN C, 2002, P ACM SIGPLAN 2002 C, P234
   Freund Y., 1999, Journal of Japanese Society for Artificial Intelligence, V14, P771
   Graves TL, 2000, IEEE T SOFTWARE ENG, V26, P653, DOI 10.1109/32.859533
   Gyimóthy T, 2005, IEEE T SOFTWARE ENG, V31, P897, DOI 10.1109/TSE.2005.112
   Joachims Thorsten, 1998, EUROPEAN C MACHINE L, P137, DOI 10.1007/
   Khosgoftaar TM, 1998, NINTH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P344, DOI 10.1109/ISSRE.1998.730899
   Khoshgoftaar TM, 2003, SOFTWARE QUAL J, V11, P19, DOI 10.1023/A:1023632027907
   Kim MH, 2006, J INTEL MAT SYST STR, V17, P35, DOI 10.1177/1045389X06056064
   Kim S, 2007, PROC INT CONF SOFTW, P489
   Krovetz R., 2003, P 26 ANN INT ACM SIG, P425
   Kuhn A, 2005, WCRE: 12TH WORKING CONFERENCE ON REVERSE ENGINEERING 2005, PROCEEDINGS, P133
   KUMAR R, 1998, P A REL MAI, P155
   Landauer TK, 1998, DISCOURSE PROCESS, V25, P259, DOI 10.1080/01638539809545028
   Lewis DD, 2004, J MACH LEARN RES, V5, P361
   Li Zhenmin, 2005, P ACM SIGSOFT SOFTW, P306, DOI DOI 10.1145/1081706.1081755
   Livshits B., 2005, Proceedings of the Workshop on the Evaluation of Software Defect Detection Tools, P296
   Lyle J., 1987, Proceedings of the ICCEA, ICCEA'87, P877
   MADHAVAN J, 2007, P ECL TECHN EXCH WOR
   MALETIC JI, 1999, P 14 IEEE INT C AUT, P251
   Marchal D, 2003, J STRUCT GEOL, V25, P135, DOI 10.1016/S0191-8141(02)00011-1
   Menzies T, 2007, IEEE T SOFTWARE ENG, V33, P2, DOI 10.1109/TSE.2007.256941
   Mizuno O., 2007, Proceedings of the 11th Joint Meeting of the European Software Engineering Conference and the 14th ACM SIGSOFT Symposium on Foundations of Software Engineering, P405
   Mockus A, 2000, PROC IEEE INT CONF S, P120, DOI 10.1109/ICSM.2000.883028
   Mockus A, 2000, BELL LABS TECH J, V5, P169, DOI 10.1002/bltj.2229
   Montgomery D.C., 2001, Engineering Statistics, V2nd
   MOORE AW, 2005, CROSS VALIDATION
   Nagappan N, 2005, PROC INT CONF SOFTW, P284, DOI 10.1145/1062455.1062514
   Newman D.J., 1988, UCI REPOSITORY MACHI
   Ostrand TJ, 2005, IEEE T SOFTWARE ENG, V31, P340, DOI 10.1109/TSE.2005.49
   Ostrand TJ., 2004, Proceedings of the 2004 ACM SIGSOFT International Symposium on Software Testing and Analysis, ISSTA '04, V29, P86, DOI [DOI 10.1145/1013886.1007524, 10.1145/1013886.1007524]
   Pan K., 2006, P 6 IEEE INT WORKSH
   PENTA MD, 2002, P 10 IEEE INT WORKSH, P207
   RASKUTTI B, 2001, P 12 EUR C MACH LEAR, P419
   *SCH TOOLWORKS, 2005, MAIN UND METR DOC TO
   Scott S, 1999, MACHINE LEARNING, PROCEEDINGS, P379
   Sebastiani F, 2002, ACM COMPUT SURV, V34, P1, DOI 10.1145/505282.505283
   Sliwerski J, 2005, P INT WORKSH MIN SOF, P24
   SPOHRER JC, 1985, P CHI 85, P47
   Vapnik V., 1999, NATURE STAT LEARNING
   Williams CC, 2005, IEEE T SOFTWARE ENG, V31, P466, DOI 10.1109/TSE.2005.63
   Witten I. H., 2005, DATA MINING PRACTICA
   Zheng Z., 2004, ACM Sigkdd Explorations Newsletter, V6, P80, DOI DOI 10.1145/1007730.1007741
   Zimmermann T, 2005, IEEE T SOFTWARE ENG, V31, P429, DOI 10.1109/TSE.2005.72
   Zimmermann T., 2004, Proc. of the 1st Int'lWorkshop onMining Software Repositories (MSR), P2, DOI [DOI 10.1049/IC:20040466, 10.1049/ic:20040466]
NR 55
TC 400
Z9 470
U1 1
U2 30
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAR-APR
PY 2008
VL 34
IS 2
BP 181
EP 196
DI 10.1109/TSE.2007.70773
PG 16
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 276SC
UT WOS:000254161500002
DA 2024-07-18
ER

PT J
AU Andersson, C
   Runeson, P
AF Andersson, Carina
   Runeson, Per
TI A replicated quantitative analysis of fault distributions in complex
   software systems
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE empirical research; replication; software fault distributions
ID SIZE; DENSITY
AB To contribute to the body of empirical research on fault distributions during development of complex software systems, a replication of a study of Fenton and Ohlsson is conducted. The hypotheses from the original study are investigated using data taken from an environment that differs in terms of system size, project duration, and programming language. We have investigated four sets of hypotheses on data from three successive telecommunications projects: 1) the Pareto principle, that is, a small number of modules contain a majority of the faults ( in the replication, the Pareto principle is confirmed), 2) fault persistence between test phases ( a high fault incidence in function testing is shown to imply the same in system testing, as well as prerelease versus postrelease fault incidence), 3) the relation between number of faults and lines of code ( the size relation from the original study could be neither confirmed nor disproved in the replication), and 4) fault density similarities across test phases and projects ( in the replication study, fault densities are confirmed to be similar across projects). Through this replication study, we have contributed to what is known on fault distributions, which seem to be stable across environments.
C1 Lund Univ, Dept Comp Sci, SE-22100 Lund, Sweden.
C3 Lund University
RP Andersson, C (corresponding author), Lund Univ, Dept Comp Sci, Box 118, SE-22100 Lund, Sweden.
EM carina.andersson@telecom.lth.se; per.runeson@telecom.lth.se
RI Runeson, Per/H-5113-2019
OI Runeson, Per/0000-0003-2795-4851
CR ADAMS EN, 1984, IBM J RES DEV, V28, P2, DOI 10.1147/rd.281.0002
   Andersson C., 2007, Software Process Improvement and Practice, V12, P125, DOI 10.1002/spip.311
   [Anonymous], 1990, IEEE Std 610.12-1990, V42, P112, DOI [10.1109/IEEESTD.1990.101064, DOI 10.1109/IEEESTD.1990.101064]
   BASILI VR, 1984, COMMUN ACM, V27, P42, DOI 10.1145/69605.2085
   Bosch J., 2000, Design and Use of Software Architectures: Adopting and Evolving a Product-Line Approach
   COMPTON BT, 1990, J SYST SOFTWARE, V12, P199, DOI 10.1016/0164-1212(90)90040-S
   Denaro G, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P241, DOI 10.1109/ICSE.2002.1007972
   El Emam K, 2002, IEEE T SOFTWARE ENG, V28, P494, DOI 10.1109/TSE.2002.1000452
   Fenton N., 1996, SOFTWARE METRICS RIG, VSecond
   Fenton NE, 2000, IEEE T SOFTWARE ENG, V26, P797, DOI 10.1109/32.879815
   Graves TL, 2000, IEEE T SOFTWARE ENG, V26, P653, DOI 10.1109/32.859533
   Hatton L, 1997, IEEE SOFTWARE, V14, P89, DOI 10.1109/52.582978
   Juran J.M., 1988, QUALITY CONTROL HDB, V4th, p26.1
   Kaaniche M, 1996, SEVENTH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P207, DOI 10.1109/ISSRE.1996.558807
   LINDSAY RM, 1993, AM STAT, V47, P217, DOI 10.2307/2684982
   Malaiya YK, 2000, 11TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P62, DOI 10.1109/ISSRE.2000.885861
   Miller J, 2005, INFORM SOFTWARE TECH, V47, P233, DOI 10.1016/j.infsof.2004.08.005
   Moller K.H., 1993, Proc., P82
   MUNSON JC, 1992, IEEE T SOFTWARE ENG, V18, P423, DOI 10.1109/32.135775
   Ohlsson N, 1996, IEEE T SOFTWARE ENG, V22, P886, DOI 10.1109/32.553637
   Ostrand T. J., 2002, Software Engineering Notes, V27, P55, DOI 10.1145/566171.566181
   Ostrand TJ, 2005, IEEE T SOFTWARE ENG, V31, P340, DOI 10.1109/TSE.2005.49
   Pfleeger SL, 2005, IEEE SOFTWARE, V22, P66, DOI 10.1109/MS.2005.19
   Pfleeger SL, 1997, COMPUTER, V30, P33, DOI 10.1109/2.566148
   Pickard LM, 1998, INFORM SOFTWARE TECH, V40, P811, DOI 10.1016/S0950-5849(98)00101-3
   Reh F.J., 2005, Business Credit, V107, P76
   Robson C., 2002, Real world research
   Roper M, 1997, INFORM SOFTWARE TECH, V39, P763, DOI 10.1016/S0950-5849(97)00028-1
   Rosenberg J, 1997, FOURTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM, PROCEEDINGS, P137, DOI 10.1109/METRIC.1997.637174
   Runeson P, 2006, IEEE SOFTWARE, V23, P82, DOI 10.1109/MS.2006.89
   WITHROW C, 1990, IEEE SOFTWARE, V7, P26, DOI 10.1109/52.43046
   Yin R.K., 2003, CASE STUDY RES DESIG
   YU TJ, 1988, IEEE T SOFTWARE ENG, V14, P1261, DOI 10.1109/32.6170
   Zendler A., 2001, Empirical Software Engineering, V6, P161, DOI 10.1023/A:1011489321999
NR 34
TC 84
Z9 101
U1 0
U2 10
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAY
PY 2007
VL 33
IS 5
BP 273
EP 286
DI 10.1109/TSE.2007.1005
PG 14
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 151PR
UT WOS:000245303400001
DA 2024-07-18
ER

PT J
AU Attiogbé, C
   Poizat, P
   Salaün, G
AF Attiogbe, Christian
   Poizat, Pascal
   Salauen, Gwen
TI A formal and tool-equipped approach for the integration of state
   diagrams and formal datatypes
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE formal methods; languages; integrated environments; state diagrams;
   specification techniques; operational semantics; tools
AB Separation of concerns or aspects is a way to deal with the increasing complexity of systems. The separate design of models for different aspects also promotes a better reusability level. However, an important issue is then to define means to integrate them into a global model. We present a formal and tool-equipped approach for the integration of dynamic models (behaviors expressed using state diagrams) and static models (formal data types) with the benefit to share advantages of both: graphical user-friendly models for behaviors, formal and abstract models for data types. Integration is achieved in a generic way so that it can deal with both different static specification languages (algebraic specifications, Z, B) and different dynamic specification semantics.
C1 Univ Nantes, CNRS, LINA FRE 2729, LINA UFR Sci Nantes, F-44322 Nantes 03, France.
   Univ Evry Val Essonne, CNRS, IBISC, FRE 2873, F-91000 Evry, France.
   INRIA, ARLES Project, Rocquencourt, France.
   INRIA Rhone Alpes, VASY Project, F-38330 Montbonnot St Martin, France.
C3 Centre National de la Recherche Scientifique (CNRS); Nantes Universite;
   Centre National de la Recherche Scientifique (CNRS); Universite Paris
   Saclay; Inria
RP Attiogbé, C (corresponding author), Univ Nantes, CNRS, LINA FRE 2729, LINA UFR Sci Nantes, 2 Rue Houssiniere, F-44322 Nantes 03, France.
EM Christian.Attiogbe@univ-nantes.fr; Pascal.Poizat@inria.fr;
   Gwen.Salaun@inria.fr
RI Attiogbé, Christian/B-2101-2012
OI Attiogbé, Christian/0000-0002-7815-1752; Poizat,
   Pascal/0000-0001-7979-9510
CR Abrial J-R., 1996, The B Book
   ASTESIANO E, 2000, P 8 INT C ALG METH S, P273
   Astesiano Egidio., 1999, ALGEBRAIC FDN SYSTEM
   ATTIOGBE C, 2003, P 6 INT C FUND APPR, P341
   ATTIOGBE C, 2003, P 8 INT WORKSH FORM
   AUVERLOT A, 2003, XCLAP ANIMATION STAT
   BACK RJ, 2003, P UN MOD LANG MOD LA, P96
   BOROVANSKY P, 1998, P INT WORKSH REWR LO
   Broy Manfred., 2001, Handbook of Process Algebra, P101
   Bussow R., 1996, Formal Methods for Industrial Applications. Specifying and Programming the Steam Boiler Control, P109, DOI 10.1007/BFb0027233
   CENGARLE MV, 2001, P 4 INT C UN MOD LAN, P118
   Choppy C, 2001, J UNIVERS COMPUT SCI, V7, P19
   CLARK T, 2002, LECT NOTES COMPUTER, V2263
   CLEVELAND R, 2000, CONCURRENCY WORKBENC
   DAVID A, 2002, P INT C FUND APPR SO, P218
   DERHOWITZ N, 1982, THEORETICAL COMPUTER, V17, P279
   Dupuy S, 2000, LECT NOTES COMPUT SC, V1789, P417
   Garavel H., 2002, EASST NEWSLETTER, V4, P13
   Garland SJ, 1991, GUIDE LP LARCH PROVE
   Guttag J.V., 1993, Texts and Monographs in Computer Science
   Harel D., 1996, ACM Transactions on Software Engineering and Methodology, V5, P293, DOI 10.1145/235321.235322
   HAREL D, 1987, SCI COMPUT PROGRAM, V8, P231, DOI 10.1016/0167-6423(87)90035-9
   JIA X, 1998, ZTC TYPE CHECKER Z N
   JIA X, 1998, TUTORIAL ZANS
   JURJENS J., 2002, SAC, P1009
   KIRCHNER H, 2000, T9 COFI
   LALEAU R, 2002, P 2 INT Z B C ZB 02, P517
   LANO K, 2000, P 3 IEEE INT C FORM, P25
   LATELLA D, 1999, P FMOODS 99 IFIP TC6, P331
   Ledang H., 2002, Integrated Formal Methods. Third International Conference, IFM 2002. Proceedings (Lecture Notes in Computer Science Vol.2335), P109
   LILIUS J, 1999, P INT C UN MOD LANG, P430
   MOSSES PD, 2004, LECT NOTES COMPUTER, V2900
   NEDELEC G, 1999, CLAP CLASS LIB AUTOM
   *OMG, 2005, FORMAL050704 OMG
   POIZAT P, 2006, P INT C FORM METH OP, P33
   REGGIO G, 2000, P 8 INT C ALG METH S, P243
   SALAUN G, 2005, P INT WORKSH SEM FDN, P49
   SEKERINSKI E, 2002, P 3 INT C INT FORM M, P128
   Spivey J.M., 1992, PRENTICE HALL INT SE
   VANDERBEECK M, 2001, P 4 INT C UN MOD LAN, P406
NR 40
TC 3
Z9 3
U1 0
U2 2
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAR
PY 2007
VL 33
IS 3
BP 157
EP 170
DI 10.1109/TSE.2007.21
PG 14
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 130GN
UT WOS:000243788000002
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Hannay, JE
   Sjoberg, DIK
   Dybå, T
AF Hannay, Jo E.
   Sjoberg, Dag I. K.
   Dyba, Tore
TI A systematic review of theory use in software engineering experiments
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Review
DE theory; experiments; research methodology; empirical software
   engineering
ID COGNITIVE FIT; PROGRAM; INFORMATION; REPRESENTATIONS; COMPREHENSION;
   PERFORMANCE; DOCUMENTATION; JUDGMENT; QUALITY; REALISM
AB Empirically based theories are generally perceived as foundational to science. However, in many disciplines, the nature, role and even the necessity of theories remain matters for debate, particularly in young or practical disciplines such as software engineering. This article reports a systematic review of the explicit use of theory in a comprehensive set of 103 articles reporting experiments, from of a total of 5,453 articles published in major software engineering journals and conferences in the decade 1993-2002. Of the 103 articles, 24 use a total of 40 theories in various ways to explain the cause-effect relationship(s) under investigation. The majority of these use theory in the experimental design to justify research questions and hypotheses, some use theory to provide post hoc explanations of their results, and a few test or modify theory. A third of the theories are proposed by authors of the reviewed articles. The interdisciplinary nature of the theories used is greater than that of research in software engineering in general. We found that theory use and awareness of theoretical issues are present, but that theory-driven research is, as yet, not a major issue in empirical software engineering. Several articles comment explicitly on the lack of relevant theory. We call for an increased awareness of the potential benefits of involving theory, when feasible. To support software engineering researchers who wish to use theory, we show which of the reviewed articles on which topics use which theories for what purposes, as well as details of the theories' characteristics.
C1 Simula Res Lab, Dept Software Engn, NO-1325 Lysaker, Norway.
   Simula Res Lab, NO-7465 Trondheim, Norway.
   SINTEF ICT, Dept Software Engn Safety & Secur, NO-7465 Trondheim, Norway.
C3 SINTEF
RP Hannay, JE (corresponding author), Simula Res Lab, Dept Software Engn, Pb 134, NO-1325 Lysaker, Norway.
EM johannay@simula.no; dagsj@simula.no; tore.dyba@sintef.no
CR ABDELHAMID TK, 1993, IEEE T SOFTWARE ENG, V19, P603, DOI 10.1109/32.232025
   Agarwal R, 1999, IEEE T SOFTWARE ENG, V25, P541, DOI 10.1109/32.799953
   Agarwal R., 1996, Journal of Management Information Systems, V13, P137
   [Anonymous], 1993, Experimental Economics
   [Anonymous], FRAUNHOFER IESE SERI
   [Anonymous], HOW SOLVE PROBLEMS
   Anthony R.N., 1980, MANAGEMENT CONTROL S, V4th
   Arisholm E., 2001, Empirical Software Engineering, V6, P231, DOI 10.1023/A:1011439416657
   Armstrong JS, 2001, INT SER OPER RES MAN, V30, P417
   Arrow K. J., 1970, Essays in the Theory of Risk-Bearing
   ATKINSON R, 1968, ADV PSYCHOL THEORY L, V2
   Atkinson R. C., 1974, THEORIES COGNITIVE P
   ATWOOD ME, 1978, TR78A21 US ARM RES I
   AWANI AO, 1986, DATA PROCESSING PROJ
   BACHARACH SB, 1989, ACAD MANAGE REV, V14, P496, DOI 10.2307/258555
   Barki H., 1993, Journal of Management Information Systems, V10, P203
   BASILI VR, 1996, EMPIR SOFTW ENG, V1, P105, DOI DOI 10.1007/BF00368700
   Belbin R.M., 1993, Team Roles at Work
   Belbin R.M., 1981, MANAGEMENT TEAMS
   Benander AC, 2000, J SYST SOFTWARE, V54, P17, DOI 10.1016/S0164-1212(00)00023-6
   BIANCHI A, 2001, P 7 INT SOFTW METR S, P42, DOI DOI 10.1109/METRIC.2001.915514
   Biddle B. J., 2013, Role theory: Expectations, identities, and behaviors
   Boehm B., 1995, Annals of Software Engineering, V1, P57, DOI 10.1007/BF02249046
   Borsboom D, 2003, PSYCHOL REV, V110, P203, DOI 10.1037/0033-295X.110.2.203
   Boswell T, 1999, SOCIOL METHOD RES, V28, P154, DOI 10.1177/0049124199028002002
   BOURNE LE, 1986, COGNITIVE PROCESSES
   Brooks A., 2000, Empirical Software Engineering, V5, P269, DOI 10.1023/A:1026594716872
   BROOKS R, 1983, INT J MAN MACH STUD, V18, P543, DOI 10.1016/S0020-7373(83)80031-5
   BROOKS R, 1998, P 3 INT C SOFTW ENG, P196
   BUNGE M, 1993, THEOR DECIS, V35, P207, DOI 10.1007/BF01075199
   Bunge M., 1967, Scientific Research, V1
   Burkhardt J.-M., 2002, Empirical Software Engineering, V7, P115, DOI 10.1023/A:1015297914742
   Cacioppo JT, 2004, AM PSYCHOL, V59, P214, DOI 10.1037/0003-066X.59.4.214
   Chase W.G., 1973, VISUAL INFORM PROCES, DOI DOI 10.1016/B978-0-12-170150-5.50011-1
   Chomsky Noam, 1965, ASPECTS THEORY SYNTA, V11
   Cohen B.P., 1980, DEV SOCIOLOGICAL KNO
   COLLINS AM, 1975, PSYCHOL REV, V82, P407, DOI 10.1037/0033-295X.82.6.407
   Cronbach L.J., 1982, DESIGNING EVALUATION
   Cronbach L.J., 1980, REFORM PROGRAM EVALU
   DAFT RL, 1986, MANAGE SCI, V32, P554, DOI 10.1287/mnsc.32.5.554
   Daly J., 1996, Empirical Software Engineering, V1, P109, DOI 10.1007/BF00368701
   DAMICO G, 2000, PORTAL HYPERTENSION, V3, P36
   DAVIS FD, 1989, MANAGE SCI, V35, P982, DOI 10.1287/mnsc.35.8.982
   Davis M.S., 1971, PHILOS SOC SCI, V1, P309, DOI [DOI 10.1177/004839317100100211, 10.1177/004839317100100211]
   DAY D, 1997, P 8 AUSTR C INF SYST, P509
   DIMAGGIO PJ, 1995, ADMIN SCI QUART, V40, P391, DOI 10.2307/2393790
   Dubin R., 1978, Theory development
   Dubin R., 1969, THEORY BUILDING
   Duncker K, 1945, PSYCHOL MONOGR, V58, P1
   DVORAK J, 1994, COMPUTER, V27, P59, DOI 10.1109/2.294856
   Edwards W., 1968, FORMAL REPRESENT HUM
   FEIGENBAUM E, 1970, MODELS MEMORY
   Feynman R., 1998, The meaning of it all: Thoughts of a citizen scientist
   FEYNMAN RP, 1985, QUED STRANGE THEORY
   Fonagy P., 2003, PSYCHOANALYTIC THEOR
   FRAKES WB, 1994, IEEE T SOFTWARE ENG, V20, P617, DOI 10.1109/32.310671
   Franck R., 2002, The explanatory power of models
   Freimut B., 2001, P 7 INT SOFTW METR S, P51
   Gergen K., 1986, Metatheory in social science, P136
   Gigerenzer G., 2004, J SOCIO-ECON, V33, P587, DOI [10.1016/j.socec.2004.09.033, DOI 10.1016/J.SOCEC.2004.09.033]
   Glass RL, 2002, INFORM SOFTWARE TECH, V44, P491, DOI 10.1016/S0950-5849(02)00049-6
   Glass RL, 2004, COMMUN ACM, V47, P89, DOI 10.1145/990680.990686
   Greeno J.G., 1973, Contemporary issues in cognitive psychology. The Loyola symposium
   Gregor S, 2006, MIS QUART, V30, P611
   GRUBER TR, 1993, KNOWL ACQUIS, V5, P199, DOI 10.1006/knac.1993.1008
   Harnett D.L., 1980, Bargaining Behavior: An International Study
   Hawking SW, 1996, SCI AM, V275, P60, DOI 10.1038/scientificamerican0796-60
   Henry SM, 1999, J SYST SOFTWARE, V44, P241, DOI 10.1016/S0164-1212(98)10060-2
   HENSHEL RL, 1971, AM SOCIOL, V6, P213
   HERBSLEB JD, 2003, P EUR SOFTW ENG C AC, P112
   Hick WE, 1952, Q J EXP PSYCHOL, V4, P11, DOI 10.1080/17470215208416600
   Hoffrage U, 2000, J EXP PSYCHOL LEARN, V26, P566, DOI 10.1037/0278-7393.26.3.566
   HOGARTH RM, 1981, PSYCHOL BULL, V90, P197, DOI 10.1037/0033-2909.90.2.197
   HOMANS GC, 1973, PHILOS SOCIAL EXPLAN, P50
   HOUDEK F, 2003, LECT NOTES EMPIRICAL, V12, pCH4
   Howard GS, 1999, J SYST SOFTWARE, V45, P177, DOI 10.1016/S0164-1212(98)10077-8
   HUMPHREYS P, 2003, PHILOS SOCIAL SCI
   HYMAN R, 1953, J EXP PSYCHOL, V45, P188, DOI 10.1037/h0056940
   Jeffery DR, 1999, IEEE T SOFTWARE ENG, V25, P435, DOI 10.1109/TSE.1999.799935
   Jennings J.R., 1991, Handbook of Cognitive Psychophysiology: Central and Autonomic Nervous System Approaches
   Jones E.E., 1985, The handbook of social psychology, V3rd, P47
   Jorgensen M, 2004, IEEE T SOFTWARE ENG, V30, P953, DOI 10.1109/TSE.2004.92
   Juristo N., 2003, BASICS SOFTWARE ENG
   Kaplan Abraham., 1964, The conduct of inquiry: Methodology for behavioral science
   Keil M, 2000, J SYST SOFTWARE, V53, P145, DOI 10.1016/S0164-1212(00)00010-8
   Kitchenham B., 2004, PROCEDURES PERFORMIN, V33, P1
   Kitchenham BA, 2002, IEEE T SOFTWARE ENG, V28, P721, DOI 10.1109/TSE.2002.1027796
   KLAYMAN J, 1987, PSYCHOL REV, V94, P211, DOI 10.1037/0033-295X.94.2.211
   Knowles EricS., 1982, Personality, Roles, and Social Behavior
   Kogan Nathan., 1964, RISK TAKING STUDY CO
   Koskinen J, 2002, J SOFTW MAINT EVOL-R, V14, P83, DOI 10.1002/smr.244
   Krovi R, 1998, J SYST SOFTWARE, V43, P165, DOI 10.1016/S0164-1212(98)10030-4
   Laitenberger O, 2001, IEEE T SOFTWARE ENG, V27, P387, DOI 10.1109/32.922713
   Laitenberger O, 2000, J SYST SOFTWARE, V53, P183, DOI 10.1016/S0164-1212(00)00052-2
   Laitenberger O, 1998, FIFTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM - METRICS 1998, PROCEEDINGS, P122, DOI 10.1109/METRIC.1998.731237
   LAITENBERGER O, 2003, LECT NOTES EMPIRICAL, V12, P167
   Land L. P. W., 2000, Empirical Software Engineering, V5, P11, DOI 10.1023/A:1009893716489
   LETOVSKY S, 1986, IEEE SOFTWARE, V3, P41, DOI 10.1109/MS.1986.233414
   LETOVSKY S, 1986, P 1 WORKSH EMP STUD, P58
   Lewin K, 1945, SOCIOMETRY, V8, P126, DOI 10.2307/2785233
   LINDBLOM CE, 1987, KNOWLEDGE, V8, P509, DOI 10.1177/107554708700800305
   Lloyd KB, 1999, J SYST SOFTWARE, V45, P203, DOI 10.1016/S0164-1212(98)10079-1
   LORGE I, 1958, PSYCHOL BULL, V55, P337, DOI 10.1037/h0042344
   Lucas JW, 2003, SOCIOL THEOR, V21, P236, DOI 10.1111/1467-9558.00187
   Lynham SA., 2002, Advances in Developing Human Resources, V4, P221, DOI [DOI 10.1177/1523422302043002, 10.1177/15222302004003002]
   Markovsky Barry., 1994, Group Processes: Sociological Analyses, P3
   Maxion RA, 2000, IEEE T SOFTWARE ENG, V26, P888, DOI 10.1109/32.877848
   McGrath JosephE., 1994, GROUPS INTERACTING T
   McMullin E., 1984, Scientific Realism
   MELLERS BA, 1994, ORGAN BEHAV HUM DEC, V57, P167, DOI 10.1006/obhd.1994.1010
   MILLER GA, 1956, PSYCHOL REV, V63, P81, DOI 10.1037/h0043158
   Miller J., 1998, Empirical Software Engineering, V3, P37, DOI 10.1023/A:1009735805377
   Mohr B., 1982, Explaining Organizational Behaviour: The limits and possibilities of theory and practice
   Nagel E., 1961, The structure of science
   Nagel E., 1979, STRUCTURE SCI
   Newell A., 1972, HUMAN PROBLEM SOLVIN, V104
   Norman D., 1988, PSYCHOL EVERYDAY THI
   Paivio A., 1971, Imagery and verbal processes
   PALMER S, 1994, PSYCHON B REV, V1, P29, DOI 10.3758/BF03200760
   PAPINEAU D, 1996, BLACKWELL COMPANION
   PENNINGTON N, 1987, COGNITIVE PSYCHOL, V19, P295, DOI 10.1016/0010-0285(87)90007-7
   PENNINGTON N, 1987, P 2 WORKSH EMP STUD, P100
   Pfleeger SL, 1999, COMPUTER, V32, P32, DOI 10.1109/2.796106
   Porter A., 1998, ACM Transactions on Software Engineering and Methodology, V7, P41, DOI 10.1145/268411.268421
   Porter AA, 1997, IEEE T SOFTWARE ENG, V23, P329, DOI 10.1109/32.601071
   Prechelt L, 2001, IEEE T SOFTWARE ENG, V27, P1134, DOI 10.1109/32.988711
   Prechelt L, 2002, IEEE T SOFTWARE ENG, V28, P595, DOI 10.1109/TSE.2002.1010061
   Ramanujan S, 2000, J SYST SOFTWARE, V54, P137, DOI 10.1016/S0164-1212(00)00033-9
   REISNER P, 1981, COMPUT SURV, V13, P13, DOI 10.1145/356835.356837
   RORTY R, 2002, CONSEQUENCES PRAGMAT
   Rosch E., 1978, COGNITION CATEGORIZA, P27, DOI DOI 10.1016/B978-1-4832-1446-7.50028-5
   ROSENBERG A, 2001, PHILOS SCI CONT INTR
   Runkel P., 1984, A guide to usage for writers and students in the social sciences
   Ruse M., 1995, OXFORD COMPANION PHI, P870
   Sandborg D, 1998, BRIT J PHILOS SCI, V49, P603, DOI 10.1093/bjps/49.4.603
   Sarbin T.R., 1954, HDB SOCIAL PSYCHOL
   Sauer C, 2000, IEEE T SOFTWARE ENG, V26, P1, DOI 10.1109/32.825763
   Schwab D.P., 1980, RES ORGAN BEHAV, V2, P3, DOI DOI 10.4236/PSYCH.2015.612144
   Shadish W. R., 2002, EXPT QUASI EXPT DESI
   Shannon C. E., 1948, BELL SYST TECH J, V27, P379, DOI DOI 10.1002/J.1538-7305.1948.TB01338.X
   SHNEIDERMAN B, 1977, INT J MAN MACH STUD, V9, P465, DOI 10.1016/S0020-7373(77)80014-X
   SHORT L, 1976, SOCIAL PSYCHOL TELEC
   Simon H.A., 1996, The Sciences of the Artificial, V3rd ed
   SITKIN SB, 1992, ACAD MANAGE REV, V17, P9, DOI 10.2307/258646
   Sjoberg DIK, 2005, IEEE T SOFTWARE ENG, V31, P733, DOI 10.1109/TSE.2005.97
   Smith Edward E., 1981, Categories and concepts
   SMITH EE, 1988, PSYCHOL HUMAN THOUGH
   SOLOWAY E, 1988, COMMUN ACM, V31, P1259, DOI 10.1145/50087.50088
   Steiner I. D., 1972, Group process and productivity
   SUTTON RI, 1995, ADMIN SCI QUART, V40, P371, DOI 10.2307/2393788
   Tichy WF, 1998, COMPUTER, V31, P32, DOI 10.1109/2.675631
   Trochim W.M., 2001, Research Methods Knowledge Base, V2
   Tulving E, 1972, ORG MEMORY, DOI DOI 10.1017/S0140525X00047257
   TVERSKY A, 1974, SCIENCE, V185, P1124, DOI 10.1126/science.185.4157.1124
   Van Dijk T., 1983, STRATEGIES DISCOURSE
   Van Fraassen Bas., 1980, The Scientific Image
   vandenBerg KG, 1996, INFORM SOFTWARE TECH, V38, P477, DOI 10.1016/0950-5849(95)01085-8
   VANDEVEN AH, 1989, ACAD MANAGE REV, V14, P486, DOI 10.5465/AMR.1989.4308370
   VESSEY I, 1989, INT J MAN MACH STUD, V30, P23, DOI 10.1016/S0020-7373(89)80019-7
   VESSEY I, 1991, DECISION SCI, V22, P219, DOI 10.1111/j.1540-5915.1991.tb00344.x
   Vessey I, 1991, INFORM SYST RES, V2, P63, DOI 10.1287/isre.2.1.63
   Vinter R, 1998, FIFTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM - METRICS 1998, PROCEEDINGS, P216, DOI 10.1109/METRIC.1998.731248
   von Mayrhauser A, 1999, IEEE T SOFTWARE ENG, V25, P526, DOI 10.1109/32.799950
   vonMayrhauser A, 1997, J SOFTW MAINT-RES PR, V9, P299, DOI 10.1002/(SICI)1096-908X(199709/10)9:5<299::AID-SMR157>3.0.CO;2-S
   VONMAYRHAUSER A, 1995, SOFTWARE ENG J, V10, P171, DOI 10.1049/sej.1995.0023
   Wagner DavidG., 1994, Group Processes, P25
   Waller WS, 2003, ORGAN BEHAV HUM DEC, V91, P254, DOI 10.1016/S0749-5978(03)00024-4
   WEBER M, 1994, GROUP PROCESSES, P43
   WEBER R., 2003, MIS Quarterly, V27, piii
   WEICK KE, 1989, ACAD MANAGE REV, V14, P516, DOI 10.2307/258556
   WEICK KE, 1995, ADMIN SCI QUART, V40, P385, DOI 10.2307/2393789
   Wertheimer M., 1959, Productive thinking
   Wertheimer M, 1923, PSYCHOL FORSCH, V4, P301, DOI 10.1007/BF00410640
   WHETTEN DA, 1989, ACAD MANAGE REV, V14, P490, DOI 10.2307/258554
   WICKELGREN WA, 1977, PERSONALITY ROLES SO
   WIEDENBECK S, 1985, INT J MAN MACH STUD, V23, P383, DOI 10.1016/S0020-7373(85)80041-9
   Wohlin C., 1999, EXPT SOFTWARE ENG IN
   YEN MYM, 1993, IEEE T SOFTWARE ENG, V19, P390, DOI 10.1109/32.223806
   Yin R.K., 2003, CASE STUDY RES DESIG
   ZHANG Z, 1999, EMPIR SOFTW ENG, V4, P43
   2004, ACM COMPUTING CLASSI
   IEEE KEYWORD TAXONOM
NR 182
TC 103
Z9 113
U1 0
U2 30
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD FEB
PY 2007
VL 33
IS 2
BP 87
EP 107
DI 10.1109/TSE.2007.12
PG 21
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science; Engineering
GA 120MX
UT WOS:000243090100002
DA 2024-07-18
ER

PT J
AU Jorgensen, M
AF Jorgensen, M
TI Evidence-based guidelines for assessment of software development cost
   uncertainty
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE cost estimation; management; software psychology; uncertainty of
   software development cost
ID EXPERT ESTIMATION; JUDGMENT; MANAGEMENT; ACCURACY; IMPACT; RISK;
   COMBINATIONS; 50-PERCENT; CONFIDENCE; INTUITION
AB Several studies suggest that uncertainty assessments of software development costs are strongly biased toward overconfidence, i.e., that software cost estimates typically are believed to be more accurate than they really are. This overconfidence may lead to poor project planning. As a means of improving cost uncertainty assessments, we provide evidence-based guidelines for how to assess software development cost uncertainty, based on results from relevant empirical studies. The general guidelines provided are: 1) Do not rely solely on unaided, intuition-based uncertainty assessment processes, 2) do not replace expert judgment with formal uncertainty assessment models, 3) apply structured and explicit judgment-based processes, 4) apply strategies based on an outside view of the project, 5) combine uncertainty assessments from different sources through group work, not through mechanical combination, 6) use motivational mechanisms with care and only if greater effort is likely to lead to improved assessments, and 7) frame the assessment problem to fit the structure of the relevant uncertainty information and the assessment process. These guidelines are preliminary and should be updated in response to new evidence.
C1 Simula Res Lab, N-1325 Lysaker, Norway.
RP Simula Res Lab, POB 134, N-1325 Lysaker, Norway.
EM magne.jorgensen@simula.no
RI Jorgensen, Magne/H-4402-2016
CR ABDELHAMID TK, 1990, IEEE SOFTWARE, V7, P97, DOI 10.1109/52.43055
   ABDELHAMID TK, 1986, IEEE SOFTWARE, V3, P70, DOI 10.1109/MS.1986.234072
   Alpert M., 1982, Judgment Under Uncertainty: Heuristics and Biases, P294, DOI DOI 10.1017/CBO9780511809477.022
   Angelis L., 2000, Empirical Software Engineering, V5, P35, DOI 10.1023/A:1009897800559
   [Anonymous], P INT C PROJ MAN
   [Anonymous], 1994, SUBJECTIVE PROBABILI
   Arkes HR, 2001, INT SER OPER RES MAN, V30, P495
   Armstrong JS, 2001, INT SER OPER RES MAN, V30, P417
   BLATTBERG RC, 1990, MANAGE SCI, V36, P887, DOI 10.1287/mnsc.36.8.887
   Camerer CF, 1999, J RISK UNCERTAINTY, V19, P7, DOI 10.1023/A:1007850605129
   Chapman C., 2000, International Journal of Project Management, V18, P369, DOI 10.1016/S0263-7863(00)00016-8
   Connolly T, 1997, MANAGE SCI, V43, P1029, DOI 10.1287/mnsc.43.7.1029
   COSIER RA, 1977, ORGAN BEHAV HUM PERF, V19, P378, DOI 10.1016/0030-5073(77)90071-X
   DAGUM P, 1995, INT J FORECASTING, V11, P73, DOI 10.1016/0169-2070(94)02009-E
   DAVIS JH, 1992, RISK TAKING BEHAV, P164
   Duffey M. R., 1999, Journal of Engineering Valuation and Cost Analysis, V2, P285
   Elkjaer M., 2000, International Journal of Project Management, V18, P139, DOI 10.1016/S0263-7863(98)00078-7
   Epley N, 1999, J EXP SOC PSYCHOL, V35, P578, DOI 10.1006/jesp.1999.1390
   GRETHER DM, 1979, AM ECON REV, V69, P623
   HAGAFORS R, 1983, ORGAN BEHAV HUM PERF, V31, P223, DOI 10.1016/0030-5073(83)90122-8
   HIHN J, 1991, 13TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P276, DOI 10.1109/ICSE.1991.130653
   HORA SC, 1992, ORG BEHAV HUMAN DECI, V51, P223
   Host M, 1998, PROC INT CONF SOFTW, P332, DOI 10.1109/ICSE.1998.671386
   Huchzermeier A, 2001, MANAGE SCI, V47, P85, DOI 10.1287/mnsc.47.1.85.10661
   HUMPHREY WS, 1991, IEEE T SOFTWARE ENG, V17, P196, DOI 10.1109/32.67600
   Janis I. L., 1972, VICTIMS GROUPTHINK P
   Jorgensen M, 2004, EMPIR SOFTW ENG, V9, P297, DOI 10.1023/B:EMSE.0000039881.57613.cb
   Jorgensen M, 2004, INFORM SOFTWARE TECH, V46, P3, DOI 10.1016/S0950-5349(03)00093-4
   Jorgensen M, 2004, IEEE T SOFTWARE ENG, V30, P209, DOI 10.1109/TSE.2004.1274041
   Jorgensen M, 2004, J SYST SOFTWARE, V70, P79, DOI 10.1016/S0164-1212(02)00160-7
   Jorgensen M, 2003, INFORM SOFTWARE TECH, V45, P123, DOI 10.1016/S0950-5849(02)00188-X
   Jorgensen M, 2001, INFORM SOFTWARE TECH, V43, P939, DOI 10.1016/S0950-5849(01)00203-8
   Jorgensen M, 2004, J SYST SOFTWARE, V70, P37, DOI 10.1016/S0164-1212(02)00156-5
   Jorgensen M., 2002, P 14 INT C SOFTW ENG, P425
   JORGENSEN M, 2004, P INT C PROD FOC SOF, P17
   KAHNEMAN D, 1993, MANAGE SCI, V39, P17, DOI 10.1287/mnsc.39.1.17
   KAHNEMAN D, 1982, COGNITION, V11, P143, DOI 10.1016/0010-0277(82)90023-3
   Kahneman D, 1982, JUDGMENT UNCERTAINTY, DOI DOI 10.1097/00001888-199907000-00012
   KERNAGHAN JA, 1986, IEEE T ENG MANAGE, V33, P134, DOI 10.1109/TEM.1986.6447661
   Kitchenham B, 2003, IEEE T SOFTWARE ENG, V29, P542, DOI 10.1109/TSE.2003.1205181
   Kitchenham B, 2002, J SYST SOFTWARE, V64, P57, DOI 10.1016/S0164-1212(02)00021-3
   Kogan Nathan., 1964, RISK TAKING STUDY CO
   Lederer AL, 2000, J SYST SOFTWARE, V50, P33, DOI 10.1016/S0164-1212(99)00074-6
   LEPPER MR, 1973, J PERS SOC PSYCHOL, V28, P129, DOI 10.1037/h0035519
   Lerner JS, 1999, PSYCHOL BULL, V125, P255, DOI 10.1037/0033-2909.125.2.255
   LICHTENSTEIN S, 1977, ORGAN BEHAV HUM PERF, V20, P159, DOI 10.1016/0030-5073(77)90001-0
   MacDonell SG, 2003, INFORM SOFTWARE TECH, V45, P389, DOI 10.1016/S0950-5849(03)00011-9
   Maines LA, 1996, INT J FORECASTING, V12, P223, DOI 10.1016/0169-2070(95)00623-0
   Molokken-Ostvold K, 2004, EMPIR SOFTW ENG, V9, P315, DOI 10.1023/B:EMSE.0000039882.39206.5a
   Myrtveit I, 1999, IEEE T SOFTWARE ENG, V25, P510, DOI 10.1109/32.799947
   *NASA, 1990, MAN HDB SOFTW DEV
   Newby-Clark IR, 2000, J EXP PSYCHOL-APPL, V6, P171, DOI 10.1037/1076-898X.6.3.171
   OCCONNELL S, 1998, SOFTWARE PROJECT SUR
   OSKAMP S, 1965, J CONSULT PSYCHOL, V29, P261, DOI 10.1037/h0022125
   OTWAY H, 1992, RISK ANAL, V12, P83, DOI 10.1111/j.1539-6924.1992.tb01310.x
   PELHAM BW, 1995, J PERS SOC PSYCHOL, V68, P581, DOI 10.1037/0022-3514.68.4.581
   Pich MT, 2002, MANAGE SCI, V48, P1008, DOI 10.1287/mnsc.48.8.1008.163
   ROSS J, 1986, ADMIN SCI QUART, V31, P274, DOI 10.2307/2392791
   Rowe G, 2001, INT SER OPER RES MAN, V30, P125, DOI 10.1007/978-0-306-47630-3_7
   SCHWENK CR, 1980, ORGAN BEHAV HUM PERF, V26, P409, DOI 10.1016/0030-5073(80)90076-8
   Sedlmeier P., 1999, IMPROVING STAT REASO
   Sengupta K, 1996, IEEE T SYST MAN CY A, V26, P177, DOI 10.1109/3468.485744
   SIEBER JE, 1974, J PERS SOC PSYCHOL, V30, P688, DOI 10.1037/h0037416
   SiegelJacobs K, 1996, ORGAN BEHAV HUM DEC, V65, P1, DOI 10.1006/obhd.1996.0001
   Sloman SA, 2003, ORGAN BEHAV HUM DEC, V91, P296, DOI 10.1016/S0749-5978(03)00021-9
   TAFF LM, 1991, IEEE T SOFTWARE ENG, V17, P839, DOI 10.1109/32.83918
   Taylor JW, 1999, INT J FORECASTING, V15, P325, DOI 10.1016/S0169-2070(99)00002-3
   Teigen KH, 2005, APPL COGNITIVE PSYCH, V19, P455, DOI 10.1002/acp.1085
   TEIGEN KH, 2005, APPL COGNITIVE PSYCH
   TVERSKY A, 1974, SCIENCE, V185, P1124, DOI 10.1126/science.185.4157.1124
   Whitecotton SM, 1998, ORGAN BEHAV HUM DEC, V76, P325, DOI 10.1006/obhd.1998.2809
   WILSON TD, 1994, PSYCHOL BULL, V116, P117, DOI 10.1037/0033-2909.116.1.117
   Winman A, 2004, J EXP PSYCHOL LEARN, V30, P1167, DOI 10.1037/0278-7393.30.6.1167
   Yaniv I, 1997, J BEHAV DECIS MAKING, V10, P21, DOI 10.1002/(SICI)1099-0771(199703)10:1<21::AID-BDM243>3.0.CO;2-G
NR 74
TC 28
Z9 30
U1 0
U2 7
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD NOV
PY 2005
VL 31
IS 11
BP 942
EP 954
DI 10.1109/TSE.2005.128
PG 13
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science; Engineering
GA 989GE
UT WOS:000233660100003
DA 2024-07-18
ER

PT J
AU de Jonge, M
AF de Jonge, M
TI Build-level components
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article; Proceedings Paper
CT 8th International Conference on Software Reuse
CY JUL 05-09, 2004
CL Madrid, SPAIN
DE CBSE; software component; software reuse; software construction;
   software engineering; source tree composition; build level
ID SOFTWARE; SYSTEM; ARCHITECTURE; MODEL
AB Reuse between software systems is often not optimal. An important reason is that while at the functional level well-known modularization principles are applied for structuring functionality in modules, this is not the case at the build level for structuring files in directories. This leads to a situation where files are entangled in directory hierarchies and build processes, making it hard to extract functionality and to make functionality suitable for reuse. Consequently, software may not come available for reuse at all, or only in rather large chunks of functionality, which may lead to extra software dependencies. In this paper, we propose to improve this situation by applying component-based software engineering (CBSE) principles to the build level. We discuss how existing software systems break CBSE principles, we introduce the notion of build-level components, and we define rules for developing such components. To make our techniques feasible, we define a reengineering process for semiautomatically transforming existing software systems into build-level components. Our techniques are demonstrated in two case studies where we decouple the source tree of Graphviz into 46 build-level components and analyze the source tree of Mozilla.
C1 Philips Res Labs, NL-5656 AA Eindhoven, Netherlands.
C3 Philips; Philips Research
RP Philips Res Labs, Prof Holstlaan 4, NL-5656 AA Eindhoven, Netherlands.
EM Merijn.de.Jonge@philips.com
CR BELADY LA, 1976, IBM SYST J, V15, P225, DOI 10.1147/sj.153.0225
   Bergstra JA, 1998, SCI COMPUT PROGRAM, V31, P205, DOI 10.1016/S0167-6423(97)00021-X
   Capiluppi A, 2004, 10TH INTERNATIONAL SYMPOSIUM ON SOFTWARE METRICS, PROCEEDINGS, P2, DOI 10.1109/METRIC.2004.1357886
   Capiluppi A, 2004, PROG COMPREHEN, P172, DOI 10.1109/WPC.2004.1311059
   Chiricota Y, 2003, PROG COMPREHEN, P217
   de Jonge M, 2003, EUROMICRO CONF PROC, P76
   DEJONGE M, 2002, P 7 INT C SOFTW REUS
   DEJONGE M, 2004, P 2 GRON WORKSH SOFT
   DEJONGE M, 2002, SENR0205 CWI
   DEJONGE M, 2003, THESIS U AMSTERDAM
   DOVAL D, 1999, P SOFTW TECHN ENG PR, P73
   *FREE SOFTW FDN, 2004, GNU COD STAND
   Gansner ER, 2000, SOFTWARE PRACT EXPER, V30, P1203, DOI 10.1002/1097-024X(200009)30:11<1203::AID-SPE338>3.0.CO;2-N
   HOLT R, 2003, P 2 ASERC WORKSH SOF
   Koschke R, 2000, PROG COMPREHEN, P201, DOI 10.1109/WPC.2000.852494
   MACKENZIE D, 2002, AUTOCONF CREATING AU
   MACKENZIE D, 2003, GNU AUTOMAKE MANUAL
   Mancoridis S., 1999, Proceedings IEEE International Conference on Software Maintenance - 1999 (ICSM'99). `Software Maintenance for Business Change' (Cat. No.99CB36360), P50, DOI 10.1109/ICSM.1999.792498
   Mancoridis S, 1998, PROG COMPREHEN, P45, DOI 10.1109/WPC.1998.693283
   MILLER P, 1998, UNIX LINUX J AUUGN, V19, P14
   Murphy GC, 2001, IEEE T SOFTWARE ENG, V27, P364, DOI 10.1109/32.917525
   PARNAS DL, 1972, COMMUN ACM, V15, P1053, DOI 10.1145/361598.361623
   Russell R., 2004, FILESYSTEM HIERARCHY
   Szyperski C., 2002, Component Software: Beyond Object-Oriented Programming
   Tu Q, 2001, PROC IEEE INT CONF S, P398, DOI 10.1109/ICSM.2001.972753
   van der Hoek A, 2003, SOFTWARE PRACT EXPER, V33, P77, DOI 10.1002/spe.496
   van Ommering R, 2000, COMPUTER, V33, P78, DOI 10.1109/2.825699
   VANDENBRAND M, 2001, P C COMP CONSTR CC 0
   Wiggerts TA, 1997, PROCEEDINGS OF THE FOURTH WORKING CONFERENCE ON REVERSE ENGINEERING, P33, DOI 10.1109/WCRE.1997.624574
NR 29
TC 15
Z9 18
U1 0
U2 4
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUL
PY 2005
VL 31
IS 7
BP 588
EP 600
DI 10.1109/TSE.2005.77
PG 13
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Engineering
GA 951EW
UT WOS:000230912900005
DA 2024-07-18
ER

PT J
AU Erdogmus, H
   Morisio, M
   Torchiano, M
AF Erdogmus, H
   Morisio, M
   Torchiano, M
TI On the effectiveness of the test-first approach to programming
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE general programming techniques; coding tools and techniques; testing and
   debugging; testing strategies; productivity; Software Quality/SQA;
   software engineering process; programming paradigms
AB Test-Driven Development (TDD) is based on formalizing a piece of functionality as a test, implementing the functionality such that the test passes, and iterating the process. This paper describes a controlled experiment for evaluating an important aspect of TDD: In TDD, programmers write functional tests before the corresponding implementation code. The experiment was conducted with undergraduate students. While the experiment group applied a test-first strategy, the control group applied a more conventional development technique, writing tests after the implementation. Both groups followed an incremental process, adding new features one at a time and regression testing them. We found that test-first students on average wrote more tests and, in turn, students who wrote more tests tended to be more productive. We also observed that the minimum quality increased linearly with the number of programmer tests, independent of the development strategy employed.
C1 Natl Res Council Canada, Inst Informat Technol, Ottawa, ON K1A 0R6, Canada.
   Politecn Torino, Dipartimento Automat & Informat, I-10129 Turin, Italy.
C3 National Research Council Canada; Polytechnic University of Turin
RP Natl Res Council Canada, Inst Informat Technol, Bldg M-50,Montreal Rd, Ottawa, ON K1A 0R6, Canada.
EM Hakan.Erdogmus@nrc-cnrc.gc.ca; Maurizio.Morisio@polito.it;
   Marco.Torchiano@polito.it
RI Erdogmus, Hakan/HTQ-8803-2023
OI Erdogmus, Hakan/0000-0002-7987-5621; Torchiano,
   Marco/0000-0001-5328-368X
CR [Anonymous], 1994, PUBL MAN AM PSYCH AS, V4th
   [Anonymous], 2003, TEST DRIVEN DEV EXAM
   ARISHOLM E, 2003, 20036 SIM RES LAB
   Astels Dave, 2003, Test-Driven Development: A Practical Guide
   Astels David., 2002, PRACTICAL GUIDE EXTR
   Beck K, 1998, JAVA REP, V3, P37
   Beck K., 2000, EXTREME PROGRAMMING
   BOEHM B, 1987, IEEE SOFTWARE, V4, P84
   Cederqvist P., 1993, Version Management with CVS
   Cohen J., 1988, STAT POWER ANAL BEHA
   EDWARDS SH, 2003, P P INT C ED INF SYS
   ERDOGMUS H, 2004, P XP AG UN C EXTR PR
   GEORGE B, 2003, P ACM S APPL COMP
   Host M., 2000, Empirical Software Engineering, V5, P201, DOI 10.1023/A:1026586415054
   LINGER RC, 1987, IEEE SOFTWARE    SEP
   MANN HB, 1947, ANN MATH STAT, V18, P50, DOI 10.1214/aoms/1177730491
   MAURER F, 2001, PRODUCTIVITY AGILE S
   MAXIMILIEN EM, 2003, P INT C SOFTW ENG IC
   MULLER MM, 2002, P C EMP ASS SOFTW EN
   MULLER MM, 2001, P INT C SOFTW ENG IC
   *OBJ TECHN, 2003, ECL PLATF TECHN OV, V2004
   Porter A., 1998, Empirical Software Engineering, V3, P355, DOI 10.1023/A:1009776104355
   Runeson P, 2003, P 7 INT C EMP ASS EV
   WOHLIN C, 2000, EXPT SOFTW ENG INTR
NR 24
TC 146
Z9 167
U1 12
U2 38
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAR
PY 2005
VL 31
IS 3
BP 226
EP 237
DI 10.1109/TSE.2005.37
PG 12
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 917IE
UT WOS:000228453500004
OA Green Published
DA 2024-07-18
ER

PT J
AU Wong, EYC
   Chan, ATS
   Leong, HV
AF Wong, EYC
   Chan, ATS
   Leong, HV
TI <i>Xstream</i>:: A middleware for streaming XML contents over wireless
   environments
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE XML; streaming; multiresolution; wireless; fragmentation; packetizing;
   middleware
AB XML (eXtensible Markup Language) has been developed and deployed by domain-specific standardization bodies and commercial companies. Studies have been conducted on a wide variety of issues encompassing XML. In the use of XML for wireless computing, the focus has been on investigating ways to efficiently represent XML data for transmission over a wireless environment. We propose a middleware, Xstream (XML Streaming), for efficiently streaming XML contents over a wireless environment by leveraging the rich semantics and structural characteristics of XML documents and by flexibly managing units containing fragments of data into autonomous units, known as XDU (Xstream Data Unit) fragments. The concept of an XDU is fundamental to the operation of Xstream. It provides for the efficient transfer of documents across a wireless link and allows other issues and challenges pertaining to wireless transmission to be addressed. By fragmenting and organizing an XML document into XDU fragments, we are able to incrementally send fragments across a wireless link, while the receiver is able to perform look-ahead processing of the document without having to wait for the entire document to be downloaded. In this paper, we propose a fragmenting strategy based on the value of the wireless link's Maximum Transfer Units (MTUs). In addition, we present and evaluate several packetizing strategies, i.e., strategies wherein a collection of XDUs are grouped into a packet to optimize packet delivery and processing. At the receiving end of this process, a reassembly strategy incrementally reconstructs the XML document as XDU fragments are being received, thereby facilitating client application implementation of look-ahead processing.
C1 Hong Kong Polytech Univ, Dept Comp, Kowloon, Hong Kong, Peoples R China.
C3 Hong Kong Polytechnic University
RP Hong Kong Polytech Univ, Dept Comp, Hung Hom, Kowloon, Hong Kong, Peoples R China.
EM cscwong@comp.polyu.edu.hk; cstschan@comp.polyu.edu.hk;
   cshleong@comp.polyu.edu.hk
OI LEONG, Hong-va/0000-0001-7682-9032
CR BADRINATH BR, 1995, P 15 INT C DISTR COM
   BALAKRISHNAN H, 1995, ACM WIRELESS NET DEC
   BALAKRISHNAN H, 1995, P 1 ACM IEEE C MOB C
   Bergholz A, 2000, IEEE INTERNET COMPUT, V4, P74
   Brown K., 1997, SIGCOMM COMPUTER COM, V27, P19
   CLARK DD, 1990, P ACM S COMM ARCH PR, P200
   DIAZ AL, 1999, XML GENERATOR
   Garey M.R., 1979, COMPUTERS INTRACTABI
   Housel Barron., 1996, Proceedings of the 2nd Annual international Conference on Mobile Computing and Networking (MobiCom '96), P108
   HOUSEL BC, 1999, MOBILE NETW APPL, V3, P419
   Kanne C., 2000, DATA ENG, P198
   LEONG HV, 2000, P INT C DISTR COMP S, P538
   SALTZER JH, 1984, ACM T COMPUT SYST, V2, P277, DOI 10.1145/357401.357402
   SCHMIDT A, 2000, P INT WORKSH WEB DAT, P47
   Shanmugasundaram J, 1999, PROCEEDINGS OF THE TWENTY-FIFTH INTERNATIONAL CONFERENCE ON VERY LARGE DATA BASES, P302
   Surjanto B, 2000, PROCEEDINGS OF THE FIRST INTERNATIONAL CONFERENCE ON WEB INFORMATION SYSTEMS ENGINEERING, VOL I, P70, DOI 10.1109/WISE.2000.882377
   WAGNER M, 2002, P INT C ADV WEB AG I
   *WIR APPL PROT FOR, 2002, WIR APPL PROT WAP 2
   *WIR APPL PROT FOR, 2001, WAP238WML2001626P WI
   YAU SMT, 1999, ACM SIGMOD RECORD, V28, P37
NR 20
TC 6
Z9 10
U1 0
U2 3
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD DEC
PY 2004
VL 30
IS 12
BP 918
EP 935
DI 10.1109/TSE.2004.108
PG 18
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 881RI
UT WOS:000225886200006
DA 2024-07-18
ER

PT J
AU Morel, B
   Alexander, P
AF Morel, B
   Alexander, P
TI Automating component reuse and adaptation
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE reuse models; formal methods; programmer workbench; reuse library
ID SOFTWARE REUSE
AB A continuing challenge for software designers is to develop efficient and cost-effective software implementations. Many see software reuse as a potential solution; however, the cost of reuse tends to outweigh the potential benefits. The costs of software reuse include establishing and maintaining a library of reusable components, searching for applicable components to be reused in a design, as well as adapting components toward a proper implementation. In this paper, we introduce SPARTACAS, a framework for automating specification-based component retrieval and adaptation that has been successfully applied to synthesis of software for embedded and digital signal processing systems. Using specifications to abstractly represent implementations allows automated theorem-provers to formally verify logical reusability relationships between specifications. These logical relationships are used to evaluate the feasibility of reusing the implementations of components to implement a problem. Retrieving a component that is a complete match to a problem is rare. It is more common to retrieve a component that partially satisfies the requirements of a problem. Such components have to be adapted. Rather than adapting components at the code level, SPARTACAS adapts the behavior of partial matches by imposing interactions with other components at the architecture level. A subproblem is synthesized that specifies the missing functionality required to complete the problem; the subproblem is used to query the library for components to adapt the partial match. The framework was implemented and evaluated empirically, the results suggest that automated adaptation using architectures successfully promotes software reuse, and hierarchically organizes a solution to a design problem.
C1 Univ Kansas, Informat & Telecommun Technol Ctr, Lawrence, KS 66045 USA.
C3 University of Kansas
RP Univ Kansas, Informat & Telecommun Technol Ctr, 2335 Irving Hill Rd, Lawrence, KS 66045 USA.
EM morel@ittc.ku.edu; alex@ittc.ku.edu
CR Alexander P., 2000, ROSETTA USAGE GUIDE
   ALLEN R, 1994, PROC INT CONF SOFTW, P71, DOI 10.1109/ICSE.1994.296767
   CHEN Y, 1997, P 12 IEEE INT C AUT, P238
   EICHENAUER D, 1992, ADV MATER, V4, P215, DOI 10.1002/adma.19920040312
   FISCHER B, 1997, P CADE 14 WORKSH AUT
   FISCHER B, 1997, P CONF AN EJ CADE JU, V14
   Frakes W, 1996, ACM COMPUT SURV, V28, P415, DOI 10.1145/234528.234531
   FRAKES WB, 1995, COMMUN ACM, V38, P75, DOI 10.1145/203241.203260
   GENNARI JH, 1999, P 12 WORKSH KNOWL AC
   GIRARDI MR, 1995, J SYST SOFTWARE, V30, P249, DOI 10.1016/0164-1212(94)00137-C
   GOLDBERG A, 1990, P 4 ACM SIGSOFT S SO, P107
   HALL RJ, 1993, PROC INT CONF SOFTW, P371, DOI 10.1109/ICSE.1993.346028
   HOARE CAR, 1969, COMMUN ACM, V12, P576, DOI 10.1145/363235.363259
   JENG JJ, 1995, P ACM SIGSOFT S SOFT, P97
   JONES C, 1994, COMPUTER, V27, P106, DOI 10.1109/2.299437
   KINLEY DBL, 1996, CASE BASED REASONING
   KRUEGER CW, 1992, COMPUT SURV, V24, P131, DOI 10.1145/130844.130856
   Mili A, 1999, IEEE SOFTWARE, V16, P22, DOI 10.1109/52.795098
   MILI H, 1995, IEEE T SOFTWARE ENG, V21, P528, DOI 10.1109/32.391379
   Morel B, 2003, ECBS 2003: 10TH IEEE INTERNATIONAL CONFERENCE AND WORKSHOP ON THE ENGINEERING OF COMPUTER-BASED SYSTEMS, PROCEEDINGS, P108
   PATIL M, 2000, THESIS U KANSAS
   Penix J., 1999, Automated Software Engineering, V6, P139, DOI 10.1023/A:1008766530096
   Penix J, 1995, 10TH KNOWLEDGE-BASED SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P131, DOI 10.1109/KBSE.1995.490128
   Penix John., 1997, P 9 IEEE INT C SOFTW, P535
   PRIETODIAZ R, 1987, IEEE SOFTWARE, V4, P6, DOI 10.1109/MS.1987.229789
   PURTILO JM, 1991, SOFTWARE PRACT EXPER, V21, P539, DOI 10.1002/spe.4380210602
   SINDRE G, 1995, J SYST SOFTWARE, V30, P201, DOI 10.1016/0164-1212(94)00134-9
   SMITH DR, 1990, IEEE T SOFTWARE ENG, V16, P1024, DOI 10.1109/32.58788
   SMYTH B, 1994, TCDCS9417
   Weiser MD., 1979, PROGRAM SLICES FORMA
   ZAREMSKI A, 1993, ACM SIGSOFT S FDN SO
   ZAREMSKI AM, 1995, P 3 ACM SIGSOFT S FD
   Zhao J., 2000, Proceedings of the Fourth European Conference on Software Maintenance and Reengineering, P215, DOI 10.1109/CSMR.2000.827330
NR 33
TC 28
Z9 35
U1 0
U2 2
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD SEP
PY 2004
VL 30
IS 9
BP 587
EP 600
DI 10.1109/TSE.2004.53
PG 14
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 845HM
UT WOS:000223233000003
DA 2024-07-18
ER

PT J
AU Eshuis, R
   Wieringa, R
AF Eshuis, R
   Wieringa, R
TI Tool support for verifying UML activity diagrams
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE analysis; tools; software/program verification; model checking; state
   diagrams; workflow management
ID MODEL CHECKING
AB We describe a tool that supports verification of workflow models specified in UML activity diagrams. The tool translates an activity diagram into an input format for a model checker according to a mathematical semantics. With the model checker, arbitrary propositional requirements can be checked against the input model. If a requirement fails to hold, an error trace is returned by the model checker, which our tool presents by highlighting a corresponding path in the activity diagram. We summarize our formal semantics, discuss the techniques used to reduce an infinite state space to a finite one, and motivate the need for strong fairness constraints to obtain realistic results. We define requirement-preserving rules for state space reduction. Finally, we illustrate the whole approach with a few example verifications.
C1 Eindhoven Univ Technol, Dept Technol Management, NL-5600 MB Eindhoven, Netherlands.
   Univ Twente, Dept Comp Sci, NL-7500 AE Enschede, Netherlands.
C3 Eindhoven University of Technology; University of Twente
RP Eindhoven Univ Technol, Dept Technol Management, POB 513, NL-5600 MB Eindhoven, Netherlands.
EM h.eshuis@tm.tue.nl; roelw@cs.utwente.nl
RI Eshuis, Rik/D-7042-2011
OI Eshuis, Rik/0000-0003-2314-7155
CR [Anonymous], 1992, TEMPORAL LOGIC REACT, DOI DOI 10.1007/978-1-4612-0931-7
   [Anonymous], 1999, WFMCTC1011
   ASARIN E, 1998, P INT C CONC THEOR C
   BERRY G, 1992, SCI COMPUT PROGRAM, V19, P87, DOI 10.1016/0167-6423(92)90005-V
   Bussler C, 1999, IEEE CONCURR, V7, P32, DOI 10.1109/4434.788777
   Chan W, 2001, IEEE T SOFTWARE ENG, V27, P170, DOI 10.1109/32.908961
   Chan W, 1998, IEEE T SOFTWARE ENG, V24, P498, DOI 10.1109/32.708566
   Cimatti A., 2000, Int. J. Softw. Tools for Technol. Transf. (STTT), V2, P410, DOI [DOI 10.1007/S100090050046, 10.1007/s100090050046]
   Clarke E. M., 2002, International Journal on Software Tools for Technology Transfer, V4, P125, DOI 10.1007/s100090100069
   Clarke EM, 1999, MODEL CHECKING, P1
   DAMM W, 1998, P INT S COMP
   DEHNE F, 2000, TOOLKIT CONCEPTUAL M
   Eshuis R, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P166, DOI 10.1109/ICSE.2002.1007965
   ESHUIS R, 2003, PETRI NET TECHNOLOGY
   ESHUIS R, 2001, P C FUND APPR SOFTW
   ESHUIS R, 2001, P 4 INT C UN MOD LAN
   Eshuis R., 2002, THESIS U TWENTE, V02-44
   Esparza J, 1997, ACTA INFORM, V34, P85, DOI 10.1007/s002360050074
   Goldblatt R, 1992, CTR STUDY LANGUAGE I
   Grefen P, 2000, COMPUT SYST SCI ENG, V15, P277
   Harel D., 1996, ACM Transactions on Software Engineering and Methodology, V5, P293, DOI 10.1145/235321.235322
   Harel D., 1985, LOGICS MODELS CONCUR
   Harel D., 1998, MODELING REACTIVE SY
   Hatcliff J., 2000, Higher-Order and Symbolic Computation, V13, P315, DOI 10.1023/A:1026599015809
   HENZINGER TA, 1992, P INT C AUT LANG PRO
   Holzmann GJ, 1997, IEEE T SOFTWARE ENG, V23, P279, DOI 10.1109/32.588521
   JANSSEN W, 1998, P INT SPIN WORKSH
   Karamanolis C, 2000, FOURTH INTERNATIONAL ENTERPRISE DISTRIBUTED OBJECT COMPUTING CONFERENCE - PROCEEDINGS, P170, DOI 10.1109/EDOC.2000.882357
   Karp R. M., 1969, J COMPUT SYST SCI, V3, P147, DOI DOI 10.1016/S0022-0000(69)80011-5
   Kelton W.D., 1998, SIMULATION ARENA
   Kesten Y, 2000, ACTA INFORM, V36, P837, DOI 10.1007/s002360050177
   KESTEN Y, 1998, P INT C AUT LANG PRO
   Latella D., 1999, Formal Aspects of Computing, V11, P637, DOI 10.1007/s001659970003
   Lilius Johan., 1999, P 14 IEEE INT C AUTO, P255
   MURATA T, 1989, P IEEE, V77, P541, DOI 10.1109/5.24143
   MUTH P, 1998, WORKFLOW MANAGEMENT
   PNUELI A, 1996, P INT C COMP AID VER
   Spruit P, 2001, THEOR COMPUT SCI, V254, P591, DOI 10.1016/S0304-3975(00)00289-9
   TIP F, 1995, J PROGRAM LANG, V3, P121
   *UML REV TASKF, 2003, FORMAL20030301 OMG R
   VANDERAALST WMP, 2000, P 21 INT C APPL THEO
   Verbeek HMW, 2001, COMPUT J, V44, P246, DOI 10.1093/comjnl/44.4.246
   Wieringa R.J., 2003, Design Methods for Reactive Systems: Yourdon, Statemate
NR 43
TC 84
Z9 89
U1 0
U2 6
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUL
PY 2004
VL 30
IS 7
BP 437
EP 447
DI 10.1109/TSE.2004.33
PG 11
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 826DE
UT WOS:000221808600002
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Dillon, LK
   Stirewalt, REK
AF Dillon, LK
   Stirewalt, REK
TI Inference graphs: A computational structure supporting generation of
   customizable and correct analysis components
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article; Proceedings Paper
CT 23rd International Conference on Software Engineering (ICSE 2001)
CY MAY 12-19, 2001
CL TORONTO, CANADA
SP IEEE Comp Soc, IEEE Comp Soc, Tech Council Software Engn, Assoc Comp Machinery, ACM SIGSOFT Special Interest Grp Software Engn, ACM SIGSOFT Special Interest Grp Programming Languages, ACD Syst, Alberta Software Engn Res Consortium, Avaya Commun, Bell Canada, Canada Natl Res Council Canada, Cisco Syst, Commun & Informat Technol Ontario, IBM Toronto Lab, Alberta Informat Circle Res Excellence, MacDonald Dettwiler, Microsoft Res, Nokia, Rational Software, Software Product Ctr Inc, Sun Microsyst
DE Amalia; analysis software; engineering trade-offs; inference graphs;
   operational semantics; program transformations; proofs of correctness;
   transparent design
ID SOFTWARE; TOOLS
AB Amalia is a generator framework for constructing analyzers for operationally defined formal notations. These generated analyzers are components that are designed for customization and integration into a larger environment. The customizability and efficiency of Amalia analyzers owe to a computational structure called an inference graph. This paper describes this structure, how inference graphs enable Amalia to generate analyzers for operational specifications, and how we build in assurance. On another level, this paper illustrates how to balance the need for assurance, which typically implies a formal proof obligation, against other design concerns, whose solutions leverage design techniques that are not (yet) accompanied by mature proof methods. We require Amalia-generated designs to be transparent with respect to the formal semantic models upon which they are based. Inference graphs are complex structures that incorporate many design optimizations. While not formally verifiable, their fidelity with respect to a formal operational semantics can be discharged by inspection.
C1 Michigan State Univ, Dept Comp Sci & Engn, Software Engn & Network Syst Lab, E Lansing, MI 48824 USA.
C3 Michigan State University
RP Michigan State Univ, Dept Comp Sci & Engn, Software Engn & Network Syst Lab, E Lansing, MI 48824 USA.
EM ldillon@cse.msu.edu; stire@cse.msu.edu
CR [Anonymous], 1992, Compiling with Continuations
   [Anonymous], 1991, The Temporal Logic of Reactive and Concurrent Systems
   ATTALI I, 1994, 2339 INRIA SOPH ANT
   Batory D., 1992, ACM Transactions on Software Engineering and Methodology, V1, P355, DOI 10.1145/136586.136587
   Bolognesi T., 1989, FORMAL DESCRIPTION T, P23
   Borras P., 1988, P SDE 3, P14
   Boyle JM, 1999, COMPUTER, V32, P65, DOI 10.1109/2.762804
   CAMILLERI AJ, 1990, IEEE T SOFTWARE ENG, V16, P993, DOI 10.1109/32.58786
   Cleaveland R, 2002, SCI COMPUT PROGRAM, V42, P39, DOI 10.1016/S0167-6423(01)00033-8
   Day NA, 2000, 4TH INTERNATIONAL CONFERENCE ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P39, DOI 10.1109/ICRE.2000.855583
   DAY NA, 1999, P 12 INT C THEOR PRO, P341
   Dillon L. K., 1994, ACM Transactions on Software Engineering and Methodology, V3, P131, DOI 10.1145/192218.192226
   Dillon LK, 2001, PROC INT CONF SOFTW, P57, DOI 10.1109/ICSE.2001.919081
   DILLON LK, 2001, MSUCSE016
   FISLER K, 2001, P 8 EUR SOFTW ENG C, P152
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   GARAVEL H, 1998, P 1 INT C TOOLS ALG
   GRAMICH B, 1998, P WOKRSH STRAT AUT D, P11
   Hopcroft J.E., 1979, Introduction to Automata Theory, Languages, and Computation
   Kiczales G, 1997, LECT NOTES COMPUT SC, V1241, P220, DOI 10.1007/BFb0053381
   LIEBERHERR KJ, 1993, IEEE T SOFTWARE ENG, V19, P313, DOI 10.1109/32.223802
   Liu XM, 1999, OPERATING SYSTEMS REVIEW, VOL 33, NO 5, DECEMBER 1999, P80, DOI 10.1145/319344.319157
   LUTTGEN G, 2000, P 8 ACM SIGSOFT INT, P120
   PARNAS DL, 1979, IEEE T SOFTWARE ENG, V5, P128, DOI 10.1109/TSE.1979.234169
   Pezze M, 1997, PROC INT CONF SOFTW, P239, DOI 10.1145/253228.253278
   PLOTKIN GD, 1981, FN19 DAIMI AARH U DA
   *REAS SYST INC, 2002, REF US GID
   Robbins JE, 2000, INFORM SOFTWARE TECH, V42, P79, DOI 10.1016/S0950-5849(99)00083-X
   SMARAGDAKIS Y, 1998, P 12 EUR C OBJ OR PR
   Stirewalt REK, 2001, PROC INT CONF SOFTW, P167, DOI 10.1109/ICSE.2001.919091
   STROUSTRUP B, 1994, DESIGN EVOLUTION CPL
   VENKATESH GA, 1992, IEEE T SOFTWARE ENG, V18, P304, DOI 10.1109/32.129219
NR 32
TC 8
Z9 21
U1 1
U2 4
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD FEB
PY 2003
VL 29
IS 2
BP 133
EP 150
DI 10.1109/TSE.2003.1178052
PG 18
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Engineering
GA 644EB
UT WOS:000180904000004
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Noei, S
   Li, H
   Georgiou, S
   Zou, Y
AF Noei, Shayan
   Li, Heng
   Georgiou, Stefanos
   Zou, Ying
TI An Empirical Study of Refactoring Rhythms and Tactics in the Software
   Development Process
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Refactoring; code quality; code smells; refactoring rhythms; refactoring
   tactics
AB It is critical for developers to develop high-quality software to reduce maintenance cost. While often, developers apply refactoring practices to make source code readable and maintainable without impacting the software functionality. Existing studies identify development rhythms (i.e., weekly development patterns) and their relationship with various metrics, such as productivity. However, existing studies focus entirely on development rhythms. There is no study on refactoring rhythms and their relationship with code quality. Moreover, the existing studies categorize the refactoring tactics (i.e., long-term refactoring patterns) into two general concepts of consistent and inconsistent refactoring. Nevertheless, the existence of other tactics and their relationship with code quality is not explored. In this paper, we conduct an empirical study on the refactoring practices of 196 Apache projects in the early, middle, and late stages of development. We aim to identify (1) existing refactoring rhythms, (2) further refactoring tactics, and (3) the relationship between the identified tactics and rhythms with code quality. The recognition of existing refactoring strategies and their relationship with code quality can assist practitioners in recognizing and applying the appropriate and high-quality refactoring rhythms or tactics to deliver a higher quality of software. We find two frequently used refactoring rhythms: work-day refactoring and all-day refactoring. We also identify two deviations of floss and root canal refactoring tactics as: intermittent root canal, intermittent spiked floss, frequent spiked floss, and frequent root canal. We find that root canal-based tactics are correlated with less increase in the code smells (i.e., higher quality code) compared to floss-based tactics. Moreover, we find that refactoring rhythms are not significantly correlated with the quality of the code. Furthermore, we provide detailed information on the relationship of each refactoring tactic to each code smell type.
C1 [Noei, Shayan; Georgiou, Stefanos; Zou, Ying] Queens Univ, Kingston, ON K7L 3N6, Canada.
   [Li, Heng] Polytech Montreal, Montreal, PQ H3T 1J4, Canada.
C3 Queens University - Canada; Universite de Montreal; Polytechnique
   Montreal
RP Noei, S (corresponding author), Queens Univ, Kingston, ON K7L 3N6, Canada.
EM s.noei@queensu.ca; heng.li@polymtl.ca; sgeorgiou@aueb.gr;
   ying.zou@queensu.ca
OI Li, Heng/0000-0001-5441-6763; Noei, Shayan/0000-0002-5675-7817; Zou,
   Ying/0000-0002-5335-0261
CR Ahmed I, 2015, INT SYMP EMP SOFTWAR, P31, DOI 10.1109/ESEM.2015.7321186
   Al Dallal J, 2018, IEEE T SOFTWARE ENG, V44, P44, DOI 10.1109/TSE.2017.2658573
   Arif A., 2020, P 14 INT C OP SOURC, P1
   Aversano L, 2020, INFORMATION, V11, DOI 10.3390/info11070348
   Bibiano A. C., 2019, PROC ACMIEEE INT S E, P1
   Binnewies C, 2010, J OCCUP ORGAN PSYCH, V83, P419, DOI 10.1348/096317909X418049
   Cedrim D, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P465, DOI 10.1145/3106237.3106259
   Claes M, 2020, IEEE WORK CONF MIN S, P503, DOI 10.1145/3379597.3387487
   Claes M, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P705, DOI 10.1145/3180155.3180193
   Cohen J., 1988, STAT POWER ANAL BEHA
   Du Bois B, 2005, NINTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P334, DOI 10.1109/CSMR.2005.25
   Fontana FA, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE WORKSHOPS (ICSAW), P282, DOI 10.1109/ICSAW.2017.16
   Fowler M., 1999, Refactoring: Improving the Design of Existing Code
   Kaya M., 2018, PROC 6 INT S DIGIT F, P1
   Kerievsky J., 2005, Refactoring to Patterns
   Khorikov V, Enterprise Craftsmanship
   Kim M., 2012, P ACM SIGSOFT 20 INT, P1
   KRUSKAL WH, 1952, J AM STAT ASSOC, V47, P583, DOI 10.1080/01621459.1952.10483441
   Lianping Chen, 2014, 2014 IEEE/IFIP Conference on Software Architecture (WICSA), P195, DOI 10.1109/WICSA.2014.45
   Martin Robert C, 2009, Clean Code: a Handbook of Agile Software Craftsmanship
   Martini A, 2016, 2016 IEEE/ACM 38TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING COMPANION (ICSE-C), P31, DOI 10.1145/2889160.2889224
   Mo R, 2015, 2015 12TH WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE (WICSA), P51, DOI 10.1109/WICSA.2015.12
   Moser R, 2006, LECT NOTES COMPUT SC, V4039, P287
   Murphy-Bill E, 2008, IEEE SOFTWARE, V25, P38, DOI 10.1109/MS.2008.123
   Murphy-Hill E, 2012, IEEE T SOFTWARE ENG, V38, P5, DOI 10.1109/TSE.2011.41
   Noei S., GitHub
   O Cinn?ide M., 2016, P 1 INT WORKSH SOFTW, P9
   Sharma T., 2012, Proceedings of the 2012 IEEE 36th IEEE Annual Computer Software and Applications Conference Workshops (COMPSACW), P266, DOI 10.1109/COMPSACW.2012.56
   Sharma T, 2018, J SYST SOFTWARE, V138, P158, DOI 10.1016/j.jss.2017.12.034
   Sharma T, 2016, 2016 IEEE/ACM 1ST INTERNATIONAL WORKSHOP ON BRINGING ARCHITECTURAL DESIGN THINKING INTO DEVELOPERS DAILY ACTIVITIES (BRIDGE), P1, DOI [10.1145/2896935.2896938, 10.1109/Bridge.2016.009]
   Silva D, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P858, DOI 10.1145/2950290.2950305
   Sousa L, 2020, INT C PROGRAM COMPRE, P354, DOI 10.1145/3387904.3389276
   Suryanarayana G., 2014, Refactoring for Software Design Smells: Managing Technical Debt
   Szoke G, 2015, IEEE INT WORK C SO, P253, DOI 10.1109/SCAM.2015.7335422
   Tantithamthavorn C, 2019, IEEE T SOFTWARE ENG, V45, P683, DOI 10.1109/TSE.2018.2794977
   Tantithamthavorn C, 2017, IEEE T SOFTWARE ENG, V43, P1, DOI 10.1109/TSE.2016.2584050
   Tsantalis N, 2022, IEEE T SOFTWARE ENG, V48, P930, DOI 10.1109/TSE.2020.3007722
   Tsantalis N, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P483, DOI 10.1145/3180155.3180206
   Yamashita A, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P306, DOI 10.1109/ICSM.2012.6405287
   Yoshida N., 2016, PROC IEEE 24 INT C P, P1
   Zhang JY, 2021, IEEE SOFTWARE, V38, P96, DOI 10.1109/MS.2020.2988022
NR 41
TC 0
Z9 0
U1 1
U2 1
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD DEC
PY 2023
VL 49
IS 12
BP 5103
EP 5119
DI 10.1109/TSE.2023.3326775
PG 17
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA CL0K1
UT WOS:001125287400002
DA 2024-07-18
ER

PT J
AU Mehrotra, N
   Sharma, A
   Jindal, A
   Purandare, R
AF Mehrotra, Nikita
   Sharma, Akash
   Jindal, Anmol
   Purandare, Rahul
TI Improving Cross-Language Code Clone Detection via Code Representation
   Learning and Graph Neural Networks
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Codes; Cloning; Syntactics; Semantics; Java; Task analysis; Source
   coding; Program representation learning; cross-language code clone
   detection; graph-based neural networks; abstract syntax trees
AB Code clone detection is an important aspect of software development and maintenance. The extensive research in this domain has helped reduce the complexity and increase the robustness of source code, thereby assisting bug detection tools. However, the majority of the clone detection literature is confined to a single language. With the increasing prevalence of cross-platform applications, functionality replication across multiple languages is common, resulting in code fragments having similar functionality but belonging to different languages. Since such clones are syntactically unrelated, single language clone detection tools are not applicable in their case. In this article, we propose a semi-supervised deep learning-based tool Rubhus, capable of detecting clones across different programming languages. Rubhus uses the control and data flow enriched abstract syntax trees (ASTs) of code fragments to leverage their syntactic and structural information and then applies graph neural networks (GNNs) to extract this information for the task of clone detection. We demonstrate the effectiveness of our proposed system through experiments conducted over datasets consisting of Java, C, and Python programs and evaluate its performance in terms of precision, recall, and F1 score. Our results indicate that Rubhus outperforms the state-of-the-art cross-language clone detection tools.
C1 [Mehrotra, Nikita; Sharma, Akash; Jindal, Anmol] IIIT Delhi, Dept Comp Sci & Engn, Delhi 110020, India.
   [Purandare, Rahul] Univ Nebraska Lincoln, Lincoln, NE 68588 USA.
C3 Indraprastha Institute of Information Technology Delhi; University of
   Nebraska System; University of Nebraska Lincoln
RP Mehrotra, N (corresponding author), IIIT Delhi, Dept Comp Sci & Engn, Delhi 110020, India.; Purandare, R (corresponding author), Univ Nebraska Lincoln, Lincoln, NE 68588 USA.
EM nikitam@iiitd.ac.in; akash17327@iiitd.ac.in; anmol19296@iiitd.ac.in;
   rahul@unl.edu.in
RI mehrotra, nikita/KHE-5901-2024
OI mehrotra, nikita/0000-0002-2554-4798
FU Department of Science and Technology (DST) (India); Science and
   Engineering Research Board (SERB); Confederation of Indian Industry
   (CII); Infosys Center for Artificial Intelligence at IIIT-Delhi; Nucleus
   Software Exports Ltd
FX This work was supported in part by the Department of Science and
   Technology (DST) (India), in part by the Science and Engineering
   Research Board (SERB), in part by the Confederation of Indian Industry
   (CII), in part by the Infosys Center for Artificial Intelligence at
   IIIT-Delhi, and in part by the Nucleus Software Exports Ltd.
CR Al-Omari F., 2012, 2012 19th Working Conference on Reverse Engineering (WCRE), P405, DOI 10.1109/WCRE.2012.50
   Allamanis M, 2018, Arxiv, DOI arXiv:1711.00740
   Allamanis M, 2016, PR MACH LEARN RES, V48
   Atcoder, About us
   Baxter ID, 1998, PROC IEEE INT CONF S, P368, DOI 10.1109/ICSM.1998.738528
   Bromley J., 1993, International Journal of Pattern Recognition and Artificial Intelligence, V7, P669, DOI 10.1142/S0218001493000339
   Bronstein MM, 2017, IEEE SIGNAL PROC MAG, V34, P18, DOI 10.1109/MSP.2017.2693418
   Budimac Z., 2012, Proceedings of the Fifth Balkan Conference in Informatics, BCI'12, P287, DOI DOI 10.1145/2371316.2371380
   Burges C. J. C., 2013, 27 ANN C NEUR INF P
   Chen Xinyue, 2020, INT C LEARN REPR
   Chen ZM, 2021, IEEE T SOFTWARE ENG, V47, P1943, DOI 10.1109/TSE.2019.2940179
   Cheng X, 2017, IEICE T INF SYST, VE100D, P273, DOI 10.1587/transinf.2016EDP7334
   Cheng X, 2016, IEEE INT CONF AUTOM, P696, DOI 10.1145/2970276.2970363
   CLIFF N, 1993, PSYCHOL BULL, V114, P494, DOI 10.1037/0033-2909.114.3.494
   codetechnology, about us
   Cordy JR, 2011, CONF PROC INT SYMP C, P219, DOI 10.1109/ICPC.2011.26
   Defferrard M, 2016, ADV NEUR IN, V29
   Fey Matthias, 2019, ICLR WORKSH REPR LEA
   Fjeldberg H.-C., 2008, Master thesis
   github, Rubhus
   Glorot X., 2010, INT C ARTIFICIAL INT, P249
   Hu J, 2018, PROC CVPR IEEE, P7132, DOI [10.1109/CVPR.2018.00745, 10.1109/TPAMI.2019.2913372]
   Jiang LX, 2007, PROC INT CONF SOFTW, P96
   kaggle, US
   Kamiya T, 2002, IEEE T SOFTWARE ENG, V28, P654, DOI 10.1109/TSE.2002.1019480
   Kamp Marius, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P529, DOI 10.1109/MSR.2019.00079
   Kang HJ, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P1, DOI 10.1109/ASE.2019.00011
   Kingma D. P., 2014, arXiv
   Kipf T.N., 2017, INT C LEARNING REPRE, DOI DOI 10.48550/ARXIV.1609.02907
   Kraft Nicholas A., 2008, SEKE 2008. The 20th International Conference Proceedings on Software Engineering & Knowledge Engineering, P54
   Krinke J, 2001, EIGHTH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P301, DOI 10.1109/WCRE.2001.957835
   Krinke J, 2022, INT WORKS SOFTW CLON, P1, DOI 10.1109/IWSC55060.2022.00008
   Lample G, 2018, 2018 CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING (EMNLP 2018), P5039
   Lattner C, 2004, INT SYM CODE GENER, P75, DOI 10.1109/CGO.2004.1281665
   LeClair A, 2020, INT C PROGRAM COMPRE, P184, DOI 10.1145/3387904.3389268
   Li Y, 2019, P ACM PROGRAM LANG, V3, DOI 10.1145/3360588
   Li ZM, 2004, USENIX ASSOCIATION PROCEEDINGS OF THE SIXTH SYMPOSIUM ON OPERATING SYSTEMS DESIGN AND IMPLEMENTATION (OSDE '04), P289
   Lin ZH, 2022, ACM T SOFTW ENG METH, V31, DOI 10.1145/3506696
   Mathew G, 2021, PROCEEDINGS OF THE 29TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '21), P205, DOI 10.1145/3468264.3468538
   Mathew G, 2020, PROC INT CONF SOFTW, P210, DOI 10.1145/3377811.3380407
   Mayer Philip, 2017, Journal of Software Engineering Research and Development, V5, DOI 10.1186/s40411-017-0035-z
   Mehrotra N, 2022, IEEE T SOFTWARE ENG, V48, P3771, DOI 10.1109/TSE.2021.3105556
   Mondal M, 2017, INT WORKS SOFTW CLON, P38
   Monden A, 2002, EIGHTH IEEE SYMPOSIUM ON SOFTWARE METRICS, PROCEEDINGS, P87, DOI 10.1109/METRIC.2002.1011328
   Nafi KW, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P1026, DOI 10.1109/ASE.2019.00099
   Perez Daniel, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P518, DOI 10.1109/MSR.2019.00078
   Python Core Team, 2019, Python: A Dynamic, Open Source Programming Language (3.9)
   Ray B, 2013, IEEE INT CONF AUTOM, P367, DOI 10.1109/ASE.2013.6693095
   Roy CK, 2009, IEEE ICST WORKSHOP, P157, DOI 10.1109/ICSTW.2009.18
   Roy J. R., 2007, QUEENS SCH COMPUTING, V541, P64
   Saini V, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P354, DOI 10.1145/3236024.3236026
   Sajnani H, 2016, PROC INT CONF SOFTW, P1157, DOI 10.1145/2884781.2884877
   Shang WL, 2016, PR MACH LEARN RES, V48
   Shin R., 2018, P 32 INT C NEUR INF, P8931
   Shrestha N, 2018, 2018 IEEE SYMPOSIUM ON VISUAL LANGUAGES AND HUMAN-CENTRIC COMPUTING (VL/HCC), P177, DOI 10.1109/VLHCC.2018.8506508
   Sun FK, 2020, P 8 INT C LEARN REPR
   Svajlenko J, 2014, PROC IEEE INT CONF S, P476, DOI 10.1109/ICSME.2014.77
   Tao CN, 2022, INT C PROGRAM COMPRE, P413, DOI 10.1145/3524610.3527911
   Thummalapenta S, 2010, EMPIR SOFTW ENG, V15, P1, DOI 10.1007/s10664-009-9108-x
   Van Bruggen Danny, 2020, Zenodo, DOI 10.5281/ZENODO.3842713
   Vinyals O, 2016, Arxiv, DOI arXiv:1511.06391
   Vislayski T, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P512, DOI 10.1109/SANER.2018.8330250
   Wang K., 2018, P 6 INT C LEARN REPR
   Wang WH, 2020, PROCEEDINGS OF THE 2020 IEEE 27TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER '20), P261, DOI [10.1109/SANER48275.2020.9054857, 10.1109/saner48275.2020.9054857]
   Wei HH, 2018, PROCEEDINGS OF THE TWENTY-SEVENTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P2840
   Wei HH, 2017, PROCEEDINGS OF THE TWENTY-SIXTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P3034
   White M, 2019, 2019 IEEE 26TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER), P479, DOI [10.1109/saner.2019.8668043, 10.1109/SANER.2019.8668043]
   White M, 2016, IEEE INT CONF AUTOM, P87, DOI 10.1145/2970276.2970326
   Wu Q., 1990, PROBLEM SOLVING TRAN
   Wu ZH, 2021, IEEE T NEUR NET LEAR, V32, P4, DOI 10.1109/TNNLS.2020.2978386
   Yu H, 2019, INT C PROGRAM COMPRE, P70, DOI 10.1109/ICPC.2019.00021
   Yue RR, 2018, PROC IEEE INT CONF S, P115, DOI 10.1109/ICSME.2018.00021
   Zhang J, 2019, PROC INT CONF SOFTW, P783, DOI 10.1109/ICSE.2019.00086
   Zhang Si, 2019, Comput Soc Netw, V6, P11, DOI 10.1186/s40649-019-0069-y
   Zhang Z, 2021, INT J MACH LEARN CYB, V12, P1649, DOI 10.1007/s13042-020-01264-7
   Zhao G, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P141, DOI 10.1145/3236024.3236068
NR 76
TC 1
Z9 1
U1 9
U2 12
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD NOV
PY 2023
VL 49
IS 11
BP 4846
EP 4868
DI 10.1109/TSE.2023.3311796
PG 23
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA Z3ZN2
UT WOS:001111494200007
DA 2024-07-18
ER

PT J
AU Sas, D
   Avgeriou, P
AF Sas, Darius
   Avgeriou, Paris
TI An Architectural Technical Debt Index Based on Machine Learning and
   Architectural Smells
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Machine learning; technical debt; architectural smells; arcan;
   learning-to-rank; case study
ID SOFTWARE; COLLECTION; CODE
AB A key aspect of technical debt (TD) management is the ability to measure the amount of principal accumulated in a system. The current literature contains an array of approaches to estimate TD principal, however, only a few of them focus specifically on architectural TD, but none of them satisfies all three of the following criteria: being fully automated, freely available, and thoroughly validated. Moreover, a recent study has shown that many of the current approaches suffer from certain shortcomings, such as relying on hand-picked thresholds. In this article, we propose a novel approach to estimate architectural technical debt principal based on machine learning and architectural smells to address such shortcomings. Our approach can estimate the amount of technical debt principal generated by a single architectural smell instance. To do so, we adopt novel techniques from Information Retrieval to train a learning-to-rank machine learning model (more specifically, a gradient boosting machine) that estimates the severity of an architectural smell and ensure the transparency of the predictions. Then, for each instance, we statically analyse the source code to calculate the exact number of lines of code creating the smell. Finally, we combine these two values to calculate the technical debt principal. To validate the approach, we conducted a case study and interviewed 16 practitioners, from both open source and industry, and asked them about their opinions on the TD principal estimations for several smells detected in their projects. The results show that for 71% of instances, practitioners agreed that the estimations provided were representative of the effort necessary to refactor the smell.
C1 [Sas, Darius; Avgeriou, Paris] Univ Groningen, Bernoulli Inst Math Comp Sci & Artificial Intellig, NL-9714 Groningen, Netherlands.
C3 University of Groningen
RP Sas, D (corresponding author), Univ Groningen, Bernoulli Inst Math Comp Sci & Artificial Intellig, NL-9714 Groningen, Netherlands.
EM darius.sas@outlook.com; p.avgeriou@rug.nl
OI Sas, Darius/0000-0003-3383-3298; Avgeriou, Paris/0000-0002-7101-0754
FU ITEA3 research project [17038]
FX This work was supported by ITEA3 research project under Grant 17038
   VIS-DOM.
CR Al-Mutawa HA, 2013, IEEE AUS SOFT ENGR, P48, DOI 10.1109/ASWEC.2014.15
   Ampatzoglou A, 2018, 2018 IEEE/ACM INTERNATIONAL CONFERENCE ON TECHNICAL DEBT (TECHDEBT), P115, DOI 10.1145/3194164.3194175
   [Anonymous], 1963, The method of paired comparisons
   [Anonymous], Replication package zip file, DOI [10.6084/m9.figshare.19823323, DOI 10.6084/M9.FIGSHARE.19823323]
   Avgeriou P, 2016, Dagstuhl reports, V6, DOI DOI 10.4230/DAGREP.6.4.110
   Avgeriou P, 2021, IEEE SOFTWARE, V38, P61, DOI 10.1109/MS.2020.3024958
   Boeije H, 2002, QUAL QUANT, V36, P391, DOI 10.1023/A:1020909529486
   Brereton P., 2008, P EASE 2008 BCS EWIC
   Bruch S, 2021, PROCEEDINGS OF THE WORLD WIDE WEB CONFERENCE 2021 (WWW 2021), P118, DOI 10.1145/3442381.3449794
   Chatzigeorgiou A, 2015, 2015 IEEE 7TH INTERNATIONAL WORKSHOP ON MANAGING TECHNICAL DEBT (MTD) PROCEEDINGS, P53, DOI 10.1109/MTD.2015.7332625
   Cunningham W., 1993, OOPS Messenger, V4, P29
   Curtis B, 2012, IEEE SOFTWARE, V29, P34, DOI 10.1109/MS.2012.156
   Di Rocco J, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-021-09963-7
   Ernst NA, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P50, DOI 10.1145/2786805.2786848
   FIX E, 1989, INT STAT REV, V57, P238, DOI 10.2307/1403797
   FLEISS JL, 1971, PSYCHOL BULL, V76, P378, DOI 10.1037/h0031619
   Fontana F. A., 2020, P INT C SOFTW ENG AD, P68
   Fontana FA, 2019, J SYST SOFTWARE, V154, P139, DOI 10.1016/j.jss.2019.04.066
   Fontana FA, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE WORKSHOPS (ICSAW), P282, DOI 10.1109/ICSAW.2017.16
   Fontana FA, 2017, KNOWL-BASED SYST, V128, P43, DOI 10.1016/j.knosys.2017.04.014
   Fontana FA, 2016, INT WORKSH MANAG TEC, P28, DOI 10.1109/MTD.2016.11
   Fontana FA, 2015, INT WORKS EMERG TREN, P44, DOI 10.1109/WETSoM.2015.14
   Fontana FA, 2015, 2015 IEEE 7TH INTERNATIONAL WORKSHOP ON MANAGING TECHNICAL DEBT (MTD) PROCEEDINGS, P16, DOI 10.1109/MTD.2015.7332620
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   Garcia J, 2009, EUR CON SFTWR MTNCE, P255, DOI 10.1109/CSMR.2009.59
   Glaser B, 1967, Discovery of grounded theory strategies for qualitative research, DOI [10.4324/9780203793206, DOI 10.4324/9780203793206]
   Glaser B. G., 1967, DISCOV GROUNDED THEO
   Happel H.-J., 2008, P 2008 INT WORKSHOP, P11
   Herbrich R., 2006, P 19 INT C NEUR INF, P569
   Murillo MI, 2021, 2021 XLVII LATIN AMERICAN COMPUTING CONFERENCE (CLEI 2021), DOI 10.1109/CLEI53233.2021.9640164
   Järvelin K, 2002, ACM T INFORM SYST, V20, P422, DOI 10.1145/582415.582418
   Kamei E.d.S., 2016, QUASOQ TDA APSEC, P68
   Ke GL, 2017, ADV NEUR IN, V30
   Khomyakov I, 2020, LECT NOTES BUS INF P, V378, P250, DOI 10.1007/978-3-030-40783-4_12
   Kitchenham B, 2004, IEEE T SOFTWARE ENG, V30, P1023, DOI 10.1109/TSE.2004.104
   Laval J, 2012, J OBJECT TECHNOL, V11, DOI 10.5381/jot.2012.11.1.a4
   Lefever J, 2021, 2021 IEEE/ACM 43RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE (ICSE-SEIP 2021), P121, DOI 10.1109/ICSE-SEIP52600.2021.00021
   Lethbridge TC, 2005, EMPIR SOFTW ENG, V10, P311, DOI 10.1007/s10664-005-1290-x
   Letouzey Jean-Louis, 2010, Proceedings 2010 Second International Conference on Advances in System Testing and Validation Lifecycle (VALID), P43, DOI 10.1109/VALID.2010.31
   Maldonado ED, 2017, PROC IEEE INT CONF S, P238, DOI 10.1109/ICSME.2017.8
   Marinescu R, 2012, IBM J RES DEV, V56, DOI 10.1147/JRD.2012.2204512
   Martin R. C., 2018, Clean Architecture: A Craftsman's Guide to Software Structure and Design
   Martini A, 2018, LECT NOTES COMPUT SC, V11048, P320, DOI 10.1007/978-3-030-00761-4_21
   Martini A, 2018, INFORM SOFTWARE TECH, V93, P264, DOI 10.1016/j.infsof.2017.08.005
   MartinLippert S. R., 2006, REFACTORING LARGE SO
   Mathison S., 2005, ENCY EVAL, V1, P285
   Mayr A, 2014, INT CONF QUAL SOFTW, P305, DOI 10.1109/QSIC.2014.35
   Meyerovich L. A., 2012, SPLASH 2012 PLATEAU, P7
   Mikhailiuk A, 2021, INT C PATT RECOG, P2559, DOI 10.1109/ICPR48806.2021.9412676
   Morasca S, 2001, P INT COMP SOFTW APP, P317, DOI 10.1109/CMPSAC.2001.960633
   Morozoff EP, 2010, IEEE SOFTWARE, V27, P72, DOI 10.1109/MS.2009.160
   Nugroho A, 2011, P 2 WORKSH MAN TECHN, P1
   Palinkas LA, 2015, ADM POLICY MENT HLTH, V42, P533, DOI 10.1007/s10488-013-0528-y
   Palma F., 2012, 2012 Third International Workshop on Recommendation Systems for Software Engineering (RSSE), P1, DOI 10.1109/RSSE.2012.6233399
   PARNAS DL, 1979, IEEE T SOFTWARE ENG, V5, P128, DOI 10.1109/TSE.1979.234169
   Pawlak R, 2016, SOFTWARE PRACT EXPER, V46, P1155, DOI 10.1002/spe.2346
   Perez-Ortiz M, 2017, Arxiv, DOI arXiv:1712.03686
   Pruijt L, 2017, SOFTWARE PRACT EXPER, V47, P273, DOI 10.1002/spe.2421
   Rios N, 2020, LECT NOTES COMPUT SC, V12045, P55, DOI 10.1007/978-3-030-44429-7_4
   Rios N, 2018, PROCEEDINGS OF THE 12TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT (ESEM 2018), DOI 10.1145/3239235.3268917
   Robillard MP, 2010, IEEE SOFTWARE, V27, P80, DOI 10.1109/MS.2009.161
   Roveda R, 2018, EUROMICRO CONF PROC, P408, DOI 10.1109/SEAA.2018.00073
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Samarthyam G., 2016, Proceedings of the 1st International Workshop on Software Refactoring, P1
   Sas D., 2021, J SOFTW EVOL PROCESS, V34
   Sas D, 2021, IEEE SOFTWARE, V38, P35, DOI 10.1109/MS.2021.3103664
   Sas D, 2019, PROC IEEE INT CONF S, P557, DOI 10.1109/ICSME.2019.00090
   Sas D, 2020, SOFTWARE QUAL J, V28, P505, DOI 10.1007/s11219-019-09478-x
   Sharma T., 2016, P 1 INT WORKSH BRING
   Soliman M, 2018, 2018 IEEE 15TH INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE (ICSA), P186, DOI 10.1109/ICSA.2018.00028
   STEVENS WP, 1974, IBM SYST J, V13, P115, DOI 10.1147/sj.132.0115
   STONE M, 1974, J R STAT SOC B, V36, P111, DOI 10.1111/j.2517-6161.1974.tb00994.x
   Strumbelj E, 2014, KNOWL INF SYST, V41, P647, DOI 10.1007/s10115-013-0679-x
   Tan J, 2021, PROC IEEE INT CONF S, P251, DOI 10.1109/ICSME52107.2021.00029
   Tempero E, 2010, ASIA PAC SOFWR ENG, P336, DOI 10.1109/APSEC.2010.46
   Terra R., 2013, SIGSOFT Softw. Eng. Not., V38, P1, DOI [10.1145/2507288.2507314, DOI 10.1145/2507288.2507314]
   Tie-Yan Liu, 2009, Foundations and Trends in Information Retrieval, V3, P225, DOI 10.1561/1500000016
   Tsantalis N, 2011, EUR CON SFTWR MTNCE, P25, DOI 10.1109/CSMR.2011.7
   Van Solingen R., 2002, ENCY SOFTWARE ENG
   Verdecchia R., 2020, PROC 15 INT C EVAL N, P531, DOI DOI 10.5220/0009577805310539
   Verdecchia R, 2022, PEERJ COMPUT SCI, V8, DOI 10.7717/peerj-cs.833
   Verdecchia R, 2018, 2018 IEEE/ACM INTERNATIONAL CONFERENCE ON TECHNICAL DEBT (TECHDEBT), P11, DOI 10.1145/3194164.3194176
   Vidal SA, 2016, AUTOMAT SOFTW ENG, V23, P501, DOI 10.1007/s10515-014-0175-x
   Wang XH, 2018, CIKM'18: PROCEEDINGS OF THE 27TH ACM INTERNATIONAL CONFERENCE ON INFORMATION AND KNOWLEDGE MANAGEMENT, P1313, DOI 10.1145/3269206.3271784
   Wienss J., 2013, SIMUTOOLS, P41
   Wu WS, 2018, LECT NOTES COMPUT SC, V11048, P303, DOI 10.1007/978-3-030-00761-4_20
   Xiao L, 2016, PROC INT CONF SOFTW, P488, DOI 10.1145/2884781.2884822
   Zampetti F, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-021-10031-3
NR 88
TC 0
Z9 0
U1 1
U2 1
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD AUG
PY 2023
VL 49
IS 8
BP 4169
EP 4195
DI 10.1109/TSE.2023.3286179
PG 27
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA P3WA9
UT WOS:001049968200013
OA Green Published, Green Submitted, Bronze
DA 2024-07-18
ER

PT J
AU Cassano, F
   Gouwar, J
   Nguyen, D
   Nguyen, S
   Phipps-Costin, L
   Pinckney, D
   Yee, MH
   Zi, YT
   Anderson, CJ
   Feldman, MQ
   Guha, A
   Greenberg, M
   Jangda, A
AF Cassano, Federico
   Gouwar, John
   Nguyen, Daniel
   Nguyen, Sydney
   Phipps-Costin, Luna
   Pinckney, Donald
   Yee, Ming-Ho
   Zi, Yangtian
   Anderson, Carolyn Jane
   Feldman, Molly Q.
   Guha, Arjun
   Greenberg, Michael
   Jangda, Abhinav
TI MultiPL-E: A Scalable and Polyglot Approach to Benchmarking Neural Code
   Generation
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE B.2.3 reliability; testing; and fault-tolerance; I.5.1.D neural nets
AB Large language models have demonstrated the ability to generate both natural language and programming language text. Although contemporary code generation models are trained on corpora with several programming languages, they are tested using benchmarks that are typically monolingual. The most widely used code generation benchmarks only target Python, so there is little quantitative evidence of how code generation models perform on other programming languages. We propose MultiPL-E, a system for translating unit test-driven code generation benchmarks to new languages. We create the first massively multilingual code generation benchmark by using MultiPL-E to translate two popular Python code generation benchmarks to 18 additional programming languages. We use MultiPL-E to extend the HumanEval benchmark (Chen et al., 2021) and MBPP benchmark (Austin et al., 2021) to 18 languages that encompass a range of programming paradigms and popularity. Using these new parallel benchmarks, we evaluate the multi-language performance of three state-of-the-art code generation models: Codex (Chen et al., 2021), CodeGen (Nijkamp et al., 2022) and InCoder (Fried et al., 2022). We find that Codex matches or even exceeds its performance on Python for several other languages. The range of programming languages represented in MultiPL-E allow us to explore the impact of language frequency and language features on model performance. Finally, the MultiPL-E approach of compiling code generation benchmarks to new programming languages is both scalable and extensible, making it straightforward to evaluate new models, benchmarks, and languages.
C1 [Cassano, Federico; Gouwar, John; Phipps-Costin, Luna; Pinckney, Donald; Yee, Ming-Ho; Zi, Yangtian; Guha, Arjun] Northeastern Univ, Comp Sci, Boston, MA 02115 USA.
   [Nguyen, Daniel] Hanover High Sch, Hanover, NH 03755 USA.
   [Nguyen, Sydney; Anderson, Carolyn Jane] Wellesley Coll, Comp Sci, Wellesley, MA 02481 USA.
   [Feldman, Molly Q.] Oberlin Coll, Comp Sci, Oberlin, OH 44074 USA.
   [Greenberg, Michael] Stevens Inst Technol, Comp Sci, Hoboken, NJ 07030 USA.
   [Jangda, Abhinav] Microsoft Res, Redmond, WA 98052 USA.
C3 Northeastern University; Wellesley College; University System of Ohio;
   Oberlin College; Stevens Institute of Technology; Microsoft
RP Guha, A (corresponding author), Northeastern Univ, Comp Sci, Boston, MA 02115 USA.
EM cassano.f@northeastern.edu; gouwar.j@northeastern.edu;
   dnguyen23@hanoverstudents.org; sn102@wellesley.edu;
   phipps-costin.l@northeastern.edu; pinckney.d@northeastern.edu;
   mh@mhyee.com; zi.ya@northeastern.edu; carolyn.anderson@wellesley.edu;
   mfeldman@oberlin.edu; a.guha@northeastern.edu;
   michael@greenberg.science; ajangda@microsoft.com
OI Zi, Yangtian/0000-0003-2606-3280; Pinckney, Donald/0000-0001-8612-5178;
   Nguyen, Daniel/0000-0002-4609-0844; Guha, Arjun/0000-0002-7493-3271;
   Anderson, Carolyn Jane/0000-0001-5717-4210; Cassano,
   Federico/0000-0002-9318-7454
FU National Science Foundation [CCF-2052696]
FX This work was supported by the National Science Foundation under Grant
   CCF-2052696. Recommended for acceptance by M. Pradel.
CR Aghajanyan A, 2022, Arxiv, DOI [arXiv:2201.07520, 10.48550/arXiv.2201.07520]
   Ahmed T, 2022, PROC INT CONF SOFTW, P1443, DOI 10.1145/3510003.3510049
   Allal L. B., 2023, PROC DEEP LEARN CODE
   Alur R, 2015, NATO SCI PEAC SECUR, V40, P1, DOI 10.3233/978-1-61499-495-4-1
   Athiwaratkun B., 2022, P INT C LEARN REPR
   Bates D, 2015, J STAT SOFTW, V67, P1, DOI 10.18637/jss.v067.i01
   Bei Chen, 2022, Arxiv, DOI arXiv:2207.10397
   Black S., 2022, arXiv
   Brown T., 2020, P ADV NEUR INF PROC, V33, P1877
   Chaudhuri S, 2021, FOUND TRENDS PROGRAM, V7, P158, DOI 10.1561/2500000049
   Chen Mark, 2021, arXiv, DOI DOI 10.48550/ARXIV.2107.03374
   Chowdhery A, 2022, Arxiv, DOI [arXiv:2204.02311, DOI 10.48550/ARXIV.2204.02311]
   Clement CB, 2020, PROCEEDINGS OF THE 2020 CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING (EMNLP), P9052
   Drori I, 2022, P NATL ACAD SCI USA, V119, DOI 10.1073/pnas.2123433119
   Feng Zhangyin, 2020, ARXIV200208155
   Fried D., 2022, PROC INT C LEARN REP
   Gao L, 2020, Arxiv, DOI arXiv:2101.00027
   Gulwani S, 2017, FOUND TRENDS PROGRAM, V4, P1, DOI 10.1561/2500000010
   Hellendoorn VJ, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P152, DOI 10.1145/3236024.3236051
   Hendrycks D., 2021, PROC C NEURAL INF PR
   Holtzman A., 2020, PROC INT C LEARN REP
   Iyer S, 2018, 2018 CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING (EMNLP 2018), P1643
   Kulal S, 2019, ADV NEUR IN, V32
   Li YJ, 2022, SCIENCE, V378, P1092, DOI 10.1126/science.abq1158
   Lu S., 2021, PROC C NEURAL INF PR
   Nijkamp E., 2022, P INT C LEARN REPR
   Odena A., 2021, arXiv, DOI DOI 10.48550/ARXIV.2108.07732
   Papineni K, 2002, 40TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, PROCEEDINGS OF THE CONFERENCE, P311, DOI 10.3115/1073083.1073135
   Pradel M, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P209, DOI 10.1145/3368089.3409715
   Ren S, 2020, Arxiv, DOI [arXiv:2009.10297, 10.48550/arXiv.2009.10297]
   Tufano M, 2021, Arxiv, DOI [arXiv:2009.05617, 10.48550/ARXIV.2009.05617]
   Tunstall L, 2022, Natural Language Processing with Transformers
   Vaswani A, 2017, ADV NEUR IN, V30
   Wang B., 2021, GPT J 6B 6 BILL PAR
   Wang ZR, 2022, Arxiv, DOI arXiv:2203.08388
   Wei J., 2020, PROC INT C LEARN REP
   Xu Frank F., 2022, MAPS 2022: Proceedings of the 6th ACM SIGPLAN International Symposium on Machine Programming, P1, DOI 10.1145/3520312.3534862
   Yin PC, 2018, IEEE WORK CONF MIN S, P476, DOI 10.1145/3196398.3196408
   Yu T, 2018, 2018 CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING (EMNLP 2018), P3911
   Zhong VC, 2017, Arxiv, DOI arXiv:1709.00103
   Ziegler Albert, 2022, MAPS 2022: Proceedings of the 6th ACM SIGPLAN International Symposium on Machine Programming, P21, DOI 10.1145/3520312.3534864
NR 41
TC 4
Z9 5
U1 8
U2 16
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUL
PY 2023
VL 49
IS 7
BP 3675
EP 3691
DI 10.1109/TSE.2023.3267446
PG 17
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA M9RA6
UT WOS:001033501500002
OA hybrid
DA 2024-07-18
ER

PT J
AU Ling, X
   Menzies, T
AF Ling, Xiao
   Menzies, Tim
TI What Not to Test (For Cyber-Physical Systems)
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Search-based software engineering; modeling and model-driven
   engineering; validation and verification; software testing;
   simulation-based testing; multi-goal optimization
ID TEST-CASE SELECTION; TEST-CASE GENERATION; FAULT-DETECTION;
   MINIMIZATION; PRIORITIZATION; ALGORITHM; STRATEGIES; PARETO
AB For simulation-based systems, finding a set of test cases with the least cost by exploring multiple goals is a complex task. Domain-specific optimization goals (e.g., maximize output variance) are useful for guiding the rapid selection of test cases via mutation. But evaluating the selected test cases via mutation (that can distinguish the current program from) is a different goal to domain-specific optimizations. While the optimization goals can be used to guide the mutation analysis, that guidance should be viewed as a weak indicator since it can hurt the mutation effectiveness goals by focusing too much on the optimization goals. Based on the above, this paper proposes DoLesS (Domination with Least Squares Approximation) that selects the minimal and effective test cases by averaging over a coarse-grained grid of the information gained from multiple optimizations goals. DoLesS applies an inverted least squares approximation approach to find a minimal set of tests that can distinguish better from worse parts of the optimization goals. When tested on multiple simulation-based systems, DoLesS performs as well or even better as the prior state-of-the-art, while running 80-360 times faster on average (seconds instead of hours).
C1 [Ling, Xiao; Menzies, Tim] North Carolina State Univ, Dept Comp Sci, Raleigh, NC 27695 USA.
C3 North Carolina State University
RP Ling, X (corresponding author), North Carolina State Univ, Dept Comp Sci, Raleigh, NC 27695 USA.
EM xling4@ncsu.edu; timm@ieee.org
RI Menzies, Tim/X-7680-2019
OI Menzies, Tim/0000-0002-5040-3196; Ling, Xiao/0000-0002-1398-9319
FU National Science Foundation [1908762]
FX This work was supported by the National Science Foundation under Grant
   1908762.Recommended for acceptance by Y. Cai.(Corresponding author: Xiao
   Ling.).
CR Ahmed BS, 2016, ENG SCI TECHNOL, V19, P737, DOI 10.1016/j.jestch.2015.11.006
   Arrieta A., 2016, P 20 INT SYST SOFTW, P297, DOI 10.1145/2934466.2946046
   Arrieta A, 2019, INFORM SOFTWARE TECH, V114, P137, DOI 10.1016/j.infsof.2019.06.009
   Arrieta A, 2019, J SYST SOFTWARE, V149, P1, DOI 10.1016/j.jss.2018.09.055
   Arrieta A, 2018, IEEE T IND INFORM, V14, P1055, DOI 10.1109/TII.2017.2788019
   Binkley D, 1995, INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE, 1995 PROCEEDINGS, P251, DOI 10.1109/ICSM.1995.526547
   Brillout Angelo, 2009, Proceedings of Formal Methods for Components and Objects. 8th International Symposium (FMCO 2009). Revised Selected Papers, P208, DOI 10.1007/978-3-642-17071-3_11
   Cartaxo EG, 2011, SOFTW TEST VERIF REL, V21, P75, DOI 10.1002/stvr.413
   Chen TY, 2001, SOFTW TEST VERIF REL, V11, P165, DOI 10.1002/stvr.221
   Chowdhury SA, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P981, DOI 10.1145/3180155.3180231
   de Souza L. S., 2015, J BRAZ COMPUT SOC, V21, P1
   Deb K, 2002, IEEE T EVOLUT COMPUT, V6, P182, DOI 10.1109/4235.996017
   Deb K, 2014, IEEE T EVOLUT COMPUT, V18, P577, DOI 10.1109/TEVC.2013.2281535
   Devroey X., 2017, DISSIMILAR TEST CASE
   Devroey X, 2016, TENTH INTERNATIONAL WORKSHOP ON VARIABILITY MODELLING OF SOFTWARE-INTENSIVE SYSTEMS (VAMOS 2016), P89, DOI 10.1145/2866614.2866627
   Di Nardo D, 2015, SOFTW TEST VERIF REL, V25, P371, DOI 10.1002/stvr.1572
   Elbaum S, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P235, DOI 10.1145/2635868.2635910
   Engström E, 2010, INFORM SOFTWARE TECH, V52, P14, DOI 10.1016/j.infsof.2009.07.001
   Feldt R, 2010, 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING & KNOWLEDGE ENGINEERING (SEKE 2010), P374
   Fremont DJ, 2020, IEEE INT C INTELL TR, DOI 10.1109/itsc45102.2020.9294368
   González CA, 2018, 21ST ACM/IEEE INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS 2018), P176, DOI 10.1145/3239372.3239409
   Grindall M, 2006, EMPIR SOFTW ENG, V11, P583, DOI 10.1007/s10664-006-9024-2
   Hemmati Hadi, 2010, Proceedings of the 2010 IEEE 21st International Symposium on Software Reliability Engineering (ISSRE 2010), P141, DOI 10.1109/ISSRE.2010.9
   Hess M., 2004, Annual Meeting of the American Educational Research Association, P1
   Jia Y, 2011, IEEE T SOFTWARE ENG, V37, P649, DOI 10.1109/TSE.2010.62
   Lachmann R, 2017, PROCEEDINGS OF THE 2017 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE (GECCO'17), P1311, DOI 10.1145/3071178.3071189
   Hanh LTM, 2016, J SYST SOFTWARE, V120, P17, DOI 10.1016/j.jss.2016.07.001
   Le Thi My Hanh, 2012, 2012 Fourth International Conference on Knowledge and Systems Engineering (KSE), P54, DOI 10.1109/KSE.2012.22
   Ling X, 2021, IEEE T SOFTWARE ENG, V48, P2526, DOI 10.1109/TSE.2021.3063220
   Macbeth G, 2011, UNIV PSYCHOL, V10, P545, DOI 10.11144/Javeriana.upsy10-2.cdcp
   Maia C. L. B., 2009, P AN 41 S BRAS PESQ, P1824
   Margalit D., 2017, Interactive Linear Algebra
   Matinnejad R, 2019, IEEE T SOFTWARE ENG, V45, P919, DOI 10.1109/TSE.2018.2811489
   Matinnejad R, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P938, DOI 10.1145/3106237.3117770
   Matinnejad R, 2016, PROC INT CONF SOFTW, P595, DOI 10.1145/2884781.2884797
   Matinnejad R, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P84, DOI 10.1145/2786805.2786818
   Menghi C, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P27, DOI 10.1145/3338906.3338920
   Mittas N, 2013, IEEE T SOFTWARE ENG, V39, P537, DOI 10.1109/TSE.2012.45
   Mondal D., 2015, 8th International Conference on Software Testing, Verification and Validation, ICST15, P1
   Nair V, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P257, DOI 10.1145/3106237.3106238
   Offutt AJ, 1996, SOFTWARE PRACT EXPER, V26, P165, DOI 10.1002/(SICI)1097-024X(199602)26:2<165::AID-SPE5>3.0.CO;2-K
   Panichella A, 2018, IEEE T SOFTWARE ENG, V44, P122, DOI 10.1109/TSE.2017.2663435
   Panichella A, 2015, IEEE T SOFTWARE ENG, V41, P358, DOI 10.1109/TSE.2014.2364175
   Papadakis M, 2019, ADV COMPUT, V112, P275, DOI 10.1016/bs.adcom.2018.03.015
   Papadakis M, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P936, DOI 10.1109/ICSE.2015.103
   Pizzoleto AV, 2019, J SYST SOFTWARE, V157, DOI 10.1016/j.jss.2019.07.100
   Pornprasit C, 2023, IEEE T SOFTWARE ENG, V49, P84, DOI 10.1109/TSE.2022.3144348
   Pradhan D, 2016, GECCO'16: PROCEEDINGS OF THE 2016 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P1085, DOI 10.1145/2908812.2908850
   Ratner A, 2019, AAAI CONF ARTIF INTE, P4763
   Rothermel G, 2000, SOFTW TEST VERIF REL, V10, P77, DOI 10.1002/1099-1689(200006)10:2<77::AID-STVR197>3.0.CO;2-E
   SAGARDUI G, 2017, 2017 IEEE INT WORKSH, P1
   Sayyad AS, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P492, DOI 10.1109/ICSE.2013.6606595
   Schuler D, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P297, DOI 10.1145/1595696.1595750
   Tu H., 2018, FSE SWAN
   Tu H, 2021, IEEE WORK CONF MIN S, P1, DOI 10.1109/MSR52588.2021.00013
   Tu H, 2022, IEEE T SOFTWARE ENG, V48, P278, DOI 10.1109/TSE.2020.2986415
   Wagner T, 2007, LECT NOTES COMPUT SC, V4403, P742
   Wang JJ, 2021, IEEE T SOFTWARE ENG, V47, P1259, DOI 10.1109/TSE.2019.2918520
   Wang SA, 2013, GECCO'13: PROCEEDINGS OF THE 2013 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P1493
   Wong WE, 1998, SOFTWARE PRACT EXPER, V28, P347, DOI 10.1002/(SICI)1097-024X(19980410)28:4<347::AID-SPE145>3.0.CO;2-L
   Wong WE, 1997, P INT COMP SOFTW APP, P522, DOI 10.1109/CMPSAC.1997.625062
   Xia T., 2018, arXiv
   Xu ZW, 2005, PROCEEDINGS OF THE 2005 IEEE INTERNATIONAL CONFERENCE ON INFORMATION REUSE AND INTEGRATION, P120
   Yin Yongfeng, 2014, Applied Mechanics and Materials, V687-691, P1389, DOI 10.4028/www.scientific.net/AMM.687-691.1389
   Yoo S, 2012, SOFTW TEST VERIF REL, V22, P67, DOI [10.1002/stv.430, 10.1002/stvr.430]
   Yoo S, 2010, J SYST SOFTWARE, V83, P689, DOI 10.1016/j.jss.2009.11.706
   Zhan Y, 2005, GECCO 2005: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOLS 1 AND 2, P1061
   Zhang QF, 2007, IEEE T EVOLUT COMPUT, V11, P712, DOI 10.1109/TEVC.2007.892759
   Zheng W, 2016, INFORM SCIENCES, V334, P1, DOI 10.1016/j.ins.2015.11.027
   Zitzler E, 2004, LECT NOTES COMPUT SC, V3242, P832
NR 70
TC 2
Z9 2
U1 0
U2 1
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUL
PY 2023
VL 49
IS 7
BP 3811
EP 3826
DI 10.1109/TSE.2023.3272309
PG 16
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA M9RA6
UT WOS:001033501500009
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Okutan, A
   Mell, P
   Mirakhorli, M
   Khokhlov, I
   Santos, JCS
   Gonzalez, D
   Simmons, S
AF Okutan, Ahmet
   Mell, Peter
   Mirakhorli, Mehdi
   Khokhlov, Igor
   Santos, Joanna C. S.
   Gonzalez, Danielle
   Simmons, Steven
TI Empirical Validation of Automated Vulnerability Curation and
   Characterization
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Security; NIST; Databases; Virtual machine monitors; Software; Feature
   extraction; Codes; CVE; NIST vulnerability description ontology;
   software vulnerability; vulnerability characterization
ID INFORMATION; GENERATION
AB Prior research has shown that public vulnerability systems such as US National Vulnerability Database (NVD) rely on a manual, time-consuming, and error-prone process which has led to inconsistencies and delays in releasing final vulnerability results. This work provides an approach to curate vulnerability reports in real-time and map textual vulnerability reports to machine readable structured vulnerability attribute data. Designed to support the time consuming human analysis done by vulnerability databases, the system leverages the Common Vulnerabilities and Exposures (CVE) list of vulnerabilities and the vulnerability attributes described by the National Institute of Standards and Technology (NIST) Vulnerability Description Ontology (VDO) framework. Our work uses Natural Language Processing (NLP), Machine Learning (ML) and novel Information Theoretical (IT) methods to provide automated techniques for near real-time publishing, and characterization of vulnerabilities using 28 attributes in 5 domains. Experiment results indicate that vulnerabilities can be evaluated up to 95 hours earlier than using manual methods, they can be characterized with F-Measure values over 0.9, and the proposed automated approach could save up to 47% of the time spent for CVE characterization.
C1 [Okutan, Ahmet] Leidos, Reston, VA 20190 USA.
   [Mell, Peter] Natl Inst Stand & Technol, Gaithersburg, MD 20899 USA.
   [Mirakhorli, Mehdi; Gonzalez, Danielle; Simmons, Steven] Rochester Inst Technol, Dept Software Engn, Rochester, NY 14623 USA.
   [Khokhlov, Igor] Sacred Heart Univ, Fairfield, CT 06825 USA.
   [Santos, Joanna C. S.] Univ Notre Dame, Dept Comp Sci & Engn, Notre Dame, IN 46556 USA.
C3 National Institute of Standards & Technology (NIST) - USA; Rochester
   Institute of Technology; Sacred Heart University; University of Notre
   Dame
RP Okutan, A (corresponding author), Leidos, Reston, VA 20190 USA.
EM ahmet.okutan@gmail.com; peter.mell@nist.gov; mxmvse@rit.edu;
   khokhlovi@sacredheart.edu; joannacss@nd.edu; dng2551@rit.edu;
   sds9278@rit.edu
RI da Silva Santos, Joanna Cecilia/AAF-7544-2021
OI da Silva Santos, Joanna Cecilia/0000-0001-8743-2516; Mirakhorli,
   Mehdi/0000-0003-3470-6856; Mirakhorli, Mehdi/0009-0000-7963-3756
FU U.S. Department of Homeland Security [70RSAT19CB0000020]
FX This work was supported by the U.S. Department of Homeland Security
   under Grant 70RSAT19CB0000020
CR [Anonymous], 2016, Uco: a Unified Cybersecurity Ontology
   [Anonymous], 2019, Common vulnerability scoring system
   Apache OpenNLP, 2011, US
   Arbaugh WA, 2000, COMPUTER, V33, P52, DOI 10.1109/2.889093
   Armold AD, 2006, 2006 IEEE INFORMATION ASSURANCE WORKSHOP, P376, DOI 10.1109/IAW.2006.1652119
   Booth H., 2016, Technical Report
   Boser B. E., 1992, Proceedings of the Fifth Annual ACM Workshop on Computational Learning Theory, P144, DOI 10.1145/130385.130401
   Breiman L., 2001, Machine Learning, V45, P5, DOI 10.1023/A:1010933404324
   Brumley D, 2008, P IEEE S SECUR PRIV, P143, DOI 10.1109/SP.2008.17
   Brumley D, 2006, P IEEE S SECUR PRIV, P2, DOI 10.1109/SP.2006.41
   Cabrey C., 2016, THESIS ROCHESTER I T
   Chandrasekaran M, 2006, IEEE IPCCC, P603, DOI 10.1109/.2006.1629458
   Conradi R., 2003, Empirical Methods and Studies in Software Engineering: Experiences from ESERNET
   Dong Y, 2019, PROCEEDINGS OF THE 28TH USENIX SECURITY SYMPOSIUM, P869
   Dwyer K, 2007, LECT NOTES ARTIF INT, V4701, P128
   exploit-db, EXPL DAT EXPL PEN TE
   Fan JH, 2020, IEEE WORK CONF MIN S, P508, DOI 10.1145/3379597.3387501
   Farahmand F., 2003, P 5 INT C EL COMM, P348
   Frei Stefan, 2006, P 2006 SIGCOMM WORKS, P131, DOI 10.1145/1162666.1162671
   Gerth J., 2015, P 10 ANN CYB INF SEC, P1, DOI DOI 10.1145/2746266.2746278
   Gkortzis A, 2018, IEEE WORK CONF MIN S, P18, DOI 10.1145/3196398.3196454
   Gong X, 2019, IEEE INT C ENG COMP, P31, DOI 10.1109/ICECCS.2019.00011
   Gonzalez D, 2019, PROC IEEE INT CONF S, P135, DOI 10.1109/ICSME.2019.00023
   Grajeda C, 2017, DIGIT INVEST, V22, pS94, DOI 10.1016/j.diin.2017.06.004
   Habalov R., VULNCODE DB
   Holm H, 2015, COMPUT SECUR, V53, P18, DOI 10.1016/j.cose.2015.04.012
   Huang GY, 2019, IEEE ACCESS, V7, P28291, DOI 10.1109/ACCESS.2019.2900462
   Huang J., 2020, P IEEE S SEC PRIV, P264
   Huang Z, 2019, P IEEE S SECUR PRIV, P539, DOI 10.1109/SP.2019.00071
   Huang Z, 2016, P IEEE S SECUR PRIV, P618, DOI 10.1109/SP.2016.43
   IBM, IBM XFORC EXCH
   John G. H., 1995, Uncertainty in Artificial Intelligence. Proceedings of the Eleventh Conference (1995), P338
   Joshi A, 2013, IEEE INT C SEMANT CO, P252, DOI 10.1109/ICSC.2013.50
   Jumratjaroenvanit A, 2008, PROCEEDINGS OF THE INTERNATIONAL SYMPOSIUM ON ELECTRONIC COMMERCE AND SECURITY, P531, DOI 10.1109/ISECS.2008.212
   Jurafsky D., 2009, SPEECH LANGUAGE PROC, V2nd
   KULLBACK S, 1951, ANN MATH STAT, V22, P79, DOI 10.1214/aoms/1177729694
   Kuncheva LI, 2004, COMBINING PATTERN CL, DOI DOI 10.1002/0471660264
   Ladd B., 2017, The Race Between Security Professionals and Adversaries
   Li F, 2016, PROCEEDINGS OF THE 25TH INTERNATIONAL CONFERENCE ON WORLD WIDE WEB (WWW'16), P1009, DOI 10.1145/2872427.2883039
   Li F, 2016, PROCEEDINGS OF THE 25TH USENIX SECURITY SYMPOSIUM, P1033
   Li R.H., 2002, P 8 ACM SIGKDD INT C, P570, DOI 10.1145/775047.775131
   Machiry A, 2020, P IEEE S SECUR PRIV, P1562, DOI 10.1109/SP40000.2020.00038
   Massacci F., 2010, P 6 INT WORKSHOP SEC, P1, DOI [10.1145/1853919.1853925, DOI 10.1145/1853919.1853925]
   Mirakhorli M, 2016, IEEE T SOFTWARE ENG, V42, P206, DOI 10.1109/TSE.2015.2479217
   More S., 2012, 2012 IEEE CS Security and Privacy Workshops (SPW 2012), P75, DOI 10.1109/SPW.2012.26
   Mu DL, 2018, PROCEEDINGS OF THE 27TH USENIX SECURITY SYMPOSIUM, P919
   Mulwad V., 2011, 2011 IEEE/WIC/ACM International Joint Conferences on Web Intelligence (WI) and Intelligent Agent Technologies, P257, DOI 10.1109/WI-IAT.2011.26
   Namrud Z., 2019, P 29 ANN INT C COMP, P64, DOI [10.5555/3370272.3370279, DOI 10.5555/3370272.3370279]
   National Institute of Standards and Technology (NIST), 2020, NAT VULN DAT NVD
   National Vulnerability Database, 2018, NVD DASHB
   Nguyen VH, 2016, EMPIR SOFTW ENG, V21, P2268, DOI 10.1007/s10664-015-9408-2
   Nguyen VietHung., 2013, P 8 ACM SIGSAC S INF, P493
   Oment A, 2006, USENIX Association Proceedings of the 15th USENIX Security Symposium, P93
   Platt JC, 1999, ADVANCES IN KERNEL METHODS, P185
   Ponta Serena Elisa, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P383, DOI 10.1109/MSR.2019.00064
   Quante J, 2008, INT C PROGRAM COMPRE, P73, DOI 10.1109/ICPC.2008.15
   Quinlan J.R., 1993, C4 5 PROGRAMS MACHIN
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Ruohonen Jukka, 2019, Applied Computing and Informatics, V15, P129, DOI 10.1016/j.aci.2017.12.002
   Sabottke C, 2015, PROCEEDINGS OF THE 24TH USENIX SECURITY SYMPOSIUM, P1041
   Scholte T, 2012, LECT NOTES COMPUT SC, V7035, P284, DOI 10.1007/978-3-642-27576-0_24
   Scholte T, 2012, COMPUT SECUR, V31, P344, DOI 10.1016/j.cose.2011.12.013
   SecurityFocus, US
   Su Zhang, 2011, Database and Expert Systems Applications. Proceedings 22nd International Conference, DEXA 2011, P217, DOI 10.1007/978-3-642-23088-2_15
   Sufatrio, 2004, USENIX ASSOCIATION PROCEEDINGS OF THE EIGHTEENTH LARGE INSTALLATION SYSTEM ADMINISTRATION CONFERENCE, P47
   Vasek M., 2012, Proceedings of the 5th USENIX conference on Cyber Security Experimentation and Test, P6
   VulnDB, US
   Wita R, 2010, 2010 THIRD INTERNATIONAL SYMPOSIUM ON INTELLIGENT INFORMATION TECHNOLOGY AND SECURITY INFORMATICS (IITSI 2010), P553, DOI 10.1109/IITSI.2010.141
   Witten I.H., 2016, DATA MINING 4 EDITIO
   Zhang X, 2020, IEEE ACCESS, V8, P121858, DOI 10.1109/ACCESS.2020.3006361
   Zheng Muwei., 2018, 11 USENIX WORKSHOP C
NR 71
TC 0
Z9 0
U1 2
U2 6
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAY 1
PY 2023
VL 49
IS 5
BP 3241
EP 3260
DI 10.1109/TSE.2023.3250479
PG 20
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA G8MH8
UT WOS:000991628700011
DA 2024-07-18
ER

PT J
AU Barbosa, K
   Ferreira, R
   Pinto, G
   d'Amorim, M
   Miranda, B
AF Barbosa, Keila
   Ferreira, Ronivaldo
   Pinto, Gustavo
   d'Amorim, Marcelo
   Miranda, Breno
TI Test Flakiness Across Programming Languages
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Software; Codes; Testing; Concurrent computing; Java; Costs; Maintenance
   engineering; Regression testing; test flakiness; programming languages
AB Regression Testing (RT) is a quality-assurance practice commonly adopted in the software industry to check if functionality remains intact after code changes. Test flakiness is a serious problem for RT. A test is said to be flaky when it non-deterministically passes or fails on a fixed environment. Prior work studied test flakiness primarily on Java programs. It is unclear, however, how problematic is test flakiness for software written in other programming languages. This paper reports on a study focusing on three central aspects of test flakiness: concentration, similarity, and cost. Considering concentration, our results show that, for any given programming language that we studied (C, Go, Java, JS, and Python), most issues could be explained by a small fraction of root causes (5/13 root causes cover 78.07% of the issues) and could be fixed by a relatively small fraction of fix strategies (10/23 fix strategies cover 85.20% of the issues). Considering similarity, although there were commonalities in root causes and fixes across languages (e.g., concurrency and async wait are common causes of flakiness in most languages), we also found important differences (e.g., flakiness due to improper release of resources are more common in C), suggesting that there is opportunity to fine tuning analysis tools. Considering cost, we found that issues related to flaky tests are resolved either very early once they are posted (<10 days), suggesting relevance, or very late (>100 days), suggesting irrelevance.
C1 [Barbosa, Keila; d'Amorim, Marcelo; Miranda, Breno] Univ Fed Pernambuco, BR-50670901 Recife, PE, Brazil.
   [Ferreira, Ronivaldo; Pinto, Gustavo] Fed Univ Para, BR-66075110 Belem, PA, Brazil.
C3 Universidade Federal de Pernambuco; Universidade Federal do Para
RP Miranda, B (corresponding author), Univ Fed Pernambuco, BR-50670901 Recife, PE, Brazil.
EM kbcs2@cin.ufpe.br; ronivaldo.junior@icen.ufpa.br; gpinto@ufpa.br;
   damorim@cin.ufpe.br; bafm@cin.ufpe.br
RI Miranda, Breno/S-1248-2018; d'Amorim, Marcelo/D-1703-2017
OI Miranda, Breno/0000-0001-9608-9393; Pinto, Gustavo/0000-0001-7598-2799;
   d'Amorim, Marcelo/0000-0002-1323-8769
FU INES 2.0, FACEPE [PRONEX APQ 0388-1.03/14, APQ-0399-1.03/17]; CAPES
   [88887.136410/2017-00]; CNPq [465614/2014-0]; FACEPE [IBPG-1316-1.03/19]
FX This work was supported in part by INES 2.0, FACEPE under Grant PRONEX
   APQ 0388-1.03/14 and APQ-0399-1.03/17, in part by CAPES under Grant
   88887.136410/2017-00, in part by CNPq under Grant 465614/2014-0. The
   work of Keila was supported by a FACEPE fellowship number
   IBPG-1316-1.03/19.
CR Ahmad A, 2021, SOFTW TEST VERIF REL, V31, DOI 10.1002/stvr.1791
   Alshammari A, 2021, PROC INT CONF SOFTW, P1572, DOI 10.1109/ICSE43902.2021.00140
   [Anonymous], 2021, FIX FLAKY TEST TIMEO
   [Anonymous], 2021, SELENIUM TESTS HANG
   [Anonymous], 2021, PYTEST XDIST
   [Anonymous], 2020, STATE OCTOVERSE
   [Anonymous], 2021, TEST FAILURES IOS TE
   [Anonymous], 2021, FLAKY TESTS MACOS
   [Anonymous], 2021, FIX METRICS TOOL COR
   [Anonymous], 2021, SUPPORT WINDOWS
   [Anonymous], 2021, FLAKY TEST SYMANTEC
   [Anonymous], 2021, FIX FLAKY TEST ARCHI
   [Anonymous], 2021, IPHONE TEST IS FLAKY
   [Anonymous], 2021, About us
   [Anonymous], 2021, SERVER TESTS FLAKY T
   [Anonymous], 2021, FIX INTEGRATION JUNI
   [Anonymous], 2021, IDENTIFY CORRECT TES
   [Anonymous], 2021, MAKE TEST SUITE FAST
   [Anonymous], 2021, FIX FLAKY RECREATE I
   [Anonymous], 2021, USE CHAN STORE SENT
   [Anonymous], 2021, FIX SLOW METRICS PRO
   [Anonymous], 2021, FLAKY TEST ATOMATOM
   [Anonymous], 2021, FIX FLAKY CHECKBOX E
   [Anonymous], 2016, FIX 9 2 PARTS
   [Anonymous], 2021, SET SIGNAL MASK FORK
   [Anonymous], 2021, DEAL STARTING STOPP
   [Anonymous], 2021, IGNORED TEST
   [Anonymous], 2021, HANDLE RACE CONDITIO
   [Anonymous], 2021, FLAKY TEST RDFSPEEDI
   [Anonymous], 2021, TEST CONSENSUS LEADE
   [Anonymous], 2021, FLAKY TEST FAILURES
   Awaitility library, 2020, US
   Bell J, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P433, DOI 10.1145/3180155.3180164
   C. Developers, 2021, CHROM FLAK DASHB HOW
   Candido J, 2017, IEEE INT CONF AUTOM, P838, DOI 10.1109/ASE.2017.8115695
   Thorve S, 2018, PROC IEEE INT CONF S, P534, DOI 10.1109/ICSME.2018.00062
   Chen T, 2014, PROCEEDINGS OF THE FIFTH INTERNATIONAL SYMPOSIUM ON TEST AUTOMATION & INSTRUMENTATION, VOLS 1 AND 2, P82
   Data races, 2021, US
   Dong Z, 2021, PROCEEDINGS OF THE 29TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '21), P367, DOI 10.1145/3468264.3468584
   Eck M, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P830, DOI 10.1145/3338906.3338945
   Fix, 2021, FIX CORRECT FAILING
   Fowler M., 2021, CONTINUOUS INTEGRATI
   Gambi A, 2018, IEEE INT CONF SOFTW, P1, DOI 10.1109/ICST.2018.00011
   GitHub, 2020, RED FLAK BUILDS 18X
   Gruber M, 2021, IEEE INT CONF SOFTW, P148, DOI 10.1109/ICST49551.2021.00026
   Haben G, 2021, IEEE WORK CONF MIN S, P219, DOI 10.1109/MSR52588.2021.00034
   Harman M, 2018, IEEE INT WORK C SO, P1, DOI 10.1109/SCAM.2018.00009
   Herzig K, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P39, DOI 10.1109/ICSE.2015.133
   Herzig K, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P483, DOI 10.1109/ICSE.2015.66
   King TM, 2018, 2018 IEEE 18TH INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY AND SECURITY COMPANION (QRS-C), P100, DOI 10.1109/QRS-C.2018.00031
   Lam W, 2020, PROC INT SYMP SOFTW, P403, DOI 10.1109/ISSRE5003.2020.00045
   Lam W, 2020, P ACM PROGRAM LANG, V4, DOI 10.1145/3428270
   Lam W, 2019, PROCEEDINGS OF THE 28TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA '19), P101, DOI 10.1145/3293882.3330570
   Lam W, 2019, IEEE INT CONF SOFTW, P312, DOI 10.1109/ICST.2019.00038
   Lewis S, 2015, HEALTH PROMOT PRACT, V16, P473, DOI 10.1177/1524839915580941
   LISKOV B, 1988, SIGPLAN NOTICES, V23, P260
   Listfield J, 2017, Where do our flaky tests come from?
   Luo QZ, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P643, DOI 10.1145/2635868.2635920
   Meyerson J, 2014, IEEE SOFTWARE, V31, P104, DOI 10.1109/MS.2014.127
   Micco J., 2016, Flaky tests at google and how we mitigate them
   Micco John, 2017, The State of Continuous Integration Testing @Google
   Multiple-filters, 2021, MULTIPLE FILTERS CLI
   next, 2021, NEXT CLIENTTEST FAIL
   Palmer J, 2019, Test Flakiness-Methods for Identifying and Dealing with Flaky Tests
   Pike R., 2012, Proceedings of the 3rd annual conference on Systems, programming, and applications: software for humanity, P5
   Pinto Gustavo, 2020, MSR '20: Proceedings of the 17th International Conference on Mining Software Repositories, P492, DOI 10.1145/3379597.3387482
   Pytest, 2021, HELPS YOU WRIT BETT
   Rahman MT, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P857, DOI 10.1145/3236024.3275529
   Ray B, 2017, COMMUN ACM, V60, P91, DOI 10.1145/3126905
   Romano A, 2021, PROC INT CONF SOFTW, P1585, DOI 10.1109/ICSE43902.2021.00141
   Shi A, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P545, DOI 10.1145/3338906.3338925
   Silva D, 2020, PROC IEEE INT CONF S, P301, DOI 10.1109/ICSME46990.2020.00037
   Sutter H., 2005, ACM Queue, V3, P54, DOI 10.1145/1095408.1095421
   Vahabzadeh A, 2015, PROC IEEE INT CONF S, P101, DOI 10.1109/ICSM.2015.7332456
   Verdecchia R, 2021, IEEE ACCESS, V9, P76119, DOI 10.1109/ACCESS.2021.3082424
   Wang WY, 2021, ISSTA '21: PROCEEDINGS OF THE 30TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P165, DOI 10.1145/3460319.3464828
   Winters Titus, 2020, Software Engineering at Google
NR 77
TC 0
Z9 0
U1 1
U2 2
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD APR 1
PY 2023
VL 49
IS 4
BP 2039
EP 2052
DI 10.1109/TSE.2022.3208864
PG 14
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA E9NM9
UT WOS:000978723600035
DA 2024-07-18
ER

PT J
AU Kim, D
   Kim, E
   Cha, SK
   Son, S
   Kim, Y
AF Kim, Dongkwan
   Kim, Eunsoo
   Cha, Sang Kil
   Son, Sooel
   Kim, Yongdae
TI Revisiting Binary Code Similarity Analysis Using Interpretable Feature
   Engineering and Lessons Learned
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Benchmark testing; Computer architecture; Binary codes; Syntactics;
   Semantics; Licenses; Market research; Binary code similarity analysis;
   similarity measures; feature evaluation and selection; benchmark
ID SEMANTICS; ACCURATE; GRAPH; SOFTWARE; SEARCH
AB Binary code similarity analysis (BCSA) is widely used for diverse security applications, including plagiarism detection, software license violation detection, and vulnerability discovery. Despite the surging research interest in BCSA, it is significantly challenging to perform new research in this field for several reasons. First, most existing approaches focus only on the end results, namely, increasing the success rate of BCSA, by adopting uninterpretable machine learning. Moreover, they utilize their own benchmark, sharing neither the source code nor the entire dataset. Finally, researchers often use different terminologies or even use the same technique without citing the previous literature properly, which makes it difficult to reproduce or extend previous work. To address these problems, we take a step back from the mainstream and contemplate fundamental research questions for BCSA. Why does a certain technique or a certain feature show better results than the others? Specifically, we conduct the first systematic study on the basic features used in BCSA by leveraging interpretable feature engineering on a large-scale benchmark. Our study reveals various useful insights on BCSA. For example, we show that a simple interpretable model with a few basic features can achieve a comparable result to that of recent deep learning-based approaches. Furthermore, we show that the way we compile binaries or the correctness of underlying binary analysis tools can significantly affect the performance of BCSA. Lastly, we make all our source code and benchmark public and suggest future directions in this field to help further research.
C1 [Kim, Dongkwan; Kim, Eunsoo; Cha, Sang Kil; Son, Sooel; Kim, Yongdae] Korea Adv Inst Sci & Technol, Daejeon 34141, South Korea.
C3 Korea Advanced Institute of Science & Technology (KAIST)
RP Cha, SK (corresponding author), Korea Adv Inst Sci & Technol, Daejeon 34141, South Korea.
EM dkay@kaist.ac.kr; hahah@kaist.ac.kr; sangkilc@kaist.ac.kr;
   sl.son@kaist.ac.kr; yongdaek@kaist.ac.kr
OI Kim, Yongdae/0000-0003-4879-1262; Son, Sooel/0000-0003-0904-2875; Cha,
   Sang Kil/0000-0002-6012-7228
FU Institute of Information & Communications Technology Planning &
   Evaluation (IITP) Grant, Korea Government (MSIT) [2021-0-01332]
FX This work was supported by the Institute of Information & Communications
   Technology Planning & Evaluation (IITP) Grant, Korea Government
   (MSIT)under Grant 2021-0-01332, Developing Next-Generation Binary
   Decompiler.
CR Alrabaee S, 2020, IEEE T INF FOREN SEC, V15, P3051, DOI 10.1109/TIFS.2020.2980190
   Alrabaee S, 2018, ACM T PRIV SECUR, V21, DOI 10.1145/3175492
   Alrabaee S, 2016, DIGIT INVEST, V18, pS11, DOI 10.1016/j.diin.2016.04.002
   Alrabaee S, 2015, DIGIT INVEST, V12, pS61, DOI 10.1016/j.diin.2015.01.011
   Andriesse D, 2017, 2017 IEEE EUROPEAN SYMPOSIUM ON SECURITY AND PRIVACY (EUROS&P), P177, DOI 10.1109/EuroSP.2017.11
   Andriesse D, 2016, PROCEEDINGS OF THE 25TH USENIX SECURITY SYMPOSIUM, P583
   [Anonymous], Diaphora: A Free and Open Source Program Diffing Tool
   [Anonymous], 2006, P 2006 ACM SIGPLAN S
   [Anonymous], 2007, MIR
   [Anonymous], CLANG CLANG C C OBJE
   [Anonymous], GNU PACKAGES
   [Anonymous], 2006, GPL VIOLATIONSORG PR
   [Anonymous], STUNNIX C C OBFUSCAT
   Arandjelovic R, 2013, PROC CVPR IEEE, P1578, DOI 10.1109/CVPR.2013.207
   Artuso F, 2021, Arxiv, DOI arXiv:1912.07946
   Babic Domagoj, 2011, Computer Aided Verification. Proceedings 23rd International Conference, CAV 2011, P116, DOI 10.1007/978-3-642-22110-1_10
   Bao T, 2014, PROCEEDINGS OF THE 23RD USENIX SECURITY SYMPOSIUM, P845
   Bindiff, ABOUT AS
   Bourquin Martial, 2013, P 2 ACM SIGPLAN PROG
   Bromley J., 1993, International Journal of Pattern Recognition and Artificial Intelligence, V7, P669, DOI 10.1142/S0218001493000339
   Brumley D., 2013, P 22TH USENIX SECURI, P353
   Bunke H, 1997, PATTERN RECOGN LETT, V18, P689, DOI 10.1016/S0167-8655(97)00060-3
   Calvet J., 2012, P 2012 ACM C COMP CO, P169, DOI DOI 10.1145/2382196.2382217
   Canali D., 2012, P 2012 INT S SOFTW T, P122, DOI [10.1145/2338965.2336768, DOI 10.1145/2338965.2336768]
   Tol MC, 2021, Arxiv, DOI arXiv:2006.14147
   Capstone, ULT DIS
   Caruana R., 1994, P 11 INT C INT C MAC, P28, DOI [10.1016/B978-1-55860-335-6.50012-X, DOI 10.1016/B978-1-55860-335-6.50012-X]
   Cha Sang Kil, 2010, NSDI, P377
   Chandramohan M, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P678, DOI 10.1145/2950290.2950350
   Chen K, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P175, DOI 10.1145/2568225.2568286
   Chua ZL, 2017, PROCEEDINGS OF THE 26TH USENIX SECURITY SYMPOSIUM (USENIX SECURITY '17), P99
   Collberg C., 2015, TIGRESS C DIVERSIFIE, V14
   Comparetti PM, 2010, P IEEE S SECUR PRIV, P61, DOI 10.1109/SP.2010.12
   Crosstool-NG, ABOUT AS
   Dai HJ, 2016, PR MACH LEARN RES, V48
   David Y, 2018, ACM SIGPLAN NOTICES, V53, P392, DOI [10.1145/3173162.3177157, 10.1145/3296957.3177157]
   David Y, 2017, ACM SIGPLAN NOTICES, V52, P79, DOI [10.1145/3140587.3062387, 10.1145/3062341.3062387]
   David Y, 2016, ACM SIGPLAN NOTICES, V51, P266, DOI [10.1145/2908080.2908126, 10.1145/2980983.2908126]
   David Y, 2014, ACM SIGPLAN NOTICES, V49, P349, DOI [10.1145/2594291.2594343, 10.1145/2666356.2594343]
   Ding SHH, 2019, P IEEE S SECUR PRIV, P472, DOI 10.1109/SP.2019.00003
   Ding SHH, 2016, KDD'16: PROCEEDINGS OF THE 22ND ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P461, DOI 10.1145/2939672.2939719
   Duan Y, 2020, 27TH ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2020), DOI 10.14722/ndss.2020.24311
   Dullien T, 2005, S SEC TECHN INF COMM, V5, P3
   Egele M, 2014, PROCEEDINGS OF THE 23RD USENIX SECURITY SYMPOSIUM, P303
   ElWazeer K, 2013, ACM SIGPLAN NOTICES, V48, P51, DOI 10.1145/2499370.2462165
   Eschweiler S, 2016, 23RD ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2016), DOI 10.14722/ndss.2016.23185
   Farhadi MR, 2014, INT CONF SOFTW SECUR, P78, DOI 10.1109/SERE.2014.21
   Feng Q., 2016, P 2016 ACM SIGSAC C, P480, DOI [10.1145/2976749.2978370, DOI 10.1145/2976749.2978370]
   Feng Q, 2017, PROCEEDINGS OF THE 2017 ACM ASIA CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY (ASIA CCS'17), P346, DOI 10.1145/3052973.3052995
   FERRANTE J, 1987, ACM T PROGR LANG SYS, V9, P319, DOI 10.1145/24039.24041
   Flake H., 2004, Proceedings of the Detection of Intrusions and Malware Vulnerability Assessment, GI SIG SIDAR Workshop, DIMVA 2004, Dortmund, Germany, 6-7 July 2004, P161, DOI [10.17877/DE290R-2007, DOI 10.17877/DE290R-2007]
   Forrest S, 1996, P IEEE S SECUR PRIV, P120, DOI 10.1109/SECPRI.1996.502675
   Gao DB, 2008, LECT NOTES COMPUT SC, V5308, P238
   Gao J, 2018, IEEE INT CONF AUTOM, P896, DOI 10.1145/3238147.3240480
   Geurts P, 2006, MACH LEARN, V63, P3, DOI 10.1007/s10994-006-6226-1
   Gröbert F, 2011, LECT NOTES COMPUT SC, V6961, P41, DOI 10.1007/978-3-642-23644-0_3
   Guo H, 2020, IEEE ACCESS, V8, P120501, DOI 10.1109/ACCESS.2020.3004813
   Guyon I., 2003, Journal of Machine Learning Research, V3, P1157, DOI 10.1162/153244303322753616
   Hagberg A. A., 2008, EXPLORING NETWORK ST, P11, DOI DOI 10.1016/J.JELECTROCARD.2010.09.003
   He JX, 2018, PROCEEDINGS OF THE 2018 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY (CCS'18), P1667, DOI 10.1145/3243734.3243866
   Hemel A., 2011, P 8 WORK C MIN SOFTW, P63
   HENRY S, 1981, IEEE T SOFTWARE ENG, V7, P510, DOI 10.1109/TSE.1981.231113
   hex-rays, IDA Pro
   Hiebert D., 1999, EXUBERANT CTAGS
   Hochreiter S, 1997, NEURAL COMPUT, V9, P1735, DOI [10.1162/neco.1997.9.1.1, 10.1007/978-3-642-24797-2]
   HORWITZ S, 1990, ACM T PROGR LANG SYS, V12, P26, DOI [10.1145/77606.77608, 10.1145/960116.53994]
   Hu X, 2009, CCS'09: PROCEEDINGS OF THE 16TH ACM CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P611
   Hu YK, 2019, IEEE ACCESS, V7, P28170, DOI 10.1109/ACCESS.2019.2901951
   Hu YK, 2018, PROC IEEE INT CONF S, P104, DOI 10.1109/ICSME.2018.00019
   Hu YK, 2017, INT C PROGRAM COMPRE, P88, DOI 10.1109/ICPC.2017.22
   Hu YK, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P57, DOI 10.1109/SANER.2016.50
   Huang H, 2017, PROCEEDINGS OF THE 2017 ACM ASIA CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY (ASIA CCS'17), P155, DOI 10.1145/3052973.3052974
   Intel Corporation, Intel 64 and IA-32 Architectures Software Developer's Manuals
   Jang JY, 2011, PROCEEDINGS OF THE 18TH ACM CONFERENCE ON COMPUTER & COMMUNICATIONS SECURITY (CCS 11), P309
   Jang JY, 2012, P IEEE S SECUR PRIV, P48, DOI 10.1109/SP.2012.13
   Ji YD, 2021, ASIA CCS'21: PROCEEDINGS OF THE 2021 ACM ASIA CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P702, DOI 10.1145/3433210.3437533
   Jia L, 2020, IEEE ACCESS, V8, P23506, DOI 10.1109/ACCESS.2020.2966860
   Jiang LX, 2007, PROC INT CONF SOFTW, P96
   Jiang Ming, 2013, Information Security and Cryptology - ICISC 2012. 15th International Conference. Revised Selected Papers, P92, DOI 10.1007/978-3-642-37682-5_8
   Jianguo Jiang, 2020, Computer Security - ESORICS 2020 25th European Symposium on Research in Computer Security, ESORICS 2020. Proceedings. Lecture Notes in Computer Science (LNCS 12308), P295, DOI 10.1007/978-3-030-58951-6_15
   Jin W, 2012, 2012 11TH INTERNATIONAL CONFERENCE ON MACHINE LEARNING AND APPLICATIONS (ICMLA 2012), VOL 1, P386, DOI 10.1109/ICMLA.2012.70
   Jones E., 2001, SciPy: Open source scientific tools for Python
   Jung M., 2019, PROC NDSS WORKSHOP B
   Junod P, 2015, 2015 IEEE/ACM 1ST INTERNATIONAL WORKSHOP ON SOFTWARE PROTECTION (SPRO), P3, DOI 10.1109/SPRO.2015.10
   Kamiya T, 2002, IEEE T SOFTWARE ENG, V28, P654, DOI 10.1109/TSE.2002.1019480
   Karamitas C, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P335, DOI 10.1109/SANER.2018.8330221
   Kargén U, 2017, IEEE INT CONF AUTOM, P342, DOI 10.1109/ASE.2017.8115647
   Dam HK, 2017, Arxiv, DOI arXiv:1708.02368
   Khoo WM, 2013, IEEE WORK CONF MIN S, P329, DOI 10.1109/MSR.2013.6624046
   Kim H, 2022, I C DEPEND SYS NETWO, P559, DOI 10.1109/DSN53405.2022.00061
   Kim M, 2020, ANN COMPUT SECURITY, P733, DOI 10.1145/3427228.3427294
   Kim S, 2017, P IEEE S SECUR PRIV, P595, DOI 10.1109/SP.2017.62
   Kim S, 2017, IEEE INT CONF AUTOM, P353, DOI 10.1109/ASE.2017.8115648
   Kim T, 2019, J SUPERCOMPUT, V75, P607, DOI 10.1007/s11227-016-1941-2
   Kim Y, 2014, Arxiv, DOI arXiv:1408.5882
   Kinder J, 2008, LECT NOTES COMPUT SC, V5123, P423
   Lageman Nathaniel., 2016, Proceedings of the Security and Privacy in Communication Networks12th International Conference, SecureComm 2016, Guangzhou, China, 10-12 October 2016, P517
   Lahiri Shuvendu K., 2012, Computer Aided Verification. Proceedings 24th International Conference, CAV 2012, P712, DOI 10.1007/978-3-642-31424-7_54
   Lakhotia A., 2013, P 2 ACM SIGPLAN PROG
   LASZLO T, 2009, SECTIO COMPUTATORICA, V30, P3
   Lee J., 2011, PROC NETW DISTRIB SY
   Li Z, 2016, ANN COMPUT SECURITY, P201, DOI 10.1145/2991079.2991102
   Li ZM, 2004, USENIX ASSOCIATION PROCEEDINGS OF THE SIXTH SYMPOSIUM ON OPERATING SYSTEMS DESIGN AND IMPLEMENTATION (OSDE '04), P289
   Liu BC, 2018, IEEE INT CONF AUTOM, P667, DOI 10.1145/3238147.3238199
   Luo LN, 2017, IEEE T SOFTWARE ENG, V43, P1157, DOI 10.1109/TSE.2017.2655046
   Luo LN, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P389, DOI 10.1145/2635868.2635900
   Luo M., 2016, INT C SECURITY PRIVA, P517
   MacKenzie D., 1996, AUTOCONF CREATING AU
   Manès VJM, 2021, IEEE T SOFTWARE ENG, V47, P2312, DOI 10.1109/TSE.2019.2946563
   Marastoni N., 2018, Proceedings of the 1st international workshop on machine learning and software engineering in symbiosis, P26
   Massarelli L., 2019, PROC NDSS WORKSHOP B
   Massarelli L, 2019, LECT NOTES COMPUT SC, V11543, P309, DOI 10.1007/978-3-030-22038-9_15
   Meng XZ, 2017, LECT NOTES COMPUT SC, V10493, P286, DOI 10.1007/978-3-319-66399-9_16
   Mikolov T, 2013, Arxiv, DOI [arXiv:1301.3781, 10.48550/arXiv.1301.3781]
   Ming J, 2017, PROCEEDINGS OF THE 26TH USENIX SECURITY SYMPOSIUM (USENIX SECURITY '17), P253
   Ming J, 2016, IEEE T RELIAB, V65, P1647, DOI 10.1109/TR.2016.2570554
   Ming J, 2015, IFIP ADV INF COMM TE, V455, P416, DOI 10.1007/978-3-319-18467-8_28
   *MIPS TECHN INC, 2001, MIPS32 ARCH PROGR
   Miyani D, 2017, Arxiv, DOI arXiv:1711.00830
   Ng AY, 2002, ADV NEUR IN, V14, P849
   Nouh L, 2017, IFIP ADV INF COMM TE, V502, P341, DOI 10.1007/978-3-319-58469-0_23
   Oh J. W., 2015, DARUNGRIM PATCH ANAL
   Pedregosa F, 2011, J MACH LEARN RES, V12, P2825
   Pewny J., 2014, P 30 ANN COMP SEC AP, P406, DOI [10.1145/2664243.2664269, DOI 10.1145/2664243.2664269]
   Pewny J, 2015, P IEEE S SECUR PRIV, P709, DOI 10.1109/SP.2015.49
   Qasem A, 2021, ACM COMPUT SURV, V54, DOI 10.1145/3432893
   Qiao R, 2017, I C DEPEND SYS NETWO, P201, DOI 10.1109/DSN.2017.29
   Qiu J, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P261, DOI 10.1109/SANER.2015.7081836
   Le Q, 2014, PR MACH LEARN RES, V32, P1188
   Rahimian Ashkan, 2013, Foundations and Practice of Security. 5th International Symposium, FPS 2012. Revised Selected Papers, P211, DOI 10.1007/978-3-642-37119-6_14
   Real R, 1996, SYST BIOL, V45, P380, DOI 10.2307/2413572
   Redmond K., 2019, PROC NDSS WORKSHOP B
   Reiss SP, 2009, PROC INT CONF SOFTW, P243, DOI 10.1109/ICSE.2009.5070525
   Rosenblum N., 2011, P INT S SOFTW TEST A, P100
   Schkufza E, 2013, ACM SIGPLAN NOTICES, V48, P305, DOI 10.1145/2499368.2451150
   Schleimer Saul, 2003, P 2003 ACM SIGMOD IN, P76, DOI [10.1145/872757.872770, DOI 10.1145/872757.872770]
   Seal D., 2001, ARM ARCHITECTURE REF
   SecurityTeam, 2016, PIE
   Semantic Designs, SOURCE CODE OBFUSCAT
   Shalev N, 2018, PLAS'18: PROCEEDINGS OF THE 13TH WORKSHOP ON PROGRAMMING LANGUAGES AND ANALYSIS FOR SECURITY, P42, DOI 10.1145/3264820.3264821
   Shin ECR, 2015, PROCEEDINGS OF THE 24TH USENIX SECURITY SYMPOSIUM, P611
   Shirani Paria, 2017, Detection of Intrusions and Malware, and Vulnerability Assessment. 14th International Conference, DIMVA 2017. Proceedings: LNCS 10327, P301, DOI 10.1007/978-3-319-60876-1_14
   Shirani P, 2018, LECT NOTES COMPUT SC, V10885, P114, DOI 10.1007/978-3-319-93411-2_6
   Sun PF, 2020, I C DEPEND SYS NETWO, P373, DOI 10.1109/DSN48063.2020.00053
   Tange O, 2011, TUSENIX Mag., V36, P42
   Themida, ADV WINDOWS SOFTWARE
   Tian ZZ, 2020, IEEE ACCESS, V8, P160802, DOI 10.1109/ACCESS.2020.3021184
   Ul Haq I, 2019, Arxiv, DOI arXiv:1909.11424
   Using the GNU compiler collection (GCC), OPTIMIZE OPTIONS
   van der Veen V, 2016, P IEEE S SECUR PRIV, P934, DOI 10.1109/SP.2016.60
   van der Walt S, 2011, COMPUT SCI ENG, V13, P22, DOI 10.1109/MCSE.2011.37
   VMProtect, ABOUT AS
   Wang S, 2017, IEEE INT CONF AUTOM, P319, DOI 10.1109/ASE.2017.8115645
   Wang S, 2017, PROC IEEE INT CONF S, P388, DOI 10.1109/ICSME.2017.59
   Wang S, 2016, PROC INT CONF SOFTW, P297, DOI 10.1145/2884781.2884804
   Wikipedia, 2018, RELATIVE CHANGE DIFF
   Xiao YJ, 2016, IEEE TRUST BIG, P252, DOI [10.1109/TrustCom.2016.70, 10.1109/TrustCom.2016.0071]
   Xu DP, 2017, P IEEE S SECUR PRIV, P921, DOI 10.1109/SP.2017.56
   Xu XJ, 2017, CCS'17: PROCEEDINGS OF THE 2017 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P363, DOI 10.1145/3133956.3134018
   Xu ZZ, 2017, PROC INT CONF SOFTW, P462, DOI 10.1109/ICSE.2017.49
   Xue YX, 2019, IEEE T SOFTWARE ENG, V45, P1125, DOI 10.1109/TSE.2018.2827379
   Yakdan K, 2015, 22ND ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2015), DOI 10.14722/ndss.2015.23185
   Yuan BG, 2018, COMPUT J, V61, P1202, DOI 10.1093/comjnl/bxy055
   Zhang FF, 2014, PROC INT SYMP SOFTW, P66, DOI 10.1109/ISSRE.2014.18
   Zhao L, 2020, CCS '20: PROCEEDINGS OF THE 2020 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P149, DOI 10.1145/3372297.3423342
   Zuo F, 2019, 26TH ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2019), DOI 10.14722/ndss.2019.23492
NR 166
TC 14
Z9 16
U1 2
U2 7
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD APR 1
PY 2023
VL 49
IS 4
BP 1661
EP 1682
DI 10.1109/TSE.2022.3187689
PG 22
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA E9NM9
UT WOS:000978723600015
OA hybrid, Green Submitted
DA 2024-07-18
ER

PT J
AU Kotti, Z
   Gousios, G
   Spinellis, D
AF Kotti, Zoe
   Gousios, Georgios
   Spinellis, Diomidis
TI Impact of Software Engineering Research in Practice: A Patent and Author
   Survey Analysis
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Software; Patents; Industries; Companies; Software engineering;
   Interviews; Collaboration; practical impact; empirical study; survey;
   patent citations
ID INDUSTRY-ACADEMIA COLLABORATIONS; ARTIFICIAL-INTELLIGENCE; INSTITUTIONS;
   TECHNOLOGY; SCHOLARS; LINKAGE; SYSTEMS; THESES
AB Existing work on the practical impact of software engineering (SE) research examines industrial relevance rather than adoption of study results, hence the question of how results have been practically applied remains open. To answer this and investigate the outcomes of impactful research, we performed a quantitative and qualitative analysis of 4 354 SE patents citing 1 690 SE papers published in four leading SE venues between 1975-2017. Moreover, we conducted a survey on 475 authors of 593 top-cited and awarded publications, achieving 26% response rate. Overall, researchers have equipped practitioners with various tools, processes, and methods, and improved many existing products. SE practice values knowledge-seeking research and is impacted by diverse cross-disciplinary SE areas. Practitioner-oriented publication venues appear more impactful than researcher-oriented ones, while industry-related tracks in conferences could enhance their impact. Some research works did not reach a wide footprint due to limited funding resources or unfavorable cost-benefit trade-off of the proposed solutions. The need for higher SE research funding could be corroborated through a dedicated empirical study. In general, the assessment of impact is subject to its definition. Therefore, academia and industry could jointly agree on a formal description to set a common ground for subsequent research on the topic.
C1 [Kotti, Zoe; Spinellis, Diomidis] Athens Univ Econ & Business, Dept Management Sci & Technol, Athens 10434, Greece.
   [Gousios, Georgios; Spinellis, Diomidis] Delft Univ Technol, Dept Software Technol, NL-2628 CD Delft, Netherlands.
C3 Athens University of Economics & Business; Delft University of
   Technology
RP Kotti, Z (corresponding author), Athens Univ Econ & Business, Dept Management Sci & Technol, Athens 10434, Greece.
EM zoekotti@aueb.gr; G.Gousios@tudelft.nl; D.Spinellis@tudelft.nl
RI Spinellis, Diomidis/E-3600-2010
OI Spinellis, Diomidis/0000-0003-4231-1897; Kotti, Zoe/0000-0003-3816-9162;
   Gousios, Georgios/0000-0002-8495-7939
FU European Union's Horizon 2020 research and innovation programme
   [825328]; H2020 - Industrial Leadership [825328] Funding Source: H2020 -
   Industrial Leadership
FX This work was supported by European Union's Horizon 2020 research and
   innovation programme under Grant 825328 (FASTEN project).
CR Agrawal A, 2002, MANAGE SCI, V48, P44, DOI 10.1287/mnsc.48.1.44.14279
   Al-Turjman F., 2019, Artificial Intelligence in IoT
   Ali A., 2021, PROC INT C KNOWL MAN, P309
   Almes G., 1984, Proceedings of the 7th International Conference on Software Engineering (cat. no. 84CH2011-5), P56
   ALMES GT, 1985, IEEE T SOFTWARE ENG, V11, P43, DOI 10.1109/TSE.1985.231536
   [Anonymous], 2010, NATURE, V467, P252, DOI 10.1038/467252a
   [Anonymous], 2022, THEIR FOCUS METAVERS
   Bains S., 2022, ELECT THESES DISSERT, P213
   Ballance R. A., 1992, ACM Transactions on Software Engineering and Methodology, V1, P95, DOI 10.1145/125489.122804
   Beecham S, 2013, 2013 IEEE 8TH INTERNATIONAL CONFERENCE ON GLOBAL SOFTWARE ENGINEERING (ICGSE 2013), P41, DOI 10.1109/ICGSE.2013.14
   Bessen J, 2008, RES POLICY, V37, P932, DOI 10.1016/j.respol.2008.02.005
   Bessen J, 2007, J ECON MANAGE STRAT, V16, P157
   BLACK A, 1987, IEEE T SOFTWARE ENG, V13, P65, DOI 10.1109/TSE.1987.232836
   Blackman M, 2012, WORLD PAT INF, V34, P333, DOI 10.1016/j.wpi.2012.07.010
   Bloch C, 2015, SCI PUBL POLICY, V42, P30, DOI 10.1093/scipol/scu019
   Boehm B, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1057, DOI 10.1145/1985793.1985994
   BOEHM BW, 1984, IEEE T SOFTWARE ENG, V10, P4, DOI 10.1109/TSE.1984.5010193
   Booch G, 2001, COMMUN ACM, V44, P118, DOI 10.1145/365181.365234
   Bourque Pierre, 2014, SWEBOK: Guide to the Software Engineering Body of Knowledge, V3rd
   Brereton P, 2007, J SYST SOFTWARE, V80, P571, DOI 10.1016/j.jss.2006.07.009
   Buxton J. N., 1970, SOFTW ENG TECHN C SP
   Clarivate, 2018, SCI ACAD RES
   Clarke L. A., 2006, Software Engineering Notes, V31, P25, DOI 10.1145/1127878.1127900
   Coates M, 2014, LIBR HI TECH, V32, P285, DOI 10.1108/LHT-08-2013-0102
   CORBIN J, 1990, Z SOZIOL, V19, P418, DOI 10.1007/BF00988593
   Cubranic D, 2003, PROC INT CONF SOFTW, P408, DOI 10.1109/ICSE.2003.1201219
   DAGOSTIN.R, 1973, BIOMETRIKA, V60, P613, DOI 10.1093/biomet/60.3.613
   De Lucia A, 2007, ACM T SOFTW ENG METH, V16, DOI 10.1145/1276933.1276934
   Dearle A, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P269, DOI 10.1109/FOSE.2007.20
   DENNING DE, 1987, IEEE T SOFTWARE ENG, V13, P222, DOI 10.1109/TSE.1987.232894
   Dhir S, 2017, STRATEG CHANG, V26, P363, DOI 10.1002/jsc.2137
   Easterbrook S., 2008, GUIDE ADV EMPIRICAL, P285, DOI [DOI 10.1007/978-1-84800-044-5_11, DOI 10.1007/978-1-84800-044-511]
   Emmerich W, 2008, ACM T SOFTW ENG METH, V17, DOI 10.1145/13487689.13487692
   Estublier J, 2005, ACM T SOFTW ENG METH, V14, P383, DOI 10.1145/1101815.1101817
   European Parliament Council of the European Union, 2009, OFFICIAL J EUR UNION, VL 111/16
   European Patent Office, 2013, COOP PAT CLASS INTR
   Fanelli D, 2010, PLOS ONE, V5, DOI 10.1371/journal.pone.0010271
   Ferreras-Fernández T, 2016, PROGRAM-ELECTRON LIB, V50, P399, DOI 10.1108/PROG-04-2016-0039
   Fowler M, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P701, DOI 10.1109/ICSE.2002.1008037
   FURNHAM A, 1986, PERS INDIV DIFFER, V7, P385, DOI 10.1016/0191-8869(86)90014-0
   Garousi V, 2019, EMPIR SOFTW ENG, V24, P2540, DOI 10.1007/s10664-019-09711-y
   Garousi V, 2016, INFORM SOFTWARE TECH, V79, P106, DOI 10.1016/j.infsof.2016.07.006
   GLASS RL, 1994, J SYST SOFTWARE, V27, P63, DOI 10.1016/0164-1212(94)90115-5
   Greenberg CJ, 2014, LIBR MANAGE, V35, P320, DOI 10.1108/LM-09-2013-0091
   GRILICHES Z, 1990, J ECON LIT, V28, P1661, DOI 10.3386/w3301
   Hall R. S., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P174, DOI 10.1109/ICSE.1999.841007
   HALL RJ, 1992, 14TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING : PROCEEDINGS, P296
   Hamilton J., 2000, ENG PROFESSION
   Hangal S, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P291, DOI 10.1109/ICSE.2002.1007976
   Hatton L, 2017, J SOFTW-EVOL PROC, V29, DOI 10.1002/smr.1847
   Haupt C, 2018, 2018 IEEE/ACM 13TH INTERNATIONAL WORKSHOP ON SOFTWARE ENGINEERING FOR SCIENCE (SE4SCIENCE), P16, DOI 10.1145/3194747.3194753
   Heder M., 2017, Innov. J., V22, P1, DOI DOI 10.3389/FPLS.2017.01058
   Hosek P, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P612, DOI 10.1109/ICSE.2013.6606607
   IFI CLAIMS Patent Services and Google, 2017, GOOGL PAT PUBL DAT
   Ince DC, 2012, NATURE, V482, P485, DOI 10.1038/nature10836
   Ioannidis JPA, 2020, PLOS BIOL, V18, DOI 10.1371/journal.pbio.3000918
   Ivanov V, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P890, DOI 10.1145/3106237.3117778
   JetBrains, STAT DEV EC 2021 TEA
   Kiczales G, 2005, PROC INT CONF SOFTW, P730
   Kitchenham B.A., 2002, ACM SIGSOFT Software Engineering Notes, V27, P18, DOI [DOI 10.1145/566493.566495, 10.1145/566493.566495]
   Kitchenham BA, 2004, PROC INT CONF SOFTW, P273
   Kitchenharn B., 2003, Software Engineering Notes, V28, P24, DOI 10.1145/638750.638758
   KOREL B, 1990, IEEE T SOFTWARE ENG, V16, P870, DOI 10.1109/32.57624
   Kotti Z, 2020, EMPIR SOFTW ENG, V25, P3288, DOI 10.1007/s10664-020-09834-7
   Kouziokas GN, 2017, TRANSP RES PROC, V24, P467, DOI 10.1016/j.trpro.2017.05.083
   Koziolek H., 2022, TRACING PRACTICAL IM
   Krippendorff K., 2018, CONTENT ANAL INTRO I
   Linaker J., 2015, Guidelines for Conducting Surveys in Software Engineering
   Lo D, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P415, DOI 10.1145/2786805.2786809
   Loan F. A., 2022, LIBR HITECH NEWS, V39, P21
   Marco A. C., 2017, 201706 USPTO, DOI [10.2139/ssrn.2942295, DOI 10.2139/SSRN.2942295]
   Mell P, 2010, COMMUN ACM, V53, P50
   Mikkonen T, 2018, INFORM SOFTWARE TECH, V95, P34, DOI 10.1016/j.infsof.2017.10.013
   Misirli AT, 2013, IEEE SOFTWARE, V30, P54, DOI 10.1109/MS.2013.93
   Mohan -Ram V., 2001, SCIENCE
   MOHER TG, 1988, IEEE T SOFTWARE ENG, V14, P849, DOI 10.1109/32.6163
   Nagaoka S, 2007, J ECON MANAGE STRAT, V16, P129
   Narin F, 1997, RES POLICY, V26, P317, DOI 10.1016/S0048-7333(97)00013-9
   National Academy ofEngineering, 2003, IMP AC RES IND PERF
   Naur P., 1969, SOFTW ENV C SPONS NA
   Networked Digital Library of Theses and Dissertations (NDLTD), THESIS
   Oliveira AL, 2019, BIOTECHNOL J, V14, DOI 10.1002/biot.201800613
   Organisation for Economic Co-operation and Development, 2009, OECD PATENT STAT MAN, DOI [10.1787/9789264056442-7-en, DOI 10.1787/9789264056442-7-EN]
   Osterweil J., 2000, SIG SOFT SOFTW ENG N, V25, P108
   Osterweil L, 2005, ACM T SOFTW ENG METH, V14, P381, DOI 10.1145/1101815.1101816
   Osterweil LJ, 2008, COMPUTER, V41, P39, DOI 10.1109/MC.2008.85
   Parnas DL, 2007, COMMUN ACM, V50, P19, DOI 10.1145/1297797.1297815
   Petersen K, 2021, SCIENTOMETRICS, V126, P9147, DOI 10.1007/s11192-021-04144-1
   Petersen K, 2015, INFORM SOFTWARE TECH, V64, P1, DOI 10.1016/j.infsof.2015.03.007
   Pfleeger Shari Lawrence, 2001, ACM SIGSOFT Software Engineering Notes, V26, P16, DOI DOI 10.1145/505532.505535
   Piezunka H, 2015, ACAD MANAGE J, V58, P856, DOI 10.5465/amj.2012.0458
   Rahmanifard H, 2019, ARTIF INTELL REV, V52, P2295, DOI 10.1007/s10462-018-9612-8
   Ren J, 2007, COMMUN ACM, V50, P81, DOI 10.1145/1247001.1247010
   Rikkila J, 2012, J Comp. Eng. Inf. Tech., V1, P2
   RITCHIE DM, 1978, AT&T TECH J, V57, P1991, DOI 10.1002/j.1538-7305.1978.tb02140.x
   Rochkind M. J., 1975, IEEE Transactions on Software Engineering, VSE-1, P364, DOI 10.1109/TSE.1975.6312866
   Rombach D, 2008, ACM SIGSOFT SOFTW EN, V33, P26
   Rose ME, 2019, SOFTWAREX, V10, DOI 10.1016/j.softx.2019.100263
   Rous B, 2012, COMMUN ACM, V55, P12, DOI 10.1145/2366316.2366320
   Ryder BG, 2005, ACM T SOFTW ENG METH, V14, P431, DOI 10.1145/1101815.1101818
   Schwartz D. L., 2019, 201905 USPTO, DOI [10.2139/ssrn.3507607, DOI 10.2139/SSRN.3507607]
   Schwitzgebel E., 2019, STANFORD ENCYCL PHIL
   SIGELMAN L, 1981, PUBLIC OPIN QUART, V45, P199, DOI 10.1086/268650
   Singh A., 2015, INT J COMPUTER APPL, V114, P26, DOI [10.5120/20080-2132, DOI 10.5120/20080-2132]
   Sjoberg DIK, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P358, DOI 10.1109/FOSE.2007.30
   Sjoberg DIK, 2002, 2002 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P17, DOI 10.1109/ISESE.2002.1166921
   Spearman C, 1904, AM J PSYCHOL, V15, P72, DOI 10.2307/1412159
   Stack Overflow, STACK OV DEV SURV 20
   Statista: Industries: Technology & Telecommunications, 2018, STAT MARK DAT SOFTW
   Stol KJ, 2018, ACM T SOFTW ENG METH, V27, DOI 10.1145/3241743
   Stol KJ, 2016, INFORM SOFTWARE TECH, V70, P176, DOI 10.1016/j.infsof.2015.07.010
   STROUSTRUP B, 1983, SOFTWARE PRACT EXPER, V13, P139, DOI 10.1002/spe.4380130205
   Tichy W. F., 1982, Sixth International Conference on Software Engineering, P58
   van den Besselaar P, 2012, HIGH EDUC POLICY, V25, P263, DOI 10.1057/hep.2012.16
   Vasilescu B, 2014, SCI COMPUT PROGRAM, V89, P251, DOI 10.1016/j.scico.2014.01.016
   Vyatkin V, 2013, IEEE T IND INFORM, V9, P1234, DOI 10.1109/TII.2013.2258165
   Wani A., 2019, LIBR PHILOS PRACT J, P1
   WEISER M, 1984, IEEE T SOFTWARE ENG, V10, P352, DOI 10.1109/TSE.1984.5010248
   Wieringa Roel., 2009, Proceedings of the 4th international conference on design science research in information systems and technology, P8
   Wong WE, 2011, J SYST SOFTWARE, V84, P162, DOI 10.1016/j.jss.2010.09.036
   Xie YZ, 2020, EARTHQ SPECTRA, V36, P1769, DOI 10.1177/8755293020919419
   Ying ATT, 2004, IEEE T SOFTWARE ENG, V30, P574, DOI 10.1109/TSE.2004.52
   Yu KH, 2018, NAT BIOMED ENG, V2, P719, DOI 10.1038/s41551-018-0305-z
   Zhang Ji, 2006, P 28 INT C SOFTW ENG, P371
   Zheng CM, 2015, J COMPUT, V10, P381, DOI 10.17706/jcp.10.6.381-387
NR 125
TC 2
Z9 2
U1 1
U2 6
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD APR 1
PY 2023
VL 49
IS 4
BP 2020
EP 2038
DI 10.1109/TSE.2022.3208210
PG 19
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA E9NM9
UT WOS:000978723600034
OA Green Published, Green Submitted
DA 2024-07-18
ER

PT J
AU Ataiefard, F
   Mashhadi, MJ
   Hemmati, H
   Walkinshaw, N
AF Ataiefard, Foozhan
   Mashhadi, Mohammad Jafar
   Hemmati, Hadi
   Walkinshaw, Neil
TI Deep State Inference: Toward Behavioral Model Inference of Black-Box
   Software Systems
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Recurrent neural network; convolutional neural network; deep learning;
   specification mining; transfer learning; black-box model inference; UAV
   AutoPilot; time series
AB Many software engineering tasks, such as testing, debugging, and anomaly detection can benefit from the ability to infer a behavioral model of the software. Most existing inference approaches assume access to code to collect execution sequences. In this paper, we investigate a black-box scenario, where the system under analysis cannot be instrumented in this fashion. This scenario is particularly common when it comes to the analysis of control system logs, which often take the form of continuous signals. In this situation, an execution trace amounts to a multivariate time-series of input and output signals, where different states of the system correspond to different "phases" in the time-series. From an inference perspective, the challenge is to detect when these phase changes take place. Unfortunately, most existing solutions are either univariate, make assumptions about the data distribution, or have limited learning power. In this paper we propose a hybrid deep neural network that accepts as input a multivariate time series and applies a set of convolutional and recurrent layers to learn the non-linear correlations between signals and the patterns over time. We show how this approach can be used to accurately detect state changes, and how the inferred models can be successfully applied to transfer-learning scenarios, to accurately process traces from different products with similar execution characteristics. Our experimental results on two UAV autopilot case studies (one industrial and one open-source) indicate that our approach is highly accurate (over 90% F1 score for state classification) and significantly improves baselines (by up to 102% for change point detection). Using transfer learning we also show that up to 90% of the maximum achievable F1 scores in the open-source case study can be achieved by reusing the trained models from the industrial case and only fine tuning them using as low as 5 labeled samples, which reduces the manual labeling effort by 98%.
C1 [Ataiefard, Foozhan; Mashhadi, Mohammad Jafar; Hemmati, Hadi] Univ Calgary, Calgary, AB T2N 1N4, Canada.
   [Walkinshaw, Neil] Univ Sheffield, Sheffield S10 2TN, England.
C3 University of Calgary; University of Sheffield
RP Ataiefard, F (corresponding author), Univ Calgary, Calgary, AB T2N 1N4, Canada.
EM foozhan.ataiefard1@ucalgary.ca; mohammadjafar.mashha@ucalgary.ca;
   hadi.hemmati@ucalgary.ca; n.walkinshaw@sheffield.ac.uk
RI Walkinshaw, Neil/AHA-2966-2022
OI Walkinshaw, Neil/0000-0003-2134-6548; Ataiefard,
   Foozhan/0000-0002-9133-9100
FU Natural Sciences and Engineering Research Council of Canada (NSERC)
   [CRDPJ/515254-2017]; Engineering and Physical Sciences Research Council
   in the UK (EPSRC) [CITCOM - EP/T030526/1]; EPSRC [EP/T030526/1] Funding
   Source: UKRI
FX This work was supported by the Natural Sciences and Engineering Research
   Council of Canada (NSERC) under Grant CRDPJ/515254-2017. Walkinshaw is
   supported by the Engineering and Physical Sciences Research Council in
   the UK (EPSRC) under Grant CITCOM - EP/T030526/1.
CR Aminikhanghahi S, 2017, KNOWL INF SYST, V51, P339, DOI 10.1007/s10115-016-0987-z
   Ammons G, 2002, ACM SIGPLAN NOTICES, V37, P4, DOI 10.1145/565816.503275
   Angelosante D, 2012, EURASIP J ADV SIG PR, DOI 10.1186/1687-6180-2012-70
   [Anonymous], 2011, Parametric statistical change point analysis: with applications to genetics, medicine, and finance
   [Anonymous], 2008, FEEDBACK SYSTEMS INT
   [Anonymous], 2013, P ICML
   Bai J, 1998, REV ECON STUD, V65, P395, DOI 10.1111/1467-937X.00051
   Barr ET, 2015, IEEE T SOFTWARE ENG, V41, P507, DOI 10.1109/TSE.2014.2372785
   Basseville M., 1993, DETECTION ABRUPT CHA
   Che ZP, 2018, SCI REP-UK, V8, DOI 10.1038/s41598-018-24271-9
   Cho KYHY, 2014, Arxiv, DOI [arXiv:1406.1078, DOI 10.3115/V1/D14-1179, 10.48550/ARXIV.1406.1078, DOI 10.48550/ARXIV.1406.1078]
   Eljuse B., 2018, PROC INT S SEARCH BA, P198
   Fryzlewicz P, 2014, ANN STAT, V42, P2243, DOI 10.1214/14-AOS1245
   Hattenberger G., 2014, P IMAV 2014 INT MICR, P247, DOI [DOI 10.4233/UUID:B38FBDB7-E6BD-440D-93BE-F7DD1457BE60, 10.4233/UUID:B38FBDB7-E6BD-440D-93BE-F7DD1457BE60]
   Huffmire T., 2006, P 15 INT C PAR ARCH, P95
   Keogh E, 2001, 2001 IEEE INTERNATIONAL CONFERENCE ON DATA MINING, PROCEEDINGS, P289, DOI 10.1109/ICDM.2001.989531
   Killick R, 2012, J AM STAT ASSOC, V107, P1590, DOI 10.1080/01621459.2012.737745
   Kingma D. P., 2014, arXiv
   Kuhn A, 2006, PROC IEEE INT CONF S, P320
   Lavielle M, 2005, SIGNAL PROCESS, V85, P1501, DOI 10.1016/j.sigpro.2005.01.012
   LeCun Y, 2015, NATURE, V521, P436, DOI 10.1038/nature14539
   Lee W.-II., 2018, arXiv
   Mashhadi MJ, 2019, INT C PROGRAM COMPRE, P65, DOI 10.1109/ICPC.2019.00020
   Melmoth T. D., 2019, U.S. Patent, Patent No. [10,417,360, 10417360]
   Milletari F, 2016, INT CONF 3D VISION, P565, DOI 10.1109/3DV.2016.79
   Morales FJO, 2016, IEEE INT SYM WRBL CO, P92, DOI 10.1145/2971767.2971764
   Murphy KP, 2012, MACHINE LEARNING: A PROBABILISTIC PERSPECTIVE, P1
   Musuvathi M., 2008, Proceedings of the 8th USENIX conference on Operating systems design and implementation, OSDI'08, P267
   Oh KJ, 2002, EXPERT SYST APPL, V22, P249, DOI 10.1016/S0957-4174(01)00058-6
   Ordóñez FJ, 2016, SENSORS-BASEL, V16, DOI 10.3390/s16010115
   Pan SJ, 2010, IEEE T KNOWL DATA EN, V22, P1345, DOI 10.1109/TKDE.2009.191
   Perslev M, 2019, ADV NEUR IN, V32
   Reeves J, 2007, J APPL METEOROL CLIM, V46, P900, DOI 10.1175/JAM2493.1
   Ronneberger O, 2015, LECT NOTES COMPUT SC, V9351, P234, DOI 10.1007/978-3-319-24574-4_28
   SCOTT AJ, 1974, BIOMETRICS, V30, P507, DOI 10.2307/2529204
   Simonyan K, 2015, Arxiv, DOI arXiv:1409.1556
   Sudre CH, 2017, LECT NOTES COMPUT SC, V10553, P240, DOI 10.1007/978-3-319-67558-9_28
   Takeuchi J, 2006, IEEE T KNOWL DATA EN, V18, P482, DOI 10.1109/TKDE.2006.1599387
   Truong C, 2020, SIGNAL PROCESS, V167, DOI 10.1016/j.sigpro.2019.107299
   Wang ZG, 2017, IEEE IJCNN, P1578, DOI 10.1109/IJCNN.2017.7966039
   Yang JB, 2015, PROCEEDINGS OF THE TWENTY-FOURTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE (IJCAI), P3995
   Yao SC, 2017, PROCEEDINGS OF THE 26TH INTERNATIONAL CONFERENCE ON WORLD WIDE WEB (WWW'17), P351, DOI 10.1145/3038912.3052577
   Zeng M, 2014, 2014 6TH INTERNATIONAL CONFERENCE ON MOBILE COMPUTING, APPLICATIONS AND SERVICES (MOBICASE), P197, DOI 10.4108/icst.mobicase.2014.257786
   Zheng Y, 2016, FRONT COMPUT SCI-CHI, V10, P96, DOI 10.1007/s11704-015-4478-2
NR 44
TC 0
Z9 0
U1 1
U2 4
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD DEC 1
PY 2022
VL 48
IS 12
BP 4857
EP 4872
DI 10.1109/TSE.2021.3128820
PG 16
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 7B5SL
UT WOS:000899192600001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Qiu, FC
   Gao, ZP
   Xia, X
   Lo, DV
   Grundy, J
   Wang, XY
AF Qiu, Fangcheng
   Gao, Zhipeng
   Xia, Xin
   Lo, David
   Grundy, John
   Wang, Xinyu
TI Deep Just-In-Time Defect Localization
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Defect localization; just-in-time; software naturalness; deep learning
AB During software development and maintenance, defect localization is an essential part of software quality assurance. Even though different techniques have been proposed for defect localization, i.e., information retrieval (IR)-based techniques and spectrum-based techniques, they can only work after the defect has been exposed, which can be too late and costly to adapt to the newly introduced bugs in the daily development. There are also many JIT defect prediction tools that have been proposed to predict the buggy commit. But these tools do not locate the suspicious buggy positions in the buggy commit. To assist developers to detect bugs in time and avoid introducing them, just-in-time (JIT) bug localization techniques have been proposed, which is targeting to locate suspicious buggy code after a change commit has been submitted. In this paper, we propose a novel JIT defect localization approach, named DeepDL (Deep Learning-based defect localization), to locate defect code lines within a defect introducing change. DeepDL employs a neural language model to capture the semantics of the code lines, in this way, the naturalness of each code line can be learned and converted to a suspiciousness score. The core of our DeepDL is a deep learning-based neural language model. We train the neural language model with previous snapshots (history versions) of a project so that it can calculate the naturalness of a piece of code. In its application, for a given new code change, DeepDL automatically assigns a suspiciousness score to each code line and sorts these code lines in descending order of this score. The code lines at the top of the list are considered as potential defect locations. Our tool can assist developers efficiently check buggy lines at an early stage, which is able to reduce the risk of introducing bugs in time and improve the developers' confidence in the reliability of their software. We conducted an extensive experiment on 14 open source Java projects with a total of 11,615 buggy changes. We evaluate the experimental results considering four evaluation metrics. The experimental results show that our method outperforms the state-of-the-art by a substantial margin.
C1 [Qiu, Fangcheng; Wang, Xinyu] Zhejiang Univ, Coll Comp Sci & Technol, Zhejiang 310027, Peoples R China.
   [Gao, Zhipeng; Grundy, John] Monash Univ, Fac Informat Technol, Melbourne, Vic 3800, Australia.
   [Xia, Xin] Huawei, Software Engn Applicat Technol Lab, Huawei 518129, Peoples R China.
   [Lo, David] Singapore Management Univ, Sch Informat Syst, Singapore 188065, Singapore.
C3 Zhejiang University; Monash University; Huawei Technologies; Singapore
   Management University
RP Wang, XY (corresponding author), Zhejiang Univ, Coll Comp Sci & Technol, Zhejiang 310027, Peoples R China.; Xia, X (corresponding author), Huawei, Software Engn Applicat Technol Lab, Huawei 518129, Peoples R China.
EM fangchengq@zju.edu.cn; zhipeng.gao@monash.edu; xin.xia@acm.org;
   davidlo@smu.edu.sg; john.grundy@monash.edu; wangxinyu@zju.edu.cn
RI Grundy, John/AAF-1716-2019; Lo, David/A-2493-2012
OI Grundy, John/0000-0003-4928-7076; Lo, David/0000-0002-4367-7201; GAO,
   Zhipeng/0000-0003-3030-9917
FU National Key R&D Program of China [2019YFB1600700]; ARC Laureate
   Fellowship [FL190100035]; National Research Foundation, Singapore under
   its Industry Alignment Fund
FX This work was supported in part by the National Key R&D Program of China
   under Grant 2019YFB1600700, in part by ARC Laureate Fellowship under
   Grant FL190100035, and in part by National Research Foundation,
   Singapore under its Industry Alignment Fund - Pre-positioning (IAF-PP)
   Funding Initiative.
CR Abdi H, 2007, ENCY MEASUREMENT STA, P103, DOI DOI 10.4135/9781412952644
   Abreu R, 2006, 12TH PACIFIC RIM INTERNATIONAL SYMPOSIUM ON DEPENDABLE COMPUTING, PROCEEDINGS, P39
   Ahmad W., 2020, P 58 ANN M ASS COMPU, P4998, DOI 10.18653/v1/2020.acl-main.449
   Alon U., 2018, ARXIV
   Alon U, 2019, P ACM PROGRAM LANG, V3, DOI 10.1145/3290353
   Bahdanau D., 2019, PROC IEEE INT C ACOU, P4945
   Neto EC, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P380, DOI 10.1109/SANER.2018.8330225
   Chen Z., 2019, IEEE Transactions on Software Engineering, V47, P1943
   Chiu CC, 2018, 2018 IEEE INTERNATIONAL CONFERENCE ON ACOUSTICS, SPEECH AND SIGNAL PROCESSING (ICASSP), P4774, DOI 10.1109/ICASSP.2018.8462105
   Collofello J. S., 1987, AFIPS Conference Proceedings. Vol.56: 1987 National Computer Conference, P539
   Copeland Tom, 2005, PMD applied, V10
   Dam H. K., 2016, FSE 2016, P1
   Devlin J, 2019, 2019 CONFERENCE OF THE NORTH AMERICAN CHAPTER OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS: HUMAN LANGUAGE TECHNOLOGIES (NAACL HLT 2019), VOL. 1, P4171
   Gage P., 1994, C Users Journal, V12, P23
   Gao ZP, 2021, PROCEEDINGS OF THE 29TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '21), P218, DOI 10.1145/3468264.3468553
   Gao ZP, 2021, IEEE T SOFTWARE ENG, V47, P2874, DOI 10.1109/TSE.2020.2971482
   Gehring J, 2017, PR MACH LEARN RES, V70
   Harrold MJ, 2000, SOFTW TEST VERIF REL, V10, P171, DOI 10.1002/1099-1689(200009)10:3<171::AID-STVR209>3.0.CO;2-J
   Hellendoorn VJ, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P763, DOI 10.1145/3106237.3106290
   Hindle A, 2012, PROC INT CONF SOFTW, P837, DOI 10.1109/ICSE.2012.6227135
   Hoang T, 2020, PROC INT CONF SOFTW, P518, DOI 10.1145/3377811.3380361
   Hu X, 2018, INT C PROGRAM COMPRE, P200, DOI 10.1145/3196321.3196334
   Jiang N, 2021, PROC INT CONF SOFTW, P1161, DOI 10.1109/ICSE43902.2021.00107
   Jones J.A., 2005, P 20 IEEE ACM INT C, P273, DOI [10.1145/1101908.1101949, DOI 10.1145/1101908.1101949]
   Karampatsis RM, 2020, PROC INT CONF SOFTW, P1073, DOI 10.1145/3377811.3380342
   Kidd N, 2009, LECT NOTES COMPUT SC, V5403, P198, DOI 10.1007/978-3-540-93900-9_18
   Kochhar Pavneet Singh, 2014, 2014 21st Asia-Pacific Software Engineering Conference (APSEC), P215, DOI 10.1109/APSEC.2014.42
   Kochhar PS, 2015, IEEE ICST WORKSHOP
   Kochhar PS, 2013, INT CONF QUAL SOFTW, P103, DOI 10.1109/QSIC.2013.57
   Kombrink S, 2011, 12TH ANNUAL CONFERENCE OF THE INTERNATIONAL SPEECH COMMUNICATION ASSOCIATION 2011 (INTERSPEECH 2011), VOLS 1-5, P2888
   Lan Z., 2019, ARXIV190911942, DOI DOI 10.48550/ARXIV.1909.11942
   Li J, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY AND SECURITY (QRS), P318, DOI 10.1109/QRS.2017.42
   Li X, 2019, PROCEEDINGS OF THE 28TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA '19), P169, DOI 10.1145/3293882.3330574
   Li X, 2017, P ACM PROGRAM LANG, V1, DOI 10.1145/3133916
   Li X, 2020, AAAI CONF ARTIF INTE, V34, P8253
   Lou YL, 2021, PROCEEDINGS OF THE 29TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '21), P664, DOI 10.1145/3468264.3468580
   Lukins SK, 2010, INFORM SOFTWARE TECH, V52, P972, DOI 10.1016/j.infsof.2010.04.002
   Lutellier Thibaud, 2020, ISSTA '20: Proceedings of the 29th ACM SIGSOFT International Symposium on Software Testing and Analysis, P101, DOI 10.1145/3395363.3397369
   Manning Christopher D., 2008, INTRO INFORM RETRIEV
   Mei HY, 2017, AAAI CONF ARTIF INTE, P3252
   Mnih V, 2014, ADV NEUR IN, V27
   Radford Alec, 2018, IMPROVING LANGUAGE U, DOI DOI 10.18653/V1/N18-1202
   Ray B, 2016, PROC INT CONF SOFTW, P428, DOI 10.1145/2884781.2884848
   Santos EA, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P311, DOI 10.1109/SANER.2018.8330219
   Schuster M, 1997, IEEE T SIGNAL PROCES, V45, P2673, DOI 10.1109/78.650093
   Sennrich R, 2016, PROCEEDINGS OF THE 54TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, VOL 1, P1715
   Sohn J, 2017, PROCEEDINGS OF THE 26TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA'17), P273, DOI 10.1145/3092703.3092717
   Sundermeyer M, 2012, 13TH ANNUAL CONFERENCE OF THE INTERNATIONAL SPEECH COMMUNICATION ASSOCIATION 2012 (INTERSPEECH 2012), VOLS 1-3, P194
   Sutskever I, 2014, ADV NEUR IN, V27
   Vaswani A, 2017, ADV NEUR IN, V30
   VESSEY I, 1985, INT J MAN MACH STUD, V23, P459, DOI 10.1016/S0020-7373(85)80054-7
   Wang S, 2016, PROC INT CONF SOFTW, P297, DOI 10.1145/2884781.2884804
   WILCOXON F, 1945, BIOMETRICS BULL, V1, P80, DOI 10.1093/jee/39.2.269
   Wong WE, 2014, IEEE T RELIAB, V63, P290, DOI 10.1109/TR.2013.2285319
   Wu YH, 2016, Arxiv, DOI [arXiv:1609.08144, DOI 10.48550/ARXIV.1609.08144]
   Yan M, 2022, IEEE T SOFTWARE ENG, V48, P82, DOI 10.1109/TSE.2020.2978819
   Yang XL, 2015, 2015 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE SECURITY AND RELIABILITY (QRS 2015), P17, DOI 10.1109/QRS.2015.14
   Youm KC, 2017, INFORM SOFTWARE TECH, V82, P177, DOI 10.1016/j.infsof.2016.11.002
NR 58
TC 0
Z9 1
U1 2
U2 20
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD DEC 1
PY 2022
VL 48
IS 12
BP 5068
EP 5086
DI 10.1109/TSE.2021.3135875
PG 19
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 6X8ON
UT WOS:000896667600017
OA Green Accepted, hybrid
DA 2024-07-18
ER

PT J
AU Ma, FC
   Xu, ZY
   Ren, M
   Yin, ZJ
   Chen, YL
   Qiao, L
   Gu, B
   Li, HZ
   Jiang, Y
   Sun, JG
AF Ma, Fuchen
   Xu, Zhenyang
   Ren, Meng
   Yin, Zijing
   Chen, Yuanliang
   Qiao, Lei
   Gu, Bin
   Li, Huizhong
   Jiang, Yu
   Sun, Jiaguang
TI Pluto: Exposing Vulnerabilities in Inter-Contract Scenarios
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Pluto; Tools; Smart contracts; Semantics; Computer bugs; Codes; Virtual
   machining; Smart contracts; ethereum; inter-contract vulnerabilities
AB Attacks on smart contracts have caused considerable losses to digital assets. Many techniques based on symbolic execution, fuzzing, and static analysis are used to detect contract vulnerabilities. Most of the current analyzers only consider vulnerability detection intra-contract scenarios. However, Ethereum contracts usually interact with others by calling their functions. A bug hidden in a path that depends on information from external contract calls is defined as an inter-contract vulnerability. Failure to deal with this kind of bug can result in potential false negatives and false positives. In this work, we propose Pluto, which supports vulnerability detection in inter-contract scenarios. It first builds an Inter-contract Control Flow Graph (ICFG) to extract semantic information among contract calls. Afterward, it symbolically explores the ICFG and deduces Inter-Contract Path Constraints (ICPC) to check the reachability of execution paths more accurately. Finally, Pluto detects whether there is a vulnerability based on some predefined rules. For evaluation, we compare Pluto with five state-of-the-art tools, including Oyente, Mythril, Securify, ILF, and Clairvoyance on a labeled benchmark and 39,443 real-world Ethereum smart contracts. The result shows that other tools can only detect 10% of the inter-contract vulnerabilities, while Pluto can detect 80% of them on the labeled dataset. Beyond that, Pluto has detected 451 confirmed vulnerabilities on real-world contracts, including 36 vulnerabilities in inter-contract scenarios. Two bugs have been assigned with unique CVE identifiers by the US National Vulnerability Database (NVD). On average, Pluto costs 16.9 seconds to analyze a contract, which is as fast as the state-of-the-art tools.
C1 [Ma, Fuchen; Ren, Meng; Yin, Zijing; Chen, Yuanliang; Sun, Jiaguang] Tsinghua Univ, Sch Software, Beijing, Peoples R China.
   [Xu, Zhenyang] Univ Waterloo, Comp Sci, Waterloo, ON N2L 3G1, Canada.
   [Qiao, Lei; Gu, Bin] Beijing Inst Control Engn, Beijing 10081, Peoples R China.
   [Li, Huizhong] WeBank, Shenzhen 518000, Peoples R China.
   [Jiang, Yu] Tsinghua Univ, Dept CST, Beijing 100084, Peoples R China.
C3 Tsinghua University; University of Waterloo; Tsinghua University
RP Gu, B (corresponding author), Beijing Inst Control Engn, Beijing 10081, Peoples R China.; Jiang, Y (corresponding author), Tsinghua Univ, Dept CST, Beijing 100084, Peoples R China.
EM mafc19@mails.tsinghua.edu.cn; zhenyang.xu@uwaterloo.ca;
   rm19@mails.tsinghua.edu.cn; Aurora@europe.com;
   yuanliang.chen@cs.ox.ac.uk; fly2mars@163.com; gubinbj@sina.com;
   wheatli@webank.com; jiangyu198964@126.com; sunjg@tsinghua.edu.cn
RI Zhang, yuxuan/JXM-9935-2024; wang, hongyuan/JWP-2279-2024; chen,
   yan/JRY-4645-2023; Gu, Bingxin/JNS-4761-2023; chen, jiayi/KHV-5520-2024
OI Gu, Bingxin/0009-0005-5667-1430; Jiang, Yu/0000-0003-0955-503X; Xu,
   Zhenyang/0000-0002-9451-4031; Yin, Zijing/0000-0002-4914-836X
CR [Anonymous], 2020, SOLIDITY SOLIDITY CO
   [Anonymous], 2020, SWC BLOCK VALUES PRO
   [Anonymous], 2020, JDOURLENS USING SAFE
   [Anonymous], 2020, SMARTBUGS SMARTBUGS
   [Anonymous], 2019, LINUX TIME COMMAND
   [Anonymous], 2010, Proceedings of the 19th international symposium on Software testing and analysis, DOI 10.1145/1831708.1831732
   [Anonymous], 2020, ETHEREUM ETHEREUM SE
   [Anonymous], 2020, Z3PROVER Z3
   Atzei N, 2017, LECT NOTES COMPUT SC, V10204, P164, DOI 10.1007/978-3-662-54455-6_8
   Böhme M, 2019, IEEE T SOFTWARE ENG, V45, P489, DOI 10.1109/TSE.2017.2785841
   Böhme M, 2017, CCS'17: PROCEEDINGS OF THE 2017 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P2329, DOI 10.1145/3133956.3134020
   Cadar C, 2013, COMMUN ACM, V56, P82, DOI 10.1145/2408776.2408795
   Chang S, 2019, ETHEREUM SMART CONTR
   Chen HS, 2020, ACM COMPUT SURV, V53, DOI 10.1145/3391195
   Chen JC, 2021, IEEE T SOFTWARE ENG, V48, P2189, DOI 10.1109/TSE.2021.3054928
   Chen JC, 2022, IEEE T SOFTWARE ENG, V48, P327, DOI 10.1109/TSE.2020.2989002
   Chen T, 2022, IEEE T SOFTWARE ENG, V48, P3066, DOI 10.1109/TSE.2021.3078342
   Chen T, 2020, 27TH ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2020), DOI 10.14722/ndss.2020.24449
   Chen T, 2021, IEEE T EMERG TOP COM, V9, P1433, DOI 10.1109/TETC.2020.2979019
   Chen T, 2019, PROCEEDINGS OF THE 2019 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY (CCS'19), P1503, DOI 10.1145/3319535.3345664
   Chen T, 2018, IEEE INFOCOM SER, P1484, DOI 10.1109/INFOCOM.2018.8486401
   Chen T, 2017, LECT NOTES COMPUT SC, V10701, P3, DOI 10.1007/978-3-319-72359-4_1
   Chen YL, 2019, PROCEEDINGS OF THE 28TH USENIX SECURITY SYMPOSIUM, P1967
   Cheng T. S., 2019, 2019 Compound Semiconductor Week (CSW), DOI 10.1109/ICIPRM.2019.8819142
   ConsenSys, 2018, Mythril
   Nguyen TD, 2020, Arxiv, DOI arXiv:2004.08563
   Eth, 2020, WELCOME ETHEREUM WIK
   Ethereum, 2020, SOLIDITY COMPILER 04
   Etherscan, 2020, BLOCK EXPLORER ETHER
   Falkon S., 2017, The Startup
   Ghaleb A, 2020, Arxiv, DOI arXiv:2005.11613
   Grech N, 2018, P ACM PROGRAM LANG, V2, DOI 10.1145/3276486
   Grossman S, 2018, P ACM PROGRAM LANG, V2, DOI 10.1145/3158136
   He JX, 2019, PROCEEDINGS OF THE 2019 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY (CCS'19), P531, DOI 10.1145/3319535.3363230
   Jiang B, 2018, IEEE INT CONF AUTOM, P259, DOI 10.1145/3238147.3238177
   Ma KK, 2011, LECT NOTES COMPUT SC, V6887, P95, DOI 10.1007/978-3-642-23702-7_11
   Lagouvardos S, 2020, P ACM PROGRAM LANG, V4, DOI 10.1145/3428258
   Lee S., 2018, BLOCKCHAIN SMART CON
   Lemieux C, 2018, IEEE INT CONF AUTOM, P475, DOI 10.1145/3238147.3238176
   Luu L, 2016, CCS'16: PROCEEDINGS OF THE 2016 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P254, DOI 10.1145/2976749.2978309
   Nikolic I, 2018, 34TH ANNUAL COMPUTER SECURITY APPLICATIONS CONFERENCE (ACSAC 2018), P653, DOI 10.1145/3274694.3274743
   Org E, 2020, ETHEREUM
   Ren M, 2021, ISSTA '21: PROCEEDINGS OF THE 30TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P566, DOI 10.1145/3460319.3464837
   Sayeed S, 2020, IEEE ACCESS, V8, P24416, DOI 10.1109/ACCESS.2020.2970495
   SECBIT, 2018, DISASTROUS VULNERABI
   So S, 2020, P IEEE S SECUR PRIV, P1678, DOI 10.1109/SP40000.2020.00032
   Stephens N, 2016, 23RD ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2016), DOI 10.14722/ndss.2016.23368
   Tikhomirov S, 2018, 2018 IEEE/ACM 1ST INTERNATIONAL WORKSHOP ON EMERGING TRENDS IN SOFTWARE ENGINEERING FOR BLOCKCHAIN (WETSEB), P9, DOI 10.1145/3194113.3194115
   Torres CF, 2018, 34TH ANNUAL COMPUTER SECURITY APPLICATIONS CONFERENCE (ACSAC 2018), P664, DOI 10.1145/3274694.3274737
   Tsankov P, 2018, PROCEEDINGS OF THE 2018 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY (CCS'18), P67, DOI 10.1145/3243734.3243780
   Ye JM, 2020, PROC INT CONF SOFTW, P274, DOI 10.1145/3377812.3390908
NR 51
TC 7
Z9 8
U1 3
U2 14
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD NOV 1
PY 2022
VL 48
IS 11
BP 4380
EP 4396
DI 10.1109/TSE.2021.3117966
PG 17
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 6C4JD
UT WOS:000881981800008
DA 2024-07-18
ER

PT J
AU Melegati, J
   Edison, H
   Wang, XF
AF Melegati, Jorge
   Edison, Henry
   Wang, Xiaofeng
TI XPro: A Model to Explain the Limited Adoption and Implementation of
   Experimentation in Software Startups
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Software; Business; Technological innovation; Companies; Inhibitors;
   Uncertainty; Testing; Software startups; experimentation;
   experiment-driven software development; startups
ID CUSTOMER FEEDBACK; ACCEPTANCE; ENTREPRENEURSHIP; INNOVATIONS; PRODUCTS;
   USAGE
AB Software startups develop innovative, software-intensive products or services. Such innovativeness translates into uncertainty regarding a matching need for a product from potential customers, representing a possible determinant reason for startup failure. Research has shown that experimentation, an approach based on the use of experiments to guide several aspects of software development, could improve these companies' success rate by fostering the evaluation of assumptions about customers' needs before developing a full-fledged product. Nevertheless, software startups are not using experimentation as expected. In this study, we investigated the reasons behind such a mismatch between theory and practice. To achieve it, we performed a qualitative survey study of 106 failed software startups. We built the eXperimentation Progression model (XPro), demonstrating that the effective adoption and implementation of experimentation is a staged process: first, teams should be aware of experimentation, then they need to develop an intention to experiment, perform the experiments, analyze the results, and finally act based on the obtained learning. Based on the XPro model, we further identified 25 inhibitors that prevent a team from progressing along the stages properly. Our findings inform researchers of how to develop practices and techniques to improve experimentation adoption in software startups. Practitioners could learn various factors that could lead to their startup failure so they could take action to avoid them.
C1 [Melegati, Jorge; Wang, Xiaofeng] Free Univ Bozen Bolzano, Fac Comp Sci, I-39100 Bolzano, Italy.
   [Edison, Henry] NUI Galway, JE Cairnes Sch Business & Econ, Galway H91 TK33, Ireland.
C3 Free University of Bozen-Bolzano
RP Melegati, J (corresponding author), Free Univ Bozen Bolzano, Fac Comp Sci, I-39100 Bolzano, Italy.
EM jmelegatigoncalves@unibz.it; henry.edison@nuigalway.ie;
   xiaofeng.wang@unibz.it
RI Edison, Henry/AAA-9989-2020; Melegati, Jorge/AAG-3925-2021; wang,
   xiaofeng/E-5077-2016
OI Edison, Henry/0000-0002-9494-8059; Melegati, Jorge/0000-0003-1303-4173;
   wang, xiaofeng/0000-0001-8424-419X
FU European Union [754489]; Science Foundation Ireland [13/RC/2094]
FX This project has received funding from the European Union's Horizon 2020
   research and innovation programme under the Marie Sk >> odowska-Curie
   grant agreement No 754489 and with the financial support of the Science
   Foundation Ireland grant 13/RC/2094.
CR Andries P, 2013, STRATEG ENTREP J, V7, P288, DOI 10.1002/sej.1170
   [Anonymous], 2003, CASE STUDY RES DESIG
   [Anonymous], 2013, BASICS SOFTWARE ENG
   Bajwa SS, 2017, EMPIR SOFTW ENG, V22, P2373, DOI 10.1007/s10664-016-9458-0
   Berg V, 2018, J SYST SOFTWARE, V144, P255, DOI 10.1016/j.jss.2018.06.043
   Blank S, 2013, HARVARD BUS REV, V91, P64
   Bortolini RF, 2021, MANAGE DECIS, V59, P1765, DOI 10.1108/MD-07-2017-0663
   Bosch J., 2013, LEAN ENTERPRISE SOFT, V167, DOI [10.1007/978-3-642-44930-7_1, DOI 10.1007/978-3-642-44930-7_1]
   Bosch J., 2018, SIBW, P177
   Bosch J, 2012, LECT NOTES BUS INF P, V114, P27
   Braun V., 2006, QUAL RES PSYCHOL, V3, P77, DOI [DOI 10.1191/1478088706QP063OA, 10.1191/1478088706qp063oa]
   Cantamessa M, 2018, SUSTAINABILITY-BASEL, V10, DOI 10.3390/su10072346
   Chesbrough H, 2010, LONG RANGE PLANN, V43, P354, DOI 10.1016/j.lrp.2009.07.010
   Contigiani A, 2019, IND CORP CHANGE, V28, P551, DOI 10.1093/icc/dtz013
   COOPER RB, 1990, MANAGE SCI, V36, P123, DOI 10.1287/mnsc.36.2.123
   Crowne M, 2002, IEMC-2002: IEEE INTERNATIONAL ENGINEERING MANAGEMENT CONFERENCE, VOLS I AND II, PROCEEDINGS, P338, DOI 10.1109/IEMC.2002.1038454
   Cruzes DS, 2015, EMPIR SOFTW ENG, V20, P1634, DOI 10.1007/s10664-014-9326-8
   Cruzes DS, 2011, INT SYMP EMP SOFTWAR, P275, DOI 10.1109/ESEM.2011.36
   Cukier Daniel, 2018, Journal of Innovation and Entrepreneurship, V7, P14, DOI [DOI 10.1186/S13731-018-0091-6, 10.1186/s13731-018-0091-6]
   DAVIS FD, 1989, MIS QUART, V13, P319, DOI 10.2307/249008
   Dennehy D, 2019, J DECIS SYST, V28, P224, DOI 10.1080/12460125.2019.1642081
   Ewens M, 2018, J FINANC ECON, V128, P422, DOI 10.1016/j.jfineco.2018.03.001
   Fabijan A, 2018, J SOFTW-EVOL PROC, V30, DOI 10.1002/smr.2113
   Fabijan A, 2017, PROC INT CONF SOFTW, P770, DOI 10.1109/ICSE.2017.76
   Fabijan A, 2015, LECT NOTES BUS INF P, V210, P139, DOI 10.1007/978-3-319-19593-3_12
   Fagerholm F, 2017, J SYST SOFTWARE, V123, P292, DOI 10.1016/j.jss.2016.03.034
   Fichman R. G., 1992, P 13 INT C INF SYST, P195
   Fitzgerald B, 2017, J SYST SOFTWARE, V123, P176, DOI 10.1016/j.jss.2015.06.063
   Frederiksen DL, 2017, INT ENTREP MANAG J, V13, P169, DOI 10.1007/s11365-016-0411-x
   Garcia R, 2002, J PROD INNOVAT MANAG, V19, P110, DOI 10.1016/S0737-6782(01)00132-1
   Geldes C, 2017, IND MARKET MANAG, V61, P55, DOI 10.1016/j.indmarman.2016.10.010
   Giardino C, 2015, LECT NOTES BUS INF P, V212, P52, DOI 10.1007/978-3-319-18612-2_5
   Giardino C, 2014, LECT NOTES BUS INF P, V182, P27
   Gralha C, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P823, DOI 10.1145/3180155.3180158
   Gutbrod M, 2017, LECT NOTES COMPUT SC, V10611, P297, DOI 10.1007/978-3-319-69926-4_21
   Herrmann B. L., 2012, TELEFONICA DIGIT STA
   Jansen H., 2010, Forum Qualitative Sozialforschung/Forum: Qualitative Social Research, V11, P1, DOI [DOI 10.17169/FQS-11.2, 10.17169/fqs-11.2.1450, DOI 10.17169/FQS-11.2.1450]
   Jantunen S, 2014, J SYST SOFTWARE, V95, P32, DOI 10.1016/j.jss.2014.03.050
   Kerr WR, 2014, J ECON PERSPECT, V28, P25, DOI 10.1257/jep.28.3.25
   Klotins E, 2021, IEEE T SOFTWARE ENG, V47, P498, DOI 10.1109/TSE.2019.2900213
   Klotins E, 2019, EMPIR SOFTW ENG, V24, P68, DOI 10.1007/s10664-018-9620-y
   Lindgren E, 2016, INFORM SOFTWARE TECH, V77, P80, DOI 10.1016/j.infsof.2016.04.008
   Lynn G. S., 2003, European Journal of Innovation Management, V6, P201, DOI 10.1108/14601060310500922
   Mangalaraj G, 2009, EUR J INFORM SYST, V18, P344, DOI 10.1057/ejis.2009.23
   Melegati J., 2018, SIBW, P193
   Melegati J., 2020, **DATA OBJECT**, DOI [10.5281/zenodo.4017712, DOI 10.5281/ZENODO.4017712]
   Melegati J, 2019, LECT NOTES COMPUT SC, V11915, P554, DOI 10.1007/978-3-030-35333-9_39
   Melegati J, 2019, 2019 IEEE/ACM JOINT 4TH INTERNATIONAL WORKSHOP ON RAPID CONTINUOUS SOFTWARE ENGINEERING AND 1ST INTERNATIONAL WORKSHOP ON DATA-DRIVEN DECISIONS, EXPERIMENTATION AND EVOLUTION (RCOSE-DDREE 2019), P16, DOI 10.1109/RCoSE/DDrEE.2019.00011
   Miles M.B., 2014, Qualitative data analysis: A methods sourcebook, V3rd
   Mohanani R, 2020, IEEE T SOFTWARE ENG, V46, P1318, DOI 10.1109/TSE.2018.2877759
   Nielsen C, 2018, MIT SLOAN MANAGE REV, V59, P65
   Olsson HH, 2015, LECT NOTES BUS INF P, V210, P154, DOI 10.1007/978-3-319-19593-3_13
   Olsson HH, 2014, EUROMICRO CONF PROC, P9, DOI 10.1109/SEAA.2014.75
   Pantiuchina J, 2017, LECT NOTES BUS INF P, V283, P167, DOI 10.1007/978-3-319-57633-6_11
   Purchase S, 2016, IND MARKET MANAG, V58, P123, DOI 10.1016/j.indmarman.2016.05.020
   Riemenschneider CK, 2002, IEEE T SOFTWARE ENG, V28, P1135, DOI 10.1109/TSE.2002.1158287
   Ries E, 2011, The Lean Startup
   Rogers E.M., 2010, DIFFUSION INNOVATION
   Ros R, 2018, PROCEEDINGS 2018 IEEE/ACM 4TH INTERNATIONAL WORKSHOP ON RAPID CONTINUOUS SOFTWARE ENGINEERING (RCOSE), P35, DOI 10.1145/3194760.3194766
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Rysman M, 2009, J ECON PERSPECT, V23, P125, DOI 10.1257/jep.23.3.125
   Senapathi M, 2017, J SYST SOFTWARE, V132, P298, DOI 10.1016/j.jss.2017.07.010
   Senapathi M, 2012, J SYST SOFTWARE, V85, P1255, DOI 10.1016/j.jss.2012.02.025
   Steininger DM, 2019, INFORM SYST J, V29, P363, DOI 10.1111/isj.12206
   Strauss A., 1990, BASICS QUALITATIVE R
   Sutton SM, 2000, IEEE SOFTWARE, V17, P33, DOI 10.1109/52.854066
   Thomke S, 2001, HARVARD BUS REV, V79, P66
   Thomke SH, 1998, MANAGE SCI, V44, P743, DOI 10.1287/mnsc.44.6.743
   Tripathi N, 2018, J SYST SOFTWARE, V146, P130, DOI 10.1016/j.jss.2018.08.059
   Unterkalmsteiner M, 2016, E-INFORMATICA, V10, P89, DOI 10.5277/e-Inf160105
   Venkatesh V, 2000, MANAGE SCI, V46, P186, DOI 10.1287/mnsc.46.2.186.11926
   Williams L, 2003, COMPUTER, V36, P39, DOI 10.1109/MC.2003.1204373
   Wohlin C., 2012, Experimentation in Software Engineering
   Yaman SG, 2017, J SYST SOFTWARE, V133, P195, DOI 10.1016/j.jss.2017.07.009
NR 74
TC 7
Z9 7
U1 0
U2 12
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUN 1
PY 2022
VL 48
IS 6
BP 1929
EP 1946
DI 10.1109/TSE.2020.3042610
PG 18
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 2D5IM
UT WOS:000811580600006
DA 2024-07-18
ER

PT J
AU Chakraborty, S
   Ding, Y
   Allamanis, M
   Ray, B
AF Chakraborty, Saikat
   Ding, Yangruibo
   Allamanis, Miltiadis
   Ray, Baishakhi
TI CODIT: Code Editing With Tree-Based Neural Models
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Computer bugs; Predictive models; Reactive power; Probability
   distribution; Syntactics; Neural networks; Adaptation models; Code
   change; tree-2-tree translation; code synthesis; neural machine
   translator; empirical software engineering
AB The way developers edit day-to-day code tends to be repetitive, often using existing code elements. Many researchers have tried to automate repetitive code changes by learning from specific change templates which are applied to limited scope. The advancement of deep neural networks and the availability of vast open-source evolutionary data opens up the possibility of automatically learning those templates from the wild. However, deep neural network based modeling for code changes and code in general introduces some specific problems that needs specific attention from research community. For instance, compared to natural language, source code vocabulary can be significantly larger. Further, good changes in code do not break its syntactic structure. Thus, deploying state-of-the-art neural network models without adapting the methods to the source code domain yields sub-optimal results. To this end, we propose a novel tree-based neural network system to model source code changes and learn code change patterns from the wild. Specifically, we propose a tree-based neural machine translation model to learn the probability distribution of changes in code. We realize our model with a change suggestion engine, Codit, and train the model with more than 24k real-world changes and evaluate it on 5k patches. Our evaluation shows the effectiveness of Codit in learning and suggesting patches. Codit can also learn specific bug fix pattern from bug fixing patches and can fix 25 bugs out of 80 bugs in Defects4J.
C1 [Chakraborty, Saikat; Ding, Yangruibo; Ray, Baishakhi] Columbia Univ, Dept Comp Sci, New York, NY 10027 USA.
   [Allamanis, Miltiadis] Microsoft Res, Cambridge CB1 2FB, England.
C3 Columbia University; Microsoft
RP Chakraborty, S (corresponding author), Columbia Univ, Dept Comp Sci, New York, NY 10027 USA.
EM saikatc@cs.columbia.edu; yangruibo.ding@columbia.edu;
   miallama@microsoft.com; ray@cs.columbia.edu
RI Chakraborty, Saikat/ABD-4690-2020
OI Chakraborty, Saikat/0000-0002-6889-7171; Ding,
   Yangruibo/0000-0003-3224-6876
FU National Science Foundation [CCF1845893, CCF 1822965, CNS 1842456]
FX This work was supported in part by National Science Foundation Grant
   CCF1845893, CCF 1822965, and CNS 1842456.
CR Abreu R, 2007, TAIC PART 2007 - TESTING: ACADEMIC AND INDUSTRIAL CONFERENCE - PRACTICE AND RESEARCH TECHNIQUES, PROCEEDINGS, P89, DOI 10.1109/TAIC.PART.2007.13
   Ahmad W., 2020, P 58 ANN M ASS COMPU, P4998, DOI 10.18653/v1/2020.acl-main.449
   Allamanis M, 2018, ACM COMPUT SURV, V51, DOI 10.1145/3212695
   Allamanis M, 2018, IEEE T SOFTWARE ENG, V44, P651, DOI 10.1109/TSE.2018.2832048
   Allamanis M, 2016, PR MACH LEARN RES, V48
   Allamanis M, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P472, DOI 10.1145/2635868.2635901
   Alon U, 2019, P ACM PROGRAM LANG, V3, DOI 10.1145/3290353
   Alon Uri, 2018, INT C LEARN REPR
   Andersen J, 2012, IEEE INT CONF AUTOM, P382, DOI 10.1145/2351676.2351753
   Nguyen AT, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P511, DOI 10.1145/2950290.2950333
   Nguyen AT, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P858, DOI 10.1109/ICSE.2015.336
   Nguyen AT, 2015, IEEE INT CONF AUTOM, P585, DOI 10.1109/ASE.2015.74
   [Anonymous], 2018, GERRIT CODE REV DATA
   [Anonymous], 2018, P INT C LEARNING REP
   [Anonymous], 2008, INTRO AUTOMATA THEOR
   Arcuri A, 2008, IEEE C EVOL COMPUTAT, P162, DOI 10.1109/CEC.2008.4630793
   Bahdanau D, 2015, 3 INT C LEARN REPR I
   Barr ET, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P306, DOI 10.1145/2635868.2635898
   Beller M, 2017, IEEE WORK CONF MIN S, P447, DOI 10.1109/MSR.2017.24
   Boshernitsan M, 2007, CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, VOLS 1 AND 2, P567
   Brockschmidt Marc, 2018, ICLR
   Chen XY, 2018, 32 C NEURAL INFORM P, V31
   Chen ZM, 2021, IEEE T SOFTWARE ENG, V47, P1943, DOI 10.1109/TSE.2019.2940179
   CHOMSKY N, 1956, IRE T INFORM THEOR, V2, P113
   Dinella E., 2019, INT C LEARN REPR
   E. Foundation, 2018, ECL IDE
   Falleri Jean-Remy, 2014, P 29 ACM IEEE INT C, P313
   Flener P, 2012, LOGIC PROGRAM SYNTHE, V295
   Foster SR, 2012, PROC INT CONF SOFTW, P222, DOI 10.1109/ICSE.2012.6227191
   Ge X, 2012, PROC INT CONF SOFTW, P211, DOI 10.1109/ICSE.2012.6227192
   Gu XD, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P933, DOI 10.1145/3180155.3180167
   Gupta R, 2017, AAAI CONF ARTIF INTE, P1345
   Hartmann B, 2010, CHI2010: PROCEEDINGS OF THE 28TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, VOLS 1-4, P1019
   Hellendoorn VJ, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P763, DOI 10.1145/3106237.3106290
   Hindle A, 2012, PROC INT CONF SOFTW, P837, DOI 10.1109/ICSE.2012.6227135
   Nguyen HA, 2013, IEEE INT CONF AUTOM, P180, DOI 10.1109/ASE.2013.6693078
   Hoan AN, 2010, ACM SIGPLAN NOTICES, V45, P302, DOI 10.1145/1932682.1869486
   Nguyen HDT, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P772, DOI 10.1109/ICSE.2013.6606623
   Hu X, 2018, INT C PROGRAM COMPRE, P200, DOI 10.1145/3196321.3196334
   Jiang JJ, 2018, ISSTA'18: PROCEEDINGS OF THE 27TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P298, DOI 10.1145/3213846.3213871
   Just R, 2014, P 2014 INT S SOFTW T, P437, DOI DOI 10.1145/2610384.2628055
   Kaleeswaran S, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P266, DOI 10.1145/2568225.2568258
   Karaivanov S., 2014, P 2014 ACM INT S NEW, P173, DOI 10.1145/2661136.2661148
   Karampatsis R. M, 2019, ARXIV190513334
   Kim D, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P802, DOI 10.1109/ICSE.2013.6606626
   Kim M, 2007, PROC INT CONF SOFTW, P333
   Klein G, 2017, PROCEEDINGS OF THE 55TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (ACL 2017): SYSTEM DEMONSTRATIONS, P67, DOI 10.18653/v1/P17-4012
   Knuth D. E., 1968, Mathematical Systems Theory, V2, P127, DOI 10.1007/BF01692511
   Kommrusch S., 2020, ARXIV200206799
   Le Goues C, 2012, IEEE T SOFTWARE ENG, V38, P54, DOI 10.1109/TSE.2011.104
   Le Goues C, 2012, PROC INT CONF SOFTW, P3, DOI 10.1109/ICSE.2012.6227211
   Le XBD, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P213, DOI 10.1109/SANER.2016.76
   Liu P, 2014, ACM SIGPLAN NOTICES, V49, P543, DOI [10.1145/2714064.2660217, 10.1145/2660193.2660217]
   Liu ZX, 2018, IEEE INT CONF AUTOM, P373, DOI 10.1145/3238147.3238190
   Logozzo F, 2012, ACM SIGPLAN NOTICES, V47, P133, DOI 10.1145/2398857.2384626
   Long F, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P166, DOI 10.1145/2786805.2786811
   Lutellier T, 2019, ARXIV190608691
   Maddison CJ, 2014, PR MACH LEARN RES, V32, P649
   Mallinson J, 2017, 15TH CONFERENCE OF THE EUROPEAN CHAPTER OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (EACL 2017), VOL 1: LONG PAPERS, P881
   Martinez M, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE COMPANION 2014), P492, DOI 10.1145/2591062.2591114
   MASEK WJ, 1980, J COMPUT SYST SCI, V20, P18, DOI 10.1016/0022-0000(80)90002-1
   Mechtaev S, 2016, PROC INT CONF SOFTW, P691, DOI 10.1145/2884781.2884807
   Meng N, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P392, DOI 10.1109/ICSE.2015.58
   Meng N, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P502, DOI 10.1109/ICSE.2013.6606596
   Meng N, 2011, ACM SIGPLAN NOTICES, V46, P329, DOI 10.1145/1993316.1993537
   Microsoft, 2018, VIS STUD
   Murali V, 2017, ARXIV170305698
   Nguyen A.T., 2014, P 29 ACM IEEE INT C, P457, DOI [10.1145/2642937.2643010, DOI 10.1145/2642937.2643010]
   Nguyen Tien N, 2010, Proceedings of the 32Nd ACM/IEEE International Conference on Software Engineering-Volume 1, ICSE '10, P315
   Padioleau Y, 2008, EUROSYS'08: PROCEEDINGS OF THE EUROSYS 2008 CONFERENCE, P247, DOI 10.1145/1357010.1352618
   Parvez MR, 2018, PROCEEDINGS OF THE 56TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (ACL), VOL 1, P2373
   Polosukhin Illia, 2018, P INT C LEARN REPR I
   Qi Zichao, 2015, P 2015 INT S SOFTW T, P24, DOI DOI 10.1145/2771783.2771791
   Ray B, 2016, PROC INT CONF SOFTW, P428, DOI 10.1145/2884781.2884848
   Ray B, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P34, DOI 10.1109/MSR.2015.11
   Ray B, 2013, IEEE INT CONF AUTOM, P367, DOI 10.1109/ASE.2013.6693095
   Raychev V, 2014, ACM SIGPLAN NOTICES, V49, P419, DOI [10.1145/2594291.2594321, 10.1145/2666356.2594321]
   Raychev V, 2013, ACM SIGPLAN NOTICES, V48, P339, DOI [10.1145/2509136.2509544, 10.1145/2544173.2509544]
   Reddy D. R., 1977, SPEECH UNDERSTANDING, V17
   Robbes R, 2008, LECT NOTES COMPUT SC, V5301, P174, DOI 10.1007/978-3-540-87875-9_13
   Rolim R, 2017, PROC INT CONF SOFTW, P404, DOI 10.1109/ICSE.2017.44
   Saha RK, 2017, IEEE INT CONF AUTOM, P648, DOI 10.1109/ASE.2017.8115675
   Saha S, 2019, PROC INT CONF SOFTW, P13, DOI 10.1109/ICSE.2019.00020
   Sajnani H, 2016, PROC INT CONF SOFTW, P1157, DOI 10.1145/2884781.2884877
   Tansey W, 2008, OOPSLA 2008 NASHVILLE, CONFERENCE PROCEEDINGS, P295
   Tarlow D, 2019, ARXIV191101205
   Tian Y, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P752, DOI 10.1145/3106237.3106300
   Tu ZP, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P269, DOI 10.1145/2635868.2635875
   Tufano M, 2019, PROC INT CONF SOFTW, P25, DOI 10.1109/ICSE.2019.00021
   Tufano M, 2018, IEEE INT CONF AUTOM, P832, DOI 10.1145/3238147.3240732
   Wang S, 2016, IEEE INT CONF AUTOM, P708, DOI 10.1145/2970276.2970341
   Wen M, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1, DOI 10.1145/3180155.3180233
   White M, 2016, IEEE INT CONF AUTOM, P87, DOI 10.1145/2970276.2970326
   Xia Xiaobo, 2019, Advances in neural information processing systems, V32
   Xu SB, 2019, PROCEEDINGS OF THE TWENTY-EIGHTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P3975
   Yin PC, 2017, PROCEEDINGS OF THE 55TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (ACL 2017), VOL 1, P440, DOI 10.18653/v1/P17-1041
   Yin Pengcheng, 2018, Learning to represent edits
   Ying ATT, 2004, IEEE T SOFTWARE ENG, V30, P574, DOI 10.1109/TSE.2004.52
   Zimmermann T, 2005, IEEE T SOFTWARE ENG, V31, P429, DOI 10.1109/TSE.2005.72
NR 99
TC 53
Z9 58
U1 2
U2 6
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD APR 1
PY 2022
VL 48
IS 4
BP 1385
EP 1399
DI 10.1109/TSE.2020.3020502
PG 15
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 0N4HC
UT WOS:000782799700016
OA Green Submitted, hybrid
DA 2024-07-18
ER

PT J
AU Tsantalis, N
   Ketkar, A
   Dig, D
AF Tsantalis, Nikolaos
   Ketkar, Ameya
   Dig, Danny
TI RefactoringMiner 2.0
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Tools; Open source software; Software systems; Task analysis; Libraries;
   Syntactics; Maintenance engineering; Refactoring mining; refactoring
   oracle; precision; recall; execution time; git; commit
ID METRIC THRESHOLDS; CODE
AB Refactoring detection is crucial for a variety of applications and tasks: (i) empirical studies about code evolution, (ii) tools for library API migration, (iii) code reviews and change comprehension. However, recent research has questioned the accuracy of the state-of-the-art refactoring mining tools, which poses threats to the reliability of the detected refactorings. Moreover, the majority of refactoring mining tools depend on code similarity thresholds. Finding universal threshold values that can work well for all projects, regardless of their architectural style, application domain, and development practices is extremely challenging. Therefore, in a previous work [N. Tsantalis, M. Mansouri, L. M. Eshkevari, D. Mazinanian, and D. Dig, Accurate and efficient refactoring detection in commit history, in 40th International Conference on Software Engineering, 2018, pp. 483-494], we introduced the first refactoring mining tool that does not require any code similarity thresholds to operate. In this work, we extend our tool to support low-level refactorings that take place within the body of methods. To evaluate our tool, we created one of the most accurate, complete, and representative refactoring oracles to date, including 7,226 true instances for 40 different refactoring types detected by one (minimum) up to six (maximum) different tools, and validated by one up to four refactoring experts. Our evaluation showed that our approach achieves the highest average precision (99.6 percent) and recall (94 percent) among all competitive tools, and on median is 2.6 times faster than the second faster competitive tool.
C1 [Tsantalis, Nikolaos] Concordia Univ, Dept Comp Sci & Software Engn, Montreal, PQ H3G 1M8, Canada.
   [Ketkar, Ameya] Oregon State Univ, Sch Elect Engn & Comp Sci, Corvallis, OR USA.
   [Dig, Danny] Univ Colorado, Dept Comp Sci, Boulder, CO 80309 USA.
C3 Concordia University - Canada; Oregon State University; University of
   Colorado System; University of Colorado Boulder
RP Tsantalis, N (corresponding author), Concordia Univ, Dept Comp Sci & Software Engn, Montreal, PQ H3G 1M8, Canada.
EM nikolaos.tsantalis@concordia.ca; ketkara@oregonstate.edu;
   digd@eecs.oregonstate.edu
RI Tsantalis, Nikolaos/AAR-7845-2020; Ketkar, Ameya/KVX-7963-2024
OI Tsantalis, Nikolaos/0000-0003-2508-3845; 
FU NSERC [RGPIN-2018-05095]; NSF [CCF-1553741]
FX \ We are grateful to the anonymous reviewers for their insightful and
   constructive feedback for improving the paper. The authors would like to
   thank Dr. Davood Mazinanian for the features he implemented in the web
   application used for validating the refactoring instances in our oracle.
   This research was partially supported by NSERC grant RGPIN-2018-05095
   and NSF grant CCF-1553741.
CR Alves ELG, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P751, DOI 10.1145/2635868.2661674
   Alves TL, 2010, PROC IEEE INT CONF S
   Aniche M, 2016, IEEE INT WORK C SO, P41, DOI 10.1109/SCAM.2016.19
   Antoniol G, 2004, 7TH INTERNATIONAL WORKSHOP ON PRINCIPLES OF SOFTWARE EVOLUTION, P31, DOI 10.1109/IWPSE.2004.1334766
   Biegel B., 2011, Comparison of similarity metrics for refactoring detection, P53
   Bogart C, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P109, DOI 10.1145/2950290.2950325
   Brito A, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P507, DOI 10.1109/SANER.2018.8330249
   Buckley J, 2005, J SOFTW MAINT EVOL-R, V17, P309, DOI 10.1002/smr.319
   Neto EC, 2019, INT SYMP EMP SOFTWAR, P94
   Carletti S, 2019, 2 YEARS SQUASH MERGE
   Cedrim D, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P465, DOI 10.1145/3106237.3106259
   Chaparro O, 2014, PROC IEEE INT CONF S, P456, DOI 10.1109/ICSME.2014.73
   Chen ZY, 2018, INFORM SOFTWARE TECH, V103, P174, DOI 10.1016/j.infsof.2018.07.003
   da Costa DA, 2017, IEEE T SOFTWARE ENG, V43, P641, DOI 10.1109/TSE.2016.2616306
   Demeyer S, 2000, ACM SIGPLAN NOTICES, V35, P166, DOI 10.1145/354222.353183
   Dig D, 2007, AUTOMATED UPGRADING
   Dig D, 2008, IEEE T SOFTWARE ENG, V34, P321, DOI 10.1109/TSE.2008.29
   Dig D, 2006, LECT NOTES COMPUT SC, V4067, P404
   Fakhoury S, 2019, INT C PROGRAM COMPRE, P2, DOI 10.1109/ICPC.2019.00014
   Falleri Jean-Remy, 2014, P 29 ACM IEEE INT C, P313
   Ferreira KAM, 2012, J SYST SOFTWARE, V85, P244, DOI 10.1016/j.jss.2011.05.044
   Fluri B, 2007, IEEE T SOFTWARE ENG, V33, P725, DOI 10.1109/TSE.2007.70731
   Fontana FA, 2016, EMPIR SOFTW ENG, V21, P1143, DOI 10.1007/s10664-015-9378-4
   Fontana FA, 2015, INT WORKS EMERG TREN, P44, DOI 10.1109/WETSoM.2015.14
   Fontana FA, 2012, EUR CON SFTWR MTNCE, P235, DOI 10.1109/CSMR.2012.32
   Foster SR, 2012, PROC INT CONF SOFTW, P222, DOI 10.1109/ICSE.2012.6227191
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   Fowler M., 2005, FLUENT INTERFACE
   Fülöp LJ, 2008, CSMR 2008: 12TH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, P143
   Ge X, 2017, S VIS LANG HUM CEN C, P71, DOI 10.1109/VLHCC.2017.8103453
   Ge X, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P1095, DOI 10.1145/2568225.2568280
   Ge X, 2012, PROC INT CONF SOFTW, P211, DOI 10.1109/ICSE.2012.6227192
   Ge Xi, 2014, P 7 INT WORKSHOP COO, P99, DOI 10.1145/2593702
   Godfrey MW, 2005, IEEE T SOFTWARE ENG, V31, P166, DOI 10.1109/TSE.2005.28
   Iammarino M, 2019, PROC IEEE INT CONF S, P186, DOI 10.1109/ICSME.2019.00029
   Kadar Istvan, 2016, 12 INT C PRED MOD DA, DOI [10.1145/2972958.2972962, DOI 10.1145/2972958.2972962]
   Kamiya T, 2002, IEEE T SOFTWARE ENG, V28, P654, DOI 10.1109/TSE.2002.1019480
   Ketkar A., 2019, TOOLS USED EVALUATIO
   Kim M., 2010, PROC 18 ACM SIGSOFT, P371, DOI [10.1145/1882291.1882353, DOI 10.1145/1882291.1882353]
   Kim S, 2006, IEEE INT CONF AUTOM, P81
   Kniesel G, 2009, INT C PROGRAM COMPRE, P208, DOI 10.1109/ICPC.2009.5090044
   Kondrak G, 2005, LECT NOTES COMPUT SC, V3772, P115
   LEVENSHT.VI, 1965, DOKL AKAD NAUK SSSR+, V163, P845
   Lin B, 2019, 2019 IEEE 26TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER), P594, DOI [10.1109/SANER.2019.8667992, 10.1109/saner.2019.8667992]
   Lucas W, 2019, PROCEEDINGS OF THE XXXIII BRAZILIAN SYMPOSIUM ON SOFTWARE ENGINEERING, SBES 2019, P187, DOI 10.1145/3350768.3350791
   Mahmoudi M, 2019, 2019 IEEE 26TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER), P151, DOI [10.1109/saner.2019.8668012, 10.1109/SANER.2019.8668012]
   Mahmoudi M, 2018, IEEE WORK CONF MIN S, P220, DOI 10.1145/3196398.3196434
   Mansour H., 2019, REFACTORING AWARE CO
   McDonnell T, 2013, PROC IEEE INT CONF S, P70, DOI 10.1109/ICSM.2013.18
   Moonen Leon, 2001, P 2 INT C EXTR PROGR
   Moreno L, 2017, IEEE T SOFTWARE ENG, V43, P106, DOI 10.1109/TSE.2016.2591536
   Murphy-Hill E, 2012, IEEE T SOFTWARE ENG, V38, P5, DOI 10.1109/TSE.2011.41
   Negara S, 2013, LECT NOTES COMPUT SC, V7920, P552, DOI 10.1007/978-3-642-39038-8_23
   Negara S, 2012, LECT NOTES COMPUT SC, V7313, P79, DOI 10.1007/978-3-642-31057-7_5
   Oliveira P, 2014, 2014 SOFTWARE EVOLUTION WEEK - IEEE CONFERENCE ON SOFTWARE MAINTENANCE, REENGINEERING, AND REVERSE ENGINEERING (CSMR-WCRE), P254, DOI 10.1109/CSMR-WCRE.2014.6747177
   Palantir Technologies, 2018, COD REV BEST PRACT
   Peruma Anthony, 2018, P 2 INT W REF MONTP, P26, DOI DOI 10.1145/3242163.3242169
   Prete K, 2010, PROC IEEE INT CONF S
   Rachatasumrit N, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P357, DOI 10.1109/ICSM.2012.6405293
   Shen B, 2019, P ACM PROGRAM LANG, V3, DOI 10.1145/3360596
   Sherman A, 2017, ALWAYS SQUASH REBASE
   Silva D, 2017, IEEE WORK CONF MIN S, P269, DOI 10.1109/MSR.2017.14
   Silva D, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P858, DOI 10.1145/2950290.2950305
   Silva DS, 2020, INT J ENTREP BEHAV R, V26, P595, DOI [10.1108/IJEBR-07-2019-0425, 10.1109/TSE.2020.2968072]
   Sliwerski J., 2005, ACM SIGSOFT SOFTWARE, P1, DOI DOI 10.1145/1082983.1083147
   Soares G, 2013, J SYST SOFTWARE, V86, P1006, DOI 10.1016/j.jss.2012.10.040
   Soetens QD, 2015, 14TH INTERNATIONAL WORKSHOP ON PRINCIPLES OF SOFTWARE EVOLUTION (IWPSE 2015), P9, DOI 10.1145/2804360.2804362
   Tsantalis N., 2019, REFACTORING ORACLE
   Tsantalis N, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P483, DOI 10.1145/3180155.3180206
   Tufano M, 2017, J SOFTW-EVOL PROC, V29, DOI 10.1002/smr.1838
   Wang KY, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P233, DOI 10.1145/3180155.3180254
   Weissgerber P, 2006, IEEE INT CONF AUTOM, P231
   Williams C, 2008, P 2008 WORKSHOP DEFE, P32
   Xing Z., 2005, 20 IEEEACM INT C AUT, P54, DOI DOI 10.1145/1101908.1101919
   Xing ZC, 2006, WORK CONF REVERSE EN, P263
   Xing ZC, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P951
NR 76
TC 80
Z9 83
U1 0
U2 1
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAR 1
PY 2022
VL 48
IS 3
BP 930
EP 950
DI 10.1109/TSE.2020.3007722
PG 21
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA ZU6ZO
UT WOS:000769989900013
OA hybrid
DA 2024-07-18
ER

PT J
AU Xu, TT
   Chen, LS
   Pei, Y
   Zhang, T
   Pan, MX
   Furia, CA
AF Xu, Tongtong
   Chen, Liushan
   Pei, Yu
   Zhang, Tian
   Pan, Minxue
   Furia, Carlo A.
TI RESTORE: Retrospective Fault Localization Enhancing Automated Program
   Repair
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
ID CODE
AB Fault localization is a crucial step of automated program repair, because accurately identifying program locations that are most closely implicated with a fault greatly affects the effectiveness of the patching process. An ideal fault localization technique would provide precise information while requiring moderate computational resources-to best support an efficient search for correct fixes. In contrast, most automated program repair tools use standard fault localization techniques-which are not tightly integrated with the overall program repair process, and hence deliver only subpar efficiency. In this paper, we present retrospective fault localization: a novel fault localization technique geared to the requirements of automated program repair. A key idea of retrospective fault localization is to reuse the outcome of failed patch validation to support mutation-based dynamic analysis-providing accurate fault localization information without incurring onerous computational costs. We implemented retrospective fault localization in a tool called RESTORE-based on the JAID Java program repair system. Experiments involving faults from the DEFECTS4J standard benchmark indicate that retrospective fault localization can boost automated program repair: RESTORE efficiently explores a large fix space, delivering state-of-the-art effectiveness (41 DEFECTS4J bugs correctly fixed, 8 of which no other automated repair tool for Java can fix) while simultaneously boosting performance (speedup over 3 compared to JAID). Retrospective fault localization is applicable to any automated program repair techniques that rely on fault localization and dynamic validation of patches.
C1 [Xu, Tongtong; Chen, Liushan; Zhang, Tian; Pan, Minxue] Nanjing Univ, State Key Lab Novel Software Technol, Nanjing 210023, Jiangsu, Peoples R China.
   [Xu, Tongtong; Chen, Liushan; Pei, Yu] Hong Kong Polytech Univ, Dept Comp, Hung Hom, Hong Kong, Peoples R China.
   [Pan, Minxue] Nanjing Univ, Software Inst, Nanjing 210023, Jiangsu, Peoples R China.
   [Furia, Carlo A.] USI Univ Svizzera Italiana, Software Inst, CH-6904 Lugano, Switzerland.
C3 Nanjing University; Hong Kong Polytechnic University; Nanjing
   University; Universita della Svizzera Italiana
RP Zhang, T; Pan, MX (corresponding author), Nanjing Univ, State Key Lab Novel Software Technol, Nanjing 210023, Jiangsu, Peoples R China.; Pei, Y (corresponding author), Hong Kong Polytech Univ, Dept Comp, Hung Hom, Hong Kong, Peoples R China.; Pan, MX (corresponding author), Nanjing Univ, Software Inst, Nanjing 210023, Jiangsu, Peoples R China.; Furia, CA (corresponding author), USI Univ Svizzera Italiana, Software Inst, CH-6904 Lugano, Switzerland.
EM dz1633014@smail.nju.edu.cn; cslschen@comp.polyu.edu.hk;
   csypei@comp.polyu.edu.hk; ztluck@nju.edu.cn; mxp@nju.edu.cn;
   furiac@usi.ch
RI Pan, Minxue/AIC-5169-2022; Pei, Yu/GRI-9837-2022
OI Pei, Yu/0000-0001-6065-6958; Furia, Carlo A./0000-0003-1040-3201; CHEN,
   Liushan/0000-0003-0414-4987; Xu, Tongtong/0000-0002-4323-497X
FU National Natural Science Foundation of China [61690204, 61972193];
   Fundamental Research Funds for the Central Universities, China
   [14380020, 14380022]; Hong Kong RGC General Research Fund (GRF) [PolyU
   152703/16E, PolyU 152002/18E]; Hong Kong Polytechnic University
   [1-ZVJ1]; Swiss National Science Foundation (SNF) [Hi-Fi 200021-182060]
FX Tongtong Xu, Tian Zhang, and Minxue Pan were supported by the National
   Natural Science Foundation of China (No. 61690204 and 61972193) and the
   Fundamental Research Funds for the Central Universities, China (No.
   14380020 and 14380022). Liushan Chen and Yu Pei were supported by the
   Hong Kong RGC General Research Fund (GRF) under grant PolyU 152703/16E
   and PolyU 152002/18E and by the Hong Kong Polytechnic University under
   internal fund 1-ZVJ1 and G-YBXU. Carlo A. Furia was partially supported
   by the Swiss National Science Foundation (SNF) under grant Hi-Fi
   200021-182060.
CR Abreu R, 2007, TAIC PART 2007 - TESTING: ACADEMIC AND INDUSTRIAL CONFERENCE - PRACTICE AND RESEARCH TECHNIQUES, PROCEEDINGS, P89, DOI 10.1109/TAIC.PART.2007.13
   Abreu R, 2006, 12TH PACIFIC RIM INTERNATIONAL SYMPOSIUM ON DEPENDABLE COMPUTING, PROCEEDINGS, P39
   [Anonymous], 2013, P 2013 INT S SOFTW T
   Arcuri A, 2008, IEEE C EVOL COMPUTAT, P162, DOI 10.1109/CEC.2008.4630793
   Briand LC, 2007, ISSRE 2007: 18TH IEEE INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P137, DOI 10.1109/ISSRE.2007.31
   Chen LS, 2021, IEEE T SOFTWARE ENG, V47, P2841, DOI 10.1109/TSE.2020.2970009
   Chen LS, 2017, IEEE INT CONF AUTOM, P637, DOI 10.1109/ASE.2017.8115674
   Critchlow D., 2012, LECT NOTES STAT
   Debroy Vidroha, 2010, Proceedings of the Third IEEE International Conference on Software Testing, Verification and Validation (ICST 2010), P65, DOI 10.1109/ICST.2010.66
   Durieux T., 2017, HAL01480084
   Fast E., 2010, Conference on Genetic and Evolutionary Computation, P965
   Gazzola L, 2019, IEEE T SOFTWARE ENG, V45, P34, DOI 10.1109/TSE.2017.2755013
   Gelman A, 2009, AM SCI, V97, P310, DOI 10.1511/2009.79.310
   Gupta R., 2019, ABS190512454 CORR
   Nguyen HDT, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P772, DOI 10.1109/ICSE.2013.6606623
   Hoefler T, 2015, PROCEEDINGS OF SC15: THE INTERNATIONAL CONFERENCE FOR HIGH PERFORMANCE COMPUTING, NETWORKING, STORAGE AND ANALYSIS, DOI 10.1145/2807591.2807644
   Hong S, 2015, IEEE INT CONF AUTOM, P464, DOI 10.1109/ASE.2015.14
   Hua JR, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P12, DOI 10.1145/3180155.3180245
   Jia Y, 2011, IEEE T SOFTWARE ENG, V37, P649, DOI 10.1109/TSE.2010.62
   Jiang JJ, 2018, ISSTA'18: PROCEEDINGS OF THE 27TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P298, DOI 10.1145/3213846.3213871
   Jones J.A., 2005, P 20 IEEE ACM INT C, P273, DOI [10.1145/1101908.1101949, DOI 10.1145/1101908.1101949]
   Just R, 2014, P 2014 INT S SOFTW T, P437, DOI DOI 10.1145/2610384.2628055
   Kaleeswaran S, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P266, DOI 10.1145/2568225.2568258
   Kim D, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P802, DOI 10.1109/ICSE.2013.6606626
   Le Goues C, 2012, PROC INT CONF SOFTW, P3, DOI 10.1109/ICSE.2012.6227211
   Le XBD, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P593, DOI 10.1145/3106237.3106309
   Le XBD, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P213, DOI 10.1109/SANER.2016.76
   Liblit B, 2005, ACM SIGPLAN NOTICES, V40, P15, DOI 10.1145/1064978.1065014
   Liu C, 2006, IEEE T SOFTWARE ENG, V32, P831, DOI 10.1109/TSE.2006.105
   Long F, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P727, DOI 10.1145/3106237.3106253
   Long F, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P166, DOI 10.1145/2786805.2786811
   Long F, 2016, ACM SIGPLAN NOTICES, V51, P298, DOI 10.1145/2914770.2837617
   Martinez M, 2017, EMPIR SOFTW ENG, V22, P1936, DOI 10.1007/s10664-016-9470-4
   McElreath R., 2015, Statistical Rethinking, V1st
   Mechtaev S, 2016, PROC INT CONF SOFTW, P691, DOI 10.1145/2884781.2884807
   Mechtaev S, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P448, DOI 10.1109/ICSE.2015.63
   Monperrus M, 2018, ACM COMPUT SURV, V51, DOI 10.1145/3105906
   Monperrus M, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P234, DOI 10.1145/2568225.2568324
   Moon S, 2014, 2014 IEEE SEVENTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST), P153, DOI 10.1109/ICST.2014.28
   Naish L, 2011, ACM T SOFTW ENG METH, V20, DOI 10.1145/2000791.2000795
   Papadakis M, 2015, SOFTW TEST VERIF REL, V25, P605, DOI 10.1002/stvr.1509
   Parnin C., 2011, P 2011 INT S SOFTWAR, P199, DOI [10.1145/2001420.2001445, DOI 10.1145/2001420.2001445]
   Pei Y, 2014, IEEE T SOFTWARE ENG, V40, P427, DOI 10.1109/TSE.2014.2312918
   Qi YH, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P254, DOI 10.1145/2568225.2568254
   Qi YH, 2013, PROC IEEE INT CONF S, P180, DOI 10.1109/ICSM.2013.29
   Qi Zichao, 2015, P 2015 INT S SOFTW T, P24, DOI DOI 10.1145/2771783.2771791
   Renieris M, 2003, 18TH IEEE INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P30, DOI 10.1109/ASE.2003.1240292
   Saha RK, 2017, IEEE INT CONF AUTOM, P648, DOI 10.1109/ASE.2017.8115675
   Smith EK, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P532, DOI 10.1145/2786805.2786825
   Solar-Lezama Armando, 2013, International Journal on Software Tools for Technology Transfer, V15, P475, DOI 10.1007/s10009-012-0249-7
   Timperley CS, 2017, LECT NOTES COMPUT SC, V10452, P99, DOI 10.1007/978-3-319-66299-2_7
   Walcott K.R., 2006, P INT S SOFTW TEST A, P1, DOI DOI 10.1145/1146238.1146240
   Weimer W, 2013, IEEE INT CONF AUTOM, P356, DOI 10.1109/ASE.2013.6693094
   Weimer W, 2009, PROC INT CONF SOFTW, P364, DOI 10.1109/ICSE.2009.5070536
   Wen M, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1, DOI 10.1145/3180155.3180233
   Wong WE, 2016, IEEE T SOFTWARE ENG, V42, P707, DOI 10.1109/TSE.2016.2521368
   Wong WE, 2010, J SYST SOFTWARE, V83, P188, DOI 10.1016/j.jss.2009.09.037
   Wong WE, 2009, INT J SOFTW ENG KNOW, V19, P573, DOI 10.1142/S021819400900426X
   Xin Q, 2017, IEEE INT CONF AUTOM, P660, DOI 10.1109/ASE.2017.8115676
   Xiong YF, 2017, PROC INT CONF SOFTW, P416, DOI 10.1109/ICSE.2017.45
   Xuan JF, 2017, IEEE T SOFTWARE ENG, V43, P34, DOI 10.1109/TSE.2016.2560811
   Zeller A., 2005, Why Programs Fail: A Guide to Systematic Debugging
   Zhivich M, 2009, IEEE SECUR PRIV, V7, P87, DOI 10.1109/MSP.2009.56
NR 63
TC 4
Z9 5
U1 6
U2 18
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JAN 1
PY 2022
VL 48
IS 1
BP 309
EP 326
DI 10.1109/TSE.2020.2987862
PG 18
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA YG0HJ
UT WOS:000742179000018
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Melo, L
   Wiese, I
   d'Amorim, M
AF Melo, Luis
   Wiese, Igor
   d'Amorim, Marcelo
TI Using Docker to Assist Q&A Forum Users
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Containers; Servers; Tools; Web services; Proposals; Electronic mail;
   Container; docker; issue reproducibility; community question answering;
   tool support
AB Q&A forums are today a valuable tool to assist developers in programming tasks. Unfortunately, contributions to these forums are often unclear and incomplete. Docker is a container solution that enables software developers to encapsulate an operating environment and could help address reproducibility issues. This artile reports on a feasibility study to evaluate if Docker can help improve reproducibility in Stack Overflow. We started surveying Stack Overflow users to understand their perceptions on the proposal of using Docker to reproduce Stack Overflow posts. Participants were critical and mentioned two important aspects: cost and need. To validate their criticism, we conducted an exploratory study focused on understanding how costly the task of creating containers for posts is for developers. Overall, results indicate that the cost of creating containers is not high, especially due to the fact that dockerfiles are highly similar and small. Based on these findings we developed a tool, dubbed Frisk, to assist developers in creating containers for those posts. We then conducted a user study to evaluate interest of Stack Overflow developers on the tool. We found that, on average, users spent nearly ten minutes interacting with Frisk and that 45.3% of the 563 Frisk sessions we created for existing posts resulted in a successful access to the corresponding web service by the owners of the post. Overall, this artile provides early evidence that the use of Docker in Q&A forums should be encouraged for configuration-related posts.
C1 [Melo, Luis] CESAR, BR-50030390 Recife, PE, Brazil.
   [Wiese, Igor] Fed Univ Technol Parana UTFPR, Dept Comp, BR-13565905 Curitiba, Parana, Brazil.
   [d'Amorim, Marcelo] Univ Fed Pernambuco, Ctr Informat, BR-50670901 Recife, PE, Brazil.
C3 Universidade Tecnologica Federal do Parana; Universidade Federal de
   Pernambuco
RP Melo, L (corresponding author), CESAR, BR-50030390 Recife, PE, Brazil.
EM lhsm@cesar.org.br; igor@utfpr.edu.br; damorim@cin.ufpe.br
RI ; d'Amorim, Marcelo/D-1703-2017
OI Scaliante Wiese, Igor/0000-0001-9943-5570; d'Amorim,
   Marcelo/0000-0002-1323-8769
FU INES 2.0; FACEPE [PRONEX APQ 0388-1.03/14, APQ-0399-1.03/17]; CAPES
   [88887.136410/2017-00]; CNPq [465614/2014-0]; FACEPE/CAPES
   [PBPG-1175-1.03/16]
FX This research was partially funded by INES 2.0, FACEPE Grants PRONEX APQ
   0388-1.03/14 and APQ-0399-1.03/17, CAPES Grant 88887.136410/2017-00, and
   CNPq Grant 465614/2014-0. Luis was supported by the FACEPE/CAPES
   fellowship number PBPG-1175-1.03/16.
CR Allamanis M, 2013, IEEE WORK CONF MIN S, P53, DOI 10.1109/MSR.2013.6624004
   [Anonymous], 2017, DOCKER ENGINE DOCUME
   [Anonymous], 2017, DATAEXPLORER Q A SEL
   [Anonymous], 2017, S USER EXPRESS CONFI
   [Anonymous], 2019, STACK OVERFLOW DEV S
   Badashian A.S., 2014, CASCON, P19
   Bajaj K, 2014, P 11 WORK C MIN SOFT, P112
   Beyer S, 2014, PROC IEEE INT CONF S, P531, DOI 10.1109/ICSME.2014.88
   Burel Gregoire, 2013, ACM C HYP SOC MED, P1
   Cito J, 2017, IEEE WORK CONF MIN S, P323, DOI 10.1109/MSR.2017.67
   G. user, 2017, G USER TAR PROBLEM I
   G. user, 2017, G USER AUTOMATED BUI
   GitHub, 2017, GITHUB WEB APPL FRAM
   Hassan F, 2018, IEEE INT CONF AUTOM, P796, DOI 10.1145/3238147.3240470
   Horton E, 2019, PROC INT CONF SOFTW, P328, DOI 10.1109/ICSE.2019.00047
   Horton E, 2018, PROC IEEE INT CONF S, P217, DOI 10.1109/ICSME.2018.00031
   Kochhar PS, 2016, SOFTWAREMINING 2016, P32, DOI DOI 10.1145/2975961.2975966
   Lehmann E. L., 2008, TESTING STAT HYPOTHE
   Liljedhal M., 2019, PLAY DOCKER
   Lorr M., CLUSTER ANAL SOCIAL
   Melo L., 2018, DATASET, DOI [10.5281/zenodo.3540911, DOI 10.5281/ZENODO.3540911]
   Melo L., 2019, PAPER ARTIFACTS
   Mondal Saikat, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P479, DOI 10.1109/MSR.2019.00074
   Nasehi SM, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P25, DOI 10.1109/ICSM.2012.6405249
   Nowozin Sebastian, 2017, INT C LEARN REPR
   Srba I, 2016, ACM T WEB, V10, DOI 10.1145/2934687
   StackOverflow, 2017, STACKOVERFLOW HIR TR
   Sysdig, 2018, DOCK US REP
   Tan P. N., 2005, Introduction to Data Mining
   Terragni V., 2016, P 25 INT S SOFTWARE, P118
   Treude C, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P804, DOI 10.1145/1985793.1985907
   Yang D, 2017, IEEE WORK CONF MIN S, P280, DOI 10.1109/MSR.2017.13
   Yang D, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P391, DOI [10.1109/MSR.2016.047, 10.1145/2901739.2901767]
   Yao Y., 2013, ABS13116876 CORR
   Yao Y, 2014, 2014 PROCEEDINGS OF THE IEEE/ACM INTERNATIONAL CONFERENCE ON ADVANCES IN SOCIAL NETWORKS ANALYSIS AND MINING (ASONAM 2014), P340, DOI 10.1109/ASONAM.2014.6921607
   Yao Y, 2014, PROCEEDINGS OF THE 20TH ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING (KDD'14), P1496, DOI 10.1145/2623330.2623649
   Ye Ting, 2014, P 29 ACMIEEE INT C A, P115
   Zhang Y, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P295, DOI 10.1145/3236024.3236033
   Zou YZ, 2015, IEEE INT CONF AUTOM, P1, DOI 10.1109/ASE.2015.24
NR 39
TC 1
Z9 1
U1 0
U2 6
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD NOV 1
PY 2021
VL 47
IS 11
BP 2563
EP 2574
DI 10.1109/TSE.2019.2956919
PG 12
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA WW2QE
UT WOS:000717767100016
DA 2024-07-18
ER

PT J
AU Wang, GH
   Chattopadhyay, S
   Gotovchits, I
   Mitra, T
   Roychoudhury, A
AF Wang, Guanhua
   Chattopadhyay, Sudipta
   Gotovchits, Ivan
   Mitra, Tulika
   Roychoudhury, Abhik
TI oo7: Low-Overhead Defense Against Spectre Attacks via Program Analysis
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Program processors; Malware; Arrays; Transient analysis; Benchmark
   testing; Analytical models; Maintenance engineering; Cache side-channel
   attacks; taint analysis; binary analysis; binary hardening; software
   security
AB The Spectre vulnerability in modern processors has been widely reported. The key insight in this vulnerability is that speculative execution in processors can be misused to access the secrets. Subsequently, even though the speculatively executed instructions are squashed, the secret may linger in micro-architectural states such as cache, and can potentially be accessed by an attacker via side channels. In this paper, we propose oo7, a static analysis approach that can mitigate Spectre attacks by detecting potentially vulnerable code snippets in program binaries and protecting them against the attack by patching them. Our key contribution is to balance the concerns of effectiveness, analysis time and run-time overheads. We employ control flow extraction, taint analysis, and address analysis to detect tainted conditional branches and speculative memory accesses. oo7 can detect all fifteen purpose-built Spectre-vulnerable code patterns [1] , whereas Microsoft compiler with Spectre mitigation option can only detect two of them. We also report the results of a large-scale study on applying oo7 to over 500 program binaries (average binary size 261 KB) from different real-world projects. We protect programs against Spectre attack by selectively inserting fences only at vulnerable conditional branches to prevent speculative execution. Our approach is experimentally observed to incur around 5.9 percent performance overheads on SPECint benchmarks.
C1 [Wang, Guanhua; Mitra, Tulika; Roychoudhury, Abhik] Natl Univ Singapore, Singapore 119077, Singapore.
   [Chattopadhyay, Sudipta] Singapore Univ Technol & Design, Singapore 487372, Singapore.
   [Gotovchits, Ivan] Carnegie Mellon Univ, Pittsburgh, PA 15213 USA.
C3 National University of Singapore; Singapore University of Technology &
   Design; Carnegie Mellon University
RP Roychoudhury, A (corresponding author), Natl Univ Singapore, Singapore 119077, Singapore.
EM wangghge@gmail.com; sudipta_chattopadhyay@sutd.edu.sg; ivg@ieee.org;
   tulika@comp.nus.edu.sg; abhik@comp.nus.edu.sg
RI Wang, Guanhua/AAF-7033-2021; Chattopadhyay, Sudipta/ADP-6499-2022;
   Mitra, Tulika/HCI-5887-2022; Mitra, Tulika/J-4464-2017
OI Chattopadhyay, Sudipta/0000-0002-4843-5391; Gotovchits,
   Ivan/0000-0002-6787-236X; Mitra, Tulika/0000-0003-4136-4188
FU National Research Foundation, Prime Ministers Office, Singapore under
   its National Cybersecurity R&D Program (TSUNAMi project)
   [NRF2014NCRNCR00121]
FX This research was partially supported by a grant from the National
   Research Foundation, Prime Ministers Office, Singapore under its
   National Cybersecurity R&D Program (TSUNAMi project, No.
   NRF2014NCRNCR00121) and administered by the National Cybersecurity R&D
   Directorate.
CR [Anonymous], 2015, SKYLAKE CLIENT MICRO
   [Anonymous], 2017, INTEL XEON GOLD 6126
   [Anonymous], 2019, CPUID
   [Anonymous], 2017, COMPUTER ARCHITECTUR
   [Anonymous], 2018, Retpoline: a software construct for preventing branch-target-injection
   Brumley David, 2011, Computer Aided Verification. Proceedings 23rd International Conference, CAV 2011, P463, DOI 10.1007/978-3-642-22110-1_37
   Carruth Chandler, 2018, Speculative load hardening
   Google, 2018, OSS FUZZ
   Gruss D, 2017, LECT NOTES COMPUT SC, V10379, P161, DOI 10.1007/978-3-319-62105-0_11
   Guarneri M., 2018, ARXIV181208639
   Henning J. L., 2006, SIGARCH COMPUT ARCHI, V34, P1, DOI [DOI 10.1145/1186736.1186737, 10.1145/1186736.1186737]
   Intel, 2018, RETP BRANCH TARG INJ
   Intel, 2018, Intel Analysis of Speculative Execution Side Channels
   Kejariwal A, 2008, 2008 INTERNATIONAL CONFERENCE ON EMBEDDED COMPUTER SYSTEMS: ARCHITECTURES, MODELING AND SIMULATION, PROCEEDINGS, P132, DOI 10.1109/ICSAMOS.2008.4664856
   Kim K, 2017, PROCEEDINGS OF THE 26TH INTERNATIONAL CONFERENCE ON WORLD WIDE WEB (WWW'17), P897, DOI 10.1145/3038912.3052674
   Kiriansky V, 2018, 2018 51ST ANNUAL IEEE/ACM INTERNATIONAL SYMPOSIUM ON MICROARCHITECTURE (MICRO), P974, DOI [10.1109/MICRO.2018.00083, 10.1109/MICR0.2018.00083]
   Kiriansky Vladimir, 2018, Speculative buffer overflows: Attacks and defenses
   Kocher P., 2018, Spectre Mitigations in Microsoft's C/C++ Compiler
   Kocher P, 2019, P IEEE S SECUR PRIV, P1, DOI 10.1109/SP.2019.00002
   Koruyeh E. M., 2018, 12 USENIX WORKSHOP O, P1
   Lipp M., 2018, MELTDOWN SPECTRE
   M. community, 2018, C DEV GUID SPEC EX S
   Malak M, 2018, MELTDOWN SPECTRE
   Maurer M., 2018, HOLMES BINARY ANAL I
   Microsoft, 2018, SPECTR MIT MSVC
   Oleksenko Oleksii, 2018, ARXIV180508506
   Peng F, 2014, PROCEEDINGS OF THE 23RD USENIX SECURITY SYMPOSIUM, P829
   Reis C., 2018, MITIGATING SPECTRE S
   Shoshitaishvili Y, 2016, P IEEE S SECUR PRIV, P138, DOI 10.1109/SP.2016.17
   Warren T., 2018, INTEL PROCESSORS ARE
   wikichip, 2018, MACR OP FUS
   Xu L., 2009, CONSTRUCTING PRECISE
   Yan MJ, 2018, 2018 51ST ANNUAL IEEE/ACM INTERNATIONAL SYMPOSIUM ON MICROARCHITECTURE (MICRO), P428, DOI 10.1109/MICRO.2018.00042
   Yarom Y, 2014, PROCEEDINGS OF THE 23RD USENIX SECURITY SYMPOSIUM, P719
NR 34
TC 14
Z9 17
U1 1
U2 4
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD NOV 1
PY 2021
VL 47
IS 11
BP 2504
EP 2519
DI 10.1109/TSE.2019.2953709
PG 16
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA WW2QE
UT WOS:000717767100012
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Furia, CA
   Feldt, R
   Torkar, R
AF Furia, Carlo A.
   Feldt, Robert
   Torkar, Richard
TI Bayesian Data Analysis in Empirical Software Engineering Research
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Bayes methods; Software engineering; Testing; Data analysis; Machine
   learning; Statistical analysis; Software; Bayesian data analysis;
   statistical analysis; statistical hypothesis testing; empirical software
   engineering
ID BONFERRONI; STATISTICS; POWER
AB Statistics comes in two main flavors: frequentist and Bayesian. For historical and technical reasons, frequentist statistics have traditionally dominated empirical data analysis, and certainly remain prevalent in empirical software engineering. This situation is unfortunate because frequentist statistics suffer from a number of shortcomings-such as lack of flexibility and results that are unintuitive and hard to interpret-that curtail their effectiveness when dealing with the heterogeneous data that is increasingly available for empirical analysis of software engineering practice. In this paper, we pinpoint these shortcomings, and present Bayesian data analysis techniques that provide tangible benefits-as they can provide clearer results that are simultaneously robust and nuanced. After a short, high-level introduction to the basic tools of Bayesian statistics, we present the reanalysis of two empirical studies on the effectiveness of automatically generated tests and the performance of programming languages. By contrasting the original frequentist analyses with our new Bayesian analyses, we demonstrate the concrete advantages of the latter. To conclude we advocate a more prominent role for Bayesian statistical techniques in empirical software engineering research and practice.
C1 [Furia, Carlo A.] Univ Svizzera Italiana USI, Fac Informat, Software Inst, CH-6900 Lugano, Switzerland.
   [Feldt, Robert; Torkar, Richard] Chalmers Univ Technol, Softwre Engn Div, Dept Comp Sci & Engn, Gothenburg, Sweden.
   [Feldt, Robert; Torkar, Richard] Univ Gothenburg, Gothenburg, Sweden.
C3 Universita della Svizzera Italiana; Chalmers University of Technology;
   University of Gothenburg
RP Furia, CA (corresponding author), Univ Svizzera Italiana USI, Fac Informat, Software Inst, CH-6900 Lugano, Switzerland.
EM furiac@usi.ch; robert.feldt@bth.se; richard.torkar@gmail.com
FU Marianne & Marcus Wallenberg Foundation
FX We would like to thank Jonah Gabry (Columbia University, USA), for
   discussions regarding some of this paper's content. The first author
   also thanks for interesting discussions the participants to the EAQSE
   (Empirical Answers to Questions in Software Engineering) workshop held
   in Villebrumier, France in November 2018, where he presented a
   preliminary subset of this article's content. Feldt and Torkar's work
   was partially supported by a from the Marianne & Marcus Wallenberg
   Foundation. Feldt and Torkar''s work was partially supported by a grant
   from the Marianne & Marcus Wallenberg Foundation.
CR Aickin M, 1996, AM J PUBLIC HEALTH, V86, P726, DOI 10.2105/AJPH.86.5.726
   Amrhein V, 2019, AM STAT, V73, P262, DOI 10.1080/00031305.2018.1543137
   Amrhein V, 2019, NATURE, V567, P305, DOI 10.1038/d41586-019-00857-9
   [Anonymous], 1908, BIOMETRIKA, V6, P1
   [Anonymous], 2006, Data Analysis using Regression and Multilevel/Hierarchical Models, DOI DOI 10.1017/CBO9780511790942
   [Anonymous], 2016, COMPUTER LANGUAGE BE
   [Anonymous], 2016, CONFUSION INVERSE
   [Anonymous], 1975, Synthese, DOI [10.1007/BF00485294, DOI 10.1007/BF00485294]
   [Anonymous], THEORY PROBABILITY
   [Anonymous], 1996, The New Hacker's Dictionary
   Arcuri A, 2014, SOFTW TEST VERIF REL, V24, P219, DOI 10.1002/stvr.1486
   Arcuri A, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1, DOI 10.1145/1985793.1985795
   Bacchelli A, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P712, DOI 10.1109/ICSE.2013.6606617
   Baker M, 2016, NATURE, V531, P151, DOI 10.1038/nature.2016.19503
   Barber D., 2012, Bayesian reasoning and machine learning
   Bavota G, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P692, DOI 10.1109/ICSE.2013.6606615
   Bener A., 2016, PERSPECTIVES DATA SC
   Benjamin DJ, 2018, NAT HUM BEHAV, V2, P6, DOI 10.1038/s41562-017-0189-z
   BENJAMINI Y, 1995, J R STAT SOC B, V57, P289, DOI 10.1111/j.2517-6161.1995.tb02031.x
   Bertolino A., 2015, P 37 IEEE ACM INT C, V1
   Brooks S, 2011, CH CRC HANDB MOD STA, pXIX
   Cacho N, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P584, DOI 10.1145/2568225.2568308
   Carpenter B, 2017, J STAT SOFTW, V76, P1, DOI 10.18637/jss.v076.i01
   Carver JC, 2014, EMPIR SOFTW ENG, V19, P267, DOI 10.1007/s10664-013-9290-8
   Ceccato M, 2015, ACM T SOFTW ENG METH, V25, DOI 10.1145/2768829
   Chekam TT, 2017, PROC INT CONF SOFTW, P597, DOI 10.1109/ICSE.2017.61
   Chen JJ, 2016, PROC INT CONF SOFTW, P180, DOI 10.1145/2884781.2884878
   Choudhary SR, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P702, DOI 10.1109/ICSE.2013.6606616
   COHEN J, 1994, AM PSYCHOL, V49, P997, DOI 10.1037/0003-066X.50.12.1103
   Cohen LJ., 1989, INTRO PHILOS INDUCTI
   Daka Ermira, 2015, Search-Based Software Engineering. 7th International Symposium, SSBSE 2015. Proceedings: LNCS 9275, P235, DOI 10.1007/978-3-319-22183-0_17
   Devanbu P, 2016, PROC INT CONF SOFTW, P108, DOI 10.1145/2884781.2884812
   Dillon L. K., 2016, P 38 INT C SOFTW ENG
   Downey A., 2013, THINK BAYES
   Ernst NA, 2018, IEEE WORK CONF MIN S, P587, DOI 10.1145/3196398.3196443
   Fienberg SE, 2006, BAYESIAN ANAL, V1, P1
   Furia C. A., 2012, MODELING TIME COMPUT
   Furia C. A, 2016, BAYESIAN STAT SOFTWA
   Furia CA, 2017, PROC IEEE ACM INT C, P374, DOI 10.1109/ICSE-C.2017.92
   Gabry J, 2019, J ROY STAT SOC A, V182, P389, DOI 10.1111/rssa.12378
   García LV, 2004, OIKOS, V105, P657, DOI 10.1111/j.0030-1299.2004.13046.x
   Gelman A, 2000, COMPUTATION STAT, V15, P373, DOI 10.1007/s001800000040
   Gelman A., 2016, The American Statistician, V70, P1
   Gelman A., 2013, BAYESIAN DATA ANAL, Vthird, DOI DOI 10.1201/B16018
   Gelman A, 2012, J RES EDUC EFF, V5, P189, DOI 10.1080/19345747.2011.618213
   Gill J, 1999, POLIT RES QUART, V52, P647, DOI 10.1177/106591299905200309
   Gomes de Oliveira Neto F., 2017, EVOLUTION STAT ANAL
   Goodman SN, 1999, ANN INTERN MED, V130, P995, DOI 10.7326/0003-4819-130-12-199906150-00008
   Goodman S, 2008, SEMIN HEMATOL, V45, P135, DOI 10.1053/j.seminhematol.2008.04.003
   Hastie T., 2009, The Elements of Statistical Learning
   Hoekstra R, 2014, PSYCHON B REV, V21, P1157, DOI 10.3758/s13423-013-0572-3
   Hollander M., 2014, Nonparametric Statistical Methods, Solutions Manual, Vthird
   Ioannidis JPA, 2005, PLOS MED, V2, P696, DOI 10.1371/journal.pmed.0020124
   Jalote P., 2014, P 36 INT C SOFTW ENG
   Jedlitschka A, 2014, EMPIR SOFTW ENG, V19, P1921, DOI 10.1007/s10664-013-9268-6
   Joblin M, 2017, PROC INT CONF SOFTW, P164, DOI 10.1109/ICSE.2017.23
   Kim M, 2016, PROC INT CONF SOFTW, P96, DOI 10.1145/2884781.2884783
   Kruschke J, 2014, DOING BAYESIAN DATA, DOI [DOI 10.1016/B978-0-12-405888-0.09999-2, DOI 10.1016/B978-0-12-405888-0.00001-5]
   Kruschke JK, 2018, PSYCHON B REV, V25, P178, DOI 10.3758/s13423-016-1221-4
   Kruschke JK, 2011, PERSPECT PSYCHOL SCI, V6, P299, DOI 10.1177/1745691611406925
   Landman D, 2017, PROC INT CONF SOFTW, P507, DOI 10.1109/ICSE.2017.53
   Manotas I, 2016, PROC INT CONF SOFTW, P237, DOI 10.1145/2884781.2884810
   Matichuk D, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P722, DOI 10.1109/ICSE.2015.85
   McElreath RL, 2015, STAT RETHINKING BAYE
   McShane BB, 2019, AM STAT, V73, P235, DOI 10.1080/00031305.2018.1527253
   Menzies T, 2016, PERSPECTIVES ON DATA SCIENCE FOR SOFTWARE ENGINEERING, P1
   Menzies T, 2019, INFORM SOFTWARE TECH, V112, P35, DOI 10.1016/j.infsof.2019.04.005
   Miller R.G., 1969, Simultaneous statistical inference
   Morey RD, 2016, PSYCHON B REV, V23, P103, DOI 10.3758/s13423-015-0947-8
   Muthukumarana S, 2014, COMMUN STAT-SIMUL C, V43, P82, DOI 10.1080/03610918.2012.698773
   Nadi S, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P140, DOI 10.1145/2568225.2568283
   Nakagawa S, 2004, BEHAV ECOL, V15, P1044, DOI 10.1093/beheco/arh107
   Nanz S, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P778, DOI 10.1109/ICSE.2015.90
   Noble WS, 2009, NAT BIOTECHNOL, V27, P1135, DOI 10.1038/nbt1209-1135
   Notkin D., 2013, P 35 INT C SOFTW ENG
   Pacheco C., 2007, OOPSLA 2007 COMPANIO, P815
   Panichella S, 2016, PROC INT CONF SOFTW, P547, DOI 10.1145/2884781.2884847
   Papadakis M, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P936, DOI 10.1109/ICSE.2015.103
   Pashler H, 2012, PERSPECT PSYCHOL SCI, V7, P528, DOI 10.1177/1745691612465253
   Perneger TV, 1998, BRIT MED J, V316, P1236, DOI 10.1136/bmj.316.7139.1236
   Petre M, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P722, DOI 10.1109/ICSE.2013.6606618
   Rao C.R., 1992, Stat. Sci, V7, P34, DOI [10.1214/ss/1177011442, DOI 10.1214/SS/1177011442]
   Reid H.M., 2013, INTRO STAT FUNDAMENT
   Selakovic M, 2016, PROC INT CONF SOFTW, P61, DOI 10.1145/2884781.2884829
   Siegel Sidney, 1988, Nonparametric statistics for the behavioral sciences
   Siegmund J, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P9, DOI 10.1109/ICSE.2015.24
   Simmons JP, 2011, PSYCHOL SCI, V22, P1359, DOI 10.1177/0956797611417632
   Stol KJ, 2016, PROC INT CONF SOFTW, P120, DOI 10.1145/2884781.2884833
   Su GX, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P311, DOI 10.1145/2568225.2568256
   Uchitel S., 2017, P 39 INT C SOFTW ENG
   Uesbeck PM, 2016, PROC INT CONF SOFTW, P760, DOI 10.1145/2884781.2884849
   van Dongen N. N. N., 2018, MULTIPLE PERSPECTIVE
   Vargha A, 2000, J EDUC BEHAV STAT, V25, P101, DOI 10.3102/10769986025002101
   Warner RM., 2012, APPL STAT BIVARIATE, V2
   Wasserstein RL, 2016, AM STAT, V70, P129
   Wohlin C., 2012, Experimentation in Software Engineering
   Yamashita A, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P682, DOI 10.1109/ICSE.2013.6606614
   Zar J. H., 1984, BIOSTATISTICAL ANAL
   Zhang HY, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P1042, DOI 10.1109/ICSE.2013.6606654
   Zhong H, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P913, DOI 10.1109/ICSE.2015.101
NR 100
TC 33
Z9 35
U1 3
U2 26
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD SEPT 1
PY 2021
VL 47
IS 9
BP 1786
EP 1810
DI 10.1109/TSE.2019.2935974
PG 25
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science; Engineering
GA UR3QY
UT WOS:000696667700003
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Nayebi, M
   Ruhe, G
   Zimmermann, T
AF Nayebi, Maleknaz
   Ruhe, Guenther
   Zimmermann, Thomas
TI Mining Treatment-Outcome Constructs from Sequential Software Engineering
   Data
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Software; Computer bugs; Encoding; Data mining; Software engineering;
   Testing; Itemsets; Pattern mining; mining software repositories; regular
   expressions; analytics; release cycle time patterns; code ownership
AB Many investigations in empirical software engineering look at sequences of data resulting from development or management processes. In this paper, we propose an analytical approach called the Gandhi-Washington Method (GWM) to investigate the impact of recurring events in software projects. GWM takes an encoding of events and activities provided by a software analyst as input. It uses regular expressions to automatically condense and summarize information and infer treatments. Relating the treatments to the outcome through statistical tests, treatment-outcome constructs are automatically mined from the data. The output of GWM is a set of treatment-outcome constructs. Each treatment in the set of mined constructs is significantly different from the other treatments considering the impact on the outcome and/or is structurally different from other treatments considering the sequence of events. We describe GWM and classes of problems to which GWM can be applied. We demonstrate the applicability of this method for empirical studies on sequences of file editing, code ownership, and release cycle time.
C1 [Nayebi, Maleknaz] Ecole Polytech Montreal, Montreal, PQ H3T 1J4, Canada.
   [Ruhe, Guenther] Univ Calgary, Software Engn Decis Support Lab, Calgary, AB T2N 1N4, Canada.
   [Zimmermann, Thomas] Microsoft Research, Redmond, WA USA.
C3 Universite de Montreal; Polytechnique Montreal; University of Calgary;
   Microsoft
RP Nayebi, M (corresponding author), Ecole Polytech Montreal, Montreal, PQ H3T 1J4, Canada.
EM mnayebi@polymtl.ca; ruhe@ucalgary.ca; tzimmer@microsoft.com
RI Zimmermann, Thomas/C-4377-2019
OI Zimmermann, Thomas/0000-0003-4905-1469
FU Natural Sciences and Engineering Research Council of Canada; NSERC
   [250343-12]; Alberta Innovates Technology Future
FX We wish to thank Enoch Tsang, Kurtis Jantzen, Samarth Sinha, and Shane
   Sims for their help on the tool implementation of this research. We are
   grateful to Bram Adams for helpful discussions on a former version of
   the paper. This research was partially supported by the Natural Sciences
   and Engineering Research Council of Canada, NSERC Discovery Grant
   250343-12 and Alberta Innovates Technology Future. Last but not least,
   we highly appreciate the thoughtful comments and suggestions made by the
   anonymous reviewers and the handling editor.
CR Adams B, 2015, IEEE SOFTWARE, V32, P41
   AGRAWAL R, 1995, PROC INT CONF DATA, P3, DOI 10.1109/ICDE.1995.380415
   Ammann Paul, 2008, Introduction to software testing, V1st
   Ayres J, 2002, P 8 ACM SIGKDD INT C, V8, P429, DOI DOI 10.1145/775047.775109
   Begel A., 2010, Software Engineering, 2010 ACM/IEEE 32nd International Conference on, V1, P125
   Begel A, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P12, DOI 10.1145/2568225.2568233
   Bird C., 2011, P 19 ACM SIGSOFT S 1, P4, DOI DOI 10.1145/2025113.2025119
   CALINSKI T, 1985, BIOMETRICS, V41, P39, DOI 10.2307/2530641
   Chapman C., 2016, P 25 INT S SOFTWARE, P282, DOI DOI 10.1145/2931037.2931073
   Chapman C, 2017, IEEE INT CONF AUTOM, P405, DOI 10.1109/ASE.2017.8115653
   Cormen T.H., 2009, INTRO ALGORITHMS
   Fournier-Viger P, 2017, WIRES DATA MIN KNOWL, V7, DOI 10.1002/widm.1207
   Garofalakis MN, 1999, PROCEEDINGS OF THE TWENTY-FIFTH INTERNATIONAL CONFERENCE ON VERY LARGE DATA BASES, P223
   Gîrba T, 2005, EIGHTH INTERNATIONAL WORKSHOP ON PRINCIPLES OF SOFTWARE EVOLUTION, PROCEEDINGS, P113, DOI 10.1109/IWPSE.2005.21
   Heierman E., 2004, P KDD WORKSH MIN TEM, P104
   Herzig K, 2011, 22ND IEEE INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING (ISSRE), P60, DOI 10.1109/ISSRE.2011.16
   Jiawei Han, 2000, Proceedings. KDD-2000. Sixth ACM SIGKDD International Conference on Knowledge Discovery and Data Mining, P355
   Khomh F., 2012, 2012 9th IEEE Working Conference on Mining Software Repositories (MSR 2012), P179, DOI 10.1109/MSR.2012.6224279
   Kitchenham B.A., 2015, EVIDENCE BASED SOFTW, V4
   Lo D, 2007, KDD-2007 PROCEEDINGS OF THE THIRTEENTH ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P460
   Maalej W, 2016, IEEE SOFTWARE, V33, P48, DOI 10.1109/MS.2015.153
   Mabroukeh NR, 2010, ACM COMPUT SURV, V43, DOI 10.1145/1824795.1824798
   Matter D, 2009, 2009 6TH IEEE INTERNATIONAL WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES, P131, DOI 10.1109/MSR.2009.5069491
   Menzies Tim, 2014, Sharing data and models in software engineering
   Michail A., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, P167, DOI 10.1109/ICSE.2000.870408
   Michlmayr M, 2015, IEEE SOFTWARE, V32, P54
   Mooney CH, 2013, ACM COMPUT SURV, V45, DOI 10.1145/2431211.2431218
   Nayebi M., 2016, P 4 INT WORKSHOP REL, P1, DOI DOI 10.1145/2993274.2993281
   Nayebi M, 2019, IEEE T SOFTWARE ENG, V45, P839, DOI 10.1109/TSE.2018.2810895
   Nayebi M, 2018, IEEE WORK CONF MIN S, P243, DOI 10.1145/3196398.3196410
   Nayebi M, 2017, INT SYMP EMP SOFTWAR, P324, DOI 10.1109/ESEM.2017.46
   Nayebi M, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P552, DOI 10.1109/SANER.2016.116
   Nayebi M, 2015, 2015 30TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING WORKSHOP (ASEW), P18, DOI 10.1109/ASEW.2015.28
   Parikh M., 2013, INT J APPL INNOVATIO, V2, P103
   Pei J, 2001, PROC INT CONF DATA, P215
   Ray B, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P155, DOI 10.1145/2635868.2635922
   Riaz M, 2015, INFORM SOFTWARE TECH, V65, P14, DOI 10.1016/j.infsof.2015.04.002
   Rigby PC, 2014, ACM T SOFTW ENG METH, V23, DOI 10.1145/2594458
   Rigby PC, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P541
   SCOTT AJ, 1974, BIOMETRICS, V30, P507, DOI 10.2307/2529204
   Sheskin J.D., 2004, Handbook of Parametric and Nonparametric Statistical Procedures, VThird
   Shihab E, 2012, INT SYMP EMP SOFTWAR, P301, DOI 10.1145/2372251.2372305
   Song QB, 2006, IEEE T SOFTWARE ENG, V32, P69, DOI 10.1109/TSE.2006.1599417
   Srikant R., 1996, Advances in Database Technology - EDBT '96. 5th International Conference on Extending Database Technology. Proceedings, P3
   Tian Y, 2015, PROC IEEE INT CONF S, P301, DOI 10.1109/ICSM.2015.7332476
   Uddin G, 2012, PROC INT CONF SOFTW, P804, DOI 10.1109/ICSE.2012.6227138
   Wasylkowski A, 2011, AUTOMAT SOFTW ENG, V18, P263, DOI 10.1007/s10515-011-0084-1
   Williams L, 2014, MSRTR201423
   Wohlin C., 2012, Experimentation in Software Engineering
   Wu SY, 2009, DATA KNOWL ENG, V68, P1309, DOI 10.1016/j.datak.2009.06.010
   Xie T, P FSE SDP WORKSH FUT, P161
   Xie T, 2009, COMPUTER, V42, P55, DOI 10.1109/MC.2009.256
   Zaki MJ, 2001, MACH LEARN, V42, P31, DOI 10.1023/A:1007652502315
   Zhang F, 2014, J SOFTW-EVOL PROC, V26, P996, DOI 10.1002/smr.1659
NR 54
TC 4
Z9 4
U1 0
U2 4
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD FEB 1
PY 2021
VL 47
IS 2
BP 393
EP 411
DI 10.1109/TSE.2019.2892956
PG 19
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA QG7HE
UT WOS:000617753400011
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Mottola, L
   Picco, GP
   Oppermann, FJ
   Eriksson, J
   Finne, N
   Fuchs, H
   Gaglione, A
   Karnouskos, S
   Montero, PM
   Oertel, N
   Römer, K
   Spiess, P
   Tranquillini, S
   Voigt, T
AF Mottola, L.
   Picco, G. P.
   Oppermann, F. J.
   Eriksson, J.
   Finne, N.
   Fuchs, H.
   Gaglione, A.
   Karnouskos, S.
   Moreno Montero, P.
   Oertel, N.
   Romer, K.
   Spiess, P.
   Tranquillini, S.
   Voigt, T.
TI make<i>Sense</i>: Simplifying the Integration of Wireless Sensor
   Networks into Business Processes
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Business processes; wireless sensor networks; embedded software;
   internet of things
ID ARCHITECTURE; INTERNET; SYSTEM
AB A wide gap exists between the state of the art in developing Wireless Sensor Network (WSN) software and current practices concerning the design, execution, and maintenance of business processes. WSN software is most often developed based on low-level OS abstractions, whereas business process development leverages high-level languages and tools. This state of affairs places WSNs at the fringe of industry. The makeSense system addresses this problem by simplifying the integration of WSNs into business processes. Developers use BPMN models extended with WSN-specific constructs to specify the application behavior across both traditional business process execution environments and the WSN itself, which is to be equipped with application-specific software. We compile these models into a high-level intermediate language-also directly usable by WSN developers-and then into OS-specific deployment-ready binaries. Key to this process is the notion of meta-abstraction, which we define to capture fundamental patterns of interaction with and within the WSN. The concrete realization of meta-abstractions is application-specific; developers tailor the system configuration by selecting concrete abstractions out of the existing codebase or by providing their own. Our evaluation of makeSense shows that i) users perceive our approach as a significant advance over the state of the art, providing evidence of the increased developer productivity when using makeSense; ii) in large-scale simulations, our prototype exhibits an acceptable system overhead and good scaling properties, demonstrating the general applicability of makeSense; and, iii) our prototype-including the complete tool-chain and underlying system support-sustains a real-world deployment where estimates by domain specialists indicate the potential for drastic reductions in the total cost of ownership compared to wired and conventional WSN-based solutions.
C1 [Mottola, L.; Eriksson, J.; Finne, N.; Voigt, T.] RISE Swedish Inst Comp Sci, S-16429 Kista, Sweden.
   [Mottola, L.] Politecn Milan, I-20133 Milan, Italy.
   [Picco, G. P.; Gaglione, A.; Tranquillini, S.] Univ Trento, I-38122 Trento, Italy.
   [Romer, K.] Graz Univ Technol, Inst Tech Informat, Ultimo, NSW 2007, Australia.
   [Oppermann, F. J.] Graz Univ Technol, Ultimo, NSW 2007, Australia.
   [Fuchs, H.; Karnouskos, S.; Oertel, N.; Spiess, P.] SAP, D-69190 Walldorf, Germany.
   [Moreno Montero, P.] Acciona Infraestruct SA Alcobendas, Madrid 28108, Spain.
   [Voigt, T.] Uppsala Univ, S-75236 Uppsala, Sweden.
C3 Polytechnic University of Milan; University of Trento; Graz University
   of Technology; Graz University of Technology; SAP; Uppsala University
RP Mottola, L (corresponding author), RISE Swedish Inst Comp Sci, S-16429 Kista, Sweden.; Mottola, L (corresponding author), Politecn Milan, I-20133 Milan, Italy.
EM luca.mottola@polimi.it; gianpietro.picco@unitn.it; oppermann@tugraz.at;
   joakime@sics.se; nfi@sics.se; harald.fuchs@sap.com; ag909@cam.ac.uk;
   karnouskos@ieee.org; patricio.moreno.montero@acciona.es;
   nina.oertel@sap.com; roemer@tugraz.at; patrik.spiess@sap.com;
   stefano.tranquillini@gmail.com; thiemo@sics.se
RI Karnouskos, Stamatis/D-3191-2016
OI Karnouskos, Stamatis/0000-0003-3519-8232; MOTTOLA,
   LUCA/0000-0003-4560-9541; Gaglione, Andrea/0000-0002-7854-2024
FU European Union [FP7-ICT-2009-5, 258351]
FX This work was supported by the European Union 7th Framework Programme
   (FP7-ICT-2009-5) under grant agreement n. 258351 (project makeSense).
CR Akbal-Delibas B, 2009, LECT NOTES BUS INF P, V20, P551
   Akerberg J., 2011, Proceedings of the 2011 9th IEEE International Conference on Industrial Informatics (INDIN 2011), P410, DOI 10.1109/INDIN.2011.6034912
   Akerberg J., 2011, P 16 IEEE C EM TECHN, P1
   Amundson I., 2006, P 3 INT C BROADB COM, P1
   [Anonymous], 2009, INPROCEEDINGS 2 INT
   [Anonymous], 2011, OMG STAND BUS PROC M
   [Anonymous], P 4 INT S INF PROC S
   Aslam F, 2010, LECT NOTES COMPUT SC, V6131, P15, DOI 10.1007/978-3-642-13651-1_2
   Atzori L, 2010, COMPUT NETW, V54, P2787, DOI 10.1016/j.comnet.2010.05.010
   Baccour N, 2012, ACM T SENSOR NETWORK, V8, DOI 10.1145/2240116.2240123
   Bai LS, 2009, 2009 INTERNATIONAL CONFERENCE ON INFORMATION PROCESSING IN SENSOR NETWORKS (IPSN 2009), P85
   Baresi L, 2016, LECT NOTES BUS INF P, V256, P389, DOI 10.1007/978-3-319-42887-1_32
   Basu C, 2015, PROCEEDINGS OF THE 2015 ACM INTERNATIONAL JOINT CONFERENCE ON PERVASIVE AND UBIQUITOUS COMPUTING (UBICOMP 2015), P987, DOI 10.1145/2750858.2807525
   Bourlai Thirimachos., 2011, INFORM FORENSICS SEC, P1, DOI DOI 10.1109/WIFS.2011.6123139
   Braun R, 2014, LECT NOTES BUS INF P, V197, P42
   Brouwers Niels., 2008, P ACMI FIPUSENIX MID, P18, DOI DOI 10.1145/1462735.1462740
   Cabezas J, 2012, IEEE IND ELEC, P6019, DOI 10.1109/IECON.2012.6389098
   Caracas A., 2012, 2012 IEEE International Conference on Pervasive Computing and Communications Workshops (PerCom Workshops), P320, DOI 10.1109/PerComW.2012.6197503
   Caracas A., 2011, 2011 INT C DISTRIBUT, DOI [10.1109/DCOSS.2011.5982159, DOI 10.1109/DCOSS.2011.5982159]
   Caracas A, 2011, LECT NOTES BUS INF P, V95, P16
   Chandra TB, 2015, 2015 2ND INTERNATIONAL CONFERENCE ON COMPUTING FOR SUSTAINABLE GLOBAL DEVELOPMENT (INDIACOM), P1702
   Chen Y, 2009, SOSP'09: PROCEEDINGS OF THE TWENTY-SECOND ACM SIGOPS SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES, P235
   Dar K, 2015, PERVASIVE MOB COMPUT, V20, P145, DOI 10.1016/j.pmcj.2014.11.005
   Dunkels A., 2010, D 1 1 APPL PROGRAMMI
   Eriksson J., 2013, D 5 4 FINAL APPL IMP
   Fleurey F, 2011, P 6 INT S SOFTW ENG, P168, DOI DOI 10.1145/1988008.1988031
   Frank Christian., 2005, SENSYS 05, P230
   Gilchrist A, 2016, IND 4 0, P195, DOI [DOI 10.1007/978-1-4842-2047-4, 10.1007/978-1-4842-2047-4_13, 10.1007/978-1-4842-2047-4]
   Glombitza N., 2009, P 4 INT WORKSH MIDDL, P25
   Glombitza N, 2011, LECT NOTES COMPUT SC, V6811, P294, DOI 10.1007/978-3-642-22450-8_23
   Gnawali O, 2009, SENSYS 09: PROCEEDINGS OF THE 7TH ACM CONFERENCE ON EMBEDDED NETWORKED SENSOR SYSTEMS, P1, DOI 10.1145/1644038.1644040
   Graja I, 2016, 2016 IEEE 25TH INTERNATIONAL CONFERENCE ON ENABLING TECHNOLOGIES: INFRASTRUCTURE FOR COLLABORATIVE ENTERPRISES (WETICE), P152, DOI 10.1109/WETICE.2016.41
   Gray J, 1996, PROC INT CONF DATA, P152, DOI 10.1109/ICDE.1996.492099
   Guinard D., 2010, 2010 Internet of Things (IOT 2010), DOI 10.1109/IOT.2010.5678452
   Guna S, 2014, ACM T SENSOR NETWORK, V10, DOI 10.1145/2509434
   Gungor VC, 2013, IND ELECTR SERIES, P1
   Hill J, 2000, ACM SIGPLAN NOTICES, V35, P93, DOI 10.1145/384264.379006
   Hofstede AH., 2010, Modern business process automation
   Kiczales G, 1997, LECT NOTES COMPUT SC, V1241, P220, DOI 10.1007/BFb0053381
   Kim SD, 2014, 2014 IEEE 12TH INTERNATIONAL CONFERENCE ON DEPENDABLE, AUTONOMIC AND SECURE COMPUTING (DASC)/2014 IEEE 12TH INTERNATIONAL CONFERENCE ON EMBEDDED COMPUTING (EMBEDDEDCOM)/2014 IEEE 12TH INTERNATIONAL CONF ON PERVASIVE INTELLIGENCE AND COMPUTING (PICOM), P289, DOI 10.1109/DASC.2014.58
   Koopman Philip., 2010, BETTER EMBEDDED SYST
   Kothari N, 2007, PLDI'07: PROCEEDINGS OF THE 2007 ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P200, DOI 10.1145/1250734.1250757
   Krishnamurthy Lakshman., 2005, SENSYS 05, P64
   Laugwitz B, 2008, LECT NOTES COMPUT SC, V5298, P63, DOI 10.1007/978-3-540-89350-9_6
   Lee Jay, 2015, Manufacturing Letters, V3, P18, DOI 10.1016/j.mfglet.2014.12.001
   Lee W.-T., 2016, INT J DISTRIB SENS N, V12, P1
   Levis P, 2008, COMMUN ACM, V51, P99, DOI 10.1145/1364782.1364804
   Madden S, 2002, USENIX ASSOCIATION PROCEEDINGS OF THE FIFTH SYMPOSIUM ON OPERATING SYSTEMS DESIGN AND IMPLEMENTATION, P131, DOI 10.1145/1060289.1060303
   Madden SR, 2005, ACM T DATABASE SYST, V30, P122, DOI 10.1145/1061318.1061322
   Malavolta I, 2014, EUROMICRO CONF PROC, P149, DOI 10.1109/SEAA.2014.61
   Meyer Sonja, 2013, Advanced Information Systems Engineering. 25th International Conference, CAiSE 2013. Proceedings: LNCS 7908, P84, DOI 10.1007/978-3-642-38709-8_6
   Meyn S, 2009, IEEE DECIS CONTR P, P1494, DOI 10.1109/CDC.2009.5400442
   Mottola L., 2011, D 3 1 MAKESENSE PROG
   Mottola L., 2011, D 1 2 REQUIREMENT SP
   Mottola L, 2006, LECT NOTES COMPUT SC, V4026, P150
   Mottola L, 2011, ACM COMPUT SURV, V43, DOI 10.1145/1922649.1922656
   Mottola L, 2011, IEEE T MOBILE COMPUT, V10, P1694, DOI 10.1109/TMC.2010.250
   Nastic S, 2015, J INTERNET SERV APPL, V6, DOI 10.1186/s13174-015-0037-1
   Newton R, 2007, PROCEEDINGS OF THE SIXTH INTERNATIONAL SYMPOSIUM ON INFORMATION PROCESSING IN SENSOR NETWORKS, P489, DOI 10.1109/IPSN.2007.4379709
   Nguyen XT, 2015, 2015 IEEE 2ND WORLD FORUM ON INTERNET OF THINGS (WF-IOT), P387, DOI 10.1109/WF-IoT.2015.7389085
   Oppermann F. J., 2015, D 3 1 REPORT PROTOCO
   Oppermann F. J., 2013, ART WIRELESS SENSOR, P11
   Oppermann FJ, 2014, 2014 IEEE 39TH CONFERENCE ON LOCAL COMPUTER NETWORKS WORKSHOPS (LCN WORKSHOPS), P574, DOI 10.1109/LCNW.2014.6927705
   Pandey Kamlendu, 2009, International Journal of Recent Trends in Engineering, V1, P313
   Patel P, 2015, J SYST SOFTWARE, V103, P62, DOI 10.1016/j.jss.2015.01.027
   Picco G.Pietro., 2010, Proceedings of the FSE/SDP workshop on Future of software engineering research - FoSER'10, P283, DOI DOI 10.1145/1882362
   Römer K, 2009, 2009 INTERNATIONAL CONFERENCE ON INFORMATION PROCESSING IN SENSOR NETWORKS (IPSN 2009), P337
   Shaylor N, 2003, ACM SIGPLAN NOTICES, V38, P34, DOI 10.1145/780731.780738
   Spiess P., 2011, D 4 3 FINAL APPL SYS
   Stankovic JA, 2005, COMPUTER, V38, P23, DOI 10.1109/MC.2005.386
   Sutton R. S., 1998, Adaptive Computation and Machine Learning
   Tranquillini S, 2012, LECT NOTES COMPUT SC, V7481, P134, DOI 10.1007/978-3-642-32885-5_10
   Vidal C., 2015, INT J DISTRIB SENS N, V11, P1
   Wang Q, 2006, IEEE NETWORK, V20, P48, DOI 10.1109/MNET.2006.1637932
   WHITE RM, 1987, IEEE T ULTRASON FERR, V34, P124, DOI 10.1109/T-UFFC.1987.26922
   Whitehouse K., 2013, IQT Q, P5
   Wilson AD, 2009, HUM FACTORS ERGON, P153
   Yousfi A, 2016, IEEE T SERV COMPUT, V9, P621, DOI 10.1109/TSC.2015.2406694
   Yousfi A, 2016, INFORM SOFTWARE TECH, V74, P55, DOI 10.1016/j.infsof.2016.02.002
   Yu YJ, 2012, PROC INT CONF SOFTW, P540, DOI 10.1109/ICSE.2012.6227162
   Zimmerling M., 2017, ACM TRANSMISSIONS CY, V1, P1
   Zimmerling M, 2012, IPSN'12: PROCEEDINGS OF THE 11TH INTERNATIONAL CONFERENCE ON INFORMATION PROCESSING IN SENSOR NETWORKS, P173, DOI 10.1109/IPSN.2012.6920955
NR 82
TC 13
Z9 13
U1 0
U2 6
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUN
PY 2019
VL 45
IS 6
BP 576
EP 596
DI 10.1109/TSE.2017.2787585
PG 21
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA ID5AF
UT WOS:000471686800003
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Morales, R
   Saborido, R
   Khomh, F
   Chicano, F
   Antoniol, G
AF Morales, Rodrigo
   Saborido, Ruben
   Khomh, Foutse
   Chicano, Francisco
   Antoniol, Giuliano
TI EARMO: An Energy-Aware Refactoring Approach for Mobile Apps
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Software maintenance; refactoring; anti-patterns; mobile apps; energy
   consumption; search-based software engineering
ID GENETIC ALGORITHM; DEFECTS DETECTION; IMPACT; MODEL
AB The energy consumption of mobile apps is a trending topic and researchers are actively investigating the role of coding practices on energy consumption. Recent studies suggest that design choices can conflict with energy consumption. Therefore, it is important to take into account energy consumption when evolving the design of a mobile app. In this paper, we analyze the impact of eight type of anti-patterns on a testbed of 20 android apps extracted from F-Droid. We propose EARMO, a novel anti-pattern correction approach that accounts for energy consumption when refactoring mobile anti-patterns. We evaluate EARMO using three multiobjective search-based algorithms. The obtained results show that EARMO can generate refactoring recommendations in less than a minute, and remove a median of 84 percent of anti-patterns. Moreover, EARMO extended the battery life of a mobile phone by up to 29 minutes when running in isolation a refactored multimedia app with default settings (no Wi-Fi, no location services, and minimum screen brightness). Finally, we conducted a qualitative study with developers of our studied apps, to assess the refactoring recommendations made by EARMO. Developers found 68 percent of refactorings suggested by EARMO to be very relevant.
C1 [Morales, Rodrigo; Saborido, Ruben; Khomh, Foutse; Antoniol, Giuliano] Polytech Monteal, SWAT Lab software Analyt & Cloud Engn Res, Montreal, PQ, Canada.
   [Chicano, Francisco] Univ Malaga, Dept Languages & Comp Sci, Malaga 29016, Spain.
C3 Universite de Montreal; Polytechnique Montreal; Universidad de Malaga
RP Morales, R (corresponding author), Polytech Monteal, SWAT Lab software Analyt & Cloud Engn Res, Montreal, PQ, Canada.
EM rodrigo.morales@polymtl.ca; ruben.saborido-infantes@polymtl.ca;
   foutse.khomh@polymtl.ca; chicano@uma.es; antoniol@ieee.org
RI Chicano, Francisco/I-5650-2015; Saborido, Rubén/I-7001-2019; Alvarado,
   Rodrigo Morales/AAR-2780-2021
OI Chicano, Francisco/0000-0003-1259-2990; Saborido,
   Rubén/0000-0002-0944-5941; Alvarado, Rodrigo Morales/0000-0002-1350-0560
FU Natural Sciences and Engineering Research Council of Canada (NSERC);
   Consejo Nacional de Ciencia y Tecnologia, Mexico (CONACyT)
FX This work has been supported by the Natural Sciences and Engineering
   Research Council of Canada (NSERC) and Consejo Nacional de Ciencia y
   Tecnologia, Mexico (CONACyT).
CR Aggarwal K, 2015, PROC IEEE INT CONF S, P311, DOI 10.1109/ICSM.2015.7332477
   [Anonymous], 2014, SOFTWARETECHNIK TREN
   [Anonymous], P 30 IEEE ACM INT C
   [Anonymous], 2006, P ANN M SO ASS I RES
   [Anonymous], 2006, TUTORIAL OPTIMIZERS
   [Anonymous], 2012, NONLINEAR MULTIOBJEC
   [Anonymous], ANDROID PERFORMANCE
   [Anonymous], PEERJ PREPRINTS
   [Anonymous], 2002, P EUROGEN C
   [Anonymous], J SYST SOFTW
   [Anonymous], THESIS
   [Anonymous], 2014, P 8 ACM IEEE INT S E
   [Anonymous], 2013, SOFTWARETECHNIK TREN, DOI DOI 10.1007/S40568-013-0030-4
   [Anonymous], 2005, 1 ECOOP WORKSH BUILD
   Anthes G, 2011, COMMUN ACM, V54, P16, DOI 10.1145/1995376.1995383
   Banerjee A, 2016, 2016 IEEE/ACM INTERNATIONAL CONFERENCE ON MOBILE SOFTWARE ENGINEERING AND SYSTEMS (MOBILESOFT 2016), P139, DOI [10.1109/MobileSoft.2016.038, 10.1145/2897073.2897086]
   Banerjee A, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P588, DOI 10.1145/2635868.2635871
   Bansiya J, 2002, IEEE T SOFTWARE ENG, V28, P4, DOI 10.1109/32.979986
   Bourque Pierre, 2014, SWEBOK: Guide to the Software Engineering Body of Knowledge, V3rd
   Brown WH., 1998, AntiPatterns: refactoring software, architectures, and projects in crisis
   Bruce BR, 2015, GECCO'15: PROCEEDINGS OF THE 2015 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P1327, DOI 10.1145/2739480.2754752
   Carette A, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P115, DOI 10.1109/SANER.2017.7884614
   Chatzigeorgiou A, 2010, QUATIC 2010: SEVENTH INTERNATIONAL CONFERENCE ON THE QUALITY OF INFORMATION AND COMMUNICATIONS TECHNOLOGY, P106, DOI 10.1109/QUATIC.2010.16
   Cliff N., 2014, ORDINAL METHODS BEHA
   da Silva W. G., 2010, 1.Workshop de Sistemas Embarcados, P145
   Deb K, 2002, IEEE T EVOLUT COMPUT, V6, P182, DOI 10.1109/4235.996017
   Deb K., 2010, MULTIOBJECTIVE OPTIM
   Durillo JJ, 2011, ADV ENG SOFTW, V42, P760, DOI 10.1016/j.advengsoft.2011.05.014
   Eick SG, 2001, IEEE T SOFTWARE ENG, V27, P1, DOI 10.1109/32.895984
   Fokaefs Marios, 2007, 2007 IEEE International Conference on Software Maintenance, P519, DOI 10.1109/ICSM.2007.4362679
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   Guéhéneuc YG, 2008, IEEE T SOFTWARE ENG, V34, P667, DOI 10.1109/TSE.2008.48
   Guéhéneuc YG, 2004, ACM SIGPLAN NOTICES, V39, P301, DOI 10.1145/1035292.1029002
   Hao S, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P92, DOI 10.1109/ICSE.2013.6606555
   Harman M, 2007, GECCO 2007: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOL 1 AND 2, P1106
   Harman M, 2012, ACM COMPUT SURV, V45, DOI 10.1145/2379776.2379787
   Hecht G, 2016, 2016 IEEE/ACM INTERNATIONAL CONFERENCE ON MOBILE SOFTWARE ENGINEERING AND SYSTEMS (MOBILESOFT 2016), P59, DOI [10.1145/2897073.2897100, 10.1109/MobileSoft.2016.030]
   Hindle Abram, 2014, Proceedings of the 11th Working Conference on Mining Software Repositories, P12
   Kessentini M, 2011, CONF PROC INT SYMP C, P81, DOI 10.1109/ICPC.2011.22
   Khomh F, 2012, EMPIR SOFTW ENG, V17, P243, DOI 10.1007/s10664-011-9171-y
   Li D., 2014, P 3 INT WORKSHOP GRE, P46, DOI DOI 10.1145/2593743.2593750
   Li D, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P527, DOI 10.11455/2568225.2568321
   Li D, 2014, PROC IEEE INT CONF S, P121, DOI 10.1109/ICSME.2014.34
   Linares-Vasquez M, 2014, P 22 INT C PROGR COM, P232
   Linares-Vasquez M., 2014, Proceedings of the 11th Working Conference on Mining Software Repositories, P2
   Linares-Vásquez M, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P143, DOI 10.1145/2786805.2786847
   Lochtefeld DF, 2015, EUR J OPER RES, V243, P395, DOI 10.1016/j.ejor.2014.11.041
   Mahouachi Rim, 2013, Search Based Software Engineering. 5th International Symposium, SSBSE 2013. Proceedings: LNCS 8084, P126, DOI 10.1007/978-3-642-39742-4_11
   Manotas I, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P503, DOI 10.11455/2568225.2568297
   Mao K, 2017, IEEE SOFTWARE, V34, P11, DOI 10.1109/MS.2017.49
   Marinescu R, 2004, PROC IEEE INT CONF S, P350, DOI 10.1109/ICSM.2004.1357820
   Martin W, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P123, DOI 10.1109/MSR.2015.19
   Miller B. L., 1995, Complex Systems, V9, P193
   Mkaouer M. W., 2014, P 29 ACM IEEE INT C, P331, DOI [DOI 10.1145/2642937.2642965, 10.1145/2642937.2642965. u r l, DOI 10.1145/2642937.2642965.URL]
   Mkaouer MW, 2014, LECT NOTES COMPUT SC, V8636, P168
   Moha N, 2010, IEEE T SOFTWARE ENG, V36, P20, DOI 10.1109/TSE.2009.50
   Morales R, 2018, AUTOMAT SOFTW ENG, V25, P195, DOI 10.1007/s10515-017-0213-6
   Morales R, 2017, J SYST SOFTWARE, V128, P236, DOI 10.1016/j.jss.2016.05.042
   Morales R, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P24, DOI 10.1109/SANER.2016.23
   Nebro AJ, 2007, LECT NOTES COMPUT SC, V4403, P126
   Nebro AJ, 2009, INT J INTELL SYST, V24, P726, DOI 10.1002/int.20358
   O'Keeffe M., 2006, 10th European Conference on Software Maintenance and Reengineering
   Olbrich S, 2009, INT SYMP EMP SOFTWAR, P391
   Opdyke William F., 1992, THESIS
   Ouni A, 2015, J SYST SOFTWARE, V105, P18, DOI 10.1016/j.jss.2015.03.040
   Ouni A, 2013, GECCO'13: PROCEEDINGS OF THE 2013 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P1461
   Ouni A, 2013, AUTOMAT SOFTW ENG, V20, P47, DOI 10.1007/s10515-011-0098-8
   Palomba F, 2014, PROC IEEE INT CONF S, P101, DOI 10.1109/ICSME.2014.32
   Park J.J., 2014, SEKE, P717
   Parnas D. L., 1994, ICSE-16. 16th International Conference on Software Engineering (Cat. No.94CH3409-0), P279, DOI 10.1109/ICSE.1994.296790
   Pathak Abhijit D., 2012, Proceedings of the PCIM ASIA 2012. International Conference and Exhibition for Power Electronics, Intelligent Motion, Renewable Energy and Energy Management, P29
   Pinto G., 2015, A Refactoring Approach to Improve Energy Consumption of Parallel Software Systems
   Polato I., 2015, PeerJ PrePrints, V3, pe1320, DOI DOI 10.7287/PEERJ.PREPRINTS.1320V1
   Rasmussen K., 2014, P 3 INT WORKSHOP GRE, P38
   Reimann J, 2013, SOFTW SYST MODEL, V12, P579, DOI 10.1007/s10270-012-0243-2
   Saborido R, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P438, DOI 10.1109/SANER.2016.64
   Saborido Ruben., 2015, PeerJ PrePrints, V3, pe1219, DOI DOI 10.7287/PEERJ.PREPRINTS.1219V2
   Sahin C., 2012, 2012 First International Workshop on Green and Sustainable Software (GREENS), P55, DOI 10.1109/GREENS.2012.6224257
   Sahin C, 2016, J SOFTW-EVOL PROC, V28, P565, DOI 10.1002/smr.1762
   Seng O, 2006, GECCO 2006: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOL 1 AND 2, P1909
   Simons CL, 2010, IEEE T SOFTWARE ENG, V36, P798, DOI 10.1109/TSE.2010.34
   Singh D., 2010, The Atom LEAP platform for energy-efficient embedded computing: architecture, operation, and system implementation
   Taba SES, 2013, PROC IEEE INT CONF S, P270, DOI 10.1109/ICSM.2013.38
   Tonini A, 2013, BRAZ SYM COMPUT SYST, P157, DOI 10.1109/SBESC.2013.39
   Tsantalis N, 2008, CSMR 2008: 12TH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, P329
   Verloop D., 2013, Code Smells in the Mobile Applications Domain
   Voas J, 2012, IEEE SOFTWARE, V29, P25, DOI 10.1109/MS.2012.104
   Wan M, 2015, IEEE ICST WORKSHOP
   Yin RK, 2002, Applied Social Research Methods Series, V34
   Zhang CL, 2014, IEEE SOFTWARE, V31, P69, DOI 10.1109/MS.2014.27
   Zitzler E, 1999, IEEE T EVOLUT COMPUT, V3, P257, DOI 10.1109/4235.797969
NR 91
TC 53
Z9 58
U1 0
U2 9
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD DEC
PY 2018
VL 44
IS 12
BP 1176
EP 1206
DI 10.1109/TSE.2017.2757486
PG 31
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA HD6AP
UT WOS:000452614100003
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Xia, X
   Bao, LF
   Lo, D
   Xing, ZC
   Hassan, AE
   Li, SP
AF Xia, Xin
   Bao, Lingfeng
   Lo, David
   Xing, Zhenchang
   Hassan, Ahmed E.
   Li, Shanping
TI Measuring Program Comprehension: A Large-Scale Field Study with
   Professionals
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Program comprehension; field study; inference model
ID INFORMATION
AB During software development and maintenance, developers spend a considerable amount of time on program comprehension activities. Previous studies show that program comprehension takes up as much as half of a developer's time. However, most of these studies are performed in a controlled setting, or with a small number of participants, and investigate the program comprehension activities only within the IDEs. However, developers' program comprehension activities go well beyond their IDE interactions. In this paper, we extend our ActivitySpace framework to collect and analyze Human-Computer Interaction (HCI) data across many applications (not just the IDEs). We follow Minelli et al.'s approach to assign developers' activities into four categories: navigation, editing, comprehension, and other. We then measure the comprehension time by calculating the time that developers spend on program comprehension, e.g., inspecting console and breakpoints in IDE, or reading and understanding tutorials in web browsers. Using this approach, we can perform a more realistic investigation of program comprehension activities, through a field study of program comprehension in practice across a total of seven real projects, on 78 professional developers, and amounting to 3,148 working hours. Our study leverages interaction data that is collected across many applications by the developers. Our study finds that on average developers spend similar to 58 percent of their time on program comprehension activities, and that they frequently use web browsers and document editors to perform program comprehension activities. We also investigate the impact of programming language, developers' experience, and project phase on the time that is spent on program comprehension, and we find senior developers spend significantly less percentages of time on program comprehension than junior developers. Our study also highlights the importance of several research directions needed to reduce program comprehension time, e.g., building automatic detection and improvement of low quality code and documentation, construction of software-engineering-specific search engines, designing better IDEs that help developers navigate code and browse information more efficiently, etc.
C1 [Xia, Xin; Bao, Lingfeng; Li, Shanping] Zhejiang Univ, Coll Comp Sci & Technol, Hangzhou 310027, Zhejiang, Peoples R China.
   [Lo, David] Singapore Management Univ, Sch Informat Syst, Singapore 188065, Singapore.
   [Xing, Zhenchang] Australian Natl Univ, Res Sch Comp Sci, Canberra, ACT 0200, Australia.
   [Hassan, Ahmed E.] Queens Univ, Sch Comp, Kingston, ON K7L 3N6, Canada.
C3 Zhejiang University; Singapore Management University; Australian
   National University; Queens University - Canada
RP Bao, LF (corresponding author), Zhejiang Univ, Coll Comp Sci & Technol, Hangzhou 310027, Zhejiang, Peoples R China.
EM xxia@zju.edu.cn; lingfengbao@zju.edu.cn; davidlo@smu.edu.sg;
   zhenchang.xing@anu.edu.au; ahmed@cs.queensu.ca; shan@zju.edu.cn
RI Ali, Ahmed/HOF-4672-2023; KHALIFA, AHMED khalifa/HKF-2246-2023; Hassan,
   Ahmed/AAB-7241-2019; Xia, Xin/AAD-6217-2022; bao,
   lingfeng/AEG-8299-2022; Lo, David/A-2493-2012
OI KHALIFA, AHMED khalifa/0000-0002-2918-7572; Xia,
   Xin/0000-0002-6302-3256; Lo, David/0000-0002-4367-7201
FU NSFC Program [61602403, 61572426]; National Key Technology R&D Program
   of the Ministry of Science and Technology of China [2015BAH17F01]
FX The authors thank all developers from Hengtian and Insigma Global
   Service who participated in this study. This work was partially
   supported by NSFC Program (No. 61602403 and 61572426), and National Key
   Technology R&D Program of the Ministry of Science and Technology of
   China (No. 2015BAH17F01).
CR Andrew J Ko, 2004, P SIGCHI C HUMAN FAC, V6, P151, DOI [DOI 10.1145/985692.985712, 10.1145/985692.985712]
   [Anonymous], EMPIRICAL SOFTWARE E
   [Anonymous], KRUGLE
   [Anonymous], IEEE T SERV COMPUT
   [Anonymous], KODERS
   [Anonymous], 1988, Statistical Power Analysis for the Behavioral Sciences
   [Anonymous], 2015 30 IEEEACM INT
   Bajracharya S., 2006, COMP 21 ACM SIGPLAN, P681, DOI DOI 10.1145/1176617.1176671
   Bao LF, 2015, IEEE INT CONF AUTOM, P277, DOI 10.1109/ASE.2015.43
   Beck K., 2011, MANIFESTO AGILE SOFT
   Binkley D, 2009, INT C PROGRAM COMPRE, P158, DOI 10.1109/ICPC.2009.5090039
   Boslaugh S., 2012, Statistics in a Nutshell, V2nd
   Bragdon A., 2010, Proceedings of the 32nd International Conference on Software Engineering (ICSE'10), P455, DOI [DOI 10.1145/1806799.1806866, 10.1145/1806799.1806866]
   Carver JC, 2016, ESEM'16: PROCEEDINGS OF THE 10TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, DOI 10.1145/2961111.2962597
   CORBI TA, 1989, IBM SYST J, V28, P294, DOI 10.1147/sj.282.0294
   De Lucia A., 2012, 2012 IEEE 20th International Conference on Program Comprehension, P193
   Fjeldstad RichardK., 1983, Proceedings Guide, P48
   FLEISS JL, 1971, PSYCHOL BULL, V76, P378, DOI 10.1037/h0031619
   Foucault M, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P829, DOI 10.1145/2786805.2786870
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   Ghezzi C, 2002, Fundamentals of Software Engineering
   Greiler M, 2012, PROC INT CONF SOFTW, P244, DOI 10.1109/ICSE.2012.6227189
   Haiduc S, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P842, DOI 10.1109/ICSE.2013.6606630
   Ibrahim WM, 2012, J SYST SOFTWARE, V85, P2293, DOI 10.1016/j.jss.2011.09.019
   Jiang JJ, 1999, J MANAGE INFORM SYST, V16, P219, DOI 10.1080/07421222.1999.11518262
   Kersten Mik, 2006, P 14 ACM SIGSOFT INT, P1
   Kim J, 2013, ACM T INFORM SYST, V31, DOI 10.1145/2414782.2414783
   Ko AJ, 2006, IEEE T SOFTWARE ENG, V32, P971, DOI 10.1109/TSE.2006.116
   Lanza M, 2003, IEEE T SOFTWARE ENG, V29, P782, DOI 10.1109/TSE.2003.1232284
   LaToza T. D., 2006, 28th International Conference on Software Engineering Proceedings, P492, DOI 10.1145/1134285.1134355
   Lawrie D, 2006, INT C PROGRAM COMPRE, P3, DOI 10.1109/ICPC.2006.51
   Lemos O.A.L., 2007, P 22 IEEE ACM INT C, P525, DOI 10.1145/1321631.1321726
   Linstead E, 2009, DATA MIN KNOWL DISC, V18, P300, DOI 10.1007/s10618-008-0118-x
   Lo D, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P415, DOI 10.1145/2786805.2786809
   Maalej W, 2014, ACM T SOFTW ENG METH, V23, DOI 10.1145/2622669
   McBurney P. W., 2014, P 22 INT C PROGRAM C, P279
   Minelli R, 2015, INT C PROGRAM COMPRE, P25, DOI 10.1109/ICPC.2015.12
   Mockus A, 2009, PROC INT CONF SOFTW, P67, DOI 10.1109/ICSE.2009.5070509
   Moreno L, 2013, CONF PROC INT SYMP C, P23, DOI 10.1109/ICPC.2013.6613830
   Murphy-Hill E, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P1, DOI 10.1145/2568225.2568226
   Paetsch F, 2003, TWELFTH IEEE INTERNATIONAL WORKSHOPS ON ENABLING TECHNOLOGIES: INFRASTRUCTURE FOR COLLABORATIVE ENTERPRISES, PROCEEDINGS, P308
   PASHLER H, 1994, PSYCHOL BULL, V116, P220, DOI 10.1037/0033-2909.116.2.220
   Ponzanelli L, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P1295, DOI 10.1109/ICSE.2013.6606701
   Pressman R.S., 2005, Software engineering: a Practitioner's Approach
   Rahman MM, 2014, 2014 SOFTWARE EVOLUTION WEEK - IEEE CONFERENCE ON SOFTWARE MAINTENANCE, REENGINEERING, AND REVERSE ENGINEERING (CSMR-WCRE), P194, DOI 10.1109/CSMR-WCRE.2014.6747170
   Riel ArthurJ., 1996, OBJECT ORIENTED DESI, V335
   Rigby PC, 2016, PROC INT CONF SOFTW, P1006, DOI 10.1145/2884781.2884851
   Roehm T, 2012, PROC INT CONF SOFTW, P255, DOI 10.1109/ICSE.2012.6227188
   SHAPIRO SS, 1965, BIOMETRIKA, V52, P591, DOI 10.1093/biomet/52.3-4.591
   Sharif Bonita, 2010, Proceedings of the 18th IEEE International Conference on Program Comprehension (ICPC 2010), P196, DOI 10.1109/ICPC.2010.41
   Siegmund J, 2014, EMPIR SOFTW ENG, V19, P1299, DOI 10.1007/s10664-013-9286-4
   Singer J, 2005, PROG COMPREHEN, P173, DOI 10.1109/WPC.2005.25
   Spencer D., 2009, CARD SORTING DESIGNI
   Sridhara G, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P101, DOI 10.1145/1985793.1985808
   Sridhara Giriprasad, 2010, 25 IEEEACM INT C AUT, P43
   Tabachnick B.G., 2001, Using Multivariate Statistics
   TEASLEY BE, 1994, INT J HUM-COMPUT ST, V40, P757, DOI 10.1006/ijhc.1994.1036
   VONMAYRHAUSER A, 1995, COMPUTER, V28, P44, DOI 10.1109/2.402076
   Weinberg G.M., 1998, PSYCHOL COMPUTER PRO
   Whitaker A, 1999, MANAG REV, V88, P8
   Wong E, 2013, IEEE INT CONF AUTOM, P562, DOI 10.1109/ASE.2013.6693113
   ZAR JH, 1972, J AM STAT ASSOC, V67, P578, DOI 10.2307/2284441
   Zelkowitz M., 1979, Principles of Software Engineering and Design"
NR 63
TC 154
Z9 168
U1 1
U2 17
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD OCT
PY 2018
VL 44
IS 10
BP 951
EP 976
DI 10.1109/TSE.2017.2734091
PG 26
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA GX5PZ
UT WOS:000447803400003
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Li, L
   Sun, J
   Liu, Y
   Sun, M
   Dong, JS
AF Li, Li
   Sun, Jun
   Liu, Yang
   Sun, Meng
   Dong, Jin-Song
TI A Formal Specification and Verification Framework for Timed Security
   Protocols
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Timed security protocol; timed applied pi-calculus; parameterized
   verification; secrecy and authentication
ID CRYPTOGRAPHIC PROTOCOLS; AUTHENTICATION; NETWORKS; LOGIC; TOOL
AB Nowadays, protocols often use time to provide better security. For instance, critical credentials are often associated with expiry dates in system designs. However, using time correctly in protocol design is challenging, due to the lack of time related formal specification and verification techniques. Thus, we propose a comprehensive analysis framework to formally specify as well as automatically verify timed security protocols. A parameterized method is introduced in our framework to handle timing parameters whose values cannot be decided in the protocol design stage. In this work, we first propose timed applied pi-calculus as a formal language for specifying timed security protocols. It supports modeling of continuous time as well as application of cryptographic functions. Then, we define its formal semantics based on timed logic rules, which facilitates efficient verification against various authentication and secrecy properties. Given a parameterized security protocol, our method either produces a constraint on the timing parameters which guarantees the security property satisfied by the protocol, or reports an attack that works for any parameter value. The correctness of our verification algorithm has been formally proved. We evaluate our framework with multiple timed and untimed security protocols and successfully find a previously unknown timing attack in Kerberos V.
C1 [Li, Li; Sun, Jun] Singapore Univ Technol & Design, ISTD, Singapore 487372, Singapore.
   [Liu, Yang] Nanyang Technol Univ, Sch Comp Engn, Singapore 639798, Singapore.
   [Sun, Meng] Peking Univ, Sch Math Sci, Beijing 100080, Peoples R China.
   [Dong, Jin-Song] Natl Univ Singapore, Sch Comp, Singapore 487372, Singapore.
C3 Singapore University of Technology & Design; Nanyang Technological
   University; Peking University; National University of Singapore
RP Li, L (corresponding author), Singapore Univ Technol & Design, ISTD, Singapore 487372, Singapore.
EM li_li@sutd.edu.sg; sunjun@sutd.edu.sg; yangliu@ntu.edu.sg;
   sunmeng@math.pku.edu.cn; yangliu@titu.edu.sg
RI Liu, Yang/HNJ-6693-2023; yang, liu/GVU-8760-2022; yang,
   liu/HTN-9175-2023; LIU, YANG/HWQ-4615-2023; liu, yang/HHY-8583-2022;
   liu, yang/HIU-0559-2022; liu, yang/HQY-7531-2023; SUN,
   MENG/KQA-2135-2024; Liu, Yang/D-2306-2013
OI Liu, Yang/0000-0001-7300-9215
CR Abadi M, 2005, J ACM, V52, P102, DOI 10.1145/1044731.1044735
   Abadi M, 1996, IEEE T SOFTWARE ENG, V22, P6, DOI 10.1109/32.481513
   Abadi M, 2001, ACM SIGPLAN NOTICES, V36, P104, DOI 10.1145/373243.360213
   Allamigeon X, 2005, 18TH IEEE COMPUTER SECURITY FOUNDATIONS WORKSHOP, PROCEEDINGS, P140, DOI 10.1109/CSFW.2005.25
   ALUR R, 1994, THEOR COMPUT SCI, V126, P183, DOI 10.1016/0304-3975(94)90010-8
   [Anonymous], P 2 ACM WORKSH WIR S
   [Anonymous], RFC4120
   Arapinis M., 2014, LECT NOTES COMPUTER, V8414, P22, DOI DOI 10.1007/978-3-642-54792-8_2
   Bagnara R, 2002, LECT NOTES COMPUT SC, V2477, P213
   Basin D, 2010, LECT NOTES COMPUT SC, V6345, P340, DOI 10.1007/978-3-642-15497-3_21
   Bella G., 1998, P 5 EUR S RES COMP S, P361
   Blanchet B, 2001, P IEEE CSFW, P82, DOI 10.1109/CSFW.2001.930138
   Blanchet B, 2008, J LOGIC ALGEBR PROGR, V75, P3, DOI 10.1016/j.jlap.2007.06.002
   Bozga M, 1998, LECT NOTES COMPUT SC, V1427, P546, DOI 10.1007/BFb0028779
   Brands S., 1993, EUROCRYPT '93: Workshop on the theory and application of cryptographic techniques on Advances in cryptology, P344, DOI DOI 10.1007/3-540-48285-7_30
   BURROWS M, 1990, ACM T COMPUT SYST, V8, P18, DOI [10.1145/77648.77649, 10.1145/74851.74852]
   Butler F, 2006, THEOR COMPUT SCI, V367, P57, DOI 10.1016/j.tcs.2006.08.040
   Capkun S, 2006, IEEE J SEL AREA COMM, V24, P221, DOI 10.1109/JSAC.2005.861380
   *CCITT, 1987, X509 CCITT
   Cervesato I, 1999, P IEEE CSFW, P55, DOI 10.1109/CSFW.1999.779762
   Cheval Vincent, 2015, Principles of Security and Trust. 4th International Conference, POST 2015, held as part of the European Joint Conferences on Theory and Practice of Software, ETAPS 2015. Proceedings: LNCS 9036, P280, DOI 10.1007/978-3-662-46666-7_15
   Chothia T., 2015, LNCS, V9036, P137, DOI [10.1007/978-3-662-46666-78, DOI 10.1007/978-3-662-46666-78]
   Cremers CJF, 2006, THEOR COMPUT SCI, V367, P139, DOI 10.1016/j.tcs.2006.08.034
   Cremers CJF, 2008, LECT NOTES COMPUT SC, V5123, P414
   Delzanno G, 2004, LECT NOTES COMPUT SC, V2988, P342
   DOLEV D, 1983, IEEE T INFORM THEORY, V29, P198, DOI 10.1109/TIT.1983.1056650
   Gunther C.G., 1989, Advances in Cryptology-Eurocrypt, P29
   Guttman JD, 2012, J AUTOM REASONING, V48, P159, DOI 10.1007/s10817-010-9202-1
   Kanovich Max, 2015, Principles of Security and Trust. 4th International Conference, POST 2015, held as part of the European Joint Conferences on Theory and Practice of Software, ETAPS 2015. Proceedings: LNCS 9036, P259, DOI 10.1007/978-3-662-46666-7_14
   Kohl J. T., 1993, RFC1510
   Kohl JohnT., 1994, Distributed Open Systems, P78
   Krawczyk H., 1996, Proceedings of the Symposium on Network and Distributed System Security, P114, DOI 10.1109/NDSS.1996.492418
   Kremer S, 2014, P IEEE S SECUR PRIV, P163, DOI 10.1109/SP.2014.18
   Larsen K. G., 1997, International Journal on Software Tools for Technology Transfer, V1, P134, DOI 10.1007/s100090050010
   LDAP Account Manager, 2014, KERB 5 IMPL HEIMD 1
   Li L, 2015, LECT NOTES COMPUT SC, V9109, P342, DOI 10.1007/978-3-319-19249-9_22
   Li L, 2014, LECT NOTES COMPUT SC, V8829, P300, DOI 10.1007/978-3-319-11737-9_20
   Li L, 2014, IEEE INT C ENG COMP, P11, DOI 10.1109/ICECCS.2014.11
   LOWE G, 1995, INFORM PROCESS LETT, V56, P131, DOI 10.1016/0020-0190(95)00144-2
   Lowe G., 1997, FAMILY ATTACKS AUTHE
   Lynch N., 1996, Formal Aspects of Computing, V8, P499, DOI 10.1007/BF01211907
   Meier Simon, 2013, Computer Aided Verification. 25th International Conference, CAV 2013. Proceedings. LNCS 8044, P696, DOI 10.1007/978-3-642-39799-8_48
   Menezes A. J., 1996, HDB APPL CRYPTOGRAPH, V1st
   MIT, 2014, KERB 5 IMPL KRB5 1 1
   Mitchell JC, 1997, P IEEE S SECUR PRIV, P141, DOI 10.1109/SECPRI.1997.601329
   NEEDHAM RM, 1978, COMMUN ACM, V21, P993, DOI 10.1145/359657.359659
   Pedersen Torben Pryds, 1991, LECT NOTES COMPUTER, P129, DOI DOI 10.1007/3-540-46766-1_9
   Schneider S., 1999, Concurrent and Real Time Systems: The CSP Approach, V1st
   Song D. X., 2001, Journal of Computer Security, V9, P47
NR 49
TC 9
Z9 12
U1 0
U2 11
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD AUG
PY 2018
VL 44
IS 8
BP 725
EP 746
DI 10.1109/TSE.2017.2712621
PG 22
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA GQ6CY
UT WOS:000441791100002
OA Green Submitted, Green Published
DA 2024-07-18
ER

PT J
AU Petersen, K
   Badampudi, D
   Shah, SMA
   Wnuk, K
   Gorschek, T
   Papatheocharous, E
   Axelsson, J
   Sentilles, S
   Crnkovic, I
   Cicchetti, A
AF Petersen, Kai
   Badampudi, Deepika
   Shah, Syed Muhammad Ali
   Wnuk, Krzysztof
   Gorschek, Tony
   Papatheocharous, Efi
   Axelsson, Jakob
   Sentilles, Severine
   Crnkovic, Ivica
   Cicchetti, Antonio
TI Choosing Component Origins for Software Intensive Systems: In-House,
   COTS, OSS or Outsourcing?-A Case Survey
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Decision making; in-house; COTS; OSS; outsourcing
ID DECISION-MAKING; FRAMEWORK; SELECTION; ARCHITECTURE
AB The choice of which software component to use influences the success of a software system. Only a few empirical studies investigate how the choice of components is conducted in industrial practice. This is important to understand to tailor research solutions to the needs of the industry. Existing studies focus on the choice for off-the-shelf (OTS) components. It is, however, also important to understand the implications of the choice of alternative component sourcing options (CSOs), such as outsourcing versus the use of OTS. Previous research has shown that the choice has major implications on the development process as well as on the ability to evolve the system. The objective of this study is to explore how decision making took place in industry to choose among CSOs. Overall, 22 industrial cases have been studied through a case survey. The results show that the solutions specifically for CSO decisions are deterministic and based on optimization approaches. The non-deterministic solutions proposed for architectural group decision making appear to suit the CSO decision making in industry better. Interestingly, the final decision was perceived negatively in nine cases and positively in seven cases, while in the remaining cases it was perceived as neither positive nor negative.
C1 [Petersen, Kai] Blekinge Inst Technol, Dept Software Engn, Campus Grasvik, S-37141 Karlskrona, Sweden.
   [Badampudi, Deepika] Blekinge Inst Technol, Campus Grasvik, S-37141 Karlskrona, Sweden.
   [Wnuk, Krzysztof] Blekinge Inst Technol, Software Engn Res Grp SERL, Campus Grasvik, S-37141 Karlskrona, Sweden.
   [Gorschek, Tony] Blekinge Inst Technol, Software Engn, Campus Grasvik, S-37141 Karlskrona, Sweden.
   [Shah, Syed Muhammad Ali; Papatheocharous, Efi; Axelsson, Jakob] SICS Swedish ICT AB, SE-16451 Kista, Sweden.
   [Sentilles, Severine] Malardalen Univ, Sch Innovat Design & Engn, S-72123 Vasteras, Sweden.
   [Cicchetti, Antonio] Malardalen Univ, IDT Dept, S-72123 Vasteras, Sweden.
   [Crnkovic, Ivica] Chalmers, S-41258 Gothenburg, Sweden.
C3 Blekinge Institute Technology; Blekinge Institute Technology; Blekinge
   Institute Technology; Blekinge Institute Technology; RISE Research
   Institutes of Sweden; Malardalen University; Malardalen University;
   Chalmers University of Technology
RP Petersen, K (corresponding author), Blekinge Inst Technol, Dept Software Engn, Campus Grasvik, S-37141 Karlskrona, Sweden.
EM kai.petersen@bth.se; deepika.badampudi@bth.se; syed.shah@sics.se;
   krzysztof.wnuk@bth.se; tony.gorschek@bth.se;
   efi.papatheocharous@sics.se; jakob.axelsson@sics.se;
   severine.sentilles@mdh.se; ivica.crnkovic@mdh.se;
   antonio.cicchetti@mdh.se
RI Axelsson, Jakob/AAE-3249-2020
OI Petersen, Kai/0000-0002-1532-8223; Ivica, Crnkovic/0000-0002-5278-755X;
   Axelsson, Jakob/0000-0002-3986-1196
FU Knowledge Foundation in Sweden [20140218]
FX The work is partially supported by a research grant for the ORION
   project (reference number 20140218) from The Knowledge Foundation in
   Sweden.
CR [Anonymous], 2013, APPL LOGISTIC REGRES
   [Anonymous], 2005, P 38 ANN HAW INT C S, DOI DOI 10.1109/HICSS.2005.38
   Ayala C, 2011, J SYST SOFTWARE, V84, P620, DOI 10.1016/j.jss.2010.10.019
   Badampudi D, 2016, J SYST SOFTWARE, V121, P105, DOI 10.1016/j.jss.2016.07.027
   Barney S, 2012, INFORM SOFTWARE TECH, V54, P651, DOI 10.1016/j.infsof.2012.01.008
   Berander P, 2005, ENGINEERING AND MANAGING SOFTWARE REQUIREMENTS, P69, DOI 10.1007/3-540-28244-0_4
   Bergquist M, 2001, INFORM SYST J, V11, P305, DOI 10.1046/j.1365-2575.2001.00111.x
   Britto R, 2016, IEEE SOFTWARE, V33, P48, DOI 10.1109/MS.2016.146
   Brownsword L, 2000, IEEE SOFTWARE, V17, P48, DOI 10.1109/52.854068
   Capilla Rafael, 2008, 2008 23rd IEEE/ACM International Conference on Automated Software Engineering, P208, DOI 10.1109/ASE.2008.31
   Carlson J, 2016, PROCEEDINGS 2016 1ST INTERNATIONAL WORKSHOP ON DECISION MAKING IN SOFTWARE ARCHITECTURE, P9, DOI 10.1109/MARCH.2016.6
   Castellani M., 2010, TECHNOL SUPPORTING R, P172
   Cortellessa V, 2008, COMPUT OPER RES, V35, P3090, DOI 10.1016/j.cor.2007.01.011
   Cortellessa V, 2006, LECT NOTES COMPUT SC, V4344, P66
   Cortellessa V, 2015, SCI COMPUT PROGRAM, V98, P439, DOI 10.1016/j.scico.2014.06.001
   Davis AM, 2003, COMPUTER, V36, P42, DOI 10.1109/MC.2003.1185216
   Di Giacomo P, 2005, LECT NOTES COMPUT SC, V3412, P301
   Falessi D., 2011, ACM COMPUT SURV, V43, P4
   Gerea M. M., 2007, THESIS
   Gorschek T, 2006, REQUIR ENG, V11, P79, DOI 10.1007/s00766-005-0020-7
   Groher I, 2015, LECT NOTES COMPUT SC, V9278, P181, DOI 10.1007/978-3-319-23727-5_15
   Harris JS, 2004, IEEE SOFTWARE, V21, P42, DOI 10.1109/MS.2004.1259211
   Helokunnas T, 2002, LECT NOTES COMPUT SC, V2559, P509
   Helokunnas T, 2002, LECT NOTES COMPUT SC, V2349, P267
   Hissam S. A., 2002, IEE Proceedings-Software, V149, P47, DOI 10.1049/ip-sen:20020208
   Hissam S. A., 2001, P 1 WORKSH OP SOURC, P1
   Holmstrom H, 2006, 2006 IEEE INTERNATIONAL CONFERENCE ON GLOBAL SOFTWARE ENGINEERING, PROCEEDINGS, P3, DOI 10.1109/ICGSE.2006.261210
   International software product management association (ISPMA), 2016, SPM SYLL FDN LEV V1
   Jingyue Li, 2006, 28th International Conference on Software Engineering Proceedings, P897
   Khan SU, 2011, J SYST SOFTWARE, V84, P686, DOI 10.1016/j.jss.2010.12.010
   Kitchenham Barbara, 2004, Joint Technical Report, V2004, P1
   Kramer Tommi, 2013, Advanced Information Systems Engineering. 25th International Conference, CAiSE 2013. Proceedings: LNCS 7908, P530, DOI 10.1007/978-3-642-38709-8_34
   Kramer T, 2011, LECT NOTES BUS INF P, V91, P115
   Kruchten P., 2004, GRON WORKSH SOFTW VA, P54
   Land R, 2008, LECT NOTES COMPUT SC, V5030, P100, DOI 10.1007/978-3-540-68073-4_9
   LARSSON R, 1993, ACAD MANAGE J, V36, P1515, DOI 10.5465/256820
   Li J., 2005, SOFTWARE METRICS 200, P26
   Li JY, 2008, IEEE T SOFTWARE ENG, V34, P271, DOI 10.1109/TSE.2008.14
   Li J, 2006, EMPIR SOFTW ENG, V11, P433, DOI 10.1007/s10664-006-9005-5
   Li JY, 2009, IEEE SOFTWARE, V26, P80, DOI 10.1109/MS.2009.33
   Malavolta I, 2014, LECT NOTES COMPUT SC, V8785, P9, DOI 10.1007/978-3-319-12241-0_2
   Miller J, 2004, J SYST SOFTWARE, V73, P183, DOI 10.1016/j.jss.2003.12.019
   Mishra Birendra K., 2002, QUALITY PROFITS OPEN, P32
   Morandini M., 2014, BUSINESS INFORM SYST, P241
   Nowak Marcin, 2013, Software Architecture. 7th European Conference, ECSA 2013. Proceedings: LNCS 7584, P146, DOI 10.1007/978-3-642-39031-9_13
   Papatheocharous E., 2015, P 2015 EUR C SOFTW A
   Petersen K, 2013, 2013 JOINT CONFERENCE OF THE 23RD INTERNATIONAL WORKSHOP ON SOFTWARE MEASUREMENT AND THE 2013 EIGHTH INTERNATIONAL CONFERENCE ON SOFTWARE PROCESS AND PRODUCT MEASUREMENT (IWSM-MENSURA), P81, DOI 10.1109/IWSM-Mensura.2013.22
   Potena Pasqualina., 2007, Joint Meeting of the European Software Engineering Conference and ACM SIGSOFT Symposium on the Foundations of Software Engineering (ESEC/FSE), P583
   Razavian M, 2016, J SOFTW-EVOL PROC, V28, P394, DOI 10.1002/smr.1776
   Rekha VS, 2014, LECT NOTES COMPUT SC, V8627, P17, DOI 10.1007/978-3-319-09970-5_2
   Rubin A., 2012, Statistics for evidence-based practice and evaluation
   Rudzki J, 2009, 2009 35TH EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS, PROCEEDINGS, P11, DOI 10.1109/SEAA.2009.30
   Strydom J., 2005, Introduction to marketing, V3rd
   Syed-Mohamad SM, 2008, ASIA PAC SOFWR ENG, P229, DOI 10.1109/APSEC.2008.20
   Tofan D, 2016, INFORM SOFTWARE TECH, V72, P31, DOI 10.1016/j.infsof.2015.12.002
   Torchiano M, 2004, IEEE SOFTWARE, V21, P88, DOI 10.1109/MS.2004.1270770
   Torres Romina, 2012, Agent and Multi-Agent Systems. Technologies and Applications. Proceedings 6th KES International Conference, KES-AMSTA 2012, P34, DOI 10.1007/978-3-642-30947-2_7
   Ulziit B, 2015, J SOFTW-EVOL PROC, V27, P763, DOI 10.1002/smr.1720
   Vale T, 2016, J SYST SOFTWARE, V111, P128, DOI 10.1016/j.jss.2015.09.019
   van Heesch U, 2012, J SYST SOFTWARE, V85, P795, DOI 10.1016/j.jss.2011.10.017
   Wanyama T., 2008, INT J COMPUT ICT RES, V2, P34
   Weibing Chen, 2008, Software Process: Improvement and Practice, V13, P89, DOI 10.1002/spip.361
   Wnuk K, 2015, J SOFTW-EVOL PROC, V27, P647, DOI 10.1002/smr.1721
   Wohlin C, 2016, LECT NOTES BUS INF P, V240, P1, DOI 10.1007/978-3-319-40515-5_1
   Xu J., 2005, P 38 ANN HAW INT C S, p198a
   YIN RK, 1975, ADMIN SCI QUART, V20, P371, DOI 10.2307/2391997
   Zimmermann O, 2007, LECT NOTES COMPUT SC, V4880, P15
NR 67
TC 23
Z9 23
U1 0
U2 10
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAR
PY 2018
VL 44
IS 3
BP 237
EP 261
DI 10.1109/TSE.2017.2677909
PG 25
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science; Engineering
GA FZ6AL
UT WOS:000427678400002
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Mariani, L
   Pezzè, M
   Santoro, M
AF Mariani, Leonardo
   Pezze, Mauro
   Santoro, Mauro
TI GK-Tail plus An Efficient Approach to Learn Software Models
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Dynamic model learning; software models; state based models; guarded
   finite state machines; specification mining
ID INVARIANTS
AB Inferring models of program behavior from execution samples can provide useful information about a system, also in the increasingly common case of systems that evolve and adapt in their lifetime, and without requiring large developers' effort. Techniques for learning models of program behavior from execution traces shall address conflicting challenges of recall, specificity and performance: They shall generate models that comprehensively represent the system behavior (recall) while limiting the amount of illegal behaviors that may be erroneously accepted by the model (specificity), and should infer the models within a reasonable time budget to process industrial scale systems (performance). In our early work, we designed GK-tail, an approach that can infer guarded finite state machines that model the behavior of object-oriented programs in terms of sequences of method calls and constraints on the parameter values. GK-tail addresses well two of the three main challenges, since it infers guarded finite state machines with a high level of recall and specificity, but presents severe limitations in terms of performance that reduce its scalability. In this paper, we present GK-tail+, a new approach to infer guarded finite state machines from execution traces of object-oriented programs. GK-tail+ proposes a new set of inference criteria that represent the core element of the inference process: It largely reduces the inference time of GK-tail while producing guarded finite state machines with a comparable level of recall and specificity. Thus, GK-tail+ advances the preliminary results of GK-tail by addressing all the three main challenges of learning models of program behavior from execution traces.
C1 [Mariani, Leonardo] Univ Milano Bicocca, Dept Informat Syst & Commun, I-20126 Milan, Italy.
   [Pezze, Mauro; Santoro, Mauro] Univ Svizzera Italiana, Fac Informat, CH-6900 Lugano, Switzerland.
C3 University of Milano-Bicocca; Universita della Svizzera Italiana
RP Mariani, L (corresponding author), Univ Milano Bicocca, Dept Informat Syst & Commun, I-20126 Milan, Italy.
EM mariani@disco.unimib.it; mauro.pezze@usi.ch; mauro.santoro@usi.ch
OI PEZZE, MAURO/0000-0001-5193-7379; Mariani, Leonardo/0000-0001-9527-7042
FU H2020 Learn project; ERC [646867]; Swiss National Foundation (SNF)
   [200021_162409: ASysT: Automatic System Testing]; European Research
   Council (ERC) [646867] Funding Source: European Research Council (ERC)
FX This research has been partially supported by the H2020 Learn project,
   which has been funded under the ERC Consolidator Grant 2014 program (ERC
   Grant Agreement no. 646867), and by the Swiss National Foundation (SNF
   Grant 200021_162409: ASysT: Automatic System Testing).
CR Aarts F, 2015, LECT NOTES COMPUT SC, V9399, P165, DOI 10.1007/978-3-319-25150-9_11
   Aarts F, 2010, LECT NOTES COMPUT SC, V6435, P188, DOI 10.1007/978-3-642-16573-3_14
   Agresti A, 1998, AM STAT, V52, P119, DOI 10.2307/2685469
   Ammons G, 2002, ACM SIGPLAN NOTICES, V37, P4, DOI 10.1145/565816.503275
   [Anonymous], 1998, Learning from Data: Concepts, Theory, and Methods
   [Anonymous], 2016, Aspectj
   [Anonymous], 2007, 6th joint meeting of the European Software Engineering Conference and the ACM SIGSOFT Symposium on the Foundations of Software Engineering (ESEC/FSE), DOI DOI 10.1145/1287624.1287632
   [Anonymous], 2007, P 2007 INT S SOFTWAR
   Apache, 2016, BCEL
   Bertolino A, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P141, DOI 10.1145/1595696.1595719
   BESCHASTNIKH I., 2011, P 19 ACM SIGSOFT S 1, P267, DOI DOI 10.1145/2025113.2025151
   Beschastnikh I, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P468, DOI 10.1145/2568225.2568246
   Beschastnikh I, 2015, IEEE T SOFTWARE ENG, V41, P408, DOI 10.1109/TSE.2014.2369047
   Beschastnikh I, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P252, DOI 10.1109/ICSE.2013.6606571
   BIERMANN AW, 1972, IEEE T COMPUT, VC 21, P592, DOI 10.1109/TC.1972.5009015
   Carzaniga A, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P931, DOI 10.1145/2568225.2568287
   Cassel Sofia, 2014, Software Engineering and Formal Methods. 12th International Conference, SEFM 2014. Proceedings: LNCS 8702, P250, DOI 10.1007/978-3-319-10431-7_18
   Cassel S., 2015, DIFTS 2015
   Clopper CJ, 1934, BIOMETRIKA, V26, P404, DOI 10.1093/biomet/26.4.404
   Cook J. E., 1998, ACM Transactions on Software Engineering and Methodology, V7, P215, DOI 10.1145/287000.287001
   Cook JE, 2004, COMPUT IND, V53, P297, DOI 10.1016/j.compind.2003.10.005
   Dallmeier V., 2006, P 2006 INT WORKSH DY, P17, DOI DOI 10.1145/1138912.1138918
   Dallmeier V, 2012, IEEE T SOFTWARE ENG, V38, P243, DOI 10.1109/TSE.2011.105
   de Caso G, 2012, IEEE T SOFTWARE ENG, V38, P141, DOI 10.1109/TSE.2010.98
   Ernst MD, 2001, IEEE T SOFTWARE ENG, V27, P99, DOI 10.1109/32.908957
   Fahland D, 2013, IEEE INT CONF AUTOM, P443, DOI 10.1109/ASE.2013.6693102
   Ghezzi C, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P277, DOI 10.1145/2568225.2568234
   IBM, 2015, ECL TEST PERF TOOLS
   Isberner M, 2014, LECT NOTES COMPUT SC, V8734, P307, DOI 10.1007/978-3-319-11164-3_26
   Jiang GF, 2007, IEEE T KNOWL DATA EN, V19, P1508, DOI 10.1109/TKDE.2007.190648
   Krka I, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P178, DOI 10.1145/2635868.2635890
   Kumar S, 2012, PROC INT CONF SOFTW, P914, DOI 10.1109/ICSE.2012.6227128
   Lemieux C, 2015, IEEE INT CONF AUTOM, P81, DOI 10.1109/ASE.2015.71
   Lo D, 2008, J SOFTW MAINT EVOL-R, V20, P227, DOI 10.1002/smr.375
   Lo D, 2012, J SYST SOFTWARE, V85, P2063, DOI 10.1016/j.jss.2012.04.001
   Lo D, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P345, DOI 10.1145/1595696.1595761
   Lo D, 2007, KDD-2007 PROCEEDINGS OF THE THIRTEENTH ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P460
   Lorenzoli D, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P501, DOI 10.1145/1368088.1368157
   Manning Christopher D., 2008, INTRO INFORM RETRIEV
   Marchetto Alessandro, 2008, 2008 First IEEE International Conference on Software Testing, Verification and Validation (ICST '08), P121, DOI 10.1109/ICST.2008.22
   Mariani L., 2012, Proceedings of the 2012 IEEE 23rd International Symposium on Software Reliability Engineering (ISSRE), P241, DOI 10.1109/ISSRE.2012.14
   Mariani Leonardo, 2008, 2008 IEEE International Symposium on Software Reliability Engineering, P117, DOI 10.1109/ISSRE.2008.48
   Mariani L, 2007, IEEE SOFTWARE, V24, P76, DOI 10.1109/MS.2007.138
   Mariani L, 2011, IEEE T SOFTWARE ENG, V37, P486, DOI 10.1109/TSE.2010.93
   Nguyen C.D., 2013, ESEC/SIGSOFT FSE'13, P136
   Ohmann T., 2014, P IEEE ACM INT C AUT, P19, DOI [10.1145/2642937.2642988, DOI 10.1145/2642937.2642988, 10.1145/2642937, DOI 10.1145/2642937]
   Reiss SP, 2001, PROC INT CONF SOFTW, P221, DOI 10.1109/ICSE.2001.919096
   Safyallah H, 2006, INT C PROGRAM COMPRE, P84, DOI 10.1109/ICPC.2006.19
   Schur M., 2013, Joint Meeting of the European Software Engineering Conference and the ACM SIGSOFT Symposium on the Foundations of Software Engineering, ESEC/FSE'13, Saint Petersburg, Russian Federation, August 18-26, 2013, P422
   Vasudevan P, 2006, FOURTH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING RESEARCH, MANAGEMENT AND APPLICATIONS, PROCEEDINGS, P289, DOI 10.1109/SERA.2006.25
   Walkinshaw Neil, 2008, 2008 23rd IEEE/ACM International Conference on Automated Software Engineering, P248, DOI 10.1109/ASE.2008.35
   Walkinshaw N., 2015, EMPIR SOFTW ENG, V21, P1
   Weimer W, 2005, LECT NOTES COMPUT SC, V3440, P461
   Whaley J., 2002, Software Engineering Notes, V27, P221, DOI 10.1145/566171.566212
NR 54
TC 23
Z9 25
U1 0
U2 5
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD AUG 1
PY 2017
VL 43
IS 8
BP 715
EP 738
DI 10.1109/TSE.2016.2623623
PG 24
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA FD7FW
UT WOS:000407693000002
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Akiki, PA
   Bandara, AK
   Yu, YJ
AF Akiki, Pierre A.
   Bandara, Arosha K.
   Yu, Yijun
TI Engineering Adaptive Model-Driven User Interfaces
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Design tools and techniques; software architectures; support for
   adaptation; user interfaces
ID USABILITY EVALUATION; ENVIRONMENT; GENERATION; DESIGN
AB Software applications that are very large-scale, can encompass hundreds of complex user interfaces (UIs). Such applications are commonly sold as feature-bloated off-the-shelf products to be used by people with variable needs in the required features and layout preferences. Although many UI adaptation approaches were proposed, several gaps and limitations including: extensibility and integration in legacy systems, still need to be addressed in the state-of-the-art adaptive UI development systems. This paper presents Role-Based UI Simplification (RBUIS) as a mechanism for increasing usability through adaptive behavior by providing end-users with a minimal feature-set and an optimal layout, based on the context-of-use. RBUIS uses an interpreted runtime model-driven approach based on the Cedar Architecture, and is supported by the integrated development environment (IDE), Cedar Studio. RBUIS was evaluated by integrating it into OFBiz, an open-source ERP system. The integration method was assessed and measured by establishing and applying technical metrics. Afterwards, a usability study was carried out to evaluate whether UIs simplified with RBUIS show an improvement over their initial counterparts. This study leveraged questionnaires, checking task completion times and output quality, and eye-tracking. The results showed that UIs simplified with RBUIS significantly improve end-user efficiency, effectiveness, and perceived usability.
C1 [Akiki, Pierre A.] Notre Dame Univ Louaize, Dept Comp Sci, Zouk Mosbeh, Lebanon.
   [Bandara, Arosha K.; Yu, Yijun] Open Univ, Comp & Commun Dept, Walton Hall, Milton Keynes MK7 6AA, Bucks, England.
C3 Notre Dame University Lebanon; Open University - UK
RP Akiki, PA (corresponding author), Notre Dame Univ Louaize, Dept Comp Sci, Zouk Mosbeh, Lebanon.
EM pakiki@ndu.edu.lb; arosha.bandara@open.ac.uk; yijun.yu@open.ac.uk
RI Bandara, Arosha K./AAB-8229-2021
OI Bandara, Arosha K./0000-0001-8974-0555; Yu, Yijun/0000-0002-7154-8570
FU Computing and Communications Department at The Open University; ERC
   [291652]; European Research Council (ERC) [291652] Funding Source:
   European Research Council (ERC)
FX This research was funded by the Computing and Communications Department
   at The Open University and ERC Advanced Grant 291652. We would like to
   thank Wenji Tong from Shanghai Banff Technology Ltd and all the
   participants of our study for their valuable feedback.
CR Abrahao S, 2008, HUM-COMPUT INT-SPRIN, P3, DOI 10.1007/978-1-84628-941-5_1
   Abrams M, 1999, COMPUT NETW, V31, P1695, DOI 10.1016/S1389-1286(99)00044-4
   Akiki Pierre A., 2012, Proceedings of the 14th International Conference on Enterprise Information Systems (ICEIS 2012), P72
   Akiki P.A., 2013, Proceedings of the 5th ACM SIGCHI symposium on Engineering interactive computing systems, P3
   Akiki PA, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P712, DOI 10.1145/2568225.2568230
   Akiki PA, 2014, ACM COMPUT SURV, V47, DOI 10.1145/2597999
   [Anonymous], ADAPTIVE INTERFACES
   [Anonymous], ARTIFICIAL INTELLIGE
   [Anonymous], P 9 INT C INT US INT
   Aquino N., 2010, P 2010 ACM IEEE INT, P30
   Balme L, 2004, LECT NOTES COMPUT SC, V3295, P291
   BENCOMO N, 2008, SPLC, P23
   Benedek Joey., 2002, Proceedings of Usability Professionals Association, V2003, P57
   Blouin A, 2010, EICS 2010: PROCEEDINGS OF THE 2010 ACM SIGCHI SYMPOSIUM ON ENGINEERING INTERACTIVE COMPUTING SYSTEMS, P115
   Blouin Arnaud., 2011, Proceedings of the 3rd ACM SIGCHI symposium on Engineering interactive computing systems, EICS '11, P85, DOI DOI 10.1145/1996461.1996500
   Blumendorf M, 2010, EICS 2010: PROCEEDINGS OF THE 2010 ACM SIGCHI SYMPOSIUM ON ENGINEERING INTERACTIVE COMPUTING SYSTEMS, P9
   Botterweck G, 2011, STUD COMPUT INTELL, V340, P27
   Brdiczka O, 2007, LECT NOTES COMPUT SC, V4555, P23
   Brooke J., 1996, USABILITY EVALUATION, P189, DOI DOI 10.1201/9781498710411-35
   Calvary G, 2005, LECT NOTES COMPUT SC, V3425, P306
   Calvary G, 2003, INTERACT COMPUT, V15, P289, DOI 10.1016/S0953-5438(03)00010-9
   CARROLL JM, 1984, COMMUN ACM, V27, P800, DOI 10.1145/358198.358218
   Chu HH, 2004, J SYST SOFTWARE, V69, P209, DOI 10.1016/S0164-1212(03)00052-9
   Clerckx T, 2005, LECT NOTES COMPUT SC, V3425, P77
   Coninx K, 2003, LECT NOTES COMPUT SC, V2795, P256
   Coutaz J, 2007, LECT NOTES COMPUT SC, V4385, P1
   Coutaz J, 2010, EICS 2010: PROCEEDINGS OF THE 2010 ACM SIGCHI SYMPOSIUM ON ENGINEERING INTERACTIVE COMPUTING SYSTEMS, P1
   Demeure A, 2008, LECT NOTES COMPUT SC, V5136, P225, DOI 10.1007/978-3-540-70569-7_21
   Duarte C., 2006, 2006 International Conference on Intelligent User Interfaces, P132, DOI 10.1145/1111449.1111481
   Ferraiolo D. F., 2001, ACM Transactions on Information and Systems Security, V4, P224, DOI 10.1145/501978.501980
   FEUERSTACK S, 2006, LECT NOTES INFORM, P131
   Feuerstack S., 2008, P WORK C ADV VIS INT, P217, DOI [10.1145/1385569.1385605, DOI 10.1145/1385569.1385605]
   Findlater L, 2007, LECT NOTES COMPUT SC, V4662, P592
   Frey Alfonso Garcia, 2012, P 4 ACM SIGCHI S ENG, P263
   Gajos K., 2006, P AVI 06, P201
   Gajos Krzysztof, 2005, P 18 ANN ACM S USER, P173, DOI 10.1145/1095034.1095063
   García A, 2010, EICS 2010: PROCEEDINGS OF THE 2010 ACM SIGCHI SYMPOSIUM ON ENGINEERING INTERACTIVE COMPUTING SYSTEMS, P41
   Genaro Motti V, 2013, P 31 ACM INT C DES C, P55
   ISO, 2008, ISO 9241: Ergonomic Requirements for Office Work with Visual Display Terminals (VDTs)
   Kramer J, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P259, DOI 10.1109/FOSE.2007.19
   Lavie T, 2010, INT J HUM-COMPUT ST, V68, P508, DOI 10.1016/j.ijhcs.2010.01.004
   Lehmann Grzegorz, 2010, 2010 8th IEEE International Conference on Pervasive Computing and Communications Workshops (PERCOM Workshops), P636, DOI 10.1109/PERCOMW.2010.5470513
   Lepreux S, 2007, LECT NOTES COMPUT SC, V4323, P157
   Limbourg Q, 2004, ENGINEERING ADVANCED WEB APPLICATIONS, P325
   Lin J, 2008, CHI 2008: 26TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS VOLS 1 AND 2, CONFERENCE PROCEEDINGS, P1313
   Lopez-Jaquero V., 2009, Proc. of the 14th int. conf. on Intelligent user interfaces, P383
   McGrenere Joanna., 2002, CHI 02, P164, DOI DOI 10.1145/503376.503406
   Meskens J., 2008, WORK C ADV VIS INT, DOI DOI 10.1145/1385569.1385607
   Michotte B, 2008, FOURTH INTERNATIONAL CONFERENCE ON AUTONOMIC AND AUTONOMOUS SYSTEMS (ICAS 2008), P15, DOI 10.1109/ICAS.2008.29
   Miller C., 2005, P HUMAN FACTORS ERGO, V49, P15, DOI 10.1177/154193120504900105
   Molina AI, 2012, ADV ENG SOFTW, V52, P10, DOI 10.1016/j.advengsoft.2012.06.002
   Montero F, 2007, COMPUTER-AIDED DESIGN OF USER INTERFACES V, P245, DOI 10.1007/978-1-4020-5820-2_20
   Montero F, 2006, LECT NOTES COMPUT SC, V3941, P161
   Mori G, 2002, IEEE T SOFTWARE ENG, V28, P797, DOI 10.1109/TSE.2002.1027801
   Myers B., 2000, ACM Transactions on Computer-Human Interaction, V7, P3, DOI 10.1145/344949.344959
   Olsen DR, 2007, UIST 2007: PROCEEDINGS OF THE 20TH ANNUAL ACM SYMPOSIUM ON USER INTERFACE SOFTWARE AND TECHNOLOGY, P251
   Oreizy P, 1999, IEEE INTELL SYST APP, V14, P54, DOI 10.1109/5254.769885
   Patern'o F., 1999, Model-based design and evaluation of interactive applications
   Paterno F, 1997, HUMAN-COMPUTER INTERACTION - INTERACT '97, P362
   Paterno F, 2009, ACM T COMPUT-HUM INT, V16, DOI 10.1145/1614390.1614394
   Pazzani M. J., 2007, The Adaptive Web. Methods and Strategies of Web Personalization, P325
   Peissner D., 2012, 4 ACM SIGCHI S ENG I, P81
   Preece J, 2015, INTERACTION DESIGN H, P486
   Rosman Benjamin., 2014, P 19 INT C INTELLIGE, P273, DOI DOI 10.1145/2557500.2557535
   Rossi G., 2001, P 10 INT C WORLD WID, P275
   Schwartze V, 2009, LECT NOTES COMPUT SC, V5620, P305, DOI 10.1007/978-3-642-02809-0_33
   Shneiderman B., 2002, SIGCAPH Newsletter, V73-74, P1, DOI 10.1145/960201.957206
   Topi H., 2005, ICEIS, P128
   Vanderdonckt J, 2008, P ANN ROM C HUM COMP, P1
   Viana W, 2008, J SYST SOFTWARE, V81, P382, DOI 10.1016/j.jss.2007.04.045
   VIRZI RA, 1992, HUM FACTORS, V34, P457, DOI 10.1177/001872089203400407
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
NR 83
TC 30
Z9 31
U1 0
U2 20
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD DEC 1
PY 2016
VL 42
IS 12
BP 1118
EP 1147
DI 10.1109/TSE.2016.2553035
PG 30
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA EF9TG
UT WOS:000390672800002
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Riehle, D
   Capraro, M
   Kips, D
   Horn, L
AF Riehle, Dirk
   Capraro, Maximilian
   Kips, Detlef
   Horn, Lars
TI Inner Source in Platform-Based Product Engineering
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Inner source; product line engineering; product families; platform-based
   product engineering; open source; open collaboration; case study
   research
ID OPEN SOURCE SOFTWARE; CHALLENGES
AB Inner source is an approach to collaboration across intra-organizational boundaries for the creation of shared reusable assets. Prior project reports on inner source suggest improved code reuse and better knowledge sharing. Using a multiple-case case study research approach, we analyze the problems that three major software development organizations were facing in their product line engineering efforts. We find that a root cause, the separation of product units as profit centers from a platform organization as a cost center, leads to delayed deliveries, increased defect rates, and redundant software components. All three organizations assume that inner source can help solve these problems. The article analyzes the expectations that these companies were having towards inner source and the problems they were experiencing in its adoption. Finally, the article presents our conclusions on how these organizations should adapt their existing engineering efforts.
C1 [Riehle, Dirk; Capraro, Maximilian] Friedrich Alexander Univ Erlangen Nurnberg, Dept Comp Sci, D-91058 Erlangen, Germany.
   [Kips, Detlef] Develop Grp, D-91058 Erlangen, Germany.
   [Horn, Lars] E Solut, D-91058 Erlangen, Germany.
C3 University of Erlangen Nuremberg
RP Riehle, D (corresponding author), Friedrich Alexander Univ Erlangen Nurnberg, Dept Comp Sci, D-91058 Erlangen, Germany.
EM dirk.riehle@fau.de; maximilian.capraro@fau.de; kips@develop-group.de;
   lars.horn@esolutions.de
RI Riehle, Dirk/X-8137-2019
OI Riehle, Dirk/0000-0002-8139-5600
CR Altintas NI, 2008, LECT NOTES COMPUT SC, V5030, P166, DOI 10.1007/978-3-540-68073-4_15
   [Anonymous], 2014, BASICS QUALITATIVE R
   [Anonymous], CMUSEI2002TR006
   [Anonymous], LECT NOTES COMPUTER
   [Anonymous], OPEN SOURCE TECHNOLO
   [Anonymous], 2012, How Google Tests Software
   [Anonymous], 2007, SOFTWARE PRODUCT LIN
   [Anonymous], 2000, Generative programming: methods, tools, and applications
   Atkinson Colin., 2002, COMPONENT BASED PROD
   Batory D, 2002, ACM T SOFTW ENG METH, V11, P191, DOI 10.1145/505145.505147
   Bayer J., 1999, SSR'99. Proceedings of the Fifth Symposium on Software Reusability. Bridging the Gap Between Research and Practice, P122, DOI 10.1145/303008.303063
   Berger T, 2014, LECT NOTES COMPUT SC, V8767, P302, DOI 10.1007/978-3-319-11653-2_19
   Berger T, 2014, INFORM SOFTWARE TECH, V56, P1520, DOI 10.1016/j.infsof.2014.05.005
   Bosch J., 2006, LECT NOTES COMPUTER, V4, P4034
   Bosch J., 2000, Design and Use of Software Architectures: Adopting and Evolving a Product-Line Approach
   Bosch J, 2010, J SYST SOFTWARE, V83, P67, DOI 10.1016/j.jss.2009.06.051
   Bosch J, 2006, COMMUN ACM, V49, P41, DOI 10.1145/1183236.1183263
   BOURGEOIS LJ, 1988, MANAGE SCI, V34, P816, DOI 10.1287/mnsc.34.7.816
   Bühne S, 2005, 13TH IEEE INTERNATIONAL CONFERENCE ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P41, DOI 10.1109/RE.2005.45
   Capra E, 2008, INT FED INFO PROC, V275, P1
   Cavaye ALM, 1996, INFORM SYST J, V6, P227, DOI 10.1111/j.1365-2575.1996.tb00015.x
   Charmaz K., 2014, Introducing Qualitative Methods
   CHASTEK G, 2004, CMUSEI2004TN012
   Clements P., 2002, Software product lines
   Crowston K, 2012, ACM COMPUT SURV, V44, DOI 10.1145/2089125.2089127
   Czarnecki Krzysztof., 2005, Software Process: Improvement and Practice, P2005
   Darke P, 1998, INFORM SYST J, V8, P273, DOI 10.1046/j.1365-2575.1998.00040.x
   Deelstra S, 2005, J SYST SOFTWARE, V74, P173, DOI 10.1016/j.jss.2003.11.012
   Dhungana D, 2010, J SYST SOFTWARE, V83, P1108, DOI 10.1016/j.jss.2010.02.018
   Dinkelacker J, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P177, DOI 10.1109/ICSE.2002.1007966
   Easterbrook S., 2008, GUIDE ADV EMPIRICAL, P285, DOI [DOI 10.1007/978-1-84800-044-5_11, DOI 10.1007/978-1-84800-044-511]
   Eisenhardt KM, 2007, ACAD MANAGE J, V50, P25, DOI 10.5465/AMJ.2007.24160888
   EISENHARDT KM, 1989, ACAD MANAGE REV, V14, P532, DOI 10.2307/258557
   Fogel Karl, 2005, Producing Open Source Software: How to Run a Successful Free Software Project, V1st
   Gaughan G, 2009, 2009 35TH EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS, PROCEEDINGS, P20, DOI 10.1109/SEAA.2009.86
   GLASER BG, 1965, SOC PROBL, V12, P436, DOI 10.1525/sp.1965.12.4.03a00070
   Guba E. G., 1989, 4 GENERATION EVALUAT
   Guest G, 2006, FIELD METHOD, V18, P59, DOI 10.1177/1525822X05279903
   Guion L. A., 2011, P INT C FDN COMP SCI
   Gurbani V. K., 2006, 28th International Conference on Software Engineering Proceedings, P472, DOI 10.1145/1134285.1134352
   Gurbani VK, 2010, COMMUN ACM, V53, P155, DOI 10.1145/1646353.1646392
   Ishikawa Kaoru., 1990, INTRO QUALITY CONTRO
   Jepsen HP, 2007, SPLC 2007: 11TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE, PROCEEDINGS, P203
   Keyani P., 2008, ALL NIGHT HACKATHON
   Lindman J., 2010, P EUR C INF SYST
   Lindman J, 2008, INT FED INFO PROC, V275, P381, DOI 10.1007/978-0-387-09684-1_36
   Lombard M, 2002, HUM COMMUN RES, V28, P587, DOI 10.1093/hcr/28.4.587
   Martin K, 2007, IEEE SOFTWARE, V24, P46, DOI 10.1109/MS.2007.5
   Melian C., 2002, TECHNICAL REPORT
   Melian C, 2008, INT FED INFO PROC, V275, P93, DOI 10.1007/978-0-387-09684-1_8
   Neus A, 2005, IBM SYST J, V44, P215, DOI 10.1147/sj.442.0215
   Passos L, 2013, P 7 INT WORKSH VAR M, P17, DOI [10.1145/2430502.2430526, DOI 10.1145/2430502.2430526]
   Pohl K., 2005, SOFTWARE PRODUCT LIN, V10
   Raymond Eric, 1999, KNOWLEDGE TECHNOLOGY, V12, P23, DOI DOI 10.1007/S12130-999-1026-0
   Riehle D., 2012, CS201205 FRIEDR AL U
   Riehle D, 2010, COMPUTER, V43, P86, DOI 10.1109/MC.2010.24
   Riehle D, 2009, IEEE SOFTWARE, V26, P52, DOI 10.1109/MS.2009.44
   Sanchez Ana B., 2014, P 8 INT WORKSH VAR M, P11
   Schmid K, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P593, DOI 10.1109/ICSE.2002.1008004
   Schwanninger C, 2009, LECT NOTES COMPUT SC, V5795, P685, DOI 10.1007/978-3-642-04425-0_55
   Sharma S, 2002, INFORM SYST J, V12, P7, DOI 10.1046/j.1365-2575.2002.00116.x
   She S., 2010, VaMoS, P45
   Sinnema M, 2007, INFORM SOFTWARE TECH, V49, P717, DOI 10.1016/j.infsof.2006.08.001
   Smith P, 2007, AGILE 2007, PROCEEDINGS, P156, DOI 10.1109/AGILE.2007.65
   Stol KJ, 2014, ACM T SOFTW ENG METH, V23, DOI 10.1145/2533685
   Stol KJ, 2011, INFORM SOFTWARE TECH, V53, P1319, DOI 10.1016/j.infsof.2011.06.007
   Torkar R, 2011, J ASSOC INF SYST, V12, P88
   van der Hinden F, 2009, IEEE SOFTWARE, V26, P77, DOI 10.1109/MS.2009.88
   van der Linden Frank, 2009, UPGRADE: The European Journal for the Informatics Professional, V10, P32
   van der Linden F., 2009, P 13 INT SOFTW PROD, P317
   Vitharana P, 2010, J MANAGE INFORM SYST, V27, P277, DOI 10.2753/MIS0742-1222270209
   Wesselius J, 2008, IEEE SOFTWARE, V25, P60, DOI 10.1109/MS.2008.79
NR 72
TC 16
Z9 16
U1 1
U2 4
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD DEC 1
PY 2016
VL 42
IS 12
BP 1162
EP 1177
DI 10.1109/TSE.2016.2554553
PG 16
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science; Engineering
GA EF9TG
UT WOS:000390672800004
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Liu, H
   Liu, QR
   Liu, Y
   Wang, ZD
AF Liu, Hui
   Liu, Qiurong
   Liu, Yang
   Wang, Zhouding
TI Identifying Renaming Opportunities by Expanding Conducted Rename
   Refactorings
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Software refactoring; rename; code smells; refactoring opportunity;
   identification
ID NAMES
AB To facilitate software refactoring, a number of approaches and tools have been proposed to suggest where refactorings should be conducted. However, identification of such refactoring opportunities is usually difficult because it often involves difficult semantic analysis and it is often influenced by many factors besides source code. For example, whether a software entity should be renamed depends on the meaning of its original name (natural language understanding), the semantics of the entity (source code semantics), experience and preference of developers, and culture of companies. As a result, it is difficult to identify renaming opportunities. To this end, in this paper we propose an approach to identify renaming opportunities by expanding conducted renamings. Once a rename refactoring is conducted manually or with tool support, the proposed approach recommends to rename closely related software entities whose names are similar to that of the renamed entity. The rationale is that if an engineer makes a mistake in naming a software entity it is likely for her to make the same mistake in naming similar and closely related software entities. The main advantage of the proposed approach is that it does not involve difficult semantic analysis of source code or complex natural language understanding. Another advantage of this approach is that it is less influenced by subjective factors, e.g., experience and preference of software engineers. The proposed approach has been evaluated on four open-source applications. Our evaluation results show that the proposed approach is accurate in recommending entities to be renamed (average precision 82 percent) and in recommending new names for such entities (average precision 93 percent). Evaluation results also suggest that a substantial percentage (varying from 20 to 23 percent) of rename refactorings are expansible.
C1 [Liu, Hui; Liu, Qiurong; Liu, Yang; Wang, Zhouding] Beijing Inst Technol, Sch Comp Sci & Technol, Beijing 100081, Peoples R China.
C3 Beijing Institute of Technology
RP Liu, H (corresponding author), Beijing Inst Technol, Sch Comp Sci & Technol, Beijing 100081, Peoples R China.
EM liuhui08@bit.edu.cn; liuqiurong@bit.edu.cn; liuyangzj@126.com;
   zhoudingw@163.com
FU National Natural Science Foundation of China [61272169, 61472034];
   Program for New Century Excellent Talents in University [NCET-13-0041];
   Beijing Higher Education Young Elite Teacher Project [YETP1183]
FX The authors would like to say thanks to the associate editor and the
   anonymous reviewers for their valuable suggestions. The work is funded
   by the National Natural Science Foundation of China (No. 61272169,
   61472034), Program for New Century Excellent Talents in University (No.
   NCET-13-0041), and Beijing Higher Education Young Elite Teacher Project
   (No. YETP1183).
CR Abebe SL, 2009, WORK CONF REVERSE EN, P95, DOI 10.1109/WCRE.2009.26
   [Anonymous], 2010, Proceedings of the International Conference on Software Maintenance (ICSM)
   Arnaoudova V, 2014, IEEE T SOFTWARE ENG, V40, P502, DOI 10.1109/TSE.2014.2312942
   BASILI VR, 1984, IEEE T SOFTWARE ENG, V10, P728, DOI 10.1109/TSE.1984.5010301
   Bavota G., 2014, P 29 IEEE ACM INT C
   Butler S., 2011, 2011 IEEE 27th International Conference on Software Maintenance, P93, DOI 10.1109/ICSM.2011.6080776
   Butler S, 2011, LECT NOTES COMPUT SC, V6813, P130, DOI 10.1007/978-3-642-22655-7_7
   Caprile B, 2000, PROC IEEE INT CONF S, P97, DOI 10.1109/ICSM.2000.883022
   De Lucia A, 2011, IEEE T SOFTWARE ENG, V37, P205, DOI 10.1109/TSE.2010.89
   Deissenboeck F, 2006, SOFTWARE QUAL J, V14, P261, DOI 10.1007/s11219-006-9219-1
   Dig D, 2006, LECT NOTES COMPUT SC, V4067, P404
   Ge X, 2012, PROC INT CONF SOFTW, P211, DOI 10.1109/ICSE.2012.6227192
   Godfrey MW, 2005, IEEE T SOFTWARE ENG, V31, P166, DOI 10.1109/TSE.2005.28
   Griswold W. G., 1993, ACM Transactions on Software Engineering and Methodology, V2, P228, DOI 10.1145/152388.152389
   Host EW, 2009, LECT NOTES COMPUT SC, V5653, P294, DOI 10.1007/978-3-642-03013-0_14
   Kawrykow D, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P351, DOI 10.1145/1985793.1985842
   Khomh F, 2011, J SYST SOFTWARE, V84, P559, DOI 10.1016/j.jss.2010.11.921
   Lawrie D., 2011, 2011 IEEE 27th International Conference on Software Maintenance, P113, DOI 10.1109/ICSM.2011.6080778
   Lawrie Dawn, 2010, Proceedings 17th Working Conference on Reverse Engineering (WCRE 2010), P3, DOI 10.1109/WCRE.2010.10
   Lawrie D, 2006, SIXTH IEEE INTERNATIONAL WORKSHOP ON SOURCE CODE ANALYSIS AND MANIPULATION, PROCEEDINGS, P139
   Lawrie D, 2006, INT C PROGRAM COMPRE, P3, DOI 10.1109/ICPC.2006.51
   Lawrie D, 2007, INNOV SYST SOFTW ENG, V3, P303, DOI 10.1007/s11334-007-0031-2
   Liu H, 2013, IEEE T SOFTWARE ENG, V39, P1112, DOI 10.1109/TSE.2013.4
   Maiga A., 2012, 2012 19th Working Conference on Reverse Engineering (WCRE), P466, DOI 10.1109/WCRE.2012.56
   Malpohl G, 2000, FIFTEENTH IEEE INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P73, DOI 10.1109/ASE.2000.873652
   Mealy E, 2006, 2006 AUSTRALIAN SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P331
   Mens T, 2005, J SOFTW MAINT EVOL-R, V17, P247, DOI 10.1002/smr.316
   Mens T, 2004, IEEE T SOFTWARE ENG, V30, P126, DOI 10.1109/TSE.2004.1265817
   Murphy GC, 2006, IEEE SOFTWARE, V23, P76, DOI 10.1109/MS.2006.105
   Opdyke W. F., 1992, Refactoring object-oriented frameworks
   Takang AA, 1996, J PROGRAM LANG, V4, P143
   Thies A., 2010, P 2 INT WORKSH REC S, P1, DOI [10.1145/1808920.1808921, DOI 10.1145/1808920.1808921]
   Tip F, 2003, ACM SIGPLAN NOTICES, V38, P13, DOI 10.1145/949343.949308
   Weissgerber P, 2006, IEEE INT CONF AUTOM, P231
   Xing ZC, 2006, WORK CONF REVERSE EN, P263
   Zhang M, 2011, J SOFTW MAINT EVOL-R, V23, P179, DOI 10.1002/smr.521
NR 36
TC 23
Z9 25
U1 0
U2 8
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD SEP
PY 2015
VL 41
IS 9
BP 887
EP 900
DI 10.1109/TSE.2015.2427831
PG 14
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA CR9TT
UT WOS:000361700500003
DA 2024-07-18
ER

PT J
AU Petke, J
   Cohen, MB
   Harman, M
   Yoo, S
AF Petke, Justyna
   Cohen, Myra B.
   Harman, Mark
   Yoo, Shin
TI Practical Combinatorial Interaction Testing: Empirical Findings on
   Efficiency and Early Fault Detection
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Combinatorial interaction testing; prioritisation; empirical studies;
   software testing
ID TEST SUITES; PRIORITIZATION
AB Combinatorial interaction testing (CIT) is important because it tests the interactions between the many features and parameters that make up the configuration space of software systems. Simulated Annealing (SA) and Greedy Algorithms have been widely used to find CIT test suites. From the literature, there is a widely-held belief that SA is slower, but produces more effective tests suites than Greedy and that SA cannot scale to higher strength coverage. We evaluated both algorithms on seven real-world subjects for the well-studied two-way up to the rarely-studied six-way interaction strengths. Our findings present evidence to challenge this current orthodoxy: real-world constraints allow SA to achieve higher strengths. Furthermore, there was no evidence that Greedy was less effective (in terms of time to fault revelation) compared to SA; the results for the greedy algorithm are actually slightly superior. However, the results are critically dependent on the approach adopted to constraint handling. Moreover, we have also evaluated a genetic algorithm for constrained CIT test suite generation. This is the first time strengths higher than 3 and constraint handling have been used to evaluate GA. Our results show that GA is competitive only for pairwise testing for subjects with a small number of constraints.
C1 [Petke, Justyna; Harman, Mark; Yoo, Shin] UCL, Dept Comp Sci, London, England.
   [Cohen, Myra B.] Univ Nebraska, Dept Comp Sci & Engn, Lincoln, NE USA.
C3 University of London; University College London; University of Nebraska
   System; University of Nebraska Lincoln
RP Petke, J (corresponding author), UCL, Dept Comp Sci, London, England.
EM j.petke@ucl.ac.uk; myra@cse.unl.edu; mark.harman@ucl.ac.uk;
   shin.yoo@ucl.ac.uk
RI Yoo, Shin/E-3247-2015
OI Yoo, Shin/0000-0002-0836-6993; Harman, Mark/0000-0002-5864-4488; Petke,
   Justyna/0000-0002-7833-6044
FU National Science Foundation [CCF-1161767, CCF-0747009]; Air Force Office
   of Scientific Research [FA9550-10-1-0406]; UK Engineering and Physical
   Sciences Research Council (EPSRC): DAASE: Dynamic Adaptive Automated
   Software Engineering; UK Engineering and Physical Sciences Research
   Council (EPSRC): GISMO: Genetic Improvement of Software for Multiple
   Objectives; UK Engineering and Physical Sciences Research Council
   (EPSRC): CREST: Centre for Research on Evolution, Search and Testing
   (Platform Grant); Division of Computing and Communication Foundations;
   Direct For Computer & Info Scie & Enginr [1161767] Funding Source:
   National Science Foundation; EPSRC [EP/J017515/1] Funding Source: UKRI
FX Myra Cohen is partly supported by the National Science Foundation,
   through awards CCF-1161767, CCF-0747009 and by the Air Force Office of
   Scientific Research through award FA9550-10-1-0406. Mark Harman is
   partly supported by the following grants from the UK Engineering and
   Physical Sciences Research Council (EPSRC): DAASE: Dynamic Adaptive
   Automated Software Engineering, GISMO: Genetic Improvement of Software
   for Multiple Objectives and CREST: Centre for Research on Evolution,
   Search and Testing (Platform Grant). The DAASE grant also partly
   supports Shin Yoo, and completely supports Justyna Petke. The authors
   would also like to acknowledge the Software-artifact Infrastructure
   Repository (SIR) [20] which provided the source code and fault data for
   the seven programs used in the empirical studies reported. The authors
   would like to thank Tatsuhiro Tsu-chiya for the GA tool used in this
   study and Wayne Motycka for advice on SIR. J. Petke is the corresponding
   author.
CR Bryce R.C., 2007, WORKSHOP DOMAIN SPEC, P1
   Bryce RC., 2005, A MOST 05 P 1 INT WO, P1
   Bryce RC, 2006, INFORM SOFTWARE TECH, V48, P960, DOI 10.1016/j.infsof.2006.03.004
   Bryce RC, 2011, INT J SYST ASSUR ENG, V2, P126, DOI 10.1007/s13198-011-0067-4
   Bryce RC, 2011, IEEE T SOFTWARE ENG, V37, P48, DOI 10.1109/TSE.2010.12
   Cohen DM, 1997, IEEE T SOFTWARE ENG, V23, P437, DOI 10.1109/32.605761
   Cohen M.B., 2007, P 2007 INT S SOFTW T, P129
   Cohen MB, 2003, PROC INT CONF SOFTW, P38, DOI 10.1109/ICSE.2003.1201186
   Cohen MB, 2003, 27TH ANNUAL INTERNATIONAL COMPUTER SOFTWARE AND APPLICATIONS CONFERENCE, PROCEEDINGS, P413
   Cohen MB, 2008, IEEE T SOFTWARE ENG, V34, P633, DOI 10.1109/TSE.2008.50
   Do HS, 2005, EMPIR SOFTW ENG, V10, P405, DOI 10.1007/s10664-005-3861-2
   DUECK G, 1993, J COMPUT PHYS, V104, P86, DOI 10.1006/jcph.1993.1010
   Elbaum S., 2000, Software Engineering Notes, V25, P102, DOI 10.1145/347636.348910
   Fouché S, 2009, ISSTA 2009: INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P177
   Garvin BJ, 2011, EMPIR SOFTW ENG, V16, P61, DOI 10.1007/s10664-010-9135-7
   Grindal M., 2006, TR06001 U SKOVD
   Hnich B, 2006, CONSTRAINTS, V11, P199, DOI 10.1007/s10601-006-7094-9
   Khalsa SK, 2014, PROC INT SYMP SOFTW, P323, DOI 10.1109/ISSRE.2014.15
   Kuhn DR, 2006, 30TH ANNUAL IEEE/NASA SOFTWARE ENGINEERING WORKSHOP, PROCEEDINGS, P153
   Kuhn DR, 2004, IEEE T SOFTWARE ENG, V30, P418, DOI 10.1109/TSE.2004.24
   Kuhn R, 2008, CROSSTALK J DEFENSE, V21, P22
   Lei Y, 2008, SOFTW TEST VERIF REL, V18, P125, DOI 10.1002/stvr.381
   Liu WL, 2007, INT C COMP AID DES C, P252
   Manchester S., 2013, J COMBINATORIAL MATH, V86, P51
   Nanba T, 2012, IEICE T FUND ELECTR, VE95A, P1501, DOI 10.1587/transfun.E95.A.1501
   Nie CH, 2011, ACM COMPUT SURV, V43, DOI 10.1145/1883612.1883618
   OSTRAND TJ, 1988, COMMUN ACM, V31, P676, DOI 10.1145/62959.62964
   Petke Justyna, 2013, P ESEC FSE 2013, DOI [DOI 10.1145/2491411.2491436, 10.1145/2491411.2491436]
   Qu X., 2008, P 2008 INT S SOFTW T, P75
   Qu X, 2013, IEEE ICST WORKSHOP, P285, DOI 10.1109/ICSTW.2013.40
   Sampath Sreedevi, 2008, 2008 First IEEE International Conference on Software Testing, Verification and Validation (ICST '08), P141, DOI 10.1109/ICST.2008.42
   Schroeder PJ, 2004, 2004 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P49
   Shi L, 2005, LECT NOTES COMPUT SC, V3516, P1088
   Shiba T., 2004, Proceedings of the 28th Annual International Computer Software and Applications Conference. COMPSAC 2004, P72, DOI 10.1109/CMPSAC.2004.1342808
   STARDOM J, 2001, THESIS S FRASER U BU
   Yilmaz C, 2006, IEEE T SOFTWARE ENG, V32, P20, DOI 10.1109/TSE.2006.8
   Yoo S, 2012, SOFTW TEST VERIF REL, V22, P67, DOI [10.1002/stv.430, 10.1002/stvr.430]
NR 37
TC 71
Z9 72
U1 1
U2 8
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD SEP
PY 2015
VL 41
IS 9
BP 901
EP 924
DI 10.1109/TSE.2015.2421279
PG 24
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA CR9TT
UT WOS:000361700500004
OA Green Submitted, hybrid
DA 2024-07-18
ER

PT J
AU Muslu, K
   Brun, Y
   Ernst, MD
   Notkin, D
AF Muslu, Kivanc
   Brun, Yuriy
   Ernst, Michael D.
   Notkin, David
TI Reducing Feedback Delay of Software Development Tools via Continuous
   Analysis
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Continuous analysis; Codebase Replication; Solstice
AB During software development, the sooner a developer learns how code changes affect program analysis results, the more helpful that analysis is. Manually invoking an analysis may interrupt the developer's workflow or cause a delay before the developer learns the implications of the change. A better approach is continuous analysis tools that always provide up-to-date results. We present Codebase Replication, a technique that eases the implementation of continuous analysis tools by converting an existing offline analysis into an IDE-integrated, continuous tool with two desirable properties: isolation and currency. Codebase Replication creates and keeps in sync a copy of the developer's codebase. The analysis runs on the copy codebase without disturbing the developer and without being disturbed by the developer's changes. We developed Solstice, an open-source, publicly-available Eclipse plug-in that implements Codebase Replication. Solstice has less than 2.5 milliseconds overhead for most common developer actions. We used Solstice to implement four Eclipse-integrated continuous analysis tools based on the offline versions of FindBugs, PMD, data race detection, and unit testing. Each conversion required on average 710 LoC and 20 hours of implementation effort. Case studies indicate that Solstice-based continuous analysis tools are intuitive and easy-to-use.
C1 [Muslu, Kivanc; Ernst, Michael D.; Notkin, David] Univ Washington, Dept Comp Sci & Engn, Seattle, WA 98195 USA.
   [Brun, Yuriy] Univ Massachusetts, Sch Comp Sci, Amherst, MA 01003 USA.
C3 University of Washington; University of Washington Seattle; University
   of Massachusetts System; University of Massachusetts Amherst
RP Muslu, K (corresponding author), Univ Washington, Dept Comp Sci & Engn, Seattle, WA 98195 USA.
EM kivanc@cs.washington.edu; brun@cs.umass.edu; mernst@cs.washington.edu;
   notkin@cs.washington.edu
OI Brun, Yuriy/0000-0003-3027-7986
FU US National Science Foundation (NSF) [CCF-0963757, CCF-1016701,
   CCF-1446683]; Direct For Computer & Info Scie & Enginr; Division of
   Computing and Communication Foundations [1446683] Funding Source:
   National Science Foundation; Direct For Computer & Info Scie & Enginr;
   Division of Computing and Communication Foundations [1646813] Funding
   Source: National Science Foundation
FX This work was funded by the US National Science Foundation (NSF) grants
   CCF-0963757, CCF-1016701, and CCF-1446683. Luke Swart worked on the
   marker visualization that was used in the case study. Ezgi Mercan worked
   on an early stage of the Solstice prototype implementation. The authors
   thank Deepak Azad, Daniel Megert, and Stephan Herrmann for their help
   with the Eclipse internals throughout Solstice development.
CR [Anonymous], 2014, ECLIPSE METRICS PLUG
   [Anonymous], 2014, EXTENDED ASM BYTE CO
   [Anonymous], 2014, CONTINUOUS TESTING V
   [Anonymous], 2014, ECLIPSE CHECKSTYLE I
   [Anonymous], 2015, HIBERNATE SYNCHRONIZ
   [Anonymous], 2014, ECLIPSE PLUG IN SUPP
   [Anonymous], 2014, SMART SAVE PLUG IN
   [Anonymous], 2014, CROSSWORD SAGE
   [Anonymous], 2015, CONTINUOUS ANAL
   [Anonymous], 2015, ECLIPSE PLUG IN SUPP
   [Anonymous], 2015, ANSPROLOG PROGRAMMIN
   [Anonymous], 2014, ECLIPSE PROJECT BUIL
   [Anonymous], 2010, Proceedings of the FSE/SDP Workshop on Future of Software Engineering Research FOSER
   [Anonymous], 2014, EVHDL ECLIPSE PLUG I
   [Anonymous], 2014, CHECK SYNCHRONIZATIO
   [Anonymous], 2015, EMBEDDED CAL
   [Anonymous], 2014, OCAIDE OCAML PLUG IN
   [Anonymous], 2014, LUSTRE PLUG IN ECLIP
   [Anonymous], 2015, JSON SCHEMA VALIDATI
   Boehm BW., 1981, Software Engineering Economics
   Boekhoudt C., 2003, QUEUE, V1, P74
   Brandt J, 2010, CHI2010: PROCEEDINGS OF THE 28TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, VOLS 1-4, P513
   Brun Y., 2010, P FSE SDP WORKSH FUT, P59
   Brun Y, 2013, IEEE T SOFTWARE ENG, V39, P1358, DOI 10.1109/TSE.2013.28
   Brun Yuriy., 2011, Proceedings of the 19th ACM SIGSOFT Symposium and the 13th European Conference on Foundations of Software Engineering, ESEC/FSE '11, P444, DOI 10.1145/2025113.2025187
   Burnett MM, 1998, 1998 IEEE SYMPOSIUM ON VISUAL LANGUAGES, PROCEEDINGS, P126, DOI 10.1109/VL.1998.706155
   Eclipse, 2014, THE JOBS API
   Eclipse, 2014, JDT COR COMP
   Eclipse, 2015, DO I US MOD REC
   Eclipse, 2014, JAV COMP ERR WARN PR
   Eclipse API, 2014, IDOCUMENTLISTENER
   Eclipse API, 2014, IRESOURCECHANGELISTE
   Foster SR, 2012, PROC INT CONF SOFTW, P222, DOI 10.1109/ICSE.2012.6227191
   Glasser D. S., 2007, THESIS MIT BOSTON MA
   Guimaraes ML, 2012, PROC INT CONF SOFTW, P342, DOI 10.1109/ICSE.2012.6227180
   Henderson P., 1985, Proceedings of the 8th International Conference on Software Engineering (Cat. No.85CH2139-4), P68
   Hindle A, 2012, PROC INT CONF SOFTW, P837, DOI 10.1109/ICSE.2012.6227135
   Hovemeyer David., 2004, ACM Conference on Object-Oriented Programming Systems, Lan-guages, and Applications, OOPSLA '04, P132
   KARINTHI RR, 1987, SIGPLAN NOTICES, V22, P38, DOI 10.1145/960114.29654
   Katzan H., 1969, SPRING JOINT COMPUTE, P47
   Mu K., 2013, ESEC FSE NEW IDEAS T, P631, DOI DOI 10.1145/2491411.2494580
   Muslu K, 2012, ACM SIGPLAN NOTICES, V47, P669, DOI 10.1145/2398857.2384665
   Muslu Kivanc, 2013, ESEC FSE, P323, DOI [10.1145/2491411.2491460, DOI 10.1145/2491411.2491460]
   Person Suzette, 2008, P 16 INT S FDN SOFTW, P226, DOI [DOI 10.1145/1453101.1453131, 10.1145/1453101.1453131]
   Ramalingam G., 1993, Conference Record of the Twentieth Annual ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages, P502, DOI 10.1145/158511.158710
   Saff D, 2005, PROC INT CONF SOFTW, P668
   Saff D, 2003, ISSRE 2003: 14TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P281, DOI 10.1109/ISSRE.2003.1251050
   Saff D., 2004, Software Engineering Notes, V29, P76, DOI 10.1145/1013886.1007523
   Savage S, 1997, ACM T COMPUT SYST, V15, P391, DOI 10.1145/269005.266641
   Shankar A, 2007, ACM SIGPLAN NOTICES, V42, P310, DOI 10.1145/1273442.1250770
   Wilcox Eric, 1997, P CHI 1997 ATL GEORG, P258, DOI DOI 10.1145/258549.258721
NR 51
TC 5
Z9 5
U1 0
U2 4
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD AUG
PY 2015
VL 41
IS 8
BP 745
EP 763
DI 10.1109/TSE.2015.2417161
PG 19
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA CP0KI
UT WOS:000359563800002
OA hybrid
DA 2024-07-18
ER

PT J
AU Chaikalis, T
   Chatzigeorgiou, A
AF Chaikalis, Theodore
   Chatzigeorgiou, Alexander
TI Forecasting Java Software Evolution Trends Employing Network Models
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Graphs and networks; restructuring; reverse engineering; and
   reengineering; software architectures; object-oriented design methods
ID POWER-LAWS
AB The evolution of networks representing systems in various domains, including social networks, has been extensively studied enabling the development of growth models which govern their behavior over time. The architecture of software systems can also be naturally represented in the form of networks, whose properties change as software evolves. In this paper we attempt to model several aspects of graphs representing object-oriented software systems as they evolve over a number of versions. The goal is to develop a prediction model by considering global phenomena such as preferential attachment, past evolutionary trends such as the tendency of classes to create fewer relations as they age, as well as domain knowledge in terms of principles that have to be followed in object-oriented design. The derived models can provide insight into the future trends of software and potentially form the basis for eliciting improved or novel laws of software evolution. The forecasting power of the proposed model is evaluated against the actual evolution of 10 open-source projects and the achieved accuracy in the prediction of several network and software properties, which reflect the underlying system design, appears to be promising.
C1 [Chaikalis, Theodore; Chatzigeorgiou, Alexander] Univ Macedonia, Dept Appl Informat, Thessaloniki 54643, Greece.
C3 University of Macedonia
RP Chaikalis, T (corresponding author), Univ Macedonia, Dept Appl Informat, Thessaloniki 54643, Greece.
EM chaikalis@uom.gr; achat@uom.gr
RI Chatzigeorgiou, Alexandros/AAL-6077-2021
OI Chaikalis, Theodore/0000-0003-0501-3671
FU European Union (European Social Fund-ESF); Greek national funds through
   the Operational Program "Education and Lifelong Learning" of the
   National Strategic Reference Framework (NSRF)-Research Funding Program:
   Thalis-Athens University of Economics and Business-SOFTWARE ENGINEERING
   RESEARCH PLATFORM
FX This research has been cofinanced by the European Union (European Social
   Fund-ESF) and Greek national funds through the Operational Program
   "Education and Lifelong Learning" of the National Strategic Reference
   Framework (NSRF)-Research Funding Program: Thalis-Athens University of
   Economics and Business-SOFTWARE ENGINEERING RESEARCH PLATFORM. Theodore
   Chaikalis is the corresponding author.
CR [Anonymous], COCOMO 2 MOD DEF MAN
   [Anonymous], 2009, PROC IEEE INT CONF S
   [Anonymous], 2003, ALAN APT SERIES
   [Anonymous], ATUNES AUD PLAYER OR
   [Anonymous], ARXIVCONDMAT0307278
   [Anonymous], JEDIT PROGR TEXT ED
   [Anonymous], STAT BUSINESS DECISI
   [Anonymous], PREST DISTR SQL QUER
   [Anonymous], JDEODRANT QUAL MATT
   [Anonymous], 2008, SYST SOFTWARE, DOI DOI 10.1016/J.JSS.2007.12.793
   [Anonymous], 2006, CBMS REGIONAL C SERI
   [Anonymous], JETT SERVL ENG HTTP
   [Anonymous], JMOM OP SOURC JAV VI
   [Anonymous], 2022, Testing Statistical Hypotheses, DOI DOI 10.1007/978-3-030-70578-7
   [Anonymous], WEK DAT MIN SOFTW JA
   [Anonymous], 2007, DYNAM CONT DIS SER B
   [Anonymous], P 25 INT C ARCH COMP
   [Anonymous], 2007, PROMISE 07, DOI DOI 10.1109/PROMISE.2007.10
   [Anonymous], FREECOL COL AM
   [Anonymous], 2012, ARXIV12024805
   Antoniol G, 2001, PROC IEEE INT CONF S, P273, DOI 10.1109/ICSM.2001.972740
   Arisholm E., 2006, ISESE 06 P 2006 ACMI, P8
   Barabási AL, 1999, SCIENCE, V286, P509, DOI 10.1126/science.286.5439.509
   Basili VR, 1996, IEEE T SOFTWARE ENG, V22, P751, DOI 10.1109/32.544352
   Bevan Jennifer., 2005, ESECFSE 13, P177
   Bhattacharya P, 2012, PROC INT CONF SOFTW, P419, DOI 10.1109/ICSE.2012.6227173
   Chang CK, 2008, INFORM SOFTWARE TECH, V50, P1142, DOI 10.1016/j.infsof.2008.03.002
   Chung F, 2003, J COMPUT BIOL, V10, P677, DOI 10.1089/106652703322539024
   COLEMAN D, 1994, COMPUTER, V27, P44, DOI 10.1109/2.303623
   Concas G, 2007, IEEE T SOFTWARE ENG, V33, P687, DOI [10.1109/TSE.2007.1019, 10.1109/TSE.2007.1016]
   D'Ambros M, 2008, CSMR 2008: 12TH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, P3
   Devroye L., 1986, Non-Uniform Random Variate Generation
   Dijkstra EW., 1959, NUMER MATH, V1, P269, DOI [10.1007/BF01386390, DOI 10.1007/BF01386390]
   Easley D., 2010, Networks, Crowds, and Markets: Reasoning about a highly connected world, V8
   Faloutsos M, 1999, COMP COMM R, V29, P251, DOI 10.1145/316194.316229
   Fortuna MA, 2011, P NATL ACAD SCI USA, V108, P19985, DOI 10.1073/pnas.1115960108
   Genero M., 2001, Advanced Information Systems Engineering. 13th International Conference, CAiSE 2001. Proceedings (Lecture Notes in Computer Science Vol.2068), P388
   Ghezzi C., 2003, FUNDAMENTALS SOFTWAR
   Girba T, 2004, PROC IEEE INT CONF S, P40, DOI 10.1109/ICSM.2004.1357788
   Gîrba T, 2006, J SOFTW MAINT EVOL-R, V18, P207, DOI 10.1002/smr.325
   Godfrey MW, 2008, 2008 FRONTIERS OF SOFTWARE MAINTENANCE, P129, DOI 10.1109/FOSM.2008.4659256
   Hosseini SMH, 2013, PLOS ONE, V8, DOI 10.1371/journal.pone.0067354
   Jenkins S, 2007, INFORM SCIENCES, V177, P2587, DOI 10.1016/j.ins.2007.01.021
   Jiang T, 2013, IEEE INT CONF AUTOM, P279, DOI 10.1109/ASE.2013.6693087
   Jorgensen M, 2007, INT J FORECASTING, V23, P449, DOI 10.1016/j.ijforecast.2007.05.008
   Jun ES, 2001, EXPERT SYST APPL, V21, P1, DOI 10.1016/S0957-4174(01)00021-5
   Kagdi Huzefa, 2007, Proceedings of 22nd IEEE/ACM International Conference on Automated Software Engineering (ASE'07), P559
   Kim S, 2007, PROC INT CONF SOFTW, P489
   Kleinberg J., 2000, Proceedings of the Thirty Second Annual ACM Symposium on Theory of Computing, P163, DOI 10.1145/335305.335325
   Kontogiannis K. A., 1996, Automated Software Engineering, V3, P77, DOI 10.1007/BF00126960
   Kumar R, 2000, ANN IEEE SYMP FOUND, P57, DOI 10.1109/SFCS.2000.892065
   LEHMAN MM, 1980, P IEEE, V68, P1060, DOI 10.1109/PROC.1980.11805
   Leskovec J., 2008, P 14 ACM SIGKDD INT, P462, DOI DOI 10.1145/1401890.1401948
   Leskovec J., 2005, P 11 ACM SIGKDD INT, P177
   Li H, 2013, PHYSICA A, V392, P2025, DOI 10.1016/j.physa.2013.01.035
   Li JZ, 2007, EMPIR SOFTW ENG, V12, P65, DOI 10.1007/s10664-006-7552-4
   Li L, 2005, INTERNET MATH, V2, P431, DOI 10.1080/15427951.2005.10129111
   Li YF, 2009, J SYST SOFTWARE, V82, P241, DOI 10.1016/j.jss.2008.06.001
   LIEBERHERR KJ, 1989, IEEE SOFTWARE, V6, P38, DOI 10.1109/52.35588
   Louridas P, 2008, ACM T SOFTW ENG METH, V18, DOI 10.1145/1391984.1391986
   McDonald J.H., 2009, HDB BIOL STAT, V2
   Meneely A., 2008, P 16 ACM SIGSOFT INT, P13, DOI DOI 10.1145/1453101.1453106
   Mens T., 2008, Software evolution, P1, DOI [DOI 10.1007/978-3-540-76440-3, 10.1007/978-3-540-76440-3_1]
   Myers CR, 2003, PHYS REV E, V68, DOI 10.1103/PhysRevE.68.046116
   Nagappan N, 2005, PROC INT CONF SOFTW, P284, DOI 10.1145/1062455.1062514
   Nagappan N., 2006, 28th International Conference on Software Engineering Proceedings, P452, DOI 10.1145/1134285.1134349
   Nagwani Naresh Kumar, 2010, Proceedings of the 2010 International Conference on Recent Trends in Information, Telecommunication and Computing (ITC 2010), P13, DOI 10.1109/ITC.2010.56
   Paymal P., 2011, 2011 IEEE 27th International Conference on Software Maintenance, P532, DOI 10.1109/ICSM.2011.6080825
   Pendharkar PC, 2005, IEEE T SOFTWARE ENG, V31, P615, DOI 10.1109/TSE.2005.75
   Ping Yu, 2002, Proceedings of the Sixth European Conference on Software Maintenance and Reengineering, P99, DOI 10.1109/CSMR.2002.995794
   Pinzger Martin, 2008, P 16 ACM SIGSOFT INT, P2, DOI DOI 10.1145/1453101.1453105
   Potanin A, 2005, COMMUN ACM, V48, P99, DOI 10.1145/1060710.1060716
   Raja U, 2012, IEEE T SOFTWARE ENG, V38, P163, DOI 10.1109/TSE.2011.39
   Riel AJ., 1996, Object-Oriented Design Heuristics
   Shibata K, 2007, 13TH PACIFIC RIM INTERNATIONAL SYMPOSIUM ON DEPENDABLE COMPUTING, PROCEEDINGS, P35, DOI 10.1109/PRDC.2007.46
   Shiwen Sun, 2009, Proceedings of the 2009 Sixth International Conference on Fuzzy Systems and Knowledge Discovery (FSKD 2009), P309, DOI 10.1109/FSKD.2009.635
   Taube-Schock C, 2011, LECT NOTES COMPUT SC, V6813, P204, DOI 10.1007/978-3-642-22655-7_10
   Turnu I, 2013, INFORM SCIENCES, V245, P290, DOI 10.1016/j.ins.2013.05.014
   Turnu I, 2011, INFORM SCIENCES, V181, P883, DOI 10.1016/j.ins.2010.10.022
   van Koten C, 2006, INFORM SOFTWARE TECH, V48, P59, DOI 10.1016/j.infsof.2005.03.002
   Vasa R, 2007, PROC IEEE INT CONF S, P74
   Watts DJ, 1998, NATURE, V393, P440, DOI 10.1038/30918
   Wettel R, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P551, DOI 10.1145/1985793.1985868
   Wettel R, 2009, PROC INT CONF SOFTW, P391, DOI 10.1109/ICSE-COMPANION.2009.5071029
   Wheeldon R, 2003, THIRD IEEE INTERNATIONAL WORKSHOP ON SOURCE CODE ANALYSIS AND MANIPULATION - PROCEEDINGS, P45, DOI 10.1109/SCAM.2003.1238030
   Wilkie FG, 2000, J SYST SOFTWARE, V52, P157, DOI 10.1016/S0164-1212(99)00142-9
   Willinger W., 2009, Not. Am. Math. Soc., V56, P586
   Yazdi HS, 2014, LECT NOTES BUS INF P, V178, P1
   Ying ATT, 2004, IEEE T SOFTWARE ENG, V30, P574, DOI 10.1109/TSE.2004.52
   Zhang HY, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P1042, DOI 10.1109/ICSE.2013.6606654
   Zheng XL, 2008, PHYSICA A, V387, P6190, DOI 10.1016/j.physa.2008.06.050
   Zhou YM, 2007, J SYST SOFTWARE, V80, P1349, DOI 10.1016/j.jss.2006.10.049
   Zimmermann T, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P531, DOI 10.1145/1368088.1368161
NR 93
TC 21
Z9 24
U1 0
U2 12
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUN
PY 2015
VL 41
IS 6
BP 582
EP 602
DI 10.1109/TSE.2014.2381249
PG 21
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA CK3ZL
UT WOS:000356155700004
DA 2024-07-18
ER

PT J
AU Mirshokraie, S
   Mesbah, A
   Pattabiraman, K
AF Mirshokraie, Shabnam
   Mesbah, Ali
   Pattabiraman, Karthik
TI Guided Mutation Testing for JavaScript Web Applications
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Mutation testing; JavaScript; equivalent mutants; guided mutation
   generation; web applications
ID EQUIVALENT MUTANT PROBLEM
AB Mutation testing is an effective test adequacy assessment technique. However, there is a high computational cost in executing the test suite against a potentially large pool of generated mutants. Moreover, there is much effort involved in filtering out equivalent mutants. Prior work has mainly focused on detecting equivalent mutants after the mutation generation phase, which is computationally expensive and has limited efficiency. We propose an algorithm to select variables and branches for mutation as well as a metric, called Function Rank, to rank functions according to their relative importance from the application's behaviour point of view. We present a technique that leverages static and dynamic analysis to guide the mutation generation process towards parts of the code that are more likely to influence the program's output. Further, we focus on the JavaScript language, and propose a set of mutation operators that are specific to web applications. We implement our approach in a tool called MUTANDIS. The results of our empirical evaluation show that (1) more than 93 percent of generated mutants are non-equivalent, and (2) more than 75 percent of the surviving non-equivalent mutants are in the top 30 percent of the ranked functions.
C1 [Mirshokraie, Shabnam; Mesbah, Ali; Pattabiraman, Karthik] Univ British Columbia, Dept Elect & Comp Engn, 2332 Main Mall, Vancouver, BC V6T 1Z4, Canada.
C3 University of British Columbia
RP Mirshokraie, S (corresponding author), Univ British Columbia, Dept Elect & Comp Engn, 2332 Main Mall, Vancouver, BC V6T 1Z4, Canada.
EM shabnamm@ece.ubc.ca; amesbah@ece.ubc.ca; karthikp@ece.ubc.ca
RI Mesbah, Ali/C-3675-2013
OI Mesbah, Ali/0000-0002-8783-7967
FU National Science and Engineering Research Council of Canada (NSERC)
   through its Strategic Project Grants programme; Lockheed Martin; Intel
   Corporation
FX This work was supported by the National Science and Engineering Research
   Council of Canada (NSERC) through its Strategic Project Grants
   programme, Lockheed Martin, and Intel Corporation.
CR Adamopoulos K, 2004, LECT NOTES COMPUT SC, V3103, P1338
   Andrews JH, 2005, PROC INT CONF SOFTW, P402, DOI 10.1145/1062455.1062530
   [Anonymous], 2011, P 8 EUR SOFTW ENG C, DOI DOI 10.1145/2025113.2025144
   [Anonymous], 2010, STRING REPLACE JAVAS
   Artzi S, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P571, DOI 10.1145/1985793.1985871
   Ayari K, 2007, GECCO 2007: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOL 1 AND 2, P1074
   Barbosa EF, 2001, SOFTW TEST VERIF REL, V11, P113, DOI 10.1002/stvr.226
   Basili VR, 1996, IEEE T SOFTWARE ENG, V22, P751, DOI 10.1109/32.544352
   Bhattacharya P, 2012, PROC INT CONF SOFTW, P419, DOI 10.1109/ICSE.2012.6227173
   Bottaci Leonardo, 2010, Proceedings of the IEEE Third International Conference on Software Testing Verification and Validation - Workshops (ICSTW 2010), P126, DOI 10.1109/ICSTW.2010.56
   Brin S, 1998, COMPUT NETWORKS ISDN, V30, P107, DOI 10.1016/S0169-7552(98)00110-X
   BUDD TA, 1982, ACTA INFORM, V18, P31, DOI 10.1007/BF00625279
   Burgess A., 2011, 11 JAVASCRIPT MISTAK
   Changbin Ji, 2009, Proceedings 21st International Conference on Software Engineering & Knowledge Engineering (SEKE 2009), P422
   Crockford D., 2008, JAVASCRIPT GOOD PART
   Deng L, 2013, 2013 IEEE SIXTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST 2013), P84, DOI 10.1109/ICST.2013.20
   Domínguez-Jiménez JJ, 2011, INFORM SOFTWARE TECH, V53, P1108, DOI 10.1016/j.infsof.2011.03.008
   Fraser G, 2012, IEEE T SOFTWARE ENG, V38, P278, DOI 10.1109/TSE.2011.93
   Gligoric Milos., 2013, Proceedings of the 2013 International Symposium on Software Testing and Analysis. ISSTA 2013, P224, DOI DOI 10.1145/2483760.2483773
   Gurbani P., 2010, TOP 13 JAVASCRIPT MI
   Hierons R.M., 1999, J SOFTW TEST VERIFIC, V9, P233, DOI 10.1002/(SICI)1099-1689(199912)9:43.0.CO;2-3
   Ho T., 2011, PREMATURE INVOCATION
   Hsu J., 2010, JAVASCRIPT ANTIPATTE
   Jalbert K., 2012, 2012 Proceedings of the First International Workshop on Realizing Artificial Intelligence Synergies in Software Engineering (RAISE 2012), P42, DOI 10.1109/RAISE.2012.6227969
   Jia Y, 2008, EIGHTH IEEE INTERNATIONAL WORKING CONFERENCE ON SOURCE CODE ANALYSIS AND MANIPULATION, PROCEEDINGS, P249, DOI 10.1109/SCAM.2008.36
   Kintis M., 2012, 2012 IEEE Fifth International Conference on Software Testing, Verification and Validation (ICST 2012), P701, DOI 10.1109/ICST.2012.160
   Langdon WB, 2010, J SYST SOFTWARE, V83, P2416, DOI 10.1016/j.jss.2010.07.027
   Madeyski L, 2014, IEEE T SOFTWARE ENG, V40, P23, DOI 10.1109/TSE.2013.44
   McCabe T. J., 1976, IEEE Transactions on Software Engineering, VSE-2, P308, DOI 10.1109/TSE.1976.233837
   Mesbah A, 2012, ACM T WEB, V6, DOI 10.1145/2109205.2109208
   Mesbah A, 2012, IEEE T SOFTWARE ENG, V38, P35, DOI 10.1109/TSE.2011.28
   Mirshokraie Shabnam, 2012, Web Engineering. Proceedings 12th International Conference, ICWE 2012, P238, DOI 10.1007/978-3-642-31753-8_18
   Mirshokraie S, 2013, 2013 IEEE SIXTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST 2013), P74, DOI 10.1109/ICST.2013.23
   Nagappan N., 2006, 28th International Conference on Software Engineering Proceedings, P452, DOI 10.1145/1134285.1134349
   Namin AS, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P351, DOI 10.1145/1368088.1368136
   Ocariza FS, 2011, 22ND IEEE INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING (ISSRE), P100, DOI 10.1109/ISSRE.2011.28
   Offut A. J., 1997, Software Testing, Verification and Reliability, V7, P165, DOI 10.1002/(SICI)1099-1689(199709)7:3<165::AID-STVR143>3.0.CO;2-U
   Offutt AJ, 1996, COMPASS '96 - PROCEEDINGS OF THE ELEVENTH ANNUAL CONFERENCE ON COMPUTER ASSURANCE, P224, DOI 10.1109/CMPASS.1996.507890
   Osmani A., 2012, Learning JavaScript Design Patterns
   Porteneuve C., 2008, GETTING OUT BINDING
   Richards G, 2010, ACM SIGPLAN NOTICES, V45, P1, DOI 10.1145/1809028.1806598
   Roy B. L., 2005, 3 COMMON MISTAKES JA
   Schuler D, 2013, SOFTW TEST VERIF REL, V23, P353, DOI 10.1002/stvr.1473
   Schuler D, 2009, ISSTA 2009: INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P69
   Weyl E., 2010, 16 COMMON JAVASCRIPT
   WOODWARD MR, 1993, INFORM SOFTWARE TECH, V35, P163, DOI 10.1016/0950-5849(93)90053-6
   Yao XJ, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P919, DOI 10.1145/2568225.2568265
   Yue Jia, 2011, IEEE Transactions on Software Engineering, V37, P649, DOI 10.1109/TSE.2010.62
   Zhang L., 2013, P 2013 INT S SOFTW T, P235
   Zheng H, 2010, 2ND IEEE INTERNATIONAL CONFERENCE ON ADVANCED COMPUTER CONTROL (ICACC 2010), VOL. 2, P431, DOI 10.1109/ICACC.2010.5486640
NR 50
TC 41
Z9 48
U1 0
U2 13
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAY
PY 2015
VL 41
IS 5
BP 429
EP 444
DI 10.1109/TSE.2014.2371458
PG 16
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA CI1BN
UT WOS:000354475400001
DA 2024-07-18
ER

PT J
AU Casagrande, E
   Woldeamlak, S
   Woon, WL
   Zeineldin, HH
   Svetinovic, D
AF Casagrande, Erik
   Woldeamlak, Selamawit
   Woon, Wei Lee
   Zeineldin, H. H.
   Svetinovic, Davor
TI NLP-KAOS for Systems Goal Elicitation: Smart Metering System Case Study
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Requirements engineering; goal elicitation; NLP; data mining;
   bibliometrics
ID REQUIREMENTS; ONTOLOGY
AB This paper presents a computational method that employs Natural Language Processing (NLP) and text mining techniques to support requirements engineers in extracting and modeling goals from textual documents. We developed a NLP-based goal elicitation approach within the context of KAOS goal-oriented requirements engineering method. The hierarchical relationships among goals are inferred by automatically building taxonomies from extracted goals. We use smart metering system as a case study to investigate the proposed approach. Smart metering system is an important subsystem of the next generation of power systems (smart grids). Goals are extracted by semantically parsing the grammar of goal-related phrases in abstracts of research publications. The results of this case study show that the developed approach is an effective way to model goals for complex systems, and in particular, for the research-intensive complex systems.
C1 [Casagrande, Erik; Woldeamlak, Selamawit; Woon, Wei Lee; Zeineldin, H. H.; Svetinovic, Davor] Masdar Inst Sci & Technol, Dept Elect Engn & Comp Sci, Abu Dhabi, U Arab Emirates.
C3 Khalifa University of Science & Technology
RP Casagrande, E (corresponding author), Masdar Inst Sci & Technol, Dept Elect Engn & Comp Sci, Abu Dhabi, U Arab Emirates.
EM dsvetinovic@masdar.ac.ae
RI Svetinovic, Davor/AAQ-9433-2020; Svetinovic, Davor/IUQ-2141-2023
OI Svetinovic, Davor/0000-0002-3020-9556; Svetinovic,
   Davor/0000-0002-3020-9556; Woon, Wei Lee/0000-0002-6155-1741; Gifalli,
   Andre/0000-0001-8958-6746
CR [Anonymous], 1992, COLING 1992, DOI DOI 10.3115/992133.992154
   [Anonymous], 2003, Advances in Neural Information Processing Systems
   [Anonymous], 2004, AIS
   [Anonymous], 1968, Mathematical structures of language
   [Anonymous], 2013, RES DESIGN QUALITATI
   [Anonymous], COMPETITIVE INTELLIG
   Anton AI, 1998, PROC INT CONF SOFTW, P157, DOI 10.1109/ICSE.1998.671112
   Breitman KK, 2003, 11TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, PROCEEDINGS, P309
   Buitelaar P., 2005, Ontology learning from text: Methods, evaluation and applications, V123, P3
   Cunningham SW, 2006, TECHNOL FORECAST SOC, V73, P915, DOI 10.1016/j.techfore.2006.06.004
   Daim TU, 2006, TECHNOL FORECAST SOC, V73, P981, DOI 10.1016/j.techfore.2006.04.004
   DARDENNE A, 1993, SCI COMPUT PROGRAM, V20, P3, DOI 10.1016/0167-6423(93)90021-G
   Fürst F, 2006, LECT NOTES COMPUT SC, V4277, P38
   Gacitua R, 2011, REQUIR ENG, V16, P251, DOI 10.1007/s00766-011-0122-3
   Goldin L., 1997, Automated Software Engineering, V4, P375, DOI 10.1023/A:1008617922496
   GRUBER TR, 1993, KNOWL ACQUIS, V5, P199, DOI 10.1006/knac.1993.1008
   Happel H.J., 2006, P WORKSH SEM WORKSH, P5
   Henschel Andreas, 2009, 2009 International Conference on Innovations in Information Technology (IIT), P160, DOI 10.1109/IIT.2009.5413365
   Henschel A, 2012, BUSINESS INTELLIGENCE APPLICATIONS AND THE WEB: MODELS, SYSTEMS AND TECHNOLOGIES, P178, DOI 10.4018/978-1-61350-038-5.ch008
   Heydt GT, 2010, IEEE T SMART GRID, V1, P225, DOI 10.1109/TSG.2010.2080328
   Heymann P., 2006, ILPRINTS775 STANDF U
   Jureta IJ, 2008, INT REQUIR ENG CONF, P71, DOI 10.1109/RE.2008.13
   Kaiya H, 2006, RE'06: 14TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, PROCEEDINGS, P189
   Klein D, 2003, 41ST ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, PROCEEDINGS OF THE CONFERENCE, P423, DOI 10.3115/1075096.1075150
   Kof Leonid, 2004, P 19 INT C AUT SOFTW, P91
   Kostoff RN, 2006, TECHNOL FORECAST SOC, V73, P923, DOI 10.1016/j.techfore.2005.09.004
   LETIER E, 2001, THESIS U CATHOLIQUE
   Maedche A, 2001, IEEE INTELL SYST APP, V16, P72, DOI 10.1109/5254.920602
   Martino JP, 2003, TECHNOL FORECAST SOC, V70, P719, DOI 10.1016/S0040-1625(02)00375-X
   MILLER GA, 1995, COMMUN ACM, V38, P39, DOI 10.1145/219717.219748
   Navigli R, 2003, IEEE INTELL SYST, V18, P22, DOI 10.1109/MIS.2003.1179190
   Polacek G., 2009, P 7 ANN C SYST ENG R, P1
   Porter A.L., 2005, Tech mining: exploiting new technologies for competitive advantage
   Porter A, 2007, RES TECHNOL MANAGE, V50, P15, DOI 10.1080/08956308.2007.11657425
   Rusu D., 2007, Proceedings of the 10th International Multiconference Information Society-IS, P8
   Rusu D, 2009, INFORM-J COMPUT INFO, V33, P357
   Ryan K, 1993, P IEEE INT S REQ ENG, P240, DOI 10.1109/ISRE.1993.324852
   Sanderson M, 1999, SIGIR'99: PROCEEDINGS OF 22ND INTERNATIONAL CONFERENCE ON RESEARCH AND DEVELOPMENT IN INFORMATION RETRIEVAL, P206, DOI 10.1145/312624.312679
   Sawyer P, 2005, IEEE T SOFTWARE ENG, V31, P969, DOI 10.1109/TSE.2005.129
   Shih MJ, 2010, EXPERT SYST APPL, V37, P2882, DOI 10.1016/j.eswa.2009.09.001
   Suleiman H, 2013, REQUIR ENG, V18, P251, DOI 10.1007/s00766-012-0153-4
   Suleiman H, 2012, IEEE T SMART GRID, V3, P692, DOI 10.1109/TSG.2011.2176151
   Svetinovic D, 2013, SYSTEMS ENG, V16, P165, DOI 10.1002/sys.21231
   Tseng YH, 2007, INFORM PROCESS MANAG, V43, P1216, DOI 10.1016/j.ipm.2006.11.011
   van Lamsweerde A, 2003, LECT NOTES COMPUT SC, V2804, P25
   van Lamsweerde A, 2001, FIFTH IEEE INTERNATIONAL SYMPOSIUM ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P249
   van Lamsweerde A, 1998, IEEE T SOFTWARE ENG, V24, P1089, DOI 10.1109/32.738341
   van Lamsweerde A, 2000, IEEE T SOFTWARE ENG, V26, P978, DOI 10.1109/32.879820
   van Lamsweerde A, 1998, IEEE T SOFTWARE ENG, V24, P908, DOI 10.1109/32.730542
   van Lamsweerde A., 2009, REQUIREMENTS ENG SYS
   Woldeamlak S., 2013, THESIS MASDAR I SCI
   Wong W, 2012, ACM COMPUT SURV, V44, DOI 10.1145/2333112.2333115
   Zafar N, 2014, SYSTEMS ENG, V17, P77, DOI 10.1002/sys.21252
   Zhao YJ, 2009, IEEE T SERV COMPUT, V2, P303, DOI 10.1109/TSC.2009.20
   Zickert F., 2010, AMCIS, P1
   ?zsu, 2009, ENCY DATABASE SYSTEM, DOI [10.1007/978-0-387-39940-9_1314, DOI 10.1007/978-0-387-39940-9_1314]
NR 56
TC 26
Z9 29
U1 5
U2 24
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD OCT
PY 2014
VL 40
IS 10
BP 941
EP 956
DI 10.1109/TSE.2014.2339811
PG 16
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA AR9ML
UT WOS:000343899100001
DA 2024-07-18
ER

PT J
AU Androutsopoulos, K
   Clark, D
   Harman, M
   Hierons, RM
   Li, Z
   Tratt, L
AF Androutsopoulos, Kelly
   Clark, David
   Harman, Mark
   Hierons, Robert M.
   Li, Zheng
   Tratt, Laurence
TI Amorphous Slicing of Extended Finite State Machines
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Slicing; extended finite state machines
ID CONTROL DEPENDENCE; AUTOMATA; SIZE; NFAS
AB Slicing is useful for many software engineering applications and has been widely studied for three decades, but there has been comparatively little work on slicing extended finite state machines (EFSMs). This paper introduces a set of dependence-based EFSM slicing algorithms and an accompanying tool. We demonstrate that our algorithms are suitable for dependence-based slicing. We use our tool to conduct experiments on 10 EFSMs, including benchmarks and industrial EFSMs. Ours is the first empirical study of dependence-based program slicing for EFSMs. Compared to the only previously published dependence-based algorithm, our average slice is smaller 40 percent of the time and larger only 10 percent of the time, with an average slice size of 35 percent for termination insensitive slicing.
C1 [Androutsopoulos, Kelly; Clark, David; Harman, Mark] UCL, Dept Comp Sci, CREST, London WC1E 6BT, England.
   [Hierons, Robert M.] Brunel Univ, Uxbridge UB8 3PH, Middx, England.
   [Li, Zheng] Beijing Univ Chem Technol, Beijing 100029, Peoples R China.
   [Tratt, Laurence] Kings Coll London, London WC2R 2LS, England.
C3 University of London; University College London; Brunel University;
   Beijing University of Chemical Technology; University of London; King's
   College London
RP Androutsopoulos, K (corresponding author), UCL, Dept Comp Sci, CREST, Gower St, London WC1E 6BT, England.
EM k.androutsopoulos@cs.ucl.ac.uk; d.clark@cs.ucl.ac.uk;
   m.harman@cs.ucl.ac.uk; rob.hierons@brunel.ac.uk; z.li@ieee.org;
   laurie@tratt.net
RI Tratt, Laurence/A-8594-2013; Li, Zheng/L-8594-2015
OI Tratt, Laurence/0000-0002-5258-3805; Hierons,
   Robert/0000-0002-4771-1446; Clark, David/0000-0002-7004-934X; Harman,
   Mark/0000-0002-5864-4488; Li, Zheng/0000-0002-3938-7033
FU EPSRC [EP/F059442/1]; National Natural Science Foundation of China
   [60903002, 61170082]
FX This research work was supported in part by EPSRC Grant EP/F059442/1 and
   the National Natural Science Foundation of China under Grant Nos.
   60903002 and 61170082. Zheng Lis is the corresponding author for this
   paper.
CR AGRAWAL H, 1994, SIGPLAN NOTICES, V29, P302, DOI 10.1145/773473.178456
   Albert M.H., 2004, OUCS200411 U OT
   Androutsopoulos K., 2009, P 25 IEEE INT C SOFT
   Androutsopoulos K., ACM COMPUTI IN PRESS
   Androutsopoulos K, 2009, LECT NOTES COMPUT SC, V5503, P216
   [Anonymous], 1969, Formal Languages and Their Relation to Automata
   [Anonymous], 1971, Theory of Machines and Computations, DOI DOI 10.1016/B978-0-12-417750-5.50022-1
   [Anonymous], [No title captured]
   [Anonymous], P 5 ACM SIGSOFT S FD
   Au PK, 1997, FEATURE INTERACTIONS IN TELECOMMUNICATION NETWORKS IV, P153
   Ball T., 1992, P 1 C AUT ALG DEB DE
   Bertolino A, 2008, LECT NOTES COMPUT SC, V5047, P266, DOI 10.1007/978-3-540-68524-1_19
   Binkley D, 2004, ADV COMPUT, V62, P105, DOI 10.1016/S0065-2458(03)62003-6
   Binkley D, 2003, PROC INT CONF SOFTW, P330, DOI 10.1109/ICSE.2003.1201212
   Binkley D, 2003, PROC IEEE INT CONF S, P44, DOI 10.1109/ICSM.2003.1235405
   Binkley D, 1998, INFORM SOFTWARE TECH, V40, P583, DOI 10.1016/S0950-5849(98)00085-8
   Binkley D., 1996, Advances in Computers, V43, P1
   Bourhfir C, 1997, TESTING OF COMMUNICATING SYSTEMS, VOL 10, P75
   Calude CS, 2000, THEOR COMPUT SCI, V242, P219, DOI 10.1016/S0304-3975(98)00221-7
   Caporuscio M, 2007, J SYST SOFTWARE, V80, P455, DOI 10.1016/j.jss.2006.07.039
   CHOI JD, 1994, ACM T PROGR LANG SYS, V16, P1097, DOI 10.1145/183432.183438
   Dong W, 2001, APSEC 2001: EIGHTH ASIA-PACIFIC SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P363, DOI 10.1109/APSEC.2001.991503
   Fox C., 2005, P PROGR SLIC C
   GALLAGHER KB, 1991, IEEE T SOFTWARE ENG, V17, P751, DOI 10.1109/32.83912
   Garey M.R., 1979, COMPUTERS INTRACTABI
   Garousi V., 2006, 28th International Conference on Software Engineering Proceedings, P391, DOI 10.1145/1134285.1134340
   Gaston C, 2006, LECT NOTES COMPUT SC, V3964, P1
   Harel D., 1996, ACM Transactions on Software Engineering and Methodology, V5, P293, DOI 10.1145/235321.235322
   HAREL D, 1987, SCI COMPUT PROGRAM, V8, P231, DOI 10.1016/0167-6423(87)90035-9
   Harman M, 1998, J SOFTW MAINT-RES PR, V10, P415, DOI 10.1002/(SICI)1096-908X(199811/12)10:6<415::AID-SMR180>3.0.CO;2-Z
   Harman M., INFORM SOFT IN PRESS
   HORWITZ S, 1990, ACM T PROGR LANG SYS, V12, P26, DOI [10.1145/77606.77608, 10.1145/960116.53994]
   Hromkovic J, 2007, THEOR COMPUT SCI, V380, P100, DOI 10.1016/j.tcs.2007.02.063
   Ilie L, 2004, LECT NOTES COMPUT SC, V3113, P112
   Ilie L, 2003, THEOR COMPUT SCI, V306, P373, DOI 10.1016/S0304-3975(03)00311-6
   Ilie L, 2003, INFORM COMPUT, V186, P140, DOI 10.1016/S0890-5401(03)00090-7
   John S., 2004, Implementation and Application of Automata. 9th International Conference, CIAA 2004. Revised Selected Papers (Lecture Notes in Computer Science Vol. 3317), P190
   Jones Richard., 1999, GARBAGE COLLECTION A
   Komondoor R., 2000, Conference Record of POPL'00: 27th ACM SIGPLAN-SIGACT. Symposium on Principles of Programming Languages. Papers Presented at the Symposium, P155, DOI 10.1145/325694.325713
   Korel B, 2003, PROC IEEE INT CONF S, P34, DOI 10.1109/ICSM.2003.1235404
   Korel Bogdan., 2007, Proceedings of the 3rd International Workshop on Advances in Model-Based Testing, P34
   Kuck R. H., 1981, Proceedings of the 8th ACM SIGPLAN-SIGACT symposium on Principles of programming languages, P207
   Labbé S, 2008, FORM ASP COMPUT, V20, P563, DOI 10.1007/s00165-008-0086-3
   Leitner Andreas, 2007, 22 IEEE ACM INT C AU, P417, DOI 10.1145/1321631.1321698
   Luangsodsai A., 2010, P COMP SCI EL ENG C, P1
   Massicotte F, 2007, LECT NOTES COMPUT SC, V4735, P61
   Ranganath VP, 2007, ACM T PROGR LANG SYS, V29, DOI 10.1145/1275497.1275502
   Ranganath VP, 2005, LECT NOTES COMPUT SC, V3444, P77
   SIVAGURUNATHAN Y., 1997, P 3 INT WORKSH AUT D, P59
   Sloane A. M., 1996, Proceedings of the 1996 International Symposium on Software Testing and Analysis (ISSTA), P180, DOI 10.1145/229000.226315
   Tarjan R., 1972, SIAM Journal on Computing, V1, P146, DOI 10.1137/0201010
   TIP F, 1995, J PROGRAM LANG, V3, P121
   Van Langenhove S, 2007, LECT NOTES COMPUT SC, V4409, P142
   VENKATESH GA, 1991, SIGPLAN NOTICES, V26, P107, DOI 10.1145/113446.113455
   Wang J, 2002, LECT NOTES COMPUT SC, V2495, P435
   Weiser M., 1981, 5th International Conference on Software Engineering, P439
   Weiser MD., 1979, PROGRAM SLICES FORMA
   Xing GM, 2004, INT J COMPUT MATH, V81, P1097, DOI 10.1080/03057920412331272153
   Zaghal R.Y., 2005, TR20050722 KENT STAT
   [No title captured]
NR 60
TC 17
Z9 22
U1 0
U2 17
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUL
PY 2013
VL 39
IS 7
BP 892
EP 909
DI 10.1109/TSE.2012.72
PG 18
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 174AO
UT WOS:000321125200001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Liu, Y
   Chen, W
   Liu, YHA
   Sun, J
   Zhang, SJ
   Dong, JS
AF Liu, Yang
   Chen, Wei
   Liu, Yanhong A.
   Sun, Jun
   Zhang, Shao Jie
   Dong, Jin Song
TI Verifying Linearizability via Optimized Refinement Checking
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Linearizability; refinement; model checking; PAT
ID MODEL CHECKING; FORMAL VERIFICATION; CONCURRENT; SYMMETRY
AB Linearizability is an important correctness criterion for implementations of concurrent objects. Automatic checking of linearizability is challenging because it requires checking that: 1) All executions of concurrent operations are serializable, and 2) the serialized executions are correct with respect to the sequential semantics. In this work, we describe a method to automatically check linearizability based on refinement relations from abstract specifications to concrete implementations. The method does not require that linearization points in the implementations be given, which is often difficult or impossible. However, the method takes advantage of linearization points if they are given. The method is based on refinement checking of finite-state systems specified as concurrent processes with shared variables. To tackle state space explosion, we develop and apply symmetry reduction, dynamic partial order reduction, and a combination of both for refinement checking. We have built the method into the PAT model checker, and used PAT to automatically check a variety of implementations of concurrent objects, including the first algorithm for scalable nonzero indicators. Our system is able to find all known and injected bugs in these implementations.
C1 [Liu, Yang] Nanyang Technol Univ, Sch Comp Engn, Singapore 639798, Singapore.
   [Chen, Wei] Microsoft Res Asia, Microsoft Asia Pacific R&D Grp Headquarters, Beijing 100080, Peoples R China.
   [Liu, Yanhong A.] SUNY Stony Brook, Dept Comp Sci, Stony Brook, NY 11794 USA.
   [Sun, Jun] Singapore Univ Technol & Design, Singapore 279623, Singapore.
   [Zhang, Shao Jie; Dong, Jin Song] Natl Univ Singapore, Sch Comp, Dept Comp Sci, Singapore 117417, Singapore.
C3 Nanyang Technological University; Microsoft Research Asia; Microsoft;
   State University of New York (SUNY) System; State University of New York
   (SUNY) Stony Brook; Singapore University of Technology & Design;
   National University of Singapore
RP Liu, Y (corresponding author), Nanyang Technol Univ, Sch Comp Engn, 02C-118,Block N4,50 Nanyang Ave, Singapore 639798, Singapore.
EM yangliu@ntu.edu.sg; weic@microsoft.com; liu@cs.sunysb.edu;
   sunjun@sutd.edu.sg; shaojiezhang@nus.edu.sg; dcsdjs@nus.edu.sg
RI yang, liu/GVU-8760-2022; liu, yang/HIU-0559-2022; Chen, Wei/O-7697-2015;
   Liu, Annie/KVB-5867-2024; liu, yang/HQY-7531-2023; Liu,
   Yang/D-2306-2013; Liu, Yang/HNJ-6693-2023; LIU, YANG/HWQ-4615-2023;
   yang, liu/HTN-9175-2023; liu, yang/HHY-8583-2022
OI Liu, Yang/0000-0001-7300-9215; Chen, Wei/0000-0003-0065-3610; Sun,
   Jun/0000-0002-3545-1392
FU Direct For Computer & Info Scie & Enginr; Division of Computing and
   Communication Foundations [1248184, 0964196] Funding Source: National
   Science Foundation
CR Aguilera MK, 2008, LECT NOTES COMPUT SC, V5218, P1, DOI 10.1007/978-3-540-87779-0_1
   Alur R, 1996, IEEE S LOG, P219, DOI 10.1109/LICS.1996.561322
   Amit D, 2007, LECT NOTES COMPUT SC, V4590, P477
   [Anonymous], 1997, Distributed algorithms
   [Anonymous], 1997, The Theory and Practice of Concurrency
   [Anonymous], 1996, LECT NOTES COMPUTER, DOI DOI 10.1007/3-540-60761-7
   [Anonymous], 1994, A classical mind: essays in honour of C. A. R. Hoare
   Attiya H., 2004, Distributed computing: fundamentals, simulations, and advanced topics, V19
   Berdine J, 2008, LECT NOTES COMPUT SC, V5123, P399
   Burckhardt S, 2010, ACM SIGPLAN NOTICES, V45, P330, DOI 10.1145/1809028.1806634
   Cerny P, 2010, LECT NOTES COMPUT SC, V6174, P465, DOI 10.1007/978-3-642-14295-6_41
   Clarke Edmund M., 2001, Model Checking
   Colvin R, 2005, IEEE INT C ENG COMP, P507
   Colvin R, 2007, SEFM 2007: FIFTH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING AND FORMAL METHODS, PROCEEDINGS, P339, DOI 10.1109/SEFM.2007.36
   Colvin R, 2005, ELECTRON NOTES THEOR, V137, P93, DOI 10.1016/j.entcs.2005.04.026
   Colvin R, 2006, LECT NOTES COMPUT SC, V4144, P475, DOI 10.1007/11817963_44
   Derrick John, 2011, FM 2011: Formal Methods. Proceedings 17th International Symposium on Formal Methods, P323, DOI 10.1007/978-3-642-21437-0_25
   Derrick J, 2008, LECT NOTES COMPUT SC, V5051, P78, DOI 10.1007/978-3-540-68863-1_6
   Derrick J, 2007, LECT NOTES COMPUT SC, V4591, P195
   Derrick J, 2011, ACM T PROGR LANG SYS, V33, DOI 10.1145/1889997.1890001
   DILL DL, 1991, P INT C COMP AID VER, P255
   Doherty S, 2004, LECT NOTES COMPUT SC, V3235, P97
   Ellen F, 2007, PODC'07: PROCEEDINGS OF THE 26TH ANNUAL ACM SYMPOSIUM ON PRINCIPLES OF DISTRIBUTED COMPUTING, P13
   Emerson EA, 1997, LECT NOTES COMPUT SC, V1217, P19, DOI 10.1007/BFb0035378
   Emerson EA, 1996, FORM METHOD SYST DES, V9, P105, DOI 10.1007/BF00625970
   Emerson EA, 1999, LECT NOTES COMPUT SC, V1703, P142
   Flanagan C, 2005, ACM SIGPLAN NOTICES, V40, P110, DOI 10.1145/1047659.1040315
   Gueta G, 2007, LECT NOTES COMPUT SC, V4595, P95
   Harris TL, 2002, LECT NOTES COMPUT SC, V2508, P265
   Hendler Danny, 2004, SPAA 2004, P206, DOI [10.1145/1007912.1007944, DOI 10.1145/1007912.1007944]
   Herlihy M., 2008, ART MULTIPROCESSOR P
   HERLIHY MP, 1990, ACM T PROGR LANG SYS, V12, P463, DOI 10.1145/78969.78972
   Hopcroft JE., 2008, Introduction to automata theory, languages, and computation
   Iosif R., 2002, P 9 INT SPIN WORKSH, V2318, P31
   Ip CN, 1996, FORM METHOD SYST DES, V9, P41, DOI 10.1007/BF00625968
   Kurshan R, 1998, LECT NOTES COMPUT SC, V1384, P345, DOI 10.1007/BFb0054182
   Leuschel M., 2001, FME 2001: Formal Methods for Increasing Software Productivity. International Symposium on Formal Methods Europe. Proceedings (Lecture Notes in Computer Science Vol.2021), P99
   Liu Y., 2012, LNCS, V7635, P364, DOI DOI 10.1007/978-3-642-34281-326
   Liu Y, 2011, 22ND IEEE INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING (ISSRE), P190, DOI 10.1109/ISSRE.2011.19
   Liu Y, 2009, LECT NOTES COMPUT SC, V5850, P321
   Lowe G, 2008, FORM ASP COMPUT, V20, P277, DOI 10.1007/s00165-007-0065-0
   Manevich R, 2008, LECT NOTES COMPUT SC, V5079, P363
   Michael MM, 1998, J PARALLEL DISTR COM, V51, P1, DOI 10.1006/jpdc.1998.1446
   Moffat N, 2008, LECT NOTES COMPUT SC, V5256, P258, DOI 10.1007/978-3-540-88194-0_17
   Plagge Daniel, 2010, International Journal on Software Tools for Technology Transfer, V12, P9, DOI 10.1007/s10009-009-0132-3
   Shann CH, 2000, SEVENTH INTERNATIONAL CONFERENCE ON PARALLEL AND DISTRIBUTED SYSTEMS, PROCEEDINGS, P470, DOI 10.1109/ICPADS.2000.857731
   Sistla AP, 2004, ACM T PROGR LANG SYS, V26, P702, DOI 10.1145/1011508.1011511
   Sun J., 2008, Proceedings of the 10th International Conference on Formal Engineering Methods (ICFEM 2008), volume 5256 of Lecture Notes in Computer Science, V5256, P318
   Sun J, 2009, THIRD INTERNATIONAL SYMPOSIUM ON THEORETICAL ASPECTS OF SOFTWARE ENGINEERING, PROCEEDINGS, P127, DOI 10.1109/TASE.2009.32
   Sun J, 2009, LECT NOTES COMPUT SC, V5643, P709, DOI 10.1007/978-3-642-02658-4_59
   Sun J, 2008, COMM COM INF SC, V17, P307
   Treiber R. K, 1986, Technical Report RJ 5118
   Vafeiadis V., 2006, Proceedings of the 2006 ACM SIGPLAN Symposium on Principles and Practice of Parallel Programming PPoPP'06, P129, DOI 10.1145/1122971.1122992
   Vafeiadis V, 2010, LECT NOTES COMPUT SC, V6174, P450, DOI 10.1007/978-3-642-14295-6_40
   Vafeiadis V, 2009, LECT NOTES COMPUT SC, V5403, P335, DOI 10.1007/978-3-540-93900-9_27
   VALMARI A, 1991, LECT NOTES COMPUT SC, V483, P491
   Vechev M, 2008, ACM SIGPLAN NOTICES, V43, P125, DOI 10.1145/1379022.1375598
   Vechev M, 2009, LECT NOTES COMPUT SC, V5578, P261, DOI 10.1007/978-3-642-02652-2_21
   WANG L, 2005, PPOPP 05, P61
   Wolper P., 1981, 22nd Annual Symposium on Foundations of Computer Science, P340, DOI 10.1109/SFCS.1981.44
NR 60
TC 14
Z9 17
U1 1
U2 11
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUL
PY 2013
VL 39
IS 7
BP 1018
EP 1039
DI 10.1109/TSE.2012.82
PG 22
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 174AO
UT WOS:000321125200008
OA Green Published, Green Submitted
DA 2024-07-18
ER

PT J
AU Hoda, R
   Noble, J
   Marshall, S
AF Hoda, Rashina
   Noble, James
   Marshall, Stuart
TI Self-Organizing Roles on Agile Software Development Teams
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Self-organizing; team roles; software engineering; Agile software
   development; grounded theory
ID SCRUM
AB Self-organizing teams have been recognized and studied in various forms-as autonomous groups in socio-technical systems, enablers of organizational theories, agents of knowledge management, and as examples of complex-adaptive systems. Over the last decade, self-organizing teams have taken center stage in software engineering when they were incorporated as a hallmark of Agile methods. Despite the long and rich history of self-organizing teams and their recent popularity with Agile methods, there has been little research on the topic within software wngineering. Particularly, there is a dearth of research on how Agile teams organize themselves in practice. Through a Grounded Theory research involving 58 Agile practitioners from 23 software organizations in New Zealand and India over a period of four years, we identified informal, implicit, transient, and spontaneous roles that make Agile teams self-organizing. These roles-Mentor, Coordinator, Translator, Champion, Promoter, and Terminator-are focused toward providing initial guidance and encouraging continued adherence to Agile methods, effectively managing customer expectations and coordinating customer collaboration, securing and sustaining senior management support, and identifying and removing team members threatening the self-organizing ability of the team. Understanding these roles will help software development teams and their managers better comprehend and execute their roles and responsibilities as a self-organizing team.
C1 [Hoda, Rashina] Univ Auckland, Dept Elect & Comp Engn, Auckland Mail Ctr, Auckland 1142, New Zealand.
   [Noble, James; Marshall, Stuart] Victoria Univ Wellington, Sch Engn & Comp Sci, Wellington 6140, New Zealand.
C3 University of Auckland; Victoria University Wellington
RP Hoda, R (corresponding author), Univ Auckland, Dept Elect & Comp Engn, Auckland Mail Ctr, Private Bag 92019, Auckland 1142, New Zealand.
EM hoda@auckland.ac.nz; kjx@ecs.vuw.ac.nz; stuart@ecs.vuw.ac.nz
RI Marshall, Stuart R/M-6350-2016
OI Noble, James/0000-0001-9036-5692; Hoda, Rashina/0000-0001-5147-8096
FU BuildIT (NZ); SPPI (NZ); Agile Alliance (USA)
FX The authors would like to thank BuildIT (NZ), SPPI (NZ), Agile Alliance
   (USA), and all the participants for their support of this research.
CR Abraham LR, 2009, ISEC 2009 - PROCEEDINGS OF THE 2ND INDIA SOFTWARE ENGINEERING CONFERENCE, P95
   Abrahamsson P, 2003, PROC INT CONF SOFTW, P244, DOI 10.1109/ICSE.2003.1201204
   Abrahamsson P., 2002, Agile Software Development Methods: Review and Analysis
   Adolph S., 2008, Conference of the Center for Advanced Studies on Collaborative Research CASCON, P166, DOI DOI 10.1145/1463788.1463806
   Allan G., 2003, ELECT J BUSINESS RES, V2, P1
   ANCONA DG, 1988, GROUP ORGAN STUD, V13, P468, DOI 10.1177/105960118801300405
   Anderson Carl., 2003, Emergence, V5, P29, DOI DOI 10.1207/S15327000EM050205
   [Anonymous], 1983, SOFTWARE PRODUCTIVIT
   [Anonymous], 2010, IND LOGIC AGILE TIME
   [Anonymous], TALE TOO HANDS OFF M
   [Anonymous], AGILE UNDERCOVER CUS
   [Anonymous], CONVERTING WATERFALL
   [Anonymous], 1995, MYTHICAL MAN MONTH
   [Anonymous], 2003, THESIS U OSLO NORWAY
   [Anonymous], GROUNDED THEORY I ME
   [Anonymous], ORG SELF ORG AGILE T
   [Anonymous], ROOTS SCRUM TAKEUCHI
   [Anonymous], EMPIRICAL S IN PRESS
   [Anonymous], 2006, PROC EUR C RES METHO
   [Anonymous], 2003, 18 ANN ACM SIGPLAN C
   [Anonymous], TEAM SELF ORG
   [Anonymous], AGILE UNDERCOVER
   [Anonymous], AUSTR J ADV NURSING
   [Anonymous], P WORKSH ICSE COOP H
   [Anonymous], P 18 ANN ACM SIGPLAN
   [Anonymous], P AGILE 09
   [Anonymous], INT J ORG ANAL
   [Anonymous], 1993, ORIGINS ORDER
   [Anonymous], 2001, SOFTW DEV MAG
   [Anonymous], P 93 ANN CONV NAT CO
   [Anonymous], 2003, THESIS W VIRGINIA U
   [Anonymous], 2008, ELECT J BUSINESS RES
   [Anonymous], CANADIAN PUBLIC ADM
   [Anonymous], EXTR PROGR GENTL INT
   [Anonymous], P AG 08
   [Anonymous], AGILE PROCESSES SELF
   Ashby W.R., 1956, INTRO CYBERNETICS
   Augustine S., 2005, Managing agile projects, V1st
   BARKER JR, 1993, ADMIN SCI QUART, V38, P408, DOI 10.2307/2393374
   Beck Kent, 1999, Extreme Programming Explained: Embrace Change
   Begel Andrew, 2007, 2007 First International Symposium on Empirical Software Engineering and Measurement, P255
   Belbin R.M., 1993, Team Roles at Work
   Benoliel JQ, 1996, QUAL HEALTH RES, V6, P406, DOI 10.1177/104973239600600308
   Burt R. S., 2005, BROKERAGE CLOSURE IN
   Chau T, 2004, LECT NOTES COMPUT SC, V3075, P173, DOI 10.1007/978-3-540-25967-1_12
   Chow T, 2008, J SYST SOFTWARE, V81, P961, DOI 10.1016/j.jss.2007.08.020
   Cockburn A, 2001, COMPUTER, V34, P131, DOI 10.1109/2.963450
   Cockburn A., 2004, Crystal clear: A human-powered methodology for small teams: A human-powered methodology for small teams
   Creswell J. W., 2013, RES DESIGN QUALITATI
   Dagenais B., 2010, Proc. of the ICSE 10, P275, DOI DOI 10.1145/1806799.1806842
   Dickinson T.L., 1997, SER APPL PSYCHOL, P19
   Dybå T, 2008, INFORM SOFTWARE TECH, V50, P833, DOI 10.1016/j.infsof.2008.01.006
   Elssamadisy A., 2008, AGILE ADOPTION PATTE
   Glaser B.G., 2005, The Grounded Theory Perspective III: Theoretical Coding
   Glaser B. G., 1978, [No title captured]
   Glaser B.G., 1998, DOING GROUNDED THEOR
   Glaser B.G., 2004, Forum: Qualitative Social Research, V5, P7
   Glaser B. G., 1967, DISCOVERY GROUNDED T, DOI 10.1515/9783111660211/html
   Glaser Barney G., 1992, Basic of grounded theory analysis: emergence vs. forcing
   Glaser Barney G., 2004, Forum: Qualitative Social Research, V5, DOI [DOI 10.17169/FQS-5.2.607, 10.17169/fqs-5.2.607]
   Grisham PaulS., 2005, ACM SIGSOFT Software Engineering Notes, V30, P1
   Highsmith J. A., 2004, Agile Project Management: Creating Innovative Products
   Highsmith JamesA., 2000, ADAPTIVE SOFTWARE DE
   Hoda R, 2011, THESIS VICTORIA U WE
   Hoda R., 2010, Proceedings of the 32nd International Conference on Software Engineering - Volume 1, ICSE '10, V1, P285, DOI [10.1145/1806799.1806843, DOI 10.1145/1806799.1806843]
   Hoda R, 2011, LECT NOTES BUS INF P, V77, P73
   Hoda R, 2010, LECT NOTES BUS INF, V48, P387
   Hoda R, 2010, LECT NOTES BUS INF P, V48, P73
   Hoda R, 2011, INFORM SOFTWARE TECH, V53, P521, DOI 10.1016/j.infsof.2010.10.009
   Hut J., 1998, TEAM PERFORM MANAG, V4, P53
   Lansing JS, 2003, ANNU REV ANTHROPOL, V32, P183, DOI 10.1146/annurev.anthro.32.061002.093440
   Larman C, 2003, COMPUTER, V36, P47, DOI 10.1109/MC.2003.1204375
   Levin SA, 1998, ECOSYSTEMS, V1, P431, DOI 10.1007/s100219900037
   Lewin K., 1948, Resolving Social Conflicts: Selected Papers on Group Dynamics
   Lewin R., 1993, Complexity: Life at the Edge of Chaos
   Lewis R., 1994, Executive Development, V7, P16
   lLindvall M., 2002, Extreme Programming and Agile Methods - XP/Agile Universe 2002 Second XP Universe and First Agile Universe Conference. Proceedings (Lecture Notes in Computer Science Vol.2418), P197
   Mann C, 2005, AGILE 2005, PROCEEDINGS, P70, DOI 10.1109/ADC.2005.1
   Marshall S., 2010, ACM SIGPLAN NOTICES, P74, DOI DOI 10.1145/1932682.1869467
   Martin A, 2004, PROCEEDINGS OF THE AGILE DEVELOPMENT CONFERENCE, P42
   Martin R. C., 2002, AGILE SOFTWARE DEV P
   Moe NB, 2008, LECT NOTES BUS INF P, V9, P11
   Moe NB, 2008, ASWEC 2008: 19TH AUSTRALIAN SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P76, DOI 10.1109/ASWEC.2008.28
   Moe NB, 2010, INFORM SOFTWARE TECH, V52, P480, DOI 10.1016/j.infsof.2009.11.004
   Morgan G., 2006, Images of Organization
   Nerur S, 2005, COMMUN ACM, V48, P72, DOI 10.1145/1060710.1060712
   Nerur S, 2007, COMMUN ACM, V50, P79, DOI 10.1145/1226736.1226739
   NONAKA I, 1994, ORGAN SCI, V5, P14, DOI 10.1287/orsc.5.1.14
   Palmer S.R., 2001, A Practical Guide to Feature-Driven Development, V1st
   Pikkarainen M, 2008, EMPIR SOFTW ENG, V13, P303, DOI 10.1007/s10664-008-9065-9
   Rising L, 2000, IEEE SOFTWARE, V17, P26, DOI 10.1109/52.854065
   Robey D., 2001, Information Technology & Management, V2, P53, DOI 10.1023/A:1009982704160
   Robinson H, 2005, AGILE 2005, PROCEEDINGS, P49, DOI 10.1109/ADC.2005.36
   Robinson H, 2005, LECT NOTES COMPUT SC, V3556, P100
   Sawyer S, 2010, INFORM SYST J, V20, P81, DOI 10.1111/j.1365-2575.2008.00311.x
   Schwaber K., 2021, SCRUM GUIDE
   Schwaber K., 2002, AGILE SOFTWARE DEV S
   Sfetsos P, 2006, EMPIR SOFTW ENG, V11, P269, DOI 10.1007/s10664-006-6404-6
   Sharp H, 2004, EMPIR SOFTW ENG, V9, P353, DOI 10.1023/B:EMSE.0000039884.79385.54
   Sharp H, 2008, INT J HUM-COMPUT ST, V66, P506, DOI 10.1016/j.ijhcs.2007.10.004
   Stapleton J., 1997, DYNAMIC SYSTEMS DEV
   Summers M, 2008, AGILE 2008, PROCEEDINGS, P333, DOI 10.1109/Agile.2008.37
   Sureshchandra K, 2008, 2008 3RD IEEE INTERNATIONAL CONFERENCE GLOBAL SOFTWARE ENGINEERING, PROCEEDINGS, P217, DOI 10.1109/ICGSE.2008.25
   Sutherland J, 2008, AGILE 2008, PROCEEDINGS, P339, DOI 10.1109/Agile.2008.92
   TAKEUCHI H, 1986, HARVARD BUS REV, V64, P137
   Taylor P.S., 2006, INT C SOFTWARE ENG P, P87
   Tomayko J., 2004, Human Aspects of Software Engineering, VIst
   Trist E.L., 1981, The evolution of sociotechnical systems, V2
   Whitworth E, 2007, AGILE 2007, PROCEEDINGS, P26, DOI 10.1109/AGILE.2007.60
   Williams L, 2000, IEEE SOFTWARE, V17, P19, DOI 10.1109/52.854064
   Williams LA, 2000, COMMUN ACM, V43, P108, DOI 10.1145/332833.332848
NR 111
TC 139
Z9 168
U1 9
U2 184
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAR
PY 2013
VL 39
IS 3
BP 422
EP 444
DI 10.1109/TSE.2012.30
PG 23
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science; Engineering
GA 098CA
UT WOS:000315520700008
DA 2024-07-18
ER

PT J
AU Fraser, G
   Arcuri, A
AF Fraser, Gordon
   Arcuri, Andrea
TI Whole Test Suite Generation
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Search-based software engineering; length; branch coverage; genetic
   algorithm; infeasible goal; collateral coverage
ID TESTABILITY
AB Not all bugs lead to program crashes, and not always is there a formal specification to check the correctness of a software test's outcome. A common scenario in software testing is therefore that test data are generated, and a tester manually adds test oracles. As this is a difficult task, it is important to produce small yet representative test sets, and this representativeness is typically measured using code coverage. There is, however, a fundamental problem with the common approach of targeting one coverage goal at a time: Coverage goals are not independent, not equally difficult, and sometimes infeasible-the result of test generation is therefore dependent on the order of coverage goals and how many of them are feasible. To overcome this problem, we propose a novel paradigm in which whole test suites are evolved with the aim of covering all coverage goals at the same time while keeping the total size as small as possible. This approach has several advantages, as for example, its effectiveness is not affected by the number of infeasible targets in the code. We have implemented this novel approach in the EVOSUITE tool, and compared it to the common approach of addressing one goal at a time. Evaluated on open source libraries and an industrial case study for a total of 1,741 classes, we show that EVOSUITE achieved up to 188 times the branch coverage of a traditional approach targeting single branches, with up to 62 percent smaller test suites.
C1 [Fraser, Gordon] Univ Sheffield, Dept Comp Sci, Sheffield S1 4DP, S Yorkshire, England.
   [Arcuri, Andrea] Certus Software V&V Ctr, Simula Res Lab, Lysaker, Norway.
C3 University of Sheffield
RP Fraser, G (corresponding author), Univ Sheffield, Dept Comp Sci, 211 Portobello, Sheffield S1 4DP, S Yorkshire, England.
EM gordon.fraser@sheffield.ac.uk; arcuri@simula.no
FU Google Focused Research Award on "Test Amplification"; Norwegian
   Research Council
FX The authors thank Valentin Dallmeier, Yana Mileva, Andrzej Wasylkowski,
   and Andreas Zeller for comments on earlier versions of this paper. This
   work is funded by a Google Focused Research Award on "Test
   Amplification" and the Norwegian Research Council.
CR Ali S, 2010, IEEE T SOFTWARE ENG, V36, P742, DOI 10.1109/TSE.2009.52
   Alshraideh M, 2006, SOFTW TEST VERIF REL, V16, P175, DOI 10.1002/stvr.354
   Araujo L., 2011, IEEE T EVOLUTIONARY, V15, P1
   Arcuri A., 2011, P ACM INT S SOFTW TE
   Arcuri A., 2011, SOFTWARE TESTING VER
   Arcuri A, 2008, INFORM SCIENCES, V178, P3075, DOI 10.1016/j.ins.2007.11.024
   Arcuri A, 2012, IEEE T SOFTWARE ENG, V38, P497, DOI 10.1109/TSE.2011.44
   Arcuri A, 2012, IEEE T SOFTWARE ENG, V38, P258, DOI 10.1109/TSE.2011.121
   Arcuri A, 2011, LECT NOTES COMPUT SC, V6956, P33, DOI 10.1007/978-3-642-23716-4_6
   Arcuri A, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1, DOI 10.1145/1985793.1985795
   Arcuri A, 2010, LECT NOTES COMPUT SC, V6435, P95, DOI 10.1007/978-3-642-16573-3_8
   Baars A., 2011, P IEEE ACM 26 INT C
   Baresi Luciano, 2010, Proceedings of the Third IEEE International Conference on Software Testing, Verification and Validation (ICST 2010), P185, DOI 10.1109/ICST.2010.54
   Baudry B, 2005, IEEE SOFTWARE, V22, P76, DOI 10.1109/MS.2005.30
   Csallner C, 2004, SOFTWARE PRACT EXPER, V34, P1025, DOI 10.1002/spe.602
   Feller W., 1968, An Introduction to Probability Theory and Its Applications, V1
   Fraser G., 2011, Proceedings of the 11th International Conference on Quality Software (QSIC 2011), P31, DOI 10.1109/QSIC.2011.19
   Fraser G., 2011, Proceedings 2011 IEEE Fourth International Conference on Software Testing, Verification and Validation (ICST 2011), P150, DOI 10.1109/ICST.2011.54
   Fraser Gordon, 2011, Proceedings 2011 IEEE Fourth International Conference on Software Testing, Verification and Validation (ICST 2011), P80, DOI 10.1109/ICST.2011.53
   Fraser G., 2011, P 19 ACM ISGSOFT S 1
   Fraser G, 2012, IEEE T SOFTWARE ENG, V38, P278, DOI 10.1109/TSE.2011.93
   Godefroid P, 2005, ACM SIGPLAN NOTICES, V40, P213, DOI 10.1145/1064978.1065036
   Goldberg A., 1994, SIGSOFT Software Engineering Notes, P80
   Harman M, 2004, IEEE T SOFTWARE ENG, V30, P3, DOI 10.1109/TSE.2004.1265732
   Harman M., 2010, P 3 INT C SOFTW TEST
   Harman M, 2010, IEEE T SOFTWARE ENG, V36, P226, DOI 10.1109/TSE.2009.71
   Inkumsah Kobi, 2008, 2008 23rd IEEE/ACM International Conference on Automated Software Engineering, P297, DOI 10.1109/ASE.2008.40
   Islam Mainul., 2010, WODA, P26
   Jia Y., 2009, TR0906 CREST CTR KIN
   KOREL B, 1990, IEEE T SOFTWARE ENG, V16, P870, DOI 10.1109/32.57624
   Lammermann F, 2008, APPL SOFT COMPUT, V8, P1018, DOI 10.1016/j.asoc.2006.06.010
   Lobo F.G., 2007, PARAMETER SETTING EV
   Malburg J., 2011, P IEEE ACM 26 INT C
   McMinn P, 2004, SOFTW TEST VERIF REL, V14, P105, DOI 10.1002/stvr.294
   Miller W., 1976, IEEE Transactions on Software Engineering, VSE-2, P223, DOI 10.1109/TSE.1976.233818
   Pacheco C., 2007, OOPSLA 2007 COMPANIO, P815
   Ribeiro J.C.B., 2008, GEN EV COMP C GECCO, P1819, DOI DOI 10.1145/1388969.1388979
   RUDOLPH G, 1994, IEEE T NEURAL NETWOR, V5, P96, DOI 10.1109/72.265964
   Sen K., 2005, P 10 EUR SOFTW ENG C, V30, P263, DOI DOI 10.1145/1081706.1081750
   Sharma R., 2011, P 14 INT C FUND APPR
   Silva S, 2009, GENET PROGRAM EVOL M, V10, P141, DOI 10.1007/s10710-008-9075-9
   Tillmann N, 2008, LECT NOTES COMPUT SC, V4966, P134
   Tonella P., 2004, Software Engineering Notes, V29, P119, DOI 10.1145/1013886.1007528
   Vargha A, 2000, J EDUC BEHAV STAT, V25, P101, DOI 10.3102/10769986025002101
   Visser W., 2004, Software Engineering Notes, V29, P97, DOI 10.1145/1013886.1007526
   Wappler S., 2007, P 22 IEEE ACM INT C, P381
   Wappler S, 2005, GECCO 2005: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOLS 1 AND 2, P1053
   Wegener J, 2001, INFORM SOFTWARE TECH, V43, P841, DOI 10.1016/S0950-5849(01)00190-2
   WHITLEY D, 1989, PROCEEDINGS OF THE THIRD INTERNATIONAL CONFERENCE ON GENETIC ALGORITHMS, P116
   Williams N, 2005, LECT NOTES COMPUT SC, V3463, P281
   Xie T, 2005, LECT NOTES COMPUT SC, V3440, P365
   Zhang S., 2011, P ACM INT S SOFTW TE
NR 52
TC 352
Z9 384
U1 0
U2 25
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD FEB
PY 2013
VL 39
IS 2
BP 276
EP 291
DI 10.1109/TSE.2012.14
PG 16
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 079ML
UT WOS:000314174500009
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Hayden, RA
   Bradley, JT
   Clark, A
AF Hayden, Richard A.
   Bradley, Jeremy T.
   Clark, Allan
TI Performance Specification and Evaluation with Unified Stochastic Probes
   and Fluid Analysis
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Performance modeling; performance evaluation tools; stochastic process
   algebra; measurement probes; fluid approximation; passage-time analysis
ID MODEL CHECKING; PROCESS ALGEBRA; IMPLEMENTATION; FRAMEWORK; SYSTEMS
AB Rapid and accessible performance evaluation of complex software systems requires two critical features: the ability to specify useful performance metrics easily and the capability to analyze massively distributed architectures, without recourse to large compute clusters. We present the unified stochastic probe, a performance specification mechanism for process algebra models that combines many existing ideas: state and action-based activation, location-based specification, many-probe specification, and immediate signaling. These features, between them, allow the precise and compositional construction of complex performance measurements. The paper shows how a subset of the stochastic probe language can be used to specify common response-time measures in massive process algebra models. The second contribution of the paper is to show how these response-time measures can be analyzed using so-called fluid techniques to produce rapid results. In doing this, we extend the fluid approach to incorporate immediate activities and a new type of response-time measure. Finally, we calculate various response-time measurements on a complex distributed wireless network of O(10(129)) states in size.
C1 [Hayden, Richard A.; Bradley, Jeremy T.] Univ London Imperial Coll Sci Technol & Med, Dept Comp, London SW7 2BZ, England.
   [Clark, Allan] Univ Edinburgh, Sch Informat, Edinburgh EH8 9AB, Midlothian, Scotland.
   [Clark, Allan] Univ Edinburgh, Ctr Syst Biol, Edinburgh EH8 9AB, Midlothian, Scotland.
C3 Imperial College London; University of Edinburgh; University of
   Edinburgh
RP Hayden, RA (corresponding author), Univ London Imperial Coll Sci Technol & Med, Dept Comp, Huxley Bldg,180 Queens Gate, London SW7 2BZ, England.
EM rh@doc.ic.ac.uk; jb@doc.ic.ac.uk; a.d.clark@ed.ac.uk
RI Clark, Allan Ernest/S-1063-2019
OI Clark, Allan Ernest/0000-0003-3472-0797
FU EPSRC [EP/G011737/1] Funding Source: UKRI
CR Amparore E. G., 2011, Proceedings of the 2011 Eighth International Conference on Quantitative Evaluation of Systems (QEST 2011), P101, DOI 10.1109/QEST.2011.20
   [Anonymous], THESIS IMPERIAL COLL
   [Anonymous], P 2 INT C SOFTW PROC
   Argent-Katwala A, 2008, LECT NOTES COMPUT SC, V4912, P222
   ARGENTKATWALA A, 2004, P 4 INT WORKSH SOFTW, P49
   Aziz A., 1996, P 8 INT C COMP AID V, P269
   Baier C, 2007, IEEE T SOFTWARE ENG, V33, P209, DOI 10.1109/TSE.2007.36
   Clark A., 2009, P 2009 IEEE EL POW E, P1
   Clark A, 2008, LECT NOTES COMPUT SC, V5261, P125, DOI 10.1007/978-3-540-87412-6_10
   Deavours DD, 2002, IEEE T SOFTWARE ENG, V28, P956, DOI 10.1109/TSE.2002.1041052
   Donatelli S, 2009, IEEE T SOFTWARE ENG, V35, P224, DOI 10.1109/TSE.2008.108
   Gilmore S, 2001, IEEE T SOFTWARE ENG, V27, P449, DOI 10.1109/32.922715
   Hayden RA, 2012, THEOR COMPUT SCI, V413, P106, DOI 10.1016/j.tcs.2011.07.017
   Hayden RA, 2010, THEOR COMPUT SCI, V411, P2260, DOI 10.1016/j.tcs.2010.02.001
   Hermanns H, 2000, LECT NOTES COMPUT SC, V1945, P420
   Hermanns H., 2002, INTERACTING MARKOV C
   Hillston J., 1996, A Compositional Approach to Performance Modelling
   Knottenbelt W.J., 1999, Proceedings of the 3rd International Meeting on the Numerical Solution of Markov Chains NSMC, V99, P58
   Kuntz M, 2006, LECT NOTES COMPUT SC, V3925, P89
   Kwiatkowska M, 2002, LECT NOTES COMPUT SC, V2324, P200
   MARSAN MA, 1984, ACM T COMPUT SYST, V2, P93, DOI 10.1145/190.191
   Neave HR, 1978, STAT TABLES MATH ENG
   Serfozo R, 2009, PROBAB APPL SER, P1
   Sipser M., 2013, Introduction to the theory of computation, V3
   Stefanek A., 2011, Proceedings of the 2011 Eighth International Conference on Quantitative Evaluation of Systems (QEST 2011), P147, DOI 10.1109/QEST.2011.26
   Stefanek A., 2010, P 8 WORKSH QUANT ASP, P159
   Tari A, 2005, LECT NOTES COMPUT SC, V3670, P79
   WOODSIDE CM, 1994, SOFTWARE PRACT EXPER, V24, P1121, DOI 10.1002/spe.4380241203
NR 28
TC 11
Z9 12
U1 0
U2 10
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JAN
PY 2013
VL 39
IS 1
BP 97
EP 118
DI 10.1109/TSE.2012.1
PG 22
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 063KJ
UT WOS:000312996800005
DA 2024-07-18
ER

PT J
AU Mei, H
   Hao, D
   Zhang, LM
   Zhang, L
   Zhou, J
   Rothermel, G
AF Mei, Hong
   Hao, Dan
   Zhang, Lingming
   Zhang, Lu
   Zhou, Ji
   Rothermel, Gregg
TI A Static Approach to Prioritizing JUnit Test Cases
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Software testing; regression testing; test case prioritization; JUnit;
   call graph
ID CALL GRAPH CONSTRUCTION; COST
AB Test case prioritization is used in regression testing to schedule the execution order of test cases so as to expose faults earlier in testing. Over the past few years, many test case prioritization techniques have been proposed in the literature. Most of these techniques require data on dynamic execution in the form of code coverage information for test cases. However, the collection of dynamic code coverage information on test cases has several associated drawbacks including cost increases and reduction in prioritization precision. In this paper, we propose an approach to prioritizing test cases in the absence of coverage information that operates on Java programs tested under the JUnit framework-an increasingly popular class of systems. Our approach, JUnit test case Prioritization Techniques operating in the Absence of coverage information (JUPTA), analyzes the static call graphs of JUnit test cases and the program under test to estimate the ability of each test case to achieve code coverage, and then schedules the order of these test cases based on those estimates. To evaluate the effectiveness of JUPTA, we conducted an empirical study on 19 versions of four Java programs ranging from 2K-80K lines of code, and compared several variants of JUPTA with three control techniques, and several other existing dynamic coverage-based test case prioritization techniques, assessing the abilities of the techniques to increase the rate of fault detection of test suites. Our results show that the test suites constructed by JUPTA are more effective than those in random and untreated test orders in terms of fault-detection effectiveness. Although the test suites constructed by dynamic coverage-based techniques retain fault-detection effectiveness advantages, the fault-detection effectiveness of the test suites constructed by JUPTA is close to that of the test suites constructed by those techniques, and the fault-detection effectiveness of the test suites constructed by some of JUPTA's variants is better than that of the test suites constructed by several of those techniques.
C1 [Mei, Hong; Hao, Dan; Zhang, Lu] Peking Univ, Sch Elect Engn & Comp Sci, Inst Software, Beijing 100871, Peoples R China.
   [Mei, Hong; Hao, Dan; Zhang, Lu] Minist Educ, Key Lab High Confidence Software Technol, Beijing, Peoples R China.
   [Zhang, Lingming] Univ Texas Austin, Ctr Adv Res Software Engn ARiSE, Dept Elect & Comp Engn, Austin, TX 78712 USA.
   [Zhou, Ji] Baidu Com Inc, Beijing 100871, Peoples R China.
   [Rothermel, Gregg] Univ Nebraska, Dept Comp Sci & Engn, Lincoln, NE 68588 USA.
   [Rothermel, Gregg] Korea Adv Inst Sci & Technol, Div Web Sci & Technol, Taejon 305701, South Korea.
C3 Peking University; University of Texas System; University of Texas
   Austin; Baidu; University of Nebraska System; University of Nebraska
   Lincoln; Korea Advanced Institute of Science & Technology (KAIST)
RP Mei, H (corresponding author), Peking Univ, Sch Elect Engn & Comp Sci, Inst Software, Beijing 100871, Peoples R China.
EM meih@pku.edu.cn; haod@sei.pku.edu.cn; zhanglm10@gmail.com;
   zhanglu@sei.pku.edu.cn; zhouji@baidu.com; grother@cse.unl.edu
RI Hao, Dan/A-8600-2015
OI Hao, Dan/0000-0001-8295-303X
FU National Basic Research Program of China [2009CB320703]; Science Fund
   for Creative Research Groups of China [61121063]; National Natural
   Science Foundation of China [91118004, 60803012]; US National Science
   Foundation (NSF) [CNS-0454203]; World Class University program under the
   National Research Foundation of Korea; Ministry of Education, Science
   and Technology of Korea [R31-30007]; Direct For Computer & Info Scie &
   Enginr; Division Of Computer and Network Systems [0958346] Funding
   Source: National Science Foundation; Division Of Computer and Network
   Systems; Direct For Computer & Info Scie & Enginr [0958235, 0958199,
   0958231] Funding Source: National Science Foundation
FX This work is supported by the National Basic Research Program of China
   under Grant No. 2009CB320703, the Science Fund for Creative Research
   Groups of China under Grant No. 61121063, and the National Natural
   Science Foundation of China under Grant Nos. 91118004 and 60803012. This
   work has also been supported by the US National Science Foundation (NSF)
   under grant CNS-0454203, and by the World Class University program under
   the National Research Foundation of Korea and funded by the Ministry of
   Education, Science and Technology of Korea (Project No. R31-30007).
CR [Anonymous], 1989, INSIGHTS REGRESSION
   [Anonymous], 1990, Software testing techniques {
   [Anonymous], INT S SOFTW TEST AN
   Apiwattanapong T, 2006, TAIC PART - TESTING: ACADEMIC & INDUSTRIAL CONFERENCE - PRACTICE AND RESEARCH TECHNIQUES, PROCEEDINGS, P137, DOI 10.1109/TAIC-PART.2006.18
   Arnold M, 2001, ACM SIGPLAN NOTICES, V36, P168, DOI 10.1145/381694.378832
   Bacon D. F., 1997, THESIS U CALIFORNIA
   Bacon DF, 1996, ACM SIGPLAN NOTICES, V31, P324, DOI 10.1145/236338.236371
   Ball T, 1996, PROCEEDINGS OF THE 29TH ANNUAL IEEE/ACM INTERNATIONAL SYMPOSIUM ON MICROARCHITECTURE - MICRO-29, P46, DOI 10.1109/MICRO.1996.566449
   Bryce RC, 2011, IEEE T SOFTWARE ENG, V37, P48, DOI 10.1109/TSE.2010.12
   Chittimalli PK, 2007, PROC IEEE INT CONF S, P164, DOI 10.1109/ICSM.2007.4362629
   Dean J, 1995, LECT NOTES COMPUT SC, V952, P77, DOI 10.1007/3-540-49538-x_5
   Do H, 2005, PROC IEEE INT CONF S, P411
   Do H, 2006, EMPIR SOFTW ENG, V11, P33, DOI 10.1007/s10664-006-5965-8
   Do HS, 2005, EMPIR SOFTW ENG, V10, P405, DOI 10.1007/s10664-005-3861-2
   Do H, 2006, IEEE T SOFTWARE ENG, V32, P733, DOI 10.1109/TSE.2006.92
   Do H, 2010, IEEE T SOFTWARE ENG, V36, P593, DOI 10.1109/TSE.2010.58
   Do Hyunsook., 2008, Proceedings of the International Symposium on Software Testing and Analysis (ISSTA), P51
   Elbaum S, 2002, IEEE T SOFTWARE ENG, V28, P159, DOI 10.1109/32.988497
   Elbaum S, 2001, PROC INT CONF SOFTW, P329, DOI 10.1109/ICSE.2001.919106
   Elbaum S., 2001, P 7 INT SOFTW METR S, P169
   Grove D, 1997, ACM SIGPLAN NOTICES, V32, P108, DOI 10.1145/263700.264352
   Hao D, 2010, AUTOMAT SOFTW ENG, V17, P5, DOI 10.1007/s10515-009-0056-x
   Jeffrey D, 2007, IEEE T SOFTWARE ENG, V33, P108, DOI 10.1109/TSE.2007.18
   Jeffrey D, 2006, P INT COMP SOFTW APP, P411
   Jones JA, 2003, IEEE T SOFTWARE ENG, V29, P195, DOI 10.1109/TSE.2003.1183927
   Jones JA, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P467, DOI 10.1109/ICSE.2002.1007991
   Kim JM, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P119, DOI 10.1109/ICSE.2002.1007961
   Korel B, 2008, PROC IEEE INT CONF S, P247, DOI 10.1109/ICSM.2008.4658073
   Lhoták O, 2007, PASTE'07 PROCEEDINGS OF THE 2007 ACM SIGPLAN- SIGSOFT WORKSHOP ON PROGRAM ANALYSIS FOR SOFTWARE TOOLS & ENGINEERING, P37, DOI 10.1145/1251535.1251542
   Liang Z, 2009, WISM: 2009 INTERNATIONAL CONFERENCE ON WEB INFORMATION SYSTEMS AND MINING, PROCEEDINGS, P19, DOI 10.1109/WISM.2009.12
   Ma YS, 2005, SOFTW TEST VERIF REL, V15, P97, DOI 10.1002/stvr.308
   Ma ZK, 2008, ASIA PAC SOFWR ENG, P471, DOI 10.1109/APSEC.2008.63
   Murphy GC, 1996, PROC INT CONF SOFTW, P90, DOI 10.1109/ICSE.1996.493405
   Renieris M, 2003, 18TH IEEE INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P30, DOI 10.1109/ASE.2003.1240292
   Rothermel G, 2001, IEEE T SOFTWARE ENG, V27, P929, DOI 10.1109/32.962562
   Rothermel G., 1999, Proceedings IEEE International Conference on Software Maintenance - 1999 (ICSM'99). `Software Maintenance for Business Change' (Cat. No.99CB36360), P179, DOI 10.1109/ICSM.1999.792604
   Shivers O. G., 1991, THESIS CARNEGIE MELL
   Srikanth H, 2005, 2005 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING (ISESE), PROCEEDINGS, P62, DOI 10.1109/ISESE.2005.1541815
   Tikir M. M., 2002, Software Engineering Notes, V27, P86, DOI 10.1145/566171.566186
   Tip F, 2000, ACM SIGPLAN NOTICES, V35, P281, DOI 10.1145/354222.353190
   Tonella P, 2006, PROC IEEE INT CONF S, P123
   Walcott K.R., 2006, P INT S SOFTW TEST A, P1, DOI DOI 10.1145/1146238.1146240
   Wang WE, 1997, EIGHTH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P264, DOI 10.1109/ISSRE.1997.630875
   Zhang L, 2009, ISSTA 2009: INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P213
NR 44
TC 98
Z9 109
U1 1
U2 21
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD NOV-DEC
PY 2012
VL 38
IS 6
BP 1258
EP 1275
DI 10.1109/TSE.2011.106
PG 18
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 043PI
UT WOS:000311556100002
DA 2024-07-18
ER

PT J
AU Arcuri, A
AF Arcuri, Andrea
TI A Theoretical and Empirical Analysis of the Role of Test Sequence Length
   in Software Testing for Structural Coverage
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Evolutionary testing; object-oriented software; state problem;
   search-based software engineering; software testing; length; test
   sequence
ID RUNTIME ANALYSIS
AB In the presence of an internal state, often a sequence of function calls is required to test software. In fact, to cover a particular branch of the code, a sequence of previous function calls might be required to put the internal state in the appropriate configuration. Internal states are not only present in object-oriented software, but also in procedural software (e. g., static variables in C programs). In the literature, there are many techniques to test this type of software. However, to the best of our knowledge, the properties related to the choice of the length of these sequences have received only a little attention in the literature. In this paper, we analyze the role that the length plays in software testing, in particular branch coverage. We show that, on "difficult" software testing benchmarks, longer test sequences make their testing trivial. Hence, we argue that the choice of the length of the test sequences is very important in software testing. Theoretical analyses and empirical studies on widely used benchmarks and on an industrial software are carried out to support our claims.
C1 Simula Res Lab, N-1325 Lysaker, Norway.
RP Arcuri, A (corresponding author), Simula Res Lab, POB 134, N-1325 Lysaker, Norway.
EM arcuri@simula.no
FU Norwegian Research Council
FX The author wants to thank the anonymous reviewers for their useful
   comments on this paper and Muhammad Zohaib Iqbal for proofreading a
   draft of this paper. The work described in this paper was supported by
   the Norwegian Research Council. This paper was produced as part of the
   ITEA-2 project called VERDE. A conference version of this paper was
   published in the Proceedings IEEE International Conference on Software
   Testing, Verification and Validation (ICST) [6].
CR Andrews James H., 2008, 2008 23rd IEEE/ACM International Conference on Automated Software Engineering, P19, DOI 10.1109/ASE.2008.12
   [Anonymous], CSR0904 U BIRM
   [Anonymous], 2010, Proceedings of the 19th International Symposium on Software Testing and Analysis, ISSTA'10
   Arcuri Andrea, 2010, Proceedings of the Third IEEE International Conference on Software Testing, Verification and Validation (ICST 2010), P205, DOI 10.1109/ICST.2010.17
   Arcuri Andrea, 2008, 2008 IEEE International Conference on Software Testing Verification and Validation Workshop (ICSTW), P161, DOI 10.1109/ICSTW.2008.48
   Arcuri A., 2009, GECCO '09: Proceedings of the 11th Annual Conf. on Genetic and evolutionary computation, P1649
   Arcuri A., 2010, P IFIP INT C TEST SO
   Arcuri A, 2008, INFORM SCIENCES, V178, P3075, DOI 10.1016/j.ins.2007.11.024
   Arcuri A, 2009, LECT NOTES COMPUT SC, V5792, P156, DOI 10.1007/978-3-642-04944-6_13
   Arcuri A, 2009, 1ST INTERNATIONAL SYMPOSIUM ON SEARCH BASED SOFTWARE ENGINEERING, PROCEEDINGS, P113, DOI 10.1109/SSBSE.2009.16
   Baresi Luciano, 2010, Proceedings of the Third IEEE International Conference on Software Testing, Verification and Validation (ICST 2010), P185, DOI 10.1109/ICST.2010.54
   Ribeiro JCB, 2010, LECT NOTES COMPUT SC, V6021, P220, DOI 10.1007/978-3-642-12148-7_19
   Ribeiro JCB, 2009, INFORM SOFTWARE TECH, V51, P1534, DOI 10.1016/j.infsof.2009.06.009
   Cormen Thomas H., 2001, INTRO ALGORITHMS
   DURAN JW, 1984, IEEE T SOFTWARE ENG, V10, P438, DOI 10.1109/TSE.1984.5010257
   Fraser G., 2009, P INT WORKSH AUT SOF
   Harman M., 2009, TR0903 KINGS COLL
   HARMAN M., 2007, Proceedings of the the 6th joint meeting of the European software engineering conference and the ACM SIGSOFT symposium on The foundations of software engineering, P155, DOI DOI 10.1145/1287624.1287647
   Harman M, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P342, DOI 10.1109/FOSE.2007.29
   Harman M, 2010, IEEE T SOFTWARE ENG, V36, P226, DOI 10.1109/TSE.2009.71
   Harman Mark., 2007, Proceedings of the 2007 International Symposium on Software Testing and Analysis. ISSTA'07, P73, DOI [DOI 10.1145/1273463.1273475, http://doi.acm.org/10.1145/1273463.1273475]
   Inkumsah Kobi, 2008, 2008 23rd IEEE/ACM International Conference on Automated Software Engineering, P297, DOI 10.1109/ASE.2008.40
   Lakhotia Kiran., 2008, Proceedings of the Annual Conference on Genetic and Evolution- ary Computation (GECCO), P1759, DOI [10.1145/1389095.1389435, DOI 10.1145/1389095.1389435]
   Lehre P.K., 2010, INFORM SCI, P1882
   Lehre PK, 2009, FRONT COMPUT SCI CHI, V3, P64, DOI 10.1007/s11704-009-0006-6
   Lehre PK, 2007, IEEE C EVOL COMPUTAT, P1882
   Lehre PK, 2008, LECT NOTES COMPUT SC, V5361, P595
   Leitner Andreas, 2007, 22 IEEE ACM INT C AU, P417, DOI 10.1145/1321631.1321698
   McMinn P, 2004, SOFTW TEST VERIF REL, V14, P105, DOI 10.1002/stvr.294
   Motwani M., 1995, RANDOMIZED ALGORITHM
   Myers G J., 2004, The Art of Software Testing, V2nd ed.
   Oliveto PS, 2007, INT J AUTOM COMPUT, V4, P281, DOI 10.1007/s11633-007-0281-3
   Tonella P., 2004, Software Engineering Notes, V29, P119, DOI 10.1145/1013886.1007528
   Visser W., 2004, Software Engineering Notes, V29, P97, DOI 10.1145/1013886.1007526
   Visser W., 2006, P ACM SIGSOFT INT S, P37
   Wappler S, 2006, GECCO 2006: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOL 1 AND 2, P1925
   WHITLEY D, 1989, PROCEEDINGS OF THE THIRD INTERNATIONAL CONFERENCE ON GENETIC ALGORITHMS, P116
   Xie T, 2005, LECT NOTES COMPUT SC, V3440, P365
   Xie T, 2004, 19TH INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P196
NR 39
TC 18
Z9 19
U1 0
U2 9
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAY-JUN
PY 2012
VL 38
IS 3
BP 497
EP 519
DI 10.1109/TSE.2011.44
PG 23
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 947FP
UT WOS:000304414400001
DA 2024-07-18
ER

PT J
AU Dieste, O
   Juristo, N
AF Dieste, Oscar
   Juristo, Natalia
TI Systematic Review and Aggregation of Empirical Studies on Elicitation
   Techniques
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Elicitation methods; performance measures; experimentation; systematic
   literature review
ID KNOWLEDGE ELICITATION; REQUIREMENTS ELICITATION; ELICITING KNOWLEDGE;
   ACQUISITION; INFORMATION; REPRESENTATIONS; ATTRIBUTES; EXPERTS
AB We have located the results of empirical studies on elicitation techniques and aggregated these results to gather empirically grounded evidence. Our chosen surveying methodology was systematic review, whereas we used an adaptation of comparative analysis for aggregation because meta-analysis techniques could not be applied. The review identified 564 publications from the SCOPUS, IEEEXPLORE, and ACM DL databases, as well as Google. We selected and extracted data from 26 of those publications. The selected publications contain 30 empirical studies. These studies were designed to test 43 elicitation techniques and 50 different response variables. We got 100 separate results from the experiments. The aggregation generated 17 pieces of knowledge about the interviewing, laddering, sorting, and protocol analysis elicitation techniques. We provide a set of guidelines based on the gathered pieces of knowledge.
C1 [Dieste, Oscar; Juristo, Natalia] Univ Politecn Madrid, Fac Informat, Boadilla De Monte 28660, Spain.
C3 Universidad Politecnica de Madrid
RP Dieste, O (corresponding author), Univ Politecn Madrid, Fac Informat, Campus Montegancedo, Boadilla De Monte 28660, Spain.
EM odieste@fi.upm.es; natalia@fi.upm.es
RI Dieste, Oscar/K-6193-2014
OI Dieste, Oscar/0000-0002-3060-7853
FU Spanish MECD/Fulbright [FU2004-0589]; MICINN [TIN2008-00555]
FX This work was supported in part by Spanish MECD/Fulbright Grant
   FU2004-0589 and the MICINN grant TIN2008-00555. The authors also thank
   reviewers and TSE's EICs for their comments and suggestions for
   improvement.
CR ADELMAN L, 1986, ORGAN BEHAV HUM DEC, V37, P188, DOI 10.1016/0749-5978(86)90051-8
   ADELMAN L, 1989, IEEE T SYST MAN CYB, V19, P483, DOI 10.1109/21.31055
   Agarwal R., 1990, Journal of Management Information Systems, V7, P123
   [Anonymous], 1988, Qualitative research methods, DOI DOI 10.4135/9781412985000
   [Anonymous], P 24 EUR MARK AC C E
   Bech-Larsen T, 1999, J ECON PSYCHOL, V20, P315, DOI 10.1016/S0167-4870(99)00011-2
   Benson PG, 1995, MANAGE SCI, V41, P1639, DOI 10.1287/mnsc.41.10.1639
   Blandford A, 2002, INT J HUM-COMPUT ST, V57, P75, DOI 10.1006/ijhc.1013
   Boose J. H., 1989, Knowledge Acquisition, V1, P3, DOI 10.1016/S1042-8143(89)80003-2
   Breivik E, 2003, J ECON PSYCHOL, V24, P77, DOI 10.1016/S0167-4870(02)00156-3
   BRERETON OP, 2005, TR0501 KEELE U
   Browne GJ, 2001, J MANAGE INFORM SYST, V17, P223, DOI 10.1080/07421222.2001.11045665
   Browne GJ, 1997, MANAGE SCI, V43, P1, DOI 10.1287/mnsc.43.1.1
   Burton A. M., 1990, Knowledge Acquisition, V2, P167, DOI 10.1016/S1042-8143(05)80010-X
   BURTON AM, 1987, P SERC WORKSH KNOWL, P20
   BURTON AM, 1987, P 1 EUR WORKSH KNOWL
   BURTON AM, 1987, P EXP SYST 87 RES DE, V4
   BYRD TA, 1992, MIS QUART, V16, P117, DOI 10.2307/249704
   Campbell D.T., 2001, Experimental and quasiexperimental designs for generalized causal inference
   CAMPBELL DT, 1969, AM PSYCHOL, V24, P409, DOI 10.1037/h0027982
   Chatzoglou PD, 1997, INFORM SOFTWARE TECH, V39, P627, DOI 10.1016/S0950-5849(97)00020-7
   *CONSTR SOFTW, 2008, CONT FREE REQ QUEST
   COOKE NJ, 1992, INT J MAN MACH STUD, V37, P721, DOI 10.1016/0020-7373(92)90065-S
   COOKE NJ, 1994, INT J HUM-COMPUT ST, V41, P801, DOI 10.1006/ijhc.1994.1083
   CORBRIDGE C, 1994, KNOWL ACQUIS, V6, P315, DOI 10.1006/knac.1994.1016
   Coughlan J., 2002, Requirements Engineering, V7, P47, DOI 10.1007/s007660200004
   CRANDALL BW, 1989, ACM SIGART B, V108, P144
   Davis A., 2006, P 14 IEEE INT C REQ, P11
   Dieste O, 2009, EMPIR SOFTW ENG, V14, P513, DOI 10.1007/s10664-008-9091-7
   Dixon-Woods Mary, 2005, J Health Serv Res Policy, V10, P45, DOI 10.1258/1355819052801804
   Duggan E. W., 2003, Information Technology & Management, V4, P391, DOI 10.1023/A:1025134318528
   Dybå T, 2006, INFORM SOFTWARE TECH, V48, P745, DOI 10.1016/j.infsof.2005.08.009
   Ericson K.A., 1984, PROTOCOL ANAL VERBAL
   Eva M, 2001, INFORM MANAGE, V39, P101, DOI 10.1016/S0378-7206(01)00082-9
   FISCHHOFF B, 1989, IEEE T SYST MAN CYB, V19, P448, DOI 10.1109/21.31052
   Fowlkes JE, 2000, HUM FACTORS, V42, P24, DOI 10.1518/001872000779656615
   FRANKEL S, 1987, J APPL BEHAV SCI, V23, P543
   FREEMAN LA, 2004, CONC MAPS THEOR METH
   Gammack J. G., 1990, Expert Systems, V7, P19, DOI 10.1111/j.1468-0394.1990.tb00160.x
   GAMMACK JG, 1985, KNOWL ACQUIS, P137
   Goguen J.A., 1993, 1993 P IEEE INT S RE, P152, DOI DOI 10.1109/ISRE.1993.324822
   Goodrich V., 1990, Proceedings of the Twenty-Third Annual Hawaii International Conference on System Sciences, P201, DOI 10.1109/HICSS.1990.205257
   GORDON SE, 1993, HUM FACTORS, V35, P459, DOI 10.1177/001872089303500305
   GRIFFIN A, 1993, MARKET SCI, V12, P1, DOI 10.1287/mksc.12.1.1
   Hart A., 1986, KNOWLEDGE ACQUISITIO
   Hedges LV., 2014, STAT METHODS META AN
   HICKEY AM, 2003, P 9 ANN AM C INFORM
   Hodgkinson GP, 2004, ORGAN RES METHODS, V7, P3, DOI 10.1177/1094428103259556
   HOFFMAN RR, 1987, AI MAG, V8, P53
   HOFFMAN RR, 1995, ORGAN BEHAV HUM DEC, V62, P129, DOI 10.1006/obhd.1995.1039
   HOLSAPPLE CW, 1994, EXPERT SYST, V11, P77, DOI 10.1111/j.1468-0394.1994.tb00001.x
   Hudlicka E, 1996, PROCEEDINGS OF THE SECOND INTERNATIONAL CONFERENCE ON REQUIREMENTS ENGINEERING, P4, DOI 10.1109/ICRE.1996.491424
   Johnson L., 1987, KNOWLEDGE ELICITATIO, P91
   Jones SR, 1998, EXPERT SYST, V15, P83, DOI 10.1111/1468-0394.00067
   Juristo N, 2004, EMPIR SOFTW ENG, V9, P7, DOI 10.1023/B:EMSE.0000013513.48963.1b
   Juristo N, 2006, IEEE SOFTWARE, V23, P72, DOI 10.1109/MS.2006.166
   KANWAR R, 1981, ADV CONSUM RES, V8, P122
   Kitchenham B., 2004, TRSE0401 KEELE U
   Kitchenham BA, 2002, IEEE T SOFTWARE ENG, V28, P721, DOI 10.1109/TSE.2002.1027796
   KORHONEN LJ, 1990, ADULT LEARNING METHO, P247
   Kotonya G., 1998, Requirements engineering: processes and techniques
   LAFRANCE M, 1986, P KNOWL ACQ KNOWL BA
   LARSEN TJ, 1992, INFORM MANAGE, V22, P29, DOI 10.1016/0378-7206(92)90004-Y
   LAUESEN S, 2002, SOFTWARE REQUIREMENT
   LINES R, 1995, METHOD EFFECTS ATTRI
   Lloyd WJ, 2002, IEEE JOINT INTERNATIONAL CONFERENCE ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P311, DOI 10.1109/ICRE.2002.1048544
   Macaulay L.A., 1996, Requirements engineering
   Macdonald GM, 2006, COCHRANE DB SYST REV, DOI 10.1002/14651858.CD001930.pub2
   MAHMOOD MA, 1987, MIS QUART, V11, P293, DOI 10.2307/248674
   Maiden NAM, 1996, SOFTWARE ENG J, V11, P183, DOI 10.1049/sej.1996.0024
   Marakas GM, 1998, INFORM SYST RES, V9, P37, DOI 10.1287/isre.9.1.37
   MARTINEZBEJAR R, 1996, P 10 KNOWL ACQ KNOWL
   Massey A. P., 1991, IEEE Transactions on Knowledge and Data Engineering, V3, P193, DOI 10.1109/69.87999
   MOHER D, 1995, CONTROL CLIN TRIALS, V16, P62, DOI 10.1016/0197-2456(94)00031-W
   Moody J. W., 1998, Journal of Management Information Systems, V15, P79
   Moody JW, 1996, EXPERT SYST APPL, V10, P127, DOI 10.1016/0957-4174(95)00039-9
   Moore JM, 2000, FIFTEENTH IEEE INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P35, DOI 10.1109/ASE.2000.873648
   Munro M.C., 1977, MIS QUART, V1, P55, DOI DOI 10.2307/249168
   MUSEN MA, 1987, INT J MAN MACH STUD, V26, P105, DOI 10.1016/S0020-7373(87)80039-1
   Ocker R., 1995, Journal of Management Information Systems, V12, P127
   Paterson B.L., 2001, Meta-study of qualitative health research: A practical guide to meta-analysis and meta-synthesis
   Pfleeger SL, 2005, IEEE SOFTWARE, V22, P66, DOI 10.1109/MS.2005.19
   Pitts MG, 2004, J MANAGE INFORM SYST, V21, P203, DOI 10.1080/07421222.2004.11045795
   Ragin C., 1987, COMP METHOD MOVING B
   Robertson S, 2001, INT J HUM-COMPUT ST, V55, P405, DOI 10.1006/ijhc.2001.0481
   Rowe AL, 1996, J EXP PSYCHOL-APPL, V2, P31, DOI 10.1037/1076-898X.2.1.31
   Rugg G., 1992, Knowledge Acquisition, V4, P279, DOI 10.1016/1042-8143(92)90019-W
   Schweickert R., 1987, Artificial Intelligence Review, V1, P245, DOI 10.1007/BF00142925
   SHADBOLT NR, 1989, ACM SIGART B, V108, P15
   Shekelle PG, 2003, JAMA-J AM MED ASSOC, V289, P1537, DOI 10.1001/jama.289.12.1537
   SILVER JA, 1991, THESIS MASSACHUSETTS
   Straus S.E., 2005, Evidence-based medicine
   Sutcliffe A, 1997, RE '97 - PROCEEDINGS OF THE THIRD IEEE INTERNATIONAL SYMPOSIUM ON REQUIREMENTS ENGINEERING, P65, DOI 10.1109/ISRE.1997.566843
   SUTCLIFFE A, 1995, P S DES INT SYST PRO, P33
   Tan M., 1994, Journal of Management Information Systems, V10, P159
   Tawbi M., 1999, Proceedings. Tenth International Workshop on Database and Expert Systems Applications. DEXA 99, P345, DOI 10.1109/DEXA.1999.795191
   Wood J., 1995, Joint Application Development
   WOOD LE, 1995, INT J EXPERT SYST, V8, P1
   YIN RK, 1975, ADMIN SCI QUART, V20, P371, DOI 10.2307/2391997
   Zmud R. W., 1993, Journal of Management Information Systems, V9, P175
   ZMUD RW, 1992, CHALLENGES STRATEGIE, P337
NR 101
TC 74
Z9 78
U1 0
U2 31
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAR-APR
PY 2011
VL 37
IS 2
BP 283
EP 304
DI 10.1109/TSE.2010.33
PG 22
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science; Engineering
GA 739ZL
UT WOS:000288760900009
DA 2024-07-18
ER

PT J
AU Artzi, S
   Kiezun, A
   Dolby, J
   Tip, F
   Dig, D
   Paradkar, A
   Ernst, MD
AF Artzi, Shay
   Kiezun, Adam
   Dolby, Julian
   Tip, Frank
   Dig, Danny
   Paradkar, Amit
   Ernst, Michael D.
TI Finding Bugs in Web Applications Using Dynamic Test Generation and
   Explicit-State Model Checking
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article; Proceedings Paper
CT International Symposium on Software Testing and Analysis
CY JUL 20-24, 2008
CL Seattle, WA
DE Software testing; Web applications; dynamic analysis; PHP; reliability;
   verification
ID TOOL
AB Web script crashes and malformed dynamically generated webpages are common errors, and they seriously impact the usability of Web applications. Current tools for webpage validation cannot handle the dynamically generated pages that are ubiquitous on today's Internet. We present a dynamic test generation technique for the domain of dynamic Web applications. The technique utilizes both combined concrete and symbolic execution and explicit-state model checking. The technique generates tests automatically, runs the tests capturing logical constraints on inputs, and minimizes the conditions on the inputs to failing tests so that the resulting bug reports are small and useful in finding and fixing the underlying faults. Our tool Apollo implements the technique for the PHP programming language. Apollo generates test inputs for a Web application, monitors the application for crashes, and validates that the output conforms to the HTML specification. This paper presents Apollo's algorithms and implementation, and an experimental evaluation that revealed 673 faults in six PHP Web applications.
C1 [Artzi, Shay; Dolby, Julian; Tip, Frank; Paradkar, Amit] IBM Corp, Thomas J Watson Res Ctr, Yorktown Hts, NY 10598 USA.
   [Kiezun, Adam] Harvard Univ, Sch Med, Brigham & Womens Hosp, Cambridge, MA 02138 USA.
   [Dig, Danny] Univ Illinois, Urbana, IL 61820 USA.
   [Ernst, Michael D.] Univ Washington, Seattle, WA 98195 USA.
C3 International Business Machines (IBM); Harvard University; Brigham &
   Women's Hospital; University of Illinois System; University of Illinois
   Urbana-Champaign; University of Washington; University of Washington
   Seattle
RP Artzi, S (corresponding author), IBM Corp, Thomas J Watson Res Ctr, Yorktown Hts, NY 10598 USA.
EM artzi@us.ibm.com; akiezun@rics.bwh.harvard.edu; dolby@us.ibm.com;
   ftip@us.ibm.com; dig@illinois.edu; paradkar@us.ibm.com;
   mernst@cs.washington.edu
CR Anand S, 2008, LECT NOTES COMPUT SC, V4963, P367, DOI 10.1007/978-3-540-78800-3_28
   Artzi Shay., 2008, P 2008 INT S SOFTWAR, P261, DOI [10.1145/1390630.1390662, DOI 10.1145/1390630.1390662]
   BENEDIKT M, 2002, P INT C WORLD WID WE
   BRUMLEY D, 2007, P 16 USENIX SEC S
   Cadar C, 2005, LECT NOTES COMPUT SC, V3639, P2
   Cadar C., 2008, OSDI, V8, P209, DOI DOI 10.5555/1855741.1855756
   Cadar C., 2006, CCS '06: Proceedings of the 13th ACM conference on Computer and communications security, New York, NY, USA, P322
   CLAUSE J, 2009, P INT S SOFTW TEST A
   Cleve H, 2005, PROC INT CONF SOFTW, P342
   Csallner C, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P281, DOI 10.1145/1368088.1368127
   Demartini C, 1999, SOFTWARE PRACT EXPER, V29, P577, DOI 10.1002/(SICI)1097-024X(199906)29:7<577::AID-SPE246>3.0.CO;2-V
   Emmi M., 2007, Proceedings of the 2007 international symposium on Software testing and analysis, P151
   Godefroid P, 2008, PLDI'08: PROCEEDINGS OF THE 2008 SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN & IMPLEMENTATION, P206, DOI 10.1145/1375581.1375607
   Godefroid Patrice, 2007, P 34 ANN ACM SIGPLAN, DOI [10.1145/1190216.1190226, DOI 10.1145/3385412.3386014]
   Godefroid Patrice, 2005, ACM SIGPLAN NOTICES, P213, DOI DOI 10.1145/1064978.1065036
   Godefroid Patrice, 2008, NDSS, V8, P151
   HALFOND WG, 2009, P INT S SOFTW TEST A
   Halfond WilliamG. J., 2007, P THE 6 JOINT M EURO, P145
   Havelund K., 2000, International Journal on Software Tools for Technology Transfer (STTT), V2, P366, DOI [10.1007/s100090050043., DOI 10.1007/S100090050043]
   Holzmann GJ, 1997, IEEE T SOFTWARE ENG, V23, P279, DOI 10.1109/32.588521
   Huang Yao-Wen, 2003, Proceedings of the 12th International Conference on World Wide Web, P148
   Huang YW, 2004, 2004 INTERNATIONAL CONFERENCE ON DEPENDABLE SYSTEMS AND NETWORKS, PROCEEDINGS, P199
   INKUMSAH K, 2007, P IEEE ACM INT C AUT
   JOHNS M, 2007, P ACM S APPL COMP
   Jovanovic N, 2006, P IEEE S SECUR PRIV, P258, DOI 10.1109/SP.2006.29
   KIEZUN A, 2009, P INT S SOFTW TEST A
   Kiezun A, 2009, PROC INT CONF SOFTW, P199, DOI 10.1109/ICSE.2009.5070521
   Livshits Benjamin., 2006, SecuriFly: Runtime Protection and Recovery from Web Application Vulnerabilities
   Majumdar R, 2007, PROC INT CONF SOFTW, P416
   Majumdar Rupak, 2007, 22 IEEE ACM INT C AU, P134
   McAllister S, 2008, LECT NOTES COMPUT SC, V5230, P191, DOI 10.1007/978-3-540-87403-4_11
   MINAMIDE Y, 2005, P INT C WORLD WID WE
   Misherghi G., 2006, Proceedings of the 28th International Conference on Software Engineering, P142, DOI [DOI 10.1145/1134285.1134307, 10.1145/1134285.1134307]
   NGUYENTUONG A, 2005, P INT C INF SEC
   OCALLAHAN R, 2008, COMMUNICATION
   Pietraszek T, 2006, LECT NOTES COMPUT SC, V3858, P124
   Sen K., 2005, P 10 EUR SOFTW ENG C, V30, P263, DOI DOI 10.1145/1081706.1081750
   SINHA S, 2009, P INT S SOFTW TEST A
   Su Z., 2006, Conference record of the 33rd ACM SIGPLAN-SIGACT symposium on principles of programming languages, P372, DOI DOI 10.1145/1111037.1111070
   VISSER W, 2006, P INT S SOFTW TEST A, P37, DOI DOI 10.1145/1146238.1146243
   Wagner D, 2001, P IEEE S SECUR PRIV, P156, DOI 10.1109/SECPRI.2001.924296
   Wassermann G., 2008, Proceedings of the ACM/SIGSOFT International Symposium on Software Testing and Analysis (ISSTA 2008), P249
   Wassermann G, 2007, PLDI'07: PROCEEDINGS OF THE 2007 ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P32, DOI 10.1145/1250734.1250739
   Wassermann G, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P171, DOI 10.1145/1368088.1368112
   Xie YC, 2006, USENIX Association Proceedings of the 15th USENIX Security Symposium, P179
   Zeller A, 1999, LECT NOTES COMPUT SC, V1687, P253, DOI 10.1145/318774.318946
   ZOUFALY F, 2008, WEB STANDARDS SEARCH
NR 47
TC 66
Z9 89
U1 0
U2 7
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUL-AUG
PY 2010
VL 36
IS 4
BP 474
EP 494
DI 10.1109/TSE.2010.31
PG 21
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Engineering
GA 631LE
UT WOS:000280347600003
DA 2024-07-18
ER

PT J
AU Beckman, NE
   Nori, AV
   Rajamani, SK
   Simmons, RJ
   Tetali, SD
   Thakur, AV
AF Beckman, Nels E.
   Nori, Aditya V.
   Rajamani, Sriram K.
   Simmons, Robert J.
   Tetali, Sai Deep
   Thakur, Aditya V.
TI Proofs from Tests
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article; Proceedings Paper
CT International Symposium on Software Testing and Analysis
CY JUL 20-24, 2008
CL Seattle, WA
DE Software model checking; directed testing; abstraction refinement
AB We present an algorithm DASH to check if a program P satisfies a safety property phi. The unique feature of this algorithm is that it uses only test generation operations, and it refines and maintains a sound program abstraction as a consequence of failed test generation operations. Thus, each iteration of the algorithm is inexpensive, and can be implemented without any global may-alias information. In particular, we introduce a new refinement operator WP alpha that uses only the alias information obtained by symbolically executing a test to refine abstractions in a sound manner. We present a full exposition of the DASH algorithm and its theoretical properties. We have implemented DASH in a tool called YOGI that plugs into Microsoft's Static Driver Verifier framework. We have used this framework to run YOGI on 69 Windows Vista drivers with 85 properties and find that YOGI scales much better than SLAM, the current engine driving Microsoft's Static Driver Verifier.
C1 [Beckman, Nels E.] Carnegie Mellon Univ, Inst Software Res, Pittsburgh, PA 15213 USA.
   [Nori, Aditya V.; Rajamani, Sriram K.] Microsoft Res India, Bangalore 560080, Karnataka, India.
   [Tetali, Sai Deep] Univ Calif Los Angeles, Dept Comp Sci, Los Angeles, CA 90095 USA.
   [Thakur, Aditya V.] Univ Wisconsin, Dept Comp Sci, Madison, WI 53706 USA.
C3 Carnegie Mellon University; Microsoft; University of California System;
   University of California Los Angeles; University of Wisconsin System;
   University of Wisconsin Madison
RP Beckman, NE (corresponding author), Carnegie Mellon Univ, Inst Software Res, Pittsburgh, PA 15213 USA.
EM nbeckman@cs.cmu.edu; adityan@microsoft.com; sriram@microsoft.com;
   rjsimmon@cs.cmu.edu; saideep@cs.ucla.edu; adi@cs.wisc.edu
RI Thakur, Aditya/AAZ-1336-2021
OI Simmons, Robert/0000-0003-2420-3067
CR [Anonymous], 2001, P ACM SIGPLAN 2001 C, DOI DOI 10.1145/378795.378846
   [Anonymous], 1997, A Discipline of Programming
   [Anonymous], 2006, P ACM C COMP COMM SE
   BALL T, COMMUNICATION
   Ball T., 2001, MSRTR200121
   BALL T, 2001, P 8 INT SPIN WORKSH, P103
   BARNETT M, P FORM METH COMP OBJ, P364
   BECKMAN NE, 2008, P INT S SOFTW TEST A, P103
   CLARKE EM, 2000, P COMP AID VER, P154
   Cook B, 2006, ACM SIGPLAN NOTICES, V41, P415, DOI 10.1145/1133981.1134029
   de Moura L., 2008, P TOOLS ALG CONSTR A
   DETLEFS DL, 1998, 159 COMP SYST RES CE
   DIJKSTRA EW, 1972, COMMUN ACM, V15, P859, DOI 10.1145/355604.361591
   Godefroid P., 2007, SIGPLAN Notices, V42, P47, DOI [10.1145/1190216.1190226, 10.1145/1190215.1190226]
   Godefroid P, 2005, LECT NOTES COMPUT SC, V3771, P20
   GODEFROID P, 2010, P PRINC PROGR LANG
   Godefroid Patrice, 2005, ACM SIGPLAN NOTICES, P213, DOI DOI 10.1145/1064978.1065036
   GULAVANI BS, 2006, P 14 ANN S FDN SOFTW, P117
   Gunter E, 2005, FORM ASP COMPUT, V17, P201, DOI 10.1007/s00165-005-0059-8
   Henzinger T. A., 2004, SIGPLAN Notices, V39, P232, DOI 10.1145/982962.964021
   Henzinger ThomasA., 2002, Proc. of the Symposium on Principles of Programming Languages. POPL, P58
   KROENING D, 2004, P INT C FORM ENG MET, P224
   Majumdar R., 2007, UCBEECS200736
   NAMJOSHI KS, 2000, P CAV, P435
   Qadeer S., 2004, P ACM SIGPLAN C PROG, P14
   Sen K., 2005, P 10 EUR SOFTW ENG C, V30, P263, DOI DOI 10.1145/1081706.1081750
   Yorsh G., 2006, ISSTA 06 P 2006 INT, P145
NR 27
TC 29
Z9 30
U1 0
U2 1
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUL-AUG
PY 2010
VL 36
IS 4
BP 495
EP 508
DI 10.1109/TSE.2010.49
PG 14
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Engineering
GA 631LE
UT WOS:000280347600004
DA 2024-07-18
ER

PT J
AU Horwitz, S
   Liblit, B
   Polishchuk, M
AF Horwitz, Susan
   Liblit, Ben
   Polishchuk, Marina
TI Better Debugging via Output Tracing and Callstack-Sensitive Slicing
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Static program slicing; callstack-sensitive analysis; points of failure;
   output tracing and attribution
AB Debugging often involves 1) finding the point of failure (the first statement that produces bad output) and 2) finding and fixing the actual bug. Print statements and debugger break points can help with step 1. Slicing the program back from values used at the point of failure can help with step 2. However, neither approach is ideal: Debuggers and print statements can be clumsy and time-consuming and backward slices can be almost as large as the original program. This paper addresses both problems. We present callstack-sensitive slicing, which reduces slice sizes by leveraging the series of calls active when a program fails. We also show how slice intersections may further reduce slice sizes. We then describe a set of tools that identifies points of failure for programs that produce bad output. Finally, we apply our point-of-failure tools to a suite of buggy programs and evaluate callstack-sensitive slicing and slice intersection as applied to debugging. Callstack-sensitive slicing is very effective: On average, a callstack-sensitive slice is about 0.31 time the size of the corresponding full slice, down to just 0.06 time in the best case. Slice intersection is less impressive, on average, but may sometimes prove useful in practice.
C1 [Horwitz, Susan; Liblit, Ben] Univ Wisconsin, Dept Comp Sci, Madison, WI 53706 USA.
   [Polishchuk, Marina] Microsoft Corp, Redmond, WA 98052 USA.
C3 University of Wisconsin System; University of Wisconsin Madison;
   Microsoft
RP Horwitz, S (corresponding author), Univ Wisconsin, Dept Comp Sci, 1210 W Dayton St, Madison, WI 53706 USA.
EM horwitz@cs.wisc.edu; liblit@cs.wisc.edu; marinapo@microsoft.com
OI Liblit, Ben/0000-0002-2245-2839
FU AFOSR [FA9550-07-1-0210]; LLNL [B580360]; US National Science Foundation
   (NSF) [CCF-0621487, CCF-0701957, CCR-0305387, CNS-0720565]
FX This work was supported in part by AFOSR grant FA9550-07-1-0210; LLNL
   contract B580360; and the US National Science Foundation (NSF) grants
   CCF-0621487, CCF-0701957, CCR-0305387, and CNS-0720565. Any opinions,
   findings, and conclusions, or recommendations expressed in this material
   are those of the authors and do not necessarily reflect the views of the
   NSF or other institutions. M. Polishchuk was with the University of
   Wisconsin-Madison when this work was performed.
CR AGRAWAL H, 1993, SOFTWARE PRACT EXPER, V23, P589, DOI 10.1002/spe.4380230603
   [Anonymous], PLDI 04 P ACM SIGPLA
   [Anonymous], WISC PROGR SLIC TOOL
   [Anonymous], 1993, Partial Evaluation and Automatic Program Generation
   Binkley D, 1997, IEEE T SOFTWARE ENG, V23, P498, DOI 10.1109/32.624306
   Binkley D., 2003, P 2003 INT C SOFTW M
   Binkley D, 2006, THEOR COMPUT SCI, V360, P23, DOI 10.1016/j.tcs.2006.01.012
   Binkley D, 2006, SCI COMPUT PROGRAM, V62, P228, DOI 10.1016/j.scico.2006.04.007
   Danicic S, 2000, PROC IEEE INT CONF S, P216, DOI 10.1109/ICSM.2000.883049
   Daoudi M, 2002, NINTH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P109, DOI 10.1109/WCRE.2002.1173069
   DO GRH, 2005, EMPIR SOFTW ENG, V10, P405
   FIELD J, 1995, P 22 ACM S PRINC PRO, P379
   Fox C, 2001, PROG COMPREHEN, P89, DOI 10.1109/WPC.2001.921717
   Francis P, 2004, 15TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P451, DOI 10.1109/ISSRE.2004.43
   *FREE SOFTW FDN, 2001, GNU C LIB
   *FREE SOFTW FDN, 2006, GNU BIN
   GALLAGHER KB, 1991, IEEE T SOFTWARE ENG, V17, P751, DOI 10.1109/32.83912
   *GRAMMATECH, 2006, COD
   Gupta R., 1997, ACM Transactions on Software Engineering and Methodology, V6, P370, DOI 10.1145/261640.261644
   GUPTA R, 2006, COMMUNICATION
   HARAN M, 2005, P 10 EUR SOFTW ENG C, P146
   Harman M, 2003, J SYST SOFTWARE, V68, P45, DOI 10.1016/S0164-1212(02)00135-8
   HORWITZ S, 1990, ACM T PROGR LANG SYS, V12, P26, DOI [10.1145/77606.77608, 10.1145/960116.53994]
   HUTCHINS M, 1994, PROC INT CONF SOFTW, P191, DOI 10.1109/ICSE.1994.296778
   KOREL B, 1988, INFORM PROCESS LETT, V29, P155, DOI 10.1016/0020-0190(88)90054-3
   Krinke J, 2004, FOURTH IEEE INTERNATIONAL WORKSHOP ON SOURCE CODE ANALYSIS AND MANIPULATION, PROCEEDINGS, P29
   Krinke J, 2006, J SYST SOFTWARE, V79, P1249, DOI 10.1016/j.jss.2006.02.040
   Mulhern A., 2008, 1639 U WISC MAD
   Nishimatsu A., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P422, DOI 10.1109/ICSE.1999.841032
   REPS T, 1994, P ACM SIGSOFT 94 S F, P11
   Rothermel Gregg., 2006, Software-artifact infrastructure repository
   Stallman R.M., 2006, USING GNU COMPILER C
   Veillard Daniel., 2006, XML C PARSER TOOLKIT
   Vokolos FI, 1998, PROC IEEE INT CONF S, P44, DOI 10.1109/ICSM.1998.738488
   WEISER M, 1984, IEEE T SOFTWARE ENG, V10, P352, DOI 10.1109/TSE.1984.5010248
   Wong WE, 1997, P INT COMP SOFTW APP, P522, DOI 10.1109/CMPSAC.1997.625062
   Zhan XZ, 2005, MATH INTELL, V27, P4, DOI 10.1007/BF02985850
   Zheng Alice X., 2006, INT C MACH LEARN, P1105, DOI DOI 10.1145/1143844.1143983
NR 38
TC 12
Z9 17
U1 0
U2 5
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JAN-FEB
PY 2010
VL 36
IS 1
BP 7
EP 19
DI 10.1109/TSE.2009.66
PG 13
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 548TI
UT WOS:000273988900003
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Henkel, J
   Reichenbach, C
   Diwan, A
AF Henkel, Johannes
   Reichenbach, Christoph
   Diwan, Amer
TI Discovering documentation for Java container classes
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE program documentation; algebraic specifications; specification inference
ID INFERENCE; SPECIFICATION; TOOL
AB Modern programs make extensive use of reusable software libraries. For example, we found that 17 percent to 30 percent of the classes in a number of large Java applications use the container classes from the java. util package. Given this extensive code reuse in Java programs, it is important for the reusable interfaces to have clear and unambiguous documentation. Unfortunately, most documentation is expressed in English and, therefore, does not always satisfy these requirements. Worse yet, there is no way of checking that the documentation is consistent with the associated code. Formal specifications present an alternative that does not suffer from these problems; however, formal specifications are notoriously hard to write. To alleviate this difficulty, we have implemented a tool that automatically derives documentation in the form of formal specifications. Our tool probes Java classes by invoking them on dynamically generated tests and captures the information observed during their execution as algebraic axioms. Although the tool is not complete or correct from a formal perspective, we demonstrate that it discovers many useful axioms when applied to container classes. These axioms then form an initial formal documentation of the class they describe.
C1 Google, Mountain View, CA 94043 USA.
   Univ Colorado, Dept Comp Sci, Boulder, CO 80309 USA.
C3 Google Incorporated; University of Colorado System; University of
   Colorado Boulder
RP Henkel, J (corresponding author), Google, 1600 Amphitheatre Pkwy, Mountain View, CA 94043 USA.
EM johannes@google.com; reichenb@colorado.edu; diwan@colorado.edu
OI Reichenbach, Christoph/0000-0003-0608-7023
CR Ammons G, 2002, ACM SIGPLAN NOTICES, V37, P4, DOI 10.1145/565816.503275
   ANGLUIN D, 1982, J ACM, V29, P741, DOI 10.1145/322326.322334
   [Anonymous], 1982, Algorithmic Program Debugging
   [Anonymous], 1978, CURRENT TRENDS PROGR
   [Anonymous], P 12 ACM SIGSOFT
   [Anonymous], SCI COMPUTER PROGRAM
   Antoy S, 2000, IEEE T SOFTWARE ENG, V26, P55, DOI 10.1109/32.825766
   ANTOY S, 1989, P 5 INT WORKSH SOFTW
   Artzi Shay, 2006, P 1 WORKSH MOD BAS T, P2006
   Astesiano Egidio., 1999, ALGEBRAIC FDN SYSTEM
   BARTUSSEK W, 1978, P 2 C EUR COOP INF I
   Biermann A. W., 1976, IEEE Transactions on Software Engineering, VSE-2, P141, DOI 10.1109/TSE.1976.233812
   BIERMANN AW, 1978, IEEE T SYST MAN CYB, V8, P585, DOI 10.1109/TSMC.1978.4310035
   BIERMANN AW, 1972, ARTIF INTELL, V3, P181, DOI 10.1016/0004-3702(72)90048-3
   BOYAPATI C, 2002, P INT S SOFTW TEST A
   Buy U., 2000, P INT S SOFTW TEST A
   Chen Y, 1998, COMP MET WATER RES, V4, P3
   DELINE R, 2004, TYPESTATES OBJECTS
   Dodoo N., 2002, SELECTING PREDICATES
   DOONG R, 1994, ACM T SOFTWARE ENG M, V3
   Ernst M. D., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, P449, DOI 10.1109/ICSE.2000.870435
   Ernst MD, 2001, IEEE T SOFTWARE ENG, V27, P99, DOI 10.1109/32.908957
   GANNON J, 1981, ACM T PROGR LANG SYS, V3, P211, DOI 10.1145/357139.357140
   Graves TL, 2001, ACM T SOFTW ENG METH, V10, P184, DOI 10.1145/367008.367020
   Gries D., 1981, Texts and Monographs in Computer Science
   Guo PhilipJ., 2006, P 2006 INT S SOFTWAR, P255
   GUTTAG JV, 1978, ACTA INFORM, V10, P27, DOI 10.1007/BF00260922
   Hangal S, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P291, DOI 10.1109/ICSE.2002.1007976
   HARDER M, 2001, THESIS MIT
   HARDY S, 2001, P 4 INT JOINT C ART, V240, P75
   HELM R, 1990, P EUR C OBJ OR PROGR, P169
   Henkel J, 2004, PROC INT CONF SOFTW, P449, DOI 10.1109/ICSE.2004.1317467
   HENKEL J, 2004, CUCS98404 U COL
   HENKEL J, 2003, P 17 EUR C OBJ OR PR
   HENKEL J, 2004, CUCS97004 U COL BOUL
   HOARE CAR, 1969, COMMUN ACM, V12, P576, DOI 10.1145/363235.363259
   HOREBEEK IV, 1989, ALGEBRAIC SPECIFICAT
   HUGHES M, 1996, P INT S SOFTW TEST V
   Janicki R, 2001, IEEE T SOFTWARE ENG, V27, P577, DOI 10.1109/32.935852
   KAMIN S, 1983, ACM T PROGR LANG SYS, V5, P97, DOI 10.1145/357195.357202
   KATAOKA Y, 2001, P INT C SOFTW MAINT
   Lam P, 2004, ACM SIGPLAN NOTICES, V39, P46, DOI 10.1145/981009.981016
   Li Z., 2005, PR MINER AUTOMATICAL, V30, P306
   LOGOZZO F, 2004, AUTOMATIC INFERENCE
   Martena V., 2002, P IEEE INT C ENG COM
   Mitchell John C., 1996, Foundation of computing series
   Nandi M, 2005, LECT NOTES COMPUT SC, V3797, P77, DOI 10.1145/1094811.1094818
   Nimmer J.W., 2002, P INT S SOFTW TEST A
   Notkin D., 2000, UWCSE991102
   OCallahan R, 1997, PROC INT CONF SOFTW, P338, DOI 10.1145/253228.253351
   Plotkin G. D., 1975, Theoretical Computer Science, V1, P125, DOI 10.1016/0304-3975(75)90017-1
   Rugaber S, 2001, 16TH ANNUAL INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2001), PROCEEDINGS, P232, DOI 10.1109/ASE.2001.989809
   Sagiv M, 2002, ACM T PROGR LANG SYS, V24, P217, DOI 10.1145/514188.514190
   SANKAR S, 1991, P S TEST AN VER SEPT
   Sannella D., 1997, Formal Aspects of Computing, V9, P229, DOI 10.1007/BF01211084
   SUMMERS PD, 1977, J ACM, V24, P161, DOI 10.1145/321992.322002
   Tillmann N, 2006, LECT NOTES COMPUT SC, V4260, P717
   WOODWARD MR, 1993, SOFTWARE ENG J, V8, P211, DOI 10.1049/sej.1993.0027
   Zhu H, 1997, ACM COMPUT SURV, V29, P366, DOI 10.1145/267580.267590
   [No title captured]
NR 60
TC 29
Z9 35
U1 0
U2 4
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD AUG
PY 2007
VL 33
IS 8
BP 526
EP 543
DI 10.1109/TSE.2007.70705
PG 18
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 182ZJ
UT WOS:000247542200003
DA 2024-07-18
ER

PT J
AU Zhou, YM
   Leung, HT
AF Zhou, Yuming
   Leung, Hareton
TI Empirical analysis of object-oriented design metrics for predicting high
   and low severity faults
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE object-oriented; faults; fault-proneness; metrics; prediction; cross
   validation
ID SOFTWARE QUALITY; MODELS; VALIDATION
AB In the last decade, empirical studies on object-oriented design metrics have shown some of them to be useful for predicting the fault-proneness of classes in object-oriented software systems. This research did not, however, distinguish among faults according to the severity of impact. It would be valuable to know how object-oriented design metrics and class fault-proneness are related when fault severity is taken into account. In this paper, we use logistic regression and machine learning methods to empirically investigate the usefulness of object-oriented design metrics, specifically, a subset of the Chidamber and Kemerer suite, in predicting fault-proneness when taking fault severity into account. Our results, based on a public domain NASA data set, indicate that 1) most of these design metrics are statistically related to fault-proneness of classes across fault severity, and 2) the prediction capabilities of the investigated metrics greatly depend on the severity of faults. More specifically, these design metrics are able to predict low severity faults in fault-prone classes better than high severity faults in fault-prone classes.
C1 Hong Kong Polytech Univ, Dept Comp, Kowloon, Hong Kong, Peoples R China.
C3 Hong Kong Polytechnic University
RP Zhou, YM (corresponding author), Hong Kong Polytech Univ, Dept Comp, Kowloon, Hong Kong, Peoples R China.
EM csyzhou@comp.polyu.edu.hk; cshleung@inet.polyu.edu.hh
RI Leung, Hareton Kam Nang/O-5899-2014
OI Leung, Hareton Kam Nang/0000-0002-1766-7667
CR ALBERT A, 1984, BIOMETRIKA, V71, P1
   Alshayeb M, 2003, IEEE T SOFTWARE ENG, V29, P1043, DOI 10.1109/TSE.2003.1245305
   [Anonymous], 2002, P 2002 ACM SIGSOFT I
   Basili VR, 1996, IEEE T SOFTWARE ENG, V22, P751, DOI 10.1109/32.544352
   Belsley D. A., 2005, Regression Diagnostics: Identifying Influential Data and Sources of Collinearity
   Briand L. C., 2001, Empirical Software Engineering, V6, P11, DOI 10.1023/A:1009815306478
   Briand L. C., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P345, DOI 10.1109/ICSE.1999.841025
   Briand LC, 2000, J SYST SOFTWARE, V51, P245, DOI 10.1016/S0164-1212(99)00102-8
   Briand LC, 2002, ADV COMPUT, V56, P97, DOI 10.1016/S0065-2458(02)80005-5
   Briand LC, 2002, IEEE T SOFTWARE ENG, V28, P706, DOI 10.1109/TSE.2002.1019484
   Briand LC, 2001, IEEE T SOFTWARE ENG, V27, P963, DOI 10.1109/32.965338
   Briand LC, 1998, FIFTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM - METRICS 1998, PROCEEDINGS, P246, DOI 10.1109/METRIC.1998.731251
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   Chidamber SR, 1998, IEEE T SOFTWARE ENG, V24, P629, DOI 10.1109/32.707698
   Denaro G, 2003, INT J SOFTW ENG KNOW, V13, P395, DOI 10.1142/S0218194003001366
   Emam KE, 2001, IEEE T SOFTWARE ENG, V27, P630, DOI 10.1109/32.935855
   Fenton NE, 1999, IEEE T SOFTWARE ENG, V25, P675, DOI 10.1109/32.815326
   Gyimóthy T, 2005, IEEE T SOFTWARE ENG, V31, P897, DOI 10.1109/TSE.2005.112
   Hopkins WillG., 2003, A new view of statistics
   Khoshgoftaar TM, 2004, IEEE T EVOLUT COMPUT, V8, P593, DOI 10.1109/TEVC.2004.837108
   Lounis H, 2004, QSIC 2004: PROCEEDINGS OF THE FOURTH INTERNATIONAL CONFERENCE ON QUALITY SOFTWARE, P102
   Michalski R. S., 2001, Machine learning and its applications. Advanced lectures, P22
   Ohlsson N, 1996, IEEE T SOFTWARE ENG, V22, P886, DOI 10.1109/32.553637
   Ostrand TJ, 2005, IEEE T SOFTWARE ENG, V31, P340, DOI 10.1109/TSE.2005.49
   Ping Yu, 2002, Proceedings of the Sixth European Conference on Software Maintenance and Reengineering, P99, DOI 10.1109/CSMR.2002.995794
   PORTER AA, 1993, J SYST SOFTWARE, V20, P237, DOI 10.1016/0164-1212(93)90067-8
   ROSENBLATT EA, 1995, PSYCHIAT CLIN N AM, V18, P95, DOI 10.1016/S0193-953X(18)30073-X
   Subramanyam R, 2003, IEEE T SOFTWARE ENG, V29, P297, DOI 10.1109/TSE.2003.1191795
   Succi G, 2003, J SYST SOFTWARE, V65, P1, DOI 10.1016/S0164-1212(02)00024-9
   TANG MH, 1999, P 6 INT SOFTW METR S, P242, DOI DOI 10.1109/METRIC.1999.809745
   Thwin MMT, 2005, J SYST SOFTWARE, V76, P147, DOI 10.1016/j.jss.2004.05.001
NR 31
TC 180
Z9 222
U1 0
U2 10
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD OCT
PY 2006
VL 32
IS 10
BP 771
EP 789
DI 10.1109/TSE.2006.102
PG 19
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 096OC
UT WOS:000241385700002
DA 2024-07-18
ER

PT J
AU Niemelä, E
   Kalaoja, J
   Lago, P
AF Niemelä, E
   Kalaoja, J
   Lago, P
TI Toward an architectural knowledge base for wireless service engineering
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE service architecture; reference architecture; quality attribute; service
   category; wireless service
ID SOFTWARE
AB Wireless services are software-based services that exploit distribution infrastructure embedded in our everyday life as various communication and computing technologies. Service architecture defines concepts and principles to develop and maintain services to obtain the quality issues with minimum cost and faster time-to-market. In order to boost the development of wireless services, more effective means of using existing architectural know-how and artifacts are required. Our contribution is the architectural knowledge base that introduces three cornerstones: the service taxonomy, reference service architecture, and basic services that all together provide an efficient means of creating added value with wireless services. The service taxonomy assists in identifying the required functional and quality properties of services and the constraints of the underlying technology platforms. The reference architecture realizes the required properties, based on a selected set of architectural styles and patterns, and provides a skeleton upon which a new end-user service can be developed faster and more easily by using partially ready-made solutions, and furthermore, to keep the architectural knowledge base evolving at the same time. The architectural knowledge base has been validated in several research projects with industrial companies.
C1 VTT Tech Res Ctr Finland, FIN-90571 Oulu, Finland.
   Vrije Univ Amsterdam, Dept Comp Sci, NL-1081 HV Amsterdam, Netherlands.
C3 VTT Technical Research Center Finland; Vrije Universiteit Amsterdam
RP VTT Tech Res Ctr Finland, POB 1100,Kaitovayla 1, FIN-90571 Oulu, Finland.
EM eila.niemela@vtt.fi; jarmo.kalaoja@vtt.fi; patricia@cs.vu.nl
RI Lago, Patricia/ABH-2308-2020
OI Lago, Patricia/0000-0002-2234-0845; Ovaska, Eila/0000-0003-2114-3257
CR [Anonymous], 1996, Pattern oriented software architecture: a system of patters
   [Anonymous], 2000, PATTERN ORIENTED SOF
   ARAJURO I, 2002, P C PATT LANG PROGR
   Bass Len, 2012, SEI S SOFTW
   BELLA F, 2003, P INT C APPL EM TREN
   CARNELLEY P, 2001, OV FOR GLOB SOFTW MA
   Chung L., 2000, Non-functional Requirements in Software Engineering
   COSTA E, 1998, P ECOOP 98 WORKSH RE
   DOBRICA L, 2002, P IASTED INT C APPL
   DUENAS JC, 1998, P INT ESPRIT ARES WO
   *ETOM, 2003, TEL FOR
   Gamma Erich., 1994, DESIGN PATTERNS
   GEIBS K, 2001, COMPUTER, V34, P25
   Hofmeister C., 2000, APPL SOFTWARE ARCHIT
   *IEEE, 2000, STD14172999 IEEE
   *IEEE, 1998, STD10611998 IEEE
   IMMONEN A, 2004, P INT WWW INT C
   *ISO IEC, 2001, ISOIEC912612001 INT
   JAAKSI A, 1999, TRIED TRUE OBJECT DE
   KALAOJA J, 2003, P 16 INT C SOFTW SYS
   KALAOJA J, 2003, WISE CONSORTIUM DELI
   KALLIO P, 2003, P A CONC METH ISS AD
   KRUCHTEN PB, 1995, IEEE SOFTWARE, V12, P42, DOI 10.1109/52.469759
   LAGO P, 2002, P 4 INT C PROD FOC S
   MATINLASSI M, 2003, P EUR 2003 C
   MATINLASSI M, 2002, VTT PUBLICATIONS, V456
   Miller GA, 1904, ANN MATH, V6, P1, DOI 10.2307/2007151
   NIEMELA E, 2003, IEC ANN REV COMM, V56, P875
   NIEMELA E, 1998, P INT ESPRIT ARES WO
   NIEMELA E, 1998, P 3 INT WORKSH COMPO
   Ocampo A, 2003, IEEE T SOFTWARE ENG, V29, P1122, DOI 10.1109/TSE.2003.1265526
   *ODP, 1995, BAS REF MOD OP DIS 3
   *OMA, 2002, OP MOB ALL
   Oram A., 2001, Peer-to-Peer: Harnessing the Power of Disruptive Technologies
   Purhonen A, 2004, J SYST SOFTWARE, V69, P57, DOI 10.1016/S0164-1212(03)00050-5
   SCHULTZ F, 1995, NIST SPECIAL PUBLICA
   Taulavuori A, 2004, INFORM SOFTWARE TECH, V46, P535, DOI 10.1016/j.infsof.2003.10.004
   TIKKALA A, 2002, P INT C MOB UB MULT
   *TINA, 1997, SERV ARCH SPEC
   VASKIVUO T, 2003, VTT PUBLICATIONS, V490
   *WWRF, 2003, WIR WORLD RES FOR
NR 41
TC 19
Z9 20
U1 0
U2 3
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAY
PY 2005
VL 31
IS 5
BP 361
EP 379
DI 10.1109/TSE.2005.60
PG 19
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 929VC
UT WOS:000229373700001
DA 2024-07-18
ER

PT J
AU Elbaum, S
   Diep, M
AF Elbaum, S
   Diep, M
TI Profiling deployed software: Assessing strategies and testing
   opportunities
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article; Proceedings Paper
CT IEEE International Symposium on Software Testing and Analysis
CY JUL 11-14, 2004
CL Boston, MA
SP IEEE
DE profiling; instrumentation; software deployment; testing; empirical
   studies
AB An understanding of how software is employed in the field can yield many opportunities for quality improvements. Profiling released software can provide such an understanding. However, profiling released software is difficult due to the potentially large number of deployed sites that must be profiled, the transparency requirements at a user's site, and the remote data collection and deployment management process. Researchers have recently proposed various approaches to tap into the opportunities offered by profiling deployed systems and overcome those challenges. Initial studies have illustrated the application of these approaches and have shown their feasibility. Still, the proposed approaches, and the tradeoffs between overhead, accuracy, and potential benefits for the testing activity have been barely quantified. This paper aims to overcome those limitations. Our analysis of 1,200 user sessions on a 155 KLOC deployed system substantiates the ability of field data to support test suite improvements, assesses the efficiency of profiling techniques for released software, and the effectiveness of testing efforts that leverage profiled field data.
C1 Univ Nebraska, Dept Comp Sci & Engn, Lincoln, NE 68588 USA.
C3 University of Nebraska System; University of Nebraska Lincoln
RP Univ Nebraska, Dept Comp Sci & Engn, Lincoln, NE 68588 USA.
EM elbaum@cse.unl.edu; mhardojo@cse.unl.edu
CR ARNOLD M, 2001, P ACM SIGPLAN 2001 C, P168, DOI DOI 10.1145/378795.378832
   BALL T, 1994, ACM T PROGR LANG SYS, V16, P1319, DOI 10.1145/183432.183527
   BALL T, 1992, POPL 92, P59
   Bowring J., 2002, PASTE 02, P2
   BOWRING JF, 2004, P INT S SOFTW TEST A, P195
   Calder B, 1997, INT SYMP MICROARCH, P259, DOI 10.1109/MICRO.1997.645816
   Dickinson W, 2001, PROC INT CONF SOFTW, P339, DOI 10.1109/ICSE.2001.919107
   Elbaum S, 2003, ISSRE 2003: 14TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P108, DOI 10.1109/ISSRE.2003.1251035
   Elbaum S, 2002, IEEE T SOFTWARE ENG, V28, P159, DOI 10.1109/32.988497
   Elbaum Sebastian, 2004, P 2004 ACM SIGSOFT I, P65, DOI [10.1145/1007512.1007522, DOI 10.1145/1007512.1007522]
   Ernst MD, 2001, IEEE T SOFTWARE ENG, V27, P99, DOI 10.1109/32.908957
   GLENN A, 1997, ACM SIGPLAN NOTICES, V32, P85
   Graham S. L., 1982, SIGPLAN Notices, V17, P120, DOI 10.1145/872726.806987
   Gross K.C., 2003, Proactive system maintenance using software telemetry, P24
   HARROLD M, 2003, GAMMA CONTINUOUS EVO
   HILBERT D, 1998, SEPARATING WHEAT CHA
   Hilbert DM, 1998, PROC INT CONF SOFTW, P136, DOI 10.1109/ICSE.1998.671110
   *INCERT COM, 2001, RAP FAIL REC EL APPL
   Leon D., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, P116, DOI 10.1109/ICSE.2000.870403
   LIBES D, 1996, EXPLORING EXPECT TEL
   LIBLIT B, 2003, P ACM SIGPLAN 2003 C, P141
   Memon A, 2004, PROC INT CONF SOFTW, P459, DOI 10.1109/ICSE.2004.1317468
   *MIT PROGR AN GROU, 2005, DAIK INV DET US MAN
   Musa J., 1999, SOFTWARE RELIABILITY
   *NETSC, 2000, NETSC QUAL FEEDBACK
   NIELSEN, 2003, NELSEN NET WRATINGS
   Orso A., 2002, Proceedings of the International Symposium on Software Testing and Analysis (ISSTA'02), P65
   ORSO A, 2003, FDN SOFTWARE ENG SEP, P128
   Pavlopoulou C., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P277, DOI 10.1109/ICSE.1999.841018
   Reiss SP, 2001, PROC INT CONF SOFTW, P221, DOI 10.1109/ICSE.2001.919096
   RICHARDSON D, 1997, PERPETUAL TESTING PR
   van der Hoek A, 1997, LECT NOTES COMPUT SC, V1301, P159, DOI 10.1145/267896.267909
   YILMAZ C, 2004, P INT S SOFTW TEST A, P45
   YILMAZ C, 2003, P WORKSH REM AN MON, P16
NR 34
TC 47
Z9 55
U1 0
U2 7
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD APR
PY 2005
VL 31
IS 4
BP 312
EP 327
DI 10.1109/TSE.2005.50
PG 16
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Engineering
GA 929BY
UT WOS:000229318300004
DA 2024-07-18
ER

PT J
AU Konrad, S
   Cheng, BHC
   Campbell, LA
AF Konrad, S
   Cheng, BHC
   Campbell, LA
TI Object analysis patterns for embedded systems
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE object-oriented modeling; embedded systems; requirements; patterns;
   conceptual modeling; object analysis; formal specification; model
   checking
AB Some of the most challenging tasks in building a software system are capturing, refining, and analyzing requirements. How well these tasks are performed significantly impacts the quality of the developed software system. The difficulty of these tasks is greatly exacerbated for the software of embedded systems as these systems are commonly used for critical applications, have to operate reliably for long periods of time, and usually have a high degree of complexity. Current embedded systems software development practice, however, often deals with the (requirements) analysis phase in a superficial manner, instead emphasizing design and implementation. This research investigates how an approach similar to the well-known design patterns, termed object analysis patterns, can be applied in the analysis phase of embedded systems development, prior to design and coding. Specifically, our research explores how object-oriented modeling notations, such as the Unified Modeling Language (UML), can be used to represent structural and behavioral information as part of commonly occurring object analysis patterns. This work also investigates how UML-based conceptual models of embedded systems, based on the diagram templates in the object analysis patterns, can be automatically analyzed using the Spin model checker for adherence to properties specified in linear-time temporal logic (LTL) using a previously developed UML formalization framework. We have applied these patterns to several embedded systems applications obtained from the automotive industry. This paper describes one of our case studies and illustrates how our approach facilitates the construction of UML-based conceptual models of embedded systems and the analysis of these models for adherence to functional requirements.
C1 Michigan State Univ, Dept Comp Sci & Engn, Software Engn & Network Syst Lab, E Lansing, MI 48824 USA.
C3 Michigan State University
RP Michigan State Univ, Dept Comp Sci & Engn, Software Engn & Network Syst Lab, E Lansing, MI 48824 USA.
EM konradsa@cse.msu.edu; chengb@cse.msu.edu; campb222@cse.msu.edu
OI Cheng, Betty HC/0000-0001-9825-5359
CR ADAMS M, 2004, P 2 C PATT LANG PROG
   [Anonymous], 1992, TEMPORAL LOGIC REACT, DOI DOI 10.1007/978-1-4612-0931-7
   [Anonymous], 1999, DOING HARD TIME DEV
   Booch Grady, 1999, UNIFIED MODELING LAN, DOI DOI 10.1007/3-540-40011-7_10
   BROOKS FP, 1995, MUTHICAL MAN MONTH E
   BROY M, 1997, P 1 WORKSH FORM DES
   Campbell L. A., 2002, Requirements Engineering, V7, P264, DOI 10.1007/s007660200020
   CAMPBELL LA, 2004, THESIS MICHIGAN STAT
   CHENG BHC, 2003, MSUCSE0320
   COAD P, 1997, OBJECT MODELS STRATE
   DARDENNE A, 1993, SCI COMPUT PROGRAM, V20, P3, DOI 10.1016/0167-6423(93)90021-G
   Darimont R., 1996, Software Engineering Notes, V21, P179, DOI 10.1145/250707.239131
   Douglass B., 2003, REAL TIME DESIGN PAT
   DOUGLASS BP, 1998, DESIGNING REAL TIM 1
   Dwyer M. B., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P411, DOI 10.1109/ICSE.1999.841031
   EMAUS B, 2003, SOC AUTOMOTIVE ENG S
   FERNANDEZ E, 1997, TRCSE9745 ATL U
   Fernandez EB, 2000, LECT NOTES COMPUT SC, V1920, P183
   Fowler M., 1997, ANAL PATTERNS REUSAB
   Gamma Erich., 1994, DESIGN PATTERNS
   Geyer-Schulz A, 2001, SOFTWARE ENG ANAL PA
   Gomaa H., 2000, DESIGNING CONCURRENT
   Gross D., 2001, Requirements Engineering, V6, P18, DOI 10.1007/s007660170013
   Heitmeyer C, 1998, IEEE T SOFTWARE ENG, V24, P927, DOI 10.1109/32.730543
   Holzmann GJ, 1997, IEEE T SOFTWARE ENG, V23, P279, DOI 10.1109/32.588521
   Jacobson Ivar., 1999, AW OBJ TECHNOL S
   KELLER W, 1998, P EUROPLOP 1998 C JU
   KONRAD S, 2003, THESIS MICHIGAN STAT
   KONRAD S, 2004, MSUCSE0429
   KONRAD S, 2002, P IEEE JOINT INT C R
   KONRAD S, 2004, P 19 IEEE INT C AUT
   KONRAD S, 2002, P REQ HIGH ASS SYST
   KONRAD S, 2003, MOD CHECK SOFTW P 10
   LEA D, 1994, ADAGEOSW9401 DSSA AD
   MCUMBER W, 2001, P IEEE INT C SOFTW E
   MCUMBER WE, 1999, P IEEE HIGH ASS SOFT
   ROBERTSON S, 1996, REQUIREMENTS PATTERN
   Ryan K, 1993, P IEEE INT S REQ ENG, P240, DOI 10.1109/ISRE.1993.324852
   Shaw M., 1996, PATTERN LANGUAGES PR, V2, P255
   Sigwart C.D., 1990, Software Engineering: A Project Oriented Approach
   SILVA AR, 2000, DASCO PROJECT DEV DI
   Sutcliffe AG, 1998, IEEE T SOFTWARE ENG, V24, P1072, DOI 10.1109/32.738340
   TORRE A, 2001, PROJECT SPECIFICATIO
   TORRE A, 2000, PROJECT SPECIFICATIO
   TORRE A, 2003, COMMUNICATION    MAY
   VANSICKLE T, 1997, REUSABLE SOFTWARE CO
   2002, P 9 C PATT LANG PROG
   2002, P PATT DISTR REAL TI
   2001, P PATT DISTR REAL TI
NR 49
TC 23
Z9 31
U1 0
U2 4
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD DEC
PY 2004
VL 30
IS 12
BP 970
EP 992
DI 10.1109/TSE.2004.102
PG 23
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 881RI
UT WOS:000225886200009
DA 2024-07-18
ER

PT J
AU Robillard, MP
   Coelho, W
   Murphy, GC
AF Robillard, MP
   Coelho, W
   Murphy, GC
TI How effective developers investigate source code: An exploratory study
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE software evolution; empirical software engineering; program
   investigation; program understanding
ID OBJECT-ORIENTED PROGRAMMERS; LARGE-SCALE SOFTWARE; MENTAL
   REPRESENTATIONS; UNDERSTANDING BEHAVIOR; DELOCALIZED PLANS;
   COMPREHENSION; MAINTENANCE; NOVICE
AB Prior to performing a software change task, developers must discover and understand the subset of the system relevant to the task. Since the behavior exhibited by individual developers when investigating a software system is influenced by intuition, experience, and skill, there is often significant variability in developer effectiveness. To understand the factors that contribute to effective program investigation behavior, we conducted a study of five developers performing a change task on a medium-size open source system. We isolated the factors related to effective program investigation behavior by performing a detailed qualitative analysis of the program investigation behavior of successful and unsuccessful developers. We report on these factors as a set of detailed observations, such as evidence of the phenomenon of inattention blindness by developers skimming source code. In general, our results support the intuitive notion that a methodical and structured approach to program investigation is the most effective. Index Terms-Software evolution, empirical software engineering, program investigation, program understanding.
C1 McGill Univ, Sch Comp Sci, Montreal, PQ H3A 2A7, Canada.
   Univ British Columbia, Dept Comp Sci, Vancouver, BC V6T 1Z4, Canada.
C3 McGill University; University of British Columbia
RP McGill Univ, Sch Comp Sci, 3480 Univ St, Montreal, PQ H3A 2A7, Canada.
EM martin@cs.mcgill.ca; Coelho@cs.ubc.ca; Murphy@cs.ubc.ca
CR [Anonymous], 1984, Smalltalk-80: The Interactive Programming Environment
   [Anonymous], 1989, APPL SOCIAL RES METH
   BASILI VR, 1986, IEEE T SOFTWARE ENG, V12, P733, DOI 10.1109/TSE.1986.6312975
   BOEHM BW, 1976, IEEE T COMPUT, V25, P1226, DOI 10.1109/TC.1976.1674590
   CHEN YF, 1990, IEEE T SOFTWARE ENG, V16, P325, DOI 10.1109/32.48940
   Corritore CL, 2001, INT J HUM-COMPUT ST, V54, P1, DOI 10.1006/ijhc.2000.0423
   Corritore CL, 1999, INT J HUM-COMPUT ST, V50, P61, DOI 10.1006/ijhc.1998.0236
   Corritore CL, 2000, PROG COMPREHEN, P139, DOI 10.1109/WPC.2000.852488
   CURTIS B, 1981, P IEEE, V69, P846, DOI 10.1109/PROC.1981.12088
   DeMarco T., 1985, Proceedings of the 8th International Conference on Software Engineering (Cat. No.85CH2139-4), P268
   Eick SG, 2001, IEEE T SOFTWARE ENG, V27, P1, DOI 10.1109/32.895984
   Engebretson A, 2002, IEEE 2002 SYMPOSIA ON HUMAN CENTRIC COMPUTING LANGUAGES AND ENVIRONMENTS, PROCEEDINGS, P11, DOI 10.1109/HCC.2002.1046335
   Jorgensen M., 2002, EMPIR SOFTW ENG, V7, P9, DOI [DOI 10.1023/A:1014866909191, 10.1023/A:1014866909191]
   LANGE BM, 1989, P SIGCHI C HUM FACT, P69
   LEHMAN M, 1985, APIC STUDIES DATA PR, V27
   LEJTER M, 1992, IEEE T SOFTWARE ENG, V18, P1045, DOI 10.1109/32.184759
   LETOVSKY S, 1986, IEEE SOFTWARE, V3, P41, DOI 10.1109/MS.1986.233414
   Mack Arien, 1998, Inattentional Blindness
   Mosemann R, 2001, PROG COMPREHEN, P79, DOI 10.1109/WPC.2001.921716
   *OBJ TECHN INT INC, 2001, ECL PLATF TECHN OV W
   OBRIEN PD, 1987, P C OBJ OR PROGR SYS, P91
   PARNAS DL, 1994, PROC INT CONF SOFTW, P279, DOI 10.1109/ICSE.1994.296790
   REDMILES DF, 1993, P C HUM FACT COMP SY, P67
   SACKMAN H, 1968, COMMUN ACM, V11, P3, DOI 10.1145/362851.362858
   SANELLA M, 1983, INTERLISP D REFERENC
   Seaman CB, 1999, IEEE T SOFTWARE ENG, V25, P557, DOI 10.1109/32.799955
   Singer Janice., 1997, P 1997 C CTR ADV STU, P209
   SOLOWAY E, 1988, COMMUN ACM, V31, P1259, DOI 10.1145/50087.50088
   TEASLEY B, 1991, NATO ADV SCI I SERIE, V123, P143
   TEITELMAN W, 1981, COMPUTER, V14, P25, DOI 10.1109/C-M.1981.220410
   Vans AM, 1999, INT J HUM-COMPUT ST, V51, P31, DOI 10.1006/ijhc.1999.0268
   vonMayrhauser A, 1997, J SOFTW MAINT-RES PR, V9, P299, DOI 10.1002/(SICI)1096-908X(199709/10)9:5<299::AID-SMR157>3.0.CO;2-S
   vonMayrhauser A, 1996, IEEE T SOFTWARE ENG, V22, P424, DOI 10.1109/32.508315
   WIEDENBECK S, 1993, INT J MAN MACH STUD, V39, P793, DOI 10.1006/imms.1993.1084
   [No title captured]
NR 35
TC 135
Z9 167
U1 0
U2 7
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD DEC
PY 2004
VL 30
IS 12
BP 889
EP 903
DI 10.1109/TSE.2004.101
PG 15
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 881RI
UT WOS:000225886200004
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Spinellis, D
AF Spinellis, D
TI Global analysis and transformations in preprocessed languages
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE refactoring; preprocessor; program families; renaming; C; C plus;
   reverse engineering
ID PROGRAMS
AB Tool support for refactoring code written in mainstream languages such as C and C++ is currently lacking due to the complexity introduced by the mandatory preprocessing phase that forms part of the C/C++ compilation cycle. The defintion and use of macros complicates the notions of scope and of identifier boundaries. The concept of token equivalence classes can be used to bridge the gap between the language proper semantic analysis and the nonpreprocessed source code. The CScout toolchest uses the developed theory to analyze large interdependent program families. A Web-based interactive front end allows the precise realization of rename and remove refactorings on the original C source code. In addition, CScout can convert programs into a portable obfuscated format or store a complete and accurate representation of the code and its identifiers in a relational database.
C1 Athens Univ Econ & Business, Dept Management Sci & Technol, GR-10434 Athens, Greece.
C3 Athens University of Economics & Business
RP Athens Univ Econ & Business, Dept Management Sci & Technol, Patison 76, GR-10434 Athens, Greece.
EM dds@aueb.gr
RI Spinellis, Diomidis/E-3600-2010
OI Spinellis, Diomidis/0000-0003-4231-1897
CR [Anonymous], 1985, Structure and Interpretation of Computer Programs
   [Anonymous], UNIX PROGRAMMERS SUP
   [Anonymous], 65 BELL LAB
   [Anonymous], 1985, Compilers principles, techniques, and tools
   *ANSI, 1989, X3 ANSI, P159
   Atkinson DC, 1996, PROC INT CONF SOFTW, P16, DOI 10.1109/ICSE.1996.493398
   Austern MatthewH., 1998, Generic programming and the STL: Using and extending the C++ Standard Template Library
   Badros GJ, 2000, SOFTWARE PRACT EXPER, V30, P907, DOI 10.1002/(SICI)1097-024X(20000710)30:8<907::AID-SPE324>3.0.CO;2-I
   Brown WH., 1998, AntiPatterns: refactoring software, architectures, and projects in crisis
   BURSTALL RM, 1977, J ACM, V24, P44, DOI 10.1145/321992.321996
   CASAIS E, 1997, THEORY PRACTICE OBJE, V3
   ELLIS ME, 1990, ANNOTATED CPLUSPLUS
   Ernst MD, 2002, IEEE T SOFTWARE ENG, V28, P1146, DOI 10.1109/TSE.2002.1158288
   FAVRE JM, 1996, P INT C SOFTW MAIN I
   FELDMAN SI, 1979, SOFTWARE PRACT EXPER, V9, P255, DOI 10.1002/spe.4380090402
   Flanagan David., 1997, JAVA NUTSHELL, VSecond
   Fowler M., 2000, Refactoring: Improving the Design of Existing Code
   Goldberg A., 1989, Smalltalk-80 : The Language
   GRAHAM SL, 1983, SOFTWARE PRACT EXPER, V13, P671, DOI 10.1002/spe.4380130803
   Griswold W. G., 1993, ACM Transactions on Software Engineering and Methodology, V2, P228, DOI 10.1145/152388.152389
   HANSEN BS, 1994, P 1 INT WORKSH ACT S
   HORWITZ S, 1990, ACM T PROGR LANG SYS, V12, P26, DOI [10.1145/77606.77608, 10.1145/960116.53994]
   Hunt A., 2000, PRAGMATIC PROGRAMMER
   JIM T, 2002, UNSENIX TECHN C P JU
   JOHNSON SC, 1987, BELL SYST TECH J, V56, P2155
   Kernighan B.W., 1988, The C Programming Language
   Kernighan BW., 1983, UNIX PROGRAMMING ENV
   LAMPOUDI S, 2002, USENIX TECHN C P JUN
   McGregor JD, 2002, IEEE SOFTWARE, V19, P24, DOI 10.1109/MS.2002.1020282
   Microsoft Corporation, 2001, MICR C LANG SPEC
   Moore I, 1996, ACM SIGPLAN NOTICES, V31, P235, DOI 10.1145/236338.236361
   Opdyke W. F., 1992, Refactoring object-oriented frameworks
   Parnas D. L., 1976, IEEE Transactions on Software Engineering, VSe-2, P1, DOI 10.1109/TSE.1976.233797
   ROBERTS D, 1997, THEOR PRACT OBJ SYST, V3, P39
   Smith B.C., 1982, Ph.D. thesis
   Snelting G., 1996, ACM Transactions on Software Engineering and Methodology, V5, P146, DOI 10.1145/227607.227613
   Spinellis D, 1997, PROCEEDINGS OF THE CONFERENCE ON DOMAIN-SPECIFIC LANGUAGES, P67
   Spinellis D, 2001, J SYST SOFTWARE, V56, P91, DOI 10.1016/S0164-1212(00)00089-3
   Spinellis D., 2003, Code Reading: The Open Source Perspective
   SPINELLIS D, 1993, JC LANGUAGE TRANSLAT, V4, P238
   STROUSTRUP B, 1997, CPLUSPLUS PROGRAMMIN
   TIP F, 1995, J PROGRAM LANG, V3, P121
   Tokuda L., 2001, Automated Software Engineering, V8, P89, DOI 10.1023/A:1008715808855
   ZAVRAS A, 1999, THESIS NATL TECHNICA
NR 44
TC 25
Z9 28
U1 0
U2 2
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD NOV
PY 2003
VL 29
IS 11
BP 1019
EP 1030
DI 10.1109/TSE.2003.1245303
PG 12
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 740KU
UT WOS:000186402200006
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Capra, L
   Emmerich, W
   Mascolo, C
AF Capra, L
   Emmerich, W
   Mascolo, C
TI CARISMA: Context-aware reflective mlddleware system for mobile
   applications
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article; Proceedings Paper
CT Conference on the Foundations of Software Engineering
CY NOV, 2002
CL CHARLESTON, SC
SP ACM SIGSOFT
DE middleware; mobile computing; reflection; context-awareness; conflict
   resolution; game theory; quality of service
ID AUCTIONS
AB Mobile devices, such as mobile phones and personal digital assistants, have gained wide-spread popularity. These devices will increasingly be networked, thus enabling the construction of distributed applications that have to adapt to changes in context, such as variations in network bandwidth, battery power, connectivity, reachability of services and hosts, etc. In this paper, we describe CARISMA, a mobile computing middleware which exploits the principle of reflection to enhance the construction of adaptive and context-aware mobile applications. The middleware provides software engineers with primitives to describe how context changes should be handled using policies. these policies may conflict. We classify the different types of conflicts that may arise in mobile computing and argue that conflicts cannot be resolved statically at the time applications are designed, but, rather, need to be resolved at execution time. We demonstrate a method by which policy conflicts can be handled; this method uses a microeconomic approach that relies on a particular type of sealed-bid auction. We describe how this method is implemented in the CARISMA middleware architecture and sketch a distributed context-aware application for mobile devices to illustrate how the method works in practice. We show, by way of a systematic performance evaluation, that conflict resolution does not imply undue overheads, before comparing our research to related work and concluding the paper.
C1 UCL, Dept Comp Sci, London WC1E 6BT, England.
C3 University of London; University College London
RP UCL, Dept Comp Sci, Gower St, London WC1E 6BT, England.
EM l.capra@cs.ucl.ac.uk; w.emmerich@cs.ucl.ac.uk; c.mascolo@cs.ucl.ac.uk
OI Mascolo, Cecilia/0000-0001-9614-4380
CR [Anonymous], 107461 ISO
   ARNOLD K, 1999, JIMI TM SPECIFICATIO
   Binmore K., 1992, Fun and Games: A Text on Game Theory
   BLAIR G, 1998, P IFIP INT C DISTR S
   CAMPBELL A, 1997, P 2 IFIP INT C HIGH
   CAPRA L, 2002, P 10 S FDN SOFTW ENG, P31
   CAPRA L, 2001, P 3 INT C MET ARCH S, P126
   CHALMERS D, 1999, IEEE COMM SURVEYS, V2
   DARDENNE A, 1993, SCI COMPUT PROGRAM, V20, P3, DOI 10.1016/0167-6423(93)90021-G
   Emmerich W., 1996, Proceedings of the 8th International Workshop on Software Specification and Design, P26, DOI 10.1109/IWSSD.1996.501144
   Emmerich W., 2000, ENG DISTRIBUTED OBJE
   Engels G., 1992, ACM Transactions on Software Engineering and Methodology, V1, P135, DOI 10.1145/128894.128895
   Ferguson D., 1993, Proceedings ISADS 93. International Symposium on Autonomous Decentralized Systems (Cat. No.93TH0502-5), P367, DOI 10.1109/ISADS.1993.262681
   Fickas S., 1995, Proceedings of the Second IEEE International Symposium on Requirements Engineering (Cat. No.95TH8040), P140, DOI 10.1109/ISRE.1995.512555
   HANDOREAN R, 2002, P 5 INT C COORD MOD
   Hunter A., 1998, ACM Transactions on Software Engineering and Methodology, V7, P335, DOI 10.1145/292182.292187
   LEDOUX T, 1999, P MET LEV ARCH REFL
   Malone T.W., 1988, The Ecology of Computation, P177
   Mas-Colell A., 1995, MICROECONOMIC THEORY, V1
   MASCOLO C, 2002, INT J PERSONAL WIREL, V1, P77
   MASCOLO C, 2002, NETWORKING 2002 TUTO
   MILGROM P, 1989, J ECON PERSPECT, V3, P3, DOI 10.1257/jep.3.3.3
   Robinson WN, 1999, IEEE T SOFTWARE ENG, V25, P816, DOI 10.1109/32.824411
   SAIRAMESH J, 1995, P C COMP COMM APR
   SATYANARAYANAN M, 1990, IEEE T COMPUT, V39, P447, DOI 10.1109/12.54838
   Schilit B., 1994, 1994 1 WORKSHOP MOBI, P85, DOI [DOI 10.1109/WMCSA.1994.16, 10.1109/WMCSA.1994.16]
   Smith B.C., 1982, Ph.D. thesis
   *SUN MICR INC, 2000, CLDC K VIRT MACH KVM
   Terry D.B., 1995, P 15 ACM S OPERATING, P172
   van Lamsweerde A, 1998, IEEE T SOFTWARE ENG, V24, P908, DOI 10.1109/32.730542
   Venkatasubramanian N., 1995, Proceedings of the Fourteenth Annual ACM Symposium on Principles of Distributed Computing, P144, DOI 10.1145/224964.224981
   Venkatasubramanian N, 2001, INT CON DISTR COMP S, P644, DOI 10.1109/ICDSC.2001.918995
   VICKREY W, 1961, J FINANC, V16, P8, DOI 10.2307/2977633
   ZACHARIADIS S, 2002, P IEEE WORKSH MOB TE
   Zlotkin G, 1996, J ARTIF INTELL RES, V5, P163, DOI 10.1613/jair.72
   [No title captured]
NR 36
TC 251
Z9 291
U1 1
U2 37
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD OCT
PY 2003
VL 29
IS 10
BP 929
EP 945
DI 10.1109/TSE.2003.1237173
PG 17
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Engineering
GA 729CF
UT WOS:000185753100006
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Thelin, T
   Runeson, P
   Wohlin, C
AF Thelin, T
   Runeson, P
   Wohlin, C
TI An experimental comparison of usage-based and checklist-based reading
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE controlled experiment; empirical study; reading technique; software
   inspection; software review
ID INSPECTION; DESIGN
AB Software quality can be defined as the customers' perception of how a system works. Inspection is a method to monitor and control the quality throughout the development cycle. Reading techniques applied to inspections help reviewers to stay focused on the important parts of an artifact when inspecting. However, many reading techniques focus on finding as many faults as possible, regardless of their importance. Usage-based reading helps reviewers to focus on the most important parts of a software artifact from a user's point of view. This paper presents an experiment which compares usage-based and checklist-based reading. The results show that reviewers applying usage-based reading are more efficient and effective in detecting the most critical faults from a user's point of view than reviewers using checklist-based reading. Usage-based reading may be preferable for software organizations that utilize or will start utilizing use cases in their software development.
C1 Lund Univ, Dept Otorhinolaryngol & Commun Syst, SE-22100 Lund, Sweden.
   Blekinge Inst Technol, Dept Software Engn & Comp Sci, SE-37225 Ronneby, Sweden.
C3 Lund University; Blekinge Institute Technology
RP Lund Univ, Dept Otorhinolaryngol & Commun Syst, Box 118, SE-22100 Lund, Sweden.
EM thomas.thelin@telecom.lth.se; per.runeson@telecom.lth.se;
   claes.wohlin@bth.se
RI Runeson, Per/H-5113-2019
OI Runeson, Per/0000-0003-2795-4851; Wohlin, Claes/0000-0003-0460-5253
CR [Anonymous], 1992, Object Oriented Software Engineering: A Use Case Driven Approach
   Basili V. R., 1996, Empirical Software Engineering, V1, P133, DOI 10.1007/BF00368702
   Basili VR, 1999, IEEE T SOFTWARE ENG, V25, P456, DOI 10.1109/32.799939
   BIFFL S, 2001, SOFTWARE INSPECTION
   BISANT DB, 1989, IEEE T SOFTWARE ENG, V15, P1294, DOI 10.1109/TSE.1989.559782
   CIOLKOWSKI M, 1997, 9713 ISERN
   Ebenau R., 1994, Software Inspection Process
   EICK SG, 1992, P 14 INT C SOFTW ENG, P49
   FAGAN ME, 1976, IBM SYST J, V15, P182, DOI 10.1147/sj.153.0182
   Fusaro P., 1997, Empirical Software Engineering, V2, P39, DOI 10.1023/A:1009742216007
   Gilb Tom, 1993, Software inspections
   Halling M, 2001, EUROMICRO CONF PROC, P248, DOI 10.1109/EURMIC.2001.952461
   Hayes W., 1999, Proceedings Sixth International Software Metrics Symposium (Cat. No.PR00403), P143, DOI 10.1109/METRIC.1999.809735
   *ITU T, 1996, Z120 ITUT MSC
   *ITU T, 1993, Z100 ITUT SDL
   Juristo N., 2013, BASICS SOFTWARE ENG
   KNIGHT JC, 1993, COMMUN ACM, V36, P51, DOI 10.1145/163359.163366
   Laitenberger O, 2000, J SYST SOFTWARE, V53, P183, DOI 10.1016/S0164-1212(00)00052-2
   Laitenberger O., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P494, DOI 10.1109/ICSE.1999.841039
   Laitenberger O, 2000, J SYST SOFTWARE, V50, P5, DOI 10.1016/S0164-1212(99)00073-4
   Laitenberger O, 1997, INFORM SOFTWARE TECH, V39, P781, DOI 10.1016/S0950-5849(97)00030-X
   LANUBILE F, 2000, 0008 ISERN
   LAUESEN S, 2002, SOFTWARE REQUIREMENT
   LINGER RC, 1994, IEEE SOFTWARE, V11, P50, DOI 10.1109/52.268956
   MARTIN J, 1990, COMMUN ACM, V33, P225, DOI 10.1145/75577.75587
   Miller J., 1998, Empirical Software Engineering, V3, P37, DOI 10.1023/A:1009735805377
   Montgomery D.C., 2000, DESIGN ANAL EXPT
   MUSA J.D., 1998, SOFTWARE RELIABILITY
   MUSA JD, 1993, IEEE SOFTWARE, V10, P14, DOI 10.1109/52.199724
   OLOFSSON M, 1996, TETS5244 CODEN LUTED
   PARNAS DL, 1985, P 8 INT C SOFTW ENG, P418
   PETERSSON H, IN PRESS EFFECTIVENE
   Porter A., 1998, Empirical Software Engineering, V3, P355, DOI 10.1023/A:1009776104355
   PORTER A, 1994, P 16 INT C SOFTW ENG, P203
   PORTON R, 1995, CINEASTE, V21, P6
   Regnell B., 2000, Empirical Software Engineering, V5, P331, DOI 10.1023/A:1009848320066
   Robson C., 2002, Real world research
   Runeson P., 1995, Informatica, V19, P195
   Saaty TL., 2001, INT SERIES OPERATION
   SANDAHL K, 1998, EMPIR SOFTW ENG, V3, P381
   Shull F, 2000, COMPUTER, V33, P73, DOI 10.1109/2.869376
   Shull F. J., 1998, Tese de doutorado.
   Siegel Sidney, 1988, Nonparametric statistics for the behavioral sciences
   SORUMGARD S, 1997, THESIS NORWEGIAN U S
   Thelin T, 2001, INFORM SOFTWARE TECH, V43, P925, DOI 10.1016/S0950-5849(01)00201-4
   Thelin T, 2002, 2002 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P127, DOI 10.1109/ISESE.2002.1166932
   TRAVASSOS G, 1999, P INT C OBJ OR PROGR
   VOTTA L, 1993, ACM SOFTWARE ENG NOT, V18, P107
   WELLER EF, 1993, IEEE SOFTWARE, V10, P38, DOI 10.1109/52.232397
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
   WOHLIN C, 1994, P NORD SEM DEP COMP, P229
   Zhang Y, 1999, TUMOR TARGET, V4, P158
NR 52
TC 71
Z9 76
U1 0
U2 6
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD AUG
PY 2003
VL 29
IS 8
BP 687
EP 704
DI 10.1109/TSE.2003.1223644
PG 18
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 708KQ
UT WOS:000184566400003
DA 2024-07-18
ER

PT J
AU Villadangos, J
   Fariña, F
   de Mendívil, JRG
   Garitagoitia, JR
   Córdoba, A
AF Villadangos, J
   Fariña, F
   de Mendívil, JRG
   Garitagoitia, JR
   Córdoba, A
TI A safe algorithm for resolving OR deadlocks
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE deadlock detection/resolution; OR request model; distributed systems;
   distributed algorithms
ID DIFFUSING COMPUTATIONS; TERMINATION DETECTION; KNOT DETECTION;
   RESOLUTION; MODEL
AB Deadlocks in the OR model are usually resolved by aborting a deadlocked process. Prior algorithms for the same model sometimes abort nodes needlessly wasting computing resources. This paper presents a new deadlock resolution algorithm for the OR model that satisfies the following correctness criteria: (Safety) the algorithm does not resolve false deadlocks; (Liveness) the algorithm resolves all deadlocks in finite time. The communication cost of the algorithm is similar to that of previous nonsafe proposals. The theoretical cost has been validated by simulation. In addition, different algorithm initiation alternatives have been analyzed in order to reduce the latency of deadlocks.
C1 Univ Publ Navarra, Dept Matemat & Informat, Navarra, Spain.
   Univ Publ Navarra, Dept Automat & Computac, Navarra, Spain.
C3 Universidad Publica de Navarra; Universidad Publica de Navarra
RP Villadangos, J (corresponding author), Univ Publ Navarra, Dept Automat & Computac, Navarra, Spain.
RI Villadangos, Jesus/AFW-4492-2022; Cordoba, Alberto/J-3943-2017
OI Villadangos, Jesus/0000-0002-7341-9529; Farina Figueredo,
   Federico/0000-0002-9245-9710; Gonzalez de Mendivil, Jose
   Ramon/0000-0003-3150-6437; Cordoba, Alberto/0000-0002-4945-3372
CR [Anonymous], 1989, CWI Q.
   BERZINSKI J, 1996, J PARALLEL DISTRIBUT, V31, P112
   Boukerche A., 1995, Proceedings 9th International Parallel Processing Symposium (Cat. No.95TH8052), P118, DOI 10.1109/IPPS.1995.395923
   Brahmadathan K., 1988, Proceedings. Twenty-Sixth Annual Allerton Conference on Communication, Control, and Computing, P683
   CHANDY KM, 1983, ACM T COMPUT SYST, V1, P144, DOI 10.1145/357360.357365
   CIDON I, 1989, IEEE T SOFTWARE ENG, V15, P644, DOI 10.1109/32.24714
   de Mendívil JRG, 1999, IEEE T PARALL DISTR, V10, P433, DOI 10.1109/71.770131
   DEMENDIVIL JRG, 1995, P EUROMICRO DES HARD, P587
   DIJKSTRA EW, 1980, INFORM PROCESS LETT, V11, P1, DOI 10.1016/0020-0190(80)90021-6
   KNAPP E, 1987, ACM COMPUT SURV, V19, P303
   KSHEMKALYANI AD, 1991, IEEE T SOFTWARE ENG, V17, P789, DOI 10.1109/32.83914
   LEE DM, 1992, INFORM SCIENCES, V64, P149, DOI 10.1016/0020-0255(92)90117-Q
   MENASCE DA, 1979, IEEE T SOFTWARE ENG, V5, P195, DOI 10.1109/TSE.1979.234181
   MIN K, 1989, THESIS U ILLINOIS UR
   MISRA J, 1982, ACM T PROGR LANG SYS, V4, P37, DOI 10.1145/357153.357156
   MISRA J, 1982, ACM T PROGR LANG SYS, V4, P678, DOI 10.1145/69622.357190
   Ng W. K., 1994, Proceedings of the Twenty-Seventh Hawaii International Conference on System Sciences. Vol.II: Software Technology (Cat. No.94TH0607-2), P524, DOI 10.1109/HICSS.1994.323231
   OBERMARCK R, 1982, ACM T DATABASE SYST, V7, P187, DOI 10.1145/319702.319717
   Rana S. P., 1994, Proceedings of the Sixth IASTED/ISMM International Conference. Parallel and Distributed Computing and Systems, P234
   RONTOGIANNIS P, 1991, INFORM SOFTWARE TECH, V33, P483, DOI 10.1016/0950-5849(91)90092-P
   SINGHAL M, 1989, COMPUTER, V22, P37, DOI 10.1109/2.43525
   Singhal M., 1994, Advanced Concepts in Operating Systems
   VILLADANGOS J, 1999, 08991 U MUNST
   Warnakulasuriya S, 2000, IEEE T PARALL DISTR, V11, P212, DOI 10.1109/71.841739
NR 24
TC 6
Z9 6
U1 0
U2 6
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUL
PY 2003
VL 29
IS 7
BP 608
EP 622
DI 10.1109/TSE.2003.1214325
PG 15
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 698HG
UT WOS:000183992500003
DA 2024-07-18
ER

PT J
AU Popov, P
   Strigini, L
   May, J
   Kuball, S
AF Popov, P
   Strigini, L
   May, J
   Kuball, S
TI Estimating bounds on the reliability of diverse systems
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE software fault-tolerance; design diversity; demand space partitioning;
   subdomain testing; common-mode failure
ID MULTIVERSION SOFTWARE; FAILURES; DEPENDABILITY; ENHANCEMENT
AB We address the difficult problem of estimating the reliability of multiple-version software. The central issue is the degree of statistics dependanace between failures of diverse versions. Previously published models of failure dependence described what behavior could be expected "on average" from a pair of "independently generated" versions. We focus instead on predictions using specific information about a given pair of versions. The concept of "variation of difficulty" between situations to which software may be subject is central to the previous models cited, and it turns out to be central for our question as well. We provide new understanding of various. alternative imprecise estimates of system reliability and some results of practical use, especially with diverse systems assembled from pre-exisiing (e g.,"off-the-shelf")-subsystems. Systems designers, users,and regulators need useful bounds on the probability of system failure. We discuss how to use reliability data about the individual diverse versions to obtain upper bounds and other useful information for decision, makings These bounds are greatly affected by how the versions' probabilities of failure vary between subdomains of the demand space or between operating regimes-it is even possible in some cases to demonstrate, before operation, upper bounds that are very close to the true probability of failure of the system-and by the level of detail with which these variations are documented in the data.
C1 City Univ London, Ctr Software Reliabil, London EC1V 0HB, England.
   Univ Bristol, Safety Syst Res Ctr, Bristol BS8 1UB, Avon, England.
C3 City University London; University of Bristol
RP Popov, P (corresponding author), City Univ London, Ctr Software Reliabil, Northampton Sq, London EC1V 0HB, England.
OI May, John/0000-0003-1665-5960; Popov, Peter/0000-0002-3434-5272
CR ARLAT J, 1990, IEEE T COMPUT, V39, P504, DOI 10.1109/12.54843
   Bertolino A., 1998, Software Testing, Verification and Reliability, V8, P155, DOI 10.1002/(SICI)1099-1689(1998090)8:3<155::AID-STVR163>3.0.CO;2-B
   Bishop P.G., 1995, SOFTWARE FAULT TOLER, P211
   BISHOP PG, 1988, P 18 INT S FAULT TOL
   Bondavalli A., 1999, Software Testing, Verification and Reliability, V9, P145, DOI 10.1002/(SICI)1099-1689(199909)9:3<145::AID-STVR179>3.0.CO;2-B
   CSENKI A, 1991, DEPENDABLE COMPUTING, P75
   DJAMBAZOV KB, 1995, P 6 INT S SOFTW REL
   DUGAN JB, 1994, IEEE T RELIAB, V43, P513, DOI 10.1109/24.370232
   ECKHARDT DE, 1991, IEEE T SOFTWARE ENG, V17, P692, DOI 10.1109/32.83905
   ECKHARDT DE, 1985, IEEE T SOFTWARE ENG, V11, P1511, DOI 10.1109/TSE.1985.231895
   GEIST R, 1992, IEEE T COMPUT, V41, P550, DOI 10.1109/12.142681
   GNRAROV A, 1980, P 10 INT S FAULT TOL
   HUGHES RP, 1987, RELIAB ENG SYST SAFE, V17, P211, DOI 10.1016/0143-8174(87)90044-8
   Iyer RK., 1996, HDB SOFTWARE RELIABI, P303
   KNIGHT JC, 1986, IEEE T SOFTWARE ENG, V12, P96, DOI 10.1109/TSE.1986.6312924
   Littlewood B, 1996, RELIAB ENG SYST SAFE, V51, P101, DOI 10.1016/0951-8320(95)00120-4
   LITTLEWOOD B, 1989, IEEE T SOFTWARE ENG, V15, P1596, DOI 10.1109/32.58771
   LITTLEWOOD B, 1993, COMMUN ACM, V36, P69, DOI 10.1145/163359.163373
   Littlewood B., 2000, P 19 INT C COMP SAF
   LYU MR, 1995, TRENDS SOFTWARE, P337
   MILLER KW, 1992, IEEE T SOFTWARE ENG, V18, P33, DOI 10.1109/32.120314
   *MOD, 1997, 0055 MOD
   NICOLA VF, 1990, IEEE T SOFTWARE ENG, V16, P350, DOI 10.1109/32.48942
   TAI AT, 1993, IEEE T RELIAB, V42, P227, DOI 10.1109/24.229492
NR 24
TC 24
Z9 28
U1 0
U2 2
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD APR
PY 2003
VL 29
IS 4
BP 345
EP 359
DI 10.1109/TSE.2003.1191798
PG 15
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 664PT
UT WOS:000182070000005
DA 2024-07-18
ER

PT J
AU Jesse, K
   Kuhmuench, C
   Sawant, A
AF Jesse, Kevin
   Kuhmuench, Christoph
   Sawant, Anand
TI RefactorScore: Evaluating Refactor Prone Code
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Codes; Java; Measurement; Unified modeling language; Predictive models;
   C plus plus languages; Computational modeling; Refactor; automatic
   evaluation; machine learning; software repositories
ID IMPACT; FAULTS
AB We propose RefactorScore, an automatic evaluation metric for code. RefactorScore computes the number of refactor prone locations on each token in a candidate file and maps the occurrences into a quantile to produce a score. RefactorScore is evaluated across 61,735 commits and uses a model called RefactorBERT trained to predict refactors on 1,111,246 commits. Finally, we validate RefactorScore on a set of industry leading projects providing each with a RefactorScore. We calibrate RefactorScore's detection of low quality code with human developers through a human subject study. RefactorBERT, the model driving the scoring mechanism, is capable of predicting defects and refactors predicted by RefDiff 2.0. To our knowledge, our approach, coupled with the use of large scale data for training and validated with human developers, is the first code quality scoring metric of its kind.
C1 [Jesse, Kevin] Univ Calif Davis, Dept Comp Sci, Davis, CA 95616 USA.
   [Kuhmuench, Christoph] Siemens Corp, Princeton, NJ 08540 USA.
   [Sawant, Anand] Endor Labs, Palo Alto, CA 94301 USA.
C3 University of California System; University of California Davis; Siemens
   AG
RP Jesse, K (corresponding author), Univ Calif Davis, Dept Comp Sci, Davis, CA 95616 USA.
EM krjesse@ucdavis.edu; christoph.kuhmuench@siemens.com; anand@endor.ai
FU NSF CCF (SHF) [2107592]
FX The work of Kevin Jesse's thesis research with UC Davis was supported by
   NSF CCF (SHF) under Grant 2107592.
CR Ahmad WU, 2021, Arxiv, DOI [arXiv:2103.06333, 10.48550/arXiv.2103.06333]
   Aniche M, 2022, IEEE T SOFTWARE ENG, V48, P1432, DOI 10.1109/TSE.2020.3021736
   Antoniol G, 2004, 7TH INTERNATIONAL WORKSHOP ON PRINCIPLES OF SOFTWARE EVOLUTION, P31, DOI 10.1109/IWPSE.2004.1334766
   Azeem MI, 2019, INFORM SOFTWARE TECH, V108, P115, DOI 10.1016/j.infsof.2018.12.009
   Bagheri A, 2022, IEEE WORK CONF MIN S, P117, DOI 10.1145/3524842.3528034
   Baqais AAB, 2020, SOFTWARE QUAL J, V28, P459, DOI 10.1007/s11219-019-09477-y
   Bavota G, 2015, J SYST SOFTWARE, V107, P1, DOI 10.1016/j.jss.2015.05.024
   Brown Nanette, 2010, P FSE SDP WORKSH FUT, P47
   Buratti L, 2020, Arxiv, DOI arXiv:2006.12641
   Chaparro O, 2014, PROC IEEE INT CONF S, P456, DOI 10.1109/ICSME.2014.73
   Chen Mark, 2021, arXiv, DOI DOI 10.48550/ARXIV.2107.03374
   Cho KYHY, 2014, Arxiv, DOI arXiv:1409.1259
   Coimbra D, 2021, Arxiv, DOI arXiv:2106.01367
   D'Ambros Marco, 2010, Proceedings of the 2010 7th IEEE Working Conference on Mining Software Repositories (MSR 2010), P31, DOI 10.1109/MSR.2010.5463279
   de Moor O, 2007, SEVENTH IEEE INTERNATIONAL WORKING CONFERENCE ON SOURCE CODE ANALYSIS AND MANIPULATION, PROCEEDINGS, P3, DOI 10.1109/SCAM.2007.31
   Demeyer S, 2000, ACM SIGPLAN NOTICES, V35, P166, DOI 10.1145/354222.353183
   Di Nucci D, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P612, DOI 10.1109/SANER.2018.8330266
   Dias M, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P341, DOI 10.1109/SANER.2015.7081844
   Dig D., 2005, P WORKSH OBJ OR REEN
   Dig D, 2006, LECT NOTES COMPUT SC, V4067, P404
   Feng ZY, 2020, Arxiv, DOI [arXiv:2002.08155, 10.48550/arXiv.2002.08155]
   Fontana F. A., 2012, Proceedings 2012 Third International Workshop on Managing Technical Debt (MTD 2012), P15, DOI 10.1109/MTD.2012.6225993
   Fontana FA, 2016, EMPIR SOFTW ENG, V21, P1143, DOI 10.1007/s10664-015-9378-4
   Fontana FA, 2017, KNOWL-BASED SYST, V128, P43, DOI 10.1016/j.knosys.2017.04.014
   Fontana FA, 2013, PROC IEEE INT CONF S, P396, DOI 10.1109/ICSM.2013.56
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   Guo DY, 2021, Arxiv, DOI arXiv:2009.08366
   Kannangara SH, 2015, Arxiv, DOI arXiv:1502.03526
   Hanif H., 2022, arXiv
   Hassan AE, 2005, PROC IEEE INT CONF S, P263
   Herzig K, 2016, EMPIR SOFTW ENG, V21, P303, DOI 10.1007/s10664-015-9376-6
   Hochreiter S, 1997, NEURAL COMPUT, V9, P1735, DOI [10.1162/neco.1997.9.1.1, 10.1007/978-3-642-24797-2]
   Kadar I., 2016, P 12 INT C PRED MOD, P1
   Karampatsis RM, 2020, PROC INT CONF SOFTW, P1073, DOI 10.1145/3377811.3380342
   Kim M., 2012, P ACM SIGSOFT 20 INT, P1
   Kim M., 2010, PROC 18 ACM SIGSOFT, P371, DOI [10.1145/1882291.1882353, DOI 10.1145/1882291.1882353]
   Kim S, 2007, PROC INT CONF SOFTW, P489
   Kirinuki H., 2014, P 22 INT C PROGRAM C, P262
   Kudo T, 2018, Arxiv, DOI [arXiv:1808.06226, 10.48550/arXiv.1808.06226]
   Leitch R, 2003, NINTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM, PROCEEDINGS, P309, DOI 10.1109/METRIC.2003.1232477
   Lenarduzzi V, 2020, PROCEEDINGS OF THE 2020 IEEE 27TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER '20), P501, DOI [10.1109/SANER48275.2020.9054821, 10.1109/saner48275.2020.9054821]
   Liu YH, 2019, Arxiv, DOI arXiv:1907.11692
   Lu S, 2021, Arxiv, DOI arXiv:2102.04664
   Marcilio D, 2019, INT C PROGRAM COMPRE, P209, DOI 10.1109/ICPC.2019.00040
   Mariani T, 2017, INFORM SOFTWARE TECH, V83, P14, DOI 10.1016/j.infsof.2016.11.009
   Mens T, 2004, IEEE T SOFTWARE ENG, V30, P126, DOI 10.1109/TSE.2004.1265817
   Moghadam Iman Hemati., 2011, Proceeding of the 4th workshop on Refactoring tools - WRT'11, page, P41
   Mohan Michael, 2018, Journal of Software Engineering Research and Development, V6, DOI 10.1186/s40411-018-0046-4
   Moreno L, 2017, IEEE T SOFTWARE ENG, V43, P106, DOI 10.1109/TSE.2016.2591536
   Murphy-Hill E, 2012, IEEE T SOFTWARE ENG, V38, P5, DOI 10.1109/TSE.2011.41
   Nagappan N, 2005, PROC INT CONF SOFTW, P284, DOI 10.1145/1062455.1062514
   Nagappan N., 2006, 28th International Conference on Software Engineering Proceedings, P452, DOI 10.1145/1134285.1134349
   O'Keeffe M, 2008, J SOFTW MAINT EVOL-R, V20, P345, DOI 10.1002/smr.378
   Ostrand TJ, 2005, IEEE T SOFTWARE ENG, V31, P340, DOI 10.1109/TSE.2005.49
   Pecorelli F, 2020, J SYST SOFTWARE, V169, DOI 10.1016/j.jss.2020.110693
   Pecorelli F, 2019, INT C PROGRAM COMPRE, P93, DOI 10.1109/ICPC.2019.00023
   Peruma A, 2020, J SYST SOFTWARE, V169, DOI 10.1016/j.jss.2020.110704
   Phan L., 2021, arXiv
   Prete K, 2010, PROC IEEE INT CONF S
   Pritam N, 2019, IEEE ACCESS, V7, P37414, DOI 10.1109/ACCESS.2019.2905133
   Ratzinger J., 2008, Proceedings of the 2008 international working conference on Mining software repositories, P35, DOI [10.1145/1370750.1370759, DOI 10.1145/1370750.1370759]
   Sennrich R, 2016, Arxiv, DOI arXiv:1508.07909
   Silva D, 2017, IEEE WORK CONF MIN S, P269, DOI 10.1109/MSR.2017.14
   Silva D, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P858, DOI 10.1145/2950290.2950305
   Silva DS, 2020, INT J ENTREP BEHAV R, V26, P595, DOI [10.1108/IJEBR-07-2019-0425, 10.1109/TSE.2020.2968072]
   Soares G, 2013, J SYST SOFTWARE, V86, P1006, DOI 10.1016/j.jss.2012.10.040
   Spadini D, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P908, DOI 10.1145/3236024.3264598
   Tsantalis N., 2013, C CTR ADV STUD COLL, P132, DOI [10.5555/2555523.2555539, DOI 10.5555/2555523.2555539]
   Tsantalis N, 2022, IEEE T SOFTWARE ENG, V48, P930, DOI 10.1109/TSE.2020.3007722
   Tsantalis N, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P483, DOI 10.1145/3180155.3180206
   Vaswani A, 2017, ADV NEUR IN, V30
   Wang Y, 2021, 2021 CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING (EMNLP 2021), P8696
   Weissgerber P, 2006, IEEE INT CONF AUTOM, P231
   Xing Z., 2005, Proceedings of the 20th IEEE/ACM international Conference on Automated software engineering, P54
   Xing ZC, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P951
   Xu Frank F., 2022, MAPS 2022: Proceedings of the 6th ACM SIGPLAN International Symposium on Machine Programming, P1, DOI 10.1145/3520312.3534862
NR 76
TC 0
Z9 0
U1 1
U2 1
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD NOV
PY 2023
VL 49
IS 11
BP 5008
EP 5026
DI 10.1109/TSE.2023.3324613
PG 19
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA Z3ZN2
UT WOS:001111494200009
DA 2024-07-18
ER

PT J
AU Ebrahimi, AM
   Oliva, GA
   Hassan, AE
AF Ebrahimi, Amir Mohammad
   Oliva, Gustavo A.
   Hassan, Ahmed E.
TI Self-Admitted Technical Debt in Ethereum Smart Contracts: A Large-Scale
   Exploratory Study
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Contracts; Smart contracts; Decentralized applications; Source coding;
   Costs; Codes; Blockchains; Self-admitted technical debt; SATD;
   maintenance; smart contracts; ethereum; blockchain
ID MANAGEMENT
AB Programmable blockchain platforms such as Ethereum offer unique benefits to application development, including a decentralized infrastructure, tamper-proof transactions, and auditability. These benefits enable new types of applications that can bring competitive advantage to several business segments. Nonetheless, the pressure of time-to-market combined with relatively immature development technologies (e.g., the Solidity programming language), lack of high-quality training resources, and an unclear roadmap for Ethereum creates a context that favors the introduction of technical debt (e.g., code hacks, workarounds, and suboptimal implementations) into application code. In this paper, we study self-admitted technical debt (SATD) in smart contracts. SATD refers to technical debt that is explicitly acknowledged in the source code by developers via code comments. We extract 726 k real-world contracts from Ethereum and apply both quantitative and qualitative methods in order to (i) determine SATD prevalence, (ii) understand the relationship between code cloning and SATD prevalence, and (iii) uncover the different categories of SATD. Our findings reveal that, while SATD is not a widespread phenomenon (1.5% of real-world contracts contain SATD), SATD does occur in extremely relevant contracts (e.g., multi-million contracts). We also observed a strong connection between SATD prevalence and code cloning activities, leading us to conclude that the former cannot be reliably studied without taking the latter into consideration. Finally, we produced a taxonomy for SATD that consists of 6 major and 26 minor categories. We note that several minor categories are bound to the domain of blockchain and smart contracts, including gas-inefficient implementations and Solidity-induced workarounds. Based on our results, we derive a set of practical recommendations for contract developers and introduce open research questions to guide future research on the topic.
C1 [Ebrahimi, Amir Mohammad; Oliva, Gustavo A.; Hassan, Ahmed E.] Queens Univ, Sch Comp, Software Anal & Intelligence Lab SAIL, Kingston, ON K7L 3N6, Canada.
C3 Queens University - Canada
RP Ebrahimi, AM (corresponding author), Queens Univ, Sch Comp, Software Anal & Intelligence Lab SAIL, Kingston, ON K7L 3N6, Canada.
EM amir.ebrahimi@queensu.ca; golivax@gmail.com; ahmed@cs.queensu.ca
OI Ebrahimi, AmirMohammad/0000-0003-0706-9820; Hassan, Ahmed
   E./0000-0001-7749-5513
FU Natural Sciences and Engineering Research Council of Canada (NSERC)
FX This work was supported by the Natural Sciences and Engineering Research
   Council of Canada (NSERC).
CR Ahmadjee S, 2021, 2021 IEEE/ACM INTERNATIONAL CONFERENCE ON TECHNICAL DEBT (TECHDEBT 2021), P6, DOI [10.1109/TechDebt52882.2021.00010, 10.1109/SMART52563.2021.9676239]
   Alves NSR, 2016, INFORM SOFTWARE TECH, V70, P100, DOI 10.1016/j.infsof.2015.10.008
   Bavota G, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P315, DOI [10.1109/MSR.2016.040, 10.1145/2901739.2901742]
   Blei DM, 2003, J MACH LEARN RES, V3, P993, DOI 10.1162/jmlr.2003.3.4-5.993
   Ceriani L, 2012, J ECON INEQUAL, V10, P421, DOI 10.1007/s10888-011-9188-x
   Chen J., 2021, ACM Trans. Softw. Eng. Methodol., V31
   Chen JC, 2021, Arxiv, DOI arXiv:2007.00286
   Chen JC, 2022, IEEE T SOFTWARE ENG, V48, P327, DOI 10.1109/TSE.2020.2989002
   Chen JC, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-021-10018-0
   Chen T, 2021, IEEE T EMERG TOP COM, V9, P1433, DOI 10.1109/TETC.2020.2979019
   Chittoda J., 2019, Mastering Blockchain Programming with Solidity: Write Production-Ready Smart Contracts for Ethereum Blockchain with Solidity
   Cunningham W., 1993, OOPS Messenger, V4, P29
   Farias MAD, 2020, INFORM SOFTWARE TECH, V121, DOI 10.1016/j.infsof.2020.106270
   Farias MAD, 2017, LECT NOTES BUS INF P, V291, P284, DOI 10.1007/978-3-319-62386-3_14
   Farias MAD, 2015, 2015 IEEE 7TH INTERNATIONAL WORKSHOP ON MANAGING TECHNICAL DEBT (MTD) PROCEEDINGS, P25, DOI 10.1109/MTD.2015.7332621
   Devlin J, 2019, 2019 CONFERENCE OF THE NORTH AMERICAN CHAPTER OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS: HUMAN LANGUAGE TECHNOLOGIES (NAACL HLT 2019), VOL. 1, P4171
   docs.openzeppelin, Using with upgrades
   EISENHARDT KM, 1989, ACAD MANAGE REV, V14, P532, DOI 10.2307/258557
   Ethereum Foundation, Upgrading smart contracts-Upgrade mechanism: Proxy patterns
   Furlonger D., 2019, The real business of blockchain: How leaders can create value in a new digital age
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   Gao ZP, 2021, IEEE T SOFTWARE ENG, V47, P2874, DOI 10.1109/TSE.2020.2971482
   Gartner, 2021, GARTN ID KEY EM TECH
   Grech N, 2020, COMMUN ACM, V63, P87, DOI 10.1145/3416262
   Guo ZQ, 2021, ACM T SOFTW ENG METH, V30, DOI 10.1145/3447247
   hack.aragon, Aragonos intro  Aragon developer portal
   He NY, 2019, Arxiv, DOI arXiv:1905.00272
   Hirao T, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P578, DOI 10.1145/3338906.3338949
   Huang Q, 2018, EMPIR SOFTW ENG, V23, P418, DOI 10.1007/s10664-017-9522-4
   Jiang LX, 2007, PROC INT CONF SOFTW, P96
   Kannengiesser N, 2022, IEEE T SOFTWARE ENG, V48, P4291, DOI 10.1109/TSE.2021.3116808
   Kashiwa Y, 2022, INFORM SOFTWARE TECH, V146, DOI 10.1016/j.infsof.2022.106855
   Khan F, 2023, IEEE T SOFTWARE ENG, V49, P2006, DOI 10.1109/TSE.2022.3207428
   Kiffer L, 2018, IMC'18: PROCEEDINGS OF THE INTERNET MEASUREMENT CONFERENCE, P494, DOI 10.1145/3278532.3278575
   Kondo M, 2020, EMPIR SOFTW ENG, V25, P4617, DOI 10.1007/s10664-020-09852-5
   KRUCHTEN PB, 1995, IEEE SOFTWARE, V12, P42, DOI 10.1109/52.469759
   Labazova O, 2019, PROCEEDINGS OF THE 52ND ANNUAL HAWAII INTERNATIONAL CONFERENCE ON SYSTEM SCIENCES, P4555
   Lacity M., 2021, What We've Learned So Far About Blockchain for Business: MIT Sloan Management Review
   Landauer TK, 1998, DISCOURSE PROCESS, V25, P259, DOI 10.1080/01638539809545028
   Lehman MM, 1997, FOURTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM, PROCEEDINGS, P20, DOI 10.1109/METRIC.1997.637156
   Liu JK, 2020, 2020 IEEE/ACM 42ND INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN SOCIETY (ICSE-SEIS 2021), P1, DOI 10.1145/3377815.3381377
   Liu ZX, 2018, PROC IEEE ACM INT C, P9, DOI 10.1145/3183440.3183478
   LLOYD SP, 1982, IEEE T INFORM THEORY, V28, P129, DOI 10.1109/TIT.1982.1056489
   Maldonado ED, 2015, 2015 IEEE 7TH INTERNATIONAL WORKSHOP ON MANAGING TECHNICAL DEBT (MTD) PROCEEDINGS, P9, DOI 10.1109/MTD.2015.7332619
   Maldonado ED, 2017, IEEE T SOFTWARE ENG, V43, P1044, DOI 10.1109/TSE.2017.2654244
   Oliva GA, 2021, PROCEEDINGS OF THE 29TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '21), P1463, DOI 10.1145/3468264.3473130
   Oliva GA, 2020, EMPIR SOFTW ENG, V25, P1864, DOI 10.1007/s10664-019-09796-5
   Pacheco M, 2023, ACM T SOFTW ENG METH, V32, DOI 10.1145/3549542
   Pacheco M, 2023, EMPIR SOFTW ENG, V28, DOI 10.1007/s10664-022-10283-7
   Palladino S., 2020, The state of smart contract upgrades
   Pasdar A, 2023, ACM COMPUT SURV, V55, DOI 10.1145/3567582
   Passos AFD, 2015, PROCEEDINGS OF THE 17TH BRAZILIAN SYMPOSIUM ON SOFTWARE QUALITY (SBQS), P21, DOI 10.1145/3275245.3275248
   Potdar A, 2014, PROC IEEE INT CONF S, P91, DOI 10.1109/ICSME.2014.31
   Proxies, 2022, OpenZeppelin docs
   Qu Y., 2022, Int. J. Performability Eng., V18, P149, DOI [10.23940/ijpe.22.03.p1.149157, DOI 10.23940/IJPE.22.03.P1.149157]
   Qu YB, 2022, CONNECT SCI, V34, P2026, DOI 10.1080/09540091.2022.2067125
   Rajaraman A., 2011, Data mining, P1, DOI DOI 10.1017/CBO9781139058452.002
   Ren XX, 2019, ACM T SOFTW ENG METH, V28, DOI 10.1145/3324916
   Rios N, 2018, INFORM SOFTWARE TECH, V102, P117, DOI 10.1016/j.infsof.2018.05.010
   Romano J, 2006, ANN M FLOR ASS I RES, P1
   Severin B, 2022, PROC IEEE INT CONF S, P293, DOI 10.1109/ICSME55016.2022.00034
   Swanson E. B., 1976, 2nd International Conference on Software Engineering, P492
   Tikhomirov S, 2018, 2018 IEEE/ACM 1ST INTERNATIONAL WORKSHOP ON EMERGING TRENDS IN SOFTWARE ENGINEERING FOR BLOCKCHAIN (WETSEB), P9, DOI 10.1145/3194113.3194115
   Vidoni M, 2021, IEEE WORK CONF MIN S, P179, DOI 10.1109/MSR52588.2021.00030
   Wattanakriengkrai S, 2019, ASIA PAC SOFWR ENG, P316, DOI 10.1109/APSEC48747.2019.00050
   Xiao T, 2022, IEEE T SOFTWARE ENG, V48, P4214, DOI 10.1109/TSE.2021.3115772
   Yu Z, 2022, IEEE T SOFTWARE ENG, V48, P1676, DOI 10.1109/TSE.2020.3031401
   Zarir AA, 2021, ACM T SOFTW ENG METH, V30, DOI 10.1145/3431726
   Zhang JF, 2023, STRUCT INFRASTRUCT E, V19, P1568, DOI 10.1080/15732479.2022.2035775
   Zou WQ, 2021, IEEE T SOFTWARE ENG, V47, P2084, DOI 10.1109/TSE.2019.2942301
NR 70
TC 1
Z9 1
U1 0
U2 0
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD SEPT 1
PY 2023
VL 49
IS 9
BP 4304
EP 4323
DI 10.1109/TSE.2023.3289808
PG 20
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA S4DL9
UT WOS:001070689400003
DA 2024-07-18
ER

PT J
AU Liu, MW
   Zhao, CY
   Peng, X
   Yu, SM
   Wang, HF
   Sha, CF
AF Liu, Mingwei
   Zhao, Chengyuan
   Peng, Xin
   Yu, Simin
   Wang, Haofen
   Sha, Chaofeng
TI Task-Oriented ML/DL Library Recommendation Based on a Knowledge Graph
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Deep learning; knowledge graph; library recommendation; machine learning
ID DEEP LEARNING TECHNIQUES; RECOGNITION; IMAGE
AB AI applications often use ML/DL (Machine Learning/Deep Learning) models to implement specific AI tasks. As application developers usually are not AI experts, they often choose to integrate existing implementations of ML/DL models as libraries for their AI tasks. As an active research area, AI attracts many researchers and produces a lot of papers every year. Many of the papers propose ML/DL models for specific tasks and provide their implementations. However, it is not easy for developers to find ML/DL libraries that are suitable for their tasks. The challenges lie in not only the fast development of AI application domains and techniques, but also the lack of detailed information of the libraries such as environmental dependencies and supporting resources. In this paper, we conduct an empirical study on ML/DL library seeking questions on Stack Overflow to understand the developers' requirements for ML/DL libraries. Based on the findings of the study, we propose a task-oriented ML/DL library recommendation approach, called MLTaskKG. It constructs a knowledge graph that captures AI tasks, ML/DL models, model implementations, repositories, and their relationships by extracting knowledge from different sources such as ML/DL resource websites, papers, ML/DL frameworks, and repositories. Based on the knowledge graph, MLTaskKG recommends ML/DL libraries for developers by matching their requirements on tasks, model characteristics, and implementation information. Our evaluation shows that 92.8% of the tuples sampled from the resulting knowledge graph are correct, demonstrating the high quality of the knowledge graph. A further experiment shows that MLTaskKG can help developers find suitable ML/DL libraries using 47.6% shorter time and with 68.4% higher satisfaction.
C1 [Liu, Mingwei; Zhao, Chengyuan; Peng, Xin; Yu, Simin; Sha, Chaofeng] Fudan Univ, Sch Comp Sci, Shanghai Key Lab Data Sci, Shanghai 200437, Peoples R China.
   [Wang, Haofen] Tongji Univ, Shanghai 200070, Peoples R China.
C3 Fudan University; Tongji University
RP Peng, X (corresponding author), Fudan Univ, Sch Comp Sci, Shanghai Key Lab Data Sci, Shanghai 200437, Peoples R China.
EM 19110240019@fudan.edu.cn; 19110240027@fudan.edu.cn;
   pengxin@fudan.edu.cn; 20212010040@fudan.edu.cn;
   carter.whfcarter@gmail.com; cfsha@fudan.edu.cn
RI Liu, Mingwei/AHI-4200-2022
OI Liu, Mingwei/0000-0002-3462-997X; Zhao, Chengyuan/0000-0002-7161-0848;
   Peng, Xin/0000-0003-3376-2581; Wang, Haofen/0000-0003-3018-3824
FU National Natural Science Foundation of China [61972098]
FX This work was supported by the National Natural Science Foundation of
   China under Grant 61972098.
CR Abdul-Kader SA, 2015, INT J ADV COMPUT SC, V6, P72
   Aggarwal Charu C, 2012, A survey of text clustering algorithms, P163, DOI [10.1007/978-1-4614-3223-4, DOI 10.1007/978-1-4614-3223-46]
   Alshangiti M., 2019, P IEEE ACM INT S EMP, P1
   [Anonymous], 2021, Replication Package
   Beltagy I, 2019, 2019 CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING AND THE 9TH INTERNATIONAL JOINT CONFERENCE ON NATURAL LANGUAGE PROCESSING (EMNLP-IJCNLP 2019), P3615
   Besacier L, 2014, SPEECH COMMUN, V56, P85, DOI 10.1016/j.specom.2013.07.008
   Cao XS, 2021, SIGIR '21 - PROCEEDINGS OF THE 44TH INTERNATIONAL ACM SIGIR CONFERENCE ON RESEARCH AND DEVELOPMENT IN INFORMATION RETRIEVAL, P203, DOI 10.1145/3404835.3462900
   Chen ZP, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P750, DOI 10.1145/3368089.3409759
   Chicaiza J, 2021, INFORMATION, V12, DOI 10.3390/info12060232
   Chihaoui M, 2016, COMPUTERS, V5, DOI 10.3390/computers5040021
   Chouchen M, 2020, LECT NOTES COMPUT SC, V12541, P208, DOI 10.1007/978-3-030-64694-3_13
   Cummaudo A, 2020, PROC INT CONF SOFTW, P1584, DOI 10.1145/3377811.3380404
   Devlin J, 2019, 2019 CONFERENCE OF THE NORTH AMERICAN CHAPTER OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS: HUMAN LANGUAGE TECHNOLOGIES (NAACL HLT 2019), VOL. 1, P4171
   Duric Z, 2002, P IEEE, V90, P1272, DOI 10.1109/JPROC.2002.801449
   Färber M, 2019, LECT NOTES COMPUT SC, V11779, P113, DOI 10.1007/978-3-030-30796-7_8
   Farber M., 2020, P ACM IEEE JOINT C D, P491, DOI 10.1145/3383583.3398578
   Garcia-Garcia A, 2018, APPL SOFT COMPUT, V70, P41, DOI 10.1016/j.asoc.2018.05.018
   gensim, 2021, US
   Goldberg Y., 2017, Neural Network Methods in Natural Language Processing
   Grigorescu S, 2020, J FIELD ROBOT, V37, P362, DOI 10.1002/rob.21918
   He Q, 2022, IEEE T SOFTWARE ENG, V48, P150, DOI 10.1109/TSE.2020.2982154
   Humbatova N, 2020, PROC INT CONF SOFTW, P1110, DOI 10.1145/3377811.3380395
   Islam MJ, 2020, PROC INT CONF SOFTW, P1135, DOI 10.1145/3377811.3380378
   Islam MJ, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P510, DOI 10.1145/3338906.3338955
   Jafri R, 2009, J INF PROCESS SYST, V5, P41, DOI 10.3745/JIPS.2009.5.2.041
   Ji SX, 2022, IEEE T NEUR NET LEAR, V33, P494, DOI 10.1109/TNNLS.2021.3070843
   Joulin A., 2017, P 15 C EUR CHAPT ASS, P427, DOI DOI 10.18653/V1/E17-2068
   Kowsari K, 2019, INFORMATION, V10, DOI 10.3390/info10040150
   Li B, 2021, PROCEEDINGS OF THE 29TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '21), P466, DOI 10.1145/3468264.3468552
   Li HW, 2018, PROC IEEE INT CONF S, P183, DOI 10.1109/ICSME.2018.00028
   Liu JY, 2020, PROCEEDINGS OF THE 43RD INTERNATIONAL ACM SIGIR CONFERENCE ON RESEARCH AND DEVELOPMENT IN INFORMATION RETRIEVAL (SIGIR '20), P2153, DOI 10.1145/3397271.3401405
   Liu Mingwei, 2022, ESEC/FSE 2022: Proceedings of the 30th ACM Joint European Software Engineering Conference and Symposium on the Foundations of Software Engineering, P306, DOI 10.1145/3540250.3549160
   Liu MW, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P120, DOI 10.1145/3338906.3338971
   Liu Y, 2020, IEEE INT CONF AUTOM, P834, DOI 10.1145/3324884.3416628
   Lorenzoni G, 2021, Arxiv, DOI arXiv:2102.07574
   Lu D, 2007, INT J REMOTE SENS, V28, P823, DOI 10.1080/01431160600746456
   Ma Y, 2019, WEB CONFERENCE 2019: PROCEEDINGS OF THE WORLD WIDE WEB CONFERENCE (WWW 2019), P1234, DOI 10.1145/3308558.3313639
   Malik M, 2021, MULTIMED TOOLS APPL, V80, P9411, DOI 10.1007/s11042-020-10073-7
   Manghi P, 2022, QUANT SCI STUD, V2, P1296, DOI 10.1162/qss_e_00160
   Martin L, 2020, PROCEEDINGS OF THE 12TH INTERNATIONAL CONFERENCE ON LANGUAGE RESOURCES AND EVALUATION (LREC 2020), P4689
   McHugh ML, 2012, BIOCHEM MEDICA, V22, P276, DOI 10.11613/bm.2012.031
   Nakayama H, 2018, doccano: Text annotation tool for human
   Nath SS, 2014, 2014 INTERNATIONAL CONFERENCE ON CONTROL, INSTRUMENTATION, COMMUNICATION AND COMPUTATIONAL TECHNOLOGIES (ICCICCT), P554, DOI 10.1109/ICCICCT.2014.6993023
   Nguyen PT, 2020, J SYST SOFTWARE, V161, DOI 10.1016/j.jss.2019.110460
   Niwattanakul Suphakit, 2013, IMECS 2013 Proceedings of International Multiconference of Engineers and Computer Scientists, P380
   Njomou AT, 2021, 2021 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2021), P536, DOI 10.1109/SANER50967.2021.00061
   Otter DW, 2021, IEEE T NEUR NET LEAR, V32, P604, DOI 10.1109/TNNLS.2020.2979670
   Ouni A, 2017, INFORM SOFTWARE TECH, V83, P55, DOI 10.1016/j.infsof.2016.11.007
   Pollacci L, 2022, Arxiv, DOI arXiv:2203.09159
   Prana GAA, 2019, EMPIR SOFTW ENG, V24, P1296, DOI 10.1007/s10664-018-9660-3
   Quo QY, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P822, DOI 10.1109/ASE.2019.00080
   Saied M. A., 2016, P IEEE 24 INT C PROG, P1
   Saied MA, 2018, J SYST SOFTWARE, V145, P164, DOI 10.1016/j.jss.2018.08.032
   Serban A., 2021, arXiv
   Singh R., 2013, ELEMENTS SURVEY SAMP
   Song Y., 2012, 9 INT S COMP MUS MOD, V4, P395
   Srivastava M, 2020, KDD '20: PROCEEDINGS OF THE 26TH ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY & DATA MINING, P3272, DOI 10.1145/3394486.3403379
   StackOverflow, 2021, STACK OV DAT DUMP VE
   Tang YM, 2021, PROC INT CONF SOFTW, P238, DOI 10.1109/ICSE43902.2021.00033
   Teyton C, 2013, WORK CONF REVERSE EN, P192, DOI 10.1109/WCRE.2013.6671294
   Thung F., 2012, Proceedings of the 2012 IEEE 23rd International Symposium on Software Reliability Engineering (ISSRE), P271, DOI 10.1109/ISSRE.2012.22
   Thung F, 2013, WORK CONF REVERSE EN, P182, DOI 10.1109/WCRE.2013.6671293
   Wan CC, 2021, PROC INT CONF SOFTW, P125, DOI 10.1109/ICSE43902.2021.00024
   Wang B., 2021, ARXIV
   Wang C, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P97, DOI 10.1145/3338906.3338963
   Wang L, 2017, PROC IEEE ACM INT C, P189, DOI 10.1109/ICSE-C.2017.102
   WELCH BL, 1947, BIOMETRIKA, V34, P28, DOI 10.2307/2332510
   Wiley V., 2018, Int. J. Artif. Intell. Res, V2, P29, DOI DOI 10.29099/IJAIR.V2I1.42
   Xiao Wang, 2020, 2020 International Conference on Service Science (ICSS), P36, DOI 10.1109/ICSS50103.2020.00014
   Yang M, 2020, COMPLEXITY, V2020, DOI 10.1155/2020/2836064
   Yue L, 2020, WORLD WIDE WEB, V23, P2715, DOI 10.1007/s11280-019-00764-z
   Yurtsever E, 2020, IEEE ACCESS, V8, P58443, DOI 10.1109/ACCESS.2020.2983149
   Montenegro JLZ, 2019, EXPERT SYST APPL, V129, P56, DOI 10.1016/j.eswa.2019.03.054
   Zhang DN, 2021, Arxiv, DOI [arXiv:2103.06312, DOI 10.48550/ARXIV.2103.06312]
   Zhang SA, 2019, ACM COMPUT SURV, V52, DOI 10.1145/3285029
   Zhang TY, 2019, PROC INT SYMP SOFTW, P104, DOI 10.1109/ISSRE.2019.00020
   Zhang Xingxing, 2017, P 2017 C EMP METH NA, P584, DOI DOI 10.18653/V1/D17-1062
   Zhang YH, 2018, ISSTA'18: PROCEEDINGS OF THE 27TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P129, DOI 10.1145/3213846.3213866
   Zou XH, 2020, J PHYS CONF SER, V1487, DOI 10.1088/1742-6596/1487/1/012016
NR 79
TC 3
Z9 3
U1 3
U2 22
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD AUG
PY 2023
VL 49
IS 8
BP 4081
EP 4096
DI 10.1109/TSE.2023.3285280
PG 16
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA P3WA9
UT WOS:001049968200008
DA 2024-07-18
ER

PT J
AU Traini, L
   Cortellessa, V
AF Traini, Luca
   Cortellessa, Vittorio
TI DeLag: Using Multi-Objective Optimization to Enhance the Detection of
   Latency Degradation Patterns in Service-Based Systems
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE AIOps; anomaly correlation; automated diagnosis; microservices;
   Performance issues
ID MEAN SHIFT; PERFORMANCE
AB Performance debugging in production is a fundamental activity in modern service-based systems. The diagnosis of performance issues is often time-consuming, since it requires thorough inspection of large volumes of traces and performance indices. In this paper we present DeLag, a novel automated search-based approach for diagnosing performance issues in service-based systems. DeLag identifies subsets of requests that show, in the combination of their Remote Procedure Call execution times, symptoms of potentially relevant performance issues. We call such symptoms Latency Degradation Patterns. DeLag simultaneously searches for multiple latency degradation patterns while optimizing precision, recall and latency dissimilarity. Experimentation on 700 datasets of requests generated from two microservice-based systems shows that our approach provides better and more stable effectiveness than three state-of-the-art approaches and general purpose machine learning clustering algorithms. DeLag is more effective than all baseline techniques in at least one case study (with p = 0.05 and non-negligible effect size). Moreover, DeLag outperforms in terms of efficiency the second and the third most effective baseline techniques on the largest datasets used in our evaluation (up to 22%).
C1 [Traini, Luca; Cortellessa, Vittorio] Univ LAquila, Dept Informat Engn, Comp Sci & Math, I-67100 Laquila, Italy.
C3 University of L'Aquila
RP Traini, L (corresponding author), Univ LAquila, Dept Informat Engn, Comp Sci & Math, I-67100 Laquila, Italy.
EM luca.traini@univaq.it; vittorio.cortellessa@univaq.it
RI Traini, Luca/IZD-8631-2023
OI Traini, Luca/0000-0003-3676-0645; Cortellessa,
   Vittorio/0000-0002-4507-464X
FU Fondo Territori Lavoro e Conoscenza CGIL, CSIL and UIL; European Union -
   NextGenerationEU-National Recovery and Resilience Plan (Piano Nazionale
   di Ripresa e Resilienza, PNRR) -Project: "SoBigData.it -Strengthening
   the Italian RI for Social Mining and Big Data Analytics" [IR0000013,
   3264]
FX & nbsp;This work was supported in part by "Territori Aperti" (a project
   funded by Fondo Territori Lavoro e Conoscenza CGIL, CSIL and UIL), and
   by European Union - NextGenerationEU-National Recovery and Resilience
   Plan (Piano Nazionale di Ripresa e Resilienza, PNRR) -Project:
   "SoBigData.it -Strengthening the Italian RI for Social Mining and Big
   Data Analytics" -Prot. IR0000013 -Avviso n. 3264 del 28/12/2021.& nbsp;&
   nbsp;
CR Aderaldo Carlos M., 2017, 2017 IEEE/ACM 1st International Workshop on Establishing the Community-Wide Infrastructure for Architecture-Based Software Engineering (ECASE). Proceedings, P8, DOI 10.1109/ECASE.2017.4
   Agrawal R., 1993, SIGMOD Record, V22, P207, DOI 10.1145/170036.170072
   Agrawal R., 1994, P INT VLDB C VLDB 94, P487, DOI DOI 10.5555/645920.672836
   Arcelli D, 2019, 2019 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE (ICSA), P81, DOI 10.1109/ICSA.2019.00017
   Arcuri A, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1, DOI 10.1145/1985793.1985795
   Ardelean D, 2018, PROCEEDINGS OF THE 15TH USENIX SYMPOSIUM ON NETWORKED SYSTEMS DESIGN AND IMPLEMENTATION (NSDI'18), P405
   Arif MM, 2018, EMPIR SOFTW ENG, V23, P1490, DOI 10.1007/s10664-017-9553-x
   Avritzer A, 2020, J SYST SOFTWARE, V165, DOI 10.1016/j.jss.2020.110564
   Avritzer A, 2019, COMPANION OF THE 2019 ACM/SPEC INTERNATIONAL CONFERENCE ON PERFORMANCE ENGINEERING (ICPE '19), P39, DOI 10.1145/3302541.3311961
   Bansal C, 2020, 2020 IEEE/ACM 42ND INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE (ICSE-SEIP), P201, DOI 10.1145/3377813.3381353
   Beschastnikh I, 2020, ACM T SOFTW ENG METH, V29, DOI 10.1145/3375633
   Brauckhoff D, 2012, IEEE ACM T NETWORK, V20, P1788, DOI 10.1109/TNET.2012.2187306
   Breiman L, 2001, MACH LEARN, V45, P5, DOI 10.1023/A:1010933404324
   Chen JF, 2022, IEEE T SOFTWARE ENG, V48, P1529, DOI 10.1109/TSE.2020.3023955
   Chen JF, 2017, PROC IEEE INT CONF S, P341, DOI 10.1109/ICSME.2017.13
   Chen M, 2004, INTERNATIONAL CONFERENCE ON AUTONOMIC COMPUTING, PROCEEDINGS, P36, DOI 10.1109/ICAC.2004.1301345
   CHENG YZ, 1995, IEEE T PATTERN ANAL, V17, P790, DOI 10.1109/34.400568
   Cohen I, 2004, USENIX ASSOCIATION PROCEEDINGS OF THE SIXTH SYMPOSIUM ON OPERATING SYSTEMS DESIGN AND IMPLEMENTATION (OSDE '04), P231
   Comaniciu D, 2002, IEEE T PATTERN ANAL, V24, P603, DOI 10.1109/34.1000236
   Cortellessa V, 2022, J SYST SOFTWARE, V183, DOI 10.1016/j.jss.2021.111084
   Cortellessa V, 2020, PROCEEDINGS OF THE ACM/SPEC INTERNATIONAL CONFERENCE ON PERFORMANCE ENGINEERING (ICPE'20), P161, DOI 10.1145/3358960.3379126
   Curtsinger C, 2013, ACM SIGPLAN NOTICES, V48, P219, DOI 10.1145/2499368.2451141
   Dean J, 2013, COMMUN ACM, V56, P74, DOI 10.1145/2408776.2408794
   Deb K, 2002, IEEE T EVOLUT COMPUT, V6, P182, DOI 10.1109/4235.996017
   Deng LL, 2022, SCI REP-UK, V12, DOI 10.1038/s41598-021-04734-2
   Ding ZS, 2020, PROC INT CONF SOFTW, P1435, DOI 10.1145/3377811.3380351
   Duan SY, 2009, PROC INT CONF DATA, P1012, DOI 10.1109/ICDE.2009.115
   Eismann S, 2020, PROCEEDINGS OF THE ACM/SPEC INTERNATIONAL CONFERENCE ON PERFORMANCE ENGINEERING (ICPE'20), P138, DOI 10.1145/3358960.3379124
   Farshchi M, 2015, 2015 IEEE 26TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING (ISSRE), P24, DOI 10.1109/ISSRE.2015.7381796
   Feitelson DG, 2013, IEEE INTERNET COMPUT, V17, P8, DOI 10.1109/MIC.2013.25
   Fortin FA, 2012, J MACH LEARN RES, V13, P2171
   Han S, 2012, PROC INT CONF SOFTW, P145, DOI 10.1109/ICSE.2012.6227198
   Harman M, 2012, ACM COMPUT SURV, V45, DOI 10.1145/2379776.2379787
   Hassani M, 2018, EMPIR SOFTW ENG, V23, P3248, DOI 10.1007/s10664-018-9603-z
   Hesami M, 2019, SCI REP-UK, V9, DOI 10.1038/s41598-019-54257-0
   Janes A, 2019, IEEE INT SYMP SOFTW, P163, DOI 10.1109/ISSREW.2019.00067
   Jiang ZM, 2015, IEEE T SOFTWARE ENG, V41, P1091, DOI 10.1109/TSE.2015.2445340
   Kaldor J, 2017, PROCEEDINGS OF THE TWENTY-SIXTH ACM SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES (SOSP '17), P34, DOI 10.1145/3132747.3132749
   Krushevskaja Darja, 2013, P 22 INT C WORLD WID, P703, DOI [10.1145/2488388.2488450, DOI 10.1145/2488388.2488450]
   Lee JW, 2021, SCI REP-UK, V11, DOI 10.1038/s41598-021-90237-z
   Li Jialin, 2014, P ACM S CLOUD COMP S, P1, DOI [10.1145/2670979.2670988, DOI 10.1145/2670979.2670988]
   Liao LZ, 2022, IEEE T SOFTWARE ENG, V48, P4986, DOI 10.1109/TSE.2021.3131529
   Liao LZ, 2020, EMPIR SOFTW ENG, V25, P4130, DOI 10.1007/s10664-020-09866-z
   Lucatraini, 2023, Zenodo, DOI 10.5281/ZENODO.7785784
   Mace J, 2018, ACM T COMPUT SYST, V35, DOI 10.1145/3208104
   Mace Jonathan., 2017, End-to-End Tracing: Adoption and Use Cases
   MacQueen J, 1967, P 5 BERKELEY S MATH, V1
   Malik H., 2010, Proceedings of the 2010 IEEE 21st International Symposium on Software Reliability Engineering (ISSRE 2010), P201, DOI 10.1109/ISSRE.2010.43
   Mao K., 2016, P 25 INT S SOFTW TES, P94
   Maricq A, 2018, PROCEEDINGS OF THE 13TH USENIX SYMPOSIUM ON OPERATING SYSTEMS DESIGN AND IMPLEMENTATION, P409
   Mytkowicz T, 2009, ACM SIGPLAN NOTICES, V44, P265, DOI 10.1145/1508284.1508275
   Myunghwan Kim, 2013, Performance Evaluation Review, V41, P93
   Nair V, 2015, KDD'15: PROCEEDINGS OF THE 21ST ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P2029, DOI 10.1145/2783258.2788624
   OHanlon C., 2006, Queue, P14, DOI DOI 10.1145/1142055.1142065
   Page L., 1999, PAGERANK CITATION RA
   Pedregosa F, 2011, J MACH LEARN RES, V12, P2825
   Rodola G., 2022, PSUTIL PROCESS SYSTE
   Rokach L, 2005, DATA MINING AND KNOWLEDGE DISCOVERY HANDBOOK, P321, DOI 10.1007/0-387-25465-X_15
   Rubin J, 2016, PROC INT CONF SOFTW, P982, DOI 10.1145/2884781.2884871
   Sambasivan R. R, 2011, P 8 USENIX C NETW SY, P43
   Sambasivan RR, 2016, PROCEEDINGS OF THE SEVENTH ACM SYMPOSIUM ON CLOUD COMPUTING (SOCC 2016), P401, DOI 10.1145/2987550.2987568
   Sambasivan RR, 2013, IEEE T VIS COMPUT GR, V19, P2466, DOI 10.1109/TVCG.2013.233
   Sigelman Benjamin H., 2010, Dapper, a large-scale distributed systems tracing infrastructure
   Syer MD, 2013, PROC IEEE INT CONF S, P110, DOI 10.1109/ICSM.2013.22
   Tawosi V, 2022, IEEE T SOFTWARE ENG, V48, P3185, DOI 10.1109/TSE.2021.3083360
   Traini L, 2023, EMPIR SOFTW ENG, V28, DOI 10.1007/s10664-022-10247-x
   Traini L, 2022, ACM T SOFTW ENG METH, V31, DOI 10.1145/3485136
   Traini L, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-021-10069-3
   Ueda T, 2016, I S WORKL CHAR PROC, P85, DOI 10.1109/IISWC.2016.7581269
   Veeraraghavan K, 2016, PROCEEDINGS OF OSDI'16: 12TH USENIX SYMPOSIUM ON OPERATING SYSTEMS DESIGN AND IMPLEMENTATION, P635
   Wan ZY, 2021, IEEE T SOFTWARE ENG, V47, P1857, DOI 10.1109/TSE.2019.2937083
   Wang JY, 2004, PROC INT CONF DATA, P79, DOI 10.1109/ICDE.2004.1319986
   Xiong PengCheng, 2013, ACM SPEC INT C PERF, P271, DOI 10.1145/2479871.2479909
   Yairi T., 2001, P INT S ART INT ROB
   Youcong Ni, 2021, Information and Software Technology, V135, DOI 10.1016/j.infsof.2021.106565
   Zhou X, 2021, IEEE T SOFTWARE ENG, V47, P243, DOI 10.1109/TSE.2018.2887384
   Zhou X, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P683, DOI 10.1145/3338906.3338961
NR 77
TC 1
Z9 1
U1 2
U2 4
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUN 1
PY 2023
VL 49
IS 6
BP 3554
EP 3580
DI 10.1109/TSE.2023.3266041
PG 27
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA J9KW5
UT WOS:001012752300012
OA Green Submitted, hybrid
DA 2024-07-18
ER

PT J
AU Xiao, Y
   Song, WJ
   Qi, JY
   Viswanath, B
   McDaniel, P
   Yao, DF
AF Xiao, Ya
   Song, Wenjia
   Qi, Jingyuan
   Viswanath, Bimal
   McDaniel, Patrick
   Yao, Danfeng
TI Specializing Neural Networks for Cryptographic Code Completion
   Applications
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Codes; Neural networks; Cryptography; Task analysis; Operating systems;
   Context modeling; Mathematical models; API completion; neural networks;
   program dependencies
AB Similarities between natural languages and programming languages have prompted researchers to apply neural network models to software problems, such as code generation and repair. However, program-specific characteristics pose unique prediction challenges that require the design of new and specialized neural network solutions. In this work, we identify new prediction challenges in application programming interface (API) completion tasks and find that existing solutions are unable to capture complex program dependencies in program semantics and structures. We design a new neural network model Multi-HyLSTM to overcome the newly identified challenges and comprehend complex dependencies between API calls. Our neural network is empowered with a specialized dataflow analysis to extract multiple global API dependence paths for neural network predictions. We evaluate Multi-HyLSTM on 64,478 Android Apps and predict 774,460 Java cryptographic API calls that are usually challenging for developers to use correctly. Our Multi-HyLSTM achieves an excellent top-1 API completion accuracy at 98.99%. Moreover, we show the effectiveness of our design choices through an ablation study and have released our dataset.
C1 [Xiao, Ya; Song, Wenjia; Qi, Jingyuan; Viswanath, Bimal; Yao, Danfeng] Virginia Tech, Dept Comp Sci, Blacksburg, VA 24060 USA.
   [McDaniel, Patrick] Univ Wisconsin Madison, Sch Comp Data & Informat Sci, Madison, WI 53715 USA.
C3 Virginia Polytechnic Institute & State University; University of
   Wisconsin System; University of Wisconsin Madison
RP Yao, DF (corresponding author), Virginia Tech, Dept Comp Sci, Blacksburg, VA 24060 USA.
EM yax99@vt.edu; wenjia7@vt.edu; jingyq1@vt.edu; vbimal@vt.edu;
   mcdaniel@cs.wisc.edu; danfeng@vt.edu
OI Xiao, Ya/0000-0002-4030-811X; McDaniel, Patrick/0000-0003-2091-7484;
   Yao, Danfeng (Daphne)/0000-0001-8969-2792
FU National Science Foundation [CNS-1929701]; Virginia Commonwealth Cyber
   Initiative (CCI)
FX This work was supported in part by the National Science Foundation under
   Grant CNS-1929701 and in part by Virginia Commonwealth Cyber Initiative
   (CCI).
CR Acar Y, 2017, P IEEE S SECUR PRIV, P154, DOI 10.1109/SP.2017.52
   Acar Y, 2016, P IEEE S SECUR PRIV, P289, DOI 10.1109/SP.2016.25
   Afrose S, 2023, IEEE T SOFTWARE ENG, V49, P485, DOI 10.1109/TSE.2022.3154717
   Afrose S, 2019, 2019 IEEE SECURE DEVELOPMENT (SECDEV 2019), P49, DOI 10.1109/SecDev.2019.00017
   Allamanis M., 2017, PR MACH LEARN RES, P80
   Allamanis M, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P38, DOI 10.1145/2786805.2786849
   Allamanis M, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P281, DOI 10.1145/2635868.2635883
   Allamanis M, 2013, IEEE WORK CONF MIN S, P207, DOI 10.1109/MSR.2013.6624029
   Nguyen AT, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P511, DOI 10.1145/2950290.2950333
   Nguyen AT, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P858, DOI 10.1109/ICSE.2015.336
   [Anonymous], 2018, P INT C LEARNING REP
   [Anonymous], 2021, COD AI AUT JAV JAVAS
   Clement CB, 2020, Arxiv, DOI arXiv:2010.03150
   Bielik P, 2016, PR MACH LEARN RES, V48
   Black Sid, 2021, Zenodo
   Brockschmidt M., 2019, PROC INT C LEARN REP
   Brown T., 2020, P ADV NEUR INF PROC, V33, P1877
   Campbell J. C., 2014, P 11 WORK C MIN SOFT, P252, DOI [DOI 10.1145/2597073.2597102, 10.1145/2597073.2597102]
   Chen Mark, 2021, arXiv, DOI DOI 10.48550/ARXIV.2107.03374
   Chen XY, 2018, Arxiv, DOI arXiv:1802.03691
   Dai ZH, 2019, Arxiv, DOI [arXiv:1901.02860, DOI 10.48550/ARXIV.1901.02860]
   Devlin J, 2019, Arxiv, DOI arXiv:1810.04805
   Feng ZY, 2020, Arxiv, DOI [arXiv:2002.08155, 10.48550/arXiv.2002.08155]
   Guo DY, 2021, Arxiv, DOI arXiv:2009.08366
   Hindle A, 2016, COMMUN ACM, V59, P122, DOI 10.1145/2902362
   Hindle A, 2012, PROC INT CONF SOFTW, P837, DOI 10.1109/ICSE.2012.6227135
   Karampatsis RM, 2020, PROC INT CONF SOFTW, P1073, DOI 10.1145/3377811.3380342
   Dam HK, 2016, Arxiv, DOI arXiv:1608.02715
   Knuth D. E., 1968, Mathematical Systems Theory, V2, P127, DOI 10.1007/BF01692511
   Li J, 2018, Arxiv, DOI arXiv:1711.09573
   Li Y., 2022, Competitionlevel code generation with alphacode, DOI [DOI 10.48550/ARXIV.2203.07814, 10.48550/ARXIV.2203.07814]
   Liu Chang., 2017, Neural code completion
   Liu F, 2020, INT C PROGRAM COMPRE, P37, DOI 10.1145/3387904.3389261
   Liu YH, 2019, Arxiv, DOI arXiv:1907.11692
   Lu S, 2021, Arxiv, DOI arXiv:2102.04664
   Maddison CJ, 2014, PR MACH LEARN RES, V32, P649
   Meng N, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P372, DOI 10.1145/3180155.3180201
   Mukherjee R., 2021, Neural program generation modulo static analysis, P18984
   Murali V., 2018, PROC INT C LEARN REP
   Nadi S, 2016, PROC INT CONF SOFTW, P935, DOI 10.1145/2884781.2884790
   Nguyen T.T., 2013, P 2013 9 JOINT M FDN, P532, DOI DOI 10.1145/2491411.2491458
   Nguyen TT, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P383, DOI 10.1145/1595696.1595767
   Papineni K, 2002, 40TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, PROCEEDINGS OF THE CONFERENCE, P311, DOI 10.3115/1073083.1073135
   Rahaman S, 2019, PROCEEDINGS OF THE 2019 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY (CCS'19), P2455, DOI 10.1145/3319535.3345659
   Ray B, 2016, PROC INT CONF SOFTW, P428, DOI 10.1145/2884781.2884848
   Raychev V, 2016, ACM SIGPLAN NOTICES, V51, P761, DOI 10.1145/2914770.2837671
   Raychev V, 2015, ACM SIGPLAN NOTICES, V50, P111, DOI [10.1145/2775051.2677009, 10.1145/2676726.2677009]
   Raychev V, 2014, ACM SIGPLAN NOTICES, V49, P419, DOI [10.1145/2594291.2594321, 10.1145/2666356.2594321]
   Ren S, 2020, Arxiv, DOI [arXiv:2009.10297, 10.48550/arXiv.2009.10297]
   Schlichtig Michael., 2022, Cambench - cryptographic api misuse detection tool benchmark suite
   Svyatkovskiy A, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P1433, DOI 10.1145/3368089.3417058
   Nguyen T, 2016, PROC INT CONF SOFTW, P416, DOI 10.1145/2884781.2884873
   Vaswani A, 2023, Arxiv, DOI [arXiv:1706.03762, DOI 10.48550/ARXIV.1706.03762, 10.48550/arXiv.1706.03762]
   Xiao Ya, 2023, Digital Threats: Research Practice, DOI 10.1145/3507682
   Yang ZL, 2019, ADV NEUR IN, V32
   Yin Pengcheng, 2017, arXiv
   Zhou Y., 2019, PROC INT C NEURAL IN, p10 197
NR 57
TC 2
Z9 3
U1 0
U2 1
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUN 1
PY 2023
VL 49
IS 6
BP 3524
EP 3535
DI 10.1109/TSE.2023.3265362
PG 12
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA J9KW5
UT WOS:001012752300010
OA hybrid
DA 2024-07-18
ER

PT J
AU Park, J
   Lee, S
   Hong, J
   Ryu, S
AF Park, Jihee
   Lee, Sungho
   Hong, Jaemin
   Ryu, Sukyoung
TI Static Analysis of JNI Programs via Binary Decompilation
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Java; Codes; Source coding; Static analysis; Libraries; Computer
   architecture; Security; Java native interface; binary decompilation;
   static analysis
ID JAVA
AB JNI programs are widely used thanks to the combined benefits of C and Java programs. However, because understanding the interaction behaviors between two different programming languages is challenging, JNI program development is difficult to get right and vulnerable to security attacks. Thus, researchers have proposed static analysis of JNI program source code to detect bugs and security vulnerabilities in JNI programs. Unfortunately, such source code analysis is not applicable to compiled JNI programs that are not open-sourced or open-source JNI programs containing third-party binary libraries. While JN-SAF, the state-of-the-art analyzer for compiled JNI programs, can analyze binary code, it has several limitations due to its symbolic execution and summary-based bottom-up analysis. In this paper, we propose a novel approach to statically analyze compiled JNI programs without their source code using binary decompilation. Unlike JN-SAF that analyzes binaries directly, our approach decompiles binaries and analyzes JNI programs with the decompiled binaries using an existing JNI program analyzer for source code. To decompile binaries to compilable C source code with precise JNI-interoperation-related types, we improve an existing decompilation tool by leveraging the characteristics of JNI programs. Our evaluation shows that the approach is precise as almost the same as the state-of-the-art JNI program analyzer for source code, and more precise than JN-SAF.
C1 [Park, Jihee; Hong, Jaemin; Ryu, Sukyoung] Korea Adv Inst Sci & Technol KAIST, Sch Comp, Daejeon 34141, South Korea.
   [Lee, Sungho] Chungnam Natl Univ, Dept Comp Sci & Engn, Daejeon 34134, South Korea.
C3 Korea Advanced Institute of Science & Technology (KAIST); Chungnam
   National University
RP Park, J (corresponding author), Korea Adv Inst Sci & Technol KAIST, Sch Comp, Daejeon 34141, South Korea.
EM jiheepark@kaist.ac.kr; eshaj@cnu.ac.kr; jaemin.hong@kaist.ac.kr;
   sryu.cs@kaist.ac.kr
RI ; Ryu, Sukyoung/A-8543-2015
OI Hong, Jaemin/0000-0003-4067-7369; Ryu, Sukyoung/0000-0002-0019-9772;
   Lee, SungHo/0000-0002-7107-5590
FU National Research Foundation of Korea (NRF) [2017M3C4A7068177,
   2017R1A2B3012020, 2022R1A2C200366011, 2021R1A5A1021944]; Institute for
   Information & Communications Technology Promotion(IITP) Grant - Korea
   Government (MSIT) [2022-0-00460]; Samsung Electronics Company, Ltd
   [G01210570]
FX This work was supported in part by the National Research Foundation of
   Korea (NRF) under Grants 2017M3C4A7068177, 2017R1A2B3012020,
   2022R1A2C200366011, and 2021R1A5A1021944, in part by the Institute for
   Information & Communications Technology Promotion(IITP) Grant funded by
   the Korea Government (MSIT) under Grant 2022-0-00460, and in part by
   Samsung Electronics Company, Ltd under Grant G01210570.
CR Afonso V, 2016, 23RD ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2016), DOI 10.14722/ndss.2016.23384
   Alam S, 2017, COMPUT SECUR, V65, P230, DOI 10.1016/j.cose.2016.11.011
   Almanee S, 2021, PROC INT CONF SOFTW, P1347, DOI 10.1109/ICSE43902.2021.00122
   Andriesse D, 2016, PROCEEDINGS OF THE 25TH USENIX SECURITY SYMPOSIUM, P583
   [Anonymous], 2018, 98992018 ISOIEC, V4th
   ArgusLab, 2019, NATIVEFLOWBENCH
   Arzt S, 2014, ACM SIGPLAN NOTICES, V49, P259, DOI [10.1145/2666356.2594299, 10.1145/2594291.2594299]
   Barros P, 2015, IEEE INT CONF AUTOM, P669, DOI 10.1109/ASE.2015.69
   Brumley D., 2013, P 22TH USENIX SECURI, P353
   Calcagno C, 2011, LECT NOTES COMPUT SC, V6617, P459, DOI 10.1007/978-3-642-20398-5_33
   Chandramohan M, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P678, DOI 10.1145/2950290.2950350
   Cifuentes C, 1998, PROC IEEE INT CONF S, P228, DOI 10.1109/ICSM.1998.738514
   CIFUENTES C, 1995, SOFTWARE PRACT EXPER, V25, P811, DOI 10.1002/spe.4380250706
   Coogan K, 2011, PROCEEDINGS OF THE 18TH ACM CONFERENCE ON COMPUTER & COMMUNICATIONS SECURITY (CCS 11), P275
   David Y, 2018, ACM SIGPLAN NOTICES, V53, P392, DOI [10.1145/3173162.3177157, 10.1145/3296957.3177157]
   F-Droid, 2019, F DROID FREE OP SOUR
   Fourtounis George, 2020, ISSTA '20: Proceedings of the 29th ACM SIGSOFT International Symposium on Software Testing and Analysis, P388, DOI 10.1145/3395363.3397368
   Furr M, 2006, LECT NOTES COMPUT SC, V3924, P309
   Gotovchits I., 2018, PROC WORKSHOP BINARY, P1, DOI DOI 10.14722/BAR.2018.23019
   Grichi M., 2019, Proceedings of the 29th Annual International Conference on Computer Science and Software Engineering, P274
   HECHT MS, 1974, J ACM, V21, P367, DOI 10.1145/321832.321835
   Hex-Rays SA, 2020, IDA
   IBM, 2009, BEST PRACTICES USING
   Kruegel C, 2004, USENIX ASSOCIATION PROCEEDINGS OF THE 13TH USENIX SECURITY SYMPOSIUM, P255
   Lee S, 2020, IEEE INT CONF AUTOM, P127, DOI 10.1145/3324884.3416558
   Li SL, 2014, SCI COMPUT PROGRAM, V89, P273, DOI 10.1016/j.scico.2014.01.018
   Linn Cullen, 2003, Obfuscation of Executable Code to Improve Resistance to Static Disassembly, P290, DOI [10.1145/948109.948149, DOI 10.1145/948109.948149]
   Liu Z., 2020, ISSTA 20 29 ACM SIGS, P475, DOI [10.1145/3395363.3397370, DOI 10.1145/3395363.3397370]
   Livshits B, 2005, LECT NOTES COMPUT SC, V3780, P139
   National Security Agency, 2020, GHIDR
   Obenour D. M., 2018, MISUSE JNI LIBGUESTF
   Oracle, 2020, CHAPT 2 DES OV COMP
   Smaragdakis Y, 2015, LECT NOTES COMPUT SC, V9458, P485, DOI 10.1007/978-3-319-26529-2_26
   Tan G, 2007, ACM SIGPLAN NOTICES, V42, P39, DOI 10.1145/1297105.1297031
   Verbeek F, 2020, LECT NOTES COMPUT SC, V12310, P247, DOI 10.1007/978-3-030-58768-0_14
   Wei FG, 2018, PROCEEDINGS OF THE 2018 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY (CCS'18), P1137, DOI 10.1145/3243734.3243835
   Wei T, 2007, LECT NOTES COMPUT SC, V4634, P170
   Yadegari B, 2015, P IEEE S SECUR PRIV, P674, DOI 10.1109/SP.2015.47
NR 38
TC 1
Z9 1
U1 0
U2 0
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAY 1
PY 2023
VL 49
IS 5
BP 3089
EP 3105
DI 10.1109/TSE.2023.3241639
PG 17
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA G8MH8
UT WOS:000991628700004
DA 2024-07-18
ER

PT J
AU Afrose, S
   Xiao, Y
   Rahaman, S
   Miller, BP
   Yao, DF
AF Afrose, Sharmin
   Xiao, Ya
   Rahaman, Sazzadur
   Miller, Barton P. P.
   Yao, Danfeng
TI Evaluation of Static Vulnerability Detection Tools With Java
   Cryptographic API Benchmarks
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Cryptographic API misuses; benchmark; Java
AB Several studies showed that misuses of cryptographic APIs are common in real-world code (e.g., Apache projects and Android apps). There exist several open-sourced and commercial security tools that automatically screen Java programs to detect misuses. To compare their accuracy and security guarantees, we develop two comprehensive benchmarks named CryptoAPI-Bench and ApacheCryptoAPI-Bench. CryptoAPI-Bench consists of 181 unit test cases that cover basic cases, as well as complex cases, including interprocedural, field sensitive, multiple class test cases, and path sensitive data flow of misuse cases. The benchmark also includes correct cases for testing false-positive rates. The ApacheCryptoAPI-Bench consists of 121 cryptographic cases from 10 Apache projects. We evaluate four tools, namely, SpotBugs, CryptoGuard, CrySL, and another tool (anonymous) using both benchmarks. We present their performance and comparative analysis. The ApacheCryptoAPI-Bench also examines the scalability of the tools. Our benchmarks are useful for advancing state-of-the-art solutions in the space of misuse detection.
C1 [Afrose, Sharmin; Xiao, Ya; Yao, Danfeng] Virginia Tech, Dept Comp Sci, Blacksburg, VA 24060 USA.
   [Rahaman, Sazzadur] Univ Arizona, Dept Comp Sci, Tucson, AZ 85721 USA.
   [Miller, Barton P. P.] Univ Wisconsin Madison, Comp Sci Dept, Madison, WI 53706 USA.
C3 Virginia Polytechnic Institute & State University; University of
   Arizona; University of Wisconsin System; University of Wisconsin Madison
RP Yao, DF (corresponding author), Virginia Tech, Dept Comp Sci, Blacksburg, VA 24060 USA.
EM sharminafrose@vt.edu; yax99@vt.edu; sazz@cs.arizona.edu;
   bart@cs.wisc.edu; danfeng@vt.edu
OI Yao, Danfeng (Daphne)/0000-0001-8969-2792; Afrose,
   Sharmin/0000-0003-1835-773X; Miller, Barton/0000-0002-9435-8315
FU National Science Foundation [CNS-1929701]; Virginia Commonwealth Cyber
   Initiative (CCI)
FX This work was supported by National Science Foundation under Grant
   CNS-1929701 and the Virginia Commonwealth Cyber Initiative (CCI).
CR Acar Y, 2017, P IEEE S SECUR PRIV, P154, DOI 10.1109/SP.2017.52
   Acar Y, 2016, P IEEE S SECUR PRIV, P289, DOI 10.1109/SP.2016.25
   Afrose S, 2020, APACHECRYPTOAPI BENC
   Afrose S, 2019, CRYPTOAPI BENCH
   Afrose S, 2019, 2019 IEEE SECURE DEVELOPMENT (SECDEV 2019), P49, DOI 10.1109/SecDev.2019.00017
   Ami AS, 2022, Arxiv, DOI arXiv:2107.07065
   AndroZoo, US
   [Anonymous], HOSTNAME VERIFICATIO
   [Anonymous], TRANSITION SWAMP SOF
   [Anonymous], COGNICRYPT SAST CRYS
   [Anonymous], US
   [Anonymous], 2018, WELCOME SWAMP
   [Anonymous], AES ENCRYPTION
   [Anonymous], QUICK ANDROID REV KI
   [Anonymous], SONARSOURCE STATIC C
   [Anonymous], SECURE CODING GUIDEL
   [Anonymous], NIST COMPUTER SECURI
   [Anonymous], 2015, PROC INT S FOUND PRA
   [Anonymous], Find Security Bugs
   [Anonymous], SECURE CODE REV 8 SE
   Arzt S, 2014, ACM SIGPLAN NOTICES, V49, P259, DOI [10.1145/2666356.2594299, 10.1145/2594291.2594299]
   Ashcraft K, 2002, P IEEE S SECUR PRIV, P143, DOI 10.1109/SECPRI.2002.1004368
   Assal H, 2018, PROCEEDINGS OF THE FOURTEENTH SYMPOSIUM ON USABLE PRIVACY AND SECURITY, P281
   Barker E., 2019, NIST Special Publication 800-56B., DOI DOI 10.6028/NIST.SP.800-56BR2
   Barker E., 2018, Transitioning the use of cryptographic algorithms and key lengths, DOI [DOI 10.6028/NIST.SP.800-131AR2, 10.6028/NIST.SP.800-131Ar2]
   Bellare M, 2015, J CRYPTOL, V28, P844, DOI 10.1007/s00145-014-9185-x
   Bianchi A, 2018, 25TH ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2018), DOI 10.14722/ndss.2018.23079
   Blackburn SM, 2006, ACM SIGPLAN NOTICES, V41, P169, DOI 10.1145/1167515.1167488
   Bosu AS, 2017, PROCEEDINGS OF THE 2017 ACM ASIA CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY (ASIA CCS'17), P71, DOI 10.1145/3052973.3053004
   CryptoGuard, US
   Nguyen DC, 2017, CCS'17: PROCEEDINGS OF THE 2017 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P1065, DOI 10.1145/3133956.3133977
   Egele M., 2013, P 2013 ACM SIGSAC C, P73
   Eytani Y, 2007, CONCURR COMP-PRACT E, V19, P267, DOI 10.1002/cpe.1068
   Fahl S., 2012, ACM CCS 12, P50, DOI DOI 10.1145/2382196.2382205
   Ferrara P., 2017, P 1 IT C CYB ITASEC, V1816, P242
   Georgiev Martin, 2012, P 2012 ACM C COMPUTE, P38
   GRAMMATECH, US
   Havelund K., 2003, Proceedings International Parallel and Distributed Processing Symposium, page, P286, DOI [10 . 1109 / IPDPS . 2003 . 1213510, DOI 10.1109/IPDPS.2003.1213510]
   Islam M, 2020, 2020 IEEE SECURE DEVELOPMENT (SECDEV 2020), P49, DOI 10.1109/SecDev45635.2020.00024
   Kellogg M, 2020, IEEE INT CONF AUTOM, P511, DOI 10.1145/3324884.3416593
   Knuth D.E., 1998, ART COMPUTER PROGRAM, V3rd
   Krüger S, 2017, IEEE INT CONF AUTOM, P931, DOI 10.1109/ASE.2017.8115707
   Kruger Stefan, 2018, EUR C OBJ OR PROGR E, V10, P1
   Le Goues C, 2015, IEEE T SOFTWARE ENG, V41, P1236, DOI 10.1109/TSE.2015.2454513
   Li L, 2017, Arxiv, DOI arXiv:1709.05281
   Lu Shan, 2005, WORKSHOP EVALUATION, P1, DOI 10.1.1.134.8941
   Machiry A, 2017, PROCEEDINGS OF THE 26TH USENIX SECURITY SYMPOSIUM (USENIX SECURITY '17), P1007
   Meng N, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P372, DOI 10.1145/3180155.3180201
   Mitra Joydeep, 2017, P 13 INT C PRED MOD, P43, DOI DOI 10.1145/3127005.3127010
   Moriarty Kathleen., 2017, Pkcs# 5: Password-based cryptography specification version 2.1, DOI [10.17487/RFC8018, DOI 10.17487/RFC8018]
   Nadi S, 2016, PROC INT CONF SOFTW, P935, DOI 10.1145/2884781.2884790
   Nan YH, 2018, 25TH ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2018), DOI 10.14722/ndss.2018.23092
   Oltrogge M, 2018, P IEEE S SECUR PRIV, P634, DOI 10.1109/SP.2018.00005
   oracle, US
   Piccolboni L, 2020, Arxiv, DOI arXiv:2007.01061
   Rahaman S, 2019, PROCEEDINGS OF THE 2019 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY (CCS'19), P2455, DOI 10.1145/3319535.3345659
   Rahaman S, 2017, 2017 IEEE CYBERSECURITY DEVELOPMENT (SECDEV), P61, DOI 10.1109/SecDev.2017.23
   Sounthiraraj D, 2014, 21ST ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2014), DOI 10.14722/ndss.2014.23205
   Späth J, 2019, P ACM PROGRAM LANG, V3, DOI 10.1145/3290361
   SpotBugs, FIND BUGS JAV PROGR
   Wikipedia contributors, DAT FLOW ANAL WIK FR
   Zuo CS, 2019, P IEEE S SECUR PRIV, P1296, DOI 10.1109/SP.2019.00009
NR 62
TC 9
Z9 9
U1 3
U2 7
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD FEB 1
PY 2023
VL 49
IS 2
BP 485
EP 497
DI 10.1109/TSE.2022.3154717
PG 13
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 9F0FH
UT WOS:000937151900002
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Chen, LS
   Pei, Y
   Pan, MX
   Zhang, T
   Wang, QX
   Furia, CA
AF Chen, Liushan
   Pei, Yu
   Pan, Minxue
   Zhang, Tian
   Wang, Qixin
   Furia, Carlo A.
TI Program Repair With Repeated Learning
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Automated program repair (APR); generate-and-validate APR;
   learning-to-rank; repeated learning
ID AUTOMATED REPAIR; CODE; GENERATION
AB A key challenge in generate-and-validate automated program repair is directing the search for fixes so that it can efficiently find those that are more likely to be correct. To this end, several techniques use machine learning to capture the features of programmer-written fixes. In existing approaches, fitting the model typically takes place before fix generation and is independent of it: the fix generation process uses the learned model as one of its inputs. However, the intermediate outcomes of an ongoing fix generation process often provide valuable information about which candidate fixes were "better"; this information could profitably be used to retrain the model, so that each new iteration of the fixing process would also learn from the outcome of previous ones. In this paper, we propose the LIANA technique for automated program repair, which is based on this idea of repeatedly learning the features of generated fixes. To this end, LIANA uses a fine-grained model that combines information about fix characteristics, their relations to the fixing context, and the results of test execution. The model is initially trained offline, and then repeatedly updated online as the fix generation process unravels; at any step, the most up-to-date model is used to guide the search for fixes-prioritizing those that are more likely to include the right ingredients. In an experimental evaluation on 732 real-world Java bugs from 3 popular benchmarks, LIANA built correct fixes for 134 faults ( 83 ranked as first in its output)- improving over several other generate-and-validate program repair tools according to various measures.
C1 [Chen, Liushan] Hong Kong Polytech Univ, Dept Comp, Hong Kong, Peoples R China.
   [Pei, Yu; Wang, Qixin] Hong Kong Polytech Univ, Dept Comp, Hong Kong, Peoples R China.
   [Pan, Minxue] Nanjing Univ, State Key Lab Novel Software Technol, Software Inst, Nanjing, Jiangsu, Peoples R China.
   [Zhang, Tian] Nanjing Univ, Dept Comp Sci & Technol, State Key Lab Novel Software Technol, Nanjing, Jiangsu, Peoples R China.
   [Furia, Carlo A.] Univ Svizzera Italiana, Software Inst USI, Lugano, Switzerland.
C3 Hong Kong Polytechnic University; Hong Kong Polytechnic University;
   Nanjing University; Nanjing University; Universita della Svizzera
   Italiana
RP Pei, Y (corresponding author), Hong Kong Polytech Univ, Dept Comp, Hong Kong, Peoples R China.
EM ls.chen@connect.polyu.hk; csypei@comp.polyu.edu.hk; mxp@nju.edu.cn;
   ztluck@nju.edu.cn; qixin.wang@polyu.edu.hk; furiac@usi.ch
RI Wang, Qixin/A-9372-2008; Pei, Yu/JJD-3994-2023; Pei, Yu/GRI-9837-2022;
   Pan, Minxue/AIC-5169-2022
OI Pei, Yu/0000-0001-6065-6958; CHEN, Liushan/0000-0003-0414-4987; Furia,
   Carlo A./0000-0003-1040-3201
FU Hong Kong Research Grants Council (RGC) General Research Fund (GRF)
   [PolyU 152002/18E]; National Natural Science Foundation [61972193]; Hong
   Kong RGC Theme-Based Research Scheme (TRS) [T22-505/19-N, P0031331,
   P0031259]; RGC GRF [P0005550, P0004750, G-PolyU503/16]; RGC Germany/HK
   [P0033695]; Hong Kong Polytechnic University Fund [P0013879, P0031950,
   P0036469, Hi-Fi 200021-182060]; Swiss National Science Foundation(SNF); 
   [PolyU 152164/14E]
FX The work of Yu Pei was supported in part by the Hong Kong Research
   Grants Council (RGC) General Research Fund (GRF)under Grant PolyU
   152002/18E. The workof Minxue Pan was supported in part by the National
   Natural Science Foundation under Grant 61972193. The work of Qixin Wang
   was supported in part by the Hong Kong RGC Theme-Based Research Scheme
   (TRS) under Grant T22-505/19-N (P0031331, RBCR, P0031259, RBCP), in part
   by RGC GRF under Grants PolyU 152002/18E (P0005550, Q67V) and PolyU
   152164/14E (P0004750,Q44B), in part by RGC Germany/HK under Grant
   G-PolyU503/16, and in part bythe Hong Kong Polytechnic University Fund
   under Grants P0033695 (ZVRD),P0013879 (BBWH), P0031950 (ZE1N), P0036469
   (CDA8), and 8B2V. The workof Carlo A. Furia was supported in part bythe
   Swiss National Science Foundation(SNF) under Grant Hi-Fi 200021-182060.
CR Agrawal A, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1050, DOI 10.1145/3180155.3180197
   [Anonymous], RESTORE IMPLEMENTATI
   Arcuri A, 2011, APPL SOFT COMPUT, V11, P3494, DOI 10.1016/j.asoc.2011.01.023
   Arcuri A, 2008, IEEE C EVOL COMPUTAT, P162, DOI 10.1109/CEC.2008.4630793
   Chakraborty J, 2021, PROCEEDINGS OF THE 29TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '21), P429, DOI 10.1145/3468264.3468537
   Chakraborty S, 2022, IEEE T SOFTWARE ENG, V48, P1385, DOI 10.1109/TSE.2020.3020502
   Chen LS, 2021, IEEE T SOFTWARE ENG, V47, P2841, DOI 10.1109/TSE.2020.2970009
   Chen LS, 2017, IEEE INT CONF AUTOM, P637, DOI 10.1109/ASE.2017.8115674
   Chen TQ, 2016, KDD'16: PROCEEDINGS OF THE 22ND ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P785, DOI 10.1145/2939672.2939785
   Chen ZM, 2019, Arxiv, DOI arXiv:1811.05703
   Chen ZM, 2021, IEEE T SOFTWARE ENG, V47, P1943, DOI 10.1109/TSE.2019.2940179
   Durieux T., 2016, HAL01272126 U LILL 1
   Durieux T, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P302, DOI 10.1145/3338906.3338911
   Falleri Jean-Remy, 2014, P 29 ACM IEEE INT C, P313
   Gao X, 2019, PROCEEDINGS OF THE 28TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA '19), P8, DOI 10.1145/3293882.3330558
   Gazzola L, 2019, IEEE T SOFTWARE ENG, V45, P34, DOI 10.1109/TSE.2017.2755013
   Ghanbari A, 2019, PROCEEDINGS OF THE 28TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA '19), P19, DOI 10.1145/3293882.3330559
   Gupta R, 2017, AAAI CONF ARTIF INTE, P1345
   Han J., 2005, DATA MINING CONCEPTS
   Hata H, 2019, Arxiv, DOI arXiv:1812.07170
   Hua JR, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P12, DOI 10.1145/3180155.3180245
   Järvelin K, 2002, ACM T INFORM SYST, V20, P422, DOI 10.1145/582415.582418
   Jiang JJ, 2018, ISSTA'18: PROCEEDINGS OF THE 27TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P298, DOI 10.1145/3213846.3213871
   Just R, 2014, P 2014 INT S SOFTW T, P437, DOI DOI 10.1145/2610384.2628055
   Kim D, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P802, DOI 10.1109/ICSE.2013.6606626
   Koyuncu A, 2020, EMPIR SOFTW ENG, V25, P1980, DOI 10.1007/s10664-019-09780-z
   Le Goues C, 2019, COMMUN ACM, V62, P56, DOI 10.1145/3318162
   Le Goues C, 2015, IEEE T SOFTWARE ENG, V41, P1236, DOI 10.1109/TSE.2015.2454513
   Le T.-D. B., 2016, P 25 INT S SOFTW TES, P177, DOI DOI 10.1145/2931037.2931049
   Le XBD, 2019, PROC INT CONF SOFTW, P524, DOI 10.1109/ICSE.2019.00064
   Le XBD, 2017, PROCEEDINGS OF THE 26TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA'17), P376, DOI 10.1145/3092703.3098225
   Le XBD, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P593, DOI 10.1145/3106237.3106309
   Le XBD, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P213, DOI 10.1109/SANER.2016.76
   Li X, 2017, P ACM PROGRAM LANG, V1, DOI 10.1145/3133916
   Li Y, 2020, PROC INT CONF SOFTW, P602, DOI 10.1145/3377811.3380345
   Lin D., 2017, INT C SYSTEMS PROGRA, P55
   Liu K, 2020, PROC INT CONF SOFTW, P615, DOI 10.1145/3377811.3380338
   Liu K, 2019, PROCEEDINGS OF THE 28TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA '19), P31, DOI 10.1145/3293882.3330577
   Liu K, 2018, ASIA PAC SOFWR ENG, P658, DOI 10.1109/APSEC.2018.00085
   Liu K, 2019, 2019 IEEE 26TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER), P456, DOI 10.1109/saner.2019.8667970
   Liu XL, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P118, DOI 10.1109/SANER.2018.8330202
   Long F, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P727, DOI 10.1145/3106237.3106253
   Long F, 2016, PROC INT CONF SOFTW, P702, DOI 10.1145/2884781.2884872
   Long F, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P166, DOI 10.1145/2786805.2786811
   Long F, 2016, ACM SIGPLAN NOTICES, V51, P298, DOI 10.1145/2914770.2837617
   Lutellier Thibaud, 2020, ISSTA '20: Proceedings of the 29th ACM SIGSOFT International Symposium on Software Testing and Analysis, P101, DOI 10.1145/3395363.3397369
   Madeiral F, 2019, 2019 IEEE 26TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER), P468, DOI [10.1109/saner.2019.8667991, 10.1109/SANER.2019.8667991]
   Martinez M., 2016, P 25 INT S SOFTWARE, P441, DOI 10.1145/2931037
   Martinez M, 2018, LECT NOTES COMPUT SC, V11036, P65, DOI 10.1007/978-3-319-99241-9_3
   Martinez M, 2017, EMPIR SOFTW ENG, V22, P1936, DOI 10.1007/s10664-016-9470-4
   Martinez M, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE COMPANION 2014), P492, DOI 10.1145/2591062.2591114
   Martínez M, 2015, EMPIR SOFTW ENG, V20, P176, DOI 10.1007/s10664-013-9282-8
   Mechtaev S, 2018, ACM T SOFTW ENG METH, V27, DOI 10.1145/3241980
   Mechtaev S, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P129, DOI 10.1145/3180155.3180247
   Mechtaev S, 2016, PROC INT CONF SOFTW, P691, DOI 10.1145/2884781.2884807
   Mechtaev S, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P448, DOI 10.1109/ICSE.2015.63
   Monperrus M, 2018, ACM COMPUT SURV, V51, DOI 10.1145/3105906
   Monperrus M, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P234, DOI 10.1145/2568225.2568324
   Nielson F., 1999, Principles of Program Analysis
   Pearson S, 2017, PROC INT CONF SOFTW, P609, DOI 10.1109/ICSE.2017.62
   Pei Y, 2014, IEEE T SOFTWARE ENG, V40, P427, DOI 10.1109/TSE.2014.2312918
   Qi Zichao, 2015, P 2015 INT S SOFTW T, P24, DOI DOI 10.1145/2771783.2771791
   Ramasubramanian K., 2019, APPL SUPERVISED LEAR
   Saha RK, 2017, IEEE INT CONF AUTOM, P648, DOI 10.1109/ASE.2017.8115675
   Saha S, 2019, PROC INT CONF SOFTW, P13, DOI 10.1109/ICSE.2019.00020
   Simfoam, about us
   Tie-Yan Liu, 2009, Foundations and Trends in Information Retrieval, V3, P225, DOI 10.1561/1500000016
   Tufano M, 2019, ACM T SOFTW ENG METH, V28, DOI 10.1145/3340544
   WALA, T J WATSON LIB ANAL
   Weimer W, 2009, PROC INT CONF SOFTW, P364, DOI 10.1109/ICSE.2009.5070536
   Wen M, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1, DOI 10.1145/3180155.3180233
   White M, 2019, 2019 IEEE 26TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER), P479, DOI [10.1109/saner.2019.8668043, 10.1109/SANER.2019.8668043]
   Wong WE, 2010, J SYST SOFTWARE, V83, P188, DOI 10.1016/j.jss.2009.09.037
   Xin Q, 2017, PROCEEDINGS OF THE 26TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA'17), P226, DOI 10.1145/3092703.3092718
   Xin Q, 2017, IEEE INT CONF AUTOM, P660, DOI 10.1109/ASE.2017.8115676
   Xiong YF, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P789, DOI 10.1145/3180155.3180182
   Xiong YF, 2017, PROC INT CONF SOFTW, P416, DOI 10.1109/ICSE.2017.45
   Xu TT, 2022, IEEE T SOFTWARE ENG, V48, P309, DOI 10.1109/TSE.2020.2987862
   Xuan JF, 2017, IEEE T SOFTWARE ENG, V43, P34, DOI 10.1109/TSE.2016.2560811
   Ye H, 2020, Arxiv, DOI arXiv:1805.03454
   Yu ZX, 2019, EMPIR SOFTW ENG, V24, P33, DOI 10.1007/s10664-018-9619-4
   Yuan Y, 2020, IEEE T SOFTWARE ENG, V46, P1040, DOI 10.1109/TSE.2018.2874648
NR 82
TC 1
Z9 1
U1 0
U2 4
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD FEB 1
PY 2023
VL 49
IS 2
BP 831
EP 848
DI 10.1109/TSE.2022.3164662
PG 18
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 9F0FH
UT WOS:000937151900020
DA 2024-07-18
ER

PT J
AU Arteca, E
   Schäfer, M
   Tip, F
AF Arteca, Ellen
   Schafer, Max
   Tip, Frank
TI Learning How to Listen: Automatically Finding Bug Patterns in
   Event-Driven JavaScript APIs
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Static analysis; Libraries; JavaScript; event-driven programming; bug
   finding; API modeling
ID STATIC ANALYSIS; RACE DETECTION
AB Event-driven programming is widely practiced in the JavaScript community, both on the client side to handle UI events and AJAX requests, and on the server side to accommodate long-running operations such as file or network I/O. Many popular event-based APIs allow event names to be specified as free-form strings without any validation, potentially leading to lost events for which no listener has been registered and dead listeners for events that are never emitted. In previous work, Madsen et al. presented a precise static analysis for detecting such problems, but their analysis does not scale because it may require a number of contexts that is exponential in the size of the program. Concentrating on the problem of detecting dead listeners, we present an approach to learn how to use event-based APIs by first mining a large corpus of JavaScript code using a simple static analysis to identify code snippets that register an event listener, and then applying statistical modeling to identify anomalous patterns, which often indicate incorrect API usage. In a large-scale evaluation on 127,531 open-source JavaScript code bases, our technique was able to detect 75 anomalous listener-registration patterns, while maintaining a precision of 90.9% and recall of 7.5% over a validation set, demonstrating that a learning-based approach to detecting event-handling bug patterns is feasible. In an additional experiment, we investigated instances of these patterns in 25 open-source projects, and reported 30 issues to the project maintainers, of which 7 have been confirmed as bugs.
C1 [Arteca, Ellen; Tip, Frank] Northeastern Univ, Khoury Coll Comp Sci, Boston, MA 02115 USA.
   [Schafer, Max] GitHub, Oxford OX1 4EH, England.
C3 Northeastern University
RP Tip, F (corresponding author), Northeastern Univ, Khoury Coll Comp Sci, Boston, MA 02115 USA.
EM arteca.e@northeastern.edu; max-schaefer@github.com;
   f.tip@northeastern.edu
OI Tip, Frank/0000-0002-1862-3498
FU National Science Foundation [CCF-1715153, CCF-1907727]; Natural Sciences
   and Engineering Research Council of Canada
FX Ellen Arteca and Frank Tip were supported in part by National Science
   Foundation under Grants CCF-1715153 and CCF-1907727. Ellen Arteca was
   also supported in part by the Natural Sciences and Engineering Research
   Council of Canada.
CR Acharya Mithun, 2007, P 6 JOINT M EUROPEAN, P25, DOI [DOI 10.1145/1287624.1287630, 10.1145/1287624.1287630]
   Adamsen CQ, 2017, P ACM PROGRAM LANG, V1, DOI 10.1145/3133890
   Adamsen CQ, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P38, DOI 10.1145/3236024.3236038
   Alimadadi S, 2018, P ACM PROGRAM LANG, V2, DOI 10.1145/3276532
   Angular, 2021, US
   [Anonymous], 2001, Proceedings of the 18th ACM Symposium on Operating Systems Principles
   [Anonymous], 2010, P 19 INT S SOFTW TES, DOI [10.1145/1831708.1831723, DOI 10.1145/1831708.1831723]
   Avgustinov P., 2016, 30 EUR C OBJ OR PROG, V56
   Bae S, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P507, DOI 10.1145/2635868.2635916
   Bryan J. G., 1960, INTRO PROBABILITY RA
   Chibotaru V, 2019, PROCEEDINGS OF THE 40TH ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION (PLDI '19), P760, DOI 10.1145/3314221.3314648
   Eberhardt J, 2019, PROCEEDINGS OF THE 40TH ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION (PLDI '19), P745, DOI 10.1145/3314221.3314640
   Electron Administrative Working Group, 2021, EL BUILD CROSS PLATF
   Facebook, 2021, REACT JAVASCRIPT LIB
   Gao Z, 2017, PROC INT CONF SOFTW, P758, DOI 10.1109/ICSE.2017.75
   Github, 2020, HAR BUG FIX COMM
   Github, 2020, ER BUG FIX COMM
   GitHub, 2021, QL STAND LIB
   GitHub, 2021, LGTM
   Gyimesi P, 2019, IEEE INT CONF SOFTW, P90, DOI 10.1109/ICST.2019.00019
   Hanam Q, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P144, DOI 10.1145/2950290.2950308
   Li Zhenmin, 2005, P ACM SIGSOFT SOFTW, P306, DOI DOI 10.1145/1081706.1081755
   Liu HQ, 2016, J SYST SOFTWARE, V121, P234, DOI 10.1016/j.jss.2016.02.007
   Madsen M, 2021, COMMUNICATION
   Madsen M, 2015, ACM SIGPLAN NOTICES, V50, P505, DOI [10.1145/2858965.2814272, 10.1145/2814270.2814272]
   Mas-Colell A., 1995, MICROECONOMIC THEORY, V1
   Mezzetti G., 2018, P 32 EUROPEAN C OBJE, V109, p7:1
   Monperrus M, 2013, ACM T SOFTW ENG METH, V22, DOI 10.1145/2430536.2430541
   Murali V, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P151, DOI 10.1145/3106237.3106284
   Mutlu E, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P381, DOI 10.1145/2786805.2786820
   Node.js, 2021, PROC STDOUT DOC
   Node.js, 2021, STREAM DRAIN EV DOC
   Node.js, 2021, PROC STDIN DOC
   Norvell F. L., 2021, ADD DYNAMIC INSTRUME
   OpenJS Foundation, 2021, JQUERY
   OpenJS Foundation, 2021, EVENTEMITTER DOC
   OpenJS Foundation, 2021, ZLIB ZIPBASE DOC
   OpenJS Foundation, 2021, ZLIB GUNZ DOC
   OpenJS Foundation, 2021, NOD JS
   OpenJS Foundation, 2021, STREAM READ DOC
   P. developers, 2021, PANDAS PYTHON DATA A
   Petrov B, 2012, ACM SIGPLAN NOTICES, V47, P251, DOI 10.1145/2345156.2254095
   Pradel M, 2018, P ACM PROGRAM LANG, V2, DOI 10.1145/3276517
   Pradel M, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P314, DOI 10.1109/ICSE.2015.51
   Raychev V, 2015, ACM SIGPLAN NOTICES, V50, P111, DOI [10.1145/2775051.2677009, 10.1145/2676726.2677009]
   Raychev V, 2013, ACM SIGPLAN NOTICES, V48, P151, DOI [10.1145/2544173.2509538, 10.1145/2509136.2509538]
   Ryu S, 2019, IEEE SOFTWARE, V36, P74, DOI 10.1109/MS.2018.110113408
   Sadowski C, 2018, COMMUN ACM, V61, P58, DOI 10.1145/3188720
   Sadowski C, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P598, DOI 10.1109/ICSE.2015.76
   SciPy developers, 2021, SCIPY
   Vidis B, 2021, MINIMAL REQUEST PROM
   Wang J, 2017, IEEE INT CONF AUTOM, P520, DOI 10.1109/ASE.2017.8115663
   Weimer W, 2005, LECT NOTES COMPUT SC, V3440, P461
   World Wide Web Consortium, 2021, UI EV W3C WORK DRAFT
   Zhang L, 2017, PROC INT CONF SOFTW, P278, DOI 10.1109/ICSE.2017.33
   Zheng Y., 2011, Proceedings of the 20th International Conference on World Wide Web, P805
NR 56
TC 0
Z9 1
U1 1
U2 5
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JAN 1
PY 2023
VL 49
IS 1
BP 166
EP 184
DI 10.1109/TSE.2022.3147975
PG 19
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA L1HD8
UT WOS:001020827200009
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Liao, LZ
   Chen, JF
   Li, H
   Zeng, Y
   Shang, WY
   Sporea, C
   Toma, A
   Sajedi, S
AF Liao, Lizhi
   Chen, Jinfu
   Li, Heng
   Zeng, Yi
   Shang, Weiyi
   Sporea, Catalin
   Toma, Andrei
   Sajedi, Sarah
TI Locating Performance Regression Root Causes in the Field Operations of
   Web-Based Systems: An Experience Report
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Performance regression; performance regression root causes; field
   testing; experience report; industry case study
AB Software developers usually rely on in-house performance testing to detect performance regressions and locate their root causes. Such performance testing is typically resource and time-consuming, making it impractical to conduct when the software is delivered in fast-paced release cycles. On the other hand, the operational data generated in the field environment provides rich information about the performance of a software system and its runtime activities. Therefore, this work explores the idea of leveraging the readily-available field operational data to locate the root causes of performance regression instead of running expensive performance tests. However, due to the ever-changing workloads from the end users and the noise from the field, directly analyzing performance metrics such as response time of the system may not be able to help locate the root causes of performance regressions. In this paper, we report our experience of designing and adopting an approach that automatically locates the root causes of performance regressions while the software systems are deployed and running in the field. First, our approach uses black-box performance models to capture the relationship between the performance of a system and its runtime activities. Then, our approach analyzes the performance models and uses statistical techniques to suggest the problematic system runtime activities (i.e., the root causes) that are related to a performance regression. Our evaluation considered three open-source projects and one industrial product. In the three open-source systems, we find that our approach can successfully locate the root causes of all arbitrarily injected synthetic performance regressions. Our approach has successfully detected and located the root causes of three performance regressions in an industry system and it has been adopted by our industrial partner and used in practice on a daily basis over a 12-month period. In addition, we share the challenges that we encountered during the design and adoption of our approach, how we address those challenges, and the lessons that we learned during the process. We believe that our novel approach together with our documented experience can benefit practitioners and researchers who wish to leverage the field-operation data of a software system to conduct performance assurance activities.
C1 [Liao, Lizhi; Zeng, Yi; Shang, Weiyi] Concordia Univ, Dept Comp Sci & Software Engn, Montreal, PQ H3H 2L9, Canada.
   [Chen, Jinfu] Huawei Technol, Ctr Software Excellence, Markham, ON L3R 5A4, Canada.
   [Li, Heng] Polytech Montreal, Dept Genie Informat & Genie Logiciel, Montreal, PQ H3T 1J4, Canada.
   [Sporea, Catalin; Toma, Andrei; Sajedi, Sarah] ERA Environm, St Laurent, PQ H4S 2A1, Canada.
C3 Concordia University - Canada; Huawei Technologies; Universite de
   Montreal; Polytechnique Montreal
RP Chen, JF (corresponding author), Huawei Technol, Ctr Software Excellence, Markham, ON L3R 5A4, Canada.
EM l_lizhi@encs.concordia.ca; jinfu.chen1@huawei.com; heng.li@polymtl.ca;
   ze_yi@encs.concordia.ca; shang@encs.concordia.ca;
   steve.sporea@era-ehs.com; andrei.toma@era-ehs.com;
   sarah.sajedi@era-ehs.com
RI Toma, Andrei N/K-2483-2012; Sajedi, Sarah/KGL-3269-2024; Liao,
   Lizhi/HNB-9278-2023
OI Liao, Lizhi/0000-0001-9920-5855; Sajedi, Sarah/0000-0002-7900-2812
CR Abreu R., 2009, SARA, V9, P2
   Abreu R, 2006, 12TH PACIFIC RIM INTERNATIONAL SYMPOSIUM ON DEPENDABLE COMPUTING, PROCEEDINGS, P39
   Adler S., 1999, LINUX GAZETTE, V38
   AGRAWAL H, 1993, SOFTWARE PRACT EXPER, V23, P589, DOI 10.1002/spe.4380230603
   Al-Khanjari ZA, 2005, SOFTWARE QUAL J, V13, P129, DOI 10.1007/s11219-005-6214-x
   Altman E, 2010, ACM SIGPLAN NOTICES, V45, P739, DOI 10.1145/1932682.1869519
   Alves E., 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P520, DOI 10.1109/ASE.2011.6100114
   [Anonymous], Apache JMeter - Apache JMeterTM'
   [Anonymous], APACHE TOMCAT WELCOM
   [Anonymous], MOZILLA PERFORMANCE
   [Anonymous], CLOC COUNT LINES COD
   [Anonymous], TPC BENCHMARK W TPC
   [Anonymous], COST PERFORMANCE ISS
   [Anonymous], CANARY RELEASE
   [Anonymous], PIDSTAT 1 REPORT STA
   [Anonymous], 1995, 11 C UNC ART INT SAN, DOI DOI 10.1109/TGRS.2004.834800
   [Anonymous], 2011, AUTONOMIC LOAD TESTI
   [Anonymous], 2015, 2015 ACM SPEC 6 INT
   [Anonymous], CLOUDSCALE PROJECT C
   [Anonymous], How One Second Could Cost Amazon .6 Billion
   [Anonymous], CLOUDSCALE PROJECT
   [Anonymous], MULTICOLLINEARITY RE
   [Anonymous], NET COMPILER PLATFOR
   [Anonymous], Elastic Stack: Elasticsearch, Logstash and Kibana
   [Anonymous], ECLIPSE JAVA DEV TOO
   Arif MM, 2018, EMPIR SOFTW ENG, V23, P1490, DOI 10.1007/s10664-017-9553-x
   Baah GK, 2010, IEEE T SOFTWARE ENG, V36, P528, DOI 10.1109/TSE.2009.87
   BALL T, 1994, ACM T PROGR LANG SYS, V16, P1319, DOI 10.1145/183432.183527
   Benesty J, 2009, SPRINGER TOP SIGN PR, V2, P37, DOI 10.1007/978-3-642-00296-0_5
   Bezemer CP, 2019, PROCEEDINGS OF THE 2019 ACM/SPEC INTERNATIONAL CONFERENCE ON PERFORMANCE ENGINEERING (ICPE '19), P45, DOI 10.1145/3297663.3309672
   Bondi A.B., 2015, Foundations of software and system performance engineering: process, performance modeling, requirements, testing, scalability, and practice
   Bonferroni C.E., 1936, Pubblicazioni del R Istituto Superiore di Scienze Economiche e Commericiali diFirenze, V8, P3
   BREIMAN L, 1992, INT STAT REV, V60, P291, DOI 10.2307/1403680
   Cellier P, 2008, LECT NOTES ARTIF INT, V4933, P273, DOI 10.1007/978-3-540-78137-0_20
   Cellier Peggy., 2011, SEKE, P238
   Chen JF, 2017, PROC IEEE INT CONF S, P341, DOI 10.1109/ICSME.2017.13
   Chen M, 2004, INTERNATIONAL CONFERENCE ON AUTONOMIC COMPUTING, PROCEEDINGS, P36, DOI 10.1109/ICAC.2004.1301345
   Chen TH, 2017, 2017 IEEE/ACM 39TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2017), P243, DOI 10.1109/ICSE-SEIP.2017.26
   Chilimbi TM, 2004, ACM SIGPLAN NOTICES, V39, P156, DOI 10.1145/1037187.1024412
   Cliff N., 2014, Ordinal Methods for Behavioral Data Analysis
   Cohen J., 1988, STAT POWER ANAL BEHA
   COUTANT DS, 1988, SIGPLAN NOTICES, V23, P125, DOI 10.1145/960116.54003
   Debroy V., 2010, Proceedings of the Tenth International Conference on Quality Software (QSIC 2010), P13, DOI 10.1109/QSIC.2010.80
   Ding ZS, 2020, PROC INT CONF SOFTW, P1435, DOI 10.1145/3377811.3380351
   Edwards J. C., 2003, US Patent, Patent No. [6,539,501, 6539501]
   Eismann S, 2020, PROCEEDINGS OF THE ACM/SPEC INTERNATIONAL CONFERENCE ON PERFORMANCE ENGINEERING (ICPE'20), P138, DOI 10.1145/3358960.3379124
   Flora Parminder, 2014, P 11 WORK C MIN SOFT, P232, DOI [DOI 10.1145/2597073.2597092EVENT-PLACE, 10.1145/2597073.2597092event-place:Hyderabad,India, DOI 10.1145/2597073.2597092EVENT-PLACE:HYDERABAD,INDIA]
   Foo KC, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P159, DOI 10.1109/ICSE.2015.144
   Freedman D., 2005, Statistical Models: Theory and Practice, DOI 10.1017/cbo9781139165495
   Gao RY, 2016, IEEE INT CONF SOFTW, P22, DOI 10.1109/ICST.2016.9
   Google Cloud, Cloud Computing Services
   Greenberg A, 2009, ACM SIGCOMM COMP COM, V39, P68, DOI 10.1145/1496091.1496103
   Gregg B., 2014, Systems performance: enterprise and the cloud
   Gunther HarveyW., 2000, IBM WebSphere Application Server Standard and Advanced Editions-White paper
   Harrell FE, 2015, SPRINGER SER STAT, DOI 10.1007/978-3-319-19425-7
   Harrold MJ, 2000, SOFTW TEST VERIF REL, V10, P171, DOI 10.1002/1099-1689(200009)10:3<171::AID-STVR209>3.0.CO;2-J
   He SL, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P60, DOI 10.1145/3236024.3236083
   Heger Christoph, 2013, P 4 ACM SPEC INT C P, P27, DOI DOI 10.1145/2479871.2479879
   HENNESSY J, 1982, ACM T PROGR LANG SYS, V4, P323, DOI 10.1145/357172.357173
   Humble J., 2018, ACCELERATE SCI LEAN
   Jayathilaka H, 2017, PROCEEDINGS OF THE 26TH INTERNATIONAL CONFERENCE ON WORLD WIDE WEB (WWW'17), P469, DOI 10.1145/3038912.3052649
   Jiang ZM, 2015, IEEE T SOFTWARE ENG, V41, P1091, DOI 10.1109/TSE.2015.2445340
   Johansson B, 2019, IEEE INT SYMP SOFTW, P7, DOI 10.1109/ISSREW.2019.00034
   Khanduja S, 2015, 2015 IEEE INTERNATIONAL CONFERENCE ON DATA MINING WORKSHOP (ICDMW), P1624, DOI 10.1109/ICDMW.2015.254
   Kim Gene, 2016, The DevOps Handbook: How to Create WorldClass Agility, Reliability, and Security in Technology Organizations
   Kocaguneli E, 2013, J SYST SOFTWARE, V86, P1879, DOI 10.1016/j.jss.2013.02.053
   Lazowska Edward D, 1984, Quantitative system performance: computer system analysis using queueing network models
   Le SY, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON WEB SERVICES (ICWS 2017), P389, DOI 10.1109/ICWS.2017.135
   Luo Q, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P25, DOI [10.1109/MSR.2016.013, 10.1145/2901739.2901765]
   Malik H, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P1012, DOI 10.1109/ICSE.2013.6606651
   Maplesden D, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P149, DOI 10.1109/ICSE.2015.143
   Mariani L, 2018, IEEE INT CONF SOFTW, P262, DOI 10.1109/ICST.2018.00034
   Mateis C, 2000, FR ART INT, V54, P171
   Mayer W, 2002, LECT NOTES ARTIF INT, V2557, P107
   Mockus A, 2010, Proc. of the 18th Symposium on the Foundations of Software Engineering (FSE), P117
   Nachar N, 2008, TUTOR QUANT METHODS, V4, P13, DOI 10.20982/tqmp.04.1.p013
   Nair V, 2015, KDD'15: PROCEEDINGS OF THE 21ST ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P2029, DOI 10.1145/2783258.2788624
   Nessa S, 2008, LECT NOTES COMPUT SC, V5258, P548, DOI 10.1007/978-3-540-88582-5_51
   Nguyen THD, 2011, ASIA PAC SOFWR ENG, P282, DOI [10.1109/APSC.2011.59, 10.1109/APSEC.2011.59]
   Nguyen ThanhHD., 2012, P 3 ACMSPEC INT C PE, P299
   opencellid, US
   Reichelt DG, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P1146, DOI 10.1109/ASE.2019.00123
   ROSENBLUM DS, 1995, IEEE T SOFTWARE ENG, V21, P19, DOI 10.1109/32.341844
   Runciman C., 1993, Journal of Functional Programming, V3, P217, DOI 10.1017/S0956796800000708
   Alcocer JPS, 2016, PROCEEDINGS OF THE 2016 ACM/SPEC INTERNATIONAL CONFERENCE ON PERFORMANCE ENGINEERING (ICPE'16), P37, DOI 10.1145/2851553.2851571
   Shang WY, 2015, EMPIR SOFTW ENG, V20, P1, DOI 10.1007/s10664-013-9274-8
   Shang Weiyi., 2015, P 6 ACMSPEC INT C PE, P15
   Shihab E., 2011, Proceedings of the ACM SIGSOFT symposium and the European Conference on Foundations of Software Engineering, P300
   Shin Yoo, 2012, Search Based Software Engineering. Proceedings of the 4th International Symposium (SSBSE 2012), P244, DOI 10.1007/978-3-642-33119-0_18
   SMITH CU, 2002, PERFORMANCE SOLUTION
   Stefan P., 2017, P 8 ACM SPEC INT C P, P401, DOI [DOI 10.1145/3030207.3030226, 10. 1145/3030207.3030226]
   Syer MD, 2013, PROC IEEE INT CONF S, P110, DOI 10.1109/ICSM.2013.22
   Thaller H, 2020, VST '20: PROCEEDINGS OF THE 2020 IEEE 3RD INTERNATIONAL WORKSHOP ON VALIDATION, ANALYSIS, AND EVOLUTION OF SOFTWARE TESTS, P24, DOI [10.1109/VST50071.2020.9051635, 10.1109/vst50071.2020.9051635]
   von Kistowski J, 2018, I S MOD ANAL SIM COM, P223, DOI 10.1109/MASCOTS.2018.00030
   WILCOXON F, 1945, BIOMETRICS BULL, V1, P80, DOI 10.1093/jee/39.2.269
   Wong WE, 2012, IEEE T RELIAB, V61, P149, DOI 10.1109/TR.2011.2172031
   Wong WE, 2009, INT J SOFTW ENG KNOW, V19, P573, DOI 10.1142/S021819400900426X
   Woodside M, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P171, DOI 10.1109/FOSE.2007.32
   Wotawa F, 2002, LECT NOTES ARTIF INT, V2358, P746
   Xiong PengCheng, 2013, ACM SPEC INT C PERF, P271, DOI 10.1145/2479871.2479909
   Xu Y, 2015, KDD'15: PROCEEDINGS OF THE 21ST ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P2227, DOI 10.1145/2783258.2788602
   Yao KD, 2020, EMPIR SOFTW ENG, V25, P488, DOI 10.1007/s10664-019-09748-z
   Yu Kai., 2011, SAC, P1404
   Zhongxing Yu, 2011, Proceedings of the 2011 IEEE 13th International Symposium on High-Assurance Systems Engineering (HASE 2011), P325, DOI 10.1109/HASE.2011.29
NR 104
TC 6
Z9 6
U1 0
U2 2
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD DEC 1
PY 2022
VL 48
IS 12
BP 4986
EP 5006
DI 10.1109/TSE.2021.3131529
PG 21
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 6X8ON
UT WOS:000896667600013
OA hybrid
DA 2024-07-18
ER

PT J
AU Neri, A
   Barbosa, RS
   Oliveira, JN
AF Neri, Ana
   Barbosa, Rui Soares
   Oliveira, Jose N.
TI Compiling Quantamorphisms for the IBM Q Experience
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Programming; Algebra; Quantum computing; Software; Testing; Standards;
   Quantum mechanics; Quantum computing; algebra of programming;
   reversibility; IBM Q experience
ID QUANTUM; ALGEBRA; SEMANTICS
AB Based on the connection between the categorical derivation of classical programs from specifications and a category-theoretic approach to quantum information, this paper contributes to extending the laws of classical program algebra to quantum programming. This aims at building correct-by-construction quantum circuits to be deployed on quantum devices such as those available through the IBM Q Experience. Reversibility is ensured by minimal complements. Such complementation is extended inductively to encompass catamorphisms on lists (vulgo folds), giving rise to the corresponding recursion scheme in reversible computation. The same idea is then applied to the setting of quantum programming, where computation is expressed by unitary transformations. This yields the notion of 'quantamorphism', a structural form of quantum recursion implementing cycles and folds on lists with quantum control flow. By Kleisli correspondence, quantamorphisms can be written as monadic functional programs with quantum parameters. This enables the use of Haskell, a monadic functional programming language, to perform the experimental work. Such calculated quantum programs prepared in Haskell are pushed through Quipper and the Qiskit interface to IBM Q quantum devices. The generated quantum circuits - often quite large - exhibit the predicted behaviour. However, running them on real quantum devices naturally incurs a significant amount of errors. As quantum technology is rapidly evolving, an increase in reliability is likely in the future, allowing for our programs to run more accurately.
C1 [Neri, Ana; Oliveira, Jose N.] Univ Minho, HASLab, INESC TEC, P-4710057 Braga, Portugal.
   [Barbosa, Rui Soares] Int Iberian Nanotechnol Lab, P-4715330 Braga, Portugal.
C3 Universidade do Minho; INESC TEC; International Iberian Nanotechnology
   Laboratory
RP Neri, A (corresponding author), Univ Minho, HASLab, INESC TEC, P-4710057 Braga, Portugal.
EM ana.neri@inl.int; rui.soaresbarbosa@inl.int; jno@di.uminho.pt
RI Oliveira, Jose Nuno/D-3490-2013; Barbosa, Rui Soares/N-6142-2019
OI Barbosa, Rui Soares/0000-0002-0465-8518; Oliveira,
   Jose/0000-0002-0196-4229; Neri, Ana/0000-0002-8271-5100
FU ERDF - European Regional Development Fund -through COMPETE 2020 - the
   Operational Programme for Competitiveness and Internationalisation;
   Portuguese funding agency FCT - Fundacaco para a Ciencia e a Tecnologia,
   within project KLEE [POCI-01-0145-FEDER-030947]; FCT
   [CEECINST/00062/2018]
FX This work was supported by the ERDF - European Regional Development Fund
   -through COMPETE 2020 - the Operational Programme for Competitiveness
   and Internationalisation - and by national funds from the Portuguese
   funding agency FCT - Fundacaco para a Ciencia e a Tecnologia, within
   project KLEE, with Project No. POCI-01-0145-FEDER-030947. Rui Soares
   Barbosa also acknowledges support from FCT under the Scientific
   Employment Stimulus Institutional Call CEECINST/00062/2018.
CR Altenkirch T, 2005, IEEE S LOG, P249
   [Anonymous], 1987, A Formalization Of Set Theory Without Variables
   Backhouse R.C., 2004, Mathematics of Program Construction
   BACKUS J, 1978, COMMUN ACM, V21, P613, DOI 10.1145/359576.359579
   Badescu C, 2015, ELECTRON PROC THEOR, P33, DOI 10.4204/EPTCS.195.3
   BANCILHON F, 1981, ACM T DATABASE SYST, V6, P557, DOI 10.1145/319628.319634
   Bird Richard, 1997, Algebra of Programming
   Church A, 1936, AM J MATH, V58, P345, DOI 10.2307/2371045
   Coecke B, 2011, LECT NOTES PHYS, V813, P173, DOI 10.1007/978-3-642-12821-9_3
   Coecke B., 2011, NEW STRUCTURES PHYS
   Coecke B, 2008, LECT NOTES COMPUT SC, V5126, P298, DOI 10.1007/978-3-540-70583-3_25
   de Touzalin A., 2016, Quantum manifesto: A new era of technology
   DEUTSCH D, 1985, P ROY SOC LOND A MAT, V400, P97, DOI 10.1098/rspa.1985.0070
   Dilkes S., 2020, ELECTRON P THEOR COM, P213, DOI [DOI 10.4204/EPTCS.318.13, 10.4204/eptcs.318.13]
   Dowling JP, 2003, PHILOS T R SOC A, V361, P1655, DOI 10.1098/rsta.2003.1227
   Erwig M, 2006, J FUNCT PROGRAM, V16, P21, DOI 10.1017/S0956796805005721
   Freyd P.J., 1990, Categories, Allegories
   Gambetta Jay., 2022, IBM Research Blog
   Gibbons J, 2011, ICFP 11 - PROCEEDINGS OF THE 2011 ACM SIGPLAN: INTERNATIONAL CONFERENCE ON FUNCTIONAL PROGRAMMING, P2
   Green A.S., 2013, REVERSIBLE COMPUTATI, V7948, P110, DOI [DOI 10.1007/978-3-642-38986-3_10, 10.1007/978-3-642-38986-310, DOI 10.1007/978-3-642-38986-310]
   Hasuo I, 2017, ANN PURE APPL LOGIC, V168, P404, DOI 10.1016/j.apal.2016.10.010
   Hasuo I, 2007, LOG METH COMPUT SCI, V3, DOI 10.2168/LMCS-3(4:11)2007
   Hinze R, 2013, SCI COMPUT PROGRAM, V78, P2108, DOI 10.1016/j.scico.2012.07.011
   Hoag, 2019, CS269Q STANF U
   Jaskelioff M, 2012, ELECTRON PROC THEOR, P40, DOI 10.4204/EPTCS.76.5
   Kissinger A., 2020, ELECTRON P THEOR COM, V318, P229, DOI [DOI 10.4204/EPTCS.318.14, 10.4204/EPTCS.318.14]
   Kramer J, 2007, COMMUN ACM, V50, P37
   Laws D., Who invented the transistor? | computer history museum
   Macedo HD, 2013, SCI COMPUT PROGRAM, V78, P2160, DOI 10.1016/j.scico.2012.07.012
   MacLane S, 2013, GRADUATE TEXTS MATH
   Mad91 R.D., 1991, Studia Logica, V50, P421
   Matsuda K, 2007, ICFP'07 PROCEEDINGS OF THE 2007 ACM SIGPLAN INTERNATIONAL CONFERENCE ON FUNCTIONAL PROGRAMMING, P47
   Moreda D., 2018, TALK PORTO TECH HUB
   Morgan C, 1990, PROGRAMMING SPECIFIC
   Murali P, 2019, TWENTY-FOURTH INTERNATIONAL CONFERENCE ON ARCHITECTURAL SUPPORT FOR PROGRAMMING LANGUAGES AND OPERATING SYSTEMS (ASPLOS XXIV), P1015, DOI 10.1145/3297858.3304075
   Murta D, 2015, SCI COMPUT PROGRAM, V110, P51, DOI 10.1016/j.scico.2015.04.008
   Nebeker Frederik., 2009, Dawn of the Electronic Age: Electrical Technologies in the Shaping of the Modern World, 1914 to 1945
   Neri A., QUANTAMORPHISMS GUID
   Neri A., 2018, THESIS U MINHO BRAGA
   Neri A., 2018, TALK 77 M IFIP WORKI
   Nielsen M. A, 2011, Quantum Computation and Quantum Information: 10th Anniversary Edition
   Olah C., 2015, UNDERSTANDING LSTM N
   Oliveira J., 2018, ICT COST ACTION 1405
   Oliveira JN, 2014, J LOG ALGEBR METHODS, V83, P249, DOI 10.1016/j.jlap.2014.02.013
   Oliveira JN, 2013, IEEE T SOFTWARE ENG, V39, P305, DOI 10.1109/TSE.2012.15
   Oliveira JN, 2012, FORM ASP COMPUT, V24, P433, DOI 10.1007/s00165-012-0240-9
   Oliveira JN, 2018, J LOG ALGEBR METHODS, V94, P15, DOI 10.1016/j.jlamp.2017.09.003
   Routray S. K., 2004, PROC IEEE C HIST ELE
   Sabry A, 2018, LECT NOTES COMPUT SC, V10803, P348, DOI 10.1007/978-3-319-89366-2_19
   Sanders JW, 2000, LECT NOTES COMPUT SC, V1837, P80
   Santos A., 2020, HASKELL LIB LAOP 010
   Schmidt Gunther., 2010, Relational mathematics (encyclopedia of mathematics and its applications)
   Selinger P, 2004, MATH STRUCT COMP SCI, V14, P527, DOI 10.1017/S0960129504004256
   Turing AM, 1937, P LOND MATH SOC, V42, P230, DOI 10.1112/plms/s2-42.1.230
   Wadler P., 1989, FPCA 89 P 4 INT C FU, P347
   Yanofsky N. S., 2008, QUANTUM COMPUTING CO
   Ying M., 2016, Foundations of Quantum Programming
   Ying MS, 2011, IEEE T SOFTWARE ENG, V37, P466, DOI 10.1109/TSE.2010.94
NR 58
TC 0
Z9 0
U1 0
U2 2
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD NOV 1
PY 2022
VL 48
IS 11
BP 4339
EP 4356
DI 10.1109/TSE.2021.3117515
PG 18
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 6C4JD
UT WOS:000881981800006
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Gallaba, K
   Ewart, J
   Junqueira, Y
   McIntosh, S
AF Gallaba, Keheliya
   Ewart, John
   Junqueira, Yves
   McIntosh, Shane
TI Accelerating Continuous Integration by Caching Environments and
   Inferring Dependencies
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Automated builds; build systems; continuous integration
AB To facilitate the rapid release cadence of modern software (on the order of weeks, days, or even hours), software development organizations invest in practices like Continuous Integration (CI), where each change submitted by developers is built (e.g., compiled, tested, linted) to detect problematic changes early. A fast and efficient build process is crucial to provide timely CI feedback to developers. If CI feedback is too slow, developers may switch contexts to other tasks, which is known to be a costly operation for knowledge workers. Thus, minimizing the build execution time for CI services is an important task. While recent work has made several important advances in the acceleration of CI builds, optimizations often depend upon explicitly defined build dependency graphs (e.g., make, Gradle, CloudBuild, Bazel). These hand-maintained graphs may be (a) underspecified, leading to incorrect build behaviour; or (b) overspecified, leading to missed acceleration opportunities. In this paper, we propose Kotinos-a language-agnostic approach to infer data from which build acceleration decisions can be made without relying upon build specifications. After inferring this data, our approach accelerates CI builds by caching the build environment and skipping unaffected build steps. Kotinos is at the core of a commercial CI service with a growing customer base. To evaluate Kotinos, we mine 14,364 historical CI build records spanning three proprietary and seven open-source software projects. We find that: (1) at least 87.9 percent of the builds activate at least one Kotinos acceleration; and (2) 74 percent of accelerated builds achieve a speed-up of two-fold with respect to their non-accelerated counterparts. Moreover, (3) the benefits of Kotinos can also be replicated in open source software systems; and (4) Kotinos imposes minimal resource overhead (i.e., < 1 percent median CPU usage, 2 MB - 2.2 GB median memory usage, and 0.4 GB - 5.2 GB median storage overhead) and does not compromise build outcomes. Our results suggest that migration to Kotinos yields substantial benefits with minimal investment of effort (e.g., no migration of build systems is necessary).
C1 [Gallaba, Keheliya] McGill Univ, Dept Elect & Comp Engn, Montreal, PQ H3A 0G4, Canada.
   [Ewart, John; Junqueira, Yves] YourBase Inc, Redmond, WA 98052 USA.
   [McIntosh, Shane] Univ Waterloo, Cheriton Sch Comp Sci, Waterloo, ON N2L 3G1, Canada.
C3 McGill University; University of Waterloo
RP Gallaba, K (corresponding author), McGill Univ, Dept Elect & Comp Engn, Montreal, PQ H3A 0G4, Canada.
EM keheliya.gallaba@mail.mcgill.ca; john@yourbase.io; yves@yourbase.io;
   shane.mcintosh@uwaterloo.ca
RI Gallaba, Keheliya/X-1042-2019
OI Gallaba, Keheliya/0000-0002-5880-5114
FU Mitacs Canada [IT13813]
FX This research project was supported by Mitacs Canada (Award Ref.
   IT13813).
CR Abdalkareem R, 2021, IEEE T SOFTWARE ENG, V47, P2740, DOI 10.1109/TSE.2020.2967380
   Abdalkareem R, 2021, IEEE T SOFTWARE ENG, V47, P448, DOI 10.1109/TSE.2019.2897300
   Adams B., 2008, ELECT COMMUN EUR ASS, V8, DOI [10.14279/tuj.eceasst.8.115, DOI 10.14279/TUJ.ECEASST.8.115]
   Adams B, 2007, PROC IEEE INT CONF S, P214
   AtLee C., 2012, ARCHI TECTURE OPEN S
   Bezemer CP, 2017, EMPIR SOFTW ENG, V22, P3117, DOI 10.1007/s10664-017-9510-8
   Brooks G, 2008, AGILE 2008, PROCEEDINGS, P294, DOI 10.1109/Agile.2008.41
   Brown WilliamJ., 1999, AntiPatterns and Patterns in Software Configuration Management
   Cao Q, 2017, PROC IEEE INT CONF S, P524, DOI 10.1109/ICSME.2017.34
   Duvall Paul M., 2007, Continuous integration: improving software quality and reducing risk
   Elbaum S, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P235, DOI 10.1145/2635868.2635910
   Esfahani H, 2016, 2016 IEEE/ACM 38TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING COMPANION (ICSE-C), P11, DOI 10.1145/2889160.2889222
   FELDMAN SI, 1979, SOFTWARE PRACT EXPER, V9, P255, DOI 10.1002/spe.4380090402
   Felidré W, 2019, INT SYMP EMP SOFTWAR, P192, DOI 10.1109/ESEM.2019.8870152
   Gallaba K, 2018, IEEE INT CONF AUTOM, P87, DOI 10.1145/3238147.3238171
   Gallaba K, 2020, IEEE T SOFTWARE ENG, V46, P33, DOI 10.1109/TSE.2018.2838131
   Ghaleb TA, 2019, EMPIR SOFTW ENG, V24, P2102, DOI 10.1007/s10664-019-09695-9
   Gligoric M, 2014, ACM SIGPLAN NOTICES, V49, P599, DOI [10.1145/2660193.2660239, 10.1145/2714064.2660239]
   Hassan F, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1078, DOI 10.1145/3180155.3180181
   Hilton M, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P197, DOI 10.1145/3106237.3106270
   Hilton M, 2016, IEEE INT CONF AUTOM, P426, DOI 10.1145/2970276.2970358
   HOLM S, 1979, SCAND J STAT, V6, P65
   Lebeuf C, 2018, PROC IEEE INT CONF S, P496, DOI 10.1109/ICSME.2018.00060
   Li YL, 2019, 2019 IEEE 19TH INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY AND SECURITY (QRS 2019), P350, DOI 10.1109/QRS.2019.00052
   Macho C, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P106, DOI 10.1109/SANER.2018.8330201
   Macho C, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P541, DOI 10.1109/SANER.2016.22
   McIntosh S, 2016, AUTOMAT SOFTW ENG, V23, P619, DOI 10.1007/s10515-015-0183-5
   McIntosh S, 2014, PROC IEEE INT CONF S, P241, DOI 10.1109/ICSME.2014.46
   Memon A, 2017, 2017 IEEE/ACM 39TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2017), P233, DOI 10.1109/ICSE-SEIP.2017.16
   Meyer AN, 2017, IEEE T SOFTWARE ENG, V43, P1178, DOI 10.1109/TSE.2017.2656886
   Miller A, 2008, AGILE 2008, PROCEEDINGS, P289, DOI 10.1109/Agile.2008.8
   Pinto G, 2018, SOFTWARE PRACT EXPER, V48, P2223, DOI 10.1002/spe.2637
   Pinto G, 2017, 2017 IEEE/ACM 10TH INTERNATIONAL WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING (CHASE 2017), P74, DOI 10.1109/CHASE.2017.13
   Rausch T, 2017, IEEE WORK CONF MIN S, P345, DOI 10.1109/MSR.2017.54
   Seo H, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P724, DOI 10.1145/2568225.2568255
   Shi A, 2019, PROC INT SYMP SOFTW, P228, DOI 10.1109/ISSRE.2019.00031
   Suvorov R, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P160, DOI 10.1109/ICSM.2012.6405267
   Tantithamthavorn C, 2017, IEEE T SOFTWARE ENG, V43, P1, DOI 10.1109/TSE.2016.2584050
   Tufano M, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: NEW IDEAS AND EMERGING RESULTS (ICSE-NIER 2019), P49, DOI 10.1109/ICSE-NIER.2019.00021
   Vakilian M, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P123, DOI 10.1109/ICSE.2015.34
   Vasilescu B, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P805, DOI 10.1145/2786805.2786850
   Vassallo C, 2018, INT C PROGRAM COMPRE, P41, DOI 10.1145/3196321.3196350
   Vassallo C, 2019, PROC INT CONF SOFTW, P105, DOI 10.1109/ICSE.2019.00028
   Vassallo C, 2017, PROC IEEE INT CONF S, P183, DOI 10.1109/ICSME.2017.67
   Widder DG, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P647, DOI 10.1145/3338906.3338922
   Xia X, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P311, DOI 10.1109/SANER.2015.7081841
   Yoo S, 2012, SOFTW TEST VERIF REL, V22, P67, DOI [10.1002/stv.430, 10.1002/stvr.430]
   Yu Y, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P367, DOI 10.1109/MSR.2015.42
   Zampetti F, 2020, EMPIR SOFTW ENG, V25, P1095, DOI 10.1007/s10664-019-09785-8
   Zhao YY, 2017, IEEE INT CONF AUTOM, P60, DOI 10.1109/ASE.2017.8115619
   Züger M, 2015, CHI 2015: PROCEEDINGS OF THE 33RD ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, P2981, DOI 10.1145/2702123.2702593
NR 51
TC 8
Z9 10
U1 1
U2 4
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUN 1
PY 2022
VL 48
IS 6
BP 2040
EP 2052
DI 10.1109/TSE.2020.3048335
PG 13
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 2D5IM
UT WOS:000811580600013
DA 2024-07-18
ER

PT J
AU Verdi, M
   Sami, A
   Akhondali, J
   Khomh, F
   Uddin, G
   Motlagh, AK
AF Verdi, Morteza
   Sami, Ashkan
   Akhondali, Jafar
   Khomh, Foutse
   Uddin, Gias
   Motlagh, Alireza Karami
TI An Empirical Study of C plus plus Vulnerabilities in Crowd-Sourced Code
   Examples
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Security; C plus plus languages; Androids; Humanoid robots; Tools; Open
   source software; Stack overflow; software security; C plus plus;
   SOTorrent; vulnerability migration; GitHub; vulnerability evolution
ID STACK OVERFLOW; QUALITY; REUSE
AB Software developers share programming solutions in Q&A sites like Stack Overflow, Stack Exchange, Android forum, and so on. The reuse of crowd-sourced code snippets can facilitate rapid prototyping. However, recent research shows that the shared code snippets may be of low quality and can even contain vulnerabilities. This paper aims to understand the nature and the prevalence of security vulnerabilities in crowd-sourced code examples. To achieve this goal, we investigate security vulnerabilities in the C++ code snippets shared on Stack Overflow over a period of 10 years. In collaborative sessions involving multiple human coders, we manually assessed each code snippet for security vulnerabilities following CWE (Common Weakness Enumeration) guidelines. From the 72,483 reviewed code snippets used in at least one project hosted on GitHub, we found a total of 99 vulnerable code snippets categorized into 31 types. Many of the investigated code snippets are still not corrected on Stack Overflow. The 99 vulnerable code snippets found in Stack Overflow were reused in a total of 2859 GitHub projects. To help improve the quality of code snippets shared on Stack Overflow, we developed a browser extension that allows Stack Overflow users to be notified for vulnerabilities in code snippets when they see them on the platform.
C1 [Verdi, Morteza; Sami, Ashkan; Akhondali, Jafar; Motlagh, Alireza Karami] Shiraz Univ, Shiraz 7155713876, Iran.
   [Khomh, Foutse] Polytech Montreal, Montreal, PQ H3T 1J4, Canada.
   [Uddin, Gias] Univ Calgary, Calgary, AB T2N 1N4, Canada.
C3 Shiraz University; Universite de Montreal; Polytechnique Montreal;
   University of Calgary
RP Sami, A (corresponding author), Shiraz Univ, Shiraz 7155713876, Iran.
EM m.verdi@shirazu.ac.ir; sami@shirazu.ac.ir; jafar.akhondali@yahoo.com;
   foutse.khomh@polymtl.ca; gias.uddin@ucalgary.ca;
   alireza.karami.m@gmail.com
CR Abdalkareem R, 2017, INFORM SOFTWARE TECH, V88, P148, DOI 10.1016/j.infsof.2017.04.005
   Acar Y, 2017, PROCEEDINGS OF THIRTEENTH SYMPOSIUM ON USABLE PRIVACY AND SECURITY (SOUPS 2017), P81
   Acar Y, 2016, P IEEE S SECUR PRIV, P289, DOI 10.1109/SP.2016.25
   Algoritmia, 2020, ALGORITHMIA SYNTAXNE
   An L, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P283, DOI 10.1109/SANER.2017.7884629
   [Anonymous], 2020, [No title captured], DOI 10.5281/zenodo.3991017
   [Anonymous], CWE 1019
   [Anonymous], CWE 125
   [Anonymous], CWE 193
   [Anonymous], CWE 754
   [Anonymous], CWE 252
   [Anonymous], CWE 789
   [Anonymous], CWE 426
   [Anonymous], 1999, P 26 ACM SIGPLAN SIG
   [Anonymous], CWE 20
   [Anonymous], CWE MITRE
   Ballman A, 2016, 6 CERT C CODING STAN
   Baltes Sebastian, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P191, DOI 10.1109/MSR.2019.00038
   Baltes S, 2019, EMPIR SOFTW ENG, V24, P1259, DOI 10.1007/s10664-018-9650-5
   Baltes S, 2018, IEEE WORK CONF MIN S, P319, DOI 10.1145/3196398.3196430
   Barua A, 2014, EMPIR SOFTW ENG, V19, P619, DOI 10.1007/s10664-012-9231-y
   Brandt J, 2009, CHI2009: PROCEEDINGS OF THE 27TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, VOLS 1-4, P1589
   Brown W. E, 2013, DEPRECATING RAND FRI
   c-faq.com, US
   Campos Eduardo C., 2016, P 26 ANN INT C COMPU, P232
   Chen MS, 2019, PROC INT CONF SOFTW, P536, DOI 10.1109/ICSE.2019.00065
   Duijn M, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P410, DOI 10.1109/MSR.2015.51
   Fahl S., 2012, ACM CCS 12, P50, DOI DOI 10.1145/2382196.2382205
   Fischer F, 2017, P IEEE S SECUR PRIV, P121, DOI 10.1109/SP.2017.31
   github, 2020, PAPER MAT CROWD SOUR
   Google company, 2019, ANNOUNCING SYNTAXNET
   Harper FM, 2008, CHI 2008: 26TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS VOLS 1 AND 2, CONFERENCE PROCEEDINGS, P865
   Horton E, 2018, PROC IEEE INT CONF S, P217, DOI 10.1109/ICSME.2018.00031
   Inoue K, 2012, PROC INT CONF SOFTW, P331, DOI 10.1109/ICSE.2012.6227181
   Kononenko O, 2016, PROC INT CONF SOFTW, P1028, DOI 10.1145/2884781.2884840
   Li L, 2015, WWW'15 COMPANION: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON WORLD WIDE WEB, P1453, DOI 10.1145/2740908.2742129
   LIM WC, 1994, IEEE SOFTWARE, V11, P23, DOI 10.1109/52.311048
   Lin Tan, 2007, Operating Systems Review, V41, P145, DOI 10.1145/1323293.1294276
   Mamykina L, 2011, 29TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, P2857
   Meng N, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P372, DOI 10.1145/3180155.3180201
   microsoft, About us
   Monden A, 2002, EIGHTH IEEE SYMPOSIUM ON SOFTWARE METRICS, PROCEEDINGS, P87, DOI 10.1109/METRIC.2002.1011328
   Nadi S, 2016, PROC INT CONF SOFTW, P935, DOI 10.1145/2884781.2884790
   Nasehi SM, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P25, DOI 10.1109/ICSM.2012.6405249
   Nishi Manziba Akanda, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P240, DOI 10.1109/MSR.2019.00048
   Pletea D., 2014, 11 WORKING C MSR, P348, DOI [10.1145/2597073.2597117, DOI 10.1145/2597073.2597117]
   Ponzanelli Luca, 2014, P 11 WORKING C MININ, P102, DOI DOI 10.1145/2597073.2597077
   Ragkhitwetsagul C, 2021, IEEE T SOFTWARE ENG, V47, P560, DOI 10.1109/TSE.2019.2900307
   Rahman Akond, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P200, DOI 10.1109/MSR.2019.00040
   Rahman A, 2019, PROC INT CONF SOFTW, P164, DOI 10.1109/ICSE.2019.00033
   Rahman A, 2018, PROCEEDINGS 2018 IEEE/ACM 4TH INTERNATIONAL WORKSHOP ON RAPID CONTINUOUS SOFTWARE ENGINEERING (RCOSE), P16, DOI 10.1145/3194760.3194769
   Rahman Muhammad Sajidur, 2016, EMPIRICAL CASE STUDY
   Randolph J.J., 2005, FREE MARGINAL MULTIR
   Ratol IK, 2017, IEEE INT CONF AUTOM, P112, DOI 10.1109/ASE.2017.8115624
   Robillard MP, 2011, EMPIR SOFTW ENG, V16, P703, DOI 10.1007/s10664-010-9150-8
   Rosen C, 2016, EMPIR SOFTW ENG, V21, P1192, DOI 10.1007/s10664-015-9379-3
   Sadowski C, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P191, DOI 10.1145/2786805.2786855
   Saini V, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P354, DOI 10.1145/3236024.3236026
   Sajnani H, 2016, PROC INT CONF SOFTW, P1157, DOI 10.1145/2884781.2884877
   Storey MA., 2010, P FSE SDP WORKSH FUT, P359, DOI DOI 10.1145/1882362.1882435
   Subramanian S, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P643, DOI 10.1145/2568225.2568313
   TIOBE company, TIOBE INDEX JANUARY
   Treude C, 2016, PROC INT CONF SOFTW, P392, DOI 10.1145/2884781.2884800
   Turner S., 2014, J TECHNOLOGY RES, V5, P1
   Uddin G, 2021, IEEE T SOFTWARE ENG, V47, P694, DOI 10.1109/TSE.2019.2903039
   Uddin G, 2015, IEEE SOFTWARE, V32, P68, DOI 10.1109/MS.2014.80
   Vasilescu B, 2013, 2013 ASE/IEEE INTERNATIONAL CONFERENCE ON SOCIAL COMPUTING (SOCIALCOM), P188, DOI 10.1109/SocialCom.2013.35
   Viega J, 2000, 16TH ANNUAL COMPUTER SECURITY APPLICATIONS CONFERENCE, PROCEEDINGS, P257, DOI 10.1109/ACSAC.2000.898880
   Wang SW, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P884, DOI 10.1145/3180155.3182521
   Xia Pei., 2014, Information and Media Technologies, V9, P155, DOI [10.11185/imt.9.155, DOI 10.11185/IMT.9.155]
   Xu BW, 2017, IEEE INT CONF AUTOM, P706, DOI 10.1109/ASE.2017.8115681
   Yamaguchi F, 2017, P 11 USENIX C OFF TE, P5
   Yang D, 2017, IEEE WORK CONF MIN S, P280, DOI 10.1109/MSR.2017.13
   Yang XL, 2016, J COMPUT SCI TECH-CH, V31, P910, DOI 10.1007/s11390-016-1672-0
   Yao Y, 2015, INFORM SCIENCES, V302, P70, DOI 10.1016/j.ins.2014.12.038
   Zahedi M, 2018, PROCEEDINGS OF THE 51ST ANNUAL HAWAII INTERNATIONAL CONFERENCE ON SYSTEM SCIENCES (HICSS), P5504
   Zhang TY, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P886, DOI 10.1145/3180155.3180260
NR 77
TC 4
Z9 4
U1 2
U2 7
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAY 1
PY 2022
VL 48
IS 5
BP 1497
EP 1514
DI 10.1109/TSE.2020.3023664
PG 18
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 1I8CJ
UT WOS:000797454000003
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Li, ZX
   Yu, Y
   Zhou, MH
   Wang, T
   Yin, G
   Lan, L
   Wang, HM
AF Li, Zhixing
   Yu, Yue
   Zhou, Minghui
   Wang, Tao
   Yin, Gang
   Lan, Long
   Wang, Huaimin
TI Redundancy, Context, and Preference: An Empirical Study of Duplicate
   Pull Requests in OSS Projects
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Collaboration; Computer bugs; Tools; Cloning; Synchronization; Testing;
   Encoding; Duplicate pull requests; pull-based development model;
   distributed collaboration; social coding
ID SOFTWARE-DEVELOPMENT; CHALLENGES; GITHUB
AB OSS projects are being developed by globally distributed contributors, who often collaborate through the pull-based model today. While this model lowers the barrier to entry for OSS developers by synthesizing, automating and optimizing the contribution process, coordination among an increasing number of contributors remains as a challenge due to the asynchronous and self-organized nature of distributed development. In particular, duplicate contributions, where multiple different contributors unintentionally submit duplicate pull requests to achieve the same goal, are an elusive problem that may waste effort in automated testing, code review and software maintenance. While the issue of duplicate pull requests has been highlighted, to what extent duplicate pull requests affect the development in OSS communities has not been well investigated. In this paper, we conduct a mixed-approach study to bridge this gap. Based on a comprehensive dataset constructed from 26 popular GitHub projects, we obtain the following findings: (a) Duplicate pull requests result in redundant human and computing resources, exerting a significant impact on the contribution and evaluation process. (b) Contributors' inappropriate working patterns and the drawbacks of their collaborating environment might result in duplicate pull requests. (c) Compared to non-duplicate pull requests, duplicate pull requests have significantly different features, e.g., being submitted by inexperienced contributors, being fixing bugs, touching cold files, and solving tracked issues. (d) Integrators choosing between duplicate pull requests prefer to accept those with early submission time, accurate and high-quality implementation, broad coverage, test code, high maturity, deep discussion, and active response. Finally, actionable suggestions and implications are proposed for OSS practitioners.
C1 [Li, Zhixing; Yu, Yue; Wang, Tao; Yin, Gang; Wang, Huaimin] Natl Univ Def Technol, Coll Comp, Key Lab Parallel & Distributed Comp, Changsha 410073, Peoples R China.
   [Yu, Yue; Lan, Long] Peng Cheng Lab, Shenzhen 518066, Peoples R China.
   [Zhou, Minghui] Peking Univ, Sch Elect Engn & Comp Sci, Beijing 100871, Peoples R China.
C3 National University of Defense Technology - China; Peng Cheng
   Laboratory; Peking University
RP Yu, Y (corresponding author), Natl Univ Def Technol, Coll Comp, Key Lab Parallel & Distributed Comp, Changsha 410073, Peoples R China.
EM lizhixing15@nudt.edu.cn; yuyue@nudt.edu.cn; zhmh@pku.edu.cn;
   taowang2005@nudt.edu.cn; yingang@nudt.edu.cn; long.lan@pcl.ac.cn;
   hmwang@nudt.edu.cn
OI Li, Zhixing/0000-0002-7981-5418; Zhou, Minghui/0000-0001-6324-3964; Yu,
   Yue/0000-0002-9865-2212
FU National Grand RD Plan [2018AAA0102304]; National Natural Science
   Foundation of China [61702534]
FX This work was supported by National Grand R&D Plan (Grant No.
   2018AAA0102304) and the National Natural Science Foundation of China
   (Grant No. 61702534).
CR Ahasanuzzaman M, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P402, DOI 10.1145/2901739.2901770
   Nguyen AT, 2012, IEEE INT CONF AUTOM, P70, DOI 10.1145/2351676.2351687
   [Anonymous], 2020, CONTRIBUTING SCIKIT
   [Anonymous], 2018, DUPPR DATASET
   [Anonymous], 2019, CODE CLIMATE
   [Anonymous], 2020, UNDERSTANDING GITHUB
   [Anonymous], 2019, GitHub
   [Anonymous], 1992, Proceedings of the 1992 ACM Conference on Computer Supported Cooperative Work (CSCW'92), DOI DOI 10.1145/143457.143468
   [Anonymous], 2019, Stack Overflow
   [Anonymous], 2020, GET COMBINED STATUS
   [Anonymous], 2010, P 32 ACM IEEE INT C
   [Anonymous], 2020, GOOD 1 ISSUES PROJEC
   [Anonymous], 2009, SHOULD DUPLICATE QUE
   [Anonymous], 2019, GITHUB ISSUE
   [Anonymous], 2008, Proceedings of the 2008 international working conference on Mining software repositories
   [Anonymous], 2002, P INT WORKSH PRINC S
   [Anonymous], 2020, CONTRIBUTING ANSIBLE
   Arora R, 2017, SOFTWARE PRACT EXPER, V47, P1393, DOI 10.1002/spe.2468
   Baysal O., 2012, 2012 19th Working Conference on Reverse Engineering (WCRE), P447, DOI 10.1109/WCRE.2012.54
   Baysal O, EMPIR SOFTW ENG, V21, P1
   Begel A, 2013, IEEE SOFTWARE, V30, P52, DOI 10.1109/MS.2013.13
   Beller M, 2017, IEEE WORK CONF MIN S, P356, DOI 10.1109/MSR.2017.62
   BENJAMINI Y, 1995, J R STAT SOC B, V57, P289, DOI 10.1111/j.2517-6161.1995.tb02031.x
   Bettenburg N, 2008, PROC IEEE INT CONF S, P337, DOI 10.1109/ICSM.2008.4658082
   Bird C., 2007, 4 INT WORKSHOP MININ, P26
   Bird Christian, 2008, Proceedings of the 2008 ACM SIGSOFT Symposium on the Foundations of Software Engineering, P24
   Borges H, 2016, PROC IEEE INT CONF S, P334, DOI 10.1109/ICSME.2016.31
   Bosu A, 2017, IEEE T SOFTWARE ENG, V43, P56, DOI 10.1109/TSE.2016.2576451
   Calefato F., 2013, Proc. 9th Joint Meeting on Foundations of Software Engineering (ESEC/FSE 13), P587
   Calefato F, 2018, EMPIR SOFTW ENG, V23, P1352, DOI 10.1007/s10664-017-9546-9
   Chacon S, 2018, PRO GIT
   Cohen J., 2013, APPL MULTIPLE REGRES, DOI DOI 10.2307/2064799
   CONNOLLY MA, 1988, BIOMETRIKA, V75, P501, DOI 10.1093/biomet/75.3.501
   Crowston K., 2006, P IEEE 39 HAW INT C, DOI DOI 10.1109/HICSS.2006.101
   Crowston K., 2005, P 26 INT C INFORM SY, P11
   Dabbish L, 2012, P ACM 2012 C COMP SU, P1277, DOI [10.1145/2145204.2145396, DOI 10.1145/2145204.2145396]
   Dabbish L, 2013, IEEE SOFTWARE, V30, P37, DOI 10.1109/MS.2012.172
   Ford D, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN SOCIETY (ICSE-SEIS 2019), P51, DOI 10.1109/ICSE-SEIS.2019.00014
   Gousios G, 2016, PROC INT CONF SOFTW, P285, DOI 10.1145/2884781.2884826
   Gousios G, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P345, DOI 10.1145/2568225.2568260
   Gousios G, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P358, DOI 10.1109/ICSE.2015.55
   Gutwin C., 2004, Computer Supported Cooperative Work Conference Proceedings, P72, DOI 10.1145/1031607.1031621
   Hassan AE, 2009, PROC INT CONF SOFTW, P78, DOI 10.1109/ICSE.2009.5070510
   Hindle Abram, 2007, 2007 IEEE International Conference on Software Maintenance, P285, DOI 10.1109/ICSM.2007.4362641
   Jensen C, 2007, PROC INT CONF SOFTW, P364
   Jiang YJ, 2013, IEEE WORK CONF MIN S, P101, DOI 10.1109/MSR.2013.6624016
   Kalliamvakou E, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P574, DOI 10.1109/ICSE.2015.74
   Kammerer Y, 2014, INT J HUM-COMPUT INT, V30, P177, DOI 10.1080/10447318.2013.846790
   Konietschke F, 2012, ELECTRON J STAT, V6, P738, DOI 10.1214/12-EJS691
   Kononenko O, 2018, 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING - SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2018), P124, DOI 10.1145/3183519.3183542
   Kononenko O, 2016, PROC INT CONF SOFTW, P1028, DOI 10.1145/2884781.2884840
   Lakhani K.R., 2004, PRODUKTENTWICKLUNG V, P303, DOI DOI 10.1007/978-3-322-84540-5_13
   Lakhani Karim R., PERSPECTIVES FREE OP, P3
   Lazar A., 2014, P 11 WORKING C MININ, P308
   Lee A, 2017, PROC INT CONF SOFTW, P187, DOI 10.1109/ICSE.2017.25
   Li Z, 2017, P 9 ASIA PACIFIC S I
   Lin B, 2017, INT CONF GLOBAL SOFT, P66, DOI 10.1109/ICGSE.2017.11
   Long J.D., 2003, Ordinal Analysis of Behavioral Data
   METZ CE, 1978, SEMIN NUCL MED, V8, P283, DOI 10.1016/S0001-2998(78)80014-2
   MILLER GA, 1995, COMMUN ACM, V38, P39, DOI 10.1145/219717.219748
   Mizobuchi Y, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P563, DOI 10.1109/SANER.2017.7884678
   Mockus A, 2000, PROC IEEE INT CONF S, P120, DOI 10.1109/ICSM.2000.883028
   Murgia A., 2014, Proceedings of the 11th working conference on mining software repositories, Ved, P262
   Novielli N, 2020, P 17 INT C MIN SOFTW
   Osborne J.W., 2004, Pract. Assess., Res., Eval., V9, P2, DOI [DOI 10.7275/QF69-7K43, 10.7275/qf69-7k43]
   Pham R, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P112, DOI 10.1109/ICSE.2013.6606557
   Pinto G, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P112, DOI 10.1109/SANER.2016.68
   Ponzanelli L, 2017, PROC INT CONF SOFTW, P94, DOI 10.1109/ICSE.2017.17
   Rahman M. M, 2014, P 11 WORK C MIN SOFT, P364, DOI DOI 10.1145/2597073.2597121
   Ramsey F.Schafer., 2012, STAT SLEUTH COURSE M, V3
   Ren LY, 2019, 2019 IEEE 26TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER), P230, DOI [10.1109/SANER.2019.8668023, 10.1109/saner.2019.8668023]
   Rigby PC, 2013, P 2013 9 JOINT M FDN, P202, DOI DOI 10.1145/2491411.2491444
   Rigby PC, 2014, ACM T SOFTW ENG METH, V23, DOI 10.1145/2594458
   Rigby PC, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P541, DOI 10.1145/1985793.1985867
   Rigby PC, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P541
   Runeson P, 2007, PROC INT CONF SOFTW, P499
   Shahin M, 2017, IEEE ACCESS, V5, P3909, DOI 10.1109/ACCESS.2017.2685629
   Sheoran Jyoti, 2014, P 11 WORK C MIN SOFT, P336, DOI DOI 10.1145/2597073.2597114
   Souza R, 2017, IEEE WORK CONF MIN S, P459, DOI 10.1109/MSR.2017.27
   Spencer D., 2009, CARD SORTING DESIGNI
   Steinmacher I, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P256, DOI 10.1145/3180155.3180208
   Steinmacher I, 2016, PROC INT CONF SOFTW, P273, DOI 10.1145/2884781.2884806
   Steinmacher I, 2015, PROCEEDINGS OF THE 2015 ACM INTERNATIONAL CONFERENCE ON COMPUTER-SUPPORTED COOPERATIVE WORK AND SOCIAL COMPUTING (CSCW'15), P1379, DOI 10.1145/2675133.2675215
   Stol KJ, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P187, DOI 10.1145/2568225.2568249
   Sun Chengnian, 2010, P 32 ACMIEEE INT C S, V1, P45, DOI [DOI 10.1145/1806799, 10.1145/1806799.1806811]
   Sun C, 2011, INT J CHEM ENG, V2011, DOI 10.1155/2011/545234
   Tao YD, 2014, PROC IEEE INT CONF S, P271, DOI 10.1109/ICSME.2014.49
   Thongtanunam P, 2016, PROC INT CONF SOFTW, P1039, DOI 10.1145/2884781.2884852
   Treude C, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P804, DOI 10.1145/1985793.1985907
   Tsay J, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P356, DOI 10.1145/2568225.2568315
   Tsay J, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P144, DOI 10.1145/2635868.2635882
   Vasilescu B, 2016, PROC INT CONF SOFTW, P994, DOI 10.1145/2884781.2884875
   Vasilescu B, 2015, CHI 2015: PROCEEDINGS OF THE 33RD ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, P3789, DOI 10.1145/2702123.2702549
   Vasilescu B, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P805, DOI 10.1145/2786805.2786850
   Vasilescu B, 2014, EMPIR SOFTW ENG, V19, P955, DOI 10.1007/s10664-013-9244-1
   Wang HM, 2017, INT CON DISTR COMP S, P1846, DOI 10.1109/ICDCS.2017.237
   Wang XY, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P461, DOI 10.1145/1368088.1368151
   Wessel Mairieli, 2018, Proceedings of the ACM on Human-Computer Interaction, V2, DOI 10.1145/3274451
   West J, 2006, R&D MANAGE, V36, P319, DOI 10.1111/j.1467-9310.2006.00436.x
   Widder DG, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P647, DOI 10.1145/3338906.3338922
   WILCOXON F, 1945, BIOMETRICS BULL, V1, P80, DOI 10.1093/jee/39.2.269
   Yu Y, 2018, IEEE WORK CONF MIN S, P22, DOI 10.1145/3196398.3196455
   Yu Y, 2016, SCI CHINA INFORM SCI, V59, DOI 10.1007/s11432-016-5595-8
   Yu Y, 2016, INFORM SOFTWARE TECH, V74, P204, DOI 10.1016/j.infsof.2016.01.004
   Zhang WE, 2017, PROCEEDINGS OF THE 26TH INTERNATIONAL CONFERENCE ON WORLD WIDE WEB (WWW'17), P1221, DOI 10.1145/3038912.3052701
   Zhang Y, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P295, DOI 10.1145/3236024.3236033
   Zhang Y, 2015, J COMPUT SCI TECH-CH, V30, P981, DOI 10.1007/s11390-015-1576-4
   Zhou MH, 2012, PROC INT CONF SOFTW, P518, DOI 10.1109/ICSE.2012.6227164
   Zhou SR, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P350, DOI 10.1145/3338906.3338918
   Zhou SR, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P105, DOI 10.1145/3180155.3180205
   Zhu JX, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P871, DOI 10.1145/2950290.2950364
   Zou WQ, 2019, EMPIR SOFTW ENG, V24, P3871, DOI 10.1007/s10664-019-09720-x
NR 112
TC 9
Z9 10
U1 2
U2 5
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD APR 1
PY 2022
VL 48
IS 4
BP 1309
EP 1335
DI 10.1109/TSE.2020.3018726
PG 27
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 0N4HC
UT WOS:000782799700012
DA 2024-07-18
ER

PT J
AU Russo, D
   Stol, KJ
AF Russo, Daniel
   Stol, Klaas-Jan
TI Gender Differences in Personality Traits of Software Engineers
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Software; Software engineering; Instruments; Bayes methods; Sea
   measurements; Data models; Face; Personality traits; gender; empirical
   software engineering; bayesian statistics; network analysis
ID BRIGGS TYPE INDICATOR; CAREER ADVANCEMENT PROSPECTS; JOB-PERFORMANCE;
   DARK TRIAD; HONESTY-HUMILITY; 5-FACTOR MODEL; WORK; DIMENSIONS; TEAMS;
   MACHIAVELLIANISM
AB There is a growing body of gender studies in software engineering to understand diversity and inclusion issues, as diversity is recognized to be a key issue to healthy teams and communities. A second factor often linked to team performance is personality, which has received far more attention. Very few studies, however, have focused on the intersection of these two fields. Hence, we set out to study gender differences in personality traits of software engineers. Through a survey study we collected personality data, using the HEXACO model, of 483 software engineers. The data were analyzed using a Bayesian independent sample t-test and network analysis. The results suggest that women score significantly higher in Openness to Experience, Honesty-Humility, and Emotionality than men. Further, men show higher psychopathic traits than women. Based on these findings, we develop a number of propositions that can guide future research.
C1 [Russo, Daniel] Aalborg Univ, Dept Comp Sci, DK-9220 Aalborg, Denmark.
   [Stol, Klaas-Jan] Univ Coll, Irish Software Res Ctr, Cork T12 XF62, Ireland.
   [Stol, Klaas-Jan] Univ Coll, Sch Comp Sci & Informat Technol, Cork T12 XF62, Ireland.
C3 Aalborg University
RP Russo, D (corresponding author), Aalborg Univ, Dept Comp Sci, DK-9220 Aalborg, Denmark.
EM daniel.russo@cs.aau.dk; k.stol@ucc.ie
RI Russo, Daniel/O-3002-2019; Stol, Klaas-Jan/I-6269-2013
OI Russo, Daniel/0000-0001-7253-101X; Stol, Klaas-Jan/0000-0002-1038-5050
FU Science Foundation Ireland [15/SIRG/3293, 13/RC/2094]; Science
   Foundation Ireland (SFI) [15/SIRG/3293] Funding Source: Science
   Foundation Ireland (SFI)
FX The authors thank the three anonymous reviewers for constructive
   feedback, in particular for the guidance in relation to our discussion
   of gender. This work was partially funded by Science Foundation Ireland
   grants 15/SIRG/3293 and 13/RC/2094.
CR Anglim J, 2019, J RES PERS, V83, DOI 10.1016/j.jrp.2019.103865
   [Anonymous], 2001, B WORLD HEALTH ORGAN, V79, P373, DOI 10.1001/jama.2013.281053
   [Anonymous], 1998, MBTI MANUAL GUIDE DE
   [Anonymous], 1931, BASIC POSTULATES ANA
   Ashton M.C., 2013, INDIVIDUAL DIFFERENC
   Ashton MC, 2004, J PERS SOC PSYCHOL, V86, P356, DOI 10.1037/0022-3514.86.2.356
   Ashton MC, 2014, PERS SOC PSYCHOL REV, V18, P139, DOI 10.1177/1088868314523838
   Ashton MC, 2009, J PERS ASSESS, V91, P340, DOI 10.1080/00223890902935878
   Baker M, 2016, NATURE, V531, P151, DOI 10.1038/nature.2016.19503
   Barrick MR, 1998, J APPL PSYCHOL, V83, P377, DOI 10.1037/0021-9010.83.3.377
   Beede D. N., 2011, EC STAT ADM ISSUE BR, DOI DOI 10.2139/SSRN.1964782
   Boddy C.R., 2006, MANAGE DECIS, V44, P1461, DOI DOI 10.1108/00251740610715759
   Boddy CR, 2017, J BUS ETHICS, V145, P141, DOI 10.1007/s10551-015-2908-6
   Boddy CR, 2011, J BUS ETHICS, V100, P367, DOI 10.1007/s10551-010-0689-5
   Borgatti SP, 2009, SCIENCE, V323, P892, DOI 10.1126/science.1165821
   BOYLE GJ, 1995, AUST PSYCHOL, V30, P71, DOI 10.1111/j.1742-9544.1995.tb01750.x
   Bradley BH, 2013, J APPL PSYCHOL, V98, P385, DOI 10.1037/a0029845
   Burnett M, 2016, INTERACT COMPUT, V28, P760, DOI 10.1093/iwc/iwv046
   Calefato F, 2019, INFORM SOFTWARE TECH, V114, P1, DOI 10.1016/j.infsof.2019.05.012
   Callan MJ, 2017, SOC PSYCHOL PERS SCI, V8, P660, DOI 10.1177/1948550616673877
   Capretz L. F., 2010, ACM SIGSOFT Software Engineering Notes, V35, P1, DOI DOI 10.1145/1734103.1734111
   Capretz LF, 2003, INT J HUM-COMPUT ST, V58, P207, DOI 10.1016/S1071-5819(02)00137-4
   Catolino G, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN SOCIETY (ICSE-SEIS 2019), P11, DOI 10.1109/ICSE-SEIS.2019.00010
   Chen JH, 2008, BIOMETRIKA, V95, P759, DOI 10.1093/biomet/asn034
   Cobb-Clark DA, 2012, ECON LETT, V115, P11, DOI 10.1016/j.econlet.2011.11.015
   COHEN J, 1994, AM PSYCHOL, V49, P997, DOI 10.1037/0003-066X.50.12.1103
   Colquitt JA, 2001, J APPL PSYCHOL, V86, P425, DOI 10.1037//0021-9010.86.3.425
   Corr PJ, 2009, CAMBRIDGE HANDBOOK OF PERSONALITY PSYCHOLOGY, P1, DOI 10.1017/CBO9780511596544
   Costa PT, 2001, J PERS SOC PSYCHOL, V81, P322, DOI [10.1037/0022-3514.81.2.322, 10.1037//0022-3514.81.2.322]
   Costantini G, 2015, J RES PERS, V54, P13, DOI 10.1016/j.jrp.2014.07.003
   Cramer AOJ, 2012, EUR J PERSONALITY, V26, P414, DOI 10.1002/per.1866
   Cruz S, 2015, COMPUT HUM BEHAV, V46, P94, DOI 10.1016/j.chb.2014.12.008
   Cumming G., 2016, Introduction to the new statistics: Estimation, open science, and beyond
   de Vries RE, 2015, PERS INDIV DIFFER, V86, P112, DOI 10.1016/j.paid.2015.06.008
   de Vries RE, 2013, J RES PERS, V47, P871, DOI 10.1016/j.jrp.2013.09.003
   Devito A.J., 1985, 9 MENTAL MEASUREMENT, P1030
   Dienes Z, 2014, FRONT PSYCHOL, V5, DOI 10.3389/fpsyg.2014.00781
   Dikert K, 2016, J SYST SOFTWARE, V119, P87, DOI 10.1016/j.jss.2016.06.013
   [Druckman D. National Research Council National Research Council], 1991, In the mind's eye: Enhancing human performance
   DURNDELL A, 1991, COMPUT EDUC, V16, P283, DOI 10.1016/0360-1315(91)90001-8
   EFRON B, 1979, ANN STAT, V7, P1, DOI 10.1214/aos/1176344552
   Faul F, 2009, BEHAV RES METHODS, V41, P1149, DOI 10.3758/BRM.41.4.1149
   Feldt R, 2010, INFORM SOFTWARE TECH, V52, P611, DOI 10.1016/j.infsof.2010.01.001
   Fisher M, 2006, PROC IEEE INT CONF S, P289
   Ford D, 2017, S VIS LANG HUM CEN C, P239, DOI 10.1109/VLHCC.2017.8103473
   Ford D, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P846, DOI 10.1145/2950290.2950331
   FREEMAN LC, 1979, SOC NETWORKS, V1, P215, DOI 10.1016/0378-8733(78)90021-7
   Furia CA, 2021, IEEE T SOFTWARE ENG, V47, P1786, DOI 10.1109/TSE.2019.2935974
   Furia CA, 2017, PROC IEEE ACM INT C, P374, DOI 10.1109/ICSE-C.2017.92
   Furnham A, 1996, PERS INDIV DIFFER, V21, P303, DOI 10.1016/0191-8869(96)00033-5
   Gilal Abdul Rehman, 2019, International Conference on Data Engineering 2015 (DaEng-2015). Proceedings: Lecture Notes in Electrical Engineering (LNEE 520), P363, DOI 10.1007/978-981-13-1799-6_38
   Gilal AR, 2018, J SOFTW-EVOL PROC, V30, DOI 10.1002/smr.1920
   Gilal AR, 2017, J INF SCI ENG, V33, P1447, DOI 10.6688/JISE.2017.33.6.4
   Gilal AR, 2015, 2015 INTERNATIONAL SYMPOSIUM ON MATHEMATICAL SCIENCES AND COMPUTING RESEARCH (ISMSC), P78, DOI 10.1109/ISMSC.2015.7594031
   Gilal AR, 2016, INFORM SOFTWARE TECH, V74, P105, DOI 10.1016/j.infsof.2016.02.007
   Gilal AR, 2014, 2014 INTERNATIONAL CONFERENCE ON COMPUTER, COMMUNICATIONS, AND CONTROL TECHNOLOGY (I4CT), P261, DOI 10.1109/I4CT.2014.6914186
   GitHub, 2020, GITHUB MIL TIM SIGN
   Gorla N, 2004, COMMUN ACM, V47, P79, DOI 10.1145/990680.990684
   Gramss D, 2014, 2014 INTERNATIONAL CONFERENCE ON INTERACTIVE COLLABORATIVE LEARNING (ICL), P272, DOI 10.1109/ICL.2014.7017783
   Grant AM, 2011, ACAD MANAGE J, V54, P528, DOI 10.5465/AMJ.2011.61968043
   Gravetter F. J., 2018, RES METHODS BEHAV SC
   GREENHAUS JH, 1993, ORGAN BEHAV HUM DEC, V55, P273, DOI 10.1006/obhd.1993.1034
   Gren L, 2018, PROCEEDINGS OF THE 12TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT (ESEM 2018), DOI 10.1145/3239235.3267437
   Hannay JE, 2010, IEEE T SOFTWARE ENG, V36, P61, DOI 10.1109/TSE.2009.41
   Harrison DA, 2006, ACAD MANAGE J, V49, P305, DOI [10.5465/AMJ.2006.20786077, 10.2307/20159765]
   Hathaway S.R., 1951, MINNESOTA MULTIPHASI
   Heilman ME, 2012, RES ORGAN BEHAV, V32, P113, DOI 10.1016/j.riob.2012.11.003
   Hill C, 2017, PROCEEDINGS OF THE 2017 ACM SIGCHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS (CHI'17), P6658, DOI 10.1145/3025453.3025609
   Hogan J., 1997, HDB PERSONALITY PSYC, P849, DOI [DOI 10.1016/B978-012134645-4/50033-0, 10.1016/b978-012134645-4/50033-0, https://doi.org/10.1016/B978-012134645-4/50033-0]
   Hosio S, 2020, COMPUTER, V53, P63, DOI 10.1109/MC.2019.2902542
   IGBARIA M, 1995, MIS QUART, V19, P107, DOI 10.2307/249713
   Imtiaz N, 2019, PROC INT CONF SOFTW, P700, DOI 10.1109/ICSE.2019.00079
   Iyer RN, 2021, IEEE T SOFTWARE ENG, V47, P2632, DOI 10.1109/TSE.2019.2960357
   Izquierdo D, 2019, IEEE SOFTWARE, V36, P28, DOI 10.1109/MS.2018.2874322
   JASP Team, 2018, JASP VERS 0 11 1 COM
   Jeffreys H., 1998, The theory of probability
   Johnson MK, 2011, PERS INDIV DIFFER, V50, P857, DOI 10.1016/j.paid.2011.01.011
   Jonason PK, 2012, PERS INDIV DIFFER, V52, P449, DOI 10.1016/j.paid.2011.11.008
   Jonason PK, 2010, PSYCHOL ASSESSMENT, V22, P420, DOI 10.1037/a0019265
   Judge TA, 2009, LEADERSHIP QUART, V20, P855, DOI 10.1016/j.leaqua.2009.09.004
   Jung CG, 2017, ROUT CLASSIC, P1
   Kalliamvakou E, 2016, EMPIR SOFTW ENG, V21, P2035, DOI 10.1007/s10664-015-9393-5
   Kaufman SB, 2019, FRONT PSYCHOL, V10, DOI 10.3389/fpsyg.2019.00467
   Kippell M., 2006, Assessment Evaluation in Higher Education, V31, P453, DOI DOI 10.1080/02602930600679159
   Lee K, 2018, ASSESSMENT, V25, P543, DOI 10.1177/1073191116659134
   Lee M., 2014, Bayesian cognitive modeling: A practical course, P101
   Li N, 2014, ACAD MANAG ANN, V8, P347, DOI 10.1080/19416520.2014.890368
   Lin B, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P425, DOI [10.1145/2901739.2901777, 10.1109/MSR.2016.050]
   LINVILLE PW, 1985, SOC COGNITION, V3, P94, DOI 10.1521/soco.1985.3.1.94
   Lyness KS, 2006, J APPL PSYCHOL, V91, P777, DOI 10.1037/0021-9010.91.4.777
   Marreiros H, 2017, J ECON BEHAV ORGAN, V140, P1, DOI 10.1016/j.jebo.2017.03.024
   Marsman M, 2017, EUR J DEV PSYCHOL, V14, P545, DOI 10.1080/17405629.2016.1259614
   May A, 2019, EMPIR SOFTW ENG, V24, P1997, DOI 10.1007/s10664-019-09685-x
   McCrae R. R., 2008, Handbook of personality: Theory and research, P159, DOI DOI 10.3905/JPE.2000.319978
   MCCRAE RR, 1989, J PERS, V57, P17, DOI 10.1111/j.1467-6494.1989.tb00759.x
   MCCRAE RR, 1992, J PERS, V60, P175, DOI 10.1111/j.1467-6494.1992.tb00970.x
   Mendez C, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1004, DOI 10.1145/3180155.3180241
   Myers I B, 1976, INTRO TYPE GUIDE UND
   Neuman GA, 1999, GROUP ORGAN MANAGE, V24, P28, DOI 10.1177/1059601199241003
   Ortu Marco, 2017, Journal of Software Engineering Research and Development, V5, DOI 10.1186/s40411-017-0044-y
   Owens BP, 2013, ORGAN SCI, V24, P1517, DOI 10.1287/orsc.1120.0795
   Paasivaara M, 2018, EMPIR SOFTW ENG, V23, P2550, DOI 10.1007/s10664-017-9555-8
   Padala HS, 2022, IEEE T SOFTWARE ENG, V48, P241, DOI 10.1109/TSE.2020.2984173
   Palan S, 2018, J BEHAV EXP FINANC, V17, P22, DOI 10.1016/j.jbef.2017.12.004
   Paulhus D. L., 1991, MEASURES PERSONALITY, V1, P17, DOI DOI 10.1016/B978-0-12-590241-0.50006-X
   Paulhus DL, 2002, J RES PERS, V36, P556, DOI 10.1016/S0092-6566(02)00505-6
   Peer E, 2017, J EXP SOC PSYCHOL, V70, P153, DOI 10.1016/j.jesp.2017.01.006
   Qiu HS, 2019, PROC INT CONF SOFTW, P688, DOI 10.1109/ICSE.2019.00078
   Ralph P, 2020, EMPIR SOFTW ENG, V25, P4927, DOI 10.1007/s10664-020-09875-y
   Rauthmann JF, 2012, PERS INDIV DIFFER, V53, P884, DOI 10.1016/j.paid.2012.06.020
   Razavian M, 2016, IEEE SOFTWARE, V33, P64, DOI 10.1109/MS.2015.84
   Rouder JN, 2009, PSYCHON B REV, V16, P225, DOI 10.3758/PBR.16.2.225
   Saucier G, 2009, J PERS, V77, P1577, DOI 10.1111/j.1467-6494.2009.00593.x
   Scheuerman Morgan Klaus, 2019, UMBC Faculty Collection
   Schilpzand MC, 2011, SMALL GR RES, V42, P55, DOI 10.1177/1046496410377509
   Schönbrodt FD, 2018, PSYCHON B REV, V25, P128, DOI 10.3758/s13423-017-1230-y
   Schoorman FD, 2007, ACAD MANAGE REV, V32, P344, DOI 10.5465/AMR.2007.24348410
   Siegmund J, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P378, DOI 10.1145/2568225.2568252
   Simmonds G, 2018, FOOD QUAL PREFER, V63, P18, DOI 10.1016/j.foodqual.2017.07.015
   Smithson J, 2004, WORK EMPLOY SOC, V18, P115, DOI 10.1177/0950017004040765
   Stol KJ, 2018, ACM T SOFTW ENG METH, V27, DOI 10.1145/3241743
   Terrell J, 2017, PEERJ COMPUT SCI, DOI 10.7717/peerj-cs.111
   Tibshirani R, 2011, J R STAT SOC B, V73, P273, DOI 10.1111/j.1467-9868.2011.00771.x
   van Doorn J, 2021, PSYCHON B REV, V28, P813, DOI 10.3758/s13423-020-01798-5
   Vasilescu B, 2015, CHI 2015: PROCEEDINGS OF THE 33RD ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, P3789, DOI 10.1145/2702123.2702549
   Vasilescu B, 2014, INTERACT COMPUT, V26, P488, DOI 10.1093/iwc/iwt047
   Wagenmakers EJ, 2018, PSYCHON B REV, V25, P58, DOI [10.3758/s13423-017-1323-7, 10.3758/s13423-017-1343-3]
   Wagner S., 2020, CONT EMPIR METHODS S
   Ward ME, 2001, SCOT J POLIT ECON, V48, P283, DOI 10.1111/1467-9485.00199
   Weiner I.B., 2017, Handbook of personality assessment, V2nd
   Widiger TA., 2013, Personality disorders and the five-factor model of personality, DOI DOI 10.1037/13939-018
   Yamane T., 1973, STAT INTRO ANAL
   Yilmaz M, 2017, INFORM SOFTWARE TECH, V86, P101, DOI 10.1016/j.infsof.2017.01.005
   Zlotnick F, 2017, **DATA OBJECT**, DOI [10.5281/zenodo.806811, DOI 10.5281/ZENODO.806811]
NR 134
TC 22
Z9 22
U1 2
U2 14
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAR 1
PY 2022
VL 48
IS 3
BP 819
EP 834
DI 10.1109/TSE.2020.3003413
PG 16
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science; Engineering
GA ZU6ZO
UT WOS:000769989900006
OA Green Submitted, Green Published
DA 2024-07-18
ER

PT J
AU Vysali, S
   McIntosh, S
   Adams, B
AF Vysali, Shivashree
   McIntosh, Shane
   Adams, Bram
TI Quantifying, Characterizing, and Mitigating Flakily Covered Program
   Elements
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Code coverage; software testing; flaky tests
ID CODE-COVERAGE
AB Code coverage measures the degree to which source code elements (e.g., statements, branches) are invoked during testing. Despite growing evidence that coverage is a problematic measurement, it is often used to make decisions about where testing effort should be invested. For example, using coverage as a guide, tests should be written to invoke the non-covered program elements. At their core, coverage measurements assume that invocation of a program element during any test is equally valuable. Yet in reality, some tests are more robust than others. As a concrete instance of this, we posit in this paper that program elements that are only covered by flaky tests, i.e., tests with non-deterministic behaviour, are also worthy of investment of additional testing effort. In this paper, we set out to quantify, characterize, and mitigate "flakily covered" program elements (i.e., those elements that are only covered by flaky tests). To that end, we perform an empirical study of three large software systems from the OpenStack community. In terms of quantification, we find that systems are disproportionately impacted by flakily covered statements with 5 and 10 percent of the covered statements in Nova and Neutron being flakily covered, respectively, while < 1% of Cinder statements are flakily covered. In terms of characterization, we find that incidences of flakily covered statements could not be well explained by solely using code characteristics, such as dispersion, ownership, and development activity. In terms of mitigation, we propose GreedyFlake - a test effort prioritization algorithm to maximize return on investment when tackling the problem of flakily covered program elements. We find that GreedyFlake outperforms baseline approaches by at least eight percentage points of Area Under the Cost Effectiveness Curve.
C1 [Vysali, Shivashree] McGill Univ, Dept Elect & Comp Engn, Montreal, PQ H3A 0G4, Canada.
   [McIntosh, Shane] Univ Waterloo, David R Cheriton Sch Comp Sci, Waterloo, ON N2L 3G1, Canada.
   [Adams, Bram] Queens Univ, Sch Comp, Kingston, ON K7L 3N6, Canada.
C3 McGill University; University of Waterloo; Queens University - Canada
RP Vysali, S (corresponding author), McGill Univ, Dept Elect & Comp Engn, Montreal, PQ H3A 0G4, Canada.
EM shivashree.vaidhyamsubramanian@mail.mcgill.ca;
   shane.mcintosh@uwaterloo.ca; bram.adams@queensu.ca
OI Adams, Bram/0000-0001-7213-4006
CR Ammann P., 2016, INTRO SOFTWARE TESTI, DOI [10.1017/9781316771273, DOI 10.1017/9781316771273]
   Antinyan V, 2018, IEEE SOFTWARE, V35, P73, DOI 10.1109/MS.2017.3281318
   Bell J, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P433, DOI 10.1145/3180155.3180164
   Thorve S, 2018, PROC IEEE INT CONF S, P534, DOI 10.1109/ICSME.2018.00062
   Do HS, 2004, 15TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P113
   Elbaum S, 2001, PROC IEEE INT CONF S, P170, DOI 10.1109/ICSM.2001.972727
   Gay G, 2017, IEEE INT CONF SOFTW, P345, DOI 10.1109/ICST.2017.38
   Gay G, 2015, IEEE T SOFTWARE ENG, V41, P803, DOI 10.1109/TSE.2015.2421011
   Gopinath R, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P72, DOI 10.1145/2568225.2568278
   Inozemtseva L, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P435, DOI 10.1145/2568225.2568271
   Jones JA, 2003, IEEE T SOFTWARE ENG, V29, P195, DOI 10.1109/TSE.2003.1183927
   Kaur A., 2011, International Journal on Computer Science and Engineering, V3, P1839
   King TM, 2018, 2018 IEEE 18TH INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY AND SECURITY COMPANION (QRS-C), P100, DOI 10.1109/QRS-C.2018.00031
   Kochhar PS, 2017, IEEE T RELIAB, V66, P1213, DOI 10.1109/TR.2017.2727062
   Lam W, 2019, IEEE INT CONF SOFTW, P312, DOI 10.1109/ICST.2019.00038
   Li JJ, 2006, INFORM SOFTWARE TECH, V48, P1187, DOI 10.1016/j.infsof.2006.06.007
   Li Z, 2007, IEEE T SOFTWARE ENG, V33, P225, DOI 10.1109/TSE.2007.38
   Luo QZ, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P643, DOI 10.1145/2635868.2635920
   Marick B., 1999, Proceedings of the 16th Interational Conference on Testing Computer Software, P16
   Namin AS, 2009, ISSTA 2009: INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P57
   Ohlsson N, 1996, IEEE T SOFTWARE ENG, V22, P886, DOI 10.1109/32.553637
   PIWOWARSKI P, 1993, PROC INT CONF SOFTW, P287, DOI 10.1109/ICSE.1993.346035
   Rahman F, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P491, DOI 10.1145/1985793.1985860
   Riehmann P, 2005, INFOVIS 05: IEEE SYMPOSIUM ON INFORMATION VISUALIZATION, PROCEEDINGS, P233, DOI 10.1109/INFVIS.2005.1532152
   Romano J, 2006, ANN M FLOR ASS I RES, P1
   Rothermel G, 2001, IEEE T SOFTWARE ENG, V27, P929, DOI 10.1109/32.962562
   Schwartz A, 2018, J SYST SOFTWARE, V144, P106, DOI 10.1016/j.jss.2018.06.024
   Shi A, 2019, PROCEEDINGS OF THE 28TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA '19), P112, DOI 10.1145/3293882.3330568
   Shihab E, 2011, SOFTWARE PRACT EXPER, V41, P1027, DOI 10.1002/spe.1053
   SHNEIDERMAN B, 1992, ACM T GRAPHIC, V11, P92, DOI 10.1145/102377.115768
   Strathern M., 1997, European Review, V5, P305, DOI DOI 10.1017/S1062798700002550
   Wong WE, 2007, P INT COMP SOFTW APP, P449
NR 32
TC 0
Z9 0
U1 0
U2 1
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAR 1
PY 2022
VL 48
IS 3
BP 1018
EP 1029
DI 10.1109/TSE.2020.3010045
PG 12
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA ZU6ZO
UT WOS:000769989900017
DA 2024-07-18
ER

PT J
AU Pérez, F
   Ziadi, T
   Cetina, C
AF Perez, Francisca
   Ziadi, Tewfik
   Cetina, Carlos
TI Utilizing Automatic Query Reformulations as Genetic Operations to
   Improve Feature Location in Software Models
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Genetics; Adaptation models; Task analysis; Software; Semantics;
   Evolutionary computation; Analytical models; Model-driven engineering;
   search-based software engineering; automatic query reformulations
ID SOURCE CODE; SEARCH; TRANSFORMATION; MAINTENANCE; STATISTICS; DESIGN;
   TESTS
AB In the combination of Model-Driven Engineering (MDE) and Search-Based Software Engineering (SBSE), genetic operations are one of the key ingredients. Our work proposes a novel adaptation of automatic query reformulations as genetic operations that leverage the latent semantics of software models (the cornerstone artefact of MDE). We analyze the impact of these reformulation operations in a real-world industrial case study of feature location in models. As baselines, we use: 1) the widespread single-point crossover plus random mutation; and 2) mask crossover plus random mutation, which is the best performer for feature location in models. We also perform a statistical analysis to provide quantitative evidence of the impact of the results and to show that this impact is significant. Our reformulation operations improve the results of the best baseline by 37.73 percent in recall and 14.08 percent in precision. These results are relevant for the task of feature location in models (one of the main activities performed during software maintenance and evolution). Furthermore, given that the only requirement to apply our approach is term availability in models, our work opens a new research direction to improve more tasks in MDE such as bug location or requirements traceability.
C1 [Perez, Francisca; Cetina, Carlos] Univ San Jorge, SVIT Res Grp, Zaragoza 50830, Spain.
   [Ziadi, Tewfik] Sorbonne Univ, LiP6, F-75252 Paris, France.
C3 Universidad San Jorge; Sorbonne Universite
RP Pérez, F (corresponding author), Univ San Jorge, SVIT Res Grp, Zaragoza 50830, Spain.
EM mfperez@usj.es; tewfik.ziadi@lip6.fr; ccetina@usj.es
RI Cetina, Carlos/P-8682-2017; Pérez, Francisca/KPH-0503-2024
OI Cetina, Carlos/0000-0001-8542-5515; 
FU Ministry of Economy and Competitiveness (MINECO) through the Spanish
   National R+D+i Plan; ERDF funds under the Project ALPS
   [RTI2018-096411-B-I00]
FX The work of Francisca Perez and Carlos Cetina was mainly done during
   their stay at the LIP6 of Sorbonne University. This work has been
   partially supported by the Ministry of Economy and Competitiveness
   (MINECO) through the Spanish National R+D+i Plan and ERDF funds under
   the Project ALPS (RTI2018-096411-B-I00). We also thank the ITEA3 15010
   REVaMP2 Project.
CR Abdeen H., 2014, INT C AUTOMATED SOFT, P289
   Ali S., 2011, Proceedings of the 11th International Conference on Quality Software (QSIC 2011), P41, DOI 10.1109/QSIC.2011.17
   Ali S, 2013, IEEE T SOFTWARE ENG, V39, P1376, DOI 10.1109/TSE.2013.17
   Amoui M, 2006, INT J INFORM TECHNOL, V1, P235
   Andrade Sandro Santos, 2013, 2013 IEEE 7th International Conference on Self-Adaptation and Self-Organizing Systems Workshops, P23, DOI 10.1109/SASOW.2013.13
   [Anonymous], 2019, APACHE OPENNLP TOOLK
   [Anonymous], 2019, ENGLISH PORTER2 STEM
   [Anonymous], 2012, P 5 INDIA SOFTWARE E
   [Anonymous], 2019, EFFICIENT JAVA MATRI
   Arcega L., 2015, PROC INT WORKSHOP MO, P51
   Arcuri A, 2014, SOFTW TEST VERIF REL, V24, P219, DOI 10.1002/stvr.1486
   Arcuri A, 2013, EMPIR SOFTW ENG, V18, P594, DOI 10.1007/s10664-013-9249-9
   Baki I, 2014, LECT NOTES COMPUT SC, V8767, P636, DOI 10.1007/978-3-319-11653-2_39
   Ballarín M, 2018, 21ST ACM/IEEE INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS 2018), P189, DOI 10.1145/3239372.3239397
   Barros M. de Oliveira, 2011, RELATE DIA, V5
   Batot E., 2015, P ACM IEEE 18 INT C, P1
   ben Fadhel A, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P212, DOI 10.1109/ICSM.2012.6405274
   Blanco R, 2012, INFORM RETRIEVAL, V15, P54, DOI 10.1007/s10791-011-9172-x
   Boussaïd I, 2017, AUTOMAT SOFTW ENG, V24, P233, DOI 10.1007/s10515-017-0215-4
   Brambilla M., 2012, Model-Driven Software Engineering in Practice, DOI [DOI 10.1007/978-3-031-02549-5, 10.2200/S00441ED1V01Y201208SWE001, DOI 10.2200/S00441ED1V01Y201208SWE001]
   Brin S, 1998, COMPUT NETWORKS ISDN, V30, P107, DOI 10.1016/S0169-7552(98)00110-X
   Carpineto C, 2012, ACM COMPUT SURV, V44, DOI 10.1145/2071389.2071390
   Chaparro O, 2017, PROC IEEE INT CONF S, P376, DOI 10.1109/ICSME.2017.100
   Cheng BHC, 2013, 2013 1ST INTERNATIONAL WORKSHOP ON COMBINING MODELLING AND SEARCH-BASED SOFTWARE ENGINEERING (CMSBSE), P1, DOI 10.1109/CMSBSE.2013.6604427
   Clif N., 1996, ORDINAL METHODS BEHA
   CLIFF N, 1993, PSYCHOL BULL, V114, P494, DOI 10.1037/0033-2909.114.3.494
   Conover W.J., 1999, Practical Nonparametric Statistics, V350
   Cooper KD, 1999, ACM SIGPLAN NOTICES, V34, P1, DOI 10.1145/315253.314414
   Debreceni C, 2016, LECT NOTES COMPUT SC, V9633, P104, DOI 10.1007/978-3-662-49665-7_7
   Denil J, 2014, LECT NOTES COMPUT SC, V8769, P80, DOI 10.1007/978-3-319-11743-0_6
   Dit B, 2013, J SOFTW-EVOL PROC, V25, P53, DOI 10.1002/smr.567
   Doungsa-ard Chartchai., 2007, Software Engineering Advances, P47, DOI DOI 10.1109/ICSEA.2007.70
   Dyer, 2016, WATCHMAKER FRAMEWORK
   Farooq U, 2009, IEEE ICST WORKSHOP, P141, DOI 10.1109/ICSTW.2009.27
   Fatiregun D, 2005, WCRE: 12TH WORKING CONFERENCE ON REVERSE ENGINEERING 2005, PROCEEDINGS, P3
   Fatiregun D, 2004, FOURTH IEEE INTERNATIONAL WORKSHOP ON SOURCE CODE ANALYSIS AND MANIPULATION, PROCEEDINGS, P65
   Fatiregun D, 2003, LECT NOTES COMPUT SC, V2724, P2511
   Faunes Martin, 2013, Theory and Practice of Model Transformations. 6th International Conference, ICMT 2013. Proceedings: LNCS 7909, P17, DOI 10.1007/978-3-642-38883-5_2
   Faunes M, 2013, LECT NOTES COMPUT SC, V8107, P187, DOI 10.1007/978-3-642-41533-3_12
   Faunes M, 2012, IEEE INT CONF AUTOM, P250, DOI 10.1145/2351676.2351714
   Fleck M., 2015, Proc. of NasBASE, P1
   Fleurey F, 2004, SIVOES-MODEVA 2004, PROCEEDINGS, P29, DOI 10.1109/MODEVA.2004.1425846
   Font J, 2018, IEEE T EVOLUT COMPUT, V22, P363, DOI 10.1109/TEVC.2017.2751100
   Font J, 2016, 19TH ACM/IEEE INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS'16), P272, DOI 10.1145/2976767.2976789
   García S, 2010, INFORM SCIENCES, V180, P2044, DOI 10.1016/j.ins.2009.12.010
   Gay G, 2009, PROC IEEE INT CONF S, P351, DOI 10.1109/ICSM.2009.5306315
   Ghannem Adnane, 2013, Search Based Software Engineering. 5th International Symposium, SSBSE 2013. Proceedings: LNCS 8084, P96, DOI 10.1007/978-3-642-39742-4_9
   Ghannem Adnane., 2011, P C CTR ADV STUDIES, P175
   Gibiec M., 2010, Proceedings of the IEEE/ACM International Conference on Automated Software Engineering, ASE '10, P245
   Goldsby H.J., 2008, Proceedings of the 10th Annual Conference on Genetic and Evolutionary Computation, P1751, DOI DOI 10.1145/1389095.1389434
   Goldsby HJ, 2008, LECT NOTES COMPUT SC, V5301, P568, DOI 10.1007/978-3-540-87875-9_40
   Goldsby HeatherJ., 2008, P 5 IEEE INT C AUTON, P87
   Gomez Juan Jose Cadavid, 2012, 2012 IEEE Fifth International Conference on Software Testing, Verification and Validation (ICST 2012), P131, DOI 10.1109/ICST.2012.93
   Grissom R. J., 2005, EFFECT SIZES RES BRO
   Gyapay S., 2004, Electronic Notes in Theoretical Computer Science, V109, P137
   Haiduc S, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P842, DOI 10.1109/ICSE.2013.6606630
   Hansel J, 2014, P 7 INT WORKSH SEARC, P31
   Harman M, 2014, 9TH INTERNATIONAL SYMPOSIUM ON SOFTWARE ENGINEERING FOR ADAPTIVE AND SELF-MANAGING SYSTEMS (SEAMS 2014), P1, DOI 10.1145/2593929.2600116
   Hemmati H., 2010, ENHANCED TEST CASE S
   Hill E, 2009, PROC INT CONF SOFTW, P232, DOI 10.1109/ICSE.2009.5070524
   Hofmann T, 1999, SIGIR'99: PROCEEDINGS OF 22ND INTERNATIONAL CONFERENCE ON RESEARCH AND DEVELOPMENT IN INFORMATION RETRIEVAL, P50, DOI 10.1145/312624.312649
   Hulth A, 2003, PROCEEDINGS OF THE 2003 CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING, P216
   Ipate F, 2008, ROM J INF SCI TECH, V11, P209
   Iqbal M.Z., 2012, Proceedings of the International Symposium on Software Testing and Analysis, P199
   Jensen und A.C., 2010, Proceedings of the 12th Annual Conference on Genetic and Evolutionary Computation. GECCO '10, P1341
   Jie Zhang, 2012, 2012 Proceedings of 7th International Workshop on Automation of Software Test (AST 2012), P76, DOI 10.1109/IWAST.2012.6228994
   Jilani AA, 2014, LECT NOTES COMPUT SC, V8568, P17
   Jinshui Wang, 2011, 2011 IEEE 27th International Conference on Software Maintenance, P213, DOI 10.1109/ICSM.2011.6080788
   Kalaji AS, 2011, INFORM SOFTWARE TECH, V53, P1297, DOI 10.1016/j.infsof.2011.06.004
   Kessentini M., 2010, P 20 ANN INT C CTR A, P72
   Kessentini M, 2014, J SYST SOFTWARE, V97, P1, DOI 10.1016/j.jss.2014.06.040
   Kessentini M, 2013, 2013 1ST INTERNATIONAL WORKSHOP ON COMBINING MODELLING AND SEARCH-BASED SOFTWARE ENGINEERING (CMSBSE), P51, DOI 10.1109/CMSBSE.2013.6604438
   Kessentini M, 2013, GECCO'13: PROCEEDINGS OF THE 2013 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P1453
   Kessentini M, 2012, SOFTW SYST MODEL, V11, P209, DOI 10.1007/s10270-010-0175-7
   Kessentini M, 2011, AUTOMAT SOFTW ENG, V18, P199, DOI 10.1007/s10515-010-0079-3
   Kessentini M, 2008, LECT NOTES COMPUT SC, V5301, P159, DOI 10.1007/978-3-540-87875-9_12
   Kessentini Marouane., 2010, Proceedings of the Second InternationalWorkshop on Behaviour Modelling: Foundation and Applications, P2
   Kruger Jacob, 2019, Software Engineering for Variability Intensive Systems, P153, DOI 10.1201/9780429022067-7
   Kulkarni P, 2004, ACM SIGPLAN NOTICES, V39, P171, DOI 10.1145/996893.996863
   Kumaran G, 2009, PROCEEDINGS 32ND ANNUAL INTERNATIONAL ACM SIGIR CONFERENCE ON RESEARCH AND DEVELOPMENT IN INFORMATION RETRIEVAL, P564, DOI 10.1145/1571941.1572038
   Landauer TK, 1998, DISCOURSE PROCESS, V25, P259, DOI 10.1080/01638539809545028
   Lapeña R, 2017, PROCEEDINGS OF THE 16TH ACM SIGPLAN INTERNATIONAL CONFERENCE ON GENERATIVE PROGRAMMING: CONCEPTS AND EXPERIENCES (GPCE'17), P63, DOI 10.1145/3136040.3136052
   Lefticaru Raluca, 2008, 2008 First IEEE International Conference on Software Testing, Verification and Validation (ICST '08), P525, DOI 10.1109/ICST.2008.32
   Li HZ, 2005, QSIC 2005: FIFTH INTERNATIONAL CONFERENCE ON QUALITY SOFTWARE, PROCEEDINGS, P255
   Li HZ, 2005, LECT NOTES COMPUT SC, V3502, P69
   Lim Siew Mooi, 2017, International Journal of Machine Learning and Computing, V7, P9, DOI 10.18178/ijmlc.2017.7.1.611
   Lopez-Herrejon RE, 2015, J SYST SOFTWARE, V103, P353, DOI 10.1016/j.jss.2014.10.037
   Lu ML, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P545, DOI 10.1109/SANER.2015.7081874
   Mansoor U, 2015, J SYST SOFTWARE, V103, P423, DOI 10.1016/j.jss.2014.11.043
   Marc~en A. C., 2017, P 21 INT SYST SOFTW
   Marcus A, 2004, 11TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P214, DOI 10.1109/WCRE.2004.10
   McKinley PK, 2012, J INTERNET SERV APPL, V3, P51, DOI 10.1007/s13174-011-0049-4
   Mihalcea, 2004, P EMNLP, P401, DOI DOI 10.3115/1219044.1219064
   Mkaouer MW, 2013, 2013 1ST INTERNATIONAL WORKSHOP ON COMBINING MODELLING AND SEARCH-BASED SOFTWARE ENGINEERING (CMSBSE), P61, DOI 10.1109/CMSBSE.2013.6605712
   Moghadam IH, 2012, EUR CON SFTWR MTNCE, P43, DOI 10.1109/CSMR.2012.15
   Nisbet A, 1998, LECT NOTES COMPUT SC, V1401, P987, DOI 10.1007/BFb0037253
   Pavai G, 2017, ACM COMPUT SURV, V49, DOI 10.1145/3009966
   Pérez F, 2019, AUTOMAT SOFTW ENG, V26, P161, DOI 10.1007/s10515-019-00251-9
   Pérez F, 2018, INFORM SOFTWARE TECH, V103, P188, DOI 10.1016/j.infsof.2018.06.017
   Poshyvanyk D, 2007, IEEE T SOFTWARE ENG, V33, P420, DOI [10.1109/TSE.2007.1016, 10.1109/TSE.2007.1016.]
   Prasanna M., 2009, INT J ADV SOFT COMPU, V1, P19
   Rahman M. M., 2018, ABS180704475 CORR
   Ramirez AJ, 2009, ACM/IEEE SIXTH INTERNATIONAL CONFERENCE ON AUTONOMIC COMPUTING AND COMMUNICATIONS (ICAC '09), P97
   Romano J, 2006, ANN M FLOR ASS I RES, P1
   Rose LM, 2013, 2013 1ST INTERNATIONAL WORKSHOP ON COMBINING MODELLING AND SEARCH-BASED SOFTWARE ENGINEERING (CMSBSE), P16, DOI 10.1109/CMSBSE.2013.6604431
   Saada H, 2013, IEEE INT CONF AUTOM, P688, DOI 10.1109/ASE.2013.6693134
   Sabharwal S., 2011, INT J COMPUTER SCI I, V8, P433
   Sahin D, 2015, J SOFTW-EVOL PROC, V27, P821, DOI 10.1002/smr.1735
   Salton G., 1971, SMART RETRIEVAL SYST
   Salton G, 1986, Introduction to Modern Information Retrieval
   Sayyad AS, 2013, IEEE INT CONF AUTOM, P465, DOI 10.1109/ASE.2013.6693104
   Shelburg Jeffery, 2013, Search Based Software Engineering. 5th International Symposium, SSBSE 2013. Proceedings: LNCS 8084, P209, DOI 10.1007/978-3-642-39742-4_16
   Shirole M., 2011, Proceedings of the 4th india software engineering conference, P125
   Shirole M, 2010, COMM COM INF SC, V94, P53, DOI 10.1007/978-3-642-14834-7_6
   Sisman B, 2013, IEEE WORK CONF MIN S, P309, DOI 10.1109/MSR.2013.6624044
   Steinberg D, 2009, EMF ECLIPSE MODELING, V2nd
   Umbarkar A. J., 2015, ICTACT Journal on Soft Computing, V6, P1083
   Vargha A, 2000, J EDUC BEHAV STAT, V25, P101, DOI 10.3102/10769986025002101
   Wang W., 2013, MDEBE@MoDELS, P42
   Williams J.R., 2013, COLLEGIUM, P76
   Winkler S, 2010, SOFTW SYST MODEL, V9, P529, DOI 10.1007/s10270-009-0145-0
   Xu D, 2005, 12th Asia-Pacific Software Engineering Conference, Proceedings, P385
   Yano T., 2011, 2011 IEEE Fourth International Conference on Software Testing, Verification and Validation Workshops (ICSTW), P164, DOI 10.1109/ICSTW.2011.37
   Zou XC, 2010, EMPIR SOFTW ENG, V15, P119, DOI 10.1007/s10664-009-9114-z
NR 124
TC 6
Z9 6
U1 0
U2 5
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD FEB 1
PY 2022
VL 48
IS 2
BP 713
EP 731
DI 10.1109/TSE.2020.3000520
PG 19
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science; Engineering
GA ZB4EB
UT WOS:000756796100020
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Padala, HS
   Mendez, C
   Fronchetti, F
   Steinmacher, I
   Steine-Hanson, Z
   Hilderbrand, C
   Horvath, A
   Hill, C
   Simpson, L
   Burnett, M
   Gerosa, M
   Sarma, A
AF Padala, Hema Susmita
   Mendez, Christopher
   Fronchetti, Felipe
   Steinmacher, Igor
   Steine-Hanson, Zoe
   Hilderbrand, Claudia
   Horvath, Amber
   Hill, Charles
   Simpson, Logan
   Burnett, Margaret
   Gerosa, Marco
   Sarma, Anita
TI How Gender-Biased Tools Shape Newcomer Experiences in OSS Projects
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Open source software (OSS); software engineering; newcomers; diversity;
   gender
ID OPEN-SOURCE SOFTWARE; SELF-EFFICACY; COMMUNITY; ATTITUDES; ANXIETY
AB Previous research has revealed that newcomer women are disproportionately affected by gender-biased barriers in open source software (OSS) projects. However, this research has focused mainly on social/cultural factors, neglecting the software tools and infrastructure. To shed light on how OSS tools and infrastructure might factor into OSS barriers to entry, we conducted two studies: (1) a field study with five teams of software professionals, who worked through five use cases to analyze the tools and infrastructure used in their OSS projects; and (2) a diary study with 22 newcomers (9 women and 13 men) to investigate whether the barriers matched the ones identified by the software professionals. The field study produced a bleak result: software professionals found gender biases in 73 percent of all the newcomer barriers they identified. Further, the diary study confirmed these results: Women newcomers encountered gender biases in 63 percent of barriers they faced. Fortunately, many kinds of barriers and biases revealed in these studies could potentially be ameliorated through changes to the OSS software environments and tools.
C1 [Padala, Hema Susmita; Mendez, Christopher; Steine-Hanson, Zoe; Hilderbrand, Claudia; Horvath, Amber; Hill, Charles; Simpson, Logan; Burnett, Margaret; Sarma, Anita] Oregon State Univ, Sch Elect Engn & Comp Sci, Corvallis, OR 97331 USA.
   [Fronchetti, Felipe] Univ Sao Paulo, Comp Sci Dept, BR-05508060 Sao Paulo, Brazil.
   [Steinmacher, Igor; Gerosa, Marco] No Arizona Univ, Sch Informat Comp & Cyber Syst, Flagstaff, AZ 86011 USA.
C3 Oregon State University; Universidade de Sao Paulo; Northern Arizona
   University
RP Sarma, A (corresponding author), Oregon State Univ, Sch Elect Engn & Comp Sci, Corvallis, OR 97331 USA.
EM padalah@oregonstate.edu; mendezc@oregonstate.edu;
   fronchettiemail@gmail.com; Igor.Steinmacher@nau.edu;
   steinehz@oregonstate.edu; minic@oregonstate.edu;
   horvatha@oregonstate.edu; hillchar@oregonstate.edu;
   simpsolo@oregonstate.edu; burnett@eecs.oregonstate.edu;
   Marco.Gerosa@nau.edu; anita.sarma@oregonstate.edu
RI Gerosa, Marco Aurelio/A-6686-2009; Igor, Steinmacher/B-6414-2012
OI Gerosa, Marco Aurelio/0000-0003-1399-7535; Igor,
   Steinmacher/0000-0002-0612-5790; Burnett, Margaret/0000-0001-6536-7629
FU US National Science Foundation [1528061, 1815486, 1815503, 1900903,
   1901031]; Div Of Information & Intelligent Systems; Direct For Computer
   & Info Scie & Enginr [1528061] Funding Source: National Science
   Foundation
FX This work was partially supported by the US National Science Foundation
   under Grant Nos. 1528061, 1815486, 1815503, 1900903, and 1901031. This
   is a revised and extended version of a recent ICSE paper [1].
CR [Anonymous], 1994, Usability Inspections Methods
   [Anonymous], 2011, Proceedings of the 2011 44th Hawaii International Conference on System Sciences", HICSS'11, DOI [DOI 10.1109/HICSS.2011.264, 10.1109/HICSS.2011.264]
   [Anonymous], 2014, CSCW, DOI DOI 10.1145/2531602.2531660
   [Anonymous], 2016, PEER J COMPUT SCI
   Ashcraft C., 2015, TRICKY NECESSARY BUS
   Bayati S, 2019, 2019 IEEE/ACM 12TH INTERNATIONAL WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING (CHASE 2019), P49, DOI 10.1109/CHASE.2019.00020
   Bosu A, 2019, INT SYMP EMP SOFTWAR, P295
   Burnett M, 2017, S VIS LANG HUM CEN C, P139, DOI 10.1109/VLHCC.2017.8103461
   Burnett M, 2016, 34TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, CHI 2016, P2586, DOI 10.1145/2858036.2858274
   Burnett M, 2016, INTERACT COMPUT, V28, P760, DOI 10.1093/iwc/iwv046
   Burnett MM, 2011, INTERACT COMPUT, V23, P450, DOI 10.1016/j.intcom.2011.06.004
   Butler J., 1990, GENDER TROUBLE FEMIN
   Cao Jill, 2010, Proceedings 2010 IEEE Symposium on Visual Languages and Human-Centric Computing (VL/HCC 2010), P149, DOI 10.1109/VLHCC.2010.29
   Cassell Justine, 2002, HUMAN COMPUTER INTER, P402
   Catolino G, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN SOCIETY (ICSE-SEIS 2019), P11, DOI 10.1109/ICSE-SEIS.2019.00010
   Cazan AM, 2016, COMPUT HUM BEHAV, V55, P258, DOI 10.1016/j.chb.2015.09.001
   Charness G, 2012, J ECON BEHAV ORGAN, V83, P50, DOI 10.1016/j.jebo.2011.06.007
   Coursaris CK, 2008, J USABILITY STUD, V3, P103
   Cunningham SJ, 2016, LECT NOTES COMPUT SC, V10075, P45, DOI 10.1007/978-3-319-49304-6_6
   Dagenais B., 2010, Proc. of the ICSE 10, P275, DOI DOI 10.1145/1806799.1806842
   DARLEY WK, 1995, J ADVERTISING, V24, P41, DOI 10.1080/00913367.1995.10673467
   David PA, 2008, INF ECON POLICY, V20, P364, DOI 10.1016/j.infoecopol.2008.10.001
   Davis J.G., 2014, Proceedings of the 48th Annual Forum on the Geology of Industrial Minerals, Phoenix, Arizona, April 30 - May 4, 2012. Arizona Geological Survey Special Paper #9, P1
   Dohmen T, 2011, J EUR ECON ASSOC, V9, P522, DOI 10.1111/j.1542-4774.2011.01015.x
   Ducheneaut N., 2005, Computer Supported Cooperative Work: The Journal of Collaborative Computing, V14, P323, DOI 10.1007/s10606-005-9000-1
   Feller Joseph, 2000, Proceedings of the Twenty-First International Conference on Information Systems, P58
   Fisher A., 2002, SIGCSE Bulletin, V34, P79, DOI 10.1145/543812.543836
   Fisher R. A., 1946, Statistical methods for research workers.
   Fleming, 2010, P 2010 ACM IEEE INT, P1, DOI DOI 10.1145/1852786.1852824
   Ford D, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN SOCIETY (ICSE-SEIS 2019), P51, DOI 10.1109/ICSE-SEIS.2019.00014
   Ford D, 2017, S VIS LANG HUM CEN C, P239, DOI 10.1109/VLHCC.2017.8103473
   Ford D, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P846, DOI 10.1145/2950290.2950331
   Fronchetti F, 2019, IFIP ADV INF COMM TE, V556, P91, DOI 10.1007/978-3-030-20883-7_9
   Ghosh R.A., 2002, Free / Libre and Open Source Software: Survey and Study Deliverable D18 : FINAL REPORT Part IV: Survey of Developers
   Green T.R. G., 1983, PSYCHOL COMPUTER USE
   Grudin Jonathan., 2006, The Persona Lifecycle: Keeping People in Mind Throughout Product Design, V12, P642, DOI 10.1016/B978-012566251-2/50013-7
   Hartzel K, 2003, COMMUN ACM, V46, P167, DOI 10.1145/903893.903933
   Hill C, 2017, PROCEEDINGS OF THE 2017 ACM SIGCHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS (CHI'17), P6658, DOI 10.1145/3025453.3025609
   Hill C, 2016, S VIS LANG HUM CEN C, P199, DOI 10.1109/VLHCC.2016.7739685
   Horwitz SK, 2007, J MANAGE, V33, P987, DOI 10.1177/0149206307308587
   Hou W., 2006, CHI'06 Extended Abstracts on Human Factors in Computing Systems, P875
   Huffman AH, 2013, COMPUT HUM BEHAV, V29, P1779, DOI 10.1016/j.chb.2013.02.012
   Jernigan W, 2017, J VISUAL LANG COMPUT, V39, P51, DOI 10.1016/j.jvlc.2017.04.005
   Kelleher C., 2009, Advances in Gender and Education, V1, P5, DOI DOI 10.HTTP://WWW.MCRCAD.0RG/WEB_
   Laurison D, 2016, AM SOCIOL REV, V81, P668, DOI 10.1177/0003122416653602
   Lee A, 2019, PROC INT CONF SOFTW, P677, DOI 10.1109/ICSE.2019.00077
   Lee Michael Jong, 2015, THESIS U WASHINGTON
   Mahatody T, 2010, INT J HUM-COMPUT INT, V26, P741, DOI 10.1080/10447311003781409
   Mendez C, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1004, DOI 10.1145/3180155.3180241
   Meyers-Levy J, 2015, J CONSUM PSYCHOL, V25, P129, DOI 10.1016/j.jcps.2014.06.003
   MEYERSLEVY J, 1991, J CONSUM RES, V18, P63, DOI 10.1086/209241
   Mockus A, 2002, ACM T SOFTW ENG METH, V11, P309, DOI 10.1145/567793.567795
   Mockus A., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, P263, DOI 10.1109/ICSE.2000.870417
   Nafus D, 2012, NEW MEDIA SOC, V14, P669, DOI 10.1177/1461444811422887
   O'Leary-Kelly Ae, 2004, NSF ITWF ITR EWF PRI, P65
   Palen Leysia., 2002, CSCW 02, P87, DOI 10.1145/587078.587092
   Piazza Blog, 2015, STEM CONFIDENCE GAP
   Qiu HS, 2019, PROC INT CONF SOFTW, P688, DOI 10.1109/ICSE.2019.00078
   Qureshi I, 2011, ORGAN RES METHODS, V14, P208, DOI 10.1177/1094428110375002
   Riedl R, 2010, MIS QUART, V34, P397
   Robles G., 2014, P 11 WORKING C MININ, DOI [10.1145/2597073, DOI 10.1145/2597073]
   Rosner D, 2009, CHI2009: PROCEEDINGS OF THE 27TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, VOLS 1-4, P419
   Sarma A, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P932, DOI 10.1145/2950290.2983984
   Seaman CB, 1999, IEEE T SOFTWARE ENG, V25, P557, DOI 10.1109/32.799955
   Simon S. J., 2001, Data Base for Advances in Information Systems, V32, P18
   Singh A, 2013, COMPUT HUM BEHAV, V29, P739, DOI 10.1016/j.chb.2012.11.009
   Spencer R., 2000, CHI 2000 Conference Proceedings. Conference on Human Factors in Computing Systems. CHI 2000. The Future is Here, P353, DOI 10.1145/332040.332456
   Steinmacher I, 2016, PROC INT CONF SOFTW, P273, DOI 10.1145/2884781.2884806
   Steinmacher I, 2015, PROCEEDINGS OF THE 2015 ACM INTERNATIONAL CONFERENCE ON COMPUTER-SUPPORTED COOPERATIVE WORK AND SOCIAL COMPUTING (CSCW'15), P1379, DOI 10.1145/2675133.2675215
   Steinmacher I, 2014, 2014 28TH BRAZILIAN SYMPOSIUM ON SOFTWARE ENGINEERING (SBES 2014), P51, DOI 10.1109/SBES.2014.9
   Steinmacher I, 2013, 2013 6TH INTERNATIONAL WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING (CHASE), P25, DOI 10.1109/CHASE.2013.6614728
   Symon Gillian., 1998, Qualitative research diaries
   Turkle S, 2005, SECOND SELF: COMPUTERS AND THE HUMAN SPIRIT, TWENTIETH ANNIVERSARY EDITION, P1
   Vasilescu B, 2015, CHI 2015: PROCEEDINGS OF THE 33RD ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, P3789, DOI 10.1145/2702123.2702549
   von Krogh G, 2003, RES POLICY, V32, P1217, DOI 10.1016/S0048-7333(03)00050-7
   Vorvoreanu M, 2019, CHI 2019: PROCEEDINGS OF THE 2019 CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, DOI 10.1145/3290605.3300283
   Wang Y, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN SOCIETY (ICSE-SEIS 2019), P1, DOI 10.1109/ICSE-SEIS.2019.00009
   Wang ZD, 2018, PROC INT CONF SOFTW, P81, DOI 10.1145/3183428.3183437
   Weber EU, 2002, J BEHAV DECIS MAKING, V15, P263, DOI 10.1002/bdm.414
   Wohlin C., 2012, Experimentation in Software Engineering
   Zhou MH, 2012, PROC INT CONF SOFTW, P518, DOI 10.1109/ICSE.2012.6227164
NR 81
TC 13
Z9 15
U1 0
U2 5
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JAN 1
PY 2022
VL 48
IS 1
BP 241
EP 259
DI 10.1109/TSE.2020.2984173
PG 19
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science; Engineering
GA YG0HJ
UT WOS:000742179000014
OA Bronze
DA 2024-07-18
ER

PT J
AU Li, H
   Shang, WY
   Adams, B
   Sayagh, M
   Hassan, AE
AF Li, Heng
   Shang, Weiyi
   Adams, Bram
   Sayagh, Mohammed
   Hassan, Ahmed E.
TI A Qualitative Study of the Benefits and Costs of Logging From
   Developers' Perspectives
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Runtime; Libraries; Performance evaluation; Software systems;
   Computational modeling; Quality assessment; Software logging; issue
   reports; developer survey; qualitative analysis
AB Software developers insert logging statements in their source code to collect important runtime information of software systems. In practice, logging appropriately is a challenge for developers. Prior studies aimed to improve logging by proactively inserting logging statements in certain code snippets or by learning where to log from existing logging code. However, there exists no work that systematically studies developers' logging considerations, i.e., the benefits and costs of logging from developers' perspectives. Without understanding developers' logging considerations, automated approaches for logging decisions are based primarily on researchers' intuition which may not be convincing to developers. In order to fill the gap between developers' logging considerations and researchers' intuition, we performed a qualitative study that combines a survey of 66 developers and a case study of 223 logging-related issue reports. The findings of our qualitative study draw a comprehensive picture of the benefits and costs of logging from developers' perspectives. We observe that developers consider a wide range of logging benefits and costs, while most of the uncovered benefits and costs have never been observed nor discussed in prior work. We also observe that developers use ad hoc strategies to balance the benefits and costs of logging. Developers need to be fully aware of the benefits and costs of logging, in order to better benefit from logging (e.g., leveraging logging to enable users to solve problems by themselves) and avoid unnecessary negative impact (e.g., exposing users' sensitive information). Future research needs to consider such a wide range of logging benefits and costs when developing automated logging strategies. Our findings also inspire opportunities for researchers and logging library providers to help developers balance the benefits and costs of logging, for example, to support different log levels for different parts of a logging statement, or to help developers estimate and reduce the negative impact of logging statements.
C1 [Li, Heng; Sayagh, Mohammed; Hassan, Ahmed E.] Queens Univ, Sch Comp, Software Anal & Intelligence Lab SAIL, Kingston, ON K7L 3N6, Canada.
   [Shang, Weiyi] Concordia Univ, Dept Comp Sci & Software Engn, Montreal, PQ H3G 1M8, Canada.
   [Adams, Bram] Polytech Montreal, MCIS, Montreal, PQ H3T 1J4, Canada.
C3 Queens University - Canada; Concordia University - Canada; Universite de
   Montreal; Polytechnique Montreal
RP Li, H (corresponding author), Queens Univ, Sch Comp, Software Anal & Intelligence Lab SAIL, Kingston, ON K7L 3N6, Canada.
EM hengli@cs.queensu.ca; shang@encs.concordia.ca; bram.adams@polymtl.ca;
   msayagh@cs.queensu.ca; ahmed@cs.queensu.ca
RI KHALIFA, AHMED khalifa/HKF-2246-2023
OI KHALIFA, AHMED khalifa/0000-0002-2918-7572; Li,
   Heng/0000-0001-5441-6763; Adams, Bram/0000-0001-7213-4006; Sayagh,
   Mohammed/0000-0002-2724-0034
CR Artstein R, 2008, COMPUT LINGUIST, V34, P555, DOI 10.1162/coli.07-034-R2
   Barik T, 2016, 2016 IEEE/ACM 38TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING COMPANION (ICSE-C), P92, DOI 10.1145/2889160.2889231
   Chen BY, 2017, PROC INT CONF SOFTW, P71, DOI 10.1109/ICSE.2017.15
   Chen BY, 2017, EMPIR SOFTW ENG, V22, P330, DOI 10.1007/s10664-016-9429-5
   Cito J, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P393, DOI 10.1145/2786805.2786826
   Ding Rui, 2015, P 2015 USENIX TECHN, P139
   Fu Q, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE COMPANION 2014), P24, DOI 10.1145/2591062.2591175
   Fu QA, 2009, IEEE DATA MINING, P149, DOI 10.1109/ICDM.2009.60
   Hassani M, 2018, EMPIR SOFTW ENG, V23, P3248, DOI 10.1007/s10664-018-9603-z
   Hayes AF, 2007, COMMUN METHODS MEAS, V1, P77, DOI 10.1080/19312450709336664
   He PJ, 2018, IEEE INT CONF AUTOM, P178, DOI 10.1145/3238147.3238193
   Jia ZY, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P61, DOI 10.1109/SANER.2018.8330197
   Jiang ZM, 2008, PROC IEEE INT CONF S, P307, DOI 10.1109/ICSM.2008.4658079
   Kabinna S, 2018, EMPIR SOFTW ENG, V23, P290, DOI 10.1007/s10664-017-9518-0
   Kabinna S, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P154, DOI [10.1145/2901739.2901769, 10.1109/MSR.2016.025]
   Kavulya Soila, 2010, Proceedings 2010 10th IEEE/ACM International Conference on Cluster, Cloud and Grid Computing (CCGrid), P94, DOI 10.1109/CCGRID.2010.112
   Krippendorff K, 2011, COMPUTING KRIPPENDOR
   Krippendorff K., 2019, Content Analysis: an Introduction to its methodology, V4th, P277, DOI [10.4135/9781071878781, DOI 10.4135/9781071878781]
   Li H, 2018, 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING - SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2018), P1, DOI 10.1145/3183519.3183544
   Li H, 2018, EMPIR SOFTW ENG, V23, P2655, DOI 10.1007/s10664-018-9595-8
   Li H, 2017, EMPIR SOFTW ENG, V22, P1684, DOI 10.1007/s10664-016-9456-2
   Li H, 2017, EMPIR SOFTW ENG, V22, P1831, DOI 10.1007/s10664-016-9467-z
   LIU Z, IN PRESS
   Lo D, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P415, DOI 10.1145/2786805.2786809
   Newman, 2015, LOGGING EXCEPTIONS J
   Nurmuliani N, 2004, 12TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, PROCEEDINGS, P240
   Oliner A, 2012, COMMUN ACM, V55, P63, DOI 10.1145/2076450.2076466
   Pecchia A, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P169, DOI 10.1109/ICSE.2015.145
   Rugg G, 2005, EXPERT SYST, V22, P94, DOI 10.1111/j.1468-0394.2005.00300.x
   Sayagh M, 2017, PROC INT CONF SOFTW, P255, DOI 10.1109/ICSE.2017.31
   Shang WY, 2014, J SOFTW-EVOL PROC, V26, P3, DOI 10.1002/smr.1579
   Spencer D., 2009, CARD SORTING DESIGNI
   StackOverflowCommunity, 2011, WHY IS LOG THROW CON
   Syer MD, 2013, PROC IEEE INT CONF S, P110, DOI 10.1109/ICSM.2013.22
   Xu W, 2009, SOSP'09: PROCEEDINGS OF THE TWENTY-SECOND ACM SIGOPS SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES, P117
   Yao KD, 2018, PROCEEDINGS OF THE 2018 ACM/SPEC INTERNATIONAL CONFERENCE ON PERFORMANCE ENGINEERING (ICPE '18), P127, DOI 10.1145/3184407.3184416
   Yuan D., 2012, P 2012 USENIX S OP S, P293
   Yuan D, 2012, PROC INT CONF SOFTW, P102, DOI 10.1109/ICSE.2012.6227202
   Yuan D, 2011, ACM SIGPLAN NOTICES, V46, P3, DOI 10.1145/1961296.1950369
   Yuan D, 2010, ACM SIGPLAN NOTICES, V45, P143, DOI 10.1145/1735971.1736038
   Zeng L, 2015, IEEE ICC, P7168, DOI 10.1109/ICC.2015.7249470
   Zhao X, 2017, PROCEEDINGS OF THE TWENTY-SIXTH ACM SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES (SOSP '17), P565, DOI 10.1145/3132747.3132778
   Zhu JM, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P415, DOI 10.1109/ICSE.2015.60
   Zimmermann T, 2016, PERSPECTIVES ON DATA SCIENCE FOR SOFTWARE ENGINEERING, P137
NR 44
TC 39
Z9 41
U1 0
U2 10
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD DEC 1
PY 2021
VL 47
IS 12
BP 2858
EP 2873
DI 10.1109/TSE.2020.2970422
PG 16
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA XM6HB
UT WOS:000728924600013
DA 2024-07-18
ER

PT J
AU Morales, R
   Saborido, R
   Guéhéneuc, YG
AF Morales, Rodrigo
   Saborido, Ruben
   Gueheneuc, Yann-Gael
TI <i>MoMIT</i>: Porting a JavaScript Interpreter on a Quarter Coin
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Optimization; Java; Internet of Things; Computer languages; Embedded
   devices; Evolutionary algorithms; Internet of Things; software
   miniaturization; multiobjective optimization; embedded devices;
   JavaScript; evolutionary algorithms
ID MULTIOBJECTIVE EVOLUTIONARY ALGORITHMS
AB The Internet of Things (IoT) is a network of physical, connected devices providing services through private networks and the Internet. The devices connect through the Internet to Web servers and other devices. One of the popular programming languages for communicating Web pages and Web apps is JavaScript (JS). Hence, the devices would benefit from JS apps. However, porting JS apps to the many IoT devices, e.g., System-on-a-Chip (SoCs) devices (e.g., Arduino Uno), is challenging because of their limited memory, storage, and CPU capabilities. Also, some devices may lack hardware/software capabilities for running JS apps "as is". Thus, we propose MoMIT, a multiobjective optimization approach to miniaturize JS apps to run on IoT devices. We implement MoMIT using three different search algorithms. We miniaturize a JS interpreter and measure the characteristics of 23 apps before/after applying MoMIT. We find reductions of code size, memory usage, and CPU time of 31, 56, and 36 percent, respectively (medians). We show that MoMIT allows apps to run on up to two additional devices in comparison to the original JS interpreter.
C1 [Morales, Rodrigo; Saborido, Ruben; Gueheneuc, Yann-Gael] Concordia Univ Montreal, Montreal, PQ H3G 1M8, Canada.
RP Morales, R (corresponding author), Concordia Univ Montreal, Montreal, PQ H3G 1M8, Canada.
EM rodrigomorales2@acm.org; ruben.saborido-infantes@concordia.ca;
   yann-gael.gueheneuc@concordia.ca
RI Alvarado, Rodrigo Morales/AAR-2780-2021
OI Alvarado, Rodrigo Morales/0000-0002-1350-0560; Gueheneuc,
   Yann-Gael/0000-0002-4361-2563; Saborido, Ruben/0000-0002-0944-5941
FU Natural Sciences and Engineering Research Council of Canada (NSERC)
FX This work has been supported by the Natural Sciences and Engineering
   Research Council of Canada (NSERC). Special thanks to Sami Vaarala for
   his valuable help with Duktape.
CR Ali N., 2011, 2011 IEEE 27th International Conference on Software Maintenance, P153, DOI 10.1109/ICSM.2011.6080782
   [Anonymous], 2018, ASTM Designation F1521-12, DOI DOI 10.1520/C0033_C0033M-18
   Ashouri A.H., 2016, RES4ANT2016 COLOCATE, P23
   Bartolomei T.T., 2010, P 26 IEEE INT C SOFT, P1
   Benítez-Hidalgo A, 2019, SWARM EVOL COMPUT, V51, DOI 10.1016/j.swevo.2019.100598
   Bergstra J, 2012, J MACH LEARN RES, V13, P281
   Bonferroni C.E., 1936, Pubblicazioni del R Istituto Superiore di Scienze Economiche e Commericiali diFirenze, V8, P3
   Cai XY, 2017, IEEE T CYBERNETICS, V47, P2824, DOI 10.1109/TCYB.2016.2586191
   Chen JF, 2019, IEEE T SOFTWARE ENG, V45, P597, DOI 10.1109/TSE.2018.2790925
   Chung KM, 2003, NEURAL COMPUT, V15, P2643, DOI 10.1162/089976603322385108
   Coello C. A. C., 2007, EVOLUTIONARY ALGORIT
   de Souza Xavier TC, 2018, COMPUT INFORM, V37, P165, DOI 10.4149/cai_2018_1_165
   Deb K, 2002, IEEE T EVOLUT COMPUT, V6, P182, DOI 10.1109/4235.996017
   Deb K., 2010, MULTIOBJECTIVE OPTIM
   Di Penta M, 2005, J SYST SOFTWARE, V77, P225, DOI 10.1016/j.jss.2004.03.033
   Draper A. W., 2012, NUMERAL JS JAVASCRIP
   Ecma International, 2019, SUNSP JAV BENCHM 1 0
   Georgiou K., 2018, ABS180209845 CORR
   Gerber A., 2017, KEY CONCEPTS SKILLS
   Harman M, 2014, 18TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE (SPLC 2014), VOL 1, P5, DOI 10.1145/2648511.2648513
   Hassan AE, 2005, INFORM SOFTWARE TECH, V47, P521, DOI 10.1016/j.infsof.2004.10.002
   International Diabetes Federation, 2019, IDF Diabetes Atlas, Vninth
   Ishibuchi H, 2008, IEEE C EVOL COMPUTAT, P2419, DOI 10.1109/CEC.2008.4631121
   Li BD, 2015, ACM COMPUT SURV, V48, DOI 10.1145/2792984
   Li H, 2009, IEEE T EVOLUT COMPUT, V13, P284, DOI 10.1109/TEVC.2008.925798
   Luque G, 2018, STUD COMPUT INTELL, V798, P71, DOI 10.1007/978-3-319-99626-4_7
   Ma HD, 2016, IEEE INTERNET THINGS, V3, P441, DOI 10.1109/JIOT.2015.2493082
   Morales R., 2019, MOMIT REPLICATION PA
   Mossienko M, 2003, SEVENTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P40, DOI 10.1109/CSMR.2003.1192409
   Plotnikov D, 2013, PROCEDIA COMPUT SCI, V18, P1312, DOI 10.1016/j.procs.2013.05.298
   Qi YT, 2014, EVOL COMPUT, V22, P231, DOI 10.1162/EVCO_a_00109
   Sayyad AS, 2013, IEEE INT CONF AUTOM, P465, DOI 10.1109/ASE.2013.6693104
   Siegmund N, 2012, PROC INT CONF SOFTW, P167, DOI 10.1109/ICSE.2012.6227196
   Yin R. K., 2009, CASE STUDY RES DESIG, V4th ed.
   Zhou AM, 2011, SWARM EVOL COMPUT, V1, P32, DOI 10.1016/j.swevo.2011.03.001
   Zitzler E, 1999, IEEE T EVOLUT COMPUT, V3, P257, DOI 10.1109/4235.797969
NR 36
TC 1
Z9 1
U1 0
U2 6
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD DEC 1
PY 2021
VL 47
IS 12
BP 2771
EP 2785
DI 10.1109/TSE.2020.2968061
PG 15
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA XM6HB
UT WOS:000728924600008
DA 2024-07-18
ER

PT J
AU Zhou, Y
   Su, YQ
   Chen, TL
   Huang, ZQ
   Gall, H
   Panichella, S
AF Zhou, Yu
   Su, Yanqi
   Chen, Taolue
   Huang, Zhiqiu
   Gall, Harald
   Panichella, Sebastiano
TI User Review-Based Change File Localization for Mobile Applications
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Review
DE Software testing; Mobile applications; User experiences; Information
   retrieval; Maintenance engineering; Reliability; Software engineering;
   User review; mobile apps; information retrieval; change file
   localization
ID CODE
AB In the current mobile app development, novel and emerging DevOps practices (e.g., Continuous Delivery, Integration, and user feedback analysis) and tools are becoming more widespread. For instance, the integration of user feedback (provided in the form of user reviews) in the software release cycle represents a valuable asset for the maintenance and evolution of mobile apps. To fully make use of these assets, it is highly desirable for developers to establish semantic links between the user reviews and the software artefacts to be changed (e.g., source code and documentation), and thus to localize the potential files to change for addressing the user feedback. In this paper, we propose RISING (Review Integration via claSsification, clusterIng, and linkiNG), an automated approach to support the continuous integration of user feedback via classification, clustering, and linking of user reviews. RISING leverages domain-specific constraint information and semi-supervised learning to group user reviews into multiple fine-grained clusters concerning similar users' requests. Then, by combining the textual information from both commit messages and source code, it automatically localizes potential change files to accommodate the users' requests. Our empirical studies demonstrate that the proposed approach outperforms the state-of-the-art baseline work in terms of clustering and localization accuracy, and thus produces more reliable results.
C1 [Zhou, Yu; Su, Yanqi] Nanjing Univ Aeronaut & Astronaut, Coll Comp Sci & Technol, Nanjing 210016, Peoples R China.
   [Zhou, Yu; Chen, Taolue] Nanjing Univ, State Key Lab Novel Software Technol, Nanjing 210008, Peoples R China.
   [Chen, Taolue] Univ London, Dept Comp Sci & Informat Sys tems, London WC1E 7HX, England.
   [Gall, Harald] Univ Zurich, Dept Informat, CH-8006 Zurich, Switzerland.
   [Panichella, Sebastiano] Zurich Univ Appl Sci, CH-8400 Winterthur, Switzerland.
C3 Nanjing University of Aeronautics & Astronautics; Nanjing University;
   University of London; University of Zurich; Zurich University of Applied
   Sciences
RP Zhou, Y (corresponding author), Nanjing Univ Aeronaut & Astronaut, Coll Comp Sci & Technol, Nanjing 210016, Peoples R China.; Zhou, Y (corresponding author), Nanjing Univ, State Key Lab Novel Software Technol, Nanjing 210008, Peoples R China.
EM zhouyu@nuaa.edu.cn; suyanqi@nuaa.edu.cn; taolue@dcs.bbk.ac.uk;
   zqhuang@nuaa.edu.cn; gall@ifi.uzh.ch; panc@zhaw.ch
OI Panichella, Sebastiano/0000-0003-4120-626X; Chen,
   Taolue/0000-0002-5993-1665; Zhou, Yu/0000-0002-3723-7584; Gall,
   Harald/0000-0002-3874-5628
FU National Key R&D Program of China [2018YFB1003902]; National Natural
   Science Fundation of China (NSFC) [61972197]; Collaborative Innovation
   Center of Novel Software Technology and Industrialization; Qing Lan
   Project; Birkbeck BEI School Project (ARTEFACT); NSFC [61872340];
   Guangdong Science and Technology Department grant [2018B010107004];
   State Key Laboratory of Novel Software Technology, Nanjing University
   [KFKT2018A16]
FX This work was partially supported by the National Key R&D Program of
   China (No. 2018YFB1003902), the National Natural Science Fundation of
   China (NSFC, No. 61972197), the Collaborative Innovation Center of Novel
   Software Technology and Industrialization, and the Qing Lan Project. T.
   Chen is partially supported by Birkbeck BEI School Project (ARTEFACT),
   NSFC grant (No. 61872340), and Guangdong Science and Technology
   Department grant (No. 2018B010107004), and an oversea grant from the
   State Key Laboratory of Novel Software Technology, Nanjing University
   (KFKT2018A16).
CR Al-Subaihin AA, 2021, IEEE T SOFTWARE ENG, V47, P300, DOI 10.1109/TSE.2019.2891715
   [Anonymous], 2000, Icml, DOI DOI 10.1007/3-540-44491-2_3
   [Anonymous], 2014, DIMENSIONALITY REDUC
   [Anonymous], 2001, P 18 INT C MACH LEAR
   [Anonymous], 2008, P 17 ACM C INFORM KN
   Antoniol G, 2002, IEEE T SOFTWARE ENG, V28, P970, DOI 10.1109/TSE.2002.1041053
   Bacchelli A., 2010, Proceedings of the 32nd International Conference on Software Engineering, P375
   Baeza-Yates Ricardo., MODERN INFORM RETRIE
   Basu S, 2009, CH CRC DATA MIN KNOW, P1
   Bavota G, 2015, IEEE T SOFTWARE ENG, V41, P384, DOI 10.1109/TSE.2014.2367027
   Beck K., 2001, The Agile Alliance, 2009December, P2006
   Bilenko M., 2004, P INT C MACH LEARN, P11
   Boxall A, 2016, THERE ARE 12 MILLION
   Catolino G, 2018, 2018 IEEE/ACM 5TH INTERNATIONAL CONFERENCE ON MOBILE SOFTWARE ENGINEERING AND SYSTEMS (MOBILESOFT), P43, DOI 10.1145/3197231.3198447
   Chen N, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P767, DOI 10.1145/2568225.2568263
   Ciurumelea A, 2018, PROC IEEE ACM INT C, P317, DOI 10.1145/3183440.3194988
   Ciurumelea A, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P91, DOI 10.1109/SANER.2017.7884612
   Corral L, 2015, 2ND ACM INTERNATIONAL CONFERENCE ON MOBILE SOFTWARE ENGINEERING AND SYSTEMS MOBILESOFT 2015, P22, DOI 10.1109/MobileSoft.2015.10
   DAVIES DL, 1979, IEEE T PATTERN ANAL, V1, P224, DOI 10.1109/TPAMI.1979.4766909
   De Lucia A., 2012, SOFTWARE SYSTEMS TRA, P71, DOI [10.1007/978-1-4471- 2239-5_4, DOI 10.1007/978-1-4471-2239-5_4]
   Dehghani M, 2016, ASSESSMENT ADOPTION
   Di Sorbo A, 2017, PROC IEEE ACM INT C, P55, DOI 10.1109/ICSE-C.2017.5
   Di Sorbo A, 2016, 2016 IEEE/ACM 38TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING COMPANION (ICSE-C), P641, DOI 10.1145/2889160.2889170
   Di Sorbo A, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P499, DOI 10.1145/2950290.2950299
   Di Sorbo A, 2015, IEEE INT CONF AUTOM, P12, DOI 10.1109/ASE.2015.12
   Ding C., 2004, P 21 INT C MACH LEAR, P29, DOI DOI 10.1145/1015330.1015408
   Dit B, 2013, J SOFTW-EVOL PROC, V25, P53, DOI 10.1002/smr.567
   Duvall Paul M., 2007, Continuous integration: improving software quality and reducing risk
   Grano G, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P72, DOI 10.1109/SANER.2018.8330198
   Gu XD, 2015, IEEE INT CONF AUTOM, P760, DOI 10.1109/ASE.2015.57
   Hamerly G, 2004, ADV NEUR IN, V16, P281
   Harman M., 2012, 2012 9th IEEE Working Conference on Mining Software Repositories (MSR 2012), P108, DOI 10.1109/MSR.2012.6224306
   Hu HY, 2019, EMPIR SOFTW ENG, V24, P7, DOI 10.1007/s10664-018-9617-6
   Humble Jez, 2010, Continuous Delivery: Reliable Software Releases through Build, Test, and Deployment Automation
   Islam MR, 2017, IEEE WORK CONF MIN S, P467, DOI 10.1109/MSR.2017.30
   Jaccard P., 1901, B SOCIT VAUDOISE SCI, V37, P547, DOI [10.5169/seals-266440, DOI 10.5169/SEALS-266440]
   Knight Kevin., 2009, Bayesian Inference with Tears
   Laukkarinen T, 2017, 2017 IEEE/ACM 39TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: NEW IDEAS AND EMERGING TECHNOLOGIES RESULTS TRACK (ICSE-NIER), P15, DOI 10.1109/ICSE-NIER.2017.20
   Li XY, 2018, INT CON DISTR COMP S, P1, DOI 10.1109/ICDCS.2018.00011
   Linares-Vasquez Mario, 2013, P 2013 9 JOINT M FDN, P477, DOI DOI 10.1145/2491411.2491428
   Luiz W, 2018, WEB CONFERENCE 2018: PROCEEDINGS OF THE WORLD WIDE WEB CONFERENCE (WWW2018), P1909, DOI 10.1145/3178876.3186168
   Machiry A., 2013, P 2013 9 JOINT M FDN, P224
   Martin W, 2017, IEEE T SOFTWARE ENG, V43, P817, DOI 10.1109/TSE.2016.2630689
   Mcilroy S, 2017, COMMUN ACM, V60, P62, DOI 10.1145/3141771
   Nagappan M, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 5, P21, DOI 10.1109/SANER.2016.88
   Nayebi M, 2017, INT SYMP EMP SOFTWAR, P324, DOI 10.1109/ESEM.2017.46
   Nayebi M, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P552, DOI 10.1109/SANER.2016.116
   Noei E, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P283, DOI 10.1145/3236024.3236044
   Palomba F, 2017, PROC INT CONF SOFTW, P106, DOI 10.1109/ICSE.2017.18
   Palomba F, 2015, PROC IEEE INT CONF S, P291, DOI 10.1109/ICSM.2015.7332475
   Panichella A, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P522, DOI 10.1109/ICSE.2013.6606598
   Panichella Sebastiano, 2012, 2012 IEEE 20th International Conference on Program Comprehension, P63
   Panichella S., 2017, P 2 ACM SIGSOFT INT, P8
   Panichella S, 2018, 2018 IEEE 2ND INTERNATIONAL WORKSHOP ON VALIDATION, ANALYSIS AND EVOLUTION OF SOFTWARE TESTS (VST), P1, DOI 10.1109/VST.2018.8327148
   Panichella S, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P1023, DOI 10.1145/2950290.2983938
   Panichella S, 2015, PROC IEEE INT CONF S, P281, DOI 10.1109/ICSM.2015.7332474
   Pelloni L, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P522, DOI 10.1109/SANER.2018.8330252
   Vu PM, 2015, IEEE INT CONF AUTOM, P749, DOI 10.1109/ASE.2015.85
   Rigor Christopher, 2018, ROLE DEVOPS WILL CHA
   Saha RK, 2013, IEEE INT CONF AUTOM, P345, DOI 10.1109/ASE.2013.6693093
   Scalabrino S, 2019, IEEE T SOFTWARE ENG, V45, P68, DOI 10.1109/TSE.2017.2759112
   Statistica, 2020, NUMB APPS AV LEAD AP
   Storey Margaret-Anne, 2012, Crowd Documentation: Exploring the Coverage and the Dynamics of API Discussions on Stack Overflow, V11
   Stroud Robert, 2017, DEVOPS UNICORNS MAIN
   Taba SES, 2014, LECT NOTES COMPUT SC, V8541, P370, DOI 10.1007/978-3-319-08245-5_22
   Tantithamthavorn C, 2013, 2013 IEEE INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING WORKSHOPS (ISSREW), P108, DOI 10.1109/ISSREW.2013.6688888
   Tantithamthavorn C, 2013, 2013 14TH ACIS INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, ARTIFICIAL INTELLIGENCE, NETWORKING AND PARALLEL/DISTRIBUTED COMPUTING (SNPD 2013), P543, DOI 10.1109/SNPD.2013.92
   Teh Y, 2005, Adv. Neural Inf. Process. Syst., V17
   Tian Y, 2015, PROC IEEE INT CONF S, P301, DOI 10.1109/ICSM.2015.7332476
   Tibshirani R, 2001, J ROY STAT SOC B, V63, P411, DOI 10.1111/1467-9868.00293
   Tu ZP, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P269, DOI 10.1145/2635868.2635875
   Vassallo C, 2017, PROC IEEE INT CONF S, P183, DOI 10.1109/ICSME.2017.67
   Vassallo Carmine, 2014, Proceedings of the 22nd International Conference on Program Comprehension, P106
   Villarroel L, 2016, PROC INT CONF SOFTW, P14, DOI 10.1145/2884781.2884818
   Ziftci C, 2017, 2017 IEEE/ACM 39TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2017), P113, DOI 10.1109/ICSE-SEIP.2017.13
NR 75
TC 11
Z9 11
U1 1
U2 5
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD DEC 1
PY 2021
VL 47
IS 12
BP 2755
EP 2770
DI 10.1109/TSE.2020.2967383
PG 16
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA XM6HB
UT WOS:000728924600007
OA Green Accepted, Green Submitted
DA 2024-07-18
ER

PT J
AU Agrawal, A
   Fu, W
   Chen, D
   Shen, XP
   Menzies, T
AF Agrawal, Amritanshu
   Fu, Wei
   Chen, Di
   Shen, Xipeng
   Menzies, Tim
TI How to "DODGE" Complex Software Analytics
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Tuning; Text mining; Software; Task analysis; Optimization; Software
   engineering; Tools; Software analytics; hyperparameter optimization;
   defect prediction; text mining
ID STATIC CODE ATTRIBUTES; ALGORITHM; SEARCH; OPTIMIZATION; SELECTION
AB Machine learning techniques applied to software engineering tasks can be improved by hyperparameter optimization, i.e., automatic tools that find good settings for a learner's control parameters. We show that such hyperparameter optimization can be unnecessarily slow, particularly when the optimizers waste time exploring "redundant tunings", i.e., pairs of tunings which lead to indistinguishable results. By ignoring redundant tunings, DODGE(epsilon), a tuning tool, runs orders of magnitude faster, while also generating learners with more accurate predictions than seen in prior state-of-the-art approaches.
C1 [Agrawal, Amritanshu] Wayfair, Boston, MA 02116 USA.
   [Fu, Wei] Landing AI, Palo Alto, CA 94306 USA.
   [Chen, Di] Facebook, Menlo Pk, CA 94025 USA.
   [Shen, Xipeng; Menzies, Tim] North Carolina State Univ, Raleigh, NC 27695 USA.
C3 Facebook Inc; North Carolina State University
RP Agrawal, A (corresponding author), Wayfair, Boston, MA 02116 USA.
EM aagrawa8@ncsu.edu; wfu@ncsu.edu; dchen20@ncsu.edu; xshen5@ncsu.edu;
   timm@ieee.org
RI Menzies, Tim/X-7680-2019; Agrawal, Amritanshu/R-7093-2019; Fu,
   Wei/AAF-7120-2019
OI Menzies, Tim/0000-0002-5040-3196; Agrawal,
   Amritanshu/0000-0002-1220-8533; Shen, Xipeng/0000-0003-3599-8010
FU NSF [1703487]; Direct For Computer & Info Scie & Enginr; Division of
   Computing and Communication Foundations [1703487] Funding Source:
   National Science Foundation
FX This work was partially funded by an NSF Grant #1703487.
CR Agrawal A., 2019, THESIS N CAROLINA ST
   Agrawal A., 2018, ABS181201550 CORR
   Agrawal A, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1050, DOI 10.1145/3180155.3180197
   Agrawal A, 2018, INFORM SOFTWARE TECH, V98, P74, DOI 10.1016/j.infsof.2018.02.005
   Aleti A, 2017, AUTOMAT SOFTW ENG, V24, P603, DOI 10.1007/s10515-016-0197-7
   [Anonymous], 2006, GENETIC ALGORITHMS
   [Anonymous], 2012, ART SOFTWARE TESTING, DOI DOI 10.1002/9781119202486
   Arcuri A, 2013, EMPIR SOFTW ENG, V18, P594, DOI 10.1007/s10664-013-9249-9
   Arcuri A, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1, DOI 10.1145/1985793.1985795
   Barr ET, 2015, IEEE T SOFTWARE ENG, V41, P507, DOI 10.1109/TSE.2014.2372785
   Bergstra J, 2012, J MACH LEARN RES, V13, P281
   Biedenkapp A., 2018, ARTIF INTELL, V1, P35
   Binkley D, 2018, EMPIR SOFTW ENG, V23, P2398, DOI 10.1007/s10664-017-9566-5
   Bird S., 2004, P ACL INTERACTIVE PO, P214
   Blei DM, 2003, J MACH LEARN RES, V3, P993, DOI 10.1162/jmlr.2003.3.4-5.993
   Chawla NV, 2002, J ARTIF INTELL RES, V16, P321, DOI 10.1613/jair.953
   Chen D, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P456, DOI 10.1145/3236024.3236050
   Cohen J., 1988, STAT POWER ANAL BEHA
   Deb K, 2002, IEEE T EVOLUT COMPUT, V6, P182, DOI 10.1109/4235.996017
   Efron B., 1993, INTRO BOOTSTRAP, VVolume 914, DOI DOI 10.1007/978-1-4899-4541-9
   Feldman R., 2006, TEXT MINING HDB
   Fisher Danyel, 2012, Interactions, V19, P50, DOI 10.1145/2168931.2168943
   Franceschi L, 2017, PR MACH LEARN RES, V70
   Fu W., 2016, ABS160902613 CORR
   Fu W, 2016, INFORM SOFTWARE TECH, V76, P135, DOI 10.1016/j.infsof.2016.04.017
   Ghotra B, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P789, DOI 10.1109/ICSE.2015.91
   Hamill M, 2009, IEEE T SOFTWARE ENG, V35, P484, DOI 10.1109/TSE.2009.3
   Jorgensen M, 2004, IEEE T SOFTWARE ENG, V30, P209, DOI 10.1109/TSE.2004.1274041
   Kamei Y, 2013, IEEE T SOFTWARE ENG, V39, P757, DOI 10.1109/TSE.2012.70
   KIRKPATRICK S, 1983, SCIENCE, V220, P671, DOI 10.1126/science.220.4598.671
   Koru AG, 2009, IEEE T SOFTWARE ENG, V35, P293, DOI 10.1109/TSE.2008.90
   Liu Y, 2010, IEEE T SOFTWARE ENG, V36, P852, DOI 10.1109/TSE.2010.51
   Majumder S, 2018, IEEE WORK CONF MIN S, P554, DOI 10.1145/3196398.3196424
   Martignon L, 2008, J MATH PSYCHOL, V52, P352, DOI 10.1016/j.jmp.2008.04.003
   Menzies T., 2008, IMPROVING 4 5 TECHNI
   Menzies T., 2018, ARXIV PREPRINT ARXIV
   Menzies T., 2005, ACM SIGSOFT SOFTW EN, V17, P14
   Menzies T, 2007, IEEE T SOFTWARE ENG, V33, P637, DOI 10.1109/TSE.2007.70721
   Menzies T, 2007, IEEE T SOFTWARE ENG, V33, P2, DOI 10.1109/TSE.2007.256941
   Menzies T, 2008, PROC IEEE INT CONF S, P346, DOI 10.1109/ICSM.2008.4658083
   Misirli A. T., 2010, P 22 IAAI C
   Monden A, 2013, IEEE T SOFTWARE ENG, V39, P1345, DOI 10.1109/TSE.2013.21
   Nadkarni A., 2014, IDC IND DEV MODELS
   Nair V, 2020, IEEE T SOFTWARE ENG, V46, P794, DOI 10.1109/TSE.2018.2870895
   Oliveira ALI, 2010, INFORM SOFTWARE TECH, V52, P1155, DOI 10.1016/j.infsof.2010.05.009
   Orso A., 2014, P FUTURE SOFTWARE EN, P117, DOI [10.1145/2593882.2593885, DOI 10.1145/2593882.2593885]
   Ostrand TJ., 2004, Proceedings of the 2004 ACM SIGSOFT International Symposium on Software Testing and Analysis, ISSTA '04, V29, P86, DOI [DOI 10.1145/1013886.1007524, 10.1145/1013886.1007524]
   Panichella A, 2015, 2015 IEEE/ACM 8TH INTERNATIONAL SYMPOSIUM ON SOFTWARE AND SYSTEMS TRACEABILITY, P15, DOI 10.1109/SST.2015.10
   Panichella A, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P522, DOI 10.1109/ICSE.2013.6606598
   Pedregosa F, 2011, J MACH LEARN RES, V12, P2825
   Petke J, 2018, INFORM SOFTWARE TECH, V104, P194, DOI 10.1016/j.infsof.2018.10.002
   Phillips ND, 2017, JUDGM DECIS MAK, V12, P344
   PORTER MF, 1980, PROGRAM-AUTOM LIBR, V14, P130, DOI 10.1108/eb046814
   Rahman F, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P424, DOI 10.1145/2568225.2568269
   Sarro F., 2012, Proceedings of the 27th Annual ACM Symposium on Applied Computing, SAC '12, P1215, DOI DOI 10.1145/2245276.2231967
   Storn R, 1997, J GLOBAL OPTIM, V11, P341, DOI 10.1023/A:1008202821328
   Tantithamthavorn C, 2019, IEEE T SOFTWARE ENG, V45, P683, DOI 10.1109/TSE.2018.2794977
   Tantithamthavorn C, 2016, PROC INT CONF SOFTW, P321, DOI 10.1145/2884781.2884857
   Treude C., 2018, ARXIV 180404749, P157
   Tu H, 2018, PROCEEDINGS OF THE 4TH ACM SIGSOFT INTERNATIONAL WORKSHOP ON SOFTWARE ANALYTICS (SWAN'18), P19, DOI 10.1145/3278142.3278145
   Vesterstrom J, 2004, IEEE C EVOL COMPUTAT, P1980
   Wan Zhiyuan, 2018, IEEE Transactions on Software Engineering
   Wang Tiantian, 2013, P 2013 9 JOINT M FDN, P455
   WHITE C., 2005, Consolidating, accessing, and analyzing unstructured data
   Xu BW, 2016, IEEE INT CONF AUTOM, P51, DOI 10.1145/2970276.2970357
   Yang YB, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P157, DOI 10.1145/2950290.2950353
   Yoo S, 2012, SOFTW TEST VERIF REL, V22, P67, DOI [10.1002/stv.430, 10.1002/stvr.430]
   Zhang QF, 2007, IEEE T EVOLUT COMPUT, V11, P712, DOI 10.1109/TEVC.2007.892759
   Zhong S, 2004, IEEE INTELL SYST, V19, P20, DOI 10.1109/MIS.2004.1274907
   Zitzler E, 2004, LECT NOTES COMPUT SC, V3242, P832
NR 70
TC 15
Z9 15
U1 0
U2 4
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD OCT 1
PY 2021
VL 47
IS 10
BP 2182
EP 2194
DI 10.1109/TSE.2019.2945020
PG 13
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA WH1IX
UT WOS:000707441900008
OA Green Submitted, hybrid
DA 2024-07-18
ER

PT J
AU Pan, WF
   Ming, H
   Chang, CK
   Yang, ZJ
   Kim, DK
AF Pan, Weifeng
   Ming, Hua
   Chang, Carl K.
   Yang, Zijiang
   Kim, Dae-Kyoo
TI ElementRank: Ranking Java Software Classes and Packages using a
   Multilayer Complex Network-Based Approach
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Software systems; Nonhomogeneous media; Complex networks; Maintenance
   engineering; Measurement; Computer science; Important software elements;
   weighted PageRank algorithm; complex network; software comprehension;
   static analysis
ID COUPLING MEASUREMENT; KEY CLASSES; METRICS; QUALITY; DESIGN;
   IDENTIFICATION; STABILITY; COHESION; SUITE
AB Software comprehension is an important part of software maintenance. To understand a piece of large and complex software, the first problem to be solved is where to start the understanding process. Choosing to start the comprehension process from the important software elements has proven to be a practical way. Research on complex networks opens new opportunities for identifying important elements, and many approaches have been proposed. However, the software networks that existing approaches use neglect the multilayer nature of software systems. That is, nodes in the network can have different types of relationships at the same time, and each type of relationship forms a specific layer. Worse still, they mainly focus on identifying important classes, and little work has been done on quantifying package importance. In this paper, we propose an ElementRank approach to provide a ranked list of classes (or packages) for maintainers to start the comprehension process. The top-ranked classes (or packages) can be seen as the starting points for the software comprehension process at the class (or package) level. First, we introduce two kinds of multilayer software networks to describe the topological structure of software at the class level and package level, respectively. Second, we propose a weighted PageRank algorithm to calculate the weighted PageRank value of classes (or packages) in each layer of the corresponding multilayer software network. Then, we use AHP (Analytic Hierarchy Process) to weigh each layer in the corresponding multilayer software network, and further aggregate the weighted PageRank value to obtain the global weighted PageRank value for each class (or package). Finally, all the classes (or packages) are ranked according to their global weighted PageRank values in a descending order, and the top-ranked classes (or packages) can serve as the starting points for the software comprehension process at the class (or package) level. ElementRank is validated theoretically using the widely accepted Weyuker's criteria. Theoretical results show that the global weighted PageRank value for classes (or packages) satisfies most of Weyuker's properties. Furthermore, ElementRank is evaluated empirically using a set of twelve open source software systems. Through a set of experiments, we show the rank correlation between the results of ElementRank and that of the approaches in the related work, and the benefits of ElementRank are also illustrated in comparison with other approaches in the related work. Empirical results also show that ElementRank can be applied to large software systems.
C1 [Pan, Weifeng] Zhejiang Gongshang Univ, Sch Comp Sci & Informat Engn, Hangzhou 310018, Peoples R China.
   [Ming, Hua; Kim, Dae-Kyoo] Oakland Univ, Sch Engn & Comp Sci, Rochester, MI 48309 USA.
   [Chang, Carl K.] Iowa State Univ, Dept Comp Sci, Ames, IA 50011 USA.
   [Yang, Zijiang] Western Michigan Univ, Dept Comp Sci, Kalamazoo, MI 49008 USA.
C3 Zhejiang Gongshang University; Oakland University; Iowa State
   University; Western Michigan University
RP Pan, WF (corresponding author), Zhejiang Gongshang Univ, Sch Comp Sci & Informat Engn, Hangzhou 310018, Peoples R China.; Ming, H (corresponding author), Oakland Univ, Sch Engn & Comp Sci, Rochester, MI 48309 USA.
EM wfpan@zjgsu.edu.cn; ming@oakland.edu; chang@iastate.edu;
   zijiang.yang@wmich.edu; kim2@oakland.edu
RI Pan, Weifeng/A-8649-2012; Kim, Daekyoo/HGE-1133-2022
OI Pan, Weifeng/0000-0001-6355-1385; Kim, Daekyoo/0000-0002-6123-2900;
   Chang, Carl K./0000-0001-6734-7082
FU National Key R&D Program of China [2017YFB1400602]; National Natural
   Science Foundation of China [61202048, 61572371, 61832014]; Commonweal
   Project of Science and Technology Department of Zhejiang Province
   [LGF19F020007]
FX The authors gratefully acknowledge all the experts who participated in
   our study and all the reviewers for their positive and valuable comments
   and suggestions regarding our manuscript. This work was supported by the
   National Key R&D Program of China (Grant No. 2017YFB1400602), the
   National Natural Science Foundation of China (Grant Nos. 61202048,
   61572371 and 61832014), and the Commonweal Project of Science and
   Technology Department of Zhejiang Province (Grant No. LGF19F020007).
CR Abreu F. B. E., 2001, LOBJET, V7, P1
   Abreu FB, 2001, FIFTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P47, DOI 10.1109/CSMR.2001.914968
   Albert R, 2000, NATURE, V406, P378, DOI 10.1038/35019019
   Alvin C, 2017, LECT NOTES COMPUT SC, V10202, P173, DOI 10.1007/978-3-662-54494-5_10
   Amarjeet, 2017, INFORM SOFTWARE TECH, V82, P96, DOI 10.1016/j.infsof.2016.09.011
   Amarjeet, 2015, PROCEDIA COMPUT SCI, V54, P380, DOI 10.1016/j.procs.2015.06.044
   Aral S, 2012, SCIENCE, V337, P337, DOI 10.1126/science.1215842
   Basili VR, 1996, IEEE T SOFTWARE ENG, V22, P751, DOI 10.1109/32.544352
   Bauer F, 2012, EPL-EUROPHYS LETT, V99, DOI 10.1209/0295-5075/99/68007
   Blei DM, 2003, J MACH LEARN RES, V3, P993, DOI 10.1162/jmlr.2003.3.4-5.993
   Briand LC, 1999, IEEE T SOFTWARE ENG, V25, P91, DOI 10.1109/32.748920
   Brin S, 1998, COMPUT NETWORKS ISDN, V30, P107, DOI 10.1016/S0169-7552(98)00110-X
   Brito e Abreu F., 2000, Proceedings of the Fourth European Conference on Software Maintenance and Reengineering, P13, DOI 10.1109/CSMR.2000.827300
   Chan FTS, 2007, OMEGA-INT J MANAGE S, V35, P417, DOI 10.1016/j.omega.2005.08.004
   Chen DB, 2012, PHYSICA A, V391, P1777, DOI 10.1016/j.physa.2011.09.017
   CHERNIAVSKY JC, 1991, IEEE T SOFTWARE ENG, V17, P636, DOI 10.1109/32.87287
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   Chong CY, 2015, J SYST SOFTWARE, V110, P28, DOI 10.1016/j.jss.2015.08.014
   Concas G, 2007, IEEE T SOFTWARE ENG, V33, P687, DOI [10.1109/TSE.2007.1019, 10.1109/TSE.2007.1016]
   DEERWESTER S, 1990, J AM SOC INFORM SCI, V41, P391, DOI 10.1002/(SICI)1097-4571(199009)41:6<391::AID-ASI1>3.0.CO;2-9
   Devanbu P, 1996, PROC INT CONF SOFTW, P189, DOI 10.1109/ICSE.1996.493415
   Du YX, 2016, QUAL RELIAB ENG INT, V32, P737, DOI 10.1002/qre.1753
   Eder J., 1995, P 4 INT WORKSH OBJ O, P264
   Elish Mahmoud O., 2010, Proceedings of the 18th IEEE International Conference on Program Comprehension (ICPC 2010), P144, DOI 10.1109/ICPC.2010.43
   Gao B, 2016, CHAOS SOLITON FRACT, V93, P175, DOI 10.1016/j.chaos.2016.10.013
   García S, 2010, INFORM SCIENCES, V180, P2044, DOI 10.1016/j.ins.2009.12.010
   GUIMARAES T, 1983, COMMUN ACM, V26, P739, DOI 10.1145/358413.358421
   Gupta V, 2009, J COMPUT SCI TECH-CH, V24, P273, DOI 10.1007/s11390-009-9223-6
   HARRISON W, 1992, IEEE T SOFTWARE ENG, V18, P1025, DOI 10.1109/32.177371
   He HT, 2018, SECUR COMMUN NETW, DOI 10.1155/2018/1525186
   Hitz M., 1995, Software Engineering - ESEC '95. 5th European Software Engineering Conference. Proceedings, P124
   Hitz M., 1995, International Symposium on Applied Corporate Computing, P25
   Hofmann T., 2015, PROC 22 INT C RES DE, P1477
   Jenkins S, 2007, INFORM SCIENCES, V177, P2587, DOI 10.1016/j.ins.2007.01.021
   [姜淑娟 Jiang Shujuan], 2015, [电子学报, Acta Electronica Sinica], V43, P2062
   Kamran M., 2012, P INT C INF TECHN SO, P3
   Kang DZ, 2004, INT WKSHP FUT TR DIS, P222
   Kendall MG, 1938, BIOMETRIKA, V30, P81, DOI 10.2307/2332226
   Kitsak M, 2010, NAT PHYS, V6, P888, DOI [10.1038/NPHYS1746, 10.1038/nphys1746]
   Ko AJ, 2006, IEEE T SOFTWARE ENG, V32, P971, DOI 10.1109/TSE.2006.116
   Kumar S, 2012, PROC INT CONF SOFTW, P914, DOI 10.1109/ICSE.2012.6227128
   Lee J, 2019, INT J SOFTW ENG KNOW, V29, P971, DOI 10.1142/S0218194019500323
   Lo D, 2009, IEEE INT CONF AUTOM, P359, DOI 10.1109/ASE.2009.19
   Lü LY, 2011, PLOS ONE, V6, DOI 10.1371/journal.pone.0021202
   Luo H, 2014, P INT COMP SOFTW APP, P251, DOI 10.1109/COMPSAC.2014.34
   Ma YT, 2010, J COMPUT SCI TECH-CH, V25, P1184, DOI 10.1007/s11390-010-9398-x
   Marcus A, 2008, IEEE T SOFTWARE ENG, V34, P287, DOI 10.1109/TSE.2007.70768
   Martin R. C., 2002, AGILE SOFTWARE DEV P
   Meneely A, 2012, ACM T SOFTW ENG METH, V21, DOI 10.1145/2377656.2377661
   Meyer P, 2014, ADV COMPLEX SYST, V17, DOI 10.1142/S0219525915500046
   Myers CR, 2003, PHYS REV E, V68, DOI 10.1103/PhysRevE.68.046116
   Myers J. L., 2010, RES DESIGN STAT ANAL
   Narasimhan VL, 2007, INFORM SCIENCES, V177, P844, DOI 10.1016/j.ins.2006.07.010
   Pan WF, 2010, J COMPUT SCI TECH-CH, V25, P1202, DOI 10.1007/s11390-010-9399-9
   Pan WF, 2021, IEEE T SOFTWARE ENG, V47, P2272, DOI 10.1109/TSE.2019.2946357
   Pan WF, 2018, ADV COMPLEX SYST, V21, DOI 10.1142/S0219525918500042
   Pan WF, 2018, FUTURE GENER COMP SY, V81, P188, DOI 10.1016/j.future.2017.10.006
   Pan WF, 2014, J INTELL SYST, V23, P461, DOI 10.1515/jisys-2014-0015
   Pan WF, 2011, J SYST SCI COMPLEX, V24, P1068, DOI 10.1007/s11424-011-0319-z
   Perin F., 2010, PROC 4 WORKSHOP FAMI, P1
   Potanin A, 2005, COMMUN ACM, V48, P99, DOI 10.1145/1060710.1060716
   Qu Y, 2015, J SYST SOFTWARE, V108, P193, DOI 10.1016/j.jss.2015.06.015
   Roy G, 2001, IEEE T SOFTWARE ENG, V27, P381, DOI 10.1109/32.917526
   Saaty Thomas L., 1980, PRIORITY SETTING RES
   SEDGEWICK R, 1978, COMMUN ACM, V21, P847, DOI 10.1145/359619.359631
   Sora I, 2019, INFORM SOFTWARE TECH, V116, DOI 10.1016/j.infsof.2019.106176
   Steidl D., 2012, 2012 19th Working Conference on Reverse Engineering (WCRE), P93, DOI 10.1109/WCRE.2012.19
   Stevanetic S, 2014, INT CONF QUAL SOFTW, P353, DOI 10.1109/QSIC.2014.21
   Turnu I, 2013, INFORM SCIENCES, V245, P290, DOI 10.1016/j.ins.2013.05.014
   [王木生 Wang Musheng], 2011, [计算机科学与探索, Journal of Frontiers of Computer Science & Technology], V5, P891
   WEYUKER EJ, 1988, IEEE T SOFTWARE ENG, V14, P1357, DOI 10.1109/32.6178
   YAU SS, 1980, IEEE T SOFTWARE ENG, V6, P545, DOI 10.1109/TSE.1980.234503
   Zaidman A, 2005, NINTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P134, DOI 10.1109/CSMR.2005.12
   Zaidman A, 2008, J SOFTW MAINT EVOL-R, V20, P387, DOI 10.1002/smr.370
   Zavadskas EK, 2015, STUD INFORM CONTROL, V24, P141
   Zhang HY, 2010, J SYST SOFTWARE, V83, P803, DOI 10.1016/j.jss.2009.11.735
NR 76
TC 44
Z9 44
U1 3
U2 37
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD OCT 1
PY 2021
VL 47
IS 10
BP 2272
EP 2295
DI 10.1109/TSE.2019.2946357
PG 24
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA WH1IX
UT WOS:000707441900014
DA 2024-07-18
ER

PT J
AU Costa, C
   Figueirêdo, J
   Pimentel, JF
   Sarma, A
   Murta, L
AF Costa, Catarina
   Figueiredo, Jair
   Pimentel, Joao Felipe
   Sarma, Anita
   Murta, Leonardo
TI Recommending Participants for Collaborative Merge Sessions
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Collaboration; History; Optimization; Data mining; Merging; Task
   analysis; Software; Version control; branch merging; collaborative
   merge; developer recommendation; optimization
ID PULL-REQUESTS
AB Development of large projects often involves parallel work performed in multiple branches. Eventually, these branches need to be reintegrated through a merge operation. During merge, conflicts may arise and developers need to communicate to reach consensus about the desired resolution. For this reason, including the right developers to a collaborative merge session is fundamental. However, this task can be difficult especially when many different developers have made significant changes on each branch over a large number of files. In this paper, we present TIPMerge, an approach designed to recommend participants for collaborative merge sessions. TIPMerge analyzes the project history and builds a ranked list of developers who are the most appropriate to integrate a pair of branches (Developer Ranking) by considering developers' changes in the branches, in the previous history, and in the dependencies among files across branches. Simply selecting the top developers in such a ranking is easy, but is not effective for collaborative merge sessions as the top developers may have overlapping knowledge. To support collaborative merge, TIPMerge employs optimization techniques to recommend developers with complementary knowledge (Team Recommendation) aiming to maximize joint knowledge coverage. Our results show a mean normalized improvement of 49.5% (median 50.4%) for the joint knowledge coverage with the optimization techniques for assembling teams of three developers for collaborative merge in comparison to choosing the top-3 developers in the ranked list.
C1 [Costa, Catarina; Pimentel, Joao Felipe; Murta, Leonardo] Fluminense Fed Univ, Comp Inst, BR-24220900 Niteroi, RJ, Brazil.
   [Costa, Catarina; Figueiredo, Jair] Univ Fed Acre, BR-69920900 Rio Branco, AC, Brazil.
   [Sarma, Anita] Oregon State Univ, Sch Elect Engn & Comp Sci, Corvallis, OR 97331 USA.
C3 Universidade Federal Fluminense; Oregon State University
RP Murta, L (corresponding author), Fluminense Fed Univ, Comp Inst, BR-24220900 Niteroi, RJ, Brazil.
EM ccosta@ic.uff.br; jjcfigueiredo@ufac.br; jpimentel@ic.uff.br;
   anita_sarma@oregonstate.edu; leomurtaj@ic.uff.br
OI Pimentel, Joao Felipe/0000-0001-6680-7470; Sarma,
   Anita/0000-0002-1859-1692; Costa, Catarina/0000-0002-8851-1563
FU CAPES [10614-14-1]; CNPq [305569/2014-7, 306137/2017-8]; FAPERJ
   [E-26/201.523/2014]; NSF [CCF-1560526, IIS-1559657]
FX This work is partially supported by CAPES (10614-14-1), CNPq
   (305569/2014-7 and 306137/2017-8), FAPERJ (E-26/201.523/2014), and NSF
   CCF-1560526 and IIS-1559657.
CR [Anonymous], 1994, P INT C VERY LARGE D
   [Anonymous], 2007, 4 INT WORKSHOP MININ
   Anvik J, 2011, ACM T SOFTW ENG METH, V20, DOI 10.1145/2000791.2000794
   Anvik John, 2006, P 28 INT C SOFTWARE, P361, DOI DOI 10.1145/1134285.1134336
   Bird C., 2012, PROC ACM SIGSOFT 20
   Bird C, 2011, PROCEEDINGS OF THE 4TH INTERNATIONAL WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING (CHASE'11), P53
   Brosch Petra, 2012, Models in Software Engineering. Workshops and Symposia at MODELS 2011. Reports and Revised Selected Papers, P246, DOI 10.1007/978-3-642-29645-1_24
   Cataldo M., 2006, P 2006 20 06 ANN C C, P353, DOI DOI 10.1145/1180875.1180929
   Cataldo M, 2008, ESEM'08: PROCEEDINGS OF THE 2008 ACM-IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, P2
   Cavalcanti YC, 2014, J SOFTW-EVOL PROC, V26, P620, DOI 10.1002/smr.1639
   COHEN J, 1992, PSYCHOL BULL, V112, P155, DOI 10.1037/0033-2909.112.1.155
   Costa C, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P523, DOI 10.1145/2950290.2950339
   Costa C, 2014, INT J SOFTW ENG KNOW, V24, P1489, DOI 10.1142/S0218194014400166
   da Silva Junior J. R., 2014, P INT C SOFTW ENG KN, P495
   da Silva JR, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P409, DOI 10.1109/SANER.2015.7081851
   de Lima ML, 2018, J SYST SOFTWARE, V144, P181, DOI 10.1016/j.jss.2018.05.065
   de Lima ML, 2015, 30TH ANNUAL ACM SYMPOSIUM ON APPLIED COMPUTING, VOLS I AND II, P1567, DOI 10.1145/2695664.2695884
   Ghiotto G, 2020, IEEE T SOFTWARE ENG, V46, P892, DOI 10.1109/TSE.2018.2871083
   Glover F., 1990, ORSA Journal on Computing, V2, P4, DOI [10.1287/ijoc.1.3.190, 10.1287/ijoc.2.1.4]
   Gousios G, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P345, DOI 10.1145/2568225.2568260
   Hattori Lile P., 2008, 2008 23rd IEEE/ACM International Conference on Automated Software Engineering - Workshops, P63, DOI 10.1109/ASEW.2008.4686322
   Jiang J, 2017, INFORM SOFTWARE TECH, V84, P48, DOI 10.1016/j.infsof.2016.10.006
   Jiang J, 2015, J COMPUT SCI TECH-CH, V30, P998, DOI 10.1007/s11390-015-1577-3
   Kagdi H, 2009, INT C PROGRAM COMPRE, P273, DOI 10.1109/ICPC.2009.5090056
   Koegel M., 2010, COMP ACM INT C OBJ O, P27, DOI DOI 10.1145/1869542.1869547
   LAUTAMKI J., 2012, P ACM 2012 C COMPUTE, P1307, DOI DOI 10.1145/2145204.2145399
   Linares-Vásquez M, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P451, DOI 10.1109/ICSM.2012.6405306
   Matter D, 2009, 2009 6TH IEEE INTERNATIONAL WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES, P131, DOI 10.1109/MSR.2009.5069491
   Minto Shawn, 2007, 4 INT WORKSH MIN SOF, P5
   Mockus A, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P503, DOI 10.1109/ICSE.2002.1007994
   Nieminen A, 2012, COLLABORATECOM, P540, DOI 10.4108/icst.collaboratecom.2012.250435
   Oliva G. A., 2011, Proceedings of the 2011 25th Brazilian Symposium on Software Engineering (SBES 2011), P144, DOI 10.1109/SBES.2011.39
   Pappa GL, 2006, LECT NOTES COMPUT SC, V4212, P341
   Romano J., 2006, ANN M FLORIDA ASS IN
   Schuler D., 2008, P 2008 INT WORKING C, P121
   Soares DM, 2018, INFORM SOFTWARE TECH, V98, P32, DOI 10.1016/j.infsof.2018.01.015
   STEVENS WP, 1974, IBM SYST J, V13, P115, DOI 10.1147/sj.132.0115
   Yu Y, 2016, INFORM SOFTWARE TECH, V74, P204, DOI 10.1016/j.infsof.2016.01.004
   Yu Y, 2014, PROC IEEE INT CONF S, P609, DOI 10.1109/ICSME.2014.107
   Yue Yu, 2014, 2014 21st Asia-Pacific Software Engineering Conference (APSEC), P335, DOI 10.1109/APSEC.2014.57
   Zhang T, 2012, P INT COMP SOFTW APP, P170, DOI 10.1109/COMPSAC.2012.27
   Zimmermann T, 2004, PROC INT CONF SOFTW, P563, DOI 10.1109/ICSE.2004.1317478
NR 42
TC 10
Z9 11
U1 0
U2 10
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUN 1
PY 2021
VL 47
IS 6
BP 1198
EP 1210
DI 10.1109/TSE.2019.2917191
PG 13
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA SQ8XU
UT WOS:000660633800006
OA hybrid
DA 2024-07-18
ER

PT J
AU Mercaldo, F
   Santone, A
AF Mercaldo, Francesco
   Santone, Antonella
TI Formal Equivalence Checking for Mobile Malware Detection and Family
   Classification
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Malware; Operating systems; Machine learning; Training; Tools; Smart
   phones; Automata; Equivalence checking; formal methods; android;
   malware; security
ID ENSEMBLE
AB Several techniques to overcome the weaknesses of the current signature based detection approaches adopted by free and commercial antimalware have been proposed by industrial and research communities. These techniques are mainly supervised machine learning based, requiring optimal class balance to generate good predictive models. In this paper, we propose a method to infer mobile application maliciousness by detecting the belonging family, exploiting formal equivalence checking. We introduce a set of heuristics to reduce the number of mobile application comparisons and we define a metric reflecting the application maliciousness. Real-world experiments on 35 Android malware families (ranging from 2010 to 2018) confirm the effectiveness of the proposed method in mobile malware detection and family identification.
C1 [Mercaldo, Francesco] Univ Molise, Dept Med & Hlth Sci Vincenzo Tiberio, I-86100 Campobasso, Italy.
   [Mercaldo, Francesco] Natl Res Council Italy CNR, Inst Informat & Telemat, I-56124 Pisa, Italy.
   [Santone, Antonella] Univ Molise, Dept Med & Hlth Sci Vincenzo Tiberio, I-86100 Campobasso, Italy.
C3 University of Molise; Consiglio Nazionale delle Ricerche (CNR); Istituto
   di Informatica e Telematica (IIT-CNR); University of Molise
RP Mercaldo, F (corresponding author), Univ Molise, Dept Med & Hlth Sci Vincenzo Tiberio, I-86100 Campobasso, Italy.; Mercaldo, F (corresponding author), Natl Res Council Italy CNR, Inst Informat & Telemat, I-56124 Pisa, Italy.
EM francesco.mercaldo@unimol.it; antonella.santone@unimol.it
CR Allix K, 2016, EMPIR SOFTW ENG, V21, P183, DOI 10.1007/s10664-014-9352-6
   Andersen JR, 2015, LECT NOTES COMPUT SC, V9399, P573, DOI 10.1007/978-3-319-25150-9_33
   [Anonymous], 1989, PRENTICE HALL INT SE
   Arora A, 2014, 2014 EIGHTH INTERNATIONAL CONFERENCE ON NEXT GENERATION MOBILE APPS, SERVICES AND TECHNOLOGIES (NGMAST), P66, DOI 10.1109/NGMAST.2014.57
   Arp D, 2014, 21ST ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2014), DOI 10.14722/ndss.2014.23247
   Arslan RS, 2019, INT J SOFTW ENG KNOW, V29, P43, DOI 10.1142/S0218194019500037
   Bishop Christopher M., 2006, Pattern Recognition and Machine Learning, V4
   Blasing Thomas, 2010, 2010 5th International Conference on Malicious and Unwanted Software (MALWARE 2010), P55, DOI 10.1109/MALWARE.2010.5665792
   Canfora Gerardo, 2013, 2013 International Conference on Availability, Reliability and Security (ARES), P607, DOI 10.1109/ARES.2013.80
   Canfora G, 2019, IEEE T SOFTWARE ENG, V45, P1230, DOI 10.1109/TSE.2018.2834344
   Canfora G, 2016, COMPUT SECUR, V61, P1, DOI 10.1016/j.cose.2016.04.009
   Chen S, 2016, ASIA CCS'16: PROCEEDINGS OF THE 11TH ACM ASIA CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P377, DOI 10.1145/2897845.2897860
   de Francesco N, 2014, ACM T SOFTW ENG METH, V23, DOI 10.1145/2560563
   Enck W, 2014, ACM T COMPUT SYST, V32, DOI 10.1145/2619091
   Fan M, 2019, PROC INT CONF SOFTW, P771, DOI 10.1109/ICSE.2019.00085
   Ferrante A, 2018, LECT NOTES COMPUT SC, V10723, P242, DOI 10.1007/978-3-319-75650-9_16
   Holzmann Gerard J., 2012, Model Checking Software. Proceedings 19th International Workshop, SPIN 2012, P155, DOI 10.1007/978-3-642-31759-0_12
   Jiang X, 2013, P 8 ACM SIGSAC S INF, P329
   Junaid M, 2018, 34TH ANNUAL COMPUTER SECURITY APPLICATIONS CONFERENCE (ACSAC 2018), P198, DOI 10.1145/3274694.3274707
   Kim T, 2019, IEEE T INF FOREN SEC, V14, P773, DOI 10.1109/TIFS.2018.2866319
   Li J, 2014, C IND ELECT APPL, P1739, DOI 10.1109/ICIEA.2014.6931449
   Martín A, 2019, INFORM FUSION, V52, P128, DOI 10.1016/j.inffus.2018.12.006
   Mercaldo F, 2016, 2016 IEEE/ACM 38TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING COMPANION (ICSE-C), P744, DOI 10.1145/2889160.2892656
   Mercaldo F, 2016, LECT NOTES COMPUT SC, V9688, P212, DOI 10.1007/978-3-319-39570-8_14
   Min Zheng, 2013, Detection of Intrusions and Malware, and Vulnerability Assessment. 9th International Conference, DIMVA 2012. Revised Selected Papers, P82, DOI 10.1007/978-3-642-37300-8_5
   Santone A, 2013, SCI COMPUT PROGRAM, V78, P1346, DOI 10.1016/j.scico.2012.07.015
   Shabtai A, 2010, J SYST SOFTWARE, V83, P1524, DOI 10.1016/j.jss.2010.03.046
   Spreitzenbarth M., 2013, 28 INT ACM S APPL CO, P1808
   Suarez-Tangil G, 2017, PROCEEDINGS OF THE SEVENTH ACM CONFERENCE ON DATA AND APPLICATION SECURITY AND PRIVACY (CODASPY'17), P309, DOI 10.1145/3029806.3029825
   Thakur Deepak, 2019, Smart Innovations in Communication and Computational Sciences. Proceedings of ICSICCS 2017. Advances in Intelligent Systems and Computing (AISC 669), P315, DOI 10.1007/978-981-10-8968-8_27
   Wang W, 2018, FUTURE GENER COMP SY, V78, P987, DOI 10.1016/j.future.2017.01.019
   Yan L. K., 2012, P 21 USENIX SEC S US, P569
   Zhang HQ, 2019, FUTURE GENER COMP SY, V90, P211, DOI 10.1016/j.future.2018.07.052
NR 33
TC 6
Z9 7
U1 0
U2 3
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAR 18
PY 2021
VL 48
IS 7
BP 2643
EP 2657
DI 10.1109/TSE.2021.3067061
PG 15
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 2Y5YX
UT WOS:000825973300001
DA 2024-07-18
ER

PT J
AU Chen, CY
   Xing, ZC
   Liu, Y
   Xiong, KOL
AF Chen, Chunyang
   Xing, Zhenchang
   Liu, Yang
   Xiong, Kent Ong Long
TI Mining Likely Analogical APIs Across Third-Party Libraries via
   Large-Scale Unsupervised API Semantics Embedding
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Libraries; Semantics; Databases; Task analysis; Recurrent neural
   networks; Deep learning; Java; Analogical API; word embedding; skip
   thoughts
AB Establishing API mappings between third-party libraries is a prerequisite step for library migration tasks. Manually establishing API mappings is tedious due to the large number of APIs to be examined. Having an automatic technique to create a database of likely API mappings can significantly ease the task. Unfortunately, existing techniques either adopt supervised learning mechanism that requires already-ported or functionality similar applications across major programming languages or platforms, which are difficult to come by for an arbitrary pair of third-party libraries, or cannot deal with lexical gap in the API descriptions of different libraries. To overcome these limitations, we present an unsupervised deep learning based approach to embed both API usage semantics and API description (name and document) semantics into vector space for inferring likely analogical API mappings between libraries. Based on deep learning models trained using tens of millions of API call sequences, method names and comments of 2.8 millions of methods from 135,127 GitHub projects, our approach significantly outperforms other deep learning or traditional information retrieval (IR) methods for inferring likely analogical APIs. We implement a proof-of-concept website (https://similarapi.appspot.com) which can recommend analogical APIs for 583,501 APIs of 111 pairs of analogical Java libraries with diverse functionalities. This scale of third-party analogical-API database has never been achieved before.
C1 [Chen, Chunyang] Monash Univ, Fac Informat Technol, Clayton, Vic 3800, Australia.
   [Xing, Zhenchang] Australian Natl Univ, Coll Engn & Comp Sci, Canberra, ACT 0200, Australia.
   [Liu, Yang; Xiong, Kent Ong Long] Nanayng Technol Univ, SCSE, Singapore 639798, Singapore.
C3 Monash University; Australian National University
RP Chen, CY (corresponding author), Monash Univ, Fac Informat Technol, Clayton, Vic 3800, Australia.
EM chunyang.chen@monash.edu; zhenchang.xing@anu.edu.au; yangliu@ntu.edu.sg;
   kent0002@e.ntu.edu.sg
RI Liu, Yang/D-2306-2013; wang, xueting/JPY-2782-2023
OI Liu, Yang/0000-0001-7300-9215; Xing, Zhenchang/0000-0001-7663-1421;
   Chen, Chunyang/0000-0003-2011-9618
CR Allamanis M, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P38, DOI 10.1145/2786805.2786849
   Allamanis M, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P472, DOI 10.1145/2635868.2635901
   Nguyen AT, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P511, DOI 10.1145/2950290.2950333
   [Anonymous], 2017, JMOCK
   [Anonymous], 2017, MOCKITO
   [Anonymous], GUAVA COMMON BASE
   [Anonymous], 2017, ECLIPSE JDT
   [Anonymous], 2017, WINDOWS PHONE INTERO
   [Anonymous], 2017, APACHE COMMONS LANG
   [Anonymous], 2017, GUAVA COMMON IO
   [Anonymous], 2017, GOOGLE GSON
   [Anonymous], 2017, JFREECHARTS VS CHART
   [Anonymous], 2017, UNIT TESTING MOCKS E
   [Anonymous], 2017, JSON
   [Anonymous], 2017, APACHE COMMONS IO
   [Anonymous], 2010, P 32 ACMIEEE INT C S, DOI DOI 10.1145/1806799.1806831
   Arora S, 2019, 5 INT C LEARN REPR I
   Chen CY, 2016, ESEM'16: PROCEEDINGS OF THE 10TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, DOI 10.1145/2961111.2962588
   Chen CY, 2019, EMPIR SOFTW ENG, V24, P1155, DOI 10.1007/s10664-018-9657-y
   Chen CY, 2017, PROC INT CONF SOFTW, P450, DOI 10.1109/ICSE.2017.48
   Chen CY, 2016, PROC IEEE INT CONF S, P356, DOI 10.1109/ICSME.2016.17
   Chen CY, 2016, IEEE INT CONF AUTOM, P834, DOI 10.1145/2970276.2970290
   Chen CY, 2016, P INT COMP SOFTW APP, P83, DOI 10.1109/COMPSAC.2016.210
   Chen CY, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P338, DOI 10.1109/SANER.2016.21
   Chen GB, 2016, IEEE INT CONF AUTOM, P744, DOI 10.1145/2970276.2970317
   Chen K., 2013, EFFICIENT ESTIMATION, P2
   Cheng CL, 2017, 2017 12TH INTERNATIONAL CONFERENCE ON INTELLIGENT SYSTEMS AND KNOWLEDGE ENGINEERING (IEEE ISKE), DOI 10.1109/ULTSYM.2017.8091659
   Cho K., 2014, PROCS C EMPIRICAL ME, P1724, DOI DOI 10.3115/V1/D14-1179
   Dagenais B, 2008, OOPSLA 2008 NASHVILLE, CONFERENCE PROCEEDINGS, P313
   De Boom C, 2015, 2015 IEEE INTERNATIONAL CONFERENCE ON DATA MINING WORKSHOP (ICDMW), P1229, DOI 10.1109/ICDMW.2015.86
   Duala-Ekoko E, 2012, PROC INT CONF SOFTW, P266, DOI 10.1109/ICSE.2012.6227187
   Dyer R, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P779, DOI 10.1145/2568225.2568295
   Dyer R, 2015, ACM T SOFTW ENG METH, V25, DOI 10.1145/2803171
   Dyer R, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P422, DOI 10.1109/ICSE.2013.6606588
   Gokhale A, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P82, DOI 10.1109/ICSE.2013.6606554
   Graves A, 2013, INT CONF ACOUST SPEE, P6645, DOI 10.1109/ICASSP.2013.6638947
   Grover R. S, 2011, PROGRAMMING JAVA MUL
   Gu XD, 2017, PROCEEDINGS OF THE TWENTY-SIXTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P3675
   Gu XD, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P933, DOI 10.1145/3180155.3180167
   Gu XD, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P631, DOI 10.1145/2950290.2950334
   Hindle A, 2012, PROC INT CONF SOFTW, P837, DOI 10.1109/ICSE.2012.6227135
   Huang Q, 2018, IEEE INT CONF AUTOM, P293, DOI 10.1145/3238147.3238191
   Huang Y, 2018, IEEE INT CONF AUTOM, P214, DOI 10.1145/3238147.3238208
   Phan HD, 2017, PROC IEEE ACM INT C, P47, DOI 10.1109/ICSE-C.2017.17
   itext, 2017, COMP PDFBOX
   Jolliffe L., 2002, Principal Component Analysis
   Kasparian R, 2006, JAVA ARTISTS ART PHI
   Kiros R, 2015, 29 ANN C NEURAL INFO, V28
   LANDIS JR, 1977, BIOMETRICS, V33, P159, DOI 10.2307/2529310
   Le Quoc V., 2014, P INT C MACH LEARN I
   Liu Y, 2015, AAAI CONF ARTIF INTE, P2418
   Lu YY, 2017, LECT NOTES ARTIF INT, V10412, P237, DOI 10.1007/978-3-319-63558-3_20
   Lu YY, 2016, LECT NOTES ARTIF INT, V9983, P527, DOI 10.1007/978-3-319-47650-6_42
   LUHN HP, 1957, IBM J RES DEV, V1, P309, DOI 10.1147/rd.14.0309
   Mikolov T, 2013, P WORKSHOP ICLR 2013
   Mikolov T, 2010, 11TH ANNUAL CONFERENCE OF THE INTERNATIONAL SPEECH COMMUNICATION ASSOCIATION 2010 (INTERSPEECH 2010), VOLS 1-2, P1045
   Moreno L, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P880, DOI 10.1109/ICSE.2015.98
   Moritz E, 2013, IEEE INT CONF AUTOM, P646, DOI 10.1109/ASE.2013.6693127
   Nguyen A.T., 2014, P 29 ACM IEEE INT C, P457, DOI [10.1145/2642937.2643010, DOI 10.1145/2642937.2643010]
   Oracle, 2017, WRIT DOC COMM JAV TO
   Palmer G, 2003, TECHNICAL JAVA DEV S
   Pandita R, 2015, IEEE INT WORK C SO, P231, DOI 10.1109/SCAM.2015.7335419
   Pearson K., 1895, P R SOC LOND, V58, P240, DOI 10.1098/rspl.1895.0041
   Rahman MM, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P349, DOI 10.1109/SANER.2016.80
   Raychev V, 2015, ACM SIGPLAN NOTICES, V50, P111, DOI [10.1145/2775051.2677009, 10.1145/2676726.2677009]
   Sa Gao, 2019, 2019 IEEE 26th International Conference on Software Analysis, Evolution and Reengineering (SANER). Proceedings, P414, DOI 10.1109/SANER.2019.8667994
   Santhiar A, 2014, ACM T SOFTW ENG METH, V24, DOI 10.1145/2629506
   Shen DH, 2018, PROCEEDINGS OF THE 56TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (ACL), VOL 1, P440
   Singh R., 2013, ELEMENTS SURVEY SAMP, V15
   Sun C, 2011, INT J CHEM ENG, V2011, DOI 10.1155/2011/545234
   Teyton C., 2012, 2012 19th Working Conference on Reverse Engineering (WCRE), P289, DOI 10.1109/WCRE.2012.38
   Teyton C, 2013, WORK CONF REVERSE EN, P192, DOI 10.1109/WCRE.2013.6671294
   Thung F, 2013, WORK CONF REVERSE EN, P182, DOI 10.1109/WCRE.2013.6671293
   Nguyen TD, 2017, PROC INT CONF SOFTW, P438, DOI 10.1109/ICSE.2017.47
   Wang XY, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P461, DOI 10.1145/1368088.1368151
   White M, 2016, IEEE INT CONF AUTOM, P87, DOI 10.1145/2970276.2970326
   White M, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P334, DOI 10.1109/MSR.2015.38
   Xavier L, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P138, DOI 10.1109/SANER.2017.7884616
   Xing ZC, 2007, IEEE T SOFTWARE ENG, V33, P818, DOI 10.1109/TSE.2007.70747
   Ye X, 2016, PROC INT CONF SOFTW, P404, DOI 10.1145/2884781.2884862
   Zhang JX, 2018, IEEE ACCESS, V6, P6205, DOI 10.1109/ACCESS.2017.2777845
   Zhang TY, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P886, DOI 10.1145/3180155.3180260
   Zhong H, 2019, IEEE T SOFTWARE ENG, V45, P319, DOI 10.1109/TSE.2017.2782280
   Zhong H, 2009, LECT NOTES COMPUT SC, V5653, P318, DOI 10.1007/978-3-642-03013-0_15
NR 84
TC 32
Z9 39
U1 0
U2 15
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAR 1
PY 2021
VL 47
IS 3
BP 432
EP 447
DI 10.1109/TSE.2019.2896123
PG 16
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA RA1TM
UT WOS:000631200300001
DA 2024-07-18
ER

PT J
AU Rodriguez, P
   Mendes, E
   Turhan, B
AF Rodriguez, Pilar
   Mendes, Emilia
   Turhan, Burak
TI Key Stakeholders' Value Propositions for Feature Selection in
   Software-Intensive Products: An Industrial Case Study
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Stakeholders; Software; Companies; Feature extraction; Planning;
   Decision making; Economics; Value-based software engineering (VBSE);
   feature selection; release planning; decision-making; value proposition;
   stakeholder analysis; key stakeholders; software-intensive systems; case
   study; grounded theory
ID MANAGEMENT
AB Numerous software companies are adopting value-based decision making. However, what does value mean for key stakeholders making decisions? How do different stakeholder groups understand value? Without an explicit understanding of what value means, decisions are subject to ambiguity and vagueness, which are likely to bias them. This case study provides an in-depth analysis of key stakeholders' value propositions when selecting features for a large telecommunications company's software-intensive product. Stakeholders' value propositions were elicited via interviews, which were analyzed using Grounded Theory coding techniques (open and selective coding). Thirty-six value propositions were identified and classified into six dimensions: customer value, market competitiveness, economic value/profitability, cost efficiency, technology & architecture, and company strategy. Our results show that although propositions in the customer value dimension were those mentioned the most, the concept of value for feature selection encompasses a wide range of value propositions. Moreover, stakeholder groups focused on different and complementary value dimensions, calling to the importance of involving all key stakeholders in the decision making process. Although our results are particularly relevant to companies similar to the one described herein, they aim to generate a learning process on value-based feature selection for practitioners and researchers in general.
C1 [Rodriguez, Pilar] Univ Oulu, Oulu 90014, Finland.
   [Mendes, Emilia] Blekinge Inst Technol, Karlskrona, Sweden.
   [Turhan, Burak] Monash Univ, Melbourne, Vic 3800, Australia.
C3 University of Oulu; Blekinge Institute Technology; Monash University
RP Rodriguez, P (corresponding author), Univ Oulu, Oulu 90014, Finland.
EM pilar.rodriguez@oulu.fi; emilia.mendes@oulu.fi; burak.turhan@monash.edu
RI Rodriguez, Pilar/HSE-9989-2023; Turhan, Burak/G-7400-2011; Mendes, Maria
   E/B-4207-2015; Rodriguez, Pilar/C-1449-2015
OI Turhan, Burak/0000-0003-1511-2163; Rodriguez, Pilar/0000-0002-0618-6104
FU Tekes (Finnish Funding Agency for Technology and Innovation) [40150/14]
FX We would like to thank the company for its commitment as part of our
   collaboration. This research has been carried out within the FiDiPro
   VALUE project number 40150/14, which is funded by Tekes (the Finnish
   Funding Agency for Technology and Innovation).
CR Achimugu P, 2014, INFORM SOFTWARE TECH, V56, P568, DOI 10.1016/j.infsof.2014.02.001
   Alahyari H, 2017, J SYST SOFTWARE, V125, P271, DOI 10.1016/j.jss.2016.12.007
   [Anonymous], 1998, PROBABILISTIC REASON
   [Anonymous], 2012, CASE STUDY RES SOFTW, DOI DOI 10.1002/9781118181034
   [Anonymous], 2012, GROUNDED THEORY QUAL
   Barney S, 2008, J SYST ARCHITECT, V54, P576, DOI 10.1016/j.sysarc.2007.12.004
   Barney S, 2006, EUROMICRO CONF PROC, P274, DOI 10.1109/EUROMICRO.2006.51
   Barney S, 2009, IEEE SOFTWARE, V26, P84, DOI 10.1109/MS.2009.89
   Beck K., 2011, MANIFESTO AGILE SOFT
   Bengio D, 2018, MINERAL MET MAT SER, P99, DOI 10.1007/978-3-319-72350-1_9
   Biffl S., 2005, Value-Based Software Engineering
   Boehm B., 2003, ACM SIGSOFT Software Engineering Notes, V28, P3, DOI DOI 10.1145/638750.638775
   Boehm B.W., 1981, Software engineering economics, V197
   Boehm B, 2006, VALUE-BASED SOFTWARE ENGINEERING, P109, DOI 10.1007/3-540-29263-2_6
   Boehm B, 2006, VALUE-BASED SOFTWARE ENGINEERING, P15, DOI 10.1007/3-540-29263-2_2
   Boehm BarryW., 2006, VALUE BASED SOFTWARE
   BOEHM BW, 1989, IEEE T SOFTWARE ENG, V15, P902, DOI 10.1109/32.29489
   Browning T. R., 2003, Systems Engineering, V6, P49, DOI 10.1002/sys.10034
   Cabral ARY, 2014, J INF KNOWL MANAG, V13, DOI 10.1142/S0219649214500105
   Chapeaux T, 2013, BRAZ SYM COMPUT SYST, P95, DOI 10.1109/SBESC.2013.11
   Chermack T., 2003, ADV DEV HUM RESOUR, V5, P408, DOI [10.1177/1523422303257373, DOI 10.1177/1523422303257373]
   Cruzes DS, 2011, INT SYMP EMP SOFTWAR, P275, DOI 10.1109/ESEM.2011.36
   Dahlstedt AsaG., 2003, 9th International Workshop on Requirements Engineering Foundation for Software Quality REFSQ03, P55
   Davern M, 2013, HEALTH SERV RES, V48, P905, DOI 10.1111/1475-6773.12070
   Dybå T, 2012, INT SYMP EMP SOFTWAR, P19, DOI 10.1145/2372251.2372256
   EISENHARDT KM, 1989, ACAD MANAGE REV, V14, P532, DOI 10.2307/258557
   Flyvbjerg B, 2006, QUAL INQ, V12, P219, DOI 10.1177/1077800405284363
   Freitas V, 2017, ASIA PAC SOFWR ENG, P279, DOI 10.1109/APSEC.2017.34
   Freitas V, 2016, 2016 42ND EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS (SEAA), P34, DOI 10.1109/SEAA.2016.44
   Glaser Barney G., 1992, Basic of grounded theory analysis: emergence vs. forcing
   Greer D, 2004, INFORM SOFTWARE TECH, V46, P243, DOI 10.1016/j.infsof.2003.07.002
   Hu G., 2006, P ACIS, V7, P6
   Inayat I, 2015, COMPUT HUM BEHAV, V51, P915, DOI 10.1016/j.chb.2014.10.046
   Jan Najeeb, 2010, THESIS
   Jorgensen M, 2007, IEEE T SOFTWARE ENG, V33, P33, DOI 10.1109/TSE.2007.256943
   Khurum M, 2013, J SOFTW-EVOL PROC, V25, P711, DOI 10.1002/smr.1560
   Latha T. Jessie, 2015, International Journal of Business Information Systems, V18, P26, DOI 10.1504/IJBIS.2015.066125
   Lindgren M, 2008, PROCEEDINGS OF THE 34TH EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS, P175, DOI 10.1109/SEAA.2008.22
   McElroy T, 2007, JUDGM DECIS MAK, V2, P48
   Mendes E., 2015, P ACM 11 INT C PRED
   Mendes E., 2017, SOFTW QUAL J, P1
   Mendes E, 2012, PROC INT CONF SOFTW, P1112, DOI 10.1109/ICSE.2012.6227108
   Miles L.D., 1972, TECHNIQUES VALUE ANA, V2nd
   Mougouei D, 2016, IEEE INT CONF AUTOM, P884, DOI 10.1145/2970276.2975936
   Nonaka I., 2003, Knowledge Management Research & Practice, V1, P2, DOI 10.1057/palgrave.kmrp.8500001
   Norton B.R., 1995, VALUE MANAGEMENT CON
   Ojala P., 2006, THESIS
   Panarotto M., 2015, THESIS
   Petersen K, 2009, INT SYMP EMP SOFTWAR, P402
   Phister M., 1978, DATA PROCESSING TECH
   Poppendieck M., 2003, Lean Software Development: An Agile Tollkit
   Racheva Z, 2009, LECT NOTES BUS INF P, V32, P141
   Riegel Norman, 2014, Requirements Engineering: Foundation for Software Quality. 20th International Working Conference, REFSQ 2014. Proceedings: LNCS 8396, P268, DOI 10.1007/978-3-319-05843-6_20
   Riegel N., 2013, P REFSQ WORKSH, P133
   Rodriguez P, 2017, J SYST SOFTWARE, V123, P263, DOI 10.1016/j.jss.2015.12.015
   Rodríguez P, 2012, INT SYMP EMP SOFTWAR, P139, DOI 10.1145/2372251.2372275
   Shadbolt Nigel, 2015, EVALUATION HUMAN WOR
   Sharpe W.F., 1969, EC COMPUTERS
   Shaw Mary., 2002, SUPPLEMENTAL P 13 IN, P7
   Shillito M.L., 1992, VALUE ITS MEASUREMEN
   STRUTZEL E, 1968, NURS RES, V17, P364
   Svahnberg M, 2010, INFORM SOFTWARE TECH, V52, P237, DOI 10.1016/j.infsof.2009.11.006
   Usman M., 2014, PROMISE '14: Proceedings of the 10th International Conference on Predictive Models in Software Engineering, page, P82
   van den Akker M, 2008, INFORM SOFTWARE TECH, V50, P101, DOI 10.1016/j.infsof.2007.10.017
   Version One Inc, 2016, 10 ANN STAT AG DEV S
   Wnuk K., 2015, P 17 PTI KKIO SOFTW
   Wohlin C, 2005, 2005 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING (ISESE), PROCEEDINGS, P237, DOI 10.1109/ISESE.2005.1541833
   Wohlin C, 2006, VALUE-BASED SOFTWARE ENGINEERING, P179, DOI 10.1007/3-540-29263-2_9
   Wohlin C, 2015, EMPIR SOFTW ENG, V20, P1427, DOI 10.1007/s10664-014-9319-7
   Yin D.R. K., 2017, Case Study Research and Applications: Design and Methods
NR 70
TC 11
Z9 11
U1 1
U2 8
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD DEC 1
PY 2020
VL 46
IS 12
BP 1340
EP 1363
DI 10.1109/TSE.2018.2878031
PG 24
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science; Engineering
GA PD6GQ
UT WOS:000597780900004
OA Green Accepted, Green Submitted
DA 2024-07-18
ER

PT J
AU Wei, LL
   Liu, YP
   Cheung, SC
   Huang, HX
   Lu, X
   Liu, XZ
AF Wei, Lili
   Liu, Yepang
   Cheung, Shing-Chi
   Huang, Huaxun
   Lu, Xuan
   Liu, Xuanzhe
TI Understanding and Detecting Fragmentation-Induced Compatibility Issues
   for Android Apps
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Androids; Humanoid robots; Biological system modeling; Smart phones;
   Hardware; Testing; Ecosystems; Mobile applications; android
   applications; android fragmentation; compatibility issues; empirical
   study; program analysis
AB Android ecosystem is heavily fragmented. The numerous combinations of different device models and operating system versions make it impossible for Android app developers to exhaustively test their apps, and thus various compatibility issues arise. Unfortunately, little is known on the characteristics of such fragmentation-induced compatibility issues. No mature tools exist to help developers quickly diagnose and fix these issues. To bridge the gap, we conducted an empirical study on 220 real-world compatibility issues collected from five popular open-source Android apps. We further interviewed Android practitioners and conducted an online survey to gain insights from real practices. Via the studies, we characterized compatibility issues, investigated common practices to handle compatibility issues, and disclosed that these issues exhibit common patterns. With these findings, we propose a technique, FicFinder, to automatically detect compatibility issues in Android apps. FicFinder performs static code analysis based on a model that captures Android APIs as well as their associated context by which compatibility issues can be triggered. FicFinder reports actionable debugging information to developers when it detects potential issues. We evaluated FicFinder with 53 large-scale open-source Android apps. The results show that FicFinder can precisely detect compatibility issues in these apps and uncover previously-unknown issues.
C1 [Wei, Lili; Cheung, Shing-Chi; Huang, Huaxun] Hong Kong Univ Sci & Technol, Dept Comp Sci & Engn, Kowloon, Clear Water Bay, Hong Kong, Peoples R China.
   [Liu, Yepang] Southern Univ Sci & Technol, Shenzhen Key Lab Computat Intelligence, Dept Comp Sci & Engn, Shenzhen 518055, Peoples R China.
   [Lu, Xuan; Liu, Xuanzhe] Peking Univ, Minist Educ, Key Lab High Confidence Software Technol, Beijing, Peoples R China.
C3 Hong Kong University of Science & Technology; Southern University of
   Science & Technology; Peking University
RP Cheung, SC (corresponding author), Hong Kong Univ Sci & Technol, Dept Comp Sci & Engn, Kowloon, Clear Water Bay, Hong Kong, Peoples R China.; Liu, YP (corresponding author), Southern Univ Sci & Technol, Shenzhen Key Lab Computat Intelligence, Dept Comp Sci & Engn, Shenzhen 518055, Peoples R China.
EM lweiae@cse.ust.hk; liuyp1@sustc.edu.cn; scc@cse.ust.hk;
   hhuangas@cse.ust.hk; luxuan@pku.edu.cn; liuxuanzhe@pku.edu.cn
RI Wei, Lili/IAM-0837-2023; 黎, 伟/GXM-4040-2022; wei, li/GSD-3630-2022; Liu,
   Chenyu/KBQ-8899-2024; li, jing/KHY-5337-2024; LI, WEI/ISS-1208-2023;
   Huang, Huaxun/HOC-3667-2023; wei, li/ISB-3361-2023; Cheung, Shing
   Chi/U-5882-2018; Liu, Yepang/G-6183-2018
OI Wei, Lili/0000-0002-2428-4111; Huang, Huaxun/0000-0002-1778-3721;
   Cheung, Shing Chi/0000-0002-3508-7172; Lu, Xuan/0000-0003-4886-0918;
   Liu, Xuanzhe/0000-0002-7908-8484; Liu, Yepang/0000-0001-8147-8126
FU Hong Kong RGC/GRF grant [16202917]; National Natural Science Foundation
   of China [61802164]; Science and Technology Innovation Committee
   Foundation of Shenzhen [ZDSYS201703031748284]; MSRA collaborative
   research fund; Hong Kong PhD Fellowship Scheme; Nvidia academic program;
   Google PhD Fellowship award; National Key RD Program [2018YFB1004800];
   MSRA PhD Fellowship award
FX This work is supported by the Hong Kong RGC/GRF grant 16202917, National
   Natural Science Foundation of China (Grant No. 61802164), the Science
   and Technology Innovation Committee Foundation of Shenzhen (Grant No.
   ZDSYS201703031748284), MSRA collaborative research fund, Hong Kong PhD
   Fellowship Scheme, the Nvidia academic program, Google PhD Fellowship
   award and MSRA PhD Fellowship award. Xuan Lu's and Xuanzhe Liu's work is
   supported by the National Key R&D Program (Grant No. 2018YFB1004800). We
   would like to thank all our interviewees and survey participants for
   sharing their insightful experiences and volunteering to disseminate our
   survey in the community. We would like to thank Dr. Li Li, the first
   author of CiD [91], for his helpful feedback on the comparison between
   CiD and FICFINDER. We also would like to thank the reviewers of our
   conference paper and this journal version for their valuable comments
   and improvement suggestions.
CR [Anonymous], 2015, Android Fragmentation visualized
   [Anonymous], 2018, K9 MAIL
   [Anonymous], 2016, WHAT IS ANDROID FRAG
   [Anonymous], 2018, Android Open Source Project: Distribution dashboard
   [Anonymous], 2018, CSIPSIMPLE
   [Anonymous], 2018, CSIPSIMPLE ISSUES
   [Anonymous], 2018, Stack Overflow
   [Anonymous], 2018, GLOBAL MOBILE OS MAR
   [Anonymous], 2018, SAVE OFFLINE
   [Anonymous], 2018, VLC ANDROID
   [Anonymous], 2018, UI APPL EXERCISER MO
   [Anonymous], 2018, ANKIDROID
   [Anonymous], 2010, ANDROID COMPATIBILIT
   [Anonymous], 2014, INT J STW ENG APPL
   [Anonymous], 2018, ANYSOFTKEYBOARD
   [Anonymous], 2018, MATERIALISTIC HACKER
   Bavota G, 2015, IEEE T SOFTWARE ENG, V41, P384, DOI 10.1109/TSE.2014.2367027
   Choudhary SR, 2015, IEEE INT CONF AUTOM, P429, DOI 10.1109/ASE.2015.89
   Dan Han, 2012, 2012 19th Working Conference on Reverse Engineering (WCRE), P83, DOI 10.1109/WCRE.2012.18
   Fazzini M, 2017, IEEE INT CONF AUTOM, P308, DOI 10.1109/ASE.2017.8115644
   FERRANTE J, 1987, ACM T PROGR LANG SYS, V9, P319, DOI 10.1145/24039.24041
   Halpern M, 2015, INT SYM PERFORM ANAL, P215, DOI 10.1109/ISPASS.2015.7095807
   Holzinger Andreas, 2012, Multidisciplinary Research and Practice for Information Systems. International Cross-Domain Conference and Workshop on Availability, Reliability and Security (CD-ARES 2012). Proceedings, P176, DOI 10.1007/978-3-642-32498-7_14
   Joorabchi Mona Erfani, 2013, 2013 ACM / IEEE International Symposium on Empirical Software Engineering and Measurement (ESEM), P15, DOI 10.1109/ESEM.2013.9
   Kaasila J., 2012, Proceedings of the 11th International Conference on Mobile and Ubiquitous Multimedia p, P28
   Khalid H, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P610, DOI 10.1145/2635868.2635909
   Kim Y, 2013, IEEE INT CONF AUTOM, P519, DOI 10.1109/ASE.2013.6693109
   Kochhar P. S., 2015, ICST'15, P1
   Lam P., 2011, P CET US COMP INFR W, V15, P35
   Lewis S, 2015, HEALTH PROMOT PRACT, V16, P473, DOI 10.1177/1524839915580941
   Li HR, 2015, IMC'15: PROCEEDINGS OF THE 2015 ACM CONFERENCE ON INTERNET MEASUREMENT CONFERENCE, P459, DOI 10.1145/2815675.2815686
   Li L, 2018, ISSTA'18: PROCEEDINGS OF THE 27TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P153, DOI 10.1145/3213846.3213857
   Li L, 2018, IEEE WORK CONF MIN S, P254, DOI 10.1145/3196398.3196419
   Linares-Vasquez M., 2014, P 22 INT C PROGR COM, P83, DOI DOI 10.1145/2597008.2597155
   Linares-Vásquez M, 2017, PROC IEEE INT CONF S, P613, DOI 10.1109/ICSME.2017.47
   Linares-Vásquez M, 2015, PROC IEEE INT CONF S, P352, DOI 10.1109/ICSM.2015.7332486
   Linares-Vasquez Mario, 2013, P 2013 9 JOINT M FDN, P477, DOI DOI 10.1145/2491411.2491428
   Liu YP, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P1013, DOI 10.1145/2568225.2568229
   Lu X, 2016, PROC INT CONF SOFTW, P3, DOI 10.1145/2884781.2884828
   McDonnell T, 2013, PROC IEEE INT CONF S, P70, DOI 10.1109/ICSM.2013.18
   Nayebi F., 2012, 2012 25 IEEE CAN C E, P1, DOI DOI 10.1109/CCECE.2012.6334930
   Tian Y, 2015, PROC IEEE INT CONF S, P301, DOI 10.1109/ICSM.2015.7332476
   Vilkomir S, 2014, IEEE ICST WORKSHOP, P78, DOI 10.1109/ICSTW.2014.9
   Wei LL, 2016, IEEE INT CONF AUTOM, P226, DOI 10.1145/2970276.2970312
   Wu L., 2013, PROC 20 SIGSAC C COM, P623, DOI DOI 10.1145/2508859.2516728
   Zhang DS, 2005, INT J HUM-COMPUT INT, V18, P293, DOI 10.1207/s15327590ijhc1803_3
   Zhou XY, 2014, P IEEE S SECUR PRIV, P409, DOI 10.1109/SP.2014.33
NR 47
TC 23
Z9 24
U1 2
U2 9
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD NOV 1
PY 2020
VL 46
IS 11
BP 1176
EP 1199
DI 10.1109/TSE.2018.2876439
PG 24
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA OR0UE
UT WOS:000589192400002
DA 2024-07-18
ER

PT J
AU Do, LNQ
   Kruger, S
   Hill, P
   Ali, K
   Bodden, E
AF Do, Lisa Nguyen Quang
   Kruger, Stefan
   Hill, Patrick
   Ali, Karim
   Bodden, Eric
TI Debugging Static Analysis
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Debugging; Static analysis; Tools; Computer bugs; Standards; Writing;
   Encoding; Testing and debugging; program analysis; development tools;
   integrated environments; graphical environments; usability testing
AB Static analysis is increasingly used by companies and individual code developers to detect and fix bugs and security vulnerabilities. As programs grow more complex, the analyses have to support new code concepts, frameworks and libraries. However, static-analysis code itself is also prone to bugs. While more complex analyses are written and used in production systems every day, the cost of debugging and fixing them also increases tremendously. To understand the difficulties of debugging static analysis, we surveyed 115 static-analysis writers. From their responses, we determined the core requirements to build a debugger for static analyses, which revolve around two main issues: abstracting from both the analysis code and the code it analyses at the same time, and tracking the analysis internal state throughout both code bases. Most tools used by our survey participants lack the capabilities to address both issues. Focusing on those requirements, we introduce Visuflow, a debugging environment for static data-flow analysis. Visuflow features graph visualizations and custom breakpoints that enable users to view the state of an analysis at any time. In a user study on 20 static-analysis writers, Visuflow helped identify 25 and fix 50 percent more errors in the analysis code compared to the standard Eclipse debugging environment.
C1 [Do, Lisa Nguyen Quang] Paderborn Univ, Secure Software Engn Grp, D-33098 Paderborn, Germany.
   [Kruger, Stefan] Paderborn Univ, D-33098 Paderborn, Germany.
   [Hill, Patrick] Paderborn Univ, Software Engn, D-33098 Paderborn, Germany.
   [Ali, Karim] Univ Alberta, Dept Comp Sci, Edmonton, AB T6G 2R3, Canada.
   [Bodden, Eric] Paderborn Univ, Heinz Nixdorf Inst, Secure Software Engn, D-33102 Paderborn, Germany.
   [Bodden, Eric] Fraunhofer IEM, D-33102 Paderborn, Germany.
C3 University of Paderborn; University of Paderborn; University of
   Paderborn; University of Alberta; University of Paderborn
RP Do, LNQ (corresponding author), Paderborn Univ, Secure Software Engn Grp, D-33098 Paderborn, Germany.
EM lisa.nguyen@upb.de; stefan.krueger@upb.de;
   pahill@campus.uni-paderborn.de; karim.ali@ualberta.ca;
   eric.bodden@upb.de
RI Bodden, Eric/AAE-1365-2021
OI Bodden, Eric/0000-0003-3470-3647; Nguyen Quang Do,
   Lisa/0000-0003-3146-7968
FU Fraunhofer Attract grant; Heinz Nixdorf Foundation; DFG [CRC 1119];
   Natural Sciences and Engineering Research Council of Canada
FX We thank the participants of our surveys and user studies for their
   invaluable input. We would also like to thank Michael Schlichtig, Henrik
   Niehaus, Shashank Subramanya, Kaarthik Radhakrishna, Zafar Syed,
   Nishitha Shivegowda, Yannick Kouotang Signe, and Ram Muthiah Bose
   Muthian for their work on VISUFLOW. This research was supported by a
   Fraunhofer Attract grant as well as the Heinz Nixdorf Foundation. This
   work has also been partially funded by the DFG as part of project E1
   within the CRC 1119 CROSSING, and was supported by the Natural Sciences
   and Engineering Research Council of Canada.
CR Andreasen E. S., 2017, P 6 ACM SIGPLAN INT, P31, DOI [10.1145/3088515.3088521, DOI 10.1145/3088515.3088521]
   Andrew J Ko, 2004, P SIGCHI C HUMAN FAC, V6, P151, DOI [DOI 10.1145/985692.985712, 10.1145/985692.985712]
   [Anonymous], 2018, APPBRAIN
   [Anonymous], 2018, AD BLOG
   Ayewah N, 2008, IEEE SOFTWARE, V25, P22, DOI 10.1109/MS.2008.130
   Bodden Eric, 2012, P ACM SIGPLAN INT WO, P3, DOI DOI 10.1145/2259051.2259052
   Christakis M, 2016, IEEE INT CONF AUTOM, P332, DOI 10.1145/2970276.2970347
   Deering T, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE COMPANION 2014), P588, DOI 10.1145/2591062.2591065
   Do LNQ, 2017, PROCEEDINGS OF THE 26TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA'17), P307, DOI 10.1145/3092703.3092705
   Hudson W., 2014, The Encyclopedia of Human-Computer Interaction, V2nd
   Johnson B, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P73, DOI 10.1145/2950290.2950304
   Khoo Y.P., 2008, WORKSHOP PROGRAM ANA, P57
   Ko Amy J., 2006, P SIGCHI C HUM FACT, P387, DOI DOI 10.1145/1124772.1124831
   LANDIS JR, 1977, BIOMETRICS, V33, P159, DOI 10.2307/2529310
   Lewis Bil., 2003, CoRR
   Liang GT, 2012, P INT COMP SOFTW APP, P119, DOI 10.1109/COMPSAC.2012.22
   Lisa N. Q. D., 2018, DEBUGGING STATIC ANA
   Reichheld FF, 2003, HARVARD BUS REV, V81, P46
   Rushby J, 2008, LECT NOTES COMPUT SC, V4171, P161
   Ryder B.G, 1983, P 10 ACM SIGACT SIGP, P167, DOI DOI 10.1145/567067.567084
   Shankar V, 2014, BMC MED RES METHODOL, V14, DOI 10.1186/1471-2288-14-100
   Shen H, 2011, ADV MATER RES-SWITZ, V175-176, P299, DOI 10.4028/www.scientific.net/AMR.175-176.299
   Spath J., 2017, P INT C OBJ OR PROGR
   SUGIYAMA K, 1981, IEEE T SYST MAN CYB, V11, P109, DOI 10.1109/TSMC.1981.4308636
   Vallée-Rai R, 2000, LECT NOTES COMPUT SC, V1781, P18
   Xie J., 2012, Proceedings of the SIGCHI Conference on Human Factors in Computing Systems, New York, NY, USA, P2707
   Zeller A, 2002, IEEE T SOFTWARE ENG, V28, P183, DOI 10.1109/32.988498
NR 27
TC 8
Z9 10
U1 2
U2 16
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUL 1
PY 2020
VL 46
IS 7
BP 697
EP 709
DI 10.1109/TSE.2018.2868349
PG 13
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA ML2UM
UT WOS:000549327500001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Sayagh, M
   Kerzazi, N
   Adams, B
   Petrillo, F
AF Sayagh, Mohammed
   Kerzazi, Noureddine
   Adams, Bram
   Petrillo, Fabio
TI Software Configuration Engineering in Practice Interviews, Survey, and
   Systematic Literature Review
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Review
DE Software systems; Interviews; Systematics; Facebook; Bibliographies;
   Software algorithms; Empirical study; configuration; configuration
   engineering; Systematic literature review; interviews; survey
ID PERFORMANCE PREDICTION
AB Modern software applications are adapted to different situations (e.g., memory limits, enabling/disabling features, database credentials) by changing the values of configuration options, without any source code modifications. According to several studies, this flexibility is expensive as configuration failures represent one of the most common types of software failures. They are also hard to debug and resolve as they require a lot of effort to detect which options are misconfigured among a large number of configuration options and values, while comprehension of the code also is hampered by sprinkling conditional checks of the values of configuration options. Although researchers have proposed various approaches to help debug or prevent configuration failures, especially from the end users' perspective, this paper takes a step back to understand the process required by practitioners to engineer the run-time configuration options in their source code, the challenges they experience as well as best practices that they have or could adopt. By interviewing 14 software engineering experts, followed by a large survey on 229 Java software engineers, we identified 9 major activities related to configuration engineering, 22 challenges faced by developers, and 24 expert recommendations to improve software configuration quality. We complemented this study by a systematic literature review to enrich the experts' recommendations, and to identify possible solutions discussed and evaluated by the research community for the developers' problems and challenges. We find that developers face a variety of challenges for all nine configuration engineering activities, starting from the creation of options, which generally is not planned beforehand and increases the complexity of a software system, to the non-trivial comprehension and debugging of configurations, and ending with the risky maintenance of configuration options, since developers avoid touching and changing configuration options in a mature system. We also find that researchers thus far focus primarily on testing and debugging configuration failures, leaving a large range of opportunities for future work.
C1 [Sayagh, Mohammed; Adams, Bram] Ecole Polytech Montreal, Dept Genie Informat & Genie Logiciel, Montreal, PQ H3T 1J4, Canada.
   [Kerzazi, Noureddine] Ecole Natl Super Informat & Anal Syst ENSIAS, BP 713, Rabat, Morocco.
   [Petrillo, Fabio] Univ Quebec Chicoutimi, Dept Informat & Math, Chicoutimi, PQ G7H 2B1, Canada.
C3 Universite de Montreal; Polytechnique Montreal; University of Quebec;
   University of Quebec Chicoutimi
RP Sayagh, M (corresponding author), Ecole Polytech Montreal, Dept Genie Informat & Genie Logiciel, Montreal, PQ H3T 1J4, Canada.
EM mohammed.sayagh@polymtl.ca; n.kerzazi@um5s.net.ma;
   bram.adams@polymtl.ca; fabio@petrillo.com
OI Sayagh, Mohammed/0000-0002-2724-0034; Adams, Bram/0000-0001-7213-4006;
   Petrillo, Fabio/0000-0002-8355-1494
CR Abbasi EK, 2014, 2014 SOFTWARE EVOLUTION WEEK - IEEE CONFERENCE ON SOFTWARE MAINTENANCE, REENGINEERING, AND REVERSE ENGINEERING (CSMR-WCRE), P264, DOI 10.1109/CSMR-WCRE.2014.6747178
   Ahmed BS, 2015, INFORM SOFTWARE TECH, V66, P13, DOI 10.1016/j.infsof.2015.05.005
   [Anonymous], 2011, P 8 WORKSH ASS SELF
   [Anonymous], 2013, WHAT I WISH SYSTEMS
   [Anonymous], P 29 ACM IEEE INT C
   [Anonymous], 2009, P VLDB ENDOWMENT
   Arshad FA, 2013, PROC INT SYMP SOFTW, P198, DOI 10.1109/ISSRE.2013.6698919
   Attariyan M., 2010, P 9 USENIX S OP SYST, P1
   ATTARIYAN M., 2008, USENIX 2008 ANN TECH, P281, DOI DOI 10.5555/1404014.1404037
   Attariyan M., 2011, USENIX; login, V36, P27
   Attariyan Mona, 2012, P 10 USENIX C OP SYS, P307
   Behrang F, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P295, DOI 10.1145/2786805.2786869
   Berger T, 2010, IEEE RAD CONF, P75, DOI 10.1109/RADAR.2010.5494650
   Boucher Q., 2012, 2012 Proceedings of the 3rd International Workshop on Product LinE Approaches in Software Engineering (PLEASE 2012), P29, DOI 10.1109/PLEASE.2012.6229766
   Chen HW, 2009, 2009 INTERNATIONAL SYMPOSIUM ON COMPUTER NETWORK AND MULTIMEDIA TECHNOLOGY (CNMT 2009), VOLUMES 1 AND 2, P1045
   Chen W, 2016, P INT COMP SOFTW APP, P42, DOI 10.1109/COMPSAC.2016.95
   Chen W, 2014, INT CONF QUAL SOFTW, P184, DOI 10.1109/QSIC.2014.37
   Cohen MB, 2008, IEEE T SOFTWARE ENG, V34, P633, DOI 10.1109/TSE.2008.50
   Dai Huning, 2010, Int J Secur Softw Eng, V1, P41, DOI 10.4018/jsse.2010070103
   Debnath Biplob K., 2008, 2008 IEEE 24th International Conference on Data Engineering Workshop (ICDE Workshop), P11, DOI 10.1109/ICDEW.2008.4498279
   Denisov V., 2013, International Journal of Open Information Technologies, V1, P5
   Diao Y, 2003, IBM SYST J, V42, P136, DOI 10.1147/SJ.2003.5386833
   Dong Z, 2016, PROC INT SYMP SOFTW, P185, DOI 10.1109/ISSRE.2016.37
   Dong Z, 2015, PROC IEEE INT CONF S, P171, DOI 10.1109/ICSM.2015.7332463
   Dong Z, 2013, 2013 IEEE INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING WORKSHOPS (ISSREW), P162, DOI 10.1109/ISSREW.2013.6688897
   Eshete B, 2013, INT CONF SOFTW SECUR, P188, DOI 10.1109/SERE.2013.30
   Fouché S, 2009, ISSTA 2009: INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P177
   Gao J., 2011, P 2011 INT C SOFTW E, P495
   Gousios G., 2006, P 5 INT SYST ADM NET, P69
   Gousios G, 2013, IEEE WORK CONF MIN S, P233, DOI 10.1109/MSR.2013.6624034
   Guo JM, 2013, IEEE INT CONF AUTOM, P301, DOI 10.1109/ASE.2013.6693089
   Han X., 2016, P 10 INT S EMP SOFTW
   Huang S, 2012, PROC INT CONF SOFTW, P1451, DOI 10.1109/ICSE.2012.6227069
   Huang S, 2012, P INT COMP SOFTW APP, P312, DOI 10.1109/COMPSAC.2012.42
   Humble Jez, 2010, Continuous Delivery: Reliable Software Releases through Build, Test, and Deployment Automation
   Jha AK, 2017, IEEE WORK CONF MIN S, P25, DOI 10.1109/MSR.2017.41
   Jin D., P 36 INT C SOFTW ENG, P215
   Jin Dongpu, 2014, P 29 ACMIEEE INT C A, P151, DOI [10.1145/2642937.2643009, DOI 10.1145/2642937.2643009]
   Johnson R., 2010, MATHWORLD WOLFRAM WE
   Keller L, 2008, I C DEPEND SYS NETWO, P157, DOI 10.1109/DSN.2008.4630084
   Kiciman E, 2004, INTERNATIONAL CONFERENCE ON AUTONOMIC COMPUTING, PROCEEDINGS, P28, DOI 10.1109/ICAC.2004.1301344
   Kim C.H. P., 2013, Proceedings of the 2013 9th Joint Meeting on Foundations of Software Engineering, P257
   Kitchenham B., 2007, 23 EBSE, DOI DOI 10.1145/1134285.1134500
   Lengauer P., 2014, INT C PERFORMANCE EN, P111
   Lillack Max, 2014, Proceedings of the 29th ACM/IEEE International Conference on Automated Software Engineering, P445, DOI 10.1145/2642937.2643001
   Marijan D, 2017, IEEE INT CONF SOFTW, P524, DOI 10.1109/ICST.2017.60
   McConnell S., 2009, Code Complete
   Meinicke J, 2016, IEEE INT CONF AUTOM, P483, DOI 10.1145/2970276.2970322
   Mickens J., 2007, P 2 USENIX WORKSH TA
   Murakami Y., 2011, Proceedings of the 2011 International Conference on Complex, Intelligent and Software Intensive Systems (CISIS 2011), P653, DOI 10.1109/CISIS.2011.109
   Offutt AJ, 2001, KLUW INT S ADV DATA, V24, P34
   Osogami T., PERFORM EVAL REV, V34, P264
   Osogami T, 2007, PERF E R SI, V35, P145
   Otsuka H, 2015, P INT COMP SOFTW APP, P141, DOI 10.1109/COMPSAC.2015.222
   Perrouin G, 2016, 2016 IEEE/ACM 1ST INTERNATIONAL WORKSHOP ON VARIABILITY AND COMPLEXITY IN SOFTWARE DESIGN (VACE), P28, DOI [10.1109/VACE.2016.014, 10.1145/2897045.2897051]
   Qu X., 2008, P 2008 INT S SOFTW T, P75
   Qu X, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P129, DOI 10.1109/ICSM.2012.6405263
   Qu X, 2011, 22ND IEEE INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING (ISSRE), P140, DOI 10.1109/ISSRE.2011.9
   Qu X, 2009, PROC INT CONF SOFTW, P375, DOI 10.1109/ICSE-COMPANION.2009.5071025
   Rabkin A., 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P193, DOI 10.1109/ASE.2011.6100053
   Rabkin A, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P131, DOI 10.1145/1985793.1985812
   Raghavachari M, 2003, PROC INT CONF SOFTW, P484, DOI 10.1109/ICSE.2003.1201226
   Rahman M. T., 2016, P 13 INT C MIN SOFTW, P201, DOI DOI 10.1145/2901739.2901745
   Ramachandran V, 2009, ACM/IEEE SIXTH INTERNATIONAL CONFERENCE ON AUTONOMIC COMPUTING AND COMMUNICATIONS (ICAC '09), P169
   Razavi SM, 2011, ACM S MODEL ANAL SIM, P285
   Reisner E., 2000, P 32 INT C SOFTW ENG, V1, P445
   Robinson Brian, 2008, 2008 IEEE International Symposium on Software Reliability Engineering, P177, DOI 10.1109/ISSRE.2008.46
   Rugg G., 2008, EXPERT SYST, V22, P94
   Sarkar A, 2015, IEEE INT CONF AUTOM, P342, DOI 10.1109/ASE.2015.45
   Sayagh M, 2017, IEEE INT WORK C SO, P41, DOI 10.1109/SCAM.2017.25
   Sayagh M, 2017, PROC INT CONF SOFTW, P255, DOI 10.1109/ICSE.2017.31
   Sayagh M, 2015, IEEE INT WORK C SO, P31, DOI 10.1109/SCAM.2015.7335399
   Siegmund N, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P284, DOI 10.1145/2786805.2786845
   Siegmund N, 2012, PROC INT CONF SOFTW, P167, DOI 10.1109/ICSE.2012.6227196
   Singh R, 2016, PROCEEDINGS OF THE 2016 ACM/SPEC INTERNATIONAL CONFERENCE ON PERFORMANCE ENGINEERING (ICPE'16), P309, DOI 10.1145/2851553.2851576
   Sommerville I., 2010, SOFTWARE ENG
   Song C, 2014, IEEE T SOFTWARE ENG, V40, P251, DOI 10.1109/TSE.2013.55
   Song C, 2012, PROC INT CONF SOFTW, P903, DOI 10.1109/ICSE.2012.6227129
   Souto S, 2018, J SYST SOFTWARE, V137, P733, DOI 10.1016/j.jss.2017.08.010
   Souto S, 2017, PROC INT CONF SOFTW, P632, DOI 10.1109/ICSE.2017.64
   Sun LS, 2008, INT CONF QUAL SOFTW, P87, DOI 10.1109/QSIC.2008.4
   Swanson J, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P377, DOI 10.1145/2635868.2635915
   Nguyen T, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P655, DOI 10.1145/2950290.2950311
   Thonangi R., 2008, 2008 IEEE INT S MODE, P1
   Toman J., 2016, LIPICS LEIBNIZ INT P, V56
   Wang Bo, 2013, Jingji Dongwu Xuebao, V17, P82
   Wang HJ, 2004, USENIX Association Proceedings of the Sixth Symposium on Operating Systems Design and Implementation (OSDE '04), P245
   Wang R, 2008, CCS'08: PROCEEDINGS OF THE 15TH ACM CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P245
   Wang YM, 2004, SCI COMPUT PROGRAM, V53, P143, DOI 10.1016/j.scico.2003.12.009
   Wen W, 2016, PROC INT SYMP SOFTW, P150, DOI 10.1109/ISSRE.2016.29
   Whitaker A, 2004, USENIX Association Proceedings of the Sixth Symposium on Operating Systems Design and Implementation (OSDE '04), P77
   Xi B., 2004, P P 13 INT C WORLD W, P287, DOI DOI 10.1145/988672.988711
   Xie X, 2014, P INT COMP SOFTW APP, P107, DOI 10.1109/COMPSAC.2014.17
   Xiong YF, 2015, IEEE T SOFTWARE ENG, V41, P603, DOI 10.1109/TSE.2014.2383381
   Xiong YF, 2012, PROC INT CONF SOFTW, P58, DOI 10.1109/ICSE.2012.6227206
   Xu BW, 2015, ASIA PAC SOFWR ENG, P206, DOI 10.1109/APSEC.2015.38
   Xu T., 2015, ACM COMPUT SURV, V47, P1
   Xu TY, 2013, SOSP'13: PROCEEDINGS OF THE TWENTY-FOURTH ACM SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES, P244, DOI 10.1145/2517349.2522727
   Xu TY, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P307, DOI 10.1145/2786805.2786852
   Xu X., 2017, P 29 INT C SOFTW ENG, P295
   Ya-Yunn Su, 2007, Operating Systems Review, V41, P237, DOI 10.1145/1323293.1294284
   Yin ZN, 2011, SOSP 11: PROCEEDINGS OF THE TWENTY-THIRD ACM SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES, P159
   Zhang JQ, 2014, ACM SIGPLAN NOTICES, V49, P687, DOI 10.1145/2541940.2541983
   Zhang S, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P152, DOI 10.1145/2568225.2568251
   Zhang S, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P1438, DOI 10.1109/ICSE.2013.6606737
   Zhang S, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P312, DOI 10.1109/ICSE.2013.6606577
   Zhang SF, 2015, ORG ELECTRON, V24, P12, DOI 10.1016/j.orgel.2015.05.021
   Zhang Y, 2015, IEEE INT CONF AUTOM, P365, DOI 10.1109/ASE.2015.15
   Zheng W, 2011, P 2 ACM SPEC INT C P, P283, DOI [10.1145/1958746.1958786, DOI 10.1145/1958746.1958786]
   Zhou SL, 2016, 2016 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY AND SECURITY COMPANION (QRS-C 2016), P228, DOI 10.1109/QRS-C.2016.35
NR 110
TC 20
Z9 23
U1 3
U2 13
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUN 1
PY 2020
VL 46
IS 6
BP 646
EP 673
DI 10.1109/TSE.2018.2867847
PG 28
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA MC6BB
UT WOS:000543368800003
DA 2024-07-18
ER

PT J
AU Xue, YX
   Xu, ZZ
   Chandramohan, M
   Liu, Y
AF Xue, Yinxing
   Xu, Zhengzi
   Chandramohan, Mahinthan
   Liu, Yang
TI Accurate and Scalable Cross-Architecture Cross-OS Binary Code Search
   with Emulation
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Binary codes; Semantics; Tools; Feature extraction; Cloning; Syntactics;
   Emulation; Binary code search; binary clone detection; vulnerability
   matching; emulation; 3D-CFG
ID SIMILARITY
AB Different from source code clone detection, clone detection (similar code search) in binary executables faces big challenges due to the gigantic differences in the syntax and the structure of binary code that result from different configurations of compilers, architectures and OSs. Existing studies have proposed different categories of features for detecting binary code clones, including CFG structures, n-gram in CFG, input/output values, etc. In our previous study and the tool BinGo, to mitigate the huge gaps in CFG structures due to different compilation scenarios, we propose a selective inlining technique to capture the complete function semantics by inlining relevant library and user-defined functions. However, only features of input/output values are considered in BinGo. In this study, we propose to incorporate features from different categories (e.g., structural features and high-level semantic features) for accuracy improvement and emulation for efficiency improvement. We empirically compare our tool, BinGo-E, with the pervious tool BinGo and the available state-of-the-art tools of binary code search in terms of search accuracy and performance. Results show that BinGo-E achieves significantly better accuracies than BinGo for cross-architecture matching, cross-OS matching, cross-compiler matching and intra-compiler matching. Additionally, in the new task of matching binaries of forked projects, BinGo-E also exhibits a better accuracy than the existing benchmark tool. Meanwhile, BinGo-E takes less time than BinGo during the process of matching.
C1 [Xue, Yinxing] Univ Sci Technol China, Hefei 230026, Anhui, Peoples R China.
   [Xu, Zhengzi; Chandramohan, Mahinthan; Liu, Yang] Nanyang Technol Univ, Singapore 637553, Singapore.
C3 Chinese Academy of Sciences; University of Science & Technology of
   China, CAS; Nanyang Technological University
RP Xue, YX (corresponding author), Univ Sci Technol China, Hefei 230026, Anhui, Peoples R China.
EM yxxue@ustc.edu.cn; XU0001ZI@e.ntu.edu.sg; mahintha001@e.ntu.edu.sg;
   yangliu@ntu.edu.sg
RI yang, liu/HTN-9175-2023; LIU, YANG/HWQ-4615-2023; Liu, Yang/D-2306-2013;
   liu, yang/HQY-7531-2023; liu, yang/HIU-0559-2022; yang,
   liu/GVU-8760-2022; liu, yang/HHY-8583-2022; Liu, Yang/HNJ-6693-2023
OI Liu, Yang/0000-0001-7300-9215; 
FU National Research Foundation, Singapore under its National Cybersecurity
   RD Program [NRF2014NCR-NCR001-30]; CAS Pioneer Hundred Talents Program
   of China
FX This research is supported in part by the National Research Foundation,
   Singapore under its National Cybersecurity R&D Program (Award No.
   NRF2014NCR-NCR001-30). The research of Dr Xue is also supported by CAS
   Pioneer Hundred Talents Program of China.
CR Agrawal Parag., 2010, Proceedings of the 2010 ACM SIGMOD International Conference on Management of data, P927
   [Anonymous], 2016, P NETW DISTR SYST SE
   [Anonymous], 2003, ALAN APT SERIES
   [Anonymous], 2014, P 21 ANN NETW DISTR
   [Anonymous], 2016, P 25 INT S SOFTWARE, DOI DOI 10.1145/2931037.2931047
   Balakrishnan G., 2005, Verified Software: Theories, Tools, Experiments. First IFIP TC 2/WG 2.3 Conference, VSTTE 2005. (Lecture Notes in Computer Science vol. 4171), P202
   Bourquin M., 2013, P 2 ACM SIGPLAN PROG, P1, DOI [10.1145/2430553.2430557, DOI 10.1145/2430553.2430557]
   Bruschi D, 2006, LECT NOTES COMPUT SC, V4064, P129
   Caballero J., 2009, Binary code extraction and interface identification for security applications
   Canali D., 2012, P 2012 INT S SOFTW T, P122, DOI [10.1145/2338965.2336768, DOI 10.1145/2338965.2336768]
   Chan PPF, 2014, INT CONF QUAL SOFTW, P95, DOI 10.1109/QSIC.2014.28
   Chandramohan M, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P678, DOI 10.1145/2950290.2950350
   CHANG PP, 1992, SOFTWARE PRACT EXPER, V22, P349, DOI 10.1002/spe.4380220502
   Chen K, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P175, DOI 10.1145/2568225.2568286
   David Y, 2016, ACM SIGPLAN NOTICES, V51, P266, DOI [10.1145/2908080.2908126, 10.1145/2980983.2908126]
   David Y, 2014, ACM SIGPLAN NOTICES, V49, P349, DOI [10.1145/2594291.2594343, 10.1145/2666356.2594343]
   de Moura L, 2008, LECT NOTES COMPUT SC, V4963, P337, DOI 10.1007/978-3-540-78800-3_24
   Dullien T., 2009, P CANSECWEST, P1
   Egele M, 2014, PROCEEDINGS OF THE 23RD USENIX SECURITY SYMPOSIUM, P303
   Flake H., 2004, Proceedings of the Detection of Intrusions and Malware Vulnerability Assessment, GI SIG SIDAR Workshop, DIMVA 2004, Dortmund, Germany, 6-7 July 2004, P161, DOI [10.17877/DE290R-2007, DOI 10.17877/DE290R-2007]
   Gabel M, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P321, DOI 10.1145/1368088.1368132
   Gao DB, 2008, LECT NOTES COMPUT SC, V5308, P238
   Hemel A., 2011, P 8 WORK C MIN SOFTW, P63
   Hu YK, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P57, DOI 10.1109/SANER.2016.50
   Jang J., 2013, P 22 USENIX C SEC, P81, DOI [10.5555/2534766.2534774, DOI 10.5555/2534766.2534774]
   Jhi YC, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P756, DOI 10.1145/1985793.1985899
   Jiang LX, 2007, PROC INT CONF SOFTW, P96
   Jiang LX, 2009, ISSTA 2009: INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P81
   Kamiya T, 2002, IEEE T SOFTWARE ENG, V28, P654, DOI 10.1109/TSE.2002.1019480
   Kawakoya Y, 2013, LECT NOTES COMPUT SC, V8145, P123, DOI 10.1007/978-3-642-41284-4_7
   Kim D, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P1128, DOI 10.1145/2568225.2568296
   Kim H, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P301, DOI 10.1145/1985793.1985835
   Kim S, 2017, P IEEE S SECUR PRIV, P595, DOI 10.1109/SP.2017.62
   Kolbitsch C, 2009, P 18 C USENIX SEC S, P351, DOI DOI 10.1093/MP/SSQ045
   Kruegel C., 2005, Recent Advances in Intrusion Detection. 8th International Symposium, RAID 2005. Revised Papers (Lecture Notes in Computer Science Vol. 3858), P207
   Luo LN, 2017, IEEE T SOFTWARE ENG, V43, P1157, DOI 10.1109/TSE.2017.2655046
   Luo LN, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P389, DOI 10.1145/2635868.2635900
   Meng D, 2016, PROCEEDINGS OF 2016 INTERNATIONAL CONFERENCE ON AUDIO, LANGUAGE AND IMAGE PROCESSING (ICALIP), P306, DOI 10.1109/ICALIP.2016.7846591
   Ming J, 2015, IFIP ADV INF COMM TE, V455, P416, DOI 10.1007/978-3-319-18467-8_28
   Pewny J., 2014, P 30 ANN COMP SEC AP, P406, DOI [10.1145/2664243.2664269, DOI 10.1145/2664243.2664269]
   Pewny J, 2015, P IEEE S SECUR PRIV, P709, DOI 10.1109/SP.2015.49
   Rosenblum N, 2011, LECT NOTES COMPUT SC, V6879, P172, DOI 10.1007/978-3-642-23822-2_10
   Rosenblum Nathan E., 2010, P 9 ACM SIGPLAN SIGS, P21, DOI [10.1145/1806672.1806678, DOI 10.1145/1806672.1806678]
   Sæbjornsen A, 2009, ISSTA 2009: INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P117
   Schkufza E, 2013, ACM SIGPLAN NOTICES, V48, P305, DOI 10.1145/2499368.2451150
   Wang Minghua, 2015, P 31 ANN COMP SEC AP, P331, DOI DOI 10.1145/2818000.2818017
   Zhang F., 2012, Proceedings of the 2012 International Symposium on Software Testing and Analysis, ACM, P111
   Zhang Xiangyu., 2005, ESECFSE 13, P197
   Zhong H, 2009, LECT NOTES COMPUT SC, V5653, P318, DOI 10.1007/978-3-642-03013-0_15
NR 49
TC 34
Z9 38
U1 0
U2 17
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD NOV 1
PY 2019
VL 45
IS 11
BP 1125
EP 1149
DI 10.1109/TSE.2018.2827379
PG 25
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA JO3UP
UT WOS:000497506400004
DA 2024-07-18
ER

PT J
AU Margheri, A
   Masi, M
   Pugliese, R
   Tiezzi, F
AF Margheri, Andrea
   Masi, Massimiliano
   Pugliese, Rosario
   Tiezzi, Francesco
TI A Rigorous Framework for Specification, Analysis and Enforcement of
   Access Control Policies
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Attribute-based access control; policy languages; policy analysis; SMT
ID LOGIC
AB Access control systems are widely used means for the protection of computing systems. They are defined in terms of access control policies regulating the access to system resources. In this paper, we introduce a formally-defined, fully-implemented framework for specification, analysis and enforcement of attribute-based access control policies. The framework rests on FACPL, a language with a compact, yet expressive, syntax for specification of real-world access control policies and with a rigorously defined denotational semantics. The framework enables the automated verification of properties regarding both the authorisations enforced by single policies and the relationships among multiple policies. Effectiveness and performance of the analysis rely on a semantic-preserving representation of FACPL policies in terms of SMT formulae and on the use of efficient SMT solvers. Our analysis approach explicitly addresses some crucial aspects of policy evaluation, such as missing attributes, erroneous values and obligations, which are instead overlooked in other proposals. The framework is supported by Java-based tools, among which an Eclipse-based IDE offering a tailored development and analysis environment for FACPL policies and a Java library for policy enforcement. We illustrate the framework and its formal ingredients by means of an e-Health case study, while its effectiveness is assessed by means of performance stress tests and experiments on a well-established benchmark.
C1 [Margheri, Andrea] Univ Southampton, Sch Elect & Comp Sci, Southampton SO17 1BJ, Hants, England.
   [Masi, Massimiliano] Tiani Spirit GmbH, A-1220 Vienna, Austria.
   [Pugliese, Rosario] Univ Firenze, Dipartimento Stat, Informat, Applicaz G Parenti, I-50121 Florence, Italy.
   [Tiezzi, Francesco] Univ Camerino, Scuola Sci & Tecnol, I-62032 Camerino, Italy.
C3 University of Southampton; University of Florence; University of
   Camerino
RP Margheri, A (corresponding author), Univ Southampton, Sch Elect & Comp Sci, Southampton SO17 1BJ, Hants, England.
EM a.margheri@soton.ac.uk; massimiliano.masi@tiani-spirit.com;
   rosario.pugliese@unifi.it; francesco.tiezzi@unicam.it
RI Pugliese, Rosario/J-3685-2012; Masi, Massimiliano/AAB-6342-2019
OI Pugliese, Rosario/0000-0002-1419-1405; Margheri,
   Andrea/0000-0002-5048-8070; TIEZZI, Francesco/0000-0003-4740-7521; Masi,
   Massimiliano/0000-0003-4737-7107
FU EPSRC [EP/K003968/1, EP/R007268/1] Funding Source: UKRI
CR [Anonymous], 2000, 2753 IETF RFC
   [Anonymous], 2013, ARTICLE 29 DATA PROTECTION WORKING PARTY
   [Anonymous], 2017, FACPL HLTH CASE STUD
   [Anonymous], 2017, ELECT HLTH RECORD AU
   [Anonymous], 2017, FACPL TOOLS PERFORMA
   [Anonymous], 2017, TIANI SPIRIT SOFTWAR
   [Anonymous], 2007, P 16 INT C WORLD WID
   Arkoudas K, 2014, ACM T INFORM SYST SE, V16, DOI 10.1145/2595222
   Axiomatics, 2017, AX LANG AUTH ALFA
   Bandara AK, 2003, IEEE 4TH INTERNATIONAL WORKSHOP ON POLICIES FOR DISTRIBUTED SYSTEMS AND NETWORKS, PROCEEDINGS, P26
   Barrett Clark, 2011, Computer Aided Verification. Proceedings 23rd International Conference, CAV 2011, P171, DOI 10.1007/978-3-642-22110-1_14
   Bertolino Antonia, 2012, Proceedings of the 8th International Conference on Web Information Systems and Technologies. WEBIST 2012, P155
   Bettini C., 2003, Journal of Network and Systems Management, V11, P351, DOI 10.1023/A:1025711105609
   Brucker AD, 2009, SACMAT'09: PROCEEDINGS OF THE 14TH ACM SYMPOSIUM ON ACCESS CONTROL MODELS AND TECHNOLOGIES, P197, DOI 10.1145/1542207.1542239
   Carniani E, 2016, FUTURE GENER COMP SY, V63, P37, DOI 10.1016/j.future.2016.04.010
   Ceri S., 1989, IEEE Transactions on Knowledge and Data Engineering, V1, P146, DOI 10.1109/69.43410
   Crampton J., 2015, P 20 ACM S ACCESS CO, P99
   Crampton J, 2015, LECT NOTES COMPUT SC, V9331, P220, DOI 10.1007/978-3-319-24858-5_14
   Crampton J, 2012, LECT NOTES COMPUT SC, V7215, P390, DOI 10.1007/978-3-642-28641-4_21
   Damianou N, 2001, LECT NOTES COMPUT SC, V1995, P18
   de Moura L, 2008, LECT NOTES COMPUT SC, V4963, P337, DOI 10.1007/978-3-540-78800-3_24
   De Moura L, 2011, COMMUN ACM, V54, P69, DOI 10.1145/1995376.1995394
   DeTreville J, 2002, P IEEE S SECUR PRIV, P105, DOI 10.1109/SECPRI.2002.1004365
   Dutertre B, 2014, LECT NOTES COMPUT SC, V8559, P737, DOI 10.1007/978-3-319-08867-9_49
   Ferraiolo D.F., 1992, 15 NATL COMPUTER SEC, P554
   Fisler K, 2005, PROC INT CONF SOFTW, P196
   Gail-Joon Ahn, 2010, 2010 IEEE Proceedings of 34th Annual Computer Software and Applications Conference (COMPSAC 2010), P137, DOI 10.1109/COMPSAC.2010.20
   Han WL, 2012, COMPUT NETW, V56, P477, DOI 10.1016/j.comnet.2011.09.014
   Hashimoto M, 2009, EIGHTH IEEE INTERNATIONAL CONFERENCE ON DEPENDABLE, AUTONOMIC AND SECURE COMPUTING, PROCEEDINGS, P37, DOI 10.1109/DASC.2009.129
   Health Level Seven organization, 2017, HL7 STAND
   Hilty M, 2005, LECT NOTES COMPUT SC, V3679, P98
   Hu VC, 2015, COMPUTER, V48, P85, DOI 10.1109/MC.2015.33
   Hughes Graham, 2008, International Journal on Software Tools for Technology Transfer, V10, P503, DOI 10.1007/s10009-008-0087-9
   Jackson D, 2002, ACM T SOFTW ENG METH, V11, P256, DOI 10.1145/505145.505149
   Jajodia S, 1997, P IEEE S SECUR PRIV, P31, DOI 10.1109/SECPRI.1997.601312
   Jin X, 2012, LECT NOTES COMPUT SC, V7371, P41, DOI 10.1007/978-3-642-31540-4_4
   Kovac M, 2014, COMPUTER, V47, P34, DOI 10.1109/MC.2014.282
   Krishnamurthi S, 2003, LECT NOTES COMPUT SC, V2562, P2
   Kwiatkowska Marta, 2009, Performance Evaluation Review, V36, P40, DOI 10.1145/1530873.1530882
   Lampson B. W., 1974, Operating Systems Review, V8, P18, DOI 10.1145/775265.775268
   Lazouski A, 2010, COMPUT SCI REV, V4, P81, DOI 10.1016/j.cosrev.2010.02.002
   Li NH, 2009, SACMAT'09: PROCEEDINGS OF THE 14TH ACM SYMPOSIUM ON ACCESS CONTROL MODELS AND TECHNOLOGIES, P135
   Margheri A., 2013, P INT WORKSH WEB SER, P85
   Margheri A, 2015, ELECTRON PROC THEOR, P33, DOI 10.4204/EPTCS.188.5
   Margheri A, 2013, 2013 IEEE 10TH INTERNATIONAL CONFERENCE ON AND 10TH INTERNATIONAL CONFERENCE ON AUTONOMIC AND TRUSTED COMPUTING (UIC/ATC) UBIQUITOUS INTELLIGENCE AND COMPUTING, P404, DOI 10.1109/UIC-ATC.2013.33
   Marinovic S, 2014, ACM T INFORM SYST SE, V17, DOI 10.1145/2629502
   Masi M, 2012, LECT NOTES COMPUT SC, V7159, P60, DOI 10.1007/978-3-642-28166-2_7
   Microsoft Research, 2017, Z3 A GUID
   NIST, 2009, SURV ACC CONTR MOD
   Pretschner A, 2006, COMMUN ACM, V49, P39, DOI 10.1145/1151030.1151053
   Ramli C. D. P. K., 2012, LNCS, P89
   Ramli CDPK, 2014, SCI COMPUT PROGRAM, V83, P80, DOI 10.1016/j.scico.2013.05.003
   Rao P, 2009, SACMAT'09: PROCEEDINGS OF THE 14TH ACM SYMPOSIUM ON ACCESS CONTROL MODELS AND TECHNOLOGIES, P63, DOI 10.1145/1542207.1542218
   Sloman M., 1994, Journal of Network and Systems Management, V2, P333, DOI 10.1007/BF02283186
   Sloman M, 2010, COMPUT J, V53, P1113, DOI 10.1093/comjnl/bxp102
   Tschantz M. C., 2006, SACMAT 2006. Proceedings of Eleventh ACM Symposium on Access Control Models and Technologies, P160
   Turkmen Fatih, 2015, Principles of Security and Trust. 4th International Conference, POST 2015, held as part of the European Joint Conferences on Theory and Practice of Software, ETAPS 2015. Proceedings: LNCS 9036, P115, DOI 10.1007/978-3-662-46666-7_7
   Twidle K, 2009, ICAS: 2009 FIFTH INTERNATIONAL CONFERENCE ON AUTONOMIC AND AUTONOMOUS SYSTEMS, P330, DOI 10.1109/ICAS.2009.42
   WSO2, 2017, BAL UI XACML
   WSO2, 2017, BAL OP SOURC XACML I
NR 60
TC 12
Z9 12
U1 0
U2 9
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JAN
PY 2019
VL 45
IS 1
BP 2
EP 33
DI 10.1109/TSE.2017.2765640
PG 32
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA HH4ZO
UT WOS:000455735600002
OA Green Submitted, Green Published, Green Accepted
DA 2024-07-18
ER

EF