FN Clarivate Analytics Web of Science
VR 1.0
PT J
AU Zhou, Y
   Yang, XY
   Chen, TL
   Huang, ZQ
   Ma, XX
   Gall, H
AF Zhou, Yu
   Yang, Xinying
   Chen, Taolue
   Huang, Zhiqiu
   Ma, Xiaoxing
   Gall, Harald
TI Boosting API Recommendation With Implicit Feedback
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Task analysis; Software; Feature extraction; Training; Programming;
   History; Engines; API recommendation; learning to rank; active learning;
   natural language processing
ID CODE; EFFICIENT; CONTEXT; QUERY
AB Developers often need to use appropriate APIs to program efficiently, but it is usually a difficult task to identify the exact one they need from a vast list of candidates. To ease the burden, a multitude of API recommendation approaches have been proposed. However, most of the currently available API recommenders do not support the effective integration of user feedback into the recommendation loop. In this paper, we propose a framework, BRAID (Boosting RecommendAtion with Implicit FeeDback), which leverages learning-to-rank and active learning techniques to boost recommendation performance. By exploiting user feedback information, we train a learning-to-rank model to re-rank the recommendation results. In addition, we speed up the feedback learning process with active learning. Existing query-based API recommendation approaches can be plugged into BRAID. We select three state-of-the-art API recommendation approaches as baselines to demonstrate the performance enhancement of BRAID measured by Hit@k (Top-k), MAP, and MRR. Empirical experiments show that, with acceptable overheads, the recommendation performance improves steadily and substantially with the increasing percentage of feedback data, comparing with the baselines.
C1 [Zhou, Yu; Yang, Xinying; Huang, Zhiqiu] Nanjing Univ Aeronaut & Astronaut, Coll Comp Sci & Technol, Nanjing 210016, Peoples R China.
   [Zhou, Yu; Chen, Taolue; Ma, Xiaoxing] Nanjing Univ, State Key Lab Novel Software Technol, Nanjing 210023, Peoples R China.
   [Chen, Taolue] Univ Surrey, Dept Comp Sci, Guildford GU2 7XH, Surrey, England.
   [Gall, Harald] Univ Zurich, Dept Informat, CH-8006 Zurich, Switzerland.
C3 Nanjing University of Aeronautics & Astronautics; Nanjing University;
   University of Surrey; University of Zurich
RP Zhou, Y (corresponding author), Nanjing Univ Aeronaut & Astronaut, Coll Comp Sci & Technol, Nanjing 210016, Peoples R China.
EM zhouyu@nuaa.edu.cn; xy_yang@nuaa.edu.cn; taolue.chen@surrey.ac.uk;
   zqhuang@nuaa.edu.cn; xxm@ics.nju.edu.cn; gall@ifi.uzh.ch
RI Ma, Xiaoxing/K-4290-2012
OI Gall, Harald/0000-0002-3874-5628; Zhou, Yu/0000-0002-3723-7584; Chen,
   Taolue/0000-0002-5993-1665
FU National Key R&D Program of China [2018YFB1003902]; National Natural
   Science Foundation of China [61972197]; Natural Science Foundation of
   Jiangsu Province [BK20201292]; Collaborative Innovation Center of Novel
   Software Technology and Industrialization; Qing Lan Project; NSFC
   [61872340]; Guangdong Science and Technology Department
   [2018B010107004]; Birkbeck BEI School Project (ARTEFACT)
FX This work was partially supported by the National Key R&D Program of
   China under Grant No. 2018YFB1003902, the National Natural Science
   Foundation of China under Grant 61972197, the Natural Science Foundation
   of Jiangsu Province under Grant No. BK20201292, the Collaborative
   Innovation Center of Novel Software Technology and Industrialization,
   and the Qing Lan Project. T. Chen is partially supported by Birkbeck BEI
   School Project (ARTEFACT), NSFC Grant No. 61872340, and Guangdong
   Science and Technology Department Grant No. 2018B010107004.
CR Ai L, 2019, P INT COMP SOFTW APP, P27, DOI 10.1109/COMPSAC.2019.00014
   Nguyen AT, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P511, DOI 10.1145/2950290.2950333
   [Anonymous], 2009, Technical report
   [Anonymous], 1998, Computer Networks and ISDN Systems, DOI [DOI 10.1016/S0169-7552(98)00110-X, 10.1016/S0169-7552(98)00110-X]
   [Anonymous], 2006, P ADV NEUR INF PROC
   Arcuri A, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1, DOI 10.1145/1985793.1985795
   Asaduzzaman M, 2017, PROC IEEE INT CONF S, P456, DOI 10.1109/ICSME.2017.80
   Asaduzzaman M, 2014, PROC IEEE INT CONF S, P71, DOI 10.1109/ICSME.2014.29
   Brandt J, 2009, CHI2009: PROCEEDINGS OF THE 27TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, VOLS 1-4, P1589
   Burges Christopher J. C., 2010, Learning, V11, P81
   Cao Z., 2007, P 24 INT C MACHINE L, P129, DOI DOI 10.1145/1273496.1273513
   Carpineto C, 2012, ACM COMPUT SURV, V44, DOI 10.1145/2071389.2071390
   Chen TQ, 2016, KDD'16: PROCEEDINGS OF THE 22ND ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P785, DOI 10.1145/2939672.2939785
   Culotta Aron, 2005, Proceeding of the 20th National Conference on Artificial Intelligenc(AAAI-2005), V2, P746
   Daqing Hou, 2011, 2011 IEEE 27th International Conference on Software Maintenance, P233, DOI 10.1109/ICSM.2011.6080790
   Feldt R, 2010, 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING & KNOWLEDGE ENGINEERING (SEKE 2010), P374
   Fowkes J, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P254, DOI 10.1145/2950290.2950319
   Freund Y, 2004, J MACH LEARN RES, V4, P933, DOI 10.1162/1532443041827916
   Gasparic M, 2016, J SYST SOFTWARE, V113, P101, DOI 10.1016/j.jss.2015.11.036
   Gu XD, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P933, DOI 10.1145/3180155.3180167
   Gu XD, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P631, DOI 10.1145/2950290.2950334
   Haiduc S, 2011, CONF PROC INT SYMP C, P234, DOI 10.1109/ICPC.2011.48
   Holmes R, 2005, PROC INT CONF SOFTW, P117
   Hu YF, 2008, IEEE DATA MINING, P263, DOI 10.1109/ICDM.2008.22
   Huang Q, 2018, IEEE INT CONF AUTOM, P293, DOI 10.1145/3238147.3238191
   Jinqiu Yang, 2012, 2012 9th IEEE Working Conference on Mining Software Repositories (MSR 2012), P161, DOI 10.1109/MSR.2012.6224276
   Lewis D.D., 1994, MACH LEARN P 1994, P148
   Li XY, 2018, INT CON DISTR COMP S, P1, DOI 10.1109/ICDCS.2018.00011
   Liu JY, 2019, INT CONF COMP SCI ED, P273, DOI [10.1109/iccse.2019.8845349, 10.1109/ICCSE.2019.8845349]
   Liu XY, 2018, IEEE INT CONF AUTOM, P282, DOI 10.1145/3238147.3238216
   Luan SF, 2019, P ACM PROGRAM LANG, V3, DOI 10.1145/3360578
   McMillan C, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P111, DOI 10.1145/1985793.1985809
   Mihalcea R., 2006, P 21 NAT C ART INT, V6, P775
   Nguyen PT, 2019, PROC INT CONF SOFTW, P1050, DOI 10.1109/ICSE.2019.00109
   Nie LM, 2016, IEEE T SERV COMPUT, V9, P771, DOI 10.1109/TSC.2016.2560165
   Niu HR, 2017, EMPIR SOFTW ENG, V22, P259, DOI 10.1007/s10664-015-9421-5
   Oard DouglasW., 1998, P AAAI WORKSHOP RECO, P81
   Piccioni Marco, 2013, 2013 ACM / IEEE International Symposium on Empirical Software Engineering and Measurement (ESEM), P5, DOI 10.1109/ESEM.2013.14
   Ponzanelli L, 2017, PROC INT CONF SOFTW, P94, DOI 10.1109/ICSE.2017.17
   Rahman MM, 2019, EMPIR SOFTW ENG, V24, P1869, DOI 10.1007/s10664-018-9671-0
   Rahman MM, 2018, PROC IEEE INT CONF S, P473, DOI 10.1109/ICSME.2018.00057
   Rahman MM, 2016, IEEE INT CONF AUTOM, P220, DOI 10.1145/2970276.2970362
   Rahman MM, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P349, DOI 10.1109/SANER.2016.80
   Raychev V, 2014, ACM SIGPLAN NOTICES, V49, P419, DOI [10.1145/2594291.2594321, 10.1145/2666356.2594321]
   Resnick P, 1997, COMMUN ACM, V40, P56, DOI 10.1145/245108.245121
   Robillard MP, 2010, IEEE SOFTWARE, V27, P80, DOI 10.1109/MS.2009.161
   Rusk N, 2016, NAT METHODS, V13, P35, DOI 10.1038/nmeth.3707
   Sadowski C, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P191, DOI 10.1145/2786805.2786855
   SALTON G, 1990, J AM SOC INFORM SCI, V41, P288, DOI 10.1002/(SICI)1097-4571(199006)41:4<288::AID-ASI8>3.0.CO;2-H
   Sanderson M, 2010, NAT LANG ENG, V16, P100, DOI 10.1017/S1351324909005129
   Silva RFG, 2019, INT C PROGRAM COMPRE, P358, DOI 10.1109/ICPC.2019.00054
   Song Y, 2014, WSDM'14: PROCEEDINGS OF THE 7TH ACM INTERNATIONAL CONFERENCE ON WEB SEARCH AND DATA MINING, P83, DOI 10.1145/2556195.2556234
   Nguyen TT, 2015, IEEE INT CONF AUTOM, P795, DOI 10.1109/ASE.2015.109
   Thung F, 2017, IEEE TETCI, V1, P145, DOI 10.1109/TETCI.2017.2699222
   Thung F, 2013, IEEE INT CONF AUTOM, P290, DOI 10.1109/ASE.2013.6693088
   Tie-Yan Liu, 2009, Foundations and Trends in Information Retrieval, V3, P225, DOI 10.1561/1500000016
   Vargha A, 2000, J EDUC BEHAV STAT, V25, P101, DOI 10.3102/10769986025002101
   Wang S., 2014, ACM/IEEE International Conference on Automated Software Engineering, ASE '14, Vasteras, Sweden - September 15 - 19, 2014, P677
   White M, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P334, DOI 10.1109/MSR.2015.38
   Xia F., 2008, P 25 INT C MACH LEAR, P1192, DOI DOI 10.1145/1390156.1390306
   Ye X, 2016, PROC INT CONF SOFTW, P404, DOI 10.1145/2884781.2884862
   Ye X, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P689, DOI 10.1145/2635868.2635874
   Yu HB, 2016, 8TH ASIA-PACIFIC SYMPOSIUM ON INTERNETWARE (INTERNETWARE 2016), P45, DOI 10.1145/2993717.2993727
   Yuan WZ, 2019, INFORM SOFTWARE TECH, V107, P30, DOI 10.1016/j.infsof.2018.10.010
   Yunbo Cao, 2006, Proceedings of the Twenty-Ninth Annual International ACM SIGIR Conference on Research and Development in Information Retrieval, P186
NR 65
TC 21
Z9 22
U1 1
U2 16
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUN 1
PY 2022
VL 48
IS 6
BP 2157
EP 2172
DI 10.1109/TSE.2021.3053111
PG 16
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 2D5IM
UT WOS:000811580600020
OA Green Submitted, Green Accepted
DA 2024-07-18
ER

PT J
AU Yao, XJ
   Zhang, GJ
   Pan, F
   Gong, DW
   Wei, CQ
AF Yao, Xiangjuan
   Zhang, Gongjie
   Pan, Feng
   Gong, Dunwei
   Wei, Changqing
TI Orderly Generation of Test Data via Sorting Mutant Branches Based on
   Their Dominance Degrees for Weak Mutation Testing
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Software; Software testing; Fault detection; Control engineering; Data
   mining; Sorting; Software testing; mutation testing; test data
   generation; mutant branch; dominance degree
ID TEST-CASE PRIORITIZATION; DATA-FLOW; REDUCTION
AB Compared with traditional structural test criteria, test data generated based on mutation testing are proved more effective at detecting faults. However, not all test data have the same potence in detecting software faults. If test data are prioritized while generating for mutation testing, the defect detectability of the test suite can be further strengthened. In view of this, we propose a method of test data generation for weak mutation testing via sorting mutant branches based on their dominance degrees. First, the problem of weak mutation testing is transformed into that of covering mutant branches for a transformed program. Then, the dominance relation of mutant branches in the transformed program is analyzed to obtain the non-dominated mutant branches and their dominance degrees. Following that, we prioritize all non-dominated mutant branches in descending order by virtue of their dominance degrees. Finally, the test data are generated in an orderly manner by selecting the mutant branches sequentially. The experimental results on 15 programs show that compared with other methods, the proposed test data generation method can not only improve the error detectability of the test suite, but also has higher efficiency.
C1 [Yao, Xiangjuan; Wei, Changqing] China Univ Min & Technol, Sch Math, Xuzhou 221116, Jiangsu, Peoples R China.
   [Zhang, Gongjie; Pan, Feng; Gong, Dunwei] China Univ Min & Technol, Sch Informat & Control Engn, Xuzhou 221116, Jiangsu, Peoples R China.
   [Zhang, Gongjie] Jiangsu Normal Univ, Sch Comp Sci & Technol, Xuzhou 221116, Jiangsu, Peoples R China.
C3 China University of Mining & Technology; China University of Mining &
   Technology; Jiangsu Normal University
RP Gong, DW (corresponding author), China Univ Min & Technol, Sch Informat & Control Engn, Xuzhou 221116, Jiangsu, Peoples R China.
EM yaoxj@cumt.edu.cn; zhanggongjie@126.com; fengpan0315@126.com;
   dwgong@vip.163.com; 1536113693@qq.com
OI Yao, Xiangjuan/0000-0003-3207-703X; Gong, Dunwei/0000-0003-2838-4301
FU National Natural Science Foundation of China [61573362, 61773841];
   National Key Research and Development Program of China [2018YFB1003802];
   Fundamental Research Funds for the Central Universities [2020ZDPYMS40]
FX This work was jointly supported by National Natural Science Foundation
   of China (No. 61573362 and 61773841), National Key Research and
   Development Program of China (No. 2018YFB1003802), and Fundamental
   Research Funds for the Central Universities (No. 2020ZDPYMS40).
CR Aleti A, 2017, AUTOMAT SOFTW ENG, V24, P603, DOI 10.1007/s10515-016-0197-7
   Ammann Paul, 2008, Introduction to software testing, V1st
   [Anonymous], 2011, P 8 EUR SOFTW ENG C, DOI DOI 10.1145/2025113.2025144
   [Anonymous], 2016, J SOFTW ENG RES DEV
   [Anonymous], 2012, ART SOFTWARE TESTING, DOI DOI 10.1002/9781119202486
   Avgerinos T, 2016, COMMUN ACM, V59, P93, DOI 10.1145/2927924
   Budd Timothy Alan, 1980, Mutation Analysis of Program Test Data
   Cai X., 2005, Proceedings of the 1st International Workshop on Advances in Model-based Testing, P1, DOI DOI 10.1145/1083274.1083288
   Chekam TT, 2017, PROC INT CONF SOFTW, P597, DOI 10.1109/ICSE.2017.61
   DEMILLO RA, 1978, COMPUTER, V11, P34, DOI 10.1109/C-M.1978.218136
   DEMILLO RA, 1991, IEEE T SOFTWARE ENG, V17, P900, DOI 10.1109/32.92910
   Derezinska A, 2017, FED CONF COMPUT SCI, P1315, DOI 10.15439/2017F375
   Do H, 2006, IEEE T SOFTWARE ENG, V32, P733, DOI 10.1109/TSE.2006.92
   Elbaum S, 2002, IEEE T SOFTWARE ENG, V28, P159, DOI 10.1109/32.988497
   Frankl PG, 1997, J SYST SOFTWARE, V38, P235, DOI 10.1016/S0164-1212(96)00154-9
   Fraser G, 2013, IEEE T SOFTWARE ENG, V39, P276, DOI 10.1109/TSE.2012.14
   Fraser G, 2012, IEEE T SOFTWARE ENG, V38, P278, DOI 10.1109/TSE.2011.93
   Gong DW, 2017, INFORM SOFTWARE TECH, V81, P82, DOI 10.1016/j.infsof.2016.05.001
   Gong DW, 2012, NEURAL COMPUT APPL, V21, P1871, DOI 10.1007/s00521-011-0568-8
   Gong DW, 2011, J SYST SOFTWARE, V84, P2222, DOI 10.1016/j.jss.2011.06.028
   HAMLET RG, 1977, IEEE T SOFTWARE ENG, V3, P279, DOI 10.1109/TSE.1977.231145
   Harman Mark, 2010, Proceedings of the IEEE Third International Conference on Software Testing Verification and Validation - Workshops (ICSTW 2010), P182, DOI 10.1109/ICSTW.2010.31
   Hettiarachchi C, 2016, INFORM SOFTWARE TECH, V69, P1, DOI 10.1016/j.infsof.2015.08.008
   Horgan J. R., 1993, WEAK MUTATION IS PRO
   HOWDEN WE, 1982, IEEE T SOFTWARE ENG, V8, P371, DOI 10.1109/TSE.1982.235571
   Inozemtseva L, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P435, DOI 10.1145/2568225.2568271
   Jia Y, 2008, EIGHTH IEEE INTERNATIONAL WORKING CONFERENCE ON SOURCE CODE ANALYSIS AND MANIPULATION, PROCEEDINGS, P249, DOI 10.1109/SCAM.2008.36
   Jia Y, 2011, IEEE T SOFTWARE ENG, V37, P649, DOI 10.1109/TSE.2010.62
   Jones JA, 2003, IEEE T SOFTWARE ENG, V29, P195, DOI 10.1109/TSE.2003.1183927
   KING KN, 1991, SOFTWARE PRACT EXPER, V21, P685, DOI 10.1002/spe.4380210704
   Kintis M., 2017, Empir. Softw. Eng., V8, P1
   Kintis M, 2014, IEEE ICST WORKSHOP, P196, DOI 10.1109/ICSTW.2014.21
   Kintis M, 2013, ASIA PAC SOFWR ENG, P180, DOI 10.1109/APSEC.2013.34
   KOREL B, 1990, IEEE T SOFTWARE ENG, V16, P870, DOI 10.1109/32.57624
   Layman Lucas M., 2008, Proceedings of the 2008 International Workshop on Cooperative and Human Aspects of Software Engineering. CHASE '08, P73
   [刘新忠 Liu Xinzhong], 2011, [计算机研究与发展, Journal of Computer Research and Development], V48, P617
   Lou YL, 2015, 2015 IEEE 26TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING (ISSRE), P46, DOI 10.1109/ISSRE.2015.7381798
   Mathur A. P., 1994, Software Testing, Verification and Reliability, V4, P9, DOI 10.1002/stvr.4370040104
   May P. S., 2007, THESIS U KENT LONDUN
   McMinn P, 2019, IEEE T SOFTWARE ENG, V45, P427, DOI 10.1109/TSE.2017.2786286
   Offut A. J., 1997, Software Testing, Verification and Reliability, V7, P165, DOI 10.1002/(SICI)1099-1689(199709)7:3<165::AID-STVR143>3.0.CO;2-U
   Offutt A., 1991, Proceedings of the symposium on Testing, analysis, and verification, P200
   Offutt AJ, 1996, COMPASS '96 - PROCEEDINGS OF THE ELEVENTH ANNUAL CONFERENCE ON COMPUTER ASSURANCE, P224, DOI 10.1109/CMPASS.1996.507890
   OFFUTT AJ, 1994, IEEE T SOFTWARE ENG, V20, P337, DOI 10.1109/32.286422
   Offutt AJ, 1999, SOFTWARE PRACT EXPER, V29, P167, DOI 10.1002/(SICI)1097-024X(199902)29:2<167::AID-SPE225>3.0.CO;2-V
   OFFUTT AJ, 1993, PROC INT CONF SOFTW, P100, DOI 10.1109/ICSE.1993.346062
   Offutt AJ, 1996, SOFTWARE PRACT EXPER, V26, P165, DOI 10.1002/(SICI)1097-024X(199602)26:2<165::AID-SPE5>3.0.CO;2-K
   Papadakis M, 2019, ADV COMPUT, V112, P275, DOI 10.1016/bs.adcom.2018.03.015
   Papadakis M, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P537, DOI 10.1145/3180155.3180183
   Papadakis M, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P936, DOI 10.1109/ICSE.2015.103
   Papadakis M, 2014, SCI COMPUT PROGRAM, V95, P298, DOI 10.1016/j.scico.2014.05.012
   Papadakis M, 2012, INFORM SOFTWARE TECH, V54, P915, DOI 10.1016/j.infsof.2012.02.004
   Papadakis M, 2011, SOFTWARE QUAL J, V19, P691, DOI 10.1007/s11219-011-9142-y
   Papadakis Mike., 2013, Proceedings of the 28th Annual ACM Symposium on Applied Computing. SAC'13, P1223, DOI DOI 10.1145/2480362.2480592
   Polo M, 2009, SOFTW TEST VERIF REL, V19, P111, DOI 10.1002/stvr.392
   Rodrigues DS, 2018, ACM COMPUT SURV, V51, DOI 10.1145/3182659
   Rothermel G, 2001, IEEE T SOFTWARE ENG, V27, P929, DOI 10.1109/32.962562
   Shin D, 2018, IEEE T SOFTWARE ENG, V44, P914, DOI 10.1109/TSE.2017.2732347
   Souza F.C., 2014, P 11 IESELAW, P1
   Strug J, 2017, FED CONF COMPUT SCI, P99, DOI 10.15439/2017F215
   Tillmann N, 2008, LECT NOTES COMPUT SC, V4966, P134
   Wang WE, 1997, EIGHTH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P264, DOI 10.1109/ISSRE.1997.630875
   Yao XJ, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P919, DOI 10.1145/2568225.2568265
   Yao XJ, 2015, IET SOFTW, V9, P103, DOI 10.1049/iet-sen.2014.0058
   Zhang Gong-jie, 2015, Journal of Software, V26, P2504, DOI 10.13328/j.cnki.jos.004749
   [张功杰 Zhang Gongjie], 2015, [计算机学报, Chinese Journal of Computers], V38, P2318
NR 66
TC 5
Z9 6
U1 2
U2 12
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD APR 1
PY 2022
VL 48
IS 4
BP 1169
EP 1184
DI 10.1109/TSE.2020.3014960
PG 16
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 0N4HC
UT WOS:000782799700005
DA 2024-07-18
ER

PT J
AU Gao, PF
   Xie, HY
   Pu, S
   Jun, Z
   Fu, S
   Chen, T
AF Gao Pengfei
   Xie Hongyi
   Pu Sun
   Jun Zhang
   Fu Song
   Chen, Taolue
TI Formal Verification of Masking Countermeasures for Arithmetic Programs
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Cryptography; Tools; Computational modeling; Software algorithms; Power
   demand; Cognition
ID DIFFERENTIAL POWER ANALYSIS; HIGHER-ORDER MASKING; AES; RESISTANCE;
   HARDWARE; SECURE; ATTACK
AB Cryptographic algorithms are widely used to protect data privacy in many aspects of daily lives from smart card to cyber-physical systems. Unfortunately, programs implementing cryptographic algorithms may be vulnerable to practical power side-channel attacks, which may infer private data via statistical analysis of the correlation between power consumptions of an electronic device and private data. To thwart these attacks, several masking schemes have been proposed, giving rise to effective countermeasures for reducing the statistical correlation between private data and power consumptions. However, programs that rely on secure masking schemes are not secure a priori. Indeed, designing effective masking programs is a labor intensive and error-prone task. Although some techniques have been proposed for formally verifying masking countermeasures and for quantifying masking strength, they are currently limited to Boolean programs and suffer from low accuracy. In this work, we propose an approach for formally verifying masking countermeasures of arithmetic programs. Our approach is more accurate for arithmetic programs and more scalable for Boolean programs comparing to the existing approaches. It is essentially a synergistic integration of type inference and model-counting based methods, armed with domain specific heuristics. The type inference system allows a fast deduction of leakage-freeness of most intermediate computations, the model-counting based methods accounts for completeness, namely, to eliminate spurious flaws, and the heuristics facilitate both type inference and model-counting based reasoning, which improve scalability and efficiency in practice. In case that the program does contain leakage, we provide a method to quantify its masking strength. A distuiguished feature of our type sytem lies in its support of compositonal reasoning when verifying programs with procedure calls, so the need of inlining procedures can be significantly reduced. We have implemented our methods in a verification tool QMVerif which has been extensively evaluated on cryptographic benchmarks including full AES, DES and MAC-Keccak. The experimental results demonstrate the effectiveness and efficiency of our approach, especially for compositional reasoning. In particular, our tool is able to automatically prove leakage-freeness of arithmetic programs for which only manual proofs exist so far; it is also significantly faster than the state-of-the-art tools: EasyCrypt on common arithmetic programs, QMSInfer, SC Sniffer and maskVerif on Boolean programs.
C1 [Gao Pengfei; Xie Hongyi; Pu Sun; Jun Zhang; Fu Song] ShanghaiTech Univ, Sch Informat Sci & Technol, Shanghai 201210, Peoples R China.
   [Gao Pengfei] Chinese Acad Sci, Shanghai Inst Microsyst & Informat Technol, Shanghai 200031, Peoples R China.
   [Gao Pengfei] Univ Chinese Acad Sci, Beijing 100049, Peoples R China.
   [Fu Song] Shanghai Engn Res Ctr Intelligent Vis & Imaging, Shanghai, Peoples R China.
   [Chen, Taolue] Univ Surrey, Dept Comp Sci, Guildford GU2 7XH, Surrey, England.
   [Chen, Taolue] Nanjing Univ, State Key Lab Novel Software Technol, Nanjing 210093, Peoples R China.
C3 ShanghaiTech University; Chinese Academy of Sciences; Shanghai Institute
   of Microsystem & Information Technology, CAS; Chinese Academy of
   Sciences; University of Chinese Academy of Sciences, CAS; University of
   Surrey; Nanjing University
RP Fu, S (corresponding author), ShanghaiTech Univ, Sch Informat Sci & Technol, Shanghai 201210, Peoples R China.
EM gaopf@shanghaitech.edu.cn; xiehy@shanghaitech.edu.cn;
   sunpu@shanghaitech.edu.cn; zhangjuni@shanghaitech.edu.cn;
   songfu@shanghaitech.edu.cn; taolue.chen@surrey.ac.uk
RI Gao, Pengfei/ICJ-3065-2023; Fei, 高鹏飞 Gao Peng/AAJ-6385-2020
OI Chen, Taolue/0000-0002-5993-1665
FU National Natural Science Foundation of China (NSFC) [61532019,
   61761136011]; UK EPSRC [EP/P00430X/1]; NSFC [61872340]; Guangdong
   Science and Technology Department grant [2018B010107004]; Natural
   Science Foundation of Guangdong Province, China [2019A1515011689]; State
   Key Laboratory of Novel Software Technology, Nanjing University, China
   [KFKT2018A16]; EPSRC [EP/P00430X/2, EP/P00430X/1] Funding Source: UKRI
FX The authors would like to thank Professor Gilles Barthe, Professor
   Benjamin Gr~egoire and Professor Chao Wang for providing benchmarks, and
   the anonymous reviewers for their valuable comments and suggestions. P.
   Gao, H. Xie, P. Sun, J. Zhang and F. Songwere partially supported by the
   National Natural Science Foundation of China (NSFC) grants (No. 61532019
   and No. 61761136011); T. Chen was partially supported by UK EPSRC grant
   (No. EP/P00430X/1), NSFC grant (No. 61872340), Guangdong Science and
   Technology Department grant (No. 2018B010107004), Natural Science
   Foundation of Guangdong Province, China (No. 2019A1515011689), and
   Overseas Grant (KFKT2018A16) fromthe State Key Laboratory of Novel
   Software Technology, Nanjing University, China. A preliminary version of
   this paper [1] appeared in the Proceedings of the 25th International
   Conference on Tools and Algorithms for the Construction and Analysis of
   Systems (TACAS'19), held as part of the European Joint Conferences on
   Theory and Practice of Software (ETAPS'19), Prague, Czech Republic,
   April 6-11, 2019.
CR Agosta G, 2012, DES AUT CON, P77
   Almeida JB, 2016, PROCEEDINGS OF THE 25TH USENIX SECURITY SYMPOSIUM, P53
   [Anonymous], 2016, P IEEE S REAL TIM EM
   [Anonymous], 2014, P 20 INT C TOOLS ALG
   Antonopoulos T, 2017, ACM SIGPLAN NOTICES, V52, P362, DOI [10.1145/3140587.3062378, 10.1145/3062341.3062378]
   Balasch Josep, 2015, Smart Card Research and Advanced Applications. 13th International Conference, CARDIS 2014. Revised Selected Papers: LNCS 8968, P64, DOI 10.1007/978-3-319-16763-3_5
   Bang L, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P193, DOI 10.1145/2950290.2950362
   Barthe G., 2016, P ACM SIGSAC C COMP, P116, DOI DOI 10.1145/2976749
   Barthe G., 2014, P 3 INT C PRINC SEC, P140
   Barthe G, 2019, LECT NOTES COMPUT SC, V11735, P300, DOI 10.1007/978-3-030-29959-0_15
   Barthe G, 2014, CCS'14: PROCEEDINGS OF THE 21ST ACM CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P1016, DOI 10.1145/2660267.2660304
   Barthe G, 2015, LECT NOTES COMPUT SC, V9056, P457, DOI 10.1007/978-3-662-46800-5_18
   Bayrak AG, 2013, LECT NOTES COMPUT SC, V8086, P293, DOI 10.1007/978-3-642-40349-1_17
   Bayrak AG, 2011, DES AUT CON, P230
   Beaulieu R, 2015, DES AUT CON, DOI 10.1145/2744769.2747946
   Belaid Sonia, 2018, Advances in Cryptology - ASIACRYPT 2018. 24th International Conference on the Theory and Application of Cryptology and Information Security. Proceedings: Lecture Notes in Computer Science (LNCS 11273), P343, DOI 10.1007/978-3-030-03329-3_12
   Ben El Ouahma I, 2019, J CRYPTOGR ENG, V9, P231, DOI 10.1007/s13389-019-00205-7
   Ben El Ouahma Ines, 2017, P 6 INT WORKSH SEC P, V49, P17, DOI [10.29007/hhnf, DOI 10.29007/HHNF]
   Bettale L., 2018, IACR Trans. Cryptogr. Hardw. Embed. Syst., P22, DOI DOI 10.13154/TCHES.V2018.I2.22-45
   Bhasin S., 2013, IACR CRYPTOL EPRINT, V2013
   Biham E, 1997, LECT NOTES COMPUT SC, V1294, P513
   Biondi F, 2018, LECT NOTES COMPUT SC, V10747, P71, DOI 10.1007/978-3-319-73721-8_4
   Bisi E, 2017, IEEE T COMPUT, V66, P1099, DOI 10.1109/TC.2016.2635650
   Bloem R, 2018, LECT NOTES COMPUT SC, V10821, P321, DOI 10.1007/978-3-319-78375-8_11
   Blömer J, 2005, LECT NOTES COMPUT SC, V3357, P69
   Blot A, 2017, LECT NOTES COMPUT SC, V10204, P277, DOI 10.1007/978-3-662-54455-6_13
   Breier J., 2018, IACR T CRYPTOGR HARD, V2018, P96
   Brennan T, 2018, PROC IEEE ACM INT C, P424, DOI 10.1145/3183440.3195039
   Brier E, 2004, LECT NOTES COMPUT SC, V3156, P16, DOI 10.1007/978-3-540-28632-5_2
   Canright D, 2008, LECT NOTES COMPUT SC, V5037, P446, DOI 10.1007/978-3-540-68914-0_27
   Carlet C, 2012, LECT NOTES COMPUT SC, V7549, P366, DOI 10.1007/978-3-642-34047-5_21
   Chao Wang, 2017, ACM SIGLOG News, V4, P76, DOI 10.1145/3090064.3090071
   Chattopadhyay S, 2019, ACM T EMBED COMPUT S, V18, DOI 10.1145/3288758
   Chen J, 2017, CCS'17: PROCEEDINGS OF THE 2017 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P875, DOI 10.1145/3133956.3134058
   Choi HB, 2003, SAM'03: PROCEEDINGS OF THE INTERNATIONAL CONFERENCE ON SECURITY AND MANAGEMENT, VOLS 1 AND 2, P260
   Cilio W, 2013, MICROELECTRON J, V44, P258, DOI 10.1016/j.mejo.2012.12.001
   Clavier C, 2001, LECT NOTES COMPUT SC, V1965, P252
   Contini S, 1999, LECT NOTES COMPUT SC, V1636, P1
   Coron J., 2017, IACR CRYPTOL EPRINT, V2017
   Coron Jean-Sebastien, 2018, Applied Cryptography and Network Security. 16th International Conference, ACNS 2018. Proceedings: LNCS 10892, P65, DOI 10.1007/978-3-319-93387-0_4
   Coron Jean-Sebastien, 2012, Constructive Side-Channel Analysis and Secure Design. Proceedings Third International Workshop, COSADE 2012, P69, DOI 10.1007/978-3-642-29912-4_6
   Coron JS, 2007, LECT NOTES COMPUT SC, V4727, P28
   Coron JS, 2017, LECT NOTES COMPUT SC, V10529, P93, DOI 10.1007/978-3-319-66787-4_5
   Coron JS, 2014, LECT NOTES COMPUT SC, V8424, P410, DOI 10.1007/978-3-662-43933-3_21
   Coron JS, 2014, LECT NOTES COMPUT SC, V8731, P170, DOI 10.1007/978-3-662-44709-3_10
   Coron JS, 2014, LECT NOTES COMPUT SC, V8731, P188, DOI 10.1007/978-3-662-44709-3_11
   Coron JS, 2014, LECT NOTES COMPUT SC, V8441, P441, DOI 10.1007/978-3-642-55220-5_25
   Coron JS, 2001, LECT NOTES COMPUT SC, V1965, P231
   Coron JS, 1999, LECT NOTES COMPUT SC, V1717, P292
   de Moura L, 2008, LECT NOTES COMPUT SC, V4963, P337, DOI 10.1007/978-3-540-78800-3_24
   Doychev G., 2013, USENIX SEC S, P431
   Eldib H, 2014, DES AUT CON
   Eldib H, 2016, LECT NOTES COMPUT SC, V9780, P343, DOI 10.1007/978-3-319-41540-6_19
   Eldib H, 2015, IEEE T COMPUT AID D, V34, P1558, DOI 10.1109/TCAD.2015.2424951
   Eldib H, 2014, ACM T SOFTW ENG METH, V24, DOI 10.1145/2685616
   Eldib H, 2014, LECT NOTES COMPUT SC, V8559, P114, DOI 10.1007/978-3-319-08867-9_8
   Faust S., 2017, IACR Cryptology ePrint Archive, P711
   Gao PF, 2019, ACM T SOFTW ENG METH, V28, DOI 10.1145/3330392
   Gao PF, 2019, LECT NOTES COMPUT SC, V11427, P155, DOI 10.1007/978-3-030-17462-0_9
   Goubin L., 2001, Cryptographic Hardware and Embedded Systems - CHES 2001. Third International Workshop. Proceedings (Lecture Notes in Computer Science Vol.2162), P3
   Goubin L, 1999, LECT NOTES COMPUT SC, V1717, P158
   Grabher P, 2007, LECT NOTES COMPUT SC, V4887, P170
   Gross H, 2017, 2017 EUROMICRO CONFERENCE ON DIGITAL SYSTEM DESIGN (DSD), P205, DOI 10.1109/DSD.2017.21
   Guo SJ, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P377, DOI 10.1145/3236024.3236028
   Hutter M, 2019, J CRYPTOGR ENG, V9, P173, DOI 10.1007/s13389-018-0191-z
   Ishai Y, 2003, LECT NOTES COMPUT SC, V2729, P463, DOI 10.1007/978-3-540-45146-4_27
   Itoh K, 2002, LECT NOTES COMPUT SC, V2523, P129
   Jones C. B., 1983, Information Processing 83. Proceedings of the IFIP 9th World Computer Congress, P321
   Kannwischer MJ, 2018, LECT NOTES COMPUT SC, V10815, P168, DOI 10.1007/978-3-319-89641-0_10
   Kocher P., 1999, Advances in Cryptology - CRYPTO'99. 19th Annual International Cryptology Conference. Proceedings, P388
   Kocher P. C., 1996, Advances in Cryptology - CRYPTO'96. 16th Annual International Cryptology Conference. Proceedings, P104
   Kocher P, 2011, J CRYPTOGR ENG, V1, P5, DOI 10.1007/s13389-011-0006-y
   Kopf Boris, 2012, Computer Aided Verification. Proceedings 24th International Conference, CAV 2012, P564, DOI 10.1007/978-3-642-31424-7_40
   Kroening Daniel, 2016, Decision Procedures:An Algorithmic Point of View, DOI DOI 10.1007/978-3-662-50497-0
   LAI XJ, 1991, LECT NOTES COMPUT SC, V473, P389
   Luo Chao, 2018, P INT C COMP AID DES, P115
   Malacaria P, 2018, P IEEE COMPUT SECUR, P313, DOI 10.1109/CSF.2018.00030
   Malacaria P, 2010, LECT NOTES COMPUT SC, V6154, P87, DOI 10.1007/978-3-642-13678-8_3
   Mangard S, 2002, LECT NOTES COMPUT SC, V2587, P343
   Mangard S, 2008, POWER ANAL ATTACKS R
   Messerges T. S., 2001, Fast Software Encryption. 7th International Workshop, FSE 2000. Proceedings (Lecture Notes in Computer Science Vol.1978), P150
   Messerges TS, 2001, LECT NOTES COMPUT SC, V1965, P238
   Moradi Amir, 2014, Cryptographic Hardware and Embedded Systems - CHES 2014. 16th International Workshop. Proceedings: LNCS 8731, P562, DOI 10.1007/978-3-662-44709-3_31
   Moradi A, 2011, LECT NOTES COMPUT SC, V6632, P69, DOI 10.1007/978-3-642-20465-4_6
   Moss A, 2012, LECT NOTES COMPUT SC, V7428, P58, DOI 10.1007/978-3-642-33027-8_4
   Nassar M, 2012, DES AUT TEST EUROPE, P1173
   Niemetz Aina, 2014, J. Satisf. Boolean Model. Comput, V9, P53, DOI [10.3233/sat190101, DOI 10.3233/SAT190101]
   Oswald E, 2005, LECT NOTES COMPUT SC, V3557, P413
   Pasareanu CS, 2016, P IEEE CSFW, P387, DOI 10.1109/CSF.2016.34
   Phan Q., 2014, Proceedings of the International Symposium on Model Checking of Software, SPIN 2014, P105
   Phan Q.-S., 2014, P 9 ACM S INFORM COM, P283, DOI DOI 10.1145/2590296.2590328
   Prouff E, 2013, LECT NOTES COMPUT SC, V7881, P142, DOI 10.1007/978-3-642-38348-9_9
   Phan QS, 2017, P IEEE CSFW, P328, DOI 10.1109/CSF.2017.8
   Reparaz O, 2015, LECT NOTES COMPUT SC, V9215, P764, DOI 10.1007/978-3-662-47989-6_37
   Rivain M, 2010, LECT NOTES COMPUT SC, V6225, P413, DOI 10.1007/978-3-642-15031-9_28
   Schramm K, 2006, LECT NOTES COMPUT SC, V3860, P208
   Sung CH, 2018, IEEE INT CONF AUTOM, P904, DOI 10.1145/3238147.3240485
   Val CG, 2016, 1ST IEEE EUROPEAN SYMPOSIUM ON SECURITY AND PRIVACY, P31, DOI 10.1109/EuroSP.2016.15
   Wang JB, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P590, DOI 10.1145/3338906.3338913
   Wang S, 2017, PROCEEDINGS OF THE 26TH USENIX SECURITY SYMPOSIUM (USENIX SECURITY '17), P235
   Wang WJ, 2019, IEEE T INF FOREN SEC, V14, P3069, DOI 10.1109/TIFS.2019.2912549
   Wang WJ, 2018, IEEE T INF FOREN SEC, V13, P1301, DOI 10.1109/TIFS.2017.2787985
   Wang WJ, 2017, LECT NOTES COMPUT SC, V10146, P174, DOI 10.1007/978-3-319-54669-8_11
   Wu M, 2019, PROCEEDINGS OF THE 40TH ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION (PLDI '19), P802, DOI 10.1145/3314221.3314647
   Wu M, 2018, ISSTA'18: PROCEEDINGS OF THE 27TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P15, DOI 10.1145/3213846.3213851
   Xu JM, 2018, IEEE TRUST BIG, P1470, DOI 10.1109/TrustCom/BigDataSE.2018.00205
   Zhang J, 2018, LECT NOTES COMPUT SC, V10982, P157, DOI 10.1007/978-3-319-96142-2_12
NR 107
TC 7
Z9 7
U1 1
U2 3
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAR 1
PY 2022
VL 48
IS 3
BP 973
EP 1000
DI 10.1109/TSE.2020.3008852
PG 28
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA ZU6ZO
UT WOS:000769989900015
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Liu, SY
   Nakajima, S
AF Liu, Shaoying
   Nakajima, Shin
TI Automatic Test Case and Test Oracle Generation Based on Functional
   Scenarios in Formal Specifications for Conformance Testing
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Software; Vibrations; Input variables; Conformance testing; Automatic
   testing; Information systems; Specification-based testing; black-box
   testing; functional testing; model-based testing; automatic testing
ID ALGEBRAIC SPECIFICATIONS; SOFTWARE; VERIFICATION
AB Testing a program to confirm whether it consistently implements its requirements specification is a necessary but time-consuming activity in software development. Automatic testing based on specifications can significantly alleviate the workload and cost, but faces a challenge of how to ensure that both the user's concerns in the specification and possible execution paths in the program are all covered. In this paper, we describe a new method, called "Vibration-Method" or simply "V-Method", for automatic generation of test cases and test oracle from model-based formal specifications, aiming to address this challenge. The proposed method is suitable for testing information systems in which rich data types are used. Supporting the principle of "divide and conquer", the method provides a specific technique for generating test cases based on functional scenarios defined in the specification, test case generation criteria, automatic test case generation algorithms, and a well-defined mechanism for deriving test oracle. We elaborate on the method by discussing how initial test cases can be automatically generated, how additional necessary test cases are produced using the "vibration" technique, and how a test oracle can be automatically derived for a group of test cases. We also describe a controlled experiment to evaluate the effectiveness of the method and discuss the important issues in relation to the performance and applicability of the method.
C1 [Liu, Shaoying] Hiroshima Univ, Grad Sch Adv Sci & Engn, Higashihiroshima 7398527, Japan.
   [Liu, Shaoying] Hiroshima Univ, Sch Informat & Data Sci, Higashihiroshima 7398527, Japan.
   [Nakajima, Shin] Natl Inst Informat, Informat & Soc Res, Tokyo 1018430, Japan.
C3 Hiroshima University; Hiroshima University; Research Organization of
   Information & Systems (ROIS); National Institute of Informatics (NII) -
   Japan
RP Liu, SY (corresponding author), Hiroshima Univ, Grad Sch Adv Sci & Engn, Higashihiroshima 7398527, Japan.; Liu, SY (corresponding author), Hiroshima Univ, Sch Informat & Data Sci, Higashihiroshima 7398527, Japan.
EM sliu@hiroshima-u.ac.jp; nkjm@nii.ac.jp
FU JSPS KAKENHI [26240008]; NII Collaborative Research Program; SCAT
   Foundation
FX We thank our graduate students CenCen Li, Mo Li, Takumi Amitani, Kenta
   Sugai, Qin Xu, and Rong Wang for their great contributions in conducting
   the experiment on our testing method, and Hayato Ikeda, Yusuke Morizumi,
   Masahiro Yoshida, Eriko Maeyama, Kai Toda, Ye Yan, and Weihang Zhang for
   their contributions to the construction of various prototype software
   tools to support our method. Although the prototypes are not well
   integrated yet to make it ready to report in this paper, their work has
   provided us with useful feedback for improving our testing method. We
   would also like to thank various anonymous referees for their comments
   on the early drafts and sections of this paper. Finally, this work was
   supported in part by JSPS KAKENHI Grant Number 26240008, the NII
   Collaborative Research Program, and the SCAT Foundation.
CR [Abran A. IEEE Computer Society IEEE Computer Society], 2004, GUIDE SOFTWARE ENG B
   Abrial Jean-Raymond, 2010, International Journal on Software Tools for Technology Transfer, V12, P447, DOI 10.1007/s10009-010-0145-y
   Aichernig Bernhard K., 2013, Theories of Programming and Formal Methods. Essays Dedicated to Jifeng He on the Occasion of His 70th Birthday. LNCS 8051, P23, DOI 10.1007/978-3-642-39698-4_2
   Aichernig BK, 2005, QSIC 2005: FIFTH INTERNATIONAL CONFERENCE ON QUALITY SOFTWARE, PROCEEDINGS, P64
   AICHERNIG BK, 1999, P 18 INT C SAFECOMP9, P250
   Ammann Paul, 2008, Introduction to software testing, V1st
   [Anonymous], 2014, Software engineering: a practitioner's approach
   Bandyopadhyay A, 2009, SECOND INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION, AND VALIDATION, PROCEEDINGS, P121, DOI 10.1109/ICST.2009.23
   Beizer B., 1995, BLACK BOX TESTING
   BERNOT G, 1991, SOFTWARE ENG J, V6, P387, DOI 10.1049/sej.1991.0040
   BOUGE L, 1986, J SYST SOFTWARE, V6, P343, DOI 10.1016/0164-1212(86)90004-X
   Bouquet F, 2006, LECT NOTES COMPUT SC, V4085, P428
   Broy M., 2005, Springer LNCS
   Burton S., 2000, YCS2000329 U YORK
   Cadar C, 2013, COMMUN ACM, V56, P82, DOI 10.1145/2408776.2408795
   Cadar C, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1066, DOI 10.1145/1985793.1985995
   Chen TY, 2003, THIRD INTERNATIONAL CONFERENCE ON QUALITY SOFTWARE, PROCEEDINGS, P4, DOI 10.1109/QSIC.2003.1319079
   CHOW TS, 1978, IEEE T SOFTWARE ENG, V4, P178, DOI 10.1109/TSE.1978.231496
   Ciupa I, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P71, DOI 10.1145/1368088.1368099
   Ciupa Ilinca., 2006, P 1 INT WORKSHOP RAN, P55
   Clarke. E. M., 1982, LOGICS OF PROGRAMS, P52, DOI [10 . 1007 / BFb0025774, DOI 10.1007/BFB0025774]
   DAUCHY P, 1993, J SYST SOFTWARE, V21, P229, DOI 10.1016/0164-1212(93)90025-S
   Dawes J., 1991, VDM SL REFERENCE GUI
   de Moura L, 2008, LECT NOTES COMPUT SC, V4963, P337, DOI 10.1007/978-3-540-78800-3_24
   DEMILLO RA, 1978, COMPUTER, V11, P34, DOI 10.1109/C-M.1978.218136
   Dick J., 1993, FME'93: Industrial-Strength Formal Methods. First International Symposium of Formal Methods Europe Proceedings, P268, DOI 10.1007/BFb0024651
   Donat M. R., 1997, TAPSOFT '97: Theory and Practice of Software Development. 7th International Joint Conference CAAP/FASE. Proceedings, P833, DOI 10.1007/BFb0030644
   Dutertre B, 2014, LECT NOTES COMPUT SC, V8559, P737, DOI 10.1007/978-3-319-08867-9_49
   Feldt R, 2010, 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING & KNOWLEDGE ENGINEERING (SEKE 2010), P374
   FUJIWARA S, 1991, IEEE T SOFTWARE ENG, V17, P591, DOI 10.1109/32.87284
   Galler SJ, 2014, INT J SOFTW TOOLS TE, V16, P727, DOI 10.1007/s10009-013-0272-3
   GANNON J, 1981, ACM T PROGR LANG SYS, V3, P211, DOI 10.1145/357139.357140
   Goodenough J. B., 1975, IEEE Transactions on Software Engineering, VSE-1, P156, DOI 10.1109/TSE.1975.6312836
   Harman M, 2001, KLUW INT S ADV DATA, V24, P5
   Helke S., 1997, ZUM '97: The Z Formal Specification Notation. 10th International Conference of Z Users Proceedings, P52, DOI 10.1007/BFb0027283
   HOARE CAR, 1969, COMMUN ACM, V12, P576, DOI 10.1145/363235.363259
   IFAD, 1999, VDMTOOLS QUAL SOFTW
   Jhala R, 2009, ACM COMPUT SURV, V41, DOI 10.1145/1592434.1592438
   Jia Yue, 2016, P 25 INT S SOFTWARE, P354
   Khurshid S., 2004, Automated Software Engineering, V11, P403, DOI 10.1023/B:AUSE.0000038938.10589.b9
   Khurshid S., 2003, LNCS, P297
   Kong L, 2007, P INT COMP SOFTW APP, P717
   Kropp NP, 1998, DIG PAP INT SYMP FAU, P230, DOI 10.1109/FTCS.1998.689474
   Larsen PG, 1996, IEEE SOFTWARE, V13, P48, DOI 10.1109/52.493020
   Lazic Ljubomir, 2008, WSEAS Transactions on Computers, V7, P599
   Leavens GT, 2007, FORM ASP COMPUT, V19, P159, DOI 10.1007/s00165-007-0026-7
   Lee D, 1996, P IEEE, V84, P1090, DOI 10.1109/5.533956
   Legeard, 2002, P FORM METH EUR 2002, P21
   Legeard B, 2004, SOFTW TEST VERIF REL, V14, P81, DOI 10.1002/stvr.287
   Liu SY, 2016, LECT NOTES COMPUT SC, V9762, P112, DOI 10.1007/978-3-319-41135-4_7
   Liu SY, 2010, FRONT ARTIF INTEL AP, V217, P383, DOI 10.3233/978-1-60750-629-4-383
   Liu SY, 2012, IEEE T SOFTWARE ENG, V38, P1100, DOI 10.1109/TSE.2011.102
   Liu Shaoying., 2004, Formal Engineering for Industrial Software Development
   Liu SY, 2005, LECT NOTES COMPUT SC, V3785, P421
   Lúcio L, 2005, LECT NOTES COMPUT SC, V3472, P323
   Manthey N., 2012, KNOWLEDGE REPRESENTA
   Matinnejad R, 2019, IEEE T SOFTWARE ENG, V45, P919, DOI 10.1109/TSE.2018.2811489
   Matinnejad R, 2016, PROC INT CONF SOFTW, P595, DOI 10.1145/2884781.2884797
   McDonald J, 1998, SECOND INTERNATIONAL CONFERENCE ON FORMAL ENGINEERING METHODS, PROCEEDINGS, P165, DOI 10.1109/ICFEM.1998.730580
   McMinn P, 2004, SOFTW TEST VERIF REL, V14, P105, DOI 10.1002/stvr.294
   Morgan Carroll, 1994, Programming from specifications
   Offutt J, 1999, LECT NOTES COMPUT SC, V1723, P416
   OSTRAND TJ, 1988, COMMUN ACM, V31, P676, DOI 10.1145/62959.62964
   OWICKI S, 1982, ACM T PROGR LANG SYS, V4, P455, DOI 10.1145/357172.357178
   Papadakis M, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P936, DOI 10.1109/ICSE.2015.103
   Parnas DL, 2010, COMPUTER, V43, P28, DOI 10.1109/MC.2010.22
   Nguyen QC, 2014, INT C CONTR AUTOMAT, P157, DOI 10.1109/ICCAS.2014.6987978
   Ravn A. P., 2013, P 11 INT WORKSH JAV, P80
   SATPATHY M, 2007, P INT C TESTS PROOFS, P95
   Schmaltz J, 2008, LECT NOTES COMPUT SC, V5215, P250, DOI 10.1007/978-3-540-85778-5_18
   Shaoying Liu, 2010, Proceedings 2010 Fourth IEEE International Conference on Secure Software Integration and Reliability Improvement (SSIRI 2010), P147, DOI 10.1109/SSIRI.2010.11
   Sjoberg DIK, 2005, IEEE T SOFTWARE ENG, V31, P733, DOI 10.1109/TSE.2005.97
   Stocks P, 1996, IEEE T SOFTWARE ENG, V22, P777, DOI 10.1109/32.553698
   Tracey N, 1998, 13TH IEEE INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P285, DOI 10.1109/ASE.1998.732680
   Tretmans J, 2003, 1 EUR C MOD DRIV SOF, P31
   Untch R. H., 1993, SIGSOFT Software Engineering Notes, V18, P139, DOI 10.1145/174146.154265
   Utting M., 2007, PRACTICAL MODEL BASE
   Veanes M., 2008, Formal methods and testing, chapter Model-based testing of object-oriented reactive systems with spec explorer, P39, DOI DOI 10.1007/978-3-540-78917-8
   Wegener J, 2001, INFORM SOFTWARE TECH, V43, P841, DOI 10.1016/S0950-5849(01)00190-2
   Woodcock J., 1996, Using Z: Specification, Refinement, and Proof
   Woodcock J, 2009, ACM COMPUT SURV, V41, DOI 10.1145/1592434.1592436
   Zhang W., 2012, P IEEE INT S APSURSI, P12
   Zhao, 2017, P 7 INT WORKSH SOFL, P171
NR 83
TC 10
Z9 11
U1 4
U2 24
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD FEB 1
PY 2022
VL 48
IS 2
BP 691
EP 712
DI 10.1109/TSE.2020.2999884
PG 22
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA ZB4EB
UT WOS:000756796100019
DA 2024-07-18
ER

PT J
AU Meyer, AN
   Satterfield, C
   Züger, M
   Kevic, K
   Murphy, GC
   Zimmermann, T
   Fritz, T
AF Meyer, Andre N.
   Satterfield, Chris
   Zuger, Manuela
   Kevic, Katja
   Murphy, Gail C.
   Zimmermann, Thomas
   Fritz, Thomas
TI Detecting Developers' Task Switches and Types
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Task detection; task switching; multi-tasking; work fragmentation;
   activity recognition; machine learning
AB Developers work on a broad variety of tasks during their workdays and constantly switch between them. While these task switches can be beneficial, they can also incur a high cognitive burden on developers, since they have to continuously remember and rebuild the task context-the artifacts and applications relevant to the task. Researchers have therefore proposed to capture task context more explicitly and use it to provide better task support, such as task switch reduction or task resumption support. Yet, these approaches generally require the developer to manually identify task switches. Automatic approaches for predicting task switches have so far been limited in their accuracy, scope, evaluation, and the time discrepancy between predicted and actual task switches. In our work, we examine the use of automatically collected computer interaction data for detecting developers' task switches as well as task types. In two field studies-a 4h observational study and a multi-day study with experience sampling-we collected data from a total of 25 professional developers. Our study results show that we are able to use temporal and semantic features from developers' computer interaction data to detect task switches and types in the field with high accuracy of 84 percent and 61 percent respectively, and within a short time window of less than 1.6 minutes on average from the actual task switch. We discuss our findings and their practical value for a wide range of applications in real work settings.
C1 [Meyer, Andre N.; Zuger, Manuela; Fritz, Thomas] Univ Zurich, Dept Informat, CH-8006 Zurich, Switzerland.
   [Satterfield, Chris] Univ British Columbia, Vancouver, BC V6T 1Z4, Canada.
   [Murphy, Gail C.] Univ British Columbia, Fac Sci, Vancouver, BC V6T 1Z4, Canada.
   [Murphy, Gail C.] Univ British Columbia, Fac Sci, Res & Grad Program, Vancouver, BC V6T 1Z4, Canada.
   [Kevic, Katja; Zimmermann, Thomas] Microsoft Res, Washington, DC USA.
C3 University of Zurich; University of British Columbia; University of
   British Columbia; University of British Columbia; Microsoft
RP Meyer, AN (corresponding author), Univ Zurich, Dept Informat, CH-8006 Zurich, Switzerland.
EM ameyer@ifi.uzh.ch; cds00@cs.ubc.ca; zueger@ifi.uzh.ch;
   kakevic@microsoft.com; murphy@cs.ubc.ca; tzimmer@microsoft.com;
   fritz@ifi.uzh.ch
RI Zimmermann, Thomas/C-4377-2019
OI Zimmermann, Thomas/0000-0003-4905-1469
CR Altmann EM, 2004, PROCEEDINGS OF THE TWENTY-SIXTH ANNUAL CONFERENCE OF THE COGNITIVE SCIENCE SOCIETY, P43
   Amann S, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P124, DOI 10.1109/SANER.2016.39
   [Anonymous], 2000, PSYCHOL SURVEY RESPO
   [Anonymous], 1980, NATURE MANAGERIAL WO
   [Anonymous], 2010, CASCON First Decade High Impact Papers, DOI [DOI 10.1145/1925805.1925815, 10.1145/1925805.1925815]
   [Anonymous], 1993, DETECTION ABRUPT CHA
   Astromskis S, 2017, J SYST SOFTWARE, V132, P85, DOI 10.1016/j.jss.2017.06.072
   Bailey BP, 2001, HUMAN-COMPUTER INTERACTION - INTERACT'01, P593
   Bao LF, 2018, EMPIR SOFTW ENG, V23, P1313, DOI 10.1007/s10664-017-9547-8
   Beller M, 2016, 2016 IEEE/ACM 3RD INTERNATIONAL WORKSHOP ON SOFTWARE ENGINEERING RESEARCH AND INDUSTRIAL PRACTICE (SER&IP), P53, DOI 10.1145/2897022.2897027
   Bragdon A., 2010, Proceedings of the 32nd International Conference on Software Engineering (ICSE'10), P455, DOI [DOI 10.1145/1806799.1806866, 10.1145/1806799.1806866]
   Bragdon A, 2010, CHI2010: PROCEEDINGS OF THE 28TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, VOLS 1-4, P2503
   Braun V., 2006, QUAL RES PSYCHOL, V3, P77, DOI [DOI 10.1191/1478088706QP063OA, 10.1191/1478088706qp063oa]
   Brdiczka O, 2010, IUI 2010, P281
   Breiman L., 2001, Machine Learning, V45, P5, DOI 10.1023/A:1010933404324
   Breiman L., 2001, Mach. Learn., V45, P5
   Bruegge B., 2004, OBJECT ORIENTED SOFT, V2004
   Card S. K., 1986, ACM SIGCHI B, V17, P53
   Coman ID, 2008, INT C PROGRAM COMPRE, P212, DOI 10.1109/ICPC.2008.16
   Czerwinski Mary, 2004, P SIGCHI C HUM FACT, P175, DOI [10.1145/985692.985715, DOI 10.1145/985692.985715]
   Dragunov A., 2005, P 10 INT C INTELLIGE, P75, DOI DOI 10.1145/1040830.1040855
   Efstathiou V, 2018, IEEE WORK CONF MIN S, P38, DOI 10.1145/3196398.3196448
   Fogarty J., 2005, P ACM C HUMAN FACTOR, P331
   Gonçalves MK, 2011, J UNIVERS COMPUT SCI, V17, P1913
   Gonzalez V.M., 2004, Proceedings of the SIGCHI Conference on Human Factors in Computing Systems, P113, DOI [DOI 10.1145/985692.985707, 10.1145/985692.985707]
   Gustafsson F, 2000, CITESEER, V1
   Hassib M, 2017, 16TH INTERNATIONAL CONFERENCE ON MOBILE AND UBIQUITOUS MULTIMEDIA (MUM 2017), P305, DOI 10.1145/3152832.3152865
   Iqbal ST, 2008, CHI 2008: 26TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS VOLS 1 AND 2, CONFERENCE PROCEEDINGS, P93
   Iqbal ST, 2007, CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, VOLS 1 AND 2, P697
   Kersten Mik, 2006, P 14 ACM SIGSOFT INT, P1
   Kevic K, 2017, PROC IEEE INT CONF S, P171, DOI 10.1109/ICSME.2017.48
   Kim YH, 2019, CHI 2019: PROCEEDINGS OF THE 2019 CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, DOI 10.1145/3290605.3300845
   Kim YH, 2016, 34TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, CHI 2016, P272, DOI 10.1145/2858036.2858428
   Koldijk Saskia, 2012, P 30 EUR C COGN ERG, P152, DOI [10.1145/2448136.2448170, DOI 10.1145/2448136.2448170]
   Lemaître G, 2017, J MACH LEARN RES, V18
   Lu D, 2018, PROCEEDINGS OF THE 2018 CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS (CHI 2018), DOI 10.1145/3173574.3173744
   Maalej W, 2017, J SYST SOFTWARE, V128, P267, DOI 10.1016/j.jss.2016.11.033
   Mark G, 2018, PROCEEDINGS OF THE 2018 CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS (CHI 2018), DOI 10.1145/3173574.3173666
   Mark G, 2017, PROCEEDINGS OF THE 2017 ACM INTERNATIONAL JOINT CONFERENCE ON PERVASIVE AND UBIQUITOUS COMPUTING AND PROCEEDINGS OF THE 2017 ACM INTERNATIONAL SYMPOSIUM ON WEARABLE COMPUTERS (UBICOMP/ISWC '17 ADJUNCT), P928, DOI 10.1145/3123024.3124558
   Mark G, 2008, CHI 2008: 26TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS VOLS 1 AND 2, CONFERENCE PROCEEDINGS, P107
   Meyer Andre N., 2017, Proceedings of the ACM on Human-Computer Interaction, V1, DOI 10.1145/3134714
   Meyer A. N, 2020, SUPPLEMENTARY MAT, DOI [10.5281/zenodo.2574049, DOI 10.5281/ZENODO.2574049]
   Meyer AN, 2017, IEEE T SOFTWARE ENG, V43, P1178, DOI 10.1109/TSE.2017.2656886
   Meyer AN, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P19, DOI 10.1145/2635868.2635892
   Mirza H.T., 2011, Proceedings of the 20th ACM international conference on Information and knowledge management, P2285
   Mirza HT, 2015, CYBERNET SYST, V46, P320, DOI 10.1080/01969722.2015.1012372
   Mirza HT, 2011, CYBERNET SYST, V42, P585, DOI 10.1080/01969722.2011.634675
   Murphy GC, 2005, LECT NOTES COMPUT SC, V3586, P33
   Nair R., 2005, P 19 ANN C BRIT HCI, P94
   Nazar N, 2016, J COMPUT SCI TECH-CH, V31, P883, DOI 10.1007/s11390-016-1671-1
   Nguyen G. H., 2009, Learning pattern classification tasks with imbalanced data sets, P193, DOI DOI 10.5772/7544
   Oliver Nuria, 2008, 13th International Conference on Intelligent User Interfaces. IUI 2008, DOI 10.1145/1378773.1378836
   Oliver N., 2006, 2006 International Conference on Intelligent User Interfaces, P194, DOI 10.1145/1111449.1111492
   Parnin C, 2010, CHI2010: PROCEEDINGS OF THE 28TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, VOLS 1-4, P93
   Parnin C, 2009, INT C PROGRAM COMPRE, P80, DOI 10.1109/ICPC.2009.5090030
   Pedregosa F, 2011, J MACH LEARN RES, V12, P2825
   PERRY DE, 1994, IEEE SOFTWARE, V11, P36, DOI 10.1109/52.300082
   Racine J, 2000, J ECONOMETRICS, V99, P39, DOI 10.1016/S0304-4076(00)00030-0
   Rattenbury T, 2007, CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, VOLS 1 AND 2, P687
   Reinhardt W, 2011, KNOWL PROCESS MANAG, V18, P150, DOI 10.1002/kpm.378
   Robertson G., 2000, CHI 2000 Conference Proceedings. Conference on Human Factors in Computing Systems. CHI 2000. The Future is Here, P494, DOI 10.1145/332040.332482
   Robertson G., 2004, P WORKING C ADV VISU, P85, DOI 10.1145/989863.989874
   Robillard M. P., 2004, "Workshop on Directions in Software Engineering Environments (WoDiSEE2004)" W2S Workshop - 26th International Conference on Software Engineering, P83, DOI 10.1049/ic:20040215
   Rule Adam, 2015, P 37 ANN M COGN SCI, P1
   Safer Izzet, 2007, P 2007 C CTR ADV STU, P229, DOI 10.1145/1321211.1321235
   Sahm A., 2010, LNI, V160, P473
   Shen J., 2006, 2006 International Conference on Intelligent User Interfaces, P86, DOI 10.1145/1111449.1111473
   Shen J., 2007, PROC IJCAI 07, P2868
   Shen Jianqiang., 2009, PROC IUI 09, P117
   Smith G. K., 2003, Practical considerations for managing osteoarthritic patients, P1
   Soules C.A. N., 2005, P 20 ACM S OPERATING, P119, DOI DOI 10.1145/1095809.1095822
   Stumpf S, 2005, P 20 NAT C ART INT W
   Treude C, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P625, DOI 10.1145/2786805.2786827
   Vasilescu B, 2016, PROC INT CONF SOFTW, P994, DOI 10.1145/2884781.2884875
   Whittaker S, 2016, 34TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, CHI 2016, P1729, DOI 10.1145/2858036.2858193
   Wu IC, 2005, Proceedings of the 2005 IEEE International Conference on Information Reuse and Integration, P19
   Zou LJ, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P6, DOI [10.1109/ICSM.2012.6405247, 10.1109/PowerCon.2012.6401422]
   Züger M, 2018, PROCEEDINGS OF THE 2018 CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS (CHI 2018), DOI 10.1145/3173574.3174165
   Züger M, 2017, PROCEEDINGS OF THE 2017 ACM SIGCHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS (CHI'17), P61, DOI 10.1145/3025453.3025662
NR 79
TC 1
Z9 1
U1 0
U2 5
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JAN 1
PY 2022
VL 48
IS 1
BP 225
EP 240
DI 10.1109/TSE.2020.2984086
PG 16
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA YG0HJ
UT WOS:000742179000013
OA Green Accepted, hybrid
DA 2024-07-18
ER

PT J
AU Tu, H
   Yu, Z
   Menzies, T
AF Tu, Huy
   Yu, Zhe
   Menzies, Tim
TI Better Data Labelling With EMBLEM (and how that Impacts Defect
   Prediction)
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Human-in-the-loop AI; data labelling; defect prediction; software
   analytics
ID STATIC CODE ATTRIBUTES; FAULT PREDICTION; SOFTWARE CHANGES; METRICS;
   TOOLS
AB Standard automatic methods for recognizing problematic development commits can be greatly improved via the incremental application of human+artificial expertise. In this approach, called EMBLEM, an AI tool first explore the software development process to label commits that are most problematic. Humans then apply their expertise to check those labels (perhaps resulting in the AI updating the support vectors within their SVM learner). We recommend this human+AI partnership, for several reasons. When a new domain is encountered, EMBLEM can learn better ways to label which comments refer to real problems. Also, in studies with 9 open source software projects, labelling via EMBLEM's incremental application of human+AI is at least an order of magnitude cheaper than existing methods (approximate to eight times). Further, EMBLEM is very effective. For the data sets explored here, EMBLEM better labelling methods significantly improved P(opt)20 and G-scores performance in nearly all the projects studied here.
C1 [Tu, Huy; Yu, Zhe; Menzies, Tim] North Carolina State Univ, Comp Sci, Coll Engn, Raleigh, NC 27695 USA.
C3 North Carolina State University
RP Menzies, T (corresponding author), North Carolina State Univ, Comp Sci, Coll Engn, Raleigh, NC 27695 USA.
EM hqtu@ncsu.edu; zyu9@ncsu.edu; timm@ieee.org
RI Tu, Huy/IAP-4457-2023; Menzies, Tim/X-7680-2019
OI Tu, Huy/0000-0002-7843-252X; Menzies, Tim/0000-0002-5040-3196; Yu,
   Zhe/0000-0002-6841-1725
FU NSF CISE [1826574, 1931425]
FX This work was partially funded by an NSF CISE Grant #1826574 and
   #1931425.
CR Agrawal A, 2021, IEEE T SOFTWARE ENG, V47, P2182, DOI 10.1109/TSE.2019.2945020
   Agrawal A, 2018, 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING - SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2018), P245, DOI 10.1145/3183519.3183549
   Agrawal A, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1050, DOI 10.1145/3180155.3180197
   Agrawal A, 2018, INFORM SOFTWARE TECH, V98, P74, DOI 10.1016/j.infsof.2018.02.005
   Amershi S, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE (ICSE-SEIP 2019), P291, DOI 10.1109/ICSE-SEIP.2019.00042
   Anderson JA, 2008, J COMPUT PHYS, V227, P5342, DOI 10.1016/j.jcp.2008.01.047
   [Anonymous], 1994, INTRO BOOTSTRAP
   Arcuri A, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1, DOI 10.1145/1985793.1985795
   Arisholm E., 2006, ISESE 06 P 2006 ACMI, P8
   Bangerth W, 2007, ACM T MATH SOFTWARE, V33, DOI 10.1145/1268776.1268779
   Benni KE, 2018, IEEE T SOFTWARE ENG, V44, P534, DOI 10.1109/TSE.2017.2731766
   Bernstein A., 2010, P 18 ACM SIGSOFT INT, P97
   Bird Christian, 2009, 2009 20th International Symposium on Software Reliability Engineering (ISSRE 2009), P109, DOI 10.1109/ISSRE.2009.17
   Bird C, 2009, 2009 6TH IEEE INTERNATIONAL WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES, P1, DOI 10.1109/MSR.2009.5069475
   Breiman L, 2001, MACH LEARN, V45, P5, DOI 10.1023/A:1010933404324
   Carver JC, 2007, PROC INT CONF SOFTW, P550
   Catolino Gemma, 2017, 2017 IEEE/ACM 4th International Conference on Mobile Software Engineering and Systems (MOBILESoft). Proceedings, P201, DOI 10.1109/MOBILESoft.2017.58
   Chen D, 2019, INT C PROGRAM COMPRE, P179, DOI 10.1109/ICPC.2019.00037
   Chen D, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P456, DOI 10.1145/3236024.3236050
   Cheung S.-C., 2011, P 19 ACM SIGSOFT S 1, P15
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   Cormack GV, 2017, SIGIR'17: PROCEEDINGS OF THE 40TH INTERNATIONAL ACM SIGIR CONFERENCE ON RESEARCH AND DEVELOPMENT IN INFORMATION RETRIEVAL, P5, DOI 10.1145/3077136.3080812
   Cormack GV, 2014, SIGIR'14: PROCEEDINGS OF THE 37TH INTERNATIONAL ACM SIGIR CONFERENCE ON RESEARCH AND DEVELOPMENT IN INFORMATION RETRIEVAL, P153, DOI 10.1145/2600428.2609601
   Cormack GV, 2016, SIGIR'16: PROCEEDINGS OF THE 39TH INTERNATIONAL ACM SIGIR CONFERENCE ON RESEARCH AND DEVELOPMENT IN INFORMATION RETRIEVAL, P75, DOI 10.1145/2911451.2911510
   Cormack GV, 2016, CIKM'16: PROCEEDINGS OF THE 2016 ACM CONFERENCE ON INFORMATION AND KNOWLEDGE MANAGEMENT, P1039, DOI 10.1145/2983323.2983776
   Cormack Gordon V, 2015, ARXIV150406868
   D'Ambros Marco, 2010, Proceedings of the 2010 7th IEEE Working Conference on Mining Software Repositories (MSR 2010), P31, DOI 10.1109/MSR.2010.5463279
   da Costa DA, 2017, IEEE T SOFTWARE ENG, V43, P641, DOI 10.1109/TSE.2016.2616306
   Di Remigio R, 2019, INT J QUANTUM CHEM, V119, DOI 10.1002/qua.25685
   Elbaum S., 2000, PROC INT C SOFTW MAI, P24
   Fahid F. M., 2019, ARXIV190508297
   Fan Y., 2019, IEEE T SOFTWARE ENG, P26
   Fu W., 2016, ARXIV160902613
   Fu W, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P49, DOI 10.1145/3106237.3106256
   Fu W, 2016, INFORM SOFTWARE TECH, V76, P135, DOI 10.1016/j.infsof.2016.04.017
   Gao CW, 2016, COMPUT PHYS COMMUN, V203, P212, DOI 10.1016/j.cpc.2016.02.013
   Ghotra B, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P789, DOI 10.1109/ICSE.2015.91
   Gonze X, 2020, COMPUT PHYS COMMUN, V248, DOI 10.1016/j.cpc.2019.107042
   Gowers R., 2016, MDANALYSIS PYTHONPAC, P98, DOI DOI 10.25080/MAJORA-629E541A-00E
   Hamill M, 2009, IEEE T SOFTWARE ENG, V35, P484, DOI 10.1109/TSE.2009.3
   Hassan AE, 2009, PROC INT CONF SOFTW, P78, DOI 10.1109/ICSE.2009.5070510
   Hatton L, 2008, IEEE SOFTWARE, V25, P82, DOI 10.1109/MS.2008.100
   Hindle Abram, 2008, P 2008 INT WORKING C, P99
   Huang Q, 2017, PROC IEEE INT CONF S, P159, DOI 10.1109/ICSME.2017.51
   Jureczko M, 2010, P 6 INT C PREDICTIVE, DOI DOI 10.1145/1868328.1868342
   Jureczko M., 2010, Model Methods Syst Dependability Oficyna Wydawnicza Politech Wroclawskiej, P69
   Kalliamvakou E., 2014, P 11 WORKING C MININ, P92, DOI DOI 10.1145/2597073.2597074
   Kalliamvakou E., 2015, PROMISES PERILS MINI
   Kamei Y, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 5, P33, DOI 10.1109/SANER.2016.56
   Kamei Y, 2013, IEEE T SOFTWARE ENG, V39, P757, DOI 10.1109/TSE.2012.70
   Kampenes VB, 2007, INFORM SOFTWARE TECH, V49, P1073, DOI 10.1016/j.infsof.2007.02.015
   Kanewala U, 2014, INFORM SOFTWARE TECH, V56, P1219, DOI 10.1016/j.infsof.2014.05.006
   Kim M, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P990, DOI 10.1145/2786805.2804429
   Kim S, 2008, IEEE T SOFTWARE ENG, V34, P181, DOI 10.1109/TSE.2007.70773
   Kocaguneli E, 2012, IEEE T SOFTWARE ENG, V38, P1403, DOI 10.1109/TSE.2011.111
   Koru AG, 2009, IEEE T SOFTWARE ENG, V35, P293, DOI 10.1109/TSE.2008.90
   Krishna R, 2019, IEEE T SOFTWARE ENG, V45, P1081, DOI 10.1109/TSE.2018.2821670
   Krishna R, 2016, IEEE INT CONF AUTOM, P122, DOI 10.1145/2970276.2970339
   Le Goues C, 2012, PROC INT CONF SOFTW, P3, DOI 10.1109/ICSE.2012.6227211
   Maassen J., 2018, XENON
   Maldonado ED, 2015, 2015 IEEE 7TH INTERNATIONAL WORKSHOP ON MANAGING TECHNICAL DEBT (MTD) PROCEEDINGS, P9, DOI 10.1109/MTD.2015.7332619
   Martignon L, 2008, J MATH PSYCHOL, V52, P352, DOI 10.1016/j.jmp.2008.04.003
   Mende T, 2010, EUR CON SFTWR MTNCE, P107, DOI 10.1109/CSMR.2010.18
   Menzies T, 2007, IEEE T SOFTWARE ENG, V33, P637, DOI 10.1109/TSE.2007.70721
   Menzies T, 2007, IEEE T SOFTWARE ENG, V33, P2, DOI 10.1109/TSE.2007.256941
   Menzies T, 2010, AUTOMAT SOFTW ENG, V17, P375, DOI 10.1007/s10515-010-0069-5
   Misirli AT, 2011, AI MAG, V32, P57, DOI 10.1609/aimag.v32i2.2348
   Mittas N, 2013, IEEE T SOFTWARE ENG, V39, P537, DOI 10.1109/TSE.2012.45
   Mockus A, 2000, PROC IEEE INT CONF S, P120, DOI 10.1109/ICSM.2000.883028
   Monden A, 2013, IEEE T SOFTWARE ENG, V39, P1345, DOI 10.1109/TSE.2013.21
   Moser R, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P181, DOI 10.1145/1368088.1368114
   Munaiah N, 2017, EMPIR SOFTW ENG, V22, P3219, DOI 10.1007/s10664-017-9512-6
   Nagappan N, 2005, PROC INT CONF SOFTW, P284, DOI 10.1145/1062455.1062514
   Nagappan N, 2005, PROC INT CONF SOFTW, P580, DOI 10.1145/1062455.1062558
   Nam J., 2017, IEEE Transactions on Software Engineering, V44, P874, DOI 10.1109/TSE.2017.2720603
   Nayrolles M, 2018, IEEE WORK CONF MIN S, P153, DOI 10.1145/3196398.3196438
   Ostrand TJ, 2005, IEEE T SOFTWARE ENG, V31, P340, DOI 10.1109/TSE.2005.49
   Ostrand TJ., 2004, Proceedings of the 2004 ACM SIGSOFT International Symposium on Software Testing and Analysis, ISSTA '04, V29, P86, DOI [DOI 10.1145/1013886.1007524, 10.1145/1013886.1007524]
   PLIMPTON S, 1995, J COMPUT PHYS, V117, P1, DOI 10.1006/jcph.1995.1039
   Radjenovic D, 2013, INFORM SOFTWARE TECH, V55, P1397, DOI 10.1016/j.infsof.2013.02.009
   Rahman F, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P424, DOI 10.1145/2568225.2568269
   Rahman F, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P432, DOI 10.1109/ICSE.2013.6606589
   Remigio R.D., 2014, PCMSolver
   Rodríguez-Pérez G, 2018, INFORM SOFTWARE TECH, V99, P164, DOI 10.1016/j.infsof.2018.03.009
   Ros Rasmus, 2017, P 21 INT C EV ASS SO, P118, DOI [10.1145/3084226.3084243, DOI 10.1145/3084226.3084243]
   Rosen C, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P966, DOI 10.1145/2786805.2803183
   Salomon-Ferrer R, 2013, WIRES COMPUT MOL SCI, V3, P198, DOI 10.1002/wcms.1121
   Segal J, 2008, IEEE SOFTWARE, V25, P18, DOI 10.1109/MS.2008.85
   Shatnawi R, 2010, IEEE T SOFTWARE ENG, V36, P216, DOI 10.1109/TSE.2010.9
   Shin Y, 2013, EMPIR SOFTW ENG, V18, P25, DOI 10.1007/s10664-011-9190-8
   Sliwerski J., 2005, ACM SIGSOFT SOFTWARE, P1, DOI DOI 10.1145/1082983.1083147
   Tantithamthavorn C, 2016, PROC INT CONF SOFTW, P321, DOI 10.1145/2884781.2884857
   Tian Y, 2012, PROC INT CONF SOFTW, P386, DOI 10.1109/ICSE.2012.6227176
   Tsay J, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P356, DOI 10.1145/2568225.2568315
   Tu H., 2020, ARXIV200305922
   Tu H, 2018, PROCEEDINGS OF THE 4TH ACM SIGSOFT INTERNATIONAL WORKSHOP ON SOFTWARE ANALYTICS (SWAN'18), P19, DOI 10.1145/3278142.3278145
   Vasilescu B, 2018, FDN SOFTW ENG
   Vasilescu B, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P805, DOI 10.1145/2786805.2786850
   Wallace B. C., 2011, Proceedings of the SIAM International Conference on Data Mining, SDM '11, P176
   Wallace BC, 2012, IEEE DATA MINING, P695, DOI 10.1109/ICDM.2012.115
   Wallace BC, 2010, BMC BIOINFORMATICS, V11, DOI 10.1186/1471-2105-11-55
   Wallace Byron C., 2010, P 16 ACM SIGKDD INT, P173, DOI DOI 10.1145/1835804.1835829
   Wallace Byron C., 2013, P KDD WORKSH DAT MIN, P5
   Wan ZY, 2020, IEEE T SOFTWARE ENG, V46, P1241, DOI 10.1109/TSE.2018.2877678
   Witten IH, 2011, MOR KAUF D, P1
   Yan M, 2019, IEEE T SOFTWARE ENG, V45, P1211, DOI 10.1109/TSE.2018.2831232
   Yang XL, 2017, INFORM SOFTWARE TECH, V87, P206, DOI 10.1016/j.infsof.2017.03.007
   Yang XL, 2015, 2015 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE SECURITY AND RELIABILITY (QRS 2015), P17, DOI 10.1109/QRS.2015.14
   Yang YB, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P157, DOI 10.1145/2950290.2950353
   Yu Z., 2019, SEARCHING BETTER TES
   Yu Z, 2019, IEEE Transactions on Software Engineering
   Yu Z, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P883, DOI 10.1145/3338906.3340448
   Yu Z, 2018, PROCEEDINGS OF THE 4TH ACM SIGSOFT INTERNATIONAL WORKSHOP ON NLP FOR SOFTWARE ENGINEERING (NL4SE '18), P10, DOI 10.1145/3283812.3283818
   Yu Z, 2019, EXPERT SYST APPL, V120, P57, DOI 10.1016/j.eswa.2018.11.021
   Yu Z, 2018, EMPIR SOFTW ENG, V23, P3161, DOI 10.1007/s10664-017-9587-0
   Zeng ZQ, 2008, 2008 3RD INTERNATIONAL CONFERENCE ON INTELLIGENT SYSTEM AND KNOWLEDGE ENGINEERING, VOLS 1 AND 2, P997, DOI 10.1109/ISKE.2008.4731075
   Zhang HY, 2007, IEEE T SOFTWARE ENG, V33, P635, DOI 10.1109/TSE.2007.70706
NR 117
TC 18
Z9 18
U1 0
U2 12
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JAN 1
PY 2022
VL 48
IS 1
BP 278
EP 294
DI 10.1109/TSE.2020.2986415
PG 17
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA YG0HJ
UT WOS:000742179000016
OA Green Submitted, hybrid
DA 2024-07-18
ER

PT J
AU Gao, ZP
   Jiang, LX
   Xia, X
   Lo, D
   Grundy, J
AF Gao, Zhipeng
   Jiang, Lingxiao
   Xia, Xin
   Lo, David
   Grundy, John
TI Checking Smart Contracts With Structural Code Embedding
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Computer bugs; Smart contracts; Cloning; Blockchains; Security; Smart
   contract; code embedding; clone detection; bug detection; ethereum;
   blockchain
AB Smart contracts have been increasingly used together with blockchains to automate financial and business transactions. However, many bugs and vulnerabilities have been identified in many contracts which raises serious concerns about smart contract security, not to mention that the blockchain systems on which the smart contracts are built can be buggy. Thus, there is a significant need to better maintain smart contract code and ensure its high reliability. In this paper, we propose an automated approach to learn characteristics of smart contracts in Solidity, which is useful for clone detection, bug detection and contract validation on smart contracts. Our new approach is based on word embeddings and vector space comparison. We parse smart contract code into word streams with code structural information, convert code elements (e.g., statements, functions) into numerical vectors that are supposed to encode the code syntax and semantics, and compare the similarities among the vectors encoding code and known bugs, to identify potential issues. We have implemented the approach in a prototype, named SmartEmbed,(1) 1. The anonymous replication packages can be accessed at: https://drive.google.com/file/d/1kauLT3y2IiHPkUlVx4FSTda-dVAyL4za/view?usp=sharing. and evaluated it with more than 22,000 smart contracts collected from the Ethereum blockchain. Results show that our tool can effectively identify many repetitive instances of Solidity code, where the clone ratio is around 90 percent. Code clones such as type-III or even type-IV semantic clones can also be detected accurately. Our tool can identify more than 1000 clone related bugs based on our bug databases efficiently and accurately. Our tool can also help to efficiently validate any given smart contract against a known set of bugs, which can help to improve the users' confidence in the reliability of the contract.
C1 [Gao, Zhipeng; Xia, Xin; Grundy, John] Monash Univ, Fac Informat Technol, Melbourne, Vic 3800, Australia.
   [Jiang, Lingxiao; Lo, David] Singapore Management Univ, Sch Informat Syst, Singapore 188065, Singapore.
C3 Monash University; Singapore Management University
RP Xia, X (corresponding author), Monash Univ, Fac Informat Technol, Melbourne, Vic 3800, Australia.
EM zhipeng.gao@monash.edu; lxjiang@smu.edu.sg; xin.xia@monash.edu;
   davidlo@smu.edu.sg; john.grundy@monash.edu
RI Xia, Xin/AAD-6217-2022; Jiang, Lingxiao/E-8553-2012; Grundy,
   John/I-6681-2012; Lo, David/A-2493-2012
OI Xia, Xin/0000-0002-6302-3256; Jiang, Lingxiao/0000-0002-4336-8548;
   Grundy, John/0000-0003-4928-7076; Lo, David/0000-0002-4367-7201
FU Australian Research Council's Discovery Early Career Researcher Award
   (DECRA) [DE200100021]; ARC Discovery Project scheme [DP170101932];
   Singapore Ministry of Education (MOE) Academic Research Fund (AcRF) Tier
   1 grant from SIS at SMU; Australian Research Council [DE200100021]
   Funding Source: Australian Research Council
FX This research was partially supported by the Australian Research
   Council's Discovery Early Career Researcher Award (DECRA) funding scheme
   (DE200100021), ARC Discovery Project scheme (DP170101932), and the
   Singapore Ministry of Education (MOE) Academic Research Fund (AcRF) Tier
   1 grant from SIS at SMU.
CR Alharby Maher., 2018, 2018 International Conference on Cloud Computing, Big Data and Blockchain (ICCBB), P1, DOI DOI 10.1109/ICCBB.2018.8756390
   Alon U, 2018, ACM SIGPLAN NOTICES, V53, P404, DOI [10.1145/3192366.3192412, 10.1145/3296979.3192412]
   Lam AN, 2015, IEEE INT CONF AUTOM, P476, DOI 10.1109/ASE.2015.73
   [Anonymous], 1993, Computing Science and Statistics
   Atzei N, 2017, LECT NOTES COMPUT SC, V10204, P164, DOI 10.1007/978-3-662-54455-6_8
   Baker BS, 1996, J COMPUT SYST SCI, V52, P28, DOI 10.1006/jcss.1996.0003
   Bartoletti Massimo, 2017, Financial Cryptography and Data Security. FC 2017 International Workshops WAHC, BITCOIN, VOTING, WTSC, and TA. Revised Selected Papers: LNCS 10323, P494, DOI 10.1007/978-3-319-70278-0_31
   Bhargavan K, 2016, PROCEEDINGS OF THE 2016 ACM WORKSHOP ON PROGRAMMING LANGUAGES AND ANALYSIS FOR SECURITY (PLAS'16), P91, DOI 10.1145/2993600.2993611
   Bojanowski P., 2017, Transactions of the Association for Computational Linguistics, V5, P135, DOI DOI 10.1162/TACLA00051
   Brown C. E., 2017, P 8 INT C INT THEOR, P91
   Chen T, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P442, DOI 10.1109/SANER.2017.7884650
   CoinMarketCap, CRYPT TOT MARK CAP
   Corley CS, 2015, PROC IEEE INT CONF S, P556, DOI 10.1109/ICSM.2015.7332513
   DAO, DAO ORG
   DeFreez D, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P423, DOI 10.1145/3236024.3236059
   Delmolino K, 2016, LECT NOTES COMPUT SC, V9604, P79, DOI 10.1007/978-3-662-53357-4_6
   Dillig I, 2007, PLDI'07: PROCEEDINGS OF THE 2007 ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P435, DOI 10.1145/1250734.1250784
   Ducasse S., 1999, Proceedings IEEE International Conference on Software Maintenance - 1999 (ICSM'99). `Software Maintenance for Business Change' (Cat. No.99CB36360), P109, DOI 10.1109/ICSM.1999.792593
   Egbertsen W., REPLACING PAPER CONT
   EtherScan, ETH BLOCK EXPL
   Gabel M, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P321, DOI 10.1145/1368088.1368132
   Gao CY, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P163, DOI 10.1109/ASE.2019.00025
   Gao ZP, 2019, PROC IEEE INT CONF S, P394, DOI 10.1109/ICSME.2019.00067
   Gu XD, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P933, DOI 10.1145/3180155.3180167
   Gu XD, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P631, DOI 10.1145/2950290.2950334
   Haque M. S., 2018, P ACMSE C
   Jiang LX, 2007, PROC INT CONF SOFTW, P96
   Jiang LX, 2009, ISSTA 2009: INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P81
   Jiang Lingxiao, 2007, P THE 6 JOINT M EURO, P55, DOI DOI 10.1145/1287624.1287634
   Johnson J. H., 1994, Proceedings. CASCON '94. Integrated Solutions, P9
   Johnson J. H., 1993, Proceedings CASCON '93, P171
   Kamiya T, 2002, IEEE T SOFTWARE ENG, V28, P654, DOI 10.1109/TSE.2002.1019480
   Kamiya T, 2013, CONF PROC INT SYMP C, P227, DOI 10.1109/ICPC.2013.6613854
   Kim K, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P946, DOI 10.1145/3180155.3180187
   Komondoor R, 2001, LECT NOTES COMPUT SC, V2126, P40
   Koschke R, 2006, WORK CONF REVERSE EN, P253
   Krinke J, 2001, EIGHTH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P301, DOI 10.1109/WCRE.2001.957835
   Lawall Julia, 2010, Proceedings of the 2010 Eighth European Dependable Computing Conference (EDCC 2010), P191, DOI 10.1109/EDCC.2010.31
   Li JY, 2012, PROC INT CONF SOFTW, P310, DOI 10.1109/ICSE.2012.6227183
   Li XQ, 2020, FUTURE GENER COMP SY, V107, P841, DOI 10.1016/j.future.2017.08.020
   Li ZM, 2004, USENIX ASSOCIATION PROCEEDINGS OF THE SIXTH SYMPOSIUM ON OPERATING SYSTEMS DESIGN AND IMPLEMENTATION (OSDE '04), P289
   Liu Chao, 2006, Proc. 12th ACMSIGKDD Int'l Con. on Knowledge Discovery and Data Mining (KDD 06), P872, DOI DOI 10.1145/1150402.1150522
   Luu L, 2016, CCS'16: PROCEEDINGS OF THE 2016 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P254, DOI 10.1145/2976749.2978309
   Mikolov T., 2013, ADV NEURAL INFORM PR, V26, P3111, DOI DOI 10.5555/2999792.2999959
   Mikolov T, 2013, ICLR WORKSHOP POSTER
   Mou LL, 2016, AAAI CONF ARTIF INTE, P1287
   Mueller B., 2018, P 9 ANN HITB SEC C, P2
   Organization, W. H. Coronavirus disease (COVID-19) pandemic
   Peng H, 2015, LECT NOTES ARTIF INT, V9403, P547, DOI 10.1007/978-3-319-25159-2_49
   Pradel M., 2017, TUDCS20170295
   Ray B, 2013, IEEE INT CONF AUTOM, P367, DOI 10.1109/ASE.2013.6693095
   Roy J. R., 2007, QUEENS SCH COMPUTING, V541, P64
   Solon, SOL HIGH LEV LANG IM
   Srivastava V, 2011, PLDI 11: PROCEEDINGS OF THE 2011 ACM CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P343
   Su FH, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 3, P21, DOI 10.1109/SANER.2016.75
   Szabo N., SMART CONTRACTS BUIL
   Tikhomirov S, 2018, 2018 IEEE/ACM 1ST INTERNATIONAL WORKSHOP ON EMERGING TRENDS IN SOFTWARE ENGINEERING FOR BLOCKCHAIN (WETSEB), P9, DOI 10.1145/3194113.3194115
   Touzard H., 1981, MEDIACION SOLUCION C
   TrailOfBits, 2017, MANT SYMB EX HUM
   TrailOfBits, NOT SMART CONTR
   Nguyen TD, 2017, PROC INT CONF SOFTW, P438, DOI 10.1109/ICSE.2017.47
   Tsankov P, 2018, PROCEEDINGS OF THE 2018 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY (CCS'18), P67, DOI 10.1145/3243734.3243780
   Turian J, 2010, ACL 2010: 48TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, P384
   Wan ZY, 2017, IEEE WORK CONF MIN S, P413, DOI 10.1109/MSR.2017.59
   Wang K., 2017, ABS171107163 CORR
   Wang S, 2016, PROC INT CONF SOFTW, P297, DOI 10.1145/2884781.2884804
   White M, 2019, 2019 IEEE 26TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER), P479, DOI [10.1109/saner.2019.8668043, 10.1109/SANER.2019.8668043]
   White M, 2016, IEEE INT CONF AUTOM, P87, DOI 10.1145/2970276.2970326
   White M, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P334, DOI 10.1109/MSR.2015.38
   WUU Y, 1991, SOFTWARE PRACT EXPER, V21, P739, DOI 10.1002/spe.4380210706
   Yang XL, 2015, 2015 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE SECURITY AND RELIABILITY (QRS 2015), P17, DOI 10.1109/QRS.2015.14
   Ye X, 2016, PROC INT CONF SOFTW, P404, DOI 10.1145/2884781.2884862
   Zheng ZB, 2018, INT J WEB GRID SERV, V14, P352, DOI 10.1504/IJWGS.2018.095647
NR 73
TC 57
Z9 60
U1 0
U2 29
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD DEC 1
PY 2021
VL 47
IS 12
BP 2874
EP 2891
DI 10.1109/TSE.2020.2971482
PG 18
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA XM6HB
UT WOS:000728924600014
OA Green Accepted, Green Submitted
DA 2024-07-18
ER

PT J
AU Krüger, S
   Spath, J
   Ali, K
   Bodden, E
   Mezini, M
AF Krueger, Stefan
   Spath, Johannes
   Ali, Karim
   Bodden, Eric
   Mezini, Mira
TI CrySL: An Extensible Approach to Validating the Correct Usage of
   Cryptographic APIs
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Java; Encryption; Static analysis; Tools; Ciphers; Semantics;
   Cryptography; domain-specific language; static analysis
ID SECURITY; SOFTWARE
AB Various studies have empirically shown that the majority of Java and Android applications misuse cryptographic libraries, causing devastating breaches of data security. It is crucial to detect such misuses early in the development process. To detect cryptography misuses, one must define secure uses first, a process mastered primarily by cryptography experts but not by developers. In this paper, we present CrySL, a specification language for bridging the cognitive gap between cryptography experts and developers. CrySL enables cryptography experts to specify the secure usage of the cryptographic libraries they provide. We have implemented a compiler that translates such CrySL specification into a context-sensitive and flow-sensitive demand-driven static analysis. The analysis then helps developers by automatically checking a given Java or Android app for compliance with the CrySL-encoded rules. We have designed an extensive CrySL rule set for the Java Cryptography Architecture (JCA), and empirically evaluated it by analyzing 10,000 current Android apps and all 204,788 current Java software artefacts on Maven Central. Our results show that misuse of cryptographic APIs is still widespread, with 95 percent of apps and 63 percent of Maven artefacts containing at least one misuse. Our easily extensible CrySL rule set covers more violations than previous special-purpose tools that contain hard-coded rules, while still offering a more precise analysis.
C1 [Krueger, Stefan; Bodden, Eric] Paderborn Univ, D-33098 Paderborn, Germany.
   [Spath, Johannes; Bodden, Eric] Fraunhofer IEM, D-33102 Paderborn, Germany.
   [Ali, Karim] Univ Alberta, Edmonton, AB T6G 2R3, Canada.
   [Mezini, Mira] Tech Univ Darmstadt, D-64289 Darmstadt, Germany.
C3 University of Paderborn; University of Alberta; Technical University of
   Darmstadt
RP Krüger, S (corresponding author), Paderborn Univ, D-33098 Paderborn, Germany.
EM stefan.krueger@uni-paderborn.de; johannes.spaeth@iem.fraunhofer.de;
   karim.ali@ualberta.ca; eric.bodden@uni-paderborn.de;
   mezini@informatik.tu-darmstadt.de
RI Bodden, Eric/AAE-1365-2021
OI Bodden, Eric/0000-0003-3470-3647
FU DFG; Natural Sciences and Engineering Research Council of Canada; Heinz
   Nixdorf Foundation; Fraunhofer ATTRACT grant; Oracle Collaborative
   Research Award
FX This work was supported by the DFG through its Collaborative Research
   Center CROSSING, the project RUNSECURE, by the Natural Sciences and
   Engineering Research Council of Canada, the Heinz Nixdorf Foundation, a
   Fraunhofer ATTRACT grant, and an Oracle Collaborative Research Award. We
   would also like to thank the maintainers of AndroZoo for allowing us to
   use their data set in our evaluation. We finally thank Andreas Dann,
   Sarah Nadi, Michael Reif, Lisa Nguyen Quang Do, and Michael Eichberg for
   their help with and early feedback on CRYSL.
CR Acar Y, 2017, 2017 IEEE CYBERSECURITY DEVELOPMENT (SECDEV), P22, DOI 10.1109/SecDev.2017.17
   Alhadidi D, 2009, AOSD'09: 8TH INTERNATIONAL CONFERENCE ON ASPECT-ORIENTED SOFTWARE DEVELOPMENT, P15
   Allan C, 2005, ACM SIGPLAN NOTICES, V40, P345, DOI 10.1145/1103845.1094839
   Allix K, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P468, DOI [10.1145/2901739.2903508, 10.1109/MSR.2016.056]
   Arteau P, 2018, FINDSECBUGS
   Arzt S, 2014, ACM SIGPLAN NOTICES, V49, P259, DOI [10.1145/2666356.2594299, 10.1145/2594291.2594299]
   BACKUS JW, 1963, COMMUN ACM, V6, P1, DOI 10.1145/366193.366201
   Ball T., 2001, Model Checking Software. 8th International SPIN Workshop. Proceedings (Lecture Notes in Computer Science Vol.2057), P103
   Ball T, 2002, ACM SIGPLAN NOTICES, V37, P1, DOI 10.1145/565816.503274
   Bierhoff K, 2007, OOPSLA: 22ND INTERNATIONAL CONFERENCE ON OBJECT-ORIENTED PROGRAMMING, SYSTEMS, LANGUAGES, AND APPLICATIONS, PROCEEDINGS, P301
   Bodden E., 2010, Proceedings of the 32nd ACM/IEEE international Conference on Software Engineering, P5
   Bodden E, 2012, ACM T PROGR LANG SYS, V34, DOI 10.1145/2220365.2220366
   Bodden Eric, 2014, P 3 ACM SIGPLAN INT
   Braga A, 2017, PROC INT SYMP SOFTW, P170, DOI 10.1109/ISSRE.2017.27
   Chatzikonstantinou A., 2016, P 9 EAI INT C BIOINS, P83, DOI DOI 10.4108/EAI.3-12-2015.2262471
   Dean J, 1995, LECT NOTES COMPUT SC, V952, P77, DOI 10.1007/3-540-49538-x_5
   Nguyen DC, 2017, CCS'17: PROCEEDINGS OF THE 2017 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P1065, DOI 10.1145/3133956.3133977
   Egele M., 2013, P 2013 ACM SIGSAC C, P73
   Fahl S., 2012, ACM CCS 12, P50, DOI DOI 10.1145/2382196.2382205
   Fischer F, 2017, P IEEE S SECUR PRIV, P121, DOI 10.1109/SP.2017.31
   Georgiev Martin, 2012, P 2012 ACM C COMPUTE, P38
   German Federal Office for Information Security (BSI), 2017, TR021021 BSI
   Goldsmith S, 2005, ACM SIGPLAN NOTICES, V40, P385, DOI 10.1145/1103845.1094841
   Kiczales G., 2001, ECOOP 2001 - Object-Oriented Programming. 15th European Conference. Proceedings (Lecture Notes in Computer Science Vol.2072), P327
   Kohlhagen Max, 2015, BLACKHAT EUROPE
   Krüger S, 2017, IEEE INT CONF AUTOM, P931, DOI 10.1109/ASE.2017.8115707
   Kruger Stefan, 2018, P 32 EUR C OBJ OR PR
   Lam P., 2011, P CET US COMP INFR W, V15, P35
   Lazar D, 2014, P 5 AS PAC WORKSH SY, DOI [10.1145/2637166.2637237, DOI 10.1145/2637166.2637237]
   Livshits VB, 2005, USENIX ASSOCIATION PROCEEDINGS OF THE 14TH USENIX SECURITY SYMPOSIUM, P271
   Martin M, 2005, ACM SIGPLAN NOTICES, V40, P365, DOI 10.1145/1103845.1094840
   McGrew DA, 2004, LECT NOTES COMPUT SC, V3348, P343
   Morgan Clint., 2007, AOSD 07, P63
   Nadi S, 2016, PROC INT CONF SOFTW, P935, DOI 10.1145/2884781.2884790
   Naeem NA, 2008, OOPSLA 2008 NASHVILLE, CONFERENCE PROCEEDINGS, P347
   NCCGroup, 2018, VISUALCODEGREPPER
   O. Inc, 2017, JAV CRYPT ARCH JCA R
   Paletov R, 2018, ACM SIGPLAN NOTICES, V53, P450, DOI [10.1145/3192366.3192403, 10.1145/3296979.3192403]
   Rasthofer S, 2016, 23RD ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2016), DOI 10.14722/ndss.2016.23066
   Reif M, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P474, DOI 10.1145/2950290.2950312
   RigsIT, 2018, XANITIZER
   Robillard MP, 2013, IEEE T SOFTWARE ENG, V39, P613, DOI 10.1109/TSE.2012.63
   Scovetta M, 2018, YASCA
   Shao S, 2014, 2014 IEEE 12TH INTERNATIONAL CONFERENCE ON DEPENDABLE, AUTONOMIC AND SECURE COMPUTING (DASC)/2014 IEEE 12TH INTERNATIONAL CONFERENCE ON EMBEDDED COMPUTING (EMBEDDEDCOM)/2014 IEEE 12TH INTERNATIONAL CONF ON PERVASIVE INTELLIGENCE AND COMPUTING (PICOM), P75, DOI 10.1109/DASC.2014.22
   Spath J., 2016, PROC EUR C OBJECT OR, p22:1, DOI [10.4230/DARTS.2.1.12, DOI 10.4230/LIPICS.ECOOP.2016.22]
   Späth J, 2017, P ACM PROGRAM LANG, V1, DOI 10.1145/3133923
   STROM RE, 1986, IEEE T SOFTWARE ENG, V12, P157, DOI 10.1109/TSE.1986.6312929
   The OpenSSL Project, 1999, OpenSSL, Cryptography and SSL/TLS Toolkit
   V. (CA, 2017, STATE SOFTWARE SECUR
   Vallée-Rai R, 2000, LECT NOTES COMPUT SC, V1781, P18
   Wang QW, 2017, AEBMR ADV ECON, V26, P301
NR 51
TC 10
Z9 11
U1 0
U2 12
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD NOV 1
PY 2021
VL 47
IS 11
BP 2382
EP 2400
DI 10.1109/TSE.2019.2948910
PG 19
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA WW2QE
UT WOS:000717767100005
OA Green Published
DA 2024-07-18
ER

PT J
AU Temple, P
   Acher, M
   Jézéquel, JM
AF Temple, Paul
   Acher, Mathieu
   Jezequel, Jean-Marc
TI Empirical Assessment of Multimorphic Testing
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Testing; Software measurement; Software systems; Videos; Task analysis;
   Generators; Software product lines; software testing; performance
   testing; test evaluation
ID LANGUAGE
AB The performance of software systems such as speed, memory usage, correct identification rate, tends to be an evermore important concern, often nowadays on par with functional correctness for critical systems. Systematically testing these performance concerns is however extremely difficult, in particular because there exists no theory underpinning the evaluation of a performance test suite, i.e., to tell the software developer whether such a test suite is "good enough" or even whether a test suite is better than another one. This paper proposes to apply Multimorphic testing and empirically assess the effectiveness of performance test suites of software systems coming from various domains. By analogy with mutation testing, our core idea is to leverage the typical configurability of these systems, and to check whether it makes any difference in the outcome of the tests: i.e., are some tests able to "kill" underperforming system configurations? More precisely, we propose a framework for defining and evaluating the coverage of a test suite with respect to a quantitative property of interest. Such properties can be the execution time, the memory usage or the success rate in tasks performed by a software system. This framework can be used to assess whether a new test case is worth adding to a test suite or to select an optimal test suite with respect to a property of interest. We evaluate several aspects of our proposal through 3 empirical studies carried out in different fields: object tracking in videos, object recognition in images, and code generators.
C1 [Temple, Paul] Univ Namur, PReCISE, NaDi, B-5000 Namur, Belgium.
   [Acher, Mathieu; Jezequel, Jean-Marc] Univ Rennes, CNRS, IRISA, INRIA, F-35065 Rennes, France.
C3 University of Namur; Universite de Rennes; Centre National de la
   Recherche Scientifique (CNRS); Inria
RP Temple, P (corresponding author), Univ Namur, PReCISE, NaDi, B-5000 Namur, Belgium.
EM paul.temple@unamur.be; mathieu.acher@irisa.fr;
   Jean-Marc.Jezequel@irisa.fr
RI Jezequel, Jean-Marc/AAF-3854-2019
OI Jezequel, Jean-Marc/0000-0002-0582-9745; Acher,
   Mathieu/0000-0003-1483-3858; Temple, Paul/0000-0002-8276-0593
FU  [ANR17-CE25-0010-01]
FX We would like to thank Bruno Sericola from Inria RennesBretagne
   Atlantique who helped us in the formalization of our work. This research
   was partially funded by the ANR17-CE25-0010-01 VaryVary project.
CR Acher M, 2013, SCI COMPUT PROGRAM, V78, P657, DOI 10.1016/j.scico.2012.12.004
   Alférez M, 2019, SOFTWARE QUAL J, V27, P307, DOI 10.1007/s11219-017-9400-8
   Andrews JH, 2006, IEEE T SOFTWARE ENG, V32, P608, DOI 10.1109/TSE.2006.83
   [Anonymous], 2016, PETS 2016 DATASET
   [Anonymous], 2016, P ACMSIGPLAN INT C G
   [Anonymous], 2012, ACM QUEUE, DOI DOI 10.1145/2090147.2094081
   [Anonymous], 2016, Feature-Oriented Software Product Lines
   [Anonymous], 2006, CALTECH256 IMAGE DAT
   Bak K, 2011, LECT NOTES COMPUT SC, V6563, P102, DOI 10.1007/978-3-642-19440-5_7
   Barr ET, 2015, IEEE T SOFTWARE ENG, V41, P507, DOI 10.1109/TSE.2014.2372785
   Boussaa M., 2017, THESIS U RENNES
   Cohen MB, 2008, IEEE T SOFTWARE ENG, V34, P633, DOI 10.1109/TSE.2008.50
   Czarnecki K, 2008, SPLC 2008: 12TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE, PROCEEDINGS, P22, DOI 10.1109/SPLC.2008.49
   Deng J, 2009, PROC CVPR IEEE, P248, DOI 10.1109/CVPRW.2009.5206848
   Devroey X, 2016, PROC INT CONF SOFTW, P655, DOI 10.1145/2884781.2884821
   Everingham M, 2015, INT J COMPUT VISION, V111, P98, DOI 10.1007/s11263-014-0733-5
   Galindo J.A., 2014, P 2014 INT S SOFTWAR, P293, DOI [10.1145/2610384.2610411, DOI 10.1145/2610384.2610411]
   Gligoric M., 2013, P 2013 INT S SOFTW T, P302, DOI DOI 10.1145/2483760.2483769
   Godefroid P, 2005, ACM SIGPLAN NOTICES, V40, P213, DOI 10.1145/1064978.1065036
   Guo J., 2014, P 29 ACMIEEE INT C A, P409, DOI 10.1145/2642937.2642971
   Halin A, 2019, EMPIR SOFTW ENG, V24, P674, DOI 10.1007/s10664-018-9635-4
   Henard C, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P517, DOI 10.1109/ICSE.2015.69
   Henard C, 2014, IEEE T SOFTWARE ENG, V40, P650, DOI 10.1109/TSE.2014.2327020
   Nguyen HV, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P907, DOI 10.1145/2568225.2568300
   Jiang Z.M., 2010, INT S SOFTWARE TESTI, P143
   Jörges S, 2014, LECT NOTES COMPUT SC, V8802, P425, DOI 10.1007/978-3-662-45234-9_30
   Johansen Martin Fagereng, 2012, P 16 INT SOFTWARE PR, P46, DOI [10.1145/2362536.2362547, DOI 10.1145/2362536.2362547]
   Johnson-Roberson M., 2016, DRIVING MATRIX CAN V
   Kim C. H. P., 2012, Proceedings of the 2012 IEEE 23rd International Symposium on Software Reliability Engineering (ISSRE), P221, DOI 10.1109/ISSRE.2012.23
   Kim C.H. P., 2013, Proceedings of the 2013 9th Joint Meeting on Foundations of Software Engineering, P257
   Lin T., 2014, MICROSOFT COCO COMM
   Malik H, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P1012, DOI 10.1109/ICSE.2013.6606651
   McKeeman William M., 1998, DIGIT TECH J, V10, P100
   Medeiros F, 2016, PROC INT CONF SOFTW, P643, DOI 10.1145/2884781.2884793
   MILLER JC, 1963, COMMUN ACM, V6, P58, DOI 10.1145/366246.366248
   Nghiem AT, 2007, 2007 IEEE CONFERENCE ON ADVANCED VIDEO AND SIGNAL BASED SURVEILLANCE, P476, DOI 10.1109/AVSS.2007.4425357
   Nghiem A.-T., 2007, P IEEE WORKSH MOT VI
   Oh J, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P61, DOI 10.1145/3106237.3106273
   Papadakis Mike, 2010, Proceedings of the 2010 IEEE 21st International Symposium on Software Reliability Engineering (ISSRE 2010), P121, DOI 10.1109/ISSRE.2010.38
   Patrick M, 2016, IEEE INT CONF AUTOM, P654, DOI 10.1145/2970276.2970333
   Pei KX, 2017, PROCEEDINGS OF THE TWENTY-SIXTH ACM SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES (SOSP '17), P1, DOI 10.1145/3132747.3132785
   Lamancha BP, 2010, LECT NOTES COMPUT SC, V6435, P111, DOI 10.1007/978-3-642-16573-3_9
   Ponce J, 2006, LECT NOTES COMPUT SC, V4170, P29
   Richard-Foy J, 2014, ACM SIGPLAN NOTICES, V49, P53, DOI [10.1145/2517208.2517227, 10.1145/2637365.2517227]
   Rojas JM, 2017, EMPIR SOFTW ENG, V22, P852, DOI 10.1007/s10664-015-9424-2
   Sarkar A, 2015, IEEE INT CONF AUTOM, P342, DOI 10.1109/ASE.2015.45
   Scott DW, 2015, WILEY SER PROBAB ST, P1, DOI 10.1002/9781118575574
   SCOTT DW, 1979, BIOMETRIKA, V66, P605, DOI 10.1093/biomet/66.3.605
   Segura S, 2017, 2017 IEEE/ACM 39TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: NEW IDEAS AND EMERGING TECHNOLOGIES RESULTS TRACK (ICSE-NIER), P7, DOI 10.1109/ICSE-NIER.2017.16
   Segura S, 2016, IEEE T SOFTWARE ENG, V42, P805, DOI 10.1109/TSE.2016.2532875
   Shrivastava A, 2017, PROC CVPR IEEE, P2242, DOI 10.1109/CVPR.2017.241
   Silverman, 2018, DENSITY ESTIMATION S, DOI 10.1201/9781315140919
   Stepasyuk S., 2015, THESIS U GOTHENBURG
   Strekelj D, 2015, INT J ELECTR COMPUT, V6, P9
   Stürmer I, 2007, IEEE T SOFTWARE ENG, V33, P622, DOI 10.1109/TSE.2007.70708
   Stürmer I, 2003, 18TH IEEE INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P286, DOI 10.1109/ASE.2003.1240322
   Temple P, 2018, PROC IEEE ACM INT C, P432, DOI 10.1145/3183440.3195043
   Thüm T, 2014, ACM COMPUT SURV, V47, DOI 10.1145/2580950
   Thüma T, 2014, SCI COMPUT PROGRAM, V79, P70, DOI 10.1016/j.scico.2012.06.002
   Tian Y., 2017, DEEPTEST AUTOMATED
   VOUK MA, 1990, INFORM SOFTWARE TECH, V32, P34, DOI 10.1016/0950-5849(90)90044-R
   Yilmaz C, 2006, IEEE T SOFTWARE ENG, V32, P20, DOI 10.1109/TSE.2006.8
   Zendel O, 2015, IEEE I CONF COMP VIS, P2066, DOI 10.1109/ICCV.2015.239
NR 63
TC 5
Z9 5
U1 0
U2 4
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUL 1
PY 2021
VL 47
IS 7
BP 1511
EP 1527
DI 10.1109/TSE.2019.2926971
PG 17
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA TJ6XV
UT WOS:000673623000010
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Wan, ZY
   Xia, X
   Hassan, AE
AF Wan, Zhiyuan
   Xia, Xin
   Hassan, Ahmed E.
TI What Do Programmers Discuss About Blockchain? A Case Study on the Use of
   Balanced LDA and the Reference Architecture of a Domain to Capture
   Online Discussions About Blockchain Platforms Across Stack Exchange
   Communities
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Blockchain; Peer-to-peer computing; Computer architecture; Smart
   contracts; Programming; Bitcoin; Empirical study; reference
   architecture; blockchain; stack overflow; stack exchange
ID TOPICS; RETRIEVAL; BITCOIN
AB Blockchain-related discussions have become increasingly prevalent in programming Q&A websites, such as Stack Overflow and other Stack Exchange communities. Analyzing and understanding those discussions could provide insights about the topics of interest to practitioners, and help the software development and research communities better understand the needs and challenges facing developers as they work in this new domain. Prior studies propose the use of LDA to study the Stack Exchange discussions. However, a simplistic use of LDA would capture the topics in discussions blindly without keeping in mind the variety of the dataset and domain-specific concepts. Specifically, LDA is biased towards larger sized corpora; and LDA-derived topics are not linked to higher level domain-specific concepts. We propose an approach that combines balanced LDA (which ensures that the topics are balanced across a domain) with the reference architecture of a domain to capture and compare the popularity and impact of discussion topics across the Stack Exchange communities. Popularity measures the distribution of interest in discussions, and impact gauges the trend of popularity over time. We made a number of interesting observations, including: (1) Bitcoin, Ethereum, Hyperledger Fabric and Corda are the four most commonly-discussed blockchain platforms on the Stack Exchange communities. (2) A broad range of topics are discussed across the various platforms of distinct layers in our derived reference architecture. (3) The Application layer topics exhibit the highest popularity (33.2 percent) and fastest growth in topic impact since November 2015. (4) The Application, API, Consensus and Network layer topics are discussed across the studied blockchain platforms, but exhibit different distributions in popularity. (5) The impact of architectural layer topics exhibits an upward trend, but is growing at different speeds across the studied blockchain platforms. The breakdown of the topic impact across the architectural layers is relatively stable over time except for the Hyperledger Fabric platform. Based on our findings, we highlighted future directions and provided recommendations for practitioners and researchers.
C1 [Wan, Zhiyuan] Zhejiang Univ, Coll Comp Sci & Technol, Hangzhou 310027, Zhejiang, Peoples R China.
   [Xia, Xin] Monash Univ, Fac Informat Technol, Melbourne, Vic 3000, Australia.
   [Hassan, Ahmed E.] Queens Univ, Sch Comp, Kingston, ON K7L 3N6, Canada.
C3 Zhejiang University; Monash University; Queens University - Canada
RP Xia, X (corresponding author), Monash Univ, Fac Informat Technol, Melbourne, Vic 3000, Australia.
EM wanzhiyuan@zju.edu.cn; xin.xia@monash.edu; ahmed@cs.queensu.ca
RI Xia, Xin/AAD-6217-2022; KHALIFA, AHMED khalifa/HKF-2246-2023
OI Xia, Xin/0000-0002-6302-3256; KHALIFA, AHMED
   khalifa/0000-0002-2918-7572; Wan, Zhiyuan/0000-0001-7657-6653
FU National Key Research and Development Program of China [2018Y
   FB1003904]; NSFC Program [61602403]; Project of Science and Technology
   Research and Development Program of China Railway Corporation
   [P2018X002]; Fundamental Research Funds for the Central Universities
FX This research was partially supported by the National Key Research and
   Development Program of China (2018Y FB1003904), NSFC Program (No.
   61602403), Project of Science and Technology Research and Development
   Program of China Railway Corporation (P2018X002), and the Fundamental
   Research Funds for the Central Universities.
CR Agrawal A, 2018, INFORM SOFTWARE TECH, V98, P74, DOI 10.1016/j.infsof.2018.02.005
   Alastria, 2019, REFERENCE ARCHITECTU
   Allamanis M, 2013, IEEE WORK CONF MIN S, P53, DOI 10.1109/MSR.2013.6624004
   Androulaki E, 2018, EUROSYS '18: PROCEEDINGS OF THE THIRTEENTH EUROSYS CONFERENCE, DOI 10.1145/3190508.3190538
   Angelov S, 2012, INFORM SOFTWARE TECH, V54, P417, DOI 10.1016/j.infsof.2011.11.009
   Nguyen AT, 2012, IEEE INT CONF AUTOM, P70, DOI 10.1145/2351676.2351687
   Anh Tuan Nguyen, 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P263, DOI 10.1109/ASE.2011.6100062
   Asaduzzaman M, 2013, IEEE WORK CONF MIN S, P97, DOI 10.1109/MSR.2013.6624015
   Atzei N, 2017, LECT NOTES COMPUT SC, V10204, P164, DOI 10.1007/978-3-662-54455-6_8
   Azad S, 2017, ACM T SOFTW ENG METH, V25, DOI 10.1145/2990497
   Bajaj K, 2014, P 11 WORK C MIN SOFT, P112
   Ballard C., 2014, INFORM GOVERNANCE PR
   Barua A, 2014, EMPIR SOFTW ENG, V19, P619, DOI 10.1007/s10664-012-9231-y
   Bird S., 2004, P ACL INTERACTIVE PO, P214
   Blei D.M., 2009, Text mining: Classification, clustering, and applications, P101
   Blei DM, 2003, J MACH LEARN RES, V3, P993, DOI 10.1162/jmlr.2003.3.4-5.993
   Bouoiyour J, 2015, ANN ECON FINANC, V16, P449
   Bovens L., 2003, Bayesian Epistemology
   Brakeville Sloane, 2019, BLOCKCHAIN BASICS IN
   Brown R. G., 2019, CORDA INTRO
   C. community, 2019, COL COINS
   Cachin C., 2019, ARCHITECTURE HYPERLE
   Chappelle D., 2019, BIG DATA ANAL REFERE
   Chiu J., 2019, EC CRYPTOCURRENCIESB
   Cloutier R, 2010, SYSTEMS ENG, V13, P14, DOI 10.1002/sys.20129
   CoinMarketCap, 2019, CRYPT CURR MARK CAP
   COX DR, 1955, BIOMETRIKA, V42, P80, DOI 10.1093/biomet/42.1-2.80
   Daehyun Kum, 2008, 2008 International Conference on Control, Automation and Systems (ICCAS), P558, DOI 10.1109/ICCAS.2008.4694565
   Decker Christian, 2015, Stabilization, Safety and Security of Distributed Systems. 17th International Symposium, SSS 2015. Proceedings: LNCS 9212, P3, DOI 10.1007/978-3-319-21741-3_1
   Eyal I, 2016, 13TH USENIX SYMPOSIUM ON NETWORKED SYSTEMS DESIGN AND IMPLEMENTATION (NSDI '16), P45
   Gallagher B.P., 2000, CMUSEI2000TN007
   Galster M, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P896, DOI 10.1145/3106237.3117773
   Garcia D, 2015, ROY SOC OPEN SCI, V2, DOI 10.1098/rsos.150288
   Garcia J., 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P552, DOI 10.1109/ASE.2011.6100123
   Gervais A., 2016, P 2016 ACMSIGSAC C C, P3
   Green M, 2017, CCS'17: PROCEEDINGS OF THE 2017 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P473, DOI 10.1145/3133956.3134093
   Griffiths TL, 2007, PSYCHOL REV, V114, P211, DOI 10.1037/0033-295X.114.2.211
   Grosskurth A, 2005, PROC IEEE INT CONF S, P661
   Hassan AE, 2000, SEVENTH WORKING CONFERENCE ON REVERSE ENGINEERING - PROCEEDINGS, P150, DOI 10.1109/WCRE.2000.891462
   Hayes AS, 2017, TELEMAT INFORM, V34, P1308, DOI 10.1016/j.tele.2016.05.005
   Heilman E, 2016, LECT NOTES COMPUT SC, V9604, P43, DOI 10.1007/978-3-662-53357-4_4
   Hindle A, 2009, PROC IEEE INT CONF S, P339, DOI 10.1109/ICSM.2009.5306310
   Hoffman M., 2010, P ADV NEUR INF PROC, V23:856-864
   Jahani Eaman, 2018, Proceedings of the ACM on Human-Computer Interaction, V2, DOI 10.1145/3274348
   Kaminski J., 2019, NOWCASTING BITCOIN M
   Kazman R., 2000, Tech. Rep. CMU/SEI-2000-TR-004
   Kelly MB, 2011, IEEE INT WORK C SO, P135, DOI 10.1109/SCAM.2011.23
   Kim MH, 2016, PLOS ONE, V11, DOI 10.1371/journal.pone.0159528
   Kokoris-Kogias E, 2016, PROCEEDINGS OF THE 25TH USENIX SECURITY SYMPOSIUM, P279
   Kosba A, 2016, P IEEE S SECUR PRIV, P839, DOI 10.1109/SP.2016.55
   Kuhn A, 2007, INFORM SOFTWARE TECH, V49, P230, DOI 10.1016/j.infsof.2006.10.017
   Li HW, 2013, WORK CONF REVERSE EN, P142, DOI 10.1109/WCRE.2013.6671289
   Linares-Vásquez M, 2013, IEEE WORK CONF MIN S, P93, DOI 10.1109/MSR.2013.6624014
   Liu F., 2011, NIST special publication, V500-292, DOI DOI 10.6028/NIST.SP.500-292
   Lukins SK, 2008, WORK CONF REVERSE EN, P155, DOI 10.1109/WCRE.2008.33
   Luu L, 2016, CCS'16: PROCEEDINGS OF THE 2016 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P17, DOI 10.1145/2976749.2978389
   Luu L, 2016, CCS'16: PROCEEDINGS OF THE 2016 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P254, DOI 10.1145/2976749.2978309
   Martinez-Fernandez Silverio, 2013, Software Architecture. 7th European Conference, ECSA 2013. Proceedings: LNCS 7584, P307, DOI 10.1007/978-3-642-39031-9_26
   Martínez-Fernández S, 2015, 2015 FIRST INTERNATIONAL WORKSHOP ON AUTOMOTIVE SOFTWARE ARCHITECTURE (WASA), P19, DOI 10.1145/2752489.2752493
   Mastrangelo L, 2015, ACM SIGPLAN NOTICES, V50, P695, DOI [10.1145/2814270.2814313, 10.1145/2858965.2814313]
   Mathew G, 2023, IEEE T SOFTWARE ENG, V49, P1397, DOI 10.1109/TSE.2018.2870388
   Matta M, 2015, UMAP WORKSH, P1
   Maxim O., 2019, COMMON BLOCKCHAIN AR
   Meier J., 2009, Microsoft Application Architecture Guide
   MILLER GA, 1995, COMMUN ACM, V38, P39, DOI 10.1145/219717.219748
   Nakamoto S., 2008, DECENT BUS REV, V21260, DOI https://bitcoin.org/bitcoin.pdf
   Nasehi SM, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P25, DOI 10.1109/ICSM.2012.6405249
   Neuhaus Stephan, 2010, Proceedings of the 2010 IEEE 21st International Symposium on Software Reliability Engineering (ISSRE 2010), P111, DOI 10.1109/ISSRE.2010.53
   Newman D., 2010, AUTOMATIC EVALUATION
   Newman D, 2006, LECT NOTES COMPUT SC, V3975, P93
   OATH, 2019, OATH REF ARCH
   Ong, 2015, HDB DIGITAL CURRENCY, P81, DOI [10.1016/B978-0-12-802117-0.00005-9, DOI 10.1016/B978-0-12-802117-0.00005-9]
   Panichella A, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P522, DOI 10.1109/ICSE.2013.6606598
   Poon J., 2016, BITCOIN LIGHTNING NE
   Poyser O., 2019, EXPLORING DETERMINAN
   Röder M, 2015, WSDM'15: PROCEEDINGS OF THE EIGHTH ACM INTERNATIONAL CONFERENCE ON WEB SEARCH AND DATA MINING, P399, DOI 10.1145/2684822.2685324
   Rosen C, 2016, EMPIR SOFTW ENG, V21, P1192, DOI 10.1007/s10664-015-9379-3
   Oliveira LBR, 2011, LECT NOTES COMPUT SC, V6903, P405, DOI 10.1007/978-3-642-23798-0_42
   Sompolinsky Y., 2013, CRYPTOLOGY EPRINT AR, V2013
   Sovbetov Y., 2018, J. Econ. Financ. Anal, V2, P1
   Staff C., 2019, ASHLEY MADISON HACKI
   Sumberg J., 2017, Agronomy for Development: The Politics of Knowledge in Agricultural Research, P1
   Swan Melanie, 2015, BLOCKCHAIN BLUEPRINT
   T. O. Group, 2019, SOA REF ARCH
   Thomas SW, 2010, IEEE INT WORK C SO, P55, DOI 10.1109/SCAM.2010.13
   Thomas SW, 2011, 8 WORK C MIN SOFTW R, P173
   Treude C, 2016, PROC INT CONF SOFTW, P392, DOI 10.1145/2884781.2884800
   Treude C, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P804, DOI 10.1145/1985793.1985907
   Wan ZY, 2017, IEEE WORK CONF MIN S, P413, DOI 10.1109/MSR.2017.59
   Wang W, 2013, IEEE WORK CONF MIN S, P61, DOI 10.1109/MSR.2013.6624006
   Weyrich M, 2016, IEEE SOFTWARE, V33, P112, DOI 10.1109/MS.2016.20
   Wood G., 2014, Ethereum project yellow paper, V151, P1
   Xiao D., 2019, 4 LAYERS BLOCKCHAIN
   Yang XL, 2016, J COMPUT SCI TECH-CH, V31, P910, DOI 10.1007/s11390-016-1672-0
NR 94
TC 27
Z9 29
U1 1
U2 13
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUL 1
PY 2021
VL 47
IS 7
BP 1331
EP 1349
DI 10.1109/TSE.2019.2921343
PG 19
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA TJ6XV
UT WOS:000673623000002
DA 2024-07-18
ER

PT J
AU Peng, KW
   Menzies, T
AF Peng, Kewen
   Menzies, Tim
TI Defect Reduction Planning (Using TimeLIME)
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Software; Planning; Measurement; Tools; Software quality; Software
   algorithms; Couplings; Software analytics; defect prediction; defect
   reduction; plausibility analysis; interpretable AI
AB Software comes in releases. An implausible change to software is something that has never been changed in prior releases. When planning how to reduce defects, it is better to use plausible changes, i.e., changes with some precedence in the prior releases. To demonstrate these points, this paper compares several defect reduction planning tools. LIME is a local sensitivity analysis tool that can report the fewest changes needed to alter the classification of some code module (e.g., from "defective" to "non-defective"). TimeLIME is a new tool, introduced in this paper, that improves LIME by restricting its plans to just those attributes which change the most within a project. In this study, we compared the performance of LIME and TimeLIME and several other defect reduction planning algorithms. The generated plans were assessed via (a) the similarity scores between the proposed code changes and the real code changes made by developers; and (b) the improvement scores seen within projects that followed the plans. For nine project trails, we found that TimeLIME outperformed all other algorithms (in 8 out of 9 trials). Hence, we strongly recommend using past releases as a source of knowledge for computing fixes for new releases (using TimeLIME). Apart from these specific results, the other lesson from this paper is that our community might be more careful about using off-the-shelf AI tools, without first applying SE knowledge (e.g., that past releases are a good source of knowledge for planning defect reductions). As shown here, once that SE knowledge is applied, this can result in dramatically better reasoning.
C1 [Peng, Kewen; Menzies, Tim] North Carolina State Univ, Dept Comp Sci, Raleigh, NC 27695 USA.
C3 North Carolina State University
RP Menzies, T (corresponding author), North Carolina State Univ, Dept Comp Sci, Raleigh, NC 27695 USA.
EM kpeng@ncsu.edu; timm@ieee.org
RI Menzies, Tim/X-7680-2019
OI Menzies, Tim/0000-0002-5040-3196; Peng, Kewen/0000-0002-4884-1808
FU National Science Foundation [1703487]; Laboratory for Analytical
   Sciences, North Carolina State University; Direct For Computer & Info
   Scie & Enginr; Division of Computing and Communication Foundations
   [1703487] Funding Source: National Science Foundation
FX This work was partially funded by a research grant from the National
   Science Foundation (CCF #1703487) and the Laboratory for Analytical
   Sciences, North Carolina State University.
CR AAAI, 1990, AI MAG, V11
   Agrawal A, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1050, DOI 10.1145/3180155.3180197
   Agrawal A, 2018, INFORM SOFTWARE TECH, V98, P74, DOI 10.1016/j.infsof.2018.02.005
   Alexander S., 2014, REFACTORING GURU
   Alshayeb M, 2009, INFORM SOFTWARE TECH, V51, P1319, DOI 10.1016/j.infsof.2009.04.002
   Alves TL, 2010, PROC IEEE INT CONF S
   [Anonymous], 1995, P 3 INT C DOC AN REC
   [Anonymous], 2018, REFACTORING IMPROVIN
   Arcuri A, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1, DOI 10.1145/1985793.1985795
   Begel A, 2013, IEEE SOFTWARE, V30, P52, DOI 10.1109/MS.2013.13
   Bender R, 1999, BIOMETRICAL J, V41, P305, DOI 10.1002/(SICI)1521-4036(199906)41:3<305::AID-BIMJ305>3.0.CO;2-Y
   Bird Christian, 2009, 2009 20th International Symposium on Software Reliability Engineering (ISSRE 2009), P109, DOI 10.1109/ISSRE.2009.17
   Bird C., 2011, P 19 ACM SIGSOFT S 1, P4, DOI DOI 10.1145/2025113.2025119
   BRIAND LC, 1993, IEEE T SOFTWARE ENG, V19, P1028, DOI 10.1109/32.256851
   Bruntink M, 2006, J SYST SOFTWARE, V79, P1219, DOI 10.1016/j.jss.2006.02.036
   Chawla NV, 2002, J ARTIF INTELL RES, V16, P321, DOI 10.1613/jair.953
   Chen D, 2019, INT C PROGRAM COMPRE, P179, DOI 10.1109/ICPC.2019.00037
   Chen D, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P456, DOI 10.1145/3236024.3236050
   Couto C, 2014, J SYST SOFTWARE, V93, P24, DOI 10.1016/j.jss.2014.01.033
   Dandashi Fatma, 2002, P ACM S APPL COMP, P997
   Devanbu P, 2016, PROC INT CONF SOFTW, P108, DOI 10.1145/2884781.2884812
   Du Bois B, 2005, NINTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P334, DOI 10.1109/CSMR.2005.25
   Du Bois B, 2004, 11TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P144, DOI 10.1109/WCRE.2004.33
   Fu W, 2016, INFORM SOFTWARE TECH, V76, P135, DOI 10.1016/j.infsof.2016.04.017
   Geppert B, 2005, 2005 11TH INTERNATIONAL SYMPOSIUM ON SOFTWARE METRICS (METRICS), P104
   Ghotra B, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P789, DOI 10.1109/ICSE.2015.91
   Han JW, 2007, DATA MIN KNOWL DISC, V15, P55, DOI 10.1007/s10618-006-0059-1
   Hihn J, 2015, 2015 30TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING WORKSHOP (ASEW), P5, DOI 10.1109/ASEW.2015.27
   Dam HK, 2018, 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: NEW IDEAS AND EMERGING TECHNOLOGIES RESULTS (ICSE-NIER), P53, DOI 10.1145/3183399.3183424
   Jiarpakdee J, 2022, IEEE T SOFTWARE ENG, V48, P166, DOI 10.1109/TSE.2020.2982385
   Jureczko M, 2010, P 6 INT C PREDICTIVE, DOI DOI 10.1145/1868328.1868342
   Jureczko M., 2010, Model Methods Syst Dependability Oficyna Wydawnicza Politech Wroclawskiej, P69
   Jureczko M., 2011, Software Engineering: An International Journal, V1, P86
   Kampenes VB, 2007, INFORM SOFTWARE TECH, V49, P1073, DOI 10.1016/j.infsof.2007.02.015
   Khoshgoftaar TM, 1998, COMPUTER, V31, P66, DOI 10.1109/2.666844
   Krishna R, 2020, EMPIR SOFTW ENG, V25, P3468, DOI 10.1007/s10664-020-09843-6
   Krishna R, 2019, IEEE T SOFTWARE ENG, V45, P1081, DOI 10.1109/TSE.2018.2821670
   Lewis C, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P372, DOI 10.1109/ICSE.2013.6606583
   Madeyski L, 2015, SOFTWARE QUAL J, V23, P393, DOI 10.1007/s11219-014-9241-7
   Mens T, 2004, IEEE T SOFTWARE ENG, V30, P126, DOI 10.1109/TSE.2004.1265817
   Menzies T, 2002, IEEE T KNOWL DATA EN, V14, P1362, DOI 10.1109/TKDE.2002.1047773
   Menzies T, 2007, IEEE T SOFTWARE ENG, V33, P2, DOI 10.1109/TSE.2007.256941
   Menzies T, 2010, AUTOMAT SOFTW ENG, V17, P375, DOI 10.1007/s10515-010-0069-5
   Menzies T, 2013, IEEE SOFTWARE, V30, P31, DOI 10.1109/MS.2013.86
   Moser R, 2006, LECT NOTES COMPUT SC, V4039, P287
   Mueller S.T., 2019, CoRR abs/1902.01876
   Nagappan N, 2005, PROC INT CONF SOFTW, P580, DOI 10.1145/1062455.1062558
   Nam J, 2018, IEEE T SOFTWARE ENG, V44, P874, DOI 10.1109/TSE.2017.2720603
   Oliveira P, 2014, 2014 SOFTWARE EVOLUTION WEEK - IEEE CONFERENCE ON SOFTWARE MAINTENANCE, REENGINEERING, AND REVERSE ENGINEERING (CSMR-WCRE), P254, DOI 10.1109/CSMR-WCRE.2014.6747177
   Passos C, 2011, INT SYMP EMP SOFTWAR, P444, DOI 10.1109/ESEM.2011.63
   Rahman F, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P424, DOI 10.1145/2568225.2568269
   Ribeiro MT, 2018, AAAI CONF ARTIF INTE, P1527
   Ribeiro MT, 2016, KDD'16: PROCEEDINGS OF THE 22ND ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P1135, DOI 10.1145/2939672.2939778
   Rosen C, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P966, DOI 10.1145/2786805.2803183
   Rosenthal R., 1994, The handbook of research synthesis, P231, DOI DOI 10.7758/9781610441377
   Shatnawi R, 2010, IEEE T SOFTWARE ENG, V36, P216, DOI 10.1109/TSE.2010.9
   Shihab E., 2010, Proceedings of the ACM-IEEE International Symposium on Empirical Software Engineering and Measurement, P1
   Shin Y, 2013, EMPIR SOFTW ENG, V18, P25, DOI 10.1007/s10664-011-9190-8
   Shrikanth NC, 2020, 2020 IEEE/ACM 42ND INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE (ICSE-SEIP), P182, DOI 10.1145/3377813.3381367
   Simon F, 2001, FIFTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P30, DOI 10.1109/CSMR.2001.914965
   Tahvildari L, 2004, PROC IEEE INT CONF S, P479, DOI 10.1109/ICSM.2004.1357839
   Wake WC., 2004, Refactoring Workbook
   Wan ZY, 2020, IEEE T SOFTWARE ENG, V46, P1241, DOI 10.1109/TSE.2018.2877678
   Wilking D., 2007, E-INFORMATICA, V1, P27
   Witten IH, 2011, MOR KAUF D, P1
NR 65
TC 7
Z9 7
U1 0
U2 2
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAR 5
PY 2021
VL 48
IS 7
BP 2510
EP 2525
DI 10.1109/TSE.2021.3062968
PG 16
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 2Y5ZC
UT WOS:000825973800001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Ebnenasir, A
   Klinkhamer, AP
AF Ebnenasir, Ali
   Klinkhamer, Alex P.
TI Topology-Specific Synthesis of Self-Stabilizing Parameterized Systems
   with Constant-Space Processes
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Topology; Protocols; Convergence; Software algorithms; Portable
   computers; Automata; Transforms; Self-stabilization; distributed
   programming; formal methods; program synthesis
AB This paper investigates the synthesis of parameterized systems that are self-stabilizing by construction. To this end, we present several significant results. First, we show a counterintuitive result that despite the undecidability of verifying self-stabilization for parameterized unidirectional rings, synthesizing self-stabilizing unidirectional rings is decidable! This is surprising because it is known that, in general, the synthesis of distributed systems is harder than their verification. Second, we present a topology-specific synthesis method (derived from our proof of decidability) that generates the state transition system of template processes of parameterized self-stabilizing systems with elementary unidirectional topologies (e.g., rings, chains, trees). We also provide a software tool that implements our synthesis algorithms and generates interesting self-stabilizing parameterized unidirectional rings in less than 50 microseconds on a regular laptop. We validate the proposed synthesis algorithms for decidable cases in the context of several interesting distributed protocols. Third, we show that synthesis of self-stabilizing bidirectional rings remains undecidable.
C1 [Ebnenasir, Ali] Michigan Technol Univ, Dept Comp Sci, Houghton, MI 49931 USA.
   [Klinkhamer, Alex P.] Google, Mountain View, CA 94043 USA.
C3 Michigan Technological University; Google Incorporated
RP Ebnenasir, A (corresponding author), Michigan Technol Univ, Dept Comp Sci, Houghton, MI 49931 USA.
EM aebnenas@mtu.edu; apklinkh@mtu.edu
FU US National Science Foundation [CCF-1116546]
FX This work was in part sponsored by the US National Science Foundation
   grant CCF-1116546. The authors would like to thank the anonymous
   referees for their valuable comments and suggestions. A preliminary
   version of this paper appeared in the 7th International Conference on
   Fundamentals of Software Engineering (FSEN 2017) [1].
CR Abdulla PA, 2004, LECT NOTES COMPUT SC, V3170, P35
   [Anonymous], 2000, Lecture Notes in Computer Science
   [Anonymous], P 31 IEEE S FDN COMP
   Arora A, 1998, INT CON DISTR COMP S, P436, DOI 10.1109/ICDCS.1998.679772
   Bernard Samuel, 2009, IPDPS'09, P1, DOI [10.1109/IPDPS.2009.5161053, DOI 10.1109/IPDPS.2009.5161053]
   BHAT G, 1995, IEEE S LOG, P388, DOI 10.1109/LICS.1995.523273
   Bloem R, 2016, LECT NOTES COMPUT SC, V9779, P157, DOI 10.1007/978-3-319-41528-4_9
   Conchon Sylvain, 2012, Computer Aided Verification. Proceedings 24th International Conference, CAV 2012, P718, DOI 10.1007/978-3-642-31424-7_55
   De Moura L, 2011, COMMUN ACM, V54, P69, DOI 10.1145/1995376.1995394
   Delaet S., 2006, Journal of Aerospace Computing, Information, and Communication, V3, P498
   DIJKSTRA EW, 1974, COMMUN ACM, V17, P643, DOI 10.1145/361179.361202
   Dolev D, 2013, LECT NOTES COMPUT SC, V8255, P237, DOI 10.1007/978-3-319-03089-0_17
   Emerson EA., 2003, INT J FOUND COMPUT S, V14, P527, DOI DOI 10.1142/S0129054103001881
   Farahat A, 2012, THESIS MICHIGAN TECH
   Farahat A, 2012, INT CON DISTR COMP S, P496, DOI 10.1109/ICDCS.2012.66
   Farzan A, 2016, PROCEEDINGS OF THE 31ST ANNUAL ACM-IEEE SYMPOSIUM ON LOGIC IN COMPUTER SCIENCE (LICS 2016), P185, DOI 10.1145/2933575.2935310
   Finkbeiner Bernd, 2013, International Journal on Software Tools for Technology Transfer, V15, P519, DOI 10.1007/s10009-012-0228-z
   Fioravanti F, 2013, THEOR PRACT LOG PROG, V13, P175, DOI 10.1017/S1471068411000627
   Ghilardi S, 2010, LECT NOTES ARTIF INT, V6173, P22
   Gouda M.G., 2001, P 5 INT WORKSHOP SEL, P114
   Gouda MG, 1996, J PARALLEL DISTR COM, V35, P43, DOI 10.1006/jpdc.1996.0066
   Grinchtein O, 2006, LECT NOTES ARTIF INT, V4130, P483
   Ip CN, 1999, FORM METHOD SYST DES, V14, P273, DOI 10.1023/A:1008723125149
   Jacobs S, 2012, LECT NOTES COMPUT SC, V7214, P362, DOI 10.1007/978-3-642-28756-5_25
   Kesten Y., 2002, CONCUR 2002 - Concurrency Theory. 13th International Conference Proceedings (Lecture Notes in Computer Science Vol.2421), P101
   Klinkhamer A, 2016, IEEE T PARALL DISTR, V27, P3338, DOI 10.1109/TPDS.2016.2536023
   Klinkhamer A, 2015, IEEE T DEPEND SECURE, V12, P338, DOI 10.1109/TDSC.2014.2315191
   Klinkhamer AP, 2017, LECT NOTES COMPUT SC, V10522, P100, DOI 10.1007/978-3-319-68972-2_7
   Klinkhamer AP, 2013, LECT NOTES COMPUT SC, V8255, P163, DOI 10.1007/978-3-319-03089-0_12
   Kulkarni SS, 2000, LECT NOTES COMPUT SC, V1926, P82
   Lazi Marijana, 2017, LIPICS, V95
   Lenzen C, 2016, LECT NOTES COMPUT SC, V10083, P263, DOI 10.1007/978-3-319-49259-9_21
   Matthews O, 2016, PROCEEDINGS OF THE 2016 16TH CONFERENCE ON FORMAL METHODS IN COMPUTER-AIDED DESIGN (FMCAD 2016), P101, DOI 10.1109/FMCAD.2016.7886667
   McMillan K. L., 2001, Correct Hardware Design and Verification Methods. 11th IFIP WG 10.5 Advanced Research Working Conference, CHARME 2001. Proceedings (Lecture Notes in Computer Science Vol.2144), P179
   Pnueli A., 2002, International Conference on Computer Aided Verification (CAV), P107
   Roychoudhury A., 2004, Automated Software Engineering, V11, P101, DOI 10.1023/B:AUSE.0000017740.35552.88
   Roychoudhury A, 2001, LECT NOTES COMPUT SC, V2102, P25
   Roychoudhury A, 2000, LECT NOTES COMPUT SC, V1785, P172
   Sánchez A, 2014, INT WORKSHOP TEMPORA, P132, DOI 10.1109/TIME.2014.11
   Touili T., 2001, Electronic Notes in Theoretical Computer Science, V50, DOI 10.1016/S1571-0661(04)00187-2
   Varghese G., 1994, Proceedings of the Thirteenth Annual ACM Symposium on Principles of Distributed Computing, P244, DOI 10.1145/197917.198102
   Varghese G., 1993, THESIS MIT CAMBRIDGE
   WOLPER P, 1990, LECT NOTES COMPUT SC, V407, P68
NR 43
TC 2
Z9 2
U1 0
U2 0
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAR 1
PY 2021
VL 47
IS 3
BP 614
EP 629
DI 10.1109/TSE.2019.2901485
PG 16
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA RA1TM
UT WOS:000631200300009
OA hybrid
DA 2024-07-18
ER

PT J
AU Klotins, E
   Unterkalmsteiner, M
   Chatzipetrou, P
   Gorschek, T
   Prikladnicki, R
   Tripathi, N
   Pompermaier, LB
AF Klotins, Eriks
   Unterkalmsteiner, Michael
   Chatzipetrou, Panagiota
   Gorschek, Tony
   Prikladnicki, Rafael
   Tripathi, Nirnaya
   Pompermaier, Leandro Bento
TI A Progression Model of Software Engineering Goals, Challenges, and
   Practices in Start-Ups
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Software; Software engineering; Companies; Market opportunities;
   Requirements engineering; Analytical models; Software start-up; software
   engineering practices; progression model
AB Context: Software start-ups are emerging as suppliers of innovation and software-intensive products. However, traditional software engineering practices are not evaluated in the context, nor adopted to goals and challenges of start-ups. As a result, there is insufficient support for software engineering in the start-up context. Objective: We aim to collect data related to engineering goals, challenges, and practices in start-up companies to ascertain trends and patterns characterizing engineering work in start-ups. Such data allows researchers to understand better how goals and challenges are related to practices. This understanding can then inform future studies aimed at designing solutions addressing those goals and challenges. Besides, these trends and patterns can be useful for practitioners to make more informed decisions in their engineering practice. Method: We use a case survey method to gather first-hand, in-depth experiences from a large sample of software start-ups. We use open coding and cross-case analysis to describe and identify patterns, and corroborate the findings with statistical analysis. Results: We analyze 84 start-up cases and identify 16 goals, 9 challenges, and 16 engineering practices that are common among start-ups. We have mapped these goals, challenges, and practices to start-up life-cycle stages (inception, stabilization, growth, and maturity). Thus, creating the progression model guiding software engineering efforts in start-ups. Conclusions: We conclude that start-ups to a large extent face the same challenges and use the same practices as established companies. However, the primary software engineering challenge in start-ups is to evolve multiple process areas at once, with a little margin for serious errors.
C1 [Klotins, Eriks; Unterkalmsteiner, Michael; Chatzipetrou, Panagiota; Gorschek, Tony] Blekinge Inst Technol, Software Engn Res Lab Sweden, S-37141 Karlskrona, Sweden.
   [Chatzipetrou, Panagiota] Orebro Univ, Dept Informat, CERIS, Sch Business, SE-70182 Orebro, Sweden.
   [Prikladnicki, Rafael; Pompermaier, Leandro Bento] Pontificia Univ Catolica Rio Grande do Sul, Sch Technol, BR-90619900 Porto Alegre, RS, Brazil.
   [Tripathi, Nirnaya] Univ Oulu, M3S Res Unit, Oulu 90014, Finland.
C3 Blekinge Institute Technology; Orebro University; Pontificia
   Universidade Catolica Do Rio Grande Do Sul; University of Oulu
RP Klotins, E (corresponding author), Blekinge Inst Technol, Software Engn Res Lab Sweden, S-37141 Karlskrona, Sweden.
EM eriks.klotins@bth.se; mun@bth.se; panagiota.chatzipetrou@bth.se;
   tgo@bth.se; rafael.prikladnicki@pucrs.br; nirnaya.tripathi@oulu.fi;
   leandro.pompermaier@pucrs.br
OI Tripathi, Nirnaya/0000-0001-8506-1176; Chatzipetrou,
   Panagiota/0000-0002-0311-1502; Unterkalmsteiner,
   Michael/0000-0003-4118-0952
FU CNpq; FAPERGS [17/2551-0001205-4]
FX The authors of this paper would like to thank all practitioners who
   found time and motivation to share their experiences. Reaching this
   diverse population of start-ups would not be possible without help and
   support from Software Start-up Research Network7 community, and
   specifically Nana Assyne, Anh Nguyen Duc, Ronald Jabangwe, Jorge
   Melegati, Bajwa Sohaib Shahid, Xiaofeng Wang, Rafael Matone Chanin, and
   Pekka Abrahamsson. Work of Rafael Prikladnicki is partially funded by
   CNpq and FAPERGS (process 17/2551-0001205-4).
CR Aarikka-stenroos L, 2017, P 9 INT WORKSH SOFTW, P55
   Agresti A., 1996, An Introduction to Categorical Data Analysis, V135
   Alahyari H, 2017, J SYST SOFTWARE, V125, P271, DOI 10.1016/j.jss.2016.12.007
   [Anonymous], 2014, Guide to the Software Engineering Body of Knowledge SWEBOK  A Project of the IEEE Computer Society
   [Anonymous], 2012, CASE STUDY RES SOFTW, DOI DOI 10.1002/9781118181034
   Atomico/SLUSH, 2017, STAT EUR TECH 2017
   Badampudi D, 2016, J SYST SOFTWARE, V121, P105, DOI 10.1016/j.jss.2016.07.027
   Bajwa SS, 2016, LECT NOTES BUS INF P, V240, P169, DOI 10.1007/978-3-319-40515-5_14
   Baskerville R, 2003, IEEE SOFTWARE, V20, P70, DOI 10.1109/MS.2003.1241369
   Berg V, 2018, J SYST SOFTWARE, V144, P255, DOI 10.1016/j.jss.2018.06.043
   Bjarnason E., 2010, 2010 Fourth International Workshop on Software Product Management (IWSPM), P30, DOI 10.1109/IWSPM.2010.5623866
   Blank, 2013, 4 STEPS EPIPHANY
   Blank S, 2013, HARVARD BUS REV, V91, P64
   Blank S, 2011, NATURE, V477, P133, DOI 10.1038/477133a
   Bocken NMP, 2015, J CLEAN PROD, V108, P647, DOI 10.1016/j.jclepro.2015.05.079
   Boehm B., 2003, ACM SIGSOFT Software Engineering Notes, V28, P3, DOI DOI 10.1145/638750.638775
   Boies K, 2015, LEADERSHIP QUART, V26, P1080, DOI 10.1016/j.leaqua.2015.07.007
   Bosch J., 2013, LEAN ENTERPRISE SOFT, V167, DOI [10.1007/978-3-642-44930-7_1, DOI 10.1007/978-3-642-44930-7_1]
   Bubshait A., 1999, COST ENG, V41, P34
   Buchman J, 2009, P 3 INT WORKSH KNOWL, P2
   Carlson C. R., 2006, Innovation: The Five Disciplinesfor Creating what Customers Want
   Carmel E., 1994, Proceedings of the Twenty-Seventh Hawaii International Conference on System Sciences. Vol.IV: Information Systems: Collaboration Technology Organizational Systems and Technology (Cat. No.94TH0607-2), P498, DOI 10.1109/HICSS.1994.323468
   Castro J, 2006, P WORKSH ENG REQ, P2
   Chen LP, 2015, IEEE SOFTWARE, V32, P49
   Chow T, 2008, J SYST SOFTWARE, V81, P961, DOI 10.1016/j.jss.2007.08.020
   CHURCHILL NC, 1983, HARVARD BUS REV, V61, P30
   Cockburn A, 2001, COMPUTER, V34, P131, DOI 10.1109/2.963450
   Cohan J., 1988, Statistical Power Analysis for the Behavioral Sciences
   Collins E. F., 2012, 2012 Proceedings of 7th International Workshop on Automation of Software Test (AST 2012), P57, DOI 10.1109/IWAST.2012.6228991
   CORBIN J, 1990, Z SOZIOL, V19, P418, DOI 10.1007/BF00988593
   Crowne M, 2002, IEMC-2002: IEEE INTERNATIONAL ENGINEERING MANAGEMENT CONFERENCE, VOLS I AND II, PROCEEDINGS, P338, DOI 10.1109/IEMC.2002.1038454
   Cui AS, 2016, J ACAD MARKET SCI, V44, P516, DOI 10.1007/s11747-015-0433-x
   Dahlstedt A., 2003, P INT WORKSH COTS PR
   Dingsoyr T, 2016, IEEE SOFTWARE, V33, P106, DOI 10.1109/MS.2016.100
   Dyba Tore, 2014, Software project management in a changing world, P277, DOI DOI 10.1007/978-3-642-55035-5_11
   EISENHARDT KM, 1989, ACAD MANAGE REV, V14, P532, DOI 10.2307/258557
   Elliott Bill, 2007, 2007 IEEE International Engineering Management Conference (IEMC 2007), P304, DOI 10.1109/IEMC.2007.5235049
   Eppler M.J., 2000, European Management Journal, V18, P334, DOI [10.1016/S0263-2373(00)00015-3, DOI 10.1016/S0263-2373(00)00015-3]
   Fagerholm F, 2017, J SYST SOFTWARE, V123, P292, DOI 10.1016/j.jss.2016.03.034
   dos Santos JRF, 2016, PROCEEDINGS 2016 10TH INTERNATIONAL CONFERENCE ON THE QUALITY OF INFORMATION AND COMMUNICATIONS TECHNOLOGY (QUATIC), P67, DOI [10.1109/QUATIC.2016.020, 10.1109/QUATIC.2016.18]
   Giardino C, 2016, IEEE T SOFTWARE ENG, V42, P585, DOI 10.1109/TSE.2015.2509970
   Giardino C, 2015, LECT NOTES BUS INF P, V212, P52, DOI 10.1007/978-3-319-18612-2_5
   Giardino C, 2014, IEEE SOFTWARE, V31, P28, DOI 10.1109/MS.2014.129
   Gopal A, 2011, IEEE T ENG MANAGE, V58, P772, DOI 10.1109/TEM.2010.2096821
   Gralha C, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P823, DOI 10.1145/3180155.3180158
   HABERMAN SJ, 1973, BIOMETRICS, V29, P205, DOI 10.2307/2529686
   Hadar I, 2014, REQUIR ENG, V19, P143, DOI 10.1007/s00766-012-0163-2
   Hokkanen L., 2016, Lecture Notes in Business Information Processing, V251, P66, DOI [10.1007/978, DOI 10.1007/978]
   Hokkanen L, 2015, LECT NOTES BUS INF P, V212, P81, DOI 10.1007/978-3-319-18612-2_7
   HOPE ACA, 1968, J ROY STAT SOC B, V30, P582
   Hoyer WD, 2010, J SERV RES-US, V13, P283, DOI 10.1177/1094670510375604
   Junk W. S, 2000, SEPM001 U ID COMP SC
   Karlsson L, 2007, INFORM SOFTWARE TECH, V49, P588, DOI 10.1016/j.infsof.2007.02.008
   Khurum M, 2013, J SOFTW-EVOL PROC, V25, P711, DOI 10.1002/smr.1560
   Klotins E, 2018, 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING - SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2018), P75, DOI 10.1145/3183519.3183539
   Klotins E, 2019, IEEE SOFTWARE, V36, P118, DOI 10.1109/MS.2018.227105530
   Klotins E, 2018, IEEE SOFTWARE, V35, P44, DOI 10.1109/MS.2018.2801548
   Klotins E, 2015, LECT NOTES BUS INF P, V210, P245, DOI 10.1007/978-3-319-19593-3_22
   Krishnan M. S., 1998, Information Technology & People, V11, P20, DOI 10.1108/09593849810204512
   Kruger J, 1999, J PERS SOC PSYCHOL, V77, P1121, DOI 10.1037/0022-3514.77.6.1121
   La Rocca A, 2016, IND MARKET MANAG, V58, P45, DOI 10.1016/j.indmarman.2016.05.014
   LARSSON R, 1993, ACAD MANAGE J, V36, P1515, DOI 10.5465/256820
   Leonard Dorothy., 1995, WELLSPRINGS KNOWLEDG
   MacDonell S. G, 2014, P 20 AM C INF SYST
   Maranville S., 1992, J EDUC BUS, V68, P27, DOI 10.1080/08832323.1992.10117582
   Melegati J., 2016, 2 INT WORKSH SOFTW S
   Molokken K, 2003, 2003 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P223, DOI 10.1109/ISESE.2003.1237981
   Murphy C, 2013, MSCIS1301 U PENNS DE
   Nasir M.H. N., 2011, Scientific Research and Essays, V6, P2174, DOI [DOI 10.5897/SRE10.1171, 10.5897/SRE10.1171]
   Olsson HH, 2014, EUROMICRO CONF PROC, P9, DOI 10.1109/SEAA.2014.75
   Paternoster N, 2014, INFORM SOFTWARE TECH, V56, P1200, DOI 10.1016/j.infsof.2014.04.014
   Petersen K, 2018, IEEE T SOFTWARE ENG, V44, P237, DOI 10.1109/TSE.2017.2677909
   Pham R, 2017, SOFTWARE QUAL J, V25, P1239, DOI 10.1007/s11219-016-9333-7
   Politis D, 2008, J SMALL BUS ENTERP D, V15, P472, DOI 10.1108/14626000810892292
   Ralph P, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P24, DOI 10.1145/2568225.2568261
   Reel JS, 1999, IEEE SOFTWARE, V16, P18, DOI 10.1109/52.765782
   Regnell B, 2008, IEEE SOFTWARE, V25, P42, DOI 10.1109/MS.2008.48
   Ries E, 2011, The Lean Startup
   Seppänen P, 2017, LECT NOTES COMPUT SC, V10611, P280, DOI 10.1007/978-3-319-69926-4_20
   Shahin A, 2007, INT J PRODUCT PERFOR, V56, P226, DOI 10.1108/17410400710731437
   Sheppard S, 2006, INT J ENG EDUC, V22, P429
   Shermer M., 2014, Scientific American, V311, P94
   Snyder Cynthia Stackpole., 2014, A Guide to the Project Management Body of Knowledge: PMBOK () Guide
   Staats BR, 2012, ORGAN BEHAV HUM DEC, V118, P132, DOI 10.1016/j.obhdp.2012.03.002
   Sutton SM, 2000, IEEE SOFTWARE, V17, P33, DOI 10.1109/52.854066
   Tippett DonaldD., 1995, PROJ MANAG J, P29
   Tripathi N, 2018, J SYST SOFTWARE, V146, P130, DOI 10.1016/j.jss.2018.08.059
   Unterkalmsteiner M, 2014, ACM T SOFTW ENG METH, V23, DOI 10.1145/2523088
   Unterkalmsteiner M, 2016, E-INFORMATICA, V10, P89, DOI 10.5277/e-Inf160105
   van Lamsweerde A, 2003, LECT NOTES COMPUT SC, V2804, P25
   Wijngaarde Y., 2018, ANN EUROPEAN VENTURE
   Williams B, 2018, SPACE SCI REV, V214, DOI 10.1007/s11214-018-0501-x
   Wohlin C, 2015, J SYST SOFTWARE, V109, P229, DOI 10.1016/j.jss.2015.08.009
NR 93
TC 26
Z9 27
U1 3
U2 19
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAR 1
PY 2021
VL 47
IS 3
BP 498
EP 521
DI 10.1109/TSE.2019.2900213
PG 24
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA RA1TM
UT WOS:000631200300004
OA Green Published, Green Submitted, Green Accepted
DA 2024-07-18
ER

PT J
AU Tómasdóttir, KF
   Aniche, M
   van Deursen, A
AF Tomasdottir, Kristin Fjola
   Aniche, Mauricio
   van Deursen, Arie
TI The Adoption of JavaScript Linters in Practice: A Case Study on ESLint
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Tools; Static analysis; Interviews; Encoding; Standards; Software; Face;
   Static analysis tools; linters; eslint; javascript linters; ASATs;
   empirical software engineering
ID STATIC ANALYSIS; DETERMINACY; SMELLS; BUGS
AB A linter is a static analysis tool that warns software developers about possible code errors or violations to coding standards. By using such a tool, errors can be surfaced early in the development process when they are cheaper to fix. For a linter to be successful, it is important to understand the needs and challenges of developers when using a linter. In this paper, we examine developers' perceptions on JavaScript linters. We study why and how developers use linters along with the challenges they face while using such tools. For this purpose we perform a case study on ESLint, the most popular JavaScript linter. We collect data with three different methods where we interviewed 15 developers from well-known open source projects, analyzed over 9,500 ESLint configuration files, and surveyed 337 developers from the JavaScript community. Our results provide practitioners with reasons for using linters in their JavaScript projects as well as several configuration strategies and their advantages. We also provide a list of linter rules that are often enabled and disabled, which can be interpreted as the most important rules to reason about when configuring linters. Finally, we propose several feature suggestions for tool makers and future work for researchers.
C1 [Tomasdottir, Kristin Fjola; Aniche, Mauricio] Delft Univ Technol, NL-2628 CD Delft, Netherlands.
   [van Deursen, Arie] Delft Univ Technol, Software Engn, NL-2628 CD Delft, Netherlands.
C3 Delft University of Technology; Delft University of Technology
RP Aniche, M (corresponding author), Delft Univ Technol, NL-2628 CD Delft, Netherlands.
EM kristinfjolato@gmail.com; m.f.aniche@tudelft.nl;
   arie.vandeursen@tudelft.nl
RI van Deursen, Arie/G-3084-2011
OI van Deursen, Arie/0000-0003-4850-3312
CR Adolph S, 2011, EMPIR SOFTW ENG, V16, P487, DOI 10.1007/s10664-010-9152-6
   Andreasen E, 2014, ACM SIGPLAN NOTICES, V49, P17, DOI [10.1145/2714064.2660214, 10.1145/2660193.2660214]
   Aniche M, 2018, EMPIR SOFTW ENG, V23, P2121, DOI 10.1007/s10664-017-9540-2
   Aniche M, 2016, PROC IEEE INT CONF S, P234, DOI 10.1109/ICSME.2016.12
   Aniche M, 2016, IEEE INT WORK C SO, P41, DOI 10.1109/SCAM.2016.19
   [Anonymous], 2017, STREAM HDB VIA GITHU
   [Anonymous], 2017, ESLINT 1 RELEASE V0
   [Anonymous], 2013, SURVEYS SOCIAL RES
   [Anonymous], 2017, ESLINT 1 MAJOR RELEA
   [Anonymous], 2017, IMPRESS JS TUTORIAL
   [Anonymous], 2007, COMP P ACM SIGPLAN C
   [Anonymous], 2002, ACM SIGSOFT SOFTW EN, DOI DOI 10.1145/571681.571686
   [Anonymous], 2003, SURVEY HDB
   [Anonymous], 2017, MQTT JS VIA GITHUB E
   [Anonymous], 2018, STACK OVERLOW DEV SU
   [Anonymous], 2013, RES DESIGN QUALITATI
   [Anonymous], **DATA OBJECT**, DOI DOI 10.5281/ZENODO.1410967
   [Anonymous], 2015, Ase, DOI [DOI 10.1145/2491411.2491417, 10.1145/2491411.2491417]
   Ayewah N., 2010, Proceedings of the 19th international symposium on Software testing and analysis, P241
   Ayewah N., 2008, P 2008 WORKSH DEF LA, P1, DOI DOI 10.1145/1390817.1390819
   Ayewah N, 2007, PASTE'07 PROCEEDINGS OF THE 2007 ACM SIGPLAN- SIGSOFT WORKSHOP ON PROGRAM ANALYSIS FOR SOFTWARE TOOLS & ENGINEERING, P1, DOI 10.1145/1251535.1251536
   Ayewah N, 2008, IEEE SOFTWARE, V25, P22, DOI 10.1109/MS.2008.130
   Beer A, 2008, PROCEEDINGS OF THE 34TH EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS, P258, DOI 10.1109/SEAA.2008.28
   Beller M, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P470, DOI 10.1109/SANER.2016.105
   Bessey A, 2010, COMMUN ACM, V53, P66, DOI 10.1145/1646353.1646374
   Bierman G, 2014, LECT NOTES COMPUT SC, V8586, P257
   Boehm BW., 1981, Software Engineering Economics
   Boh WF, 2007, MANAGE SCI, V53, P1315, DOI 10.1287/mnsc.1060.0687
   Christakis M, 2016, IEEE INT CONF AUTOM, P332, DOI 10.1145/2970276.2970347
   Christodorescu M., 2006, ADA449067 WISC U DEP
   Chugh R, 2009, ACM SIGPLAN NOTICES, V44, P50, DOI 10.1145/1543135.1542483
   Couto C, 2013, SOFTWARE QUAL J, V21, P241, DOI 10.1007/s11219-011-9172-5
   Fard AM, 2013, IEEE INT WORK C SO, P116, DOI 10.1109/SCAM.2013.6648192
   Gao Z, 2017, PROC INT CONF SOFTW, P758, DOI 10.1109/ICSE.2017.75
   GitHub, 2015, LANG TRENDS GITHUB
   Glaser Barney G., 2004, Forum: Qualitative Social Research, V5, DOI [DOI 10.17169/FQS-5.2.607, 10.17169/fqs-5.2.607]
   Gong L., 2015, P 2015 INT S SOFTW T, P94, DOI DOI 10.1145/2771783.2771809
   Gousios G, 2013, IEEE WORK CONF MIN S, P233, DOI 10.1109/MSR.2013.6624034
   Greenwood P. E., 1996, A guide to chi-squared testing, V280
   Guarnieri S., 2010, WebApps, V10, P6
   Heckman S, 2008, ESEM'08: PROCEEDINGS OF THE 2008 ACM-IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, P41
   Hove SE, 2005, 2005 11TH INTERNATIONAL SYMPOSIUM ON SOFTWARE METRICS (METRICS), P201
   Hovemeyer D, 2004, ACM SIGPLAN NOTICES, V39, P92, DOI 10.1145/1052883.1052895
   Jensen B, 2011, J HIGH ENERGY PHYS, DOI 10.1007/JHEP11(2011)059
   Jensen SH, 2009, LECT NOTES COMPUT SC, V5673, P238, DOI 10.1007/978-3-642-03237-0_17
   Johnson B, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P672, DOI 10.1109/ICSE.2013.6606613
   Joo C, 2012, 2012 MOSHARAKA INTERNATIONAL CONFERENCE ON COMMUNICATIONS, COMPUTERS AND APPLICATIONS (MIC-CCA), P96
   Kalliamvakou E., 2014, P 11 WORKING C MININ, P92, DOI DOI 10.1145/2597073.2597074
   Kalliamvakou E, 2016, EMPIR SOFTW ENG, V21, P2035, DOI 10.1007/s10664-015-9393-5
   Kitchenham BA, 2002, IEEE T SOFTWARE ENG, V28, P721, DOI 10.1109/TSE.2002.1027796
   Ko Y, 2015, IEEE INT CONF AUTOM, P541, DOI 10.1109/ASE.2015.28
   Livshits VB, 2005, USENIX ASSOCIATION PROCEEDINGS OF THE 14TH USENIX SECURITY SYMPOSIUM, P271
   Mikkonen T., 2007, TR2007168 SMLI
   Ocariza FS, 2011, 22ND IEEE INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING (ISSRE), P100, DOI 10.1109/ISSRE.2011.28
   Park J, 2016, 2016 IEEE/ACM 38TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING COMPANION (ICSE-C), P61, DOI 10.1145/2889160.2889227
   Perneger TV, 1998, BRIT MED J, V316, P1236, DOI 10.1136/bmj.316.7139.1236
   Pfleeger Shari Lawrence, 2001, ACM SIGSOFT Software Engineering Notes, V26, P16, DOI DOI 10.1145/505532.505535
   Pradel M, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P314, DOI 10.1109/ICSE.2015.51
   Richards G, 2011, LECT NOTES COMPUT SC, V6813, P52, DOI 10.1007/978-3-642-22655-7_4
   Richards G, 2010, ACM SIGPLAN NOTICES, V45, P1, DOI 10.1145/1809028.1806598
   Saboury A, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P294, DOI 10.1109/SANER.2017.7884630
   Sadowski C, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P598, DOI 10.1109/ICSE.2015.76
   Schäfer M, 2013, ACM SIGPLAN NOTICES, V48, P165, DOI 10.1145/2499370.2462168
   Sridharan M, 2012, LECT NOTES COMPUT SC, V7313, P435, DOI 10.1007/978-3-642-31057-7_20
   Stol KJ, 2016, PROC INT CONF SOFTW, P120, DOI 10.1145/2884781.2884833
   Terrell J, 2017, PEERJ COMPUT SCI, DOI 10.7717/peerj-cs.111
   Tomasdottir K. F., 2017, POSTPROMOTING SURVEY
   Tomasdottir K. F., 2017, POSTPROMOTING SURVEY
   Tomasdottir K. F., 2017, POSTPROMOTING SURVEY
   Tómasdóttir KF, 2017, IEEE INT CONF AUTOM, P578, DOI 10.1109/ASE.2017.8115668
   Tsantalis N, 2008, CSMR 2008: 12TH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, P329
   Vorbach P., 2017, NPM STAT DOWNLOAD ST
   Wagner S, 2005, LECT NOTES COMPUT SC, V3502, P40
   Wedyan F, 2009, SECOND INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION, AND VALIDATION, PROCEEDINGS, P141, DOI 10.1109/ICST.2009.21
   Wohlin C., 2012, Experimentation in Software Engineering
   Zampetti F, 2017, IEEE WORK CONF MIN S, P334, DOI 10.1109/MSR.2017.2
   Zheng J, 2006, IEEE T SOFTWARE ENG, V32, P240, DOI 10.1109/TSE.2006.38
NR 77
TC 22
Z9 23
U1 1
U2 13
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD AUG 1
PY 2020
VL 46
IS 8
BP 863
EP 891
DI 10.1109/TSE.2018.2871058
PG 29
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA NB6VD
UT WOS:000560651400003
DA 2024-07-18
ER

PT J
AU Kovalenko, V
   Tintarev, N
   Pasynkov, E
   Bird, C
   Bacchelli, A
AF Kovalenko, Vladimir
   Tintarev, Nava
   Pasynkov, Evgeny
   Bird, Christian
   Bacchelli, Alberto
TI Does Reviewer Recommendation Help Developers?
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Tools; Recommender systems; Companies; Measurement; Software; In vivo;
   Software engineering; Code review; reviewer recommendation; empirical
   software engineering
ID EXPERT RECOMMENDATION
AB Selecting reviewers for code changes is a critical step for an efficient code review process. Recent studies propose automated reviewer recommendation algorithms to support developers in this task. However, the evaluation of recommendation algorithms, when done apart from their target systems and users (i.e., code review tools and change authors), leaves out important aspects: perception of recommendations, influence of recommendations on human choices, and their effect on user experience. This study is the first to evaluate a reviewer recommender in vivo. We compare historical reviewers and recommendations for over 21,000 code reviews performed with a deployed recommender in a company environment and set out to measure the influence of recommendations on users' choices, along with other performance metrics. Having found no evidence of influence, we turn to the users of the recommender. Through interviews and a survey we find that, though perceived as relevant, reviewer recommendations rarely provide additional value for the respondents. We confirm this finding with a larger study at another company. The confirmation of this finding brings up a case for more user-centric approaches to designing and evaluating the recommenders. Finally, we investigate information needs of developers during reviewer selection and discuss promising directions for the next generation of reviewer recommendation tools. Preprint: https://doi.org/10.5281/zenodo.1404814.
C1 [Kovalenko, Vladimir] Delft Univ Technol, Software Engn Res Grp, NL-2628 CD Delft, Netherlands.
   [Tintarev, Nava] Delft Univ Technol, Web Informat Syst Grp, NL-2628 CD Delft, Netherlands.
   [Pasynkov, Evgeny] JetBrains GmbH, D-80687 Munich, Germany.
   [Bird, Christian] Microsoft, Microsoft Res, Redmond, WA 98052 USA.
   [Bacchelli, Alberto] Univ Zurich, ZEST, CH-8006 Zurich, Switzerland.
C3 Delft University of Technology; Delft University of Technology;
   Microsoft; University of Zurich
RP Kovalenko, V (corresponding author), Delft Univ Technol, Software Engn Res Grp, NL-2628 CD Delft, Netherlands.
EM V.V.Kovalenko@tudelft.nl; n.tintarev@tudelft.nl;
   evgeny.pasynkov@jetbrains.com; cbird@microsoft.com; bacchelli@ifi.uzh.ch
RI Bacchelli, Alberto/ABG-5379-2020
OI Bacchelli, Alberto/0000-0003-0193-6823; Kovalenko,
   Vladimir/0000-0001-5880-7323
FU Swiss National Science Foundation through the SNF Project
   [PP00P2_170529]
FX The authors are grateful to all participants of surveys and interviews
   at JetBrains and Microsoft for their input. Vladimir thanks the amazing
   people at JetBrains for making the data mining possible. Special thanks
   to Ekaterina Stepanova for arranging the process from the legal side,
   and to Upsource team for their help with the technical aspects. We thank
   Arie van Deursen for his comments on the drafts of this paper. Bacchelli
   gratefully acknowledges the support of the Swiss National Science
   Foundation through the SNF Project No. PP00P2_170529.
CR Anelli VW, 2017, PROCEEDINGS OF THE 25TH CONFERENCE ON USER MODELING, ADAPTATION AND PERSONALIZATION (UMAP'17), P270, DOI 10.1145/3079628.3079703
   [Anonymous], 2009, Research on software analysis for error-free computing center Tech-Memo (ROSAEC MEMO 2009-006)
   [Anonymous], 2003, P INT S EMP SOFTW EN
   [Anonymous], P 5 ACM C REC SYST
   Anvik John, 2006, P 28 INT C SOFTWARE, P361, DOI DOI 10.1145/1134285.1134336
   Ayewah N, 2008, IEEE SOFTWARE, V25, P22, DOI 10.1109/MS.2008.130
   Bacchelli A, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P712, DOI 10.1109/ICSE.2013.6606617
   Bakshy E, 2015, SCIENCE, V348, P1130, DOI 10.1126/science.aaa1160
   Balachandran V, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P931, DOI 10.1109/ICSE.2013.6606642
   Baum T, 2016, LECT NOTES COMPUT SC, V10027, P301, DOI 10.1007/978-3-319-49094-6_19
   Begel Andrew, 2008, P 4 INT WORKSH COMP, P3, DOI [DOI 10.1145/RESEARCH(ICER'1404520.1404522, 10.1145/Research(ICER'1404520.1404522]
   Carrer-Neto W, 2012, EXPERT SYST APPL, V39, P10990, DOI 10.1016/j.eswa.2012.03.025
   Chang S, 2016, PROCEEDINGS OF THE 10TH ACM CONFERENCE ON RECOMMENDER SYSTEMS (RECSYS'16), P175, DOI 10.1145/2959100.2959153
   COHEN J, 1960, EDUC PSYCHOL MEAS, V20, P37, DOI 10.1177/001316446002000104
   Cosley Dan, 2003, P SIGCHI C HUM FACT, P585
   Creswell W., 2009, Research design: Qualitative, quantitative, and mixed methods approaches, V3rd, DOI DOI 10.1063/1.1150549
   Davoodi E, 2012, LECT NOTES COMPUT SC, V7208, P91
   Fleder D, 2009, MANAGE SCI, V55, P697, DOI 10.1287/mnsc.1080.0974
   FURNHAM A, 1986, PERS INDIV DIFFER, V7, P385, DOI 10.1016/0191-8869(86)90014-0
   Glaser B.G., 1998, DOING GROUNDED THEOR
   Gousios G, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P345, DOI 10.1145/2568225.2568260
   Hannebauer C, 2016, IEEE INT CONF AUTOM, P99, DOI 10.1145/2970276.2970306
   Herlocker JL, 2004, ACM T INFORM SYST, V22, P5, DOI 10.1145/963770.963772
   Hua Z, 2007, LANGUAGE LEARNING AND TEACHING AS SOCIAL INTER-ACTION, P1
   Iaquinta Leo, 2008, 2008 8th International Conference on Hybrid Intelligent Systems (HIS), P168, DOI 10.1109/HIS.2008.25
   Jaccard P., 1901, B SOCIT VAUDOISE SCI, V37, P547, DOI [10.5169/seals-266440, DOI 10.5169/SEALS-266440]
   Ji AT, 2007, LECT NOTES COMPUT SC, V4830, P377
   Kitchenham BA, 2008, Guide to advanced empirical software engineering, P63, DOI [DOI 10.1007/978-1-84800-044-5_3, 10.1007/ 978-1-84800-044-5_3]
   Knijnenburg BP, 2012, USER MODEL USER-ADAP, V22, P441, DOI 10.1007/s11257-011-9118-4
   Kononenko O, 2015, PROC IEEE INT CONF S, P111, DOI 10.1109/ICSM.2015.7332457
   Koren Y, 2011, RECOMMENDER SYSTEMS HANDBOOK, P145, DOI 10.1007/978-0-387-85820-3_5
   Lee SK, 2010, INFORM SCIENCES, V180, P2142, DOI 10.1016/j.ins.2010.02.004
   Lewis C, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P372, DOI 10.1109/ICSE.2013.6606583
   Lidwell William, 2010, Universal Principles of Design, Revised and Updated: 125 Ways to Enhance Usability, Influence Perception, Increase Appeal, Make Better Design Decisions, and Teach through Design
   Ma D, 2009, PROC IEEE INT CONF S, P535, DOI 10.1109/ICSM.2009.5306386
   McCarthy K., 2005, P INT FLAIRS C 2005, P123
   McGinty L, 2003, LECT NOTES ARTIF INT, V2689, P276
   Mcnally K., 2011, ACM T INTEL SYST TEC, V3, P1, DOI DOI 10.1145/2036264
   McNee SM, 2006, CHI 06 HUM FACT COMP, P1097, DOI DOI 10.1145/1125451.1125659
   Mouzhi Ge, 2010, P 4 ACM C REC SYST B, P257, DOI [10.1145/1864708.1864761, DOI 10.1145/1864708.1864761]
   Nguyen TT, 2014, WWW'14: PROCEEDINGS OF THE 23RD INTERNATIONAL CONFERENCE ON WORLD WIDE WEB, P677, DOI 10.1145/2566486.2568012
   Ouni A, 2016, PROC IEEE INT CONF S, P367, DOI 10.1109/ICSME.2016.65
   Pu P, 2011, RECOMMENDER SYSTEMS HANDBOOK, P511, DOI 10.1007/978-0-387-85820-3_16
   Rader E, 2015, CHI 2015: PROCEEDINGS OF THE 33RD ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, P173, DOI 10.1145/2702123.2702174
   Rahman MM, 2016, 2016 IEEE/ACM 38TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING COMPANION (ICSE-C), P222, DOI 10.1145/2889160.2889244
   Rahman MM, 2016, IEEE INT CONF AUTOM, P792, DOI 10.1145/2970276.2970283
   Rashid A. L., 2002, IUI 02. 2002 International Conference on Intelligent User Interfaces, P127
   Resnick P., 1994, Transcending Boundaries, CSCW '94. Proceedings of the Conference on Computer Supported Cooperative Work, P175, DOI 10.1145/192844.192905
   Rigby PC, 2013, P 2013 9 JOINT M FDN, P202, DOI DOI 10.1145/2491411.2491444
   Rigby PC, 2012, IEEE SOFTWARE, V29, P56, DOI 10.1109/MS.2012.24
   Smith E, 2013, 2013 6TH INTERNATIONAL WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING (CHASE), P89, DOI 10.1109/CHASE.2013.6614738
   Smyth B, 2001, LECT NOTES ARTIF INT, V2080, P347
   Smyth B., 2007, The Adaptive Web. Methods and Strategies of Web Personalization, P342
   Taylor B.C., 2010, QUALITATIVE COMMUNIC
   Thongtanunam P, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P141, DOI 10.1109/SANER.2015.7081824
   Thongtanunam Patanamon, 2014, P 7 INT WORKSHOP COO, P119
   Tintarev Nava, 2015, Recommender systems handbook
   Tyagi Pradeep K., 1989, Journal of the Academy of Marketing Science, V17, P235
   Venkataramani R, 2013, PROCEEDINGS OF THE 22ND INTERNATIONAL CONFERENCE ON WORLD WIDE WEB (WWW'13 COMPANION), P97
   Weiss R. S, 1995, Learning from strangers
   Yu Y, 2016, INFORM SOFTWARE TECH, V74, P204, DOI 10.1016/j.infsof.2016.01.004
   Yu ZW, 2006, USER MODEL USER-ADAP, V16, P63, DOI 10.1007/s11257-006-9005-6
   Zanjani MB, 2016, IEEE T SOFTWARE ENG, V42, P530, DOI 10.1109/TSE.2015.2500238
   Zhou J, 2012, PROC INT CONF SOFTW, P14, DOI 10.1109/ICSE.2012.6227210
NR 64
TC 22
Z9 22
U1 1
U2 19
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUL 1
PY 2020
VL 46
IS 7
BP 710
EP 731
DI 10.1109/TSE.2018.2868367
PG 22
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA ML2UM
UT WOS:000549327500002
OA Green Submitted, Green Accepted
DA 2024-07-18
ER

PT J
AU Santos, A
   Gómez, O
   Juristo, N
AF Santos, Adrian
   Gomez, Omar
   Juristo, Natalia
TI Analyzing Families of Experiments in SE: A Systematic Mapping Study
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Family of experiments; meta-analysis; narrative synthesis; IPD; AD
ID INDIVIDUAL PARTICIPANT DATA; EFFECT SIZE; SEQUENCE DIAGRAMS; STATISTICAL
   POWER; PRACTICAL GUIDE; CLINICAL-TRIALS; UML DIAGRAMS; SOURCE CODE;
   SOFTWARE; METAANALYSIS
AB Context: Families of experiments (i.e., groups of experiments with the same goal) are on the rise in Software Engineering (SE). Selecting unsuitable aggregation techniques to analyze families may undermine their potential to provide in-depth insights from experiments' results. Objectives: Identifying the techniques used to aggregate experiments' results within families in SE. Raising awareness of the importance of applying suitable aggregation techniques to reach reliable conclusions within families. Method: We conduct a systematic mapping study (SMS) to identify the aggregation techniques used to analyze families of experiments in SE. We outline the advantages and disadvantages of each aggregation technique according to mature experimental disciplines such as medicine and pharmacology. We provide preliminary recommendations to analyze and report families of experiments in view of families' common limitations with regard to joint data analysis. Results: Several aggregation techniques have been used to analyze SE families of experiments, including Narrative synthesis, Aggregated Data (AD), Individual Participant Data (IPD) mega-trial or stratified, and Aggregation of pp-values. The rationale used to select aggregation techniques is rarely discussed within families. Families of experiments are commonly analyzed with unsuitable aggregation techniques according to the literature of mature experimental disciplines. Conclusion: Data analysis' reporting practices should be improved to increase the reliability and transparency of joint results. AD and IPD stratified appear to be suitable to analyze SE families of experiments.
C1 [Santos, Adrian] ITEE Univ Oulu, M3S M Grp, POB 3000, Oulu 90014, Finland.
   [Gomez, Omar] Escuela Super Politecn Chimborazo Riobamba, EC-060155 Chimborazo, Ecuador.
   [Juristo, Natalia] Univ Politecn Madrid, Escuela Tecn Super Ingn Informat, Campus Montegancedo, Boadilla Del Monte 28660, Spain.
C3 Universidad Politecnica de Madrid
RP Santos, A (corresponding author), ITEE Univ Oulu, M3S M Grp, POB 3000, Oulu 90014, Finland.
EM adrian.santos.parrilla@oulu.fi; ogomez@espoch.edu.ec; natalia@fi.upm.es
RI Gómez, Omar S./C-2143-2015
OI Gómez, Omar S./0000-0002-2951-3833
FU Spanish Ministry of Science and Innovation project [TIN2014-60490-P]
FX This research was developed with the support of the Spanish Ministry of
   Science and Innovation project TIN2014-60490-P. We would like to thank
   the anonymous reviewers who helped to polish this research article.
CR Abo-Zaid G, 2013, J CLIN EPIDEMIOL, V66, P865, DOI 10.1016/j.jclinepi.2012.12.017
   Abrahao S, 2013, IEEE T SOFTWARE ENG, V39, P327, DOI 10.1109/TSE.2012.27
   Acuña ST, 2015, INFORM SOFTWARE TECH, V57, P141, DOI 10.1016/j.infsof.2014.09.002
   Ali S, 2014, INT CONF QUAL SOFTW, P234, DOI 10.1109/QSIC.2014.17
   Altman DG, 2001, BMJ-BRIT MED J, V323, P224, DOI 10.1136/bmj.323.7306.224
   Anello C, 2005, STAT METHODS MED RES, V14, P303, DOI 10.1191/0962280205sm398oa
   [Anonymous], 2000, METAANALYSIS DECISIO
   [Anonymous], 2002, METAANALYSIS CONTROL
   [Anonymous], 2013, PRACT ASSESS RES EVA
   [Anonymous], P ANN M AM RES ASS
   [Anonymous], P INT C SOFTW ENG KN
   [Anonymous], 2013, UNDERSTANDING NEW ST
   Arcuri A, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1, DOI 10.1145/1985793.1985795
   Basili VR, 1999, IEEE T SOFTWARE ENG, V25, P456, DOI 10.1109/32.799939
   BERO L, 1995, JAMA-J AM MED ASSOC, V274, P1935, DOI 10.1001/jama.274.24.1935
   BIRNBAUM A, 1954, J AM STAT ASSOC, V49, P559, DOI 10.2307/2281130
   Bolker BM, 2009, TRENDS ECOL EVOL, V24, P127, DOI 10.1016/j.tree.2008.10.008
   Borenstein M., 2009, INTRO METAANALYSIS
   Brown H., 2014, Applied Mixed Models in Medicine
   Button KS, 2013, NAT REV NEUROSCI, V14, P365, DOI 10.1038/nrn3475
   Canfora G, 2005, J SYST SOFTWARE, V77, P113, DOI 10.1016/j.jss.2004.11.007
   Carver JC, 2014, EMPIR SOFTW ENG, V19, P267, DOI 10.1007/s10664-013-9290-8
   Ceccato M, 2015, ACM T SOFTW ENG METH, V25, DOI 10.1145/2768829
   Ceccato M, 2014, EMPIR SOFTW ENG, V19, P1040, DOI 10.1007/s10664-013-9248-x
   Ciolkowski M, 2002, P 6 INT C EMP ASS SO, P48
   Coe R., 2002, British Educ. Res. Assoc. Ann. Conf, V12, P14
   Cohen J., 1988, STAT POWER ANAL BEHA, VSecond, P1, DOI DOI 10.1016/B978-0-12-179060-8.50006-2
   Cooper H, 2009, PSYCHOL METHODS, V14, P165, DOI 10.1037/a0015565
   Cruz-Lemus JA, 2011, INFORM SOFTWARE TECH, V53, P1391, DOI 10.1016/j.infsof.2011.07.002
   Cruz-Lemus JA, 2009, EMPIR SOFTW ENG, V14, P685, DOI 10.1007/s10664-009-9106-z
   Debray TPA, 2015, RES SYNTH METHODS, V6, P293, DOI 10.1002/jrsm.1160
   Dieste O, 2017, EMPIR SOFTW ENG, V22, P2457, DOI 10.1007/s10664-016-9471-3
   Dieste O, 2017, IEEE-ACM INT WKSP CO, P27, DOI 10.1109/CESI.2017.8
   Dijkman B, 2009, CAN J SURG, V52, P515
   Dyba T, 2005, IEEE SOFTWARE, V22, P58, DOI 10.1109/MS.2005.6
   Dybå T, 2006, INFORM SOFTWARE TECH, V48, P745, DOI 10.1016/j.infsof.2005.08.009
   Esperanza Manso M., 2008, Proc. of the Workshops at the ACM/IEEE International Conference on Model Driven Engineering Languages and Systems (MODELS'08), P303
   Fagerland MW, 2012, BMC MED RES METHODOL, V12, DOI 10.1186/1471-2288-12-78
   Fernandez A, 2013, J SYST SOFTWARE, V86, P161, DOI 10.1016/j.jss.2012.07.043
   Fernández-Sáez AM, 2016, EMPIR SOFTW ENG, V21, P212, DOI 10.1007/s10664-014-9354-4
   Fernández-Sáez AM, 2015, INFORM SOFTWARE TECH, V57, P644, DOI 10.1016/j.infsof.2014.05.014
   Field A., 2013, Discovering statistics using IBM SPSS statistics, V4th, P591
   Figueiredo E., 2011, P 10 INT C ASP OR SO, P81
   Fritz CO, 2012, J EXP PSYCHOL GEN, V141, P2, DOI 10.1037/a0024338
   George B, 2004, INFORM SOFTWARE TECH, V46, P337, DOI 10.1016/j.infsof.2003.09.011
   Gómez OS, 2014, INFORM SOFTWARE TECH, V56, P1033, DOI 10.1016/j.infsof.2014.04.004
   Gonzalez-Huerta J, 2015, INFORM SOFTWARE TECH, V57, P405, DOI 10.1016/j.infsof.2014.05.018
   Groenwold RHH, 2009, ARCH INTERN MED, V169, P1532, DOI 10.1001/archinternmed.2009.250
   Hadar I, 2013, INFORM SOFTWARE TECH, V55, P1823, DOI 10.1016/j.infsof.2013.05.003
   Haidich AB, 2010, HIPPOKRATIA, V14, P29
   Harrison F, 2011, METHODS ECOL EVOL, V2, P1, DOI 10.1111/j.2041-210X.2010.00056.x
   HEDGES LV, 1980, PSYCHOL BULL, V88, P359, DOI 10.1037/0033-2909.88.2.359
   Hess MR, 2004, ANNU M AM EDUC RES, P12
   Hesterberg TC, 2015, AM STAT, V69, P371, DOI 10.1080/00031305.2015.1089789
   Huta V, 2014, QUANT METH PSYCHOL, V10, P13, DOI 10.20982/tqmp.10.1.p013
   Ioannidis JPA, 2008, BMJ-BRIT MED J, V336, P1413, DOI 10.1136/bmj.a117
   Jackson D, 2011, STAT MED, V30, P2481, DOI 10.1002/sim.4172
   Jorgensen M, 2011, INFORM SOFTWARE TECH, V53, P1382, DOI 10.1016/j.infsof.2011.07.001
   Juristo N., 2012, 2012 IEEE Fifth International Conference on Software Testing, Verification and Validation (ICST 2012), P330, DOI 10.1109/ICST.2012.113
   Juristo N, 2011, EMPIR SOFTW ENG, V16, P295, DOI 10.1007/s10664-010-9141-9
   Juristo N, 2009, INT SYMP EMP SOFTWAR, P357
   Juristo Natalia, 2011, Basics of software engineering experimentation
   Kampenes VB, 2007, INFORM SOFTWARE TECH, V49, P1073, DOI 10.1016/j.infsof.2007.02.015
   Kitchenham BA, 2004, PROC INT CONF SOFTW, P273
   Kitchenham B, 2008, EMPIR SOFTW ENG, V13, P219, DOI 10.1007/s10664-008-9061-0
   Kitchenham Barbara, 2004, Joint Technical Report, V2004, P1
   Kosar T, 2012, EMPIR SOFTW ENG, V17, P276, DOI 10.1007/s10664-011-9172-x
   Kraemer HC, 2000, SCHIZOPHRENIA BULL, V26, P533, DOI 10.1093/oxfordjournals.schbul.a033474
   Krein JL, 2016, IEEE T SOFTWARE ENG, V42, P302, DOI 10.1109/TSE.2015.2488625
   Laitenberger O, 2001, IEEE T SOFTWARE ENG, V27, P387, DOI 10.1109/32.922713
   Lau J, 1998, LANCET, V351, P123, DOI 10.1016/S0140-6736(97)08468-7
   Leandro G., 2008, METAANALYSIS MED RES
   Lewis JA, 1999, STAT MED, V18, P1903, DOI 10.1002/(SICI)1097-0258(19990815)18:15<1903::AID-SIM188>3.3.CO;2-6
   Lumley T, 2002, ANNU REV PUBL HEALTH, V23, P151, DOI 10.1146/annurev.publhealth.23.100901.140546
   Macbeth G, 2011, UNIV PSYCHOL, V10, P545, DOI 10.11144/Javeriana.upsy10-2.cdcp
   Macdonald GM, 2006, COCHRANE DB SYST REV, DOI 10.1002/14651858.CD001930.pub2
   Maxwell SE, 2015, AM PSYCHOL, V70, P487, DOI 10.1037/a0039400
   McCulloch CE., 2001, Generalized, Linear, and Mixed Models
   Miller J, 2000, J SYST SOFTWARE, V54, P29, DOI 10.1016/S0164-1212(00)00024-8
   Mouchawrab S, 2011, IEEE T SOFTWARE ENG, V37, P161, DOI 10.1109/TSE.2010.32
   Muñoz L, 2010, INFORM SOFTWARE TECH, V52, P1188, DOI 10.1016/j.infsof.2010.06.003
   Nakagawa S, 2004, BEHAV ECOL, V15, P1044, DOI 10.1093/beheco/arh107
   Nakagawa S, 2007, BIOL REV, V82, P591, DOI 10.1111/j.1469-185X.2007.00027.x
   Norman G, 2010, ADV HEALTH SCI EDUC, V15, P625, DOI 10.1007/s10459-010-9222-y
   Peng CYJ, 2014, J EXP EDUC, V82, P22, DOI 10.1080/00220973.2012.745471
   Petersen K, 2008, P INT C EV ASS SOFTW, P1
   Pfahl D, 2004, INFORM SOFTWARE TECH, V46, P127, DOI 10.1016/S0950-5849(03)00115-0
   Popay J., 2006, Guidance on the conduct of narrative synthesis in systematic reviews: a product from the ESRC Methods Programme, V10, P1018, DOI [DOI 10.13140/2.1.1018.4643, 10.13140/2.1.1018, DOI 10.13140/2.1.1018]
   Porter A., 1998, Empirical Software Engineering, V3, P355, DOI 10.1023/A:1009776104355
   Quené H, 2004, SPEECH COMMUN, V43, P103, DOI 10.1016/j.specom 2004.02.004
   Ren SQ, 2010, J APPL STAT, V37, P1487, DOI 10.1080/02664760903046102
   Reynoso L, 2005, 2005 11TH INTERNATIONAL SYMPOSIUM ON SOFTWARE METRICS (METRICS), P114
   Ricca F, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P361, DOI 10.1145/1368088.1368138
   Ricca F, 2014, ACM T SOFTW ENG METH, V24, DOI 10.1145/2629457
   Ricca F, 2010, IEEE T SOFTWARE ENG, V36, P96, DOI 10.1109/TSE.2009.69
   Rodgers M., 2009, Evaluation, V15, P49, DOI [10.1177/1356389008097871, DOI 10.1177/1356389008097871]
   Rosenthal R., 1994, The handbook of research synthesis, P231, DOI DOI 10.7758/9781610441377
   Runeson P., 2011, Proceedings of the 2011 Second International Workshop on Replication in Empirical Software Engineering Research (RESER 2011), P35, DOI 10.1109/RESER.2011.13
   Runeson P, 2014, EMPIR SOFTW ENG, V19, P1781, DOI 10.1007/s10664-013-9262-z
   Salleh N, 2014, EMPIR SOFTW ENG, V19, P714, DOI 10.1007/s10664-012-9238-4
   Scanniello G, 2015, LECT NOTES COMPUT SC, V9459, P311, DOI 10.1007/978-3-319-26844-6_23
   Scanniello G, 2015, ACM T SOFTW ENG METH, V24, DOI 10.1145/2699696
   Scanniello G, 2014, ACM T SOFTW ENG METH, V23, DOI 10.1145/2491912
   Schmider E, 2010, METHODOLOGY-EUR, V6, P147, DOI 10.1027/1614-2241/a000016
   Shull F, 2004, EMPIR SOFTW ENG, V9, P111, DOI 10.1023/B:EMSE.0000013516.80487.33
   Shull FJ, 2008, EMPIR SOFTW ENG, V13, P211, DOI 10.1007/s10664-008-9060-1
   Simmonds MC, 2005, CLIN TRIALS, V2, P209, DOI 10.1191/1740774505cn087oa
   Sjoberg DIK, 2005, IEEE T SOFTWARE ENG, V31, P733, DOI 10.1109/TSE.2005.97
   Monge MAS, 2018, 2018 INTERNATIONAL WORKSHOP ON SECURE INTERNET OF THINGS (SIOT 2018), P28, DOI 10.1109/SIoT.2018.00010
   Staron M, 2006, J SYST SOFTWARE, V79, P727, DOI 10.1016/j.jss.2005.09.014
   Stewart GB, 2012, PLOS ONE, V7, DOI 10.1371/journal.pone.0046042
   Stewart LA, 2002, EVAL HEALTH PROF, V25, P76, DOI 10.1177/0163278702025001006
   Stewart LA, 2015, JAMA-J AM MED ASSOC, V313, P1657, DOI 10.1001/jama.2015.3656
   Teruel MA, 2012, INFORM SOFTWARE TECH, V54, P1215, DOI 10.1016/j.infsof.2012.06.001
   Vickers Andrew J, 2005, BMC Med Res Methodol, V5, P35, DOI 10.1186/1471-2288-5-35
   von Wangenheim CG, 2009, EMPIR SOFTW ENG, V14, P418, DOI 10.1007/s10664-008-9092-6
   Wadgave U, 2016, ASIAN J PSYCHIATR, V24, P67, DOI 10.1016/j.ajp.2016.08.016
   Whitley E, 2002, CRIT CARE, V6, P509, DOI 10.1186/cc1820
   Wohlin C., 2012, Experimentation in Software Engineering
   Wohlin C, 2014, 18 INT C EV ASS SOFT, P1, DOI DOI 10.1145/2601248.2601268
NR 120
TC 22
Z9 24
U1 2
U2 8
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAY 1
PY 2020
VL 46
IS 5
BP 566
EP 583
DI 10.1109/TSE.2018.2864633
PG 18
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science; Engineering
GA LS2LR
UT WOS:000536221400005
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Matinnejad, R
   Nejati, S
   Briand, LC
   Bruckmann, T
AF Matinnejad, Reza
   Nejati, Shiva
   Briand, Lionel C.
   Bruckmann, Thomas
TI Test Generation and Test Prioritization for Simulink Models with Dynamic
   Behavior
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Simulink models; search-based software testing; test generation; test
   prioritization; test oracle; output diversity; signal features;
   structural coverage
ID TOOL; VERIFICATION; FRAMEWORK; CHECKING; SOFTWARE; LANGUAGE
AB All engineering disciplines are founded and rely on models, although they may differ on purposes and usages of modeling. Among the different disciplines, the engineering of Cyber Physical Systems (CPSs) particularly relies on models with dynamic behaviors (i.e., models that exhibit time-varying changes). The Simulink modeling platform greatly appeals to CPS engineers since it captures dynamic behavior models. It further provides seamless support for two indispensable engineering activities: (1) automated verification of abstract system models via model simulation, and (2) automated generation of system implementation via code generation. We identify three main challenges in the verification and testing of Simulink models with dynamic behavior, namely incompatibility, oracle and scalability challenges. We propose a Simulink testing approach that attempts to address these challenges. Specifically, we propose a black-box test generation approach, implemented based on meta-heuristic search, that aims to maximize diversity in test output signals generated by Simulink models. We argue that in the CPS domain test oracles are likely to be manual and therefore the main cost driver of testing. In order to lower the cost of manual test oracles, we propose a test prioritization algorithm to automatically rank test cases generated by our test generation algorithm according to their likelihood to reveal a fault. Engineers can then select, according to their test budget, a subset of the most highly ranked test cases. To demonstrate scalability, we evaluate our testing approach using industrial Simulink models. Our evaluation shows that our test generation and test prioritization approaches outperform baseline techniques that rely on random testing and structural coverage.
C1 [Matinnejad, Reza; Nejati, Shiva; Briand, Lionel C.] Univ Luxembourg, SnT Ctr Secur Reliabil & Trust, L-2721 Luxembourg, Luxembourg.
   [Bruckmann, Thomas] Delphi Automot Syst, L-4940 Luxembourg, Luxembourg.
C3 University of Luxembourg; Delphi
RP Nejati, S (corresponding author), Univ Luxembourg, SnT Ctr Secur Reliabil & Trust, L-2721 Luxembourg, Luxembourg.
EM reza.matinnejad@svv.lu; shiva.nejati@svv.lu; lionel.briand@svv.1u;
   thomas.bruckmann@delphi.com
RI Nejati, Shiva/KBT-7650-2024
OI Briand, Lionel/0000-0002-1393-1010; Nejati, Shiva/0000-0002-0281-8231
FU European Research Council (ERC) under the European Union's Horizon 2020
   research and innovation programme [694277]; Delphi Automotive Systems,
   Luxembourg
FX We gratefully acknowledge funding from the European Research Council
   (ERC) under the European Union's Horizon 2020 research and innovation
   programme (grant agreement No 694277) and from Delphi Automotive
   Systems, Luxembourg.
CR Abbas H, 2013, ACM T EMBED COMPUT S, V12, DOI 10.1145/2465787.2465797
   Alshahwan N., 2014, Proceedings of the 2014 International Symposium on Software Testing and Analysis, P181
   Alshahwan N, 2012, PROC INT CONF SOFTW, P1345, DOI 10.1109/ICSE.2012.6227083
   Annapureddy Y, 2011, LECT NOTES COMPUT SC, V6605, P254, DOI 10.1007/978-3-642-19835-9_21
   [Anonymous], REACT COV METR
   [Anonymous], 2009, P GENETIC EVOLUTIONA
   [Anonymous], 2004, Control System Engineering
   [Anonymous], ACM SIGSOFT SOFTW EN
   [Anonymous], PROC INT CONF SOFTW
   [Anonymous], 2008, P 8 ACM IEEE INT C E
   [Anonymous], 2000, GENERATIVE PROGRAMMI
   [Anonymous], P 12 ANN C GEN EV CO
   [Anonymous], PROV PLUG IN SOFTW
   [Anonymous], REACT TEST
   [Anonymous], SIM
   [Anonymous], REACTIS TEST GENERAT
   [Anonymous], 2012, MODEL BASED TESTING
   [Anonymous], INTRO EMBEDDED SYSTE
   [Anonymous], C COD GEN SIM
   [Anonymous], SIMCOTEST
   [Anonymous], PRINCIPLES CYBER PHY
   [Anonymous], SOFTW TESTING VERIFI
   [Anonymous], REACT VAL
   [Anonymous], 2013, ESSENTIALS METAHEURI
   [Anonymous], 2014, PROC 29 ACMIEEE INT
   [Anonymous], THESIS
   [Anonymous], PAPER EXTRA RESOURCE
   [Anonymous], MOD FAULT TOL FUEL C
   [Anonymous], IEEE T SOFTWARE ENG, DOI DOI 10.1109/TSE.2014.2372785
   [Anonymous], TECHNICAL REPORT
   [Anonymous], TYP MOD COV
   [Anonymous], CALL MATLAB FUNCT C
   [Anonymous], 2011, P IEEE 16 C EMERGING
   Anthony Capon J., 1991, Elementary Statistics for the Social Sciences: Study Guide
   Araiza-Illan D, 2015, 2015 EUROPEAN CONTROL CONFERENCE (ECC), P2670, DOI 10.1109/ECC.2015.7330941
   Balasubramanian D., 2011, P 2011 INT S SOFTWAR, P45, DOI [10.1145/2001420.2001427, DOI 10.1145/2001420.2001427]
   Baresel A, 2003, LECT NOTES COMPUT SC, V2724, P2428
   Barnat Jiri, 2012, 2012 IEEE Sixth International Symposium on Theoretical Aspects of Software Engineering (TASE 2012), P245, DOI 10.1109/TASE.2012.42
   Barnat J, 2006, LECT NOTES COMPUT SC, V4144, P278, DOI 10.1007/11817963_26
   Bensalem S., 2000, LFM 2000: Fifth NASA Langley Formal Methods Workshop (NASA/CP-2000-210100), P187
   Briand L, 2016, 2016 IEEE/ACM 38TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING COMPANION (ICSE-C), P789, DOI 10.1145/2889160.2889212
   Brillout Angelo, 2009, Proceedings of Formal Methods for Components and Objects. 8th International Symposium (FMCO 2009). Revised Selected Papers, P208, DOI 10.1007/978-3-642-17071-3_11
   Cadar C., 2008, OSDI, V8, P209, DOI DOI 10.5555/1855741.1855756
   Chaturvedi D.K., 2009, MODELING SIMULATION
   Cimatti A., 2000, Int. J. Softw. Tools for Technol. Transf. (STTT), V2, P410, DOI [DOI 10.1007/S100090050046, 10.1007/s100090050046]
   Clarke EM, 2011, LECT NOTES COMPUT SC, V6996, P1, DOI 10.1007/978-3-642-24372-1_1
   Clarke EM, 1999, MODEL CHECKING, P1
   Cleaveland R, 2008, LECT NOTES COMPUT SC, V4922, P84
   Cohen J., 1988, STAT POWER ANAL BEHA, VSecond, P1, DOI DOI 10.1016/B978-0-12-179060-8.50006-2
   France R, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P37, DOI 10.1109/FOSE.2007.14
   Fraser G., 2011, Proceedings of the 11th International Conference on Quality Software (QSIC 2011), P31, DOI 10.1109/QSIC.2011.19
   Fraser G, 2013, IEEE T SOFTWARE ENG, V39, P276, DOI 10.1109/TSE.2012.14
   Frehse G., 2011, COMPUTER AIDED VERIF, P379, DOI [DOI 10.1007/978-3-642-22110-1, 10.1007/978-3-642-22110-1_30]
   Gadkari AA, 2008, LECT NOTES COMPUT SC, V5123, P204
   Gay G, 2016, ACM T SOFTW ENG METH, V25, DOI 10.1145/2934672
   Gold B., 1969, DIGITAL PROCESSING S
   Hahn G, 2003, P IEEE RAP SYST PROT, P78
   HALBWACHS N, 1991, P IEEE, V79, P1305, DOI 10.1109/5.97300
   Hamon G., 2008, P 10 IEEE INT C PROB, P1
   He NN, 2011, DES AUT CON, P224
   Heimdahl MPE, 2013, 2013 2ND INTERNATIONAL WORKSHOP ON THE TWIN PEAKS OF REQUIREMENTS AND ARCHITECTURE (TWINPEAKS), P1, DOI 10.1109/TwinPeaks.2013.6614716
   Hemmati H, 2013, ACM T SOFTW ENG METH, V22, DOI 10.1145/2430536.2430540
   Henzinger TA, 2006, LECT NOTES COMPUT SC, V4085, P1
   Inozemtseva L, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P435, DOI 10.1145/2568225.2568271
   Isaksson A, 2002, IEE P-CONTR THEOR AP, V149, P1, DOI 10.1049/ip-cta:20020319
   KOYMANS R, 1990, REAL-TIME SYST, V2, P255, DOI 10.1007/BF01995674
   Krizan J., 2014, em 2014 IEEE 27th Canadian Conference on Electrical and Computer Engineering (CCECE), P1, DOI DOI 10.1109/CCECE.2014.6901058
   Kuehlmann A, 2002, SPRING INT SER ENG C, V654, P343
   Lakhotia K, 2010, LECT NOTES COMPUT SC, V6435, P142, DOI 10.1007/978-3-642-16573-3_11
   Le Thi My Hanh, 2012, 2012 Fourth International Conference on Knowledge and Systems Engineering (KSE), P54, DOI 10.1109/KSE.2012.22
   Legay A, 2010, LECT NOTES COMPUT SC, V6418, P122, DOI 10.1007/978-3-642-16612-9_11
   Li Z, 2007, IEEE T SOFTWARE ENG, V33, P225, DOI 10.1109/TSE.2007.38
   Lindlar Felix, 2010, Proceedings of the IEEE Third International Conference on Software Testing Verification and Validation - Workshops (ICSTW 2010), P163, DOI 10.1109/ICSTW.2010.10
   Luo Q, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P559, DOI 10.1145/2950290.2950344
   Matinnejad Reza, 2013, Search Based Software Engineering. 5th International Symposium, SSBSE 2013. Proceedings: LNCS 8084, P141, DOI 10.1007/978-3-642-39742-4_12
   Matinnejad R, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P938, DOI 10.1145/3106237.3117770
   Matinnejad R, 2016, 2016 IEEE/ACM 38TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING COMPANION (ICSE-C), P585, DOI 10.1145/2889160.2889162
   Matinnejad R, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P84, DOI 10.1145/2786805.2786818
   Matinnejad R, 2015, INFORM SOFTWARE TECH, V57, P705, DOI 10.1016/j.infsof.2014.05.007
   Matinnejad Reza, 2014, P INT C AUTOMATED SO, P163, DOI DOI 10.1145/2642937.2642978
   MCMINN P., 2010, Proceedings of the First International Workshop on Software Test Output Validation, P1
   Meenakshi B, 2006, LECT NOTES COMPUT SC, V4260, P606
   Miller SP, 2009, LECT NOTES COMPUT SC, V5505, P443, DOI 10.1007/978-3-642-00768-2_36
   Minopoli S, 2016, HSCC'16: PROCEEDINGS OF THE 19TH INTERNATIONAL CONFERENCE ON HYBRID SYSTEMS: COMPUTATION AND CONTROL, P93, DOI 10.1145/2883817.2883826
   Mohalik S, 2014, SOFTW TEST VERIF REL, V24, P155, DOI 10.1002/stvr.1489
   Namin AS, 2009, ISSTA 2009: INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P57
   Nardi PA, 2013, IEEE INT CONF EMBED, P330, DOI 10.1109/RTCSA.2013.6732234
   Owre S., 1996, Computer Aided Verification. 8th International Conference, CAV '96. Proceedings, P411
   Peranandam P, 2012, DES AUT TEST EUROPE, P308
   Porat Boaz., 1997, A course in digital signal processing, V1
   Pretschner A, 2005, PROC INT CONF SOFTW, P392
   Pretschner A, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P55, DOI 10.1109/FOSE.2007.22
   Pretschner A, 2013, LECT NOTES COMPUT SC, V8107, P87, DOI 10.1007/978-3-642-41533-3_6
   Rothermel G, 2001, IEEE T SOFTWARE ENG, V27, P929, DOI 10.1109/32.962562
   Satpathy M, 2012, SOFTW TEST VERIF REL, V22, P457, DOI 10.1002/stvr.444
   Scaife N., 2004, Proceedings of the 4th ACM International Conference on Embedded Software, EMSOFT '04, P259
   Sims S, 2007, ACM SIGPLAN NOTICES, V42, P137, DOI 10.1145/1291220.1291172
   Staats M, 2012, LECT NOTES COMPUT SC, V7212, P409, DOI 10.1007/978-3-642-28872-2_28
   Strathmann T., 2015, 1 2 INT WORKSH APPL, P49
   The MathWorks Inc, SIM DES VER
   Thomas SW, 2014, EMPIR SOFTW ENG, V19, P182, DOI 10.1007/s10664-012-9219-7
   Utting M, 2012, SOFTW TEST VERIF REL, V22, P297, DOI 10.1002/stvr.456
   Varrette S, 2014, 2014 INTERNATIONAL CONFERENCE ON HIGH PERFORMANCE COMPUTING & SIMULATION (HPCS), P959, DOI 10.1109/HPCSim.2014.6903792
   Venkatesh R, 2012, 2012 IEEE INTERNATIONAL CONFERENCE ON INDUSTRIAL TECHNOLOGY (ICIT), P662, DOI 10.1109/ICIT.2012.6210014
   Wainer GA, 2009, COMPUT ANAL SYNTH DE, P3
   Wescott T, 2000, EMBED SYST PROGRAM, V13, P86
   Whalen M.W., 2007, FMICS, P68, DOI DOI 10.1007/978-3-540-79707-4_7
   Whalen M, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P102, DOI 10.1109/ICSE.2013.6606556
   Wilmes Benjamin, 2010, Proceedings of the IEEE Third International Conference on Software Testing Verification and Validation - Workshops (ICSTW 2010), P202, DOI 10.1109/ICSTW.2010.22
   Windisch A, 2009, IEEE ICST WORKSHOP, P121, DOI 10.1109/ICSTW.2009.16
   Windisch A, 2009, PROC INT CONF SOFTW, P395, DOI 10.1109/ICSE-COMPANION.2009.5071030
   Witten IH, 2011, MOR KAUF D, P1
   Yin Yongfeng, 2014, Applied Mechanics and Materials, V687-691, P1389, DOI 10.4028/www.scientific.net/AMM.687-691.1389
   Yoo S, 2012, SOFTW TEST VERIF REL, V22, P67, DOI [10.1002/stv.430, 10.1002/stvr.430]
   Younes HLS, 2006, INFORM COMPUT, V204, P1368, DOI 10.1016/j.ic.2006.05.002
   Zander-Nowicka J., 2008, Model-based Testing of Real-Time Embedded Systems in the Automotive Domain
   Zhan Y, 2004, LECT NOTES COMPUT SC, V3103, P1413
   Zhan Y, 2008, J SYST SOFTWARE, V81, P262, DOI 10.1016/j.jss.2007.05.039
   Zhan Y, 2005, GECCO 2005: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOLS 1 AND 2, P1061
   Zhang LM, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P192, DOI 10.1109/ICSE.2013.6606565
   Zuliani P, 2013, FORM METHOD SYST DES, V43, P338, DOI 10.1007/s10703-013-0195-3
   Zutshi Aditya., 2015, Proceedings of the 18th International Conference on Hybrid Systems: Computation and Control. HSCC'15, P299
NR 122
TC 43
Z9 44
U1 0
U2 10
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD SEP
PY 2019
VL 45
IS 9
BP 919
EP 944
DI 10.1109/TSE.2018.2811489
PG 26
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA IZ6LH
UT WOS:000487192800005
DA 2024-07-18
ER

PT J
AU McMinn, P
   Wright, CJ
   McCurdy, CJ
   Kapfhammer, GM
AF McMinn, Phil
   Wright, Chris J.
   McCurdy, Colton J.
   Kapfhammer, Gregory M.
TI Automatic Detection and Removal of Ineffective Mutants for the Mutation
   Analysis of Relational Database Schemas
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE software testing; software quality; software tools; relational databases
ID SELECTIVE MUTATION
AB Data is one of an organization's most valuable and strategic assets. Testing the relational database schema, which protects the integrity of this data, is of paramount importance. Mutation analysis is a means of estimating the fault-finding "strength" of a test suite. As with programmutation, however, relational database schemamutation results inmany "ineffective" mutants that both degrade test suite quality estimates and make mutation analysis more time consuming. This paper presents a taxonomy of ineffective mutants for relational database schemas, summarizing the root causes of ineffectiveness with a series of key patterns evident in database schemas. On the basis of these, we introduce algorithms that automatically detect and remove ineffective mutants. In an experimental study involving the mutation analysis of 34 schemas used with three popular relational database management systems-HyperSQL, PostgreSQL, and SQLite-the results show that our algorithms can identify and discard large numbers of ineffective mutants that can account for up to 24 percent of mutants, leading to a change in mutation score for 33 out of 34 schemas. The tests for seven schemas were found to achieve 100 percent scores, indicating that they were capable of detecting and killing all non-equivalent mutants. The results also reveal that the execution cost of mutation analysis may be significantly reduced, especially with "heavyweight" DBMSs like PostgreSQL.
C1 [McMinn, Phil; Wright, Chris J.] Univ Sheffield, Dept Comp Sci, Sheffield S1 4DP, S Yorkshire, England.
   [McCurdy, Colton J.; Kapfhammer, Gregory M.] Allegheny Coll, Dept Comp Sci, Meadville, PA 16335 USA.
C3 University of Sheffield; Allegheny College
RP McMinn, P (corresponding author), Univ Sheffield, Dept Comp Sci, Sheffield S1 4DP, S Yorkshire, England.
EM p.mcminn@sheffield.ac.uk; chrisjameswright@gmail.com;
   mccurdyc@allegheny.edu; gkapfham@allegheny.edu
OI McMinn, Phil/0000-0001-9137-7433
CR Adamopoulos K, 2004, LECT NOTES COMPUT SC, V3103, P1338
   [Anonymous], P 10 WORK C MIN SOFT
   [Anonymous], 2003, NIST SQL CONFORMANCE
   [Anonymous], 2015, P IEEE INT ULTR S IU
   Arcuri A, 2014, SOFTW TEST VERIF REL, V24, P219, DOI 10.1002/stvr.1486
   Bertin-Mahieux T., 2011, ISMIR, P591
   Bottaci Leonardo, 2010, Proceedings of the IEEE Third International Conference on Software Testing Verification and Validation - Workshops (ICSTW 2010), P126, DOI 10.1109/ICSTW.2010.56
   Bowman I. T., 2013, P 6 INT WORKSH TEST
   BUDD TA, 1982, ACTA INFORM, V18, P31, DOI 10.1007/BF00625279
   Butler  B., 2012, NETW WORLD
   Chan WK, 2005, QSIC 2005: FIFTH INTERNATIONAL CONFERENCE ON QUALITY SOFTWARE, PROCEEDINGS, P187
   Chekam TT, 2017, PROC INT CONF SOFTW, P597, DOI 10.1109/ICSE.2017.61
   CHOI BJ, 1993, J SYST SOFTWARE, V20, P135, DOI 10.1016/0164-1212(93)90005-I
   Cobb J., 2011, Proceedings of the Ninth International Workshop on Dynamic Analysis, P12, DOI DOI 10.1145/2002951.2002955
   DB-Engines, 2016, DB ENG RANK GRAPH DB
   DeMillo R. A., 1991, Proceedings of the Fifteenth Annual International Computer Software and Applications Conference (Cat. No.91CH3023-9), P351, DOI 10.1109/CMPSAC.1991.170202
   DEMILLO RA, 1978, COMPUTER, V11, P34, DOI 10.1109/C-M.1978.218136
   DEMILLO RA, 1991, IEEE T SOFTWARE ENG, V17, P900, DOI 10.1109/32.92910
   Deng L, 2017, INFORM SOFTWARE TECH, V81, P154, DOI 10.1016/j.infsof.2016.04.012
   Gligoric Milos., 2013, Proceedings of the 2013 International Symposium on Software Testing and Analysis. ISSTA 2013, P224, DOI DOI 10.1145/2483760.2483773
   Glikman P., 2015, WHATS VALUE YOUR DAT
   Goldberg A., 1994, SIGSOFT Software Engineering Notes, P80
   Grün BJM, 2009, IEEE ICST WORKSHOP, P192, DOI 10.1109/ICSTW.2009.37
   Guz Szymon, 2011, BASIC MISTAKES DATAB
   Hierons R.M., 1999, J SOFTW TEST VERIFIC, V9, P233, DOI 10.1002/(SICI)1099-1689(199912)9:43.0.CO;2-3
   Hierons RM, 2009, J SYST SOFTWARE, V82, P1804, DOI 10.1016/j.jss.2009.06.030
   Houkjaer Kenneth, 2006, P 32 INT C VERY LARG, P1243
   Jia Y, 2011, IEEE T SOFTWARE ENG, V37, P649, DOI 10.1109/TSE.2010.62
   Jia Y, 2008, TACI PART 2008:TESTING: ACADEMIC AND INDUSTRIAL CONFERENCE PRACTICE AND RESEARCH TECHNIQUES, PROCEEDINGS, P94, DOI 10.1109/TAIC-PART.2008.18
   Jia Yue, 2016, P 25 INT S SOFTWARE, P354
   Just R., 2012, Proceedings of the 2012 IEEE 23rd International Symposium on Software Reliability Engineering (ISSRE), P11, DOI 10.1109/ISSRE.2012.31
   Just R., 2012, 2012 IEEE Fifth International Conference on Software Testing, Verification and Validation (ICST 2012), P720, DOI 10.1109/ICST.2012.162
   Just R., 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P612, DOI 10.1109/ASE.2011.6100138
   Just Ren., 2011, Proceedings of the 6th International Workshop on Automation of Software Test. AST'11, P50, DOI [DOI 10.1145/1982595.1982606, 10.1145/1982595.1982606]
   Kai Pan, 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P73, DOI 10.1109/ASE.2011.6100152
   Kaminski G, 2011, INFORM SOFTWARE TECH, V53, P1137, DOI 10.1016/j.infsof.2011.03.009
   Kapfhammer Gregory M., 2008, 1st India Software Engineering Conference. ISEC 2008, P77
   Kapfhammer G.M., 2004, Computer Science Handbook, VSecond
   Kapfhammer G. M., 2010, ENCY SOFTW ENG
   Kapfhammer G. M., 2007, THESIS
   Kapfhammer GM, 2016, 2016 IEEE/ACM 9TH INTERNATIONAL WORKSHOP ON SEARCH-BASED SOFTWARE TESTING (SBST), P55, DOI [10.1145/2897010.2897017, 10.1109/SBST.2016.019]
   Kapfhammer GM, 2013, 2013 IEEE SIXTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST 2013), P31, DOI 10.1109/ICST.2013.47
   KING KN, 1991, SOFTWARE PRACT EXPER, V21, P685, DOI 10.1002/spe.4380210704
   Kintis M, 2015, INFORM SOFTWARE TECH, V68, P1, DOI 10.1016/j.infsof.2015.07.009
   KOREL B, 1990, IEEE T SOFTWARE ENG, V16, P870, DOI 10.1109/32.57624
   Ma YS, 2016, J SYST SOFTWARE, V115, P18, DOI 10.1016/j.jss.2016.01.007
   Marisic  C., 2010, RECENT PREVELANCE NO
   Martin E., 2007, P 16 INT C WORLD WID, P667, DOI DOI 10.1145/1242572.1242663
   McCurdy CJ, 2016, PROC IEEE INT CONF S, P591, DOI 10.1109/ICSME.2016.92
   McMinn P, 2016, PROC IEEE INT CONF S, P586, DOI 10.1109/ICSME.2016.93
   McMinn P, 2016, 2016 IEEE/ACM 11TH INTERNATIONAL WORKSHOP IN AUTOMATION OF SOFTWARE TEST (AST), P36, DOI [10.1145/2896921.2896933, 10.1109/AST.2016.014]
   McMinn P, 2015, ACM T SOFTW ENG METH, V25, DOI 10.1145/2818639
   Mirshokraie Shabnam., 2014, Proceedings of the 2014 International Symposium on Software Testing and Analysis, ISSTA 2014, page, P453
   Mouelhiv Tejeddine, 2008, 2008 IEEE International Conference on Software Testing Verification and Validation Workshop (ICSTW), P278, DOI 10.1109/ICSTW.2008.2
   Mresa E. S., 1999, Software Testing, Verification and Reliability, V9, P205, DOI 10.1002/(SICI)1099-1689(199912)9:4<205::AID-STVR186>3.0.CO;2-X
   Offut A. J., 1997, Software Testing, Verification and Reliability, V7, P165, DOI 10.1002/(SICI)1099-1689(199709)7:3<165::AID-STVR143>3.0.CO;2-U
   Offutt A. J., 1994, Software Testing, Verification and Reliability, V4, P131, DOI 10.1002/stvr.4370040303
   Offutt A. J., 1992, P INT C PAR PROC
   OFFUTT AJ, 1993, PROC INT CONF SOFTW, P100, DOI 10.1109/ICSE.1993.346062
   Papadakis M, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P936, DOI 10.1109/ICSE.2015.103
   Praphamontripong U, 2016, IEEE ICST WORKSHOP, P102, DOI 10.1109/ICSTW.2016.17
   Qiu D., 2013, P 2013 9 JOINT M FDN, P125
   Robinson  D., 2016, RELEASING STACKLITE
   Roukounaki  K., 2014, 5 POPULAR DATABASES
   Saifan AA, 2012, PROCEEDINGS OF THE 3RD INTERNATIONAL CONFERENCE ON INFORMATION AND COMMUNICATION SYSTEMS (ICICS'12)
   Savarimuthu  S., 2013, P 2013 INT C AUT AG, P1137
   Schuler David, 2010, Proceedings of the Third IEEE International Conference on Software Testing, Verification and Validation (ICST 2010), P45, DOI 10.1109/ICST.2010.30
   Silberschatz Abraham., 2010, DATABASE SYSTEM CONC
   Smith BH, 2007, TAIC PART 2007 - TESTING: ACADEMIC AND INDUSTRIAL CONFERENCE - PRACTICE AND RESEARCH TECHNIQUES, PROCEEDINGS, P193, DOI 10.1109/TAIC.PART.2007.12
   Tuya J, 2007, INFORM SOFTWARE TECH, V49, P398, DOI 10.1016/j.infsof.2006.06.009
   Untch R. H., 1993, SIGSOFT Software Engineering Notes, V18, P139, DOI 10.1145/174146.154265
   Vargha A, 2000, J EDUC BEHAV STAT, V25, P101, DOI 10.3102/10769986025002101
   Walsh TA, 2015, IEEE INT CONF AUTOM, P709, DOI 10.1109/ASE.2015.31
   Wang R. Y., 1996, Journal of Management Information Systems, V12, P5
   Wright C. P., 2015, THESIS
   Wright CJ, 2014, INT CONF QUAL SOFTW, P57, DOI 10.1109/QSIC.2014.26
   Wright CJ, 2013, IEEE ICST WORKSHOP, P63, DOI 10.1109/ICSTW.2013.15
   Yao XJ, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P919, DOI 10.1145/2568225.2568265
   Yu-Seung Ma, 2006, 28th International Conference on Software Engineering Proceedings, P827
   Zhang L., 2013, P 2013 INT S SOFTW T, P235
   Zhou CX, 2011, SOFTW TEST VERIF REL, V21, P241, DOI 10.1002/stvr.462
NR 81
TC 10
Z9 11
U1 0
U2 9
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAY
PY 2019
VL 45
IS 5
BP 427
EP 463
DI 10.1109/TSE.2017.2786286
PG 37
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA HY6HC
UT WOS:000468230000001
OA Green Accepted, hybrid
DA 2024-07-18
ER

PT J
AU Lutellier, T
   Chollak, D
   Garcia, J
   Tan, L
   Rayside, D
   Medvidovic, N
   Kroeger, R
AF Lutellier, Thibaud
   Chollak, Devin
   Garcia, Joshua
   Tan, Lin
   Rayside, Derek
   Medvidovic, Nenad
   Kroeger, Robert
TI Measuring the Impact of Code Dependencies on Software Architecture
   Recovery Techniques
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Software architecture; empirical software engineering; maintenance and
   evolution; program comprehension
ID CLUSTERING ALGORITHMS; SYSTEM; INFORMATION
AB Many techniques have been proposed to automatically recover software architectures from software implementations. A thorough comparison among the recovery techniques is needed to understand their effectiveness and applicability. This study improves on previous studies in two ways. First, we study the impact of leveraging accurate symbol dependencies on the accuracy of architecture recovery techniques. In addition, we evaluate other factors of the input dependencies such as the level of granularity and the dynamic-bindings graph construction. Second, we recovered the architecture of a large system, Chromium, that was not available previously. Obtaining the ground-truth architecture of Chromium involved two years of collaboration with its developers. As part of this work, we developed a new submodule-based technique to recover preliminary versions of ground-truth architectures. The results of our evaluation of nine architecture recovery techniques and their variants suggest that (1) using accurate symbol dependencies has a major influence on recovery quality, and (2) more accurate recovery techniques are needed. Our results show that some of the studied architecture recovery techniques scale to very large systems, whereas others do not.
C1 [Lutellier, Thibaud; Chollak, Devin] Univ Waterloo, Waterloo, ON N2L 3G1, Canada.
   [Tan, Lin] Univ Waterloo, Dept Elect & Comp Engn, Waterloo, ON N2L 3G1, Canada.
   [Rayside, Derek] Univ Waterloo, Elect & Comp Engn Dept, Waterloo, ON N2L 3G1, Canada.
   [Garcia, Joshua] Univ Calif Irvine, Inst Software Res, Irvine, CA 92697 USA.
   [Medvidovic, Nenad] Univ Southern Calif, Comp Sci Dept, Los Angeles, CA 90007 USA.
   [Medvidovic, Nenad] Univ Southern Calif, Informat Program, Los Angeles, CA 90007 USA.
   [Kroeger, Robert] Google Inc, Mountain View, CA 94043 USA.
C3 University of Waterloo; University of Waterloo; University of Waterloo;
   University of California System; University of California Irvine;
   University of Southern California; University of Southern California;
   Google Incorporated
RP Lutellier, T (corresponding author), Univ Waterloo, Waterloo, ON N2L 3G1, Canada.
EM tlutelli@uwaterloo.ca; dchollak@uwaterloo.ca; joshug4@uci.edu;
   lintan@uwaterloo.ca; drayside@uwaterloo.ca; neno@usc.edu;
   rjkroege@google.com
RI Lutellier, Thibaud/AAM-1838-2020; Garcia, Joshua/AAO-4575-2021
OI Lutellier, Thibaud/0000-0002-1823-0061; Garcia,
   Joshua/0000-0002-1696-8783; Tan, Lin/0000-0002-6690-8332
FU Natural Sciences and Engineering Research Council of Canada; Google
   Faculty Research Award; Ontario Ministry of Research and Innovation;
   U.S. National Science Foundation [1117593, 1218115, 1321141]; Infosys
   Technologies, Ltd.; Direct For Computer & Info Scie & Enginr; Division
   of Computing and Communication Foundations [1321141] Funding Source:
   National Science Foundation; Division of Computing and Communication
   Foundations; Direct For Computer & Info Scie & Enginr [1117593, 1218115]
   Funding Source: National Science Foundation
FX We thank Eric Dashofy for his assistance with updating the ground-truth
   architecture for ArchStudio 4. We thank Tamara Munzner for the help with
   graph visualization. This work has been supported by the Natural
   Sciences and Engineering Research Council of Canada, a Google Faculty
   Research Award, Ontario Ministry of Research and Innovation, the U.S.
   National Science Foundation under award numbers 1117593, 1218115, and
   1321141, and Infosys Technologies, Ltd. Availability: The ground-truth
   architectures are available at http://asset.uwaterloo.ca/ArchRecovery.
CR Andritsos P, 2005, IEEE T SOFTWARE ENG, V31, P150, DOI 10.1109/TSE.2005.25
   Andritsos P., 2004, Advanced Database Technology - EDBT 2004, P531
   [Anonymous], 2013, (Master thesis).
   Anquetil N., 2003, IEE Proceedings-Software, V150, P185, DOI 10.1049/ip-sen:20030581
   Arzoky M., 2011, 2011 IEEE Fourth International Conference on Software Testing, Verification and Validation Workshops (ICSTW), P422, DOI 10.1109/ICSTW.2011.87
   Bacon DF, 1996, ACM SIGPLAN NOTICES, V31, P324, DOI 10.1145/236338.236371
   Beyer D., 2006, 28th International Conference on Software Engineering Proceedings, P807, DOI 10.1145/1134285.1134420
   Blei DM, 2003, J MACH LEARN RES, V3, P993, DOI 10.1162/jmlr.2003.3.4-5.993
   Bowman I. T., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P555, DOI 10.1109/ICSE.1999.841045
   Brahler S., 2010, ANAL ANDROID ARCHITE, V7
   Brown A, 2011, The Architecture of Open Source Applications: Elegance, Evolution, and a Few Fearless Hacks
   Butler JohnC., 2010, UNIVERSAL PRINCIPLES
   Chedgey C., STRUCTURE
   Corazza A, 2011, EUR CON SFTWR MTNCE, P35, DOI 10.1109/CSMR.2011.8
   Dean J, 1995, LECT NOTES COMPUT SC, V952, P77, DOI 10.1007/3-540-49538-x_5
   Ding L, 2001, WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE, PROCEEDINGS, P191, DOI 10.1109/WICSA.2001.948429
   Favre JM, 2004, 11TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P204, DOI 10.1109/WCRE.2004.15
   Favre JM, 2001, FIFTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P95, DOI 10.1109/CSMR.2001.914973
   Finnigan PJ, 1997, IBM SYST J, V36, P564, DOI 10.1147/sj.364.0564
   Fiutem R, 1996, INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE, PROCEEDINGS, P319, DOI 10.1109/ICSM.1996.565035
   Fiutem R, 1999, J SOFTW MAINT-RES PR, V11, P339, DOI 10.1002/(SICI)1096-908X(199909/10)11:5<339::AID-SMR196>3.0.CO;2-I
   FLOYD RW, 1962, COMMUN ACM, V5, P345, DOI 10.1145/367766.368168
   Gansner ER, 2000, SOFTWARE PRACT EXPER, V30, P1203, DOI 10.1002/1097-024X(200009)30:11<1203::AID-SPE338>3.0.CO;2-N
   Garcia J., 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P552, DOI 10.1109/ASE.2011.6100123
   Garcia J., 2014, USCCSSE2014509
   Garcia J, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P901, DOI 10.1109/ICSE.2013.6606639
   Garcia J, 2013, IEEE INT CONF AUTOM, P486, DOI 10.1109/ASE.2013.6693106
   Grosskurth A., 2006, ARCHITECTURE E UNPUB
   Hassan A. E., 2005, P 12 WORK C REV ENG
   Kazman R., 1999, Automated Software Engineering, V6, P107, DOI 10.1023/A:1008781513258
   Kienle HM, 2010, SCI COMPUT PROGRAM, V75, P247, DOI 10.1016/j.scico.2009.10.007
   Kirsch M., 2011, TI1000618 NASA EN SA
   Kobayashi K, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P462, DOI 10.1109/ICSM.2012.6405308
   Koch J., 2011, SOFTW ENG INT J, P60
   Konôpka M, 2015, LECT NOTES COMPUT SC, V8939, P449, DOI 10.1007/978-3-662-46078-8_37
   Koopman P., 2014, 9 TSP S PITTSB PA US, P3
   Laine PK, 2001, WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE, PROCEEDINGS, P14, DOI 10.1109/WICSA.2001.948400
   Le DM, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P235, DOI 10.1109/MSR.2015.29
   Lutellier T, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P69, DOI 10.1109/ICSE.2015.136
   Mamaghani Ali Safari, 2009, Proceedings of the 2009 Ninth IEEE International Conference on Computer and Information Technology. CIT 2009, P20, DOI 10.1109/CIT.2009.111
   Mancoridis S., 1999, Proceedings IEEE International Conference on Software Maintenance - 1999 (ICSM'99). `Software Maintenance for Business Change' (Cat. No.99CB36360), P50, DOI 10.1109/ICSM.1999.792498
   Mancoridis S, 1998, PROG COMPREHEN, P45, DOI 10.1109/WPC.1998.693283
   Maqbool O, 2004, CSMR 2004: EIGHTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P15, DOI 10.1109/CSMR.2004.1281402
   Maqbool O, 2007, IEEE T SOFTWARE ENG, V33, P759, DOI 10.1109/TSE.2007.70732
   MEDVIDOVIC N, 1996, JOINT P 2 INT SOFTW, P24, DOI [10.1145/243327.243340, DOI 10.1145/243327.243340]
   Mitchell BS, 2006, IEEE T SOFTWARE ENG, V32, P193, DOI 10.1109/TSE.2006.31
   Mitchell BS, 2003, PROC IEEE INT CONF S, P285, DOI 10.1109/ICSM.2003.1235432
   Muller H., 2001, P IEEE INT C SOFTW M
   MUNKRES J, 1957, J SOC IND APPL MATH, V5, P32, DOI 10.1137/0105003
   Murphy G. C., 1995, SIGSOFT Software Engineering Notes, V20, P18, DOI 10.1145/222132.222136
   O'Brien L., 2002, CMUSEI2002TR024 DTIC
   Oreizy P, 1998, PROC INT CONF SOFTW, P177, DOI 10.1109/ICSE.1998.671114
   Pedregosa F, 2011, J MACH LEARN RES, V12, P2825
   Rayside D, 2002, SCI COMPUT PROGRAM, V45, P245, DOI 10.1016/S0167-6423(02)00059-X
   Rayside D, 2000, PROG COMPREHEN, P191, DOI 10.1109/WPC.2000.852493
   Romano J, 2006, ANN M FLOR ASS I RES, P1
   Shtern M, 2004, 11TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P284, DOI 10.1109/WCRE.2004.6
   Shtern M, 2007, 14TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P249, DOI 10.1109/WCRE.2007.32
   Storey MAD, 1997, PROC INT CONF SOFTW, P606, DOI 10.1145/253228.253496
   Sundaresan Vijay, 2000, PRACTICAL VIRTUAL ME, V35
   Synytskyy N, 2005, PROG COMPREHEN, P176, DOI 10.1109/WPC.2005.11
   Teller S., 2013, DATA VISUALIZATION D
   Tonella P, 1996, PROCEEDINGS OF THE THIRD WORKING CONFERENCE ON REVERSE ENGINEERING, P198, DOI 10.1109/WCRE.1996.558904
   Tsuchitoi Y, 2011, IEEE SOFTWARE, V28, P93, DOI 10.1109/MS.2011.133
   Tzerpos V, 2000, SEVENTH WORKING CONFERENCE ON REVERSE ENGINEERING - PROCEEDINGS, P258
   Waldman F., 2006, 8 INT DES STRUCT MAT
   Wang P, 2013, 2013 4TH INTERNATIONAL WORKSHOP ON MANAGING TECHNICAL DEBT (MTD), P47, DOI 10.1109/MTD.2013.6608678
   Wen Z, 2004, PROG COMPREHEN, P194, DOI 10.1109/WPC.2004.1311061
   Wu JW, 2005, PROC IEEE INT CONF S, P525
   Xiao CC, 2005, NINTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P124
NR 70
TC 49
Z9 49
U1 0
U2 12
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD FEB
PY 2018
VL 44
IS 2
BP 159
EP 181
DI 10.1109/TSE.2017.2671865
PG 23
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA FW1ND
UT WOS:000425065000003
OA Bronze, Green Submitted
DA 2024-07-18
ER

PT J
AU Al Dallal, J
   Abdin, A
AF Al Dallal, Jehad
   Abdin, Anas
TI Empirical Evaluation of the Impact of Object-Oriented Code Refactoring
   on Quality Attributes: A Systematic Literature Review
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Review
DE quality attribute; quality measure; refactoring scenario; systematic
   literature review
ID SOFTWARE; OPPORTUNITIES; IDENTIFICATION; AGREEMENT; METRICS; MODEL
AB Software refactoring is a maintenance task that addresses code restructuring to improve its quality. Many studies have addressed the impact of different refactoring scenarios on software quality. This study presents a systematic literature review that aggregates, summarizes, and discusses the results of 76 relevant primary studies (PSs) concerning the impact of refactoring on several internal and external quality attributes. The included PSs were selected using inclusion and exclusion criteria applied to relevant articles published before the end of 2015. We analyzed the PSs based on a set of classification criteria, including software quality attributes and measures, refactoring scenarios, evaluation approaches, datasets, and impact results. We followed the vote-counting approach to determine the level of consistency among the PS reported results concerning the relationship between refactoring and software quality. The results indicated that different refactoring scenarios sometimes have opposite impacts on different quality attributes. Therefore, it is false that refactoring always improves all software quality aspects. The vote-counting study provided a clear view of the impacts of some individual refactoring scenarios on some internal quality attributes such as cohesion, coupling, complexity, inheritance, and size, but failed to identify their impacts on external and other internal quality attributes due to insufficient findings.
C1 [Al Dallal, Jehad; Abdin, Anas] Kuwait Univ, Dept Informat Sci, POB 5969, Safat 13060, Kuwait.
C3 Kuwait University
RP Al Dallal, J (corresponding author), Kuwait Univ, Dept Informat Sci, POB 5969, Safat 13060, Kuwait.
EM j.aldallal@ku.edu.kw; anasoabdin@yahoo.com
RI Al Dallal, Jehad/HTL-9247-2023
OI Al Dallal, Jehad/0000-0003-3679-4351
FU Kuwait University Research Grant [QI02/14]
FX The authors would like to acknowledge the support of this work by Kuwait
   University Research Grant QI02/14.
CR Abbes M, 2011, EUR CON SFTWR MTNCE, P181, DOI 10.1109/CSMR.2011.24
   Ah-Rim Han, 2014, 2014 21st Asia-Pacific Software Engineering Conference (APSEC), P430, DOI 10.1109/APSEC.2014.69
   Al Dallal Jehad, 2013, Journal of Software, V8, P327, DOI 10.4304/jsw.8.2.327-336
   Al Dallal J, 2015, INFORM SOFTWARE TECH, V58, P231, DOI 10.1016/j.infsof.2014.08.002
   Al Dallal J, 2012, INFORM SOFTWARE TECH, V54, P1125, DOI 10.1016/j.infsof.2012.04.004
   Ali MS, 2010, INFORM SOFTWARE TECH, V52, P871, DOI 10.1016/j.infsof.2010.05.003
   Alshayeb M, 2011, ARAB J SCI ENG, V36, P1241, DOI 10.1007/s13369-011-0111-3
   Alshayeb M, 2009, PROCEEDINGS OF THE INTERNATIONAL CONFERENCE ON COMPUTING, ENGINEERING AND INFORMATION, P3, DOI 10.1109/ICC.2009.12
   Alshayeb M, 2009, INFORM SOFTWARE TECH, V51, P1319, DOI 10.1016/j.infsof.2009.04.002
   [Anonymous], 1997, Software metrics: A rigorous and practical approach
   [Anonymous], 2009, PROC INT C METHODS M
   Arboleda H, 2013, REV FAC ING-UNIV ANT, P104
   Bansiya J, 2002, IEEE T SOFTWARE ENG, V28, P4, DOI 10.1109/32.979986
   Barbosa Fernando Sergio, 2013, 2013 IEEE 12th International Conference on Intelligent Software Methodologies, Tools and Techniques (SoMeT 2013), P37, DOI 10.1109/SoMeT.2013.6645656
   Bavota G., 2012, 2012 12th IEEE Working Conference on Source Code Analysis and Manipulation (SCAM 2012), P104, DOI 10.1109/SCAM.2012.20
   Bavota G, 2014, EMPIR SOFTW ENG, V19, P1617, DOI 10.1007/s10664-013-9256-x
   Bavota G, 2014, IEEE T SOFTWARE ENG, V40, P671, DOI 10.1109/TSE.2013.60
   Bavota G, 2014, 2014 SOFTWARE EVOLUTION WEEK - IEEE CONFERENCE ON SOFTWARE MAINTENANCE, REENGINEERING, AND REVERSE ENGINEERING (CSMR-WCRE), P214, DOI 10.1109/CSMR-WCRE.2014.6747173
   Bavota G, 2014, ACM T SOFTW ENG METH, V23, DOI 10.1145/2559935
   Bavota G, 2011, J SYST SOFTWARE, V84, P397, DOI 10.1016/j.jss.2010.11.918
   Boshnakoska D, 2011, COMM COM INF SC, V83, P226
   Bourquin F, 2007, CSMR 2007: 11TH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P149
   Brereton P, 2007, J SYST SOFTWARE, V80, P571, DOI 10.1016/j.jss.2006.07.009
   Canfora G, 2014, EMPIR SOFTW ENG, V19, P1, DOI 10.1007/s10664-012-9214-z
   Charters S., 2007, GUIDELINES PERFORMIN
   Christopoulou A, 2012, INFORM SOFTWARE TECH, V54, P1202, DOI 10.1016/j.infsof.2012.05.004
   Ciolkowski M, 2007, LECT NOTES COMPUT SC, V4336, P20
   COHEN J, 1960, EDUC PSYCHOL MEAS, V20, P37, DOI 10.1177/001316446002000104
   Dibble II., 2014, Journal of Computing Sciences in Colleges, V30, P41
   Neto BFD, 2015, EXPERT SYST APPL, V42, P1652, DOI 10.1016/j.eswa.2014.09.022
   Du Bois B, 2004, 11TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P144, DOI 10.1109/WCRE.2004.33
   Du Bois B., 2003, InInternational Workshop on Evolution of Large-scale Industrial Software Applications, P37
   Elish KO, 2011, ARAB J SCI ENG, V36, P1253, DOI 10.1007/s13369-011-0117-x
   Ferber M, 2012, LECT NOTES COMPUT SC, V7054, P202
   Fokaefs M, 2012, J SYST SOFTWARE, V85, P2241, DOI 10.1016/j.jss.2012.04.013
   Fontana F. A., 2012, Proceedings 2012 Third International Workshop on Managing Technical Debt (MTD 2012), P15, DOI 10.1109/MTD.2012.6225993
   Fontana F. A., 2013, INT SCHOLARLY RES NO, P1, DOI DOI 10.1155/2013/129437
   Fontana F.A., 2011, Proceedings of the 4th Workshop on Refactoring Tools, P37, DOI DOI 10.1145/1984732.1984741
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   Gaitani MAG, 2015, INFORM SOFTWARE TECH, V59, P33, DOI 10.1016/j.infsof.2014.10.010
   Gatrell M, 2015, SCI COMPUT PROGRAM, V102, P44, DOI 10.1016/j.scico.2014.12.002
   Geppert B., 2005, P 11 IEEE INT SOFTW, P10
   Gerlec C., 2010, WORLD ACAD SCI ENG T, V63, P76
   Ghaith Shadi, 2012, Search Based Software Engineering. Proceedings of the 4th International Symposium (SSBSE 2012), P121, DOI 10.1007/978-3-642-33119-0_10
   Griffith I., 2011, Proc. Int. Work. Mach. Learn. Technol. Softw. Eng, P35
   Han AR, 2015, INFORM SOFTWARE TECH, V59, P53, DOI 10.1016/j.infsof.2014.10.007
   Higo Y, 2008, ASWEC 2008: 19TH AUSTRALIAN SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P219, DOI 10.1109/ASWEC.2008.23
   Jabangwe R, 2015, EMPIR SOFTW ENG, V20, P640, DOI 10.1007/s10664-013-9291-7
   Jiau HC, 2013, IEEE T SOFTWARE ENG, V39, P1245, DOI 10.1109/TSE.2013.19
   Jong-Ho Lee, 2001, ISIE 2001. 2001 IEEE International Symposium on Industrial Electronics Proceedings (Cat. No.01TH8570), P221, DOI 10.1109/ISIE.2001.931786
   Joshi P., 2006, P C SOFTW MAINT REEN, P145
   Joshi P, 2009, EUR CON SFTWR MTNCE, P237, DOI 10.1109/CSMR.2009.54
   Kallen M, 2014, IEEE INT WORK C SO, P125, DOI 10.1109/SCAM.2014.21
   Kannangara SH, 2013, INT CONF ADV ICT, P60, DOI 10.1109/ICTer.2013.6761156
   Kataoka Y, 2002, PROC IEEE INT CONF S, P576, DOI 10.1109/ICSM.2002.1167822
   Kim M., 2011, ICSE 11, P151, DOI DOI 10.1145/1985793.1985815
   Kim M, 2014, IEEE T SOFTWARE ENG, V40, P633, DOI 10.1109/TSE.2014.2318734
   LANDIS JR, 1977, BIOMETRICS, V33, P159, DOI 10.2307/2529310
   Lee S, 2011, SOFTWARE PRACT EXPER, V41, P521, DOI 10.1002/spe.1031
   Leitch R, 2003, NINTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM, PROCEEDINGS, P309, DOI 10.1109/METRIC.2003.1232477
   Liu H, 2008, IET SOFTW, V2, P446, DOI 10.1049/iet-sen:20070033
   Liu W, 2014, J CENT SOUTH UNIV, V21, P1935, DOI 10.1007/s11771-014-2140-z
   Mantyla M., 2005, P INT S EMP SOFTW EN, P287, DOI DOI 10.1109/ISESE.2005.1541837
   Mealy E, 2006, 2006 AUSTRALIAN SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P331
   Mens T, 2003, SIXTH INTERNATIONAL WORKSHOP ON PRINCIPLES OF SOFTWARE EVOLUTION, PROCEEDINGS, P39, DOI 10.1109/IWPSE.2003.1231207
   Miller J, 2000, J SYST SOFTWARE, V54, P29, DOI 10.1016/S0164-1212(00)00024-8
   Misbhauddin M, 2015, EMPIR SOFTW ENG, V20, P206, DOI 10.1007/s10664-013-9283-7
   Mohagheghi P., 2006, P 5 ACMIEEE INT S EM, P24
   Morasca S, 2009, INT SYMP EMP SOFTWAR, P44, DOI 10.1109/ESEM.2009.5316048
   Moser R, 2008, LECT NOTES COMPUT SC, V5082, P252
   Moser R, 2006, LECT NOTES COMPUT SC, V4039, P287
   Murgia A., 2011, 2011 18th Working Conference on Reverse Engineering, P372, DOI 10.1109/WCRE.2011.52
   Murphy-Hill E, 2012, IEEE T SOFTWARE ENG, V38, P5, DOI 10.1109/TSE.2011.41
   Nongpong K, 2015, INT CONF KNOWL SMART, P7, DOI 10.1109/KST.2015.7051460
   O'Keeffe M, 2008, J SYST SOFTWARE, V81, P502, DOI 10.1016/j.jss.2007.06.003
   O'Keeffe M, 2006, 10TH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P247
   O'Keeffe M, 2007, FRONT ARTIF INTEL AP, V161, P315
   Pappalardo G, 2013, ASIA PAC SOFWR ENG, P105, DOI 10.1109/APSEC.2013.123
   Perez-Castillo R, 2014, IEEE SOFTWARE, V31, P48, DOI 10.1109/MS.2014.23
   Pickard LM, 1998, INFORM SOFTWARE TECH, V40, P811, DOI 10.1016/S0950-5849(98)00101-3
   Radjenovic D, 2013, INFORM SOFTWARE TECH, V55, P1397, DOI 10.1016/j.infsof.2013.02.009
   Rao AA., 2011, INT J COMPUT SCI ISS, V8, P185
   Ratzinger J., 2008, Proceedings of the 2008 international working conference on Mining software repositories, P35, DOI [10.1145/1370750.1370759, DOI 10.1145/1370750.1370759]
   Seng O, 2006, GECCO 2006: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOL 1 AND 2, P1909
   Shatnawi R., 2011, Internat. J. Software Eng. Applicat., P127
   Shrivastava S., 2008, 2008 IEEE REGION 10, P1
   Stroggylos K., 2007, P 5 INT WORKSH SOFTW, P10, DOI [10.1109/WOSQ.2007.11, DOI 10.1109/WOSQ.2007.11]
   Szoke G, 2015, PROC IEEE INT CONF S, P429, DOI 10.1109/ICSM.2015.7332494
   Szoke G, 2014, IEEE INT WORK C SO, P95, DOI 10.1109/SCAM.2014.18
   Tahvildari L, 2004, J SOFTW MAINT EVOL-R, V16, P331, DOI 10.1002/smr.299
   Tsantalis N, 2011, J SYST SOFTWARE, V84, P1757, DOI 10.1016/j.jss.2011.05.016
   Tsantalis N, 2009, IEEE T SOFTWARE ENG, V35, P347, DOI 10.1109/TSE.2009.1
   Veerappa Varsha, 2013, 2013 ACM / IEEE International Symposium on Empirical Software Engineering and Measurement (ESEM), P271, DOI 10.1109/ESEM.2013.37
   Wangberg R. D., 2010, THESIS
   Yang LM, 2009, ASIA PAC SOFWR ENG, P43, DOI 10.1109/APSEC.2009.20
   Zanetti M.S., 2014, P 13 INT C MOD MODUL, P73
   Zhang M, 2011, J SOFTW MAINT EVOL-R, V23, P179, DOI 10.1002/smr.521
   Zibran MF, 2013, IET SOFTW, V7, P167, DOI 10.1049/iet-sen.2012.0058
NR 98
TC 42
Z9 43
U1 2
U2 17
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JAN
PY 2018
VL 44
IS 1
BP 44
EP 69
DI 10.1109/TSE.2017.2658573
PG 26
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA FS8VW
UT WOS:000422693800005
DA 2024-07-18
ER

PT J
AU Xuan, JF
   Martinez, M
   DeMarco, F
   Clément, M
   Marcote, SL
   Durieux, T
   Le Berre, D
   Monperrus, M
AF Xuan, Jifeng
   Martinez, Matias
   DeMarco, Favio
   Clement, Maxime
   Lamelas Marcote, Sebastian
   Durieux, Thomas
   Le Berre, Daniel
   Monperrus, Martin
TI Nopol: Automatic Repair of Conditional Statement Bugs in Java Programs
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Automatic repair; patch generation; SMT; fault localization
AB We propose NOPOL, an approach to automatic repair of buggy conditional statements (i.e., if-then-else statements). This approach takes a buggy program as well as a test suite as input and generates a patch with a conditional expression as output. The test suite is required to contain passing test cases to model the expected behavior of the program and at least one failing test case that reveals the bug to be repaired. The process of NOPOL consists of three major phases. First, NOPOL employs angelic fix localization to identify expected values of a condition during the test execution. Second, runtime trace collection is used to collect variables and their actual values, including primitive data types and objected-oriented features (e.g., nullness checks), to serve as building blocks for patch generation. Third, NOPOL encodes these collected data into an instance of a Satisfiability Modulo Theory (SMT) problem; then a feasible solution to the SMT instance is translated back into a code patch. We evaluate NOPOL on 22 real-world bugs (16 bugs with buggy IF conditions and six bugs with missing preconditions) on two large open-source projects, namely Apache Commons Math and Apache Commons Lang. Empirical analysis on these bugs shows that our approach can effectively fix bugs with buggy IF conditions and missing preconditions. We illustrate the capabilities and limitations of NOPOL using case studies of real bug fixes.
C1 [Xuan, Jifeng] Wuhan Univ, Sch Comp, State Key Lab Software Engn, Wuhan 430072, Peoples R China.
   [Martinez, Matias] Univ Lugano, Fac Informat, Lugano, Switzerland.
   [DeMarco, Favio; Lamelas Marcote, Sebastian] Univ Buenos Aires, RA-1198 Buenos Aires, DF, Argentina.
   [Clement, Maxime; Durieux, Thomas] Univ Lille, Dept Comp Sci, Lille, France.
   [Le Berre, Daniel] Univ Artois, Comp Sci, Lens, France.
   [Le Berre, Daniel] CNRS, Lens, France.
   [Monperrus, Martin] Univ Lille, Lille, France.
   [Monperrus, Martin] INRIA, Lille, France.
C3 Wuhan University; Universita della Svizzera Italiana; University of
   Buenos Aires; Universite de Lille; Universite d'Artois; Centre National
   de la Recherche Scientifique (CNRS); Universite de Lille; Inria
RP Xuan, JF (corresponding author), Wuhan Univ, Sch Comp, State Key Lab Software Engn, Wuhan 430072, Peoples R China.
EM jxuan@whu.edu.cn; matias.sebastian.martinez@usi.ch; faviod@gmail.com;
   maxime.clement@etudiant.univ-lille1.fr; srlm@gmx.com;
   thomas.durieux@inria.fr; leberre@cril.fr;
   martin.monperrus@univ-lille1.fr
RI Martinez, Matias/ABA-8871-2021; Monperrus, Martin/I-3640-2012; Xuan,
   Jifeng/F-2177-2016; Durieux, Thomas/AAM-9269-2020
OI Martinez, Matias/0000-0002-2945-866X; Monperrus,
   Martin/0000-0003-3505-3383; Xuan, Jifeng/0000-0002-2968-3496; Durieux,
   Thomas/0000-0002-1996-6134; Le Berre, Daniel/0000-0003-3221-9923
FU INRIA Internship program; INRIA postdoctoral research fellowship; CNRS
   delegation program; National Natural Science Foundation of China
   [61502345]; Young Talent Development Program of the China Computer
   Federation
FX The authors would like to thank David Cok for giving us full access to
   jSMTLIB. This work is partly supported by the INRIA Internship program,
   the INRIA postdoctoral research fellowship, the CNRS delegation program,
   the National Natural Science Foundation of China (under grant 61502345),
   and the Young Talent Development Program of the China Computer
   Federation. F. DeMarco, M. Clement, S. Lamelas Marcote, and T. Durieux
   have contributed to this work during their internship at INRIA
   Lille-Nord Europe.
CR Abreu R, 2007, TAIC PART 2007 - TESTING: ACADEMIC AND INDUSTRIAL CONFERENCE - PRACTICE AND RESEARCH TECHNIQUES, PROCEEDINGS, P89, DOI 10.1109/TAIC.PART.2007.13
   [Anonymous], 2013, P 2013 INT S SOFTW T, DOI DOI 10.1145/2483760.2483767
   [Anonymous], P 37 INT C SOFTW ENG
   [Anonymous], 2008, ISSTA
   Barr ET, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P306, DOI 10.1145/2635868.2635898
   Campos J, 2012, IEEE INT CONF AUTOM, P378, DOI 10.1145/2351676.2351752
   Carzaniga A., 2010, Proceedings of the eighteenth ACM SIGSOFT international symposium on Foundations of software engineering, P237
   Carzaniga A, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P782, DOI 10.1109/ICSE.2013.6606624
   Chandra S, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P121, DOI 10.1145/1985793.1985811
   Cok DR, 2011, LECT NOTES COMPUT SC, V6617, P480, DOI 10.1007/978-3-642-20398-5_36
   Dallmeier V, 2009, IEEE INT CONF AUTOM, P550, DOI 10.1109/ASE.2009.15
   de Moura L, 2008, LECT NOTES COMPUT SC, V4963, P337, DOI 10.1007/978-3-540-78800-3_24
   Debroy Vidroha, 2010, Proceedings of the Third IEEE International Conference on Software Testing, Verification and Validation (ICST 2010), P65, DOI 10.1109/ICST.2010.66
   DeMarco F, 2014, P 6 INT WORKSHOP CON, P30, DOI 10.1145/2593735.2593740
   Falleri Jean-Remy, 2014, P 29 ACM IEEE INT C, P313
   Fry Z.P., 2012, INT S SOFTWARE TESTI, P177, DOI 10.1145/04000800.2336775
   Gulwani S, 2011, PLDI 11: PROCEEDINGS OF THE 2011 ACM CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P62
   Nguyen HDT, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P772, DOI 10.1109/ICSE.2013.6606623
   Jha S., 2010, P 32 ACM IEEE INT C, V1, P215, DOI DOI 10.1145/1806799.1806833
   Jobstmann B, 2005, LECT NOTES COMPUT SC, V3576, P226
   Jones JA, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P467, DOI 10.1109/ICSE.2002.1007991
   Just R, 2014, P 2014 INT S SOFTW T, P437, DOI DOI 10.1145/2610384.2628055
   Ke YL, 2015, IEEE INT CONF AUTOM, P295, DOI 10.1109/ASE.2015.60
   Kim D, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P802, DOI 10.1109/ICSE.2013.6606626
   Le Goues C., 2012, IEEE Transactions on Software Engineering, V38, P54, DOI 10.1109/TSE.2011.104
   Le Goues C, 2015, IEEE T SOFTWARE ENG, V41, P1236, DOI 10.1109/TSE.2015.2454513
   Le Goues C, 2012, PROC INT CONF SOFTW, P3, DOI 10.1109/ICSE.2012.6227211
   Li YQ, 2014, ACM T SOFTW ENG METH, V23, DOI 10.1145/2652484
   Long F, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P166, DOI 10.1145/2786805.2786811
   Marcote S. Lamelas, 2015, CORR
   Martinez M., 2015, CORR
   Martinez M, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE COMPANION 2014), P492, DOI 10.1145/2591062.2591114
   Martínez M, 2015, EMPIR SOFTW ENG, V20, P176, DOI 10.1007/s10664-013-9282-8
   McCabe T. J., 1976, IEEE Transactions on Software Engineering, VSE-2, P308, DOI 10.1109/TSE.1976.233837
   Mechtaev S., P 37 INT C SOFTW ENG, V201, P448
   Monperrus M, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P234, DOI 10.1145/2568225.2568324
   Naish L, 2011, ACM T SOFTW ENG METH, V20, DOI 10.1145/2000791.2000795
   Pan K, 2009, EMPIR SOFTW ENG, V14, P286, DOI 10.1007/s10664-008-9077-5
   Pawlak R., 2015, SOFTW PRACTICE EXP
   Pei Y, 2014, IEEE T SOFTWARE ENG, V40, P427, DOI 10.1109/TSE.2014.2312918
   Perkins JH, 2009, SOSP'09: PROCEEDINGS OF THE TWENTY-SECOND ACM SIGOPS SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES, P87
   Qi YH, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P254, DOI 10.1145/2568225.2568254
   Qi YH, 2013, PROC IEEE INT CONF S, P180, DOI 10.1109/ICSM.2013.29
   Qi Zichao, 2015, P 2015 INT S SOFTW T, P24, DOI DOI 10.1145/2771783.2771791
   Smith EK, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P532, DOI 10.1145/2786805.2786825
   Tao YD, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P64, DOI 10.1145/2635868.2635873
   Weimer W, 2013, IEEE INT CONF AUTOM, P356, DOI 10.1109/ASE.2013.6693094
   Xiangyu Zhang, 2006, 28th International Conference on Software Engineering Proceedings, P272, DOI 10.1145/1134285.1134324
   Xu J, 2013, INFORM SOFTWARE TECH, V55, P880, DOI 10.1016/j.infsof.2012.08.006
   Xuan JF, 2016, INFORM SOFTWARE TECH, V76, P65, DOI 10.1016/j.infsof.2016.04.016
   Xuan JF, 2014, PROC IEEE INT CONF S, P191, DOI 10.1109/ICSME.2014.41
   Xuan JF, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P52, DOI 10.1145/2635868.2635906
   Yoo S, 2013, ACM T SOFTW ENG METH, V22, DOI 10.1145/2491509.2491513
NR 53
TC 224
Z9 256
U1 0
U2 36
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JAN
PY 2017
VL 43
IS 1
BP 34
EP 55
DI 10.1109/TSE.2016.2560811
PG 22
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA EK2TT
UT WOS:000393780300003
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Degano, P
   Ferrari, GL
   Galletta, L
AF Degano, Pierpaolo
   Ferrari, Gian-Luigi
   Galletta, Letterio
TI A Two-Component Language for Adaptation: Design, Semantics and Program
   Analysis
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Adaptive software; context oriented programming; formal methods;
   datalog; functional programming; semantics; type systems; verification
ID CONTEXT; LOGIC; SOFTWARE; DATALOG; SYSTEM; JAVA
AB Adaptive systems are designed to modify their behaviour in response to changes of their operational environment. We propose a two-component language for adaptive programming, within the Context-Oriented Programming paradigm. It has a declarative constituent for programming the context and a functional one for computing. We equip our language with a dynamic formal semantics. Since wrong adaptation could severely compromise the correct behaviour of applications and violate their properties, we also introduce a two-phase verification mechanism. It is based on a type and effect system that type-checks programs and computes, as an effect, a sound approximation of their behaviour. The effect is exploited at load time to mechanically verify that programs correctly adapt themselves to all possible running environments.
C1 [Degano, Pierpaolo; Ferrari, Gian-Luigi; Galletta, Letterio] Univ Pisa, Dipartimento Informat, I-56126 Pisa, Italy.
C3 University of Pisa
RP Degano, P (corresponding author), Univ Pisa, Dipartimento Informat, I-56126 Pisa, Italy.
EM degano@di.unipi.it; giangi@di.unipi.it; galletta@di.unipi.it
OI FERRARI, GIAN-LUIGI/0000-0003-3548-5514; GALLETTA,
   LETTERIO/0000-0003-0351-9169
FU MIUR Prin Project Security Horizons; Universita di Pisa PRA project
   Through the Fog
FX The authors are deeply indebted with the anonymous reviewers for their
   invaluable comments and suggestions that greatly helped us to improve
   the presentation of our work. The work is partially supported by the
   MIUR Prin Project Security Horizons and by the Universita di Pisa PRA
   project Through the Fog.
CR Alvaro P, 2011, LECT NOTES COMPUT SC, V6702, P262
   [Anonymous], 2005, 35 EISB C SUST ENTR, DOI [10.1007/978-1-4020-2686-7, DOI 10.1145/1101480.1101483]
   Antoy S, 2010, COMMUN ACM, V53, P74, DOI 10.1145/1721654.1721675
   Aotani T., 2014, P 6 INT WORKSH CONT
   Aotani T., 2011, P 3 INT WORKSH CONT
   Appeltauer M., 2009, P INT WORKSH CONT OR
   Appeltauer M, 2013, J OBJECT TECHNOL, V12, DOI 10.5381/jot.2013.12.2.a4
   Atzori L, 2010, COMPUT NETW, V54, P2787, DOI 10.1016/j.comnet.2010.05.010
   Bainomugisha E., 2012, THESIS
   Barber D., 2012, Bayesian reasoning and machine learning
   Baresi L, 2006, COMPUTER, V39, P36, DOI 10.1109/MC.2006.362
   Bartoletti M, 2008, IEEE T SOFTWARE ENG, V34, P33, DOI 10.1109/TSE.2007.70740
   Bartoletti M, 2009, J COMPUT SECUR, V17, P799, DOI 10.3233/JCS-2009-0357
   Bartoletti M, 2009, J OBJECT TECHNOL, V8, P5, DOI 10.5381/jot.2009.8.4.a1
   Bartoletti M, 2009, ACM T PROGR LANG SYS, V31, DOI 10.1145/1552309.1552313
   Bellia M., 1982, APIC STUDIES DATA PR, V16, P281
   Bockisch Christoph., 2004, AOSD 04 P 3 INT C AS, P83
   Bodei C, 2014, LECT NOTES COMPUT SC, V8687, P61
   Bordini R.H., 2009, Multi-Agent Programming: Languages, Tools and Applications
   Bourdoncle F., 1993, Formal Methods in Programming and Their Applications International Conference Proceedings, P128, DOI 10.1007/BFb0039704
   Box D., 2002, MICROSOFT NET DEV SE
   Brown G., 2006, ACM 2006 International Workshop on Self-Adaptation and Self-Managing Systems (SEAMS 2006), P23
   Bruni R, 2012, LECT NOTES COMPUT SC, V7212, P240, DOI 10.1007/978-3-642-28872-2_17
   Buchi M., 1999, 297 TURK CTR COMP SC
   Calinescu R, 2012, COMMUN ACM, V55, P69, DOI 10.1145/2330667.2330686
   Campbell Russ., 2003, HERITAGE LANGUAGE J, V1, P91
   Canciani A., 2015, P FOCLASA IN PRESS
   Cardozo N., 2014, P 6 INT WORKSH CONT
   Cardozo N, 2015, INFORM SOFTWARE TECH, V58, P71, DOI 10.1016/j.infsof.2014.10.002
   Ceri S., 1989, IEEE Transactions on Knowledge and Data Engineering, V1, P146, DOI 10.1109/69.43410
   Chen H, 2003, KNOWL ENG REV, V18, P197, DOI 10.1017/S0269888904000025
   Clarke D., 2009, P INT WORKSH CONT OR
   Clarke D., 2009, P INT WORKSH CONT OR
   Costa G, 2012, J COMPUT SECUR, V20, P81, DOI 10.3233/JCS-2011-0430
   Costanza P., 2005, P DYN LANG S DLS 05, P1
   Cousot P., 1977, C RECORD 4 ANN ACM S, P238, DOI DOI 10.1145/512950.512973
   De Nicola R., 2013, P 10 INT S FORM METH, V7542, P25, DOI DOI 10.1007/978-3-642-35887-6_2
   Degano Pierpaolo, 2014, Software Engineering and Formal Methods. 12th International Conference, SEFM 2014. Proceedings: LNCS 8702, P347, DOI 10.1007/978-3-319-10431-7_28
   Degano Pierpaolo, 2012, Coordination Models and Languages. Proceedings 14th International Conference, COORDINATION 2012, P261, DOI 10.1007/978-3-642-30829-1_18
   Degano P., 2 STEP TYPE EF UNPUB
   Degano P, 2011, LECT NOTES COMPUT SC, V6873, P23, DOI 10.1007/978-3-642-23178-0_3
   Degano Pierpaolo, 2014, P 6 INT WORKSH CONT, DOI [10.1145/2637066.2637072, DOI 10.1145/2637066.2637072]
   Desmet B, 2007, LECT NOTES ARTIF INT, V4635, P178
   Garlan D, 2003, LECT NOTES COMPUT SC, V2677, P61
   González S, 2011, LECT NOTES COMPUT SC, V6563, P246, DOI 10.1007/978-3-642-19440-5_15
   Gu T., 2004, P CNDS, P270
   Heintze N., 1994, Proceedings of the 1994 ACM Conference on LISP and Functional Programming, P306, DOI 10.1145/182409.182495
   Hirschfeld R., 2011, Proceedings of the 10th International Workshop on Foundations of Aspect-Oriented Languages, FOAL'11, page, P19, DOI DOI 10.1145/1960510.1960515
   Hirschfeld R, 2008, J OBJECT TECHNOL, V7, P125, DOI 10.5381/jot.2008.7.3.a4
   Huebscher MC, 2008, ACM COMPUT SURV, V40, DOI 10.1145/1380584.1380585
   IBM, 2005, ARCH BLUEPR AUT COMP
   Igarashi A, 2001, ACM T PROGR LANG SYS, V23, P396, DOI 10.1145/503502.503505
   Igarashi A., 2012, FOOL 2012, P13
   Inoue Hiroaki, 2014, INT WORKSH CONT OR P, DOI [10.1145/2637066.2637073, DOI 10.1145/2637066.2637073]
   Kamina T., 2014, P 6 INT WORKSH CONT
   Kamina T., 2014, Proceedings of the 13th International Conference on Modularity, MODULARITY'14, page, P85
   Kamina Tetsuo, 2013, P 5 INT WORKSH CONT, DOI [10.1145/2489793.2489795, DOI 10.1145/2489793.2489795]
   Kamina Tetsuo, P 12 WORKSH FDN ASP, P7
   Kephart JO, 2003, COMPUTER, V36, P41, DOI 10.1109/MC.2003.1160055
   Khedker U., 2009, Data Flow Analysis: Theory and Practice, V1st
   Kiczales G., 2001, ECOOP 2001 - Object-Oriented Programming. 15th European Conference. Proceedings (Lecture Notes in Computer Science Vol.2072), P327
   Ligatti J, 2006, SCI COMPUT PROGRAM, V63, P240, DOI 10.1016/j.scico.2006.01.004
   Loke SW, 2004, KNOWL ENG REV, V19, P213, DOI 10.1017/s0269888905000263
   Lowis M., 2007, Proceedings of the 2007 International Conference on Dynamic Languages: In Conjunction with the 15th International Smalltalk Joint Conference, P143, DOI DOI 10.1145/1352678.1352688
   Magee J., 1996, Software Engineering Notes, V21, P3, DOI 10.1145/250707.239104
   Meijer E., 2003, P XML C EXP, P1
   Mezini M., 2003, P 2 INT C ASPECT ORI, P90
   MYCROFT A, 1984, ARTIF INTELL, V23, P295, DOI 10.1016/0004-3702(84)90017-1
   Necula G. C., 2014, MOBILE AGENTS SECURI, P61
   Nielson F., 2005, PRINCIPLES PROGRAM A
   Nielson HR, 2002, LECT NOTES COMPUT SC, V2566, P223
   Orsi G, 2011, LECT NOTES COMPUT SC, V6702, P225
   Papazoglou MP, 2003, COMMUN ACM, V46, P25, DOI 10.1145/944217.944233
   Peper C., 2008, ACM 2008 International Workshop on Software Engineering for Adaptive and Self-Managing Systems (SEAMS 2008), P49
   Pierce Benjamin C., 2002, TYPES PROGRAMMING LA, V1st
   Rajan H, 2009, LECT NOTES COMPUT SC, V5502, P333, DOI 10.1007/978-3-642-00590-9_24
   Rimal Bhaskar Prasad, 2009, Proceedings of the 2009 Fifth International Joint Conference on INC, IMS and IDC, P44, DOI 10.1109/NCM.2009.218
   Rose E, 2003, J AUTOM REASONING, V31, P303, DOI 10.1023/B:JARS.0000021015.15794.82
   Salehie M, 2009, ACM T AUTON ADAP SYS, V4, DOI 10.1145/1516533.1516538
   Salvaneschi G, 2013, ACM T AUTON ADAP SYS, V8, DOI 10.1145/2491465.2491466
   Salvaneschi Guido, 2011, CORR
   Shaner SM, 2007, OOPSLA: 22ND INTERNATIONAL CONFERENCE ON OBJECT-ORIENTED PROGRAMMING, SYSTEMS, LANGUAGES, AND APPLICATIONS, PROCEEDINGS, P351
   Skalka C, 2004, LECT NOTES COMPUT SC, V3302, P107
   Skalka C, 2008, J FUNCT PROGRAM, V18, P179, DOI 10.1017/S0956796807006466
   Spinczyk O., 2002, CR PIT 02 P 40 INT C, P53
   Tanter E., 2008, P S DYN LANG, DOI [10.1145/1408681.1408684, DOI 10.1145/1408681.1408684]
   Tanter Eric, 2008, 7 INT C ASP OR SOFTW, P168, DOI [10.1145/1353482.1353503, DOI 10.1145/1353482.1353503]
   Vallejos J, 2010, LECT NOTES COMPUT SC, V6144, P66, DOI 10.1007/978-3-642-14046-4_5
   van Wissen B., 2010, Proceedings of International Workshop on Sensing for App Phones (PhoneSense 2010), P1
   Walker D, 2003, ACM SIGPLAN NOTICES, V38, P127, DOI 10.1145/944746.944718
   Wand M, 2004, ACM T PROGR LANG SYS, V26, P890, DOI 10.1145/1018203.1018208
   Wang XH, 2004, SECOND IEEE ANNUAL CONFERENCE ON PERVASIVE COMPUTING AND COMMUNICATIONS WORKSHOPS, PROCEEDINGS, P18
   Wrona K., 2005, XXI Autumn Meeting of Polish Information Processing Society Conference Proceedings, P255
   Yan Mei Tang, 1995, Proceedings of the ACM SIGPLAN Symposium on Partial Evaluation and Semantics- Based Program Manipulation. PEPM'95, P45, DOI 10.1145/215465.215552
NR 94
TC 8
Z9 8
U1 0
U2 1
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUN
PY 2016
VL 42
IS 6
BP 505
EP 529
DI 10.1109/TSE.2015.2496941
PG 25
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA DR7BD
UT WOS:000380054100001
DA 2024-07-18
ER

PT J
AU Kazman, R
   Goldenson, D
   Monarch, I
   Nichols, W
   Valetto, G
AF Kazman, Rick
   Goldenson, Dennis
   Monarch, Ira
   Nichols, William
   Valetto, Giuseppe
TI Evaluating the Effects of Architectural Documentation: A Case Study of a
   Large Scale Open Source Project
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Software architecture; open source software; documentation
ID SOURCE SOFTWARE-DEVELOPMENT; COMMUNITIES; CENTRALITY; MODEL
AB Sustaining large open source development efforts requires recruiting new participants; however, a lack of architectural documentation might inhibit new participants since large amounts of project knowledge are unavailable to newcomers. We present the results of a multitrait, multimethod analysis of the effects of introducing architectural documentation into a substantial open source project-the Hadoop Distributed File System (HDFS). HDFS had only minimal architectural documentation, and we wanted to discover whether the putative benefits of architectural documentation could be observed over time. To do this, we created and publicized an architecture document and then monitored its usage and effects on the project. The results were somewhat ambiguous: by some measures the architecture documentation appeared to effect the project but not by others. Perhaps of equal importance is our discovery that the project maintained, in its web-accessible JIRA archive of software issues and fixes, enough architectural discussion to support architectural thinking and reasoning. This "emergent" architecture documentation served an important purpose in recording core project members' architectural concerns and resolutions. However, this emergent architecture documentation did not serve all project members equally well; it appears that those on the periphery of the project-newcomers and adopters-still require explicit architecture documentation, as we will show.
C1 [Kazman, Rick; Goldenson, Dennis; Nichols, William] Carnegie Mellon Univ, Inst Software Engn, Pittsburgh, PA 15213 USA.
   [Valetto, Giuseppe] Fdn Bruno Kessler, Distributed Adapt Syst Res Unit, Trento, Italy.
C3 Software Engineering Institute; Carnegie Mellon University; Fondazione
   Bruno Kessler
RP Kazman, R; Goldenson, D; Nichols, W (corresponding author), Carnegie Mellon Univ, Inst Software Engn, Pittsburgh, PA 15213 USA.
EM kazman@sei.cmu.edu; dg@sei.cmu.edu; iramonarch@gmail.com;
   wrn@sei.cmu.edu
OI Valetto, Giuseppe/0000-0001-7254-1963
FU Department of Defense [FA8721-05-C-0003]; Carnegie Mellon University
FX The authors thank Len Bass and Ipek Ozkaya, for their work in helping to
   document the HDFS architecture. They also thank Forrest Shull and Dave
   Zubrow for their insightful comments that helped to shape our arguments.
   This material is based upon work funded and supported by the Department
   of Defense under Contract No. FA8721-05-C-0003 with Carnegie Mellon
   University for the operation of the Software Engineering Institute, a
   federally funded research and development center. This material has been
   approved for public release and unlimited distribution. DM-0001095.
CR Alspaugh TA, 2013, S VIS LANG HUM CEN C, P165, DOI 10.1109/RE.2013.6636716
   [Anonymous], 0724 SIEPR
   Anthonisse J.M., 1971, THE RUSH IN A GRAPH
   Apache Hadoop, 2014, HDFS ARCH
   Atos Origin, 2006, METHOD FOR QUALIFICA
   Babar MA, 2009, SOFTWARE ARCHITECTURE KNOWLEDGE MANAGEMENT: THEORY AND PRACTICE, P69, DOI 10.1007/978-3-642-02374-3_5
   Baldwin C. Y., 2000, Design Rules: The Power of Modularity, V1
   Bass L., 2013, SOFTWARE ARCHITECTUR
   Bass L, 2011, IFIP ADV INF COMM TE, V365, P50
   Bernard Golden, 2008, MAKING OPEN SOURCE R
   Brown A., 2012, The Architecture of Open Source Applications
   Callon, 1986, MAPPING DYNAMICS SCI
   CAMBROSIO A, 1993, SCIENTOMETRICS, V27, P119, DOI 10.1007/BF02016546
   Cambrosio A, 2014, TECNOSCIENZA, V5, P11
   Campbell DT., 1963, EXPT QUASIEXPERIMENT
   Clements P., 2002, DOCUMENTING SOFTWARE
   Coulter N, 1998, J AM SOC INFORM SCI, V49, P1206, DOI 10.1002/(SICI)1097-4571(1998)49:13<1206::AID-ASI7>3.0.CO;2-F
   Creswell J. W., 2007, DESIGNING CONDUCTING
   Crowston K., 2006, Software Process Improvement and Practice, V11, P123, DOI 10.1002/spip.259
   Crowston K., 2005, First Monday, V10, DOI 10.5210/fm.v10i2.1207
   Crowston K, 2012, ACM COMPUT SURV, V44, DOI 10.1145/2089125.2089127
   Ding W, 2014, IEEE INT C ENG COMP, P136, DOI 10.1109/ICECCS.2014.26
   Ding W, 2014, INFORM SOFTWARE TECH, V56, P545, DOI 10.1016/j.infsof.2014.01.008
   Ehrlich Kate, 2012, Proceedings of the ACM 2012 Conference on Computer Supported Cooperative Work, CSCW '12, P945
   English R., 2007, FLOSS 07, P11, DOI DOI 10.1109/FLOSS.2007.9
   FREEMAN LC, 1977, SOCIOMETRY, V40, P35, DOI 10.2307/3033543
   Ghemawat S., 2003, ACM SIGOPS OPERATING, V37, P23
   Giuri P, 2008, INF ECON POLICY, V20, P305, DOI 10.1016/j.infoecopol.2008.06.002
   Guzzi A, 2013, IEEE WORK CONF MIN S, P277, DOI 10.1109/MSR.2013.6624039
   Halliday M.A.K., 1993, Writing Science: Literacy and Discursive Power
   Harris Z., 1989, FORM INFORM SCI ANAL
   He P, 2012, SECOND INTERNATIONAL CONFERENCE ON CLOUD AND GREEN COMPUTING / SECOND INTERNATIONAL CONFERENCE ON SOCIAL COMPUTING AND ITS APPLICATIONS (CGC/SCA 2012), P418, DOI 10.1109/CGC.2012.50
   Holt CC, 2004, INT J FORECASTING, V20, P5, DOI 10.1016/j.ijforecast.2004.09.015
   Hyndman RJ, 2008, J STAT SOFTW, V27, P1, DOI 10.18637/jss.v027.i03
   Kaplan Abraham., 1964, The conduct of inquiry: Methodology for behavioral science
   Kazman R., 1999, Automated Software Engineering, V6, P107, DOI 10.1023/A:1008781513258
   Kazman R, 2009, COMMUN ACM, V52, P76, DOI 10.1145/1538788.1538808
   KRUCHTEN PB, 1995, IEEE SOFTWARE, V12, P42, DOI 10.1109/52.469759
   Kuhn T. S., 1962, STRUCTURE SCI REVOLU
   Lave J., 1991, Situated Learning: Legitimate Peripheral Partic- ipation
   Lee SYT, 2009, OMEGA-INT J MANAGE S, V37, P426, DOI 10.1016/j.omega.2007.05.005
   Long Y, 2007, J DATABASE MANAGE, V18, P25, DOI 10.4018/jdm.2007040102
   MacCormack A, 2006, MANAGE SCI, V52, P1015, DOI 10.1287/mnsc.1060.0552
   Malavolta I, 2013, IEEE T SOFTWARE ENG, V39, P869, DOI 10.1109/TSE.2012.74
   MALONE TW, 1987, ACM T INFORM SYST, V5, P115, DOI 10.1145/27636.27637
   Mockus A, 2002, ACM T SOFTW ENG METH, V11, P309, DOI 10.1145/567793.567795
   Monarch I., 2008, CMUSEI2008TR018
   NAUR P, 1985, MICROPROC MICROPROG, V15, P253, DOI 10.1016/0165-6074(85)90032-8
   Osterlund C, 2013, P ANN HICSS, P1600, DOI 10.1109/HICSS.2013.119
   Pagano D, 2013, EMPIR SOFTW ENG, V18, P1090, DOI 10.1007/s10664-012-9211-2
   Petrinja E., 2012, ADV SOFTW ENG, V8
   Rost Dominik, 2013, Software Architecture. 7th European Conference, ECSA 2013. Proceedings: LNCS 7584, P72, DOI 10.1007/978-3-642-39031-9_7
   Runeson Per, 2012, Case study research in software engineering: Guidelines and examples
   Sack W., 2006, Computer Supported Cooperative Work: The Journal of Collaborative Computing, V15, P229, DOI 10.1007/s10606-006-9020-5
   Sadowski BM, 2008, INF ECON POLICY, V20, P323, DOI 10.1016/j.infoecopol.2008.05.001
   Scacchi W., 2002, IEE Proceedings-Software, V149, P24, DOI 10.1049/ip-sen:20020202
   Scacchi W, 2009, LECT NOTES BUS INF P, V14, P467
   Shvachko K., 2010, SYMPOSIUM, P1, DOI DOI 10.1109/MSST.2010.5496972
   Smith AE, 2006, BEHAV RES METHODS, V38, P262, DOI 10.3758/BF03192778
   STEPHENSON K, 1989, SOC NETWORKS, V11, P1, DOI 10.1016/0378-8733(89)90016-6
   Stol KJ, 2009, 2009 ICSE WORKSHOP ON EMERGING TRENDS IN FREE-LIBRE-OPEN SOURCE SOFTWARE RESEARCH AND DEVELOPMENT, P19, DOI 10.1109/FLOSS.2009.5071355
   Subramaniam C, 2009, DECIS SUPPORT SYST, V46, P576, DOI 10.1016/j.dss.2008.10.005
   Taibi D, 2007, INT FED INFO PROC, V234, P173
   Taylor Richard N., 2009, Software architecture: foundations, theory, and practice
   Unphon H, 2010, J SYST SOFTWARE, V83, P2211, DOI 10.1016/j.jss.2010.06.043
   van der Ven Jan Salvador, 2013, Software Architecture. 7th European Conference, ECSA 2013. Proceedings: LNCS 7584, P176, DOI 10.1007/978-3-642-39031-9_15
   Wang XF, 2014, IEEE SOFTWARE, V31, P72, DOI 10.1109/MS.2013.98
   Wasserman A., 2006, PROC EFOSS WORKSHOP, P8
   Wiggins A, 2010, IFIP ADV INF COMM TE, V319, P294
   Wolf T, 2009, IEEE SOFTWARE, V26, P58, DOI 10.1109/MS.2009.16
   Wong S, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P411, DOI 10.1145/1985793.1985850
   Xiao L, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P967, DOI 10.1145/2568225.2568241
   Yin R. K., 2008, CASE STUDY RES DESIG, DOI DOI 10.1097/FCH.0B013E31822DDA9E
   Zanetti MS, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P1032, DOI 10.1109/ICSE.2013.6606653
   Zanetti MS, 2012, PROC INT CONF SOFTW, P1587, DOI 10.1109/ICSE.2012.6227030
NR 75
TC 16
Z9 18
U1 0
U2 16
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAR
PY 2016
VL 42
IS 3
BP 222
EP 247
DI 10.1109/TSE.2015.2465387
PG 26
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science; Engineering
GA DH5MS
UT WOS:000372834200003
DA 2024-07-18
ER

PT J
AU Krall, J
   Menzies, T
   Davies, M
AF Krall, Joseph
   Menzies, Tim
   Davies, Misty
TI GALE: Geometric Active Learning for Search-Based Software Engineering
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Multi-objective optimization; search based software engineering; active
   learning
ID MULTIOBJECTIVE EVOLUTIONARY ALGORITHM; DIFFERENTIAL EVOLUTION;
   OPTIMIZATION; SYSTEMS; MOEA/D
AB Multi-objective evolutionary algorithms (MOEAs) help software engineers find novel solutions to complex problems. When automatic tools explore too many options, they are slow to use and hard to comprehend. GALE is a near-linear time MOEA that builds a piecewise approximation to the surface of best solutions along the Pareto frontier. For each piece, GALE mutates solutions towards the better end. In numerous case studies, GALE finds comparable solutions to standard methods (NSGA-II, SPEA2) using far fewer evaluations (e.g. 20 evaluations, not 1,000). GALE is recommended when a model is expensive to evaluate, or when some audience needs to browse and understand how an MOEA has made its conclusions.
C1 LoadIQ, Reno, NV 89501 USA.
   [Menzies, Tim] N Carolina State Univ, Comp Sci, Raleigh, NC 27695 USA.
   [Davies, Misty] NASA, Ames Res Ctr, Intelligent Syst Div, Los Angeles, CA USA.
C3 North Carolina State University; National Aeronautics & Space
   Administration (NASA); NASA Ames Research Center
RP Krall, J (corresponding author), LoadIQ, Reno, NV 89501 USA.
EM kralljoe@gmail.com; tim.menzies@gmail.com; misty.d.davies@nasa.gov
RI Menzies, Tim/X-7680-2019
OI Menzies, Tim/0000-0002-5040-3196; Davies, Misty/0000-0002-6245-9568
FU US National Science Foundation (NSF) [CCF:1017330]; Qatar/West Virginia
   University research grant [NPRP 09-12-5-2-470]; NASA Ames Research
   Center
FX The authors wish to thank the anonymous reviewers of this paper for
   their many excellent suggestions on how to improve this paper. The work
   was funded by the US National Science Foundation (NSF) grant CCF:1017330
   and the Qatar/West Virginia University research grant NPRP
   09-12-5-2-470. This research was partially conducted at NASA Ames
   Research Center. Reference herein to any specific commercial product,
   process, or service by trade name, trademark, manufacturer, or
   otherwise, does not constitute or imply its endorsement by the United
   States Government.
CR Abbass HA, 2001, IEEE C EVOL COMPUTAT, P207, DOI 10.1109/CEC.2001.934391
   AHA DW, 1991, MACH LEARN, V6, P37, DOI 10.1023/A:1022689900470
   [Anonymous], 2000, Software Cost Estimation with COCOMO II
   [Anonymous], 2003, P 18 INT JOINT C ART
   [Anonymous], 2001, 112 TIK ETH ZUR
   [Anonymous], THESIS GEORGIA I TEC
   Arcuri A, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1, DOI 10.1145/1985793.1985795
   Boehm B, 2003, COMPUTER, V36, P57, DOI 10.1109/MC.2003.1204376
   Boehm B., 2003, BALANCING AGILITY DI
   Boley D, 1998, DATA MIN KNOWL DISC, V2, P325, DOI 10.1023/A:1009740529316
   Cheeseman P.C., 1991, PROC 12 IJCAI, V91, P331, DOI [DOI 10.5555/1631171.1631221, 10.5555/1631171.1631221]
   Coello CAC, 2004, IEEE T EVOLUT COMPUT, V8, P256, DOI 10.1109/tevc.2004.826067
   Das S, 2011, IEEE T EVOLUT COMPUT, V15, P4, DOI 10.1109/TEVC.2010.2059031
   Deb K, 2005, EVOL COMPUT, V13, P501, DOI 10.1162/106365605774666895
   Deb K, 2002, IEEE T EVOLUT COMPUT, V6, P182, DOI 10.1109/4235.996017
   Deb K, 2014, IEEE T EVOLUT COMPUT, V18, P577, DOI 10.1109/TEVC.2013.2281535
   Dorigo M., 1997, IEEE Transactions on Evolutionary Computation, V1, P53, DOI 10.1109/4235.585892
   Faloutsos C., 1995, SIGMOD Record, V24, P163, DOI 10.1145/568271.223812
   Feigh KM, 2012, HUM FACTORS, V54, P1008, DOI 10.1177/0018720812443983
   Fortin FA, 2012, J MACH LEARN RES, V13, P2171
   Hao Pan, 2008, 2008 International Conference on Computer Science and Software Engineering (CSSE 2008), P78, DOI 10.1109/CSSE.2008.1057
   Harman M, 2014, 18TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE (SPLC 2014), VOL 1, P5, DOI 10.1145/2648511.2648513
   Harman M., 2013, COMMUNICATION
   Harman M, 2012, ACM COMPUT SURV, V45, DOI 10.1145/2379776.2379787
   Hoare C.A.R., 1961, Communications of the ACM, V4, P321, DOI [DOI 10.1145/366622.366647, DOI 10.1145/366622.366644]
   Hoos HH, 2002, EIGHTEENTH NATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE (AAAI-02)/FOURTEENTH INNOVATIVE APPLICATIONS OF ARTIFICIAL INTELLIGENCE CONFERENCE (IAAI-02), PROCEEDINGS, P661
   Igel C, 2007, EVOL COMPUT, V15, P1, DOI 10.1162/evco.2007.15.1.1
   Joseph Krall M. D., 2015, IEEE T HUMA IN PRESS
   Kenndy J., 1995, P ICNN 95 INT C NEUR, P1942
   Kennedy J., 2001, Swarm Intelligence
   Krall Joseph, 2014, THESIS W VIRGINIA U
   Kühlkamp V, 1999, PACE, V22, P990, DOI 10.1111/j.1540-8159.1999.tb00562.x
   Menzies Tim, 2009, Software Process: Improvement and Practice, V14, P213, DOI 10.1002/spip.414
   Menzies T., 2007, P 22 IEEE ACM INT C, P303, DOI [10.1145/1321631.1321676, DOI 10.1145/1321631.1321676]
   Menzies T, 2013, IEEE T SOFTWARE ENG, V39, P822, DOI 10.1109/TSE.2012.83
   Menzies T, 2009, PROC INT CONF SOFTW, P540, DOI 10.1109/ICSE.2009.5070552
   Michie D., 1994, MACHINE LEARNING NEU
   Ozawa K., 1999, Engineering Solutions for the Next Millennium. 1999 IEEE Canadian Conference on Electrical and Computer Engineering (Cat. No.99TH8411), P1195, DOI 10.1109/CCECE.1999.808235
   PARNAS DL, 1972, COMMUN ACM, V15, P1053, DOI 10.1145/361598.361623
   Peng W, 2009, STUD COMPUT INTELL, V171, P309
   Platt J, 2005, P 10 INT WORKSH ART, P261
   Port Dan, 2008, 2008 23rd IEEE/ACM International Conference on Automated Software Engineering, P268, DOI 10.1109/ASE.2008.37
   Pritchett Amy R., 2011, 2011 IEEE International Multi-Disciplinary Conference on Cognitive Methods in Situation Awareness and Decision Support (CogSIMA 2011), P136, DOI 10.1109/COGSIMA.2011.5753432
   Pritchett AR, 2014, J COGN ENG DECIS MAK, V8, P52, DOI 10.1177/1555343413490166
   Pritchett AR, 2014, J COGN ENG DECIS MAK, V8, P33, DOI 10.1177/1555343413490944
   Reyes-Sierra M., 2006, International Journal of Computational Intelligence Research, V2, P287, DOI DOI 10.5019/J.IJCIR.2006.68
   Robic T, 2005, LECT NOTES COMPUT SC, V3410, P520
   Sacanamboy M, 2009, 2009 IEEE 3RD INTERNATIONAL CONFERENCE ON BIOMETRICS: THEORY, APPLICATIONS AND SYSTEMS, P385
   Sato H, 2014, LECT NOTES COMPUT SC, V8886, P274, DOI 10.1007/978-3-319-13563-2_24
   Sayyad AS, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P492, DOI 10.1109/ICSE.2013.6606595
   Sayyad AS, 2013, IEEE INT CONF AUTOM, P465, DOI 10.1109/ASE.2013.6693104
   Sayyad AS, 2013, INT WORK REAL ARTIF, P21, DOI 10.1109/RAISE.2013.6615200
   Scott EM, 2000, SENSITIVITY ANAL
   Sedenka V, 2010, RADIOENGINEERING, V19, P369
   Storn R, 1997, J GLOBAL OPTIM, V11, P341, DOI 10.1023/A:1008202821328
   Valerdi R., 2011, INC INT S DENV CO US
   Veerappa V, 2011, INT REQUIR ENG CONF, P89, DOI 10.1109/RE.2011.6051654
   Wolpert D. H., 1997, IEEE Transactions on Evolutionary Computation, V1, P67, DOI 10.1109/4235.585893
   Zhang QF, 2007, IEEE T EVOLUT COMPUT, V11, P712, DOI 10.1109/TEVC.2007.892759
   Zitzler E., 2000, Evolutionary Computation, V8, P173, DOI 10.1162/106365600568202
   Zitzler E, 2004, LECT NOTES COMPUT SC, V3242, P832
   Zitzler E, 2001, EVOLUTIONARY METHODS, P95, DOI DOI 10.1007/978-3-540-30217-9_84
   Zuluaga M., 2013, INT C MACH LEARN, V28, P462
NR 63
TC 22
Z9 23
U1 1
U2 8
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD OCT
PY 2015
VL 41
IS 10
BP 1001
EP 1018
DI 10.1109/TSE.2015.2432024
PG 18
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA CU0VR
UT WOS:000363237500004
OA hybrid
DA 2024-07-18
ER

PT J
AU Gay, G
   Staats, M
   Whalen, M
   Heimdahl, MPE
AF Gay, Gregory
   Staats, Matt
   Whalen, Michael
   Heimdahl, Mats P. E.
TI The Risks of Coverage-Directed Test Case Generation
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Software testing; system testing
ID MODEL CHECKERS; MUTATION
AB A number of structural coverage criteria have been proposed to measure the adequacy of testing efforts. In the avionics and other critical systems domains, test suites satisfying structural coverage criteria are mandated by standards. With the advent of powerful automated test generation tools, it is tempting to simply generate test inputs to satisfy these structural coverage criteria. However, while techniques to produce coverage-providing tests are well established, the effectiveness of such approaches in terms of fault detection ability has not been adequately studied. In this work, we evaluate the effectiveness of test suites generated to satisfy four coverage criteria through counterexample-based test generation and a random generation approach-where tests are randomly generated until coverage is achieved-contrasted against purely random test suites of equal size. Our results yield three key conclusions. First, coverage criteria satisfaction alone can be a poor indication of fault finding effectiveness, with inconsistent results between the seven case examples (and random test suites of equal size often providing similar-or even higher-levels of fault finding). Second, the use of structural coverage as a supplement-rather than a target-for test generation can have a positive impact, with random test suites reduced to a coverage-providing subset detecting up to 13.5 percent more faults than test suites generated specifically to achieve coverage. Finally, Observable MC/DC, a criterion designed to account for program structure and the selection of the test oracle, can-in part-address the failings of traditional structural coverage criteria, allowing for the generation of test suites achieving higher levels of fault detection than random test suites of equal size. These observations point to risks inherent in the increase in test automation in critical systems, and the need for more research in how coverage criteria, test generation approaches, the test oracle used, and system structure jointly influence test effectiveness.
C1 [Gay, Gregory] Univ S Carolina, Dept Comp Sci & Engn, Columbia, SC 29208 USA.
   [Whalen, Michael; Heimdahl, Mats P. E.] Univ Minnesota, Dept Comp Sci & Engn, Minneapolis, MN 55455 USA.
C3 University of South Carolina System; University of South Carolina
   Columbia; University of Minnesota System; University of Minnesota Twin
   Cities
RP Gay, G (corresponding author), Univ S Carolina, Dept Comp Sci & Engn, Columbia, SC 29208 USA.
EM greg@greggay.com; staatsm@gmail.com; whalen@cs.umn.edu;
   heimdahl@cs.umn.edu
OI Gay, Gregory/0000-0001-6794-9585
FU NASA Ames Cooperative Agreement [NNA06CB21A]; US National Science
   Foundation (NSF) [CCF-0916583, CNS-0931931, CNS-1035715]; Fonds National
   de la Recherche, Luxembourg [FNR/P10/03]; Rockwell Collins; Division Of
   Computer and Network Systems; Direct For Computer & Info Scie & Enginr
   [1035715] Funding Source: National Science Foundation
FX This work has been supported by NASA Ames Cooperative Agreement
   NNA06CB21A, US National Science Foundation (NSF) grants CCF-0916583,
   CNS-0931931, and CNS-1035715, and the Fonds National de la Recherche,
   Luxembourg (FNR/P10/03). The authors would additionally like to thank
   Rockwell Collins for their support. G. Gay is the corresponding author.
CR Anand S, 2013, J SYST SOFTWARE, V86, P1978, DOI 10.1016/j.jss.2013.02.061
   Andrews JH, 2006, IEEE T SOFTWARE ENG, V32, P608, DOI 10.1109/TSE.2006.83
   Andrews JH, 2005, PROC INT CONF SOFTW, P402, DOI 10.1145/1062455.1062530
   [Anonymous], 2010, Proceedings of the 19th International Symposium on Software Testing and Analysis, ISSTA'10
   Arcuri Andrea., 2011, ISSTA
   Chen TY, 1996, IEEE T SOFTWARE ENG, V22, P109, DOI 10.1109/32.485221
   Chilenski J., 2001, DOTFAAAR0118 OFF AV
   CHILENSKI JJ, 1994, SOFTWARE ENG J, V9, P193, DOI 10.1049/sej.1994.0025
   Devaraj G, 2005, P INT COMP SOFTW APP, P455
   Dupuy A., 2000, P DASC DIG AV SYST C
   Frankl P., 1991, 4 S TESTING ANAL VER, P154
   Fraser G, 2009, J SYST SOFTWARE, V82, P1403, DOI 10.1016/j.jss.2009.05.016
   Gacek A., 2015, JKIND A JAVA IMPLEME
   Gargantini A, 1999, LECT NOTES COMPUT SC, V1687, P146, DOI 10.1145/318774.318939
   Godefroid P, 2005, ACM SIGPLAN NOTICES, V40, P213, DOI 10.1145/1064978.1065036
   Godefroid P., 2008, P NETW DISTR SEC S
   Gopinath R, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P72, DOI 10.1145/2568225.2568278
   Gutjahr WJ, 1999, IEEE T SOFTWARE ENG, V25, P661, DOI 10.1109/32.815325
   Hagen G., 2008, THESIS U IOWA IA
   Halbwachs Nicolas., 1993, Synchronous Programming of Reactive Systems
   HAMLET D, 1990, IEEE T SOFTWARE ENG, V16, P1402, DOI 10.1109/32.62448
   Heimdahl MPE, 2004, EIGHTH IEEE INTERNATIONAL SYMPOSIUM ON HIGH ASSURANCE SYSTEMS ENGINEERING, PROCEEDINGS, P178, DOI 10.1109/HASE.2004.1281742
   Heimdahl MPE, 2004, 19TH INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P176, DOI 10.1109/ASE.2004.1342735
   HUTCHINS M, 1994, PROC INT CONF SOFTW, P191, DOI 10.1109/ICSE.1994.296778
   Inozemtseva L, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P435, DOI 10.1145/2568225.2568271
   Jia Y, 2011, IEEE T SOFTWARE ENG, V37, P649, DOI 10.1109/TSE.2010.62
   Juristo N, 2004, EMPIR SOFTW ENG, V9, P7, DOI 10.1023/B:EMSE.0000013513.48963.1b
   Kandl S, 2010, LECT NOTES COMPUT SC, V6399, P131, DOI 10.1007/978-3-642-16256-5_14
   Majumdar R, 2007, PROC INT CONF SOFTW, P416
   McMinn P, 2004, SOFTW TEST VERIF REL, V14, P105, DOI 10.1002/stvr.294
   MCMINN P., 2010, Proceedings of the First International Workshop on Software Test Output Validation, P1
   Murugesan A, 2013, 2013 5TH INTERNATIONAL WORKSHOP ON MODELING IN SOFTWARE ENGINEERING (MISE), P13, DOI 10.1109/MiSE.2013.6595290
   Namin AS, 2009, ISSTA 2009: INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P57
   Nie CH, 2011, ACM COMPUT SURV, V43, DOI 10.1145/1883612.1883618
   Rajan A, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P161, DOI 10.1145/1368088.1368111
   Rajan A, 2008, LECT NOTES COMPUT SC, V5256, P86, DOI 10.1007/978-3-540-88194-0_8
   Rayadurgam S, 2001, EIGHTH ANNUAL IEEE INTERNATIONAL CONFERENCE AND WORKSHOP ON THE ENGINEERING OF COMPUTER BASED SYSTEMS, PROCEEDINGS, P83, DOI 10.1109/ECBS.2001.922409
   RTCA, 2011, DO-178c
   RTCA, 1992, DO-178B Software Considerations in Airborne Systems and Equipment Certification
   Sen K., 2005, P 10 EUR SOFTW ENG C, V30, P263, DOI DOI 10.1145/1081706.1081750
   Staats M., 2012, Proceedings of the 2012 IEEE 23rd International Symposium on Software Reliability Engineering (ISSRE), P311, DOI 10.1109/ISSRE.2012.13
   Staats M, 2012, PROC INT CONF SOFTW, P870, DOI 10.1109/ICSE.2012.6227132
   Staats M, 2012, LECT NOTES COMPUT SC, V7212, P409, DOI 10.1007/978-3-642-28872-2_28
   Staats M, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P892, DOI 10.1145/1985793.1985936
   Van Eijk CAJ., 2002, Computer-Aided Design of Integrated Circuits and Systems, V19, P814
   Veanes M., 2008, FORMAL METHODS TESTI, P4949
   Vivanti M, 2013, PROC INT SYMP SOFTW, P370, DOI 10.1109/ISSRE.2013.6698890
   WEYUKER EJ, 1991, IEEE T SOFTWARE ENG, V17, P703, DOI 10.1109/32.83906
   Whalen M, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P102, DOI 10.1109/ICSE.2013.6606556
   WILCOXON F, 1945, BIOMETRICS BULL, V1, P80, DOI 10.1093/jee/39.2.269
   Yuen TY, 2006, J SYST SOFTWARE, V79, P577, DOI 10.1016/j.jss.2005.05.030
   ZHU H, 1993, SOFTWARE ENG J, V8, P21, DOI 10.1049/sej.1993.0004
NR 52
TC 63
Z9 70
U1 0
U2 9
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD AUG
PY 2015
VL 41
IS 8
BP 803
EP 819
DI 10.1109/TSE.2015.2421011
PG 17
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA CP0KI
UT WOS:000359563800005
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Thimbleby, H
AF Thimbleby, Harold
TI Safer User Interfaces: A Case Study in Improving Number Entry
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Error processing; software/software engineering; user interfaces; human
   factors in software design; user interfaces; information interfaces and
   representation (HCI)
ID ERROR
AB Numbers are used in critical applications, including finance, healthcare, aviation, and of course in every aspect of computing. User interfaces for number entry in many devices (calculators, spreadsheets, infusion pumps, mobile phones, etc.) have bugs and design defects that induce unnecessary use errors that compromise their dependability. Focusing on Arabic key interfaces, which use digit keys
   [GRAPHICS]
   usually augmented with correction keys, this paper introduces a method for formalising and managing design problems. Since number entry and devices such as calculators have been the subject of extensive user interface research since at least the 1980s, the diverse design defects uncovered imply that user evaluation methodologies are insufficient for critical applications. Likewise, formal methods are not being applied effectively. User interfaces are not trivial and more attention should be paid to their correct design and implementation. The paper includes many recommendations for designing safer number entry user interfaces.
C1 Swansea Univ, Dept Comp Sci, Swansea SA2 0SF, W Glam, Wales.
C3 Swansea University
RP Thimbleby, H (corresponding author), Swansea Univ, Dept Comp Sci, Swansea SA2 0SF, W Glam, Wales.
EM harold@thimbleby.net
RI Thimbleby, Harold/D-4389-2013
OI Thimbleby, Harold/0000-0003-2222-4243
FU United Kingdom Engineering and Physical Sciences Research Council
   (EPSRC) [EP/G059063, EP/K504002, EP/L019272/1]; EPSRC [EP/L019272/1]
   Funding Source: UKRI
FX This research was funded by the United Kingdom Engineering and Physical
   Sciences Research Council (EPSRC) Grant numbers [EP/G059063, EP/K504002,
   EP/L019272/1]. Paul Cairns, Abigail Cauchi, Michael Harrison, Paolo
   Masci, Gordon Pace and Richard Young all made many very valuable
   comments for which the author is grateful. The Medical Device PnP group
   at Massachusetts General provided laboratory facilities for which we are
   grateful.
CR Ament MGA, 2013, J EXP PSYCHOL-APPL, V19, P195, DOI 10.1037/a0034397
   [Anonymous], 2010, 9241210 ISO
   [Anonymous], 2002, CONJECTURES REFUTATI
   Cauchi A., 2012, P HCI2012 26 BCS C H, P29
   DEININGER RL, 1960, AT&T TECH J, V39, P995, DOI 10.1002/j.1538-7305.1960.tb04447.x
   Dijkstra E. W., 1976, A Discipline of Pro-gramming
   Fu K., 2011, PUBLIC HLTH EFFECTIV
   Gilroy S. W., 2005, LECT NOTES COMPUTER
   Halasz F.G., 1983, P SIGCHI C HUMAN FAC, P212, DOI DOI 10.1145/800045.801613
   Halls S., 2010, DESIGN PATIENT SAFET
   Harrison M., 1990, Formal Methods in Human- Computer Interaction
   Hartson H. R., 1992, Human-Computer Interaction, V7, P1, DOI 10.1207/s15327051hci0701_1
   HOARE CAR, 1969, COMMUN ACM, V12, P576, DOI 10.1145/363235.363259
   Institute for Safe Medication Practices, 2007, FLUOR INC ROOT CAUS
   Institute for Safe Medication Practices, LIST ERR PRON ABBR S
   Institute for Safe Medication Practices, 2006, ISMP CAN SAF B, V6
   Johnson-Laird P., 1993, Human and Machine Thinking
   Knight J. C., 1990, SIGSOFT Software Engineering Notes, V15, P24, DOI 10.1145/382294.382710
   Landauer T.K., 1995, TROUBLE COMPUTERS
   Masci P., 2013, INNOV SYST SOFTW ENG, P1
   Masci P., 2014, P 17 INT C FUND APPR, DOI [10.1007/9783642548048_14, DOI 10.1007/9783642548048_14]
   MAYER RE, 1981, COMMUN ACM, V24, P511, DOI 10.1145/358722.358735
   NORMAN DA, 1983, COMMUN ACM, V26, P254, DOI 10.1145/2163.358092
   Oladimeji P., 2011, P IFIP C HUM COMP IN, VIV, P178
   Olsen K. A., 2008, IEEE COMPUT, V41, P1005
   Paterno F., 2014, P ACM SIGCHI S ENG I
   Reason J., 1991, HUMAN ERROR
   RUNCIMAN C, 1986, INT J MAN MACH STUD, V25, P439, DOI 10.1016/S0020-7373(86)80070-0
   Rushby John, 2013, Computer Safety, Reliability and Security. 32nd International Conference, SAFECOMP 2013. Proceedings: LNCS 8153, P1, DOI 10.1007/978-3-642-40793-2_1
   Spivey J. M., 1988, PRENTICE HALL INT SE
   Thimbleby H, 1995, COMPUT J, V38, P418, DOI 10.1093/comjnl/38.6.418
   Thimbleby H, 2000, INT J HUM-COMPUT ST, V52, P1031, DOI 10.1006/ijhc.1999.0341
   Thimbleby H., 2001, ACM Transactions on Computer-Human Interaction, V8, P99, DOI 10.1145/376929.376941
   Thimbleby H, 2001, INT J HUM-COMPUT ST, V54, P333, DOI 10.1006/ijhc.2000.0442
   Thimbleby H., 1983, Behaviour and Information Technology, V2, P127, DOI 10.1080/01449298308914472
   Thimbleby H, 2011, ELECT COMMUN EASST, V45, DOI 10.14279/tuj.eceasst.45.642
   Thimbleby H., 1990, USER INTERFACE DESIG
   Thimbleby H., 2007, PRESS ON
   Thimbleby H., 2015, CLIN MED IN PRESS
   Thimbleby H., P IEEE INT C HEALTHC, P1
   Thimbleby H, 2007, LECT NOTES COMPUT SC, V4323, P52
   Thimbleby H, 2012, SOFTWARE PRACT EXPER, V42, P1393, DOI 10.1002/spe.1141
   Thimbleby H, 2010, J R SOC INTERFACE, V7, P1429, DOI 10.1098/rsif.2010.0112
   Thimbleby Harold., 2013, P SIGCHI C HUMAN FAC, p1431. isbn, DOI DOI 10.1145/2470654.2466190
   Thimbleby W., 2008, P ENG INT COMP SYST, P519
   Thimbleby William., 2004, P F 3 NORDIC C HUMAN, P445
   YOUNG RM, 1981, INT J MAN MACH STUD, V15, P51, DOI 10.1016/S0020-7373(81)80023-5
NR 47
TC 12
Z9 13
U1 0
U2 13
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUL
PY 2015
VL 41
IS 7
BP 711
EP 729
DI 10.1109/TSE.2014.2383396
PG 19
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science; Engineering
GA CN2JO
UT WOS:000358247100005
OA Green Accepted, hybrid
DA 2024-07-18
ER

PT J
AU Athanasiou, D
   Nugroho, A
   Visser, J
   Zaidman, A
AF Athanasiou, Dimitrios
   Nugroho, Ariadi
   Visser, Joost
   Zaidman, Andy
TI Test Code Quality and Its Relation to Issue Handling Performance
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Testing; defects; bugs; metrics; measurement
ID SOFTWARE; COVERAGE; MODEL
AB Automated testing is a basic principle of agile development. Its benefits include early defect detection, defect cause localization and removal of fear to apply changes to the code. Therefore, maintaining high quality test code is essential. This study introduces a model that assesses test code quality by combining source code metrics that reflect three main aspects of test code quality: completeness, effectiveness and maintainability. The model is inspired by the Software Quality Model of the Software Improvement Group which aggregates source code metrics into quality ratings based on benchmarking. To validate the model we assess the relation between test code quality, as measured by the model, and issue handling performance. An experiment is conducted in which the test code quality model is applied to 18 open source systems. The test quality ratings are tested for correlation with issue handling indicators, which are obtained by mining issue repositories. In particular, we study the (1) defect resolution speed, (2) throughput and (3) productivity issue handling metrics. The results reveal a significant positive correlation between test code quality and two out of the three issue handling metrics (throughput and productivity), indicating that good test code quality positively influences issue handling performance.
C1 [Athanasiou, Dimitrios; Nugroho, Ariadi; Visser, Joost] Software Improvement Grp, NL-1096 HA Amsterdam, Netherlands.
   [Visser, Joost] Radboud Univ Nijmegen, Model Based Software Dev Grp, NL-6525 AJ Nijmegen, Netherlands.
   [Zaidman, Andy] Delft Univ Technol, Fac Elect Engn Math & Comp Sci, NL-2628 CD Delft, Netherlands.
C3 Radboud University Nijmegen; Delft University of Technology
RP Athanasiou, D (corresponding author), Software Improvement Grp, Amstelpl 1, NL-1096 HA Amsterdam, Netherlands.
EM dmitri.athanasiou@gmail.com; ariadi.nugroho@computer.org;
   j.visser@sig.eu; a.e.zaidman@tudelft.nl
RI Visser, Joost/AAD-9423-2019; Zaidman, Andy/O-6542-2014
OI Zaidman, Andy/0000-0003-2413-3935; Visser, Joost/0000-0003-0158-3095
FU NWO TestRoots project [639.022.314]; RAAK-PRO project EQuA (Early
   Quality Assurance in Software Production) of the Foundation Innovation
   Alliance (the Netherlands)
FX This work was partly funded by (1) the NWO TestRoots project (project
   number 639.022.314) and (2) the RAAK-PRO project EQuA (Early Quality
   Assurance in Software Production) of the Foundation Innovation Alliance
   (the Netherlands).
CR Afifi F. H., 1992, International Conference on Software Engineering, P81, DOI 10.1145/143062.143096
   Ahsan Syed Nadeem, 2009, Proceedings 21st International Conference on Software Engineering & Knowledge Engineering (SEKE 2009), P129
   Alves T. L., 2011, 2011 Proceedings of Joint Conf of 21st Int'l Workshop on Software Measurement and the 6th Int'l Conference on Software Process and Product Measurement (IWSM-MENSURA 2011), P20, DOI 10.1109/IWSM-MENSURA.2011.15
   Alves T. L., 2010, PROC INT C SOFTW MAI, P1
   Alves TL, 2009, IEEE INT WORK C SO, P55, DOI 10.1109/SCAM.2009.15
   [Anonymous], THESIS N CAROLINA ST
   [Anonymous], DISCOVERING STAT USI
   [Anonymous], 1988, Statistical power analysis for the behavioral sciences
   [Anonymous], 1992, PRACTICAL SOFTWARE M
   [Anonymous], THESIS DELFT U TECHN
   [Anonymous], SOFTWARE ENG PRODU 1
   [Anonymous], NAT TECH INF SERV
   [Anonymous], 2010, 4 INT WORKSH SOFTW Q
   [Anonymous], 1992, TR9296 UMIACS
   [Anonymous], THESIS U AMSTERDAM A
   [Anonymous], THESIS U LEIDEN LEID
   [Anonymous], FSC726015 IBM FED SY
   [Anonymous], ART SOFTWARE TESTING
   [Anonymous], 2007, P 22 IEEE ACM INT C, DOI DOI 10.1145/1321631.1321639
   [Anonymous], THESIS DELFT U TECHN
   [Anonymous], 2003, TEST DRIVEN DEV EXAM
   [Anonymous], 2009, CASE STUDY RES DESIG
   [Anonymous], 2007, STUDIES FUZZINESS SO, DOI DOI 10.1007/978-3-540-73721-6
   Ayari K., 2007, Proceedings of the 2007 Conference of the Center for Advanced Studies on Collaborative Research, CASCON '07, P215
   Baggen R, 2012, SOFTWARE QUAL J, V20, P287, DOI 10.1007/s11219-011-9144-9
   BENTLY WG, 1993, SOFTWARE QUAL J, V2, P29, DOI 10.1007/BF00417425
   Bertolino A, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P85, DOI 10.1109/FOSE.2007.25
   Bettenburg N., 2008, P 16 ACM SIGSOFT INT, P308
   Bijlsma D, 2012, SOFTWARE QUAL J, V20, P265, DOI 10.1007/s11219-011-9140-0
   Bird C, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P121, DOI 10.1145/1595696.1595716
   Boehm B. W., 1976, 2nd International Conference on Software Engineering, P592
   CLARKE LA, 1982, IEEE T SOFTWARE ENG, V8, P380, DOI 10.1109/TSE.1982.235572
   CLARKE LA, 1989, IEEE T SOFTWARE ENG, V15, P1318, DOI 10.1109/32.41326
   Concas G, 2007, IEEE T SOFTWARE ENG, V33, P687, DOI [10.1109/TSE.2007.1019, 10.1109/TSE.2007.1016]
   DEMILLO RA, 1978, COMPUTER, V11, P34, DOI 10.1109/C-M.1978.218136
   DROMEY RG, 1995, IEEE T SOFTWARE ENG, V21, P146, DOI 10.1109/32.345830
   Ellims M, 2006, EMPIR SOFTW ENG, V11, P5, DOI 10.1007/s10664-006-5964-9
   FRANKL PG, 1988, IEEE T SOFTWARE ENG, V14, P1483, DOI 10.1109/32.6194
   Giger E., 2010, P 2 INT WORKSH REC S, P52
   GOURLAY JS, 1983, IEEE T SOFTWARE ENG, V9, P686, DOI 10.1109/TSE.1983.235433
   Greiler M, 2013, IEEE WORK CONF MIN S, P387, DOI 10.1109/MSR.2013.6624053
   Guo PJ, 2011, P ACM 2011 C COMP SU, P395, DOI [10.1145/1958824.1958887., DOI 10.1145/1958824.1958887]
   HAMLET RG, 1977, IEEE T SOFTWARE ENG, V3, P279, DOI 10.1109/TSE.1977.231145
   Heitlager Ilja, 2007, 2007 6th International Conference on the Quality of Information and Communication Technology, P30
   Hetzel W.C., 1991, COMPLETE GUIDE SOFTW
   HOWDEN WE, 1985, IEEE SOFTWARE, V2, P6, DOI 10.1109/MS.1985.231754
   HOWDEN WE, 1975, IEEE T COMPUT, VC 24, P554, DOI 10.1109/T-C.1975.224259
   Hunt Andrew, 1999, The Pragmatic Programmer: From Journeyman to Master, V1
   Hurdugaci V, 2012, EUR CON SFTWR MTNCE, P11, DOI 10.1109/CSMR.2012.12
   Jinxia An, 2010, Proceedings 2010 Fourth IEEE International Conference on Secure Software Integration and Reliability Improvement (SSIRI 2010), P106, DOI 10.1109/SSIRI.2010.16
   Kagdi H, 2007, J SOFTW MAINT EVOL-R, V19, P77, DOI 10.1002/smr.344
   Kim S, 2006, Proceedings of the 2006 international workshop on Mining software repositories, P173
   Kitchenham B, 1996, IEEE SOFTWARE, V13, P12, DOI 10.1109/52.476281
   Kudrjavets G, 2006, ISSRE 2006:17TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P204
   Lanza Michele, 2006, Objectoriented metrics in practice: using software metrics to characterize, evaluate, and improve the design of object-oriented systems
   LASKI JW, 1983, IEEE T SOFTWARE ENG, V9, P347, DOI 10.1109/TSE.1983.236871
   Lubsen Z, 2009, 2009 6TH IEEE INTERNATIONAL WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES, P151, DOI 10.1109/MSR.2009.5069493
   Luijten Bart, 2010, Proceedings of the 2010 7th IEEE Working Conference on Mining Software Repositories (MSR 2010), P94, DOI 10.1109/MSR.2010.5463292
   Martin R. C., 2008, Clean Code: A Handbook of Agile Software Craftsmanship
   McCabe T. J., 1976, IEEE Transactions on Software Engineering, VSE-2, P308, DOI 10.1109/TSE.1976.233837
   Meszaros G., 2006, XUNIT TEST PATTERNS
   Mockus A., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, P263, DOI 10.1109/ICSE.2000.870417
   Moonen L., 2008, Software Evolution, P173
   Moonen Leon, 2001, P 2 INT C EXTR PROGR
   Munson JC, 1998, PROC IEEE INT CONF S, P24, DOI 10.1109/ICSM.1998.738486
   Nagappan N., 2005, Proceedings of the third workshop on Software quality, P1
   NTAFOS SC, 1988, IEEE T SOFTWARE ENG, V14, P868, DOI 10.1109/32.6165
   Perry DE., 2000, P C FUT SOFTW ENG, P345, DOI DOI 10.1145/336512.336586
   Pinto L.S., 2012, P ACM SIGSOFT 20 INT, P1
   PODGURSKI A, 1990, IEEE T SOFTWARE ENG, V16, P965, DOI 10.1109/32.58784
   RAPPS S, 1985, IEEE T SOFTWARE ENG, V11, P367, DOI 10.1109/TSE.1985.232226
   Reichhart S, 2007, J OBJECT TECHNOL, V6, P231, DOI 10.5381/jot.2007.6.9.a12
   Robbins J.E., 2003, MAKING SENSE BAZAAR
   Rothermel G., 1997, ACM Transactions on Software Engineering and Methodology, V6, P173, DOI 10.1145/248233.248262
   Sliwerski J., 2005, ACM SIGSOFT SOFTWARE, P1, DOI DOI 10.1145/1082983.1083147
   Soetens QD, 2013, EUR CON SFTWR MTNCE, P101, DOI 10.1109/CSMR.2013.20
   Van Rompaey B, 2007, IEEE T SOFTWARE ENG, V33, P800, DOI 10.1109/TSE.2007.70745
   Voas J, 1997, IEEE SOFTWARE, V14, P118, DOI 10.1109/52.582981
   Vonken F., 2012, 2012 19th Working Conference on Reverse Engineering (WCRE), P29, DOI 10.1109/WCRE.2012.13
   Weiss C, 2007, P 4 INT WORKSH MIN S, P1, DOI [10.1109/MSR.2007.13, DOI 10.1109/MSR.2007.13]
   WEYUKER EJ, 1986, IEEE T SOFTWARE ENG, V12, P1128, DOI 10.1109/TSE.1986.6313008
   WHITE LJ, 1980, IEEE T SOFTWARE ENG, V6, P247, DOI 10.1109/TSE.1980.234486
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
   WOODWARD MR, 1980, IEEE T SOFTWARE ENG, V6, P278, DOI 10.1109/TSE.1980.230473
   Xiao XS, 2012, ADV COMPUT, V85, P165, DOI 10.1016/B978-0-12-396526-4.00004-7
   Yorsh G., 2006, ISSTA 06 P 2006 INT, P145
   Zaidman Andy, 2008, 2008 First IEEE International Conference on Software Testing, Verification and Validation (ICST '08), P220, DOI 10.1109/ICST.2008.47
   Zaidman A, 2011, EMPIR SOFTW ENG, V16, P325, DOI 10.1007/s10664-010-9143-7
   Zeller A., 2005, Why Programs Fail: A Guide to Systematic Debugging
   Zhu H, 1997, ACM COMPUT SURV, V29, P366, DOI 10.1145/267580.267590
NR 90
TC 76
Z9 80
U1 6
U2 25
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD NOV
PY 2014
VL 40
IS 11
BP 1100
EP 1125
DI 10.1109/TSE.2014.2342227
PG 26
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA AW4AO
UT WOS:000346224200004
OA Green Submitted, Green Published
DA 2024-07-18
ER

PT J
AU Leopold, H
   Mendling, J
   Polyvyanyy, A
AF Leopold, Henrik
   Mendling, Jan
   Polyvyanyy, Artem
TI Supporting Process Model Validation through Natural Language Generation
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Business process model validation; natural language text generation;
   verbalization
ID SPECIFICATIONS; VERIFICATION; SEMANTICS; ERRORS; NETS; TEXT
AB The design and development of process-aware information systems is often supported by specifying requirements as business process models. Although this approach is generally accepted as an effective strategy, it remains a fundamental challenge to adequately validate these models given the diverging skill set of domain experts and system analysts. As domain experts often do not feel confident in judging the correctness and completeness of process models that system analysts create, the validation often has to regress to a discourse using natural language. In order to support such a discourse appropriately, so-called verbalization techniques have been defined for different types of conceptual models. However, there is currently no sophisticated technique available that is capable of generating natural-looking text from process models. In this paper, we address this research gap and propose a technique for generating natural language texts from business process models. A comparison with manually created process descriptions demonstrates that the generated texts are superior in terms of completeness, structure, and linguistic complexity. An evaluation with users further demonstrates that the texts are very understandable and effectively allow the reader to infer the process model semantics. Hence, the generated texts represent a useful input for process model validation.
C1 [Leopold, Henrik; Mendling, Jan] WU Vienna, Inst Informat Business, Vienna, Austria.
   [Polyvyanyy, Artem] Queensland Univ Technol, Business Proc Management Discipline, Sch Informat Syst, Fac Sci & Engn, Brisbane, Qld 4001, Australia.
C3 Queensland University of Technology (QUT)
RP Leopold, H (corresponding author), WU Vienna, Inst Informat Business, Vienna, Austria.
EM henrik.leopold@wu.ac.at; jan.mendling@wu.ac.at;
   artem.polyvyanyy@qut.edu.au
RI Polyvyanyy, Artem/AAR-9578-2020; Polyvyanyy, Artem/D-8840-2016
OI Polyvyanyy, Artem/0000-0002-7672-1643; Polyvyanyy,
   Artem/0000-0002-7672-1643; Mendling, Jan/0000-0002-7260-524X
CR Abrett G., 1989, 7062 BBN SYST TECHN
   Allweyer T., 2009, BPMN 2 0 BUSINESS PR
   [Anonymous], 2013, Business process management, DOI DOI 10.1007/978-3-642-33143-5
   [Anonymous], P NAACL HLT 2010 YOU
   [Anonymous], J AIS
   [Anonymous], 2010, Business Process Model and Notation (BPMN) v2.0
   [Anonymous], 2008, BPMN modeling and reference guide: understanding and using BPMN
   Arisholm E, 2004, IEEE T SOFTWARE ENG, V30, P521, DOI 10.1109/TSE.2004.43
   Attali Y., 2006, J TECHNOL LEARN ASSE, V4
   Bangalore S, 2000, 38TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, PROCEEDINGS OF THE CONFERENCE, P464
   Bateman J. A., 1997, Natural Language Engineering, V3, P15, DOI 10.1017/S1351324997001514
   Bertino E., 1999, ACM Trans. Inf. Syst. Secur., V2, P65, DOI 10.1145/300830.300837
   Breaux TD, 2008, ACM T SOFTW ENG METH, V18, DOI 10.1145/1416563.1416565
   Brislin R. W., 1986, FIELD METHODS CROSS, P137
   Burstein J, 2003, AUTOMATED ESSAY SCORING: A CROSS-DISCIPLINARY PERSPECTIVE, P113
   Busemann S., 1996, Proceedings of 8th International Workshop on Natural Language Generation (INLG-96), P101
   Casanave C.P., 1994, Journal of Second Language Writing, V3, P179, DOI [10.1016/1060-3743(94)90016-7, DOI 10.1016/1060-3743(94)90016-7]
   Chapman D.W., 1979, ED POLICY ANAL, V1, P71, DOI [10.2307/1164158, DOI 10.3102/01623737001003071]
   Cleland-Huang J, 2007, REQUIR ENG, V12, P103, DOI 10.1007/s00766-007-0045-1
   Corston-Oliver Simon., 2002, Proceedings of the 2nd International Conference on Natural Language Generation (INLG-2002), P33
   Coskuncay A., 2010, THESIS MIDDLE E TU A
   Costal D, 1996, LECT NOTES COMPUT SC, V1080, P255
   Crampton J, 2008, SACMAT'08: PROCEEDINGS OF THE 13TH ACM SYMPOSIUM ON ACCESS CONTROL MODELS AND TECHNOLOGIES, P31
   Dalianis H, 1999, COMPUT INTELL-US, V15, P384, DOI 10.1111/0824-7935.00099
   Dalianis H., 1992, LNCS, V593, P425
   Damian D, 2006, IEEE T SOFTWARE ENG, V32, P433, DOI 10.1109/TSE.2006.61
   Davis A, 2006, RE'06: 14TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, PROCEEDINGS, P179
   DAVIS R., 2007, ARIS DESIGN PLATFORM
   de Caso G, 2012, IEEE T SOFTWARE ENG, V38, P141, DOI 10.1109/TSE.2010.98
   Decker G, 2008, LECT NOTES COMPUT SC, V5240, P386, DOI 10.1007/978-3-540-85758-7_30
   Dijkman R. M., 2007, FORMAL SEMANTIC ANAL
   Dijkman RM, 2008, INFORM SOFTWARE TECH, V50, P1281, DOI 10.1016/j.infsof.2008.02.006
   Egyed A, 2011, IEEE T SOFTWARE ENG, V37, P188, DOI 10.1109/TSE.2010.38
   Elhadad M., 1998, SURGE: a Comprehensive Plug-in Syntactic Realization Component for Text Generation
   Fahland D, 2011, DATA KNOWL ENG, V70, P448, DOI 10.1016/j.datak.2011.01.004
   Frederiks RJM, 2006, DATA KNOWL ENG, V58, P4, DOI 10.1016/j.datak.2005.05.007
   Freund J, 2012, PRAXISHANDBUCH BPMN, Vthird
   Friedrich F., 2010, THESIS HUMBOLDT U BE
   Gemino A, 2004, REQUIR ENG, V9, P153, DOI 10.1007/s00766-003-0182-0
   GOLDBERG E, 1994, IEEE EXPERT, V9, P45, DOI 10.1109/64.294135
   Goldin L., 1997, Automated Software Engineering, V4, P375, DOI 10.1023/A:1008617922496
   GOLTZ U, 1983, INFORM CONTROL, V57, P125, DOI 10.1016/S0019-9958(83)80040-0
   Hearst MA, 1997, COMPUT LINGUIST, V23, P33
   HEARST MA, 1994, 32ND ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, P9
   Heinonen Oskari., 1998, P COLINGACL 98, P1484
   Heymans P., 1998, Requirements Engineering, V3, P202, DOI 10.1007/s007660050005
   Holschke O., 2010, THESIS TU BERLING BE
   Holschke O, 2010, LECT NOTES COMPUT SC, V6336, P112, DOI 10.1007/978-3-642-15618-2_10
   Hovy E. H., 1993, P 4 EUR WORKSH NAT L, P28
   HOVY EH, 1990, ARTIF INTELL, V43, P153, DOI 10.1016/0004-3702(90)90084-D
   HUNT KW, 1970, TESOL QUART, V4, P195, DOI 10.2307/3585720
   Hynes G. E., 2003, P 69 ASS BUS COMM AN
   JUST MA, 1992, PSYCHOL REV, V99, P122, DOI 10.1037/0033-295X.99.1.122
   Kahane S, 2001, LECT NOTES COMPUT SC, V2004, P1
   Kay Martin., 1979, Proceedings of the Fifth Meeting of the Berkeley Linguistics Society, P142, DOI [10.3765/bls.v5i0.3262, DOI 10.3765/BLS.V5I0.3262]
   Kibble R., 2000, P 1 INT C NAT LANG G, P77
   Kof L, 2010, IEEE INT C SEMANT CO, P46, DOI 10.1109/ICSC.2010.95
   Krogstie John., 1995, INFORM SYSTEM CONCEP, P216
   Lalioti V., 1993, Advanced Information Systems Engineering 5th International Conference. CAiSE '93 Proceedings, P143
   Landauer TK, 2003, AUTOMATED ESSAY SCORING: A CROSS-DISCIPLINARY PERSPECTIVE, P87
   Lavoie B., 1996, P 8 INT WORKSH NAT L, P9
   Lavoie Benoit., 1997, P 5 C APPL NATURAL L, P265
   Leopold Henrik, 2012, Advanced Information Systems Engineering. Proceedings 24th International Conference, CAiSE 2012, P64, DOI 10.1007/978-3-642-31095-9_5
   Leopold H, 2012, INFORM SYST, V37, P443, DOI 10.1016/j.is.2012.01.004
   Lindland O. I., 1993, Advanced Information Systems Engineering 5th International Conference. CAiSE '93 Proceedings, P165
   Lohmann N, 2009, LECT NOTES COMPUT SC, V5460, P46
   Lomazova IA, 1997, LECT NOTES COMPUT SC, V1279, P317, DOI 10.1007/BFb0036194
   Loucopoulos P., 1991, Object Oriented Approach in Information Systems. Proceedings of the IFIP TC8/WG8.1 Working Conference, P323
   Lu XF, 2010, INT J CORPUS LINGUIS, V15, P474, DOI 10.1075/ijcl.15.4.02lu
   Malik S, 2013, LECT NOTES BUS INF P, V132, P611
   Mashkoor Atif, 2010, Abstract State Machines, Alloy, B and Z. Proceedings Second International Conference, ABZ 2010, DOI 10.1007/978-3-642-11811-1_38
   McKeown K., 1995, SIGIR Forum, P74
   Mcroy S. W., 2000, P INT C INT TECHN
   Mel'cuk IgorA., 1987, Computational linguistics, V13, P261
   Mendling J, 2010, INFORM SOFTWARE TECH, V52, P127, DOI 10.1016/j.infsof.2009.08.004
   Mendling J, 2008, LECT NOTES BUS INF P, V6, P1
   METEER M, 1992, THIRD CONFERENCE ON APPLIED NATURAL LANGUAGE PROCESSING, P237
   Meteer M. W., 1991, Computational Intelligence, V7, P296, DOI 10.1111/j.1467-8640.1991.tb00402.x
   Meteer M. W., 1992, EXPRESSIBILITY PROBL
   Meziane F, 2008, REQUIR ENG, V13, P1, DOI [10.1007/s00766-007-0054-0, 10.1007/S00766-007-0054-0]
   Morris J., 1991, Computational Linguistics, V17, P21
   Nijssen G.M., 1989, CONCEPTUAL SCHEMA RE
   Page E.B., 1967, P INT C COMP LING, P1, DOI [10.3115/991566.991598, DOI 10.3115/991566.991598]
   PAGE EB, 1966, PHI DELTA KAPPAN, V47, P238
   Polyvyanyy A, 2012, INFORM SYST, V37, P518, DOI 10.1016/j.is.2011.10.005
   Polyvyanyy A, 2011, LECT NOTES COMPUT SC, V6551, P25, DOI 10.1007/978-3-642-19589-1_2
   Popescu D, 2008, LECT NOTES COMPUT SC, V5320, P103
   Queralt A, 2012, ACM T SOFTW ENG METH, V21, DOI 10.1145/2089116.2089123
   Radev DR, 1998, COMPUT LINGUIST, V24, P469
   Rayner K., 1989, PSYCHOL READING SERI
   Reape M., 2010, P 7 EUR WORKSH NAT L, P20
   Reijers HA, 2003, J MANAGE INFORM SYST, V20, P229
   Reiter E., 1997, Natural Language Engineering, V3, P57, DOI 10.1017/S1351324997001502
   Reiter E., 1995, Proceedings of the Fifth European Workshop on Natural-Language Generation (ENLGW-1995), ENLGW-1995, P95
   Rosemann M, 2006, BUS PROCESS MANAG J, V12, P249, DOI 10.1108/14637150610657567
   Schuette R., 1998, LECT NOTES COMPUTER, P240, DOI [DOI 10.1007/978-3-540-49524-620, DOI 10.1007/978-3-540-49524-6-20]
   Sidorova N, 2011, INFORM SYST, V36, P1026, DOI 10.1016/j.is.2011.04.004
   Smets M, 2003, EACL 2003: 10TH CONFERENCE OF THE EUROPEAN CHAPTER OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, PROCEEDINGS OF THE CONFERENCE, P323
   Cardoso ECS, 2009, 2009 13TH ENTERPRISE DISTRIBUTED OBJECT COMPUTING CONFERENCE WORKSHOPS (EDOCW 2009), P320, DOI 10.1109/EDOCW.2009.5331974
   STEDE M, 1994, ARTIF INTELL REV, V8, P309, DOI 10.1007/BF00849062
   Stede M., 1993, P 6 C EUR CHAPT ASS
   Strembeck M, 2011, INFORM SOFTWARE TECH, V53, P456, DOI 10.1016/j.infsof.2010.11.015
   Sun SX, 2006, INFORM SYST RES, V17, P374, DOI 10.1287/isre.1060.0105
   Sutcliffe AG, 1998, IEEE T SOFTWARE ENG, V24, P1072, DOI 10.1109/32.738340
   van der Aalst WMP, 2000, LECT NOTES COMPUT SC, V1806, P161
   Vanhatalo J, 2009, DATA KNOWL ENG, V68, P793, DOI 10.1016/j.datak.2009.02.015
   Verheijen G., 1982, C COMP REV INF SYST
   WAHLSTER W, 1993, ARTIF INTELL, V63, P387, DOI 10.1016/0004-3702(93)90022-4
   Weber I, 2010, DISTRIB PARALLEL DAT, V27, P271, DOI 10.1007/s10619-010-7060-9
   Weidlich M, 2010, LECT NOTES COMPUT SC, V6051, P499, DOI 10.1007/978-3-642-13094-6_38
NR 110
TC 64
Z9 69
U1 1
U2 27
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD AUG
PY 2014
VL 40
IS 8
BP 818
EP 840
DI 10.1109/TSE.2014.2327044
PG 23
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science; Engineering
GA AR9MG
UT WOS:000343898400005
OA Green Submitted, Green Accepted
DA 2024-07-18
ER

PT J
AU Arnaoudova, V
   Eshkevari, LM
   Di Penta, M
   Oliveto, R
   Antoniol, G
   Guéhéneuc, YG
AF Arnaoudova, Venera
   Eshkevari, Laleh M.
   Di Penta, Massimiliano
   Oliveto, Rocco
   Antoniol, Giuliano
   Gueheneuc, Yann-Gael
TI REPENT: Analyzing the Nature of Identifier Renamings
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Identifier renaming; refactoring; program comprehension; mining software
   repositories; empirical study
ID CODE; REFACTORINGS; COHESION; NAMES
AB Source code lexicon plays a paramount role in software quality: poor lexicon can lead to poor comprehensibility and even increase software fault-proneness. For this reason, renaming a program entity, i.e., altering the entity identifier, is an important activity during software evolution. Developers rename when they feel that the name of an entity is not (anymore) consistent with its functionality, or when such a name may be misleading. A survey that we performed with 71 developers suggests that 39 percent perform renaming from a few times per week to almost every day and that 92 percent of the participants consider that renaming is not straightforward. However, despite the cost that is associated with renaming, renamings are seldom if ever documented-for example, less than 1 percent of the renamings in the five programs that we studied. This explains why participants largely agree on the usefulness of automatically documenting renamings. In this paper we propose REANAMING PROGRAM ENTITIES (REPENT), an approach to automatically document-detect and classify-identifier renamings in source code. REPENT detects renamings based on a combination of source code differencing and data flow analyses. Using a set of natural language tools, REPENT classifies renamings into the different dimensions of a taxonomy that we defined. Using the documented renamings, developers will be able to, for example, look up methods that are part of the public API (as they impact client applications), or look for inconsistencies between the name and the implementation of an entity that underwent a high risk renaming (e. g., towards the opposite meaning). We evaluate the accuracy and completeness of REPENT on the evolution history of five open-source Java programs. The study indicates a precision of 88 percent and a recall of 92 percent. In addition, we report an exploratory study investigating and discussing how identifiers are renamed in the five programs, according to our taxonomy.
C1 [Arnaoudova, Venera; Antoniol, Giuliano] Polytech Montreal, Quebec City, PQ, Canada.
   [Eshkevari, Laleh M.] Polytech Montreal, Dept Comp Sci & Software Engn, Quebec City, PQ, Canada.
   [Di Penta, Massimiliano] Univ Sannio, Benevento, Italy.
   [Oliveto, Rocco] Univ Molise, Dept Biosci & Terr, Pesche, IS, Italy.
   [Oliveto, Rocco] Univ Molise, Lab Informat & Computat Sci, Pesche, IS, Italy.
   [Gueheneuc, Yann-Gael] Polytech Montreal, Dept Comp & Software Engn, Quebec City, PQ, Canada.
C3 Universite de Montreal; Polytechnique Montreal; Universite de Montreal;
   Polytechnique Montreal; University of Sannio; University of Molise;
   University of Molise; Universite de Montreal; Polytechnique Montreal
RP Arnaoudova, V (corresponding author), Polytech Montreal, Quebec City, PQ, Canada.
EM venera.arnaoudova@polymtl.ca; laleh.eshkevari@polymtl.ca;
   dipenta@unisannio.it; rocco.oliveto@unimol.it; antoniol@ieee.org;
   yann-gael.gueheneuc@polymtl.ca
RI Di Penta, Massimiliano/AAF-9656-2021; Arnaoudova, Venera/X-6403-2019;
   Guéhéneuc, Yann-Gaël/K-9371-2019
OI Di Penta, Massimiliano/0000-0002-0340-9747
CR ABBOTT RJ, 1983, COMMUN ACM, V26, P882, DOI 10.1145/182.358441
   Abebe Surafel Lemma, 2010, Proceedings of the 18th IEEE International Conference on Program Comprehension (ICPC 2010), P156, DOI 10.1109/ICPC.2010.29
   Abebe SL, 2009, EUR CON SFTWR MTNCE, P189, DOI 10.1109/CSMR.2009.61
   [Anonymous], P INT C SOFTW MAINT
   [Anonymous], STAT SERIES
   [Anonymous], EMPIRICAL SOFTW ENG
   [Anonymous], P INT C AUT SOFT ENG
   [Anonymous], 2010, Proceedings of the International Conference on Software Maintenance (ICSM)
   Antoniol G, 2002, IEEE T SOFTWARE ENG, V28, P970, DOI 10.1109/TSE.2002.1041053
   Arnaoudova V, 2013, EUR CON SFTWR MTNCE, P187, DOI 10.1109/CSMR.2013.28
   Bavota G, 2011, J SYST SOFTWARE, V84, P397, DOI 10.1016/j.jss.2010.11.918
   Binkley D, 2011, Proceedings of the Working Conference on Mining Software Repositories (MSR), P203
   Broder AZ, 1998, COMPRESSION AND COMPLEXITY OF SEQUENCES 1997 - PROCEEDINGS, P21, DOI 10.1109/SEQUEN.1997.666900
   Bruegge Bernd., 2003, OBJECT ORIENTED SOFT, V2nd
   Capobianco G, 2013, J SOFTW-EVOL PROC, V25, P743, DOI 10.1002/smr.1564
   Caprile B, 2000, PROC IEEE INT CONF S, P97, DOI 10.1109/ICSM.2000.883022
   Cormen T.H., 1990, Introduction to Algorithms
   Deissenböck F, 2005, PROG COMPREHEN, P97, DOI 10.1109/WPC.2005.14
   Demeyer S, 2000, ACM SIGPLAN NOTICES, V35, P166, DOI 10.1145/354222.353183
   Dig D, 2006, LECT NOTES COMPUT SC, V4067, P404
   Enslen E, 2009, 2009 6TH IEEE INTERNATIONAL WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES, P71, DOI 10.1109/MSR.2009.5069482
   Eshkevari LM, 2011, Proceedings of the 8th International Working Conference on Mining Software Repositories (MSR 2011), P33
   Fluri B, 2007, IEEE T SOFTWARE ENG, V33, P725, DOI 10.1109/TSE.2007.70731
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   Glaser Barney G., 1992, Basic of grounded theory analysis: emergence vs. forcing
   Groves R.M., 2009, Survey Methodology, V2nd
   Guerrouj L, 2013, J SOFTW-EVOL PROC, V25, P575, DOI 10.1002/smr.539
   Gupta S, 2013, CONF PROC INT SYMP C, P3, DOI 10.1109/ICPC.2013.6613828
   Hindle A., 2011, P 8 WORK C MIN SOFTW, P163, DOI DOI 10.1145/1985441.1985466
   Howard MJ, 2013, IEEE WORK CONF MIN S, P377, DOI 10.1109/MSR.2013.6624052
   Kamiya T, 2002, IEEE T SOFTWARE ENG, V28, P654, DOI 10.1109/TSE.2002.1019480
   Kawrykow D, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P351, DOI 10.1145/1985793.1985842
   Koschke R, 2006, SCI COMPUT PROGRAM, V60, P171, DOI 10.1016/j.scico.2005.10.004
   Kuhn HW, 2005, NAV RES LOG, V52, P7, DOI 10.1002/nav.20053
   Lawrie D., 2011, 2011 IEEE 27th International Conference on Software Maintenance, P113, DOI 10.1109/ICSM.2011.6080778
   Lawrie D, 2006, SIXTH IEEE INTERNATIONAL WORKSHOP ON SOURCE CODE ANALYSIS AND MANIPULATION, PROCEEDINGS, P139
   Lawrie D, 2006, INT C PROGRAM COMPRE, P3, DOI 10.1109/ICPC.2006.51
   Lawrie D, 2007, INNOV SYST SOFTW ENG, V3, P303, DOI 10.1007/s11334-007-0031-2
   LEHMAN MM, 1980, P IEEE, V68, P1060, DOI 10.1109/PROC.1980.11805
   Levenshtein V. I., 1966, SOV PHYS DOKL, V10, P707
   Madani N, 2010, EUR CON SFTWR MTNCE, P68, DOI 10.1109/CSMR.2010.31
   Malpohl G, 2000, FIFTEENTH IEEE INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P73, DOI 10.1109/ASE.2000.873652
   Marcus A, 2008, IEEE T SOFTWARE ENG, V34, P287, DOI 10.1109/TSE.2007.70768
   Marcus M. P., 1993, Computational Linguistics, V19, P313, DOI DOI 10.21236/ADA273556
   MILLER GA, 1995, COMMUN ACM, V38, P39, DOI 10.1145/219717.219748
   Neamtiu J. F. I., 2005, P INT WORKSH MIN SOF, V30, P1, DOI [DOI 10.1145/1082983.1083143, 10.1145/1082983.1083143]
   PORTER MF, 1980, PROGRAM-AUTOM LIBR, V14, P130, DOI 10.1108/eb046814
   Poshyvanyk D, 2006, PROC IEEE INT CONF S, P469
   Santayana George., 1905, The Life of Reason: Introduction and Reason in Common Sense, V1
   Sheskin DJ., 2003, HDB PARAMETRIC NONPA, DOI [10.1201/9781420036268, DOI 10.1201/9781420036268]
   Strauss A.L., 2003, QUALITATIVE ANAL SOC
   Takang AA, 1996, J PROGRAM LANG, V4, P143
   Thummalapenta S, 2010, EMPIR SOFTW ENG, V15, P1, DOI 10.1007/s10664-009-9108-x
   Toutanova K, 2000, PROCEEDINGS OF THE 2000 JOINT SIGDAT CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING AND VERY LARGE CORPORA, P63, DOI 10.3115/1117794.1117802
   Weissgerber P, 2006, IEEE INT CONF AUTOM, P231
   Xing ZC, 2006, WORK CONF REVERSE EN, P263
   Zimmermann T., 2004, "International Workshop on Mining Software Repositories (MSR 2004)" W17S Workshop - 26th International Conference on Software Engineering, P2, DOI 10.1049/ic:20040466
   Zimmermann T, 2004, PROC INT CONF SOFTW, P563, DOI 10.1109/ICSE.2004.1317478
NR 58
TC 65
Z9 78
U1 0
U2 3
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAY
PY 2014
VL 40
IS 5
BP 502
EP 532
DI 10.1109/TSE.2014.2312942
PG 31
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA AJ8JW
UT WOS:000337950500005
DA 2024-07-18
ER

PT J
AU Leungwattanakit, W
   Artho, C
   Hagiya, M
   Tanabe, Y
   Yamamoto, M
   Takahashi, K
AF Leungwattanakit, Watcharin
   Artho, Cyrille
   Hagiya, Masami
   Tanabe, Yoshinori
   Yamamoto, Mitsuharu
   Takahashi, Koichi
TI Modular Software Model Checking for Distributed Systems
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Software model checking; software verification; distributed systems;
   checkpointing
AB Distributed systems are complex, being usually composed of several subsystems running in parallel. Concurrent execution and inter-process communication in these systems are prone to errors that are difficult to detect by traditional testing, which does not cover every possible program execution. Unlike testing, model checking can detect such faults in a concurrent system by exploring every possible state of the system. However, most model-checking techniques require that a system be described in a modeling language. Although this simplifies verification, faults may be introduced in the implementation. Recently, some model checkers verify program code at runtime but tend to be limited to stand-alone programs. This paper proposes cache-based model checking, which relaxes this limitation to some extent by verifying one process at a time and running other processes in another execution environment. This approach has been implemented as an extension of Java PathFinder, a Java model checker. It is a scalable and promising technique to handle distributed systems. To support a larger class of distributed systems, a checkpointing tool is also integrated into the verification system. Experimental results on various distributed systems show the capability and scalability of cache-based model checking.
C1 [Leungwattanakit, Watcharin; Yamamoto, Mitsuharu] Chiba Univ, Dept Math & Informat, Fac Sci, Inage Ward, Chiba 2630022, Japan.
   [Artho, Cyrille; Takahashi, Koichi] Natl Inst Adv Ind Sci & Technol ogy AIST, Res Inst Secure Syst, Amagasaki, Hyogo 6610974, Japan.
   [Hagiya, Masami] Univ Tokyo, Dept Comp Sci, Bunkyo Ku, Tokyo 1138656, Japan.
   [Tanabe, Yoshinori] Res Org Informat & Syst, Natl Inst Informat, Chiyoda Ku, Tokyo 1018430, Japan.
C3 Chiba University; National Institute of Advanced Industrial Science &
   Technology (AIST); University of Tokyo; Research Organization of
   Information & Systems (ROIS); National Institute of Informatics (NII) -
   Japan
RP Leungwattanakit, W (corresponding author), Chiba Univ, Dept Math & Informat, Fac Sci, Inage Ward, 1-3-3 Yayoicho, Chiba 2630022, Japan.
FU kaken-hi [23240003, 23300004]; Grants-in-Aid for Scientific Research
   [23300004, 23240003] Funding Source: KAKEN
FX This work was supported by kaken-hi grants 23240003 and 23300004. The
   authors would like to thank Eric Platon, Richard Potter, and Franz Weitl
   for their comments on the paper.
CR ACME Laboratories, 2013, THTTPD TIN TURB THRO
   [Anonymous], 2003, The Spin Model Checker: Primer and Reference Manual
   Ansel J, 2009, INT PARALL DISTRIB P, P895
   Artho C, 2004, LECT NOTES COMPUT SC, V3114, P462
   Artho C, 2008, LECT NOTES BUS INF P, V11, P22
   Artho C, 2006, IEEE INT CONF AUTOM, P177
   Artho C, 2009, IEEE INT CONF AUTOM, P447, DOI 10.1109/ASE.2009.43
   Ball T., 2001, Model Checking Software. 8th International SPIN Workshop. Proceedings (Lecture Notes in Computer Science Vol.2057), P103
   Ball T, 2001, LECT NOTES COMPUT SC, V2102, P260
   BARLAS E, 2007, P 22 IEEE ACM INT C, DOI [DOI 10.1145/1321631.1321638, 10.1145/1321631.1321638]
   Chaki S, 2002, ACM SIGPLAN NOTICES, V37, P45, DOI 10.1145/565816.503278
   Clarke EM, 1999, MODEL CHECKING, P1
   Corbett J. C., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, P439, DOI 10.1109/ICSE.2000.870434
   DIFFIE W, 1976, IEEE T INFORM THEORY, V22, P644, DOI 10.1109/TIT.1976.1055638
   Dike Jeff., 2006, USER MODE LINUX
   Elnozahy EN, 2002, ACM COMPUT SURV, V34, P375, DOI 10.1145/568522.568525
   Ghosh S., 2006, DISTRIBUTED SYSTEMS
   Godefroid P, 2005, FORM METHOD SYST DES, V26, P77, DOI 10.1007/s10703-005-1489-x
   Gosling J., 2005, Java Language Specification, Vthird
   Greeley R, 1974, GUIDEBOOK HAWAIIAN P
   Guo HY, 2011, SOSP 11: PROCEEDINGS OF THE TWENTY-THIRD ACM SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES, P265
   Havelund K., 2000, Int. J. Softw. Tools Technol. Transfer, V2, P366, DOI [DOI 10.1007/S100090050043, 10.1007/s100090050043]
   Henzinger T., 2003, P 10 SPINWORKSHOP MO
   JCraft Inc, 2013, JSCH JAV SEC CHANN
   KAMP PH, 2011, COMMUN ACM, V54, P44
   Kim KH, 2012, AUTOMAT SOFTW ENG, V19, P491, DOI 10.1007/s10515-012-0109-4
   Larsen K. G., 1997, International Journal on Software Tools for Technology Transfer, V1, P134, DOI 10.1007/s100090050010
   Leungwattanakit W., 2011, P IEEE ACM INT C AUT
   Leungwattanakit W., 2012, PROJECT NET IOCACHE
   Leungwattanakit W, 2009, PROC INT CONF SOFTW, P409, DOI 10.1109/ICSE-COMPANION.2009.5071036
   Lindholm Tim., 1999, JAVA VIRTUAL MACHINE, V2nd
   Lu S, 2008, ACM SIGPLAN NOTICES, V43, P329, DOI 10.1145/1353536.1346323
   MILNER R, 1992, INFORM COMPUT, V100, P1, DOI [10.1016/0890-5401(92)90008-4, 10.1016/0890-5401(92)90009-5]
   Musuvathi M., 2002, P 5 S OP SYST DES IM
   Musuvathi M., 2008, Proceedings of the 8th USENIX conference on Operating systems design and implementation, OSDI'08, P267
   Myers Glenford J., 2011, The Art of Software Testing
   Nakagawa Y., 2005, WORKSH DEP SOFTW TOO, P215
   Oracle, 2013, VIRT
   Qi ZW, 2008, PROCEEDINGS OF THE 2008 14TH IEEE INTERNATIONAL CONFERENCE ON PARALLEL AND DISTRIBUTED SYSTEMS, P493, DOI 10.1109/ICPADS.2008.73
   Rieker M., 2006, PROC PDPTA 06, P492
   Stallman R., 2002, DEBUGGING GD GNU SOU
   Stoller S. D., 2001, Model Checking Software. 8th International SPIN Workshop. Proceedings (Lecture Notes in Computer Science Vol.2057), P192
   Stultz J., 2012, POTENTIAL FIX LEAPSE
   Tanenbaum A.S., 1992, Modern Operating Systems
   Tretmans Jan, 2008, Formal Methods and Testing. An Outcome of the FORTEST Network. Revised Selected Papers, P1, DOI 10.1007/978-3-540-78917-8_1
   Visser W., 2003, Automated Software Engineering, V10, P203, DOI 10.1023/A:1022920129859
   Yang Y, 2008, TECHNICAL REPORT
   Yang Y, 2008, LECT NOTES COMPUT SC, V5156, P288, DOI 10.1007/978-3-540-85114-1_20
NR 48
TC 14
Z9 19
U1 0
U2 16
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAY
PY 2014
VL 40
IS 5
BP 483
EP 501
DI 10.1109/TSE.2013.49
PG 19
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA AJ8JW
UT WOS:000337950500004
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Galeotti, JP
   Rosner, N
   Pombo, CGL
   Frias, MF
AF Galeotti, Juan P.
   Rosner, Nicolas
   Lopez Pombo, Carlos G.
   Frias, Marcelo F.
TI TACO: Efficient SAT-Based Bounded Verification Using Symmetry Breaking
   and Tight Bounds
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Static analysis; SAT-based code analysis; Alloy; KodKod; DynAlloy
ID CHECKING
AB SAT-based bounded verification of annotated code consists of translating the code together with the annotations to a propositional formula, and analyzing the formula for specification violations using a SAT-solver. If a violation is found, an execution trace exposing the failure is exhibited. Code involving linked data structures with intricate invariants is particularly hard to analyze using these techniques. In this paper, we present Translation of Annotated COde (TACO), a prototype tool which implements a novel, general, and fully automated technique for the SAT-based analysis of JML-annotated Java sequential programs dealing with complex linked data structures. We instrument code analysis with a symmetry-breaking predicate which, on one hand, reduces the size of the search space by ignoring certain classes of isomorphic models and, on the other hand, allows for the parallel, automated computation of tight bounds for Java fields. Experiments show that the translations to propositional formulas require significantly less propositional variables, leading to an improvement of the efficiency of the analysis of orders of magnitude, compared to the noninstrumented SAT-based analysis. We show that in some cases our tool can uncover bugs that cannot be detected by state-of-the-art tools based on SAT-solving, model checking, or SMT-solving.
C1 [Galeotti, Juan P.] Univ Saarland, Dept Comp Sci, D-66123 Saarbrucken, Saarland, Germany.
   [Rosner, Nicolas; Lopez Pombo, Carlos G.] Univ Buenos Aires, Dept Comp Sci, FCEyN, RA-1053 Buenos Aires, DF, Argentina.
   [Rosner, Nicolas; Lopez Pombo, Carlos G.; Frias, Marcelo F.] Consejo Nacl Invest Cient & Tecn, RA-1033 Buenos Aires, DF, Argentina.
   [Frias, Marcelo F.] Inst Tecnol Buenos Aires, Buenos Aires, DF, Argentina.
C3 Saarland University; University of Buenos Aires; Consejo Nacional de
   Investigaciones Cientificas y Tecnicas (CONICET)
RP Galeotti, JP (corresponding author), Univ Saarland, Dept Comp Sci, Campus E1 1 Zimmer 1-13, D-66123 Saarbrucken, Saarland, Germany.
EM jgaleotti@dc.uba.ar; nrosner@dc.uba.ar; clpombo@dc.uba.ar;
   mfrias@itba.edu.ar
RI Pombo, Carlos Gustavo Lopez/AAU-4466-2021
OI Pombo, Carlos Gustavo Lopez/0000-0002-0248-5019
CR Andoni A., 2013, EVALUATING SMALL SCO
   [Anonymous], THESIS
   Babic Domagoj, 2008, P 30 INT C SOFTW ENG
   BARNETT M, 2005, LNCS, V4111, P364, DOI DOI 10.1007/11804192_17
   Belt J, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P355, DOI 10.1145/1595696.1595762
   Bouillaguet C, 2007, LECT NOTES COMPUT SC, V4349, P74
   Boyapati C., 2002, Software Engineering Notes, V27, P123, DOI 10.1145/566171.566191
   Chain P., 2005, FMCO LECT NOTES COMP, V4111, P342
   Clarke E, 2004, LECT NOTES COMPUT SC, V2988, P168, DOI 10.1007/978-3-540-24730-2_15
   Cohen E., 2009, P 22 INT C THEOR PRO
   Cook S. A., 1971, Proceedings of the 3rd annual ACM symposium on theory of computing, P151
   Cousot P., 1979, 6 ACM S PRINCIPLES P, P269, DOI DOI 10.1145/567752.567778
   de Moura L, 2008, LECT NOTES COMPUT SC, V4963, P337, DOI 10.1007/978-3-540-78800-3_24
   DEMILLO RA, 1978, COMPUTER, V11, P34, DOI 10.1109/C-M.1978.218136
   Deng XH, 2007, SEFM 2007: FIFTH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING AND FORMAL METHODS, PROCEEDINGS, P273, DOI 10.1109/SEFM.2007.33
   Dennis Greg, 2006, ISSTA, P109, DOI [10.1145/1146238.1146251, DOI 10.1145/1146238.1146251]
   Distefano D, 2006, LECT NOTES COMPUT SC, V3920, P287
   Distefano D, 2008, ACM SIGPLAN NOTICES, V43, P213, DOI 10.1145/1449955.1449782
   Dolby Julian, 2007, P 6 JOINT M EUR SOFT, P195
   Flanagan C, 2002, ACM SIGPLAN NOTICES, V37, P234, DOI 10.1145/543552.512558
   Frias MF, 2007, ACM T SOFTW ENG METH, V17, DOI 10.1145/1314493.1314497
   Frias MF, 2005, PROC INT CONF SOFTW, P442
   GALEOTTI JP, 2006, P IFIP WORK C SOFTW
   Galeotti Juan P., 2010, Proceedings of the Nineteenth International Symposium on Software Testing and Analysis, ISSTA 2010, Trento, Italy, July 12-16, 2010, P25, DOI [DOI 10.1145/1831708.1831712, 10.1145/1831708.1831712]
   Harel D., 2000, Dynamic Logic, Foundations of Computing
   Iosif R, 2002, LECT NOTES COMPUT SC, V2318, P22
   Ivancic F, 2005, LECT NOTES COMPUT SC, V3576, P301
   Jackson D., 2000, Software Engineering Notes, V25, P14, DOI 10.1145/347636.383378
   Jackson Daniel, 2006, Software abstractions: Logic, language, and analysis
   Khurshid S., 2004, Automated Software Engineering, V11, P403, DOI 10.1023/B:AUSE.0000038938.10589.b9
   Khurshid S, 2002, ACM SIGPLAN NOTICES, V37, P231, DOI 10.1145/583854.582441
   Khurshid S., 2003, P 6 INT C THEOR APPL, P272
   Leino K.R. M., 2008, Specification and verification of object-oriented software
   Ma YS, 2005, SOFTW TEST VERIF REL, V15, P97, DOI 10.1002/stvr.308
   Milicevic A., 2011, P 33 INT C SOFTW ENG
   Musuvathi M, 2005, LECT NOTES COMPUT SC, V3639, P28
   Rugina R, 2000, ACM SIGPLAN NOTICES, V35, P182, DOI 10.1145/358438.349325
   Siddiqui JH, 2009, LECT NOTES COMPUT SC, V5885, P88, DOI 10.1007/978-3-642-10373-5_5
   Tortak E, 2007, LECT NOTES COMPUT SC, V4424, P632
   Vaziri M, 2003, LECT NOTES COMPUT SC, V2619, P505
   Visser W., 2003, Automated Software Engineering, V10, P203, DOI 10.1023/A:1022920129859
   Visser W., 2006, P ACM SIGSOFT INT S, P37
   Visser W., 2010, COMMUNICATION
   Xie YC, 2007, ACM T PROGR LANG SYS, V29, DOI 10.1145/1232420.1232423
   [No title captured]
   [No title captured]
NR 46
TC 30
Z9 36
U1 0
U2 16
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD SEP
PY 2013
VL 39
IS 9
BP 1283
EP 1306
DI 10.1109/TSE.2013.15
PG 24
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 207ZG
UT WOS:000323643000008
OA Green Published
DA 2024-07-18
ER

PT J
AU Classen, A
   Cordy, M
   Schobbens, PY
   Heymans, P
   Legay, A
   Raskin, JF
AF Classen, Andreas
   Cordy, Maxime
   Schobbens, Pierre-Yves
   Heymans, Patrick
   Legay, Axel
   Raskin, Jean-Francois
TI Featured Transition Systems: Foundations for Verifying
   Variability-Intensive Systems and Their Application to LTL Model
   Checking
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Formal methods; model checking; verification; variability; features;
   software product lines
ID REQUIREMENTS
AB The premise of variability-intensive systems, specifically in software product line engineering, is the ability to produce a large family of different systems efficiently. Many such systems are critical. Thorough quality assurance techniques are thus required. Unfortunately, most quality assurance techniques were not designed with variability in mind. They work for single systems, and are too costly to apply to the whole system family. In this paper, we propose an efficient automata-based approach to linear time logic (LTL) model checking of variability-intensive systems. We build on earlier work in which we proposed featured transitions systems (FTSs), a compact mathematical model for representing the behaviors of a variability-intensive system. The FTS model checking algorithms verify all products of a family at once and pinpoint those that are faulty. This paper complements our earlier work, covering important theoretical aspects such as expressiveness and parallel composition as well as more practical things like vacuity detection and our logic feature LTL. Furthermore, we provide an in-depth treatment of the FTS model checking algorithm. Finally, we present SNIP, a new model checker for variability-intensive systems. The benchmarks conducted with SNIP confirm the speedups reported previously.
C1 [Classen, Andreas; Cordy, Maxime; Schobbens, Pierre-Yves; Heymans, Patrick] Univ Namur, B-5000 Namur, Belgium.
   [Heymans, Patrick] Univ Lille 1, INRIA Lille Nord Europe, CNRS, F-59655 Villeneuve Dascq, France.
   [Legay, Axel] IRISA INRIA Rennes, Rennes, France.
   [Legay, Axel] Univ Liege, B-4000 Liege, Belgium.
   [Raskin, Jean-Francois] Univ Libre Bruxelles, B-1050 Brussels, Belgium.
C3 University of Namur; Centre National de la Recherche Scientifique
   (CNRS); Universite de Lille; Universite de Rennes; University of Liege;
   Universite Libre de Bruxelles
RP Classen, A (corresponding author), Univ Namur, B-5000 Namur, Belgium.
EM acs@info.fundp.ac.be
RI Cordy, Maxime/O-3328-2019; Schobbens, Pierre-Yves/H-2333-2011
OI Cordy, Maxime/0000-0001-8312-1358; Schobbens,
   Pierre-Yves/0000-0001-8677-4485
FU FNRS; Interuniversity Attraction Poles Programme of the Belgian State,
   Belgian Science Policy (MoVES project); Belgian National Bank
FX The authors would like to thank the referees of [26] for their helpful
   comments and suggestions. This work was funded by the FNRS, the
   Interuniversity Attraction Poles Programme of the Belgian State, Belgian
   Science Policy (MoVES project), and the Belgian National Bank.
CR Acher Mathieu, 2009, Software Language Engineering. Second International Conference, SLE 2009. Revised Selected Papers, P62
   Alrajeh D, 2009, PROC INT CONF SOFTW, P265, DOI 10.1109/ICSE.2009.5070527
   [Anonymous], 1980, Lecture Notes in Computer Science
   [Anonymous], SPLC INT C SOFTW PRO
   [Anonymous], 2001, LECT NOTES COMPUTER
   Apel S., 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P372, DOI 10.1109/ASE.2011.6100075
   Apel Sven, 2010, Proceedings of the 2010 IEEE 21st International Symposium on Software Reliability Engineering (ISSRE 2010), P161, DOI 10.1109/ISSRE.2010.11
   Asirelli P., 2010, PROC FOURTH INTL WOR, P36
   Asirelli P., 2009, VAMOS, P71
   Asirelli P, 2010, LECT NOTES COMPUT SC, V6396, P43, DOI 10.1007/978-3-642-16265-7_5
   Bachmann F., 2003, PFE 03 PROC 5 INT WO, P66
   Baier C, 2008, PRINCIPLES OF MODEL CHECKING, P1
   Batory D, 2005, LECT NOTES COMPUT SC, V3714, P7
   Beer I, 2001, FORM METHOD SYST DES, V18, P141, DOI 10.1023/A:1008779610539
   Boucher Q., 2010, Proceedings of the International Conference on Automated Software Engineering, ASE '10, P333
   Bruns G, 2004, LECT NOTES COMPUT SC, V3142, P281
   BRYANT RE, 1992, COMPUT SURV, V24, P293, DOI 10.1145/136035.136043
   Calder M, 2003, COMPUT NETW, V41, P115, DOI 10.1016/S1389-1286(02)00352-3
   Chechik M, 2003, ACM T SOFTW ENG METH, V12, P371, DOI 10.1145/990010.990011
   Chechik M., 2001, Model Checking Software. 8th International SPIN Workshop. Proceedings (Lecture Notes in Computer Science Vol.2057), P16
   Clarke EM, 1999, MODEL CHECKING, P1
   Classen Andreas, 2012, International Journal on Software Tools for Technology Transfer, V14, P589, DOI 10.1007/s10009-012-0234-1
   Classen A., 2011, THESIS
   Classen A., 2010, ICSE 10, V1, P335, DOI DOI 10.1145/1806799.1806850
   Classen A., 2010, TECHNICAL REPORT P C
   Classen A, 2008, LECT NOTES COMPUT SC, V4961, P16, DOI 10.1007/978-3-540-78743-3_2
   Classen A, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P321, DOI 10.1145/1985793.1985838
   Classen A, 2011, SCI COMPUT PROGRAM, V76, P1130, DOI 10.1016/j.scico.2010.10.005
   Classen A, 2009, PROC INT CONF SOFTW, P227, DOI 10.1109/ICSE-COMPANION.2009.5070988
   Coffman E. G.  Jr., 1971, Computing Surveys, V3, P67, DOI 10.1145/356586.356588
   Courcoubetis C., 1992, Formal Methods in System Design, V1, P275, DOI 10.1007/BF00121128
   Czarnecki K, 2005, LECT NOTES COMPUT SC, V3676, P422
   Czarnecki K., 2006, GPCE, P211
   De Wulf M, 2006, LECT NOTES COMPUT SC, V4144, P17, DOI 10.1007/11817963_5
   Ebert C, 2009, COMPUTER, V42, P42, DOI 10.1109/MC.2009.118
   Fantechi A, 2008, SPLC 2008: 12TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE, PROCEEDINGS, P193, DOI 10.1109/SPLC.2008.45
   Fantechi A., 2007, ESEC FSE 07, P521
   Fischbein D., 2006, ROSATEA 06, P39
   Gastin P, 2001, LECT NOTES COMPUT SC, V2102, P53
   Gruler A, 2008, LECT NOTES COMPUT SC, V5051, P113, DOI 10.1007/978-3-540-68863-1_8
   Gurfinkel A, 2003, LECT NOTES COMPUT SC, V2761, P266
   Holzmann GJ, 2004, The SPIN model checker: primer and reference manual, V1003
   Jackson D, 2002, ACM T SOFTW ENG METH, V11, P256, DOI 10.1145/505145.505149
   Kästner C, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P311, DOI 10.1145/1368088.1368131
   Kang Kyo C, 1990, Technical Report
   Kastner C., 2011, PROC INTL CONF FEATU, P5
   KATZ S, 1993, ACM T PROGR LANG SYS, V15, P337, DOI 10.1145/169701.169682
   Kim CHP, 2010, LECT NOTES COMPUT SC, V6418, P285, DOI 10.1007/978-3-642-16612-9_22
   KRAMER J, 1983, IEE PROC-E, V130, P1, DOI 10.1049/ip-e.1983.0001
   LARSEN KG, 1990, LECT NOTES COMPUT SC, V407, P232
   Lauenroth K, 2009, IEEE INT CONF AUTOM, P269, DOI 10.1109/ASE.2009.16
   Li H., 2002, Software Engineering Notes, V27, P89, DOI 10.1145/605466.605481
   Liebig Jorg, 2010, P 32 ACM IEEE INT C, V1, P105
   Liu J, 2007, J SYST SOFTWARE, V80, P1879, DOI 10.1016/j.jss.2007.01.047
   Magee Jeff., 2006, CONCURRENCY STATE MO
   Mendonca Marcilio, 2009, SPLC' 09, P231
   Morin B, 2009, PROC INT CONF SOFTW, P122, DOI 10.1109/ICSE.2009.5070514
   Muschevici R., 2010, PROC FIRST INTL WORK
   Northrop L., 2001, SOFTWARE PRODUCT LIN
   Nyman U, 2007, LECT NOTES COMPUT SC, V4421, P64
   Papadimitriou C. H., 1994, Computational Complexity
   Parnas D. L., 1976, IEEE Transactions on Software Engineering, VSe-2, P1, DOI 10.1109/TSE.1976.233797
   Peled D., 1993, Computer Aided Verification. 5th International Conference, CAV '93 Proceedings, P409
   Plath M, 2001, SCI COMPUT PROGRAM, V41, P53, DOI 10.1016/S0167-6423(00)00018-6
   Pnueli A., 1977, 18th Annual Symposium on Foundations of Computer Science, P46, DOI 10.1109/SFCS.1977.32
   Pohl K., 2005, SOFTWARE PRODUCT LIN, V10
   Schobbens PY, 2006, RE'06: 14TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, PROCEEDINGS, P139
   SISTLA AP, 1985, J ACM, V32, P733, DOI 10.1145/3828.3837
   Tarski A., 1955, PAC J MATH, V5, P285, DOI DOI 10.2140/PJM.1955.5.285
   van der Aalst WMP, 2008, LECT NOTES COMPUT SC, V4961, P46, DOI 10.1007/978-3-540-78743-3_4
   Vardi M. Y., 1986, Proceedings of the Symposium on Logic in Computer Science (Cat. No.86CH2321-8), P332
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
   Ziadi T, 2004, LECT NOTES COMPUT SC, V3014, P129
NR 73
TC 148
Z9 153
U1 0
U2 13
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD AUG
PY 2013
VL 39
IS 8
BP 1069
EP 1089
DI 10.1109/TSE.2012.86
PG 21
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 191BU
UT WOS:000322388400003
DA 2024-07-18
ER

PT J
AU Alrajeh, D
   Kramer, J
   Russo, A
   Uchitel, S
AF Alrajeh, Dalal
   Kramer, Jeff
   Russo, Alessandra
   Uchitel, Sebastian
TI Elaborating Requirements Using Model Checking and Inductive Learning
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Requirements elaboration; goal operationalization; behavior model
   refinement; model checking; inductive learning
ID OPERATIONAL REQUIREMENTS; BEHAVIOR MODELS; GOAL
AB The process of Requirements Engineering (RE) includes many activities, from goal elicitation to requirements specification. The aim is to develop an operational requirements specification that is guaranteed to satisfy the goals. In this paper, we propose a formal, systematic approach for generating a set of operational requirements that are complete with respect to given goals. We show how the integration of model checking and inductive learning can be effectively used to do this. The model checking formally verifies the satisfaction of the goals and produces counterexamples when incompleteness in the operational requirements is detected. The inductive learning process then computes operational requirements from the counterexamples and user-provided positive examples. These learned operational requirements are guaranteed to eliminate the counterexamples and be consistent with the goals. This process is performed iteratively until no goal violation is detected. The proposed framework is a rigorous, tool-supported requirements elaboration technique which is formally guided by the engineer's knowledge of the domain and the envisioned system.
C1 [Alrajeh, Dalal; Kramer, Jeff; Russo, Alessandra; Uchitel, Sebastian] Univ London Imperial Coll Sci Technol & Med, Dept Comp, London SW7 2AZ, England.
   [Uchitel, Sebastian] Univ Buenos Aires, Dept Comp, FCEyN, Buenos Aires, DF, Argentina.
C3 Imperial College London; University of Buenos Aires
RP Alrajeh, D (corresponding author), Univ London Imperial Coll Sci Technol & Med, Dept Comp, 180 Queens Gate, London SW7 2AZ, England.
EM dalal.alrajeh@imperial.ac.uk; j.kramer@imperial.ac.uk;
   a.russo@imperial.ac.uk; s.uchitel@imperial.ac.uk
OI Uchitel, Sebastian/0000-0001-9352-1478; Russo,
   Alessandra/0000-0002-3318-8711
FU ERC [204853]; EPSRC [EP/E025188/1] Funding Source: UKRI; European
   Research Council (ERC) [204853] Funding Source: European Research
   Council (ERC)
FX The authors acknowledge financial support for this work from the ERC
   project PBM-FIMBSE (No. 204853).
CR Alrajeh D, 2010, FORM ASP COMPUT, V22, P217, DOI 10.1007/s00165-009-0128-5
   Alrajeh D, 2009, J APPL LOGIC, V7, P275, DOI 10.1016/j.jal.2008.10.002
   Alrajeh D., 2010, THESIS IMPERIAL COLL
   Alrajeh D., 2006, P 16 INT C IND LOG P, P63
   Alrajeh D, 2009, PROC INT CONF SOFTW, P265, DOI 10.1109/ICSE.2009.5070527
   [Anonymous], 1992, TEMPORAL LOGIC REACT, DOI DOI 10.1007/978-1-4612-0931-7
   [Anonymous], 2006, Proceedings of the 14th ACM SIGSOFT international symposium on Foundations of software engineering, SIGSOFT '06/FSE-14
   [Anonymous], 1995, ICLP
   [Anonymous], 1999, Concurrency-state models and Java programs
   Anton A.I., 1997, GOAL IDENTIFICATION
   Cimatti A., 2002, Computer Aided Verification. 14th International Conference, CAV 2002. Proceedings (Lecture Notes in Computer Science Vol.2404), P359
   Clark KL., 1987, READINGS NONMONOTONI, P311
   Corapi D, 2010, LEIBNIZ INT PR INFOR, V7, P54, DOI 10.4230/LIPIcs.ICLP.2010.54
   Damas C, 2005, IEEE T SOFTWARE ENG, V31, P1056, DOI 10.1109/TSE.2005.138
   DARDENNE A, 1993, SCI COMPUT PROGRAM, V20, P3, DOI 10.1016/0167-6423(93)90021-G
   Darimont R., 1996, Software Engineering Notes, V21, P179, DOI 10.1145/250707.239131
   de Roever W.P., 1990, P IFIP WG6 1 9 INT S, VIX, P37
   Fidjeland A, 2002, 2002 IEEE INTERNATIONAL CONFERENCE ON FIELD-PROGRAMMABLE TECHNOLOGY (FPT), PROCEEDINGS, P252, DOI 10.1109/FPT.2002.1188689
   Finkelstein A., 1996, Proceedings of the 8th International Workshop on Software Specification and Design, P2, DOI 10.1109/IWSSD.1996.501141
   Fuxman A, 2004, REQUIR ENG, V9, P132, DOI 10.1007/s00766-004-0191-7
   Fuxman A, 2001, FIFTH IEEE INTERNATIONAL SYMPOSIUM ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P174
   Gelfound M., 1988, Logic Programming: Proceedings of the Fifth International Conference and Symposium, P1070
   Giannakopoulou D., 2003, Software Engineering Notes, V28, P257, DOI 10.1145/949952.940106
   GIANNAKOPOULOU D, 1999, THESIS IMPERIAL COLL
   JACKSON M, 1995, PROC INT CONF SOFTW, P283, DOI 10.1145/225014.225041
   KELLER RM, 1976, COMMUN ACM, V19, P371, DOI 10.1145/360248.360251
   KOWALSKI R, 1986, NEW GENERAT COMPUT, V4, P67, DOI 10.1007/BF03037383
   KOYMANS R, 1992, SPECIFYING MESSAGE P
   KRAMER J, 1983, IEE PROC-E, V130, P1, DOI 10.1049/ip-e.1983.0001
   Letier E., 2002, Software Engineering Notes, V27, P119, DOI 10.1145/605466.605485
   Letier E, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P83, DOI 10.1109/ICSE.2002.1007958
   LETIER E, 2001, THESIS U CATHOLIQUE
   Letier E., 2002, TECHNICAL REPORT
   Letier E, 2008, AUTOMAT SOFTW ENG, V15, P175, DOI 10.1007/s10515-008-0027-7
   Lloyd J. W., 1984, Foundations of Logic Programming
   Ma JF, 2008, AUTON AGENT MULTI-AG, V16, P271, DOI 10.1007/s10458-008-9028-y
   Mitchell T. M., 1997, MACHINE LEARNING
   MUGGLETON S, 1995, NEW GENERAT COMPUT, V13, P245, DOI 10.1007/BF03037227
   MUGGLETON S, 1994, J LOGIC PROGRAM, V20, P629, DOI 10.1016/0743-1066(94)90035-3
   MYLOPOULOS J, 1992, IEEE T SOFTWARE ENG, V18, P483, DOI 10.1109/32.142871
   Patrizi F., 2011, P 22 INT JOINT C ART, P2003
   Ray O., 2006, P WORKSH ABD IND AI
   Ray O, 2004, LOG J IGPL, V12, P371, DOI 10.1093/jigpal/12.5.371
   Ray O, 2009, J APPL LOGIC, V7, P329, DOI 10.1016/j.jal.2008.10.007
   Rifaut A, 2003, 11TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, PROCEEDINGS, P350
   Rolland C, 1998, IEEE T SOFTWARE ENG, V24, P1055, DOI 10.1109/32.738339
   Rolland C, 1999, IEEE INTERNATIONAL SYMPOSIUM ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P74, DOI 10.1109/ISRE.1999.777987
   Sibay G, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P41, DOI 10.1145/1368088.1368095
   Sutcliffe AG, 1998, IEEE T SOFTWARE ENG, V24, P1072, DOI 10.1109/32.738340
   Uchitel S, 2009, IEEE T SOFTWARE ENG, V35, P384, DOI 10.1109/TSE.2008.107
   van Lamsweerde A, 2001, FIFTH IEEE INTERNATIONAL SYMPOSIUM ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P249
   van Lamsweerde A, 1998, IEEE T SOFTWARE ENG, V24, P1089, DOI 10.1109/32.738341
NR 52
TC 23
Z9 24
U1 0
U2 12
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAR
PY 2013
VL 39
IS 3
BP 361
EP 383
DI 10.1109/TSE.2012.41
PG 23
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 098CA
UT WOS:000315520700005
DA 2024-07-18
ER

PT J
AU Shahbazi, A
   Tappenden, AF
   Miller, J
AF Shahbazi, Ali
   Tappenden, Andrew F.
   Miller, James
TI Centroidal Voronoi Tessellations- A New Approach to Random Testing
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Adaptive random testing; centroidal Voronoi tessellation; P-measure;
   random testing; software testing; test case generation; test strategies
ID PROPORTIONAL SAMPLING STRATEGY; SEQUENCE; DISPERSION
AB Although Random Testing (RT) is low cost and straightforward, its effectiveness is not satisfactory. To increase the effectiveness of RT, researchers have developed Adaptive Random Testing (ART) and Quasi-Random Testing (QRT) methods which attempt to maximize the test case coverage of the input domain. This paper proposes the use of Centroidal Voronoi Tessellations (CVT) to address this problem. Accordingly, a test case generation method, namely, Random Border CVT (RBCVT), is proposed which can enhance the previous RT methods to improve their coverage of the input space. The generated test cases by the other methods act as the input to the RBCVT algorithm and the output is an improved set of test cases. Therefore, RBCVT is not an independent method and is considered as an add-on to the previous methods. An extensive simulation study and a mutant-based software testing investigation have been performed to demonstrate the effectiveness of RBCVT against the ART and QRT methods. Results from the experimental frameworks demonstrate that RBCVT outperforms previous methods. In addition, a novel search algorithm has been incorporated into RBCVT reducing the order of computational complexity of the new approach. To further analyze the RBCVT method, randomness analysis was undertaken demonstrating that RBCVT has the same characteristics as ART methods in this regard.
C1 [Shahbazi, Ali; Miller, James] Univ Alberta, Dept Elect & Comp Engn, Edmonton, AB T6G 2V4, Canada.
   [Tappenden, Andrew F.] Kings Univ Coll, Dept Comp Sci, Edmonton, AB T6B 2H3, Canada.
C3 University of Alberta; Western University (University of Western
   Ontario)
RP Shahbazi, A (corresponding author), Univ Alberta, Dept Elect & Comp Engn, 9107 116st, Edmonton, AB T6G 2V4, Canada.
EM ali.shahbazi@ualberta.ca; andrew.tappenden@kingsu.ca; jm@ece.ualberta.ca
CR AGRAWAL VD, 1978, IEEE T COMPUT, V27, P1054, DOI 10.1109/TC.1978.1674994
   AMMANN PE, 1988, IEEE T COMPUT, V37, P418, DOI 10.1109/12.2185
   [Anonymous], 1989, Kolmogorov Complexity and Its Applications
   [Anonymous], 2005, MODELING UNCERTAINTY, DOI DOI 10.1007/0-306-48102-2_20
   [Anonymous], 1990, SIGMOD, DOI DOI 10.1145/93597.98741
   Arcuri Andrea., 2011, ISSTA
   Bati H., 2007, P 33 INT C VER LARG, P1243
   Becker L. A., 2000, Effect size (ES)
   BERTOLINO A, 1994, IEEE T SOFTWARE ENG, V20, P885, DOI 10.1109/32.368137
   BISHOP PG, 1993, FTCS-23 - TWENTY-THIRD INTERNATIONAL SYMPOSIUM ON FAULT-TOLERANT COMPUTING : DIGEST OF PAPERS, P98, DOI 10.1109/FTCS.1993.627312
   Chan FT, 1996, INFORM SOFTWARE TECH, V38, P775, DOI 10.1016/0950-5849(96)01103-2
   Chan K., 2006, P 7 INT C SOFTW QUAL, P321
   Chan KP, 2006, P INT COMP SOFTW APP, P485
   Chen TY, 2006, 2006 AUSTRALIAN SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P300
   Chen TY, 2006, LECT NOTES COMPUT SC, V4006, P155
   Chen T. Y., 2007, P 40 ANN HAW INT C S, p262a
   Chen T. Y., 2005, P 9 AS COMP SCI C AD, P3156
   Chen TY, 2007, INT J SOFTW ENG KNOW, V17, P805, DOI 10.1142/S0218194007003501
   Chen TY, 2007, IEEE T RELIAB, V56, P562, DOI 10.1109/TR.2007.903293
   Chen TY, 2006, J SYST SOFTWARE, V79, P591, DOI 10.1016/j.jss.2005.05.029
   Chen TY, 2009, J SYST SOFTWARE, V82, P1419, DOI 10.1016/j.jss.2009.05.017
   Chen TY, 2004, 11TH ASIA-PACIFIC SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P292, DOI 10.1109/APSEC.2004.17
   Chen TY, 2004, QSIC 2004: PROCEEDINGS OF THE FOURTH INTERNATIONAL CONFERENCE ON QUALITY SOFTWARE, P79
   Chen TY, 2001, J SYST SOFTWARE, V58, P65, DOI 10.1016/S0164-1212(01)00028-0
   Chi HM, 2006, PROCEEDINGS OF THE 2006 WINTER SIMULATION CONFERENCE, VOLS 1-5, P975, DOI 10.1109/WSC.2006.323184
   Ciupa I, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P71, DOI 10.1145/1368088.1368099
   COHEN J, 1992, PSYCHOL BULL, V112, P155, DOI 10.1037/0033-2909.112.1.155
   Cohen J., 1988, STAT POWER ANAL BEHA
   Du Q, 1999, SIAM REV, V41, P637, DOI 10.1137/S0036144599352836
   DURAN JW, 1984, IEEE T SOFTWARE ENG, V10, P438, DOI 10.1109/TSE.1984.5010257
   Everett H, 2009, DISCRETE COMPUT GEOM, V42, P94, DOI 10.1007/s00454-009-9173-3
   FAURE H, 1981, B SOC MATH FR, V109, P143
   FINELLI GB, 1991, RELIAB ENG SYST SAFE, V32, P155, DOI 10.1016/0951-8320(91)90052-9
   Forrester J.E., 2000, Proceedings of the 4th conference on USENIX Windows Systems Symposium, V4, P6
   FOX BL, 1986, ACM T MATH SOFTWARE, V12, P362, DOI 10.1145/22721.356187
   Godefroid P, 2005, ACM SIGPLAN NOTICES, V40, P213, DOI 10.1145/1064978.1065036
   Godefroid P., 2007, P 2 INT WORKSHOP RAN, P1, DOI [DOI 10.1145/1292414.1292416, 10.1145/1292414.1292416.]
   Godefroid P, 2008, ACM SIGPLAN NOTICES, V43, P206, DOI 10.1145/1379022.1375607
   HALTON JH, 1964, COMMUN ACM, V7, P701, DOI 10.1145/355588.365104
   Jones C., 2011, SOFTWARE QUALITY 201
   Ju L, 2002, PARALLEL COMPUT, V28, P1477, DOI 10.1016/S0167-8191(02)00151-5
   Kuo FC, 2009, INT CONF QUAL SOFTW, P51, DOI 10.1109/QSIC.2009.15
   Kwok Ping Chan, 2004, Proceedings of the 28th Annual International Computer Software and Applications Conference. COMPSAC 2004, P78
   Li M, 2004, IEEE T INFORM THEORY, V50, P3250, DOI 10.1109/TIT.2004.838101
   LIPNER S., 2005, TRUSTWORTHY COMPUTIN
   LOO PS, 1988, INFORM SOFTWARE TECH, V30, P402, DOI 10.1016/0950-5849(88)90037-7
   Ma YS, 2005, SOFTW TEST VERIF REL, V15, P97, DOI 10.1002/stvr.308
   Marré M, 2003, IEEE T SOFTWARE ENG, V29, P974, DOI 10.1109/TSE.2003.1245299
   Mayer J., 2006, P 5 ACM IEEE INT S E, P105
   Mayer J., 2005, P 20 IEEEACM INT C A, P333, DOI DOI 10.1145/1101908
   Mayer J, 2006, LECT NOTES COMPUT SC, V3997, P72
   Meyer M.J., 2012, MARTINGALE JAVA STOC
   Miller BartonP., 2006, RT 06, P46, DOI 10.1145/1145735.1145743
   Morse Jr K. G., 2005, LINUX J, V2005, P62
   NIEDERREITER H, 1988, J NUMBER THEORY, V30, P51, DOI 10.1016/0022-314X(88)90025-X
   Okabe Atsuyuki., 2008, Spatial Tessellations: Concepts and Applications of Voronoi Diagrams
   Pacheco C, 2007, PROC INT CONF SOFTW, P75
   Pacheco Carlos., 2008, International Symposium on Software Testing and Analysis (ISSTA), P87
   PEART P, 1982, MONATSH MATH, V94, P249, DOI 10.1007/BF01295787
   Salomon David., 2007, Data compression: the complete reference, Volume, V10
   Schlier C, 2008, APPL NUMER MATH, V58, P1467, DOI 10.1016/j.apnum.2007.09.001
   SCHNECK PB, 1979, IEEE T COMPUT, V28, P580
   Schneckenburger C., 2007, P 4 INT WORKSH SOFTW, P90
   Slutz D., 1998, Proceedings of the Twenty-Fourth International Conference on Very-Large Databases, P618
   Sobo I., 1976, USSR J. Comput. Math. Math. Phys. Engl. Transl, V16, P1332, DOI DOI 10.1016/0041-5553(76)90154-3
   Tappenden AF, 2009, IEEE T RELIAB, V58, P619, DOI 10.1109/TR.2009.2034288
   WHITE LJ, 1980, IEEE T SOFTWARE ENG, V6, P247, DOI 10.1109/TSE.1980.234486
   Yoshikawa T, 2003, THIRD INTERNATIONAL CONFERENCE ON QUALITY SOFTWARE, PROCEEDINGS, P20, DOI 10.1109/QSIC.2003.1319081
NR 68
TC 50
Z9 55
U1 0
U2 15
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD FEB
PY 2013
VL 39
IS 2
BP 163
EP 183
DI 10.1109/TSE.2012.18
PG 21
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 079ML
UT WOS:000314174500003
DA 2024-07-18
ER

PT J
AU Hall, T
   Beecham, S
   Bowes, D
   Gray, D
   Counsell, S
AF Hall, Tracy
   Beecham, Sarah
   Bowes, David
   Gray, David
   Counsell, Steve
TI A Systematic Literature Review on Fault Prediction Performance in
   Software Engineering
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Review
DE Systematic literature review; software fault prediction
ID STATIC CODE ATTRIBUTES; DEFECT-PREDICTION; QUANTITATIVE-ANALYSIS;
   EMPIRICAL VALIDATION; DESIGN METRICS; PRONE CLASSES; MODELS; QUALITY;
   IDENTIFICATION; RELIABILITY
AB Background: The accurate prediction of where faults are likely to occur in code can help direct test effort, reduce costs, and improve the quality of software. Objective: We investigate how the context of models, the independent variables used, and the modeling techniques applied influence the performance of fault prediction models. Method: We used a systematic literature review to identify 208 fault prediction studies published from January 2000 to December 2010. We synthesize the quantitative and qualitative results of 36 studies which report sufficient contextual and methodological information according to the criteria we develop and apply. Results: The models that perform well tend to be based on simple modeling techniques such as Naive Bayes or Logistic Regression. Combinations of independent variables have been used by models that perform well. Feature selection has been applied to these combinations when models are performing particularly well. Conclusion: The methodology used to build models seems to be influential to predictive performance. Although there are a set of fault prediction studies in which confidence is possible, more studies are needed that use a reliable methodology and which report their context, methodology, and performance comprehensively.
C1 [Hall, Tracy; Counsell, Steve] Brunel Univ, Dept Informat Syst & Comp, Uxbridge UB8 3PH, Middx, England.
   [Beecham, Sarah] Univ Limerick, Lero Irish Software Engn Res Ctr, Limerick, Ireland.
   [Bowes, David; Gray, David] Univ Hertfordshire, Sci & Technol Res Inst, Hatfield AL10 9AB, Herts, England.
C3 Brunel University; University of Limerick; University of Hertfordshire
RP Hall, T (corresponding author), Brunel Univ, Dept Informat Syst & Comp, Uxbridge UB8 3PH, Middx, England.
EM tracy.hall@brunel.ac.uk; sarah.beecham@lero.ie; d.h.bowes@herts.ac.uk;
   d.gray@herts.ac.uk; steve.counsell@brunel.ac.uk
RI Beecham, Simon C/M-1544-2016
OI Bowes, David/0000-0001-7014-2811; Hall, Tracy/0000-0002-2728-9014
FU United Kingdom's Engineering and Physical Science Research Council
   [EPSRC EP/E063039/1]; Science Foundation Ireland [3/CE2/I303_1]; EPSRC
   [EP/E055141/1] Funding Source: UKRI
FX The authors are grateful to the United Kingdom's Engineering and
   Physical Science Research Council who supported this research at Brunel
   University under grant EPSRC EP/E063039/1 and to Science Foundation
   Ireland grant 3/CE2/I303_1 who partially supported this work at Lero.
   They are also grateful to Dr. Sue Black and Dr. Paul Wernick who
   provided input to the early stages of the work reported in this paper
   and to Professor Martin Shepperd for his suggestions throughout the
   work. They are also grateful for the detailed and insightful comments
   from the reviewers that enabled them to significantly improve the
   quality of this paper.
CR Abreu R, 2009, IWPSE-EVOL 09: ERCIM WORKSHOP ON SOFTWARE EVOLUTION (EVOL) AND INTERNATIONAL WORKSHOP ON PRINCIPLES OF SOFTWARE EVOLUTION (IWPSE), P153
   Afkal W, 2008, INMIC: 2008 INTERNATIONAL MULTITOPIC CONFERENCE, P349, DOI 10.1109/INMIC.2008.4777762
   Afzal Wasif, 2008, 2008 The Third International Conference on Software Engineering Advances (ICSEA), P407, DOI 10.1109/ICSEA.2008.9
   Afzal W, 2010, ASIA PAC SOFWR ENG, P414, DOI 10.1109/APSEC.2010.54
   Amasaki S, 2003, ISSRE 2003: 14TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P215, DOI 10.1109/ISSRE.2003.1251044
   Andersson C, 2007, IEEE T SOFTWARE ENG, V33, P273, DOI 10.1109/TSE.2007.1005
   [Anonymous], ADV MACHINE LEARNER
   [Anonymous], P INT C PRED MOD SOF
   [Anonymous], 2006, Proceedings of the 14th ACM SIGSOFT international symposium on Foundations of software engineering (SIGSOFT '06/FSE-14), DOI 10.1145/1181775.1181781
   [Anonymous], 2007, Proceedings of the 3rd International Workshop on Predictor Models in Software Engineering
   [Anonymous], INTRO SUPPORT VECTOR
   [Anonymous], 2006, ISESE '06: Proceedings of the 5th International Symposium on Empirical Software Engineering. Volume II: Short Papers and Posters, DOI DOI 10.1145/1159733.1159739.
   [Anonymous], 2010, SDM'10, DOI [10.1137/1.9781611972801.67, DOI 10.1137/1.9781611972801.67]
   [Anonymous], 2007, PROMISE 07, DOI DOI 10.1109/PROMISE.2007.10
   [Anonymous], 2008, Proceedings of the 4th International Workshop on Predictor Models in Software Engineering, PROMISE '08
   Arisholm E., 2006, ISESE 06 P 2006 ACMI, P8
   Arisholm E, 2007, ISSRE 2007: 18TH IEEE INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P215, DOI 10.1109/ISSRE.2007.22
   Arisholm E, 2010, J SYST SOFTWARE, V83, P2, DOI 10.1016/j.jss.2009.06.055
   Armour PG, 2004, COMMUN ACM, V47, P21, DOI 10.1145/971617.971635
   Ayewah N, 2007, PASTE'07 PROCEEDINGS OF THE 2007 ACM SIGPLAN- SIGSOFT WORKSHOP ON PROGRAM ANALYSIS FOR SOFTWARE TOOLS & ENGINEERING, P1, DOI 10.1145/1251535.1251536
   Batista G. E., 2004, ACM SIGKDD EXPL NEWS, V6, P20, DOI DOI 10.1145/1007730.1007735
   Bell R., 2006, Proc. 2006 International Symposium on Software Testing and Analysis, P61
   Bellini P, 2005, IEEE INT C ENG COMP, P205
   Bernstein A., 2007, 9 INT WORKSHOP PRINC, P11
   Bezerra MER, 2007, IEEE IJCNN, P2874
   Bibi S, 2006, I C COMP SYST APPLIC, P330, DOI 10.1109/AICCSA.2006.205110
   Binkley D, 2007, TAIC PART 2007 - TESTING: ACADEMIC AND INDUSTRIAL CONFERENCE - PRACTICE AND RESEARCH TECHNIQUES, PROCEEDINGS, P99, DOI 10.1109/TAIC.PART.2007.10
   Binkley D, 2009, J SYST SOFTWARE, V82, P1793, DOI 10.1016/j.jss.2009.06.036
   Bird Christian, 2009, 2009 20th International Symposium on Software Reliability Engineering (ISSRE 2009), P109, DOI 10.1109/ISSRE.2009.17
   Bowes D., 2011, 510 U HERTF
   Bowes D., 2011, 209 U HERTF
   Briand LC, 2002, IEEE T SOFTWARE ENG, V28, P706, DOI 10.1109/TSE.2002.1019484
   Çaglayan B, 2009, 2009 ICSE WORKSHOP ON EMERGING TRENDS IN FREE-LIBRE-OPEN SOURCE SOFTWARE RESEARCH AND DEVELOPMENT, P31, DOI 10.1109/FLOSS.2009.5071357
   Calikli Gul, 2009, 2009 24th International Symposium on Computer and Information Sciences (ISCIS), P531, DOI 10.1109/ISCIS.2009.5291866
   Catal C, 2007, DEPCOS - RELCOMEX '07: INTERNATIONAL CONFERENCE ON DEPENDABILITY OF COMPUTER SYSTEMS, PROCEEDINGS, P238, DOI 10.1109/DEPCOS-RELCOMEX.2007.8
   Catal C, 2009, EXPERT SYST APPL, V36, P7346, DOI 10.1016/j.eswa.2008.10.027
   Ceylan E, 2006, EUROMICRO CONF PROC, P240, DOI 10.1109/EUROMICRO.2006.56
   Challagulla VUB, 2006, PROC INT C TOOLS ART, P39
   Challagulla VUB, 2005, WORDS 2005: 10TH IEEE INTERNATIONAL WORKSHOP ON OBJECT-ORIENTED REAL-TIME DEPENDABLE, PROCEEDINGS, P263, DOI 10.1109/WORDS.2005.32
   Cong Jin, 2010, Proceedings of the 2010 Second International Conference on Multimedia and Information Technology (MMIT 2010), P44, DOI 10.1109/MMIT.2010.11
   Cruz A. E. C., 2010, 2010 32nd International Conference on Software Engineering (ICSE), P361, DOI 10.1145/1810295.1810393
   Cruz AEC, 2009, INT SYMP EMP SOFTWAR, P461
   Cruzes DS, 2011, INFORM SOFTWARE TECH, V53, P440, DOI 10.1016/j.infsof.2011.01.004
   D'Ambros Marco, 2010, Proceedings of the 2010 7th IEEE Working Conference on Mining Software Repositories (MSR 2010), P31, DOI 10.1109/MSR.2010.5463279
   D'Ambros M, 2009, WORK CONF REVERSE EN, P135, DOI 10.1109/WCRE.2009.19
   Dallmeier V., 2007, P 22 IEEE ACM INT C, P433
   Davis JJ., 2006, PROC INT C MACHINE L, DOI DOI 10.1145/1143844.1143874
   de Carvalho AB, 2010, J SYST SOFTWARE, V83, P868, DOI 10.1016/j.jss.2009.12.023
   de Carvalho AB, 2008, PROC INT C TOOLS ART, P387, DOI 10.1109/ICTAI.2008.76
   Denaro G., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, P704, DOI 10.1109/ICSE.2000.870474
   Denaro G, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P241, DOI 10.1109/ICSE.2002.1007972
   Denaro Giovanni., 2002, P IEEE INT C SOFTWAR, P361
   El Emam K, 2001, J SYST SOFTWARE, V56, P63, DOI 10.1016/S0164-1212(00)00086-8
   Elish KO, 2008, J SYST SOFTWARE, V81, P649, DOI 10.1016/j.jss.2007.07.040
   Fenton N, 2007, P 3 INT WORKSH PRED, V2007, P2, DOI DOI 10.1109/PROMISE.2007.11
   Fenton NE, 2000, IEEE T SOFTWARE ENG, V26, P797, DOI 10.1109/32.879815
   Fenton NE, 1999, IEEE T SOFTWARE ENG, V25, P675, DOI 10.1109/32.815326
   Fioravanti F, 2001, FIFTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P121, DOI 10.1109/CSMR.2001.914976
   Gao KH, 2007, IEEE T RELIAB, V56, P223, DOI 10.1109/TR.2007.896761
   Gayatri N, 2009, 2009 INTERNATIONAL CONFERENCE ON ADVANCES IN RECENT TECHNOLOGIES IN COMMUNICATION AND COMPUTING (ARTCOM 2009), P393, DOI 10.1109/ARTCom.2009.12
   Gondra I, 2008, J SYST SOFTWARE, V81, P186, DOI 10.1016/j.jss.2007.05.035
   Graves TL, 2000, IEEE T SOFTWARE ENG, V26, P653, DOI 10.1109/32.859533
   GRAY D., 2011, P EV ASS SOFTW ENG
   Gray D, 2010, IEEE IJCNN
   Gunes Koru A., 2007, PROMISE 07, P10, DOI DOI 10.1109/PROMISE.2007.9
   Guo L, 2004, 15TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P417
   Guo L, 2003, 18TH IEEE INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P249, DOI 10.1109/ASE.2003.1240314
   Gyimóthy T, 2005, IEEE T SOFTWARE ENG, V31, P897, DOI 10.1109/TSE.2005.112
   Hall T, 2010, LECT NOTES COMPUT SC, V6156, P107, DOI 10.1007/978-3-642-13792-1_10
   Hassan AE, 2005, PROC IEEE INT CONF S, P263
   Hassan AE, 2009, PROC INT CONF SOFTW, P78, DOI 10.1109/ICSE.2009.5070510
   He HB, 2009, IEEE T KNOWL DATA EN, V21, P1263, DOI 10.1109/TKDE.2008.239
   Higo Y., 2008, P 2008 WORKSH DEF LA, P6
   Holschuh T, 2009, PROC INT CONF SOFTW, P172, DOI 10.1109/ICSE-COMPANION.2009.5070975
   Hong Y, 2008, 7TH IEEE/ACIS INTERNATIONAL CONFERENCE ON COMPUTER AND INFORMATION SCIENCE IN CONJUNCTION WITH 2ND IEEE/ACIS INTERNATIONAL WORKSHOP ON E-ACTIVITY, PROCEEDINGS, P469, DOI 10.1109/ICIS.2008.36
   Hovemeyer David., 2004, ACM Conference on Object-Oriented Programming Systems, Lan-guages, and Applications, OOPSLA '04, P132
   Hribar Lovre, 2010, 2010 33rd International Convention on Information and Communication Technology, Electronics and Microelectronics (MIPRO), P402
   Hsu C.-W., 2003, TECH REP, DOI [DOI 10.1177/02632760022050997, 10 . 1177 / 02632760022050997]
   Huang P, 2009, 2009 INTERNATIONAL CONFERENCE ON RESEARCH CHALLENGES IN COMPUTER SCIENCE, ICRCCS 2009, P37, DOI 10.1109/ICRCCS.2009.19
   Huanjing Wang, 2010, 2010 Ninth International Conference on Machine Learning and Applications (ICMLA 2010), P135, DOI 10.1109/ICMLA.2010.27
   Japkowicz N., 2002, Intelligent Data Analysis, V6, P429
   Jiang Lingxiao, 2007, P THE 6 JOINT M EURO, P55, DOI DOI 10.1145/1287624.1287634
   Jiang Y, 2007, ISSRE 2007: 18TH IEEE INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P237, DOI 10.1109/ISSRE.2007.24
   Jiang Y, 2008, EMPIR SOFTW ENG, V13, P561, DOI 10.1007/s10664-008-9079-3
   Jones J.A., 2005, P 20 IEEE ACM INT C, P273, DOI [10.1145/1101908.1101949, DOI 10.1145/1101908.1101949]
   Jones JA, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P467, DOI 10.1109/ICSE.2002.1007991
   Jorgensen M, 2007, IEEE T SOFTWARE ENG, V33, P33, DOI 10.1109/TSE.2007.256943
   Joshi H., 2007, Proceedings of the Fourth International Workshop on Mining Software Repositories, P33
   Kamei Yasutaka, 2007, 2007 First International Symposium on Empirical Software Engineering and Measurement, P196
   Kamei Y., 2010, Proceedings of the 26th International Conference on Software Maintenance, P1, DOI 10.1109/ICSM.2010.5609530
   Kaminsky K, 2004, NAFIPS 2004: ANNUAL MEETING OF THE NORTH AMERICAN FUZZY INFORMATION PROCESSING SOCIETY, VOLS 1AND 2, P10
   Kanmani S, 2007, INFORM SOFTWARE TECH, V49, P483, DOI 10.1016/j.infsof.2006.07.005
   Kanmani S., 2004, SIGSOFT SOFTWARE ENG, V29, P1
   Kastro Y, 2008, SOFTWARE QUAL J, V16, P543, DOI 10.1007/s11219-008-9053-8
   Kaur A, 2009, 2009 SECOND INTERNATIONAL CONFERENCE ON MACHINE VISION, PROCEEDINGS, ( ICMV 2009), P242, DOI 10.1109/ICMV.2009.54
   Kaur A, 2008, 2008 INTERNATIONAL CONFERENCE ON ADVANCED COMPUTER THEORY AND ENGINEERING, P37, DOI 10.1109/ICACTE.2008.204
   Khoshgoftaar T. M., 2002, Empirical Software Engineering, V7, P297, DOI 10.1023/A:1020511004267
   Khoshgoftaar TM, 2010, PROC INT C TOOLS ART, DOI 10.1109/ICTAI.2010.27
   Khoshgoftaar TM, 2002, EIGHTH IEEE SYMPOSIUM ON SOFTWARE METRICS, PROCEEDINGS, P203, DOI 10.1109/METRIC.2002.1011339
   Khoshgoftaar TM, 2005, EMPIR SOFTW ENG, V10, P183, DOI 10.1007/s10664-004-6191-x
   Khoshgoftaar TM, 2004, EMPIR SOFTW ENG, V9, P229, DOI 10.1023/B:EMSE.0000027781.18360.9b
   Khoshgoftaar TM, 2002, PROC INT C TOOLS ART, P365, DOI 10.1109/TAI.2002.1180826
   Khoshgoftaar TM, 2002, 13TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P221, DOI 10.1109/ISSRE.2002.1173256
   Khoshgoftaar TM, 2002, EIGHTH IEEE SYMPOSIUM ON SOFTWARE METRICS, PROCEEDINGS, P161, DOI 10.1109/METRIC.2002.1011335
   Khoshgoftaar TM, 2001, 12TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P66, DOI 10.1109/ISSRE.2001.989459
   Khoshgoftaar TM, 2000, PROC INT C TOOLS ART, P54, DOI 10.1109/TAI.2000.889846
   Khoshgoftaar TM, 2000, 11TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P259, DOI 10.1109/ISSRE.2000.885877
   Kim S, 2007, PROC INT CONF SOFTW, P489
   Kim S, 2006, IEEE INT CONF AUTOM, P81
   Kitchenham B., 2007, 2007001 EBSE
   Kitchenham B, 2010, J SYST SOFTWARE, V83, P37, DOI 10.1016/j.jss.2009.06.041
   Klas M., 2010, 2010 32nd International Conference on Software Engineering (ICSE), P119, DOI 10.1145/1810295.1810313
   Klas Michael, 2008, 2008 IEEE International Symposium on Software Reliability Engineering, P17, DOI 10.1109/ISSRE.2008.43
   Knab P., 2006, P 2006 INT WORKSHOP, P119
   Kolcz A., 2004, ACM SIGKDD EXPLORATI, V6, P1, DOI [10.2973/odp.proc.ir.207.2004, DOI 10.1145/1007730.1007733]
   Koru AG, 2005, IEEE SOFTWARE, V22, P23, DOI 10.1109/MS.2005.149
   Kutlubay O, 2007, EUROMICRO CONF PROC, P322
   Lamkanfi Ahmed, 2010, Proceedings of the 2010 7th IEEE Working Conference on Mining Software Repositories (MSR 2010), P1, DOI 10.1109/MSR.2010.5463284
   Layman L, 2008, ESEM'08: PROCEEDINGS OF THE 2008 ACM-IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, P206
   Lessmann S, 2008, IEEE T SOFTWARE ENG, V34, P485, DOI 10.1109/TSE.2008.35
   Li PL, 2005, 2005 11th International Symposium on Software Metrics (METRICS), P288
   Li YL, 2010, INT CONF COMP SCI, P1, DOI 10.1109/ICCSIT.2010.5564891
   Li Z, 2007, IRI 2007: PROCEEDINGS OF THE 2007 IEEE INTERNATIONAL CONFERENCE ON INFORMATION REUSE AND INTEGRATION, P659
   Liebchen G. A., 2008, P 4 INT WORKSH PRED, P39, DOI [10.1145/1370788.1370799, DOI 10.1145/1370788.1370799]
   Liu J, 2009, CCDC 2009: 21ST CHINESE CONTROL AND DECISION CONFERENCE, VOLS 1-6, PROCEEDINGS, P2591, DOI 10.1109/CCDC.2009.5191800
   Liu Y, 2010, IEEE T SOFTWARE ENG, V36, P852, DOI 10.1109/TSE.2010.51
   Luo Li P., 2006, 28th International Conference on Software Engineering Proceedings, P413, DOI 10.1145/1134285.1134343
   MA Y, 2006, ADV MACHINE LEARNING, P237
   Madhavan Janaki T., 2007, P 2007 OOPSLA WORKSH, P36, DOI [10.1145/1328279.1328287, DOI 10.1145/1328279.1328287]
   Mahaweerawat A., 2004, P INTECH C, P2
   Mahaweerawat A., 2002, INT C INT TECHN VIET, P304
   Mahaweerawat A., 2007, 4 INT JOINT C COMPUT, P35
   Marcus A, 2008, IEEE T SOFTWARE ENG, V34, P287, DOI 10.1109/TSE.2007.70768
   Mende T., 2009, P 5 INT C PREDICTOR, P1, DOI [10.1145/1540438.1540448, DOI 10.1145/1540438.1540448]
   Mende T, 2010, EUR CON SFTWR MTNCE, P107, DOI 10.1109/CSMR.2010.18
   Mende T, 2009, EUR CON SFTWR MTNCE, P247, DOI 10.1109/CSMR.2009.55
   Menzies T, 2004, EIGHTH IEEE INTERNATIONAL SYMPOSIUM ON HIGH ASSURANCE SYSTEMS ENGINEERING, PROCEEDINGS, P129, DOI 10.1109/HASE.2004.1281737
   Menzies T, 2007, IEEE T SOFTWARE ENG, V33, P637, DOI 10.1109/TSE.2007.70721
   Menzies T, 2007, IEEE T SOFTWARE ENG, V33, P2, DOI 10.1109/TSE.2007.256941
   Menzies T, 2010, AUTOMAT SOFTW ENG, V17, P375, DOI 10.1007/s10515-010-0069-5
   Mertik M., 2006, INT C SOFTW ENG ADV, P19
   Mizuno O., 2007, Proceedings of the 11th Joint Meeting of the European Software Engineering Conference and the 14th ACM SIGSOFT Symposium on Foundations of Software Engineering, P405
   Mizuno O., 2007, Proceedings of 4th International Workshop on Mining Software Repositories, P4
   Moser R, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P181, DOI 10.1145/1368088.1368114
   Myrtveit I, 2005, IEEE T SOFTWARE ENG, V31, P380, DOI 10.1109/TSE.2005.58
   Nagappan N, 2005, PROC INT CONF SOFTW, P284, DOI 10.1145/1062455.1062514
   Nagappan N, 2005, PROC INT CONF SOFTW, P580, DOI 10.1145/1062455.1062558
   Nagappan Nachiappan, 2010, Proceedings of the 2010 IEEE 21st International Symposium on Software Reliability Engineering (ISSRE 2010), P309, DOI 10.1109/ISSRE.2010.25
   Nagappan N., 2006, 28th International Conference on Software Engineering Proceedings, P452, DOI 10.1145/1134285.1134349
   Nagwani NK, 2010, 2010 IEEE 2ND INTERNATIONAL ADVANCE COMPUTING CONFERENCE, P373, DOI 10.1109/IADCC.2010.5422923
   Neufelder AM, 2000, 11TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P148, DOI 10.1109/ISSRE.2000.885868
   Nikora A. P., 2004, Proceedings of the 28th Annual International Computer Software and Applications Conference. COMPSAC 2004, P192, DOI 10.1109/CMPSAC.2004.1342827
   Nikora AP, 2003, NINTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM, PROCEEDINGS, P338, DOI 10.1109/METRIC.2003.1232479
   Nugroho Ariadi, 2010, Proceedings of the 2010 7th IEEE Working Conference on Mining Software Repositories (MSR 2010), P21, DOI 10.1109/MSR.2010.5463285
   Olague HM, 2007, IEEE T SOFTWARE ENG, V33, P402, DOI 10.1109/TSE.2007.1015.
   Oral A., 2007, COMP INF SCI 2007 IS, P1
   Ostrand T. J., 2002, Software Engineering Notes, V27, P55, DOI 10.1145/566171.566181
   Ostrand T. J., 2010, P 6 INT C PRED MOD S, P19, DOI [DOI 10.1145/1868328, 10.1145/1868328]
   Ostrand T.J., 2007, Fourth International Workshop on Software Quality Assurance, P25
   Ostrand T.J., 2007, Proceedings of the 2007 international symposium on Software testing and analysis (ISSTA '07), P219
   Ostrand TJ, 2005, Tapia '05: 2005 Richard Tapia Celebration of Diversity in Computing Conference, P48
   Ostrand TJ, 2005, P INT COMP SOFTW APP, P3
   Ostrand TJ, 2005, IEEE T SOFTWARE ENG, V31, P340, DOI 10.1109/TSE.2005.49
   Ostrand TJ., 2004, Proceedings of the 2004 ACM SIGSOFT International Symposium on Software Testing and Analysis, ISSTA '04, V29, P86, DOI [DOI 10.1145/1013886.1007524, 10.1145/1013886.1007524]
   Padberg F, 2004, IEEE T SOFTWARE ENG, V30, P17, DOI 10.1109/TSE.2004.1265733
   Pai GJ, 2007, IEEE T SOFTWARE ENG, V33, P675, DOI [10.1109/TSE.2007.70722, 10.1109/TSE.2007.70722.]
   Pandey A. K., 2010, 2010 2nd International Conference on Reliability, Safety and Hazard - Risk-Based Technologies and Physics-of-Failure Methods (ICRESH 2010), P136, DOI 10.1109/ICRESH.2010.5779531
   Pau Luo Li, 2004, Software Engineering Notes, V29, P263, DOI 10.1145/1041685.1029930
   Pelayo L, 2007, NAFIPS 2007 - 2007 ANNUAL MEETING OF THE NORTH AMERICAN FUZZY INFORMATION PROCESSING SOCIETY, P69, DOI 10.1109/NAFIPS.2007.383813
   Pendharkar PC, 2010, ENG APPL ARTIF INTEL, V23, P34, DOI 10.1016/j.engappai.2009.10.001
   Petersen K, 2009, INT SYMP EMP SOFTWAR, P402
   Pighin M, 2003, 2003 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P206, DOI 10.1109/ISESE.2003.1237979
   Ping Yu, 2002, Proceedings of the Sixth European Conference on Software Maintenance and Reengineering, P99, DOI 10.1109/CSMR.2002.995794
   Pinzger Martin, 2008, P 16 ACM SIGSOFT INT, P2, DOI DOI 10.1145/1453101.1453105
   Pizzi NJ, 2002, IEEE IJCNN, P2405, DOI 10.1109/IJCNN.2002.1007518
   Ramler R, 2009, 2009 35TH EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS, PROCEEDINGS, P181, DOI 10.1109/SEAA.2009.65
   Rana ZA, 2009, 2009 WRI WORLD CONGRESS ON SOFTWARE ENGINEERING, VOL 4, PROCEEDINGS, P3, DOI 10.1109/WCSE.2009.92
   Ratzinger J., 2008, Proceedings of the 2008 international working conference on Mining software repositories, P35, DOI [10.1145/1370750.1370759, DOI 10.1145/1370750.1370759]
   Reformat M., 2003, FUZZY BASED METAMODE
   Rodriguez D, 2007, IRI 2007: PROCEEDINGS OF THE 2007 IEEE INTERNATIONAL CONFERENCE ON INFORMATION REUSE AND INTEGRATION, P667, DOI 10.1109/IRI.2007.4296696
   Rosenthal R, 2001, ANNU REV PSYCHOL, V52, P59, DOI 10.1146/annurev.psych.52.1.59
   Sandhu P.S., 2010, P INT C EL INF ENG, V2, pV2
   Sandhu PS, 2010, INT CONF COMPUT AUTO, P281, DOI 10.1109/ICCAE.2010.5451695
   Schneidewind NF, 2000, SEVENTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM - METRICS 2001, PROCEEDINGS, P328, DOI 10.1109/METRIC.2001.915540
   Schroter A, 2006, SIGSOFT SOFTW ENG NO, V31, P1
   Seiffert C, 2009, IEEE T SYST MAN CY A, V39, P1283, DOI 10.1109/TSMCA.2009.2027131
   Seliya N, 2005, NINTH IEEE INTERNATIONAL SYMPOSIUM ON HIGH-ASSURANCE SYSTEMS ENGINEERING, P89, DOI 10.1109/HASE.2005.4
   Seliya Naeem, 2010, Proceedings 2010 IEEE 12th International Symposium on High-Assurance Systems Engineering (HASE), P26, DOI 10.1109/HASE.2010.29
   Selvarani R, 2009, PROCEEDINGS OF THE 2009 INTERNATIONAL CONFERENCE ON SIGNAL PROCESSING SYSTEMS, P766, DOI 10.1109/ICSPS.2009.163
   Shatnawi R, 2008, J SYST SOFTWARE, V81, P1868, DOI 10.1016/j.jss.2007.12.794
   Sherriff M., 2007, P 2007 C CTR ADV STU, P276
   Sherriff M., 2005, SIGSOFT Softw. Eng. Notes, V30, P1
   Shin Y, 2009, 2009 6TH IEEE INTERNATIONAL WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES, P61, DOI 10.1109/MSR.2009.5069481
   Shivaji S, 2009, IEEE INT CONF AUTOM, P600, DOI 10.1109/ASE.2009.76
   Singh Pradeep, 2009, Proceedings of the 2009 International Conference on Advances in Computing, Control, & Telecommunication Technologies (ACT 2009), P837, DOI 10.1109/ACT.2009.212
   Singh Y, 2008, LECT NOTES COMPUT SC, V5089, P204, DOI 10.1007/978-3-540-69566-0_18
   Singh Y, 2010, SOFTWARE QUAL J, V18, P3, DOI 10.1007/s11219-009-9079-6
   Song QB, 2006, IEEE T SOFTWARE ENG, V32, P69, DOI 10.1109/TSE.2006.1599417
   Song QB, 2011, IEEE T SOFTWARE ENG, V37, P356, DOI 10.1109/TSE.2010.90
   Stringfellow C, 2002, SOFTWARE QUAL J, V10, P299, DOI 10.1023/A:1022138004472
   Succi G, 2003, J SYST SOFTWARE, V65, P1, DOI 10.1016/S0164-1212(02)00024-9
   Suffian Muhammad Dhiauddin Mohamed, 2010, Proceedings of 2010 International Symposium on Information Technology (ITSim 2010), P1087, DOI 10.1109/ITSIM.2010.5561516
   Thwin MMT, 2002, ICONIP'02: PROCEEDINGS OF THE 9TH INTERNATIONAL CONFERENCE ON NEURAL INFORMATION PROCESSING, P2312
   Tomaszewski P, 2006, PROC IEEE INT CONF S, P487
   Tosun A, 2010, INFORM SOFTWARE TECH, V52, P1242, DOI 10.1016/j.infsof.2010.06.006
   Tosun A, 2009, INT SYMP EMP SOFTWAR, P478
   Turhan B, 2007, USIC 2007: PROCEEDINGS OF THE SEVENTH INTERNATIONAL CONFERENCE ON QUALITY SOFTWARE, P231
   Turhan B, 2010, LECT NOTES COMPUT SC, V6156, P116, DOI 10.1007/978-3-642-13792-1_11
   Turhan B, 2009, EMPIR SOFTW ENG, V14, P540, DOI 10.1007/s10664-008-9103-7
   Turhan B, 2009, EXPERT SYST APPL, V36, P9986, DOI 10.1016/j.eswa.2008.12.028
   Turhan B, 2008, PROCEEDINGS OF THE 34TH EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS, P191, DOI 10.1109/SEAA.2008.52
   Vandecruys O, 2008, J SYST SOFTWARE, V81, P823, DOI 10.1016/j.jss.2007.07.034
   Visa S., 2004, PROC IPMU C, P393
   Vivanco R., 2010, P 23 CAN C EL COMP E, P1
   Wahyudin D, 2008, PROCEEDINGS OF THE 34TH EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS, P207, DOI 10.1109/SEAA.2008.36
   Wei Wei, 2010, Proceedings of the 2010 IEEE International Conference on Computational Intelligence for Measurement Systems and Applications (CIMSA 2010), P1, DOI 10.1109/CIMSA.2010.5611753
   Weyuker EJ, 2008, EMPIR SOFTW ENG, V13, P539, DOI 10.1007/s10664-008-9082-8
   Weyuker EJ, 2010, EMPIR SOFTW ENG, V15, P277, DOI 10.1007/s10664-009-9111-2
   Weyuker Elaine J., 2008, Proceedings of the 4th International Workshop on Predictor Models in Software Engineering, PROMISE '08, P3
   Wohlin C, 2000, PROG COMPREHEN, P9, DOI 10.1109/WPC.2000.852475
   Wong WE, 2000, SOFTWARE PRACT EXPER, V30, P1587, DOI 10.1002/1097-024X(20001125)30:14<1587::AID-SPE352>3.0.CO;2-1
   Xu ZW, 2000, FIFTH IEEE INTERNATIONAL SYMPOSIUM ON HIGH ASSURANCE SYSTEMS ENGINEERING, PROCEEDINGS, P281, DOI 10.1109/HASE.2000.895473
   Yang B, 2007, ICNC 2007: THIRD INTERNATIONAL CONFERENCE ON NATURAL COMPUTATION, VOL 1, PROCEEDINGS, P760
   Yang WM, 2008, INTERNATIONAL CONFERENCE ON INTELLIGENT COMPUTATION TECHNOLOGY AND AUTOMATION, VOL 1, PROCEEDINGS, P747, DOI 10.1109/ICICTA.2008.76
   Yuan XH, 2000, 3RD IEEE SYMPOSIUM ON APPLICATION SPECIFIC SYSTEMS AND SOFTWARE ENGINEERING TECHNOLOGY, PROCEEDINGS, P85, DOI 10.1109/ASSET.2000.888052
   Yue Jiang, 2009, 2009 20th International Symposium on Software Reliability Engineering (ISSRE 2009), P99, DOI 10.1109/ISSRE.2009.13
   Yue Jiang, 2008, 2008 IEEE International Symposium on Software Reliability Engineering, P197, DOI 10.1109/ISSRE.2008.54
   Zhang D, 2009, P 2009 INT C SUST PO, P1
   Zhang HY, 2007, IEEE T SOFTWARE ENG, V33, P635, DOI 10.1109/TSE.2007.70706
   Zhang HY, 2009, PROC IEEE INT CONF S, P274, DOI 10.1109/ICSM.2009.5306304
   Zhang HY, 2010, PROCEEDINGS OF THE ELEVENTH WEST LAKE INTERNATIONAL CONFERENCE ON SMALL & MEDIUM BUSINESS, P14
   Zhong S, 2004, EIGHTH IEEE INTERNATIONAL SYMPOSIUM ON HIGH ASSURANCE SYSTEMS ENGINEERING, PROCEEDINGS, P149
   Zhou YM, 2006, IEEE T SOFTWARE ENG, V32, P771, DOI 10.1109/TSE.2006.102
   Zhou YM, 2010, J SYST SOFTWARE, V83, P660, DOI 10.1016/j.jss.2009.11.704
   Zimmerman T, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P91, DOI 10.1145/1595696.1595713
   Zimmermann T, 2007, ISSRE 2007: 18TH IEEE INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P227, DOI 10.1109/ISSRE.2007.19
   Zimmermann T, 2009, INT SYMP EMP SOFTWAR, P436
   Zimmermann T, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P531, DOI 10.1145/1368088.1368161
NR 238
TC 659
Z9 740
U1 3
U2 201
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD NOV-DEC
PY 2012
VL 38
IS 6
BP 1276
EP 1304
DI 10.1109/TSE.2011.103
PG 29
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 043PI
UT WOS:000311556100003
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Cuadrado, F
   Dueñas, JC
   García-Carmona, R
AF Cuadrado, Felix
   Duenas, Juan C.
   Garcia-Carmona, Rodrigo
TI An Autonomous Engine for Services Configuration and Deployment
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Autonomic systems; model-based management; satisfiability; service
   configuration
ID MANAGEMENT
AB The runtime management of the infrastructure providing service-based systems is a complex task, up to the point where manual operation struggles to be cost effective. As the functionality is provided by a set of dynamically composed distributed services, in order to achieve a management objective multiple operations have to be applied over the distributed elements of the managed infrastructure. Moreover, the manager must cope with the highly heterogeneous characteristics and management interfaces of the runtime resources. With this in mind, this paper proposes to support the configuration and deployment of services with an automated closed control loop. The automation is enabled by the definition of a generic information model, which captures all the information relevant to the management of the services with the same abstractions, describing the runtime elements, service dependencies, and business objectives. On top of that, a technique based on satisfiability is described which automatically diagnoses the state of the managed environment and obtains the required changes for correcting it (e. g., installation, service binding, update, or configuration). The results from a set of case studies extracted from the banking domain are provided to validate the feasibility of this proposal.
C1 [Cuadrado, Felix] Queen Mary Univ London, Sch Elect Engn & Comp Sci, London E1 4NS, England.
   [Duenas, Juan C.; Garcia-Carmona, Rodrigo] Univ Politecn Madrid, Escuela Tecn Super Ingn Telecomun, Dept Ingn Sistemas Telemat, E-28040 Madrid, Spain.
C3 University of London; Queen Mary University London; Universidad
   Politecnica de Madrid
RP Cuadrado, F (corresponding author), Queen Mary Univ London, Sch Elect Engn & Comp Sci, Mile End Rd, London E1 4NS, England.
EM felix.cuadrado@eecs.qmul.ac.uk; jcduenas@dit.upm.es; rodrigo@dit.upm.es
RI Dueñas, Juan Carlos/Y-4996-2018; Carmona, Rodrigo García/L-8787-2014
OI Dueñas, Juan Carlos/0000-0001-9689-4798; Carmona, Rodrigo
   García/0000-0003-4427-9579; Cuadrado, Felix/0000-0002-5745-1609
FU ITECBAN from the CENIT of the Ministerio de Industria, Turismo y
   Comercio (MITYC); Centro para el Desarrollo Tecnologico Industrial
   (CDTI)
FX The authors wish to thank the anonymous reviewers for their insightful
   comments to the previous versions of this paper. This work was partially
   supported by the ITECBAN project from the CENIT program of the
   Ministerio de Industria, Turismo y Comercio (MITYC) and the Centro para
   el Desarrollo Tecnologico Industrial (CDTI).
CR Agrawal D, 2005, IEEE COMMUN MAG, V43, P69, DOI 10.1109/MCOM.2005.1522127
   [Anonymous], 2006, ARCHITECTURAL BLUEPR
   [Anonymous], P 19 LARG INST SYST
   Biere A, 2009, FRONT ARTIF INTEL AP, V185, P457, DOI 10.3233/978-1-58603-929-5-457
   Burgess M., 2007, HDB NETWORK SYSTEM A, P567
   Cheng Y, 2008, IEEE COMMUN MAG, V46, P138, DOI 10.1109/MCOM.2008.4511662
   Cohen MB, 2008, IEEE T SOFTWARE ENG, V34, P633, DOI 10.1109/TSE.2008.50
   Cuadrado F., 2009, P 5 INT C NETW SERV
   DAVIS M, 1962, COMMUN ACM, V5, P394, DOI 10.1145/368273.368557
   Desertot M, 2006, LECT NOTES COMPUT SC, V4124, P216
   Di Nitto E, 2008, AUTOMAT SOFTW ENG, V15, P313, DOI 10.1007/s10515-008-0032-x
   DMTF (Distributed Management Task Force), 2010, COMM INF MOD CIM SPE
   Dubus J, 2007, LECT NOTES COMPUT SC, V4364, P242
   Dueñas JC, 2009, IEEE INTERNET COMPUT, V13, P52, DOI 10.1109/MIC.2009.115
   Erl T, 2005, SERVICE ORIENTED ARC
   Foster H, 2009, LECT NOTES COMPUT SC, V4907, P338, DOI 10.1007/978-3-540-93851-4_34
   Gu Q, 2009, SERV ORIENTED COMPUT, V3, P171, DOI 10.1007/s11761-009-0046-7
   Halle S., 2006, AUTONOMIC NETWORKING
   Jennings B, 2007, IEEE COMMUN MAG, V45, P112, DOI 10.1109/MCOM.2007.4342833
   Josuitis N., 2007, SOA PRACTICE ART DIS
   Kephart JO, 2003, COMPUTER, V36, P41, DOI 10.1109/MC.2003.1160055
   Kon F, 2005, SOFTWARE PRACT EXPER, V35, P667, DOI 10.1002/spe.654
   Kreger H., 2005, AUTONOMIC COMPUTING
   Kreger H, 2005, MANAGEMENT USING WEB
   Le Berre D., 2008, P 1 WORKSH AN SOFTW
   de Vergara JEL, 2008, COMPUT COMMUN, V31, P3049, DOI 10.1016/j.comcom.2008.04.010
   Marques-Silva J., 2008, P INT WORKSH DISCR E
   Matevska J, 2007, P 33 EUROMICRO C SOF
   Miller B., 2008, OASIS SOLUTION DEPLO
   Object Management Group, 2006, DEPL CONF DISTR COMP
   Papazoglou MP, 2008, INT J COOP INF SYST, V17, P223, DOI 10.1142/S0218843008001816
   Prasad M. R., 2005, International Journal on Software Tools for Technology Transfer, V7, P156, DOI 10.1007/s10009-004-0183-4
   Rapicault P., 2009, P INT WORKSH OP COMP
   Ruiz JL, 2009, IEEE COMMUN MAG, V47, P164, DOI 10.1109/MCOM.2009.5116815
   Steinberg D., 2008, EMF: Eclipse Modeling Framework, Vsecond
   Tucker C., 2007, P 29 INT SOFTW ENG C
   VAMBENEPE W, 2006, WEB SERVICES DISTR 1
   WILSON K, 2006, WEB SERVICES DISTRIB
NR 38
TC 10
Z9 12
U1 0
U2 8
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAY-JUN
PY 2012
VL 38
IS 3
BP 520
EP 536
DI 10.1109/TSE.2011.24
PG 17
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 947FP
UT WOS:000304414400002
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Paulevé, L
   Magnin, M
   Roux, O
AF Pauleve, Loic
   Magnin, Morgan
   Roux, Olivier
TI Tuning Temporal Features within the Stochastic π-Calculus
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Temporal parameters; pi-calculus; model-checking; Markov processes;
   stochastic processes
ID SIMULATION; PARAMETER
AB The stochastic pi-calculus is a formalism that has been used for modeling complex dynamical systems where the stochasticity and the delay of transitions are important features, such as in the case of biochemical reactions. Commonly, durations of transitions within stochastic pi-calculus models follow an exponential law. The underlying dynamics of such models are expressed in terms of continuous-time Markov chains, which can then be efficiently simulated and model-checked. However, the exponential law comes with a huge variance, making it difficult to model systems with accurate temporal constraints. In this paper, a technique for tuning temporal features within the stochastic pi-calculus is presented. This method relies on the introduction of a stochasticity absorption factor by replacing the exponential distribution with the Erlang distribution, which is a sum of exponential random variables. This paper presents a construction of the stochasticity absorption factor in the classical stochastic pi-calculus with exponential rates. Tools for manipulating the stochasticity absorption factor and its link with timed intervals for firing transitions are also presented. Finally, the model-checking of such designed models is tackled by supporting the stochasticity absorption factor in a translation from the stochastic pi-calculus to the probabilistic model checker PRISM.
C1 [Pauleve, Loic; Magnin, Morgan; Roux, Olivier] Ecole Cent Nantes, CNRS, IRCCyN, UMR 6597, Paris, France.
C3 Centre National de la Recherche Scientifique (CNRS); Nantes Universite;
   Ecole Centrale de Nantes
RP Paulevé, L (corresponding author), Ecole Cent Nantes, CNRS, IRCCyN, UMR 6597, Paris, France.
EM loic.pauleve@irccyn.ec-nantes.fr; morgan.magnin@irccyn.ec-nantes.fr;
   olivier.roux@irccyn.ec-nantes.fr
RI Paulevé, Loïc/AAY-8811-2021
OI Paulevé, Loïc/0000-0002-7219-2027
CR Abadi M, 1999, INFORM COMPUT, V148, P1, DOI 10.1006/inco.1998.2740
   ALUR R, 1992, LECT NOTES COMPUT SC, V600, P45, DOI 10.1007/BFb0031987
   Amari SV, 1997, IEEE T RELIAB, V46, P519, DOI 10.1109/24.693785
   [Anonymous], 1999, Communicating and Mobile Systems: The Calculus
   [Anonymous], 2006, Stochastic modelling for systems biology
   [Anonymous], 1974, THESIS
   Best D. J., 1975, Applied Statistics, V24, P385, DOI 10.2307/2347113
   Blossey R, 2008, HFSP J, V2, P17, DOI 10.2976/1.2804749
   Bobbio A., 2002, ELECT NOTES THEORETI, V52, P209
   Bryans J., 2003, ACM Transactions on Computational Logic, V4, P452, DOI 10.1145/937555.937558
   Cardelli L, 2009, ELECTRON NOTES THEOR, V229, P127, DOI 10.1016/j.entcs.2009.02.009
   DIDONATO AR, 1986, ACM T MATH SOFTWARE, V12, P377, DOI 10.1145/22721.23109
   Evans M., 1993, STAT DISTRIBUTIONS
   Favaro S, 2010, ACTA APPL MATH, V109, P1035, DOI 10.1007/s10440-008-9357-5
   François P, 2007, MOL SYST BIOL, V3, DOI 10.1038/msb4100192
   Gibson MA, 2000, J PHYS CHEM A, V104, P1876, DOI 10.1021/jp993732q
   GILLESPIE DT, 1977, J PHYS CHEM-US, V81, P2340, DOI 10.1021/j100540a008
   Hinton A., 2006, P 12 INT C TOOLS ALG
   Infante Lopez G. G., 2001, Process Algebra and Probabilistic Methods. Performance Modelling and Verification. Joint International Workshop, PAPM-PROBMIV 2001. Proceedings (Lecture Notes in Computer Science Vol.2165), P57
   Katoen JP, 2008, LECT NOTES COMPUT SC, V5201, P279, DOI 10.1007/978-3-540-85361-9_24
   KOHAVI R, 1998, APPL MACHINE LEARNIN, V30
   Kuttler C, 2006, LECT NOTES COMPUT SC, V4230, P24
   Kwiatkowska M, 2006, LECT NOTES COMPUT SC, V4144, P234, DOI 10.1007/11817963_23
   Mi J, 2003, STAT PROBABIL LETT, V62, P229, DOI 10.1016/S0167-7152(03)00005-1
   Milner R., 1989, Communication and concurrency
   Mura I, 2009, ELECTRON NOTES THEOR, V253, P83, DOI 10.1016/j.entcs.2009.10.007
   Nadarajah S, 2008, ACTA APPL MATH, V103, P131, DOI 10.1007/s10440-008-9224-4
   Norman G, 2009, IEEE T SOFTWARE ENG, V35, P209, DOI 10.1109/TSE.2008.77
   Phillips A., 2007, COMPUTATIONAL ME SPR
   Phillips A., 2009, SPIM
   Phillips A, 2006, LECT NOTES COMPUT SC, V4230, P123
   Priami C, 2001, INFORM PROCESS LETT, V80, P25, DOI 10.1016/S0020-0190(01)00214-9
   Priami C, 1995, COMPUT J, V38, P578, DOI 10.1093/comjnl/38.7.578
   Priami C., 1996, P 4 WORKSH PROC ALG, P41
   R Core Team, 2020, R FDN STAT COMPUTING
   Zaigraev A, 2008, STAT PROBABIL LETT, V78, P286, DOI 10.1016/j.spl.2007.07.003
NR 36
TC 4
Z9 4
U1 0
U2 3
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD NOV-DEC
PY 2011
VL 37
IS 6
BP 858
EP 871
DI 10.1109/TSE.2010.95
PG 14
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 854SE
UT WOS:000297513700007
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Distefano, S
   Scarpa, M
   Puliafito, A
AF Distefano, Salvatore
   Scarpa, Marco
   Puliafito, Antonio
TI From UML to Petri Nets: The PCM-Based Methodology
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Software engineering; performances evaluation; Petri nets; UML; software
   performance engineering
ID PERFORMANCE MODELS; SYSTEMS; DESIGN
AB In this paper, we present an evaluation methodology to validate the performance of a UML model, representing a software architecture. The proposed approach is based on open and well-known standards: UML for software modeling and the OMG Profile for Schedulability, Performance, and Time Specification for the performance annotations into UML models. Such specifications are collected in an intermediate model, called the Performance Context Model (PCM). The intermediate model is translated into a performance model which is subsequently evaluated. The paper is focused on the mapping from the PCM to the performance domain. More specifically, we adopt Petri nets as the performance domain, specifying a mapping process based on a compositional approach we have entirely implemented in the ArgoPerformance tool. All of the rules to derive a Petri net from a PCM and the performance measures assessable from the former are carefully detailed. To validate the proposed technique, we provide an in-depth analysis of a web application for music streaming.
C1 [Distefano, Salvatore; Scarpa, Marco; Puliafito, Antonio] Univ Messina, Dept Math, I-98166 Messina, Sicily, Italy.
C3 University of Messina
RP Distefano, S (corresponding author), Univ Messina, Dept Math, I-98166 Messina, Sicily, Italy.
EM sdistefano@unime.it; mscarpa@unime.it; apuliafito@unime.it
RI Puliafito, Antonio/H-7823-2016; Distefano, Salvatore/E-7962-2012
OI Puliafito, Antonio/0000-0003-0385-2711; Distefano,
   Salvatore/0000-0002-2752-626X
CR [Anonymous], UML PROF SCHED PERF
   Balsamo S, 2004, IEEE T SOFTWARE ENG, V30, P295, DOI 10.1109/TSE.2004.9
   Balsamo S, 2006, EUROMICRO CONF PROC, P64, DOI 10.1109/EUROMICRO.2006.34
   Bernardi S, 2007, J SYST SOFTWARE, V80, P1843, DOI 10.1016/j.jss.2007.02.029
   Bobbio A., 1995, Proceedings. International Computer Performance and Dependability Symposium (Cat. No.95TH8034), P124, DOI 10.1109/IPDS.1995.395811
   D'Ambrogio A., 2005, P ACM 5 INT WORKSHOP, P75, DOI DOI 10.1145/1071021.1071029
   Distefano S., 2005, P WORKSH TECHN METH
   DISTEFANO S, 2004, P INT S COMP INF SCI
   DISTEFANO S, 2005, P SOFTW ENG
   Grassi V, 2007, J SYST SOFTWARE, V80, P528, DOI 10.1016/j.jss.2006.07.023
   GU G, 2005, P 5 INT WORKSH SOFTW, P99
   *ISO, 2005, ISO IEC 19502 2005 I
   Lopez-Grao Merseguer., 2004, P 4 INT WORKSHOP SOF, P25
   MAJZIK I, 2002, P WORKSH SOFTW ARCH, P219
   Marzolla M, 2004, INT CONF QUANT EVAL, P340
   *MDSLAB RES GROUP, 2004, ARG PERF PLUG IN
   Merseguer J, 2002, WODES'02: SIXTH INTERNATIONAL WORKSHOP ON DISCRETE EVENT SYSTEMS, PROCEEDINGS, P295, DOI 10.1109/WODES.2002.1167702
   MUPPALA JK, 1991, COMPUTER, V24, P37, DOI 10.1109/2.76285
   *OBJ MAN GROUP, 2003, UML SPEC V 1 5
   Petriu DC, 2002, LECT NOTES COMPUT SC, V2324, P159
   Petriu DB, 2007, SOFTW SYST MODEL, V6, P163, DOI 10.1007/s10270-006-0026-8
   PULIAFITO A, 2000, P 11 INT C MOD TECHN, P171
   RUGINA AE, 2006, P WORKSH SOFTW ARCH, P14
   SCARPA M, 2003, P 10 EUR PVM MPI US, P196
   Smith C.U., 1990, Performance engineering of software systems, VSeventh
   Smith C.U., 2005, P 5 INT WORKSHOP SOF, P87
   SMITH CU, 2002, PERFORMANCE SOLUTION
   Trivedi K.S., 2001, Probability and statistics with reliability, queueing, and computer science applications, V2nd
   Trivedi K.S., 1995, Proc. 1995 ACM SIGMETRICS, P263
   *U CA, 2004, ARGOUML
   Woodside Murray., 2005, P 5 INT WORKSHOP SOF, P1, DOI DOI 10.1145/1071021.1071022
NR 31
TC 35
Z9 41
U1 0
U2 10
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JAN-FEB
PY 2011
VL 37
IS 1
BP 65
EP 79
DI 10.1109/TSE.2010.10
PG 15
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 712OS
UT WOS:000286676700005
DA 2024-07-18
ER

PT J
AU Ward, MP
   Zedan, H
AF Ward, Martin P.
   Zedan, Hussein
TI Deriving a Slicing Algorithm via FermaT Transformations
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Program slicing; program transformations; formal methods; algorithm
   derivation
ID FORMAL TRANSFORMATION; PROGRAM-DEVELOPMENT; REFINEMENT
AB In this paper, we present a case study in deriving an algorithm from a formal specification via FermaT transformations. The general method (which is presented in a separate paper) is extended to a method for deriving an implementation of a program transformation from a specification of the program transformation. We use program slicing as an example transformation since this is of interest outside the program transformation community. We develop a formal specification for program slicing in the form of a WSL specification statement which is refined into a simple slicing algorithm by applying a sequence of general purpose program transformations and refinements. Finally, we show how the same methods can be used to derive an algorithm for semantic slicing. The main novel contributions of this paper are: 1) developing a formal specification for slicing, 2) expressing the definition of slicing in terms of a WSL specification statement, and 3) by applying correctness preserving transformations to the specification, we can derive a simple slicing algorithm.
C1 [Ward, Martin P.] De Montfort Univ, Durham DH1 2TZ, England.
   [Zedan, Hussein] De Montfort Univ, Software Technol Res Lab, Leicester LE1 9BH, Leics, England.
C3 De Montfort University; De Montfort University
RP Ward, MP (corresponding author), De Montfort Univ, 13 Bromley Close, Durham DH1 2TZ, England.
EM martin@gkc.org.uk; hzedan@cse.dmu.ac.uk
OI Ward, Martin/0000-0001-7127-3311
CR Amtoft T, 2008, INFORM PROCESS LETT, V106, P45, DOI 10.1016/j.ipl.2007.10.002
   [Anonymous], 1992, The Z Notation
   [Anonymous], 1996, Algebra of Programming
   Back R. J. R., 1990, Formal Aspects of Computing, V2, P247, DOI 10.1007/BF01888227
   Back R.J.R., 1980, Mathematical Center Tracts, V131
   BACK RJR, 1988, ACTA INFORM, V25, P593, DOI 10.1007/BF00291051
   BAUER FL, 1989, IEEE T SOFTWARE ENG, V15, P165, DOI 10.1109/32.21743
   BICARREGUI JC, 1999, P 3 IR WORKSH FORM S
   BILARDI G, 1999, STATIC SINGLE ASSIGN, P1
   Binkley D., 1993, ACM Letters on Programming Languages and Systems, V2, P31, DOI 10.1145/176454.176473
   Binkley D., 1996, Advances in Computers, V43, P1
   Binkley D, 2006, SCI COMPUT PROGRAM, V62, P228, DOI 10.1016/j.scico.2006.04.007
   Binkley David, 2004, ADV COMPUTERS, V62
   CHEN Z, 1998, P 5 AS PAC SOFTW ENG
   Cousot R., 2005, Verification, Model Checking, and Abstract Interpretation
   Dijkstra E. W., 1976, A Discipline of Pro-gramming
   HALL A, 1990, IEEE SOFTWARE, V7, P11, DOI 10.1109/52.57887
   Harman M, 2003, J SYST SOFTWARE, V68, P45, DOI 10.1016/S0164-1212(02)00135-8
   HARMAN M, 1997, P 5 IEEE INT WORKSH
   Hatcliff J., 2000, Higher-Order and Symbolic Computation, V13, P315, DOI 10.1023/A:1026599015809
   HOARE CAR, 1987, COMMUN ACM, V30, P672, DOI 10.1145/27651.27653
   HORWITZ S, 1990, ACM T PROGR LANG SYS, V12, P26, DOI [10.1145/77606.77608, 10.1145/960116.53994]
   Jones C. B., 1991, MURAL FORMAL DEV SUP
   Karp C. R., 1964, LANGUAGES EXPRESSION
   LANO K, 1995, INFORM SOFTWARE TECH, V37, P303, DOI 10.1016/0950-5849(95)99366-U
   Lano Kevin., 1996, The B Language and Method: A guide to Practical Formal Development
   MOCK M, 2002, P 10 ACM SIGSOFT S F, P71
   MORGAN C, 1987, IBM J RES DEV, V31, P546, DOI 10.1147/rd.315.0546
   MORGAN C, 1988, ACM T PROGR LANG SYS, V10, P403, DOI 10.1145/44501.44503
   Morgan C.C., 1988, TECHNICAL MONOGRAPH
   Morgan Carroll, 1994, Programming from specifications
   NEILSON M, 1989, FORM ASP COMPUT, V1, P85
   PAIGE R, 1986, ACM COMPUTING SURV A, V28, P170
   PARTSCH H, 1983, COMPUT SURV, V15, P199, DOI 10.1145/356914.356917
   Pingali K, 1997, ACM T PROGR LANG SYS, V19, P462, DOI 10.1145/256167.256217
   PRIESTLEY HA, 1994, J SYMB COMPUT, V18, P1, DOI 10.1006/jsco.1994.1035
   Ranganath VP, 2005, LECT NOTES COMPUT SC, V3444, P77
   REPS T, 1991, SCI COMPUT PROGRAM, V17, P139, DOI 10.1016/0167-6423(91)90039-Z
   Reps Thomas., 1988, The semantics of program slicing
   Rodrigues NF, 2006, J UNIVERS COMPUT SCI, V12, P828
   STEENSGAARDA B, 1996, P 32 ACM SIGPLAN SIG
   Stepney S, 1998, LECT NOTES COMPUT SC, V1493, P284, DOI 10.1007/BFb0056040
   TIP F, 1995, J PROGRAM LANG, V3, P121
   Turing AM, 1937, P LOND MATH SOC, V42, P230, DOI 10.1112/plms/s2-42.1.230
   VENKATESH GA, 1991, P SIGPLAN 1991 C PRO, V26, P107
   Ward M, 1996, IEEE T SOFTWARE ENG, V22, P665, DOI 10.1109/32.541437
   Ward M., 1993, Journal of Software Maintenance: Research and Practice, V5, P101, DOI 10.1002/smr.4360050204
   WARD M, 1994, P 4 REENG FOR SEPT
   WARD M, 1989, THESIS OXFORD U
   WARD M, 1993, P IEEE C SOFTW MAINT
   WARD M, 1999, P INT C SOFTW MAINT
   WARD M, 2000, P 7 WORK C REV ENG
   WARD M, 2009, P 9 IEEE INT WORK C
   WARD M, 2001, P INT C SOFTW MAINT
   WARD M, 2001, P IEEE INT WORKSH SO
   WARD M, 2005, P 29 ANN INT COMP SO
   Ward M, 2008, SOFTWARE PRACT EXPER, V38, P1273, DOI 10.1002/spe.869
   Ward M, 2007, ACM T PROGR LANG SYS, V29, DOI 10.1145/1216374.1216375
   Ward M, 2010, SCI COMPUT PROGRAM, V75, P134, DOI 10.1016/j.scico.2009.11.001
   Ward MP, 2004, SCI COMPUT PROGRAM, V52, P213, DOI 10.1016/j.scico.2004.03.007
   WARD MP, 1994, COMPUT J, V37, P795, DOI 10.1093/comjnl/37.9.795
   Ward MP, 1999, COMPUT J, V42, P650, DOI 10.1093/comjnl/42.8.650
   Ward MP, 1996, COMPUT J, V39, P598, DOI 10.1093/comjnl/39.7.598
   WARD MP, 2005, P 9 EUR C SOFTW MAIN
   WEISER M, 1984, IEEE T SOFTWARE ENG, V10, P352, DOI 10.1109/TSE.1984.5010248
   Wilson Robert P., 1995, P ACM SIGPLAN 1995 C, p1aAS12
   Wilson Robert Paul, 1997, Ph.D. Dissertation
   WIRTH N, 1971, COMMUN ACM, V14, P221, DOI 10.1145/362575.362577
   Wordsworth J.B., 1996, SOFTWARE ENG B
   YANG H., 2003, Successful Evolution of Software Systems
   YOUNGER EJ, 1993, J SOFTWARE MAINTENAN, V6, P197
   ZHANG X, 2002, P 15 INT C THEOR PRO
   ZHANG X, 2002, P IEEE INT WORKSH SO
NR 73
TC 4
Z9 4
U1 0
U2 6
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JAN-FEB
PY 2011
VL 37
IS 1
BP 24
EP 47
DI 10.1109/TSE.2010.13
PG 24
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 712OS
UT WOS:000286676700003
DA 2024-07-18
ER

PT J
AU Pietrantuono, R
   Russo, S
   Trivedi, KS
AF Pietrantuono, Roberto
   Russo, Stefano
   Trivedi, Kishor S.
TI Software Reliability and Testing Time Allocation: An Architecture-Based
   Approach
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Reliability; software architecture; software testing
ID GROWTH-MODELS; OPTIMIZATION; PERFORMANCE; REDUNDANCY; SYSTEMS; COST
AB With software systems increasingly being employed in critical contexts, assuring high reliability levels for large, complex systems can incur huge verification costs. Existing standards usually assign predefined risk levels to components in the design phase, to provide some guidelines for the verification. It is a rough-grained assignment that does not consider the costs and does not provide sufficient modeling basis to let engineers quantitatively optimize resources usage. Software reliability allocation models partially address such issues, but they usually make so many assumptions on the input parameters that their application is difficult in practice. In this paper, we try to reduce this gap, proposing a reliability and testing resources allocation model that is able to provide solutions at various levels of detail, depending upon the information the engineer has about the system. The model aims to quantitatively identify the most critical components of software architecture in order to best assign the testing resources to them. A tool for the solution of the model is also developed. The model is applied to an empirical case study, a program developed for the European Space Agency, to verify model's prediction abilities and evaluate the impact of the parameter estimation errors on the prediction accuracy.
C1 [Pietrantuono, Roberto; Russo, Stefano] Univ Naples Federico II, Dept Comp & Syst Engn, I-80125 Naples, Italy.
   [Trivedi, Kishor S.] Duke Univ, Dept Elect & Comp Engn, Durham, NC 27708 USA.
C3 University of Naples Federico II; Duke University
RP Pietrantuono, R (corresponding author), Univ Naples Federico II, Dept Comp & Syst Engn, Via Claudio 21, I-80125 Naples, Italy.
EM roberto.pietrantuono@unina.it; stefano.russo@unina.it; kst@ee.duke.edu
RI Russo, Stefano/H-7723-2013; Trivedi, Kishor/U-1977-2019
OI Russo, Stefano/0000-0002-8747-3446; Pietrantuono,
   Roberto/0000-0003-2449-1724
FU US National Science Foundation [NSF-CNS-08-31325]; Division Of Computer
   and Network Systems; Direct For Computer & Info Scie & Enginr [0831325]
   Funding Source: National Science Foundation
FX The research of K. S. Trivedi was funded in part by US National Science
   Foundation Grant NSF-CNS-08-31325.
CR Almering V, 2007, IEEE SOFTWARE, V24, P82, DOI 10.1109/MS.2007.182
   Elegbede AOC, 2003, IEEE T RELIAB, V52, P106, DOI 10.1109/TR.2002.807242
   *EUROCONTROL EATMA, 2004, SAFET1ST031000MAN01
   Everett WW, 1999, ASSET'99: 1999 IEEE SYMPOSIUM ON APPLICATION-SPECIFIC SYSTEMS AND SOFTWARE ENGINEERING & TECHNOLOGY - PROCEEDINGS, P204, DOI 10.1109/ASSET.1999.756770
   Gokhale S.S., 1997, PROC 3 ISSAT INT C R, P31
   Gokhale SS, 2004, PERFORM EVALUATION, V58, P391, DOI 10.1016/j.peva.2004.04.003
   Gokhale SS, 2002, 13TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P64, DOI 10.1109/ISSRE.2002.1173214
   Gokhale SS, 1999, ANN SOFTW ENG, V8, P85, DOI 10.1023/A:1018923329647
   GOKHALE SS, 1996, P 7 INT S SOFTW REL
   Gokhale SS, 2006, IEEE T RELIAB, V55, P281, DOI 10.1109/TR.2006.874911
   Goseva-Popstojanova K, 2001, 12TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P22, DOI 10.1109/ISSRE.2001.989455
   Goseva-Popstojanova K, 2001, PERFORM EVALUATION, V45, P179, DOI 10.1016/S0166-5316(01)00034-7
   Helander ME, 1998, IEEE T SOFTWARE ENG, V24, P420, DOI 10.1109/32.689400
   Hou RH, 1996, SEVENTH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P289, DOI 10.1109/ISSRE.1996.558884
   Huang CY, 2007, IEEE T RELIAB, V56, P198, DOI 10.1109/TR.2007.895301
   Huang CY, 2005, IEEE T RELIAB, V54, P583, DOI 10.1109/TR.2005.859230
   LIPOW M, 1982, IEEE T SOFTWARE ENG, V8, P437, DOI 10.1109/TSE.1982.235579
   Lyu MR, 2002, IEEE T RELIAB, V51, P183, DOI 10.1109/TR.2002.1011524
   Lyu MR, 1997, EIGHTH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P336, DOI 10.1109/ISSRE.1997.630881
   Mettas A, 2000, P REL MAINT S, P216, DOI 10.1109/RAMS.2000.816310
   NAKAGAWA Y, 1981, IEEE T RELIAB, V30, P175, DOI 10.1109/TR.1981.5221024
   Onishi J, 2007, IEEE T RELIAB, V56, P94, DOI 10.1109/TR.2006.884602
   PAINTON L, 1995, IEEE T RELIAB, V44, P172, DOI 10.1109/24.387368
   Pasquini A, 1996, IEEE T RELIAB, V45, P531, DOI 10.1109/24.556576
   Ramani S, 2000, PERFORM EVALUATION, V39, P37, DOI 10.1016/S0166-5316(99)00057-7
   RANI I, 2005, P A REL MAI, P428
   REIBMAN A, 1988, COMPUT OPER RES, V15, P19, DOI 10.1016/0305-0548(88)90026-3
   Rice WF, 1999, P REL MAINT S, P190, DOI 10.1109/RAMS.1999.744117
   RTCA and EUROCAE, 1992, DO178BED12B RTCA EUR
   Sahner R., 1996, PERFORMANCE RELIABIL
   Schittkowski K., 1986, Annals of Operations Research, V5, P485, DOI 10.1007/BF02739235
   Sharma VS, 2007, J SYST SOFTWARE, V80, P493, DOI 10.1016/j.jss.2006.07.021
   SRIVASTAVA A, 1994, P SIGPLAN 94 C PROGR, P196
   STRINGFELLOW C, 2002, EMPIR SOFTW ENG, V7, P297
   TILLMAN FA, 1977, IEEE T RELIAB, V26, P162, DOI 10.1109/TR.1977.5220102
   Trivedi K.S., 2001, Probability and statistics with reliability, queueing, and computer science applications, V2nd
   WANG W, 1999, P PAC RIM DEP S
   Wattanapongsakorn N, 2004, IEEE T RELIAB, V53, P406, DOI 10.1109/TR.2004.833310
   Yacoub S, 2004, IEEE T RELIAB, V53, P465, DOI 10.1109/TR.2004.838034
   YAMADA S, 1986, IEEE T RELIAB, V35, P19, DOI 10.1109/TR.1986.4335332
NR 40
TC 51
Z9 59
U1 0
U2 16
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAY-JUN
PY 2010
VL 36
IS 3
BP 323
EP 337
DI 10.1109/TSE.2010.6
PG 15
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 601PB
UT WOS:000278073400004
DA 2024-07-18
ER

PT J
AU Shah, HB
   Görg, C
   Harrold, MJ
AF Shah, Hina B.
   Goerg, Carsten
   Harrold, Mary Jean
TI Understanding Exception Handling: Viewpoints of Novices and Experts
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Exception handling; user study; software developers
AB Several recent studies indicate that many industrial applications exhibit poor quality in the design of exception-handling. To improve the quality of error-handling, we need to understand the problems and obstacles that developers face when designing and implementing exception-handling. In this paper, we present our research on understanding the viewpoint of developers-novices and experts-toward exception-handling. First, we conducted a study with novice developers in industry. The study results reveal that novices tend to ignore exceptions because of the complex nature of exception-handling. Then, we conducted a second study with experts in industry to understand their perspective on exception-handling. The study results show that, for experts, exception-handling is a crucial part in the development process. Experts also confirm the novices' approach of ignoring exception-handling and provide insights as to why novices do so. After analyzing the study data, we identified factors that influence experts' strategy selection process for handling exceptions and then built a model that represents a strategy selection process experts use to handle exceptions. Our model is based on interacting modules and fault scope. We conclude with some recommendations to help novices improve their understanding of exception-handling.
C1 [Shah, Hina B.; Harrold, Mary Jean] Georgia Inst Technol, Coll Comp, Atlanta, GA 30332 USA.
   [Goerg, Carsten] Georgia Inst Technol, Sch Interact Comp, Atlanta, GA 30308 USA.
C3 University System of Georgia; Georgia Institute of Technology;
   University System of Georgia; Georgia Institute of Technology
RP Shah, HB (corresponding author), Georgia Inst Technol, Coll Comp, 266 Ferst Dr, Atlanta, GA 30332 USA.
EM hinashah@cc.gatech.edu; goerg@cc.gatech.edu; harrold@cc.gatech.edu
OI Gorg, Carsten/0000-0001-5088-4201
FU US National Science Foundation [CCR-0205422, CCF-0429117, CCF-0541049,
   CCF0725202]; Tata Consultancy Services, Ltd.
FX An earlier version of this paper appeared in the Proceedings of the
   Fourth International Workshop on Exception Handling (WEH), which was
   held at ACM SIGSOFT 2008 on 14 November 2008 in Atlanta, Georgia. Derek
   Richardson helped the authors with their interview guide questions and
   provided guidance in the early phase of their analysis. He also helped
   them identify their industrial participants for the Expert Study. This
   work was supported in part by awards from the US National Science
   Foundation under CCR-0205422, CCF-0429117, CCF-0541049, and CCF0725202,
   and Tata Consultancy Services, Ltd., to Georgia Tech. Both the novice
   and the expert participants in the studies provided valuable information
   that let the authors better understand the perspectives of developers
   when dealing with exception-handling. The anonymous reviewers and the
   participants in the Fourth International Workshop on Exception Handling,
   which was held at ACM SIGSOFT 2008, provided valuable feedback on an
   earlier version of this work.
CR Cabral B, 2007, LECT NOTES COMPUT SC, V4609, P151
   Coelho R, 2008, AIP CONF PROC, V996, P207, DOI 10.1063/1.2917012
   de Lemos R, 2001, COMPUT SYST SCI ENG, V16, P119
   FILHO FC, 2007, P 2 WORKSH BEST PRAC, P1
   FILHO FC, 2006, P 14 ACM SIGSOFT INT, P152
   Garcia AF, 2001, J SYST SOFTWARE, V59, P197, DOI 10.1016/S0164-1212(01)00062-0
   GEHANI NH, 1992, SOFTWARE PRACT EXPER, V22, P827, DOI 10.1002/spe.4380221003
   GOODENOUGH JB, 1975, COMMUN ACM, V18, P683, DOI 10.1145/361227.361230
   Lippert M., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, P418, DOI 10.1109/ICSE.2000.870432
   Ryder B. G., 2003, Software Engineering Notes, V28, P29, DOI 10.1145/882240.882258
   Shah H, 2009, 2009 ICSE WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING, P80, DOI 10.1109/CHASE.2009.5071417
   Shah H, 2008, SOFTVIS 2008: PROCEEDINGS OF THE 4TH ACM SYMPOSIUM ON SOFTWARE VISUALIZATION, P19
   Strauss E, 1998, CLIN ORTHOP RELAT R, P2
   Wirfs-Brock RJ, 2006, IEEE SOFTWARE, V23, P13, DOI 10.1109/MS.2006.22
   Zhang L., 2007, Proceedings of the 5th international symposium on Principles and practice of programming in Java, PPPJ '07, P175
NR 15
TC 42
Z9 47
U1 1
U2 7
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAR-APR
PY 2010
VL 36
IS 2
BP 150
EP 161
DI 10.1109/TSE.2010.7
PG 12
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 574ZH
UT WOS:000276032300003
DA 2024-07-18
ER

PT J
AU Hallé, S
   Villemaire, R
   Cherkaoui, O
AF Halle, Sylvain
   Villemaire, Roger
   Cherkaoui, Omar
TI Specifying and Validating Data-Aware Temporal Web Service Properties
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Web services; software/program verification; model checking; temporal
   logic
ID SEMANTICS
AB Most works that extend workflow validation beyond syntactical checking consider constraints on the sequence of messages exchanged between services. These constraints are expressed only in terms of message names and abstract away their actual data content. We provide examples of real-world "data-aware" Web service constraints where the sequence of messages and their content are interdependent. To this end, we present CTL-FO+, an extension over Computation Tree Logic that includes first-order quantification on message content in addition to temporal operators. We show how CTL-FO+ is adequate for expressing data-aware constraints, give a sound and complete model checking algorithm for CTL-FO+, and establish its complexity to be PSPACE-complete. A "naive" translation of CTL-FO+ into CTL leads to a serious exponential blowup of the problem that prevents existing validation tools to be used. We provide an alternate translation of CTL-FO+ into CTL, where the construction of the workflow model depends on the property to validate. We show experimentally how this translation is significantly more efficient for complex formulas and makes model checking of data-aware temporal properties on real-world Web service workflows tractable using off-the-shelf tools.
C1 [Halle, Sylvain] Univ Calif Santa Barbara, Santa Barbara, CA 93106 USA.
   [Villemaire, Roger; Cherkaoui, Omar] Univ Quebec, Montreal, PQ H3C 3P8, Canada.
C3 University of California System; University of California Santa Barbara;
   University of Quebec; University of Quebec Montreal
RP Hallé, S (corresponding author), Univ Calif Santa Barbara, Santa Barbara, CA 93106 USA.
EM shalle@acm.org; villemaire.roger@uqam.ca; cherkaoui.omar@uqam.ca
RI Hallé, Sylvain/H-4153-2019
OI Hallé, Sylvain/0000-0002-4406-6154
FU Natural Sciences and Engineering Research Council of Canada
FX The authors gratefully acknowledge the financial support of the Natural
   Sciences and Engineering Research Council of Canada. They thank Jerome
   Tremblay and Boubker Ghandour for their technical contribution to this
   work.
CR ABITEBOUL S, 2008, PODS, P221
   ALUR R, 1994, J ACM, V41, P181, DOI 10.1145/174644.174651
   [Anonymous], 2003, The Spin Model Checker: Primer and Reference Manual
   ARIASFISTEUS J, 2004, P INF RES MAN ASS MA
   ARIASFISTEUS J, 2005, P ACM S APPL COMP, P826
   BALL T, 2000, MSRTR200014
   Baresi L, 2007, IET SOFTW, V1, P219, DOI 10.1049/iet-sen:20070027
   Barringer H, 2004, LECT NOTES COMPUT SC, V2937, P44
   Berardi D., 2005, 31 INT C VERY LARGE, P613
   Boutaba R, 2004, IEEE COMMUN MAG, V42, P101, DOI 10.1109/MCOM.2004.1316540
   BRAMBILLA M, 2005, P 5 INT C WEB ENG SY, P557
   Brogi A., 2004, Electronic Notes in Theoretical Computer Science, V105, P73, DOI DOI 10.1016/J.ENTCS.2004.05.007
   Bultan T., 2003, P 12 INT WORLD WIDE, P403
   Cimatti A., 2002, P INT C COMP AID VER, P359, DOI DOI 10.1007/3-540-45657-0_29
   Clarke Edmund M., 2001, Model Checking
   Deutsch A., 2006, PODS 06, P90
   Deutsch A., 2004, PODS 04, P71
   DUAN Z, 2004, P 2 INT C SERV OR CO, P232
   Foster H, 2003, 18TH IEEE INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P152, DOI 10.1109/ASE.2003.1240303
   Foster H., 2006, PROC INT C INTERNET, P149
   FU X, 2004, P ISSTA 2004, P252
   Fu X., 2004, P 13 INT C WORLD WID, P621
   Garey M.R., 1979, COMPUTERS INTRACTABI
   Gerede CE, 2007, LECT NOTES COMPUT SC, V4749, P181
   HALLE S, 2007, P WEB SERV FORM METH, V4937, P31
   Haller-Dintelmann R, 2008, POSITIVITY, V12, P83, DOI 10.1007/s11117-007-2131-5
   Hinz S, 2005, LECT NOTES COMPUT SC, V3649, P220, DOI 10.1007/11538394_15
   Hopcroft John E., 2000, INTRO AUTOMATA THEOR
   Huth MichaelR. A., 2000, LOGIC COMPUTER SCI M
   Johnson J., 2004, U PISA, P147
   JOSEPHRAJ J, 2005, WEB SERVICES CHOREOG
   KAZHAMIAKIN R, 2006, P 15 INT C WORLD WID, P267
   Koshkina M., 2004, SIGSOFT Software Engineering Notes, V29, P1, DOI DOI 10.1145/1022494.1022526
   Kupferman O, 1995, LECT NOTES COMPUT SC, V939, P325
   Lohmann N, 2006, LECT NOTES COMPUT SC, V4102, P17
   Lucchi R, 2007, J LOGIC ALGEBR PROGR, V70, P96, DOI 10.1016/j.jlap.2006.05.007
   Meredith LG, 2003, COMMUN ACM, V46, P41, DOI 10.1145/944217.944236
   Nakajima S, 2004, LECT NOTES COMPUT SC, V3140, P488
   Ouyang C, 2007, SCI COMPUT PROGRAM, V67, P162, DOI 10.1016/j.scico.2007.03.002
   PARASTATIDIS S, 2005, CSTR899 U NEWC
   Pistore M., 2004, ELECT NOTES THEOR CO, P95, DOI DOI 10.1016/J.ENTCS.2004.05.005
   RENSINK A, 2006, P INT C CONC THEOR, P110
   Schnoebelen Ph., 2003, ADV MODAL LOGIC, V4, P393
   TURNER KJ, 2005, P INT C FORM TECHN N, P473
   van der Aalst WMP, 2006, LECT NOTES COMPUT SC, V4184, P1
   WALTON CD, 2004, P SPRING S SEM WEB S
   Zaha JM, 2006, IEEE INT ENTERP DIST, P45
NR 47
TC 22
Z9 23
U1 0
U2 2
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD SEP-OCT
PY 2009
VL 35
IS 5
BP 669
EP 683
DI 10.1109/TSE.2009.29
PG 15
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 498PM
UT WOS:000270154300006
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Zheng, T
   Woodside, M
   Litoiu, M
AF Zheng, Tao
   Woodside, Murray
   Litoiu, Marin
TI Performance model estimation and tracking using optimal filters
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE adaptive service systems; performance modeling; model tracking;
   estimation; performance measures
AB To update a performance model, its parameter values must be updated and, in some applications (such as autonomic systems), tracked continuously over time. Direct measurement of many parameters during system operation requires instrumentation which is impractical. Kalman filter estimators can track such parameters using other data such as response times and utilizations, which are readily observable. This paper adapts Kalman filter estimators for performance model parameters, evaluates the approximations which must be made, and develops a systematic approach to setting up an estimator. The estimator converges under easily verified conditions. Different queuing-based models are considered here and the extension for state-based models (such as stochastic Petri nets) is straightforward.
C1 [Zheng, Tao] Univ Waterloo, Dept Comp Sci, Waterloo, ON N2L 3G1, Canada.
   [Woodside, Murray] Carleton Univ, Dept Syst & Comp Engn, Ottawa, ON K1S 5B6, Canada.
   [Litoiu, Marin] IBM Corp, Toronto Lab, Ctr Adv Studies, Toronto, ON, Canada.
C3 University of Waterloo; Carleton University; International Business
   Machines (IBM)
RP Zheng, T (corresponding author), Univ Waterloo, Dept Comp Sci, Waterloo, ON N2L 3G1, Canada.
EM t3zheng@uwaterloo.ca; cmw@sce.carleton.ca; marin@cs.ubm.com
OI Litoiu, Marin/0000-0003-0383-920X
CR Allen A. O., 1990, PROBABILITY STAT QUE
   [Anonymous], P COMP MEAS GROUP
   [Anonymous], 1998, Queueing networks and Markov chains: modeling and performance evaluation with computer science applications
   [Anonymous], 1991, The Art of Computer Systems Performance Analysis: Techniques for Experimental Design, Measurement, Simulation, and Modeling
   [Anonymous], 2000, Simulation Modeling and Analysis
   Balsamo S, 2004, IEEE T SOFTWARE ENG, V30, P295, DOI 10.1109/TSE.2004.9
   Brookner E., 1998, TRACKING KALMAN FILT
   FRANCKE L, 1996, SIGHT SOUND, V6, P26
   FRANKS G, 2004, P 12 IEEE ACM INT S
   FRANKS G, 2000, THESIS CARLETON U
   FRANKS G, 2006, COMPUTER SYSTEM PERF
   Harvey AC., 1989, FORECASTING STRUCTUR
   HOLTSCHLAG DJ, 1997, A822533 US GEOL SURV
   Jazwinski A., 1970, STOCHASTIC PROCESSES
   Julier S, 2000, IEEE T AUTOMAT CONTR, V45, P477, DOI 10.1109/9.847726
   Julier SJ, 1997, P SOC PHOTO-OPT INS, V3068, P182, DOI 10.1117/12.280797
   Kalman R E., 1960, J BASIC ENG, V82, P35, DOI DOI 10.1115/1.3662552
   LEFEBVRE T, 2001, 01R033 KU LEUV
   LITOIU M, 2000, P DES EV AUT SOFTW W
   MALY P, 2000, P 11 INT C COMP PERF, P10
   MEHRA RK, 1972, IEEE T AUTOMAT CONTR, VAC17, P693, DOI 10.1109/TAC.1972.1100100
   MOGHADDAMJOO A, 1989, IEEE T ACOUST SPEECH, V37, P1166, DOI 10.1109/29.31265
   Norgaard M, 2000, AUTOMATICA, V36, P1627, DOI 10.1016/S0005-1098(00)00089-3
   ROLIA JA, 1995, IEEE T SOFTWARE ENG, V21, P689, DOI 10.1109/32.403785
   Schneider FE, 2004, ROMOCO' 04: PROCEEDINGS OF THE FOURTH INTERNATIONAL WORKSHOP ON ROBOT MOTION AND CONTROL, P85
   Sheikh F, 1997, INT CON DISTR COMP S, P482, DOI 10.1109/ICDCS.1997.603390
   Tanizaki H., 1996, NONLINEAR FILTERS ES
   Verdickt T, 2005, IEEE T SOFTWARE ENG, V31, P695, DOI 10.1109/TSE.2005.88
   Wang H, 2000, PERFORM EVALUATION, V39, P189, DOI 10.1016/S0166-5316(99)00064-4
   Wood A, 2001, SIGHT SOUND, V11, P4
   WOODSIDE M, 2005, P 2 INT C QUANT EV S
   WOODSIDE M, 2006, P 3 IEEE INT C AUT C
   ZHENG T, 2005, P CASCON 05 OCT
NR 33
TC 66
Z9 77
U1 0
U2 5
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAY-JUN
PY 2008
VL 34
IS 3
BP 391
EP 406
DI 10.1109/TSE.2008.30
PG 16
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 306CA
UT WOS:000256223600006
DA 2024-07-18
ER

PT J
AU Dingsoyr, T
   Moe, NB
AF Dingsoyr, Torgeir
   Moe, Nils Brede
TI The impact of employee participation on the use of an electronic process
   guide: A longitudinal case study
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE software engineering process; process implementation and change; process
   infrastructure; software process models; organizational management and
   coordination; software quality/ SQA; human factors in software design
ID SOFTWARE; INVOLVEMENT; ACCEPTANCE
AB Many software companies disseminate process knowledge through electronic process guides. A common problem with such guides is that they are not used. Through a case study, we investigated how participation in creating an electronic process guide, through process workshops, influenced the use of the guide. We studied developer and project manager usage with respect to three factors: frequency of use, used functionality, and reported advantages and disadvantages. We collected data from three rounds of interviews and 19 months of usage logs in a longitudinal study in a medium-size software company. Employees who participated in process workshops showed a higher degree of usage, used a larger number of functions, and expressed more advantages and disadvantages than those not involved. Our study suggests that employee participation has a long-term positive effect on electronic process guide usage.
C1 [Dingsoyr, Torgeir; Moe, Nils Brede] SINTEF, Informat & Commun Technol, NO-7465 Trondheim, Norway.
C3 SINTEF
RP Dingsoyr, T (corresponding author), SINTEF, Informat & Commun Technol, NO-7465 Trondheim, Norway.
EM torgeir.dingsoyr@sintef.no; nils.b.moe@sintef.no
RI Dingsøyr, Torgeir/AAJ-7360-2020; Dingsøyr, Torgeir/J-5862-2012; Moe,
   Nils Brede/AAD-8183-2021
OI Dingsøyr, Torgeir/0000-0003-0725-345X; Dingsøyr,
   Torgeir/0000-0003-0725-345X; Moe, Nils Brede/0000-0003-2669-0778
CR Ahonen J. J., 2002, Software Process Improvement and Practice, V7, P33, DOI 10.1002/spip.152
   Ambriola V., 1997, ACM Transactions on Software Engineering and Methodology, V6, P283, DOI 10.1145/258077.258080
   [Anonymous], 1993, Teams, markets and systems: Business innovation and information technology
   Avison D., 2006, Information Systems Development-Methodologies, Techniques & Tools
   Baumgartel H., 1959, KANSAS BUSINESS REV, V12, P2
   Becker-Kornstaedt U., 2001, Product Focused Software Process Improvement. Third International Conference, PROFES 2001. Proceedings (Lecture Notes in Computer Science Vol.2188), P312
   Bjerknes G., 1995, Scandinavian Journal of Information Systems, V7, P73
   Black JS, 1997, HUM RELAT, V50, P859, DOI 10.1177/001872679705000705
   Cameron J, 2002, COMMUN ACM, V45, P72, DOI 10.1145/504729.504731
   Conradi R, 2002, IEEE SOFTWARE, V19, P92, DOI 10.1109/MS.2002.1020295
   CONRADI R, 2001, P EUR SOFTW ENG C, V5, P268
   CURTIS B, 1992, COMMUN ACM, V35, P75, DOI 10.1145/130994.130998
   DAVIS FD, 1989, MIS QUART, V13, P319, DOI 10.2307/249008
   Deming W. E., 1986, OUT CRISIS
   Dingsoyr T, 2005, INT SER SOFTW ENG, V10, P187
   Dybå T, 2005, IEEE T SOFTWARE ENG, V31, P410, DOI 10.1109/TSE.2005.53
   DYBA T, 2004, P INT SOFT METR S
   DYBA T, 2005, P 4 INT S EMP SOFTW
   Fenton-O'Creevy M, 1998, J ORGAN BEHAV, V19, P67, DOI 10.1002/(SICI)1099-1379(199801)19:1<67::AID-JOB827>3.0.CO;2-Y
   Fitzgerald B, 2003, COMMUN ACM, V46, P64, DOI 10.1145/641205.641206
   GEORGAKOPOULOS D, 1995, DISTRIB PARALLEL DAT, V3, P119, DOI 10.1007/BF01277643
   Guzzo RA, 1996, ANNU REV PSYCHOL, V47, P307, DOI 10.1146/annurev.psych.47.1.307
   Hidding GJ, 1997, COMMUN ACM, V40, P102, DOI 10.1145/265684.265697
   Iivari J, 1998, INFORM SOFTWARE TECH, V40, P501, DOI 10.1016/S0950-5849(98)00077-9
   KELLNER MI, 1998, P 5 INT C SOFTW PROC
   Kurniawati F, 2006, INFORM SOFTWARE TECH, V48, P566, DOI 10.1016/j.infsof.2005.06.002
   LAWLER EE, 1987, ORGAN DYN, V15, P42, DOI 10.1016/0090-2616(87)90043-X
   Meso P, 2006, INFORM SYST MANAGE, V23, P19, DOI 10.1201/1078.10580530/46108.23.3.20060601/93704.3
   Miles M. B., 1984, Qualitative data analysis: An expanded sourcebook
   Moe N. B., 2006, Software Process Improvement and Practice, V11, P21, DOI 10.1002/spip.250
   MOE NB, 2005, P 12 EUR C SOFTW PRO, P175
   Park S, 2005, LIBR INFORM SCI RES, V27, P203, DOI 10.1016/j.lisr.2005.01.013
   PARNAS DL, 1986, IEEE T SOFTWARE ENG, V12, P251, DOI 10.1109/TSE.1986.6312940
   Purser RE, 1997, QUAL PROG, V30, P66
   Riemenschneider CK, 2002, IEEE T SOFTWARE ENG, V28, P1135, DOI 10.1109/TSE.2002.1158287
   Riordan CM, 2005, HUM RESOUR MANAGE-US, V44, P471, DOI 10.1002/hrm.20085
   Scott L, 2003, 2003 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P162, DOI 10.1109/ISESE.2003.1237975
   Scott L, 2002, INFORM SOFTWARE TECH, V44, P601, DOI 10.1016/S0950-5849(02)00080-0
   SCOTT L, 1992, P 9 AS PAC SOFTW ENG, P603
   Scupin R, 1997, HUM ORGAN, V56, P233, DOI 10.17730/humo.56.2.x335923511444655
   Seaman CB, 1999, IEEE T SOFTWARE ENG, V25, P557, DOI 10.1109/32.799955
   Strauss A., 1990, BASICS QUALITATIVE R
   Vandenberg RJ, 1999, GROUP ORGAN MANAGE, V24, P300, DOI 10.1177/1059601199243004
   Venkatesh V, 2000, MANAGE SCI, V46, P186, DOI 10.1287/mnsc.46.2.186.11926
   von Wangenheim CG, 2006, INFORM SOFTWARE TECH, V48, P890, DOI 10.1016/j.infsof.2005.12.010
   Wenger E., 1998, Communities of practice: learning, meaning, and identity, DOI [10.1017/CBO9780511803932, DOI 10.1017/CBO9780511803932]
   Wilpert B., 1998, ORG PARTICIPATION, P40
   Yin R.K., 2003, CASE STUDY RES DESIG
NR 48
TC 11
Z9 11
U1 0
U2 9
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAR-APR
PY 2008
VL 34
IS 2
BP 212
EP 225
DI 10.1109/TSE.2007.70767
PG 14
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science; Engineering
GA 276SC
UT WOS:000254161500004
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Poshyvanyk, D
   Guéhéneuc, YG
   Marcus, A
   Antoniol, G
   Rajlich, V
AF Poshyvanyk, Denys
   Gueheneuc, Yann-Gael
   Marcus, Andrian
   Antoniol, Giuliano
   Rajlich, Vaclav
TI Feature location using probabilistic ranking of methods based on
   execution scenarios and information retrieval
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE program understanding; feature identification; concept location; dynamic
   and static analyses; information retrieval; Latent Semantic Indexing;
   scenario-based probabilistic ranking; open source software
ID SOFTWARE; RECOVERY
AB This paper recasts the problem of feature location in source code as a decision-making problem in the presence of uncertainty. The solution to the problem is formulated as a combination of the opinions of different experts. The experts in this work are two existing techniques for feature location: a scenario-based probabilistic ranking of events and an information-retrieval-based technique that uses Latent Semantic Indexing. The combination of these two experts is empirically evaluated through several case studies, which use the source code of the Mozilla Web browser and the Eclipse integrated development environment. The results show that the combination of experts significantly improves the effectiveness of feature location as compared to each of the experts used independently.
C1 Wayne State Univ, Dept Comp Sci, Detroit, MI 48202 USA.
   Univ Montreal, Dept Informat & Rech Operat, Montreal, PQ H3C 3J7, Canada.
   Ecole Polytech, Dept Informat, Montreal, PQ H3C 3J7, Canada.
C3 Wayne State University; Universite de Montreal; Universite de Montreal;
   Polytechnique Montreal
RP Poshyvanyk, D (corresponding author), Wayne State Univ, Dept Comp Sci, 5143 Cass Ave, Detroit, MI 48202 USA.
EM denys@cs.wayne.edu; guehene@iro.umontreal.ca; amarcus@cs.wayne.edu;
   antoniol@ieee.org; rajlich@cs.wayne.edu
RI Guéhéneuc, Yann-Gaël/K-9371-2019
OI Poshyvanyk, Denys/0000-0002-5626-7586; Marcus,
   Andrian/0000-0001-5450-5598
CR AHO AV, 1980, FORMAL LANGUAGE THEO, P325
   [Anonymous], 2005, Proc. of the European Software Engineering Conference and the ACM SIGSOFT Symposium on the Foundations of Software Engineering (ESEC/FSE'05)
   Antoniol G, 2005, PROC IEEE INT CONF S, P357
   Antoniol G, 2000, PROG COMPREHEN, P253, DOI 10.1109/WPC.2000.852502
   Antoniol G, 2006, IEEE T SOFTWARE ENG, V32, P627, DOI 10.1109/TSE.2006.88
   BIGGERSTAFF TJ, 1994, COMMUN ACM, V37, P72, DOI 10.1145/175290.175300
   Bohner S. A., 1996, SOFTWARE CHANGE IMPA
   Briand L. C., 1999, Proceedings IEEE International Conference on Software Maintenance - 1999 (ICSM'99). `Software Maintenance for Business Change' (Cat. No.99CB36360), P475, DOI 10.1109/ICSM.1999.792645
   Chen KR, 2000, PROG COMPREHEN, P241, DOI 10.1109/WPC.2000.852498
   De Lucia A, 2004, PROC IEEE INT CONF S, P306, DOI 10.1109/ICSM.2004.1357816
   DEERWESTER S, 1990, J AM SOC INFORM SCI, V41, P391, DOI 10.1002/(SICI)1097-4571(199009)41:6<391::AID-ASI1>3.0.CO;2-9
   Denys P., 2005, 21st IEEE International Conference on Software Maintenance (ICSM), P69
   Edwards D., 2004, APPROACH FEATURE LOC
   Eisenbarth T, 2003, IEEE T SOFTWARE ENG, V29, P210, DOI 10.1109/TSE.2003.1183929
   Eisenberg AD, 2005, PROC IEEE INT CONF S, P337
   Eng D., 2002, PROC ACM SIGPLAN SIG, P43
   ERNST MD, 2003, P ICSE WORKSH DYN AN, P24
   Etzkorn LH, 1997, COMPUTER, V30, P66, DOI 10.1109/2.625311
   Frakes W. B., 1986, Software reuse ACM SIGIR Forum through information retrieval, V21, P30
   GUEHENEUC YG, 2004, P 19 C OBJ OR PROGR, P301
   Hayes JH, 2006, IEEE T SOFTWARE ENG, V32, P4, DOI 10.1109/TSE.2006.3
   JACOBS RA, 1995, NEURAL COMPUT, V7, P867, DOI 10.1162/neco.1995.7.5.867
   Ko AJ, 2006, IEEE T SOFTWARE ENG, V32, P971, DOI 10.1109/TSE.2006.116
   Kuhn A, 2005, WCRE: 12TH WORKING CONFERENCE ON REVERSE ENGINEERING 2005, PROCEEDINGS, P133
   Lindvall M, 1998, J SOFTW MAINT-RES PR, V10, P37, DOI 10.1002/(SICI)1096-908X(199801/02)10:1<37::AID-SMR163>3.0.CO;2-R
   LUCIA AD, 2005, P 9 EUR C SOFTW MAIN
   MAAREK YS, 1991, IEEE T SOFTWARE ENG, V17, P800, DOI 10.1109/32.83915
   Maletic JI, 2001, PROC INT CONF SOFTW, P103, DOI 10.1109/ICSE.2001.919085
   Marcelis C L, 2001, Fam Cancer, V1, P107
   Marcus A, 2005, PROC IEEE INT CONF S, P133
   Marcus A, 2005, PROG COMPREHEN, P33, DOI 10.1109/WPC.2005.33
   Marcus A, 2005, INT J SOFTW ENG KNOW, V15, P811, DOI 10.1142/S0218194005002543
   Marcus A, 2004, 11TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P214, DOI 10.1109/WCRE.2004.10
   Poshyvanyk D, 2006, INT C PROGRAM COMPRE, P137, DOI 10.1109/ICPC.2006.17
   Poshyvanyk D, 2006, PROC IEEE INT CONF S, P469
   Poshyvanyk D, 2006, INT C PROGRAM COMPRE, P252, DOI 10.1109/ICPC.2006.32
   QUEILLE JP, 1994, INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE, PROCEEDINGS, P234, DOI 10.1109/ICSM.1994.336771
   Rajlich V, 2002, PROG COMPREHEN, P271, DOI 10.1109/WPC.2002.1021348
   RAJLICH V, 2004, IEEE SOFTWARE, P2
   Rajlich V, 2006, COMMUN ACM, V49, P67, DOI 10.1145/1145287.1145289
   Robillard MP, 2004, IEEE T SOFTWARE ENG, V30, P889, DOI 10.1109/TSE.2004.101
   Salah M, 2005, PROC IEEE INT CONF S, P639
   Salah M, 2004, PROC IEEE INT CONF S, P72, DOI 10.1109/ICSM.2004.1357792
   WILDE N, 1992, P INT C SOFTW MAINT, P200
   Winkler R.L., 2004, Decision Analysis, V1, P167, DOI DOI 10.1287/DECA.1030.0008
   Wong WE, 2000, J SYST SOFTWARE, V54, P87, DOI 10.1016/S0164-1212(00)00029-7
   Ye YW, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P513, DOI 10.1109/ICSE.2002.1007995
   Yin R. K., 2015, CASE STUDY RES DESIG
   Zhao W, 2006, ACM T SOFTW ENG METH, V15, P195, DOI 10.1145/1131421.1131424
NR 49
TC 277
Z9 331
U1 0
U2 17
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUN
PY 2007
VL 33
IS 6
BP 420
EP 432
DI 10.1109/TSE.2007.1016
PG 13
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 160PJ
UT WOS:000245954500004
DA 2024-07-18
ER

PT J
AU Jeffrey, D
   Gupta, N
AF Jeffrey, Dennis
   Gupta, Neelam
TI Improving fault detection capability by selectively retaining test cases
   during test suite reduction
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE software testing; testing criteria; test suite minimization; test suite
   reduction; fault detection effectiveness
ID MINIMIZATION
AB Software testing is a critical part of software development. As new test cases are generated over time due to software modifications, test suite sizes may grow significantly. Because of time and resource constraints for testing, test suite minimization techniques are needed to remove those test cases from a suite that, due to code modifications over time, have become redundant with respect to the coverage of testing requirements for which they were generated. Prior work has shown that test suite minimization with respect to a given testing criterion can significantly diminish the fault detection effectiveness (FDE) of suites. We present a new approach for test suite reduction that attempts to use additional coverage information of test cases to selectively keep some additional test cases in the reduced suites that are redundant with respect to the testing criteria used for suite minimization, with the goal of improving the FDE retention of the reduced suites. We implemented our approach by modifying an existing heuristic for test suite minimization. Our experiments show that our approach can significantly improve the FDE of reduced test suites without severely affecting the extent of suite size reduction.
C1 Univ Arizona, Dept Comp Sci, Tucson, AZ 85721 USA.
C3 University of Arizona
RP Jeffrey, D (corresponding author), Univ Arizona, Dept Comp Sci, Tucson, AZ 85721 USA.
EM jeffreyd@cs.arizona.edu; ngupta@cs.arizona.edu
CR [Anonymous], 1995, P 12 INT C TEST COMP
   [Anonymous], P SIGPLAN SIGSOFT WO
   BALCER MJ, 1989, ACM SIGSOFT, V14, P210, DOI 10.1145/75309.75332
   Black J, 2004, PROC INT CONF SOFTW, P106, DOI 10.1109/ICSE.2004.1317433
   Boyapati C., 2002, ISSTA 02, P123, DOI DOI 10.1145/566172.566191
   Chen TY, 1996, INFORM PROCESS LETT, V60, P135, DOI 10.1016/S0020-0190(96)00135-4
   Chvatal V., 1979, Mathematics of Operations Research, V4, P233, DOI 10.1287/moor.4.3.233
   Cormen Thomas H., 2001, INTRO ALGORITHMS
   Garey M. R., 1979, Computers and intractability. A guide to the theory of NP-completeness
   Ghezzi C., 2003, FUNDAMENTALS SOFTWAR
   Harder M, 2003, PROC INT CONF SOFTW, P60, DOI 10.1109/ICSE.2003.1201188
   Harrold M. J., 1993, ACM Transactions on Software Engineering and Methodology, V2, P270, DOI 10.1145/152388.152391
   Heimdahl MPE, 2004, 19TH INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P176, DOI 10.1109/ASE.2004.1342735
   Horgan J. R., 1992, Proceedings of the Second Symposium on Assessment of Quality Software Development Tools (Cat. No.92TH0415-0), P2, DOI 10.1109/AQSDT.1992.205829
   HUTCHINS M, 1994, PROC INT CONF SOFTW, P191, DOI 10.1109/ICSE.1994.296778
   Jones JA, 2003, IEEE T SOFTWARE ENG, V29, P195, DOI 10.1109/TSE.2003.1183927
   Leon D, 2003, ISSRE 2003: 14TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P442, DOI 10.1109/ISSRE.2003.1251065
   RAPPS S, 1985, IEEE T SOFTWARE ENG, V11, P367, DOI 10.1109/TSE.1985.232226
   Rothermel G, 1998, PROC IEEE INT CONF S, P34, DOI 10.1109/ICSM.1998.738487
   Rothermel G, 2001, IEEE T SOFTWARE ENG, V27, P929, DOI 10.1109/32.962562
   Rothermel G, 2002, SOFTW TEST VERIF REL, V12, P219, DOI 10.1002/stvr.256
   Sampath S, 2004, 19TH INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P132, DOI 10.1109/ASE.2004.1342731
   Snedecor G.W., 1967, Statistical Methods, V6th edn
   Srivastava A., 2002, Software Engineering Notes, V27, P97, DOI 10.1145/566171.566187
   TALLAM S, 2005, P WORKSH PROGR AN SO
   Vokolos FI, 1998, PROC IEEE INT CONF S, P44, DOI 10.1109/ICSM.1998.738488
   VONRONNE J, 1999, THESIS OREGON STATE
   Wong WE, 1998, SOFTWARE PRACT EXPER, V28, P347, DOI 10.1002/(SICI)1097-024X(19980410)28:4<347::AID-SPE145>3.0.CO;2-L
NR 28
TC 98
Z9 126
U1 0
U2 6
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD FEB
PY 2007
VL 33
IS 2
BP 108
EP 123
DI 10.1109/TSE.2007.18
PG 16
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 120MX
UT WOS:000243090100003
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Bruntink, M
   van Deursen, A
   van Engelen, R
   Tourwé, T
AF Bruntink, M
   van Deursen, A
   van Engelen, R
   Tourwé, T
TI On the use of clone detection for identifying crosscutting concern code
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article; Proceedings Paper
CT 20th IEEE International Conference on Software Maintenance (ICSM 2004)
CY SEP 11-14, 2004
CL Chicago, IL
SP IEEE Comp Soc
DE clone detection; reverse engineering; aspect-oriented programming;
   crosscutting concerns; aspect mining
AB In systems developed without aspect-oriented programming, code implementing a crosscutting concern may be spread over many different parts of a system. Identifying such code automatically could be of great help during maintenance of the system. First of all, it allows a developer to more easily find the places in the code that must be changed when the concern changes and, thus, makes such changes less time consuming and less prone to errors. Second, it allows the code to be refactored to an aspect-oriented solution, thereby improving its modularity. In this paper, we evaluate the suitability of clone detection as a technique for the identification of crosscutting concerns. To that end, we manually identify five specific crosscutting concerns in an industrial C system and analyze to what extent clone detection is capable of finding them. We consider our results as a stepping stone toward an automated "aspect miner" based on clone detection.
C1 CWI, Dept Software Engn, NL-1098 SJ Amsterdam, Netherlands.
   Delft Univ Technol, Fac Elect Engn Math & Comp Sci, NL-2628 CD Delft, Netherlands.
   ASML Netherlands BV, Software Syst Dev, NL-5504 DR Veldhoven, Netherlands.
   Vrije Univ Brussels, Programming Technol Lab, B-1050 Brussels, Belgium.
C3 Delft University of Technology; ASML Holding; Vrije Universiteit Brussel
RP CWI, Dept Software Engn, Kruislaan 413, NL-1098 SJ Amsterdam, Netherlands.
EM Magiel.Bruntink@cwi.nl; Arie.van.Deursen@cwi.nl;
   Remco.van.Engelen@asml.com
RI van Deursen, Arie/G-3084-2011
OI van Deursen, Arie/0000-0003-4850-3312
CR BAKER BS, 1995, SECOND WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P86, DOI 10.1109/WCRE.1995.514697
   Balazinska M, 2000, SEVENTH WORKING CONFERENCE ON REVERSE ENGINEERING - PROCEEDINGS, P98, DOI 10.1109/WCRE.2000.891457
   Baxter ID, 1998, PROC IEEE INT CONF S, P368, DOI 10.1109/ICSM.1998.738528
   Breu S, 2004, 19TH INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P310, DOI 10.1109/ASE.2004.1342754
   Bruntink M, 2005, PROC IEEE INT CONF S, P37
   Bruntink M, 2004, PROC IEEE INT CONF S, P200, DOI 10.1109/ICSM.2004.1357804
   BRUNTINK M, 2005, SENE0502 CWI CENTR W
   Ceccato M., 2005, P INT WORKSH PROGR C
   COADY Y, 2001, P 8 EUR SOFTW ENG C, P88
   Ducasse S., 1999, Proceedings IEEE International Conference on Software Maintenance - 1999 (ICSM'99). `Software Maintenance for Business Change' (Cat. No.99CB36360), P109, DOI 10.1109/ICSM.1999.792593
   Ettinger R., 2004, PROC 3 INT C ASPECT, P93
   Fanta R, 1999, J SOFTW MAINT-RES PR, V11, P223, DOI 10.1002/(SICI)1096-908X(199907/08)11:4<223::AID-SMR194>3.0.CO;2-D
   Griswold WG, 2001, PROC INT CONF SOFTW, P265, DOI 10.1109/ICSE.2001.919100
   HANNEMANN J, 2001, P ICSE WORKSH ADV SE
   Holt RC, 1998, FIFTH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P210, DOI 10.1109/WCRE.1998.723191
   Johnson J. H., 1993, Proceedings CASCON '93, P171
   Kamiya T, 2002, IEEE T SOFTWARE ENG, V28, P654, DOI 10.1109/TSE.2002.1019480
   Kim M, 2004, 2004 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P83
   Komondoor R, 2001, LECT NOTES COMPUT SC, V2126, P40
   Krinke J, 2001, EIGHTH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P301, DOI 10.1109/WCRE.2001.957835
   Marcus A, 2001, 16TH ANNUAL INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2001), PROCEEDINGS, P107, DOI 10.1109/ASE.2001.989796
   Marin M, 2004, 11TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P132, DOI 10.1109/WCRE.2004.23
   Mayrand J, 1996, INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE, PROCEEDINGS, P244, DOI 10.1109/ICSM.1996.565012
   Mishne G., 2004, COUPLING APPROACHES, P539
   Murphy G. C., 2005, ASPECT ORIENTED SOFT, P507
   Rieger Matthias., 1999, Proc. of the Workshop on Object-Oriented Technology at the European Conference on Object-Oriented Programming (ECOOP'99), P177
   Shepherd D, 2004, SERP'04: PROCEEDINGS OF THE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING RESEARCH AND PRACTICE, VOLS 1 AND 2, P601
   SOLOWAY E, 1988, COMMUN ACM, V31, P1259, DOI 10.1145/50087.50088
   Tarr P., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P107, DOI 10.1109/ICSE.1999.841000
   Tourwé T, 2004, FOURTH IEEE INTERNATIONAL WORKSHOP ON SOURCE CODE ANALYSIS AND MANIPULATION, PROCEEDINGS, P97
   Van Rysselberghe F, 2004, 19TH INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P336, DOI 10.1109/ASE.2004.1342759
   Van Rysselberghe F, 2003, SIXTH INTERNATIONAL WORKSHOP ON PRINCIPLES OF SOFTWARE EVOLUTION, PROCEEDINGS, P126, DOI 10.1109/IWPSE.2003.1231219
   VANRIJSBERGEN CJ, 1979, INFORMATION RETRIEVA
   Walenstein A, 2003, 10TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P285, DOI 10.1109/WCRE.2003.1287259
   WALENSTEIN A, 2003, P 2 INT WORKSH DET S, P11
   Zhang Charles., 2003, AOSD 03, P130
   Zhang Charles., 2004, OOPSLA 04, P20
   2005, PROJECT BAUHAUS
NR 38
TC 71
Z9 97
U1 0
U2 8
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD OCT
PY 2005
VL 31
IS 10
BP 804
EP 818
DI 10.1109/TSE.2005.114
PG 15
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Engineering
GA 980JR
UT WOS:000233015300002
DA 2024-07-18
ER

PT J
AU Moon, M
   Yeom, K
   Chae, HS
AF Moon, M
   Yeom, K
   Chae, HS
TI An approach to developing domain requirements as a core asset based on
   commonality and variability analysis in a product line
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article; Proceedings Paper
CT 8th International Conference on Software Reuse
CY JUL 05-09, 2004
CL Madrid, SPAIN
DE requirement engineering; product-line; core asset; commonality;
   variability; domain analysis; reuse
AB The methodologies of product line engineering emphasize proactive reuse to construct high-quality products more quickly that are less costly. Requirements engineering for software product families differs significantly from requirements engineering for single software products. The requirements for a product line are written for the group of systems as a whole, with requirements for individual systems specified by a delta or an increment to the generic set. Therefore, it is necessary to identify and explicitly denote the regions of commonality and points of variation at the requirements level. In this paper, we suggest a method of producing requirements that will be a core asset in the product line. We describe a process for developing domain requirements where commonality and variability in a domain are explicitly considered. A CASE environment, named DREAM, for managing commonality and variability analysis of domain requirements is also described. We also describe a case study for an e-Travel System domain where we found that our approach to developing domain requirements based on commonality and variability analysis helped to produce domain requirements as a core asset for product lines.
C1 Pusan Natl Univ, Dept Comp Sci & Engn, Pusan 609735, South Korea.
C3 Pusan National University
RP Pusan Natl Univ, Dept Comp Sci & Engn, 30 Changjeon Dong, Pusan 609735, South Korea.
EM mkmoon@pusan.ac.kr; yeom@pusan.ac.kr; hschae@pusan.ac.kr
CR [Anonymous], 1972, Semantic primitives
   [Anonymous], 1998, REQUIREMENTS ENG PRO
   BERARD M, 1992, ESSAYS OBJECT ORIENT
   CHASTEK G, 2001, CMUSEI2001TR001
   Coplien J, 1998, IEEE SOFTWARE, V15, P37, DOI 10.1109/52.730836
   CREPS D, 1996, ORG DOMAIN MODELING
   Faulk SR, 2001, FIFTH IEEE INTERNATIONAL SYMPOSIUM ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P48
   Griss ML, 1998, FIFTH INTERNATIONAL CONFERENCE ON SOFTWARE REUSE - PROCEEDINGS, P76, DOI 10.1109/ICSR.1998.685732
   Halmans Gunter., 2003, SOFTWARE SYSTEM MODE, V2, P15
   HAN SI, 2003, EA2003053602020302 D
   HAN SI, 2003, EA2003053602010104 E
   *IBM, 2004, IBM REQUISITEPRO
   Jacobson I., 1997, Software Reuse: Architecture, Process and Organization for Business Success
   KANG BC, 2003, EA2003053602020102 D
   KANG BC, 2003, EA2003053602020202 E
   KANG BC, 2003, EA2003053602010101 E
   Kang KC, 1998, ANN SOFTW ENG, V5, P143, DOI 10.1023/A:1018980625587
   Kang Kyo C, 1990, Technical Report
   KIM YH, 2003, EA2003053602010204 E
   Kotonya G, 1996, SOFTWARE ENG J, V11, P5, DOI 10.1049/sej.1996.0002
   KUUSELA J, 2000, P 22 INT C SOFTW ENG, P60
   MOON M, 2003, P 1 ACIS INT C SOFTW, P149
   MUTHIG D, 2002, P 2 SOFTW PROD LIN C
   Northrop L., 2001, SOFTWARE PRODUCT LIN
   Nuseibeh B., 2000, FUTURE SOFTWARE ENG, P37
   *OMG, 2003, XMI MET INT XMI 2 0
   THOMPSON JM, 2003, REQUIREMENTS ENG APR, P42
   Weiss D.M., 1999, Software Product-Line Engineering-A Family-Based Software Development Process
   2004, TELELOGIC DOORS
NR 29
TC 62
Z9 68
U1 1
U2 12
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUL
PY 2005
VL 31
IS 7
BP 551
EP 569
DI 10.1109/TSE.2005.76
PG 19
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Engineering
GA 951EW
UT WOS:000230912900003
DA 2024-07-18
ER

PT J
AU Flanagan, C
   Freund, SN
   Qadeer, S
AF Flanagan, C
   Freund, SN
   Qadeer, S
TI Exploiting purity for atomicity
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article; Proceedings Paper
CT IEEE International Symposium on Software Testing and Analysis
CY JUL 11-14, 2004
CL Boston, MA
SP IEEE
DE atomicity; purity; reduction; concurrent programs
AB Multithreaded programs often exhibit erroneous behavior because of unintended interactions between concurrent threads. This paper focuses on the noninterference property of atomicity. A procedure is atomic if, for every execution, there is an equivalent serial execution in which the actions of the atomic procedure are not interleaved with actions of other threads. This key property makes atomic procedures amenable to sequential reasoning techniques, which significantly facilitates subsequent validation activities such as code inspection and testing. Several existing tools verify atomicity by using commutativity of actions to show that every execution reduces to a corresponding serial execution. However, experiments with these tools have highlighted a number of interesting procedures that, while intuitively atomic, are not reducible. In this paper, we exploit the notion of pure code blocks to verify the atomicity of such irreducible procedures. If a pure block terminates normally, then its evaluation does not change the program state and, hence, these evaluation steps can be removed from the program trace before reduction. We develop a static typed-based analysis for atomicity based on this insight, and we illustrate this analysis on a number of interesting examples that could not be verified using earlier tools based purely on reduction.
C1 Univ Calif Santa Cruz, Dept Comp Sci, Santa Cruz, CA 95064 USA.
   Williams Coll, Dept Comp Sci, Williamstown, MA 01267 USA.
   Microsoft Corp, Res, Redmond, WA 98052 USA.
C3 University of California System; University of California Santa Cruz;
   Williams College; Microsoft
RP Univ Calif Santa Cruz, Dept Comp Sci, 1156 High St, Santa Cruz, CA 95064 USA.
EM cormac@cs.ucsc.edu; freund@cs.williams.edu; qadeer@microsoft.com
CR [Anonymous], 2000, Programming Language Design and Implementation, DOI [DOI 10.1145/358438.349328, 10.1145/349299.349328]
   [Anonymous], 1999, P OBJ OR SYST LANG
   ATKINSON MP, 1985, ACM T PROGR LANG SYS, V7, P539, DOI 10.1145/4472.4477
   ATKINSON MP, 1981, ACM SIGPLAN NOTICES, V17, P24
   Back R. J. R., 1989, PARLE '89. Parallel Architectures and Languages Europe. Vol. II: Parallel Languages Proceedings, P199
   BLANCHET B, 1999, P 1999 ACM SIGPLAN C, P20
   BOYAPATI C, 2001, P ACM C OBJ OR PROGR, P56
   BRUENING D, 1999, THESIS MIT
   COHEN E, 1998, P 9 INT C CONC THEOR, P317
   Deng XG, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P442, DOI 10.1109/ICSE.2002.1007989
   DOEPPNER TW, 1977, P ACM S PRINC PROGR, P155
   Eppinger JeffreyL., 1991, Camelot and Avalon: A Distributed Transaction Facility
   Flanagan C, 1999, LECT NOTES COMPUT SC, V1576, P91
   FLANAGAN C, 2003, P 2003 ACM SIGPLAN I, P1
   FLANAGAN C, 2004, P 11 INT SPIN WORKSH, P252
   FLANAGAN C, 2003, P WORKSH SOFTW MOD C
   FLANAGAN C, 2002, P ACM SIGPLAN 2002 C, P234
   FLANAGAN C, 2004, 0405 WILL COLL
   Flanagan Cormac., 2004, POPL 04, P256
   Flanagan Cormac., 2003, Pro- ceedings of the ACM SIGPLAN 2003 Conference on Programming Language Design and Implementation, PLDI '03, P338
   Freund StephenN., 2004, Journal of Object Technology, V3, P81
   GODEFROID P, 1991, LECT NOTES COMPUT SC, V531, P176, DOI 10.1007/BFb0023731
   GROSSMAN D, 2003, P ACM SIGPLAN INT WO, P13
   HARRIS T, 2003, P 18 ANN ACM SIGPLAN, P388, DOI DOI 10.1145/949305.949340
   HATCLIFF J, 2004, P INT C VER MOD CHEC, P175
   HERLIHY MP, 1990, ACM T PROGR LANG SYS, V12, P463, DOI 10.1145/78969.78972
   HOARE CAR, 1972, OPERATING SYSTEMS TE, P61
   LAMPORT L, 1989, 44 DEC SYST RES CTR
   LIPTON RJ, 1975, COMMUN ACM, V18, P717, DOI 10.1145/361227.361234
   Liskov B., 1987, SOSP 87, P111
   LOMET DB, 1977, LANGUAGE DESIGN RELI, P128
   Misra J., 2001, A Discipline of Multiprogramming
   Nielson F., 1999, Principles of Program Analysis
   Papadimitriou C., 1986, Theory of Database Concurrency Control
   PELED D, 1994, P 6 INT C COMP AID V, P377
   QADEER S, 2004, POPL, P245
   Rodrigues RMJ, 2004, J CLIN PERIODONTOL, V31, P420, DOI 10.1111/j.1600-051X.2004.00493.x
   Savage S, 1997, ACM T COMPUT SYST, V15, P391, DOI 10.1145/269005.266641
   SCHMIDT DC, 1997, PATTERN LANGUAGES PR, V3
   STERLING N, 1993, PROCEEDINGS OF THE WINTER 1993 USENIX CONFERENCE, P97
   STOLLER SD, 2000, P 7 INT SPIN WORKSH, P224
   WANG L, 2003, P WORKSH RUNT VER
   Welc A, 2004, LECT NOTES COMPUT SC, V3086, P519
NR 43
TC 22
Z9 29
U1 0
U2 2
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD APR
PY 2005
VL 31
IS 4
BP 275
EP 291
DI 10.1109/TSE.2005.47
PG 17
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Engineering
GA 929BY
UT WOS:000229318300002
DA 2024-07-18
ER

PT J
AU Gold, NE
   Mohan, AM
   Layzell, PJ
AF Gold, NE
   Mohan, AM
   Layzell, PJ
TI Spatial complexity metrics: An investigation of utility
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE maintenance measurement; complexity measures; maintainability; software
   psychology
ID CODE METRICS; SOFTWARE; PREDICTION; MAINTENANCE
AB Software comprehension is one of the largest costs in the software lifecycle. In an attempt to control the cost of comprehension, various complexity metrics have been proposed to characterize the difficulty of understanding a program and, thus, allow accurate estimation of the cost of a change. Such metrics are not always evaluated. This paper evaluates a group of metrics recently proposed to assess the "spatial complexity" of a program ( spatial complexity is informally defined as the distance a maintainer must move within source code to build a mental model of that code). The evaluation takes the form of a large-scale empirical study of evolving source code drawn from a commercial organization. The results of this investigation show that most of the spatial complexity metrics evaluated offer no substantially better information about program complexity than the number of lines of code. However, one metric shows more promise and is thus deemed to be a candidate for further use and investigation.
C1 Kings Coll London, Dept Comp Sci, London WC2R 2LS, England.
   Univ Manchester, Sch Informat, Manchester M60 1QD, Lancs, England.
C3 University of London; King's College London; University of Manchester
RP Gold, NE (corresponding author), Kings Coll London, Dept Comp Sci, London WC2R 2LS, England.
EM nicolas@dcs.kcl.ac.uk; a.mohan@postgrad.manchester.ac.uk;
   p.layzell@manchester.ac.uk
CR Altmann EM, 2001, INT J HUM-COMPUT ST, V54, P189, DOI 10.1006/ijhc.2000.0407
   [Anonymous], 1997, Software metrics: A rigorous and practical approach
   [Anonymous], 1990, IEEE Std 610.12-1990, V42, P112, DOI [10.1109/IEEESTD.1990.101064, DOI 10.1109/IEEESTD.1990.101064]
   Baddeley A.D., 1999, Essentials of human memory
   Banker R. D., 1993, Journal of Operations Management, V11, P81, DOI 10.1016/0272-6963(93)90035-N
   BOEHM B, 1995, ANN SOFTW ENG, V1, P45
   Chhabra JK, 2003, INFORM SOFTWARE TECH, V45, P539, DOI [10.1016/SO950-5849(03)00033-8, 10.1016/S0950-5849(03)00033-8]
   CRAWFORD SG, 1985, J SYST SOFTWARE, V5, P37, DOI 10.1016/0164-1212(85)90005-6
   DAVIS JS, 1988, IEEE T SOFTWARE ENG, V14, P1366, DOI 10.1109/32.6179
   DOUCE CR, 1999, P 11 M PSYCH PROGR I
   Fiore P, 1996, FOURTH WORKSHOP ON PROGRAM COMPREHENSION, PROCEEDINGS, P78, DOI 10.1109/WPC.1996.501123
   GORLA N, 1990, IEEE T SOFTWARE ENG, V16, P223, DOI 10.1109/32.44385
   *GRAMM INC, 2002, COD SLIC SYST
   Halstead M. H., 1977, ELEMENTS SOFTWARE SC
   Harrison R., 1998, Empirical Software Engineering, V3, P255, DOI 10.1023/A:1009784121652
   Hayes JH, 2004, CSMR 2004: EIGHTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P254, DOI 10.1109/CSMR.2004.1281427
   JORGENSEN M, 1995, IEEE T SOFTWARE ENG, V21, P674, DOI 10.1109/32.403791
   Klemola T, 2003, SECOND IEEE INTERNATIONAL CONFERENCE ON COGNITIVE INFORMATICS, PROCEEDINGS, P106, DOI 10.1109/COGINF.2003.1225966
   KLEMOLA T, 1998, THESIS CONCORDIA U M
   Lehman M. M., 1985, Program Evolution: Processes of Software Change
   Mayer T, 1999, TOOLS, V29, P108, DOI 10.1109/TOOLS.1999.779004
   McCabe T. J., 1976, IEEE Transactions on Software Engineering, VSE-2, P308, DOI 10.1109/TSE.1976.233837
   Mohan A, 2004, 11TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P246, DOI 10.1109/WCRE.2004.11
   Myers G. J., 1977, SIGPLAN Notices, V12, P61, DOI 10.1145/954627.954633
   O'Brien MP, 2004, J SOFTW MAINT EVOL-R, V16, P427, DOI 10.1002/smr.307
   O'Brien MP, 2001, PROG COMPREHEN, P71, DOI 10.1109/WPC.2001.921715
   Polo M, 2001, PROC IEEE INT CONF S, P202, DOI 10.1109/ICSM.2001.972733
   Rajlich V, 2002, PROG COMPREHEN, P271, DOI 10.1109/WPC.2002.1021348
   Rilling J, 2003, PROG COMPREHEN, P115
   Rosenberg J, 1997, FOURTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM, PROCEEDINGS, P137, DOI 10.1109/METRIC.1997.637174
   Schneidewind NF, 2000, ANN SOFTW ENG, V9, P79, DOI 10.1023/A:1018920623712
   Shao JQ, 2003, CCECE 2003: CANADIAN CONFERENCE ON ELECTRICAL AND COMPUTER ENGINEERING, VOLS 1-3, PROCEEDINGS, P1333
   Welker KD, 1997, J SOFTW MAINT-RES PR, V9, P127, DOI 10.1002/(SICI)1096-908X(199705)9:3<127::AID-SMR149>3.0.CO;2-S
   Wohlin C., 1996, Proceedings. 1996 Asia-Pacific Software Engineering Conference, P35, DOI 10.1109/APSEC.1996.566738
   Zhao M, 1998, INFORM SOFTWARE TECH, V40, P801, DOI 10.1016/S0950-5849(98)00098-6
NR 35
TC 13
Z9 16
U1 0
U2 7
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAR
PY 2005
VL 31
IS 3
BP 203
EP 212
DI 10.1109/TSE.2005.39
PG 10
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 917IE
UT WOS:000228453500002
DA 2024-07-18
ER

PT J
AU Traoré, I
   Aredo, DB
AF Traoré, I
   Aredo, DB
TI Enhancing structured review with model-based verification
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE structured review; formal methods; UML; prototype verification system
   (PVS); OCL; model-based verification; validation and verification
ID FRAMEWORK; DESIGN; UML
AB In this paper, we propose a development framework that extends the scope of structured review by supplementing the structured review with model-based verification. The proposed approach uses the Unified Modeling Language (UML) as a modeling notation. We discuss a set of correctness arguments that can be used in conjunction with formal verification and validation (V&V) in order to improve the quality and dependability of systems in a cost-effective way. Formal methods can be esoteric; consequently, their large scale application is hindered. We propose a framework based on the integration of lightweight formal methods and structured reviews. Moreover, we show that structured reviews enable us to handle aspects of V&V that cannot be fully automated. To demonstrate the feasibility of our approach, we have conducted a study on a security-critical system - a patient document service (PDS) system.
C1 Univ Victoria, Dept Elect & Comp Engn, Victoria, BC V8W 3P6, Canada.
   Norwegian Comp Ctr, N-314 Oslo, Norway.
C3 University of Victoria
RP Univ Victoria, Dept Elect & Comp Engn, Victoria, BC V8W 3P6, Canada.
EM itraore@ece.uvic.ca; aredo@nr.no
CR [Anonymous], 2003, OMG UN MOD LANG SPEC
   Aredo DB, 2002, J UNIVERS COMPUT SCI, V8, P674
   Basili VR, 1997, J SYST SOFTWARE, V38, P3, DOI 10.1016/S0164-1212(97)00065-4
   BRIAND L, 2001, P 4 UML INT C UML 20
   BRITCHER RN, 1988, COMPUTER         NOV
   BROY M, 1997, P EUR C OBJ OR PROGR
   CAPLAT G, 2002, P WORKSH SOFTW MOD E
   DAMM W, 1999, P C FORM METH OP DIS
   DOONG RK, 1994, ACM T SOFTW ENG METH, V3
   Dunsmore A, 2003, IEEE T SOFTWARE ENG, V29, P677, DOI 10.1109/TSE.2003.1223643
   Dunsmore A, 2001, PROC INT CONF SOFTW, P135, DOI 10.1109/ICSE.2001.919088
   Easterbrook S, 1998, IEEE T SOFTWARE ENG, V24, P4, DOI 10.1109/32.663994
   ENGELS G, 2003, ELECT NOTES THEORETI
   EVANS AS, 1998, P WORKSH IND STRENGT
   FAGAN ME, 1976, IBM SYST J, V15, P182, DOI 10.1147/sj.153.0182
   Formal Systems (Europe) Ltd, 1997, FAIL DIV REF FDR2 US
   France R, 1998, COMPUT STAND INTER, V19, P325, DOI 10.1016/S0920-5489(98)00020-8
   FRANCE RB, 1997, P 2 IFIP C FORM METH
   Gilb Tom, 1993, Software inspections
   GLUCH D, 1998, CMUSEI98TR009
   Heimdahl MPE, 1996, IEEE T SOFTWARE ENG, V22, P363, DOI 10.1109/32.508311
   HONG Y, 2003, THESIS U VICTORIA
   Jacobson I., 2002, Cutter IT Journal, V15, P18
   Jones CB., 1990, SYSTEMATIC SOFTWARE
   KRUCHTEN P., 1999, Rational Unified Process-An Introduction
   KUNG D, 1994, P IEEE COMPSAC 94 C
   LAITENBERGER O, 2000, SYSTEMS SOFTWARE, P183
   LAITENBERGER O, 2000, NRCERB1077
   LATELLA D, 1999, P C FORM METH OP DIS
   Lawford M, 2000, LECT NOTES COMPUT SC, V1816, P73
   LINGER RC, 1994, IEEE SOFTWARE, V11, P50, DOI 10.1109/52.268956
   Liu CCK, 2002, WA SCI TECHNOL, V2, P123, DOI 10.2166/ws.2002.0054
   LIU MY, 2002, THESIS U VICTORIA
   MCUMBER W, 2001, P IEEE INT C SOFTW E
   Mikk E., 1997, Advances in Computing Science - ASIAN '97. Third Asian Computing Science Conference. Proceedings, P181
   OWRE S, 1995, IEEE T SOFTWARE ENG, V21, P107, DOI 10.1109/32.345827
   PARNAS DL, 1987, J SYST SOFTWARE, V7, P259, DOI 10.1016/0164-1212(87)90025-2
   SELBY RW, 1987, IEEE T SOFTWARE ENG, V13, P1027, DOI 10.1109/TSE.1987.233525
   Stocks P, 1996, IEEE T SOFTWARE ENG, V22, P777, DOI 10.1109/32.553698
   Thelin T, 2001, INFORM SOFTWARE TECH, V43, P925, DOI 10.1016/S0950-5849(01)00201-4
   TRAORE I, 1998, P INT COUNC SYST ENG
   TRAORE I, 2003, P ACM S APPL COMP SA
   TRAORE I, 2001, P 5 IEEE INT S REQ E
   Traore Issa., 2000, Journal of Universal Computer Science, V6, P1088
   van Emden E, 2002, NINTH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P97, DOI 10.1109/WCRE.2002.1173068
   Warmer J., 1999, AW OBJ TECHNOL S
NR 46
TC 9
Z9 9
U1 0
U2 2
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD NOV
PY 2004
VL 30
IS 11
BP 736
EP 753
DI 10.1109/TSE.2004.86
PG 18
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 867OX
UT WOS:000224853000003
DA 2024-07-18
ER

PT J
AU Zhang, F
   D'Hollander, EH
AF Zhang, F
   D'Hollander, EH
TI Using hammock graphs to structure programs
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE program transformation; structured programming; compilers; optimization;
   parallel processing; software/program verification; correctness proofs
ID IRREDUCIBLE LOOPS; FLOW DIAGRAMS; COMPUTER; FORM; PVS
AB Advanced computer architectures rely mainly on compiler optimizations for parallelization, vectorization, and pipelining. Efficient code generation is based on a control dependence analysis to find the basic blocks and to determine the regions of control. However, unstructured branch statements, such as jumps and goto's, render the control flow analysis difficult, time-consuming, and result in poor code generation. Branches are part of many programming languages and occur in legacy and maintenance code as well as in assembler, intermediate languages, and byte code. A simple and effective technique is presented to convert unstructured branches into hammock graph control structures. Using three basic transformations, an equivalent program is obtained in which all control statements have a well-defined scope. In the interest of predication and branch prediction, the number of control variables has been minimized, thereby allowing a limited code replication. The correctness of the transformations has been proven using an axiomatic proof rule system. With respect to previous work, the algorithm is simpler and the branch conditions are less complex, making the program more readable and the code generation more efficient. Additionally, hammock graphs define single entry single exit regions and therefore allow localized optimizations. The restructuring method has been implemented into the parallelizing compiler FPT and allows to extract parallelism in unstructured programs. The use of hammock graph transformations in other application areas such as vectorization, decompilation, and assembly program restructuring is also demonstrated.
C1 Platform Comp Inc, Markham, ON L3R 3T7, Canada.
   Univ Ghent, Dept Elect & Informat Syst, B-9000 Ghent, Belgium.
C3 Ghent University
RP Platform Comp Inc, 3760 14th Ave, Markham, ON L3R 3T7, Canada.
EM zfb@platform.com; dhollander@elis.ugent.be
CR Alagic S., 1978, DESIGN WELL STRUCTUR
   Allen J.R., 1983, Proc. of the Symposium on Principles of Programming Languages. POPL, P177
   AMMARGUELLAT Z, 1992, IEEE T SOFTWARE ENG, V18, P237, DOI 10.1109/32.126773
   ARBIB MA, 1979, ACTA INFORM, V11, P139, DOI 10.1007/BF00264021
   Ashcroft E., 1972, Proceedings of IFIP Congress 71, V1, P250
   BOHM C, 1966, COMMUN ACM, V9, P366, DOI 10.1145/355592.365646
   Carter L, 2000, INT J PARALLEL PROG, V28, P563, DOI 10.1023/A:1007512717742
   CIFUENTES C, 1996, LECT NOTES COMPUTER, V1060, P91
   D'Hollander EH, 1998, INFORM SCIENCES, V106, P293, DOI 10.1016/S0020-0255(97)10016-0
   De Bus B, 2003, COMMUN ACM, V46, P41, DOI 10.1145/859670.859696
   DHOLLANDER EH, 2001, RESTRUCTURING PROGRA, P47
   DUTERTRE B, 1996, P 9 INT C THEOR PROV
   EROSA AM, 1994, PROCEEDINGS OF THE 1994 INTERNATIONAL CONFERENCE ON COMPUTER LANGUAGES, P229, DOI 10.1109/ICCL.1994.288377
   FERRANTE J, 1987, ACM T PROGR LANG SYS, V9, P319, DOI 10.1145/24039.24041
   Havlak P, 1997, ACM T PROGR LANG SYS, V19, P557, DOI 10.1145/262004.262005
   HECHT MS, 1974, J ACM, V21, P367, DOI 10.1145/321832.321835
   Hoare C. A. R., 1973, Acta Informatica, V2, P335, DOI 10.1007/BF00289504
   HOARE CAR, 1969, COMMUN ACM, V12, P576, DOI 10.1145/363235.363259
   Janssen J, 1997, ACM T PROGR LANG SYS, V19, P1031, DOI 10.1145/267959.269971
   Kasjanov V.N., 1975, SOV MATH DOKL, V16, P448
   Klauser A, 1998, 1998 INTERNATIONAL CONFERENCE ON PARALLEL ARCHITECTURES AND COMPILATION TECHNIQUES, PROCEEDINGS, P278, DOI 10.1109/PACT.1998.727261
   LAMPORT L, 1979, IEEE T COMPUT, V28, P690, DOI 10.1109/TC.1979.1675439
   Morris PH, 1997, J SOFTW MAINT-RES PR, V9, P47, DOI 10.1002/(SICI)1096-908X(199701)9:1<47::AID-SMR142>3.0.CO;2-V
   Nielson H. R., 1993, SEMANTICS APPL
   OULSNAM G, 1987, COMPUT J, V30, P43, DOI 10.1093/comjnl/30.1.43
   OULSNAM G, 1982, COMPUT J, V25, P379, DOI 10.1093/comjnl/25.3.379
   OWRE S, 1995, IEEE T SOFTWARE ENG, V21, P107, DOI 10.1109/32.345827
   OWRE S, 1992, P 11 INT C AUT DED C
   PETERSON WW, 1973, COMMUN ACM, V16, P503, DOI 10.1145/355609.362337
   RAMSHAW L, 1988, J ACM, V35, P893, DOI 10.1145/48014.48021
   Shankar N, 1996, SCI COMPUT PROGRAM, V26, P33, DOI 10.1016/0167-6423(96)00003-2
   Unger S, 2002, ACM T PROGR LANG SYS, V24, P299, DOI 10.1145/567097.567098
   WEISER M, 1984, IEEE T SOFTWARE ENG, V10, P352, DOI 10.1109/TSE.1984.5010248
   WILLIAMS MH, 1978, COMPUT J, V21, P161, DOI 10.1093/comjnl/21.2.161
   WILLIAMS MH, 1977, COMPUT J, V20, P45, DOI 10.1093/comjnl/20.1.45
   WILLIAMSON AG, 1985, INT DATA SER SEL D A, V2, P134
   ZHANG F, 1996, THESIS U GHENT
   ZHANG F, 1994, P INT C PAR DISTR SY, P264
NR 38
TC 32
Z9 42
U1 0
U2 4
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD APR
PY 2004
VL 30
IS 4
BP 231
EP 245
PG 15
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 810YV
UT WOS:000220740500003
OA Green Published
DA 2024-07-18
ER

PT J
AU Teruel, E
   Franceschinis, G
   De Pierro, M
AF Teruel, E
   Franceschinis, G
   De Pierro, M
TI Well-defined generalized stochastic petri nets: A net-level method to
   specify priorities
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE stochastic Petri nets; priorities; conflict; confusion; modeling
   methodology
ID SYSTEMS
AB Generalized Stochastic Petri Nets (GSPN), with immediate transitions, are extensively used to model concurrent systems in a wide range of application domains, particularly including software and hardware aspects of computer systems, and their interactions. These models are typically used for system specification, logical and performance analysis, or automatic code generation. In order to keep modeling separate from the analysis and to gain in efficiency and robustness of the modeling process, the complete specification of the stochastic process underlying a model should be guaranteed at the net level, without requiring the generation and exploration of the state space. In this paper, we propose a net-level method that guides the modeler in the task of defining the priorities (and weights) of immediate transitions in a GSPN model, to deal with confusion and conflict problems. The application of this method ensures well-definition without reducing modeling flexibility or expressiveness.
C1 Univ Zaragoza, Dept Informat Ingn & Sistemas, Zaragoza 50018, Spain.
   Univ Piemonte Orientale, Dipartimento Informat, I-15100 Alessandria, Italy.
C3 University of Zaragoza; University of Eastern Piedmont Amedeo Avogadro
RP Teruel, E (corresponding author), Univ Zaragoza, Dept Informat Ingn & Sistemas, Maria Luna 1, Zaragoza 50018, Spain.
RI Teruel, Enrique/AFT-9238-2022
OI Teruel, Enrique/0000-0001-6406-7042
CR AJMONEMARSAN M, 1984, ACM T COMPUT SYST, V2, P93
   Bause F, 1996, ACTA INFORM, V33, P669, DOI 10.1007/s002360050065
   BAUSE F, 1997, APPL THEORY PETRI NE
   BEST E, 1992, THEOR COMPUT SCI, V96, P175, DOI 10.1016/0304-3975(92)90184-H
   Botti O, 1996, J SYST ARCHITECT, V42, P503, DOI 10.1016/S1383-7621(96)00037-9
   CHIOLA G, 1993, IEEE T SOFTWARE ENG, V19, P89, DOI 10.1109/32.214828
   CHIOLA G, 1993, IEEE T COMPUTERS, V42
   CIARDO G, 1996, P 4 INT WORKSH MOD A, P278
   Donatelli S, 2001, PERFORM EVALUATION, V44, P73, DOI 10.1016/S0166-5316(00)00060-2
   DONATELLI S, 1996, APPL THEORY PETRI NE
   HACK MHT, 1975, THESIS MIT CAMBRIDGD
   LI Y, 1995, IEEE T COMPUTERS, V44
   Marsan M. A., 1998, Performance Evaluation Review, V26, P28, DOI 10.1145/288197.288208
   Marsan MA, 2000, PERFORM EVALUATION, V42, P109, DOI 10.1016/S0166-5316(00)00033-X
   Marsan MA, 2001, PERFORM EVALUATION, V45, P33, DOI 10.1016/S0166-5316(00)00064-X
   MARSAN MA, 1995, MODELLING GENERALIZE
   MAZZEO A, 1997, SIMULAT PRACT THEORY, P65
   MURA I, 1999, IEEE T RELIABILITY, V48
   Peterson J.L., 1981, Petri Net Theory and the Modeling of Systems
   Qureshi MA, 1996, IEEE T SOFTWARE ENG, V22, P603, DOI 10.1109/32.541432
   Silva M, 1997, EUR J CONTROL, V3, P182, DOI 10.1016/S0947-3580(97)70077-3
   SMITH E, 1996, THEORETICAL COMPUTER, V153, P275
   Teruel E., 1999, Proceedings 8th International Workshop on Petri Nets and Performance Models (Cat. No.PR00331), P114, DOI 10.1109/PNPM.1999.796558
NR 23
TC 13
Z9 14
U1 0
U2 2
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD NOV
PY 2003
VL 29
IS 11
BP 962
EP 973
DI 10.1109/TSE.2003.1245298
PG 12
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 740KU
UT WOS:000186402200001
DA 2024-07-18
ER

PT J
AU Wang, Y
   Zhang, P
   Sun, ML
   Lu, ZY
   Yang, YB
   Tang, YT
   Qian, JY
   Li, Z
   Zhou, YM
AF Wang, Yang
   Zhang, Peng
   Sun, Maolin
   Lu, Zeyu
   Yang, Yibiao
   Tang, Yutian
   Qian, Junyan
   Li, Zhi
   Zhou, Yuming
TI Uncovering Bugs in Code Coverage Profilers via Control Flow Constraint
   Solving
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Computer bugs; Testing; Dogs; Codes; Source coding; Manuals; Inspection;
   Coverage bugs; control flow; constraint solving; coverage profilers;
   testing
ID COMPILER BUGS; TEST SUITE; REDUCTION
AB Code coverage has been widely used as the basis for various software quality assurance techniques. Therefore, it is of great importance to ensure that coverage profilers provide reliable code coverage. However, it is challenging to validate the correctness of the code coverage generated due to the lack of an effective oracle. In this paper, we propose an effective approach based on control flow constraint solving to test coverage profilers and have implemented a coverage bug hunting tool, DOG (finD cOverage buGs). Our core idea is to leverage inherent control flow features to generate control flow constraints that the resulting coverage statistics should respect. If DOG identifies any unsatisfiable constraints, it signifies the presence of incorrect coverage statistics. In such cases, DOG provides detailed diagnostic information about the suspicious coverage statistics for manual inspection. Compared with the state-of-the-art works, DOG has the following prominent advantages: (1) wide applicability: DOG eliminates the need for multiple coverage profilers (as required by differential testing) and program variants (as needed in metamorphic testing), making it highly versatile; (2) unique testing capability: DOG effectively analyzes and utilizes relationships among available coverage statistics, boosting its testing capabilities; and (3) enhanced interpretability: DOG provides clear control flow explanations for incorrect code coverage, enabling the localization of suspicious coverage areas. During our testing period with DOG, we successfully identified and reported 27 bugs in Gcov and llvm-cov, both widely-used coverage profilers. Of these, 17 bugs have been confirmed (11 have been fixed), 3 were deemed expected behaviors by developers, and 7 remain unresolved. Remarkably, 21 out of 24 unexpected bugs had been latent for over two and a half years, and nearly half of the coverage bugs (10 out of 24) were undetectable by state-of-the-art coverage profiler validators. These results demonstrate the effectiveness and importance of using DOG to improve the reliability of code coverage profilers.
C1 [Wang, Yang; Sun, Maolin; Lu, Zeyu; Yang, Yibiao; Zhou, Yuming] Nanjing Univ, State Key Lab Novel Software Technol, Nanjing, Peoples R China.
   [Wang, Yang; Sun, Maolin; Lu, Zeyu; Yang, Yibiao; Zhou, Yuming] Nanjing Univ, Dept Comp Sci & Technol, Nanjing 210023, Peoples R China.
   [Zhang, Peng] Huawei Technol Co Ltd, Hangzhou 310051, Peoples R China.
   [Tang, Yutian] Univ Glasgow, Sch Comp Sci & Engn, Glasgow G12 8QQ, Scotland.
   [Qian, Junyan; Li, Zhi] Guangxi Normal Univ, Minist Educ, Key Lab Educ Blockchain & Intelligent Technol, Guilin 541004, Peoples R China.
   [Qian, Junyan; Li, Zhi] Guangxi Normal Univ, Guangxi Key Lab Multisource Informat Min & Secur, Guilin 541004, Peoples R China.
C3 Nanjing University; Nanjing University; Huawei Technologies; University
   of Glasgow; Guangxi Normal University; Guangxi Normal University
RP Yang, YB; Zhou, YM (corresponding author), Nanjing Univ, State Key Lab Novel Software Technol, Nanjing, Peoples R China.; Yang, YB; Zhou, YM (corresponding author), Nanjing Univ, Dept Comp Sci & Technol, Nanjing 210023, Peoples R China.; Qian, JY; Li, Z (corresponding author), Guangxi Normal Univ, Minist Educ, Key Lab Educ Blockchain & Intelligent Technol, Guilin 541004, Peoples R China.; Qian, JY; Li, Z (corresponding author), Guangxi Normal Univ, Guangxi Key Lab Multisource Informat Min & Secur, Guilin 541004, Peoples R China.
EM njuwy@smail.nju.edu.cn; zhangpeng462@huawei.com;
   merlin@smail.nju.edu.cn; zeyulu@smail.nju.edu.cn; yangyibiao@nju.edu.cn;
   Yutian.Tang@glasgow.ac.uk; qianjunyan@gxnu.edu.cn; zhili@gxnu.edu.cn;
   zhouyuming@nju.edu.cn
RI Tang, Yutian/E-1415-2017; Yang, Yibiao/ABP-4159-2022; Sun,
   Maolin/JFK-9929-2023
OI Yang, Yibiao/0000-0003-1153-2013; Sun, Maolin/0000-0001-5617-2205;
   Zhang, Peng/0000-0003-2902-2249; Qian, Junyan/0000-0002-1325-6975; Tang,
   Yutian/0000-0001-5677-4564
FU Natural Science Foundation of China [62172205, 62072194, 62162004,
   62362006, U21A20474, 62202306]; Natural Science Foundation of Jiangsu
   Province [SBK2023022696]; NJU-Huawei Software New Technology Joint
   Laboratory Fund [TC20230202021-2023-08]; CCF-Huawei Populuseuphratica
   Fund [CCF-HuaweiSY2022007]
FX This work was supported in part by the Natural Science Foundation of
   China under Grants 62172205, 62072194, 62162004, 62362006, U21A20474,
   and 62202306, in part by the Natural Science Foundation of Jiangsu
   Province under Grant SBK2023022696, in part by the NJU-Huawei Software
   New Technology Joint Laboratory Fund under Grant TC20230202021-2023-08,
   and in part by the CCF-Huawei Populuseuphratica Fund under Grant
   CCF-HuaweiSY2022007
CR [Anonymous], Gcov Bug #99441
   [Anonymous], Gcov Bug #99444
   [Anonymous], Gcov Bug #99442
   [Anonymous], Gcov Bug #99485
   [Anonymous], llvm-cov Bug #49438
   [Anonymous], Gcov Bug #85332
   [Anonymous], Gcov Bug #101569
   [Anonymous], llvm-cov Bug #48771
   [Anonymous], Gcov Bug #99443
   [Anonymous], Gcov Bug #101193
   [Anonymous], ?About us"
   [Anonymous], Gcov Bug #88930
   bin Ali N, 2019, EMPIR SOFTW ENG, V24, P2020, DOI 10.1007/s10664-018-9670-1
   Böhme M, 2019, IEEE T SOFTWARE ENG, V45, P489, DOI 10.1109/TSE.2017.2785841
   Chae HS, 2011, J SYST SOFTWARE, V84, P2053, DOI 10.1016/j.jss.2011.04.023
   Chen JJ, 2020, ACM COMPUT SURV, V53, DOI 10.1145/3363562
   Chen JJ, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P305, DOI 10.1109/ASE.2019.00037
   Chen JJ, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P223, DOI 10.1145/3338906.3338957
   Chen JJ, 2017, PROC INT CONF SOFTW, P700, DOI 10.1109/ICSE.2017.70
   Chen JJ, 2016, IEEE INT CONF SOFTW, P266, DOI 10.1109/ICST.2016.19
   Chen Y, 2013, ACM SIGPLAN NOTICES, V48, P197, DOI 10.1145/2499370.2462173
   Chen YT, 2016, ACM SIGPLAN NOTICES, V51, P85, DOI [10.1145/2980983.2908095, 10.1145/2908080.2908095]
   de Moura L, 2008, LECT NOTES COMPUT SC, V4963, P337, DOI 10.1007/978-3-540-78800-3_24
   Di Luna GA, 2021, ASPLOS XXVI: TWENTY-SIXTH INTERNATIONAL CONFERENCE ON ARCHITECTURAL SUPPORT FOR PROGRAMMING LANGUAGES AND OPERATING SYSTEMS, P1034, DOI 10.1145/3445814.3446695
   FERRANTE J, 1987, ACM T PROGR LANG SYS, V9, P319, DOI 10.1145/24039.24041
   Fraser G, 2015, EMPIR SOFTW ENG, V20, P611, DOI 10.1007/s10664-013-9288-2
   Fraser G, 2014, ACM T SOFTW ENG METH, V24, DOI 10.1145/2685612
   Gadhave K., 2019, IEEE INFORM VISUALIZ
   Gcov, about as
   Graphviz, about as
   Groce A, 2016, SOFTW TEST VERIF REL, V26, P40, DOI 10.1002/stvr.1574
   Holmes J, 2018, PROC INT SYMP SOFTW, P166, DOI 10.1109/ISSRE.2018.00027
   Ivankovic M, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P955, DOI 10.1145/3338906.3340459
   Kim Y, 2021, SOFTW TEST VERIF REL, V31, DOI 10.1002/stvr.1715
   Le V, 2015, ACM SIGPLAN NOTICES, V50, P386, DOI [10.1145/2814270.2814319, 10.1145/2858965.2814319]
   Lehmann D, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P610, DOI 10.1145/3236024.3236037
   Lemieux C, 2018, IEEE INT CONF AUTOM, P475, DOI 10.1145/3238147.3238176
   Lengauer T., 1979, ACM Transactions on Programming Languages and Systems, V1, P121, DOI 10.1145/357062.357071
   Lex A, 2014, IEEE T VIS COMPUT GR, V20, P1983, DOI 10.1109/TVCG.2014.2346248
   Li Y, 2021, PROC INT CONF SOFTW, P661, DOI 10.1109/ICSE43902.2021.00067
   Li YB, 2020, PROCEEDINGS OF THE 41ST ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION (PLDI '20), P1052, DOI 10.1145/3385412.3386020
   llvm-cov, about as
   Motwani M, 2022, IEEE T SOFTWARE ENG, V48, P637, DOI 10.1109/TSE.2020.2998785
   os, about as
   Pearson S, 2017, PROC INT CONF SOFTW, P609, DOI 10.1109/ICSE.2017.62
   Perennial, 2023, The Perennial validation suite for C and Cpp
   Pflanzer M., 2016, P 4 INT WORKSH OPENC, P1
   Ranganath VP, 2007, ACM T PROGR LANG SYS, V29, DOI 10.1145/1275497.1275502
   Regehr J, 2012, ACM SIGPLAN NOTICES, V47, P335, DOI 10.1145/2345156.2254104
   Smith EK, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P532, DOI 10.1145/2786805.2786825
   Sun CN, 2016, PROC INT CONF SOFTW, P203, DOI 10.1145/2884781.2884879
   Sun CN, 2016, ACM SIGPLAN NOTICES, V51, P849, DOI 10.1145/3022671.2984038
   Tang YX, 2022, IEEE T SOFTWARE ENG, V48, P4411, DOI 10.1109/TSE.2021.3119186
   Tolksdorf S, 2019, PROCEEDINGS OF THE 28TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA '19), P273, DOI 10.1145/3293882.3330567
   Understand, about as
   Wen M, 2021, IEEE T SOFTWARE ENG, V47, P2348, DOI 10.1109/TSE.2019.2948158
   Wolf KH, 2016, STUD HEALTH TECHNOL, V228, P379, DOI 10.3233/978-1-61499-678-1-379
   Xie XF, 2019, PROCEEDINGS OF THE 28TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA '19), P146, DOI 10.1145/3293882.3330579
   Yang JQ, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P831, DOI 10.1145/3106237.3106274
   Yang XJ, 2011, PLDI 11: PROCEEDINGS OF THE 2011 ACM CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P283
   Yang YB, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P79, DOI 10.1109/ASE.2019.00018
   Yang YB, 2019, PROC INT CONF SOFTW, P488, DOI 10.1109/ICSE.2019.00061
   Yoo S, 2012, SOFTW TEST VERIF REL, V22, P67, DOI [10.1002/stv.430, 10.1002/stvr.430]
   Zhang J, 2019, IEEE T SOFTWARE ENG, V45, P898, DOI 10.1109/TSE.2018.2809496
   Zhang P, 2022, IEEE T SOFTWARE ENG, V48, P1067, DOI 10.1109/TSE.2020.3010361
   Zhang Q, 2020, IEEE INT CONF AUTOM, P722, DOI 10.1145/3324884.3416641
NR 66
TC 0
Z9 0
U1 1
U2 1
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD NOV
PY 2023
VL 49
IS 11
BP 4964
EP 4987
DI 10.1109/TSE.2023.3321381
PG 24
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA Z3ZN2
UT WOS:001111494200005
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Tawosi, V
   Moussa, R
   Sarro, F
AF Tawosi, Vali
   Moussa, Rebecca
   Sarro, Federica
TI Agile Effort Estimation: Have We Solved the Problem Yet? Insights From a
   Replication Study
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Software effort estimation; story point estimation; deep learning
ID SOFTWARE; PREDICTION
AB In the last decade, several studies have explored automated techniques to estimate the effort of agile software development. We perform a close replication and extension of a seminal work proposing the use of Deep Learning for Agile Effort Estimation (namely Deep-SE), which has set the state-of-the-art since. Specifically, we replicate three of the original research questions aiming at investigating the effectiveness of Deep-SE for both within-project and cross-project effort estimation. We benchmark Deep-SE against three baselines (i.e., Random, Mean and Median effort estimators) and a previously proposed method to estimate agile software project development effort (dubbed TF/IDF-SVM), as done in the original study. To this end, we use the data from the original study and an additional dataset of 31,960 issues mined from TAWOS, as using more data allows us to strengthen the confidence in the results, and to further mitigate external validity threats. The results of our replication show that Deep-SE outperforms the Median baseline estimator and TF/IDF-SVM in only very few cases with statistical significance (8/42 and 9/32 cases, respectively), thus confounding previous findings on the efficacy of Deep-SE. The two additional RQs revealed that neither augmenting the training set nor pre-training Deep-SE play lead to an improvement of its accuracy and convergence speed. These results suggest that using semantic similarity is not enough to differentiate user stories with respect to their story points; thus, future work has yet to explore and find new techniques and features that obtain accurate agile software development estimates.
C1 [Tawosi, Vali; Moussa, Rebecca; Sarro, Federica] UCL, Dept Comp Sci, London WC1E 6BT, England.
C3 University of London; University College London
RP Sarro, F (corresponding author), UCL, Dept Comp Sci, London WC1E 6BT, England.
EM vali.tawosi@ucl.ac.uk; rebecca.moussa.18@ucl.ac.uk; f.sarro@ucl.ac.uk
OI Sarro, Federica/0000-0002-9146-442X; Tawosi, Vali/0000-0001-5052-672X;
   Moussa, Rebecca/0000-0001-9123-6008
FU ERC Advanced fellowship [741278]
FX The work of Vali Tawosi, Rebecca Moussa and Federica Sarro was
   supportedby ERC Advanced fellowship under Grant 741278
CR Abadeer M, 2021, 29TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE WORKSHOPS (REW 2021), P106, DOI 10.1109/REW53955.2021.00022
   Abrahamsson P, 2011, INT SYMP EMP SOFTWAR, P400, DOI 10.1109/ESEM.2011.58
   [Anonymous], 2000, Planning Extreme Programming
   [Anonymous], 2020, R: the R project for statistical computing
   Arcuri A, 2014, SOFTW TEST VERIF REL, V24, P219, DOI 10.1002/stvr.1486
   Bangash AA, 2020, EMPIR SOFTW ENG, V25, P5047, DOI 10.1007/s10664-020-09878-9
   Carver J.C., 2010, 1 INT WORKSHOP REPLI, P1
   Choetkiertikul M, 2019, IEEE T SOFTWARE ENG, V45, P637, DOI 10.1109/TSE.2018.2792473
   Choetkiertikul M, 2018, IEEE T SOFTWARE ENG, V44, P551, DOI 10.1109/TSE.2017.2693989
   Cohn M., 2005, Agile Estimating and Planning
   Corazza A, 2013, EMPIR SOFTW ENG, V18, P506, DOI 10.1007/s10664-011-9187-3
   Falessi D, 2020, EMPIR SOFTW ENG, V25, P4805, DOI 10.1007/s10664-020-09868-x
   Ferrucci F., 2012, PROC 8 INT C PREDICT, P29
   Fu M, 2023, IEEE T SOFTWARE ENG, V49, P611, DOI 10.1109/TSE.2022.3158252
   Gers FA, 1999, IEE CONF PUBL, P850, DOI [10.1049/cp:19991218, 10.1162/089976600300015015]
   GitHub, 2018, DEEP SE SOURCE CODE
   Hochreiter S, 1997, NEURAL COMPUT, V9, P1735, DOI [10.1162/neco.1997.9.1.1, 10.1007/978-3-642-24797-2]
   Jimenez M, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P695, DOI 10.1145/3338906.3338941
   Jorgensen M, 2004, J SYST SOFTWARE, V70, P37, DOI 10.1016/S0164-1212(02)00156-5
   Juristo N, 2012, LECT NOTES COMPUT SC, V7007, P60
   Kitchenham B. A., 2001, IEE Proceedings-Software, V148, P81, DOI 10.1049/ip-sen:20010506
   Langdon WB, 2016, INFORM SOFTWARE TECH, V73, P16, DOI 10.1016/j.infsof.2016.01.003
   Mendes E., 2014, 18 INT C EVALUATION, P1, DOI [10.1145/2601248.2601284, DOI 10.1145/2601248.2601284]
   Mikolajczyk Agnieszka, 2018, 2018 International Interdisciplinary PhD Workshop (IIPhDW), P117, DOI 10.1109/IIPHDW.2018.8388338
   Minku L, 2015, INT SYMP EMP SOFTWAR, P172, DOI 10.1109/ESEM.2015.7321199
   Mittas N, 2015, INFORM SOFTWARE TECH, V57, P310, DOI 10.1016/j.infsof.2014.05.010
   Neumann Geoffrey, 2015, Search-Based Software Engineering. 7th International Symposium, SSBSE 2015. Proceedings: LNCS 9275, P318, DOI 10.1007/978-3-319-22183-0_29
   Porru S., 2016, PROC 12 INT C PREDIC, P1
   Rish I., 2001, IJCAI 2001 WORKSH EM, P41
   Santos A, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-020-09907-7
   Sarro F, 2022, IEEE T SOFTWARE ENG, V48, P1868, DOI 10.1109/TSE.2020.3040793
   Sarro F, 2016, PROC INT CONF SOFTW, P619, DOI 10.1145/2884781.2884830
   Scott E, 2018, PROCEEDINGS OF THE 2018 INTERNATIONAL CONFERENCE ON SOFTWARE AND SYSTEM PROCESS (ICSSP 2018), P106, DOI 10.1145/3202710.3203160
   Shepperd M, 1997, IEEE T SOFTWARE ENG, V23, P736, DOI 10.1109/32.637387
   Shepperd M, 2012, INFORM SOFTWARE TECH, V54, P820, DOI 10.1016/j.infsof.2011.12.008
   Shull F, 2002, 2002 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P7, DOI 10.1109/ISESE.2002.1166920
   Soares RGF, 2018, IEEE IJCNN
   SPECHT DF, 1990, NEURAL NETWORKS, V3, P109, DOI 10.1016/0893-6080(90)90049-Q
   Suthaharan S, 2016, INTEGR SER INFORM SY, V36, P1, DOI 10.1007/978-1-4899-7641-3
   Tawosi V., 2022, AGILE EFFORT ESTIMAT
   Tawosi V, 2022, Arxiv, DOI arXiv:2209.00437
   Tawosi V, 2022, IEEE T SOFTWARE ENG, V48, P3185, DOI 10.1109/TSE.2021.3083360
   Tawosi V, 2022, EUR CON SFTWR MTNCE, P827, DOI 10.1109/SANER53432.2022.00101
   Tawosi V, 2022, IEEE WORK CONF MIN S, P707, DOI 10.1145/3524842.3528029
   Tawosi Vali, 2022, PROC 16 INT S EMPIRI, P183
   Taylor L, 2017, Arxiv, DOI [arXiv:1708.06020, 10.48550/arXiv.1708.06020, DOI 10.48550/ARXIV.1708.06020]
   Pham T, 2016, INT C PATT RECOG, P3542, DOI 10.1109/ICPR.2016.7900183
   Trendowicz A., 2014, SOFTWARE PROJECT EFF, P277
   Uncles MD, 2013, J BUS RES, V66, P1398, DOI 10.1016/j.jbusres.2012.05.005
   Usman M., 2014, PROMISE '14: Proceedings of the 10th International Conference on Predictive Models in Software Engineering, page, P82
   Whigham PA, 2015, ACM T SOFTW ENG METH, V24, DOI 10.1145/2738037
   Ziauddin S. K. T., 2012, Advances in computer science and its applications (ACSA), V2, P314
NR 52
TC 4
Z9 4
U1 5
U2 6
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD APR 1
PY 2023
VL 49
IS 4
BP 2677
EP 2697
DI 10.1109/TSE.2022.3228739
PG 21
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA E9NM9
UT WOS:000978723600072
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Gao, K
   Wang, ZX
   Mockus, A
   Zhou, MH
AF Gao, Kai
   Wang, Zhixing
   Mockus, Audris
   Zhou, Minghui
TI On the Variability of Software Engineering Needs for Deep Learning:
   Stages, Trends, and Application Types
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Data models; Market research; Training; Software; Predictive models;
   Task analysis; Software engineering; Software engineering needs for deep
   learning; mining software repositories; topic modeling; stack overflow
AB The wide use of Deep learning (DL) has not been followed by the corresponding advances in software engineering (SE) for DL. Research shows that developers writing DL software have specific development stages (i.e., SE4DL stages) and face new DL-specific problems. Despite substantial research, it is unclear how DL developers' SE needs for DL vary over stages, application types, or if they change over time. To help focus research and development efforts on DL-development challenges, we analyze 92,830 Stack Overflow (SO) questions and 227,756 READMEs of public repositories related to DL. Latent Dirichlet Allocation (LDA) reveals 27 topics for the SO questions where 19 (70.4%) topics mainly relate to a single SE4DL stage, and eight topics span multiple stages. Most questions concern Data Preparation and Model Setup stages. The relative rates of questions for 11 topics have increased, for eight topics decreased over time. Questions for the former 11 topics had a lower percentage of accepting an answer than the remaining questions. LDA on README files reveals 16 distinct application types for the 227k repositories. We apply the LDA model fitted on READMEs to the 92,830 SO questions and find that 27% of the questions are related to the 16 DL application types. The most asked question topic varies across application types, with half primarily relating to the second and third stages. Specifically, developers ask the most questions about topics primarily relating to Data Preparation (2nd) stage for four mature application types such as Image Segmentation, and topics primarily relating to Model Setup (3rd) stage for four application types concerning emerging methods such as Transfer Learning. Based on our findings, we distill several actionable insights for SE4DL research, practice, and education, such as better support for using trained models, application-type specific tools, and teaching materials.
C1 [Gao, Kai] Peking Univ, Sch Software & Microelect, Beijing 100871, Peoples R China.
   [Wang, Zhixing] Univ Tokyo, Sch Informat Sci & Technol, Bunkyo City, Tokyo 1138654, Japan.
   [Mockus, Audris] Univ Tennessee, Dept Elect Engn & Comp Sci, Knoxville, TN 37996 USA.
   [Zhou, Minghui] Peking Univ, Sch Comp Sci, Beijing 100871, Peoples R China.
C3 Peking University; University of Tokyo; University of Tennessee System;
   University of Tennessee Knoxville; Peking University
RP Zhou, MH (corresponding author), Peking Univ, Sch Comp Sci, Beijing 100871, Peoples R China.
EM gaokai19@pku.edu.cn; zhixing0@protonmail.com; audris@utk.edu;
   zhmh@pku.edu.cn
OI Gao, Kai/0000-0002-0942-7890; Zhou, Minghui/0000-0001-6324-3964
FU National Key R&D Program of China [2018YFB1004201]; National Natural
   Science Foundation of China [61825201]
FX This work was supported in part by the National Key R&D Program of China
   under Grant 2018YFB1004201 and in part by the National Natural Science
   Foundation of China under Grant 61825201.
CR Abdellatif A, 2020, IEEE WORK CONF MIN S, P174, DOI 10.1145/3379597.3387472
   Aghajani E, 2019, PROC INT CONF SOFTW, P1199, DOI 10.1109/ICSE.2019.00122
   Agrawal A, 2018, INFORM SOFTWARE TECH, V98, P74, DOI 10.1016/j.infsof.2018.02.005
   Ahmed S, 2018, PROCEEDINGS OF THE 12TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT (ESEM 2018), DOI 10.1145/3239235.3239524
   Alshangiti Moayad, 2019, INT SYMP EMP SOFTWAR, P117, DOI DOI 10.1109/esem.2019.8870187
   [Anonymous], 2021, GENTLE INTRO TRANSFE
   [Anonymous], 2017, P 21 INT C EVALUATIO, DOI [DOI 10.1145/3084226, 10.1145/3084226.3084287, DOI 10.1145/3084226.3084287]
   Asaduzzaman M, 2013, IEEE WORK CONF MIN S, P97, DOI 10.1109/MSR.2013.6624015
   Bagherzadeh M, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P432, DOI 10.1145/3338906.3338939
   Bajaj K, 2014, P 11 WORK C MIN SOFT, P112
   Bird C, 2009, 2009 6TH IEEE INTERNATIONAL WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES, P1, DOI 10.1109/MSR.2009.5069475
   Blei DM, 2003, J MACH LEARN RES, V3, P993, DOI 10.1162/jmlr.2003.3.4-5.993
   Chen ZP, 2021, PROC INT CONF SOFTW, P674, DOI 10.1109/ICSE43902.2021.00068
   Chen ZP, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P750, DOI 10.1145/3368089.3409759
   Danilova A, 2021, PROC INT CONF SOFTW, P537, DOI 10.1109/ICSE43902.2021.00057
   FLEISS JL, 1971, PSYCHOL BULL, V76, P378, DOI 10.1037/h0031619
   Ford D, 2018, PROCEEDINGS OF THE 2018 CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS (CHI 2018), DOI 10.1145/3173574.3174182
   GENNARI JH, 1989, ARTIF INTELL, V40, P11, DOI 10.1016/0004-3702(89)90046-5
   git-scm, GIT OBJECTS
   github, MALLETEN TXT
   .googleblog, GOOGLE DEV BLOG ANNO
   Gousios Georgios, 2012, 2012 9th IEEE Working Conference on Mining Software Repositories (MSR 2012), P12, DOI 10.1109/MSR.2012.6224294
   Han JX, 2020, EMPIR SOFTW ENG, V25, P2694, DOI 10.1007/s10664-020-09819-6
   Haque MU, 2020, P 14 ACM IEEE INT S, P1
   Hoffman M., 2010, P ADV NEUR INF PROC, V23:856-864
   HOLM S, 1979, SCAND J STAT, V6, P65
   Hong L., 2010, P 1 WORKSH SOC MED A, P80, DOI [10.1145/1964858.1964870, DOI 10.1145/1964858.1964870]
   Humbatova N, 2020, PROC INT CONF SOFTW, P1110, DOI 10.1145/3377811.3380395
   Hussain Md., 2019, J OPEN SOURCE SOFTW, V4, P1556, DOI [10.21105/joss.01556, DOI 10.21105/JOSS.01556]
   Islam MJ, 2020, PROC INT CONF SOFTW, P1135, DOI 10.1145/3377811.3380378
   Islam MJ, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P510, DOI 10.1145/3338906.3338955
   Jiang J, 2021, INFORM SOFTWARE TECH, V129, DOI 10.1016/j.infsof.2020.106394
   keras, KERAS INSTALLATION C
   keras, Keras: the Python deep learning API
   Krizhevsky A, 2017, COMMUN ACM, V60, P84, DOI 10.1145/3065386
   Lagouvardos S., 2020, 34 EUROPEAN C OBJECT, p15:1
   Lin B, 2019, PROC INT CONF SOFTW, P548, DOI 10.1109/ICSE.2019.00066
   Mimno D, 2011, EMNLP, P262, DOI DOI 10.5555/2145432.2145462
   Panichella A, 2021, INFORM SOFTWARE TECH, V130, DOI 10.1016/j.infsof.2020.106411
   Panichella A, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P522, DOI 10.1109/ICSE.2013.6606598
   paperswithcode, OBJECT DETECTION PAP
   Prana GAA, 2019, EMPIR SOFTW ENG, V24, P1296, DOI 10.1007/s10664-018-9660-3
   PyTorch, About us
   Quo QY, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P822, DOI 10.1109/ASE.2019.00080
   Redmon J, 2016, PROC CVPR IEEE, P779, DOI 10.1109/CVPR.2016.91
   Röder M, 2015, WSDM'15: PROCEEDINGS OF THE EIGHTH ACM INTERNATIONAL CONFERENCE ON WEB SEARCH AND DATA MINING, P399, DOI 10.1145/2684822.2685324
   Rosen C, 2016, EMPIR SOFTW ENG, V21, P1192, DOI 10.1007/s10664-015-9379-3
   Tan CM, 2002, INFORM PROCESS MANAG, V38, P529, DOI 10.1016/S0306-4573(01)00045-0
   tensorflow, US
   tensorflow, TENSORFLOW 20 IS NOW
   tensorflow, BUILD INSTALL ERROR
   tesla, Artificial intelligence & autopilot
   The PyTorch teams, 2021, WIND FAQ PYTORCH MAS
   The TensorFlow teams, 2021, RED TENS LIT BIN SIZ
   The TensorFlow teams, 2021, BUILD TENS LIT ANDR
   Treude Christoph, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P84, DOI 10.1109/MSR.2019.00022
   umass, TOPIC MODELING
   Vendome C, 2017, PROC INT CONF SOFTW, P118, DOI 10.1109/ICSE.2017.19
   Verma S, 2020, Arxiv, DOI arXiv:2011.13452
   Wallach Hanna M., 2009, Advances in neural information processing systems, P1973, DOI DOI 10.1007/S10708-008-9161-9
   Wan ZY, 2021, IEEE T SOFTWARE ENG, V47, P1331, DOI 10.1109/TSE.2019.2921343
   wikipedia, TRANSFER LEARNING WI
   wikipedia, WORD EMBEDDING WIKIP
   wikipedia, IMAGE SEGMENTATION W
   Wikipedia contributors, 2021, SUP WIK FREE ENCY
   Yang D, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P391, DOI [10.1109/MSR.2016.047, 10.1145/2901739.2901767]
   Yang XL, 2016, J COMPUT SCI TECH-CH, V31, P910, DOI 10.1007/s11390-016-1672-0
   Zhang R, 2020, PROC INT CONF SOFTW, P1159, DOI 10.1145/3377811.3380362
   Zhang TY, 2019, PROC INT SYMP SOFTW, P104, DOI 10.1109/ISSRE.2019.00020
   Zhang YH, 2018, ISSTA'18: PROCEEDINGS OF THE 27TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P129, DOI 10.1145/3213846.3213866
   Zhang ZX, 2020, PROCEEDINGS OF THE 2020 IEEE 27TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER '20), P81, DOI [10.1109/SANER48275.2020.9054800, 10.1109/saner48275.2020.9054800]
NR 71
TC 2
Z9 2
U1 1
U2 5
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD FEB 1
PY 2023
VL 49
IS 2
BP 760
EP 776
DI 10.1109/TSE.2022.3163576
PG 17
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 9F0FH
UT WOS:000937151900016
DA 2024-07-18
ER

PT J
AU Liu, A
   Liu, SY
AF Liu, Ai
   Liu, Shaoying
TI Enhancing the Capability of Testing-Based Formal Verification by
   Handling Operations in Software Packages
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Testing; Java; Input variables; Computer bugs; Software packages; Costs;
   Codes; Specification; testing; formal verification; Hoare logic; method
   invocation
AB Testing a program based on its specification is necessary to ensure that the program meets its desired functionality. Formal methods, based on some mathematical theories, are often used to enhance the quality of systems but suffer from difficulties in application. The Testing-Based Formal Verification (TBFV) is proposed as an alternative to ensure the correctness of all traversed program paths, but is limited and impractical due to the lack of the capability of dealing with operations (e.g., methods defined in classes) provided in software packages. In this paper, we provide an axiomatic approach to dealing with this problem so as to enhance the capability of the TBFV. In particular, we focus on the Vector, ArrayList, and LinkedList classes in Java. We present both an example to demonstrate how our approach works properly and two small experiments conducted to evaluate the performance of our approach by comparing it with the specification-based testing (SBT). The result shows that our approach is more than 30% superior to the SBT in bug detection.
C1 [Liu, Ai; Liu, Shaoying] Hiroshima Univ, Grad Sch Adv Sci & Engn, Higashihiroshima 7398511, Japan.
C3 Hiroshima University
RP Liu, SY (corresponding author), Hiroshima Univ, Grad Sch Adv Sci & Engn, Higashihiroshima 7398511, Japan.
EM liuai@hiroshima-u.ac.jp; sliu@hiroshima-u.ac.jp
RI Liu, Ai/HNR-6916-2023
OI Liu, Ai/0000-0001-8222-2157
CR Abdurazik A, 2000, IEEE INT C ENG COMP, P179, DOI 10.1109/ICECCS.2000.873943
   Ahrendt Wolfgang, 2014, Verified Software: Theories, Tools and Experiments. 6th International Conference, VSTTE 2014. Revised Selected Papers: LNCS 8471, P55, DOI 10.1007/978-3-319-12154-3_4
   Ahrendt W., 2016, Lecture notes in computer science, V10001, DOI DOI 10.1007/978-3-319-49812-6
   Apt KR, 2019, FORM ASP COMPUT, V31, P751, DOI 10.1007/s00165-019-00501-3
   Barbey S., 1996, Dependable Computing - EDCC-2. Second European Dependable Computing Conference Proceedings, P303
   Bobot F., 2014, LNCS, V8164, P191, DOI [10.1007/978-3-642-54108-710, DOI 10.1007/978-3-642-54108-710]
   Cok DR, 2005, LECT NOTES COMPUT SC, V3362, P108
   Demeyer Serge, 2020, Leveraging Applications of Formal Methods, Verification and Validation. Engineering Principles. 9th International Symposium on Leveraging Applications of Formal Methods, ISoLA 2020. Proceedings. Lecture Notes in Computer Science (LNCS 12477), P9, DOI 10.1007/978-3-030-61470-6_2
   Fisher G., 2016, PROC ACMCONF INNOV T, P224, DOI [10.1145/2899415.2899424, DOI 10.1145/2899415.2899424]
   Fisher G, 2018, SIGCSE'18: PROCEEDINGS OF THE 49TH ACM TECHNICAL SYMPOSIUM ON COMPUTER SCIENCE EDUCATION, P800, DOI 10.1145/3159450.3159575
   Gaboardi M, 2021, LECT NOTES COMPUT SC, V12648, P234, DOI 10.1007/978-3-030-72019-3_9
   Gawanmeh A, 2015, SCALABLE COMPUT-PRAC, V16, P321
   Hoare C. A. R., 1973, Acta Informatica, V2, P335, DOI 10.1007/BF00289504
   Jabbar R, 2020, PROCEEDINGS OF THE 22ND INTERNATIONAL CONFERENCE ON ENTERPRISE INFORMATION SYSTEMS (ICEIS), VOL 1, P261, DOI 10.5220/0009592102610268
   Li YH, 2019, IEEE COMMUN SURV TUT, V21, P940, DOI 10.1109/COMST.2018.2868050
   Liu JY, 2019, LECT NOTES COMPUT SC, V11562, P187, DOI 10.1007/978-3-030-25543-5_12
   Liu S., 2013, LNCS, V8332, P3, DOI DOI 10.1007/978-3-319-04915-1_1
   Liu S., 2012, PROC TURING 100 ALAN, V10, P229, DOI DOI 10.29007/FML1
   Liu SY, 2022, IEEE T SOFTWARE ENG, V48, P691, DOI 10.1109/TSE.2020.2999884
   Liu SY, 2012, IEEE T SOFTWARE ENG, V38, P1100, DOI 10.1109/TSE.2011.102
   Liu SY, 2004, LECT NOTES COMPUT SC, V3308, P7
   Peled D.A., 2001, Software Reliability Methods
   Rustan K, 2010, LECT NOTES ARTIF INT, V6355, P348, DOI 10.1007/978-3-642-17511-4_20
   Schumi R, 2021, LECT NOTES COMPUT SC, V12649, P269, DOI 10.1007/978-3-030-71500-7_14
   Shaoying Liu, 2016, 2016 IEEE International Conference on Software Quality, Reliability and Security (QRS). Proceedings, P448, DOI 10.1109/QRS.2016.56
   Tschannen Julian, 2015, Tools and Algorithms for the Construction and Analysis of Systems. 21st International Conference, TACAS 2015, held as part of the European Joint Conferences on Theory and Practice of Software, ETAPS 2015. Proceedings: LNCS 9035, P566, DOI 10.1007/978-3-662-46681-0_53
   Untch R. H., 1993, SIGSOFT Software Engineering Notes, V18, P139, DOI 10.1145/174146.154265
   Wang R, 2020, IEEE INT C ENG COMP, P165, DOI 10.1109/ICECCS51672.2020.00026
   Wang R, 2019, 2019 COMPANION OF THE 19TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY AND SECURITY (QRS-C 2019), P205, DOI 10.1109/QRS-C.2019.00049
   Wang R, 2018, 2018 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY AND SECURITY (QRS 2018), P59, DOI 10.1109/QRS.2018.00019
   Whittaker JA, 2000, IEEE SOFTWARE, V17, P70, DOI 10.1109/52.819971
NR 31
TC 2
Z9 2
U1 0
U2 4
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JAN 1
PY 2023
VL 49
IS 1
BP 304
EP 324
DI 10.1109/TSE.2022.3150333
PG 21
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA L1HD8
UT WOS:001020827200016
DA 2024-07-18
ER

PT J
AU Winter, E
   Nowack, V
   Bowes, D
   Counsell, S
   Hall, T
   Haraldsson, S
   Woodward, J
AF Winter, Emily
   Nowack, Vesna
   Bowes, David
   Counsell, Steve
   Hall, Tracy
   Haraldsson, Saemundur
   Woodward, John
TI Let's Talk <i>With</i> Developers, Not About Developers: A Review of
   Automatic Program Repair Research
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Review
DE Human factors; software development; automatic program repair
AB Automatic program repair (APR) offers significant potential for automating some coding tasks. Using APR could reduce the high costs historically associated with fixing code faults and deliver significant benefits to software engineering. Adopting APR could also have profound implications for software developers ' daily activities, transforming their work practices. To realise the benefits of APR it is vital that we consider how developers feel about APR and the impact APR may have on developers ' work. Developing APR tools without consideration of the developer is likely to undermine the success of APR deployment. In this paper, we critically review how developers are considered in APR research by analysing how human factors are treated in 260 studies from Monperrus 's Living Review of APR. Over half of the 260 studies in our review were motivated by a problem faced by developers (e.g., the difficulty associated with fixing faults). Despite these human-oriented motivations, fewer than 7% of the 260 studies included a human study. We looked in detail at these human studies and found their quality mixed (for example, one human study was based on input from only one developer). Our results suggest that software developers are often talked about in APR studies, but are rarely talked with. A more comprehensive and reliable understanding of developer human factors in relation to APR is needed. Without this understanding, it will be difficult to develop APR tools and techniques which integrate effectively into developers ' workflows. We recommend a future research agenda to advance the study of human factors in APR.
C1 [Winter, Emily; Nowack, Vesna; Bowes, David; Hall, Tracy] Univ Lancaster, Sch Comp & Commun, Lancaster LA1 4YW, England.
   [Counsell, Steve] Brunel Univ London, Dept Comp Sci, London UB8 3PH, England.
   [Haraldsson, Saemundur] Univ Stirling, Dept Comp Sci & Math, Stirling FK9 4LA, England.
   [Woodward, John] Queen Mary Univ London, Sch Elect Engn & Comp Sci, London E1 4NS, England.
C3 Lancaster University; Brunel University; University of Stirling;
   University of London; Queen Mary University London
RP Winter, E (corresponding author), Univ Lancaster, Sch Comp & Commun, Lancaster LA1 4YW, England.
EM e.winter@lancaster.ac.uk; v.nowack@qmul.ac.uk;
   d.h.bowes@lancaster.ac.uk; steve.counsell@brunel.ac.uk;
   tracy.hall@lancaster.ac.uk; saemundur.haraldsson@stir.ac.uk;
   j.woodward@qmul.ac.uk
OI Woodward, John/0000-0002-2093-8990; Bowes, David/0000-0001-7014-2811;
   Haraldsson, Saemundur/0000-0003-0395-5884
FU EPSRC [EP/S005730/1, EP/S005749/1, EP/S005803/1, EP/S005749/2] Funding
   Source: UKRI
CR Abbas N, 2021, POLICE PRACT RES, V22, P849, DOI 10.1080/15614263.2020.1728271
   Alarcon GM, 2020, SYSTEMS-BASEL, V8, DOI 10.3390/systems8010008
   Alohali M, 2020, J DECIS SYST, V29, P27, DOI 10.1080/12460125.2020.1728988
   [Anonymous], 2012, Proceedings of the 2nd International Workshop on Evidential Assessment of software technologies
   Bader J, 2019, P ACM PROGRAM LANG, V3, DOI 10.1145/3360585
   Balachandran V, 2013, IEEE INT WORK C SO, P167, DOI 10.1109/SCAM.2013.6648198
   Beecham S, 2008, INFORM SOFTWARE TECH, V50, P860, DOI 10.1016/j.infsof.2007.09.004
   Beller M, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P572, DOI 10.1145/3180155.3180175
   Böhme M, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P117, DOI 10.1145/3106237.3106255
   Briand L, 2012, IEEE SOFTWARE, V29, P96, DOI 10.1109/MS.2012.86
   Buse RPL, 2011, ACM SIGPLAN NOTICES, V46, P643, DOI 10.1145/2076021.2048117
   Cambronero JP, 2019, Arxiv, DOI [arXiv:1907.06535, 10.48550/arXiv.1907.06535, DOI 10.48550/ARXIV.1907.06535]
   Cruzes DS, 2011, INT SYMP EMP SOFTWAR, P275, DOI 10.1109/ESEM.2011.36
   Cruzes DS, 2011, INFORM SOFTWARE TECH, V53, P440, DOI 10.1016/j.infsof.2011.01.004
   Daniel B, 2009, IEEE INT CONF AUTOM, P433, DOI 10.1109/ASE.2009.17
   Durieux T, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P302, DOI 10.1145/3338906.3338911
   Dybå T, 2008, INFORM SOFTWARE TECH, V50, P833, DOI 10.1016/j.infsof.2008.01.006
   Easterbrook S., 2008, GUIDE ADV EMPIRICAL, P285, DOI [DOI 10.1007/978-1-84800-044-5_11, DOI 10.1007/978-1-84800-044-511]
   Endres M, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P399, DOI 10.1109/ASE.2019.00045
   Falessi D, 2018, EMPIR SOFTW ENG, V23, P452, DOI 10.1007/s10664-017-9523-3
   Feldt R, 2018, EMPIR SOFTW ENG, V23, P3801, DOI 10.1007/s10664-018-9655-0
   Fowler M., 1999, Refactoring: Improving the Design of Existing Code
   Fry Z.P., 2012, INT S SOFTWARE TESTI, P177, DOI 10.1145/04000800.2336775
   Gazzola L, 2019, IEEE T SOFTWARE ENG, V45, P34, DOI 10.1109/TSE.2017.2755013
   Gulwani S, 2018, ACM SIGPLAN NOTICES, V53, P465, DOI [10.1145/3192366.3192387, 10.1145/3296979.3192387]
   Hata H, 2019, Arxiv, DOI arXiv:1812.07170
   Huang X, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1207, DOI 10.1145/3180155.3180235
   Ivanov V, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P890, DOI 10.1145/3106237.3117778
   Kaleeswaran S, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P266, DOI 10.1145/2568225.2568258
   Kalyanpur A, 2006, LECT NOTES COMPUT SC, V4011, P170
   Kern C, 2010, LECT NOTES COMPUT SC, V6371, P67, DOI 10.1007/978-3-642-15898-8_5
   Kim D, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P802, DOI 10.1109/ICSE.2013.6606626
   Kirbas S, 2021, IEEE SOFTWARE, V38, P43, DOI 10.1109/MS.2021.3071086
   Kitchenham BA, 2002, IEEE T SOFTWARE ENG, V28, P721, DOI 10.1109/TSE.2002.1027796
   Kitchenham B, 2013, IEEE T SOFTWARE ENG, V39, P1002, DOI 10.1109/TSE.2012.76
   Kitchenham Barbara., 2010, P 2010 ACM IEEE INT, P1
   LANDIS JR, 1977, BIOMETRICS, V33, P159, DOI 10.2307/2529310
   Le Goues C, 2012, IEEE T SOFTWARE ENG, V38, P54, DOI 10.1109/TSE.2011.104
   Le Goues C, 2012, PROC INT CONF SOFTW, P3, DOI 10.1109/ICSE.2012.6227211
   Le X. B. D., 2018, THESIS SINGAPORE MAN
   Le XBD, 2016, IEEE INT CONF AUTOM, P876, DOI 10.1145/2970276.2975934
   Lee J, 2018, P ACM PROGRAM LANG, V2, DOI 10.1145/3276528
   Lenberg P, 2015, J SYST SOFTWARE, V107, P15, DOI 10.1016/j.jss.2015.04.084
   Lieberman H, 1997, COMMUN ACM, V40, P27
   Liu C, 2013, 2013 IEEE SIXTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST 2013), P282, DOI 10.1109/ICST.2013.24
   Liu K, 2021, J SYST SOFTWARE, V171, DOI 10.1016/j.jss.2020.110817
   Mahajan S, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P140, DOI 10.1145/3180155.3180262
   Mahajan S, 2018, IEEE INT CONF SOFTW, P215, DOI 10.1109/ICST.2018.00030
   Marcilio D, 2019, IEEE INT WORK C SO, P34, DOI 10.1109/SCAM.2019.00013
   Monperrus M., 2018, ARXIV
   Monperrus M, 2019, 2019 IEEE/ACM 1ST INTERNATIONAL WORKSHOP ON BOTS IN SOFTWARE ENGINEERING (BOTSE 2019), P12, DOI 10.1109/BotSE.2019.00010
   Monperrus M, 2018, ACM COMPUT SURV, V51, DOI 10.1145/3105906
   Monperrus Martin, 2018, Technical Report hal-01956501
   Noller Y, 2022, Arxiv, DOI arXiv:2108.13064
   Ostrand TJ, 2005, IEEE T SOFTWARE ENG, V31, P340, DOI 10.1109/TSE.2005.49
   Perscheid M, 2017, SOFTWARE QUAL J, V25, P83, DOI 10.1007/s11219-015-9294-2
   Petre M, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P722, DOI 10.1109/ICSE.2013.6606618
   Ralph P, 2021, Arxiv, DOI arXiv:2010.03525
   Robinson H, 2007, INFORM SOFTWARE TECH, V49, P540, DOI 10.1016/j.infsof.2007.02.007
   Sharp H, 2016, IEEE T SOFTWARE ENG, V42, P786, DOI 10.1109/TSE.2016.2519887
   Singer Janice, 1997, Proceedings of the 1997 Conference of the Centre for Advanced Studies on Collaborative Research. CASCON '97, P21
   Soomro AB, 2016, INFORM SOFTWARE TECH, V73, P52, DOI 10.1016/j.infsof.2016.01.006
   Stol KJ, 2016, PROC INT CONF SOFTW, P120, DOI 10.1145/2884781.2884833
   Storey MA, 2020, EMPIR SOFTW ENG, V25, P4097, DOI 10.1007/s10664-020-09858-z
   Tao YD, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P64, DOI 10.1145/2635868.2635873
   Tomida Y, 2019, 2019 SEVENTH IEEE WORKING CONFERENCE ON SOFTWARE VISUALIZATION (VISSOFT), P23, DOI 10.1109/VISSOFT.2019.00011
   van der Linden D, 2020, PROC INT CONF SOFTW, P149, DOI 10.1145/3377811.3380394
   van Tonder R, 2019, 2019 IEEE/ACM 1ST INTERNATIONAL WORKSHOP ON BOTS IN SOFTWARE ENGINEERING (BOTSE 2019), P43, DOI 10.1109/BotSE.2019.00019
   Wang SW, 2020, IEEE INT CONF AUTOM, P968, DOI 10.1145/3324884.3416590
   Weimar W., 2021, 2 INT WORKSHOP AUTOM
   Weimer Westley, 2006, Proceedings of the 5th International Conference on Generative Programming and Component Engineering (GPCE'06), P181, DOI DOI 10.1145/1173706.1173734
   Yi JY, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P740, DOI 10.1145/3106237.3106262
   Zhang H, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P659, DOI 10.1145/3338906.3338976
NR 73
TC 3
Z9 4
U1 2
U2 3
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JAN 1
PY 2023
VL 49
IS 1
BP 419
EP 436
DI 10.1109/TSE.2022.3152089
PG 18
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA L1HD8
UT WOS:001020827200022
OA Green Submitted, hybrid
DA 2024-07-18
ER

PT J
AU Panach, JI
   Pastor, O
   Juristo, N
AF Panach, Jose Ignacio
   Pastor, Oscar
   Juristo, Natalia
TI A Family of Experiments to Compare Two Model-Driven Development Tools vs
   a Traditional Development Method
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE D.1.2 Automatic Programming; D.2.1.e Methodologies; D.2.1.i Validation
AB Context: There are many papers which extol the benefits of Model-Driven Development (MDD) compared to traditional developments. However, the adoption of MDD to develop fully functional systems without coding is not frequent. Objective: This paper presents a family of experiments with 7 replications and 56 sample units to compare a traditional method versus MDD, analysing two MDD tools. Method: The factor in the experiment is the method with two treatments (traditional and MDD). We analyse together all replications thanks to two moderator variables in a multilevel hierarchy: Replication (from 1 to 7) and MDD Tool (INTEGRANOVA and WebRatio). Response variables are Functional Suitability, measured in terms of effectiveness in simple and complex problems; Effort, measured as time to develop simple problems; and Satisfaction, measured in terms of perceived ease of use, perceived usefulness and intention to use. Result: Functional Suitability in MDD yields significantly better results both in simple and complex problems, while Effort for simple problems is also significantly better for MDD. Differences for Functional Suitability in complex problems are greater than with simple ones. Considering the MDD tools, INTEGRANOVA yields significantly better Functional Suitability in complex problems. Regarding Satisfaction, replications with WebRatio have a better intention to use than replications with INTEGRANOVA. Conclusions: Even though MDD yields better Functional Suitability and Effort, the subjects' Satisfaction with MDD is not better than with a traditional method.
C1 [Panach, Jose Ignacio] Univ Valencia, Dept Informat, Escola Tecn Super Engn, Valencia 46100, Spain.
   [Pastor, Oscar] Univ Politecn Valencia, Valencian Res Inst Artificial Intelligence, Camino Vera S-N,Edificio 1F, Valencia 46022, Spain.
   [Juristo, Natalia] Univ Politecn Madrid, Escuela Tecn Super Ingn Informat, Campus Montegancedo, Boadilla Del Monte 28660, Spain.
C3 University of Valencia; Universitat Politecnica de Valencia; Universidad
   Politecnica de Madrid
RP Panach, JI (corresponding author), Univ Valencia, Dept Informat, Escola Tecn Super Engn, Valencia 46100, Spain.
EM joigpana@uv.es; opastor@dsic.upv.es; natalia@fi.upm.es
RI López, Oscar Pastor/S-4216-2016
FU Spanish Ministry of Science and Innovation project DataMe
   [TIN2016-80811-P, PGC2018-097265-B-I00]; ERDF; Generalitat Valenciana
   [PROMETEO/2018/176, GV/2021/072]
FX This work was supported by the Spanish Ministry of Science and
   Innovation project DataMe under Grants TIN2016-80811-P and
   PGC2018-097265-B-I00, and was co-financed by ERDF and in part by
   Generalitat Valenciana with GISPRO Project under Grants
   PROMETEO/2018/176 and GV/2021/072.
CR [Anonymous], 2003, P EUR C INF SYST NAP
   Basili VR, 2007, LECT NOTES COMPUT SC, V4336, P33
   Brambilla M, 2014, SCI COMPUT PROGRAM, V89, P71, DOI 10.1016/j.scico.2013.03.010
   Brdjanin D, 2019, SOFTW SYST MODEL, V18, P1859, DOI 10.1007/s10270-018-0672-7
   Cachero C, 2019, INFORM SOFTWARE TECH, V108, P78, DOI 10.1016/j.infsof.2018.12.005
   Cohen J., 1988, STAT POWER ANAL BEHA
   Cruz-Lemus JA, 2010, INFORM SCIENCES, V180, P2209, DOI 10.1016/j.ins.2010.01.026
   DAVIS FD, 1989, MIS QUART, V13, P319, DOI 10.2307/249008
   Embley DW, 2011, HANDBOOK OF CONCEPTUAL MODELING: THEORY, PRACTICE AND RESEARCH CHALLENGES, P3
   Erdfelder E, 1996, BEHAV RES METH INS C, V28, P1, DOI 10.3758/BF03203630
   Escalona MJ, 2008, IEEE T SOFTWARE ENG, V34, P377, DOI 10.1109/TSE.2008.27
   Fernandez A, 2013, J SYST SOFTWARE, V86, P161, DOI 10.1016/j.jss.2012.07.043
   Ferreira W., 2017, P 21 INT C EV ASS SO, P78, DOI [10.1145/3084226.3084258, DOI 10.1145/3084226.3084258]
   Freire M, 2014, INT J SOFTW ENG KNOW, V24, P1509, DOI 10.1142/S0218194014400178
   Gonzalez-Huerta J, 2015, INFORM SOFTWARE TECH, V57, P405, DOI 10.1016/j.infsof.2014.05.018
   Hailpern B, 2006, IBM SYST J, V45, P451, DOI 10.1147/sj.453.0451
   Hutchinson J, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P633, DOI 10.1145/1985793.1985882
   IEEE Standard Computer Dictionary, 1991, 610 IEEE
   Panach JI, 2021, IEEE T SOFTWARE ENG, V47, P130, DOI 10.1109/TSE.2018.2884706
   INTEGRANOVA "INTEGRANOVA technologies, US
   ISO/IEC, 2010, 25000 ISOIEC
   Juristo N., 2013, BASICS SOFTWARE ENG
   Liddle SW, 2011, HANDBOOK OF CONCEPTUAL MODELING: THEORY, PRACTICE AND RESEARCH CHALLENGES, P17
   Martínez Y, 2013, INFORM SOFTWARE TECH, V55, P189, DOI 10.1016/j.infsof.2012.07.004
   Mellor SJ, 2003, IEEE SOFTWARE, V20, P14, DOI 10.1109/MS.2003.1231145
   Meyers L., 2006, APPL MULTIVARIATE RE
   Mussbacher G, 2014, LECT NOTES COMPUT SC, V8767, P183, DOI 10.1007/978-3-319-11653-2_12
   OMG, INTERACTION FLOW MOD
   Panach J. I., EXPT MAT
   Panach J. I., 2021, FAMILY EXPT MDD VS T
   Panach JI, 2015, INFORM SOFTWARE TECH, V62, P164, DOI 10.1016/j.infsof.2015.02.012
   Planas E, 2020, COMPUT STAND INTER, V67, DOI 10.1016/j.csi.2019.103363
   Reggio G, 2011, LECT NOTES COMPUT SC, V6981, P138, DOI 10.1007/978-3-642-24485-8_11
   Ricca F, 2018, EMPIR SOFTW ENG, V23, P1743, DOI 10.1007/s10664-017-9563-8
   Ricca F, 2010, IEEE T SOFTWARE ENG, V36, P96, DOI 10.1109/TSE.2009.69
   Riofrio P., EMPIR SOFTW ENG
   Rossi Gustavo, 2016, CLEIej, V19, P5, DOI 10.19153/cleiej.19.3.1
   Safdar SA, 2015, LECT NOTES COMPUT SC, V9153, P33, DOI 10.1007/978-3-319-21151-0_3
   Selic B, 2003, IEEE SOFTWARE, V20, P19, DOI 10.1109/MS.2003.1231146
   Wanderley F, 2014, LECT NOTES COMPUT SC, V8583, P200, DOI 10.1007/978-3-319-09156-3_15
   Weigert T, 2006, IEEE INTERNATIONAL CONFERENCE ON SENSOR NETWORKS, UBIQUITOUS, AND TRUSTWORTHY COMPUTING, VOL 1, PROCEEDINGS, P208
   Wohlin C., 2012, Experimentation in Software Engineering
NR 42
TC 0
Z9 0
U1 2
U2 3
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD DEC 1
PY 2022
VL 48
IS 12
BP 4802
EP 4817
DI 10.1109/TSE.2021.3127350
PG 16
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 6X8ON
UT WOS:000896667600005
DA 2024-07-18
ER

PT J
AU Arizon-Peretz, R
   Hadar, I
   Luria, G
AF Arizon-Peretz, Renana
   Hadar, Irit
   Luria, Gil
TI The Importance of Security Is in the Eye of the Beholder: Cultural,
   Organizational, and Personal Factors Affecting the Implementation of
   Security by Design
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Security; Meteorology; Software; Privacy; Companies; Costs; Codes; Human
   factors in software design; organizational impacts; security protection;
   social and behavioral sciences
ID SAFETY CLIMATE; SELF-EFFICACY; PROACTIVE PERSONALITY;
   INDIVIDUALISM-COLLECTIVISM; JOB-PERFORMANCE; CITIZENSHIP BEHAVIOR;
   SOFTWARE QUALITY; SERVICE CLIMATE; RESPONSE BIAS; WORK
AB Security by design is a recommended approach, addressing end-to-end security and privacy in the design of software systems. To realize this approach, proactive security behavior is required from software developers. This research follows results from previous studies that suggest that personal and organizational characteristics influence security-related behaviors during the software design process. The research is aimed at gaining an in-depth understanding of proactive security behavior and the factors affecting it. Leveraging organization climate theory from organizational psychology, we propose a theoretical model, detailing different factors and their relations with proactive security behavior and test it in empirical settings. The empirical study was conducted in collaboration with an internationally distributed information technology enterprise and included a survey questionnaire completed by 499 software developers working in seven countries. The results of the survey confirm the moderation-mediation relations in the proposed model, revealing that organizational security climate and security self-efficacy are both positively associated with proactive security behavior, organizational security climate is positively associated with security self-efficacy, and cultures promoting individualism moderate the relationship between organizational security climate and security self-efficacy, thus impeding proactive security behavior. The body of knowledge of organizational psychology points to directions that can effectively be activated for improvement.
C1 [Arizon-Peretz, Renana; Hadar, Irit] Univ Haifa, Dept Informat Syst, IL-3498838 Haifa, Israel.
   [Luria, Gil] Univ Haifa, Dept Human Serv, IL-3498838 Haifa, Israel.
C3 University of Haifa; University of Haifa
RP Hadar, I (corresponding author), Univ Haifa, Dept Informat Syst, IL-3498838 Haifa, Israel.
EM renana.ar.peretz@gmail.com; hadari@is.haifa.ac.il; gil.luria@gmail.com
OI Luria, Gil/0000-0002-7983-2517; Hadar, Irit/0000-0002-4267-0235
FU Center for Cyber Law Policy (CCLP); Israeli National Cyber Bureau
FX This research was supported by the Center for Cyber Law & Policy (CCLP),
   established by the University of Haifa in collaboration with the Israeli
   National Cyber Bureau.
CR Acuña ST, 2008, EMPIR SOFTW ENG, V13, P401, DOI 10.1007/s10664-008-9074-8
   Acuña ST, 2015, INFORM SOFTWARE TECH, V57, P141, DOI 10.1016/j.infsof.2014.09.002
   Ammentorp J, 2007, PATIENT EDUC COUNS, V66, P270, DOI 10.1016/j.pec.2006.12.012
   Andres H. P., 1995, PROC AM C INF SYST P
   Arizon-Peretz R, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-021-09995-z
   Bakker AB, 2012, HUM RELAT, V65, P1359, DOI 10.1177/0018726712453471
   Balebako R, 2014, P WORKSH US SEC, P1
   BANDURA A, 1993, EDUC PSYCHOL, V28, P117, DOI 10.1207/s15326985ep2802_3
   Bandura A., 2006, Self-Efficacy Beliefs of Adolescents, P307, DOI DOI 10.1017/CBO9781107415324.004
   Bandura A., 1997, SELF EFFICACY EXERCI
   Bandura A., 2010, Encyclopedia of human behavior, P1534, DOI DOI 10.1002/9780470479216.CORPSY0836
   Beaudoin M, 2011, PSYCHOL BULL, V137, P211, DOI 10.1037/a0022106
   BLACK JS, 1989, HUM RESOUR MANAGE-US, V28, P511, DOI 10.1002/hrm.3930280406
   BOCHNER S, 1994, J CROSS CULT PSYCHOL, V25, P233, DOI 10.1177/0022022194252005
   Bolin JH, 2014, J EDUC MEAS, V51, P335, DOI 10.1111/jedm.12050
   Cai ZJ, 2019, J ORGAN BEHAV, V40, P209, DOI 10.1002/job.2347
   Carpini JA., 2017, OXFORD HDB ORG CITIZ
   Casola V., 2020, Systems and Software, V1, P1
   Cavoukian A., 2013, PRIVACY SECURITY DES
   Christian MS, 2009, J APPL PSYCHOL, V94, P1103, DOI 10.1037/a0016172
   Clarke S, 2006, J OCCUP HEALTH PSYCH, V11, P315, DOI 10.1037/1076-8998.11.4.315
   Clincy Victor A, 2003, Journal of Computing Sciences in Colleges, V19, P278
   Coyle-Shapiro JAM, 2002, PUBLIC ADMIN, V80, P77, DOI 10.1111/1467-9299.00295
   Crant JM, 2000, J MANAGE, V26, P435, DOI 10.1177/014920630002600303
   CRANT JM, 1995, J APPL PSYCHOL, V80, P532, DOI 10.1037/0021-9010.80.4.532
   Davis M, 2013, SCI ENG ETHICS, V19, P851, DOI 10.1007/s11948-012-9412-5
   Department for Digital Culture Media and Sport Cyber Security (DCMS), 2020, BREACH SURV 2020 STA
   EARLEY PC, 1994, ADMIN SCI QUART, V39, P89, DOI 10.2307/2393495
   Erdogan B, 2005, PERS PSYCHOL, V58, P859, DOI 10.1111/j.1744-6570.2005.00772.x
   Flin R, 2000, SAFETY SCI, V34, P177, DOI 10.1016/S0925-7535(00)00012-6
   Frese M, 2001, RES ORGAN BEHAV, V23, P133, DOI 10.1016/S0191-3085(01)23005-6
   Fuller B, 2009, J VOCAT BEHAV, V75, P329, DOI 10.1016/j.jvb.2009.05.008
   G~alik J. S., 2009, CYBERSPACE
   George D, 2010, SPSS for Windows step by step: A simple guide and reference. 11.0 update
   Gliem J. A., 2003, CALCULATING INTERPRE, DOI DOI 10.1016/B978-0-444-88933-1.50023-4
   Grant AM, 2008, RES ORGAN BEHAV, V28, P3, DOI 10.1016/j.riob.2008.04.002
   Hadar I, 2018, EMPIR SOFTW ENG, V23, P259, DOI 10.1007/s10664-017-9517-1
   Hayes AF, 2020, AM BEHAV SCI, V64, P19, DOI 10.1177/0002764219859633
   Hofstede G., 1983, Expectations in Cross-Cultural Psychology, P335
   Hofstede G., 1980, Culture's consequences: International differences in work-related values
   Hofstede G., 1994, International Business Review, V3, P1, DOI DOI 10.1016/0969-5931(94)90011-6
   Hofstede Gert Jan, 2009, European Journal of Cross-Cultural Competence and Management, V1, P14, DOI 10.1504/EJCCM.2009.026729
   Hong Y, 2016, J APPL PSYCHOL, V101, P687, DOI 10.1037/apl0000064
   Hong Y, 2013, J APPL PSYCHOL, V98, P237, DOI 10.1037/a0031666
   IBM and Ponemon Institute, 2019, COST DAT BREACH REP
   Johnson JW, 1996, PERS PSYCHOL, V49, P831, DOI 10.1111/j.1744-6570.1996.tb02451.x
   JOSEPH B, 2011, PROC INT C INF INTEL, P23
   Kanfer R, 2001, J APPL PSYCHOL, V86, P837, DOI 10.1037//0021-9010.86.5.837
   Katz-Navon T, 2007, INT J HEALTH CARE Q, V20, P572, DOI 10.1108/09526860710822716
   Keil M, 2000, MIS QUART, V24, P299, DOI 10.2307/3250940
   Kita E, 2018, TRANSPORT RES F-TRAF, V59, P203, DOI 10.1016/j.trf.2018.09.001
   Landau S., 2003, HDB STAT ANAL USING
   Larsson A, 2012, BMC MUSCULOSKEL DIS, V13, DOI 10.1186/1471-2474-13-1
   Lee HW, 2019, J APPL PSYCHOL, V104, P197, DOI 10.1037/apl0000346
   Lee K, 2002, J APPL PSYCHOL, V87, P131, DOI 10.1037/0021-9010.87.1.131
   Leidner DE, 2006, MIS QUART, V30, P357
   Leitao S, 2018, ACCIDENT ANAL PREV, V119, P131, DOI 10.1016/j.aap.2018.06.017
   Li N, 2010, J APPL PSYCHOL, V95, P395, DOI 10.1037/a0018079
   Luria G, 2008, J SAFETY RES, V39, P273, DOI 10.1016/j.jsr.2007.12.003
   Luria G, 2019, J ORGAN BEHAV, DOI 10.1002/job.2417
   Luria G, 2016, WILEY BLACK HB ORG P, P357
   Luria G, 2014, SAFETY SCI, V70, P288, DOI 10.1016/j.ssci.2014.07.003
   Luria G, 2013, J ORGAN BEHAV, V34, P995, DOI 10.1002/job.1836
   Maddux J., 2002, HDB POSITIVE PSYCHOL, DOI DOI 10.1093/OXFORDHB/9780195187243.013.0031
   Maddux J.E., 1991, HDB SOCIAL CLIN PSYC, P58
   Marron DB, 2000, ECON INQ, V38, P159, DOI 10.1093/ei/38.2.159
   Myers M. D., 2002, Journal of Global Information Management, V10, P24, DOI 10.4018/jgim.2002010103
   Neal A, 2006, J APPL PSYCHOL, V91, P946, DOI 10.1037/0021-9010.91.4.946
   Ng TWH, 2005, PERS PSYCHOL, V58, P367, DOI 10.1111/j.1744-6570.2005.00515.x
   Nulty DD, 2008, ASSESS EVAL HIGH EDU, V33, P301, DOI 10.1080/02602930701293231
   Ohly S, 2006, J ORGAN BEHAV, V27, P257, DOI 10.1002/job.376
   Ostroff C, 2002, J APPL PSYCHOL, V87, P355, DOI 10.1037//0021-9010.87.2.355
   Ostroff C., 2003, COMPREHENSIVE HDB PS, V12, P565, DOI [10.1002/0471264385.wei1222, DOI 10.1002/0471264385.WEI1222]
   Parker SK, 2006, J APPL PSYCHOL, V91, P636, DOI 10.1037/0021-9010.91.3.636
   Parker SK, 2010, J MANAGE, V36, P633, DOI 10.1177/0149206308321554
   Pitropakis N, 2018, LECT NOTES COMPUT SC, V11033, P213, DOI 10.1007/978-3-319-98385-1_15
   Ribak R, 2019, INFORM COMMUN SOC, V22, P838, DOI 10.1080/1369118X.2019.1577475
   Rigotti T, 2008, J CAREER ASSESSMENT, V16, P238, DOI 10.1177/1069072707305763
   Salem M, 2018, J ORGAN BEHAV, V39, P594, DOI 10.1002/job.2246
   SCHNEIDER B, 1980, ADMIN SCI QUART, V25, P252, DOI 10.2307/2392454
   SCHNEIDER B, 1975, PERS PSYCHOL, V28, P447, DOI 10.1111/j.1744-6570.1975.tb01386.x
   SCHNEIDER B, 1992, J APPL PSYCHOL, V77, P705, DOI 10.1037/0021-9010.77.5.705
   Schneider B., 2011, APA Handbook of industrial and organizational psychology, V1, P373, DOI DOI 10.1037/12169-012
   Seibert SE, 1999, J APPL PSYCHOL, V84, P416, DOI 10.1037/0021-9010.84.3.416
   Seibert SE, 2001, PERS PSYCHOL, V54, P845, DOI 10.1111/j.1744-6570.2001.tb00234.x
   Shabut AM, 2016, I C SOFTWARE KNOWL I, P37, DOI 10.1109/SKIMA.2016.7916194
   Sharma A, 2012, INT J PROJ MANAG, V30, P176, DOI 10.1016/j.ijproman.2011.05.003
   Spiekermann S, 2019, P IEEE, V107, P600, DOI 10.1109/JPROC.2018.2866769
   Stajkovic AD, 1998, PSYCHOL BULL, V124, P240, DOI 10.1037/0033-2909.124.2.240
   Stajkovic AD, 2018, PERS INDIV DIFFER, V120, P238, DOI 10.1016/j.paid.2017.08.014
   Talsma K, 2018, LEARN INDIVID DIFFER, V61, P136, DOI 10.1016/j.lindif.2017.11.015
   Tan BCY, 2003, IEEE T ENG MANAGE, V50, P64, DOI 10.1109/TEM.2002.808292
   Thomas JP, 2010, J OCCUP ORGAN PSYCH, V83, P275, DOI 10.1348/096317910X502359
   Thompson JA, 2005, J APPL PSYCHOL, V90, P1011, DOI 10.1037/0021-9010.90.5.1011
   Triandis H.C., 1988, PERSONALITY ATTITUDE, P60, DOI [DOI 10.1007/978-1-349-08120-23, 10.1007/978-1-349-08120-2_3, DOI 10.1007/978-1-349-08120-2_3]
   TRIANDIS HC, 1989, PSYCHOL REV, V96, P506, DOI 10.1037/0033-295X.96.3.506
   Triandis HC, 2001, J PERS, V69, P907, DOI 10.1111/1467-6494.696169
   TRIANDIS HC, 1988, INT J INTERCULT REL, V12, P269, DOI 10.1016/0147-1767(88)90019-3
   TRIANDIS HC, 1988, J PERS SOC PSYCHOL, V54, P323, DOI 10.1037/0022-3514.54.2.323
   van de Mortel TF, 2008, AUST J ADV NURS, V25, P40
   van den Berghe A, 2017, SOFTW SYST MODEL, V16, P809, DOI 10.1007/s10270-015-0486-9
   Vroom V. H., 1964, Work and motivation
   Weinberg S.L., 2002, DATA ANAL BEHAV SCI
   ZOHAR D, 1980, J APPL PSYCHOL, V65, P96, DOI 10.1037/0021-9010.65.1.96
   Zohar D, 2004, J APPL PSYCHOL, V89, P322, DOI 10.1037/0021-9010.89.2.322
   Zohar D, 2003, J SAFETY RES, V34, P567, DOI 10.1016/j.jsr.2003.05.006
   Zohar D, 2000, J APPL PSYCHOL, V85, P587, DOI 10.1037//0021-9010.85.4.587
   Zohar D., 2011, Handbook of Occupational Health Psychology, P141
   Zohar D., 2014, The Oxford Handbook of Organizational Climate and Culture, P317, DOI [DOI 10.1093/OXFORDHB/9780199860715.013.0017, 10.1093/oxfordhb/9780199860715.013.0017]
   Zohar D, 2014, J APPL PSYCHOL, V99, P113, DOI 10.1037/a0034096
   Zohar D, 2010, ACCIDENT ANAL PREV, V42, P1517, DOI 10.1016/j.aap.2009.12.019
NR 111
TC 8
Z9 9
U1 3
U2 11
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD NOV 1
PY 2022
VL 48
IS 11
BP 4433
EP 4446
DI 10.1109/TSE.2021.3119721
PG 14
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 6C4JD
UT WOS:000881981800011
DA 2024-07-18
ER

PT J
AU Jafari, AJ
   Costa, DE
   Abdalkareem, R
   Shihab, E
   Tsantalis, N
AF Jafari, Abbas Javan
   Costa, Diego Elias
   Abdalkareem, Rabe
   Shihab, Emad
   Tsantalis, Nikolaos
TI Dependency Smells in JavaScript Projects
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Ecosystems; Guidelines; Semantics; Runtime; Tools; Computer science;
   Computer bugs; Dependency smells; software ecosystems; dependency
   management; npm
ID REUSE
AB Dependency management in modern software development poses many challenges for developers who wish to stay up to date with the latest features and fixes whilst ensuring backwards compatibility. Project maintainers have opted for varied, and sometimes conflicting, approaches for maintaining their dependencies. Opting for unsuitable approaches can introduce bugs and vulnerabilities into the project, introduce breaking changes, cause extraneous installations, and reduce dependency understandability, making it harder for others to contribute effectively. In this paper, we empirically examine evidence of recurring dependency management issues (dependency smells). We look at the commit data for a dataset of 1,146 active JavaScript repositories to catalog, quantify and understand dependency smells. Through a series of surveys with practitioners, we identify and quantify seven dependency smells with varying degrees of popularity and investigate why they are introduced throughout project history. Our findings indicate that dependency smells are prevalent in JavaScript projects with two or more distinct smells appearing in 80 percent of the projects, but they generally infect a minority of a project's dependencies. Our observations show that the number of dependency smells tend to increase over time. Practitioners agree that dependency smells bring about many problems including security threats, bugs, dependency breakage, runtime errors, and other maintenance issues. These smells are generally introduced as developers react to dependency misbehaviour and the shortcomings of the npm ecosystem.
C1 [Jafari, Abbas Javan; Costa, Diego Elias; Shihab, Emad] Concordia Univ, Dept Comp Sci & Software Engn, Data Driven Anal Software DAS Lab, Montreal, PQ H3G 1M8, Canada.
   [Abdalkareem, Rabe] Carleton Univ, Sch Comp Sci, Ottawa, ON K1S 5B6, Canada.
   [Tsantalis, Nikolaos] Concordia Univ, Dept Comp Sci & Software Engn, Montreal, PQ H3G 1M8, Canada.
C3 Concordia University - Canada; Carleton University; Concordia University
   - Canada
RP Jafari, AJ (corresponding author), Concordia Univ, Dept Comp Sci & Software Engn, Data Driven Anal Software DAS Lab, Montreal, PQ H3G 1M8, Canada.
EM a_javanj@encs.concordia.ca; diego.costa@concordia.ca;
   rabe.abdalkareem@carleton.ca; shihab@concordia.ca;
   nikolaos.tsantalis@concordia.ca
RI Abdalkareem, Rabe/IQV-8842-2023; Tsantalis, Nikolaos/AAR-7845-2020;
   Abdalkareem, Rabe/AET-2496-2022; Costa, Diego/Y-7589-2019
OI Tsantalis, Nikolaos/0000-0003-2508-3845; Abdalkareem,
   Rabe/0000-0001-9914-5434; Costa, Diego Elias/0000-0001-7084-2594;
   Shihab, Emad/0000-0003-1285-9878
FU Concordia University's Faculty Research & Ethics Advisory Committee
   [30004729]; Natural Sciences and Engineering Research Council of Canada
   (NSERC)
FX The authors are grateful to the respondents who dedicated their time to
   participate in our surveys. The involvement of human participants in
   this study was approved by Concordia University's Faculty Research &
   Ethics Advisory Committee (summary protocol form number: 30004729). The
   research presented in the paper is funded by a research grant from "The
   Natural Sciences and Engineering Research Council of Canada (NSERC)."
CR Abdalkareem R, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P385, DOI 10.1145/3106237.3106267
   Artho C., 2012, 2012 9th IEEE Working Conference on Mining Software Repositories (MSR 2012), P141, DOI 10.1109/MSR.2012.6224274
   Bogart C, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P109, DOI 10.1145/2950290.2950325
   Bogart Christopher, 2017, How ecosystem cultures differ: Results from a survey on values and practices across 18 software ecosystems
   Burnard P, 1991, Nurse Educ Today, V11, P461, DOI 10.1016/0260-6917(91)90009-Y
   Chatfield D., 2014, FIX VERSIONING ISSUE
   Chinthanet B, 2021, Arxiv, DOI arXiv:1907.03407
   Coghlan N., 2021, VERSION IDENTIFICATI
   Cox J, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P109, DOI 10.1109/ICSE.2015.140
   Decan A, 2021, IEEE T SOFTWARE ENG, V47, P1226, DOI 10.1109/TSE.2019.2918315
   Decan A, 2019, EMPIR SOFTW ENG, V24, P381, DOI 10.1007/s10664-017-9589-y
   Decan A, 2018, IEEE WORK CONF MIN S, P181, DOI 10.1145/3196398.3196401
   Decan A, 2018, PROC IEEE INT CONF S, P404, DOI 10.1109/ICSME.2018.00050
   Decan A, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P2, DOI 10.1109/SANER.2017.7884604
   Derr E, 2017, CCS'17: PROCEEDINGS OF THE 2017 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P2187, DOI 10.1145/3133956.3134059
   Dietrich Jens, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P349, DOI 10.1109/MSR.2019.00061
   Fincher S, 2005, EXPERT SYST, V22, P89, DOI 10.1111/j.1468-0394.2005.00299.x
   Fontana FA, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P609, DOI 10.1109/SANER.2016.84
   GitHub, 2019, STAT OCT J STAT OCT
   GOODMAN LA, 1961, ANN MATH STAT, V32, P148, DOI 10.1214/aoms/1177705148
   Gousios G., 2019, GHTORRENT PROJECT
   Javan Jafari A., 2021, REPLICATION PACKAGE, DOI [10.5281/zenodo.4701497, DOI 10.5281/ZENODO.4701497]
   Javan Jafari A., 2020, DEPENDENCY SNIFFER
   JetBrains, 2021, COD INSP JAVASCRIPT
   Kalliamvakou E., 2014, P 11 WORKING C MININ, P92, DOI DOI 10.1145/2597073.2597074
   Kula Raula Gaikovina, 2018, Empirical Software Engineering, V23, P384, DOI 10.1007/s10664-017-9521-5
   Lehnardt J., 2020, GREENKEEPER
   Li J., 2019, DEPCHECK CHECK YOUR
   Libraries.io, 2020, NPM LIBR IO
   LIM WC, 1994, IEEE SOFTWARE, V11, P23, DOI 10.1109/52.311048
   MacDonald Fiona., 2018, How a Programmer Nearly Broke The Internet by Deleting Just 11 Lines of Code
   Mohagheghi P, 2004, PROC INT CONF SOFTW, P282, DOI 10.1109/ICSE.2004.1317450
   npm, 2017, NPM BLOG NEW PACK MO
   npm, 2021, NPM INST DOC
   npm, 2021, SEMANTIC VERSIONING
   npm documentation, 2019, NPM PACK LOCK JSON N
   npm documentation, 2019, NPM PACK JSOON NPM D
   Opdebeeck R, 2020, IEEE INT WORK C SO, P238, DOI 10.1109/SCAM51674.2020.00032
   Oxley Tim., 2014, Semver: Tilde and Caret
   Preston-Werner Tom, 2019, Semantic versioning 2.0
   PyPA, 2021, PIP DOC
   Raemaekers S, 2014, IEEE INT WORK C SO, P215, DOI 10.1109/SCAM.2014.30
   Rahman A, 2019, PROC INT CONF SOFTW, P164, DOI 10.1109/ICSE.2019.00033
   Rust-lang, 2018, RUST ED GUID
   Sharma T, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P189, DOI [10.1109/MSR.2016.028, 10.1145/2901739.2901761]
   Shaw A., 2020, DAVID DM
   Singer Janice, 2008, Guide to Advanced Empirical Software Engineering, P9
   Soto-Valero C, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-020-09914-8
   Wittern E, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P351, DOI [10.1145/2901739.2901743, 10.1109/MSR.2016.043]
   Yarn, 2020, DOC J YARN
   Zimmermann M, 2019, PROCEEDINGS OF THE 28TH USENIX SECURITY SYMPOSIUM, P995
NR 51
TC 17
Z9 18
U1 2
U2 13
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD OCT 1
PY 2022
VL 48
IS 10
BP 3790
EP 3807
DI 10.1109/TSE.2021.3106247
PG 18
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 5L3GA
UT WOS:000870301800005
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Pashchenko, I
   Plate, H
   Ponta, SE
   Sabetta, A
   Massacci, F
AF Pashchenko, Ivan
   Plate, Henrik
   Ponta, Serena Elisa
   Sabetta, Antonino
   Massacci, Fabio
TI Vuln4Real: A Methodology for Counting Actually Vulnerable Dependencies
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Libraries; Ecosystems; Security; Open source software; Java; Tools;
   Vulnerable dependency; free open source software; mining software
   repositories
AB Vulnerable dependencies are a known problem in today's free open-source software ecosystems because FOSS libraries are highly interconnected, and developers do not always update their dependencies. Our paper proposes Vuln4Real, the methodology for counting actually vulnerable dependencies, that addresses the over-inflation problem of academic and industrial approaches for reporting vulnerable dependencies in FOSS software, and therefore, caters to the needs of industrial practice for correct allocation of development and audit resources. To understand the industrial impact of a more precise methodology, we considered the 500 most popular FOSS Java libraries used by SAP in its own software. Our analysis included 25767 distinct library instances in Maven. We found that the proposed methodology has visible impacts on both ecosystem view and the individual library developer view of the situation of software dependencies: Vuln4Real significantly reduces the number of false alerts for deployed code (dependencies wrongly flagged as vulnerable), provides meaningful insights on the exposure to third-parties (and hence vulnerabilities) of a library, and automatically predicts when dependency maintenance starts lagging, so it may not receive updates for arising issues.
C1 [Pashchenko, Ivan; Massacci, Fabio] Univ Trento, I-38123 Trento, TN, Italy.
   [Plate, Henrik; Ponta, Serena Elisa; Sabetta, Antonino] SAP Secur Res, F-06250 Mougins, France.
   [Massacci, Fabio] Vrije Univ, NL-1081 HV Amsterdam, Netherlands.
C3 University of Trento; Vrije Universiteit Amsterdam
RP Pashchenko, I (corresponding author), Univ Trento, I-38123 Trento, TN, Italy.
EM ivan.pashchenko@unitn.it; henrik.plate@sap.com; serena.ponta@sap.com;
   antonino.sabetta@sap.com; Fabio.Massacci@ieee.org
RI Pashchenko, Ivan/L-7264-2018
OI Pashchenko, Ivan/0000-0001-8202-576X; Sabetta,
   Antonino/0000-0003-3506-8374; Plate, Henrik/0000-0001-8862-3488
FU European Union [830929]
FX We would like to thank A.Brucker and P.Tonella for their insightful
   comments on early drafts of this work. This work was partly funded by
   the European Union under the H2020 Programme under grant n. 830929
   (CyberSec4Europe).
CR Alqahtani SS, 2016, SCI COMPUT PROGRAM, V121, P153, DOI 10.1016/j.scico.2016.01.005
   Brown R.G., 1959, Statistical forecasting for inventory control
   Cadariu M, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P516, DOI 10.1109/SANER.2015.7081868
   Izquierdo JLC, 2017, 2017 ACM/IEEE 20TH INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS 2017), P292, DOI 10.1109/MODELS.2017.19
   Cavusoglu H., 2005, Fourth Workshop on the Economics of Information Security, P1
   Coelho J, 2018, PROCEEDINGS OF THE 12TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT (ESEM 2018), DOI 10.1145/3239235.3240501
   Coelho J, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P186, DOI 10.1145/3106237.3106246
   Cox J, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P109, DOI 10.1109/ICSE.2015.140
   Dashevskyi S, 2019, IEEE T SOFTWARE ENG, V45, P945, DOI 10.1109/TSE.2018.2816033
   Goode Durham, 2014, Scaling Mercurial at Facebook
   Harrys R. B., 2014, LARGEST GIT REPO PLA
   Hejderup J, 2015, In dependencies we trust: How vulnerable are dependencies in software modules?
   Huang J, 2019, 2019 4TH IEEE EUROPEAN SYMPOSIUM ON SECURITY AND PRIVACY (EUROS&P), P15, DOI 10.1109/EuroSP.2019.00012
   Jedlitschka A., 2008, Guide to advanced empirical software engineering, P201, DOI DOI 10.1007/978-1-84800-044-5_8
   Khondhu Jymit., 2013, Open Source Software: Quality Verification, volume 404 of IFIP Advances in Information and Communication Technology, V404, P61
   Kikas R, 2017, IEEE WORK CONF MIN S, P102, DOI 10.1109/MSR.2017.55
   Kula RG, 2018, EMPIR SOFTW ENG, V23, P384, DOI 10.1007/s10664-017-9521-5
   Lauinger T, 2017, 24TH ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2017), DOI 10.14722/ndss.2017.23414
   Long S.J., 2015, OWASP DEPENDENCY CHE
   Mens T., 2014, P SAT TOSE
   Merkel D., 2014, LINUX J, V2014, P2, DOI DOI 10.5555/2600239.2600241
   Nguyen VH, 2016, EMPIR SOFTW ENG, V21, P2268, DOI 10.1007/s10664-015-9408-2
   Nguyen VietHung., 2013, P 8 ACM SIGSAC S INF, P493
   Pashchenko I, 2020, CCS '20: PROCEEDINGS OF THE 2020 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P1513, DOI 10.1145/3372297.3417232
   Pashchenko I, 2018, PROCEEDINGS OF THE 12TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT (ESEM 2018), DOI 10.1145/3239235.3268920
   Pittenger Mike, 2016, Tech. Rep
   Plate H, 2015, PROC IEEE INT CONF S, P411, DOI 10.1109/ICSM.2015.7332492
   Ponta SE, 2018, PROC IEEE INT CONF S, P449, DOI 10.1109/ICSME.2018.00054
   Potvin R, 2016, COMMUN ACM, V59, P78, DOI 10.1145/2854146
   Reifer DJ, 2003, IEEE SOFTWARE, V20, P94, DOI 10.1109/MS.2003.1231161
   Sajnani H, 2014, PROC IEEE INT CONF S, P231, DOI 10.1109/ICSME.2014.45
   Williams J., 2012, The unfortunate reality of insecure libraries, P1
   Wittern E, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P351, DOI [10.1145/2901739.2901743, 10.1109/MSR.2016.043]
   Zerouali A, 2019, J SOFTW-EVOL PROC, V31, DOI 10.1002/smr.2157
   Zerouali A, 2019, 2019 IEEE 26TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER), P619, DOI [10.1109/saner.2019.8667984, 10.1109/SANER.2019.8667984]
NR 35
TC 18
Z9 20
U1 0
U2 2
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAY 1
PY 2022
VL 48
IS 5
BP 1592
EP 1609
DI 10.1109/TSE.2020.3025443
PG 18
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 1I8CJ
UT WOS:000797454000009
OA Green Published
DA 2024-07-18
ER

PT J
AU Bagherzadeh, M
   Kahani, N
   Jahed, K
   Dingel, J
AF Bagherzadeh, Mojtaba
   Kahani, Nafiseh
   Jahed, Karim
   Dingel, Juergen
TI Execution of Partial State Machine Models
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Tools; Analytical models; Unified modeling language; Context modeling;
   Static analysis; Real-time systems; Debugging; MDD; model-level
   debugging; partial models; incomplete models; model execution
ID UNCERTAINTY
AB The iterative and incremental nature of software development using models typically makes a model of a system incomplete (i.e., partial) until a more advanced and complete stage of development is reached. Existing model execution approaches (interpretation of models or code generation) do not support the execution of partial models. Supporting the execution of partial models at early stages of software development allows early detection of defects, which can be fixed more easily and at lower cost. This paper proposes a conceptual framework for the execution of partial models, which consists of three steps: static analysis, automatic refinement, and input-driven execution. First, a static analysis that respects the execution semantics of models is applied to detect problematic elements of models that cause problems for the execution. Second, using model transformation techniques, the models are refined automatically, mainly by adding decision points where missing information can be supplied. Third, refined models are executed, and when the execution reaches the decision points, it uses inputs obtained either interactively or by a script that captures how to deal with partial elements. We created an execution engine called PMExec for the execution of partial models of UML-RT (i.e., a modeling language for the development of soft real-time systems) that embodies our proposed framework. We evaluated PMExec based on several use-cases that show that the static analysis, refinement, and application of user input can be carried out with reasonable performance, and that the overhead of approach, which is mostly due to the refinement and the increase in model complexity it causes, is manageable. We also discuss the properties of the refinement formally, and show how the refinement preserves the original behaviors of the model.
C1 [Bagherzadeh, Mojtaba; Kahani, Nafiseh] Univ Ottawa, Sch EECS, Ottawa, ON K1N 6N5, Canada.
   [Jahed, Karim; Dingel, Juergen] Queens Univ, Sch Comp, Kingston, ON K7L 3N6, Canada.
C3 University of Ottawa; Queens University - Canada
RP Bagherzadeh, M (corresponding author), Univ Ottawa, Sch EECS, Ottawa, ON K1N 6N5, Canada.
EM m.bagherzadeh@uottawa.ca; nkahani@uottawa.ca; japed@cs.queensu.ca;
   dingel@cs.queensu.ca
OI BAGHERZADEH, MOJTABA/0000-0002-0253-671X
FU Natural Sciences and Engineering Research Council of Canada (NSERC);
   Zeligsoft Ltd; Malina Software Corp.; Cmind Inc.
FX This work has been supported by Zeligsoft Ltd, Malina Software Corp.,
   Cmind Inc., and the Natural Sciences and Engineering Research Council of
   Canada (NSERC).
CR Ahmadi R., 2016, EDUSYMPOSS4MDE MODEL, P37
   Albaum G, 1997, J MARKET RES SOC, V39, P331
   [Anonymous], 2014, P 8 ACMIEEE INT S EM
   Bagherzadeh M., 2019, PARTAIL MODEL DEBUGG
   Bagherzadeh M., 2019, THESIS QUEENS U, P1
   Bagherzadeh M, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P1178, DOI 10.1109/ASE.2019.00131
   Bagherzadeh M, 2018, PROC IEEE ACM INT C, P97, DOI 10.1145/3183440.3183473
   Bagherzadeh M, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P419, DOI 10.1145/3106237.3106278
   Baker P, 2005, LECT NOTES COMPUT SC, V3713, P476, DOI 10.1007/11557432_36
   Balasubramanian J, 2009, 15TH IEEE REAL-TIME AND EMBEDDED TECHNOLOGY AND APPLICATION SYMPOSIUM: RTAS 2009, PROCEEDINGS, P118, DOI 10.1109/RTAS.2009.36
   Boehm B., 2005, Found Empirical Softw. Eng., Legacy Victor R Baxili, V426, P426
   BOEHM BW, 1988, IEEE T SOFTWARE ENG, V14, P1462, DOI 10.1109/32.6191
   Ciccozzi F, 2019, SOFTW SYST MODEL, V18, P2313, DOI 10.1007/s10270-018-0675-4
   Colby C, 1998, ACM SIGPLAN NOTICES, V33, P345, DOI 10.1145/277652.277754
   Dagenais B, 2008, ACM SIGPLAN NOTICES, V43, P313, DOI 10.1145/1449955.1449790
   Das N, 2016, 19TH ACM/IEEE INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS'16), P36, DOI 10.1145/2976767.2976781
   Dawes D. A. Beman, 2019, BOOST C LIB
   Dohmen LAJ, 2002, LECT NOTES COMPUT SC, V2559, P475
   Eclipse foundation, 2019, ECL PAP REAL TIM PAP
   Eclipse foundation, 2019, ECL ETRICE REAL TIM
   Eramo R, 2015, P SLE 15, P49, DOI [10.1145/2814251.2814259, DOI 10.1145/2814251.2814259]
   Esterel Technologies, 2016, SCADE SUIT
   Famelis M, 2019, SOFTW SYST MODEL, V18, P1249, DOI 10.1007/s10270-017-0594-9
   Famelis M, 2013, LECT NOTES COMPUT SC, V8107, P673, DOI 10.1007/978-3-642-41533-3_41
   Famelis M, 2013, 2013 5TH INTERNATIONAL WORKSHOP ON MODELING IN SOFTWARE ENGINEERING (MISE), P7, DOI 10.1109/MiSE.2013.6595289
   Famelis M, 2012, PROC INT CONF SOFTW, P573, DOI 10.1109/ICSE.2012.6227159
   Gery E., 2002, Integrated Formal Methods. Third International Conference, IFM 2002. Proceedings (Lecture Notes in Computer Science Vol.2335), P1
   Graf P, 2006, P IEEE RAP SYST PROT, P3, DOI 10.1109/RSP.2006.15
   GRUMBERG O, 1994, ACM T PROGR LANG SYS, V16, P843, DOI 10.1145/177492.177725
   Guerraoui R, 1997, COMPUTER, V30, P68, DOI 10.1109/2.585156
   Haberl W., 2010, Proceedings of the 2010 IEEE 10th International Conference on Computer and Information Technology (CIT 2010), P1887, DOI 10.1109/CIT.2010.323
   HAREL D, 1987, SCI COMPUT PROGRAM, V8, P231, DOI 10.1016/0167-6423(87)90035-9
   HCL, 2019, HCL REALTIME SOFTW T
   Heijstek W, 2009, 2009 35TH EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS, PROCEEDINGS, P113, DOI 10.1109/SEAA.2009.70
   Hili N, 2020, SOFTW SYST MODEL, V19, P959, DOI 10.1007/s10270-020-00780-y
   Hojaji F, 2019, SOFTW SYST MODEL, V18, P3461, DOI 10.1007/s10270-019-00724-1
   Hua JR, 2017, SPIN'17: PROCEEDINGS OF THE 24TH ACM SIGSOFT INTERNATIONAL SPIN SYMPOSIUM ON MODEL CHECKING OF SOFTWARE, P162, DOI 10.1145/3092282.3092285
   Hutchinson J, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P471, DOI 10.1145/1985793.1985858
   IBM, 2016, IBM RSARTE
   ITEMIS AG, 2016, YAKINDU STATECHART T
   Iyenghar P., 2010, P 10 ACM INT C EMB S, P69, DOI DOI 10.1145/1879021
   Iyenghar P., 2017, MODEL BASED DEBUGGIN, P107, DOI [10.1007/978-1-4614-2266-2_5, DOI 10.1007/978-1-4614-2266-2_5]
   Kahani N, 2019, SOFTW SYST MODEL, V18, P2361, DOI 10.1007/s10270-018-0665-6
   Kahani N, 2017, IEEE ACM INT WORKS M, P12, DOI 10.1109/MiSE.2017.4
   Kolovos DS, 2008, LECT NOTES COMPUT SC, V5063, P46, DOI 10.1007/978-3-540-69927-9_4
   Koppler R, 1997, SOFTWARE PRACT EXPER, V27, P637, DOI 10.1002/(SICI)1097-024X(199706)27:6<637::AID-SPE99>3.0.CO;2-3
   Liebel G, 2018, SOFTW SYST MODEL, V17, P91, DOI 10.1007/s10270-016-0523-3
   Liebel G, 2014, LECT NOTES COMPUT SC, V8767, P166, DOI 10.1007/978-3-319-11653-2_11
   Lynch N. A., 1996, DISTRIBUTED ALGORITH
   Magee J., 1999, STATE MODELS JAVA PR
   Melo LTC, 2018, P ACM PROGRAM LANG, V2, DOI 10.1145/3158117
   Mohagheghi P, 2008, LECT NOTES COMPUT SC, V5095, P432, DOI 10.1007/978-3-540-69100-6_31
   Mohagheghi P, 2013, EMPIR SOFTW ENG, V18, P89, DOI 10.1007/s10664-012-9196-x
   Moonen L, 2001, EIGHTH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P13, DOI 10.1109/WCRE.2001.957806
   Object management group, 2018, ACT LANG FDN UML SPE
   Ogunyomi B, 2019, SOFTW SYST MODEL, V18, P367, DOI 10.1007/s10270-018-0666-5
   Parr T, 2013, DEFINITIVE ANTLR 4 R, P1
   Plotkin GD, 2004, J LOGIC ALGEBR PROGR, V60-1, P17, DOI 10.1016/j.jlap.2004.03.002
   Posse E, 2016, SOFTW SYST MODEL, V15, P179, DOI 10.1007/s10270-014-0399-z
   SALAY R, 2015, J OBJECT TECHNOL, V14, pNIL70
   Salay R, 2013, REQUIR ENG, V18, P107, DOI 10.1007/s00766-013-0170-y
   Salay R, 2012, LECT NOTES COMPUT SC, V7212, P224, DOI 10.1007/978-3-642-28872-2_16
   Samimi Hesam, 2013, P 2013 INT S SOFTWAR, P246
   Schmidt DC, 2006, COMPUTER, V39, P25, DOI 10.1109/MC.2006.58
   Selic B, 2012, SOFTW SYST MODEL, V11, P513, DOI 10.1007/s10270-012-0261-0
   Selic Bran, 1994, REAL TIME OBJECT ORI, V2
   Semeráth O, 2017, LECT NOTES COMPUT SC, V10374, P138, DOI 10.1007/978-3-319-61473-1_10
   Sen Sagar, 2012, Theory and Practice of Model Transformations. Proceedings 5th International Conference, ICMT 2012, P24, DOI 10.1007/978-3-642-30476-7_2
   Sen S., 2007, P 17 INT C APPL DECL
   Solar-Lezama A, 2005, ACM SIGPLAN NOTICES, V40, P281, DOI 10.1145/1064978.1065045
   Solar-Lezama Armando, 2013, International Journal on Software Tools for Technology Transfer, V15, P475, DOI 10.1007/s10009-012-0249-7
   Spadini D, 2017, IEEE WORK CONF MIN S, P402, DOI 10.1109/MSR.2017.61
   Svenningsson J, 2014, LECT NOTES COMPUT SC, V8411, P385
   SWARTOUT W, 1982, COMMUN ACM, V25, P438, DOI 10.1145/358557.358572
   Thane H., 2003, P INT PARALLEL DISTR, P1
   The MathWorks Inc., 2016, STAT MATLAB SIM
   Torchiano M, 2013, J SYST SOFTWARE, V86, P2110, DOI 10.1016/j.jss.2013.03.084
   VANMEGEN R, 1995, SOFTWARE QUAL J, V4, P247, DOI 10.1007/BF00402646
   von der Beeck M, 2006, LECT NOTES COMPUT SC, V4199, P768
   Whittle J, 2014, IEEE SOFTWARE, V31, P79, DOI 10.1109/MS.2013.65
   Whittle J, 2013, LECT NOTES COMPUT SC, V8107, P1, DOI 10.1007/978-3-642-41533-3_1
   xtUML.org, 2016, XTUML EXECUTABLE TRA
   Zhang M., 2017, Signal Processing Advances in Wireless Communications (SPAWC), 2017 IEEE 18th International Workshop on, P1
   Zhang M, 2019, SOFTW SYST MODEL, V18, P1379, DOI 10.1007/s10270-017-0609-6
   Zhong H, 2017, IEEE INT CONF AUTOM, P671, DOI 10.1109/ASE.2017.8115677
NR 85
TC 1
Z9 1
U1 0
U2 4
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAR 1
PY 2022
VL 48
IS 3
BP 951
EP 972
DI 10.1109/TSE.2020.3008850
PG 22
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA ZU6ZO
UT WOS:000769989900014
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Chen, X
   Chen, CY
   Zhang, D
   Xing, ZC
AF Chen, Xiang
   Chen, Chunyang
   Zhang, Dun
   Xing, Zhenchang
TI SEthesaurus: WordNet in Software Engineering
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Thesauri; Software engineering; Encyclopedias; Electronic publishing;
   Internet; Natural language processing; Software-specific thesaurus;
   natural language processing; morphological form; word embedding
ID AGREEMENT
AB Informal discussions on social platforms (e.g., Stack Overflow, CodeProject) have accumulated a large body of programming knowledge in the form of natural language text. Natural language process (NLP) techniques can be utilized to harvest this knowledge base for software engineering tasks. However, consistent vocabulary for a concept is essential to make an effective use of these NLP techniques. Unfortunately, the same concepts are often intentionally or accidentally mentioned in many different morphological forms (such as abbreviations, synonyms and misspellings) in informal discussions. Existing techniques to deal with such morphological forms are either designed for general English or mainly resort to domain-specific lexical rules. A thesaurus, which contains software-specific terms and commonly-used morphological forms, is desirable to perform normalization for software engineering text. However, constructing this thesaurus in a manual way is a challenge task. In this paper, we propose an automatic unsupervised approach to build such a thesaurus. In particular, we first identify software-specific terms by utilizing a software-specific corpus (e.g., Stack Overflow) and a general corpus (e.g., Wikipedia). Then we infer morphological forms of software-specific terms by combining distributed word semantics, domain-specific lexical rules and transformations. Finally, we perform graph analysis on morphological relations. We evaluate the coverage and accuracy of our constructed thesaurus against community-cumulated lists of software-specific terms, abbreviations and synonyms. We also manually examine the correctness of the identified abbreviations and synonyms in our thesaurus. We demonstrate the usefulness of our constructed thesaurus by developing three applications and also verify the generality of our approach in constructing thesauruses from data sources in other domains.
C1 [Chen, Xiang; Zhang, Dun] Nantong Univ, Sch Informat Sci & Technol, Nantong 226007, Jiangsu, Peoples R China.
   [Chen, Chunyang] Monash Univ, Fac Informat Technol, Clayton, Vic 3800, Australia.
   [Xing, Zhenchang] Australian Natl Univ, Coll Engn & Comp Sci, Canberra, ACT 0200, Australia.
C3 Nantong University; Monash University; Australian National University
RP Chen, CY (corresponding author), Monash Univ, Fac Informat Technol, Clayton, Vic 3800, Australia.
EM xchencs@ntu.edu.cn; chunyang.chen@monash.edu; dunnzhang0@gmail.com;
   zhenchang.xing@anu.edu.au
RI Chen, Xiang/AAG-3663-2019
OI Chen, Xiang/0000-0002-1180-3891; Chen, Chunyang/0000-0003-2011-9618
FU Monash University; National Natural Science Foundation of China
   [61702041, 61602267, 61872263, 61202006]; Jiangsu Government Scholarship
   for Overseas Studies
FX This work is partially supported by the seed grant from Monash
   University, National Natural Science Foundation of China (Grant Nos.
   61702041, 61602267, 61872263, 61202006), Jiangsu Government Scholarship
   for Overseas Studies. Xiang Chen and Chunyang Chen have contributed
   equally for this work and they are co-first authors.
CR [Anonymous], 2007, AAAI
   [Anonymous], 2015, P 2015 C N AM CHAPT, DOI 10.3115/v1/N15-1186
   Beyer S, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P430, DOI [10.1109/MSR.2016.051, 10.1145/2901739.2901750]
   Beyer S, 2015, INT C PROGRAM COMPRE, P94, DOI 10.1109/ICPC.2015.18
   Bojanowski P., 2017, Transactions of the Association for Computational Linguistics, V5, P135, DOI DOI 10.1162/TACLA00051
   Botha JA, 2014, PR MACH LEARN RES, V32, P1899
   Chen CH, 2016, LECT NOTES COMPUT SC, V10036, P14, DOI 10.1007/978-3-319-51969-2_2
   Chen CW, 2018, IEEE INT SYMP CIRC S, DOI 10.1109/ISCAS.2018.8351436
   Chen CY, 2021, IEEE T SOFTWARE ENG, V47, P432, DOI 10.1109/TSE.2019.2896123
   Chen CY, 2019, EMPIR SOFTW ENG, V24, P1155, DOI 10.1007/s10664-018-9657-y
   Chen CY, 2017, PROC INT CONF SOFTW, P450, DOI 10.1109/ICSE.2017.48
   Chen CY, 2016, PROC IEEE INT CONF S, P356, DOI 10.1109/ICSME.2016.17
   Chen CY, 2016, IEEE INT CONF AUTOM, P834, DOI 10.1145/2970276.2970290
   Chen CY, 2016, P INT COMP SOFTW APP, P83, DOI 10.1109/COMPSAC.2016.210
   Chen CY, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P338, DOI 10.1109/SANER.2016.21
   Chen GB, 2016, IEEE INT CONF AUTOM, P744, DOI 10.1145/2970276.2970317
   Cheng CL, 2017, 2017 12TH INTERNATIONAL CONFERENCE ON INTELLIGENT SYSTEMS AND KNOWLEDGE ENGINEERING (IEEE ISKE), DOI 10.1109/ULTSYM.2017.8091659
   COHEN J, 1960, EDUC PSYCHOL MEAS, V20, P37, DOI 10.1177/001316446002000104
   Corazza A, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P233, DOI 10.1109/ICSM.2012.6405277
   Creutz M, 2005, UNSUPERVISED MORPHEM
   DAMERAU FJ, 1964, COMMUN ACM, V7, P171, DOI 10.1145/363958.363994
   Dit B, 2011, CONF PROC INT SYMP C, P11, DOI 10.1109/ICPC.2011.47
   Enslen E, 2009, 2009 6TH IEEE INTERNATIONAL WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES, P71, DOI 10.1109/MSR.2009.5069482
   FINKELSTEIN ACW, 1994, IEEE T SOFTWARE ENG, V20, P569, DOI 10.1109/32.310667
   Gegick Michael, 2010, Proceedings of the 2010 7th IEEE Working Conference on Mining Software Repositories (MSR 2010), P11, DOI 10.1109/MSR.2010.5463340
   Guerrouj L., 2012, 2012 19th Working Conference on Reverse Engineering (WCRE), P103, DOI 10.1109/WCRE.2012.20
   Hliaoutakis A, 2006, INT J SEMANT WEB INF, V2, P55, DOI 10.4018/jswis.2006070104
   Howard MJ, 2013, IEEE WORK CONF MIN S, P377, DOI 10.1109/MSR.2013.6624052
   Huang Y, 2018, IEEE INT CONF AUTOM, P214, DOI 10.1145/3238147.3238208
   LANDIS JR, 1977, BIOMETRICS, V33, P159, DOI 10.2307/2529310
   Lawrie D., 2011, 2011 IEEE 27th International Conference on Software Maintenance, P113, DOI 10.1109/ICSM.2011.6080778
   Lawrie Dawn, 2010, Proceedings 17th Working Conference on Reverse Engineering (WCRE 2010), P3, DOI 10.1109/WCRE.2010.10
   Lawrie D, 2007, SEVENTH IEEE INTERNATIONAL WORKING CONFERENCE ON SOURCE CODE ANALYSIS AND MANIPULATION, PROCEEDINGS, P213, DOI 10.1109/SCAM.2007.17
   Levenshtein V. I., 1966, SOV PHYS DOKL, V10, P707
   Linstead E., 2007, P 22 IEEE ACM INT C, P461, DOI [10.1145/1321631.1321709, DOI 10.1145/1321631.1321709]
   Liu HF, 2006, BIOINFORMATICS, V22, P103, DOI 10.1093/bioinformatics/bti749
   Luong Thang, 2013, P 17 C COMP NAT LANG, P104
   Mamykina L, 2011, 29TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, P2857
   Mandala R., 1998, P THEWORKSHOP USAGE, P31
   Manning Christopher D., 2008, INTRO INFORM RETRIEV
   Mikolov T., 2013, ADV NEURAL INFORM PR, V26, P3111, DOI DOI 10.5555/2999792.2999959
   Mikolov T., 2013, INT C LEARN REPR SCO, DOI 10.48550/ARXIV.1301.3781
   MILLER GA, 1995, COMMUN ACM, V38, P39, DOI 10.1145/219717.219748
   Murphy-Hill E., 2008, P 2 WORKSH REF TOOLS, P7
   Nassif M., 2018, IEEE T SOFTW ENG, DOI [10.1109/TSE.2018-2836450, DOI 10.1109/TSE.2018-2836450]
   Park Y, 2008, INTERSPEECH 2008: 9TH ANNUAL CONFERENCE OF THE INTERNATIONAL SPEECH COMMUNICATION ASSOCIATION 2008, VOLS 1-5, P2070
   Petrosyan G, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P869, DOI 10.1109/ICSE.2015.97
   Pollock L, 2009, SOFTWARE ENG, P94
   Ponzanelli L, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P1295, DOI 10.1109/ICSE.2013.6606701
   Ponzetto SP, 2007, J ARTIF INTELL RES, V30, P181, DOI 10.1613/jair.2308
   PORTER MF, 1980, PROGRAM-AUTOM LIBR, V14, P130, DOI 10.1108/eb046814
   Sa Gao, 2019, 2019 IEEE 26th International Conference on Software Analysis, Evolution and Reengineering (SANER). Proceedings, P414, DOI 10.1109/SANER.2019.8667994
   Shepherd D., 2006, Proc. of the International Conference on Aspect-Oriented Software Development (AOSD'06), P3
   Shepherd David, 2007, P 6 INT C ASP OR SOF, P212
   Singh R., 2013, ELEMENTS SURVEY SAMP, V15
   Sridhara G, 2008, INT C PROGRAM COMPRE, P123, DOI 10.1109/ICPC.2008.18
   Subramanian S, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P643, DOI 10.1145/2568225.2568313
   Tian Y, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE COMPANION 2014), P568, DOI 10.1145/2591062.2591071
   Tian Y, 2014, 2014 SOFTWARE EVOLUTION WEEK - IEEE CONFERENCE ON SOFTWARE MAINTENANCE, REENGINEERING, AND REVERSE ENGINEERING (CSMR-WCRE), P44, DOI 10.1109/CSMR-WCRE.2014.6747213
   Treude C, 2016, PROC INT CONF SOFTW, P392, DOI 10.1145/2884781.2884800
   Wang SW, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P604, DOI 10.1109/ICSM.2012.6405332
   Wang X, 2019, EMPIR SOFTW ENG, V24, P3514, DOI 10.1007/s10664-019-09702-z
   Xu BW, 2016, IEEE INT CONF AUTOM, P51, DOI 10.1145/2970276.2970357
   Yang JQ, 2014, EMPIR SOFTW ENG, V19, P1856, DOI 10.1007/s10664-013-9264-x
   Ye DH, 2016, PROC IEEE INT CONF S, P389, DOI 10.1109/ICSME.2016.11
   Ye DH, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P90, DOI 10.1109/SANER.2016.10
   Ye X, 2016, PROC INT CONF SOFTW, P404, DOI 10.1145/2884781.2884862
   Zou YZ, 2015, IEEE INT CONF AUTOM, P1, DOI 10.1109/ASE.2015.24
NR 68
TC 16
Z9 18
U1 2
U2 12
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD SEPT 1
PY 2021
VL 47
IS 9
BP 1960
EP 1979
DI 10.1109/TSE.2019.2940439
PG 20
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA UR3QY
UT WOS:000696667700012
DA 2024-07-18
ER

PT J
AU Santos, A
   Vegas, S
   Oivo, M
   Juristo, N
AF Santos, Adrian
   Vegas, Sira
   Oivo, Markku
   Juristo, Natalia
TI A Procedure and Guidelines for Analyzing Groups of Software Engineering
   Replications
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Guidelines; Reliability; Aggregates; Buildings; Data analysis;
   Biological system modeling; Software engineering; Replication;
   statistical analysis; aggregated data; individual participant data;
   narrative synthesis
ID INDIVIDUAL PARTICIPANT DATA; MUSCULOSKELETAL PHYSIOTHERAPY RESEARCH;
   MULTICENTER TRIALS; SYSTEMATIC REVIEWS; MULTILEVEL MODELS;
   CLINICAL-TRIALS; PATIENT-LEVEL; EFFECT SIZE; STATISTICAL PRINCIPLES;
   QUALITATIVE RESEARCH
AB Context: Researchers from different groups and institutions are collaborating on building groups of experiments by means of replication (i.e., conducting groups of replications). Disparate aggregation techniques are being applied to analyze groups of replications. The application of unsuitable techniques to aggregate replication results may undermine the potential of groups of replications to provide in-depth insights from experiment results. Objectives: Provide an analysis procedure with a set of embedded guidelines to aggregate software engineering (SE) replication results. Method: We compare the characteristics of groups of replications for SE and other mature experimental disciplines such as medicine and pharmacology. In view of their differences, the limitations with regard to the joint data analysis of groups of SE replications and the guidelines provided in mature experimental disciplines to analyze groups of replications, we build an analysis procedure with a set of embedded guidelines specifically tailored to the analysis of groups of SE replications. We apply the proposed analysis procedure to a representative group of SE replications to illustrate its use. Results: All the information contained within the raw data should be leveraged during the aggregation of replication results. The analysis procedure that we propose encourages the use of stratified individual participant data and aggregated data in tandem to analyze groups of SE replications. Conclusion: The aggregation techniques used to analyze groups of replications should be justified in research articles. This will increase the reliability and transparency of joint results. The proposed guidelines should ease this endeavor.
C1 [Santos, Adrian; Oivo, Markku] ITEE Univ Oulu, M3S M Grp, POB 3000, Oulu 90014, Finland.
   [Vegas, Sira; Juristo, Natalia] Univ Politecn Madrid, Escuela Tecn Super Ingn Informat, Campus Montegancedo S-N, Madrid 28660, Spain.
C3 Universidad Politecnica de Madrid
RP Santos, A (corresponding author), ITEE Univ Oulu, M3S M Grp, POB 3000, Oulu 90014, Finland.
EM adrian.santos.parrilla@oulu.fi; svegas@fi.upm.es; markku.oivo@oulu.fi;
   natalia@fi.upm.es
RI Vegas, Sira/R-6742-2018
FU Spanish Ministry of Science, Innovation and Universities research grant
   [PGC2018-097265-B-I00]
FX This work was partially funded by Spanish Ministry of Science,
   Innovation and Universities research grant PGC2018-097265-B-I00.
CR Abo-Zaid G, 2013, J CLIN EPIDEMIOL, V66, P865, DOI 10.1016/j.jclinepi.2012.12.017
   Abrahao S, 2013, IEEE T SOFTWARE ENG, V39, P327, DOI 10.1109/TSE.2012.27
   Amann S., 2013, SOFTWARE ENG, P121
   Anello C, 2005, STAT METHODS MED RES, V14, P303, DOI 10.1191/0962280205sm398oa
   [Anonymous], 2000, METAANALYSIS DECISIO
   [Anonymous], 2002, METAANALYSIS CONTROL
   [Anonymous], 2013, APPL METAANALYSIS R
   Basili VR, 1999, IEEE T SOFTWARE ENG, V25, P456, DOI 10.1109/32.799939
   Bell A, 2015, POLIT SCI RES METH, V3, P133, DOI 10.1017/psrm.2014.7
   Berlin JA, 2002, STAT MED, V21, P371, DOI 10.1002/sim.1023
   BERO L, 1995, JAMA-J AM MED ASSOC, V274, P1935, DOI 10.1001/jama.274.24.1935
   Bezerra RMM, 2015, INT SYMP EMP SOFTWAR, P132, DOI 10.1109/ESEM.2015.7321213
   Biondi-Zoccai G., 2016, UMBRELLA REV EVIDENC
   Borenstein M., 2009, INTRO METAANALYSIS
   Brown H., 2014, Applied Mixed Models in Medicine
   Burke DL, 2017, STAT MED, V36, P855, DOI 10.1002/sim.7141
   Canfora G, 2005, J SYST SOFTWARE, V77, P113, DOI 10.1016/j.jss.2004.11.007
   Chu R, 2011, BMC MED RES METHODOL, V11, DOI 10.1186/1471-2288-11-21
   Clark TS, 2015, POLIT SCI RES METH, V3, P399, DOI 10.1017/psrm.2014.32
   COHEN J, 1994, AM PSYCHOL, V49, P997, DOI 10.1037/0003-066X.50.12.1103
   Cooper H, 2009, PSYCHOL METHODS, V14, P165, DOI 10.1037/a0015565
   Crawley M. J., 2012, The R Book, DOI 10.1002/9781118448908
   Cruzes DS, 2011, INFORM SOFTWARE TECH, V53, P440, DOI 10.1016/j.infsof.2011.01.004
   Cumming G, 2014, PSYCHOL SCI, V25, P7, DOI 10.1177/0956797613504966
   da Silva FQB, 2014, EMPIR SOFTW ENG, V19, P501, DOI 10.1007/s10664-012-9227-7
   de Zoete A, 2017, SYST REV-LONDON, V6, DOI 10.1186/s13643-017-0413-y
   Debray TPA, 2015, RES SYNTH METHODS, V6, P293, DOI 10.1002/jrsm.1160
   Dieste O, 2017, IEEE-ACM INT WKSP CO, P27, DOI 10.1109/CESI.2017.8
   Dixon-Woods M, 2001, J EVAL CLIN PRACT, V7, P125, DOI 10.1046/j.1365-2753.2001.00257.x
   Duncan C, 1998, SOC SCI MED, V46, P97, DOI 10.1016/S0277-9536(97)00148-2
   Dybå T, 2006, INFORM SOFTWARE TECH, V48, P745, DOI 10.1016/j.infsof.2005.08.009
   Ensor J, 2018, BMC MED RES METHODOL, V18, DOI [10.1186/S12874-018-0492-z, 10.1186/s12874-018-0492-z]
   Erdogmus H, 2005, IEEE T SOFTWARE ENG, V31, P226, DOI 10.1109/TSE.2005.37
   Fagerland MW, 2012, BMC MED RES METHODOL, V12, DOI 10.1186/1471-2288-12-78
   Falessi D, 2018, EMPIR SOFTW ENG, V23, P452, DOI 10.1007/s10664-017-9523-3
   Feaster DJ, 2011, AM J DRUG ALCOHOL AB, V37, P383, DOI 10.3109/00952990.2011.600386
   Fernandez E, 2007, P 2 INT DOCT S EMP S, P75
   Field A., 2013, DISCOVERING STAT USI
   Field CA, 2007, J R STAT SOC B, V69, P369, DOI 10.1111/j.1467-9868.2007.00593.x
   Finch WH, 2014, CH CRC STAT SOC BEHA, P1
   Finch WH., 2016, Multilevel modeling using R
   Fisher DJ, 2011, J CLIN EPIDEMIOL, V64, P949, DOI 10.1016/j.jclinepi.2010.11.016
   Fisher DJ, 2017, BMJ-BRIT MED J, V356, DOI 10.1136/bmj.j573
   Friedman LawrenceM., 1998, Fundamentals of clinical trials, V3
   Fritz CO, 2012, J EXP PSYCHOL GEN, V141, P30, DOI 10.1037/a0026092
   Gómez OS, 2014, INFORM SOFTWARE TECH, V56, P1033, DOI 10.1016/j.infsof.2014.04.004
   Greco T, 2013, HEART LUNG VESSEL, V5, P219
   Gurevitch J, 2018, NATURE, V555, P175, DOI 10.1038/nature25753
   Hannay JE, 2009, INFORM SOFTWARE TECH, V51, P1110, DOI 10.1016/j.infsof.2009.02.001
   Hautojrvi P., 1979, Experimentation in software engineering, V1ST, DOI [10.1007/978-3-642-81316-0, 10.1007/978-3-642-29044-2., DOI 10.1007/978-3-642-29044-2]
   Hayes W., 1999, Proceedings Sixth International Software Metrics Symposium (Cat. No.PR00403), P143, DOI 10.1109/METRIC.1999.809735
   HEDGES LV, 1980, PSYCHOL BULL, V88, P359, DOI 10.1037/0033-2909.88.2.359
   Higgins JP., 2008, Cochrane Handbook for Systematic Reviews of Interventions, P151, DOI DOI 10.1002/9780470712184.CH7
   Higgins JPT, 2001, STAT MED, V20, P2219, DOI 10.1002/sim.918
   Hoffman L, 2007, BEHAV RES METHODS, V39, P101, DOI 10.3758/BF03192848
   Hox JJ, 2010, Multilevel methods: Techniques and analysis
   Hyvarinen M., 2008, SAGE HDB SOCIAL SCI, P447, DOI DOI 10.4135/9781446212165
   Ioannidis JPA, 2008, BMJ-BRIT MED J, V336, P1413, DOI 10.1136/bmj.a117
   Juristo N., 2013, BASICS SOFTWARE ENG
   Juristo N, 2013, INFORM SOFTWARE TECH, V55, P215, DOI 10.1016/j.infsof.2012.07.016
   Juristo N, 2012, LECT NOTES COMPUT SC, V7007, P60
   Kahan BC, 2013, BMC MED RES METHODOL, V13, DOI 10.1186/1471-2288-13-58
   Kahan BC, 2013, STAT MED, V32, P1136, DOI 10.1002/sim.5667
   Kitchenham B., 2004, PROCEDURES PERFORMIN, V33, P1
   Kitchenham B.A., 2015, EVIDENCE BASED SOFTW, V4
   Kitchenham BA, 2004, PROC INT CONF SOFTW, P273
   Kitchenham B, 2008, EMPIR SOFTW ENG, V13, P219, DOI 10.1007/s10664-008-9061-0
   Kitchenham B, 2017, EMPIR SOFTW ENG, V22, P579, DOI 10.1007/s10664-016-9437-5
   Kosar T, 2012, EMPIR SOFTW ENG, V17, P276, DOI 10.1007/s10664-011-9172-x
   Kraemer HC, 2000, SCHIZOPHRENIA BULL, V26, P533, DOI 10.1093/oxfordjournals.schbul.a033474
   Krein JL, 2016, IEEE T SOFTWARE ENG, V42, P302, DOI 10.1109/TSE.2015.2488625
   Kwok OM, 2008, REHABIL PSYCHOL, V53, P370, DOI 10.1037/a0012765
   Laitenberger O, 2001, IEEE T SOFTWARE ENG, V27, P387, DOI 10.1109/32.922713
   Lambert PC, 2002, J CLIN EPIDEMIOL, V55, P86, DOI 10.1016/S0895-4356(01)00414-0
   Lau J, 1998, LANCET, V351, P123, DOI 10.1016/S0140-6736(97)08468-7
   Lewis JA, 1999, STAT MED, V18, P1903, DOI 10.1002/(SICI)1097-0258(19990815)18:15<1903::AID-SIM188>3.3.CO;2-6
   Little RJ, 2012, NEW ENGL J MED, V367, P1355, DOI 10.1056/NEJMsr1203730
   Localio AR, 2001, ANN INTERN MED, V135, P112, DOI 10.7326/0003-4819-135-2-200107170-00012
   Luke D.A., 2004, MULTILEVEL MODELING
   Lumley T, 2002, ANNU REV PUBL HEALTH, V23, P151, DOI 10.1146/annurev.publhealth.23.100901.140546
   Lyman Gary H, 2005, BMC Med Res Methodol, V5, P14, DOI 10.1186/1471-2288-5-14
   Maas C. J. M., 2005, METHODOLOGY, V1, P86, DOI [DOI 10.1027/1614-2241.1.3.86, 10.1027/1614-2241.1.3.86, DOI 10.1027/1614-1881.1.3.86]
   Maas CJM, 2003, QUAL QUANT, V37, P71, DOI 10.1023/A:1022545930672
   McCulloch CE., 2001, Generalized, Linear, and Mixed Models
   McCulloch CE, 2011, STAT SCI, V26, P388, DOI 10.1214/11-STS361
   McElreath R, 2016, TEXT STAT SCI, pXI
   McNeish DM, 2016, EDUC PSYCHOL REV, V28, P295, DOI 10.1007/s10648-014-9287-x
   Miller J, 2000, J SYST SOFTWARE, V54, P29, DOI 10.1016/S0164-1212(00)00024-8
   Miller J., 1999, Proceedings Sixth International Software Metrics Symposium (Cat. No.PR00403), P152, DOI 10.1109/METRIC.1999.809736
   Moher D, 2010, BMJ-BRIT MED J, V340, DOI [10.1136/bmj.c869, 10.1136/bmj.c332, 10.4103/0976-500X.72352, 10.1016/j.jclinepi.2010.02.005, 10.1186/1741-7015-8-18, 10.1016/j.ijsu.2011.09.004]
   Morris SB, 2002, PSYCHOL METHODS, V7, P105, DOI 10.1037//1082-989X.7.1.105
   Mouchawrab S, 2011, IEEE T SOFTWARE ENG, V37, P161, DOI 10.1109/TSE.2010.32
   Muñoz L, 2010, INFORM SOFTWARE TECH, V52, P1188, DOI 10.1016/j.infsof.2010.06.003
   Nakagawa S, 2007, BIOL REV, V82, P591, DOI 10.1111/j.1469-185X.2007.00027.x
   Nickerson RS, 2000, PSYCHOL METHODS, V5, P241, DOI 10.1037//1082-989X.5.2.241
   Olorisade BK, 2013, INFORM SOFTWARE TECH, V55, P1590, DOI 10.1016/j.infsof.2013.02.015
   Pautz N, 2018, PHYS THER SPORT, V33, P117, DOI 10.1016/j.ptsp.2018.07.009
   Pautz N, 2018, PHYS THER SPORT, V32, P87, DOI 10.1016/j.ptsp.2018.05.002
   Phillips A, 2003, STAT MED, V22, P1, DOI 10.1002/sim.1328
   Pickard LM, 1998, INFORM SOFTWARE TECH, V40, P811, DOI 10.1016/S0950-5849(98)00101-3
   Pickering RM, 2007, STAT MED, V26, P5445, DOI 10.1002/sim.3068
   Pincus T, 2011, BMC MED RES METHODOL, V11, DOI 10.1186/1471-2288-11-14
   Popay J., 2006, Guidance on the conduct of narrative synthesis in systematic reviews: a product from the ESRC Methods Programme, V10, P1018, DOI [DOI 10.13140/2.1.1018.4643, 10.13140/2.1.1018, DOI 10.13140/2.1.1018]
   Quinn G, 2002, EXPT DESIGN DATA ANA
   Ren SQ, 2010, J APPL STAT, V37, P1487, DOI 10.1080/02664760903046102
   Ricca F, 2014, ACM T SOFTW ENG METH, V24, DOI 10.1145/2629457
   Rodgers M., 2009, Evaluation, V15, P49, DOI [10.1177/1356389008097871, DOI 10.1177/1356389008097871]
   Runeson P., 2011, Proceedings of the 2011 Second International Workshop on Replication in Empirical Software Engineering Research (RESER 2011), P35, DOI 10.1109/RESER.2011.13
   Santos A, 2020, IEEE T SOFTWARE ENG, V46, P566, DOI 10.1109/TSE.2018.2864633
   Santos A, 2018, PROCEEDINGS OF THE 12TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT (ESEM 2018), DOI 10.1145/3239235.3239239
   Schafer JL, 2002, PSYCHOL METHODS, V7, P147, DOI 10.1037//1082-989X.7.2.147
   Shadish W. R., 2002, EXPT QUASI EXPT DESI
   Shepperd M, 2018, INFORM SOFTWARE TECH, V99, P120, DOI 10.1016/j.infsof.2018.01.006
   Shull F, 2004, EMPIR SOFTW ENG, V9, P111, DOI 10.1023/B:EMSE.0000013516.80487.33
   Shull FJ, 2008, EMPIR SOFTW ENG, V13, P211, DOI 10.1007/s10664-008-9060-1
   Silberzahn R., ADV METHODS PRACTICE, V1, P337
   Simmonds MC, 2005, CLIN TRIALS, V2, P209, DOI 10.1191/1740774505cn087oa
   Sjoberg DIK, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P358, DOI 10.1109/FOSE.2007.30
   Sjoberg DIK, 2005, IEEE T SOFTWARE ENG, V31, P733, DOI 10.1109/TSE.2005.97
   Smith C.T., 2011, Trials, V12, DOI [DOI 10.1186/1745-6215-12-S1-A57, 10.1186/1745-6215-12-s1-a57]
   Snijders T. A. B., 2011, International encyclopedia of statistical science, P879, DOI [DOI 10.1007/978-3-642-04898-2_387, 10.1007/978-3-642-04898-2_387]
   Solari M, 2018, INFORM SOFTWARE TECH, V97, P64, DOI 10.1016/j.infsof.2017.12.016
   Stewart LA, 2002, EVAL HEALTH PROF, V25, P76, DOI 10.1177/0163278702025001006
   Stewart LA, 2015, JAMA-J AM MED ASSOC, V313, P1657, DOI 10.1001/jama.2015.3656
   Stol KJ, 2018, ACM T SOFTW ENG METH, V27, DOI 10.1145/3241743
   Thabane L, 2013, BMC MED RES METHODOL, V13, DOI 10.1186/1471-2288-13-92
   Thomas J, 2004, BRIT MED J, V328, P1010, DOI 10.1136/bmj.328.7446.1010
   Tierney JF, 2015, PLOS MED, V12, DOI 10.1371/journal.pmed.1001855
   Twisk J, 2013, J CLIN EPIDEMIOL, V66, P1022, DOI 10.1016/j.jclinepi.2013.03.017
   Wasserstein RL, 2016, AM STAT, V70, P129
   Wohlin C., 2014, INT C EVALUATION ASS, P1
   Zuur A., 2013, Highland Statistics
   Zuur Alain F., 2009, P1
NR 133
TC 18
Z9 18
U1 0
U2 2
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD SEPT 1
PY 2021
VL 47
IS 9
BP 1742
EP 1763
DI 10.1109/TSE.2019.2935720
PG 22
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science; Engineering
GA UR3QY
UT WOS:000696667700001
OA Green Accepted, Green Submitted
DA 2024-07-18
ER

PT J
AU Dann, A
   Hermann, B
   Bodden, E
AF Dann, Andreas
   Hermann, Ben
   Bodden, Eric
TI ModGuard : Identifying Integrity & Confidentiality Violations in Java
   Modules
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Java; Security; Cognition; Static analysis; Encapsulation; Manuals;
   Benchmark testing; Java 9; Jigsaw; module systems; security; static
   escape analysis; Doop; Soot
ID ESCAPE ANALYSIS; POINTER
AB With version 9, Java has been given the new module system Jigsaw. Major goals were to simplify maintainability of the JDK and improve its security by encapsulating modules' internal types. While the module system successfully limits the visibility of internal types, it does not prevent sensitive data from escaping. Since the module system reasons about types only, objects are allowed to escape even if that module declares the type as internal. Finding such unintended escapes is important, as they may violate a module's integrity and confidentiality, but is a complex task as it requires one to reason about pointers and type hierarchy. We thus present ModGuard, a novel static analysis based on Doop which complements the Java module system with an analysis to automatically identify instances that escape their declaring module. Along with ModGuard we contribute a complete formal definition of a module's entrypoints, i.e., the method implementations that a module actually allows other modules to directly invoke. We further make available a novel micro-benchmark suite MIC9Bench to show the effectiveness but also current shortcomings of ModGuard, and to enable comparative studies in the future. Finally, we describe a case study that we conducted using Apache Tomcat, which shows that a migration of applications towards Jigsaw modules does not prevent sensitive instances from escaping, yet also shows that ModGuard is an effective aid in identifying integrity and confidentiality violations of sensitive instances.
C1 [Dann, Andreas; Hermann, Ben; Bodden, Eric] Paderborn Univ, Heinz Nixdorf Inst, D-33098 Paderborn, Germany.
C3 University of Paderborn
RP Dann, A (corresponding author), Paderborn Univ, Heinz Nixdorf Inst, D-33098 Paderborn, Germany.
EM andreas.dann@uni-paderborn.de; ben.hermann@uni-paderborn.de;
   eric.bodden@uni-paderborn.de
RI Bodden, Eric/AAE-1365-2021; Hermann, Ben/AAG-9524-2019
OI Bodden, Eric/0000-0003-3470-3647; Hermann, Ben/0000-0001-9848-2017;
   Dann, Andreas/0000-0002-6587-7431
CR [Anonymous], 2010, P USENIX S OP SYST D
   Buiras P, 2015, PROCEEDINGS OF THE 20TH ACM SIGPLAN INTERNATIONAL CONFERENCE ON FUNCTIONAL PROGRAMMING (ICFP'15), P289, DOI 10.1145/2784731.2784758
   Corwin J, 2003, ACM SIGPLAN NOTICES, V38, P241, DOI 10.1145/949343.949326
   Gama K, 2009, LECT NOTES COMPUT SC, V5582, P104, DOI 10.1007/978-3-642-02414-6_7
   Gay D, 2000, LECT NOTES COMPUT SC, V1781, P82
   Geoffray N, 2008, P 1 WORKSH IS INT EM, P41
   Geoffray N, 2009, I C DEPEND SYS NETWO, P544, DOI 10.1109/DSN.2009.5270296
   Giffin Daniel B, 2012, 10 USENIX S OPERATIN, P47
   Goichon F, 2013, J COMPUT VIROL HACKI, V9, P15, DOI 10.1007/s11416-012-0172-1
   Grech N, 2017, P ACM PROGRAM LANG, V1, DOI 10.1145/3133926
   Huang CC, 2007, 21ST INTERNATIONAL CONFERENCE ON ADVANCED NETWORKING AND APPLICATIONS WORKSHOPS/SYMPOSIA, VOL 2, PROCEEDINGS, P518
   IBM T.J. Watson Research Center, 2006, WATSON LIB ANAL WALA
   Lam P., 2011, P CET US COMP INFR W, V15, P35
   Livshits B, 2015, COMMUN ACM, V58, P44, DOI 10.1145/2644805
   Oracle Corporation, 2014, 261 JEP OR CORP
   Oracle Corporation, 2015, 260 JEP OR CORP
   Oracle Corporation, 200 JEP OR CORP
   Oracle Corporation, 2017, JAVA LANGUAGE SPECIF
   Parrend P, 2009, SOFTWARE PRACT EXPER, V39, P471, DOI 10.1002/spe.906
   Parrend P., 2007, P IEEE INT S WORLD W, P1
   Rasthofer  S., 2014, NDSS
   Reif M, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P474, DOI 10.1145/2950290.2950312
   Sabelfeld A, 2003, IEEE J SEL AREA COMM, V21, P5, DOI 10.1109/JSAC.2002.806121
   Salcianu A, 2005, LECT NOTES COMPUT SC, V3385, P199
   Smaragdakis Yannis, 2010, Datalog Reloaded. First International Workshop, Datalog 2010. Revised Selected Papers, P245, DOI 10.1007/978-3-642-24206-9_14
   Smaragdakis Y, 2015, LECT NOTES COMPUT SC, V9458, P485, DOI 10.1007/978-3-319-26529-2_26
   Smaragdakis Y, 2014, ACM SIGPLAN NOTICES, V49, P485, DOI [10.1145/2666356.2594320, 10.1145/2594291.2594320]
   Smaragdakis Y, 2011, POPL 11: PROCEEDINGS OF THE 38TH ANNUAL ACM SIGPLAN-SIGACT SYMPOSIUM ON PRINCIPLES OF PROGRAMMING LANGUAGES, P17, DOI 10.1145/1926385.1926390
   Spath J., 2016, PROC EUR C OBJECT OR, p22:1, DOI [10.4230/DARTS.2.1.12, DOI 10.4230/LIPICS.ECOOP.2016.22]
   Vivien F, 2001, ACM SIGPLAN NOTICES, V36, P35, DOI 10.1145/381694.378804
   Whaley J, 1999, ACM SIGPLAN NOTICES, V34, P187, DOI 10.1145/320385.320400
   Yip A, 2009, SOSP'09: PROCEEDINGS OF THE TWENTY-SECOND ACM SIGOPS SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES, P291
NR 32
TC 1
Z9 1
U1 0
U2 2
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD AUG 1
PY 2021
VL 47
IS 8
BP 1656
EP 1667
DI 10.1109/TSE.2019.2931331
PG 12
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA TZ7YH
UT WOS:000684687400008
DA 2024-07-18
ER

PT J
AU Zhang, JX
   Jiang, H
   Ren, ZL
   Zhang, T
   Huang, ZQ
AF Zhang, Jingxuan
   Jiang, He
   Ren, Zhilei
   Zhang, Tao
   Huang, Zhiqiu
TI Enriching API Documentation with Code Samples and Usage Scenarios from
   Crowd Knowledge
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Documentation; Programming; Java; Knowledge engineering; Search engines;
   Productivity; Task analysis; API documentation; code sample; usage
   scenario; stack overflow; crowd knowledge
AB As one key resource to learn Application Programming Interfaces (APIs), a lot of API reference documentation lacks code samples with usage scenarios, thus heavily hindering developers from programming with APIs. Although researchers have investigated how to enrich API documentation with code samples from general code search engines, two main challenges remain to be resolved, including the quality challenge of acquiring high-quality code samples and the mapping challenge of matching code samples to usage scenarios. In this study, we propose a novel approach named ADECK towards enriching API documentation with code samples and corresponding usage scenarios by leveraging crowd knowledge from Stack Overflow, a popular technical Question and Answer (Q&A) website attracting millions of developers. Given an API related Q&A pair, a code sample in the answer is extensively evaluated by developers and targeted towards resolving the question under the specified usage scenario. Hence, ADECK can obtain high-quality code samples and map them to corresponding usage scenarios to address the above challenges. Extensive experiments on the Java SE and Android API documentation show that the number of code-sample-illustrated API types in the ADECK-enriched API documentation is 3.35 and 5.76 times as many as that in the raw API documentation. Meanwhile, the quality of code samples obtained by ADECK is better than that of code samples by the baseline approach eXoaDocs in terms of correctness, conciseness, and usability, e.g., the average correctness values of representative code samples obtained by ADECK and eXoaDocs are 4.26 and 3.28 on a 5-point scale in the enriched Java SE API documentation. In addition, an empirical study investigating the impacts of different types of API documentation on the productivity of developers shows that, compared against the raw and the eXoaDocs-enriched API documentation, the ADECK-enriched API documentation can help developers complete 23.81 and 14.29 percent more programming tasks and reduce the average completion time by 9.43 and 11.03 percent.
C1 [Zhang, Jingxuan; Huang, Zhiqiu] Nanjing Univ Aeronaut & Astronaut, Coll Comp Sci & Technol, Nanjing 210016, Jiangsu, Peoples R China.
   [Jiang, He] Dalian Univ Technol, Dalian 116081, Liaoning, Peoples R China.
   [Jiang, He] Beijing Inst Technol, Beijing 100091, Peoples R China.
   [Ren, Zhilei] Dalian Univ Technol, Sch Software, Dalian 116081, Liaoning, Peoples R China.
   [Zhang, Tao] Harbin Engn Univ, Coll Comp Sci & Technol, Harbin 150006, Heilongjiang, Peoples R China.
C3 Nanjing University of Aeronautics & Astronautics; Dalian University of
   Technology; Beijing Institute of Technology; Dalian University of
   Technology; Harbin Engineering University
RP Jiang, H (corresponding author), Dalian Univ Technol, Dalian 116081, Liaoning, Peoples R China.
EM jxzhang@nuaa.edu.cn; jianghe@dlut.edu.cn; zren@dlut.edu.cn;
   cstzhang@hrbeu.edu.cn; zqhuang@nuaa.edu.cn
RI Zhang, Tao/E-5634-2012; zhang, jingxuan/KVZ-3600-2024
OI Zhang, Tao/0000-0002-6272-4069; 
FU National Key Research and Development Plan of China [2018YFB1003900];
   National Natural Science Foundation of China [61722202, 61602258]; China
   Postdoctoral Science Foundation [2017M621247]
FX We thank the volunteers and developers for their contributions on the
   manual evaluation. This work is partially supported by the National Key
   Research and Development Plan of China under Grant No. 2018YFB1003900,
   the National Natural Science Foundation of China under Grant No.
   61722202 and Grant No. 61602258, and the China Postdoctoral Science
   Foundation under Grant No. 2017M621247.
CR Amann S, 2019, IEEE T SOFTWARE ENG, V45, P1170, DOI 10.1109/TSE.2018.2827384
   Beyer S., 2016, AAUSERG2016001 U KLA
   Chan W., 2012, PROC ACM SIGSOFT 20, P1, DOI DOI 10.1145/2393596.2393606
   Chen C, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE COMPANION 2014), P456, DOI 10.1145/2591062.2591128
   Choetkiertikul M, 2015, 2015 24TH AUSTRALASIAN SOFTWARE ENGINEERING CONFERENCE (ASWEC 2015), P155, DOI 10.1109/ASWEC.2015.28
   Coelho J, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P186, DOI 10.1145/3106237.3106246
   De Souza L. B. L., 2014, P IEEE INT C PROG CO, P72, DOI DOI 10.1145/2597008.2597146
   Eisenberg DS, 2010, CHI2010: PROCEEDINGS OF THE 28TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, VOLS 1-4, P1331
   Endrikat S, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P632, DOI 10.1145/2568225.2568299
   Frey BJ, 2007, SCIENCE, V315, P972, DOI 10.1126/science.1136800
   Gao Q, 2015, IEEE INT CONF AUTOM, P307, DOI 10.1109/ASE.2015.81
   Ghafari M, 2017, J SOFTW-EVOL PROC, V29, DOI 10.1002/smr.1841
   Gu XD, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P631, DOI 10.1145/2950290.2950334
   Higo Y, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P294, DOI 10.1145/2635868.2635886
   Hoffman D, 2003, J SYST SOFTWARE, V66, P143, DOI 10.1016/S0164-1212(02)00055-9
   Huang Q, 2018, IEEE INT CONF AUTOM, P293, DOI 10.1145/3238147.3238191
   Jiang H, 2017, PROC INT CONF SOFTW, P38, DOI 10.1109/ICSE.2017.12
   Jiang H, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P157, DOI 10.1109/SANER.2016.59
   Johnson DE, 2010, WIRES COMPUT STAT, V2, P620, DOI 10.1002/wics.109
   Kim J, 2013, ACM T INFORM SYST, V31, DOI 10.1145/2414782.2414783
   Kumar N., 2016, ARXIV160707602CSSE
   Lezina G E, 2013, P 9 SPRING RES C DAT, P10
   Lin Y, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P535, DOI 10.1145/2950290.2950317
   Linares-Vasquez M., 2014, P 22 INT C PROGR COM, P83, DOI DOI 10.1145/2597008.2597155
   Linares-Vasquez Mario, 2013, P 2013 9 JOINT M FDN, P477, DOI DOI 10.1145/2491411.2491428
   Liu WJ, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P300, DOI 10.1109/SANER.2018.8330218
   Maalej W, 2013, IEEE T SOFTWARE ENG, V39, P1264, DOI 10.1109/TSE.2013.12
   McMillan C, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P111, DOI 10.1145/1985793.1985809
   Monperrus M, 2012, EMPIR SOFTW ENG, V17, P703, DOI 10.1007/s10664-011-9186-4
   Nasehi SM, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P25, DOI 10.1109/ICSM.2012.6405249
   Nie LM, 2016, IEEE T SERV COMPUT, V9, P771, DOI 10.1109/TSC.2016.2560165
   Parnin C., CROWD DOCUMENTATION, V11
   Ponzanelli L, 2013, EUR CON SFTWR MTNCE, P57, DOI 10.1109/CSMR.2013.16
   Robillard MP, 2013, IEEE T SOFTWARE ENG, V39, P613, DOI 10.1109/TSE.2012.63
   Robillard MP, 2009, IEEE SOFTWARE, V26, P27, DOI 10.1109/MS.2009.193
   Roy CK, 2008, INT C PROGRAM COMPRE, P172, DOI 10.1109/ICPC.2008.41
   Sarkar S, 2007, IEEE T SOFTWARE ENG, V33, P14, DOI 10.1109/TSE.2007.256942
   Silva D, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P858, DOI 10.1145/2950290.2950305
   Stanley Clayton, 2013, P 12 INT C COGN MOD, P414
   Stylos J, 2009, S VIS LANG HUM CEN C, P119, DOI 10.1109/VLHCC.2009.5295283
   Subramanian S, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P643, DOI 10.1145/2568225.2568313
   Treude C, 2016, PROC INT CONF SOFTW, P392, DOI 10.1145/2884781.2884800
   Uddin G, 2015, IEEE SOFTWARE, V32, P68, DOI 10.1109/MS.2014.80
   Wang J, 2013, IEEE WORK CONF MIN S, P319, DOI 10.1109/MSR.2013.6624045
   Wu Y. C., 2012, P 5 INT C SOFTW ENG, P135
   Wu YH, 2019, EMPIR SOFTW ENG, V24, P637, DOI 10.1007/s10664-018-9634-5
   Xie Tao, 2006, Proc. MSR, P54
   Xie XY, 2016, PROC INT CONF SOFTW, P808, DOI 10.1145/2884781.2884834
   Xing ZC, 2007, IEEE T SOFTWARE ENG, V33, P818, DOI 10.1109/TSE.2007.70747
   Yin PC, 2018, IEEE WORK CONF MIN S, P476, DOI 10.1145/3196398.3196408
   Zhang HY, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P956, DOI 10.1145/2950290.2983955
   Zhang J. X., 2016, WHAT MAKES GOOD API
   Zhong H, 2019, IEEE T SOFTWARE ENG, V45, P319, DOI 10.1109/TSE.2017.2782280
   Zhong H, 2013, ACM SIGPLAN NOTICES, V48, P803, DOI [10.1145/2509136.2509523, 10.1145/2544173.2509523]
NR 54
TC 17
Z9 17
U1 1
U2 12
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUN 1
PY 2021
VL 47
IS 6
BP 1299
EP 1314
DI 10.1109/TSE.2019.2919304
PG 16
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA SQ8XU
UT WOS:000660633800012
DA 2024-07-18
ER

PT J
AU Mo, R
   Cai, YF
   Kazman, R
   Xiao, L
   Feng, Q
AF Mo, Ran
   Cai, Yuanfang
   Kazman, Rick
   Xiao, Lu
   Feng, Qiong
TI Architecture Anti-Patterns: Automatically Detectable Violations of
   Design Principles
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Computer architecture; Maintenance engineering; History; Software
   systems; Tools; Observers; Java; Software architecture; software
   maintenance; software quality
ID SOFTWARE; METRICS; MODEL
AB In large-scale software systems, error-prone or change-prone files rarely stand alone. They are typically architecturally connected and their connections usually exhibit architecture problems causing the propagation of error-proneness or change-proneness. In this paper, we propose and empirically validate a suite of architecture anti-patterns that occur in all large-scale software systems and are involved in high maintenance costs. We define these architecture anti-patterns based on fundamental design principles and Baldwin and Clark's design rule theory. We can automatically detect these anti-patterns by analyzing a project's structural relationships and revision history. Through our analyses of 19 large-scale software projects, we demonstrate that these architecture anti-patterns have significant impact on files' bug-proneness and change-proneness. In particular, we show that 1) files involved in these architecture anti-patterns are more error-prone and change-prone; 2) the more anti-patterns a file is involved in, the more error-prone and change-prone it is; and 3) while all of our defined architecture anti-patterns contribute to file's error-proneness and change-proneness, Unstable Interface and Crossing contribute the most by far.
C1 [Mo, Ran] Cent China Normal Univ, Comp Sci, Wuhan 430072, Hubei, Peoples R China.
   [Cai, Yuanfang; Feng, Qiong] Drexel Univ, Comp Sci, Philadelphia, PA 19104 USA.
   [Kazman, Rick] Univ Hawaii, Dept Informat Technol Management, Honolulu, HI 96822 USA.
   [Xiao, Lu] Stevens Inst Technol, Sch Syst & Enterprises, Hoboken, NJ 07030 USA.
C3 Central China Normal University; Drexel University; University of Hawaii
   System; Stevens Institute of Technology
RP Mo, R (corresponding author), Cent China Normal Univ, Comp Sci, Wuhan 430072, Hubei, Peoples R China.
EM moran@mail.ccnu.edu.cn; yc349@drexel.edu; kazman@hawaii.edu;
   lxiao6@stevens.edu; qf28@drexel.edu
RI xiao, lu/KRO-9302-2024
OI Kazman, Rick/0000-0003-0392-2783; Mo, Ran/0000-0001-7556-153X
FU National Science Foundation of the US [CCF-1514315, CCF1514561]
FX This work was supported in part by the National Science Foundation of
   the US under grants CCF-1514315 and CCF1514561. This article is an
   extended version of [1] presented at the 12th Working IEEE/IFIP
   Conference on Software Architecture(WICSA) in 2015. We have extended our
   work as follows: 1) In this paper, we have formally defined one new
   Architecture anti-pattern, Crossing; 2) we have improved the algorithms
   for Clique and Modularity Violation Group; 3) we have added pairwise
   comparisons for all types of architecture anti-patterns to examine and
   discuss the severity of each type of anti-patterns in terms of
   maintenance costs; 4) we have extended the simple tool support described
   in our conference paper to a full functional tool; 5) in the original
   paper, we only studied ten projects, but in this paper, we studied 19
   projects in total (including 15 open source projects and 4 commercial
   projects).
CR Alshayeb M, 2003, IEEE T SOFTWARE ENG, V29, P1043, DOI 10.1109/TSE.2003.1245305
   Amoui M, 2009, INT J SOFTW ENG KNOW, V19, P995, DOI 10.1142/S0218194009004489
   Aniche M, 2016, PROC IEEE INT CONF S, P234, DOI 10.1109/ICSME.2016.12
   Aniche M, 2016, IEEE INT WORK C SO, P41, DOI 10.1109/SCAM.2016.19
   Baldwin C. Y., 2000, Design rules: The power of modularity, DOI DOI 10.7551/MITPRESS/2366.001.0001
   Bass Len, 2012, SEI S SOFTW
   BENJAMINI Y, 1995, J R STAT SOC B, V57, P289, DOI 10.1111/j.2517-6161.1995.tb02031.x
   Bertran IM, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1090, DOI 10.1145/1985793.1986003
   Cai YF, 2006, IEEE INT CONF AUTOM, P91
   Cai YF, 2019, IEEE T SOFTWARE ENG, V45, P657, DOI 10.1109/TSE.2018.2797899
   Cai Yuanfang, 2013, P 9 INT ACM SIGSOFT, P133
   Cataldo M, 2009, IEEE T SOFTWARE ENG, V35, P864, DOI 10.1109/TSE.2009.42
   Catolino G, 2017, INT C PROGRAM COMPRE, P186, DOI 10.1109/ICPC.2017.19
   Cohen J., 1988, STAT POWER ANAL BEHA
   Dósea M, 2018, INT C PROGRAM COMPRE, P74, DOI 10.1145/3196321.3196337
   Le D, 2016, 2016 IEEE/ACM 38TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING COMPANION (ICSE-C), P807, DOI 10.1145/2889160.2889260
   Le DM, 2018, 2018 IEEE 15TH INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE (ICSA), P176, DOI 10.1109/ICSA.2018.00027
   Le DM, 2016, 2016 13TH WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE (WICSA), P178, DOI 10.1109/WICSA.2016.15
   Durlak JA, 2009, J PEDIATR PSYCHOL, V34, P917, DOI 10.1093/jpepsy/jsp004
   Elish MO, 2013, J SOFTW-EVOL PROC, V25, P407, DOI 10.1002/smr.1549
   Ellis PD, 2010, ESSENTIAL GUIDE TO EFFECT SIZES: STATISTICAL POWER, META-ANALYSIS AND THE INTERPRETATION OF RESEARCH RESULTS, P1
   Emam KE, 2001, IEEE T SOFTWARE ENG, V27, P630, DOI 10.1109/32.935855
   Ernst NA, 2018, IEEE WORK CONF MIN S, P587, DOI 10.1145/3196398.3196443
   Falessi D, 2011, ACM COMPUT SURV, V43, DOI 10.1145/1978802.1978812
   Fontana FA, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE WORKSHOPS (ICSAW), P282, DOI 10.1109/ICSAW.2017.16
   Fontana FA, 2016, PROC IEEE INT CONF S, P433, DOI 10.1109/ICSME.2016.33
   Fowler M., 1999, REFACTORING IMPROVIN
   Gall H, 1998, PROC IEEE INT CONF S, P190, DOI 10.1109/ICSM.1998.738508
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   Garcia J., 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P552, DOI 10.1109/ASE.2011.6100123
   Garcia J, 2009, LECT NOTES COMPUT SC, V5581, P146, DOI 10.1007/978-3-642-02351-4_10
   Garcia J, 2009, EUR CON SFTWR MTNCE, P255, DOI 10.1109/CSMR.2009.59
   Ge YX, 2018, LECT NOTES COMPUT SC, V11266, P287, DOI 10.1007/978-3-030-02698-1_25
   Girba T, 2004, PROC IEEE INT CONF S, P40, DOI 10.1109/ICSM.2004.1357788
   Graves TL, 2000, IEEE T SOFTWARE ENG, V26, P653, DOI 10.1109/32.859533
   Gupta N., 2005, Proceedings of the 20th IEEE/ACM International Conference on Automated Software Engineering, New York, NY, USA: Association for Computing Machinery, ASE'05, P263, DOI 10.1145/1101908.1101948
   Hedges L. V., 1981, J ED STAT, V6, P107, DOI DOI 10.3102/10769986006002107
   Herzig K, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P392, DOI 10.1109/ICSE.2013.6606585
   Jones JA, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P467, DOI 10.1109/ICSE.2002.1007991
   Kazman R., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P54, DOI 10.1109/ICSE.1999.840995
   Kazman R, 2016, IEEE T SOFTWARE ENG, V42, P222, DOI 10.1109/TSE.2015.2465387
   Kazman R, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P179, DOI 10.1109/ICSE.2015.146
   Koenig A., 1998, The Patterns Handbooks: Techniques, Strategies, and Applications, P383
   KRUCHTEN PB, 1995, IEEE SOFTWARE, V12, P42, DOI 10.1109/52.469759
   Landman D, 2014, PROC IEEE INT CONF S, P221, DOI 10.1109/ICSME.2014.44
   Lenhard J, 2017, 11TH EUROPEAN CONFERENCE ON SOFTWARE ARCHITECTURE (ECSA 2017) - COMPANION VOLUME, P139, DOI 10.1145/3129790.3129808
   Lenhard J, 2019, SOFTWARE QUAL J, V27, P241, DOI 10.1007/s11219-018-9404-z
   Lippert M., 2006, Refactoring in large software projects: performing complex restructurings successfully
   LISKOV B, 1988, SIGPLAN NOTICES, V23, P17, DOI 10.1145/62139.62141
   Liu C, 2005, SIAM PROC S, P286, DOI 10.1145/1081706.1081753
   Lu HM, 2012, EMPIR SOFTW ENG, V17, P200, DOI 10.1007/s10664-011-9170-z
   Macia I, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P662, DOI 10.1109/ICSM.2012.6405348
   Malhotra R, 2017, EMPIR SOFTW ENG, V22, P2806, DOI 10.1007/s10664-016-9488-7
   Marinescu R, 2004, PROC IEEE INT CONF S, P350, DOI 10.1109/ICSM.2004.1357820
   Martin R. C., 2002, AGILE SOFTWARE DEV P
   Mo R, 2018, IEEE INT CONF AUTOM, P779, DOI 10.1145/3238147.3240467
   Mo R, 2015, 2015 12TH WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE (WICSA), P51, DOI 10.1109/WICSA.2015.12
   Moser R, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P181, DOI 10.1145/1368088.1368114
   Nagappan N., 2006, 28th International Conference on Software Engineering Proceedings, P452, DOI 10.1145/1134285.1134349
   Oizumi W, 2016, PROC INT CONF SOFTW, P440, DOI 10.1145/2884781.2884868
   Olbrich S. M., 2010, 2010 IEEE 26th International Conference on Software Maintenance (ICSM 2010), DOI 10.1109/ICSM.2010.5609564
   Ostrand TJ, 2005, IEEE T SOFTWARE ENG, V31, P340, DOI 10.1109/TSE.2005.49
   PARNAS D., 2001, Software fundamentals, P161
   Roveda R, 2018, EUROMICRO CONF PROC, P408, DOI 10.1109/SEAA.2018.00073
   Schwanke R, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P891, DOI 10.1109/ICSE.2013.6606638
   SELBY RW, 1991, IEEE T SOFTWARE ENG, V17, P141, DOI 10.1109/32.67595
   Sharma T, 2016, 2016 IEEE/ACM 1ST INTERNATIONAL WORKSHOP ON BRINGING ARCHITECTURAL DESIGN THINKING INTO DEVELOPERS DAILY ACTIVITIES (BRIDGE), P1, DOI [10.1145/2896935.2896938, 10.1109/Bridge.2016.009]
   Sliwerski J., 2005, ACM SIGSOFT SOFTWARE, P1, DOI DOI 10.1145/1082983.1083147
   Sousa L, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P921, DOI 10.1145/3180155.3180239
   Sullivan Gail M, 2012, J Grad Med Educ, V4, P279, DOI 10.4300/JGME-D-12-00156.1
   Taylor Richard N., 2009, Software architecture: foundations, theory, and practice
   Tsantalis N, 2005, IEEE T SOFTWARE ENG, V31, P601, DOI 10.1109/TSE.2005.83
   Wong S, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P411, DOI 10.1145/1985793.1985850
   Wong S, 2009, IEEE INT CONF AUTOM, P197, DOI 10.1109/ASE.2009.53
   Xiao L, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P967, DOI 10.1145/2568225.2568241
   Yamashita A, 2015, PROC IEEE INT CONF S, P121, DOI 10.1109/ICSM.2015.7332458
   Yamashita A, 2013, WORK CONF REVERSE EN, P242, DOI 10.1109/WCRE.2013.6671299
   Zazworka N, 2014, SOFTWARE QUAL J, V22, P403, DOI 10.1007/s11219-013-9200-8
   Zazworka Nico, 2011, P 2 WORKSH MAN TECHN, P17, DOI 10.1145/1985362.1985366
   Zimmermann T, 2004, PROC INT CONF SOFTW, P563, DOI 10.1109/ICSE.2004.1317478
NR 80
TC 31
Z9 31
U1 0
U2 18
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAY 1
PY 2021
VL 47
IS 5
BP 1008
EP 1028
DI 10.1109/TSE.2019.2910856
PG 21
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA SC1RN
UT WOS:000650457700009
OA hybrid
DA 2024-07-18
ER

PT J
AU Ameller, D
   Franch, X
   Gómez, C
   Martínez-Fernández, S
   Araujo, J
   Biffl, S
   Cabot, J
   Cortellessa, V
   Fernandez, DM
   Moreira, A
   Muccini, H
   Vallecillo, A
   Wimmer, M
   Amaral, V
   Böhm, W
   Bruneliere, H
   Burgueño, L
   Goulao, M
   Teufl, S
   Berardinelli, L
AF Ameller, David
   Franch, Xavier
   Gomez, Cristina
   Martinez-Fernandez, Silverio
   Araujo, Joao
   Biffl, Stefan
   Cabot, Jordi
   Cortellessa, Vittorio
   Fernandez, Daniel Mendez
   Moreira, Ana
   Muccini, Henry
   Vallecillo, Antonio
   Wimmer, Manuel
   Amaral, Vasco
   Bohm, Wolfgang
   Bruneliere, Hugo
   Burgueno, Loli
   Goulao, Miguel
   Teufl, Sabine
   Berardinelli, Luca
TI Dealing with Non-Functional Requirements in Model-Driven Development: A
   Survey
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Unified modeling language; Software; Companies; Productivity; Software
   engineering; Security; Analytical models; Model-driven development;
   non-functional requirements; quality requirements; requirements
   engineering; survey
ID QUALITY
AB Context: Managing Non-Functional Requirements (NFRs) in software projects is challenging, and projects that adopt Model-Driven Development (MDD) are no exception. Although several methods and techniques have been proposed to face this challenge, there is still little evidence on how NFRs are handled in MDD by practitioners. Knowing more about the state of the practice may help researchers to steer their research and practitioners to improve their daily work. Objective: In this paper, we present our findings from an interview-based survey conducted with practitioners working in 18 different companies from 6 European countries. From a practitioner's point of view, the paper shows what barriers and benefits the management of NFRs as part of the MDD process can bring to companies, how NFRs are supported by MDD approaches, and which strategies are followed when (some) types of NFRs are not supported by MDD approaches. Results: Our study shows that practitioners perceive MDD adoption as a complex process with little to no tool support for NFRs, reporting productivity and maintainability as the types of NFRs expected to be supported when MDD is adopted. But in general, companies adapt MDD to deal with NFRs. When NFRs are not supported, the generated code is sometimes changed manually, thus compromising the maintainability of the software developed. However, the interviewed practitioners claim that the benefits of using MDD outweight the extra effort required by these manual adaptations. Conclusion: Overall, the results indicate that it is important for practitioners to handle `NFRs in MDD, but further research is necessary in order to lower the barrier for supporting a broad spectrum of NFRs with MDD. Still, much conceptual and tool implementation work seems to be necessary to lower the barrier of integrating the broad spectrum of NFRs in practice.
C1 [Ameller, David] Univ Politecn Cataluna, Barcelona 08034, Spain.
   [Franch, Xavier] Univ Politecn Cataluna, Dept Engn Serv & Sistemes Informac, Barcelona 08034, Spain.
   [Gomez, Cristina] Univ Politecn Cataluna, Serv & Informat Syst Engn, Barcelona 08034, Spain.
   [Martinez-Fernandez, Silverio] Fraunhofer IESE, Data Engn, D-67663 Kaiserslautern, Germany.
   [Araujo, Joao; Moreira, Ana; Amaral, Vasco] Univ Nova Lisboa, Dept Informat, P-2829516 Caparica, Portugal.
   [Biffl, Stefan; Berardinelli, Luca] Tech Univ Wien, Dept Software Engn, A-1040 Vienna, Austria.
   [Cabot, Jordi] Inst Catalana Recerca & Estudis Avancats, IN3 UOC, Barcelona 08860, Spain.
   [Cortellessa, Vittorio] Univ Aquila, Dipartimento Informat, I-67010 Laquila, Italy.
   [Fernandez, Daniel Mendez; Bohm, Wolfgang; Teufl, Sabine] Tech Univ Munich, D-85748 Garching, Germany.
   [Muccini, Henry] Univ Aquila, DISIM, I-67100 Laquila, Italy.
   [Vallecillo, Antonio; Burgueno, Loli] Univ Malaga, Lenguajes & Ciencias Computac, Malaga 29016, Spain.
   [Wimmer, Manuel] Vienna Univ Technol, Comp Sci, A-1140 Vienna, Austria.
   [Bruneliere, Hugo] IMT Atlantique Bretagne Pays Loire, NaoMod Team, F-44307 Nantes, France.
   [Goulao, Miguel] Univ Nova Lisboa, Fac Ciencias & Tecnol, P-2829516 Caparica, Portugal.
C3 Universitat Politecnica de Catalunya; Universitat Politecnica de
   Catalunya; Universitat Politecnica de Catalunya; Universidade Nova de
   Lisboa; Technische Universitat Wien; ICREA; University of L'Aquila;
   Technical University of Munich; University of L'Aquila; Universidad de
   Malaga; Technische Universitat Wien; IMT - Institut Mines-Telecom; IMT
   Atlantique; Universidade Nova de Lisboa
RP Ameller, D (corresponding author), Univ Politecn Cataluna, Barcelona 08034, Spain.
EM dameller@essi.upc.edu; franch@essi.upc.edu; cristina@essi.upc.edu;
   Silverio.Martinez@iese.fraunhofer.de; p191@fct.unl.pt;
   stefan.biffl@tuwien.ac.at; jordi.cabot@icrea.cat;
   vittorio.cortellessa@univaq.it; daniel.mendez@tum.de; amm@fct.unl.pt;
   henry.muccini@univaq.it; av@lcc.uma.es; wimmer@big.tuwien.ac.at;
   vasco.amaral@fct.unl.pt; boehmw@in.tum.de;
   hugo.bruneliere@imt-atlantique.fr; loli@lcc.uma.es; mgoul@fct.unl.pt;
   teufl@in.tum.de; luca.berardinelli@tuwien.ac.at
RI Vallecillo, Antonio/B-1884-2014; Franch, Xavier/KAM-2369-2024; Amaral,
   Vasco/A-7031-2010; Araujo, Joao/G-2108-2011; Mendez,
   Daniel/ABA-4579-2021; Martínez-Fernández, Silverio/P-5615-2014; Goulão,
   Miguel/AAB-8223-2020; Araujo, Joao/M-3560-2013; Cabot, Jordi/P-7723-2015
OI Vallecillo, Antonio/0000-0002-8139-9986; Franch,
   Xavier/0000-0001-9733-8830; Amaral, Vasco/0000-0003-3791-5151; Mendez,
   Daniel/0000-0003-0619-6027; Martínez-Fernández,
   Silverio/0000-0001-9928-133X; Goulão, Miguel/0000-0002-5356-5203;
   Bruneliere, Hugo/0000-0002-5987-2175; Araujo, Joao/0000-0001-5914-1631;
   Cabot, Jordi/0000-0003-2418-2489; Muccini, Henry/0000-0001-6365-6515;
   Cortellessa, Vittorio/0000-0002-4507-464X; Gomez Seoane,
   Cristina/0000-0002-3872-0439
FU NOVA LINCS Research Laboratory [UID/CEC/04516/2013]; Austrian Federal
   Ministry for Digital, Business and Enterprise [TIN201679269-R,
   TIN2014-52034-R]; National Foundation for Research, Technology and
   Development; ECSEL (Electronic Component Systems for European Leadership
   Joint Undertaking) project [737494]
FX The authors thank Richard Berntsson Svensson, Maya Daneva, Grischa
   Liebel, and Bernhard Sch_atz for their contributions to this work as
   well as all participating industry 10.
   https://creativecommons.org/licenses/by/4.0 partners for dedicating
   their time and for contributing with their experiences to our study.
   This work was supported in part by a grant from NOVA LINCS Research
   Laboratory (Ref. UID/CEC/04516/2013), by the Spanish projects
   TIN201679269-R and TIN2014-52034-R, by the Austrian Federal Ministry for
   Digital, Business and Enterprise and the National Foundation for
   Research, Technology and Development, and by an ECSEL (Electronic
   Component Systems for European Leadership Joint Undertaking) project
   named MegaM@Rt2 (grant agreement No. 737494). In memory of Bernhard
   Sch_atz, an inspiring scientist and a wonderful friend.
CR Acerbis R, 2007, LECT NOTES COMPUT SC, V4607, P539
   Afonso M, 2006, JOINT MEETING OF THE FOURTH WORKSHOP ON MODEL-BASED DEVELOPMENT OF COMPUTER-BASED SYSTEMS AND THIRD INTERNATIONAL WORKSHOP ON MODEL-BASED METHODOLOGIES FOR PERVASIVE AND EMBEDDED SOFTWARE, PROCEEDINGS, P125
   Ameller D., 2012, 2012 IEEE 20th International Requirements Engineering Conference (RE 2012), P41, DOI 10.1109/RE.2012.6345838
   Ameller D., 2010, Proceedings of the 2010 IEEE 18th International Conference on Requirements Engineering (RE2010), P189, DOI 10.1109/RE.2010.32
   Ameller D, 2018, SCI COMPUT PROGRAM, V168, P18, DOI 10.1016/j.scico.2018.08.001
   Ameller D, 2016, SOFTWARE QUAL J, V24, P271, DOI 10.1007/s11219-015-9268-4
   Ameller D, 2015, INT REQUIR ENG CONF, P208, DOI 10.1109/RE.2015.7320424
   Ameller D, 2015, INFORM SOFTWARE TECH, V62, P42, DOI 10.1016/j.infsof.2015.02.006
   [Anonymous], 2011, ISO/IEC 25010:2011
   [Anonymous], 2012, Synthesis Lectures on Software Engineering, DOI [DOI 10.2200/S00751ED2V01Y201701SWE004, DOI 10.2200/S00441ED1V01Y201208SWE001]
   [Anonymous], 2000, P 2 INT WORKSH SOFTW
   [Anonymous], 2002, P 3 INT WORKSHOP SOF, DOI DOI 10.1145/584369.584415
   Atkinson C, 2003, IEEE SOFTWARE, V20, P36, DOI 10.1109/MS.2003.1231149
   Babar MA, 2007, LECT NOTES COMPUT SC, V4880, P90
   Baker P, 2005, LECT NOTES COMPUT SC, V3713, P476, DOI 10.1007/11557432_36
   Becker M., 2012, PROC 8 INT ACM SIGSO, P117
   Becker S, 2009, J SYST SOFTWARE, V82, P3, DOI 10.1016/j.jss.2008.03.066
   Behutiye W, 2017, LECT NOTES COMPUT SC, V10611, P515, DOI 10.1007/978-3-319-69926-4_41
   Bézivin J, 2001, 16TH ANNUAL INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2001), PROCEEDINGS, P273, DOI 10.1109/ASE.2001.989813
   Biffl S., 2003, LECT NOTES COMPUT SC, P104
   Borg A., 2003, Proceedings of the 3rd Conference on Software Engineering Research and Practice in Sweden (SERPS'03), P1
   Büttner F, 2014, SCI COMPUT PROGRAM, V89, P162, DOI 10.1016/j.scico.2013.03.009
   Caracciolo A, 2014, LECT NOTES COMPUT SC, V8627, P374, DOI 10.1007/978-3-319-09970-5_32
   CHUNG L, 1995, PROC INT CONF SOFTW, P25, DOI 10.1145/225014.225017
   Chung L, 2009, LECT NOTES COMPUT SC, V5600, P363, DOI 10.1007/978-3-642-02463-4_19
   Chung Li-Chuan., 2000, Chung, Li-Chuan.(2000). A study of teacher factors in teacher-child relationships with preschool children. Nebraska: Presented to the Faculty of The Graduate College at the University of Nebraska In Partial Fulfillment of Requirements fort he Degree of Doctor of Philosophy.
   Cicchetti A., 2016, 10 WORKSHOP MODELS E, P8
   Corbin J, 2008, Techniques and procedures for developing grounded theory, V3rd
   Cortellessa V, 2007, LECT NOTES COMPUT SC, V4422, P57
   Criado J, 2018, FUND INFORM, V162, P283, DOI 10.3233/FI-2018-1726
   Daneva Maya, 2013, Requirements Engineering: Foundation for Software Quality. 19th International Working Conference, REFSQ 2013. Proceedings, P1, DOI 10.1007/978-3-642-37422-7_1
   Daneva M., 2014, RELATING SYSTEM QUAL, P325
   Di Ruscio D, 2014, SCI COMPUT PROGRAM, V89, P69, DOI 10.1016/j.scico.2013.12.006
   Dillman D.A., 2009, Internet, Mail, and Mix-Mode Surveys: The Taylored Design Method
   Doerr J, 2005, 13TH IEEE INTERNATIONAL CONFERENCE ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P373, DOI 10.1109/RE.2005.47
   Eckhardt J, 2016, LECT NOTES COMPUT SC, V10027, P31, DOI 10.1007/978-3-319-49094-6_3
   Franch X, 2018, LECT NOTES COMPUT SC, V10816, P587, DOI 10.1007/978-3-319-91563-0_36
   Glinz M, 2007, INT REQUIR ENG CONF, P21, DOI 10.1109/RE.2007.45
   Grunske L, 2005, LECT NOTES COMPUT SC, V3489, P33
   Guzmán L, 2017, LECT NOTES COMPUT SC, V10153, P167, DOI 10.1007/978-3-319-54045-0_12
   Hassenzahl M, 2001, INT J HUM-COMPUT INT, V13, P481, DOI 10.1207/S15327590IJHC1304_07
   Hautojrvi P., 1979, Experimentation in software engineering, V1ST, DOI [10.1007/978-3-642-81316-0, 10.1007/978-3-642-29044-2., DOI 10.1007/978-3-642-29044-2]
   Hutchinson J, 2014, SCI COMPUT PROGRAM, V89, P144, DOI 10.1016/j.scico.2013.03.017
   Hutchinson J, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P471, DOI 10.1145/1985793.1985858
   Jouault F, 2006, LECT NOTES COMPUT SC, V4037, P171
   Kulkarni V, 2006, ASPEC 2006: 13TH ASIA-PACIFIC SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P419, DOI 10.1109/APSEC.2006.43
   Liebel G, 2018, SOFTW SYST MODEL, V17, P91, DOI 10.1007/s10270-016-0523-3
   Mani N, 2011, EUROMICRO CONF PROC, P12, DOI 10.1109/SEAA.2011.13
   Martin R. M., 2003, Zer, V8, P11
   Mayring P, 2014, QUALITATIVE CONTENT, DOI 10.1007/978-94-017-9181-6_13
   Mellor SJ, 2003, IEEE SOFTWARE, V20, P14, DOI 10.1109/MS.2003.1231145
   Mernik M, 2005, ACM COMPUT SURV, V37, P316, DOI 10.1145/1118890.1118892
   Mohagheghi P, 2013, SOFTW SYST MODEL, V12, P619, DOI 10.1007/s10270-011-0219-7
   Mohagheghi P, 2013, EMPIR SOFTW ENG, V18, P89, DOI 10.1007/s10664-012-9196-x
   Nambiar Manoj, 2016, ACM SIGMETRICS Performance Evaluation Review, V43, P53, DOI 10.1145/2897356.2897363
   O'Grady NP, 2002, CLIN INFECT DIS, V35, P1281, DOI 10.1086/502007
   Object Management Group (OMG), 2014, MODEL DRIVEN ARCHITE
   ROMAN GC, 1985, COMPUTER, V18, P14
   Rombach H. D., 2002, ENCY SOFTWARE ENG
   Selic B, 2012, SOFTW SYST MODEL, V11, P513, DOI 10.1007/s10270-012-0261-0
   Sommerville I., 1998, REQUIREMENTS ENG PRO
   Sommerville I., 2011, Software engineering
   Svensson RB, 2009, LECT NOTES COMPUT SC, V5512, P218, DOI 10.1007/978-3-642-02050-6_19
   Torchiano M, 2013, J SYST SOFTWARE, V86, P2110, DOI 10.1016/j.jss.2013.03.084
   Wenzel S, 2014, COMPUT STAND INTER, V36, P776, DOI 10.1016/j.csi.2013.12.011
   Whittle Jon, 2012, Models in Software Engineering. Workshops and Symposia at MODELS 2011. Reports and Revised Selected Papers, P40, DOI 10.1007/978-3-642-29645-1_6
   Whittle J, 2017, SOFTW SYST MODEL, V16, P313, DOI 10.1007/s10270-015-0487-8
   Whittle J, 2014, IEEE SOFTWARE, V31, P79, DOI 10.1109/MS.2013.65
   Whittle J, 2013, LECT NOTES COMPUT SC, V8107, P1, DOI 10.1007/978-3-642-41533-3_1
   Agner LTW, 2013, J SYST SOFTWARE, V86, P997, DOI 10.1016/j.jss.2012.11.023
NR 70
TC 25
Z9 27
U1 3
U2 8
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD APR 1
PY 2021
VL 47
IS 4
BP 818
EP 835
DI 10.1109/TSE.2019.2904476
PG 18
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA RP8GH
UT WOS:000641961100007
OA Green Published
DA 2024-07-18
ER

PT J
AU Wu, XX
   Zheng, W
   Xia, X
   Lo, D
AF Wu, Xiaoxue
   Zheng, Wei
   Xia, Xin
   Lo, David
TI Data Quality Matters: A Case Study on Data Label Correctness for
   Security Bug Report Prediction
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Computer bugs; Noise measurement; Predictive models; Security; Chromium;
   Tuning; Data models; Security bug report prediction; data quality; label
   correctness
ID IDENTIFICATION
AB In the research of mining software repositories, we need to label a large amount of data to construct a predictive model. The correctness of the labels will affect the performance of a model substantially. However, limited studies have been performed to investigate the impact of mislabeled instances on a predictive model. To bridge the gap, in this article, we perform a case study on the security bug report (SBR) prediction. We found five publicly available datasets for SBR prediction contains many mislabeled instances, which lead to the poor performance of SBR prediction models of recent studies (e.g., the work of Peters et al. and Shu et al.). Furthermore, it might mislead the research direction of SBR prediction. In this article, we first improve the label correctness of these five datasets by manually analyzing each bug report, and we find 749 SBRs, which are originally mislabeled as Non-SBRs (NSBRs). We then evaluate the impacts of datasets label correctness by comparing the performance of the classification models on both the noisy (i.e., before our correction) and the clean (i.e., after our correction) datasets. The results show that the cleaned datasets result in improvement in the performance of classification models. The performance of the approaches proposed by Peters et al. and Shu et al. on the clean datasets is much better than on the noisy datasets. Furthermore, with the clean datasets, the simple text classification models could significantly outperform the security keywords-matrix-based approaches applied by Peters et al. and Shu et al.
C1 [Wu, Xiaoxue] Northwestern Polytech Univ, Sch Cyberspace Secur, Xian 710072, Shaanxi, Peoples R China.
   [Zheng, Wei] Northwestern Polytech Univ, Sch Software, Xian 710072, Shaanxi, Peoples R China.
   [Xia, Xin] Monash Univ, Fac Informat Technol, Melbourne, Vic 3800, Australia.
   [Lo, David] Singapore Management Univ, Sch Informat Syst, Singapore 188065, Singapore.
C3 Northwestern Polytechnical University; Northwestern Polytechnical
   University; Monash University; Singapore Management University
RP Zheng, W (corresponding author), Northwestern Polytech Univ, Sch Software, Xian 710072, Shaanxi, Peoples R China.
EM wuxiaoxue00@gmail.com; wzheng@nwpu.edu.cn; xin.xia@monash.edu;
   davidlo@smu.edu.sg
RI ; Lo, David/A-2493-2012
OI Xia, Xin/0000-0002-6302-3256; Zheng, Wei/0000-0001-7969-1630; wu,
   xiaoxue/0000-0002-7567-3643; Lo, David/0000-0002-4367-7201
FU Innovation Foundation for Doctor Dissertation of Northwestern
   Polytechnical University [CX202067]; Key Laboratory of Advanced
   Perception and Intelligent Control of High-end Equipment, Ministry of
   Education [GDSC202006]
FX The authors would like to thank Sensen Guo, Zhong Liu, Weiqiang Fu,
   Fengyu Liu, and Manqing Zhang for their contributions to our datasets
   annotation. They would also like to thank the authors of Better Security
   Bug Report Classification via Hyperparameter Optimization and Text
   Filtering and Ranking for Security Bug Report Prediction for sharing
   their datasets and scripts. This research is done with the support from
   the Innovation Foundation for Doctor Dissertation of Northwestern
   Polytechnical University (CX202067) and the Key Laboratory of Advanced
   Perception and Intelligent Control of High-end Equipment, Ministry of
   Education (GDSC202006).
CR Alonso O, 2015, ACM J DATA INF QUAL, V6, DOI 10.1145/2724721
   [Anonymous], 2020, CVE
   [Anonymous], 2007, INT C AUTOMATED SOFT
   [Anonymous], 2020, 1228 CWE
   [Anonymous], 2020, MINING SOFTWARE REPO
   [Anonymous], 2011, MINING SOFTWARE REPO
   [Anonymous], 2020, SOFTWARE CWES
   [Anonymous], 2018, Jira
   [Anonymous], 2020, scikit learn
   [Anonymous], 2019, 2019 TOP 25 CWES
   Arnold J., 2009, PROC 12 WORKSHOP HOT
   Behl D, 2014, PROCEEDINGS OF THE 2014 INTERNATIONAL CONFERENCE ON RELIABILTY, OPTIMIZATION, & INFORMATION TECHNOLOGY (ICROIT 2014), P294, DOI 10.1109/ICROIT.2014.6798341
   Breiman L, 2001, MACH LEARN, V45, P5, DOI 10.1023/A:1010933404324
   Chaparro O, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P86, DOI 10.1145/3338906.3338947
   Chaparro O, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P396, DOI 10.1145/3106237.3106285
   Chawla NV, 2002, J ARTIF INTELL RES, V16, P321, DOI 10.1613/jair.953
   Das S, 2011, IEEE T EVOLUT COMPUT, V15, P4, DOI 10.1109/TEVC.2010.2059031
   Debattista J, 2016, ACM J DATA INF QUAL, V8, DOI 10.1145/2992786
   Fan YR, 2021, IEEE T SOFTWARE ENG, V47, P1559, DOI 10.1109/TSE.2019.2929761
   Fan YR, 2020, IEEE T SOFTWARE ENG, V46, P495, DOI 10.1109/TSE.2018.2864217
   Feather Martin, 2008, Proceedings of the 4th international workshop on Predictor models in software engineering, P79
   Feurer M, 2019, SPRING SER CHALLENGE, P3, DOI 10.1007/978-3-030-05318-5_1
   FLEISS JL, 1971, PSYCHOL BULL, V76, P378, DOI 10.1037/h0031619
   Fu W, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P49, DOI 10.1145/3106237.3106256
   Gan Y, 2019, TWENTY-FOURTH INTERNATIONAL CONFERENCE ON ARCHITECTURAL SUPPORT FOR PROGRAMMING LANGUAGES AND OPERATING SYSTEMS (ASPLOS XXIV), P3, DOI 10.1145/3297858.3304013
   Gao Q, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P459, DOI 10.1109/ICSE.2015.64
   Gegick Michael, 2010, Proceedings of the 2010 7th IEEE Working Conference on Mining Software Repositories (MSR 2010), P11, DOI 10.1109/MSR.2010.5463340
   Ghotra B, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P789, DOI 10.1109/ICSE.2015.91
   Graham, 2004, HACKERS PAINTERS BIG
   Han X, 2018, IEEE INT CONF AUTOM, P17, DOI 10.1145/3238147.3238204
   Herzig K, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P392, DOI 10.1109/ICSE.2013.6606585
   Hulot P, 2018, KDD'18: PROCEEDINGS OF THE 24TH ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY & DATA MINING, P378, DOI 10.1145/3219819.3219873
   Jack Barnaby., 2007, VECTOR REWRITE ATTAC
   Jimenez M, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P695, DOI 10.1145/3338906.3338941
   Kamongi P, 2013, INT CONF SOFTW SECUR, P218, DOI 10.1109/SERE.2013.31
   Kim M, 2018, IEEE T SOFTWARE ENG, V44, P1024, DOI 10.1109/TSE.2017.2754374
   Kim S, 2006, IEEE INT CONF AUTOM, P81
   Kim S, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P481, DOI 10.1145/1985793.1985859
   Kochhar PS, 2014, IEEE INT C ENG COMP, P126, DOI 10.1109/ICECCS.2014.25
   Kogtenkov A., 2017, THESIS ETH ZURICH SW
   LANDWEHR CE, 1994, ACM COMPUT SURV, V26, P211, DOI 10.1145/185403.185412
   Liu BC, 2020, PROC INT CONF SOFTW, P1547, DOI 10.1145/3377811.3380923
   Liu C, 2019, INFORM SOFTWARE TECH, V107, P125, DOI 10.1016/j.infsof.2018.11.005
   Liu ZX, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P176, DOI 10.1109/ASE.2019.00026
   Liu ZX, 2018, IEEE INT CONF AUTOM, P373, DOI 10.1145/3238147.3238190
   Mandt T., 2011, KERNEL ATTACKS USER
   Ohira M, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P518, DOI 10.1109/MSR.2015.78
   Pashchenko I, 2017, INT SYMP EMP SOFTWAR, P163, DOI 10.1109/ESEM.2017.24
   Peters F, 2019, IEEE T SOFTWARE ENG, V45, P615, DOI 10.1109/TSE.2017.2787653
   Potter B, 2004, IEEE SECUR PRIV, V2, P81, DOI 10.1109/MSP.2004.84
   Ren XX, 2019, ACM T SOFTW ENG METH, V28, DOI 10.1145/3324916
   Sajnani H, 2016, PROC INT CONF SOFTW, P1157, DOI 10.1145/2884781.2884877
   Shepperd M, 2013, IEEE T SOFTWARE ENG, V39, P1208, DOI 10.1109/TSE.2013.11
   Shu R., 2019, ARXIV 190506872
   Sliwerski J., 2005, ACM SIGSOFT SOFTWARE, P1, DOI DOI 10.1145/1082983.1083147
   Spencer D., 2009, CARD SORTING DESIGNI
   Svajlenko J, 2016, PROC IEEE INT CONF S, P596, DOI 10.1109/ICSME.2016.62
   Svajlenko J, 2015, PROC IEEE INT CONF S, P131, DOI 10.1109/ICSM.2015.7332459
   Svajlenko J, 2014, PROC IEEE INT CONF S, P476, DOI 10.1109/ICSME.2014.77
   Tantithamthavorn C, 2020, IEEE T SOFTWARE ENG, V46, P1200, DOI 10.1109/TSE.2018.2876537
   Tantithamthavorn C, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P812, DOI 10.1109/ICSE.2015.93
   Tian Y, 2016, EMPIR SOFTW ENG, V21, P2298, DOI 10.1007/s10664-015-9409-1
   Viviani G, 2021, IEEE T SOFTWARE ENG, V47, P1402, DOI 10.1109/TSE.2019.2924006
   Wan ZY, 2020, IEEE T SOFTWARE ENG, V46, P1241, DOI 10.1109/TSE.2018.2877678
   Wen W, 2016, PROC INT SYMP SOFTW, P150, DOI 10.1109/ISSRE.2016.29
   Wijayasekara D, 2012, C HUM SYST INTERACT, P89, DOI 10.1109/HSI.2012.22
   Xia X, 2015, AUTOMAT SOFTW ENG, V22, P75, DOI 10.1007/s10515-014-0162-2
   Xie X, 2014, P INT COMP SOFTW APP, P107, DOI 10.1109/COMPSAC.2014.17
   Yang XL, 2017, J COMPUT SCI TECH-CH, V32, P181, DOI 10.1007/s11390-017-1713-3
   Yang Y., 2019, ARXIV 200803656
   Yoongu Kim, 2010, Proceedings 2010 43rd Annual IEEE/ACM International Symposium on Microarchitecture (MICRO 2010), P65, DOI 10.1109/MICRO.2010.51
   Yu H, 2019, INT C PROGRAM COMPRE, P70, DOI 10.1109/ICPC.2019.00021
   Zaman S., 2011, Proceedings of the 8th working conference on mining software repositories, P93, DOI [10.1145/1985441.1985457, DOI 10.1145/1985441.1985457]
   Zhou X, 2021, IEEE T SOFTWARE ENG, V47, P243, DOI 10.1109/TSE.2018.2887384
   Zimmermann Thomas, 2010, Proceedings of the Third IEEE International Conference on Software Testing, Verification and Validation (ICST 2010), P421, DOI 10.1109/ICST.2010.32
NR 75
TC 80
Z9 83
U1 2
U2 17
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAR 5
PY 2021
VL 48
IS 7
BP 2541
EP 2556
DI 10.1109/TSE.2021.3063727
PG 16
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 2Y5ZC
UT WOS:000825973800002
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Pan, Y
   White, J
   Sun, Y
   Gray, J
AF Pan, Yao
   White, Jules
   Sun, Yu
   Gray, Jeff
TI Gray Computing: A Framework for Computing with Background JavaScript
   Tasks
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Software economics; JavaScript; web browser; cloud computing
ID BAYANIHAN; ALIGNMENT
AB Website visitors are performing increasingly complex computational work on the websites' behalf, such as validating forms, rendering animations, and producing data visualizations. In this article, we explore the possibility of increasing the work offloaded to web visitors' browsers. The idle computing cycles of web visitors can be turned into a large-scale distributed data processing engine, which we term gray computing. Past research has looked primarily at either volunteer computing with specialized clients or browser-based volunteer computing where the visitors keep their browsers open to a single web page for a long period of time. This article provides a comprehensive analysis of the architecture, performance, security, cost effectiveness, user experience, and other issues of gray computing distributed data processing engines with heterogeneous computing power, non-uniform page view times, and high computing pool volatility. Several real-world applications are examined and gray computing is shown to be cost effective for a number of complex tasks ranging from computer vision to bioinformatics to cryptology.
C1 [Pan, Yao; White, Jules] Vanderbilt Univ, Dept Elect Engn & Comp Sci, Nashville, TN 37203 USA.
   [Sun, Yu] Calif State Polytech Univ Pomona, Dept Comp Sci, Pomona, CA 91748 USA.
   [Gray, Jeff] Univ Alabama, Dept Comp Sci, Tuscaloosa, AL 35487 USA.
C3 Vanderbilt University; California State University System; California
   State Polytechnic University Pomona; University of Alabama System;
   University of Alabama Tuscaloosa
RP Pan, Y (corresponding author), Vanderbilt Univ, Dept Elect Engn & Comp Sci, Nashville, TN 37203 USA.
EM yao.pan@vanderbilt.edu; julesw@vanderbilt.edu; yusun@cpp.edu;
   gray@cs.ua.edu
RI Pan, Yao/AAB-2709-2021; Pan, Yao/AAT-6997-2021
OI Pan, Yao/0000-0002-7765-7292; Gray, Jeff/0000-0003-0082-6753
CR Aberer K., 2001, Proceedings of the 2001 ACM CIKM. Tenth International Conference on Information and Knowledge Management, P310, DOI 10.1145/502585.502638
   ALTSCHUL SF, 1990, J MOL BIOL, V215, P403, DOI 10.1016/S0022-2836(05)80360-2
   Anderson D.P., 2010, Crossroads, V16, P7, DOI DOI 10.1145/1734160.1734164
   Anderson DP, 2004, FIFTH IEEE/ACM INTERNATIONAL WORKSHOP ON GRID COMPUTING, PROCEEDINGS, P4, DOI 10.1109/GRID.2004.14
   Anderson DP, 2002, COMMUN ACM, V45, P56, DOI 10.1145/581571.581573
   Bo Pang, 2008, Foundations and Trends in Information Retrieval, V2, P1, DOI 10.1561/1500000001
   Cipar James., 2006, Proceedings of the annual conference on USENIX'06 Annual Technical Conference, P11
   Clause J, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P21, DOI 10.1145/1985793.1985797
   Cushing R, 2013, IEEE INTERNET COMPUT, V17, P54, DOI 10.1109/MIC.2013.3
   Dean J, 2004, USENIX ASSOCIATION PROCEEDINGS OF THE SIXTH SYMPOSIUM ON OPERATING SYSTEMS DESIGN AND IMPLEMENTATION (OSDE '04), P137
   DOLEV D, 1983, SIAM J COMPUT, V12, P656, DOI 10.1137/0212045
   Du Wenliang., 2010, Algorithms and theory of computation handbook, P30
   Duda J, 2013, 2013 17TH INTERNATIONAL CONFERENCE ON SYSTEM THEORY, CONTROL AND COMPUTING (ICSTCC), P751, DOI 10.1109/ICSTCC.2013.6689051
   Edgar RC, 2004, NUCLEIC ACIDS RES, V32, P1792, DOI 10.1093/nar/gkh340
   Hinds D, 2004, COMMUN ACM, V47, P44
   Karame GO, 2014, ACM T INTERNET TECHN, V13, DOI 10.1145/2611526
   Kondo D, 2007, LECT NOTES COMPUT SC, V4641, P361
   Konishi F, 2007, CCGRID 2007: SEVENTH IEEE INTERNATIONAL SYMPOSIUM ON CLUSTER COMPUTING AND THE GRID, P661
   Krupa T., 2012, 2012 Sixth International Conference on Complex, Intelligent, and Software Intensive Systems (CISIS), P184, DOI 10.1109/CISIS.2012.79
   Langhans P, 2013, PROCEEDINGS OF THE 22ND INTERNATIONAL CONFERENCE ON WORLD WIDE WEB (WWW'13 COMPANION), P253
   Larkin MA, 2007, BIOINFORMATICS, V23, P2947, DOI 10.1093/bioinformatics/btm404
   Leighton T., 2003, US Patent, Patent No. [6,553,413, 6553413]
   Lin H., 2010, P 19 ACM INT S HIGH, P95, DOI DOI 10.1145/1851476.1851489
   Liu C, 2010, SIGIR 2010: PROCEEDINGS OF THE 33RD ANNUAL INTERNATIONAL ACM SIGIR CONFERENCE ON RESEARCH DEVELOPMENT IN INFORMATION RETRIEVAL, P379
   Machanavajjhala A, 2007, ACM T KNOWL DISCOV D, V1, P1, DOI DOI 10.1145/1217299.1217302
   Oechslin P, 2003, LECT NOTES COMPUT SC, V2729, P617
   Omoronyia I, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P632, DOI 10.1109/ICSE.2013.6606609
   Ong T.M., 2002, SIGOPS OPER SYST REV, V36, P36
   Pan Y, 2016, IEEE CONF COMM NETW, P306, DOI 10.1109/CNS.2016.7860498
   Pan Y, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P167, DOI 10.1109/ICSE.2015.38
   Pang B., 2004, ANN M ASS COMP LING, P271, DOI [10.3115/1218955.1218990, DOI 10.3115/1218955.1218990]
   PEARSON WR, 1995, PROTEIN SCI, V4, P1145, DOI 10.1002/pro.5560040613
   Puder Arno., 2013, Proceedings of the 2013 International Conference on Principles and Practices of Programming on the Java Platform: Virtual Machines, Languages, and Tools, P25, DOI DOI 10.1145/2500828.2500831
   Ryza S., 2010, MRJS JAVASCRIPT MAPR
   Sarmenta L.F.G., 2001, THESIS MASSACHUSETTS
   Sarmenta LFG, 2002, FUTURE GENER COMP SY, V18, P561, DOI 10.1016/S0167-739X(01)00077-2
   Sarmenta LFG, 1998, LECT NOTES COMPUT SC, V1368, P444
   Sarmenta LFG, 1999, FUTURE GENER COMP SY, V15, P675, DOI 10.1016/S0167-739X(99)00018-7
   Shpaer EG, 1996, GENOMICS, V38, P179, DOI 10.1006/geno.1996.0614
   Smedberg  F., 2010, THESIS
   SMITH TF, 1981, J MOL BIOL, V147, P195, DOI 10.1016/0022-2836(81)90087-5
   Spiekermann S, 2009, IEEE T SOFTWARE ENG, V35, P67, DOI 10.1109/TSE.2008.88
   Sweeney L, 2002, INT J UNCERTAIN FUZZ, V10, P557, DOI 10.1142/S0218488502001648
   Tricas F, 2007, GECCO 07, P2851, DOI DOI 10.1145/1274000.1274083
   Van der Sype YS, 2014, 2014 IEEE 7TH INTERNATIONAL WORKSHOP ON REQUIREMENTS ENGINEERING AND LAW (RELAW), P25, DOI 10.1109/RELAW.2014.6893479
   Viola P, 2001, PROC CVPR IEEE, P511, DOI 10.1109/cvpr.2001.990517
   Watanabe K, 2009, J GRID COMPUT, V7, P575, DOI 10.1007/s10723-009-9125-4
   Wei W, 2009, 25TH ANNUAL COMPUTER SECURITY APPLICATIONS CONFERENCE, P73, DOI 10.1109/ACSAC.2009.17
   WEIBULL W, 1951, J APPL MECH-T ASME, V18, P293
   Wilkinson SR, 2014, BMC BIOINFORMATICS, V15, DOI 10.1186/1471-2105-15-176
   Yang ZR, 2005, BIOINFORMATICS, V21, P3369, DOI 10.1093/bioinformatics/bti534
   Zakai A., 2011, Proceedings of the ACM international conference companion on object oriented programming systems languages and applications companion, P301, DOI DOI 10.1145/2048147.2048224
   Zhao SY, 2005, Fifth IEEE International Conference on Peer-to-Peer Computing, Proceedings, P31, DOI 10.1109/P2P.2005.32
NR 53
TC 2
Z9 2
U1 2
U2 9
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD FEB
PY 2019
VL 45
IS 2
BP 171
EP 193
DI 10.1109/TSE.2017.2772812
PG 23
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA HL5XJ
UT WOS:000458805300003
DA 2024-07-18
ER

PT J
AU Calinescu, R
   Weyns, D
   Gerasimou, S
   Iftikhar, MU
   Habli, I
   Kelly, T
AF Calinescu, Radu
   Weyns, Danny
   Gerasimou, Simos
   Iftikhar, Muhammad Usman
   Habli, Ibrahim
   Kelly, Tim
TI Engineering Trustworthy Self-Adaptive Software with Dynamic Assurance
   Cases
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Self-adaptive software systems; software engineering methodology;
   assurance evidence; assurance cases
ID TEMPORAL LOGIC; SYSTEMS; VERIFICATION
AB Building on concepts drawn from control theory, self-adaptive software handles environmental and internal uncertainties by dynamically adjusting its architecture and parameters in response to events such as workload changes and component failures. Self-adaptive software is increasingly expected to meet strict functional and non-functional requirements in applications from areas as diverse as manufacturing, healthcare and finance. To address this need, we introduce a methodology for the systematic ENgineering of TRUstworthy Self-adaptive sofTware (ENTRUST). ENTRUST uses a combination of (1) design-time and runtime modelling and verification, and (2) industry-adopted assurance processes to develop trustworthy self-adaptive software and assurance cases arguing the suitability of the software for its intended application. To evaluate the effectiveness of our methodology, we present a tool-supported instance of ENTRUST and its use to develop proof-of-concept self-adaptive software for embedded and service-based systems from the oceanic monitoring and e-finance domains, respectively. The experimental results show that ENTRUST can be used to engineer self-adaptive software systems in different application domains and to generate dynamic assurance cases for these systems.
C1 [Calinescu, Radu; Gerasimou, Simos; Habli, Ibrahim; Kelly, Tim] Univ York, Dept Comp Sci, York YO10 5DD, N Yorkshire, England.
   [Weyns, Danny] Katholieke Univ Leuven, Dept Comp Sci, B-3000 Leuven, Belgium.
   [Iftikhar, Muhammad Usman] Linnaeus Univ, Dept Comp Sci, S-35195 Vaxjo, Sweden.
C3 University of York - UK; KU Leuven; Linnaeus University
RP Calinescu, R (corresponding author), Univ York, Dept Comp Sci, York YO10 5DD, N Yorkshire, England.
EM radu.calinescu@york.ac.uk; Danny.Weyns@gmail.com;
   simos.gerasimou@york.ac.uk; usman.iftikhar@lnu.se;
   Ibrahim.Habli@york.ac.uk; tim.kelly@york.ac.uk
RI Calinescu, Radu/AAN-1912-2020; Weyns, Danny/J-1267-2018
OI Habli, Ibrahim/0000-0003-2736-8238; Kelly, Timothy
   Patrick/0000-0002-7385-2031; Weyns, Danny/0000-0002-1162-0817;
   Calinescu, Radu/0000-0002-2678-9260
CR Almeida J., 2006, Proceedings. 3rd International Conference on Autonomic Computing (IEEE Cat. No. 06EX1303), P84
   ALUR R, 1994, THEOR COMPUT SCI, V126, P183, DOI 10.1016/0304-3975(94)90010-8
   [Anonymous], 2009, VERIFICATION CONTROL
   [Anonymous], 2002, Proceedings of the 2002 ACM/IEEE Conference on Supercomputing
   [Anonymous], 2009, AUTONOMIC COMPUTING
   [Anonymous], 0056 UK MIN DEF
   [Anonymous], 2001, AUTONOMIC COMPUTING
   [Anonymous], 2010, P 18 ACM SIGSOFT INT
   [Anonymous], 2013, MARINE ROBOT AUTONOM
   [Anonymous], ACM SAC
   Aziz Adnan, 2000, ACM Trans. Comput. Logic, V1, P162, DOI DOI 10.1145/343369.343402
   Baier C, 2003, IEEE T SOFTWARE ENG, V29, P524, DOI 10.1109/TSE.2003.1205180
   Baresi L., 2010, Proceedings of the 2010 IEEE 18th International Conference on Requirements Engineering (RE2010), P125, DOI 10.1109/RE.2010.25
   Becker Basil., 2006, Proceeding of the 28th international conference on Software engineering - ICSE '06, P72
   Behrmann G, 2006, INT CONF QUANT EVAL, P125
   Bianco A., 1995, Foundations of Software Technology and Theoretical Computer Science. 15th Conference. Proceedings, P499
   Bishop PG, 1998, IND PERSPECTIVES SAF, P194, DOI DOI 10.1007/978-1-4471-1534-2_14
   Bloomfield R, 2010, MAKING SYSTEMS SAFER, P51, DOI 10.1007/978-1-84996-086-1_4
   Braberman V, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P1347, DOI 10.1109/ICSE.2013.6606714
   Brukman O, 2008, J SYST SOFTWARE, V81, P2315, DOI 10.1016/j.jss.2008.04.028
   Brun Y, 2009, LECT NOTES COMPUT SC, V5525, P48, DOI 10.1007/978-3-642-02161-9_3
   Calinescu Radu, 2012, Large-Scale Complex IT Systems. Development, Operation and Management. 17th Monterey Workshop 2012. Revised Selected Papers, P303, DOI 10.1007/978-3-642-34059-8_16
   Calinescu R., 2017, Self-Aware Computing Systems, P337
   Calinescu R., 2011, Proceedings of the 2nd ACM/SPEC International Conference on Performance Engineering, P505
   Calinescu R., 2014, P 5 ACM SPEC INT C P, P87
   Calinescu R, 2015, LECT NOTES COMPUT SC, V9033, P235, DOI 10.1007/978-3-662-46675-9_16
   Calinescu R, 2013, IEEE INT CONF AUTOM, P734, DOI 10.1109/ASE.2013.6693145
   Calinescu R, 2012, COMMUN ACM, V55, P69, DOI 10.1145/2330667.2330686
   Calinescu R, 2011, IEEE T SOFTWARE ENG, V37, P387, DOI 10.1109/TSE.2010.92
   Calinescu R, 2009, PROC INT CONF SOFTW, P100, DOI 10.1109/ICSE.2009.5070512
   Cámara J, 2017, IEEE T DEPEND SECURE, V14, P50, DOI 10.1109/TDSC.2015.2429128
   Cámara J, 2015, 30TH ANNUAL ACM SYMPOSIUM ON APPLIED COMPUTING, VOLS I AND II, P428, DOI 10.1145/2695664.2695680
   Cámara J, 2016, ACM T AUTON ADAP SYS, V10, DOI 10.1145/2774222
   Camara Javier., 2013, Assurances for Self-Adaptive Systems: Principles, Models, and Techniques
   Chen T, 2012, LECT NOTES COMPUT SC, V7214, P315, DOI 10.1007/978-3-642-28756-5_22
   Cheng Betty H. C., 2014, Models@run.time. Foundations, Applications, and Roadmaps. LNCS: 8378, P101
   Cheng BHC, 2009, LECT NOTES COMPUT SC, V5795, P468, DOI 10.1007/978-3-642-04425-0_36
   Clarke E. M., 1989, Proceedings. Fourth Annual Symposium on Logic in Computer Science (Cat. No.89CH2753-2), P353, DOI 10.1109/LICS.1989.39190
   CLARKE EM, 1986, ACM T PROGR LANG SYS, V8, P244, DOI 10.1145/5397.5399
   Cobleigh JM, 2003, LECT NOTES COMPUT SC, V2619, P331
   Common Criteria Recognition Arrangement, 15408 ISOIEC
   D'Ippolito N, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P688, DOI 10.1145/2568225.2568264
   D'Ippolito N, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P211, DOI 10.1145/1985793.1985823
   de la Iglesia DG, 2015, ACM T AUTON ADAP SYS, V10, DOI 10.1145/2724719
   de Lemos R., 2014, DAGSTUHL REPORTS, V3, P12
   de Lemos R., 2013, Lecture Notes in Computer Science, V7475, P1, DOI DOI 10.1007/978-3-642-35813-5_1
   Denney Ewen, 2013, Computer Safety, Reliability and Security. 32nd International Conference, SAFECOMP 2013. Proceedings: LNCS 8153, P21, DOI 10.1007/978-3-642-40793-2_3
   Denney E, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P587, DOI 10.1109/ICSE.2015.199
   DIppolito N. R, 2010, P INT S FOUND SOFW E, P77
   Epifani I, 2009, PROC INT CONF SOFTW, P111, DOI 10.1109/ICSE.2009.5070513
   European Organisation for the Safety of Air Navigation, 2006, SAF CAS DEV MAN ED 2
   Filieri A, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P299, DOI 10.1145/2568225.2568272
   Filieri A, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P200, DOI 10.1109/ICSE.2015.41
   Filieri A, 2012, FORM ASP COMPUT, V24, P163, DOI 10.1007/s00165-011-0207-2
   Filieri A, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P341, DOI 10.1145/1985793.1985840
   Forejt V., 2012, LNCS, V7687, P314, DOI DOI 10.1007/978-3-642-35632-2_
   Fredericks EM, 2014, 9TH INTERNATIONAL SYMPOSIUM ON SOFTWARE ENGINEERING FOR ADAPTIVE AND SELF-MANAGING SYSTEMS (SEAMS 2014), P17, DOI 10.1145/2593929.2593937
   Gallotti S, 2008, LECT NOTES COMPUT SC, V5281, P119, DOI 10.1007/978-3-540-87879-7_8
   García-Galán J, 2014, 9TH INTERNATIONAL SYMPOSIUM ON SOFTWARE ENGINEERING FOR ADAPTIVE AND SELF-MANAGING SYSTEMS (SEAMS 2014), P65, DOI 10.1145/2593929.2593930
   Garlan D, 2004, COMPUTER, V37, P46, DOI 10.1109/MC.2004.175
   Gerasimou S., 2017, P INT S SOFTW ENG AD, P83
   Gerasimou S, 2014, 9TH INTERNATIONAL SYMPOSIUM ON SOFTWARE ENGINEERING FOR ADAPTIVE AND SELF-MANAGING SYSTEMS (SEAMS 2014), P115, DOI 10.1145/2593929.2593932
   Gerasimou S, 2015, IEEE INT CONF AUTOM, P319, DOI 10.1109/ASE.2015.22
   Gherardi L, 2015, IEEE INT C INT ROBOT, P1777, DOI 10.1109/IROS.2015.7353608
   Ghezzi C, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P277, DOI 10.1145/2568225.2568234
   GSN Working Group Online, 2011, GOAL STRUCT NOT STAN
   Hansson H., 1994, Formal Aspects of Computing, V6, P512, DOI 10.1007/BF01211866
   Hawkins Richard, 2011, Computer Safety, Reliability, and Security. Proceedings 30th International Conference, SAFECOMP 2011, P185, DOI 10.1007/978-3-642-24270-0_14
   Hawkins R., 2013, P SAFECOMP WORKSH NE
   Hawkins R., 2013, P 31 INT SYST SAF C
   Hawkins R, 2013, SAFETY SCI, V59, P55, DOI 10.1016/j.ssci.2013.04.007
   Hayden CM, 2012, LECT NOTES COMPUT SC, V7152, P278, DOI 10.1007/978-3-642-27705-4_22
   Huebscher MC, 2008, ACM COMPUT SURV, V40, DOI 10.1145/1380584.1380585
   Iftikhar MU, 2014, 9TH INTERNATIONAL SYMPOSIUM ON SOFTWARE ENGINEERING FOR ADAPTIVE AND SELF-MANAGING SYSTEMS (SEAMS 2014), P125, DOI 10.1145/2593929.2593944
   Johnson Kenneth, 2013, P 16 INT ACM SIGSOFT, P33, DOI DOI 10.1145/2465449.2465456
   Karsai G, 1999, IEEE INTELL SYST APP, V14, P46, DOI 10.1109/5254.769884
   Kelly T., 2004, P ASS CAS WORKSH
   Kephart JO, 2003, COMPUTER, V36, P41, DOI 10.1109/MC.2003.1160055
   Khakpour N, 2016, FORM ASP COMPUT, V28, P21, DOI 10.1007/s00165-015-0346-y
   Knight John, 2015, Computer Safety, Reliability and Security. SAFECOMP 2015 Workshops, ASSURE, DECSoS, ISSE, ReSA4CI and SASSUR. Proceedings: LNCS 9338, P83, DOI 10.1007/978-3-319-24249-1_8
   Kramer J, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P259, DOI 10.1109/FOSE.2007.19
   Krishna C.M, 2001, REAL TIME SYSTEMS
   Krupitzer C, 2015, PERVASIVE MOB COMPUT, V17, P184, DOI 10.1016/j.pmcj.2014.09.009
   Kwiatkowska Marta, 2011, Computer Aided Verification. Proceedings 23rd International Conference, CAV 2011, P585, DOI 10.1007/978-3-642-22110-1_47
   Lahijanian M, 2015, IEEE T AUTOMAT CONTR, V60, P2031, DOI 10.1109/TAC.2015.2398883
   Littlewood B, 2007, IEEE T SOFTWARE ENG, V33, P347, DOI 10.1109/TSE.2007.1002
   Lu CY, 2002, REAL-TIME SYST, V23, P85, DOI 10.1023/A:1015398403337
   Macías-Escrivá FD, 2013, EXPERT SYST APPL, V40, P7267, DOI 10.1016/j.eswa.2013.07.033
   Magee J., 2006, INT S SOFTW ENG AD S, P30
   North European Functional Airspace Block, 2011, NEF PROJ SAF CAS REP
   Oreizy P, 1999, IEEE INTELL SYST APP, V14, P54, DOI 10.1109/5254.769885
   Pnueli A., 1977, 18th Annual Symposium on Foundations of Computer Science, P46, DOI 10.1109/SFCS.1977.32
   Psaier H, 2011, COMPUTING, V91, P43, DOI 10.1007/s00607-010-0107-y
   Quatmann T, 2016, LECT NOTES COMPUT SC, V9938, P50, DOI 10.1007/978-3-319-46520-3_4
   RAMADGE PJG, 1989, P IEEE, V77, P81, DOI 10.1109/5.21072
   Reisner E., 2010, P ACM IEEE INT C SOF, V1, P445, DOI DOI 10.1145/1806799.1806864
   Royal Academy of Engineering, 2013, EST HIGH LEV EV SAF
   Rushby J., 2015, Technical report. SRI-CSL-15-01
   Salehie M, 2009, ACM T AUTON ADAP SYS, V4, DOI 10.1145/1516533.1516538
   Schmerl B., 2017, SOFTWARE ENG SELF AD
   Schneider D, 2013, ACM T AUTON ADAP SYS, V8, DOI 10.1145/2491465.2491467
   Shevtsov S, 2018, IEEE T SOFTWARE ENG, V44, P784, DOI 10.1109/TSE.2017.2704579
   Shevtsov S, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P229, DOI 10.1145/2950290.2950301
   Sousa Gustavo, 2017, 2017 IEEE/ACM 12th International Symposium on Software Engineering for Adaptive and Self-Managing Systems (SEAMS). Proceedings, P129, DOI 10.1109/SEAMS.2017.6
   Souza VES, 2013, COMPUT SCI-RES DEV, V28, P311, DOI 10.1007/s00450-012-0232-2
   Spinellis D, 2001, J SYST SOFTWARE, V56, P91, DOI 10.1016/S0164-1212(00)00089-3
   Spriggs J., 2012, GSN - The Goal Structuring Notation, V1
   Stoller S.D., 2012, LNCS, V7186, P193, DOI [10.1007/978-3-642-29860-8_15, DOI 10.1007/978-3-642-29860-8_15]
   Su GX, 2016, LECT NOTES COMPUT SC, V9633, P269, DOI 10.1007/978-3-662-49665-7_16
   Swanson J, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P377, DOI 10.1145/2635868.2635915
   Sykes D, 2011, P 6 INT S SOFTW ENG, P100, DOI [10.1145/1988008.1988023, DOI 10.1145/1988008.1988023]
   Tamura G., 2013, SOFTWARE ENG SELF AD
   Tesauro G., 2004, P AAMAS 04, P464
   UK Civil Aviation Authority, 2015, UNM AIRCR SYST OP UK
   UK Health & Safety Commission, 1998, USE COMP SAF CRIT AP
   UK Office for Nuclear Regulation, 2016, PURP SCOP CONT SAF C
   US Dept. Health and Human Services Food and Drug Administration, 2014, INF PUMPS TOT PROD L
   Uttamchandani S, 2005, USENIX ASSOCIATION PROCEEDINGS OF THE GENERAL TRACK: 2005 UNENIX ANNUAL TECHNICAL CONFERENCE, P75
   Villegas Norha M., 2011, 2011 ICSE S SOFTW EN, P80
   Walsh WE, 2004, INTERNATIONAL CONFERENCE ON AUTONOMIC COMPUTING, PROCEEDINGS, P70, DOI 10.1109/ICAC.2004.1301349
   Weyns D., 2012, CAN C COMP SCI SOFTW, P67, DOI 10.1145/2347583.2347592
   Weyns D, 2017, Handbook of Software Engineering
   Weyns D., 2016, LECT NOTES COMPUTER, VIV
   Weyns D, 2016, PR INT CONF AUTONOM, P364, DOI 10.1109/ICAC.2016.67
   Weyns D, 2015, 2015 IEEE/ACM 10TH INTERNATIONAL SYMPOSIUM ON SOFTWARE ENGINEERING FOR ADAPTIVE AND SELF-MANAGING SYSTEMS, P88, DOI 10.1109/SEAMS.2015.27
   Weyns D, 2012, ACM T AUTON ADAP SYS, V7, DOI 10.1145/2168260.2168268
   White SR, 2004, INTERNATIONAL CONFERENCE ON AUTONOMIC COMPUTING, PROCEEDINGS, P2, DOI 10.1109/ICAC.2004.1301340
   Whittle J, 2009, PROCEEDINGS OF THE 2009 17TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, P79, DOI 10.1109/RE.2009.36
   Zamani M, 2013, SYST CONTROL LETT, V62, P949, DOI 10.1016/j.sysconle.2013.07.002
   Zhang J, 2006, J SYST SOFTWARE, V79, P1361, DOI 10.1016/j.jss.2006.02.062
   Zoghi P, 2016, ACM T AUTON ADAP SYS, V10, DOI 10.1145/2822896
NR 131
TC 97
Z9 101
U1 0
U2 18
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD NOV
PY 2018
VL 44
IS 11
BP 1039
EP 1069
DI 10.1109/TSE.2017.2738640
PG 31
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA HA1IB
UT WOS:000449964600002
OA Green Submitted, Green Accepted
DA 2024-07-18
ER

PT J
AU Shevtsov, S
   Berekmeri, M
   Weyns, D
   Maggio, M
AF Shevtsov, Stepan
   Berekmeri, Mihaly
   Weyns, Danny
   Maggio, Martina
TI Control-Theoretical Software Adaptation: A Systematic Literature Review
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Review
DE Self-adaptive software; control theory; software adaptation
ID SELF-ADAPTIVE SYSTEMS; PERFORMANCE; FEEDBACK; MANAGEMENT; QUALITY
AB Modern software applications are subject to uncertain operating conditions, such as dynamics in the availability of services and variations of system goals. Consequently, runtime changes cannot be ignored, but often cannot be predicted at design time. Control theory has been identified as a principled way of addressing runtime changes and it has been applied successfully to modify the structure and behavior of software applications. Most of the times, however, the adaptation targeted the resources that the software has available for execution (CPU, storage, etc.) more than the software application itself. This paper investigates the research efforts that have been conducted to make software adaptable by modifying the software rather than the resource allocated to its execution. This paper aims to identify: the focus of research on control-theoretical software adaptation; how software is modeled and what control mechanisms are used to adapt software; what software qualities and controller guarantees are considered. To that end, we performed a systematic literature review in which we extracted data from 42 primary studies selected from 1,512 papers that resulted from an automatic search. The results of our investigation show that even though the behavior of software is considered non-linear, research efforts use linear models to represent it, with some success. Also, the control strategies that are most often considered are classic control, mostly in the form of Proportional and Integral controllers, and Model Predictive Control. The paper also discusses sensing and actuating strategies that are prominent for software adaptation and the (often neglected) proof of formal properties. Finally, we distill open challenges for control-theoretical software adaptation.
C1 [Shevtsov, Stepan; Weyns, Danny] Linnaeus Univ, S-35195 Vaxjo, Sweden.
   [Berekmeri, Mihaly] Grenoble Inst Technol, F-38000 Grenoble, France.
   [Weyns, Danny] Katholieke Univ Leuven, Dept Comp Sci, B-3000 Leuven, Belgium.
   [Maggio, Martina] Lund Univ, Dept Automat Control, S-22362 Lund, Sweden.
C3 Linnaeus University; Communaute Universite Grenoble Alpes; Institut
   National Polytechnique de Grenoble; KU Leuven; Lund University
RP Shevtsov, S (corresponding author), Linnaeus Univ, S-35195 Vaxjo, Sweden.
EM stepan.shevtsov@lnu.se; mihaly.berekmeri@gipsa-lab.grenoble-inp.fr;
   danny.weyns@lnu.se; martina.maggio@control.lth.se
RI Weyns, Danny/J-1267-2018
OI Weyns, Danny/0000-0002-1162-0817
CR Abdelwahed S., 2004, Proceedings. RTAS 2004. 10th IEEE Real-Time and Embedded Technology and Applications Symposium, P368, DOI 10.1109/RTTAS.2004.1317283
   Abdelzaher TF, 2003, IEEE CONTR SYST MAG, V23, P74, DOI 10.1109/MCS.2003.1200252
   Abdelzaher TF, 2002, IEEE T PARALL DISTR, V13, P80, DOI 10.1109/71.980028
   Andersson J, 2009, LECT NOTES COMPUT SC, V5525, P27, DOI 10.1007/978-3-642-02161-9_2
   Angelopoulos K., 2015, P 1 INT WORKSH CONTR, P17, DOI DOI 10.1145/2804337.2804340
   Angelopoulos K, 2016, PROCEEDINGS OF 2016 IEEE/ACM 11TH INTERNATIONAL SYMPOSIUM ON SOFTWARE ENGINEERING FOR ADAPTIVE AND SELF-MANAGING SYSTEMS (SEAMS), P35, DOI [10.1109/SEAMS.2016.012, 10.1145/2897053.2897054]
   [Anonymous], 1986, SYSTEM IDENTIFICATIO
   [Anonymous], 2014, IFAC P VOLUMES
   Arcelli D, 2015, QOSA'15 PROCEEDINGS OF THE 11TH INTERNATIONAL ACM SIGSOFT CONFERENCE ON QUALITY OF SOFTWARE ARCHITECTURES, P11, DOI 10.1145/2737182.2737187
   Astrom K., 1993, Control Eng. Pract, V1, P669
   Astrom K J., 2006, ISA - The Instrumentation, Systems and Automation Society
   Baresi L., 2010, Proceedings of the 2010 IEEE 18th International Conference on Requirements Engineering (RE2010), P125, DOI 10.1109/RE.2010.25
   Basili V.R., 1994, Encyclopedia of Software Engineering, P528532
   Bhat V., 2006, Proceedings. 3rd International Conference on Autonomic Computing (IEEE Cat. No. 06EX1303), P15
   Brun Y., 2013, Collection Software Engineering fo r Self-Adaptive Systems II (SEAMS), volume 7475 of Lecture Notes in Computer Science (LNCS), V7475, P33, DOI [10.1007/978-3-642-35813-5_2, DOI 10.1007/978-3-642-35813-5_2]
   Brun Y, 2009, LECT NOTES COMPUT SC, V5525, P48, DOI 10.1007/978-3-642-02161-9_3
   Buttazzo GC, 2002, IEEE T COMPUT, V51, P289, DOI 10.1109/12.990127
   Cai KY, 2007, J SYST SOFTWARE, V80, P1328, DOI 10.1016/j.jss.2006.11.008
   Cai KY, 2005, EUR J OPER RES, V162, P552, DOI 10.1016/j.ejor.2002.11.002
   Calinescu R, 2012, COMMUN ACM, V55, P69, DOI 10.1145/2330667.2330686
   Calinescu R, 2011, IEEE T SOFTWARE ENG, V37, P387, DOI 10.1109/TSE.2010.92
   Camacho E.F., 2013, Advanced Textbooks in Control and Signal Processing
   Cangussu J. W., 2004, P 2004 ACM S APPL CO, P1546, DOI DOI 10.1145/967900.968209
   Cangussu JW, 2001, 12TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P232, DOI 10.1109/ISSRE.2001.989477
   Cheng B., 2009, SOFTWARE ENG SELF AD
   Cheng BHC, 2009, LECT NOTES COMPUT SC, V5525, P1, DOI 10.1007/978-3-642-02161-9_1
   de Lemos R., 2013, Lecture Notes in Computer Science, V7475, P1, DOI DOI 10.1007/978-3-642-35813-5_1
   de Lemos Rogerio., 2013, Software Engineering for Self-Adaptive Systems II, volume 7475 of Lecture Notes in Computer Science, V7475, P265
   De Lemos Rogerio, 2013, SOFTWARE ENG SELF AD, P1
   Desmeurs D, 2015, 2015 INTERNATIONAL CONFERENCE ON CLOUD AND AUTONOMIC COMPUTING (ICCAC), P1, DOI 10.1109/ICCAC.2015.25
   Diao YX, 2002, NOMS 2002: IEEE/IFIP NETWORK OPERATIONS AND MANAGEMENT SYMPOSIUM, P219, DOI 10.1109/NOMS.2002.1015566
   Diniz P, 1997, ACM SIGPLAN NOTICES, V32, P71, DOI 10.1145/258916.258923
   Dobson S, 2006, ACM T AUTON ADAP SYS, V1, P223, DOI 10.1145/1186778.1186782
   Dürango J, 2014, IEEE DECIS CONTR P, P5320, DOI 10.1109/CDC.2014.7040221
   Dybå T, 2008, INFORM SOFTWARE TECH, V50, P833, DOI 10.1016/j.infsof.2008.01.006
   Eracar YA, 2012, J SYST SOFTWARE, V85, P2697, DOI 10.1016/j.jss.2012.05.060
   Fescioglu-Unver N, 2011, COMPUT IND ENG, V60, P310, DOI 10.1016/j.cie.2010.11.014
   Filieri A., 2012, 2012 7th International Symposium on Software Engineering for Adaptive and Self-Managing Systems, P43, DOI 10.1109/SEAMS.2012.6224390
   Filieri A., 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P283, DOI 10.1109/ASE.2011.6100064
   Filieri A, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P13, DOI 10.1145/2786805.2786833
   Filieri A, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P299, DOI 10.1145/2568225.2568272
   Filieri A, 2015, 2015 IEEE/ACM 10TH INTERNATIONAL SYMPOSIUM ON SOFTWARE ENGINEERING FOR ADAPTIVE AND SELF-MANAGING SYSTEMS, P71, DOI 10.1109/SEAMS.2015.12
   Galster M, 2014, IEEE T SOFTWARE ENG, V40, P282, DOI 10.1109/TSE.2013.56
   Garlan D, 2004, COMPUTER, V37, P46, DOI 10.1109/MC.2004.175
   Garpinger O, 2014, J PROCESS CONTR, V24, P568, DOI 10.1016/j.jprocont.2014.02.020
   Girault A, 2009, FORM METHOD SYST DES, V35, P190, DOI 10.1007/s10703-009-0084-y
   Guitart J, 2010, CONCURR COMP-PRACT E, V22, P68, DOI 10.1002/cpe.1470
   Hellerstein Joseph L, 2004, Feedback control of computing systems
   Hoffmann H., 2010, P INT C AUT COMP ICA, P79
   Hoffmann H, 2014, EUROMICRO, P223, DOI 10.1109/ECRTS.2014.32
   Huebscher MC, 2008, ACM COMPUT SURV, V40, DOI 10.1145/1380584.1380585
   Iftikhar MU, 2014, 9TH INTERNATIONAL SYMPOSIUM ON SOFTWARE ENGINEERING FOR ADAPTIVE AND SELF-MANAGING SYSTEMS (SEAMS 2014), P125, DOI 10.1145/2593929.2593944
   Imes C, 2015, 21ST IEEE REAL-TIME AND EMBEDDED TECHNOLOGY AND APPLICATIONS SYMPOSIUM (RTAS 2015), P75, DOI 10.1109/RTAS.2015.7108419
   Jamshidi P, 2014, 9TH INTERNATIONAL SYMPOSIUM ON SOFTWARE ENGINEERING FOR ADAPTIVE AND SELF-MANAGING SYSTEMS (SEAMS 2014), P95, DOI 10.1145/2593929.2593940
   Jamshidi P, 2015, 2015 INTERNATIONAL CONFERENCE ON CLOUD AND AUTONOMIC COMPUTING (ICCAC), P208, DOI 10.1109/ICCAC.2015.35
   Ji YH, 2005, INFORM SYST RES, V16, P292, DOI 10.1287/isre.1050.0059
   Ji YH, 2011, PROD OPER MANAG, V20, P889, DOI 10.1111/J.1937-5956.2010.01215.x
   Johan Astrom K., 2021, FEEDBACK SYSTEMS INT
   Kandasamy Nagarajan., 2006, ICDCS 06 P 26 IEEE I, P9
   Karlsson N, 2016, EUR J CONTROL, V30, P31, DOI 10.1016/j.ejcon.2016.04.007
   Karlsson N, 2013, P AMER CONTR CONF, P6008
   Kephart JO, 2003, COMPUTER, V36, P41, DOI 10.1109/MC.2003.1160055
   Kitchenham B., 2007, Joint Report
   Klein C, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P700, DOI 10.1145/2568225.2568227
   Klein C, 2014, SYM REL DIST SYST, P31, DOI 10.1109/SRDS.2014.14
   Kokar MM, 1999, IEEE INTELL SYST APP, V14, P37, DOI 10.1109/5254.769883
   KRAMER J, 1990, IEEE T SOFTWARE ENG, V16, P1293, DOI 10.1109/32.60317
   Kramer J, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P259, DOI 10.1109/FOSE.2007.19
   Krikava F., 2014, P 29 ANN ACM S APPL, P391, DOI DOI 10.1145/2554850.2555020
   Krsti M., 1995, NONLINEAR ADAPTIVE C
   Kuo BC., 2002, AUTOMATIC CONTROL SY
   Levine W. S., 2010, The Control Systems Handbook: Control System Advanced Methods
   Maciejowski J. M., 2002, Predictive Control with Constraints
   Maggio M, 2013, EUROMICRO, P57, DOI 10.1109/ECRTS.2013.17
   Maggio M, 2012, ACM T AUTON ADAP SYS, V7, DOI 10.1145/2382570.2382572
   Mencagli G, 2014, ACM T AUTON ADAP SYS, V9, DOI 10.1145/2567929
   Miller SD, 2006, J SYST SOFTWARE, V79, P1486, DOI 10.1016/j.jss.2006.03.033
   Morari M., 1989, Robust process control, V1st
   Nahabedian L, 2016, PROCEEDINGS OF 2016 IEEE/ACM 11TH INTERNATIONAL SYMPOSIUM ON SOFTWARE ENGINEERING FOR ADAPTIVE AND SELF-MANAGING SYSTEMS (SEAMS), P96, DOI [10.1109/SEAMS.2016.019, 10.1145/2897053.2897056]
   Ogata K., 2001, Modern Control Engineering, V4th
   Oreizy P, 1998, PROC INT CONF SOFTW, P177, DOI 10.1109/ICSE.1998.671114
   Oreizy P, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P899
   Patikirikorala T., 2012, 2012 7th International Symposium on Software Engineering for Adaptive and Self-Managing Systems, P33, DOI 10.1109/SEAMS.2012.6224389
   Patikirikorala T., 2011, Proceedings of the 2011 Australian Control Conference (AUCC 2011), P469
   Patikirikorala T, 2012, J SYST SOFTWARE, V85, P2678, DOI 10.1016/j.jss.2012.05.077
   Patikirikorala T, 2012, CONTROL ENG PRACT, V20, P49, DOI 10.1016/j.conengprac.2011.09.003
   Peng X, 2012, J SYST SOFTWARE, V85, P2707, DOI 10.1016/j.jss.2012.04.079
   Salehie M, 2009, ACM T AUTON ADAP SYS, V4, DOI 10.1145/1516533.1516538
   Shevtsov S., 2015, P 1 INT WORKSH CONTR, P1
   Shevtsov S, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P229, DOI 10.1145/2950290.2950301
   Skogestad S., 2007, MULTIVARIABLE FEEDBA, V2
   Souza V. E. S., 2012, 2012 7th International Symposium on Software Engineering for Adaptive and Self-Managing Systems, P155, DOI 10.1109/SEAMS.2012.6224402
   Sun L, 2014, J NETW COMPUT APPL, V45, P134, DOI 10.1016/j.jnca.2014.07.019
   Villegas Norha M., 2011, 2011 ICSE S SOFTW EN, P80
   Wang Y, 2010, PROCEEDINGS OF ANNUAL CONFERENCE OF CHINA INSTITUTE OF COMMUNICATIONS, P259, DOI 10.3182/20100830-3-DE-4013.00044
   Weyns Danny, 2013, Software Architecture. 7th European Conference, ECSA 2013. Proceedings: LNCS 7584, P249, DOI 10.1007/978-3-642-39031-9_22
   Weyns D., 2012, 2012 7th International Symposium on Software Engineering for Adaptive and Self-Managing Systems, P89, DOI 10.1109/SEAMS.2012.6224395
   Weyns D, 2017, Handbook of Software Engineering
   Weyns D, 2013, PROCEEDINGS OF THE 8TH INTERNATIONAL SYMPOSIUM ON SOFTWARE ENGINEERING FOR ADAPTIVE AND SELF-MANAGING SYSTEMS (SEAMS 2013), P3, DOI 10.1109/SEAMS.2013.6595487
   Weyns D, 2012, ACM T AUTON ADAP SYS, V7, DOI 10.1145/2168260.2168268
   Xiaoyun Zhu, 2009, Operating Systems Review, V43, P62, DOI 10.1145/1496909.1496922
   Zanardi V., 2011, P 6 INT S SOFTWARE E, P11
   Zhang HF, 2010, PROCEEDINGS OF THE SECOND INTERNATIONAL POSTGRADUATE CONFERENCE ON INFRASTRUCTURE AND ENVIRONMENT, VOL 2, P111, DOI 10.1109/SOLI.2010.5551598
   Zhang P, 2010, ADVANCED INDUSTRIAL CONTROL TECHNOLOGY, P1
   Zhou K, 1996, ROBUST OPTIMAL CONTR
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
NR 116
TC 46
Z9 52
U1 0
U2 24
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD AUG
PY 2018
VL 44
IS 8
BP 784
EP 810
DI 10.1109/TSE.2017.2704579
PG 27
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA GQ6CY
UT WOS:000441791100004
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Hall, M
   Walkinshaw, N
   McMinn, P
AF Hall, Mathew
   Walkinshaw, Neil
   McMinn, Phil
TI Effectively Incorporating Expert Knowledge in Automated Software
   Remodularisation
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Software remodularisation; domain knowledge; set partitioning
ID ARCHITECTURE; ALGORITHMS; SYSTEMS
AB Remodularising the components of a software system is challenging: sound design principles (e.g., coupling and cohesion) need to be balanced against developer intuition of which entities conceptually belong together. Despite this, automated approaches to remodularisation tend to ignore domain knowledge, leading to results that can be nonsensical to developers. Nevertheless, suppling such knowledge is a potentially burdensome task to perform manually. A lot information may need to be specified, particularly for large systems. Addressing these concerns, we propose the SUpervised reMOdularisation (SUMO) approach. SUMO is a technique that aims to leverage a small subset of domain knowledge about a system to produce a remodularisation that will be acceptable to a developer. With SUMO, developers refine a modularisation by iteratively supplying corrections. These corrections constrain the type of remodularisation eventually required, enabling SUMO to dramatically reduce the solution space. This in turn reduces the amount of feedback the developer needs to supply. We perform a comprehensive systematic evaluation using 100 real world subject systems. Our results show that SUMO guarantees convergence on a target remodularisation with a tractable amount of user interaction.
C1 [Hall, Mathew; McMinn, Phil] Univ Sheffield, Dept Comp Sci, Sheffield S10 2TN, S Yorkshire, England.
   [Walkinshaw, Neil] Univ Leicester, Dept Informat, Leicester LE1 7RH, Leics, England.
C3 University of Sheffield; University of Leicester
RP Hall, M (corresponding author), Univ Sheffield, Dept Comp Sci, Sheffield S10 2TN, S Yorkshire, England.
EM mathew.hall@sheffield.ac.uk; nw91@leicester.ac.uk;
   p.mcminn@sheffield.ac.uk
RI Walkinshaw, Neil/AHA-2966-2022; Hall, Mathew/AAN-1728-2021
OI Walkinshaw, Neil/0000-0003-2134-6548; Hall, Mathew/0000-0002-9408-2996;
   McMinn, Phil/0000-0001-9137-7433
FU EPSRC [EP/F065825/1]; EPSRC [EP/F065825/1] Funding Source: UKRI
FX This research was funded by the EPSRC Grant EP/F065825/1.
CR Abdeen H, 2014, SCI COMPUT PROGRAM, V89, P298, DOI 10.1016/j.scico.2014.02.016
   Abdeen H, 2013, WORK CONF REVERSE EN, P212, DOI 10.1109/WCRE.2013.6671296
   Abdeen H, 2010, INFORM SOFTWARE TECH, V52, P1312, DOI 10.1016/j.infsof.2010.07.005
   Andreopoulos B, 2005, WCRE: 12TH WORKING CONFERENCE ON REVERSE ENGINEERING 2005, PROCEEDINGS, P79
   Andritsos P, 2005, IEEE T SOFTWARE ENG, V31, P150, DOI 10.1109/TSE.2005.25
   ANGLUIN D, 1987, INFORM COMPUT, V75, P87, DOI 10.1016/0890-5401(87)90052-6
   [Anonymous], R LANG ENV STAT COMP
   [Anonymous], 2001, P 18 INT C MACH LEAR
   [Anonymous], 2005, Proceedings of the SIGCHI conference on Human factors in computing systems
   Anquetil N., 1999, Sixth Working Conference on Reverse Engineering (Cat. No.PR00303), P235, DOI 10.1109/WCRE.1999.806964
   Anquetil N, 1999, J SOFTW MAINT-RES PR, V11, P201, DOI 10.1002/(SICI)1096-908X(199905/06)11:3<201::AID-SMR192>3.0.CO;2-1
   Anquetil N, 2011, EUR CON SFTWR MTNCE, P279, DOI 10.1109/CSMR.2011.34
   Arcuri A, 2014, SOFTW TEST VERIF REL, V24, P219, DOI 10.1002/stvr.1486
   Bavota Gabriele, 2012, Search Based Software Engineering. Proceedings of the 4th International Symposium (SSBSE 2012), P75, DOI 10.1007/978-3-642-33119-0_7
   Bavota G, 2013, EMPIR SOFTW ENG, V18, P901, DOI 10.1007/s10664-012-9226-8
   BENJAMINI Y, 1995, J R STAT SOC B, V57, P289, DOI 10.1111/j.2517-6161.1995.tb02031.x
   Bessiere C, 2007, 20TH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P50
   Candela I, 2016, ACM T SOFTW ENG METH, V25, DOI 10.1145/2928268
   Cohen M, 2006, GECCO 2006: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOL 1 AND 2, P1901
   Di Penta M, 2005, J SYST SOFTWARE, V77, P225, DOI 10.1016/j.jss.2004.03.033
   Ducasse S, 2006, PROC IEEE INT CONF S, P203
   Ducasse S, 2009, IEEE T SOFTWARE ENG, V35, P573, DOI 10.1109/TSE.2009.19
   Fraser G, 2012, PROC INT CONF SOFTW, P178, DOI 10.1109/ICSE.2012.6227195
   Garcia J., 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P552, DOI 10.1109/ASE.2011.6100123
   Glorie M, 2009, J SOFTW MAINT EVOL-R, V21, P113, DOI 10.1002/smr.401
   Hall M, 2014, PROC IEEE INT CONF S, P466, DOI 10.1109/ICSME.2014.75
   Hall M, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P472, DOI 10.1109/ICSM.2012.6405309
   Jussien Narendra., 2008, Open-Source Software for Integer and Contraint Programming, OSSICP'08, P1
   Kitchenham BA, 2002, IEEE T SOFTWARE ENG, V28, P721, DOI 10.1109/TSE.2002.1027796
   KRUSKAL WH, 1952, J AM STAT ASSOC, V47, P583, DOI 10.1080/01621459.1952.10483441
   Lutz R, 2002, LECT NOTES ARTIF INT, V2464, P61
   Marx Andreas, 2010, Proceedings 17th Working Conference on Reverse Engineering (WCRE 2010), P183, DOI 10.1109/WCRE.2010.28
   Mitchell BS, 2006, IEEE T SOFTWARE ENG, V32, P193, DOI 10.1109/TSE.2006.31
   MITCHELL TM, 1982, ARTIF INTELL, V18, P203, DOI 10.1016/0004-3702(82)90040-6
   Muller H. A., 1993, Journal of Software Maintenance: Research and Practice, V5, P181, DOI 10.1002/smr.4360050402
   PARNAS DL, 1972, COMMUN ACM, V15, P1053, DOI 10.1145/361598.361623
   Ponisio Laura, 2006, P 3 SOFTW MEAS EUR F, P91
   Popper K., 2005, The logic of scientific discovery
   Praditwong K, 2011, IEEE T SOFTWARE ENG, V37, P264, DOI 10.1109/TSE.2010.26
   ROTA GC, 1964, AM MATH MON, V71, P498, DOI 10.2307/2312585
   Sartipi K, 2000, PROG COMPREHEN, P37, DOI 10.1109/WPC.2000.852478
   SCHWANKE RW, 1991, 13TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P83, DOI 10.1109/ICSE.1991.130626
   Tonella P, 2001, IEEE T SOFTWARE ENG, V27, P351, DOI 10.1109/32.917524
   Tzerpos V., 1999, Sixth Working Conference on Reverse Engineering (Cat. No.PR00303), P187, DOI 10.1109/WCRE.1999.806959
   van Deursen A, 2004, FOURTH WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE (WICSA 2004), PROCEEDINGS, P122, DOI 10.1109/WICSA.2004.1310696
   van Deursen A., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P246, DOI 10.1109/ICSE.1999.841014
   Wen ZH, 2003, PROG COMPREHEN, P227
   Woods S., 1998, Automated Software Engineering, V5, P147, DOI 10.1023/A:1008655230736
   Wu JW, 2005, PROC IEEE INT CONF S, P525
NR 49
TC 4
Z9 4
U1 0
U2 6
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUL
PY 2018
VL 44
IS 7
BP 613
EP 630
DI 10.1109/TSE.2017.2786222
PG 18
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA GN3LJ
UT WOS:000438906900001
OA hybrid, Green Accepted
DA 2024-07-18
ER

PT J
AU Bernardeschi, C
   Domenici, A
   Masci, P
AF Bernardeschi, Cinzia
   Domenici, Andrea
   Masci, Paolo
TI A PVS-Simulink Integrated Environment for Model-Based Analysis of
   Cyber-Physical Systems
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Real-time and embedded systems; modeling techniques; specification;
   formal methods
ID IMPLANTABLE CARDIAC-PACEMAKERS; QUANTITATIVE VERIFICATION; MEDICAL
   DEVICES; TIMED AUTOMATA
AB This paper presents a methodology, with supporting tool, for formal modeling and analysis of software components in cyber-physical systems. Using our approach, developers can integrate a simulation of logic-based specifications of software components and Simulink models of continuous processes. The integrated simulation is useful to validate the characteristics of discrete system components early in the development process. The same logic-based specifications can also be formally verified using the Prototype Verification System (PVS), to gain additional confidence that the software design complies with specific safety requirements. Modeling patterns are defined for generating the logic-based specifications from the more familiar automata-based formalism. The ultimate aim of this work is to facilitate the introduction of formal verification technologies in the software development process of cyber-physical systems, which typically requires the integrated use of different formalisms and tools. A case study from the medical domain is used to illustrate the approach. A PVS model of a pacemaker is interfaced with a Simulink model of the human heart. The overall cyber-physical system is co-simulated to validate design requirements through exploration of relevant test scenarios. Formal verification with the PVS theorem prover is demonstrated for the pacemaker model for specific safety aspects of the pacemaker design.
C1 [Bernardeschi, Cinzia; Domenici, Andrea] Univ Pisa, Dept Informat Engn, I-56126 Pisa, PI, Italy.
   [Masci, Paolo] HASLab INESC TEC, P-4704553 Braga, Portugal.
   [Masci, Paolo] Univ Minho, P-4704553 Braga, Portugal.
C3 University of Pisa; Universidade do Minho; INESC TEC; Universidade do
   Minho
RP Bernardeschi, C (corresponding author), Univ Pisa, Dept Informat Engn, I-56126 Pisa, PI, Italy.
EM cinzia.bernardeschi@ing.unipi.it; Andrea.Domenici@iet.unipi.it;
   paolo.masci@inesctec.pt
RI Bernardeschi, Cinzia/AAG-8272-2019; Masci, Paolo/H-9632-2019; Domenici,
   Andrea/K-9039-2017
OI Bernardeschi, Cinzia/0000-0003-1604-4465; Masci,
   Paolo/0000-0002-0667-7763; Domenici, Andrea/0000-0003-0685-2864
FU North Portugal Regional Operational Programme (NORTE), under the
   PORTUGAL Partnership Agreement , and through the European Regional
   Development Fund (ERDF) [NORTE-01-0145-FEDER-000016]
FX We would like to thank Alexandru Mereacre (University of Oxford), who
   helped us with the Simulink model of the heart, and Cesar Munoz (NASA
   Langley Research Center), that provided support for technical aspects of
   the PVSio animation environment. Piergiuseppe Mallozzi contributed to
   this paper with his Master's thesis. We also thank the anonymous
   reviewers for their valuable comments. Paolo Masci is financed by the
   North Portugal Regional Operational Programme (NORTE 2020), under the
   PORTUGAL 2020 Partnership Agreement, and through the European Regional
   Development Fund (ERDF) within Project "NORTE-01-0145-FEDER-000016".
CR ALUR R, 1994, THEOR COMPUT SCI, V126, P183, DOI 10.1016/0304-3975(94)90010-8
   [Anonymous], 1989, CWI Q.
   [Anonymous], 2016, STAT REF
   Archer M, 2000, ANN MATH ARTIF INTEL, V29, P139, DOI 10.1023/A:1018913028597
   Attarzadeh Niaki Seyed Hosein, 2011, 2011 6th IEEE International Symposium on Industrial Embedded Systems (SIES), P238, DOI 10.1109/SIES.2011.5953667
   Back R.-J., 1998, Refinement Calculus
   Behrmann G, 2004, LECT NOTES COMPUT SC, V3185, P200
   Behrmann G, 2006, INT CONF QUANT EVAL, P125
   Bengtsson J, 2004, LECT NOTES COMPUT SC, V3098, P87, DOI 10.1007/978-3-540-27755-2_3
   Bernardeschi Cinzia, 2014, Cardiotechnix 2014. 2nd International Congress on Cardiovascular Technologies, P55
   Bernardeschi C, 2016, INFORM PROCESS LETT, V116, P409, DOI 10.1016/j.ipl.2016.02.001
   Bjorner Dines., 1978, VIENNA DEV METHOD ME
   Blochwitz T., 2011, Proc. 8th Int. Modelica Conf., Dresden, P105, DOI [10.3384/ecp11063105, DOI 10.3384/ECP11063105]
   Blockwitz T., 2012, 9 INT MOD C, P173, DOI DOI 10.3384/ECP12076173
   Boström P, 2011, LECT NOTES COMPUT SC, V6991, P291, DOI 10.1007/978-3-642-24559-6_21
   Broenink J. F., 1997, Journal A, V38, P22
   Carreño V, 2000, LECT NOTES COMPUT SC, V1869, P90
   Castillos K. C., 2013, COMPOSITIONAL AUTOMA, P316, DOI [10.1007/978-3-642-38613-8_22, DOI 10.1007/978-3-642-38613-8_22]
   Chen C, 2007, LECT NOTES COMPUT SC, V4789, P96
   Chen T, 2014, INFORM COMPUT, V236, P87, DOI 10.1016/j.ic.2014.01.014
   Chen T, 2012, REAL TIM SYST SYMP P, P263, DOI 10.1109/RTSS.2012.77
   David Alexandre, 2012, International Journal on Software Tools for Technology Transfer, V14, P703, DOI 10.1007/s10009-012-0237-y
   David A, 2010, HSSC 10: PROCEEDINGS OF THE 13TH ACM INTERNATIONAL CONFERENCE ON HYBRID SYSTEMS: COMPUTATION AND CONTROL, P91
   de Moura L, 2008, LECT NOTES COMPUT SC, V4963, P337, DOI 10.1007/978-3-540-78800-3_24
   De Nicola Rocco., 1990, Proc. of the LITP Spring school on theoretical computer science on Semantics of systems of concurrent processes, P407, DOI [10.1007/3-540-53479-2_17, DOI 10.1007/3-540-53479-2_17]
   Dwyer M. B., 1998, Proceedings of FMSP'98. Second Workshop on Formal Methods in Software Practice, P7, DOI 10.1145/298595.298598
   Fayollas C, 2017, ELECTRON P THEOR COM, P1, DOI 10.4204/EPTCS.240.1
   Fette I, 2011, 6455 RFC
   Fidge C. J., 1998, Mathematics of Program Construction. 4th International Conference, MPC'98. Proceedings, P188, DOI 10.1007/BFb0054291
   Fitzgerald J. S., 2007, VIENNA DEV METHOD, DOI [10.1002/9780470050118.ecse447, DOI 10.1002/9780470050118.ECSE447]
   Fitzgerald J, 2010, LECT NOTES COMPUT SC, V6396, P12, DOI 10.1007/978-3-642-16265-7_2
   Fulton N, 2015, LECT NOTES ARTIF INT, V9195, P527, DOI 10.1007/978-3-319-21401-6_36
   Gomes C., 2017, ACM COMPUT SURVEYS
   Hamon G, 2004, LECT NOTES COMPUT SC, V2984, P229
   Henzinger T. A., 2001, Hybrid Systems: Computation and Control. 4th International Workshop, HSCC 2001. Proceedings (Lecture Notes in Computer Science Vol.2034), P275
   HENZINGER TA, 1994, INFORM COMPUT, V111, P193, DOI 10.1006/inco.1994.1045
   Henzinger TA, 1996, IEEE S LOG, P278, DOI 10.1109/LICS.1996.561342
   Jalali L, 2014, SIMUL-T SOC MOD SIM, V90, P1268, DOI 10.1177/0037549714553151
   Jiang ZH, 2012, LECT NOTES COMPUT SC, V7214, P188, DOI 10.1007/978-3-642-28756-5_14
   Jiang ZH, 2012, P IEEE, V100, P122, DOI 10.1109/JPROC.2011.2161241
   Jiang Z, 2010, EUROMICRO, P239, DOI 10.1109/ECRTS.2010.36
   Karnopp D., 1968, ANAL SIMULATION MULT
   Kwiatkowska Marta, 2011, Computer Aided Verification. Proceedings 23rd International Conference, CAV 2011, P585, DOI 10.1007/978-3-642-22110-1_47
   Larsen P.G., 2014, SUPPORT COMODELLING, P97
   Larsen Peter Gorm., 2010, SIGSOFT Softw. Eng. Notes, V35, P1, DOI DOI 10.1145/1668862.1668864
   Lee EA, 1998, IEEE T COMPUT AID D, V17, P1217, DOI 10.1109/43.736561
   LEE EA, 1987, P IEEE, V75, P1235, DOI 10.1109/PROC.1987.13876
   Leino K. R. M., 2008, MSRTR2008194
   Masci P., 2013, ACM SIGCHI Symposium on Engineering Interactive Computing Systems, EICS'13, London, United Kingdom - June 24 - 27, 2013, P81, DOI [DOI 10.1145/2494603, DOI 10.1145/2494603.2480302]
   Masci P, 2014, LECT NOTES COMPUT SC, V8411, P200
   Masci P, 2015, LECT NOTES COMPUT SC, V9206, P470, DOI 10.1007/978-3-319-21690-4_30
   Masci P, 2014, LECT NOTES COMPUT SC, V8430, P209, DOI 10.1007/978-3-319-06200-6_16
   Munoz C., 2015, 2015 IEEEAIAA 34 DIG, P13, DOI DOI 10.1109/DASC.2015.7311421
   Munoz C., 2003, 200303 NIA
   Oladimeji P., 2013, FMIS2013, DOI [10.14279/tuj.eceasst.69.963, DOI 10.14279/TUJ.ECEASST.69.963]
   Owre S., 1996, Computer Aided Verification. 8th International Conference, CAV '96. Proceedings, P411
   Platzer A, 2008, LECT NOTES ARTIF INT, V5195, P171, DOI 10.1007/978-3-540-71070-7_15
   Rajkumar R, 2010, DES AUT CON, P731
   Reicherdt Robert, 2014, Software Engineering and Formal Methods. 12th International Conference, SEFM 2014. Proceedings: LNCS 8702, P190, DOI 10.1007/978-3-319-10431-7_14
   Rozier KY, 2016, LECT NOTES COMPUT SC, V9971, P8, DOI 10.1007/978-3-319-48869-1_2
   Sametinger J, 2015, COMMUN ACM, V58, P74, DOI 10.1145/2667218
   Sander I, 2004, IEEE T COMPUT AID D, V23, P17, DOI 10.1109/TCAD.2003.819898
   Serugendo G. D. M., 2015, P WORKSH VER ASS CO
   Shan L., 2016, THESIS
   SHEERAN M, 1998, P FORM METH COMP AID, P82, DOI DOI 10.1007/3-540-49519-3_7
   Silva B.I., 2000, Proc. 4th Conference on Automation of Mixed Processes, P323
   Smullyan R., 1995, First-order logic
   Tripakis S., 2005, ACM T EMBED COMPUT S, V4, P779, DOI DOI 10.1145/1113830.1113834
   Valero V, 2017, IEEE T SOFTWARE ENG, V43, P76, DOI 10.1109/TSE.2016.2560842
   Wang BB, 2013, IEEE ACM DIS SIM, P33, DOI 10.1109/DS-RT.2013.12
   Ye P., 2005, PROC CMSB, P216
   Zambonelli F, 2015, PERVASIVE MOB COMPUT, V17, P236, DOI 10.1016/j.pmcj.2014.12.002
NR 72
TC 34
Z9 36
U1 0
U2 11
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUN
PY 2018
VL 44
IS 6
BP 512
EP 533
DI 10.1109/TSE.2017.2694423
PG 22
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA GJ4FE
UT WOS:000435335100001
OA Green Published
DA 2024-07-18
ER

PT J
AU Medeiros, F
   Ribeiro, M
   Gheyi, R
   Apel, S
   Kstner, C
   Ferreira, B
   Carvalho, L
   Fonseca, B
AF Medeiros, Favio
   Ribeiro, Marcio
   Gheyi, Rohit
   Apel, Sven
   Kstner, Christian
   Ferreira, Bruno
   Carvalho, Luiz
   Fonseca, Baldoino
TI Discipline Matters: Refactoring of Preprocessor Directives in the #
   ifdef Hell
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Configurable systems; preprocessors; refactoring
ID C PREPROCESSOR; CODE
AB The C preprocessor is used in many C projects to support variability and portability. However, researchers and practitioners criticize the C preprocessor because of its negative effect on code understanding and maintainability and its error proneness. More importantly, the use of the preprocessor hinders the development of tool support that is standard in other languages, such as automated refactoring. Developers aggravate these problems when using the preprocessor in undisciplined ways (e.g., conditional blocks that do not align with the syntactic structure of the code). In this article, we proposed a catalogue of refactorings and we evaluated the number of application possibilities of the refactorings in practice, the opinion of developers about the usefulness of the refactorings, and whether the refactorings preserve behavior. Overall, we found 5,670 application possibilities for the refactorings in 63 real-world C projects. In addition, we performed an online survey among 246 developers, and we submitted 28 patches to convert undisciplined directives into disciplined ones. According to our results, 63 percent of developers prefer to use the refactored (i.e., disciplined) version of the code instead of the original code with undisciplined preprocessor usage. To verify that the refactorings are indeed behavior preserving, we applied them to more than 36 thousand programs generated automatically using a model of a subset of the C language, running the same test cases in the original and refactored programs. Furthermore, we applied the refactorings to three real-world projects: BusyBox, OpenSSL, and SQLite. This way, we detected and fixed a few behavioral changes, 62 percent caused by unspecified behavior in the C programming language.
C1 [Medeiros, Favio] Fed Inst Alagoas, BR-57020600 Maceio, AL, Brazil.
   [Medeiros, Favio; Gheyi, Rohit] Univ Fed Campina Grande, Dept Comp & Syst, BR-58429900 Campina Grande, PB, Brazil.
   [Ribeiro, Marcio; Ferreira, Bruno; Carvalho, Luiz; Fonseca, Baldoino] Univ Fed Alagoas, Comp Inst, BR-57072900 Maceio, AL, Brazil.
   [Apel, Sven] Univ Passau, Dept Informat & Math, D-94032 Passau, Germany.
   [Kstner, Christian] Carnegie Mellon Univ, Sch Comp Sci, Inst Software Res, Pittsburgh, PA 15213 USA.
C3 Instituto Federal de Alagoas (IFAL); Universidade Federal de Campina
   Grande; Universidade Federal de Alagoas; University of Passau; Carnegie
   Mellon University
RP Medeiros, F (corresponding author), Fed Inst Alagoas, BR-57020600 Maceio, AL, Brazil.; Medeiros, F (corresponding author), Univ Fed Campina Grande, Dept Comp & Syst, BR-58429900 Campina Grande, PB, Brazil.
EM flaviomotamedeiros@gmail.com; marcio@ic.ufal.br; rohit@dsc.ufcg.edu.br;
   apel@uni-passau.de; kaestner@cs.cmu.edu; brafaeldesouza@gmail.com;
   luiz@ic.ufal.br; baldoino@ic.ufal.br
RI Fonseca, Baldoino/JUV-2819-2023
OI Fonseca, Baldoino/0000-0002-0730-0319; Apel, Sven/0000-0003-3687-2233;
   Kastner, Christian/0000-0002-4450-4572
FU CNPq [460883/2014-3, 465614/2014-0, 306610/2013-2]; FAPEAL [PPGs
   14/2016]; CAPES [175956, 117875]; DEVASSES - European Union
   [PIRSES-GA-2013-612569]; NSF [1318808, 1552944]; Science of Security
   Lablet [H9823014C0140]; AFRL; DARPA [FA8750-16-2-0042]; German Research
   Foundation [AP 206/4, AP 206/5, AP 206/6]
FX This work has been partially supported by CNPq 460883/2014-3,
   465614/2014-0, and 306610/2013-2, FAPEAL PPGs 14/2016, CAPES 175956 and
   117875, and DEVASSES, funded by the European Union's Seventh Framework
   Programme for research, technological development and demonstration
   under grant agreement no PIRSES-GA-2013-612569. Kaestner's work has been
   supported by the NSF awards 1318808 and 1552944, the Science of Security
   Lablet (H9823014C0140), and AFRL and DARPA (FA8750-16-2-0042). Apel's
   work has been supported by the German Research Foundation (AP 206/4, AP
   206/5, and AP 206/6).
CR Adams B, 2009, AOSD'09: 8TH INTERNATIONAL CONFERENCE ON ASPECT-ORIENTED SOFTWARE DEVELOPMENT, P243
   [Anonymous], P 29 EUR C OBJ OR PR
   [Anonymous], 2013, P INT C GEN PROGR CO
   [Anonymous], P 14 INT C GEN PROGR
   [Anonymous], 2008, GUIDE ADV EMPIRICAL
   Apel S., 2013, CONCEPTS IMPLEMENTAT
   Batory D, 2003, PROC INT CONF SOFTW, P187, DOI 10.1109/ICSE.2003.1201199
   BAXTER ID, 1992, COMMUN ACM, V35, P73, DOI 10.1145/129852.129859
   Baxter ID, 2001, EIGHTH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P281, DOI 10.1109/WCRE.2001.957833
   Borba P, 2004, SCI COMPUT PROGRAM, V52, P53, DOI 10.1016/j.scico.2004.03.003
   Borba P, 2010, LECT NOTES COMPUT SC, V6255, P15, DOI 10.1007/978-3-642-14808-8_2
   Cresswell J.W., 2011, Designing and conducting mixed method research, Vsecond
   Ernst MD, 2002, IEEE T SOFTWARE ENG, V28, P1146, DOI 10.1109/TSE.2002.1158288
   Ferreira F., 2012, 2012 Sixth Brazilian Symposium on Software Components, Architectures and Reuse (SBCARS 2012), P21, DOI 10.1109/SBCARS.2012.18
   Garrido A, 2005, PROC IEEE INT CONF S, P379
   Garrido A, 2003, 18TH IEEE INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P323, DOI 10.1109/ASE.2003.1240330
   Garrido A, 2013, J SOFTW-EVOL PROC, V25, P1285, DOI 10.1002/smr.1603
   Garrido Alejandra., 2002, Proceedings of IWPSE 2002, P6
   Gazzillo P, 2012, ACM SIGPLAN NOTICES, V47, P323, DOI 10.1145/2345156.2254103
   Gousios G, 2013, IEEE WORK CONF MIN S, P233, DOI 10.1109/MSR.2013.6624034
   Jackson D., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, P730, DOI 10.1109/ICSE.2000.870482
   Jackson Daniel, 2006, Software abstractions: Logic, language, and analysis
   Kästner C, 2012, ACM T SOFTW ENG METH, V21, DOI 10.1145/2211616.2211617
   Kästner C, 2011, OOPSLA 11: PROCEEDINGS OF THE 2011 ACM INTERNATIONAL CONFERENCE ON OBJECT ORIENTED PROGRAMMING SYSTEMS LANGUAGES AND APPLICATIONS, P805
   Kästner C, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P311, DOI 10.1145/1368088.1368131
   Kastner Christian, 2009, P INT C GEN PROGR CO, P157, DOI DOI 10.1145/1621607.1621632
   Liebig J., 2013, P 2013 9 JOINT M FDN, P81, DOI DOI 10.1145/2491411.2491437
   Liebig J, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P380, DOI 10.1109/ICSE.2015.57
   Liebig Jorg, 2011, AOSD 11
   Liebig Jorg, 2010, P 32 ACM IEEE INT C, V1, P105
   Lohmann D., 2006, Operating Systems Review, V40, P191, DOI 10.1145/1218063.1217954
   McCloskey B, 2005, ESEC FSE 13, P21
   Medeiros F, 2014, J UNIVERS COMPUT SCI, V20, P746
   Mongiovi M, 2014, PROC IEEE INT CONF S, P371, DOI 10.1109/ICSME.2014.59
   Opdyke William F., 1992, THESIS
   Padioleau Y, 2009, LECT NOTES COMPUT SC, V5501, P109, DOI 10.1007/978-3-642-00722-4_9
   PLATOFF M, 1991, PROCEEDINGS - CONFERENCE ON SOFTWARE MAINTENANCE 1991, P129, DOI 10.1109/ICSM.1991.160319
   Ribeiro M, 2011, GPCE 11: PROCEEDINGS OF THE TENTH INTERNATIONAL CONFERENCE ON GENERATIVE PROGRAMMING AND COMPONENT ENGINEERING, P23
   Schäfer M, 2010, ACM SIGPLAN NOTICES, V45, P286, DOI 10.1145/1932682.1869485
   Schafer Max, 2008, P 3 WORKSH PROGR LAN, P67, DOI [10.1145/1481848.1481859., DOI 10.1145/1481848.1481859]
   Soares G, 2013, IEEE T SOFTWARE ENG, V39, P147, DOI 10.1109/TSE.2012.19
   Soares G, 2010, IEEE SOFTWARE, V27, P52, DOI 10.1109/MS.2010.63
   Some SS, 1998, PROG COMPREHEN, P118, DOI 10.1109/WPC.1998.693328
   SPENCER H, 1992, PROCEEDINGS OF THE SUMMER 1992 USENIX CONFERENCE, P185
   Spinellis D, 2003, IEEE T SOFTWARE ENG, V29, P1019, DOI 10.1109/TSE.2003.1245303
   Thüm T, 2014, ACM COMPUT SURV, V47, DOI 10.1145/2580950
   Thum T., 2012, SCI COMPUT PROGRAM, V79, P70
   Trujillo Salvador., 2006, GPCE 06 P 5 INT C GE, P191
   Vittek M, 2003, SEVENTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P101, DOI 10.1109/CSMR.2003.1192417
   Yang XJ, 2011, PLDI 11: PROCEEDINGS OF THE 2011 ACM CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P283
NR 50
TC 25
Z9 27
U1 0
U2 2
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAY
PY 2018
VL 44
IS 5
BP 453
EP 469
DI 10.1109/TSE.2017.2688333
PG 17
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA GF9RH
UT WOS:000432315500003
OA hybrid
DA 2024-07-18
ER

PT J
AU Liu, XZ
   Li, HR
   Lu, X
   Xie, T
   Mei, QZ
   Feng, F
   Mei, H
AF Liu, Xuanzhe
   Li, Huoran
   Lu, Xuan
   Xie, Tao
   Mei, Qiaozhu
   Feng, Feng
   Mei, Hong
TI Understanding Diverse Usage Patterns from Large-Scale Appstore-Service
   Profiles
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Mobile apps; app store; user behavior analysis
ID DISTRIBUTIONS
AB The prevalence of smart mobile devices has promoted the popularity of mobile applications (a.k.a. apps). Supporting mobility has become a promising trend in software engineering research. This article presents an empirical study of behavioral service profiles collected from millions of users whose devices are deployed with Wandoujia, a leading Android app-store service in China. The dataset of Wandoujia service profiles consists of two kinds of user behavioral data from using 0.28 million free Android apps, including (1) app management activities (i.e., downloading, updating, and uninstalling apps) from over 17 million unique users and (2) app network usage from over 6 million unique users. We explore multiple aspects of such behavioral data and present patterns of app usage. Based on the findings as well as derived knowledge, we also suggest some new open opportunities and challenges that can be explored by the research community, including app development, deployment, delivery, revenue, etc.
C1 [Liu, Xuanzhe; Li, Huoran; Lu, Xuan; Mei, Hong] Peking Univ, Minist Educ, Key Lab High Confidence Software Technol, Beijing 100871, Peoples R China.
   [Xie, Tao] Univ Illinois, Champaign, IL 61822 USA.
   [Mei, Qiaozhu] Univ Michigan, Ann Arbor, MI 48109 USA.
   [Feng, Feng] Wandoujia, Beijing 100084, Peoples R China.
   [Mei, Hong] Beijing Inst Technol, Beijing 100871, Peoples R China.
C3 Peking University; University of Illinois System; University of Illinois
   Urbana-Champaign; University of Michigan System; University of Michigan;
   Beijing Institute of Technology
RP Liu, XZ (corresponding author), Peking Univ, Minist Educ, Key Lab High Confidence Software Technol, Beijing 100871, Peoples R China.
EM liuxuanzhe@pku.edu.cn; lihuoran@pku.edu.cn; luxuan@pku.edu.cn;
   taoxie@illinois.edu; qmei@umich.edu; jackfeng@wandoujia.com;
   meih@pku.edu.cn
OI Mei, Qiaozhu/0000-0002-8640-1942; Lu, Xuan/0000-0003-4886-0918
FU National Basic Research Program (973) of China [2014CB347701]; Natural
   Science Foundation of China [61370020, 61421091, 61572051, 61528201,
   61529201]; National Science Foundation [CCF-1409423, CNS-1434582,
   CNS-1513939, CNS-1564274, IIS-1054199]; MCubed grant at the University
   of Michigan; Direct For Computer & Info Scie & Enginr; Division Of
   Computer and Network Systems [1513939] Funding Source: National Science
   Foundation; Direct For Computer & Info Scie & Enginr; Division of
   Computing and Communication Foundations [1409423] Funding Source:
   National Science Foundation; Div Of Information & Intelligent Systems;
   Direct For Computer & Info Scie & Enginr [1054199] Funding Source:
   National Science Foundation
FX This work was supported by the National Basic Research Program (973) of
   China under Grant No. 2014CB347701, the Natural Science Foundation of
   China (Grant No. 61370020, 61421091, 61572051, 61528201, 61529201). Tao
   Xie's work was supported in part by National Science Foundation under
   grants no. CCF-1409423, CNS-1434582, CNS-1513939, CNS-1564274. Qiaozhu
   Mei's work was supported in part by the National Science Foundation
   under grant no. IIS-1054199 and an MCubed grant at the University of
   Michigan. Xuanzhe Liu is the corresponding author of this work.
CR Adamic LA, 2000, SCIENCE, V287, DOI 10.1126/science.287.5461.2115a
   [Anonymous], 2013, ANDROID FRAGEMENTATI
   [Anonymous], 2011, Proceedings of the 13th international conference on Human computer interaction with mobile devices and services, DOI [10.1145/2037373.2037383, DOI 10.1145/2037373.2037383]
   [Anonymous], 2013, P 10 INT CROSS DISC, DOI DOI 10.1145/2461121.2461133
   Baeza-Yates R, 2015, WSDM'15: PROCEEDINGS OF THE EIGHTH ACM INTERNATIONAL CONFERENCE ON WEB SEARCH AND DATA MINING, P285, DOI 10.1145/2684822.2685302
   Barabási AL, 1999, SCIENCE, V286, P509, DOI 10.1126/science.286.5439.509
   Bohmer M., 2013, Proceedings of the SIGCHI Conference on Human Factors in Computing Systems (CHI '13), P2137, DOI DOI 10.1145/2470654.2481294
   Breiman L., 2001, Machine Learning, V45, P5, DOI 10.1023/A:1010933404324
   Calzarossa MC, 2015, ACM COMPUT SURV, V48, DOI 10.1145/2856127
   Cha M, 2007, IMC'07: PROCEEDINGS OF THE 2007 ACM SIGCOMM INTERNET MEASUREMENT CONFERENCE, P1
   Chen N, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P767, DOI 10.1145/2568225.2568263
   Chen XM, 2015, MOBICOM '15: PROCEEDINGS OF THE 21ST ANNUAL INTERNATIONAL CONFERENCE ON MOBILE COMPUTING AND NETWORKING, P40, DOI 10.1145/2789168.2790107
   Clauset A, 2009, SIAM REV, V51, P661, DOI 10.1137/070710111
   Crussell J, 2014, MOBISYS'14: PROCEEDINGS OF THE 12TH ANNUAL INTERNATIONAL CONFERENCE ON MOBILE SYSTEMS, APPLICATIONS, AND SERVICES, P123, DOI 10.1145/2594368.2594391
   Dan Han, 2012, 2012 19th Working Conference on Reverse Engineering (WCRE), P83, DOI 10.1109/WCRE.2012.18
   Ducoffe RH, 1996, J ADVERTISING RES, V36, P21
   Falaki H., 2010, P 10 ANN C INTERNET, P281, DOI DOI 10.1145/1879141.1879176
   Falaki H., 2010, P 8 INT C MOBILE SYS, P179, DOI [DOI 10.1145/1814433.1814453, 10.1145/1814433.1814453]
   Fang Z, 2017, GENET MOL RES, V16, DOI 10.4238/gmr16037446
   Figueiredo F, 2014, ACM T INTERNET TECHN, V14, DOI 10.1145/2665065
   Friedman JH, 2002, COMPUT STAT DATA AN, V38, P367, DOI 10.1016/S0167-9473(01)00065-2
   Fu B, 2013, 19TH ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING (KDD'13), P1276
   Fukuda K, 2015, IMC'15: PROCEEDINGS OF THE 2015 ACM CONFERENCE ON INTERNET MEASUREMENT CONFERENCE, P253, DOI 10.1145/2815675.2815697
   Gorla A, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P1025, DOI 10.1145/2568225.2568276
   Gui JP, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P100, DOI 10.1109/ICSE.2015.32
   Harman M., 2012, 2012 9th IEEE Working Conference on Mining Software Repositories (MSR 2012), P108, DOI 10.1109/MSR.2012.6224306
   Hecht G, 2015, IEEE INT CONF AUTOM, P236, DOI 10.1109/ASE.2015.46
   Huang JJ, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P1036, DOI 10.1145/2568225.2568301
   Jacomy M, 2014, PLOS ONE, V9, DOI 10.1371/journal.pone.0098679
   Khalid H, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P610, DOI 10.1145/2635868.2635909
   Li HR, 2016, PROCEEDINGS OF THE 25TH INTERNATIONAL CONFERENCE ON WORLD WIDE WEB (WWW'16), P1351, DOI 10.1145/2872427.2874814
   Li HR, 2015, IMC'15: PROCEEDINGS OF THE 2015 ACM CONFERENCE ON INTERNET MEASUREMENT CONFERENCE, P459, DOI 10.1145/2815675.2815686
   Li Wenhao., 2015, Proceedings of the 13th Annual International Conference on Mobile Systems, Applications, and Services, P75
   Liao ZX, 2013, PROCEEDINGS OF THE 22ND ACM INTERNATIONAL CONFERENCE ON INFORMATION & KNOWLEDGE MANAGEMENT (CIKM'13), P609, DOI 10.1145/2505515.2505529
   Liao ZX, 2013, IEEE DATA MINING, P1127, DOI 10.1109/ICDM.2013.130
   Lim SL, 2015, IEEE T SOFTWARE ENG, V41, P40, DOI 10.1109/TSE.2014.2360674
   Liu X., ACM T INFORM SYST
   Lu X, 2016, PROC INT CONF SOFTW, P3, DOI 10.1145/2884781.2884828
   Martin W, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P123, DOI 10.1109/MSR.2015.19
   Montoliu R, 2013, MULTIMED TOOLS APPL, V62, P179, DOI 10.1007/s11042-011-0982-z
   MUSA JD, 1993, IEEE SOFTWARE, V10, P14, DOI 10.1109/52.199724
   Nayebi M, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P552, DOI 10.1109/SANER.2016.116
   Newman MEJ, 2005, CONTEMP PHYS, V46, P323, DOI 10.1080/00107510500052444
   Pandita Rahul, 2013, USENIX SECURITY 13, P527
   Park Ji-Yeun, 2013, Evid Based Complement Alternat Med, V2013, P982095, DOI 10.1155/2013/982095
   Patro A, 2013, PROCEEDINGS OF THE 2013 ACM INTERNATIONAL CONFERENCE ON EMERGING NETWORKING EXPERIMENTS AND TECHNOLOGIES (CONEXT '13), P199
   Petsas Thanasis., 2013, P 2013 C INTERNET ME, P277, DOI DOI 10.1145/2504730.2504749
   Picco G.P., 2014, P FUTURE SOFTWARE EN, P13, DOI DOI 10.1145/2593882.2593884
   Rahmati A., 2012, C PAP P 14 INT C HUM, P11, DOI [DOI 10.1145/2371574.2371577, 10.1145/2371574.2371577]
   Rahmati A, 2013, IEEE T MOBILE COMPUT, V12, P1417, DOI 10.1109/TMC.2012.127
   Sani AA, 2013, MOB COMPUT COMMUN RE, V17, P15, DOI 10.1145/2557968.2557971
   Shin C, 2012, UBICOMP'12: PROCEEDINGS OF THE 2012 ACM INTERNATIONAL CONFERENCE ON UBIQUITOUS COMPUTING, P173, DOI 10.1145/2370216.2370243
   Shin C, 2013, UBICOMP'13: PROCEEDINGS OF THE 2013 ACM INTERNATIONAL JOINT CONFERENCE ON PERVASIVE AND UBIQUITOUS COMPUTING, P335
   StackOverflow, 2014, ANDR CAM FAILS
   Thomas K, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P871, DOI 10.1145/2568225.2568240
   Tibshirani R, 1996, J ROY STAT SOC B, V58, P267, DOI 10.1111/j.2517-6161.1996.tb02080.x
   Tossell Chad., 2012, P SIGCHI C HUMAN FAC, P2769
   Do TMT, 2014, PERVASIVE MOB COMPUT, V12, P79, DOI 10.1016/j.pmcj.2013.03.006
   Viennot N., 2014, 2014 ACM INT C MEAS, P221, DOI DOI 10.1145/2637364.2592003
   Villarroel L, 2016, PROC INT CONF SOFTW, P14, DOI 10.1145/2884781.2884818
   Wandoujia, 2014, WAND APP SEARCH
   Wu N, 2015, SCI CHINA INFORM SCI, V58, DOI 10.1007/s11432-014-5172-y
   Xu M., 2017, P 26 INT WORLD WID W
   Xu Q., 2011, P 2011 ACM SIGCOMM C, P329, DOI [10.1145/2068816.2068847, DOI 10.1145/2068816.2068847]
   Yan Bo., 2011, P 9 INT C MOBILE SYS, P113
   Zhou XY, 2014, P IEEE S SECUR PRIV, P409, DOI 10.1109/SP.2014.33
NR 66
TC 30
Z9 32
U1 0
U2 12
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD APR
PY 2018
VL 44
IS 4
BP 384
EP 411
DI 10.1109/TSE.2017.2685387
PG 28
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA GF4CH
UT WOS:000431906800004
OA Green Submitted, Bronze
DA 2024-07-18
ER

PT J
AU da Costa, DA
   McIntosh, S
   Shang, WY
   Kulesza, U
   Coelho, R
   Hassan, AE
AF da Costa, Daniel Alencar
   McIntosh, Shane
   Shang, Weiyi
   Kulesza, Uira
   Coelho, Roberta
   Hassan, Ahmed E.
TI A Framework for Evaluating the Results of the SZZ Approach for
   Identifying Bug-Introducing Changes
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE SZZ; evaluation framework; bug detection; software repository mining
ID PREDICTING FAULTS; SOFTWARE CHANGES; DEPENDENCE
AB The approach proposed by Sliwerski, Zimmermann, and Zeller (SZZ) for identifying bug-introducing changes is at the foundation of several research areas within the software engineering discipline. Despite the foundational role of SZZ, little effort has been made to evaluate its results. Such an evaluation is a challenging task because the ground truth is not readily available. By acknowledging such challenges, we propose a framework to evaluate the results of alternative SZZ implementations. The framework evaluates the following criteria: (1) the earliest bug appearance, (2) the future impact of changes, and (3) the realism of bug introduction. We use the proposed framework to evaluate five SZZ implementations using data from ten open source projects. We find that previously proposed improvements to SZZ tend to inflate the number of incorrectly identified bug-introducing changes. We also find that a single bug-introducing change may be blamed for introducing hundreds of future bugs. Furthermore, we find that SZZ implementations report that at least 46 percent of the bugs are caused by bug-introducing changes that are years apart from one another. Such results suggest that current SZZ implementations still lack mechanisms to accurately identify bug-introducing changes. Our proposed framework provides a systematic mean for evaluating the data that is generated by a given SZZ implementation.
C1 [da Costa, Daniel Alencar; Kulesza, Uira; Coelho, Roberta] Univ Fed Rio Grande do Norte, Dept Informat & Appl Math DIMAp, BR-59078970 Natal, RN, Brazil.
   [McIntosh, Shane] McGill Univ, Dept Elect & Comp Engn, Montreal, PQ H3A 0G4, Canada.
   [Shang, Weiyi] Concordia Univ, Dept Comp Sci & Software Engn, Montreal, PQ H4B 1R6, Canada.
   [Hassan, Ahmed E.] Queens Univ, Sch Comp, SAIL, Kingston, ON K7L 3N6, Canada.
C3 Universidade Federal do Rio Grande do Norte; McGill University;
   Concordia University - Canada; Queens University - Canada
RP da Costa, DA (corresponding author), Univ Fed Rio Grande do Norte, Dept Informat & Appl Math DIMAp, BR-59078970 Natal, RN, Brazil.
EM danielcosta@ppgsc.ufrn.br; shane.mcintosh@mcgill.ca;
   shang@encs.concordia.ca; uira@dimap.ufrn.br; roberta@dimap.ufrn.br;
   ahmed@cs.queensu.ca
RI Ali, Ahmed/HOF-4672-2023; KHALIFA, AHMED khalifa/HKF-2246-2023; Hassan,
   Ahmed/AAB-7241-2019
OI KHALIFA, AHMED khalifa/0000-0002-2918-7572; Kulesza,
   Uira/0000-0002-5467-6458; Coelho, Roberta/0000-0003-0001-435X
CR Alam O, 2012, J SYST SOFTWARE, V85, P2318, DOI 10.1016/j.jss.2012.03.028
   Alam O, 2009, PROC IEEE INT CONF S, P329, DOI 10.1109/ICSM.2009.5306313
   [Anonymous], 2005, ENCY STAT BEHAV SCI
   Asaduzzaman M., 2012, 2012 9th IEEE Working Conference on Mining Software Repositories (MSR 2012), P116, DOI 10.1109/MSR.2012.6224267
   Bernardi ML, 2012, EUR CON SFTWR MTNCE, P139, DOI 10.1109/CSMR.2012.24
   Canfora G., 2011, 2011 18th Working Conference on Reverse Engineering, P191, DOI 10.1109/WCRE.2011.31
   Charmaz K., 2014, Introducing Qualitative Methods
   Chen T, 2014, PROCEEDINGS OF THE FIFTH INTERNATIONAL SYMPOSIUM ON TEST AUTOMATION & INSTRUMENTATION, VOLS 1 AND 2, P82
   CLIFF N, 1993, PSYCHOL BULL, V114, P494, DOI 10.1037/0033-2909.114.3.494
   Cubranic D, 2003, PROC INT CONF SOFTW, P408, DOI 10.1109/ICSE.2003.1201219
   Daniel Alencarda Costa., 2014, Proceedings of the 29th Annual ACM Symposium on Applied Computing, SAC'14, P1152
   Davies S, 2014, J SOFTW-EVOL PROC, V26, P107, DOI 10.1002/smr.1619
   Ell J, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P1471, DOI 10.1109/ICSE.2013.6606748
   Eyolfson J., 2011, WORKING C MINING SOF, P153, DOI DOI 10.1145/1985441.1985464
   Fischer M, 2003, PROC IEEE INT CONF S, P23, DOI 10.1109/ICSM.2003.1235403
   Fukushima T., 2014, Proceedings of the 11th Working Conference on Mining Software Repositories, MSR 2014, P172, DOI DOI 10.1145/2597073.2597075
   Godfrey MW, 2005, IEEE T SOFTWARE ENG, V31, P166, DOI 10.1109/TSE.2005.28
   Graves TL, 2000, IEEE T SOFTWARE ENG, V26, P653, DOI 10.1109/32.859533
   Gyimóthy T, 2005, IEEE T SOFTWARE ENG, V31, P897, DOI 10.1109/TSE.2005.112
   Hassan AE, 2005, PROC IEEE INT CONF S, P263
   Hassan AE, 2009, PROC INT CONF SOFTW, P78, DOI 10.1109/ICSE.2009.5070510
   Herzig K, 2011, 22ND IEEE INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING (ISSRE), P60, DOI 10.1109/ISSRE.2011.16
   Kamei Y., 2010, Proceedings of the 26th International Conference on Software Maintenance, P1, DOI 10.1109/ICSM.2010.5609530
   Kamei Y, 2013, IEEE T SOFTWARE ENG, V39, P757, DOI 10.1109/TSE.2012.70
   Kim S, 2006, Proceedings of the 2006 international workshop on Mining software repositories, P173
   Kim S, 2008, IEEE T SOFTWARE ENG, V34, P181, DOI 10.1109/TSE.2007.70773
   Kim S, 2007, PROC INT CONF SOFTW, P489
   Kim S, 2006, IEEE INT CONF AUTOM, P81
   LaToza T. D., 2006, 28th International Conference on Software Engineering Proceedings, P492, DOI 10.1145/1134285.1134355
   Lerner M., 1994, SOFTW DEV, V2, P65
   Leys C, 2013, J EXP SOC PSYCHOL, V49, P764, DOI 10.1016/j.jesp.2013.03.013
   Luo Li P., 2006, 28th International Conference on Software Engineering Proceedings, P413, DOI 10.1145/1134285.1134343
   Mijung Kim, 2010, Proceedings of the Third IEEE International Conference on Software Testing, Verification and Validation (ICST 2010), P383, DOI 10.1109/ICST.2010.63
   Mizuno O., 2010, INT J STW ENG APPL, V4, P43
   Mockus A, 2000, PROC IEEE INT CONF S, P120, DOI 10.1109/ICSM.2000.883028
   Mockus A, 2000, BELL LABS TECH J, V5, P169, DOI 10.1002/bltj.2229
   Nagappan N, 2005, PROC INT CONF SOFTW, P284, DOI 10.1145/1062455.1062514
   Ostrand TJ., 2004, Proceedings of the 2004 ACM SIGSOFT International Symposium on Software Testing and Analysis, ISSTA '04, V29, P86, DOI [DOI 10.1145/1013886.1007524, 10.1145/1013886.1007524]
   Pan K, 2009, EMPIR SOFTW ENG, V14, P286, DOI 10.1007/s10664-008-9077-5
   Prechelt L, 2014, INFORM SOFTWARE TECH, V56, P1377, DOI 10.1016/j.infsof.2014.05.001
   Rahman F, 2012, EMPIR SOFTW ENG, V17, P503, DOI 10.1007/s10664-011-9195-3
   Rahman F, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P491, DOI 10.1145/1985793.1985860
   Servant F., 2012, P ACM SIGSOFT 20 INT, P43
   Shivaji S, 2013, IEEE T SOFTWARE ENG, V39, P552, DOI 10.1109/TSE.2012.43
   Sinha VibhaSinghal., 2010, Proc. of 3rd India Software Engineering Conf, P3
   Sliwerski J., 2005, ACM SIGSOFT SOFTWARE, P1, DOI DOI 10.1145/1082983.1083147
   Sliwerski J., 2005, P 5 JOINT M EUROPEAN, P107
   Souza R, 2015, IEEE SOFTWARE, V32, P88, DOI 10.1109/MS.2015.30
   Steidl Daniela, 2014, P WORK C MIN SOFTW R, P42
   Williams C, 2008, P 2008 WORKSHOP DEFE, P32
   Williams C.C., 2008, INT WORKING C MINING, P19
   Yang H., 2014, P INT C SOFTWARE ENG, P620
   Zimmermann T., 2006, P 2006 INT WORKSHOP, P72, DOI DOI 10.1145/1137983.1138001
   Zimmermann Thomas., Mining version archives to guide software changes
NR 54
TC 113
Z9 119
U1 0
U2 5
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUL 1
PY 2017
VL 43
IS 7
BP 641
EP 657
DI 10.1109/TSE.2016.2616306
PG 17
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA FA8OD
UT WOS:000405704400003
DA 2024-07-18
ER

PT J
AU Jing, XY
   Wu, F
   Dong, XW
   Xu, BW
AF Jing, Xiao-Yuan
   Wu, Fei
   Dong, Xiwei
   Xu, Baowen
TI An Improved SDA Based Defect Prediction Framework for Both
   Within-Project and Cross-Project Class-Imbalance Problems
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Software defect prediction (SDP); within-project class-imbalance;
   cross-project class-imbalance; improved subclass discriminant analysis
   (ISDA); ISDA based defect prediction framework
ID NEURAL-NETWORKS; SOFTWARE; CLASSIFICATION; MACHINE; QUALITY; MODELS
AB Background. Solving the class-imbalance problem of within-project software defect prediction (SDP) is an important research topic. Although some class-imbalance learning methods have been presented, there exists room for improvement. For cross project SDP, we found that the class-imbalanced source usually leads to misclassification of defective instances. However, only one work has paid attention to this cross-project class-imbalance problem. Objective. We aim to provide effective solutions for both within project and cross-project class-imbalance problems. Method. Subclass discriminant analysis (SDA), an effective feature learning method, is introduced to solve the problems. It can learn features with more powerful classification ability from original metrics. For within-project prediction, we improve SDA for achieving balanced subclasses and propose the improved SDA (ISDA) approach. For cross-project prediction, we employ the semi-supervised transfer component analysis (SSTCA) method to make the distributions of source and target data consistent, and propose the SSTCAi-ISDA prediction approach. Results. Extensive experiments on four widely used datasets indicate that: 1) ISDA-based solution performs better than other state-of-the-art methods for within-project class imbalance problem; 2) SSTCAi-ISDA proposed for cross-project class-imbalance problem significantly outperforms related methods. Conclusion. Within-project and cross-project class-imbalance problems greatly affect prediction performance, and we provide a unified and effective prediction framework for both problems.
C1 [Jing, Xiao-Yuan; Wu, Fei; Dong, Xiwei; Xu, Baowen] Wuhan Univ, Sch Comp, State Key Lab Software Engn, Wuhan 430072, Peoples R China.
   [Jing, Xiao-Yuan; Wu, Fei; Dong, Xiwei] Nanjing Univ Posts & Telecommun, Coll Automat, Nanjing 210041, Jiangsu, Peoples R China.
   [Xu, Baowen] Nanjing Univ, Dept Comp Sci & Technol, Nanjing 210041, Jiangsu, Peoples R China.
C3 Wuhan University; Nanjing University of Posts & Telecommunications;
   Nanjing University
RP Jing, XY (corresponding author), Wuhan Univ, Sch Comp, State Key Lab Software Engn, Wuhan 430072, Peoples R China.; Jing, XY (corresponding author), Nanjing Univ Posts & Telecommun, Coll Automat, Nanjing 210041, Jiangsu, Peoples R China.
EM jingxy_2000@126.com; mailfeiwu@163.com; dongxwjx@yeah.net;
   bwxu@nju.edu.cn
RI Xu, Baowen/IXW-4882-2023; He, Chen/JLM-5059-2023
OI Xu, Baowen/0000-0001-7743-1296; Wu, Fei/0000-0001-5498-4947
FU National Nature Science Foundation of China [61272273, 61572375,
   61233011, 91418202, 61472178]; Chinese 973 Program [2014CB340702]; NJUPT
   [XJKY14016]
FX The authors want to thank the Editors and anonymous reviewers for their
   constructive comments and suggestions. The work described in this paper
   was supported by the National Nature Science Foundation of China under
   Projects No. 61272273, No. 61572375, No. 61233011, No. 91418202, and No.
   61472178, the Chinese 973 Program under Project No. 2014CB340702, and
   the Research Project of NJUPT (XJKY14016). Xiao-Yuan ling and Baowen Xu
   are the corresponding authors.
CR [Anonymous], 2007, The promise repository of empirical software engineering data
   [Anonymous], 2010, P INT JOINT C NEUR N
   [Anonymous], J APPL MATH
   [Anonymous], 2005, ADV NEURAL INF PROCE
   [Anonymous], P 9 JOINT M FDN SOFT
   [Anonymous], 2001, PATTERN CLASSIFICAT
   [Anonymous], 2010, P 19 ANN WIR OPT COM
   [Anonymous], 2008, Proceedings of the 4th International Workshop on Predictor Models in Software Engineering, PROMISE '08
   Bezerra MER, 2011, IEEE SYS MAN CYBERN, P2515, DOI 10.1109/ICSMC.2011.6084055
   Bradley AP, 1997, PATTERN RECOGN, V30, P1145, DOI 10.1016/S0031-3203(96)00142-2
   Briand LC, 2002, IEEE T SOFTWARE ENG, V28, P706, DOI 10.1109/TSE.2002.1019484
   Canfora G, 2013, 2013 IEEE SIXTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST 2013), P252, DOI 10.1109/ICST.2013.38
   Chawla NV, 2002, J ARTIF INTELL RES, V16, P321, DOI 10.1613/jair.953
   Cheung S.-C., 2011, P 19 ACM SIGSOFT S 1, P15
   CLIFF N, 1993, PSYCHOL BULL, V114, P494, DOI 10.1037/0033-2909.114.3.494
   Cruz AEC, 2009, INT SYMP EMP SOFTWAR, P461
   D'Ambros M, 2012, EMPIR SOFTW ENG, V17, P531, DOI 10.1007/s10664-011-9173-9
   Dai W., 2007, Proceedings of the National Conference on Artificial Intelligence, V1
   del Río S, 2014, INFORM SCIENCES, V285, P112, DOI 10.1016/j.ins.2014.03.043
   Demsar J, 2006, J MACH LEARN RES, V7, P1
   Duan LX, 2009, PROC CVPR IEEE, P1375, DOI [10.1109/CVPRW.2009.5206747, 10.1109/CVPR.2009.5206747]
   DUNN OJ, 1961, J AM STAT ASSOC, V56, P52, DOI 10.2307/2282330
   Elish KO, 2008, J SYST SOFTWARE, V81, P649, DOI 10.1016/j.jss.2007.07.040
   Fernández A, 2008, FUZZY SET SYST, V159, P2378, DOI 10.1016/j.fss.2007.12.023
   Fukushima T., 2014, Proceedings of the 11th Working Conference on Mining Software Repositories, MSR 2014, P172, DOI DOI 10.1145/2597073.2597075
   Gayatri N, 2010, LECT NOTES ENG COMP, P124
   Ghotra B, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P789, DOI 10.1109/ICSE.2015.91
   Gray D, 2009, COMM COM INF SC, V43, P223
   Hall T, 2012, IEEE T SOFTWARE ENG, V38, P1276, DOI 10.1109/TSE.2011.103
   He ZM, 2012, AUTOMAT SOFTW ENG, V19, P167, DOI 10.1007/s10515-011-0090-3
   Inozemtseva L, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P435, DOI 10.1145/2568225.2568271
   Jiang Y, 2008, EMPIR SOFTW ENG, V13, P561, DOI 10.1007/s10664-008-9079-3
   Jing XY, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P414, DOI 10.1145/2568225.2568320
   Jing XY, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P496, DOI 10.1145/2786805.2786813
   Kamei Y, 2016, EMPIR SOFTW ENG, V21, P2072, DOI 10.1007/s10664-015-9400-x
   Kamei Y, 2013, IEEE T SOFTWARE ENG, V39, P757, DOI 10.1109/TSE.2012.70
   Kocaguneli E, 2015, EMPIR SOFTW ENG, V20, P813, DOI 10.1007/s10664-014-9300-5
   Kotsiantis S., 2006, International Journal of Computer Science, V1, P111
   Liu MX, 2014, IEEE T RELIAB, V63, P676, DOI 10.1109/TR.2014.2316951
   Ma Y, 2012, INFORM SOFTWARE TECH, V54, P248, DOI 10.1016/j.infsof.2011.09.007
   Maratea A, 2014, INFORM SCIENCES, V257, P331, DOI 10.1016/j.ins.2013.04.016
   Menzies T, 2007, IEEE T SOFTWARE ENG, V33, P2, DOI 10.1109/TSE.2007.256941
   Menzies T, 2013, IEEE SOFTWARE, V30, P31, DOI 10.1109/MS.2013.86
   Menzies T, 2013, IEEE T SOFTWARE ENG, V39, P822, DOI 10.1109/TSE.2012.83
   Minku LL, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P446, DOI 10.1145/2568225.2568228
   Nam J, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P382, DOI 10.1109/ICSE.2013.6606584
   Paikari E, 2012, INT J SOFTW ENG KNOW, V22, P747, DOI 10.1142/S0218194012400116
   Pan SJ, 2011, IEEE T NEURAL NETWOR, V22, P199, DOI 10.1109/TNN.2010.2091281
   Pan SinnoJialin., 2010, P 19 INT C WORLD WID, P751, DOI DOI 10.1145/1772690.1772767
   Panichella A, 2014, 2014 SOFTWARE EVOLUTION WEEK - IEEE CONFERENCE ON SOFTWARE MAINTENANCE, REENGINEERING, AND REVERSE ENGINEERING (CSMR-WCRE), P164, DOI 10.1109/CSMR-WCRE.2014.6747166
   Pelayo L, 2012, IEEE T RELIAB, V61, P516, DOI 10.1109/TR.2012.2183912
   Peters F, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P801, DOI 10.1109/ICSE.2015.92
   Rahman F, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P424, DOI 10.1145/2568225.2568269
   Ramanathan Murali Krishna, 2013, P 9 JOINT M EUR SOFT, DOI DOI 10.1145/2491411.2501854
   Ryu D, 2016, EMPIR SOFTW ENG, V21, P43, DOI 10.1007/s10664-014-9346-4
   Seiffert C, 2009, IEEE T SYST MAN CY A, V39, P1283, DOI 10.1109/TSMCA.2009.2027131
   Seliya N, 2011, WIRES DATA MIN KNOWL, V1, P448, DOI 10.1002/widm.38
   Shepperd M, 2014, IEEE T SOFTWARE ENG, V40, P603, DOI 10.1109/TSE.2014.2322358
   Shepperd M, 2013, IEEE T SOFTWARE ENG, V39, P1208, DOI 10.1109/TSE.2013.11
   Sun ZB, 2012, IEEE T SYST MAN CY C, V42, P1806, DOI 10.1109/TSMCC.2012.2226152
   Tan M, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P99, DOI 10.1109/ICSE.2015.139
   Thomas Zimmermann., 2009, P THE 7 JOINT M EURO, P91, DOI DOI 10.1145/1595696.1595713
   Thwin MMT, 2005, J SYST SOFTWARE, V76, P147, DOI 10.1016/j.jss.2004.05.001
   Turhan B, 2009, EMPIR SOFTW ENG, V14, P540, DOI 10.1007/s10664-008-9103-7
   Turhan B, 2009, DATA KNOWL ENG, V68, P278, DOI 10.1016/j.datak.2008.10.005
   TURK M, 1991, J COGNITIVE NEUROSCI, V3, P71, DOI 10.1162/jocn.1991.3.1.71
   Wang J, 2012, INT CONF QUAL SOFTW, P13, DOI 10.1109/QSIC.2012.19
   Wang S, 2013, IEEE T RELIAB, V62, P434, DOI 10.1109/TR.2013.2259203
   Watanabe S., 2008, P 4 INT WORKSH PRED, P19
   Yan Z, 2010, LECT NOTES COMPUT SC, V6064, P17
   Yang XX, 2015, IEEE T RELIAB, V64, P234, DOI 10.1109/TR.2014.2370891
   Yang XL, 2015, 2015 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE SECURITY AND RELIABILITY (QRS 2015), P17, DOI 10.1109/QRS.2015.14
   Yue Jiang, 2008, 2008 IEEE International Symposium on Software Reliability Engineering, P197, DOI 10.1109/ISSRE.2008.54
   Zhang F., 2014, P 11 WORK C MIN SOFT, P182, DOI [10.1145/2597073.2597078, DOI 10.1145/2597073.2597078]
   Zheng J, 2010, EXPERT SYST APPL, V37, P4537, DOI 10.1016/j.eswa.2009.12.056
   Zhimin He, 2013, 2013 ACM / IEEE International Symposium on Empirical Software Engineering and Measurement (ESEM), P45, DOI 10.1109/ESEM.2013.20
   Zhu ML, 2006, IEEE T PATTERN ANAL, V28, P1274, DOI 10.1109/TPAMI.2006.172
   Zimmermann T, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P531, DOI 10.1145/1368088.1368161
NR 78
TC 140
Z9 142
U1 4
U2 44
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD APR 1
PY 2017
VL 43
IS 4
BP 321
EP 339
DI 10.1109/TSE.2016.2597849
PG 19
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA ES7IH
UT WOS:000399722800002
DA 2024-07-18
ER

PT J
AU Moreno, L
   Bavota, G
   Di Penta, M
   Oliveto, R
   Marcus, A
   Canfora, G
AF Moreno, Laura
   Bavota, Gabriele
   Di Penta, Massimiliano
   Oliveto, Rocco
   Marcus, Andrian
   Canfora, Gerardo
TI ARENA: An Approach for the Automated Generation of Release Notes
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Release notes; software documentation; software evolution
ID CONTEXT
AB Release notes document corrections, enhancements, and, in general, changes that were implemented in a new release of a software project. They are usually created manually and may include hundreds of different items, such as descriptions of new features, bug fixes, structural changes, new or deprecated APIs, and changes to software licenses. Thus, producing them can be a time-consuming and daunting task. This paper describes ARENA (Automatic RElease Notes generAtor), an approach for the automatic generation of release notes. ARENA extracts changes from the source code, summarizes them, and integrates them with information from versioning systems and issue trackers. ARENA was designed based on the manual analysis of 990 existing release notes. In order to evaluate the quality of the release notes automatically generated by ARENA, we performed four empirical studies involving a total of 56 participants (48 professional developers and eight students). The obtained results indicate that the generated release notes are very good approximations of the ones manually produced by developers and often include important information that is missing in the manually created release notes.
C1 [Moreno, Laura] Univ Texas Dallas, Software Engn, Richardson, TX 75080 USA.
   [Marcus, Andrian] Univ Texas Dallas, Richardson, TX 75080 USA.
   [Bavota, Gabriele] Univ Lugano, CH-6900 Lugano, Switzerland.
   [Di Penta, Massimiliano] Univ Sannio, I-82100 Benevento, Italy.
   [Canfora, Gerardo] Univ Sannio, Fac Engn, Comp sci, I-82100 Benevento, Italy.
   [Oliveto, Rocco] Univ Molise, I-86100 Pesche, IS, Italy.
   [Oliveto, Rocco] Univ Molise, Comp Sci Program, I-86100 Pesche, IS, Italy.
   [Oliveto, Rocco] Univ Molise, Lab Comp Sci & Sci Computat CSSC Lab, I-86100 Pesche, IS, Italy.
C3 University of Texas System; University of Texas Dallas; University of
   Texas System; University of Texas Dallas; Universita della Svizzera
   Italiana; University of Sannio; University of Sannio; University of
   Molise; University of Molise; University of Molise
RP Moreno, L (corresponding author), Univ Texas Dallas, Software Engn, Richardson, TX 75080 USA.
EM lmorenoc@utdallas.edu; gabriele.bavota@usi.ch; dipenta@unisannio.it;
   rocco.oliveto@unimol.it; amarcus@utdallas.edu; canfora@unisannio.it
RI Di Penta, Massimiliano/AAF-9656-2021
OI BAVOTA, Gabriele/0000-0002-2216-3148; Canfora,
   Gerardo/0000-0003-0049-1279; Marcus, Andrian/0000-0001-5450-5598
FU National Science Foundation [CCF-1526118, CCF-0845706]; Markos project -
   European Commission [FP7-317743]; Division of Computing and
   Communication Foundations; Direct For Computer & Info Scie & Enginr
   [1526929] Funding Source: National Science Foundation; Division of
   Computing and Communication Foundations; Direct For Computer & Info Scie
   & Enginr [1526118] Funding Source: National Science Foundation
FX The authors would like to thank all the participants of our four
   studies. Laura Moreno and Andrian Marcus are supported in part by grants
   from the National Science Foundation (CCF-1526118 and CCF-0845706).
   Gerardo Canfora and Massimiliano Di Penta are partially supported by the
   Markos project, funded by the European Commission under Contract Number
   FP7-317743.
CR Abebe SL, 2016, EMPIR SOFTW ENG, V21, P1107, DOI 10.1007/s10664-015-9377-5
   [Anonymous], 2010, P IEEE ACM INT C AUT
   [Anonymous], 2010, Proceedings of the International Conference on Software Maintenance (ICSM)
   Antoniol G, 2004, 7TH INTERNATIONAL WORKSHOP ON PRINCIPLES OF SOFTWARE EVOLUTION, P31, DOI 10.1109/IWPSE.2004.1334766
   Antoniol G, 2008, P 2008 C CTR ADV STU, P304
   Bacchelli A., 2010, Proceedings of the 32nd International Conference on Software Engineering, P375
   Baeza-Yates Ricardo, 1999, MODERN INFORM RETRIE, V463
   Bernstein A., 2010, P 18 ACM SIGSOFT INT, P97
   Bird Christian, 2006, P MSR, P137, DOI DOI 10.1145/1137983.1138016
   Canfora G., 2011, Proceedings of the 8th Working Conference on Mining Software Repositories (MSR'11), P143, DOI DOI 10.1145/1985441.1985463
   Canfora G, 2014, EMPIR SOFTW ENG, V19, P1, DOI 10.1007/s10664-012-9214-z
   Cheung S.-C., 2011, P 19 ACM SIGSOFT S 1, P15
   Collard ML, 2003, PROG COMPREHEN, P134
   Corley C.S., 2011, P 6 INT WORKSHOP TRA, P31
   De Lucia A., 2012, 2012 IEEE 20th International Conference on Program Comprehension, P193
   Cortés-Coy LF, 2014, IEEE INT WORK C SO, P275, DOI 10.1109/SCAM.2014.14
   Fischer M, 2003, PROC IEEE INT CONF S, P23, DOI 10.1109/ICSM.2003.1235403
   German Daniel M., 2010, P 25 IEEE ACM INT C, P437, DOI [10.1145/1858996.1859088, DOI 10.1145/1858996.1859088]
   Godfrey MW, 2005, IEEE T SOFTWARE ENG, V31, P166, DOI 10.1109/TSE.2005.28
   Haiduc S., 2010, Proceedings 17th Working Conference on Reverse Engineering (WCRE 2010), P35, DOI 10.1109/WCRE.2010.13
   Hassan AE, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P349, DOI 10.1109/ICSE.2002.1007981
   Herzig K, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P392, DOI 10.1109/ICSE.2013.6606585
   Kagdi H, 2007, J SOFTW MAINT EVOL-R, V19, P77, DOI 10.1002/smr.344
   Koschke R, 2002, PROC IEEE INT CONF S, P478, DOI 10.1109/ICSM.2002.1167807
   Lotufo R, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P430, DOI 10.1109/ICSM.2012.6405303
   Mani S., 2012, P ACM SIGSOFT 20 INT, P1, DOI DOI 10.1145/2393596.2393607
   Maqbool O, 2007, IEEE T SOFTWARE ENG, V33, P759, DOI 10.1109/TSE.2007.70732
   McBurney P. W., 2014, P 22 INT C PROGRAM C, P279
   Moreno L, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P484, DOI 10.1145/2635868.2635870
   Moreno L, 2013, CONF PROC INT SYMP C, P230, DOI 10.1109/ICPC.2013.6613855
   Moreno L, 2013, CONF PROC INT SYMP C, P23, DOI 10.1109/ICPC.2013.6613830
   Oppenheim A.N., 1992, QUESTIONNAIRE DESIGN
   PORTER MF, 1980, PROGRAM-AUTOM LIBR, V14, P130, DOI 10.1108/eb046814
   Rastkar S, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P1193, DOI 10.1109/ICSE.2013.6606676
   Rastkar Sarah, 2010, P 32 ACM IEEE INT C, V1, P505, DOI DOI 10.1145/1806799.1806872
   Ratzinger J., 2008, Proceedings of the 2008 international working conference on Mining software repositories, P35, DOI [10.1145/1370750.1370759, DOI 10.1145/1370750.1370759]
   Rodeghero P, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P390, DOI 10.1145/2568225.2568247
   Sridhara Giriprasad, 2010, 25 IEEEACM INT C AUT, P43
   Wu JW, 2005, PROC IEEE INT CONF S, P525
NR 39
TC 60
Z9 64
U1 0
U2 17
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD FEB 1
PY 2017
VL 43
IS 2
BP 106
EP 127
DI 10.1109/TSE.2016.2591536
PG 22
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA EN0XX
UT WOS:000395735900001
OA hybrid
DA 2024-07-18
ER

PT J
AU Giardino, C
   Paternoster, N
   Unterkalmsteiner, M
   Gorschek, T
   Abrahamsson, P
AF Giardino, Carmine
   Paternoster, Nicolo
   Unterkalmsteiner, Michael
   Gorschek, Tony
   Abrahamsson, Pekka
TI Software Development in Startup Companies: The Greenfield Startup Model
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Software development; startups; grounded theory
ID PRODUCT-DEVELOPMENT; GROUNDED THEORY; HIGH-TECH; TIME; PERFORMANCE;
   SUCCESS
AB Software startups are newly created companies with no operating history and oriented towards producing cutting-edge products. However, despite the increasing importance of startups in the economy, few scientific studies attempt to address software engineering issues, especially for early-stage startups. If anything, startups need engineering practices of the same level or better than those of larger companies, as their time and resources are more scarce, and one failed project can put them out of business. In this study we aim to improve understanding of the software development strategies employed by startups. We performed this state-of-practice investigation using a grounded theory approach. We packaged the results in the Greenfield Startup Model (GSM), which explains the priority of startups to release the product as quickly as possible. This strategy allows startups to verify product and market fit, and to adjust the product trajectory according to early collected user feedback. The need to shorten time-to-market, by speeding up the development through low-precision engineering activities, is counterbalanced by the need to restructure the product before targeting further growth. The resulting implications of the GSM outline challenges and gaps, pointing out opportunities for future research to develop and validate engineering practices in the startup context.
C1 [Giardino, Carmine] Free Univ Bolzano Bozen, Fac Comp Sci, Dominikanerpl 3, I-39100 Bolzano, Italy.
   [Paternoster, Nicolo; Unterkalmsteiner, Michael; Gorschek, Tony] Blekinge Inst Technol, Software Engn Res Lab Sweden, Campus Grasvik, S-37179 Karlskrona, Sweden.
   [Abrahamsson, Pekka] Norwegian Univ Sci & Technol NTNU, Dept Comp & Informat Sci, Sem Saelandsvei 7-97491, Trondheim, Norway.
C3 Free University of Bozen-Bolzano; Blekinge Institute Technology;
   Norwegian University of Science & Technology (NTNU)
RP Giardino, C (corresponding author), Free Univ Bolzano Bozen, Fac Comp Sci, Dominikanerpl 3, I-39100 Bolzano, Italy.
EM carmine.giardino@gmail.com; paternoster.nicolo@gmail.com; mun@bth.se;
   tony.gorschek@bth.se; pekkaa@ntnu.no
RI Abrahamsson, Pekka/A-5559-2018
OI Abrahamsson, Pekka/0000-0002-4360-2226; Unterkalmsteiner,
   Michael/0000-0003-4118-0952
CR Abrahamsson P., 2002, Agile Software Development Methods: Review and Analysis
   Adolph S., 2011, Proceedings of the 2011 Agile Conference, P48, DOI 10.1109/AGILE.2011.43
   Alves C. F., 2006, P WORKSH ENG REQ RIO, P61
   Ambler SW, 2002, IEEE SOFTWARE, V19, P66, DOI 10.1109/52.991334
   [Anonymous], THESIS
   [Anonymous], 2012, Models in science
   [Anonymous], 2013, 4 INT WORKSH MAN TEC
   [Anonymous], 2002, P INT WORKSH REQ ENG
   Aoyama M, 2005, 13TH IEEE INTERNATIONAL CONFERENCE ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P85, DOI 10.1109/RE.2005.50
   Aranda GN, 2006, 2006 IEEE INTERNATIONAL CONFERENCE ON GLOBAL SOFTWARE ENGINEERING, PROCEEDINGS, P223, DOI 10.1109/ICGSE.2006.261236
   Archibald TW, 2007, EUR J OPER RES, V179, P97, DOI 10.1016/j.ejor.2006.01.044
   Azzone G, 2008, TECHNOL FORECAST SOC, V75, P1324, DOI 10.1016/j.techfore.2007.10.004
   Bach J, 1998, COMPUTER, V31, P111, DOI 10.1109/2.652976
   Banker RD, 1998, MANAGE SCI, V44, P433, DOI 10.1287/mnsc.44.4.433
   Baskerville R, 2003, IEEE SOFTWARE, V20, P70, DOI 10.1109/MS.2003.1241369
   Basri S, 2011, COMM COM INF SC, V253, P62
   Bean L, 2005, J CORP ACCOUNT FINAN, V16, P3, DOI 10.1002/jcaf.20128
   Beck K., 2000, EXTREME PROGRAMMING
   Berry D., 1992, CMUSEI92TR34
   Blank S., 2013, 4 STEPS EPIPHANY SUC
   Borodovsky Slava, 2011, 2011 IEEE 11 INT C D, P733, DOI DOI 10.1109/ICDMW.2011.19
   BROOKS FP, 1987, COMPUTER, V20, P10, DOI 10.1109/MC.1987.1663532
   Brown Nanette, 2010, P FSE SDP WORKSH FUT, P47
   Carmel E., 1994, Proceedings of the Twenty-Seventh Hawaii International Conference on System Sciences. Vol.IV: Information Systems: Collaboration Technology Organizational Systems and Technology (Cat. No.94TH0607-2), P498, DOI 10.1109/HICSS.1994.323468
   Chorev S, 2006, TECHNOVATION, V26, P162, DOI 10.1016/j.technovation.2005.06.014
   Christensen C.M., 1997, INNOVATORS DILEMMA
   Cockburn A., 1999, P 4 INT MULT SYST CY
   Cockburn A., 1998, SURVIVING OBJECT ORI
   Cohen MA, 1996, MANAGE SCI, V42, P173, DOI 10.1287/mnsc.42.2.173
   Coleman G, 2004, P INT COMP SOFTW APP, P30
   Coleman G., 2005, SYST SCI 2005 HICSS, p315c
   Coleman G, 2008, J SYST SOFTWARE, V81, P772, DOI 10.1016/j.jss.2007.07.027
   Coleman G, 2007, INFORM SOFTWARE TECH, V49, P654, DOI 10.1016/j.infsof.2007.02.011
   Coleman G, 2006, LECT NOTES COMPUT SC, V4257, P28
   Coleman G, 2008, J ENTERP INF MANAG, V21, P633, DOI 10.1108/17410390810911221
   COOPER RG, 1986, J PROD INNOVAT MANAG, V3, P71, DOI 10.1111/1540-5885.320071
   CORBIN J, 1990, Z SOZIOL, V19, P418, DOI 10.1007/BF00988593
   Crowne M, 2002, IEMC-2002: IEEE INTERNATIONAL ENGINEERING MANAGEMENT CONFERENCE, VOLS I AND II, PROCEEDINGS, P338, DOI 10.1109/IEMC.2002.1038454
   Cunningham W., 1993, OOPS Messenger, V4, P29
   da Silva AF, 2005, LECT NOTES COMPUT SC, V3556, P10
   Dahlstedt A., 2003, P 3 C PROM RES IT
   DAVIS AM, 1992, IEEE SOFTWARE, V9, P70, DOI 10.1109/52.156899
   Dawson C., 2009, Projects in Computing and Information Systems, V2nd
   Deakins E., 2005, International Journal of Project Management, V23, P65, DOI 10.1016/j.ijproman.2004.05.007
   Deias R., 2002, INTRO XP START UP
   DeMarco T, 1999, PEOPLEWARE PRODUCTIV
   Edwards HM, 2009, INFORM SOFTWARE TECH, V51, P785, DOI 10.1016/j.infsof.2008.08.008
   Eisenhardt KM, 1998, HARVARD BUS REV, V76, P59
   EISENHARDT KM, 1989, ACAD MANAGE REV, V14, P532, DOI 10.2307/258557
   Fayad ME, 1997, COMMUN ACM, V40, P125, DOI 10.1145/265684.265701
   Fricker S, 2008, 2008 SECOND INTERNATIONAL WORKSHOP ON SOFTWARE PRODUCT MANAGEMENT, P29
   Fricker S, 2010, IEEE SOFTWARE, V27, P72, DOI 10.1109/MS.2010.44
   Gautam N, 2008, INT J PROD ECON, V114, P313, DOI 10.1016/j.ijpe.2006.12.070
   Giardino C., 2015, SUPPLEMENTAL MAT SOF
   Glaser B. G., 1967, DISCOVERY GROUNDED T, DOI 10.1515/9783111660211/html
   Gorschek T, 2006, IEEE SOFTWARE, V23, P88, DOI 10.1109/MS.2006.147
   Grimaldi R, 2005, TECHNOVATION, V25, P111, DOI 10.1016/S0166-4972(03)00076-2
   Hanna Rosine, 2010, International Journal of Services Science, V3, P21, DOI 10.1504/IJSSCI.2010.029862
   Hasel M., 2010, BUS INF SYST ENG, V52, P210
   Heitlager I, 2007, THIRD INTERNATIONAL IEEE WORKSHOP ON SOFTWARE EVOLVABILITY, PROCEEDINGS, P42
   Hilmola OP, 2003, SYST DYNAM REV, V19, P75, DOI 10.1002/sdr.255
   Izurieta Clemente, 2012, Proceedings 2012 Third International Workshop on Managing Technical Debt (MTD 2012), P23, DOI 10.1109/MTD.2012.6225995
   Janson S, 2008, IEEE SOFTWARE, V25, P42, DOI 10.1109/MS.2008.155
   Kajko-Mattsson Mira, 2008, 2008 International Conference on Computer Science and Software Engineering (CSSE 2008), P617, DOI 10.1109/CSSE.2008.1370
   Kakati M, 2003, TECHNOVATION, V23, P447, DOI 10.1016/S0166-4972(02)00014-7
   KEIL M, 1995, COMMUN ACM, V38, P33, DOI 10.1145/203356.203363
   Kim E., 2005, P 38 ANN HAW INT C S, V07, P1
   Kruchten P, 2012, IEEE SOFTWARE, V29, P18, DOI 10.1109/MS.2012.167
   Kurtz CF, 2003, IBM SYST J, V42, P462, DOI 10.1147/sj.423.0462
   Kuvinka K., 2011, P TECHN COMM SUMM, P18
   Lai S.-l., 2010, WORLD ACAD SCI ENG T, V72, P405
   LEHMAN MM, 1980, P IEEE, V68, P1060, DOI 10.1109/PROC.1980.11805
   Li SC, 2007, PORTL INT CONF MANAG, P1126, DOI 10.1109/PICMET.2007.4349435
   MacCormack A, 2001, MIT SLOAN MANAGE REV, V42, P75
   Marmer M., 2012, STARTUP ECOSYSTEM RE
   Martin K, 2007, IEEE SOFTWARE, V24, P46, DOI 10.1109/MS.2007.5
   Mater JL, 2000, EIGHTEENTH ANNUAL PACIFIC NORTHWEST SOFTWARE QUALITY CONFERENCE, PROCEEDINGS, P297
   Maurer F, 2002, IEEE INTERNET COMPUT, V6, P86, DOI 10.1109/4236.989006
   McPhee C, 2002, NINTH ANNUAL IEEE INTERNATIONAL CONFERENCE AND WORKSHOP ON THE ENGINEERING OF COMPUTER-BASED SYSTEMS, PROCEEDINGS, P17, DOI 10.1109/ECBS.2002.999818
   Microsoft, 2009, MICR APPL ARCH GUID
   Midler Christophe, 2008, International Journal of Project Management, V26, P479, DOI 10.1016/j.ijproman.2008.05.003
   Mirel B., 2000, ACM J COMPUTER DOCUM, V24, P185
   Nugroho A, 2011, P 2 WORKSH MAN TECHN, P1
   ORLIKOWSKI WJ, 1993, MIS QUART, V17, P309, DOI 10.2307/249774
   Paternoster N, 2014, INFORM SOFTWARE TECH, V56, P1200, DOI 10.1016/j.infsof.2014.04.014
   Pooley R., 1999, IEE Proceedings-Software, V146, P2, DOI 10.1049/ip-sen:19990151
   Poppendieck M, 2006, IMPLEMENTING LEAN SO
   Potts C., 1995, Proceedings of the Second IEEE International Symposium on Requirements Engineering (Cat. No.95TH8040), P128, DOI 10.1109/ISRE.1995.512553
   Ramer L, 1989, J Obstet Gynecol Neonatal Nurs, V18, P7, DOI 10.1111/j.1552-6909.1989.tb01609.x
   RANDOLPH WA, 1995, ORGAN DYN, V23, P19, DOI 10.1016/0090-2616(95)90014-4
   Rasmusson J., 2006, P C AGILE, P337
   Regnell B., 2001, Requirements Engineering, V6, P51, DOI 10.1007/s007660170015
   Ries E, 2011, The Lean Startup
   Robson C., 2009, Real world research: A resource for social scientists and practitioner researchers
   Rohrbeck R, 2006, 2006 IEEE INTERNATIONAL CONFERENCE ON MANAGEMENT OF INNOVATION AND TECHNOLOGY, VOLS 1 AND 2, PROCEEDINGS, P978
   Sawyer P, 1999, VTT SYMP, V195, P222
   Shehabuddeen N, 2006, TECHNOVATION, V26, P324, DOI 10.1016/j.technovation.2004.10.017
   Shi Zhong, 2011, 2011 3rd International Conference on Computer Research and Development (ICCRD 2011), P488, DOI 10.1109/ICCRD.2011.5764064
   Smagalla D, 2004, MIT SLOAN MANAGE REV, V45, P7
   Stanfill R., 2007, P AM SOC ENG ED ANN
   Staples M, 2007, J SYST SOFTWARE, V80, P883, DOI 10.1016/j.jss.2006.09.008
   Steenhuis HJ, 2008, 2008 IEEE INTERNATIONAL CONFERENCE ON MANAGEMENT OF INNOVATION AND TECHNOLOGY, VOLS 1-3, P837, DOI 10.1109/ICMIT.2008.4654475
   Strauss A., 1990, BASICS QUALITATIVE R
   Sutton SM, 2000, IEEE SOFTWARE, V17, P33, DOI 10.1109/52.854066
   Svahnberg M, 2013, REQUIR ENG, V18, P85, DOI 10.1007/s00766-012-0148-1
   Taipale M, 2010, LECT NOTES BUS INF, V65, P111, DOI 10.1007/978-3-642-16416-3_16
   Tanabian MM, 2005, 2005 IEEE International Engineering Management Conference, Vols 1 and 2, P789
   Tingling P, 2007, LECT NOTES COMPUT SC, V4550, P242
   Tom E, 2013, J SYST SOFTWARE, V86, P1498, DOI 10.1016/j.jss.2012.12.052
   Unterkalmsteiner M, 2012, IEEE T SOFTWARE ENG, V38, P398, DOI 10.1109/TSE.2011.26
   Valtanen A, 2008, LECT NOTES COMPUT SC, V5089, P258, DOI 10.1007/978-3-540-69566-0_22
   Wall DAE, 2001, COMPUTER, V34, P158, DOI 10.1109/2.970592
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
   Wood D., 2005, TRMS1287 U MAR MIND
   Yang SB, 2009, TEAM PERFORM MANAG, V15, P289, DOI 10.1108/13527590910983549
   Yin R., 1994, CASE STUDY RES DESIG
   Yoffie D., 1999, CALIFORNIA MANAGE RE, V4
   Yogendra S, 2002, IEMC-2002: IEEE INTERNATIONAL ENGINEERING MANAGEMENT CONFERENCE, VOLS I AND II, PROCEEDINGS, P2, DOI 10.1109/IEMC.2002.1038356
   Zettell J., 2001, Product Focused Software Process Improvement. Third International Conference, PROFES 2001. Proceedings (Lecture Notes in Computer Science Vol.2188), P255
NR 119
TC 102
Z9 111
U1 3
U2 71
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUN
PY 2016
VL 42
IS 6
BP 585
EP 604
DI 10.1109/TSE.2015.2509970
PG 20
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science; Engineering
GA DR7BD
UT WOS:000380054100005
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Baluda, M
   Denaro, G
   Pezzè, M
AF Baluda, Mauro
   Denaro, Giovanni
   Pezze, Mauro
TI Bidirectional Symbolic Analysis for Effective Branch Testing
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Structural testing; branch coverage; program analysis; symbolic
   execution; symbolic reachability analysis
ID SOFTWARE TEST DATA; TEST DATA GENERATION; CHECKING
AB Structural coverage metrics, and in particular branch coverage, are popular approaches to measure the thoroughness of test suites. Unfortunately, the presence of elements that are not executable in the program under test and the difficulty of generating test cases for rare conditions impact on the effectiveness of the coverage obtained with current approaches. In this paper, we propose a new approach that combines symbolic execution and symbolic reachability analysis to improve the effectiveness of branch testing. Our approach embraces the ideal definition of branch coverage as the percentage of executable branches traversed with the test suite, and proposes a new bidirectional symbolic analysis for both testing rare execution conditions and eliminating infeasible branches from the set of test objectives. The approach is centered on a model of the analyzed execution space. The model identifies the frontier between symbolic execution and symbolic reachability analysis, to guide the alternation and the progress of bidirectional analysis towards the coverage targets. The experimental results presented in the paper indicate that the proposed approach can both find test inputs that exercise rare execution conditions that are not identified with state-of-the-art approaches and eliminate many infeasible branches from the coverage measurement. It can thus produce a modified branch coverage metric that indicates the amount of feasible branches covered during testing, and helps team leaders and developers in estimating the amount of not-yet-covered feasible branches. The approach proposed in this paper suffers less than the other approaches from particular cases that may trap the analysis in unbounded loops.
C1 [Baluda, Mauro] Fraunhofer SIT, Secure Software Engn Grp, Darmstadt, Germany.
   [Denaro, Giovanni; Pezze, Mauro] Univ Milano Bicocca, Dept Informat Syst & Commun, Milan, Italy.
   [Pezze, Mauro] Univ Svizzera Italiana, Fac Informat, Lugano, Switzerland.
C3 Fraunhofer Gesellschaft; Fraunhofer Institute Center Schloss
   Birlinghoven; University of Milano-Bicocca; Universita della Svizzera
   Italiana
RP Baluda, M (corresponding author), Fraunhofer SIT, Secure Software Engn Grp, Darmstadt, Germany.; Denaro, G; Pezzè, M (corresponding author), Univ Milano Bicocca, Dept Informat Syst & Commun, Milan, Italy.; Pezzè, M (corresponding author), Univ Svizzera Italiana, Fac Informat, Lugano, Switzerland.
EM mauro.baluda@sit.fraunhofer.de; denaro@disco.unimib.it;
   pezze@disco.unimib.it
OI PEZZE, MAURO/0000-0001-5193-7379; DENARO, GIOVANNI/0000-0002-7566-8051
FU Swiss SNF project AVATAR [200021_132666]; Italian PRIN project IDEAS
   [2012E47TM2_006]; Swiss National Science Foundation (SNF)
   [200021_132666] Funding Source: Swiss National Science Foundation (SNF)
FX This work has been partially supported by the Swiss SNF project AVATAR
   (200021_132666) and by the Italian PRIN project IDEAS (2012E47TM2_006).
CR Afzal W, 2009, INFORM SOFTWARE TECH, V51, P957, DOI 10.1016/j.infsof.2008.12.005
   Alshahwan N., 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P3, DOI 10.1109/ASE.2011.6100082
   Anand S, 2006, LECT NOTES COMPUT SC, V3925, P163
   Anand S, 2007, LECT NOTES COMPUT SC, V4424, P134
   [Anonymous], 2012, INT S SOFTWARE TESTI
   [Anonymous], 2013, P INT S SOFTWARE TES
   [Anonymous], 2011, P 8 EUR SOFTW ENG C, DOI DOI 10.1145/2025113.2025144
   [Anonymous], 1990, LICS, DOI DOI 10.1109/LICS.1990.113767
   [Anonymous], 1977, Flow Analysis of Computer Programs
   [Anonymous], 2006, P 13 ACM C COMPUTER
   [Anonymous], 2010, Proceedings of the 19th international symposium on Software testing and analysis, DOI 10.1145/1831708.1831732
   [Anonymous], 2011, Proceedings of the 2011 International Symposium on Software Testing and Analysis, ISSTA'11
   [Anonymous], P ACM SIGSOFT 20 INT
   Aquino Andrea., 2015, Proceedings of the 2015 International Symposium on Software Testing and Analysis, P305
   Artzi Shay., 2008, P 2008 INT S SOFTWAR, P261, DOI [10.1145/1390630.1390662, DOI 10.1145/1390630.1390662]
   Baars A., 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P53, DOI 10.1109/ASE.2011.6100119
   Ball T., 2004, Formal Methods for Components and Objects. Third International Symposium, FMCO 2004. Revised Lectures (Lecture Notes in Computer Science Vol. 3657), P1
   Ball T, 2004, LECT NOTES COMPUT SC, V2999, P1
   BALL T, 2003, MSRTR200386
   Baluda M, 2011, SOFTWARE QUAL J, V19, P725, DOI 10.1007/s11219-011-9150-y
   Baluda Mauro., 2010, Proceedings of the 5th Workshop on Automation of Software Test (AST), P59
   Baresel A, 2003, LECT NOTES COMPUT SC, V2724, P2428
   Barnett Mike, 2005, PASTE, V31, P82, DOI [DOI 10.1145/1108792, DOI 10.1145/1108792.1108813]
   Beckman NE, 2010, IEEE T SOFTWARE ENG, V36, P495, DOI 10.1109/TSE.2010.49
   Beyer D, 2004, PROC INT CONF SOFTW, P326, DOI 10.1109/ICSE.2004.1317455
   Beyer Dirk, 2011, Computer Aided Verification. Proceedings 23rd International Conference, CAV 2011, P184, DOI 10.1007/978-3-642-22110-1_16
   Beyer Dirk, 2007, International Journal on Software Tools for Technology Transfer, V9, P505, DOI 10.1007/s10009-007-0044-z
   Beyer D, 2007, PLDI'07: PROCEEDINGS OF THE 2007 ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P300, DOI 10.1145/1250734.1250769
   Bouajjani Ahmed, 2012, Automated Technology for Verification and Analysis. Proceedings of the 10th International Symposium, ATVA 2012, P167, DOI 10.1007/978-3-642-33386-6_14
   Bradley AR, 2011, LECT NOTES COMPUT SC, V6538, P70, DOI 10.1007/978-3-642-18275-4_7
   Braione P., 2013, P 9 JOINT M FDN SOFT, P411
   Braione P, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P602, DOI 10.1145/2786805.2786842
   Braione P, 2014, SOFTWARE QUAL J, V22, P311, DOI 10.1007/s11219-013-9207-1
   Bryce RC, 2007, GECCO 2007: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOL 1 AND 2, P1082
   Bucur S, 2011, EUROSYS 11: PROCEEDINGS OF THE EUROSYS 2011 CONFERENCE, P183
   Bühler O, 2008, COMPUT OPER RES, V35, P3144, DOI 10.1016/j.cor.2007.01.015
   Burnim Jacob, 2008, 2008 23rd IEEE/ACM International Conference on Automated Software Engineering, P443, DOI 10.1109/ASE.2008.69
   Burnim J, 2009, IEEE INT CONF AUTOM, P161, DOI 10.1109/ASE.2009.87
   Burnim J, 2009, PROC INT CONF SOFTW, P463, DOI 10.1109/ICSE.2009.5070545
   Cadar C., 2008, Proceedings of the 8th USENIX conference on Operating systems design and implementation, OSDI'08, (USA), P209
   CALLAHAN J, 1996, NASAIVV96022
   Chan FT, 1996, INFORM SOFTWARE TECH, V38, P775, DOI 10.1016/0950-5849(96)01103-2
   Chen T. Y., 2005, P 9 AS COMP SCI C AD, P3156
   Chipounov V, 2011, ACM SIGPLAN NOTICES, V46, P265, DOI [10.1145/1961296.1950396, 10.1145/1961295.1950396]
   Cimatti Alessandro, 2012, Computer Aided Verification. Proceedings 24th International Conference, CAV 2012, P277, DOI 10.1007/978-3-642-31424-7_23
   Ciupa I, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P71, DOI 10.1145/1368088.1368099
   Claessen K, 2000, ACM SIGPLAN NOTICES, V35, P268, DOI 10.1145/357766.351266
   Clarke L. A., 2006, Software Engineering Notes, V31, P25, DOI 10.1145/1127878.1127900
   Clarke L. A., 1976, IEEE Transactions on Software Engineering, VSE-2, P215, DOI 10.1109/TSE.1976.233817
   Colanzi TE, 2011, LECT NOTES COMPUT SC, V6956, P188, DOI 10.1007/978-3-642-23716-4_18
   Csallner C, 2005, PROC INT CONF SOFTW, P422
   Csallner C, 2008, ACM T SOFTW ENG METH, V17, DOI 10.1145/1348250.1348254
   CYTRON R, 1991, ACM T PROGR LANG SYS, V13, P451, DOI 10.1145/115372.115320
   Delahaye Mickael, 2010, Proceedings of the Third IEEE International Conference on Software Testing, Verification and Validation (ICST 2010), P215, DOI 10.1109/ICST.2010.13
   Denaro G, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P947, DOI 10.1109/ICSE.2015.104
   Di Penta M, 2007, GECCO 2007: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOL 1 AND 2, P1090
   Dijkstra E. W., 1976, A Discipline of Pro-gramming
   Elkarablieh B, 2009, ISSTA 2009: INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P129
   Emmi M., 2007, Proceedings of the 2007 international symposium on Software testing and analysis, P151
   Enea C, 2013, LECT NOTES COMPUT SC, V7792, P129, DOI 10.1007/978-3-642-37036-6_9
   Erete I., 2011, 2011 IEEE Fourth International Conference on Software Testing, Verification and Validation Workshops (ICSTW), P310, DOI 10.1109/ICSTW.2011.98
   Ferguson R., 1996, ACM Transactions on Software Engineering and Methodology, V5, P63, DOI 10.1145/226155.226158
   Fraser G, 2013, IEEE T SOFTWARE ENG, V39, P276, DOI 10.1109/TSE.2012.14
   Fraser G, 2012, IEEE T SOFTWARE ENG, V38, P278, DOI 10.1109/TSE.2011.93
   Fraser G, 2009, SOFTW TEST VERIF REL, V19, P215, DOI 10.1002/stvr.402
   Furia CA, 2010, LECT NOTES COMPUT SC, V6300, P277, DOI 10.1007/978-3-642-15025-8_15
   Galeotti JP, 2013, PROC INT SYMP SOFTW, P360, DOI 10.1109/ISSRE.2013.6698889
   Godefroid P., 2007, SIGPLAN Notices, V42, P47, DOI [10.1145/1190216.1190226, 10.1145/1190215.1190226]
   Godefroid P, 2005, ACM SIGPLAN NOTICES, V40, P213, DOI 10.1145/1064978.1065036
   Godefroid P, 2010, POPL'10: PROCEEDINGS OF THE 37TH ANNUAL ACM SIGPLAN-SIGACT SYMPOSIUM ON PRINCIPLES OF PROGRAMMING LANGUAGES, P43, DOI 10.1145/1706299.1706307
   Godefroid Patrice, 2008, Network and Distributed Systems Security
   Gouraud SD, 2001, 16TH ANNUAL INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2001), PROCEEDINGS, P5, DOI 10.1109/ASE.2001.989785
   Grechanik M, 2012, PROC INT CONF SOFTW, P156, DOI 10.1109/ICSE.2012.6227197
   Gulavani B.S., 2006, P FSE ACM, P117, DOI DOI 10.1145/1181775.1181790
   Guodong Li, 2011, Computer Aided Verification. Proceedings 23rd International Conference, CAV 2011, P609, DOI 10.1007/978-3-642-22110-1_49
   Holler Christian, 2012, P 21 USENIX SEC S US, P445
   HUTCHINS M, 1994, PROC INT CONF SOFTW, P191, DOI 10.1109/ICSE.1994.296778
   Inkumsah Kobi, 2008, 2008 23rd IEEE/ACM International Conference on Automated Software Engineering, P297, DOI 10.1109/ASE.2008.40
   Inozemtseva L, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P435, DOI 10.1145/2568225.2568271
   Jaffar Joxan, 2012, Computer Aided Verification. Proceedings 24th International Conference, CAV 2012, P758, DOI 10.1007/978-3-642-31424-7_61
   Jaffar J., 2013, P 2013 9 JOINT M FDN, P48
   Jia Xiangyang, 2015, P 2015 INT S SOFTWAR, P177
   Joshi Pallavi., 2007, PROC ESEC FSE, P561, DOI DOI 10.1145/1295014.1295041
   KAYACIK HG, 2005, P 21 ANN COMP SEC AP, P8
   KING JC, 1976, COMMUN ACM, V19, P385, DOI 10.1145/360248.360252
   Korel B., 1992, Software Testing, Verification and Reliability, V2, P203, DOI 10.1002/stvr.4370020405
   KOREL B, 1990, IEEE T SOFTWARE ENG, V16, P870, DOI 10.1109/32.57624
   Lakhotia Kiran., 2008, Proceedings of the Annual Conference on Genetic and Evolution- ary Computation (GECCO), P1759, DOI [10.1145/1389095.1389435, DOI 10.1145/1389095.1389435]
   Le Wei, 2008, PROC 16 ACM SIGSOFT, P272
   Li Y, 2013, ACM SIGPLAN NOTICES, V48, P19, DOI [10.1145/2509136.2509553, 10.1145/2544173.2509553]
   Madhusudan P, 2011, LECT NOTES COMPUT SC, V6887, P43, DOI 10.1007/978-3-642-23702-7_8
   Madhusudan P., 2012, P 39 ANN ACM SIGPLAN, P123
   Majumdar R, 2007, PROC INT CONF SOFTW, P416
   Malburg J., 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P436, DOI 10.1109/ASE.2011.6100092
   Marinescu PD, 2012, PROC INT CONF SOFTW, P716, DOI 10.1109/ICSE.2012.6227146
   Marinescu Paul Dan, 2013, ACM Symposium on the Foundations of Software Engineering, P235, DOI [10.1145/2491411.2491438, DOI 10.1145/2491411.2491438]
   McMillan KL, 2010, LECT NOTES COMPUT SC, V6174, P104, DOI 10.1007/978-3-642-14295-6_10
   McMinn P, 2004, SOFTW TEST VERIF REL, V14, P105, DOI 10.1002/stvr.294
   MCMINN P., 2006, Proceedings of the 2006 international symposium on Software testing and analysis, P13, DOI [10.1145/1146238.1146241, DOI 10.1145/1146238.1146241]
   McPeak S, 2005, LECT NOTES COMPUT SC, V3576, P476
   Michael CC, 2001, IEEE T SOFTWARE ENG, V27, P1085, DOI 10.1109/32.988709
   Moller A, 2001, ACM SIGPLAN NOTICES, V36, P221, DOI 10.1145/381694.378851
   Namin AS, 2009, ISSTA 2009: INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P57
   Ngo M.N., 2007, Proceedings of the the 6th joint meeting of the European software engineering conference and the ACM SIGSOFT symposium on The foundations of software engineering, P215
   Ngo MN, 2008, INFORM SOFTWARE TECH, V50, P641, DOI 10.1016/j.infsof.2007.06.006
   Nguyen C.D., 2012, Proceedings of the 2012 International Symposium on Software Testing and Analysis, P100, DOI 10.1145/04000800.2336765
   Pacheco C., 2007, OOPSLA 2007 COMPANIO, P815
   Palikareva Hristina, 2013, Computer Aided Verification. 25th International Conference, CAV 2013. Proceedings. LNCS 8044, P53, DOI 10.1007/978-3-642-39799-8_3
   Papadakis M., 2010, Proceedings Fifth International Conference on Software Engineering Advances (ICSEA 2010), P435, DOI 10.1109/ICSEA.2010.74
   Pasareanu Corina S., 2009, International Journal on Software Tools for Technology Transfer, V11, P339, DOI 10.1007/s10009-009-0118-1
   Pasareanu Corina S., 2008, P 2008 INT S SOFTW T, P15, DOI [DOI 10.1145/1390630.1390635, DOI 10.1145/1390630]
   Pasareanu CS, 2005, LECT NOTES COMPUT SC, V3576, P52
   Peng F, 2014, PROCEEDINGS OF THE 23RD USENIX SECURITY SYMPOSIUM, P829
   Person Suzette, 2008, P 16 INT S FDN SOFTW, P226, DOI [DOI 10.1145/1453101.1453131, 10.1145/1453101.1453131]
   Rakamaric Z, 2007, LECT NOTES COMPUT SC, V4762, P237
   Reps T., 1995, Conference Record of POPL'95: 22nd ACM SIGPLAN-SIGACT Symposium Principles of Programming Languages, P49, DOI 10.1145/199448.199462
   RTCA Inc., 2011, DO 178C ED 12C SOFTW
   Sen K., 2005, P 10 EUR SOFTW ENG C, V30, P263, DOI DOI 10.1145/1081706.1081750
   Sharir M., 1981, Program flow analysis. Theory and applications, P189
   Su T, 2014, INT CONF SOFTW SECUR, P98, DOI 10.1109/SERE.2014.23
   Tillmann N, 2008, LECT NOTES COMPUT SC, V4966, P134
   Tlili M, 2006, IEEE C EVOL COMPUTAT, P885, DOI 10.1109/CEC.2006.1688405
   Tonella P., 2004, Software Engineering Notes, V29, P119, DOI 10.1145/1013886.1007528
   Tracey N., 1998, Software Engineering Notes, V23, P73, DOI 10.1145/271775.271792
   Visser W., 2004, Software Engineering Notes, V29, P97, DOI 10.1145/1013886.1007526
   Visser W, 2012, P FSE, P58, DOI DOI 10.1145/2393596.2393665
   Vivanti M, 2013, PROC INT SYMP SOFTW, P370, DOI 10.1109/ISSRE.2013.6698890
   Vos TEJ, 2013, SOFTWARE QUAL J, V21, P259, DOI 10.1007/s11219-012-9174-y
   Walcott K.R., 2006, P INT S SOFTW TEST A, P1, DOI DOI 10.1145/1146238.1146240
   Wegener J, 2004, LECT NOTES COMPUT SC, V3103, P1400
   Wegener J, 2001, INFORM SOFTWARE TECH, V43, P841, DOI 10.1016/S0950-5849(01)00190-2
   Wu SH, 2008, VLSI DES, DOI 10.1155/2008/165709
   Xie T, 2009, I C DEPEND SYS NETWO, P359, DOI 10.1109/DSN.2009.5270315
   Xu Ru-Gang., 2008, ISSTA, P27
   Yi Wei, 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P440, DOI 10.1109/ASE.2011.6100094
   Yorsh G., 2006, ISSTA 06 P 2006 INT, P145
   Zhang Pingyu, 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P43, DOI 10.1109/ASE.2011.6100093
NR 137
TC 16
Z9 17
U1 0
U2 10
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAY
PY 2016
VL 42
IS 5
BP 403
EP 426
DI 10.1109/TSE.2015.2490067
PG 24
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA DM1IA
UT WOS:000376097700001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU McBurney, PW
   McMillan, C
AF McBurney, Paul W.
   McMillan, Collin
TI Automatic Source Code Summarization of Context for Java Methods
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Source code summarization; automatic documentation; program
   comprehension
ID SOFTWARE; DOCUMENTATION
AB Source code summarization is the task of creating readable summaries that describe the functionality of software. Source code summarization is a critical component of documentation generation, for example as Javadocs formed from short paragraphs attached to each method in a Java program. At present, a majority of source code summarization is manual, in that the paragraphs are written by human experts. However, new automated technologies are becoming feasible. These automated techniques have been shown to be effective in select situations, though a key weakness is that they do not explain the source code's context. That is, they can describe the behavior of a Java method, but not why the method exists or what role it plays in the software. In this paper, we propose a source code summarization technique that writes English descriptions of Java methods by analyzing how those methods are invoked. We then performed two user studies to evaluate our approach. First, we compared our generated summaries to summaries written manually by experts. Then, we compared our summaries to summaries written by a state-of-the-art automatic summarization tool. We found that while our approach does not reach the quality of human-written summaries, we do improve over the state-of-the-art summarization tool in several dimensions by a statistically-significant margin.
C1 [McBurney, Paul W.] Univ Notre Dame, Coll Comp Sci & Engn, Notre Dame, IN 46556 USA.
   [McMillan, Collin] Univ Notre Dame, Comp Sci, South Bend, VA USA.
C3 University of Notre Dame
RP McBurney, PW (corresponding author), Univ Notre Dame, Coll Comp Sci & Engn, Notre Dame, IN 46556 USA.; McMillan, C (corresponding author), Univ Notre Dame, Comp Sci, South Bend, VA USA.
EM pmcburne@nd.edu; cmc@nd.edu
CR [Anonymous], 2012, P ACM SIGSOFT 20 INT
   [Anonymous], 2010, P IEEE ACM INT C AUT
   [Anonymous], 2006, Google's PageRank and beyond: The science of search engine rankings
   [Anonymous], P 6 INT WORKSH TRAC
   [Anonymous], 2009, CHI 09 EXTENDED ABST, DOI [10.1145/1520340.1520678, DOI 10.1145/1520340.1520678]
   Burden H., 2011, Proceedings of the 8th International Workshop on Model-Driven Engineering, Verification and Validation, MoDeVVa, p8:1, DOI DOI 10.1145/2095654.2095665
   Buse R.P., 2008, Proceedings of the 2008 International Symposium on Software Testing and Analysis, ISSTA '08, P273
   de Souza S.C.B., 2005, P 23 ANN INT C DES C, P68, DOI [10.1145/1085313, 10.1145/1085313.1085331]
   Duala-Ekoko E, 2012, PROC INT CONF SOFTW, P266, DOI 10.1109/ICSE.2012.6227187
   Eddy BP, 2013, CONF PROC INT SYMP C, P13, DOI 10.1109/ICPC.2013.6613829
   Eisenberg DS, 2010, CHI2010: PROCEEDINGS OF THE 28TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, VOLS 1-4, P1331
   Fluri B, 2007, 14TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P70, DOI 10.1109/WCRE.2007.21
   Forward A., 2002, Proceedings of the 2002 ACM symposium on Document engineering, P26, DOI 10.1145/585058.585065
   Gatt A, 2009, P 12 EUROPEAN WORKSH, P90
   GOLDBERG E, 1994, IEEE EXPERT, V9, P45, DOI 10.1109/64.294135
   Haiduc S., 2010, Proceedings 17th Working Conference on Reverse Engineering (WCRE 2010), P35, DOI 10.1109/WCRE.2010.13
   Hill E, 2009, PROC INT CONF SOFTW, P232, DOI 10.1109/ICSE.2009.5070524
   Holmes R, 2005, PROC INT CONF SOFTW, P117
   Ibrahim WM, 2012, J SYST SOFTWARE, V85, P2293, DOI 10.1016/j.jss.2011.09.019
   Inoue K, 2003, PROC INT CONF SOFTW, P14, DOI 10.1109/ICSE.2003.1201184
   Kajko-Mattsson M, 2005, EMPIR SOFTW ENG, V10, P31, DOI 10.1023/B:LIDA.0000048322.42751.ca
   Karrer Thorsten., 2011, Proceedings of the 24th Annual ACM Symposium on User Interface Software and Technology. UIST, P217, DOI DOI 10.1145/2047196.2047225
   Kim M, 2013, IEEE T SOFTWARE ENG, V39, P45, DOI 10.1109/TSE.2012.16
   Ko AJ, 2004, 2004 IEEE SYMPOSIUM ON VISUAL LANGUAGES AND HUMAN CENTRIC COMPUTING: PROCEEDINGS, P199
   Kramer D., 1999, Seventeenth Annual International Conference on Computer Documentation. Conference Proceedings, P147, DOI 10.1145/318372.318577
   Krinke J, 2006, J SYST SOFTWARE, V79, P1249, DOI 10.1016/j.jss.2006.02.040
   LaToza Thomas D., 2010, P 32 ACM IEEE INT C, P185, DOI DOI 10.1145/1806799.1806829
   Lawrie D, 2006, INT C PROGRAM COMPRE, P3, DOI 10.1109/ICPC.2006.51
   Lethbridge TC, 2003, IEEE SOFTWARE, V20, P35, DOI 10.1109/MS.2003.1241364
   Mani S., 2012, P ACM SIGSOFT 20 INT
   Manning Christopher D., 2008, INTRO INFORM RETRIEV
   McBurney P. W., 2014, P 22 INT C PROGRAM C, P279
   McMillan C, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P111, DOI 10.1145/1985793.1985809
   Moreno L, 2013, CONF PROC INT SYMP C, P23, DOI 10.1109/ICPC.2013.6613830
   Murphy G. C, 1996, THESIS U WASHINGTON
   Puppin D., 2006, Applied Computing 2006. 21st Annual ACM Symposium on Applied Computing, P1409, DOI 10.1145/1141277.1141605
   Reiter E., 2000, Building natural language generation systems
   Roehm T, 2012, PROC INT CONF SOFTW, P255, DOI 10.1109/ICSE.2012.6227188
   Sai Zhang, 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P63, DOI 10.1109/ASE.2011.6100145
   Shi L, 2011, LECT NOTES COMPUT SC, V6603, P416, DOI 10.1007/978-3-642-19811-3_29
   Sillito J, 2008, IEEE T SOFTWARE ENG, V34, P434, DOI 10.1109/TSE.2008.26
   Sim SE, 1998, PROG COMPREHEN, P180, DOI 10.1109/WPC.1998.693351
   Sridhara G., 2012, THESIS U DELAWARE NE
   Sridhara G, 2011, CONF PROC INT SYMP C, P71, DOI 10.1109/ICPC.2011.28
   Sridhara G, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P101, DOI 10.1145/1985793.1985808
   Sridhara Giriprasad, 2010, 25 IEEEACM INT C AUT, P43
   Steidl D, 2013, CONF PROC INT SYMP C, P83, DOI 10.1109/ICPC.2013.6613836
   Stylos J, 2006, IEEE SYMPOSIUM ON VISUAL LANGUAGES AND HUMAN-CENTRIC COMPUTING, PROCEEDINGS, P195
   Takang AA, 1996, J PROGRAM LANG, V4, P143
   Tao Y., 2012, P ACM SIGSOFT 20 INT
   van Heesch D., 2013, DOXYGEN WEBSITE
NR 51
TC 107
Z9 121
U1 1
U2 22
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD FEB
PY 2016
VL 42
IS 2
BP 103
EP 119
DI 10.1109/TSE.2015.2465386
PG 17
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA DE8GD
UT WOS:000370872900001
DA 2024-07-18
ER

PT J
AU Qiu, J
   Su, XH
   Ma, PJ
AF Qiu, Jing
   Su, Xiaohong
   Ma, Peijun
TI Using Reduced Execution Flow Graph to Identify Library Functions in
   Binary Code
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Reverse engineering; static analysis; inline function; library function
   identification; subgraph isomorphism and graph mining
AB Discontinuity and polymorphism of a library function create two challenges for library function identification, which is a key technique in reverse engineering. A new hybrid representation of dependence graph and control flow graph called Execution Flow Graph (EFG) is introduced to describe the semantics of binary code. Library function identification turns to be a subgraph isomorphism testing problem since the EFG of a library function instance is isomorphic to the sub-EFG of this library function. Subgraph isomorphism detection is time-consuming. Thus, we introduce a new representation called Reduced Execution Flow Graph (REFG) based on EFG to speed up the isomorphism testing. We have proved that EFGs are subgraph isomorphic as long as their corresponding REFGs are subgraph isomorphic. The high efficiency of the REFG approach in subgraph isomorphism detection comes from fewer nodes and edges in REFGs and new lossless filters for excluding the unmatched subgraphs before detection. Experimental results show that precisions of both the EFG and REFG approaches are higher than the state-of-the-art tool and the REFG approach sharply decreases the processing time of the EFG approach with consistent precision and recall.
C1 [Qiu, Jing; Su, Xiaohong; Ma, Peijun] Harbin Inst Technol, Sch Comp Sci & Technol, Harbin 150001, Peoples R China.
C3 Harbin Institute of Technology
RP Qiu, J; Su, XH; Ma, PJ (corresponding author), Harbin Inst Technol, Sch Comp Sci & Technol, Harbin 150001, Peoples R China.
EM topmint@hit.edu.cn; sxh@hit.edu.cn; ma@hit.edu.cn
OI Qiu, Jing/0000-0003-3264-1681
FU National Natural Science Foundation of China [61173021]
FX The authors thank the anonymous reviewers for their insightful comments
   and suggestions. This research was funded by National Natural Science
   Foundation of China 61173021.
CR Aho AlfredV., 2007, Compilers: principles, techniques, tools, V1009
   Alrabaee S, 2015, DIGIT INVEST, V12, pS61, DOI 10.1016/j.diin.2015.01.011
   [Anonymous], 1978, Structure of Computers and Computations
   [Anonymous], 2014, IDA PRODISASSEMBLER
   Blankstein A., 2009, PARALLEL SUBGRAPH IS
   Bruschi D, 2006, LECT NOTES COMPUT SC, V4064, P129
   Cordella L. P., 1999, Proceedings 10th International Conference on Image Analysis and Processing, P1172, DOI 10.1109/ICIAP.1999.797762
   David Y, 2014, ACM SIGPLAN NOTICES, V49, P349, DOI [10.1145/2594291.2594343, 10.1145/2666356.2594343]
   Emmerik M. V., 1994, FITTR199402 QUEENSL
   FERRANTE J, 1987, ACM T PROGR LANG SYS, V9, P319, DOI 10.1145/24039.24041
   Griffin K, 2009, LECT NOTES COMPUT SC, V5758, P101, DOI 10.1007/978-3-642-04342-0_6
   Guilfanov I., 1997, FAST LIB ID REC TECH
   HORWITZ S, 1990, ACM T PROGR LANG SYS, V12, P26, DOI [10.1145/77606.77608, 10.1145/960116.53994]
   Jacobson E., 2011, P 10 ACM SIGPLAN SIG, P1
   Johnson D. S., 1979, COMPUTERS INTRACTABI
   Knizhnik K., 2014, FASTDB MAIN MEMORY D
   Komondoor R, 2001, LECT NOTES COMPUT SC, V2126, P40
   Krinke J, 2001, EIGHTH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P301, DOI 10.1109/WCRE.2001.957835
   Kruegel C, 2006, LECT NOTES COMPUT SC, V3858, P207
   Kuck R. H., 1981, Proceedings of the 8th ACM SIGPLAN-SIGACT symposium on Principles of programming languages, P207
   Leiserson CE, 2010, J SUPERCOMPUT, V51, P244, DOI 10.1007/s11227-010-0405-3
   Liu Chao, 2006, Proc. 12th ACMSIGKDD Int'l Con. on Knowledge Discovery and Data Mining (KDD 06), P872, DOI DOI 10.1145/1150402.1150522
   Microsoft, 2014, MICR PE COFF SPEC
   Qiu J, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P261, DOI 10.1109/SANER.2015.7081836
   Sæbjornsen A, 2009, ISSTA 2009: INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P117
   ZILLES CB, 2002, THESIS U WISCONSIN M
NR 26
TC 14
Z9 17
U1 0
U2 18
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD FEB
PY 2016
VL 42
IS 2
BP 187
EP 202
DI 10.1109/TSE.2015.2470241
PG 16
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA DE8GD
UT WOS:000370872900006
DA 2024-07-18
ER

PT J
AU Gay, G
   Staats, M
   Whalen, M
   Heimdahl, MPE
AF Gay, Gregory
   Staats, Matt
   Whalen, Michael
   Heimdahl, Mats P. E.
TI Automated Oracle Data Selection Support
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Testing; test oracles; oracle data; oracle selection; verification
AB The choice of test oracle-the artifact that determines whether an application under test executes correctly-can significantly impact the effectiveness of the testing process. However, despite the prevalence of tools that support test input selection, little work exists for supporting oracle creation. We propose a method of supporting test oracle creation that automatically selects the oracle data-the set of variables monitored during testing-for expected value test oracles. This approach is based on the use of mutation analysis to rank variables in terms of fault-finding effectiveness, thus automating the selection of the oracle data. Experimental results obtained by employing our method over six industrial systems (while varying test input types and the number of generated mutants) indicate that our method-when paired with test inputs generated either at random or to satisfy specific structural coverage criteria-may be a cost-effective approach for producing small, effective oracle data sets, with fault finding improvements over current industrial best practice of up to 1,435 percent observed (with typical improvements of up to 50 percent).
C1 [Gay, Gregory] Univ S Carolina, Dept Comp Sci & Engn, Columbia, SC 29208 USA.
   [Whalen, Michael; Heimdahl, Mats P. E.] Univ Minnesota, Dept Comp Sci & Engn, Minneapolis, MN 55455 USA.
C3 University of South Carolina System; University of South Carolina
   Columbia; University of Minnesota System; University of Minnesota Twin
   Cities
RP Gay, G (corresponding author), Univ S Carolina, Dept Comp Sci & Engn, Columbia, SC 29208 USA.
EM greg@greggay.com; staatsm@gmail.com; whalen@cs.umn.edu;
   heimdahl@cs.umn.edu
OI Gay, Gregory/0000-0001-6794-9585
FU NASA Ames Cooperative Agreement [NNA06CB21A]; NSF [CCF-0916583,
   CNS-0931931, CNS-1035715]; US National Science Foundation (NSF); Fonds
   National de la Recherche, Luxembourg [FNR/P10/03]; Rockwell Collins Inc.
FX This work has been supported by NASA Ames Cooperative Agreement
   NNA06CB21A, NSF grants CCF-0916583, CNS-0931931, and CNS-1035715, an US
   National Science Foundation (NSF) graduate fellowship, and the Fonds
   National de la Recherche, Luxembourg (FNR/P10/03). The authors would
   additionally like to thank Rockwell Collins Inc. for their support.
CR Afshan S, 2013, 2013 IEEE SIXTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST 2013), P352, DOI 10.1109/ICST.2013.11
   Andrews JH, 2006, IEEE T SOFTWARE ENG, V32, P608, DOI 10.1109/TSE.2006.83
   [Anonymous], 2011, DO178 RTCA EUROCAE
   Briand LC, 2004, IEEE T SOFTWARE ENG, V30, P770, DOI 10.1109/TSE.2004.79
   Chilenski J., 2001, DOTFAAAR0118 OFF AV
   Chvatal V., 1979, Mathematics of Operations Research, V4, P233, DOI 10.1287/moor.4.3.233
   Cormen Thomas H., 2001, INTRO ALGORITHMS
   Evans R. B., 2007, 6 JOINT M EUR SOFTW, P549, DOI DOI 10.1145/1295014.1295038
   Fisher R. A., 1937, The design of experiments.
   Fraser G., 2011, P 20 INT S SOFTW TES, P147
   Fraser G, 2012, IEEE T SOFTWARE ENG, V38, P278, DOI 10.1109/TSE.2011.93
   Gacek A., 2015, JKIND A JAVA IMPLEME
   Garey M. R., 1979, Computers and intractability. A guide to the theory of NP-completeness
   Gargantini A, 1999, LECT NOTES COMPUT SC, V1687, P146, DOI 10.1145/318774.318939
   Hagen G., 2008, THESIS
   Halbwachs Nicolas., 1993, Synchronous Programming of Reactive Systems
   Harman Mark, 2010, Proceedings of the IEEE Third International Conference on Software Testing Verification and Validation - Workshops (ICSTW 2010), P182, DOI 10.1109/ICSTW.2010.31
   Harman M., 2013, CS1301 U SHEFF
   Heimdahl MPE, 2004, EIGHTH IEEE INTERNATIONAL SYMPOSIUM ON HIGH ASSURANCE SYSTEMS ENGINEERING, PROCEEDINGS, P178, DOI 10.1109/HASE.2004.1281742
   Hiller M, 2001, INTERNATIONAL CONFERENCE ON DEPENDABLE SYSTEMS AND NETWORKS, PROCEEDINGS, P161, DOI 10.1109/DSN.2001.941402
   Jia Y, 2011, IEEE T SOFTWARE ENG, V37, P649, DOI 10.1109/TSE.2010.62
   Just R, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P654, DOI 10.1145/2635868.2635929
   MCMINN P., 2010, Proceedings of the First International Workshop on Software Test Output Validation, P1
   Memon A, 2004, 19TH INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P186, DOI 10.1109/ASE.2004.1342736
   Murugesan A, 2013, 2013 5TH INTERNATIONAL WORKSHOP ON MODELING IN SOFTWARE ENGINEERING (MISE), P13, DOI 10.1109/MiSE.2013.6595290
   Pacheco C, 2005, LECT NOTES COMPUT SC, V3586, P504
   Rajan A, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P161, DOI 10.1145/1368088.1368111
   Rayadurgam S, 2001, EIGHTH ANNUAL IEEE INTERNATIONAL CONFERENCE AND WORKSHOP ON THE ENGINEERING OF COMPUTER BASED SYSTEMS, PROCEEDINGS, P83, DOI 10.1109/ECBS.2001.922409
   RICHARDSON DJ, 1992, 14TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING : PROCEEDINGS, P105
   Staats M, 2012, PROC INT CONF SOFTW, P870, DOI 10.1109/ICSE.2012.6227132
   Staats M, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P391, DOI 10.1145/1985793.1985847
   Staats M, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P892, DOI 10.1145/1985793.1985936
   Taneja Kunal, 2008, 2008 23rd IEEE/ACM International Conference on Automated Software Engineering, P407, DOI 10.1109/ASE.2008.60
   Van Eijk CAJ., 2002, Computer-Aided Design of Integrated Circuits and Systems, V19, P814
   Voas J. M., 1994, Proceedings. 5th International Symposium on Software Reliability Engineering (Cat. No.94TH8017), P152, DOI 10.1109/ISSRE.1994.341367
   Whalen MW., 2006, P INT S SOFTW TEST A, P25, DOI DOI 10.1145/1146238.1146242
   Xie Q, 2007, ACM T SOFTW ENG METH, V16, DOI 10.1145/1189748.1189752
   Yao XJ, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P919, DOI 10.1145/2568225.2568265
NR 38
TC 13
Z9 16
U1 0
U2 8
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD NOV
PY 2015
VL 41
IS 11
BP 1119
EP 1137
DI 10.1109/TSE.2015.2436920
PG 19
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA CW5EM
UT WOS:000365018200004
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Jiang, ZM
   Hassan, AE
AF Jiang, Zhen Ming
   Hassan, Ahmed E.
TI A Survey on Load Testing of Large-Scale Software Systems
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Software testing; load testing; software quality; large-scale software
   systems; survey
ID PERFORMANCE REQUIREMENTS; STRESS; GENERATION; WORKLOAD; MODELS;
   FRAMEWORK; SERVICE
AB Many large-scale software systems must service thousands or millions of concurrent requests. These systems must be load tested to ensure that they can function correctly under load (i.e., the rate of the incoming requests). In this paper, we survey the state of load testing research and practice. We compare and contrast current techniques that are used in the three phases of a load test: (1) designing a proper load, (2) executing a load test, and (3) analyzing the results of a load test. This survey will be useful for load testing practitioners and software engineering researchers with interest in the load testing of large-scale software systems.
C1 [Jiang, Zhen Ming] York Univ, Dept Elect Engn & Comp Sci, SCALE Lab, Toronto, ON M3J 2R7, Canada.
   [Hassan, Ahmed E.] Queens Univ, Sch Comp, SAIL Lab, Kingston, ON, Canada.
C3 York University - Canada; Queens University - Canada
RP Jiang, ZM (corresponding author), York Univ, Dept Elect Engn & Comp Sci, SCALE Lab, Toronto, ON M3J 2R7, Canada.
EM zmjiang@cse.yorku.ca; ahmed@cs.queensu.ca
RI Ali, Ahmed/HOF-4672-2023; Hassan, Ahmed/AAB-7241-2019; KHALIFA, AHMED
   khalifa/HKF-2246-2023
OI KHALIFA, AHMED khalifa/0000-0002-2918-7572
CR Abbors F., 2013, P 4 ACM SPEC INT C P, P423, DOI DOI 10.1145/2479871.2479937
   Abu-Nimeh S, 2006, I C COMP SYST APPLIC, P300, DOI 10.1109/AICCSA.2006.205105
   Acharya M, 2009, IEEE INT CONF AUTOM, P409, DOI 10.1109/ASE.2009.95
   Adamoli A, 2011, SOFTWARE QUAL J, V19, P801, DOI 10.1007/s11219-011-9135-x
   Andreolini M, 2005, 2005 Workshop on Techniques, Methodologies and Tools for Performance Evaluation of Complex Systems, Proceedings, P15, DOI 10.1109/FIRB-PERF.2005.8
   [Anonymous], 2000, P C FUT SOFTW ENG IC, DOI DOI 10.1145/336512.336532
   [Anonymous], 2011, AUTONOMIC LOAD TESTI
   [Anonymous], 1991, The Art of Computer Systems Performance Analysis: Techniques for Experimental Design, Measurement, Simulation, and Modeling
   [Anonymous], P COMP MAN GROUP C
   [Anonymous], SIEMENS PROGRAMS HR
   [Anonymous], 2013, P 2013 INT WORKSHOP
   [Anonymous], 1999, P 1 ACM C EL COMM
   Avritzer A, 1996, SOFTWARE PRACT EXPER, V26, P613, DOI 10.1002/(SICI)1097-024X(199606)26:6<613::AID-SPE23>3.0.CO;2-5
   AVRITZER A, 1995, IEEE T SOFTWARE ENG, V21, P705, DOI 10.1109/32.464549
   Avritzer A., 1994, SIGSOFT Software Engineering Notes, P44
   Avritzer A., 1993, SIGSOFT Software Engineering Notes, V18, P82, DOI 10.1145/174146.154244
   Avritzer A, 1996, IEEE SOFTWARE, V13, P76, DOI 10.1109/52.536461
   Avritzer A., 2002, P 3 INT WORKSHOP SOF, P17
   Avritzer A., 2008, Proceedings of the 2008 conference of the center for advanced studies on collaborative research: meeting of minds, CASCON '08, P157
   Avritzer A., 2012, Resilience Assessment and Evaluation of Computing Systems, P305, DOI [10.1007/978-3-642-29032-9_15, DOI 10.1007/978-3-642-29032-9_15]
   Bainbridge D, 2009, LECT NOTES COMPUT SC, V5714, P203, DOI 10.1007/978-3-642-04346-8_21
   Baltas N., 2012, 2012 Ninth International Conference on Quantitative Evaluation of Systems (QEST 2012), P13, DOI 10.1109/QEST.2012.26
   Barber S, 2004, WSE 2004: SIXTH IEEE INTERNATIONAL WORKSHOP ON WEB SITE EVOLUTION, PROCEEDINGS, P51, DOI 10.1109/WSE.2004.10002
   Barna C, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P872, DOI 10.1145/1985793.1985930
   Bayan M, 2008, APPLIED COMPUTING 2008, VOLS 1-3, P661
   Bayan MS, 2006, P INT COMP SOFTW APP, P229
   Bear T., 2006, SHOOTOUT LOAD RUNNER
   Beizer Boris, 1984, Software System Testing and Quality Assurance
   Bertolino Antonia, 2008, 2008 23rd IEEE/ACM International Conference on Automated Software Engineering, P399, DOI 10.1109/ASE.2008.58
   Bertolino A, 2008, COMM COM INF SC, V17, P206
   Borges F, 2014, PROCEDIA COMPUT SCI, V29, P73, DOI 10.1016/j.procs.2014.05.007
   Bozdag E, 2009, J WEB ENG, V8, P287
   Briand LC, 2005, GECCO 2005: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOLS 1 AND 2, P1021
   Bulej L, 2005, PERFORM EVALUATION, V60, P345, DOI 10.1016/j.peva.2004.10.013
   Cai Y., 2007, Proceedings of the twenty-second IEEE/ACM international conference on Automated software engineering, ASE '07, P353
   Cai YH, 2004, 19TH INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P36, DOI 10.1109/ASE.2004.1342722
   CALZAROSSA M, 1993, P IEEE, V81, P1136, DOI 10.1109/5.236191
   Canfora G, 2005, GECCO 2005: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOLS 1 AND 2, P1069
   Cangussu J.W., 2007, Proceedings of the Nineteenth International Conference on Software Engineering Knowledge Engineering (SEKE), P145
   Cangussu JW, 2009, INT J SOFTW ENG KNOW, V19, P481, DOI 10.1142/S0218194009004283
   Casale Giuliano., 2009, MID98 DLEWARE 09, P1, DOI 10.1109/OCEANSE.2009.5278104
   Chakravarty Anand, 2010, Proceedings of the Seventh International Conference on Information Technology: New Generations (ITNG 2010), P1004, DOI 10.1109/ITNG.2010.149
   Che XP, 2013, 2013 IEEE 27TH INTERNATIONAL CONFERENCE ON ADVANCED INFORMATION NETWORKING AND APPLICATIONS WORKSHOPS (WAINA), P1439, DOI 10.1109/WAINA.2013.12
   Cohen I., 2005, Proceedings of the twentieth ACM symposium on Operating systems principles, SOSP '05, (New York, NY, USA), P105, DOI DOI 10.1145/1095810.1095821
   Cornelissen B, 2009, IEEE T SOFTWARE ENG, V35, P684, DOI 10.1109/TSE.2009.28
   Costa Leandro T., 2012, SEKE, P112
   Csurgay P, 1999, INT FED INFO PROC, V21, P317
   da Silveira M.B., 2011, Proceedings of the 23rd International Conference on Software Engineering Knowledge Engineering (SEKE 2011), P470
   Dawar S, 2013, L N INST COMP SCI SO, V125, P94
   De Barros M, 2007, I C DEPEND SYS NETWO, P612, DOI 10.1109/DSN.2007.102
   de Sousa Santos I., 2011, Proceedings of the 23rd International Conference on Software Engineering Knowledge Engineering (SEKE 2011), P258
   Del Grosso C, 2005, GECCO 2005: Genetic and Evolutionary Computation Conference, Vols 1 and 2, P1037
   Denaro G., 2004, Software Engineering Notes, V29, P94, DOI 10.1145/974043.974059
   Denaro G., 2005, PERFORMANCE TESTING
   Dhote MR, 2013, IEEE SOFTWARE, V30, P70, DOI 10.1109/MS.2012.132
   Di Penta M, 2007, GECCO 2007: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOL 1 AND 2, P1090
   Dillenseger B, 2009, ANN TELECOMMUN, V64, P101, DOI 10.1007/s12243-008-0067-9
   Dimitrov S., 2013, P 14 INT C COMP SYST, P59, DOI [10.1145/2516775.2516799, DOI 10.1145/2516775.2516799]
   Din G, 2008, LECT NOTES COMPUT SC, V5047, P135, DOI 10.1007/978-3-540-68524-1_11
   Draheim D, 2006, 10TH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P55
   Dumitrescu C, 2004, FIFTH IEEE/ACM INTERNATIONAL WORKSHOP ON GRID COMPUTING, PROCEEDINGS, P289, DOI 10.1109/GRID.2004.21
   Dunning S., 2011, Proceedings of the second joint WOSP/SIPEW international conference on Performance engineering, ICPE '11, P371
   Duttagupta S, 2011, UKSIM EURO SYMP COMP, P424, DOI 10.1109/EMS.2011.56
   Elnaffar S., 2002, 2002461 QUEENS U
   Farrell B.L., 1998, Proceedings of the 1998 Computer Management Group Conference (CMG), P910
   Foo King Chun, 2010, Proceedings of the Tenth International Conference on Quality Software (QSIC 2010), P32, DOI 10.1109/QSIC.2010.35
   Friedman E.M., 2003, Proceedings of the 2003 Computer Management Group Conference (CMG), P57
   Gao Q, 2013, 2013 IEEE SEVENTH INTERNATIONAL SYMPOSIUM ON SERVICE-ORIENTED SYSTEM ENGINEERING (SOSE 2013), P429, DOI 10.1109/SOSE.2013.59
   Garousi V., 2006, 28th International Conference on Software Engineering Proceedings, P391, DOI 10.1145/1134285.1134340
   Garousi V., 2008, 10 ANN C GENETIC EVO, P1743
   Garousi V, 2008, J SYST SOFTWARE, V81, P161, DOI 10.1016/j.jss.2007.05.037
   Garousi V, 2010, IEEE T SOFTWARE ENG, V36, P778, DOI 10.1109/TSE.2010.5
   Georges A, 2007, OOPSLA: 22ND INTERNATIONAL CONFERENCE ON OBJECT-ORIENTED PROGRAMMING, SYSTEMS, LANGUAGES, AND APPLICATIONS, PROCEEDINGS, P57
   Ghaith S., 2013, P INT S SOFTW TEST A, P370, DOI DOI 10.1145/2483760.2492399
   Ghaith S, 2013, EUR CON SFTWR MTNCE, P379, DOI 10.1109/CSMR.2013.54
   Gheorghiu G., 2005, MORE PERFORMANCE VS
   Glaser A.L., 1999, Proceedings of the 1999 Computer Management Group Conference (CMG), P686
   Gorton I., 2000, Essential Software Architecture
   Grechanik M., 2010, P IEEE 21 INT S SOFT, P368
   Grechanik M, 2012, PROC INT CONF SOFTW, P156, DOI 10.1109/ICSE.2012.6227197
   Grossman D, 1996, IEEE SOFTWARE, V13, P50, DOI 10.1109/52.536458
   Gu YY, 2009, WISM: 2009 INTERNATIONAL CONFERENCE ON WEB INFORMATION SYSTEMS AND MINING, PROCEEDINGS, P320, DOI 10.1109/WISM.2009.73
   Han S, 2012, PROC INT CONF SOFTW, P145, DOI 10.1109/ICSE.2012.6227198
   Hayes R., 2000, Proceedings of the 2000 Computer Management Group Conference (CMG), P275
   Hill JH, 2008, FIFTEENTH IEEE INTERNATIONAL CONFERENCE AND WORKSHOPS ON THE ENGINEERING OF COMPUTER-BASED SYSTEMS, PROCEEDINGS, P66, DOI 10.1109/ECBS.2008.20
   Hill JH, 2007, ECBS 2007: 14TH ANNUAL IEEE INTERNATIONAL CONFERENCE AND WORKSHOPS ON THE ENGINEERING OF COMPUTER-BASED SYSTEMS, PROCEEDINGS, P307
   Hill JH, 2009, LECT NOTES COMPUT SC, V5870, P744, DOI 10.1007/978-3-642-05148-7_52
   Hill JH, 2010, IEEE SOFTWARE, V27, P65, DOI 10.1109/MS.2009.197
   Ho CW, 2007, INT REQUIR ENG CONF, P79, DOI 10.1109/RE.2007.57
   Ho CW, 2008, INT REQUIR ENG CONF, P135, DOI 10.1109/RE.2008.51
   Hoskins D.S., 2005, P 5 INT WORKSHOP SOF
   Huebner Frank., 2000, Performance Engineering, P283, DOI [10.1007/3-540-45156-0_18, DOI 10.1007/3-540-45156-0_18]
   Jiang M, 2008, IEEE HI ASS SYS ENGR, P323, DOI 10.1109/HASE.2008.16
   Jiang ZM, 2008, J SOFTW MAINT EVOL-R, V20, P249, DOI 10.1002/smr.374
   Jiang ZM, 2009, PROC IEEE INT CONF S, P125, DOI 10.1109/ICSM.2009.5306331
   Jiang ZM, 2008, PROC IEEE INT CONF S, P307, DOI 10.1109/ICSM.2008.4658079
   Johnson MJ, 2007, IEEE SOFTWARE, V24, P67, DOI 10.1109/MS.2007.77
   JUANG J, 1993, APPL SYSTEM IDENTIFI
   Kalibera T, 2005, MASCOTS 2005:13th IEEE International Symposium on Modeling, Analysis, and Simulation of Computer and Telecommunication Systems, P183, DOI 10.1109/MASCOTS.2005.18
   Kalita M, 2011, IET SOFTW, V5, P357, DOI 10.1049/iet-sen.2010.0139
   Kant K, 2002, LECT NOTES COMPUT SC, V2324, P227
   Kao CH, 2013, INT CONF QUAL SOFTW, P349, DOI 10.1109/QSIC.2013.32
   Karr A.F., 2005, Proceedings of the 1st international workshop on Advances in model-based testing (AMOST), P1
   Kim G.-H., 2013, IT CONVERGENCE SECUR, P1191
   Kim GB, 2005, QSIC 2005: Fifth International Conference on Quality Software, Proceedings, P250
   Krishnamurthy D., 2003, P COMP MEAS GROUP C, P639
   Krishnamurthy D, 2006, IEEE T SOFTWARE ENG, V32, P868, DOI 10.1109/TSE.2006.106
   Leganza G.M., 1991, Proceedings of the 1991 Computer Management Group Conference (CMG), P994
   Leganza G.M., 1990, Proceedings of the 1990 Computer Management Group Conference (CMG), P1018
   Lim BH, 2006, 2006 IEEE INTERNATIONAL CONFERENCE ON MULTIMEDIA AND EXPO - ICME 2006, VOLS 1-5, PROCEEDINGS, P581, DOI 10.1109/ICME.2006.262475
   Ljung L., 1987, SYSTEM IDENTIFICATIO
   Lutteroth C, 2008, IEEE INT ENTERP DIST, P149, DOI 10.1109/EDOC.2008.40
   Maâlej AJ, 2013, IEEE ICST WORKSHOP, P144, DOI 10.1109/ICSTW.2013.25
   Maâlej AJ, 2012, P INT COMP SOFTW APP, P371, DOI 10.1109/COMPSAC.2012.100
   Maccabee M.M., 2002, Proceedings of the 2002 Computer Management Group Conference (CMG), P353
   Malik H., 2010, 2010 IEEE Proceedings of 34th Annual Computer Software and Applications Conference (COMPSAC 2010), P117, DOI 10.1109/COMPSAC.2010.18
   Malik H., 2010, Proceedings of the 2010 IEEE 21st International Symposium on Software Reliability Engineering (ISSRE 2010), P201, DOI 10.1109/ISSRE.2010.43
   Malik H, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P1012, DOI 10.1109/ICSE.2013.6606651
   Malik H, 2010, EUR CON SFTWR MTNCE, P222, DOI 10.1109/CSMR.2010.39
   Mansell R, 2010, INTERNATIONAL HANDBOOK OF INTERNET RESEARCH, P341, DOI [10.1007/978-1-4020-9789-8_21, 10.1109/COMPSACW.2010.66]
   Meier J., 1997, PERFORMANCE TESTING
   Meira J. A., 2012, 2012 IEEE Fifth International Conference on Software Testing, Verification and Validation (ICST 2012), P642, DOI 10.1109/ICST.2012.153
   Meira J. A., 2013, J INF DATA MANAG, V4, P279
   Meisner D., 2012, 2012 IEEE International Symposium on Performance Analysis of Systems & Software (ISPASS), P35, DOI 10.1109/ISPASS.2012.6189204
   Menasce D.A., 2000, SCALING E BUSINESS T
   Menasce D A., 2002, Computer Measurement Group (CMG) Conference, P271
   Menasce D.A., 1997, Capacity Planning and Performance Modeling: From Mainframes to Client-Server Systems
   Menasce D. A., 2001, Capacity Planning for Web Services: Metrics, Models, and Methods
   Menascé DA, 2003, IEEE INTERNET COMPUT, V7, P89, DOI 10.1109/MIC.2003.1232524
   Menascé DA, 2002, IEEE INTERNET COMPUT, V6, P70, DOI 10.1109/MIC.2002.1020328
   Merton J.K., 1997, Proceedings of the 1997 Computer Management Group Conference (CMG), P594
   Merton J.K., 1999, Proceedings of the 1994 Computer Management Group Conference (CMG), P118
   Mi NF, 2008, LECT NOTES COMPUT SC, V5346, P265
   Murth M, 2010, LECT NOTES COMPUT SC, V6428, P45, DOI 10.1007/978-3-642-16961-8_14
   Musuvathi M., 2008, Proceedings of the 8th USENIX conference on Operating systems design and implementation, OSDI'08, P267
   Mytkowicz T, 2010, PLDI '10: PROCEEDINGS OF THE 2010 ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P187, DOI 10.1145/1806596.1806618
   Nejati Shiva, 2012, Model Driven Engineering Languages and Systems. Proceedings 15th International Conference, MODELS 2012, P759, DOI 10.1007/978-3-642-33666-9_48
   Netto M. A. S., 2011, 2011 IEEE International Symposium on Parallel & Distributed Processing, Workshops and Phd Forum, P993, DOI 10.1109/IPDPS.2011.244
   Nguyen THD, 2011, ASIA PAC SOFWR ENG, P282, DOI [10.1109/APSC.2011.59, 10.1109/APSEC.2011.59]
   Podelko A., Load Testing Tools
   Pozin BA, 2011, PROGRAM COMPUT SOFT+, V37, P15, DOI 10.1134/S036176881101004X
   Savoia A., 2001, STQE MAGAZINE, P32
   Schieferdecker I., 2005, International Journal on Software Tools for Technology Transfer, V7, P351, DOI 10.1007/s10009-004-0165-6
   Shirodkar S., 2007, Proceedings of the 16th international conference on World Wide Web (WWW), P1291
   Snellman N, 2011, EUROMICRO CONF PROC, P161, DOI 10.1109/SEAA.2011.33
   Sopitkamol M., 2005, P 5 INT WORKSHOP SOF, P53
   Stankovic N., 2006, Proceedings of the 2006 International Conference on Software Engineering Research and Practice and Conference on Programming Languages and Compilers SERP'06, P38
   Stankovic N, 2006, INT CONF ELECTRO INF, P152
   Stochel M. G., 2012, Proceedings of the 2012 IEEE 36th IEEE Annual Computer Software and Applications Conference Workshops (COMPSACW), P446, DOI 10.1109/COMPSACW.2012.85
   Stolberg S. G., 2013, INSIDE RACE RESCUE H
   Syer M. D., 2011, 2011 IEEE 27th International Conference on Software Maintenance, P83, DOI 10.1109/ICSM.2011.6080775
   Syer MD, 2013, PROC IEEE INT CONF S, P110, DOI 10.1109/ICSM.2013.22
   Syer MD, 2011, CONF PROC INT SYMP C, P215, DOI 10.1109/ICPC.2011.38
   Tran P, 2003, SOFTW TEST VERIF REL, V13, P229, DOI 10.1002/stvr.279
   Vail C., 2005, Stress, load, volume, performance, benchmark and base line testing tool evaluation and comparison
   Visser Willem, 2009, Model Checking Software. Proceedings 16th International SPIN Workshop, DOI 10.1007/978-3-642-02652-2_4
   Vokolos F.I, 1998, Proceedings of the 1st international workshop on Software and performance, WOSP '98, P80
   Wang YG, 2004, LECT NOTES COMPUT SC, V3184, P142
   Weyuker EJ, 2000, IEEE T SOFTWARE ENG, V26, P1147, DOI 10.1109/32.888628
   Weyuker EJ, 2002, IBM SYST J, V41, P45, DOI 10.1147/sj.411.0045
   White J., 2010, CORR
   Woodside M, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P171, DOI 10.1109/FOSE.2007.32
   XiangFeng Meng, 2011, 2011 International Conference on Electronic & Mechanical Engineering and Information Technology (EMEIT 2011), P4254, DOI 10.1109/EMEIT.2011.6023983
   Xie JM, 2008, HPCC 2008: 10TH IEEE INTERNATIONAL CONFERENCE ON HIGH PERFORMANCE COMPUTING AND COMMUNICATIONS, PROCEEDINGS, P312, DOI 10.1109/HPCC.2008.53
   Xingen Wang, 2010, 2010 International Symposium on Parallel and Distributed Processing with Applications (ISPA 2010), P483, DOI 10.1109/ISPA.2010.24
   Yan MZ, 2012, IEEE INT C CL COMP, P576, DOI 10.1109/CLUSTER.2012.20
   Yang C.-S. D., 1996, SIGSOFT Software Engineering Notes, V21, P201, DOI 10.1145/226295.226318
   Yang X, 2008, LECT NOTES COMPUT SC, V4976, P190
   Zhang J, 2002, SOFTWARE PRACT EXPER, V32, P1411, DOI 10.1002/spe.487
   Zhang J, 1999, INT FED INFO PROC, V28, P119
   Zhang Pingyu, 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P43, DOI 10.1109/ASE.2011.6100093
   Zhang P, 2012, P 2012 INT S SOFTW T, P89, DOI DOI 10.1145/2338965.2336764
   [No title captured]
NR 173
TC 87
Z9 92
U1 0
U2 13
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD NOV
PY 2015
VL 41
IS 11
BP 1091
EP 1118
DI 10.1109/TSE.2015.2445340
PG 28
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA CW5EM
UT WOS:000365018200003
DA 2024-07-18
ER

PT J
AU Lin, YD
   Rojas, JF
   Chu, ETH
   Lai, YC
AF Lin, Ying-Dar
   Rojas, Jose F.
   Chu, Edward T. -H.
   Lai, Yuan-Cheng
TI On the Accuracy, Efficiency, and Reusability of Automated Test Oracles
   for Android Devices
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Reusable software; test execution; testing tools; user interfaces
AB Automated GUI testing consists of simulating user events and validating the changes in the GUI in order to determine if an Android application meets specifications. Traditional record-replay testing tools mainly focus on facilitating the test case writing process but not the replay and verification process. The accuracy of testing tools degrades significantly when the device under test (DUT) is under heavy load. In order to improve the accuracy, our previous work, SPAG, uses event batching and smart wait function to eliminate the uncertainty of the replay process and adopts GUI layout information to verify the testing results. SPAG maintains an accuracy of up to 99.5 percent and outperforms existing methods. In this work, we propose smart phone automated GUI testing tool with camera (SPAG-C), an extension of SPAG, to test an Android hardware device. Our goal is to further reduce the time required to record test cases and increase reusability of the test oracle without compromising test accuracy. In the record stage, SPAG captures screenshots from device's frame buffer and writes verification commands into the test case. Unlike SPAG, SPAG-C captures the screenshots from an external camera instead of frame buffer. In the replay stage, SPAG-C automatically performs image comparison while SPAG simply performs a string comparison to verify the test results. In order to make SPAG-C reusable for different devices and to allow better synchronization at the time of capturing images, we develop a new architecture that uses an external camera and Web services to decouple the test oracle. Our experiments show that recording a test case using SPAG-C's automatic verification is as fast as SPAG's but more accurate. Moreover, SPAG-C is 50 to 75 percent faster than SPAG in achieving the same test accuracy. With reusability, SPAG-C reduces the testing time from days to hours for heterogeneous devices.
C1 [Lin, Ying-Dar; Rojas, Jose F.] Natl Chiao Tung Univ, Dept Comp Sci, Hsinchu, Taiwan.
   [Chu, Edward T. -H.] Natl Yunlin Univ Sci & Technol, Dept Comp Sci & Informat Engn, Yunlin, Taiwan.
   [Lai, Yuan-Cheng] Natl Taiwan Univ Sci & Technol, Dept Informat Management, Taipei, Taiwan.
C3 National Yang Ming Chiao Tung University; National Yunlin University
   Science & Technology; National Taiwan University of Science & Technology
RP Lin, YD (corresponding author), Natl Chiao Tung Univ, Dept Comp Sci, 1001 Univ Rd, Hsinchu, Taiwan.
EM ydlin@cs.nctu.edu.tw; josefcorojas@gmail.com; edwardchu@yuntech.edu.tw;
   laiyc@cs.ntust.edu.tw
FU National Science Council (NSC); Institute of Information Industry (III)
   in Taiwan
FX This work was supported in part by National Science Council (NSC) and
   Institute of Information Industry (III) in Taiwan.
CR Amalfitano D., 2011, 2011 IEEE Fourth International Conference on Software Testing, Verification and Validation Workshops (ICSTW), P252, DOI 10.1109/ICSTW.2011.77
   Anandan S, 2012, MATER SCI FORUM, V712, P1, DOI 10.4028/www.scientific.net/MSF.712.1
   Android, 2013, ANDROID HIERARCHY VI
   [Anonymous], 2013, OpenCV: Template matching
   [Anonymous], 2013, ANDROID DEV GUIDE IN
   [Anonymous], 2013, WINDOWS COMMUNICATIO
   [Anonymous], 2013, ANDROID GUITAR MODEL
   [Anonymous], 2013, ANDROID DEV GUIDE AP
   [Anonymous], 2013, SPAG C LIVE DEMO
   [Anonymous], 2011, OpenCV 2 Computer Vision Application Programming Cookbook: Over 50 recipes to master this library of programming functions for real-time computer vision
   [Anonymous], 2013, ANDROID SCREENCAST O
   Baresi Luciano., 2001, Test Oracles
   Bay H, 2008, COMPUT VIS IMAGE UND, V110, P346, DOI 10.1016/j.cviu.2007.09.014
   Chang TH, 2010, CHI2010: PROCEEDINGS OF THE 28TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, VOLS 1-4, P1535
   Choi W, 2013, ACM SIGPLAN NOTICES, V48, P623, DOI [10.1145/2544173.2509552, 10.1145/2509136.2509552]
   Grechanik M, 2009, IEEE ICST WORKSHOP, P243, DOI 10.1109/ICSTW.2009.31
   Hu Cuixiong, 2011, Proceedings of the 6th International Workshop on Automation of Software Test, P77
   Kaasila J., 2012, P 11 INT C MOB UB MU
   Lin YD, 2014, IEEE SOFTWARE, V31, P39, DOI 10.1109/MS.2013.100
   Machiry A., 2013, P 2013 9 JOINT M FDN, P224
   Mahmood R., 2012, 2012 Proceedings of 7th International Workshop on Automation of Software Test (AST 2012), P22, DOI 10.1109/IWAST.2012.6228986
   Memon A. M., 2000, Software Engineering Notes, V25, P30, DOI 10.1145/357474.355050
   Memon AM, 2002, COMPUTER, V35, P87, DOI 10.1109/MC.2002.1023795
   Microsoft MSDN, 2013, GUID TOUCH INT
   Mirzaei Nariman, 2012, ACM SIGSOFT Software Engineering Notes, V37, P1, DOI DOI 10.1145/2382756.2382798
   Pass G, 1999, MULTIMEDIA SYST, V7, P234, DOI 10.1007/s005300050125
   Takala T., 2011, Proceedings 2011 IEEE Fourth International Conference on Software Testing, Verification and Validation (ICST 2011), P377, DOI 10.1109/ICST.2011.11
   W3C working group, 2013, WEB SERVICES ARCHITE
   Xie Q, 2006, PROC IEEE INT CONF S, P145
NR 29
TC 32
Z9 35
U1 0
U2 14
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD OCT
PY 2014
VL 40
IS 10
BP 957
EP 970
DI 10.1109/TSE.2014.2331982
PG 14
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA AR9ML
UT WOS:000343899100002
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Díaz, G
   Cambronero, ME
   Martínez, E
   Schneider, G
AF Diaz, Gregorio
   Emilia Cambronero, Maria
   Martinez, Enrique
   Schneider, Gerardo
TI Specification and Verification of Normative Texts Using C-O Diagrams
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Normative documents; electronic contracts; deontic logic; formal
   verification; visual models; timed automata; C-O diagrams
AB C-O diagrams have been introduced as a means to have a more visual representation of normative texts and electronic contracts, where it is possible to represent the obligations, permissions and prohibitions of the different signatories, as well as the penalties resulting from non-fulfillment of their obligations and prohibitions. In such diagrams we are also able to represent absolute and relative timing constraints. In this paper we present a formal semantics for C-O diagrams based on timed automata extended with information regarding the satisfaction and violation of clauses in order to represent different deontic modalities. As a proof of concept, we apply our approach to two different case studies, where the method presented here has successfully identified problems in the specification.
C1 [Diaz, Gregorio; Emilia Cambronero, Maria; Martinez, Enrique] Univ Castilla La Mancha, Dept Comp Sci, Albacete 02071, Spain.
   [Schneider, Gerardo] Chalmers Univ Gothenburg, Dept Comp Sci & Engn, Gothenburg, Sweden.
C3 Universidad de Castilla-La Mancha; Chalmers University of Technology
RP Díaz, G (corresponding author), Univ Castilla La Mancha, Dept Comp Sci, Albacete 02071, Spain.
EM gregorio.diaz@uclm.es; MEmilia.Cambronero@uclm.es; enrogeen@gmail.com;
   gerardo@cse.gu.se
RI Diaz-Descalzo, Gregorio/H-9912-2015
OI Diaz-Descalzo, Gregorio/0000-0002-9116-9535; Cambronero,
   Maria/0000-0003-2153-8830
FU Spanish government [TIN2012-36812-C02-02]; FEDER founds; Swedish
   Research Council (Vetenskapsradet) [2012-5746]
FX Partially supported by: 1) The Spanish government (co financed by FEDER
   founds) with project TIN2012-36812-C02-02. 2) The project "Reliable
   Multilingual Digital Communication: Methods and Applications", funded by
   The Swedish Research Council (Vetenskapsradet, project nr. 2012-5746).
CR ALUR R, 1994, THEOR COMPUT SCI, V126, P183, DOI 10.1016/0304-3975(94)90010-8
   Angelov K, 2013, J LOGIC ALGEBR PROGR, V82, P216, DOI 10.1016/j.jlap.2013.03.002
   [Anonymous], 2006, P 10 IEEE C ENT DIST
   Behrmann G, 2004, LECT NOTES COMPUT SC, V3185, P200
   Chiu D., 2003, P HICSS, P74
   David A., 2003, LNCS, P218
   Decker G., 2009, THESIS U POSTDAM
   DESAI N, 2008, P 7 INT JOINT C AUT, P787
   DORFLER W, 1978, MATH SYST THEORY, V11, P239
   Cambronero ME, 2012, SIMUL-T SOC MOD SIM, V88, P349, DOI 10.1177/0037549710372098
   Haber E. M., 1994, Journal of Intelligent Information Systems: Integrating Artificial Intelligence and Database Technologies, V3, P263, DOI 10.1007/BF00962239
   HAREL D, 1988, COMMUN ACM, V31, P514, DOI 10.1145/42411.42414
   Hatcliff J., 2009, CSTR0901 U CENTR FLO
   Heckel R, 2005, ELECTRON NOTES THEOR, V116, P145, DOI 10.1016/j.entcs.2004.02.073
   Larsen K. G., 1997, International Journal on Software Tools for Technology Transfer, V1, P134, DOI 10.1007/s100090050010
   Lomuscio Alessio, 2008, 2008 IEEE International Conference on Web Services (ICWS), P254, DOI 10.1109/ICWS.2008.115
   Lomuscio A., 2008, 7th Int. Conf. on Autonomous Agents and Multiagent Systems AAMAS 2008, P265
   Martinez E., 2010, 2010 IEEE 7th International Conference on Services Computing (SCC 2010), P1, DOI 10.1109/SCC.2010.32
   Martínez E, 2011, LECT NOTES COMPUT SC, V7084, P636, DOI 10.1007/978-3-642-25535-9_50
   McNamara P, 2006, HBK HIST LOGIC, V7, P197
   Meyer B., 1986, TREI12CO
   Okika Joseph C., 2008, 2008 IEEE International Conference on Web Services (ICWS), P433, DOI 10.1109/ICWS.2008.36
   Pace GJ, 2009, LECT NOTES COMPUT SC, V5423, P292
   Penczek W., 2006, SERIES STUDIES COMPU, V20
   Prisacariu C, 2009, LECT NOTES ARTIF INT, V5514, P335, DOI 10.1007/978-3-642-02261-6_27
   Radha Krishna P., 2005, Information Technology & Management, V6, P363, DOI 10.1007/s10799-005-3901-z
   Ranta A., 2011, CSLI PUBLICATIONS
   Rouached M, 2005, LECT NOTES COMPUT SC, V3649, P410, DOI 10.1007/11538394_32
   Solaiman E, 2003, LECT NOTES COMPUT SC, V2910, P303
   Wright Von, 1951, Mind, V60, P1, DOI [10.1093/mind/LX.237.1, DOI 10.1093/MIND/LX.237.1]
NR 30
TC 5
Z9 5
U1 0
U2 7
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD AUG
PY 2014
VL 40
IS 8
BP 795
EP 817
DI 10.1109/TSE.2013.54
PG 23
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA AR9MG
UT WOS:000343898400004
DA 2024-07-18
ER

PT J
AU Brun, Y
   Holmes, R
   Ernst, MD
   Notkin, D
AF Brun, Yuriy
   Holmes, Reid
   Ernst, Michael D.
   Notkin, David
TI Early Detection of Collaboration Conflicts and Risks
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Collaborative development; collaboration conflicts; developer awareness;
   speculative analysis; version control; Crystal
ID SOFTWARE; MODELS
AB Conflicts among developers' inconsistent copies of a shared project arise in collaborative development and can slow progress and decrease quality. Identifying and resolving such conflicts early can help. Identifying situations which may lead to conflicts can prevent some conflicts altogether. By studying nine open-source systems totaling 3.4 million lines of code, we establish that conflicts are frequent, persistent, and appear not only as overlapping textual edits but also as subsequent build and test failures. Motivated by this finding, we develop a speculative analysis technique that uses previously unexploited information from version control operations to precisely diagnose important classes of conflicts. Then, we design and implement Crystal, a publicly available tool that helps developers identify, manage, and prevent conflicts. Crystal uses speculative analysis to make concrete advice unobtrusively available to developers.
C1 [Brun, Yuriy] Univ Massachusetts, Sch Comp Sci, Dept Comp Sci, Amherst, MA 01003 USA.
   [Holmes, Reid] Univ Waterloo, David R Cheriton Sch Comp Sci, Waterloo, ON N2L 3G1, Canada.
   [Ernst, Michael D.; Notkin, David] Univ Washington, Dept Comp Sci & Engn, Seattle, WA 98195 USA.
C3 University of Massachusetts System; University of Massachusetts Amherst;
   University of Waterloo; University of Washington; University of
   Washington Seattle
RP Brun, Y (corresponding author), Univ Massachusetts, Sch Comp Sci, Dept Comp Sci, 140 Governors Dr, Amherst, MA 01003 USA.
EM brun@cs.umass.edu; rtholmes@cs.uwaterloo.ca; mernst@cs.washington.edu
OI Brun, Yuriy/0000-0003-3027-7986
FU US National Science Foundation [CNS-0937060, CCF-0963757]; National
   Science and Engineering Research Council Postdoctoral Fellowship;
   Microsoft Research through a Software Engineering Innovation Foundation
   grant; Direct For Computer & Info Scie & Enginr; Division of Computing
   and Communication Foundations [0963757] Funding Source: National Science
   Foundation
FX The Crystal beta users provided valuable feedback. This material is
   based upon work supported by the US National Science Foundation under
   grants CNS-0937060 to the Computing Research Association for the CI
   Fellows Project and CCF-0963757, by a National Science and Engineering
   Research Council Postdoctoral Fellowship, and by Microsoft Research
   through a Software Engineering Innovation Foundation grant.
CR Al-Ani B., 2008, Proc. Int'l Workshop Cooperative and Human Aspects of Software Eng. (CHASE 08), P1, DOI DOI 10.1145/1370114.1370115
   [Anonymous], 113 IR VRIJ U
   Appleton B., 1998, P PATT LANG PROGR C
   BALL T, 1997, P WORKSH PROC MOD EM
   Biehl JT, 2007, CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, VOLS 1 AND 2, P1313
   Bird C, 2009, 2009 6TH IEEE INTERNATIONAL WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES, P1, DOI 10.1109/MSR.2009.5069475
   Bird Christian, 2012, P ACM SIGSOFT 20 INT
   Brun Y., 2010, P FSE SDP WORKSH FUT, P59
   Brun Y., 2011, P 19 ACM SIGSOFT S 1
   Brun Y., 2011, Proceedings of the 19th ACM SIGSOFT symposium and the 13th European Conference on Foundations of Software Engineering (FSE'11), P168, DOI [10.1145/2025113.2025139, DOI 10.1145/2025113.2025139]
   Cataldo M., 2006, P 2006 20 06 ANN C C, P353, DOI DOI 10.1145/1180875.1180929
   Collins-Sussman B., 2002, LINUX, V3
   Conradi R, 1998, ACM COMPUT SURV, V30, P232, DOI 10.1145/280277.280280
   de Souza Cleidson R. B., 2003, P 2003 INT ACM SIGGR, P105, DOI DOI 10.1145/958160.958177
   Dewan P., 2008, P 2008 INT WORKSH RE, P21
   Dewan P, 2007, ECSCW 2007: PROCEEDINGS OF THE 10TH EUROPEAN CONFERENCE ON COMPUTER-SUPPORTED COOPERATIVE WORK, P159, DOI 10.1007/978-1-84800-031-5_9
   Elbaum Sebastian, 2006, P 14 ACM SIGSOFT INT, P253
   Estublier Jacky., 2005, SCM 05, P59
   Glasser D.S., 2007, THESIS MIT DEPT EECS
   Grinter R. E., 1995, Conference on Organizational Computing Systems, P168, DOI 10.1145/224019.224036
   Guimaraes M.L., 2012, P INT C SOFTW ENG
   Guimaraes ML, 2010, 2010 ICSE WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING (CHASE 2010), P56
   Hattori L., 2010, 2010 32nd International Conference on Software Engineering (ICSE), P235, DOI 10.1145/1810295.1810339
   Henderson P., 1985, Proceedings of the 8th International Conference on Software Engineering (Cat. No.85CH2139-4), P68
   HORWITZ S, 1989, ACM T PROGR LANG SYS, V11, P345, DOI 10.1145/65979.65980
   KARINTHI RR, 1987, SIGPLAN NOTICES, V22, P38, DOI 10.1145/960114.29654
   Livshits V.B., 2005, ESEC SIGSOFT FSE, P296, DOI [DOI 10.1145/1095430.1081754, DOI 10.1145/1081706.1081754]
   Mens T, 2002, IEEE T SOFTWARE ENG, V28, P449, DOI 10.1109/TSE.2002.1000449
   Muslu K., 2012, P ACM INT C OBJ OR P
   Nagappan N., 2006, 28th International Conference on Software Engineering Proceedings, P452, DOI 10.1145/1134285.1134349
   O'Sullivan B., 2009, Queue, V7, P30, DOI DOI 10.1145/1600000/1595636/P30OSULLIVAN.PDF?KEY1=1595636&KEY2=01447086!26COLL=GUIDE&DL=GUIDE&CFID=81018117&CFTOKEN=10948435
   Perry DE, 2001, ACM T SOFTW ENG METH, V10, P308, DOI 10.1145/383876.383878
   Rochkind M. J., 1975, IEEE Transactions on Software Engineering, VSE-1, P364, DOI 10.1109/TSE.1975.6312866
   Rodriguez-Bustos C., 2012, 2012 9th IEEE Working Conference on Mining Software Repositories (MSR 2012), P36, DOI 10.1109/MSR.2012.6224297
   Saff D, 2003, ISSRE 2003: 14TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P281, DOI 10.1109/ISSRE.2003.1251050
   Saff D., 2004, Software Engineering Notes, V29, P76, DOI 10.1145/1013886.1007523
   Saff D., 2004, P 2 ECL TECHN EXCH W
   Saff David., 2005, PROC ASE, P114, DOI DOI 10.1145/1101908.1101927
   Sarma A, 2003, PROC INT CONF SOFTW, P444, DOI 10.1109/ICSE.2003.1201222
   Sarma A., 2005, UCIISR053 I SOFTW RE
   Sarma A., 2008, 16th ACM SIGSOFT International Symposium on Foundation of Software engineering, P113, DOI DOI 10.1145/1453101.1453118
   Sarma A., 2007, C AUTOMATED SOFTWARE, P94
   TICHY WF, 1985, SOFTWARE PRACT EXPER, V15, P637, DOI 10.1002/spe.4380150703
   Walrad C, 2002, COMPUTER, V35, P31, DOI 10.1109/MC.2002.1033025
   Wloka J, 2009, PROC INT CONF SOFTW, P507, DOI 10.1109/ICSE.2009.5070549
   Wuttke J., 2012, TINY T COMPUTER  SEP
   Zimmermann T, 2004, PROC INT CONF SOFTW, P563, DOI 10.1109/ICSE.2004.1317478
   Zimmermann T., 2007, P 4 INT WORKSH MIN S
NR 48
TC 54
Z9 61
U1 0
U2 14
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD OCT
PY 2013
VL 39
IS 10
BP 1358
EP 1375
DI 10.1109/TSE.2013.28
PG 18
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 228FO
UT WOS:000325171400003
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Marron, M
   Sanchez, C
   Su, ZD
   Fahndrich, M
AF Marron, Mark
   Sanchez, Cesar
   Su, Zhendong
   Fahndrich, Manuel
TI Abstracting Runtime Heaps for Program Understanding
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Heap structure; runtime analysis; memory profiling; program
   understanding
AB Modern programming environments provide extensive support for inspecting, analyzing, and testing programs based on the algorithmic structure of a program. Unfortunately, support for inspecting and understanding runtime data structures during execution is typically much more limited. This paper provides a general purpose technique for abstracting and summarizing entire runtime heaps. We describe the abstract heap model and the associated algorithms for transforming a concrete heap dump into the corresponding abstract model as well as algorithms for merging, comparing, and computing changes between abstract models. The abstract model is designed to emphasize high-level concepts about heap-based data structures, such as shape and size, as well as relationships between heap structures, such as sharing and connectivity. We demonstrate the utility and computational tractability of the abstract heap model by building a memory profiler. We use this tool to identify, pinpoint, and correct sources of memory bloat for programs from DaCapo.
C1 [Marron, Mark; Sanchez, Cesar] Imdea Software Inst, Fac Informat, Madrid 28660, Spain.
   [Su, Zhendong] Univ Calif Davis, Dept Comp Sci, Davis, CA 95616 USA.
   [Fahndrich, Manuel] Microsoft Res, Redmond, WA 98052 USA.
C3 IMDEA Software Institute; University of California System; University of
   California Davis; Microsoft
RP Marron, M (corresponding author), Imdea Software Inst, Fac Informat, Bloque 3,Campus Montegancedo UPM, Madrid 28660, Spain.
EM mark.marron@imdea.org; cesar.sanchez@imdea.org; Davis.su@ucdavis.edu;
   maf@microsoft.com
OI Su, Zhendong/0000-0002-2970-1391; Sanchez, Cesar/0000-0003-3927-4773
FU US National Science Foundation (NSF) [CCF-1117603, CNS-0917392]; EU [FET
   IST-231620 HATS]; MICINN [TIN-2008-05624 DOVES]; CAM [S2009TIC-1465
   PROME-TIDOS]; COST [IC0901]; Microsoft SEIF
FX The authors would like to thank Peli de Halleux for setting up the
   online interface at RiSE4fun and Chris Lovett for his help with DGML.
   Additionally, they would like to thank Todd Mytkowicz, Wolfram Schulte,
   and the reviewers for their input and constructive comments on this
   work. This work was supported in part by US National Science Foundation
   (NSF) grants CCF-1117603 and CNS-0917392, the EU project FET IST-231620
   HATS, MICINN project TIN-2008-05624 DOVES, CAM project S2009TIC-1465
   PROME-TIDOS, the COST Action IC0901 Rich Model Toolkit, and a 2012
   Microsoft SEIF Award.
CR Aftandilian E., 2010, P 5 INT S SOFTW VIS
   [Anonymous], P ACM SIGPLAN C PROG
   [Anonymous], 2012, COMMON COMPILER INFR
   [Anonymous], 1998, STANDARD PERFORMANCE
   [Anonymous], 2012, DGML SPECIFICATION
   Barr E., 2011, MSRTR2011135
   Berdine J., 2007, P 19 INT C COMP AID
   Blackburn S., 2006, P 21 ACM ANN SIGPLAN
   Caballero J., 2012, TRIMDEASW2012001 IMD
   Clarke DavidG., 1998, P 13 ACM SIGPLAN C O
   Cousot P., 1979, P 6 ACM SIGACT SIGPL
   DeLine R., 2010, P 32 ACM IEEE INT C
   Deutsch A., 1994, P ACM SIGPLAN C PROG
   Dillig I., 2011, P 38 ACM ANN SIGACT
   Ghiya R., 1996, P 23 ACM SIGACT SIGP
   Hill T, 2002, J VISUAL LANG COMPUT, V13, P319, DOI [10.1006/jvlc.2002.0238, 10.1006/S1045-926X(02)00029-0]
   Jump M., 2009, P INT S MEM MAN
   Jump M., 2007, P 34 ACM ANN SIGACT
   Lattner C., 2007, P ACM SIGPLAN C PROG
   Liblit B., 2005, P ACM SIGPLAN C PROG
   Liu C., 2005, SIGSOFT, V30, P2860
   Marron M., 2007, P 7 ACM SIGPLAN SIGS
   Marron M., 2008, P 8 ACM SIGPLAN SOGS
   Marron M., 2009, P ITN S MEM MAN
   Mitchell N., 2006, P 20 EUR C OBJ OR PR
   Mitchell N., 2009, P 23 EUR C OBJ OR PR
   Mitchell N., 2007, P ACM 22 ANN SIGPLAN
   Muchnick S., 1997, ADV COMPILER DESIGN
   Nielson F., 1999, Principles of Program Analysis
   Pauw W. D., 1999, P 13 EUR C OBJ OR PR
   Pheng S., 2006, P 14 IEEE INT C PROG
   Polishchuk M., 2007, P 34 ACM SIGACT SIGP
   Potanin A., 2004, P AUSTR SOFTW ENG C
   Sagiv S., 1999, P 26 ACM SIGACT SIGP
   Zeller A., 2002, P 10 ACM SIGSOFT S F
   Zimmermann T., 2001, P INT SEM REV LECT S
NR 36
TC 11
Z9 15
U1 0
U2 3
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUN
PY 2013
VL 39
IS 6
BP 774
EP 786
DI 10.1109/TSE.2012.69
PG 13
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 149RG
UT WOS:000319338200004
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Wang, XY
   Zhang, L
   Xie, T
   Mei, H
   Sun, JS
AF Wang, Xiaoyin
   Zhang, Lu
   Xie, Tao
   Mei, Hong
   Sun, Jiasu
TI Locating Need-to-Externalize Constant Strings for Software
   Internationalization with Generalized String-Taint Analysis
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Software internationalization; need-to-externalize constant strings;
   string-taint analysis
ID PRECISE ANALYSIS; INJECTION
AB Nowadays, a software product usually faces a global market. To meet the requirements of different local users, the software product must be internationalized. In an internationalized software product, user-visible hard-coded constant strings are externalized to resource files so that local versions can be generated by translating the resource files. In many cases, a software product is not internationalized at the beginning of the software development process. To internationalize an existing product, the developers must locate the user-visible constant strings that should be externalized. This locating process is tedious and error-prone due to 1) the large number of both user-visible and non-user-visible constant strings and 2) the complex data flows from constant strings to the Graphical User Interface (GUI). In this paper, we propose an automatic approach to locating need-to-externalize constant strings in the source code of a software product. Given a list of precollected API methods that output values of their string argument variables to the GUI and the source code of the software product under analysis, our approach traces from the invocation sites (within the source code) of these methods back to the need-to-externalize constant strings using generalized string-taint analysis. In our empirical evaluation, we used our approach to locate need-to-externalize constant strings in the uninternationalized versions of seven real-world open source software products. The results of our evaluation demonstrate that our approach is able to effectively locate need-to-externalize constant strings in uninternationalized software products. Furthermore, to help developers understand why a constant string requires translation and properly translate the need-to-externalize strings, we provide visual representation of the string dependencies related to the need-to-externalize strings.
C1 [Wang, Xiaoyin; Zhang, Lu; Mei, Hong; Sun, Jiasu] Peking Univ, Key Lab High Confidence Software Technol, Minist Educ, Beijing 100871, Peoples R China.
   [Wang, Xiaoyin; Zhang, Lu; Mei, Hong; Sun, Jiasu] Peking Univ, Inst Software, Sch Elect Engn & Comp Sci, Beijing 100871, Peoples R China.
   [Xie, Tao] N Carolina State Univ, Dept Comp Sci, Raleigh, NC 27695 USA.
C3 Peking University; Peking University; North Carolina State University
RP Wang, XY (corresponding author), Peking Univ, Key Lab High Confidence Software Technol, Minist Educ, Beijing 100871, Peoples R China.
EM wangxy06@sei.pku.edu.cn; zhanglu@sei.pku.edu.cn; xie@csc.ncsu.edu;
   meih@sei.pku.edu.cn; sjs@sei.pku.edu.cn
RI Wang, Xiaoyin/ABA-9508-2020
FU National Basic Research Program of China (973) [2009CB320703]; Science
   Fund for Creative Research Groups of China [61121063]; National Science
   Foundation of China [90718016, 61228203]; US National Science Foundation
   (NSF) [CNS-0720641, CCF-0725190, CCF-0845272, CCF-0915401, CNS-0958235];
   US Army Research Office [W911NF-08-1-0443]; Direct For Computer & Info
   Scie & Enginr; Division of Computing and Communication Foundations
   [0845272] Funding Source: National Science Foundation; Division Of
   Computer and Network Systems; Direct For Computer & Info Scie & Enginr
   [0958231, 0958235, 0958346, 0958199] Funding Source: National Science
   Foundation
FX The authors from Peking University are sponsored by the National Basic
   Research Program of China (973) No. 2009CB320703, the Science Fund for
   Creative Research Groups of China No. 61121063, and the National Science
   Foundation of China No. 90718016. Tao Xie's work is supported in part by
   US National Science Foundation (NSF) grants CNS-0720641, CCF-0725190,
   CCF-0845272, CCF-0915401, CNS-0958235, and US Army Research Office grant
   W911NF-08-1-0443. This research is supported by the National Science
   Foundation of China No. 61228203.
CR [Anonymous], 1993, SOFTWARE INT LOCALIZ
   [Anonymous], PRACTICAL GUIDE SOFT
   [Anonymous], 2005, INPROCEEDINGS 20 IEE
   [Anonymous], 2005, International Conference on World Wide Web, DOI [10.1145/1060745.1060809, DOI 10.1145/1060745.1060809]
   Christensen AS, 2003, LECT NOTES COMPUT SC, V2694, P1
   Clause J., 2007, P 2007 INT S SOFTW T, DOI [10.1145/1273463.1273490, DOI 10.1145/1273463.1273490]
   CYTRON R, 1991, ACM T PROGR LANG SYS, V13, P451, DOI 10.1145/115372.115320
   Dagiene V, 2004, ITRE 2004: 2nd International Conference Information Technology: Research and Education, Proceedings, P204, DOI 10.1109/ITRE.2004.1393676
   Gabel M., 2008, P 30 INT C SOFTW ENG, P321
   Geay E, 2009, PROC INT CONF SOFTW, P177, DOI 10.1109/ICSE.2009.5070519
   Gould C, 2004, PROC INT CONF SOFTW, P645, DOI 10.1109/ICSE.2004.1317486
   Guo PhilipJ., 2006, P 2006 INT S SOFTWAR, P255
   Hogan J., 2003, P AUSTR COMP SCI C
   Hooimeijer P., 2011, P USENIX C SEC
   KAM JB, 1976, J ACM, V23, P158, DOI 10.1145/321921.321938
   Kiezun A, 2009, PROC INT CONF SOFTW, P199, DOI 10.1109/ICSE.2009.5070521
   Nielson F., 1999, Principles of Program Analysis
   OCallahan R, 1997, PROC INT CONF SOFTW, P338, DOI 10.1145/253228.253351
   Tateishi Takaaki., 2011, P 2011 INT S SOFTWAR, P166
   Veanes M, 2012, ACM SIGPLAN NOTICES, V47, P137, DOI 10.1145/2103621.2103674
   Wang X., 2010, Proceedings of the IEEE/ACM International Conference on Automated Software Engineering, ASE '10, P457
   Wang X., 2010, Proc. Int'l Symposium Foundations of Software Engineering (FSE), P87
   Wang XY, 2009, PROC INT CONF SOFTW, P555, DOI 10.1109/ICSE.2009.5070554
   Wang XY, 2009, PROC INT CONF SOFTW, P353, DOI 10.1109/ICSE.2009.5070535
   Wassermann G, 2007, ACM SIGPLAN NOTICES, V42, P32, DOI 10.1145/1273442.1250739
   Wassermann G, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P171, DOI 10.1145/1368088.1368112
   Weiser M., 1981, 5th International Conference on Software Engineering, P439
   WILSON RP, 1995, SIGPLAN NOTICES, V30, P1, DOI 10.1145/223428.207111
   Xie Y., 2006, P USENIX SEC S, P176
   Yu F., 2011, P INT C SOFTW ENG
   Yu F, 2009, IEEE INT CONF AUTOM, P605, DOI 10.1109/ASE.2009.20
NR 31
TC 7
Z9 11
U1 0
U2 11
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD APR
PY 2013
VL 39
IS 4
BP 516
EP 536
DI 10.1109/TSE.2012.40
PG 21
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 112UH
UT WOS:000316618800005
DA 2024-07-18
ER

PT J
AU Lawrance, J
   Bogart, C
   Burnett, M
   Bellamy, R
   Rector, K
   Fleming, SD
AF Lawrance, Joseph
   Bogart, Christopher
   Burnett, Margaret
   Bellamy, Rachel
   Rector, Kyle
   Fleming, Scott D.
TI How Programmers Debug, Revisited: An Information Foraging Theory
   Perspective
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Information foraging theory; debugging; software maintenance; programmer
   navigation; information scent; empirical software engineering
ID SOURCE CODE; MAINTENANCE; REPRESENTATION
AB Many theories of human debugging rely on complex mental constructs that offer little practical advice to builders of software engineering tools. Although hypotheses are important in debugging, a theory of navigation adds more practical value to our understanding of how programmers debug. Therefore, in this paper, we reconsider how people go about debugging in large collections of source code using a modern programming environment. We present an information foraging theory of debugging that treats programmer navigation during debugging as being analogous to a predator following scent to find prey in the wild. The theory proposes that constructs of scent and topology provide enough information to describe and predict programmer navigation during debugging, without reference to mental states such as hypotheses. We investigate the scope of our theory through an empirical study of 10 professional programmers debugging a real-world open source program. We found that the programmers' verbalizations far more often concerned scent-following than hypotheses. To evaluate the predictiveness of our theory, we created an executable model that predicted programmer navigation behavior more accurately than comparable models that did not consider information scent. Finally, we discuss the implications of our results for enhancing software engineering tools.
C1 [Lawrance, Joseph] Oregon State Univ, Wentworth Inst Technol, Corvallis, OR 97331 USA.
   [Lawrance, Joseph; Burnett, Margaret; Bellamy, Rachel] IBM TJ Watson Res Ctr, Yorktown Hts, NY USA.
   [Bogart, Christopher; Burnett, Margaret] Oregon State Univ, Sch Elect Engn & Comp Sci, Corvallis, OR 97331 USA.
   [Rector, Kyle] Univ Washington, Comp Sci & Engn Dept, Seattle, WA 98195 USA.
   [Fleming, Scott D.] Univ Memphis, Dept Comp Sci, Memphis, TN 38152 USA.
C3 Oregon State University; International Business Machines (IBM); Oregon
   State University; University of Washington; University of Washington
   Seattle; University of Memphis
RP Lawrance, J (corresponding author), Oregon State Univ, Wentworth Inst Technol, Corvallis, OR 97331 USA.
EM lawrancej@wit.edu; bogart@eecs.oregonstate.edu;
   burnett@eecs.oregonstate.edu; rachel@us.ibm.com;
   rectorky@cs.washington.edu; Scott.Fleming@memphis.edu
RI Bellamy, Rachel K. E./AAA-7116-2019
OI Bellamy, Rachel K. E./0000-0002-9403-2913; Bogart,
   Christopher/0000-0001-8581-115X
FU US Air Force Office of Scientific Research [FA9550-09-1-0213]; EUSES
   Consortium via NSF [ITR-0325273]; IBM International Faculty Award; J.
   Lawrance's IBM PhD Scholarship
FX Much of this work was performed during M. Burnett's sabbatical stay at
   the IBM T.J. Watson Research Center. This work was also supported in
   part by the US Air Force Office of Scientific Research FA9550-09-1-0213,
   by the EUSES Consortium via NSF ITR-0325273, by an IBM International
   Faculty Award, and by J. Lawrance's IBM PhD Scholarship.
CR ANDERSON JR, 1983, J VERB LEARN VERB BE, V22, P261, DOI 10.1016/S0022-5371(83)90201-3
   [Anonymous], 2005, Proc. of the European Software Engineering Conference and the ACM SIGSOFT Symposium on the Foundations of Software Engineering (ESEC/FSE'05)
   [Anonymous], 2007, P 6 JOINT M EUR SOFT
   [Anonymous], 1986, ESP 86
   [Anonymous], 1990, ADAPTIVE CHARACTER T
   Baeza-Yates Ricardo, 1999, MODERN INFORM RETRIE, V463
   BROOKS R, 1983, INT J MAN MACH STUD, V18, P543, DOI 10.1016/S0020-7373(83)80031-5
   Brooks R, 1999, INT J HUM-COMPUT ST, V51, P197, DOI 10.1006/ijhc.1977.0306
   Chi E. H., 2001, CHI 2001 Conference Proceedings. Conference on Human Factors in Computing Systems, P490, DOI 10.1145/365024.365325
   Chi E.H., 2003, Proceedings of the 21th Annual International ACM Conference on Human Factors in Computing Systems (CHI'03), Fort Lauderdale, Florida, P505, DOI [DOI 10.1145/642611.642699, 10.1145/642611.642699]
   Corbin J., 2008, QUAL RES, DOI DOI 10.4135/9781452230153.N10
   Cover T. M., 1991, ELEMENTS INFORM THEO
   Crestani F, 1997, ARTIF INTELL REV, V11, P453, DOI 10.1023/A:1006569829653
   Cubranic D, 2005, IEEE T SOFTWARE ENG, V31, P446, DOI 10.1109/TSE.2005.71
   DeLine R, 2005, 2005 IEEE Symposium on Visual Language and Human-Centric Computing, Proceedings, P241, DOI 10.1109/VLHCC.2005.32
   Eisenstadt M., 1993, Empirical Studies of Programmers: Fifth Workshop, P86
   Ericsson K. A., 1993, PROTOCOL ANAL VERBAL
   FRITZSON P, 1991, SIGPLAN NOTICES, V26, P317, DOI 10.1145/113446.113472
   GILMORE DJ, 1991, ACTA PSYCHOL, V78, P151, DOI 10.1016/0001-6918(91)90009-O
   Herlocker JL, 2004, ACM T INFORM SYST, V22, P5, DOI 10.1145/963770.963772
   Hill E., 2007, Proceedings of the 22nd International Conference on Automated Software Engineering, P14
   Hollan J., 2000, ACM Transactions on Computer-Human Interaction, V7, P174, DOI 10.1145/353485.353487
   Katz I. R., 1987, Human-Computer Interaction, V3, P351, DOI 10.1207/s15327051hci0304_2
   Kersten M., 2005, P ASP OR SOFTW DEV C
   Ko AJ, 2005, PROC INT CONF SOFTW, P126
   Ko AJ, 2006, IEEE T SOFTWARE ENG, V32, P971, DOI 10.1109/TSE.2006.116
   Landauer TK, 1997, PSYCHOL REV, V104, P211, DOI 10.1037/0033-295X.104.2.211
   Lawrance J, 2007, VL/HCC 2007: IEEE SYMPOSIUM ON VISUAL LANGUAGES AND HUMAN-CENTRIC COMPUTING, PROCEEDINGS, P15, DOI 10.1109/VLHCC.2007.25
   Lawrance J, 2008, 2008 IEEE SYMPOSIUM ON VISUAL LANGUAGES AND HUMAN-CENTRIC COMPUTING, PROCEEDINGS, P57, DOI 10.1109/VLHCC.2008.4639059
   Lawrance J, 2008, CHI 2008: 26TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS VOLS 1 AND 2, CONFERENCE PROCEEDINGS, P1323
   Leontjev A.N., 1978, Activity, consciousness and personality
   Long F, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P203, DOI 10.1145/1595696.1595727
   Nanja M., 1987, EMPIRICAL STUDIES PR, P172
   Nielsen Jakob., 2003, INFORM FORAGING WHY
   Pirolli P, 1999, PSYCHOL REV, V106, P643, DOI 10.1037/0033-295X.106.4.643
   Pirolli P., 1997, CHI 97, P3
   Robillard MP, 2008, ACM T SOFTW ENG METH, V17, DOI 10.1145/13487689.13487691
   Robillard MP, 2004, IEEE T SOFTWARE ENG, V30, P889, DOI 10.1109/TSE.2004.101
   Romero P, 2007, INT J HUM-COMPUT ST, V65, P992, DOI 10.1016/j.ijhcs.2007.07.005
   Scaffidi C., UNIFYING SO IN PRESS
   Schneider K. A., 2004, P INT WORKSH MIN SOF
   Schummer T., 2001, P HAW INT C SYST SCI
   Shirabad J., 2003, P INT C SOFTW MAINT
   SHRAGER J, 1986, INT J MAN MACH STUD, V25, P153, DOI 10.1016/S0020-7373(86)80075-X
   Sim SE, 1998, PROC INT CONF SOFTW, P361, DOI 10.1109/ICSE.1998.671389
   Singer J, 2005, PROC IEEE INT CONF S, P325
   Sjoberg D. I. K., 2008, Guide to Advanced Empirical Software Engineering, P312
   Spool J., 2004, USER INTERFACE ENG
   Suchman L. A., 1987, Plans and situated actions: The problem of human-machine communication
   Vans AM, 1999, INT J HUM-COMPUT ST, V51, P31, DOI 10.1006/ijhc.1999.0268
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
   Ying ATT, 2004, IEEE T SOFTWARE ENG, V30, P574, DOI 10.1109/TSE.2004.52
   Zeller A, 1999, LECT NOTES COMPUT SC, V1687, P253, DOI 10.1145/318774.318946
   Zimmermann T., 2004, P IEEE INT C SOFTW E
NR 54
TC 74
Z9 89
U1 2
U2 41
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD FEB
PY 2013
VL 39
IS 2
BP 197
EP 215
DI 10.1109/TSE.2010.111
PG 19
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science; Engineering
GA 079ML
UT WOS:000314174500005
DA 2024-07-18
ER

PT J
AU Geipel, MM
   Schweitzer, F
AF Geipel, Markus Michael
   Schweitzer, Frank
TI The Link between Dependency and Cochange: Empirical Evidence
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Modularity; class dependency; open source
ID SOFTWARE; PROPAGATION
AB We investigate the relationship between class dependency and change propagation (cochange) in software written in Java. On the one hand, we find a strong correlation between dependency and cochange. Furthermore, we provide empirical evidence for the propagation of change along paths of dependency. These findings support the often alleged role of dependencies as propagators of change. On the other hand, we find that approximately half of all dependencies are never involved in cochanges and that the vast majority of cochanges pertain to only a small percentage of dependencies. This means that inferring the cochange characteristics of a software architecture solely from its dependency structure results in a severely distorted approximation of cochange characteristics. Any metric which uses dependencies alone to pass judgment on the evolvability of a piece of Java software is thus unreliable. As a consequence, we suggest to always take both the change characteristics and the dependency structure into account when evaluating software architecture.
C1 [Geipel, Markus Michael; Schweitzer, Frank] ETH, Chair Syst Design, CH-8032 Zurich, Switzerland.
C3 Swiss Federal Institutes of Technology Domain; ETH Zurich
RP Geipel, MM (corresponding author), ETH, Chair Syst Design, Kreuzpl 5, CH-8032 Zurich, Switzerland.
EM markus.geipel@alumni.ethz.ch; fschweitzer@ethz.ch
RI Schweitzer, Frank/B-2127-2012
OI Schweitzer, Frank/0000-0003-1551-6491
FU Swiss National Science Foundation (SNSF) [CR12I1_125298]; Swiss National
   Science Foundation (SNF) [CR12I1_125298] Funding Source: Swiss National
   Science Foundation (SNF)
FX The authors acknowledge financial support by the Swiss National Science
   Foundation (SNSF) (Grant CR12I1_125298).
CR [Anonymous], 2003, Computer Architecture
   [Anonymous], 2002, CONJECTURES REFUTATI
   BALL T, 1997, P ICSE WORKSH PROC M
   Bennett K. H., 2000, P C FUT SOFTW ENG, P73
   Bohner S. A., 1996, SOFTWARE CHANGE IMPA
   Call HC, 2009, IEEE SOFTWARE, V26, P26, DOI 10.1109/MS.2009.6
   Capiluppi A, 2005, NINTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P21, DOI 10.1109/CSMR.2005.30
   CARVER RP, 1993, J EXP EDUC, V61, P287, DOI 10.1080/00220973.1993.10806591
   CARVER RP, 1978, HARVARD EDUC REV, V48, P378, DOI 10.17763/haer.48.3.t490261645281841
   Challet D, 2004, PHYS REV E, V70, DOI 10.1103/PhysRevE.70.046109
   Chapin N, 2001, J SOFTW MAINT EVOL-R, V13, P3, DOI 10.1002/smr.220
   Clarkson PJ, 2004, J MECH DESIGN, V126, P788, DOI 10.1115/1.1765117
   Fenton NE, 2000, IEEE T SOFTWARE ENG, V26, P797, DOI 10.1109/32.879815
   FLOYD RW, 1962, COMMUN ACM, V5, P345, DOI 10.1145/367766.368168
   Gall H, 2003, SIXTH INTERNATIONAL WORKSHOP ON PRINCIPLES OF SOFTWARE EVOLUTION, PROCEEDINGS, P13
   GALLAGHER KB, 1991, IEEE T SOFTWARE ENG, V17, P751, DOI 10.1109/32.83912
   GASTWIRT.JL, 1972, REV ECON STAT, V54, P306, DOI 10.2307/1937992
   Geipel MM, 2007, INT J MOD PHYS C, V18, P1537, DOI 10.1142/S0129183107011558
   Geipel MM, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P269, DOI 10.1145/1595696.1595739
   German DM, 2006, EMPIR SOFTW ENG, V11, P369, DOI 10.1007/s10664-006-9004-6
   Gini C., 1921, ECON J, V31, P124, DOI [DOI 10.2307/2223319, 10.2307/2223319]
   Goodrich M.T., 2002, ALGORITHM DESIGN FDN
   Graves TL, 2000, IEEE T SOFTWARE ENG, V26, P653, DOI 10.1109/32.859533
   Hassan AE, 2004, PROC IEEE INT CONF S, P284, DOI 10.1109/ICSM.2004.1357812
   HORWITZ S, 1990, ACM T PROGR LANG SYS, V12, P26, DOI [10.1145/77606.77608, 10.1145/960116.53994]
   Hunt Andrew, 1999, The Pragmatic Programmer: From Journeyman to Master, V1
   KAFURA D, 1987, IEEE T SOFTWARE ENG, V13, P335, DOI 10.1109/TSE.1987.233164
   Kazman R., 1999, Automated Software Engineering, V6, P107, DOI 10.1023/A:1008781513258
   Kiczales G, 1997, LECT NOTES COMPUT SC, V1241, P220, DOI 10.1007/BFb0053381
   LaMantia MJ, 2008, SEVENTH WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE, PROCEEDINGS, P83, DOI 10.1109/WICSA.2008.49
   Lehman M. M., 1985, Program Evolution: Processes of Software Change
   LIEBERHERR KJ, 1989, IEEE SOFTWARE, V6, P38, DOI 10.1109/52.35588
   Lorenz MO, 1905, J AM STAT ASSOC, V9, P209
   MacCormack A, 2006, MANAGE SCI, V52, P1015, DOI 10.1287/mnsc.1060.0552
   Martin R. C., 1996, C++ Report, V8, P57
   Martin R. C., 2008, Clean Code: A Handbook of Agile Software Craftsmanship
   McCabe T. J., 1976, IEEE Transactions on Software Engineering, VSE-2, P308, DOI 10.1109/TSE.1976.233837
   Natrella M., 2011, NIST SEMATECH E HDB
   Opdyke WF., 1990, P SOOPPA 90 S OBJECT
   Parnas D. L., 1994, ICSE-16. 16th International Conference on Software Engineering (Cat. No.94CH3409-0), P279, DOI 10.1109/ICSE.1994.296790
   Rajlich V, 1997, INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE, PROCEEDINGS, P84, DOI 10.1109/ICSM.1997.624234
   Sangal N, 2005, ACM SIGPLAN NOTICES, V40, P167, DOI 10.1145/1103845.1094824
   STEWARD DV, 1981, IEEE T ENG MANAGE, V28, P71, DOI 10.1109/TEM.1981.6448589
   Sullivan K. J., 2001, Software Engineering Notes, V26, P99, DOI 10.1145/503271.503224
   Tsantalis N, 2005, IEEE T SOFTWARE ENG, V31, P601, DOI 10.1109/TSE.2005.83
   WARSHALL S, 1962, J ACM, V9, P11, DOI 10.1145/321105.321107
   Ying ATT, 2004, IEEE T SOFTWARE ENG, V30, P574, DOI 10.1109/TSE.2004.52
   Zimmermann T, 2005, IEEE T SOFTWARE ENG, V31, P429, DOI 10.1109/TSE.2005.72
NR 48
TC 21
Z9 22
U1 0
U2 5
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD NOV-DEC
PY 2012
VL 38
IS 6
BP 1432
EP 1444
DI 10.1109/TSE.2011.91
PG 13
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 043PI
UT WOS:000311556100011
DA 2024-07-18
ER

PT J
AU Schäfer, M
   Thies, A
   Steimann, F
   Tip, F
AF Schaefer, Max
   Thies, Andreas
   Steimann, Friedrich
   Tip, Frank
TI A Comprehensive Approach to Naming and Accessibility in Refactoring Java
   Programs
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Restructuring; reverse engineering; and reengineering; object-oriented
   languages; Java
AB Automated tool support for refactoring is now widely available for mainstream programming languages such as Java. However, current refactoring tools are still quite fragile in practice and often fail to preserve program behavior or compilability. This is mainly because analyzing and transforming source code requires consideration of many language features that complicate program analysis, in particular intricate name lookup and access control rules. This paper introduces J(L), a lookup-free, access control-free representation of Java programs. We present algorithms for translating Java programs into J(L) and vice versa, thereby making it possible to formulate refactorings entirely at the level of J(L) and to rely on the translations to take care of naming and accessibility issues. We demonstrate how complex refactorings become more robust and powerful when lifted to J(L). Our approach has been implemented using the JastAddJ compiler framework, and evaluated by systematically performing two commonly used refactorings on an extensive suite of real-world Java applications. The evaluation shows that our tool correctly handles many cases where current refactoring tools fail to handle the complex rules for name binding and accessibility in Java.
C1 [Schaefer, Max] IBM TJ Watson Res Ctr, Hawthorne, NY 10532 USA.
   [Thies, Andreas; Steimann, Friedrich] Fernuniv, D-58097 Hagen, Germany.
   [Tip, Frank] Univ Waterloo, David R Cheriton Sch Comp Sci, Waterloo, ON N2L 3G1, Canada.
C3 International Business Machines (IBM); Fern University Hagen; University
   of Waterloo
RP Schäfer, M (corresponding author), IBM TJ Watson Res Ctr, 19 Skyline Dr, Hawthorne, NY 10532 USA.
EM mschaefer@us.ibm.com; andreas.thies@fernuni-hagen.de; steimann@acm.org;
   ftip@uwaterloo.ca
OI Steimann, Friedrich/0000-0002-8887-134X; Thies,
   Andreas/0000-0002-7779-289X; Schaefer, Max/0000-0001-7454-5327
CR [Anonymous], 2007, P 6 JOINT M EUR SOFT
   Bodden E, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P241, DOI 10.1145/1985793.1985827
   Borba P, 2004, SCI COMPUT PROGRAM, V52, P53, DOI 10.1016/j.scico.2004.03.003
   CINNEIDE MO, 2000, THESIS U DUBLIN TRIN
   Donovan A, 2004, ACM SIGPLAN NOTICES, V39, P15, DOI 10.1145/1035292.1028979
   Ekman T, 2007, ACM SIGPLAN NOTICES, V42, P1, DOI 10.1145/1297105.1297029
   Ekman T, 2006, LECT NOTES COMPUT SC, V4143, P422
   Ekman T, 2007, SCI COMPUT PROGRAM, V69, P14, DOI 10.1016/j.scico.2007.02.003
   Foundation E, 2011, ECL 3 6 JDT
   Fowler M, 2002, IEEE SOFTWARE, V19, P18, DOI 10.1109/52.991326
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   Fuhrer R.M., 2005, P EUR C OBJ OR PROGR
   Garrido A, 2006, SIXTH IEEE INTERNATIONAL WORKSHOP ON SOURCE CODE ANALYSIS AND MANIPULATION, PROCEEDINGS, P165
   Gosling J., 2005, Java Language Specification, Vthird
   Griswold W. G, 1991, THESIS U WASHINGTON
   JetBrains, 2011, INTELLIJ IDEA 10 5
   Kegel H, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P431, DOI 10.1145/1368088.1368147
   Kerievsky J., 2005, Refactoring to Patterns
   Kniesel G, 2004, SCI COMPUT PROGRAM, V52, P9, DOI 10.1016/j.scico.2004.03.002
   Mens T, 2005, J SOFTW MAINT EVOL-R, V17, P247, DOI 10.1002/smr.316
   Mens T, 2004, IEEE T SOFTWARE ENG, V30, P126, DOI 10.1109/TSE.2004.1265817
   Opdyke W. F., 1992, Refactoring object-oriented frameworks
   Roberts D., 1999, Ph. D. Dissertation
   Schäfer M, 2009, LECT NOTES COMPUT SC, V5653, P369, DOI 10.1007/978-3-642-03013-0_17
   Schafer M, 2010, P ACM INT C OBJ OR P
   Schafer M., 2010, P EUR C OBJ OR PROGR
   Schafer M., 2011, REFACTORING BUGS
   Schafer M, 2011, JRRT JASTADD REFACTO
   Schirmer N, 2004, CONCURR COMP-PRACT E, V16, P689, DOI 10.1002/cpe.800
   Soares G, 2013, IEEE T SOFTWARE ENG, V39, P147, DOI 10.1109/TSE.2012.19
   Soares G, 2010, IEEE SOFTWARE, V27, P52, DOI 10.1109/MS.2010.63
   Steimann F., 2011, P 14 INT C MOD DRIV
   Steimann F., 2011, P EUR C OBJ OR PROGR
   Steimann F, 2007, J OBJECT TECHNOL, V6, P99, DOI 10.5381/jot.2007.6.2.a5
   Steimann F, 2009, LECT NOTES COMPUT SC, V5653, P419, DOI 10.1007/978-3-642-03013-0_19
   Sultana N, 2008, PEPM'08: PROCEEDINGS OF THE 2008 ACM SIGPLAN SYMPOSIUM ON PARTIAL EVALUATION AND SEMANTICS-BASED PROGRAM MANIPULATION, P51, DOI 10.1145/1328408.1328417
   Tamura N., 2009, CREAM CLASS LIB CONS
   Tip F, 2003, ACM SIGPLAN NOTICES, V38, P13, DOI 10.1145/949343.949308
   Tip F, 2011, ACM T PROGR LANG SYS, V33, DOI 10.1145/1961204.1961205
   Tokuda L., 2001, Automated Software Engineering, V8, P89, DOI 10.1023/A:1008715808855
   Verbaere M., 2006, 28th International Conference on Software Engineering Proceedings, P172, DOI 10.1145/1134285.1134311
   von Dincklage D, 2004, ACM SIGPLAN NOTICES, V39, P1, DOI 10.1145/1035292.1028978
   Wheeler D.A, 2006, SLOCCOUNT
NR 43
TC 14
Z9 14
U1 0
U2 14
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD NOV-DEC
PY 2012
VL 38
IS 6
BP 1233
EP 1257
DI 10.1109/TSE.2012.13
PG 25
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 043PI
UT WOS:000311556100001
DA 2024-07-18
ER

PT J
AU Mateescu, R
   Poizat, P
   Salaün, G
AF Mateescu, Radu
   Poizat, Pascal
   Salauen, Gwen
TI Adaptation of Service Protocols Using Process Algebra and On-the-Fly
   Reduction Techniques
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Service composition; software adaptation; interfaces; protocols;
   mismatch; adaptation contracts; process algebra; on-the-fly generation;
   verification; tools
ID MODEL-CHECKING; COMPONENT; GENERATION; LANGUAGE
AB Reuse and composition are increasingly advocated and put into practice in modern software engineering. However, the software entities that are to be reused to build an application, e.g., services, have seldom been developed to integrate and to cope with the application requirements. As a consequence, they present mismatch, which directly hampers their reusability and the possibility of composing them. Software Adaptation has become a hot topic as a nonintrusive solution to work mismatch out using corrective pieces named adaptors. However, adaptation is a complex issue, especially when behavioral interfaces, or conversations, are taken into account. In this paper, we present state-of-the-art techniques to generate adaptors given the description of reused entities' conversations and an abstract specification of the way mismatch can be solved. We use a process algebra to encode the adaptation problem, and propose on-the-fly exploration and reduction techniques to compute adaptor protocols. Our approach follows the model-driven engineering paradigm, applied to service-oriented computing as a representative field of composition-based software engineering. We take service description languages as inputs of the adaptation process and we implement adaptors as centralized service compositions, i.e., orchestrations. Our approach is completely tool supported.
C1 [Mateescu, Radu; Salauen, Gwen] Inria Grenoble Rhone Alpes CONVECS, F-38330 Montbonnot St Martin, France.
   [Poizat, Pascal] Univ Evry Val dEssonne, F-91405 Orsay, France.
   [Poizat, Pascal] Univ Paris Sud, LRI UMR CNRS 8623, F-91405 Orsay, France.
   [Salauen, Gwen] Grenoble INP, F-38330 Montbonnot St Martin, France.
C3 Universite Paris Saclay; Universite Paris Saclay; Universite Paris Cite;
   Communaute Universite Grenoble Alpes; Institut National Polytechnique de
   Grenoble
RP Mateescu, R (corresponding author), Inria Grenoble Rhone Alpes CONVECS, 655 Ave Europe, F-38330 Montbonnot St Martin, France.
EM Radu.Mateescu@inria.fr; Pascal.Poizat@lri.fr; Gwen.Salaun@inria.fr
OI Poizat, Pascal/0000-0001-7979-9510
FU PERvasive Service cOmposition (PERSO) [ANR07-JCJC-0155-01]; Personal
   Information Management through Internet (PIMI) [ANR-10-VERS-0014-03];
   French National Agency; Agence Nationale de la Recherche (ANR)
   [ANR-10-VERS-0014] Funding Source: Agence Nationale de la Recherche
   (ANR)
FX The authors would like to thank the TSE associate editor and the
   anonymous reviewers for their very useful comments during the review
   process, Jose Antonio Martin for his participation in the implementation
   of the BPEL2STS and STS2BPEL tools, and Javier Camara for his help with
   the Acide tool. They are also grateful to Christine McKinty, who
   proofread a former version of this manuscript. This work has been
   partially supported by projects "PERvasive Service cOmposition" (PERSO,
   ANR07-JCJC-0155-01) and "Personal Information Management through
   Internet" (PIMI, ANR-10-VERS-0014-03) funded by the French National
   Agency for Research.
CR ANDERSEN HR, 1994, THEOR COMPUT SCI, V126, P3, DOI 10.1016/0304-3975(94)90266-6
   Attiogbé C, 2007, IEEE T SOFTWARE ENG, V33, P157, DOI 10.1109/TSE.2007.21
   Autili M, 2008, J SYST SOFTWARE, V81, P2210, DOI 10.1016/j.jss.2008.04.006
   Becker S, 2006, LECT NOTES COMPUT SC, V3938, P193
   Bentakouk L, 2009, LECT NOTES COMPUT SC, V5826, P16, DOI 10.1007/978-3-642-05031-2_2
   Bertoli P, 2010, ARTIF INTELL, V174, P316, DOI 10.1016/j.artint.2009.12.002
   Bertolino A, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P141, DOI 10.1145/1595696.1595719
   BOLOGNESI T, 1987, COMPUT NETWORKS ISDN, V14, P25, DOI 10.1016/0169-7552(87)90085-7
   Bozkurt M., 2010, 20041068 USGS
   Bracciali A, 2005, J SYST SOFTWARE, V74, P45, DOI 10.1016/j.jss.2003.05.007
   Brogi A, 2004, LECT NOTES COMPUT SC, V3116, P42
   Brogi A, 2006, LECT NOTES COMPUT SC, V4294, P27
   Bucchiarone A., 2007, P ARG S SOFTW ENG
   Buchi M., 1999, 297 TURK CTR COMP SC
   Cámara J, 2009, INT CONF QUAL SOFTW, P65, DOI 10.1109/QSIC.2009.17
   Cámara J, 2008, J UNIVERS COMPUT SCI, V14, P2182
   Canal C., 2006, LOBJET, V12, P9
   Canal C, 2008, IEEE T SOFTWARE ENG, V34, P546, DOI 10.1109/TSE.2008.31
   Canal C, 2006, LECT NOTES COMPUT SC, V4037, P63
   Chafle G., 2005, P IEEE INT C WEB SER
   CLEAVELAND R, 1993, FORM METHOD SYST DES, V2, P121, DOI 10.1007/BF01383878
   Cubo J, 2008, ELECTRON NOTES THEOR, V215, P39, DOI 10.1016/j.entcs.2008.06.020
   Dumas M, 2006, LECT NOTES COMPUT SC, V4102, P65
   Durán F, 2009, ELECTRON NOTES THEOR, V255, P65, DOI 10.1016/j.entcs.2009.10.025
   FISCHER MJ, 1979, J COMPUT SYST SCI, V18, P194, DOI 10.1016/0022-0000(79)90046-1
   Foster H., 2006, 28th International Conference on Software Engineering Proceedings, P771, DOI 10.1145/1134285.1134408
   Fu X., 2004, P 13 INT C WORLD WID, P621
   Garavel H, 2001, INT FED INFO PROC, V69, P377, DOI 10.1007/0-306-47003-9_24
   Garavel H, 1998, LECT NOTES COMPUT SC, V1384, P68
   Garavel H, 2011, LECT NOTES COMPUT SC, V6605, P372, DOI 10.1007/978-3-642-19835-9_33
   HENNESSY M, 1995, THEOR COMPUT SCI, V138, P353, DOI 10.1016/0304-3975(94)00172-F
   Henriksson J., 2007, P 12 INT WORKSH COMP
   Hoare CAR., 1985, Communicating Sequential Processes
   ISO, 1989, Technical Report 8807
   KOZEN D, 1983, THEOR COMPUT SCI, V27, P333, DOI 10.1016/0304-3975(82)90125-6
   Marconi A, 2009, LECT NOTES COMPUT SC, V5569, P89
   Martin J. A., 2008, P INT WORKSH FDN COO
   Mateescu R, 2003, SCI COMPUT PROGRAM, V46, P255, DOI 10.1016/S0167-6423(02)00094-1
   Mateescu R., 2006, International Journal on Software Tools for Technology Transfer, V8, P37, DOI 10.1007/s10009-005-0194-9
   Mateescu R., 2005, P 10 INT WORKSH FORM, P80
   Mateescu R, 2008, LECT NOTES COMPUT SC, V5364, P84, DOI 10.1007/978-3-540-89652-4_10
   Moser O., 2008, P 17 INT C WORLD WID, P815, DOI DOI 10.1145/1367497.1367607
   Motahari Nezhad H.R., 2010, Protocol-aware matching of web service interfaces for adapter development, P731
   Nanda M. Gowri, 2004, P 19 ANN ACM SIGPLAN
   Nejati S, 2007, PROC INT CONF SOFTW, P54
   NEZHAD H.R. MOTAHARI., 2007, 16th international conference on World Wide Web (WWW '07), P993, DOI [10.1145/1242572.1242706, DOI 10.1145/1242572.1242706]
   OASIS, 2007, 20041068 USGS
   Padovani L, 2009, LECT NOTES COMPUT SC, V5569, P213
   Plasil F, 2002, IEEE T SOFTWARE ENG, V28, P1056, DOI 10.1109/TSE.2002.1049404
   Poizat P, 2006, J UNIVERS COMPUT SCI, V12, P1741
   Puntigam F., 2007, P 12 INT WORKSH COMP
   RAMADGE PJG, 1989, P IEEE, V77, P81, DOI 10.1109/5.21072
   Reussner RH, 2003, FUTURE GENER COMP SY, V19, P627, DOI 10.1016/S0167-739X(02)00173-5
   Salan G., 2006, INT J BUSINESS PROCE, V1, P116, DOI [10.1504/IJBPIM.2006.010025, DOI 10.1504/IJBPIM.2006.010025]
   Salaun G., 2008, P 6 IEEE INT C SOFTW
   Seguel R., 2009, OVERVIEW PROTOCOL AD
   Taher Y, 2009, INT CON ADV INFO NET, P652, DOI 10.1109/AINA.2009.118
   ter Beek MauriceH., 2007, ANN MATH COMPUTING T, V1, P1
   Tivoli M, 2008, SCI COMPUT PROGRAM, V71, P181, DOI 10.1016/j.scico.2008.03.001
   Vallecillo A., 2003, FOCLASA, P439
   van der Aalst WMP, 2009, LECT NOTES COMPUT SC, V5569, P42
   Wang K, 2008, PROCEEDINGS OF THE SIXTH IEEE EUROPEAN CONFERENCE ON WEB SERVICES, P145, DOI 10.1109/ECOWS.2008.23
   WONHAM WM, 1987, SIAM J CONTROL OPTIM, V25, P637, DOI 10.1137/0325036
   Yellin DM, 1997, ACM T PROGR LANG SYS, V19, P292, DOI 10.1145/244795.244801
   Zisman Andrea, 2008, 2008 23rd IEEE/ACM International Conference on Automated Software Engineering, P158, DOI 10.1109/ASE.2008.26
NR 65
TC 32
Z9 35
U1 0
U2 10
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUL-AUG
PY 2012
VL 38
IS 4
BP 755
EP 777
DI 10.1109/TSE.2011.62
PG 23
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 983LE
UT WOS:000307120000002
OA Green Submitted, Green Published
DA 2024-07-18
ER

PT J
AU Crnkovic, I
   Sentilles, S
   Vulgarakis, A
   Chaudron, MRV
AF Crnkovic, Ivica
   Sentilles, Severine
   Vulgarakis, Aneta
   Chaudron, Michel R. V.
TI A Classification Framework for Software Component Models
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Software components; software component models; component lifecycle;
   extra-functional properties; component composition
AB In the last decade, a large number of different software component models have been developed, with different aims and using different principles and technologies. This has resulted in a number of models which have many similarities, but also principal differences, and in many cases unclear concepts. Component-based development has not succeeded in providing standard principles, as has, for example, object-oriented development. In order to increase the understanding of the concepts and to differentiate component models more easily, this paper identifies, discusses, and characterizes fundamental principles of component models and provides a Component Model Classification Framework based on these principles. Further, the paper classifies a large number of component models using this framework.
C1 [Crnkovic, Ivica; Sentilles, Severine; Vulgarakis, Aneta] Malardalen Univ, Sch Innovat Design & Engn, IDT, S-72123 Vasteras, Sweden.
   [Chaudron, Michel R. V.] Leiden Univ, Fac Sci, Leiden Inst Adv Comp Sci, NL-RA 2300 Leiden, Netherlands.
C3 Malardalen University; Leiden University; Leiden University - Excl LUMC
RP Crnkovic, I (corresponding author), Malardalen Univ, Sch Innovat Design & Engn, IDT, POB 883, S-72123 Vasteras, Sweden.
EM ivica.crnkovic@mdh.se; severine.sentilles@mdh.se;
   aneta.vulgarakis@mdh.se; chaudron@liacs.nl
OI Sentilles, Severine/0000-0003-0165-3743; Ivica,
   Crnkovic/0000-0002-5278-755X; Chaudron, Michel/0000-0001-7517-6666
FU Swedish Foundation for Strategic Research; European Union [FP7-215013]
FX This work was partially supported by the Swedish Foundation for
   Strategic Research via the strategic research centre PROGRESS and
   Q-ImPrESS research project (FP7-215013) by the European Union under the
   Information and Communication Technologies priority of the Seventh
   Research Framework Programme. The authors would like to thank a number
   of researchers and industrial experts, in particular, Kurt Wallnau,
   (SEI/Carnegie Mellon University), Colin Atkinson (Mannheim University),
   Jan Carlson (Malardalen University), Kung-Kiu Lau (Manchester
   University), Herman Martin (Robert Bosch), Ralf Reussner (Karlsruhe
   University), Heinz Schmidt (RMIT University), and Christian Zeidler (ABB
   Research) for their valuable comments, and the anonymous reviewers who
   have read previous versions of this paper and provided constructive
   suggestions.
CR Åkerholm M, 2007, J SYST SOFTWARE, V80, P655, DOI 10.1016/j.jss.2006.08.016
   [Anonymous], OSGI SERV PLATF COR
   [Anonymous], 1997, COMPONENT SOFTWARE O
   [Anonymous], 2011, Oxford Advanced Learner's Dictionary
   Atkinson Colin., 2002, COMPONENT BASED PROD
   *AUTOSAR DEV PARTN, 2006, AUTOSAR TECHN OV V2
   BASTIDE R, 2004, P MOCA, P37
   Basu A, 2006, I C SOFTW ENG FORM M, P3
   Becker Koziolek., 2007, P 6 INT WORKSHOP SOF, P54
   Beugnard A, 1999, COMPUTER, V32, P38, DOI 10.1109/2.774917
   BOX D, 1997, ESSENTIAL COM OBJECT
   Bozga M, 2004, LECT NOTES COMPUT SC, V3185, P237
   BREIVOLD H, 2007, P 33 EUROMICRO C SOF, P13
   BRUNETON E, 2004, FRACTAL COMPONENT MO
   Bures T, 2006, FOURTH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING RESEARCH, MANAGEMENT AND APPLICATIONS, PROCEEDINGS, P40, DOI 10.1109/SERA.2006.62
   CHAUDRON M, 2008, SOFTWARE ENG PRINCIP, pCH18
   Cheesman J., 2000, UML COMPONENTS SIMPL
   CLARKE M, 2001, P IFIP ACM INT C DIS
   Crnkovic I, 2005, LECT NOTES COMPUT SC, V3549, P257
   Crnkovic I., 2005, Journal of Computing and Information Technology - CIT, V13, P321, DOI 10.2498/cit.2005.04.10
   Crnkovic I., 2002, BUILDING RELIABLE CO
   *EE GROUP, 2006, JSR 220 ENT JAVABEAN
   Emmerich W, 2008, ACM T SOFTW ENG METH, V17, DOI 10.1145/13487689.13487692
   FELJAN J, 2009, CLASSIFICATION SURVE
   FELLNER KJ, 2000, P 33 HAW INT C SYST, V8, P8047
   GOSSLER G, 2001, P WORKSH REAL TIM SY
   HANNINEN K, 2008, P INT S IND EMB SYST, P177
   Heineman GeorgeT., 2001, COMPONENT BASED SOFT
   HISSAM S, 2005, CMUSEI2005TN001
   *IEC, IEC 61499 FUNCT BLOC
   *IEC, 1995, APPL IMPL IEC 61131
   Ke X, 2007, 13TH IEEE INTERNATIONAL CONFERENCE ON EMBEDDED AND REAL-TIME COMPUTING SYSTEMS AND APPLICATIONS, PROCEEDINGS, P199, DOI 10.1109/RTCSA.2007.29
   KIM JE, 2009, P 31 INT C SOFTW ENG
   Kotonya G, 2003, EUROMICRO CONF PROC, P43
   Lau KK, 2007, IEEE T SOFTWARE ENG, V33, P709, DOI 10.1109/TSE.2007.70726
   Maaskant H, 2005, PHILIPS RES BOOK SER, V3, P167
   Medvidovic N, 2000, IEEE T SOFTWARE ENG, V26, P70, DOI 10.1109/32.825767
   Medvidovic N, 2007, INFORM SOFTWARE TECH, V49, P12, DOI 10.1016/j.infsof.2006.08.006
   Mellor SJ., 2002, EXECUTABLE UML FDN M
   MEYER B, 2000, SOFTWARE DEV MAG MAR
   Muskens J, 2005, LECT NOTES COMPUT SC, V3778, P164
   SECELEANU C, 2009, P 14 IEEE INT C ENG
   SENTILLES S, 2009, P 12 INT S COMP BAS
   Sentilles S, 2008, LECT NOTES COMPUT SC, V5282, P310, DOI 10.1007/978-3-540-87891-9_21
   Shaw M., 1996, Proceedings of the 8th International Workshop on Software Specification and Design, P181, DOI 10.1109/IWSSD.1996.501165
   *SUN MICR, 1997, JAV SPEC
   *TOM GROUP, 2009, UML SUP SPEC V2 1
   van Ommering R, 2000, COMPUTER, V33, P78, DOI 10.1109/2.825699
   WINTER M, 2002, P WORKSH COMP BAS SO
   YACOUB S, 1999, P 2 WORKSH COMP BAS
   YACOUB S, 1999, P 2 INT WORKSH COMP, P17
   2011, OMG CORBA COMPONENT
NR 52
TC 127
Z9 139
U1 1
U2 25
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD SEP-OCT
PY 2011
VL 37
IS 5
BP 593
EP 615
DI 10.1109/TSE.2010.83
PG 23
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 823YC
UT WOS:000295162900001
DA 2024-07-18
ER

PT J
AU Baresi, L
   Guinea, S
AF Baresi, Luciano
   Guinea, Sam
TI Self-Supervising BPEL Processes
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Software engineering; software/program verification; assertion checkers;
   assertion languages; performance; design tools and techniques;
   distributed/Internet-based software engineering tools and techniques
ID RUNTIME
AB Service compositions suffer changes in their partner services. Even if the composition does not change, its behavior may evolve over time and become incorrect. Such changes cannot be fully foreseen through prerelease validation, but impose a shift in the quality assessment activities. Provided functionality and quality of service must be continuously probed while the application executes, and the application itself must be able to take corrective actions to preserve its dependability and robustness. We propose the idea of self-supervising BPEL processes, that is, special-purpose compositions that assess their behavior and react through user-defined rules. Supervision consists of monitoring and recovery. The former checks the system's execution to see whether everything is proceeding as planned, while the latter attempts to fix any anomalies. The paper introduces two languages for defining monitoring and recovery and explains how to use them to enrich BPEL processes with self-supervision capabilities. Supervision is treated as a crosscutting concern that is only blended at runtime, allowing different stakeholders to adopt different strategies with no impact on the actual business logic. The paper also presents a supervision-aware runtime framework for executing the enriched processes, and briefly discusses the results of in-lab experiments and of a first evaluation with industrial partners.
C1 [Baresi, Luciano; Guinea, Sam] Politecn Milan, Dipartimento Elettron & Informaz, I-20133 Milan, Italy.
C3 Polytechnic University of Milan
RP Baresi, L (corresponding author), Politecn Milan, Dipartimento Elettron & Informaz, Via Golgi 42, I-20133 Milan, Italy.
EM baresi@elet.polimi.it; guinea@elet.polimi.it
RI Baresi, Luciano/N-4208-2018
OI Baresi, Luciano/0000-0001-6467-837X
FU EPSRC [EP/D050863, EP/0052785]; National Science Foundation of China
   [60428202]
FX The authors are grateful to Spiros Mancoridis and Brian Mitchell for
   providing detailed feedback on an earlier version of this paper and also
   for many valuable conversations about software module clustering over
   the past six years. Spiros and Brian also kindly made available both the
   Bunch tool and the MDGs used in this paper. The authors also are
   grateful to Kiarash Mahdavi for providing references, discussions, and
   comments. The anonymous referees also provided detailed, thoughtful, and
   constructive advice which helped to improve the presentation of the
   paper. This work is partially supported by EPSRC (Grant Nos. EP/D050863
   and EP/0052785) and the National Science Foundation of China (Grant No.
   60428202).
CR ALONSO G, 1997, ADV T MODELS ARCHITE
   [Anonymous], 2005, Web Services Platform Architecture: SOAP, WSDL, WS-Policy, WS-Addressing, WS-BPEL, WS-Reliable Messaging, and More
   Ardagna B, 2007, IEEE SOFTWARE, V24, P39, DOI 10.1109/MS.2007.174
   Ardagna D, 2007, IEEE T SOFTWARE ENG, V33, P369, DOI 10.1109/TSE.2007.1011.
   BAJAJ S, 2006, VERSION, V1
   Baresi L, 2005, LECT NOTES COMPUT SC, V3826, P269
   BARESI L, 2007, P 19 INT C ADV INF S, P340
   BARESI L, 2006, P WORKSH SOFTW ARCH, P337
   BARESI L, 2008, P 1 IND SOFTW ENG C, P39
   Baresi L, 2006, 30TH ANNUAL IEEE/NASA SOFTWARE ENGINEERING WORKSHOP, PROCEEDINGS, P249
   Burdy L., 2005, International Journal on Software Tools for Technology Transfer, V7, P212, DOI 10.1007/s10009-004-0167-4
   Cavallaro L., 2008, P 2008 INT WORKSHOP, P129
   Charfi A, 2007, WORLD WIDE WEB, V10, P309, DOI 10.1007/s11280-006-0016-3
   Chen F, 2006, ELECTRON NOTES THEOR, V144, P3, DOI 10.1016/j.entcs.2006.02.002
   Colombo M, 2006, LECT NOTES COMPUT SC, V4294, P191
   DANIEL F, 2006, PORTABLE APPROACH EX
   Delgado N, 2004, IEEE T SOFTWARE ENG, V30, P859, DOI 10.1109/TSE.2004.91
   Dowling J., 2001, P 3 INT C METALEVEL, P81, DOI DOI 10.1007/3-540-45429-2
   Dwyer M. B., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P411, DOI 10.1109/ICSE.1999.841031
   Erradi A, 2007, ECOWS 07: PROCEEDING OF THE 5TH IEEE EUROPEAN CONFERENCE ON WEB SERVICES, P99, DOI 10.1109/ECOWS.2007.31
   EVDEMON J, 2007, WEB SERVICES BUSINES
   Gorton I., 2006, P 6 INT WORKSHOP SOF, P47
   Havelund K, 2004, FORM METHOD SYST DES, V24, P189, DOI 10.1023/B:FORM.0000017721.39909.4b
   Keller A, 2002, USENIX ASSOCIATION PROCEEDINGS OF THE SIXTEENTH SYSTEMS ADMINISTRATION CONFERENCE (LISA XVI), P189
   Kiczales G, 1997, LECT NOTES COMPUT SC, V1241, P220, DOI 10.1007/BFb0053381
   Kiczales Gregor., 2001, Proceedings of the 15th European Conference on Object-Oriented Programming, P327
   Kim M, 2004, FORM METHOD SYST DES, V24, P129, DOI 10.1023/B:FORM.0000017719.43755.7c
   LUCKHAM DC, 1987, ANNA LANGUAGE ANNOTA
   Mahbub K., 2004, 2 INT C SERVICE ORIE, P84
   MEYER B, 1992, COMPUTER, V25, P40, DOI 10.1109/2.161279
   Moser O., 2008, P 17 INT C WORLD WID, P815, DOI DOI 10.1145/1367497.1367607
   PROCTOR M, 2006, DROOLS DOCUMENTATION, V1
   Sahai A, 2002, LECT NOTES COMPUT SC, V2506, P28
   *SECSE CONS, 2010, A4 D18 3 EV REP
   Skene J, 2004, PROC INT CONF SOFTW, P179, DOI 10.1109/ICSE.2004.1317440
   TORNQVIST B, ISSUES COORDINATION, P63
   Widom J., 1996, ACTIVE DATABASE SYST
   Zaniolo C., 1997, ADV DATABASE SYSTEMS
NR 38
TC 66
Z9 68
U1 0
U2 9
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAR-APR
PY 2011
VL 37
IS 2
BP 247
EP 263
DI 10.1109/TSE.2010.37
PG 17
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 739ZL
UT WOS:000288760900007
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Benaroch, M
   Goldstein, J
AF Benaroch, Michel
   Goldstein, James
TI An Integrative Economic Optimization Approach to Systems Development
   Risk Management
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Risk management; systems development; economics
ID REAL OPTIONS; INFORMATION
AB Despite significant research progress on the problem of managing systems development risk, we are yet to see this problem addressed from an economic optimization perspective. Doing so entails answering the question: What mitigations should be planned and deployed throughout the life of a systems development project in order to control risk and maximize project value? We introduce an integrative economic optimization approach to solving this problem. The approach is integrative since it bridges two complementary research streams: one takes a traditional microlevel technical view on the software development endeavor alone, another takes a macrolevel business view on the entire life cycle of a systems project. Bridging these views requires recognizing explicitly that value-based risk management decisions pertaining to one level impact and can be impacted by decisions pertaining to the other level. The economic optimization orientation follows from reliance on real options theory in modeling risk management decisions within a dynamic stochastic optimization setting. Real options theory is well suited to formalizing the impacts of risk as well as the asymmetric and contingent economic benefits of mitigations, in a way that enables their optimal balancing. We also illustrate how the approach is applied in practice to a small realistic example.
C1 [Benaroch, Michel; Goldstein, James] Syracuse Univ, Martin J Whitman Sch Management, Syracuse, NY 13224 USA.
C3 Syracuse University
RP Benaroch, M (corresponding author), Syracuse Univ, Martin J Whitman Sch Management, Syracuse, NY 13224 USA.
EM mbenaroc@syr.edu; jcgoldst@syr.edu
FU Whitman School of Management, Syracuse University
FX The authors thank the Brethen Institute for Operations Research at the
   Whitman School of Management, Syracuse University, for partial funding.
CR [Anonymous], 1996, REAL OPTIONS MANAGER
   [Anonymous], 1989, Software risk management tutorial
   Bahsoon R, 2005, IEE P-SOFTW, V152, P167, DOI 10.1049/ip-sen:20045059
   BAHSOON R, 2005, THESIS U LONDON
   Baldwin C.Y., 2001, DESIGN RULES POWER M
   Baldwin C.Y., 1993, MODULARITY REAL OPTI
   Barki H., 1993, Journal of Management Information Systems, V10, P203
   Benaroch M, 1999, INFORM SYST RES, V10, P70, DOI 10.1287/isre.10.1.70
   Benaroch M, 2002, J MANAGE INFORM SYST, V19, P43
   Benaroch M, 2007, J MANAGE INFORM SYST, V24, P103, DOI 10.2753/MIS0742-1222240205
   Benaroch M, 2006, MIS QUART, V30, P827
   Biffl S., 2006, Value-Based Software Engineering
   Boehm B., 2000, P 22 INT C SOFTW ENG, P321
   Boehm B.W., 2002, SOFTWARE COST ESTIMA
   Boehm BarryW., 2006, VALUE BASED SOFTWARE
   Boehm BW., 1981, Software Engineering Economics
   Browning TR, 2002, IEEE T ENG MANAGE, V49, P443, DOI 10.1109/TEM.2002.806710
   Daellenbach H.G., 1994, SYSTEMS DECISION MAK
   Datar V., 2004, J APPL FINANCE, V14, P45
   DEMARCO T, 1982, CONTROLLING SOFTWARE
   Elton J. E., 1995, MODERN PORTFOLIO THE
   Erdogmus H., 2002, Engineering Economist, V47, P308, DOI 10.1080/00137910208965037
   ERDOGMUS H, 2002, ADDISON WESLEY PROFE
   ERDOGMUS H, 1999, P ICSE 99 WORKSH ENS
   FAIRLEY R, 1994, IEEE SOFTWARE, V11, P57, DOI 10.1109/52.281716
   Favaro J., 1999, Building Application Frameworks: Object Oriented Foundations of Framework Design
   Favaro JM, 1998, ANN SOFTW ENG, V5, P5, DOI 10.1023/A:1018976424679
   JONES N, 1998, YEAR 2000 MARKET OVE
   Jorgensen M, 2004, J SYST SOFTWARE, V70, P37, DOI 10.1016/S0164-1212(02)00156-5
   Kan HS., 2003, Metrics and Models in Software Quality Engineering, V2nd
   KOUSSIS N, 2004, SEQUENTIAL OPTIONS I
   Kumar RL, 2002, INFORM MANAGE-AMSTER, V40, P63, DOI 10.1016/S0378-7206(01)00133-1
   Little T, 2004, IEEE SOFTWARE, V21, P48, DOI 10.1109/MS.2004.1293072
   Lyytinen K, 1998, INFORM SYST RES, V9, P233, DOI 10.1287/isre.9.3.233
   McManus John., 2004, Risk Management in Software Development Projects
   Pfleeger ShariLawrence., 2005, SOFTWARE COST ESTIMA
   Racheva Z., 2008, P 2008 INT WORKSH SC
   RACHEVA Z, 1934, P 34 EUR C SOFTW ENG, P457
   Sullivan K.J., 1999, RISK BOOKS, P215
   SULLIVAN KJ, 2001, P 80 EUR SOFTW ENG C
   Taudes A, 2000, MIS QUART, V24, P227, DOI 10.2307/3250937
   Tiwana A, 2006, DECISION SCI, V37, P357, DOI 10.1111/j.1540-5414.2006.00131.x
NR 42
TC 6
Z9 7
U1 0
U2 8
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD SEP-OCT
PY 2009
VL 35
IS 5
BP 638
EP 653
DI 10.1109/TSE.2009.25
PG 16
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science; Engineering
GA 498PM
UT WOS:000270154300004
DA 2024-07-18
ER

PT J
AU Zave, P
   Cheung, E
AF Zave, Pamela
   Cheung, Eric
TI Compositional Control of IP Media
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Distributed applications; domain-specific architectures; protocol
   design; protocol verification; software/program verification; networks;
   streaming media; multimedia services; telecommunications; feature
   interaction
AB In many IP media services, the media channels are point-to-point, dynamic and set up with the participation of one or more application servers, even though the media packets themselves travel directly between media end points. The application servers must be programmed so that the media behavior is globally correct, even though the servers may attempt to manipulate the same media channels concurrently and without knowledge of each other. Our proposed solution to this problem of compositional media control includes an architecture-independent descriptive model, a set of high-level programming primitives, a formal specification of their compositional semantics, a signaling protocol, an implementation, and a partial verification of correctness. The paper includes a performance analysis, a comparison to related work, and principles for making other networked applications more compositional.
C1 [Zave, Pamela; Cheung, Eric] AT&T Labs Res, Florham Pk, NJ 07932 USA.
C3 AT&T
RP Zave, P (corresponding author), AT&T Labs Res, 180 Pk Ave, Florham Pk, NJ 07932 USA.
EM pamela@research.att.com; cheung@research.att.com
CR 3GPP, 23228 3GPP
   [Anonymous], 2543 IETF RFC
   BOND G.W., 2004, ACM Transactions on Internet Technology, V4, P83
   BOND GW, 2005, P 8 INT S COMP BAS S, P298
   CAMERON EJ, 1993, IEEE COMMUN MAG, V31, P64, DOI 10.1109/35.199613
   CHEUNG E, 2002, P IEEE INT C COMM S
   Holzmann GJ, 2004, The SPIN model checker: primer and reference manual, V1003
   Jackson M, 1998, IEEE T SOFTWARE ENG, V24, P831, DOI 10.1109/32.729683
   *JAV COMM PROC, 2008, JSR 309 JAV MED SERV
   Kahmann V, 2006, COMMUN ACM, V49, P58, DOI 10.1145/1167838.1167864
   MYSORE J, 1997, P ACM MOBICOM
   *NAT EM NUMB ASS, 2005, 58001 NAT EM NUMB AS
   Rosenberg J, 2002, 3261 IETF RFC
   ROSENBERG J, 2004, 3725 IETF RFC
   ZAVE P, 2007, P 1 INT C PRINC SYST, P67
   ZAVE P, 2006, P 2 C FUT NETW TECHN
NR 16
TC 6
Z9 6
U1 0
U2 2
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JAN-FEB
PY 2009
VL 35
IS 1
BP 46
EP 66
DI 10.1109/TSE.2008.51
PG 21
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 431UK
UT WOS:000265089400003
DA 2024-07-18
ER

PT J
AU Chang, RY
   Podgurski, A
   Yang, J
AF Chang, Ray-Yaung
   Podgurski, Andy
   Yang, Jiong
TI Discovering neglected conditions in software by mining dependence graphs
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article; Proceedings Paper
CT International Symposium on Software Testing and Analysis (ISSTA)
CY 2007
CL Univ London Sch Oriental & African Studies, Brunei Gallery, London,
   ENGLAND
HO Univ London Sch Oriental & African Studies, Brunei Gallery
DE automatic defect detection; mining software repositories; program
   dependence graphs; frequent item set mining; frequent subgraph mining
ID COVERAGE
AB Neglected conditions are an important but difficult-to-find class of software defects. This paper presents a novel approach for revealing neglected conditions that integrates static program analysis and advanced data mining techniques to discover implicit conditional rules in a code base and to discover rule violations that indicate neglected conditions. The approach requires the user to indicate minimal constraints on the context of the rules to be sought, rather than specific rule templates. To permit this generality, rules are modeled as graph minors of enhanced procedure dependence graphs (EPDGs), in which control and data dependence edges are augmented by edges representing shared data dependences. A heuristic maximal frequent subgraph mining algorithm is used to extract candidate rules from EPDGs and a heuristic graph matching algorithm is used to identify rule violations. We also report the results of an empirical study in which the approach was applied to four open source projects (openssl, make, procmail, amaya). These results indicate that the approach is effective and reasonably efficient.
C1 [Chang, Ray-Yaung; Podgurski, Andy; Yang, Jiong] Case Western Reserve Univ, Dept Elect Engn & Comp Sci, Cleveland, OH 44106 USA.
C3 University System of Ohio; Case Western Reserve University
RP Chang, RY (corresponding author), Case Western Reserve Univ, Dept Elect Engn & Comp Sci, Cleveland, OH 44106 USA.
EM ray-yaung@case.edu; andy@eecs.case.edu; jiong.Yang@case.edu
CR Acharya Mithun, 2007, P 6 JOINT M EUROPEAN, P25, DOI [DOI 10.1145/1287624.1287630, 10.1145/1287624.1287630]
   [Anonymous], 1994, KDD workshop
   [Anonymous], 2007, P 2007 INT S SOFTWAR
   *AP ORG, 2008, AP HTTP SERV PROJ
   Budd T.A., 1980, POPL '80: Proceedings of the 7th ACM SIGPLAN-SIGACT symposium on Principles of programming languages, (New York, NY, USA), P220
   BURDICK D, 2001, P 17 INT C DAT ENG
   Chang R.-Y., 2007, P 2007 INT S SOFTWAR, P163, DOI DOI 10.1145/1273463.1273486
   Chelf B., 2002, PASTE '02, P51
   Chockler H, 2003, LECT NOTES COMPUT SC, V2860, P111
   Dunsmore A, 2003, IEEE SOFTWARE, V20, P21, DOI 10.1109/MS.2003.1207450
   ENGLER D, 2008, META LEVEL COMPILATI
   Engler Dawson R., 2001, Proceedings of the 18th ACM Symposium on Operating Systems Principles, P57
   FAGAN ME, 1976, IBM SYST J, V5, P258
   FATTA GD, 2006, P 3 INT WORKSH SOFTW
   FERRANTE J, 1987, ACM T PROGR LANG SYS, V9, P319, DOI 10.1145/24039.24041
   FESTA P, 1999, STUDY SAYS BUFFER OV
   Garey M.R., 1979, COMPUTERS INTRACTABI
   *GRAMM, 2008, CODESURFER
   *GRAMM, 2008, DEP GRAPHS PROGR SLI
   HORWITZ S, 1990, ACM T PROGR LANG SYS, V12, P26, DOI [10.1145/77606.77608, 10.1145/960116.53994]
   Howard M., 2003, Writing Secure Code
   Howden W. E., 1976, IEEE Transactions on Software Engineering, VSE-2, P208, DOI 10.1109/TSE.1976.233816
   Huan J, 2003, THIRD IEEE INTERNATIONAL CONFERENCE ON DATA MINING, PROCEEDINGS, P549
   HUAN J, 2004, P 10 INT C KNOWL DIS
   *IBM, 2008, ORTH DEF CLASS
   Krinke J., 2001, P 8 WORK C REV ENG
   Kuramochi M, 2005, DATA MIN KNOWL DISC, V11, P243, DOI 10.1007/s10618-005-0003-9
   Kuramochi M, 2004, FOURTH IEEE INTERNATIONAL CONFERENCE ON DATA MINING, PROCEEDINGS, P439, DOI 10.1109/ICDM.2004.10024
   LI Z, 2005, P 5 JOINT M EUR SOFT
   Li ZM, 2006, IEEE T SOFTWARE ENG, V32, P176, DOI 10.1109/TSE.2006.28
   Lindig Christian, 2007, P 6 JOINT M EUR SOFT
   LIU C, 2006, P 12 INT C KNOWL DIS
   Livshits B., 2005, Proceedings of the Workshop on the Evaluation of Software Defect Detection Tools, P296
   Mcclure Stuart., 2005, Hacking Exposed: Network Security Secrets Solutions
   Meyers GJ., 1979, ART SOFTWARE TESTING
   MYERS GJ, 1978, COMMUN ACM, V21, P760, DOI 10.1145/359588.359602
   NIST, 2008, NAT VULN DAT
   Raghavan S, 2004, PROC IEEE INT CONF S, P188, DOI 10.1109/ICSM.2004.1357803
   RAMANATHAN M, 2007, P ACM SIGPLAN INT C
   RAMANATHAN MK, 2007, P 29 INT C SOFTW ENG
   Renieris M, 2003, 18TH IEEE INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P30, DOI 10.1109/ASE.2003.1240292
   RICHARDSON DJ, 1985, IEEE T SOFTWARE ENG, V11, P1477, DOI 10.1109/TSE.1985.231892
   ROBERTSON N, 1983, J COMB THEORY B, V35, P39, DOI 10.1016/0095-8956(83)90079-5
   SOMMERVILLE L, 1998, P 3 IEEE INT C REQ E
   THAYER TA, 1976, TRWSS7603
   Thomas L.T., 2006, P 6 IEEE INT C DAT M
   Thummalapenta Suresh, 2007, Proceedings of the Twenty-second IEEE/ACM International Conference on Automated Software Engineering, ASE '07, P204
   WILANDER J, 2005, P 1 INT WORKSH COD B
   Williams CC, 2005, IEEE T SOFTWARE ENG, V31, P466, DOI 10.1109/TSE.2005.63
   WING JM, 1995, P 3 ACM SIGSOFT S FD, P128
   Yan XF, 2002, 2002 IEEE INTERNATIONAL CONFERENCE ON DATA MINING, PROCEEDINGS, P721, DOI 10.1109/ICDM.2002.1184038
   ZHANG S, 2007, P 23 INT C DAT ENG
   Zhu H, 1997, ACM COMPUT SURV, V29, P366, DOI 10.1145/267580.267590
   2008, SSLEAY DOCUMENTATION
NR 54
TC 39
Z9 59
U1 1
U2 4
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD SEP-OCT
PY 2008
VL 34
IS 5
BP 579
EP 596
DI 10.1109/TSE.2008.24
PG 18
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Engineering
GA 351WM
UT WOS:000259456600002
DA 2024-07-18
ER

PT J
AU Ren, X
   Chesley, OC
   Ryder, BG
AF Ren, Xiaoxia
   Chesley, Ophelia C.
   Ryder, Barbara G.
TI Identifying failure causes in Java programs: An application of change
   impact analysis
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article; Proceedings Paper
CT 21st International Conference on Software Maintenance (ICSM 2005)
CY SEP 26-29, 2005
CL Budapest, HUNGARY
SP IEEE
DE fault localization; semantic change impact analysis; edit change
   dependence; regression testing; intermediate versions of programs
ID TOOL
AB During program maintenance, a programmer may make changes that enhance program functionality or fix bugs in code. Then, the programmer usually will run unit/regression tests to prevent invalidation of previously tested functionality. If a test fails unexpectedly, the programmer needs to explore the edit to find the failure-inducing changes for that test. Crisp uses results from Chianti, a tool that performs semantic change impact analysis [ 1], to allow the programmer to examine those parts of the edit that affect the failing test. Crisp then builds a compilable intermediate version of the program by adding a programmer-selected partial edit to the original code, augmenting the selection as necessary to ensure compilation. The programmer can reexecute the test on the intermediate version in order to locate the exact reasons for the failure by concentrating on the specific changes that were applied. In nine initial case studies on pairs of versions from two real Java programs, Daikon [ 2] and Eclipse jdt compiler [ 3], we were able to use Crisp to identify the failure-inducing changes for all but 1 of 68 failing tests. On average, 33 changes were found to affect each failing test ( of the 67), but only 1-4 of these changes were found to be actually failure-inducing.
C1 Rutgers State Univ, Div Comp & Informat Sci, Piscataway, NJ 08854 USA.
C3 Rutgers University System; Rutgers University New Brunswick
RP Ren, X (corresponding author), Rutgers State Univ, Div Comp & Informat Sci, 110 Frelinghuysen Rd, Piscataway, NJ 08854 USA.
EM xren@cs.rutgers.edu; ochesley@cs.rutgers.edu; ryder@cs.rutgers.edu
CR Adams R., 1994, ACM Transactions on Software Engineering and Methodology, V3, P3, DOI 10.1145/174634.174637
   Arnold Robert S., 1996, Software Change Impact Analysis
   Buckner J, 2005, PROG COMPREHEN, P149, DOI 10.1109/WPC.2005.22
   Bunus P, 2003, 18TH IEEE INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P253, DOI 10.1109/ASE.2003.1240315
   BURKE M, 1993, ACM T PROGR LANG SYS, V15, P367, DOI 10.1145/169683.169678
   CHAMBERS C, 1995, PROC INT CONF SOFTW, P221, DOI 10.1145/225014.225035
   Chesley OC, 2005, PROC IEEE INT CONF S, P401
   DeMillo R. A., 1996, SIGSOFT Software Engineering Notes, V21, P121, DOI [10.1145/229000.226310, 10.1145/226295.226310]
   DMITRIEV M, 2002, P 17 ACM SIGPLAN C O, P373
   Ernst MD, 2001, IEEE T SOFTWARE ENG, V27, P99, DOI 10.1109/32.908957
   FELDMAN SI, 1979, SOFTWARE PRACT EXPER, V9, P255, DOI 10.1002/spe.4380090402
   Gosling J., 2000, The Java Language Specification
   GUPTA N, 2005, P 20 IEEE ACM INT C, P263
   Gustavsson J, 2003, PROC IEEE INT CONF S, P4, DOI 10.1109/ICSM.2003.1235401
   Gwizdala S, 2003, SEVENTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P223, DOI 10.1109/CSMR.2003.1192430
   HOOD R, 1987, P 2 ACM SIGSOFT SIGP, V2, P180
   KUNG D, 1994, INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE, PROCEEDINGS, P202, DOI 10.1109/ICSM.1994.336774
   Law J, 2003, PROC INT CONF SOFTW, P308, DOI 10.1109/ICSE.2003.1201210
   LEE M, 2000, P 34 INT C TECHN OBJ
   Lyle J., 1987, Proceedings of the ICCEA, ICCEA'87, P877
   Orso A, 2004, PROC INT CONF SOFTW, P491, DOI 10.1109/ICSE.2004.1317471
   Orso A., 2003, Software Engineering Notes, V28, P128, DOI 10.1145/949952.940089
   RAJLICH V, 2004, IEEE SOFTWARE, P2
   REN X, 2003, DCSTR533 RUTG U DEP
   Ren XX, 2004, ACM SIGPLAN NOTICES, V39, P432, DOI 10.1145/1035292.1029012
   Ryder B.G., 2001, P ACM SIGPLAN SIGSOF
   STOERZER M, 2005, DCSTR05582 RUTG U DE
   TICHY WF, 1986, ACM T PROGR LANG SYS, V8, P273, DOI 10.1145/5956.5959
   TIP F, 1995, J PROGRAM LANG, V3, P121
   Tonella P, 2003, IEEE T SOFTWARE ENG, V29, P495, DOI 10.1109/TSE.2003.1205178
   Zeller A, 1999, LECT NOTES COMPUT SC, V1687, P253, DOI 10.1145/318774.318946
NR 31
TC 36
Z9 42
U1 0
U2 5
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD SEP
PY 2006
VL 32
IS 9
BP 718
EP 732
PG 15
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Engineering
GA 087WU
UT WOS:000240774300007
DA 2024-07-18
ER

PT J
AU Zheng, YJ
   Chan, ATS
AF Zheng, YJ
   Chan, ATS
TI MobiGATE: A mobile computing middleware for the active deployment of
   transport services
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE mobile computing; coordination languages; adaptive middleware; dynamic
   reconfiguration; infrastructural proxies
AB The use of gateway proxies is one important approach to facilitating adaptation across wireless and mobile environments. Importantly, augmented service entities deployed within the gateway proxy residing on the wired network can be composed and deployed to shield mobile clients from the effects of poor network characteristics. The usual approach to the static composition of service entities on the gateway proxy is to have these service entities interact with each other by explicitly invoking procedures on the named interface, but such a tight coupling of interfaces inhibits the flexible composition and adaptation of the service entities to the dynamic operating characteristics of wireless networks. In this paper, we present a Mobile GATEway for the Active deployment of Transport Entities or, for short, MobiGATE (pronounced Mobi-Gate). MobiGATE is a mobile middleware framework that supports the robust and flexible composition of transport entities, known as streamlets. The flow of data traffic is subjected to processing by a chain of streamlets. Each streamlet encapsulates a service entity that adapts the flow of traffic across the wireless network. To facilitate the dynamic reconfiguration of the streamlets, we advocate applying the concept of coordination as the unifying approach to composing these transport service entities. Importantly, MobiGATE delineates a clear separation of interdependent parts from the service-specific computational codes of those service entities. It does this by using a separate coordination language, called MobiGATE Coordination Language (MCL), to describe the coordination among streamlet service entities. The complete design, implementation, and evaluation of the MobiGATE system are presented in this paper. Initial experimental results validate the flexibility of the coordination approach in promoting separation-of-concern in the reconfiguration of services, while achieving low computation and delay overheads.
C1 Univ Florida, Dept CISE, Gainesville, FL 32611 USA.
   Hong Kong Polytech Univ, Dept Comp, Kowloon, Hong Kong, Peoples R China.
C3 State University System of Florida; University of Florida; Hong Kong
   Polytechnic University
RP Univ Florida, Dept CISE, 301 CSE,POB 116120, Gainesville, FL 32611 USA.
EM yzheng@cise.ufl.edu; cstschan@comp.polyu.edu.hk
CR ALDRICH J, 2002, P INT C SOFTW ENG 20
   Allen R.J., 1997, (CMU Tech- nical Report CMU-CS-97-144). (technical report).
   ANASTASI G, 2003, COMPUTER J, V46
   [Anonymous], 2046 RFC
   ARBAB F, 1996, P COORDINATION 96, P34
   BARBACCI MR, 1993, SOFTWARE ENG J   MAR
   Chan ATS, 2003, IEEE T SOFTWARE ENG, V29, P1072, DOI 10.1109/TSE.2003.1265522
   Fox J., 1998, ENG MANAG J, V10, P19
   Garlan D, 2000, FDN COMPONENT BASED, P47
   LUCKHAM DC, 1995, IEEE T SOFTWARE ENG, V21, P336, DOI 10.1109/32.385971
   MAGEE J, 1989, IEEE T SOFTWARE ENG, V15, P663, DOI 10.1109/32.24720
   Magee J., 1996, Software Engineering Notes, V21, P3, DOI 10.1145/250707.239104
   MALONE TW, 1994, ACM COMPUT SURV, V26, P87, DOI 10.1145/174666.174668
   MASCOLO C, 2002, PERSONAL WIRELESS CO, V21
   McKinley PK, 2004, COMPUTER, V37, P56, DOI 10.1109/MC.2004.48
   MCKINLEY PK, 2003, IEEE T COMPUTERS, V52
   Medvidovic N., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P44, DOI 10.1109/ICSE.1999.840994
   Murphy AL, 2001, INT CON DISTR COMP S, P524, DOI 10.1109/ICDSC.2001.918983
   *NAT I STAND TECHN, 2006, NIST NET
   NOBLE B, 1997, P S OP SYST PRINC NO
   Papadopoulos G. A., 1998, ADV COMPUT, V46, P329, DOI [DOI 10.1016/S0065-2458(08)60208-9, 10.1016/S0065-2458(08)60208-9]
   Shaw M., 1996, SOFTWARE ARCHITECTUR
   SOMMERVILLE I, 1996, SOFTWARE ENG J   MAR
   Sousa J.P., 2002, P WORK IEEE IFIP C S
NR 24
TC 5
Z9 5
U1 0
U2 3
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JAN
PY 2006
VL 32
IS 1
BP 35
EP 50
DI 10.1109/TSE.2006.11
PG 16
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 004MK
UT WOS:000234756700003
DA 2024-07-18
ER

PT J
AU Cortellessa, V
   Goseva-Popstojanova, K
   Appukkutty, K
   Guedem, AR
   Hassan, A
   Elnaggar, R
   Abdelmoez, W
   Ammar, HH
AF Cortellessa, V
   Goseva-Popstojanova, K
   Appukkutty, K
   Guedem, AR
   Hassan, A
   Elnaggar, R
   Abdelmoez, W
   Ammar, HH
TI Model-based performance risk analysis
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE nonfunctional requirements; software risk; software performance; UML;
   performance failure; Functional Failure Analysis
ID METHODOLOGY
AB Performance is a nonfunctional software attribute that plays a crucial role in wide application domains spreading from safety-critical systems to e-commerce applications. Software risk can be quantified as a combination of the probability that a software system may fail and the severity of the damages caused by the failure. In this paper, we devise a methodology for estimation of performance-based risk factor, which originates from violations of performance requirements ( namely, performance failures). The methodology elaborates annotated UML diagrams to estimate the performance failure probability and combines it with the failure severity estimate which is obtained using the Functional Failure Analysis. We are thus able to determine risky scenarios as well as risky software components, and the analysis feedback can be used to improve the software design. We illustrate the methodology on an e-commerce case study using step-by-step approach and then provide a brief description of a case study based on large real system.
C1 Univ Aquila, Dept Comp Sci, I-67010 Coppito, Italy.
   W Virginia Univ, Lane Dept Comp Sci & Elect Engn, Morgantown, WV 26506 USA.
C3 University of L'Aquila; West Virginia University
RP Univ Aquila, Dept Comp Sci, I-67010 Coppito, Italy.
EM cortelle@di.univaq.it; katerina@csee.wvu.edu; avani@csee.wvu.edu;
   guedem@csee.wvu.edu; hassan@csee.wvu.edu; rania@csee.wvu.edu;
   rabie@csee.wvu.edu; ammar@csee.wvu.edu
RI Abdelmoez, Walid/AAJ-9939-2021
OI Goseva-Popstojanova, Katerina/0000-0003-4683-672X
CR AMMAR H, 2003, NASA SOFTW ASS S
   APPUKKUTTY K, 2004, THESIS W VIRGINIA U
   Bernardi S., 2002, PROC 3 INT WORKSHOP, P35
   BOOCH G, 1998, UNIFIED MODELING LAN
   Cortellessa V, 2002, SCI COMPUT PROGRAM, V44, P101, DOI 10.1016/S0167-6423(02)00033-3
   DIBERARDINO A, 2003, THESIS U AQUILA
   Douglass B. P., 2000, REAL TIME UML DEV EF
   Gomaa H., 2000, Proceedings Second International Workshop on Software and Performance. WOSP2000, P117, DOI 10.1145/350391.350418
   Gomaa H., 2000, DESIGNING CONCURRENT
   Goseva-Popstojanova K, 2003, IEEE T SOFTWARE ENG, V29, P946, DOI 10.1109/TSE.2003.1237174
   Gu G.P., 2002, P 3 INT WORKSHOP SOF, P227
   HASSAN A, 2003, P 21 INT SYST SAF C, P571
   Johannessen P, 2001, INTERNATIONAL CONFERENCE ON DEPENDABLE SYSTEMS AND NETWORKS, PROCEEDINGS, P507, DOI 10.1109/DSN.2001.941436
   KAHKIPURO P, 1999, P 2 INT C UN MOD LAN
   KING P, 1999, P 15 UK PERF ENG WOR, P23
   Lazowska Edward D, 1984, Quantitative system performance: computer system analysis using queueing network models
   LOOPEZGRAO JP, 2004, P 4 INT WORKSH SOFTW, P25
   Merseguer J., 2000, Proceedings Second International Workshop on Software and Performance. WOSP2000, P137, DOI 10.1145/350391.350421
   MERSEGUER J, 2000, P WORKSH SOFTW ENG P, P1
   PAPADOPOULOS Y, 1999, P 18 INT C COMP SAF
   Petriu D, 2000, IEEE T SOFTWARE ENG, V26, P1049, DOI 10.1109/32.881717
   PETRIU D, 2000, TUT P 2 INT WORKSH S
   Petriu DC, 2000, LECT NOTES COMPUT SC, V1764, P475
   Pooley R., 1999, PROCEEDING 15 UK PER, P23
   POOLEY R, 1998, P 14 UK PERF ENG WOR
   Pumfrey D.J., 1999, The Principled Design of Computer System Safety Analyses
   Smith C.U., 1990, Performance engineering of software systems, VSeventh
   SMITH CU, 2002, PERFORMANCE SOLUTION
   Yacoub SM, 2002, IEEE T SOFTWARE ENG, V28, P529, DOI 10.1109/TSE.2002.1010058
NR 29
TC 37
Z9 43
U1 0
U2 7
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JAN
PY 2005
VL 31
IS 1
BP 3
EP 20
DI 10.1109/TSE.2005.12
PG 18
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 893QP
UT WOS:000226734600001
DA 2024-07-18
ER

PT J
AU Delgado, N
   Gates, AQ
   Roach, S
AF Delgado, N
   Gates, AQ
   Roach, S
TI A taxonomy and catalog of runtime software-fault monitoring tools
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE assertion checkers; runtime monitors; specification; specification
   language; survey; software/program verification
ID DESIGN
AB A goal of runtime software-fault monitoring is to observe software behavior to determine whether it complies with its intended behavior. Monitoring allows one to analyze and recover from detected faults, providing additional defense against catastrophic failure. Although runtime monitoring has been in use for over 30 years, there is renewed interest in its application to fault detection and recovery, largely because of the increasing complexity and ubiquitous nature of software systems. This paper presents a taxonomy that developers and researchers can use to analyze and differentiate recent developments in runtime software fault-monitoring approaches. The taxonomy categorizes the various runtime monitoring research by classifying the elements that are considered essential for building a monitoring system, i.e., the specification language used to define properties; the monitoring mechanism that oversees the program's execution; and the event handler that captures and communicates monitoring results. After describing the taxonomy, the paper presents the classification of the software-fault monitoring systems described in the literature.
C1 Microsoft Corp, Bellevue, WA 98007 USA.
   Univ Texas, Dept Comp Sci, El Paso, TX 79902 USA.
C3 Microsoft; University of Texas System; University of Texas El Paso
RP Microsoft Corp, Bellevue, WA 98007 USA.
EM ndelgado@cs.utep.edu; agates@cs.utep.edu; sroach@cs.utep.edu
OI Gates, Ann/0000-0001-6974-7899
CR ALPERN B, 1989, ACM T PROGR LANG SYS, V11, P147, DOI 10.1145/59287.62028
   [Anonymous], 2002, COMMUNICATION
   [Anonymous], P 8 INT WORKSH FORM
   [Anonymous], ELECT NOTES THEORETI
   [Anonymous], P 4 IEEE INT HIGH AS
   [Anonymous], ELECT NOTES THEORETI
   [Anonymous], POPL 2000
   AVIZIENIS A, 1986, P IEEE, V74, P629, DOI 10.1109/PROC.1986.13527
   Barbacci M., 1995, CMUSEI95TR021
   BARTETZKO D, 2001, P 1 WORKSH RUNT VER
   Berard B., 2001, Systems and Software Verification
   BRAND G, 2004, JAVA PATHFINDER JPF2
   BRUEGGE B, 1993, P 8 ANN C OBJ OR PRO, P65
   CHEON Y, 2003, 0309 IOW STAT U DEP
   CHODROW S, 1995, SOFTWARE PRACTICE EX, V25, P73
   CLAVEL M, 2000, P 3 INT C FUND APPR
   COBLEIGH J, 2001, FLAVERS FINITE STATE
   DELAGDO N, 2002, THESIS U TEXAS EL PA
   DERAEVE J, 1997, AUTOMATED TEST GENER
   DIAZ M, 1994, IEEE T SOFTWARE ENG, V20, P900, DOI 10.1109/32.368136
   DRUSINKSKY D, 2004, TEMPORAL RULE CHECKI
   DRUSINSKY D, 2002, COMMUNICATION
   DRUSINSKY D, 2000, P SPIN 2000 C
   DUDANI S, 2001, P 1 WORKSH RUNT VER
   EISENHAUER G, 2004, MIRROR OBJECT STEERI
   EISENHAUER G, 2004, ECHO EVENT DELIVERY
   EISENHAUER G, 2002, COMMUNICATION
   GATES A, 2001, P 1 WORKSH RUNT VER
   GATES A, 2002, J SYST SOFTWARE, V63, P219
   GATES AQ, 2000, J INTEGRATED DES PRO, V14, P63
   GU W, 1994, ACM SIGPLAN NOTI SEP
   GU W, 1994, GITCC9421
   HABAN D, 1990, IEEE T SOFTWARE ENG, V16, P197, DOI 10.1109/32.44382
   Havelund K, 2001, 16TH ANNUAL INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2001), PROCEEDINGS, P135, DOI 10.1109/ASE.2001.989799
   Havelund K, 2000, LECT NOTES COMPUT SC, V1885, P245
   HAVELUND K, 2001, P S ART INT ROB AUT
   HAVELUND K, 2002, COMMUNICATION
   Havelund K., 2001, P 1 WORKSH RUNT VER
   Holzmann GJ, 1997, IEEE T SOFTWARE ENG, V23, P279, DOI 10.1109/32.588521
   JEFFERY C, 1998, PROGRAM ANAL SOFTWAR, P67
   Jeffery C.L., 1999, Program Monitoring and Visualization: An Exploratory Approach
   JEFFERY CL, 2002, COMMUNICATION
   KIM M, 1999, P EUR C REAL TIM SYS
   KIM M, 2002, COMMUNICATION
   KIM M, 1998, MSCIS9837 U PENNS DE
   LEE I, 1999, P 1999 INT C PAR DIS
   Lee I, 1998, P 1998 KOR US TECHN
   LIAO YS, 1992, IEEE T SOFTWARE ENG, V18, P969, DOI 10.1109/32.177366
   LUCKHAM D, 1991, IEEE SOFTWARE, V8, P74, DOI 10.1109/52.62935
   LUCKHAM D, 1988, IEEE SOFTWARE, V20, P9
   MEYER B, 1992, COMPUTER, V25, P40, DOI 10.1109/2.161279
   MOK A, 2002, COMMUNICATION
   Mok AK, 1997, THIRD IEEE REAL-TIME TECHNOLOGY AND APPLICATIONS SYMPOSIUM, PROCEEDINGS, P252, DOI 10.1109/RTTAS.1997.601363
   NIMMER JW, 2001, P 1 WORKSH RUNT VER
   PETERS D, 2002, COMMUNICATION
   Peters D., 1999, AUTOMATED TESTING RE
   PETERS D, 2000, THESIS MCMASTER U
   Peters D.K., 2000, P 2000 ACM SIGSOFT I, P77
   PLATTNER B, 1981, COMPUTER, V14, P76, DOI 10.1109/C-M.1981.220255
   Robinson WN, 2003, 11TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, PROCEEDINGS, P65
   ROBINSON WN, 2002, P HAW INT C SYST SCI, V9, P276
   ROSENBLUM DS, 1995, IEEE T SOFTWARE ENG, V21, P19, DOI 10.1109/32.341844
   ROSU G, 2001, 0115 RIACS
   RTI, 2002, EC IMP IN INFR SOFTW
   RUGABER S, 2004, DYNAMO DYNAMIC ASSEM
   RUGABER S, 2001, P CASES 2001 C AUG 2
   SANKAR S, 1993, COMPUTER, V26, P32, DOI 10.1109/2.204684
   SCHROEDER BA, 1995, COMPUTER, V28, P72, DOI 10.1109/2.386988
   SMITH R, 2002, P INT C SOFTW ENG MA
   Sokolsky O., 1999, P 5 INT WORKSH OBJ O, P11
   SOSIC R, 1992, P SIGPLAN 92 C PROGR, P12
   Tanenbaum A.S, 2001, Modern Operating Systems
   Teller PJ, 1999, IEEE IPCCC, P310, DOI 10.1109/PCCC.1999.749454
   Templer KS, 1998, 13TH IEEE INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P249, DOI 10.1109/ASE.1998.732663
   Tsai J., 1996, DISTRIBUTED REAL TIM
   TSAI JJP, 1990, IEEE T SOFTWARE ENG, V16, P897, DOI 10.1109/32.57626
NR 76
TC 176
Z9 211
U1 0
U2 6
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD DEC
PY 2004
VL 30
IS 12
BP 859
EP 872
DI 10.1109/TSE.2004.91
PG 14
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 881RI
UT WOS:000225886200002
DA 2024-07-18
ER

PT J
AU Yu, LG
   Schach, SR
   Chen, K
   Offutt, J
AF Yu, LG
   Schach, SR
   Chen, K
   Offutt, J
TI Categorization of common coupling and its application to the
   maintainability of the Linux kernel
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE modularity; dependencies; common coupling; definition-use analysis;
   kernel-based software; open-source software; Linux
AB Data coupling between modules, especially common coupling, has long been considered a source of concern in software design, but the issue is somewhat more complicated for products that are comprised of kernel modules together with optional nonkernel modules. This paper presents a refined categorization of common coupling based on definitions and uses between kernel and nonkernel modules and applies the categorization to a case study. Common coupling is usually avoided when possible because of the potential for introducing risky dependencies among software modules. The relative risk of these dependencies is strongly related to the specific definition-use relationships. In a previous paper, we presented results from a longitudinal analysis of multiple versions of the open-source operating system Linux. This paper applies the new common coupling categorization to version 2.4.20 of Linux, counting the number of instances of common coupling between each of the 26 kernel modules and all the other nonkernel modules. We also categorize each coupling in terms of the definition-use relationships. Results show that the Linux kernel contains a large number of common couplings of all types, raising a concern about the long-term maintainability of Linux.
C1 Tennessee Technol Univ, Dept Comp Sci, Cookeville, TN 38505 USA.
   Vanderbilt Univ, Dept Elect Engn & Comp Engn, Nashville, TN 37235 USA.
   George Mason Univ, Dept Informat & Software Engn, Fairfax, VA 22030 USA.
C3 Tennessee Technological University; Vanderbilt University; George Mason
   University
RP Yu, LG (corresponding author), Tennessee Technol Univ, Dept Comp Sci, POB 5101, Cookeville, TN 38505 USA.
EM yul@csc.tntech.edu; srs@vuse.vanderbilt.edu; kai.chen@vanderbilt.edu;
   ofut@ise.gmu.edu
CR ALLEN FE, 1976, COMMUN ACM, V19, P137, DOI 10.1145/360018.360025
   Briand LC, 1998, FIFTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM - METRICS 1998, PROCEEDINGS, P246, DOI 10.1109/METRIC.1998.731251
   CLEMENTS P., 2002, EVALUATING SOFTWARE
   Cooke D, 1999, COMPUTER, V32, P58, DOI 10.1109/MC.1999.762801
   HANSEN PB, 1970, COMMUN ACM, V4, P238
   Harder T., 1986, Proceedings of the 1986 International Workshop on Object-Oriented Database Systems (Cat. No.86TH0161-0)
   OFFUTT AJ, 1993, J SYST SOFTWARE, V20, P295, DOI 10.1016/0164-1212(93)90072-6
   OFFUTT J, 2002, P INT S SOFTW REL EN
   Page-Jones M., 1980, The practical guide to structured systems design
   Schach S. R., 2002, IEE Proceedings-Software, V149, P18, DOI 10.1049/ip-sen:20020198
   Schach S.R., 2002, P 2 WORKSH OP SOURC, P47
   Schach S.R., 2005, OBJECT ORIENTED CLAS, V6th
   Schach SR, 2003, SOFTWARE QUAL J, V11, P211, DOI 10.1023/A:1025114726917
   STEVENS WP, 1974, IBM SYST J, V13, P115, DOI 10.1147/sj.132.0115
   TROY DA, 1981, J SYST SOFTWARE, V2, P113, DOI 10.1016/0164-1212(81)90031-5
   Wang SL, 2001, J SOFTW MAINT EVOL-R, V13, P127, DOI 10.1002/smr.227
   2003, XBOX SYSTEM SOFTWARE
NR 17
TC 38
Z9 40
U1 0
U2 4
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD OCT
PY 2004
VL 30
IS 10
BP 694
EP 706
DI 10.1109/TSE.2004.58
PG 13
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 856EV
UT WOS:000224029400005
DA 2024-07-18
ER

PT J
AU Rountev, A
   Milanova, A
   Ryder, BG
AF Rountev, A
   Milanova, A
   Ryder, BG
TI Fragment class analysis for testing of polymorphism in Java software
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE program analysis; class analysis; test coverage; object-oriented
   software
AB Testing of polymorphism in object-oriented software may require coverage of all possible bindings of receiver classes and target methods at call sites. Tools that measure this coverage need to use class analysis to compute the coverage requirements. However, traditional whole-program class analysis cannot be used when testing incomplete programs. To solve this problem, we present a general approach for adapting whole-program class analyses to operate on program fragments. Furthermore, since analysis precision is critical for coverage tools, we provide precision measurements for several analyses by determining which of the computed coverage requirements are actually feasible for a set of subject components. Our work enables the use of whole-program class analyses for testing of polymorphism in partial programs, and identifies analyses that potentially are good candidates for use in coverage tools.
C1 Ohio State Univ, Dept Comp Sci & Engn, Columbus, OH 43210 USA.
   Rensselaer Polytech Inst, Dept Comp Sci, Troy, NY 12180 USA.
   Rutgers State Univ, Dept Comp Sci, Piscataway, NJ 08854 USA.
C3 University System of Ohio; Ohio State University; Rensselaer Polytechnic
   Institute; Rutgers University System; Rutgers University New Brunswick
RP Ohio State Univ, Dept Comp Sci & Engn, 2015 Neil Ave, Columbus, OH 43210 USA.
EM rountev@cis.ohio-state.edu; milanova@cs.rpi.edu; ryder@cs.rutgers.edu
CR Alexander RT, 2000, 11TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P15, DOI 10.1109/ISSRE.2000.885857
   Andersen L. O., 1994, Ph.D. thesis
   [Anonymous], PERFORMING DATA FLOW
   [Anonymous], 1999, Testing Object-Oriented Systems: Models, Patterns, and Tools
   BINDER RV, 1996, J SOFTWARE TESTING V, V6, P125
   Chatterjee R, 2001, DCSTR433 RUTG U
   CHATTERJEE R, 1999, P 26 ACM SIGPLAN SIG, P133
   COX BJ, 1988, J OBJECT-ORIENT PROG, V1, P44
   FENTON N, 1994, IEEE SOFTWARE, V11, P86, DOI 10.1109/52.300094
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   Gosling J., 2000, The Java Language Specification
   Grove D, 2001, ACM T PROGR LANG SYS, V23, P685, DOI 10.1145/506315.506316
   Mock Markus., 2001, P 2001 ACM SIGPLAN S, P66
   PERRY DE, 1990, J OBJECT-ORIENT PROG, V2, P13
   PLEVYAK J, 1994, P 9 ANN C OBJ OR PRO, P324
   ROUNTEV A, 2001, P C OBJ OR PROGR SYS, P43
   RUF E, 2000, P C PROGR LANG DES I, P208
   Shivers O. G., 1991, THESIS CARNEGIE MELL
   Siegel Sidney, 1988, Nonparametric statistics for the behavioral sciences
   Streckenbach Mirko., 2000, POINTS TO JAVA GEN F
   Tip F, 2002, ACM T PROGR LANG SYS, V24, P625, DOI 10.1145/586088.586090
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
   Zhu H, 1997, ACM COMPUT SURV, V29, P366, DOI 10.1145/267580.267590
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
NR 46
TC 31
Z9 36
U1 0
U2 1
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUN
PY 2004
VL 30
IS 6
BP 372
EP 387
DI 10.1109/TSE.2004.20
PG 16
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 820IW
UT WOS:000221383400003
DA 2024-07-18
ER

PT J
AU Andrade, J
   Ares, J
   García, R
   Pazos, J
   Rodríguez, S
   Silva, A
AF Andrade, J
   Ares, J
   García, R
   Pazos, J
   Rodríguez, S
   Silva, A
TI A methodological framework for viewpoint-oriented conceptual modeling
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE conceptual modeling; multiple viewpoint; discrepancies; conflicts;
   inconsistencies; methodological framework
ID REQUIREMENTS; INCONSISTENCY; MANAGEMENT
AB To solve any nontrivial problem, it first needs to be conceptualized, taking into account the individual who has the problem. However, a problem is generally associated with more than one individual, as is usually the case in software development. Therefore, this process has to take into account different viewpoints about the problem and any discrepancies that could arise as a result. Traditionally, conceptualization in software engineering has omitted the different viewpoints that the individuals may have of the problem and has inherently enforced consistency in the event of any discrepancies, which are considered as something to be systematically rejected. This paper presents a methodological framework that explicitly drives the conceptualization of different viewpoints and manages the different types of discrepancies that arise between them, which become really important in the process. The definition of this framework is generic, and it is, therefore, independent of any particular software development paradigm. Its application to software engineering means that viewpoints and their possible discrepancies can be considered in the software process conceptual modeling phase. This application is illustrated by means of what is considered to be a standard problem: the IFIP Case.
C1 Univ A Coruna, Fac Informat, La Coruna 15071, Spain.
   Univ Politecn Madrid, Fac Informat, E-28660 Madrid, Spain.
C3 Universidade da Coruna; Universidad Politecnica de Madrid
RP Univ A Coruna, Fac Informat, Campus Elvina S-N, La Coruna 15071, Spain.
EM jag@udc.es; juanar@udc.es; rafael@udc.es; jpazos@fi.upm.es;
   santi@udc.es; asilva@fi.upm.es
RI Andrade-Garda, Javier/U-8124-2018; Rodriguez-Yanez,
   Santiago/E-3038-2014; Silva, Andres/D-4373-2012; Garcia Vazquez,
   Rafael/G-2099-2016; Ares Casal, Juan/G-2140-2016
OI Andrade-Garda, Javier/0000-0002-9630-2534; Rodriguez-Yanez,
   Santiago/0000-0002-6781-7838; Silva, Andres/0000-0002-7273-0526; Garcia
   Vazquez, Rafael/0000-0003-2775-2010; Ares Casal,
   Juan/0000-0002-4497-2114
CR ANDRADE J, IN PRESS INFORMATION
   ANDRADE J, 2002, THESIS U A CORUNA
   [Anonymous], 2000, FUTURE SOFTWARE ENG
   [Anonymous], 1997, FABRIC REALITY
   [Anonymous], PROGRAMMING NEW ERA
   Ares J, 1998, KNOWL-BASED SYST, V11, P87, DOI 10.1016/S0950-7051(98)00048-3
   Boehm B, 2001, IEEE SOFTWARE, V18, P46, DOI 10.1109/52.922725
   Bransford J., 1993, The IDEAL Problem Solver-A Guide for Improving Thinking, Learning, and Creativity, V2
   CHEN PP, 1999, CONCEPTUAL MODELING
   DAMIAN DE, 2003, P 1 INT WORKSH COMP, P41
   Darke P., 1996, Requirements Engineering, V1, P88, DOI 10.1007/BF01235904
   Diez J., 1997, Fundamentos de filosofia de la ciencia
   Easterbrook S, 1996, SOFTWARE ENG J, V11, P31, DOI 10.1049/sej.1996.0004
   Easterbrook S., 1991, Knowledge Acquisition, V3, P255, DOI 10.1016/1042-8143(91)90007-A
   Easterbrook S., 1993, CSCW COOPERATION CON
   Glass RL, 2002, INFORM SOFTWARE TECH, V44, P491, DOI 10.1016/S0950-5849(02)00049-6
   GRUBER TR, 1993, KNOWL ACQUIS, V5, P199, DOI 10.1006/knac.1993.1008
   Grundy J, 1998, IEEE T SOFTWARE ENG, V24, P960, DOI 10.1109/32.730545
   Gunter CA, 2000, IEEE SOFTWARE, V17, P37, DOI 10.1109/52.896248
   Hoppenbrouwers J, 1997, DATA KNOWL ENG, V23, P79, DOI 10.1016/S0169-023X(97)00011-6
   Jackson D, 1996, SOFTWARE ENG J, V11, P19, DOI 10.1049/sej.1996.0003
   JACKSON D, 2000, FUTURE SOFTWARE ENG
   Jackson M., 1995, SOFTWARE REQUIREMENT
   Jackson M., 2001, PROBLEM FRAMES ANAL
   JACKSON M, 2001, P 2000 NATO SUMM SCH, P3
   JACKSON RB, 1995, INFORM SYST, V20, P273, DOI 10.1016/0306-4379(95)00014-U
   Kotonya G.Sommerville., 1997, Requirements Engineering: Processes and Techniques
   LEITE JCSD, 1991, IEEE T SOFTWARE ENG, V17, P1253, DOI 10.1109/32.106986
   Marinoff Lou., 1999, Plato, Not Prozac! Applying Philosophy to Everyday Problems, V1st
   Nentwich C, 2003, PROC INT CONF SOFTW, P455, DOI 10.1109/ICSE.2003.1201223
   Nentwich C., 2002, ACM T INTERNET TECHN, V2, P151, DOI [10.1145/514183.514186, DOI 10.1145/514183.514186]
   NUSEIBEH B, 1994, IEEE T SOFTWARE ENG, V20, P760, DOI 10.1109/32.328995
   Nuseibeh B, 2000, COMPUTER, V33, P24, DOI 10.1109/2.839317
   OLLE TW, 1982, INFORMATION SYSTEMS
   Raphael B., 1976, THINKING COMPUTER MI
   Robbins S.P., 2000, Organizational behavior: Concepts, controversies, and applications
   ROBEY D, 1989, MANAGE SCI, V35, P1172, DOI 10.1287/mnsc.35.10.1172
   ROBINSON WN, 1990, 12TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P268, DOI 10.1109/ICSE.1990.63633
   Robinson WN, 1999, IEEE T SOFTWARE ENG, V25, P816, DOI 10.1109/32.824411
   Silva A, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P94, DOI 10.1109/ICSE.2002.1007959
   Spanoudakis G, 1997, ANN SOFTW ENG, V3, P433, DOI 10.1023/A:1018998207415
   Spanoudakis G, 2002, J SYST SOFTWARE, V64, P3, DOI 10.1016/S0164-1212(02)00018-3
   van Lamsweerde A, 1998, IEEE T SOFTWARE ENG, V24, P908, DOI 10.1109/32.730542
   VERHEIJEN GMA, 1982, INFORMATION SYSTEMS
NR 44
TC 28
Z9 33
U1 0
U2 11
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAY
PY 2004
VL 30
IS 5
BP 282
EP 294
DI 10.1109/TSE.2004.1
PG 13
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 813JS
UT WOS:000220904000001
DA 2024-07-18
ER

PT J
AU Alshayeb, M
   Li, W
AF Alshayeb, M
   Li, W
TI An empirical validation of object-oriented metrics in two different
   iterative software processes
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE software metrics; agile process; empirical validation; framework
   evolution
ID PREDICTION; SUITE
AB Object-oriented (OO) metrics are used mainly to predict software engineering activities/efforts such as maintenance effort, error proneness, and error rate. There have been discussions about the effectiveness of metrics in different contexts. In this paper, we present an empirical study of OO metrics in two iterative processes: the short-cycled agile process and the long-cycled framework evolution process. We find that OO metrics are effective in predicting design efforts and source lines of code added, changed, and deleted in the short-cycled agile process and ineffective in predicting the same aspects in the long-cycled framework process. This leads us to believe that OO metrics' predictive capability is limited to the design and implementation changes during the development iterations, not the long-term evolution of an established system in different releases.
C1 Univ Alabama, Dept Comp Sci, Huntsville, AL 35899 USA.
   Univ Alabama, Informat Technol & Syst Ctr, Huntsville, AL 35899 USA.
C3 University of Alabama System; University of Alabama Huntsville;
   University of Alabama System; University of Alabama Huntsville
RP Univ Alabama, Dept Comp Sci, Huntsville, AL 35899 USA.
EM mohammed@nlshayeb.com; wli@cs.uah.edu
RI Alshayeb, Mohammad/B-5941-2015
OI Alshayeb, Mohammad/0000-0001-7950-0099
CR Ambler Scott, 2002, Agile modeling: effective practices for extreme programming and the unified process
   [Anonymous], P 5 WORLD MULT SYST
   BASILI V, 1996, P 8 INT C SOFTW ENG
   BASILI V, 1996, IEEE T SOFTWARE ENG, V22, P267
   Beck K, 1999, COMPUTER, V32, P70, DOI 10.1109/2.796139
   Briand LC, 2001, IEEE T SOFTWARE ENG, V27, P963, DOI 10.1109/32.965338
   Briand LC, 1999, IEEE T SOFTWARE ENG, V25, P722, DOI 10.1109/32.815329
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   CHURCHER NI, 1995, IEEE T SOFTWARE ENG, V21, P263, DOI 10.1109/32.372153
   El Emam K, 2001, J SYST SOFTWARE, V56, P63, DOI 10.1016/S0164-1212(00)00086-8
   Fenton NE, 2000, IEEE T SOFTWARE ENG, V26, P797, DOI 10.1109/32.879815
   Fenton NE, 1999, IEEE T SOFTWARE ENG, V25, P675, DOI 10.1109/32.815326
   Fioravanti F, 2001, IEEE T SOFTWARE ENG, V27, P1062, DOI 10.1109/32.988708
   Fox J., 2016, Applied Regression Analysis, Linear Models, and Related Methods, DOI DOI 10.5860/CHOICE.34-6323
   Harrison R., 1998, Empirical Software Engineering, V3, P255, DOI 10.1023/A:1009784121652
   Hastings TE, 2001, IEEE T SOFTWARE ENG, V27, P337, DOI 10.1109/32.917523
   Hitz M, 1996, IEEE T SOFTWARE ENG, V22, P267, DOI 10.1109/32.491650
   Li W, 1998, J OBJECT-ORIENT PROG, V11, P15
   Li W, 1998, J SYST SOFTWARE, V44, P155, DOI 10.1016/S0164-1212(98)10052-3
   Li W, 2000, INFORM SOFTWARE TECH, V42, P373, DOI 10.1016/S0950-5849(99)00088-9
   LI W, 1993, J SYST SOFTWARE, V23, P111, DOI 10.1016/0164-1212(93)90077-B
   Li W., 1993, Proceedings First International Software Metrics Symposium (Cat. No.93TH0518-1), P52, DOI 10.1109/METRIC.1993.263801
   Montgomery D. C., 1992, Introduction to linear regression analysis, V2nd ed.
   Moser S, 1999, J SYST SOFTWARE, V49, P33, DOI 10.1016/S0164-1212(99)00064-3
   Nesi P, 1998, J SYST SOFTWARE, V42, P89, DOI 10.1016/S0164-1212(97)10021-8
   ROMBACH HD, 1990, IEEE SOFTWARE, V7, P17, DOI 10.1109/52.50770
   ROMBACH HD, 1987, IEEE T SOFTWARE ENG, V13, P344, DOI 10.1109/TSE.1987.233165
   Weisberg S., 1985, APPL LINEAR REGRESSI, DOI DOI 10.1002/BIMJ.4710300746
NR 28
TC 71
Z9 78
U1 0
U2 13
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD NOV
PY 2003
VL 29
IS 11
BP 1043
EP 1049
DI 10.1109/TSE.2003.1245305
PG 7
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 740KU
UT WOS:000186402200008
DA 2024-07-18
ER

PT J
AU Tan, HBK
   Hao, L
   Yang, Y
AF Tan, HBK
   Hao, L
   Yang, Y
TI On formalization of the whole-part relationship in the unified modeling
   language
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE object-oriented modeling; UML; whole-part relationship; aggregation;
   composition
AB In [1], a formal definition for the semantics of the Whole-Part relationship in the Unified Modeling Language (UML) is introduced. This paper reports some discrepancies in [1] and proposes solutions to these discrepancies.
C1 Nanyang Technol Univ, Sch Elect & Elect Engn, Singapore 639798, Singapore.
C3 Nanyang Technological University
RP Tan, HBK (corresponding author), Nanyang Technol Univ, Sch Elect & Elect Engn, Block S2,Nanyang Ave, Singapore 639798, Singapore.
RI Tan, Hee Beng Kuan/A-5147-2011
CR Barbier F, 2003, IEEE T SOFTWARE ENG, V29, P459, DOI 10.1109/TSE.2003.1199074
   Barbier F, 2001, INFORM SOFTWARE TECH, V43, P19, DOI 10.1016/S0950-5849(00)00133-6
   Opdahl AL, 2001, INFORM SOFTWARE TECH, V43, P387, DOI 10.1016/S0950-5849(00)00175-0
NR 3
TC 3
Z9 3
U1 1
U2 4
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD NOV
PY 2003
VL 29
IS 11
BP 1054
EP 1055
DI 10.1109/TSE.2003.1245307
PG 2
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 740KU
UT WOS:000186402200010
DA 2024-07-18
ER

PT J
AU Long, B
   Hoffman, D
   Strooper, P
AF Long, B
   Hoffman, D
   Strooper, P
TI Tool support for testing concurrent Java components
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE component testing; concurrency; unit testing; tool support
AB Concurrent programs are hard to test due to the inherent nondeterminism. This paper presents a method and tool support for testing concurrent Java components. Too[ support is offered through ConAn (Concurrency Analyser), a too] for generating drivers for unit testing Java classes that are used in a multithreaded context. To obtain adequate controllability over the interactions between Java threads, the generated driver contains threads that are synchronized by a clock. The driver automatically executes the calls in the test sequence in the prescribed order and compares the outputs against the expected outputs specified in the test sequence. The method and tool are illustrated in detail on an asymmetric producer-consumer monitor. Their application to testing over 20 concurrent components, a number of which are sourced from industry and were found to contain faults, is presented and discussed.
C1 Univ Queensland, Software Verificat Res Ctr, Sch Informat Technol & Elect Engn, Brisbane, Qld 4072, Australia.
   Univ Victoria, Dept Comp Sci, Victoria, BC V8W 3P6, Canada.
C3 University of Queensland; University of Victoria
RP Univ Queensland, Software Verificat Res Ctr, Sch Informat Technol & Elect Engn, Brisbane, Qld 4072, Australia.
EM brad@itee.uq.edu.au; dhoffman@csr.uvic.ca; pstroop@itee.uq.edu.au
RI Long, Brad/AAO-2538-2021
OI Strooper, Paul/0000-0003-4789-2897; Long, Bradley/0000-0002-4575-6165
CR Andrews G. R., 1991, Concurrent Programming: Principles and Practice
   [Anonymous], P ACM SIGM S PAR DIS
   [Anonymous], 1999, Concurrency-state models and Java programs
   Artho Cyrille., 2001, 2001 AUSTR SOFTW, P68
   Bechini A, 1998, PROG COMPREHEN, P190, DOI 10.1109/WPC.1998.693354
   BECHINI A, 1998, P 9 MED EL C MELECON, V2, P1308
   Beck K., 2000, EXTREME PROGRAMMING
   Ben-Ari M., 1990, Principles of Concurrent and Distributed Programming
   BRINCHHANSEN P, 1978, SOFTWARE PRACT EXPER, V8, P721, DOI 10.1002/spe.4380080607
   CAI X, 2000, P 1 AS PAC C QUAL SO
   CARVER R, 1989, C P AD TECHN CONT AP, P528
   Carver RH, 1998, IEEE T SOFTWARE ENG, V24, P471, DOI 10.1109/32.689403
   CARVER RH, 1991, IEEE SOFTWARE, V8, P66, DOI 10.1109/52.73751
   CLARKE EM, 1986, ACM T PROGR LANG SYS, V8, P244, DOI 10.1145/5397.5399
   CORBETT C, 2000, P 22 INT C SOFTW ENG
   CORBETT JC, 1998, P ACM SIGSOFT INT S, P1
   Daley N, 2002, SOFTWARE PRACT EXPER, V32, P465, DOI 10.1002/spe.452
   Demartini C, 1998, SOFTWARE ENGINEERING FOR PARALLEL AND DISTRIBUTED SYSTEMS - INTERNATIONAL SYMPOSIUM PROCEEDINGS, P215, DOI 10.1109/PDSE.1998.668184
   Edelstein O, 2002, IBM SYST J, V41, P111, DOI 10.1147/sj.411.0111
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   Gaifman H., 1991, Proceedings of the Tenth Annual ACM Symposium on Principles of Distributed Computing, P241, DOI 10.1145/112600.112621
   GAMMA E, JUNIT TESTING FRAMEW
   GOSLING J, 1998, JAVA PROGRAMMING LAN
   Gosling J., 2000, The Java Language Specification
   HARTLEY SJ, 1998, CONCURRENT PROGRAMMI, P55
   Harvey C, 2001, 2001 AUSTRALIAN SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P61, DOI 10.1109/ASWEC.2001.948498
   HATCLIFF J, 2001, P 12 INT C CONC THEO, P39
   Havelund K, 2001, 16TH ANNUAL INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2001), PROCEEDINGS, P135, DOI 10.1109/ASE.2001.989799
   Havelund K, 2000, LECT NOTES COMPUT SC, V1885, P245
   Havelund K., 2001, ELECT NOTES THEORETI, V55, P97
   HAVELUND K, 1999, P 5 6 SPIN WORKSH
   Hoare CAR., 1985, Communicating Sequential Processes
   Hoffman D., 2000, Proceedings 2000 Australian Software Engineering Conference, P235, DOI 10.1109/ASWEC.2000.844580
   ITOH E, 1996, P 3 AS PAC SOFTW ENG
   Jeffries R.E., 1999, Software Testing and Quality Engineering, P23
   Katayama T, 1998, 1998 ASIA PACIFIC SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P262, DOI 10.1109/APSEC.1998.733728
   KATAYAMA T, 2000, P 2000 AS PAC SOFTW, P590
   Konuru R., 2000, Proceedings 14th International Parallel and Distributed Processing Symposium. IPDPS 2000, P219, DOI 10.1109/IPDPS.2000.845988
   Koppol P. V., 1996, Proceedings of the 1996 International Symposium on Software Testing and Analysis (ISSTA), P14, DOI 10.1145/229000.226298
   LEA D, 1997, CONCURRENT PROGRAMMI, P210
   Lindholm Tim., 1999, JAVA VIRTUAL MACHINE, V2nd
   Long B, 2001, DOA'01: 3RD INTERNATIONAL SYMPOSIUM ON DISTRIBUTED OBJECTS & APPLICATIONS, PROCEEDINGS, P20, DOI 10.1109/DOA.2001.954068
   LONG DL, 1991, P ACM S TEST AN VER, P21
   MCDOWELL CE, 1989, COMPUT SURV, V21, P593, DOI 10.1145/76894.76897
   MCMILLAN M, 1992, THESIS CARNEGIEMELLO
   Milner R., 1989, Communication and concurrency
   Naumovich G., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P399, DOI 10.1109/ICSE.1999.841030
   NYGARD M, 2000, JAVAWORLD J      MAY
   PAIK EH, 1997, P 1997 C PAR DISTR S
   PARK D, 2000, P 15 INT C AUT SOFTW
   Savage S, 1997, ACM T COMPUT SYST, V15, P391, DOI 10.1145/269005.266641
   Szyperski C., 2002, COMPONENT SOFTWARE, V2nd
   SZYPERSKI C, 1997, WORKSH COMPONENT ORI
   TAI KC, 1991, IEEE T SOFTWARE ENG, V17, P45, DOI 10.1109/32.67578
   TAYLOR RN, 1992, IEEE T SOFTWARE ENG, V18, P206, DOI 10.1109/32.126769
   TAYLOR RN, 1983, COMMUN ACM, V26, P362, DOI 10.1145/69586.69587
   YOUNG M, 1988, IEEE T SOFTWARE ENG, V14, P1499, DOI 10.1109/32.6195
   P 15 INT C AUT SOFTW
NR 58
TC 28
Z9 35
U1 0
U2 2
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUN
PY 2003
VL 29
IS 6
BP 555
EP 566
DI 10.1109/TSE.2003.1205182
PG 12
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 685XV
UT WOS:000183290400006
DA 2024-07-18
ER

PT J
AU Stewart, DB
   Arora, G
AF Stewart, DB
   Arora, G
TI A tool for analyzing and fine tuning the real-time properties of an
   embedded system
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE real-time systems theory; operating systems; graphical user interface;
   simulation; aperiodic servers; periodic threads; priority; deadline;
   timing error; logic analyzer; profiling; performance monitors;
   in-circuit emulator
AB This paper describes a computer-aided software engineering. (CASE) tool that helps designers analyze and fine-tune the timing properties. of their embedded real-time software. Existing CASE tools focus on the software Specification and design of embedded systems. However, they provide little, if any, support after the software has been implemented. Even if the developer used a CASE tool to design their system, their system most likely does not meet the specifications on the first try. This paper includes guidelines for implementing analyzable code, profiling a,real-time system, filtering and extracting measured data, analyzing the data, and interactively predicting the effect of changes to the real-time system. The tool is a necessary first step towards automating the debugging and fine tuning of an embedded system's temporal properties.
C1 EVP CTO Embedded Res Solut, LLC, Annapolis, MD 21401 USA.
   Hughes Network Syst, Germantown, MD 20876 USA.
RP Stewart, DB (corresponding author), EVP CTO Embedded Res Solut, LLC, 201 Def Hwy,Ste 202, Annapolis, MD 21401 USA.
EM dstewart@embedded-zone.com; garora@hns.com
CR [Anonymous], J REAL TIME SYSTEMS
   Calvez JP, 1998, DES AUTOM EMBED SYST, V3, P5, DOI 10.1023/A:1008874328893
   CALVEZ JP, 1993, MICROPROC MICROPROG, V38, P213, DOI 10.1016/0165-6074(93)90146-C
   HUMPHREY M, 1996, P IEEE REAL TIM TECH
   JEFFAY K, 1991, PROCEEDING : TWELFTH REAL-TIME SYSTEMS SYMPOSIUM, P129, DOI 10.1109/REAL.1991.160366
   JEFFAY K, 1993, REAL-TIME SYSTEMS SYMPOSIUM: PROCEEDINGS, P212, DOI 10.1109/REAL.1993.393497
   KATCHER D, 1994, THESIS CARNEGIE MELL
   KATCHER D, 1991, P 1991 WORKSH ARCH A
   KATCHER DI, 1993, IEEE T SOFTWARE ENG, V19
   KETTLER KA, 1995, P REAL TIM TECHN APP
   Lang J, 1998, ACM T PROGR LANG SYS, V20, P274, DOI 10.1145/276393.276395
   LANG J, 1997, THESIS U MARYLANG
   Lehoczky J., 1989, Proceedings. Real Time Systems Symposium (Cat. No.89CH2803-5), P166, DOI 10.1109/REAL.1989.63567
   LIU CL, 1973, J ACM, V20, P46, DOI 10.1145/321738.321743
   LIU JWS, 1993, REAL-TIME SYSTEMS SYMPOSIUM: PROCEEDINGS, P184, DOI 10.1109/REAL.1993.393502
   O'Reilly S., 1998, Embedded Systems Programming, V11, P84
   Stankovic JA, 1996, ACM COMPUT SURV, V28, P751, DOI 10.1145/242223.242291
   STEWARD DB, 1997, COMM ACM, V40
   Stewart DB, 2000, EMBED SYST PROGRAM, V13, P100
   STEWART DB, 1992, IEEE T SYST MAN CYB, V22, P1282, DOI 10.1109/21.199456
   Stewart DB, 1997, IEEE T SOFTWARE ENG, V23, P759, DOI 10.1109/32.637390
   STEWART DB, 1996, P IEEE HIGH ASS SYST
   STEWART DB, 1996, P IEEE WORKSH HIGH A
   STEWART DB, 1994, THESIS CARNEGIE MELL
   STEWART DB, 2001, P EMB SYST C APR
   TOKUDA H, 1988, P 9 IEEE REAL TIM SY
   Wolf LC, 1996, SOFTWARE PRACT EXPER, V26, P375, DOI 10.1002/(SICI)1097-024X(199604)26:4<375::AID-SPE16>3.0.CO;2-P
NR 27
TC 14
Z9 14
U1 0
U2 4
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD APR
PY 2003
VL 29
IS 4
BP 311
EP 326
DI 10.1109/TSE.2003.1191796
PG 16
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 664PT
UT WOS:000182070000003
DA 2024-07-18
ER

PT J
AU Uchitel, S
   Kramer, J
   Magee, J
AF Uchitel, S
   Kramer, J
   Magee, J
TI Synthesis of behavioral models from scenarios
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article; Proceedings Paper
CT 23rd International Conference on Software Engineering (ICSE 2001)
CY MAY 12-19, 2001
CL TORONTO, CANADA
SP IEEE Comp Soc, IEEE Comp Soc, Tech Council Software Engn, Assoc Comp Machinery, ACM SIGSOFT Special Interest Grp Software Engn, ACM SIGSOFT Special Interest Grp Programming Languages, ACD Syst, Alberta Software Engn Res Consortium, Avaya Commun, Bell Canada, Canada Natl Res Council Canada, Cisco Syst, Commun & Informat Technol Ontario, IBM Toronto Lab, Alberta Informat Circle Res Excellence, MacDonald Dettwiler, Microsoft Res, Nokia, Rational Software, Software Product Ctr Inc, Sun Microsyst
DE requirements specification; scenario-based specification; Message
   Sequence Charts; sequence chart combination; requirements analysis
ID SUPPORT
AB Scenario-based specifications such as Message Sequence Charts (MSCs) are useful as part of a requirements specification. A scenario. is a partial story, describing how system components, the environment, and users work concurrently and interact in order to provide system level functionality. Scenarios need to be combined to provide a more complete description of system behavior. Consequently, scenario synthesis is central to the effective use of scenario descriptions. How should a set of scenarios be interpreted? How do they relate to one another? What is the underlying semantics? What assumptions are made when synthesizing behavior models from multiple scenarios? In this paper, we present an approach to scenario synthesis based on a clear sound semantics, which can support and integrate many of the existing approaches to scenario synthesis. The contributions of the paper are threefold. We first define an MSC language with sound abstract semantics in terms of labeled transition systems and parallel composition. The language integrates existing approaches based on scenario composition by using high-level MSCs (hMSCs) and those based on state identification by introducing explicit component state labeling. This combination allows stakeholders to break up scenario specifications into manageable parts and reuse scenarios using hMCSs; it also allows them to introduce additional domain-specific information and general assumptions explicitly into the scenario specification using state labels. Second, we provide a sound synthesis algorithm which translates scenarios into a behavioral specification in the form of Finite Sequential Processes. This specification can be analyzed with the Labeled Transition System Analyzer using model checking and animation. Finally, we demonstrate how many of the assumptions embedded in existing synthesis approaches can be made explicit and modeled in our approach. Thus, we provide, the. basis for a common approach to scenario-based specification, synthesis, and analysis.
C1 Univ London Imperial Coll Sci Technol & Med, Dept Comp, London SW7 2BZ, England.
C3 Imperial College London
RP Univ London Imperial Coll Sci Technol & Med, Dept Comp, 180 Queens Gate, London SW7 2BZ, England.
EM su2@doc.ic.ac.uk; jk@doc.ic.ac.uk; jnm@doc.ic.ac.uk
OI Uchitel, Sebastian/0000-0001-9352-1478
CR Alur R., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, P304, DOI 10.1109/ICSE.2000.870421
   Andolfi F., 2000, Proceedings Second International Workshop on Software and Performance. WOSP2000, P47, DOI 10.1145/350391.350404
   [Anonymous], 1996, KVINNEFORSKNING
   [Anonymous], 1995, Scenario-based design: Envisioning work and technology in system development
   [Anonymous], P FORM BESCHR VERT S
   BENABDHALLAH H, 1998, P 4 INT C TOOLS ALG, P118
   Biermann A. W., 1976, IEEE Transactions on Software Engineering, VSE-2, P141, DOI 10.1109/TSE.1976.233812
   BORDELEAU F, 1999, THESIS CARLETON U OT
   Buhr RJA, 1998, IEEE T SOFTWARE ENG, V24, P1131, DOI 10.1109/32.738343
   Clarke EM, 1996, ACM COMPUT SURV, V28, P626, DOI 10.1145/242223.242257
   ENGELS A, 1999, P 9 SDL FOR, P105
   GLINZ M, 2002, P ICSE 2002 WORKSH S
   Gomaa H, 2001, PROC INT CONF SOFTW, P737
   HAREL D, 1987, SCI COMPUT PROGRAM, V8, P231, DOI 10.1016/0167-6423(87)90035-9
   Harel D, 2001, COMPUTER, V34, P53, DOI 10.1109/2.895118
   HAREL D, 1999, P 3 IFIP INT C FORM, P293
   Harmon Paul., 1998, UNDERSTANDING UML DE
   HAUGEN O, 2001, P 10 INT SDL FOR, P38
   HEYMER S, 1998, P SAM 98 1 WORKSH SD
   HEYMER S, 2000, P 2 WOKRSH SDL MSC S
   Holzmann GJ, 1997, BELL LABS TECH J, V2, P86, DOI 10.1002/bltj.2034
   ICHIKAWA H, 1991, IEEE T COMPUT, V40, P553, DOI 10.1109/12.88473
   Jacobson Ivar., 1999, AW OBJ TECHNOL S
   KLOSE J, 2001, P 7 INT C TOOLS ALG, P512
   KOSIUCZENKO P, 2000, P 5 WORLD C INT DES, P23
   Koskimies K, 1998, IEEE SOFTWARE, V15, P87, DOI 10.1109/52.646888
   Kruger I., 1999, Distributed and Parallel Embedded Systems. IFIP WG10.3/WG10.5 International Workshop on Distributed and Parallel Embedded Systems (DIPES'98), P61
   Ladkin P. B., 1995, Formal Aspects of Computing, V7, P473, DOI 10.1007/BF01211629
   Leue S, 1998, 13TH IEEE INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P192, DOI 10.1109/ASE.1998.732635
   MAGEE J, 1999, CONCURRENCY STAT MOD
   Mäkinen E, 2001, PROC INT CONF SOFTW, P15, DOI 10.1109/ICSE.2001.919077
   Milner R., 1989, Communication and concurrency
   MUSCHOLL A, 2000, P SAM 00 2 WORKSH SD, P108
   MUSCHOLL A, 1998, P 1 INT C FDN SOFTW, P226
   OMMERING RV, 2000, EXAMPLES HORIZONTAL
   QUATRANI T, 1998, VISUAL MODELING RATI
   RENIERS M, 1999, THESIS EINDHOVEN U T
   RUDOLPH E, 1996, P IFIP TC6 WG6 1 INT, P1629
   Rumbaugh J., 1991, OBJECT ORIENTED MODE
   Shull E, 2001, PROC INT CONF SOFTW, P726
   Some S., 1995, Proceedings 1995 Asia Pacific Software Engineering Conference, P48, DOI 10.1109/APSEC.1995.496953
   Texel P.P., 1997, USE CASES COMBINED B
   TSIOLAKIS A, 2001, ELECT NOTES THEORETI, V50
   UCHITEL S, 2000, MSC FSP SYNTHESIZER
   UCHITEL S, 2002, P 10 ACM SIGSOFT S F
   UCHITEL S, 2001, P JOINT 8 EUR SOFTW, P74
   van Lamsweerde A, 1998, IEEE T SOFTWARE ENG, V24, P1089, DOI 10.1109/32.738341
   WAKAHARA Y, 1989, IEEE SOFTWARE, V6, P38, DOI 10.1109/52.23128
   Whittle J., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, P314, DOI 10.1109/ICSE.2000.870422
   ZISMAN MD, 1978, PATTERN DIRECTED INF, P53
NR 50
TC 144
Z9 166
U1 1
U2 7
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD FEB
PY 2003
VL 29
IS 2
BP 99
EP 115
DI 10.1109/TSE.2003.1178048
PG 17
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Engineering
GA 644EB
UT WOS:000180904000002
DA 2024-07-18
ER

PT J
AU Li, ZX
   Lu, SQ
   Zhang, R
   Zhao, ZM
   Liang, RJ
   Xue, R
   Li, WH
   Zhang, F
   Gao, S
AF Li, Zhaoxuan
   Lu, Siqi
   Zhang, Rui
   Zhao, Ziming
   Liang, Rujin
   Xue, Rui
   Li, Wenhao
   Zhang, Fan
   Gao, Sheng
TI VulHunter: Hunting Vulnerable Smart Contracts at EVM Bytecode-Level via
   Multiple Instance Learning
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Source coding; Smart contracts; Codes; Pattern matching; Testing;
   Monitoring; Maintenance engineering; Blockchain; smart contract;
   security analysis; multiple instance learning; symbolic execution
AB With the economic development of Ethereum, the frequent security incidents involving smart contracts running on this platform have caused billions of dollars in losses. Consequently, there is a pressing need to identify the vulnerabilities in contracts, while the state-of-the-art (SOTA) detection methods have been limited in this regard as they cannot overcome three challenges at the same time. (i) Meet the requirements of detecting the source code, bytecode, and opcode of contracts simultaneously; (ii) reduce the reliance on manual pre-defined rules/patterns and expert involvement; (iii) assist contract developers in completing the contract lifecycle more safely, e.g., vulnerability repair and abnormal monitoring. With the development of machine learning (ML), using it to detect the contract runtime execution sequences (called instances) has made it possible to address these challenges. However, the lack of datasets with fine-grained sequence labels poses a significant obstacle, given the unreadability of bytecode/opcode. To this end, we propose a method named VulHunter that extracts the instances by traversing the Control Flow Graph built from contract opcodes. Based on the hybrid attention and multi-instance learning mechanisms, VulHunter reasons the instance labels and designs an optional classifier to automatically capture the subtle features of both normal and defective contracts, thereby identifying the vulnerable instances. Then, it combines the symbolic execution to construct and solve symbolic constraints to validate their feasibility. Finally, we implement a prototype of VulHunter with 15K lines of code and compare it with 9 SOTA methods on five open source datasets including 52,042 source codes and 184,289 bytecodes. The results indicate that VulHunter can detect contract vulnerabilities more accurately (90.04% accuracy and 85.60% F1 score), efficiently (only 4.4 seconds per contract), and robustly (0% analysis failure rate) than SOTA methods. Also, it can focus on specific metrics such as precision and recall by employing different baseline models and hyperparameters to meet the various user requirements, e.g., vulnerability discovery and misreport mitigation. More importantly, compared with the previous ML-based arts, it can not only provide classification results, defective contract source code statements, key opcode fragments, and vulnerable execution paths, but also eliminate misreports and facilitate more operations such as vulnerability repair and attack simulation during the contract lifecycle.
C1 [Li, Zhaoxuan; Zhang, Rui; Xue, Rui; Li, Wenhao] Chinese Acad Sci, Inst Informat Engn, StateKey Lab Informat Secur, Beijing 100093, Peoples R China.
   [Li, Zhaoxuan; Zhang, Rui; Xue, Rui; Li, Wenhao] Univ Chinese Acad Sci, Sch Cyber Secur, Beijing 100049, Peoples R China.
   [Lu, Siqi; Liang, Rujin] Informat Engn Univ, Zhengzhou 450001, Peoples R China.
   [Lu, Siqi; Liang, Rujin] Henan Key Lab Network Cryptog Technol, Zhengzhou 450001, Peoples R China.
   [Zhao, Ziming] Zhejiang Univ, Coll Comp Sci & Technol, Hangzhou 310027, Peoples R China.
   [Zhang, Fan] ZJU Hangzhou Global Sci & Technol Innovat Ctr, Hangzhou 311200, Peoples R China.
   [Zhang, Fan] Key Lab Blockchain & Cyberspace Governance Zhejian, Hangzhou 310027, Peoples R China.
   [Zhang, Fan] Zhejiang Univ, Jiaxing Res Inst, Jiaxing 314000, Peoples R China.
   [Gao, Sheng] Cent Univ Finance & Econ, Sch Informat, Beijing 100081, Peoples R China.
C3 Chinese Academy of Sciences; Chinese Academy of Sciences; University of
   Chinese Academy of Sciences, CAS; PLA Information Engineering
   University; Zhejiang University; Zhejiang University; Central University
   of Finance & Economics
RP Zhang, R (corresponding author), Chinese Acad Sci, Inst Informat Engn, StateKey Lab Informat Secur, Beijing 100093, Peoples R China.; Zhang, R (corresponding author), Univ Chinese Acad Sci, Sch Cyber Secur, Beijing 100049, Peoples R China.
EM lizhaoxuan@iie.ac.cn; 080lusiqi@sina.com; zhangrui@iie.ac.cn;
   zhaoziming@zju.edu.cn; coderlrj@163.com; xuerui@iie.ac.cn;
   liwenhao@iie.ac.cn; fanzhang@zju.edu.cn; sgao@cufe.edu.cn
RI Gao, Sheng/ISS-8753-2023
OI Gao, Sheng/0000-0001-8118-411X; Zhao, Ziming/0000-0003-1455-4330; Siqi,
   Lu/0000-0002-8593-9636; Zhang, Rui/0000-0003-0002-5593; Li,
   Wenhao/0000-0003-2268-7416; Li, Zhaoxuan/0000-0002-2195-0799
FU National Key R&D Program of China [2021YFB2700603]; National Natural
   Science Foundation of China [62172405, 62072487, 62227805, 62072398];
   Major Public Welfare Projects Foundation of Henan [201300210200];
   Beijing Natural Science Foundation [M21036]; Zhejiang Key RD Plan
   [2021C01116]; Leading Innovative and Entrepreneur Team Introduction
   Program of Zhejiang [2018R01005]; Zhejiang Provincial Natural Science
   Foundation of China [LD22F020002]
FX This work was supported in part by the National Key R & D Program of
   China under Grant 2021YFB2700603;in part by the National Natural Science
   Foundation of China under Grants 62172405, 62072487, 62227805, and
   62072398; in part by the Major Public Welfare Projects Foundation of
   Henan under Grant 201300210200; in part by the Beijing Natural Science
   Foundation under Grant M21036; in part by the Zhejiang Key R & D Plan
   under Grant 2021C01116; in part by the Leading Innovative and
   Entrepreneur Team Introduction Program of Zhejiang under Grant
   2018R01005; and in part by the Zhejiang Provincial Natural Science
   Foundation of China under Grant LD22F020002. Recommended for acceptance
   by T. Menzies.
CR [Anonymous], Ethereum/the solidity programming language
   [Anonymous], Optim
   [Anonymous], Tuning parameters
   [Anonymous], Crossentropyloss
   [Anonymous], Solidity v0.5.0 breaking changes
   [Anonymous], 2022, ethereum/go-ethereum
   [Anonymous], Contracts with verified source codes only
   [Anonymous], 2008, P OSDI
   [Anonymous], Ethereum/Solc-js
   Badertscher C, 2017, LECT NOTES COMPUT SC, V10401, P324, DOI 10.1007/978-3-319-63688-7_11
   Barrett Clark, 2011, Computer Aided Verification. Proceedings 23rd International Conference, CAV 2011, P171, DOI 10.1007/978-3-642-22110-1_14
   Barrett C.W., 2018, Handbook of Model Checking, P305, DOI DOI 10.1007/978-3-319-10575-8_11
   Bhargavan K, 2016, PROCEEDINGS OF THE 2016 ACM WORKSHOP ON PROGRAMMING LANGUAGES AND ANALYSIS FOR SECURITY (PLAS'16), P91, DOI 10.1145/2993600.2993611
   Bose P, 2022, P IEEE S SECUR PRIV, P161, DOI [10.1109/SP46214.2022.00072, 10.1109/SP46214.2022.9833721]
   C. Software, Security analysis tool for EVM bytecode
   Chen JC, 2021, IEEE T SOFTWARE ENG, V48, P2189, DOI 10.1109/TSE.2021.3054928
   Chen JC, 2022, IEEE T SOFTWARE ENG, V48, P327, DOI 10.1109/TSE.2020.2989002
   Chen T, 2019, PROCEEDINGS OF THE 2019 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY (CCS'19), P1503, DOI 10.1145/3319535.3345664
   Choi J, 2021, 2021 36TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING ASE 2021, P227, DOI 10.1109/ASE51524.2021.9678888
   Coblenz M, 2017, PROC IEEE ACM INT C, P97, DOI 10.1109/ICSE-C.2017.150
   Contro F, 2021, INT C PROGRAM COMPRE, P127, DOI 10.1109/ICPC52881.2021.00021
   de Moura L, 2008, LECT NOTES COMPUT SC, V4963, P337, DOI 10.1007/978-3-540-78800-3_24
   Durieux T, 2020, PROC INT CONF SOFTW, P530, DOI 10.1145/3377811.3380364
   Dutertre B, 2014, LECT NOTES COMPUT SC, V8559, P737, DOI 10.1007/978-3-319-08867-9_49
   E. Z. SRI Lab, Securify v2.0
   F. O. Source, Captum: Model interpretability for pytorch
   Feist J, 2019, 2019 IEEE/ACM 2ND INTERNATIONAL WORKSHOP ON EMERGING TRENDS IN SOFTWARE ENGINEERING FOR BLOCKCHAIN (WETSEB 2019), P8, DOI 10.1109/WETSEB.2019.00008
   Frank J, 2020, PROCEEDINGS OF THE 29TH USENIX SECURITY SYMPOSIUM, P2757
   Fu C., 2023, P 30 NDSS
   Fu ZY, 2011, IEEE T PATTERN ANAL, V33, P958, DOI 10.1109/TPAMI.2010.155
   Gao ZP, 2019, PROC IEEE INT CONF S, P394, DOI 10.1109/ICSME.2019.00067
   Grieco Gustavo, 2020, ISSTA '20: Proceedings of the 29th ACM SIGSOFT International Symposium on Software Testing and Analysis, P557, DOI 10.1145/3395363.3404366
   Grishchenko I, 2018, LECT NOTES COMPUT SC, V10804, P243, DOI 10.1007/978-3-319-89722-6_10
   Hara K, 2021, IEEE I C SQRS-C, P652, DOI [10.1109/QRS-C55045.2021.00099, 10.1109/QRS-055045.2021.00099]
   He JX, 2019, PROCEEDINGS OF THE 2019 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY (CCS'19), P531, DOI 10.1145/3319535.3363230
   He NY, 2021, PROCEEDINGS OF THE 30TH USENIX SECURITY SYMPOSIUM, P1271
   Hildenbrandt E, 2018, P IEEE COMPUT SECUR, P204, DOI 10.1109/CSF.2018.00022
   HORNIK K, 1991, NEURAL NETWORKS, V4, P251, DOI 10.1016/0893-6080(91)90009-T
   Huang JJ, 2021, IEEE T INF FOREN SEC, V16, P2144, DOI 10.1109/TIFS.2021.3050051
   Ilse M, 2018, PR MACH LEARN RES, V80
   Jiang B, 2018, IEEE INT CONF AUTOM, P259, DOI 10.1145/3238147.3238177
   Jiao J, 2020, P IEEE S SECUR PRIV, P1695, DOI 10.1109/SP40000.2020.00066
   Kalra S, 2018, 25TH ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2018), DOI 10.14722/ndss.2018.23082
   Krupp J, 2018, PROCEEDINGS OF THE 27TH USENIX SECURITY SYMPOSIUM, P1317
   Li ZX, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-022-10218-2
   Liu H, 2018, IEEE INT CONF AUTOM, P814, DOI 10.1145/3238147.3240728
   Liu Z., 2021, P 30 INT JOINT C ART, P2751
   Liu ZG, 2023, IEEE T KNOWL DATA EN, V35, P1296, DOI 10.1109/TKDE.2021.3095196
   Lu N, 2021, SOFTWARE PRACT EXPER, V51, P2065, DOI 10.1002/spe.2745
   Luu L, 2016, CCS'16: PROCEEDINGS OF THE 2016 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P254, DOI 10.1145/2976749.2978309
   Mallat S, 2016, PHILOS T R SOC A, V374, DOI 10.1098/rsta.2015.0203
   Mengnan R., Oscillo 1.0.0
   Mossberg M, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P1186, DOI 10.1109/ASE.2019.00133
   Nguyen TD, 2020, PROC INT CONF SOFTW, P778, DOI 10.1145/3377811.3380334
   Nikolic I, 2018, 34TH ANNUAL COMPUTER SECURITY APPLICATIONS CONFERENCE (ACSAC 2018), P653, DOI 10.1145/3274694.3274743
   Palikareva Hristina, 2013, Computer Aided Verification. 25th International Conference, CAV 2013. Proceedings. LNCS 8044, P53, DOI 10.1007/978-3-642-39799-8_3
   Park D, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P912, DOI 10.1145/3236024.3264591
   Peng Ouyang, 2017, 2017 54th ACM/EDAC/IEEE Design Automation Conference (DAC), DOI 10.1145/3061639.3062187
   Perez D, 2021, PROCEEDINGS OF THE 30TH USENIX SECURITY SYMPOSIUM, P1325
   Permenev A, 2020, P IEEE S SECUR PRIV, P1661, DOI 10.1109/SP40000.2020.00024
   Rodler M., 2019, P 26 NDSS, P1
   Rodler M, 2021, PROCEEDINGS OF THE 30TH USENIX SECURITY SYMPOSIUM, P1289
   Sen K., 2005, P 10 EUR SOFTW ENG C, V30, P263, DOI DOI 10.1145/1081706.1081750
   Shi XS, 2020, AAAI CONF ARTIF INTE, V34, P5742
   Dinh TTA, 2017, SIGMOD'17: PROCEEDINGS OF THE 2017 ACM INTERNATIONAL CONFERENCE ON MANAGEMENT OF DATA, P1085, DOI 10.1145/3035918.3064033
   Tikhomirov S, 2018, 2018 IEEE/ACM 1ST INTERNATIONAL WORKSHOP ON EMERGING TRENDS IN SOFTWARE ENGINEERING FOR BLOCKCHAIN (WETSEB), P9, DOI 10.1145/3194113.3194115
   Torres CF, 2019, PROCEEDINGS OF THE 28TH USENIX SECURITY SYMPOSIUM, P1591
   Torres CF, 2018, 34TH ANNUAL COMPUTER SECURITY APPLICATIONS CONFERENCE (ACSAC 2018), P664, DOI 10.1145/3274694.3274737
   Tsankov P, 2018, PROCEEDINGS OF THE 2018 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY (CCS'18), P67, DOI 10.1145/3243734.3243780
   V. Team, Vyper documentation
   Wang W, 2021, IEEE T NETW SCI ENG, V8, P1133, DOI 10.1109/TNSE.2020.2968505
   Wang XM, 2020, IEEE T SERV COMPUT, V13, P314, DOI 10.1109/TSC.2019.2949561
   Wood G., 2014, Ethereum project yellow paper, V151, P1
   Wu HJ, 2021, PROC INT SYMP SOFTW, P378, DOI 10.1109/ISSRE52982.2021.00047
   Yu X., 2021, INT JOINT C NEUR NET, P1
   Zhuang Y, 2020, PROCEEDINGS OF THE TWENTY-NINTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P3283
NR 76
TC 0
Z9 0
U1 7
U2 9
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD NOV
PY 2023
VL 49
IS 11
BP 4886
EP 4916
DI 10.1109/TSE.2023.3317209
PG 31
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA Z3ZN2
UT WOS:001111494200001
OA hybrid
DA 2024-07-18
ER

PT J
AU Alhazami, EA
   Sheneamer, AM
AF Alhazami, Essa A.
   Sheneamer, Abdullah M.
TI Graph-of-Code: Semantic Clone Detection Using Graph Fingerprints
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Code clones; software clones; semantic clones; graph-of-code; graph
   properties
ID ACCURATE; PASTE
AB The code clone detection issue has been researched using a number of explicit factors based on the tokens and contents and found effective results. However, exposing code contents may be an impractical option because of privacy and security factors. Moreover, the lack of scalability of past methods is an important challenge. The code flow states can be inferred by code structure and implicitly represented using empirical graphs. The assumption is that modelling of the code clone detection problem can be achieved without the content of the codes being revealed. Here, a Graph-of-Code concept for the code clone detection problem is introduced, which represents codes into graphs. While Graph-of-Code provides structural properties and quantification of its characteristics, it can exclude code contents or tokens to identify the clone type. The aim is to evaluate the impact of graph-of-code structural properties on the performance of code clone detection. This work employs a feature extraction-based approach for unlabelled graphs. The approach generates a "Graph Fingerprint" which represents different topological feature levels. The results of code clone detection indicate that code structure has a significant role in detecting clone types. We found different GoC-models outperform others. The models achieve between 96% to 99% in detecting code clones based on recall, precision, and F1-Score. The GoC approach is capable in detecting code clones with scalable dataset and with preserving codes privacy.
C1 [Alhazami, Essa A.; Sheneamer, Abdullah M.] Jazan Univ, Fac Comp Sci, Jazan 45142, Saudi Arabia.
C3 Jazan University
RP Sheneamer, AM (corresponding author), Jazan Univ, Fac Comp Sci, Jazan 45142, Saudi Arabia.
EM esalhazmi@jazanu.edu.sa; asheneamer@jazanu.edu.sa
CR Akoglu L, 2015, DATA MIN KNOWL DISC, V29, P626, DOI 10.1007/s10618-014-0365-y
   [Anonymous], 1993, Computing Science and Statistics
   [Anonymous], 2016, P 12 INT WORKSH MIN
   Antoniol G, 2002, INFORM SOFTWARE TECH, V44, P755, DOI 10.1016/S0950-5849(02)00123-4
   BAKER BS, 1995, SECOND WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P86, DOI 10.1109/WCRE.1995.514697
   Basit HA, 2009, IEEE T SOFTWARE ENG, V35, P497, DOI 10.1109/TSE.2009.16
   Baxter ID, 1998, PROC IEEE INT CONF S, P368, DOI 10.1109/ICSM.1998.738528
   Bellon S, 2007, IEEE T SOFTWARE ENG, V33, P577, DOI 10.1109/TSE.2007.70725
   Berlingerio M, 2012, Arxiv, DOI arXiv:1209.2684
   Berlingerio M, 2013, 2013 IEEE/ACM INTERNATIONAL CONFERENCE ON ADVANCES IN SOCIAL NETWORKS ANALYSIS AND MINING (ASONAM), P1439
   Bonacich P, 2007, SOC NETWORKS, V29, P555, DOI 10.1016/j.socnet.2007.04.002
   Chen K, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P175, DOI 10.1145/2568225.2568286
   DAVEY N, 1995, INT J APPL SOFTW TEC
   Ducasse S., 1999, Proceedings IEEE International Conference on Software Maintenance - 1999 (ICSM'99). `Software Maintenance for Business Change' (Cat. No.99CB36360), P109, DOI 10.1109/ICSM.1999.792593
   Fire M., 2011, Proceedings of the 2011 IEEE Third International Conference on Privacy, Security, Risk and Trust and IEEE Third International Conference on Social Computing (PASSAT/SocialCom 2011), P73, DOI 10.1109/PASSAT/SocialCom.2011.20
   Fortunato S, 2016, PHYS REP, V659, P1, DOI 10.1016/j.physrep.2016.09.002
   Gallagher B., 2006, AAAI FS, V6, P45
   Gao ZP, 2021, IEEE T SOFTWARE ENG, V47, P2874, DOI 10.1109/TSE.2020.2971482
   Ghofrani J, 2017, 2017 IEEE 4TH INTERNATIONAL CONFERENCE ON KNOWLEDGE-BASED ENGINEERING AND INNOVATION (KBEI), P810, DOI 10.1109/KBEI.2017.8324908
   Göde N, 2009, EUR CON SFTWR MTNCE, P219, DOI 10.1109/CSMR.2009.20
   Henderson T. A. D., 2016, PROC 2 INT WORKSHOP, P47
   Higo Y., 2011, 2011 18th Working Conference on Reverse Engineering, P3, DOI 10.1109/WCRE.2011.11
   Higo Y, 2011, EUR CON SFTWR MTNCE, P75, DOI 10.1109/CSMR.2011.12
   Hotta K., 2014, ELECT COMMUN EASST, V63, P1
   Islam MR, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 3, P8, DOI 10.1109/SANER.2016.90
   Jadon S, 2016, 2016 IEEE INTERNATIONAL CONFERENCE ON COMPUTING, COMMUNICATION AND AUTOMATION (ICCCA), P299, DOI 10.1109/CCAA.2016.7813733
   Jiang LX, 2007, PROC INT CONF SOFTW, P96
   Johnson J. H., 1993, Proceedings CASCON '93, P171
   JOHNSON JH, 1994, INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE, PROCEEDINGS, P120, DOI 10.1109/ICSM.1994.336783
   Juergens E, 2009, PROC INT CONF SOFTW, P485, DOI 10.1109/ICSE.2009.5070547
   Kamiya T, 2002, IEEE T SOFTWARE ENG, V28, P654, DOI 10.1109/TSE.2002.1019480
   Keivanloo I., 2012, 2012 Proceedings of the 6th International Workshop on Software Clones (IWSC 2012), P36, DOI 10.1109/IWSC.2012.6227864
   Keivanloo I, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P201, DOI 10.1109/SANER.2015.7081830
   Kelly S. L., 2014, AST INDEXING NEAR CO
   Kim DK., 2019, INT J ELECT COMPUT E, V9, P3804, DOI 10.11591/ijece.v9i5.pp3804-3812
   Komondoor R, 2001, LECT NOTES COMPUT SC, V2126, P40
   Kontogiannis K, 1997, PROCEEDINGS OF THE FOURTH WORKING CONFERENCE ON REVERSE ENGINEERING, P44, DOI 10.1109/WCRE.1997.624575
   Koschke R, 2006, WORK CONF REVERSE EN, P253
   Krinke J, 2001, EIGHTH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P301, DOI 10.1109/WCRE.2001.957835
   Lee S., 2005, SDD: high performance code clone detection system for large scale source code, P140
   Li H, 2016, CONCURR COMP-PRACT E, V28, P1900, DOI 10.1002/cpe.3532
   Li LQ, 2017, PROC IEEE INT CONF S, P249, DOI 10.1109/ICSME.2017.46
   Li ZT, 2018, IEEE T CYBERNETICS, V48, P1963, DOI 10.1109/TCYB.2017.2720180
   Li ZM, 2006, IEEE T SOFTWARE ENG, V32, P176, DOI 10.1109/TSE.2006.28
   Liu Chao, 2006, Proc. 12th ACMSIGKDD Int'l Con. on Knowledge Discovery and Data Mining (KDD 06), P872, DOI DOI 10.1145/1150402.1150522
   Liu CL, 2014, IEEE T CYBERNETICS, V44, P2274, DOI 10.1109/TCYB.2014.2305974
   Marastoni N., 2018, Proceedings of the 1st international workshop on machine learning and software engineering in symbiosis, P26
   Mayrand J, 1996, INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE, PROCEEDINGS, P244, DOI 10.1109/ICSM.1996.565012
   Mercaldo F, 2020, J COMPUT VIROL HACKI, V16, P157, DOI 10.1007/s11416-019-00346-7
   Murakami H, 2013, CONF PROC INT SYMP C, P93, DOI 10.1109/ICPC.2013.6613837
   Page L., 1999, PAGERANK CITATION RA, DOI DOI 10.1109/IISWC.2012.6402911
   Patenaude JF, 1999, PROG COMPREHEN, P49, DOI 10.1109/WPC.1999.777743
   Peng X, 2017, IEEE T CYBERNETICS, V47, P1053, DOI 10.1109/TCYB.2016.2536752
   Raheja K., 2013, INT J ADV RES COMPUT, V3
   Rattan D, 2013, INFORM SOFTWARE TECH, V55, P1165, DOI 10.1016/j.infsof.2013.01.008
   Roy CK, 2008, INT C PROGRAM COMPRE, P172, DOI 10.1109/ICPC.2008.41
   Roy CK, 2009, SCI COMPUT PROGRAM, V74, P470, DOI 10.1016/j.scico.2009.02.007
   Roy J. R., 2007, QUEENS SCH COMPUTING, V541, P64
   Saini Neha, 2018, Procedia Computer Science, V132, P718, DOI 10.1016/j.procs.2018.05.080
   Saini V, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P354, DOI 10.1145/3236024.3236026
   Saini V, 2016, 2016 IEEE/ACM 38TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING COMPANION (ICSE-C), P597, DOI 10.1145/2889160.2889165
   Sajnani H, 2016, PROC INT CONF SOFTW, P1157, DOI 10.1145/2884781.2884877
   SHENEAMER A, 2016, INT J COMPUTER APPL, V137, P1, DOI DOI 10.5120/IJCA2016908896
   Sheneamer A, 2018, EXPERT SYST APPL, V97, P405, DOI 10.1016/j.eswa.2017.12.040
   Sheneamer A, 2016, 2016 15TH IEEE INTERNATIONAL CONFERENCE ON MACHINE LEARNING AND APPLICATIONS (ICMLA 2016), P1024, DOI [10.1109/ICMLA.2016.156, 10.1109/ICMLA.2016.0185]
   Sheneamer AM, 2021, EXPERT SYST APPL, V183, DOI 10.1016/j.eswa.2021.115364
   Svajlenko J, 2015, J SOFTW-EVOL PROC, V27, P430, DOI 10.1002/smr.1662
   Svajlenko J, 2014, PROC IEEE INT CONF S, P476, DOI 10.1109/ICSME.2014.77
   Svajlenko J, 2013, INT WORKS SOFTW CLON, P16, DOI 10.1109/IWSC.2013.6613037
   Ul Ain Q, 2019, IEEE ACCESS, V7, P86121, DOI 10.1109/ACCESS.2019.2918202
   Venkatraman S, 2019, J INF SECUR APPL, V47, P377, DOI 10.1016/j.jisa.2019.06.006
   Wang PC, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1066, DOI 10.1145/3180155.3180179
   Wang WH, 2020, PROCEEDINGS OF THE 2020 IEEE 27TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER '20), P261, DOI [10.1109/SANER48275.2020.9054857, 10.1109/saner48275.2020.9054857]
   Wang XY, 2014, IEEE T SOFTWARE ENG, V40, P773, DOI 10.1109/TSE.2014.2323972
   Wei HH, 2018, PROCEEDINGS OF THE TWENTY-SEVENTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P2840
   Wei HH, 2017, PROCEEDINGS OF THE TWENTY-SIXTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P3034
   Wen J, 2020, IEEE T CYBERNETICS, V50, P1418, DOI 10.1109/TCYB.2018.2884715
   White M, 2016, IEEE INT CONF AUTOM, P87, DOI 10.1145/2970276.2970326
   WUU Y, 1991, SOFTWARE PRACT EXPER, V21, P739, DOI 10.1002/spe.4380210706
   Yu H, 2019, INT C PROGRAM COMPRE, P70, DOI 10.1109/ICPC.2019.00021
   Yuan Y, 2012, IEEE INT CONF AUTOM, P286, DOI 10.1145/2351676.2351725
   Zhang H., 2021, IEEE ACCESS, V9, p48 157
   Zhang J, 2019, PROC INT CONF SOFTW, P783, DOI 10.1109/ICSE.2019.00086
   Zhao G, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P141, DOI 10.1145/3236024.3236068
   Zibran MF, 2011, CONF PROC INT SYMP C, P266, DOI 10.1109/ICPC.2011.45
   Zou Y, 2020, IEEE INT CONF AUTOM, P931, DOI 10.1145/3324884.3416541
NR 86
TC 3
Z9 3
U1 3
U2 10
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD AUG
PY 2023
VL 49
IS 8
BP 3972
EP 3988
DI 10.1109/TSE.2023.3276780
PG 17
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA P3WA9
UT WOS:001049968200002
DA 2024-07-18
ER

PT J
AU He, RZ
   He, H
   Zhang, YX
   Zhou, MH
AF He, Runzhi
   He, Hao
   Zhang, Yuxia
   Zhou, Minghui
TI Automating Dependency Updates in Practice: An Exploratory Study on
   GitHub Dependabot
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Dependabot; dependency management; mining software repositories;
   software engineering bot
ID SOFTWARE DEVELOPERS; EVOLUTION; SUPPORT; IMPACT
AB Dependency management bots automatically open pull requests to update software dependencies on behalf of developers. Early research shows that developers are suspicious of updates performed by dependency management bots and feel tired of overwhelming notifications from these bots. Despite this, dependency management bots are becoming increasingly popular. Such contrast motivates us to investigate Dependabot, currently the most visible bot on GitHub, to reveal the effectiveness and limitations of state-of-art dependency management bots. We use exploratory data analysis and a developer survey to evaluate the effectiveness of Dependabot in keeping dependencies up-to-date, interacting with developers, reducing update suspicion, and reducing notification fatigue. We obtain mixed findings. On the positive side, projects do reduce technical lag after Dependabot adoption and developers are highly receptive to its pull requests. On the negative side, its compatibility scores are too scarce to be effective in reducing update suspicion; developers tend to configure Dependabot toward reducing the number of notifications; and 11.3% of projects have deprecated Dependabot in favor of other alternatives. The survey confirms our findings and provides insights into the key missing features of Dependabot. Based on our findings, we derive and summarize the key characteristics of an ideal dependency management bot which can be grouped into four dimensions: configurability, autonomy, transparency, and self-adaptability.
C1 [He, Runzhi; He, Hao; Zhou, Minghui] Peking Univ, Sch Comp Sci, Beijing 100871, Peoples R China.
   [He, Runzhi; He, Hao; Zhou, Minghui] Minist Educ, Key Lab High Confidence Software Technol, Beijing 100816, Peoples R China.
   [Zhang, Yuxia] Beijing Inst Technol, Sch Comp Sci & Technol, Beijing 100811, Peoples R China.
C3 Peking University; Beijing Institute of Technology
RP Zhou, MH (corresponding author), Peking Univ, Sch Comp Sci, Beijing 100871, Peoples R China.
EM rzhe@pku.edu.cn; heh@pku.edu.cn; yuxiazh@bit.edu.cn; zhmh@pku.edu.cn
RI ; He, Hao/ACM-8588-2022
OI Zhou, Minghui/0000-0001-6324-3964; He, Hao/0000-0001-8311-6559
FU National Key Ramp;D Program of China [2018YFB1004201]; National Natural
   Science Foundation of China [61825201]
FX This work was supported in part by the National Key R & amp;D Program of
   China under Grant 2018YFB1004201 and in part by the National Natural
   Science Foundation of China under Grant 61825201.
CR Alfadel M, 2021, IEEE WORK CONF MIN S, P254, DOI 10.1109/MSR52588.2021.00037
   [Anonymous], 2012, P 20 ACM SIGSOFT S F
   Bavota G, 2015, EMPIR SOFTW ENG, V20, P1275, DOI 10.1007/s10664-014-9325-9
   Bogart C, 2021, ACM T SOFTW ENG METH, V30, DOI 10.1145/3447245
   Cassee N, 2020, PROCEEDINGS OF THE 2020 IEEE 27TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER '20), P423, DOI [10.1109/saner48275.2020.9054818, 10.1109/SANER48275.2020.9054818]
   Chow KS, 1996, INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE, PROCEEDINGS, P359, DOI 10.1109/ICSM.1996.565039
   Cogo FR, 2022, IEEE SOFTWARE, V39, P44, DOI 10.1109/MS.2022.3179484
   Cox J, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P109, DOI 10.1109/ICSE.2015.140
   Dagenais B, 2011, ACM T SOFTW ENG METH, V20, DOI 10.1145/2000799.2000805
   Decan A, 2019, EMPIR SOFTW ENG, V24, P381, DOI 10.1007/s10664-017-9589-y
   Decan A, 2018, PROC IEEE INT CONF S, P404, DOI 10.1109/ICSME.2018.00050
   Dey T, 2020, IEEE WORK CONF MIN S, P209, DOI 10.1145/3379597.3387478
   docs.github.com, US
   docs.renovatebot, US
   docs.renovatebot.com, US
   Erlenhov L, 2022, PEERJ COMPUT SCI, V8, DOI 10.7717/peerj-cs.849
   Erlenhov L, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P445, DOI 10.1145/3368089.3409680
   Cortés-Coy LF, 2014, IEEE INT WORK C SO, P275, DOI 10.1109/SCAM.2014.14
   Foo D, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P791, DOI 10.1145/3236024.3275535
   github.blog, US
   github.com, PULL REQ 1127 DAT BA
   github.com, About us
   github.com, ISS 1296 DEP DEP COR
   github.com, COMM B337B5F JUST HT
   github.com, COMM ISS 1973 DEP DE
   github.com, COMM ISS 1190 DEP DE
   Godulla A., GOOD BOT VS BAD BOT
   Goeminne M., 2011, JOINT PORCEEDINGS 1, P74
   Gonzalez-Barahona J. M., 2017, IFIP Advances in Information and Communication Technology, P182
   Gousios G, 2013, IEEE WORK CONF MIN S, P233, DOI 10.1109/MSR.2013.6624034
   greenkeeper.io, US
   Haryono SA, 2021, PROC IEEE INT CONF S, P584, DOI 10.1109/ICSME52107.2021.00061
   Haryono SA, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-021-10096-0
   He H, 2021, PROCEEDINGS OF THE 29TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '21), P478, DOI 10.1145/3468264.3468571
   Hejderup J, 2022, J SYST SOFTWARE, V183, DOI 10.1016/j.jss.2021.111097
   Henkel J, 2005, PROC INT CONF SOFTW, P274
   Hoan AN, 2010, ACM SIGPLAN NOTICES, V45, P302, DOI 10.1145/1932682.1869486
   Huang KF, 2021, 2021 36TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING ASE 2021, P266, DOI 10.1109/ASE51524.2021.9678905
   .indiaspend.com, About us
   Khandkar Shahedul Huq, 2009, Open coding
   Krippendorff K., 2018, CONTENT ANAL INTRO I
   Kula RG, 2018, EMPIR SOFTW ENG, V23, P384, DOI 10.1007/s10664-017-9521-5
   Lam P, 2020, PROCEEDINGS OF THE 2020 ACM SIGPLAN INTERNATIONAL SYMPOSIUM ON NEW IDEAS, NEW PARADIGMS, AND REFLECTIONS ON PROGRAMMING AND SOFTWARE (ONWARD! '20), P157, DOI 10.1145/3426428.3426922
   Likert R., 1932, Arch. Psychol., V22, P44, DOI DOI 10.4135/9781412961288.N454
   Mirhosseini S, 2017, IEEE INT CONF AUTOM, P84, DOI 10.1109/ASE.2017.8115621
   Moreno L, 2017, IEEE T SOFTWARE ENG, V43, P106, DOI 10.1109/TSE.2016.2591536
   Mostafa S, 2017, PROCEEDINGS OF THE 26TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA'17), P215, DOI 10.1145/3092703.3092721
   Munaiah N, 2017, EMPIR SOFTW ENG, V22, P3219, DOI 10.1007/s10664-017-9512-6
   Nielsen BB, 2021, PROC INT CONF SOFTW, P74, DOI 10.1109/ICSE43902.2021.00020
   Pashchenko I, 2020, CCS '20: PROCEEDINGS OF THE 2020 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P1513, DOI 10.1145/3372297.3417232
   Passonneau Rebecca., 2006, P INT C LANG RES EV
   Peng ZH, 2019, CCF T PERVAS COMPUT, V1, P190, DOI 10.1007/s42486-019-00013-2
   Poole D, 1998, Computational Intelligence
   Prion S, 2014, CLIN SIMUL NURS, V10, P535, DOI 10.1016/j.ecns.2014.07.005
   pyup.io, US
   Qualtrics.com, about us
   Raemaekers S, 2017, J SYST SOFTWARE, V129, P140, DOI 10.1016/j.jss.2016.04.008
   Romano J, 2006, ANN M FLOR ASS I RES, P1
   Rombaut B, 2023, ACM T SOFTW ENG METH, V32, DOI 10.1145/3522587
   Russell S., 2016, Artificial intelligence a modern approach
   Santhanam S, 2022, PEERJ COMPUT SCI, V8, DOI 10.7717/peerj-cs.866
   semver.org, US
   Shihab E, 2022, IEEE SOFTWARE, V39, P28, DOI 10.1109/MS.2022.3176864
   sonarsource.com, US
   Soto-Valero C, 2021, PROCEEDINGS OF THE 29TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '21), P1021, DOI 10.1145/3468264.3468589
   Stringer J, 2020, ASIA PAC SOFWR ENG, P228, DOI 10.1109/APSEC51365.2020.00031
   Sturgis P, 2014, SOCIOL METHOD RES, V43, P15, DOI 10.1177/0049124112452527
   Tan X, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P398, DOI 10.1145/3368089.3409746
   tools4dev.org, US
   Wessel Mairieli, 2021, Proceedings of the ACM on Human-Computer Interaction, V5, DOI 10.1145/3476042
   Wessel Mairieli, 2018, Proceedings of the ACM on Human-Computer Interaction, V2, DOI 10.1145/3274451
   Wessel M, 2022, PROC INT CONF SOFTW, P274, DOI 10.1145/3510003.3512765
   Winters Titus, 2020, Software Engineering at Google
   workers.cloudflare, US
   Wu JY, 2022, INT C PROGRAM COMPRE, P602, DOI 10.1145/3524610.3527919
   Wyrich M, 2021, 2021 IEEE/ACM THIRD INTERNATIONAL WORKSHOP ON BOTS IN SOFTWARE ENGINEERING (BOTSE 2021), P6, DOI 10.1109/BotSE52550.2021.00009
   Xing ZC, 2007, IEEE T SOFTWARE ENG, V33, P818, DOI 10.1109/TSE.2007.70747
   Zerouali A, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-020-09908-6
   Zerouali A, 2019, J SOFTW-EVOL PROC, V31, DOI 10.1002/smr.2157
   Zerouali A, 2018, LECT NOTES COMPUT SC, V10826, P95, DOI 10.1007/978-3-319-90421-4_6
   Zhang YX, 2021, IEEE T SOFTWARE ENG, V47, P2242, DOI 10.1109/TSE.2019.2946156
   Zhao YY, 2017, IEEE INT CONF AUTOM, P60, DOI 10.1109/ASE.2017.8115619
   Zimmermann M, 2019, PROCEEDINGS OF THE 28TH USENIX SECURITY SYMPOSIUM, P995
NR 83
TC 4
Z9 4
U1 2
U2 3
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD AUG
PY 2023
VL 49
IS 8
BP 4004
EP 4022
DI 10.1109/TSE.2023.3278129
PG 19
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA P3WA9
UT WOS:001049968200004
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Hou, QS
   Diao, WR
   Wang, YH
   Mao, CL
   Ying, LY
   Liu, S
   Liu, XF
   Li, YZ
   Guo, SQ
   Nie, MN
   Duan, HX
AF Hou, Qinsheng
   Diao, Wenrui
   Wang, Yanhao
   Mao, Chenglin
   Ying, Lingyun
   Liu, Song
   Liu, Xiaofeng
   Li, Yuanzhi
   Guo, Shanqing
   Nie, Meining
   Duan, Haixin
TI Can We Trust the Phone Vendors? Comprehensive Security Measurements on
   the Android Firmware Ecosystem
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Index Terms-Android firmware ecosystem; security measure-ments; security
   patches; pre-installed apps
AB Android is the most popular smartphone platform with over 85% market share. Its success is built on openness, and phone vendors can utilize the Android source code to make customized products with unique software/hardware features. On the other hand, the fragmentation and customization of Android also bring many security risks that have attracted the attention of researchers. Many efforts were put in to investigate the security of customized Android firmware. However, most of the previous works focus on designing efficient analysis tools or analyzing particular aspects of the firmware. There still lacks a panoramic view of Android firmware ecosystem security and the corresponding understandings based on large-scale firmware datasets. In this work, we made a large-scale comprehensive measurement of the Android firmware ecosystem security. Our study is based on 8,325 firmware images from 153 vendors and 813 Android-related CVEs, which is the largest Android firmware dataset ever used for security measurements. In particular, our study followed a series of research questions, covering vulnerabilities, patches, security updates, and pre-installed apps. To automate the analysis process, we designed a framework, AndScanner+, to complete firmware crawling, firmware parsing, patch analysis, and app analysis. Through massive data analysis and case explorations, several interesting findings are obtained. For example, the patch delay and missing issues are widespread in Android firmware images, say 31.4% and 5.6% of all images, respectively. The latest images of several phones still contain vulnerable pre-installed apps, and even the corresponding vulnerabilities have been publicly disclosed. In addition to data measurements, we also explore the causes behind these security threats through case studies and demonstrate that the discovered security threats can be converted into exploitable vulnerabilities. There are 46 new vulnerabilities found by AndScanner+, 36 of which have been assigned CVE/CNVD IDs. This study provides much new knowledge of the Android firmware ecosystem with a deep understanding of software engineering security practices.
C1 [Hou, Qinsheng; Diao, Wenrui; Liu, Xiaofeng; Guo, Shanqing] Shandong Univ, Sch Cyber Sci & Technol, Jinan 250100, Peoples R China.
   [Hou, Qinsheng; Diao, Wenrui; Liu, Xiaofeng; Guo, Shanqing] Shandong Univ, Minist Educ, Key Lab Cryptol Technol & Informat Secur, Jinan 250100, Peoples R China.
   [Hou, Qinsheng; Wang, Yanhao; Mao, Chenglin; Ying, Lingyun; Liu, Song; Li, Yuanzhi; Nie, Meining] QI ANXIN Technol Res Inst, Beijing 100088, Peoples R China.
   [Mao, Chenglin] Ocean Univ China, Qingdao 266005, Shandong, Peoples R China.
   [Liu, Song] Penn State Univ, State Coll, PA 16801 USA.
   [Duan, Haixin] Tsinghua Univ, Inst Network Sci & Cyberspace, Beijing 100190, Peoples R China.
C3 Shandong University; Shandong University; Ocean University of China;
   Pennsylvania Commonwealth System of Higher Education (PCSHE);
   Pennsylvania State University; Tsinghua University
RP Guo, SQ (corresponding author), Shandong Univ, Sch Cyber Sci & Technol, Jinan 250100, Peoples R China.; Guo, SQ (corresponding author), Shandong Univ, Minist Educ, Key Lab Cryptol Technol & Informat Secur, Jinan 250100, Peoples R China.; Ying, LY (corresponding author), QI ANXIN Technol Res Inst, Beijing 100088, Peoples R China.
EM houqinsheng@mail.sdu.edu.cn; diaowenrui@sdu.edu.cn;
   wangyanhao136@gmail.com; maochenglin2401@stu.ouc.edu.cn;
   yinglingyun@qianxin.com; songliu@psu.edu; liuxiaofeng609@gmail.com;
   liyuanzhi.asky@bytedance.com; guoshanqing@sdu.edu.cn;
   meiningnie@gmail.com; duanhx@tsinghua.edu.cn
RI li, yuanfang/KHV-1697-2024; Li, Yuanxiang/KCX-8706-2024; CHEN,
   BING/KHX-6659-2024
OI Hou, Qinsheng/0000-0002-1119-4766; Liu, Xiaofeng/0009-0007-6147-7119;
   Diao, Wenrui/0000-0003-0916-8806; Ying, Lingyun/0000-0001-7445-9103
FU National Natural Science Foundation of China [62002203, 92064008,
   61902148]; Shandong Provincial Natural Science Foundation [ZR2020MF055,
   ZR2021LZH007, ZR2020LZH002, ZR2020QF045]; Beijing Nova Program of
   Science and Technology [Z191100001119131]
FX & nbsp;This work was supported in part by the National Natural Science
   Foundation of China under Grants 62002203, 92064008, and 61902148, in
   part by Shandong Provincial Natural Science Foundation under Grants
   ZR2020MF055, ZR2021LZH007, ZR2020LZH002, and ZR2020QF045, and in part by
   Beijing Nova Program of Science and Technology under Grant
   Z191100001119131.
CR A. Developers, ANDR STOR US CAS BES
   Aafer Y, 2015, CCS'15: PROCEEDINGS OF THE 22ND ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P1248, DOI 10.1145/2810103.2813648
   Aafer Y, 2016, PROCEEDINGS OF THE 25TH USENIX SECURITY SYMPOSIUM, P1153
   Andre C., 2018, GMAIL ANDROID APP IN
   Android Dumps, US
   Android Police Team, ANDR SEC UPD TRACK M
   Anestisb, SIMG2IMG
   [Anonymous], RESOLVE INSECURE HOS
   [Anonymous], LIST SUPPORTED ANDRO
   [Anonymous], 2021, Smartphone market share
   [Anonymous], FIX APPS CONTAINING
   [Anonymous], COMPATIBILITY TEST S
   [Anonymous], STANDARD PARTITIONS
   [Anonymous], PLAY PROTECT CERTIFI
   [Anonymous], ANDROID ENTERPRISE S
   [Anonymous], Android security bulletins
   [Anonymous], Android compatibility test suite
   [Anonymous], SPLITUPDATED
   [Anonymous], PREP REL
   [Anonymous], OPPO A57
   [Anonymous], FULL OTA IM NEX PIX
   [Anonymous], CERTIFIED PARTNERS
   [Anonymous], ADDRESS WEBVIEW SSL
   [Anonymous], FACT IM NEX PIX DEV
   [Anonymous], ?About us"
   [Anonymous], ANDROGUARD
   [Anonymous], OPPO R9S
   [Anonymous], GOOGLE PLAY PROTECT
   [Anonymous], SUPPORTED DEVICES
   brotli, US
   Cimpanu C., 2020, ANDROID OEM PATCH RA
   CryptoGuardOSS, CRYPT
   CVE, About us
   CYXX, US
   developer.android.com, US
   Digital News Asia, DIGITAL NEWS ASIA
   Dumps A., FIRMWARE EXTRACTOR
   Egele M., 2013, P 2013 ACM SIGSAC C, P73
   Elgharabawy M, 2022, 2022 IEEE 7TH EUROPEAN SYMPOSIUM ON SECURITY AND PRIVACY (EUROS&P 2022), P572, DOI 10.1109/EuroSP53844.2022.00042
   Elsabagh M, 2020, PROCEEDINGS OF THE 29TH USENIX SECURITY SYMPOSIUM, P2379
   Farhang S, 2019, Arxiv, DOI arXiv:1905.09352
   FSecureLABS, DROZ
   Gamba J., 2020, P IEEE S SEC PRIV SA
   Gionee, ABOUT US
   Google, PIX NEX SEC B
   Grace M.C., 2012, NDSS, V14
   Hengeveld W. J., EXTFSTOOLS
   Hou QS, 2022, PROC INT CONF SOFTW, P1257, DOI 10.1145/3510003.3510072
   images, About us
   LEAGOO, US
   Neagu C., 2021, WHAT IS FIRMWARE WHA
   Network Security Configuration, US
   Cam NT, 2017, IEEE INT CONF MOB DA, P340, DOI 10.1109/MDM.2017.56
   Nohl K., 2018, P HITB SEC C, P1
   NVD, About us
   OWASP, OWASP MOB SEC TEST G
   Possemato Andrea, 2021, 2021 IEEE Symposium on Security and Privacy (SP), P87, DOI 10.1109/SP40001.2021.00074
   Rahaman S, 2019, PROCEEDINGS OF THE 2019 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY (CCS'19), P2455, DOI 10.1145/3319535.3345659
   Ramirez T., 2020, SECURITY ANAL GUIDE
   Stone M., 2019, PROC BLACK HAT US SE, P1
   Tian D, 2018, PROCEEDINGS OF THE 27TH USENIX SECURITY SYMPOSIUM, P273
   Tung L., 2018, ANDROID SECURITY YOU
   Wu L., 2013, PROC 20 SIGSAC C COM, P623, DOI DOI 10.1145/2508859.2516728
   Xpirt, SDAT2IMG
   Zhang CN, 2022, PROCEEDINGS OF THE 15TH ACM CONFERENCE ON SECURITY AND PRIVACY IN WIRELESS AND MOBILE NETWORKS (WISEC '22), P20, DOI 10.1145/3507657.3528555
   Zhang Z, 2021, PROCEEDINGS OF THE 30TH USENIX SECURITY SYMPOSIUM, P3649
   Zheng M., 2014, Proceedings of the 9th ACM symposium on information, computer and communications security, Kyoto, Japan, 4-6 June 2014, P471
   Zhou XY, 2014, P IEEE S SECUR PRIV, P409, DOI 10.1109/SP.2014.33
NR 68
TC 0
Z9 0
U1 6
U2 8
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUL
PY 2023
VL 49
IS 7
BP 3901
EP 3921
DI 10.1109/TSE.2023.3275655
PG 21
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA M9RA6
UT WOS:001033501500013
DA 2024-07-18
ER

PT J
AU Ojdanic, M
   Garg, A
   Khanfir, A
   Degiovanni, R
   Papadakis, M
   Le Traon, Y
AF Ojdanic, Milos
   Garg, Aayush
   Khanfir, Ahmed
   Degiovanni, Renzo
   Papadakis, Mike
   Le Traon, Yves
TI Syntactic Versus Semantic Similarity of Artificial and Real Faults in
   Mutation Testing Studies
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Fault injection; fault seeding; machine learning; mutation testing;
   semantic model; syntactic distance
ID BUGS
AB Fault seeding is typically used in empirical studies to evaluate and compare test techniques. Central to these techniques lies the hypothesis that artificially seeded faults involve some form of realistic properties and thus provide realistic experimental results. In an attempt to strengthen realism, a recent line of research uses machine learning techniques, such as deep learning and Natural Language Processing, to seed faults that look like (syntactically) real ones, implying that fault realism is related to syntactic similarity. This raises the question of whether seeding syntactically similar faults indeed results in semantically similar faults and, more generally whether syntactically dissimilar faults are far away (semantically) from the real ones. We answer this question by employing 4 state-of-the-art fault-seeding techniques (PiTest - a popular mutation testing tool, IBIR - a tool with manually crafted fault patterns, DeepMutation - a learning-based fault seeded framework and mu BERT - a mutation testing tool based on the pre-trained language model CodeBERT) that operate in a fundamentally different way, and demonstrate that syntactic similarity does not reflect semantic similarity. We also show that 65.11%, 76.44%, 61.39% and 9.76% of the real faults of Defects4J V2 are semantically resembled by PiTest, IBIR, mu BERT and DeepMutation faults, respectively.
C1 [Ojdanic, Milos; Garg, Aayush; Khanfir, Ahmed; Degiovanni, Renzo; Papadakis, Mike] Univ Luxembourg, Interdisciplinary Ctr Secur Reliabil & Trust SnT, L-1359 Esch Sur Alzette, Luxembourg.
   [Le Traon, Yves] Univ Luxembourg, L-1359 Esch Sur Alzette, Luxembourg.
C3 University of Luxembourg; University of Luxembourg
RP Ojdanic, M (corresponding author), Univ Luxembourg, Interdisciplinary Ctr Secur Reliabil & Trust SnT, L-1359 Esch Sur Alzette, Luxembourg.
EM milos.ojdanic@uni.lu; aayush.garg@uni.lu; ahmed.khanfir@uni.lu;
   renzo.degiovanni@uni.lu; michail.papadakis@uni.lu; yves.letraon@uni.lu
RI LE TRAON, Yves/T-2911-2019; Degiovanni, Renzo/KUF-0926-2024
OI Khanfir, Ahmed/0000-0001-7471-6050; Degiovanni,
   Renzo/0000-0003-1611-3969; LE TRAON, Yves/0000-0002-1045-4861;
   Papadakis, Mike/0000-0003-1852-2547; Ojdanic, Milos/0000-0001-8213-3381;
   Garg, Aayush/0000-0002-2507-8846
FU Luxembourg National Research Fund (FNR) through the CORE
   [C19/IS/13646587/RASoRS]; PayPal
FX This work was supported by the Luxembourg National Research Fund (FNR)
   through the CORE project under Grant C19/IS/13646587/RASoRS and PayPal.
CR Allamanis M, 2021, ADV NEUR IN, V34
   Andrews JH, 2005, PROC INT CONF SOFTW, P402, DOI 10.1145/1062455.1062530
   Apache Commons, About us
   Bareiss P, 2022, Arxiv, DOI [arXiv:2206.01335, DOI 10.48550/ARXIV.2206.01335]
   Beller M, 2021, 2021 IEEE/ACM 43RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE (ICSE-SEIP 2021), P268, DOI 10.1109/ICSE-SEIP52600.2021.00036
   Brown DB, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P511, DOI 10.1145/3106237.3106280
   Chekam TT, 2021, ACM T SOFTW ENG METH, V30, DOI 10.1145/3425497
   Chekam TT, 2017, PROC INT CONF SOFTW, P597, DOI 10.1109/ICSE.2017.61
   Coles H., 2016, P 25 INT S SOFTWARE, P449
   DeepMutation, US
   Degiovanni R, 2022, IEEE ICST WORKSHOP, P160, DOI 10.1109/ICSTW55395.2022.00039
   DEMILLO RA, 1978, COMPUTER, V11, P34, DOI 10.1109/C-M.1978.218136
   Feng ZY, 2020, FINDINGS OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, EMNLP 2020, P1536
   Garg A, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-022-10197-4
   Garg A, 2023, IEEE T SOFTWARE ENG, V49, P24, DOI 10.1109/TSE.2022.3140510
   github, DEFECTS4J ISSUE 353
   github, MASTER BRANCH DEEPMU
   github, FASTERXML JACKSON
   github, SUPPLEMANTARY DATA W
   Gold NE, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P547, DOI 10.1145/3106237.3106304
   Gopinath R, 2014, PROC INT SYMP SOFTW, P189, DOI 10.1109/ISSRE.2014.40
   Hindle A, 2012, PROC INT CONF SOFTW, P837, DOI 10.1109/ICSE.2012.6227135
   Hovemeyer D, 2004, ACM SIGPLAN NOTICES, V39, P92, DOI 10.1145/1052883.1052895
   Islam A., 2008, ACM Trans. Knowl. Discov. Data, V2, P1, DOI [10.1145/1376815.1376819, DOI 10.1145/1376815.1376819]
   Jia Y, 2009, INFORM SOFTWARE TECH, V51, P1379, DOI 10.1016/j.infsof.2009.04.016
   Jia Yue, 2016, P 25 INT S SOFTWARE, P354
   Just R, 2014, P 2014 INT S SOFTW T, P437, DOI DOI 10.1145/2610384.2628055
   Just R, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P654, DOI 10.1145/2635868.2635929
   Khanfir A, 2023, ACM T SOFTW ENG METH, V32, DOI 10.1145/3542946
   Kintis M, 2018, EMPIR SOFTW ENG, V23, P2426, DOI 10.1007/s10664-017-9582-5
   Kintis M, 2018, IEEE T SOFTWARE ENG, V44, P308, DOI 10.1109/TSE.2017.2684805
   Koehn P, 2003, HLT-NAACL 2003: HUMAN LANGUAGE TECHNOLOGY CONFERENCE OF THE NORTH AMERICAN CHAPTER OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, PROCEEDINGS OF THE MAIN CONFERENCE, P127
   Kurtz B, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P571, DOI 10.1145/2950290.2950322
   Le Goues C, 2012, IEEE T SOFTWARE ENG, V38, P54, DOI 10.1109/TSE.2011.104
   Niwattanakul Suphakit, 2013, IMECS 2013 Proceedings of International Multiconference of Engineers and Computer Scientists, P380
   Offutt A. J., 1992, ACM Transactions on Software Engineering and Methodology, V1, P5, DOI 10.1145/125489.125473
   Offutt A. J., 1996, SIGSOFT Software Engineering Notes, V21, P195, DOI [10.1145/229000.226317, 10.1145/226295.226317]
   Offutt AJ, 2001, KLUW INT S ADV DATA, V24, P34
   Papadakis M, 2019, ADV COMPUT, V112, P275, DOI 10.1016/bs.adcom.2018.03.015
   Papadakis M, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P537, DOI 10.1145/3180155.3180183
   Papadakis M, 2018, IEEE ICST WORKSHOP, P32, DOI 10.1109/ICSTW.2018.00025
   Papineni K, 2002, 40TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, PROCEEDINGS OF THE CONFERENCE, P311, DOI 10.3115/1073083.1073135
   Patra J, 2021, PROCEEDINGS OF THE 29TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '21), P906, DOI 10.1145/3468264.3468623
   Pour MV, 2021, IEEE INT CONF SOFTW, P36, DOI 10.1109/ICST49551.2021.00016
   Pradel M, 2018, P ACM PROGRAM LANG, V2, DOI 10.1145/3276517
   Qian G., 2004, P 2004 ACM S APPL CO, P1232
   Raffel Colin, 2020, ARXIV191010683
   Richter C, 2022, IEEE INT CONF SOFTW, P162, DOI 10.1109/ICST53961.2022.00027
   src2abs, US
   Sutskever I, 2014, ADV NEUR IN, V27
   Chekam TT, 2020, EMPIR SOFTW ENG, V25, P434, DOI 10.1007/s10664-019-09778-7
   Tufano M, 2020, PROC INT CONF SOFTW, P29, DOI 10.1145/3377812.3382146
   Tufano M, 2019, PROC IEEE INT CONF S, P301, DOI 10.1109/ICSME.2019.00046
   Tufano M, 2019, ACM T SOFTW ENG METH, V28, DOI 10.1145/3340544
   Vargha A, 2000, J EDUC BEHAV STAT, V25, P101, DOI 10.3102/10769986025002101
   Zhou J, 2012, PROC INT CONF SOFTW, P14, DOI 10.1109/ICSE.2012.6227210
NR 56
TC 1
Z9 1
U1 2
U2 3
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUL
PY 2023
VL 49
IS 7
BP 3922
EP 3938
DI 10.1109/TSE.2023.3277564
PG 17
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA M9RA6
UT WOS:001033501500014
OA Green Published, hybrid
DA 2024-07-18
ER

PT J
AU Good, JH
   Gisolfi, N
   Miller, K
   Dubrawski, A
AF Good, Jack H.
   Gisolfi, Nicholas
   Miller, Kyle
   Dubrawski, Artur
TI Verification of Fuzzy Decision Trees
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Neural networks; Decision trees; Machine learning; Stars; Robustness;
   Machine learning algorithms; Training; Decision tree; formal methods;
   fuzzy set; robustness; verification
AB In recent years, there have been major strides in the safety verification of machine learning models such as neural networks and tree ensembles. However, fuzzy decision trees (FDT), also called soft or differentiable decision trees, are yet unstudied in the context of verification. They present unique verification challenges resulting from multiplications of input values; in the simplest case with a piecewise-linear splitting function, an FDT is piecewise-polynomial with degree up to the depth of the tree. We propose an abstraction-refinement algorithm for verification of properties of FDTs. We show that the problem is NP-Complete, like many other machine learning verification problems, and that our algorithm is complete in a finite precision setting. We benchmark on a selection of public data sets against an off-the-shelf SMT solver and a baseline variation of our algorithm that uses a refinement strategy from similar methods for neural network verification, finding the proposed method to be the fastest. Code for our algorithm along with our experiments and demos are available on GitHub at https://github.com/autonlab/fdt_verification.
C1 [Good, Jack H.; Gisolfi, Nicholas; Miller, Kyle; Dubrawski, Artur] Carnegie Mellon Univ, Robot Inst, Auton Lab, Pittsburgh, PA 15213 USA.
C3 Carnegie Mellon University
RP Good, JH (corresponding author), Carnegie Mellon Univ, Robot Inst, Auton Lab, Pittsburgh, PA 15213 USA.
EM jhgood@andrew.cmu.edu; ngisolfi@andrew.cmu.edu; mille856@andrew.cmu.edu;
   awd@cs.cmu.edu
OI Dubrawski, Artur/0000-0002-2372-0831; Good, Jack/0000-0003-1886-9217
FU NASA's Space Technology Research Grants Program; Defense Advanced
   Research Projects Agency [FA8750-17-2-0130]; U.S. Department of Homeland
   Security Countering Weapons of Mass Destruction Office
   [HSHQDC-16-X-00001, 18-DN-ARI-00031]
FX This work was supported in part by the Space Technology Research
   Institutes grant from NASA's Space Technology Research Grants Program;
   in part by the Defense Advanced Research Projects Agency under Grant
   FA8750-17-2-0130; and in part by the U.S. Department of Homeland
   Security Countering Weapons of Mass Destruction Office under Grants
   HSHQDC-16-X-00001 and 18-DN-ARI-00031.
CR Agrawal Akshay, 2018, Journal of Control and Decision, V5, P42, DOI 10.1080/23307706.2017.1397554
   Anderson G, 2019, PROCEEDINGS OF THE 40TH ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION (PLDI '19), P731, DOI 10.1145/3314221.3314614
   Bak S, 2021, LECT NOTES COMPUT SC, V12673, P19, DOI 10.1007/978-3-030-76384-8_2
   CHANG RLP, 1977, IEEE T SYST MAN CYB, V7, P28, DOI 10.1109/TSMC.1977.4309586
   Diamond S, 2016, J MACH LEARN RES, V17
   Elboher YY, 2020, LECT NOTES COMPUT SC, V12224, P43, DOI 10.1007/978-3-030-53288-8_3
   Gehr T, 2018, P IEEE S SECUR PRIV, P3, DOI 10.1109/SP.2018.00058
   Gisolfi N., 2021, THESIS CARNEGIE MELL
   Hada SS, 2022, INT CONF ACOUST SPEE, P2759, DOI 10.1109/ICASSP43922.2022.9747873
   Tran HD, 2021, FORM ASP COMPUT, V33, P519, DOI 10.1007/s00165-021-00553-4
   Tran HD, 2020, LECT NOTES COMPUT SC, V12224, P18, DOI 10.1007/978-3-030-53288-8_2
   Hoang-Dung Tran, 2019, Formal Methods - The Next 30 Years. Third World Congress, FM 2019. Proceedings. Lecture Notes in Computer Science (LNCS 11800), P670, DOI 10.1007/978-3-030-30942-8_39
   Kanoh R., 2022, P INT C LEARN REPR
   Kantchelian Alex, 2016, INT C MACHINE LEARNI, P2387
   Katz G, 2022, FORM METHOD SYST DES, V60, P87, DOI 10.1007/s10703-021-00363-7
   Katz G, 2019, LECT NOTES COMPUT SC, V11561, P443, DOI 10.1007/978-3-030-25540-4_26
   Katz G, 2017, LECT NOTES COMPUT SC, V10426, P97, DOI 10.1007/978-3-319-63387-9_5
   Kontschieder P, 2015, IEEE I CONF COMP VIS, P1467, DOI 10.1109/ICCV.2015.172
   Luo HR, 2021, IEEE ACCESS, V9, P55999, DOI 10.1109/ACCESS.2021.3070575
   Mirman M., 2018, INT C MACH LEARN, P3578
   Pulina L, 2010, LECT NOTES COMPUT SC, V6174, P243, DOI 10.1007/978-3-642-14295-6_24
   Sahni S., 1974, SIAM Journal on Computing, V3, P262, DOI 10.1137/0203021
   Silva Andrew, 2020, PROC INT C ARTIF INT, V108, P1855
   Singh G, 2019, P ACM PROGRAM LANG, V3, DOI 10.1145/3290354
   Suárez A, 1999, IEEE T PATTERN ANAL, V21, P1297, DOI 10.1109/34.817409
   Tanno R., 2019, P INT C MACH LEARN, P6166
   Törnblom J, 2019, LECT NOTES COMPUT SC, V11699, P301, DOI 10.1007/978-3-030-26250-1_24
   Wang J, 2017, IEEE INFOCOM SER
   Wang SQ, 2018, PROCEEDINGS OF THE 27TH USENIX SECURITY SYMPOSIUM, P1599
   Wang Shiqi, 2021, NeurIPS
   Xu K., 2021, PROC INT C LEARN REP
   Xu Kaidi, 2020, ADV NEURAL INFORM PR, V33, P1129
   Yildiz OT, 2013, LECT NOTES ELECTR EN, V264, P15, DOI 10.1007/978-3-319-01604-7_2
   Zhang H., 2018, P INT C NEUR INF PRO
NR 34
TC 0
Z9 0
U1 3
U2 5
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAY 1
PY 2023
VL 49
IS 5
BP 3277
EP 3288
DI 10.1109/TSE.2023.3251858
PG 12
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA G8MH8
UT WOS:000991628700013
DA 2024-07-18
ER

PT J
AU Elyasaf, A
   Yaacov, T
   Weiss, G
AF Elyasaf, Achiya
   Yaacov, Tom
   Weiss, Gera
TI What Petri Nets Oblige us to Say Comparing Approaches for Behavior
   Composition
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Behavioral sciences; Synchronization; Programming; Analytical models;
   Benchmark testing; Semantics; Petri nets; behavioral programming;
   linguistic relativity
ID SYSTEMS
AB We identify and demonstrate a weakness of Petri Nets (PN) in specifying composite behavior of reactive systems. Specifically, we show how, when specifying multiple requirements in one PN model, modelers are obliged to specify mechanisms for combining these requirements. This yields, in many cases, over-specification and incorrect models. We demonstrate how some execution paths are missed, and some are generated unintentionally. To support this claim, we analyze PN models from the literature, identify the combination mechanisms, and demonstrate their effect on the correctness of the model. To address this problem, we propose to model the system behavior using behavioral programming (BP), a software development and modeling paradigm designed for seamless integration of independent requirements. Specifically, we demonstrate how the semantics of BP, which define how to interweave scenarios into a single model, allow for avoiding the over-specification. Additionally, while BP maintains the same mathematical properties as PN, it provides means for changing the model dynamically, thus increasing the agility of the specification. We compare BP and PN in quantitative and qualitative measures by analyzing the models, their generated execution paths, and the specification process. Finally, while BP is supported by tools that allow for applying formal methods and reasoning techniques to the model, it lacks the legacy of PN tools and algorithms. To address this issue, we propose semantics and a tool for translating BP models to PN and vice versa.
C1 [Elyasaf, Achiya] Ben Gurion Univ Negev, Software & Informat Syst Engn Dept, IL-84105 Beer Sheva, Israel.
   [Yaacov, Tom; Weiss, Gera] Ben Gurion Univ Negev, Comp Sci Dept, IL-26732 Beer Sheva, Israel.
C3 Ben Gurion University; Ben Gurion University
RP Elyasaf, A (corresponding author), Ben Gurion Univ Negev, Software & Informat Syst Engn Dept, IL-84105 Beer Sheva, Israel.
EM achiya@bgu.ac.il; tomya@post.bgu.ac.il; geraw@cs.bgu.ac.il
RI Weiss, Gera/F-1549-2012; Elyasaf, Achiya/I-4129-2016
OI Elyasaf, Achiya/0000-0002-4009-5353; Yaacov, Tom/0000-0002-0565-6506;
   Weiss, Gera/0000-0002-5832-8768
FU Israeli Science Foundation [2714/19]; Israeli Smart Transportation
   Research Center (ISTRC)
FX This work was supported in part by the Israeli Science Foundation under
   Grant #2714/19 and in part by the Israeli Smart Transportation Research
   Center (ISTRC).
CR Alexandron G, 2014, ACM T COMPUT EDUC, V14, DOI 10.1145/2648814
   Baldan P., 2001, CONCUR 2001 - Concurrency Theory. 12th International Conference. Proceedings (Lecture Notes in Computer Science Vol.2154), P502
   Bar -Sinai M., 2019, PROC 59 ISR ANN C AE, P1407
   Bar-Sinai M, 2018, 21ST ACM/IEEE INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS: COMPANION PROCEEDINGS (MODELS-COMPANION '18), P59, DOI 10.1145/3270112.3270126
   blahchain, CONSTRUCTING LANGUAG
   Boussif A., 2016, THESIS U LILLE 1 SCI
   Boussif A., 2017, PROC 28 INT WORKSHOP
   Bruni R, 2013, LOG METH COMPUT SCI, V9, DOI 10.2168/LMCS-9(3:16)2013
   Chen J., 2018, ARXIV
   Davidrajuh R, 2014, PROCEEDINGS 2014 4TH INTERNATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE WITH APPLICATIONS IN ENGINEERING AND TECHNOLOGY ICAIET 2014, P163, DOI 10.1109/ICAIET.2014.35
   Deutscher Guy., 2010, LANGUAGE GLASS WHY W
   Devillers R, 2021, FUND INFORM, V183, P1, DOI 10.3233/FI-2021-2080
   Elyasaf A, 2018, MODELS WORKSH, P485
   Elyasaf A, 2021, INFORM SOFTWARE TECH, V133, DOI 10.1016/j.infsof.2020.106504
   Elyasaf A, 2019, 2019 ACM/IEEE 22ND INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS COMPANION (MODELS-C 2019), P243, DOI 10.1109/MODELS-C.2019.00039
   Eshuis R, 2003, LECT NOTES COMPUT SC, V2679, P296
   Ghazel M, 2016, INT WORKS DISCRETE, P177, DOI 10.1109/WODES.2016.7497845
   Giua A, 2017, IFAC PAPERSONLINE, V50, P1772, DOI 10.1016/j.ifacol.2017.08.156
   Harel David, 2013, Logic for Programming, Artificial Intelligence and Reasoning. 19th International Conference, LPAR-19, Proceedings: LNCS 8312, P355, DOI 10.1007/978-3-642-45221-5_25
   Harel D, 2002, LECT NOTES COMPUT SC, V2517, P378
   Harel D., 2011, 2011 International Conference on Embedded Software (EMSOFT 2011), P279
   Harel D., 2011, PROC 1 SPLASH WORKSH, P171, DOI DOI 10.1145/2095050
   Harel D, 2003, COME LETS PLAY SCENA, V1
   Harel D, 2012, COMMUN ACM, V55, P90, DOI 10.1145/2209249.2209270
   Harel D, 2010, LECT NOTES COMPUT SC, V6183, P250, DOI 10.1007/978-3-642-14107-2_12
   Harel D, 2009, IEEE SOFTWARE, V26, P87, DOI 10.1109/MS.2009.76
   IVERSON KE, 1980, COMMUN ACM, V23, P444, DOI 10.1145/358896.358899
   Katz G, 2019, ARXIV
   Kindler E, 2009, LECT NOTES COMPUT SC, V5606, P43, DOI 10.1007/978-3-642-02424-5_5
   Kirsch C.M., 2012, Advances in Real-Time Systems (to Georg Farber on the occasion of his appointment as Professor Emeritus at TU Munchen after leading the Lehrstuhl fur Realzeit-Computersysteme for 34 illustrious years, P103
   Kugler Hillel, 2011, Computer Aided Verification. Proceedings 23rd International Conference, CAV 2011, P579, DOI 10.1007/978-3-642-22110-1_46
   LEVESON NG, 1987, IEEE T SOFTWARE ENG, V13, P386, DOI 10.1109/TSE.1987.233170
   Liu B., 2014, ADECS PETRI NETS, P20
   Liu GJ, 2018, ACM TRANS CYBER-PHYS, V2, DOI 10.1145/3185502
   Maoz S, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P242, DOI 10.1109/ICSE.2013.6606570
   Marron A., 2018, PROC INT C MODELS WO, P443
   Marron Assaf., 2012, Proceedings of the 2nd edition on Programming systems, languages and applications based on actors, agents, and decentralized control abstractions - AGERE!'12, page, P59
   Matsumoto Y., 2003, POWER PHILOS RUBY OR
   Mazzeo A., 1997, SAFETY CRITICAL REAL, P3
   MOYNE JA, 1975, INT J COMPUT INF SCI, V4, P265, DOI 10.1007/BF01007763
   NSKI PS, 2010, INT C CONCURRENCY TH, P554
   Pae H. K., 2020, SCRIPT EFFECTS HIDDE, P37, DOI [10.1007/978-3-030-55152-0_3, DOI 10.1007/978-3-030-55152-0_3]
   Poliakov I, 2009, LECT NOTES COMPUT SC, V5606, P333, DOI 10.1007/978-3-642-02424-5_21
   Pommereau F, 2015, LECT NOTES COMPUT SC, V9115, P254, DOI 10.1007/978-3-319-19488-2_13
   Reisig W., 2012, Petri nets: an introduction, V4
   Sokolov D., 2016, THIS ASYNCHRONOUS WO, P269
   Tsay YK, 2007, LECT NOTES COMPUT SC, V4424, P466
   workcraft.org, MOD PETR NETS DIN PH
   Yaacov T., 2021, THESIS BENGURION U N
NR 49
TC 0
Z9 0
U1 1
U2 4
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD APR 1
PY 2023
VL 49
IS 4
BP 2303
EP 2317
DI 10.1109/TSE.2022.3216683
PG 15
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA E9NM9
UT WOS:000978723600050
OA hybrid, Green Submitted
DA 2024-07-18
ER

PT J
AU Huang, JJ
   Xue, B
   Jiang, JS
   You, W
   Liang, B
   Wu, JZ
   Wu, YJ
AF Huang, Jianjun
   Xue, Bo
   Jiang, Jiasheng
   You, Wei
   Liang, Bin
   Wu, Jingzheng
   Wu, Yanjun
TI Scalably Detecting Third-Party Android Libraries With Two-Stage Bloom
   Filtering
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Codes; Libraries; Scalability; Task analysis; Security; Benchmark
   testing; Measurement; Third-party library; non-structure-preserving
   obfuscation; set inclusion; bloom filter; entropy
ID QUERY
AB Third-party library (TPL) detection is important for Android app security analysis nowadays. Unfortunately, the existing techniques often suffer from poor scalability. In some situations, the detection time cost is even unacceptable. Although a few existing methods run relatively fast, they cannot provide enough effectiveness, especially for non-structure-preserving obfuscated apps, e.g., repackaged and flattened. In this paper, we treat TPLs detection as a set inclusion problem to effectively and efficiently analyze obfuscated apps, and develop a scalable two-stage detection approach, Libloom. Specifically, the package and class signatures are encoded into two levels of Bloom filters respectively. At the first stage, the package filters are used to identify a limited number of candidate TPLs via set overlapping measurement to avoid unnecessary class-level set analysis. Subsequently, with the class filters, a similarity score is computed between the query app and each candidate to detect the integrated TPLs, and a novel entropy-based metric is presented to specially handle the repackaged and flattened apps. We have evaluated Libloom on some large-scale benchmarks involving tens of thousands of TPL instances. The experiment results demonstrate that Libloom outperforms state-of-the-art tools in both effectiveness and efficiency. Especially, the proposed two-stage method can run about ten times faster than the straightforward class-level analysis on flattened apps, and without loss of accuracy.
C1 [Huang, Jianjun; Xue, Bo; Jiang, Jiasheng; You, Wei; Liang, Bin] Renmin Univ China, Sch Informat, Beijing 100872, Peoples R China.
   [Huang, Jianjun; Xue, Bo; Jiang, Jiasheng; You, Wei; Liang, Bin] Renmin Univ China, Key Lab DEKE, MOE, Beijing 100872, Peoples R China.
   [Wu, Jingzheng; Wu, Yanjun] Chinese Acad Sci, Inst Software, Beijing 100190, Peoples R China.
C3 Renmin University of China; Renmin University of China; Chinese Academy
   of Sciences; Institute of Software, CAS
RP Liang, B (corresponding author), Renmin Univ China, Sch Informat, Beijing 100872, Peoples R China.
EM hjj@ruc.edu.cn; xuebo2020@ruc.edu.cn; jjscool@ruc.edu.cn;
   youwei@ruc.edu.cn; liangb@ruc.edu.cn; jingzheng08@iscas.ac.cn;
   yanjun@iscas.ac.cn
RI Liang, Bin/JHU-0581-2023
OI xue, bo/0000-0002-0655-5555; Jiang, Jiasheng/0000-0003-0875-5793; Huang,
   Jianjun/0000-0003-4403-0060; You, Wei/0000-0003-1009-6627
FU National Natural Science Foundation of China (NSFC) [U1836209, 62272465,
   62002361]; CCF-Huawei Populus euphratica Innovation Research Funding
FX This work was supported in part by the National Natural Science
   Foundationof China (NSFC) under Grants U1836209, 62272465, and 62002361,
   and inpart by the CCF-Huawei Populus euphratica Innovation Research
   Funding
CR Ahle TD, 2020, ANN IEEE SYMP FOUND, P728, DOI 10.1109/FOCS46700.2020.00073
   Allen, 2021, About us
   [Anonymous], 2022, CVE202225845
   Aonzo S, 2020, SOFTWAREX, V11, DOI 10.1016/j.softx.2020.100403
   app.mi, 2021, XIAOM APP STOR
   Backes M, 2016, CCS'16: PROCEEDINGS OF THE 2016 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P356, DOI 10.1145/2976749.2978333
   BLOOM BH, 1970, COMMUN ACM, V13, P422, DOI 10.1145/362686.362692
   Charikar M, 2002, LECT NOTES COMPUT SC, V2380, P451
   Dasho, 2021, US
   f-droid, 2018, OP SOURC PROJ US VUL
   F-Droid, 2021, about us
   github, 2021, LIBID
   Glanz L, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P638, DOI 10.1145/3106237.3106305
   Goel A, 2010, PERF E R SI, V38, P143, DOI 10.1145/1811099.1811056
   google, 2020, BENCHM TPLS DET
   Guava, 2021, GOOGL COR LIB JAV
   Kim K., 2017, PROC INT C RES ADAPT, P222
   Kirsch A, 2008, RANDOM STRUCT ALGOR, V33, P187, DOI 10.1002/rsa.20208
   Li L, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P403, DOI 10.1109/SANER.2016.52
   Li MH, 2017, PROC INT CONF SOFTW, P335, DOI 10.1109/ICSE.2017.38
   Ma Z, 2016, 2016 IEEE/ACM 38TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING COMPANION (ICSE-C), P653, DOI 10.1145/2889160.2889178
   MvnRepository, 2021, US
   nist, 2016, CVE20162402
   nist, 2022, CVE202225647
   nist, 2018, CVE20181000850
   ProGuard, 2021, JAV OBF ANDR APP OPT
   SHANNON CE, 1948, BELL SYST TECH J, V27, P623, DOI 10.1002/j.1538-7305.1948.tb00917.x
   Tang W, 2022, IEEE WORK CONF MIN S, P423, DOI 10.1145/3524842.3528442
   Viennot N., 2014, 2014 ACM INT C MEAS, P221, DOI DOI 10.1145/2637364.2592003
   WALA, 2021, TJ WATS LIB AN
   Wang Y, 2018, 2018 IEEE/ACM 5TH INTERNATIONAL CONFERENCE ON MOBILE SOFTWARE ENGINEERING AND SYSTEMS (MOBILESOFT), P13, DOI 10.1145/3197231.3197248
   Wang Y, 2020, PROC IEEE INT CONF S, P35, DOI 10.1109/ICSME46990.2020.00014
   Wikipedia, 2021, OFF FEAT RICH VIEW F
   wikipedia, 2021, BLOOM FILT
   wikipedia, 2021, HUNGARIAN ALGORITHM
   Wisseman S., 2017, 3 PARTY LIB ARE ONE
   Xue L, 2022, IEEE T SOFTWARE ENG, V48, P551, DOI 10.1109/TSE.2020.2996433
   Zhan X, 2022, IEEE T SOFTWARE ENG, V48, P4249, DOI 10.1109/TSE.2021.3115506
   Zhan X, 2022, IEEE T SOFTWARE ENG, V48, P4181, DOI 10.1109/TSE.2021.3114381
   Zhan X, 2021, PROC INT CONF SOFTW, P1695, DOI 10.1109/ICSE43902.2021.00150
   Zhan X, 2020, IEEE INT CONF AUTOM, P919, DOI 10.1145/3324884.3416582
   Zhan X, 2019, 2019 IEEE 26TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER), P321, DOI [10.1109/SANER.2019.8667975, 10.1109/saner.2019.8667975]
   Zhang JX, 2019, PROCEEDINGS OF THE 28TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA '19), P55, DOI 10.1145/3293882.3330563
   Zhang Y, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P141, DOI 10.1109/SANER.2018.8330204
   Zhang ZH, 2017, IEEE ACM T NETWORK, V25, P2916, DOI 10.1109/TNET.2017.2715017
   Zhao KF, 2021, CCS '21: PROCEEDINGS OF THE 2021 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P3218, DOI 10.1145/3460120.3485387
NR 46
TC 1
Z9 3
U1 0
U2 0
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD APR 1
PY 2023
VL 49
IS 4
BP 2272
EP 2284
DI 10.1109/TSE.2022.3215628
PG 13
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA E9NM9
UT WOS:000978723600048
DA 2024-07-18
ER

PT J
AU Leite, L
   Lago, N
   Melo, C
   Kon, F
   Meirelles, P
AF Leite, Leonardo
   Lago, Nelson
   Melo, Claudia
   Kon, Fabio
   Meirelles, Paulo
TI A Theory of Organizational Structures for Development and Infrastructure
   Professionals
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Companies; Taxonomy; Software; Interviews; Periodic structures;
   Industries; Software engineering; DevOps; software teams; organizational
   structures; continuous delivery; software engineering; grounded theory
ID AGILE
AB DevOps and continuous delivery have impacted the organizational structures of development and infrastructure groups in software-producing organizations. Our research aims at revealing the different options adopted by the software industry to organize such groups, understanding why different organizations adopt distinct structures, and discovering how organizations handle the drawbacks of each structure. We interviewed 68 carefully-selected IT professionals, 45 working in Brazil, 10 in the USA, 8 in Europe, 1 in Canada, and 4 in globally distributed teams. By analyzing these conversations through a Grounded Theory process, we identified conditions, causes, reasons to avoid, consequences, and contingencies related to each discovered structure (segregated departments, collaborative departments, API-mediated departments, and single department). In this way, we offer a theory to explain organizational structures for development and infrastructure professionals. This theory can support practitioners and researchers in comprehending and discussing the DevOps phenomenon and its related issues, and also provides valuable input to practitioners' decision-making.
C1 [Leite, Leonardo; Lago, Nelson; Melo, Claudia; Kon, Fabio; Meirelles, Paulo] Univ Sao Paulo IME USP, Inst Math & Stat, BR-05508090 Sao Paulo, Brazil.
RP Leite, L (corresponding author), Univ Sao Paulo IME USP, Inst Math & Stat, BR-05508090 Sao Paulo, Brazil.
EM leofl@ime.usp.br; lago@ime.usp.br; claudia@ime.usp.br; kon@ime.usp.br;
   paulo.meirelles@ufabc.edu.br
RI Kon, Fabio/H-2743-2012; Meirelles, Paulo/AAC-8605-2019; Lago, Nelson
   P/N-8834-2015
OI Kon, Fabio/0000-0003-3888-7340; Meirelles, Paulo/0000-0002-8923-2814;
   Ferreira Leite, Leonardo Alexandre/0000-0001-5762-5413
FU Brazilian Federal Service for Data Processing (Serpro); CNPq
   [465446/2014-0]; CAPES [001]; FAPESP [14/50937-1, 15/24485-9,
   2019/12743-4]
FX This work was supported in part by the Brazilian Federal Service for
   Data Processing (Serpro), CNPq proceedings under Grant 465446/2014-0, in
   part by CAPES - Finance Code 001, and in part by FAPESP proceedings
   under Grants 14/50937-1, 15/24485-9, and 2019/12743-4.
CR Adams W.C., 2010, HDB PRACTICAL PROGRA, V3rd, P365
   ANDERSON PA, 1983, ADMIN SCI QUART, V28, P201, DOI 10.2307/2392618
   [Anonymous], 1984, ORG ESTRUTURAS PROCE
   Brown A., 2020 STATE DEVOPS RE
   CONWAY ME, 1968, DATAMATION, V14, P28
   Donaldson L., 1999, Handbook de estudos organizacionais: modelos de analise e novas questoes em estudos organizacionais
   Erich FMA, 2017, J SOFTW-EVOL PROC, V29, DOI 10.1002/smr.1885
   Forsgren N, 2020, AMCIS 2020 PROCEEDINGS
   Fulmer J., 2009, PEI Infrastructure Investor, P30
   Glaser B, 2005, GROUNDED THEORY PERS
   Glaser B, 1967, Discovery of grounded theory strategies for qualitative research, DOI [10.4324/9780203793206, DOI 10.4324/9780203793206]
   Glaser B.G., 2002, INT J QUAL METH, V1, DOI DOI 10.1177/160940690200100203
   Glaser B. G., 1967, DISCOVERY GROUNDED T, DOI 10.1515/9783111660211/html
   Gregor S, 2006, MIS QUART, V30, P611
   GUBA EG, 1981, ECTJ-EDUC COMMUN TEC, V29, P75
   Herbsleb J., 2006, P INT C INF SYST ICI, P553
   Hernandez CA, 2009, GROUNDED THEORY REV, V8, P50
   Hoda R, 2011, INFORM SOFTWARE TECH, V53, P521, DOI 10.1016/j.infsof.2010.10.009
   Hsieh HF, 2005, QUAL HEALTH RES, V15, P1277, DOI 10.1177/1049732305276687
   ITIL, GLOSSARY, V4th
   Jovanovic M, 2017, J SYST SOFTWARE, V133, P174, DOI 10.1016/j.jss.2017.07.008
   Leite L., 2020, IEEE ACM 42 INT C SO, P505, DOI 10.1145/3387940.3391455
   Leite L, 2021, INFORM SOFTWARE TECH, V139, DOI 10.1016/j.infsof.2021.106672
   Leite L, 2020, PROC INT CONF SOFTW, P296, DOI 10.1145/3377812.3390807
   Leite L, 2020, ACM COMPUT SURV, V52, DOI 10.1145/3359981
   Lopez-Fernandez D, 2022, IEEE T SOFTWARE ENG, V48, P3716, DOI 10.1109/TSE.2021.3102982
   Lunenburg F.C., 2012, INT J SCHOLARLY ACAD, V14, P1
   Macarthy RW, 2020, EUROMICRO CONF PROC, P221, DOI 10.1109/SEAA51224.2020.00046
   Mann A., 2018 STATE DEVOPS RE
   Melo C., 2015, THESIS USAO PAULO SA
   Nagappan N, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P521, DOI 10.1145/1368088.1368160
   Nybom K., 2016, INT C AG SOFTW DEV, P131, DOI [10.1007/978-3-319-33515-5_11, DOI 10.1007/978-3-319-33515-5_11]
   Oliveira N, 2012, AUTOMATED ORG DEV ST
   PINFIELD LT, 1986, ADMIN SCI QUART, V31, P365, DOI 10.2307/2392828
   PUGH DS, 1969, ADMIN SCI QUART, V14, P115, DOI 10.2307/2391367
   Ralph P, 2019, IEEE T SOFTWARE ENG, V45, P712, DOI 10.1109/TSE.2018.2796554
   Saldan J., 2015, CODING MANUAL QUALIT
   Seaman CB, 1998, IEEE T SOFTWARE ENG, V24, P559, DOI 10.1109/32.708569
   Shahin M., 2017, P 21 INT C EV ASS SO, P384
   Shahin M, 2020, 2020 IEEE/ACM INTERNATIONAL CONFERENCE ON SOFTWARE AND SYSTEM PROCESSES, ICSSP, P175, DOI 10.1145/3379177.3388891
   Sirmon DG, 2011, J MANAGE, V37, P1390, DOI 10.1177/0149206310385695
   Skelton M., 2019, Team Topologies: Organizing Business and Technology Teams for Fast Flow
   Skelton M., DEVOPS TOPOLOGIES
   Sosa ME, 2004, MANAGE SCI, V50, P1674, DOI 10.1287/mnsc.1040.0289
   Steinmacher I, 2016, PROC INT CONF SOFTW, P273, DOI 10.1145/2884781.2884806
   Stol KJ, 2018, ACM T SOFTW ENG METH, V27, DOI 10.1145/3241743
   Stol KJ, 2016, PROC INT CONF SOFTW, P120, DOI 10.1145/2884781.2884833
   Stoner J F., 1995, Administracao
   Strauss P, 2019, 2019 ACM IEEE INT S, P1, DOI DOI 10.1109/ESEM.2019.8870192
   Tamburri DA, 2013, ACM COMPUT SURV, V46, DOI 10.1145/2522968.2522971
   Tamburri DA, 2023, IEEE T SOFTWARE ENG, V49, P325, DOI 10.1109/TSE.2022.3150415
   van Waardenburg G, 2013, INFORM SOFTWARE TECH, V55, P2154, DOI 10.1016/j.infsof.2013.07.012
   Waterman M. G., 2014, THESIS VICTORIA U WE
   Waterman M, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P347, DOI 10.1109/ICSE.2015.54
   Woods E, 2016, IEEE SOFTWARE, V33, P20, DOI 10.1109/MS.2016.86
   Yeatts D.E., 1998, High-performing self-managed work teams: A comparison of theory to practice
   Yin R. K., 2009, CASE STUDY RES DESIG, V4th ed.
NR 57
TC 0
Z9 0
U1 3
U2 7
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD APR 1
PY 2023
VL 49
IS 4
BP 1898
EP 1911
DI 10.1109/TSE.2022.3199169
PG 14
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA E9NM9
UT WOS:000978723600027
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Mastropaolo, A
   Cooper, N
   Palacio, DN
   Scalabrino, S
   Poshyvanyk, D
   Oliveto, R
   Bavota, G
AF Mastropaolo, Antonio
   Cooper, Nathan
   Palacio, David Nader
   Scalabrino, Simone
   Poshyvanyk, Denys
   Oliveto, Rocco
   Bavota, Gabriele
TI Using Transfer Learning for Code-Related Tasks
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Deep learning; Deep learning; empirical software engineering; empirical
   software engineering
ID ERROR
AB Deep learning (DL) techniques have been used to support several code-related tasks such as code summarization and bug-fixing. In particular, pre-trained transformer models are on the rise, also thanks to the excellent results they achieved in Natural Language Processing (NLP) tasks. The basic idea behind these models is to first pre-train them on a generic dataset using a self-supervised task (e.g., filling masked words in sentences). Then, these models are fine-tuned to support specific tasks of interest (e.g., language translation). A single model can be fine-tuned to support multiple tasks, possibly exploiting the benefits of transfer learning. This means that knowledge acquired to solve a specific task (e.g., language translation) can be useful to boost performance on another task (e.g., sentiment classification). While the benefits of transfer learning have been widely studied in NLP, limited empirical evidence is available when it comes to code-related tasks. In this paper, we assess the performance of the Text-To-Text Transfer Transformer (T5) model in supporting four different code-related tasks: (i) automatic bug-fixing, (ii) injection of code mutants, (iii) generation of assert statements, and (iv) code summarization. We pay particular attention in studying the role played by pre-training and multi-task fine-tuning on the model's performance. We show that (i) the T5 can achieve better performance as compared to state-of-the-art baselines; and (ii) while pre-training helps the model, not all tasks benefit from a multi-task fine-tuning.
C1 [Mastropaolo, Antonio; Bavota, Gabriele] Univ Svizzera italiana, SEART Software Inst, CH-6900 Lugano, Switzerland.
   [Cooper, Nathan; Palacio, David Nader; Poshyvanyk, Denys] SEMERU William & Mary, Williamsburg, VA 23187 USA.
   [Scalabrino, Simone; Oliveto, Rocco] Univ Molise, I-86100 Campobasso, CB, Italy.
C3 Universita della Svizzera Italiana; University of Molise
RP Bavota, G (corresponding author), Univ Svizzera italiana, SEART Software Inst, CH-6900 Lugano, Switzerland.
EM antonio.mastropaolo@usi.ch; nacooper01@email.wm.edu;
   danaderpalacio@email.wm.edu; simone.scalabrino@unimol.it;
   denys@cs.wm.edu; rocco.oliveto@unimol.it; gabriele.bavota@usi.ch
RI Nader Palacio, David A./KLD-9270-2024
OI Nader Palacio, David A./0000-0001-6166-7595; Mastropaolo,
   Antonio/0000-0002-7965-7712; Poshyvanyk, Denys/0000-0002-5626-7586;
   Scalabrino, Simone/0000-0003-1764-9685; BAVOTA,
   Gabriele/0000-0002-2216-3148
FU European Research Council [851720]; NSF [CCF-1955853, CCF-1815186,
   CCF-2007246]; European Research Council (ERC) [851720] Funding Source:
   European Research Council (ERC)
FX This work was supported in part by the European Research Council under
   theEuropean Union's Horizon 2020 research and innovation programme
   underGrant 851720. The W&M team was supported in part by the NSF
   underGrants CCF-1955853, CCF-1815186, and CCF-2007246
CR Allamanis M, 2016, PR MACH LEARN RES, V48
   Alon U, 2020, Arxiv, DOI arXiv:1910.00577
   Nguyen AT, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE COMPANION 2014), P544, DOI 10.1145/2591062.2591072
   [Anonymous], 2013, EMNLP
   [Anonymous], Replication package of this study
   [Anonymous], UT FAST TEST TRANSF
   [Anonymous], 2016, PIT REAL WORLD MUT T
   Arivazhagan N, 2019, Arxiv, DOI arXiv:1907.05019
   Bader J, 2019, P ACM PROGRAM LANG, V3, DOI 10.1145/3360585
   Bahdanau D, 2016, Arxiv, DOI [arXiv:1409.0473, 10.48550/arXiv.1409.0473]
   Barr ET, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P306, DOI 10.1145/2635868.2635898
   Boulanger-Lewandowski N., 2013, ISMIR, P335, DOI 10.5281/zenodo.1418319
   Brody S, 2020, Arxiv, DOI arXiv:2005.13209
   Brown DB, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P511, DOI 10.1145/3106237.3106280
   Carzaniga A, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P782, DOI 10.1109/ICSE.2013.6606624
   Caswell I., 2020, Recent advances in google translate
   Chen ZM, 2021, IEEE T SOFTWARE ENG, V47, P1943, DOI 10.1109/TSE.2019.2940179
   Cho K., 2014, PROCS C EMPIRICAL ME, P1724, DOI DOI 10.3115/V1/D14-1179
   Ciniselli M, 2022, IEEE T SOFTWARE ENG, V48, P4818, DOI 10.1109/TSE.2021.3128234
   Falleri Jean-Remy, 2014, P 29 ACM IEEE INT C, P313
   Fraser Gordon, 2011, PROC 19 ACM SIGSOFT, P416, DOI 10.1145/2025113.2025179
   Gabel M, 2010, 18 ACM SIGSOFT INT S, P147
   Graves A, 2012, Arxiv, DOI arXiv:1211.3711
   Haiduc S., 2010, Proceedings 17th Working Conference on Reverse Engineering (WCRE 2010), P35, DOI 10.1109/WCRE.2010.13
   Haque S, 2020, IEEE WORK CONF MIN S, P300, DOI 10.1145/3379597.3387449
   Hata H, 2019, Arxiv, DOI arXiv:1812.07170
   Nguyen HA, 2013, IEEE INT CONF AUTOM, P180, DOI 10.1109/ASE.2013.6693078
   HOLM S, 1979, SCAND J STAT, V6, P65
   Howard J, 2018, Arxiv, DOI [arXiv:1801.06146, DOI 10.48550/ARXIV.1801.06146, 10.48550/arXiv.1801.06146]
   Hu X, 2018, INT C PROGRAM COMPRE, P200, DOI 10.1145/3196321.3196334
   Husain H, 2020, Arxiv, DOI arXiv:1909.09436
   Iyer S, 2016, PROCEEDINGS OF THE 54TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, VOL 1, P2073
   Jaffe A, 2018, INT C PROGRAM COMPRE, P20, DOI 10.1145/3196321.3196330
   Jiang SY, 2017, IEEE INT CONF AUTOM, P135, DOI 10.1109/ASE.2017.8115626
   Karampatsis RM, 2019, Arxiv, DOI arXiv:1903.05734
   Kim S, 2021, Arxiv, DOI arXiv:2003.13848
   Kudo T, 2018, Arxiv, DOI [arXiv:1808.06226, 10.48550/arXiv.1808.06226]
   Kudo Taku, 2018, arXiv
   Le Goues C, 2012, IEEE T SOFTWARE ENG, V38, P54, DOI 10.1109/TSE.2011.104
   Le Goues C, 2012, PROC INT CONF SOFTW, P3, DOI 10.1109/ICSE.2012.6227211
   LeClair A, 2019, PROC INT CONF SOFTW, P795, DOI 10.1109/ICSE.2019.00087
   LEVENSHT.VI, 1965, DOKL AKAD NAUK SSSR+, V163, P845
   Lin CY, 2004, ROUGE: A Package for Automatic Evaluation of Summaries, P74, DOI DOI 10.1253/JCJ.34.1213
   Liu ZX, 2018, IEEE INT CONF AUTOM, P373, DOI 10.1145/3238147.3238190
   Martinez M, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE COMPANION 2014), P492, DOI 10.1145/2591062.2591114
   Mastropaolo A, 2021, PROC IEEE INT CONF S, P159, DOI 10.1109/ICSME52107.2021.00021
   Mastropaolo A, 2021, PROC INT CONF SOFTW, P336, DOI 10.1109/ICSE43902.2021.00041
   McBurney PW, 2016, IEEE T SOFTWARE ENG, V42, P103, DOI 10.1109/TSE.2015.2465386
   McNemar Q, 1947, PSYCHOMETRIKA, V12, P153, DOI 10.1007/BF02295996
   Mesbah A, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P925, DOI 10.1145/3338906.3340455
   Moran K, 2020, PROC INT CONF SOFTW, P873, DOI 10.1145/3377811.3380418
   Moreno L, 2013, CONF PROC INT SYMP C, P23, DOI 10.1109/ICPC.2013.6613830
   Namavar M, 2022, Arxiv, DOI arXiv:2110.14081
   Nguyen A.T., 2013, P 2013 9 JOINT M FDN, P651
   Oda Y, 2015, IEEE INT CONF AUTOM, P574, DOI 10.1109/ASE.2015.36
   Pacheco Carlos, 2007, COMPANION 22 ACM SIG, P815, DOI DOI 10.1145/1297846.1297902
   Papineni K, 2002, 40TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, PROCEEDINGS OF THE CONFERENCE, P311, DOI 10.3115/1073083.1073135
   Pierret D, 2009, INT C PROGRAM COMPRE, P228, DOI 10.1109/ICPC.2009.5090047
   Qusef A, 2014, J SYST SOFTWARE, V88, P147, DOI 10.1016/j.jss.2013.10.019
   Raffel Colin, 2019, Exploring the limits of transfer learning with a unified text-to-text transformer
   Rahmani K, 2021, P ACM PROGRAM LANG, V5, DOI 10.1145/3485535
   Raychev V, 2014, ACM SIGPLAN NOTICES, V49, P419, DOI [10.1145/2594291.2594321, 10.1145/2666356.2594321]
   Robbes R, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: NEW IDEAS AND EMERGING RESULTS (ICSE-NIER 2019), P29, DOI 10.1109/ICSE-NIER.2019.00016
   Rodeghero P, 2017, PROC INT CONF SOFTW, P49, DOI 10.1109/ICSE.2017.13
   Shamshiri S, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P1038, DOI 10.1145/2786805.2803196
   Sidiroglou-Douskos S, 2015, ACM SIGPLAN NOTICES, V50, P43, DOI [10.1145/2813885.2737988, 10.1145/2737924.2737988]
   Sridhara G, 2011, CONF PROC INT SYMP C, P71, DOI 10.1109/ICPC.2011.28
   Sridhara G, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P101, DOI 10.1145/1985793.1985808
   Sutskever I, 2014, ADV NEUR IN, V27
   Svyatkovskiy A, 2020, Arxiv, DOI arXiv:2005.08025
   TATE RF, 1954, ANN MATH STAT, V25, P603, DOI 10.1214/aoms/1177728730
   Tufano M, 2020, Arxiv, DOI [arXiv:2009.05634, 10.1145/3524481, DOI 10.1145/3524481]
   Tufano M, 2019, PROC IEEE INT CONF S, P301, DOI 10.1109/ICSME.2019.00046
   Tufano M, 2019, ACM T SOFTW ENG METH, V28, DOI 10.1145/3340544
   Tufano M, 2019, PROC INT CONF SOFTW, P25, DOI 10.1109/ICSE.2019.00021
   Tufano M, 2018, IEEE WORK CONF MIN S, P542, DOI 10.1145/3196398.3196431
   Tufano R., 2021, PROC IEEEACM 44 INT, P1479
   Tufano R, 2021, PROC INT CONF SOFTW, P163, DOI 10.1109/ICSE43902.2021.00027
   Vasilescu B, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P683, DOI 10.1145/3106237.3106289
   Vaswani A, 2017, ADV NEUR IN, V30
   Watson C, 2022, ACM T SOFTW ENG METH, V31, DOI 10.1145/3485275
   Watson C, 2020, PROC INT CONF SOFTW, P1398, DOI 10.1145/3377811.3380429
   White M, 2019, 2019 IEEE 26TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER), P479, DOI [10.1109/saner.2019.8668043, 10.1109/SANER.2019.8668043]
   White M, 2016, IEEE INT CONF AUTOM, P87, DOI 10.1145/2970276.2970326
   White M, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P334, DOI 10.1109/MSR.2015.38
   Yang YM, 2020, Arxiv, DOI arXiv:2011.14597
   Zafar S, 2019, INT SYMP EMP SOFTWAR, P59, DOI 10.1109/esem.2019.8870174
NR 87
TC 11
Z9 11
U1 2
U2 10
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD APR 1
PY 2023
VL 49
IS 4
BP 1580
EP 1598
DI 10.1109/TSE.2022.3183297
PG 19
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA E9NM9
UT WOS:000978723600011
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Sun, JL
   Su, T
   Liu, K
   Peng, C
   Zhang, Z
   Pu, GG
   Xie, T
   Su, ZD
AF Sun, Jingling
   Su, Ting
   Liu, Kai
   Peng, Chao
   Zhang, Zhao
   Pu, Geguang
   Xie, Tao
   Su, Zhendong
TI Characterizing and Finding System Setting-Related Defects in Android
   Apps
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Testing; Graphical user interfaces; Correlation; Static analysis; Codes;
   Software development management; Airplanes; Empirical study; system
   settings; Index Terms; Android apps; GUI testing; static analysis
AB Android, the most popular mobile system, offers a number of user-configurable system settings (e.g., network, location, and permission) for controlling devices and apps. Even popular, well-tested apps may fail to properly adapt their behaviors to diverse setting changes, thus frustrating their users. However, there exists no effort to systematically investigate such defects. To this end, we conduct the first large-scale empirical study to understand and characterize these system setting-related defects (in short as "setting defects"), which reside in apps and are triggered by system setting changes. We devote substantial manual effort (over four person-months) to analyze 1,074 setting defects from 180 popular apps on GitHub. We investigate the impact, root causes, and consequences of these setting defects and their correlations. We find that (1) setting defects have a wide impact on apps' correctness with diverse root causes, (2) the majority of these defects ($\approx$approximate to 70.7%) cause non-crashing (logic) failures, and (3) some correlations exist between the setting categories, root causes, and consequences. Motivated and informed by these findings, we propose two bug-finding techniques that can synergistically detect setting defects from both the GUI and code levels. Specifically, at the GUI level, we design and introduce setting-wise metamorphic fuzzing, the first automated dynamic testing technique to detect setting defects (causing crash and non-crashing failures, respectively) for Android apps. We implement this technique as an end-to-end, automated GUI testing tool named SetDroid. At the code level, we distill two major fault patterns and implement a static analysis tool named SetChecker to identify potential setting defects. We evaluate SetDroid and SetChecker on 26 popular, open-source Android apps, and they find 48 unique, previously-unknown setting defects. To date, 35 have been confirmed and 21 have been fixed by app developers. We also apply SetDroid and SetChecker on five highly popular industrial apps, namely WeChat, QQMail, TikTok, CapCut, and AlipayHK, all of which each have billions of monthly active users. SetDroid successfully detects 17 previously unknown setting defects in these apps' latest releases, and all defects have been confirmed and fixed by the app vendors. After that, we collaborate with ByteDance and deploy these two bug-finding techniques internally to stress-test TikTok, one of its major app products. Within a two-month testing campaign, SetDroid successfully finds 53 setting defects, and SetChecker finds 22 ones. So far, 59 have been confirmed and 31 have been fixed. All these defects escaped from prior developer testing. By now, SetDroid has been integrated into ByteDance's official app testing infrastructure named FastBot for daily testing. These results demonstrate the strong effectiveness and practicality of our proposed techniques.
C1 [Sun, Jingling; Su, Ting; Pu, Geguang] East China Normal Univ, Shanghai Key Lab Trustworthy Comp, Shanghai 200050, Peoples R China.
   [Liu, Kai] East China Normal Univ, Shanghai Key Lab Trustworthy Comp, Shanghai, Peoples R China.
   [Peng, Chao; Zhang, Zhao] Bytedance Network Technol, Prod RD & Infrastruct, Beijing 100098, Peoples R China.
   [Xie, Tao] Peking Univ, Key Lab High Confidence Software Technol, Beijing 100871, Peoples R China.
   [Su, Zhendong] Swiss Fed Inst Technol, Dept Comp Sci, Zurich, Switzerland.
C3 East China Normal University; East China Normal University; Peking
   University; Swiss Federal Institutes of Technology Domain; ETH Zurich
RP Su, T; Pu, GG (corresponding author), East China Normal Univ, Shanghai Key Lab Trustworthy Comp, Shanghai 200050, Peoples R China.
EM jingling.sun910@gmail.com; tsu@sei.ecnu.edu.cn;
   liukai.0914@bytedance.com; pengchao.x@bytedance.com;
   zhangzhao.a@bytedance.com; ggpu@sei.ecnu.edu.cn; taoxie@pku.edu.cn;
   zhendong.su@inf.ethz.ch
RI Peng, Chao/JGD-8256-2023; Sun, Jingling/GYR-2603-2022; Liu,
   Kai/IQU-9113-2023
OI Liu, Kai/0000-0002-1556-1068; Su, Zhendong/0000-0002-2970-1391
FU NSFC [62072178]; "Digital Silk Road" Shanghai International Joint Lab of
   Trustworthy Intelligent Software [22510750100]; National Key Research
   and Development Program [2020AAA0107800]; Shanghai Collaborative
   Innovation Center of Trusted Industry Internet Software; National
   Natural Science Foundation of China [62161146003]; Tencent
   Foundation/XPLORER PRIZE; Google Faculty Research Award
FX The work of Ting Su was supported in part by NSFC under Grant 62072178,
   in part by the "Digital Silk Road" Shanghai International Joint Lab of
   Trustworthy Intelligent Software under Grant 22510750100. The work of
   Geguang Pu was supported in part by National Key Research and
   Development Program under Grant 2020AAA0107800, in part by the Shanghai
   Collaborative Innovation Center of Trusted Industry Internet Software.
   The work of Tao Xie was supported in part by the National Natural
   Science Foundation of China under Grant 62161146003, and in part by the
   Tencent Foundation/XPLORER PRIZE. The work of Zhendong Su and Ting Su
   were supported in part by a Google Faculty Research Award. Recommended
   for acceptance by Dr. N. Meng.
CR A. Team, 2022, ANDR DEV DOC
   A. Team, 2022, ALIPAYHK
   A. Team, 2022, ANK
   A. Team, 2022, REQ APP PERM
   A. Team, 2022, ANDROIDHELP
   Aho A. V., 2003, COMPILERS PRINC TECH
   Alshayban A, 2020, PROC INT CONF SOFTW, P1323, DOI 10.1145/3377811.3380392
   Amalfitano D, 2018, SOFTW TEST VERIF REL, V28, DOI 10.1002/stvr.1654
   [Anonymous], 2015, P 2015 INT S SOFTWAR, P83
   [Anonymous], 2022, SETT DEF FUZZ
   Azim T, 2013, ACM SIGPLAN NOTICES, V48, P641, DOI [10.1145/2509136.2509549, 10.1145/2544173.2509549]
   C. Team, 2022, COMM
   C. Team, 2022, CAPCUT
   C. Team, 2022, CLOV
   Cai TQ, 2020, INT WORKSH AUTOMAT, P93, DOI 10.1145/3387903.3389308
   Chen TY, 2020, Arxiv, DOI [arXiv:2002.12543, DOI 10.48550/ARXIV.2002.12543]
   Choudhary SR, 2015, IEEE INT CONF AUTOM, P429, DOI 10.1109/ASE.2015.89
   Dilhara M, 2018, 2018 IEEE/ACM 5TH INTERNATIONAL CONFERENCE ON MOBILE SOFTWARE ENGINEERING AND SYSTEMS (MOBILESOFT), P67, DOI 10.1145/3197231.3197255
   Dong Z, 2020, PROC INT CONF SOFTW, P481, DOI 10.1145/3377811.3380402
   F. Team, 2022, FASTBOT 2 0
   F. Team, 2022, FROST
   Fan LL, 2018, IEEE INT CONF AUTOM, P486, DOI 10.1145/3238147.3238170
   Fan LL, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P408, DOI 10.1145/3180155.3180222
   Fang ZR, 2016, ASIA CCS'16: PROCEEDINGS OF THE 11TH ACM ASIA CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P747, DOI 10.1145/2897845.2897914
   Fazzini M, 2017, IEEE INT CONF AUTOM, P308, DOI 10.1109/ASE.2017.8115644
   fpernice518, 2018, NEXTCLOUD ISS 2979
   G. Team, 2022, GITHUB REST API
   Gu TX, 2019, PROC INT CONF SOFTW, P269, DOI 10.1109/ICSE.2019.00042
   Guo WN, 2020, PROC IEEE INT CONF S, P557, DOI 10.1109/ICSME46990.2020.00059
   Haffenloher, 2017, SIGN ISS 5353
   Halin A, 2019, EMPIR SOFTW ENG, V24, P674, DOI 10.1007/s10664-018-9635-4
   Hu JJ, 2018, IEEE INT CONF AUTOM, P702, DOI 10.1145/3238147.3238180
   Jha AK, 2017, IEEE WORK CONF MIN S, P25, DOI 10.1109/MSR.2017.41
   K. Team, 2022, K 9
   Kong PF, 2021, AUTOMAT SOFTW ENG, V28, DOI 10.1007/s10515-021-00290-1
   Kong PF, 2019, PROCEEDINGS OF THE 28TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA '19), P78, DOI 10.1145/3293882.3330572
   Kong PF, 2019, IEEE T RELIAB, V68, P45, DOI 10.1109/TR.2018.2865733
   Kowalczyk E., 2018, P 1 INT WORKSHOP ADV, P1
   L. Team, 2022, US
   Langid Team, 2022, LANG
   Li L, 2017, INFORM SOFTWARE TECH, V88, P67, DOI 10.1016/j.infsof.2017.04.001
   Li YC, 2017, PROC IEEE ACM INT C, P23, DOI 10.1109/ICSE-C.2017.8
   Lillack Max, 2014, Proceedings of the 29th ACM/IEEE International Conference on Automated Software Engineering, P445, DOI 10.1145/2642937.2643001
   Linares-Vásquez M, 2017, PROC IEEE INT CONF S, P399, DOI 10.1109/ICSME.2017.27
   Lu Y, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P268, DOI 10.1145/3338906.3338980
   M. Team, 2022, ANDR MONK
   malinajirka, 2019, WORDPRESS ISS 10096
   Mao K., 2016, P 25 INT S SOFTW TES, P94
   Medeiros F, 2016, PROC INT CONF SOFTW, P643, DOI 10.1145/2884781.2884793
   Minxue Pan, 2020, ISSTA '20: Proceedings of the 29th ACM SIGSOFT International Symposium on Software Testing and Analysis, P153, DOI 10.1145/3395363.3397354
   Mirzaei N, 2015, 2015 IEEE 26TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING (ISSRE), P461, DOI 10.1109/ISSRE.2015.7381839
   mzorz, 2017, WORDPRESS ISS 6026
   N. Team, 2022, NEXTCLOUD
   O. Team, 2022, OP
   O. Team, 2022, OPENFOODFACTS
   O. Team, 2022, ON
   pcqpcq, 2022, OP ANDR APPS
   Q. Team, 2022, QQMAIL
   Riganelli Oliviero, 2020, ISSTA '20: Proceedings of the 29th ACM SIGSOFT International Symposium on Software Testing and Analysis, P141, DOI 10.1145/3395363.3397379
   S. O. Team, 2022, STACK OV
   S. Team, 2022, SIGNAL
   S. Team, 2022, STATUS
   S. Team, 2022, US
   S. Team, 2022, SYNCTH
   Sadeghi A, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P220, DOI 10.1145/3106237.3106250
   Souto S, 2017, PROC INT CONF SOFTW, P632, DOI 10.1109/ICSE.2017.64
   Su T, 2021, PROCEEDINGS OF THE 29TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '21), P119, DOI 10.1145/3468264.3468620
   Su T, 2022, IEEE T SOFTWARE ENG, V48, P1115, DOI 10.1109/TSE.2020.3013438
   Su T, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P245, DOI 10.1145/3106237.3106298
   Su T, 2016, 2016 IEEE/ACM 38TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING COMPANION (ICSE-C), P689, DOI 10.1145/2889160.2891043
   Sun JL, 2021, ISSTA '21: PROCEEDINGS OF THE 30TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P204, DOI 10.1145/3460319.3464806
   T. Team, 2022, TIKTOK
   Timotk, 2017, SIGN ISS 6447
   Tramontana P, 2019, SOFTWARE QUAL J, V27, P149, DOI 10.1007/s11219-018-9418-6
   uiautomator2 Team, 2022, uiautomator2
   W. Team, 2022, WECHAT
   W. Team, 2022, WORDPRESS
   Wang WY, 2018, IEEE INT CONF AUTOM, P738, DOI 10.1145/3238147.3240465
   Wang Y, 2023, IEEE T SOFTWARE ENG, V49, P185, DOI 10.1109/TSE.2022.3148258
   Xu TY, 2016, PROCEEDINGS OF OSDI'16: 12TH USENIX SYMPOSIUM ON OPERATING SYSTEMS DESIGN AND IMPLEMENTATION, P619
   Yin ZN, 2011, SOSP 11: PROCEEDINGS OF THE TWENTY-THIRD ACM SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES, P159
   Zhang J, 2008, LECT NOTES COMPUT SC, V4171, P539
   Zhang S, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P152, DOI 10.1145/2568225.2568251
NR 83
TC 3
Z9 3
U1 0
U2 4
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD APR 1
PY 2023
VL 49
IS 4
BP 2941
EP 2963
DI 10.1109/TSE.2023.3236449
PG 23
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA E9NM9
UT WOS:000978723600086
DA 2024-07-18
ER

PT J
AU Viganò, E
   Cornejo, O
   Pastore, F
   Briand, LC
AF Vigano, Enrico
   Cornejo, Oscar
   Pastore, Fabrizio
   Briand, Lionel C.
TI Data-Driven Mutation Analysis for Cyber-Physical Systems
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Software; Interoperability; Unified modeling language; Analytical
   models; Data models; Small satellites; Computational modeling;
   Cyber-physical systems; CPS interoperability; integration testing;
   mutation analysis
ID GENERATION
AB Cyber-physical systems (CPSs) typically consist of a wide set of integrated, heterogeneous components; consequently, most of their critical failures relate to the interoperability of such components. Unfortunately, most CPS test automation techniques are preliminary and industry still heavily relies on manual testing. With potentially incomplete, manually-generated test suites, it is of paramount importance to assess their quality. Though mutation analysis has demonstrated to be an effective means to assess test suite quality in some specific contexts, we lack approaches for CPSs. Indeed, existing approaches do not target interoperability problems and cannot be executed in the presence of black-box or simulated components, a typical situation with CPSs. In this article, we introduce data-driven mutation analysis, an approach that consists in assessing test suite quality by verifying if it detects interoperability faults simulated by mutating the data exchanged by software components. To this end, we describe a data-driven mutation analysis technique (DaMAT) that automatically alters the data exchanged through data buffers. Our technique is driven by fault models in tabular form where engineers specify how to mutate data items by selecting and configuring a set of mutation operators. We have evaluated DaMAT with CPSs in the space domain; specifically, the test suites for the software systems of a microsatellite and nanosatellites launched on orbit last year. Our results show that the approach effectively detects test suite shortcomings, is not affected by equivalent and redundant mutants, and entails acceptable costs.
C1 [Vigano, Enrico; Cornejo, Oscar; Pastore, Fabrizio; Briand, Lionel C.] Univ Luxembourg, SnT Ctr Secur Reliabil & Trust, Esch Sur Alzette 4365, Luxembourg.
   [Briand, Lionel C.] Univ Ottawa, Sch EECS, Ottawa, ON K1N 6N5, Canada.
C3 University of Luxembourg; University of Ottawa
RP Pastore, F (corresponding author), Univ Luxembourg, SnT Ctr Secur Reliabil & Trust, Esch Sur Alzette 4365, Luxembourg.
EM enrico.vigano@uni.lu; oscar.cornejo@uni.lu; fabrizio.pastore@uni.lu;
   lionel.briand@uni.lu
RI Pastore, Fabrizio/ABY-9262-2022
OI Pastore, Fabrizio/0000-0003-3541-3641; Briand,
   Lionel/0000-0002-1393-1010
FU European Space Agency [ITT-1-9873/FAQAS]; European Research Council
   (ERC); European Union's Horizon 2020 research and innovation programme
   [694277]; NSERC Discovery and Canada Research Chair programs
FX This work was supported in part by the European Space Agency under Grant
   ITT-1-9873/FAQAS, in part by the European Research Council (ERC), in
   part by the European Union's Horizon 2020 research and innovation
   programme under Grant 694277, and in part by NSERC Discovery and Canada
   Research Chair programs.
CR Aichernig B, 2015, IEEE ICST WORKSHOP
   Ammann Paul, 2008, Introduction to software testing, V1st
   Andrews JH, 2005, PROC INT CONF SOFTW, P402, DOI 10.1145/1062455.1062530
   [Anonymous], 2008, P OSDI
   Asadollah SA, 2015, LECT NOTES COMPUT SC, V9447, P194, DOI 10.1007/978-3-319-25945-1_12
   Bai XY, 2007, PROC ANNU SIMUL SYMP, P73, DOI 10.1109/ANSS.2007.30
   Baker R, 2013, IEEE T SOFTWARE ENG, V39, P787, DOI 10.1109/TSE.2012.56
   BARTON JH, 1990, IEEE T COMPUT, V39, P575, DOI 10.1109/12.54853
   Beller M, 2021, 2021 IEEE/ACM 43RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE (ICSE-SEIP 2021), P268, DOI 10.1109/ICSE-SEIP52600.2021.00036
   Belli F, 2016, SCI COMPUT PROGRAM, V120, P25, DOI 10.1016/j.scico.2016.01.003
   Bounimova E, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P122, DOI 10.1109/ICSE.2013.6606558
   Chekam TT, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P1080, DOI 10.1145/3338906.3341180
   Cornejo O, 2022, IEEE T SOFTWARE ENG, V48, P3913, DOI 10.1109/TSE.2021.3107680
   Davoli F, 2019, INT J SATELL COMM N, V37, P343, DOI 10.1002/sat.1277
   Dawson S, 1996, DIG PAP INT SYMP FAU, P404, DOI 10.1109/FTCS.1996.534626
   Delamaro ME, 2014, 2014 IEEE SEVENTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST), P11, DOI 10.1109/ICST.2014.12
   Delamaro ME, 2014, 2014 IEEE SEVENTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST), P203, DOI 10.1109/ICST.2014.33
   Delamaro ME, 2001, IEEE T SOFTWARE ENG, V27, P228, DOI 10.1109/32.910859
   Delgado-Pérez P, 2018, IEEE T RELIAB, V67, P1406, DOI 10.1109/TR.2018.2864678
   Denisov A, 2018, IEEE ICST WORKSHOP, P25, DOI 10.1109/ICSTW.2018.00024
   Devroey X, 2016, PROC INT CONF SOFTW, P655, DOI 10.1145/2884781.2884821
   Di Nardo D., 2015, ICST'15, P1
   Di Nardo D, 2015, IEEE INT CONF AUTOM, P126, DOI 10.1109/ASE.2015.13
   ESA, 2020, SNAP-ESA Sentinel Application Platform
   European Cooperation for Space Standardization, 2009, ECSSEST40C
   European Cooperation for Space Standardization, 2017, ECSSQST80CREV1
   European Space Agency, 2020, ESA VEG LAUNCH
   Ghosh AK, 1998, NINTH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P231, DOI 10.1109/ISSRE.1998.730886
   Givehchi O, 2017, IEEE T IND INFORM, V13, P3370, DOI 10.1109/TII.2017.2740434
   Godefroid P, 2012, COMMUN ACM, V55, P40, DOI 10.1145/2093548.2093564
   Godefroid P, 2008, PLDI'08: PROCEEDINGS OF THE 2008 SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN & IMPLEMENTATION, P206, DOI 10.1145/1375581.1375607
   Gopinath R, 2015, 2015 IEEE 26TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING (ISSRE), P216, DOI 10.1109/ISSRE.2015.7381815
   Grechanik M, 2016, 2016 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY AND SECURITY (QRS 2016), P353, DOI 10.1109/QRS.2016.47
   Guizzo G, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P1127, DOI 10.1145/3368089.3409742
   Harman Mark, 2010, Proceedings of the IEEE Third International Conference on Software Testing Verification and Validation - Workshops (ICSTW 2010), P80, DOI 10.1109/ICSTW.2010.13
   He NN, 2011, DES AUT CON, P224
   Isasi Y., 2019, ONL P SIM EGSE SPAC
   Jia Y, 2011, IEEE T SOFTWARE ENG, V37, P649, DOI 10.1109/TSE.2010.62
   Jia Yue, 2016, P 25 INT S SOFTWARE, P354
   Jiang Y, 2005, PROC IEEE INT CONF S, P483
   Jirkovsky V, 2017, IEEE T IND INFORM, V13, P660, DOI 10.1109/TII.2016.2596101
   Khaitan SK, 2015, IEEE SYST J, V9, P350, DOI 10.1109/JSYST.2014.2322503
   Kintis M, 2018, IEEE T SOFTWARE ENG, V44, P308, DOI 10.1109/TSE.2017.2684805
   LLVM, 2021, LLVM COMPILER INFRAS
   LuxSpace, 2020, ESAIL MAR MICR
   Mateo Pedro Reales, 2010, Proceedings of the IEEE Third International Conference on Software Testing Verification and Validation - Workshops (ICSTW 2010), P110, DOI 10.1109/ICSTW.2010.18
   Matinnejad R, 2019, IEEE T SOFTWARE ENG, V45, P919, DOI 10.1109/TSE.2018.2811489
   NASA, 1998, MARS CLIMATE ORBITER
   Natella R, 2015, ACM COMPUT SURV, V48, DOI 10.1145/2841425
   *OASIS, 2007, OASIS WEB SERV BUS P
   Offutt A. J., 1996, ACM Transactions on Software Engineering and Methodology, V5, P99, DOI 10.1145/227607.227610
   Offutt J., 2006, 2 WORKSH MUT AN ISSR, P12
   Papadakis M, 2019, ADV COMPUT, V112, P275, DOI 10.1016/bs.adcom.2018.03.015
   Papadakis M, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P537, DOI 10.1145/3180155.3180183
   Peach Tech, 2022, PEACH FUZZER
   Petrovic G, 2018, 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING - SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2018), P163, DOI 10.1145/3183519.3183521
   Ramler R., 2017, P S APPL COMP ACM NE, P1401, DOI [10.1145/3019612.3019830, DOI 10.1145/3019612.3019830]
   Roehm H, 2019, ACM TRANS CYBER-PHYS, V3, DOI 10.1145/3306157
   Seungjae Han, 1995, Proceedings. International Computer Performance and Dependability Symposium (Cat. No.95TH8034), P204, DOI 10.1109/IPDS.1995.395831
   Shin D, 2018, IEEE T SOFTWARE ENG, V44, P914, DOI 10.1109/TSE.2017.2732347
   Tsai TK, 1999, IEEE T COMPUT, V48, P1183, DOI 10.1109/12.811108
   Pham VT, 2016, IEEE INT CONF AUTOM, P543, DOI 10.1145/2970276.2970316
   Vigano E., 2022, REPLICABILITY PACKAG, DOI [10.6084/m9.figshare.21276093, DOI 10.6084/M9.FIGSHARE.21276093]
   Vigano E., 2022, DAMAT SOURCE CODE
   Vigano Enrico, 2022, DAMAT TUTORIAL
   Zhang LM, 2013, IEEE INT CONF AUTOM, P92, DOI 10.1109/ASE.2013.6693070
   Zhu QQ, 2018, 2018 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY AND SECURITY (QRS 2018), P289, DOI 10.1109/QRS.2018.00042
NR 67
TC 1
Z9 1
U1 0
U2 0
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD APR 1
PY 2023
VL 49
IS 4
BP 2182
EP 2201
DI 10.1109/TSE.2022.3213041
PG 20
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA E9NM9
UT WOS:000978723600043
OA Green Published, Green Submitted
DA 2024-07-18
ER

PT J
AU Zhou, ZY
   Yu, HQ
   Fan, GS
   Huang, ZJ
   Yang, K
AF Zhou, Ziyi
   Yu, Huiqun
   Fan, Guisheng
   Huang, Zijie
   Yang, Kang
TI Towards Retrieval-Based Neural Code Summarization: A Meta-Learning
   Approach
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Code summarization; deep learning; information retrieval; meta-learning
AB Code summarization aims to generate code summaries automatically, and has attracted a lot of research interest lately. Recent approaches to it commonly adopt neural machine translation techniques, which train a Seq2Seq model on a large corpus and assume it could work on various new code snippets. However, codes are highly varied in practice due to different domains, businesses or programming styles. Therefore, it is challenging to learn such a variety of patterns into a single model. In this paper, we propose a brand-new framework for code summarization based on meta-learning and code retrieval, named MLCS to tackle this issue. In this framework, the summarization of each target code is formalized as a few-shot learning task, where its similar examples are used as training data and the testing example is itself. We retrieve examples similar to the target code in a rank-and-filter manner. Given a neural code summarizer, we optimize it into a meta-learner via Model-Agnostic Meta-Learning (MAML). During inference, the meta-learner first adapts to the retrieved examples and yields an exclusive model for the target code, and then generates its summary. Extensive experiments on real-world datasets show: (1) Utilizing MLCS, a standard Seq2Seq model is able to outperform previous state-of-the-art approaches, including both neural models and retrieval-based neural models; (2) MLCS can flexibly adapt to existing neural code summarizers without modifying their architecture, and could significantly improve their performance with the relative gain of up to 112.7% on BLEU-4, 23.2% on ROUGE-L, and 31.5% on METEOR; (3) Compared to the existing retrieval-based neural approaches, MLCS can better leverage multiple similar examples, and shows better generalization ability on different retrievers, unseen retrieval corpus and low-frequency words.
C1 [Zhou, Ziyi] East China Univ Sci & Technol, Comp Sci, Shanghai, Peoples R China.
   [Yu, Huiqun] Nanjing Univ, Comp Sci, Nanjing, Peoples R China.
   [Yu, Huiqun] East China Univ Sci & Technol ECUST, Comp Sci, Shanghai, Peoples R China.
   [Yu, Huiqun] Shanghai Jiao Tong Univ, Comp Sci, Shanghai, Peoples R China.
   [Yu, Huiqun] ECUST, Dept Comp Sci & Engn, Comp Sci, Shanghai, Peoples R China.
   [Yu, Huiqun] Florida Int Univ, Sch Comp Sci, Miami, FL 33199 USA.
   [Fan, Guisheng] Anhui Univ Technol, Comp Sci, Maanshan, Anhui, Peoples R China.
   [Fan, Guisheng] East China Univ Sci & Technol ECUST, Comp Sci, Shanghai, Peoples R China.
   [Fan, Guisheng] East China Univ Sci & Technol, Comp Sci, Shanghai, Peoples R China.
   [Fan, Guisheng] East China Univ Sci & Technol, Dept Comp Sci & Engn, Shanghai, Peoples R China.
   [Huang, Zijie] Shanghai Normal Univ, Comp Sci, Shanghai, Peoples R China.
   [Yang, Kang] East China Univ Sci & Technol, Comp Sci, Shanghai, Peoples R China.
C3 East China University of Science & Technology; Nanjing University; East
   China University of Science & Technology; Shanghai Jiao Tong University;
   East China University of Science & Technology; State University System
   of Florida; Florida International University; Anhui University of
   Technology; East China University of Science & Technology; East China
   University of Science & Technology; East China University of Science &
   Technology; Shanghai Normal University; East China University of Science
   & Technology
RP Yu, HQ (corresponding author), Nanjing Univ, Comp Sci, Nanjing, Peoples R China.; Yu, HQ (corresponding author), East China Univ Sci & Technol ECUST, Comp Sci, Shanghai, Peoples R China.; Yu, HQ (corresponding author), Shanghai Jiao Tong Univ, Comp Sci, Shanghai, Peoples R China.; Yu, HQ (corresponding author), ECUST, Dept Comp Sci & Engn, Comp Sci, Shanghai, Peoples R China.; Yu, HQ (corresponding author), Florida Int Univ, Sch Comp Sci, Miami, FL 33199 USA.; Fan, GS (corresponding author), Anhui Univ Technol, Comp Sci, Maanshan, Anhui, Peoples R China.; Fan, GS (corresponding author), East China Univ Sci & Technol ECUST, Comp Sci, Shanghai, Peoples R China.; Fan, GS (corresponding author), East China Univ Sci & Technol, Comp Sci, Shanghai, Peoples R China.; Fan, GS (corresponding author), East China Univ Sci & Technol, Dept Comp Sci & Engn, Shanghai, Peoples R China.
EM zhouziyi@mail.ecust.edu.cn; yhq@ecust.edu.cn; gsfan@ecust.edu.cn;
   hzj@mail.ecust.edu.cn; 15921709583@163.com
RI Huang, Zijie/JUF-4746-2023
OI Huang, Zijie/0000-0002-8911-9889; Zhou, Ziyi/0000-0002-8267-8178
FU National Natural Science Foundation of China [61772200]; Shanghai
   Natural Science Foundation [21ZR1416300]
FX This work was supported by the National Natural Science Foundation of
   China under Grant 61772200, and in part by the Shanghai Natural Science
   Foundation under Grant 21ZR1416300. Recommended for acceptance by Z.
   Jin.
CR Ahmad W., 2020, P 58 ANN M ASS COMPU, P4998, DOI 10.18653/v1/2020.acl-main.449
   Allamams M, 2019, PROCEEDINGS OF THE 2019 ACM SIGPLAN INTERNATIONAL SYMPOSIUM ON NEW IDEAS, NEW PARADIGMS, AND REFLECTIONS ON PROGRAMMING AND SOFTWARE (ONWARD!' 19), P143, DOI 10.1145/3359591.3359735
   Allamanis M, 2016, PR MACH LEARN RES, V48
   Alon U., 2019, PROC 7 INT C LEARN R
   Nguyen AT, 2017, PROC IEEE ACM INT C, P164, DOI 10.1109/ICSE-C.2017.118
   Barone Antonio Valerio Miceli, 2017, P 8 INT JOINT C NAT, V2, P314
   Bojanowski P., 2017, Transactions of the Association for Computational Linguistics, V5, P135, DOI DOI 10.1162/TACLA00051
   Brown T., 2020, P ADV NEUR INF PROC, V33, P1877
   Chen Boxing, 2014, P 9 WORKSHOP STAT MA, P362, DOI DOI 10.3115/V1/W14-3346
   Chen QY, 2018, IEEE INT CONF AUTOM, P826, DOI 10.1145/3238147.3240471
   Chen QY, 2021, ACM T SOFTW ENG METH, V30, DOI 10.1145/3434280
   Cho K., 2014, PROCS C EMPIRICAL ME, P1724, DOI DOI 10.3115/V1/D14-1179
   Cho Kyunghyun, 2014, SYNTAX SEMANTICS STR, P5, DOI [10.3115/v1/w14-4012, 10.3115 /v1/D14-1179, DOI 10.3115/V1/D14-1179]
   Denkowski Michael, 2014, P 9 WORKSH STAT MACH, DOI [10.3115/v1/W14-3348, DOI 10.3115/V1/W14-3348]
   Eddy BP, 2013, CONF PROC INT SYMP C, P13, DOI 10.1109/ICPC.2013.6613829
   Fernandes P., 2019, PROC 7 INT C LEARN R, P1
   Finn C, 2017, PR MACH LEARN RES, V70
   github, 2021, JAV
   Glorot X., 2010, 13 INT C ARTIFICIAL, V9, P249
   Gupta A., 2018, P NIPS, P5307
   Haiduc S., 2010, 2010 32nd International Conference on Software Engineering (ICSE), P223, DOI 10.1145/1810295.1810335
   Haiduc S., 2010, Proceedings 17th Working Conference on Reverse Engineering (WCRE 2010), P35, DOI 10.1109/WCRE.2010.13
   Hochreiter S, 1997, NEURAL COMPUT, V9, P1735, DOI [10.1162/neco.1997.9.1.1, 10.1007/978-3-642-24797-2]
   Hospedales T, 2020, Arxiv, DOI arXiv:2004.05439
   Hu X, 2020, EMPIR SOFTW ENG, V25, P2179, DOI [10.1007/s10664-019-09730-9, 10.1007/978-981-13-8203-1_1]
   Hu X, 2018, PROCEEDINGS OF THE TWENTY-SEVENTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P2269
   Hu X, 2018, INT C PROGRAM COMPRE, P200, DOI 10.1145/3196321.3196334
   Huisman M, 2021, ARTIF INTELL REV, V54, P4483, DOI 10.1007/s10462-021-10004-4
   Iyer S, 2016, PROCEEDINGS OF THE 54TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, VOL 1, P2073
   Kajko-Mattsson M, 2005, EMPIR SOFTW ENG, V10, P31, DOI 10.1023/B:LIDA.0000048322.42751.ca
   Kingma D.P., 2014, ARXIV14126980
   Koch G., 2015, PROC INT C MACH LEAR
   Krippendorff K., 2018, CONTENT ANAL INTRO I
   LeClair A, 2020, INT C PROGRAM COMPRE, P184, DOI 10.1145/3387904.3389268
   LeClair A, 2019, PROC INT CONF SOFTW, P795, DOI 10.1109/ICSE.2019.00087
   Li ZG, 2017, Arxiv, DOI arXiv:1707.09835
   Lin CY, 2004, ROUGE: A Package for Automatic Evaluation of Summaries, P74, DOI DOI 10.1253/JCJ.34.1213
   Liu S., 2021, Retrievalaugmented generation for code summarization via hybrid gnn
   Luong T., 2015, P 2015 C EMP METH NA, DOI [DOI 10.18653/V1/D15-1166, 10.18653/v1/D15-1166]
   McBurney PW, 2016, IEEE T SOFTWARE ENG, V42, P103, DOI 10.1109/TSE.2015.2465386
   Mishra N., 2018, PROC 6 INT C LEARN R
   Moreno L, 2013, CONF PROC INT SYMP C, P23, DOI 10.1109/ICPC.2013.6613830
   Movshovitz-Attias Dana, 2013, ACL
   Munkhdalai Tsendsuren, 2017, Proc Mach Learn Res, V70, P2554
   Nagabandi A., 2019, PROC 7 INT C LEARN R, P1
   Nichol A, 2018, Arxiv, DOI [arXiv:1803.02999, DOI 10.48550/ARXIV.1803.02999]
   NLTK, 2020, US
   Papineni K, 2002, 40TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, PROCEEDINGS OF THE CONFERENCE, P311, DOI 10.3115/1073083.1073135
   Perez-Rua Juan-Manuel, 2020, 2020 IEEE/CVF Conference on Computer Vision and Pattern Recognition (CVPR). Proceedings, P13843, DOI 10.1109/CVPR42600.2020.01386
   Qiao SY, 2018, PROC CVPR IEEE, P7229, DOI 10.1109/CVPR.2018.00755
   Ravi S., 2016, INT C LEARNING REPRE
   Robertson S. E., 1998, PROC 4 TEXT RETRIEVA, P73
   SALTON G, 1975, COMMUN ACM, V18, P613, DOI 10.1145/361219.361220
   Santoro A, 2016, PR MACH LEARN RES, V48
   Satorras V. G., 2018, PROC 6 INT C LEARN R
   Schmidhuber J., 1987, Evolutionary principles in self-referential learning, or on learning how to learn: the meta-meta- ...  hook ...
   Siow Jing Kai, 2021, 9 INT C LEARNING REP
   Snell J, 2017, ADV NEUR IN, V30
   Sridhara G., 2010, P IEEE ACM INT C AUT, P43, DOI DOI 10.1145/1858996.1859006
   Sridhara G, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P101, DOI 10.1145/1985793.1985808
   Srivastava N, 2014, J MACH LEARN RES, V15, P1929
   Sung F, 2018, PROC CVPR IEEE, P1199, DOI 10.1109/CVPR.2018.00131
   Sutskever I, 2014, ADV NEUR IN, V27
   Thrun S, 1998, LEARNING TO LEARN, P3
   Vaswani A, 2017, ADV NEUR IN, V30
   Vinyals O, 2016, 30 C NEURAL INFORM P, V29
   Wan Y, 2018, IEEE INT CONF AUTOM, P397, DOI 10.1145/3238147.3238206
   Wei BL, 2019, ADV NEUR IN, V32
   Wei BL, 2020, IEEE INT CONF AUTOM, P349, DOI 10.1145/3324884.3416578
   Wilcoxon Frank, 1970, SELECTED TABLES MATH, V1, P171, DOI [DOI 10.1002/9780471462422.EOCT, DOI 10.1007/SPRINGERREFERENCE_205698]
   Wong E, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P380, DOI 10.1109/SANER.2015.7081848
   Wong E, 2013, IEEE INT CONF AUTOM, P562, DOI 10.1109/ASE.2013.6693113
   Wu YH, 2016, Arxiv, DOI [arXiv:1609.08144, DOI 10.48550/ARXIV.1609.08144]
   Xia X, 2018, IEEE T SOFTWARE ENG, V44, P951, DOI 10.1109/TSE.2017.2734091
   Xie R, 2021, INT C PROGRAM COMPRE, P138, DOI 10.1109/ICPC52881.2021.00022
   Yao ZY, 2019, WEB CONFERENCE 2019: PROCEEDINGS OF THE WORLD WIDE WEB CONFERENCE (WWW 2019), P2203, DOI 10.1145/3308558.3313632
   Ye W, 2020, WEB CONFERENCE 2020: PROCEEDINGS OF THE WORLD WIDE WEB CONFERENCE (WWW 2020), P2309, DOI 10.1145/3366423.3380295
   Zhang J, 2018, P C N AM CHAPT ASS C, P1325, DOI 10.18653/v1/N18-1120
   Zhang J, 2020, PROC INT CONF SOFTW, P1385, DOI 10.1145/3377811.3380383
NR 79
TC 1
Z9 1
U1 1
U2 1
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD APR 1
PY 2023
VL 49
IS 4
BP 3008
EP 3031
DI 10.1109/TSE.2023.3238161
PG 24
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA E9NM9
UT WOS:000978723600090
DA 2024-07-18
ER

PT J
AU Almendros-Jiménez, JM
   Becerra-Terón, A
   Merayo, MG
   Núñez, M
AF Almendros-Jimenez, Jesus M. M.
   Becerra-Teron, Antonio
   Merayo, Mercedes G. G.
   Nunez, Manuel
TI Using Metamorphic Testing to Improve the Quality of Tags in
   OpenStreetMap
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Tagging; Testing; Urban areas; Geometry; Standards; Spatial databases;
   Rendering (computer graphics); Metamorphic testing; OpenStreetMap;
   quality of maps
AB We present a metamorphic testing approach to validate the information included in OpenStreetMap, a collaborative effort to produce a free map of the world. We focus on the quality of the tags storing the information about the elements of the map. We identified metamorphic relations with the potential to detect different types of tagging errors. In particular, we carefully designed mechanisms to automatically generate follow-up inputs, a fundamental component in the successful application of a metamorphic testing approach. The intrinsic nature of automatically analysing tags implies that we will detect real errors but some false positives as well. In order to obtain a good trade-off between real errors and false positives, we introduce thresholds. Our MRs will raise an error associated with a certain value if, depending on the nature of the MR, we have a certain number of elements (not) fulfilling a given condition. In order to evaluate the goodness and versatility of our framework, we chose four cities in different continents with the goal of analysing very heterogeneous contributors adding information in different languages. The application of this framework to the analysis of the chosen cities revealed errors in all of them and in all the considered categories. In addition, around 66% of the errors found by our MRs in the analysed areas have not been previously reported by Osmose, the de facto standard OSM error checker.
C1 [Almendros-Jimenez, Jesus M. M.; Becerra-Teron, Antonio] Univ Almeria, Dept Informat, Carretera Sacramento S-N, Almeria 04120, Spain.
   [Merayo, Mercedes G. G.; Nunez, Manuel] Univ Complutense Madrid, Inst Knowledge Technol, Madrid 28040, Spain.
C3 Universidad de Almeria; Complutense University of Madrid
RP Núñez, M (corresponding author), Univ Complutense Madrid, Inst Knowledge Technol, Madrid 28040, Spain.
EM jalmen@ual.es; abecerra@ual.es; mgmerayo@fdi.ucm.es; mn@sip.ucm.es
RI Núñez, Manuel/B-6889-2008; Becerra-Teron, Antonio/AAA-2797-2019;
   Almendros Jimenez, Jesus Manuel/F-4584-2018; GARCIA MERAYO, MARIA DE LAS
   MERCEDES/T-4990-2018
OI Núñez, Manuel/0000-0001-9808-6401; Becerra-Teron,
   Antonio/0000-0001-7583-6353; Almendros Jimenez, Jesus
   Manuel/0000-0002-7925-2678; GARCIA MERAYO, MARIA DE LAS
   MERCEDES/0000-0002-4634-4082
FU State Research Agency (AEI) of the Spanish Ministry of Science and
   Innovation [PID2019-104735RB-C42 (SAFER), RTI2018-093608-B-C31 (FAME)];
   Comunidad de Madrid [S2018/TCS-4314]; EIE Funds of the European Union
FX This work was supported in part by the State Research Agency (AEI) of
   the Spanish Ministry of Science and Innovation under Grants
   PID2019-104735RB-C42 (SAFER) and RTI2018-093608-B-C31 (FAME), in part by
   Comunidad de Madrid under Grant S2018/TCS-4314 (FORTE-CM) co-funded by
   EIE Funds of the European Union.
CR Ali AL, 2016, ISPRS INT J GEO-INF, V5, DOI 10.3390/ijgi5060087
   Almendros-Jiménez JM, 2021, INFORM SOFTWARE TECH, V138, DOI 10.1016/j.infsof.2021.106631
   Almendros-Jimenez JM, 2021, HUM-CENT COMPUT INFO, V11, DOI 10.22967/HCIS.2021.11.010
   Almendros-Jiménez JM, 2018, ISPRS INT J GEO-INF, V7, DOI 10.3390/ijgi7080323
   Almendros-Jiménez JM, 2019, COMPUT J, V62, P321, DOI 10.1093/comjnl/bxx079
   Ammann Paul, 2008, Introduction to software testing, V1st
   Arsanjani JJ, 2015, LECT NOTES GEOINF CA, P1, DOI 10.1007/978-3-319-14280-7
   Bamford R, 2009, PROC VLDB ENDOW, V2, P1342, DOI 10.14778/1687553.1687560
   Barron C, 2014, T GIS, V18, P877, DOI 10.1111/tgis.12073
   Basiri A, 2019, INT J GEOGR INF SCI, V33, P1588, DOI 10.1080/13658816.2019.1593422
   Bennett Jane, 2010, OpenStreetMap, P5
   Brown Joshua, 2019, Towards Integrated Web, Mobile, and IoT Technology. Selected and Revised Papers from the Web Technologies Track at SAC 2017 and SAC 2018, and the Software Development for Mobile Devices, Wearables, and the IoT Minitrack at HICSS 2018. Lecture Notes in Business Information Processing (LNBIP 347), P1, DOI 10.1007/978-3-030-28430-5_1
   Brown J, 2018, PROCEEDINGS OF THE 51ST ANNUAL HAWAII INTERNATIONAL CONFERENCE ON SYSTEM SCIENCES (HICSS), P5687
   Chen T. Y., 1998, 17 HONG KONG U SCI T
   Chen TY, 2018, ACM COMPUT SURV, V51, DOI 10.1145/3143561
   Chen TY, 2016, COMPUTER, V49, P48, DOI 10.1109/MC.2016.176
   Chen TY, 2003, INFORM SOFTWARE TECH, V45, P1, DOI 10.1016/S0950-5849(02)00129-5
   Degrossi LC, 2018, T GIS, V22, P542, DOI 10.1111/tgis.12329
   Dyck M., 2014, XQUERY 30 XML QUERY
   Haklay M, 2010, CARTOGR J, V47, P315, DOI 10.1179/000870410X12911304958827
   Hui ZW, 2020, IEEE T RELIAB, V69, P657, DOI 10.1109/TR.2019.2931561
   Jiang MY, 2021, IEEE T RELIAB, V70, P285, DOI 10.1109/TR.2020.3003313
   Kessler C, 2013, LECT NOTES GEOINF CA, P21, DOI 10.1007/978-3-319-00615-4_2
   Lidbury C, 2015, ACM SIGPLAN NOTICES, V50, P65, DOI [10.1145/2737924.2737986, 10.1145/2813885.2737986]
   Liu H, 2014, IEEE T SOFTWARE ENG, V40, P4, DOI 10.1109/TSE.2013.46
   Minghini M., 2019, OPEN GEOSPATIAL DATA, V4, P9, DOI 10.1186/s40965-019-0067-x
   Mocnik FB, 2017, GEO-SPAT INF SCI, V20, P219, DOI 10.1080/10095020.2017.1368193
   Mooney P, 2012, FUTURE INTERNET, V4, P285, DOI 10.3390/fi4010285
   Neis P, 2012, ISPRS INT GEO-INF, V1, P315, DOI 10.3390/ijgi1030315
   Nunez A, 2021, IEEE T RELIAB, V70, P261, DOI 10.1109/TR.2020.3011512
   Olsen M, 2019, IEEE T RELIAB, V68, P91, DOI 10.1109/TR.2018.2850315
   Pesu D, 2018, 2018 IEEE/ACM 3RD INTERNATIONAL WORKSHOP ON METAMORPHIC TESTING (MET 2018), P38, DOI 10.1145/3193977.3193980
   Pugh S, 2019, 2019 IEEE/ACM 4TH INTERNATIONAL WORKSHOP ON METAMORPHIC TESTING (MET 2019), P2, DOI 10.1109/MET.2019.00009
   Segura S, 2020, IEEE SOFTWARE, V37, P46, DOI 10.1109/MS.2018.2875968
   Segura S, 2018, IEEE T SOFTWARE ENG, V44, P1083, DOI 10.1109/TSE.2017.2764464
   Segura S, 2016, IEEE T SOFTWARE ENG, V42, P805, DOI 10.1109/TSE.2016.2532875
   Sehra SS, 2020, T GIS, V24, P44, DOI 10.1111/tgis.12587
   Sehra SS, 2017, FUTURE INTERNET, V9, DOI 10.3390/fi9020015
   Vandecasteele A, 2015, LECT NOTES GEOINF CA, P59, DOI 10.1007/978-3-319-14280-7_4
   Xiao He, 2020, ISSTA '20: Proceedings of the 29th ACM SIGSOFT International Symposium on Software Testing and Analysis, P502, DOI 10.1145/3395363.3397382
   Yan BY, 2019, 2019 IEEE/ACM 4TH INTERNATIONAL WORKSHOP ON METAMORPHIC TESTING (MET 2019), P70, DOI 10.1109/MET.2019.00018
   Zhang H., 2019, CROWDSOURCING CONCEP, P1173
   Zhang M, 2021, INFORM SOFTWARE TECH, V132, DOI 10.1016/j.infsof.2020.106507
   Zhou ZQ, 2021, IEEE T SOFTWARE ENG, V47, P1164, DOI 10.1109/TSE.2019.2915065
   Zhou ZQ, 2020, IEEE T SOFTWARE ENG, V46, P1120, DOI 10.1109/TSE.2018.2876433
   Zhou ZQ, 2016, IEEE T SOFTWARE ENG, V42, P264, DOI 10.1109/TSE.2015.2478001
NR 46
TC 2
Z9 2
U1 2
U2 8
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD FEB 1
PY 2023
VL 49
IS 2
BP 549
EP 563
DI 10.1109/TSE.2022.3156182
PG 15
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 9F0FH
UT WOS:000937151900005
DA 2024-07-18
ER

PT J
AU Perera, A
   Aleti, A
   Turhan, B
   Böhme, M
AF Perera, Anjana
   Aleti, Aldeida
   Turhan, Burak
   Bohme, Marcel
TI An Experimental Assessment of Using Theoretical Defect Predictors to
   Guide Search-Based Software Testing
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Computer bugs; Codes; Test pattern generators; Sorting; Search problems;
   Software testing; Pareto optimization; Search-Based Software Testing;
   Automated Test Generation; Defect Prediction
AB Automated test generators, such as search-based software testing (SBST) techniques are primarily guided by coverage information. As a result, they are very effective at achieving high code coverage. However, is high code coverage alone sufficient to detect bugs effectively? In this paper, we propose a new SBST technique, predictive many objective sorting algorithm (PreMOSA), which augments coverage information with defect prediction information to decide where to increase the test coverage in the class under test (CUT). Through an experimental evaluation using 420 labelled bugs on the Defects4J benchmark and using theoretical defect predictors, we demonstrate the improved effectiveness and efficiency of PreMOSA in detecting bugs when using any acceptable defect predictor, i.e., a defect predictor with recall and precision & ge; 75%, compared to the state-of-the-art dynamic many objective sorting algorithm (DynaMOSA). PreMOSA detects up to 8.3% more labelled bugs on average than DynaMOSA when given a time budget of 2 minutes for test generation per CUT.
C1 [Perera, Anjana; Aleti, Aldeida; Bohme, Marcel] Monash Univ, Fac Informat Technol, Clayton, Vic 3800, Australia.
   [Turhan, Burak] Univ Oulu, Fac Informat Technol & Elect Engn, Oulu 90014, Finland.
C3 Monash University; University of Oulu
RP Perera, A (corresponding author), Monash Univ, Fac Informat Technol, Clayton, Vic 3800, Australia.
EM Anjana.Perera@monash.edu; Aldeida.Aleti@monash.edu;
   Burak.Turhan@oulu.fi; Marcel.Boehme@monash.edu
RI Perera, Anjana/GYA-3893-2022; Turhan, Burak/G-7400-2011; Aleti,
   Aldeida/AAE-8486-2019
OI Turhan, Burak/0000-0003-1511-2163; Aleti, Aldeida/0000-0002-1716-690X
FU Australian Research Council (ARC) [DP210100041]
FX This work was supported in part by Australian Research Council (ARC),
   under Grant DP210100041.
CR Aleti A, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-021-09989-x
   Almasi MM, 2017, 2017 IEEE/ACM 39TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2017), P263, DOI 10.1109/ICSE-SEIP.2017.27
   [Anonymous], 2014, P 29 ACM IEEE INT C, DOI [10.1145/2642937.2643002, DOI 10.1145/2642937.2643002]
   [Anonymous], 2006, ISESE '06: Proceedings of the 5th International Symposium on Empirical Software Engineering. Volume II: Short Papers and Posters, DOI DOI 10.1145/1159733.1159739.
   [Anonymous], 2007, PROMISE 07, DOI DOI 10.1109/PROMISE.2007.10
   [Anonymous], 2008, 2008 ACM IEEE 30 INT
   Arcuri A, 2014, SOFTW TEST VERIF REL, V24, P219, DOI 10.1002/stvr.1486
   Arcuri A, 2013, EMPIR SOFTW ENG, V18, P594, DOI 10.1007/s10664-013-9249-9
   Ayala C, 2022, IEEE T SOFTWARE ENG, V48, P4229, DOI 10.1109/TSE.2021.3113558
   Barr ET, 2015, IEEE T SOFTWARE ENG, V41, P507, DOI 10.1109/TSE.2014.2372785
   Basili VR, 1996, IEEE T SOFTWARE ENG, V22, P751, DOI 10.1109/32.544352
   Caglayan B, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P89, DOI 10.1109/ICSE.2015.138
   Campos J, 2019, 2019 IEEE/ACM 12TH INTERNATIONAL WORKSHOP ON SEARCH-BASED SOFTWARE TESTING (SBST 2019), P29, DOI 10.1109/SBST.2019.00017
   de Freitas P. A. F., 2015, SOFTWARE REPOSITORY
   DEMILLO RA, 1991, IEEE T SOFTWARE ENG, V17, P900, DOI 10.1109/32.92910
   EvoSuite, 2019, EVOSUITE AUT GEN JUN
   Fowler M., 2006, Continuous integration
   Fraser G., 2011, Proceedings of the 11th International Conference on Quality Software (QSIC 2011), P31, DOI 10.1109/QSIC.2011.19
   Fraser G., EVOSUITE AUTOMATIC T
   Fraser G, 2014, ACM T SOFTW ENG METH, V24, DOI 10.1145/2685612
   Fraser G, 2013, IEEE T SOFTWARE ENG, V39, P276, DOI 10.1109/TSE.2012.14
   Fritz CO, 2012, J EXP PSYCHOL GEN, V141, P2, DOI 10.1037/a0024338
   Gay G, 2017, IEEE INT CONF SOFTW, P345, DOI 10.1109/ICST.2017.38
   Giger E, 2012, INT SYMP EMP SOFTWAR, P171, DOI 10.1145/2372251.2372285
   Habib A, 2018, IEEE INT CONF AUTOM, P317, DOI 10.1145/3238147.3238213
   Hall T, 2012, IEEE T SOFTWARE ENG, V38, P1276, DOI 10.1109/TSE.2011.103
   Hata H, 2012, PROC INT CONF SOFTW, P200, DOI 10.1109/ICSE.2012.6227193
   Herbold S., 2021, A Fine-grained Data Set and Analysis of Tangling in Bug Fixing Commits
   Hershkovich E., 2019, PROC 30 INT WORKSHOP
   Hoa Khanh Dam, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P46, DOI 10.1109/MSR.2019.00017
   Hosseini S, 2019, IEEE T SOFTWARE ENG, V45, P111, DOI 10.1109/TSE.2017.2770124
   Jingxiu Yao, 2020, EASE2020. Proceedings of the Evaluation and Assessment in Software Engineering, P120, DOI 10.1145/3383219.3383232
   Just R., 2019, DEFECTS4J DATABASE R
   Just R, 2014, P 2014 INT S SOFTW T, P437, DOI DOI 10.1145/2610384.2628055
   Kim S, 2007, PROC INT CONF SOFTW, P489
   KOREL B, 1990, IEEE T SOFTWARE ENG, V16, P870, DOI 10.1109/32.57624
   Le XBD, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P213, DOI 10.1109/SANER.2016.76
   Lewis C, 2011, Bug prediction at google
   Lewis C, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P372, DOI 10.1109/ICSE.2013.6606583
   Li N, 2017, IEEE T SOFTWARE ENG, V43, P372, DOI 10.1109/TSE.2016.2597136
   Madeiral F, 2019, 2019 IEEE 26TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER), P468, DOI [10.1109/saner.2019.8667991, 10.1109/SANER.2019.8667991]
   McMinn P., 2011, 2011 IEEE Fourth International Conference on Software Testing, Verification and Validation Workshops (ICSTW), P153, DOI 10.1109/ICSTW.2011.100
   Menzies T, 2007, IEEE T SOFTWARE ENG, V33, P2, DOI 10.1109/TSE.2007.256941
   Morell L. J., TR1395 MAR U DEP COM
   MORELL LJ, 1990, IEEE T SOFTWARE ENG, V16, P844, DOI 10.1109/32.57623
   Nagappan N, 2005, PROC INT CONF SOFTW, P284, DOI 10.1145/1062455.1062514
   Nagappan Nachiappan, 2010, Proceedings of the 2010 IEEE 21st International Symposium on Software Reliability Engineering (ISSRE 2010), P309, DOI 10.1109/ISSRE.2010.25
   Offutt A., 1989, AUTOMATIC TEST DATA
   Panichella A., 2015, PROC IEEE 8 INT C SO, P1
   Panichella A, 2018, INFORM SOFTWARE TECH, V104, P236, DOI 10.1016/j.infsof.2018.08.009
   Panichella A, 2018, IEEE T SOFTWARE ENG, V44, P122, DOI 10.1109/TSE.2017.2663435
   Paterson D, 2019, IEEE INT CONF SOFTW, P346, DOI 10.1109/ICST.2019.00041
   Pearson S, 2017, PROC INT CONF SOFTW, P609, DOI 10.1109/ICSE.2017.62
   Perera A, 2021, Arxiv, DOI arXiv:2110.02682
   Perera A, 2020, IEEE INT CONF AUTOM, P448, DOI 10.1145/3324884.3416612
   Rojas JM, 2017, EMPIR SOFTW ENG, V22, P852, DOI 10.1007/s10664-015-9424-2
   Saha RK, 2018, IEEE WORK CONF MIN S, P10, DOI 10.1145/3196398.3196473
   Salahirad A, 2019, SOFTW TEST VERIF REL, V29, DOI 10.1002/stvr.1701
   Shamshiri S, 2015, IEEE INT CONF AUTOM, P201, DOI 10.1109/ASE.2015.86
   Shepperd M, 2014, IEEE T SOFTWARE ENG, V40, P603, DOI 10.1109/TSE.2014.2322358
   Sohn J, 2021, IEEE T SOFTWARE ENG, V47, P1605, DOI 10.1109/TSE.2019.2930977
   Chekam TT, 2020, EMPIR SOFTW ENG, V25, P434, DOI 10.1007/s10664-019-09778-7
   Vargha A, 2000, J EDUC BEHAV STAT, V25, P101, DOI 10.3102/10769986025002101
   Zimmerman T, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P91, DOI 10.1145/1595696.1595713
NR 64
TC 1
Z9 1
U1 5
U2 8
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JAN 1
PY 2023
VL 49
IS 1
BP 131
EP 146
DI 10.1109/TSE.2022.3147008
PG 16
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA L1HD8
UT WOS:001020827200007
OA hybrid, Green Submitted
DA 2024-07-18
ER

PT J
AU Asyrofi, MH
   Yang, Z
   Yusuf, INB
   Kang, HJ
   Thung, F
   Lo, DV
AF Asyrofi, Muhammad Hilmi
   Yang, Zhou
   Yusuf, Imam Nur Bani
   Kang, Hong Jin
   Thung, Ferdian
   Lo, David
TI BiasFinder: Metamorphic Test Generation to Uncover Bias for Sentiment
   Analysis Systems
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Sentiment analysis; test case generation; metamorphic testing; bias;
   fairness bug
AB Artificial intelligence systems, such as Sentiment Analysis (SA) systems, typically learn from large amounts of data that may reflect human bias. Consequently, such systems may exhibit unintended demographic bias against specific characteristics (e.g., gender, occupation, country-of-origin, etc.). Such bias manifests in an SA system when it predicts different sentiments for similar texts that differ only in the characteristic of individuals described. To automatically uncover bias in SA systems, this paper presents BiasFinder, an approach that can discover biased predictions in SA systems via metamorphic testing. A key feature of BiasFinder is the automatic curation of suitable templates from any given text inputs, using various Natural Language Processing (NLP) techniques to identify words that describe demographic characteristics. Next, BiasFinder generates new texts from these templates by mutating words associated with a class of a characteristic (e.g., gender-specific words such as female names, "she", "her"). These texts are then used to tease out bias in an SA system. BiasFinder identifies a bias-uncovering test case (BTC) when an SA system predicts different sentiments for texts that differ only in words associated with a different class (e.g., male vs. female) of a target characteristic (e.g., gender). We evaluate BiasFinder on 10 SA systems and 2 large scale datasets, and the results show that BiasFinder can create more BTCs than two popular baselines. We also conduct an annotation study and find that human annotators consistently think that test cases generated by BiasFinder are more fluent than the two baselines.
C1 [Asyrofi, Muhammad Hilmi; Yang, Zhou; Yusuf, Imam Nur Bani; Kang, Hong Jin; Thung, Ferdian; Lo, David] Singapore Management Univ, Sch Comp & Informat Syst, Singapore 188065, Singapore.
C3 Singapore Management University
RP Thung, F (corresponding author), Singapore Management Univ, Sch Comp & Informat Syst, Singapore 188065, Singapore.
EM mhilmia@smu.edu.sg; zyang@smu.edu.sg; imamy.2020@phdcs.smu.edu.sg;
   hjkang.2018@phdcs.smu.edu.sg; ferdianthung@smu.edu.sg;
   davidlo@smu.edu.sg
RI Thung, Ferdian/AAX-9321-2020; Yang, Zhou/KCY-4504-2024; Lo,
   David/A-2493-2012
OI Lo, David/0000-0002-4367-7201
FU Singapore Ministry of Education(MOE) Academic Research Fund (AcRF) Tier
   1
FX This work was supported in part by the Singapore Ministry of
   Education(MOE) Academic Research Fund (AcRF) Tier 1 grant
CR Abbasi A, 2014, LREC 2014 - NINTH INTERNATIONAL CONFERENCE ON LANGUAGE RESOURCES AND EVALUATION, P823
   Aghajanyan A, 2021, 2021 CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING (EMNLP 2021), P5799
   Altrabsheh N, 2013, FRONT ARTIF INTEL AP, V255, P353, DOI 10.3233/978-1-61499-264-6-353
   Aniche M, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P499, DOI 10.1145/3180155.3180180
   [Anonymous], SAMPL SIZ CALC
   [Anonymous], 2017, ARXIV170702377
   [Anonymous], 2002, P C EMP METH NAT LAN
   Asyrofi Muhammad Hilmi, 2021, ESEC/FSE 2021: Proceedings of the 29th ACM Joint Meeting on European Software Engineering Conference and Symposium on the Foundations of Software Engineering, P1575, DOI 10.1145/3468264.3473124
   Asyrofi MH, 2021, PROC IEEE INT CONF S, P674, DOI 10.1109/ICSME52107.2021.00079
   Asyrofi MH, 2020, PROC IEEE INT CONF S, P640, DOI 10.1109/ICSME46990.2020.00066
   Bhaskaran J, 2019, GENDER BIAS IN NATURAL LANGUAGE PROCESSING (GEBNLP 2019), P62
   Bolukbasi T, 2016, ADV NEUR IN, V29
   Brill E, 1995, COMPUT LINGUIST, V21, P543
   Brown T., 2020, P 34 INT C NEUR INF, V33, P1877
   Caetano JA, 2018, J INTERNET SERV APPL, V9, DOI 10.1186/s13174-018-0089-0
   Caliskan A, 2017, SCIENCE, V356, DOI 10.1126/science.aal4230
   Cambria E, 2017, IEEE INTELL SYST, V32, P74, DOI 10.1109/MIS.2017.4531228
   Chakraborty J, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P654, DOI 10.1145/3368089.3409697
   Chen D., 2014, P 2014 C EMPIRICAL M, P740, DOI DOI 10.3115/V1/D14-1082
   Chiappa S, 2019, AAAI CONF ARTIF INTE, P7801
   Clark K., 2020, PROC INT C LEARN REP, P1
   Cochran W.G., 1977, SAMPLING TECHNIQUES
   Day MY, 2016, PROCEEDINGS OF THE 2016 IEEE/ACM INTERNATIONAL CONFERENCE ON ADVANCES IN SOCIAL NETWORKS ANALYSIS AND MINING ASONAM 2016, P1127, DOI 10.1109/ASONAM.2016.7752381
   Devlin J, 2019, 2019 CONFERENCE OF THE NORTH AMERICAN CHAPTER OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS: HUMAN LANGUAGE TECHNOLOGIES (NAACL HLT 2019), VOL. 1, P4171
   Díaz M, 2018, PROCEEDINGS OF THE 2018 CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS (CHI 2018), DOI 10.1145/3173574.3173986
   Dixon L, 2018, PROCEEDINGS OF THE 2018 AAAI/ACM CONFERENCE ON AI, ETHICS, AND SOCIETY (AIES'18), P67, DOI 10.1145/3278721.3278729
   Dolianiti F.S., 2019, TECHNOL INNOV, V993, DOI DOI 10.1007/978-3-030-20954-4_31
   Fabbri AR, 2021, T ASSOC COMPUT LING, V9, P391, DOI 10.1162/tacl_a_00373
   Galhotra S, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P498, DOI 10.1145/3106237.3106277
   Garg S, 2019, AIES '19: PROCEEDINGS OF THE 2019 AAAI/ACM CONFERENCE ON AI, ETHICS, AND SOCIETY, P219, DOI 10.1145/3306618.3317950
   Go A., 2009, Twitter sentiment classification using distant supervision, V150, DOI DOI 10.1016/J.SEDGEO.2006.07.004
   Gong J., 2018, Proceedings of the 27th International Conference on Computational Linguistics (COLING), P2742
   Gupta VS, 2016, PROCEEDINGS OF THE 10TH INDIACOM - 2016 3RD INTERNATIONAL CONFERENCE ON COMPUTING FOR SUSTAINABLE GLOBAL DEVELOPMENT, P3766
   Hardt M, 2016, ADV NEUR IN, V29
   Haselmayer M, 2017, QUAL QUANT, V51, P2623, DOI 10.1007/s11135-016-0412-4
   Howard J, 2018, PROCEEDINGS OF THE 56TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (ACL), VOL 1, P328
   Iyyer M, 2018, P 2018 C N AM CHAPT, V1, P1875, DOI DOI 10.18653/V1/N18-1170
   Kiritchenko S, 2018, P 7 JOINT C LEX COMP, P43, DOI [10.18653/v1/S18-2005, DOI 10.18653/V1/S18-2005]
   Krishnamoorthy S, 2018, KNOWL INF SYST, V56, P373, DOI 10.1007/s10115-017-1134-1
   Kubler Sandra, 2009, SYNTHESIS LECT HUMAN, V1, P1, DOI DOI 10.2200/S00169ED1V01Y200901HLT002
   Kusner Matt J, 2017, ADV NEURAL INFORM PR, P4066, DOI DOI 10.48550/ARXIV.1703.06856
   Lan Z., 2019, ARXIV190911942, DOI DOI 10.48550/ARXIV.1909.11942
   Liu YH, 2019, Arxiv, DOI arXiv:1907.11692
   Ma PC, 2020, PROCEEDINGS OF THE TWENTY-NINTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P458
   Maas Andrew, 2011, P 49 ANN M ASS COMP
   Medhat W, 2014, AIN SHAMS ENG J, V5, P1093, DOI 10.1016/j.asej.2014.04.011
   Montandon JE, 2021, INFORM SOFTWARE TECH, V129, DOI 10.1016/j.infsof.2020.106429
   Nadeau D, 2007, LINGUIST INVESTIG, V30, P3
   Oyebode O, 2020, IEEE ACCESS, V8, P111141, DOI 10.1109/ACCESS.2020.3002176
   Poria S, 2023, IEEE T AFFECT COMPUT, V14, P108, DOI 10.1109/TAFFC.2020.3038167
   Prabhakaran V, 2019, 2019 CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING AND THE 9TH INTERNATIONAL JOINT CONFERENCE ON NATURAL LANGUAGE PROCESSING (EMNLP-IJCNLP 2019), P5740
   Raffel C, 2020, J MACH LEARN RES, V21
   Rambocas M., 2013, FEP WORKING PAPER SE
   Rani S, 2017, COMPUTER, V50, P36, DOI 10.1109/MC.2017.133
   Renault T., 2020, DIGIT FINANC, V2, P1, DOI [DOI 10.1007/S42521-019-00014-X, 10.1007/s42521-019-00014-x, https://doi.org/10.1007/s42521-019-00014-x]
   Ribeiro M. T., 2020, P 58 ANN M ASS COMPU, P4902
   Ribeiro MT, 2018, PROCEEDINGS OF THE 56TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (ACL), VOL 1, P856
   Sachan DS, 2019, AAAI CONF ARTIF INTE, P6940
   Sohangir S., 2017, J BIG DATA-GER, V5, P1
   Soon WM, 2001, COMPUT LINGUIST, V27, P521, DOI 10.1162/089120101753342653
   Soremekun E, 2022, Arxiv, DOI arXiv:2010.02542
   Sun C, 2019, LECT NOTES ARTIF INT, V11856, P194, DOI 10.1007/978-3-030-32381-3_16
   Sun LQ, 2018, 2018 25TH AUSTRALASIAN SOFTWARE ENGINEERING CONFERENCE (ASWEC), P96, DOI 10.1109/ASWEC.2018.00021
   Sun ZY, 2020, PROC INT CONF SOFTW, P974, DOI 10.1145/3377811.3380420
   Tay Y, 2021, 59TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS AND THE 11TH INTERNATIONAL JOINT CONFERENCE ON NATURAL LANGUAGE PROCESSING (ACL-IJCNLP 2021), VOL 1, P4349
   Thongtan T, 2019, 57TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (ACL 2019:): STUDENT RESEARCH WORKSHOP, P407
   Tramèr F, 2017, 2017 IEEE EUROPEAN SYMPOSIUM ON SECURITY AND PRIVACY (EUROS&P), P401, DOI 10.1109/EuroSP.2017.29
   Turney PD, 2002, 40TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, PROCEEDINGS OF THE CONFERENCE, P417
   Udeshi S, 2018, IEEE INT CONF AUTOM, P98, DOI 10.1145/3238147.3238165
   Wang JW, 2021, PROC INT CONF SOFTW, P1622, DOI 10.1109/ICSE43902.2021.00144
   Wu YK, 2019, PROCEEDINGS OF THE TWENTY-EIGHTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P1438
   Yadav S, 2018, PROCEEDINGS OF THE ELEVENTH INTERNATIONAL CONFERENCE ON LANGUAGE RESOURCES AND EVALUATION (LREC 2018), P2790
   Yang ZL, 2019, ADV NEUR IN, V32
   Yang Z, 2021, PROC IEEE INT CONF S, P644, DOI 10.1109/ICSME52107.2021.00073
   Yang Z, 2021, PROCEEDINGS OF THE 29TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '21), P1540, DOI 10.1145/3468264.3473117
   Yuan Weizhe, 2021, Advances in Neural Information Processing Systems
   Zhang JM, 2022, IEEE T SOFTWARE ENG, V48, P1, DOI 10.1109/TSE.2019.2962027
   Zhang MS, 2018, IEEE INT CONF AUTOM, P132, DOI 10.1145/3238147.3238187
   Zhang Y, 2018, PROCEEDINGS OF THE 56TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (ACL), VOL 1, P317
   Zhao J, 2018, P 2018 C N AM CHAPT, V2, P15, DOI DOI 10.18653/V1/N18-2003
   Zhao Z., 2018, PROC INT C LEARN REP
   Zhou ZQ, 2019, COMMUN ACM, V62, P61, DOI 10.1145/3241979
NR 82
TC 14
Z9 14
U1 1
U2 4
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD DEC 1
PY 2022
VL 48
IS 12
BP 5087
EP 5101
DI 10.1109/TSE.2021.3136169
PG 15
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 6X8ON
UT WOS:000896667600018
OA Bronze, Green Accepted, Green Submitted
DA 2024-07-18
ER

PT J
AU Xiao, T
   Wang, D
   Mcintosh, S
   Hata, H
   Kula, RG
   Ishio, T
   Matsumoto, K
AF Xiao, Tao
   Wang, Dong
   Mcintosh, Shane
   Hata, Hideaki
   Kula, Raula Gaikovina
   Ishio, Takashi
   Matsumoto, Kenichi
TI Characterizing and Mitigating Self-Admitted Technical Debt in Build
   Systems
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Codes; Software; Tools; Encoding; Analytical models; XML; Software
   development management; Self-admitted technical debt; build system;
   build maintenance
AB Technical Debt is a metaphor used to describe the situation in which long-term software artifact quality is traded for short-term goals in software projects. In recent years, the concept of self-admitted technical debt (SATD) was proposed, which focuses on debt that is intentionally introduced and described by developers. Although prior work has made important observations about admitted technical debt in source code, little is known about SATD in build systems. In this paper, we set out to better understand the characteristics of SATD in build systems. To do so, through a qualitative analysis of 500 SATD comments in the Maven build system of 291 projects, we characterize SATD by location and rationale (reason and purpose). Our results show that limitations in tools and libraries, and complexities of dependency management are the most frequent causes, accounting for 50% and 24% of the comments. We also find that developers often document SATD as issues to be fixed later. As a first step towards the automatic detection of SATD rationale, we train classifiers to detect the two most frequently occurring reasons and the four most frequently occurring purposes of SATD in the content of comments in Maven build systems. The classifier performance is promising, achieving an F1-score of 0.71-0.79. Finally, within 16 identified 'ready-to-be-addressed' SATD instances, the three SATD submitted by pull requests and the five SATD submitted by issue reports were resolved after developers were made aware. Our work presents the first step towards understanding technical debt in build systems and opens up avenues for future work, such as tool support to track and manage SATD backlogs.
C1 [Xiao, Tao; Wang, Dong; Kula, Raula Gaikovina; Ishio, Takashi; Matsumoto, Kenichi] Nara Inst Sci & Technol, Ikoma, Nara 6300192, Japan.
   [Mcintosh, Shane] Univ Waterloo, Cheriton Sch Comp Sci, Waterloo, ON N2L 3G1, Canada.
   [Hata, Hideaki] Shinshu Univ, Matsumoto, Nagano 3908621, Japan.
C3 Nara Institute of Science & Technology; University of Waterloo; Shinshu
   University
RP Xiao, T (corresponding author), Nara Inst Sci & Technol, Ikoma, Nara 6300192, Japan.
EM tao.xiao.ts2@is.naist.jp; wang.dong.vt8@is.naist.jp;
   shane.mcintosh@uwaterloo.ca; hata@shinshu-u.ac.jp; raula-k@is.naist.jp;
   ishio@is.naist.jp; matumoto@is.naist.jp
RI Kula, Raula/AAD-6079-2019; Hata, Hideaki/N-7103-2019
OI Kula, Raula/0000-0003-2324-0608; Hata, Hideaki/0000-0003-0708-5222;
   MATSUMOTO, KENICHI/0000-0002-7418-9323; Xiao, Tao/0000-0003-4070-585X;
   Ishio, Takashi/0000-0003-4106-699X; Wang, Dong/0000-0002-2004-0902
FU JSPS KAKENHI [JP18KT0013, JP18H04094, JP20K19774, JP20H05706];
   Grants-in-Aid for Scientific Research [20H05706, 20K19774] Funding
   Source: KAKEN
FX This work was supported by JSPS KAKENHI under Grants JP18KT0013,
   JP18H04094, JP20K19774, and JP20H05706.
CR Adams B., 2007, ELECT COMMUN EUR ASS, V8
   Alves Nicolli S. R., 2014, 2014 Sixth International Workshop on Managing Technical Debt. Proceedings, P1, DOI 10.1109/MTD.2014.9
   [Anonymous], 2003, P C N AM CHAPT ASS C
   [Anonymous], 2006, Information Architecture for the World Wide Web
   Avgeriou P, 2016, Dagstuhl reports, V6, DOI DOI 10.4230/DAGREP.6.4.110
   Besker T, 2019, J SYST SOFTWARE, V156, P41, DOI 10.1016/j.jss.2019.06.004
   Besker T, 2018, PROC IEEE INT CONF S, P415, DOI 10.1109/ICSME.2018.00051
   Bisong E, 2017, IEEE WORK CONF MIN S, P487, DOI 10.1109/MSR.2017.36
   Cao Q, 2017, PROC IEEE INT CONF S, P524, DOI 10.1109/ICSME.2017.34
   Charmaz K., 2014, CONSTRUCTING GROUNDE
   Cunningham W., 1993, OOPS Messenger, V4, P29
   Farias MAD, 2020, INFORM SOFTWARE TECH, V121, DOI 10.1016/j.infsof.2020.106270
   EISENHARDT KM, 1989, ACAD MANAGE REV, V14, P532, DOI 10.2307/258557
   El Zanaty F, 2018, PROCEEDINGS OF THE 12TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT (ESEM 2018), DOI 10.1145/3239235.3239525
   Feurer M, 2015, ADV NEUR IN, V28
   Hassan AE, 2006, IEEE INT CONF AUTOM, P189
   Hassan F, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P1242, DOI 10.1109/ASE.2019.00150
   Hassan F, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1078, DOI 10.1145/3180155.3180181
   Hata H, 2019, PROC INT CONF SOFTW, P1211, DOI 10.1109/ICSE.2019.00123
   Hirao T, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P578, DOI 10.1145/3338906.3338949
   Huang Q, 2018, EMPIR SOFTW ENG, V23, P418, DOI 10.1007/s10664-017-9522-4
   Islam MR, 2017, IEEE WORK CONF MIN S, P467, DOI 10.1109/MSR.2017.30
   Kerzazi N, 2014, PROC IEEE INT CONF S, P41, DOI 10.1109/ICSME.2014.26
   Kosara R, 2006, IEEE T VIS COMPUT GR, V12, P558, DOI 10.1109/TVCG.2006.76
   Kumfert G., 2002, "Software in the doe: The hidden overhead of "the build","
   Li ZY, 2015, J SYST SOFTWARE, V101, P193, DOI 10.1016/j.jss.2014.12.027
   Liu ZX, 2018, PROC IEEE ACM INT C, P9, DOI 10.1145/3183440.3183478
   Macho C, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P106, DOI 10.1109/SANER.2018.8330201
   Maipradit R, 2020, IEEE INT WORK C SO, P54, DOI 10.1109/SCAM51674.2020.00011
   Maipradit R, 2020, EMPIR SOFTW ENG, V25, P3770, DOI 10.1007/s10664-020-09854-3
   Maldonado ED, 2017, PROC IEEE INT CONF S, P238, DOI 10.1109/ICSME.2017.8
   Maldonado ED, 2017, IEEE T SOFTWARE ENG, V43, P1044, DOI 10.1109/TSE.2017.2654244
   McIntosh S, 2015, EMPIR SOFTW ENG, V20, P1587, DOI 10.1007/s10664-014-9324-x
   McIntosh S, 2012, EMPIR SOFTW ENG, V17, P578, DOI 10.1007/s10664-011-9169-5
   McIntosh S, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P141, DOI 10.1145/1985793.1985813
   Mensah S, 2018, J SYST SOFTWARE, V135, P37, DOI 10.1016/j.jss.2017.09.026
   Morgenthaler J.D., 2012, Proc. of the 3rd Int'l Workshop on Managing Technical Debt (MTD), P1, DOI DOI 10.1109/MTD.2012.6225994
   Pedregosa F, 2011, J MACH LEARN RES, V12, P2825
   Potdar A, 2014, PROC IEEE INT CONF S, P91, DOI 10.1109/ICSME.2014.31
   Rausch T, 2017, IEEE WORK CONF MIN S, P345, DOI 10.1109/MSR.2017.54
   Ren XX, 2019, ACM T SOFTW ENG METH, V28, DOI 10.1145/3324916
   Rigby PC, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P541, DOI 10.1145/1985793.1985867
   SALTON G, 1988, INFORM PROCESS MANAG, V24, P513, DOI 10.1016/0306-4573(88)90021-0
   Shirakawa M., 2017, N GRAM WEIGHTING SCH
   Shirakawa M, 2017, ACM T INFORM SYST, V36, DOI 10.1145/3052775
   Sierra G, 2019, J SYST SOFTWARE, V152, P70, DOI 10.1016/j.jss.2019.02.056
   Tufano M, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: NEW IDEAS AND EMERGING RESULTS (ICSE-NIER 2019), P49, DOI 10.1109/ICSE-NIER.2019.00021
   Vassallo C, 2016, PROC IEEE INT CONF S, P519, DOI 10.1109/ICSME.2016.72
   Viera AJ, 2005, FAM MED, V37, P360
   Wattanakriengkrai S, 2018, INT WORKSH EMPIR ENG, P7, DOI 10.1109/IWESEP.2018.00010
   Yan M, 2019, IEEE T SOFTWARE ENG, V45, P1211, DOI 10.1109/TSE.2018.2831232
   Zampetti F, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-021-10031-3
   Zoltagharinia M, 2017, IEEE WORK CONF MIN S, P312, DOI 10.1109/MSR.2017.7
NR 53
TC 7
Z9 7
U1 0
U2 2
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD OCT 1
PY 2022
VL 48
IS 10
BP 4214
EP 4228
DI 10.1109/TSE.2021.3115772
PG 15
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 5L3GA
UT WOS:000870301800027
OA hybrid, Green Submitted
DA 2024-07-18
ER

PT J
AU Zhang, JB
   Wang, YY
   Qiu, LN
   Rubin, J
AF Zhang, Junbin
   Wang, Yingying
   Qiu, Lina
   Rubin, Julia
TI Analyzing Android Taint Analysis Tools: FlowDroid, Amandroid, and
   DroidSafe
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Tools; Benchmark testing; Internet; Smart phones; Sensitivity; Mobile
   applications; Codes; Static analysis; taint analysis; mobile
   applications; empirical studies; reproducibility studies
ID STATIC ANALYSIS; APPS
AB Numerous static taint analysis techniques have recently been proposed for identifying information flows in mobile applications. These techniques are often optimized and evaluated on a set of synthetic benchmarks, which makes the comparison results difficult to generalize. Moreover, the techniques are commonly compared under different configuration setups, rendering the comparisons inaccurate. In this paper, we provide a large, controlled, and independent comparison of the three most prominent static taint analysis tools: FlowDroid, Amandroid, and DroidSafe. We align the configuration setup for the tools and evaluate them on both a set of common benchmarks and on real applications from the Google Play app store. We further evaluate the effectiveness of additional reflection handling mechanism implemented by DroidRA, applying it to each of the evaluated tools. We compare the results of our analysis to the results reported in previous studies, identify main reasons for inaccuracy in existing tools, and provide suggestions for future research.
C1 [Zhang, Junbin; Wang, Yingying; Qiu, Lina; Rubin, Julia] Univ British Columbia, Dept Elect & Comp Engn, Vancouver, BC V6T 1Z4, Canada.
C3 University of British Columbia
RP Zhang, JB (corresponding author), Univ British Columbia, Dept Elect & Comp Engn, Vancouver, BC V6T 1Z4, Canada.
EM zjbthomas@ece.ubc.ca; wyingying@ece.ubc.ca; lqiu@ece.ubc.ca;
   mjulia@ece.ubc.ca
RI Zhang, Junbin/JNE-9595-2023
OI Zhang, Junbin/0000-0002-3645-2733; Rubin, Julia/0000-0001-7280-1614
CR Allix K, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P468, DOI [10.1145/2901739.2903508, 10.1109/MSR.2016.056]
   [Anonymous], 2021, ANDROID STUDIO
   [Anonymous], 2021, NAKED SECURITY
   [Anonymous], 2021, SYM ENT BLOGS
   [Anonymous], 2020, BUTTER KNIFE
   [Anonymous], 2020, AAPT2
   [Anonymous], 2020, UN MAN ANDR
   [Anonymous], 2017, IBM APPSCAN SOURCE
   [Anonymous], 2017, DROIDBENCH BENCHM SU
   [Anonymous], 2017, PLDI 14 ART EV
   [Anonymous], 2020, TOAST OVERVIEWS
   [Anonymous], 2020, JNI TIPS
   [Anonymous], 2016, DROIDSAFE ANDR STAT
   [Anonymous], 2019, FLOWDROID 2 7 1
   [Anonymous], 2017, FORTIFY SCA
   [Anonymous], 2017, ICC BENCH BENCHM SUI
   [Anonymous], 2018, ARGUS SAF 3 2 0
   [Anonymous], 2021, JAWA LANGUAGE
   APKCombo, 2020, US
   APKPure, 2020, US
   Arzt S, 2014, ACM SIGPLAN NOTICES, V49, P259, DOI [10.1145/2666356.2594299, 10.1145/2594291.2594299]
   Arzt S, 2016, PROC INT CONF SOFTW, P725, DOI 10.1145/2884781.2884816
   Arzt Steven, 2017, Static Data Flow Analysis for Android Applications
   Barbon G, 2016, LECT NOTES COMPUT SC, V9871, P32, DOI 10.1007/978-3-319-46598-2_3
   Barros P, 2015, IEEE INT CONF AUTOM, P669, DOI 10.1109/ASE.2015.69
   Bartel Alexandre, 2012, P ACM SIGPLAN INT WO, P27
   Bhandari S, 2017, COMPUT SECUR, V70, P392, DOI 10.1016/j.cose.2017.07.002
   Bianchi A, 2015, P IEEE S SECUR PRIV, P931, DOI 10.1109/SP.2015.62
   Bonett R, 2018, PROCEEDINGS OF THE 27TH USENIX SECURITY SYMPOSIUM, P1263
   Bosu AS, 2017, PROCEEDINGS OF THE 2017 ACM ASIA CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY (ASIA CCS'17), P71, DOI 10.1145/3052973.3053004
   Calzavara S, 2017, P IEEE CSFW, P22, DOI 10.1109/CSF.2017.19
   Calzavara S, 2016, 1ST IEEE EUROPEAN SYMPOSIUM ON SECURITY AND PRIVACY, P47, DOI 10.1109/EuroSP.2016.16
   DENNING DE, 1976, COMMUN ACM, V19, P236, DOI 10.1145/360051.360056
   F-Droid, 2020, US
   Fahl S., 2012, ACM CCS 12, P50, DOI DOI 10.1145/2382196.2382205
   Fratantonio Y, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P687, DOI 10.1145/2786805.2786873
   Fratantonio Y, 2016, P IEEE S SECUR PRIV, P377, DOI 10.1109/SP.2016.30
   Google Play, 2020, About us
   Google Scholar, 2020, about us
   Gordon MI, 2015, 22ND ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2015), DOI 10.14722/ndss.2015.23089
   Hoffmann J, 2016, CODASPY'16: PROCEEDINGS OF THE SIXTH ACM CONFERENCE ON DATA AND APPLICATION SECURITY AND PRIVACY, P139, DOI 10.1145/2857705.2857737
   Jorgensen J., 2003, 20033 MCGILL U
   Kastrinis G, 2013, LECT NOTES COMPUT SC, V7791, P41, DOI 10.1007/978-3-642-37051-9_3
   KLIEBER W., 2014, Proceedings of the 3rd ACM SIGPLAN International Workshop on the State of the Art in Java Program Analysis, P1
   Lai DL, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P115, DOI 10.1109/ASE.2019.00021
   Lhoták O, 2003, LECT NOTES COMPUT SC, V2622, P153
   Li L., 2016, PROC ISSTA, P318
   Li L, 2017, Arxiv, DOI arXiv:1709.05281
   Li L, 2017, INFORM SOFTWARE TECH, V88, P67, DOI 10.1016/j.infsof.2017.04.001
   Li L, 2016, IEEE INT CONF AUTOM, P756, DOI 10.1145/2970276.2970277
   Li L, 2015, IFIP ADV INF COMM TE, V455, P513, DOI 10.1007/978-3-319-18467-8_34
   Li L, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P280, DOI 10.1109/ICSE.2015.48
   Li Y., 2017, EAI ENDORSED T SECUR, V4
   Luo LH, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P102, DOI 10.1109/ASE.2019.00020
   Octeau D, 2016, ACM SIGPLAN NOTICES, V51, P469, DOI 10.1145/2914770.2837661
   Octeau D, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P77, DOI 10.1109/ICSE.2015.30
   Octeau Damien, 2013, P 22 USENIX C SEC SE, P543
   Ouellet E., 2018, MAGIC QUADRANT ENDPO
   Pauck F, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P331, DOI 10.1145/3236024.3236029
   Pearce DJ, 2008, ACM T PROGR LANG SYS, V30, DOI 10.1145/1290520.1290524
   Qiu LN, 2018, ISSTA'18: PROCEEDINGS OF THE 27TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P176, DOI 10.1145/3213846.3213873
   Rasthofer S, 2014, 21ST ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2014), DOI 10.14722/ndss.2014.23039
   React Native, 2020, US
   Reaves B, 2016, ACM COMPUT SURV, V49, DOI 10.1145/2996358
   Rodriguez SA, 2019, THIRD CENTRAL EUROPEAN CYBERSECURITY CONFERENCE (CECC 2019), DOI 10.1145/3360664.3360672
   Sadeghi A, 2017, IEEE T SOFTWARE ENG, V43, P492, DOI 10.1109/TSE.2016.2615307
   Schmeelk S., 2015, PROC 10 ANN CYBER IN
   Smaragdakis Y., 2015, FDN TRENDS PROGRAM L, V2, P1, DOI DOI 10.1561/2500000014
   Sufatrio, 2015, ACM COMPUT SURV, V47, DOI 10.1145/2733306
   Sun XY, 2021, ACM T SOFTW ENG METH, V30, DOI 10.1145/3440033
   Tiwari A, 2019, L N INST COMP SCI SO, V305, P335, DOI 10.1007/978-3-030-37231-6_19
   Trend Micro, 2021, US
   Vallee-Rai R., 1999, CASCON 99 P
   Vallee-rai R., 1998, 19984 MCGILL U
   Virus Share, 2020, US
   VirusTotal, 2020, US
   Wei FG, 2018, PROCEEDINGS OF THE 2018 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY (CCS'18), P1137, DOI 10.1145/3243734.3243835
   Wei FG, 2018, ACM T PRIV SECUR, V21, DOI 10.1145/3183575
   Wei FG, 2014, CCS'14: PROCEEDINGS OF THE 21ST ACM CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P1329, DOI 10.1145/2660267.2660357
   Whaley J, 2005, LECT NOTES COMPUT SC, V3780, P97
   Zhang J., 2020, SUPPLEMENTARY MAT
   Zhang J, 2021, COMPUT SECUR, V104, DOI 10.1016/j.cose.2020.102161
   Zhang M, 2014, CCS'14: PROCEEDINGS OF THE 21ST ACM CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P1105, DOI 10.1145/2660267.2660359
   Zhang YF, 2018, SOFTWARE PRACT EXPER, V48, P1419, DOI 10.1002/spe.2577
   Zhou YJ, 2012, P IEEE S SECUR PRIV, P95, DOI 10.1109/SP.2012.16
NR 85
TC 3
Z9 3
U1 1
U2 4
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD OCT 1
PY 2022
VL 48
IS 10
BP 4014
EP 4040
DI 10.1109/TSE.2021.3109563
PG 27
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 5L3GA
UT WOS:000870301800017
DA 2024-07-18
ER

PT J
AU Cha, S
   Hong, S
   Bak, J
   Kim, J
   Lee, J
   Oh, H
AF Cha, Sooyoung
   Hong, Seongjoon
   Bak, Jiseong
   Kim, Jingyoung
   Lee, Junhee
   Oh, Hakjoo
TI Enhancing Dynamic Symbolic Execution by Automatically Learning Search
   Heuristics
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Testing; Heuristic algorithms; Tools; Software testing; Search problems;
   Open source software; Software algorithms; Dynamic symbolic execution;
   concolic testing; execution-generated testing; search heuristics;
   software testing
ID GENERATION
AB We present a technique to automatically generate search heuristics for dynamic symbolic execution. A key challenge in dynamic symbolic execution is how to effectively explore the program's execution paths to achieve high code coverage in a limited time budget. Dynamic symbolic execution employs a search heuristic to address this challenge, which favors exploring particular types of paths that are most likely to maximize the final coverage. However, manually designing a good search heuristic is nontrivial and typically ends up with suboptimal and unstable outcomes. The goal of this paper is to overcome this shortcoming of dynamic symbolic execution by automatically learning search heuristics. We define a class of search heuristics, namely a parametric search heuristic, and present an algorithm that efficiently finds an optimal heuristic for each subject program. Experimental results with industrial-strength symbolic execution tools (e.g., KLEE) show that our technique can successfully generate search heuristics that significantly outperform existing manually-crafted heuristics in terms of branch coverage and bug-finding.
C1 [Cha, Sooyoung; Hong, Seongjoon; Bak, Jiseong; Kim, Jingyoung; Lee, Junhee; Oh, Hakjoo] Korea Univ, Dept Comp Sci & Engn, Seoul 02841, South Korea.
C3 Korea University
RP Oh, H (corresponding author), Korea Univ, Dept Comp Sci & Engn, Seoul 02841, South Korea.
EM sooyoungcha@korea.ac.kr; seongjoon@korea.ac.kr; js_bak@korea.ac.kr;
   jg_kim@korea.ac.kr; junhee_lee@korea.ac.kr; hakjoo_oh@korea.ac.kr
OI Bak, Jiseong/0000-0002-3587-5005; Cha, Sooyoung/0000-0002-4697-8536
FU Samsung Research Funding& Incubation Center of Samsung Electronics
   [SRFC-IT1701-51]; Institute of Information & Communications Technology
   Planning & Evaluation (IITP) - Korea Government (MSIT) [2020-0-01337];
   MSIT (Ministry of Science and ICT), Korea, under the ICT Creative
   Consilience program [IITP-2021-2020-0-01819]; National Research
   Foundation of Korea (NRF) - Korea government (MSIT)
   [NRF-2021R1C1C2006410]
FX This workwas supported in part by Samsung Research Funding& Incubation
   Center of Samsung Electronics under Project Number SRFC-IT1701-51. This
   work was partly supported by Institute of Information & Communications
   Technology Planning & Evaluation (IITP) grant funded by the Korea
   Government (MSIT) under Grant 2020-0-01337, (SW STAR LAB) Research on
   Highly-Practical Automated Software Repair) and the MSIT (Ministry of
   Science and ICT), Korea, under the ICT Creative Consilience program
   (IITP-2021-2020-0-01819) supervised by the IITP (Institute for
   Information & communications Technology Planning & Evaluation). This
   work was also supported by theNational Research Foundation of Korea
   (NRF) grant funded by the Korea government (MSIT) under
   GrantNRF-2021R1C1C2006410.
CR [Anonymous], 2005, GNU BUG REPORT GAWK
   [Anonymous], 2008, C CONCOLIC TEST GENE
   [Anonymous], 2006, YICES SMT SOLVER
   [Anonymous], 2018, GNU BUG REPORT GREP
   [Anonymous], 2015, 2015 IEEE 8th International Conference on Software Testing, Verification and Validation (ICST)
   Avgerinos T, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P1083, DOI 10.1145/2568225.2568293
   Baldoni R, 2018, ACM COMPUT SURV, V51, DOI 10.1145/3182657
   Boonstoppel P, 2008, LECT NOTES COMPUT SC, V4963, P351, DOI 10.1007/978-3-540-78800-3_27
   Boyer R. S., 1975, SIGPLAN Notices, V10, P234, DOI 10.1145/390016.808445
   Bucur S, 2011, EUROSYS 11: PROCEEDINGS OF THE EUROSYS 2011 CONFERENCE, P183
   Bugrara S., 2013, 2013 USENIX Annual Technical Conference, P199
   Burnim Jacob, 2008, 2008 23rd IEEE/ACM International Conference on Automated Software Engineering, P443, DOI 10.1109/ASE.2008.69
   Burnim J, 2009, PROC INT CONF SOFTW, P463, DOI 10.1109/ICSE.2009.5070545
   Cadar C, 2005, LECT NOTES COMPUT SC, V3639, P2
   Cadar C., 2008, OSDI, V8, P209, DOI DOI 10.5555/1855741.1855756
   Cadar C, 2013, COMMUN ACM, V56, P82, DOI 10.1145/2408776.2408795
   Cadar C, 2008, ACM T INFORM SYST SE, V12, DOI 10.1145/1455518.1455522
   Cha S, 2018, IEEE INT CONF AUTOM, P408, DOI 10.1145/3238147.3238227
   Cha S, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P235, DOI 10.1145/3338906.3338964
   Cha S, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1244, DOI 10.1145/3180155.3180166
   Chau SY, 2017, P IEEE S SECUR PRIV, P503, DOI 10.1109/SP.2017.40
   Chipounov V, 2012, ACM T COMPUT SYST, V30, DOI 10.1145/2110356.2110358
   Choi W, 2013, ACM SIGPLAN NOTICES, V48, P623, DOI [10.1145/2544173.2509552, 10.1145/2509136.2509552]
   Christakis M, 2016, PROC INT CONF SOFTW, P144, DOI 10.1145/2884781.2884843
   Codognet Philippe., 2001, SAGA 01, P73
   Corteggiani N, 2018, PROCEEDINGS OF THE 27TH USENIX SECURITY SYMPOSIUM, P309
   Daca P, 2016, LECT NOTES COMPUT SC, V9583, P328, DOI 10.1007/978-3-662-49122-5_16
   Dinges P, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P425, DOI 10.1145/2635868.2635889
   Dustmann OS, 2018, IEEE INT CONF AUTOM, P430, DOI 10.1145/3238147.3238179
   Ganesh V, 2007, LECT NOTES COMPUT SC, V4590, P519
   Garg P, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P132
   Godefroid P, 2005, ACM SIGPLAN NOTICES, V40, P213, DOI 10.1145/1064978.1065036
   Godefroid P, 2017, IEEE INT CONF AUTOM, P50, DOI 10.1109/ASE.2017.8115618
   Godefroid P, 2010, POPL'10: PROCEEDINGS OF THE 37TH ANNUAL ACM SIGPLAN-SIGACT SYMPOSIUM ON PRINCIPLES OF PROGRAMMING LANGUAGES, P43, DOI 10.1145/1706299.1706307
   Godefroid P, 2007, CONFERENCE RECORD OF POPL 2007: THE 34TH ACM SIGPLAN SIGACT SYMPOSIUM ON PRINCIPLES OF PROGAMMING LANGUAGES, P47
   Godefroid Patrice, 2008, NDSS, V8, P151
   Harman M, 2012, ACM COMPUT SURV, V45, DOI 10.1145/2379776.2379787
   Hernandez G, 2017, CCS'17: PROCEEDINGS OF THE 2017 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P2245, DOI 10.1145/3133956.3134050
   HOWDEN WE, 1977, IEEE T SOFTWARE ENG, V3, P266, DOI 10.1109/TSE.1977.231144
   Inkumsah Kobi, 2008, 2008 23rd IEEE/ACM International Conference on Automated Software Engineering, P297, DOI 10.1109/ASE.2008.40
   Jaffar J., 2013, P 2013 9 JOINT M FDN, P48
   Kim SY, 2017, 2017 USENIX ANNUAL TECHNICAL CONFERENCE (USENIX ATC '17), P689
   Kim Y, 2012, PROC INT CONF SOFTW, P1143, DOI 10.1109/ICSE.2012.6227105
   Kim Yunho., 2011, Proceedings of the Joint Meeting of the European Software Engi- neering Conference and the ACM SIGSOFT Symposium on The Foundations of Software Engineering (ESEC/FSE), P420
   King J. C., 1975, Programming Methodology, P278, DOI 10.1145/390016.808444
   KING JC, 1976, COMMUN ACM, V19, P385, DOI 10.1145/360248.360252
   Koroglu Y, 2018, IEEE INT CONF SOFTW, P105, DOI 10.1109/ICST.2018.00020
   Kuznetsov V, 2012, ACM SIGPLAN NOTICES, V47, P193, DOI 10.1145/2345156.2254088
   Li X, 2016, IEEE INT CONF AUTOM, P554, DOI 10.1145/2970276.2970364
   Li Y, 2013, ACM SIGPLAN NOTICES, V48, P19, DOI [10.1145/2509136.2509553, 10.1145/2544173.2509553]
   Majumdar R, 2007, PROC INT CONF SOFTW, P416
   Marinescu PD, 2012, PROC INT CONF SOFTW, P716, DOI 10.1109/ICSE.2012.6227146
   McMinn P., 2011, 2011 IEEE Fourth International Conference on Software Testing, Verification and Validation Workshops (ICSTW), P153, DOI 10.1109/ICSTW.2011.100
   Mechtaev S, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P389, DOI 10.1145/3236024.3236049
   Ognawala S, 2018, 33RD ANNUAL ACM SYMPOSIUM ON APPLIED COMPUTING, P1475, DOI 10.1145/3167132.3167289
   Park S., 2012, P ACM SIGSOFT 20 INT, V35, P1
   Perry DM, 2017, PROCEEDINGS OF THE 26TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA'17), P68, DOI 10.1145/3092703.3092728
   Sant Jessica., 2005, ACM SIGSOFT SOFTWARE, V30, P1
   Sen K., 2005, P 10 EUR SOFTW ENG C, V30, P263, DOI DOI 10.1145/1081706.1081750
   Sen K, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P842, DOI 10.1145/2786805.2786830
   Seo H, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P413, DOI 10.1145/2635868.2635872
   Shoshitaishvili Y, 2015, 22ND ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2015), DOI 10.14722/ndss.2015.23294
   Spieker H, 2017, PROCEEDINGS OF THE 26TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA'17), P12, DOI 10.1145/3092703.3092709
   Stephens N, 2016, 23RD ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2016), DOI 10.14722/ndss.2016.23368
   Sun YC, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: COMPANION PROCEEDINGS (ICSE-COMPANION 2019), P111, DOI 10.1109/ICSE-Companion.2019.00051
   Sun YC, 2018, IEEE INT CONF AUTOM, P109, DOI 10.1145/3238147.3238172
   Thome J, 2017, PROC INT CONF SOFTW, P198, DOI 10.1109/ICSE.2017.26
   Trabish D, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P350, DOI 10.1145/3180155.3180251
   Wang JJ, 2017, P IEEE S SECUR PRIV, P579, DOI 10.1109/SP.2017.23
   Wang XY, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P291, DOI 10.1145/3180155.3180177
   Website, 2017, American Fuzzy Lop (AFL) Fuzzer
   Wong E, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P620, DOI 10.1109/ICSE.2015.78
   Xie T, 2009, I C DEPEND SYS NETWO, P359, DOI 10.1109/DSN.2009.5270315
   Yi QP, 2018, IEEE T SOFTWARE ENG, V44, P25, DOI 10.1109/TSE.2017.2659751
   Zhang C., 2018, P 2018 INT C BIG DAT, P14, DOI DOI 10.1145/3220199.3220212
   Zhang YF, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P643, DOI 10.1109/ICSE.2015.80
NR 76
TC 4
Z9 4
U1 3
U2 13
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD SEPT 1
PY 2022
VL 48
IS 9
BP 3640
EP 3663
DI 10.1109/TSE.2021.3101870
PG 24
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 4O3GR
UT WOS:000854591500025
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Pérez, JE
   González-Prieto, A
   Díaz, J
   López-Fernández, D
   García-Martín, J
   Yagüe, A
AF Perez, Jorge E.
   Gonzalez-Prieto, Angel
   Diaz, Jessica
   Lopez-Fernandez, Daniel
   Garcia-Martin, Javier
   Yague, Agustin
TI DevOps Research-Based Teaching Using Qualitative Research and
   Inter-Coder Agreement
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Research-based teaching; DevOps; qualitative research; inter-coder
   agreement
ID RELIABILITY; STUDENTS
AB DevOps is becoming a main competency required by the software industry. However, academic institutions have been slow to provide DevOps training in software engineering (SE) curricula. One reason for this is the fact that the problems addressed by DevOps may be hard to understand to students who have not previously worked in the industry or on projects of meaningful size and complexity. This paper shows an experience that integrates DevOps in SE curricula through research-based teaching (RBT). We aim to expose students to the problems that have led companies to adopt DevOps by researching and analyzing real cases of companies, thereby placing students at the center of learning. The contribution of this work is to innovate the application of RBT in software engineering by showing that the RBT approach is, at least, as good as the traditional approach and that it also leads to some extra benefits. This innovative solution has been implemented by using (i) qualitative analysis, specifically coding techniques, to discover knowledge and (ii) inter-coder agreement (ICA), specifically Krippendorff's alpha coefficients, to measure the extent of students' learning. These techniques allow teachers to determine whether students' learning in the subject is homogeneous and to analyze disagreements among students during their analysis. This approach provides teachers with new tools (Krippendorff's a coefficients) to identify those concepts that are less understood by students and to evaluate whether improvements in the research instruments (e.g., the codebook used in the qualitative analysis) also generate improvements in the students' agreement. This RBT experience shows evidence that can be used to assess whether a similar experience and the use of ICA could be applied in similar learning contexts with similar research contexts.
C1 [Perez, Jorge E.; Diaz, Jessica; Lopez-Fernandez, Daniel; Garcia-Martin, Javier; Yague, Agustin] Univ Politecn Madrid, ETSI Sistemas Informat, Madrid 28031, Spain.
   [Gonzalez-Prieto, Angel] Univ Autonoma Madrid, Dept Matemat, E-28049 Madrid, Spain.
   [Gonzalez-Prieto, Angel] Univ Autonoma Madrid, Inst Ciencias Matemat CSIC UAM UC3M UCM, E-28049 Madrid, Spain.
C3 Universidad Politecnica de Madrid; Autonomous University of Madrid;
   Autonomous University of Madrid; Consejo Superior de Investigaciones
   Cientificas (CSIC); CSIC - Instituto de Ciencia de Materiales de Madrid
   (ICMM); CSIC - Instituto de Ciencias Matematicas (ICMAT)
RP Díaz, J (corresponding author), Univ Politecn Madrid, ETSI Sistemas Informat, Madrid 28031, Spain.
EM jorgeenrique.perez@upm.es; gonzalezprieto@uam.es; yesica.diaz@upm.es;
   daniel.lopeze@upm.es; javier.garciam@upm.es; agustin.yague@upm.es
RI Pérez-Martínez, Jorge Enrique/AAS-5194-2020; Diaz, Jessica/J-9751-2012;
   Yague, Agustin/M-2229-2014
OI Pérez-Martínez, Jorge Enrique/0000-0003-3349-6017; Diaz,
   Jessica/0000-0001-6738-9370; Lopez Fernandez,
   Daniel/0000-0003-1265-010X; Yague, Agustin/0000-0002-4761-0901
FU Universidad Politecnica de Madrid through the project Research-based
   teaching in the DevOps domain [IE1920.6104]
FX This work was supported by the Universidad Politecnica de Madrid through
   the project Research-based teaching in the DevOps domain under Grant
   IE1920.6104.
CR Armstrong D, 1997, SOCIOLOGY, V31, P597, DOI 10.1177/0038038597031003015
   ATLAS.ti, 2019, SCI SOFTW DEV GMBH I
   Benni B, 2019, LECT NOTES COMPUT SC, V11350, P60, DOI 10.1007/978-3-030-06019-0_5
   Blomster J., 2014, HIGH ED STUD, V4, P62
   Bobrov Evgeny, 2020, Software Engineering Aspects of Continuous Development and New Paradigms of Software Production and Deployment. Second International Workshop, DEVOPS 2019. Revised Selected Papers. Lecture Notes in Computer Science (LNCS 12055), P1, DOI 10.1007/978-3-030-39306-9_1
   Bobrov E, 2020, MICROSERVICES: SCIENCE AND ENGINEERING, P349, DOI 10.1007/978-3-030-31646-4_14
   Bruel JM, 2019, LECT NOTES COMPUT SC, V11350, P221, DOI 10.1007/978-3-030-06019-0_17
   Campbell JL, 2013, SOCIOL METHOD RES, V42, P294, DOI 10.1177/0049124113500475
   Capozucca A, 2019, LECT NOTES COMPUT SC, V11350, P1, DOI 10.1007/978-3-030-06019-0_1
   Cruzes DS, 2011, INT SYMP EMP SOFTWAR, P275, DOI 10.1109/ESEM.2011.36
   Díaz J, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-020-09919-3
   Díaz J, 2019, LECT NOTES COMPUT SC, V11915, P323, DOI 10.1007/978-3-030-35333-9_23
   Dyck A, 2015, 2015 IEEE/ACM 3RD INTERNATIONAL WORKSHOP ON RELEASE ENGINEERING, P3, DOI 10.1109/RELENG.2015.10
   Friese Susanne., 2019, QUALITATIVE DATA ANA
   Díaz JG, 2018, 2018 ARGENTINE CONFERENCE ON AUTOMATIC CONTROL (AADECA)
   Martín JG, 2014, PROC FRONT EDUC CONF
   Gonzalez-Prieto A, 2021, Arxiv, DOI [arXiv:2008.00977, DOI arXiv:2008.00977.v1]
   Goodell LS, 2016, J NUTR EDUC BEHAV, V48, P578, DOI 10.1016/j.jneb.2016.06.001
   Granjeiro ÉM, 2019, ADV PHYSIOL EDUC, V43, P553, DOI 10.1152/advan.00034.2019
   Hayes AF, 2007, COMMUN METHODS MEAS, V1, P77, DOI 10.1080/19312450709336664
   Camacho MH, 2017, INTED PROC, P4188
   Jones C, 2019, LECT NOTES COMPUT SC, V11350, P33, DOI 10.1007/978-3-030-06019-0_3
   Knutson K, 2010, BIOCHEM MOL BIOL EDU, V38, P317, DOI 10.1002/bmb.20400
   Krippendorff K, 2004, HUM COMMUN RES, V30, P411, DOI 10.1093/hcr/30.3.411
   Krippendorff K, 2016, QUAL QUANT, V50, P2347, DOI 10.1007/s11135-015-0266-1
   Krippendorff Klaus, 2011, COMPUTING KRIPPENDOR, DOI DOI 10.1002/9781405186407.WBIECR029
   López-Fernández D, 2019, INT J ENG EDUC, V35, P1436
   MacPhail C, 2016, QUAL RES, V16, P198, DOI 10.1177/1468794115577012
   Mäkinen S, 2016, INFORM SOFTWARE TECH, V80, P175, DOI 10.1016/j.infsof.2016.09.001
   Marques M, 2018, IEEE T EDUC, V61, P63, DOI 10.1109/TE.2017.2742989
   McDonald Nora, 2019, Proceedings of the ACM on Human-Computer Interaction, V3, DOI 10.1145/3359174
   Nili A, 2020, INT J INFORM MANAGE, V54, DOI 10.1016/j.ijinfomgt.2020.102154
   O'Connor C, 2020, INT J QUAL METH, V19, DOI 10.1177/1609406919899220
   Pang C, 2020, 2020 ACM/IEEE 42ND INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING EDUCATION AND TRAINING (ICSE-SEET 2020), P107, DOI 10.1145/3377814.3381711
   Pawar BS, 2015, INT J MANAG EDUC, V13, P326, DOI 10.1016/j.ijme.2015.10.005
   Perez J., 2020, PROC 13 ANN INT C ED, P533
   Rong GP, 2017, CONF SOFTW ENG EDUC, P37, DOI 10.1109/CSEET.2017.17
   Saldana J., 2012, CODING MANUAL QUALIT
   Salleh N, 2018, INFORM SOFTWARE TECH, V98, P161, DOI 10.1016/j.infsof.2017.12.001
   SHELLEY M, 1984, J AM STAT ASSOC, V79, P240, DOI 10.2307/2288384
   Susiani T., 2018, SHS Web of Conferences, V42, P42
   Weston C., 2001, Qualitative Sociology, V24, P381, DOI [DOI 10.1023/A:1010690908200, 10.1023/A:1010690908200]
   WILCOXON F, 1945, BIOMETRICS BULL, V1, P80, DOI 10.1093/jee/39.2.269
   Wohlin C., 2012, Experimentation in Software Engineering
   Yin R. K., 2018, Case Study Research and Applications: Design and Methods, DOI DOI 10.1016/J.TECHFORE.2018.10.013
NR 45
TC 1
Z9 1
U1 5
U2 17
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD SEPT 1
PY 2022
VL 48
IS 9
BP 3378
EP 3393
DI 10.1109/TSE.2021.3092705
PG 16
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 4O3GR
UT WOS:000854591500010
DA 2024-07-18
ER

PT J
AU Shi, Y
   Wen, MZ
   Cogo, FR
   Chen, BY
   Jiang, ZM
AF Shi, Yong
   Wen, Mingzhi
   Cogo, Filipe R.
   Chen, Boyuan
   Jiang, Zhen Ming
TI An Experience Report on Producing Verifiable Builds for Large-Scale
   Commercial Systems
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Verifiable build; large scale commercial system; build system; security;
   trustworthiness; software engineering
ID TIME
AB Build verifiability is a safety property for a software system which can be used to check against various security-related issues during the build process. In summary, a verifiable build generates equivalent build artifacts for every build instance, allowing independent auditors to verify that the generated artifacts correspond to their source code. Producing a verifiable build is a very challenging problem, as non-equivalences in the build artifacts can be caused by non-determinsm from the build environment, the build toolchain, or the system implementation. Existing research and practices on build verifiability mainly focus on remediating sources of non-determinism. However, such a process does not work well with large-scale commercial systems (LSCSs) due to their stringent security requirements, complex third party dependencies, and large volumes of code changes. In this paper, we present an experience report on using a unified process and a toolkit to produce verifiable builds for LSCSs. A unified process contrasts with the existing practices in which recommendations to mitigate sources of non-determinism are proposed on a case-by-case basis and are not codified in a comprehensive tool. Our approach supports the following three strategies to systematically mitigate non-equivalences in the build artifacts: remediation, controlling, and interpretation. Case study on three LSCSs within Huawei shows that our approach is able to increase the proportion of verified build artifacts from less than 50 to 100 percent. To cross-validate our approach, we successfully applied our approach to build 2,218 open source packages distributed under CentOS 7.8, increasing the proportion of verified build artifacts from 85 to 99 percent with minimal human intervention. We also provide an overview of our mitigation guideline, which describes the recommended strategies to mitigate various non-equivalences. Finally, we present some discussions and open research problems in this area based on our experience and lessons learned in the past few years of applying our approach within the company. This paper will be useful for practitioners and software engineering researchers who are interested in build verifiability.
C1 [Shi, Yong; Wen, Mingzhi] Huawei Technol, Shenzhen 518129, Peoples R China.
   [Cogo, Filipe R.; Chen, Boyuan] Huawei Technol, Ctr Software Excellence, Kingston, ON K7K 3T1, Canada.
   [Jiang, Zhen Ming] York Univ, Dept Elect Engn & Comp Sci, Toronto, ON M3J 1P3, Canada.
C3 Huawei Technologies; Huawei Technologies; York University - Canada
RP Cogo, FR (corresponding author), Huawei Technol, Ctr Software Excellence, Kingston, ON K7K 3T1, Canada.
EM young.shi@huawei.com; wenmingzhi@huawei.com; cogo@gmail.com;
   boyuan.chen1@huawei.com; zmjiang@cse.yorku.ca
OI Cogo, Filipe/0000-0002-5494-685X; Jiang, Zhen Ming
   (Jack)/0000-0002-3063-3197; Chen, Boyuan/0000-0001-9103-5820
CR A. C. L. U. (ACLU), 2020, MAL SOFTW UPD END EV
   A. Support, 2020, SAF OP APPS YOUR MAC
   Adams B, 2007, PROC IEEE INT CONF S, P214
   [Anonymous], 2021, REPRODUCIBLEBUILDS B
   [Anonymous], VALUE INITIALIZATION
   [Anonymous], REPROTEST
   [Anonymous], 2020, OGGSERIALNUMBERS
   [Anonymous], 2021, FORMAL DEFINITION
   Barr ET, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P1003, DOI 10.1145/2950290.2983933
   Bezemer CP, 2017, EMPIR SOFTW ENG, V22, P3117, DOI 10.1007/s10664-017-9510-8
   Buck Buck, 2020, HIGH PERFORMANCE BUI
   Builds R., 2020, REPR BUILD DEF
   C. Project, 2020, CHROM REPR BUILD
   Clockskew, 2020, MAK MAC BUNDL BUILT
   Courtès L, 2015, LECT NOTES COMPUT SC, V9523, P579, DOI 10.1007/978-3-319-27308-2_47
   de Carnavalet Xavierde Carne., 2014, Proceedings of the 30th Annual Computer Security Applications Conference, P16, DOI [10.1145/2664243.2664288, DOI 10.1145/2664243.2664288]
   Debian, 2020, DEB REPR BUILD WIK
   Debian, 2020, DPKG BUILDP SET BUIL
   Debian, 2020, DH BUILD PLEAS PROD
   Developer A., 2020, VAL YOUR VERS XCOD
   Ghostscript, 2020, SUPP SOURCE DATE EPO
   HCSEC, 2020, HCSEC ANN REP
   Kerzazi N, 2014, PROC IEEE INT CONF S, P41, DOI 10.1109/ICSME.2014.26
   LD_PRELOAD, 2020, ID SO8 LIN MAN PAG
   Leija OSN, 2020, TWENTY-FIFTH INTERNATIONAL CONFERENCE ON ARCHITECTURAL SUPPORT FOR PROGRAMMING LANGUAGES AND OPERATING SYSTEMS (ASPLOS XXV), P167, DOI 10.1145/3373376.3378519
   lsof, 2020, ALL REPR BUILDS
   Lsof org, 2020, ALL REPR BUILDS
   M. S. R. C. (MSRC, 2020, SOFTW DEF MIT COMM E
   M. S. R. C. (MSRC), 2020, CLAR BEH MAN ASLR
   Malik R., 2020, DEV FAST RELIABLE 1
   McIntosh S, 2016, AUTOMAT SOFTW ENG, V23, P619, DOI 10.1007/s10515-015-0183-5
   McNutt D., 2020, 10 COMMANDMENTS RELE
   Microsoft, 2021, MICR RES DET PACK
   N. I. of Standards and T. (NIST), 2020, DIGITAL SIGNATURE ST
   Nikitin K, 2017, PROCEEDINGS OF THE 26TH USENIX SECURITY SYMPOSIUM (USENIX SECURITY '17), P1271
   openssl, 2020, FIX SOURCE DATE EPOC
   Oracle, 2021, OR BERK DB
   Oracle, 2021, OR BERK DB REP
   Pearson S, 2017, PROC INT CONF SOFTW, P609, DOI 10.1109/ICSE.2017.62
   Perry M., 2020, DETERMINISTIC BUILDS
   Project B., 2020, BITC REPR BUILD
   Ren ZL, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P527, DOI 10.1109/ASE.2019.00056
   Ren ZL, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P71, DOI 10.1145/3180155.3180224
   reprotest, 2021, REPROTEST
   Security H., 2020, MALW TRENDS
   Sung CH, 2020, 2020 IEEE/ACM 42ND INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE (ICSE-SEIP), P172, DOI 10.1145/3377813.3381362
   SwissCovid, 2020, SWISSCOVID DP3T ANDR
   sysstat, 2020, CAN WE EL BUILD DIFF
   Telegram, 2020, TEL REPR BUILD
   THOMPSON K, 1984, COMMUN ACM, V27, P761, DOI 10.1145/358198.358210
   Tu Q, 2001, PROC IEEE INT CONF S, P398, DOI 10.1109/ICSM.2001.972753
   Vakilian M, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P123, DOI 10.1109/ICSE.2015.34
   vander Burg S., 2014, P 29 ACM IEEE INT C, P731, DOI [10.1145/2642937.2643013, DOI 10.1145/2642937.2643013]
   Wheeler D. A., 2020, ATTACK SOLARWINDS CO
   Wheeler DA, 2005, 21ST ANNUAL COMPUTER SECURITY APPLICATIONS CONFERENCE, PROCEEDINGS, P28
   Wolfcw, 2020, LIBF
   Wong WE, 2016, IEEE T SOFTWARE ENG, V42, P707, DOI 10.1109/TSE.2016.2521368
   Yu YJ, 2005, PROC IEEE INT CONF S, P59
   Yuan YJ, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P949, DOI 10.1145/3106237.3122821
   Zhou X, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P683, DOI 10.1145/3338906.3338961
   Zolfagharinia M, 2019, EMPIR SOFTW ENG, V24, P3933, DOI 10.1007/s10664-019-09709-6
NR 61
TC 5
Z9 5
U1 0
U2 8
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD SEPT 1
PY 2022
VL 48
IS 9
BP 3361
EP 3377
DI 10.1109/TSE.2021.3092692
PG 17
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 4O3GR
UT WOS:000854591500009
DA 2024-07-18
ER

PT J
AU Bagherzadeh, M
   Kahani, N
   Briand, L
AF Bagherzadeh, Mojtaba
   Kahani, Nafiseh
   Briand, Lionel
TI Reinforcement Learning for Test Case Prioritization
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Testing; History; Training; Reinforcement learning; Software systems;
   Adaptation models; Software algorithms; Continuous integration; CI;
   reinforcement learning; test prioritization
AB Continuous Integration (CI) significantly reduces integration problems, speeds up development time, and shortens release time. However, it also introduces new challenges for quality assurance activities, including regression testing, which is the focus of this work. Though various approaches for test case prioritization have shown to be very promising in the context of regression testing, specific techniques must be designed to deal with the dynamic nature and timing constraints of CI. Recently, Reinforcement Learning (RL) has shown great potential in various challenging scenarios that require continuous adaptation, such as game playing, real-time ads bidding, and recommender systems. Inspired by this line of work and building on initial efforts in supporting test case prioritization with RL techniques, we perform here a comprehensive investigation of RL-based test case prioritization in a CI context. To this end, taking test case prioritization as a ranking problem, we model the sequential interactions between the CI environment and a test case prioritization agent as an RL problem, using three alternative ranking models. We then rely on carefully selected and tailored state-of-the-art RL techniques to automatically and continuously learn a test case prioritization strategy, whose objective is to be as close as possible to the optimal one. Our extensive experimental analysis shows that the best RL solutions provide a significant accuracy improvement over previous RL-based work, with prioritization strategies getting close to being optimal, thus paving the way for using RL to prioritize test cases in a CI context.
C1 [Bagherzadeh, Mojtaba; Briand, Lionel] Univ Ottawa, Sch EECS, Ottawa, ON K1N 6N5, Canada.
   [Kahani, Nafiseh] Carleton Univ, Dept Syst & Comp Engn, Ottawa, ON K1S 5B6, Canada.
   [Briand, Lionel] Univ Luxembourg, SnT Ctr Secur Reliabil & Trust, L-4365 Esch Sur Alzette, Luxembourg.
C3 University of Ottawa; Carleton University; University of Luxembourg
RP Bagherzadeh, M (corresponding author), Univ Ottawa, Sch EECS, Ottawa, ON K1N 6N5, Canada.
EM m.bagherzadeh@uottawa.ca; kahani@sce.carleton.ca; lionel.briand@uni.lu
OI Briand, Lionel/0000-0002-1393-1010; BAGHERZADEH,
   MOJTABA/0000-0002-0253-671X
FU Huawei Technologies Canada; Mitacs Canada; Canada Research Chair and
   Discovery Grant programs of the Natural Sciences and Engineering
   Research Council of Canada (NSERC)
FX This work was supported by a research grant from Huawei Technologies
   Canada, Mitacs Canada, as well as the Canada Research Chair and
   Discovery Grant programs of the Natural Sciences and Engineering
   Research Council of Canada (NSERC). The authors would like to express
   their gratitude to the authors of the two previous studies on
   reinforcement learning and test prioritization for making their data and
   artifacts available and answering questions.
CR Akiba T, 2019, KDD'19: PROCEEDINGS OF THE 25TH ACM SIGKDD INTERNATIONAL CONFERENCCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P2623, DOI 10.1145/3292500.3330701
   [Anonymous], 1998, The art of computer programming: Sorting and searching
   Arcuri A, 2014, SOFTW TEST VERIF REL, V24, P219, DOI 10.1002/stvr.1486
   Beller M, 2017, IEEE WORK CONF MIN S, P356, DOI 10.1109/MSR.2017.62
   Beller M, 2017, IEEE WORK CONF MIN S, P447, DOI 10.1109/MSR.2017.24
   Bertolino A, 2020, PROC INT CONF SOFTW, P1, DOI 10.1145/3377811.3380369
   Bin Noor T, 2015, 2015 IEEE 26TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING (ISSRE), P58, DOI 10.1109/ISSRE.2015.7381799
   Burges Christopher J. C., 2010, Learning, V11, P81
   Busjaeger B, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P975, DOI 10.1145/2950290.2983954
   Cai H, 2017, WSDM'17: PROCEEDINGS OF THE TENTH ACM INTERNATIONAL CONFERENCE ON WEB SEARCH AND DATA MINING, P661, DOI 10.1145/3018661.3018702
   Carlson Ryan, 2011, 2011 IEEE 27th International Conference on Software Maintenance, P382, DOI 10.1109/ICSM.2011.6080805
   Dhariwal P., 2017, OpenAI Baselines
   Do H, 2006, IEEE T SOFTWARE ENG, V32, P733, DOI 10.1109/TSE.2006.92
   Donoho D.L., 2000, AMS MATH CHALLENGES, V1, P32
   Dulac-Arnold G, 2016, Arxiv, DOI arXiv:1512.07679
   Dulac-Arnold G, 2019, Arxiv, DOI [arXiv:1904.12901, DOI 10.1007/S10994-021-05961-4, 10.48550/arXiv.1904.12901]
   Durelli VHS, 2019, IEEE T RELIAB, V68, P1189, DOI 10.1109/TR.2019.2892517
   Duvall Paul M., 2007, Continuous integration: improving software quality and reducing risk
   Elbaum S, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P235, DOI 10.1145/2635868.2635910
   Fazlalizadeh Y, 2009, LECT NOTES COMPUT SC, V5668, P43
   Fujimoto S, 2018, Arxiv, DOI [arXiv:1802.09477, DOI 10.48550/ARXIV.1802.09477]
   Games PA., 1976, J. Educ. Stat., V1, P113, DOI [10.3102/10769986001002113, DOI 10.3102/10769986001002113, 10.2307/1164979, DOI 10.2307/1164979]
   github, 2020, GYM LIB
   Haarnoja T, 2018, Arxiv, DOI arXiv:1801.01290
   Hill A., 2018, Stable baselines
   Hoffman MWW, 2022, Arxiv, DOI arXiv:2006.00979
   Jeffrey D, 2006, P INT COMP SOFTW APP, P411
   Jones JA, 2003, IEEE T SOFTWARE ENG, V29, P195, DOI 10.1109/TSE.2003.1183927
   Khatibsyarbini M, 2018, INFORM SOFTWARE TECH, V93, P74, DOI 10.1016/j.infsof.2017.08.014
   Kim Hae-Young, 2014, Restor Dent Endod, V39, P74, DOI 10.5395/rde.2014.39.1.74
   Kim JM, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P119, DOI 10.1109/ICSE.2002.1007961
   Konda VR, 2000, ADV NEUR IN, V12, P1008
   Korel B, 2005, PROC IEEE INT CONF S, P559
   Korel B, 2009, IEEE ICST WORKSHOP, P77, DOI 10.1109/ICSTW.2009.45
   Lachmann R, 2016, 2016 15TH IEEE INTERNATIONAL CONFERENCE ON MACHINE LEARNING AND APPLICATIONS (ICMLA 2016), P361, DOI [10.1109/ICMLA.2016.0065, 10.1109/ICMLA.2016.163]
   Lenz AR, 2013, ENG APPL ARTIF INTEL, V26, P1631, DOI 10.1016/j.engappai.2013.01.008
   Lillicrap T., 2015, arXiv, DOI 10.48550/arXiv.1509.02971
   Lima JAP, 2022, IEEE T SOFTWARE ENG, V48, P453, DOI 10.1109/TSE.2020.2992428
   Lima Jackson A. Prado, 2020, P INT SYST SOFTW PRO, P1, DOI [10.1145/3382025.3414967, DOI 10.1145/3382025.3414967]
   Liu TY, 2011, LEARNING TO RANK FOR INFORMATION RETRIEVAL, P1, DOI 10.1007/978-3-642-14267-3
   Luo Q, 2018, PROC IEEE INT CONF S, P240, DOI 10.1109/ICSME.2018.00033
   Marijan D, 2013, PROC IEEE INT CONF S, P540, DOI 10.1109/ICSM.2013.91
   MCGRAW KO, 1992, PSYCHOL BULL, V111, P361, DOI 10.1037/0033-2909.111.2.361
   Memon A, 2017, 2017 IEEE/ACM 39TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2017), P233, DOI 10.1109/ICSE-SEIP.2017.16
   Mnih V, 2013, Arxiv, DOI [arXiv:1312.5602, 10.48550/arxiv.1312.5602]
   Mnih V, 2016, PR MACH LEARN RES, V48
   Mnih V, 2015, NATURE, V518, P529, DOI 10.1038/nature14236
   Nachum O, 2017, ADV NEUR IN, V30
   Park H, 2008, PROCEEDINGS OF THE SECOND INTERNATIONAL CONFERENCE ON INFORMATION SECURITY AND ASSURANCE, P32
   Precup D., 2000, COMPUTER SCI DEP FAC, P80
   Ranklib, 2020, RANKLIB
   Riedmiller M, 2018, Arxiv, DOI arXiv:1802.10567
   Rothermel G, 2001, IEEE T SOFTWARE ENG, V27, P929, DOI 10.1109/32.962562
   Rothermel G., 1999, Proceedings IEEE International Conference on Software Maintenance - 1999 (ICSM'99). `Software Maintenance for Business Change' (Cat. No.99CB36360), P179, DOI 10.1109/ICSM.1999.792604
   Schulman J, 2017, Arxiv, DOI arXiv:1707.06347
   Schulman J, 2015, PR MACH LEARN RES, V37, P1889
   Scientific Toolworks Inc., UND
   Silver D, 2018, SCIENCE, V362, P1140, DOI 10.1126/science.aar6404
   Spieker H, 2017, PROCEEDINGS OF THE 26TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA'17), P12, DOI 10.1145/3092703.3092709
   Srikanth H, 2005, 2005 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING (ISESE), PROCEEDINGS, P62, DOI 10.1109/ISESE.2005.1541815
   Srikanth H, 2005, ACM SIGSOFT SOFTWARE, V30, P1, DOI [10.1145/1082983.1083100, DOI 10.1145/1082983.1083100]
   Sui L, 2020, PROC INT CONF SOFTW, P1049, DOI 10.1145/3377811.3380441
   Suleiman Dima, 2017, 2017 8th International Conference on Information Technology (ICIT). Proceedings, P854, DOI 10.1109/ICITECH.2017.8079958
   Sutton RS, 2018, ADAPT COMPUT MACH LE, P1
   Tahat L, 2012, SOFTW TEST VERIF REL, V22, P481, DOI 10.1002/stvr.461
   Tonella P, 2006, PROC IEEE INT CONF S, P123
   Varrette S, 2014, 2014 INTERNATIONAL CONFERENCE ON HIGH PERFORMANCE COMPUTING & SIMULATION (HPCS), P959, DOI 10.1109/HPCSim.2014.6903792
   Wang X., 2011, P 4 ACM INT C WEB SE, P735
   Wang ZY, 2017, Arxiv, DOI arXiv:1611.01224
   WATKINS CJCH, 1992, MACH LEARN, V8, P279, DOI 10.1007/BF00992698
   Weisz G, 2018, IEEE-ACM T AUDIO SPE, V26, P2083, DOI 10.1109/TASLP.2018.2851664
   WELCH BL, 1947, BIOMETRIKA, V34, P28, DOI 10.2307/2332510
   WILLIAMS RJ, 1992, MACH LEARN, V8, P229, DOI 10.1007/BF00992696
   Wu YH, 2017, ADV NEUR IN, V30
   Yoo S, 2012, SOFTW TEST VERIF REL, V22, P67, DOI [10.1002/stv.430, 10.1002/stvr.430]
   Zhang CS, 2019, NEURAL PROCESS LETT, V50, P957, DOI 10.1007/s11063-019-09999-3
   Zhao XY, 2018, KDD'18: PROCEEDINGS OF THE 24TH ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY & DATA MINING, P1040, DOI 10.1145/3219819.3219886
NR 77
TC 26
Z9 28
U1 2
U2 13
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD AUG 1
PY 2022
VL 48
IS 8
BP 2836
EP 2856
DI 10.1109/TSE.2021.3070549
PG 21
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 4D1BG
UT WOS:000846878500009
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Lin, DY
   Tantithamthavorn, C
   Hassan, AE
AF Lin, Dayi
   Tantithamthavorn, Chakkrit
   Hassan, Ahmed E.
TI The Impact of Data Merging on the Interpretation of Cross-Project
   Just-In-Time Defect Models
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Context modeling; Data models; Predictive models; Measurement; Training;
   Merging; Planning; Just-in-time defect prediction; data merging;
   mixed-effect model; cross-project defect prediction
ID PREDICTION
AB Just-In-Time (JIT) defect models are classification models that identify the code commits that are likely to introduce defects. Cross-project JIT models have been introduced to address the suboptimal performance of JIT models when historical data is limited. However, many studies built cross-project JIT models using a pool of mixed data from multiple projects (i.e., data merging)-assuming that the properties of defect-introducing commits of a project are similar to that of the other projects, which is likely not true. In this paper, we set out to investigate the interpretation of JIT defect models that are built from individual project data and a pool of mixed project data with and without consideration of project-level variances. Through a case study of 20 datasets of open source projects, we found that (1) the interpretation of JIT models that are built from individual projects varies among projects; and (2) the project-level variances cannot be captured by a JIT model that is trained from a pool of mixed data from multiple projects without considering project-level variances (i.e., a global JIT model). On the other hand, a mixed-effect JIT model that considers project-level variances represents the different interpretations better, without sacrificing performance, especially when the contexts of projects are considered. The results hold for different mixed-effect learning algorithms. When the goal is to derive sound interpretation of cross-project JIT models, we suggest that practitioners and researchers should opt to use a mixed-effect modelling approach that considers individual projects and contexts.
C1 [Lin, Dayi] Ctr Software Excellence, Huawei, ON L3R 5A4, Canada.
   [Tantithamthavorn, Chakkrit] Monash Univ, Fac Informat Technol, Clayton, Vic 3800, Australia.
   [Hassan, Ahmed E.] Queens Univ, Sch Comp, Kingston, ON K7L 3N6, Canada.
C3 Huawei Technologies; Monash University; Queens University - Canada
RP Lin, DY (corresponding author), Ctr Software Excellence, Huawei, ON L3R 5A4, Canada.
EM dayi.lin@huawei.com; chakkrit@monash.edu; ahmed@cs.queensu.ca
RI KHALIFA, AHMED khalifa/HKF-2246-2023
OI KHALIFA, AHMED khalifa/0000-0002-2918-7572; Lin,
   Dayi/0000-0002-4034-6650; Tantithamthavorn, Chakkrit/0000-0002-5516-9984
FU Australian Research Council through Discovery Early Career
   ResearcherAward (DECRA) [DE200100941]
FX The work of Chakkrit Tantithamthavorn was supported by Australian
   Research Council through Discovery Early Career ResearcherAward (DECRA)
   underGrant DE200100941.
CR Agresti A., 2013, CATEGORICAL DATA ANA
   [Anonymous], 2014, 11 WORKING C MINING, DOI [DOI 10.1145/2597073.2597076, DOI 10.1145/2597073]
   Bettenburg N, 2015, EMPIR SOFTW ENG, V20, P294, DOI 10.1007/s10664-013-9292-6
   Bolker BM, 2009, TRENDS ECOL EVOL, V24, P127, DOI 10.1016/j.tree.2008.10.008
   Devanbu P, 2016, PROC INT CONF SOFTW, P108, DOI 10.1145/2884781.2884812
   Fukushima T., 2014, Proceedings of the 11th Working Conference on Mining Software Repositories, MSR 2014, P172, DOI DOI 10.1145/2597073.2597075
   Guo PJ, 2010, Proceedings of the 32nd ACM/IEEE International Conference on Software Engineering, P495
   Hajjem A, 2017, STAT PROBABIL LETT, V126, P114, DOI 10.1016/j.spl.2017.02.033
   Hajjem A, 2014, J STAT COMPUT SIM, V84, P1313, DOI 10.1080/00949655.2012.741599
   Hassan AE, 2009, PROC INT CONF SOFTW, P78, DOI 10.1109/ICSE.2009.5070510
   Hassan S, 2018, EMPIR SOFTW ENG, V23, P1275, DOI 10.1007/s10664-017-9538-9
   Herbold S, 2018, IEEE T SOFTWARE ENG, V44, P811, DOI 10.1109/TSE.2017.2724538
   Herbold S, 2017, EMPIR SOFTW ENG, V22, P1866, DOI 10.1007/s10664-016-9468-y
   Hosseini S, 2019, IEEE T SOFTWARE ENG, V45, P111, DOI 10.1109/TSE.2017.2770124
   Huang Q, 2017, PROC IEEE INT CONF S, P159, DOI 10.1109/ICSME.2017.51
   Jiarpakdee J, 2021, IEEE WORK CONF MIN S, P432, DOI 10.1109/MSR52588.2021.00055
   Jiarpakdee J, 2022, IEEE T SOFTWARE ENG, V48, P166, DOI 10.1109/TSE.2020.2982385
   Jiarpakdee J, 2020, EMPIR SOFTW ENG, V25, P3590, DOI 10.1007/s10664-020-09848-1
   Jiarpakdee J, 2021, IEEE T SOFTWARE ENG, V47, P320, DOI 10.1109/TSE.2019.2891758
   Jiarpakdee J, 2018, PROC IEEE INT CONF S, P92, DOI 10.1109/ICSME.2018.00018
   Johnson PCD, 2014, METHODS ECOL EVOL, V5, P944, DOI 10.1111/2041-210X.12225
   Kamei Y, 2016, EMPIR SOFTW ENG, V21, P2072, DOI 10.1007/s10664-015-9400-x
   Kamei Y, 2013, IEEE T SOFTWARE ENG, V39, P757, DOI 10.1109/TSE.2012.70
   Khanan C, 2020, IEEE INT CONF AUTOM, P1336, DOI 10.1145/3324884.3415295
   Kim S, 2008, IEEE T SOFTWARE ENG, V34, P181, DOI 10.1109/TSE.2007.70773
   Kitchenham BA, 2007, IEEE T SOFTWARE ENG, V33, P316, DOI 10.1109/TSE.2007.1101
   Krishna R, 2019, IEEE T SOFTWARE ENG, V45, P1081, DOI 10.1109/TSE.2018.2821670
   Lambiase S, 2020, INT C PROGRAM COMPRE, P441, DOI 10.1145/3387904.3389296
   Lin D., 2019, REPLICATION PACKAGE
   liwerski J, 2005, ACM SIGSOFT SOFTWARE, V30, P1, DOI [10.1145/1082983.1083147, DOI 10.1145/1083142.1083147, DOI 10.1145/1082983.1083147]
   Mandrekar JN, 2010, J THORAC ONCOL, V5, P1315, DOI 10.1097/JTO.0b013e3181ec173d
   McIntosh S, 2018, IEEE T SOFTWARE ENG, V44, P412, DOI 10.1109/TSE.2017.2693980
   Menzies T, 2007, IEEE T SOFTWARE ENG, V33, P2, DOI 10.1109/TSE.2007.256941
   Menzies T, 2013, IEEE T SOFTWARE ENG, V39, P822, DOI 10.1109/TSE.2012.83
   Mockus A, 2000, BELL LABS TECH J, V5, P169, DOI 10.1002/bltj.2229
   Moser R, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P181, DOI 10.1145/1368088.1368114
   Nagappan N, 2005, PROC INT CONF SOFTW, P284, DOI 10.1145/1062455.1062514
   Nakagawa S, 2013, METHODS ECOL EVOL, V4, P133, DOI 10.1111/j.2041-210x.2012.00261.x
   Pinheiro J. A., 2000, MIXED EFFECTS MODELS, DOI DOI 10.1007/B98882
   Pornprasit C., ARXIV
   Purushothaman R, 2005, IEEE T SOFTWARE ENG, V31, P511, DOI 10.1109/TSE.2005.74
   Rajapaksha D., 2021, ARXIV
   Rodríguez-Pérez G, 2018, INFORM SOFTWARE TECH, V99, P164, DOI 10.1016/j.infsof.2018.03.009
   Rosen C, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P966, DOI 10.1145/2786805.2803183
   Shihab E., 2012, P ACM SIGSOFT 20 INT
   TAN M, 2015, P 37 IEEE ACM INT C, P99
   TANTITHAMTHAVOR.C, 2016, PROC INT CONF SOFTW, P321, DOI DOI 10.1145/2884781.2884857
   Tantithamthavorn C., 2020, ARXIV
   Tantithamthavorn C, 2020, IEEE T SOFTWARE ENG, V46, P1200, DOI 10.1109/TSE.2018.2876537
   Tantithamthavorn C, 2018, 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING - SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2018), P286, DOI 10.1145/3183519.3183547
   Tantithamthavorn C, 2019, IEEE T SOFTWARE ENG, V45, P683, DOI 10.1109/TSE.2018.2794977
   Tantithamthavorn C, 2017, IEEE T SOFTWARE ENG, V43, P1, DOI 10.1109/TSE.2016.2584050
   Thongtanunam P, 2021, IEEE T SOFTWARE ENG, V47, P2698, DOI 10.1109/TSE.2020.2964660
   Turhan B, 2011, EUROMICRO CONF PROC, P396, DOI 10.1109/SEAA.2011.59
   Turhan B, 2009, EMPIR SOFTW ENG, V14, P540, DOI 10.1007/s10664-008-9103-7
   Wang JB, 2016, AM J HUM GENET, V98, P697, DOI 10.1016/j.ajhg.2016.02.020
   Yatish S, 2019, PROC INT CONF SOFTW, P654, DOI 10.1109/ICSE.2019.00075
   Zhang F., 2014, P 11 WORK C MIN SOFT, P182, DOI [10.1145/2597073.2597078, DOI 10.1145/2597073.2597078]
   Zhang F, 2016, EMPIR SOFTW ENG, V21, P2107, DOI 10.1007/s10664-015-9396-2
   Zhang F, 2013, PROC IEEE INT CONF S, P350, DOI 10.1109/ICSM.2013.46
   Zimmerman T, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P91, DOI 10.1145/1595696.1595713
NR 61
TC 2
Z9 2
U1 2
U2 5
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD AUG 1
PY 2022
VL 48
IS 8
BP 2969
EP 2986
DI 10.1109/TSE.2021.3073920
PG 18
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 4D1BG
UT WOS:000846878500016
DA 2024-07-18
ER

PT J
AU Abid, C
   Kessentini, M
   Alizadeh, V
   Dhouadi, M
   Kazman, R
AF Abid, Chaima
   Kessentini, Marouane
   Alizadeh, Vahid
   Dhouadi, Mouna
   Kazman, Rick
TI How Does Refactoring Impact Security When Improving Quality? A
   Security-Aware Refactoring Approach
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Security; Measurement; Tools; Correlation; Software systems; Computer
   bugs; Quality; critical code; security metrics; attack surface;
   refactoring; multi-objective search
ID DESIGN; MODEL
AB While state of the art of software refactoring research uses various quality attributes to identify refactoring opportunities and evaluate refactoring recommendations, the impact of refactoring on the security of software systems when improving other quality objectives is under-explored. It is critical to understand how a system is resistant to security risks after refactoring to improve quality metrics. For instance, refactoring is widely used to improve the reusability of code, however such an improvement may increase the attack surface due to the created abstractions. Increasing the spread of security-critical classes in the design to improve modularity may result in reducing the resilience of software systems to attacks. In this paper, we investigated the possible impact of improving different quality attributes (e.g., reusability, extendibility, etc.), from the QMOOD model, effectiveness on a set of 8 security metrics defined in the literature related to the data access. We also studied the impact of different refactorings on these static security metrics. Then, we proposed a multi-objective refactoring recommendation approach to find a balance between quality attributes and security based on the correlation results to guide the search. We evaluated our tool on 30 open source projects. We also collected the practitioner perceptions on the refactorings recommended by our tool in terms of the possible impact on both security and other quality attributes. Our results confirm that developers need to make trade-offs between security and other qualities when refactoring software systems due to the negative correlations between them.
C1 [Abid, Chaima; Kessentini, Marouane; Alizadeh, Vahid; Dhouadi, Mouna] Univ Michigan, Dept Comp & Informat Sci, Dearborn, MI 48128 USA.
   [Kazman, Rick] Univ Hawaii, Honolulu, HI 96822 USA.
   [Kazman, Rick] Carnegie Mellon Univ, Software Engn Inst, Pittsburgh, PA 15213 USA.
C3 University of Michigan System; University of Michigan; University of
   Hawaii System; Carnegie Mellon University; Software Engineering
   Institute
RP Kessentini, M (corresponding author), Univ Michigan, Dept Comp & Informat Sci, Dearborn, MI 48128 USA.
EM cabid@umich.edu; marouane@umich.edu; alizadeh@umich.edu;
   mounad@umich.edu; kazman@hawaii.edu
RI Alizadeh, Vahid/S-2154-2018
CR Adewumi A, 2015, CIT/IUCC/DASC/PICOM 2015 IEEE INTERNATIONAL CONFERENCE ON COMPUTER AND INFORMATION TECHNOLOGY - UBIQUITOUS COMPUTING AND COMMUNICATIONS - DEPENDABLE, AUTONOMIC AND SECURE COMPUTING - PERVASIVE INTELLIGENCE AND COMPUTING, P872, DOI 10.1109/CIT/IUCC/DASC/PICOM.2015.130
   Agrawal A., 2014, PENSEE, V76, P144
   Alizadeh V, 2020, IEEE T SOFTWARE ENG, V46, P932, DOI 10.1109/TSE.2018.2872711
   Alizadeh V, 2018, IEEE INT CONF AUTOM, P464, DOI [10.1145/3238147.3238217, 10.114513238147.3238217]
   Alshammari B, 2010, ASIA PAC SOFWR ENG, P186, DOI 10.1109/APSEC.2010.30
   Alshammari B, 2009, INT CONF QUAL SOFTW, P11, DOI 10.1109/QSIC.2009.11
   Amal B, 2014, LECT NOTES COMPUT SC, V8636, P31
   [Anonymous], 2005, Secure Systems Development with UML
   Aroms Emmanuel, 2012, NAT I STAND TECHNOL, P56
   Bansiya J, 2002, IEEE T SOFTWARE ENG, V28, P4, DOI 10.1109/32.979986
   Benesty J, 2009, SPRINGER TOP SIGN PR, V2, P37, DOI 10.1007/978-3-642-00296-0_5
   Coy SP, 2001, J HEURISTICS, V7, P77, DOI 10.1023/A:1026569813391
   Deb K, 2002, IEEE T EVOLUT COMPUT, V6, P182, DOI 10.1109/4235.996017
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   Ghaith Shadi, 2012, Search Based Software Engineering. Proceedings of the 4th International Symposium (SSBSE 2012), P121, DOI 10.1007/978-3-642-33119-0_10
   Ghannem A, 2016, SOFTWARE QUAL J, V24, P947, DOI 10.1007/s11219-015-9271-9
   Goyal PK, 2014, PROCEEDINGS OF THE 2014 INTERNATIONAL CONFERENCE ON ISSUES AND CHALLENGES IN INTELLIGENT COMPUTING TECHNIQUES (ICICT), P520, DOI 10.1109/ICICICT.2014.6781337
   Harman M, 2007, GECCO 2007: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOL 1 AND 2, P1106
   Harman M, 2012, ACM COMPUT SURV, V45, DOI 10.1145/2379776.2379787
   Jensen und A.C., 2010, Proceedings of the 12th Annual Conference on Genetic and Evolutionary Computation. GECCO '10, P1341
   Lam P., 2011, P CET US COMP INFR W, V15, P35
   LINDEN TA, 1976, COMPUT SURV, V8, P409, DOI 10.1145/356678.356682
   Maruyajna K, 2008, ASIA PAC SOFWR ENG, P445, DOI 10.1109/APSEC.2008.57
   Maruyama K., 2011, P 4 WORKSHOP REFACTO, P22, DOI [DOI 10.1145/1984732.1984737, 1145/1984732.1984737]
   McGraw G., 1999, Securing Java: getting down to business with mobile code
   Mo R, 2016, PROC INT CONF SOFTW, P499, DOI 10.1145/2884781.2884825
   Mumtaz H, 2018, INFORM SOFTWARE TECH, V96, P112, DOI 10.1016/j.infsof.2017.11.010
   O'Keeffe M., 2003, PPPJ 03, P59, DOI [10.1145/957289.957308, DOI 10.1145/957289.957308]
   O'Keeffe M, 2008, J SYST SOFTWARE, V81, P502, DOI 10.1016/j.jss.2007.06.003
   Opdyke W. F., 1992, Refactoring object-oriented frameworks
   Ouni A, 2017, J SOFTW-EVOL PROC, V29, DOI 10.1002/smr.1843
   Ouni A, 2013, GECCO'13: PROCEEDINGS OF THE 2013 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P1461
   Ouni A, 2013, EUR CON SFTWR MTNCE, P221, DOI 10.1109/CSMR.2013.31
   Ouni A, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P347, DOI 10.1109/ICSM.2012.6405292
   Planning S., 2002, NAT I STAND TECHNOL, P31
   Rachatasumrit N, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P357, DOI 10.1109/ICSM.2012.6405293
   Reif M, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P474, DOI 10.1145/2950290.2950312
   Reif Michael, 2017, P 6 ACM SIGPLAN INT, P43, DOI DOI 10.1145/3088515.3088523
   Scandariato R, 2014, IEEE T SOFTWARE ENG, V40, P993, DOI 10.1109/TSE.2014.2340398
   Shatnawi R., 2011, Internat. J. Software Eng. Applicat., P127
   Suryn W., 2003, ISO IEC SQARE 2 GEN, P23
   Tang YM, 2015, 2015 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE SECURITY AND RELIABILITY (QRS 2015), P27, DOI 10.1109/QRS.2015.15
   TSE, 2020, ONL APP THIS PUBL, DOI [10.7302/0bgn-vt27, DOI 10.7302/0BGN-VT27]
   Walden J, 2014, PROC INT SYMP SOFTW, P23, DOI 10.1109/ISSRE.2014.32
   Wang HZ, 2016, LECT NOTES COMPUT SC, V9936, P352, DOI 10.1007/978-3-319-46295-0_22
NR 45
TC 2
Z9 3
U1 0
U2 0
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAR 1
PY 2022
VL 48
IS 3
BP 864
EP 878
DI 10.1109/TSE.2020.3005995
PG 15
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA ZU6ZO
UT WOS:000769989900009
DA 2024-07-18
ER

PT J
AU Dai, HT
   Li, H
   Chen, CS
   Shang, WY
   Chen, TH
AF Dai, Hetong
   Li, Heng
   Chen, Che Shao
   Shang, Weiyi
   Chen, Tse-Hsun
TI <i>Logram</i>: Efficient Log Parsing Using <i>n</i>-Gram Dictionaries
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Log parsing; log analysis; N-gram
ID CHARACTERIZING LOGGING PRACTICES; EXECUTION
AB Software systems usually record important runtime information in their logs. Logs help practitioners understand system runtime behaviors and diagnose field failures. As logs are usually very large in size, automated log analysis is needed to assist practitioners in their software operation and maintenance efforts. Typically, the first step of automated log analysis is log parsing, i.e., converting unstructured raw logs into structured data. However, log parsing is challenging, because logs are produced by static templates in the source code (i.e., logging statements) yet the templates are usually inaccessible when parsing logs. Prior work proposed automated log parsing approaches that have achieved high accuracy. However, as the volume of logs grows rapidly in the era of cloud computing, efficiency becomes a major concern in log parsing. In this work, we propose an automated log parsing approach, Logram, which leverages n-gram dictionaries to achieve efficient log parsing. We evaluated Logram on 16 public log datasets and compared Logram with five state-of-the-art log parsing approaches. We found that Logram achieves a higher parsing accuracy than the best existing approaches (i.e., at least 10 percent higher, on average) and also outperforms these approaches in efficiency (i.e., 1.8 to 5.1 times faster than the second-fastest approaches in terms of end-to-end parsing time). Furthermore, we deployed Logram on Spark and we found that Logram scales out efficiently with the number of Spark nodes (e.g., with near-linear scalability for some logs) without sacrificing parsing accuracy. In addition, we demonstrated that Logram can support effective online parsing of logs, achieving similar parsing results and efficiency to the offline mode.
C1 [Dai, Hetong; Chen, Che Shao; Shang, Weiyi; Chen, Tse-Hsun] Concordia Univ, Dept Comp Sci & Software Engn, Montreal, PQ H4B 1R6, Canada.
   [Li, Heng] Queens Univ, Sch Comp, Kingston, ON K7L 3N6, Canada.
C3 Concordia University - Canada; Queens University - Canada
RP Dai, HT (corresponding author), Concordia Univ, Dept Comp Sci & Software Engn, Montreal, PQ H4B 1R6, Canada.
EM he_da@encs.concordia.ca; hengli@cs.queensu.ca;
   c_chesha@encs.concordia.ca; shang@encs.concordia.ca;
   peterc@encs.concordia.ca
RI Chen, Che-Shao/IZD-6304-2023
OI Chen, Tse-Hsun/0000-0003-4027-0905
CR [Anonymous], 2016, ABS161103213 CORR
   [Anonymous], 1994, N-gram-based text categorization
   Barik T, 2016, 2016 IEEE/ACM 38TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING COMPANION (ICSE-C), P92, DOI 10.1145/2889160.2889231
   Bennett L., LESSONS LEARNED USIN
   Bird S., 2009, NATURAL LANGUAGE PRO
   Brown P. F., 1992, Computational Linguistics, V18, P467
   Charniak E., 1996, Statistical language learning (language, speech, and communication), V1st
   Chen BY, 2017, EMPIR SOFTW ENG, V22, P330, DOI 10.1007/s10664-016-9429-5
   Chow Michael, 2014, P 11 S OP SYST DES I, P217
   Cito J, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P393, DOI 10.1145/2786805.2786826
   Damásio CV, 2002, APPL INTELL, V17, P187, DOI 10.1023/A:1016112931442
   Dang YN, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: COMPANION PROCEEDINGS (ICSE-COMPANION 2019), P4, DOI 10.1109/ICSE-Companion.2019.00023
   Du M, 2017, CCS'17: PROCEEDINGS OF THE 2017 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P1285, DOI 10.1145/3133956.3134015
   Du M, 2016, IEEE DATA MINING, P859, DOI [10.1109/ICDM.2016.0103, 10.1109/ICDM.2016.160]
   El-Masri D, 2020, INFORM SOFTWARE TECH, V122, DOI 10.1016/j.infsof.2020.106276
   El-Sayed N, 2017, INT CON DISTR COMP S, P1333, DOI 10.1109/ICDCS.2017.317
   Fu Q, 2013, IEEE WORK CONF MIN S, P397, DOI 10.1109/MSR.2013.6624054
   Fu QA, 2009, IEEE DATA MINING, P149, DOI 10.1109/ICDM.2009.60
   Gunther NJ, 2015, COMMUN ACM, V58, P46, DOI 10.1145/2719919
   Hamooni H, 2016, CIKM'16: PROCEEDINGS OF THE 2016 ACM CONFERENCE ON INFORMATION AND KNOWLEDGE MANAGEMENT, P1573, DOI 10.1145/2983323.2983358
   HANSEN SE, 1993, PROCEEDINGS OF THE SEVENTH SYSTEMS ADMINISTRATION CONFERENCE (LISA VII), P145
   He P, 2018, ARXIV180604356
   He PJ, 2018, IEEE INT CONF AUTOM, P178, DOI 10.1145/3238147.3238193
   He PJ, 2018, IEEE T DEPEND SECURE, V15, P931, DOI 10.1109/TDSC.2017.2762673
   He PJ, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON WEB SERVICES (ICWS 2017), P33, DOI 10.1109/ICWS.2017.13
   He SL, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P60, DOI 10.1145/3236024.3236083
   He SL, 2016, PROC INT SYMP SOFTW, P207, DOI 10.1109/ISSRE.2016.21
   Hindle A, 2012, PROC INT CONF SOFTW, P837, DOI 10.1109/ICSE.2012.6227135
   Huang P, 2018, PROCEEDINGS OF THE 13TH USENIX SYMPOSIUM ON OPERATING SYSTEMS DESIGN AND IMPLEMENTATION, P1
   Jiang ZM, 2008, J SOFTW MAINT EVOL-R, V20, P249, DOI 10.1002/smr.374
   Jiang ZM, 2008, PROC IEEE INT CONF S, P307, DOI 10.1109/ICSM.2008.4658079
   Lemoudden M, 2015, 2015 INTERNATIONAL CONFERENCE ON WIRELESS NETWORKS AND MOBILE COMMUNICATIONS (WINCOM), P217
   Li H, 2018, 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING - SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2018), P1, DOI 10.1145/3183519.3183544
   Li H, 2017, EMPIR SOFTW ENG, V22, P1831, DOI 10.1007/s10664-016-9467-z
   Lin CY, 2003, HLT-NAACL 2003: HUMAN LANGUAGE TECHNOLOGY CONFERENCE OF THE NORTH AMERICAN CHAPTER OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, PROCEEDINGS OF THE MAIN CONFERENCE, P150
   Lin QW, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P480, DOI 10.1145/3236024.3236060
   Lin QW, 2016, 2016 IEEE/ACM 38TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING COMPANION (ICSE-C), P102, DOI 10.1145/2889160.2889232
   Lou J, 2010, PROTEIN ENG DES SEL, V23, P311, DOI 10.1093/protein/gzq001
   M. Documentation, W3C LOGG
   M. Documentation, IIS LOG FIL FORM
   Makanju A, 2009, KDD-09: 15TH ACM SIGKDD CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P1255
   Mizutani Masayoshi, 2013, 2013 IEEE International Conference on Services Computing (SCC), P595, DOI 10.1109/SCC.2013.73
   Nagappan Meiyappan, 2010, Proceedings of the 2010 7th IEEE Working Conference on Mining Software Repositories (MSR 2010), P114, DOI 10.1109/MSR.2010.5463281
   Nagappan Meiyappan, 2009, 2009 20th International Symposium on Software Reliability Engineering (ISSRE 2009), P41, DOI 10.1109/ISSRE.2009.23
   Nagaraj K, 2012, P 9 USENIX C NETW SY, P353
   Nessa S, 2008, LECT NOTES COMPUT SC, V5258, P548, DOI 10.1007/978-3-540-88582-5_51
   Nguyen T.T., 2013, P 2013 9 JOINT M FDN, P532, DOI DOI 10.1145/2491411.2491458
   Oliner A, 2012, COMMUN ACM, V55, P63, DOI 10.1145/2076450.2076466
   Oliner A, 2007, I C DEPEND SYS NETWO, P575, DOI 10.1109/DSN.2007.103
   Pinjia He, 2016, 2016 46th Annual IEEE/IFIP International Conference on Dependable Systems and Networks (DSN). Proceedings, P654, DOI 10.1109/DSN.2016.66
   Rahman M, 2019, PROC INT CONF SOFTW, P37, DOI 10.1109/ICSE.2019.00022
   Ramati R., BEGINNERS GUIDE LOGS
   S. Documentation, SPLUNK REG EXPR
   Schipper Daan, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P545, DOI 10.1109/MSR.2019.00081
   Schroeder B, 2007, USENIX ASSOCIATION PROCEEDINGS OF THE 5TH USENIX CONFERENCE ON FILE AND STORAGE TECHNOLOGIES ( FAST '07), P1
   Shang WY, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P402, DOI 10.1109/ICSE.2013.6606586
   Shang WY, 2014, J SOFTW-EVOL PROC, V26, P3, DOI 10.1002/smr.1579
   Siu MH, 2000, IEEE T SPEECH AUDI P, V8, P63, DOI 10.1109/89.817454
   Tang L, 2011, PROCEEDINGS OF THE TWELFTH ACM INTERNATIONAL SYMPOSIUM ON MOBILE AD HOC NETWORKING AND COMPUTING (MOBIHOC' 11), DOI 10.1145/2107502.2107533
   Tomovic A, 2006, COMPUT METH PROG BIO, V81, P137, DOI 10.1016/j.cmpb.2005.11.007
   Vaarandi R, 2003, PROCEEDINGS OF THE 3RD IEEE WORKSHOP ON IP OPERATIONS & MANAGEMENT (IPOM2003), P119
   Vaarandi R., 2006, Hakin9 Magazine, V6, P28
   Xu W., 2010, P WORKSH MAN SYST VI
   Xu W, 2009, IEEE DATA MINING, P588, DOI 10.1109/ICDM.2009.19
   Xu W, 2009, SOSP'09: PROCEEDINGS OF THE TWENTY-SECOND ACM SIGOPS SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES, P117
   Yuan D, 2012, PROC INT CONF SOFTW, P102, DOI 10.1109/ICSE.2012.6227202
   Zaharia Matei, 2010, 2 USENIX WORKSHOP HO
   Zhu H., 2019, ABS190408964 CORR
   Zhu JM, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE (ICSE-SEIP 2019), P121, DOI 10.1109/ICSE-SEIP.2019.00021
NR 69
TC 54
Z9 57
U1 3
U2 21
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAR 1
PY 2022
VL 48
IS 3
BP 879
EP 892
DI 10.1109/TSE.2020.3007554
PG 14
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA ZU6ZO
UT WOS:000769989900010
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Zhang, JM
   Li, F
   Hao, D
   Wang, M
   Tang, H
   Zhang, L
   Harman, M
AF Zhang, Jie M.
   Li, Feng
   Hao, Dan
   Wang, Meng
   Tang, Hao
   Zhang, Lu
   Harman, Mark
TI A Study of Bug Resolution Characteristics in Popular Programming
   Languages
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Computer bugs; Software engineering; Java; Correlation; Programming
   languages; Data mining; Programming language; bug resolution; empirical
   study
ID MAINTAINABILITY PREDICTION; PYTHON; IMPACT
AB This paper presents a large-scale study that investigates the bug resolution characteristics among popular Github projects written in different programming languages. We explore correlations but, of course, we cannot infer causation. Specifically, we analyse bug resolution data from approximately 70 million Source Line of Code, drawn from 3 million commits to 600 GitHub projects, primarily written in 10 programming languages. We find notable variations in apparent bug resolution time and patch (fix) size. While interpretation of results from such large-scale empirical studies is inherently difficult, we believe that the differences in medians are sufficiently large to warrant further investigation, replication, re-analysis and follow up research. For example, in our corpus, the median apparent bug resolution time (elapsed time from raise to resolve) for Ruby was 4X that for Go and 2.5X for Java. We also found that patches tend to touch more files for the corpus of strongly typed and for statically typed programs. However, we also found evidence for a lower elapsed resolution time for bug resolution committed to projects constructed from statically typed languages. These findings, if replicated in subsequent follow on studies, may shed further empirical light on the debate about the importance of static typing.
C1 [Zhang, Jie M.; Li, Feng; Hao, Dan; Tang, Hao; Zhang, Lu] Peking Univ, Key Lab High Confidence Software Technol, MoE, Haidian 100871, Peoples R China.
   [Zhang, Jie M.; Harman, Mark] UCL, London WC1E 6BT, England.
   [Harman, Mark] Facebook London, London W1T 1FB, England.
   [Wang, Meng] Univ Bristol, Dept Comp Sci, Bristol BS8 1TH, Avon, England.
C3 Peking University; University of London; University College London;
   Facebook Inc; University of Bristol
RP Zhang, JM (corresponding author), Peking Univ, Key Lab High Confidence Software Technol, MoE, Haidian 100871, Peoples R China.
EM jie.zhang@ucl.ac.uk; lifeng2014@pku.edu.cn; haodan@pku.edu.cn;
   meng.wang@bristol.ac.uk; tanghaoth90@pku.edu.cn; zhanglucs@pku.edu.cn;
   mark.harman@ucl.ac.uk
RI Hao, Dan/A-8600-2015
OI Li, Feng/0000-0002-2746-4951; Zhang, Jie/0000-0003-0481-7264
FU ERC [741278]; National Key Research and Development Program of China
   [2017YFB1001803]; NSFC [61861130363]; Newton Advanced Fellowships
   [NAFnR1n180142]; Royal Society [NAFnR1n180142, IESnR3n170104]
FX This work was supported in part by the ERC advanced Grant No. 741278, by
   the National Key Research and Development Program of China under Grant
   No. 2017YFB1001803, by the NSFC Grant No. 61861130363, and in part by
   the Newton Advanced Fellowships NAFnR1n180142, and Royal Society
   IESnR3n170104 and NAFnR1n180142.
CR [Anonymous], 2017, DEV SURV RES 2017
   [Anonymous], MEAN MEDIAN MEASURES
   [Anonymous], GITTORRENT
   [Anonymous], cloc
   [Anonymous], 2009, Cambridge University Press, DOI DOI 10.1017/CBO9780511815867
   [Anonymous], 2017, MOST POP PROGR LANG
   [Anonymous], 2013, WHY DYNAMIC LANGUAGE
   [Anonymous], 2019, Homepage
   [Anonymous], 1999, MATH METHODS STAT
   [Anonymous], 2011, MONKEY PATCHING
   [Anonymous], GitHub
   [Anonymous], 2019, RUBY VS PYTHON
   [Anonymous], GITHUB API
   [Anonymous], 2014, WHAT IS COHENS KAPPA
   [Anonymous], GitHub developer document
   [Anonymous], 2017, 10 BEST PROGR LANG Y
   [Anonymous], 2014, RIGHT PROGR LANG STA
   [Anonymous], 2009, WHAT IS COHENS KAPPA
   [Anonymous], 2017, 10 MOST POP PROGR LA
   [Anonymous], 2015, 10 MOST POP PROGR LA
   [Anonymous], 2015, WHICH PROGRAMMING LA
   Arcuri A, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1, DOI 10.1145/1985793.1985795
   Arcuri A, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P1003
   Arcuri A, 2008, IEEE C EVOL COMPUTAT, P162, DOI 10.1109/CEC.2008.4630793
   Arnold Ken, 2000, The Java Programming Language, V2
   Bech M, 2005, HEALTH ECON, V14, P1079, DOI 10.1002/hec.984
   Berger ED, 2019, ACM T PROGR LANG SYS, V41, DOI 10.1145/3340571
   Bhattacharya P, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P171, DOI 10.1145/1985793.1985817
   Bissyandé TF, 2013, PROC INT SYMP SOFTW, P188, DOI 10.1109/ISSRE.2013.6698918
   BLYTH CR, 1972, J AM STAT ASSOC, V67, P364, DOI 10.2307/2284382
   Broussard S. J., 2006, U.S. Patent, Patent No. [7,036,045, 7036045]
   Daly M. T., 2009, IN PRESS
   Flanagan D.Y. Matsumoto., 2008, The Ruby Programming Language
   Hanenberg S, 2014, EMPIR SOFTW ENG, V19, P1335, DOI 10.1007/s10664-013-9289-1
   Hanenberg S, 2010, ACM SIGPLAN NOTICES, V45, P22, DOI 10.1145/1932682.1869462
   Hansson Daniel, 2015, 2015 16th International Workshop on Microprocessor and SOC Test and Verification (MTV), P26, DOI 10.1109/MTV.2015.21
   Hayes JH, 2005, PROC IEEE INT CONF S, P601
   Jia Y, 2011, IEEE T SOFTWARE ENG, V37, P649, DOI 10.1109/TSE.2010.62
   Kaur A., 2014, Proceedings of the 2014 International Conference on Data Mining and Intelligent Computing (ICDMIC), P1, DOI [DOI 10.1109/ICDMIC.2014.6954262, 10.1109/ICDMIC.2014.6954262]
   Kleinschmager S., 2012, 2012 IEEE 20th International Conference on Program Comprehension, P153
   McHugh ML, 2012, BIOCHEM MEDICA, V22, P276, DOI 10.11613/bm.2012.031
   Nierstrasz O, 2005, LECT NOTES COMPUT SC, V3628, P1, DOI 10.1007/11550679_1
   Oliphant TE, 2007, COMPUT SCI ENG, V9, P10, DOI 10.1109/MCSE.2007.58
   Papadakis M, 2019, ADV COMPUT, V112, P275, DOI 10.1016/bs.adcom.2018.03.015
   Phipps G, 1999, SOFTWARE PRACT EXPER, V29, P345, DOI 10.1002/(SICI)1097-024X(19990410)29:4<345::AID-SPE238>3.0.CO;2-C
   Ray B, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P155, DOI 10.1145/2635868.2635922
   Sanner MF, 1999, J MOL GRAPH MODEL, V17, P57
   Srinivasan KS, 2007, IEEE SIGNAL PROC LET, V14, P189, DOI 10.1109/LSP.2006.884018
   Steinberg M., 2011, THESIS U DUISBURG ES
   Tratt L, 2009, ADV COMPUT, V77, P149, DOI 10.1016/S0065-2458(09)01205-4
   Vittinghoff E, 2005, STAT BIOL HEALTH, pVII
   Weiss C, 2007, P 4 INT WORKSH MIN S, P1, DOI [10.1109/MSR.2007.13, DOI 10.1109/MSR.2007.13]
   Winer BJ., 1971, STAT PRINCIPLES EXPT
   WOHL JG, 1982, IEEE T SYST MAN CYB, V12, P241, DOI 10.1109/TSMC.1982.4308813
   Wonnacott T. H., 1972, INTRO STAT, V19690
   Zhang HY, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P1042, DOI 10.1109/ICSE.2013.6606654
   Zhang J, 2019, IEEE T SOFTWARE ENG, V45, P898, DOI 10.1109/TSE.2018.2809496
   Zhang J, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P833, DOI 10.1145/3236024.3275532
   Zhang J, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P883, DOI 10.1145/2950290.2950313
   Zhang J, 2015, SCI CHINA INFORM SCI, V58, DOI 10.1007/s11432-014-5241-2
   Zhang J, 2014, PROC INT SYMP SOFTW, P277, DOI 10.1109/ISSRE.2014.27
   Zhang JM, 2019, IEEE INT CONF SOFTW, P252, DOI 10.1109/ICST.2019.00033
   Zheng QM, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P637, DOI 10.1145/2786805.2786866
NR 63
TC 8
Z9 10
U1 2
U2 3
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD DEC 1
PY 2021
VL 47
IS 12
BP 2684
EP 2697
DI 10.1109/TSE.2019.2961897
PG 14
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA XM6HB
UT WOS:000728924600003
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Bao, LF
   Xia, X
   Lo, D
   Murphy, GC
AF Bao, Lingfeng
   Xia, Xin
   Lo, David
   Murphy, Gail C.
TI A Large Scale Study of Long-Time Contributor Prediction for GitHub
   Projects
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Long time contributor; GitHub; prediction model
ID SOURCE SOFTWARE-DEVELOPMENT; DEFECT PREDICTION; CENTRALITY; COMMUNITY
AB The continuous contributions made by long time contributors (LTCs) are a key factor enabling open source software (OSS) projects to be successful and survival. We study GITHUB as it has a large number of OSS projects and millions of contributors, which enables the study of the transition from newcomers to LTCs. In this paper, we investigate whether we can effectively predict newcomers in OSS projects to be LTCs based on their activity data that is collected from GITHUB. We collect GITHUB data from GHTorrent, a mirror of GITHUB data. We select the most popular 917 projects, which contain 75,046 contributors. We determine a developer as a LTC of a project if the time interval between his/her first and last commit in the project is larger than a certain time T. In our experiment, we use three different settings on the time interval: 1, 2, and 3 years. There are 9,238, 3,968, and 1,577 contributors who become LTCs of a project in three settings of time interval, respectively. To build a prediction model, we extract many features from the activities of developers on GITHUB, which group into five dimensions: developer profile, repository profile, developer monthly activity, repository monthly activity, and collaboration network. We apply several classifiers including naive Bayes, SVM, decision tree, kNN and random forest. We find that random forest classifier achieves the best performance with AUCs of more than 0.75 in all three settings of time interval for LTCs. We also investigate the most important features that differentiate newcomers who become LTCs from newcomers who stay in the projects for a short time. We find that the number of followers is the most important feature in all three settings of the time interval studied. We also find that the programming language and the average number of commits contributed by other developers when a newcomer joins a project also belong to the top 10 most important features in all three settings of time interval for LTCs. Finally, we provide several implications for action based on our analysis results to help OSS projects retain newcomers.
C1 [Bao, Lingfeng] Zhejiang Univ City Coll, Sch Comp & Comp Sci, Hangzhou Shi 310015, Zhejiang Sheng, Peoples R China.
   [Xia, Xin] Monash Univ, Fac Informat Technol, Clayton, Vic 3800, Australia.
   [Lo, David] Singapore Management Univ, Sch Informat Syst, Singapore 188065, Singapore.
   [Murphy, Gail C.] Univ British Columbia, Dept Comp Sci, Vancouver, BC V6T 1Z4, Canada.
C3 Hangzhou City University; Monash University; Singapore Management
   University; University of British Columbia
RP Xia, X (corresponding author), Monash Univ, Fac Informat Technol, Clayton, Vic 3800, Australia.
EM baolf@zucc.edu.cn; Xin.Xia@anonash.edu; davidlo@smu.edu.sg;
   murphy@cs.ubc.ca
RI Xia, Xin/AAD-6217-2022; bao, lingfeng/AEG-8299-2022; Lo,
   David/A-2493-2012
OI Xia, Xin/0000-0002-6302-3256; Lo, David/0000-0002-4367-7201
FU National Key Research and Development Program of China [2018YFB1003904];
   NSFC Program [61602403]; Project of Science and Technology Research and
   Development Program of China Railway Corporation [P2018X002];
   Fundamental Research Funds for the Central Universities
FX This research was partially supported by the National Key Research and
   Development Program of China (2018YFB1003904), NSFC Program (No.
   61602403), Project of Science and Technology Research and Development
   Program of China Railway Corporation (P2018X002), and the Fundamental
   Research Funds for the Central Universities.
CR Abdi H, 2007, ENCY MEASUREMENT STA, P103, DOI DOI 10.4135/9781412952644
   [Anonymous], 2018, SCOTT KNOTT ESD TEST
   [Anonymous], 2000, PSYCHOL SURVEY RESPO
   Baltes S, 2017, PROC IEEE ACM INT C, P161, DOI 10.1109/ICSE-C.2017.99
   Bao LF, 2017, IEEE WORK CONF MIN S, P170, DOI 10.1109/MSR.2017.58
   Blincoe K, 2016, INFORM SOFTWARE TECH, V70, P30, DOI 10.1016/j.infsof.2015.10.002
   BONACICH P, 1987, AM J SOCIOL, V92, P1170, DOI 10.1086/228631
   Boughorbel S, 2017, PLOS ONE, V12, DOI 10.1371/journal.pone.0177678
   Brandes U, 2007, INT J BIFURCAT CHAOS, V17, P2303, DOI 10.1142/S0218127407018403
   Breiman L., 2001, Mach. Learn., V45, P5
   Cliff N., 2014, ORDINAL METHODS BEHA
   Daniel S., 2011, INT C INF SYST SHANG, P7
   Dinh-Trong TT, 2005, IEEE T SOFTWARE ENG, V31, P481, DOI 10.1109/TSE.2005.73
   El Asri I, 2017, IFIP ADV INF COMM TE, V506, P217, DOI 10.1007/978-3-319-65151-4_21
   Fan YR, 2020, IEEE T SOFTWARE ENG, V46, P495, DOI 10.1109/TSE.2018.2864217
   Fawcett T, 2006, PATTERN RECOGN LETT, V27, P861, DOI 10.1016/j.patrec.2005.10.010
   Foucault M, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P829, DOI 10.1145/2786805.2786870
   FREEMAN LC, 1979, SOC NETWORKS, V1, P215, DOI 10.1016/0378-8733(78)90021-7
   Fronza I, 2013, 2013 6TH INTERNATIONAL WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING (CHASE), P57, DOI 10.1109/CHASE.2013.6614732
   Fu W, 2016, INFORM SOFTWARE TECH, V76, P135, DOI 10.1016/j.infsof.2016.04.017
   Goeminne M., 2011, JOINT PORCEEDINGS 1, P74
   Gousios G, 2013, IEEE WORK CONF MIN S, P233, DOI 10.1109/MSR.2013.6624034
   Guyon I., 2003, Journal of Machine Learning Research, V3, P1157, DOI 10.1162/153244303322753616
   Hall M., 2009, ACM SIGKDD Explor. Newsl, V11, P18, DOI DOI 10.1145/1656274.1656278
   Han J, 2012, MOR KAUF D, P1
   HORGAN TR, 1994, COMPUTER, V27, P60, DOI 10.1109/2.312032
   Hynninen Peitsa, 2010, Proceedings of the 2010 Fifth IEEE International Conference Global Software Engineering (ICGSE 2010), P145, DOI 10.1109/ICGSE.2010.25
   Izquierdo-Cortazar D., 2008, P 7 BELG NETH SOFTW, P6
   Jarczyk O, 2014, LECT NOTES COMPUT SC, V8851, P80, DOI 10.1007/978-3-319-13734-6_6
   Jiang T, 2013, IEEE INT CONF AUTOM, P279, DOI 10.1109/ASE.2013.6693087
   Jiang Y., 2008, DEFECTS 08 P 2008 WO, P16, DOI [DOI 10.1145/1390817.1390822, 10.1145/1390817.1390822]
   Kim S, 2008, IEEE T SOFTWARE ENG, V34, P181, DOI 10.1109/TSE.2007.70773
   Koch S, 2002, INFORM SYST J, V12, P27, DOI 10.1046/j.1365-2575.2002.00110.x
   Kraut RE, 2011, BUILDING SUCCESSFUL ONLINE COMMUNITIES: EVIDENCE-BASED SOCIAL DESIGN, P1
   Lamkanfi Ahmed, 2010, Proceedings of the 2010 7th IEEE Working Conference on Mining Software Repositories (MSR 2010), P1, DOI 10.1109/MSR.2010.5463284
   Laradji IH, 2015, INFORM SOFTWARE TECH, V58, P388, DOI 10.1016/j.infsof.2014.07.005
   Lessmann S, 2008, IEEE T SOFTWARE ENG, V34, P485, DOI 10.1109/TSE.2008.35
   MATTHEWS BW, 1975, BIOCHIM BIOPHYS ACTA, V405, P442, DOI 10.1016/0005-2795(75)90109-9
   Mende Thilo, 2010, P 6 INT C PRED MOD S, P5
   Menzies T, 2012, EMPIR SOFTW ENG, V17, P1, DOI 10.1007/s10664-011-9193-5
   Miller Jr R.G, 2011, SURVIVAL ANAL, V66
   Mockus A, 2002, ACM T SOFTW ENG METH, V11, P309, DOI 10.1145/567793.567795
   Mockus A, 2009, PROC INT CONF SOFTW, P67, DOI 10.1109/ICSE.2009.5070509
   Munaiah N, 2017, EMPIR SOFTW ENG, V22, P3219, DOI 10.1007/s10664-017-9512-6
   Nam J, 2015, IEEE INT CONF AUTOM, P452, DOI 10.1109/ASE.2015.56
   Nam J, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P382, DOI 10.1109/ICSE.2013.6606584
   Rahman F, 2012, Proceedings of the ACM SIGSOFT 20th International Symposium on the Foundations of Software Engineering, FSE '12, P61
   Ramos M, 2016, PLATEAU'16: PROCEEDINGS OF THE 7TH INTERNATIONAL WORKSHOP ON EVALUATION AND USABILITY OF PROGRAMMING LANGUAGES AND TOOLS, P9, DOI 10.1145/3001878.3001881
   Robles G., 2004, "Second International Workshop on Remote Analysis and Measurement of Software Systems (RAMSS 04)" - W15S Workshop - 26th International Conference on Software Engineering, P51, DOI 10.1049/ic:20040351
   Romano D., 2011, 2011 IEEE 27th International Conference on Software Maintenance, P303, DOI 10.1109/ICSM.2011.6080797
   Saramäki J, 2007, PHYS REV E, V75, DOI 10.1103/PhysRevE.75.027105
   Schilling A., 2012, 2012 45th Hawaii International Conference on System Sciences (HICSS), P3446, DOI 10.1109/HICSS.2012.644
   Sharma P. N., 2012, PROC IFIP INT C OPEN, P331
   Shepperd M, 2015, IEEE SOFTWARE, V32, P106, DOI 10.1109/MS.2015.8
   Shepperd M, 2014, IEEE T SOFTWARE ENG, V40, P603, DOI 10.1109/TSE.2014.2322358
   Spencer D., 2009, CARD SORTING DESIGNI
   Steinmacher I., 2014, P WORKSH GLOB SOFTW
   Stewart KJ, 2006, MIS QUART, V30, P291
   Tantithamthavorn C, 2018, 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING - SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2018), P286, DOI 10.1145/3183519.3183547
   Tantithamthavorn C, 2019, IEEE T SOFTWARE ENG, V45, P683, DOI 10.1109/TSE.2018.2794977
   Tian Y, 2015, PROC IEEE INT CONF S, P301, DOI 10.1109/ICSM.2015.7332476
   van Emden E, 2002, NINTH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P97, DOI 10.1109/WCRE.2002.1173068
   von Krogh G, 2003, RES POLICY, V32, P1217, DOI 10.1016/S0048-7333(03)00050-7
   Wehaibi S, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P179, DOI 10.1109/SANER.2016.72
   WILCOXON F, 1945, BIOMETRICS BULL, V1, P80, DOI 10.1093/jee/39.2.269
   Wolpert DH, 1999, MACH LEARN, V35, P41, DOI 10.1023/A:1007519102914
   Wu XD, 2008, KNOWL INF SYST, V14, P1, DOI 10.1007/s10115-007-0114-2
   Xia X, 2015, INFORM SOFTWARE TECH, V61, P93, DOI 10.1016/j.infsof.2014.12.006
   Xuan X, 2015, 30TH ANNUAL ACM SYMPOSIUM ON APPLIED COMPUTING, VOLS I AND II, P1644, DOI 10.1145/2695664.2695959
   Yamashita K., 2016, J INFORM PROCESS, V24, P339, DOI DOI 10.2197/IPSJJIP.24.339
   Yan M, 2019, IEEE T SOFTWARE ENG, V45, P1211, DOI 10.1109/TSE.2018.2831232
   Yiqing Yu, 2012, 2012 45th Hawaii International Conference on System Sciences (HICSS), P3396, DOI 10.1109/HICSS.2012.97
   Zanatta AL, 2018, SBES'18: PROCEEDINGS OF THE XXXII BRAZILIAN SYMPOSIUM ON SOFTWARE ENGINEERING, P5, DOI 10.1109/MS.2017.32
   Zanetti MS, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P1032, DOI 10.1109/ICSE.2013.6606653
   Zhang F, 2016, EMPIR SOFTW ENG, V21, P2107, DOI 10.1007/s10664-015-9396-2
   Zhou MH, 2015, IEEE T SOFTWARE ENG, V41, P82, DOI 10.1109/TSE.2014.2349496
NR 76
TC 35
Z9 37
U1 2
U2 14
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUN 1
PY 2021
VL 47
IS 6
BP 1277
EP 1298
DI 10.1109/TSE.2019.2918536
PG 22
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science; Engineering
GA SQ8XU
UT WOS:000660633800011
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Perez, DD
   Le, W
AF Perez, Danilo Dominguez
   Le, Wei
TI Specifying Callback Control Flow of Mobile Apps Using Finite Automata
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Tools; Automata; Microsoft Windows; Graphical user interfaces; Computer
   architecture; Static analysis; Cameras; Event-driven; framework-based;
   callbacks; control flow; extended finite automata; android; mobile;
   program analysis; information flow
AB Given the event-driven and framework-based architecture of Android apps, finding the ordering of callbacks executed by the framework remains a problem that affects every tool that requires inter-callback reasoning. Previous work has focused on the ordering of callbacks related to the Android components and GUI events. But the execution of callbacks can also come from direct calls of the framework (API calls). This paper defines a novel program representation, called Callback Control Flow Automata (CCFA), that specifies the control flow of callbacks invoked via a variety of sources. We present an analysis to automatically construct CCFAs by combining two callback control flow representations developed from the previous research, namely, Window Transition Graphs (WTGs) and Predicate Callback Summaries (PCSs). To demonstrate the usefulness of our representation, we integrated CCFAs into two client analyses: a taint analysis using FLOWDROID, and a value-flow analysis that computes source and sink pairs of a program. Our evaluation shows that we can compute CCFAs efficiently and that CCFAs improved the callback coverages over WTGs. As a result of using CCFAs, we obtained 33 more true positive security leaks than FLOWDROID over a total of 55 apps we have run. With a low false positive rate, we found that 22.76 percent of source-sink pairs we computed are located in different callbacks and that 31 out of 55 apps contain source-sink pairs spreading across components. Thus, callback control flow graphs and inter-callback analysis are indeed important. Although this paper mainly uses Android, we believe that CCFAs can be useful for modeling control flow of callbacks for other event-driven, framework-based systems.
C1 [Perez, Danilo Dominguez; Le, Wei] Iowa State Univ, Dept Comp Sci, Ames, IA 50011 USA.
C3 Iowa State University
RP Perez, DD (corresponding author), Iowa State Univ, Dept Comp Sci, Ames, IA 50011 USA.
EM danilo0@iastate.edu; weile@iastate.edu
OI Dominguez Perez, Danilo/0000-0002-9846-2451; le, wei/0000-0002-6797-0648
FU IFARHU-SENACYT scholarships from the Government of Panama
FX Danilo Dominguez Perez was supported by IFARHU-SENACYT scholarships from
   the Government of Panama.
CR Amalfitano D, 2012, IEEE INT CONF AUTOM, P258, DOI 10.1145/2351676.2351717
   Analyses P., 2017, GATOR PROGRAM ANAL T
   Andreasen E, 2014, ACM SIGPLAN NOTICES, V49, P17, DOI [10.1145/2714064.2660214, 10.1145/2660193.2660214]
   [Anonymous], 2007, P 2007 INT S SOFTWAR
   Arzt S, 2014, ACM SIGPLAN NOTICES, V49, P259, DOI [10.1145/2666356.2594299, 10.1145/2594291.2594299]
   Arzt S, 2016, PROC INT CONF SOFTW, P725, DOI 10.1145/2884781.2884816
   Azim T, 2013, ACM SIGPLAN NOTICES, V48, P641, DOI [10.1145/2509136.2509549, 10.1145/2544173.2509549]
   Blackshear S., 2015, SOAP, P19, DOI DOI 10.1145/2771284.2771288
   Blackshear S, 2015, ACM SIGPLAN NOTICES, V50, P163, DOI [10.1145/2814270.2814293, 10.1145/2858965.2814293]
   Callaham J., 2015, Google says there are 1.4 billion active android devices worldwide
   CHENG KT, 1993, ACM IEEE D, P86
   Darmstadt T., 2016, DROIDB BENCHM
   De A, 2012, LECT NOTES COMPUT SC, V7313, P665, DOI 10.1007/978-3-642-31057-7_29
   Dietrich C, 2015, ACM SIGPLAN NOTICES, V50, DOI 10.1145/2670529.2754963
   Dominguez Perez Danilo, 2017, 2017 IEEE/ACM 4th International Conference on Mobile Software Engineering and Systems (MOBILESoft). Proceedings, P68, DOI 10.1109/MOBILESoft.2017.28
   F.-D. Limited and Contributors, 2017, F DROID
   Griebe Tobias., 2015, International Conference on Intelligent Software Methodologies, Tools, and Techniques, P3
   Guo CR, 2013, IEEE INT CONF AUTOM, P389, DOI 10.1109/ASE.2013.6693097
   Hsiao CH, 2014, ACM SIGPLAN NOTICES, V49, P326, DOI [10.1145/2666356.2594330, 10.1145/2594291.2594330]
   Jensen S.H., 2011, P 19 ACM SIGSOFT S 1, P59
   Lhoták O, 2003, LECT NOTES COMPUT SC, V2622, P153
   Li L, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P280, DOI 10.1109/ICSE.2015.48
   Liang S., 2013, Proceedings of the Third ACM workshop on Security and privacy in smartphones mobile devices, P21, DOI DOI 10.1145/2516760.2516769
   Liu YP, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P1013, DOI 10.1145/2568225.2568229
   Madsen M, 2015, ACM SIGPLAN NOTICES, V50, P505, DOI [10.1145/2858965.2814272, 10.1145/2814270.2814272]
   Maiya P, 2014, ACM SIGPLAN NOTICES, V49, P316, DOI [10.1145/2666356.2594311, 10.1145/2594291.2594311]
   Mannan UA, 2016, 2016 IEEE/ACM INTERNATIONAL CONFERENCE ON MOBILE SOFTWARE ENGINEERING AND SYSTEMS (MOBILESOFT 2016), P225, DOI [10.1109/MobileSoft.2016.048, 10.1145/2897073.2897094]
   N. Foundation, 2018, NODE JS
   Octeau D, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P77, DOI 10.1109/ICSE.2015.30
   Pathak A., 2012, Mobisys, DOI DOI 10.1145/2307636.2307661
   Petrenko A, 2004, IEEE T SOFTWARE ENG, V30, P29, DOI 10.1109/TSE.2004.1265734
   Rountev A, 1999, LECT NOTES COMPUT SC, V1687, P235, DOI 10.1145/318774.318945
   Statista, 2017, NUMB APPS AV GOOGL P
   Sundaresan V., 1999, P C CTR ADV STUD COL
   Vallee-Rai Raja, 1998, Jimple: Simplifying Java bytecode for analyses and transformations
   Wang Y., 2016, P 5 SIGPLAN INT WORK, P18
   Wei FG, 2014, CCS'14: PROCEEDINGS OF THE 21ST ACM CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P1329, DOI 10.1145/2660267.2660357
   Wu HW, 2018, INT WORKSH AUTOMAT, P27, DOI 10.1145/3194733.3194734
   Yang SQ, 2018, AUTOMAT SOFTW ENG, V25, P833, DOI 10.1007/s10515-018-0237-6
   Yang SQ, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P89, DOI 10.1109/ICSE.2015.31
   Yang ZM, 2012, WOR CONG SOFTW ENG, P101, DOI 10.1109/WCSE.2012.26
NR 41
TC 1
Z9 1
U1 0
U2 2
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD FEB 1
PY 2021
VL 47
IS 2
BP 379
EP 392
DI 10.1109/TSE.2019.2893207
PG 14
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA QG7HE
UT WOS:000617753400010
DA 2024-07-18
ER

PT J
AU Karim, R
   Tip, F
   Sochurkova, A
   Sen, K
AF Karim, Rezwana
   Tip, Frank
   Sochurkova, Alena
   Sen, Koushik
TI Platform-Independent Dynamic Taint Analysis for JavaScript
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Instruments; Engines; Browsers; Tools; Privacy; Gears; Data privacy;
   Taint analysis; dynamic analysis; JavaScript; platform-independent;
   instrumentation
AB Previous approaches to dynamic taint analysis for JavaScript are implemented directly in a browser or JavaScript engine, limiting their applicability to a single platform and requiring ongoing maintenance as platforms evolve, or they require nontrivial program transformations. We present an approach that relies on instrumentation to encode taint propagation as instructions for an abstract machine. Our approach has two key advantages: it is platform-independent and can be used with any existing JavaScript engine, and it can track taint on primitive values without requiring the introduction of wrapper objects. Furthermore, our technique enables multiple deployment scenarios by varying when and where the generated instructions are executed and it supports indirect taint sources, i.e., situations where taint enters an application via arguments passed to dynamically registered event-listener functions. We implemented the technique for the ECMAScript 5 language in a tool called Ichnaea, and evaluated it on 22 NPM modules containing several types of injection vulnerabilities, including 4 modules containing vulnerabilities that were not previously discovered and reported. On these modules, run-time overheads range from 3.17x to 38.42x, which is significantly better than a previous transformation-based technique. We also report on a case study that shows how Ichnaea can be used to detect privacy leaks in a Tizen web application for the Samsung Gear S2 smart watch.
C1 [Karim, Rezwana] Samsung Res Amer, Mountain View, CA 94043 USA.
   [Tip, Frank] Northeastern Univ, Coll Comp & Informat Sci, Boston, MA 02115 USA.
   [Sochurkova, Alena] Avast, Prague 14000, Czech Republic.
   [Sen, Koushik] Univ Calif Berkeley, Berkeley, CA 94720 USA.
C3 Samsung; Northeastern University; University of California System;
   University of California Berkeley
RP Tip, F (corresponding author), Northeastern Univ, Coll Comp & Informat Sci, Boston, MA 02115 USA.
EM rezwana.k@samsung.com; f.tip@northeastern.edu;
   sochurkova.alena@gmail.com; ksen@berkeley.edu
OI Tip, Frank/0000-0002-1862-3498
FU European Research Council (ERC) under European Union [695412]; NSF
   [CCF-1715153]; European Research Council (ERC) [695412] Funding Source:
   European Research Council (ERC)
FX Alena Sochurkova's work was carried out while she was a student at Czech
   Technical University in Prague, and was supported by funding from the
   European Research Council (ERC) under the European Union's I lorizon
   2020 research and innovation programme (grant agreement 695412). Frank
   Tip was supported in part by NSF grant CCF-1715153. Most of the work of
   Frank Tip was carried out during his employment at Samsung Research
   America. The work of Koushik Sen was carried out during his employment
   at Samsung Research America.
CR [Anonymous], CROSS SITE SCRIPTING
   [Anonymous], 2002, THESIS
   [Anonymous], 2013, P 2013 9 JOINT M FDN, DOI [10.1145/2491411.2491447, DOI 10.1145/2491411.2491447]
   [Anonymous], 2011, P 2011 INT S SOFTW T, DOI DOI 10.1145/2001420.2001442
   [Anonymous], 2010, P USENIX S OP SYST D
   Arzt S, 2014, ACM SIGPLAN NOTICES, V49, P259, DOI [10.1145/2666356.2594299, 10.1145/2594291.2594299]
   AUSTIN TH, 2010, P 5 ACM SIGPLAN WORK, DOI DOI 10.1145/1814217.1814220
   Austin Thomas H., 2009, P ACM SIGPLAN 4 WORK, P113, DOI DOI 10.1145/1554339.1554353
   Austin Thomas H., 2011, UCSCSOE1119
   Bichhawat A, 2014, INT C PRINC SEC TRUS, P159
   Cantelon M., 2014, NODE JS IN ACTION
   Chudnov A, 2015, CCS'15: PROCEEDINGS OF THE 22ND ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P629, DOI 10.1145/2810103.2813684
   Chudnov A, 2010, 2010 23RD IEEE COMPUTER SECURITY FOUNDATIONS SYMPOSIUM (CSF), P200, DOI 10.1109/CSF.2010.21
   Chugh R, 2009, PLDI'09 PROCEEDINGS OF THE 2009 ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P50, DOI 10.1145/1542476.1542483
   Clause J., 2007, P 2007 INT S SOFTW T, DOI [10.1145/1273463.1273490, DOI 10.1145/1273463.1273490]
   DENNING DE, 1977, COMMUN ACM, V20, P504, DOI 10.1145/359636.359712
   Dhawan M, 2009, 25TH ANNUAL COMPUTER SECURITY APPLICATIONS CONFERENCE, P382, DOI 10.1109/ACSAC.2009.43
   Disney T, 2015, ACM SIGPLAN NOTICES, V50, P35, DOI 10.1145/2661088.2661097
   Hedin D, 2017, LECT NOTES COMPUT SC, V10204, P49, DOI 10.1007/978-3-662-54455-6_3
   Hedin D, 2012, P IEEE CSFW, P3, DOI 10.1109/CSF.2012.19
   Hedin Daniel, 2014, P 29 ANN ACM S APPL, P1663
   Jang D, 2010, PROCEEDINGS OF THE 17TH ACM CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY (CCS'10), P270, DOI 10.1145/1866307.1866339
   Jaygarl H., 2014, PROFESSIONAL TIZEN A
   Just S., 2011, P ACM SIGPLAN INT WO, P9
   Kannan P., 2016, P WORKSH MET TECHN R
   Kerschbaumer Christoph., 2013, ISC, volume 7807 of Lecture Notes in Computer Science, V7807, P321
   Liu Y, 2010, EUR CON SFTWR MTNCE, P146, DOI 10.1109/CSMR.2010.26
   Luk CK, 2005, ACM SIGPLAN NOTICES, V40, P190, DOI 10.1145/1064978.1065034
   Nikiforakis Nick, 2012, P 2012 ACM C COMP CO, P736, DOI DOI 10.1145/2382196.2382274
   Richards G, 2011, LECT NOTES COMPUT SC, V6813, P52, DOI 10.1007/978-3-642-22655-7_4
   Santos JF, 2014, IFIP ADV INF COMM TE, V428, P278
   Saoji T, 2017, PROCEEDINGS OF THE 2017 WORKSHOP ON PROGRAMMING LANGUAGES AND ANALYSIS FOR SECURITY (PLAS' 17), P15, DOI 10.1145/3139337.3139341
   Schwartz EJ, 2010, P IEEE S SECUR PRIV, P317, DOI 10.1109/SP.2010.26
   Sjösten A, 2018, LECT NOTES COMPUT SC, V10854, P141, DOI 10.1007/978-3-319-92612-4_8
   Staicu Cristian-Alexandru, 2018, P 25 ANN NETW DISTR
   Tripp O, 2009, PLDI'09 PROCEEDINGS OF THE 2009 ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P87, DOI 10.1145/1542476.1542486
   Wei Shiyi., 2013, P 2013 INT S SOFTWAR, P336
   Zavou A, 2011, LECT NOTES COMPUT SC, V7038, P113, DOI 10.1007/978-3-642-25141-2_8
NR 38
TC 23
Z9 28
U1 2
U2 9
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD DEC 1
PY 2020
VL 46
IS 12
BP 1364
EP 1379
DI 10.1109/TSE.2018.2878020
PG 16
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA PD6GQ
UT WOS:000597780900005
OA hybrid
DA 2024-07-18
ER

PT J
AU Wu, HY
   Nie, CH
   Petke, J
   Jia, Y
   Harman, M
AF Wu, Huayao
   Nie, Changhai
   Petke, Justyna
   Jia, Yue
   Harman, Mark
TI An Empirical Comparison of Combinatorial Testing, Random Testing and
   Adaptive Random Testing
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Testing; Subspace constraints; Computational efficiency; Fault
   detection; Analytical models; Software systems; Combinatorial testing;
   random testing; adaptive random testing
AB We present an empirical comparison of three test generation techniques, namely, Combinatorial Testing (CT), Random Testing (RT) and Adaptive Random Testing (ART), under different test scenarios. This is the first study in the literature to account for the (more realistic) testing setting in which the tester may not have complete information about the parameters and constraints that pertain to the system, and to account for the challenge posed by faults (in terms of failure rate). Our study was conducted on nine real-world programs under a total of 1683 test scenarios (combinations of available parameter and constraint information and failure rate). The results show significant differences in the techniques' fault detection ability when faults are hard to detect (failure rates are relatively low). CT performs best overall; no worse than any other in 98 percent of scenarios studied. ART enhances RT, and is comparable to CT in 96 percent of scenarios, but its computational cost can be up to 3.5 times higher than CT when the program is highly constrained. Additionally, when constraint information is unavailable for a highly-constrained program, a large random test suite is as effective as CT or ART, yet its computational cost of test generation is significantly lower than that of other techniques.
C1 [Wu, Huayao; Nie, Changhai] Nanjing Univ, Dept Comp Sci & Technol, Nanjing 210023, Jiangsu, Peoples R China.
   [Petke, Justyna; Jia, Yue; Harman, Mark] UCL, CREST, Comp Sci, London WC1E 6BT, England.
   [Jia, Yue; Harman, Mark] Facebook Inc, London W1T 1FB, England.
C3 Nanjing University; University of London; University College London;
   Facebook Inc
RP Wu, HY (corresponding author), Nanjing Univ, Dept Comp Sci & Technol, Nanjing 210023, Jiangsu, Peoples R China.
EM hywu@smail.nju.edu.cn; changhainie@nju.edu.cn; j.petke@ucl.ac.uk;
   yue.jia@ucl.ac.uk; mark.harman@ucl.ac.uk
RI Nie, Changhai/IWM-7504-2023
OI Petke, Justyna/0000-0002-7833-6044
FU National Key Research and Development Plan [2018YFB1003800]; Program B
   for Outstanding PhD Candidate of Nanjing University [201701B028]; DAASE
   EPSRC [EP/J017515/1]; EPSRC Fellowship [EP/P023991/1]; EPSRC
   [EP/P023991/1, EP/J017515/1] Funding Source: UKRI
FX This work was partially supported by the National Key Research and
   Development Plan (No. 2018YFB1003800) and the Program B for Outstanding
   PhD Candidate of Nanjing University (No. 201701B028). This work was also
   partially supported by the DAASE EPSRC Grant (No. EP/J017515/1) and
   EPSRC Fellowship (No. EP/P023991/1).
CR Anand S, 2013, J SYST SOFTWARE, V86, P1978, DOI 10.1016/j.jss.2013.02.061
   [Anonymous], 2010, Proceedings of the 19th International Symposium on Software Testing and Analysis, ISSTA'10
   Arcuri A, 2012, IEEE T SOFTWARE ENG, V38, P1088, DOI 10.1109/TSE.2011.85
   Arcuri A, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1, DOI 10.1145/1985793.1985795
   Ballance W. A., 2012, 2012 IEEE Fifth International Conference on Software Testing, Verification and Validation (ICST 2012), P580, DOI 10.1109/ICST.2012.144
   Bell KZ, 2005, ENABLING TECHNOLOGIES FOR THE NEW KNOWLEDGE SOCIETY, P221
   Binkley D, 2015, IEEE INT WORK C SO, P1, DOI 10.1109/SCAM.2015.7335396
   Bryce RC, 2006, ASPEC 2006: 13TH ASIA-PACIFIC SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P259
   Bryce RC, 2006, INFORM SOFTWARE TECH, V48, P960, DOI 10.1016/j.infsof.2006.03.004
   Calvagna A, 2015, 30TH ANNUAL ACM SYMPOSIUM ON APPLIED COMPUTING, VOLS I AND II, P1797, DOI 10.1145/2695664.2695905
   Chen TY, 2010, J SYST SOFTWARE, V83, P60, DOI 10.1016/j.jss.2009.02.022
   Chen TY, 2004, LECT NOTES COMPUT SC, V3321, P320
   CHEN TY, 1994, IEEE T SOFTWARE ENG, V20, P977, DOI 10.1109/32.368132
   Choi EH, 2016, 2016 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY AND SECURITY (QRS 2016), P61, DOI 10.1109/QRS.2016.17
   Ciupa I, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P71, DOI 10.1145/1368088.1368099
   Cohen MB, 2008, IEEE T SOFTWARE ENG, V34, P633, DOI 10.1109/TSE.2008.50
   Colbourn CJ, 2014, DISCRET MATH ALGORIT, V6, DOI 10.1142/S1793830914500347
   Czerwonka J., 2006, PROC 24 PACIFIC NW S, P419
   Dalal SR, 1998, TECHNOMETRICS, V40, P234, DOI 10.2307/1271179
   Do HS, 2005, EMPIR SOFTW ENG, V10, P405, DOI 10.1007/s10664-005-3861-2
   Dunietz IS, 1997, PROC INT CONF SOFTW, P205, DOI 10.1145/253228.253271
   DURAN JW, 1984, IEEE T SOFTWARE ENG, V10, P438, DOI 10.1109/TSE.1984.5010257
   Ellims M, 2008, LECT NOTES COMPUT SC, V5219, P16, DOI 10.1007/978-3-540-87698-4_5
   Garvin BJ, 2011, EMPIR SOFTW ENG, V16, P61, DOI 10.1007/s10664-010-9135-7
   Ghandehari LS, 2014, IEEE ICST WORKSHOP, P68, DOI 10.1109/ICSTW.2014.8
   Harman M, 2012, LECT NOTES COMPUT SC, V7007, P1
   Henard C, 2014, IEEE T SOFTWARE ENG, V40, P650, DOI 10.1109/TSE.2014.2327020
   Hnich B, 2006, CONSTRAINTS, V11, P199, DOI 10.1007/s10601-006-7094-9
   Jia Y, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P540, DOI 10.1109/ICSE.2015.71
   Khalsa SK, 2014, PROC INT SYMP SOFTW, P323, DOI 10.1109/ISSRE.2014.15
   Kobayashi N, 2001, INTERNATIONAL CONFERENCE ON DEPENDABLE SYSTEMS AND NETWORKS, PROCEEDINGS, P337, DOI 10.1109/DSN.2001.941418
   Kuhn D.R., 2009, P MODSIM WORLD, P83
   Kuhn DR, 2004, IEEE T SOFTWARE ENG, V30, P418, DOI 10.1109/TSE.2004.24
   Kuhn R, 2008, CROSSTALK J DEFENSE, V21, P22
   Lin JK, 2015, IEEE INT CONF AUTOM, P494, DOI 10.1109/ASE.2015.61
   Lin Y, 2009, IEEE INT CONF AUTOM, P221, DOI 10.1109/ASE.2009.13
   Liu WL, 2007, INT C COMP AID DES C, P252
   Medeiros F, 2016, PROC INT CONF SOFTW, P643, DOI 10.1145/2884781.2884793
   Nie CH, 2015, INFORM SOFTWARE TECH, V62, P198, DOI 10.1016/j.infsof.2015.02.008
   Nie CH, 2013, INT CONF QUAL SOFTW, P284, DOI 10.1109/QSIC.2013.22
   Nie CH, 2011, ACM COMPUT SURV, V43, DOI 10.1145/1883612.1883618
   Papadakis M, 2014, 2014 IEEE SEVENTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST), P1, DOI 10.1109/ICST.2014.11
   Petke J, 2015, IEEE T SOFTWARE ENG, V41, P901, DOI 10.1109/TSE.2015.2421279
   Petke J, 2015, 2015 IEEE/ACM 8TH INTERNATIONAL WORKSHOP ON SEARCH-BASED SOFTWARE TESTING (SBST), P17, DOI 10.1109/SBST.2015.11
   Pretschner Alexander., 2008, 2008 1 INT C SOFTWAR, P338
   Qu X, 2013, IEEE ICST WORKSHOP, P285, DOI 10.1109/ICSTW.2013.40
   Sánchez AB, 2017, SOFTW SYST MODEL, V16, P173, DOI 10.1007/s10270-015-0459-z
   Schroeder PJ, 2004, 2004 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P49
   Tappenden AF, 2009, IEEE T RELIAB, V58, P619, DOI 10.1109/TR.2009.2034288
   Tartler R, 2011, EUROSYS 11: PROCEEDINGS OF THE EUROSYS 2011 CONFERENCE, P47
   Vargha A, 2000, J EDUC BEHAV STAT, V25, P101, DOI 10.3102/10769986025002101
   Vilkomir S, 2013, IEEE ICST WORKSHOP, P249, DOI 10.1109/ICSTW.2013.83
   Yilmaz C, 2014, IEEE T SOFTWARE ENG, V40, P43, DOI 10.1109/TSE.2013.53
   Yilmaz C, 2014, COMPUTER, V47, P37, DOI 10.1109/MC.2013.408
   Yokoi K, 2015, PROCEEDINGS OF INTERNATIONAL CONFERENCE ON ARTIFICIAL LIFE AND ROBOTICS (ICAROB2015), P1
   Zhou B, 2013, IEEE T COMPUT, V62, P186, DOI 10.1109/TC.2011.208
NR 56
TC 20
Z9 22
U1 2
U2 10
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAR 1
PY 2020
VL 46
IS 3
BP 302
EP 320
DI 10.1109/TSE.2018.2852744
PG 19
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA KX9OY
UT WOS:000522205900004
OA Green Published, Bronze
DA 2024-07-18
ER

PT J
AU Al-Baik, O
   Miller, J
AF Al-Baik, Osama
   Miller, James
TI Integrative Double Kaizen Loop (IDKL): Towards a Culture of Continuous
   Learning and Sustainable Improvements for Software Organizations
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Continuous improvement; Research and development; Standards
   organizations; Learning systems; Kaizen; lean; organization learning;
   double loop learning; case study; empirical research
ID REVIEWS
AB In the past decades, software organizations have been relying on implementing process improvement methods to advance quality, productivity, and predictability of their development and maintenance efforts. However, these methods have proven to be challenging to implement in many situations, and when implemented, their benefits are often not sustained. Commonly, the workforce requires guidance during the initial deployment, but what happens after the guidance stops? Why do not traditional improvement methods deliver the desired results? And, how do we maintain the improvements when they are realized? In response to these questions, we have combined social and organizational learning methods with Leans continuous improvement philosophy, Kaizen, which has resulted in an IDKL model that has successfully promoted continuous learning and improvement. The IDKL has evolved through a real-life project with an industrial partner; the study employed ethnographic action research with 231 participants and had lasted for almost 3 years. The IDKL requires employees to continuously apply small improvements to the daily routines of the work-procedures. The small improvements by themselves are unobtrusive. However, the IDKL has helped the industrial partner to implant continuous improvement as a daily habit. This has led to realizing sustainable and noticeable improvements. The findings show that on average, Lead Time has dropped by 46 percent, Process Cycle Efficiency has increased by 137 percent, First-Pass Process Yield has increased by 27 percent, and Customer Satisfaction has increased by 25 percent.
C1 [Al-Baik, Osama; Miller, James] Univ Alberta Edmonton, Dept Elect & Comp Engn, Edmonton, AB T6G 2R3, Canada.
RP Al-Baik, O (corresponding author), Univ Alberta Edmonton, Dept Elect & Comp Engn, Edmonton, AB T6G 2R3, Canada.
EM albaik@ualberta.ca; jimm@ualberta.ca
RI Al Baik, Osama/JHU-6734-2023
OI Al Baik, Osama/0000-0002-5583-0453; Miller, James/0000-0001-5095-3000
CR Abrahamsson P., 2002, THESIS
   Al-Baik O, 2016, P ANN HICSS, P5388, DOI 10.1109/HICSS.2016.666
   Al-Baik O, 2015, EMPIR SOFTW ENG, V20, P1861, DOI 10.1007/s10664-014-9340-x
   Al-Baik O, 2014, EMPIR SOFTW ENG, V19, P2019, DOI 10.1007/s10664-014-9302-3
   Allen P, 2003, THIRD INTERNATIONAL CONFERENCE ON QUALITY SOFTWARE, PROCEEDINGS, P211, DOI 10.1109/QSIC.2003.1319105
   [Anonymous], 2004, REASONS RATIONALIZAT
   [Anonymous], 155045 ISOIEC
   [Anonymous], 2011, DEV EVALUATION
   Argyris C., 1981, ORG LEARNING, DOI DOI 10.5465/AMR.1985.4279103
   Argyris C, 2002, ACAD MANAG LEARN EDU, V1, P206, DOI 10.5465/AMLE.2002.8509400
   Banerjee M, 1999, CAN J STAT, V27, P3, DOI 10.2307/3315487
   Basili V.R., 1992, Software Modeling and Measurement: The Goal/Question/Metric Paradigm
   Basili VR, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P69, DOI 10.1109/ICSE.2002.1007957
   BASILI VR, 1989, PROCEEDINGS : THE THIRTEENTH ANNUAL INTERNATIONAL COMPUTER SOFTWARE & APPLICATIONS CONFERENCE, P471, DOI 10.1109/CMPSAC.1989.65127
   Berander P., 2006, INT S EMPIRICAL SOFT, P316
   Berger A., 1997, Integrated Manufacturing Systems, V8, P110, DOI 10.1108/09576069710165792
   Besterfield DaleH., 2009, QUALITY CONTROL
   Biehl RB, 2004, IEEE SOFTWARE, V21, P68, DOI 10.1109/MS.2004.1270765
   Brockbank Anne, 2007, FACILITATING REFLECT
   Calderon NN, 2015, J SOFTW-EVOL PROC, V27, P896, DOI 10.1002/smr.1738
   Charmaz K, 2014, QUAL INQ, V20, P1074, DOI 10.1177/1077800414545235
   Chaudhuri S, 1997, INNOVATION IN TECHNOLOGY MANAGEMENT - THE KEY TO GLOBAL LEADERSHIP, P365, DOI 10.1109/PICMET.1997.653415
   Croasdell D., 2016, P 36 ANN HAW INT C S
   Daniels R. C., 1995, Engineering Management Journal, V5, P211, DOI 10.1049/em:19950507
   Dennis P., 2007, LEAN PRODUCTION SIMP
   Dingsoyr T, 2005, INFORM SOFTWARE TECH, V47, P293, DOI 10.1016/j.infsof.2004.08.008
   Dittrich Y, 2008, EMPIR SOFTW ENG, V13, P231, DOI 10.1007/s10664-007-9057-1
   Doolen T., 2003, P IIE ANN C, P1
   Dyba T., 2002, Empirical Software Engineering, V7, P387, DOI 10.1023/A:1020535725648
   Dybå T, 2012, IEEE SOFTWARE, V29, P19, DOI 10.1109/MS.2012.126
   Easterbrook S., 2008, GUIDE ADV EMPIRICAL, P285, DOI [DOI 10.1007/978-1-84800-044-5_11, DOI 10.1007/978-1-84800-044-511]
   Farris J.A., 2006, THESIS
   Hollnagel E, 2009, ETTO PRINCIPLE: EFFICIENCY-THOROUGHNESS TRADE-OFF: WHY THINGS THAT GO RIGHT SOMETIMES GO WRONG, P1
   IBM, 2016, CAS STUD UNC CAUS RE
   Imai M., 1986, KAIZEN KYZEN KEY JAP
   Japan Human Relations Association, 1992, KAIZ TEIAN 2 GUID CO
   Kim DH., 2009, The strategic management of intellectual capital, P41
   Kondo Y., 2000, THE TQM MAGAZINE, V12, P6, DOI [DOI 10.1108/09544780010287177, 10.1108/09544780010287177]
   Koper R, 2009, LEARNING NETWORK SERVICES FOR PROFESSIONAL DEVELOPMENT, P1, DOI 10.1007/978-3-642-00978-5
   Lethbridge TC, 2005, EMPIR SOFTW ENG, V10, P311, DOI 10.1007/s10664-005-1290-x
   Lyons N, 2010, HANDBOOK OF REFLECTION AND REFLECTIVE INQUIRY, P1, DOI 10.1007/978-0-387-85744-2
   Malik K., 2008, SOFTWARE QUALITY
   Middleton P., 2005, LEAN SOFTWARE STRATE
   Murugaiah U, 2010, INT J QUAL RELIAB MA, V27, P527, DOI 10.1108/02656711011043517
   PAULK MC, 1993, IEEE SOFTWARE, V10, P18, DOI 10.1109/52.219617
   Petersen K, 2010, J SYST SOFTWARE, V83, P1275, DOI 10.1016/j.jss.2010.02.005
   Pettersson F, 2008, J SYST SOFTWARE, V81, P972, DOI 10.1016/j.jss.2007.08.032
   Poppendieck M., 2000, LEAN SOFTWARE DEV AG
   Rahim M.A., 2001, Managing Conflict in Organizations
   Rogers A., 2002, SUPPORTING LIFELONG, P8
   ROSS L, 1977, J EXP SOC PSYCHOL, V13, P279, DOI 10.1016/0022-1031(77)90049-X
   Ruhe G, 2002, LECT NOTES COMPUT SC, V2640, P104
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Salo O., 2007, Software Process Improvement and Practice, V12, P81, DOI 10.1002/spip.305
   Seibert K.W., 1999, ROLE REFLECTION MANA
   Senge P.M., 2006, 5 DISCIPLINE
   Shah R, 2007, J OPER MANAG, V25, P785, DOI 10.1016/j.jom.2007.01.019
   Singh J., 2009, IUP J OPERATIONS MAN, V8, P51
   Spitzer R., 2007, CHOICE REV ONLINE, V44, P5744
   Staats BR, 2011, J OPER MANAG, V29, P376, DOI 10.1016/j.jom.2010.11.005
   van Solingen R., 2002, Goal question metric (gqm) approach, DOI [10.1002/0471028959.sof142, DOI 10.1002/0471028959.SOF142]
   Viana Davi, 2012, 16th International Conference on Evaluation & Assessment in Software Engineering (EASE 2012), P121, DOI 10.1049/ic.2012.0015
   Virtanen P, 2013, P ANN HICSS, P4606, DOI 10.1109/HICSS.2013.609
   Wang XF, 2012, J SYST SOFTWARE, V85, P1287, DOI 10.1016/j.jss.2012.01.061
   Watson G., 2005, MANAGING FOR RESULTS
   WICKENS PD, 1990, IEE PROC-A, V137, P52, DOI 10.1049/ip-a-2.1990.0007
NR 66
TC 4
Z9 4
U1 2
U2 17
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD DEC 1
PY 2019
VL 45
IS 12
BP 1189
EP 1210
DI 10.1109/TSE.2018.2829722
PG 22
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA JW0NQ
UT WOS:000502756700002
DA 2024-07-18
ER

PT J
AU Bruce, BR
   Petke, J
   Harman, M
   Barr, ET
AF Bruce, Bobby R.
   Petke, Justyna
   Harman, Mark
   Barr, Earl T.
TI Approximate Oracles and Synergy in Software Energy Search Spaces
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Energy consumption; Energy measurement; Software systems; Optimization;
   Aggregates; Genetics; Search-based software engineering; search space;
   energy consumption; genetic improvement; synergy; antagonism; oracle;
   approximation
ID OPTIMIZATION
AB Reducing the energy consumption of software systems through optimisation techniques such as genetic improvement is gaining interest. However, efficient and effective improvement of software systems requires a better understanding of the code-change search space. One important choice practitioners have is whether to preserve the system & x0027;s original output or permit approximation, with each scenario having its own search space characteristics. When output preservation is a hard constraint, we report that the maximum energy reduction achievable by the modification operators is 2.69 percent (0.76 percent on average). By contrast, this figure increases dramatically to 95.60 percent (33.90 percent on average) when approximation is permitted, indicating the critical importance of approximate output quality assessment for code optimisation. We investigate synergy, a phenomenon that occurs when simultaneously applied source code modifications produce an effect greater than their individual sum. Our results reveal that 12.0 percent of all joint code modifications produced such a synergistic effect, though 38.5 percent produce an antagonistic interaction in which simultaneously applied modifications are less effective than when applied individually. This highlights the need for more advanced search-based techniques.
C1 [Bruce, Bobby R.; Petke, Justyna; Harman, Mark; Barr, Earl T.] UCL, London WC1E 6BT, England.
C3 University of London; University College London
RP Bruce, BR (corresponding author), UCL, London WC1E 6BT, England.
EM r.bruce@cs.ucl.ac.uk; j.petke@ucl.ac.uk; mark.harman@ucl.ac.uk;
   e.barr@ucl.ac.uk
RI /AAZ-7265-2020
OI Barr, Earl Theodore/0000-0003-0771-7891; Bruce,
   Bobby/0000-0001-6070-9722; Petke, Justyna/0000-0002-7833-6044
FU EPSRC [EP/P023991/1]; EPSRC [EP/J017515/1, EP/P023991/1] Funding Source:
   UKRI
FX Dr. Justyna Petke is supported by an EPSRC fellowship: EP/P023991/1.
CR [Anonymous], 2011, BENCHMARKING MODERN
   [Anonymous], KEY WORLD ENERGY STA, DOI DOI 10.1787/9789264039537-EN
   [Anonymous], 2017, ARXIV170505249
   [Anonymous], 2007, P 2007 INT S SOFTW T, DOI DOI 10.1145/1273463.1273475
   Banerjee A, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P588, DOI 10.1145/2635868.2635871
   Barr ET, 2015, IEEE T SOFTWARE ENG, V41, P507, DOI 10.1109/TSE.2014.2372785
   BERENBAUM MC, 1989, PHARMACOL REV, V41, P93
   Bokhari M. A., 2017, P GEN EV COMP C COMP, P1501
   BP, 2014, BP WORLD ENERGY REV
   Bruce B. R., 2017, RN1707 U COLL LOND D
   Bruce BR, 2016, LECT NOTES COMPUT SC, V9962, P238, DOI 10.1007/978-3-319-47106-8_18
   Bruce BR, 2015, GECCO'15: PROCEEDINGS OF THE 2015 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P1327, DOI 10.1145/2739480.2754752
   Burles Nathan, 2015, Search-Based Software Engineering. 7th International Symposium, SSBSE 2015. Proceedings: LNCS 9275, P255, DOI 10.1007/978-3-319-22183-0_20
   Cooper KD, 2002, J SUPERCOMPUT, V23, P7, DOI 10.1023/A:1015729001611
   De Jong K., 1987, Genetic Algorithms and their Applications: Proceedings of the Second International Conference on Genetic Algorithms, P210
   Forrest Stephanie, 2009, P 11 ANN C GEN EV CO, P947
   Fursin G, 2005, LECT NOTES COMPUT SC, V3793, P29, DOI 10.1007/11587514_4
   Fursin G, 2011, INT J PARALLEL PROG, V39, P296, DOI 10.1007/s10766-010-0161-2
   Harman M, 2001, INFORM SOFTWARE TECH, V43, P833, DOI 10.1016/S0950-5849(01)00189-6
   Harman M, 2012, IEEE INT CONF AUTOM, P1, DOI 10.1145/2351676.2351678
   Hickey T, 2001, J ACM, V48, P1038, DOI 10.1145/502102.502106
   Hindle Abram, 2014, Proceedings of the 11th Working Conference on Mining Software Repositories, P12
   Hoffmann H, 2011, ACM SIGPLAN NOTICES, V46, P199, DOI 10.1145/1961296.1950390
   Kalibera T., 2005, P 2005 INT S PERF EV, P484
   Koomey JG, 2008, ENVIRON RES LETT, V3, DOI 10.1088/1748-9326/3/3/034008
   Kulkarni P, 2004, ACM SIGPLAN NOTICES, V39, P171, DOI 10.1145/996893.996863
   Landsborough J., 2015, GECCO 15 COMPANION P, DOI [DOI 10.1145/2739482.2768424, 10.1145/2739482.2768424]
   Langdon WB, 2010, IEEE C EVOL COMPUTAT
   Langdon W. B., 2016, RN1601 U COLL LOND D
   Langdon WB, 2016, LECT NOTES COMPUT SC, V9921, P249, DOI 10.1007/978-3-319-45823-6_23
   Langdon WB, 2014, GECCO'14: PROCEEDINGS OF THE 2014 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P951, DOI 10.1145/2576768.2598244
   Langdon WB, 2015, IEEE T EVOLUT COMPUT, V19, P118, DOI 10.1109/TEVC.2013.2281544
   Le Goues C, 2012, PROCEEDINGS OF THE FOURTEENTH INTERNATIONAL CONFERENCE ON GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P959, DOI 10.1145/2330163.2330296
   Li D, 2013, P 2013 INT S SOFTW T, P78, DOI DOI 10.1145/2483760.2483780
   Li D, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P527, DOI 10.11455/2568225.2568321
   Li D, 2014, PROC IEEE INT CONF S, P121, DOI 10.1109/ICSME.2014.34
   Li DQ, 2015, J INEQUAL APPL, DOI 10.1186/s13660-015-0556-0
   Manotas I, 2016, PROC INT CONF SOFTW, P237, DOI 10.1145/2884781.2884810
   Manotas I, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P503, DOI 10.11455/2568225.2568297
   Marler RT, 2004, STRUCT MULTIDISCIP O, V26, P369, DOI 10.1007/s00158-003-0368-6
   Mitchell M., 1992, Toward a Practice of Autonomous Systems. Proceedings of the First European Conference on Artificial Life, P245
   Mrazek Vojtech., 2015, P 2015 ANN C GEN EV, V1, P795
   Orlov M, 2011, IEEE T EVOLUT COMPUT, V15, P166, DOI 10.1109/TEVC.2010.2052622
   Pan SJ, 2010, IEEE T KNOWL DATA EN, V22, P1345, DOI 10.1109/TKDE.2009.191
   Paone E, 2015, DES AUT TEST EUROPE, P736
   Petke J., 2014, LECT NOTES COMPUTER, P137
   Petke J, 2018, IEEE T EVOLUT COMPUT, V22, P415, DOI 10.1109/TEVC.2017.2693219
   Qi Zichao, 2015, P 2015 INT S SOFTW T, P24, DOI DOI 10.1145/2771783.2771791
   Schulte E., 2010, P 25 IEEEACM INT C A, P313, DOI [DOI 10.1145/1858996.1859059, 10.1145/1858996.1859059]
   Schulte E, 2014, ACM SIGPLAN NOTICES, V49, P639, DOI 10.1145/2541940.2541980
   Sitthi-amorn P, 2011, ACM T GRAPHIC, V30, DOI 10.1145/2024156.2024186
   Taylor JR, 1997, INTRO ERROR ANAL STU
   Tiwari Ananta., 2011, Proceedings of the 2011 Interna- tional Conference on Parallel Processing, ICPP'11, P178
   White D. R., 2008, P 10 ANN C GEN EV CO, V1, P1775
   White DR, 2011, IEEE T EVOLUT COMPUT, V15, P515, DOI 10.1109/TEVC.2010.2083669
   Wu F, 2015, GECCO'15: PROCEEDINGS OF THE 2015 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P1375, DOI 10.1145/2739480.2754648
   Zhang CJ, 2003, CONF PROC INT SYMP C, P136, DOI 10.1109/ISCA.2003.1206995
NR 57
TC 18
Z9 18
U1 1
U2 3
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD NOV 1
PY 2019
VL 45
IS 11
BP 1150
EP 1169
DI 10.1109/TSE.2018.2827066
PG 20
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA JO3UP
UT WOS:000497506400005
OA Green Published
DA 2024-07-18
ER

PT J
AU Barbosa, EA
   Garcia, A
AF Barbosa, Eiji Adachi
   Garcia, Alessandro
TI Global-Aware Recommendations for Repairing Violations in Exception
   Handling
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Exception handling; recommender heuristic; software repair
ID SOFTWARE; JAVA; ARCHITECTURE; PROGRAMS; CODE
AB Empirical evidence suggests exception handling is not reliably implemented. Most faults in exception handling are related to global exceptions violating the intended exception handling design. However, repairing these violations is a cumbersome and error-prone task. It requires knowing the intended design and understanding how the source code violates it. It also requires changing the source code to make it compliant with the intended design. But changing the exception handling code is a difficult task, since changes in exception handling requires changing different parts of a program. Currently, there is still no solution to assist the repair of this type of violations. To bridge this gap, we present RAVEN, a heuristic strategy aware of the global context of exceptions that produces recommendations of how violations in exception handling may be repaired. This strategy takes advantage of explicit specifications of the intended design, although their availability is not mandatory. Our results revealed RAVEN provides recommendations able to repair violations in 69 percent of the cases when policy specifications are not available and in 97 percent of the cases when specifications are available. Thus, development teams may benefit from RAVEN, even when exception handling design decisions are not documented in their projects.
C1 [Barbosa, Eiji Adachi] Univ Fed Rio Grande do Norte, Digital Metropolis Inst, BR-59300000 Caico, RN, Brazil.
   [Garcia, Alessandro] Pontifical Catholic Univ Rio de Janeiro, OPUS Res Grp, Dept Informat, BR-22430060 Rio De Janeiro, RJ, Brazil.
C3 Universidade Federal do Rio Grande do Norte; Pontificia Universidade
   Catolica do Rio de Janeiro
RP Barbosa, EA (corresponding author), Univ Fed Rio Grande do Norte, Digital Metropolis Inst, BR-59300000 Caico, RN, Brazil.
EM eijiadachi@imd.ufrn.br; afgarcia@inf.puc-rio.br
CR [Anonymous], 1983, HDB HUMAN RELIABILIT, DOI DOI 10.2172/5752058
   [Anonymous], 2013, BASICS SOFTWARE ENG
   [Anonymous], 2007, P 22 IEEE ACM INT C
   Avazpour I, 2014, Recomm Syst Softw Eng, P245
   Barbosa E. A., 2012, 2012 26th Brazilian Symposium on Software Engineering (SBES), P171, DOI 10.1109/SBES.2012.22
   Barbosa E. A., 2012, 2012 Proceedings of 5th International Workshop on Exception Handling (WEH 2012), P52, DOI 10.1109/WEH.2012.6226601
   Barbosa EA, 2016, IEEE T SOFTWARE ENG, V42, P559, DOI 10.1109/TSE.2015.2506164
   Barbosa EA, 2014, 2014 28TH BRAZILIAN SYMPOSIUM ON SOFTWARE ENGINEERING (SBES 2014), P11, DOI 10.1109/SBES.2014.19
   Bass L., 2013, SOFTWARE ARCHITECTUR
   Cabral B., 2007, EXCEPTION HANDLING F
   Cacho N, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P584, DOI 10.1145/2568225.2568308
   Cacho N, 2014, PROC IEEE INT CONF S, P31, DOI 10.1109/ICSME.2014.25
   Castor F, 2006, J SYST SOFTWARE, V79, P1397, DOI 10.1016/j.jss.2006.02.060
   Chang B.-M., 2001, Proceedings of the 2001 ACM Symposium on Applied Computing, P620
   Chang BM, 2002, SCAM 2002: SECOND IEEE INTERNATIONAL WORKSHOP ON SOURCE CODE ANALYSIS MANIPULATION, PROCEEDINGS, P173, DOI 10.1109/SCAM.2002.1134117
   Coelho R., 2008, ASSESSING IMPACT ASP
   CRISTIAN F, 1982, IEEE T COMPUT, V31, P531, DOI 10.1109/TC.1982.1676035
   de Lemos R, 2001, COMPUT SYST SCI ENG, V16, P119
   Ebert F, 2015, J SYST SOFTWARE, V106, P82, DOI 10.1016/j.jss.2015.04.066
   Ebert F, 2013, PROC IEEE INT CONF S, P448, DOI 10.1109/ICSM.2013.69
   Felfernig A, 2011, RECOMMENDER SYSTEMS HANDBOOK, P187, DOI 10.1007/978-0-387-85820-3_6
   Field A., 2009, Discovering statistics with SPSS, V3rd
   Fu C, 2007, PROC INT CONF SOFTW, P230
   Garcia AF, 2001, J SYST SOFTWARE, V59, P197, DOI 10.1016/S0164-1212(01)00062-0
   Garcia I., 2011, 2011 Proceedings of 5th Latin-American Symposium on Dependable Computing Workshops (LADC-W 2011), P1, DOI 10.1109/LADCW.2011.18
   GOODENOUGH JB, 1975, COMMUN ACM, V18, P683, DOI 10.1145/361227.361230
   Higo Y, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P294, DOI 10.1145/2635868.2635886
   Holmes R, 2005, PROC INT CONF SOFTW, P117
   Howard M., 2009, 24 Deadly Sins of Software Security: Programming Flaws and How to Fix Them
   Jakobus B., 2015, P 26 INT S SOFTW RE, P183
   Just R, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P654, DOI 10.1145/2635868.2635929
   Kienzle Jorg., 2008, WEH 08, P32
   Kulesza U, 2006, PROC IEEE INT CONF S, P223
   Lidwell William, 2010, Universal Principles of Design, Revised and Updated: 125 Ways to Enhance Usability, Influence Perception, Increase Appeal, Make Better Design Decisions, and Teach through Design
   Manning Christopher D., 2008, INTRO INFORM RETRIEV
   Marinescu C., 2011, Proceedings of the 12th International Workshop on Principles of Software Evolution and the 7th Annual ERCIM Workshop on Software Evolution, IWPSE-EVOL'11, page, P56
   Marinescu C., 2013, P 15 INT S SYMB NUM, P250, DOI DOI 10.1109/SYNASC.2013.40
   Rahman MM, 2014, IEEE INT WORK C SO, P285, DOI 10.1109/SCAM.2014.15
   RAVEN, 2017, HEUR STRAT REP EXC H
   Robillard M. P., 2000, Software Engineering Notes, V25, P2, DOI 10.1145/357474.355046
   Robillard M. P., 1999, ANAL EXCEPTION FLOW, V24
   Robillard MP, 2003, ACM T SOFTW ENG METH, V12, P191, DOI 10.1145/941566.941569
   Sahavechaphan N, 2006, ACM SIGPLAN NOTICES, V41, P413, DOI 10.1145/1167515.1167508
   Sawadpong P., 2012, 2012 IEEE 14th International Symposium on High-Assurance Systems Engineering (HASE 2012), P90, DOI 10.1109/HASE.2012.24
   Shah H, 2009, 2009 ICSE WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING, P80, DOI 10.1109/CHASE.2009.5071417
   Shah H, 2008, SOFTVIS 2008: PROCEEDINGS OF THE 4TH ACM SYMPOSIUM ON SOFTWARE VISUALIZATION, P19
   Shah HB, 2010, IEEE T SOFTWARE ENG, V36, P150, DOI 10.1109/TSE.2010.7
   Sinha S, 2000, IEEE T SOFTWARE ENG, V26, P849, DOI 10.1109/32.877846
   Soares S, 2002, ACM SIGPLAN NOTICES, V37, P174, DOI 10.1145/583854.582437
   Terra R, 2015, SOFTWARE PRACT EXPER, V45, P315, DOI 10.1002/spe.2228
   Zhang Benwen., 2014, Proceedings of the 2014 International Symposium on Software Testing and Analysis, ISSTA 2014, P327
NR 51
TC 11
Z9 11
U1 0
U2 3
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD SEP
PY 2018
VL 44
IS 9
BP 855
EP 873
DI 10.1109/TSE.2017.2716925
PG 19
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA GT9EL
UT WOS:000444842700003
DA 2024-07-18
ER

PT J
AU Bagheri, H
   Tang, C
   Sullivan, K
AF Bagheri, Hamid
   Tang, Chong
   Sullivan, Kevin
TI Automated Synthesis and Dynamic Analysis of Tradeoff Spaces for
   Object-Relational Mapping
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Specification-driven synthesis; tradespace analysis; ORM; static
   analysis; dynamic analysis; relational logic
AB Producing software systems that achieve acceptable tradeoffs among multiple non-functional properties remains a significant engineering problem. We propose an approach to solving this problem that combines synthesis of spaces of design alternatives from logical specifications and dynamic analysis of each point in the resulting spaces. We hypothesize that this approach has potential to help engineers understand important tradeoffs among dynamically measurable properties of system components at meaningful scales within reach of existing synthesis tools. To test this hypothesis, we developed tools to enable, and we conducted, a set of experiments in the domain of relational databases for object-oriented data models. For each of several data models, we used our approach to empirically test the accuracy of a published suite of metrics to predict tradeoffs based on the static schema structure alone. The results show that exhaustive synthesis and analysis provides a superior view of the tradeoff spaces for such designs. This work creates a path forward toward systems that achieve significantly better tradeoffs among important system properties.
C1 [Bagheri, Hamid] Univ Nebraska, Dept Comp Sci & Engn, Lincoln, NE 68588 USA.
   [Tang, Chong; Sullivan, Kevin] Univ Virginia, Dept Comp Sci, Charlottesville, VA 22903 USA.
C3 University of Nebraska System; University of Nebraska Lincoln;
   University of Virginia
RP Bagheri, H (corresponding author), Univ Nebraska, Dept Comp Sci & Engn, Lincoln, NE 68588 USA.
EM bagheri@unl.edu; ctang@virginia.edu; sullivan@virginia.edu
RI Bagheri, Hamid Reza/GQR-0486-2022
OI /0000-0001-6686-466X
FU National Science Foundation [CMMI 1400294]
FX This material is based in part upon work supported by the National
   Science Foundation under Grant Number CMMI 1400294. Any opinions,
   findings, and conclusions or recommendations expressed in this material
   are those of the authors and do not necessarily reflect the views of the
   US National Science Foundation. We thank Michele Claibourn and Clay Ford
   of UVa StatLab for their consulting and statistical assistance.
CR Al- Ekram R., 2007, P 2007 WORKSH AUT SE, P4
   Al-Jumaily HT, 2008, J SYST SOFTWARE, V81, P2299, DOI 10.1016/j.jss.2008.04.027
   [Anonymous], INT J ADV SOFTW
   [Anonymous], 2004, PRACTICAL ASSESSMENT
   [Anonymous], 2006, CITESEER
   Badawy M, 2002, INFORMATION SYSTEMS DEVELOPMENT: ADVANCES IN METHODOLOGIES, COMPONENTS AND MANAGEMENT, P305
   Bagheri Hamid, 2016, 2016 46th Annual IEEE/IFIP International Conference on Dependable Systems and Networks (DSN). Proceedings, P514, DOI 10.1109/DSN.2016.53
   Bagheri H., 2012, P 24 INT C SOFT ENG, P688
   Bagheri H, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P106, DOI 10.1145/2568225.2568291
   Bagheri H, 2016, FORM ASP COMPUT, V28, P441, DOI 10.1007/s00165-016-0360-8
   Bagheri H, 2015, IEEE T SOFTWARE ENG, V41, P866, DOI 10.1109/TSE.2015.2419611
   Bagheri H, 2015, LECT NOTES COMPUT SC, V9109, P73, DOI 10.1007/978-3-319-19249-9_6
   Bagheri H, 2010, LECT NOTES COMPUT SC, V6395, P376
   Bagheri Hamid, 2012, P 11 ACM INT C GEN P, P93
   BARONI AL, 2005, P 7 INT C ENT INF SY
   Binnig Carsten, 2007, P ACM SIGMOD INT C M, P341, DOI DOI 10.1145/1247480.1247520
   Bruno N, 2006, IEEE T KNOWL DATA EN, V18, P1721, DOI 10.1109/TKDE.2006.190
   Cabibbo L, 2005, LECT NOTES COMPUT SC, V3520, P135
   Cunha A, 2009, SEFM 2009: SEVENTH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING AND FORMAL METHODS, P285, DOI 10.1109/SEFM.2009.27
   de la Riva C., 2010, AST, P67
   Demuth B., 2001, UNIFIED MODELING LAN, P104, DOI DOI 10.1007/3-540-45441-1
   Drago ML, 2015, COMPUT SCI-RES DEV, V30, P1, DOI 10.1007/s00450-011-0202-0
   ELMASRI R, 2003, FUNDAMENTALS DATABAS
   Gabriel Richard P., 2006, P 5 INT C ASP OR SOF, DOI [10.1145/1119655.1119658, DOI 10.1145/1119655.1119658]
   Gulwani Sumit, 2010, P 12 INT ACM SIGPLAN, P13, DOI [DOI 10.1145/1836089.1836091, 10.1145/1836089.1836091]
   Heidenreich F., 2007, ELECT COMMUN EASST, V9
   Holder S, 2008, COMM COM INF SC, V8, P43
   Jackson D, 2002, ACM T SOFTW ENG METH, V11, P256, DOI 10.1145/505145.505149
   Jackson E.K., 2010, P 10 ACM INT C EMB S, P39, DOI DOI 10.1145/1879021.1879027
   Keller W., 1997, P EUR PATT LANG PROG
   Khalek Shadi Abdul, 2008, 2008 23rd IEEE/ACM International Conference on Automated Software Engineering, P238, DOI 10.1109/ASE.2008.34
   Krishnamurthi S., 2008, ACM SIGSOFT INT S FD, P158
   Philippi S, 2005, J SYST SOFTWARE, V77, P193, DOI 10.1016/j.jss.2004.07.252
   Sánchez J, 2016, PROCEEDINGS OF THE 15TH INTERNATIONAL CONFERENCE ON MODULARITY (MODULARITY'16), P13, DOI 10.1145/2889443.2889447
   Saxena T, 2010, LECT NOTES COMPUT SC, V6394, P46
   Solar-Lezama Armando, 2008, THESIS
   Srivastava Saurabh, 2013, International Journal on Software Tools for Technology Transfer, V15, P497, DOI 10.1007/s10009-012-0223-4
   Srivastava S, 2010, POPL'10: PROCEEDINGS OF THE 37TH ANNUAL ACM SIGPLAN-SIGACT SYMPOSIUM ON PRINCIPLES OF PROGRAMMING LANGUAGES, P313, DOI 10.1145/1706299.1706337
   Tang C., 2015, CS20151 U VIRG DEP C
   Torlak E, 2013, P 2013 ACM INT S NEW, P135, DOI DOI 10.1145/2509578.2509586
   Torlak E., 2012, P 20 INT S FDN SOFTW
NR 41
TC 12
Z9 13
U1 0
U2 8
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD FEB 1
PY 2017
VL 43
IS 2
BP 145
EP 163
DI 10.1109/TSE.2016.2587646
PG 19
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA EN0XX
UT WOS:000395735900003
OA Bronze
DA 2024-07-18
ER

PT J
AU Ciolek, D
   Braberman, V
   D'Ippolito, N
   Piterman, N
   Uchitel, S
AF Ciolek, Daniel
   Braberman, Victor
   D'Ippolito, Nicolas
   Piterman, Nir
   Uchitel, Sebastian
TI Interaction Models and Automated Control under Partial Observable
   Environments
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE LTS; controller synthesis; imperfect-information games
AB The problem of automatically constructing a software component such that when executed in a given environment satisfies a goal, is recurrent in software engineering. Controller synthesis is a field which fits into this vision. In this paper we study controller synthesis for partially observable LTS models. We exploit the link between partially observable control and non-determinism and show that, unlike fully observable LTS or Kripke structure control problems, in this setting the existence of a solution depends on the interaction model between the controller-to-be and its environment. We identify two interaction models, namely Interface Automata and Weak Interface Automata, define appropriate control problems and describe synthesis algorithms for each of them.
C1 [Ciolek, Daniel; Braberman, Victor; D'Ippolito, Nicolas; Uchitel, Sebastian] Univ Buenos Aires, Dept Comp, RA-1053 Buenos Aires, DF, Argentina.
   [D'Ippolito, Nicolas; Uchitel, Sebastian] Imperial Coll, Dept Comp, London, England.
   [Piterman, Nir] Univ Leicester, Dept Comp Sci, Leicester, Leics, England.
C3 University of Buenos Aires; Imperial College London; University of
   Leicester
RP Ciolek, D (corresponding author), Univ Buenos Aires, Dept Comp, RA-1053 Buenos Aires, DF, Argentina.
EM dciolek@dc.uba.ar; vbraber@dc.uba.ar; ndippolito@dc.uba.ar;
   nir.piterman@le.ac.uk; suchitel@dc.uba.ar
OI Piterman, Nir/0000-0002-8242-5357; dippolito,
   nicolas/0000-0002-0612-4157; Uchitel, Sebastian/0000-0001-9352-1478;
   Ciolek, Daniel Alfredo/0000-0001-7488-7386
FU ERC PBM-FIMBSE; ANPCYT [PICT 2011-1774, PICT 2012-0724, PICT 2013-2341];
   UBACYT [20020130100384BA, 20020130300036BA]; CONICET [PIP 112 201301
   00688 CO]; MEALS [295261]
FX This work was partially supported by grants ERC PBM-FIMBSE, ANPCYT PICT
   2011-1774, ANPCYT PICT 2012-0724, ANPCYT PICT 2013-2341, UBACYT
   20020130100384BA, UBACYT 20020130300036BA, CONICET PIP 112 201301 00688
   CO, MEALS 295261.
CR [Anonymous], 2006, COMPILERS PRINCIPLES
   Arnold A, 2003, THEOR COMPUT SCI, V303, P7, DOI 10.1016/S0304-3975(02)00442-5
   Baeten J, 2011, ELECTRON P THEOR COM, P36, DOI 10.4204/EPTCS.60.3
   Berwanger D, 2010, INFORM COMPUT, V208, P1206, DOI 10.1016/j.ic.2009.09.006
   Bierhoff Kevin., 2005, ACM SIGSOFT Software Engineering Notes, V30, P217
   Bloem R, 2012, J COMPUT SYST SCI, V78, P911, DOI 10.1016/j.jcss.2011.08.007
   Castagna G, 2009, ACM T PROGR LANG SYS, V31, DOI 10.1145/1538917.1538920
   Chatterjee K, 2008, LECT NOTES COMPUT SC, V5201, P147, DOI 10.1007/978-3-540-85361-9_14
   D'Ippolito Nicolas, 2008, 2008 23rd IEEE/ACM International Conference on Automated Software Engineering, P475, DOI 10.1109/ASE.2008.78
   D'Ippolito N. R., 2010, P 18 ACM SIGSOFT INT, P211
   D'Ippolito N, 2013, ACM T SOFTW ENG METH, V22, DOI 10.1145/2430536.2430543
   D'Ippolito N, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P211, DOI 10.1145/1985793.1985823
   de Alfaro L., 2001, Software Engineering Notes, V26, P109, DOI 10.1145/503271.503226
   de Caso G, 2013, ACM T SOFTW ENG METH, V22, DOI 10.1145/2491509.2491519
   DENICOLA R, 1984, THEOR COMPUT SCI, V34, P83, DOI 10.1016/0304-3975(84)90113-0
   Foster H, 2003, 18TH IEEE INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P152, DOI 10.1109/ASE.2003.1240303
   Giannakopoulou D., 2003, Software Engineering Notes, V28, P257, DOI 10.1145/949952.940106
   Heaven W, 2009, LECT NOTES COMPUT SC, V5525, P109, DOI 10.1007/978-3-642-02161-9_6
   HOARE CAR, 1978, COMMUN ACM, V21, P666, DOI 10.1145/359576.359585
   Honda K, 1998, LECT NOTES COMPUT SC, V1381, P122, DOI 10.1007/BFb0053567
   Inverardi P., 2007, INT WORKSH ENG SOFTW, P29
   Jackson M., 1995, SOFTWARE REQUIREMENT
   Jiang SB, 2006, SIAM J CONTROL OPTIM, V44, P2079, DOI 10.1137/S0363012902409982
   KELLER RM, 1976, COMMUN ACM, V19, P371, DOI 10.1145/360248.360251
   Klein J, 2015, ACTA INFORM, V52, P443, DOI 10.1007/s00236-015-0239-9
   Kuijper W, 2009, LECT NOTES COMPUT SC, V5710, P431, DOI 10.1007/978-3-642-04081-8_29
   Kupferman O, 2000, ADV TEMPORAL LOGIC, P109, DOI DOI 10.1007/978-94-015-9586-5
   Letier E, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P592, DOI 10.1109/ICSE.2013.6606605
   Mehta N. R., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, P178, DOI 10.1109/ICSE.2000.870409
   Pistore M, 2004, LECT NOTES COMPUT SC, V3192, P106
   Piterman N, 2006, LECT NOTES COMPUT SC, V3855, P364
   Reif JohnH., 1979, P 11 ANN ACM S THEOR, P288
   Thistle JG, 2009, SIAM J CONTROL OPTIM, V48, P1858, DOI 10.1137/060673862
   THISTLE JG, 1994, SIAM J CONTROL OPTIM, V32, P1075, DOI 10.1137/S0363012991217536
   van Lamsweerde A, 2001, FIFTH IEEE INTERNATIONAL SYMPOSIUM ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P249
NR 35
TC 9
Z9 10
U1 0
U2 3
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JAN
PY 2017
VL 43
IS 1
BP 19
EP 33
DI 10.1109/TSE.2016.2564959
PG 15
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA EK2TT
UT WOS:000393780300002
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Namoun, A
   Daskalopoulou, A
   Mehandjiev, N
   Xun, Z
AF Namoun, Abdallah
   Daskalopoulou, Athanasia
   Mehandjiev, Nikolay
   Xun, Zhang
TI Exploring Mobile End User Development: Existing Use and Design Factors
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Human factors in software design; mobile environments; models and
   principles; requirements/specifications
ID INFORMATION-TECHNOLOGY; SELF-EFFICACY; ACCEPTANCE; SERVICES;
   DETERMINANTS; ADOPTION; USAGE
AB Mobile devices are everywhere, and the scope of their use is growing from simple calling and texting through Internet browsing to more technical activities such as creating message processing filters and connecting different apps. However, building tools which provide effective support for such advanced technical use of mobile devices by non-programmers (mobile end user development or mEUD) requires thorough understanding of user needs and motivations, including factors which can impact user intentions regarding mEUD activities. We propose a model linking these mEUD factors with mobile users' attitudes towards, and intent of doing mEUD, and discuss a number of implications for supporting mEUD. Our research process is user-centered, and we formulate a number of hypotheses by fusing results from an exploratory survey which gathers facts about mEUD motivations and activities, and from a focus group study, which delivers deeper understanding of particular mEUD practices and issues. We then test the hypothesized relationships through a follow-up enquiry mixing quantitative and qualitative techniques, leading to the creation of a preliminary mEUD model. Altogether we have involved 275 mobile users in our research. Our contribution links seven mEUD factors with mEUD intentions and attitudes, and highlights a number of implications for mEUD support.
C1 [Namoun, Abdallah] Islamic Univ Madinah, Medina 170, Saudi Arabia.
   [Daskalopoulou, Athanasia; Mehandjiev, Nikolay; Xun, Zhang] Univ Manchester, Booth St West, Manchester M15 6PB, Lancs, England.
C3 Islamic University of Al Madinah; University of Manchester
RP Namoun, A (corresponding author), Islamic Univ Madinah, Medina 170, Saudi Arabia.
EM a.namoun@iu.edu.sa; a.daskalopoulou@manchester.ac.uk;
   n.mehandjiev@manchester.ac.uk; xun.zhang-2@student.manchester.ac.uk
RI Mehandjiev, Nikolay D./O-5034-2016; Namoun, Abdallah/AAT-1905-2021;
   Daskalopoulou, Athanasia/U-2544-2019
OI Namoun, Abdallah/0000-0002-7050-0532; Daskalopoulou,
   Athanasia/0000-0003-0859-1143
FU Manchester Business School
FX The authors wish to thank the participants who took part in our studies.
   We also extend our thanks to the reviewers of this paper for their
   useful comments and feedback. This research is partly funded by
   Manchester Business School.
CR AJZEN I, 1991, ORGAN BEHAV HUM DEC, V50, P179, DOI 10.1016/0749-5978(91)90020-T
   [Anonymous], 2006, P SIGCHI C HUM FACT, DOI DOI 10.1145/1124772.1124808
   Ardito C, 2014, J VISUAL LANG COMPUT, V25, P278, DOI 10.1016/j.jvlc.2014.01.003
   Athreya B, 2012, S VIS LANG HUM CEN C, P75, DOI 10.1109/VLHCC.2012.6344486
   Babbie E.R., 2020, PRACTICE SOCIAL RES
   BANDURA A, 1980, COGNITIVE THER RES, V4, P39, DOI 10.1007/BF01173354
   Bethlehem J., 2009, APPL SURVEY METHODS, DOI DOI 10.1002/9780470494998
   Cao J, 2010, CHI2010: PROCEEDINGS OF THE 28TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, VOLS 1-4, P1009
   Cappiello C., 2012, P 21 INT C COMP WORL, P473, DOI DOI 10.1145/2187980.2188083
   Cassell C., 2004, Essential Guide to Qualitative Methods in Organizational Research, DOI DOI 10.4135/9781446280119.N21
   Chatterjee S., 1977, Regression analysis by example.
   Compeau D. R., 1995, Management Information Systems Quarterly, V19, P189, DOI 10.2307/249688
   Cuccurullo Stefania, 2011, End-User Development. Proceedings Third International Symposium, IS-EUD 2011, P289, DOI 10.1007/978-3-642-21530-8_28
   Danado Jose, 2012, Human-Centered Software Engineering. Proceedings of the 4th International Conference, HCSE 2012, P199, DOI 10.1007/978-3-642-34347-6_12
   Danado J, 2010, LECT NOTES COMPUT SC, V6369, P118
   DAVIS FD, 1989, MIS QUART, V13, P319, DOI 10.2307/249008
   Deshpande Y., 2001, IEEE Multimedia, V8, P82, DOI 10.1109/93.917974
   Fetscherin M, 2008, J ELECTRON COMMER RE, V9, P231
   Grammel L., 2008, DCS324IR U VICT VICT
   Greene J. C., 1989, EDUC EVAL POLICY AN, V11, P255, DOI [10.3102/01623737011003255, DOI 10.3102/01623737011003255, https://doi.org/10.3102/01623737011003255]
   Hung SY, 2013, GOV INFORM Q, V30, P33, DOI 10.1016/j.giq.2012.07.008
   Ko AJ, 2011, ACM COMPUT SURV, V43, DOI 10.1145/1922649.1922658
   Lieberman H, 2006, HUM COM INT, V9, P1
   McCabe M., 2013, OWNERSHIP SMARTPHONE
   Mehandjiev N., 2010, Proceedings 2010 8th IEEE European Conference on Web Services (ECOWS 2010), P139, DOI 10.1109/ECOWS.2010.29
   Mehandjiev N., 2014, WEB SERVICES FDN, P709
   Mehandjiev N, 2015, LECT NOTES COMPUT SC, V9083, P242, DOI 10.1007/978-3-319-18425-8_23
   Mehandjiev N, 2006, HUM COM INT, V9, P371
   Mehandjiev N, 2008, 2008 IEEE SYMPOSIUM ON VISUAL LANGUAGES AND HUMAN-CENTRIC COMPUTING, PROCEEDINGS, P166, DOI 10.1109/VLHCC.2008.4639079
   Moghavvemi S, 2012, INNOV-ORGAN MANAG, V14, P231, DOI 10.5172/impp.2012.14.2.231
   Morgan D. L., 1997, FOCUS GROUPS QUALITA, DOI [10.4135/9781412984287, DOI 10.4135/9781412984287]
   Namoun A., 2010, Proceedings 2010 8th IEEE European Conference on Web Services (ECOWS 2010), P123, DOI 10.1109/ECOWS.2010.17
   Nielsen J., 2013, MOBILE CONSUMER CONN
   Pane JF, 2001, INT J HUM-COMPUT ST, V54, P237, DOI 10.1006/ijhc.2000.0410
   Repenning A, 2006, HUM COM INT, V9, P51
   Rode J, 2006, HUM COM INT, V9, P161
   Rogers E. M., 1995, Diffusion of Innovation Theory, P25, DOI https://doi.org/10.1007/978-3-642-79868-92
   Scott J., 2006, Social theory: Central issues in sociology
   Seifert J., 2011, Proceedings of the 13th International Conference on Human Computer Interaction with Mobile Devices and Services, P109
   Slany W, 2012, S VIS LANG HUM CEN C, P265, DOI 10.1109/VLHCC.2012.6344546
   Sutcliffe A, 2004, COMMUN ACM, V47, P31, DOI 10.1145/1015864.1015883
   Venkatesh V, 2003, MIS QUART, V27, P425, DOI 10.2307/30036540
   Wang YS, 2009, BRIT J EDUC TECHNOL, V40, P92, DOI 10.1111/j.1467-8535.2007.00809.x
   Wu JH, 2007, INT J MED INFORM, V76, P66, DOI 10.1016/j.ijmedinf.2006.06.006
   Yang K, 2010, J CONSUM MARK, V27, P262, DOI 10.1108/07363761011038338
   Yu CS, 2012, J ELECTRON COMMER RE, V13, P104
   Zang N., 2008, CHI 2008 Proceedings, Works in Progress, P3171
   Zhou T, 2012, J ELECTRON COMMER RE, V13, P135
   Zhou T, 2011, INFORM DEV, V27, P207, DOI 10.1177/0266666911414596
NR 49
TC 10
Z9 11
U1 0
U2 4
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD OCT
PY 2016
VL 42
IS 10
BP 960
EP 976
DI 10.1109/TSE.2016.2532873
PG 17
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science; Engineering
GA EA5KP
UT WOS:000386659500004
OA Green Submitted, Green Published
DA 2024-07-18
ER

PT J
AU Rodeghero, P
   Liu, C
   McBurney, PW
   McMillan, C
AF Rodeghero, Paige
   Liu, Cheng
   McBurney, Paul W.
   McMillan, Collin
TI An Eye-Tracking Study of Java Programmers and Application to Source Code
   Summarization
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Source code summaries; program comprehension
ID SOFTWARE MAINTENANCE; DOCUMENTATION; DEVELOPERS; MODELS
AB Source Code Summarization is an emerging technology for automatically generating brief descriptions of code. Current summarization techniques work by selecting a subset of the statements and keywords from the code, and then including information from those statements and keywords in the summary. The quality of the summary depends heavily on the process of selecting the subset: a high-quality selection would contain the same statements and keywords that a programmer would choose. Unfortunately, little evidence exists about the statements and keywords that programmers view as important when they summarize source code. In this paper, we present an eye-tracking study of 10 professional Java programmers in which the programmers read Java methods and wrote English summaries of those methods. We apply the findings to build a novel summarization tool. Then, we evaluate this tool. Finally, we further analyze the programmers' method summaries to explore specific keyword usage and provide evidence to support the development of source code summarization systems.
C1 [Rodeghero, Paige; Liu, Cheng; McBurney, Paul W.; McMillan, Collin] Univ Notre Dame, Dept Comp Engn & Sci, Notre Dame, IN 46556 USA.
C3 University of Notre Dame
RP Rodeghero, P (corresponding author), Univ Notre Dame, Dept Comp Engn & Sci, Notre Dame, IN 46556 USA.
EM prodeghe@nd.edu; cliu7@nd.edu; pmcburne@nd.edu; cmc@nd.edu
CR Ali N, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P191, DOI 10.1109/ICSM.2012.6405271
   Altmann EM, 2001, INT J HUM-COMPUT ST, V54, P189, DOI 10.1006/ijhc.2000.0407
   ANJANEYULU KSR, 1992, LECT NOTES COMPUT SC, V608, P585
   ANNIE TT YING., 2013, P 2013 9 JOINT M FDN, P655
   [Anonymous], THESIS
   [Anonymous], 2010, P IEEE ACM INT C AUT
   [Anonymous], P 6 INT WORKSH TRAC
   [Anonymous], 2007, P CIKM
   Bansal MS, 2009, INFORM PROCESS LETT, V109, P238, DOI 10.1016/j.ipl.2008.10.010
   Bednarik R., 2006, Proceedings. ETRA 2006. Symposium on Eye Tracking Research and Applications, P125, DOI 10.1145/1117309.1117356
   Bednarik R, 2008, PROCEEDINGS OF THE EYE TRACKING RESEARCH AND APPLICATIONS SYMPOSIUM (ETRA 2008), P99, DOI 10.1145/1344471.1344497
   Bergman L., 2005, Proc. ACM UIST, DOI [10.1145/1095034.1095067, DOI 10.1145/1095034.1095067]
   Binkley D, 2013, EMPIR SOFTW ENG, V18, P219, DOI 10.1007/s10664-012-9201-4
   Brandt J, 2010, CHI2010: PROCEEDINGS OF THE 28TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, VOLS 1-4, P513
   Burden H., 2011, Proceedings of the 8th International Workshop on Model-Driven Engineering, Verification and Validation, MoDeVVa, p8:1, DOI DOI 10.1145/2095654.2095665
   Buse R.P., 2008, Proceedings of the 2008 International Symposium on Software Testing and Analysis, ISSTA '08, P273
   CROSBY ME, 1990, COMPUTER, V23, P24, DOI 10.1109/2.48797
   Daqing Hou, 2011, 2011 IEEE 27th International Conference on Software Maintenance, P233, DOI 10.1109/ICSM.2011.6080790
   Daughtry III J. M., PERCEIVED SELF EFFIC, P42
   Davison JW, 2000, BELL LABS TECH J, V5, P44, DOI 10.1002/bltj.2221
   de Souza S.C.B., 2005, P 23 ANN INT C DES C, P68, DOI [10.1145/1085313, 10.1145/1085313.1085331]
   Dearman D, 2005, PROG COMPREHEN, P297, DOI 10.1109/WPC.2005.5
   Douce C., 2001, P PSYCH PROGR INT GR, P147
   Eddy BP, 2013, CONF PROC INT SYMP C, P13, DOI 10.1109/ICPC.2013.6613829
   Fagin R, 2003, SIAM PROC S, P28
   Fjeldstad R. K., 1983, P GUIDE, P13
   Fluri B, 2007, 14TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P70, DOI 10.1109/WCRE.2007.21
   Forward A., 2002, Proceedings of the 2002 ACM symposium on Document engineering, P26, DOI 10.1145/585058.585065
   Gibiec M., 2010, Proceedings of the IEEE/ACM International Conference on Automated Software Engineering, ASE '10, P245
   Gonzalez Victor M, 2004, P SIGCHI C HUMAN FAC, P113, DOI [10.1145/985692.985707, DOI 10.1145/985692.985707]
   Guzzi A, 2012, PROC INT CONF SOFTW, P1535, DOI 10.1109/ICSE.2012.6227043
   Gweon G, 2007, VL/HCC 2007: IEEE SYMPOSIUM ON VISUAL LANGUAGES AND HUMAN-CENTRIC COMPUTING, PROCEEDINGS, P243, DOI 10.1109/VLHCC.2007.9
   Haiduc S., 2010, Proceedings 17th Working Conference on Reverse Engineering (WCRE 2010), P35, DOI 10.1109/WCRE.2010.13
   Holmes R, 2012, ACM T SOFTW ENG METH, V21, DOI 10.1145/2377656.2377657
   Kajko-Mattsson M, 2005, EMPIR SOFTW ENG, V10, P31, DOI 10.1023/B:LIDA.0000048322.42751.ca
   Kaufman L., 2009, FINDING GROUPS DATA
   Kim M, 2013, IEEE T SOFTWARE ENG, V39, P45, DOI 10.1109/TSE.2012.16
   Ko AJ, 2005, J VISUAL LANG COMPUT, V16, P41, DOI 10.1016/j.jvlc.2004.08.003
   Ko AJ, 2006, IEEE T SOFTWARE ENG, V32, P971, DOI 10.1109/TSE.2006.116
   Kotonya G, 2008, LECT NOTES COMPUT SC, V5282, P302, DOI 10.1007/978-3-540-87891-9_20
   Krämer JP, 2012, PROC INT CONF SOFTW, P1457, DOI 10.1109/ICSE.2012.6227066
   Kramer D., 1999, Seventeenth Annual International Conference on Computer Documentation. Conference Proceedings, P147, DOI 10.1145/318372.318577
   Lakhotia A., 1993, J. Syst. Softw, V23, P269
   LaToza T. D., 2006, 28th International Conference on Software Engineering Proceedings, P492, DOI 10.1145/1134285.1134355
   Lethbridge TC, 2003, IEEE SOFTWARE, V20, P35, DOI 10.1109/MS.2003.1241364
   Liblit Ben, 2006, P 18 ANN WORKSHOP PS, P11
   LITTMAN DC, 1987, J SYST SOFTWARE, V7, P341, DOI 10.1016/0164-1212(87)90033-1
   Mani S., 2012, P ACM SIGSOFT 20 INT
   McMillan C., 2010, Proceedings of the 2Nd International Workshop on Recommendation Systems for Software Engineering, RSSE'10, P21
   McMillan C, 2012, IEEE T SOFTWARE ENG, V38, P1069, DOI 10.1109/TSE.2011.84
   McMillan C, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P111, DOI 10.1145/1985793.1985809
   Mirghasemi Salman., 2011, P 19 ACM SIGSOFT S 1, P436
   Moreno L, 2013, CONF PROC INT SYMP C, P23, DOI 10.1109/ICPC.2013.6613830
   Park HS, 2009, EXPERT SYST APPL, V36, P3336, DOI 10.1016/j.eswa.2008.01.039
   Rayner K, 2003, BEHAV BRAIN SCI, V26, P507, DOI 10.1017/S0140525X03520106
   Roehm T, 2012, PROC INT CONF SOFTW, P255, DOI 10.1109/ICSE.2012.6227188
   Sai Zhang, 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P63, DOI 10.1109/ASE.2011.6100145
   Shard B., 2012, P S EYE TRACK RES AP, P381
   Sharif B., 2011, 2011 IEEE 27th International Conference on Software Maintenance, P544, DOI 10.1109/ICSM.2011.6080828
   Sharif Bonita, 2010, Proceedings of the 18th IEEE International Conference on Program Comprehension (ICPC 2010), P196, DOI 10.1109/ICPC.2010.41
   Sharif B, 2010, CONF SOFTW ENG EDUC, P41, DOI 10.1109/CSEET.2010.23
   Sillito J, 2008, IEEE T SOFTWARE ENG, V34, P434, DOI 10.1109/TSE.2008.26
   Sim SE, 1998, PROG COMPREHEN, P180, DOI 10.1109/WPC.1998.693351
   Singer Janice, 1997, Proceedings of the 1997 Conference of the Centre for Advanced Studies on Collaborative Research. CASCON '97, P21
   Sridhara G., 2012, THESIS
   Sridhara G, 2011, CONF PROC INT SYMP C, P71, DOI 10.1109/ICPC.2011.28
   Sridhara G, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P101, DOI 10.1145/1985793.1985808
   Sridhara Giriprasad, 2010, 25 IEEEACM INT C AUT, P43
   Starke J, 2009, PROC IEEE INT CONF S, P157, DOI 10.1109/ICSM.2009.5306335
   Steidl D, 2013, CONF PROC INT SYMP C, P83, DOI 10.1109/ICPC.2013.6613836
   Stylos J, 2006, IEEE SYMPOSIUM ON VISUAL LANGUAGES AND HUMAN-CENTRIC COMPUTING, PROCEEDINGS, P195
   Uwano H., 2005, Eye Tracking Research and Applications Symposium (ETRA), V2005, P133
   Walters B., 2014, P 22 INT C PROGRAM C, P201, DOI [10.1145/2597008.2597795, DOI 10.1145/2597008.2597795]
   Wolfe D.A., 1973, Nonparametric statistical methods
   Zou XC, 2010, EMPIR SOFTW ENG, V15, P119, DOI 10.1007/s10664-009-9114-z
NR 75
TC 38
Z9 43
U1 1
U2 22
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD NOV
PY 2015
VL 41
IS 11
BP 1038
EP 1054
DI 10.1109/TSE.2015.2442238
PG 17
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA CW5EM
UT WOS:000365018200001
DA 2024-07-18
ER

PT J
AU Guo, XR
   Zhou, M
   Song, XY
   Gu, M
   Sun, JG
AF Guo, Xinrui
   Zhou, Min
   Song, Xiaoyu
   Gu, Ming
   Sun, Jiaguang
TI First, Debug the Test Oracle
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Test oracle; debugging; spectrum-based fault localization
ID FAULT; MODEL
AB Opposing to the oracle assumption, a trustworthy test oracle is not always available in real practice. Since manually written oracles and human judgements are still widely used, testers and programmers are in fact facing a high risk of erroneous test oracles. However, test oracle errors can bring much confusion thus causing extra time consumption in the debugging process. As substantiated by our experiment on the Siemens Test Suite, automatic fault localization algorithms suffer severely from erroneous test oracles, which impede them from reducing debugging time to the full extent. This paper proposes a simple but effective approach to debug the test oracle. Based on the observation that test cases covering similar lines of code usually generate similar results, we are able to identify suspicious test cases that are differently judged by the test oracle from their neighbors. To validate the effectiveness of our approach, experiments are conducted on both the Siemens Test Suite and grep. The results show that averagely over 75 percent of the highlighted test cases are actually test oracle errors. Moreover, performance of fault localization algorithms recovered remarkably with the debugged oracles.
C1 [Guo, Xinrui; Zhou, Min; Gu, Ming; Sun, Jiaguang] Tsinghua Univ, Sch Software, Key Lab Informat Syst Secur, Minist Educ, Beijing 100084, Peoples R China.
   [Guo, Xinrui; Zhou, Min; Gu, Ming; Sun, Jiaguang] Tsinghua Natl Lab Informat Sci & Technol TNList, Beijing 100084, Peoples R China.
   [Song, Xiaoyu] Portland State Univ, Dept Elect & Comp Engn, Portland, OR 97207 USA.
C3 Tsinghua University; Tsinghua University; Portland State University
RP Guo, XR (corresponding author), Tsinghua Univ, Sch Software, Key Lab Informat Syst Secur, Minist Educ, Beijing 100084, Peoples R China.
EM gxr12@mail.tsinghua.edu.cn; zhoumin03@mail.tsinghua.edu.cn;
   guming@tsinghua.edu.cn; sunjg@tsinghua.edu.cn; song@ece.pdx.edu
FU NSFC Program [91218302]; National Key Technologies R&D Program of China
   [2012BAF16G01]; Postdoctoral Science Foundation of China [2014M560082];
   National Natural Science Foundation of China [61402248]
FX This research was sponsored in part by NSFC Program (Grant No.
   91218302), National Key Technologies R&D Program (Grant No.
   2012BAF16G01) of China, Postdoctoral Science Foundation of China (Grant
   No. 2014M560082), National Natural Science Foundation of China (Grant
   No. 61402248). M. Gu is the corresponding author.
CR Abreu R, 2006, 12TH PACIFIC RIM INTERNATIONAL SYMPOSIUM ON DEPENDABLE COMPUTING, PROCEEDINGS, P39
   Abreu R, 2009, J SYST SOFTWARE, V82, P1780, DOI 10.1016/j.jss.2009.06.035
   Aggarwal KK., 2004, ACM SIGSOFT Software Engineering Notes, V29, P1, DOI [DOI 10.1145/986710.986725, 10.1145/986710.986725]
   [Anonymous], 2013, P 2013 INT S SOFTW T, DOI DOI 10.1145/2483760.2483767
   BROWN DB, 1992, IEEE T RELIAB, V41, P272, DOI 10.1109/24.257793
   Chen TY, 2003, INFORM SOFTWARE TECH, V45, P1, DOI 10.1016/S0950-5849(02)00129-5
   Chen TY, 2001, P INT COMP SOFTW APP, P172, DOI 10.1109/CMPSAC.2001.960614
   Cheon Y, 2005, SERP '05: PROCEEDINGS OF THE 2005 INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING RESEARCH AND PRACTICE, VOLS 1 AND 2, P290
   Davis M. D., 1981, P ACM 81 C, P254, DOI DOI 10.1145/800175.809889
   Do HS, 2005, EMPIR SOFTW ENG, V10, P405, DOI 10.1007/s10664-005-3861-2
   Harman M., 2013, CS1301 U SHEFF DEP C
   Herzig K, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P392, DOI 10.1109/ICSE.2013.6606585
   Jones J.A., 2005, P 20 IEEE ACM INT C, P273, DOI [10.1145/1101908.1101949, DOI 10.1145/1101908.1101949]
   Jones JA, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P467, DOI 10.1109/ICSE.2002.1007991
   Kochhar P. S., 2014, MSR, P296
   Le Tien-Duy B., 2013, 2013 IEEE International Conference on Software Maintenance (ICSM), P380, DOI 10.1109/ICSM.2013.52
   Manolache LI, 2001, SOFTWARE PRACT EXPER, V31, P1211, DOI 10.1002/spe.409
   Masri Wes, 2010, Proceedings of the Third IEEE International Conference on Software Testing, Verification and Validation (ICST 2010), P165, DOI 10.1109/ICST.2010.22
   Masri W, 2014, ACM T SOFTW ENG METH, V23, DOI 10.1145/2559932
   Masri Wes., 2009, Proceedings of the 2Nd International Workshop on Defects in Large Software Systems: Held in Conjunction with the ACM SIGSOFT International Symposium on Software Testing and Analysis (ISSTA 2009), DEFECTS '09, P1
   MCMINN P., 2010, Proceedings of the First International Workshop on Software Test Output Validation, P1
   Memon A. M., 2000, Software Engineering Notes, V25, P30, DOI 10.1145/357474.355050
   Murphy C., 2010, CUCS02710
   Murphy C, 2009, ISSTA 2009: INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P189
   Naish L, 2011, ACM T SOFTW ENG METH, V20, DOI 10.1145/2000791.2000795
   Peters Dennis., 1994, Proceedings of the 1994 ACM SIGSOFT international symposium on Software testing and analysis, ISSTA'94, P58
   Peters DK, 1998, IEEE T SOFTWARE ENG, V24, P161, DOI 10.1109/32.667877
   Wang XM, 2009, PROC INT CONF SOFTW, P45, DOI 10.1109/ICSE.2009.5070507
   WONG WE, 1995, PROC INT CONF SOFTW, P41, DOI 10.1145/225014.225018
   Wong WE, 1999, J SYST SOFTWARE, V48, P79, DOI 10.1016/S0164-1212(99)00048-5
   Xie XY, 2013, ACM T SOFTW ENG METH, V22, DOI 10.1145/2522920.2522924
   Yu YB, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P201, DOI 10.1145/1368088.1368116
   Zhou Z.Q., 2004, P 8 INT S FUT SOFTW, P346
NR 33
TC 6
Z9 6
U1 0
U2 6
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD OCT
PY 2015
VL 41
IS 10
BP 986
EP 1000
DI 10.1109/TSE.2015.2425392
PG 15
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA CU0VR
UT WOS:000363237500003
DA 2024-07-18
ER

PT J
AU El-Attar, M
   Luqman, H
   Kárpáti, P
   Sindre, G
   Opdahl, AL
AF El-Attar, Mohamed
   Luqman, Hamza
   Karpati, Peter
   Sindre, Guttorm
   Opdahl, Andreas L.
TI Extending the UML Statecharts Notation to Model Security Aspects
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Statecharts; security modeling; extended notation; industrial survey;
   subject-based experiment
ID COGNITIVE DIMENSIONS; ACTIVITY DIAGRAMS; INFORMATION; REQUIREMENTS;
   SYNTAX; COLOR
AB Model driven security has become an active area of research during the past decade. While many research works have contributed significantly to this objective by extending popular modeling notations to model security aspects, there has been little modeling support for state-based views of security issues. This paper undertakes a scientific approach to propose a new notational set that extends the UML (Unified Modeling Language) statecharts notation. An online industrial survey was conducted to measure the perceptions of the new notation with respect to its semantic transparency as well as its coverage of modeling state based security aspects. The survey results indicate that the new notation encompasses the set of semantics required in a state based security modeling language and was largely intuitive to use and understand provided very little training. A subject-based empirical evaluation using software engineering professionals was also conducted to evaluate the cognitive effectiveness of the proposed notation. The main finding was that the new notation is cognitively more effective than the original notational set of UML statecharts as it allowed the subjects to read models created using the new notation much quicker.
C1 [El-Attar, Mohamed; Luqman, Hamza] King Fahd Univ Petr & Minerals, Informat & Comp Sci Dept, Dhahran 31261, Saudi Arabia.
   [Karpati, Peter] Inst Energy Technol, NO-1751 Halden, Norway.
   [Sindre, Guttorm] Norwegian Univ Sci & Technol, Dept Comp & Informat Sci, N-7034 Trondheim, Norway.
   [Opdahl, Andreas L.] Univ Bergen, Dept Informat Sci & Media, Bergen, Norway.
C3 King Fahd University of Petroleum & Minerals; Institute for Energy
   Technology (IFE); Norwegian University of Science & Technology (NTNU);
   University of Bergen
RP El-Attar, M (corresponding author), King Fahd Univ Petr & Minerals, Informat & Comp Sci Dept, POB 5066, Dhahran 31261, Saudi Arabia.
EM melattar@kfupm.edu.sa; hluqman@kfupm.edu.sa; Peter.Karpati@hrp.no;
   guttors@idi.ntnu.no; Andreas.Opdahl@uib.no
RI Luqman, Hamzah/AAR-9702-2021; Opdahl, Andreas Lothe/B-5508-2015;
   El-Attar, Mohamed/C-4329-2015
OI Opdahl, Andreas Lothe/0000-0002-3141-1385; Luqman,
   Hamzah/0000-0001-7944-5093; Sindre, Guttorm/0000-0001-5739-8265;
   El-Attar, Mohamed/0000-0002-6709-8212
FU Scientific Research (DSR) at King Fahd University of Petroleum and
   Minerals (KFUPM) [IN141010]
FX The authors would like to thank all the software engineering
   professionals who took part in this experiment. The authors would also
   like to thank Dr. Jan Jurjens for providing us permission to use the
   diagram which we have re-drawn in Fig. 1. The authors would like to
   acknowledge the support provided by the Deanship of Scientific Research
   (DSR) at King Fahd University of Petroleum and Minerals (KFUPM) for
   funding this work through project No. IN141010. M. El-Attar is the
   corresponding author.
CR Amoroso EG., 1994, Fundamentals of computer security technology
   [Anonymous], 2009, P 4 INT S INF COMP C, DOI DOI 10.1145/1533057.1533084
   [Anonymous], 1996, P IFIP INT C ICT SYS
   [Anonymous], 2005, Secure Systems Development with UML
   [Anonymous], 2003, HCI MODELS THEORIES
   [Anonymous], 2011, UN MOD LANG
   Arbaugh WA, 2000, COMPUTER, V33, P52, DOI 10.1109/2.889093
   Baddoo N, 2002, J SYST SOFTWARE, V62, P85, DOI 10.1016/S0164-1212(01)00125-X
   Balzarotti D, 2007, CCS'07: PROCEEDINGS OF THE 14TH ACM CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P25
   Bar M, 2006, PSYCHOL SCI, V17, P645, DOI 10.1111/j.1467-9280.2006.01759.x
   Basin D., 2003, Proceedings 8th ACM Symposium on Access Control Models and Technologies (SACMAT '03), P100, DOI DOI 10.1145/775412.775425
   Bertin J, 1983, IN PRESS
   BLACKWELL AF, 2009, COGNITIVE DIMENSIONS
   Britton C, 1999, HUM-COMPUT INTERACT, V14, P191, DOI 10.1207/s15327051hci1401&2_6
   Burt CC, 2003, SEVENTH IEEE INTERNATIONAL ENTERPRISE DISTRIBUTED OBJECT COMPUTING CONFERENCE, PROCEEDINGS, P159, DOI 10.1109/EDOC.2003.1233846
   Dagit J, 2006, J VISUAL LANG COMPUT, V17, P302, DOI 10.1016/j.jvlc.2006.04.006
   DARDENNE A, 1993, SCI COMPUT PROGRAM, V20, P3, DOI 10.1016/0167-6423(93)90021-G
   DeMarco T., 1979, STRUCTURED ANAL SYST
   El Ariss O., 2011, Proceedings of the 2011 Fifth International Conference on Secure Software Integration and Reliability Improvement (SSIRI 2011), P1, DOI 10.1109/SSIRI.2011.11
   Ericson Clifton A, 1999, SYS SAFETY C, V1, P1
   Fettke P, 2009, COMMUN ASSOC INF SYS, V25, P571
   Gane Chris., 1979, STRUCTURED SYSTEMS A
   Goodman Nelson., 1968, LANGUAGE ART APPROAC
   Gopalakrishnan S, 2010, LECT NOTES BUS INF P, V68, P145
   Gorn GJ, 1997, MANAGE SCI, V43, P1387, DOI 10.1287/mnsc.43.10.1387
   Green TRG, 2006, J VISUAL LANG COMPUT, V17, P328, DOI 10.1016/j.jvlc.2006.04.004
   Green TRG, 1996, J VISUAL LANG COMPUT, V7, P131, DOI 10.1006/jvlc.1996.0009
   Hall T., 2002, Software Process Improvement and Practice, V7, P3, DOI 10.1002/spip.150
   Herzog A, 2007, INT J INF SECUR PRIV, V1, P1, DOI 10.4018/jisp.2007100101
   Hitchman S., 2002, Commun. Assoc. Inf. Syst, V9, P10
   Irani P., 2003, ACM Transactions on Computer-Human Interaction, V10, P1, DOI 10.1145/606658.606659
   Irani P, 2001, IEEE COMPUT GRAPH, V21, P76, DOI 10.1109/38.946634
   Jurjens J., 2002, "UML" 2002 - Unified Modeling Language. Model Engineering, Concepts, and Tools. 5th International Conference. Proceedings (Lecture Notes in Computer Science Vol.2460), P412
   Katta V, 2010, LECT NOTES BUS INF P, V68, P1
   Khan SU, 2012, IET SOFTW, V6, P1, DOI 10.1049/iet-sen.2010.0038
   Klaerding C., 2009, 42 HAW INT C SYST SC, P1
   Kordy B, 2011, LECT NOTES COMPUT SC, V6561, P80, DOI 10.1007/978-3-642-19751-2_6
   Krsul I. V., 1998, THESIS PURDUE U W LA
   LARKIN JH, 1987, COGNITIVE SCI, V11, P65, DOI 10.1016/S0364-0213(87)80026-5
   Lehmann ErichL., 1998, NONPARAMETRICS STAT
   Lin L, 2003, 11TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, PROCEEDINGS, P371
   Liu L, 2003, 11TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, PROCEEDINGS, P151
   Lodderstedt Torsten., 2002, UML 02 P 5 INT C UNI, P426, DOI [DOI 10.1007/3-540-45800-X_33, DOI 10.1007/3-540-45800-X33]
   MACKINLAY J, 1986, ACM T GRAPHIC, V5, P110, DOI 10.1145/22949.22950
   Masri K, 2008, J DATABASE MANAGE, V19, P22, DOI 10.4018/jdm.2008070102
   MILLER GA, 1956, PSYCHOL REV, V63, P81, DOI 10.1037/h0043158
   Mitnick KD., 2009, The art of intrusion: the real stories behind the exploits of hackers, intruders, and deceivers
   Moody DL, 2009, IEEE T SOFTWARE ENG, V35, P756, DOI 10.1109/TSE.2009.67
   Mouratidis H, 2007, INT J SOFTW ENG KNOW, V17, P285, DOI 10.1142/S0218194007003240
   Niazi M., 2006, Software Process Improvement and Practice, V11, P193, DOI 10.1002/spip.261
   Nordbotten JC, 1999, INFORM SYST J, V9, P139, DOI 10.1046/j.1365-2575.1999.00052.x
   O'Connor Z, 2011, COLOR RES APPL, V36, P55, DOI 10.1002/col.20594
   Paivio A., 1986, Mental representations: A dual coding approach
   Pfleeger Shari Lawrence, 2001, ACM SIGSOFT Software Engineering Notes, V26, P16, DOI DOI 10.1145/505532.505535
   Purchase H. C., 2002, Empirical Software Engineering, V7, P233, DOI 10.1023/A:1016344215610
   Purchase HC, 2004, INT J HUM-COMPUT ST, V61, P187, DOI 10.1016/j.ijhcs.2004.01.003
   Reijers HA, 2011, IEEE T SYST MAN CY A, V41, P449, DOI 10.1109/TSMCA.2010.2087017
   RODGERS JL, 1988, AM STAT, V42, P59, DOI 10.2307/2685263
   Rostad L., 2006, Proceedings of the Conference on Requirements Engineering: Foundation for Software Quality, Luxembourg, P33
   Schmidt Holger, 2011, Advanced Information Systems Engineering. Proceedings 23rd International Conference, CAiSE 2011, P367, DOI 10.1007/978-3-642-21640-4_28
   SHAPIRO SS, 1972, TECHNOMETRICS, V14, P355, DOI 10.2307/1267427
   Siau K, 2004, J DATABASE MANAGE, V15, P73, DOI 10.4018/jdm.2004010103
   Siegel Sidney, 1988, Nonparametric statistics for the behavioral sciences
   Sindre G, 2005, REQUIR ENG, V10, P34, DOI 10.1007/s00766-004-0194-4
   Sindre G, 2007, LECT NOTES COMPUT SC, V4542, P355
   Sindre Guttorm, 2002, P 3 S REQUIREMENTS E, P1, DOI [10.5555/2835417.2835420, DOI 10.5555/2835417.2835420]
   Souag A, 2012, LECT NOTES BUS INF P, V112, P61
   Stytz MR, 2004, IEEE SECUR PRIV, V2, P72, DOI 10.1109/MSECP.2004.1264860
   van Lamsweerde A, 2004, PROC INT CONF SOFTW, P148, DOI 10.1109/ICSE.2004.1317437
   WAND Y, 1990, IEEE T SOFTWARE ENG, V16, P1282, DOI 10.1109/32.60316
   Whittle J, 2010, SOFTW SYST MODEL, V9, P203, DOI 10.1007/s10270-009-0114-7
   WINN W, 1993, CONTEMP EDUC PSYCHOL, V18, P162, DOI 10.1006/ceps.1993.1016
   Wohlin C., 2012, Experimentation in Software Engineering
   ZHANG JJ, 1994, COGNITIVE SCI, V18, P87, DOI 10.1207/s15516709cog1801_3
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
NR 79
TC 19
Z9 21
U1 0
U2 7
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUL
PY 2015
VL 41
IS 7
BP 661
EP 690
DI 10.1109/TSE.2015.2396526
PG 30
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA CN2JO
UT WOS:000358247100003
OA Green Published
DA 2024-07-18
ER

PT J
AU Bavota, G
   Linares-Vásquez, M
   Bernal-Cárdenas, CE
   Di Penta, M
   Oliveto, R
   Poshyvanyk, D
AF Bavota, Gabriele
   Linares-Vasquez, Mario
   Bernal-Cardenas, Carlos Eduardo
   Di Penta, Massimiliano
   Oliveto, Rocco
   Poshyvanyk, Denys
TI The Impact of API Change- and Fault-Proneness on the User Ratings of
   Android Apps
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Mining software repositories; empirical studies; android; API changes
AB The mobile apps market is one of the fastest growing areas in the information technology. In digging their market share, developers must pay attention to building robust and reliable apps. In fact, users easily get frustrated by repeated failures, crashes, and other bugs; hence, they abandon some apps in favor of their competition. In this paper we investigate how the fault-and change-proneness of APIs used by Android apps relates to their success estimated as the average rating provided by the users to those apps. First, in a study conducted on 5,848 (free) apps, we analyzed how the ratings that an app had received correlated with the fault-and change-proneness of the APIs such app relied upon. After that, we surveyed 45 professional Android developers to assess (i) to what extent developers experienced problems when using APIs, and (ii) how much they felt these problems could be the cause for unfavorable user ratings. The results of our studies indicate that apps having high user ratings use APIs that are less fault-and change-prone than the APIs used by low rated apps. Also, most of the interviewed Android developers observed, in their development experience, a direct relationship between problems experienced with the adopted APIs and the users' ratings that their apps received.
C1 [Bavota, Gabriele] Free Univ Bozen Bolzano, Dept Comp Sci, Bolzano, Italy.
   [Linares-Vasquez, Mario; Bernal-Cardenas, Carlos Eduardo; Poshyvanyk, Denys] Coll William & Mary, Dept Comp Sci, Williamsburg, VA 23185 USA.
   [Di Penta, Massimiliano] Univ Sannio, Dept Engn, Benevento, Italy.
   [Oliveto, Rocco] Univ Molise, Dept Biosci & Terr, Pesche, IS, Italy.
C3 Free University of Bozen-Bolzano; William & Mary; University of Sannio;
   University of Molise
RP Bavota, G (corresponding author), Free Univ Bozen Bolzano, Dept Comp Sci, Bolzano, Italy.
EM gabriele.bavota@unibz.it; mlinarev@cs.wm.edu; cebernal@cs.wm.edu;
   dipenta@unisannio.it; rocco.oliveto@unimol.it; denys@cs.wm.edu
RI Di Penta, Massimiliano/AAF-9656-2021
OI Di Penta, Massimiliano/0000-0002-0340-9747; BAVOTA,
   Gabriele/0000-0002-2216-3148; Poshyvanyk, Denys/0000-0002-5626-7586;
   Linares-Vasquez, Mario/0000-0003-0161-2888
FU NSF [CCF-1016868, CCF-1218129, CAREER-1253837]; MARKOS project -
   European Commission [FP7-317743]; Direct For Computer & Info Scie &
   Enginr; Division of Computing and Communication Foundations [1253837]
   Funding Source: National Science Foundation; Division of Computing and
   Communication Foundations; Direct For Computer & Info Scie & Enginr
   [1218129] Funding Source: National Science Foundation
FX The authors would like to thank anonymous FSE'13 and TSE reviewers for
   their pertinent feedback and useful comments that helped us to improve
   and steer this work. Also, they are grateful to professional Android
   developers who participated in our survey. This work was supported in
   part by the NSF CCF-1016868, NSF CCF-1218129, and NSF CAREER-1253837
   grants. Gabriele Bavota and Massimiliano Di Penta were partially
   supported by the MARKOS project, funded by the European Commission under
   Contract Number FP7-317743. Any opinions, findings, and conclusions
   expressed herein are the authors' and do not necessarily reflect those
   of the sponsors. This paper was an extension of "API Change and Fault
   Proneness: A Threat to the Success of Android Apps" that appeared in the
   Proceedings of the 9th Joint Meeting of the European Software
   Engineering Conference and the ACM SIGSOFT Symposium on the Foundations
   of Software Engineering (ESEC/FSE 2013), Saint Petersburg, Russia, pages
   477-487, 2013.
CR Alazab M., 2012, Proceedings of the 2012 32nd International Conference on Distributed Computing Systems Workshops (ICDCS Workshops), P608, DOI 10.1109/ICDCSW.2012.13
   [Anonymous], PRACTICAL NONPARAMET
   Asaduzzaman M., 2012, 2012 9th IEEE Working Conference on Mining Software Repositories (MSR 2012), P116, DOI 10.1109/MSR.2012.6224267
   Batyuk L., 2011, 2011 6th International Conference on Malicious and Unwanted Software, P66, DOI 10.1109/MALWARE.2011.6112328
   Bavota G, 2014, IEEE T SOFTWARE ENG, V40, P671, DOI 10.1109/TSE.2013.60
   Bavota G, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P692, DOI 10.1109/ICSE.2013.6606615
   Bird C, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P121, DOI 10.1145/1595696.1595716
   Businge J., 2012, 2012 12th IEEE Working Conference on Source Code Analysis and Manipulation (SCAM 2012), P164, DOI 10.1109/SCAM.2012.10
   BUSINGE J, 2012, P INT C SOFTW MAINT, P368
   Businge J., 2013, SOFTW QUAL J, P1
   Chen N, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P767, DOI 10.1145/2568225.2568263
   Collard ML, 2003, PROG COMPREHEN, P134
   Cordeiro J., 2012, 2012 Third International Workshop on Recommendation Systems for Software Engineering (RSSE), P85, DOI 10.1109/RSSE.2012.6233418
   Cubranic D, 2003, PROC INT CONF SOFTW, P408, DOI 10.1109/ICSE.2003.1201219
   Dagenais B., 2010, Proc. of the ICSE 10, P275, DOI DOI 10.1145/1806799.1806842
   Dagenais B, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P481, DOI 10.1145/1368088.1368154
   Daqing Hou, 2011, 2011 18th Working Conference on Reverse Engineering, P131, DOI 10.1109/WCRE.2011.24
   Davies J, 2013, EMPIR SOFTW ENG, V18, P1195, DOI 10.1007/s10664-012-9199-7
   Davies Julius., 2011, MSR, P183, DOI DOI 10.1145/1985441.1985468
   Desnos A., 2012, 2012 45th Hawaii International Conference on System Sciences (HICSS), P5394, DOI 10.1109/HICSS.2012.114
   Di Penta Massimiliano, 2012, P ACM SIGSOFT 20 INT, P1
   Dig D, 2006, J SOFTW MAINT EVOL-R, V18, P83, DOI 10.1002/smr.328
   Fischer M, 2003, PROC IEEE INT CONF S, P23, DOI 10.1109/ICSM.2003.1235403
   Grissom R. J., 2005, EFFECT SIZES RES BRO
   Groves R.M., 2009, Survey Methodology, V2nd
   Hindle Abram, 2014, EMPIR SOFTW ENG, P1
   HOLM S, 1979, SCAND J STAT, V6, P65
   Holmes R., 2008, Proceedings of the International working Conference on Mining Software Repositories, MSR '08, P23
   Isohara T., 2011, Proceedings of the 2011 Seventh International Conference on Computational Intelligence and Security (CIS 2011), P1011, DOI 10.1109/CIS.2011.226
   Johnson R., 2012, 2012 International Conference on Software Security and Reliability Companion, P45, DOI 10.1109/SERE-C.2012.44
   Jones F. J., 2011, HDB TRADITIONAL ALTE
   Khalid H., 2014, IEEE SOFTW
   Ko AJ, 2007, PROC INT CONF SOFTW, P344
   Linares-Vasquez M., 2014, PROC 11 WORK C MININ, P242
   Linares-Vasquez M, 2014, P 22 INT C PROGR C, P83
   Linares-Vasquez M., 2014, Proceedings of the 11th Working Conference on Mining Software Repositories, P2
   Linares-Vásquez M, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE COMPANION 2014), P714, DOI 10.1145/2591062.2591092
   Linares-Vasquez Mario, 2013, P 2013 9 JOINT M FDN, P477, DOI DOI 10.1145/2491411.2491428
   Martie L., 2012, 2012 9th IEEE Working Conference on Mining Software Repositories (MSR 2012), P120, DOI 10.1109/MSR.2012.6224268
   Mayrand J, 1996, INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE, PROCEEDINGS, P244, DOI 10.1109/ICSM.1996.565012
   McDonnell T, 2013, PROC IEEE INT CONF S, P70, DOI 10.1109/ICSM.2013.18
   McMillan C, 2012, IEEE T SOFTWARE ENG, V38, P1069, DOI 10.1109/TSE.2011.84
   McMillan C, 2012, PROC INT CONF SOFTW, P848, DOI 10.1109/ICSE.2012.6227134
   Mileva YM, 2009, IWPSE-EVOL 09: ERCIM WORKSHOP ON SOFTWARE EVOLUTION (EVOL) AND INTERNATIONAL WORKSHOP ON PRINCIPLES OF SOFTWARE EVOLUTION (IWPSE), P57
   Minelli R, 2013, EUR CON SFTWR MTNCE, P144, DOI 10.1109/CSMR.2013.24
   Mojica IJ, 2014, IEEE SOFTWARE, V31, P78, DOI 10.1109/MS.2013.142
   Moritz E., 2013, P 28 IEEE ACM INT C, P11
   Oppenheim A.N., 1992, QUESTIONNAIRE DESIGN
   RAEMAEKERS S, 2012, P 8 IEEE INT C SOFTW, P378
   Rahman MM, 2014, 2014 SOFTWARE EVOLUTION WEEK - IEEE CONFERENCE ON SOFTWARE MAINTENANCE, REENGINEERING, AND REVERSE ENGINEERING (CSMR-WCRE), P194, DOI 10.1109/CSMR-WCRE.2014.6747170
   Rigby PC, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P832, DOI 10.1109/ICSE.2013.6606629
   Robillard M. P., 2000, Software Engineering Notes, V25, P2, DOI 10.1145/357474.355046
   Robillard MP, 2011, EMPIR SOFTW ENG, V16, P703, DOI 10.1007/s10664-010-9150-8
   Ruiz I. J. M., 2012, 2012 IEEE 20th International Conference on Program Comprehension, P113
   Ruiz IJM, 2014, IEEE SOFTWARE, V31, P86, DOI 10.1109/MS.2014.79
   Sanz B, 2012, CONSUM COMM NETWORK, P149, DOI 10.1109/CCNC.2012.6181075
   Shabtai A., 2010, Proceedings 2010 International Conference on Computational Intelligence and Security (CIS 2010), P329, DOI 10.1109/CIS.2010.77
   Shihab E., 2012, 2012 9th IEEE Working Conference on Mining Software Repositories (MSR 2012), P112, DOI 10.1109/MSR.2012.6224307
   Sinha V. S., 2012, 2012 9th IEEE Working Conference on Mining Software Repositories (MSR 2012), P132, DOI 10.1109/MSR.2012.6224271
   Syer MD, 2011, IEEE INT WORK C SO, P55, DOI 10.1109/SCAM.2011.25
   Syer MarkD., 2013, Proceedings of the 2013 Conference of the Center for Advanced Studies on Collaborative Research, CASCON '13, P283
   Takuya Watanabe, 2011, P 3 INT WORKSH SEARC, P17, DOI [DOI 10.1145/1985429.1985434, 10.1145/1985429.1985434]
   Te-En Wei, 2012, 2012 IEEE 11th International Conference on Trust, Security and Privacy in Computing and Communications (TrustCom), P1251, DOI 10.1109/TrustCom.2012.91
   VisionMobile, 2012, NEW MOB APP EC DEV E
   VisionMobile, 2013, DEV TOOLS FDN APP EC
   VisionMobile, 2013, DEV EC Q3 2013 STAT
   Zhou YJ, 2012, P IEEE S SECUR PRIV, P95, DOI 10.1109/SP.2012.16
   Zibran M. F., 2011, 2011 18th Working Conference on Reverse Engineering, P151, DOI 10.1109/WCRE.2011.26
   Zibran MF, 2008, INT J COMPUT SCI NET, V8, P255
NR 69
TC 130
Z9 145
U1 0
U2 22
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD APR
PY 2015
VL 41
IS 4
BP 384
EP 407
DI 10.1109/TSE.2014.2367027
PG 24
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA CG2PC
UT WOS:000353115800003
OA hybrid, Green Published
DA 2024-07-18
ER

PT J
AU Massacci, F
   Nguyen, VH
AF Massacci, Fabio
   Viet Hung Nguyen
TI An Empirical Methodology to Evaluate Vulnerability Discovery Models
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Software security; empirical evaluation; vulnerability discovery model;
   vulnerability analysis
ID SECURITY VULNERABILITIES; SOFTWARE-RELIABILITY; CODE CHURN; METRICS
AB Vulnerability discovery models (VDMs) operate on known vulnerability data to estimate the total number of vulnerabilities that will be reported after a software is released. VDMs have been proposed by industry and academia, but there has been no systematic independent evaluation by researchers who are not model proponents. Moreover, the traditional evaluation methodology has some issues that biased previous studies in the field. In this work we propose an empirical methodology that systematically evaluates the performance of VDMs along two dimensions (quality and predictability) and addresses all identified issues of the traditional methodology. We conduct an experiment to evaluate most existing VDMs on popular web browsers' vulnerability data. Our comparison shows that the results obtained by the proposed methodology are more informative than those by the traditional methodology. Among evaluated VDMs, the simplest linear model is the most appropriate choice in terms of both quality and predictability for the first 6-12 months since a release date. Otherwise, logistics-based models are better choices.
C1 [Massacci, Fabio; Viet Hung Nguyen] Univ Trento, DISI, Trento, TN, Italy.
C3 University of Trento
RP Massacci, F (corresponding author), Univ Trento, DISI, Trento, TN, Italy.
EM fabio.massacci@unitn.it; vhnguyen@disi.unitn.it
RI Massacci, Fabio/C-2662-2012
OI Massacci, Fabio/0000-0002-1091-8486
FU European Union [285223]; Italian Project MIUR-PRIN-TENACE
FX The authors would like to thank all anonymous reviewers for their
   helpful comments and suggestion. This work has been partly supported by
   the European Union Seventh Framework Programme (FP7/2007-2013) under
   grant agreement no. 285223-SECONOMICS, and the Italian Project
   MIUR-PRIN-TENACE.
CR Akaike H., 1985, CELEBRATION STAT ISI
   Alhazmi O, 2005, LECT NOTES COMPUT SC, V3654, P281
   Alhazmi OH, 2007, COMPUT SECUR, V26, P219, DOI 10.1016/j.cose.2006.10.002
   Alhazmi OH, 2005, 16TH IEEE INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P129, DOI 10.1109/ISSRE.2005.30
   Alhazmi OH, 2008, IEEE T RELIAB, V57, P14, DOI 10.1109/TR.2008.916872
   Alhazmi OH, 2006, ISSRE 2006:17TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P343
   Alhazmi OH, 2006, P REL MAINT S, P86
   [Anonymous], 2014, R LANG ENV STAT COMP
   [Anonymous], 2006, P 10 IASTED INT C SO
   Arbaugh WA, 2000, COMPUTER, V33, P52, DOI 10.1109/2.889093
   Avizienis A, 2004, IEEE T DEPEND SECURE, V1, P11, DOI 10.1109/TDSC.2004.2
   Chowdhury I, 2011, J SYST ARCHITECT, V57, P294, DOI 10.1016/j.sysarc.2010.06.003
   Chromium Developers, 2012, CHROM STABL REL HIST
   Dowd M., 2007, The Art of Software Security Assessment: Identifying and Preventing Software Vulnerabilities
   FLEMING PJ, 1986, COMMUN ACM, V29, P218, DOI 10.1145/5666.5673
   Gegick M., 2008, P 23 ACM SIGPLAN C O, P917
   Gegick M, 2009, LECT NOTES COMPUT SC, V5429, P135
   GOEL AL, 1979, IEEE T RELIAB, V28, P206, DOI 10.1109/TR.1979.5220566
   HyunChul Joh, 2008, 2008 IEEE International Symposium on Software Reliability Engineering, P299, DOI 10.1109/ISSRE.2008.32
   Kim J, 2007, HASE 2007: 10TH IEEE HIGH ASSURANCE SYSTEMS ENGINEERING SYMPOSIUM, PROCEEDINGS, P141, DOI 10.1109/HASE.2007.55
   Krsul I. V., 1998, THESIS PURDUE U W LA
   MALAIYA YK, 1992, IEEE T RELIAB, V41, P539, DOI 10.1109/24.249581
   Massacci F., 2010, P 6 INT ACM WORKSH S
   Massacci F, 2011, LECT NOTES COMPUT SC, V6542, P195, DOI 10.1007/978-3-642-19125-1_15
   McKillup S., 2005, STAT EXPLAINED INTRO
   Miller Charles, 2007, WORKSHOP EC INFORM S
   Musa J. D., 1984, Proceedings of the 7th International Conference on Software Engineering (cat. no. 84CH2011-5), P230
   Nagappan N, 2005, PROC INT CONF SOFTW, P284, DOI 10.1145/1062455.1062514
   Needham R., 2002, OPEN SOURCE SOFTW EC
   Neuhaus S, 2007, CCS'07: PROCEEDINGS OF THE 14TH ACM CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P529
   Nguyen V. H., 2014, THESIS U TRENTO TREN
   Nguyen V. H., 2010, P 6 INT ACM WORKSH S
   Nguyen VietHung., 2013, P 8 ACM SIGSAC S INF, P493
   NIST, 2012, e-Handbook of Statistical Methods
   Olague HM, 2007, IEEE T SOFTWARE ENG, V33, P402, DOI 10.1109/TSE.2007.1015.
   Ozment A, 2006, P 15 USENIX SEC S
   Ozment A, 2007, QOP'07: PROCEEDINGS OF THE 2007 ACM WORKSHOP ON QUALITY OF PROTECTION, P6
   Rajab Moheeb., 2011, Trends in circumventing web-malware detection
   Rescorla E, 2005, IEEE SECUR PRIV, V3, P14, DOI 10.1109/MSP.2005.17
   Schneider F. B., 1991, TRUST CYBERSPACE
   Schryen G., 2009, P 15 AM C INF SYST
   Shin Y, 2011, IEEE T SOFTWARE ENG, V37, P772, DOI 10.1109/TSE.2010.81
   Sliwerski J., 2005, Proc. MSR 2005, P24
   Wikipedia, 2012, FIR REL HIST
   Wikipedia, 2012, SAF VERS HIST
   Woo SW, 2006, DASC 2006: 2ND IEEE INTERNATIONAL SYMPOSIUM ON DEPENDABLE, AUTONOMIC AND SECURE COMPUTING, PROCEEDINGS, P103
   Woo SW, 2011, COMPUT SECUR, V30, P50, DOI 10.1016/j.cose.2010.10.007
   Wood A., 1996, 961 TAND CO
   YAMADA S, 1983, IEEE T RELIAB, V32, P475, DOI 10.1109/TR.1983.5221735
   Younan Y., 2013, 25 YEARS VULNERABILI
   Younis Awad A., 2011, Proceedings of the 2011 International Conference on Security & Management (SAM 2011), P617
   Zimmermann T, 2007, ISSRE 2007: 18TH IEEE INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P227, DOI 10.1109/ISSRE.2007.19
NR 52
TC 27
Z9 31
U1 0
U2 13
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD DEC
PY 2014
VL 40
IS 12
BP 1147
EP 1162
DI 10.1109/TSE.2014.2354037
PG 16
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA AW4AQ
UT WOS:000346224400001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Cuadrado, JS
   Guerra, E
   de Lara, J
AF Sanchez Cuadrado, Jesus
   Guerra, Esther
   de Lara, Juan
TI A Component Model for Model Transformations
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Model-driven engineering; model transformation; reusability; genericity;
   component-based development
ID LANGUAGE; SUPPORT
AB Model-driven engineering promotes an active use of models to conduct the software development process. In this way, models are used to specify, simulate, verify, test and generate code for the final systems. Model transformations are key enablers for this approach, being used to manipulate instance models of a certain modelling language. However, while other development paradigms make available techniques to increase productivity through reutilization, there are few proposals for the reuse of model transformations across different modelling languages. As a result, transformations have to be developed from scratch even if other similar ones exist. In this paper, we propose a technique for the flexible reutilization of model transformations. Our proposal is based on generic programming for the definition and instantiation of transformation templates, and on component-based development for the encapsulation and composition of transformations. We have designed a component model for model transformations, supported by an implementation currently targeting the Atlas Transformation Language (ATL). To evaluate its reusability potential, we report on a generic transformation component to analyse workflow models through their transformation into Petri nets, which we have reused for eight workflow languages, including UML Activity Diagrams, YAWL and two versions of BPMN.
C1 [Sanchez Cuadrado, Jesus; Guerra, Esther; de Lara, Juan] Univ Autonoma Madrid, Dept Comp Sci, E-28049 Madrid, Spain.
C3 Autonomous University of Madrid
RP Cuadrado, JS (corresponding author), Univ Autonoma Madrid, Dept Comp Sci, E-28049 Madrid, Spain.
EM jesus.sanchez.cuadrado@uam.es; esther.guerra@uam.es; juan.delara@uam.es
RI de Lara, Juan/B-5422-2014; Sanchez Cuadrado, Jesus/L-2365-2013; Guerra,
   Esther/B-4977-2014
OI Sanchez Cuadrado, Jesus/0000-0001-9755-5616; Guerra,
   Esther/0000-0002-2818-2278
FU Spanish Ministry of Economy and Competitivity [TIN2011-24139]; EU
   commission [FP7-ICT-2013-10, 611125]
FX The authors thank the reviewers for their comments. This work was
   supported by the Spanish Ministry of Economy and Competitivity with
   project Go-Lite (TIN2011-24139) and the EU commission with project MONDO
   (FP7-ICT-2013-10, #611125).
CR Alexe B, 2008, PROC VLDB ENDOW, V1, P230, DOI 10.14778/1453856.1453886
   Alvarez C., 2013, ACADEMICS TOOL ECL W
   [Anonymous], OCL SPEC VERS 2 0
   [Anonymous], 1996, A Theory of Objects
   [Anonymous], 2012, SYNTHESIS LECT SOFTW
   Bak K., 2010, P 3 INT C SOFTW LANG, P102
   Balogh A, 2010, LECT NOTES COMPUT SC, V5765, P224, DOI 10.1007/978-3-642-17322-6_11
   Bansiya J, 2002, IEEE T SOFTWARE ENG, V28, P4, DOI 10.1109/32.979986
   Bendraou R, 2008, SOFTW SYST MODEL, V7, P329, DOI 10.1007/s10270-007-0058-8
   Bonet P., 2007, P 23 LAT AM C INF CL
   Buezas Nicolas, 2013, Modelling Foundations and Applications. 9th European Conference, ECMFA 2013. Proceedings. LNCS 7949, P179, DOI 10.1007/978-3-642-39013-5_13
   Chenouard R, 2009, LECT NOTES COMPUT SC, V5795, P92, DOI 10.1007/978-3-642-04425-0_8
   Cuadrado JS, 2008, LECT NOTES COMPUT SC, V5063, P168, DOI 10.1007/978-3-540-69927-9_12
   Czarnecki K, 2006, IBM SYST J, V45, P621, DOI 10.1147/sj.453.0621
   Czarnecki K, 1999, LECT NOTES COMPUT SC, V1687, P2, DOI 10.1145/318774.318779
   David R., 1992, Petri Nets and Grafcet-tools for Modelling Discrete Events Systems
   de Lara J, 2013, SOFTW SYST MODEL, V12, P453, DOI 10.1007/s10270-011-0221-0
   Di Ruscio Davide, 2013, Theory and Practice of Model Transformations. 6th International Conference, ICMT 2013. Proceedings: LNCS 7909, P60, DOI 10.1007/978-3-642-38883-5_9
   Di Ruscio D, 2012, IEEE SOFTWARE, V29, P78, DOI 10.1109/MS.2012.153
   Ehrig H., 1990, MONOGRAPHS THEORETIC
   Engels G, 2005, LECT NOTES COMPUT SC, V3393, P38
   Etien A., 2013, SOFTW SYST IN PRESS
   Favre L, 2006, LECT NOTES COMPUT SC, V4039, P326
   Garcia R, 2003, ACM SIGPLAN NOTICES, V38, P115, DOI 10.1145/949343.949317
   Gregor D, 2006, ACM SIGPLAN NOTICES, V41, P291, DOI 10.1145/1167515.1167499
   Guerra Esther, 2012, Theory and Practice of Model Transformations. Proceedings 5th International Conference, ICMT 2012, P40, DOI 10.1007/978-3-642-30476-7_3
   Guerra Esther, 2010, Proceedings 2010 IEEE Symposium on Visual Languages and Human-Centric Computing (VL/HCC 2010), P119, DOI 10.1109/VLHCC.2010.25
   Guerra E, 2013, AUTOMAT SOFTW ENG, V20, P5, DOI 10.1007/s10515-012-0102-y
   Hannemann Jan., 2005, AOSD 05, P135
   Heimann J, 2010, LECT NOTES COMPUT SC, V6395, P78
   Hemel Z, 2010, SOFTW SYST MODEL, V9, P375, DOI 10.1007/s10270-009-0136-1
   Herrmannsdoerfer M, 2011, LECT NOTES COMPUT SC, V6563, P163, DOI 10.1007/978-3-642-19440-5_10
   Jones SimonPeyton., 2002, Haskell 98 Language and Libraries
   Jouault F, 2008, SCI COMPUT PROGRAM, V72, P31, DOI 10.1016/j.scico.2007.08.002
   Kalnina E, 2010, LECT NOTES COMPUT SC, V5969, P244
   Kleppe A, 2006, LECT NOTES COMPUT SC, V4066, P173
   KRUEGER CW, 1992, COMPUT SURV, V24, P131, DOI 10.1145/130844.130856
   Kusel A., 2013, SOFTW SYST MODEL, V13
   Lau KK, 2007, IEEE T SOFTWARE ENG, V33, P709, DOI 10.1109/TSE.2007.70726
   Ma HH, 2004, LECT NOTES COMPUT SC, V3273, P12
   Malavolta I, 2010, IEEE T SOFTWARE ENG, V36, P119, DOI 10.1109/TSE.2009.51
   Mottu JM, 2006, LECT NOTES COMPUT SC, V4199, P589
   Oliveira BCDS, 2010, ACM SIGPLAN NOTICES, V45, P341, DOI 10.1145/1932682.1869489
   Rivera J. E., 2009, Proc. MtATL, V9, P34
   Saks K., 2009, 318 JSR
   Sanchez Cuadrado Jesus, 2011, Theory and Practice of Model Transformations. Proceedings of the 4th International Conference, ICMT 2011, P62, DOI 10.1007/978-3-642-21732-6_5
   Cuadrado JS, 2012, J OBJECT TECHNOL, V11, DOI 10.5381/jot.2012.11.2.a4
   Cuadrado JS, 2009, SOFTW SYST MODEL, V8, P325, DOI 10.1007/s10270-008-0093-0
   Sen S., 2010, SOSYM, V11, P111
   Sen S, 2009, LECT NOTES COMPUT SC, V5795, P32, DOI 10.1007/978-3-642-04425-0_4
   Skotiniotis T, 2006, LECT NOTES COMPUT SC, V4067, P477
   Stepanov Alexander, 2009, ELEMENTS PROGRAMMING
   Stroustrup B., 2009, DR DOBBS
   Van der Aalst WMP, 2003, DISTRIB PARALLEL DAT, V14, P5, DOI 10.1023/A:1022883727209
   van Ommering R, 2000, COMPUTER, V33, P78, DOI 10.1109/2.825699
   Vanhooff B, 2007, LECT NOTES COMPUT SC, V4735, P31
   Varró D, 2004, LECT NOTES COMPUT SC, V3273, P290
   Vermolen Sander D, 2011, INT C SOFTW LANG ENG, P201
   Voelter M., 2007, P 7 OOPSLA WORKSH DO
   Wachsmuth G, 2007, LECT NOTES COMPUT SC, V4609, P600
   Wagelaar D, 2010, SOFTW SYST MODEL, V9, P285, DOI 10.1007/s10270-009-0134-3
   Wegner P., 1987, TUTORIAL SOFTWARE RE, P24
   Wimmer M., 2011, P ECEASST, V50
   Wimmer M, 2012, J OBJECT TECHNOL, V11, DOI 10.5381/jot.2012.11.2.a2
   Wimmer M, 2010, LECT NOTES COMPUT SC, V6142, P260, DOI 10.1007/978-3-642-13688-7_18
   Yie A, 2012, SOFTW SYST MODEL, V11, P55, DOI 10.1007/s10270-010-0179-3
   Zha HP, 2011, SOFTW SYST MODEL, V10, P253, DOI 10.1007/s10270-010-0149-9
NR 67
TC 43
Z9 44
U1 0
U2 17
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD NOV
PY 2014
VL 40
IS 11
BP 1042
EP 1060
DI 10.1109/TSE.2014.2339852
PG 19
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA AW4AO
UT WOS:000346224200001
DA 2024-07-18
ER

PT J
AU Bartel, A
   Klein, J
   Monperrus, M
   Le Traon, Y
AF Bartel, Alexandre
   Klein, Jacques
   Monperrus, Martin
   Le Traon, Yves
TI Static Analysis for Extracting Permission Checks of a Large Scale
   Framework: The Challenges and Solutions for Analyzing Android
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Large scale framework; permissions; call-graph; Android; security; Soot;
   Java; static analysis
AB A common security architecture is based on the protection of certain resources by permission checks (used e.g., in Android and Blackberry). It has some limitations, for instance, when applications are granted more permissions than they actually need, which facilitates all kinds of malicious usage (e. g., through code injection). The analysis of permission-based framework requires a precise mapping between API methods of the framework and the permissions they require. In this paper, we show that naive static analysis fails miserably when applied with off-the-shelf components on the Android framework. We then present an advanced class-hierarchy and field-sensitive set of analyses to extract this mapping. Those static analyses are capable of analyzing the Android framework. They use novel domain specific optimizations dedicated to Android.
C1 [Bartel, Alexandre; Klein, Jacques; Le Traon, Yves] Univ Luxembourg, Interdisciplinary Ctr Secur Reliabil & Trust, Luxembourg, Kirchberg, Luxembourg.
   [Monperrus, Martin] Univ Lille, Villeneuve Dascq, France.
   [Monperrus, Martin] Inria, Villeneuve Dascq, France.
C3 University of Luxembourg; Universite de Lille; Inria
RP Bartel, A (corresponding author), Univ Luxembourg, Interdisciplinary Ctr Secur Reliabil & Trust, 4 Rue Alphonse Weicker, Luxembourg, Kirchberg, Luxembourg.
EM alexandre.bartel@uni.lu; jacques.klein@uni.lu;
   martin.monperrus@univ-lille1.fr; yves.letraon@uni.lu
RI Monperrus, Martin/I-3640-2012; LE TRAON, Yves/T-2911-2019; Bartel,
   Alexandre/JDW-0992-2023
OI Monperrus, Martin/0000-0003-3505-3383; Bartel,
   Alexandre/0000-0003-1383-0372; LE TRAON, Yves/0000-0002-1045-4861;
   Klein, Jacques/0000-0003-4052-475X
FU National Research Fund, Luxembourg (AFR grant) [1081630]
FX This research was supported by the National Research Fund, Luxembourg
   (AFR grant 1081630). We also would like to thank Eric Bodden for his
   help in using the Soot analysis toolkit.
CR Andersen Lars Ole, 1994, THESIS U COPHENHAGEN
   [Anonymous], 2011, TR201104 TU DARMST
   [Anonymous], 2011, ANDR DEV GUID
   [Anonymous], 724 ETH ZUR
   Au Kathy Wain Yee, 2012, P 2012 ACM C COMP CO, P217
   Barrera D, 2010, PROCEEDINGS OF THE 17TH ACM CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY (CCS'10), P73, DOI 10.1145/1866307.1866317
   Bartel A, 2012, IEEE INT CONF AUTOM, P274, DOI 10.1145/2351676.2351722
   Centonze P., 2006, ISSTA 06, P121
   Conti M, 2011, LECT NOTES COMPUT SC, V6531, P331
   Davi L, 2011, LECT NOTES COMPUT SC, V6531, P346
   Dietz M., 2011, Proceedings of the 20th USENIX Conference on Security, SEC'11, P23
   Enck W, 2009, CCS'09: PROCEEDINGS OF THE 16TH ACM CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P235
   Enck W, 2009, IEEE SECUR PRIV, V7, P50, DOI 10.1109/MSP.2009.26
   Felt AP, 2011, PROCEEDINGS OF THE 18TH ACM CONFERENCE ON COMPUTER & COMMUNICATIONS SECURITY (CCS 11), P627
   Felt AdriennePorter., 2011, USENIX SECURITY S, V30, P88
   FELT AP, [No title captured]
   Geay E, 2009, PROC INT CONF SOFTW, P177, DOI 10.1109/ICSE.2009.5070519
   Gibler C., 2011, CSE201110 UC DAV
   Hendren Laurie, 2011, P CETUS US COMP INF
   Hoffman S., 2011, ZEUS BANKING TROJAN
   Koved L, 2002, ACM SIGPLAN NOTICES, V37, P359, DOI 10.1145/583854.582452
   Lhoták O, 2003, LECT NOTES COMPUT SC, V2622, P153
   Manadhata PK, 2011, IEEE T SOFTWARE ENG, V37, P371, DOI 10.1109/TSE.2010.60
   Mustafa T., 2014, 73 TZI U BREM TECHN
   Nauman M., 2010, P 5 ACM S INF COMP C, V10, P328, DOI [10.1145/1755688.1755732, DOI 10.1145/1755688.1755732]
   Ongtang M, 2012, SECUR COMMUN NETW, V5, P658, DOI 10.1002/sec.360
   Pistoia M, 2005, LECT NOTES COMPUT SC, V3586, P362
   Pistoia M, 2007, PROC INT CONF SOFTW, P478
   Roesner F., 2011, MSRTR201191
   SALTZER JH, 1975, P IEEE, V63, P1278, DOI 10.1109/PROC.1975.9939
   Shabtai Asaf., 2009, CoRR
   Tarjan R., 1972, SIAM Journal on Computing, V1, P146, DOI 10.1137/0201010
NR 32
TC 56
Z9 65
U1 0
U2 28
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUN
PY 2014
VL 40
IS 6
BP 617
EP 632
DI 10.1109/TSE.2014.2322867
PG 16
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA AJ9KV
UT WOS:000338030200005
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Galster, M
   Weyns, D
   Tofan, D
   Michalik, B
   Avgeriou, P
AF Galster, Matthias
   Weyns, Danny
   Tofan, Dan
   Michalik, Bartosz
   Avgeriou, Paris
TI Variability in Software Systems-A Systematic Literature Review
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Review
DE Variability; systematic review; software engineering
ID PRODUCT LINES
AB Context: Variability (i.e., the ability of software systems or artifacts to be adjusted for different contexts) became a key property of many systems. Objective: We analyze existing research on variability in software systems. We investigate variability handling in major software engineering phases (e.g., requirements engineering, architecting). Method: We performed a systematic literature review. A manual search covered 13 premium software engineering journals and 18 premium conferences, resulting in 15,430 papers searched and 196 papers considered for analysis. To improve reliability and to increase reproducibility, we complemented the manual search with a targeted automated search. Results: Software quality attributes have not received much attention in the context of variability. Variability is studied in all software engineering phases, but testing is underrepresented. Data to motivate the applicability of current approaches are often insufficient; research designs are vaguely described. Conclusions: Based on our findings we propose dimensions of variability in software engineering. This empirically grounded classification provides a step towards a unifying, integrated perspective of variability in software systems, spanning across disparate or loosely coupled research themes in the software engineering community. Finally, we provide recommendations to bridge the gap between research and practice and point to opportunities for future research.
C1 [Galster, Matthias] Univ Canterbury, Dept Comp Sci & Software Engn, Christchurch 8140, New Zealand.
   [Weyns, Danny] Linnaeus Univ, Dept Comp Sci, SE-35195 Vaxjo, Sweden.
   [Tofan, Dan; Avgeriou, Paris] Univ Groningen, Dept Math & Comp Sci, NL-9700 AK Groningen, Netherlands.
C3 University of Canterbury; Linnaeus University; University of Groningen
RP Galster, M (corresponding author), Univ Canterbury, Dept Comp Sci & Software Engn, Private Bag 4800, Christchurch 8140, New Zealand.
EM mgalster@ieee.org; danny.weyns@lnu.se; d.c.tofan@rug.nl;
   bartosz.michalik@gmail.com; paris@cs.rug.nl
RI Weyns, Danny/J-1267-2018
OI Weyns, Danny/0000-0002-1162-0817; Tofan, Dan/0000-0001-9376-4576;
   Avgeriou, Paris/0000-0002-7101-0754
FU Marie Curie CIG [303791]; NWO SaS-LeG [638.000.000.07N07]
FX The authors are grateful to the anonymous reviewers and the TSE editor
   for the thorough feedback on earlier versions of this paper. Their
   comments and suggestions were of great help. This work was partially
   supported by the Marie Curie CIG number 303791 and by NWO SaS-LeG,
   contract no. 638.000.000.07N07.
CR Aiello Marco, 2010, IEEE 34th Annual Computer Software and Applications Conference Workshops (COMPSACW 2010), P245, DOI 10.1109/COMPSACW.2010.50
   Ali MS, 2010, INFORM SOFTWARE TECH, V52, P871, DOI 10.1016/j.infsof.2010.05.003
   Alves V, 2010, INFORM SOFTWARE TECH, V52, P806, DOI 10.1016/j.infsof.2010.03.014
   Andersson J, 2009, LECT NOTES COMPUT SC, V5525, P27, DOI 10.1007/978-3-642-02161-9_2
   [Anonymous], 2007, GUIDELINES PERFORMIN
   [Anonymous], 1990, 610121990 IEEE
   [Anonymous], 2004, TECHNICAL REPORT
   [Anonymous], 2010, VAMOS
   [Anonymous], 2001, 91261 ISO IEC
   Australian Research Council, 2010, RANK OUTL
   Babar MA, 2010, IEEE SOFTWARE, V27, P89, DOI 10.1109/MS.2010.77
   Bachmann F., 2003, PFE 03 PROC 5 INT WO, P66
   Basili V. R., 1994, Encyclopedia of Software Engineering, V1, P528
   Bass L., 2013, SOFTWARE ARCHITECTUR
   Benavides D, 2010, INFORM SYST, V35, P615, DOI 10.1016/j.is.2010.01.001
   Biolchini J., 2005, 67905 RT ES
   Brereton P, 2007, J SYST SOFTWARE, V80, P571, DOI 10.1016/j.jss.2006.07.009
   Chen L., 2009, P 13 INT SOFTWARE PR, P81
   Chen L., 2010, P 14 INT SOFTW PROD, P1
   [陈丽琼 CHEN Li-qiong], 2009, [高分子通报, Polymer Bulletin], P1
   Chen LP, 2011, INFORM SOFTWARE TECH, V53, P344, DOI 10.1016/j.infsof.2010.12.006
   Cheng BHC, 2009, LECT NOTES COMPUT SC, V5525, P1, DOI 10.1007/978-3-642-02161-9_1
   Neto PADS, 2011, INFORM SOFTWARE TECH, V53, P407, DOI 10.1016/j.infsof.2010.12.003
   Dyba Tore, 2007, 2007 First International Symposium on Empirical Software Engineering and Measurement, P225
   Dybå T, 2008, INFORM SOFTWARE TECH, V50, P833, DOI 10.1016/j.infsof.2008.01.006
   Engström E, 2011, INFORM SOFTWARE TECH, V53, P2, DOI 10.1016/j.infsof.2010.05.011
   Etxeberria L, 2008, SPLC 2008: 12TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE, PROCEEDINGS, P243, DOI 10.1109/SPLC.2008.37
   Etxeberria L, 2008, FIFTEENTH IEEE INTERNATIONAL CONFERENCE AND WORKSHOPS ON THE ENGINEERING OF COMPUTER-BASED SYSTEMS, PROCEEDINGS, P255, DOI 10.1109/ECBS.2008.14
   Galster M., 2013, SYSTEMS SOFTWARE VAR, P269
   Galster M., 2013, TECHNICAL REPORT
   Galster M, 2011, 2011 9TH WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE (WICSA), P171, DOI 10.1109/WICSA.2011.30
   Gehlert A., 2009, QUALITY REFERENCE MO
   Gómez-Pérez A, 2001, INT J INTELL SYST, V16, P391, DOI 10.1002/1098-111X(200103)16:3<391::AID-INT1014>3.0.CO;2-2
   Hallsteinsen S, 2008, COMPUTER, V41, P93, DOI 10.1109/MC.2008.123
   Hilliard R., 2010, P 4 EUR C SOFTW ARCH, P312
   Ivarsson M, 2011, EMPIR SOFTW ENG, V16, P365, DOI 10.1007/s10664-010-9146-4
   Jorgensen M, 2007, IEEE T SOFTWARE ENG, V33, P33, DOI 10.1109/TSE.2007.256943
   Kazhamiakin R, 2010, LECT NOTES COMPUT SC, V6500, P117
   Kitchenham B, 2009, P 5 INT C PRED MOD S, P1, DOI DOI 10.1145/1540438.1540444
   Kitchenham B, 2010, INFORM SOFTWARE TECH, V52, P792, DOI 10.1016/j.infsof.2010.03.006
   Kitchenham B, 2009, INT SYMP EMP SOFTWAR, P337, DOI 10.1109/esem.2009.5314238
   Kitchenham B, 2009, INFORM SOFTWARE TECH, V51, P7, DOI 10.1016/j.infsof.2008.09.009
   Kitchenham BA, 2010, EMPIR SOFTW ENG, V15, P618, DOI 10.1007/s10664-010-9134-8
   Kontogogos A., 2009, TECHNICAL REPORT
   Mahdavi-Hezavehi S, 2013, INFORM SOFTWARE TECH, V55, P320, DOI 10.1016/j.infsof.2012.08.010
   Papazoglou MP, 2007, COMPUTER, V40, P38, DOI 10.1109/MC.2007.400
   Pohl K., 2005, SOFTWARE PRODUCT LIN, V10
   Rabiser R, 2010, INFORM SOFTWARE TECH, V52, P324, DOI 10.1016/j.infsof.2009.11.001
   Riaz M., 2010, 14 INT C EV ASS SOFT, P1
   Schmid K, 2004, SCI COMPUT PROGRAM, V53, P259, DOI 10.1016/j.scico.2003.04.002
   Staples M, 2007, J SYST SOFTWARE, V80, P1425, DOI 10.1016/j.jss.2006.09.046
   Sun CA, 2010, J SYST SOFTWARE, V83, P502, DOI 10.1016/j.jss.2009.10.011
   Svahnberg M, 2005, SOFTWARE PRACT EXPER, V35, P705, DOI 10.1002/spe.652
   Turnbaugh M., 2008, P SPIE, P1
   Van Grinsven J., 2003, P SOFTW VAR MAN WORK, P1
   van Gurp J, 2001, WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE, PROCEEDINGS, P45, DOI 10.1109/WICSA.2001.948406
   Weyns D., 2012, 2012 7th International Symposium on Software Engineering for Adaptive and Self-Managing Systems, P89, DOI 10.1109/SEAMS.2012.6224395
   Williams BJ, 2010, INFORM SOFTWARE TECH, V52, P31, DOI 10.1016/j.infsof.2009.07.002
   Zannier C., 2006, 28th International Conference on Software Engineering Proceedings, P341, DOI 10.1145/1134285.1134333
   Zhang H, 2010, 2011 INTERNATIONAL CONFERENCE ON COMPUTERS, COMMUNICATIONS, CONTROL AND AUTOMATION (CCCA 2011), VOL I, P1
NR 60
TC 125
Z9 129
U1 0
U2 40
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAR
PY 2014
VL 40
IS 3
BP 282
EP 306
DI 10.1109/TSE.2013.56
PG 25
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA AF4FH
UT WOS:000334666500005
DA 2024-07-18
ER

PT J
AU Nguyen, BN
   Memon, AM
AF Nguyen, Bao N.
   Memon, Atif M.
TI An <i>Observe</i>-<i>Model</i>-<i>Exercise</i>* Paradigm to Test
   Event-Driven Systems with Undetermined Input Spaces
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Test generation; user interfaces; quality concepts
AB System testing of software applications with a graphical-user interface (GUI) front-end requires that sequences of GUI events, that sample the application's input space, be generated and executed as test cases on the GUI. However, the context-sensitive behavior of the GUI of most of today's non-trivial software applications makes it practically impossible to fully determine the software's input space. Consequently, GUI testers-both automated and manual-working with undetermined input spaces are, in some sense, blindly navigating the GUI, unknowingly missing allowable event sequences, and failing to realize that the GUI implementation may allow the execution of some disallowed sequences. In this paper, we develop a new paradigm for GUI testing, one that we call Observe-Model-Exercise* (OME*) to tackle the challenges of testing context-sensitive GUIs with undetermined input spaces. Starting with an incomplete model of the GUI's input space, a set of coverage elements to test, and test cases, OME* iteratively observes the existence of new events during execution of the test cases, expands the model of the GUI's input space, computes new coverage elements, and obtains new test cases to exercise the new elements. Our experiment with 8 open-source software subjects, more than 500,000 test cases running for almost 1,100 machine-days, shows that OME* is able to expand the test space on average by 464.11 percent; it detected 34 faults that had never been detected before.
C1 [Nguyen, Bao N.; Memon, Atif M.] Univ Maryland, Dept Comp Sci, College Pk, MD 20742 USA.
C3 University System of Maryland; University of Maryland College Park
RP Nguyen, BN (corresponding author), Univ Maryland, Dept Comp Sci, College Pk, MD 20742 USA.
EM baonn@cs.umd.edu; atif@cs.umd.edu
FU National Science Foundation (NSF) [1205501]; Division Of Computer and
   Network Systems; Direct For Computer & Info Scie & Enginr [1205501]
   Funding Source: National Science Foundation
FX This research was partially funded by the National Science Foundation
   (NSF#1205501).
CR Adamoli A, 2011, SOFTWARE QUAL J, V19, P801, DOI 10.1007/s11219-011-9135-x
   [Anonymous], 2009, INTRO JFCUNIT
   [Anonymous], 2009, POUNDER JAVA GUI TES
   [Anonymous], 2011, 1 INT WORKSHOP END T
   Artzi S, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P571, DOI 10.1145/1985793.1985871
   Bach J., 2004, The Testing Practitioner, V2nd, P90
   Baresi Luciano., 2001, Test Oracles
   Bartolini C, 2011, J SYST SOFTWARE, V84, P655, DOI 10.1016/j.jss.2010.10.024
   Belli F, 2006, SOFTW TEST VERIF REL, V16, P3, DOI 10.1002/stvr.335
   Belli F, 2001, 12TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P34, DOI 10.1109/ISSRE.2001.989456
   Bertolini C, 2009, SEFM 2009: SEVENTH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING AND FORMAL METHODS, P115, DOI 10.1109/SEFM.2009.28
   Brooks P. A., 2007, Proceedings of the twenty-second IEEE/ACM international conference on Automated software engineering, P333
   Chang TH, 2010, CHI2010: PROCEEDINGS OF THE 28TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, VOLS 1-4, P1535
   Dallmeier V., 2010, P 19 INT S SOFTWARE, P85, DOI [DOI 10.1145/1831708.1831719, 10.1145/1831708.1831719]
   Dallmeier V., 2006, P 2006 INT WORKSH DY, P17, DOI DOI 10.1145/1138912.1138918
   Dwyer MB, 1997, LECT NOTES COMPUT SC, V1301, P244, DOI 10.1145/267896.267914
   Ganov S, 2009, LECT NOTES COMPUT SC, V5885, P69, DOI 10.1007/978-3-642-10373-5_4
   Huang CY, 2010, J SYST SOFTWARE, V83, P646, DOI 10.1016/j.jss.2009.11.703
   Itkonen J, 2009, INT SYMP EMP SOFTWAR, P495
   Krishnaswami NR, 2011, ACM SIGPLAN NOTICES, V46, P45, DOI 10.1145/2034574.2034782
   Marchetto Alessandro, 2008, 2008 First IEEE International Conference on Software Testing, Verification and Validation (ICST '08), P121, DOI 10.1109/ICST.2008.22
   McMaster S., 2009, P 1 INT WORKSH TESTI
   Mehlitz P., 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P584, DOI 10.1109/ASE.2011.6100131
   Memon A, 2005, J SOFTW MAINT EVOL-R, V17, P27, DOI 10.1002/smr.305
   Memon A, 2003, 10TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P260, DOI 10.1109/WCRE.2003.1287256
   Memon A. M., 2001, Software Engineering Notes, V26, P256, DOI 10.1145/503271.503244
   Memon AM, 2001, IEEE T SOFTWARE ENG, V27, P144, DOI 10.1109/32.908959
   Memon AM, 2010, ADV COMPUT, V80, P121, DOI 10.1016/S0065-2458(10)80003-8
   Mesbah Ali, 2008, 2008 8th International Conference on Web Engineering (ICWE), P122, DOI 10.1109/ICWE.2008.24
   Mesbah A, 2009, PROC INT CONF SOFTW, P210, DOI 10.1109/ICSE.2009.5070522
   Navarro P.L.M., 2010, ADV SOFTWARE ENG, V2010, P5
   Pacheco C, 2007, PROC INT CONF SOFTW, P75
   Pajunen T., 2011, 2011 IEEE Fourth International Conference on Software Testing, Verification and Validation Workshops (ICSTW), P242, DOI 10.1109/ICSTW.2011.39
   Rountev A., 2004, P ACM SIGPLAN SIGSOF, P14
   Ruiz A, 2008, TACI PART 2008:TESTING: ACADEMIC AND INDUSTRIAL CONFERENCE PRACTICE AND RESEARCH TECHNIQUES, PROCEEDINGS, P99, DOI 10.1109/TAIC-PART.2008.11
   Saxena P, 2010, P IEEE S SECUR PRIV, P513, DOI 10.1109/SP.2010.38
   Shehady RK, 1997, DIG PAP INT SYMP FAU, P80, DOI 10.1109/FTCS.1997.614080
   Silva JL, 2008, ELECTRON NOTES THEOR, V208, P77, DOI 10.1016/j.entcs.2008.03.108
   Vieira M., 2006, AST, P9, DOI DOI 10.1145/1138929.1138932
   White L, 2000, 11TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P110, DOI 10.1109/ISSRE.2000.885865
   Whittaker J. A., 2009, Exploratory software testing: tips, tricks, tours, and techniques to guide test design
   Xie Q, 2007, ACM T SOFTW ENG METH, V16, DOI 10.1145/1189748.1189752
   Yuan X, 2010, IEEE T SOFTWARE ENG, V36, P81, DOI 10.1109/TSE.2009.68
   Zhang Sai., 2011, Proceedings of the 2011 International Symposium on Software Testing and Analysis, P353, DOI 10.1145/2001420.2001463
NR 44
TC 17
Z9 24
U1 0
U2 4
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAR
PY 2014
VL 40
IS 3
BP 216
EP 234
DI 10.1109/TSE.2014.2300857
PG 19
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA AF4FH
UT WOS:000334666500001
DA 2024-07-18
ER

PT J
AU Raunak, MS
   Osterweil, LJ
AF Raunak, Mohammad S.
   Osterweil, Leon J.
TI Resource Management for Complex, Dynamic Environments
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Resources management; process modeling; discrete event simulation;
   healthcare processes
AB This paper describes an approach to the specification and management of the agents and resources that are required to support the execution of complex systems and processes. The paper suggests that a resource should be viewed as a provider of a set of capabilities that are needed by a system or process, where that set may vary dynamically over time and with circumstances. This view of resources is defined and then made the basis for the framework of an approach to specifying, managing, and allocating resources in the presence of real-world complexity and dynamism. The ROMEO prototype resource management system is presented as an example of how this framework can be instantiated. Some case studies of the use of ROMEO to support system execution are presented and used to evaluate the framework, the ROMEO prototype, and our view of the nature of resources.
C1 [Raunak, Mohammad S.] Loyola Univ Maryland, Dept Comp Sci, Baltimore, MD 21210 USA.
   [Osterweil, Leon J.] Univ Massachusetts, Dept Comp Sci, Amherst, MA 01003 USA.
C3 Loyola University Maryland; University of Massachusetts System;
   University of Massachusetts Amherst
RP Raunak, MS (corresponding author), Loyola Univ Maryland, Dept Comp Sci, 4501 North Charles St, Baltimore, MD 21210 USA.
EM raunak@loyola.edu; ljo@cs.umass.edu
FU US National Science Foundation [CCR-0427071, CCR-0204321, CCR-0205575]
FX The authors gratefully acknowledge the important contributions made to
   this work by many conversations and discussions with Sandy Wise, who
   made many valuable suggestions about the architecture of ROMEO.
   Guillaume Viguier-Just and Tiffany Chao provided very important support
   for the construction of case studies and other evaluative activities.
   Dr. Philip L. Henneman, MD, was an indispensable source of information
   about the nature of hospital EDs and the processes carried out there.
   Hari Balasubramanian, Barbara Lerner, Bobby Simidchieva, Lori Clarke,
   Matt Marzilli, and George Avrunin provided a great deal of help and
   support through their continuing interaction about this work. This work
   was supported by the US National Science Foundation under Award Nos.
   CCR-0427071, CCR-0204321, and CCR-0205575. The views and conclusions
   contained herein are those of the authors and should not be interpreted
   as necessarily representing the official policies or endorsements,
   either expressed or implied, of The National Science Foundation or the
   US Government.
CR [Anonymous], 1999, WORKFLOW MANAGEMENT
   [Anonymous], 2005, BPEL4WS SPEC VERS 1
   [Anonymous], TECHNICAL REPORT
   Berners-Lee T, 2001, SCI AM, V284, P34, DOI 10.1038/scientificamerican0501-34
   Brasseurl M.L., 1995, P IEEE C COMP SUPP C
   Cass A. G., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, P754, DOI 10.1109/ICSE.2000.870488
   Clarke L., 2006, P 2006 INT C DIG GOV, P356
   Connelly LG, 2004, ACAD EMERG MED, V11, P1177, DOI 10.1197/j.aem.2004.08.021
   Dami S., 1998, Automated Software Engineering, V5, P61, DOI 10.1023/A:1008658325298
   DRAEGER MA, 1992, 1992 WINTER SIMULATION CONFERENCE PROCEEDINGS, P1057, DOI 10.1145/167293.167831
   Du WM, 1999, RIDE-VE '99 - NINTH INTERNATIONAL WORKSHOP ON RESEARCH ISSUES ON DATA ENGINEERING: INFORMATION TECHNOLOGY FOR VIRTUAL ENTERPRISES, PROCEEDINGS, P108, DOI 10.1109/RIDE.1999.758623
   Gruber TR, 1995, INT J HUM-COMPUT ST, V43, P907, DOI 10.1006/ijhc.1995.1081
   HENDLER J., 2000, IEEE INTELL SYST, V15, P67
   Hobbs J.R., 2001, ONTOLOGY RESOURCES
   Katsh E., 2005, P NAT C DIG GOV RES, P99
   Kloppmann M., 2005, WS BPEL EXTENSION PE
   Krahl D, 2003, PROCEEDINGS OF THE 2003 WINTER SIMULATION CONFERENCE, VOLS 1 AND 2, P188, DOI 10.1109/WSC.2003.1261423
   Kulkarni P., 2005, 13th Annual ACM International Conference on Multimedia, P229, DOI 10.1145/1101149.1101191
   Mailler R., 2001, P AAAI FALL S NEG ME
   McCaig L.F., 2006, TECHNICAL REPORT
   McGuinness D. L., 2004, OWL WEB ONTOLOGY LAN, DOI DOI 10.2004-03
   MCGUIRE F, 1994, 1994 WINTER SIMULATION CONFERENCE PROCEEDINGS, P861
   Monch L., 2002, P 14 EUR SIM S
   Muehlen M.ur, 1999, P WORKFL MAN C, P137
   Raunak M.S., 2009, P SOFTW ENG HLTH CAR
   Raunak M.S., 2009, THESIS U MASSACHUSET
   Raunak M.S., 2011, P THEOR MOD SIM APR
   Rombach H.D., 1991, TECHNICAL REPORT
   Rossetti M.D., 1999, P WINT SIM C
   Russell N, 2005, LECT NOTES COMPUT SC, V3520, P216
   Samaha S, 2003, PROCEEDINGS OF THE 2003 WINTER SIMULATION CONFERENCE, VOLS 1 AND 2, P1907, DOI 10.1109/WSC.2003.1261652
   Sellers DW, 1996, PROCEEDINGS OF THE TWENTY-EIGHTH SOUTHEASTERN SYMPOSIUM ON SYSTEM THEORY, P396, DOI 10.1109/SSST.1996.493536
   Simidchieva BI, 2009, LECT NOTES COMPUT SC, V5543, P366, DOI 10.1007/978-3-642-01680-6_33
   Smith S., 2003, NEXT 10 YEARS SCHEDU, P116
   Srivastava B., 2000, ARTIF INTELL, V131, P73
   Sutton S. M.  Jr., 1995, ACM Transactions on Software Engineering and Methodology, V4, P221, DOI 10.1145/214013.214017
   Urgaonkar H, 2002, USENIX ASSOCIATION PROCEEDINGS OF THE FIFTH SYMPOSIUM ON OPERATING SYSTEMS DESIGN AND IMPLEMENTATION, P239, DOI 10.1145/1060289.1060312
   Wise A., 2006, 2006051 U MASS AMH
   Xiao J., 2010, Proceedings of the 1st ACM International Health Informatics Symposium, P590
   Xiao JC, 2010, LECT NOTES COMPUT SC, V6013, P107, DOI 10.1007/978-3-642-12029-9_8
NR 40
TC 19
Z9 21
U1 0
U2 15
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAR
PY 2013
VL 39
IS 3
BP 384
EP 402
DI 10.1109/TSE.2012.31
PG 19
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 098CA
UT WOS:000315520700006
DA 2024-07-18
ER

PT J
AU White, J
   Doughtery, B
   Schmidt, DC
AF White, Jules
   Doughtery, Brian
   Schmidt, Douglas C.
TI ASCENT: An Algorithmic Technique for Designing Hardware and Software in
   Tandem
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Algorithms; computer aided software engineering; optimization methods;
   distributed computing
ID HEURISTIC-SEARCH; PROJECT
AB Search-based software engineering is an emerging paradigm that uses automated search algorithms to help designers iteratively find solutions to complicated design problems. For example, when designing a climate monitoring satellite, designers may want to use the minimal amount of computing hardware to reduce weight and cost while supporting the image processing algorithms running onboard. A key problem in these situations is that the hardware and software designs are locked in a tightly coupled cost-constrained producer/consumer relationship that makes it hard to find a good hardware/software design configuration. Search-based software engineering can be used to apply algorithmic techniques to automate the search for hardware/software designs that maximize the image processing accuracy while respecting cost constraints. This paper provides the following contributions to research on search-based software engineering: 1) We show how a cost-constrained producer/consumer problem can be modeled as a set of two multidimensional multiple-choice knapsack problems (MMKPs), 2) we present a polynomial-time search-based software engineering technique, called the Allocation-baSed Configuration Exploration Technique (ASCENT), for finding near optimal hardware/software codesign solutions, and 3) we present empirical results showing that ASCENT's solutions average over 95 percent of the optimal solution's value.
C1 [White, Jules] Virginia Tech, Dept Elect & Comp Engn, Blacksburg, VA 24060 USA.
   [Doughtery, Brian; Schmidt, Douglas C.] Vanderbilt Univ, Inst Software Integrated Syst, Nashville, TN 37235 USA.
C3 Virginia Polytechnic Institute & State University; Vanderbilt University
RP White, J (corresponding author), Virginia Tech, Dept Elect & Comp Engn, 302 Whitemore Hall, Blacksburg, VA 24060 USA.
EM julesw@vt.edu; briand@dre.vanderbilt.edu; schmidt@dre.vanderbilt.edu
FU Division Of Computer and Network Systems; Direct For Computer & Info
   Scie & Enginr [0915976] Funding Source: National Science Foundation
CR Alba E, 2007, INFORM SCIENCES, V177, P2380, DOI 10.1016/j.ins.2006.12.020
   Antoniol G, 2004, 10TH INTERNATIONAL SYMPOSIUM ON SOFTWARE METRICS, PROCEEDINGS, P172, DOI 10.1109/METRIC.2004.1357901
   Barreto A, 2008, COMPUT OPER RES, V35, P3073, DOI 10.1016/j.cor.2007.01.010
   Chung L., 2000, Non-functional Requirements in Software Engineering
   Clark JA, 2001, INFORM SOFTWARE TECH, V43, P891, DOI 10.1016/S0950-5849(01)00195-1
   Cormen T.H., 1990, Introduction to Algorithms
   Curtis S, 1999, MAGNETOSPHERIC MULTI
   Deb K, 2000, COMPUT METHOD APPL M, V186, P311, DOI 10.1016/S0045-7825(99)00389-8
   Dick RP, 1998, IEEE T COMPUT AID D, V17, P920, DOI 10.1109/43.728914
   Gebotys C.H., 1992, OPTIMAL VLSI ARCHITE
   Gosling J., 1995, Introductory statistics
   Harman M, 2001, INFORM SOFTWARE TECH, V43, P833, DOI 10.1016/S0950-5849(01)00189-6
   Harman M, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P342, DOI 10.1109/FOSE.2007.29
   Huber P., 1981, Robust Statistics
   Ibaraki T., 1978, Journal of the Operations Research Society of Japan, V21, P59
   IBARRA OH, 1975, J ACM, V22, P463, DOI 10.1145/321906.321909
   Islam M, 2005, IEEE PACIF, P157
   Kim M., 2006, CODES ISSS 06, P16
   McMinn P, 2004, SOFTW TEST VERIF REL, V14, P105, DOI 10.1002/stvr.294
   Saha D, 1997, TENTH INTERNATIONAL CONFERENCE ON VLSI DESIGN, PROCEEDINGS, P155, DOI 10.1109/ICVD.1997.568069
   Tong QL, 2008, SEC 2008: PROCEEDINGS OF THE FIFTH IEEE INTERNATIONAL SYMPOSIUM ON EMBEDDED COMPUTING, P43, DOI 10.1109/SEC.2008.23
   TOYODA Y, 1975, MANAGE SCI B-APPL, V21, P1417, DOI 10.1287/mnsc.21.12.1417
   VAHID F, 1994, EURO-DAC '94 WITH EURO-VHDL 94, PROCEEDINGS, P214
   Van Hentenryck P., 1994, CONSTRAINT BASED REA
   Wiangtong T, 2002, DES AUTOM EMBED SYST, V6, P425, DOI 10.1023/A:1016567828852
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
NR 34
TC 7
Z9 10
U1 0
U2 4
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD NOV-DEC
PY 2010
VL 36
IS 6
BP 838
EP 851
DI 10.1109/TSE.2010.77
PG 14
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 682SU
UT WOS:000284424100008
DA 2024-07-18
ER

PT J
AU Baah, GK
   Podgurski, A
   Harrold, MJ
AF Baah, George K.
   Podgurski, Andy
   Harrold, Mary Jean
TI The Probabilistic Program Dependence Graph and Its Application to Fault
   Diagnosis
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article; Proceedings Paper
CT International Symposium on Software Testing and Analysis
CY JUL 20-24, 2008
CL Seattle, WA
DE Probabilistic graphical models; machine learning; fault diagnosis;
   program analysis
AB This paper presents an innovative model of a program's internal behavior over a set of test inputs, called the probabilistic program dependence graph (PPDG), which facilitates probabilistic analysis and reasoning about uncertain program behavior, particularly that associated with faults. The PPDG construction augments the structural dependences represented by a program dependence graph with estimates of statistical dependences between node states, which are computed from the test set. The PPDG is based on the established framework of probabilistic graphical models, which are used widely in a variety of applications. This paper presents algorithms for constructing PPDGs and applying them to fault diagnosis. The paper also presents preliminary evidence indicating that a PPDG-based fault localization technique compares favorably with existing techniques. The paper also presents evidence indicating that PPDGs can be useful for fault comprehension.
C1 [Baah, George K.; Harrold, Mary Jean] Georgia Inst Technol, Coll Comp, Atlanta, GA 30332 USA.
   [Podgurski, Andy] Case Western Reserve Univ, Dept Elect Engn & Comp Sci, Cleveland, OH 44106 USA.
C3 University System of Georgia; Georgia Institute of Technology;
   University System of Ohio; Case Western Reserve University
RP Baah, GK (corresponding author), Georgia Inst Technol, Coll Comp, 266 Ferst Dr, Atlanta, GA 30332 USA.
EM baah@cc.gatech.edu; andy@eecs.case.edu; harrold@cc.gatech.edu
CR Alur R, 2005, ACM SIGPLAN NOTICES, V40, P98, DOI 10.1145/1047659.1040314
   Ammons G, 2002, ACM SIGPLAN NOTICES, V37, P4, DOI 10.1145/565816.503275
   Bates S., 1993, Conference Record of the Twentieth Annual ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages, P384, DOI 10.1145/158511.158694
   BOWRING JF, 2004, P INT S SOFTW TEST A, P195
   BURNELL L, 1995, COMMUN ACM, V38, P31, DOI 10.1145/203330.203338
   Cleve H, 2005, PROC INT CONF SOFTW, P342
   Do HS, 2005, EMPIR SOFTW ENG, V10, P405, DOI 10.1007/s10664-005-3861-2
   FERRANTE J, 1987, ACM T PROGR LANG SYS, V9, P319, DOI 10.1145/24039.24041
   Galán SF, 2001, LECT NOTES ARTIF INT, V2101, P207
   GALLAGHER KB, 1991, IEEE T SOFTWARE ENG, V17, P751, DOI 10.1109/32.83912
   HARAN M, 2005, P 10 EUR SOFTW ENG C, P146
   Heckerman D, 2001, J MACH LEARN RES, V1, P49, DOI 10.1162/153244301753344614
   HUTCHINS M, 1994, PROC INT CONF SOFTW, P191, DOI 10.1109/ICSE.1994.296778
   Jiang Lingxiao., 2007, International Conference on Automated Software Engineering, P184
   Jones JA, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P467, DOI 10.1109/ICSE.2002.1007991
   Jones JA, 2005, P 20 IEEE ACM INT C, P273
   LASKI JW, 1983, IEEE T SOFTWARE ENG, V9, P347, DOI 10.1109/TSE.1983.236871
   LIBLIT B, 2005, P 2005 ACM SIGPLAN C, P15, DOI DOI 10.1145/1065010.1065014
   Liu C., 2005, P EUR SOFTW ENG C HE, V30, P286
   Masri Wes., 2006, Proceedings of the 2006 International Workshop on Dynamic Systems Analysis, WODA'06, P73
   Murphy Kevin Patrick, 2002, Dynamic bayesian networks: representation, inference and learning
   Neapolitan R., 2003, Learning Bayesian networks, P543
   Necula GC, 2002, LECT NOTES COMPUT SC, V2304, P213
   Podgurski A, 2003, PROC INT CONF SOFTW, P465, DOI 10.1109/ICSE.2003.1201224
   PODGURSKI A, 1990, IEEE T SOFTWARE ENG, V16, P965, DOI 10.1109/32.58784
   Renieris M, 2003, 18TH IEEE INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P30, DOI 10.1109/ASE.2003.1240292
   Thrun S., 2002, EXPLORING ARTIFICIAL, P1, DOI DOI 10.5555/779343.779345
   Weimer W, 2005, LECT NOTES COMPUT SC, V3440, P461
   Weiser Mark., 1981, Proceedings of the 5th International Conference on Software Engineering, P439
   Yu YB, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P201, DOI 10.1145/1368088.1368116
   Zhang X, 2006, ACM SIGPLAN NOTICES, V41, P169, DOI 10.1145/1133981.1134002
NR 31
TC 63
Z9 105
U1 0
U2 20
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUL-AUG
PY 2010
VL 36
IS 4
BP 528
EP 545
DI 10.1109/TSE.2009.87
PG 18
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Engineering
GA 631LE
UT WOS:000280347600006
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Atkinson, C
   Gutheil, M
   Kennel, B
AF Atkinson, Colin
   Gutheil, Matthias
   Kennel, Bastian
TI A Flexible Infrastructure for Multilevel Language Engineering
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Language engineering; metamodeling; multilevel modeling
ID INFORMATION-SYSTEMS
AB Although domain-specific modeling tools have come a long way since the modern era of model-driven development started in the early 1990s and now offer an impressive range of features, there is still significant room for enhancing the flexibility they offer to end users and for combining the advantages of domain-specific and general-purpose languages. To do this, however, it is necessary to enhance the way in which the current generation of tools view metamodeling and support the representation of the multiple, "ontological" classification levels that often exist in subject domains. State-of-the-art tools essentially allow users to describe the abstract and concrete syntaxes of a language in the form of metamodels and to make statements in that language in the form of models. These statements typically convey information in terms of types and instances in the domain (e.g., the classes and objects of UML), but not in terms of types of types (i.e., domain metaclasses), and types of types of types, and so on, across multiple classification levels. In essence, therefore, while they provide rich support for "linguistic" metamodeling, the current generation of tools provides little if any built-in support for modeling "ontological" classification across more than one type/instance level in the subject domain. In this paper, we describe a prototype implementation of a new kind of modeling infrastructure that, by providing built-in support for multiple ontological as well as linguistic classification levels, offers various advantages over existing language engineering approaches and tools. These include the ability to view a single model from the perspective of both a general-purpose and a domain-specific modeling language, the ability to define constraints across multiple ontological classification levels, and the ability to tie the rendering of model elements to ontological as well as linguistic types over multiple classification levels. After first outlining the key conceptual ingredients of this new infrastructure and presenting the main elements of our current realization, we show these benefits through two small examples.
C1 [Atkinson, Colin; Kennel, Bastian] Univ Mannheim, Inst Comp Sci, D-68131 Mannheim, Germany.
   [Gutheil, Matthias] Itemis AG, D-53111 Bonn, Germany.
C3 University of Mannheim
RP Atkinson, C (corresponding author), Univ Mannheim, Inst Comp Sci, A 5,6 Bebaudeteil B, D-68131 Mannheim, Germany.
EM atkinson@informatik.uni-mannheim.de; matthias.gutheil@itemis.de;
   bastian.kennel@informatik.uni-mannheim.de
OI Atkinson, Colin/0000-0002-3164-5595
CR Atkinson C., 2002, ACM Transactions on Modeling and Computer Simulation, V12, P290, DOI 10.1145/643120.643123
   ATKINSON C, 1997, P 1 INT WORKSH ENT D
   ATKINSON C, 2001, P 4 INT C UN MOD LAN
   ATKINSON C, 2005, P 8 INT C MOD DRIV E
   Atkinson C, 2008, SOFTW SYST MODEL, V7, P345, DOI 10.1007/s10270-007-0061-0
   BEZEVAN J, 2001, P ANN INT C AUT SOFT
   Eker J, 2003, P IEEE, V91, P127, DOI 10.1109/JPROC.2002.805829
   GASEVIC D, 2007, P ACM IEEE 10 INT C
   GEISLER R, 1998, P 3 BCS FACS NO FORM
   GITZEL R, 2006, P 10 IASTED INT C SO
   Gonzales-Perez C., 2008, METAMODELLING SOFTWA
   Gonzalez-Perez C., 2006, Software and Systems Modeling, V5, P72
   GOOGLLA M, 2005, P MOD DRIV ENG LANG
   GREENFIELD J, 2004, SOFTWARE FACTORIES A
   Gutheil M., 2008, P 11 INT C MOD DRIV
   Hevner AR, 2004, MIS QUART, V28, P75, DOI 10.2307/25148625
   Jarke M., 1995, Journal of Intelligent Information Systems: Integrating Artificial Intelligence and Database Technologies, V4, P167, DOI 10.1007/BF00961873
   JOHNSON R, 1997, PATTERN LANGUAGES PR, V3
   KIKO K, 2005, THESIS U MANNHEIM
   KUHNE T, 2007, P ACM SIGPLAN INT C
   KUHNE T, 2004, P MOD 04 MAR
   Lédeczi A, 2001, COMPUTER, V34, P44, DOI 10.1109/2.963443
   *MOF, 2006, FORMAL060101 MOF OMG
   MYLOPOULOS J, 1990, ACM T INFORM SYST, V8, P325, DOI 10.1145/102675.102676
   ODELL JJ, 1994, J OBJECT-ORIENT PROG, V7, P8
   *OMG UML, 2007, FORMAL20071103 OMG U
   *OMG UML, 2007, FORMAL20071101 OMG U
   PIROTTE A, 1994, P 20 INT C VER LARG
   RIEHLE D, 2001, P C OBJ OR PROGR SYS
   Tolvanen J., 2004, P 19 ANN ACM SIGPLAN
   *UML, 2003, PTC031014 UML
   2008, P 8 OOPSLA WORKSH DO
   2008, P 1 INT C SOFTW LANG
NR 33
TC 48
Z9 50
U1 2
U2 8
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD NOV-DEC
PY 2009
VL 35
IS 6
BP 742
EP 755
DI 10.1109/TSE.2009.31
PG 14
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 524VP
UT WOS:000272172800002
DA 2024-07-18
ER

PT J
AU Liu, C
   Zhang, XY
   Han, JW
AF Liu, Chao
   Zhang, Xiangyu
   Han, Jiawei
TI A Systematic Study of Failure Proximity
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Failure analysis; failure indexing; failure proximity; fault
   localization; debugging aids; statistical debugging; software
   maintenance
ID SOFTWARE; SUPPORT
AB Software end users are the best testers, who keep revealing bugs in software that has undergone rigorous in-house testing. In order to leverage their testing efforts, failure reporting components have been widely deployed in released software: The Microsoft Dr.Watson System [1] and the Mozilla Quality Feedback Agent [2] are the two most typical examples. Many utilities of the collected failure data depend on an effective failure indexing technique, which, in the optimal case, would index all failures caused by the same bug together. Unfortunately, the problem of failure proximity, which underpins the effectiveness of an indexing technique, has not been systematically studied. This paper presents the first systematic study of failure proximity. A failure proximity consists of two components: a fingerprinting function that extracts signatures from failures and a distance function that calculates (from the extracted signatures) the likelihood of two failures being due to the same bug. By considering different instantiations of the two functions, we study an array of six failure proximities (two of them are new) in this paper. These proximities range from the simplest approach which checks failure points to the most sophisticated approach which utilizes fault localization algorithms to extract failure signatures. Besides presenting technical details of each proximity, we also study the properties of each proximity and trade-offs between proximities. Altogether these deliver a systematic view of failure proximity. For fair comparison, this study proposes the first set of evaluation metrics that objectively quantifies the effectiveness of different failure proximities. We carry out three case studies of the six proximities on three mid-sized programs (namely, flex, grep, and gzip) and evaluate their effectiveness using the proposed metrics. The experimental result clearly validates our identified properties and trade-offs. In summary, this study not only presents a systematic study of six failure proximities, the problem formulation, the proposed metrics, and the experimental result, but would also help guide further investigation in the future.
C1 [Liu, Chao] Microsoft Res, Redmond, WA 98052 USA.
   [Zhang, Xiangyu] Purdue Univ, Dept Comp Sci, W Lafayette, IN 47907 USA.
   [Han, Jiawei] Univ Illinois, Dept Comp Sci, Urbana, IL 61801 USA.
C3 Microsoft; Purdue University System; Purdue University; University of
   Illinois System; University of Illinois Urbana-Champaign
RP Liu, C (corresponding author), Microsoft Res, 1 Microsoft Way, Redmond, WA 98052 USA.
EM chaoliu@microsoft.com; xyzhang@cs.purdue.edu; hanj@cs.uiuc.edu
RI Zhang, Xiangyu/H-9255-2013
OI Zhang, Xiangyu/0000-0003-0876-6783
FU US National Science Foundation [ITR CCR-0325603, IIS-08-42769,
   BDI-05-15813, CNS-0708464, CNS-0720516]
FX This work was supported in part by the US National Science Foundation
   under Grants ITR CCR-0325603, IIS-08-42769, BDI-05-15813, CNS-0708464,
   and CNS-0720516. Any opinions, findings, and conclusions or
   recommendations expressed here are those of the authors and do not
   necessarily reflect the views of the funding agencies.
CR Agrawal H., 1993, Proceedings. Conference on Software Maintenance 1993. CSM-93 (Cat. No.93CH3360-5), P348, DOI 10.1109/ICSM.1993.366927
   Agrawal H., 1990, P ACM SIGPLAN C PROG
   Andrzejewski D, 2007, LECT NOTES ARTIF INT, V4701, P6
   [Anonymous], 2004, Software Engineering and Knowledge Engineering
   [Anonymous], 2006, P 28 INT C SOFTW ENG
   [Anonymous], P 18 INT C AUT SOFTW
   Anvik John, 2005, P 2005 OOPSLA WORKSH, P35
   Anvik John, 2006, P 28 INT C SOFTWARE, P361, DOI DOI 10.1145/1134285.1134336
   BEKKER S, 2002, ENT NEWS ONLINE
   Berkhin P., 2002, SURVEY CLUSTERING DA
   Black P.E., 2006, Dictionary of Algorithms and Data Structures
   Borg I., 1996, Modern Multidimensional Scaling: Theory and Applications (Springer Series in Statistics)
   BOWRING JF, 2004, P INT S SOFTW TEST A, P195
   *BUGSENTRY, 2007, IT COLL
   Clause J, 2007, PROC INT CONF SOFTW, P261
   Cleve H, 2005, PROC INT CONF SOFTW, P342
   Cormen T.H., 1989, Introduction to Algorithms
   Dickinson W, 2001, PROC INT CONF SOFTW, P339, DOI 10.1109/ICSE.2001.919107
   Dickinson W., 2001, ESEC FSE 01, P246, DOI DOI 10.1145/503209.503243
   Do HS, 2005, EMPIR SOFTW ENG, V10, P405, DOI 10.1007/s10664-005-3861-2
   FORSTER K, 2004, WINDOWS IT PRO
   FORSTER K, 2005, WINDOWS IT PRO
   FRANCIS P, 2004, P 15 IEEE INT S SOFT
   GUPTA N, 2005, P 20 IEEE ACM INT C, P263
   HARAN M, 2005, P 10 EUR SOFTW ENG C, P146
   Haran M, 2007, IEEE T SOFTWARE ENG, V33, P287, DOI 10.1109/TSE.2007.1004
   Hastings Reed., 1992, WINTER USENIX C, P125
   Hofmann T, 1997, IEEE T PATTERN ANAL, V19, P1, DOI 10.1109/34.566806
   Jain AK, 1999, ACM COMPUT SURV, V31, P264, DOI 10.1145/331499.331504
   JONES J, 2007, P ACM SIGSOFT INT S
   Jones JA, 2005, P 20 IEEE ACM INT C, P273
   Kendall M., 1990, Correlation methods
   Ko AJ, 2006, IEEE SYMPOSIUM ON VISUAL LANGUAGES AND HUMAN-CENTRIC COMPUTING, PROCEEDINGS, P127
   KOREL B, 1988, INFORM PROCESS LETT, V29, P155, DOI 10.1016/0020-0190(88)90054-3
   Kumar V., 2006, Introduction to Data Mining
   LEVANDOWSKY M, 1971, NATURE, V234, P34, DOI 10.1038/234034a0
   Li Zhenmin, 2006, P 1 WORKSHOP ARCHITE
   LIBLIT B, 2005, P ACM SIGPLAN INT C
   LIBLIT B, 2003, P ACM SIGPLAN 2003 C, P141
   LIBLIT BR, 2005, THESIS U CALIFORNIA
   Liu C., 2005, P EUR SOFTW ENG C HE, V30, P286
   Liu C, 2006, IEEE DATA MINING, P382
   Liu C, 2006, IEEE T SOFTWARE ENG, V32, P831, DOI 10.1109/TSE.2006.105
   Liu YK, 2006, IEEE T FUZZY SYST, V14, P295, DOI 10.1109/TFUZZ.2005.864077
   Marden John I., 1996, Analyzing and modeling rank data
   McLaughlin L, 2004, IEEE SOFTWARE, V21, P100, DOI 10.1109/MS.2004.1259245
   Mitchell T. M., 1997, MACHINE LEARNING
   Orso A, 2004, ACM T SOFTW ENG METH, V13, P199, DOI 10.1145/1018210.1018212
   Podgurski A, 2003, PROC INT CONF SOFTW, P465, DOI 10.1109/ICSE.2003.1201224
   RAND WM, 1971, J AM STAT ASSOC, V66, P846, DOI 10.2307/2284239
   RENIERIS E, 2005, THESIS BROWN U PROVI
   Runeson P, 2007, PROC INT CONF SOFTW, P499
   SEWARD J, 2008, VALGRIND OPEN SOURCE
   ZELLER A, 2002, P ACM 10 INT S FDN S
   Zhang X, 2004, 2004 IEEE INTERNATIONAL CONFERENCE ON CLUSTER COMPUTING, P105
   ZHANG X, 2005, P 6 INT S AUT AN DRI
   Zhang XY, 2007, SOFTWARE PRACT EXPER, V37, P935, DOI 10.1002/spe.795
   Zhang X, 2006, ACM SIGPLAN NOTICES, V41, P169, DOI 10.1145/1133981.1134002
   Zheng Alice X., 2006, INT C MACH LEARN, P1105, DOI DOI 10.1145/1143844.1143983
   2008, USING FOGBUGZ GET CR
   2008, DIABLO IS BETTER LIN
NR 61
TC 23
Z9 33
U1 0
U2 4
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD NOV-DEC
PY 2008
VL 34
IS 6
BP 826
EP 843
DI 10.1109/TSE.2008.66
PG 18
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 376HR
UT WOS:000261175200008
DA 2024-07-18
ER

PT J
AU Juristo, N
   Moreno, AM
   Sanchez-Segura, MI
AF Juristo, Natalia
   Moreno, Ana Maria
   Sanchez-Segura, Maria-Isabel
TI Guidelines for eliciting usability functionalities
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE usability requirements; usability features elicitation; requirements
   elicitation
AB Like any other quality attribute, usability imposes specific constraints on software components. Features that raise the software system's usability have to be considered from the earliest development stages. But, discovering and documenting usability features is likely to be beyond the usability knowledge of most requirements engineers, developers, and users. We propose an approach based on developing specific guidelines that capitalize upon key elements recurrently intervening in the usability features elicitation and specification process. The use of these guidelines provides requirements analysts with a knowledge repository. They can use this repository to ask the right questions and capture precise usability requirements information.
C1 Univ Politecn Madrid, Sch Comp, E-28660 Madrid, Spain.
   Univ Carlos III Madrid, Dept Comp Sci, E-28911 Madrid, Spain.
C3 Universidad Politecnica de Madrid; Universidad Carlos III de Madrid
RP Juristo, N (corresponding author), Univ Politecn Madrid, Sch Comp, Campus Montegancedo s-n, E-28660 Madrid, Spain.
EM natalia@fi.upm.es; ammoreno@fi.upm.es; misanche@inf.ucsm.es
RI Moreno, Ana M./AAC-1166-2020
OI Moreno, Ana M./0000-0001-8397-6794; SANCHEZ-SEGURA,
   MARIA-ISABEL/0000-0002-2339-7851
CR ANDRES A, 2002, USABILITY ATTRIBUTES
   [Anonymous], 1996, Pattern oriented software architecture: a system of patters
   [Anonymous], 2004, Guide to the Software Engineering Body of Knowladge
   [Anonymous], 1999, 13407 ISO
   [Anonymous], 1998, SOFTWARE ENG STANDAR, DOI DOI 10.1109/SESS.1997.596008
   [Anonymous], 1998, 830 IEEE
   [Anonymous], 2000, 91261 ISO
   [Anonymous], 1998, ISO 9241-11
   BARBACCI M, 2003, CMUSEI2003TR016 CARN
   Bass L, 2003, J SYST SOFTWARE, V66, P187, DOI 10.1016/S0164-1212(02)00076-6
   BASS L, 2001, CMUSEI2001TR005 CARN
   BASS L, 2004, P INT C SOFTW ENG TU
   BENSON C, 2007, INTERFACE GUIDELINES
   BERRY DM, 1995, J SYST SOFTWARE, V28, P179, DOI 10.1016/0164-1212(94)00054-Q
   Bias R G, 2005, COST JUSTIFYING USAB
   Boehm B.W., 1978, Characteristics of Software Quality
   BOSCH J, 2003, P INT C SOFTW ENG TU
   CHIRSTEL MG, 1992, CMUSEI92TR012 CARN M
   CHRUSCH M, 2000, INTERACTIONS, P13
   Constantine L.L., 1999, Software for Use: A Practical Guide to the Models and Methods of Usage-Centered Design
   Coram T., 1996, EXPERIENCES PATTERN
   CYSNERIROS LM, 2005, P 13 INT C REQ ENG
   DAVIS GB, 1982, IBM SYST J, V21, P4, DOI 10.1147/sj.211.0004
   Donahue GM, 2001, IEEE SOFTWARE, V18, P31, DOI 10.1109/52.903161
   Dumas J.S., 1999, PRACTICAL GUIDE USAB
   Ebert C, 2005, PROC INT CONF SOFTW, P553
   Folmer E, 2004, J SYST SOFTWARE, V70, P61, DOI 10.1016/S0164-1212(02)00159-0
   Hagge L, 2005, IEEE SOFTWARE, V22, P24, DOI 10.1109/MS.2005.17
   Hix D., 1993, DEVELOPING USER INTE
   HSUEH NL, 2003, P ID CONTR C
   *ISO, 2000, 18529 ISO
   JOKELA T, 2005, HURMAN CENTERED SOFT
   JURISTO N, 2003, P INT C SOFTW ENG WO
   JURISTO N, 2003, TECHNIQUES PATTERNS
   Juristo N, 2007, J SYST SOFTWARE, V80, P1506, DOI 10.1016/j.jss.2007.01.006
   Kazman R., 2003, Human-Computer Interaction Theory and Practice
   KONRAD S, 2002, P IEEE INT C REQ
   KOVITZ B, 2002, P IEEE JOINT INT C R
   LAASKO SA, 2003, USER INTERFACE DESIG
   Lauesen S, 2005, REQUIR ENG, V10, P247, DOI 10.1007/s00766-005-0009-2
   Mayhew D.J., 1999, USABILITY ENG LIFECY
   NIELSEH J, 2003, RETURN INVESTMENT US
   Nielsen J., 1994, Heuristic evaluation
   Perry D. E., 1992, SIGSOFT Software Engineering Notes, V17, P40, DOI 10.1145/141874.141884
   Seffah A, 2004, COMMUN ACM, V47, P71, DOI 10.1145/1035134.1035136
   SHNEIDERMAN B, 1998, DESIGNING USER INTEF
   *STAND GROUP INT I, 2003, CHAOS CHR C 3 0
   Tidwell J, 1999, CASE HCI DESIGN PATT
   Tidwell J., 2010, Designing interfaces: Patterns for effective interaction design
   United Nations Educational Scientific and Cultural Organization (UNESCO), 2018, INT TECHN GUID SEX E
   VANWELIE M, 2007, AMSTERDAM COLLECTION
   WHITENAK BG, 1995, PATTERN LANGUAGES PR
   Wiegers K., 1999, SOFTWARE REQUIREMENT
   2007, QUISTM QUESTIONNAIRE
   2007, USABILITY PATTERN CO
NR 55
TC 75
Z9 83
U1 1
U2 21
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD NOV
PY 2007
VL 33
IS 11
BP 744
EP 758
DI 10.1109/TSE.2007.70741
PG 15
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 214JZ
UT WOS:000249735100002
DA 2024-07-18
ER

PT J
AU Bellon, S
   Koschke, R
   Antoniol, G
   Krinke, J
   Merlo, E
AF Bellon, Stefan
   Koschke, Rainer
   Antoniol, Giuliano
   Krinke, Jens
   Merlo, Ettore
TI Comparison and evaluation of clone detection tools
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE code; duplicated code; software clones
AB Many techniques for detecting duplicated source code (software clones) have been proposed in the past. However, it is not yet clear how these techniques compare in terms of recall and precision as well as space and time requirements. This paper presents an experiment that evaluates six clone detectors based on eight large C and Java programs (altogether almost 850 KLOC). Their clone candidates were evaluated by one of the authors as an independent third party. The selected techniques cover the whole spectrum of the state-of-the-art in clone detection. The techniques work on text, lexical and syntactic information, software metrics, and program dependency graphs.
C1 Axiv GmbH, D-70569 Stuttgart, Germany.
   Univ Bremen, D-28334 Bremen, Germany.
   Ecole Polytech, Dept Genie Informat, Montreal, PQ H3T 1J4, Canada.
   Fernuniv, D-58097 Hagen, Germany.
   Ecole Polytech, Dept Comp Engn, Montreal, PQ H3C 3A7, Canada.
C3 University of Bremen; Universite de Montreal; Polytechnique Montreal;
   Fern University Hagen; Universite de Montreal; Polytechnique Montreal
RP Bellon, S (corresponding author), Axiv GmbH, Nobelstr 15, D-70569 Stuttgart, Germany.
EM bellon@axivion.com; koschke@tzi.de; antoniol@ieee.org; krinke@ieee.org;
   ettore.merlo@polymtl.ca
RI Krinke, Jens/E-9011-2011
OI Krinke, Jens/0000-0003-1009-2861
CR [Anonymous], 1998, P INT C SOFTW MAINT
   [Anonymous], 1991, SOFTWARE-PRACTICE AND EXPERIENCE, DOI DOI 10.1002/SPE.4380210706
   [Anonymous], 1994, P 1994 C CTR ADV STU
   BAILEY J, 2002, P 2 IEEE INT WORKSH, P36
   BAKER BS, 1995, SECOND WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P86, DOI 10.1109/WCRE.1995.514697
   BAKER BS, 1992, COMPUTING SCIENCE AND STATISTICS : VOL 24, P49
   Baker BS, 1996, J COMPUT SYST SCI, V52, P28, DOI 10.1006/jcss.1996.0003
   BELLON S, 2002, THESIS U STUTTGART G
   Bellon S., 2007, Detection of software clones tool comparison experiment
   Bruntink M, 2005, IEEE T SOFTWARE ENG, V31, P804, DOI 10.1109/TSE.2005.114
   Cordy J R., 2004, Proc. LDTA 2004, ACM 4th International Workshop on Language Descriptions, P1
   Di Lucca GA, 2002, P INT COMP SOFTW APP, P481, DOI 10.1109/CMPSAC.2002.1045051
   Ducasse S, 2006, J SOFTW MAINT EVOL-R, V18, P37, DOI 10.1002/smr.317
   DUCASSE S, 1999, P INT C SOFT MAINT
   Gitchell D, 1999, PROCEEDINGS OF THE THIRTIETH SIGCSE TECHNICAL SYMPOSIUM ON COMPUTER SCIENCE EDUCATION, P266, DOI 10.1145/299649.299783
   Higo Y, 2002, LECT NOTES COMPUT SC, V2559, P185
   *JAVA, 2007, JAVA 2 SDK
   Johnson J. H., 1993, Proceedings CASCON '93, P171
   Kamiya T, 2002, IEEE T SOFTWARE ENG, V28, P654, DOI 10.1109/TSE.2002.1019480
   Kapser C, 2005, PROC IEEE INT CONF S, P305
   KARP RM, 1987, IBM J RES DEV, V31, P249, DOI 10.1147/rd.312.0249
   Komondoor R, 2001, LECT NOTES COMPUT SC, V2126, P40
   KONTOGIANNIS K, 1995, SECOND WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P96, DOI 10.1109/WCRE.1995.514698
   KONTOGIANNIS K, 1996, AUTOMAT SOFTW ENG, V3, P79
   KOSCHKE R, 2006, P WORK C REV ENG
   Krinke J, 2001, P 8 WORK C REV ENG W
   Lague B, 1997, INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE, PROCEEDINGS, P314, DOI 10.1109/ICSM.1997.624264
   Lanubile F, 2003, SEVENTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P379, DOI 10.1109/CSMR.2003.1192447
   Leitao AM, 2003, THIRD IEEE INTERNATIONAL WORKSHOP ON SOURCE CODE ANALYSIS AND MANIPULATION - PROCEEDINGS, P183, DOI 10.1109/SCAM.2003.1238044
   Li ZM, 2004, USENIX ASSOCIATION PROCEEDINGS OF THE SIXTH SYMPOSIUM ON OPERATING SYSTEMS DESIGN AND IMPLEMENTATION (OSDE '04), P289
   Marcus A, 2001, 16TH ANNUAL INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2001), PROCEEDINGS, P107, DOI 10.1109/ASE.2001.989796
   MARYRAN J, 1996, P INT C SOFTW MAIN, P244
   MCCREIGHT EM, 1976, J ACM, V23, P262, DOI 10.1145/321941.321946
   Prechelt L., 2000, JPlag: Finding plagiarisms among a set of programs
   Schleimer Saul, 2003, P 2003 ACM SIGMOD IN, P76, DOI [10.1145/872757.872770, DOI 10.1145/872757.872770]
   VANRYSSELBERGHE F, 2004, P INT C AUT SOFTW EN
   Wahler V, 2004, FOURTH IEEE INTERNATIONAL WORKSHOP ON SOURCE CODE ANALYSIS AND MANIPULATION, PROCEEDINGS, P128
   STUTTGART NEURONAL N
NR 38
TC 419
Z9 482
U1 0
U2 8
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD SEP
PY 2007
VL 33
IS 9
BP 577
EP 591
DI 10.1109/TSE.2007.70725
PG 15
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 202EO
UT WOS:000248885000001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Littlewood, B
   Wright, D
AF Littlewood, Bev
   Wright, David
TI The use of multilegged arguments to increase confidence in safety claims
   for software-based systems: A study based on a BBN analysis of an
   idealized example
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE safety claims; safety arguments; software safety; software reliability;
   Bayesian belief networks
ID CONDITIONAL-INDEPENDENCE
AB The work described here concerns the use of so-called multilegged arguments to support dependability claims about software-based systems. The informal justification for the use of multilegged arguments is similar to that used to support the use of multiversion software in pursuit of high reliability or safety. Just as a diverse 1-out-of-2 system might be expected to be more reliable than each of its two component versions, so might a two-legged argument be expected to give greater confidence in the correctness of a dependability claim ( for example, a safety claim) than would either of the argument legs alone. Our intention here is to treat these argument structures formally, in particular, by presenting a formal probabilistic treatment of "confidence," which will be used as a measure of efficacy. This will enable claims for the efficacy of the multilegged approach to be made quantitatively, answering questions such as, " How much extra confidence about a system's safety will I have if I add a verification argument leg to an argument leg based upon statistical testing?" For this initial study, we concentrate on a simplified and idealized example of a safety system in which interest centers upon a claim about the probability of failure on demand. Our approach is to build a " Bayesian Belief Network" (BBN) model of a two-legged argument and manipulate this analytically via parameters that define its node probability tables. The aim here is to obtain greater insight than what is afforded by the more usual BBN treatment, which involves merely numerical manipulation. We show that the addition of a diverse second argument leg can indeed increase confidence in a dependability claim; in a reasonably plausible example, the doubt in the claim is reduced to one-third of the doubt present in the original single leg. However, we also show that there can be some unexpected and counterintuitive subtleties here; for example, an entirely supportive second leg can sometimes undermine an original argument, resulting, overall, in less confidence than what came from this original argument. Our results are neutral on the issue of whether such difficulties will arise in real life - that is, when real experts judge real systems.
C1 City Univ London, Ctr Software Reliabil, London EC1V 0HB, England.
C3 City University London
RP Littlewood, B (corresponding author), City Univ London, Ctr Software Reliabil, Northhampton Sq, London EC1V 0HB, England.
EM b.littlewood@city.ac.uk; d.r.wright@city.ac.uk
CR ANDERSEN SK, 1989, P IJCAI, V2, P1080
   [Anonymous], 2004, OPTIMAL STAT DECISIO
   [Anonymous], 1991, PROBABILISTIC REASON
   [Anonymous], 1974, Handbook of Mathematical Functions
   [Anonymous], 2007, GAP GROUPS ALG PROGR
   Bloomfield R, 2003, 2003 INTERNATIONAL CONFERENCE ON DEPENDABLE SYSTEMS AND NETWORKS, PROCEEDINGS, P25, DOI 10.1109/DSN.2003.1209913
   Bloomfield R, 2002, NUCL ENG INT, V47, P11
   Cowell R., 1999, Statistics for Engineering and Information Science
   DAWID AP, 1979, J ROY STAT SOC B MET, V41, P1
   DAWID AP, 1980, ANN STAT, V8, P598, DOI 10.1214/aos/1176345011
   de Barra G., 1981, Measure Theory and Integration
   ECKHARDT DE, 1985, IEEE T SOFTWARE ENG, V11, P1511, DOI 10.1109/TSE.1985.231895
   KNIGHT JC, 1986, IEEE T SOFTWARE ENG, V12, P96, DOI 10.1109/TSE.1986.6312924
   Lauritzen S. L., 1996, GRAPHICAL MODELS, V17
   LITTLEWOOD B, 1989, IEEE T SOFTWARE ENG, V15, P1596, DOI 10.1109/32.58771
   Littlewood B, 1997, IEEE T SOFTWARE ENG, V23, P673, DOI 10.1109/32.637384
   SHAFER G, 1996, P C BOARD MATH SCI N
   SOICHER LH, 2007, GRAPE SYSTEM COMPUTE
   STUDENY M, 2001, THESIS ACAD SCI CZEC
   *UK CIV AV AUTH, 2001, SW01 CAA
   *UK MIN DEF, 1997, 0055 UK MIN DEF
   Volf M, 1999, INT J APPROX REASON, V20, P209, DOI 10.1016/S0888-613X(99)00003-1
   WERMUTH N, 1990, J ROY STAT SOC B MET, V52, P21
   WRIGHT D, 2003, P 22 INT C COMP SAF, P8
   WRIGHT DR, 2003, ELICITATION VALIDATI
   Yih S, 2001, NUCL ENG INT, V46, P24
NR 26
TC 47
Z9 49
U1 0
U2 7
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAY
PY 2007
VL 33
IS 5
BP 347
EP 365
DI 10.1109/TSE.2007.1002
PG 19
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 151PR
UT WOS:000245303400006
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Arisholm, E
   Gallis, H
   Dybå, T
   Sjoberg, DIK
AF Arisholm, Erik
   Gallis, Hans
   Dyba, Tore
   Sjoberg, Dag I. K.
TI Evaluating pair programming with respect to system complexity and
   programmer expertise
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE empirical software engineering; pair programming; extreme programming;
   design principles; control styles; object-oriented programming; software
   maintainability; quasi-experiment
AB A total of 295 junior, intermediate, and senior professional Java consultants ( 99 individuals and 98 pairs) from 29 international consultancy companies in Norway, Sweden, and the UK were hired for one day to participate in a controlled experiment on pair programming. The subjects used professional Java tools to perform several change tasks on two alternative Java systems with different degrees of complexity. The results of this experiment do not support the hypotheses that pair programming in general reduces the time required to solve the tasks correctly or increases the proportion of correct solutions. On the other hand, there is a significant 84 percent increase in effort to perform the tasks correctly. However, on the more complex system, the pair programmers had a 48 percent increase in the proportion of correct solutions but no significant differences in the time taken to solve the tasks correctly. For the simpler system, there was a 20 percent decrease in time taken but no significant differences in correctness. However, the moderating effect of system complexity depends on the programmer expertise of the subjects. The observed benefits of pair programming in terms of correctness on the complex system apply mainly to juniors, whereas the reductions in duration to perform the tasks correctly on the simple system apply mainly to intermediates and seniors. It is possible that the benefits of pair programming will exceed the results obtained in this experiment for larger, more complex tasks and if the pair programmers have a chance to work together over a longer period of time.
C1 Simula Res Lab, NO-1325 Lysaker, Norway.
   Simula Res Lab, NO-7465 Trondheim, Norway.
   SINTEF Informat & Commun Technol, NO-7465 Trondheim, Norway.
C3 SINTEF
RP Arisholm, E (corresponding author), Simula Res Lab, POB 134, NO-1325 Lysaker, Norway.
EM erika@simula.no; hansga@simula.no; tore.dyba@sintef.no; dagsj@simula.no
CR [Anonymous], 2004, XP Ser
   [Anonymous], 1971, The Psychology of Computer Programming
   [Anonymous], P 33 SIGCSE TECHN S
   [Anonymous], 2002, Pair Programming Illuminated
   Arisholm E, 2004, IEEE T SOFTWARE ENG, V30, P521, DOI 10.1109/TSE.2004.43
   Arisholm E., 2002, Nordic Journal of Computing, V9, P231
   ARISHOLM E, 2003, 20036 SIM RES LAB
   Beck K, 1999, COMPUTER, V32, P70, DOI 10.1109/2.796139
   BOND CF, 1983, PSYCHOL BULL, V94, P265, DOI 10.1037/0033-2909.94.2.265
   Brown R., 2000, Group processes, V2nd
   Burkhardt J.-M., 2002, Empirical Software Engineering, V7, P115, DOI 10.1023/A:1015297914742
   Cao L., 2005, P 38 HAW INT C SYST
   Cockburn A., 2001, EXTREME PROGRAMMING
   COHEN J, 1992, PSYCHOL BULL, V112, P155, DOI 10.1037/0033-2909.112.1.155
   Cohen J., 1988, STAT POWER ANAL BEHA
   Constantine L., 1995, Constantine on Peopleware
   Cook T. D., 1979, QUASIEXPERIMENTATION
   COPLIEN JO, 1995, PATTERN LANGUAGES OF PROGRAM DESIGN, P183
   Dybå T, 2006, INFORM SOFTWARE TECH, V48, P745, DOI 10.1016/j.infsof.2005.08.009
   Flor N.V., 1991, P 4 ANN WORKSH EMP S, P36
   Forsyth D.R., 1999, GROUP DYNAMICS, VThird
   Gallien P, 2003, FLEISCHWIRTSCHAFT, V83, P142
   HAEREM T, 2002, THESIS NORWEGIAN SCH
   HEIBERG S, 2003, P EXTR PROGR AG PROC, P215
   HOLM S, 1979, SCAND J STAT, V6, P65
   KARAU SJ, 1993, J PERS SOC PSYCHOL, V65, P681, DOI 10.1037/0022-3514.65.4.681
   Kitchenham BA, 2002, IEEE T SOFTWARE ENG, V28, P721, DOI 10.1109/TSE.2002.1027796
   LUI KM, 2004, P INT C COGN INF ICC
   LUI KM, 2003, P INT C EXTR PROGR A, P225
   Müller MM, 2005, J SYST SOFTWARE, V78, P166, DOI 10.1016/j.jss.2004.12.019
   Müller MM, 2004, EMPIR SOFTW ENG, V9, P335, DOI 10.1023/B:EMSE.0000039883.47173.39
   MYERS RAYMONDH., 2001, Generalized Linear Models with Applications in Engineering and the Sciences
   NAWROCKI J, 2001, P EUR SOFTW CONTR ME
   Nosek JT, 1998, COMMUN ACM, V41, P105, DOI 10.1145/272287.272333
   Padberg F, 2003, NINTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM, PROCEEDINGS, P166, DOI 10.1109/METRIC.2003.1232465
   Shadish W. R., 2002, EXPT QUASI EXPT DESI
   Sheetz SD, 2002, J SYST SOFTWARE, V64, P23, DOI 10.1016/S0164-1212(02)00019-5
   Sjoberg DIK, 2003, LECT NOTES COMPUT SC, V2765, P24
   SOLOWAY E, 1988, COMMUN ACM, V31, P1259, DOI 10.1145/50087.50088
   TUCKMAN BW, 1965, PSYCHOL BULL, V63, P384, DOI 10.1037/h0022100
   VOKAC M, 2004, EMPIRICAL SOFTWARE E, V9
   Williams L, 2000, IEEE SOFTWARE, V17, P19, DOI 10.1109/52.854064
   Williams L, 2004, PROCEEDINGS OF THE AGILE DEVELOPMENT CONFERENCE, P11
   Williams L, 2001, SIGCSE BULL, V33, P327, DOI 10.1145/366413.364614
   Williams L., 2002, COMPUTER SCI ED, V112, P197, DOI [10.1076/csed.12.3.197.8618, DOI 10.1076/CSED.12.3.197.8618]
   WILLIAMS LA, 2000, THESIS U UTAH
   WIRFSBROCK R, 1989, SIGPLAN NOTICES, V24, P71, DOI 10.1145/74878.74885
   WIRFSBROCK R, 1994, REPORT OBJECT ANAL D, V1
   Wu C F J., 2011, Experiments: Planning, Analysis, and Optimization
   ZAJONC RB, 1965, SCIENCE, V149, P269, DOI 10.1126/science.149.3681.269
NR 50
TC 146
Z9 156
U1 1
U2 49
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD FEB
PY 2007
VL 33
IS 2
BP 65
EP 86
DI 10.1109/TSE.2007.17
PG 22
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 120MX
UT WOS:000243090100001
DA 2024-07-18
ER

PT J
AU Duraes, JA
   Madeira, HS
AF Duraes, Joao A.
   Madeira, Henrique S.
TI Emulation of software faults: A field data study and a practical
   approach
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE fault injection; software faults; software reliability
AB The injection of faults has been widely used to evaluate fault tolerance mechanisms and to assess the impact of faults in computer systems. However, the injection of software faults is not as well understood as other classes of faults (e.g., hardware faults). In this paper, we analyze how software faults can be injected (emulated) in a source-code independent manner. We specifically address important emulation requirements such as fault representativeness and emulation accuracy. We start with the analysis of an extensive collection of real software faults. We observed that a large percentage of faults falls into well-defined classes and can be characterized in a very precise way, allowing accurate emulation of software faults through a small set of emulation operators. A new software fault injection technique (G-SWFIT) based on emulation operators derived from the field study is proposed. This technique consists of finding key programming structures at the machine code-level where high-level software faults can be emulated. The fault-emulation accuracy of this technique is shown. This work also includes a study on the key aspects that may impact the technique accuracy. The portability of the technique is also discussed and it is shown that a high degree of portability can be achieved.
C1 Inst Super Engn Coimbra, P-3030199 Coimbra, Portugal.
   Univ Coimbra, Dept Endenharia Informat, P-3030290 Coimbra, Portugal.
C3 Universidade de Coimbra; Universidade de Coimbra
RP Duraes, JA (corresponding author), Inst Super Engn Coimbra, Rua Pedro Nunes Quinta Nora, P-3030199 Coimbra, Portugal.
EM judraes@isec.pt; henrique@dei.uc.pt
RI Durães, João/AAA-6167-2022; Madeira, Henrique/M-9392-2013
OI Durães, João/0000-0002-9697-9991; Madeira, Henrique/0000-0001-8146-4664
CR AIDEMARK J, 2001, P INT C DEP SYST NET
   [Anonymous], 1996, HDB SOFTWARE RELIABI
   [Anonymous], 1997, INT ARCH SOFTW DEV M, V2
   ARLAT J, 1993, IEEE T COMPUT, V42, P913, DOI 10.1109/12.238482
   BIEMAN J, 1996, P 7 IEEE INT S SOFTW
   Blough DM, 1997, DIG PAP INT SYMP FAU, P258, DOI 10.1109/FTCS.1997.614098
   Brown A, 2000, USENIX ASSOCIATION PROCEEDINGS OF THE 2000 USENIX ANNUAL TECHNICAL CONFERENCE, P263
   Budd T. A., 1981, Computer Program Testing. Proceedings of the Summer School on Computer Program Testing, P129
   Carreira J, 1998, IEEE T SOFTWARE ENG, V24, P125, DOI 10.1109/32.666826
   CHAAR JK, 1993, IEEE T SOFTWARE ENG, V19, P1055, DOI 10.1109/32.256853
   CHILLAREGE R, 1992, IEEE T SOFTWARE ENG, V18, P943, DOI 10.1109/32.177364
   CHILLAREGE R, 1995, HDB SOFTWARE RELIABI, pCH9
   Christmansson J, 1996, DIG PAP INT SYMP FAU, P304, DOI 10.1109/FTCS.1996.534615
   CHRISTMANSSON J, 1996, P 7 IEEE INT S SOFTW
   COSTA D, 2001, P 8 ANN IEEE INT C E
   COSTA D, 2000, P DEP SYST NETW C DS
   Daran M., 1996, SIGSOFT Software Engineering Notes, V21, P158, DOI [10.1145/229000.226313, 10.1145/226295.226313]
   DeMillo R. A., 1988, Proceedings of the Second Workshop on Software Testing, Verification, and Analysis (Cat. No.88TH0225-3), P142, DOI 10.1109/WST.1988.5369
   DEMILLO RA, 1978, COMPUTER, V11, P34, DOI 10.1109/C-M.1978.218136
   Duraes J, 2002, 2002 PACIFIC RIM INTERNATIONAL SYMPOSIUM ON DEPENDABLE COMPUTING, PROCEEDINGS, P201, DOI 10.1109/PRDC.2002.1185639
   DURAES J, 2003, P IEEE IFIP INT C DE
   DURAES J, 2002, P 13 IEEE INT S SOFT
   DURAES J, 2004, P C COMP SAF SAFECOM
   DURAES J, 2004, P IEEE INT S DEP SYS
   Fabre J.-C., 1999, Dependable Computing for Critical Applications 7, P25, DOI 10.1109/DCFTS.1999.814288
   GRAY J, 1990, IEEE T RELIAB, V39, P409, DOI 10.1109/24.58719
   HUDAK J, 1993, IEEE T RELIAB, V42, P190, DOI 10.1109/24.229487
   HUDEPOHL JP, 1998, P IEEE 8 INT S SOFTW, P85
   Iyer R. K., 1995, P 25 INT S FAULT TOL, P115
   Kalyanakrishnam M., 1999, Proceedings of the 18th IEEE Symposium on Reliable Distributed Systems, P178, DOI 10.1109/RELDIS.1999.805094
   Kanawati G.A., 1992, 1992 FTCS 22 INT S F, P336
   KANOUN K, 2001, IEEE IFIP INT C DE S
   KAO W, 1994, CRHC9416 U ILL URB C
   KHOSHGOFTAAR T, 1997, P HIGH ASS SYST ENG
   Kirk R.E., 1999, STAT INTRO, V4th
   Koopman P, 1997, SYM REL DIST SYST, P72, DOI 10.1109/RELDIS.1997.632800
   LEE SW, 1995, MOL CELLS, V5, P467
   LIGHTSTONE S, 2003, P 1 IEEE C IND AUT I
   Madeira H, 2000, DSN 2000: INTERNATIONAL CONFERENCE ON DEPENDABLE SYSTEMS AND NETWORKS, PROCEEDINGS, P417, DOI 10.1109/ICDSN.2000.857571
   MUSA J, 1996, SOFTWARE RELIABILITY
   NG W, 1996, P 7 IEEE INT S SOFTW
   NG WT, 1999, P IEEE FAULT TOL COM
   Sullivan M., 1991, 21 INT S FAULT TOLER, P2
   SULLIVAN M, 1992, P 1992 INT S FAULT T, P475
   Tsai TK, 1996, DIG PAP INT SYMP FAU, P314, DOI 10.1109/FTCS.1996.534616
   VIEIRA M, 2003, P 29 INT C VER LARG
   Voas J., 1997, IEEE SOFTWARE, V14
   Voas J.M., 1997, SOFTWARE FAULT INJEC
   YAMADA S, 1984, IEEE T RELIAB, V33, P289, DOI 10.1109/TR.1984.5221826
   Zhu J., 2003, P INT C DEP SYST NET, pB86
NR 50
TC 139
Z9 159
U1 1
U2 10
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD NOV
PY 2006
VL 32
IS 11
BP 849
EP 867
DI 10.1109/TSE.2006.113
PG 19
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 101EE
UT WOS:000241720900001
DA 2024-07-18
ER

PT J
AU Do, H
   Rothermel, G
AF Do, Hyunsook
   Rothermel, Gregg
TI On the use of mutation faults in empirical assessments of test case
   prioritization techniques
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article; Proceedings Paper
CT 21st International Conference on Software Maintenance (ICSM 2005)
CY SEP 26-29, 2005
CL Budapest, HUNGARY
SP IEEE
DE regression testing; test case prioritization; program mutation;
   empirical studies
AB Regression testing is an important activity in the software life cycle, but it can also be very expensive. To reduce the cost of regression testing, software testers may prioritize their test cases so that those which are more important, by some measure, are run earlier in the regression testing process. One potential goal of test case prioritization techniques is to increase a test suite's rate of fault detection ( how quickly, in a run of its test cases, that test suite can detect faults). Previous work has shown that prioritization can improve a test suite's rate of fault detection, but the assessment of prioritization techniques has been limited primarily to hand-seeded faults, largely due to the belief that such faults are more realistic than automatically generated ( mutation) faults. A recent empirical study, however, suggests that mutation faults can be representative of real faults and that the use of hand-seeded faults can be problematic for the validity of empirical results focusing on fault detection. We have therefore designed and performed two controlled experiments assessing the ability of prioritization techniques to improve the rate of fault detection of test case prioritization techniques, measured relative to mutation faults. Our results show that prioritization can be effective relative to the faults considered, and they expose ways in which that effectiveness can vary with characteristics of faults and test suites. More importantly, a comparison of our results with those collected using hand-seeded faults reveals several implications for researchers performing empirical studies of test case prioritization techniques in particular and testing techniques in general.
C1 Univ Nebraska, Dept Comp Sci & Engn, Lincoln, NE 68588 USA.
C3 University of Nebraska System; University of Nebraska Lincoln
RP Do, H (corresponding author), Univ Nebraska, Dept Comp Sci & Engn, Lincoln, NE 68588 USA.
EM dohy@cse.unl.edu; grother@cse.unl.edu
CR Andrews JH, 2005, PROC INT CONF SOFTW, P402, DOI 10.1145/1062455.1062530
   [Anonymous], P 24 INT C SOFTW ENG
   [Anonymous], COMM ACM
   Bieman JM, 2001, 16TH ANNUAL INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2001), PROCEEDINGS, P337, DOI 10.1109/ASE.2001.989824
   Budd T., 1980, THESIS YALE U
   Coe R., 2000, What is an effect size?: A brief introduction
   DEMILLO RA, 1978, COMPUTER, V11, P34, DOI 10.1109/C-M.1978.218136
   Do H, 2006, EMPIR SOFTW ENG, V11, P33, DOI 10.1007/s10664-006-5965-8
   Do HS, 2005, EMPIR SOFTW ENG, V10, P405, DOI 10.1007/s10664-005-3861-2
   Elbaum S, 2003, SOFTW TEST VERIF REL, V13, P65, DOI 10.1002/stvr.263
   Elbaum S, 2002, IEEE T SOFTWARE ENG, V28, P159, DOI 10.1109/32.988497
   Elbaum S, 2001, PROC INT CONF SOFTW, P329, DOI 10.1109/ICSE.2001.919106
   Elbaum S., 2000, Software Engineering Notes, V25, P102, DOI 10.1145/347636.348910
   Elbaum S, 2000, SEVENTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM - METRICS 2001, PROCEEDINGS, P169, DOI 10.1109/METRIC.2001.915525
   Frankl PG, 1997, J SYST SOFTWARE, V38, P235, DOI 10.1016/S0164-1212(96)00154-9
   HAMLET RG, 1977, IEEE T SOFTWARE ENG, V3, P279, DOI 10.1109/TSE.1977.231145
   HUTCHINSON MR, 1994, SPORTS MED, V17, P200, DOI 10.2165/00007256-199417030-00006
   KIM JM, 2000, P 22 INT C SOFTW ENG, P126
   Kim S., 2000, P NETOBJECTDAYS C OB
   Kim SW, 2001, SOFTW TEST VERIF REL, V11, P207, DOI 10.1002/stvr.238
   KINNEER A, 2005, THESIS U NEBRASKA LI
   Leon D, 2003, ISSRE 2003: 14TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P442, DOI 10.1109/ISSRE.2003.1251065
   LINDSEY CS, 2005, JAVATECH INTRO SCI T
   Ma YS, 2002, 13TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P352, DOI 10.1109/ISSRE.2002.1173287
   Murphy C., 1998, STAT POWER ANAL SIMP
   Offutt AJ, 1996, SOFTWARE PRACT EXPER, V26, P165, DOI 10.1002/(SICI)1097-024X(199602)26:2<165::AID-SPE5>3.0.CO;2-K
   OSTRAND TJ, 1988, COMMUN ACM, V31, P676, DOI 10.1145/62959.62964
   Rothermel G, 2001, IEEE T SOFTWARE ENG, V27, P929, DOI 10.1109/32.962562
   Rothermel G, 2004, ACM T SOFTW ENG METH, V13, P277, DOI 10.1145/1027092.1027093
   Rothermel G, 1996, IEEE T SOFTWARE ENG, V22, P529, DOI 10.1109/32.536955
   ROTHERMEL G, 2002, P 24 INT C SOFTW ENG, P230
   Srivastava A., 2002, Software Engineering Notes, V27, P97, DOI 10.1145/566171.566187
   Wang WE, 1997, EIGHTH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P264, DOI 10.1109/ISSRE.1997.630875
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
NR 34
TC 167
Z9 196
U1 0
U2 11
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD SEP
PY 2006
VL 32
IS 9
BP 733
EP 752
PG 20
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Engineering
GA 087WU
UT WOS:000240774300008
DA 2024-07-18
ER

PT J
AU Kelly, D
AF Kelly, Diane
TI A study of design characteristics in evolving software using stability
   as a criterion
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE software evolution; scientific software; maintainability; distance
   metric; software design; stability; software architecture
ID MAINTENANCE; EVOLUTION; METRICS; COMPLEXITY; CODE
AB There are many ideas in software design that are considered good practice. However, research is still needed to validate their contributions to software maintenance. This paper presents a method for examining software systems that have been actively maintained and used over the long term and are potential candidates for yielding lessons about design. The method relies on a criterion of stability and a definition of distance to flag design characteristics that have potentially contributed to long-term maintainability. It is demonstrated by application to an example of long-lived scientific software. The results from this demonstration show that the method can provide insight into the relative importance of individual elements of a set of design characteristics for the long-term evolution of software.
C1 Royal Mil Coll Canada, Dept Math & Comp Sci, Kingston, ON K7K 7B4, Canada.
C3 Royal Military College - Canada
RP Kelly, D (corresponding author), Royal Mil Coll Canada, Dept Math & Comp Sci, POB 17000 Stn Forces, Kingston, ON K7K 7B4, Canada.
EM Kelly-d@rmc.ca
CR AGRESTI WW, 1992, IEEE T SOFTWARE ENG, V18, P988, DOI 10.1109/32.177368
   Alshayeb M, 2005, J SYST SOFTWARE, V74, P269, DOI 10.1016/j.jss.2004.02.002
   [Anonymous], PRINCIPLES DATA MINI
   [Anonymous], ACM SIGSOFT SOFTWARE
   Anquetil N, 1998, PROC INT CONF SOFTW, P84, DOI 10.1109/ICSE.1998.671105
   Antón AI, 2003, IEEE T SOFTWARE ENG, V29, P151, DOI 10.1109/TSE.2003.1178053
   ARNOLD DC, 2000, P IFIP TC2 WG2 5 WOR
   Basili V, 1996, PROC INT CONF SOFTW, P464, DOI 10.1109/ICSE.1996.493441
   Beck K., 2000, EXTREME PROGRAMMING
   BENNETT KH, 2000, ICSE 00, P73
   Boisvert R.F., 2001, The Architecture of Scientific Software
   BROOKS R, 1983, INT J MAN MACH STUD, V18, P543, DOI 10.1016/S0020-7373(83)80031-5
   Card DavidN., 1990, MEASURING SOFTWARE D
   CURTIS B, 1979, IEEE T SOFTWARE ENG, V5, P96, DOI 10.1109/TSE.1979.234165
   Eick SG, 2001, IEEE T SOFTWARE ENG, V27, P1, DOI 10.1109/32.895984
   El Emam K, 2002, IEEE T SOFTWARE ENG, V28, P494, DOI 10.1109/TSE.2002.1000452
   FENTON N, 1994, IEEE T SOFTWARE ENG, V20, P199, DOI 10.1109/32.268921
   Godfrey MW, 2000, PROC IEEE INT CONF S, P131, DOI 10.1109/ICSM.2000.883030
   Graves TL, 2000, IEEE T SOFTWARE ENG, V26, P653, DOI 10.1109/32.859533
   HENRY S, 1981, IEEE T SOFTWARE ENG, V7, P510, DOI 10.1109/TSE.1981.231113
   KAFURA D, 1987, IEEE T SOFTWARE ENG, V13, P335, DOI 10.1109/TSE.1987.233164
   KAPLANSKY I, 1975, SET THEORY METRIC SP
   Kelly D., 2004, THESIS ROYAL MILITAR
   Kemerer CF, 1999, IEEE T SOFTWARE ENG, V25, P493, DOI 10.1109/32.799945
   KREYMAN K, 1999, 368 CRL MCMAST U
   LAKHOTIA A, 1993, J SYST SOFTWARE, V23, P269, DOI 10.1016/0164-1212(93)90101-3
   Lehman M.M., 2000, RULES TOOLS SOFTWARE
   LEHMAN MM, 1976, P 2 INT C SOFTW ENG, P350
   LETOVSKY S, 1986, P 1 WORKSH EMP STUD, P58
   Nakatani T., 2005, Proceedings. 12th Asia-Pacific Software Engineering Conference
   PARNAS DL, 1994, PROC INT CONF SOFTW, P279, DOI 10.1109/ICSE.1994.296790
   PERRY D, 1994, P INT C SOFTW MAINT
   POWELL AL, 1998, 305 YCS U YORK COMP
   Rajlich V., 1994, Proceedings. IEEE Third Workshop on Program Comprehension (Cat. No.94TH06767), P46, DOI 10.1109/WPC.1994.341248
   SHEPPERD M, 1994, J SYST SOFTWARE, V26, P197, DOI 10.1016/0164-1212(94)90011-6
   WEISS SH, 1985, LANCET, V2, P157
   YAU SS, 1980, IEEE T SOFTWARE ENG, V6, P545, DOI 10.1109/TSE.1980.234503
   YAU SS, 1985, IEEE T SOFTWARE ENG, V11, P849, DOI 10.1109/TSE.1985.232544
NR 38
TC 40
Z9 46
U1 0
U2 6
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAY
PY 2006
VL 32
IS 5
BP 315
EP 329
DI 10.1109/TSE.2006.42
PG 15
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 045LB
UT WOS:000237742500003
DA 2024-07-18
ER

PT J
AU Wang, LQ
   Stoller, SD
AF Wang, LQ
   Stoller, SD
TI Runtime analysis of atomicity for multithreaded programs
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE concurrent programming; testing and debugging; Java; data race;
   atomicity
AB Atomicity is a correctness condition for concurrent systems. Informally, atomicity is the property that every concurrent execution of a set of transactions is equivalent to some serial execution of the same transactions. In multithreaded programs, executions of procedures ( or methods) can be regarded as transactions. Correctness in the presence of concurrency typically requires atomicity of these transactions. Tools that automatically detect atomicity violations can uncover subtle errors that are hard to find with traditional debugging and testing techniques. This paper describes two algorithms for runtime detection of atomicity violations and compares their cost and effectiveness. The reduction-based algorithm checks atomicity based on commutativity properties of events in a trace; the block-based algorithm efficiently represents the relevant information about a trace as a set of blocks (i.e., pairs of events plus associated synchronizations) and checks atomicity by comparing each block with other blocks. To improve the efficiency and accuracy of both algorithms, we incorporate a multilockset algorithm for checking data races, dynamic escape analysis, and happen-before analysis. Experiments show that both algorithms are effective in finding atomicity violations. The block-based algorithm is more accurate but more expensive than the reduction-based algorithm.
C1 SUNY Stony Brook, Dept Comp Sci, Stony Brook, NY 11794 USA.
C3 State University of New York (SUNY) System; State University of New York
   (SUNY) Stony Brook
RP SUNY Stony Brook, Dept Comp Sci, Stony Brook, NY 11794 USA.
EM liqiang@cs.sunysb.edu; stoller@cs.sunysb.edu
CR Agarwal R, 2005, P PAR DISTR SYST TES
   [Anonymous], 2000, Programming Language Design and Implementation, DOI [DOI 10.1145/358438.349328, 10.1145/349299.349328]
   [Anonymous], 1987, Concurrency Control and Recovery in Database Systems
   ARTHO C, 2003, P 1 INT WORKSH VER V
   BOYAPATI C, 2001, P 16 ACM C OBJ OR PR
   BOYAPATI C, 2002, P 17 ACM SIGPLAN C O, P211
   Choi J.-D., 2002, PROGRAMMING LANGUAGE, P258
   *DEC MAN SYST GMB, 2002, KOP COMP
   Dwyer MB, 2004, FORM METHOD SYST DES, V25, P199, DOI 10.1023/B:FORM.0000040028.49845.67
   FLANAGAN C, 2004, P ACM INT S SOFTW TE, P221
   FLANAGAN C, 2003, P 2003 ACM SIGPLAN I, P1
   Flanagan C., 2004, P 11 INT SPIN WORKSH
   Flanagan C., 2003, P ACM SIGPLAN C PROG
   FLANAGAN C, 2004, STAT AN S SAS AUG
   FLANAGAN C, 2005, P ACM SIGPLAN INT WO
   Flanagan Cormac., 2004, POPL 04, P256
   Havelund K., 2000, P 7 INT SPIN WORKSH
   HERLIHY MP, 1990, ACM T PROGR LANG SYS, V12, P463, DOI 10.1145/78969.78972
   *JAV GRAND FOR, JAV GRAND MULT BENCH
   LIPTON RJ, 1975, COMMUN ACM, V18, P717, DOI 10.1145/361227.361234
   Mattern Friedemann, 1989, P INT WORKSH PAR DIS, P120
   OCALLAHAN R, 2003, P 9 ACM SIGPLAN S PR, P167
   PAPADIMITRIOU CH, 1979, J ACM, V26, P631, DOI 10.1145/322154.322158
   Pugh W., 1999, Proceedings of the ACM 1999 Java Grande Conference, P89, DOI 10.1145/304065.304106
   ROBBY JH, 2004, P 5 INT C VER MOD CH
   RUF E, 2000, P C PROGR LANG DES I, P208
   Savage S, 1997, ACM T COMPUT SYST, V15, P391, DOI 10.1145/269005.266641
   VONPRAUN C, 2001, P 16 ACM C OBJ OR PR
   VONPRAUN C, 2004, J OBJECT TECHNOLOGY, V3
   WANG L, 2003, P 3 WORKSH RUNT VER
   WANG LQ, 2005, P ACM SIGPLAN 2005 S
NR 31
TC 82
Z9 111
U1 0
U2 5
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD FEB
PY 2006
VL 32
IS 2
BP 93
EP 110
DI 10.1109/TSE.2006.1599419
PG 18
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 012AD
UT WOS:000235309700003
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Bucci, G
   Sassoli, L
   Vicario, E
AF Bucci, G
   Sassoli, L
   Vicario, E
TI Correctness verification and performance analysis of real-time systems
   using stochastic preemptive time Petri nets
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE real-time reactive systems; preemptive scheduling; correctness
   verification; performance and dependability evaluation; discrete time;
   maximal step semantics; confusion; well definedness; stochastic
   preemptive Time Petri nets
ID PROCESS ALGEBRAIC APPROACH
AB Time Petri Nets describe the state of a timed system through a marking and a set of clocks. If clocks take values in a dense domain, state space analysis must rely on equivalence classes. These support verification of logical sequencing and quantitative timing of events, but they are hard to be enriched with a stochastic characterization of nondeterminism necessary for performance and dependability evaluation. Casting clocks into a discrete domain overcomes the limitation, but raises a number of problems deriving from the intertwined effects of concurrency and timing. We present a discrete-time variant of Time Petri Nets, called stochastic preemptive Time Petri Nets, which provides a unified solution for the above problems through the adoption of a maximal step semantics in which the logical location evolves through the concurrent firing of transition sets. We propose an analysis technique, which integrates the enumeration of a succession relation among sets of timed states with the calculus of their probability distribution. This enables a joint approach to the evaluation of performance and dependability indexes as well as to the verification of sequencing and timeliness correctness. Expressive and analysis capabilities of the model are demonstrated with reference to a real-time digital control system.
C1 Univ Florence, Dipartimento Sistemi & Informat, I-50139 Florence, Italy.
C3 University of Florence
RP Univ Florence, Dipartimento Sistemi & Informat, Via S Marta 3, I-50139 Florence, Italy.
EM bucci@dsi.unifi.it; sassoli@dsi.unifi.it; vicario@dsi.unifi.it
RI vicario, enrico/ABG-4344-2020
OI vicario, enrico/0000-0002-4983-4386
CR Alur R., 1992, Real-Time: Theory in Practice
   ALUR R, 1990, P 17 INT C AUT LANG
   AMNELL T, 2002, P 8 INT C TOOLS ALG
   [Anonymous], 1993, NETWORK FLOWS THEORY
   [Anonymous], 2000, Proceedings of the 11th International Conference on Concurrency Theory, CONCUR 00
   Ben-Abdallah H, 1998, REAL-TIME SYST, V15, P189, DOI 10.1023/A:1008047130023
   BENGTSSON J, 1996, HYBRID SYSTEMS, V3
   Benveniste A, 2003, P IEEE, V91, P64, DOI 10.1109/JPROC.2002.805826
   BERRY G, 1992, SCI COMPUT PROGRAM, V19, P87, DOI 10.1016/0167-6423(92)90005-V
   BERTHOMIEU B, 1991, IEEE T SOFTWARE ENG, V17, P259, DOI 10.1109/32.75415
   Berthomieu B., 2004, INT J PRODUCTION RES
   BERTHOMIEU B, 1983, P IFIP C         SEP
   Bobbio A, 1998, J CIRCUIT SYST COMP, V8, P119, DOI 10.1142/S0218126698000067
   BOBBIO A, 1998, P 3 IEEE ANN INT COM
   BOBBIO A, 1997, P 18 INT C APPL THEO
   BOBBIO A, 2001, ELECT NOTES THEORETI, V52
   BRUNI R, 1998, P AS COMP SCI C ASIA, P225
   Bucci G, 2004, IEEE T SOFTWARE ENG, V30, P97, DOI 10.1109/TSE.2004.1265815
   BUCCI G, 1995, IEEE T SOFTWARE ENG, V21, P969, DOI 10.1109/32.489073
   BUCCI G, 2004, REAL-TIME SYS SYMPOS, P187
   BUCCI G, 2003, P 15 EUR C REAL TIM
   BUCCI G, 2004, P 1 INT C QUANT EV S
   BUCCI G, 2003, P 10 INT WORKSH PETR
   BUCHHOLZ P, 2001, SERIES COMPUTER SCI, P31
   Buttazzo G., 1997, HARD REAL TIME COMPU
   Caccamo M., 2002, IEEE T COMPUTERS
   Cervin A, 1999, PROCEEDINGS OF THE 11TH EUROMICRO CONFERENCE ON REAL-TIME SYSTEMS, P4, DOI 10.1109/EMRTS.1999.777444
   Cervin A., 2004, P 10 INT C REAL TIM
   CERVIN A, 2004, MERGING REAL TIME CO
   CHIOLA G, 1993, IEEE T SOFTWARE  FEB
   CIARDO G, 1996, P 4 INT WORKSH MOD A
   CIARDO G, 1995, P 2 WORKSH NUM SOL M
   CIARDO G, 1997, MEASUREMENT MODELING, P103
   CLARKE EM, 1986, ACM T PROGR LANG SYS, V8, P244, DOI 10.1145/5397.5399
   Courcoubetis C, 2000, NATO ADV SCI I F-COM, V170, P183
   DAWS C, 1996, HYBRID SYSTEMS, V3
   De Nicola Rocco., 1990, Proc. of the LITP Spring school on theoretical computer science on Semantics of systems of concurrent processes, P407, DOI [10.1007/3-540-53479-2_17, DOI 10.1007/3-540-53479-2_17]
   FERSMAN E, 2002, TOOLS ALGORITHMS CON
   GOSEVAPOPSTOJAN.K, 2000, PERFORM EVALUATION, P385
   Harel D., 1985, LOGICS MODELS CONCUR
   Horváth A, 2000, LECT NOTES COMPUT SC, V1786, P171
   JAY K, 1991, COMPUTER
   Lee HJ, 2001, T JPN SOC AERONAUT S, V44, P1, DOI 10.2322/tjsass.44.1
   LEE IS, 1994, P IEEE, V82, P158, DOI 10.1109/5.259433
   Lime D, 2004, REAL TIM SYST SYMP P, P187, DOI 10.1109/REAL.2004.9
   MARSAN MA, 1984, ACM T COMPUT SYST, V2, P93, DOI 10.1145/190.191
   MCMANIS J, 1994, P COMP AID VER 6 INT
   MERLIN PM, 1976, IEEE T COMM, V24
   NICOLLIN X, 1992, IEEE T SOFTWARE ENG, V18, P794, DOI 10.1109/32.159837
   SMITH E, 1996, THEORETICAL COMPUTER, V153, P275
   SOKOLSKY O, 1999, ANN SOFTWARE ENG, V7
   STANKOVIC JA, 1990, J REAL TIME SYSTEMS, V2
   Tanenbaum A.S, 2001, Modern Operating Systems
   Teruel E, 2003, IEEE T SOFTWARE ENG, V29, P962, DOI 10.1109/TSE.2003.1245298
   Vardi M.Y., 1985, FOCS'85, P327
   VICARIO E, 2001, IEEE T SOFTWARE  AUG
   WITTENMARK B, 1995, P AM CONTR C
   ZIJAL R, 1994, P INT WORKSH QUAL CO, P123
   ZIMMERMANN A, 2001, P INT PAR DISTR PROC
NR 59
TC 20
Z9 23
U1 0
U2 4
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD NOV
PY 2005
VL 31
IS 11
BP 913
EP 927
DI 10.1109/TSE.2005.122
PG 15
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 989GE
UT WOS:000233660100001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Mitchell, B
AF Mitchell, B
TI Resolving race conditions in asynchronous partial order scenarios
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE requirements analysis; formal methods; distributed programming
AB Scenario-based requirements specifications are the industry norm for defining communication protocols. However, such scenarios often contain race conditions. A race condition occurs when events are specified to occur in a particular order, but in practice, this order cannot be guaranteed. The paper considers UML/MSC scenarios that can be described with standard partial order theoretic asynchronous behavioral semantics. We define these to be partial order scenarios. The paper proves there is a unique minimal generalization of a partial order scenario that is race free. The paper also proves there is a unique minimal race free refinement of the behavioral semantics of a partial order scenario. Unlike the generalization, the refinement cannot be realized in the form of a partial order scenario, although it can always be embedded in one. The paper also proves the results can be generalized to a subclass of iterative scenarios.
C1 Univ Surrey, Dept Comp, Surrey GU2 7XH, England.
C3 University of Surrey
RP Univ Surrey, Dept Comp, Surrey GU2 7XH, England.
EM w.mitchell@surrey.ac.uk
CR Alur R., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, P304, DOI 10.1109/ICSE.2000.870421
   Alur R, 2001, LECT NOTES COMPUT SC, V2076, P797
   Alur R., 1999, P 10 INT C CONC THEO
   [Anonymous], 1988, Principles of software engineering management
   [Anonymous], P 22 INT C SOFTW ENG
   BAKER P, 2002, P 3 SAM WORKSH 2002, P170
   BENABDHALLAH H, 1997, P 3 INT C TOOLS ALG, P259
   BENTEMPS Y, 2003, P INT C APPL CONC SY
   BEYER M, 2003, P 12 AS TEST S
   BONTEMPS Y, 2002, P SCEN STAT MACH MOD
   Chung IS, 1999, INTERNATIONAL SYMPOSIUM ON SOFTWARE ENGINEERING FOR PARALLEL AND DISTRIBUTED SYSTEMS, PROCEEDINGS, P72, DOI 10.1109/PDSE.1999.779740
   Damm W, 2001, FORM METHOD SYST DES, V19, P45, DOI 10.1023/A:1011227529550
   GEHRKE T, 1998, P JOINT INT C FORM D, P3
   GUNTER E, 2001, P INT C TOOLS ALG CO
   HAREL D, 2000, P 5 INT C IMPL APPL
   Hoare CAR., 1985, Communicating Sequential Processes
   HOLZMANN GJ, 1993, Patent No. 5812145
   HOLZMANN GJ, 1996, SOFTWARE CONCEPTS TO, V17
   LEUE S, 1998, P 13 IEEE INT C AUT
   LOHREY M, 2002, P 13 INT C CONC THEO
   LUTZ R, 1993, P 1 ACM SIGSOFT S FD
   Lutz R.R., 1993, 1993 P IEEE INT S RE, P126
   Milner R., 1989, Communication and concurrency
   Mitchell B, 2003, FEATURE INTERACTIONS IN TELECOMMUNICATIONS AND SOFTWARE SYSTEMS VII, P77
   *MSC, 1999, Z 120 11 99 ITU T RE
   Nelson M., 1999, CURING SOFTWARE REQU
   *OMG, 2003, UN MOD LANG UML SUP
   Peled D., 2002, ELECT NOTES THEORETI, V65
   PELED P, 2000, P IFIP INT C FORM DE
   RUDOLPH E, 2000, FORMALE BESCHREIBUNG, P153
   *TEL, 2005, TAU DOC
   Uchitel S, 2004, ACM T SOFTW ENG METH, V13, P37, DOI 10.1145/1005561.1005563
   WHITTLE J, 2003, P 25 INT C SOFTW ENG
   WONG E, 1998, P 9 INT S SOFTW ENG
NR 34
TC 19
Z9 24
U1 0
U2 2
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD SEP
PY 2005
VL 31
IS 9
BP 767
EP 784
DI 10.1109/TSE.2005.104
PG 18
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 964CZ
UT WOS:000231857600004
OA Green Submitted, Green Accepted
DA 2024-07-18
ER

PT J
AU Pendharkar, PC
   Subramanian, GH
   Rodger, JA
AF Pendharkar, PC
   Subramanian, GH
   Rodger, JA
TI A probabilistic model for predicting software development effort
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Bayesian belief networks; software effort estimation; probability theory
ID DETERMINANTS; NETWORKS; RESOURCE
AB Recently, Bayesian probabilistic models have been used for predicting software development effort. One of the reasons for the interest in the use of Bayesian probabilistic models, when compared to traditional point forecast estimation models, is that Bayesian models provide tools for risk estimation and allow decision-makers to combine historical data with subjective expert estimates. In this paper, we use a Bayesian network model and illustrate how a belief updating procedure can be used to incorporate decision-making risks. We develop a causal model from the literature and, using a data set of 33 real-world software projects, we illustrate how decision-making risks can be incorporated in the Bayesian networks. We compare the predictive performance of the Bayesian model with popular nonparametric neural-network and regression tree forecasting models and show that the Bayesian model is a competitive model for forecasting software development effort.
C1 Penn State Univ, Capital Coll, Sch Business Adm, Middletown, PA 17057 USA.
   Indiana Univ Penn, Eberly Coll Business & Informat Technol, Indiana, PA 15705 USA.
C3 Pennsylvania Commonwealth System of Higher Education (PCSHE);
   Pennsylvania State University; Pennsylvania State System of Higher
   Education (PASSHE); Indiana University of Pennsylvania
RP Penn State Univ, Capital Coll, Sch Business Adm, 777 W Harrisburg Pike, Middletown, PA 17057 USA.
EM pxp19@psu.edu; ghs2@psu.edu; jrodger@iup.edu
RI Rodger, James A./C-8313-2019
CR [Anonymous], 1997, Software metrics: A rigorous and practical approach
   [Anonymous], 2014, Software engineering: a practitioner's approach
   Baik J, 2002, IEEE T SOFTWARE ENG, V28, P1009, DOI 10.1109/TSE.2002.1049401
   Banker RD, 1997, MANAGE SCI, V43, P1709, DOI 10.1287/mnsc.43.12.1709
   Bhattacharyya S, 1998, DECISION SCI, V29, P871, DOI 10.1111/j.1540-5915.1998.tb00880.x
   Boehm B., 1995, Annals of Software Engineering, V1, P57, DOI 10.1007/BF02249046
   BOEHM B, 2001, SOFTWARE COST ESTIMA, V2
   Breiman L, 1998, BIOMETRICS, DOI [10.1201/9781315139470, DOI 10.2307/2530946]
   Burgess CJ, 2001, INFORM SOFTWARE TECH, V43, P863, DOI 10.1016/S0950-5849(01)00192-6
   Chen MS, 1996, IEEE T KNOWL DATA EN, V8, P866, DOI 10.1109/69.553155
   CHRYSLER E, 1978, COMMUN ACM, V21, P472, DOI 10.1145/359511.359523
   Chulani S, 1999, IEEE T SOFTWARE ENG, V25, P573, DOI 10.1109/32.799958
   Fenton N, 2004, PROC INT CONF SOFTW, P397, DOI 10.1109/ICSE.2004.1317462
   Fenton N, 2002, IEEE SOFTWARE, V19, P116, DOI 10.1109/MS.2002.1020298
   Fenton NE, 1999, J SYST SOFTWARE, V47, P149, DOI 10.1016/S0164-1212(99)00035-7
   FENTON NE, 2000, FUTURE SOFTWARE ENG, P357
   FIARLEY RE, 1992, P INT C SOFTW ENG, P382
   Gray AR, 1991, P 6 INT SOFTW METR S, P216
   Hastings TE, 2001, IEEE T SOFTWARE ENG, V27, P337, DOI 10.1109/32.917523
   Heckerman D, 1997, DATA MIN KNOWL DISC, V1, P79, DOI 10.1023/A:1009730122752
   Johnson PM, 2000, IEEE SOFTWARE, V17, P51, DOI 10.1109/52.895168
   Jones C, 1996, COMPUTER, V29, P116, DOI 10.1109/MC.1996.485905
   Jorgensen M, 2004, J SYST SOFTWARE, V70, P37, DOI 10.1016/S0164-1212(02)00156-5
   LARANJEIRA LA, 1990, IEEE T SOFTWARE ENG, V16, P510, DOI 10.1109/32.52774
   Mahmood MA, 1996, DECISION SCI, V27, P57, DOI 10.1111/j.1540-5915.1996.tb00843.x
   Moses J, 2000, P INT COMP SOFTW APP, V24, P522, DOI 10.1109/CMPSAC.2000.884776
   Nesi P, 1998, J SYST SOFTWARE, V42, P89, DOI 10.1016/S0164-1212(97)10021-8
   Pearl J., 1988, PROBABILISTIC REASON
   Pendharkar PC, 2004, INFORM MANAGE-AMSTER, V42, P61, DOI 10.1016/j.im.2003.12.004
   Pendharkar PC, 2002, J COMPUT INFORM SYST, V43, P7
   PENDHARKAR PC, 2004, 036 PENNS STAT U SCH
   Qing Hu, 1998, Journal of Management Information Systems, V15, P143
   Saaty TL, 1998, OPER RES, V46, P491, DOI 10.1287/opre.46.4.491
   Stamelos I, 2003, INFORM SOFTWARE TECH, V45, P51, DOI 10.1016/S0950-5849(02)00163-5
   Subramanian G. H., 1996, Journal of Management Information Systems, V12, P143
   Varis O, 1998, ARTIF INTELL, V101, P135, DOI 10.1016/S0004-3702(98)00010-1
   WRIGLEY CD, 1991, MIS QUART, V15, P245, DOI 10.2307/249386
NR 37
TC 112
Z9 130
U1 1
U2 12
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUL
PY 2005
VL 31
IS 7
BP 615
EP 624
DI 10.1109/TSE.2005.75
PG 10
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 951EW
UT WOS:000230912900007
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Tsantalis, N
   Chatzigeorgiou, A
   Stephanides, G
AF Tsantalis, N
   Chatzigeorgiou, A
   Stephanides, G
TI Predicting the probability of change in object-oriented systems
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE object-oriented programming; product metrics; object-oriented design
   methods; quality analysis and evaluation
AB Of all merits of the object-oriented paradigm, flexibility is probably the most important in a world of constantly changing requirements and the most striking difference compared to previous approaches. However, it is rather difficult to quantify this aspect of quality: This paper describes a probabilistic approach to estimate the change proneness of an object-oriented design by evaluating the probability that each class of the system will be affected when new functionality is added or when existing functionality is modified. It is obvious that when a system exhibits a large sensitivity to changes, the corresponding design quality is questionable. The extracted probabilities of change can be used to assist maintenance and to observe the evolution of stability through successive generations and identify a possible "saturation" level beyond which any attempt to improve the design without major refactoring is impossible. The proposed model has been evaluated on two multiversion open source projects. The process has been fully automated by a Java program, while statistical analysis has proved improved correlation between the extracted probabilities and actual changes in each of the classes in comparison to a prediction model that relies simply on past data.
C1 Univ Macedonia, Dept Appl Informat, Thessaloniki 54006, Greece.
C3 University of Macedonia
RP Univ Macedonia, Dept Appl Informat, 156 Egnatia St, Thessaloniki 54006, Greece.
EM nikos@java.uom.gr; achat@uom.gr; steph@uom.gr
RI Tsantalis, Nikolaos/AAR-7845-2020; Chatzigeorgiou,
   Alexandros/AAL-6077-2021
OI Tsantalis, Nikolaos/0000-0003-2508-3845; 
CR Aho A.V., 1995, Foundations of Computer Science
   [Anonymous], 2003, ALAN APT SERIES
   [Anonymous], 1997, Object-oriented software construction
   Arisholm E., 2001, Empirical Software Engineering, V6, P231, DOI 10.1023/A:1011439416657
   Arisholm E, 2004, IEEE T SOFTWARE ENG, V30, P491, DOI 10.1109/TSE.2004.41
   Basili VR, 1996, IEEE T SOFTWARE ENG, V22, P751, DOI 10.1109/32.544352
   Black S, 2001, J SOFTW MAINT EVOL-R, V13, P263, DOI 10.1002/smr.233
   Briand L. C., 1999, Proceedings IEEE International Conference on Software Maintenance - 1999 (ICSM'99). `Software Maintenance for Business Change' (Cat. No.99CB36360), P475, DOI 10.1109/ICSM.1999.792645
   Chaumun MA, 2002, SCI COMPUT PROGRAM, V45, P155, DOI 10.1016/S0167-6423(02)00058-8
   Chen K, 2004, EMPIR SOFTW ENG, V9, P197, DOI 10.1023/B:EMSE.0000027779.70556.d0
   Chen QS, 2001, J CRYST GROWTH, V230, P239, DOI 10.1016/S0022-0248(01)01338-0
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   EDWARDS AL, 1976, INTRO LINEAR REGRESS, P72
   FENTON NE, 1997, SOFTWARE METRICS REG
   Gall H., 1999, Proceedings IEEE International Conference on Software Maintenance - 1999 (ICSM'99). `Software Maintenance for Business Change' (Cat. No.99CB36360), P99, DOI 10.1109/ICSM.1999.792584
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   Ghezzi C., 2003, FUNDAMENTALS SOFTWAR
   GIRBA T, 2004, P INT C SOFTW MAINT
   Haney F.M., 1972, P AFIPS JOINT COMPUT, P173
   Hunt A, 2004, IEEE SOFTWARE, V21, P101, DOI 10.1109/MS.2004.1293081
   Kirsopp C., 1999, Proceedings Sixth International Software Metrics Symposium (Cat. No.PR00403), P230, DOI 10.1109/METRIC.1999.809744
   LI L, 1996, P IEEE INT C SOFTW M
   LI W, 1993, J SYST SOFTWARE, V23, P111, DOI 10.1016/0164-1212(93)90077-B
   Menard S., 1995, APPL LOGISTIC REGRES
   Mens T., 2001, P 4 INT WORKSHOP PRI, P83, DOI [DOI 10.1145/602461.602476, 10.1145/602461.602476]
   Papoulis A., 1965, PROBABILITY RANDOM V
   Parnas D. L., 1978, Structured analysis and design, state of the art report, P237
   Peng CYJ, 2002, J EDUC RES, V96, P3, DOI 10.1080/00220670209598786
   Riel AJ., 1996, Object-Oriented Design Heuristics
   TSANTALIS N, 2004, P 10 INT S SOFTW MET
   Wilkie FG, 2000, J SYST SOFTWARE, V52, P157, DOI 10.1016/S0164-1212(99)00142-9
   Yau S. S., 1978, Proceedings of COMPSAC 78 Computer Software and Applications Conference, P60
NR 32
TC 61
Z9 70
U1 0
U2 4
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUL
PY 2005
VL 31
IS 7
BP 601
EP 614
DI 10.1109/TSE.2005.83
PG 14
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 951EW
UT WOS:000230912900006
DA 2024-07-18
ER

PT J
AU Purushothaman, R
   Perry, DE
AF Purushothaman, R
   Perry, DE
TI Toward understanding the rhetoric of small source code changes
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article; Proceedings Paper
CT Workshop on Mining Software Repositories held in conjunction with the
   27th International Conference on Software Engineering (ICSE)
CY MAY 17, 2005
CL St Louis, MO
DE source code changes; software faults; one-line changes; fault
   probabilities
ID SOFTWARE CHANGES
AB Understanding the impact of software changes has been a challenge since software systems were first developed. With the increasing size and complexity of systems, this problem has become more difficult. There are many ways to identify the impact of changes on the system from the plethora of software artifacts produced during development, maintenance, and evolution. We present the analysis of the software development process using change and defect history data. Specifically, we address the problem of small changes by focusing on the properties of the changes rather than the properties of the code itself. Our study reveals that 1) there is less than 4 percent probability that a one-line change will introduce a fault in the code, 2) nearly 10 percent of all changes made during the maintenance of the software under consideration were one-line changes, 3) nearly 50 percent of the changes were small changes, 4) nearly 40 percent of changes to fix faults resulted in further faults, 5) the phenomena of change differs for additions, deletions, and modifications as well as for the number of lines affected, and 6) deletions of up to 10 lines did not cause faults.
C1 Dell Comp Corp, Server Operating Syst Grp, Round Rock, TX 78682 USA.
   Univ Texas, Dept Elect & Comp Engn, Expt Software Engn Lab, Austin, TX 78712 USA.
C3 University of Texas System; University of Texas Austin
RP Dell Comp Corp, Server Operating Syst Grp, Round Rock, TX 78682 USA.
EM ranjith_purush@dell.com; perry@ece.utexas.edu
CR BASILI VR, 1984, COMMUN ACM, V27, P42, DOI 10.1145/69605.2085
   Brooks Fred, 1975, The Mythical Man-Month
   Burton Swanson E., 1976, Proceedings of International Conference on Software Engineering (ICSE), P492
   CARR DC, 1995, P EUR WORKSH SOFTW P, P119
   *CVS, 2004, CONC VERS SYST
   DUNSMORE HE, 1980, J SYST SOFTWARE, P141
   EICK SG, 1992, IEEE T SOFTWARE ENG, V18, P957, DOI 10.1109/32.177365
   Eickhoff-Shemek J, 2001, ACSMS HEALTH FIT J, V5, P27
   Graves TL, 1998, FIFTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM - METRICS 1998, PROCEEDINGS, P267, DOI 10.1109/METRIC.1998.731253
   Graves TL, 2000, IEEE T SOFTWARE ENG, V26, P653, DOI 10.1109/32.859533
   HASSAN AE, 2003, P WCRE 2003 WORK C R
   Hassan AE, 2005, THESIS U WATERLOO
   Hatton L, 1997, IEEE SOFTWARE, V14, P89, DOI 10.1109/52.582978
   HOLTZMANN GJ, 2002, P 10 ACM SIGSOFT S F, P81
   LEBLANG D, 1994, CONFIGURATION MANAGE
   LEHMAN MM, 1998, P INT C SOFTW MAINT
   Leszak M, 2002, J SYST SOFTWARE, V61, P173, DOI 10.1016/S0164-1212(01)00146-7
   Lin I.-H., 1988, Proceedings of the Conference on Software Maintenance - 1988 (IEEE Cat. No.88CH2615-3), P241, DOI 10.1109/ICSM.1988.10169
   LIPOW M, 1979, J SYST SOFTWARE, P71
   MARTERSTECK KE, 1985, AT&T TECH J, V64, P1305, DOI 10.1002/j.1538-7305.1985.tb00276.x
   Meltzoff J., 1997, Critical thinking about research: Psychology and related fields
   Mockus A, 2000, PROC IEEE INT CONF S, P120, DOI 10.1109/ICSM.2000.883028
   Mockus A, 2000, BELL LABS TECH J, V5, P169, DOI 10.1002/bltj.2229
   Perry D. E., 1987, Proceedings of the Twentieth Hawaii International Conference on System Sciences 1987, P113
   Perry DE, 2001, ACM T SOFTW ENG METH, V10, P308, DOI 10.1145/383876.383878
   PERRY DE, 2001, P NEW VIS SOFTW DES
   PERRY DE, 1998, P INT WORKSH PRINC S
   PERRY DE, 1985, P INT S NEW DIR COMP, P32
   Rochkind M. J., 1975, IEEE Transactions on Software Engineering, VSE-1, P364, DOI 10.1109/TSE.1975.6312866
   ROGERS R, DETERRING HIGH COST
   TUSCANY PA, 1992, P 6 INT C SOFTW ENG, P58
   VOTTA LG, 1995, P 5 EUR SOFTW ENG C, P44
   WEINBERG GM, 1983, INFOSYSTEMS      AUG, P48
   WEISS SH, 1985, LANCET, V2, P157
NR 34
TC 109
Z9 130
U1 1
U2 5
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUN
PY 2005
VL 31
IS 6
BP 511
EP 526
DI 10.1109/TSE.2005.74
PG 16
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Engineering
GA 940AX
UT WOS:000230117200007
DA 2024-07-18
ER

PT J
AU Kitchenham, B
   Mendes, E
AF Kitchenham, B
   Mendes, E
TI Software productivity measurement using multiple size measures
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE software productivity measurement; software cost estimation
AB Productivity measures based on a simple ratio of product size to project effort assume that size can be determined as a single measure. If there are many possible size measures in a data set and no obvious model for aggregating the measures into a single measure, we propose using the expression AdjustedSize/Effort to measure productivity. AdjustedSize is defined as the most appropriate regression-based effort estimation model, where all the size measures selected for inclusion in the estimation model have a regression parameter significantly different from zero (p<0.05). This productivity measurement method ensures that each project has an expected productivity value of one. Values between zero and one indicate lower than expected productivity, values greater than one indicate higher than expected productivity. We discuss the assumptions underlying this productivity measurement method and present an example of its use for Web application projects. We also explain the relationship between effort prediction models and productivity models.
C1 Natl ICT Australia, Alexandria, NSW, Australia.
   Keele Univ, Dept Comp Sci, Keele ST5 1BG, Staffs, England.
   Univ Auckland, Dept Comp Sci, Auckland 1, New Zealand.
C3 NICTA; Keele University; University of Auckland
RP Natl ICT Australia, Locked Bag 9013, Alexandria, NSW, Australia.
EM Barbara.Kitchenham@nicta.com.au; emilia@cs.auckland.ac.nz
RI Mendes, Maria E/B-4207-2015; Kitchenham, Barbara/AAL-4311-2020
OI Kitchenham, Barbara/0000-0002-6134-8460; Mendes,
   Emilia/0000-0003-0449-5322
CR ALBRECHT AJ, 1983, IEEE T SOFTWARE ENG, V9, P639, DOI 10.1109/TSE.1983.235271
   [Anonymous], P EASE
   Arnold M, 1998, PROC INT CONF SOFTW, P490, DOI 10.1109/ICSE.1998.671613
   Boehm BW., 1981, Software Engineering Economics
   Campbell, 2002, EXPT QUASIEXPERIMENT
   Chidamber SR, 1998, IEEE T SOFTWARE ENG, V24, P629, DOI 10.1109/32.707698
   Elbaum S, 2000, SEVENTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM - METRICS 2001, PROCEEDINGS, P169, DOI 10.1109/METRIC.2001.915525
   Halstead M. H., 1977, ELEMENTS SOFTWARE SC
   Hastings TE, 2001, IEEE T SOFTWARE ENG, V27, P337, DOI 10.1109/32.917523
   Hastings TE, 1997, AUSTRALIAN SOFTWARE ENGINEERING CONFERENCE - PROCEEDINGS, P7, DOI 10.1109/ASWEC.1997.623750
   Kitchenham B, 1998, IEEE T SOFTWARE ENG, V24, P278, DOI 10.1109/32.677185
   KITCHENHAM B, 2004, TRSE0401 KEEL U, P1
   Kitchenham B. A., 2001, IEE Proceedings-Software, V148, P81, DOI 10.1049/ip-sen:20010506
   Kitchenham BA, 2004, PROC INT CONF SOFTW, P273
   Kitchenham BA, 2002, INFORM SOFTWARE TECH, V44, P13, DOI 10.1016/S0950-5849(01)00204-X
   KITCHENHAM BA, 2004, SYSTEMATIC REV SOFTW
   Kumbhakar S.C., 2003, Stochastic Frontier Analysis
   MACCORMACK A, 2003, IEEE SOFTWARE    SEP, P78
   MAXWELL K, 2002, SOFTWARE QUALITY I S
   Maxwell KD, 2000, IEEE SOFTWARE, V17, P80, DOI 10.1109/52.820015
   Mendieta E., 2003, PHILOSOPHY, P1
   Morasca S, 2001, P INT COMP SOFTW APP, P317, DOI 10.1109/CMPSAC.2001.960633
   Moser S, 1996, COMPUTER, V29, P45, DOI 10.1109/2.536783
   Myrtveit I., 1999, Proceedings Sixth International Software Metrics Symposium (Cat. No.PR00403), P269, DOI 10.1109/METRIC.1999.809748
   Reifer DJ, 2000, IEEE SOFTWARE, V17, P57, DOI 10.1109/52.895169
   Rosenberg J, 1997, FOURTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM, PROCEEDINGS, P137, DOI 10.1109/METRIC.1997.637174
   Stensrud E, 2003, IEEE T SOFTWARE ENG, V29, P398, DOI 10.1109/TSE.2003.1199070
NR 27
TC 74
Z9 77
U1 0
U2 6
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD DEC
PY 2004
VL 30
IS 12
BP 1023
EP 1035
DI 10.1109/TSE.2004.104
PG 13
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 881RI
UT WOS:000225886200012
DA 2024-07-18
ER

PT J
AU Muccini, H
   Bertolino, A
   Inverardi, P
AF Muccini, H
   Bertolino, A
   Inverardi, P
TI Using software architecture for code testing
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE software engineering; software architectures; testing and debugging;
   testing strategies; tracing
ID SPECIFICATION; SYSTEMS
AB Our research deals with the use of Software Architecture (SA) as a reference model for testing the conformance of an implemented system with respect to its architectural specification. We exploit the specification of SA dynamics to identify useful schemes of interactions between system components and to select test classes corresponding to relevant architectural behaviors. The SA dynamics is modeled by Labeled Transition Systems (LTSs). The approach consists of deriving suitable LTS abstractions called ALTSs. ALTSs offer specific views of SA dynamics by concentrating on relevant features and abstracting away from uninteresting ones. Intuitively, deriving an adequate set of test classes entails deriving a set of paths that appropriately cover the ALTS. Next, a relation between these abstract SA tests and more concrete, executable tests needs to be established so that the architectural tests derived can be refined into code-level tests. In the paper, we use the TRMCS case study to illustrate our hands-on experience. We discuss the insights gained and highlight some issues, problems, and solutions of general interest in architecture-based testing.
C1 Univ Aquila, Dipartimento Informat, I-67100 Laquila, Italy.
   CNR, Ist Sci & Tecnol Informaz A Faedo, Area Ric, I-56100 Pisa, Italy.
C3 University of L'Aquila; Consiglio Nazionale delle Ricerche (CNR);
   Istituto di Scienza e Tecnologie dell'Informazione "Alessandro Faedo"
   (ISTI-CNR)
RP Univ Aquila, Dipartimento Informat, Via Vetoio 1, I-67100 Laquila, Italy.
EM muccini@di.univaq.it; antonia.bertolino@isti.cnr.it;
   inverard@di.univaq.it
RI Bertolino, Antonia/ABD-6837-2020
OI Bertolino, Antonia/0000-0001-8749-1356; Muccini,
   Henry/0000-0001-6365-6515
CR [Anonymous], 2002, P 24 INT C SOFTW ENG
   [Anonymous], 1989, CWI Q.
   [Anonymous], P ACM SIGM S PAR DIS
   [Anonymous], 1999, Concurrency-state models and Java programs
   BASS I, 1998, SOFTWARE ARCH PRACTI
   Bechini A, 1998, PROG COMPREHEN, P190, DOI 10.1109/WPC.1998.693354
   BERNARDO M, 2003, LECT NOTES COMPUTER
   BERNOT G, 1991, SOFTWARE ENG J, V6, P387, DOI 10.1049/sej.1991.0040
   Bertolino A, 2001, PROC INT CONF SOFTW, P211, DOI 10.1109/ICSE.2001.919095
   BERTOLINO A, 2000, J IEEE ACM SOFTW COO
   BERTOLINO A, 1996, P INT SOFTW ARCH WOR
   BERTOLINO A, 2000, ACM P INT C SOFTW EN, P220
   BOGDANOV K, 2000, THESIS U SHEFFIELD
   CARDELLOLIVER R, 1998, P 5 INT SCH S FORM T, P251
   Carver RH, 1998, IEEE T SOFTWARE ENG, V24, P471, DOI 10.1109/32.689403
   CASTRO J, 2001, P STRAW 01 1 INT WOR
   Dick J., 1993, FME'93: Industrial-Strength Formal Methods. First International Symposium of Formal Methods Europe Proceedings, P268, DOI 10.1007/BFb0024651
   Egyed A, 2001, PROC INT CONF SOFTW, P123, DOI 10.1109/ICSE.2001.919087
   Fernandez JC, 1997, SCI COMPUT PROGRAM, V29, P123, DOI 10.1016/S0167-6423(96)00032-9
   FERNANDEZ JC, 1996, P 8 INT C COMP AID V, P348
   FUJIWARA S, 1991, IEEE T SOFTWARE ENG, V17, P591, DOI 10.1109/32.87284
   Gotel O. C. Z., 1994, Proceedings of the First International Conference on Requirements Engineering (Cat. No.94TH0613-0), P94, DOI 10.1109/ICRE.1994.292398
   Harrold MaryJean., 2000, ICSE 00 P C FUTURE S, P61
   HARROLD MJ, 1998, P INT WORKSH ROL SOF, P73
   Hoffman D., 2000, Proceedings 2000 Australian Software Engineering Conference, P235, DOI 10.1109/ASWEC.2000.844580
   HOFMEISTER C, 1999, APPL SOFTW ARCH
   INVERARDI P, 1995, IEEE T SOFTWARE ENG, V21, P373, DOI 10.1109/32.385973
   INVERARDO, 2000, IEEE P INT WORKSH SO
   KAZMAN R, 1994, PROC INT CONF SOFTW, P81, DOI 10.1109/ICSE.1994.296768
   Long B, 2003, IEEE T SOFTWARE ENG, V29, P555, DOI 10.1109/TSE.2003.1205182
   LUCKHAM DC, 1995, IEEE T SOFTWARE ENG, V21, P336, DOI 10.1109/32.385971
   MANDRIOLI D, 1995, ACM T COMPUT SYST, V13, P365, DOI 10.1145/210223.210226
   McCabe T. J., 1976, IEEE Transactions on Software Engineering, VSE-2, P308, DOI 10.1109/TSE.1976.233837
   Medvidovic N., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P44, DOI 10.1109/ICSE.1999.840994
   Milner R., 1989, Communication and concurrency
   Muccini H., 2004, P INT C FUND APPR SO
   MUCCINI H, 0062004 TRCS
   Nuseibeh B, 2001, COMPUTER, V34, P115, DOI 10.1109/2.910904
   OSTRAND TJ, 1988, COMMUN ACM, V31, P676, DOI 10.1145/62959.62964
   RICHARDSON D, 1996, P 2 INT SOFTW ARCH W, P68
   RICHARDSON DJ, 1998, FORMAL APPROACH ARCH
   RYSER J, 1999, P 3 INT SOFTW QUAL W
   Tan QM, 1996, 1996 IEEE INTERNATIONAL CONFERENCE ON COMMUNICATIONS - CONVERGING TECHNOLOGIES FOR TOMORROW'S APPLICATIONS, VOLS. 1-3, P225, DOI 10.1109/ICC.1996.542187
   Tretmans J, 1996, COMPUT NETWORKS ISDN, V29, P49, DOI 10.1016/S0169-7552(96)00017-7
   Vieira M. E. R., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, P758, DOI 10.1109/ICSE.2000.870489
   VONBOCHMANN G, 1994, ACM INT S SOFTW TEST, P109
   WATSON AH, 1996, NIST SPECIAL PUBLICA, P500
   YOUNG M, 1998, P INT WORKSH ROL SOF, P42
NR 48
TC 57
Z9 68
U1 0
U2 12
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAR
PY 2004
VL 30
IS 3
BP 160
EP 171
DI 10.1109/TSE.2004.1271170
PG 12
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 803BN
UT WOS:000220206700002
DA 2024-07-18
ER

PT J
AU Lee, YH
   Cheng, AMK
AF Lee, YH
   Cheng, AMK
TI Optimizing real-time equational rule-based systems
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article; Proceedings Paper
CT 6th IEEE Real-Time Technology and Applications Symposium (RTAS 2000)
CY MAY 31-JUN 02, 2000
CL WASHINGTON, D.C.
SP IEEE RTS Techn Comm
DE EQL language; graphs; real-time rule-based systems; runtime optimization
ID RESPONSE-TIME; ALGORITHM
AB Analyzing and reducing the execution-time upper bound of real-time rule-based expert systems is a very important task because of the stringent timing constraints imposed on this class of systems. This paper presents a new runtime optimization to reduce the execution-time upper bound of real-time rule-based expert systems. In order to determine rules to be evaluated at runtime, a predicate dependency list, which consists of a predicate, its active rule set and corresponding inactive rule set, is created for each predicate in a real-time rule-based program. Based on the predicate dependency list and the current value of each variable, the new runtime optimization dynamically selects rules to be evaluated at runtime. For the timing analysis of the proposed algorithm, the paper introduces a predicate-based rule dependency graph, a predicate-based enable-rule graph, and their construction algorithm. The paper also discusses the bounded time of the equational logic rule-based program using the predicate-based rule dependency graph as well as the predicate-based enable-rule graph. The implementation and performance evaluation of the proposed algorithm using both synthetic and practical real-time rule-bases programs are also presented. The performance evaluation shows that the runtime optimizer reduces the number of rule evaluations and predicate evaluations as well as the response time upper bound significantly, and the new algorithm yields better execution-time upper bound compared to other optimization methods.
C1 Univ Houston, Dept Comp Sci, Houston, TX 77204 USA.
C3 University of Houston System; University of Houston
RP Univ Houston, Dept Comp Sci, Houston, TX 77204 USA.
EM lyh@cs.uh.edu; cheng@cs.uh.edu
OI Cheng, Albert M. K./0000-0003-2134-3056
CR BROWNE JC, 1988, COMPUTER AIDED DESIG
   CHEN JR, 1994, PROC INT C TOOLS ART, P297, DOI 10.1109/TAI.1994.346477
   CHEN JR, 1995, IEEE T KNOWL DATA EN, V7, P26, DOI 10.1109/69.368520
   CHEN JR, 1995, P IEEE C AI APPL FEB
   Cheng A. M. K., 1993, Proceedings of Seventh International Parallel Processing Symposium (Cat. No.93TH0513-2), P779, DOI 10.1109/IPPS.1993.262782
   CHENG AMK, 1993, IEEE T SOFTWARE ENG, V19
   CHENG AMK, 1991, P 6 ANN IEEE C COMP
   CHERNIACK M, 1998, P ACM SIGMOD JUN
   FORGY CL, 1982, ARTIF INTELL, V19, P17, DOI 10.1016/0004-3702(82)90020-0
   GONZALEZ AJ, 1993, ENG KNOWLEDGE BASES
   HELLY JJ, 1984, THESIS U CALIF LOS A
   ISHIDA T, 1994, IEEE T KNOWL DATA EN, V6, P549, DOI 10.1109/69.298172
   JARKE M, 1984, COMPUTING SURVEYS, V16
   LEE YH, 2000, P IEEE REAL TIM TECH
   MARSH CA, 1988, ISA EXPERT SYSTEM PR
   Miranker Daniel P., 1990, TREAT: A New and Efficient Match Algorithm for IA Production Systems
   MIRANKER DP, 1991, IEEE TKDE        MAR, P3
   MIRANKER DP, 1990, P 6 INT C DAT ENG, V10, P353
   PASIK AJ, 1992, IEEE T KNOWL DATA EN, V4, P336, DOI 10.1109/69.149929
   WANG CK, 1990, PROCEEDINGS : 11TH REAL-TIME SYSTEMS SYMPOSIUM, P267, DOI 10.1109/REAL.1990.128757
   WANG RH, 1994, P IEEE REAL TIM SYST, P142
   WANG YW, 1992, P IEEE DAT ENG C, P88
   ZUPAN B, 1998, IEEE T KNOWLEDGE DAT, V10
NR 23
TC 8
Z9 8
U1 2
U2 4
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD FEB
PY 2004
VL 30
IS 2
BP 112
EP 125
PG 14
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Engineering
GA 775AR
UT WOS:000189019000003
DA 2024-07-18
ER

PT J
AU Harman, M
   Hu, L
   Hierons, R
   Wegener, J
   Sthamer, HS
   Baresel, A
   Roper, M
AF Harman, M
   Hu, L
   Hierons, R
   Wegener, J
   Sthamer, HS
   Baresel, A
   Roper, M
TI Testability transformation
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE evolutionary testing; search-based software engineering; automated test
   data generation; transformation
AB A testability transformation is a source-to-source transformation that aims to improve the ability of a given test generation method to generate test data for the original program. This paper introduces testability trans' formation, demonstrating that it differs from traditional transformation, both theoretically and practically, while still allowing many traditional transformation rules to be applied. The paper illustrates the theory of testability transformation with an example application to evolutionary testing. An-algorithm for flag removal is defined and results,are. presented from an empirical study which show how the algorithm improves both the performance of evolutionary test data generation and the adequacy level of the test data so-generated.
C1 Brunel Univ, Dept Informat Syst & Comp, Uxbridge UB8 3PH, Middx, England.
   DaimlerChrysler, D-10559 Berlin, Germany.
   Univ Strathclyde, Glasgow G1 1XH, Lanark, Scotland.
C3 Brunel University; Daimler AG; University of Strathclyde
RP Brunel Univ, Dept Informat Syst & Comp, Uxbridge UB8 3PH, Middx, England.
EM Mark.Harman@brunel.ac.uk; Liu.Hu@brunel.ac.uk; Rob.Hierons@brunel.ac.uk
OI Harman, Mark/0000-0002-5864-4488; Hierons, Robert/0000-0002-4771-1446
CR Aho A.V., 1986, COMPILERS PRINCIPLES
   [Anonymous], P IFIP INT WORKSH DE
   [Anonymous], 1990, Specification and Transformation of Programs: A Formal Approach to Software Development
   BARESEL A, 2002, GECCO 2002, P1329
   BINKLEY D, 1999, P 1999 ACM S APPL CO, P519
   *BSI, 1998, 79251 BSI
   BURSTALL RM, 1977, J ACM, V24, P44, DOI 10.1145/321992.321996
   Canfora G, 1998, INFORM SOFTWARE TECH, V40, P595, DOI 10.1016/S0950-5849(98)00086-X
   DANICIC S, IN PRESS SOFTWARE PR
   DERSHOWITZ N, 1977, P 4 ANN S PRINC PROG, P144
   Dolado JJ, 2003, IEEE T SOFTWARE ENG, V29, P665, DOI 10.1109/TSE.2003.1214329
   FEATHER MS, 1982, ACM T PROGR LANG SYS, V4, P1, DOI 10.1145/357153.357154
   Harman M, 2003, J SYST SOFTWARE, V68, P45, DOI 10.1016/S0164-1212(02)00135-8
   Harman M, 2001, INFORM SOFTWARE TECH, V43, P833, DOI 10.1016/S0950-5849(01)00189-6
   HARMAN M, 2002, GECCO 2002, P1359
   Holland J.H., 1975, ADAPTION NATURAL ART
   Jones BF, 1996, SOFTWARE ENG J, V11, P299, DOI 10.1049/sej.1996.0040
   Michael CC, 2001, IEEE T SOFTWARE ENG, V27, P1085, DOI 10.1109/32.988709
   Mitchell M., 1999, INTRO GENETIC ALGORI, DOI DOI 10.1016/S0898-1221(96)90227-8
   PARGAS RP, 1999, J SOFTWARE TESTING V, V9, P263
   RAMSHAW L, 1988, J ACM, V35, P893, DOI 10.1145/48014.48021
   VOAS JM, 1995, IEEE SOFTWARE, V12, P17, DOI 10.1109/52.382180
   WARD M, 1994, COMPUTER J, V37
   Wegener J, 2001, INFORM SOFTWARE TECH, V43, P841, DOI 10.1016/S0950-5849(01)00190-2
   Weiser MD., 1979, PROGRAM SLICES FORMA
NR 25
TC 151
Z9 167
U1 0
U2 12
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JAN
PY 2004
VL 30
IS 1
BP 3
EP 16
DI 10.1109/TSE.2004.1265732
PG 14
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 757QD
UT WOS:000187572200001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Barbier, F
   Henderson-Sellers, B
AF Barbier, F
   Henderson-Sellers, B
TI Controversies about the black and white diamonds
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
C1 Univ Pau, LIUPPA, F-64013 Pau, France.
   Univ Technol Sydney, Broadway, NSW 2007, Australia.
C3 Universite de Pau et des Pays de l'Adour; University of Technology
   Sydney
RP Barbier, F (corresponding author), Univ Pau, LIUPPA, Bp 1155, F-64013 Pau, France.
CR Barbier F, 2003, IEEE T SOFTWARE ENG, V29, P459, DOI 10.1109/TSE.2003.1199074
   TAN HBK, 2003, IEEE T SOFTWARE ENG, V29
NR 2
TC 2
Z9 2
U1 0
U2 2
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD NOV
PY 2003
VL 29
IS 11
BP 1056
EP 1056
DI 10.1109/TSE.2003.1245308
PG 1
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 740KU
UT WOS:000186402200011
DA 2024-07-18
ER

PT J
AU Cangussu, JW
   DeCarlo, RA
   Mathur, ATP
AF Cangussu, JW
   DeCarlo, RA
   Mathur, ATP
TI Using sensitivity analysis to validate a state Variablo model of the
   software test process
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE software process; feedback control; sensitivity analysis; modeling;
   software test process; state model
ID MATRIX CALCULUS
AB We report on the sensitivity analysis of a state variable model.(Model S) proposed earlier. Model S captures the dominant behavior of the system test phase of the software test pro cess. Sensitivity analysis is a mathematical methodology to compute changes in the system behavior due to changes in system parameters or variables. This is particularly important when parameters are calibrated using noisy or small data sets. Nevertheless, by mathematically,quantifying the effects of parameter variations on the behavior of the model, and thereby the STP, one can easily and quickly evaluate the effect of such variations on the process performance without having to perform extensive simulations. In all cases studied, Model S behaved according to empirical observations which serves to validate the-model. It is also shown that sensitivity analysis can suggest structural improvements in a model when the model does not behave as expected.
C1 Univ Texas, Dept Comp Sci, Richardson, TX 75083 USA.
   Purdue Univ, Dept Elect & Comp Engn, W Lafayette, IN 47907 USA.
   Purdue Univ, Dept Comp Sci, W Lafayette, IN 47907 USA.
C3 University of Texas System; University of Texas Dallas; Purdue
   University System; Purdue University; Purdue University System; Purdue
   University
RP Univ Texas, Dept Comp Sci, Richardson, TX 75083 USA.
EM cangussu@utdallas.edu; decarlo@ecn.purdue.edu; apm@cs.purdue.edu
CR Abdel-Hamid T., 1991, SOFTWARE PROJECT DYN
   [Anonymous], 1992, Understanding Statistical Process Control
   [Anonymous], 1995, SIAM
   Biffl S, 2000, IEEE SOFTWARE, V17, P36, DOI 10.1109/52.895166
   Boehm B, 2000, IEEE SOFTWARE, V17, P14, DOI 10.1109/52.877854
   Boehm BW., 2000, SOFTWARE COST ESTIMA, VII
   Boehm BW., 1981, Software Engineering Economics
   BREWER JW, 1978, IEEE T CIRCUITS SYST, V25, P772, DOI 10.1109/TCS.1978.1084534
   BREWER JW, 1978, IEEE T AUTOMAT CONTR, V23, P748, DOI 10.1109/TAC.1978.1101817
   Brooks Frederick P., 1995, The mythical man-month
   Cangussu JW, 2001, 12TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P232, DOI 10.1109/ISSRE.2001.989477
   Cangussu JW, 2002, IEEE T SOFTWARE ENG, V28, P782, DOI 10.1109/TSE.2002.1027800
   CANGUSSU JW, 2002, THESIS PURDUE U
   CANGUSSU JW, 2001, SERCTR176P PURD U
   CANGUSSU JW, 2000, P 13 INT C SOFTW SYS
   CANGUSSU JW, 2001, P 2001 IEEE SYST MAN, P706
   CUGOLA G, 1999, SOFTWARE PROCESS IMP
   DeCarlo R.A., 1989, Linear systems: a state variable approach with numerical implementation
   FLORAC WA, 1999, SEI S SOFTW, P1
   Fulford G., 1997, MODELING DIFFERENTIA
   GANDER W, 1997, SOLVING PROBLEMS SCI
   Goodwin GC, 2001, CONTROL SYSTEM DESIGN, pXXIII
   Hansen GA, 1996, COMPUTER, V29, P73, DOI 10.1109/2.481468
   Lay S.R., 1982, Convex Sets and Their Applications
   Ljung L., 1987, SYSTEM IDENTIFICATIO
   Luenberger DG., 1979, INTRO DYNAMIC SYSTEM
   MARCINIAK JJ, 1994, ENCY SOFTWARE ENG, V2, P1359
   MARCINIAK JJ, 1994, ENCY SOFTWARE ENG, V2, P1409
   McCabe T. J., 1976, IEEE Transactions on Software Engineering, VSE-2, P308, DOI 10.1109/TSE.1976.233837
   Scott EM, 2000, SENSITIVITY ANAL
   Wohlin C, 1998, PROC INT CONF SOFTW, P400, DOI 10.1109/ICSE.1998.671393
NR 31
TC 20
Z9 22
U1 0
U2 5
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAY
PY 2003
VL 29
IS 5
BP 430
EP 443
DI 10.1109/TSE.2003.1199072
PG 14
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 675HM
UT WOS:000182688000004
DA 2024-07-18
ER

PT J
AU Canal, C
   Fuentes, L
   Pimentel, E
   Troya, JM
   Vallecillo, A
AF Canal, C
   Fuentes, L
   Pimentel, E
   Troya, JM
   Vallecillo, A
TI Adding roles to CORBA objects
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE interface definition languages; software components; component-based
   software development; protocols; compatibility and substitutability of
   components
ID ARCHITECTURAL MISMATCH
AB Traditional IDLs were defined for describing the services that objects offer, but not those services they require from other objects, nor the relative order in which they expect their methods to be called. Some of the existing proposals try to add protocol information to object interfaces, but most of them fail to do so in a modular way. In this paper we propose an extension of the CORBA IDL that uses a sugared subset of the polyadic pi-calculus for describing object service protocols, based on the concept of roles. Roles allow the modular specification of the observable behavior of CORBA objects, reducing the complexity of the compatibility tests. Our main aim is the automated checking of protocol interoperability between CORBA objects in open component-based environments, using similar techniques to those used in software architecture description and analysis. In addition, our proposal permits the study of substitutability between CORBA objects, as well as the realization of dynamic compatibility tests during their runtime execution.
C1 Univ Malaga, Dept Lenguajes & Ciensias Comput, ESTI Informat, E-29071 Malaga, Spain.
C3 Universidad de Malaga
RP Univ Malaga, Dept Lenguajes & Ciensias Comput, ESTI Informat, E-29071 Malaga, Spain.
EM canal@lcc.uma.es; lff@lcc.uma.es; ernesto@lcc.uma.es; troya@lcc.uma.es;
   av@lcc.uma.es
RI Vallecillo, Antonio/B-1884-2014; Pimentel, Ernesto/AAC-3810-2019; Canal,
   Carlos/H-4782-2015; Fuentes, Lidia/M-5580-2014
OI Vallecillo, Antonio/0000-0002-8139-9986; Pimentel,
   Ernesto/0000-0002-7125-8434; Canal, Carlos/0000-0002-8002-0372; Fuentes,
   Lidia/0000-0002-5677-7156
CR AKSIT M, 1993, P 7 EUR C OBJ OR PRO, P152
   Allen R., 1997, ACM Transactions on Software Engineering and Methodology, V6, P213, DOI 10.1145/258077.258078
   ALLEN R, 1998, P 6 INT S FDN SOFTW
   BAKER S, 1997, CORBA DISTRIBUTION O
   BASTIDE R, 1999, P 13 EUR C OBJ OR PR, P474
   BASTIDE R, 2000, P ECOOP 2000 WORKSH, P3
   Bracciali A, 2002, LECT NOTES COMPUT SC, V2315, P88
   Canal C, 2001, SCI COMPUT PROGRAM, V41, P105, DOI 10.1016/S0167-6423(01)00002-8
   Canal C, 2001, COMPUT J, V44, P448, DOI 10.1093/comjnl/44.5.448
   Canal C, 1999, INT FED INFO PROC, V12, P107
   Cho IH, 1998, TOOLS 26 - TECHNOLOGY OF OBJECT-ORIENTED LANGUAGES - PROCEEDINGS, P84, DOI 10.1109/TOOLS.1998.711005
   Compare D, 1999, SCI COMPUT PROGRAM, V33, P101, DOI 10.1016/S0167-6423(98)00006-9
   FEIJS L, 1999, P FORM METH EUR FME, P1343
   GARLAN D, 1995, IEEE SOFTWARE, V12, P17, DOI 10.1109/52.469757
   GASPARI M, 1999, P 13 EUR C OBJ OR PR, P495
   Goguen J., 1996, Journal of Systems Integration, V6, P93, DOI 10.1007/BF02262753
   HAN J, 1999, P ECOOP 99 WORKSH OB, P25
   HENDERSON P, 1997, P FSE 97 FOCBS WORKS, P131
   HERNANDEZ J, 1999, P ECOOP 99 WORKSH OB
   Honda K, 1998, LECT NOTES COMPUT SC, V1381, P122, DOI 10.1007/BFb0053567
   Joshi RK, 1997, SOFTWARE PRACT EXPER, V27, P677, DOI 10.1002/(SICI)1097-024X(199706)27:6<677::AID-SPE103>3.0.CO;2-I
   LEA D, 1995, P 9 EUR C OBJ OR PRO
   Leavens G.T., 2000, FDN COMPONENT BASED
   LUCKHAM DC, 1995, IEEE T SOFTWARE ENG, V21, P336, DOI 10.1109/32.385971
   Magee J, 1999, INT FED INFO PROC, V12, P35
   MEDVIDOVIC N, 1996, JOINT P 2 INT SOFTW, P24, DOI [10.1145/243327.243340, DOI 10.1145/243327.243340]
   Milner R., 1993, Logic and Algebra of Specification. Proceedings of the NATO Advanced Study Institute, P203
   MILNER R, 1992, INFORM COMPUT, V100, P1, DOI [10.1016/0890-5401(92)90008-4, 10.1016/0890-5401(92)90009-5]
   Nierstrasz Oscar., 1995, Object-Oriented Software Composition, P99
   OLAFSSON A, 1996, SPECIAL ISSUES OBJEC, P159
   *OMG, 2000, CORBA EV SERV SPEC
   OMG, 2000, COMM OBJ REQ BROK AR
   *OMG, 2000, CORBA TRANS SERV SPE
   *OMG, 1999, CORBA COMP MOD
   SANGIORGI D, 1993, ECSLFCS93270 U ED
   SHAW M, 1995, IEEE T SOFTWARE ENG, V21, P314, DOI 10.1109/32.385970
   SOUSA J, 1999, P FM 99, P1281
   Szyperski C., 2002, COMPONENT SOFTWARE, V2nd
   VICTOR B, 1994, THESIS UPPSALA U SWE
   Wallnau K., 2002, Building systems from commercial components
   Yellin DM, 1997, ACM T PROGR LANG SYS, V19, P292, DOI 10.1145/244795.244801
   Zaremski A., 1995, ACM Transactions on Software Engineering, V6, P333
NR 42
TC 33
Z9 39
U1 0
U2 3
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAR
PY 2003
VL 29
IS 3
BP 242
EP 260
DI 10.1109/TSE.2003.1183935
PG 19
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 651QH
UT WOS:000181331700005
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Guo, X
   Song, XY
   Zhou, JT
   Wang, FY
   Tang, KC
AF Guo, Xu
   Song, Xiaoyu
   Zhou, Jian-tao
   Wang, Feiyu
   Tang, Kecheng
TI An Effective Approach to High Strength Covering Array Generation in
   Combinatorial Testing
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Combinatorial testing (CT); high strength covering array generation;
   variable strength covering array generation (VSCAG); multi-learning
   strategies; quantum particle swarm optimization (QPSO)
ID PARTICLE SWARM OPTIMIZATION; ARTIFICIAL BEE COLONY; TEST SUITE
   GENERATION; CONSTRAINTS; STRATEGY; IMPLEMENTATION; ALGORITHM; DESIGN;
   SYSTEM
AB Combinatorial testing (CT) is an effective testing method that can detect failures caused by the interaction of parameters of the software under test (SUT). With the increasing complexity of SUT and the parameters involved, the variable strength test suite supporting high strength interaction is challenging in a practical testing scenario. This paper presents a multi-learning-based quantum particle swarm optimization (IQIPSO) for high and variable strength covering array generation (VSCAG). Specifically, a specially designed data structure and several combination location methods are proposed to support and speed up the high-strength VSCAG. Besides, multi-learning strategies, including Lamarckian and Baldwinian learning, are applied to IQIPSO to address the premature convergence leading to a large test suite size. Studies for parameter settings of IQIPSO are presented systematically. The IQIPSO method successfully builds test suites where strength is up to 15 and totally reports 13 new best test suite size records. Extensive experiments demonstrate that IQIPSO tends to outperform most other existing methods.
C1 [Guo, Xu; Zhou, Jian-tao; Wang, Feiyu; Tang, Kecheng] Inner Mongolia Univ, Coll Comp Sci, Hohhot 010021, Inner Mongolia, Peoples R China.
   [Guo, Xu; Zhou, Jian-tao] Minist Educ, Inner Mongolia Engn Lab Cloud Comp & Serv Software, Natl & Local Joint Engn Res Ctr Intelligent Inform, Inner Mongolia Key Lab Social Comp & Data Proc,Eng, Hohhot 010021, Inner Mongolia, Peoples R China.
   [Song, Xiaoyu] Portland State Univ, Dept Elect & Comp Engn, Portland, OR 97207 USA.
C3 Inner Mongolia University; Portland State University
RP Zhou, JT (corresponding author), Inner Mongolia Univ, Coll Comp Sci, Hohhot 010021, Inner Mongolia, Peoples R China.
EM csgx@mail.imu.edu.cn; songx@pdx.edu; cszhoujiantao@qq.com
RI wang, feiyu/HII-9226-2022
OI Guo, Xu/0000-0002-6072-5893
FU National Natural Science Foundation of China [62162046]; Inner Mongolia
   Science and Technology Project [2021GG0155]; Natural Science Foundation
   of Major Research Plan of Inner Mongolia [2019ZD15]; Inner Mongolia
   Natural Science Foundation [2019GG372]
FX This work was supported in part by the National Natural Science
   Foundation of China under Grant 62162046, in part by the Inner Mongolia
   Science and Technology Project under Grant 2021GG0155, in part by the
   Natural Science Foundation of Major Research Plan of Inner Mongolia
   under Grant 2019ZD15, and in part by the Inner Mongolia Natural Science
   Foundation under Grant 2019GG372.
CR Ahmed B. S., 2012, Adopting a particle swarm-based test generator strategy for variable-strength and t-way testing
   Ahmed BS, 2017, INFORM SOFTWARE TECH, V86, P20, DOI 10.1016/j.infsof.2017.02.004
   Ahmed BS, 2016, PROCEEDINGS OF THE 2016 SAI COMPUTING CONFERENCE (SAI), P1217, DOI 10.1109/SAI.2016.7556133
   Ahmed BS, 2015, INFORM SOFTWARE TECH, V66, P13, DOI 10.1016/j.infsof.2015.05.005
   Ahmed BS, 2012, APPL SOFT COMPUT, V12, P1330, DOI 10.1016/j.asoc.2011.11.029
   Ahmed BS, 2011, J SYST SOFTWARE, V84, P2171, DOI 10.1016/j.jss.2011.06.004
   Alazzawi A, 2021, Arxiv, DOI arXiv:2110.03728
   Alazzawi AK, 2020, J ENG SCI TECHNOL, V15, P746
   Alazzawi AK, 2019, INT J ADV COMPUT SC, V10, P259
   Alsewari ARA, 2012, INFORM SOFTWARE TECH, V54, P553, DOI 10.1016/j.infsof.2012.01.002
   Altmemi Jalal M., 2020, IOP Conference Series: Materials Science and Engineering, V917, DOI 10.1088/1757-899X/917/1/012011
   Balamurugan A, 2021, INT J COMMUN SYST, V34, DOI 10.1002/dac.4738
   Barisal P, 2015, E-INFORMATICA, V9, P87, DOI 10.5277/E-INF150107
   Cai LZ, 2018, 2018 19TH IEEE/ACIS INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, ARTIFICIAL INTELLIGENCE, NETWORKING AND PARALLEL/DISTRIBUTED COMPUTING (SNPD), P391, DOI 10.1109/SNPD.2018.8441104
   Cai X, 2021, EXPERT SYST APPL, V171, DOI 10.1016/j.eswa.2021.114629
   Chen X, 2009, ASIA PAC SOFWR ENG, P160, DOI 10.1109/APSEC.2009.18
   Chen YS, 2019, IEEE ICST WORKSHOP, P281, DOI 10.1109/ICSTW.2019.00066
   Cheng CT, 2007, DISCRETE APPL MATH, V155, P1943, DOI 10.1016/j.dam.2007.04.010
   Cohen DM, 1997, IEEE T SOFTWARE ENG, V23, P437, DOI 10.1109/32.605761
   Cohen MB, 2003, PROC INT CONF SOFTW, P38, DOI 10.1109/ICSE.2003.1201186
   Cohen MB, 2003, 27TH ANNUAL INTERNATIONAL COMPUTER SOFTWARE AND APPLICATIONS CONFERENCE, PROCEEDINGS, P413
   Czerwonka J., 2008, Pairwise testing in the real world: Practical extensions to test-case sce- narios
   Deng W, 2020, IEEE T INSTRUM MEAS, V69, P7319, DOI 10.1109/TIM.2020.2983233
   Du B, 2019, IEEE T GEOSCI REMOTE, V57, P6003, DOI 10.1109/TGRS.2019.2903875
   El-Mihoub TA, 2021, EVOL INTELL, V14, P1565, DOI 10.1007/s12065-020-00425-5
   Esfandyari S, 2018, INFORM SOFTWARE TECH, V94, P165, DOI 10.1016/j.infsof.2017.10.007
   Guo X, 2022, IET SOFTW, V16, P279, DOI 10.1049/sfw2.12054
   Guo X, 2018, P INT COMP SOFTW APP, P298, DOI 10.1109/COMPSAC.2018.00047
   Hartman A., 2005, WHITCH: IBM intelligent test configuration handler
   Homaid AABA, 2019, IET SOFTW, V13, P286, DOI 10.1049/iet-sen.2018.5005
   Homaid AAB, 2015, 2015 4TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING AND COMPUTER SYSTEMS (ICSECS), P154, DOI 10.1109/ICSECS.2015.7333101
   Hussien HM, 2021, INTERNATIONAL CONFERENCE ON ELECTRICAL, COMPUTER AND ENERGY TECHNOLOGIES (ICECET 2021), P1918, DOI 10.1109/ICECET52533.2021.9698778
   Kampel L, 2020, LECT NOTES COMPUT SC, V11968, P53, DOI 10.1007/978-3-030-38629-0_5
   Kampel L, 2019, THEOR COMPUT SCI, V800, P107, DOI 10.1016/j.tcs.2019.10.019
   Kleine K, 2018, MATH COMPUT SCI, V12, P51, DOI 10.1007/s11786-017-0326-0
   Kuhn R, 2003, 27TH ANNUAL NASA GODDARD/IEEE SOFTWARE ENGINEERING WORKSHOP - PROCEEDINGS, P91, DOI 10.1109/SEW.2002.1199454
   Lei Y, 2008, SOFTW TEST VERIF REL, V18, P125, DOI 10.1002/stvr.381
   Lei Y, 2007, ECBS 2007: 14TH ANNUAL IEEE INTERNATIONAL CONFERENCE AND WORKSHOPS ON THE ENGINEERING OF COMPUTER-BASED SYSTEMS, PROCEEDINGS, P549
   Li PC, 2014, APPL INTELL, V40, P479, DOI 10.1007/s10489-013-0477-x
   Luo CA, 2021, PROC INT CONF SOFTW, P201, DOI 10.1109/ICSE43902.2021.00030
   Mercan H, 2019, IEEE T SOFTWARE ENG, V45, P1270, DOI 10.1109/TSE.2018.2837759
   Moura L, 2019, THEOR COMPUT SCI, V800, P146, DOI 10.1016/j.tcs.2019.10.022
   Nie CH, 2011, ACM COMPUT SURV, V43, DOI 10.1145/1883612.1883618
   Niu WJ, 2020, J HYDROL, V590, DOI 10.1016/j.jhydrol.2020.125477
   Ohashi T, 2017, IEEE PAC RIM INT SYM, P78, DOI 10.1109/PRDC.2017.19
   Othman RR, 2014, MALAYS J COMPUT SCI, V27, P204
   Padhy, 2005, ARTIF INTELL
   Petke J, 2015, IEEE T SOFTWARE ENG, V41, P901, DOI 10.1109/TSE.2015.2421279
   Pourhejazy P, 2023, ANN OPER RES, V322, P125, DOI 10.1007/s10479-022-04537-2
   Raaphorst S, 2018, J COMB DES, V26, P417, DOI 10.1002/jcd.21602
   Rozmie R. O., 2011, Sci. Res. Essays, V6, P3638, DOI DOI 10.5897/SRE10.1196
   Sabharwal S, 2015, 2015 INTERNATIONAL CONFERENCE ON ADVANCES IN COMPUTING, COMMUNICATIONS AND INFORMATICS (ICACCI), P2049, DOI 10.1109/ICACCI.2015.7275918
   Schroeder PJ, 2003, THIRD INTERNATIONAL CONFERENCE ON QUALITY SOFTWARE, PROCEEDINGS, P247, DOI 10.1109/QSIC.2003.1319108
   Shin KW, 2018, INT J AUTO TECH-KOR, V19, P107, DOI 10.1007/s12239-018-0011-6
   Song WQ, 2020, ENERGY, V194, DOI 10.1016/j.energy.2019.116847
   Sun J, 2004, CONF CYBERN INTELL S, P111
   Wagner M, 2019, LECT NOTES COMPUT SC, V11544, P300, DOI 10.1007/978-3-030-34029-2_20
   Wang ZY, 2008, INT CONF QUAL SOFTW, P155, DOI 10.1109/QSIC.2008.52
   Wu HY, 2019, Arxiv, DOI arXiv:1908.02480
   Wu HY, 2015, IEEE T EVOLUT COMPUT, V19, P575, DOI 10.1109/TEVC.2014.2362532
   Yilmaz C, 2006, IEEE T SOFTWARE ENG, V32, P20, DOI 10.1109/TSE.2006.8
   Younis MI, 2020, J ENG SCI TECHNOL, V15, P3142
   Yu LB, 2013, 2013 IEEE SIXTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST 2013), P370, DOI 10.1109/ICST.2013.52
   Zamli KZ, 2018, Arxiv, DOI arXiv:1810.05824
   Zamli KZ, 2018, PLOS ONE, V13, DOI 10.1371/journal.pone.0195675
   Ziyuan Wang, 2013, Journal of Software, V8, P3173, DOI 10.4304/jsw.8.12.3173-3181
NR 66
TC 0
Z9 0
U1 2
U2 2
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD OCT 1
PY 2023
VL 49
IS 10
BP 4566
EP 4593
DI 10.1109/TSE.2023.3306461
PG 28
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA Y1NF7
UT WOS:001102997400005
DA 2024-07-18
ER

PT J
AU Simon, S
   Ruckel, N
   Siegmund, N
AF Simon, Sebastian
   Ruckel, Nicolai
   Siegmund, Norbert
TI CfgNet: A Framework for Tracking Equality-Based Configuration
   Dependencies Across a Software Project
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Configuration dependencies; configuration conflicts; services and
   components
AB Modern software development incorporates various technologies, such as containerization, CI/CD pipelines, and build tools, which have to be jointly configured to enable building, testing, deployment, and execution of software systems. The vast configuration space spans several different configuration artifacts with their own syntax and semantics, encoding hundreds of configuration options and their values. The interplay of these technologies requires some level of coordination, which is realized by matching configurations. That is, configuration options and their according values may depend on other options and values from entirely different technologies and artifacts. This creates non-obvious configuration dependencies that are hard to track. The missing awareness and overview of such configuration dependencies across diverse configuration artifacts, tools, and frameworks can lead to dependency conflicts and severe configuration errors. We propose CfgNet, a framework that models the configuration landscape of a software project as a configuration network in an extensible and artifact-independent way. This way, we enable the early detection of possible dependency violations and proactively prevent misconfigurations during software development and maintenance. In a literature study, we found that the most common form of dependencies is the equality of values of different options. Based on this result, we developed an equality-based linker to determine dependent options across different artifacts. To demonstrate the extensibility of our framework, we also implemented nine plugins for popular technologies, such as Maven and Docker. To evaluate our approach, we injected and violated five real-world configuration dependencies extracted from Stack Overflow, which we support with our technology plugins, in five subject systems. CfgNet found all injected dependency violations and four additional ones already present in these systems. Moreover, we applied CfgNet to the commit history of 50 repositories selected from GitHub and found dependency conflicts in about two thirds of these repositories. We manually inspected 883 conflicts, with about 89 % true positives, demonstrating the need to reliably track cross-technology configuration dependencies and prevent their misconfiguration.
C1 [Simon, Sebastian; Siegmund, Norbert] Univ Leipzig, Fac Math & Comp Sci, D-04109 Leipzig, Germany.
   [Ruckel, Nicolai] Secunet Secur Networks AG, Def & Space, D-45138 Dresden, Germany.
C3 Leipzig University
RP Simon, S (corresponding author), Univ Leipzig, Fac Math & Comp Sci, D-04109 Leipzig, Germany.
EM ssimon@informatik.uni-leipzig.de; nicolai.ruckel@posteo.de;
   norbert.siegmund@uni-leipzig.de
FU Federal Ministry of Education and Research of Germany; Saechsische
   Staatsministerium flir Wissenschaft Kultur und Tourismus in the program
   Center of Excellence for AI-research "Center for Scalable Data Analytics
   and Artificial Intelligence Dresden/Leipzig", under Grant ScaDS.AI; BMBF
   project Agile-AI [01IS19059B]; German Research Foundation [SI 2171/2-2]
FX The work of the authors was supported in part by the Federal Ministry of
   Education and Research of Germany and by the Saechsische
   Staatsministerium flir Wissenschaft Kultur und Tourismus in the program
   Center of Excellence for AI-research "Center for Scalable Data Analytics
   and Artificial Intelligence Dresden/Leipzig", under Grant ScaDS.AI, and
   in part by BMBF project Agile-AI under Grant 01IS19059B. The work of
   Norbert Siegmund was supported in part by German Research Foundation
   under Grant SI 2171/2-2.& nbsp;
CR Attariyan Mona., 2010, OSDI PAGES, P237
   Bagherzadeh M, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P432, DOI 10.1145/3338906.3338939
   Behrang F, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P295, DOI 10.1145/2786805.2786869
   Bhagwan R, 2021, 2021 36TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING ASE 2021, P817, DOI 10.1109/ASE51524.2021.9678525
   Chen QR, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P362, DOI 10.1145/3368089.3409727
   Chen W, 2016, P INT COMP SOFTW APP, P42, DOI 10.1109/COMPSAC.2016.95
   Chen XW, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-020-09904-w
   Chen ZP, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P750, DOI 10.1145/3368089.3409759
   COHEN J, 1960, EDUC PSYCHOL MEAS, V20, P37, DOI 10.1177/001316446002000104
   Dietrich Jens, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P349, DOI 10.1109/MSR.2019.00061
   Hassan F, 2018, IEEE INT CONF AUTOM, P796, DOI 10.1145/3238147.3240470
   Jafari AJ, 2022, IEEE T SOFTWARE ENG, V48, P3790, DOI 10.1109/TSE.2021.3106247
   Kitchenham B., 2007, 23 EBSE, DOI DOI 10.1145/1134285.1134500
   Kitchenham B., 2007, 2007001 EBSE
   Li W., 2017, PROC 21 INT C EVAL A, P88
   Liao XK, 2018, IEEE T RELIAB, V67, P832, DOI 10.1109/TR.2018.2834419
   Lillack Max, 2014, Proceedings of the 29th ACM/IEEE International Conference on Automated Software Engineering, P445, DOI 10.1145/2642937.2643001
   Mahmud Tabassum, 2022, P 14 ACM WORKSH HOT, P1
   Metcalf C. A., 2016, P IEEE 24 INT C PROG, P1
   Rabkin A., 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P193, DOI 10.1109/ASE.2011.6100053
   Ramachandran V, 2009, ACM/IEEE SIXTH INTERNATIONAL CONFERENCE ON AUTONOMIC COMPUTING AND COMMUNICATIONS (ICAC '09), P169
   Santolucito M, 2018, Arxiv, DOI arXiv:1805.04473
   Santolucito M, 2017, P ACM PROGRAM LANG, V1, DOI 10.1145/3133888
   Santolucito M, 2016, LECT NOTES COMPUT SC, V9780, P80, DOI 10.1007/978-3-319-41540-6_5
   Sayagh M, 2017, PROC INT CONF SOFTW, P255, DOI 10.1109/ICSE.2017.31
   Siegmund N, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P338, DOI 10.1145/3368089.3409675
   Simon S., 2023, CFGNET FRAMEWORK TRA
   Simon S., 2023, CFGNET
   Stack Exchange, 2021, STACK EXCH DAT DUMP
   Toman John., 2016, 30th European Conference on Object-Oriented Programming, p24:1, DOI DOI 10.4230/LIPICS.ECOOP.2016.24
   Tuncer O., 2020, ARXIV
   Wohlin C., 2014, INT C EVALUATION ASS, P1
   Xu TY, 2016, PROCEEDINGS OF OSDI'16: 12TH USENIX SYMPOSIUM ON OPERATING SYSTEMS DESIGN AND IMPLEMENTATION, P619
   Xu TY, 2013, SOSP'13: PROCEEDINGS OF THE TWENTY-FOURTH ACM SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES, P244, DOI 10.1145/2517349.2522727
   Xu TY, 2015, ACM COMPUT SURV, V47, DOI 10.1145/2791577
   Yin ZN, 2011, SOSP 11: PROCEEDINGS OF THE TWENTY-THIRD ACM SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES, P159
   Zhang JQ, 2014, ACM SIGPLAN NOTICES, V49, P687, DOI 10.1145/2541940.2541983
   Zhang S, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P1438, DOI 10.1109/ICSE.2013.6606737
NR 38
TC 0
Z9 0
U1 4
U2 5
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD AUG
PY 2023
VL 49
IS 8
BP 3955
EP 3971
DI 10.1109/TSE.2023.3274349
PG 17
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA P3WA9
UT WOS:001049968200001
DA 2024-07-18
ER

PT J
AU Tan, YS
   Chen, JF
   Shang, WY
   Zhang, T
   Fang, S
   Luo, XP
   Chen, ZJ
   Qi, SH
AF Tan, Youshuai
   Chen, Jinfu
   Shang, Weiyi
   Zhang, Tao
   Fang, Sen
   Luo, Xiapu
   Chen, Zijie
   Qi, Shuhao
TI STRE: An Automated Approach to Suggesting App Developers When to Stop
   Reading Reviews
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Computer bugs; Maintenance engineering; Data models; Mobile
   applications; Libraries; Data mining; Computer science; App reviews;
   maintenance; mobile applications
ID SUPPORT
AB It is well known that user feedback (i.e., reviews) plays an essential role in mobile app maintenance. Users upload their troubles, app issues, or praises, to help developers refine their apps. However, reading tremendous amounts of reviews to retrieve useful information is a challenging job. According to our manual studies, reviews are full of repetitive opinions, thus developers could stop reading reviews when no more new helpful information appears. Developers can extract useful information from partial reviews to ameliorate their app and then develop a new version. However, it is tough to have a good trade-off between getting enough useful feedback and saving more time. In this paper, we propose a novel approach, named STRE, which utilizes historical reviews to suggest the time when most of the useful information appears in reviews of a certain version. We evaluate STRE on 62 recent versions of five apps from Apple's App Store. Study results demonstrate that our approach can help developers save their time by up to 98.33% and reserve enough useful reviews before stopping to read reviews such that developers do not spend additional time in reading redundant reviews over the suggested stopping time. At the same time, STRE can complement existing review categorization approaches that categorize reviews to further assist developers. In addition, we find that the missed top-word-related reviews appearing after the suggested stopping time contain limited useful information for developers. Finally, we find that 12 out of 13 of the emerging bugs from the studied versions appear before the suggested stopping time. Our approach demonstrates the value of automatically refining information from reviews.
C1 [Tan, Youshuai; Zhang, Tao; Fang, Sen; Chen, Zijie] Macau Univ Sci & Technol, Sch Comp Sci & Engn, Taipa 999078, Macau, Peoples R China.
   [Chen, Jinfu] Wuhan Univ, Sch Comp Sci, Wuhan 430072, Hubei, Peoples R China.
   [Shang, Weiyi] Concordia Univ, Dept Comp Sci & Software Engn, Montreal, PQ H3G 1M8, Canada.
   [Qi, Shuhao] Univ Manchester, Dept Comp Sci, Manchester M13 9PL, England.
C3 Macau University of Science & Technology; Wuhan University; Concordia
   University - Canada; University of Manchester
RP Zhang, T (corresponding author), Macau Univ Sci & Technol, Sch Comp Sci & Engn, Taipa 999078, Macau, Peoples R China.
EM 2109853jim20001@student.must.edu.mo; jinfuchen@whu.edu.cn;
   shang@encs.concordia.ca; tazhang@must.edu.mo; fangsen1996@gmail.com;
   csxluo@comp.polyu.edu.hk; chenzjfc@gmail.com; qiletian6666@gmail.com
RI Zhang, Tao/E-5634-2012
OI Zhang, Tao/0000-0002-6272-4069; Tan, Youshuai/0000-0002-3390-4079; Fang,
   Sen/0000-0002-9918-7180
FU Macao Science and Technology Development Fund, Macau SAR [0047/2020/A1,
   0014/2022/A]; Hong Kong RGC Projects [PolyU15223918, PolyU15224121];
   HKPolyU [ZVG0]; China Postdoctoral Science Foundation [2017M621247]
FX This work was supported in part by Macao Science and Technology
   Development Fund, Macau SAR under Grants 0047/2020/A1 and 0014/2022/A,
   in part by Hong Kong RGC Projects under Grants PolyU15223918 and
   PolyU15224121,in part by HKPolyU under Grant ZVG0, and in part by China
   Postdoctoral Science Foundation under Grant 2017M621247.
CR Achananuparp P, 2008, LECT NOTES COMPUT SC, V5182, P305, DOI 10.1007/978-3-540-85836-2_29
   Al-Subaihin AA, 2021, IEEE T SOFTWARE ENG, V47, P300, DOI 10.1109/TSE.2019.2891715
   Assi M, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-021-09988-y
   Asuncion HU, 2010, 2010 ACM IEEE 32 INT, V1, P95
   Bettenburg N, 2008, PROC IEEE INT CONF S, P337, DOI 10.1109/ICSM.2008.4658082
   Binkley D., 2014, 22nd International Conference on Program Comprehension (Hyderabad, India, 2014), P26, DOI [DOI 10.1145/2597008.2597150, 10.1145/2597008.2597150]
   Bird C., 2015, The Art and Science of Analyzing Software Data
   Bird S., 2009, NATURAL LANGUAGE PRO
   Blei DM, 2012, COMMUN ACM, V55, P77, DOI 10.1145/2133806.2133826
   Blei DM, 2003, J MACH LEARN RES, V3, P993, DOI 10.1162/jmlr.2003.3.4-5.993
   Campbell J.C., 2015, ART SCI ANAL SOFTWAR, P139, DOI [DOI 10.1016/B978-0-12-411519-4.00006-9, 10.1016/B978-0-12-411519-4.00006-9]
   Chen K., 2013, EFFICIENT ESTIMATION, P2
   Chen N, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P767, DOI 10.1145/2568225.2568263
   CORTES C, 1995, MACH LEARN, V20, P273, DOI 10.1007/BF00994018
   Cruz L, 2019, EMPIR SOFTW ENG, V24, P2438, DOI 10.1007/s10664-019-09701-0
   Di Sorbo A, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P499, DOI 10.1145/2950290.2950299
   Franch X, 2016, 2016 IEEE/ACM 38TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING COMPANION (ICSE-C), P894, DOI 10.1145/2889160.2891051
   Gao CY, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE (ICSE-SEIP 2019), P279, DOI 10.1109/ICSE-SEIP.2019.00040
   Gao CY, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P48, DOI 10.1145/3180155.3180218
   Gao TY, 2021, 2021 CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING (EMNLP 2021), P6894
   Garcia J., 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P552, DOI 10.1109/ASE.2011.6100123
   Garousi V, 2016, COMPUT SCI REV, V19, P56, DOI 10.1016/j.cosrev.2015.12.002
   Guo H, 2020, PROC INT CONF SOFTW, P628, DOI 10.1145/3377811.3380924
   Guzman E, 2016, INT REQUIR ENG CONF, P96, DOI 10.1109/RE.2016.67
   Gwet KL., 2014, Handbook of inter-rater reliability: The definitive guide to measuring the extent of agreement among raters, V4th ed.
   Hemmati H, 2017, SOFTW TEST VERIF REL, V27, DOI 10.1002/stvr.1609
   Hindle A, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P243, DOI 10.1109/ICSM.2012.6405278
   Jha N, 2018, EMPIR SOFTW ENG, V23, P3734, DOI 10.1007/s10664-018-9605-x
   Khalid H, 2015, IEEE SOFTWARE, V32, P70, DOI 10.1109/MS.2014.50
   Krusche S., 2014, P 2 INT WORKSH MOB D, P25
   Krutz DE, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P522, DOI 10.1109/MSR.2015.79
   LANDIS JR, 1977, BIOMETRICS, V33, P159, DOI 10.2307/2529310
   Layman L, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P303, DOI 10.1145/2901739.2901760
   Li SY, 2020, 2020 IEEE/ACM 42ND INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE (ICSE-SEIP), P51, DOI 10.1145/3377813.3381355
   LLOYD SP, 1982, IEEE T INFORM THEORY, V28, P129, DOI 10.1109/TIT.1982.1056489
   Maalej W, 2015, INT REQUIR ENG CONF, P116, DOI 10.1109/RE.2015.7320414
   Man YC, 2016, PROC INT SYMP SOFTW, P138, DOI 10.1109/ISSRE.2016.27
   Mantyla MV, 2018, PROCEEDINGS OF THE 12TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT (ESEM 2018), DOI 10.1145/3239235.3267435
   Newman D., 2010, AUTOMATIC EVALUATION
   Noei E, 2021, IEEE T SOFTWARE ENG, V47, P367, DOI 10.1109/TSE.2019.2893171
   Pagano D, 2013, S VIS LANG HUM CEN C, P125, DOI 10.1109/RE.2013.6636712
   Palomba F, 2018, J SYST SOFTWARE, V137, P143, DOI 10.1016/j.jss.2017.11.043
   Palomba F, 2015, PROC IEEE INT CONF S, P291, DOI 10.1109/ICSM.2015.7332475
   Panichella A, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P522, DOI 10.1109/ICSE.2013.6606598
   Panichella S, 2015, PROC IEEE INT CONF S, P281, DOI 10.1109/ICSM.2015.7332474
   Röder M, 2015, WSDM'15: PROCEEDINGS OF THE EIGHTH ACM INTERNATIONAL CONFERENCE ON WEB SEARCH AND DATA MINING, P399, DOI 10.1145/2684822.2685324
   Scalabrino S, 2019, IEEE T SOFTWARE ENG, V45, P68, DOI 10.1109/TSE.2017.2759112
   Sun XB, 2016, 2016 17TH IEEE/ACIS INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, ARTIFICIAL INTELLIGENCE, NETWORKING AND PARALLEL/DISTRIBUTED COMPUTING (SNPD), P357, DOI 10.1109/SNPD.2016.7515925
   Thomas SW, 2010, IEEE INT WORK C SO, P55, DOI 10.1109/SCAM.2010.13
   Uys JW, 2008, PORTL INT CONF MANAG, P955, DOI 10.1109/PICMET.2008.4599703
   Villarroel L, 2016, PROC INT CONF SOFTW, P14, DOI 10.1145/2884781.2884818
   Vithani Tejas, 2014, International MultiConference of Computer Scientists (IMEC 2014). Proceedings, P596
   Yang N, 2021, 2021 IEEE/ACM 43RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE (ICSE-SEIP 2021), P61, DOI 10.1109/ICSE-SEIP52600.2021.00015
   Yu L, 2018, I C DEPEND SYS NETWO, P418, DOI 10.1109/DSN.2018.00051
   Zhang T, 2021, IEEE T SOFTWARE ENG, V47, P2590, DOI 10.1109/TSE.2019.2956941
   Zheng WJ, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P352, DOI 10.1109/ASE.2019.00041
NR 56
TC 0
Z9 0
U1 3
U2 5
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD AUG
PY 2023
VL 49
IS 8
BP 4135
EP 4151
DI 10.1109/TSE.2023.3285743
PG 17
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA P3WA9
UT WOS:001049968200011
DA 2024-07-18
ER

PT J
AU Zhang, CY
   Liu, B
   Xin, Y
   Yao, LW
AF Zhang, Chunyong
   Liu, Bin
   Xin, Yang
   Yao, Liangwei
TI CPVD: Cross Project Vulnerability Detection Based on Graph Attention
   Network and Domain Adaptation
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Code property graph; cross-domain vulnerability detection; domain
   adaptation representation learning; graph attention network
AB Code vulnerability detection is critical for software security prevention. Vulnerability annotation in large-scale software code is quite tedious and challenging, which requires domain experts to spend a lot of time annotating. This work offers CPVD, a cross-domain vulnerability detection approach based on the challenge of "learning to predict the vulnerability labels of another item quickly using one item with rich vulnerability labels." CPVD uses the code property graph to represent the code and uses the Graph Attention Network and Convolution Pooling Network to extract the graph feature vector. It reduces the distribution between the source domain and target domain data in the Domain Adaptation Representation Learning stage for cross-domain vulnerability detection. In this paper, we test each other on different real-world project codes. Compared with methods without domain adaptation and domain adaptation methods based on natural language processing, CPVD is more general and performs better in cross-domain vulnerability detection tasks. Specifically, for the four datasets of chr_deb, qemu, libav, and sard, they achieved the best results of 70.2%, 81.1%, 59.7%, and 78.1% respectively on the F1-Score, and 88.4%,86.3%, 85.2%, and 88.6% on the AUC.
C1 [Zhang, Chunyong; Yao, Liangwei] Beijing Univ Posts & Telecommun, Sch Cyberspace Secur, Beijing 100876, Peoples R China.
   [Liu, Bin] Anhui Sci & Technol Univ, Coll Informat & Network Engn, Bengbu 233030, Peoples R China.
   [Xin, Yang] Guizhou Univ, Coll Comp Sci & Technol, State Key Lab Publ Big Data, Guiyang 550025, Peoples R China.
   [Yao, Liangwei] Zaozhuang Univ, Sch Informat Sci & Engn, Zaozhuang 277160, Peoples R China.
C3 Beijing University of Posts & Telecommunications; Anhui Science &
   Technology University; Guizhou University; Zaozhuang University
RP Xin, Y (corresponding author), Guizhou Univ, Coll Comp Sci & Technol, State Key Lab Publ Big Data, Guiyang 550025, Peoples R China.
EM chertish_xxd@bupt.edu.cn; ahstuliubin@bupt.edu.cn; yangxin@bupt.edu.cn;
   yaoliangwei_2006@163.com
RI XIN, WANG/KGK-5385-2024; liu, feng/KCL-0778-2024; Zhang,
   xiaohui/KEE-5747-2024; Liu, Zhiyuan/KDP-2606-2024
FU National Natural Science Foundation of China [62233003, 2020YFB1708602,
   2020YFC0833201]
FX his work was supported by the National Natural Science Foundation of
   China under Grants 62233003, 2020YFB1708602, and 2020YFC0833201.
CR Allamanis M, 2018, Arxiv, DOI arXiv:1711.00740
   Alon U, 2019, P ACM PROGRAM LANG, V3, DOI 10.1145/3290353
   An WY, 2020, IEEE INT SYMP PARAL, P337, DOI 10.1109/ISPA-BDCloud-SocialCom-SustainCom51426.2020.00068
   [Anonymous], 2019, P ICML
   Ben-Nun T., 2018, Adv. Neural Inf. Process. Syst., V31, P3588
   Bui NDQ, 2021, PROC INT CONF SOFTW, P1186, DOI 10.1109/ICSE43902.2021.00109
   Cao SC, 2021, INFORM SOFTWARE TECH, V136, DOI 10.1016/j.infsof.2021.106576
   Chakraborty S, 2022, IEEE T SOFTWARE ENG, V48, P3280, DOI 10.1109/TSE.2021.3087402
   Cheng X, 2021, ACM T SOFTW ENG METH, V30, DOI 10.1145/3436877
   Cheng X, 2019, IEEE INT C ENG COMP, P41, DOI 10.1109/ICECCS.2019.00012
   Dale M., 2005, STATIC ANAL VOTEHERE
   Duan X, 2019, PROCEEDINGS OF THE TWENTY-EIGHTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P4665
   Gan ST, 2018, P IEEE S SECUR PRIV, P679, DOI 10.1109/SP.2018.00040
   Ganin Y, 2016, J MACH LEARN RES, V17
   Ghaffarian SM, 2021, INFORM SCIENCES, V553, P189, DOI 10.1016/j.ins.2020.11.053
   Goodfellow I, 2020, COMMUN ACM, V63, P139, DOI 10.1145/3422622
   Humphries A., 2019, arXiv
   Le Quoc V., 2014, P INT C MACH LEARN I
   Li M, 2021, LECT NOTES COMPUT SC, V12918, P243, DOI 10.1007/978-3-030-86890-1_14
   Li Y, 2021, PROCEEDINGS OF THE 29TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '21), P292, DOI 10.1145/3468264.3468597
   Li YJ, 2017, Arxiv, DOI arXiv:1511.05493
   Li Z, 2022, IEEE T DEPEND SECURE, V19, P2821, DOI 10.1109/TDSC.2021.3076142
   Li Z, 2022, IEEE T DEPEND SECURE, V19, P2244, DOI 10.1109/TDSC.2021.3051525
   Li Z, 2018, Arxiv, DOI arXiv:1801.01681
   Lin GJ, 2021, IEEE T DEPEND SECURE, V18, P2469, DOI 10.1109/TDSC.2019.2954088
   Lin GJ, 2020, LECT NOTES COMPUT SC, V11999, P219, DOI 10.1007/978-3-030-41579-2_13
   Lin GJ, 2018, IEEE T IND INFORM, V14, P3289, DOI 10.1109/TII.2018.2821768
   Liu SG, 2022, IEEE T DEPEND SECURE, V19, P438, DOI 10.1109/TDSC.2020.2984505
   Liu SG, 2020, IEEE T FUZZY SYST, V28, P1329, DOI 10.1109/TFUZZ.2019.2958558
   Long MS, 2015, PR MACH LEARN RES, V37, P97
   Mikolov T, 2013, Arxiv, DOI [arXiv:1301.3781, 10.48550/arXiv.1301.3781]
   Mitra S, 1997, INT TEST CONF P, P714, DOI 10.1109/TEST.1997.639684
   Kipf TN, 2017, Arxiv, DOI arXiv:1609.02907
   Nguyen V, 2022, Arxiv, DOI arXiv:2209.10406
   Okun V, 2013, Special Publication (NIST SP), DOI DOI 10.6028/NIST.SP.500-297
   Pennington J., 2014, P 2014 C EMP METH NA, P1532
   Ramos DA, 2015, PROCEEDINGS OF THE 24TH USENIX SECURITY SYMPOSIUM, P49
   Sanderson M, 2010, NAT LANG ENG, V16, P100, DOI 10.1017/S1351324909005129
   Shu R, 2018, Arxiv, DOI arXiv:1802.08735
   Sutton M., 2007, Fuzzing: brute force vulnerability discovery
   Nguyen V, 2019, IEEE IJCNN, DOI 10.1109/ijcnn.2019.8851923
   Nguyen V, 2020, LECT NOTES ARTIF INT, V12084, P699, DOI 10.1007/978-3-030-47426-3_54
   Veličkovic P, 2018, Arxiv, DOI arXiv:1710.10903
   Wang HT, 2021, IEEE T INF FOREN SEC, V16, P1943, DOI 10.1109/TIFS.2020.3044773
   Wang M, 2018, NEUROCOMPUTING, V312, P135, DOI 10.1016/j.neucom.2018.05.083
   Xie T, 2009, I C DEPEND SYS NETWO, P359, DOI 10.1109/DSN.2009.5270315
   Xu KYL, 2018, PR MACH LEARN RES, V80
   Yamaguchi F, 2014, P IEEE S SECUR PRIV, P590, DOI 10.1109/SP.2014.44
   Ye GX, 2020, INT CONFER PARA, P111, DOI 10.1145/3410463.3414670
   Yu ZP, 2020, AAAI CONF ARTIF INTE, V34, P1145
   Zhang C., 2022, ARXIV
   Zhang J, 2019, PROC INT CONF SOFTW, P783, DOI 10.1109/ICSE.2019.00086
   Zhang S, 2015, INF SECUR J, V24, P194, DOI 10.1080/19393555.2015.1111961
   Zheng WN, 2021, Arxiv, DOI arXiv:2109.02527
   Zheng YH, 2021, 2021 IEEE/ACM 43RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE (ICSE-SEIP 2021), P111, DOI 10.1109/ICSE-SEIP52600.2021.00020
   Zhou YQ, 2019, ADV NEUR IN, V32
   Zhuang Y., 2021, arXiv
   Zou DQ, 2021, IEEE T DEPEND SECURE, V18, P2224, DOI 10.1109/TDSC.2019.2942930
NR 58
TC 3
Z9 3
U1 14
U2 29
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD AUG
PY 2023
VL 49
IS 8
BP 4152
EP 4168
DI 10.1109/TSE.2023.3285910
PG 17
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA P3WA9
UT WOS:001049968200012
DA 2024-07-18
ER

PT J
AU Das, S
   Deb, N
   Chaki, N
   Cortesi, A
AF Das, Souvick
   Deb, Novarun
   Chaki, Nabendu
   Cortesi, Agostino
TI Driving the Technology Value Stream by Analyzing App Reviews
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Continuous software development; technology value stream; NLP; app
   reviews
AB An emerging feature of mobile application software is the need to quickly produce new versions to solve problems that emerged in previous versions. This helps adapt to changing user needs and preferences. In a continuous software development process, the user reviews collected by the apps themselves can play a crucial role to detect which components need to be reworked. This paper proposes a novel framework that enables software companies to drive their technology value stream based on the feedback (or reviews) provided by the end-users of an application. The proposed end-to-end framework exploits different Natural Language Processing (NLP) tasks to best understand the needs and goals of the end users. We also provide a thorough and in-depth analysis of the framework, the performance of each of the modules, and the overall contribution in driving the technology value stream. An analysis of reviews with sixteen popular Android Play Store applications from various genres over a long period of time provides encouraging evidence of the effectiveness of the proposed approach.
C1 [Das, Souvick; Cortesi, Agostino] Ca Foscari Univ, DAIS Dept, I-30123 Venice, Italy.
   [Deb, Novarun] Indian Inst Informat Technol IIIT, Vadodara 382028, Gujarat, India.
   [Chaki, Nabendu] Univ Calcutta, Dept Comp Sci & Engn, Kolkata 700073, West Bengal, India.
C3 Universita Ca Foscari Venezia; Indian Institute of Information
   Technology Allahabad; University of Calcutta
RP Das, S (corresponding author), Ca Foscari Univ, DAIS Dept, I-30123 Venice, Italy.
EM souvik.cmsa019@gmail.com; novarun.db@gmail.com; nabendu@ieee.org;
   cortesi@unive.it
RI Cortesi, Agostino/F-9637-2011; Deb, Novarun/X-6133-2018; Chaki,
   Nabendu/A-5869-2015
OI Cortesi, Agostino/0000-0002-0946-5440; Deb, Novarun/0000-0003-3680-3625;
   DAS, SOUVICK/0000-0002-3314-2537; Chaki, Nabendu/0000-0003-3242-680X
FU Next Generation EU [ECS00000043, H43C22000540006]; Ca' Foscari SPIN2021
   project RESSA_ROB
FX This work was supported in part by the Next Generation EU under Grants
   ECS00000043 iNEST and CUP H43C22000540006 and in part by Ca' Foscari
   SPIN2021 project RESSA_ROB.& nbsp;
CR [Anonymous], 2012, P 2 ACM C DATA APPL, DOI DOI 10.1145/2133601.2133640
   Bai H., 2020, BINARYBERT PUSHING L
   Beetz F, 2022, IEEE SOFTWARE, V39, P70, DOI 10.1109/MS.2021.3119106
   Bhaskar A, 2023, Arxiv, DOI arXiv:2211.15914
   Blei DM, 2003, J MACH LEARN RES, V3, P993, DOI 10.1162/jmlr.2003.3.4-5.993
   Campos R, 2020, INFORM SCIENCES, V509, P257, DOI 10.1016/j.ins.2019.09.013
   Carreño LVG, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P582, DOI 10.1109/ICSE.2013.6606604
   Cer Daniel, 2017, arXiv
   Chen N, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P767, DOI 10.1145/2568225.2568263
   Ciurumelea A, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P91, DOI 10.1109/SANER.2017.7884612
   Cunningham W., 1993, OOPS Messenger, V4, P29
   Dabrowski J, 2020, LECT NOTES COMPUT SC, V12127, P401, DOI 10.1007/978-3-030-49435-3_25
   Devlin J, 2019, 2019 CONFERENCE OF THE NORTH AMERICAN CHAPTER OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS: HUMAN LANGUAGE TECHNOLOGIES (NAACL HLT 2019), VOL. 1, P4171
   Di Sorbo A, 2021, PROC IEEE INT CONF S, P569, DOI 10.1109/ICSME52107.2021.00058
   Di Sorbo A, 2021, J SOFTW-EVOL PROC, V33, DOI 10.1002/smr.2316
   Di Sorbo A, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P499, DOI 10.1145/2950290.2950299
   Forsgren N, 2017, LECT NOTES COMPUT SC, V10243, P436, DOI 10.1007/978-3-319-59144-5_27
   Franzmann Daniel, 2020, ACM Transactions on Social Computing, V3, DOI 10.1145/3409585
   Gao CY, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P48, DOI 10.1145/3180155.3180218
   Gao CY, 2015, 2015 IEEE 26TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING (ISSRE), P35, DOI 10.1109/ISSRE.2015.7381797
   Genc-Nayebi N, 2017, J SYST SOFTWARE, V125, P207, DOI 10.1016/j.jss.2016.11.027
   Gu XD, 2015, IEEE INT CONF AUTOM, P760, DOI 10.1109/ASE.2015.57
   Guzman Emitza, 2015, 2015 ACM/IEEE International Symposium on Empirical Software Engineering and Measurement (ESEM). Proceedings, P1, DOI 10.1109/ESEM.2015.7321214
   Guzman E, 2014, 2014 SECOND IEEE WORKING CONFERENCE ON SOFTWARE VISUALIZATION (VISSOFT), P167, DOI 10.1109/VISSOFT.2014.33
   Guzman E, 2014, INT REQUIR ENG CONF, P153, DOI 10.1109/RE.2014.6912257
   Hadiwinoto Christian, 2014, P 18 C COMP NAT LANG, P1, DOI [DOI 10.3115/V1/W14-1701, 10.3115/v1/W14-1701]
   Harman M., 2012, 2012 9th IEEE Working Conference on Mining Software Repositories (MSR 2012), P108, DOI 10.1109/MSR.2012.6224306
   Hendrickx I., 2019, arXiv
   Hulth A, 2003, PROCEEDINGS OF THE 2003 CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING, P216
   Iacob C, 2013, IEEE WORK CONF MIN S, P41, DOI 10.1109/MSR.2013.6624001
   Jiang H, 2019, ACM T SOFTW ENG METH, V28, DOI 10.1145/3344158
   Johann T, 2017, INT REQUIR ENG CONF, P21, DOI 10.1109/RE.2017.71
   Khalid H, 2015, IEEE SOFTWARE, V32, P70, DOI 10.1109/MS.2014.50
   Lewis M., 2020, P ACL
   Lin CY, 2004, ROUGE: A Package for Automatic Evaluation of Summaries, P74, DOI DOI 10.1253/JCJ.34.1213
   Liu Y., 2019, ROBERTA ROBUSTLY OPT
   Loshchilov I., 2019, DECOUPLED WEIGHT DEC
   Maalej W, 2016, REQUIR ENG, V21, P311, DOI 10.1007/s00766-016-0251-9
   Malik H, 2020, FUTURE GENER COMP SY, V107, P659, DOI 10.1016/j.future.2018.02.008
   Martens D, 2019, EMPIR SOFTW ENG, V24, P3316, DOI 10.1007/s10664-019-09706-9
   Martens D, 2019, IEEE SOFTWARE, V36, P32, DOI 10.1109/MS.2019.2923603
   McIlroy S, 2016, EMPIR SOFTW ENG, V21, P1067, DOI 10.1007/s10664-015-9375-7
   Mihalcea R., 2004, P 2004 C EMPIRICAL M, P404, DOI DOI 10.3115/1219044.1219064
   Mikolov Tomas, 2013, EFFICIENT ESTIMATION
   Nakov P., 2019, SEMEVAL 2016 TASK 4
   Nallapati R, 2017, AAAI CONF ARTIF INTE, P3075
   Nguyen T., 2016, PROC WORKSHOP COGN C
   Pagano D, 2013, S VIS LANG HUM CEN C, P125, DOI 10.1109/RE.2013.6636712
   Panichella Sebastiano, 2012, 2012 IEEE 20th International Conference on Program Comprehension, P63
   Panichella S, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P1023, DOI 10.1145/2950290.2983938
   Panichella S, 2015, PROC IEEE INT CONF S, P281, DOI 10.1109/ICSM.2015.7332474
   Peng ZL, 2017, L N INST COMP SCI SO, V201, P312, DOI 10.1007/978-3-319-59288-6_28
   Raffel C, 2020, J MACH LEARN RES, V21
   Rose D., 2010, TEXT MINING APPL THE, V1, P1, DOI [DOI 10.1002/9780470689646.CH1, 10.1002/9780470689646.CH1]
   Rosenthal S., 2019, SEMEVAL 2017 TASK 4
   Rothe S, 2022, Arxiv, DOI arXiv:2106.03830
   Sanh, 2019, P 5 WORKSH EN EFF MA
   Scalabrino S., 2017, LISTENING CROWD RELE, V45, P68
   Tao CQ, 2020, INFORM SOFTWARE TECH, V122, DOI 10.1016/j.infsof.2020.106290
   Thorne James, 2018, P 2018 C N AM CHAPT, P809, DOI DOI 10.18653/V1/N18-1074
   Virmani M, 2015, FIFTH INTERNATIONAL CONFERENCE ON THE INNOVATIVE COMPUTING TECHNOLOGY (INTECH 2015), P78, DOI 10.1109/INTECH.2015.7173368
   Wang Alex, 2018, ABS180407461 CORR, DOI DOI 10.18653/V1/W18-5446
   Wang Kexin., 2021, Tsdae: Using transformer-based sequential denoising auto-encoder for unsupervised sentence embedding learning
   Williams Adina, 2018, P C N AM CHAPT ASS C, P1112, DOI DOI 10.18653/V1/N18-1101
   Witten IH, 2005, DESIGN USABILITY DIG, P129
   Wolf Thomas, 2019, HUGGINGFACES TRANSFO
   Yin WP, 2019, 2019 CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING AND THE 9TH INTERNATIONAL JOINT CONFERENCE ON NATURAL LANGUAGE PROCESSING (EMNLP-IJCNLP 2019), P3914
   You Y, 2018, PROC INT CONF PARAL, DOI 10.1145/3225058.3225069
   Zhang X, 2015, ADV NEUR IN, V28
   Zhou Y, 2021, IEEE T SOFTWARE ENG, V47, P2755, DOI 10.1109/TSE.2020.2967383
NR 70
TC 0
Z9 0
U1 2
U2 4
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUL
PY 2023
VL 49
IS 7
BP 3753
EP 3770
DI 10.1109/TSE.2023.3270708
PG 18
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA M9RA6
UT WOS:001033501500006
OA Green Submitted, hybrid
DA 2024-07-18
ER

PT J
AU Li, BY
   Smidts, C
AF Li, Boyuan
   Smidts, Carol
TI A Zone-Based Model for Analysis of Dependent Failures in Requirements
   Inspection
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Inspection; Analytical models; Data models; Software; Estimation; Power
   system protection; Power system faults; Common cause failures; dependent
   failures; requirements inspection; zone-based model
ID COMMON-CAUSE FAILURES; METHODOLOGY; SIMULATION; DEFECTS
AB In the software development life cycle, the quality of the requirements specification affects the overall quality of the subsequent phases and hence, the software product. The requirements specification is usually inspected by an inspection team to detect defects. To enhance the quality of the requirements specification, one conventional strategy usually used is adding redundancies to the inspection team. However, this strategy suffers from the problem of dependent failures of the redundant inspectors which was not studied systematically in previous research. To analyze the dependent failures and independent failures in an inspection team, this paper first defines the independent failures and dependent failures in an inspection team from the perspective of human errors. Then a quantification model, i.e., the Zone-based Model, is proposed to analyze the dependent and independent failures. The Zone-based Model considers the following situations: 1) the probability of failures of an inspector may be high; 2) the probability of failures of the inspectors may be different; 3) the failures in an inspection team can be a combination of dependent failures and independent failures. By considering all those situations, the Z model has a meaningful interpretation and a convincing assessment of the failures of an inspection team. To verify the effectiveness of the new model, the Zone-based model is compared to conventional models using simulation data. The results show that the Zone-based model is significantly better than the traditional models in analyzing the independent and dependent failures.
C1 [Li, Boyuan; Smidts, Carol] Ohio State Univ, Dept Mech & Aerosp Engn, Columbus, OH 43210 USA.
C3 University System of Ohio; Ohio State University
RP Li, BY (corresponding author), Ohio State Univ, Dept Mech & Aerosp Engn, Columbus, OH 43210 USA.
EM li.4935@buckeyemail.osu.edu; smidts.1@osu.edu
RI WEI, ZHEN/KHU-7176-2024
OI Smidts, Carol/0000-0001-7867-023X; Li, Boyuan/0000-0002-1701-8624
FU U.S. Department of Energy, Office of Nuclear Energy, Nuclear Energy
   Enabling Technologies (NEET) program [DE-NE0008434]; DOE Office of
   Nuclear Energy's Nuclear Energy University Program [DE-NE308896];
   Department of Mechanical and Aerospace Engineering, Ohio State
   University
FX This material is based upon the work supported by the U.S. Department of
   Energy, Office of Nuclear Energy, Nuclear Energy Enabling Technologies
   (NEET) program under Grant DE-NE0008434. This research is performed
   using funding received from the DOE Office of Nuclear Energy's Nuclear
   Energy University Program under Grant DE-NE308896. This research is also
   funded by the Department of Mechanical and Aerospace Engineering, the
   Ohio State University.& nbsp;& nbsp;
CR Alshazly AA, 2014, ALEX ENG J, V53, P513, DOI 10.1016/j.aej.2014.06.001
   [Anonymous], 1983, The architecture of cognition
   Atwood C. L., 1983, NUREGCR2098 US NUCL
   Baldick R, 2008, IEEE POW ENER SOC GE, P52
   Berry DM, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-021-09986-0
   Chang YHJ, 2007, RELIAB ENG SYST SAFE, V92, P1014, DOI 10.1016/j.ress.2006.05.010
   Dittman B., 2017, P 12 NUCL PLANT INST, P2031
   Ferrari A, 2018, EMPIR SOFTW ENG, V23, P3684, DOI 10.1007/s10664-018-9596-7
   Fleming K., 1974, GAA13284
   Fleming K., 1985, NP3967 EPRI
   Goswami A, 2013, PROC INT SYMP SOFTW, P330, DOI 10.1109/ISSRE.2013.6698886
   Griffith CD, 2011, RELIAB ENG SYST SAFE, V96, P1437, DOI 10.1016/j.ress.2011.06.005
   He Lulu, 2006, 2006 INT S EMP SOFTW, P95
   HOKSTAD P, 1988, RELIAB ENG SYST SAFE, V23, P127, DOI 10.1016/0951-8320(88)90018-X
   HUMPHREYS P, 1991, RELIAB ENG SYST SAFE, V34, P417, DOI 10.1016/0951-8320(91)90111-J
   Kantorowitz E., 1997, Requirements Engineering, V2, P152, DOI 10.1007/BF02802773
   Li B., 2018, P IEEE ANN REL MAINT, P1
   Li BY, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-021-10001-9
   MARTIN J, 1990, COMMUN ACM, V33, P225, DOI 10.1145/75577.75587
   McHugh ML, 2012, BIOCHEM MEDICA, V22, P276, DOI 10.11613/bm.2012.031
   Mortenson Torrey, 2021, Advances in Safety Management and Human Performance. Proceedings of the AHFE 2021 Virtual Conferences on Safety Management and Human Factors, and Human Error, Reliability, Resilience, and Performance. Lecture Notes in Networks and Systems (LNNS 262), P55, DOI 10.1007/978-3-030-80288-2_7
   MOSLEH A, 1991, RELIAB ENG SYST SAFE, V34, P249, DOI 10.1016/0951-8320(91)90104-F
   Mosleh A., 1987, P 9 INT C STRUCT MEC, P202
   PORTER AA, 1995, IEEE T SOFTWARE ENG, V21, P563, DOI 10.1109/32.391380
   Rejc ZB, 2014, J LOSS PREVENT PROC, V29, P144, DOI 10.1016/j.jlp.2014.02.009
   Sakurahara T, 2019, RELIAB ENG SYST SAFE, V185, P84, DOI 10.1016/j.ress.2018.12.007
   Signoret J. P., 2021, DEPENDENT COMMON CAU, P103
   Smidts C, 1997, RELIAB ENG SYST SAFE, V55, P51, DOI 10.1016/S0951-8320(96)00104-4
   Smidts C. S., 2011, NUREGCR704 US NUCL R
   Stutzke MA, 2001, IEEE T RELIAB, V50, P184, DOI 10.1109/24.963126
   Vulpe A., 1997, P T 14 INT C STRUCT, P103
   Wagner S, 2019, ACM T SOFTW ENG METH, V28, DOI 10.1145/3306607
   Zhao L, 2022, ACM COMPUT SURV, V54, DOI 10.1145/3444689
   Zhou TT, 2020, RELIAB ENG SYST SAFE, V195, DOI 10.1016/j.ress.2019.106699
   Zhou TT, 2018, RELIAB ENG SYST SAFE, V171, P34, DOI 10.1016/j.ress.2017.11.015
NR 35
TC 0
Z9 0
U1 3
U2 3
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUN 1
PY 2023
VL 49
IS 6
BP 3581
EP 3598
DI 10.1109/TSE.2023.3266157
PG 18
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA J9KW5
UT WOS:001012752300013
DA 2024-07-18
ER

PT J
AU Aghababaeyan, Z
   Abdellatif, M
   Briand, L
   Ramesh, S
   Bagherzadeh, M
AF Aghababaeyan, Zohreh
   Abdellatif, Manel
   Briand, Lionel
   Ramesh, S.
   Bagherzadeh, Mojtaba
TI Black-Box Testing of Deep Neural Networks through Test Case Diversity
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Measurement; Testing; Feature extraction; Closed box; Fault detection;
   Neurons; Computational modeling; Coverage; deep neural network;
   diversity; faults; test
ID CLASSIFICATION; EFFICIENT; DISTANCE
AB Deep Neural Networks (DNNs) have been extensively used in many areas including image processing, medical diagnostics and autonomous driving. However, DNNs can exhibit erroneous behaviours that may lead to critical errors, especially when used in safety-critical systems. Inspired by testing techniques for traditional software systems, researchers have proposed neuron coverage criteria, as an analogy to source code coverage, to guide the testing of DNNs. Despite very active research on DNN coverage, several recent studies have questioned the usefulness of such criteria in guiding DNN testing. Further, from a practical standpoint, these criteria are white-box as they require access to the internals or training data of DNNs, which is often not feasible or convenient. Measuring such coverage requires executing DNNs with candidate inputs to guide testing, which is not an option in many practical contexts. In this paper, we investigate diversity metrics as an alternative to white-box coverage criteria. For the previously mentioned reasons, we require such metrics to be black-box and not rely on the execution and outputs of DNNs under test. To this end, we first select and adapt three diversity metrics and study, in a controlled manner, their capacity to measure actual diversity in input sets. We then analyze their statistical association with fault detection using four datasets and five DNNs. We further compare diversity with state-of-the-art white-box coverage criteria. As a mechanism to enable such analysis, we also propose a novel way to estimate fault detection in DNNs. Our experiments show that relying on the diversity of image features embedded in test input sets is a more reliable indicator than coverage criteria to effectively guide DNN testing. Indeed, we found that one of our selected black-box diversity metrics far outperforms existing coverage criteria in terms of fault-revealing capability and computational time. Results also confirm the suspicions that state-of-the-art coverage criteria are not adequate to guide the construction of test input sets to detect as many faults as possible using natural inputs.
C1 [Aghababaeyan, Zohreh] Univ Ottawa, Sch EECS, Ottawa, ON K1N 6N5, Canada.
   [Abdellatif, Manel] Ecole Technol Super, Software & Informat Technol Engn Dept, Montreal, PQ H3C 1K3, Canada.
   [Abdellatif, Manel; Briand, Lionel; Bagherzadeh, Mojtaba] Univ Ottawa, Sch EECS, Ottawa, ON K1N 6N5, Canada.
   [Briand, Lionel] Univ Luxembourg, SnT Ctr Secur Reliabil & Trust, L-4365 Esch Sur Alzette, Luxembourg.
   [Ramesh, S.] Gen Motors, Dept Res & Dev, Warren, MI 48092 USA.
C3 University of Ottawa; University of Quebec; Ecole de Technologie
   Superieure - Canada; University of Ottawa; University of Luxembourg;
   General Motors
RP Aghababaeyan, Z (corresponding author), Univ Ottawa, Sch EECS, Ottawa, ON K1N 6N5, Canada.
EM zagha052@uottawa.ca; Manel.abdellatif@etsmtl.ca; Lbriand@uottawa.ca;
   Ramesh.s@gm.com; Mbagherz@cisco.com
RI Abdellatif, manel/JFS-0902-2023
OI S, Ramesh/0000-0002-8501-7447; Briand, Lionel/0000-0002-1393-1010;
   Abdellatif, Manel/0000-0002-8647-1676; Aghababaeyan,
   Zohreh/0000-0001-9375-4095
FU General Motors and Canada Research Chair; Discovery Grant programs of
   the Natural Sciences and Engineering Research Council of Canada (NSERC)
FX This work was supported by General Motors and Canada Research Chair and
   Discovery Grant programs of the Natural Sciences and Engineering
   Research Council of Canada (NSERC). Recommended for acceptance by J.
   Sun.
CR Aghababaeyan Z., 2022, DNN TESTING REPLICAT
   Alex K., 2009, THE CIFAR 10 DATASET
   [Anonymous], 2017, ELECT IMAG, DOI [DOI 10.2352/ISSN.2470-1173.2017.19.AVM-023, 10.2352/ISSN.2470-1173.2017.19.AVM-023]
   Attaoui M, 2023, ACM T SOFTW ENG METH, V32, DOI 10.1145/3550271
   Bengio Y., 2013, P 30 INT C MACHINE L, P552
   Bengio Y, 2013, IEEE T PATTERN ANAL, V35, P1798, DOI 10.1109/TPAMI.2013.50
   Bennett CH, 1998, IEEE T INFORM THEORY, V44, P1407, DOI 10.1109/18.681318
   Biagiola M, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P142, DOI 10.1145/3338906.3338970
   Biagiola M, 2017, LECT NOTES COMPUT SC, V10452, P18, DOI 10.1007/978-3-319-66299-2_2
   Bonett DG, 2000, PSYCHOMETRIKA, V65, P23, DOI 10.1007/BF02294183
   Borbely RS, 2016, J COMPUT VIROL HACKI, V12, P235, DOI 10.1007/s11416-015-0260-0
   Bueno P. M., 2007, P 2 INT WORKSH RAND, P10
   Byun T, 2021, PROC INT SYMP SOFTW, P309, DOI 10.1109/ISSRE52982.2021.00041
   Cai X., 2005, Proceedings of the 1st International Workshop on Advances in Model-based Testing, P1, DOI DOI 10.1145/1083274.1083288
   Cartaxo EG, 2011, SOFTW TEST VERIF REL, V21, P75, DOI 10.1002/stvr.413
   Celis Elisa, 2018, P 35 INT C MACHINE L, V80, P716
   Chen BY, 2021, PLOS ONE, V16, DOI 10.1371/journal.pone.0246893
   Chen TY, 2010, J SYST SOFTWARE, V83, P60, DOI 10.1016/j.jss.2009.02.022
   Chen TY, 2004, QSIC 2004: PROCEEDINGS OF THE FOURTH INTERNATIONAL CONFERENCE ON QUALITY SOFTWARE, P79
   Cilibrasi R, 2005, IEEE T INFORM THEORY, V51, P1523, DOI 10.1109/TIT.2005.844059
   Cohen AR, 2015, IEEE T PATTERN ANAL, V37, P1602, DOI 10.1109/TPAMI.2014.2375175
   Coltuc D, 2018, ENTROPY-SWITZ, V20, DOI 10.3390/e20020099
   Neto FGD, 2018, INT WORKSH AUTOMAT, P39, DOI 10.1145/3194733.3194744
   Debelee TG, 2020, J IMAGING, V6, DOI 10.3390/jimaging6110121
   Diaz-Papkovich A, 2021, J HUM GENET, V66, P85, DOI 10.1038/s10038-020-00851-4
   Dong YZ, 2020, IEEE INT C ENG COMP, P73, DOI 10.1109/ICECCS51672.2020.00016
   Droste S, 2002, THEOR COMPUT SCI, V276, P51, DOI 10.1016/S0304-3975(01)00182-7
   Eiben G, 2008, NAT COMPUT SER, P153, DOI 10.1007/978-3-540-72960-0_8
   Elfeki M, 2019, PR MACH LEARN RES, V97
   Ester M., 1997, Proceedings of the Third International Conference on Knowledge Discovery and Data Mining, P10
   Fahmy H, 2021, IEEE T RELIAB, V70, P1641, DOI 10.1109/TR.2021.3074750
   Feldt R, 2016, IEEE INT CONF SOFTW, P223, DOI 10.1109/ICST.2016.33
   Gao XY, 2022, PROC INT CONF SOFTW, P73, DOI 10.1145/3510003.3510232
   Gerasimou S, 2020, PROC INT CONF SOFTW, P702, DOI 10.1145/3377811.3380391
   Giusti A, 2013, IEEE IMAGE PROC, P4034, DOI 10.1109/ICIP.2013.6738831
   Gong BQ, 2014, ADV NEUR IN, V27
   Gong ZQ, 2019, IEEE ACCESS, V7, P64323, DOI 10.1109/ACCESS.2019.2917620
   Harel-Canada F, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P851, DOI 10.1145/3368089.3409754
   Hemmati H., 2015, P IEEEE 8 INT C SOFT, P1
   Hemmati H, 2013, ACM T SOFTW ENG METH, V22, DOI 10.1145/2430536.2430540
   Henard C, 2016, PROC INT CONF SOFTW, P523, DOI 10.1145/2884781.2884791
   Hershey JR, 2007, INT CONF ACOUST SPEE, P317, DOI 10.1109/icassp.2007.366913
   Hozumi Y, 2021, COMPUT BIOL MED, V131, DOI 10.1016/j.compbiomed.2021.104264
   Hu Q, 2022, ACM T SOFTW ENG METH, V31, DOI 10.1145/3511598
   Jolliffe IT, 2016, PHILOS T R SOC A, V374, DOI 10.1098/rsta.2015.0202
   Joswiak M, 2019, CONTROL ENG PRACT, V93, DOI 10.1016/j.conengprac.2019.104189
   Kang B., 2013, PROC INT C NEURAL IN, P2321
   Kaur Taranjit, 2019, 2019 International Conference on Information Technology (ICIT), P94, DOI 10.1109/ICIT48102.2019.00023
   Kim J, 2019, PROC INT CONF SOFTW, P1039, DOI 10.1109/ICSE.2019.00108
   Kocsor A, 2006, BIOINFORMATICS, V22, P407, DOI 10.1093/bioinformatics/bti806
   Kolmogorov A. N., 1968, International Journal of Computer Mathematics, V2, P157, DOI 10.1080/00207166808803030
   Krause A, 2008, J MACH LEARN RES, V9, P235
   Kulesza A, 2013, Arxiv, DOI arXiv:1207.6083
   Langford MA, 2021, ACM T AUTON ADAP SYS, V15, DOI 10.1145/3460959
   Leon D, 2003, ISSRE 2003: 14TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P442, DOI 10.1109/ISSRE.2003.1251065
   Li Deng, 2012, IEEE Signal Processing Magazine, V29, P141, DOI [10.1109/MSP.2012.2211477, DOI 10.1109/MSP.2012.2211477]
   Li M, 2004, IEEE T INFORM THEORY, V50, P3250, DOI 10.1109/TIT.2004.838101
   Li ZN, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P499, DOI 10.1145/3338906.3338930
   Li ZN, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: NEW IDEAS AND EMERGING RESULTS (ICSE-NIER 2019), P89, DOI 10.1109/ICSE-NIER.2019.00031
   Lin H, 2012, Arxiv, DOI arXiv:1210.4871
   Ma L, 2018, IEEE INT CONF AUTOM, P120, DOI 10.1145/3238147.3238202
   Mallick PK, 2019, IEEE ACCESS, V7, P46278, DOI 10.1109/ACCESS.2019.2902252
   McInnes L, 2020, Arxiv, DOI [arXiv:1802.03426, DOI 10.48550/ARXIV.1802.03426, 10.21105/joss.00861]
   McInnes L, 2017, INT CONF DAT MIN WOR, P33, DOI 10.1109/ICDMW.2017.12
   Mesbah A, 2012, IEEE T SOFTWARE ENG, V38, P35, DOI 10.1109/TSE.2011.28
   Moulavi D., 2014, P 2014 SIAM INT C DA, P839, DOI DOI 10.1137/1.9781611973440.96
   Mousser W, 2019, PROCEEDINGS OF THE 2019 5TH INTERNATIONAL CONFERENCE ON COMPUTER AND TECHNOLOGY APPLICATIONS (ICCTA 2019), P6, DOI 10.1145/3323933.3324060
   Nafchi HZ, 2016, IEEE ACCESS, V4, P5579, DOI 10.1109/ACCESS.2016.2604042
   Netzer Y, 2011, PROC NIPS WORKSHOP D, P1
   Pan J, 2012, 2012 8TH INTERNATIONAL SYMPOSIUM ON CHINESE SPOKEN LANGUAGE PROCESSING, P301, DOI 10.1109/ISCSLP.2012.6423452
   Pearson S, 2017, PROC INT CONF SOFTW, P609, DOI 10.1109/ICSE.2017.62
   Pei KX, 2017, PROCEEDINGS OF THE TWENTY-SIXTH ACM SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES (SOSP '17), P1, DOI 10.1145/3132747.3132785
   Rajinikanth V, 2020, APPL SCI-BASEL, V10, DOI 10.3390/app10103429
   ROUSSEEUW PJ, 1987, J COMPUT APPL MATH, V20, P53, DOI 10.1016/0377-0427(87)90125-7
   Sekhon J, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: NEW IDEAS AND EMERGING RESULTS (ICSE-NIER 2019), P85, DOI 10.1109/ICSE-NIER.2019.00030
   Simonyan K, 2015, Arxiv, DOI arXiv:1409.1556
   Smite D, 2008, 2008 3RD IEEE INTERNATIONAL CONFERENCE GLOBAL SOFTWARE ENGINEERING, PROCEEDINGS, P173, DOI 10.1109/ICGSE.2008.22
   Stocco A, 2020, PROC INT CONF SOFTW, P359, DOI 10.1145/3377811.3380353
   Sun YC, 2019, ACM T EMBED COMPUT S, V18, DOI 10.1145/3358233
   Tian YC, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P303, DOI 10.1145/3180155.3180220
   van der Maaten L, 2008, J MACH LEARN RES, V9, P2579
   Wand M.P., 1994, KERNEL SMOOTHING
   Wong WE, 2014, IEEE T RELIAB, V63, P290, DOI 10.1109/TR.2013.2285319
   Woolson RF, 2007, Wiley encyclopedia of clinical trials, P1, DOI [10.1002/9780471462422.eoct979, DOI 10.1002/9780471462422.EOCT979]
   Xu HT, 2016, IEEE-ACM T AUDIO SPE, V24, P978, DOI 10.1109/TASLP.2016.2537203
   Xu R, 2005, IEEE T NEURAL NETWOR, V16, P645, DOI 10.1109/TNN.2005.845141
   Yan M, 2023, Arxiv, DOI arXiv:2010.04946
   Yan SA, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P775, DOI 10.1145/3368089.3409671
   Yang Feng, 2020, ISSTA '20: Proceedings of the 29th ACM SIGSOFT International Symposium on Software Testing and Analysis, P177, DOI 10.1145/3395363.3397357
   Yang X, 2019, IEEE ACCESS, V7, P11722, DOI 10.1109/ACCESS.2019.2891974
   Zhou T, 2010, P NATL ACAD SCI USA, V107, P4511, DOI 10.1073/pnas.1000488107
   Zohdinasab T, 2021, ISSTA '21: PROCEEDINGS OF THE 30TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P79, DOI 10.1145/3460319.3464811
   Zou DM, 2021, IEEE T SOFTWARE ENG, V47, P332, DOI 10.1109/TSE.2019.2892102
NR 93
TC 7
Z9 7
U1 4
U2 20
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAY 1
PY 2023
VL 49
IS 5
BP 3182
EP 3204
DI 10.1109/TSE.2023.3243522
PG 23
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA G8MH8
UT WOS:000991628700008
OA Green Submitted, Green Published, hybrid
DA 2024-07-18
ER

PT J
AU Madampe, K
   Hoda, R
   Grundy, J
AF Madampe, Kashumi
   Hoda, Rashina
   Grundy, John
TI A Framework for Emotion-Oriented Requirements Change Handling in Agile
   Software Engineering
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Software; Stakeholders; Emotional responses; Codes; Software
   engineering; Productivity; Statistical analysis; Affects; agile;
   changes; emotions; emotional intelligence; human factors; job-related
   affective well-being scale; mixed-methods; requirements; software
   engineering; socio-technical grounded theory; software teams;
   well-being; workplace awareness
AB Background: Requirements Changes (RCs) - the additions/modifications/deletions of functional/non-functional requirements in software products - are challenging for software practitioners to handle. Handling some changes may significantly impact the emotions of the practitioners. Objective: We wanted to know the key challenges that make RC handling difficult, how these impact the emotions of software practitioners, what influences their RC handling, and how RC handling can be made less emotionally challenging. Method: We followed a mixed-methods approach. We conducted two survey studies, with 40 participants and 201 participants respectively. The presentation of key quantitative data was followed by descriptive statistical analysis, and the qualitative data was analysed using Strauss-Corbinian Grounded Theory, and Socio-Technical Grounded Theory analysis techniques. Findings: We found (1) several key factors that make RC handling an emotional challenge, (2) varying emotions that practitioners feel when it is challenging to handle RCs, (3) how stakeholders, including practitioners themselves, peers, managers and customers, influence the RC handling and how practitioners feel due to the stakeholder influence, and (4) practices that can be used to better handle RCs. Conclusion: Some challenges are technical and some are social which also belong to aspects of agile practice, emotional intelligence, and likely belong to cognitive intelligence. Therefore, to better handle RCs with positive emotions in socio-technical environments, agility, emotional intelligence, and cognitive intelligence need to work in synergy with each other.
C1 [Madampe, Kashumi; Hoda, Rashina; Grundy, John] Monash Univ, Fac Informat Technol, Dept Software Syst & Cybersecur, HumaniSE Lab, Clayton, Vic 3800, Australia.
C3 Monash University
RP Madampe, K (corresponding author), Monash Univ, Fac Informat Technol, Dept Software Syst & Cybersecur, HumaniSE Lab, Clayton, Vic 3800, Australia.
EM kashumi.madampe@monash.edu; rashina@gmail.com; john.grundy@monash.edu
RI Madampe, Kashumi/AAY-9008-2021; Grundy, John/I-6681-2012
OI Madampe, Kashumi/0000-0003-1363-8786; Grundy, John/0000-0003-4928-7076;
   Hoda, Rashina/0000-0001-5147-8096
FU Monash Faculty of IT scholarship; ARC [DP200100020, FL190100035]
FX This work was supported by a Monash Faculty of IT scholarship. Madampe
   is supported by ARC Discovery Project under Grant DP200100020. Grundy is
   supported by ARC Laureate Fellowship under Grant FL190100035.
CR [Anonymous], 2014, Proceedings of the 6th international workshop on social software engineering, DOI 10.1145/2661685.2661689
   [Anonymous], 2016, SYRIA STUDIES
   [Anonymous], 2020, 14 STATE AGILE REPOR
   Anwer S, 2019, PROCEEDINGS OF EASE 2019 - EVALUATION AND ASSESSMENT IN SOFTWARE ENGINEERING, P230, DOI 10.1145/3319008.3319031
   Baltes S, 2020, IEEE SOFTWARE, V37, P26, DOI 10.1109/MS.2020.3014178
   Boehm B. W., 2001, PIONEERS THEIR CONTR, P99
   Colomo-Palacios R, 2019, 2019 IEEE/ACM 4TH INTERNATIONAL WORKSHOP ON EMOTION AWARENESS IN SOFTWARE ENGINEERING (SEMOTION 2019), P23, DOI 10.1109/SEmotion.2019.00012
   Colomo-Palacios R, 2011, J UNIVERS COMPUT SCI, V17, P1281
   Colomo-Palacios R, 2010, COMM COM INF SC, V112, P1
   Crawford Broderick., 2014, INT C HUMAN COMPUTER, P307
   Curcio K, 2018, J SYST SOFTWARE, V139, P32, DOI 10.1016/j.jss.2018.01.036
   Curumsing M. K., 2017, THESIS SWINBURNE U T
   Diener E, 2010, SOC INDIC RES, V97, P143, DOI 10.1007/s11205-009-9493-y
   El-Migid M.-A. A., 2022, J SYSTEMS SOFTWARE, V186
   Fisher C.D., 1997, EMOTIONS WORK WHAT P
   Ford D, 2015, 2015 IEEE/ACM 8TH INTERNATIONAL WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING CHASE 2015, P115, DOI 10.1109/CHASE.2015.19
   Fountaine A, 2017, 2017 IEEE/ACM 2ND INTERNATIONAL WORKSHOP ON EMOTION AWARENESS IN SOFTWARE ENGINEERING (SEMOTION 2017), P28, DOI 10.1109/SEmotion.2017.12
   Girardi D, 2022, IEEE T SOFTWARE ENG, V48, P3326, DOI 10.1109/TSE.2021.3087906
   Girardi D, 2018, 2018 IEEE/ACM 3RD INTERNATIONAL WORKSHOP ON EMOTION AWARENESS IN SOFTWARE ENGINEERING (SEMOTION), P51, DOI 10.1145/3194932.3194940
   Graziotin D., 2017, P 21 INT C EVALUATIO, P324, DOI [DOI 10.1145/3084226.3084242, 10.1145/3084226.3084242]
   Graziotin D, 2015, J SOFTW-EVOL PROC, V27, P467, DOI 10.1002/smr.1673
   Graziotin D, 2014, IEEE SOFTWARE, V31, P24, DOI 10.1109/MS.2014.94
   Graziotin D, 2014, PEERJ, V2, DOI 10.7717/peerj.289
   Gross J, 2013, J COGNITIVE NEUROSCI, P16
   Guzman E, 2013, P 2013 9 JOINT M FDN, P671, DOI 10.1145/2491411.2494578
   Harmon-Jones C, 2016, PLOS ONE, V11, DOI 10.1371/journal.pone.0159915
   Heikkilä VT, 2015, PROCEEDINGS 41ST EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS SEAA 2015, P199, DOI 10.1109/SEAA.2015.70
   Hoda R, 2022, IEEE T SOFTWARE ENG, V48, P3808, DOI 10.1109/TSE.2021.3106280
   Hoda R, 2011, INFORM SOFTWARE TECH, V53, P521, DOI 10.1016/j.infsof.2010.10.009
   Inayat I, 2015, COMPUT HUM BEHAV, V51, P915, DOI 10.1016/j.chb.2014.10.046
   Kitchenham BA, 2002, IEEE T SOFTWARE ENG, V28, P721, DOI 10.1109/TSE.2002.1027796
   Kitchenham BA, 2008, Guide to advanced empirical software engineering, P63, DOI [DOI 10.1007/978-1-84800-044-5_3, 10.1007/ 978-1-84800-044-5_3]
   Kolakowska A, 2013, C HUM SYST INTERACT, P532, DOI 10.1109/HSI.2013.6577877
   Koole S, 2009, COGNITION EMOTION, V23, P4, DOI 10.1080/02699930802619031
   Koval P, 2015, COGNITION EMOTION, V29, P831, DOI 10.1080/02699931.2014.948388
   Kuutila M, 2018, PROCEEDINGS OF THE 12TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT (ESEM 2018), DOI 10.1145/3239235.3239245
   Madampe K., 2020, PROC IEEEACM 42 INT, P153
   Madampe K, 2023, IEEE T SOFTWARE ENG, V49, P1171, DOI 10.1109/TSE.2022.3172925
   Madampe K, 2022, Arxiv, DOI arXiv:2206.11603
   Madampe K, 2022, IEEE T SOFTWARE ENG, V48, P3737, DOI 10.1109/TSE.2021.3104732
   Madampe K, 2020, 2020 IEEE/ACM 42ND INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: NEW IDEAS AND EMERGING RESULTS (ICSE-NIER 2020), P37, DOI 10.1145/3377816.3381722
   Madampe K, 2020, 2020 35TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING WORKSHOPS (ASEW 2020), P53, DOI 10.1145/3417113.3422148
   Meyer AN, 2021, IEEE T SOFTWARE ENG, V47, P863, DOI 10.1109/TSE.2019.2904957
   Müller SC, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P688, DOI 10.1109/ICSE.2015.334
   Murgia A., 2014, Proceedings of the 11th working conference on mining software repositories, Ved, P262
   Murgia A, 2018, EMPIR SOFTW ENG, V23, P521, DOI 10.1007/s10664-017-9526-0
   Neupane KP, 2019, PROC IEEE INT CONF S, P252, DOI 10.1109/ICSME.2019.00038
   Novielli N, 2018, IEEE WORK CONF MIN S, P14, DOI 10.1145/3196398.3196453
   Onwuegbuzie AJ, 2007, QUAL QUANT, V41, P233, DOI 10.1007/s11135-006-9000-3
   Pletea D., 2014, 11 WORKING C MSR, P348, DOI [10.1145/2597073.2597117, DOI 10.1145/2597073.2597117]
   Punter T, 2003, 2003 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P80, DOI 10.1109/ISESE.2003.1237967
   Ralph P, 2021, Arxiv, DOI arXiv:2010.03525
   Scherer K.R., 1987, GENEVA STUDIES EMOTI, V1, P1
   Schön EM, 2017, COMPUT STAND INTER, V49, P79, DOI 10.1016/j.csi.2016.08.011
   SlashData Ltd, 2019, GLOB DEV POP REP 201
   Storey MA, 2021, IEEE T SOFTWARE ENG, V47, P2125, DOI 10.1109/TSE.2019.2944354
   Strauss E, 1998, CLIN ORTHOP RELAT R, P2
   Van Katwyk P T, 2000, J Occup Health Psychol, V5, P219
   Van Katwyk P. T., 1999, JAWS IS COPYRIGHT
   VandenBos G.R.E., 2015, APA dictionary of psychology, V2nd, DOI DOI 10.1037/14646-000
   WATSON D, 1988, J PERS SOC PSYCHOL, V54, P1063, DOI 10.1037/0022-3514.54.6.1063
   Werder K, 2018, 2018 IEEE/ACM 3RD INTERNATIONAL WORKSHOP ON EMOTION AWARENESS IN SOFTWARE ENGINEERING (SEMOTION), P20, DOI 10.1145/3194932.3194941
   Wrobel MR, 2016, ACSIS-ANN COMPUT SCI, V8, P1545, DOI 10.15439/2016F212
   Wrobel MR, 2013, C HUM SYST INTERACT, P518, DOI 10.1109/HSI.2013.6577875
   Yang G., 2017, P S APPL COMP SAC 17, P1280, DOI DOI 10.1145/3019612.3019788
NR 65
TC 1
Z9 1
U1 1
U2 6
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAY 1
PY 2023
VL 49
IS 5
BP 3325
EP 3343
DI 10.1109/TSE.2023.3253145
PG 19
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA G8MH8
UT WOS:000991628700016
DA 2024-07-18
ER

PT J
AU López, JAH
   Cuadrado, JS
AF Lopez, Jose Antonio Hernandez
   Cuadrado, Jesus Sanchez
TI Generating Structurally Realistic Models With Deep Autoregressive
   Networks
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Generators; Object oriented modeling; Computational modeling; Task
   analysis; Predictive models; Measurement; Scalability; Model generators;
   realistic models; graph neural networks; recurrent neural networks;
   generative models
AB Model generators are important tools in model-based systems engineering to automate the creation of software models for tasks like testing and benchmarking. Previous works have established four properties that a generator should satisfy: consistency, diversity, scalability, and structural realism. Although several generators have been proposed, none of them is focused on realism. As a result, automatically generated models are typically simple and appear synthetic. This work proposes a new architecture for model generators which is specifically designed to be structurally realistic. Given a dataset consisting of several models deemed as real models, this type of generators is able to produce new models which are structurally similar to the models in the dataset, but are fundamentally novel models. Our implementation, named ModelMime (M2), is based on a deep autoregressive model which combines a Graph Neural Network with a Recurrent Neural Network. We decompose each model into a sequence of edit operations, and the neural network is trained in the task of predicting the next edit operation given a partial model. At inference time, the system produces new models by sampling edit operations and iteratively completing the model. We have evaluated M2 with respect to three state-of-the-art generators, showing that 1) our generator outperforms the others in terms of the structurally realistic property 2) the models generated by M2 are most of the time consistent, 3) the diversity of the generated models is at least the same as the real ones and, 4) the generation process is scalable once the generator is trained.
C1 [Lopez, Jose Antonio Hernandez; Cuadrado, Jesus Sanchez] Univ Murcia, Dept Comp Sci & Syst, Murcia 30100, Spain.
C3 University of Murcia
RP López, JAH (corresponding author), Univ Murcia, Dept Comp Sci & Syst, Murcia 30100, Spain.
EM joseantonio.hernandez6@um.es; jesusc@um.es
RI Hernández López, José Antonio/AGQ-7597-2022; Sanchez Cuadrado,
   Jesus/L-2365-2013
OI Sanchez Cuadrado, Jesus/0000-0001-9755-5616; Hernandez Lopez, Jose
   Antonio/0000-0003-2439-2136
FU Ramon y Cajal 2017 [RYC-2017-237]; MINECO (Spain); European Social Fund;
   Universidad de Murcia
FX This work was supported in part by a Ramon y Cajal 2017 under Grant
   RYC-2017-237, in part by MINECO (Spain), and in part by the European
   Social Fund. The work of Jose Antonio Hernandez Lopez was supported by a
   FPU Grant funded Universidad de Murcia.
CR [Anonymous], 2012, P IEEE 1 INT WORKSH
   [Anonymous], 2015, YAKINDU STATECHART T
   AtlanMod Team (Inria Mines -Nantes Lina), 2014, EMF RAND INST 2014
   Bagan G, 2017, IEEE T KNOWL DATA EN, V29, P856, DOI 10.1109/TKDE.2016.2633993
   Barcelo P., 2020, PROC 8 INT C LEARN R
   Ben Abdessalem R, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1016, DOI 10.1145/3180155.3180160
   Bergmann Gabor, 2011, Theory and Practice of Model Transformations. Proceedings of the 4th International Conference, ICMT 2011, P167, DOI 10.1007/978-3-642-21732-6_12
   Cabot Jordi, 2012, Formal Methods for Model-Driven Engineering. 12th International School of Formal Methods for the Design of Computer, Communication and Software Systems (SFM 2012). Advanced Lectures, P58, DOI 10.1007/978-3-642-30982-3_3
   Chung JY, 2014, Arxiv, DOI arXiv:1412.3555
   Dalal M, 2019, Arxiv, DOI arXiv:1910.07737
   Ehrig K, 2009, SOFTW SYST MODEL, V8, P479, DOI 10.1007/s10270-008-0095-y
   ERDOS P, 1960, B INT STATIST INST, V38, P343
   Gretton A, 2012, J MACH LEARN RES, V13, P723
   Grohe M, 2021, IEEE S LOG, DOI 10.1109/LICS52264.2021.9470677
   Guo XJ, 2020, Arxiv, DOI [arXiv:2007.06686, 10.48550/arXiv.2007.06686, DOI 10.48550/ARXIV.2007.06686]
   López JAH, 2021, 24TH INTERNATIONAL CONFERENCE ON MODEL-DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS 2021), P58, DOI 10.1109/MODELS50736.2021.00015
   Iqbal MZ, 2015, SOFTW SYST MODEL, V14, P483, DOI 10.1007/s10270-013-0328-6
   Jackson D, 2002, ACM T SOFTW ENG METH, V11, P256, DOI 10.1145/505145.505149
   Jackson EK, 2011, LECT NOTES COMPUT SC, V6981, P653, DOI 10.1007/978-3-642-24485-8_48
   Kehrer T, 2016, LECT NOTES COMPUT SC, V9765, P173, DOI 10.1007/978-3-319-42064-6_12
   Li YB, 2018, J CHEMINFORMATICS, V10, DOI 10.1186/s13321-018-0287-6
   Li YJ, 2018, Arxiv, DOI arXiv:1803.03324
   Liao RJ, 2020, Arxiv, DOI arXiv:1910.00760
   Lopez J A. H., 2020, Proc. ACM/IEEE 23rd International Conference on Model Driven Engineering Languages and Systems (MoDELS), P57, DOI DOI 10.1145/3365438.3410947
   Lopez-Paz D, 2018, Arxiv, DOI [arXiv:1610.06545, DOI 10.48550/ARXIV.1610.06545]
   Marinov D, 2001, 16TH ANNUAL INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2001), PROCEEDINGS, P22, DOI 10.1109/ASE.2001.989787
   Marussy K, 2022, IEEE T SOFTWARE ENG, V48, P1610, DOI 10.1109/TSE.2020.3025732
   Micskei Zoltan, 2012, Agent and Multi-Agent Systems. Technologies and Applications. Proceedings 6th KES International Conference, KES-AMSTA 2012, P504, DOI 10.1007/978-3-642-30947-2_55
   Nassar N, 2020, LECT NOTES COMPUT SC, V12076, P224, DOI 10.1007/978-3-030-45234-6_11
   Scarselli F, 2009, IEEE T NEURAL NETWOR, V20, P61, DOI 10.1109/TNN.2008.2005605
   Scheidgen M., 2015, PROC 3 WORKSHOP SCAL, P1
   Schlichtkrull M, 2018, LECT NOTES COMPUT SC, V10843, P593, DOI 10.1007/978-3-319-93417-4_38
   Semeráth O, 2021, SOFTW SYST MODEL, V20, P1713, DOI 10.1007/s10270-021-00884-z
   Semeráth O, 2020, INT J SOFTW TOOLS TE, V22, P57, DOI 10.1007/s10009-019-00530-6
   Semeráth O, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: COMPANION PROCEEDINGS (ICSE-COMPANION 2019), P43, DOI 10.1109/ICSE-Companion.2019.00034
   Semeráth O, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P969, DOI 10.1145/3180155.3180186
   SHEATHER SJ, 1991, J ROY STAT SOC B, V53, P683
   Simonovsky M, 2018, LECT NOTES COMPUT SC, V11139, P412, DOI 10.1007/978-3-030-01418-6_41
   Soltana G, 2020, ACM T SOFTW ENG METH, V29, DOI 10.1145/3381032
   Soltana G, 2017, IEEE INT CONF AUTOM, P872, DOI 10.1109/ASE.2017.8115698
   Steinberg D., 2008, EMF: Eclipse Modeling Framework, Vsecond
   Szárnyas G, 2016, 19TH ACM/IEEE INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS'16), P87, DOI 10.1145/2976767.2976786
   Tortak E, 2007, LECT NOTES COMPUT SC, V4424, P632
   Varro D., 2018, Graph Transformation, Specifications, and Nets, P285
   Watts DJ, 1998, NATURE, V393, P440, DOI 10.1038/30918
   You JX, 2019, Arxiv, DOI [arXiv:1806.02473, DOI 10.48550/ARXIV.1806.02473]
   You JX, 2018, PR MACH LEARN RES, V80
NR 47
TC 2
Z9 2
U1 1
U2 2
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD APR 1
PY 2023
VL 49
IS 4
BP 2661
EP 2676
DI 10.1109/TSE.2022.3228630
PG 16
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA E9NM9
UT WOS:000978723600071
DA 2024-07-18
ER

PT J
AU Raatikainen, M
   Motger, Q
   Lüders, CM
   Franch, X
   Myllyaho, L
   Kettunen, E
   Marco, J
   Tiihonen, J
   Halonen, M
   Männistö, T
AF Raatikainen, Mikko
   Motger, Quim
   Luders, Clara Marie
   Franch, Xavier
   Myllyaho, Lalli
   Kettunen, Elina
   Marco, Jordi
   Tiihonen, Juha
   Halonen, Mikko
   Mannisto, Tomi
TI Improved Management of Issue Dependencies in Issue Trackers of Large
   Collaborative Projects
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Software; Computer bugs; Collaboration; Stakeholders; Task analysis;
   Software development management; Interviews; Bug; dependency; design
   science; issue; issue management; issue tracker; jira; release;
   requirement
ID DESIGN SCIENCE; DIAGNOSIS
AB Issue trackers, such as Jira, have become the prevalent collaborative tools in software engineering for managing issues, such as requirements, development tasks, and software bugs. However, issue trackers inherently focus on the lifecycle of single issues, although issues have and express dependencies on other issues that constitute issue dependency networks in large complex collaborative projects. The objective of this study is to develop supportive solutions for the improved management of dependent issues in an issue tracker. This study follows the Design Science methodology, consisting of eliciting drawbacks and constructing and evaluating a solution and system. The study was carried out in the context of The Qt Company's Jira, which exemplifies an actively used, almost two-decade-old issue tracker with over 100,000 issues. The drawbacks capture how users operate with issue trackers to handle issue information in large, collaborative, and long-lived projects. The basis of the solution is to keep issues and dependencies as separate objects and automatically construct an issue graph. Dependency detections complement the issue graph by proposing missing dependencies, while consistency checks and diagnoses identify conflicting issue priorities and release assignments. Jira's plugin and service-based system architecture realize the functional and quality concerns of the system implementation. We show how to adopt the intelligent supporting techniques of an issue tracker in a complex use context and a large data-set. The solution considers an integrated and holistic system view, practical applicability and utility, and the practical characteristics of issue data, such as inherent incompleteness.
C1 [Raatikainen, Mikko; Myllyaho, Lalli; Kettunen, Elina; Tiihonen, Juha; Mannisto, Tomi] Univ Helsinki, Helsinki 00100, Finland.
   [Motger, Quim; Franch, Xavier; Marco, Jordi] Univ Politecn Cataluna, Barcelona 08034, Spain.
   [Luders, Clara Marie] Univ Hamburg, D-20146 Hamburg, Germany.
   [Halonen, Mikko] Qt Co, Oulu 02600, Finland.
C3 University of Helsinki; Universitat Politecnica de Catalunya; University
   of Hamburg
RP Raatikainen, M (corresponding author), Univ Helsinki, Helsinki 00100, Finland.
EM mikko.raatikainen@helsinki.fi; jmotger@essi.upc.edu;
   lueders@informatik.uni-hamburg.de; franch@essi.upc.edu;
   lalli.myllyaho@helsinki.fi; elina.kettunen@alumni.helsinki.fi;
   jmarco@cs.upc.edu; juha.tiihonen@alumni.helsinki.fi;
   mikko.halonen@qt.io; tomi.mannisto@helsinki.fi
RI Myllyaho, Lalli/HKF-1303-2023; Männistö, Tomi/ABC-7781-2021; Franch,
   Xavier/KAM-2369-2024; Marco, Jordi/C-7258-2015
OI Männistö, Tomi/0000-0001-7470-5183; Franch, Xavier/0000-0001-9733-8830;
   Marco, Jordi/0000-0002-0078-7929; Raatikainen,
   Mikko/0000-0002-2410-0722; Luders, Clara Marie/0000-0001-7743-4067;
   Myllyaho, Lalli/0000-0002-0953-9825; Motger, Quim/0000-0002-4896-7515
FU Horizon 2020 project Open-Req; European Union [732463]; Spanish
   Ministerio de Ciencia e Innovacion [PID2020-117191RB-I00/AEI]
FX This work was supported in part by the scope of the Horizon 2020 project
   Open-Req, which was supported by the European Union under Grant 732463.
   We aregrateful for the provision of the Finnish computing infrastructure
   to carry outthe tests (persistent identifier
   urn:nbn:fi:research-infras-2016072533). Thispaper has been funded by the
   Spanish Ministerio de Ciencia e Innovacion underGrant
   PID2020-117191RB-I00/AEI/10.13039/501100011033
CR Achimugu P, 2014, INFORM SOFTWARE TECH, V56, P568, DOI 10.1016/j.infsof.2014.02.001
   Alipour A, 2013, IEEE WORK CONF MIN S, P183, DOI 10.1109/MSR.2013.6624026
   Ameller D, 2016, LECT NOTES COMPUT SC, V10027, P48, DOI 10.1007/978-3-319-49094-6_4
   [Anonymous], 2018, DEEP CONTEXTUALIZED, DOI DOI 10.18653/V1/N18-1202
   Baysal O, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P666, DOI 10.1145/2635868.2635887
   Bertram D, 2010, 2010 ACM CONFERENCE ON COMPUTER SUPPORTED COOPERATIVE WORK, P291
   Bissyandé TF, 2013, PROC INT SYMP SOFTW, P188, DOI 10.1109/ISSRE.2013.6698918
   Borg M, 2014, EMPIR SOFTW ENG, V19, P1565, DOI 10.1007/s10664-013-9255-y
   Carlshamre P, 2001, FIFTH IEEE INTERNATIONAL SYMPOSIUM ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P84
   Chrupala G., 2012, C EUROPEAN CHAPTER A, P613
   Cruzes DS, 2015, EMPIR SOFTW ENG, V20, P1634, DOI 10.1007/s10664-014-9326-8
   Dahlstedt ÅG, 2005, ENGINEERING AND MANAGING SOFTWARE REQUIREMENTS, P95, DOI 10.1007/3-540-28244-0_5
   Deshmukh J, 2017, PROC IEEE INT CONF S, P115, DOI 10.1109/ICSME.2017.69
   Deshpande G, 2020, INT REQUIR ENG CONF, P78, DOI 10.1109/RE48521.2020.00020
   Devlin J., 2018, BERT PRE TRAINING DE
   Ellmann M, 2018, PROCEEDINGS OF THE 4TH ACM SIGSOFT INTERNATIONAL WORKSHOP ON NLP FOR SOFTWARE ENGINEERING (NL4SE '18), P38, DOI 10.1145/3283812.3283825
   Felfernig A, 2012, AI EDAM, V26, P53, DOI 10.1017/S0890060411000011
   Felfernig A., 2018, PROC INT WORKSHOP CO, P9
   Felfernig A., 2014, KNOWLEDGEBASED CONFI, P73
   Fucci D, 2018, PROCEEDINGS OF THE 12TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT (ESEM 2018), DOI 10.1145/3239235.3240502
   FURNER C, 2018, PROFESSIONAL DEV ED, P1
   Gregor S, 2006, MIS QUART, V30, P611
   Guo J, 2017, PROC INT CONF SOFTW, P3, DOI 10.1109/ICSE.2017.9
   Heck P., 2013, PROC WORKSHOP PRINC, P43
   Hevner AR, 2004, MIS QUART, V28, P75, DOI 10.2307/25148625
   ISO, 2011, 291002011 ISOIEC
   Karre S. A., 2017, CORR
   Kshirsagar AP, 2015, 6TH INTERNATIONAL CONFERENCE ON COMPUTER & COMMUNICATION TECHNOLOGY (ICCCT-2015), P41, DOI 10.1145/2818567.2818575
   Lüders CM, 2019, INT REQUIR ENG CONF, P492, DOI 10.1109/RE.2019.00070
   Motger Q., 2020, PROC WORK C REQUIREM, P1
   Myllyaho L., 2021, J SYST SOFTW, V183
   Niiniluoto I., 1993, Erkenntnis, V38, P1, DOI [10.1007/BF01129020, DOI 10.1007/BF01129020, https://doi.org/10.1007/BF01129020]
   Peffers K, 2007, J MANAGE INFORM SYST, V24, P45, DOI 10.2753/MIS0742-1222240302
   Prudhomme C., 2016, TASC INRIA LINA RENN
   Quer C, 2018, LECT NOTES BUS INF P, V335, P205, DOI 10.1007/978-3-030-02302-7_13
   REITER R, 1987, ARTIF INTELL, V32, P57, DOI 10.1016/0004-3702(87)90062-2
   Rocha TM, 2021, IEEE ACCESS, V9, P44610, DOI 10.1109/ACCESS.2021.3066283
   Ruhe G, 2005, IEEE SOFTWARE, V22, P47, DOI 10.1109/MS.2005.164
   Sandusky R. J., 2004, "International Workshop on Mining Software Repositories (MSR 2004)" W17S Workshop - 26th International Conference on Software Engineering, P80, DOI 10.1049/ic:20040481
   Shadish W. R., 2002, EXPT QUASI EXPT DESI
   Shahmirzadi O., 2019, ARXIV181000664
   Sun C, 2011, INT J CHEM ENG, V2011, DOI 10.1155/2011/545234
   Svahnberg M, 2010, INFORM SOFTWARE TECH, V52, P237, DOI 10.1016/j.infsof.2009.11.006
   Thakurta R, 2017, REQUIR ENG, V22, P491, DOI 10.1007/s00766-016-0253-7
   Wang B, 2019, APSIPA TRANS SIGNAL, V8, DOI 10.1017/ATSIP.2019.12
   Yin R. K., 2018, Case Study Research and Applications: Design and Methods, DOI DOI 10.1016/J.TECHFORE.2018.10.013
NR 46
TC 3
Z9 3
U1 0
U2 1
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD APR 1
PY 2023
VL 49
IS 4
BP 2128
EP 2148
DI 10.1109/TSE.2022.3212166
PG 21
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA E9NM9
UT WOS:000978723600040
OA Green Published, Green Submitted, hybrid
DA 2024-07-18
ER

PT J
AU Hijazi, H
   Duraes, J
   Couceiro, R
   Castelhano, J
   Barbosa, R
   Medeiros, J
   Castelo-Branco, M
   de Carvalho, P
   Madeira, H
AF Hijazi, Haytham
   Duraes, Joao
   Couceiro, Ricardo
   Castelhano, Joao
   Barbosa, Raul
   Medeiros, Julio
   Castelo-Branco, Miguel
   de Carvalho, Paulo
   Madeira, Henrique
TI Linking poverty with water and sanitation in targeting households for
   achieving sustainable development
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Artificial Intelligence; Biometrics; Code inspections and walkthroughs;
   Human factors
ID HEART-RATE; SOFTWARE INSPECTIONS; CODE; PROGRAM; IMPACT; LOAD
AB Code review is an essential practice in software engineering to spot code defects in the early stages of software development. Modern code reviews (e.g., acceptance or rejection of pull requests with Git) have become less formal than classic Fagan's inspections, lightweight, and more reliant on individuals (i.e., reviewers). However, reviewers may encounter mentally demanding challenges during the code review, such as code comprehension difficulties or distractions that might affect the code review quality. This work proposes a novel approach that evaluates the quality of code reviews in terms of bug-finding effectiveness and provides the reviewers with a clear message of whether the review should be repeated, indicating the code regions that may not have been well-reviewed. The proposed approach utilizes biometric information collected from the reviewer during the review process using non-intrusive biofeedback devices (e.g., smartwatches). Biometric measures such as Heart Rate Variability (HRV) and task-evoked pupillary response are captured as a surrogate of the cognitive state of the reviewer (e.g., mental workload) and inexpensive desktop eye-trackers compatible with the software development settings. This work uses Artificial Intelligence techniques to predict the cognitive load from the extracted biomarkers and classify each code region according to a set of features. The final evaluation considers various factors such as code complexity, time of the code review, the experience level of the reviewer, and other factors. Our experimental results show the approach could predict the review quality with 87.77%& PLUSMN;4.65 accuracy and a Spearman correlation coefficient of 0.85 (p-value < 0.001) between the predicted and the actual review performance. This evaluation validates the cognitive load measurement using electroencephalography (EEG) signals as ground truth for the HRV and pupil signals.
C1 [Hijazi, Haytham; Duraes, Joao; Couceiro, Ricardo] Univ Coimbra, CISUC, Coimbra, Portugal.
   [Castelhano, Joao] Univ Coimbra, CIBIT, ICNAS, Coimbra, Portugal.
   [Barbosa, Raul; Medeiros, Julio; de Carvalho, Paulo; Madeira, Henrique] Univ Coimbra, Coimbra, Portugal.
   [Castelo-Branco, Miguel] Univ Coimbra, ICNAS, CIBIT, Coimbra, Portugal.
   [Castelo-Branco, Miguel] Coimbra Inst Biomed Imaging & Translat Res, Coimbra, Portugal.
C3 Universidade de Coimbra; Universidade de Coimbra; Universidade de
   Coimbra; Universidade de Coimbra; Universidade de Coimbra
RP Hijazi, H (corresponding author), Univ Coimbra, CISUC, Coimbra, Portugal.
EM haytham@dei.uc.pt; jduraes@isec.pt; rcouceir@dei.uc.pt;
   joaocastelhano@uc.pt; rbarbosa@dei.uc.pt; juliomedeiros@dei.uc.pt;
   mcbranco@fmed.uc.pt; carvalho@dei.uc.pt; henrique@dei.uc.pt
RI Durães, João/AAA-6167-2022; Castelhano, Joao/I-5090-2019; Hijazi,
   Haytham/AAZ-9425-2021; Castelo-Branco, Miguel/F-3866-2019; Madeira,
   Henrique/M-9392-2013
OI Durães, João/0000-0002-9697-9991; Castelhano, Joao/0000-0002-8996-1515;
   Hijazi, Haytham/0000-0002-4981-3649; de Carvalho,
   Paulo/0000-0002-9847-0590; Barbosa, Raul/0000-0002-2916-7571;
   Castelo-Branco, Miguel/0000-0003-4364-6373; Medeiros,
   Julio/0000-0003-2852-6285; Madeira, Henrique/0000-0001-8146-4664
FU BASE project [POCI -01-0145 - FEDER-031581]; Centro de Informatica e
   Sistemas da Universidade de Coimbra (CISUC); Coimbra Institute for
   Biomedical Imaging and Translational Research (CIBIT), Institute of
   Nuclear Sciences Applied to Health (ICNAS), University of Coimbra
   [PTDC/PSI-GER/30852/2017 I CONNECT-BCI]
FX This work was supported in part by BASE project under Grant POCI
   -01-0145 - FEDER-031581, in part by the Centro de Informatica e Sistemas
   da Universidade de Coimbra (CISUC), and in part by the Coimbra Institute
   for Biomedical Imaging and Translational Research (CIBIT), Institute of
   Nuclear Sciences Applied to Health (ICNAS), University of Coimbra under
   Grant PTDC/PSI-GER/30852/2017 I CONNECT-BCI.
CR Ables J. G., 1974, Astronomy and Astrophysics Supplement Series, V15, P383
   ACKERMAN AF, 1989, IEEE SOFTWARE, V6, P31, DOI 10.1109/52.28121
   Al-Saiyd NA, 2017, 2017 2ND INTERNATIONAL CONFERENCE ON COMPUTER AND COMMUNICATION SYSTEMS (ICCCS2017), P1, DOI 10.1109/CCOMS.2017.8075175
   Andrzejewska M, 2020, LECT NOTES ARTIF INT, V12164, P25, DOI 10.1007/978-3-030-52240-7_5
   Bacchelli A, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P712, DOI 10.1109/ICSE.2013.6606617
   BARNARD J, 1994, IEEE SOFTWARE, V11, P59, DOI 10.1109/52.268958
   Baysal O, 2013, WORK CONF REVERSE EN, P122, DOI 10.1109/WCRE.2013.6671287
   Begel A, 2018, EYE MOVEMENTS IN PROGRAMMING (EMIP 2018), DOI 10.1145/3216723.3216727
   Bellairs R., 2019, BEST PRACTICES CODE
   Biffl S, 2002, EIGHTH IEEE SYMPOSIUM ON SOFTWARE METRICS, PROCEEDINGS, P107, DOI 10.1109/METRIC.2002.1011330
   Blons E, 2019, SCI REP-UK, V9, DOI 10.1038/s41598-019-54547-7
   Brockmeier J., 2011, READWRITE BLOG 0928
   Busjahn Teresa, 2011, P 11 KOL CALL INT C, p1s9
   Castelhano Joao, 2021, Neural Plast, V2021, P5596145, DOI 10.1155/2021/5596145
   Castelhano J, 2019, BRAIN IMAGING BEHAV, V13, P623, DOI 10.1007/s11682-018-9885-1
   Chandrika KR, 2017, IEEE INT C EMERG
   CHILLAREGE R, 1992, IEEE T SOFTWARE ENG, V18, P943, DOI 10.1109/32.177364
   Cohen J., 2014, CONFUSION ITS DYNAMI, P106
   Cotroneo D, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P200, DOI 10.1145/3338906.3338916
   Couceiro R, 2019, PROC INT SYMP SOFTW, P93, DOI 10.1109/ISSRE.2019.00019
   Couceiro R, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: NEW IDEAS AND EMERGING RESULTS (ICSE-NIER 2019), P37, DOI 10.1109/ICSE-NIER.2019.00018
   Couceiro R, 2019, I C DEPEND SYS NETWO, P638, DOI 10.1109/DSN.2019.00069
   Crk I, 2016, IEEE ENG MED BIO, P4601, DOI 10.1109/EMBC.2016.7591752
   Daityari S., 2021, 12 BEST CODE REV TOO
   Delliaux S, 2019, FRONT PHYSIOL, V10, DOI 10.3389/fphys.2019.00565
   Dillon J. V, 2017, arXiv
   Dunsmore A, 2000, J SYST SOFTWARE, V52, P121, DOI 10.1016/S0164-1212(99)00138-7
   Duraes J, 2016, PROC INT SYMP SOFTW, P87, DOI 10.1109/ISSRE.2016.53
   Duraes JA, 2006, IEEE T SOFTWARE ENG, V32, P849, DOI 10.1109/TSE.2006.113
   Ebert F, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-020-09909-5
   FAGAN ME, 1976, IBM SYST J, V15, P182, DOI 10.1147/sj.153.0182
   Floyd B, 2017, PROC INT CONF SOFTW, P175, DOI 10.1109/ICSE.2017.24
   Ford D, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN SOCIETY (ICSE-SEIS 2019), P51, DOI 10.1109/ICSE-SEIS.2019.00014
   Fritz T, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P402, DOI 10.1145/2568225.2568266
   Fucci D, 2019, INT C PROGRAM COMPRE, P311, DOI 10.1109/ICPC.2019.00050
   Hart S. G., 2006, P HUM FACT ERG SOC A, V50, P904, DOI DOI 10.1177/154193120605000909
   Hatton L, 2008, IEEE SOFTWARE, V25, P82, DOI 10.1109/MS.2008.100
   Hijazi H, 2021, PROC INT SYMP SOFTW, P476, DOI 10.1109/ISSRE52982.2021.00056
   Honda N., 2012, Ameri Jour Op Research, DOI [10.4236/ajor.2012.21004, DOI 10.4236/AJOR.2012.21004, DOI 10.4236/ajor.2012.21004]
   Huang AFQ, 2012, PROCEEDINGS 18TH ISSAT INTERNATIONAL CONFERENCE ON RELIABILITY & QUALITY IN DESIGN, P44
   Huang FQ, 2015, J SOFTW-EVOL PROC, V27, P625, DOI 10.1002/smr.1717
   Huang Y, 2022, IEEE T SOFTWARE ENG, V48, P1463, DOI 10.1109/TSE.2020.3021902
   Jain L., 2019, LECT NOTES COMPUT SC, DOI [10.26438/ijcse/v7i3.310318, DOI 10.26438/IJCSE/V7I3.310318]
   Jessup S. A., 2021, P 54 HAW INT C SYST, P114
   KAHNEMAN D, 1966, SCIENCE, V154, P1583, DOI 10.1126/science.154.3756.1583
   Kemerer CF, 2009, IEEE T SOFTWARE ENG, V35, P534, DOI 10.1109/TSE.2009.27
   Khan SA, 2014, SCI WORLD J, DOI 10.1155/2014/672630
   Kononenko O, 2016, PROC INT CONF SOFTW, P1028, DOI 10.1145/2884781.2884840
   Kononenko O, 2015, PROC IEEE INT CONF S, P111, DOI 10.1109/ICSM.2015.7332457
   Kyriakou K, 2019, SENSORS-BASEL, V19, DOI 10.3390/s19173805
   Le AS, 2020, TRANSP RES INTERDISC, V4, DOI 10.1016/j.trip.2019.100087
   Mäntylä MV, 2009, IEEE T SOFTWARE ENG, V35, P430, DOI 10.1109/TSE.2008.71
   McCraty Rollin, 2015, Glob Adv Health Med, V4, P46, DOI 10.7453/gahmj.2014.073
   Medeiros J, 2021, SENSORS-BASEL, V21, DOI 10.3390/s21072338
   Mejía-Mejía E, 2020, FRONT PHYSIOL, V11, DOI 10.3389/fphys.2020.00779
   Minelli R, 2015, INT C PROGRAM COMPRE, P25, DOI 10.1109/ICPC.2015.12
   Müller SC, 2016, PROC INT CONF SOFTW, P452, DOI 10.1145/2884781.2884803
   Nakagawa T, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE COMPANION 2014), P448, DOI 10.1145/2591062.2591098
   Peitek N, 2020, IEEE T SOFTWARE ENG, V46, P442, DOI 10.1109/TSE.2018.2863303
   Pereira T, 2017, COMPUT METH PROG BIO, V148, P71, DOI 10.1016/j.cmpb.2017.06.018
   Peysakhovich V, 2015, INT J PSYCHOPHYSIOL, V97, P30, DOI 10.1016/j.ijpsycho.2015.04.019
   Pfleging B, 2016, 34TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, CHI 2016, P5776, DOI 10.1145/2858036.2858117
   Pinheiro N, 2016, IEEE ENG MED BIO, P2945, DOI 10.1109/EMBC.2016.7591347
   Reason J., 1991, HUMAN ERROR
   Rigby PC, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P541, DOI 10.1145/1985793.1985867
   Sacha J, 2014, ANN NONINVAS ELECTRO, V19, P207, DOI 10.1111/anec.12148
   Sadowski C, 2018, 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING - SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2018), P181, DOI 10.1145/3183519.3183525
   Sandu I.-A, 2018, Journal of Physics: Conference Series, V1065, DOI 10.1088/1742-6596/1065/5/052006
   Sasaki Yutaka, 2007, TEACH TUTOR MAT, V1, P1
   Sauer C, 2000, IEEE T SOFTWARE ENG, V26, P1, DOI 10.1109/32.825763
   Seolhwa Lee, 2018, Cluster Computing, V21, P1097, DOI 10.1007/s10586-017-0746-2
   Setz C, 2010, IEEE T INF TECHNOL B, V14, P410, DOI 10.1109/TITB.2009.2036164
   Shah SMA, 2012, INT SYMP EMP SOFTWAR, P315, DOI 10.1145/2372251.2372308
   Shard B., 2012, P S EYE TRACK RES AP, P381
   Shull E, 2001, PROC INT CONF SOFTW, P726
   Shull F, 2002, EIGHTH IEEE SYMPOSIUM ON SOFTWARE METRICS, PROCEEDINGS, P249, DOI 10.1109/METRIC.2002.1011343
   Smartbear, 2011, 11 BEST PRACT PEER C
   Tao Yida, 2012, P ACM SIGSOFT 20 INT
   Urbanowicz RJ, 2018, J BIOMED INFORM, V85, P189, DOI 10.1016/j.jbi.2018.07.014
   Uwano H., 2005, Eye Tracking Research and Applications Symposium (ETRA), V2005, P133
   Veltman JA, 1998, ERGONOMICS, V41, P656, DOI 10.1080/001401398186829
   Vrzakova H, 2020, J SYST SOFTWARE, V159, DOI 10.1016/j.jss.2019.110434
   WALTER GF, 1976, PSYCHOPHYSIOLOGY, V13, P563, DOI 10.1111/j.1469-8986.1976.tb00882.x
   Weber B, 2021, J SYST SOFTWARE, V178, DOI 10.1016/j.jss.2021.110946
   Zhang HY, 2009, PROC IEEE INT CONF S, P274, DOI 10.1109/ICSM.2009.5306304
   Zhang X, 2018, INT J HUM-COMPUT INT, V34, P695, DOI 10.1080/10447318.2018.1461763
NR 86
TC 6
Z9 6
U1 2
U2 10
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD FEB 1
PY 2023
VL 49
IS 2
BP 626
EP 645
DI 10.1109/TSE.2022.3158543
PG 20
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 9F0FH
UT WOS:000937151900009
OA hybrid
DA 2024-07-18
ER

PT J
AU Zhang, N
   Zou, Y
   Xia, X
   Huang, Q
   Lo, DV
   Li, SP
AF Zhang, Neng
   Zou, Ying
   Xia, Xin
   Huang, Qiao
   Lo, David
   Li, Shanping
TI Web APIs: Features, Issues, and Expectations - A Large-Scale Empirical
   Study of Web APIs From Two Publicly Accessible Registries Using Stack
   Overflow and a User Survey
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Mashups; Feature extraction; Software development management; Software;
   Documentation; Companies; Testing; Web APIs; empirical study; user
   survey; stack overflow
ID RECOMMENDATION; DEVELOPERS; SERVICES; PROJECTS; SEARCH
AB With the increasing adoption of services-oriented computing and cloud computing technologies, web APIs have become the fundamental building blocks for constructing software applications. Web APIs are developed and published on the internet. The functionality of web APIs can be used to facilitate the development of software applications. There are numerous studies on retrieving and recommending candidate web APIs based on user requirements from a large set of web APIs. However, there are very limited studies on the features of web APIs that make them more likely to be used and the issues of using web APIs in practice. Moreover, users' expectations on the development and management of web APIs are rarely investigated. In this paper, we conducta large-scale empirical study of 20,047 web APIs published at two popular and publicly accessible web API registries: ProgrammableWeb and APIs.guru. We first extract the questions posted in Stack Overflow (SO) that are relevant to the web APIs. We then manually analyze 1,885 randomly sampled SO questions and identify 24 web API issue types (e.g., authonzation error) that are encountered by users. Afterwards, we conducta user survey to investigate the features of web APIs that users often consider when shortlisting a web API for testing before they adopt it, validate the identified types of web API issues, and understand users' expectations on the development and management of web APIs. From the 191 received responses, we extract 14 important features for users to decide whether to use a web API (e.g., well-organized documentation). We also gain a better understanding of web API issue types and summarize 11 categories of user expectations on web APIs (e.g., documentation and SDK/library). As the result of our study, we provide guidelines for web API developers and registry managers to improve web APIs and promote the use of web APIs.
C1 [Zhang, Neng] SUN Yat Sen Univ, Sch Software Engn, Zhuhai 519000, Peoples R China.
   [Zou, Ying] Queens Univ, Dept Elect & Comp Engn, Kingston, ON K7L 3N6, Canada.
   [Xia, Xin] Huawei, Software Engn Applicat Technol Lab, Hangzhou 310000, Peoples R China.
   [Huang, Qiao; Li, Shanping] Zhejiang Univ, Coll Comp Sci & Technol, Hangzhou 310027, Zhejiang, Peoples R China.
   [Lo, David] Singapore Management Univ, Sch Informat Syst, Singapore 188065, Singapore.
C3 Sun Yat Sen University; Queens University - Canada; Huawei Technologies;
   Zhejiang University; Singapore Management University
RP Xia, X (corresponding author), Huawei, Software Engn Applicat Technol Lab, Hangzhou 310000, Peoples R China.
EM zhangn279@mail.sysu.edu.cn; ying.zou@queensu.ca; xin.xia@acm.org;
   tkdsheep@zju.edu.cn; davidlo@smu.edu.sg; shan@zju.edu.cn
RI zhang, neng/KHW-2049-2024; Zou, Ying/KLC-9380-2024; Lo,
   David/A-2493-2012
OI zhang, neng/0000-0001-8662-5690; Xia, Xin/0000-0002-6302-3256; Lo,
   David/0000-0002-4367-7201
FU National Natural Science Foundation of China [62032025]; National
   Research Foundation, Singapore , under its Industry Alignment Fund -
   Pre-positioning (IAF-PP)Funding Initiative
FX This work was supported in part by the National Natural Science
   Foundation of China under Grant 62032025 and in part by National
   Research Foundation, Singapore, under its Industry Alignment Fund -
   Pre-positioning (IAF-PP)Funding Initiative. Any opinions, findings and
   conclusions or recommendations expressed in this material are those of
   the author(s) and do not reflect the views of National Research
   Foundation, Singapore
CR [Anonymous], 2022, HTTP AUTHENTICATION
   [Anonymous], 2022, OPENREST
   [Anonymous], 2022, SWAGGER
   [Anonymous], 2022, SOAP
   [Anonymous], 2022, OAUTH
   [Anonymous], 2022, CURL
   Atlidakis V, 2019, PROC INT CONF SOFTW, P748, DOI 10.1109/ICSE.2019.00083
   Azzopardi L., 2017, ACM SIGIR Forum, V50, P58, DOI DOI 10.1145/3053408.3053421
   Bai B, 2020, IEEE T SERV COMPUT, V13, P73, DOI 10.1109/TSC.2017.2681666
   Baltes S, 2021, Arxiv, DOI arXiv:2002.07764
   Bano M, 2014, IET SOFTW, V8, P154, DOI 10.1049/iet-sen.2013.0131
   Bao LF, 2021, IEEE T SOFTWARE ENG, V47, P1277, DOI 10.1109/TSE.2019.2918536
   Belkhir A, 2019, 2019 IEEE/ACM 6TH INTERNATIONAL CONFERENCE ON MOBILE SOFTWARE ENGINEERING AND SYSTEMS (MOBILESOFT 2019), P66, DOI 10.1109/MOBILESoft.2019.00020
   Bird S., 2009, NATURAL LANGUAGE PRO
   Blei DM, 2003, J MACH LEARN RES, V3, P993, DOI 10.1162/jmlr.2003.3.4-5.993
   Burnett M, 2016, INTERACT COMPUT, V28, P760, DOI 10.1093/iwc/iwv046
   Chen FZ, 2017, EXPERT SYST APPL, V67, P19, DOI 10.1016/j.eswa.2016.09.028
   Cummaudo A, 2019, PROC IEEE INT CONF S, P333, DOI 10.1109/ICSME.2019.00051
   Dong X., 2004, Proceedings of the 30th International Conference on Very Large Data Bases (VLDB'04), V30, P372, DOI DOI 10.1016/B978-012088469-8.50035-8
   Espinha T, 2015, 2ND ACM INTERNATIONAL CONFERENCE ON MOBILE SOFTWARE ENGINEERING AND SYSTEMS MOBILESOFT 2015, P12, DOI 10.1109/MobileSoft.2015.9
   Espinha T, 2015, J SYST SOFTWARE, V100, P27, DOI 10.1016/j.jss.2014.10.014
   Espinha T, 2014, 2014 SOFTWARE EVOLUTION WEEK - IEEE CONFERENCE ON SOFTWARE MAINTENANCE, REENGINEERING, AND REVERSE ENGINEERING (CSMR-WCRE), P84, DOI 10.1109/CSMR-WCRE.2014.6747228
   Fangfang Liu, 2010, 2010 IEEE International Conference on Web Services (ICWS), P155, DOI 10.1109/ICWS.2010.67
   FLEISS JL, 1971, PSYCHOL BULL, V76, P378, DOI 10.1037/h0031619
   GraphQL, 2022, US
   He Q, 2017, IEEE T SOFTWARE ENG, V43, P658, DOI 10.1109/TSE.2016.2624293
   He Q, 2014, IEEE T SOFTWARE ENG, V40, P192, DOI 10.1109/TSE.2013.2297911
   Hertel G, 2003, RES POLICY, V32, P1159, DOI 10.1016/S0048-7333(03)00047-7
   Hosono M, 2018, ASIA PAC SOFWR ENG, P715, DOI 10.1109/APSEC.2018.00103
   Hu Y, 2014, 2014 IEEE 21ST INTERNATIONAL CONFERENCE ON WEB SERVICES (ICWS 2014), P33, DOI 10.1109/ICWS.2014.18
   Huang KM, 2014, IEEE T AUTOM SCI ENG, V11, P906, DOI 10.1109/TASE.2013.2297026
   Huang Q, 2018, IEEE INT CONF AUTOM, P293, DOI 10.1145/3238147.3238191
   Huang Q, 2020, IEEE T SOFTWARE ENG, V46, P1098, DOI 10.1109/TSE.2018.2876340
   Jian Wang, 2013, 2013 IEEE International Conference on Services Computing (SCC), P65, DOI 10.1109/SCC.2013.16
   Jun Li, 2013, 2013 IEEE 20th International Conference on Web Services (ICWS), P300, DOI 10.1109/ICWS.2013.48
   Kitchenham BA, 2008, Guide to advanced empirical software engineering, P63, DOI [DOI 10.1007/978-1-84800-044-5_3, 10.1007/ 978-1-84800-044-5_3]
   Klusch M, 2009, J WEB SEMANT, V7, P121, DOI 10.1016/j.websem.2008.10.001
   Kochhar Pavneet Singh, 2016, 25 INT S SOFTWARE TE, P165, DOI 10.1145/2931037.2931051
   Konietschke F, 2012, ELECTRON J STAT, V6, P738, DOI 10.1214/12-EJS691
   LaToza T. D., 2006, 28th International Conference on Software Engineering Proceedings, P492, DOI 10.1145/1134285.1134355
   Li HW, 2013, WORK CONF REVERSE EN, P142, DOI 10.1109/WCRE.2013.6671289
   Li Z, 2014, J INTERNET TECHNOL, V15, P543, DOI 10.6138/JIT.2014.15.4.05
   Li ZW, 2018, IEEE CLOUD COMPUT, V5, P58, DOI 10.1109/MCC.2018.022171668
   Liang TT, 2016, LECT NOTES COMPUT SC, V9936, P371, DOI 10.1007/978-3-319-46295-0_23
   Linares-Vásquez M, 2013, IEEE WORK CONF MIN S, P93, DOI 10.1109/MSR.2013.6624014
   Liu JX, 2016, IEEE T SERV COMPUT, V9, P686, DOI 10.1109/TSC.2015.2433251
   Ly P. A., 2012, PROC INT C WEB INF S, P497
   Majumder S, 2018, IEEE WORK CONF MIN S, P554, DOI 10.1145/3196398.3196424
   Maleshkova M., 2010, Proceedings 2010 8th IEEE European Conference on Web Services (ECOWS 2010), P107, DOI 10.1109/ECOWS.2010.9
   García JM, 2012, J WEB SEMANT, V17, P12, DOI 10.1016/j.websem.2012.07.002
   Mendoza A, 2018, P IEEE S SECUR PRIV, P756, DOI 10.1109/SP.2018.00039
   Meng SM, 2014, IEEE T PARALL DISTR, V25, P3221, DOI 10.1109/TPDS.2013.2297117
   Mikolov T., 2013, ADV NEURAL INFORM PR, V26, P3111, DOI DOI 10.5555/2999792.2999959
   Mingdong Tang, 2012, Proceedings of the 2012 IEEE 19th International Conference on Web Services (ICWS), P202, DOI 10.1109/ICWS.2012.61
   Nasehi SM, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P25, DOI 10.1109/ICSM.2012.6405249
   Neumann A, 2021, IEEE T SERV COMPUT, V14, P957, DOI 10.1109/TSC.2018.2847344
   Ong AD, 2000, J APPL SOC PSYCHOL, V30, P1691, DOI 10.1111/j.1559-1816.2000.tb02462.x
   Oumaziz MA, 2017, LECT NOTES COMPUT SC, V10601, P614, DOI 10.1007/978-3-319-69035-3_45
   Paliwal AV, 2012, IEEE T SERV COMPUT, V5, P260, DOI 10.1109/TSC.2011.19
   Peng FC, 2003, LECT NOTES COMPUT SC, V2633, P335
   Plebani P, 2009, IEEE T KNOWL DATA EN, V21, P1629, DOI 10.1109/TKDE.2009.35
   Rapoport M, 2017, IEEE WORK CONF MIN S, P80, DOI 10.1109/MSR.2017.11
   Rehurek R., 2010, P LREC 2010 WORKSH N, P45, DOI DOI 10.13140/2.1.2393.1847
   REST, 2022, US
   Rodríguez C, 2016, LECT NOTES COMPUT SC, V9671, P21, DOI 10.1007/978-3-319-38791-8_2
   Rodriguez-Mier P, 2016, IEEE T SERV COMPUT, V9, P537, DOI 10.1109/TSC.2015.2402679
   Roman D, 2015, J WEB SEMANT, V31, P39, DOI 10.1016/j.websem.2014.11.006
   Rosen C, 2016, EMPIR SOFTW ENG, V21, P1192, DOI 10.1007/s10664-015-9379-3
   Sohan SM, 2015, IEEE WORLD CONGR SER, P245, DOI 10.1109/SERVICES.2015.43
   Soliman M, 2016, 2016 13TH WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE (WICSA), P128, DOI 10.1109/WICSA.2016.13
   Song W, 2018, IEEE T SERV COMPUT, V11, P215, DOI 10.1109/TSC.2016.2536025
   Spencer D., 2009, CARD SORTING DESIGNI
   Subbulakshmi S., 2017, PROC INT S INTELL SY, P54
   Thung F, 2017, IEEE TETCI, V1, P145, DOI 10.1109/TETCI.2017.2699222
   Tyagi Pradeep K., 1989, Journal of the Academy of Marketing Science, V17, P235
   Vasilescu B, 2012, PROCEEDINGS OF THE 2012 ASE INTERNATIONAL CONFERENCE ON SOCIAL INFORMATICS (SOCIALINFORMATICS 2012), P332, DOI 10.1109/SocialInformatics.2012.81
   Venkatesh PK, 2016, 2016 IEEE INTERNATIONAL CONFERENCE ON WEB SERVICES (ICWS), P131, DOI 10.1109/ICWS.2016.25
   Wan ZY, 2021, IEEE T SOFTWARE ENG, V47, P1331, DOI 10.1109/TSE.2019.2921343
   Wan ZY, 2021, IEEE T SOFTWARE ENG, V47, P1857, DOI 10.1109/TSE.2019.2937083
   Wan ZY, 2020, IEEE T SOFTWARE ENG, V46, P1241, DOI 10.1109/TSE.2018.2877678
   Wang SH, 2014, LECT NOTES COMPUT SC, V8831, P245, DOI 10.1007/978-3-662-45391-9_17
   Wang Shaowei, 2013, SAC '13 Proceedings of the 28th Annual ACM Symposium on Applied Computing, P1019
   Wei Jiang, 2012, Proceedings of the 2012 IEEE 19th International Conference on Web Services (ICWS), P218, DOI 10.1109/ICWS.2012.45
   Wenxing Xu, 2013, 2013 IEEE 20th International Conference on Web Services (ICWS), P107, DOI 10.1109/ICWS.2013.24
   Wittern E, 2018, LECT NOTES COMPUT SC, V10845, P65, DOI 10.1007/978-3-319-91662-0_5
   Wu HC, 2008, ACM T INFORM SYST, V26, DOI 10.1145/1361684.1361686
   Xia BF, 2015, IEEE T SERV COMPUT, V8, P674, DOI 10.1109/TSC.2014.2379251
   Xia X, 2017, EMPIR SOFTW ENG, V22, P3149, DOI 10.1007/s10664-017-9514-4
   Xie F, 2019, EXPERT SYST APPL, V123, P178, DOI 10.1016/j.eswa.2019.01.025
   Xiong RB, 2018, EXPERT SYST APPL, V110, P191, DOI 10.1016/j.eswa.2018.05.039
   Xu YS, 2016, EXPERT SYST APPL, V53, P75, DOI 10.1016/j.eswa.2016.01.010
   Yasmin J, 2020, PROC IEEE INT CONF S, P151, DOI 10.1109/ICSME46990.2020.00024
   Ye X, 2016, PROC INT CONF SOFTW, P404, DOI 10.1145/2884781.2884862
   Yin YY, 2020, MOBILE NETW APPL, V25, P391, DOI 10.1007/s11036-019-01241-7
   Yu J, 2008, IEEE INTERNET COMPUT, V12, P44, DOI 10.1109/MIC.2008.114
   Zampetti F, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-021-10031-3
   Zdun U, 2020, IEEE SOFTWARE, V37, P87, DOI 10.1109/MS.2019.2947982
   Zhang N, 2022, IEEE T SOFTWARE ENG, V48, P1185, DOI 10.1109/TSE.2020.3016006
   Zhang N, 2019, KNOWL INF SYST, V58, P669, DOI 10.1007/s10115-018-1171-4
   Zhang N, 2018, J SYST SOFTWARE, V142, P73, DOI 10.1016/j.jss.2018.04.046
   Zhang N, 2020, IEEE T SERV COMPUT, V13, P488, DOI 10.1109/TSC.2017.2693147
   Zheng ZB, 2013, IEEE T SERV COMPUT, V6, P289, DOI 10.1109/TSC.2011.59
   Zhou X, 2021, IEEE T SOFTWARE ENG, V47, P243, DOI 10.1109/TSE.2018.2887384
   Zou WQ, 2021, IEEE T SOFTWARE ENG, V47, P2084, DOI 10.1109/TSE.2019.2942301
   Zou WQ, 2020, IEEE T SOFTWARE ENG, V46, P836, DOI 10.1109/TSE.2018.2870414
NR 105
TC 0
Z9 0
U1 3
U2 10
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD FEB 1
PY 2023
VL 49
IS 2
BP 498
EP 528
DI 10.1109/TSE.2022.3154769
PG 31
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 9F0FH
UT WOS:000937151900003
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Alonso, JC
   Martin-Lopez, A
   Segura, S
   García, JM
   Ruiz-Cortés, A
AF Alonso, Juan C.
   Martin-Lopez, Alberto
   Segura, Sergio
   Garcia, Jose Maria
   Ruiz-Cortes, Antonio
TI ARTE: Automated Generation of Realistic Test Inputs for Web APIs
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Codes; Testing; Restful API; Knowledge based systems; Graphical user
   interfaces; Dictionaries; Semantics; Test data generation; automated
   testing; web APIs; web of data
ID REGULAR EXPRESSIONS
AB Automated test case generation for web APIs is a thriving research topic, where test cases are frequently derived from the API specification. However, this process is only partially automated since testers are usually obliged to manually set meaningful valid test inputs for each input parameter. In this article, we present ARTE, an approach for the automated extraction of realistic test data for web APIs from knowledge bases like DBpedia. Specifically, ARTE leverages the specification of the API parameters to automatically search for realistic test inputs using natural language processing, search-based, and knowledge extraction techniques. ARTE has been integrated into RESTest, an open-source testing framework for RESTful APIs, fully automating the test case generation process. Evaluation results on 140 operations from 48 real-world web APIs show that ARTE can efficiently generate realistic test inputs for 64.9% of the target parameters, outperforming the state-of-the-art approach SAIGEN (31.8%). More importantly, ARTE supported the generation of over twice as many valid API calls (57.3%) as random generation (20%) and SAIGEN (26%), leading to a higher failure detection capability and uncovering several real-world bugs. These results show the potential of ARTE for enhancing existing web API testing tools, achieving an unprecedented level of automation.
C1 [Alonso, Juan C.; Martin-Lopez, Alberto; Segura, Sergio; Garcia, Jose Maria; Ruiz-Cortes, Antonio] Univ Seville, Res Inst Informat Engn I3US, Smart Comp Syst Res & Engn Lab SCORE, Seville 41004, Spain.
C3 University of Sevilla
RP Alonso, JC (corresponding author), Univ Seville, Res Inst Informat Engn I3US, Smart Comp Syst Res & Engn Lab SCORE, Seville 41004, Spain.
EM javalenzuela@us.es; alberto.martin@us.es; sergiosegura@us.es;
   josemgarcia@us.es; aruiz@us.es
RI García, José María/F-1898-2010; Cortés, Antonio Ruiz/B-9056-2008;
   Martin-Lopez, Alberto/U-8770-2018; Alonso Valenzuela, Juan
   Carlos/ACF-1364-2022; Segura, Sergio/A-9615-2011
OI García, José María/0000-0002-0303-2740; Cortés, Antonio
   Ruiz/0000-0001-9827-1834; Martin-Lopez, Alberto/0000-0001-5501-9225;
   Alonso Valenzuela, Juan Carlos/0000-0002-1177-9262; Segura,
   Sergio/0000-0001-8816-6213
FU European Commission (FEDER); Juntade Andalucia [US-1264651];
   EKIPMENT-PLUS [P18-FR-2895]; Spanish Government(FEDER/Ministerio de
   Ciencia e Innovacion - Agencia Estatal de Investigacion)
   [RTI2018-101204-B-C21]; Excellence Network SEBASENet 2.0
   [RED2018-102472-T]; Spanish Ministry of Education and Vocational
   Training [FPU17/04077]
FX This work was supported in part by European Commission (FEDER) and
   Juntade Andalucia under Grant APOLO (US-1264651), in part by the
   EKIPMENT-PLUS under Grant P18-FR-2895, in part by the Spanish
   Government(FEDER/Ministerio de Ciencia e Innovacion - Agencia Estatal de
   Investigacion) under Grant HORATIO (RTI2018-101204-B-C21), and in part
   by the Excellence Network SEBASENet 2.0 under Grant RED2018-102472-T,and
   in part by the Spanish Ministry of Education and Vocational Training
   under Grant FPU17/04077
CR Alonso Juan C, 2021, Zenodo, DOI 10.5281/ZENODO.5792081
   [Anonymous], RAPIDAPI API DIR
   [Anonymous], NUMV API DOC
   [Anonymous], AP JEN
   [Anonymous], DHL LOC FIND API
   [Anonymous], SPOT WEB API
   [Anonymous], REF API
   [Anonymous], OPENAPI SPEC
   [Anonymous], DBLP API
   [Anonymous], YELP FUS API
   [Anonymous], Beautiful Soup
   [Anonymous], ARTE DOC
   [Anonymous], TWITT API
   [Anonymous], BESOCCER API
   [Anonymous], Foursquare API
   [Anonymous], DOM API
   [Anonymous], SEL PYTH
   [Anonymous], OP API
   [Anonymous], DEEPL API
   [Anonymous], RESTCOUNTRIES API
   [Anonymous], ?About us"
   [Anonymous], GREAT CIRCL MAPP
   [Anonymous], AM API
   [Anonymous], SPARQL 1 1 OV
   [Anonymous], 2020, AS API
   [Anonymous], GEODBCITIES API DOC
   Arcuri A, 2019, ACM T SOFTW ENG METH, V28, DOI 10.1145/3293455
   Atlidakis V, 2019, PROC INT CONF SOFTW, P748, DOI 10.1109/ICSE.2019.00083
   Balakrishnan Vimala, 2014, Lecture Notes on Software Engineering, V2, P262, DOI 10.7763/LNSE.2014.V2.134
   Banias O, 2021, SENSORS-BASEL, V21, DOI 10.3390/s21165375
   Bartoli A, 2016, IEEE INTELL SYST, V31, P15, DOI 10.1109/MIS.2016.46
   Bartoli A, 2016, IEEE T KNOWL DATA EN, V28, P1217, DOI 10.1109/TKDE.2016.2515587
   Bartoli A, 2015, GECCO'15: PROCEEDINGS OF THE 2015 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P1183, DOI 10.1145/2739480.2754706
   Berners-Lee T., 2005, UNIFORMRESOURCE IDEN
   Bird S., 2009, NATURAL LANGUAGE PRO
   Bizer C, 2009, INT J SEMANT WEB INF, V5, P1, DOI 10.4018/jswis.2009081901
   Bizer C, 2009, J WEB SEMANT, V7, P154, DOI 10.1016/j.websem.2009.07.002
   Bozkurt M., 2011, Proceedings of the 2011 IEEE 6th International Symposium on Service Oriented System Engineering (SOSE 2011), P13, DOI 10.1109/SOSE.2011.6139088
   Clerissi D, 2020, IEEE INT CONF AUTOM, P66, DOI 10.1145/3324884.3416561
   Dustdar S., 2005, International Journal of Web and Grid Services, V1, P1, DOI 10.1504/IJWGS.2005.007545
   Ed-douibi H, 2018, IEEE INT ENTERP DIST, P181, DOI 10.1109/EDOC.2018.00031
   Fielding Roy Thomas, 2000, Architectural styles and the design of network-based software architectures, Patent No. AAI9980887
   Gamez-Diaz A, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P1006, DOI 10.1145/3338906.3340445
   Godefroid P, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P725, DOI 10.1145/3368089.3409719
   Godefroid P, 2020, COMMUN ACM, V63, P70, DOI 10.1145/3363824
   Guha Ramanathan, 2004, RDF VOCABULARY DESCR
   Jacobson D., 2011, APIs: A Strategy Guide
   Karlsson S, 2020, IEEE INT CONF SOFTW, P131, DOI 10.1109/ICST46399.2020.00023
   Krishna S., 1992, INTRO DATABASE KNOWL
   Manning C.D., 1999, FDN STAT NATURAL LAN
   Mariani L., 2014, P INT S SOFTW TEST A, P373
   Martin-Lopez A, 2022, IEEE T SERV COMPUT, V15, P2342, DOI 10.1109/TSC.2021.3050610
   Martin-Lopez A, 2021, PROC INT SYMP SOFTW, P231, DOI 10.1109/ISSRE52982.2021.00034
   Martin-Lopez A, 2021, ISSTA '21: PROCEEDINGS OF THE 30TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P682, DOI 10.1145/3460319.3469082
   Martin-Lopez A, 2020, LECT NOTES COMPUT SC, V12571, P459, DOI 10.1007/978-3-030-65310-1_33
   Martin-Lopez A, 2019, LECT NOTES COMPUT SC, V11895, P399, DOI 10.1007/978-3-030-33702-5_31
   Martin-Lopez A, 2019, PROCEEDINGS OF THE 10TH ACM SIGSOFT INTERNATIONAL WORKSHOP ON AUTOMATING TEST CASE DESIGN, SELECTION, AND EVALUATION (A-TEST '19), P15, DOI 10.1145/3340433.3342822
   Richardson Leonard, 2013, Restful web APIs
   Segura S, 2018, IEEE T SOFTWARE ENG, V44, P1083, DOI 10.1109/TSE.2017.2764464
   Shahbaz M, 2015, SCI COMPUT PROGRAM, V97, P405, DOI 10.1016/j.scico.2014.04.008
   Shahbaz M, 2012, INT CONF QUAL SOFTW, P79, DOI 10.1109/QSIC.2012.15
   Toutanova K, 2003, HLT-NAACL 2003: HUMAN LANGUAGE TECHNOLOGY CONFERENCE OF THE NORTH AMERICAN CHAPTER OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, PROCEEDINGS OF THE MAIN CONFERENCE, P252, DOI 10.3115/1073445.1073478
   Viglianisi E, 2020, IEEE INT CONF SOFTW, P142, DOI 10.1109/ICST46399.2020.00024
   Vijayarani S., 2015, International Journal of Computer Science Communication Networks, V5, P7
   Vrandecic D, 2014, COMMUN ACM, V57, P78, DOI 10.1145/2629489
   Wanwarang T, 2020, INT WORKSH AUTOMAT, P1, DOI 10.1145/3387903.3389310
NR 66
TC 8
Z9 8
U1 0
U2 4
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JAN 1
PY 2023
VL 49
IS 1
BP 348
EP 363
DI 10.1109/TSE.2022.3150618
PG 16
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA L1HD8
UT WOS:001020827200018
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Ferrari, A
   Mazzanti, F
   Basile, D
   ter Beek, MH
AF Ferrari, Alessio
   Mazzanti, Franco
   Basile, Davide
   ter Beek, Maurice H.
TI Systematic Evaluation and Usability Analysis of Formal Methods Tools for
   Railway Signaling System Design
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
ID VERIFICATION; EXPERIENCE
AB Formal methods and supporting tools have a long record of success in the development of safety-critical systems. However, no single tool has emerged as the dominant solution for system design. Each tool differs from the others in terms of the modeling language used, its verification capabilities and other complementary features, and each development context has peculiar needs that require different tools. This is particularly problematic for the railway industry, in which formal methods are highly recommended by the norms, but no actual guidance is provided for the selection of tools. To guide companies in the selection of the most appropriate formal methods tools to adopt in their contexts, a clear assessment of the features of the currently available tools is required. To address this goal, this paper considers a set of 13 formal methods tools that have been used for the early design of railway systems, and it presents a systematic evaluation of such tools and a preliminary usability analysis of a subset of 7 tools, involving railway practitioners. The results are discussed considering the most desired aspects by industry and earlier related studies. While the focus is on the railway signaling domain, the overall methodology can be applied to similar contexts. Our study thus contributes with a systematic evaluation of formal methods tools and it shows that despite the poor graphical interfaces, usability and maturity of the tools are not major problems, as claimed by contributions from the literature. Instead, support for process integration is the most relevant obstacle for the adoption of most of the tools. Our contribution can be useful to R&D engineers from railway signaling companies and infrastructure managers, but also to tool developers and academic researchers alike.
C1 [Ferrari, Alessio; Mazzanti, Franco; Basile, Davide; ter Beek, Maurice H.] Italian Natl Res Council CNR, Inst Informat Sci & Technol ISTI, I-56127 Pisa, Italy.
C3 Consiglio Nazionale delle Ricerche (CNR); Istituto di Neuroscienze
   (IN-CNR); Istituto di Scienza e Tecnologie dell'Informazione "Alessandro
   Faedo" (ISTI-CNR)
RP Ferrari, A (corresponding author), Italian Natl Res Council CNR, Inst Informat Sci & Technol ISTI, I-56127 Pisa, Italy.
EM alessio.ferrari@isti.cnr.it; franco.mazzanti@isti.cnr.it;
   davide.basile@isti.cnr.it; maurice.terbeek@isti.cnr.it
RI BASILE, Davide/AAX-1112-2020
OI BASILE, Davide/0000-0002-7196-6609; FERRARI,
   ALESSIO/0000-0002-0636-5663; Mazzanti, Franco/0000-0003-4562-8777
FU Shift2Rail Joint Undertaking under the European Union's Horizon 2020
   Research and Innovation Programme [777561, 881775, S2R-OC-IP2-01-2019,
   H2020-S2RJU-2019]
FX This work was supported in part by the ASTRail and 4SECURail Projects,
   which received funding from the Shift2Rail Joint Undertaking under the
   European Union's Horizon 2020 Research and Innovation Programme under
   Grants 777561 (ASTRail) and 881775 (4SECURail) in the context of the
   open call S2R-OC-IP2-01-2019 and in part of the "Annual Work Plan and
   Budget 2019", of the programme under Grant H2020-S2RJU-2019. The content
   of this paper reflects only the authors' view and the Shift2Rail Joint
   Undertaking is not responsible for any use that may be made of the
   included information.
CR Abbassi A, 2018, IEEE INT WORKSH MODE, P11, DOI 10.1109/MoDRE.2018.00008
   Abrial JR, 2007, J UNIVERS COMPUT SCI, V13, P619
   Abrial JR, 2020, INT J SOFTW TOOLS TE, V22, P257, DOI 10.1007/s10009-019-00525-3
   Agha G, 2018, ACM T MODEL COMPUT S, V28, DOI 10.1145/3158668
   Ameur Yamine Ait, 2010, International Journal on Software Tools for Technology Transfer, V12, P1, DOI 10.1007/s10009-009-0131-4
   [Anonymous], 2011, 50128 EN EUR COMM EL
   [Anonymous], 2000, Proceedings of the Conference on the Future of Software Engineering, DOI [10.1145/336512.336546, DOI 10.1145/336512.336546]
   [Anonymous], 2020, GAO2048G
   [Anonymous], 2002, AT B US MAN VERS 4 0
   [Anonymous], 2003, The Spin Model Checker: Primer and Reference Manual
   Arcaini P, 2020, INT J SOFTW TOOLS TE, V22, P265, DOI 10.1007/s10009-019-00539-x
   Ardis MA, 1996, IEEE T SOFTWARE ENG, V22, P378, DOI 10.1109/32.508312
   Atlee JM, 2013, FME WORKS FORM, P43, DOI 10.1109/FormaliSE.2013.6612276
   Baier C, 2008, PRINCIPLES OF MODEL CHECKING, P1
   Bangor A, 2008, INT J HUM-COMPUT INT, V24, P574, DOI 10.1080/10447310802205776
   Bartholomeus M., 2019, IRSE NEWS NOV, V260, P14
   Bartholomeus M, 2018, LECT NOTES COMPUT SC, V11119, P98, DOI 10.1007/978-3-030-00244-2_7
   Bartocci E, 2019, LECT NOTES COMPUT SC, V11429, P3, DOI 10.1007/978-3-030-17502-3_1
   Basile Davide, 2020, Leveraging Applications of Formal Methods, Verification and Validation. Verification. Principles. 9th International Symposium on Leveraging Applications of Formal Methods, ISoLA 2020. Proceedings. Lecture Notes in Computer Science (LNCS 12476), P368, DOI 10.1007/978-3-030-61362-4_21
   Basile Davide, 2020, Leveraging Applications of Formal Methods, Verification and Validation. Applications. 9th International Symposium on Leveraging Applications of Formal Methods, ISoLA 2020. Proceedings. Lecture Notes in Computer Science (LNCS 12478), P467, DOI 10.1007/978-3-030-61467-6_30
   Basile Davide, 2020, Formal Techniques for Distributed Objects, Components, and Systems. 40th IFIP WG 6.1 International Conference, FORTE 2020. Held as Part of the 15th International Federated Conference on Distributed Computing Techniques, DisCoTec 2020. Proceedings. Lecture Notes in Computer Science (LNCS 12136), P3, DOI 10.1007/978-3-030-50086-3_1
   Basile D., 2018, LEVERAGING APPL FORM, V11245, P372
   Basile D., 2017, Proceedings of the Symposium on Applied Computing, P1356, DOI DOI 10.1145/3019612.3019824
   Basile D, 2019, LECT NOTES COMPUT SC, V11687, P1, DOI 10.1007/978-3-030-27008-7_1
   Basile D, 2018, LECT NOTES COMPUT SC, V11023, P20, DOI 10.1007/978-3-319-98938-9_2
   Beek Maurice H., 2019, Formal Methods - The Next 30 Years. Third World Congress, FM 2019. Proceedings. Lecture Notes in Computer Science (LNCS 11800), P762, DOI 10.1007/978-3-030-30942-8_46
   Berger U, 2018, SCI COMPUT PROGRAM, V154, P61, DOI 10.1016/j.scico.2017.10.011
   Berry G, 2007, NEXT GENERATION DESIGN AND VERIFICATION METHODOLOGIES FOR DISTRIBUTED EMBEDDED CONTROL SYSTEMS, P19, DOI 10.1007/978-1-4020-6254-4_2
   Bertot Y., 2004, TEXT THEORET COMP S
   Bertot Y, 2008, LECT NOTES COMPUT SC, V5170, P12, DOI 10.1007/978-3-540-71067-7_3
   Bjorner D., 2003, PROC 4 S FORMAL METH
   Bjorner D, 2014, LECT NOTES COMPUT SC, V8442, P42, DOI 10.1007/978-3-319-06410-9_4
   Bosschaart M, 2015, INFORM SYST, V49, P126, DOI 10.1016/j.is.2014.11.007
   Boulanger JL., 2014, FORMAL METHODS APPL, DOI 10.1002/9781119002727
   Brooke J., 1996, USABILITY EVALUATION, P189, DOI DOI 10.1201/9781498710411-35
   Brooke J, 2013, J USABILITY STUD, V8, P29
   Butler M, 2020, INT J SOFTW TOOLS TE, V22, P249, DOI 10.1007/s10009-020-00562-3
   Cappart Q, 2017, IEEE HI ASS SYS ENGR, P61, DOI 10.1109/HASE.2017.10
   Cavada R, 2014, LECT NOTES COMPUT SC, V8559, P334, DOI 10.1007/978-3-319-08867-9_22
   Chiappini A., 2010, 2010 32nd International Conference on Software Engineering (ICSE), P109, DOI 10.1145/1810295.1810312
   Cimatti A., 2000, Int. J. Softw. Tools for Technol. Transf. (STTT), V2, P410, DOI [DOI 10.1007/S100090050046, 10.1007/s100090050046]
   Clarke EM, 1999, MODEL CHECKING, P1
   Clarke T.A., 2018, HDB MODEL CHECKING, DOI DOI 10.1007/978-3-319-10575-8
   Cunha A, 2020, INT J SOFTW TOOLS TE, V22, P281, DOI 10.1007/s10009-019-00540-4
   Dabney JamesB., 2003, Mastering Simulink
   David A, 2015, INT J SOFTW TOOLS TE, V17, P397, DOI 10.1007/s10009-014-0361-y
   Davis JA, 2013, LECT NOTES COMPUT SC, V8187, P63, DOI 10.1007/978-3-642-41010-9_5
   de Moura L, 2004, LECT NOTES COMPUT SC, V3114, P496
   Dghaym D, 2020, INT J SOFTW TOOLS TE, V22, P297, DOI 10.1007/s10009-019-00548-w
   Duffy DavidA., 1991, PRINCIPLES AUTOMATED
   Fantechi A., 2013, Formal Methods for Industrial Critical Systems, P61, DOI [10.1002/9781118459898.ch4, DOI 10.1002/9781118459898]
   Fantechi A, 2016, LECT NOTES COMPUT SC, V9953, P261, DOI 10.1007/978-3-319-47169-3_18
   Fantechi A, 2014, LECT NOTES COMPUT SC, V8368, P167, DOI 10.1007/978-3-319-05032-4_13
   Ferrari Alessio, 2012, NASA Formal Methods. Proceedings of the 4th International Symposium, NFM 2012, P24, DOI 10.1007/978-3-642-28891-3_5
   Ferrari A., 2021, FORMAL METHODS RAILW
   Ferrari A, 2020, PROC INT CONF SOFTW, P62, DOI 10.1145/3377811.3380373
   Ferrari A, 2019, LECT NOTES COMPUT SC, V11495, P226, DOI 10.1007/978-3-030-18744-6_15
   Ferrari A, 2013, SCI COMPUT PROGRAM, V78, P828, DOI 10.1016/j.scico.2012.04.003
   Ferrari A, 2013, IEEE SOFTWARE, V30, P28, DOI 10.1109/MS.2013.44
   Ferrari A, 2011, FORMS/FORMAT 2010: FORMAL METHODS FOR AUTOMATION AND SAFETY IN RAILWAY AND AUTOMOTIVE SYSTEMS, P107, DOI 10.1007/978-3-642-14261-1_11
   Flammini F, 2012, RAILWAY SAFETY, RELIABILITY, AND SECURITY: TECHNOLOGIES AND SYSTEMS ENGINEERING, P1, DOI 10.4018/978-1-4666-1643-1
   Fritzson P., 2014, Principles of Object-Oriented Modeling and Simulation With Modelica 3.3: a Cyber-Physical Approach
   Furness N., 2017, IRSE News, V232, P2
   Garavel Hubert, 2019, Models, Mindsets, Meta. The What, the How, and the Why Not? Essays Dedicated to Bernhard Steffen on the Occasion of His 60th Birthday. Lecture Notes in Computer Science (LNCS 11200), P186, DOI 10.1007/978-3-030-22348-9_12
   Garavel Hubert, 2013, International Journal on Software Tools for Technology Transfer, V15, P89, DOI 10.1007/s10009-012-0244-z
   Garavel H., 2013, BSI STUDY 875
   Garavel H, 2020, LECT NOTES COMPUT SC, V12327, P3, DOI 10.1007/978-3-030-58298-2_1
   GERHART S, 1994, IEEE SOFTWARE, V11, P21, DOI 10.1109/52.251198
   Ghazel M, 2017, IEEE T INTELL TRANSP, V18, P2667, DOI 10.1109/TITS.2017.2657695
   Ghazel M, 2014, TRANSPORT RES C-EMER, V42, P60, DOI 10.1016/j.trc.2014.02.002
   Gibson-Robinson T, 2016, INT J SOFTW TOOLS TE, V18, P149, DOI 10.1007/s10009-015-0377-y
   Gleirscher M, 2020, EMPIR SOFTW ENG, V25, P4473, DOI 10.1007/s10664-020-09836-5
   Gleirscher M, 2020, ACM COMPUT SURV, V52, DOI 10.1145/3357231
   Groote JF, 2014, MODELING AND ANALYSIS OF COMMUNICATING SYSTEMS, P1
   Hansen D, 2020, INT J SOFTW TOOLS TE, V22, P315, DOI 10.1007/s10009-020-00551-6
   Hartmanns A, 2015, SCI COMPUT PROGRAM, V112, P3, DOI 10.1016/j.scico.2015.08.009
   Haxthausen AE, 2011, FORM ASP COMPUT, V23, P191, DOI 10.1007/s00165-009-0143-6
   Haxthausen AE, 2016, LECT NOTES COMPUT SC, V9707, P160, DOI 10.1007/978-3-319-33951-1_12
   Huisman M., 2020, arXiv
   Hwang W, 2010, COMMUN ACM, V53, P130, DOI 10.1145/1735223.1735255
   Iliasov A, 2018, LECT NOTES COMPUT SC, V11093, P91, DOI 10.1007/978-3-319-99130-6_7
   James P, 2014, INT J SOFTW TOOLS TE, V16, P685, DOI 10.1007/s10009-014-0304-7
   Jensen Kurt, 2007, International Journal on Software Tools for Technology Transfer, V9, P213, DOI 10.1007/s10009-007-0038-x
   Katoen JP, 2016, PROCEEDINGS OF THE 31ST ANNUAL ACM-IEEE SYMPOSIUM ON LOGIC IN COMPUTER SCIENCE (LICS 2016), P31, DOI 10.1145/2933575.2934574
   Kitchenham B, 1997, COMPUT CONTROL ENG J, V8, P120, DOI 10.1049/cce:19970304
   Kitchenham B., 2004, TRSE0401 ICT AUSTR K
   Kwiatkowska Marta, 2011, Computer Aided Verification. Proceedings 23rd International Conference, CAV 2011, P585, DOI 10.1007/978-3-642-22110-1_47
   Lamport L., 2002, SPECIFYING SYSTEMS T
   Lecomte T, 2017, LECT NOTES COMPUT SC, V10623, P70, DOI 10.1007/978-3-319-70848-5_6
   Legay Axel, 2019, Computing and software science: state of the art and perspectives, P478
   Leuschel M, 2011, FORM ASP COMPUT, V23, P683, DOI 10.1007/s00165-010-0172-1
   Vu LH, 2017, SCI COMPUT PROGRAM, V133, P91, DOI 10.1016/j.scico.2016.05.010
   Mammar A, 2020, INT J SOFTW TOOLS TE, V22, P333, DOI 10.1007/s10009-019-00543-1
   Mazzanti Franco, 2021, Zenodo, DOI 10.5281/ZENODO.5679726
   Mazzanti F, 2018, ELECTRON P THEOR COM, P104, DOI 10.4204/EPTCS.268.4
   Mazzanti F, 2018, INT J SOFTW TOOLS TE, V20, P263, DOI 10.1007/s10009-018-0488-3
   McMillan K. L., 1993, Symbolic model checking
   Miller S. P, 2012, PROC 20 HIGH CONFIDE
   Moller Faron, 2013, Hardware and Software: Verification and Testing. 8th International Haifa Verification Conference, HVC 2012 Revised Selected Papers. LNCS 7857, P193, DOI 10.1007/978-3-642-39611-3_20
   Moscato M, 2017, LECT NOTES COMPUT SC, V10488, P213, DOI 10.1007/978-3-319-66266-4_14
   Nardone R, 2016, COMM COM INF SC, V596, P121, DOI 10.1007/978-3-319-29510-7_7
   Newcombe C, 2015, COMMUN ACM, V58, P66, DOI 10.1145/2699417
   Newcombe C, 2014, LECT NOTES COMPUT SC, V8477, P25, DOI 10.1007/978-3-662-43652-3_3
   Nyberg Mattias, 2018, Leveraging Applications of Formal Methods, Verification and Validation. Industrial Practice. 8th International Symposium, ISoLA 2018. Proceedings: Lecture Notes in Computer Science (LNCS 11247), P139, DOI 10.1007/978-3-030-03427-6_14
   Ottensooser A, 2012, J SYST SOFTWARE, V85, P596, DOI 10.1016/j.jss.2011.09.023
   Owre S, 2008, LECT NOTES COMPUT SC, V5170, P22, DOI 10.1007/978-3-540-71067-7_5
   Paulson Lawrence C., 1994, Isabelle: A Generic Theorem Prover
   Pourali P, 2018, 21ST ACM/IEEE INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS 2018), P224, DOI 10.1145/3239372.3239400
   Rierson L., 2017, Developing Safety-Critical Software: A Practical Guide for Aviation Software and DO-178C Compliance
   Robinson JA, 2001, Handbook of automated reasoning
   Rushby J, 2006, I C SOFTW ENG FORM M, P262
   Russo Jr A. G., 2013, IND DEPLOYMENT SYSTE, P81
   Schlick Rupert, 2018, Leveraging Applications of Formal Methods, Verification and Validation. Industrial Practice. 8th International Symposium, ISoLA 2018. Proceedings: Lecture Notes in Computer Science (LNCS 11247), P249, DOI 10.1007/978-3-030-03427-6_20
   Scupin R, 1997, HUM ORGAN, V56, P233, DOI 10.17730/humo.56.2.x335923511444655
   Steffen B., 1997, International Journal on Software Tools for Technology Transfer, V1, P9, DOI 10.1007/s100090050003
   Steffen B, 2017, INT J SOFTW TOOLS TE, V19, P1, DOI 10.1007/s10009-016-0446-x
   Stol KJ, 2018, ACM T SOFTW ENG METH, V27, DOI 10.1145/3241743
   Stroh P., 2018, NEAR2050
   Technical Committee ISO/TC 159 Ergonomics, 2018, 9241112018 ISO
   ter Beek MH, 2018, INT J SOFTW TOOLS TE, V20, P237, DOI 10.1007/s10009-018-0487-4
   ter Beek MH, 2011, SCI COMPUT PROGRAM, V76, P119, DOI 10.1016/j.scico.2010.07.002
   Thai Son Hoang, 2018, Abstract State Machines, Alloy, B, TLA, VDM, and Z. 6th International Conference, ABZ 2018. Proceedings: LNCS 10817, P251, DOI 10.1007/978-3-319-91271-4_17
   Fotso SJT, 2020, INT J SOFTW TOOLS TE, V22, P349, DOI 10.1007/s10009-019-00542-2
   van der Werff M., 2019, IRSE NEWS JUN, V256, P1
   Vanit-Anunchai S, 2018, INT J SOFTW TOOLS TE, V20, P243, DOI 10.1007/s10009-018-0482-9
   WING JM, 1990, COMPUTER, V23, P8, DOI 10.1109/2.58215
   Winter K., 2003, 26 AUSTRALASIAN COMP, P309
   Woodcock J, 2009, ACM COMPUT SURV, V41, DOI 10.1145/1592434.1592436
NR 128
TC 11
Z9 12
U1 1
U2 4
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD NOV 1
PY 2022
VL 48
IS 11
BP 4675
EP 4691
DI 10.1109/TSE.2021.3124677
PG 17
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 6C4JD
UT WOS:000881981800024
DA 2024-07-18
ER

PT J
AU Xie, XQ
   Yang, XC
   Wang, B
   He, Q
AF Xie, Xinqiang
   Yang, Xiaochun
   Wang, Bin
   He, Qiang
TI DevRec: Multi-Relationship Embedded Software Developer Recommendation
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Task analysis; Codes; Collaboration; Software development management;
   Software; Convolution; Computer bugs; Developer recommendation;
   multi-relationship; graph embedding; attention mechanism; graph neural
   network
ID IMPACT
AB Collaboration efficiency is of paramount importance for software development. Finding suitable developers is critical and challenging due to the difficulty of capturing developers' expertises, relevance as well as the sparsity of explicit developer-task interactions. To tackle this problem, existing developer recommendation approaches focus on modelling the developer's expertise or interactions with tasks based on their historical information. However, such approaches often suffer from low performance because they ignore some useful information that might help improve recommendation performance, such as 1) developers' collaboration relationship; 2) the interaction relationship between developer and task; and 3) the tasks' similarity relationship. To leverage the above-mentioned relationships, this paper proposes DevRec, a novel multi-relationship embedded approach for software developer recommendation. We first formally define the multi-relationships and then learn the vector representations (aka. embeddings) of developers and tasks. Second, we explicitly encoded the multi-relationships into the embedding process. Third, to refine the embeddings of developers and tasks, we recursively propagate the embeddings from their high-order connectivity based on graph convolution network. Moreover, to reveal the importance of different relationships, we generate their attentive weights based on attention mechanism. Finally, to evaluate the performance of DevRec, we conduct extensive experiments on two real-world datasets, and to investigate the usefulness of DevRec in practice, we conduct a user study at a large software company. The results show that DevRec outperforms other five state-of-the-art approaches significantly.
C1 [Xie, Xinqiang; Yang, Xiaochun; Wang, Bin] Northeastern Univ, Sch Comp Sci & Engn, Shenyang 110169, Peoples R China.
   [He, Qiang] Swinburne Univ Technol, Dept Comp Technol, Hawthorn, Vic 3122, Australia.
C3 Northeastern University - China; Swinburne University of Technology
RP Xie, XQ (corresponding author), Northeastern Univ, Sch Comp Sci & Engn, Shenyang 110169, Peoples R China.
EM 1610560@stu.neu.edu.cn; yangxc@mail.neu.edu.cn; binwang@mail.neu.edu.cn;
   qhe@swin.edu.au
OI Xie, Xinqiang/0000-0001-6733-4548
FU National Key Research and Development Program of China [2020YFB1707901];
   National Natural Science Foundation of China [62072088, 61991404]; Ten
   Thousand Talent Program [ZX20200035]; Liaoning Distinguished Professor
   [XLYC1902057]
FX The work was partially supported by theNational Key Research
   andDevelopment Program of China under Grant 2020YFB1707901, in part by
   the National Natural Science Foundation of China under Grants 62072088
   and 61991404, in part by Ten Thousand Talent Program under Grant
   ZX20200035, and in part by Liaoning Distinguished Professor underGrant
   XLYC1902057.
CR Ahmed T, 2017, IEEE INT CONF AUTOM, P106, DOI 10.1109/ASE.2017.8115623
   Alami A, 2019, PROC INT CONF SOFTW, P1073, DOI 10.1109/ICSE.2019.00111
   Amreen S, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P1082, DOI 10.1109/ASE.2019.00107
   Arcuri A, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1, DOI 10.1145/1985793.1985795
   Asthana S, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P937, DOI 10.1145/3338906.3340449
   Bacchelli A, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P712, DOI 10.1109/ICSE.2013.6606617
   Bahdanau D, 2016, Arxiv, DOI [arXiv:1409.0473, 10.48550/arXiv.1409.0473]
   Balachandran V, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P931, DOI 10.1109/ICSE.2013.6606642
   Berg R. V. D., 2017, STAT-US, V1050, P25
   Bird C., 2011, P 19 ACM SIGSOFT S 1, P4, DOI DOI 10.1145/2025113.2025119
   Bosu Amiangshu, 2013, 2013 ACM / IEEE International Symposium on Empirical Software Engineering and Measurement (ESEM), P133, DOI 10.1109/ESEM.2013.23
   Bosu A, 2017, IEEE T SOFTWARE ENG, V43, P56, DOI 10.1109/TSE.2016.2576451
   Bosu A, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P146, DOI 10.1109/MSR.2015.21
   Bosu A, 2014, IFIP ADV INF COMM TE, V427, P31
   Bronstein MM, 2017, IEEE SIGNAL PROC MAG, V34, P18, DOI 10.1109/MSP.2017.2693418
   Brown C., 2020, Proceedings of the IEEE/ACM 42nd International Conference on Software Engineering Workshops. ICSEW'20, P78
   Busbridge D, 2019, Arxiv, DOI arXiv:1904.05811
   Cao YX, 2019, WEB CONFERENCE 2019: PROCEEDINGS OF THE WORLD WIDE WEB CONFERENCE (WWW 2019), P151, DOI 10.1145/3308558.3313705
   Chaudhari S, 2021, Arxiv, DOI [arXiv:1904.02874, DOI 10.1145/3465055, 10.1145/3465055]
   Chouchen M, 2021, APPL SOFT COMPUT, V100, DOI 10.1016/j.asoc.2020.106908
   CLIFF N, 1993, PSYCHOL BULL, V114, P494, DOI 10.1037/0033-2909.114.3.494
   Cordeiro J., 2012, 2012 Third International Workshop on Recommendation Systems for Software Engineering (RSSE), P85, DOI 10.1109/RSSE.2012.6233418
   Dai HJ, 2016, PR MACH LEARN RES, V48
   Defferrard M, 2016, ADV NEUR IN, V29
   Demsar J, 2006, J MACH LEARN RES, V7, P1
   Do LNQ, 2022, IEEE T SOFTWARE ENG, V48, P835, DOI 10.1109/TSE.2020.3004525
   Dogan E, 2019, INT SYMP EMP SOFTWAR, P7
   Fan SH, 2019, KDD'19: PROCEEDINGS OF THE 25TH ACM SIGKDD INTERNATIONAL CONFERENCCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P2478, DOI 10.1145/3292500.3330673
   Fan WF, 2017, DATA SCI ENG, V2, P36, DOI 10.1007/s41019-016-0025-x
   Fu W, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P49, DOI 10.1145/3106237.3106256
   Glorot X., 2010, P INT C ART INT STAT, P249
   Gousios G, 2016, PROC INT CONF SOFTW, P285, DOI 10.1145/2884781.2884826
   Gousios G, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P345, DOI 10.1145/2568225.2568260
   Grover A, 2016, KDD'16: PROCEEDINGS OF THE 22ND ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P855, DOI 10.1145/2939672.2939754
   Guo ZY, 2020, IEEE INT SYMP PARAL, P425, DOI 10.1109/ISPA-BDCloud-SocialCom-SustainCom51426.2020.00079
   Hamilton WL, 2017, ADV NEUR IN, V30
   Hannebauer C, 2016, IEEE INT CONF AUTOM, P99, DOI 10.1145/2970276.2970306
   He Q, 2022, IEEE T SOFTWARE ENG, V48, P150, DOI 10.1109/TSE.2020.2982154
   He XN, 2018, PROCEEDINGS OF THE TWENTY-SEVENTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P2227
   Hirao T, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P578, DOI 10.1145/3338906.3338949
   Huang Y, 2022, IEEE T SOFTWARE ENG, V48, P1463, DOI 10.1109/TSE.2020.3021902
   Kabbur S, 2013, 19TH ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING (KDD'13), P659
   Kingma D. P., 2014, arXiv
   Knyazev B, 2019, ADV NEUR IN, V32
   Koren Y., 2008, P 14 ACM SIGKDD INT, P426
   Koren Y, 2009, COMPUTER, V42, P30, DOI 10.1109/MC.2009.263
   Kovalenko V, 2020, IEEE T SOFTWARE ENG, V46, P710, DOI 10.1109/TSE.2018.2868367
   Leung SO, 2011, J SOC SERV RES, V37, P412, DOI 10.1080/01488376.2011.580697
   Li B, 2019, IEEE T KNOWL DATA EN, V31, P120, DOI 10.1109/TKDE.2018.2823758
   Lin ZH, 2017, Arxiv, DOI [arXiv:1703.03130, DOI 10.48550/ARXIV.1703.03130]
   Lipcák J, 2018, EUROMICRO CONF PROC, P378, DOI 10.1109/SEAA.2018.00068
   Liu ZX, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P176, DOI 10.1109/ASE.2019.00026
   Ma Hao, 2008, P CIKM08 C INFORM KN, P931
   Maas A.L., 2013, P 30 INT C MACH LEAR, V30, P3
   MacLeod L, 2018, IEEE SOFTWARE, V35, P34, DOI 10.1109/MS.2017.265100500
   Martínez-Fernandez S, 2021, Arxiv, DOI arXiv:2105.01984
   McIntosh S, 2016, EMPIR SOFTW ENG, V21, P2146, DOI 10.1007/s10664-015-9381-9
   Mirsaeedi E, 2020, PROC INT CONF SOFTW, P1183, DOI 10.1145/3377811.3380335
   Monti F, 2017, ADV NEUR IN, V30
   Kipf TN, 2017, Arxiv, DOI arXiv:1609.02907
   Ouni A, 2016, PROC IEEE INT CONF S, P367, DOI 10.1109/ICSME.2016.65
   Perozzi B, 2014, PROCEEDINGS OF THE 20TH ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING (KDD'14), P701, DOI 10.1145/2623330.2623732
   Qiu JZ, 2018, KDD'18: PROCEEDINGS OF THE 24TH ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY & DATA MINING, P2110, DOI 10.1145/3219819.3220077
   Rendle S., 2009, P 25 C UNC ART INT, P452, DOI DOI 10.5555/1795114.1795167
   Robillard MP, 2010, IEEE SOFTWARE, V27, P80, DOI 10.1109/MS.2009.161
   Ruangwan S, 2019, EMPIR SOFTW ENG, V24, P973, DOI 10.1007/s10664-018-9646-1
   Sadowski C, 2018, 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING - SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2018), P181, DOI 10.1145/3183519.3183525
   Samer R, 2019, 2019 IEEE/WIC/ACM INTERNATIONAL CONFERENCE ON WEB INTELLIGENCE (WI 2019), P164, DOI 10.1145/3350546.3352514
   Sankar A., 2019, Dynamic graph representation learning via self-attention networks
   Scarselli F, 2009, IEEE T NEURAL NETWOR, V20, P61, DOI 10.1109/TNN.2008.2005605
   Schlichtkrull M, 2018, LECT NOTES COMPUT SC, V10843, P593, DOI 10.1007/978-3-319-93417-4_38
   Shen T, 2018, AAAI CONF ARTIF INTE, P5446
   Spadini D, 2020, PROC INT CONF SOFTW, P1171, DOI 10.1145/3377811.3380385
   Sun Y., 2021, P IJCAI MONTR QC CAN, P1579
   Tantithamthavorn C, 2019, IEEE T SOFTWARE ENG, V45, P683, DOI 10.1109/TSE.2018.2794977
   Tantithamthavorn C, 2016, PROC INT CONF SOFTW, P321, DOI 10.1145/2884781.2884857
   Thongtanunam P, 2021, IEEE T SOFTWARE ENG, V47, P2698, DOI 10.1109/TSE.2020.2964660
   Thongtanunam P, 2016, PROC INT CONF SOFTW, P1039, DOI 10.1145/2884781.2884852
   Thongtanunam P, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P141, DOI 10.1109/SANER.2015.7081824
   Tjoa E, 2021, IEEE T NEUR NET LEAR, V32, P4793, DOI 10.1109/TNNLS.2020.3027314
   Vashishth S, 2020, Arxiv, DOI [arXiv:1911.03082, DOI 10.48550/ARXIV.1911.03082]
   Vaswani A, 2017, ADV NEUR IN, V30
   Velickovic Petar, 2018, INT C LEARN REPR
   Voita E, 2019, 57TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (ACL 2019), P5797
   Wan Y, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P13, DOI 10.1109/ASE.2019.00012
   Wang X, 2019, PROCEEDINGS OF THE 42ND INTERNATIONAL ACM SIGIR CONFERENCE ON RESEARCH AND DEVELOPMENT IN INFORMATION RETRIEVAL (SIGIR '19), P165, DOI 10.1145/3331184.3331267
   Wang X, 2019, KDD'19: PROCEEDINGS OF THE 25TH ACM SIGKDD INTERNATIONAL CONFERENCCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P950, DOI 10.1145/3292500.3330989
   Wang ZZ, 2017, IEEE INT CONF AUTOM, P717, DOI 10.1109/ASE.2017.8115682
   Wu SW, 2022, Arxiv, DOI [arXiv:2011.02260, DOI 10.48550/ARXIV.2011.02260]
   Wu ZH, 2021, IEEE T NEUR NET LEAR, V32, P4, DOI 10.1109/TNNLS.2020.2978386
   Xia X, 2015, PROC IEEE INT CONF S, P261, DOI 10.1109/ICSM.2015.7332472
   Xia X, 2013, WORK CONF REVERSE EN, P72, DOI 10.1109/WCRE.2013.6671282
   Xia ZL, 2017, 6TH INTERNATIONAL WORKSHOP ON SOFTWARE MINING (SOFTWAREMINING), P24, DOI 10.1109/SOFTWAREMINING.2017.8100850
   Xin X, 2019, PROCEEDINGS OF THE 42ND INTERNATIONAL ACM SIGIR CONFERENCE ON RESEARCH AND DEVELOPMENT IN INFORMATION RETRIEVAL (SIGIR '19), P125, DOI 10.1145/3331184.3331188
   Xu KYL, 2018, PR MACH LEARN RES, V80
   Xue F, 2019, ACM T INFORM SYST, V37, DOI 10.1145/3314578
   Ye LT, 2018, IEEE INT CONF AUTOM, P808, DOI 10.1145/3238147.3240472
   Ying A.T. T., 2014, RECOMMENDATION SYSTE, P199
   Ying R, 2019, P INT C NEUR INF PRO, V32
   Ying R, 2018, KDD'18: PROCEEDINGS OF THE 24TH ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY & DATA MINING, P974, DOI 10.1145/3219819.3219890
   Yu Y, 2016, INFORM SOFTWARE TECH, V74, P204, DOI 10.1016/j.infsof.2016.01.004
   Yuan H, 2020, arXiv
   Zanjani MB, 2016, IEEE T SOFTWARE ENG, V42, P530, DOI 10.1109/TSE.2015.2500238
   Zimmermann T, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P531, DOI 10.1145/1368088.1368161
   Zitnik M, 2018, BIOINFORMATICS, V34, P457, DOI 10.1093/bioinformatics/bty294
NR 105
TC 3
Z9 3
U1 2
U2 15
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD NOV 1
PY 2022
VL 48
IS 11
BP 4357
EP 4379
DI 10.1109/TSE.2021.3117590
PG 23
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 6C4JD
UT WOS:000881981800007
DA 2024-07-18
ER

PT J
AU Guo, JM
   Zhang, Q
   Zhao, Y
   Shi, HY
   Jiang, Y
   Sun, JG
AF Guo, Jianmin
   Zhang, Quan
   Zhao, Yue
   Shi, Heyuan
   Jiang, Yu
   Sun, Jiaguang
TI RNN-Test: Towards Adversarial Testing for Recurrent Neural Network
   Systems
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Testing; Neurons; Convolutional neural networks; Measurement; Task
   analysis; Recurrent neural networks; Perturbation methods; Adversarial
   testing; recurrent neural networks; coverage metrics
AB While massive efforts have been investigated in adversarial testing of convolutional neural networks (CNN), testing for recurrent neural networks (RNN) is still limited and leaves threats for vast sequential application domains. In this paper, we propose an adversarial testing framework RNN-Test for RNN systems, focusing on sequence-to-sequence (seq2seq) tasks of widespread deployments, not only classification domains. First, we design a novel search methodology customized for RNN models by maximizing the inconsistency of RNN states against their inner dependencies to produce adversarial inputs. Next, we introduce two state-based coverage metrics according to the distinctive structure of RNNs to exercise more system behaviors. Finally, RNN-Test solves the joint optimization problem to maximize state inconsistency and state coverage, and crafts adversarial inputs for various tasks of different kinds of inputs. For evaluations, we apply RNN-Test on four RNN models of common structures. On the tested models, the RNN-Test approach is demonstrated to be competitive in generating adversarial inputs, outperforming FGSM-based and DLFuzz-based methods to reduce the model performance more sharply with 2.78% to 37.94% higher success (or generation) rate. RNN-Test could also achieve 52.65% to 66.45% higher adversary rate than testRNN on MNIST LSTM model, as well as 53.76% to 58.02% more perplexity with 16% higher generation rate than DeepStellar on PTB language model.Compared with the traditional neuron coverage, the proposed state coverage metrics as guidance excel with 4.17% to 97.22% higher success (or generation) rate.
C1 [Guo, Jianmin; Zhang, Quan; Jiang, Yu] Tsinghua Univ, Minist Educ, Sch Sofware, Beijing 100084, Peoples R China.
   [Guo, Jianmin; Zhang, Quan; Jiang, Yu] Tsinghua Univ, Minist Educ, Beijing Natl Res Ctr Informat Sci & Technol, Key Lab Informat Syst Secur, Beijing 100084, Peoples R China.
   [Zhao, Yue] Huawei Technol Co Ltd, Shenzhen 518129, Guangdong, Peoples R China.
   [Shi, Heyuan; Sun, Jiaguang] Tsinghua Univ, Sch Software, Beijing, Peoples R China.
C3 Tsinghua University; Tsinghua University; Huawei Technologies; Tsinghua
   University
RP Jiang, Y (corresponding author), Tsinghua Univ, Minist Educ, Sch Sofware, Beijing 100084, Peoples R China.; Jiang, Y (corresponding author), Tsinghua Univ, Minist Educ, Beijing Natl Res Ctr Informat Sci & Technol, Key Lab Informat Syst Secur, Beijing 100084, Peoples R China.; Shi, HY (corresponding author), Tsinghua Univ, Sch Software, Beijing, Peoples R China.
EM guojm17@mails.tsinghua.edu.cn; zzzzzq1998@gmail.com;
   zhao-y17@mail.tsinghua.org.cn; hey.shi@foxmail.com;
   jiangyu198964@126.com; sunjg@tsinghua.edu.cn
OI Jiang, Yu/0000-0003-0955-503X; Guo, Jianmin/0000-0001-6872-6383
FU NSFC Program [62022046, U1911401]; National Key Research and Development
   Project [2019YFB1706203, 20210823014]
FX This work was supported in part by the NSFC Program under Grants
   62022046 and U1911401, National Key Research and Development Project
   under Grant 2019YFB1706203, the Tencent-Tsinghua Collabration Research
   Project 20210823014.
CR [Anonymous], 2017, SEQ2SEQ MODEL CAN CO
   [Anonymous], 2008, PROC INT C MACHINE L
   [Anonymous], 2016, FREE EBOOKS PROJECT
   [Anonymous], 2016, VARIANT PTB WORD LM
   [Anonymous], 2017, BIDIRECTIONAL GRU AT
   [Anonymous], 2017, COMMON VOICE IS PROJ
   [Anonymous], 2015, 3 INT C LEARN REPR I
   [Anonymous], 2018, IMPLEMENTING LSTM GR
   [Anonymous], 2006, TATOEBA IS COLLECTIO
   Bojarski M, 2016, Arxiv, DOI [arXiv:1604.07316, 10.48550/arXiv.1604.07316]
   Carlini N, 2018, Arxiv, DOI arXiv:1801.01944
   Carlini N, 2017, P IEEE S SECUR PRIV, P39, DOI 10.1109/SP.2017.49
   Cheng Y, 2019, Arxiv, DOI arXiv:1906.02443
   Cho KYHY, 2014, Arxiv, DOI [arXiv:1406.1078, DOI 10.3115/V1/D14-1179, 10.48550/ARXIV.1406.1078, DOI 10.48550/ARXIV.1406.1078]
   Dong YZ, 2019, Arxiv, DOI arXiv:1911.05904
   Du XN, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P477, DOI 10.1145/3338906.3338954
   Garg S, 2020, Arxiv, DOI arXiv:2004.01970
   Gong Y., 2017, arXiv
   Graves A, 2013, INT CONF ACOUST SPEE, P6645, DOI 10.1109/ICASSP.2013.6638947
   Guo JM, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P739, DOI 10.1145/3236024.3264835
   Hannun A, 2014, Arxiv, DOI arXiv:1412.5567
   Harel-Canada F, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P851, DOI 10.1145/3368089.3409754
   He KM, 2016, PROC CVPR IEEE, P770, DOI 10.1109/CVPR.2016.90
   Hinton G, 2012, IEEE SIGNAL PROC MAG, V29, P82, DOI 10.1109/MSP.2012.2205597
   Hochreiter S, 1997, NEURAL COMPUT, V9, P1735, DOI [10.1162/neco.1997.9.1.1, 10.1007/978-3-642-24797-2]
   Huang W, 2021, Arxiv, DOI arXiv:1911.01952
   Jia R., 2017, P 2017 C EMP METH NA, P2021, DOI [10.18653/v1/D17-1215, DOI 10.18653/V1/D17-1215, DOI 10.18653/V1/D17-1215.URL]
   Krizhevsky A, 2017, COMMUN ACM, V60, P84, DOI 10.1145/3065386
   LeCun Y., 1998, MNIST DATABASE HANDW
   LeCun Y., 1995, The handbook of brain theory and neural networks, V3361, DOI [10.5555/303568.303704, DOI 10.5555/303568.303704]
   Li JF, 2018, Arxiv, DOI arXiv:1812.05271
   Li ZN, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: NEW IDEAS AND EMERGING RESULTS (ICSE-NIER 2019), P89, DOI 10.1109/ICSE-NIER.2019.00031
   Ma L, 2018, Arxiv, DOI arXiv:1806.07723
   Ma L, 2018, IEEE INT CONF AUTOM, P120, DOI 10.1145/3238147.3238202
   Mikolov T, 2011, INT CONF ACOUST SPEE, P5528
   Moosavi-Dezfooli SM, 2016, PROC CVPR IEEE, P2574, DOI 10.1109/CVPR.2016.282
   Odena A, 2018, Arxiv, DOI arXiv:1807.10875
   Papernot N, 2016, IEEE MILIT COMMUN C, P49, DOI 10.1109/MILCOM.2016.7795300
   Papernot N, 2016, 1ST IEEE EUROPEAN SYMPOSIUM ON SECURITY AND PRIVACY, P372, DOI 10.1109/EuroSP.2016.36
   Pei KX, 2017, PROCEEDINGS OF THE TWENTY-SIXTH ACM SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES (SOSP '17), P1, DOI 10.1145/3132747.3132785
   Rodriguez P, 1999, CONNECT SCI, V11, P5, DOI 10.1080/095400999116340
   Samanta S, 2017, Arxiv, DOI arXiv:1707.02812
   Sato M, 2018, Arxiv, DOI arXiv:1805.02917
   Shen DG, 2017, ANNU REV BIOMED ENG, V19, P221, DOI [10.1146/annurev-bioeng-071516044442, 10.1146/annurev-bioeng-071516-044442]
   Simonyan K, 2015, Arxiv, DOI arXiv:1409.1556
   Sun YC, 2019, Arxiv, DOI arXiv:1803.04792
   Szegedy C, 2014, Arxiv, DOI [arXiv:1312.6199, DOI 10.1109/CVPR.2015.7298594]
   Taylor A, 2003, Treebanks: Building and using parsed corpora, P5, DOI [DOI 10.1007/978-94-010-0201-1_1, 10.1007/978-94-010-0201-11]
   Le T, 2020, IEEE DATA MINING, P282, DOI [10.1109/ICDM50108.2020.00037, 10.1109/CSCI51800.2020.00054]
   Tian YC, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P303, DOI 10.1145/3180155.3180220
   U. ZCC,, 2019, UNDERSTANDING INPUTS
   van der Maaten L, 2008, J MACH LEARN RES, V9, P2579
   Wang BX, 2020, Arxiv, DOI arXiv:1912.10375
   Wang TL, 2020, Arxiv, DOI arXiv:2010.02338
   Yan SA, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P775, DOI 10.1145/3368089.3409671
   Zaremba W, 2015, Arxiv, DOI arXiv:1409.2329
   Zheng X., 2020, P 58 ANN M ASS COMPU, P6600, DOI [DOI 10.18653/V1/2020.ACL-MAIN.590, 10.18653/v1/2020.acl-main.590]
NR 57
TC 8
Z9 8
U1 9
U2 30
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD OCT 1
PY 2022
VL 48
IS 10
BP 4167
EP 4180
DI 10.1109/TSE.2021.3114353
PG 14
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 5L3GA
UT WOS:000870301800025
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Franch, X
   Glinz, M
   Mendez, D
   Seyff, N
AF Franch, Xavier
   Glinz, Martin
   Mendez, Daniel
   Seyff, Norbert
TI A Study About the Knowledge and Use of Requirements Engineering
   Standards in Industry
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Standards; ISO Standards; IEC Standards; Guidelines; Industries;
   Software engineering; Requirements engineering; Standard; requirements
   engineering; guideline; template; survey
AB Context. The use of standards is considered a vital part of any engineering discipline. So one could expect that standards play an important role in Requirements Engineering (RE) as well. However, little is known about the actual knowledge and use of RE-related standards in industry. Objective. In this article, we investigate to which extent standards and related artifacts such as templates or guidelines are known and used by RE practitioners. Method. To this end, we have conducted a questionnaire-based online survey. We could analyze the replies from 90 RE practitioners using a combination of closed and open-text questions. Results. Our results indicate that the knowledge and use of standards and related artifacts in RE is less widespread than one might expect from an engineering perspective. For example, about 47% of the respondents working as requirements engineers or business analysts do not know the core standard in RE, ISO/IEC/IEEE 29148. Participants in our study mostly use standards by personal decision rather than being imposed by their respective company, customer, or regulator. Beyond insufficient knowledge, we also found cultural and organizational factors impeding the widespread adoption of standards in RE. Conclusions. Overall, our results provide empirically informed insights into the actual use of standards and related artifacts in RE practice and - indirectly - about the value that the current standards create for RE practitioners.
C1 [Franch, Xavier] Univ Politecn Cataluna, ES-08034 Barcelona, Catalonia, Spain.
   [Glinz, Martin; Seyff, Norbert] Univ Zurich, CH-8006 Zurich, Switzerland.
   [Mendez, Daniel] Blekinge Inst Technol, S-37179 Karlskrona, Blekinge, Sweden.
   [Mendez, Daniel] Fortiss GmbH, D-80805 Munich, Germany.
   [Seyff, Norbert] Univ Appl Sci & Arts Northwestern Switzerland, CH-5210 Windisch, Switzerland.
C3 Universitat Politecnica de Catalunya; University of Zurich; Blekinge
   Institute Technology; fortiss; FHNW University of Applied Sciences &
   Arts Northwestern Switzerland
RP Franch, X (corresponding author), Univ Politecn Cataluna, ES-08034 Barcelona, Catalonia, Spain.
EM franch@essi.upc.edu; glinz@ifi.uzh.th; daniel.mendez@bth.se;
   norbert.seyff@fhnw.ch
RI Franch, Xavier/KAM-2369-2024; Mendez, Daniel/ABA-4579-2021
OI Franch, Xavier/0000-0001-9733-8830; Mendez, Daniel/0000-0003-0619-6027;
   Glinz, Martin/0000-0003-0636-2208; Seyff, Norbert/0000-0002-0138-892X
FU KKS foundation through the S.E.R.T. Research Profile project at Blekinge
   Institute of Technology
FX We thank our respondents for their time and effort which made this study
   possible. This work was partially supported by the KKS foundation
   through the S.E.R.T. Research Profile project at Blekinge Institute of
   Technology.
CR Accreditation Board for Engineering and Technology (ABET), 2017, CRIT ACCR ENG TECHN
   [Anonymous], 1998, IEEE RECOMMENDED PRA
   [Anonymous], 2010, ARP4754A
   [Anonymous], 2013, 16404 ISO
   [Anonymous], 2001, 912612001 ISOIEC
   [Anonymous], 2006, Standard IEC 62304
   [Anonymous], 2011, ISO/IEC/ IEEE 29148
   [Anonymous], 2012, DO178C EUROCAE RTCA
   [Anonymous], 2016, 265512016 ISO IEC
   Baltes S, 2016, ESEM'16: PROCEEDINGS OF THE 10TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, DOI 10.1145/2961111.2962628
   Dillman DA., 2009, INTERNET MAIL MIXED
   ENDEZFERNANDEZ DM, 2017, EMPIR SOFTW ENG, V22, P2298
   Franch X., 2020, PRACTITIONERS PERCEI, DOI [DOI 10.1109/TSE.2020.3042747, 10.1109/TSE.2020.3042747]
   Franch X, 2021, COMMUN ACM, V64, P69, DOI 10.1145/3418292
   García I, 2020, COMPUT STAND INTER, V67, DOI 10.1016/j.csi.2019.103377
   Glinz M., 2017, GLOSSARY REQUIREMENT
   Gravetter F. J., 2018, Research methods for the behavioral sciences
   HARDING B, 2010, P ASEE ANN C EXP
   Information Technology-Systems and Software Engineering-Guide for Requirements Engineering Tool Capabilities, 2009, 247662009 ISOIEC TR
   Khan AS, 2013, ASEE ANNU CONF EXPO
   Khan MU, 2019, J SYST SOFTWARE, V149, P396, DOI 10.1016/j.jss.2018.12.018
   Laporte CY, 2018, IEEE SOFTWARE, V35, P99, DOI 10.1109/MS.2017.4541041
   Osif B., 2014, INTEGRATING INFORM E, P115
   PFLEEGER SL, 1994, COMPUTER, V27, P71, DOI 10.1109/2.312041
   Phillips M, 2019, COLLECT MANAG, V44, P334, DOI 10.1080/01462679.2018.1562396
   Schneider F, 2013, PROCEDIA COMPUT SCI, V16, P796, DOI 10.1016/j.procs.2013.01.083
   Software Engineering-Software Product Quality Requirements and Evaluation (SQuaRE)-Quality Requirements, 2007, 2503 ISOIEC
   Systems and Software Engineering, 2011, 2501 ISOIEC
   Systems and Software Engineering-Life Cycle Processes-Requirements Engineering, 1998, 1233 IEEE
   Systems and Software Engineering-Lifecycle Profiles for Very Small Entities (VSEs), 2016, 2911 ISOIEC
   Systems and Software Engineering-Software Life Cycle Processes, 2017, 12207 ISOIECIEEE
   Systems and Software Engineering-System Life Cycle Processes, 2015, 15288 ISOIECIEEE
   Systems and Software Engineering-Vocabulary, 2017, 24765 ISOIECIEEE
   Wagner S, 2019, ACM T SOFTW ENG METH, V28, DOI 10.1145/3306607
NR 34
TC 5
Z9 5
U1 1
U2 12
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD SEPT 1
PY 2022
VL 48
IS 9
BP 3310
EP 3325
DI 10.1109/TSE.2021.3087792
PG 16
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 4O3GR
UT WOS:000854591500006
OA Green Submitted, Green Published
DA 2024-07-18
ER

PT J
AU Gaaloul, K
   Menghi, C
   Nejati, S
   Briand, LC
   Parache, YI
AF Gaaloul, Khouloud
   Menghi, Claudio
   Nejati, Shiva
   Briand, Lionel C.
   Parache, Yago Isasi
TI Combining Genetic Programming and Model Checking to Generate Environment
   Assumptions
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Software packages; Satellites; Mathematical model; Computational
   modeling; Model checking; Numerical models; Attitude control;
   Environment assumptions; model checking; machine learning; decision
   trees; genetic programming; search-based software testing
ID GUARANTEE; ASSUME; VERIFICATION; DESIGN; SYSTEM
AB Software verification may yield spurious failures when environment assumptions are not accounted for. Environment assumptions are the expectations that a system or a component makes about its operational environment and are often specified in terms of conditions over the inputs of that system or component. In this article, we propose an approach to automatically infer environment assumptions for Cyber-Physical Systems (CPS). Our approach improves the state-of-the-art in three different ways: First, we learn assumptions for complex CPS models involving signal and numeric variables; second, the learned assumptions include arithmetic expressions defined over multiple variables; third, we identify the trade-off between soundness and coverage of environment assumptions and demonstrate the flexibility of our approach in prioritizing either of these criteria. We evaluate our approach using a public domain benchmark of CPS models from Lockheed Martin and a component of a satellite control system from LuxSpace, a satellite system provider. The results show that our approach outperforms state-of-the-art techniques on learning assumptions for CPS models, and further, when applied to our industrial CPS model, our approach is able to learn assumptions that are sufficiently close to the assumptions manually developed by engineers to be of practical value.
C1 [Gaaloul, Khouloud; Menghi, Claudio; Nejati, Shiva; Briand, Lionel C.] Univ Luxembourg, L-4365 Esch Sur Alzette, Luxembourg.
   [Nejati, Shiva; Briand, Lionel C.] Univ Ottawa, Ottawa, ON K1N 6N5, Canada.
   [Parache, Yago Isasi] LuxSpace, L-6832 Betzdorf, Luxembourg.
C3 University of Luxembourg; University of Ottawa
RP Menghi, C (corresponding author), Univ Luxembourg, L-4365 Esch Sur Alzette, Luxembourg.
EM khouloud.gaaloul@uni.lu; claudio.merighii@uni.lu; snejati@uottawa.ca;
   lbriand@uottawa.ca; isasi@luxspace.lu
RI Nejati, Shiva/KBT-7650-2024; MENGHI, CLAUDIO/AAC-2265-2022
OI MENGHI, CLAUDIO/0000-0001-5303-8481; Briand, Lionel/0000-0002-1393-1010;
   GAALOUL, KHOULOUD/0000-0002-4156-9768
FU Luxembourg National Research Fund [BRIDGES18/IS/12632261]; European
   Research Council (ERC) through the European Union [694277]; NSERC of
   Canada
FX The author would like to thank the anonymous reviewers for the useful
   comments. This work was carried out at the HPC Facilities of the
   University of Luxembourg. This work was supported in part by the
   Luxembourg National Research Fund under Grant BRIDGES18/IS/12632261, in
   part by the European Research Council (ERC) through the European Union's
   Horizon 2020 Research and Innovation Programme under Grant 694277, and
   in part by the NSERC of Canada through the Discovery and CRC programs.
CR Acquatella BP, 2018, T JPN SOC AERONAUT S, V61, P79, DOI 10.2322/tjsass.61.79
   Alur R, 2013, 2013 FORMAL METHODS IN COMPUTER-AIDED DESIGN (FMCAD), P26
   Annapureddy Y, 2011, LECT NOTES COMPUT SC, V6605, P254, DOI 10.1007/978-3-642-19835-9_21
   [Anonymous], QRA CORP
   [Anonymous], MATLAB GP TOOLBOX
   [Anonymous], EXACTEARTH
   [Anonymous], Lockheed Martin
   [Anonymous], 2001, LNCS, DOI [DOI 10.1007/3-540-45449-7_11, DOI 10.1007/3-540-45449-711]
   [Anonymous], Handbook of Biological Statistics
   [Anonymous], THE EUROPEAN SPACE A
   [Anonymous], SUBSYSTEMS
   [Anonymous], VIRTUAL VECTOR
   [Anonymous], Simulink
   [Anonymous], FITCTREE
   [Anonymous], ADDITIONAL MAT
   [Anonymous], LUXSPACE
   [Anonymous], ASSERTIONBLOCK
   [Anonymous], FLOOR
   [Anonymous], S-function
   [Anonymous], MEX FUNCTION
   [Anonymous], QVTRACE
   [Anonymous], MathWorks
   [Anonymous], 2013, 16 INT C HYBR SYST C
   Arcuri A, 2013, EMPIR SOFTW ENG, V18, P594, DOI 10.1007/s10664-013-9249-9
   Arcuri Andrea., 2011, ISSTA
   Arrieta A, 2020, GECCO'20: PROCEEDINGS OF THE 2020 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P1222, DOI 10.1145/3377930.3389810
   Arrieta A, 2020, IEEE ICST WORKSHOP, P1, DOI 10.1109/ICSTW50294.2020.00018
   Arrieta A, 2019, INFORM SOFTWARE TECH, V114, P137, DOI 10.1016/j.infsof.2019.06.009
   Arrieta A, 2017, IEEE C EVOL COMPUTAT, P688, DOI 10.1109/CEC.2017.7969377
   Banzhaf W., 1998, GENETIC PROGRAMMING
   Barringer H., 2003, P 2 WORKSHOP SPECIFI, P14
   Bernaerts M, 2019, 2019 ACM/IEEE 22ND INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS COMPANION (MODELS-C 2019), P18, DOI 10.1109/MODELS-C.2019.00010
   Bobaru MG, 2008, LECT NOTES COMPUT SC, V5123, P135
   Borg M, 2021, Arxiv, DOI arXiv:2012.06822
   Borges RV, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P856, DOI 10.1145/1985793.1985924
   Boufaied C, 2020, IEEE INT CONF AUTOM, P1004, DOI 10.1145/3324884.3416631
   Byun H, 2002, LECT NOTES COMPUT SC, V2388, P213
   Cassandras C.G., 2008, INTRO DISCRETE EVENT, DOI DOI 10.1007/978-0-387-68612-7
   Cavezza DG, 2020, FME WORKS FORM, P66, DOI 10.1145/3372020.3391557
   Chaturvedi D.K., 2009, MODELING SIMULATION
   Chen TY, 2004, LECT NOTES COMPUT SC, V3321, P320
   Chen YQ, 2016, LECT NOTES COMPUT SC, V9995, P155, DOI 10.1007/978-3-319-48989-6_10
   Cobleigh JM, 2003, LECT NOTES COMPUT SC, V2619, P331
   de Alfaro L., 2001, Software Engineering Notes, V26, P109, DOI 10.1145/503271.503226
   de Moura L, 2008, LECT NOTES COMPUT SC, V4963, P337, DOI 10.1007/978-3-540-78800-3_24
   Derler P, 2013, ACM IEEE INT CONF CY, P109, DOI 10.1109/ICCPS.2013.6604005
   Derler P, 2012, P IEEE, V100, P13, DOI 10.1109/JPROC.2011.2160929
   Ernst G., 2019, International Workshop on Applied Verification of Continuous and Hybrid Systems, V61, P129
   Ernst G., 2020, EPiC Series in Computing, V74
   Ernst MD, 2007, SCI COMPUT PROGRAM, V69, P35, DOI 10.1016/j.scico.2007.01.015
   ESA, BUILD TEST SPAC
   Flanagan C., 2001, FME 2001: Formal Methods for Increasing Software Productivity. International Symposium on Formal Methods Europe. Proceedings (Lecture Notes in Computer Science Vol.2021), P500
   Frank E., 2016, THE WEKA WORKBENCH
   Frehse G., 2011, COMPUTER AIDED VERIF, P379, DOI [DOI 10.1007/978-3-642-22110-1, 10.1007/978-3-642-22110-1_30]
   Gaaloul K, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P159, DOI 10.1145/3368089.3409737
   Garg P, 2016, ACM SIGPLAN NOTICES, V51, P499, DOI 10.1145/2914770.2837664
   Garg P, 2014, LECT NOTES COMPUT SC, V8559, P69, DOI 10.1007/978-3-319-08867-9_5
   Giannakopoulou D, 2004, PROC INT CONF SOFTW, P211, DOI 10.1109/ICSE.2004.1317443
   Giannakopoulou D, 2002, ASE 2002: 17TH IEEE INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, P3, DOI 10.1109/ASE.2002.1114984
   Giannakopoulou D, 2008, IET SOFTW, V2, P547, DOI 10.1049/iet-sen:20080012
   Giannakopoulou D, 2020, LECT NOTES COMPUT SC, V12045, P19, DOI 10.1007/978-3-030-44429-7_2
   Giannakopoulou Dimitra., 2014, Proceedings of the International Conference on Automated Software Engineering (ASE), P373
   Gopinath D, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P809, DOI 10.1109/ASE.2019.00079
   Gulwani S, 2017, FOUND TRENDS PROGRAM, V4, P1, DOI 10.1561/2500000010
   Harman M, 2012, ACM COMPUT SURV, V45, DOI 10.1145/2379776.2379787
   Henzinger TA, 1998, LECT NOTES COMPUT SC, V1427, P440, DOI 10.1007/BFb0028765
   Huang RB, 2021, IEEE T SOFTWARE ENG, V47, P2052, DOI 10.1109/TSE.2019.2942921
   Jin XQ, 2015, IEEE T COMPUT AID D, V34, P1704, DOI 10.1109/TCAD.2015.2421907
   Kampmann A, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P1228, DOI 10.1145/3368089.3409687
   Keegan M, 2022, IEEE T SOFTWARE ENG, V48, P1965, DOI 10.1109/TSE.2020.3044532
   Kitzelmann E, 2010, LECT NOTES COMPUT SC, V5812, P50
   KOYMANS R, 1990, REAL-TIME SYST, V2, P255, DOI 10.1007/BF01995674
   KOZA JR, 1994, STAT COMPUT, V4, P87, DOI 10.1007/BF00175355
   Lin SW, 2014, IEEE T SOFTWARE ENG, V40, P137, DOI 10.1109/TSE.2013.57
   Lones M.A., 2011, Genetic Programming and Evolvable Machines, V12, P333
   Madár J, 2005, IND ENG CHEM RES, V44, P3178, DOI 10.1021/ie049626e
   Maler O, 2004, LECT NOTES COMPUT SC, V3253, P152, DOI 10.1007/978-3-540-30206-3_12
   Maoz S, 2019, PROC INT CONF SOFTW, P1016, DOI 10.1109/ICSE.2019.00106
   Markiegi U, 2019, SAC '19: PROCEEDINGS OF THE 34TH ACM/SIGAPP SYMPOSIUM ON APPLIED COMPUTING, P2362, DOI 10.1145/3297280.3297512
   Mavridou A, 2020, INT REQUIR ENG CONF, P300, DOI 10.1109/RE48521.2020.00040
   Menghi C, 2021, PROC INT CONF SOFTW, P847, DOI 10.1109/ICSE43902.2021.00082
   Menghi C, 2020, PROC INT CONF SOFTW, P372, DOI 10.1145/3377811.3380370
   Menghi C, 2019, FORM ASP COMPUT, V31, P459, DOI 10.1007/s00165-019-00484-1
   Menghi C, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P27, DOI 10.1145/3338906.3338920
   Menghi C, 2018, LECT NOTES COMPUT SC, V10802, P169, DOI 10.1007/978-3-319-89363-1_10
   Montana DJ, 1995, EVOL COMPUT, V3, P199, DOI 10.1162/evco.1995.3.2.199
   Nejati S, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P1015, DOI 10.1145/3338906.3340444
   Nuzzo P, 2014, DES AUT TEST EUROPE
   Nuzzo P, 2014, IEEE ACCESS, V2, P1, DOI 10.1109/ACCESS.2013.2295764
   Piterman N., IEEE T SOFTW ENG, DOI [10.1109/TSE.2020.3044532, DOI 10.1109/TSE.2020.3044532]
   Poli R, 1998, SOFT COMPUTING IN ENGINEERING DESIGN AND MANUFACTURING, P180
   Poli R., 2008, A Field Guide to Genetic Programming
   Poli R, 1998, EVOL COMPUT, V6, P231, DOI 10.1162/evco.1998.6.3.231
   RAMADGE PJ, 1987, SIAM J CONTROL OPTIM, V25, P206, DOI 10.1137/0325013
   RAMADGE PJG, 1989, P IEEE, V77, P81, DOI 10.1109/5.21072
   Sangiovanni-Vincentelli A, 2012, EUR J CONTROL, V18, P217, DOI 10.3166/EJC.18.217-238
   Sato S, 2021, Arxiv, DOI arXiv:2012.00319
   Schaap A, 2018, 21ST ACM/IEEE INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS: COMPANION PROCEEDINGS (MODELS-COMPANION '18), P47, DOI 10.1145/3270112.3270115
   Searson D. P., 2015, HDB GENETIC PROGRAMM
   Shin SY, 2021, J SYST SOFTWARE, V171, DOI 10.1016/j.jss.2020.110813
   Silva S., 2003, Proc., Nordic MATLAB Conference, Copenhagen, P273
   Solar-Lezama A, 2006, ACM SIGPLAN NOTICES, V41, P404, DOI 10.1145/1168917.1168907
   Sun XN, 2009, DES AUT CON, P605
   Tiwari Ashish, 2012, Computer Aided Verification. Proceedings 24th International Conference, CAV 2012, P725, DOI 10.1007/978-3-642-31424-7_56
   Tuncali CE, 2020, IEEE T INTELL VEHICL, V5, P265, DOI 10.1109/TIV.2019.2955903
   Varrette S, 2014, 2014 INTERNATIONAL CONFERENCE ON HIGH PERFORMANCE COMPUTING & SIMULATION (HPCS), P959, DOI 10.1109/HPCSim.2014.6903792
   Wenchao Li, 2011, 2011 9th IEEE/ACM International Conference on Formal Methods and Models for Codesign (MEMOCODE 2011), P43, DOI 10.1109/MEMCOD.2011.5970509
   Wie B., 1998, SPACE VEHICLE DYNAMI
NR 108
TC 2
Z9 2
U1 0
U2 1
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD SEPT 1
PY 2022
VL 48
IS 9
BP 3664
EP 3685
DI 10.1109/TSE.2021.3101818
PG 22
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 4O3GR
UT WOS:000854591500026
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Kula, E
   Greuter, E
   van Deursen, A
   Gousios, G
AF Kula, Elvan
   Greuter, Eric
   van Deursen, Arie
   Gousios, Georgios
TI Factors Affecting On-Time Delivery in Large-Scale Agile Software
   Development
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Software; Schedules; Estimation; Risk management; Tools; Agile software
   development; Task analysis; Software engineering management; effort
   estimation; empirical studies; software companies
ID DEVELOPMENT-PROJECTS; SUCCESS FACTORS; RISK; INFORMATION; PERFORMANCE;
   CHALLENGES; IMPACT; MANAGEMENT; COMPONENTS; REGRESSION
AB Late delivery of software projects and cost overruns have been common problems in the software industry for decades. Both problems are manifestations of deficiencies in effort estimation during project planning. With software projects being complex socio-technical systems, a large pool of factors can affect effort estimation and on-time delivery. To identify the most relevant factors and their interactions affecting schedule deviations in large-scale agile software development, we conducted a mixed-methods case study at ING: two rounds of surveys revealed a multitude of organizational, people, process, project and technical factors which were then quantified and statistically modeled using software repository data from 185 teams. We find that factors such as requirements refinement, task dependencies, organizational alignment and organizational politics are perceived to have the greatest impact on on-time delivery, whereas proxy measures such as project size, number of dependencies, historical delivery performance and team familiarity can help explain a large degree of schedule deviations. We also discover hierarchical interactions among factors: organizational factors are perceived to interact with people factors, which in turn impact technical factors. We compose our findings in the form of a conceptual framework representing influential factors and their relationships to on-time delivery. Our results can help practitioners identify and manage delay risks in agile settings, can inform the design of automated tools to predict schedule overruns and can contribute towards the development of a relational theory of software project management.
C1 [Kula, Elvan] Delft Univ Technol, NL-2628 CD Delft, Netherlands.
   [Kula, Elvan; Greuter, Eric] ING Tech, NL-1102 MG Amsterdam, Netherlands.
   [van Deursen, Arie; Gousios, Georgios] Delft Univ Technol, NL-2628 Delft, Netherlands.
C3 Delft University of Technology; Delft University of Technology
RP Kula, E (corresponding author), Delft Univ Technol, NL-2628 CD Delft, Netherlands.
EM E.Kula@tudelft.nl; Eric.Greuter@ing.com; Arie.vanDeursen@tudelft.nl;
   G.Gousiosi@tudelft.nl
RI ; van Deursen, Arie/G-3084-2011
OI Gousios, Georgios/0000-0002-8495-7939; Kula, Elvan/0000-0002-8577-3760;
   van Deursen, Arie/0000-0003-4850-3312
FU ING through AI for Fintech Research (AFR); ICAI lab
FX This work was partially supported by ING through AI for Fintech Research
   (AFR), an ICAI lab. We thank all the survey participants at ING who
   provided valuable inputs for this study. We would also like to thank our
   anonymous reviewers for their constructive feedback and suggestions that
   greatly improved our paper.
CR Abrahamsson Pekka, 2007, 2007 First International Symposium on Empirical Software Engineering and Measurement, P344
   Abrahamsson P, 2011, INT SYMP EMP SOFTWAR, P400, DOI 10.1109/ESEM.2011.58
   Addison T., 2002, Proceedings of SAICSIT, P128
   Agrawal M, 2007, IEEE T SOFTWARE ENG, V33, P145, DOI 10.1109/TSE.2007.29
   [Anonymous], 1986, Software Engineering Metrics and Models
   [Anonymous], 2007, Scaling Software Agility: Best Practices for Large Enterprises
   [Anonymous], 1992, Context-Effects in Social and Psychological Research, DOI DOI 10.1007/978-1-4612-2848-6_3
   [Anonymous], 2014, SOFTWARE PROJECT EFF
   [Anonymous], 2005, CMUSEI2005HB004
   Assar S, 2016, EMPIR SOFTW ENG, V21, P1437, DOI 10.1007/s10664-015-9391-7
   Aubé C, 2005, GROUP DYN-THEOR RES, V9, P189, DOI 10.1037/1089-2699.9.3.189
   Barki H., 1993, Journal of Management Information Systems, V10, P203
   BARKI H, 1989, MIS QUART, V13, P53, DOI 10.2307/248700
   ben Othmane L, 2014, IEEE T DEPEND SECURE, V11, P497, DOI 10.1109/TDSC.2014.2298011
   Bhattacharya Pamela., 2011, PROCEEDING 8 WORKING, P207, DOI DOI 10.1145/1985441.1985472
   BOEHM BW, 1988, IEEE T SOFTWARE ENG, V14, P1462, DOI 10.1109/32.6191
   BOEHM BW, 1991, IEEE SOFTWARE, V8, P32, DOI 10.1109/52.62930
   Carr Marvin, 1993, CMUSEI93TR006
   Cervone H. Frank, 2011, OCLC Systems & Services, V27, P18, DOI 10.1108/10650751111106528
   Charette R. N., 1989, SOFTWARE ENG RISK AN
   Cho JY, 2014, QUAL REP, V19
   Choetkiertikul M, 2015, IEEE INT CONF AUTOM, P353, DOI 10.1109/ASE.2015.55
   Choetkiertikul M, 2019, IEEE T SOFTWARE ENG, V45, P637, DOI 10.1109/TSE.2018.2792473
   Chow T, 2008, J SYST SOFTWARE, V81, P961, DOI 10.1016/j.jss.2007.08.020
   Chudoba KM, 2005, INFORM SYST J, V15, P279, DOI 10.1111/j.1365-2575.2005.00200.x
   COHEN J, 1960, EDUC PSYCHOL MEAS, V20, P37, DOI 10.1177/001316446002000104
   Cohn M., 2005, AGILE ESTIMATION PLA
   Cohn Mike., 2004, User Stories Applied: For Agile Software Development
   Conboy K, 2019, IEEE SOFTWARE, V36, P44, DOI 10.1109/MS.2018.2884865
   Danh NC, 2013, PROCEEDINGS OF 2013 IEEE RIVF INTERNATIONAL CONFERENCE ON COMPUTING AND COMMUNICATION TECHNOLOGIES: RESEARCH, INNOVATION, AND VISION FOR THE FUTURE (RIVF), P27, DOI 10.1109/RIVF.2013.6719861
   Dantas E, 2018, INT J SOFTW ENG KNOW, V28, P1811, DOI 10.1142/S0218194018400302
   de Bakker K, 2010, INT J PROJ MANAG, V28, P493, DOI 10.1016/j.ijproman.2009.07.002
   de Leeuw E.D., 1992, DATA QUALITY MAIL TE
   DeFranco JF, 2017, INNOV SYST SOFTW ENG, V13, P129, DOI 10.1007/s11334-017-0287-0
   Dikert K, 2016, J SYST SOFTWARE, V119, P87, DOI 10.1016/j.jss.2016.06.013
   Downs F S., 1986, The relationship of theory and research
   Dreyfus H. L., 1980, A five-stage model of mental activities involved in directed skill acquisition
   Elbanna A, 2016, IEEE SOFTWARE, V33, P72, DOI 10.1109/MS.2015.150
   Ewusi-Mensah K., 2003, Software Development Failures
   Fitzgerald Brian, 2013, 2013 35th International Conference on Software Engineering (ICSE), P863, DOI 10.1109/ICSE.2013.6606635
   Foss T, 2003, IEEE T SOFTWARE ENG, V29, P985, DOI 10.1109/TSE.2003.1245300
   FRIEDMAN JH, 1991, ANN STAT, V19, P1, DOI 10.1214/aos/1176347963
   FURNHAM A, 1986, PERS INDIV DIFFER, V7, P385, DOI 10.1016/0191-8869(86)90014-0
   Furulund KM, 2007, USIC 2007: PROCEEDINGS OF THE SEVENTH INTERNATIONAL CONFERENCE ON QUALITY SOFTWARE, P342
   Giger E., 2010, P 2 INT WORKSH REC S, P52
   Gomm R., 2000, CASE STUDY METHOD, DOI [10.4135/9780857024367.d7, DOI 10.4135/9780857024367.D7]
   Grapenthin S, 2014, EUROMICRO CONF PROC, P1, DOI 10.1109/SEAA.2014.71
   Grimstad S, 2005, 2005 11TH INTERNATIONAL SYMPOSIUM ON SOFTWARE METRICS (METRICS), P4
   GROVES RM, 1992, PUBLIC OPIN QUART, V56, P475, DOI 10.1086/269338
   Gupta Rajeev, 2008, 2008 International Conference on Autonomic Computing (ICAC '08), P141, DOI 10.1109/ICAC.2008.22
   Halkjelsvik T, 2012, PSYCHOL BULL, V138, P238, DOI 10.1037/a0025996
   Han WM, 2007, J SYST SOFTWARE, V80, P42, DOI 10.1016/j.jss.2006.04.030
   Hartmann D, 2006, AGILE 2006, Proceedings, P126, DOI 10.1109/AGILE.2006.17
   Hearty P, 2009, IEEE T SOFTWARE ENG, V35, P124, DOI 10.1109/TSE.2008.76
   HEEMSTRA FJ, 1992, INFORM SOFTWARE TECH, V34, P627, DOI 10.1016/0950-5849(92)90068-Z
   Hoodat Hooman., 2009, World Academy of Science, Engineering and Technology, V56, P446
   Huang HY, 2007, SIGMIS CPR 2007: PROCEEDINGS OF THE 2007 ACM SIGMIS CPR CONFERENCE GLOBAL INFORMATION TECHNOLOGY WORKFORCE, P36
   Huckman RS, 2009, MANAGE SCI, V55, P85, DOI 10.1287/mnsc.1080.0921
   Inayat I, 2015, COMPUT HUM BEHAV, V51, P915, DOI 10.1016/j.chb.2014.10.046
   JARVENPAA SL, 1991, MIS QUART, V15, P205, DOI 10.2307/249382
   Jiang J.J., 2000, PROJ MANAG J, V31, P19, DOI DOI 10.1177/875697280003100404
   Jiang JJ, 2001, IEEE T ENG MANAGE, V48, P46, DOI 10.1109/17.913165
   Jones C, 1994, ASSESSMENT CONTROL S
   Jorgensen M, 2004, IEEE T SOFTWARE ENG, V30, P993, DOI 10.1109/TSE.2004.103
   Jorgensen M, 2004, J SYST SOFTWARE, V70, P37, DOI 10.1016/S0164-1212(02)00156-5
   Jorgensen M, 2008, IEEE SOFTWARE, V25, P78
   Jorgensen M, 2014, IEEE SOFTWARE, V31, P37, DOI 10.1109/MS.2014.49
   Jorgensen M, 2009, IEEE T SOFTWARE ENG, V35, P368, DOI 10.1109/TSE.2009.2
   Joseph HR, 2015, 2015 IEEE/ACM 37th IEEE International Conference on Software Engineering, Vol 2, P833, DOI 10.1109/ICSE.2015.271
   Judea P., 2000, Causality: models, reasoning, and inference, V521, P8
   Kajko-Mattsson M, 2008, ESEM'08: PROCEEDINGS OF THE 2008 ACM-IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, P111
   Kitchenham B. A., 2001, IEE Proceedings-Software, V148, P81, DOI 10.1049/ip-sen:20010506
   Kitchenharn B., 2003, Software Engineering Notes, V28, P24, DOI 10.1145/638750.638758
   Kniberg H., 2012, Scaling agile @ spotify with tribes, squads, chapters guilds
   Kocaguneli E, 2012, IEEE T SOFTWARE ENG, V38, P1403, DOI 10.1109/TSE.2011.111
   Kontio J, 2004, PROC INT CONF SOFTW, P732, DOI 10.1109/ICSE.2004.1317510
   Kula E., 2020, SUPPLEMENTAL MAT FAC
   LEDERER AL, 1995, J SYST SOFTWARE, V31, P125, DOI 10.1016/0164-1212(94)00092-2
   Letier E, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P883, DOI 10.1145/2568225.2568239
   Maddila C, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P874, DOI 10.1145/3338906.3340457
   Mahnic V, 2012, J SYST SOFTWARE, V85, P2086, DOI 10.1016/j.jss.2012.04.005
   MARCH JG, 1987, MANAGE SCI, V33, P1404, DOI 10.1287/mnsc.33.11.1404
   Menezes J, 2019, SOFTWARE QUAL J, V27, P1149, DOI 10.1007/s11219-018-9427-5
   Menzies T, 2006, IEEE T SOFTWARE ENG, V32, P883, DOI 10.1109/TSE.2006.114
   MIYAZAKI Y, 1994, J SYST SOFTWARE, V27, P3, DOI 10.1016/0164-1212(94)90110-4
   Molléri JS, 2020, INFORM SOFTWARE TECH, V119, DOI 10.1016/j.infsof.2019.106240
   Molleri JS, 2016, ESEM'16: PROCEEDINGS OF THE 10TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, DOI 10.1145/2961111.2962619
   Morgenshtern O, 2007, INFORM SOFTWARE TECH, V49, P827, DOI 10.1016/j.infsof.2006.09.006
   Moyon F, 2018, PROCEEDINGS 2018 IEEE/ACM 4TH INTERNATIONAL WORKSHOP ON RAPID CONTINUOUS SOFTWARE ENGINEERING (RCOSE), P31, DOI 10.1145/3194760.3194767
   Noll J, 2016, COMM COM INF SC, V609, P227, DOI 10.1007/978-3-319-38980-6_17
   Paasivaara M, 2018, EMPIR SOFTW ENG, V23, P2550, DOI 10.1007/s10664-017-9555-8
   Paasivaara M, 2017, INT CONF GLOBAL SOFT, P36, DOI 10.1109/ICGSE.2017.15
   Panjer LucasD., 2007, Proceedings of the 4th International Workshop on Mining Software Repositories, MSR '07, P29
   Port D, 2008, ESEM'08: PROCEEDINGS OF THE 2008 ACM-IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, P51
   Ralph Paul, 2018, P 22 INT C EV ASS SO, P13
   Ropponen J, 2000, IEEE T SOFTWARE ENG, V26, P98, DOI 10.1109/32.841112
   Schmidt R, 2001, J MANAGE INFORM SYST, V17, P5, DOI 10.1080/07421222.2001.11045662
   Schwaber Ken, 2002, Series in agile software development, V1
   Sekitoleko N., 2014, Agile processes in software engineering and extreme programming, P46, DOI DOI 10.1007/978-3-319-06862-6_4
   Sharma P, 2017, 2017 INTERNATIONAL CONFERENCE ON NEXT GENERATION COMPUTING AND INFORMATION SYSTEMS (ICNGCIS), P43, DOI 10.1109/ICNGCIS.2017.33
   Song QB, 2006, IEEE T SOFTWARE ENG, V32, P69, DOI 10.1109/TSE.2006.1599417
   Strode DE, 2012, J SYST SOFTWARE, V85, P1222, DOI 10.1016/j.jss.2012.02.017
   Sungjoo Kang, 2010, 2010 IEEE/ACIS 9th International Conference on Computer and Information Science (ICIS 2010), P743, DOI 10.1109/ICIS.2010.126
   Torrecilla-Salinas CJ, 2015, INFORM SOFTWARE TECH, V61, P124, DOI 10.1016/j.infsof.2015.01.006
   Trendowicz A, 2008, IFIP CENTR E EUR C S, P232
   Trendowicz A, 2008, E-INFORMATICA, V2, P41
   Trendowicz A, 2009, ADV COMPUT, V77, P185, DOI 10.1016/S0065-2458(09)01206-6
   Usman M., 2014, PROMISE '14: Proceedings of the 10th International Conference on Predictive Models in Software Engineering, page, P82
   Usman M., 2015, P 19 INT C EVALUATIO, P1, DOI DOI 10.1145/2745802.2745813
   VANGENUCHTEN M, 1991, IEEE T SOFTWARE ENG, V17, P582, DOI 10.1109/32.87283
   Wallace L, 2004, INFORM MANAGE-AMSTER, V42, P115, DOI 10.1016/j.im.2003.12.007
   Wallace L, 2004, DECISION SCI, V35, P289, DOI 10.1111/j.00117315.2004.02059.x
   Wen JF, 2012, INFORM SOFTWARE TECH, V54, P41, DOI 10.1016/j.infsof.2011.09.002
   Zhang HY, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P1042, DOI 10.1109/ICSE.2013.6606654
NR 114
TC 8
Z9 11
U1 4
U2 28
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD SEPT 1
PY 2022
VL 48
IS 9
BP 3573
EP 3592
DI 10.1109/TSE.2021.3101192
PG 20
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 4O3GR
UT WOS:000854591500021
OA hybrid, Green Published
DA 2024-07-18
ER

PT J
AU Agrawal, A
   Yang, XQ
   Agrawal, R
   Yedida, R
   Shen, XP
   Menzies, T
AF Agrawal, Amritanshu
   Yang, Xueqi
   Agrawal, Rishabh
   Yedida, Rahul
   Shen, Xipeng
   Menzies, Tim
TI Simpler Hyperparameter Optimization for Software Analytics: Why, How,
   When?
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Software analytics; hyperparameter optimization; defect prediction; bad
   smell detection; issue close time; bug reports
ID PREDICTION; SELECTION
AB How can we make software analytics simpler and faster? One method is to match the complexity of analysis to the intrinsic complexity of the data being explored. For example, hyperparameter optimizers find the control settings for data miners that improve the predictions generated via software analytics. Sometimes, very fast hyperparameter optimization can be achieved by "DODGE-ing"; i.e., simply steering way from settings that lead to similar conclusions. But when is it wise to use that simple approach and when must we use more complex (and much slower) optimizers? To answer this, we applied hyperparameter optimization to 120 SE data sets that explored bad smell detection, predicting Github issue close time, bug report analysis, defect prediction, and dozens of other non-SE problems. We find that the simple DODGE works best for data sets with low "intrinsic dimensionality" (mu(D) approximate to 3) and very poorly for higher-dimensional data (mu(D) > 8). Nearly all the SE data seen here was intrinsically low-dimensional, indicating that DODGE is applicable for many SE analytics tasks.
C1 [Agrawal, Amritanshu] Wayfair, Boston, MA 02116 USA.
   [Yang, Xueqi; Agrawal, Rishabh; Yedida, Rahul; Shen, Xipeng; Menzies, Tim] North Carolina State Univ, Dept Comp Sci, Raleigh, NC 27695 USA.
C3 North Carolina State University
RP Menzies, T (corresponding author), North Carolina State Univ, Dept Comp Sci, Raleigh, NC 27695 USA.
EM aagrawa8@ncsu.edu; xyang37@ncsu.edu; ragrawa3@ncsu.edu;
   yrahul3910@gmail.com; xshen5@ncsu.edu; timm@ieee.org
RI Agrawal, Amritanshu/R-7093-2019; Yang, Xueqi/KQU-3325-2024; Menzies,
   Tim/X-7680-2019
OI Agrawal, Amritanshu/0000-0002-1220-8533; Menzies,
   Tim/0000-0002-5040-3196; Shen, Xipeng/0000-0003-3599-8010; Agrawal,
   Rishabh/0000-0002-8714-1601; Yedida, Rahul/0000-0003-2069-5949
FU National Science Foundation (NSF) [CCF-1703487]
FX This material is based upon work supported by the National Science
   Foundation (NSF) under Grant CCF-1703487. Any opinions, findings, and
   conclusions or recommendations expressed in this material are those of
   the authors and do not necessarily reflect the views of NSF.
CR Aggarwal CC, 2001, LECT NOTES COMPUT SC, V1973, P420
   Agrawal A, 2021, IEEE T SOFTWARE ENG, V47, P2182, DOI 10.1109/TSE.2019.2945020
   Agrawal A, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1050, DOI 10.1145/3180155.3180197
   Agrawal A, 2018, INFORM SOFTWARE TECH, V98, P74, DOI 10.1016/j.infsof.2018.02.005
   Arcuri A, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1, DOI 10.1145/1985793.1985795
   Arisholm E., 2006, ISESE 06 P 2006 ACMI, P8
   Asuncion A., 2007, Uci machine learning repository
   Barr ET, 2015, IEEE T SOFTWARE ENG, V41, P507, DOI 10.1109/TSE.2014.2372785
   Begel A, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P12, DOI 10.1145/2568225.2568233
   Bergstra J., 2013, ICML, pI
   Bergstra J., 2011, Adv. Neural Inf. Process. Syst., V24
   Bergstra J, 2012, J MACH LEARN RES, V13, P281
   Bird C., 2015, The Art and Science of Analyzing Software Data
   Bird S., 2004, P ACL INTERACTIVE PO, P214
   Blei DM, 2003, J MACH LEARN RES, V3, P993, DOI 10.1162/jmlr.2003.3.4-5.993
   Boser B. E., 1992, Proceedings of the Fifth Annual ACM Workshop on Computational Learning Theory, P144, DOI 10.1145/130385.130401
   Breiman L, 2001, MACH LEARN, V45, P5, DOI 10.1023/A:1010933404324
   Breiman L., 2017, CLASSIFICATION REGRE, DOI [10.1201/9781315139470, DOI 10.1201/9781315139470]
   Campbell P., 1978, Springer, V1, P35
   Chen D, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P456, DOI 10.1145/3236024.3236050
   Chen JF, 2018, PROCEEDINGS 2018 IEEE 11TH INTERNATIONAL CONFERENCE ON CLOUD COMPUTING (CLOUD), P318, DOI 10.1109/CLOUD.2018.00047
   COURTNEY RE, 1993, SOFTWARE ENG J, V8, P5, DOI 10.1049/sej.1993.0002
   Czerwonka Jacek, 2011, Proceedings 2011 IEEE Fourth International Conference on Software Testing, Verification and Validation (ICST 2011), P357, DOI 10.1109/ICST.2011.24
   DEMPSTER AP, 1977, J ROY STAT SOC B MET, V39, P1, DOI 10.1111/j.2517-6161.1977.tb01600.x
   Dua D., 2017, UCI MACHINE LEARNING
   Duda R. O., 2000, Pattern Classification, V2nd
   Efron B., 1993, INTRO BOOTSTRAP, VVolume 914, DOI DOI 10.1007/978-1-4899-4541-9
   Feldman R., 2006, TEXT MINING HDB
   Fisher Danyel, 2012, Interactions, V19, P50, DOI 10.1145/2168931.2168943
   Fontana FA, 2016, EMPIR SOFTW ENG, V21, P1143, DOI 10.1007/s10664-015-9378-4
   Fowler M., 2000, Refactoring: Improving the Design of Existing Code
   Frank A., 2010, UCI MACHINE LEARNING
   Fu W, 2017, Arxiv, DOI arXiv:1609.02613
   Fu W, 2016, INFORM SOFTWARE TECH, V76, P135, DOI 10.1016/j.infsof.2016.04.017
   Gall H., 2014, DAGSTUHL REPORTS, V4
   Ghotra B, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P789, DOI 10.1109/ICSE.2015.91
   Giger E., 2010, P 2 INT WORKSH REC S, P52
   Goldber D. E., 1988, Machine Learning, V3, P95, DOI 10.1023/A:1022602019183
   Gupta R, 2017, AAAI CONF ARTIF INTE, P1345
   Hall MA, 2003, IEEE T KNOWL DATA EN, V15, P1437, DOI 10.1109/TKDE.2003.1245283
   Hamill M, 2009, IEEE T SOFTWARE ENG, V35, P484, DOI 10.1109/TSE.2009.3
   Hellendoorn VJ, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P763, DOI 10.1145/3106237.3106290
   Jiachen Yang, 2012, 2012 Proceedings of the 6th International Workshop on Software Clones (IWSC 2012), P76, DOI 10.1109/IWSC.2012.6227872
   Jimenez M, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P695, DOI 10.1145/3338906.3338941
   Jorgensen M, 2004, IEEE T SOFTWARE ENG, V30, P209, DOI 10.1109/TSE.2004.1274041
   Kaltenecker C, 2020, IEEE SOFTWARE, V37, P58, DOI 10.1109/MS.2020.2987024
   Kamei Y, 2013, IEEE T SOFTWARE ENG, V39, P757, DOI 10.1109/TSE.2012.70
   Karampatsis RM, 2020, PROC INT CONF SOFTW, P1073, DOI 10.1145/3377811.3380342
   Khomh F, 2011, J SYST SOFTWARE, V84, P559, DOI 10.1016/j.jss.2010.11.921
   Khomh F, 2009, INT CONF QUAL SOFTW, P305, DOI 10.1109/QSIC.2009.47
   Kim M, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P990, DOI 10.1145/2786805.2804429
   Kocaguneli E, 2012, IEEE T SOFTWARE ENG, V38, P1403, DOI 10.1109/TSE.2011.111
   Kocaguneli E, 2012, IEEE T SOFTWARE ENG, V38, P425, DOI 10.1109/TSE.2011.27
   Koru AG, 2009, IEEE T SOFTWARE ENG, V35, P293, DOI 10.1109/TSE.2008.90
   Kreimer J, 2005, ELECTRON NOTES THEOR, V141, P117, DOI 10.1016/j.entcs.2005.02.059
   Krishna R, 2021, IEEE T SOFTWARE ENG, V47, P2956, DOI 10.1109/TSE.2020.2983927
   Krishna R, 2019, IEEE T SOFTWARE ENG, V45, P1081, DOI 10.1109/TSE.2018.2821670
   Krishna R, 2017, INFORM SOFTWARE TECH, V88, P53, DOI 10.1016/j.infsof.2017.03.012
   Kumar R, 2003, 36TH INTERNATIONAL SYMPOSIUM ON MICROARCHITECTURE, PROCEEDINGS, P81
   Levina Elizaveta, 2004, Advances in neural information processing systems, V17
   Linares-Vasquez M., 2014, Proceedings of the 11th Working Conference on Mining Software Repositories, P2
   Liu Y, 2010, IEEE T SOFTWARE ENG, V36, P852, DOI 10.1109/TSE.2010.51
   Ma L, 2018, Arxiv, DOI arXiv:1810.04538
   Menzies T, 2016, PERSPECTIVES ON DATA SCIENCE FOR SOFTWARE ENGINEERING, P1
   Menzies T., 2008, IMPROVING 4 5 TECHNI
   Menzies T., 2005, ACM SIGSOFT Software Engineering Notes (SIGSOFT), V30, P1
   Menzies T, 2007, IEEE T SOFTWARE ENG, V33, P637, DOI 10.1109/TSE.2007.70721
   Menzies T, 2013, IEEE T SOFTWARE ENG, V39, P822, DOI 10.1109/TSE.2012.83
   Menzies T, 2008, PROC IEEE INT CONF S, P346, DOI 10.1109/ICSM.2008.4658083
   Misirli AT, 2011, AI MAG, V32, P57, DOI 10.1609/aimag.v32i2.2348
   Monden A, 2013, IEEE T SOFTWARE ENG, V39, P1345, DOI 10.1109/TSE.2013.21
   Moore GE, 1998, P IEEE, V86, P82, DOI 10.1109/JPROC.1998.658762
   Myers Glenford J., 2011, The Art of Software Testing
   Nair V, 2020, IEEE T SOFTWARE ENG, V46, P794, DOI 10.1109/TSE.2018.2870895
   Navarro-Almanza R, 2017, 2017 5TH INTERNATIONAL CONFERENCE IN SOFTWARE ENGINEERING RESEARCH AND INNOVATION (CONISOFT 2017), P116, DOI 10.1109/CONISOFT.2017.00021
   Oliveira ALI, 2010, INFORM SOFTWARE TECH, V52, P1155, DOI 10.1016/j.infsof.2010.05.009
   Orso A., 2014, P FUTURE SOFTWARE EN, P117, DOI [10.1145/2593882.2593885, DOI 10.1145/2593882.2593885]
   Ostrand TJ., 2004, Proceedings of the 2004 ACM SIGSOFT International Symposium on Software Testing and Analysis, ISSTA '04, V29, P86, DOI [DOI 10.1145/1013886.1007524, 10.1145/1013886.1007524]
   Panichella A, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P522, DOI 10.1109/ICSE.2013.6606598
   Pedregosa F, 2011, J MACH LEARN RES, V12, P2825
   PORTER MF, 1980, PROGRAM-AUTOM LIBR, V14, P130, DOI 10.1108/eb046814
   Quinlan J. R., 1986, Machine Learning, V1, P81, DOI 10.1007/BF00116251
   Rahman F, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P424, DOI 10.1145/2568225.2568269
   Rees-Jones M., 2017, ARXIV
   Sarro F., 2012, Proceedings of the 27th Annual ACM Symposium on Applied Computing, SAC '12, P1215, DOI DOI 10.1145/2245276.2231967
   Storn R, 1997, J GLOBAL OPTIM, V11, P341, DOI 10.1023/A:1008202821328
   Tantithamthavorn C, 2016, PROC INT CONF SOFTW, P321, DOI 10.1145/2884781.2884857
   Theisen C, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P199, DOI 10.1109/ICSE.2015.148
   Thornton C, 2013, 19TH ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING (KDD'13), P847, DOI 10.1145/2487575.2487629
   Treude C., 2018, ARXIV 180404749, P157
   Wan ZY, 2020, IEEE T SOFTWARE ENG, V46, P1241, DOI 10.1109/TSE.2018.2877678
   White M, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P334, DOI 10.1109/MSR.2015.38
   Wilkinson Leland., 2011, P 17 ACM SIGKDD INT, P6, DOI DOI 10.1145/2020408.2020418
   Wolpert D. H., 1997, IEEE Transactions on Evolutionary Computation, V1, P67, DOI 10.1109/4235.585893
   Yamashita A, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P682, DOI 10.1109/ICSE.2013.6606614
   Yamashita A, 2013, J SYST SOFTWARE, V86, P2639, DOI 10.1016/j.jss.2013.05.007
   Yang YB, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P157, DOI 10.1145/2950290.2950353
   Yoo S, 2012, SOFTW TEST VERIF REL, V22, P67, DOI [10.1002/stv.430, 10.1002/stvr.430]
   Zazworka Nico, 2011, P 2 WORKSH MAN TECHN, P17, DOI 10.1145/1985362.1985366
   Zhong S, 2004, IEEE INTELL SYST, V19, P20, DOI 10.1109/MIS.2004.1274907
NR 100
TC 12
Z9 12
U1 0
U2 1
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD AUG 1
PY 2022
VL 48
IS 8
BP 2939
EP 2954
DI 10.1109/TSE.2021.3073242
PG 16
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 4D1BG
UT WOS:000846878500014
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Chen, C
   Peng, X
   Xing, ZC
   Sun, J
   Wang, X
   Zhao, YF
   Zhao, WY
AF Chen, Chi
   Peng, Xin
   Xing, Zhenchang
   Sun, Jun
   Wang, Xin
   Zhao, Yifan
   Zhao, Wenyun
TI Holistic Combination of Structural and Textual Code Information for
   Context Based API Recommendation
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Semantics; Deep learning; Data models; Context modeling; Computational
   modeling; Task analysis; Token networks; API; recommendation; deep
   learning; data flow; control flow; text
ID COMPLETION
AB Context based API recommendation is an important way to help developers find the needed APIs effectively and efficiently. For effective API recommendation, we need not only a joint view of both structural and textual code information, but also a holistic view of correlated API usage in control and data flow graph as a whole. Unfortunately, existing API recommendation methods exploit structural or textual code information separately. In this work, we propose a novel API recommendation approach called APIRec-CST (API Recommendation by Combining Structural and Textual code information). APIRec-CST is a deep learning model that combines the API usage with the text information in the source code based on an API Context Graph Network and a Code Token Network that simultaneously learn structural and textual features for API recommendation. We apply APIRec-CST to train a model for JDK library based on 1,914 open-source Java projects and evaluate the accuracy and MRR (Mean Reciprocal Rank) of API recommendation with another 6 open-source projects. The results show that our approach achieves respectively a top-1, top-5, top-10 accuracy and MRR of 60.3, 81.5, 87.7 and 69.4 percent, and significantly outperforms an existing graph-based statistical approach and a tree-based deep learning approach for API recommendation. A further analysis shows that textual code information makes sense and improves the accuracy and MRR. The sensitivity analysis shows that the top-k accuracy and MRR of APIRec-CST are insensitive to the number of APIs to be recommended in a hole. We also conduct a user study in which two groups of students are asked to finish 6 programming tasks with or without our APIRec-CST plugin. The results show that APIRec-CST can help the students to finish the tasks faster and more accurately and the feedback on the usability is overwhelmingly positive.
C1 [Chen, Chi; Peng, Xin; Wang, Xin; Zhao, Yifan; Zhao, Wenyun] Fudan Univ, Sch Comp Sci, Shanghai 200433, Peoples R China.
   [Chen, Chi; Peng, Xin; Wang, Xin; Zhao, Yifan; Zhao, Wenyun] Fudan Univ, Shanghai Key Lab Data Sci, Shanghai 200433, Peoples R China.
   [Xing, Zhenchang] Australian Natl Univ, Acton, Act 2601, Australia.
   [Sun, Jun] Singapore Management Univ, Singapore 188065, Singapore.
C3 Fudan University; Fudan University; Australian National University;
   Singapore Management University
RP Peng, X (corresponding author), Fudan Univ, Sch Comp Sci, Shanghai 200433, Peoples R China.; Peng, X (corresponding author), Fudan Univ, Shanghai Key Lab Data Sci, Shanghai 200433, Peoples R China.
EM 15110240004@fudan.edu.cn; pengxin@fudan.edu.cn;
   zhenchang.xing@anu.edu.au; junsun@smu.edu.sg; 18212010029@fudan.edu.cn;
   17212010079@fudan.edu.cn; wyzhao@fudan.edu.cn
RI zhou, you/KBC-3567-2024; wang, xueting/JPY-2782-2023; zhang,
   xu/JEO-4879-2023; he, xi/JXN-3817-2024; Tan, Wei/KBB-7333-2024; Zhao,
   Yifan/AAN-7735-2021
OI Zhao, Yifan/0000-0001-6911-3183; Peng, Xin/0000-0003-3376-2581; Xing,
   Zhenchang/0000-0001-7663-1421
FU National Key Research and Development Program of China [2016YFB1000801];
   National Research Foundation Singapore through NSoE Programme
   [NSOE-TSS2019-03]
FX This work was supported by the National Key Research and Development
   Program of China under Grant 2016YFB1000801 and in part by National
   Research Foundation Singapore through NSoE Programme under Award
   NSOE-TSS2019-03.
CR Ai L, 2019, P INT COMP SOFTW APP, P27, DOI 10.1109/COMPSAC.2019.00014
   Allamanis M, 2016, PR MACH LEARN RES, V48
   Allamanis M, 2013, IEEE WORK CONF MIN S, P207, DOI 10.1109/MSR.2013.6624029
   Almeida LB., 1990, Artificial neural networks: concept learning, P102
   Nguyen AT, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P323, DOI 10.1109/SANER.2018.8330220
   Nguyen AT, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P511, DOI 10.1145/2950290.2950333
   Nguyen AT, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P858, DOI 10.1109/ICSE.2015.336
   Nguyen AT, 2012, PROC INT CONF SOFTW, P69, DOI 10.1109/ICSE.2012.6227205
   [Anonymous], 2013, P 9 JOINT M EUR SOFT
   [Anonymous], 2020, REPLICATION PACKAGE
   [Anonymous], 2020, TensorFlow
   [Anonymous], 2020, FROYO EMAIL
   [Anonymous], 2020, GG NNS REFERENCE IMP
   [Anonymous], 2020, Stack Overflow
   [Anonymous], 2020, CAMEL CASE
   [Anonymous], 2020, GRID SPHERE
   Asaduzzaman M, 2016, J SOFTW-EVOL PROC, V28, P512, DOI 10.1002/smr.1791
   Bruch M, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P213, DOI 10.1145/1595696.1595728
   Chen C, 2019, SCI CHINA INFORM SCI, V62, DOI 10.1007/s11432-018-9821-9
   Cho KYHY, 2014, Arxiv, DOI [arXiv:1406.1078, DOI 10.3115/V1/D14-1179, 10.48550/ARXIV.1406.1078, DOI 10.48550/ARXIV.1406.1078]
   Daqing Hou, 2011, 2011 IEEE 27th International Conference on Software Maintenance, P233, DOI 10.1109/ICSM.2011.6080790
   Fowkes J, 2016, Arxiv, DOI arXiv:1512.05558
   Galaxy, 2020, GALAXY
   Glove, 2020, GLOVE
   Gu XD, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P602, DOI 10.1109/ASE.2019.00061
   Gu XD, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P933, DOI 10.1145/3180155.3180167
   Gu XD, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P631, DOI 10.1145/2950290.2950334
   Heinemann L, 2012, EUR CON SFTWR MTNCE, P31, DOI 10.1109/CSMR.2012.14
   Hellendoorn VJ, 2019, PROC INT CONF SOFTW, P960, DOI 10.1109/ICSE.2019.00101
   Hindle A, 2012, PROC INT CONF SOFTW, P837, DOI 10.1109/ICSE.2012.6227135
   Hou Daqing, 2010, P 2 INT WORKSHOP REC, P26
   Hu X, 2018, PROCEEDINGS OF THE TWENTY-SEVENTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P2269
   Hu X, 2018, INT C PROGRAM COMPRE, P200, DOI 10.1145/3196321.3196334
   Itext, 2020, ITEXT
   Iyer S, 2016, PROCEEDINGS OF THE 54TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, VOL 1, P2073
   Javaparser, 2020, JAVAPARSER
   Jgit, 2020, JGIT
   Dam HK, 2016, Arxiv, DOI arXiv:1608.02715
   Kim K, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P946, DOI 10.1145/3180155.3180187
   Li YJ, 2017, Arxiv, DOI arXiv:1511.05493
   Liang YD, 2018, AAAI CONF ARTIF INTE, P5229
   Ling W, 2016, PROCEEDINGS OF THE 54TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, VOL 1, P599
   Liu F, 2020, INT C PROGRAM COMPRE, P37, DOI 10.1145/3387904.3389261
   Liu XY, 2018, IEEE INT CONF AUTOM, P282, DOI 10.1145/3238147.3238216
   Log4j, 2020, LOG4J
   Luan SF, 2019, P ACM PROGRAM LANG, V3, DOI 10.1145/3360578
   Moreno L, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P880, DOI 10.1109/ICSE.2015.98
   Mou LL, 2015, Arxiv, DOI arXiv:1510.07211
   Nguyen TT, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P383, DOI 10.1145/1595696.1595767
   PINEDA FJ, 1987, PHYS REV LETT, V59, P2229, DOI 10.1103/PhysRevLett.59.2229
   Pletcher DM, 2009, PROC IEEE INT CONF S, P393, DOI 10.1109/ICSM.2009.5306289
   Rabinovich M, 2017, PROCEEDINGS OF THE 55TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (ACL 2017), VOL 1, P1139, DOI 10.18653/v1/P17-1105
   Raychev V, 2014, ACM SIGPLAN NOTICES, V49, P419, DOI [10.1145/2594291.2594321, 10.1145/2666356.2594321]
   Reutskaja E, 2018, NAT HUM BEHAV, V2, P925, DOI 10.1038/s41562-018-0440-2
   Scarselli F, 2009, IEEE T NEURAL NETWOR, V20, P61, DOI 10.1109/TNN.2008.2005605
   Schwartz Barry., 2004, PARADOX CHOICE WHY M
   Stanford corenlp, 2020, STANFORD CORENLP
   Sun ZY, 2018, Arxiv, DOI arXiv:1811.06837
   Svyatkovskiy A, 2021, Arxiv, DOI arXiv:2004.13651
   Tu ZP, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P269, DOI 10.1145/2635868.2635875
   Wan Y, 2018, IEEE INT CONF AUTOM, P397, DOI 10.1145/3238147.3238206
   Wang J, 2013, IEEE WORK CONF MIN S, P319, DOI 10.1109/MSR.2013.6624045
   Wang S, 2016, PROC INT CONF SOFTW, P297, DOI 10.1145/2884781.2884804
   Xie RS, 2019, PROC INT SYMP SOFTW, P369, DOI 10.1109/ISSRE.2019.00044
   Yang XL, 2015, 2015 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE SECURITY AND RELIABILITY (QRS 2015), P17, DOI 10.1109/QRS.2015.14
   Yin PC, 2017, PROCEEDINGS OF THE 55TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (ACL 2017), VOL 1, P440, DOI 10.18653/v1/P17-1041
   Zhong H, 2009, LECT NOTES COMPUT SC, V5653, P318, DOI 10.1007/978-3-642-03013-0_15
NR 67
TC 22
Z9 26
U1 1
U2 17
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD AUG 1
PY 2022
VL 48
IS 8
BP 2987
EP 3009
DI 10.1109/TSE.2021.3074309
PG 23
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 4D1BG
UT WOS:000846878500017
OA Green Accepted, Green Submitted
DA 2024-07-18
ER

PT J
AU Torkar, R
   Furia, CA
   Feldt, R
   Neto, FGD
   Gren, L
   Lenberg, P
   Ernst, NA
AF Torkar, Richard
   Furia, Carlo A.
   Feldt, Robert
   de Oliveira Neto, Francisco Gomes
   Gren, Lucas
   Lenberg, Per
   Ernst, Neil A.
TI A Method to Assess and Argue for Practical Significance in Software
   Engineering
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Bayes methods; Data models; Software engineering; Statistical analysis;
   Analytical models; Testing; Decision making; Practical significance;
   statistical significance; Bayesian analysis; empirical software
   engineering
ID PROSPECT-THEORY; DECISION
AB A key goal of empirical research in software engineering is to assess practical significance, which answers the question whether the observed effects of some compared treatments show a relevant difference in practice in realistic scenarios. Even though plenty of standard techniques exist to assess statistical significance, connecting it to practical significance is not straightforward or routinely done; indeed, only a few empirical studies in software engineering assess practical significance in a principled and systematic way. In this paper, we argue that Bayesian data analysis provides suitable tools to assess practical significance rigorously. We demonstrate our claims in a case study comparing different test techniques. The case study's data was previously analyzed (Afzal et al., 2015) using standard techniques focusing on statistical significance. Here, we build a multilevel model of the same data, which we fit and validate using Bayesian techniques. Our method is to apply cumulative prospect theory on top of the statistical model to quantitatively connect our statistical analysis output to a practically meaningful context. This is then the basis both for assessing and arguing for practical significance. Our study demonstrates that Bayesian analysis provides a technically rigorous yet practical framework for empirical software engineering. A substantial side effect is that any uncertainty in the underlying data will be propagated through the statistical model, and its effects on practical significance are made clear. Thus, in combination with cumulative prospect theory, Bayesian analysis supports seamlessly assessing practical significance in an empirical software engineering context, thus potentially clarifying and extending the relevance of research for practitioners.
C1 [Torkar, Richard; Feldt, Robert; de Oliveira Neto, Francisco Gomes; Gren, Lucas; Lenberg, Per] Chalmers, Dept Comp Sci & Engn, S-41296 Gothenburg, Sweden.
   [Torkar, Richard; Feldt, Robert; de Oliveira Neto, Francisco Gomes; Gren, Lucas; Lenberg, Per] Univ Gothenburg, S-40530 Gothenburg, Sweden.
   [Torkar, Richard] Stellenbosch Univ, Wallenberg Res Ctr, Stellenbosch Inst Adv Study Stirs, ZA-7602 Stellenbosch, South Africa.
   [Furia, Carlo A.] USI Univ Svizzera Italiana, Software Inst, Via Giuseppe Buffi 13, CH-6904 Lugano, Switzerland.
   [Gren, Lucas] Blekinge Inst Technol, S-37141 Karlskrona, Sweden.
   [Ernst, Neil A.] Univ Victoria, Dept Comp Sci, Victoria, BC V8P 5C2, Canada.
C3 Chalmers University of Technology; University of Gothenburg;
   Stellenbosch University; Universita della Svizzera Italiana; Blekinge
   Institute Technology; University of Victoria
RP Torkar, R (corresponding author), Chalmers, Dept Comp Sci & Engn, S-41296 Gothenburg, Sweden.; Torkar, R (corresponding author), Univ Gothenburg, S-40530 Gothenburg, Sweden.
EM torkarr@chalmers.se; furiac@usi.ch; robert.feldt@chalmers.se;
   gomesf@chalmers.se; lucas.gren@cse.gu.se; perle@chalmers.se;
   nernst@uvic.ca
RI ; Torkar, Richard/P-4740-2015
OI Lenberg, Per/0000-0002-3186-3947; de Oliveira Neto, Francisco
   Gomes/0000-0001-9226-5417; Furia, Carlo A./0000-0003-1040-3201; Torkar,
   Richard/0000-0002-0118-8143; Gren, Lucas/0000-0001-5488-9894
FU  [2017.0071]
FX The authors would like to thank Paul-Christian B_urkner, Aki Vehtari,
   and Jonah Gabry, for the discussion on priors, and pointing us to
   literature discussing the choice of priors [40]. This work was partly
   funded byMarianne andMarcusWallenberg Foundation (2017.0071).
CR Afzal W, 2015, EMPIR SOFTW ENG, V20, P844, DOI 10.1007/s10664-014-9301-4
   [Anonymous], 2014, STAKEHOLDER GOAL ANA, DOI DOI 10.1007/978-3-662-43839-8
   Arcuri A, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1, DOI 10.1145/1985793.1985795
   Bayoumi AM, 2000, MED DECIS MAKING, V20, P404, DOI 10.1177/0272989X0002000404
   Boehm B, 2001, COMPUTER, V34, P135, DOI 10.1109/2.962984
   Büyüközkan G, 2004, INT J PROD ECON, V90, P27, DOI 10.1016/S0925-5273(02)00330-4
   Carpenter B, 2017, J STAT SOFTW, V76, P1, DOI 10.18637/jss.v076.i01
   Chan AW, 2013, ANN INTERN MED, V158, P200, DOI 10.7326/0003-4819-158-3-201302050-00583
   Correll J, 2020, TRENDS COGN SCI, V24, P200, DOI 10.1016/j.tics.2019.12.009
   Engström E, 2017, SOFTWARE QUAL J, V25, P1269, DOI 10.1007/s11219-016-9322-x
   Furia CA, 2021, IEEE T SOFTWARE ENG, V47, P1786, DOI 10.1109/TSE.2019.2935974
   Gelman A., 2014, Chapman & Hall/CRC texts in statistical science, V3rd
   Gelman A, 2006, BAYESIAN ANAL, V1, P515, DOI 10.1214/06-BA117A
   Gigerenzer G., 1991, Eur Rev Soc. Psychol, V2, P83, DOI [DOI 10.1080/14792779143000033, 10.1080/14792779143000033]
   HEATH C, 1991, J RISK UNCERTAINTY, V4, P5, DOI 10.1007/BF00057884
   Itkonen J, 2014, EMPIR SOFTW ENG, V19, P303, DOI 10.1007/s10664-013-9266-8
   Itkonen J, 2013, IEEE T SOFTWARE ENG, V39, P707, DOI 10.1109/TSE.2012.55
   KAHNEMAN D, 1979, ECONOMETRICA, V47, P263, DOI 10.2307/1914185
   Kampenes VB, 2007, INFORM SOFTWARE TECH, V49, P1073, DOI 10.1016/j.infsof.2007.02.015
   Kitchenham BA, 2002, IEEE T SOFTWARE ENG, V28, P721, DOI 10.1109/TSE.2002.1027796
   McElreath R, 2016, TEXT STAT SCI, pXI
   Menzies T, 2019, INFORM SOFTWARE TECH, V112, P35, DOI 10.1016/j.infsof.2019.04.005
   NASH J, 1951, ANN MATH, V54, P286, DOI 10.2307/1969529
   Neto FGD, 2019, J SYST SOFTWARE, V156, P246, DOI 10.1016/j.jss.2019.07.002
   Nwogugu M, 2006, APPL MATH COMPUT, V179, P451, DOI 10.1016/j.amc.2005.11.102
   Petersen K., 2014, P INT WORKSH LONG TE, P13
   Reese C.O., 2000, Design and methods, V3, P101
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Runkel P.J. McGrath., 1972, RES HUMAN BEHAVIOUR
   SHAW M, 1990, IEEE SOFTWARE, V7, P15, DOI 10.1109/52.60586
   Siegmund J, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P9, DOI 10.1109/ICSE.2015.24
   Simpson D, 2017, STAT SCI, V32, P1, DOI 10.1214/16-STS576
   Stol KJ, 2018, ACM T SOFTW ENG METH, V27, DOI 10.1145/3241743
   Stol KJ, 2016, PROC INT CONF SOFTW, P120, DOI 10.1145/2884781.2884833
   Storey M.-A., 2019, ARXIV190512841
   Storey MA, 2017, INT SYMP EMP SOFTWAR, P181, DOI 10.1109/ESEM.2017.28
   Tantithamthavorn C, 2018, 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING - SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2018), P286, DOI 10.1145/3183519.3183547
   TVERSKY A, 1992, J RISK UNCERTAINTY, V5, P297, DOI 10.1007/BF00122574
   Wijeysundera DN, 2009, J CLIN EPIDEMIOL, V62, P13, DOI 10.1016/j.jclinepi.2008.07.006
   Wohlin C., 2012, Experimentation in Software Engineering
NR 40
TC 12
Z9 12
U1 0
U2 6
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUN 1
PY 2022
VL 48
IS 6
BP 2053
EP 2065
DI 10.1109/TSE.2020.3048991
PG 13
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 2D5IM
UT WOS:000811580600014
OA Green Published, Green Submitted, hybrid
DA 2024-07-18
ER

PT J
AU Marussy, K
   Semeráth, O
   Varró, D
AF Marussy, Kristof
   Semerath, Oszkar
   Varro, Daniel
TI Automated Generation of Consistent Graph Models With Multiplicity
   Reasoning
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Numerical models; Tools; Object oriented modeling; Generators; Unified
   modeling language; Biological system modeling; Domain-specific
   architectures; graphs and networks; logic and constraint programming;
   model validation and analysis
ID VERIFICATION; ENVIRONMENT; ALLOY; TOOL
AB Advanced tools used in model-based systems engineering (MBSE) frequently represent their models as graphs. In order to test those tools, the automated generation of well-formed (or intentionally malformed) graph models is necessitated which is often carried out by solver-based model generation techniques. In many model generation scenarios, one needs more refined control over the generated unit tests to focus on the more relevant models. Type scopes allow to precisely define the required number of newly generated elements, thus one can avoid the generation of unrealistic and highly symmetric models having only a single type of elements. In this paper, we propose a 3-valued scoped partial modeling formalism, which innovatively extends partial graph models with predicate abstraction and counter abstraction. As a result, well-formedness constraints and multiplicity requirements can be evaluated in an approximated way on incomplete (unfinished) models by using advanced graph query engines with numerical solvers (e.g., IP or LP solvers). Based on the refinement of 3-valued scoped partial models, we propose an efficient model generation algorithm that generates models that are both well-formed and satisfy the scope requirements. We show that the proposed approach scales significantly better than existing SAT-solver techniques or the original graph solver without multiplicity reasoning. We illustrate our approach in a complex design-space exploration case study of collaborating satellites introduced by researchers at NASA JPL.
C1 [Marussy, Kristof; Semerath, Oszkar; Varro, Daniel] Budapest Univ Technol & Econ, H-1111 Budapest, Hungary.
   [Varro, Daniel] McGill Univ, Montreal, PQ H3A 0G4, Canada.
C3 Budapest University of Technology & Economics; McGill University
RP Marussy, K (corresponding author), Budapest Univ Technol & Econ, H-1111 Budapest, Hungary.
EM marussy@mit.bme.hu; semerath@mit.bme.hu; daniel.varro@mcgill.ca
RI Marussy, Kristóf/AAE-9008-2022; Varro, Daniel/AAC-4234-2022
OI Marussy, Kristóf/0000-0002-9135-8256; Varro, Daniel/0000-0002-8790-252X;
   Semerath, Oszkar/0000-0002-3592-5105
FU BME-Artificial Intelligence FIKP grant of EMMI (BME FIKP-MI/SC); BME NC
   TKP2020 grant of NKFIH Hungary; New National Excellence Program of the
   Ministry for Innovation and Technology from National Research,
   Development and Innovation Fund [UNKP-20-4]; NSERC [RGPIN-04573-16]
FX This work was partially supported by BME-Artificial Intelligence FIKP
   grant of EMMI (BME FIKP-MI/SC), the BME NC TKP2020 grant of NKFIH
   Hungary, the UNKP-20-4 New National Excellence Program of the Ministry
   for Innovation and Technology from the source of the National Research,
   Development and Innovation Fund, and the NSERC RGPIN-04573-16 project.
CR Abdeen H., 2014, INT C AUTOMATED SOFT, P289
   Al-Refai M, 2017, 2017 ACM/IEEE 20TH INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS 2017), P55, DOI 10.1109/MODELS.2017.17
   Al-Sibahi AS, 2016, PROCEEDINGS OF THE 2016 ACM SIGPLAN INTERNATIONAL CONFERENCE ON SOFTWARE LANGUAGE ENGINEERING (SLE'16), P207, DOI 10.1145/2997364.2997382
   Alkhazi B, 2020, AUTOMAT SOFTW ENG, V27, P91, DOI 10.1007/s10515-020-00271-w
   Anand Saswat, 2009, International Journal on Software Tools for Technology Transfer, V11, P53, DOI 10.1007/s10009-008-0090-1
   Anastasakis K, 2010, SOFTW SYST MODEL, V9, P69, DOI 10.1007/s10270-008-0110-3
   [Anonymous], 2004, THESIS
   [Anonymous], YAKINDU STATECHART T
   [Anonymous], 2010, J SATISFIABIL BOOLEA, DOI DOI 10.3233/SAT190075
   [Anonymous], 2017, ECLIPSE MODELING FRA
   [Anonymous], 2020, SYSTEM MODELING
   Bagnara R, 2008, SCI COMPUT PROGRAM, V72, P3, DOI 10.1016/j.scico.2007.08.001
   Bak K, 2016, SOFTW SYST MODEL, V15, P811, DOI 10.1007/s10270-014-0441-1
   Baldan P., 2001, CONCUR 2001 - Concurrency Theory. 12th International Conference. Proceedings (Lecture Notes in Computer Science Vol.2154), P381
   Bansal K, 2013, LECT NOTES COMPUT SC, V7795, P62, DOI 10.1007/978-3-642-36742-7_5
   Barrett E, 2017, P ACM PROGRAM LANG, V1, DOI 10.1145/3133876
   Beckert Bernhard, 2002, DIKU TECHNICAL REPOR, P113
   Ben Abdessalem R, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1016, DOI 10.1145/3180155.3180160
   Benelallam A, 2015, P 2015 ACM SIGPLAN I, P37
   Bjorner N., 2015, Tools and Algorithms for the Construction and Analysis of Systems, V9035, P194, DOI DOI 10.1007/978-3-662-46681-0
   Buttner Fabian, 2012, Modelling Foundations and Applications. Proceedings 8th European Conference, ECMFA 2012, P244, DOI 10.1007/978-3-642-31491-9_19
   Buttner F., 2012, P 14 INT C FORMAL EN, V7635, P198
   Cabot J, 2014, J SYST SOFTWARE, V93, P1, DOI 10.1016/j.jss.2014.03.023
   Cabot Jordi, 2008, 2008 IEEE International Conference on Software Testing Verification and Validation Workshop (ICSTW), P73, DOI 10.1109/ICSTW.2008.54
   Cabot  Jordi, 2007, P 22 IEEE ACM INT C, P547, DOI DOI 10.1145/1321631.1321737
   Clarisó R, 2019, IEEE T SOFTWARE ENG, V45, P412, DOI 10.1109/TSE.2017.2777830
   Cousot Patrick, 1978, P 5 ACM SIGACT SIGPL, p84S96, DOI DOI 10.1145/512760.512770
   de Moura L, 2008, LECT NOTES COMPUT SC, V4963, P337, DOI 10.1007/978-3-540-78800-3_24
   Edunov S, 2018, INT CON DISTR COMP S, P567, DOI 10.1109/ICDCS.2018.00062
   Eén N, 2004, LECT NOTES COMPUT SC, V2919, P502, DOI 10.1007/978-3-540-24605-3_37
   Famelis M, 2013, LECT NOTES COMPUT SC, V8107, P673, DOI 10.1007/978-3-642-41533-3_41
   Famelis M, 2012, PROC INT CONF SOFTW, P573, DOI 10.1109/ICSE.2012.6227159
   Ferrara Pietro, 2012, Software Engineering and Formal Methods. Proceedings of the 10th International Conference, SEFM 2012, P63, DOI 10.1007/978-3-642-33826-7_5
   Gogolla M., 2005, Software Systems Modeling, V4, P386
   Gonzalez Perez Carlos Alberto., 2012, Formal Methods in Software Engineering: Rigorous and Agile Approaches, DOI [10 . 1109 / FormSERA.2012.6229788, DOI 10.1109/FORMSERA.2012.6229788]
   Gopan D, 2004, LECT NOTES COMPUT SC, V2988, P512
   Grönniger H, 2009, LECT NOTES COMPUT SC, V5522, P152, DOI 10.1007/978-3-642-02138-1_10
   Hegedüs A, 2015, AUTOMAT SOFTW ENG, V22, P399, DOI 10.1007/s10515-014-0163-1
   Herzig SJI, 2017, AEROSP CONF PROC
   Honfi D, 2019, SOFTWARE QUAL J, V27, P1339, DOI 10.1007/s11219-019-09446-5
   Iqbal MZ, 2015, SOFTW SYST MODEL, V14, P483, DOI 10.1007/s10270-013-0328-6
   Jackson D, 2002, ACM T SOFTW ENG METH, V11, P256, DOI 10.1145/505145.505149
   Jackson E.K., 2006, EMSOFT, P53
   Jackson E. K., 2013, MSRTR201356
   Jackson EK, 2007, LECT NOTES COMPUT SC, V4735, P405
   Jackson EK, 2011, LECT NOTES COMPUT SC, V6981, P653, DOI 10.1007/978-3-642-24485-8_48
   Kang E, 2011, LECT NOTES COMPUT SC, V6662, P33
   Khurshid S., 2004, Automated Software Engineering, V11, P403, DOI 10.1023/B:AUSE.0000038938.10589.b9
   König B, 2006, LECT NOTES COMPUT SC, V3920, P197
   König B, 2008, ELECTRON NOTES THEOR, V211, P201, DOI 10.1016/j.entcs.2008.04.042
   Kuhlmann M, 2011, LECT NOTES COMPUT SC, V6705, P290, DOI 10.1007/978-3-642-21952-8_21
   Magill S, 2007, LECT NOTES COMPUT SC, V4634, P419
   McCloskey B, 2010, LECT NOTES COMPUT SC, V6337, P71, DOI 10.1007/978-3-642-15769-1_6
   Meng BL, 2017, LECT NOTES ARTIF INT, V10395, P148, DOI 10.1007/978-3-319-63046-5_10
   Micskei Zoltan, 2012, Agent and Multi-Agent Systems. Technologies and Applications. Proceedings 6th KES International Conference, KES-AMSTA 2012, P504, DOI 10.1007/978-3-642-30947-2_55
   Milicevic A, 2007, PROC INT CONF SOFTW, P771
   Milicevic A, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P609, DOI [10.1109/ICSE.2015.77, 10.1007/s10703-016-0267-2]
   Nickel U., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, P742, DOI 10.1109/ICSE.2000.870485
   OMG, 2014, OBJECT CONSTRAINT LA
   Pennemann KH, 2008, LECT NOTES COMPUT SC, V5214, P289, DOI 10.1007/978-3-540-87405-8_20
   Queralt A, 2012, DATA KNOWL ENG, V73, P1, DOI 10.1016/j.datak.2011.09.004
   Rensink A, 2006, PROC 3 INT WORKSHOP
   Rensink A., 2012, USER MANUAL GROOVE T
   Rensink A, 2006, ELECTRON NOTES THEOR, V157, P39, DOI 10.1016/j.entcs.2006.01.022
   Reps TW, 2004, LECT NOTES COMPUT SC, V3114, P15
   Reynolds Andrew, 2013, Computer Aided Verification. 25th International Conference, CAV 2013. Proceedings. LNCS 8044, P640, DOI 10.1007/978-3-642-39799-8_42
   RTCA, 2011, Do-330 software tool qualification considerations
   SALAY R, 2015, J OBJECT TECHNOL, V14, pNIL70
   Salay R, 2015, LECT NOTES COMPUT SC, V9033, P133, DOI 10.1007/978-3-662-46675-9_9
   Salay R, 2012, LECT NOTES COMPUT SC, V7212, P224, DOI 10.1007/978-3-642-28872-2_16
   Schneider S, 2017, LECT NOTES COMPUT SC, V10202, P226, DOI 10.1007/978-3-662-54494-5_13
   Semeráth O, 2020, INT J SOFTW TOOLS TE, V22, P57, DOI 10.1007/s10009-019-00530-6
   Semeráth O, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: COMPANION PROCEEDINGS (ICSE-COMPANION 2019), P43, DOI 10.1109/ICSE-Companion.2019.00034
   Semeráth O, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P969, DOI 10.1145/3180155.3180186
   Semeráth O, 2017, LECT NOTES COMPUT SC, V10374, P138, DOI 10.1007/978-3-319-61473-1_10
   Semeráth O, 2017, SOFTW SYST MODEL, V16, P357, DOI 10.1007/s10270-015-0485-x
   Semeráth O, 2016, LECT NOTES COMPUT SC, V9633, P87, DOI 10.1007/978-3-662-49665-7_6
   Shah SMA, 2010, LECT NOTES COMPUT SC, V6002, P158
   Singh G, 2018, P ACM PROGRAM LANG, V2, DOI 10.1145/3158143
   Soeken M, 2010, DES AUT TEST EUROPE, P1341
   Soltana G., 2019, CORR
   Soltana G, 2017, IEEE INT CONF AUTOM, P872, DOI 10.1109/ASE.2017.8115698
   Szärnyas G, 2014, LECT NOTES COMPUT SC, V8767, P653, DOI 10.1007/978-3-319-11653-2_40
   Tortak E, 2007, LECT NOTES COMPUT SC, V4424, P632
   Ujhelyi Z, 2015, SCI COMPUT PROGRAM, V98, P80, DOI 10.1016/j.scico.2014.01.004
   Varro D., 2018, Graph Transformation, Specifications, and Nets, P285
   Varró D, 2007, SCI COMPUT PROGRAM, V68, P214, DOI 10.1016/j.scico.2007.05.004
   Varró D, 2006, LECT NOTES COMPUT SC, V4178, P260
   Varró D, 2016, SOFTW SYST MODEL, V15, P609, DOI 10.1007/s10270-016-0530-4
   Wu H, 2016, INT J INF SYST MODEL, V7, P23, DOI 10.4018/IJISMD.2016070102
   Yu F., 2007, Proceedings of the 6th joint meeting of the European Software Engineering Conference and the ACM SIGSOFT International Symposium on Foundations of Software Engineering (ESEC/FSE), P331
NR 91
TC 3
Z9 3
U1 0
U2 6
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAY 1
PY 2022
VL 48
IS 5
BP 1610
EP 1629
DI 10.1109/TSE.2020.3025732
PG 20
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 1I8CJ
UT WOS:000797454000010
OA hybrid
DA 2024-07-18
ER

PT J
AU Su, T
   Fan, LL
   Chen, S
   Liu, Y
   Xu, LH
   Pu, GG
   Su, ZD
AF Su, Ting
   Fan, Lingling
   Chen, Sen
   Liu, Yang
   Xu, Lihua
   Pu, Geguang
   Su, Zhendong
TI Why My App Crashes? Understanding and Benchmarking Framework-Specific
   Exceptions of Android Apps
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Computer bugs; Tools; Androids; Humanoid robots; Benchmark testing;
   Mobile applications; android applications; empirical study; exception
   analysis; software testing; bug reproducibility
AB Mobile apps have become ubiquitous. Ensuring their correctness and reliability is important. However, many apps still suffer from occasional to frequent crashes, weakening their competitive edge. Large-scale, deep analyses of the characteristics of real-world app crashes can provide useful insights to both developers and researchers. However, such studies are difficult and yet to be carried out - this work fills this gap. We collected 16,245 and 8,760 unique exceptions from 2,486 open-source and 3,230 commercial Android apps, respectively, and observed that the exceptions thrown from Android framework (termed "framework-specific exceptions") account for the majority. With one-year effort, we (1) extensively investigated these framework-specific exceptions, and (2) further conducted an online survey of 135 professional app developers about how they analyze, test, reproduce and fix these exceptions. Specifically, we aim to understand the framework-specific exceptions from several perspectives: (i) their characteristics (e.g., manifestation locations, fault taxonomy), (ii) the developers' testing practices, (iii) existing bug detection techniques' effectiveness, (iv) their reproducibility and (v) bug fixes. To enable follow-up research (e.g., bug understanding, detection, localization and repairing), we further systematically constructed, DroidDefects, the first comprehensive and largest benchmark of Android app exception bugs. This benchmark contains 33 reproducible exceptions (with test cases, stack traces, faulty and fixed app versions, bug types, etc.), and 3,696 ground-truth exceptions (real faults manifested by automated testing tools), which cover the apps with different complexities and diverse exception types. Based on our findings, we also built two prototype tools: Stoat+, an optimized dynamic testing tool, which quickly uncovered three previously-unknown, fixed crashes in Gmail and Google+; ExLocator, an exception localization tool, which can locate the root causes of specific exception types. Our dataset, benchmark and tools are publicly available on https://github.com/tingsu/droiddefects.
C1 [Su, Ting; Pu, Geguang] East China Normal Univ, Sch Software Engn, Shanghai, Peoples R China.
   [Su, Ting; Su, Zhendong] Swiss Fed Inst Technol, Dept Comp Sci, CH-8092 Zurich, Switzerland.
   [Fan, Lingling] Nankai Univ, Coll Cyber Sci, Tianjin, Peoples R China.
   [Fan, Lingling; Chen, Sen] Nanyang Technol Univ, Singapore 639798, Singapore.
   [Chen, Sen] Tianjin Univ, Coll Intelligence & Comp, Tianjin, Peoples R China.
   [Liu, Yang] Nanyang Technol Univ, Sch Comp Sci & Engn, Singapore 639798, Singapore.
   [Xu, Lihua] New York Univ Shanghai, Dept Comp Sci & Engn, Shanghai 200122, Peoples R China.
C3 East China Normal University; Swiss Federal Institutes of Technology
   Domain; ETH Zurich; Nankai University; Nanyang Technological University;
   Tianjin University; Nanyang Technological University; NYU Shanghai
RP Pu, GG (corresponding author), East China Normal Univ, Sch Software Engn, Shanghai, Peoples R China.; Fan, LL (corresponding author), Nankai Univ, Coll Cyber Sci, Tianjin, Peoples R China.
EM tsuletgo@gmail.com; llfan@ntu.edu.sg; chensen@ntu.edu.sg;
   yangliu@ntu.edu.sg; lihua.xu@nyu.edu; ggpu@sei.ecnu.edu.sg;
   zhendong.su@inf.ethz.th
RI yang, liu/GVU-8760-2022; liu, yang/HQY-7531-2023; Liu,
   Yang/HNJ-6693-2023; LIU, YANG/HWQ-4615-2023; yang, liu/HTN-9175-2023;
   xu, li/GNH-3667-2022; Liu, Yang/D-2306-2013
OI Liu, Yang/0000-0001-7300-9215
FU SNSF Spark Project [CRSK-2_190302]; NSFC [61632005, 61532019]; National
   Research Foundation, Prime Ministers Office, Singapore under its
   National Cybersecurity RD Program [NRF2018NCR-NCR005-0001]; Singapore
   National Research Foundation under NCR [NRF2018NCR-NSOE004-0001]; NRF
   Investigatorship [NRFI06-2020-0022]; Swiss National Science Foundation
   (SNF) [CRSK-2_190302] Funding Source: Swiss National Science Foundation
   (SNF)
FX We would like to thank the constructive and valuable comments from the
   TSE reviewers. We also appreciate the Android app developers who
   participate in our online survey, and share us many experience and
   feedback in this field. This work was partially supported by SNSF Spark
   Project CRSK-2_190302; partially supported by NSFC Project 61632005 and
   61532019; partially supported by the National Research Foundation, Prime
   Ministers Office, Singapore under its National Cybersecurity R&D Program
   (Award No. NRF2018NCR-NCR005-0001), the Singapore National Research
   Foundation under NCR Award Number NRF2018NCR-NSOE004-0001, and NRF
   Investigatorship NRFI06-2020-0022.
CR Amalfitano D, 2018, SOFTW TEST VERIF REL, V28, DOI 10.1002/stvr.1654
   Amalfitano D, 2015, IEEE SOFTWARE, V32, P53, DOI 10.1109/MS.2014.55
   Amalfitano D, 2012, IEEE INT CONF AUTOM, P258, DOI 10.1145/2351676.2351717
   Amann S, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P464, DOI [10.1145/2901739.2903506, 10.1109/MSR.2016.055]
   Anandan S, 2012, MATER SCI FORUM, V712, P1, DOI 10.4028/www.scientific.net/MSF.712.1
   [Anonymous], 2020, UIAUTOMATOR
   [Anonymous], 2020, LOCAL GSM BACKEND
   [Anonymous], 2020, LOCAL GSM BACKEND RE
   [Anonymous], 2020, BANKDROID REVISION 8
   [Anonymous], 2019, ANDROTEST
   [Anonymous], 2020, PIT
   [Anonymous], 2020, GOOGLE ANALYTICS FIR
   [Anonymous], 2020, WORDPRESS REVISION 6
   [Anonymous], 2015, P 2015 INT S SOFTWAR, P83
   [Anonymous], 2020, NEXTCLOUD NOTES REVI
   [Anonymous], 2020, NETWORKONMAINTHREADE
   [Anonymous], 2020, MONKEYSCRIPT
   [Anonymous], 2020, CODEPATH ANDROID CLI
   [Anonymous], 2018, NUMBER ANDROID APPL
   [Anonymous], 2020, NEXTGIS MOBILE REVIS
   [Anonymous], 2020, NEXTCLOUD NOTES ISSU
   [Anonymous], 2020, FRAGMENT T ACTIVITY
   [Anonymous], 2020, ANDROID LINT
   [Anonymous], 2020, JDK 7 COMPATIBILITY
   [Anonymous], 2020, ACRA APPL CRASH REPO
   [Anonymous], 2020, ESPRESSO
   [Anonymous], 2020, BANKDROID
   [Anonymous], 2020, CGEO
   [Anonymous], 2020, STOAT
   [Anonymous], 2013, EMPIRICAL STUDY BUG
   [Anonymous], 2020, PMD RULES
   [Anonymous], 2020, CGEO REVISION D6B4E4
   [Anonymous], 2020, LOOPER
   [Anonymous], 2020, KEEPING YOUR APP RES
   [Anonymous], 2020, MANAGING BITMAP MEMO
   [Anonymous], 2020, ANDROID LINT CHECKS
   [Anonymous], 2020, ATARASHII
   [Anonymous], 2020, REQUESTING PERMISSIO
   [Anonymous], MONKEYRUNNER
   [Anonymous], 2020, ROOT CAUSE
   [Anonymous], 2020, ATARASHII REVISION B
   [Anonymous], 2020, Google Play Store
   [Anonymous], 2020, ANDROID DEVELOPERS D
   [Anonymous], 2020, JACOCO
   [Anonymous], 2020, NEXTCLOUD NOTES
   [Anonymous], 2020, AMAZON MECH TURK
   [Anonymous], 2020, MPDROID ISSUE
   [Anonymous], 2020, MONKEY
   [Anonymous], 2020, ADV ANDROID DEV
   [Anonymous], 2020, HANDLER
   [Anonymous], 2020, DROIDBUGS
   [Anonymous], 2020, MANN WHITNEY U TEST
   [Anonymous], 2020, FRAGMENTS
   [Anonymous], 2020, MONITOR PERFORMANCE
   [Anonymous], 2020, PHONESTATELISTENER
   [Anonymous], 2020, ACTIVITY LIFECYCLE
   Arcuri A, 2014, SOFTW TEST VERIF REL, V24, P219, DOI 10.1002/stvr.1486
   Azevedo L., 2018, ABS180907353 CORR
   Azim T, 2013, ACM SIGPLAN NOTICES, V48, P641, DOI [10.1145/2509136.2509549, 10.1145/2544173.2509549]
   Banerjee A, 2016, 2016 IEEE/ACM INTERNATIONAL CONFERENCE ON MOBILE SOFTWARE ENGINEERING AND SYSTEMS (MOBILESOFT 2016), P127, DOI [10.1109/MobileSoft.2016.037, 10.1145/2897073.2897085]
   Bielik P, 2015, ACM SIGPLAN NOTICES, V50, P332, DOI [10.1145/2814270.2814303, 10.1145/2858965.2814303]
   Borges NP, 2017, PROCEEDINGS OF THE 26TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA'17), P432, DOI 10.1145/3092703.3098234
   Thorve S, 2018, PROC IEEE INT CONF S, P534, DOI 10.1109/ICSME.2018.00062
   Chen S., IEEE T DEPENDABLE SE
   Chen S, 2020, PROC INT CONF SOFTW, P1310, DOI 10.1145/3377811.3380417
   Chen S, 2019, PROC INT CONF SOFTW, P596, DOI 10.1109/ICSE.2019.00070
   Chen S, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P797, DOI 10.1145/3236024.3275523
   Choi W, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P445, DOI 10.1145/3180155.3180173
   Choi W, 2013, ACM SIGPLAN NOTICES, V48, P623, DOI [10.1145/2544173.2509552, 10.1145/2509136.2509552]
   Choudhary SR, 2015, IEEE INT CONF AUTOM, P429, DOI 10.1109/ASE.2015.89
   Clapp L, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P422, DOI 10.1145/2950290.2950342
   Coelho R, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P134, DOI 10.1109/MSR.2015.20
   Deng L, 2015, IEEE INT CONF MOB, P19, DOI 10.1109/MASS.2015.25
   Deng L, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY AND SECURITY (QRS), P86, DOI 10.1109/QRS.2017.19
   Deng L, 2017, INFORM SOFTWARE TECH, V81, P154, DOI 10.1016/j.infsof.2016.04.012
   Derr E, 2017, CCS'17: PROCEEDINGS OF THE 2017 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P2187, DOI 10.1145/3133956.3134059
   Enck W, 2011, P 20 USENIX C SEC SE, P2
   Fan LL, 2018, IEEE INT CONF AUTOM, P486, DOI 10.1145/3238147.3238170
   Fan LL, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P408, DOI 10.1145/3180155.3180222
   Fan LL, 2016, ASIA PAC SOFWR ENG, P81, DOI 10.1109/APSEC.2016.022
   Fazzini M, 2018, ISSTA'18: PROCEEDINGS OF THE 27TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P141, DOI 10.1145/3213846.3213869
   Gómez M, 2016, 2016 IEEE/ACM INTERNATIONAL CONFERENCE ON MOBILE SOFTWARE ENGINEERING AND SYSTEMS (MOBILESOFT 2016), P88, DOI [10.1109/MobileSoft.2016.033, 10.1145/2897073.2897088]
   GRAZIUSSI S., 2016, THESIS SCH IND ENG I
   Gu TX, 2017, PROC IEEE INT CONF S, P103, DOI 10.1109/ICSME.2017.72
   Hao S, 2014, MOBISYS'14: PROCEEDINGS OF THE 12TH ANNUAL INTERNATIONAL CONFERENCE ON MOBILE SYSTEMS, APPLICATIONS, AND SERVICES, P204, DOI 10.1145/2594368.2594390
   Hsiao CH, 2014, ACM SIGPLAN NOTICES, V49, P326, DOI [10.1145/2666356.2594330, 10.1145/2594291.2594330]
   Hu Cuixiong, 2011, Proceedings of the 6th International Workshop on Automation of Software Test, P77
   Hu G., 2014, P 9 EUR C COMP SYST
   Hu JJ, 2018, IEEE INT CONF AUTOM, P702, DOI 10.1145/3238147.3238180
   Hu ZD, 2014, IEEE INT SYMP POWER
   Huang HX, 2018, IEEE INT CONF AUTOM, P532, DOI 10.1145/3238147.3238181
   I. G. W. Group, 2015, INT SOFTW TESTING QU, P1
   Jia Y, 2011, IEEE T SOFTWARE ENG, V37, P649, DOI 10.1109/TSE.2010.62
   Jiang B, 2017, IEEE INT CONF AUTOM, P297, DOI 10.1109/ASE.2017.8115643
   Just R., 2014, P 2014 INT S SOFTW T, P433
   Just R, 2014, P 2014 INT S SOFTW T, P437, DOI DOI 10.1145/2610384.2628055
   Khalid H, 2015, IEEE SOFTWARE, V32, P70, DOI 10.1109/MS.2014.50
   Kochhar P. S., 2015, ICST'15, P1
   Kowalski E, 2019, IEEE RAD CONF, DOI 10.1109/radar.2019.8835837
   Kumar Maji Amiya, 2010, Proceedings of the 2010 IEEE 21st International Symposium on Software Reliability Engineering (ISSRE 2010), P249, DOI 10.1109/ISSRE.2010.45
   Le Goues C, 2015, IEEE T SOFTWARE ENG, V41, P1236, DOI 10.1109/TSE.2015.2454513
   Linares-Vásquez M, 2017, PROC IEEE INT CONF S, P613, DOI 10.1109/ICSME.2017.47
   Linares-Vásquez M, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P233, DOI 10.1145/3106237.3106275
   Linares-Vásquez M, 2015, PROC IEEE INT CONF S, P352, DOI 10.1109/ICSM.2015.7332486
   Liu YP, 2019, EMPIR SOFTW ENG, V24, P3435, DOI 10.1007/s10664-019-09715-8
   Liu YP, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P396, DOI 10.1145/2950290.2950297
   Liu YP, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P1013, DOI 10.1145/2568225.2568229
   Luo QZ, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P643, DOI 10.1145/2635868.2635920
   Machiry A., 2013, P 2013 9 JOINT M FDN, P224
   Mahmood R, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P599, DOI 10.1145/2635868.2635896
   Mao K., 2016, P 25 INT S SOFTW TES, P94
   McDonnell T, 2013, PROC IEEE INT CONF S, P70, DOI 10.1109/ICSM.2013.18
   Memon AM, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P1479, DOI 10.1109/ICSE.2013.6606750
   Mirzaei H, 2015, 2ND ACM INTERNATIONAL CONFERENCE ON MOBILE SOFTWARE ENGINEERING AND SYSTEMS MOBILESOFT 2015, P156, DOI 10.1109/MobileSoft.2015.42
   Moran K, 2018, PROC IEEE ACM INT C, P33, DOI 10.1145/3183440.3183492
   Moran K, 2017, PROC IEEE ACM INT C, P15, DOI 10.1109/ICSE-C.2017.16
   Moran K, 2016, 2016 IEEE/ACM 38TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING COMPANION (ICSE-C), P609, DOI 10.1145/2889160.2889177
   Moran K, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P673, DOI 10.1145/2786805.2786857
   Moran K, 2016, IEEE INT CONF SOFTW, P33, DOI 10.1109/ICST.2016.34
   Mostafa S, 2017, PROCEEDINGS OF THE 26TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA'17), P215, DOI 10.1145/3092703.3092721
   Nunez G., 2011, PARTY POOPER 3 PARTY
   Riganelli O, 2019, SOFTWARE PRACT EXPER, V49, P540, DOI 10.1002/spe.2672
   Sadeghi A, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P220, DOI 10.1145/3106237.3106250
   Santhanakrishnan G, 2016, INTERNATIONAL CONFERENCE ON INFORMATION SOCIETY (I-SOCIETY 2016), P133, DOI 10.1109/i-Society.2016.7854196
   Shahriar H, 2014, IEEE HI ASS SYS ENGR, P176, DOI 10.1109/HASE.2014.32
   Shan ZY, 2016, ACM SIGPLAN NOTICES, V51, P864, DOI 10.1145/3022671.2984011
   Shujuan Jiang, 2010, Proceedings of the Tenth International Conference on Quality Software (QSIC 2010), P393, DOI 10.1109/QSIC.2010.23
   Sinha S, 2009, ISSTA 2009: INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P153
   Song W, 2017, IEEE INT CONF AUTOM, P27, DOI 10.1109/ASE.2017.8115615
   Su T, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P245, DOI 10.1145/3106237.3106298
   Su T, 2017, ACM COMPUT SURV, V50, DOI 10.1145/3020266
   Su T, 2016, 2016 IEEE/ACM 38TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING COMPANION (ICSE-C), P689, DOI 10.1145/2889160.2891043
   Tan SH, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P187, DOI 10.1145/3180155.3180243
   Tang CB, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE (ICSE-SEIP 2019), P183, DOI 10.1109/ICSE-SEIP.2019.00028
   Vallee-Rai R., 1999, Proceedings of the 1999 Conference of the Centre for Advanced Studies on Collaborative Research, CASCON'99, page, P13
   van der Merwe H, 2012, SIGSOFT SOFTW ENG NO, V37, P1, DOI DOI 10.1145/2382756.2382797
   Wang WY, 2018, IEEE INT CONF AUTOM, P738, DOI 10.1145/3238147.3240465
   Wei L., IEEE T SOFTWARE ENG
   Wei LL, 2016, IEEE INT CONF AUTOM, P226, DOI 10.1145/2970276.2970312
   White M, 2015, INT C PROGRAM COMPRE, P48, DOI 10.1109/ICPC.2015.14
   Xia X, 2016, ESEM'16: PROCEEDINGS OF THE 10TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, DOI 10.1145/2961111.2962606
   Yang W, 2013, LECT NOTES COMPUT SC, V7793, P250, DOI 10.1007/978-3-642-37057-1_19
   Zaeem RN, 2014, 2014 IEEE SEVENTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST), P183, DOI 10.1109/ICST.2014.31
   Zhao Y, 2019, PROC INT CONF SOFTW, P128, DOI 10.1109/ICSE.2019.00030
NR 144
TC 27
Z9 28
U1 2
U2 10
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD APR 1
PY 2022
VL 48
IS 4
BP 1115
EP 1137
DI 10.1109/TSE.2020.3013438
PG 23
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 0N4HC
UT WOS:000782799700002
DA 2024-07-18
ER

PT J
AU Sáenz-Adán, C
   Pérez, B
   García-Izquierdo, FJ
   Moreau, L
AF Saenz-Adan, Carlos
   Perez, Beatriz
   Garcia-Izquierdo, Francisco J.
   Moreau, Luc
TI Integrating Provenance Capture and UML With UML2PROV: Principles and
   Experience
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Provenance; PROV; provenance generation; template
ID SYSTEM; STATE
AB In response to the increasing calls for algorithmic accountability, UML2PROV is a novel approach to address the existing gap between application design, where models are described by UML diagrams, and provenance design, where generated provenance is meant to describe an application's flows of data, processes and responsibility, enabling greater accountability of this application. The originality of UML2PROV is that designers are allowed to follow their preferred software engineering methodology to create the UML Diagrams for their application, while UML2PROV takes the UML diagrams as a starting point to automatically generate: (1) the design of the provenance to be generated (expressed as PROV templates); and (2) the software library for collecting runtime values of interest (encoded as variable-value associations known as bindings), which can be deployed in the application without developer intervention. At runtime, the PROV templates combined with the bindings are used to generate high-quality provenance suitable for subsequent consumption. UML2PROV is rigorously defined by an extensive set of 17 patterns mapping UML diagrams to provenance templates, and is accompanied by a reference implementation based on Model Driven Development techniques. A systematic evaluation of UML2PROV uses quantitative data and qualitative arguments to show the benefits and trade-offs of applying UML2PROV for software engineers seeking to make applications provenance-aware. In particular, as the UML design drives both the design and capture of provenance, we discuss how the levels of detail in UML designs affect aspects such as provenance design generation, application instrumentation, provenance capability maintenance, storage and run-time overhead, and quality of the generated provenance. Some key lessons are learned such as: starting from a non-tailored UML design leads to the capture of more provenance than required to satisfy provenance requirements and therefore, increases the overhead unnecessarily; alternatively, if the UML design is tailored to focus on addressing provenance requirements, only relevant provenance gets to be collected, resulting in lower overheads.
C1 [Saenz-Adan, Carlos; Perez, Beatriz; Garcia-Izquierdo, Francisco J.] Univ La Rioja, Dept Math & Comp Sci, Logrono, La Rioja, Spain.
   [Moreau, Luc] Kings Coll London, Dept Informat, London WC2R 2LS, England.
C3 Universidad de La Rioja; University of London; King's College London
RP Sáenz-Adán, C (corresponding author), Univ La Rioja, Dept Math & Comp Sci, Logrono, La Rioja, Spain.
EM carlos.saenz@unirioja.es; beatriz.perez@unirioja.es;
   francisco.garcia@unirioja.es; luc.moreau@kcl.ac.uk
RI Moreau, Luc/C-9061-2011; Perez, Beatriz/K-2176-2014; Garcia-Izquierdo,
   Francisco J./K-9927-2014
OI Perez, Beatriz/0000-0001-9235-7311; Garcia-Izquierdo, Francisco
   J./0000-0003-0972-0787; Moreau, Luc/0000-0002-3494-120X; Saenz Adan,
   Carlos/0000-0003-2485-3182
FU Spanish Ministerio de Economia y Competitividad [EDU2016-79838-P];
   University of La Rioja [FPI-UR-2015]
FX This work was partially supported by the Spanish Ministerio de Economia
   y Competitividad (Project EDU2016-79838-P) and by the University of La
   Rioja (Grant FPI-UR-2015).
CR Alvarez S, 2006, LECT NOTES COMPUT SC, V4145, P28
   [Anonymous], 2018, KEPLER PROJECT
   [Anonymous], 2017, MOD TRANSF TECHN VER
   [Anonymous], 2017, OBJECTAID UML EXPLOR
   [Anonymous], 2019, UML2PROV USER GUIDE
   [Anonymous], 2014, MAINTAINJ V 4 2 0
   AspectJ Project, 2019, ASPECTJ PROJECT
   Baxter ID, 2000, SCI COMPUT PROGRAM, V36, P131, DOI 10.1016/S0167-6423(99)00034-9
   Bayer I, 2013, PLOS ONE, V8, DOI 10.1371/journal.pone.0070294
   Boskovic M., 2006, RADIOELEKTRONIC COMP, V6, P124
   Braun P, 2014, PROCEDIA COMPUT SCI, V35, P223, DOI 10.1016/j.procs.2014.08.102
   Carata L, 2014, COMMUN ACM, V57, P52, DOI 10.1145/2596628
   Cassar I, 2017, ELECTRON P THEOR COM, P15, DOI 10.4204/EPTCS.254.2
   Chapman A, 2011, 2011 IEEE INTERNATIONAL CONFERENCE ON INFORMATION REUSE AND INTEGRATION (IRI), P269, DOI 10.1109/IRI.2011.6009558
   Chen Z, 2008, LECT NOTES COMPUT SC, V5272, P92, DOI 10.1007/978-3-540-89965-5_11
   Curbera F, 2008, LECT NOTES COMPUT SC, V5331, P100
   Dragan N, 2010, PROC IEEE INT CONF S
   Eclipse, 2017, XTEND
   Frew J, 2008, LECT NOTES COMPUT SC, V5272, P200, DOI 10.1007/978-3-540-89965-5_21
   Funk M., 2009, 2 INT C ADV COMP HUM, P19
   Gammack D, 2016, LECT NOTES COMPUT SC, V9672, P146, DOI 10.1007/978-3-319-40593-3_12
   Ghezzi C., 2003, FUNDAMENTALS SOFTWAR
   Groth P., 2007, THESIS
   Heras J, 2015, BMC BIOINFORMATICS, V16, DOI 10.1186/s12859-015-0703-0
   Hollandt DA, 2008, CONCURR COMP-PRACT E, V20, P531, DOI 10.1002/cpe.1227
   Hutchinson J, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P471, DOI 10.1145/1985793.1985858
   Johnson MAC, 2018, LECT NOTES COMPUT SC, V11017, P101, DOI 10.1007/978-3-319-98379-0_8
   Kiczales G, 1997, LECT NOTES COMPUT SC, V1241, P220, DOI 10.1007/BFb0053381
   Kwasnikowska N, 2015, ACM T WEB, V9, DOI 10.1145/2734116
   Costa CM, 2011, J BIOMED INFORM, V44, P869, DOI 10.1016/j.jbi.2011.05.006
   Miles S, 2011, ACM T SOFTW ENG METH, V20, DOI 10.1145/2000791.2000792
   Momm C., 2008, P 12 ENT DISTR OBJ C, P58
   Moreau L., 2013, WORLD WIDE WEB CONSO
   Moreau L., 2013, W3C RECOMMENDATION R
   Moreau L, 2008, CONCURR COMP-PRACT E, V20, P409, DOI 10.1002/cpe.1233
   Moreau L, 2018, IEEE T SOFTWARE ENG, V44, P103, DOI 10.1109/TSE.2017.2659745
   OMG, 2014, OBJ CONSTR LANG V 2
   OMG, 2015, UN MOD LANG UML V 25
   Papyrus, 2018, MODELING ENV V 2 0 2
   Park H, 2011, PROC VLDB ENDOW, V4, P1351
   Pérez B, 2018, KNOWL INF SYST, V57, P495, DOI 10.1007/s10115-018-1164-3
   Pimentel JF, 2017, PROC VLDB ENDOW, V10, P1841, DOI 10.14778/3137765.3137789
   Read MM, 2005, TRENDS DNA FINGERPRI
   Reggio G., 2013, EESSMOD MODELS, P3
   Sáenz-Adán C, 2018, LECT NOTES COMPUT SC, V11017, P58, DOI 10.1007/978-3-319-98379-0_5
   SAENZADAN C, 2018, P 44 INT C CURR TREN, V706, P667, DOI DOI 10.1007/978-3-319-73117-9_47
   Scanniello G, 2010, ICEIS 2010: PROCEEDINGS OF THE 12TH INTERNATIONAL CONFERENCE ON ENTERPRISE INFORMATION SYSTEMS, VOL 3: INFORMATION SYSTEMS ANALYSIS AND SPECIFICATION, P141
   Seidl M., 2015, UML CLASSROOM INTRO
   da Cruz SMS, 2009, 2009 IEEE CONGRESS ON SERVICES (SERVICES-1 2009), VOLS 1 AND 2, P259, DOI 10.1109/SERVICES-I.2009.18
   Silva V, 2018, LECT NOTES COMPUT SC, V11017, P183, DOI 10.1007/978-3-319-98379-0_15
   Simmhan Y. L., 2010, WEB SERVICES RES EME, V317
   Torchiano M, 2013, J SYST SOFTWARE, V86, P2110, DOI 10.1016/j.jss.2013.03.084
   UML2PROV, 2020, SUPPLEMENTARY MAT
   Van Gorp P, 2003, LECT NOTES COMPUT SC, V2863, P144
   Walkinshaw N, 2008, SOFTW TEST VERIF REL, V18, P99, DOI 10.1002/stvr.380
   Whittle J, 2014, IEEE SOFTWARE, V31, P79, DOI 10.1109/MS.2013.65
NR 56
TC 2
Z9 2
U1 1
U2 5
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JAN 1
PY 2022
VL 48
IS 1
BP 53
EP 68
DI 10.1109/TSE.2020.2977016
PG 16
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA YG0HJ
UT WOS:000742179000003
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Chen, LS
   Pei, Y
   Furia, CA
AF Chen, Liushan
   Pei, Yu
   Furia, Carlo A.
TI Contract-Based Program Repair Without The Contracts: An Extended Study
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Maintenance engineering; Computer bugs; Tools; Java; Monitoring;
   Contracts; Programming
ID FAULT; CODE
AB Most techniques for automated program repair (APR) use tests to drive the repair process; this makes them prone to generating spurious repairs that overfit the available tests unless additional information about expected program behavior is available. Our previous work on Jaid, an APR technique for Java programs, showed that constructing detailed state abstractions-similar to those employed by techniques for programs with contracts-from plain Java code without any special annotations provides valuable additional information, and hence helps mitigate the overfitting problem. This paper extends the work on Jaid with a comprehensive experimental evaluation involving 693 bugs in three different benchmark suites. The evaluation shows, among other things, that: 1) Jaid is effective: it produced correct fixes for over 15 percent of all bugs, with a precision of nearly 60 percent; 2) Jaid is reasonably efficient: on average, it took less than 30 minutes to output a correct fix; 3) Jaid is competitive with the state of the art, as it fixed more bugs than any other technique, and 11 bugs that no other tool can fix; 4) Jaid is robust: its heuristics are complementary and their effectiveness does not depend on the fine-tuning of parameters. The experimental results also indicate the main trade-offs involved in designing an APR technique based on tests, as well as possible directions for further progress in this line of work.
C1 [Chen, Liushan; Pei, Yu] Hong Kong Polytech Univ, Dept Comp, Hong Kong, Peoples R China.
   [Furia, Carlo A.] USI Univ Svizzera Italiana, Software Inst, CH-6900 Lugano, Switzerland.
C3 Hong Kong Polytechnic University; Universita della Svizzera Italiana
RP Pei, Y (corresponding author), Hong Kong Polytech Univ, Dept Comp, Hong Kong, Peoples R China.
EM cslschen@comp.polyu.edu.hk; csypei@comp.polyu.edu.hk; furiac@usi.ch
RI Pei, Yu/GRI-9837-2022
OI Pei, Yu/0000-0001-6065-6958; Furia, Carlo A./0000-0003-1040-3201; CHEN,
   Liushan/0000-0003-0414-4987
FU Hong Kong RGC General Research Fund (GRF) [PolyU 152703/16E, PolyU
   152002/18E]; Hong Kong Polytechnic University [1-ZVJ1, G-YBXU]; Swiss
   National Science Foundation (SNF) [Hi-Fi 200021-182060]
FX This work was supported in part by the Hong Kong RGC General Research
   Fund (GRF) under Grant PolyU 152703/16E and PolyU 152002/18E, by the
   Hong Kong Polytechnic University under internal fund 1-ZVJ1 and G-YBXU,
   and by the Swiss National Science Foundation (SNF) under Grant Hi-Fi
   200021-182060.
CR Abreu R, 2009, IEEE INT CONF AUTOM, P88, DOI 10.1109/ASE.2009.25
   Abreu R, 2009, J SYST SOFTWARE, V82, P1780, DOI 10.1016/j.jss.2009.06.035
   Arcuri A, 2014, SOFTW TEST VERIF REL, V24, P219, DOI 10.1002/stvr.1486
   Arcuri A, 2008, IEEE C EVOL COMPUTAT, P162, DOI 10.1109/CEC.2008.4630793
   Chandra S, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P121, DOI 10.1145/1985793.1985811
   Chen LS, 2017, IEEE INT CONF AUTOM, P637, DOI 10.1109/ASE.2017.8115674
   DeMarco F, 2014, P 6 INT WORKSHOP CON, P30, DOI 10.1145/2593735.2593740
   Durieux T., 2016, HAL01272126 U LILL 1
   Durieux T, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P302, DOI 10.1145/3338906.3338911
   Nguyen HDT, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P772, DOI 10.1109/ICSE.2013.6606623
   Hua JR, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P12, DOI 10.1145/3180155.3180245
   Jiang JJ, 2018, ISSTA'18: PROCEEDINGS OF THE 27TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P298, DOI 10.1145/3213846.3213871
   Jones J.A., 2005, P 20 IEEE ACM INT C, P273, DOI [10.1145/1101908.1101949, DOI 10.1145/1101908.1101949]
   Ke YL, 2015, IEEE INT CONF AUTOM, P295, DOI 10.1109/ASE.2015.60
   Kim D, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P802, DOI 10.1109/ICSE.2013.6606626
   Le Goues C, 2015, IEEE T SOFTWARE ENG, V41, P1236, DOI 10.1109/TSE.2015.2454513
   Le Goues C, 2012, PROC INT CONF SOFTW, P3, DOI 10.1109/ICSE.2012.6227211
   Le XBD, 2019, PROC INT CONF SOFTW, P524, DOI 10.1109/ICSE.2019.00064
   Le XBD, 2017, PROCEEDINGS OF THE 26TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA'17), P376, DOI 10.1145/3092703.3098225
   Le XBD, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P593, DOI 10.1145/3106237.3106309
   Le XBD, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P213, DOI 10.1109/SANER.2016.76
   Lin Derrick, 2017, P COMPANION 2017 ACM, P55, DOI [10.1145/3135932, DOI 10.1145/3135932, 10.1145/3135932.3135941]
   Liu K, 2019, IEEE INT CONF SOFTW, P102, DOI 10.1109/ICST.2019.00020
   Long F, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P166, DOI 10.1145/2786805.2786811
   Long F, 2016, ACM SIGPLAN NOTICES, V51, P298, DOI 10.1145/2914770.2837617
   Martinez M., 2016, P 25 INT S SOFTWARE, P441, DOI 10.1145/2931037
   Martinez M, 2017, EMPIR SOFTW ENG, V22, P1936, DOI 10.1007/s10664-016-9470-4
   Martinez M, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE COMPANION 2014), P492, DOI 10.1145/2591062.2591114
   Mechtaev S, 2016, PROC INT CONF SOFTW, P691, DOI 10.1145/2884781.2884807
   Mechtaev S, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P448, DOI 10.1109/ICSE.2015.63
   Monperrus M, 2015, HAL01206501 U LILL
   Naish L, 2011, ACM T SOFTW ENG METH, V20, DOI 10.1145/2000791.2000795
   Pearson S, 2017, PROC INT CONF SOFTW, P609, DOI 10.1109/ICSE.2017.62
   Pei Y, 2014, IEEE T SOFTWARE ENG, V40, P427, DOI 10.1109/TSE.2014.2312918
   Qi YH, 2013, PROC IEEE INT CONF S, P180, DOI 10.1109/ICSM.2013.29
   Qi Zichao, 2015, P 2015 INT S SOFTW T, P24, DOI DOI 10.1145/2771783.2771791
   Saha RK, 2017, IEEE INT CONF AUTOM, P648, DOI 10.1109/ASE.2017.8115675
   Smith EK, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P532, DOI 10.1145/2786805.2786825
   Sobreira V, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P130, DOI 10.1109/SANER.2018.8330203
   Tan SH, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P727, DOI 10.1145/2950290.2950295
   Wang SW, 2019, PROCEEDINGS OF EASE 2019 - EVALUATION AND ASSESSMENT IN SOFTWARE ENGINEERING, P260, DOI 10.1145/3319008.3319349
   Weimer W, 2013, IEEE INT CONF AUTOM, P356, DOI 10.1109/ASE.2013.6693094
   Weimer W, 2009, PROC INT CONF SOFTW, P364, DOI 10.1109/ICSE.2009.5070536
   Wen M, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1, DOI 10.1145/3180155.3180233
   Wong WE, 2016, IEEE T SOFTWARE ENG, V42, P707, DOI 10.1109/TSE.2016.2521368
   Wong WE, 2014, IEEE T RELIAB, V63, P290, DOI 10.1109/TR.2013.2285319
   Wong WE, 2010, J SYST SOFTWARE, V83, P188, DOI 10.1016/j.jss.2009.09.037
   Xiangyu Zhang, 2006, 28th International Conference on Software Engineering Proceedings, P272, DOI 10.1145/1134285.1134324
   Xin Q, 2017, IEEE INT CONF AUTOM, P660, DOI 10.1109/ASE.2017.8115676
   Xiong YF, 2017, PROC INT CONF SOFTW, P416, DOI 10.1109/ICSE.2017.45
   Xu T., 2019, RESTORE RETROSPECTIV
   Xuan JF, 2017, IEEE T SOFTWARE ENG, V43, P34, DOI 10.1109/TSE.2016.2560811
   Ye H., 2019, COMPREHENSIVE STUDY
   Yu Pei, 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P392, DOI 10.1109/ASE.2011.6100080
NR 54
TC 11
Z9 12
U1 2
U2 3
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD DEC 1
PY 2021
VL 47
IS 12
BP 2841
EP 2857
DI 10.1109/TSE.2020.2970009
PG 17
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA XM6HB
UT WOS:000728924600012
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Ma, SY
   Xing, ZC
   Chen, CY
   Chen, C
   Qu, LZ
   Li, GQ
AF Ma, Suyu
   Xing, Zhenchang
   Chen, Chunyang
   Chen, Cheng
   Qu, Lizhen
   Li, Guoqiang
TI Easy-to-Deploy API Extraction by Multi-Level Feature Embedding and
   Transfer Learning
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Libraries; Feature extraction; Machine learning; Software; Computer
   architecture; Training data; Manuals; API extraction; CNN; word
   embedding; LSTM; transfer learning
AB Application Programming Interfaces (APIs) have been widely discussed on social-technical platforms (e.g., Stack Overflow). Extracting API mentions from such informal software texts is the prerequisite for API-centric search and summarization of programming knowledge. Machine learning based API extraction has demonstrated superior performance than rule-based methods in informal software texts that lack consistent writing forms and annotations. However, machine learning based methods have a significant overhead in preparing training data and effective features. In this paper, we propose a multi-layer neural network based architecture for API extraction. Our architecture automatically learns character-, word- and sentence-level features from the input texts, thus removing the need for manual feature engineering and the dependence on advanced features (e.g., API gazetteers) beyond the input texts. We also propose to adopt transfer learning to adapt a source-library-trained model to a target-library, thus reducing the overhead of manual training-data labeling when the software text of multiple programming languages and libraries need to be processed. We conduct extensive experiments with six libraries of four programming languages which support diverse functionalities and have different API-naming and API-mention characteristics. Our experiments investigate the performance of our neural architecture for API extraction in informal software texts, the importance of different features, the effectiveness of transfer learning. Our results confirm not only the superior performance of our neural architecture than existing machine learning based methods for API extraction in informal software texts, but also the easy-to-deploy characteristic of our neural architecture.
C1 [Ma, Suyu; Chen, Chunyang; Qu, Lizhen] Monash Univ, Fac Informat Technol, Clayton, Vic 3800, Australia.
   [Xing, Zhenchang] Australian Natl Univ, Coll Engn Comp Sci, Canberra, ACT 0200, Australia.
   [Chen, Cheng] PricewaterhouseCoopers Firm, Shanghai 201210, Peoples R China.
   [Li, Guoqiang] Shanghai Jiao Tong Univ, Sch Software, Shanghai 200240, Peoples R China.
C3 Monash University; Australian National University; Shanghai Jiao Tong
   University
RP Chen, CY (corresponding author), Monash Univ, Fac Informat Technol, Clayton, Vic 3800, Australia.; Li, GQ (corresponding author), Shanghai Jiao Tong Univ, Sch Software, Shanghai 200240, Peoples R China.
EM suyu.ma@monash.edu; zhenchang.xing@anu.edu.au; chunyang.chen@monash.edu;
   cc94226@live.com; Lizhen.Qu@monash.edu; li-gq@cs.sjtu.edu.cn
RI Li, Guoqiang/GSD-3263-2022; zhou, you/KBC-3567-2024; wang,
   xueting/JPY-2782-2023; Ma, Suyu/GPW-7490-2022
OI Chen, Chunyang/0000-0003-2011-9618; Xing, Zhenchang/0000-0001-7663-1421
CR [Anonymous], 1997, NEURAL COMPUT
   Arnold Andrew., 2008, Proceedings of ACL-08: HLT, P245
   Bacchelli A., 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P476, DOI 10.1109/ASE.2011.6100103
   Bacchelli A., 2010, Proceedings of the 32nd International Conference on Software Engineering, P375
   Bacchelli A, 2009, WORK CONF REVERSE EN, P205, DOI 10.1109/WCRE.2009.44
   Bazzi I., 2002, THESIS MIT CAMBRIDGE
   Bengio Y., 2012, UNSUPERVISED TRANSFE, V7, P19
   Caruana R., 1995, Advances in Neural Information Processing Systems 7, P657
   Chen CW, 2018, IEEE INT SYMP CIRC S, DOI 10.1109/ISCAS.2018.8351436
   Chen CY, 2021, IEEE T SOFTWARE ENG, V47, P432, DOI 10.1109/TSE.2019.2896123
   Chen CY, 2019, EMPIR SOFTW ENG, V24, P1155, DOI 10.1007/s10664-018-9657-y
   Chen CY, 2017, PROC INT CONF SOFTW, P450, DOI 10.1109/ICSE.2017.48
   Chen CY, 2016, IEEE INT CONF AUTOM, P834, DOI 10.1145/2970276.2970290
   Chen CY, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P338, DOI 10.1109/SANER.2016.21
   Chen GB, 2016, IEEE INT CONF AUTOM, P744, DOI 10.1145/2970276.2970317
   Chen X, 2021, IEEE T SOFTWARE ENG, V47, P1960, DOI 10.1109/TSE.2019.2940439
   Cheng CL, 2017, 2017 12TH INTERNATIONAL CONFERENCE ON INTELLIGENT SYSTEMS AND KNOWLEDGE ENGINEERING (IEEE ISKE), DOI 10.1109/ULTSYM.2017.8091659
   Chiu J.P., 2016, Named entity recognition with bidirectional lstm-cnns, V4, P357, DOI 10.1162/tacl_a_00104
   Dagenais B, 2012, PROC INT CONF SOFTW, P47, DOI 10.1109/ICSE.2012.6227207
   Dos Santos C., 2014, Coling, P69
   dos Santos CN, 2014, PR MACH LEARN RES, V32, P1818
   Gao Q, 2015, IEEE INT CONF AUTOM, P307, DOI 10.1109/ASE.2015.81
   Hsin-Yi Jiang, 2008, 2008 23rd IEEE/ACM International Conference on Automated Software Engineering, P59, DOI 10.1109/ASE.2008.16
   Huang Q, 2018, IEEE INT CONF AUTOM, P293, DOI 10.1145/3238147.3238191
   Huang Y, 2018, IEEE INT CONF AUTOM, P214, DOI 10.1145/3238147.3238208
   Huang ZH, 2015, COMPUT INTEL NEUROSC, V2015, DOI 10.1155/2015/685404
   Kim Y, 2016, AAAI CONF ARTIF INTE, P2741
   King DB, 2015, ACS SYM SER, V1214, P1
   Lample M., 2016, P NAACL HLT, P260, DOI DOI 10.18653/V1/N16-1030
   Levy O., 2015, Transactions of the Association for Computational Linguistics, V3, P211
   Levy O, 2014, ADV NEUR IN, V27
   Li HW, 2018, PROC IEEE INT CONF S, P183, DOI 10.1109/ICSME.2018.00028
   Ling Wang, 2015, CoRR
   Lukovnikov D, 2017, PROCEEDINGS OF THE 26TH INTERNATIONAL CONFERENCE ON WORLD WIDE WEB (WWW'17), P1211, DOI 10.1145/3038912.3052675
   Marcus A, 2003, PROC INT CONF SOFTW, P125, DOI 10.1109/ICSE.2003.1201194
   Moonen L, 2001, EIGHTH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P13, DOI 10.1109/WCRE.2001.957806
   Oquab M, 2014, PROC CVPR IEEE, P1717, DOI 10.1109/CVPR.2014.222
   Pan SJ, 2010, IEEE T KNOWL DATA EN, V22, P1345, DOI 10.1109/TKDE.2009.191
   Pennington J., 2014, P C EMP METH NAT LAN, P1532, DOI DOI 10.3115/V1/D14-1162
   Ravi S, 2016, OPTIMIZATION MODEL F
   Rigby PC, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P832, DOI 10.1109/ICSE.2013.6606629
   Sa Gao, 2019, 2019 IEEE 26th International Conference on Software Analysis, Evolution and Reengineering (SANER). Proceedings, P414, DOI 10.1109/SANER.2019.8667994
   Sak H, 2014, INTERSPEECH, P338
   Schuster M, 1997, IEEE T SIGNAL PROCES, V45, P2673, DOI 10.1109/78.650093
   Srivastava N, 2014, J MACH LEARN RES, V15, P1929
   Storey Margaret-Anne, 2012, Crowd Documentation: Exploring the Coverage and the Dynamics of API Discussions on Stack Overflow, V11
   Subramanian S, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P643, DOI 10.1145/2568225.2568313
   Sutskever I, 2014, ADV NEUR IN, V27
   Tang DY, 2014, PROCEEDINGS OF THE 52ND ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, VOL 1, P1555
   Tjong KSE, 2003, P 7 C NAT LANG LEARN, P142, DOI DOI 10.3115/1119176.1119195
   Treude C, 2016, PROC INT CONF SOFTW, P392, DOI 10.1145/2884781.2884800
   Wang X, 2019, EMPIR SOFTW ENG, V24, P3514, DOI 10.1007/s10664-019-09702-z
   Xu BW, 2017, IEEE INT CONF AUTOM, P706, DOI 10.1109/ASE.2017.8115681
   Ye DH, 2018, EMPIR SOFTW ENG, V23, P3129, DOI 10.1007/s10664-018-9608-7
   Ye DH, 2016, PROC IEEE INT CONF S, P389, DOI 10.1109/ICSME.2016.11
   Ye DH, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P90, DOI 10.1109/SANER.2016.10
   Yosinski J, 2014, ADV NEUR IN, V27
   Zhang X, 2015, ADV NEUR IN, V28
   Zheng W., 2011, P 19 ACM SIGSOFT S 1, P480
NR 59
TC 24
Z9 26
U1 0
U2 8
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD OCT 1
PY 2021
VL 47
IS 10
BP 2296
EP 2311
DI 10.1109/TSE.2019.2946830
PG 16
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA WH1IX
UT WOS:000707441900015
DA 2024-07-18
ER

PT J
AU Baresi, L
   Leva, A
   Quattrocchi, G
AF Baresi, Luciano
   Leva, Alberto
   Quattrocchi, Giovanni
TI Fine-Grained Dynamic Resource Allocation for Big-Data Applications
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Sparks; Resource management; Dynamic scheduling; Containers; Task
   analysis; Runtime; Control theory; Distributed architectures; control
   theory; quality assurance; batch processing systems
ID IDENTIFICATION; MAPREDUCE
AB Many big-data applications are batch applications that exploit dedicated frameworks to perform massively parallel computations across clusters of machines. The time needed to process the entirety of the inputs represents the application's response time, which can be subject to deadlines. Spark, probably the most famous incarnation of these frameworks today, allocates resources to applications statically at the beginning of the execution and deviations are not managed: to meet the applications' deadlines, resources must be allocated carefully. This paper proposes an extension to Spark, called dynaSpark, that is able to allocate and redistribute resources to applications dynamically to meet deadlines and cope with the execution of unanticipated applications. This work is based on two key enablers: containers, to isolate Spark's parallel executors and allow for the dynamic and fast allocation of resources, and control-theory to govern resource allocation at runtime and obtain required precision and speed. Our evaluation shows that dynaSpark can (i) allocate resources efficiently to execute single applications with respect to set deadlines and (ii) reduce deadline violations (w.r.t. Spark) when executing multiple concurrent applications.
C1 [Baresi, Luciano; Leva, Alberto; Quattrocchi, Giovanni] Politecn Milan, Dipartimento Elettron Informaz & Bioingn, I-20133 Milan, MI, Italy.
C3 Polytechnic University of Milan
RP Quattrocchi, G (corresponding author), Politecn Milan, Dipartimento Elettron Informaz & Bioingn, I-20133 Milan, MI, Italy.
EM luciano.baresi@polimi.it; alberto.leva@polimi.it;
   giovanni.quattrocchi@polimi.it
RI Baresi, Luciano/N-4208-2018
OI Baresi, Luciano/0000-0001-6467-837X
FU project EEB Edifici A Zero Consumo Energetico In Distretti Urbani
   Intelligenti (Italian Technology Cluster For Smart Communities) [CTN01_
   00034_ 594053]; GAUSS national research project (MIUR, PRIN 2015)
   [2015KWREMX]
FX This work was supported with grant by project EEB Edifici A Zero Consumo
   Energetico In Distretti Urbani Intelligenti (Italian Technology Cluster
   For Smart Communities) CTN01_ 00034_ 594053 and by the GAUSS national
   research project (MIUR, PRIN 2015, Contract 2015KWREMX).
CR Agarwal S., 2013, P EUR C COMP SYST, P29, DOI DOI 10.1145/2465351.2465355
   Agarwal Sameer., 2012, P 9 USENIX C NETWORK, P21
   [Anonymous], 2016, LINUX MANUAL CGROUPS
   [Anonymous], 2017, HDFS USERS GUIDE
   [Anonymous], 2017, SPARK DYNAMIC RESOUR
   [Anonymous], 2016, APACHE SPARK SURVEY
   [Anonymous], 2011, P 8 USENIX S NETW SY
   Ardagna Danilo, 2011, P 20 INT C WORLD WID, P177, DOI [10.1145/1963405.1963433, DOI 10.1145/1963405.1963433]
   Baresi L, 2016, 2016 IEEE INTERNATIONAL CONFERENCE ON SMART CLOUD (SMARTCLOUD), P218, DOI 10.1109/SmartCloud.2016.42
   Baresi L, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P217, DOI 10.1145/2950290.2950328
   Barna Cornel, 2017, 2017 IEEE/ACM 12th International Symposium on Software Engineering for Adaptive and Self-Managing Systems (SEAMS). Proceedings, P65, DOI 10.1109/SEAMS.2017.12
   Buyya R, 2009, FUTURE GENER COMP SY, V25, P599, DOI 10.1016/j.future.2008.12.001
   Chaudhuri Surajit., 2005, P 2005 ACM SIGMOD IN, P575
   Chen C, 2017, INT CON DISTR COMP S, P549, DOI 10.1109/ICDCS.2017.174
   Chen M, 2014, MOBILE NETW APPL, V19, P171, DOI 10.1007/s11036-013-0489-0
   DERTOUZOS ML, 1989, IEEE T SOFTWARE ENG, V15, P1497, DOI 10.1109/32.58762
   Dustdar S, 2011, IEEE INTERNET COMPUT, V15, P66, DOI 10.1109/MIC.2011.121
   Felter W, 2015, INT SYM PERFORM ANAL, P171, DOI 10.1109/ISPASS.2015.7095802
   Fisher N., 2007, The Multiprocessor Real-Time Scheduling of General Task Systems
   Gianniti Eugenio, 2017, ACM SIGMETRICS Performance Evaluation Review, V44, P23, DOI 10.1145/3092819.3092824
   Gibilisco GP, 2016, IEEE INT CONF CLOUD, P188, DOI [10.1109/CLOUD.2016.32, 10.1109/CLOUD.2016.0034]
   Guarin DL, 2015, IFAC PAPERSONLINE, V48, P196, DOI 10.1016/j.ifacol.2015.12.124
   Hindman B., 2011, NSDI, V11, P295, DOI DOI 10.1016/0375-6505(85)90011-2
   Hong K. S., 1988, Proceedings. Real-Time Systems Symposium (IEEE Cat. No.88CH2618-7), P244, DOI 10.1109/REAL.1988.51119
   Isard M., 2007, Operating Systems Review, V41, P59, DOI 10.1145/1272998.1273005
   Islam MT, 2017, P IEEE INT C E-SCI, P89, DOI 10.1109/eScience.2017.21
   Kc K., 2010, Proceedings of the 2010 IEEE 2nd International Conference on Cloud Computing Technology and Science (CloudCom 2010), P388, DOI 10.1109/CloudCom.2010.97
   Klein C, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P700, DOI 10.1145/2568225.2568227
   Kozlowski N., 2017, SPARK MEMORY MANAG 1
   Lakew EB, 2017, IEEE ACM INT SYMP, P589, DOI 10.1109/CCGRID.2017.71
   Lama Palden, 2012, P 9 INT C AUT COMP, DOI DOI 10.1145/2371536.2371547
   Lee K, 2016, SIGMOD'16: PROCEEDINGS OF THE 2016 INTERNATIONAL CONFERENCE ON MANAGEMENT OF DATA, P1753, DOI 10.1145/2882903.2903728
   Lin J, 2009, 7 WORKSH LARG SCAL D, V1, P57
   Malekimajd Marzieh, 2015, ACM SIGMETRICS Performance Evaluation Review, V42, P51
   Marconi F, 2018, LECT NOTES COMPUT SC, V10811, P315, DOI 10.1007/978-3-319-77935-5_22
   Menascé DA, 2002, IEEE INTERNET COMPUT, V6, P72, DOI 10.1109/MIC.2002.1067740
   Merkel D., 2014, LINUX J, V2014, P2, DOI DOI 10.5555/2600239.2600241
   Morton Kristi., 2010, SIGMOD, P507
   NARENDRA KS, 1966, IEEE T AUTOMAT CONTR, VAC11, P546, DOI 10.1109/TAC.1966.1098387
   Nghiem PP, 2016, J PARALLEL DISTR COM, V95, P29, DOI 10.1016/j.jpdc.2016.04.001
   Nordsjö AE, 2001, IEEE T SIGNAL PROCES, V49, P577, DOI 10.1109/78.905884
   Ousterhout K., 2015, NSDI, V15, P293
   Padala P., 2007, Operating Systems Review, V41, P289, DOI 10.1145/1272998.1273026
   Palanisamy B, 2013, INT PARALL DISTRIB P, P1275, DOI 10.1109/IPDPS.2013.20
   Polo J, 2013, IEEE T NETW SERV MAN, V10, P231, DOI 10.1109/TNSM.2012.122112.110163
   Polo J, 2010, IEEE IFIP NETW OPER, P373, DOI 10.1109/NOMS.2010.5488494
   Rolia Jerome, 2012, SIGMOD'12
   Roy N, 2011, INT CONF PERVAS COMP, P63, DOI 10.1109/PERCOM.2011.5767596
   SHIN KG, 1994, P IEEE, V82, P6, DOI 10.1109/5.259423
   Sidhanta S, 2016, IEEE ACM INT SYMP, P193, DOI 10.1109/CCGrid.2016.10
   Soltesz Stephen, 2007, P 2 ACM SIGOPS EUROS, P275, DOI [10.1145/1272996.1273025, DOI 10.1145/1272996.1273025]
   Stankovic J. A., 2012, Deadline scheduling for real-time systems: EDF and related algorithms, V460
   Vavilapalli V.K., P 4 ANN S CLOUD COMP
   Verma A., 2011, P 8 ACM INT C AUT CO, P235, DOI DOI 10.1145/1998582.1998637
   Verma A, 2012, IEEE IFIP NETW OPER, P900, DOI 10.1109/NOMS.2012.6212006
   Vörös J, 2005, IEEE T CIRCUITS-II, V52, P865, DOI 10.1109/TCSII.2005.853339
   Wohlin C., WEB ENG
NR 57
TC 6
Z9 7
U1 0
U2 3
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD AUG 1
PY 2021
VL 47
IS 8
BP 1668
EP 1682
DI 10.1109/TSE.2019.2931537
PG 15
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA TZ7YH
UT WOS:000684687400009
DA 2024-07-18
ER

PT J
AU Bertolino, A
   Miranda, B
   Pietrantuono, R
   Russo, S
AF Bertolino, Antonia
   Miranda, Breno
   Pietrantuono, Roberto
   Russo, Stefano
TI Adaptive Test Case Allocation, Selection and Generation Using Coverage
   Spectrum and Operational Profile
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Software reliability; Resource management; Software testing; Subspace
   constraints; Test pattern generators; Software testing; reliability;
   operational testing; random testing; sampling
ID RELIABILITY; PRIORITIZATION; MINIMIZATION; SIZE
AB We present an adaptive software testing strategy for test case allocation, selection and generation, based on the combined use of operational profile and coverage spectrum, aimed at achieving high delivered reliability of the program under test. Operational profile-based testing is a black-box technique considered well suited when reliability is a major concern, as it selects the test cases having the largest impact on failure probability in operation. Coverage spectrum is a characterization of a program's behavior in terms of the code entities (e.g., branches, statements, functions) that are covered as the program executes. The proposed strategy - named covrel+ - complements operational profile information with white-box coverage measures, so as to adaptively select/generate the most effective test cases for improving reliability as testing proceeds. We assess covrel+ through experiments with subjects commonly used in software testing research, comparing results with traditional operational testing. The results show that exploiting operational and coverage data in an integrated adaptive way allows generally to outperform operational testing at achieving a given reliability target, or at detecting faults under the same testing budget, and that covrel+ has greater ability than operational testing in detecting hard-to-detect faults.
C1 [Bertolino, Antonia] ISTI CNR, PI-56127 Pisa, Italy.
   [Miranda, Breno] Univ Fed Pernambuco, BR-50670901 Recife, PE, Brazil.
   [Pietrantuono, Roberto; Russo, Stefano] Univ Napoli Federico II, I-80138 Naples, Italy.
C3 Consiglio Nazionale delle Ricerche (CNR); Istituto di Scienza e
   Tecnologie dell'Informazione "Alessandro Faedo" (ISTI-CNR); Universidade
   Federal de Pernambuco; University of Naples Federico II
RP Miranda, B (corresponding author), Univ Fed Pernambuco, BR-50670901 Recife, PE, Brazil.
EM antonia.bertolino@isti.cnr.it; bafm@cin.ufpe.br;
   roberto.pietrantuono@unina.it; stefano.russo@unina.it
RI Miranda, Breno/S-1248-2018; Bertolino, Antonia/ABD-6837-2020; Russo,
   Stefano/H-7723-2013
OI Miranda, Breno/0000-0001-9608-9393; Bertolino,
   Antonia/0000-0001-8749-1356; Russo, Stefano/0000-0002-8747-3446;
   Pietrantuono, Roberto/0000-0003-2449-1724
FU PRIN 2015 project "GAUSS" - MIUR; CAPES [APQ-0826-1.03/16,
   BCT-0204-1.03/17]; FACEPE [APQ-0826-1.03/16, BCT-0204-1.03/17]
FX This work has been supported by the PRIN 2015 project "GAUSS" funded by
   MIUR. B. Miranda wishes to thank the postdoctoral fellowship jointly
   sponsored by CAPES and FACEPE (APQ-0826-1.03/16; BCT-0204-1.03/17). We
   thank the editor and the anonymous reviewers for comments which greatly
   helped to improve the paper.
CR Abreu R, 2009, J SYST SOFTWARE, V82, P1780, DOI 10.1016/j.jss.2009.06.035
   Alrmuny D, 2014, 2014 11TH INTERNATIONAL CONFERENCE ON INFORMATION TECHNOLOGY: NEW GENERATIONS (ITNG), P255, DOI 10.1109/ITNG.2014.85
   Anand S, 2013, J SYST SOFTWARE, V86, P1978, DOI 10.1016/j.jss.2013.02.061
   [Anonymous], 1996, HDB SOFTWARE RELIABI
   Arcuri A, 2014, SOFTW TEST VERIF REL, V24, P219, DOI 10.1002/stvr.1486
   Ball T., 1998, Conference Record of POPL '98: 25th ACM SIGPLAN-SIGACT. Symposium on Principles of Programming Languages, P134, DOI 10.1145/268946.268958
   Ball T, 2000, COMPUTER, V33, P57, DOI 10.1109/2.869371
   Bertolino A, 2017, PROC INT CONF SOFTW, P541, DOI 10.1109/ICSE.2017.56
   Bishop Christopher M., 2006, Pattern Recognition and Machine Learning, V4
   Cadar C., 2008, Proceedings of the 8th USENIX conference on Operating systems design and implementation, OSDI'08, (USA), P209
   Cai KY, 2008, J SYST SOFTWARE, V81, P1406, DOI 10.1016/j.jss.2007.11.721
   Chen MH, 2001, IEEE T RELIAB, V50, P165, DOI 10.1109/24.963124
   Chen TY, 2010, J SYST SOFTWARE, V83, P60, DOI 10.1016/j.jss.2009.02.022
   Cotroneo D, 2016, IEEE T SOFTWARE ENG, V42, P452, DOI 10.1109/TSE.2015.2491931
   DelFrate F, 1995, SIXTH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P124, DOI 10.1109/ISSRE.1995.497650
   Fiondella L, 2012, IEEE T RELIAB, V61, P580, DOI 10.1109/TR.2012.2192016
   Fox D, 2003, INT J ROBOT RES, V22, P985, DOI 10.1177/0278364903022012001
   Frankl P. G., 2000, Software Engineering Notes, V25, P124, DOI 10.1145/347636.348926
   Frankl PG, 1998, IEEE T SOFTWARE ENG, V24, P586, DOI 10.1109/32.707695
   Fraser Gordon, 2011, PROC 19 ACM SIGSOFT, P416, DOI 10.1145/2025113.2025179
   Galeotti JP, 2013, PROC INT SYMP SOFTW, P360, DOI 10.1109/ISSRE.2013.6698889
   HAO J., 2006, P INT C WEB ENG, P17
   Harrold MJ, 1998, ACM SIGPLAN NOTICES, V33, P83, DOI 10.1145/277633.277647
   Herzig K, 2018, PROCEEDINGS 2018 IEEE/ACM 11TH INTERNATIONAL WORKSHOP ON SEARCH-BASED SOFTWARE TESTING (SBST), P38, DOI 10.1145/3194718.3194731
   Inozemtseva L, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P435, DOI 10.1145/2568225.2568271
   Kallepalli C, 2001, IEEE T SOFTWARE ENG, V27, P1023, DOI 10.1109/32.965342
   Kochhar PS, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P560, DOI 10.1109/SANER.2015.7081877
   Leon D, 2003, ISSRE 2003: 14TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P442, DOI 10.1109/ISSRE.2003.1251065
   Lv JP, 2014, IEEE T SOFTWARE ENG, V40, P396, DOI 10.1109/TSE.2014.2310194
   Miranda B, 2018, SOFTWARE QUAL J, V26, P1571, DOI 10.1007/s11219-017-9388-0
   Miranda B, 2017, J SYST SOFTWARE, V131, P528, DOI 10.1016/j.jss.2016.06.058
   Miranda B, 2016, 2016 IEEE/ACM 11TH INTERNATIONAL WORKSHOP IN AUTOMATION OF SOFTWARE TEST (AST), P22, DOI [10.1145/2896921.2896934, 10.1109/AST.2016.012]
   MUSA JD, 1993, IEEE SOFTWARE, V10, P14, DOI 10.1109/52.199724
   Musa JD, 1996, COMPUTER, V29, P61, DOI 10.1109/2.544239
   OSTRAND TJ, 1988, COMMUN ACM, V31, P676, DOI 10.1145/62959.62964
   Pacheco C, 2007, PROC INT CONF SOFTW, P75
   Pasquini A, 1996, IEEE T RELIAB, V45, P531, DOI 10.1109/24.556576
   Petit M, 2007, USIC 2007: PROCEEDINGS OF THE SEVENTH INTERNATIONAL CONFERENCE ON QUALITY SOFTWARE, P280
   Poulding S, 2010, IEEE T SOFTWARE ENG, V36, P763, DOI 10.1109/TSE.2010.24
   Reps T, 1997, LECT NOTES COMPUT SC, V1301, P432, DOI 10.1145/267896.267925
   Smidts Carol, 2014, ACM Computing Surveys, V46, DOI 10.1145/2518106
   Soffa ML, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P888, DOI 10.1145/1985793.1985935
   Sridharan Mohan, 2010, Proceedings of the 2010 IEEE 21st International Symposium on Software Reliability Engineering (ISSRE 2010), P378, DOI 10.1109/ISSRE.2010.16
   Strigini L., 1997, PASCONWO6CCN2TN12 ES
   Thevenod-Fosse Pascale., 1991, Software Testing, Verification and Reliability, V1, P5
   Tonella P, 2004, J SOFTW MAINT EVOL-R, V16, P103, DOI 10.1002/smr.284
   Vargha A, 2000, J EDUC BEHAV STAT, V25, P101, DOI 10.3102/10769986025002101
   Wong SL, 2011, PUBLIC MANAG REV, V13, P595, DOI 10.4061/2011/764293
   Wong WE, 2016, IEEE T SOFTWARE ENG, V42, P707, DOI 10.1109/TSE.2016.2521368
   Xie T, 2005, IEEE T SOFTWARE ENG, V31, P869, DOI 10.1109/TSE.2005.107
   Yoo S, 2012, SOFTW TEST VERIF REL, V22, P67, DOI [10.1002/stv.430, 10.1002/stvr.430]
NR 51
TC 10
Z9 11
U1 1
U2 11
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAY 1
PY 2021
VL 47
IS 5
BP 881
EP 898
DI 10.1109/TSE.2019.2906187
PG 18
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA SC1RN
UT WOS:000650457700002
DA 2024-07-18
ER

PT J
AU Yu, L
   Luo, XP
   Chen, JC
   Zhou, H
   Zhang, T
   Chang, H
   Leung, HKN
AF Yu, Le
   Luo, Xiapu
   Chen, Jiachi
   Zhou, Hao
   Zhang, Tao
   Chang, Henry
   Leung, Hareton K. N.
TI PPChecker: Towards Accessing the Trustworthiness of Android Apps'
   Privacy Policies
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Privacy; Google; Natural languages; Mobile handsets; Data protection;
   Force; Android apps; privacy policy
ID CLASSIFIER
AB Recent years have witnessed a sharp increase of malicious apps that steal users' personal information. To address users' concerns about privacy risks and to comply with data protection laws, more and more apps are supplied with privacy policies written in natural language to help users understand an app's privacy practices. However, little is known whether these privacy policies are trustworthy or not. Questionable privacy policies may be prepared by careless app developers or someone with malicious intention. In this paper, we carry out a systematic study on privacy policy by proposing a novel approach to automatically identify five kinds of problems in privacy policy. After tackling several challenging issues, we implement the approach in a system, named PPChecker, and evaluate it with real apps and their privacy policies. The experimental results show that PPChecker can effectively identify questionable privacy policies with high precision. Applying PPChecker to 2,500 popular apps, we find that 1,850 apps (i.e., 74.0 percent) have at least one kind of problems. This study sheds light on the research of improving and regulating apps' privacy policies.
C1 [Yu, Le; Luo, Xiapu; Chen, Jiachi; Zhou, Hao; Zhang, Tao; Leung, Hareton K. N.] Hong Kong Polytech Univ, Dept Comp, Hong Kong, Peoples R China.
   [Zhang, Tao] Harbin Engn Univ, Coll Comp Sci & Technol, Harbin 150001, Peoples R China.
   [Chang, Henry] Univ Hong Kong, Dept Law, Hong Kong, Peoples R China.
C3 Hong Kong Polytechnic University; Harbin Engineering University;
   University of Hong Kong
RP Luo, XP (corresponding author), Hong Kong Polytech Univ, Dept Comp, Hong Kong, Peoples R China.
EM yulele08@gmail.com; csxluo@comp.polyu.edu.hk; chenjiachi317@gmail.com;
   hareton.leung@polyu.edu.hk; cstzhang@hrbeu.edu.cn; hcychang@hku.hk;
   sunmoonsky0001@gmail.com
RI Zhou, Hao/AAH-7956-2020; Chen, Jiachi/HOC-4256-2023; YU, Le/B-7784-2013;
   Zhang, Tao/E-5634-2012
OI Zhou, Hao/0000-0002-0146-5518; YU, Le/0000-0003-1227-1273; Zhang,
   Tao/0000-0002-6272-4069; Yu, Le/0000-0003-1457-6329
FU Hong Kong RGC Projects [PolyU 152223/17E, PolyU 152279/16E, CityU
   C1008-16G]; HKPolyU Research Grant (G-YBJX); National Natural Science
   Foundation of China [61602258]; China Postdoctoral Science Foundation
   [2017M621247]
FX The authors thank the anonymous reviewers for their quality reviews and
   suggestions This work was supported in part by the Hong Kong RGC
   Projects (No. PolyU 152223/17E, PolyU 152279/16E, CityU C1008-16G), the
   HKPolyU Research Grant (G-YBJX), the National Natural Science Foundation
   of China under Grant 61602258, and the China Postdoctoral Science
   Foundation under Grant 2017M621247.
CR Acharya Akhil, 2017, P 10 ACM C SEC PRIV, P23, DOI DOI 10.1145/3098243.3098247
   Android, 2017, USER INTERFACT SETTI
   Android, 2017, USER INTERFACE LAYOU
   Android, 2017, PUBLIC CLASS DIALOG
   [Anonymous], 2015, P NDSS
   [Anonymous], 2006, P 2 S USABLE PRIVACY
   [Anonymous], 2013, FTC PATH CASE HELPS
   [Anonymous], 2013, NEED PRIVACY POLICIE
   [Anonymous], 2013, STUDY REPORT PRIVACY
   [Anonymous], 2013, MOB PRIV DISCL BUILD
   [Anonymous], 2013, 4 KINDS VERBS USED P
   [Anonymous], 2004, CALIFORNIA ONLINE PR
   [Anonymous], 2012, P 2 ACM C DATA APPL, DOI DOI 10.1145/2133601.2133640
   [Anonymous], 2011, PIOS DETECTING PRIVA
   Arzt S, 2014, ACM SIGPLAN NOTICES, V49, P259, DOI [10.1145/2666356.2594299, 10.1145/2594291.2594299]
   Au Kathy Wain Yee, 2012, P 2012 ACM C COMP CO, P217
   Backes M, 2016, CCS'16: PROCEEDINGS OF THE 2016 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P356, DOI 10.1145/2976749.2978333
   Balebako R., 2014, P US SEC
   Balebako R, 2014, IEEE SECUR PRIV, V12, P55, DOI 10.1109/MSP.2014.70
   Bowers J, 2017, PROCEEDINGS OF THIRTEENTH SYMPOSIUM ON USABLE PRIVACY AND SECURITY (SOUPS 2017), P97
   Breaux TD, 2015, INT REQUIR ENG CONF, P166, DOI 10.1109/RE.2015.7320419
   Breaux TD, 2014, REQUIR ENG, V19, P281, DOI 10.1007/s00766-013-0190-7
   Breaux TD, 2013, S VIS LANG HUM CEN C, P14, DOI 10.1109/RE.2013.6636701
   Brennan M., 2012, CALIFORNIA AG SENDS
   CALLAHAN D, 1986, SIGPLAN NOTICES, V21, P152, DOI 10.1145/13310.13327
   Cer Daniel M., 2010, Proceedings of the Seventh International Conference on Language Resources and Evaluation (LREC'10), P1628
   Chidgey C., 2015, GOOGLE PLAY DESCRIPT
   CommonsWare, 2017, SYST SERV
   Costante Elisa, 2012, Security. Data Privacy Management and Autonomous Spontaneous, P146
   CYTRON R, 1991, ACM T PROGR LANG SYS, V13, P451, DOI 10.1145/115372.115320
   De Lucia A, 2001, FIRST IEEE INTERNATIONAL WORKSHOP ON SOURCE CODE ANALYSIS AND MANIPULATION, PROCEEDINGS, P142, DOI 10.1109/SCAM.2001.972675
   Dick Sites, COMP LANG DET 2
   Dong F, 2018, HOTMOBILE'18: PROCEEDINGS OF THE 19TH INTERNATIONAL WORKSHOP ON MOBILE COMPUTING SYSTEMS & APPLICATIONS, P75, DOI 10.1145/3177102.3177113
   Felt AP, 2012, P 8 S USABLE PRIVACY, P1, DOI DOI 10.1145/2335356.2335360
   FireEye Inc, 2015, OUT POCK COMP MOB TH
   Flesch R, 1948, J APPL PSYCHOL, V32, P221, DOI 10.1037/h0057532
   Gabrilovich E, 2007, 20TH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P1606
   Gibler C., 2012, P 5 INT C TRUST TRUS, V7344, P291, DOI DOI 10.1007/978-3-642-30921-2
   Girju R., 2003, P HUMAN LANGUAGE TEC, P1
   Google, 2018, DEV PRIVACY POLICY
   Gorla A, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P1025, DOI 10.1145/2568225.2568276
   Graham S., 2017, GETTING STARTED TOPI
   Grammar E., 2015, ADVERB CLAUSE CONDIT
   Huang JJ, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P1036, DOI 10.1145/2568225.2568301
   Kachites A., 2017, MACHINE LEARNING LAN
   Keerthi SS, 2001, NEURAL COMPUT, V13, P637, DOI 10.1162/089976601300014493
   Le Yu, 2016, 2016 46th Annual IEEE/IFIP International Conference on Dependable Systems and Networks (DSN). Proceedings, P538, DOI 10.1109/DSN.2016.55
   Li L., 2016, PROC ISSTA, P318
   Li L, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P403, DOI 10.1109/SANER.2016.52
   Li L, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P280, DOI 10.1109/ICSE.2015.48
   Li Z., 2015, P NETW DISTR SYST S
   Lu L, 2012, INT C WIREL COMM NET
   Manning C.D., 1999, FDN STAT NATURAL LAN
   McCallum Andrew., 2000, ICML
   Meyer C., 2015, FTC ISSUES NEW GUIDA
   Nielson F., 2010, Principles of Program Analysis
   Pal M, 2005, INT J REMOTE SENS, V26, P217, DOI 10.1080/01431160412331269698
   Pandita Rahul, 2013, USENIX SECURITY 13, P527
   Qian CX, 2015, IEEE MICRO, V35, P44, DOI 10.1109/MM.2015.25
   Qu ZY, 2014, CCS'14: PROCEEDINGS OF THE 21ST ACM CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P1354, DOI 10.1145/2660267.2660287
   Rayome A. D, 2017, GOOGLE WILL SOON DEL
   Rennie JD. M., 1973, Proceedings of the Twentieth International Conference on Machine Learning (ICML)-2003), V20, P616, DOI DOI 10.1186/1477-3155-8-16
   Schaub F., 2015, 11 S US PRIV SEC SOU, P1, DOI DOI 10.1145/567752.567774
   Stanford Parser, 2016, STANFORD TYPED DEPEN
   TechNode, 2017, CHIN GOING TAK BIGG
   TF-IDF, 2017, TF IDF SINGL PAG TUT
   Vall ~ee-Rai R., 2010, CASCON 1 DECADE HIGH, P214, DOI DOI 10.1145/1925805.1925818
   Varshney A, 2017, APP STORES FUTURE WI
   Wang HY, 2018, IEEE WORK CONF MIN S, P231, DOI 10.1145/3196398.3196412
   Wang X., 2016, 38 INT C SOFTW ENG A
   Wang XY, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P37, DOI 10.1145/3180155.3180196
   Xiao X., 2012, P ACM SIGSOFT 20 INT, P1
   Xue L, 2017, PROC INT CONF SOFTW, P358, DOI 10.1109/ICSE.2017.40
   Yamada A., 2012, EXPLORING PRIVACY PO, P1
   Yang SQ, 2015, IEEE INT CONF AUTOM, P658, DOI 10.1109/ASE.2015.76
   Zhang YQ, 2015, LECT NOTES COMPUT SC, V9327, P293, DOI 10.1007/978-3-319-24177-7_15
   Zimmeck S, 2014, P USENIX SEC
   Zimmeck Sebastian, 2017, P NDSS
   Zuo CS, 2017, PROCEEDINGS OF THE 26TH INTERNATIONAL CONFERENCE ON WORLD WIDE WEB (WWW'17), P867, DOI 10.1145/3038912.3052609
   Zuo CS, 2016, 23RD ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2016), DOI 10.14722/ndss.2016.23146
NR 80
TC 17
Z9 19
U1 4
U2 40
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD FEB 1
PY 2021
VL 47
IS 2
BP 221
EP 242
DI 10.1109/TSE.2018.2886875
PG 22
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA QG7HE
UT WOS:000617753400001
OA Bronze
DA 2024-07-18
ER

PT J
AU Jiang, YJ
   Liu, H
   Zhu, JQ
   Zhang, L
AF Jiang, Yanjie
   Liu, Hui
   Zhu, Jiaqi
   Zhang, Lu
TI Automatic and Accurate Expansion of Abbreviations in Parameters
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Dictionaries; Open source software; Syntactics; Approximation
   algorithms; Software maintenance; Indexes; Abbreviation; expansion;
   comprehension; lexical similarity; quality; information retrieval
ID RECOVERING TRACEABILITY LINKS; INFORMATION-RETRIEVAL; CODE
AB Abbreviations are widely used in identifiers. However, they have severe negative impact on program comprehension and IR-based software maintenance activities, e.g., concept location, software clustering, and recovery of traceability links. Consequently, a number of efficient approaches have been proposed successfully to expand abbreviations in identifiers. Most of such approaches rely heavily on dictionaries, and rarely exploit the specific and fine-grained context of identifiers. As a result, such approaches are less accurate in expanding abbreviations (especially short ones) that may match multiple dictionary words. To this end, in this paper we propose an automatic approach to improve the accuracy of abbreviation expansion by exploiting the specific and fine-grained context. It focuses on a special but common category of abbreviations (abbreviations in parameter names), and thus it can exploit the specific and fine-grained context, i.e., the type of the enclosing parameter as well the corresponding formal (or actual) parameter name. The recent empirical study on parameters suggest that actual parameters are often lexically similar to their corresponding formal parameters. Consequently, it is likely that an abbreviation in a formal parameter can find its full terms in the corresponding actual parameter, and vice versa. Based on this assumption, a series of heuristics are proposed to look for full terms from the corresponding actual (or formal) parameter names. To the best of our knowledge, we are the first to expand abbreviations by exploiting the lexical similarity between actual and formal parameters. We also search for full terms in the data type of the enclosing parameter. Only if all such heuristics fail, the approach turns to the traditional abbreviation dictionaries. We evaluate the proposed approach on seven well known open-source projects. Evaluation results suggest that when only parameter abbreviations are involved, the proposed approach can improve the precision from 26 to 95 percent and recall from 26 to 65 percent compared against the state-of-the-art general purpose approach. Consequently, the proposed approach could be employed as a useful supplement to existing approaches to expand parameter abbreviations.
C1 [Jiang, Yanjie; Liu, Hui; Zhu, Jiaqi] Beijinag Inst Technol, Sch Comp Sci & Technol, Beijing 100081, Peoples R China.
   [Zhang, Lu] Peking Univ, Sch Elect Engn & Comp Sci, Minist Educ, Inst Software,Key Lab High Confidence Software Te, Beijing 100871, Peoples R China.
C3 Peking University
RP Liu, H (corresponding author), Beijinag Inst Technol, Sch Comp Sci & Technol, Beijing 100081, Peoples R China.
EM jiangyanjie@bit.edu.cn; liuhui08@bit.edu.cn; zhujiaqi@bit.edu.cn;
   zhanglu@sei.pku.edu.cn
OI Liu, Hui/0000-0002-3267-6801
FU National Natural Science Foundation of China [61472034, 61772071,
   61529201, 61690205]; National Key Research and Development Program of
   China [2016YFB1000801]
FX The authors would like to say thanks to the associate editor and the
   anonymous reviewers for their insightful comments and constructive
   suggestions. The work is supported by the National Natural Science
   Foundation of China (Nos. 61472034, 61772071, 61529201, 61690205), and
   the National Key Research and Development Program of
   China(2016YFB1000801).
CR Abdi H., 2010, ENCY RES DESIGN, V169, P1
   Adar E, 2004, BIOINFORMATICS, V20, P527, DOI 10.1093/bioinformatics/btg439
   Allamanis M, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P281, DOI 10.1145/2635868.2635883
   [Anonymous], 2012, ADV SOFTWARE ENG
   Antoniol G, 2002, IEEE T SOFTWARE ENG, V28, P970, DOI 10.1109/TSE.2002.1041053
   Antoniol G, 2000, PROC IEEE INT CONF S, P40, DOI 10.1109/ICSM.2000.883003
   Apostolico A., 1985, Proceedings of the Twenty-third Annual Allerton Conference on Communication, Control, and Computing, P76
   BAEZAYATES RA, 1992, LECT NOTES COMPUT SC, V644, P185
   Binkley D, 2015, J SOFTW-EVOL PROC, V27, P255, DOI 10.1002/smr.1710
   Binkley D, 2009, INT C PROGRAM COMPRE, P158, DOI 10.1109/ICPC.2009.5090039
   Canfora G., 2006, P 10 EUR C SOFTW MAI
   Caprile B, 2000, PROC IEEE INT CONF S, P97, DOI 10.1109/ICSM.2000.883022
   Caprile C., 1999, Sixth Working Conference on Reverse Engineering (Cat. No.PR00303), P112, DOI 10.1109/WCRE.1999.806952
   Carvalho NR, 2015, J SYST SOFTWARE, V100, P117, DOI 10.1016/j.jss.2014.10.013
   Corazza A, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P233, DOI 10.1109/ICSM.2012.6405277
   De Lucia A, 2006, INT C PROGRAM COMPRE, P307, DOI 10.1109/ICPC.2006.15
   DEERWESTER S, 1990, J AM SOC INFORM SCI, V41, P391, DOI 10.1002/(SICI)1097-4571(199009)41:6<391::AID-ASI1>3.0.CO;2-9
   Deissenboeck F., 2005, Software Technology and Engineering Practice, P127
   Eaddy M, 2008, INT C PROGRAM COMPRE, P53, DOI 10.1109/ICPC.2008.39
   Enslen E, 2009, 2009 6TH IEEE INTERNATIONAL WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES, P71, DOI 10.1109/MSR.2009.5069482
   Feild H, 2006, PROCEEDINGS OF THE 10TH IASTED INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING AND APPLICATIONS, P365
   Guerrouj L., 2012, 2012 19th Working Conference on Reverse Engineering (WCRE), P103, DOI 10.1109/WCRE.2012.20
   Guerrouj L, 2013, J SOFTW-EVOL PROC, V25, P575, DOI 10.1002/smr.539
   Henninger S., 1991, P AUT SOFTW DES INT, P40
   Hill E., 2008, P 2008 INT WORKING C, P79
   Jennings NR, 2001, COMMUN ACM, V44, P35, DOI 10.1145/367211.367250
   Ke YL, 2015, IEEE INT CONF AUTOM, P295, DOI 10.1109/ASE.2015.60
   Lawrie D., 2011, 2011 IEEE 27th International Conference on Software Maintenance, P113, DOI 10.1109/ICSM.2011.6080778
   Lawrie Dawn, 2010, Proceedings 17th Working Conference on Reverse Engineering (WCRE 2010), P3, DOI 10.1109/WCRE.2010.10
   Lawrie D, 2007, SEVENTH IEEE INTERNATIONAL WORKING CONFERENCE ON SOURCE CODE ANALYSIS AND MANIPULATION, PROCEEDINGS, P213, DOI 10.1109/SCAM.2007.17
   Lawrie D, 2007, EMPIR SOFTW ENG, V12, P359, DOI 10.1007/s10664-006-9032-2
   Linstead E., 2007, P 4 INT WORKSHOP MIN, P30
   Liu H, 2016, PROC INT CONF SOFTW, P1063, DOI 10.1145/2884781.2884841
   Madani N, 2010, EUR CON SFTWR MTNCE, P68, DOI 10.1109/CSMR.2010.31
   Maletic JI, 2001, PROC INT CONF SOFTW, P103, DOI 10.1109/ICSE.2001.919085
   Marcus A, 2001, 16TH ANNUAL INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2001), PROCEEDINGS, P107, DOI 10.1109/ASE.2001.989796
   Marcus A, 2008, IEEE T SOFTWARE ENG, V34, P287, DOI 10.1109/TSE.2007.70768
   Sharif Bonita, 2010, Proceedings of the 18th IEEE International Conference on Program Comprehension (ICPC 2010), P196, DOI 10.1109/ICPC.2010.41
   Stevenson Angus, 2010, Oxford Dictionary of English
   Sureka A., 2012, Proceedings of the First International Workshop on Software Mining, P1
   Ye Y., 2002, IUI 02. 2002 International Conference on Intelligent User Interfaces, P159
NR 41
TC 12
Z9 13
U1 0
U2 10
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUL 1
PY 2020
VL 46
IS 7
BP 732
EP 747
DI 10.1109/TSE.2018.2868762
PG 16
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA ML2UM
UT WOS:000549327500003
DA 2024-07-18
ER

PT J
AU Ghandehari, LS
   Lei, Y
   Kacker, R
   Kuhn, R
   Xie, T
   Kung, D
AF Ghandehari, Laleh Sh
   Lei, Yu
   Kacker, Raghu
   Kuhn, Richard
   Xie, Tao
   Kung, David
TI A Combinatorial Testing-Based Approach to Fault Localization
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Testing; Fault diagnosis; Flexible printed circuits; Software; Task
   analysis; Debugging; Computer science; Combinatorial testing; fault
   localization; debugging
ID SYSTEM
AB Combinatorial testing has been shown to be a very effective strategy for software testing. After a failure is detected, the next task is to identify one or more faulty statements in the source code that have caused the failure. In this paper, we present a fault localization approach, called BEN, which produces a ranking of statements in terms of their likelihood of being faulty by leveraging the result of combinatorial testing. BEN consists of two major phases. In the first phase, BEN identifies a combination that is very likely to be failure-inducing. A combination is failure-inducing if it causes any test in which it appears to fail. In the second phase, BEN takes as input a failure-inducing combination identified in the first phase and produces a ranking of statements in terms of their likelihood to be faulty. We conducted an experiment in which our approach was applied to the Siemens suite and four real-world programs, flex, grep, gzip and sed, from Software Infrastructure Repository (SIR). The experimental results show that our approach can effectively and efficiently localize the faulty statements in these programs.
C1 [Ghandehari, Laleh Sh; Lei, Yu; Kung, David] Univ Texas Arlington, Dept Comp Sci & Engn, Arlington, TX 76019 USA.
   [Kacker, Raghu; Kuhn, Richard] NIST, Informat Technol Lab, Gaithersburg, MD 20899 USA.
   [Xie, Tao] North Carolina State Univ, Dept Comp Sci, Raleigh, NC 27695 USA.
C3 University of Texas System; University of Texas Arlington; National
   Institute of Standards & Technology (NIST) - USA; North Carolina State
   University
RP Ghandehari, LS (corresponding author), Univ Texas Arlington, Dept Comp Sci & Engn, Arlington, TX 76019 USA.
EM laleh.shikhgholamhosseing@mays.uta.edu; ylei@uta.edu;
   raghu.kacker@nist.gov; kuhn@nist.gov; taoxie@illinois.edu; kung@uta.edu
RI Lei, Yu/IAN-0544-2023
FU Information Technology Lab of National Institute of Standards and
   Technology (NIST) [70NANB12H175, 70NANB10H168, 70NANB15H199]
FX This work is partly supported by three grants (70NANB12H175,
   70NANB10H168, and 70NANB15H199) from Information Technology Lab of
   National Institute of Standards and Technology (NIST). Disclaimer:
   Certain software products are identified in this document. Such
   identification does not imply recommendation by the NIST, nor does it
   imply that the products identified are necessarily the best available
   for the purpose.
CR Abreu R, 2006, 12TH PACIFIC RIM INTERNATIONAL SYMPOSIUM ON DEPENDABLE COMPUTING, PROCEEDINGS, P39
   [Anonymous], 2012, International Symposium on Software Testing and Analysis, ISSTA 2012, Minneapolis, MN, USA, July 15-20, 2012, DOI DOI 10.1145/2338965.2336790
   Baah GK, 2010, IEEE T SOFTWARE ENG, V36, P528, DOI 10.1109/TSE.2009.87
   Barr ET, 2015, IEEE T SOFTWARE ENG, V41, P507, DOI 10.1109/TSE.2014.2372785
   Borazjany M. N., 2012, 2012 IEEE Fifth International Conference on Software Testing, Verification and Validation (ICST 2012), P591, DOI 10.1109/ICST.2012.146
   Cohen DM, 1997, IEEE T SOFTWARE ENG, V23, P437, DOI 10.1109/32.605761
   Cohen MB, 2003, PROC INT CONF SOFTW, P38, DOI 10.1109/ICSE.2003.1201186
   Coppit D, 2005, 29TH ANNUAL IEEE/NASA SOFTWARE ENGINEERING WORKSHOP, PROCEEDINGS, P305, DOI 10.1109/SEW.2005.33
   Do HS, 2005, EMPIR SOFTW ENG, V10, P405, DOI 10.1007/s10664-005-3861-2
   Ernst MD, 2007, SCI COMPUT PROGRAM, V69, P35, DOI 10.1016/j.scico.2007.01.015
   Ghandehari L. S. G., 2012, 2012 IEEE Fifth International Conference on Software Testing, Verification and Validation (ICST 2012), P370, DOI 10.1109/ICST.2012.117
   Ghandehari L. S. G., 2015, 2015 IEEE 8 INT C SO, P1
   Ghandehari LS, 2014, IEEE ICST WORKSHOP, P68, DOI 10.1109/ICSTW.2014.8
   Ghandehari LS, 2013, PROC INT SYMP SOFTW, P168, DOI 10.1109/ISSRE.2013.6698916
   Ghandehari LSG, 2013, IEEE ICST WORKSHOP, P362, DOI 10.1109/ICSTW.2013.47
   Henard C, 2016, PROC INT CONF SOFTW, P523, DOI 10.1145/2884781.2884791
   Hong Z, 2003, THIRD INTERNATIONAL CONFERENCE ON QUALITY SOFTWARE, PROCEEDINGS, P91, DOI 10.1109/QSIC.2003.1319090
   Jones J.A., 2005, P 20 IEEE ACM INT C, P273, DOI [10.1145/1101908.1101949, DOI 10.1145/1101908.1101949]
   Jones JA, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P467, DOI 10.1109/ICSE.2002.1007991
   Kuhn DR, 2006, 30TH ANNUAL IEEE/NASA SOFTWARE ENGINEERING WORKSHOP, PROCEEDINGS, P153
   Kuhn DR, 2004, IEEE T SOFTWARE ENG, V30, P418, DOI 10.1109/TSE.2004.24
   Le T.-D. B., 2016, P 25 INT S SOFTW TES, P177, DOI DOI 10.1145/2931037.2931049
   Le TDB, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P579, DOI 10.1145/2786805.2786880
   Lei Y, 2008, SOFTW TEST VERIF REL, V18, P125, DOI 10.1002/stvr.381
   Li J, 2012, INT CONF QUAL SOFTW, P102, DOI 10.1109/QSIC.2012.28
   Lo D., 2010, Software Maintenance (ICSM), 2010 IEEE International Confer- ence on, P1, DOI DOI 10.1109/ICSM.2010.5609542
   Ma CY, 2013, WOR CONG SOFTW ENG, P91, DOI 10.1109/WCSE.2013.19
   Nie CH, 2011, ACM T SOFTW ENG METH, V20, DOI 10.1145/2000799.2000801
   Nie CH, 2011, ACM COMPUT SURV, V43, DOI 10.1145/1883612.1883618
   Ozcelik B, 2016, IEEE T SOFTWARE ENG, V42, P26, DOI 10.1109/TSE.2015.2442577
   Panichella A, 2015, IEEE T SOFTWARE ENG, V41, P358, DOI 10.1109/TSE.2014.2364175
   Papadakis M, 2015, SOFTW TEST VERIF REL, V25, P605, DOI 10.1002/stvr.1509
   Petke J, 2015, IEEE T SOFTWARE ENG, V41, P901, DOI 10.1109/TSE.2015.2421279
   Petke Justyna, 2013, P ESEC FSE 2013, DOI [DOI 10.1145/2491411.2491436, 10.1145/2491411.2491436]
   Renieris M, 2003, 18TH IEEE INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P30, DOI 10.1109/ASE.2003.1240292
   Saha RK, 2013, IEEE INT CONF AUTOM, P345, DOI 10.1109/ASE.2013.6693093
   Schroeder PJ, 2004, 2004 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P49
   Shakya K., 2012, 2012 IEEE Fifth International Conference on Software Testing, Verification and Validation (ICST 2012), P620, DOI 10.1109/ICST.2012.149
   Shi L, 2005, LECT NOTES COMPUT SC, V3516, P1088
   Sohn J, 2017, PROCEEDINGS OF THE 26TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA'17), P273, DOI 10.1145/3092703.3092717
   Wallace D.R., 2001, PROCEEDING ACS IEEE, P301
   Wong WE, 2016, IEEE T SOFTWARE ENG, V42, P707, DOI 10.1109/TSE.2016.2521368
   Xia X, 2016, AUTOMAT SOFTW ENG, V23, P43, DOI 10.1007/s10515-014-0165-z
   Xuan JF, 2014, PROC IEEE INT CONF S, P191, DOI 10.1109/ICSME.2014.41
   Xuan JF, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P52, DOI 10.1145/2635868.2635906
   Yilmaz C, 2006, IEEE T SOFTWARE ENG, V32, P20, DOI 10.1109/TSE.2006.8
   Yoo S., P ACM T SOFTW ENG ME, V22
   Zeller A, 2002, IEEE T SOFTWARE ENG, V28, P183, DOI 10.1109/32.988498
   Zhang Z., 2011, P ACM 20 INT S SOFTW, P331
   Zhou J, 2012, PROC INT CONF SOFTW, P14, DOI 10.1109/ICSE.2012.6227210
   Ziyuan Wang, 2010, Proceedings of the Tenth International Conference on Quality Software (QSIC 2010), P495, DOI 10.1109/QSIC.2010.36
NR 51
TC 24
Z9 25
U1 0
U2 12
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUN 1
PY 2020
VL 46
IS 6
BP 616
EP 645
DI 10.1109/TSE.2018.2865935
PG 30
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA MC6BB
UT WOS:000543368800002
OA hybrid
DA 2024-07-18
ER

PT J
AU Jana, A
   Halder, R
   Kalahasti, A
   Ganni, SD
   Cortesi, A
AF Jana, Angshuman
   Halder, Raju
   Kalahasti, Abhishekh
   Ganni, Sanjivani Devi
   Cortesi, Agostino
TI Extending Abstract Interpretation to Dependency Analysis of Database
   Applications
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Dependency graphs; static analysis; relational databases; structured
   query languages
ID STATIC ANALYSIS; PROGRAM; SOFTWARE; GRAPH; SEMANTICS
AB Dependency information (data- and/or control-dependencies) among program variables and program statements is playing crucial roles in a wide range of software-engineering activities, e.g., program slicing, information flow security analysis, debugging, code-optimization, code-reuse, code-understanding. Most existing dependency analyzers focus on mainstream languages and they do not support database applications embedding queries and data-manipulation commands. The first extension to the languages for relational database management systems, proposed by Willmor et al. in 2004, suffers from the lack of precision in the analysis primarily due to its syntax-based computation and flow insensitivity. Since then no significant contribution is found in this research direction. This paper extends the Abstract Interpretation framework for static dependency analysis of database applications, providing a semantics-based computation tunable with respect to precision. More specifically, we instantiate dependency computation by using various relational and non-relational abstract domains, yielding to a detailed comparative analysis with respect to precision and efficiency. Finally, we present a prototype $\sf{ semDDA}$semDDA, a semantics-based Database Dependency Analyzer integrated with various abstract domains, and we present experimental evaluation results to establish the effectiveness of our approach. We show an improvement of the precision on an average of 6 percent in the interval, 11 percent in the octagon, 21 percent in the polyhedra and 7 percent in the powerset of intervals abstract domains, as compared to their syntax-based counterpart, for the chosen set of Java Server Page (JSP)-based open-source database-driven web applications as part of the GotoCode project.
C1 [Jana, Angshuman; Halder, Raju; Kalahasti, Abhishekh; Ganni, Sanjivani Devi] Indian Inst Technol Patna, Patna 801106, Bihar, India.
   [Cortesi, Agostino] Univ Ca Foscari Venezia, I-30123 Venice, VE, Italy.
C3 Indian Institute of Technology (IIT) - Patna; Indian Institute of
   Technology System (IIT System); Universita Ca Foscari Venezia
RP Jana, A (corresponding author), Indian Inst Technol Patna, Patna 801106, Bihar, India.
EM ajana.pcs13@iitp.ac.in; halder@iitp.ac.in; kalahasti.cs13@iitp.ac.in;
   ganni.cs13@iitp.ac.in; cortesi@unive.it
RI Cortesi, Agostino/AAQ-2996-2020; Cortesi, Agostino/F-9637-2011
OI Cortesi, Agostino/0000-0002-0946-5440; Halder, Raju/0000-0002-8873-8258
FU Science & Engineering Research Board (SERB), Department of science and
   Technology, Government of India [SB/FTP/ETA-315/2013]; CINI
   Cybersecurity National Laboratory within the project FilieraSicura,
   Italy
FX This work is partially supported by the research grant
   (SB/FTP/ETA-315/2013) from the Science & Engineering Research Board
   (SERB), Department of science and Technology, Government of India, and
   by CINI Cybersecurity National Laboratory within the project
   FilieraSicura, Italy.
CR [Anonymous], 1970, ACM SIGPLAN NOTICES, DOI DOI 10.1145/390013.808479
   [Anonymous], 2009, THESIS
   [Anonymous], [No title captured]
   [Anonymous], 2014, P 29 ANN ACM S APPL
   [Anonymous], 1992, ACM LETT PROGRAM LAN
   [Anonymous], 2013, THESIS
   [Anonymous], 2013, P 28 S APPL COMP SPE
   [Anonymous], 2016, T LARGE SCALE DATA A
   [Anonymous], 2005, INPROCEEDINGS 20 IEE
   [Anonymous], [No title captured]
   [Anonymous], [No title captured]
   [Anonymous], [No title captured]
   Bagnara Roberto., 2007, STTT, V9, P413
   Baralis Elena., 1994, VLDB, P475
   Bellman R., 1958, Q APPL MATH, V16, P87
   Binkley D, 2006, SCI COMPUT PROGRAM, V62, P228, DOI 10.1016/j.scico.2006.04.007
   Bisht P, 2010, ACM T INFORM SYST SE, V13, DOI 10.1145/1698750.1698754
   Bondhugula Uday, 2008, P ACM SIGPLAN C PROG
   Chen LQ, 2008, LECT NOTES COMPUT SC, V5356, P3
   Cheney J, 2007, LECT NOTES COMPUT SC, V4797, P138
   Cheng JD, 1997, ADVANCES IN PARALLEL AND DISTRIBUTED COMPUTING - PROCEEDINGS, P370, DOI 10.1109/APDC.1997.574057
   Chernikova NV, 1968, USSR COMP MATH MATH, V8, P282, DOI DOI 10.1016/0041-5553(68)90115-8
   Christensen AS, 2003, LECT NOTES COMPUT SC, V2694, P1
   Cormen T.H., 1990, Introduction to Algorithms
   Costantini G, 2015, SOFTWARE PRACT EXPER, V45, P245, DOI 10.1002/spe.2218
   Cousot P, 2002, THEOR COMPUT SCI, V277, P47, DOI 10.1016/S0304-3975(00)00313-3
   Cousot P., 1979, 6 ACM S PRINCIPLES P, P269, DOI DOI 10.1145/567752.567778
   Cousot P., 1977, C RECORD 4 ANN ACM S, P238, DOI DOI 10.1145/512950.512973
   Cousot Patrick, 1978, P 5 ACM SIGACT SIGPL, p84S96, DOI DOI 10.1145/512760.512770
   Dasgupta A, 2009, PROC INT CONF DATA, P1403, DOI 10.1109/ICDE.2009.98
   de Moura L, 2008, LECT NOTES COMPUT SC, V4963, P337, DOI 10.1007/978-3-540-78800-3_24
   FERRANTE J, 1987, ACM T PROGR LANG SYS, V9, P319, DOI 10.1145/24039.24041
   Frehse G., 2011, COMPUTER AIDED VERIF, P379, DOI [DOI 10.1007/978-3-642-22110-1, 10.1007/978-3-642-22110-1_30]
   Goswami D, 2000, SOFTWARE PRACT EXPER, V30, P17, DOI 10.1002/(SICI)1097-024X(200001)30:1<17::AID-SPE290>3.0.CO;2-2
   Halder R, 2012, COMPUT LANG SYST STR, V38, P123, DOI 10.1016/j.cl.2011.10.004
   Halfond William G. J., 2006, P 14 ACM SIGSOFT INT, P175, DOI [10.1145/1181775.1181797, DOI 10.1145/1181775.1181797]
   Hammer C, 2010, LECT NOTES COMPUT SC, V5965, P44, DOI 10.1007/978-3-642-11747-3_4
   Harman M, 2003, J SYST SOFTWARE, V68, P45, DOI 10.1016/S0164-1212(02)00135-8
   HORWITZ S, 1990, ACM T PROGR LANG SYS, V12, P26, DOI [10.1145/77606.77608, 10.1145/960116.53994]
   HORWITZ S, 1992, 14TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING : PROCEEDINGS, P392
   Hymans C, 2004, LECT NOTES COMPUT SC, V3148, P197
   Imbert J.-L., 1993, PRINCIPLES PRACTICE, P117
   Jana A, 2016, LECT NOTES COMPUT SC, V10063, P151, DOI 10.1007/978-3-319-49806-5_8
   Jana A, 2015, LECT NOTES COMPUT SC, V9339, P267, DOI 10.1007/978-3-319-24369-6_22
   Kelner J. A., 2006, STOC'06. Proceedings of the 38th Annual ACM Symposium on Theory of Computing, P51, DOI 10.1145/1132516.1132524
   KOREL B, 1988, INFORM PROCESS LETT, V29, P155, DOI 10.1016/0020-0190(88)90054-3
   Korel B, 1998, PROG COMPREHEN, P145, DOI 10.1109/WPC.1998.693339
   Krinke J., 2007, Proc. 3rd Int'l Workshop on Code Based Security Assessments, P6
   Lam M.S., 2005, Proceedings of the twenty-fourth ACM SIGMOD-SIGACT-SIGART symposium on Principles of database systems - PODS '05, P1
   Lanubile F, 1997, IEEE T SOFTWARE ENG, V23, P246, DOI 10.1109/32.588543
   Larsen L, 1996, PROC INT CONF SOFTW, P495, DOI 10.1109/ICSE.1996.493444
   Levy A. Y., 1993, 19th International Conference on Very Large Data Bases Proceedings, P171
   Mastroeni I, 2008, PEPM'08: PROCEEDINGS OF THE 2008 ACM SIGPLAN SYMPOSIUM ON PARTIAL EVALUATION AND SEMANTICS-BASED PROGRAM MANIPULATION, P125, DOI 10.1145/1328408.1328428
   McMinn P, 2015, ACM T SOFTW ENG METH, V25, DOI 10.1145/2818639
   Millstein T., 2000, P ODS 00 P 19 ACMSIG, P67
   Mine A., 2006, Higher-Order and Symbolic Computation, V19, P31, DOI 10.1007/s10990-006-8609-1
   Miné A, 2001, EIGHTH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P310, DOI 10.1109/WCRE.2001.957836
   Miné A, 2001, LECT NOTES COMPUT SC, V2053, P155
   Nielson F., 1999, Principles of Program Analysis
   Nordstrom B., 1990, Programming in Martin-Lof's Type Theory
   OTTENSTEIN KJ, 1984, SIGPLAN NOTICES, V19, P177, DOI 10.1145/390011.808263
   Palsberg J, 2001, ACM SIGPLAN NOTICES, P20
   PODGURSKI A, 1990, IEEE T SOFTWARE ENG, V16, P965, DOI 10.1109/32.58784
   Reps T., 1995, Conference Record of POPL'95: 22nd ACM SIGPLAN-SIGACT Symposium Principles of Programming Languages, P49, DOI 10.1145/199448.199462
   Sabelfeld A, 2003, IEEE J SEL AREA COMM, V21, P5, DOI 10.1109/JSAC.2002.806121
   Sen S, 2012, LECT NOTES COMPUT SC, V7564, P266, DOI 10.1007/978-3-642-33260-9_23
   TAYLOR RN, 1980, IEEE T SOFTWARE ENG, V6, P265, DOI 10.1109/TSE.1980.234488
   Thompson S., 1991, Type Theory and Functional Programming
   Tip F, 1994, SURVEY PROGRAM SLICI
   Wassermann G, 2007, ACM T SOFTW ENG METH, V16, DOI 10.1145/1276933.1276935
   WEISER M, 1984, IEEE T SOFTWARE ENG, V10, P352, DOI 10.1109/TSE.1984.5010248
   Willmor D, 2004, PROC IEEE INT CONF S, P448, DOI 10.1109/ICSM.2004.1357833
   Zanioli M, 2011, LECT NOTES COMPUT SC, V6543, P545, DOI 10.1007/978-3-642-18381-2_45
   Zhao JJ, 1999, INTERNATIONAL SYMPOSIUM ON SOFTWARE ENGINEERING FOR PARALLEL AND DISTRIBUTED SYSTEMS, PROCEEDINGS, P13, DOI 10.1109/PDSE.1999.779735
NR 74
TC 0
Z9 0
U1 1
U2 5
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAY 1
PY 2020
VL 46
IS 5
BP 463
EP 494
DI 10.1109/TSE.2018.2861707
PG 32
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA LS2LR
UT WOS:000536221400001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Krishna, R
   Menzies, T
AF Krishna, Rahul
   Menzies, Tim
TI Bellwethers: A Baseline Method for Transfer Learning
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Estimation; Software; Software engineering; Task analysis; Benchmark
   testing; Complexity theory; Analytical models; Transfer learning; defect
   prediction; bad smells; issue close time; effort estimation; prediction
ID ORIENTED DESIGN METRICS; PRONE SOFTWARE MODULES; EMPIRICAL VALIDATION;
   DEFECT PREDICTION; FAULT-PRONENESS; CODE SMELLS; EFFECT SIZE; SYSTEMS;
   CROSS; IDENTIFICATION
AB Software analytics builds quality prediction models for software projects. Experience shows that (a) the more projects studied, the more varied are the conclusions; and (b) project managers lose faith in the results of software analytics if those results keep changing. To reduce this conclusion instability, we propose the use of "bellwethers": given N projects from a community the bellwether is the project whose data yields the best predictions on all others. The bellwethers offer a way to mitigate conclusion instability because conclusions about a community are stable as long as this bellwether continues as the best oracle. Bellwethers are also simple to discover (just wrap a for-loop around standard data miners). When compared to other transfer learning methods (TCA+, transfer Naive Bayes, value cognitive boosting), using just the bellwether data to construct a simple transfer learner yields comparable predictions. Further, bellwethers appear in many SE tasks such as defect prediction, effort estimation, and bad smell detection. We hence recommend using bellwethers as a baseline method for transfer learning against which future work should be compared.
C1 [Krishna, Rahul; Menzies, Tim] North Carolina State Univ, Dept Comp Sci, Raleigh, NC 27695 USA.
C3 North Carolina State University
RP Krishna, R (corresponding author), North Carolina State Univ, Dept Comp Sci, Raleigh, NC 27695 USA.
EM i.m.ralk@gmail.com; tim@menzies.us
RI Menzies, Tim/X-7680-2019; Krishna, Rahul/AEX-7754-2022; Krishna,
   Rahul/HJG-7915-2022; Krishna, Rahul/AAF-1168-2022
OI Menzies, Tim/0000-0002-5040-3196; Krishna, Rahul/0000-0002-5899-6651;
   Krishna, Rahul/0000-0002-5899-6651
FU US National Science Foundation [1506586, 1302169]; Division of Computing
   and Communication Foundations; Direct For Computer & Info Scie & Enginr
   [1302169] Funding Source: National Science Foundation; Division of
   Computing and Communication Foundations; Direct For Computer & Info Scie
   & Enginr [1506586] Funding Source: National Science Foundation
FX The work is partially funded by US National Science Foundation awards
   1506586 and 1302169.
CR Aggarwal K. K., 2009, Software Process: Improvement and Practice, V14, P39, DOI 10.1002/spip.389
   Agrawal Aishwarya, 2017, CORR
   [Anonymous], EMPIR SOFTW ENG
   [Anonymous], 2005, P INT S EMP SOFTW EN
   [Anonymous], P 5 CAB NET PLEN WOR
   [Anonymous], P INT C PRED MOD SOF
   [Anonymous], 2009, DATASET SHIFT MACHIN
   [Anonymous], P 36 INT C SOFTW ENG
   [Anonymous], P ACM IEEE INT S EMP
   [Anonymous], RGMIA RES REP COLLEC
   [Anonymous], IEEE T SOFTW ENG
   [Anonymous], 2017, CHAPTER 1RELIABLY ME, DOI DOI 10.1039/9781782626749-00001
   [Anonymous], J COMPUT SCI
   [Anonymous], P INT PRED MOD SOFT
   [Anonymous], 2016, CORR
   [Anonymous], 1995, Empirical methods for artificial intelligence
   [Anonymous], 2016, SCI ED GUIDE ELECT E, DOI DOI 10.1007/S10664-016-9472-2
   Arcuri A, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1, DOI 10.1145/1985793.1985795
   Basili VR, 1996, IEEE T SOFTWARE ENG, V22, P751, DOI 10.1109/32.544352
   Bird C., 2015, The Art and Science of Analyzing Software Data
   Boehm BW., 1981, Software Engineering Economics
   Breiman L., 2001, Mach. Learn., V45, P5
   Briand L. C., 2001, Empirical Software Engineering, V6, P11, DOI 10.1023/A:1009815306478
   Briand LC, 2000, J SYST SOFTWARE, V51, P245, DOI 10.1016/S0164-1212(99)00102-8
   Campbell A., 2015, SonarQube: Open Source Quality Management
   Cartwright M, 2000, IEEE T SOFTWARE ENG, V26, P786, DOI 10.1109/32.879814
   Chawla Nitesh V, 2003, P ICML, V3, P66
   Chawla NV, 2002, J ARTIF INTELL RES, V16, P321, DOI 10.1613/jair.953
   Cheung S.-C., 2011, P 19 ACM SIGSOFT S 1, P15
   Czerwonka Jacek, 2011, Proceedings 2011 IEEE Fourth International Conference on Software Testing, Verification and Validation (ICST 2011), P357, DOI 10.1109/ICST.2011.24
   D'Ambros M, 2012, EMPIR SOFTW ENG, V17, P531, DOI 10.1007/s10664-011-9173-9
   Devanbu P, 2016, PROC INT CONF SOFTW, P108, DOI 10.1145/2884781.2884812
   Efron B., 1993, INTRO BOOTSTRAP, VVolume 914, DOI DOI 10.1007/978-1-4899-4541-9
   Ekanayake J, 2009, 2009 6TH IEEE INTERNATIONAL WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES, P51, DOI 10.1109/MSR.2009.5069480
   El Emam K, 2001, J SYST SOFTWARE, V56, P63, DOI 10.1016/S0164-1212(00)00086-8
   Elish KO, 2008, J SYST SOFTWARE, V81, P649, DOI 10.1016/j.jss.2007.07.040
   Emam KE, 2001, IEEE T SOFTWARE ENG, V27, P630, DOI 10.1109/32.935855
   English M., 2009, PROMISE '09: Proceedings of the 5th International Conference on Predictor Models in Software Engineering, P1
   Fagan M., 2002, Software Pioneers, P575
   Fioravanti F, 2001, FIFTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P121, DOI 10.1109/CSMR.2001.914976
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   Fu W, 2016, INFORM SOFTWARE TECH, V76, P135, DOI 10.1016/j.infsof.2016.04.017
   Ghotra B, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P789, DOI 10.1109/ICSE.2015.91
   Giger E., 2010, P 2 INT WORKSH REC S, P52
   Glasberg D., 2000, VALIDATING OBJECT OR
   Gondra I, 2008, J SYST SOFTWARE, V81, P186, DOI 10.1016/j.jss.2007.05.035
   Gyimóthy T, 2005, IEEE T SOFTWARE ENG, V31, P897, DOI 10.1109/TSE.2005.112
   Hall T, 2012, IEEE T SOFTWARE ENG, V38, P1276, DOI 10.1109/TSE.2011.103
   Hand DJ, 2006, STAT SCI, V21, P1, DOI 10.1214/088342306000000060
   Holschuh T, 2009, PROC INT CONF SOFTW, P172, DOI 10.1109/ICSE-COMPANION.2009.5070975
   HOLTE RC, 1993, MACH LEARN, V11, P63, DOI 10.1023/A:1022631118932
   Janes A, 2006, INFORM SCIENCES, V176, P3711, DOI 10.1016/j.ins.2005.12.002
   Jiachen Yang, 2012, 2012 Proceedings of the 6th International Workshop on Software Clones (IWSC 2012), P76, DOI 10.1109/IWSC.2012.6227872
   Jiang J, 2008, ARCHIT DESIGN, P16
   Jiang Y, 2008, EMPIR SOFTW ENG, V13, P561, DOI 10.1007/s10664-008-9079-3
   Jie Xu, 2008, Journal of Computer Sciences, V4, P571, DOI 10.3844/jcssp.2008.571.577
   Jing XY, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P496, DOI 10.1145/2786805.2786813
   Jorgensen M, 2004, IEEE T SOFTWARE ENG, V30, P209, DOI 10.1109/TSE.2004.1274041
   Jorgensen M, 2009, IEEE T SOFTWARE ENG, V35, P368, DOI 10.1109/TSE.2009.2
   Jureczko M, 2010, P 6 INT C PREDICTIVE, DOI DOI 10.1145/1868328.1868342
   Kampenes VB, 2007, INFORM SOFTWARE TECH, V49, P1073, DOI 10.1016/j.infsof.2007.02.015
   Kerievsky J., 2005, Refactoring to Patterns
   Khomh F, 2011, J SYST SOFTWARE, V84, P559, DOI 10.1016/j.jss.2010.11.921
   Khomh F, 2009, INT CONF QUAL SOFTW, P305, DOI 10.1109/QSIC.2009.47
   Khoshgoftaar T. M., 2010, 2010 Proceedings of 22nd International Conference on Tools with Artificial Intelligence (ICTAI 2010), P137, DOI 10.1109/ICTAI.2010.27
   Kim S, 2008, IEEE T SOFTWARE ENG, V34, P181, DOI 10.1109/TSE.2007.70773
   Kim S, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P481, DOI 10.1145/1985793.1985859
   Kitchenham BA, 2007, IEEE T SOFTWARE ENG, V33, P316, DOI 10.1109/TSE.2007.1101
   Kocaguneli E, 2015, EMPIR SOFTW ENG, V20, P813, DOI 10.1007/s10664-014-9300-5
   Kocaguneli E, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P882, DOI 10.1109/ICSE.2013.6606637
   Kocaguneli E, 2012, IEEE T SOFTWARE ENG, V38, P425, DOI 10.1109/TSE.2011.27
   Kocaguneli E, 2011, INT SYMP EMP SOFTWAR, P255, DOI 10.1109/ESEM.2011.34
   Kreimer J, 2005, ELECTRON NOTES THEOR, V141, P117, DOI 10.1016/j.entcs.2005.02.059
   Krishna R, 2016, IEEE INT CONF AUTOM, P122, DOI 10.1145/2970276.2970339
   Kubat M., 1997, ADDRESSING CURSE IMB, V97, P179
   Langdon WB, 2016, INFORM SOFTWARE TECH, V73, P16, DOI 10.1016/j.infsof.2016.01.003
   Lanza Michele, 2006, Objectoriented metrics in practice: using software metrics to characterize, evaluate, and improve the design of object-oriented systems
   Leech N.L., 2002, Annual Meeting of the MidSouth Educational Research Association, P1
   Lessmann S, 2008, IEEE T SOFTWARE ENG, V34, P485, DOI 10.1109/TSE.2008.35
   Lewis C, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P372, DOI 10.1109/ICSE.2013.6606583
   Li M, 2012, AUTOMAT SOFTW ENG, V19, P201, DOI 10.1007/s10515-011-0092-1
   Lowry M, 1998, 13TH IEEE INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P322, DOI 10.1109/ASE.1998.732690
   Ma Y, 2012, INFORM SOFTWARE TECH, V54, P248, DOI 10.1016/j.infsof.2011.09.007
   MacDonell Stephen G., 2007, 2007 First International Symposium on Empirical Software Engineering and Measurement, P401
   Mäntylä MV, 2004, PROC IEEE INT CONF S, P399, DOI 10.1109/ICSM.2004.1357825
   Mei-Huei Tang, 1999, Proceedings Sixth International Software Metrics Symposium (Cat. No.PR00403), P242, DOI 10.1109/METRIC.1999.809745
   Mende T., 2009, P 5 INT C PREDICTOR, P1, DOI [10.1145/1540438.1540448, DOI 10.1145/1540438.1540448]
   Menzies T., 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P343, DOI 10.1109/ASE.2011.6100072
   Menzies T, 2002, ASE 2002: 17TH IEEE INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, P183, DOI 10.1109/ASE.2002.1115012
   Menzies T, 2007, IEEE T SOFTWARE ENG, V33, P637, DOI 10.1109/TSE.2007.70721
   Menzies T, 2010, AUTOMAT SOFTW ENG, V17, P375, DOI 10.1007/s10515-010-0069-5
   Menzies T, 2013, IEEE SOFTWARE, V30, P31, DOI 10.1109/MS.2013.86
   Mittas N, 2013, IEEE T SOFTWARE ENG, V39, P537, DOI 10.1109/TSE.2012.45
   Nagappan N, 2005, PROC INT CONF SOFTW, P580, DOI 10.1145/1062455.1062558
   Nam J, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P508, DOI 10.1145/2786805.2786814
   Nam J, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P382, DOI 10.1109/ICSE.2013.6606584
   Ohlsson N, 1996, IEEE T SOFTWARE ENG, V22, P886, DOI 10.1109/32.553637
   Olague HM, 2007, IEEE T SOFTWARE ENG, V33, P402, DOI 10.1109/TSE.2007.1015.
   Ostrand TJ., 2004, Proceedings of the 2004 ACM SIGSOFT International Symposium on Software Testing and Analysis, ISSTA '04, V29, P86, DOI [DOI 10.1145/1013886.1007524, 10.1145/1013886.1007524]
   Panjer LucasD., 2007, Proceedings of the 4th International Workshop on Mining Software Repositories, MSR '07, P29
   Passos C, 2011, INT SYMP EMP SOFTWAR, P444, DOI 10.1109/ESEM.2011.63
   Pelayo L, 2007, NAFIPS 2007 - 2007 ANNUAL MEETING OF THE NORTH AMERICAN FUZZY INFORMATION PROCESSING SOCIETY, P69, DOI 10.1109/NAFIPS.2007.383813
   Peters F, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P801, DOI 10.1109/ICSE.2015.92
   Ping Yu, 2002, Proceedings of the Sixth European Conference on Software Maintenance and Reengineering, P99, DOI 10.1109/CSMR.2002.995794
   Poulding S, 2010, IEEE T SOFTWARE ENG, V36, P763, DOI 10.1109/TSE.2010.24
   Radjenovic D, 2013, INFORM SOFTWARE TECH, V55, P1397, DOI 10.1016/j.infsof.2013.02.009
   Rahman F, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P424, DOI 10.1145/2568225.2568269
   Rakitin StevenR., 2001, ART H COMP SCI LIBR, V2nd
   Ryu D, 2016, EMPIR SOFTW ENG, V21, P43, DOI 10.1007/s10664-014-9346-4
   Shatnawi R, 2008, J SYST SOFTWARE, V81, P1868, DOI 10.1016/j.jss.2007.12.794
   Shatnawi R, 2010, IEEE T SOFTWARE ENG, V36, P216, DOI 10.1109/TSE.2010.9
   Shepperd M, 2012, INFORM SOFTWARE TECH, V54, P820, DOI 10.1016/j.infsof.2011.12.008
   Shull F, 2002, EIGHTH IEEE SYMPOSIUM ON SOFTWARE METRICS, PROCEEDINGS, P249, DOI 10.1109/METRIC.2002.1011343
   Singh Y, 2010, SOFTWARE QUAL J, V18, P3, DOI 10.1007/s11219-009-9079-6
   Sjoberg DIK, 2013, IEEE T SOFTWARE ENG, V39, P1144, DOI 10.1109/TSE.2012.89
   Storkey A, 2009, NEURAL INF PROCESS S, P3
   Subramanyam R, 2003, IEEE T SOFTWARE ENG, V29, P297, DOI 10.1109/TSE.2003.1191795
   Succi G, 2003, J SYST SOFTWARE, V65, P1, DOI 10.1016/S0164-1212(02)00024-9
   Tantithamthavorn C, 2016, PROC INT CONF SOFTW, P321, DOI 10.1145/2884781.2884857
   Tempero E, 2010, ASIA PAC SOFWR ENG, P336, DOI 10.1109/APSEC.2010.46
   Theisen C, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P199, DOI 10.1109/ICSE.2015.148
   Thomas Zimmermann., 2009, P THE 7 JOINT M EURO, P91, DOI DOI 10.1145/1595696.1595713
   Thongmak M, 2003, SERP'03: PROCEEDINGS OF THE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING RESEARCH AND PRACTICE, VOLS 1 AND 2, P621
   Tosun A, 2010, AAAI CONF ARTIF INTE, P1748
   Tufano M, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P403, DOI 10.1109/ICSE.2015.59
   Turhan B, 2012, EMPIR SOFTW ENG, V17, P62, DOI 10.1007/s10664-011-9182-8
   Turhan B, 2011, EUROMICRO CONF PROC, P396, DOI 10.1109/SEAA.2011.59
   Turhan B, 2009, EMPIR SOFTW ENG, V14, P540, DOI 10.1007/s10664-008-9103-7
   Vargha A, 2000, J EDUC BEHAV STAT, V25, P101, DOI 10.3102/10769986025002101
   Vaux DL, 2012, EMBO REP, V13, P291, DOI 10.1038/embor.2012.36
   Wang S, 2013, IEEE T RELIAB, V62, P434, DOI 10.1109/TR.2013.2259203
   Wang S, 2016, PROC INT CONF SOFTW, P297, DOI 10.1145/2884781.2884804
   Whigham PA, 2015, ACM T SOFTW ENG METH, V24, DOI 10.1145/2738037
   Wolpert D. H., 1997, IEEE Transactions on Evolutionary Computation, V1, P67, DOI 10.1109/4235.585893
   Xu TY, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P307, DOI 10.1145/2786805.2786852
   Yamashita A, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P682, DOI 10.1109/ICSE.2013.6606614
   Yamashita A, 2013, WORK CONF REVERSE EN, P242, DOI 10.1109/WCRE.2013.6671299
   Yamashita A, 2013, J SYST SOFTWARE, V86, P2639, DOI 10.1016/j.jss.2013.05.007
   Yan Ma, 2007, 2007 3rd International Workshop on Predictor Models in Software Engineering, P1
   Yue Jiang, 2009, 2009 20th International Symposium on Software Reliability Engineering (ISSRE 2009), P99, DOI 10.1109/ISSRE.2009.13
   Zazworka Nico, 2011, P 2 WORKSH MAN TECHN, P17, DOI 10.1145/1985362.1985366
   Zhang F, 2016, EMPIR SOFTW ENG, V21, P2107, DOI 10.1007/s10664-015-9396-2
   Zhang HY, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P1042, DOI 10.1109/ICSE.2013.6606654
   Zhimin He, 2013, 2013 ACM / IEEE International Symposium on Empirical Software Engineering and Measurement (ESEM), P45, DOI 10.1109/ESEM.2013.20
   Zhou YM, 2006, IEEE T SOFTWARE ENG, V32, P771, DOI 10.1109/TSE.2006.102
NR 145
TC 43
Z9 44
U1 0
U2 20
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD NOV 1
PY 2019
VL 45
IS 11
BP 1081
EP 1105
DI 10.1109/TSE.2018.2821670
PG 25
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA JO3UP
UT WOS:000497506400002
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Gazzola, L
   Micucci, D
   Mariani, L
AF Gazzola, Luca
   Micucci, Daniela
   Mariani, Leonardo
TI Automatic Software Repair: A Survey
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Automatic program repair; generate and validate; search-based;
   semantics-driven repair; correct by construction; program synthesis;
   self-repairing
ID PROGRAM REPAIR; FRAMEWORK; SYSTEMS; BINARY
AB Despite their growing complexity and increasing size, modern software applications must satisfy strict release requirements that impose short bug fixing and maintenance cycles, putting significant pressure on developers who are responsible for timely producing high-quality software. To reduce developers workload, repairing and healing techniques have been extensively investigated as solutions for efficiently repairing and maintaining software in the last few years. In particular, repairing solutions have been able to automatically produce useful fixes for several classes of bugs that might be present in software programs. A range of algorithms, techniques, and heuristics have been integrated, experimented, and studied, producing a heterogeneous and articulated research framework where automatic repair techniques are proliferating. This paper organizes the knowledge in the area by surveying a body of 108 papers about automatic software repair techniques, illustrating the algorithms and the approaches, comparing them on representative examples, and discussing the open challenges and the empirical evidence reported so far.
C1 [Gazzola, Luca; Micucci, Daniela; Mariani, Leonardo] Univ Milano Bicocca, Dept Informat Syst & Commun DISCo, I-20126 Milan, Italy.
C3 University of Milano-Bicocca
RP Mariani, L (corresponding author), Univ Milano Bicocca, Dept Informat Syst & Commun DISCo, I-20126 Milan, Italy.
EM luca.gazzola@disco.unimib.it; micucci@disco.unimib.it;
   mariani@disco.unimib.it
RI MICUCCI, DANIELA/AAB-6066-2020
OI MICUCCI, DANIELA/0000-0003-1261-2234
FU EU H2020 "Learn'' project, under the ERC Consolidator Grant 2014 program
   (ERC) [646867]; "GAUSS'' national research project - MIUR under the PRIN
   2015 program [2015KWREMX]
FX The authors would like to thank Fan Long, Shan Lu, Xiaoguang Mao, and
   Abhik Roychoudhury for their comments on an early version of this paper.
   This work has been partially supported by the EU H2020 "Learn'' project,
   which has been funded under the ERC Consolidator Grant 2014 program (ERC
   Grant Agreement n. 646867) and the "GAUSS'' national research project,
   which has been funded by the MIUR under the PRIN 2015 program (Contract
   2015KWREMX).
CR Abreu R, 2007, TAIC PART 2007 - TESTING: ACADEMIC AND INDUSTRIAL CONFERENCE - PRACTICE AND RESEARCH TECHNIQUES, PROCEEDINGS, P89, DOI 10.1109/TAIC.PART.2007.13
   Abreu R, 2009, IEEE INT CONF AUTOM, P88, DOI 10.1109/ASE.2009.25
   Ackling T, 2011, GECCO-2011: PROCEEDINGS OF THE 13TH ANNUAL GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P1427
   Alkhalaf M., 2014, P 2014 INT S SOFTWAR, P225
   Alur R, 2015, NATO SCI PEAC SECUR, V40, P1, DOI 10.3233/978-1-61499-495-4-1
   [Anonymous], P NETW DISTR SYST S
   [Anonymous], P INT C OBJ OR PROGR
   [Anonymous], HAL01206501
   [Anonymous], PROC INT CONF SOFTW
   [Anonymous], 2013, TECH REP MIT CSAIL T
   [Anonymous], 2013, P 2013 INT S SOFTW T
   [Anonymous], P INT C MATH METH AR
   [Anonymous], PROC INT SYMP SEARCH
   [Anonymous], P INT C SOFTW ENG
   [Anonymous], 2016, P 25 INT S SOFTWARE, DOI [DOI 10.1145/2931037, 10.1145/2931037.]
   [Anonymous], SOFTW ART INFR REP
   [Anonymous], P INT C MULT SOFTW E
   [Anonymous], 13113414 ARXIV
   [Anonymous], TECH REP
   [Anonymous], 2007, ACM Asia Conference on Computer and Communications Security
   [Anonymous], TECH REP HAL 0114402
   [Anonymous], DAGSTUHL SEMINAR 130
   [Anonymous], PROC INT CONF SOFTW
   [Anonymous], 2007, Software testing and analysis-process, principles and techniques
   [Anonymous], IEEE T SOFTWARE ENG, DOI DOI 10.1109/TSE.2014.2372785
   [Anonymous], 2013, THESIS
   [Anonymous], 2004, IBM REDBOOKS
   [Anonymous], 2016, PROC EUR C COMPUT VI
   [Anonymous], P INT S FDN SOFTW EN
   [Anonymous], 2014, ACM SIGSOFT Software Engineering Notes, DOI [DOI 10.1145/2659118.2659125, 10.1145/2659118.2659125]
   [Anonymous], P INT WORKSH PRINC D
   Arcuri A, 2011, APPL SOFT COMPUT, V11, P3494, DOI 10.1016/j.asoc.2011.01.023
   Arcuri A, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P1003
   Arcuri A, 2008, IEEE C EVOL COMPUTAT, P162, DOI 10.1109/CEC.2008.4630793
   Arcuri Andrea., 2007, Proceedings of the twenty-second IEEE/ACM international conference on Automated software engineering, P397, DOI DOI 10.1145/1321631.1321693
   Assiri FY, 2014, 2014 IEEE SEVENTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST), P273, DOI 10.1109/ICST.2014.40
   B_ohme M., 2014, INT S SOFTWARE TESTI, P105
   Babenko A, 2009, ISSTA 2009: INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P237
   Barr ET, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P306, DOI 10.1145/2635868.2635898
   BIERMANN AW, 1985, J SYMB COMPUT, V1, P119, DOI 10.1016/S0747-7171(85)80010-9
   Britton T, 2013, Reversible Debugging Software "Quantify the Time and Cost Saved Using Reversible Debuggers
   Buccafurri F, 1999, ARTIF INTELL, V112, P57, DOI 10.1016/S0004-3702(99)00039-9
   Carbin M, 2011, LECT NOTES COMPUT SC, V6813, P609, DOI 10.1007/978-3-642-22655-7_28
   Carzaniga A, 2015, ACM T SOFTW ENG METH, V24, DOI 10.1145/2755970
   Carzaniga A, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P782, DOI 10.1109/ICSE.2013.6606624
   Chang H, 2013, ACM T SOFTW ENG METH, V22, DOI 10.1145/2522920.2522923
   Chen MY, 2002, INTERNATIONAL CONFERENCE ON DEPENDABLE SYSTEMS AND NETWORKS, PROCEEDINGS, P595, DOI 10.1109/DSN.2002.1029005
   Chiueh TC, 2001, INT CON DISTR COMP S, P409, DOI 10.1109/ICDSC.2001.918971
   Coker Z, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P792, DOI 10.1109/ICSE.2013.6606625
   Colin S, 2005, LECT NOTES COMPUT SC, V3472, P525
   Dallmeier V., 2007, P 22 IEEE ACM INT C, P433
   Dallmeier V., 2006, P 2006 INT WORKSH DY, P17, DOI DOI 10.1145/1138912.1138918
   Dallmeier V, 2009, IEEE INT CONF AUTOM, P550, DOI 10.1109/ASE.2009.15
   de la Iglesia DG, 2015, ACM T AUTON ADAP SYS, V10, DOI 10.1145/2724719
   Debroy Vidroha, 2010, Proceedings of the Third IEEE International Conference on Software Testing, Verification and Validation (ICST 2010), P65, DOI 10.1109/ICST.2010.66
   DeMarco F, 2014, P 6 INT WORKSHOP CON, P30, DOI 10.1145/2593735.2593740
   Dennis LouiseA., 2006, Seventh Symposium on Trends in Functional Programming, volume 2006, P131
   Ding R, 2012, IEEE INT CONF AUTOM, P318, DOI 10.1145/2351676.2351735
   Durieux T, 2016, 2016 IEEE/ACM 11TH INTERNATIONAL WORKSHOP IN AUTOMATION OF SOFTWARE TEST (AST), P85, DOI [10.1145/2896921.2896931, 10.1109/AST.2016.021]
   Edelstein O, 2002, IBM SYST J, V41, P111, DOI 10.1147/sj.411.0111
   Egele M., 2013, P 2013 ACM SIGSAC C, P73
   Elkarablieh Bassem., 2007, ASE 07 P 22 IEEEACM, P64
   Ernst MD, 2001, IEEE T SOFTWARE ENG, V27, P99, DOI 10.1109/32.908957
   Fahndrich Manuel, 2010, Formal Verification of Object-Oriented Software. International Conference, (FoVeOOS 2010). Revised Selected Papers, P10
   Fast E., 2010, Conference on Genetic and Evolutionary Computation, P965
   Forrest Stephanie, 2009, P 11 ANN C GEN EV CO, P947
   Fry Z.P., 2012, INT S SOFTWARE TESTI, P177, DOI 10.1145/04000800.2336775
   Gao FJ, 2016, IEEE INT CONF AUTOM, P786, DOI 10.1145/2970276.2970282
   Gao Q, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P459, DOI 10.1109/ICSE.2015.64
   Gao Q, 2015, IEEE INT CONF AUTOM, P307, DOI 10.1109/ASE.2015.81
   Ghosh D, 2007, DECIS SUPPORT SYST, V42, P2164, DOI 10.1016/j.dss.2006.06.011
   Hailpern B, 2002, IBM SYST J, V41, P4, DOI 10.1147/sj.411.0004
   Nguyen HDT, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P772, DOI 10.1109/ICSE.2013.6606623
   Jeffrey D, 2009, INT C PROGRAM COMPRE, P70, DOI 10.1109/ICPC.2009.5090029
   Jha S., 2010, P 32 ACM IEEE INT C, V1, P215, DOI DOI 10.1145/1806799.1806833
   Ji T, 2016, P INT COMP SOFTW APP, P197, DOI 10.1109/COMPSAC.2016.69
   Jin G., 2012, 10 USENIX S OP SYST, P221
   Jin GL, 2011, ACM SIGPLAN NOTICES, V46, P389, DOI 10.1145/1993316.1993544
   Jobstmann B, 2005, LECT NOTES COMPUT SC, V3576, P226
   Jones J.A., 2005, P 20 IEEE ACM INT C, P273, DOI [10.1145/1101908.1101949, DOI 10.1145/1101908.1101949]
   Just R, 2014, P 2014 INT S SOFTW T, P437, DOI DOI 10.1145/2610384.2628055
   Kaleeswaran S, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P266, DOI 10.1145/2568225.2568258
   Ke YL, 2015, IEEE INT CONF AUTOM, P295, DOI 10.1109/ASE.2015.60
   Khalilian A, 2016, IRAN CONF ELECTR ENG, P61, DOI 10.1109/IranianCEE.2016.7585390
   Khoshnood Sepideh, 2015, P 2015 INT S SOFTW E, P165
   Kim D, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P802, DOI 10.1109/ICSE.2013.6606626
   KING JC, 1976, COMMUN ACM, V19, P385, DOI 10.1145/360248.360252
   Kong XL, 2015, 2015 IEEE 26TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING (ISSRE), P194, DOI 10.1109/ISSRE.2015.7381813
   Kou R, 2016, INT WORKSH EMPIR ENG, P45, DOI 10.1109/IWESEP.2016.15
   Krka I, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P178, DOI 10.1145/2635868.2635890
   Le Goues C., 2012, IEEE Transactions on Software Engineering, V38, P54, DOI 10.1109/TSE.2011.104
   Le Goues C, 2015, IEEE T SOFTWARE ENG, V41, P1236, DOI 10.1109/TSE.2015.2454513
   Le Goues C, 2013, SOFTWARE QUAL J, V21, P421, DOI 10.1007/s11219-013-9208-0
   Le Goues C, 2012, PROCEEDINGS OF THE FOURTEENTH INTERNATIONAL CONFERENCE ON GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P959, DOI 10.1145/2330163.2330296
   Le Goues C, 2012, PROC INT CONF SOFTW, P3, DOI 10.1109/ICSE.2012.6227211
   Le V, 2014, ACM SIGPLAN NOTICES, V49, P542, DOI [10.1145/2594291.2594333, 10.1145/2666356.2594333]
   Le XBD, 2016, IEEE INT CONF AUTOM, P876, DOI 10.1145/2970276.2975934
   Le XBD, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P213, DOI 10.1109/SANER.2016.76
   Le XBD, 2015, 2015 IEEE 26TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING (ISSRE), P427, DOI 10.1109/ISSRE.2015.7381836
   Liblit B, 2005, ACM SIGPLAN NOTICES, V40, P15, DOI 10.1145/1064978.1065014
   Lin Yiyan., 2014, International Symposium on Software Testing and Analysis, ISSTA '14, San Jose, CA, USA - July 21 - 26, 2014, P237
   Liu C., 2005, P EUR SOFTW ENG C HE, V30, P286
   Liu C, 2013, 2013 IEEE SIXTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST 2013), P282, DOI 10.1109/ICST.2013.24
   Liu HP, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P715, DOI 10.1145/2950290.2950309
   Liu P, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P318, DOI 10.1145/2635868.2635881
   Liu P, 2012, PROC INT CONF SOFTW, P299, DOI 10.1109/ICSE.2012.6227184
   Logozzo F, 2012, ACM SIGPLAN NOTICES, V47, P133, DOI 10.1145/2398857.2384626
   Long F, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P166, DOI 10.1145/2786805.2786811
   Long F, 2016, ACM SIGPLAN NOTICES, V51, P298, DOI 10.1145/2914770.2837617
   Lorenzoli D, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P501, DOI 10.1145/1368088.1368157
   Ma SQ, 2016, ASIA CCS'16: PROCEEDINGS OF THE 11TH ACM ASIA CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P711, DOI 10.1145/2897845.2897896
   Malik MZ, 2009, IEEE INT CONF AUTOM, P620, DOI 10.1109/ASE.2009.92
   Mariani Leonardo, 2008, 2008 IEEE International Symposium on Software Reliability Engineering, P117, DOI 10.1109/ISSRE.2008.48
   Mariani L, 2011, IEEE T SOFTWARE ENG, V37, P486, DOI 10.1109/TSE.2010.93
   Martinez M, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE COMPANION 2014), P492, DOI 10.1145/2591062.2591114
   Martínez M, 2015, EMPIR SOFTW ENG, V20, P176, DOI 10.1007/s10664-013-9282-8
   Mechtaev S., 2016, P 38 INT C SOFTWARE, P691
   Mechtaev S, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P448, DOI 10.1109/ICSE.2015.63
   Monperrus M, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P234, DOI 10.1145/2568225.2568324
   MULLERBURG MAF, 1983, SIGPLAN NOTICES, V18, P81, DOI 10.1145/1006142.1006165
   Nethercote N, 2007, ACM SIGPLAN NOTICES, V42, P89, DOI 10.1145/1273442.1250746
   Nistor A, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P902, DOI 10.1109/ICSE.2015.100
   Offutt A. J., 1996, ACM Transactions on Software Engineering and Methodology, V5, P99, DOI 10.1145/227607.227610
   Park S, 2009, ACM SIGPLAN NOTICES, V44, P25, DOI 10.1145/1508284.1508249
   PARNAS DL, 1985, COMMUN ACM, V28, P1326, DOI 10.1145/214956.214961
   Pei Y, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P681, DOI 10.1109/ICSE.2015.222
   Pei Y, 2014, IEEE T SOFTWARE ENG, V40, P427, DOI 10.1109/TSE.2014.2312918
   Perkins JH, 2009, SOSP'09: PROCEEDINGS OF THE TWENTY-SECOND ACM SIGOPS SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES, P87
   Polozov O, 2015, ACM SIGPLAN NOTICES, V50, P107, DOI [10.1145/2814270.2814310, 10.1145/2858965.2814310]
   Psaier H, 2011, COMPUTING, V91, P43, DOI 10.1007/s00607-010-0107-y
   Qi YH, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P254, DOI 10.1145/2568225.2568254
   Qi YH, 2013, PROC IEEE INT CONF S, P180, DOI 10.1109/ICSM.2013.29
   Qi YH, 2013, P INT COMP SOFTW APP, P828, DOI 10.1109/COMPSAC.2013.139
   Qi YH, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P254, DOI 10.1109/ICSM.2012.6405280
   Qi Zichao, 2015, P 2015 INT S SOFTW T, P24, DOI DOI 10.1145/2771783.2771791
   Raman R, 2010, LECT NOTES COMPUT SC, V6418, P368, DOI 10.1007/978-3-642-16612-9_28
   Riganelli Oliviero, 2017, 2017 IEEE/ACM 12th International Symposium on Software Engineering for Adaptive and Self-Managing Systems (SEAMS). Proceedings, P182, DOI 10.1109/SEAMS.2017.9
   Rothermel G, 2001, IEEE T SOFTWARE ENG, V27, P929, DOI 10.1109/32.962562
   Samimi H, 2012, PROC INT CONF SOFTW, P277, DOI 10.1109/ICSE.2012.6227186
   Schulte E., 2010, P 25 IEEEACM INT C A, P313, DOI [DOI 10.1145/1858996.1859059, 10.1145/1858996.1859059]
   Schulte E, 2013, ACM SIGPLAN NOTICES, V48, P317, DOI 10.1145/2499368.2451151
   Sidiroglou S, 2005, IEEE SECUR PRIV, V3, P41, DOI 10.1109/MSP.2005.144
   Sidiroglou S, 2009, ACM SIGPLAN NOTICES, V44, P37, DOI 10.1145/1508284.1508250
   Sidiroglou-Douskos S, 2015, ACM SIGPLAN NOTICES, V50, P473, DOI [10.1145/10.1145/2694344.2694389, 10.1145/2775054.2694389]
   Sidiroglou-Douskos S, 2015, ACM SIGPLAN NOTICES, V50, P43, DOI [10.1145/2813885.2737988, 10.1145/2737924.2737988]
   Smirnov Alexey, 2007, 2007 3rd International Symposium on Information Assurance and Security, P165
   Smith EK, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P532, DOI 10.1145/2786805.2786825
   Staber S, 2005, LECT NOTES COMPUT SC, V3725, P35
   Stumptner M., 1996, Industrial and Engineering Applications of Artificial Intelligence and Expert Systems. IEA/AIE 96. Proceedings of the Ninth International Conference, P155
   Sumi S, 2015, PROC IEEE INT CONF S, P511, DOI 10.1109/ICSM.2015.7332504
   Surendran R, 2014, ACM SIGPLAN NOTICES, V49, P15, DOI [10.1145/2666356.2594335, 10.1145/2594291.2594335]
   Tan SH, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P727, DOI 10.1145/2950290.2950295
   Tan SH, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P471, DOI 10.1109/ICSE.2015.65
   Tao YD, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P64, DOI 10.1145/2635868.2635873
   Weimer W, 2013, IEEE INT CONF AUTOM, P356, DOI 10.1109/ASE.2013.6693094
   Weimer W, 2010, COMMUN ACM, V53, P109, DOI 10.1145/1735223.1735249
   Weimer W, 2009, PROC INT CONF SOFTW, P364, DOI 10.1109/ICSE.2009.5070536
   Weimer Westley, 2006, Proceedings of the 5th International Conference on Generative Programming and Component Engineering (GPCE'06), P181, DOI DOI 10.1145/1173706.1173734
   Wilkerson J.L., 2011, P GECCO 2011 GENETIC, P243, DOI DOI 10.1145/2001858.2001995
   Wilkerson J.L., 2010, P GECCO 2010 GENETIC, P1391
   Wilkerson JL, 2012, PROCEEDINGS OF THE FOURTEENTH INTERNATIONAL CONFERENCE ON GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P1229, DOI 10.1145/2330163.2330333
   Wong WE, 2010, J SYST SOFTWARE, V83, P188, DOI 10.1016/j.jss.2009.09.037
   Xuan JF, 2017, IEEE T SOFTWARE ENG, V43, P34, DOI 10.1109/TSE.2016.2560811
   Yokoyama H., 2016, SAC 16, P1364
   Yu F, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P251, DOI 10.1145/1985793.1985828
   Yu Pei, 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P392, DOI 10.1109/ASE.2011.6100080
   Yuhua Qi, 2013, 2013 Fifth International Conference on Computational and Information Sciences (ICCIS 2013), P1875, DOI 10.1109/ICCIS.2013.490
   Yuhua Qi, 2013, 2013 IEEE 4th International Conference on Software Engineering and Service Science (ICSESS), P235, DOI 10.1109/ICSESS.2013.6615295
   Zeller A, 2009, WHY PROGRAMS FAIL: A GUIDE TO SYSTEMATIC DEBUGGING, 2ND EDITION
   Zeller A., 2002, Software Engineering Notes, V27, P1, DOI 10.1145/605466.605468
   Zeller A, 2002, IEEE T SOFTWARE ENG, V28, P183, DOI 10.1109/32.988498
   Zeller A, 1999, LECT NOTES COMPUT SC, V1687, P253, DOI 10.1145/318774.318946
   Zhang YC, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P214, DOI 10.1145/2786805.2786858
   Zuddas D., 2014, Proceedings of the 29th ACM/IEEE International Conference on Automated Software Engineering, P815, DOI [DOI 10.1145/2642937.2643014, 10.1145/2642937.2643014]
NR 174
TC 198
Z9 215
U1 2
U2 29
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JAN
PY 2019
VL 45
IS 1
BP 34
EP 67
DI 10.1109/TSE.2017.2755013
PG 34
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA HH4ZO
UT WOS:000455735600003
OA Green Published, Green Submitted, Bronze
DA 2024-07-18
ER

PT J
AU Platenius, MC
   Shaker, A
   Becker, M
   Hüllermeier, E
   Schäfer, W
AF Platenius, Marie C.
   Shaker, Ammar
   Becker, Matthias
   Huellermeier, Eyke
   Schaefer, Wilhelm
TI Imprecise Matching of Requirements Specifications for Software Services
   Using Fuzzy Logic
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Service selection; service matching; requirements specifications;
   non-functional properties; fuzzy logic; uncertainty; decision making
ID SEMANTIC WEB SERVICES; OF-THE-ART; DISCOVERY; SELECTION; MATCHMAKING;
   UNCERTAINTY; ALGORITHM; AMBIGUITY; QUALITY; MODEL
AB Today, software components are provided by global markets in the form of services. In order to optimally satisfy service requesters and service providers, adequate techniques for automatic service matching are needed. However, a requester's requirements may be vague and the information available about a provided service may be incomplete. As a consequence, fuzziness is induced into the matching procedure. The contribution of this paper is the development of a systematic matching procedure that leverages concepts and techniques from fuzzy logic and possibility theory based on our formal distinction between different sources and types of fuzziness in the context of service matching. In contrast to existing methods, our approach is able to deal with imprecision and incompleteness in service specifications and to inform users about the extent of induced fuzziness in order to improve the user's decision-making. We demonstrate our approach on the example of specifications for service reputation based on ratings given by previous users. Our evaluation based on real service ratings shows the utility and applicability of our approach.
C1 [Platenius, Marie C.; Schaefer, Wilhelm] Paderborn Univ, Software Engn Grp, Heinz Nixdorf Inst, Paderborn, Germany.
   [Shaker, Ammar; Huellermeier, Eyke] Paderborn Univ, Intelligent Syst Grp, Dept Comp Sci, Paderborn, Germany.
   [Becker, Matthias] Fraunhofer IEM, Software Engn Grp, Paderborn, Germany.
C3 University of Paderborn; University of Paderborn
RP Platenius, MC (corresponding author), Paderborn Univ, Software Engn Grp, Heinz Nixdorf Inst, Paderborn, Germany.
EM m.platenius@upb.de; ammar.shaker@upb.de;
   matthias.beaker@iem.fraunhofer.de; eyke@upb.de; wilhelm@upb.de
RI Shaker, Ammar/AAB-2118-2022
FU German Research Foundation (DFG) within Collaborative Research Center
   "On-The-Fly Computing" [SFB 901]
FX This work was supported by the German Research Foundation (DFG) within
   the Collaborative Research Center "On-The-Fly Computing" (SFB 901). We
   also would like to thank our student assistants Ludovic Larger, Paul
   Bording, and Melanie Bruns for contributing to the implementation and
   evaluation of our approach. Last but not least, special thanks go to
   TrustRadius for allowing us to use their software rating data for the
   evaluation of our approach.
CR Almulla M., 2011, Proceedings of the 2011 IEEE International Conference on Web Services (ICWS 2011), P203, DOI 10.1109/ICWS.2011.43
   [Anonymous], P 4 INT WORKSH SERV
   [Anonymous], IMPRECISE MATCHING R
   [Anonymous], P ACM S APPL COMP
   [Anonymous], COLL RES CTR FLY COM
   [Anonymous], P 29 ACM IEEE INT C
   [Anonymous], TRUSTRADIUS SOFTW RE
   [Anonymous], P SEM WEB SERV CHAL
   [Anonymous], TR0921 U DI PIS
   [Anonymous], 2015, P 6 ACMSPEC INT C PE
   [Anonymous], ACTA POLYTECHNICA HU
   [Anonymous], TRRI15347 U PAD HEIN
   [Anonymous], P 16 INT ACM SIGS SY
   [Anonymous], 2007, P 21 INT PAR DISTR P, DOI DOI 10.1109/IPDPS.2007.370524
   [Anonymous], WEBS SES SERV SPEC A
   [Anonymous], P 9 JOINT M FOUND SO
   [Anonymous], P INT WORKSH CONT EN
   [Anonymous], P 3 ROM HUNG JOINT S
   [Anonymous], WEBS OF MATCHB
   Bai L, 2008, P IEEE I C SERV COMP, P529, DOI 10.1109/SCC.2008.147
   Bai L, 2011, COMPUT MATH APPL, V61, P2281, DOI 10.1016/j.camwa.2010.09.049
   Baresi L., 2010, Proceedings of the 2010 IEEE 18th International Conference on Requirements Engineering (RE2010), P125, DOI 10.1109/RE.2010.25
   Becker Matthias., 2013, Proceedings of the 9th international ACM Sigsoft conference on Quality of software architectures. QoSA 2013, P43
   Becker S, 2009, J SYST SOFTWARE, V82, P3, DOI 10.1016/j.jss.2008.03.066
   Brereton P, 2007, J SYST SOFTWARE, V80, P571, DOI 10.1016/j.jss.2006.07.009
   Chao KM, 2005, AINA 2005: 19th International Conference on Advanced Information Networking and Applications, Vol 2, P721
   Constantinescu I, 2005, 2005 IEEE INTERNATIONAL CONFERENCE ON WEB SERVICES, VOLS 1 AND 2, PROCEEDINGS, P5
   Cooper K, 2005, LECT NOTES COMPUT SC, V3489, P155
   da Silva I, 2013, LECT NOTES COMPUT SC, V8274, P474, DOI 10.1007/978-3-642-45005-1_36
   De Cock M, 2007, PROCEEDINGS OF THE IEEE/WIC/ACM INTERNATIONAL CONFERENCE ON WEB INTELLIGENCE, P535, DOI 10.1109/WI.2007.54
   Dong H, 2013, CONCURR COMP-PRACT E, V25, P961, DOI 10.1002/cpe.2886
   Dubois D., 2004, Reliable Computing, V10, P273, DOI 10.1023/B:REOM.0000032115.22510.b5
   Dubois D, 1997, FUZZY SET SYST, V90, P141, DOI 10.1016/S0165-0114(97)00080-8
   Efron B., 1993, INTRO BOOTSTRAP, VVolume 914, DOI DOI 10.1007/978-1-4899-4541-9
   ELLSBERG D, 1961, Q J ECON, V75, P643, DOI 10.2307/1884324
   Ellsberg Daniel., 2015, Risk, Ambiguity and Decision
   Esfahani Naeem, 2013, Uncertainty in SelfAdaptive Software Systems, P214, DOI [DOI 10.1007/978-3-642-35813-59, DOI 10.1007/978-3-642-35813-5_9]
   Esfahani Naeem, 2011, SIGSOFT FSE 11 19 AC, P234, DOI DOI 10.1145/2025113.2025147
   Fenza G, 2008, INT J APPROX REASON, V48, P808, DOI 10.1016/j.ijar.2008.01.005
   FOX CR, 1995, Q J ECON, V110, P585, DOI 10.2307/2946693
   Garlan David, 2010, P FSE SDP WORKSH FUT, P125, DOI [10.1145/1882362.1882389, DOI 10.1145/1882362.1882389]
   Huang CL, 2006, INFORM SOFTWARE TECH, V48, P410, DOI 10.1016/j.infsof.2005.12.011
   Huang CL, 2005, SOSE 2005: IEEE INTERNATIONAL WORKSHOP ON SERVICE-ORIENTED SYSTEM ENGINEERING, P37, DOI 10.1109/SOSE.2005.32
   Huang CL, 2005, FIFTH INTERNATIONAL CONFERENCE ON COMPUTER AND INFORMATION TECHNOLOGY - PROCEEDINGS, P1116, DOI 10.1109/CIT.2005.21
   Jeong B, 2009, EXPERT SYST APPL, V36, P5411, DOI 10.1016/j.eswa.2008.06.087
   Kitchenham B., 2007, Joint Report
   Kitchenham BA, 2004, PROC INT CONF SOFTW, P273
   Klement E., 2002, TRIANGULAR NORMS
   Klusch Matthias, 2008, 2008 Second IEEE International Conference on Semantic Computing (ICSC), P323, DOI 10.1109/ICSC.2008.20
   Klusch M., 2006, Proceedings of the fifth international joint conference on Autonomous agents and multiagent systems, P915
   Klusch M, 2012, J WEB SEMANT, V15, P1, DOI 10.1016/j.websem.2012.07.003
   Klusch M, 2010, LECT NOTES COMPUT SC, V6089, P30, DOI 10.1007/978-3-642-13489-0_3
   Klusch M, 2009, J WEB SEMANT, V7, P121, DOI 10.1016/j.websem.2008.10.001
   Küster U, 2007, INT J ELECTRON COMM, V12, P41, DOI 10.2753/JEC1086-4415120202
   Küster U, 2007, PROCEEDING OF THE 2007 IEEE/WIC/ACM INTERNATIONAL CONFERENCE ON WEB INTELLIGENCE AND INTELLIGENT AGENT TECHNOLOGY, WORKSHOPS, P152
   Kuster U., 2007, P 16 INT C WORLD WID, P1033
   Liang QA, 2008, P IEEE I C SERV COMP, P202, DOI 10.1109/SCC.2008.133
   Lin WL, 2008, J COMPUT SYST SCI, V74, P211, DOI 10.1016/j.jcss.2007.04.009
   Lin WL, 2006, 20TH INTERNATIONAL CONFERENCE ON ADVANCED INFORMATION NETWORKING AND APPLICATIONS, VOL 1, PROCEEDINGS, P791
   Lipshitz R, 1997, ORGAN BEHAV HUM DEC, V69, P149, DOI 10.1006/obhd.1997.2679
   Liu M, 2012, COMPUT IND, V63, P193, DOI 10.1016/j.compind.2011.10.001
   Liu M, 2009, EXPERT SYST APPL, V36, P12480, DOI 10.1016/j.eswa.2009.04.034
   Motahari Nezhad H.R., 2010, Protocol-aware matching of web service interfaces for adapter development, P731
   Pap E., 2009, AGGREGATIONS FUNCTIO
   Papazoglou MP, 2008, INT J COOP INF SYST, V17, P223, DOI 10.1142/S0218843008001816
   Papazoglou MP, 2007, COMPUTER, V40, P38, DOI 10.1109/MC.2007.400
   Patiniotakis Ioannis, 2013, Service-Oriented and Cloud Computing. Second European Conference (ESOCC 2013). Proceedings: LNCS 8135, P34, DOI 10.1007/978-3-642-40651-5_4
   Peng ZC, 2008, 2008 3RD INTERNATIONAL CONFERENCE ON INTELLIGENT SYSTEM AND KNOWLEDGE ENGINEERING, VOLS 1 AND 2, P440, DOI 10.1109/ISKE.2008.4730970
   Perez-Palacin Diego, 2014, 5 ACMSPEC INT C PERF, V14, P3
   Platenius MC, 2015, 2015 18TH INTERNATIONAL ACM SIGSOFT SYMPOSIUM ON COMPONENT-BASED SOFTWARE ENGINEERING (CBSE), P75, DOI 10.1145/2737166.2737174
   Rao DV, 2003, PATTERN RECOGN LETT, V24, P875, DOI 10.1016/S0167-8655(02)00199-X
   Sangers J, 2013, EXPERT SYST APPL, V40, P4660, DOI 10.1016/j.eswa.2013.02.011
   Senge R, 2011, IEEE T FUZZY SYST, V19, P241, DOI 10.1109/TFUZZ.2010.2093532
   SHAPIRO C, 1983, Q J ECON, V98, P659, DOI 10.2307/1881782
   Sycara K, 2002, AUTON AGENT MULTI-AG, V5, P173, DOI 10.1023/A:1014897210525
   Thakker D, 2007, ECOWS 07: PROCEEDING OF THE 5TH IEEE EUROPEAN CONFERENCE ON WEB SERVICES, P67, DOI 10.1109/ECOWS.2007.11
   Toch E, 2008, ACM T INTERNET TECHN, V8, DOI 10.1145/1294148.1294150
   Toninelli A, 2008, COMPUT COMMUN, V31, P935, DOI 10.1016/j.comcom.2007.12.026
   Torres R., 2011, 2011 Proceedings of IEEE International Conference on Services Computing (SCC 2011), P64, DOI 10.1109/SCC.2011.87
   Torres R, 2013, INT WORK REAL ARTIF, P28, DOI 10.1109/RAISE.2013.6615201
   Walker W.E., 2003, INTEGRATED ASSESSMEN, V4, P5, DOI DOI 10.1076/IAIJ.4.1.5.16466
   Wang HC, 2007, EXPERT SYST APPL, V32, P571, DOI 10.1016/j.eswa.2006.01.034
   Wang P, 2006, 2006 40TH ANNUAL CONFERENCE ON INFORMATION SCIENCES AND SYSTEMS, VOLS 1-4, P585
   Wang P, 2009, EXPERT SYST APPL, V36, P4460, DOI 10.1016/j.eswa.2008.05.007
   Whittle J, 2009, PROCEEDINGS OF THE 2009 17TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, P79, DOI 10.1109/RE.2009.36
   Xiao LQ, 2012, PROCEEDINGS OF THE 9TH CHINA NATIONAL CONVENTION ON SPORTS SCIENCE, VOL III: SPORTS SOCIOLOGY, P32, DOI 10.1109/SE.2012.5
   Xiong PC, 2007, FOURTH INTERNATIONAL CONFERENCE ON FUZZY SYSTEMS AND KNOWLEDGE DISCOVERY, VOL 3, PROCEEDINGS, P632, DOI 10.1109/FSKD.2007.462
   Yang YHE, 2013, IEEE INT CONF HIGH, P156, DOI 10.1109/HPSR.2013.6602306
   Yin L, 2001, P A REL MAI, P229, DOI 10.1109/RAMS.2001.902472
   Zadeh L. A., 1978, Fuzzy Sets and Systems, V1, P3, DOI 10.1016/0165-0114(78)90029-5
   ZADEH LA, 1965, INFORM CONTROL, V8, P338, DOI 10.1016/S0019-9958(65)90241-X
   Zadeh LA, 2008, INFORM SCIENCES, V178, P2751, DOI 10.1016/j.ins.2008.02.012
   Zilci BI, 2015, 2015 IEEE 24TH INTERNATIONAL CONFERENCE ON ENABLING TECHNOLOGIES - INFRASTRUCTURE FOR COLLABORATIVE ENTERPRISES, P63, DOI 10.1109/WETICE.2015.44
NR 93
TC 5
Z9 6
U1 0
U2 9
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD AUG 1
PY 2017
VL 43
IS 8
BP 739
EP 759
DI 10.1109/TSE.2016.2632115
PG 21
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science; Engineering
GA FD7FW
UT WOS:000407693000003
DA 2024-07-18
ER

PT J
AU Henderson, A
   Yan, LK
   Hu, XC
   Prakash, A
   Yin, H
   McCamant, S
AF Henderson, Andrew
   Yan, Lok Kwong
   Hu, Xunchao
   Prakash, Aravind
   Yin, Heng
   McCamant, Stephen
TI DECAF: A Platform-Neutral Whole-System Dynamic Binary Analysis Platform
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Dynamic binary analysis; dynamic taint analysis; virtual machine
   introspection
AB Dynamic binary analysis is a prevalent and indispensable technique in program analysis. While several dynamic binary analysis tools and frameworks have been proposed, all suffer from one or more of: prohibitive performance degradation, a semantic gap between the analysis code and the program being analyzed, architecture/OS specificity, being user-mode only, and lacking APIs. We present DECAF, a virtual machine based, multi-target, whole-system dynamic binary analysis framework built on top of QEMU. DECAF provides Just-In-Time Virtual Machine Introspection and a plugin architecture with a simple-to-use event-driven programming interface. DECAF implements a new instruction-level taint tracking engine at bit granularity, which exercises fine control over the QEMU Tiny Code Generator (TCG) intermediate representation to accomplish on-the-fly optimizations while ensuring that the taint propagation is sound and highly precise. We perform a formal analysis of DECAF's taint propagation rules to verify that most instructions introduce neither false positives nor false negatives. We also present three platform-neutral plugins-Instruction Tracer, Keylogger Detector, and API Tracer, to demonstrate the ease of use and effectiveness of DECAF in writing cross-platform and system-wide analysis tools. Implementation of DECAF consists of 9,550 lines of C++ code and 10,270 lines of C code and we evaluate DECAF using CPU2006 SPEC benchmarks and show average overhead of 605 percent for system wide tainting and 12 percent for VMI.
C1 [Henderson, Andrew; Hu, Xunchao; Prakash, Aravind; Yin, Heng] Syracuse Univ, Dept Elect Engn & Comp Sci, Syracuse, NY 13244 USA.
   [Yan, Lok Kwong] Rome Lab, Dept RIG, Rome, NY 13441 USA.
   [McCamant, Stephen] Univ Minnesota Twin Cities, Dept Comp Sci & Engn, Minneapolis, MN 55455 USA.
C3 Syracuse University; University of Minnesota System; University of
   Minnesota Twin Cities
RP Henderson, A (corresponding author), Syracuse Univ, Dept Elect Engn & Comp Sci, Syracuse, NY 13244 USA.
EM anhender@syr.edu; lok.yan@us.af.mil; xhu31@syr.edu; arprakas@syr.edu;
   heyin@syr.edu; mccamant@cs.umn.edu
OI Yin, Heng/0000-0002-8942-7742; Hu, Xunchao/0009-0000-5156-5253
FU US National Science Foundation [1018217, 1054605]; McAfee Inc.; Direct
   For Computer & Info Scie & Enginr; Division of Computing and
   Communication Foundations [1018217] Funding Source: National Science
   Foundation; Division Of Computer and Network Systems; Direct For
   Computer & Info Scie & Enginr [1054605] Funding Source: National Science
   Foundation
FX We would like to thank the anonymous reviewers for their comments. This
   research was supported in part by US National Science Foundation Grant
   #1018217, US National Science Foundation Grant #1054605, and McAfee Inc.
   Any opinions, findings, and conclusions made in this material are those
   of the authors and do not necessarily reflect the views of the funding
   agencies.
CR Alwabel Abdulla., 2014, 7 WORKSHOP CYBER SEC
   [Anonymous], P NETW DISTR SYST SE
   [Anonymous], 2012, VALGRIND PROJECT SUG
   [Anonymous], 2014, DECAF BINARY ANAL PL
   [Anonymous], 2013, TEMU BITBLAZE DYNAMI
   [Anonymous], 2008, PROC INT ELECT DEVIC, DOI DOI 10.1109/IEDM.2008.4796619
   Barrett C, 2010, 8 INT WORKSH SAT MOD
   Bellard F, 2005, USENIX Association Proceedings of the FREENIX/Open Source Track, P41
   Bosman E., 2011, RECENT ADV INTRUSTIO
   Brumley David, 2011, Computer Aided Verification. Proceedings 23rd International Conference, CAV 2011, P463, DOI 10.1007/978-3-642-22110-1_37
   Carmony C., 2016, P NETW DISTR SYST SE, P1
   Chipounov V, 2011, ACM SIGPLAN NOTICES, V46, P265, DOI [10.1145/1961296.1950396, 10.1145/1961295.1950396]
   CHOW J., 2004, SSYM 04, P22
   Clause J., 2007, P 2007 INT S SOFTW T, DOI [10.1145/1273463.1273490, DOI 10.1145/1273463.1273490]
   Crandall JR, 2004, INT SYMP MICROARCH, P221
   de Moura L, 2008, LECT NOTES COMPUT SC, V4963, P337, DOI 10.1007/978-3-540-78800-3_24
   Dinaburg A, 2008, CCS'08: PROCEEDINGS OF THE 15TH ACM CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P51
   Dolan-Gavitt B, 2011, P IEEE S SECUR PRIV, P297, DOI 10.1109/SP.2011.11
   Elgaard J, 1998, LECT NOTES COMPUT SC, V1427, P516, DOI 10.1007/BFb0028773
   Feng Q., 2014, Proceedings of the 30th Annual Computer Security Applications Conference on - ACSAC '14, P196, DOI DOI 10.1145/2664243.2664248
   FERRANTE J, 1987, ACM T PROGR LANG SYS, V9, P319, DOI 10.1145/24039.24041
   Fu YC, 2012, P IEEE S SECUR PRIV, P586, DOI 10.1109/SP.2012.40
   Ganesh V, 2007, LECT NOTES COMPUT SC, V4590, P519
   Godefroid P, 2012, ACM SIGPLAN NOTICES, V47, P441, DOI [10.1145/2345156.2254116, 10.1145/2345156.1993529]
   Goguen J. A., 1982, Proceedings of the 1982 Symposium on Security and Privacy, P11
   Golovanov S., 2010, Analysis of TDSS rootkit technologies
   Jee K., 2012, P NETW DISTR SYST SE, P1
   Jiang XX, 2007, CCS'07: PROCEEDINGS OF THE 14TH ACM CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P128
   Kang MG, 2007, WORM'07: PROCEEDINGS OF THE 2007 ACM WORKSHOP ON RECURRING MALCODE, P46
   Kemerlis VP, 2012, ACM SIGPLAN NOTICES, V47, P121, DOI 10.1145/2365864.2151042
   Luk CK, 2005, ACM SIGPLAN NOTICES, V40, P190, DOI 10.1145/1064978.1065034
   Martignoni L, 2012, ASPLOS XVII: SEVENTEENTH INTERNATIONAL CONFERENCE ON ARCHITECTURAL SUPPORT FOR PROGRAMMING LANGUAGES AND OPERATING SYSTEMS, P337
   Nethercote N, 2007, PLDI'07: PROCEEDINGS OF THE 2007 ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P89, DOI 10.1145/1250734.1250746
   Newsom J., 2005, PRACTICAL APPROACHES, P1
   Portokalidis Georgios., 2006, Proceedings of the 1st ACM SIGOPS/EuroSys European Conference on Computer Systems, P15
   Qin F, 2006, INT SYMP MICROARCH, P135
   Seward J., 2005, P ANN C USENIX ANN T, P2
   Song D, 2008, LECT NOTES COMPUT SC, V5352, P1, DOI 10.1007/978-3-540-89862-7_1
   Wei J., 2015, Proceedings of the 31st Annual Computer Security Applications Conference on - ACSAC 2015, P221, DOI [10.1145/2818000.2818022, DOI 10.1145/2818000.2818022]
   Yan L.K., 2012, SECURITY 12, P29
   Yan Lok Kwong, 2014, SYREECS201404 SYR U
   Yin H., 2010, Tech. Rep. UCB/EECS-2010-3
   Yin H, 2007, CCS'07: PROCEEDINGS OF THE 14TH ACM CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P116
NR 43
TC 24
Z9 34
U1 1
U2 11
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD FEB 1
PY 2017
VL 43
IS 2
BP 164
EP 184
DI 10.1109/TSE.2016.2589242
PG 21
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA EN0XX
UT WOS:000395735900004
OA hybrid, Green Published
DA 2024-07-18
ER

PT J
AU de la Vara, JL
   Borg, M
   Wnuk, K
   Moonen, L
AF Luis de la Vara, Jose
   Borg, Markus
   Wnuk, Krzysztof
   Moonen, Leon
TI An Industrial Survey of Safety Evidence Change Impact Analysis Practice
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Safety-critical system; safety evidence; change impact analysis; state
   of the practice; survey research
ID SOFTWARE; REQUIREMENTS; MODEL
AB Context. In many application domains, critical systems must comply with safety standards. This involves gathering safety evidence in the form of artefacts such as safety analyses, system specifications, and testing results. These artefacts can evolve during a system's lifecycle, creating a need for change impact analysis to guarantee that system safety and compliance are not jeopardised. Objective. We aim to provide new insights into how safety evidence change impact analysis is addressed in practice. The knowledge about this activity is limited despite the extensive research that has been conducted on change impact analysis and on safety evidence management. Method. We conducted an industrial survey on the circumstances under which safety evidence change impact analysis is addressed, the tool support used, and the challenges faced. Results. We obtained 97 valid responses representing 16 application domains, 28 countries, and 47 safety standards. The respondents had most often performed safety evidence change impact analysis during system development, from system specifications, and fully manually. No commercial change impact analysis tool was reported as used for all artefact types and insufficient tool support was the most frequent challenge. Conclusion. The results suggest that the different artefact types used as safety evidence co-evolve. In addition, the evolution of safety cases should probably be better managed, the level of automation in safety evidence change impact analysis is low, and the state of the practice can benefit from over 20 improvement areas.
C1 [Luis de la Vara, Jose] Univ Carlos III Madrid, Dept Comp Sci, Avda Univ 30, Madrid 28911, Spain.
   [Borg, Markus] SICS Swedish ICT AB, Software & Syst Lab, Ideon Sci Pk,Bldg Beta 2,Scheelevagen 17, SE-22370 Lund, Sweden.
   [Wnuk, Krzysztof] Blekinge Inst Technol, Software Engn Res Lab, SE-37179 Karlskrona, Sweden.
   [Moonen, Leon] Certus Ctr Software V&V, Simula Res Lab, POB 134 1325, Lysaker, Norway.
C3 Universidad Carlos III de Madrid; RISE Research Institutes of Sweden;
   Blekinge Institute Technology
RP de la Vara, JL (corresponding author), Univ Carlos III Madrid, Dept Comp Sci, Avda Univ 30, Madrid 28911, Spain.
EM jvara@inf.uc3m.es; markus.borg@sics.se; krzysztof.wnuk@bth.se;
   leon.moonen@computer.org
RI de la Vara, Jose Luis/A-7678-2018; Moonen, Leon/M-8790-2015; Borg,
   Markus/F-3609-2010
OI de la Vara, Jose Luis/0000-0003-1813-398X; Moonen,
   Leon/0000-0002-1761-6771; Borg, Markus/0000-0001-7879-4371
FU FP7 programme [289011]; Research Council of Norway under project
   Certus-SFI; Research Council of Norway under project EvolveIT;
   Industrial Excellence Center EASE - Embedded Applications Software
   Engineering
FX The research leading to this paper has received funding from the FP7
   programme under the grant agreement no 289011 (OPENCOSS), from the
   Research Council of Norway under the projects Certus-SFI and EvolveIT,
   and from the Industrial Excellence Center EASE - Embedded Applications
   Software Engineering. The authors would like to thank the people that
   participated in the pilot studies, the respondents of the survey, and
   the reviewers of the paper, especially David Callele for his suggestions
   towards improving the readability of the survey instrument and of the
   paper.
CR [Anonymous], P 4 IET INT C SYST S
   [Anonymous], P 26 INT SYST SAF C
   [Anonymous], P SYST AUT ENG WORLD
   [Anonymous], 2011, TECH REP
   [Anonymous], P 2 WORKSH INV REP I
   [Anonymous], 2008, FORMAL ASPECTS SAFET
   [Anonymous], 50129 CENELEC EN
   [Anonymous], SOFTWARE SYSTEM SAFE
   [Anonymous], 2011, ISO 262622011
   [Anonymous], 2014, Doing Research in the Real World
   [Anonymous], P INT WORKSH SOFTW C
   [Anonymous], TECH REP
   [Anonymous], 2014, SIST NAC IND PREC CO
   [Anonymous], SYSTEM SAFETY SKEPTI
   [Anonymous], 2015, Journal of Software Engineering Research and Development, DOI [10.1186/s40411-015-0023-0, DOI 10.1186/S40411-015-0023-0]
   Babar MA, 2006, INT CONF QUAL SOFTW, P201
   Bjarnason E, 2014, EMPIR SOFTW ENG, V19, P1809, DOI 10.1007/s10664-013-9263-y
   Björnander S, 2012, PROC INT SYMP SOFTW, P337, DOI 10.1109/ISSREW.2012.101
   Bohner S. A., 1996, SOFTWARE CHANGE IMPA
   Borg M., 2014, Recommendation systems in software engineering, P477
   Borg M, 2014, EMPIR SOFTW ENG, V19, P1565, DOI 10.1007/s10664-013-9255-y
   Borg M, 2013, 2013 7TH INTERNATIONAL WORKSHOP ON TRACEABILITY IN EMERGING FORMS OF SOFTWARE ENGINEERING (TEFSE), P72, DOI 10.1109/TEFSE.2013.6620158
   Buckley J, 2005, J SOFTW MAINT EVOL-R, V17, P309, DOI 10.1002/smr.319
   de Gea JMC, 2012, INFORM SOFTWARE TECH, V54, P1142, DOI 10.1016/j.infsof.2012.04.005
   de la Vara Jose Luis, 2012, Computer Safety, Reliability,and Security. Proceedings of SAFECOMP 2012 Workshops: Sassur, ASCoMS, DESEC4LCCI, ERCIM/EWICS, IWDE, P64, DOI 10.1007/978-3-642-33675-1_6
   de Lemos R, 2000, FIFTH IEEE INTERNATIONAL SYMPOSIUM ON HIGH ASSURANCE SYSTEMS ENGINEERING, PROCEEDINGS, P159, DOI 10.1109/HASE.2000.895455
   Durisic D, 2013, J SYST SOFTWARE, V86, P1275, DOI 10.1016/j.jss.2012.12.021
   Easterbrook S., 2008, GUIDE ADV EMPIRICAL, P285, DOI [DOI 10.1007/978-1-84800-044-5_11, DOI 10.1007/978-1-84800-044-511]
   Ferreira S, 2011, J SOFTW MAINT EVOL-R, V23, P375, DOI 10.1002/smr.515
   Fink A., 2003, The survey handbook, V1
   Fink A., 2003, DESIGN SURVEY STUDIE, V2nd
   Goeritzer R, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1155, DOI 10.1145/1985793.1986027
   Hinchey Mike, 2010, Proceedings of the 2010 17th IEEE International Conference and Workshops on Engineering of Computer-Based Systems (ECBS 2010), P430, DOI 10.1109/ECBS.2010.56
   Jamshidi P, 2013, EUR CON SFTWR MTNCE, P305, DOI 10.1109/CSMR.2013.39
   Johnson CW, 2008, SAFETY SCI, V46, P38, DOI 10.1016/j.ssci.2006.05.007
   Jönsson P, 2005, ENGINEERING AND MANAGING SOFTWARE REQUIREMENTS, P117, DOI 10.1007/3-540-28244-0_6
   Kasoju A, 2013, INFORM SOFTWARE TECH, V55, P1237, DOI 10.1016/j.infsof.2013.01.005
   Kitchenham BA, 2002, IEEE T SOFTWARE ENG, V28, P721, DOI 10.1109/TSE.2002.1027796
   Kitchenham BA, 2008, Guide to advanced empirical software engineering, P63, DOI [DOI 10.1007/978-1-84800-044-5_3, 10.1007/ 978-1-84800-044-5_3]
   Kornecki A, 2009, INNOV SYST SOFTW ENG, V5, P149, DOI 10.1007/s11334-009-0088-1
   Leveson NG, 2011, ENG SYST, P1
   Li BX, 2013, SOFTW TEST VERIF REL, V23, P613, DOI 10.1002/stvr.1475
   Lindvall M, 1998, J SYST SOFTWARE, V43, P19, DOI 10.1016/S0164-1212(98)10019-5
   de la Vara JL, 2016, INFORM SOFTWARE TECH, V72, P16, DOI 10.1016/j.infsof.2015.11.008
   Mäder P, 2013, IEEE SOFTWARE, V30, P58, DOI 10.1109/MS.2013.60
   Meade AW, 2012, PSYCHOL METHODS, V17, P437, DOI 10.1037/a0028085
   Nair Sunil, 2014, Requirements Engineering: Foundation for Software Quality. 20th International Working Conference, REFSQ 2014. Proceedings: LNCS 8396, P309, DOI 10.1007/978-3-319-05843-6_23
   Nair S, 2015, INFORM SOFTWARE TECH, V60, P1, DOI 10.1016/j.infsof.2014.12.002
   Nair S, 2014, INFORM SOFTWARE TECH, V56, P689, DOI 10.1016/j.infsof.2014.03.001
   Nair S, 2013, S VIS LANG HUM CEN C, P222, DOI 10.1109/RE.2013.6636722
   Notander JP, 2013, LECT NOTES COMPUT SC, V7983, P283, DOI 10.1007/978-3-642-39259-7_23
   Parasuraman R, 2000, IEEE T SYST MAN CY A, V30, P286, DOI 10.1109/3468.844354
   Rea L.M., 2014, Designing and conducting survey research: A comprehensive guide
   Rierson Leanna, 2013, Developing Safety-Critical Software: A Practical Guide for Aviation Software and DO-178C Compliance
   Robson C., 2002, Real world research
   Rovegård P, 2008, IEEE T SOFTWARE ENG, V34, P516, DOI 10.1109/TSE.2008.32
   RTCA, 2011, DO-178c
   Siegel S., 1998, NONPARAMETRIC STAT B, V2nd
   Siegle D., 2010, Likert scale
   Singer Janice, 2008, Guide to Advanced Empirical Software Engineering, P9
   Stalhane T., 2012, P 11 INT PROB SAF AS, P6052
   Tao Yida, 2012, P ACM SIGSOFT 20 INT
   Törner F, 2008, IEEE HI ASS SYS ENGR, P313, DOI 10.1109/HASE.2008.44
   von Knethen A, 2003, PROC IEEE INT CONF S, P246, DOI 10.1109/ICSM.2003.1235427
   Wallace DoloresR., 2001, International Journal of Reliability Quality and Safety Engineering, V8, P351, DOI DOI 10.1142/S021853930100058X
   Wohlin C., 2012, Experimentation in Software Engineering
   Yazdanshenas AR, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P119, DOI 10.1109/ICSM.2012.6405262
   Zhang H, 2014, INFORM SOFTWARE TECH, V56, P40, DOI 10.1016/j.infsof.2013.07.001
NR 68
TC 37
Z9 39
U1 1
U2 8
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD DEC 1
PY 2016
VL 42
IS 12
BP 1095
EP 1117
DI 10.1109/TSE.2016.2553032
PG 23
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA EF9TG
UT WOS:000390672800001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Pavese, E
   Braberman, V
   Uchitel, S
AF Pavese, Esteban
   Braberman, Victor
   Uchitel, Sebastian
TI Probabilistic Interface Automata
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Behaviour models; probability; interface automata; model checking
ID LOGIC
AB System specifications have long been expressed through automata-based languages, which allow for compositional construction of complex models and enable automated verification techniques such as model checking. Automata-based verification has been extensively used in the analysis of systems, where they are able to provide yes/no answers to queries regarding their temporal properties. Probabilistic modelling and checking aim at enriching this binary, qualitative information with quantitative information, more suitable to approaches such as reliability engineering. Compositional construction of software specifications reduces the specification effort, allowing the engineer to focus on specifying individual component behaviour to then analyse the composite system behaviour. Compositional construction also reduces the validation effort, since the validity of the composite specification should be dependent on the validity of the components. These component models are smaller and thus easier to validate. Compositional construction poses additional challenges in a probabilistic setting. Numerical annotations of probabilistically independent events must be contrasted against estimations or measurements, taking care of not compounding this quantification with exogenous factors, in particular the behaviour of other system components. Thus, the validity of compositionally constructed system specifications requires that the validated probabilistic behaviour of each component continues to be preserved in the composite system. However, existing probabilistic automata-based formalisms do not support specification of non-deterministic and probabilistic component behaviour which, when observed through logics such as pCTL, is preserved in the composite system. In this paper we present a probabilistic extension to Interface Automata which preserves pCTL properties under probabilistic fairness by ensuring a probabilistic branching simulation between component and composite automata. The extension not only supports probabilistic behaviour but also allows for weaker prerequisites to interfacing composition, that supports delayed synchronisation that may be required because of internal component behaviour. These results are equally applicable as an extension to non-probabilistic Interface Automata.
C1 [Pavese, Esteban; Braberman, Victor; Uchitel, Sebastian] Univ Buenos Aires, Dept Comp, RA-1053 Buenos Aires, DF, Argentina.
   [Braberman, Victor; Uchitel, Sebastian] Consejo Nacl Invest Cient & Tecn, RA-1033 Buenos Aires, DF, Argentina.
   [Uchitel, Sebastian] Imperial Coll London, London, England.
C3 University of Buenos Aires; Consejo Nacional de Investigaciones
   Cientificas y Tecnicas (CONICET); Imperial College London
RP Pavese, E (corresponding author), Univ Buenos Aires, Dept Comp, RA-1053 Buenos Aires, DF, Argentina.
EM epavese@dc.uba.ar; vbraber@dc.uba.ar; suchitel@dc.uba.ar
OI Uchitel, Sebastian/0000-0001-9352-1478
FU [ANPCyT PICT 2011-1774];  [ANPCyT PICT 2012-0724];  [ANPCyT PICT
   2013-2341];  [CONICET PIP 11220110100596CO];  [CONICET PIP
   11220130100688CO];  [UBACYT 036];  [UBACYT 0384];  [MEALS 295261]
FX This work was partially supported by grants ANPCyT PICT 2011-1774,
   ANPCyT PICT 2012-0724, ANPCyT PICT 2013-2341, CONICET PIP
   11220110100596CO, CONICET PIP 11220130100688CO, UBACYT 036, UBACYT 0384
   and MEALS 295261. The authors would also like to thank Pedro D'Argenio
   and Holger Hermanns for their input and discussions on this paper.
CR [Anonymous], 1999, PROBMIV 98 1 INT WOR
   [Anonymous], 1987, PODC
   [Anonymous], 1968, An Introduction to Probability Theory and Its Applications
   Aziz A, 1995, LECT NOTES COMPUT SC, V939, P155
   Baier C, 1998, DISTRIB COMPUT, V11, P125, DOI 10.1007/s004460050046
   Baier C, 1997, LECT NOTES COMPUT SC, V1254, P119
   Baier C, 2009, LECT NOTES COMPUT SC, V5799, P135, DOI 10.1007/978-3-642-04761-9_12
   Cattani S., 2002, CONCUR 2002 - Concurrency Theory. 13th International Conference Proceedings (Lecture Notes in Computer Science Vol.2421), P371
   CHEUNG RC, 1980, IEEE T SOFTWARE ENG, V6, P118, DOI 10.1109/TSE.1980.234477
   CHRISTOFF I, 1990, LECT NOTES COMPUT SC, V458, P126, DOI 10.1007/BFb0039056
   Clarke EM, 1999, MODEL CHECKING, P1
   de Alfaro L., 2001, Software Engineering Notes, V26, P109, DOI 10.1145/503271.503226
   De Alfaro L., 1997, THESIS
   Delahaye B, 2011, FORM METHOD SYST DES, V38, P1, DOI 10.1007/s10703-010-0107-8
   DENICOLA R, 1990, LECT NOTES COMPUT SC, V469, P407
   EMERSON EA, 1982, SCI COMPUT PROGRAM, V2, P241, DOI 10.1016/0167-6423(83)90017-5
   Epifani I, 2009, PROC INT CONF SOFTW, P111, DOI 10.1109/ICSE.2009.5070513
   Goseva-Popstojanova K, 2001, PERFORM EVALUATION, V45, P179, DOI 10.1016/S0166-5316(01)00034-7
   Halmos P., 1976, GRADUATE TEXTS MATH, V18
   HANSSON H, 1990, PROCEEDINGS : 11TH REAL-TIME SYSTEMS SYMPOSIUM, P278, DOI 10.1109/REAL.1990.128759
   Hermanns Holger, 2013, CONCUR 2013 - Concurrency Theory. 24th International Conference, CONCUR 2013. Proceedings: LNCS 8052, P364, DOI 10.1007/978-3-642-40184-8_26
   Hermanns Holger, 2009, Proceedings of Formal Methods for Components and Objects. 8th International Symposium (FMCO 2009). Revised Selected Papers, P311, DOI 10.1007/978-3-642-17071-3_16
   Hierons RM, 2010, LECT NOTES COMPUT SC, V6117, P63, DOI 10.1007/978-3-642-13464-7_6
   Hinton A, 2006, LECT NOTES COMPUT SC, V3920, P441
   HOARE CAR, 1978, COMMUN ACM, V21, P666, DOI 10.1145/359576.359585
   KELLER RM, 1976, COMMUN ACM, V19, P371, DOI 10.1145/360248.360251
   Kulkarni V.G., 2009, Modeling and Analysis of Stochastic Systems, V2nd
   Kwiatkowska M, 2010, LECT NOTES COMPUT SC, V6015, P23, DOI 10.1007/978-3-642-12002-2_3
   Milner R., 1989, Communication and concurrency
   MUSA JD, 1993, IEEE SOFTWARE, V10, P14, DOI 10.1109/52.199724
   Pavese E, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P335, DOI 10.1145/1595696.1595760
   Philippou A., 2000, CONCUR 2000 - Concurrency Theory. 11th International Conference. Proceedings (Lecture Notes in Computer Science Vol.1877), P334
   Rodrigues G.N., 2005, Proceedings of Workshop on Architecting Dependable Systems, P1
   Roshandel R., 2004, "Third Workshop on Architecting Dependable Systems (WADS)" W19S Workshop - 26th International Conference on Software Engineering, P2, DOI 10.1049/ic:20040492
   Segala R., 1995, Nordic Journal of Computing, V2, P250
   Segala R., 1995, THESIS
   Smolka S., 1990, P CONCUR THEOR CONC, P367
   Sokolova A, 2004, LECT NOTES COMPUT SC, V2925, P1
   VANGLABBEEK RJ, 1995, INFORM COMPUT, V121, P59, DOI 10.1006/inco.1995.1123
   Vardi M. Y., 1985, 26th Annual Symposium on Foundations of Computer Science (Cat. No.85CH2224-4), P327, DOI 10.1109/SFCS.1985.12
   Wu SH, 1997, THEOR COMPUT SCI, V176, P1, DOI 10.1016/S0304-3975(97)00056-X
   Yacoub S, 2004, IEEE T RELIAB, V53, P465, DOI 10.1109/TR.2004.838034
NR 42
TC 0
Z9 0
U1 0
U2 5
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD SEP
PY 2016
VL 42
IS 9
BP 843
EP 865
DI 10.1109/TSE.2016.2527000
PG 23
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA DX8UU
UT WOS:000384666100003
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Berthier, N
   Rutten, É
   De Palma, N
   Gueye, SMK
AF Berthier, Nicolas
   Rutten, Eric
   De Palma, Noel
   Gueye, Soguy Mak-Kare
TI Designing Autonomic Management Systems by Using Reactive Control
   Techniques
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Autonomic computing; coordination; discrete control; reactive
   programming
AB The ever growing complexity of software systems has led to the emergence of automated solutions for their management. The software assigned to this work is usually called an Autonomic Management System (AMS). It is ordinarily designed as a composition of several managers, which are pieces of software evaluating the dynamics of the system under management through measurements (e.g., workload, memory usage), taking decisions, and acting upon it so that it stays in a set of acceptable operating states. However, careless combination of managers may lead to inconsistencies in the taken decisions, and classical approaches dealing with these coordination problems often rely on intricate and ad hoc solutions. To tackle this problem, we take a global view and underscore that AMSs are intrinsically reactive, as they react to flows of monitoring data by emitting flows of reconfiguration actions. Therefore we propose a new approach for the design of AMSs, based on synchronous programming and discrete controller synthesis techniques. They provide us with high-level languages for modeling the system to manage, as well as means for statically guaranteeing the absence of logical coordination problems. Hence, they suit our main contribution, which is to obtain guarantees at design time about the absence of logical inconsistencies in the taken decisions. We detail our approach, illustrate it by designing an AMS for a realistic multi-tier application, and evaluate its practicality with an implementation.
C1 [Berthier, Nicolas; De Palma, Noel; Gueye, Soguy Mak-Kare] Univ Grenoble, ERODS Team, LIG Bat C,220 Rue Chim, F-38400 St Martin Dheres, France.
   [Berthier, Nicolas] INRIA Rennes Bretagne Atlantique, SUMO Team, Campus Beaulieu, F-35042 Rennes, France.
   [Rutten, Eric] LIG INRIA Grenoble Rhone Alpes, Inovallee,655 Ave Europe, F-38334 Montbonnot St Martin, St Ismier, France.
C3 Communaute Universite Grenoble Alpes; Universite Grenoble Alpes (UGA);
   Universite de Rennes
RP Berthier, N (corresponding author), Univ Grenoble, ERODS Team, LIG Bat C,220 Rue Chim, F-38400 St Martin Dheres, France.; Berthier, N (corresponding author), INRIA Rennes Bretagne Atlantique, SUMO Team, Campus Beaulieu, F-35042 Rennes, France.
EM m@nberth.space; eric.rutten@inria.fr; noel.depalma@inrialpes.fr;
   soguy-mak-kare.gueye@inria.fr
OI Berthier, Nicolas/0000-0002-0933-8193
FU French ANR project Ctrl-Green [ANR-11-INFR 012 11]; ANR INFRA; ANR
   MINALOGIC
FX This work was supported by the French ANR project Ctrl-Green
   (ANR-11-INFR 012 11), funded by ANR INFRA and MINALOGIC.
CR Aldinucci M., 2009, P INT PAR DISTR PROC, P1, DOI DOI 10.1109/IPDPS.2009.5161034
   Altisen K, 2003, LECT NOTES COMPUT SC, V2618, P174
   [Anonymous], 2014, P 17 INT ACM SIGS S
   Bellissard L., 1999, Proceedings of the 18th IEEE Symposium on Reliable Distributed Systems, P294, DOI 10.1109/RELDIS.1999.805107
   Benveniste A, 2003, P IEEE, V91, P64, DOI 10.1109/JPROC.2002.805826
   Benveniste A, 2001, IEEE DECIS CONTR P, P3284, DOI 10.1109/CDC.2001.980328
   Berthier N., 2014, IFAC Proc. Vol, V47, P46, DOI [10.3182/20140514-3-FR-4046.00099, DOI 10.3182/20140514-3-FR-4046.00099]
   Berthier N, 2013, ACM T EMBED COMPUT S, V12, DOI 10.1145/2435227.2435235
   Bouhadiba T., 2011, 2011 International Conference on Embedded Software (EMSOFT 2011), P309
   Bruneton E, 2006, SOFTWARE PRACT EXPER, V36, P1257, DOI 10.1002/spe.767
   Cano J, 2014, LECT NOTES COMPUT SC, V8459, P33, DOI 10.1007/978-3-662-43376-8_3
   Carlsson J., 2006, WSEAS Transactions on Circuits and Systems, V5, P953
   Caspi P., 1995, EURO-PAR '95 Parallel Processing. First International EURO-PAR Conference. Proceedings, P15
   Caspi P., 1987, P 14 ACM SIGACT SIGP, P178, DOI DOI 10.1145/41625.41641
   Caspi P, 2008, ACM T EMBED COMPUT S, V7, DOI 10.1145/1331331.1331339
   Chapiro D. M., 1984, THESIS
   Cuadrado F, 2012, IEEE T SOFTWARE ENG, V38, P520, DOI 10.1109/TSE.2011.24
   Das R., 2008, INT JOINT C AUTONOMO, P107
   Delaval G, 2015, IFAC PAPERSONLINE, V48, P139, DOI 10.1016/j.ifacol.2015.06.485
   Delaval G, 2013, DISCRETE EVENT DYN S, V23, P385, DOI 10.1007/s10626-013-0163-5
   Delaval G, 2010, LCTES 10-PROCEEDINGS OF THE ACM SIGPLAN/SIGBED 2010 CONFERENCE ON LANGUAGES, COMPILERS, & TOOLS FOR EMBEDDED SYSTEMS, P57
   Fischer J, 2012, ACM SIGPLAN NOTICES, V47, P263, DOI 10.1145/2345156.2254096
   Girault A, 2002, LECT NOTES COMPUT SC, V2491, P266
   Gueye SMK, 2013, J CLOUD COMPUT-ADV S, V2, DOI 10.1186/2192-113X-2-16
   Gueye SMK, 2013, LECT NOTES COMPUT SC, V7890, P75, DOI 10.1007/978-3-642-38493-6_6
   Gueye SMK, 2014, FUTURE GENER COMP SY, V35, P14, DOI 10.1016/j.future.2013.12.037
   Halbwachs N, 2002, LECT NOTES COMPUT SC, V2491, P240
   Harel D., 1985, Logics and Models of Concurrent Systems, VF-13, P477, DOI [DOI 10.1007/978-3-642-82453-1_17, 10.1007/978-3-642-82453-1_17]
   Heo J, 2009, ACM/IEEE SIXTH INTERNATIONAL CONFERENCE ON AUTONOMIC COMPUTING AND COMMUNICATIONS (ICAC '09), P77
   Huebscher MC, 2008, ACM COMPUT SURV, V40, DOI 10.1145/1380584.1380585
   Kephart JO, 2005, PROC INT CONF SOFTW, P15, DOI 10.1145/1062455.1062464
   Kephart JO, 2003, COMPUTER, V36, P41, DOI 10.1109/MC.2003.1160055
   Kumar S, 2009, ACM/IEEE SIXTH INTERNATIONAL CONFERENCE ON AUTONOMIC COMPUTING AND COMMUNICATIONS (ICAC '09), P127
   Maraninchi F, 2001, COMPUT LANG, V27, P61, DOI 10.1016/S0096-0551(01)00016-9
   Marchand H, 2000, DISCRETE EVENT DYN S, V10, P325, DOI 10.1023/A:1008311720696
   Marchand H., 1999, 1271 IRISA
   Movahedi Z, 2012, IEEE COMMUN SURV TUT, V14, P464, DOI 10.1109/SURV.2011.042711.00078
   Nathuji Ripal, 2007, Operating Systems Review, V41, P265, DOI 10.1145/1323293.1294287
   Rahman M, 2011, CONCURR COMP-PRACT E, V23, P1990, DOI 10.1002/cpe.1734
   RAMADGE PJG, 1989, P IEEE, V77, P81, DOI 10.1109/5.21072
   Raymond P, 2008, ELECTRON NOTES THEOR, V203, P19, DOI 10.1016/j.entcs.2008.05.008
   Rosa L, 2013, IEEE T SOFTWARE ENG, V39, P403, DOI 10.1109/TSE.2012.29
   Ryzhyk L, 2009, SOSP'09: PROCEEDINGS OF THE TWENTY-SECOND ACM SIGOPS SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES, P73
   SCADE, 2003, SAFETY CRITICAL APPL
   Tesauro G., 2004, P AAMAS 04, P464
   Wang Y, 2009, ACM SIGPLAN NOTICES, V44, P252, DOI 10.1145/1594834.1480913
   Zhang Q, 2010, J INTERNET SERV APPL, V1, P7, DOI 10.1007/s13174-010-0007-6
NR 47
TC 5
Z9 6
U1 0
U2 10
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUL
PY 2016
VL 42
IS 7
BP 640
EP 657
DI 10.1109/TSE.2015.2510004
PG 18
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA DR7AX
UT WOS:000380053500003
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Mellegård, N
   Ferwerda, A
   Lind, K
   Heldal, R
   Chaudron, MRV
AF Mellegard, Niklas
   Ferwerda, Adry
   Lind, Kenneth
   Heldal, Rogardt
   Chaudron, Michel R. V.
TI Impact of Introducing Domain-Specific Modelling in Software Maintenance:
   An Industrial Case Study
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Empirical investigation; software maintenance; maintenance measurement;
   process measurement; productivity
ID UML
AB Domain-specific modelling (DSM) is a modern software development technology that aims at enhancing productivity. One of the claimed advantages of DSM is increased maintainability of software. However, current empirical evidence supporting this claim is lacking. In this paper, we contribute evidence from a case study conducted at a software development company. We study how the introduction of DSM affected the maintenance of a legacy system. We collected data about the maintenance phase of a system that was initially developed using manual programming, but which was gradually replaced by DSM development. We performed statistical analyses of the relation between the use of DSM and the time needed to resolve defects, the defect density, and the phase in which defects were detected. The results show that after introducing DSM the defect density is lower, that defects are found earlier, but resolving defects takes longer. Other observed benefits are that the number of developers and the number of person-hours needed for maintaining the system decreased, and the portability to new platforms increased. Our findings are useful for organizations that consider introducing DSM and would like to know which benefits can be realized in software maintenance.
C1 [Mellegard, Niklas; Lind, Kenneth] Res Inst Viktoria Swedish ICT, Electromobil Grp, Gothenburg, Sweden.
   [Ferwerda, Adry] Centric, Gouda, Netherlands.
   [Heldal, Rogardt; Chaudron, Michel R. V.] Chalmers & Gothenborg Univ, Dept Comp Sci & Engn, Software Engn Div, Gothenburg, Sweden.
RP Mellegård, N; Lind, K (corresponding author), Res Inst Viktoria Swedish ICT, Electromobil Grp, Gothenburg, Sweden.; Ferwerda, A (corresponding author), Centric, Gouda, Netherlands.; Heldal, R; Chaudron, MRV (corresponding author), Chalmers & Gothenborg Univ, Dept Comp Sci & Engn, Software Engn Div, Gothenburg, Sweden.
EM niklas.mellegard@viktoria.se; adry.ferwerda@centric.eu;
   kenneth.lind@viktoria.se; heldal@chalmers.se; chaudron@chalmers.se
OI Mellegard, Niklas/0000-0002-7018-8542
CR Anda B., 2006, P 2006 ACM IEEE INT, P124, DOI [10.1145/1159733.1159754, DOI 10.1145/1159733.1159754]
   [Anonymous], COMMON SOFTWARE MEAS
   [Anonymous], GENERATIVE PROGRAMMI
   [Anonymous], 2012, CASE STUDY RES SOFTW, DOI DOI 10.1002/9781118181034
   [Anonymous], 2009, GPCE 09, DOI DOI 10.1145/1621607.1621630
   [Anonymous], P 42 HAW INT C SYST
   [Anonymous], UNDERSTANDING UNIFAC
   [Anonymous], ISO IEC IEEE SYST SO
   [Anonymous], DOM SPEC MOD
   [Anonymous], SCHOLARSHIP APPROACH
   Arisholm E, 2006, IEEE T SOFTWARE ENG, V32, P365, DOI 10.1109/TSE.2006.59
   BUSE A, 1982, AM STAT, V36, P153, DOI 10.2307/2683166
   Dzidek WJ, 2008, IEEE T SOFTWARE ENG, V34, P407, DOI 10.1109/TSE.2008.15
   Glass RL, 2001, IEEE SOFTWARE, V18, P112, DOI 10.1109/MS.2001.922739
   Gomm Roger., 2000, Case Study Method : Key Issues, Key Texts
   Green I, 2007, COMMUN ACM, V50, P63, DOI 10.1145/1232743.1232749
   Heijstek W, 2010, EUROMICRO CONF PROC, P333, DOI 10.1109/SEAA.2010.63
   JORGENSEN M, 1995, J SOFTW MAINT-RES PR, V7, P27, DOI 10.1002/smr.4360070104
   Kamma Damodaram, 2014, 2014 21st Asia-Pacific Software Engineering Conference (APSEC), P71, DOI 10.1109/APSEC.2014.20
   Kemerer C. F., 1995, Annals of Software Engineering, V1, P1, DOI 10.1007/BF02249043
   Kruchten P, 2012, IEEE SOFTWARE, V29, P18, DOI 10.1109/MS.2012.167
   Lauesen S, 2001, IEEE SOFTWARE, V18, P67, DOI 10.1109/MS.2001.936220
   Lehman MM, 1997, FOURTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM, PROCEEDINGS, P20, DOI 10.1109/METRIC.1997.637156
   LIENTZ BP, 1978, COMMUN ACM, V21, P466, DOI 10.1145/359511.359522
   Loup-Escande E, 2014, INFORM SOFTWARE TECH, V56, P1049, DOI 10.1016/j.infsof.2014.04.008
   Lussenburg V, 2010, LECT NOTES COMPUT SC, V6395, P346
   Martínez Y, 2013, INFORM SOFTWARE TECH, V55, P189, DOI 10.1016/j.infsof.2012.07.004
   Martínez Y, 2011, LECT NOTES COMPUT SC, V6998, P233, DOI 10.1007/978-3-642-24606-7_18
   Mellor SJ., 2002, EXECUTABLE UML FDN M
   Mohagheghi P, 2008, LECT NOTES COMPUT SC, V5095, P432, DOI 10.1007/978-3-540-69100-6_31
   NAGELKERKE NJD, 1991, BIOMETRIKA, V78, P691, DOI 10.1093/biomet/78.3.691
   QUADE D, 1967, J AM STAT ASSOC, V62, P1187, DOI 10.2307/2283769
   Ray B, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P155, DOI 10.1145/2635868.2635922
   Ricca F., 2012, 2012 Proceedings of 4th International Workshop Modeling in Software Engineering (MiSE 2012), P77, DOI 10.1109/MISE.2012.6226018
   Sommerville I., 2011, Software engineering
   Swanson E. B., 1976, 2nd International Conference on Software Engineering, P492
   Torchiano M, 2013, J SYST SOFTWARE, V86, P2110, DOI 10.1016/j.jss.2013.03.084
   van Deursen A, 2000, ACM SIGPLAN NOTICES, V35, P26, DOI 10.1145/352029.352035
   Voelter M, 2009, J OBJECT TECHNOL, V8, P79, DOI 10.5381/jot.2009.8.6.c6
   Whittle J, 2014, IEEE SOFTWARE, V31, P79, DOI 10.1109/MS.2013.65
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
   Yin R.K., 2014, Applications of case study research, V2nd
NR 42
TC 13
Z9 13
U1 0
U2 9
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAR
PY 2016
VL 42
IS 3
BP 248
EP 263
DI 10.1109/TSE.2015.2479221
PG 16
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA DH5MS
UT WOS:000372834200004
DA 2024-07-18
ER

PT J
AU Mirakhorli, M
   Cleland-Huang, J
AF Mirakhorli, Mehdi
   Cleland-Huang, Jane
TI Detecting, Tracing, and Monitoring Architectural Tactics in Code
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Architecture; traceability; tactics; traceability information models
ID DESIGN; TRACEABILITY; RECOVERY; CLASSIFICATION
AB Software architectures are often constructed through a series of design decisions. In particular, architectural tactics are selected to satisfy specific quality concerns such as reliability, performance, and security. However, the knowledge of these tactical decisions is often lost, resulting in a gradual degradation of architectural quality as developers modify the code without fully understanding the underlying architectural decisions. In this paper we present a machine learning approach for discovering and visualizing architectural tactics in code, mapping these code segments to tactic traceability patterns, and monitoring sensitive areas of the code for modification events in order to provide users with up-to-date information about underlying architectural concerns. Our approach utilizes a customized classifier which is trained using code extracted from fifty performance-centric and safety-critical open source software systems. Its performance is compared against seven off-the-shelf classifiers. In a controlled experiment all classifiers performed well; however our tactic detector outperformed the other classifiers when used within the larger context of the Hadoop Distributed File System. We further demonstrate the viability of our approach for using the automatically detected tactics to generate viable and informative messages in a simulation of maintenance events mined from Hadoop's change management system.
C1 [Mirakhorli, Mehdi] Rochester Inst Technol, Dept Software Engn, Rochester, NY 14623 USA.
   [Cleland-Huang, Jane] Depaul Univ, Sch Comp, Chicago, IL 60604 USA.
C3 Rochester Institute of Technology; DePaul University
RP Mirakhorli, M (corresponding author), Rochester Inst Technol, Dept Software Engn, Rochester, NY 14623 USA.; Cleland-Huang, J (corresponding author), Depaul Univ, Sch Comp, Chicago, IL 60604 USA.
EM mehdi@se.rit.edu; jhuang@cs.depaul.edu
FU US National Science Foundation [CCF-0810924]; Research Experience for
   Undergraduates (REU) [CCF 1341072]
FX The work in this paper was partially funded US National Science
   Foundation grant # CCF-0810924 and Research Experience for
   Undergraduates (REU) grant # CCF 1341072. We particularly thank DePaul
   students Ahmed Fakhry, Artem Grechko, and Matteusz Wieloch for their
   efforts to help develop the Archie tool.
CR Aldrich J, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P187, DOI 10.1109/ICSE.2002.1007967
   [Anonymous], 2014, APACHE HADOOP DESIGN
   [Anonymous], 2008, NASAS AND ROBOTS
   [Anonymous], 1998, EUR C MACH LEARN
   Antoniol G, 2002, IEEE T SOFTWARE ENG, V28, P970, DOI 10.1109/TSE.2002.1041053
   Antoniol G, 2001, J SYST SOFTWARE, V59, P181, DOI 10.1016/S0164-1212(01)00061-9
   Aplin JD, 1997, MICROPROCESS MICROSY, V20, P473, DOI 10.1016/S0141-9331(97)01112-5
   Asuncion HU, 2010, 2010 ACM IEEE 32 INT, V1, P95
   Babar Muhammad Ali, 2007, Second Workshop on Sharing and Reusing architectural Knowledge Architecture, Rationale, and Design Intent (SHARK/ADI'07: ICSE Workshops 2007), DOI 10.1109/SHARK-ADI.2007.1
   Baeza-Yates Ricardo, 1999, MODERN INFORM RETRIE, V463
   Breiman L, 1996, MACH LEARN, V24, P123, DOI 10.1007/bf00058655
   Burge JE, 2008, J SYST SOFTWARE, V81, P395, DOI 10.1016/j.jss.2007.05.004
   Cai Yuanfang, 2013, P 9 INT ACM SIGSOFT, P133
   Capilla R., 2006, SIGSOFT Softw. Eng. Notes, V31, DOI DOI 10.1145/1163514.1178644
   Cervantes H, 2013, IEEE SOFTWARE, V30, P46, DOI 10.1109/MS.2012.175
   Cleland-Huang J, 2005, 13TH IEEE INTERNATIONAL CONFERENCE ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P135, DOI 10.1109/RE.2005.78
   Cleland-Huang J, 2002, P INT COMP SOFTW APP, P595, DOI 10.1109/CMPSAC.2002.1045069
   Cleland-Huang J, 2007, REQUIR ENG, V12, P103, DOI 10.1007/s00766-007-0045-1
   Cleland-Huang J, 2007, COMPUTER, V40, P27, DOI 10.1109/MC.2007.195
   Cohen WW, 1999, SIXTEENTH NATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE (AAAI-99)/ELEVENTH INNOVATIVE APPLICATIONS OF ARTIFICIAL INTELLIGENCE (IAAI-99), P335
   Cotroneo D, 2014, ACM J EMERG TECH COM, V10, DOI 10.1145/2539117
   Dragomir A., 2014, P WICSA COMP VOL
   Ducasse S, 2009, IEEE T SOFTWARE ENG, V35, P573, DOI 10.1109/TSE.2009.19
   Emenecker J., 2010, P 32 ACM IEEE INT C, V1, P155, DOI DOI 10.1145/1806799.1806825
   Falessi D, 2013, ACM T SOFTW ENG METH, V22, DOI 10.1145/2491509.2491515
   Fontana FA, 2011, J OBJECT TECHNOL, V10, DOI 10.5381/jot.2011.10.1.a4
   Freund Y., 1996, Machine Learning. Proceedings of the Thirteenth International Conference (ICML '96), P148
   Gamma Erich., 1994, DESIGN PATTERNS
   Gang Huang, 2006, Automated Software Engineering, V13, P257, DOI 10.1007/s10515-006-7738-4
   Genkin A, 2007, TECHNOMETRICS, V49, P291, DOI 10.1198/004017007000000245
   Gibiec M., 2010, Proceedings of the IEEE/ACM International Conference on Automated Software Engineering, ASE '10, P245
   Gorton I., 2006, ESSENTIAL SOFTWARE A
   Guo GYB, 1999, INT FED INFO PROC, V12, P15
   Hanmer R.S., 2007, Wiley Series in Software Design Patterns
   Hart J., 2008, P AIAA GUID CONTR C
   Hayes JH, 2006, IEEE T SOFTWARE ENG, V32, P4, DOI 10.1109/TSE.2006.3
   Jansen A, 2008, J SYST SOFTWARE, V81, P536, DOI 10.1016/j.jss.2007.08.025
   Jansen A, 2006, 5TH WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE, PROCEEDINGS, P109
   Kazman R., 1999, Automated Software Engineering, V6, P107, DOI 10.1023/A:1008781513258
   Koschke R., 2008, International Summer School on Software Engineering, P140
   Kruchten P., 2004, Groningen Workshop on Software Variability management, P55
   Kruchten P, 2009, IEEE SOFTWARE, V26, P36, DOI 10.1109/MS.2009.52
   Lee JT, 1997, IEEE EXPERT, V12, P78, DOI 10.1109/64.592267
   Len Bass R. K., 2000, SOFTWARE ARCHITECTUR
   Lodhi H, 2002, J MACH LEARN RES, V2, P419, DOI 10.1162/153244302760200687
   Lungu M, 2014, SCI COMPUT PROGRAM, V79, P204, DOI 10.1016/j.scico.2012.04.007
   Mancoridis S., 1999, Proceedings IEEE International Conference on Software Maintenance - 1999 (ICSM'99). `Software Maintenance for Business Change' (Cat. No.99CB36360), P50, DOI 10.1109/ICSM.1999.792498
   Maqbool O, 2007, IEEE T SOFTWARE ENG, V33, P759, DOI 10.1109/TSE.2007.70732
   Mirakhorli M., 2011, 2011 IEEE 27th International Conference on Software Maintenance, P123, DOI 10.1109/ICSM.2011.6080779
   Mirakhorli M., 2014, THESIS DEPAUL U LIB
   Mirakhorli M., 2010, P WORKSH EMB SOFTW R
   Mirakhorli M, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P739, DOI 10.1145/2635868.2661671
   Mirakhorli M, 2012, PROC INT CONF SOFTW, P639, DOI 10.1109/ICSE.2012.6227153
   Mirakhorli M, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P908, DOI 10.1145/1985793.1985942
   Murphy GC, 2001, IEEE T SOFTWARE ENG, V27, P364, DOI 10.1109/32.917525
   Parnas D. L., 1994, ICSE-16. 16th International Conference on Software Engineering (Cat. No.94CH3409-0), P279, DOI 10.1109/ICSE.1994.296790
   Perry D. E., 1992, SIGSOFT Software Engineering Notes, V17, P40, DOI 10.1145/141874.141884
   Pettersson N, 2010, IEEE T SOFTWARE ENG, V36, P575, DOI 10.1109/TSE.2009.92
   Poshyvanyk D, 2012, ACM T SOFTW ENG METH, V21, DOI 10.1145/2377656.2377660
   Quinlan J. R., 1993, PROGRAMS MACHINE LEA
   Rasool G, 2011, PROCEDIA COMPUT SCI, V3, DOI 10.1016/j.procs.2010.12.134
   Sartipi K, 2003, PROC IEEE INT CONF S, P293, DOI 10.1109/ICSM.2003.1235434
   Siewiorek D. P., 2014, FAULT TOLERANT ARCHI
   Tamblyn S., 2007, P 30 ANN AAS GUID CO
   Tamblyn S., 2005, NASA EXPLORATION SYS
   Tang A, 2007, J SYST SOFTWARE, V80, P918, DOI 10.1016/j.jss.2006.08.040
   Tong S, 2002, J MACH LEARN RES, V2, P45, DOI 10.1162/153244302760185243
   Van Eyck Jo, 2011, P 6 INT WORKSHOP SHA, P53
   van Gurp J, 2005, J SOFTW MAINT EVOL-R, V17, P277, DOI 10.1002/smr.313
   Zheng YJ, 2012, PROC INT CONF SOFTW, P628, DOI 10.1109/ICSE.2012.6227154
   [No title captured]
NR 71
TC 57
Z9 63
U1 1
U2 16
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAR
PY 2016
VL 42
IS 3
BP 206
EP 221
DI 10.1109/TSE.2015.2479217
PG 16
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA DH5MS
UT WOS:000372834200002
DA 2024-07-18
ER

PT J
AU Yang, YB
   Zhou, YM
   Lu, HM
   Chen, L
   Chen, ZY
   Xu, BW
   Leung, H
   Zhang, ZY
AF Yang, Yibiao
   Zhou, Yuming
   Lu, Hongmin
   Chen, Lin
   Chen, Zhenyu
   Xu, Baowen
   Leung, Hareton
   Zhang, Zhenyu
TI Are Slice-Based Cohesion Metrics Actually Useful in Effort-Aware
   Post-Release Fault-Proneness Prediction? An Empirical Study
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Cohesion; metrics; slice-based; fault-proneness; prediction;
   effort-aware
ID CODE CHURN; SOFTWARE; COMPLEXITY; QUALITY; MODULES
AB Background. Slice-based cohesion metrics leverage program slices with respect to the output variables of a module to quantify the strength of functional relatedness of the elements within the module. Although slice-based cohesion metrics have been proposed for many years, few empirical studies have been conducted to examine their actual usefulness in predicting fault-proneness. Objective. We aim to provide an in-depth understanding of the ability of slice-based cohesion metrics in effort-aware post-release fault-proneness prediction, i.e. their effectiveness in helping practitioners find post-release faults when taking into account the effort needed to test or inspect the code. Method. We use the most commonly used code and process metrics, including size, structural complexity, Halstead's software science, and code churn metrics, as the baseline metrics. First, we employ principal component analysis to analyze the relationships between slice-based cohesion metrics and the baseline metrics. Then, we use univariate prediction models to investigate the correlations between slice-based cohesion metrics and post-release fault-proneness. Finally, we build multivariate prediction models to examine the effectiveness of slice-based cohesion metrics in effort-aware post-release fault-proneness prediction when used alone or used together with the baseline code and process metrics. Results. Based on open-source software systems, our results show that: 1) slice-based cohesion metrics are not redundant with respect to the baseline code and process metrics; 2) most slice-based cohesion metrics are significantly negatively related to post-release fault-proneness; 3) slice-based cohesion metrics in general do not outperform the baseline metrics when predicting post-release fault-proneness; and 4) when used with the baseline metrics together, however, slice-based cohesion metrics can produce a statistically significant and practically important improvement of the effectiveness in effort-aware post-release fault-proneness prediction. Conclusion. Slice-based cohesion metrics are complementary to the most commonly used code and process metrics and are of practical value in the context of effort-aware post-release fault-proneness prediction.
C1 [Yang, Yibiao; Zhou, Yuming; Lu, Hongmin; Chen, Lin; Xu, Baowen] Nanjing Univ, Dept Comp Sci & Technol, State Key Lab Novel Software Technol, Nanjing 210023, Jiangsu, Peoples R China.
   [Chen, Zhenyu] Nanjing Univ, Sch Software, State Key Lab Novel Software Technol, Nanjing 210023, Jiangsu, Peoples R China.
   [Leung, Hareton] Hong Kong Polytech Univ, Dept Comp, Hong Kong, Hong Kong, Peoples R China.
   [Zhang, Zhenyu] Chinese Acad Sci, Inst Software, State Key Lab Comp Sci, Beijing, Peoples R China.
C3 Nanjing University; Nanjing University; Hong Kong Polytechnic
   University; Chinese Academy of Sciences; Institute of Software, CAS
RP Yang, YB (corresponding author), Nanjing Univ, Dept Comp Sci & Technol, State Key Lab Novel Software Technol, Nanjing 210023, Jiangsu, Peoples R China.
EM yangyibiao@smail.nju.edu.cn; zhouyuming@nju.edu.cn; hmlu@nju.edu.cn;
   lchen@nju.edu.cn; zychen@software.nju.edu.cn; bwxu@nju.edu.cn;
   cshleung@inet.polyu.edu.hk; zhangzy@ios.ac.cn
RI Yang, Yibiao/ABP-4159-2022; Xu, Baowen/IXW-4882-2023; zhang,
   zhenyu/HOA-8440-2023
OI Yang, Yibiao/0000-0003-1153-2013; Xu, Baowen/0000-0001-7743-1296; Chen,
   Lin/0000-0003-2352-2226
FU National Key Basic Research and Development Program of China
   [2014CB340702]; National Natural Science Foundation of China [61432001,
   91318301, 61321491, 61379045, 61272082, 61300051, 61472175]; National
   Natural Science Foundation of Jiangsu Province [BK20130014]; National
   Science and Technology Major Project of China [2012ZX01039-004]; Hong
   Kong Competitive Earmarked Research Grant [PolyU5219/06E]; PolyU Grant
   [4-6934]
FX The authors would like to thank the editor and anonymous reviewers for
   their very insightful comments and constructive suggestions in greatly
   improving the quality of this paper. They also wish to thank Professor
   Mark Harman for his very helpful suggestions when revising their paper.
   The work in this paper is supported by the National Key Basic Research
   and Development Program of China (2014CB340702), the National Natural
   Science Foundation of China (61432001, 91318301, 61321491, 61379045,
   61272082, 61300051, 61472175), the National Natural Science Foundation
   of Jiangsu Province (BK20130014), the National Science and Technology
   Major Project of China (2012ZX01039-004), the Hong Kong Competitive
   Earmarked Research Grant (PolyU5219/06E), and PolyU Grant (4-6934).
   Yuming Zhou is the corresponding author of this paper.
CR Al Dallal J, 2009, IET SOFTW, V3, P46, DOI 10.1049/iet-sen:20080054
   Al Dallal J, 2012, INFORM SOFTWARE TECH, V54, P396, DOI 10.1016/j.infsof.2011.11.007
   Al Dallal J, 2011, IEEE T SOFTWARE ENG, V37, P788, DOI 10.1109/TSE.2010.97
   [Anonymous], 2012, INT C SOFTWARE ENG F
   [Anonymous], 2007, PROMISE 07, DOI DOI 10.1109/PROMISE.2007.10
   [Anonymous], 2012, P ACM SIGSOFT 20 INT
   Arisholm E, 2010, J SYST SOFTWARE, V83, P2, DOI 10.1016/j.jss.2009.06.055
   Basili VR, 1996, IEEE T SOFTWARE ENG, V22, P751, DOI 10.1109/32.544352
   BASILI VR, 1984, COMMUN ACM, V27, P42, DOI 10.1145/69605.2085
   Belsley D. A., 2005, Regression Diagnostics: Identifying Influential Data and Sources of Collinearity
   BENJAMINI Y, 1995, J R STAT SOC B, V57, P289, DOI 10.1111/j.2517-6161.1995.tb02031.x
   BIEMAN JM, 1994, IEEE T SOFTWARE ENG, V20, P644, DOI 10.1109/32.310673
   Black S., 2005, P DAGSTH SEM PROGR S
   Black S, 2009, 2009 35TH EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS, PROCEEDINGS, P3, DOI 10.1109/SEAA.2009.94
   Bowes D., 2011, P 2 INT WORKSH EM TR, P75
   Briand LC, 2000, J SYST SOFTWARE, V51, P245, DOI 10.1016/S0164-1212(99)00102-8
   Briand LC, 2001, IEEE T SOFTWARE ENG, V27, P513, DOI 10.1109/32.926174
   Cohen J., 1988, STAT POWER ANAL BEHA
   Counsell S, 2010, INT J SOFTW ENG KNOW, V20, P609, DOI 10.1142/S0218194010004888
   Counsell S, 2010, EUROMICRO CONF PROC, P283, DOI 10.1109/SEAA.2010.17
   Darcy DP, 2005, IEEE T SOFTWARE ENG, V31, P982, DOI 10.1109/TSE.2005.130
   Emam KE, 2001, IEEE T SOFTWARE ENG, V27, P630, DOI 10.1109/32.935855
   FARRAR DE, 1967, REV ECON STAT, V49, P92, DOI 10.2307/1937887
   Fenton NE, 2000, IEEE T SOFTWARE ENG, V26, P797, DOI 10.1109/32.879815
   Green P. D., 2009, 488 U HERTF
   Hall T, 2012, IEEE T SOFTWARE ENG, V38, P1276, DOI 10.1109/TSE.2011.103
   Halstead M.H., 1977, OPERATING PROGRAMMIN
   Harman M., 1995, P 8 INT QUAL WEEK SA, P1
   Hatton L, 1997, IEEE SOFTWARE, V14, P89, DOI 10.1109/52.582978
   Hunt J.W., 1976, An Algorithm for Differential File Comparison
   Kamei Y., 2010, Proceedings of the 26th International Conference on Software Maintenance, P1, DOI 10.1109/ICSM.2010.5609530
   Kamei Y, 2013, IEEE T SOFTWARE ENG, V39, P757, DOI 10.1109/TSE.2012.70
   Koru AG, 2005, IEEE T SOFTWARE ENG, V31, P625, DOI 10.1109/TSE.2005.89
   Kutner M. H., 2004, APPL LINEAR REGRESSI
   Longworth H. D., 1985, THESIS MICHIGAN TECH
   Luo Li P., 2006, 28th International Conference on Software Engineering Proceedings, P413, DOI 10.1145/1134285.1134343
   Mende T, 2010, EUR CON SFTWR MTNCE, P107, DOI 10.1109/CSMR.2010.18
   Menzies T, 2007, IEEE T SOFTWARE ENG, V33, P2, DOI 10.1109/TSE.2007.256941
   Meyers TM, 2007, ACM T SOFTW ENG METH, V17, DOI 10.1145/1314493.1314495
   Meyers TM, 2004, 11TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P256, DOI 10.1109/WCRE.2004.34
   Moller K.-H., 1993, Proceedings First International Software Metrics Symposium (Cat. No.93TH0518-1), P82, DOI 10.1109/METRIC.1993.263798
   Moser R, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P181, DOI 10.1145/1368088.1368114
   MUNSON JC, 1992, IEEE T SOFTWARE ENG, V18, P423, DOI 10.1109/32.135775
   Nagappan N, 2005, PROC INT CONF SOFTW, P284, DOI 10.1145/1062455.1062514
   Nagappan N., 2006, 28th International Conference on Software Engineering Proceedings, P452, DOI 10.1145/1134285.1134349
   Ohlsson N, 1996, IEEE T SOFTWARE ENG, V22, P886, DOI 10.1109/32.553637
   Ott L. M., 1992, Conference on Software Maintenance 1992 (Cat.No.92CH3206-0), P345, DOI 10.1109/ICSM.1992.242524
   Ott L. M., 1993, Proceedings First International Software Metrics Symposium (Cat. No.93TH0518-1), P71, DOI 10.1109/METRIC.1993.263799
   Ott L. M., 1989, Proceedings. 11th International Conference on Software Engineering (Cat. No.89CH2718-5), P198, DOI 10.1145/74587.74614
   Ott LM, 1998, INFORM SOFTWARE TECH, V40, P691, DOI 10.1016/S0950-5849(98)00092-5
   OTTENSTEIN KJ, 1984, SIGPLAN NOTICES, V19, P177, DOI 10.1145/390011.808263
   Page-Jones M., 1988, PRACTICAL GUIDE STRU, V2
   Pan K, 2006, SIXTH IEEE INTERNATIONAL WORKSHOP ON SOURCE CODE ANALYSIS AND MANIPULATION, PROCEEDINGS, P31
   Rahman F, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P424, DOI 10.1145/2568225.2568269
   Romano J, 2006, ANN M FLOR ASS I RES, P1
   Schein AndrewI., 2003, P 9 INT WORKSHOP ART, V38, P46
   Shatnawi R, 2008, J SYST SOFTWARE, V81, P1868, DOI 10.1016/j.jss.2007.12.794
   Shin Y, 2011, IEEE T SOFTWARE ENG, V37, P772, DOI 10.1109/TSE.2010.81
   WEISER M, 1984, IEEE T SOFTWARE ENG, V10, P352, DOI 10.1109/TSE.1984.5010248
   Weiser M., 1981, 5th International Conference on Software Engineering, P439
   Yourdon E.L. L. Constantine., 1979, STRUCTURED DESIGN FU, V5
   Zhou Y., 2004, P 10 INT SOFTW METR
   Zhou YM, 2014, ACM T SOFTW ENG METH, V23, DOI 10.1145/2556777
   Zhou YM, 2010, J SYST SOFTWARE, V83, P660, DOI 10.1016/j.jss.2009.11.704
   Zhou YM, 2009, IEEE T SOFTWARE ENG, V35, P607, DOI 10.1109/TSE.2009.32
   Zimmerman T, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P91, DOI 10.1145/1595696.1595713
NR 66
TC 41
Z9 48
U1 0
U2 16
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD APR
PY 2015
VL 41
IS 4
BP 331
EP 357
DI 10.1109/TSE.2014.2370048
PG 27
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA CG2PC
UT WOS:000353115800001
DA 2024-07-18
ER

PT J
AU Bennaceur, A
   Issarny, V
AF Bennaceur, Amel
   Issarny, Valerie
TI Automated Synthesis of Mediators to Support Component Interoperability
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Interoperability; constraint programming; automated synthesis;
   mediators; protocols
ID SEMANTIC WEB
AB Interoperability is a major concern for the software engineering field, given the increasing need to compose components dynamically and seamlessly. This dynamic composition is often hampered by differences in the interfaces and behaviours of independently-developed components. To address these differences without changing the components, mediators that systematically enforce interoperability between functionally-compatible components by mapping their interfaces and coordinating their behaviours are required. Existing approaches to mediator synthesis assume that an interface mapping is provided which specifies the correspondence between the operations and data of the components at hand. In this paper, we present an approach based on ontology reasoning and constraint programming in order to infer mappings between components' interfaces automatically. These mappings guarantee semantic compatibility between the operations and data of the interfaces. Then, we analyse the behaviours of components in order to synthesise, if possible, a mediator that coordinates the computed mappings so as to make the components interact properly. Our approach is formally-grounded to ensure the correctness of the synthesised mediator. We demonstrate the validity of our approach by implementing the MICS (Mediator synthesIs to Connect Components) tool and experimenting it with various real-world case studies.
C1 [Issarny, Valerie] Inria, MiMove team, Paris, France.
C3 Inria
EM amel.bennaceur@open.ac.uk; valerie.issarny@inria.fr
RI Bennaceur, Amel/V-2365-2019
OI Bennaceur, Amel/0000-0002-6124-9622
FU FP7 CONNECT project; ERC Advanced Grant [291652]; European Research
   Council (ERC) [291652] Funding Source: European Research Council (ERC)
FX We gratefully acknowledge Daniel Sykes, Animesh Pathak and Thiago
   Teixeira for their insightful comments. We thank Thierry Martinez for
   his help on MICS as well as Emil Andriescu and Roberto Speicys Cardoso
   for their collaboration in the Event Management case study. We would
   like to thank the referees for their thorough reviews, helpful comments,
   and corrections that have improved this paper. We would like to
   acknowledge that this research was supported by the FP7 CONNECT project
   and ERC Advanced Grant no. 291652 (ASAP).
CR Algergawy A, 2010, LECT NOTES COMPUT SC, V6189, P114, DOI 10.1007/978-3-642-13911-6_8
   [Anonymous], 1989, C RECORD 16 ANN ACM, DOI DOI 10.1145/75277.75293
   Autili M, 2007, PROC INT CONF SOFTW, P784
   Baader F., 2003, DESCRIPTION LOGIC HD
   Baresi L, 2006, COMPUTER, V39, P36, DOI 10.1109/MC.2006.362
   Ben Mokhtar S, 2007, J SYST SOFTWARE, V80, P1941, DOI 10.1016/j.jss.2007.03.002
   Bencomo N, 2013, COMPUTING, V95, P167, DOI 10.1007/s00607-012-0224-x
   Bennaceur Amel, 2012, The Semantic Web. 11th International Semantic Web Conference (ISWC 2012). Proceedings, P17, DOI 10.1007/978-3-642-35173-0_2
   Bennaceur A., 2012, P INT WORKSH ET SYST, P16
   Bennaceur A., 2013, THESIS U PARIS 6 PAR
   Bennaceur A, 2014, LECT NOTES COMPUT SC, V8627, P283, DOI 10.1007/978-3-319-09970-5_25
   Berners-Lee T, 2001, SCI AM, V284, P34, DOI 10.1038/scientificamerican0501-34
   Blair GS, 2011, LECT NOTES COMPUT SC, V7049, P410
   Bloem R, 2012, J COMPUT SYST SCI, V78, P911, DOI 10.1016/j.jcss.2011.08.007
   Borgida A., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P378, DOI 10.1109/ICSE.1999.841028
   BRAND D, 1983, J ACM, V30, P323, DOI 10.1145/322374.322380
   Brogi A, 2006, LECT NOTES COMPUT SC, V4294, P27
   Bromberg YD, 2011, LECT NOTES COMPUT SC, V7049, P390
   Calero C., 2006, Ontologies for software engineering and software technology
   Cavallaro L, 2009, LECT NOTES COMPUT SC, V5900, P159, DOI 10.1007/978-3-642-10383-4_11
   Cavallaro Luca., 2012, Workshop on Models at run. time, P17
   Chang H, 2009, PROC INT CONF SOFTW, P166, DOI 10.1109/ICSE.2009.5070518
   Cimpian E., 2005, P 3 INT C BUS PROC M, P130
   d'Aquin M, 2012, J WEB SEMANT, V11, P96, DOI 10.1016/j.websem.2011.08.005
   Gamma Erich., 1994, DESIGN PATTERNS
   Garlan D, 2009, IEEE SOFTWARE, V26, P66, DOI 10.1109/MS.2009.86
   Gierds C, 2012, IEEE T SERV COMPUT, V5, P72, DOI 10.1109/TSC.2010.57
   Guarino N, 2004, LECT NOTES COMPUT SC, V3290, P599
   Hoare C. A. R., 2004, P INT C 25 YEARS COM, P36
   Inverardi P, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P3, DOI 10.1109/ICSE.2013.6606546
   Issarny V, 2009, 2009 14TH IEEE INTERNATIONAL CONFERENCE ON ENGINEERING OF COMPLEX COMPUTER SYSTEMS (ICECCS), P154, DOI 10.1109/ICECCS.2009.44
   Issarny E, 2011, LECT NOTES COMPUT SC, V6659, P217, DOI 10.1007/978-3-642-21455-4_7
   KELLER RM, 1976, COMMUN ACM, V19, P371, DOI 10.1145/360248.360251
   Konstantas D., 2006, INTEROPERABILITY ENT
   Krka I., 2010, 2010 32nd International Conference on Software Engineering (ICSE), P179, DOI 10.1145/1810295.1810324
   Laburthe F, 2003, LECT NOTES COMPUT SC, V2833, P878
   LISKOV BH, 1994, ACM T PROGR LANG SYS, V16, P1811, DOI 10.1145/197320.197383
   Lorenzoli D, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P501, DOI 10.1145/1368088.1368157
   Magee Jeff., 2006, CONCURRENCY STATE MO
   Maier MW, 1996, J SYST SOFTWARE, V32, P101, DOI 10.1016/0164-1212(94)00063-8
   Martin D, 2007, WORLD WIDE WEB, V10, P243, DOI 10.1007/s11280-007-0033-x
   Mateescu R, 2012, IEEE T SOFTWARE ENG, V38, P755, DOI 10.1109/TSE.2011.62
   Menge F., 2007, Free and Open-Source Software Conference, P1
   Morris E., 2004, CMUSEI2004TR004ESC20
   Motahari Nezhad H.R., 2010, Protocol-aware matching of web service interfaces for adapter development, P731
   OLDHAM N., 2004, SWSWPC, P137
   Paolucci M, 2002, INT SEM WEB C, P333
   Rossi F, 2006, FOUND ARTIF INTELL, P1
   Shadbolt N, 2006, IEEE INTELL SYST, V21, P96, DOI 10.1109/MIS.2006.62
   Shaw M., 1995, SIGSOFT Software Engineering Notes, P3, DOI 10.1145/223427.211783
   Shvaiko P, 2005, LECT NOTES COMPUT SC, V3730, P146
   Spitznagel B, 2003, PROC INT CONF SOFTW, P374, DOI 10.1109/ICSE.2003.1201216
   Sykes D, 2011, P 6 INT S SOFTW ENG, P100, DOI [10.1145/1988008.1988023, DOI 10.1145/1988008.1988023]
   United Nations Educational Scientific and Cultural Organization (UNESCO), 2018, INT TECHN GUID SEX E
   Vaculín R, 2007, 2007 IEEE INTERNATIONAL CONFERENCE ON WEB SERVICES, PROCEEDINGS, P1032
   WIEDERHOLD G, 1992, COMPUTER, V25, P38, DOI 10.1109/2.121508
   Yellin DM, 1997, ACM T PROGR LANG SYS, V19, P292, DOI 10.1145/244795.244801
NR 57
TC 30
Z9 30
U1 0
U2 3
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAR
PY 2015
VL 41
IS 3
BP 221
EP 240
DI 10.1109/TSE.2014.2364844
PG 20
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA CD9ZG
UT WOS:000351460000001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Tian, C
   Duan, ZH
   Duan, Z
AF Tian, Cong
   Duan, Zhenhua
   Duan, Zhao
TI Making CEGAR More Efficient in Software Model Checking
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Model checking; formal verification; abstraction; refinement; CEGAR
ID GUIDED ABSTRACTION REFINEMENT; AUTOMATED ABSTRACTION; COUNTEREXAMPLE;
   VERIFICATION
AB Counter-example guided abstraction refinement (CEGAR) is widely used in software model checking. With an abstract model, the state space is largely reduced, however, a counterexample found in such a model that does not satisfy the desired property may not exist in the concrete model. Therefore, how to check whether a reported counterexample is spurious is a key problem in the abstraction-refinement loop. Next, in the case that a spurious counterexample is found, the abstract model needs to be further refined where an NP-hard state separation problem is often involved. Thus, how to refine the abstract model efficiently has attracted a great attention in the past years. In this paper, by re-analyzing spurious counterexamples, a new formal definition of spurious paths is given. Based on it, efficient algorithms for detecting spurious counterexamples are presented. By the new algorithms, when dealing with infinite counterexamples, the finite prefix to be analyzed will be polynomially shorter than the one dealt with by the existing algorithms. Moreover, in practical terms, the new algorithms can naturally be parallelized that enables multi-core processors contributes more in spurious counterexample checking. In addition, a novel refining approach by adding extra Boolean variables to the abstract model is presented. With this approach, not only the NP-hard state separation problem can be avoided, but also a smaller refined abstract model can be obtained. Experimental results show that the new algorithms perform well in practice.
C1 [Tian, Cong; Duan, Zhenhua; Duan, Zhao] Xidian Univ, ICTT & ISN Lab, Xian 710071, Peoples R China.
C3 Xidian University
RP Tian, C (corresponding author), Xidian Univ, ICTT & ISN Lab, Xian 710071, Peoples R China.
EM ctian@mail.xidian.edu.cn; zhhduan@mail.xidian.edu.cn;
   duanzhao@stu.xidian.edu.cn
RI tian, cong/KUD-1813-2024
FU NSFC [61322202, 61133001, 61420106004]; 973 Program [2010CB328102]
FX A preliminary and abridged version of this paper was presented at the
   35th International Conference on Software Engineering (ICSE 2013)[ 30].
   This research was supported by the NSFC Grant No. 61322202, 61133001,
   and 61420106004, and 973 Program Grant No. 2010CB328102. Zhenhua Duan is
   the corresponding author.
CR Ball T., 2010, 2010 Formal Methods in Computer-Aided Design (FMCAD 2010), P35
   Ball T, 2001, ACM SIGPLAN NOTICES, V36, P203, DOI 10.1145/381694.378846
   Beyer Dirk, 2011, Computer Aided Verification. Proceedings 23rd International Conference, CAV 2011, P184, DOI 10.1007/978-3-642-22110-1_16
   Beyer Dirk, 2007, International Journal on Software Tools for Technology Transfer, V9, P505, DOI 10.1007/s10009-007-0044-z
   Beyer Dirk, 2009, Proceedings of the 2009 9th International Conference Formal Methods in Computer-Aided Design (FMCAD), P25, DOI 10.1109/FMCAD.2009.5351147
   Biere A., 2003, ADV COMPUTERS, V58
   Chauhan P, 2002, LECT NOTES COMPUT SC, V2517, P33
   Clarke E, 2003, J ACM, V50, P752, DOI 10.1145/876638.876643
   Clarke E. M., 2000, CMUCS00103 CARN MELL
   Clarke. E. M., 1982, LOGICS OF PROGRAMS, P52, DOI [10 . 1007 / BFb0025774, DOI 10.1007/BFB0025774]
   Clarke EA, 2004, IEEE T COMPUT AID D, V23, P1113, DOI 10.1109/TCAD.2004.829807
   Donaldson Alastair, 2011, Computer Aided Verification. Proceedings 23rd International Conference, CAV 2011, P356, DOI 10.1007/978-3-642-22110-1_28
   Donaldson AF, 2012, FORM METHOD SYST DES, V41, P25, DOI 10.1007/s10703-012-0155-3
   Glusman M, 2003, LECT NOTES COMPUT SC, V2619, P176
   Govindaraju SG, 2000, ICCAD - 2000 : IEEE/ACM INTERNATIONAL CONFERENCE ON COMPUTER AIDED DESIGN, P115, DOI 10.1109/ICCAD.2000.896460
   He F, 2010, IEEE T COMPUT, V59, P116, DOI 10.1109/TC.2009.105
   Henzinger TA, 2003, LECT NOTES COMPUT SC, V2648, P235
   Henzinger TA, 2002, ACM SIGPLAN NOTICES, V37, P58, DOI 10.1145/565816.503279
   Kripke Saul A., 1963, Zeitschrift fur mathematische Logik und Grundlagen der Mathematik, V9, P67, DOI DOI 10.1002/MALQ.19630090502
   Kurshan R, 1998, LECT NOTES COMPUT SC, V1384, P345, DOI 10.1007/BFb0054182
   Kurshan R.P., 1994, COMPUTER AIDED VERIF
   McMillan K. L., 1993, Symbolic model checking
   MCMILLAN KL, 1995, FORM METHOD SYST DES, V6, P45, DOI 10.1007/BF01384314
   Quielle J.P., 1981, P 5 INT S PROGRAMMIN, V131, P337
   Rushby J, 1999, LECT NOTES COMPUT SC, V1680, P1
   Tian C., 2014, 20140708 XID U
   Tian C, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P202, DOI 10.1109/ICSE.2013.6606566
   Wang C, 2006, IEEE T COMPUT AID D, V25, P2297, DOI 10.1109/TCAD.2006.873897
NR 28
TC 18
Z9 19
U1 0
U2 14
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD DEC
PY 2014
VL 40
IS 12
BP 1206
EP 1223
DI 10.1109/TSE.2014.2357442
PG 18
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA AW4AQ
UT WOS:000346224400004
DA 2024-07-18
ER

PT J
AU Pei, Y
   Furia, CA
   Nordio, M
   Wei, Y
   Meyer, B
   Zeller, A
AF Pei, Yu
   Furia, Carlo A.
   Nordio, Martin
   Wei, Yi
   Meyer, Bertrand
   Zeller, Andreas
TI Automated Fixing of Programs with Contracts
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Automatic program repair; contracts; dynamic analysis
ID TEST-DRIVEN DEVELOPMENT; QUALITY; REPAIR; ERRORS
AB This paper describes AutoFix, an automatic debugging technique that can fix faults in general-purpose software. To provide high-quality fix suggestions and to enable automation of the whole debugging process, AutoFix relies on the presence of simple specification elements in the form of contracts (such as pre- and postconditions). Using contracts enhances the precision of dynamic analysis techniques for fault detection and localization, and for validating fixes. The only required user input to the AutoFix supporting tool is then a faulty program annotated with contracts; the tool produces a collection of validated fixes for the fault ranked according to an estimate of their suitability. In an extensive experimental evaluation, we applied AutoFix to over 200 faults in four code bases of different maturity and quality (of implementation and of contracts). AutoFix successfully fixed 42 percent of the faults, producing, in the majority of cases, corrections of quality comparable to those competent programmers would write; the used computational resources were modest, with an average time per fix below 20 minutes on commodity hardware. These figures compare favorably to the state of the art in automated program fixing, and demonstrate that the AutoFix approach is successfully applicable to reduce the debugging burden in real-world scenarios.
C1 [Pei, Yu; Furia, Carlo A.; Nordio, Martin; Meyer, Bertrand] Swiss Fed Inst Technol, Chair Software Engn, Dept Comp Sci, Zurich, Switzerland.
   [Wei, Yi] Microsoft Res Cambridge, Constraint Reasoning Grp, Cambridge, England.
   [Zeller, Andreas] Univ Saarland, Software Engn Chair, D-66123 Saarbrucken, Germany.
C3 Swiss Federal Institutes of Technology Domain; ETH Zurich; Microsoft;
   Saarland University
RP Pei, Y (corresponding author), Swiss Fed Inst Technol, Chair Software Engn, Dept Comp Sci, Zurich, Switzerland.
RI Pei, Yu/GRI-9837-2022; Pei, Yu/JJD-3994-2023
OI Pei, Yu/0000-0001-6065-6958; Furia, Carlo A./0000-0003-1040-3201;
   Zeller, Andreas/0000-0003-4719-8803
FU Hasler-Stiftung [2327]; Deutsche Forschungsgemeinschaft [Ze509/4-1];
   Swiss National Science Foundation [200021-134976]; Swiss National
   Supercomputing Centre (CSCS) [s264]; Swiss National Science Foundation
   (SNF) [200021_134976] Funding Source: Swiss National Science Foundation
   (SNF)
FX This work was partially funded by the Hasler-Stiftung (Grant no. 2327)
   and by the Deutsche Forschungsgemeinschaft (Ze509/4-1) under the title
   "AutoFix-Programs that fix themselves"; and by the Swiss National
   Science Foundation (Project 200021-134976: "Automated Support for
   Invariant Inference"). We also gratefully acknowledge the support of the
   Swiss National Supercomputing Centre (CSCS) for the experiments (Project
   s264). The concept of generating fixes from differences in passing and
   failing runs was conceived with Andreas Leitner. Stefan Buchholz and
   Lucas S. Silva contributed to an early implementation of AutoFix.
CR Abraham R, 2005, 2005 IEEE SYMPOSIUM ON VISUAL LANGUAGE AND HUMAN-CENTRIC COMPUTING, PROCEEDINGS, P37, DOI 10.1109/VLHCC.2005.42
   Abraham R, 2008, 2008 IEEE SYMPOSIUM ON VISUAL LANGUAGES AND HUMAN-CENTRIC COMPUTING, PROCEEDINGS, P131, DOI 10.1109/VLHCC.2008.4639073
   [Anonymous], 1970, ACM SIGPLAN NOTICES, DOI DOI 10.1145/390013.808479
   [Anonymous], EMPIRICAL SOFTWARE E
   [Anonymous], EIFFELBASE2
   [Anonymous], 2013, P 2013 INT S SOFTW T
   [Anonymous], 2004, Ph.D. dissertation
   [Anonymous], P COLL TEACH GLOB DI
   [Anonymous], P THREAD VER WORKSH
   [Anonymous], P INT C SOFTW MAINT
   Arcuri A, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1, DOI 10.1145/1985793.1985795
   Arcuri A, 2011, APPL SOFT COMPUT, V11, P3494, DOI 10.1016/j.asoc.2011.01.023
   Arcuri A, 2008, IEEE C EVOL COMPUTAT, P162, DOI 10.1109/CEC.2008.4630793
   Beck K., 2002, TEST DRIVEN DEV
   Berger ED, 2012, COMMUN ACM, V55, P48, DOI 10.1145/2330667.2330683
   Bessey A, 2010, COMMUN ACM, V53, P66, DOI 10.1145/1646353.1646374
   Carzaniga A., 2010, Proceedings of the eighteenth ACM SIGSOFT international symposium on Foundations of software engineering, P237
   Carzaniga A, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P782, DOI 10.1109/ICSE.2013.6606624
   Chandra S, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P121, DOI 10.1145/1985793.1985811
   Chou Y., 1975, Statistical Analysis
   Dallmeier V., 2007, P 22 IEEE ACM INT C, P433
   Dallmeier V, 2009, IEEE INT CONF AUTOM, P550, DOI 10.1109/ASE.2009.15
   de Moura L, 2008, LECT NOTES COMPUT SC, V4963, P337, DOI 10.1007/978-3-540-78800-3_24
   Demsky B, 2003, ACM SIGPLAN NOTICES, V38, P78, DOI 10.1145/949343.949314
   Demsky B, 2008, LECT NOTES COMPUT SC, V5142, P490, DOI 10.1007/978-3-540-70592-5_21
   Demsky B, 2011, IEEE T SOFTWARE ENG, V37, P4, DOI 10.1109/TSE.2010.27
   Elkarablieh B, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P855, DOI 10.1145/1368088.1368222
   Ernst M. D., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P213, DOI 10.1109/ICSE.1999.841011
   Ernst MD, 2001, IEEE T SOFTWARE ENG, V27, P99, DOI 10.1109/32.908957
   Estler HC, 2014, LECT NOTES COMPUT SC, V8442, P230, DOI 10.1007/978-3-319-06410-9_17
   Godefroid P, 2012, COMMUN ACM, V55, P40, DOI 10.1145/2093548.2093564
   Gopinath D, 2011, LECT NOTES COMPUT SC, V6605, P173, DOI 10.1007/978-3-642-19835-9_15
   Gorla A, 2010, COMPUT INFORM, V29, P93
   He HF, 2004, LECT NOTES COMPUT SC, V2984, P267
   Nguyen HDT, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P772, DOI 10.1109/ICSE.2013.6606623
   Jeffrey D, 2009, INT C PROGRAM COMPRE, P70, DOI 10.1109/ICPC.2009.5090029
   Jin GL, 2011, ACM SIGPLAN NOTICES, V46, P389, DOI 10.1145/1993316.1993544
   Jobstmann B, 2012, J COMPUT SYST SCI, V78, P441, DOI 10.1016/j.jcss.2011.05.005
   Kim D, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P802, DOI 10.1109/ICSE.2013.6606626
   Le Goues C., 2012, IEEE Transactions on Software Engineering, V38, P54, DOI 10.1109/TSE.2011.104
   Le Goues C, 2012, PROCEEDINGS OF THE FOURTEENTH INTERNATIONAL CONFERENCE ON GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P959, DOI 10.1145/2330163.2330296
   Le Goues C, 2012, PROC INT CONF SOFTW, P3, DOI 10.1109/ICSE.2012.6227211
   Liu L, 2007, LECT NOTES COMPUT SC, V4454, P114
   Malik M. Z., 2011, Proceedings 2011 IEEE Fourth International Conference on Software Testing, Verification and Validation (ICST 2011), P190, DOI 10.1109/ICST.2011.65
   Malik MZ, 2009, IEEE INT CONF AUTOM, P620, DOI 10.1109/ASE.2009.92
   Maximilien EM, 2003, PROC INT CONF SOFTW, P564, DOI 10.1109/ICSE.2003.1201238
   Mayer Wolfgang, 2008, 2008 23rd IEEE/ACM International Conference on Automated Software Engineering, P128, DOI 10.1109/ASE.2008.23
   Meyer B., 2000, OBJECT ORIENTED SOFT, V2nd
   Meyer B, 2009, COMPUTER, V42, P46, DOI 10.1109/MC.2009.296
   Muchnick S., 1997, ADV COMPILER DESIGN
   Nagappan N, 2008, EMPIR SOFTW ENG, V13, P289, DOI 10.1007/s10664-008-9062-z
   Novark G, 2008, COMMUN ACM, V51, P87, DOI 10.1145/1409360.1409382
   Pan K, 2009, EMPIR SOFTW ENG, V14, P286, DOI 10.1007/s10664-008-9077-5
   Pei Y, 2014, LECT NOTES COMPUT SC, V8411, P246
   Pei Y, 2014, IEEE T SOFTWARE ENG, V40, P427, DOI 10.1109/TSE.2014.2312918
   Penix J, 2012, PROC INT CONF SOFTW, P1122
   Perkins JH, 2009, SOSP'09: PROCEEDINGS OF THE TWENTY-SECOND ACM SIGOPS SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES, P87
   Polikarpova N, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P262, DOI 10.1109/ICSE.2013.6606572
   Polikarpova N, 2010, LECT NOTES COMPUT SC, V6217, P127, DOI 10.1007/978-3-642-15057-9_9
   Polikarpova N, 2009, ISSTA 2009: INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P93
   Samimi H, 2012, PROC INT CONF SOFTW, P277, DOI 10.1109/ICSE.2012.6227186
   Samimi H, 2010, LECT NOTES COMPUT SC, V6183, P552, DOI 10.1007/978-3-642-14107-2_26
   Weimer W, 2010, COMMUN ACM, V53, P109, DOI 10.1145/1735223.1735249
   Weimer W, 2009, PROC INT CONF SOFTW, P364, DOI 10.1109/ICSE.2009.5070536
   Weimer Westley, 2006, Proceedings of the 5th International Conference on Generative Programming and Component Engineering (GPCE'06), P181, DOI DOI 10.1145/1173706.1173734
   Wong WE, 2010, J SYST SOFTWARE, V83, P188, DOI 10.1016/j.jss.2009.09.037
   Yu Pei, 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P392, DOI 10.1109/ASE.2011.6100080
NR 67
TC 153
Z9 163
U1 2
U2 17
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAY
PY 2014
VL 40
IS 5
BP 427
EP 449
DI 10.1109/TSE.2014.2312918
PG 23
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA AJ8JW
UT WOS:000337950500001
OA Green Submitted, Green Published
DA 2024-07-18
ER

PT J
AU Littlewood, B
   Povyakalo, A
AF Littlewood, Bev
   Povyakalo, Andrey
TI Conservative Reasoning about the Probability of Failure on Demand of a
   1-out-of-2 Software-Based System in Which One Channel Is "Possibly
   Perfect"
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Software reliability; fault tolerance; software perfection; probability
   of failure; epistemic uncertainty; software diversity; multiversion
   software
ID MULTIVERSION SOFTWARE; RELIABILITY; INDEPENDENCE; ASSUMPTION
AB In earlier work, [11] (henceforth LR), an analysis was presented of a 1-out-of-2 software-based system in which one channel was "possibly perfect". It was shown that, at the aleatory level, the system pfd (probability of failure on demand) could be bounded above by the product of the pfd of channel A and the pnp (probability of nonperfection) of channel B. This result was presented as a way of avoiding the well-known difficulty that for two certainly-fallible channels, failures of the two will be dependent, i.e., the system pfd cannot be expressed simply as a product of the channel pfds. A price paid in this new approach for avoiding the issue of failure dependence is that the result is conservative. Furthermore, a complete analysis requires that account be taken of epistemic uncertainty-here concerning the numeric values of the two parameters pfd(A) and pnp(B). Unfortunately this introduces a different difficult problem of dependence: estimating the dependence between an assessor's beliefs about the parameters. The work reported here avoids this problem by obtaining results that require only an assessor's marginal beliefs about the individual channels, i.e., they do not require knowledge of the dependence between these beliefs. The price paid is further conservatism in the results.
C1 [Littlewood, Bev; Povyakalo, Andrey] City Univ London, Ctr Software Reliabil, London EC1V 0HB, England.
C3 City University London
RP Littlewood, B (corresponding author), City Univ London, Ctr Software Reliabil, London EC1V 0HB, England.
EM b.littlewood@csr.city.ac.uk; andrey@csr.city.ac.uk
FU INDEED project; EPSRC; UnCoDe project; Leverhulme Trust; DISPO project;
   C&I Nuclear Industry Forum (CINIF) Nuclear Research Programme by EDF
   Energy Limited; Nuclear Decommissioning Authority (Sella-field Ltd.,
   Magnox Ltd.); AWE plc; Urenco UK Ltd.; Horizon Nuclear Power
FX The authors are grateful to the associate editor and four reviewers for
   thoughtful comments on an earlier version of this paper. Support for the
   work reported here came from: the INDEED project, funded by EPSRC; the
   UnCoDe project, funded by the Leverhulme Trust; the DISPO project-funded
   under the C&I Nuclear Industry Forum (CINIF) Nuclear Research Programme
   by EDF Energy Limited, the Nuclear Decommissioning Authority
   (Sella-field Ltd., Magnox Ltd.), AWE plc, Urenco UK Ltd., and Horizon
   Nuclear Power. The views expressed in this paper are those of the
   author(s) and do not necessarily represent the views of CINIF members.
   CINIF does not accept liability for any damage or loss incurred as a
   result of the information contained in this paper.
CR Bertolino A., 1998, J SOFTWARE TESTING V, V8, P155
   Bishop P, 2011, IEEE T SOFTWARE ENG, V37, P708, DOI 10.1109/TSE.2010.67
   Boeing, 2012, STAT SUMM COMM AIRPL
   BUTLER RW, 1993, IEEE T SOFTWARE ENG, V19, P3, DOI 10.1109/32.210303
   ECKHARDT DE, 1991, IEEE T SOFTWARE ENG, V17, P692, DOI 10.1109/32.83905
   ECKHARDT DE, 1985, IEEE T SOFTWARE ENG, V11, P1511, DOI 10.1109/TSE.1985.231895
   KNIGHT JC, 1986, IEEE T SOFTWARE ENG, V12, P96, DOI 10.1109/TSE.1986.6312924
   KRUSKAL W, 1988, J AM STAT ASSOC, V83, P929, DOI 10.2307/2290117
   LITTLEWOOD B, 1989, IEEE T SOFTWARE ENG, V15, P1596, DOI 10.1109/32.58771
   LITTLEWOOD B, 1993, COMMUN ACM, V36, P69, DOI 10.1145/163359.163373
   Littlewood B, 2001, ACM COMPUT SURV, V33, P177, DOI 10.1145/384192.384195
   Littlewood B, 2007, IEEE T SOFTWARE ENG, V33, P347, DOI 10.1109/TSE.2007.1002
   Littlewood B, 2012, IEEE T SOFTWARE ENG, V38, P1178, DOI 10.1109/TSE.2011.80
   Rouquet J.C., 1986, P 5 IFAC WORKSH SAF
   Wood R.T., 2010, DIVERSITY STRATEGIES
NR 15
TC 6
Z9 6
U1 0
U2 5
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD NOV
PY 2013
VL 39
IS 11
BP 1521
EP 1530
DI 10.1109/TSE.2013.35
PG 10
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 245YN
UT WOS:000326501200004
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Malavolta, I
   Lago, P
   Muccini, H
   Pelliccione, P
   Tang, A
AF Malavolta, Ivano
   Lago, Patricia
   Muccini, Henry
   Pelliccione, Patrizio
   Tang, Antony
TI What Industry Needs from Architectural Languages: A Survey
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Software architecture; architecture description languages; ADL; survey;
   empirical study
ID SOFTWARE ARCHITECTURE; COMPONENT MODEL; CLASSIFICATION; FRAMEWORK; ADL
AB Many times we are faced with the proliferation of definitions, concepts, languages, and tools in certain (research) topics. But often there is a gap between what is provided by existing technologies and what is needed by their users. The strengths, limitations, and needs of the available technologies can be dubious. The same applies to software architectures, and specifically to languages designed to represent architectural models. Tens of different architectural languages have been introduced by the research and industrial communities in the last two decades. However, it is unclear if they fulfill the user's perceived needs in architectural description. As a way to plan for next generation languages for architectural description, this study analyzes practitioners' perceived strengths, limitations, and needs associated with existing languages for software architecture modeling in industry. We run a survey by interviewing 48 practitioners from 40 different IT companies in 15 countries. Each participant is asked to fill in a questionnaire of 51 questions. By analyzing the data collected through this study, we have concluded that 1) while practitioners are generally satisfied with the design capabilities provided by the languages they use, they are dissatisfied with the architectural language analysis features and their abilities to define extra-functional properties; 2) architectural languages used in practice mostly originate from industrial development instead of from academic research; 3) more formality and better usability are required of an architectural language.
C1 [Malavolta, Ivano; Muccini, Henry; Pelliccione, Patrizio] Univ Aquila, Dipartimento Ingn & Sci Informaz & Matemat, I-67100 Laquila, Italy.
   [Lago, Patricia] Vrije Univ Amsterdam, Fac Sci, Dept Comp Sci, Software & Serv Grp S4, NL-1081 HV Amsterdam, Netherlands.
   [Tang, Antony] Swinburne Univ Technol, Fac Informat & Commun Technol, Ctr Software Anal & Testing, Hawthorn, Vic 3122, Australia.
C3 University of L'Aquila; Vrije Universiteit Amsterdam; Swinburne
   University of Technology
RP Malavolta, I (corresponding author), Univ Aquila, Dipartimento Ingn & Sci Informaz & Matemat, I-67100 Laquila, Italy.
EM ivano.malavolta@univaq.it; p.lago@vu.nl; henry.muccini@univaq.it;
   patrizio.pelliccione@univaq.it; atang@swin.edu.au
RI Lago, Patricia/ABH-2308-2020; Pelliccione, Patrizio/Q-5118-2019;
   Pelliccione, Patrizio/A-4105-2008; Tang, Antony/C-2459-2009; Malavolta,
   Ivano/E-9018-2017
OI Lago, Patricia/0000-0002-2234-0845; Pelliccione,
   Patrizio/0000-0002-5438-2281; Pelliccione, Patrizio/0000-0002-5438-2281;
   Muccini, Henry/0000-0001-6365-6515; Tang, Antony/0000-0002-3574-3977;
   Malavolta, Ivano/0000-0001-5773-8346
FU European Community [ARTEMIS-2010-1-269362, 257178]
FX The authors would like to thank the practitioners who invested time and
   effort in participating in this survey, and the members of the IFIP 2.10
   Working Group on Software Architecture for providing the authors with
   valuable feedback on the design of the questionnaire. They also
   acknowledge discussions with Eoin Woods (Artechra, United Kingdom),
   Philippe Kruchten (University of British Columbia, Canada), Rich
   Hilliard (consultant), and Andre van der Hoek (University of California,
   Irvine) on the extrovert versus introvert nature of architects' roles.
   This work received partial support from the European Community's Seventh
   Framework Programme FP7 20072013 under grant agreements: no.
   ARTEMIS-2010-1-269362 (project Prestoim-Provements of industrial Real
   time Embedded SysTems development prOcess http://www.presto-embedded.eu)
   and number 257178 (project CHOReOS-Large Scale Choreographies for the
   Future Internet http://www.choreos.eu).
CR Abi-Antoun M., 2005, ACM SIGSOFT Software Engineering Notes, V30, P1
   Allen R., 1997, ACM Transactions on Software Engineering and Methodology, V6, P213, DOI 10.1145/258077.258078
   [Anonymous], 2005, FUJ PROJ
   [Anonymous], 2012, ACME
   [Anonymous], 2010, Just Enough Software Architecture: a Risk-Driven Approach
   [Anonymous], 2011, ISO/IEC JTC 1/SC 7, DOI DOI 10.1007/BF01077867
   [Anonymous], 2005, CMUSEI2005HB004
   Binns P, 1996, INT J SOFTW ENG KNOW, V6, P201, DOI 10.1142/S0218194096000107
   Bosch J., 2000, Design and Use of Software Architectures: Adopting and Evolving a Product-Line Approach
   Bruneton E, 2006, SOFTWARE PRACT EXPER, V36, P1257, DOI 10.1002/spe.767
   Capretz LF, 2010, IT PROF, V12, P6, DOI 10.1109/MITP.2010.33
   Cassou Damien., 2009, GPCE '09: Proceedings of the 8th International Conference on Generative Programming and Component Engineering, P137
   Clements P. C., 1996, Proceedings of the 8th International Workshop on Software Specification and Design, P16, DOI 10.1109/IWSSD.1996.501143
   Cuenot P, 2010, LECT NOTES COMPUT SC, V6100, P297, DOI 10.1007/978-3-642-16277-0_11
   Dashofy E.M., 2001, P IEEE IFIP WORK C S
   Dashofy EM, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P266, DOI 10.1109/ICSE.2002.1007974
   Di Ruscio D., 2010, P ACM IEEE 32 INT C
   Feiler H.P., 2003, P IEEE RTAS WORKSH
   Garlan D, 2003, LECT NOTES COMPUT SC, V2804, P1
   Garlan D., 1993, Advances in software engineering and knowledge engineering, P1
   GARLAN D, 2000, P 3 INT C UN MOD LAN
   Garlan D, 2000, FDN COMPONENT BASED, P47
   Garlan David, 2010, SEI Series in Software Engineering, Vsecond
   Gomaa H., 2001, P WORKSH DESCR SOFTW
   Goulo M., 2003, P SPEC VER COMP BAS
   Hendricksen D., 2011, 12 ESSENTIAL SKILLS
   Hill RJ, 1998, APPLIED CRYSTALLOGRAPHY, P65, DOI 10.1145/288408.288425
   Hofmeister C., 1998, APPL SOFTWARE ARCHIT
   Hoorn JF, 2011, J SYST SOFTWARE, V84, P1424, DOI 10.1016/j.jss.2010.11.909
   Ivers J., 2004, CMUSEI2004TR008
   Kande M. M., 2002, SOFTWARE SYSTEM MODE, V2, P98
   Kitchenham B., 2002, ACM SIGSOFT Softw. Eng. Notes, V27, P17
   KRUCHTEN PB, 1995, IEEE SOFTWARE, V12, P42, DOI 10.1109/52.469759
   Kruchten P, 2008, J SYST SOFTWARE, V81, P2413, DOI 10.1016/j.jss.2008.08.025
   Lago P, 2009, J SYST SOFTWARE, V82, P168, DOI 10.1016/j.jss.2008.08.026
   Lankhorst MM, 2010, INT J INF SYST MODEL, V1, P1, DOI 10.4018/jismd.2010092301
   Luckham D. C., 1996, TECHNICAL REPORT
   MAGEE J, 1999, P 1 WORK IFIP C SOFT
   Mangano N., 2012, AUTOMAT SOFTW ENG, P1
   Medvidovic N, 2002, ACM T SOFTW ENG METH, V11, P2, DOI 10.1145/504087.504088
   Medvidovic N, 2000, IEEE T SOFTWARE ENG, V26, P70, DOI 10.1109/32.825767
   Medvidovic N, 2007, INFORM SOFTWARE TECH, V49, P12, DOI 10.1016/j.infsof.2006.08.006
   Miles M. B., 1984, Qualitative data analysis: An expanded sourcebook
   Muccini H, 2004, IEEE T SOFTWARE ENG, V30, P160, DOI 10.1109/TSE.2004.1271170
   Oppenheim A.N., 1992, QUESTIONNAIRE DESIGN
   Pandey R.K., 2010, ACM SIGSOFT Software Engineering Notes, V35, P1, DOI DOI 10.1145/1764810.1764828
   Pelliccione P, 2009, IEEE T SOFTWARE ENG, V35, P325, DOI 10.1109/TSE.2008.104
   Perez-Martinez J.E., 2004, P 1 EUR WORKSH SOFTW
   Perry D. E., 1992, SIGSOFT Software Engineering Notes, V17, P40, DOI 10.1145/141874.141884
   Petriu D, 2000, IEEE T SOFTWARE ENG, V26, P1049, DOI 10.1109/32.881717
   Pinto M, 2003, LECT NOTES COMPUT SC, V2830, P118
   Poort ER, 2011, 2011 9TH WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE (WICSA), P2, DOI 10.1109/WICSA.2011.11
   Qin W, 2003, COMPILER DESIGN HANDBOOK, P535
   Redwine S. T.  Jr., 1985, Proceedings of the 8th International Conference on Software Engineering (Cat. No.85CH2139-4), P189
   Robbins J.E., 1998, P 20 INT C SOFTW ENG
   Roh S., 2004, P 11 AS PAC SOFTW EN
   Selic B., 2001, P WORKSH DESCR SOFTW
   Shaw M, 2001, PROC INT CONF SOFTW, P657, DOI 10.1109/ICSE.2001.919147
   Shaw M., 1996, SOFTWARE ARCHITECTUR
   van Ommering R, 2000, COMPUTER, V33, P78, DOI 10.1109/2.825699
   Woods E., 2005, Artechra white paper
   Woods E, 2006, 5th Working IEEE/IFIP Conference on Software Architecture, Proceedings, P243
   Zhang PC, 2010, J SYST SOFTWARE, V83, P723, DOI 10.1016/j.jss.2009.11.709
NR 63
TC 176
Z9 183
U1 0
U2 12
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUN
PY 2013
VL 39
IS 6
BP 869
EP 891
DI 10.1109/TSE.2012.74
PG 23
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 149RG
UT WOS:000319338200010
DA 2024-07-18
ER

PT J
AU Aleti, A
   Buhnova, B
   Grunske, L
   Koziolek, A
   Meedeniya, I
AF Aleti, Aldeida
   Buhnova, Barbora
   Grunske, Lars
   Koziolek, Anne
   Meedeniya, Indika
TI Software Architecture Optimization Methods: A Systematic Literature
   Review
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Review
DE Software architecture optimization; systematic literature review;
   optimization methods; problem overview
ID REDUNDANCY ALLOCATION PROBLEM; MULTIOBJECTIVE GENETIC ALGORITHM;
   COMPONENT-BASED SYSTEMS; TIME-TO-FAILURE; RELIABILITY OPTIMIZATION; WEB
   SERVICES; DESIGN OPTIMIZATION; RESOURCE-ALLOCATION; AUTOMATED SELECTION;
   SEARCH APPROACH
AB Due to significant industrial demands toward software systems with increasing complexity and challenging quality requirements, software architecture design has become an important development activity and the research domain is rapidly evolving. In the last decades, software architecture optimization methods, which aim to automate the search for an optimal architecture design with respect to a (set of) quality attribute(s), have proliferated. However, the reported results are fragmented over different research communities, multiple system domains, and multiple quality attributes. To integrate the existing research results, we have performed a systematic literature review and analyzed the results of 188 research papers from the different research communities. Based on this survey, a taxonomy has been created which is used to classify the existing research. Furthermore, the systematic analysis of the research literature provided in this review aims to help the research community in consolidating the existing research efforts and deriving a research agenda for future developments.
C1 [Aleti, Aldeida] Monash Univ, Fac Informat Technol, Clayton Sch IT, Clayton, Vic 3800, Australia.
   [Buhnova, Barbora] Masaryk Univ, Fac Informat, Brno 60200, Czech Republic.
   [Grunske, Lars] Univ Kaiserslautern, Fac Comp Sci, D-67663 Kaiserslautern, Germany.
   [Koziolek, Anne] Univ Zurich, Dept Informat, CH-8050 Zurich, Switzerland.
   [Meedeniya, Indika] Swinburne Univ Technol, Fac ICT, Melbourne, Vic 3122, Australia.
C3 Monash University; Masaryk University Brno; University of
   Kaiserslautern; University of Zurich; Swinburne University of Technology
RP Aleti, A (corresponding author), Monash Univ, Fac Informat Technol, Clayton Sch IT, Clayton, Vic 3800, Australia.
EM aldeida.aleti@monash.edu; buhnova@fi.muni.cz; grunske@cs.uni-kl.de;
   koziolek@ifi.uzh.ch; imeedeniya@swin.edu.au
RI Aleti, Aldeida/AAE-8486-2019; Koziolek, Anne/AAG-5242-2020; Koziolek,
   Anne/T-2305-2019; Grunske, Lars/AAH-4550-2019; Buhnova,
   Barbora/J-3364-2013
OI Aleti, Aldeida/0000-0002-1716-690X; Koziolek, Anne/0000-0002-1593-3394;
   Grunske, Lars/0000-0002-8747-3745; Buhnova, Barbora/0000-0003-4205-101X
CR Abdelzaher TF, 1995, IEEE REAL TIME, P162, DOI 10.1109/REAL.1995.495206
   Abraham A, 2008, STUD COMPUT INTELL, V128, P327
   Agarwal M, 2010, J QUAL MAINT ENG, V16, P413, DOI 10.1108/13552511011084553
   Alander J.T., 2008, 941TEST U VAAS
   Aleti A., 2012, OPTIMIZATION SURVEY
   Aleti A, 2009, MOMPES: 2009 ICSE WORKSHOP ON MODEL-BASED METHODOLOGIES FOR PERVASIVE AND EMBEDDED SOFTWARE, P61, DOI 10.1109/MOMPES.2009.5069138
   Amari S.V., 2010, 2010 P ANN RELIABILI, P1, DOI DOI 10.1109/RAMS.2010.5448068
   Andrews JD, 2005, RELIAB ENG SYST SAFE, V87, P23, DOI 10.1016/j.ress.2004.03.026
   Aneja YP, 2004, IEEE T RELIAB, V53, P71, DOI 10.1109/TR.2004.824829
   [Anonymous], THESIS SWISS FEDERAL
   [Anonymous], 2008, P 3 INT WORKSH SERV, DOI DOI 10.1145/1387309.1387313
   [Anonymous], 2008, P 7 INT WORKSH SOFTW, DOI DOI 10.1145/1383559.1383562
   [Anonymous], P 19 ACM SIGSOFT S F
   [Anonymous], 2007, 42010 ISOIEC, pc1
   [Anonymous], 2004, SAE STAND, VAS5506
   Arafeh B, 2008, J SYST ARCHITECT, V54, P530, DOI 10.1016/j.sysarc.2007.10.001
   Arcuri A, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1, DOI 10.1145/1985793.1985795
   Ardagna D, 2005, 2005 IEEE International Conference on Web Services, Vols 1 and 2, Proceedings, P805
   Ardagna D, 2006, LECT NOTES COMPUT SC, V4276, P1273
   Ardagna D, 2007, IEEE T SOFTWARE ENG, V33, P369, DOI 10.1109/TSE.2007.1011.
   Ardagna D, 2010, J SYST SOFTWARE, V83, P1512, DOI 10.1016/j.jss.2010.03.045
   Avizienis A, 2004, IEEE T DEPEND SECURE, V1, P11, DOI 10.1109/TDSC.2004.2
   Aydin H, 2001, 22ND IEEE REAL-TIME SYSTEMS SYMPOSIUM, PROCEEDINGS, P95, DOI 10.1109/REAL.2001.990600
   Azaron A, 2009, COMPUT OPER RES, V36, P1562, DOI 10.1016/j.cor.2008.02.017
   Back T., 1996, EVOLUTIONARY ALGORIT
   Back Th., 2000, Parallel Problem Solving from Nature PPSN VI. 6th International Conference. Proceedings (Lecture Notes in Computer Science Vol.1917), P315
   Balasubramanian Jaiganesh, 2010, Proceedings of the 16th IEEE Real-Time and Embedded Technology and Applications Symposium (RTAS 2010), P69, DOI 10.1109/RTAS.2010.30
   Balsamo S, 2004, IEEE T SOFTWARE ENG, V30, P295, DOI 10.1109/TSE.2004.9
   Banerjee S, 2004, INTERNATIONAL CONFERENCE ON HARDWARE/SOFTWARE CODESIGN AND SYSTEM SYNTHESIS, P122
   Bass L., 2013, SOFTWARE ARCHITECTUR
   Becker S, 2009, J SYST SOFTWARE, V82, P3, DOI 10.1016/j.jss.2008.03.066
   Ben Hassine A, 2006, LECT NOTES COMPUT SC, V4273, P130
   Ben Mabrouk N, 2009, LECT NOTES COMPUT SC, V5896, P123, DOI 10.1007/978-3-642-10445-9_7
   Benazouz M., 2010, 2010 8th IEEE Workshop on Embedded Systems for Real-Time Multimedia (ESTIMedia 2010), P11, DOI 10.1109/ESTMED.2010.5666980
   Benini L, 2000, IEEE T VLSI SYST, V8, P299, DOI 10.1109/92.845896
   Benini L, 1998, 1998 INTERNATIONAL SYMPOSIUM ON LOW POWER ELECTRONICS AND DESIGN - PROCEEDINGS, P173, DOI 10.1109/LPE.1998.708184
   Berbner R, 2006, ICWS 2006: IEEE INTERNATIONAL CONFERENCE ON WEB SERVICES, PROCEEDINGS, P72
   Bhunia AK, 2010, APPL MATH COMPUT, V216, P929, DOI 10.1016/j.amc.2010.01.106
   Billionnet A, 2008, IEEE T RELIAB, V57, P507, DOI 10.1109/TR.2008.927807
   Blickle T., 1996, 16 TIK SWISS FED I T
   Blum C, 2003, ACM COMPUT SURV, V35, P268, DOI 10.1145/937503.937505
   Boone B, 2010, J SYST SOFTWARE, V83, P446, DOI 10.1016/j.jss.2009.09.033
   Burmester Sven, 2008, International Journal on Software Tools for Technology Transfer, V10, P207, DOI 10.1007/s10009-008-0067-0
   Busacca PG, 2001, RELIAB ENG SYST SAFE, V72, P59, DOI 10.1016/S0951-8320(00)00109-5
   Canfora G, 2008, J SYST SOFTWARE, V81, P1754, DOI 10.1016/j.jss.2007.12.792
   Canfora G, 2006, LECT NOTES COMPUT SC, V4294, P141
   Canfora G, 2005, GECCO 2005: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOLS 1 AND 2, P1069
   Cao L, 2005, LECT NOTES ARTIF INT, V3802, P679
   Cardellini V, 2007, 2007 IEEE INTERNATIONAL CONFERENCE ON WEB SERVICES, PROCEEDINGS, P743
   Cardellini V, 2006, SCW 2006: IEEE SERVICES COMPUTING WORKSHOPS, PROCEEDINGS, P105
   Cardellini V, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P131, DOI 10.1145/1595696.1595718
   Ceriani M., 2010, P GEN EV COMP C, P1267
   Chang RS, 2009, FUTURE GENER COMP SY, V25, P20, DOI 10.1016/j.future.2008.06.004
   Chen SH, 2007, COMPUTATIONAL INTELLIGENCE IN ECONOMICS AND FINANCE, VOL II, P1, DOI 10.1155/2007/41468
   Chen YS, 2010, REAL-TIME SYST, V44, P72, DOI 10.1007/s11241-009-9090-9
   Cheung L, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P111, DOI 10.1145/1368088.1368104
   Chou P, 1995, 1995 IEEE/ACM INTERNATIONAL CONFERENCE ON COMPUTER-AIDED DESIGN, P280, DOI 10.1109/ICCAD.1995.480024
   Coelho LD, 2009, CHAOS SOLITON FRACT, V41, P594, DOI 10.1016/j.chaos.2008.02.028
   Coelho LD, 2009, RELIAB ENG SYST SAFE, V94, P830, DOI 10.1016/j.ress.2008.09.001
   Coello C.A.C., 2002, COMPUTER METHODS APP, V20, P1245
   Coit D.W., 2000, INT J RELIABILITY QU, V7, P129, DOI DOI 10.1142/S0218539300000110
   Coit D.W., 2001, P INT C EUR SAF REL, P1
   Coit DW, 2006, IEEE T RELIAB, V55, P551, DOI 10.1109/TR.2006.879654
   Coit DW, 1998, IEEE T RELIAB, V47, P79, DOI 10.1109/24.690912
   Coit DW, 2002, COMPUT IND ENG, V41, P423, DOI 10.1016/S0360-8352(01)00066-3
   Coit DW, 1996, COMPUT OPER RES, V23, P515, DOI 10.1016/0305-0548(95)00056-9
   Coit DW, 2004, IEEE T RELIAB, V53, P369, DOI 10.1109/TR.2004.833312
   Coit DW, 2003, IIE TRANS, V35, P535, DOI [10.1080/07408170304420, 10.1090/07408170390183062]
   Coit DW, 2001, IIE TRANS, V33, P471, DOI 10.1023/A:1007689912305
   Coit DW, 1996, IEEE T RELIAB, V45, P254, DOI 10.1109/24.510811
   Cooray D., 2010, P IEEE ACM INT C AUT, P83
   Cortellessa V, 2008, J UNIVERS COMPUT SCI, V14, P1228
   Cortellessa V, 2006, LECT NOTES COMPUT SC, V4344, P66
   Cortellessa V, 2009, 1ST INTERNATIONAL SYMPOSIUM ON SEARCH BASED SOFTWARE ENGINEERING, PROCEEDINGS, P97, DOI 10.1109/SSBSE.2009.22
   Crescenzi P., 2000, SIRR9502
   Dai YS, 2007, IEEE T RELIAB, V56, P444, DOI 10.1109/TR.2007.903214
   Dave B.P., 1998, P 1998 INT C VLSI DE, P347
   Dave BP, 1999, IEEE T VLSI SYST, V7, P92, DOI 10.1109/92.748204
   De Falco I, 2007, LECT NOTES COMPUT SC, V4782, P322
   De Giovanni L, 2010, EUR J OPER RES, V200, P395, DOI 10.1016/j.ejor.2009.01.008
   de Oliveira Castro P., 2010, 2010 International Conference on High Performance Computing & Simulation (HPCS 2010), P171, DOI 10.1109/HPCS.2010.5547134
   Deb K., 2001, MULTIOBJECTIVE OPTIM, DOI DOI 10.1109/TEVC.2002.804322
   Di Penta Massimiliano., 2006, SOSE'06: Proceedings of the 2006 international workshop on Service-oriented software engineering, P74, DOI DOI 10.1145/1138486.1138502
   Dick RP, 1998, IEEE T COMPUT AID D, V17, P920, DOI 10.1109/43.728914
   Dogan A, 2005, COMPUT J, V48, P300, DOI 10.1093/comjnl/bxh086
   Dong W.-L., 2006, EDOCW 06 P 10 IEEE I, P46
   Dubey Vinod K., 2010, 2010 IEEE International Conference on Web Services (ICWS), P542, DOI 10.1109/ICWS.2010.33
   Dyba T, 2005, IEEE SOFTWARE, V22, P58, DOI 10.1109/MS.2005.6
   Eames BK, 2010, DES AUTOM EMBED SYST, V14, P43, DOI 10.1007/s10617-009-9049-z
   El Haddad J, 2010, IEEE T SERV COMPUT, V3, P73, DOI 10.1109/TSC.2010.5
   El-Sayed H., 2001, Performance Evaluation Review, V29, P301, DOI 10.1145/384268.378799
   Elegbede C, 2003, RELIAB ENG SYST SAFE, V82, P319, DOI 10.1016/j.ress.2003.08.001
   Emberson P., 2009, THESIS U YORK UK
   Erbas C, 2006, IEEE T EVOLUT COMPUT, V10, P358, DOI 10.1109/TEVC.2005.860766
   ERNST R, 1993, IEEE DES TEST COMPUT, V10, P64, DOI 10.1109/54.245964
   Etminani K, 2007, 2007 THIRD IEEE/IFIP INTERNATIONAL CONFERENCE IN CENTRAL ASIA ON INTERNET, P167
   Fiondella L., 2008, P IPDPS 2008, P1
   FitzRoy-Dale N., 2009, P 2 WORKSH IS INT EM, P31
   Giese H., 2003, P 2 WORKSH AG OR MET
   Girault A, 2009, J PARALLEL DISTR COM, V69, P326, DOI 10.1016/j.jpdc.2008.11.002
   Glaser B. G., 1967, DISCOVERY GROUNDED T, DOI 10.1515/9783111660211/html
   Glass M., 2010, P INT WORKSH REL AW, P17
   Gokhale SS, 2004, IEEE SYMP COMP COMMU, P1098, DOI 10.1109/ISCC.2004.1358686
   Gokhale SS, 2004, P REL MAINT S, P195, DOI 10.1109/RAMS.2004.1285447
   Goldberg D. E., 1989, GENETIC ALGORITHMS S
   Goseva-Popstojanova K, 2001, PERFORM EVALUATION, V45, P179, DOI 10.1016/S0166-5316(01)00034-7
   Greiner D, 2003, LECT NOTES COMPUT SC, V2632, P722
   Grunske L., 2006, 28th International Conference on Software Engineering Proceedings, P849, DOI 10.1145/1134285.1134431
   Grunske L, 2005, SIXTH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERNG, ARTIFICIAL INTELLIGENCE, NETWORKING AND PARALLEL/DISTRIBUTED COMPUTING AND FIRST AICS INTERNATIONAL WORKSHOP ON SELF-ASSEMBLING WIRELESS NETWORKS, PROCEEDINGS, P324, DOI 10.1109/SNPD-SAWN.2005.37
   Grunske L, 2007, LECT NOTES COMPUT SC, V4615, P188
   Grunske L, 2007, J SYST SOFTWARE, V80, P678, DOI 10.1016/j.jss.2006.08.014
   Grunske L, 2008, IEEE HI ASS SYS ENGR, P283, DOI 10.1109/HASE.2008.32
   Guo HP, 2007, 2007 IEEE INTERNATIONAL CONFERENCE ON WEB SERVICES, PROCEEDINGS, P280
   Gupta R. K., 1995, COSYNTHESIS HARDWARE
   Hadj-Alouane A. B., 1999, Journal of Scheduling, V2, P189, DOI 10.1002/(SICI)1099-1425(199907/08)2:4<189::AID-JOS25>3.0.CO;2-I
   Hamza-Lup G., 2008, P 2 IEEE INT SYST C, P1
   Harman M., 2009, TR0903 KINGS COLL LO
   Harman M, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P342, DOI 10.1109/FOSE.2007.29
   Hashemi M, 2009, ACM T EMBED COMPUT S, V8, DOI 10.1145/1457255.1457258
   He XQ, 2010, COMPUT J, V53, P1071, DOI 10.1093/comjnl/bxp084
   HENKEL J, 1994, IEEE IC CAD, P96
   Hong I, 1999, IEEE T COMPUT AID D, V18, P1702, DOI 10.1109/43.811318
   HOU CJ, 1992, REAL-TIME SYSTEMS SYMPOSIUM : PROCEEDINGS, P146, DOI 10.1109/REAL.1992.242668
   Huang HZ, 2009, IIE TRANS, V41, P287, DOI 10.1080/07408170802322994
   Int?l Standards Organization, 2001, 91261 ISOIEC
   Islam S, 2007, LECT NOTES COMPUT SC, V4808, P517
   Islam S, 2006, NINTH IEEE INTERNATIONAL SYMPOSIUM ON OBJECT AND COMPONENT-ORIENTED REAL-TIME DISTRIBUTED COMPUTING, PROCEEDINGS, P485, DOI 10.1109/ISORC.2006.26
   Izosimov V, 2005, DES AUT TEST EUROPE, P864, DOI 10.1109/DATE.2005.116
   Jafarpour N, 2010, INT CONF ADV COMMUN, P1345
   Jiang HY, 2007, IEEE C EVOL COMPUTAT, P2210
   Kaya K, 2009, PARALLEL PROCESS LET, V19, P451, DOI 10.1142/S012962640900033X
   Kim YJ, 2006, J VLSI SIG PROC SYST, V44, P269, DOI 10.1007/s11265-006-8539-5
   Kishor A, 2007, ICCIMA 2007: INTERNATIONAL CONFERENCE ON COMPUTATIONAL INTELLIGENCE AND MULTIMEDIA APPLICATIONS, VOL I, PROCEEDINGS, P458, DOI 10.1109/ICCIMA.2007.55
   Kitchenham B., 2004, PROCEDURES PERFORMIN, V33, P1
   Ko JM, 2008, J SYST SOFTWARE, V81, P2079, DOI 10.1016/j.jss.2008.04.044
   Kokash N, 2007, LECT NOTES COMPUT SC, V4439, P180
   Koziolek A., 2011, THESIS I PROGRAMMSTR
   Koziolek A., 2011, Proceedings of the 14th international ACM Sigsoft symposium on Component based software engineering - CBSE'11 p, P103, DOI DOI 10.1145/2000229.2000244
   Koziolek H, 2010, PERFORM EVALUATION, V67, P634, DOI 10.1016/j.peva.2009.07.007
   Krippendorff K., 2018, CONTENT ANAL INTRO I
   Kulturel-Konak S, 2003, IIE TRANS, V35, P515, DOI 10.1080/07408170390193044
   Kulturel-Konak S, 2008, J HEURISTICS, V14, P335, DOI 10.1007/s10732-007-9041-3
   Künzli S, 2005, IEE P-COMPUT DIG T, V152, P183, DOI 10.1049/ip-cdt:20045081
   Kunzli S., 2006, THESIS SWISS FEDERAL
   Laalaoui Y, 2009, 2009 IEEE SYMPOSIUM ON COMPUTATIONAL INTELLIGENCE IN SCHEDULING: (CI-SCHED), P1, DOI 10.1109/SCIS.2009.4927007
   Lee C, 2010, J SIGNAL PROCESS SYS, V58, P193, DOI 10.1007/s11265-009-0351-6
   Li H., 2010, Proceedings of the first joint WOSP/SIPEW international conference on Performance engineering, P117
   Li J, 2009, ACM/IEEE SIXTH INTERNATIONAL CONFERENCE ON AUTONOMIC COMPUTING AND COMMUNICATIONS (ICAC '09), P159
   Li R, 2011, IEEE C EVOL COMPUTAT, P432
   Liang YC, 2007, RELIAB ENG SYST SAFE, V92, P323, DOI 10.1016/j.ress.2006.04.013
   Liang YC, 2010, J HEURISTICS, V16, P511, DOI 10.1007/s10732-009-9108-4
   Limbourg P, 2008, RELIAB ENG SYST SAFE, V93, P815, DOI 10.1016/j.ress.2007.03.032
   Lukasiewycz M, 2008, ASIA S PACIF DES AUT, P661
   Malek S, 2005, IEEE T SOFTWARE ENG, V31, P256, DOI 10.1109/TSE.2005.29
   Malek S., 2007, THESIS U SO CALIFORN
   Malek S, 2012, IEEE T SOFTWARE ENG, V38, P73, DOI 10.1109/TSE.2011.3
   Manoj BS, 2009, J PARALLEL DISTR COM, V69, P12, DOI 10.1016/j.jpdc.2008.08.006
   Mantere T, 2005, APPL SOFT COMPUT, V5, P315, DOI 10.1016/j.asoc.2004.08.004
   Marseguerra M, 2006, RELIAB ENG SYST SAFE, V91, P977, DOI 10.1016/j.ress.2005.11.046
   Marseguerra M, 2004, RELIAB ENG SYST SAFE, V84, P87, DOI 10.1016/S0951-8320(03)00175-3
   Marseguerra Marzio., 2007, Computational Intelligence in Reliability Engineering, P101, DOI DOI 10.1007/978-3-540-37368-1_4
   Martens A., 2010, P 1 JOINT WOSP SIPEW, P105, DOI [DOI 10.1145/1712605.1712624, 10.1145]
   Martens A, 2010, LECT NOTES COMPUT SC, V6093, P84, DOI 10.1007/978-3-642-13821-8_8
   Marzia A., 2005, P 10 INT WORKSH EXPL, P387
   McMinn P, 2004, SOFTW TEST VERIF REL, V14, P105, DOI 10.1002/stvr.294
   Meedeniya I, 2012, J SYST SOFTWARE, V85, P2340, DOI 10.1016/j.jss.2012.04.056
   Meedeniya I, 2010, LECT NOTES COMPUT SC, V6093, P52, DOI 10.1007/978-3-642-13821-8_6
   Mehta N. R., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, P178, DOI 10.1109/ICSE.2000.870409
   Menasce D.A., 2004, PERFORMANCE DESIGN
   Menasce D.A., 2010, WOSP SIPEW 10, P27
   Menasce DA, 2007, 2007 IEEE INTERNATIONAL CONFERENCE ON WEB SERVICES, PROCEEDINGS, P422
   Menascé DA, 2007, PERFORM EVALUATION, V64, P646, DOI 10.1016/j.peva.2006.10.001
   MICHALEWICZ Z, 1995, FROM ANIM ANIMAT, P135
   Mikic-Rakic M, 2005, LECT NOTES COMPUT SC, V3798, P83
   Moreira O., 2007, Proceedings of the 7th ACM/IEEE international conference on Embedded software, P57
   Moser I., 2010, P IEEE C EV COMP CEC, P1
   Nicholson M, 1996, SECOND IEEE INTERNATIONAL CONFERENCE ON ENGINEERING OF COMPLEX COMPUTER SYSTEMS, P522, DOI 10.1109/ICECCS.1996.558558
   Nicholson M., 1998, THESIS U YORK
   Nicholson M., 1997, TECHNICAL REPORT
   Oh H, 1999, HARDW SOFTW CODES, P183, DOI 10.1109/HSC.1999.777429
   Ortmeier R, 2004, 2004 INTERNATIONAL CONFERENCE ON DEPENDABLE SYSTEMS AND NETWORKS, PROCEEDINGS, P651
   Ouzineb M, 2008, RELIAB ENG SYST SAFE, V93, P1257, DOI 10.1016/j.ress.2007.06.004
   Ouzineb M, 2010, COMPUT OPER RES, V37, P223, DOI 10.1016/j.cor.2009.04.011
   PAINTON L, 1995, IEEE T RELIAB, V44, P172, DOI 10.1109/24.387368
   Papadopoulos Y, 2005, J SYST SOFTWARE, V76, P77, DOI 10.1016/j.jss.2004.06.027
   Pattison RL, 1999, P I MECH ENG E-J PRO, V213, P187, DOI 10.1243/0954408991529924
   Pezoa J.E., 2009, TASK REALLOCATION MA
   Pezoa JE, 2010, IEEE T PARALL DISTR, V21, P1531, DOI 10.1109/TPDS.2010.34
   Pimentel AD, 2006, IEEE T COMPUT, V55, P99, DOI 10.1109/TC.2006.16
   Pop F, 2009, INT C INTELL COMP CO, P299, DOI 10.1109/ICCP.2009.5284747
   Potena Pasqualina., 2007, Joint Meeting of the European Software Engineering Conference and ACM SIGSOFT Symposium on the Foundations of Software Engineering (ESEC/FSE), P583
   Pretschner A, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P55, DOI 10.1109/FOSE.2007.22
   Qin X, 2005, J PARALLEL DISTR COM, V65, P885, DOI [10.1016/j.jpds.2005.02.003, 10.1016/j.jpdc.2005.02.003]
   Qinru Qiu, 1999, Proceedings 1999 Design Automation Conference (Cat. No. 99CH36361), P555, DOI 10.1109/DAC.1999.781377
   Qiu QR, 2000, DES AUT CON, P352, DOI 10.1145/337292.337438
   Raiha O., 2008, D20084 U TAMP DEP CO
   Raiha O., 2009, P 11 ANN C COMP GEN, P2131, DOI DOI 10.1145/1570256.1570289
   Räihä O, 2010, COMPUT SCI REV, V4, P203, DOI 10.1016/j.cosrev.2010.06.001
   Räihä O, 2009, 2009 FOURTH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING ADVANCES (ICSEA 2009), P437, DOI 10.1109/ICSEA.2009.70
   Ren YS, 1998, IEEE T RELIAB, V47, P234
   Rezaie F, 2010, COMM COM INF SC, V88, P112
   Riauke J., 2008, Proceedings of the Institution of Mechanical Engineers, Part O (Journal of Risk and Reliability), V222, P271, DOI 10.1243/1748006XJRR113
   Rosenberg Florian, 2010, 2010 IEEE 7th International Conference on Services Computing (SCC 2010), P97, DOI 10.1109/SCC.2010.58
   Salazar D, 2006, RELIAB ENG SYST SAFE, V91, P1057, DOI 10.1016/j.ress.2005.11.040
   Saxena T, 2010, LECT NOTES COMPUT SC, V6394, P46
   Seo Chiyoung., 2007, Proceedings of the twentysecond IEEE/ACM international conference on Automated software engineering, ASE '07, P421
   Serban C, 2009, LECT NOTES ARTIF INT, V5572, P621, DOI 10.1007/978-3-642-02319-4_75
   Shan SQ, 2008, RELIAB ENG SYST SAFE, V93, P1218, DOI 10.1016/j.ress.2007.07.006
   Sharma VS, 2008, LECT NOTES COMPUT SC, V5282, P32, DOI 10.1007/978-3-540-87891-9_3
   Sharma VK, 2009, PROCEEDINGS OF 2009 8TH INTERNATIONAL CONFERENCE ON RELIABILITY, MAINTAINABILITY AND SAFETY, VOLS I AND II, P116, DOI 10.1109/ICRMS.2009.5270227
   Shin Y, 2000, ICCAD - 2000 : IEEE/ACM INTERNATIONAL CONFERENCE ON COMPUTER AIDED DESIGN, P365, DOI 10.1109/ICCAD.2000.896499
   Simunic T., 2000, MobiCom 2000. Proceedings of the Sixth Annual International Conference on Mobile Computing and Networking, P11, DOI 10.1145/345910.345914
   Stuijk S, 2007, DES AUT CON, P777, DOI 10.1109/DAC.2007.375269
   Suri N, 2010, J SYST SOFTWARE, V83, P1780, DOI 10.1016/j.jss.2010.04.063
   Taboada H., 2007, QUALITY TECHNOLOGY Q, V4, P191, DOI [10.1080/16843703.2007.11673145, DOI 10.1080/16843703.2007.11673145]
   Taboada HA, 2008, IEEE T RELIAB, V57, P182, DOI 10.1109/TR.2008.916874
   Taboada HA, 2007, RELIAB ENG SYST SAFE, V92, P314, DOI 10.1016/j.ress.2006.04.014
   Tahaee SA, 2010, ACM T EMBED COMPUT S, V9, DOI 10.1145/1721695.1721700
   Tang M., 2010, Evolutionary Computation (CEC), 2010 IEEE Congress on, P1
   Thiele L., 2002, P 1 WORKSH NETW PROC
   Tian ZG, 2009, RELIAB ENG SYST SAFE, V94, P1568, DOI 10.1016/j.ress.2009.02.021
   TINDELL KW, 1992, REAL-TIME SYST, V4, P145, DOI 10.1007/BF00365407
   Torres-Echeverría AC, 2009, RELIAB ENG SYST SAFE, V94, P162, DOI 10.1016/j.ress.2008.02.010
   Trcka N., 2011, 2011 International Conference on Embedded Computer Systems: Architectures, Modeling, and Simulation (SAMOS XI), P339, DOI 10.1109/SAMOS.2011.6045482
   Van Hemert JI, 2004, J HEURISTICS, V10, P629, DOI 10.1007/s10732-005-5433-4
   Vescan A.F., 2008, THESIS BABESI BOLYAI
   Vescan A, 2008, LECT NOTES ARTIF INT, V5271, P164, DOI 10.1007/978-3-540-87656-4_21
   Vescan A, 2009, UKSIM INT CONF COMP, P83, DOI 10.1109/UKSIM.2009.32
   Villegas Norha M., 2011, 2011 ICSE S SOFTW EN, P80
   Wada H, 2008, IEEE CONGRESS ON SERVICES 2008, PT I, PROCEEDINGS, P368, DOI 10.1109/SERVICES-1.2008.77
   Wadekar S. A., 1999, Proceedings 10th International Symposium on Software Reliability Engineering (Cat. No.PR00443), P104, DOI 10.1109/ISSRE.1999.809315
   Wang G., 2003, P 15 INT C PAR DISTR
   Wattanapongsakorn N, 2007, RELIAB ENG SYST SAFE, V92, P395, DOI 10.1016/j.ress.2005.12.011
   Wiangtong T, 2002, ANN IEEE SYM FIELD P, P297, DOI 10.1109/FPGA.2002.1106691
   Wiesemann W, 2008, IEEE ACM INT SYMP, P226
   Yang E, 2007, 2007 ECSIS SYMPOSIUM ON BIO-INSPIRED, LEARNING, AND INTELLIGENT SYSTEMS FOR SECURITY, PROCEEDINGS, P72, DOI 10.1109/BLISS.2007.20
   Yeh W.-C., 2010, COMP OPERATIONS RES, V38, P1465
   Youness H, 2009, 2009 INTERNATIONAL CONFERENCE ON COMPUTER ENGINEERING AND SYSTEMS (ICCES 2009), P231, DOI 10.1109/ICCES.2009.5383277
   Younis M, 2003, IEEE SYMP COMP COMMU, P329, DOI 10.1109/ISCC.2003.1214141
   Yun-Chia Liang, 2007, IMA Journal of Management Mathematics, V18, P135, DOI 10.1093/imaman/dpm010
   Zeng LZ, 2004, IEEE T SOFTWARE ENG, V30, P311, DOI 10.1109/TSE.2004.11
   Zhang CW, 2007, COMPUT COMMUN, V30, P1082, DOI 10.1016/j.comcom.2006.11.002
   Zhang WT, 2007, P INT COMP SOFTW APP, P425
   Zhao RQ, 2004, EUR J OPER RES, V157, P716, DOI 10.1016/S0377-2217(03)00272-8
   Zheng T, 2003, LECT NOTES COMPUT SC, V2794, P169
NR 245
TC 173
Z9 185
U1 3
U2 85
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAY
PY 2013
VL 39
IS 5
BP 658
EP 683
DI 10.1109/TSE.2012.64
PG 26
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 140GL
UT WOS:000318642300005
OA Green Accepted, Green Submitted
DA 2024-07-18
ER

PT J
AU Dallmeier, V
   Knopp, N
   Mallon, C
   Fraser, G
   Hack, S
   Zeller, A
AF Dallmeier, Valentin
   Knopp, Nikolai
   Mallon, Christoph
   Fraser, Gordon
   Hack, Sebastian
   Zeller, Andreas
TI Automatically Generating Test Cases for Specification Mining
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Specification mining; test case generation; typestate analysis
AB Dynamic specification mining observes program executions to infer models of normal program behavior. What makes us believe that we have seen sufficiently many executions? The TAUTOKO ("Tautoko" is the Maori word for "enhance, enrich.") typestate miner generates test cases that cover previously unobserved behavior, systematically extending the execution space, and enriching the specification. To our knowledge, this is the first combination of systematic test case generation and typestate mining-a combination with clear benefits: On a sample of 800 defects seeded into six Java subjects, a static typestate verifier fed with enriched models would report significantly more true positives and significantly fewer false positives than the initial models.
C1 [Dallmeier, Valentin; Knopp, Nikolai; Fraser, Gordon; Zeller, Andreas] Univ Saarland, Saarland Univ Chair Software Engn, D-66123 Saarbrucken, Germany.
   [Mallon, Christoph; Hack, Sebastian] Univ Saarland, Saarland Univ Compiler Design Lab, D-66123 Saarbrucken, Germany.
C3 Saarland University; Saarland University
RP Dallmeier, V (corresponding author), Univ Saarland, Saarland Univ Chair Software Engn, Campus E1 1, D-66123 Saarbrucken, Germany.
EM dallmeier@st.cs.uni-saarland.de; knopp@st.cs.uni-saarland.de;
   mallon@cdl.uni-saarland.de; fraser@st.cs.uni-saarland.de;
   hack@cdl.uni-saarland.de; zeller@cs.uni-saarland.de
OI Zeller, Andreas/0000-0003-4719-8803
FU Deutsche Forschungsgemeinschaft [Ze509/4-1]; Hasler-Stiftung [2327]
FX This work is funded by Deutsche Forschungsgemeinschaft, Ze509/4-1, and
   Hasler-Stiftung, Grant no. 2327. Klaas Boesche provided lots of support
   implementing JFTA. Andrzej Wasylkowski, David Schuler, and Yana Mileva
   provided helpful comments on earlier revisions of this paper.
CR Alkassar E, 2010, LECT NOTES COMPUT SC, V6217, P71, DOI 10.1007/978-3-642-15057-9_5
   Ammons G, 2002, ACM SIGPLAN NOTICES, V37, P4, DOI 10.1145/565816.503275
   [Anonymous], FATES
   [Anonymous], 2007, 6th joint meeting of the European Software Engineering Conference and the ACM SIGSOFT Symposium on the Foundations of Software Engineering (ESEC/FSE), DOI DOI 10.1145/1287624.1287632
   [Anonymous], 2007, P 2007 INT S SOFTWAR
   Bertolino A, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P141, DOI 10.1145/1595696.1595719
   BIERHOFF K, 2007, P 22 ANN ACM SIGPLAN, P301
   Ciupa I., 2007, P 2007 INT S SOFTWAR, P84, DOI [10.1145/1273463.1273476, DOI 10.1145/1273463.1273476]
   Cook J. E., 1998, ACM Transactions on Software Engineering and Methodology, V7, P215, DOI 10.1145/287000.287001
   Dallmeier V., 2010, P 19 INT S SOFTWARE, P85, DOI [DOI 10.1145/1831708.1831719, 10.1145/1831708.1831719]
   Dallmeier V., 2009, P IEEE ACM 24 INT C
   Dallmeier V., 2006, P ICSE WORKSH DYN AN
   Ernst MD, 2001, IEEE T SOFTWARE ENG, V27, P99, DOI 10.1109/32.908957
   Fink S.J., 2008, ACM T SOFTW ENG METH, V7, P215
   Fraser G, 2012, IEEE T SOFTWARE ENG, V38, P278, DOI 10.1109/TSE.2011.93
   GOLD EM, 1967, INFORM CONTROL, V10, P447, DOI 10.1016/S0019-9958(67)91165-5
   Gupta N., 2003, P 18 IEEE INT C AUT
   Hierons R.M., 2009, ACM COMPUT SURV, V7, P215
   King J.C., 1976, COMMUN ACM, V7, P215
   Liblit B, 2003, ACM SIGPLAN NOTICES, V38, P141, DOI 10.1145/780822.781148
   Lorenzoli D, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P501, DOI 10.1145/1368088.1368157
   Majumdar R, 2007, PROC INT CONF SOFTW, P416
   McMinn P, 2004, SOFTW TEST VERIF REL, V14, P105, DOI 10.1002/stvr.294
   Mesbah A, 2009, PROC INT CONF SOFTW, P210, DOI 10.1109/ICSE.2009.5070522
   Milicevic A, 2007, PROC INT CONF SOFTW, P771
   STROM RE, 1986, IEEE T SOFTWARE ENG, V12, P157, DOI 10.1109/TSE.1986.6312929
   Tonella P., 2004, Software Engineering Notes, V29, P119, DOI 10.1145/1013886.1007528
   Veanes M., 2005, P 10 EUROPEAN SOFTWA, P273, DOI DOI 10.1145/1095430.1081751
   Whaley J., 2002, Software Engineering Notes, V27, P221, DOI 10.1145/566171.566212
NR 29
TC 41
Z9 45
U1 0
U2 3
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAR-APR
PY 2012
VL 38
IS 2
BP 243
EP 257
DI 10.1109/TSE.2011.105
PG 15
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 913ZF
UT WOS:000301915200002
DA 2024-07-18
ER

PT J
AU Yuan, X
   Cohen, MB
   Memon, AM
AF Yuan, Xun
   Cohen, Myra B.
   Memon, Atif M.
TI GUI Interaction Testing: Incorporating Event Context
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE GUI testing; automated testing; model-based testing; combinatorial
   interaction testing; GUITAR testing system
ID COVERAGE; STATE
AB Graphical user interfaces (GUIs), due to their event-driven nature, present an enormous and potentially unbounded way for users to interact with software. During testing, it is important to "adequately cover" this interaction space. In this paper, we develop a new family of coverage criteria for GUI testing grounded in combinatorial interaction testing. The key motivation of using combinatorial techniques is that they enable us to incorporate "context" into the criteria in terms of event combinations, sequence length, and by including all possible positions for each event. Our new criteria range in both efficiency (measured by the size of the test suite) and effectiveness (the ability of the test suites to detect faults). In a case study on eight applications, we automatically generate test cases and systematically explore the impact of context, as captured by our new criteria. Our study shows that by increasing the event combinations tested and by controlling the relative positions of events defined by the new criteria, we can detect a large number of faults that were undetectable by earlier techniques.
C1 [Yuan, Xun; Memon, Atif M.] Univ Maryland, Dept Comp Sci, College Pk, MD 20742 USA.
   [Cohen, Myra B.] Univ Nebraska, Dept Comp Sci & Engn, Lincoln, NE 68588 USA.
C3 University System of Maryland; University of Maryland College Park;
   University of Nebraska System; University of Nebraska Lincoln
RP Yuan, X (corresponding author), Univ Maryland, Dept Comp Sci, 4115 AV Williams Bldg, College Pk, MD 20742 USA.
EM xyuan@cs.umd.edu; myra@cse.unl.edu; atif@cs.umd.edu
FU US National Science Foundation (NSF) [CCF-0747009, CCF-0447864,
   CNS-0855139, CNS-0855055]; US Air Force Office of Scientific Research
   [FA9550-09-1-0129]; US Office of Naval Research [N00014-05-1-0421]; US
   Defense Advanced Research Projects Agency (DARPA) [HR0011-09-0031];
   Direct For Computer & Info Scie & Enginr; Division Of Computer and
   Network Systems [0855139] Funding Source: National Science Foundation;
   Division of Computing and Communication Foundations; Direct For Computer
   & Info Scie & Enginr [0747009] Funding Source: National Science
   Foundation
FX The authors would like to thank the anonymous reviewers for all of their
   feedback, insights, and comments on this paper. This work was partially
   supported by the US National Science Foundation (NSF) under grants
   CCF-0747009, CCF-0447864, CNS-0855139, and CNS-0855055, the US Air Force
   Office of Scientific Research through award FA9550-09-1-0129, the US
   Office of Naval Research grant N00014-05-1-0421 and by the US Defense
   Advanced Research Projects Agency (DARPA) through award HR0011-09-0031.
   Any opinions, findings, conclusions, or recommendations expressed in
   this material are those of the authors and do not necessarily reflect
   the position or policy of the NSF, ONR, AFOSR or DARPA.
CR [Anonymous], FreeMind-free mind mapping software
   Belli F, 2001, 12TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P34, DOI 10.1109/ISSRE.2001.989456
   BROOKS P, 2009, P 1 IEEE INT C SOFTW
   BROWNLIE R, 1992, AT&T TECH J, V71, P41, DOI 10.1002/j.1538-7305.1992.tb00164.x
   Bryce RC, 2006, ASPEC 2006: 13TH ASIA-PACIFIC SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P259
   CHAYS D, 2002, AGENDA TEST CASE GEN
   Cohen DM, 1997, IEEE T SOFTWARE ENG, V23, P437, DOI 10.1109/32.605761
   Cohen M.B., 2006, P ISSTA 2006 WORKSHO, P53, DOI DOI 10.1145/1147249.1147257
   Cohen MB, 2003, PROC INT CONF SOFTW, P38, DOI 10.1109/ICSE.2003.1201186
   Daniels F. J., 1999, Proceedings of Technology of Object-Oriented Languages and Systems - TOOLS 30 (Cat. No.PR00278), P74, DOI 10.1109/TOOLS.1999.787537
   Dunietz IS, 1997, PROC INT CONF SOFTW, P205, DOI 10.1145/253228.253271
   Farooq U, 2008, ASWEC 2008: 19TH AUSTRALIAN SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P441, DOI 10.1109/ASWEC.2008.64
   GALLAGHER L, 2007, COMPUT J, V52, P514
   Gargantini A, 2001, J UNIVERS COMPUT SCI, V7, P1050
   Hovemeyer D, 2004, ACM SIGPLAN NOTICES, V39, P92, DOI 10.1145/1052883.1052895
   INKUMSAH K, 2008, P ASE, P297
   Kuhn DR, 2004, IEEE T SOFTWARE ENG, V30, P418, DOI 10.1109/TSE.2004.24
   Marchetto A, 2009, 1ST INTERNATIONAL SYMPOSIUM ON SEARCH BASED SOFTWARE ENGINEERING, PROCEEDINGS, P3, DOI 10.1109/SSBSE.2009.13
   MATHUR AP, 2008, FDN SOFTWARE TESTING
   McMaster S, 2008, IEEE T SOFTWARE ENG, V34, P99, DOI 10.1109/TSE.2007.70756
   Memon A, 2004, 19TH INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P186, DOI 10.1109/ASE.2004.1342736
   Memon AM, 2005, IEEE T SOFTWARE ENG, V31, P884, DOI 10.1109/TSE.2005.117
   Memon AM, 2001, IEEE T SOFTWARE ENG, V27, P144, DOI 10.1109/32.908959
   MEMON AM, 2004, P OBJ OR PROGR SYST
   MEMON AM, 2001, P 8 EUR SOFTW ENG C, P256
   Offutt J, 2003, SOFTW TEST VERIF REL, V13, P25, DOI 10.1002/stvr.264
   Qu X., 2008, P INT S SOFTWARE TES, P75
   Shehady RK, 1997, DIG PAP INT SYMP FAU, P80, DOI 10.1109/FTCS.1997.614080
   Strecker Jaymie, 2008, 2008 First IEEE International Conference on Software Testing, Verification and Validation (ICST '08), P12, DOI 10.1109/ICST.2008.26
   Tretmans J, 2003, 1 EUR C MOD DRIV SOF, P31
   URAL H, 1991, IEEE T COMMUN, V39, P514, DOI 10.1109/26.81739
   Veanes Margus, 2008, Formal Methods and Testing. An Outcome of the FORTEST Network. Revised Selected Papers, P39, DOI 10.1007/978-3-540-78917-8_2
   White L, 2000, 11TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P110, DOI 10.1109/ISSRE.2000.885865
   White LJ, 1996, INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE, PROCEEDINGS, P350, DOI 10.1109/ICSM.1996.565038
   Xie Q, 2005, PROC IEEE INT CONF S, P473
   Xie Q, 2006, PROC IEEE INT CONF S, P145
   Xie Q, 2008, ACM T SOFTW ENG METH, V18, DOI 10.1145/1416563.1416567
   Yilmaz C, 2006, IEEE T SOFTWARE ENG, V32, P20, DOI 10.1109/TSE.2006.8
   Yuan, 2009, Proceedings of the International Workshop onIntelligent Systems and Applications, P1
   Yuan X., 2007, P INT C AUTOMATED SO, P405
   Yuan X, 2007, PROC INT CONF SOFTW, P396
   Zhu H, 1997, ACM COMPUT SURV, V29, P366, DOI 10.1145/267580.267590
   2010, JUNIT TESTING RESOUR
   2003, MERCURY INTERACTIVE
NR 44
TC 96
Z9 110
U1 0
U2 16
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUL-AUG
PY 2011
VL 37
IS 4
BP 559
EP 574
DI 10.1109/TSE.2010.50
PG 16
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 801QT
UT WOS:000293456000007
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Baresi, L
   Ghezzi, C
   Mottola, L
AF Baresi, Luciano
   Ghezzi, Carlo
   Mottola, Luca
TI Loupe: Verifying Publish-Subscribe Architectures with a Magnifying Lens
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Publish-subscribe; verification; model-checking
AB The Publish-Subscribe (P/S) communication paradigm fosters high decoupling among distributed components. This facilitates the design of dynamic applications, but also impacts negatively on their verification, making it difficult to reason on the overall federation of components. In addition, existing P/S infrastructures offer radically different features to the applications, e. g., in terms of message reliability. This further complicates the verification as its outcome depends on the specific guarantees provided by the underlying P/S system. Although model checking has been proposed as a tool for the verification of P/S architectures, existing solutions overlook many characteristics of the underlying communication infrastructure to avoid state explosion problems. To overcome these limitations, the Loupe domain-specific model checker adopts a different approach. The P/S infrastructure is not modeled on top of a general-purpose model checker. Instead, it is embedded within the checking engine, and the traditional P/S operations become part of the modeling language. In this paper, we describe Loupe's design and the dedicated state abstractions that enable accurate verification without incurring state explosion problems. We also illustrate our use of state-of-the-art software verification tools to assess some key functionality in Loupe's current implementation. A complete case study shows how Loupe eases the verification of P/S architectures. Finally, we quantitatively compare Loupe's performance against alternative approaches. The results indicate that Loupe is effective and efficient in enabling accurate verification of P/S architectures.
C1 [Baresi, Luciano; Ghezzi, Carlo] Politecn Milan, Dipartimento Elettron & Informaz, I-20133 Milan, Italy.
   [Mottola, Luca] Swedish Inst Comp Sci, S-16440 Stockholm, Sweden.
C3 Polytechnic University of Milan
RP Baresi, L (corresponding author), Politecn Milan, Dipartimento Elettron & Informaz, Pzza L da Vinci 32, I-20133 Milan, Italy.
EM baresi@elet.polimi.it; ghezzi@elet.polimi.it; luca@sics.se
RI Ghezzi, Carlo/A-9048-2010; Baresi, Luciano/N-4208-2018
OI Baresi, Luciano/0000-0001-6467-837X; MOTTOLA, LUCA/0000-0003-4560-9541
FU European Commission [227977-SMScom]; MIUR Italy; FIRB [RBNE05C3AH-
   D-ASAP]; SSF; Swedish Foundation for Strategic Research; CONET;
   Cooperating Objects Network of Excellence [FP7-2007-2-224053]
FX The authors wish to thank Luca Zanolin for his early efforts in this
   research activity, Natasha Sharygina for the insightful discussion on
   how to apply partial order reductions to model random message delays,
   Giorgio Gerosa for the implementation of the time extension of Loupe,
   and the anonymous reviewers for their insightful comments on the first
   versions of the manuscript. This research has been partially funded by
   the European Commission, Programme IDEAS-ERC, Project 227977-SMScom, and
   by MIUR Italy, FIRB Project RBNE05C3AH- D-ASAP. It has also been
   partially supported by SSF, the Swedish Foundation for Strategic
   Research, and by CONET, the Cooperating Objects Network of Excellence,
   under EU-FP7 contract number FP7-2007-2-224053.
CR ALUR R, 1990, P 5 INT S LOGIC COMP
   [Anonymous], P 22 INT C SOFTW ENG
   BARESI L, 2006, P 26 INT C FORM METH
   BARESI L, 2007, P 29 INT C SOFTW ENG
   BARESI L, 2008, ACCURATE VERIFICATIO
   BARESI L, 2007, P SPEC VER COMP BAS
   BEEK MH, 2004, P 9 INT WORKSH FORM
   BHOLA S, 2002, P INT C DEP SYST NET
   BRADBURY JS, 2003, P 9 EUR SOFTW ENG C
   CAPORUSCIO M, 2004, P 19 INT C SOFTW ENG
   Carzaniga A, 2001, ACM T COMPUT SYST, V19, P332, DOI 10.1145/380749.380767
   Clarke EM, 1999, MODEL CHECKING, P1
   COLANGELO D, 2006, P 26 INT C FORM METH
   COMPTON K, 2000, CSETR42300 U MICHIGA
   CORBETT JC, 2000, P 7 SPIN WORKSH
   COSTA P, 2007, P 5 INT C PERV COMM
   COSTA P, 2003, P 24 INT C DISTR COM
   CUGOLA G, 2006, P 6 INT WORKSH SOFTW
   CUGOLA G, 2007, P 1 INT C DISTR EV B
   Dailey DJ, 1996, ITS J, V3, P163, DOI 10.1080/10248079608903718
   DENG X, 2002, P 1 INT S FORM METH
   DOERR BS, 2000, P 1 C SOFTW PROD LIN
   Eugster PT, 2003, ACM COMPUT SURV, V35, P114, DOI 10.1145/857076.857078
   GARLAN D, 2000, P 10 INT WORKSH SOFT
   GARLAN D, 2002, P 10 INT SPIN WORKSH
   GELERNTER D, 1985, ACM T PROGR LANG SYS, V7, P80, DOI 10.1145/2363.2433
   GNESI S, 1999, P 4 INT S HIGH ASS S
   HARRISON TH, 1997, P 12 C OBJ OR PROGR
   HATCLIFF J, 2003, P 25 INT C SOFTW ENG
   HE F, 2007, P 27 INT C FORM METH
   HEIMBIGNER D, 2001, P 8 ACM S APPL COMPU
   Holzmann GJ, 1997, IEEE T SOFTWARE ENG, V23, P279, DOI 10.1109/32.588521
   HOLZMANN GJ, 2004, P 11 INT SPIN WORKSH
   *IBM RES, 2010, GRYPH MIDDL
   INVERARDI P, 2005, P 10 EUR SOFTW ENG C, P111
   KALASAPUR S, 2006, P 4 IEEE WORKSH UB P
   KAVEH N, 2001, P 8 EUR SOFTW ENG C
   Kim T., 2000, J. Computer and Information Science, V1, P91
   Kshemkalyani AD, 2004, DISTRIB COMPUT, V17, P131, DOI 10.1007/s00446-003-0105-9
   Kshemkalyani Ajay D., 2011, Distributed computing: principles, algorithms, and systems
   LAMPORT L, 1978, COMMUN ACM, V21, P558, DOI 10.1145/359545.359563
   Li S, 2004, TELECOMMUN SYST, V26, P351, DOI 10.1023/B:TELS.0000029046.79337.8f
   LILIUS J, 1999, P 14 INT C AUT SOFTW
   LIU H, 2002, P 28 INT C VERY LARG
   MERINO P, 1996, P 2 INT WORKSH SPIN
   Muhl G, 2006, Distributed Event-Based Systems
   OUKSEL A, 2006, P 7 ACM USENIX INT M
   ROBBY MB, 2003, P 9 EUR SOFTW ENG C
   Schafer T., 2001, Electronic Notes in Theoretical Computer Science, V55, DOI 10.1016/S1571-0661(04)00262-2
   SCHIEFER J, 2007, P 1 INT C DISTR EV B
   SOUTO E, 2004, P 2 WORKSH MIDDL PER
   *SUN MICR, 2010, JMS SPEC REF IMPL
   Tanenbaum A.S., 2006, DISTRIBUTED SYSTEMS
   ter Beek MH, 2005, PROC INT CONF SOFTW, P596
   *TIBCO, 2010, TIBCO REND HOM PAG
   ZANOLIN L, 2003, P INT WORKSH SPEC VA
   ZHANG H, 2005, P 5 INT WORKSH SOURC
   ZHANG H, 2004, P INT WORKSH DISTR E
   2010, SPUTNIC PROJECT STRA
   2010, DJPROF JAVA MEMORY P
   2010, BOGOR PROJECT EXTENS
NR 61
TC 9
Z9 10
U1 0
U2 4
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAR-APR
PY 2011
VL 37
IS 2
BP 228
EP 246
DI 10.1109/TSE.2010.39
PG 19
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 739ZL
UT WOS:000288760900006
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Prechelt, L
AF Prechelt, Lutz
TI Plat_Forms: A Web Development Platform Comparison by an Exploratory
   Experiment Searching for Emergent Platform Properties
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Emergent properties; usability; functionality; reliability; security;
   product size; design structure; modifiability; Java; PHP; Perl
ID SCALE SOFTWARE-DEVELOPMENT; CODE INSPECTIONS
AB Background: For developing Web-based applications, there exist several competing and widely used technological platforms (consisting of a programming language, framework(s), components, and tools), each with an accompanying development culture and style. Research question: Do Web development projects exhibit emergent process or product properties that are characteristic and consistent within a platform, but show relevant substantial differences across platforms or do team-to-team individual differences outweigh such differences, if any? Such a property could be positive (i.e., a platform advantage), negative, or neutral, and it might be unobvious which is which. Method: In a nonrandomized, controlled experiment, framed as a public contest called "Plat_Forms," top-class teams of three professional programmers competed to implement the same requirements for a Web-based application within 30 hours. Three different platforms (Java EE, PHP, or Perl) were used by three teams each. We compare the resulting nine products and process records along many dimensions, both external (usability, functionality, reliability, security, etc.) and internal (size, structure, modifiability, etc.). Results: The various results obtained cover a wide spectrum: First, there are results that many people would have called "obvious" or "well known," say, that Perl solutions tend to be more compact than Java solutions. Second, there are results that contradict conventional wisdom, say, that our PHP solutions appear in some (but not all) respects to be actually at least as secure as the others. Finally, one result makes a statement we have not seen discussed previously: Along several dimensions, the amount of within-platform variation between the teams tends to be smaller for PHP than for the other platforms. Conclusion: The results suggest that substantial characteristic platform differences do indeed exist in some dimensions, but possibly not in others.
C1 Free Univ Berlin, Inst Informat, D-14169 Berlin, Germany.
C3 Free University of Berlin
RP Prechelt, L (corresponding author), Free Univ Berlin, Inst Informat, Takustr 9,R-014, D-14169 Berlin, Germany.
EM prechelt@inf.fu-berlin.de
OI Prechelt, Lutz/0000-0001-5592-3521
FU Zend Technologies; Accenture Technology Solutions; Optaros
FX The author would like to thank the following people and organizations
   (for the following reason): Gaylord Aulke (igniting spark); Jurgen
   Langner (providing contacts); Richard Seibt, Eduard Heilmayr (publicity,
   contacts, infrastructure); Zend Technologies, Accenture Technology
   Solutions, Optaros (sponsoring); Richard Seibt, Jurgen Langner, Alvar
   Freude (team acquisition); Marion Kunz (on-site organization); Carsten
   Schauble, Philipp Schmidt (on-site network); Peter Ertel, Will Hardy,
   Florian Thiel, Ulrich Stark (observation and evaluation work, comments
   on report); Sebastian Jekutsch, Christopher Oezbek, Gesine Milde, the
   anonymous reviewers (helpful comments on report); and, in particular,
   our 27 participants (for being patient, willful, and skillful).
CR Anda BCD, 2009, IEEE T SOFTWARE ENG, V35, P407, DOI 10.1109/TSE.2008.89
   BASILI VR, 1986, IEEE T SOFTWARE ENG, V12, P733, DOI 10.1109/TSE.1986.6312975
   Basili VR, 1999, IEEE T SOFTWARE ENG, V25, P456, DOI 10.1109/32.799939
   Christensen L.B., 2006, Experimental methodology, V10th
   Cockburn A., 2001, Writing effective use cases
   Curtis B., 1986, EMPIRICAL STUDIES PR, P256
   GREEN A, 2006, RAILS DJANGO COMPARI
   HIGHSMITH J, 2001, IEEE SOFTWARE, V18, P120
   Kampenes VB, 2009, INFORM SOFTWARE TECH, V51, P71, DOI 10.1016/j.infsof.2008.04.006
   KELLY S, 2006, QUICKTIME VIDEO
   Kelly Sean, 2006, GUTE NACHBARSCHAFT C
   Kunze Michael, 2005, TRB0710 FREIE U BERL
   MULLERSOLGER D, 2006, IT MANAGEMENT, V9, P47
   Nielsen J., 1994, Heuristic evaluation
   Perpich JM, 1997, PROC INT CONF SOFTW, P14, DOI 10.1145/253228.253234
   Popper K., 2005, The logic of scientific discovery
   Porter AA, 1997, IEEE T SOFTWARE ENG, V23, P329, DOI 10.1109/32.601071
   Prechelt L, 2000, COMPUTER, V33, P23, DOI 10.1109/2.876288
   Prechelt L., 2001, KONTROLLIERTE EXPT S
   Prechelt L., 2006, TRB0611 FREIE U BERL
   PRECHELT L, 1999, 199918 U KARLSR FAK
   PRECHELT L, 2000, 20005 U KARLSR FAK I
   Prechelt L., 2007, TRB0703 FREIE U BERL
   R Development Core Team. Vienna Austria, 2006, R LANG ENV STAT COMP
   Sjoberg DIK, 2005, IEEE T SOFTWARE ENG, V31, P733, DOI 10.1109/TSE.2005.97
   Yin R.K., 2011, Qualitative research from start to finish
NR 26
TC 17
Z9 20
U1 0
U2 12
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JAN-FEB
PY 2011
VL 37
IS 1
BP 95
EP 108
DI 10.1109/TSE.2010.22
PG 14
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 712OS
UT WOS:000286676700007
DA 2024-07-18
ER

PT J
AU Ali, S
   Briand, LC
   Hemmati, H
   Panesar-Walawege, RK
AF Ali, Shaukat
   Briand, Lionel C.
   Hemmati, Hadi
   Panesar-Walawege, Rajwinder K.
TI A Systematic Review of the Application and Empirical Investigation of
   Search-Based Test Case Generation
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Review
DE Evolutionary computing and genetic algorithms; frameworks; heuristics
   design; review and evaluation; test generation; testing strategies;
   validation
ID SOFTWARE TEST DATA; ALGORITHMS
AB Metaheuristic search techniques have been extensively used to automate the process of generating test cases, and thus providing solutions for a more cost-effective testing process. This approach to test automation, often coined "Search-based Software Testing" (SBST), has been used for a wide variety of test case generation purposes. Since SBST techniques are heuristic by nature, they must be empirically investigated in terms of how costly and effective they are at reaching their test objectives and whether they scale up to realistic development artifacts. However, approaches to empirically study SBST techniques have shown wide variation in the literature. This paper presents the results of a systematic, comprehensive review that aims at characterizing how empirical studies have been designed to investigate SBST cost-effectiveness and what empirical evidence is available in the literature regarding SBST cost-effectiveness and scalability. We also provide a framework that drives the data collection process of this systematic review and can be the starting point of guidelines on how SBST techniques can be empirically assessed. The intent is to aid future researchers doing empirical studies in SBST by providing an unbiased view of the body of empirical evidence and by guiding them in performing well-designed and executed empirical studies.
C1 [Ali, Shaukat; Briand, Lionel C.; Hemmati, Hadi; Panesar-Walawege, Rajwinder K.] Simula Res Lab, N-1325 Lysaker, Norway.
   [Ali, Shaukat; Hemmati, Hadi; Panesar-Walawege, Rajwinder K.] Univ Oslo, Dept Informat, N-0316 Oslo, Norway.
C3 University of Oslo
RP Ali, S (corresponding author), Simula Res Lab, POB 134, N-1325 Lysaker, Norway.
EM shaukat@simula.no; briand@simula.no; hemmati@simula.no;
   rpanesar@simula.no
RI Ali, Shaukat/H-4121-2013
OI Ali, Shaukat/0000-0002-9979-3519
FU Simula School of Research and Innovation (SSRI)
FX The authors wish to thank the Simula School of Research and Innovation
   (SSRI) for funding this work.
CR Afzal W, 2009, INFORM SOFTWARE TECH, V51, P957, DOI 10.1016/j.infsof.2008.12.005
   ALI S, 2008, SE293 SIM RES LAB
   [Anonymous], 1999, DOING LIT REV RELEAS
   [Anonymous], 1990, Software testing techniques {
   [Anonymous], 2004, P 26 INT C SOFTW ENG
   Bertolino A, 2007, P 2007 INT C FUT SOF
   Briand L. C., 2006, Genetic Programming and Evolvable Machines, V7, P145, DOI 10.1007/s10710-006-9003-9
   BRIAND LC, 2005, P GEN EV COMP C
   Bueno PMS, 2000, FIFTEENTH IEEE INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P209, DOI 10.1109/ASE.2000.873665
   BUENO PMS, 2007, P 2 INT WORKSH RAND
   Burke E.K., 2006, Search methodologies: Introductory tutorials in optimization and decision support techniques
   Cai KY, 2008, J SYST SOFTWARE, V81, P1051, DOI 10.1016/j.jss.2007.08.028
   Capon JA, 1988, ELEMENTARY STAT SOCI
   Clarke J., 2003, IEE Proceedings-Software, V150, P161, DOI 10.1049/ip-sen:20030559
   Coley D.A., 1997, INTRO GENETIC ALGORI
   Drechsler R., 2002, Evolutionary Algorithms for Embedded System Design (Genetic Algorithms and Evolutionary Computation)
   Dyba T, 2005, IEEE SOFTWARE, V22, P58, DOI 10.1109/MS.2005.6
   Dybå T, 2006, INFORM SOFTWARE TECH, V48, P745, DOI 10.1016/j.infsof.2005.08.009
   Ghazi SA, 2003, IEEE C EVOL COMPUTAT, P1420
   Harman M, 2001, INFORM SOFTWARE TECH, V43, P833, DOI 10.1016/S0950-5849(01)00189-6
   Harman M., 2007, P 6 JOINT M EUR SOFT
   Harman M., 2007, P 2007 INT S SOFTW T
   HARMAN M, 2007, P 2007 INT C FUT SOF
   Haupt RandyL., 1997, Practical Genetic Algorithms
   Johnson D. S., 2002, Data structures, near neighbor searches, and methodology: Fifth and sixth DIMACS implementation challenges. Papers related to the DIMACS challenge on dictionaries and priority queues (1995-1996) and the DIMACS challenge on near neighbor searches (1998-1999), P215
   Jones BF, 1996, SOFTWARE ENG J, V11, P299, DOI 10.1049/sej.1996.0040
   Khan K.S., 2003, SYSTEMATIC REV SUPPO
   Kitchenham B., 2007, Guidelines for performing systematic literature reviews in software engineering
   Kitchenham BA, 2002, IEEE T SOFTWARE ENG, V28, P721, DOI 10.1109/TSE.2002.1027796
   LAKHOTIA K, 2007, P GEN EV COMP C
   LUKE S, 2007, JAVA BASED EVOLUTION
   Mantere T, 2005, APPL SOFT COMPUT, V5, P315, DOI 10.1016/j.asoc.2004.08.004
   MATHUR AP, 2008, FDN SOFTWARE TESTING
   McMinn P, 2004, SOFTW TEST VERIF REL, V14, P105, DOI 10.1002/stvr.294
   Michael CC, 2001, IEEE T SOFTWARE ENG, V27, P1085, DOI 10.1109/32.988709
   Miller J, 2006, INFORM SOFTWARE TECH, V48, P586, DOI 10.1016/j.infsof.2005.06.006
   Moore D.S., 2002, INTRO PRACTICE STAT
   *OMG, 2008, UML PROF MOD AN REAL
   Osman H.I., 1996, METAHEURISTICS THEOR
   Puschner P, 1998, REAL TIM SYST SYMP P, P134, DOI 10.1109/REAL.1998.739738
   *REP INT, 2004, GEN ALG FRAM
   Sheskin J.D., 2004, Handbook of Parametric and Nonparametric Statistical Procedures, VThird
   Shiba T., 2004, Proceedings of the 28th Annual International Computer Software and Applications Conference. COMPSAC 2004, P72, DOI 10.1109/CMPSAC.2004.1342808
   SRINIVAS M, 1994, COMPUTER, V27, P17, DOI 10.1109/2.294849
   TRACEY N, 1998, P ACM SIGSOFT INT S
   UNTCH RH, 1993, P 1993 ACM SIGSOFT I
   WAPPLER S, 2007, P 22 IEEE ACM INT C
   Watkins A, 2006, SOFTWARE PRACT EXPER, V36, P95, DOI 10.1002/spe.684
   Wegener J, 2001, INFORM SOFTWARE TECH, V43, P841, DOI 10.1016/S0950-5849(01)00190-2
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
   Xiao M, 2007, EMPIR SOFTW ENG, V12, P183, DOI 10.1007/s10664-006-9026-0
   ZHAN Y, 2005, P GEN EV COMP C
   ZHAN Y, 2006, P GEN EV COMP C
   [No title captured]
NR 54
TC 261
Z9 278
U1 1
U2 46
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD NOV-DEC
PY 2010
VL 36
IS 6
BP 742
EP 762
DI 10.1109/TSE.2009.52
PG 21
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 682SU
UT WOS:000284424100003
OA Green Published
DA 2024-07-18
ER

PT J
AU Cataldo, M
   Mockus, A
   Roberts, JA
   Herbsleb, JD
AF Cataldo, Marcelo
   Mockus, Audris
   Roberts, Jeffrey A.
   Herbsleb, James D.
TI Software Dependencies, Work Dependencies, and Their Impact on Failures
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Distribution/maintenance/enhancement; metrics/measurement;
   organizational management and coordination; quality analysis and
   evaluation
AB Prior research has shown that customer-reported software faults are often the result of violated dependencies that are not recognized by developers implementing software. Many types of dependencies and corresponding measures have been proposed to help address this problem. The objective of this research is to compare the relative performance of several of these dependency measures as they relate to customer-reported defects. Our analysis is based on data collected from two projects from two independent companies. Combined, our data set encompasses eight years of development activity involving 154 developers. The principal contribution of this study is the examination of the relative impact that syntactic, logical, and work dependencies have on the failure proneness of a software system. While all dependencies increase the fault proneness, the logical dependencies explained most of the variance in fault proneness, while workflow dependencies had more impact than syntactic dependencies. These results suggest that practices such as rearchitecting, guided by the network structure of logical dependencies, hold promise for reducing defects.
C1 [Cataldo, Marcelo] Robert Bosch LLC, Res & Technol Ctr, Pittsburgh, PA 15212 USA.
   [Mockus, Audris] Avaya Labs Res, Basking Ridge, NJ 07920 USA.
   [Roberts, Jeffrey A.] Duquesne Univ, Palumbo Donahue Sch Business, Pittsburgh, PA 15282 USA.
   [Herbsleb, James D.] Carnegie Mellon Univ, Sch Comp Sci, Pittsburgh, PA 15213 USA.
C3 Bosch; Avaya; Duquesne University; Carnegie Mellon University
RP Cataldo, M (corresponding author), Robert Bosch LLC, Res & Technol Ctr, 2 N Shore Ctr 320, Pittsburgh, PA 15212 USA.
EM marcelo.cataldo@us.bosch.com; audris@avaya.com; robertsj503@duq.edu;
   jdh@cs.cmu.edu
RI Mockus, Audris/AEY-3361-2022
FU US National Science Foundation [IIS-0414698, IIS-0534656, IGERT
   9972762]; Software Industry Center at Carnegie Mellon University; Alfred
   P. Sloan Foundation; Software Engineering Institute
FX The authors gratefully acknowledge support by the US National Science
   Foundation under Grants IIS-0414698, IIS-0534656, and IGERT 9972762, the
   Software Industry Center at Carnegie Mellon University, and its
   sponsors, especially the Alfred P. Sloan Foundation, and the Software
   Engineering Institute grant for "Improving Architectural Design through
   Organizational Considerations." The authors also gratefully thank A.
   Hassan and R. Holt for providing the source code for their C-REX tool.
CR [Anonymous], 2008, 2008 ACM IEEE 30 INT
   Atkins DL, 2002, IEEE T SOFTWARE ENG, V28, P625, DOI 10.1109/TSE.2002.1019478
   Baldwin C. Y., 2000, Design rules: The power of modularity, DOI DOI 10.7551/MITPRESS/2366.001.0001
   BASILI VR, 1984, COMMUN ACM, V27, P42, DOI 10.1145/69605.2085
   Briand LC, 2000, J SYST SOFTWARE, V51, P245, DOI 10.1016/S0164-1212(99)00102-8
   Burt R., 1992, STRUCTURAL HOLES
   Cataldo M., 2006, ACM C COMPUTER SUPPO, P353, DOI DOI 10.1145/1180875.1180929
   CATALDO M, 2007, THESIS CARNEGIE MELL
   Cataldo M, 2007, SECOND IEEE INTERNATIONAL CONFERENCE ON GLOBAL SOFTWARE ENGINEERING, PROCEEDINGS, P71
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   CROWSTON KC, 1991, THESIS SLOAN SCH MAN
   CURTIS B, 1988, COMMUN ACM, V31, P1268, DOI 10.1145/50087.50089
   DESOUZA CRB, 2004, P 12 ACM SIGSOFT 12, P221
   DESOUZA CRB, 2005, THESIS U CALIFORNIA
   Eaddy M, 2008, IEEE T SOFTWARE ENG, V34, P497, DOI 10.1109/TSE.2008.36
   Eick SG, 2002, IEEE T SOFTWARE ENG, V28, P396, DOI 10.1109/TSE.2002.995435
   EPPINGER SD, 1994, RES ENG DES, V6, P1, DOI 10.1007/BF01588087
   Faraj S, 2006, MANAGE SCI, V52, P1155, DOI 10.1287/mnsc.1060.0526
   Fenton NE, 1999, IEEE T SOFTWARE ENG, V25, P675, DOI 10.1109/32.815326
   FREEMAN LC, 1979, SOC NETWORKS, V1, P215, DOI 10.1016/0378-8733(78)90021-7
   Galbraith J.R., 1973, Designing complex organizations
   Gall H, 1998, PROC IEEE INT CONF S, P190, DOI 10.1109/ICSM.1998.738508
   GEPPERT B, 2005, P 11 INT S SOFTW MET, P35
   Graves TL, 2000, IEEE T SOFTWARE ENG, V26, P653, DOI 10.1109/32.859533
   Grinter RE, 1999, P 1999 ACM INT C SUP, P306, DOI DOI 10.1145/320297.320333
   HASSAN AE, 2004, P C SYST ENG RES M
   Herbsleb JD, 2003, IEEE T SOFTWARE ENG, V29, P481, DOI 10.1109/TSE.2003.1205177
   HERBSLEB JD, 2006, P INT C INF SYST
   HORWITZ S, 1990, ACM T PROGR LANG SYS, V12, P26, DOI [10.1145/77606.77608, 10.1145/960116.53994]
   HUTCHENS DH, 1985, IEEE T SOFTWARE ENG, V11, P749, DOI 10.1109/TSE.1985.232524
   KRACKHARDT D, 1994, SOCIAL NETWORK ANAL, P207
   MENEELY A, 2008, P FDN SOFTW ENG
   Mockus A, 2001, IEEE SOFTWARE, V18, P30, DOI 10.1109/52.914737
   Mockus A, 2000, BELL LABS TECH J, V5, P169, DOI 10.1002/bltj.2229
   MOELLER KH, 2003, P INT SOFTW METR S, P82
   NAGAPPAN N, 2007, P 1 INT S EMP SOFTW, P363
   PARNAS DL, 1972, COMMUN ACM, V15, P1053, DOI 10.1145/361598.361623
   PINZGER M, 2008, P FDN SOFTW ENG
   Sarma A, 2003, PROC INT CONF SOFTW, P444, DOI 10.1109/ICSE.2003.1201222
   Schümmer T, 2001, ECSCW 2001: PROCEEDINGS OF THE SEVENTH EUROPEAN CONFERENCE ON COMPUTER SUPPORTED COOPERATIVE WORK, P79
   SELBY RW, 1991, IEEE T SOFTWARE ENG, V17, P141, DOI 10.1109/32.67595
   STAUDENMAYER N, 1997, THESIS SLOAN SCH MAN
   STEVENS WP, 1974, IBM SYST J, V13, P115, DOI 10.1147/sj.132.0115
   Thompson J.D., 2011, Organizations in action: Social science bases of administrative theory
   Trainer E., 2005, OOPSLA Workshop on Eclipse Technology Exchange, P26, DOI [10.1145/1117696.1117702, DOI 10.1145/1117696.1117702]
   VONHIPPEL E, 1990, RES POLICY, V19, P407, DOI 10.1016/0048-7333(90)90049-C
   WATTS DJ, 1994, SMALL WORLDS DYNAMIC
   Zimmermann T, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P531, DOI 10.1145/1368088.1368161
NR 48
TC 139
Z9 167
U1 0
U2 12
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD NOV-DEC
PY 2009
VL 35
IS 6
BP 864
EP 878
DI 10.1109/TSE.2009.42
PG 15
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 524VP
UT WOS:000272172800008
DA 2024-07-18
ER

PT J
AU Anda, BCD
   Sjoberg, DIK
   Mockus, A
AF Anda, Bente C. D.
   Sjoberg, Dag I. K.
   Mockus, Audris
TI Variability and Reproducibility in Software Engineering: A Study of Four
   Companies that Developed the Same System
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Software engineering life cycle; software quality; software project
   success; software process; multiple-case study
ID EMPIRICAL-ANALYSIS; CYCLE TIME; QUALITY; PRODUCTIVITY; COEFFICIENT;
   IMPROVEMENT; FRAMEWORK; MATURITY; SUCCESS; SIZE
AB The scientific study of a phenomenon requires it to be reproducible. Mature engineering industries are recognized by projects and products that are, to some extent, reproducible. Yet, reproducibility in software engineering ( SE) has not been investigated thoroughly, despite the fact that lack of reproducibility has both practical and scientific consequences. We report a longitudinal multiple-case study of variations and reproducibility in software development, from bidding to deployment, on the basis of the same requirement specification. In a call for tender to 81 companies, 35 responded. Four of them developed the system independently. The firm price, planned schedule, and planned development process, had, respectively, "low," "low," and "medium" reproducibilities. The contractor's costs, actual lead time, and schedule overrun of the projects had, respectively, "medium," "high," and "low" reproducibilities. The quality dimensions of the delivered products, reliability, usability, and maintainability had, respectively, "low," "high," and "low" reproducibilities. Moreover, variability for predictable reasons is also included in the notion of reproducibility. We found that the observed outcome of the four development projects matched our expectations, which were formulated partially on the basis of SE folklore. Nevertheless, achieving more reproducibility in SE remains a great challenge for SE research, education, and industry.
C1 [Anda, Bente C. D.] Univ Oslo, Dept Informat, NO-316 Oslo, Norway.
   [Sjoberg, Dag I. K.] Simula Res Lab, NO-1325 Lysaker, Norway.
   [Mockus, Audris] Avaya Labs Res, Dept Software Technol Res, Basking Ridge, NJ 07920 USA.
C3 University of Oslo; Avaya
RP Anda, BCD (corresponding author), Univ Oslo, Dept Informat, POB 1080 Blindern, NO-316 Oslo, Norway.
EM bentea@ifi.uio.no; dagsj@simula.no; audris@avaya.com
RI Mockus, Audris/AEY-3361-2022
CR Agrawal M, 2007, IEEE T SOFTWARE ENG, V33, P145, DOI 10.1109/TSE.2007.29
   ANDA B, 2007, P 23 INT C SOFTW MAI, P204
   [Anonymous], EXPT QUASI EXPT DESI
   [Anonymous], 1990, IEEE STANDARD GLOSSA
   [Anonymous], 1987, Peopleware: Productive Projects and Teams
   [Anonymous], 1994, Accuracy trueness and precision of measurement methods and results
   Arisholm E, 2000, J SYST SOFTWARE, V53, P3, DOI 10.1016/S0164-1212(00)00003-0
   Arisholm E, 2004, IEEE T SOFTWARE ENG, V30, P521, DOI 10.1109/TSE.2004.43
   Atmanspacher Harald., 2003, J. Scientific Exploration, V17, P243
   Avizienis A., 1977, P 1 IEEE INT COMPUTE, P149
   Avizienis Algirdas., 1995, SOFTWARE FAULT TOLER
   Bandi RK, 2003, IEEE T SOFTWARE ENG, V29, P77, DOI 10.1109/TSE.2003.1166590
   Benestad HC, 2006, LECT NOTES COMPUT SC, V4034, P94
   Blackburn JD, 1996, IEEE T SOFTWARE ENG, V22, P875, DOI 10.1109/32.553636
   BLAND JM, 1986, LANCET, V1, P307, DOI 10.1016/s0140-6736(86)90837-8
   Boehm B., 1995, Annals of Software Engineering, V1, P57, DOI 10.1007/BF02249046
   Boehm BW., 1981, Software Engineering Economics
   Briand LC, 1999, IEEE T SOFTWARE ENG, V25, P91, DOI 10.1109/32.748920
   BRILLIANT SS, 1990, IEEE T SOFTWARE ENG, V16, P238, DOI 10.1109/32.44387
   BROOKS RE, 1980, COMMUN ACM, V23, P207, DOI 10.1145/358841.358847
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   CHILLAREGE R, 1992, IEEE T SOFTWARE ENG, V18, P943, DOI 10.1109/32.177364
   Clark BK, 2000, IEEE SOFTWARE, V17, P65, DOI 10.1109/52.895170
   Cockburn A, 2000, IEEE SOFTWARE, V17, P64, DOI 10.1109/52.854070
   Cohen B., 1989, DEV SOCIOLOGICAL KNO
   Cox K., 2000, Empirical Software Engineering, V5, P245, DOI 10.1023/A:1026542700033
   Cronbach LeeJ., 1983, Designing evaluations of educational and social programs
   CURTIS B, 1981, P IEEE, V69, P846, DOI 10.1109/PROC.1981.12088
   Curtis B., 1986, EMPIRICAL STUDIES PR, P256
   Darcy DP, 2005, IEEE SOFTWARE, V22, P17, DOI 10.1109/MS.2005.160
   De Lucia A, 2003, J SYST SOFTWARE, V65, P87, DOI 10.1016/S0164-1212(02)00051-1
   DINGMAN HF, 1969, MULTIVAR BEHAV RES M, V4, P517, DOI 10.1207/s15327906mbr0404_6
   Dybå T, 2007, IEEE SOFTWARE, V24, P12, DOI 10.1109/MS.2007.158
   EASTON EF, 1997, EUR J OPER RES, V11, P57
   Fenton N. E., 1998, Software metrics: a rigorous and practical approach
   FOLSTAD A, 2006, SINTEFA309
   Hannay JE, 2007, IEEE T SOFTWARE ENG, V33, P87, DOI 10.1109/TSE.2007.12
   Harter DE, 2003, MANAGE SCI, V49, P784, DOI 10.1287/mnsc.49.6.784.16023
   Harter DE, 2000, MANAGE SCI, V46, P451, DOI 10.1287/mnsc.46.4.451.12056
   Hedges LV., 2014, STAT METHODS META AN
   Herbsleb J, 1997, COMMUN ACM, V40, P30, DOI 10.1145/255656.255692
   HOLCOMBE M, 2003, P WORKSH EMP STUD SO, P33
   HOLT NE, 2006, THESIS U OSLO
   HUNTER JS, 1980, SCIENCE, V210, P869, DOI 10.1126/science.210.4472.869
   *IBM, 2008, IBM SOFTW SUPP HDB
   JENKINS AM, 1984, INFORM MANAGE, V7, P73, DOI 10.1016/0378-7206(84)90012-0
   Jorgensen M, 2004, IEEE T SOFTWARE ENG, V30, P953, DOI 10.1109/TSE.2004.92
   Jorgensen M, 2002, J SOFTW MAINT EVOL-R, V14, P123, DOI 10.1002/smr.248
   Jorgensen M., 2006, International Journal of Project Management, V24, P522, DOI 10.1016/j.ijproman.2006.04.001
   JORGENSEN M, 1995, R3895 TF
   Judd C.M., 1991, Research methods in social relations, V6th
   Kampenes VB, 2007, INFORM SOFTWARE TECH, V49, P1073, DOI 10.1016/j.infsof.2007.02.015
   Kelley K, 2007, BEHAV RES METHODS, V39, P755, DOI 10.3758/BF03192966
   Kidder L., 1986, RES METHODS SOCIAL R, V5th
   KNIGHT JC, 1986, IEEE T SOFTWARE ENG, V12, P96, DOI 10.1109/TSE.1986.6312924
   Krathwohl D.R., 1985, SOCIAL BEHAV SCI RES
   Krishnan MS, 2000, MANAGE SCI, V46, P745, DOI 10.1287/mnsc.46.6.745.11941
   Larman C., 2001, Applying UML and Patterns: An Introduction to Object-Oriented Analysis and Design and the Unified Process, V2nd
   Lederer AL, 2000, J SYST SOFTWARE, V50, P33, DOI 10.1016/S0164-1212(99)00074-6
   Marshall E, 2004, SCIENCE, V306, P630, DOI 10.1126/science.306.5696.630
   Maxwell KD, 1996, IEEE T SOFTWARE ENG, V22, P706, DOI 10.1109/32.544349
   McConnell S, 2002, IEEE SOFTWARE, V19, P3, DOI 10.1109/MS.2002.976933
   McNaught A.D., 1997, IUPAC COMPENDIUM CHE
   Milis K, 2002, INT J PROD ECON, V80, P105, DOI 10.1016/S0925-5273(02)00246-3
   Mockus A., 2003, ACM SIGSOFT SOFTWARE, V28, P138
   Molokken-Ostvold K, 2005, IEEE T SOFTWARE ENG, V31, P754, DOI 10.1109/TSE.2005.96
   MOLOKKENOSTVOLD KJ, 2004, THESIS U OSLO
   OMAN P, 1994, J SYST SOFTWARE, V24, P251, DOI 10.1016/0164-1212(94)90067-1
   Paulk Mark., 1993, Encyclopedia of Software Engineering
   PEDERSEN H, 2006, 2468 NORW PUBL ROADS
   Prechelt L, 2000, COMPUTER, V33, P23, DOI 10.1109/2.876288
   PRECHELT L, 2007, B0710 FREIE U BERLIN
   PRECHELT L, 1999, 199918 U KARLSR FAK
   PRECHELT L, 2000, 20005 U KARLSR FAK I
   Procaccino JD, 2005, J SYST SOFTWARE, V78, P194, DOI 10.1016/j.jss.2004.12.011
   RAGIN CC, 2001, ENCY SOCIAL BEHAV SC, V3, P1519
   Reed GF, 2002, CLIN DIAGN LAB IMMUN, V9, P1235, DOI 10.1128/CDLI.9.6.1235-1239.2002
   Reussner RH, 2003, J SYST SOFTWARE, V66, P241, DOI 10.1016/S0164-1212(02)00080-8
   Richards L., 2005, HANDLING QUALITATIVE
   Rosenthal R, 2001, ANNU REV PSYCHOL, V52, P59, DOI 10.1146/annurev.psych.52.1.59
   Rout TP, 2007, J SYST SOFTWARE, V80, P1483, DOI 10.1016/j.jss.2007.01.045
   Schwaber Ken., 2004, Agile Project Management With Scrum (Developer Best Practices)
   SHEPPERD MJ, 1996, P ICSE, V18, P170
   SIDMAN M, 1960, SCI RES
   Siy Harvey P., 2001, P 7 INT S SOFTW METR, P317
   Sjoberg DIK, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P358, DOI 10.1109/FOSE.2007.30
   Sjoberg DIK, 2005, IEEE T SOFTWARE ENG, V31, P733, DOI 10.1109/TSE.2005.97
   *SOFTW ENG I, 2006, CMMI MAT PROF SEPT 2
   TETENS H, 2004, ENZYKLOPADIE PHILOS, P593
   TROCHIM WMK, 1989, EVAL PROGRAM PLANN, V12, P355, DOI 10.1016/0149-7189(89)90052-9
   Wagner DavidG., 1994, Group Processes, P25
   Walkerden F., 1999, Empirical Software Engineering, V4, P135, DOI 10.1023/A:1009872202035
   Yin R.K., 1985, SCI COMMUN, V6, P249
   Yin R.K., 2011, Qualitative research from start to finish
NR 94
TC 51
Z9 56
U1 0
U2 6
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAY-JUN
PY 2009
VL 35
IS 3
BP 407
EP 429
DI 10.1109/TSE.2008.89
PG 23
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 450NL
UT WOS:000266408000006
DA 2024-07-18
ER

PT J
AU Hughes, G
   Bultan, T
AF Hughes, Graham
   Bultan, Tevfik
TI Interface grammars for modular software model checking
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article; Proceedings Paper
CT International Symposium on Software Testing and Analysis (ISSTA)
CY 2007
CL Univ London Sch Oriental & African Studies, Brunei Gallery, London,
   ENGLAND
HO Univ London Sch Oriental & African Studies, Brunei Gallery
DE specification languages; model checking; interface grammars; modular
   verification
AB Verification techniques that rely on state enumeration (such as model checking) face two important challenges: 1) state space explosion: exponential increase in the state space with the increasing number of components and 2) environment generation: modeling components that are either not available for analysis or that are outside the scope of the verification tool at hand. We propose a semiautomated approach for attacking these two problems. In our approach, interfaces for the components that are outside the scope of the current verification effort are specified using an interface specification language based on grammars. Specifically, an interface grammar for a component specifies the sequences of method invocations that are allowed by that component. Using interface grammars, one can specify nested call sequences that cannot be specified using interface specification formalisms that rely on finite state machines. Moreover, our interface grammars allow specification of semantic predicates and actions, which are Java code segments that can be used to express additional interface constraints. We have built an interface compiler that takes the interface grammar for a component as input and generates a stub for that component. The resulting stub is a table-driven parser. Invocation of a method within the component becomes the look-ahead symbol for the stub/parser. The stub/parser uses a parser stack, the look-ahead, and a parse table to guide the parsing. The semantic predicates and semantic actions that appear on the right-hand side of the production rules are executed when they appear at the top of the stack. The stub/parser generated from the interface grammar of a component can be used to replace that component during state space exploration, either to assuage the state space explosion or to provide an executable environment for the component that is being verified. We conducted a case study by writing an interface grammar for the Enterprise JavaBeans (EJB) persistence interface. Using our interface compiler, we automatically generated an EJB stub using the EJB interface grammar. We used the JPF model checker to check EJB clients using this automatically generated EJB stub. Our results show that EJB clients can be verified efficiently with JPF using our approach, whereas they cannot be verified with JPF directly since JPF cannot handle EJB components.
C1 [Hughes, Graham; Bultan, Tevfik] Univ Calif Santa Barbara, Dept Comp Sci, Santa Barbara, CA 93106 USA.
C3 University of California System; University of California Santa Barbara
RP Hughes, G (corresponding author), Univ Calif Santa Barbara, Dept Comp Sci, Santa Barbara, CA 93106 USA.
EM graham@cs.ucsb.edu; bultan@cs.ucsb.edu
CR Aho A., 1988, Compilers - Principles, Techniques and Tools
   Alur R, 2004, LECT NOTES COMPUT SC, V2988, P467
   Alur R., 2005, P 32 ACM SIGPLAN SIG
   ALUR R, 2004, P ACM S THEOR COMP
   [Anonymous], 2002, MSRTR200121
   BALL T, 2001, P 8 INT SPIN WORKSH, P103
   Bauer J. A., 1979, Proceedings of the 4th International Conference on Software Engineering, P425
   Betin-Can A, 2004, 19TH INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P248, DOI 10.1109/ASE.2004.1342742
   Betin-Can A., 2005, P 14 INT WORLD WIDE, P750
   BETINCAN A, 2005, P 20 IEEE INT C AUT
   Bouajjani A, 1997, LECT NOTES COMPUT SC, V1243, P135
   CHAKRABARTI A, 2002, P 14 INT C COMP AID, P428
   Chen H., 2004, P NETW DISTR SYST SE
   Clarke EM, 1999, MODEL CHECKING, P1
   DEALFARO L, 2001, P 9 ANN S FDN SOFTW, P109
   Duncan A.G., 1981, P 5 INT C SOFTW ENG, P170
   GODEFROID P, 1998, P 1998 ACM SIGPLAN C, P345
   Havelund K., 2000, P 5 NASA LANGL FORM
   Holzmann G. J., 1991, Design and Validation of Comp. Protocols, V512
   HUGHES G, 2007, P AUT FORM METH WORK
   HUGHES G, 2007, P INT S SOFTW TEST A, P39, DOI DOI 10.1145/1273463.1273471
   LAMMEL R, 2006, P 18 IFIP INT C TEST
   Levine J.R., 1992, LEX YACC
   MAURER PM, 1992, SOFTWARE PRACT EXPER, V22, P223, DOI 10.1002/spe.4380220303
   MAURER PM, 1990, IEEE SOFTWARE, V7, P50, DOI 10.1109/52.56422
   MCMILLAN KL, 1997, P 24 ACM S PRINC PRO, P174
   Musuvathi M., 2002, P 5 S OP SYST DES IM
   Nielson F., 1999, Principles of Program Analysis
   OFFUTT J, 2006, P 2 WORKSH MUT AN NO
   Purdom P., 1972, BIT (Nordisk Tidskrift for Informationsbehandling), V12, P366, DOI 10.1007/BF01932308
   Sirer EG, 1999, USENIX ASSOCIATION PROCEEDINGS OF THE 2ND CONFERENCE ON DOMAIN-SPECIFIC LANGUAGES (DSL'99), P1
   Tkachuk O, 2003, 18TH IEEE INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P116, DOI 10.1109/ASE.2003.1240300
   Visser W., 2003, Automated Software Engineering, V10, P203, DOI 10.1023/A:1022920129859
   Visser W, 2000, FIFTEENTH IEEE INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P3, DOI 10.1109/ASE.2000.873645
   WHALEY J, 2002, P ACM SIGSOFT INT S
   YANG J., 2004, P 6 S OP SYST DES IM
   2008, ANOTHER TOOL LANGUAG
NR 37
TC 7
Z9 9
U1 1
U2 4
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD SEP-OCT
PY 2008
VL 34
IS 5
BP 614
EP 632
DI 10.1109/TSE.2008.72
PG 19
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Engineering
GA 351WM
UT WOS:000259456600004
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Dolev, S
   Yagel, R
AF Dolev, Shlomi
   Yagel, Reuven
TI Towards self-stabilizing operating systems
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article; Proceedings Paper
CT 2nd International Workshop on Self-Adaptice and Autonomic Computing
   Systems
CY 2004
CL Madrid, SPAIN
SP Rafael, MICROSOFT, MFAT, IBM, NSF, STRIMM, Lynn & William Frankel Ctr Comp Sci, Rita Altura Trust Chair Comp Sci
DE self-stabilizing systems; operating system fault tolerance
AB This work presents several approaches for designing self-stabilizing operating systems. The first approach is based on periodical automatic reinstalling of the operating system and restart. The second reinstalls the executable portion of the operating system and uses predicates on the operating system state ( content of variables) to ensure that the operating system does not diverge from its specifications. The last approach presents an example of a tailored self-stabilizing very tiny operating system. Prototypes using the Intel Pentium processor were composed.
C1 [Dolev, Shlomi; Yagel, Reuven] Ben Gurion Univ Negev, Dept Comp Sci, IL-84105 Beer Sheva, Israel.
C3 Ben Gurion University
RP Dolev, S (corresponding author), Ben Gurion Univ Negev, Dept Comp Sci, IL-84105 Beer Sheva, Israel.
EM dolev@cs.bgu.ac.il; yagel@cs.bgu.ac.il
OI Dolev, Shlomi/0000-0001-5418-6670
CR ABROSSIMOV V, 1996, FAST ERROR RECOVERY
   *AIAA, 1998, P MIL AER PROGR LOG
   [Anonymous], 2002, UCBCSD021175
   [Anonymous], P 10 INT C ARCH SUPP
   [Anonymous], 2000, Self-Stabilization
   ARMAND F, 2001, CHORUSOS FEATURES AR
   BRUKMAN O, 2003, P IEEE INT C SOFTW S
   Castro M, 2002, ACM T COMPUT SYST, V20, P398, DOI 10.1145/571637.571640
   DEMSKY B, 2008, AUTOMATIC DETECTION
   DIJKSTRA EW, 1974, COMMUN ACM, V17, P643, DOI 10.1145/361179.361202
   DOLEV S, 1990, PROCEEDINGS OF THE NINTH ANNUAL ACM SYMPOSIUM ON PRINCIPLES OF DISTRIBUTED COMPUTING, P103, DOI 10.1145/93385.93407
   Dolev S, 2002, SYM REL DIST SYST, P384, DOI 10.1109/RELDIS.2002.1180215
   Dolev S, 1999, 19TH IEEE INTERNATIONAL CONFERENCE ON DISTRIBUTED COMPUTING SYSTEMS - WORKSHOP ON SELF-STABILIZING SYSTEMS, PROCEEDINGS, P25, DOI 10.1109/SLFSTB.1999.777483
   DOLEV S, 2006, IEEE T COMPUTERS, V55
   DOLEV S, 2005, P 7 S SELF STAB SYST
   DOLEV S, 2006, P 8 INT S STAB SAF S, P276
   DOLEV S, 1995, P 2 WORKSH SELF STAB
   DUNN WR, 2003, COMPUTER         NOV, P40
   ENGLER DR, 1994, P 6 ACM SIGOPS EUR W
   ENGLER DR, 1995, P 5 WORKSH HOT TOP O
   FOX A, 2003, SCI AM JUN
   HILL J, 2000, P INT C ARCH SUPP PR
   HONG Y, 2002, P WORKSH SELF HEAL A
   *IBM, 2001, AUT COMP
   *INT CORP, 2006, IA 32 INT ARCH SOFTW
   *JAL, 2008, JAL 2 RT TECHN FEAT
   Kaiser G, 2003, PROCEEDINGS OF THE AUTONOMIC COMPUTING WORKSHOP/FIFTH ANNUAL INTERNATIONAL WORKSHOP ON ACTIVE MIDDLEWARE SERVICES, P22
   Kephart JO, 2003, COMPUTER, V36, P41, DOI 10.1109/MC.2003.1160055
   LAMPORT L, 1982, ACM T PROGR LANG SYS, V4, P382, DOI 10.1145/357172.357176
   Landau C. R., 1992, Proceedings of the Second International Workshop on Object Orientation in Operating systems (Cat. No.92TH0477-0), P86, DOI 10.1109/IWOOOS.1992.252995
   MACTAGGART M, 2002, APPL DEV ADVISOR
   MEYER B, 1992, COMPUTER, V25, P40, DOI 10.1109/2.161279
   *MICR, 2008, WIND XP OFF XP FEAT
   Mukherjee S. S., 2003, P 36 ANN INT S MICR
   MULLENDER SJ, 1990, COMPUTER, V23, P44, DOI 10.1109/2.53354
   MUNZ H, 1997, REAL TIME MAGAZINE 1
   *QNX SOFTW SYST, 2008, REALT OP SYST SOFTW
   SHIEH A, 2005, P S OP SYST PRINC WI
   Silberschatz A., 2003, OPERATING SYSTEM CON, V6th
   SWIFT M, 2005, THESIS U WASHINGTON
   Swift Michael M., 2003, P 19 ACM S OP SYST P
   Tanenbaum A.S, 2001, Modern Operating Systems
   Tanenbaum Andrew S, 2006, Operating Systems-Design and Implementation
   WAHBE R, 1993, P S OP SYST PRINC SO
   2008, BOCHS IA 32 EMULATOR
   2008, NETWIDE ASSEMBLER
NR 46
TC 5
Z9 5
U1 0
U2 46
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUL-AUG
PY 2008
VL 34
IS 4
BP 564
EP 576
DI 10.1109/TSE.2008.46
PG 13
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Engineering
GA 330JI
UT WOS:000257936500010
DA 2024-07-18
ER

PT J
AU Escalona, MJ
   Aragón, G
AF Escalona, Maria Jose
   Aragon, Gustavo
TI NDT.: A model-driven approach for Web requirements
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Software Engineering for internet project; surveys of historical
   development of one particular area; requirements/specification
ID SYSTEM
AB Web engineering is a new research line in software engineering that covers the definition of processes, techniques, and models suitable for Web environments in order to guarantee the quality of results. The research community is working in this area and, as a very recent line, they are assuming the Model-Driven paradigm to support and solve some classic problems detected in Web developments. However, there is a lack in Web requirements treatment. This paper presents a general vision of Navigational Development Techniques (NDT), which is an approach to deal with requirements in Web systems. It is based on conclusions obtained in several comparative studies and it tries to fill some gaps detected by the research community. This paper presents its scope, its most important contributions, and offers a global vision of its associated tool: NDT-Tool. Furthermore, it analyzes how Web Engineering can be applied in the enterprise environment. NDT is being applied in real projects and has been adopted by several companies as a requirements methodology. The approach offers a Web requirements solution based on a Model-Driven paradigm that follows the most accepted tendencies by Web engineering.
C1 [Escalona, Maria Jose] Univ Seville, ETS Ingn Informat, Dept Lenguajes & Sistemas Informat, Seville 41012, Spain.
C3 University of Sevilla
RP Escalona, MJ (corresponding author), Univ Seville, ETS Ingn Informat, Dept Lenguajes & Sistemas Informat, Avenida Reina Mercedes S-N, Seville 41012, Spain.
EM mjescalona@us.es; gustavo.aragon@everis.com
RI Escalona, María José/G-3900-2010
OI Escalona, María José/0000-0002-6435-1497
CR [Anonymous], DATABASE SYSTEMS, DOI DOI 10.1145/320434.320440
   [Anonymous], UN MOD LANG SUP VERS
   BARESI L, 2000, P 6 WORLD MULT SYST
   BARESI L, 2001, P 34 ANN HAW INT C S, P1285
   Barry C., 2001, IEEE Multimedia, V8, P52, DOI 10.1109/93.917971
   BIEBER M, 1998, P 2 WORKSH AD HYP HY
   CACHERO C, 2003, THESIS U ALICANTE
   Ceri S, 2000, COMPUT NETW, V33, P137, DOI 10.1016/S1389-1286(00)00040-2
   CODD EF, 1992, RELATIONAL MODEL DAT
   Conallen J., 1999, BUILDING WEB APPL UM
   CZAENECKI K, 2003, P OOPSLA WORKSH GEN
   De Troyer OMF, 1998, COMPUT NETWORKS ISDN, V30, P85, DOI 10.1016/S0169-7552(98)00042-7
   Deshpande Y., 2002, J WEB ENG, V1, P3, DOI DOI 10.4018/978-1-59904-492-7.CH001
   Escalona MJ, 2007, ADV ENG SOFTW, V38, P267, DOI 10.1016/j.advengsoft.2006.07.006
   Escalona M.J., 2004, J WEB ENG, V2, P193
   Escalona M.J., 2003, Proceedings of the Fourth Int'l Conf. Web Eng, P212
   Escalona MJ, 2006, WEBIST 2006: PROCEEDINGS OF THE SECOND INTERNATIONAL CONFERENCE ON WEB INFORMATION SYSTEMS AND TECHNOLOGIES, P310
   ESCALONA MJ, 2006, P 15 INT C INF SYST
   ESCALONA MJ, 2004, THESIS U SEVILLE
   ESCALONA MJ, 2007, P 16 INT C INF SYST
   Fernandez J. L., 2000, RELIABLE SOFTWARE TE
   Fons Y, 2003, NUCL PLANT J, V21, P22
   GARZOTTO F, 1993, ACM T INFORM SYST, V11, P1, DOI 10.1145/151480.151483
   Gellersen HW, 1997, COMPUT NETWORKS ISDN, V29, P1429, DOI 10.1016/S0169-7552(97)00038-X
   GU A, 2001, THESIS U TECHNOLOGY
   GUTIERREZ JJ, 2006, P 15 INT C INF SYST
   INSFRAN E, 2002, REQUIREMENTS ENG J, V7
   ISAKOWITZ T, 1995, COMMUN ACM, V38, P34, DOI 10.1145/208344.208346
   KAPPEL G, 2001, P INT WORKSH DAT SEM
   KOCH N, 2001, THESIS FAST REIHE SO, V12
   KOCH N, 2006, P 2 INT WORKSH MOD D, V155
   Koch N., 2006, Proc. Sixth Int'l Conf. Web Eng, P281
   KRAUS A, 2003, 0301 LUDW MAX U
   LANG M, 2002, SITE WHERE PARALLELS, P883
   LANGE D, 1995, P 31 ANN C SYST SCI
   Lee CO, 1998, SIAM J NUMER ANAL, V35, P121, DOI 10.1137/S0036142995282832
   LIDDLE SW, 2001, P 1 INT WORKSH WEB O
   LOWE D, 2002, WEB ENG TRACK WWW C
   Melia S, 2006, J WEB ENG, V5, P121
   MIRBEL I, 2003, THESIS U NICE
   MORENO N, 2007, WEB ENG WEB APPL DES, pCH12
   MORENO N, 2006, P 2 INT WORKSH MOD D
   NANARD J, 1995, COMMUN ACM, V38, P49, DOI 10.1145/208344.208347
   OLSINA L, 1998, P WORKSH HYP DEV PRO
   OMG, 2003, MDA GUID VERS 1 0 1
   PASTOR O, 1997, P 9 INT C ADV INF SY
   *QUER QVT MERG GRO, 2004, REV SUBM MOF 2 UNPUB
   QUERALT P, 2006, 3 TALLER DESARROLLO
   RETSCHITZEGGER W, 2000, P AMCIS 2000, V1, P149
   ROSSI G, 1996, THESIS U PUC RIO
   Schauerhuber A., 2006, P 2 INT WORKSH MOD D
   SCHMIDT DC, 2006, COMPUTER         FEB
   VALDERAS P, 2006, INT J WEB ENG TECHNO, P1476
   Vidgen R, 2002, INFORM SYST J, V12, P247, DOI 10.1046/j.1365-2575.2002.00129.x
   VILAIN P, 2000, P 3 INT C UN MOD LAN
   VILLADIEGO D, 2004, LSI200402 U SEV
   [No title captured]
NR 57
TC 93
Z9 98
U1 0
U2 5
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAY-JUN
PY 2008
VL 34
IS 3
BP 377
EP 390
DI 10.1109/TSE.2008.27
PG 14
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 306CA
UT WOS:000256223600005
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Hall, JG
   Rapanotti, L
   Jackson, MA
AF Hall, Jon G.
   Rapanotti, Lucia
   Jackson, Michael A.
TI Problem Oriented Software Engineering: Solving the package router
   control problem
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE software engineering; design methodology; problem orientation
ID SPECIFICATION
AB Problem orientation is gaining interest as a way of approaching the development of software intensive systems, and yet, a significant example that explores its use is missing from the literature. In this paper, we present the basic elements of Problem Oriented Software Engineering (POSE), which aims at bringing both nonformal and formal aspects of software development together in a single framework. We provide an example of a detailed and systematic POSE development of a software problem: that of designing the controller for a package router. The problem is drawn from the literature, but the analysis presented here is new. The aim of the example is twofold: to illustrate the main aspects of POSE and how it supports software engineering design and to demonstrate how a nontrivial problem can be dealt with by the approach.
C1 [Hall, Jon G.; Rapanotti, Lucia; Jackson, Michael A.] Open Univ, Ctr Res Comp, Milton Keynes MK7 6AA, Bucks, England.
C3 Open University - UK
RP Hall, JG (corresponding author), Open Univ, Ctr Res Comp, Walton Hall, Milton Keynes MK7 6AA, Bucks, England.
EM J.G.Hall@open.ac.uk; L.Rapanotti@open.ac.uk; jacksonma@acm.org
OI Hall, Jon/0000-0002-5619-820X
CR [Anonymous], 2000, RATIONAL UNIFIED PRO
   BACK RJ, 1994, P 5 INT C CONC THEOR, P367
   BALZER R, 1981, IEEE T SOFTWARE ENG, V7, P3, DOI 10.1109/TSE.1981.230814
   Bloomfield R., 1998, Technical report
   FEATHER MS, 1987, ACM T PROGR LANG SYS, V9, P198, DOI 10.1145/22719.22947
   Fowler M., 2002, Patterns of Enterprise Application Architecture
   Hall J.G., 2007, P 10 IEEE INT S HIGH
   HALL JG, 2006, 200610 OP U DEP COMP
   JACKSON D, 2001, MICORMODELS SOFTWARE
   JACKSON M, 2001, PROBLEM FRAMES ANALY
   KELLY T, 2004, P WORKSH ASS CAS BES
   Kelly T, 1998, THESIS U YORK
   KICZALES G, 2005, P 19 EUR C OBJ OR PR
   Kleene S.C., 1964, INTRO METAMATHEMATIC
   KRASNER GE, 1988, J OBJECT-ORIENT PROG, V1, P41
   Larman Craig., 2002, APPLYING UML PATTERN, V3nd
   LEA D, 1994, ADAGEOSW9401 STAT U
   LEITER E, 2002, ACM SIGSOFT SOFTWARE, V27
   LI Z, 2006, P 2 ACM INT WORKSH A
   MANNERING D, 2007, P 2 IET C SYST SAF
   MANNERING D, 2007, P FASE 2007, P398
   MANNERING D, 2007, P 26 INT C COMP SAF, P252
   Martin A. P., 1996, Formal Aspects of Computing, V8, P479, DOI 10.1007/BF01213535
   Mellor SJ, 2003, IEEE SOFTWARE, V20, P14, DOI 10.1109/MS.2003.1231145
   MORGAN C, 1994, INT SERIES COMPUTER
   *OMG, 2007, UN MOD LANG VERS 2 0
   OWRE S, 1992, P 11 INT C AUT DED
   Rapanotti L, 2006, IEE P-SOFTW, V153, P183, DOI 10.1049/ip-sen:20060011
   Seater R., 2006, P 2 INT WORKSH ADV A
   Smith D, 2005, MATER WORLD, V13, P3
   STRUNK EA, 2006, P 2 INT WORKSH ADV A
   SWARTOUT W, 1982, COMMUN ACM, V25, P438, DOI 10.1145/358557.358572
   Toulmin S., 1958, The uses of argument
   TURSKI WM, 1986, INFORM PROCESSING, V86
   van Lamsweerde A, 2003, LECT NOTES COMPUT SC, V2804, P25
   van Lamsweerde A, 2001, FIFTH IEEE INTERNATIONAL SYMPOSIUM ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P249
   van Lamsweerde A., 1991, P AAAI SPRING S SERI, P59
   WILE DS, 1983, COMMUN ACM, V26, P902, DOI 10.1145/182.358443
   Zave P., 1997, ACM Transactions on Software Engineering and Methodology, V6, P1, DOI 10.1145/237432.237434
NR 39
TC 31
Z9 41
U1 0
U2 2
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAR-APR
PY 2008
VL 34
IS 2
BP 226
EP 241
DI 10.1109/TSE.2007.70769
PG 16
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 276SC
UT WOS:000254161500005
OA Green Published
DA 2024-07-18
ER

PT J
AU Hannay, JE
   Jorgensen, M
AF Hannay, Jo E.
   Jorgensen, Magne
TI The role of deliberate artificial design elements in software
   engineering experiments
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Review
DE artificiality; realism; generalization; theory; experiments; research
   methods; empirical software engineering
ID OBJECT; GUIDELINES; CHALLENGE; JUDGMENT
AB Increased realism in software engineering experiments is often promoted as an important means of increasing generalizability and industrial relevance. In this context, artificiality, e. g., the use of constructed tasks in place of realistic tasks, is seen as a threat. In this paper, we examine the opposite view that deliberately introduced artificial design elements may increase knowledge gain and enhance both generalizability and relevance. In the first part of this paper, we identify and evaluate arguments and examples in favor of and against deliberately introducing artificiality into software engineering experiments. We find that there are good arguments in favor of deliberately introducing artificial design elements to 1) isolate basic mechanisms, 2) establish the existence of phenomena, 3) enable generalization from particularly unfavorable to more favorable conditions (persistence of phenomena), and 4) relate experiments to theory. In the second part of this paper, we summarize a content analysis of articles that report software engineering experiments published over a 10-year period from 1993 to 2002. The analysis reveals a striving for realism and external validity, but little awareness of for what and when various degrees of artificiality and realism are appropriate. Furthermore, much of the focus on realism seems to be based on a narrow understanding of the nature of generalization. We conclude that an increased awareness and deliberation as to when and for what purposes both artificial and realistic design elements are applied is valuable for better knowledge gain and quality in empirical software engineering experiments. We also conclude that time spent on studies that have obvious threats to validity that are due to artificiality might be better spent on studies that investigate research questions for which artificiality is a strength rather than a weakness. However, arguments in favor of artificial design elements should not be used to justify studies that are badly designed or that have research questions of low relevance.
C1 [Hannay, Jo E.; Jorgensen, Magne] Simula Res Lab, Dept Software Engn, NO-1325 Lysaker, Norway.
   [Hannay, Jo E.; Jorgensen, Magne] Univ Oslo, Dept Informat, Ind Syst Dev Grp, NO-0316 Oslo, Norway.
C3 University of Oslo
RP Hannay, JE (corresponding author), Simula Res Lab, Dept Software Engn, Pb 134, NO-1325 Lysaker, Norway.
EM johannay@simula.no; magnej@simula.no
RI Jorgensen, Magne/H-4402-2016
CR ABDELHAMID TK, 1993, IEEE T SOFTWARE ENG, V19, P603, DOI 10.1109/32.232025
   Agarwal R, 1999, IEEE T SOFTWARE ENG, V25, P541, DOI 10.1109/32.799953
   Agarwal R., 1996, Journal of Management Information Systems, V13, P137
   [Anonymous], 2003, Dynamics of Complex Systems
   [Anonymous], 1994, Statistics
   [Anonymous], 1993, Experimental Economics
   Aronson E., 1998, HDB SOCIAL PSYCHOL, V4th, P99
   Aronson E., 1994, SOCIAL PSYCHOL HEART
   Axelrod R. M., 2001, Harnessing complexity
   BACHARACH SB, 1989, ACAD MANAGE REV, V14, P496, DOI 10.2307/258555
   Basili V. R., 1996, Empirical Software Engineering, V1, P133, DOI 10.1007/BF00368702
   Basili VR, 1999, IEEE T SOFTWARE ENG, V25, P456, DOI 10.1109/32.799939
   BASILI VR, 1996, EMPIR SOFTW ENG, V1, P105, DOI DOI 10.1007/BF00368700
   Benander AC, 1996, J SYST SOFTWARE, V32, P73, DOI 10.1016/0164-1212(95)00043-7
   BIANCHI A, 2001, P 7 INT SOFTW METR S, P42, DOI DOI 10.1109/METRIC.2001.915514
   Biffl S, 2001, PROC INT CONF SOFTW, P155, DOI 10.1109/ICSE.2001.919090
   Boswell T, 1999, SOCIOL METHOD RES, V28, P154, DOI 10.1177/0049124199028002002
   Briand L, 1997, INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE, PROCEEDINGS, P130, DOI [10.1109/ICSM.1997.624239, 10.1023/A:1009720117601]
   Briand LC, 2001, IEEE T SOFTWARE ENG, V27, P513, DOI 10.1109/32.926174
   Campbell J.P., 1986, Generalizing from laboratory to field settings, P269
   Carlsmith J.M., 1976, METHODS RES SOCIAL P
   Cartwright M, 1998, INFORM SOFTWARE TECH, V40, P795, DOI 10.1016/S0950-5849(98)00105-0
   Cooksey R.W., 1996, JUDGMENT ANAL THEORY
   Cooksey R.W., 1996, THINK REASONING, V2, P141, DOI [DOI 10.1080/135467896394483, 10.1080/135467896394483]
   Cronbach L.J., 1982, DESIGNING EVALUATION
   Cronbach L.J., 1980, REFORM PROGRAM EVALU
   Daly J., 1996, Empirical Software Engineering, V1, P109, DOI 10.1007/BF00368701
   Drappa A., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, P199, DOI 10.1109/ICSE.2000.870411
   Dreyfus H., 1988, Mind over machine
   Endres A., 2003, A Handbook of Software and Systems Engineering: Empirical Observations, Laws, and Theories
   Feynman R. P., 1985, The strange theory of light and matter
   Finney K, 1998, J SYST SOFTWARE, V42, P3, DOI 10.1016/S0164-1212(98)00003-X
   Fisher R. A., 1937, The design of experiments.
   FOSCHI M, 1994, GROUP PROCESSES
   Glass RL, 2002, INFORM SOFTWARE TECH, V44, P491, DOI 10.1016/S0950-5849(02)00049-6
   Graneheim UH, 2004, NURS EDUC TODAY, V24, P105, DOI 10.1016/j.nedt.2003.10.001
   GRUSCHKE T, 2005, P 11 IEEE INT METR S, P4
   Guala F, 2005, J ECON METHODOL, V12, P185, DOI 10.1080/13501780500086024
   Hammond K.R., 1975, Human judgment and decision processes, P271, DOI DOI 10.1016/B978-0-12-397250-7.50016-7
   Hammond K.R., 1996, THINK REASONING, V2, P239
   Hammond K.R., 2001, ESSENTIAL BRUNSWIK
   Hannay JE, 2007, IEEE T SOFTWARE ENG, V33, P87, DOI 10.1109/TSE.2007.12
   Henry SM, 1999, J SYST SOFTWARE, V44, P241, DOI 10.1016/S0164-1212(98)10060-2
   HERBSLEB JD, 2003, P EUR SOFTW ENG C AC, P112
   HOGARTH RM, 1981, PSYCHOL BULL, V90, P197, DOI 10.1037/0033-2909.90.2.197
   HOGARTH RM, 2001, ED I
   Hogarth RM, 2005, J ECON METHODOL, V12, P253, DOI 10.1080/13501780500086172
   Holt R., 1987, Empirical studies of programmers, P33
   Host M., 2000, Empirical Software Engineering, V5, P201, DOI 10.1023/A:1026586415054
   HOST M, 2005, P 27 INT C SOFTW ENG
   HOUDEK F, 2003, LECT NOTES EMPIRICAL, V12, P133
   Howard GS, 1999, J SYST SOFTWARE, V45, P177, DOI 10.1016/S0164-1212(98)10077-8
   Ilgen D.R., 1986, GEN LAB FIELD SETTIN, P257
   Juristo N., 2003, BASICS SOFTWARE ENG
   Juslin P., 2001, ESSENTIAL BRUNSWIK B, P404
   KAHNEMAN D, 1991, J ECON PERSPECT, V5, P193, DOI 10.1257/jep.5.1.193
   Keil M, 2000, J SYST SOFTWARE, V53, P145, DOI 10.1016/S0164-1212(00)00010-8
   Kitchenham BA, 2002, IEEE T SOFTWARE ENG, V28, P721, DOI 10.1109/TSE.2002.1027796
   KITCHENHAM BA, 2004, TRSE0401NICTA KEEL U
   Kracauer S, 1952, PUBLIC OPIN QUART, V16, P631, DOI 10.1086/266427
   Krippendorff K., 2018, CONTENT ANAL INTRO I
   Laitenberger O, 2001, IEEE T SOFTWARE ENG, V27, P387, DOI 10.1109/32.922713
   Laitenberger O, 1997, INFORM SOFTWARE TECH, V39, P781, DOI 10.1016/S0950-5849(97)00030-X
   LAITENBERGER O, 2003, LECT NOTES EMPIRICAL, V12, P167
   Lloyd KB, 1999, J SYST SOFTWARE, V45, P203, DOI 10.1016/S0164-1212(98)10079-1
   Locke E.A., 1986, GEN LAB FIELD SETTIN
   Lucas JW, 2003, SOCIOL THEOR, V21, P236, DOI 10.1111/1467-9558.00187
   Lynch JG, 1999, J ACAD MARKET SCI, V27, P367, DOI 10.1177/0092070399273007
   Mackie John., 1993, CAUSATION
   Markovsky Barry., 1994, Group Processes: Sociological Analyses, P3
   Maxion RA, 2000, IEEE T SOFTWARE ENG, V26, P888, DOI 10.1109/32.877848
   Mayring P., 2004, Qualitative content analysis: theoretical foundation, basic procedures and software solution, V1, P159
   Miller J, 2005, INFORM SOFTWARE TECH, V47, P233, DOI 10.1016/j.infsof.2004.08.005
   MOOK DG, 1983, AM PSYCHOL, V38, P379, DOI 10.1037/0003-066X.38.4.379
   Moore G., 2002, CROSSING CHASM
   NASH AN, 1971, PERS PSYCHOL, V24, P397, DOI 10.1111/j.1744-6570.1971.tb00364.x
   Ohlsson MC, 1998, INFORM SOFTWARE TECH, V40, P831, DOI 10.1016/S0950-5849(98)00097-4
   Porter A., 1998, ACM Transactions on Software Engineering and Methodology, V7, P41, DOI 10.1145/268411.268421
   Porter A., 1998, Empirical Software Engineering, V3, P355, DOI 10.1023/A:1009776104355
   PORTER AA, 1995, IEEE T SOFTWARE ENG, V21, P563, DOI 10.1109/32.391380
   Ramanujan S, 2000, J SYST SOFTWARE, V54, P137, DOI 10.1016/S0164-1212(00)00033-9
   Robson C., 2002, Real world research
   Rogers EM, 2003, DIFFUSION INNOVATION
   Roper M, 1997, INFORM SOFTWARE TECH, V39, P763, DOI 10.1016/S0950-5849(97)00028-1
   ROSENBERG A, 2001, PHILOS SCI CONT INTR
   Rothermel K. J., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, P230, DOI 10.1109/ICSE.2000.870414
   SALMON WC, 1989, SCI EXPLANATION MINN, V13, P3
   Shadish W. R., 2002, EXPT QUASI EXPT DESI
   Simon H.A., 1996, The Sciences of the Artificial, V3rd ed
   Sjoberg DIK, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P358, DOI 10.1109/FOSE.2007.30
   Sjoberg DIK, 2005, IEEE T SOFTWARE ENG, V31, P733, DOI 10.1109/TSE.2005.97
   Sjoberg DIK, 2002, 2002 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P17, DOI 10.1109/ISESE.2002.1166921
   SJOBERG DIK, 2008, ADV TOPICS EMPIRICAL
   Sugden R, 2005, J ECON METHODOL, V12, P291, DOI 10.1080/13501780500086248
   Sugden R, 2005, J ECON METHODOL, V12, P177, DOI 10.1080/13501780500085943
   Tichy WF, 1998, COMPUTER, V31, P32, DOI 10.1109/2.675631
   TVERSKY A, 1974, SCIENCE, V185, P1124, DOI 10.1126/science.185.4157.1124
   Van Fraassen Bas., 1980, The Scientific Image
   VESSEY I, 1994, COMMUN ACM, V37, P102, DOI 10.1145/175290.175305
   Vessey I, 1991, INFORM SYST RES, V2, P63, DOI 10.1287/isre.2.1.63
   Vinter R, 1998, FIFTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM - METRICS 1998, PROCEEDINGS, P216, DOI 10.1109/METRIC.1998.731248
   VOSNIADOU S, 1989, SIMILARITY AND ANALOGICAL REASONING, P1, DOI 10.1017/CBO9780511529863.002
   Waller WS, 2003, ORGAN BEHAV HUM DEC, V91, P254, DOI 10.1016/S0749-5978(03)00024-4
   WEBSTER M, 1994, GROUP PROCESSES SOCI, P43
   WHETTEN DA, 1989, ACAD MANAGE REV, V14, P490, DOI 10.2307/258554
   Whiteside J., 1985, Proceedings of the SIGCHI Conference on Human Factors in Computing Systems, P185, DOI DOI 10.1145/317456.317490
   Yin R.K., 2003, CASE STUDY RES DESIG
NR 107
TC 37
Z9 37
U1 0
U2 5
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAR-APR
PY 2008
VL 34
IS 2
BP 242
EP 259
DI 10.1109/TSE.2008.13
PG 18
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 276SC
UT WOS:000254161500006
DA 2024-07-18
ER

PT J
AU McMaster, S
   Memon, AM
AF McMaster, Scott
   Memon, Atif M.
TI Call-stack coverage for GUI test suite reduction
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE testing strategies; test coverage of code; test management; testing
   tools
AB Graphical user interfaces (GUIs) are used as front ends to most of today's software applications. The event-driven nature of GUIs presents new challenges for testing. One important challenge is test suite reduction. Conventional reduction techniques/tools based on static analysis are not easily applicable due to the increased use of multilanguage GUI implementations, callbacks for event handlers, virtual function calls, reflection, and multithreading. Moreover, many existing techniques ignore code in libraries and fail to consider the context in which event handlers execute. Consequently, they yield GUI test suites with seriously impaired fault-detection abilities. This paper presents a reduction technique based on the call-stack coverage criterion. Call stacks may be collected for any executing program with very little overhead. Empirical studies in this paper compare reduction based on call-stack coverage to reduction based on line, method, and event coverage, including variations that control for the size and optional consideration of library methods. These studies show that call-stack-based reduction provides unique trade-offs between the reduction in test suite size and the loss of fault detection effectiveness, which may be valuable in practice. Additionally, an analysis of the relationship between coverage requirements and fault-revealing test cases is presented.
C1 [McMaster, Scott; Memon, Atif M.] Univ Maryland, Dept Comp Sci, College Pk, MD 20742 USA.
C3 University System of Maryland; University of Maryland College Park
RP McMaster, S (corresponding author), Univ Maryland, Dept Comp Sci, College Pk, MD 20742 USA.
EM scottmcm@cs.ttmd.edu; atif@cs.ttmd.edu
CR [Anonymous], P ACM SIGPLAN C PROG
   Dickinson W, 2001, PROC INT CONF SOFTW, P339, DOI 10.1109/ICSE.2001.919107
   DO H, 2006, P 14 ACM SIGSOFT S F
   Elbaum S, 2002, IEEE T SOFTWARE ENG, V28, P159, DOI 10.1109/32.988497
   FRANKL PG, 1998, P 6 ACM SIGSOFT S FD
   Harder M, 2003, PROC INT CONF SOFTW, P60, DOI 10.1109/ICSE.2003.1201188
   Harrold M.J., 1993, ACM T SOFTWARE ENG M, V2
   HORGAN JR, 1991, P 4 ACM S TEST AN VE
   Hunt G, 1999, PROCEEDINGS OF THE 3RD USENIX WINDOWS NT SYMPOSIUM, P135
   Jeffrey D, 2005, PROC IEEE INT CONF S, P549
   LEON D, 2003, P 14 IEEE INT S SOFT
   McMaster S, 2005, PROC IEEE INT CONF S, P539
   McMaster S., 2006, P 17 IEEE INT S SOFT
   Memon A, 2005, J SOFTW MAINT EVOL-R, V17, P27, DOI 10.1002/smr.305
   Memon AM, 2005, IEEE T SOFTWARE ENG, V31, P884, DOI 10.1109/TSE.2005.117
   Memon AM, 2001, IEEE T SOFTWARE ENG, V27, P144, DOI 10.1109/32.908959
   MEMON AM, 2000, P ACM SIGSOFT 8 INT, P30
   MEMON AM, 2001, P 8 EUR SOFTW ENG C, P256
   OFFUTT J, 1995, P 12 INT C TEST COMP, P111
   RAPPS S, 1985, IEEE T SOFTWARE ENG, V11, P367, DOI 10.1109/TSE.1985.232226
   Rothermel G, 1998, PROC IEEE INT CONF S, P34, DOI 10.1109/ICSM.1998.738487
   Rothermel G, 2001, IEEE T SOFTWARE ENG, V27, P929, DOI 10.1109/32.962562
   ROTHERMEL G, 2002, J SOFTWARE TESTING V, V12
   ROUNTEV A, 2004, P ACM SIGSOFT INT S, P11
   Sampath S, 2004, 19TH INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P132, DOI 10.1109/ASE.2004.1342731
   SAMPATH S, 2006, P 17 IEEE INT S SOFT
   WAGNER S, 2006, P ACM INT S SOFTW TE
   WONG WE, 1995, PROC INT CONF SOFTW, P41, DOI 10.1145/225014.225018
   Xie T, 2004, 19TH INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P196
NR 29
TC 43
Z9 58
U1 0
U2 6
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JAN-FEB
PY 2008
VL 34
IS 1
BP 99
EP 115
DI 10.1109/TSE.2007.70756
PG 17
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 265QH
UT WOS:000253375500008
DA 2024-07-18
ER

PT J
AU Fluri, B
   Würsch, M
   Pinzger, M
   Gall, HC
AF Fluri, Beat
   Wuersch, Michael
   Pinzger, Martin
   Gall, Harald C.
TI Change distilling:: Tree differencing for fine-grained source code
   change extraction
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE source code change extraction; tree-differencing algorithms; software
   repositories; software evolution analysis
ID EDITING DISTANCE; ASSOCIATION; ALGORITHMS; TOOL
AB A key issue in software evolution analysis is the identification of particular changes that occur across several versions of a program. We present change distilling, a tree differencing algorithm for fine- grained source code change extraction. For that, we have improved the existing algorithm by Chawathe et al. for extracting changes in hierarchically structured data [ 8]. Our algorithm extracts changes by finding both a match between the nodes of the compared two abstract syntax trees and a minimum edit script that can transform one tree into the other given the computed matching. As a result, we can identify fine- grained change types between program versions according to our taxonomy of source code changes. We evaluated our change distilling algorithm with a benchmark that we developed, which consists of 1,064 manually classified changes in 219 revisions of eight methods from three different open source projects. We achieved significant improvements in extracting types of source code changes: Our algorithm approximates the minimum edit script 45 percent better than the original change extraction approach by Chawathe et al. We are able to find all occurring changes and almost reach the minimum conforming edit script, that is, we reach a mean absolute percentage error of 34 percent, compared to the 79 percent reached by the original algorithm. The paper describes both our change distilling algorithm and the results of our evaluation.
C1 Univ Zurich, Dept Informat, CH-8050 Zurich, Switzerland.
C3 University of Zurich
RP Fluri, B (corresponding author), Univ Zurich, Dept Informat, Binzmuhlestrasse 14, CH-8050 Zurich, Switzerland.
EM fluri@ifi.uzh.ch; wwersch@ifi.uzh.ch; pinzger@ifi.uzh.ch;
   gall@ifi.uzh.ch
OI Gall, Harald/0000-0002-3874-5628
CR ADAMSON GW, 1974, INFORM STORAGE RET, V10, P253, DOI 10.1016/0020-0271(74)90020-5
   [Anonymous], 2006, P 2006 INT WORKSH MI, DOI DOI 10.1145/1137983.1137999
   [Anonymous], 1991, SOFTWARE-PRACTICE AND EXPERIENCE, DOI DOI 10.1002/SPE.4380210706
   [Anonymous], PROGRAMMING LANGUAGE
   Apiwattanapong T, 2007, AUTOMAT SOFTW ENG, V14, P3, DOI 10.1007/s10515-006-0002-0
   Asklund Ulf., 1994, Proceedings ofNordic Workshop on Programming Environment Research, P231
   Baxter ID, 1998, PROC IEEE INT CONF S, P368, DOI 10.1109/ICSM.1998.738528
   BERNSTEIN A, 2005, GENERIC JAVA LIB SIM
   Bille P, 2005, THEOR COMPUT SCI, V337, P217, DOI 10.1016/j.tcs.2004.12.030
   CANFORA G, 2007, P 4 INT WORKSH MIN S, P14
   Chawathe S., 1996, Proceedings of the ACM SIGMOD International Conference on Management of Data, P493
   Cubranic D, 2005, IEEE T SOFTWARE ENG, V31, P446, DOI 10.1109/TSE.2005.71
   DEMEYER S, 1999, FAMIX FAMOOS INFORMA
   DICE LR, 1945, ECOLOGY, V26, P297, DOI 10.2307/1932409
   Fluri B, 2006, INT C PROGRAM COMPRE, P35, DOI 10.1109/ICPC.2006.16
   Gall H, 1998, PROC IEEE INT CONF S, P190, DOI 10.1109/ICSM.1998.738508
   Godfrey MW, 2005, IEEE T SOFTWARE ENG, V31, P166, DOI 10.1109/TSE.2005.28
   HASSAN AE, 2005, P INT WORKSH PRINC S, P76
   HUNT JJ, 2001, THESIS U KARLRUHE GE
   HUNT JW, 1977, COMMUN ACM, V20, P350, DOI 10.1145/359581.359603
   Jaccard P., 1912, New Phytologist, V11, P37, DOI [10.1111/j.1469-8137.1912.tb05611.x, DOI 10.1111/J.1469-8137.1912.TB05611.X]
   JACKSON D, 1994, INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE, PROCEEDINGS, P243, DOI 10.1109/ICSM.1994.336770
   Kelter U., 2005, SOFTWARE ENG, P105
   Kim DW, 2005, J HEART LUNG TRANSPL, V24, P152, DOI 10.1016/j.healun.2003.10.024
   Kim M, 2007, PROC INT CONF SOFTW, P333
   LEHMAN MM, 1980, P IEEE, V68, P1060, DOI 10.1109/PROC.1980.11805
   Levenshtein V. I., 1966, SOV PHYS DOKL, V10, P707
   Maletic JI, 2004, PROC IEEE INT CONF S, P210, DOI 10.1109/ICSM.2004.1357805
   Mens T, 2002, IEEE T SOFTWARE ENG, V28, P449, DOI 10.1109/TSE.2002.1000449
   Purushothaman R, 2005, IEEE T SOFTWARE ENG, V31, P511, DOI 10.1109/TSE.2005.74
   Raghavan S, 2004, PROC IEEE INT CONF S, P188, DOI 10.1109/ICSM.2004.1357803
   SAGER T, 2006, P 2006 INT WORKSH MI, P65
   SHASHA D, 1990, J ALGORITHM, V11, P581, DOI 10.1016/0196-6774(90)90011-3
   SLIWERSKI J, 2005, P 10 EUR SOFTW ENG C, P107
   Sliwerski J, 2005, P INT WORKSH MIN SOF, P24
   TAI KC, 1979, J ACM, V26, P422, DOI 10.1145/322139.322143
   Tu Q, 2002, PROG COMPREHEN, P127, DOI 10.1109/WPC.2002.1021334
   Valiente G., 2002, ALGORITHMS TREES GRA
   Weidl J, 1998, P INT COMP SOFTW APP, P26, DOI 10.1109/CMPSAC.1998.716632
   WURSCH M, 2006, THESIS U ZURICH
   Xing Z., 2005, Proceedings of the 20th IEEE/ACM international Conference on Automated software engineering, P54
   Xing ZC, 2005, IEEE T SOFTWARE ENG, V31, P850, DOI 10.1109/TSE.2005.106
   Ying ATT, 2004, IEEE T SOFTWARE ENG, V30, P574, DOI 10.1109/TSE.2004.52
   ZHANG KZ, 1995, PATTERN RECOGN, V28, P463, DOI 10.1016/0031-3203(94)00109-Y
   Zimmermann T, 2005, IEEE T SOFTWARE ENG, V31, P429, DOI 10.1109/TSE.2005.72
NR 45
TC 367
Z9 417
U1 0
U2 9
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD NOV
PY 2007
VL 33
IS 11
BP 725
EP 743
DI 10.1109/TSE.2007.70731
PG 19
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 214JZ
UT WOS:000249735100001
DA 2024-07-18
ER

PT J
AU Li, Z
   Harman, M
   Hierons, RM
AF Li, Zheng
   Harman, Mark
   Hierons, Robert M.
TI Search algorithms for regression test case prioritization
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE search techniques; test case prioritization; regression testing
ID FAMILY
AB Regression testing is an expensive, but important, process. Unfortunately, there may be insufficient resources to allow for the reexecution of all test cases during regression testing. In this situation, test case prioritization techniques aim to improve the effectiveness of regression testing by ordering the test cases so that the most beneficial are executed first. Previous work on regression test case prioritization has focused on Greedy Algorithms. However, it is known that these algorithms may produce suboptimal results because they may construct results that denote only local minima within the search space. By contrast, metaheuristic and evolutionary search algorithms aim to avoid such problems. This paper presents results from an empirical study of the application of several greedy, metaheuristic, and evolutionary search algorithms to six programs, ranging from 374 to 11,148 lines of code for three choices of fitness metric. The paper addresses the problems of choice of fitness metric, characterization of landscape modality, and determination of the most suitable search technique to apply. The empirical results replicate previous results concerning Greedy Algorithms. They shed light on the nature of the regression testing search space, indicating that it is multimodal. The results also show that Genetic Algorithms perform well, although Greedy approaches are surprisingly effective, given the multimodal nature of the landscape.
C1 Kings Coll London, Dept Comp Sci, Software Engn Grp, London WC2R 2LS, England.
   Brunel Univ, Sch Informat Syst Comp & Math, Uxbridge UB8 3PH, Middx, England.
C3 University of London; King's College London; Brunel University
RP Li, Z (corresponding author), Kings Coll London, Dept Comp Sci, Software Engn Grp, London WC2R 2LS, England.
EM zheng.li@kcl.ac.uk; mark.harman@kcl.ac.u; rob.hierons@brune.ac.uk
RI ; Li, Zheng/L-8594-2015
OI Harman, Mark/0000-0002-5864-4488; Hierons, Robert/0000-0002-4771-1446;
   Li, Zheng/0000-0002-3938-7033
CR [Anonymous], 1993, Modern heuristic techniques for combinatorial problems
   Antoniol G, 2005, PROC IEEE INT CONF S, P240
   Baker J.E., P INT C GEN ALG THEI, P101
   Binkley D, 2004, ADV COMPUT, V62, P105, DOI 10.1016/S0065-2458(03)62003-6
   Do HS, 2005, EMPIR SOFTW ENG, V10, P405, DOI 10.1007/s10664-005-3861-2
   Elbaum S, 2002, IEEE T SOFTWARE ENG, V28, P159, DOI 10.1109/32.988497
   Elbaum S, 2001, PROC INT CONF SOFTW, P329, DOI 10.1109/ICSE.2001.919106
   Garey M. R., 1979, Computers and intractability. A guide to the theory of NP-completeness
   Holland J.H., 1992, Adaptation in Natural and Artificial Systems, DOI DOI 10.7551/MITPRESS/1090.001.0001
   HUSBANDS P, 1994, ARTIFICIAL INTELLIGE
   HUTCHINS M, 1994, PROC INT CONF SOFTW, P191, DOI 10.1109/ICSE.1994.296778
   Kim HS, 2002, KOREAN J GENETIC, V24, P119
   LIN S, 1965, AT&T TECH J, V44, P2245, DOI 10.1002/j.1538-7305.1965.tb04146.x
   *MICR CORP, 2007, REGR TEST
   Reinelt G., 1991, ORSA Journal on Computing, V3, P376, DOI 10.1287/ijoc.3.4.376
   Rothermel G, 2001, IEEE T SOFTWARE ENG, V27, P929, DOI 10.1109/32.962562
   Rothermel G., 1999, Proceedings IEEE International Conference on Software Maintenance - 1999 (ICSM'99). `Software Maintenance for Business Change' (Cat. No.99CB36360), P179, DOI 10.1109/ICSM.1999.792604
   RTCA, 1992, DO-178B Software Considerations in Airborne Systems and Equipment Certification
   SKIENA SS, 2002, P ACM SIGSOFT INT S, P97
   Wang WE, 1997, EIGHTH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P264, DOI 10.1109/ISSRE.1997.630875
   WEISER M, 1984, IEEE T SOFTWARE ENG, V10, P352, DOI 10.1109/TSE.1984.5010248
NR 21
TC 418
Z9 474
U1 0
U2 15
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD APR
PY 2007
VL 33
IS 4
BP 225
EP 237
DI 10.1109/TSE.2007.38
PG 13
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 140TQ
UT WOS:000244530000002
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Holmes, R
   Walker, RJ
   Murphy, GC
AF Holmes, Reid
   Walker, Robert J.
   Murphy, Gail C.
TI Approximate structural context matching: An approach to recommend
   relevant examples
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article; Proceedings Paper
CT 27th International Conference on Software Engineering (ICSE 2005)
CY MAY 15-21, 2005
CL St Louis, MO
SP ACM, SIGSOFT, IEEE, IEEE Comp Soc
DE API usage; structural context; heuristic search; Strathcona; example
   recommendation
AB When coding to an application programming interface ( API), developers often encounter difficulties, unsure of which class to subclass, which objects to instantiate, and which methods to call. Example source code that demonstrates the use of the API can help developers make progress on their task. This paper describes an approach to provide such examples in which the structure of the source code that the developer is writing is matched heuristically to a repository of source code that uses the API. The structural context needed to query the repository is extracted automatically from the code, freeing the developer from learning a query language or from writing their code in a particular style. The repository is generated automatically from existing applications, avoiding the need for handcrafted examples. We demonstrate that the approach is effective, efficient, and more reliable than traditional alternatives through four empirical studies.
C1 Univ Calgary, Dept Comp Sci, Calgary, AB T2N 1N4, Canada.
   Univ British Columbia, Dept Comp Sci, Vancouver, BC V6T 1Z4, Canada.
C3 University of Calgary; University of British Columbia
RP Holmes, R (corresponding author), Univ Calgary, Dept Comp Sci, 2500 Univ Dr NW, Calgary, AB T2N 1N4, Canada.
EM rtholmes@cpsc.ucalgary.ca; rwalker@cpsc.ucalgary.ca; murphy@cs.ubc.ca
OI Walker, Robert/0000-0002-0953-6907
CR Basit Hamid Abdul, 2005, SIGSOFT Softw. Eng. Notes, V30, P156, DOI [10.1145/1095430.1081733, DOI 10.1145/1095430.1081733]
   Baxter ID, 1998, PROC IEEE INT CONF S, P368, DOI 10.1109/ICSM.1998.738528
   BUTLER G, 1999, BUILDING APPL FRAMEW, pCH21
   Cubranic D, 2005, IEEE T SOFTWARE ENG, V31, P446, DOI 10.1109/TSE.2005.71
   Froehlich G, 1997, PROC INT CONF SOFTW, P491, DOI 10.1145/253228.253432
   HELM R, 1990, P EUR C OBJ OR PROGR, P169
   HENNINGER S, 1991, P 14 ANN INT ACM SIG, P251
   Hill R, 2004, 19TH INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P228, DOI 10.1109/ASE.2004.1342740
   HOLMES R, 2004, THESIS U BRIT COLUMB
   HOLMES R, 2004, P INT C SOFTW ENG, P117
   Inoue K, 2003, PROC INT CONF SOFTW, P14, DOI 10.1109/ICSE.2003.1201184
   JOHNSON RE, 1992, P C OBJ OR PROGR SYS, P63
   MANDELIN D, 2005, PLDI 05, P48, DOI [10.1145/1065010.1065018, DOI 10.1145/1065010.1065018]
   Michail A., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, P167, DOI 10.1109/ICSE.2000.870408
   Michail A, 2001, PROC INT CONF SOFTW, P827, DOI 10.1109/ICSE.2001.919192
   NEAL LR, 1989, P SIGCHI C HUM FACT, P63
   PAUL S, 1992, P IBM CTR ADV STUD C, P329
   RISSLAND E, 1983, ADAPTIVE CONTROL ILL
   Rosson Mary Beth, 1996, ACM Transactions on ComputerHuman Interaction (TOCHI), V3, P219
   YE Y, 2000, P ACM SIGSOFT 8 INT, P60
   Ye YW, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P513, DOI 10.1109/ICSE.2002.1007995
   Zaremski A. M., 1995, ACM Transactions on Software Engineering and Methodology, V4, P146, DOI 10.1145/210134.210179
NR 22
TC 90
Z9 114
U1 1
U2 10
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD DEC
PY 2006
VL 32
IS 12
BP 952
EP 970
DI 10.1109/TSE.2006.117
PG 19
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Engineering
GA 104VJ
UT WOS:000241988400003
DA 2024-07-18
ER

PT J
AU Ko, AJ
   Myers, BA
   Coblenz, MJ
   Aung, HH
AF Ko, Andrew J.
   Myers, Brad A.
   Coblenz, Michael J.
   Aung, Htet Htet
TI An exploratory study of how developers seek, relate, and collect
   relevant information during software maintenance tasks
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article; Proceedings Paper
CT 27th International Conference on Software Engineering (ICSE 2005)
CY MAY 15-21, 2005
CL St Louis, MO
SP ACM, SIGSOFT, IEEE, IEEE Comp Soc
DE program investigation; program understanding; program comprehension;
   empirical software engineering; information foraging; information scent
ID MENTAL REPRESENTATIONS; COMPREHENSION; PROGRAMMERS; DESIGN; CODE
AB Much of software developers' time is spent understanding unfamiliar code. To better understand how developers gain this understanding and how software development environments might be involved, a study was performed in which developers were given an unfamiliar program and asked to work on two debugging tasks and three enhancement tasks for 70 minutes. The study found that developers interleaved three activities. They began by searching for relevant code both manually and using search tools; however, they based their searches on limited and misrepresentative cues in the code, environment, and executing program, often leading to failed searches. When developers found relevant code, they followed its incoming and outgoing dependencies, often returning to it and navigating its other dependencies; while doing so, however, Eclipse's navigational tools caused significant overhead. Developers collected code and other information that they believed would be necessary to edit, duplicate, or otherwise refer to later by encoding it in the interactive state of Eclipse's package explorer, file tabs, and scroll bars. However, developers lost track of relevant code as these interfaces were used for other tasks, and developers were forced to find it again. These issues caused developers to spend, on average, 35 percent of their time performing the mechanics of navigation within and between source files. These observations suggest a new model of program understanding grounded in theories of information foraging and suggest ideas for tools that help developers seek, relate, and collect information in a more effective and explicit manner.
C1 Carnegie Mellon Univ, Sch Comp Sci, Human Comp Interact Inst, Pittsburgh, PA 15213 USA.
C3 Carnegie Mellon University
RP Ko, AJ (corresponding author), Carnegie Mellon Univ, Sch Comp Sci, Human Comp Interact Inst, 5000 Forbes Ave, Pittsburgh, PA 15213 USA.
EM ajko@cs.cmu.edu; bam@cs.cmu.edu; mcoblenz@andrew.cmu.edu;
   hhaung@gmail.com
RI Jolugbo, Olajide/D-3216-2017; Myers, Brad/R-3816-2019; Coblenz,
   Michael/Y-8910-2019
OI Jolugbo, Olajide/0000-0001-6512-4117; Coblenz,
   Michael/0000-0002-9369-4069
CR Altmann EM, 2001, INT J HUM-COMPUT ST, V54, P189, DOI 10.1006/ijhc.2000.0407
   ANDERSON JR, 2000, COGNITIVE PSYCHOL IT, P239
   Andrew J Ko, 2004, P SIGCHI C HUMAN FAC, V6, P151, DOI [DOI 10.1145/985692.985712, 10.1145/985692.985712]
   [Anonymous], 2005, Proc. of the European Software Engineering Conference and the ACM SIGSOFT Symposium on the Foundations of Software Engineering (ESEC/FSE'05)
   [Anonymous], P WORKSH EMP STUD PR
   [Anonymous], 2005, P SIGCHI C HUM FACT
   Baecker R.M., 1990, HUMAN FACTORS TYPOGR
   BANIASSAD ELA, 2002, INQUISITIVE STUDY AS, P120
   BERLIN LM, 1993, P EMP STUD PROGR 5 W, P6
   BOEHM BW, 1976, IEEE T COMPUT, V25, P1226, DOI 10.1109/TC.1976.1674590
   BoehmDavis DA, 1996, EMPIRICAL STUDIES OF PROGRAMMERS: SIXTH WORKSHOP, P3
   Brooks R, 1999, INT J HUM-COMPUT ST, V51, P197, DOI 10.1006/ijhc.1977.0306
   CHUCARROLL M, 2002, P 10 ACM SIGSOFT S F, P99
   COBLENZ M, 2006, CMUHCII06107
   Corritore CL, 2001, INT J HUM-COMPUT ST, V54, P1, DOI 10.1006/ijhc.2000.0423
   Corritore CL, 1999, INT J HUM-COMPUT ST, V50, P61, DOI 10.1006/ijhc.1998.0236
   CUBRANIC D, 2000, P INT C SOFTW ENG, P408
   CURTIS B, 1981, P IEEE, V69, P846, DOI 10.1109/PROC.1981.12088
   DAVIES SP, 1994, INT J HUM-COMPUT ST, V40, P703, DOI 10.1006/ijhc.1994.1032
   DAVIES SP, 1993, INT J MAN MACH STUD, V39, P237, DOI 10.1006/imms.1993.1061
   DOUCE C, 2001, P PSYCHOL PROGRAMMIN
   Eick SG, 2001, IEEE T SOFTWARE ENG, V27, P1, DOI 10.1109/32.895984
   FRANCIS MD, 1969, CALC TISS RES, V3, P151, DOI 10.1007/BF02058658
   FURNAS GW, 1987, COMMUN ACM, V30, P964, DOI 10.1145/32206.32212
   Gonzalez V.M., 2004, Proceedings of the SIGCHI Conference on Human Factors in Computing Systems, P113, DOI [DOI 10.1145/985692.985707, 10.1145/985692.985707]
   Green TRG, 1996, J VISUAL LANG COMPUT, V7, P131, DOI 10.1006/jvlc.1996.0009
   Ko AJ, 2005, PROC INT CONF SOFTW, P126
   Ko AJ, 2005, J VISUAL LANG COMPUT, V16, P41, DOI 10.1016/j.jvlc.2004.08.003
   KO AJ, 2005, P ACM C HUM FACT COM, P1557
   Koch S., 2000, Results from Software Engineering Research into Open Source Development Projects Using Public Data, P22
   KOENEMANN J, 1991, P C HUM FACT COMP SY, P125
   LaToza T.D., 2006, P INTERNATION C SOFT, P492, DOI [10.1145/1134285.1134355, DOI 10.1145/1134285.1134355]
   Lehman M.M., 1985, SOFTWARE EVOLUTION P
   MIARA RJ, 1983, COMMUN ACM, V26, P861, DOI 10.1145/182.358437
   MURPHY GC, 2005, P EUR C OBJ OR PROGR, P34
   Navarro-Prieto R, 2001, INT J HUM-COMPUT ST, V54, P799, DOI 10.1006/ijhc.2000.0465
   NISTOR EC, 2006, P WORKSH LINK ASP TE
   PENNINGTON N, 1987, COGNITIVE PSYCHOL, V19, P295, DOI 10.1016/0010-0285(87)90007-7
   Perlow LA, 1999, ADMIN SCI QUART, V44, P57, DOI 10.2307/2667031
   PETRE M, 1997, P 7 WORKSH EMP STUD, P109
   Pirolli P, 1999, PSYCHOL REV, V106, P643, DOI 10.1037/0033-295X.106.4.643
   Reiss SP, 1996, PROC INT CONF SOFTW, P398, DOI 10.1109/ICSE.1996.493434
   Robillard MP, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P406, DOI 10.1109/ICSE.2002.1007986
   Robillard MP, 2004, IEEE T SOFTWARE ENG, V30, P889, DOI 10.1109/TSE.2004.101
   Robillard MP, 2003, 18TH IEEE INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P225, DOI 10.1109/ASE.2003.1240310
   ROBILLARD MP, 2003, THESIS U BRIT COLUMB
   Singer Janice., 1997, P 1997 C CTR ADV STU, P209
   TEASLEY BE, 1994, INT J HUM-COMPUT ST, V40, P757, DOI 10.1006/ijhc.1994.1036
   Vans AM, 1999, INT J HUM-COMPUT ST, V51, P31, DOI 10.1006/ijhc.1999.0268
   WEISER M, 1982, COMMUN ACM, V25, P446, DOI 10.1145/358557.358577
   WIEDENBECK S, 1993, INT J MAN MACH STUD, V39, P793, DOI 10.1006/imms.1993.1084
NR 51
TC 361
Z9 424
U1 2
U2 35
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD DEC
PY 2006
VL 32
IS 12
BP 971
EP 987
DI 10.1109/TSE.2006.116
PG 17
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Engineering
GA 104VJ
UT WOS:000241988400004
DA 2024-07-18
ER

PT J
AU Damian, D
   Chisan, J
AF Damian, Daniela
   Chisan, James
TI An empirical study of the complex relationships between requirements
   engineering processes and other processes that lead to payoffs in
   productivity, quality, and risk management
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE requirements engineering; process improvement; process interactions;
   empirical investigation
ID SOFTWARE PROCESS IMPROVEMENT; SUCCESS
AB Requirements engineering is an important component of effective software engineering, yet more research is needed to demonstrate the benefits to development organizations. While the existing literature suggests that effective requirements engineering can lead to improved productivity, quality, and risk management, there is little evidence to support this. We present empirical evidence showing how requirements engineering practice relates to these claims. This evidence was collected over the course of a 30-month case study of a large software development project undergoing requirements process improvement. Our findings add to the scarce evidence on RE payoffs and, more importantly, represent an in-depth explanation of the role of requirements engineering processes in contributing to these benefits. In particular, the results of our case study show that an effective requirements process at the beginning of the project had positive outcomes throughout the project lifecycle, improving the efficacy of other project processes, ultimately leading to improvements in project negotiation, project planning, and managing feature creep, testing, defects, rework, and product quality. Finally, we consider the role collaboration had in producing the effects we observed and the implications of this work to both research and practice.
C1 Univ Victoria, Dept Comp Sci, Victoria, BC V8P 5C2, Canada.
C3 University of Victoria
RP Damian, D (corresponding author), Univ Victoria, Dept Comp Sci, Engn Comp Sci Bldg ECS,Room 504,3800 Finnerty Rd, Victoria, BC V8P 5C2, Canada.
EM danielad@cs.uvic.ca; james@chisan.com
CR [Anonymous], 2000, FUTURE SOFTWARE ENG
   [Anonymous], 1997, Requirements engineering: a good practice guide
   BERRY D, 2005, P REQ ENG
   BORJESSON A, 2004, IEEE SOFTWARE    JUL, P35
   BROADMAN J, 1996, CROSSTALK, V9, P23
   BROOKS FP, 1987, COMPUTER, V20, P10, DOI 10.1109/MC.1987.1663532
   Claus C., 1999, P 5 INT WORKSH REQ E, P33
   Damian D, 2004, EMPIR SOFTW ENG, V9, P45, DOI 10.1023/B:EMSE.0000013514.19567.ad
   DAMIAN D, 2005, INT J EMPIRICAL SOFT, V10
   El Emam K, 2000, IEEE T SOFTWARE ENG, V26, P541, DOI 10.1109/32.852742
   FOSBERG K, 2000, SOFTWARE REQUIREMENT, P44
   Herbsleb JD, 1996, PROC INT CONF SOFTW, P323, DOI 10.1109/ICSE.1996.493427
   HUMPHREY WS, 1991, IEEE SOFTWARE, V8, P11, DOI 10.1109/52.300031
   HUTCHINGS AF, 1995, COMMUN ACM, V38, P72, DOI 10.1145/203356.203370
   *ISO IEC, 1998, 1550411998 ISOIEC TR
   Jacobs S, 1999, IEEE INTERNATIONAL SYMPOSIUM ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P172, DOI 10.1109/ISRE.1999.777997
   JIROTKA M, 1994, RQUIREMENTS ENG SOCI
   Jones C, 1996, COMPUTER, V29, P92, DOI 10.1109/2.507640
   Kaindia H., 2002, Requirements Engineering, V7, P113, DOI 10.1007/s007660200008
   Kauppinen M, 2004, INFORM SOFTWARE TECH, V46, P937, DOI 10.1016/j.infsof.2004.04.002
   Kauppinen M., 2001, Product Focused Software Process Improvement. Third International Conference, PROFES 2001. Proceedings (Lecture Notes in Computer Science Vol.2188), P196
   Kauppinen M, 2002, IEEE JOINT INTERNATIONAL CONFERENCE ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P43, DOI 10.1109/ICRE.2002.1048504
   Lauesen S., 2001, Requirements Engineering, V6, P37, DOI 10.1007/PL00010355
   LIKERT R, 1976, NEW WAYS MANAGING CO, P165
   Linberg KR, 1999, J SYST SOFTWARE, V49, P177, DOI 10.1016/S0164-1212(99)00094-1
   Mayo E., 1933, The human problems of an industrial civilization
   PAULK MC, 1994, CMUSEI94TR12
   Procaccino JD, 2002, INFORM SOFTWARE TECH, V44, P53, DOI 10.1016/S0950-5849(01)00217-8
   Regnell B., 1998, Requirements Engineering, V3, P121, DOI 10.1007/BF02919972
   Robertson S, 2012, Mastering the requirements process: getting requirements right
   *SEI, 1995, CAP MAT MOD GUID IMP
   Trochim W. M., 2006, RES METHODS KNOWLEDG
   *TS GROUP, 2003, CHAOS REP STAND GROU
   Villalón JACM, 2002, SOFTWARE QUAL J, V10, P261, DOI 10.1023/A:1021638523413
   Whiston S.C., 1993, J CAREER DEV, V19, P175
   WOHLWEND H, 1993, PROC INT CONF SOFTW, P212, DOI 10.1109/ICSE.1993.346042
   [No title captured]
NR 37
TC 111
Z9 134
U1 1
U2 28
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUL
PY 2006
VL 32
IS 7
BP 433
EP 453
DI 10.1109/TSE.2006.61
PG 21
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 071MF
UT WOS:000239605600001
DA 2024-07-18
ER

PT J
AU Gyimóthy, T
   Ferenc, R
   Siket, I
AF Gyimóthy, T
   Ferenc, R
   Siket, I
TI Empirical validation of object-oriented metrics on open source software
   for fault prediction
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article; Proceedings Paper
CT 20th IEEE International Conference on Software Maintenance (ICSM 2004)
CY SEP 11-14, 2004
CL Chicago, IL
SP IEEE Comp Soc
DE fact extraction; metrics validation; reverse engineering; open source
   software; fault-proneness detection; Mozilla; Bugzilla; C plus; compiler
   wrapping; Columbus
AB Open source software systems are becoming increasingly important these days. Many companies are investing in open source projects and lots of them are also using such software in their own work. But, because open source software is often developed with a different management style than the industrial ones, the quality and reliability of the code needs to be studied. Hence, the characteristics of the source code of these projects need to be measured to obtain more information about it. This paper describes how we calculated the object-oriented metrics given by Chidamber and Kemerer to illustrate how fault-proneness detection of the source code of the open source Web and e-mail suite called Mozilla can be carried out. We checked the values obtained against the number of bugs found in its bug database - called Bugzilla - using regression and machine learning methods to validate the usefulness of these metrics for fault-proneness prediction. We also compared the metrics of several versions of Mozilla to see how the predicted fault-proneness of the software system changed during its development cycle.
C1 Univ Szeged, Dept Software Engn, H-6720 Szeged, Hungary.
C3 Szeged University
RP Univ Szeged, Dept Software Engn, Arpad Ter 2, H-6720 Szeged, Hungary.
EM gyimi@inf.u-szeged.hu; ferenc@inf.u-szeged.hu; siket@inf.u-szeged.hu
RI Ferenc, Rudolf/A-1317-2008; Gyimothy, Tibor/M-3705-2018
OI Ferenc, Rudolf/0000-0001-8897-7403; Gyimothy, Tibor/0000-0002-2123-7387
CR Basili VR, 1996, IEEE T SOFTWARE ENG, V22, P751, DOI 10.1109/32.544352
   Bishop C. M., 1995, NEURAL NETWORKS PATT
   Briand LC, 2000, J SYST SOFTWARE, V51, P245, DOI 10.1016/S0164-1212(99)00102-8
   Briand LC, 2002, IEEE T SOFTWARE ENG, V28, P706, DOI 10.1109/TSE.2002.1019484
   BRIAND LC, 2002, ADV COMPUTERS, V56
   Chen YF, 1998, IEEE T SOFTWARE ENG, V24, P682, DOI 10.1109/32.713323
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   Ferenc R, 2004, PROC IEEE INT CONF S, P60, DOI 10.1109/ICSM.2004.1357790
   Ferenc R, 2002, PROC IEEE INT CONF S, P172, DOI 10.1109/ICSM.2002.1167764
   Ferenc R, 2002, SIXTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P59, DOI 10.1109/CSMR.2002.995790
   Finnigan PJ, 1997, IBM SYST J, V36, P564, DOI 10.1147/sj.364.0564
   Fioravanti F, 2001, FIFTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P121, DOI 10.1109/CSMR.2001.914976
   Godfrey MichaelW., 2000, P 2000 INT S CONSTR, P15
   Hosmer D W., 2004, Applied Logistic Regression
   Neter J., 1996, APPL LINEAR STAT MOD, V81, P1126
   Ping Yu, 2002, Proceedings of the Sixth European Conference on Software Maintenance and Reengineering, P99, DOI 10.1109/CSMR.2002.995794
   Quinlan J.R., 1993, C4 5 PROGRAMS MACHIN
   REIS C.R., 2002, P OPEN SOURCE SOFTWA, P155
   Subramanyam R, 2003, IEEE T SOFTWARE ENG, V29, P297, DOI 10.1109/TSE.2003.1191795
   2005, MOZILLA HOMEPAGE
NR 20
TC 507
Z9 577
U1 3
U2 52
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD OCT
PY 2005
VL 31
IS 10
BP 897
EP 910
DI 10.1109/TSE.2005.112
PG 14
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Engineering
GA 980JR
UT WOS:000233015300008
DA 2024-07-18
ER

PT J
AU Tonella, P
   Ceccato, M
AF Tonella, P
   Ceccato, M
TI Refactoring the aspectizable interfaces: An empirical assessment
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article; Proceedings Paper
CT 20th IEEE International Conference on Software Maintenance (ICSM 2004)
CY SEP 11-14, 2004
CL Chicago, IL
SP IEEE Comp Soc
DE aspect oriented programming; refactoring; program transformations;
   empirical studies
AB Aspect Oriented Programming aims at addressing the problem of the crosscutting concerns, i.e., those functionalities that are scattered among several modules in a given system. Aspects can be defined to modularize such concerns. In this work, we focus on a specific kind of crosscutting concerns, the scattered implementation of methods declared by interfaces that do not belong to the principal decomposition. We call such interfaces aspectizable. All the aspectizable interfaces identified within a large number of classes from the Java Standard Library and from three Java applications have been automatically migrated to aspects. To assess the effects of the migration on the internal and external quality attributes of these systems, we collected a set of metrics and we conducted an empirical study, in which some maintenance tasks were executed on the two alternative versions ( with and without aspects) of the same system. In this paper, we report the results of such a comparison.
C1 ITCirst, Ctr Ric Sci & Tecnol, I-38050 Trento, Italy.
C3 Fondazione Bruno Kessler; FBK-ICT - Center for Information &
   Communication Technology
RP ITCirst, Ctr Ric Sci & Tecnol, I-38050 Trento, Italy.
EM tonella@itc.it; ceccato@itc.it
RI Ceccato, Mariano/T-7139-2019; Tonella, Paolo/C-1702-2015
OI Ceccato, Mariano/0000-0001-7325-0316; Tonella, Paolo/0000-0003-3088-0339
CR [Anonymous], P OBJ OR PROGR SYST
   Baniassad E.L.A., 2002, 1 INT C ASPECT ORIEN, P120
   Basili V., 1994, The Goal Question Metric Approach, P528
   Baxter ID, 1998, PROC IEEE INT CONF S, P368, DOI 10.1109/ICSM.1998.738528
   Binkley D, 2005, PROC IEEE INT CONF S, P27
   Borba P., 2002, P WORKSH TOOLS ASP O
   Breu S, 2004, 19TH INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P310, DOI 10.1109/ASE.2004.1342754
   Briand L. C., 1998, Empirical Software Engineering, V3, P65, DOI 10.1023/A:1009783721306
   Briand LC, 1999, IEEE T SOFTWARE ENG, V25, P91, DOI 10.1109/32.748920
   Bruegge Bernd., 2003, OBJECT ORIENTED SOFT, V2nd
   Bruntink M, 2004, PROC IEEE INT CONF S, P200, DOI 10.1109/ICSM.2004.1357804
   Cordy JR, 2002, INFORM SOFTWARE TECH, V44, P827, DOI 10.1016/S0950-5849(02)00104-0
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   Griswold WG, 2001, PROC INT CONF SOFTW, P265, DOI 10.1109/ICSE.2001.919100
   GYBELS K, 2004, P 1 EUR INT WORKSH A
   HANENBERG S, 2001, P WORKSH ASP OR
   Hanenberg S., 2003, 4th Annual International Conference on Object-Oriented and Internet-based Technologies, Concepts, P19
   HANENBERG S, 2002, P 8 INT C OBJ OR INF, P507
   HANNEMANN J, 2001, P WORKSH ADV SEP INT
   HANNEMANN J, 2005, P 4 INT C ASP OR SOF, P135
   Janzen D., 2003, Proceedings of the 2nd Annual Conference on Aspect-Oriented Software Development (AOSD), P178, DOI 10.1145/643603.643622
   Kiczales G., 1997, P 11 EUR C OBJ OR PR
   Kiselev I., 2002, ASPECT ORIENTED PROG
   Lakhotia A, 2003, PROG COMPREHEN, P285
   Marin M, 2004, 11TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P132, DOI 10.1109/WCRE.2004.23
   Mayrand J, 1996, INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE, PROCEEDINGS, P244, DOI 10.1109/ICSM.1996.565012
   Rashid Awais., 2003, AOSD 03, P120
   Robillard MP, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P406, DOI 10.1109/ICSE.2002.1007986
   SHEPHERD D, 2004, P MID STUD WORKSH PR
   Soares S, 2002, ACM SIGPLAN NOTICES, V37, P174, DOI 10.1145/583854.582437
   Tarr P., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P107, DOI 10.1109/ICSE.1999.841000
   Tonella P, 2004, 11TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P112, DOI 10.1109/WCRE.2004.13
   Tonella P, 2004, PROC IEEE INT CONF S, P220, DOI 10.1109/ICSM.2004.1357806
   Tourwé T, 2004, FOURTH IEEE INTERNATIONAL WORKSHOP ON SOURCE CODE ANALYSIS AND MANIPULATION, PROCEEDINGS, P97
   TOURWE T, 2004, P SOFTW ENG PROP LAN
   [No title captured]
   [No title captured]
NR 37
TC 27
Z9 30
U1 0
U2 2
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD OCT
PY 2005
VL 31
IS 10
BP 819
EP 832
DI 10.1109/TSE.2005.115
PG 14
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Engineering
GA 980JR
UT WOS:000233015300003
DA 2024-07-18
ER

PT J
AU Molokken-Ostvold, K
   Jorgensen, M
AF Molokken-Ostvold, K
   Jorgensen, M
TI A comparison of software project overruns - Flexible versus sequential
   development models
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE cost estimation; management; project control and modeling; software
   development models
ID IMPACT; ERROR
AB Flexible software development models, e. g., evolutionary and incremental models, have become increasingly popular. Advocates claim that among the benefits of using these models is reduced overruns, which is one of the main challenges of software project management. This paper describes an in-depth survey of software development projects. The results support the claim that projects which employ a flexible development model experience less effort overruns than do those which employ a sequential model. The reason for the difference is not obvious. We found, for example, no variation in project size, estimation process, or delivered proportion of planned functionality between projects applying different types of development model. When the managers were asked to provide reasons for software overruns and/or estimation accuracy, the largest difference was that more of flexible projects than sequential projects cited good requirement specifications and good collaboration/communication with clients as contributing to accurate estimates.
C1 Simula Res Lab, N-1325 Lysaker, Norway.
RP Simula Res Lab, POB 134, N-1325 Lysaker, Norway.
EM kjetilmo@simula.no; magnej@simula.no
RI Jorgensen, Magne/H-4402-2016
CR Abrahamson P., 2002, Agile Software Development Methods, Review and Analysis, P107
   [Anonymous], 1986, Software Engineering Metrics and Models
   [Anonymous], J INFORM SOFTWARE TE
   BOEHM BW, 2000, SOFTWARE ESTIMATION
   BRIAND LC, 2001, ENCY SOFTWARE ENG
   Christensen R., 1998, Analysis of variance, design and regression: applied statistical methods
   Cockburn A., 1998, SURVIVING OBJECT ORI
   COHEN J., 1969, Statistical power analysis
   Cozby P.C., 1993, METHODS BEHAV RES, V5th
   Edwards JS, 1994, EUR J INFORM SYST, V3, P139, DOI 10.1057/ejis.1994.14
   Engelkamp S, 2000, LECT NOTES COMPUT SC, V1840, P204
   Flyvbjerg B, 2002, J AM PLANN ASSOC, V68, P279, DOI 10.1080/01944360208976273
   Foss T, 2003, IEEE T SOFTWARE ENG, V29, P985, DOI 10.1109/TSE.2003.1245300
   GILB T, 1998, PRINCIPLES SOFTWARE
   GILB T, 1976, SOFTWARE METRICS
   Gilb T., 1986, ACM SIG-SOFT Software Engineering Notes, V11, P49, DOI DOI 10.1145/382300.382312
   Jorgensen M, 2004, IEEE T SOFTWARE ENG, V30, P993, DOI 10.1109/TSE.2004.103
   Jorgensen M, 2003, THIRD INTERNATIONAL CONFERENCE ON QUALITY SOFTWARE, PROCEEDINGS, P134, DOI 10.1109/QSIC.2003.1319095
   Jorgensen M, 2001, INFORM SOFTWARE TECH, V43, P939, DOI 10.1016/S0950-5849(01)00203-8
   Jorgensen M, 2004, J SYST SOFTWARE, V70, P37, DOI 10.1016/S0164-1212(02)00156-5
   Kitchenham B. A., 2001, IEE Proceedings-Software, V148, P81, DOI 10.1049/ip-sen:20010506
   MATSON JE, 1994, IEEE T SOFTWARE ENG, V20, P275, DOI 10.1109/32.277575
   May EL, 1996, HEWLETT-PACKARD J, V47, P39
   Mills H. D., 1976, IEEE Transactions on Software Engineering, VSE-2, P265, DOI 10.1109/TSE.1976.233831
   MILLS HD, 1980, IBM SYST J, V19, P415
   MIYAZAKI Y, 1991, INFORM SOFTWARE TECH, V33, P239, DOI 10.1016/0950-5849(91)90139-3
   Molokken K, 2004, LECT NOTES COMPUT SC, V3009, P17
   Pressman R.S., 2000, SOFTWARE ENG
   Royce W.W., 1970, P IEEE WESCON IEEE, P1
   Siegel Sidney, 1988, Nonparametric statistics for the behavioral sciences
   Stensrud E, 2003, EMPIR SOFTW ENG, V8, P139, DOI 10.1023/A:1023010612345
   Stensrud E, 2002, EIGHTH IEEE SYMPOSIUM ON SOFTWARE METRICS, PROCEEDINGS, P3, DOI 10.1109/METRIC.2002.1011320
   Tausworthe R. C., 1980, Journal of Systems and Software, V1, P181, DOI 10.1016/0164-1212(79)90018-9
   Yourdon E., 1997, DEATH MARCH
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
NR 50
TC 62
Z9 66
U1 0
U2 12
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD SEP
PY 2005
VL 31
IS 9
BP 754
EP 766
DI 10.1109/TSE.2005.96
PG 13
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 964CZ
UT WOS:000231857600003
DA 2024-07-18
ER

PT J
AU Gopal, A
   Mukhopadhyay, T
   Krishnan, MS
AF Gopal, A
   Mukhopadhyay, T
   Krishnan, MS
TI The impact of institutional forces on software metrics programs
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE product metrics; process metrics; software engineering; metrics
   programs; software development; institutional forces; metrics
   adaptation; metrics acceptance
ID ERROR
AB Software metrics programs are an important part of a software organization's productivity and quality initiatives as precursors to process-based improvement programs. Like other innovative practices, the implementation of metrics programs is prone to influences from the greater institutional environment the organization exists in. In this paper, we study the influence of both external and internal institutional forces on the assimilation of metrics programs in software organizations. We use previous case-based research in software metrics programs as well as prior work in institutional theory in proposing a model of metrics implementation. The theoretical model is tested on data collected through a survey from 214 metrics managers in defense-related and commercial software organizations. Our results show that external institutions, such as customers and competitors, and internal institutions, such as managers, directly influence the extent to which organizations change their internal work-processes around metrics programs. Additionally, the adaptation of work-processes leads to increased use of metrics programs in decision-making within the organization. Our research informs managers about the importance of management support and institutions in metrics programs adaptation. In addition, managers may note that the continued use of metrics information in decision-making is contingent on adapting the organization's work-processes around the metrics program. Without these investments in metrics program adaptation, the true business value in implementing metrics and software process improvement will not be realized.
C1 Univ Maryland, Robert H Smith Sch Business, College Pk, MD 20742 USA.
   Carnegie Mellon Univ, Tepper Sch Business, Pittsburgh, PA 15217 USA.
   Univ Michigan, Ross Sch Business, Ann Arbor, MI 48109 USA.
C3 University System of Maryland; University of Maryland College Park;
   Carnegie Mellon University; University of Michigan System; University of
   Michigan
RP Univ Maryland, Robert H Smith Sch Business, College Pk, MD 20742 USA.
EM agopal@rhsmith.umd.edu; tridas@andrew.cmu.edu; mskrish@umich.edu
RI Gopal, Anandasivam/KHD-1654-2024
OI Gopal, Anandasivam/0000-0001-9270-5961; Mukhopadhyay,
   Tridas/0000-0001-6691-9595
CR ANDERSON JC, 1988, PSYCHOL BULL, V103, P411, DOI 10.1037/0033-2909.103.3.411
   [Anonymous], 1995, STRUCTURAL EQUATION
   [Anonymous], 1994, DIFFUSION TRANSFER I
   [Anonymous], P 7 INT SOFTW METR S
   ANTHES GH, 2001, COMPUTER WORLD, V35, P40
   Berry M., 2000, Empirical Software Engineering, V5, P183, DOI 10.1023/A:1026534430984
   BINSTOCK A, 1999, INFORMATIONWEEK 1018, P133
   BOLLEN KA, 1981, AM SOCIOL REV, V46, P232, DOI 10.2307/2094981
   Briand L., 1996, Softw. Process, Improve-ment Pract., V2, P253
   COOPER RB, 1990, MANAGE SCI, V36, P123, DOI 10.1287/mnsc.36.2.123
   Curran PJ, 1996, PSYCHOL METHODS, V1, P16, DOI 10.1037//1082-989X.1.1.16
   DASKALANTONAKIS MK, 1992, IEEE T SOFTWARE ENG, V18, P998, DOI 10.1109/32.177369
   DIMAGGIO PJ, 1983, AM SOCIOL REV, V48, P147, DOI 10.2307/2095101
   FENICK S, 1990, IEEE SOFTWARE    MAR
   Fenton N. E., 1998, Software metrics: a rigorous and practical approach
   Gopal A, 2002, IEEE T SOFTWARE ENG, V28, P863, DOI 10.1109/TSE.2002.1033226
   Hall A, 1997, J ASIAN EARTH SCI, V15, P55, DOI 10.1016/S0743-9547(96)00080-3
   Hallén A, 2000, ELEC SOC S, V2000, P82
   Hayes M., 2003, Information Week, P34
   Hu L-T, 1995, STRUCTURAL EQUATION, P76
   HUMPHREY SW, 1995, DESCIPLINE SOFTWARE
   JEFFERY R, 1993, P 1 INT SOFTW METR
   JOHNSON DR, 1983, AM SOCIOL REV, V48, P398, DOI 10.2307/2095231
   KITCHENHAM B, 1995, IEEE T SOFTWARE ENG, V21, P929, DOI 10.1109/32.489070
   Kitchenham BA, 2001, IEEE T SOFTWARE ENG, V27, P788, DOI 10.1109/32.950316
   KRAUT RE, 1995, COMMUN ACM, V38, P69, DOI 10.1145/203330.203345
   Krishnan MS, 2000, MANAGE SCI, V46, P745, DOI 10.1287/mnsc.46.6.745.11941
   MEYER JW, 1977, AM J SOCIOL, V83, P340, DOI 10.1086/226550
   NUSENOFF RE, 1993, J SYST SOFTWARE, V23, P245, DOI 10.1016/0164-1212(93)90099-J
   Offen RJ, 1997, IEEE SOFTWARE, V14, P45, DOI 10.1109/52.582974
   OHARA F, 2000, P INT C SOFTW ENG IC
   Paulk M.C., 1993, SEI93TR24
   PAULK MC, 1999, P INT C SOFTW QUAL
   PFLEEGER SL, 1993, IEEE SOFTWARE, V10, P67, DOI 10.1109/52.210606
   PODSAKOFF PM, 1986, J MANAGE, V12, P531, DOI 10.1177/014920638601200408
   PORT O, 1999, BUSINESS WEEK    DEC
   Rainer A, 2003, J SYST SOFTWARE, V66, P7, DOI 10.1016/S0164-1212(02)00059-6
   ROSENBERG LH, 1996, P 1996 SOFTW TECHN C
   ROZMAN I, 1994, PROCEEDINGS OF THE IEEE 1994 INTERNATIONAL ENGINEERING MANAGEMENT CONFERENCE, P56, DOI 10.1109/IEMC.1994.379951
   Schumacher R.E., 1996, A beginner's guide to structural equation modeling
   SEDDIO C, 1993, J SYSTEMS SOFTWARE, V20
   Thibodeau P., 2002, COMPUTERWORLD, V36, P1
   Westphal JD, 1997, ADMIN SCI QUART, V42, P366, DOI 10.2307/2393924
NR 43
TC 27
Z9 31
U1 3
U2 22
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD AUG
PY 2005
VL 31
IS 8
BP 679
EP 694
DI 10.1109/TSE.2005.95
PG 16
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science; Engineering
GA 953OL
UT WOS:000231086500004
DA 2024-07-18
ER

PT J
AU Selby, RW
AF Selby, RW
TI Enabling reuse-based software development of large-scale systems
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article; Proceedings Paper
CT Workshop on Mining Software Repositories held in conjunction with the
   27th International Conference on Software Engineering (ICSE)
CY MAY 17, 2005
CL St Louis, MO
DE software reuse; software measurement; software metrics; software faults;
   software changes; mining software repositories; large-scale systems;
   experimentation; empirical study
ID DESIGN PATTERNS; FAILURE FACTORS; PRODUCT LINES; ARCHITECTURES;
   ALTERNATIVES; REUSABILITY; GENERATION; SUCCESS; MODEL; VIEWS
AB Software reuse enables developers to leverage past accomplishments and facilitates significant improvements in software productivity and quality. Software reuse catalyzes improvements in productivity by avoiding redevelopment and improvements in quality by incorporating components whose reliability has already been established. This study addresses a pivotal research issue that underlies software reuse-what factors characterize successful software reuse in large-scale systems? The research approach is to investigate, analyze, and evaluate software reuse empirically by mining software repositories from a NASA software development environment that actively reuses software. This software environment successfully follows principles of reuse-based software development in order to achieve an average reuse of 32 percent per project, which is the average amount of software either reused or modified from previous systems. We examine the repositories for 25 software systems ranging from 3,000 to 112,000 source lines from this software environment. We analyze four classes of software modules: modules reused without revision, modules reused with slight revision (<25 percent revision), modules reused with major revision (>= 25 percent revision), and newly developed modules. We apply nonparametric statistical models to compare numerous development variables across the 2,954 software modules in the systems. We identify two categories of factors that characterize successful reuse-based software development of large-scale systems: module design factors and module implementation factors. We also evaluate the fault rates of the reused, modified, and newly developed modules. The module design factors that characterize module reuse without revision were ( after normalization by size in source lines): few calls to other system modules, many calls to utility functions, few input-output parameters, few reads and writes, and many comments. The module implementation factors that characterize module reuse without revision were small size in source lines and (after normalization by size in source lines): low development effort and many assignment statements. The modules reused without revision had the fewest faults, fewest faults per source line, and lowest fault correction effort. The modules reused with major revision had the highest fault correction effort and highest fault isolation effort as well as the most changes, most changes per source line, and highest change correction effort. In conclusion, we outline future research directions that build on these software reuse ideas and strategies.
C1 Northrop Grumman Space Technol, Redondo Beach, CA 90278 USA.
RP Northrop Grumman Space Technol, 1 Space Pk, Redondo Beach, CA 90278 USA.
EM rick.selby@ngc.com
CR [Anonymous], 1986, The C++ Programming Language
   BASILI VR, 1983, IEEE T SOFTWARE ENG, V9, P652, DOI 10.1109/TSE.1983.235430
   BASILI VR, 1986, IEEE T SOFTWARE ENG, V12, P733, DOI 10.1109/TSE.1986.6312975
   BIGGERSTAFF T, 1987, IEEE SOFTWARE, V4, P41, DOI 10.1109/MS.1987.230095
   BIGGERSTAFF T, 1983, P WORKSH REUS PROGR
   BIGGERSTAFF T, 1984, IEEE T SOFTWARE ENG, V10
   Biggerstaff T.J., 1989, Software reusability: vol. 1
   BIRSTWISTLE G, 1973, SIMULA BEGIN
   BOBROW DG, 1986, P C OBJ OR PROGR SYS, P17
   BOBROW DG, 1982, LOOPS OBJECTED ORIEN
   Böckle G, 2004, IEEE SOFTWARE, V21, P23
   Boehm BW., 1981, Software Engineering Economics
   BOOCH G, 1986, IEEE T SOFTWARE ENG, V12, P211, DOI 10.1109/TSE.1986.6312937
   Bosch J, 2003, PROC INT CONF SOFTW, P757, DOI 10.1109/ICSE.2003.1201273
   Bosch J, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P681, DOI 10.1109/ICSE.2002.1008027
   Bosch J, 2001, PROC INT CONF SOFTW, P91, DOI 10.1109/ICSE.2001.919084
   BOSCH J, 1999, P C TECHN OBJ OR LAN, P404
   Brooks Fred, 1975, The Mythical Man-Month
   BROOKS WD, 1981, J SYST SOFTWARE, V2, P3, DOI 10.1016/0164-1212(81)90041-8
   CANNONB JI, 1980, MIT ARTIFICIAL INTEL
   Card D. N., 1985, Proceedings of the 8th International Conference on Software Engineering (Cat. No.85CH2139-4), P372
   CARD DN, 1986, IEEE T SOFTWARE ENG, V12, P264, DOI 10.1109/TSE.1986.6312942
   Clements P, 2003, PROC INT CONF SOFTW, P740, DOI 10.1109/ICSE.2003.1201264
   Cochran W.G., 1960, Experimental designs
   CONN R, 1986, DR DOBBS J       FEB, P60
   Coplien J, 1998, IEEE SOFTWARE, V15, P37, DOI 10.1109/52.730836
   Deelstra S, 2004, PROC IEEE INT CONF S, P458, DOI 10.1109/ICSM.2004.1357835
   Devanbu PT, 2000, IEEE T SOFTWARE ENG, V26, P423, DOI 10.1109/TSE.2000.846299
   Frakes WB, 1996, IEEE T SOFTWARE ENG, V22, P274, DOI 10.1109/32.491652
   Goldberg A., 1983, Smalltalk 80: The Language and Its Implementation
   Gomaa H., 1994, Proceedings. Third International Conference on Software Reuse: Advances in Software Reusability (Cat. No.94TH06940), P74, DOI 10.1109/ICSR.1994.365809
   Gustafsson J, 2002, SIXTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P108, DOI 10.1109/CSMR.2002.995795
   HABERMANN AN, 1986, IEEE T SOFTWARE ENG, V12, P1117, DOI 10.1109/TSE.1986.6313007
   Harrold MJ, 1996, IEEE T SOFTWARE ENG, V22, P442, DOI [10.1109/32.538603, 10.1145/226295.309037]
   HULOT JH, 1984, 44 INRIA
   Isakowitz T, 1996, IEEE T SOFTWARE ENG, V22, P407, DOI 10.1109/32.508314
   KAISER GE, 1987, IEEE SOFTWARE, V4, P17, DOI 10.1109/MS.1987.231059
   Kazman R, 1996, IEEE SOFTWARE, V13, P47, DOI 10.1109/52.542294
   Klein J, 2003, PROC INT CONF SOFTW, P751, DOI 10.1109/ICSE.2003.1201270
   Lanubile F, 1997, IEEE T SOFTWARE ENG, V23, P246, DOI 10.1109/32.588543
   Lee NY, 1997, IEEE T SOFTWARE ENG, V23, P537, DOI 10.1109/32.629492
   Mak JKH, 2004, PROC INT CONF SOFTW, P252, DOI 10.1109/ICSE.2004.1317447
   McCabe T. J., 1976, IEEE Transactions on Software Engineering, VSE-2, P308, DOI 10.1109/TSE.1976.233837
   Menzies T, 2003, IEEE T SOFTWARE ENG, V29, P474, DOI 10.1109/TSE.2003.1199076
   MEYER B, 1987, IEEE SOFTWARE, V4, P50, DOI 10.1109/MS.1987.230097
   Morel B, 2004, IEEE T SOFTWARE ENG, V30, P587, DOI 10.1109/TSE.2004.53
   Morisio M, 2002, IEEE T SOFTWARE ENG, V28, P340, DOI 10.1109/TSE.2002.995420
   *NASA, 1983, SEL81102 NASA GODD S
   *NASA, 1982, COLL SOFTW ENG PAP, V1
   NEIGHBORS JM, 1984, IEEE T SOFTWARE ENG, V10, P564, DOI 10.1109/TSE.1984.5010280
   Novak GS, 1997, IEEE T SOFTWARE ENG, V23, P401, DOI 10.1109/32.605759
   Osterweil L., 1987, Proceedings of the 9th International Conference on Software Engineering (Cat. No.87CH2432-3), P2
   Rajlich V, 1996, IEEE T SOFTWARE ENG, V22, P153, DOI 10.1109/32.485224
   REPS T, 1983, GENERATING LANGUAGE
   Rothenberger MA, 2003, IEEE T SOFTWARE ENG, V29, P825, DOI 10.1109/TSE.2003.1232287
   Scheffe H., 1959, ANAL VARIANCE
   Selby R.W., 1989, SOFTWARE REUSABILITY
   SELBY RW, 1988, IEEE T SOFTWARE ENG, V14, P1743, DOI 10.1109/32.9061
   SELBY RW, 1987, P 1 EUR SOFTW ENG C, P227
   SELBY RW, 1988, SOFTWARE REUSE EMERG
   Sen A, 1997, IEEE T SOFTWARE ENG, V23, P418, DOI 10.1109/32.605760
   Shaw M, 1997, P INT COMP SOFTW APP, P6, DOI 10.1109/CMPSAC.1997.624691
   Soundarajan N, 2004, PROC INT CONF SOFTW, P666, DOI 10.1109/ICSE.2004.1317488
   Succi G, 2001, IEEE T SOFTWARE ENG, V27, P473, DOI 10.1109/32.922717
   TESLER L, 1985, STRUCTURED LANGUAGE
   Tomer A, 2004, IEEE T SOFTWARE ENG, V30, P601, DOI 10.1109/TSE.2004.50
   TRACZ W, 1987, P 5 NAT C AD TECHN M
   TRACZ W, 1987, IEEE SOFTWARE, V4
   Vosburgh J., 1984, Proceedings of the 7th International Conference on Software Engineering (cat. no. 84CH2011-5), P143
   WALSTON CE, 1977, IBM SYST J, V16, P54, DOI 10.1147/sj.161.0054
   WEISS SH, 1985, LANCET, V2, P157
NR 71
TC 71
Z9 85
U1 2
U2 14
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUN
PY 2005
VL 31
IS 6
BP 495
EP 510
DI 10.1109/TSE.2005.69
PG 16
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Engineering
GA 940AX
UT WOS:000230117200006
DA 2024-07-18
ER

PT J
AU Malek, S
   Mikic-Rakic, M
   Medvidovic, N
AF Malek, S
   Mikic-Rakic, M
   Medvidovic, N
TI A style-aware architectural middleware for resource-constrained,
   distributed systems
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE software architecture; architectural style; middleware; Prism-MW
ID SOFTWARE ARCHITECTURE
AB A recent emergence of small, resource-constrained, and highly mobile computing platforms presents numerous new challenges for software developers. We refer to development in this new setting as programming-in-the-small-and-many ( Prism). This paper provides a description and evaluation of Prism-MW, a middleware platform intended to support software architecture-based development in the Prism setting. Prism-MW provides efficient and scalable implementation-level support for the key aspects of Prism application architectures, including their architectural styles. Additionally, Prism-MW is extensible to support different application requirements suitable for the Prism setting. Prism-MW has been applied in a number of applications and used as an educational tool in graduate-level software architecture and embedded systems courses. Recently, Prism-MW has been successfully evaluated by a major industrial organization for use in one of their key distributed embedded systems. Our experience with the middleware indicates that the principles of architecture-based software development can be successfully, and flexibly, applied in the Prism setting.
C1 Univ So Calif, Dept Comp Sci, Los Angeles, CA 90089 USA.
   Google Inc, Santa Monica, CA 90405 USA.
C3 University of Southern California; Google Incorporated
RP Univ So Calif, Dept Comp Sci, 941 W 37th Pl, Los Angeles, CA 90089 USA.
EM malek@usc.edu; marija@google.com; neno@usc.edu
CR ABOWD G, 2002, P SIGSOFT S FDN SOFT
   Aldrich J, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P187, DOI 10.1109/ICSE.2002.1007967
   Andrade L, 2003, LECT NOTES COMPUT SC, V2755, P1
   [Anonymous], 2002, ADV COMPUTERS
   [Anonymous], 2000, Dissertation
   Carzaniga A, 2001, ACM T COMPUT SYST, V19, P332, DOI 10.1145/380749.380767
   Chan ATS, 2003, IEEE T SOFTWARE ENG, V29, P1072, DOI 10.1109/TSE.2003.1265522
   DEREMER F, 1976, IEEE T SOFTWARE ENG, V2, P321
   EMMERICH W., 2000, P C FUTURE SOFTWARE, P117, DOI DOI 10.1145/336512.336542
   Fiadeiro JL, 1997, SCI COMPUT PROGRAM, V28, P111, DOI 10.1016/S0167-6423(96)00025-1
   Fuggetta A, 1998, IEEE T SOFTWARE ENG, V24, P342, DOI 10.1109/32.685258
   *IONA, 2004, ORB E DAT
   LIU CL, 1973, J ACM, V20, P46, DOI 10.1145/321738.321743
   Mascolo C, 2002, LECT NOTES COMPUT SC, V2497, P20
   Mascolo C, 2002, WIRELESS PERS COMMUN, V21, P77, DOI 10.1023/A:1015584805733
   Medvidovic N, 2000, IEEE T SOFTWARE ENG, V26, P70, DOI 10.1109/32.825767
   Medvidovic N., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P44, DOI 10.1109/ICSE.1999.840994
   MEDVIDOVIC N, 2002, P WORKING IEEE IFIP, V224, P221
   MEDVIDOVIC N, 2003, IEEE COMPUTER    SEP, P66
   Mehta N. R., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, P178, DOI 10.1109/ICSE.2000.870409
   Mikic-Rakic M, 2004, INTERNATIONAL CONFERENCE ON AUTONOMIC COMPUTING, PROCEEDINGS, P114, DOI 10.1109/ICAC.2004.1301354
   Mikic-Rakic M, 2003, LECT NOTES COMPUT SC, V2672, P162
   MIKICRAKIC M, 2001, P 2001 S SOFTW REUS, P11
   Oreizy P, 1999, IEEE INTELL SYST APP, V14, P54, DOI 10.1109/5254.769885
   Perry D. E., 1992, SIGSOFT Software Engineering Notes, V17, P40, DOI 10.1145/141874.141884
   Peterson L. L., 2000, COMPUTER NETWORKS
   Salomon D., 1997, DATA COMPRESSION COM
   SANKHLA V, 2004, THESIS U SO CALIFORN
   SCHMIDT D, 2004, TAO
   SCHMIDT D, 2004, ACE
   Schmidt DC, 2001, REAL-TIME SYST, V21, P77, DOI 10.1023/A:1011195304563
   SHAW M, 1995, IEEE T SOFTWARE ENG, V21, P314, DOI 10.1109/32.385970
   Sousa J.P., 2002, SOFTWARE ARCHITECTUR, P29
   *SUN MICR, 2004, JINI TM NETW TECHN
   Szyperski C., 2002, COMPONENT SOFTWARE, V2nd
   Taylor RN, 1996, IEEE T SOFTWARE ENG, V22, P390, DOI 10.1109/32.508313
   Weinsberg Y, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P374, DOI 10.1109/ICSE.2002.1007983
   Yau SS, 2001, FOURTH IEEE INTERNATIONAL SYMPOSIUM ON OBJECT-ORIENTED REAL-TIME DISTRIBUTED COMPUTING, PROCEEDINGS, P163, DOI 10.1109/ISORC.2001.922833
NR 38
TC 51
Z9 82
U1 0
U2 7
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAR
PY 2005
VL 31
IS 3
BP 256
EP 272
DI 10.1109/TSE.2005.29
PG 17
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 917IE
UT WOS:000228453500006
DA 2024-07-18
ER

PT J
AU El-Fakih, K
   Yevtushenko, N
   Von Bochmann, G
AF El-Fakih, K
   Yevtushenko, N
   Von Bochmann, G
TI FSM-based incremental conformance testing methods
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE protocol conformance testing; finite state machines; test derivation;
   incremental testing
ID FINITE-STATE MACHINES; FORMAL METHODS
AB The development of appropriate test cases is an important issue for conformance testing of protocol implementations and other reactive software systems. A number of methods are known for the development of a test suite based on a specification given in the form of a finite state machine. In practice, the system requirements evolve throughout the lifetime of the system and the specifications are modified incrementally. In this paper, we adapt four well-known test derivation methods, namely, the HIS, W, Wp, and UIOv methods, for generating tests that would test only the modified parts of an evolving specification. Some application examples and experimental results are provided. These results show significant gains when using incremental testing in comparison with complete testing, especially when the modified part represents less than 20 percent of the whole specification.
C1 Amer Univ Sharjah, Dept Comp Sci, Sharjah, U Arab Emirates.
   Tomsk State Univ, Tomsk 634050, Russia.
   Univ Ottawa, Sch Informat Technol & Engn, Ottawa, ON K1N 6N5, Canada.
C3 American University of Sharjah; Tomsk State University; University of
   Ottawa
RP Amer Univ Sharjah, Dept Comp Sci, POB 26666, Sharjah, U Arab Emirates.
EM kelfakih@site.uottawa.ca; yevtushenko@elefot.tsu.ru;
   bochmann@site.uottawa.ca
RI Yevtushenko, Nina V./R-6494-2016
CR [Anonymous], 1964, 5 ANN S SWITCH CIRC, DOI DOI 10.1109/SWCT.1964.8
   CHANSON ST, 1993, COMPUTER NETWORKS IS, V25
   CHOW TS, 1978, IEEE T SOFTWARE ENG, V4, P178, DOI 10.1109/TSE.1978.231496
   ELFAKIH K, 2002, P IFIP 14 INT C TEST, P373
   FUJIWARA S, 1991, IEEE T SOFTWARE ENG, V17, P591, DOI 10.1109/32.87284
   Gill A., 1962, Introduction to the Theory of Finite-State Machines
   GONENC G, 1970, IEEE T COMPUT, VC 19, P551, DOI 10.1109/T-C.1970.222975
   Koufareva I, 1999, INT FED INFO PROC, V21, P217
   Lai R, 2002, J SYST SOFTWARE, V62, P21, DOI 10.1016/S0164-1212(01)00132-7
   Lee D, 1996, P IEEE, V84, P1090, DOI 10.1109/5.533956
   NAITO S, 1981, P IEEE FAULT TOL C
   PETRENKO A, 1992, IFIP TRANS C, V8, P229
   PETRENKO A, 1991, P 4 INT WORKSH PROT, P83
   Petrenko A, 1993, P IFIP 6 IWPTS FRANC, P363
   SABNANI K, 1988, COMPUT NETWORKS ISDN, V15, P285, DOI 10.1016/0169-7552(88)90064-5
   SIDHU DP, 1989, IEEE T SOFTWARE ENG, V15, P413, DOI 10.1109/32.16602
   URAL H, 1992, COMPUT COMMUN, V15, P311, DOI 10.1016/0140-3664(92)90092-S
   Ural H, 1997, IEEE T COMPUT, V46, P93, DOI 10.1109/12.559807
   Vasilevskii M. P., 1973, Cybernetics, V9, P653, DOI 10.1007/BF01068590
   VONBOCHMANN G, 1994, P INT S SOFTW TEST A, P109
   Vuong SonT., 1989, PROC 2 IFIP INT WORK, P161
   YANNAKAKIS M, 1995, J COMPUT SYST SCI, V50, P209, DOI 10.1006/jcss.1995.1019
   Yevtushenko N., 1990, TEST DERIVATION METH
NR 23
TC 38
Z9 45
U1 0
U2 4
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUL
PY 2004
VL 30
IS 7
BP 425
EP 436
DI 10.1109/TSE.2004.31
PG 12
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 826DE
UT WOS:000221808600001
DA 2024-07-18
ER

PT J
AU Marré, M
   Bertolino, A
AF Marré, M
   Bertolino, A
TI Using spanning sets for coverage testing
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE control flow; coverage criteria; data flow; ddgraph; spanning sets;
   subsumption
ID PROGRAMS
AB A test coverage criterion defines a set E(c) of entities of the program flowgraph and requires that every entity in this set is covered under some test case. Coverage criteria are also used to measure the adequacy of the executed test cases. In this paper, we introduce the notion of spanning sets of entities for coverage testing. A spanning set is a minimum subset of E(c), such that a test suite covering the entities in this subset is guaranteed to cover every entity in E(c). When the coverage of an entity always guarantees the coverage of another entity, the former is said to subsume the latter. Based on the subsumption relation between entities, we provide a generic algorithm to find spanning sets for control flow and data flow-based test coverage criteria. We suggest several useful applications of spanning sets: They help reduce and estimate the number of test cases needed to satisfy coverage criteria. We also empirically investigate how the use of spanning sets affects the fault detection effectiveness.
C1 Univ Buenos Aires, Dept Computac, FCE&N, Buenos Aires, DF, Argentina.
   Ist Ric Tecnol & Informaz A Faedo, Area Ric, CNR, I-56100 Pisa, Italy.
C3 University of Buenos Aires; Consiglio Nazionale delle Ricerche (CNR)
RP Marré, M (corresponding author), Univ Buenos Aires, Dept Computac, FCE&N, Buenos Aires, DF, Argentina.
EM mmarre@pragma.com.ar; antonia.bertolino@isti.cnr.it
RI Bertolino, Antonia/ABD-6837-2020
OI Bertolino, Antonia/0000-0001-8749-1356
CR Aho AV., 1974, DESIGN ANAL COMPUTER
   [Anonymous], P 21 ACM SIGPLAN SIG
   [Anonymous], 1977, Flow Analysis of Computer Programs
   [Anonymous], 1990, Software testing techniques {
   *AR RES GROUP, 2003, AR AN SYST DOWNL
   Beck Kent L., 2003, Test Driven Development By Example
   BERTOLINO A, 1993, J SYST SOFTWARE, V20, P125, DOI 10.1016/0164-1212(93)90004-H
   Bertolino A, 1997, J SYST SOFTWARE, V38, P47, DOI 10.1016/S0164-1212(97)00061-7
   BERTOLINO A, 1994, IEEE T SOFTWARE ENG, V20, P885, DOI 10.1109/32.368137
   Bertolino A, 1996, J SYST SOFTWARE, V35, P95, DOI 10.1016/0164-1212(95)00089-5
   BERTOLINO A, 1997, P INT QUAL WEEK MAY
   CHUSHO T, 1987, IEEE T SOFTWARE ENG, V13, P509, DOI 10.1109/TSE.1987.233196
   FRANKL PG, 1988, IEEE T SOFTWARE ENG, V14, P1483, DOI 10.1109/32.6194
   GUPTA KC, 1993, INT J MICROWAVE MILL, V3, P1
   Harrold M. J., 1993, ACM Transactions on Software Engineering and Methodology, V2, P270, DOI 10.1145/152388.152391
   HUTCHINS M, 1994, PROC INT CONF SOFTW, P191, DOI 10.1109/ICSE.1994.296778
   Lengauer T., 1979, ACM T PROGR LANG SYS, V1, P121, DOI 10.1145/357062.357071
   Marre M, 1996, PROC INT CONF SOFTW, P486, DOI 10.1109/ICSE.1996.493443
   MARRE M, 1997, THESIS U BUENOS AIRE
   MARRE M, 1996, ACM P INT S SOFTW TE, P147
   RAPPS S, 1985, IEEE T SOFTWARE ENG, V11, P367, DOI 10.1109/TSE.1985.232226
   Rothermel G, 1998, PROC IEEE INT CONF S, P34, DOI 10.1109/ICSM.1998.738487
   WONG WE, 1995, PROC INT CONF SOFTW, P41, DOI 10.1145/225014.225018
   Wong WE, 1993, THESIS PURDUE U
   Wonnacott TH., 1990, INTRO STAT
NR 25
TC 72
Z9 87
U1 0
U2 4
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD NOV
PY 2003
VL 29
IS 11
BP 974
EP 984
DI 10.1109/TSE.2003.1245299
PG 11
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 740KU
UT WOS:000186402200002
DA 2024-07-18
ER

PT J
AU Xie, M
   Yang, B
AF Xie, M
   Yang, B
TI A study of the effect of imperfect debugging on software development
   cost
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE software reliability; development cost; imperfect debugging; testing
   level; testing optimization
ID RELIABILITY; MODEL
AB It is widely recognized that the debugging processes are usually imperfect. Software faults are not completely removed because of the difficulty in locating them or because new faults might be introduced. Hence, it is of great importance to investigate the effect of the imperfect debugging on software development cost, which, in turn, might affect the optimal software release time or operational budget. In this paper, a commonly used cost model is extended to the case of imperfect debugging. Based on this, the effect of imperfect debugging is studied. As the probability of perfect debugging, termed testing level here, is expensive to be increased, but manageable to a certain extent with additional resources, a model incorporating this situation is presented. Moreover, the problem of determining the optimal testing level is considered. This is useful when the decisions regarding the test team composition, testing strategy, etc., are to be made for more effective testing.
C1 Natl Univ Singapore, Dept Ind & Syst Engn, Singapore 119260, Singapore.
   Singapore Technol Aerosp Ltd, Engn Software Dept, Singapore 539938, Singapore.
C3 National University of Singapore
RP Xie, M (corresponding author), Natl Univ Singapore, Dept Ind & Syst Engn, Kent Ridge, Singapore 119260, Singapore.
RI Xie, Min/A-5552-2011; Jolugbo, Olajide/D-3216-2017; Xie,
   Min/IUQ-1412-2023
OI Xie, Min/0000-0002-8500-8364; Jolugbo, Olajide/0000-0001-6512-4117;
   Yang, Bo/0000-0003-0805-7928
CR AMMANN PE, 1994, IEEE T SOFTWARE ENG, V20, P142, DOI 10.1109/32.265635
   [Anonymous], 1996, HDB SOFTWARE RELIABI
   GOEL AL, 1985, IEEE T SOFTWARE ENG, V11, P1411, DOI 10.1109/TSE.1985.232177
   Kapur PK, 1996, MICROELECTRON RELIAB, V36, P645, DOI 10.1016/0026-2714(95)00157-3
   Ohba M., 1989, Proceedings. 11th International Conference on Software Engineering (Cat. No.89CH2718-5), P237, DOI 10.1145/74587.74619
   Pham H, 1996, INT J SYST SCI, V27, P455, DOI 10.1080/00207729608929237
   Shanthikumar J. G., 1981, P NAT COMP C, P311
   Slud E, 1997, SCAND J STAT, V24, P555, DOI 10.1111/1467-9469.00081
   Xie M., 1991, SOFTWARE RELIABILITY
   Zhang XM, 1998, INT J SYST SCI, V29, P435, DOI 10.1080/00207729808929534
NR 10
TC 78
Z9 89
U1 0
U2 7
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAY
PY 2003
VL 29
IS 5
BP 471
EP 473
DI 10.1109/TSE.2003.1199075
PG 3
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 675HM
UT WOS:000182688000007
DA 2024-07-18
ER

PT J
AU Subramanyam, R
   Krishnan, MS
AF Subramanyam, R
   Krishnan, MS
TI Empirical analysis of CK metrics for object-oriented design complexity:
   Implications for software defects
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE object-oriented design; software metrics validation; object-oriented
   languages; C++; Java
ID QUALITY; SYSTEM; SUITE
AB To produce high quality object-oriented (OO) applications, a strong emphasis on design aspects, especially during the early phases of Software, development,, is necessary. Design metrics play an important role in helping developers understand design aspects of software and, hence, improve software quality and developer productivity. In this paper, we provide empirical evidence supporting the role of OO design complexity, metrics, specifically a subset of the Chidamber and Kemerer suite, in determining software defects. Our results, based on industry data from software developed in two popular programming languages used in OO development, indicate that,even after controlling for the size of the software, these metrics are significantly associated with defects In addition, we find that the effects of these metrics on defects vary across the samples from two programming languages-C++ and Java. We believe that these results have significant implications for designing high-quality software product's using the OO approach.
C1 Univ Michigan, Sch Business, Ann Arbor, MI 48109 USA.
C3 University of Michigan System; University of Michigan
RP Univ Michigan, Sch Business, Tappan St, Ann Arbor, MI 48109 USA.
EM ramanath@umich.edu; mskrish@umich.edu
RI Subramanyam, Ramanath/AAJ-5283-2020
CR ABREU FBE, 1995, P ECCOP 95 WORKSH ME
   AKIYAMA F, 1971, INFORMATION PROCESSI, V71, P353
   [Anonymous], 1992, PRACTICAL SOFTWARE M
   [Anonymous], 1977, TREATISE BASIC PHILO
   BANKER RD, 1989, IEEE T SOFTWARE ENG, V15, P1199, DOI 10.1109/TSE.1989.559768
   BANKER RD, 1993, COMMUN ACM, V36, P81, DOI 10.1145/163359.163375
   Basili VR, 1996, IEEE T SOFTWARE ENG, V22, P751, DOI 10.1109/32.544352
   BASILI VR, 1984, COMMUN ACM, V27, P42, DOI 10.1145/69605.2085
   Belsley D. A., 2005, Regression Diagnostics: Identifying Influential Data and Sources of Collinearity
   Binkley AB, 1998, PROC INT CONF SOFTW, P452, DOI 10.1109/ICSE.1998.671604
   Booch G., 2007, Object-Oriented Analysis and Design with Applications, Vthird
   BOONE B, 1996, JAVA ESSENTIALS C CP
   BOX GEP, 1964, J ROY STAT SOC B, V26, P211, DOI 10.1111/j.2517-6161.1964.tb00553.x
   Briand L. C., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P345, DOI 10.1109/ICSE.1999.841025
   Briand LC, 2000, J SYST SOFTWARE, V51, P245, DOI 10.1016/S0164-1212(99)00102-8
   Brito e Abreu F, 1996, P 3 INT SOFTW METR S
   Bunge MA., 1979, TREATISE BASIC PHILO, DOI 10.1007/978-94-009-9392-1
   Cartwright M, 2000, IEEE T SOFTWARE ENG, V26, P786, DOI 10.1109/32.879814
   Chae HS, 2000, SOFTWARE PRACT EXPER, V30, P1405, DOI 10.1002/1097-024X(200010)30:12<1405::AID-SPE330>3.0.CO;2-3
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   CHIDAMBER SR, 1991, SIGPLAN NOTICES, V26, P197
   Chidamber SR, 1998, IEEE T SOFTWARE ENG, V24, P629, DOI 10.1109/32.707698
   CHOW GC, 1960, ECONOMETRICA, V28, P591, DOI 10.2307/1910133
   Cook RD, 1982, RESIDUALS INFLUENCE
   El Emam K, 2001, J SYST SOFTWARE, V56, P63, DOI 10.1016/S0164-1212(00)00086-8
   Emam KE, 2001, IEEE T SOFTWARE ENG, V27, P630, DOI 10.1109/32.935855
   Fenton NE., 1991, Software Metrics: A Rigorous Approach
   Grady R.B., 1987, SOFTWARE METRICS EST, V1
   Greene W.H., 1997, Econometric Analysis, Vthird
   Halstead M. H., 1977, ELEMENTS SOFTWARE SC
   Horstmann Cay S., 1997, Practical Object-Oriented Development in C++ and Java
   JONES C., 1997, SOFTWARE QUALITY ANA
   KITCHENHAM BA, 1990, SOFTWARE ENG J, V5, P50, DOI 10.1049/sej.1990.0007
   Krishnan MS, 2000, MANAGE SCI, V46, P745, DOI 10.1287/mnsc.46.6.745.11941
   LI W, 1993, J SYST SOFTWARE, V23, P111, DOI 10.1016/0164-1212(93)90077-B
   McCabe T. J., 1976, IEEE Transactions on Software Engineering, VSE-2, P308, DOI 10.1109/TSE.1976.233837
   SHEN VY, 1985, IEEE T SOFTWARE ENG, V11, P317, DOI 10.1109/TSE.1985.232222
   TANG MH, 1999, P 6 INT SOFTW METR S, P242, DOI DOI 10.1109/METRIC.1999.809745
   VEEVERS A, 1994, J SOFTWARE TESTING V, V4, P3
   WAND Y, 1990, IEEE T SOFTWARE ENG, V16, P1282, DOI 10.1109/32.60316
   WHITE H, 1980, ECONOMETRICA, V48, P817, DOI 10.2307/1912934
NR 41
TC 321
Z9 380
U1 0
U2 14
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD APR
PY 2003
VL 29
IS 4
BP 297
EP 310
DI 10.1109/TSE.2003.1191795
PG 14
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 664PT
UT WOS:000182070000002
DA 2024-07-18
ER

PT J
AU Guo, ZQ
   Tan, TT
   Liu, SR
   Liu, XT
   Lai, W
   Yang, YB
   Li, YH
   Chen, L
   Dong, W
   Zhou, YM
AF Guo, Zhaoqiang
   Tan, Tingting
   Liu, Shiran
   Liu, Xutong
   Lai, Wei
   Yang, Yibiao
   Li, Yanhui
   Chen, Lin
   Dong, Wei
   Zhou, Yuming
TI Mitigating False Positive Static Analysis Warnings: Progress,
   Challenges, and Opportunities
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Static warnings; false positives; defects; static analysis tools;
   software quality assurance
ID ANALYSIS TOOLS; CODE ANALYSIS; FIND BUGS; RANKING; COMBINATION; MALWARE;
   ALARMS; ASTREE; MODEL
AB Static analysis (SA) tools can generate useful static warnings to reveal the problematic code snippets in a software system without dynamically executing the corresponding source code. In the literature, static warnings are of paramount importance because they can easily indicate specific types of software defects in the early stage of a software development process, which accordingly reduces the maintenance costs by a substantial margin. Unfortunately, due to the conservative approximations of such SA tools, a large number of false positive (FP for short) warnings (i.e., they do not indicate real bugs) are generated, making these tools less effective. During the past two decades, therefore, many false positive mitigation (FPM for short) approaches have been proposed so that more accurate and critical warnings can be delivered to developers. This paper offers a detailed survey of research achievements on the topic of FPM. Given the collected 130 surveyed papers, we conduct a comprehensive investigation from five different perspectives. First, we reveal the research trends of this field. Second, we classify the existing FPM approaches into five different types and then present the concrete research progress. Third, we analyze the evaluation system applied to examine the performance of the proposed approaches in terms of studied SA tools, evaluation scenarios, performance indicators, and collected datasets, respectively. Fourth, we summarize the four types of empirical studies relating to SA warnings to exploit the insightful findings that are helpful to reduce FP warnings. Finally, we sum up 10 challenges unresolved in the literature from the aspects of systematicness, effectiveness, completeness, and practicability and outline possible research opportunities based on three emerging techniques in the future.
C1 [Guo, Zhaoqiang; Liu, Shiran; Liu, Xutong; Lai, Wei; Yang, Yibiao; Li, Yanhui; Chen, Lin; Zhou, Yuming] Nanjing Univ, State Key Lab Novel Software Technol, Nanjing 210023, Jiangsu, Peoples R China.
   [Tan, Tingting] Beijing Bytedance Network Technol Co Ltd, Beijing 100086, Peoples R China.
   [Tan, Tingting] Alibaba Grp Holding Ltd, Hangzhou 310023, Zhejiang, Peoples R China.
   [Dong, Wei] Natl Univ Def Technol, Coll Comp Sci, Changsha 211101, Hunan, Peoples R China.
C3 Nanjing University; Alibaba Group; National University of Defense
   Technology - China
RP Zhou, YM (corresponding author), Nanjing Univ, State Key Lab Novel Software Technol, Nanjing 210023, Jiangsu, Peoples R China.
EM gzq@smail.nju.edu.cn; tantingting.ttt@taobao.com;
   shiranliu@smail.nju.edu.cn; xryu@smail.nju.edu.cn;
   DZ20330011@smail.nju.edu.cn; yangyibiao@nju.edu.cn; yanhuili@nju.edu.cn;
   lchen@nju.edu.cn; wdong@nudt.edu.cn; zhouyuming@nju.edu.cn
RI Yang, Yibiao/ABP-4159-2022; tan, tingting/GYQ-9346-2022
OI Yang, Yibiao/0000-0003-1153-2013; Guo, Zhaoqiang/0000-0001-8971-5755;
   Li, Yanhui/0000-0003-2282-7175; Dong, Wei/0000-0002-8033-7943; Liu,
   Xutong/0000-0002-3831-5505
FU Natural Science Foundation of China
FX No Statement Available
CR Aggarwal A, 2006, P INT COMP SOFTW APP, P343
   Algaith A, 2018, 2018 14TH EUROPEAN DEPENDABLE COMPUTING CONFERENCE (EDCC 2018), P57, DOI 10.1109/EDCC.2018.00020
   Alikhashashneh EA, 2018, I C COMP SYST APPLIC
   Allier S., 2012, 2012 19th Working Conference on Reverse Engineering (WCRE), P277, DOI 10.1109/WCRE.2012.37
   Alon U, 2019, P ACM PROGRAM LANG, V3, DOI 10.1145/3290353
   Aloraini B, 2019, J SYST SOFTWARE, V158, DOI 10.1016/j.jss.2019.110427
   Amen B, 2018, IEEE 20TH INTERNATIONAL CONFERENCE ON HIGH PERFORMANCE COMPUTING AND COMMUNICATIONS / IEEE 16TH INTERNATIONAL CONFERENCE ON SMART CITY / IEEE 4TH INTERNATIONAL CONFERENCE ON DATA SCIENCE AND SYSTEMS (HPCC/SMARTCITY/DSS), P1177, DOI 10.1109/HPCC/SmartCity/DSS.2018.00198
   [Anonymous], 2010, P 3 INT C SOFTW TEST
   [Anonymous], 2009, PROC DEFECTS, P11
   [Anonymous], 2006, COMP 21 ACM SIGPLAN, DOI DOI 10.1145/1176617
   Arai S, 2014, INT WORKSH EMPIR ENG, P37, DOI 10.1109/IWESEP.2014.17
   Ayewah N., 2010, Proceedings of the 19th international symposium on Software testing and analysis, P241
   Ayewah N, 2007, PASTE'07 PROCEEDINGS OF THE 2007 ACM SIGPLAN- SIGSOFT WORKSHOP ON PROGRAM ANALYSIS FOR SOFTWARE TOOLS & ENGINEERING, P1, DOI 10.1145/1251535.1251536
   Ayewah N, 2008, IEEE SOFTWARE, V25, P22, DOI 10.1109/MS.2008.130
   Baca D, 2010, FIFTH INTERNATIONAL CONFERENCE ON AVAILABILITY, RELIABILITY, AND SECURITY: ARES 2010, PROCEEDINGS, P386, DOI 10.1109/ARES.2010.108
   Balachandran V, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P931, DOI 10.1109/ICSE.2013.6606642
   Beller M, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P470, DOI 10.1109/SANER.2016.105
   Bessey A, 2010, COMMUN ACM, V53, P66, DOI 10.1145/1646353.1646374
   Boland T, 2012, COMPUTER, V45, P88, DOI 10.1109/MC.2012.345
   Boogerd C, 2006, SIXTH IEEE INTERNATIONAL WORKSHOP ON SOURCE CODE ANALYSIS AND MANIPULATION, PROCEEDINGS, P149
   Buckers T, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P472, DOI 10.1109/SANER.2017.7884656
   Burhandenny AE, 2016, ASIA PAC SOFWR ENG, P121, DOI 10.1109/APSEC.2016.29
   Chappell T, 2017, 2017 IEEE INTERNATIONAL WORKSHOP ON MACHINE LEARNING TECHNIQUES FOR SOFTWARE QUALITY EVALUATION (MALTESQUE), P21, DOI 10.1109/MALTESQUE.2017.7882012
   Chebaro O., 2012, P SAC ACM, P1284, DOI DOI 10.1145/2245276.2231980
   Cheirdari Foteini, 2017, On the Move to Meaningful Internet Systems. OTM 2017 Conferences. Confederated International Conferences: CoopIS, C&TC, and ODBASE 2017. Proceedings: LNCS 10574, P99, DOI 10.1007/978-3-319-69459-7_7
   Cheirdari F, 2018, IEEE INT CONF BIG DA, P4782, DOI 10.1109/BigData.2018.8622456
   Chen Chen, 2013, Advanced Parallel Processing Technologies. 10th International Symposium, APPT 2013. Revised Selected Papers: LNCS 8299, P77, DOI 10.1007/978-3-642-45293-2_6
   Chimdyalwar B, 2015, LECT NOTES COMPUT SC, V9109, P573, DOI 10.1007/978-3-319-19249-9_35
   Cousot P, 2007, LECT NOTES COMPUT SC, V4435, P272
   Csallner C, 2008, ACM T SOFTW ENG METH, V17, DOI 10.1145/1348250.1348254
   Da Luo Z, 2010, IEEE INT WORK C SO, P135, DOI 10.1109/SCAM.2010.20
   Darabian H, 2020, J GRID COMPUT, V18, P293, DOI 10.1007/s10723-020-09510-6
   Darke P, 2012, ASIA PAC SOFWR ENG, P306, DOI 10.1109/APSEC.2012.97
   de Araújo CA, 2015, 2015 29TH BRAZILIAN SYMPOSIUM ON SOFTWARE ENGINEERING, P1, DOI 10.1109/SBES.2015.23
   Delaitre A, 2015, 2015 IEEE/ACM 1ST INTERNATIONAL WORKSHOP ON COMPLEX FAULTS AND FAILURES IN LARGE SOFTWARE SYSTEMS (COUFLESS), P14, DOI 10.1109/COUFLESS.2015.10
   Delmas D, 2007, LECT NOTES COMPUT SC, V4634, P437
   Dimastrogiovanni C, 2016, LAT-AM SYMP DEP COMP, P119, DOI 10.1109/LADC.2016.25
   Ding ZS, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-022-10118-5
   Do LNQ, 2017, PROCEEDINGS OF THE 26TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA'17), P307, DOI 10.1145/3092703.3092705
   Emanuelsson P, 2008, ELECTRON NOTES THEOR, V217, P5, DOI 10.1016/j.entcs.2008.06.039
   Flynn L, 2021, 2021 IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATION OF SOFTWARE TEST (AST 2021), P100, DOI 10.1109/AST52587.2021.00019
   Flynn L, 2018, 2018 IEEE/ACM 1ST INTERNATIONAL WORKSHOP ON SOFTWARE QUALITIES AND THEIR DEPENDENCIES (SQUADE), P13, DOI 10.1145/3194095.3194100
   Fry ZP, 2013, WORK CONF REVERSE EN, P282, DOI 10.1109/WCRE.2013.6671303
   Gao FJ, 2020, J COMPUT SCI TECH-CH, V35, P1406, DOI 10.1007/s11390-020-0525-z
   Ge X, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P992, DOI 10.1145/1985793.1985971
   Giet J, 2019, LECT NOTES COMPUT SC, V11698, P3, DOI 10.1007/978-3-030-26601-1_1
   github, TSE-survey-FPM
   Gu R, 2021, IEEE T PARALL DISTR, V32, P867, DOI 10.1109/TPDS.2020.3036190
   Habib A, 2018, IEEE INT CONF AUTOM, P317, DOI 10.1145/3238147.3238213
   Haihao Shen, 2011, Proceedings 2011 IEEE Fourth International Conference on Software Testing, Verification and Validation (ICST 2011), P299, DOI 10.1109/ICST.2011.51
   Hanam Q., 2014, P 11 WORKING C MININ, P152
   Heckman S. E., 2006, PROC 17 INT S SOFTW, P1
   Heckman S. S., 2007, ACM Crossroads, V14, P1
   Heckman S, 2011, INFORM SOFTWARE TECH, V53, P363, DOI 10.1016/j.infsof.2010.12.007
   Heckman S, 2009, SECOND INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION, AND VALIDATION, PROCEEDINGS, P161, DOI 10.1109/ICST.2009.45
   Heckman S, 2008, ESEM'08: PROCEEDINGS OF THE 2008 ACM-IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, P41
   Heckman SS, 2007, PROC INT CONF SOFTW, P89, DOI 10.1109/ICSECOMPANION.2007.16
   Hegedus P, 2022, IEEE ACCESS, V10, P55090, DOI 10.1109/ACCESS.2022.3176865
   Heo K, 2017, PROC INT CONF SOFTW, P519, DOI 10.1109/ICSE.2017.54
   Hoang T, 2020, PROC INT CONF SOFTW, P518, DOI 10.1145/3377811.3380361
   Hovemeyer D., 2005, ACM SIGSOFT Software Engineering Notes, P13
   Hovemeyer D, 2007, PASTE'07 PROCEEDINGS OF THE 2007 ACM SIGPLAN- SIGSOFT WORKSHOP ON PROGRAM ANALYSIS FOR SOFTWARE TOOLS & ENGINEERING, P9, DOI 10.1145/1251535.1251537
   Imtiaz Nasif, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P245, DOI 10.1109/MSR.2019.00049
   Imtiaz N., 2019, P 6 ANN S HOT TOP SC
   Imtiaz N, 2019, PROC INT SYMP SOFTW, P323, DOI 10.1109/ISSRE.2019.00040
   Johnson B, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P672, DOI 10.1109/ICSE.2013.6606613
   Jongwon Yoon, 2014, 2014 21st Asia-Pacific Software Engineering Conference (APSEC), P3, DOI 10.1109/APSEC.2014.81
   Joshi S, 2012, POPL 12: PROCEEDINGS OF THE 39TH ANNUAL ACM SIGPLAN-SIGACT SYMPOSIUM ON PRINCIPLES OF PROGRAMMING LANGUAGES, P19
   Jung YB, 2005, LECT NOTES COMPUT SC, V3672, P203
   Junior Luiz Cavamura, 2020, SBQS'20: Proceedings of the 19th Brazilian Symposium on Software Quality, DOI 10.1145/3439961.3439987
   Kang HJ, 2022, PROC INT CONF SOFTW, P698, DOI 10.1145/3510003.3510214
   Kang HJ, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P1, DOI 10.1109/ASE.2019.00011
   Karakatic S, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-022-10122-9
   Kim H, 2022, PROC INT CONF SOFTW, P1282, DOI 10.1145/3510003.3510098
   Kim S, 2007, P 6 JOINT M EUR SOFT, P45, DOI DOI 10.1145/1287624.1287633
   Kim S., 2007, 4 INT WORKSHOP MININ, P27, DOI DOI 10.1109/MSR.2007.26
   Kim Y, 2010, INFORM SOFTWARE TECH, V52, P210, DOI 10.1016/j.infsof.2009.10.004
   Koc U, 2019, IEEE INT CONF SOFTW, P288, DOI 10.1109/ICST.2019.00036
   Koc U, 2017, MAPL'17: PROCEEDINGS OF THE 1ST ACM SIGPLAN INTERNATIONAL WORKSHOP ON MACHINE LEARNING AND PROGRAMMING LANGUAGES, P35, DOI 10.1145/3088525.3088675
   Kong Deguang., 2007, Proceedings of the 2nd international conference on Scalable information systems, P55
   Kremenek T, 2003, LECT NOTES COMPUT SC, V2694, P295
   Kremenek T., 2004, Software Engineering Notes, V29, P83, DOI 10.1145/1041685.1029909
   Kumar R., 2010, PROC JOINT M EUR SOF, P707
   Layman Lucas, 2007, 2007 First International Symposium on Empirical Software Engineering and Measurement, P176
   Lee S, 2019, IEEE INT CONF SOFTW, P391, DOI 10.1109/ICST.2019.00048
   Lee W, 2017, ACM T PROGR LANG SYS, V39, DOI 10.1145/3095021
   Li JJ, 2011, P INT COMP SOFTW APP, P656, DOI 10.1109/COMPSAC.2011.91
   Li Mengchen., 2013, Proceedings of the 2013 International Symposium on Software Testing and Analysis, ISSTA 2013, P112, DOI 10.1145/2483760.2483778
   Liang G., 2010, P 25 IEEEACM INT C A, P93, DOI [DOI 10.1145/1858996.1859013, 10.1145/1858996.1859013, 10.1145/1858996, DOI 10.1145/1858996]
   Liang GT, 2012, P INT COMP SOFTW APP, P119, DOI 10.1109/COMPSAC.2012.22
   Liu K, 2021, IEEE T SOFTWARE ENG, V47, P165, DOI 10.1109/TSE.2018.2884955
   Liu K, 2019, 2019 IEEE 26TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER), P456, DOI 10.1109/saner.2019.8667970
   Liu L, 2017, COMM COM INF SC, V727, P500, DOI 10.1007/978-981-10-6385-5_42
   Livshits B, 2009, PLDI'09 PROCEEDINGS OF THE 2009 ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P75, DOI 10.1145/1542476.1542485
   Lozoya Rocio Cabrera, 2021, SN Computer Science, V2, P150, DOI DOI 10.1007/S42979-021-00566-Z
   Mangal R, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P462, DOI 10.1145/2786805.2786851
   Mansoor N, 2022, IEEE INT WORK C SO, P219, DOI 10.1109/SCAM55253.2022.00031
   Marcilio D, 2020, J SYST SOFTWARE, V168, DOI 10.1016/j.jss.2020.110671
   Marcilio D, 2019, INT C PROGRAM COMPRE, P209, DOI 10.1109/ICPC.2019.00040
   Medeiros I, 2019, Arxiv, DOI arXiv:1910.06826
   Medeiros I, 2014, WWW'14: PROCEEDINGS OF THE 23RD INTERNATIONAL CONFERENCE ON WORLD WIDE WEB, P63, DOI 10.1145/2566486.2568024
   Muske T., 2013, VALID 2013, The Fifth International Conference on Advances in System Testing and Validation Lifecycle, P13
   Muske T, 2022, IEEE INT WORK C SO, P197, DOI 10.1109/SCAM55253.2022.00029
   Muske T, 2023, ACM COMPUT SURV, V55, DOI 10.1145/3494521
   Muske T, 2020, IEEE INT WORK C SO, P259, DOI 10.1109/SCAM51674.2020.00035
   Muske T, 2018, ISSTA'18: PROCEEDINGS OF THE 27TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P187, DOI 10.1145/3213846.3213850
   Muske T, 2019, LECT NOTES COMPUT SC, V11893, P115, DOI 10.1007/978-3-030-34175-6_7
   Muske T, 2016, IEEE INT WORK C SO, P157, DOI 10.1109/SCAM.2016.25
   Muske T, 2016, PROC INT SYMP SOFTW, P173, DOI 10.1109/ISSRE.2016.45
   Muske T, 2015, 2015 IEEE 26TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING (ISSRE), P270, DOI 10.1109/ISSRE.2015.7381820
   Muske T, 2014, 2014 IEEE INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING WORKSHOPS (ISSREW), P104, DOI 10.1109/ISSREW.2014.85
   Muske T, 2014, PROC IEEE INT CONF S, P569, DOI 10.1109/ICSME.2014.97
   Muske TB, 2013, IEEE INT WORK C SO, P106, DOI 10.1109/SCAM.2013.6648191
   Nadeem Muhammad., 2012, Proceedings of the 50th Annual Southeast Regional Conference, P359, DOI DOI 10.1145/2184512.2184604
   Nagappan N, 2005, PROC INT CONF SOFTW, P580, DOI 10.1145/1062455.1062558
   Nanda M. G., 2010, 2010 32nd International Conference on Software Engineering (ICSE), P99, DOI 10.1145/1810295.1810310
   Ostberg JP, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P629, DOI 10.1109/SANER.2016.63
   owasp, Open Web Application Security Project
   Panichella S, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P161, DOI 10.1109/SANER.2015.7081826
   Park J, 2016, 2016 IEEE/ACM 38TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING COMPANION (ICSE-C), P61, DOI 10.1145/2889160.2889227
   Pereira JD, 2019, LAT-AM SYMP DEP COMP, P1, DOI 10.1109/ladc48089.2019.8995685
   Pigazzini I, 2019, 13TH EUROPEAN CONFERENCE ON SOFTWARE ARCHITECTURE (ECSA 2019), VOL 2, P59, DOI 10.1145/3344948.3344951
   Plösch R, 2009, IEEE ANNU SOFTW ENG, P169, DOI 10.1109/SEW.2008.17
   Post Hendrik, 2008, 2008 23rd IEEE/ACM International Conference on Automated Software Engineering, P188, DOI 10.1109/ASE.2008.29
   Querel LP, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P892, DOI 10.1145/3236024.3264599
   Rahman F, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P424, DOI 10.1145/2568225.2568269
   Ren XX, 2019, ACM T SOFTW ENG METH, V28, DOI 10.1145/3324916
   Reynolds ZP, 2017, 2017 IEEE/ACM 4TH INTERNATIONAL WORKSHOP ON SOFTWARE ENGINEERING RESEARCH AND INDUSTRIAL PRACTICE (SER&IP 2017), P55, DOI 10.1109/SER-IP.2017..20
   Ribeiro A, 2019, PROCEEDINGS OF THE 15TH INTERNATIONAL SYMPOSIUM ON OPEN COLLABORATION (OPENSYM), DOI 10.1145/3306446.3340828
   Ribeiro A, 2018, IFIP ADV INF COMM TE, V525, P90, DOI 10.1007/978-3-319-92375-8_8
   Ribeiro LFR, 2017, KDD'17: PROCEEDINGS OF THE 23RD ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P385, DOI 10.1145/3097983.3098061
   Rival X, 2005, LECT NOTES COMPUT SC, V3780, P347
   Rival X, 2005, LECT NOTES COMPUT SC, V3672, P303
   Runeson P, 2007, PROC INT CONF SOFTW, P499
   Rungta N, 2009, LECT NOTES COMPUT SC, V5394, P23
   Rutar N, 2004, 15TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P245, DOI 10.1109/ISSRE.2004.1
   Ruthruff JR, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P341, DOI 10.1145/1368088.1368135
   Sadowski C, 2018, COMMUN ACM, V61, P58, DOI 10.1145/3188720
   Salvi S, 2015, 2015 ELEVENTH EUROPEAN DEPENDABLE COMPUTING CONFERENCE (EDCC), P13, DOI 10.1109/EDCC.2015.20
   Sherriff MarkS., 2007, The 6th Joint Meeting on European software engineering conference and the ACM SIGSOFT symposium on the foundations of software engineering: companion papers, P565
   Shi K, 2020, J COMPUT LANG, V59, DOI 10.1016/j.cola.2020.100979
   Siavvas M, 2021, LECT NOTES COMPUT SC, V12955, P289, DOI 10.1007/978-3-030-87007-2_21
   Sim SE, 2003, PROC INT CONF SOFTW, P74, DOI 10.1109/ICSE.2003.1201189
   Smith Heckman S., 2013, P 9 INT C PRED MOD S
   Sözer H, 2015, SOFTWARE PRACT EXPER, V45, P1359, DOI 10.1002/spe.2287
   Sui YL, 2020, P ACM PROGRAM LANG, V4, DOI 10.1145/3428301
   Teubner T, 2023, BUS INFORM SYST ENG+, V65, P95, DOI 10.1007/s12599-023-00795-x
   Theeten Bart, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P18, DOI 10.1109/MSR.2019.00014
   Thu Trang Nguyen, 2019, 2019 IEEE/ACM Joint 7th International Workshop on Conducting Empirical Studies in Industry (CESI) and 6th International Workshop on Software Engineering Research and Industrial Practice (SER&IP). Proceedings, P41, DOI 10.1109/CESSER-IP.2019.00015
   Trautsch A, 2020, PROC IEEE INT CONF S, P127, DOI 10.1109/ICSME46990.2020.00022
   Trautsch A, 2020, EMPIR SOFTW ENG, V25, P5137, DOI 10.1007/s10664-020-09880-1
   Tripp O, 2014, CCS'14: PROCEEDINGS OF THE 21ST ACM CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P762, DOI 10.1145/2660267.2660339
   Valdiviezo Manuel, 2014, Programming Languages and Systems. 12th Asian Symposium (APLAS 2014), Proceedings: LNCS 8858, P196, DOI 10.1007/978-3-319-12736-1_11
   Vassallo C, 2020, EMPIR SOFTW ENG, V25, P1419, DOI 10.1007/s10664-019-09750-5
   Vassallo C, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P38, DOI 10.1109/SANER.2018.8330195
   Vetro Antonio, 2011, 15th Annual Conference on Evaluation & Assessment in Software Engineering (EASE 2011), P144, DOI 10.1049/ic.2011.0018
   Vu T. T., 2022, P 14 INT C KNOWL SYS, P1
   Wang H, 2018, LECT NOTES COMPUT SC, V11293, P3, DOI 10.1007/978-3-030-04272-1_1
   Wang JJ, 2022, INT C PROGRAM COMPRE, P516, DOI 10.1145/3524610.3527899
   Wang JJ, 2018, PROCEEDINGS OF THE 12TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT (ESEM 2018), DOI 10.1145/3239235.3239523
   Wang K, 2017, TWENTY-SECOND INTERNATIONAL CONFERENCE ON ARCHITECTURAL SUPPORT FOR PROGRAMMING LANGUAGES AND OPERATING SYSTEMS (ASPLOS XXII), P389, DOI 10.1145/3037697.3037744
   Watson C, 2021, Arxiv, DOI arXiv:2009.06520
   Wedyan F, 2009, SECOND INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION, AND VALIDATION, PROCEEDINGS, P141, DOI 10.1109/ICST.2009.21
   Wei LL, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P672, DOI 10.1145/3106237.3106294
   Wen M, 2020, IEEE T SOFTWARE ENG, V46, P1155, DOI 10.1109/TSE.2018.2876256
   Xypolytos A, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY AND SECURITY COMPANION (QRS-C), P595, DOI 10.1109/QRS-C.2017.110
   Yan M, 2017, P INT COMP SOFTW APP, P103, DOI 10.1109/COMPSAC.2017.201
   Yang JQ, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE (ICSE-SEIP 2019), P51, DOI 10.1109/ICSE-SEIP.2019.00014
   Yang XQ, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-021-09948-6
   Yang XQ, 2021, EXPERT SYST APPL, V167, DOI 10.1016/j.eswa.2020.114134
   Yang YM, 2020, Arxiv, DOI arXiv:2011.14597
   Yedida R, 2023, IEEE T SOFTWARE ENG, V49, P2856, DOI 10.1109/TSE.2023.3234206
   Yüksel U, 2014, 2014 17TH INTERNATIONAL CONFERENCE ON INFORMATION FUSION (FUSION)
   Yüksel U, 2013, PROC IEEE INT CONF S, P532, DOI 10.1109/ICSM.2013.89
   Zampetti F, 2017, IEEE WORK CONF MIN S, P334, DOI 10.1109/MSR.2017.2
   Zekany S, 2016, INT SYMP MICROARCH
   Zhang DL, 2013, ASIA PAC SOFWR ENG, P172, DOI 10.1109/APSEC.2013.33
   Zhang YW, 2020, J SYST SOFTWARE, V166, DOI 10.1016/j.jss.2020.110585
   Zhang YW, 2020, SOFT COMPUT, V24, P1045, DOI 10.1007/s00500-019-03942-3
   Zheng J, 2006, IEEE T SOFTWARE ENG, V32, P240, DOI 10.1109/TSE.2006.38
   Zheng YH, 2021, 2021 IEEE/ACM 43RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE (ICSE-SEIP 2021), P111, DOI 10.1109/ICSE-SEIP52600.2021.00020
   Zhou J, 2012, PROC INT CONF SOFTW, P14, DOI 10.1109/ICSE.2012.6227210
   Zhu J., 2021, Complex, V2021, P1
   Zuo ZQ, 2021, PROCEEDINGS OF THE 42ND ACM SIGPLAN INTERNATIONAL CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION (PLDI '21), P914, DOI 10.1145/3453483.3454085
   Zuo ZQ, 2019, INT PARALL DISTRIB P, P771, DOI 10.1109/IPDPS.2019.00086
   Zuo ZQ, 2019, PROCEEDINGS OF THE FOURTEENTH EUROSYS CONFERENCE 2019 (EUROSYS '19), DOI 10.1145/3302424.3303972
NR 186
TC 0
Z9 0
U1 3
U2 3
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD DEC
PY 2023
VL 49
IS 12
BP 5154
EP 5188
DI 10.1109/TSE.2023.3329667
PG 35
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA CL0K1
UT WOS:001125287400012
DA 2024-07-18
ER

PT J
AU Sharifi, S
   Shin, D
   Briand, LC
   Aschbacher, N
AF Sharifi, Sepehr
   Shin, Donghwan
   Briand, Lionel C.
   Aschbacher, Nathan
TI Identifying the Hazard Boundary of ML-Enabled Autonomous Systems Using
   Cooperative Coevolutionary Search
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Statistics; Sociology; Hazards; Behavioral sciences; Genetic algorithms;
   Monitoring; Probabilistic logic; ML-enabled autonomous system; hazard
   boundary; system safety monitoring; cooperative co-evolutionary search
ID SAFETY VERIFICATION
AB In Machine Learning (ML)-enabled autonomous systems (MLASs), it is essential to identify the hazard boundary of ML Components (MLCs) in the MLAS under analysis. Given that such boundary captures the conditions in terms of MLC behavior and system context that can lead to hazards, it can then be used to, for example, build a safety monitor that can take any predefined fallback mechanisms at runtime when reaching the hazard boundary. However, determining such hazard boundary for an ML component is challenging. This is due to the problem space combining system contexts (i.e., scenarios) and MLC behaviors (i.e., inputs and outputs) being far too large for exhaustive exploration and even to handle using conventional metaheuristics, such as genetic algorithms. Additionally, the high computational cost of simulations required to determine any MLAS safety violations makes the problem even more challenging. Furthermore, it is unrealistic to consider a region in the problem space deterministically safe or unsafe due to the uncontrollable parameters in simulations and the non-linear behaviors of ML models (e.g., deep neural networks) in the MLAS under analysis. To address the challenges, we propose MLCSHE (ML Component Safety Hazard Envelope), a novel method based on a Cooperative Co-Evolutionary Algorithm (CCEA), which aims to tackle a high-dimensional problem by decomposing it into two lower-dimensional search subproblems. Moreover, we take a probabilistic view of safe and unsafe regions and define a novel fitness function to measure the distance from the probabilistic hazard boundary and thus drive the search effectively. We evaluate the effectiveness and efficiency of MLCSHE on a complex Autonomous Vehicle (AV) case study. Our evaluation results show that MLCSHE is significantly more effective and efficient compared to a standard genetic algorithm and random search.
C1 [Sharifi, Sepehr; Briand, Lionel C.] Univ Ottawa, Dept Elect & Comp Engn, Ottawa, ON K1N 5N6, Canada.
   [Shin, Donghwan] Univ Sheffield, Dept Comp Sci, Sheffield S1 4DP, England.
   [Briand, Lionel C.] Univ Luxembourg, SnT Ctr, L-1359 Luxembourg, Luxembourg.
   [Aschbacher, Nathan] Auxon Corp, Portland, OR 97232 USA.
   [Aschbacher, Nathan] Auxon Technol, Ottawa, ON K1Y 4S1, Canada.
C3 University of Ottawa; University of Sheffield; University of Luxembourg
RP Sharifi, S (corresponding author), Univ Ottawa, Dept Elect & Comp Engn, Ottawa, ON K1N 5N6, Canada.
EM s.sharifi@uottawa.ca; d.shin@sheffield.ac.uk; lbriand@uottawa.ca;
   nathan@auxon.io
OI Briand, Lionel/0000-0002-1393-1010; Sharifi, Seyed
   Sepehr/0000-0002-2088-9930
FU Natural Sciences and Research Council of Canada (NSERC)
FX No Statement Available
CR Albee A., 2000, Tech. Rep. JPL D-18709
   [Anonymous], 2006, IEC 61025
   [Anonymous], 2001, BSI IEC 61882
   Antsaklis P. J., 1993, Hybrid Systems, P366
   Asaadi E, 2020, IEEEAAIA DIGIT AVION, DOI 10.1109/dasc50938.2020.9256475
   Banerjee SS, 2018, I C DEPEND SYS NETWO, P586, DOI 10.1109/DSN.2018.00066
   Black J, 2009, I C DEPEND SYS NETWO, P369, DOI 10.1109/DSN.2009.5270316
   Brown LD, 2001, STAT SCI, V16, P101, DOI 10.1214/ss/1009213286
   Bucci A, 2005, GECCO 2005: Genetic and Evolutionary Computation Conference, Vols 1 and 2, P539
   Carla Contributors, 2022, CARLA Python API documentation
   CARLA Team Intel Autonomous Agents Lab the Embodied AI Foundation and AlphaDrive, 2022, CARLA autonomous driving leaderboard
   Dosovitskiy A., 2017, P 1 ANN C ROB LEARN, P1, DOI DOI 10.48550/ARXIV.1711.03938
   Gog I, 2021, IEEE INT CONF ROBOT, P8806, DOI 10.1109/ICRA48506.2021.9561747
   Hoang-Dung Tran, 2019, Formal Methods - The Next 30 Years. Third World Congress, FM 2019. Proceedings. Lecture Notes in Computer Science (LNCS 11800), P670, DOI 10.1007/978-3-030-30942-8_39
   Huang XW, 2020, COMPUT SCI REV, V37, DOI 10.1016/j.cosrev.2020.100270
   Ivanov R, 2019, PROCEEDINGS OF THE 2019 22ND ACM INTERNATIONAL CONFERENCE ON HYBRID SYSTEMS: COMPUTATION AND CONTROL (HSCC '19), P169, DOI 10.1145/3302504.3311806
   Katz G, 2017, LECT NOTES COMPUT SC, V10426, P97, DOI 10.1007/978-3-319-63387-9_5
   Leveson NG, 2011, ENG SYST, P1
   Lomuscio A, 2017, Arxiv, DOI arXiv:1706.07351
   Luke S., 2013, Essentials of Metaheuristics
   Lundgren B, 2021, AI SOC, V36, P405, DOI 10.1007/s00146-020-00964-6
   Ma XL, 2019, IEEE T EVOLUT COMPUT, V23, P421, DOI 10.1109/TEVC.2018.2868770
   MANN HB, 1947, ANN MATH STAT, V18, P50, DOI 10.1214/aoms/1177730491
   Meltz D, 2019, IEEE T INTELL VEHICL, V4, P472, DOI 10.1109/TIV.2019.2919460
   Mirjalili S, 2019, STUD COMPUT INTELL, V780, P43, DOI 10.1007/978-3-319-93025-1_4
   Norden J, 2020, Arxiv, DOI arXiv:1912.03618
   On-Road Automated Driving Committee, 2021, Taxonomy and definitions for terms related to driving automation systems for on-road motor vehicles, DOI [10.4271/J3016_202104, DOI 10.4271/J3016_202104]
   Panait L, 2006, GECCO 2006: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOL 1 AND 2, P345
   Panait L, 2010, EVOL COMPUT, V18, P581, DOI 10.1162/EVCO_a_00004
   Potter MA, 1994, LECT NOTES COMPUT SC, V866, P249
   Prajna S, 2004, LECT NOTES COMPUT SC, V2993, P477
   Ribeiro QADS, 2022, 37TH ANNUAL ACM SYMPOSIUM ON APPLIED COMPUTING, P1299, DOI 10.1145/3477314.3507004
   Riccio V, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P876, DOI 10.1145/3368089.3409730
   Riccio V, 2020, EMPIR SOFTW ENG, V25, P5193, DOI 10.1007/s10664-020-09881-0
   Sharifi S., 2023, MLCSHE replication package, DOI DOI 10.6084/M9.FIGSHARE.21965021
   Sicun Gao, 2013, Automated Deduction - CADE-24. 24th International Conference on Automated Deduction. Proceedings: LNCS 7898, P208, DOI 10.1007/978-3-642-38574-2_14
   Sinha A., 2020, Advances in Neural Information Processing Systems, V33, P6402
   Sjoberg DIK, 2023, IEEE T SOFTWARE ENG, V49, P1374, DOI 10.1109/TSE.2022.3176725
   Skoog MA, 2020, AEROSP CONF PROC, DOI 10.1109/aero47225.2020.9172434
   Tran HD, 2019, FME WORKS FORM, P31, DOI 10.1109/FormaliSE.2019.00012
   Tuncali CE, 2018, DES AUT CON, DOI 10.1145/3195970.3199852
   Ul Haq F, 2022, PROC INT CONF SOFTW, P811, DOI 10.1145/3510003.3510188
   Ul Haq F, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-021-09982-4
   Vargha A, 2000, J EDUC BEHAV STAT, V25, P101, DOI 10.3102/10769986025002101
   Virtanen P, 2020, NAT METHODS, V17, P261, DOI 10.1038/s41592-019-0686-2
   Whitley Darrell., 2019, Handbook of metaheuristics, P245, DOI [10.1007/978-3-319-91086-4_8, DOI 10.1007/978-3-319-91086-4_8, 10.1007/978-3-319-91086-4, DOI 10.1007/978-3-319-91086-4]
   Wilson DR, 1997, J ARTIF INTELL RES, V6, P1, DOI 10.1613/jair.346
   Wright H. K., 2010, P FSE SDP WORKSH FUT, P411, DOI [10.1145/1882362.1882446, DOI 10.1145/1882362.1882446]
   Xin Chen, 2013, Computer Aided Verification. 25th International Conference, CAV 2013. Proceedings. LNCS 8044, P258, DOI 10.1007/978-3-642-39799-8_18
   Yang ZY, 2008, INFORM SCIENCES, V178, P2985, DOI 10.1016/j.ins.2008.02.017
   Zhang JM, 2022, IEEE T SOFTWARE ENG, V48, P1, DOI 10.1109/TSE.2019.2962027
   Zhou X, 2016, ASIA PAC SOFWR ENG, P153, DOI [10.1109/APSEC.2016.031, 10.1109/APSEC.2016.62]
NR 52
TC 0
Z9 0
U1 1
U2 2
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD DEC
PY 2023
VL 49
IS 12
BP 5120
EP 5138
DI 10.1109/TSE.2023.3327575
PG 19
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA CL0K1
UT WOS:001125287400001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Wang, CZ
   Yang, YH
   Gao, CY
   Peng, Y
   Zhang, HY
   Lyu, MR
AF Wang, Chaozheng
   Yang, Yuanhang
   Gao, Cuiyun
   Peng, Yun
   Zhang, Hongyu
   Lyu, Michael R.
TI Prompt Tuning in Code Intelligence: An Experimental Evaluation
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Tuning; Codes; Task analysis; Training; Predictive models; Adaptation
   models; Source coding; Code intelligence; prompt tuning; empirical study
AB Pre-trained models have been shown effective in many code intelligence tasks, such as automatic code summarization and defect prediction. These models are pre-trained on large-scale unlabeled corpus and then fine-tuned in downstream tasks. However, as the inputs to pre-training and downstream tasks are in different forms, it is hard to fully explore the knowledge of pre-trained models. Besides, the performance of fine-tuning strongly relies on the amount of downstream task data, while in practice, the data scarcity scenarios are common. Recent studies in the natural language processing (NLP) field show that prompt tuning, a new paradigm for tuning, alleviates the above issues and achieves promising results in various NLP tasks. In prompt tuning, the prompts inserted during tuning provide task-specific knowledge, which is especially beneficial for tasks with relatively scarce data. In this article, we empirically evaluate the usage and effect of prompt tuning in code intelligence tasks. We conduct prompt tuning on popular pre-trained models CodeBERT and CodeT5 and experiment with four code intelligence tasks including defect prediction, code search, code summarization, and code translation. Our experimental results show that prompt tuning consistently outperforms fine-tuning in all four tasks. In addition, prompt tuning shows great potential in low-resource scenarios, e.g., improving the BLEU scores of fine-tuning by more than 26% on average for code summarization. Our results suggest that instead of fine-tuning, we could adapt prompt tuning for code intelligence tasks to achieve better performance, especially when lacking task-specific data. We also discuss the implications for adapting prompt tuning in code intelligence tasks.
C1 [Wang, Chaozheng; Yang, Yuanhang; Gao, Cuiyun] Harbin Inst Technol, Shenzhen 518055, Peoples R China.
   [Peng, Yun; Lyu, Michael R.] Chinese Univ Hong Kong, Hong Kong 999077, Peoples R China.
   [Zhang, Hongyu] Univ Newcastle, Newcastle, Australia.
   [Zhang, Hongyu] Chongqing Univ, Chongqing 400044, Peoples R China.
C3 Harbin Institute of Technology; Chinese University of Hong Kong;
   University of Newcastle; Chongqing University
RP Gao, CY (corresponding author), Harbin Inst Technol, Shenzhen 518055, Peoples R China.
EM wangchaozheng@stu.hit.edu.cn; ysngkil@gmail.com; gaocuiyun@hit.edu.cn;
   ypeng@cse.cuhk.edu.hk; hyzhang@cqu.edu.cn; lyu@cse.cuhk.edu.hk
RI Peng, Yun/IZQ-0970-2023; Yang, Yuanhang/KDN-2853-2024; Wang,
   Chaozheng/KHT-6430-2024
OI Peng, Yun/0000-0003-1936-5598; Wang, Chaozheng/0000-0002-3935-7328; Lyu,
   Michael/0000-0002-3666-5798
FU National Natural Science Foundation of China [62002084]; Natural Science
   Foundation of Guangdong Province [2023A1515011959]; Shenzhen
   International Cooperation [GJHZ20220913143008015]; Shenzhen Basic
   Research [JCYJ20220531095214031, JCYJ20200109113403826]; Key-Area
   Research and Development Program of Guangdong Province [2020B010165002];
   General Research Fund of the Research Grants Council of the Hong Kong
   Special Administrative Region, China [CUHK 14206921]
FX This work was supported in part by the National Natural Science
   Foundation of China under Project 62002084, in partby the Natural
   Science Foundation of Guangdong Province under Project 2023A1515011959,
   in part by Shenzhen International Cooperation under Project
   GJHZ20220913143008015, in part by Shenzhen Basic Research under General
   Projects JCYJ20220531095214031 and JCYJ20200109113403826, inpart by the
   Key-Area Research and Development Program of Guangdong Province under
   Grant 2020B010165002, and in part by the General Research Fund of the
   Research Grants Council of the Hong Kong Special Administrative Region,
   China, under Grant CUHK 14206921.
CR Ahmad WU, 2021, 2021 CONFERENCE OF THE NORTH AMERICAN CHAPTER OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS: HUMAN LANGUAGE TECHNOLOGIES (NAACL-HLT 2021), P2655
   Lam AN, 2017, INT C PROGRAM COMPRE, P218, DOI 10.1109/ICPC.2017.24
   Brown T., 2020, P ADV NEUR INF PROC, V33, P1877
   Cambronero J, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P964, DOI 10.1145/3338906.3340458
   Chai YT, 2022, PROC INT CONF SOFTW, P487, DOI 10.1145/3510003.3510125
   Chen G., 2022, P 2022 C EMP METH NA, P2612
   Chung HW, 2022, Arxiv, DOI [arXiv:2210.11416, 10.48550/arXiv.2210.11416]
   Clark Kevin, 2019, P INT C LEARN REPR
   Devlin J, 2019, 2019 CONFERENCE OF THE NORTH AMERICAN CHAPTER OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS: HUMAN LANGUAGE TECHNOLOGIES (NAACL HLT 2019), VOL. 1, P4171
   Ding N, 2022, PROCEEDINGS OF THE 60TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (ACL 2022): PROCEEDINGS OF SYSTEM DEMONSTRATIONS, P105
   Elnaggar Ahmed, 2021, arXiv
   Feng ZY, 2020, FINDINGS OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, EMNLP 2020, P1536
   Fu W, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P49, DOI 10.1145/3106237.3106256
   Gao S, 2023, arXiv
   Gao SZ, 2023, ACM T SOFTW ENG METH, V32, DOI 10.1145/3522674
   Gu WC, 2021, NEURAL NETWORKS, V141, P385, DOI 10.1016/j.neunet.2021.04.019
   Gu XD, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P933, DOI 10.1145/3180155.3180167
   Gu YX, 2022, PROCEEDINGS OF THE 60TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (ACL 2022), VOL 1: (LONG PAPERS), P8410
   Guo Daya., 2021, PROC 9 INT C LEARN R
   Guo YH, 2019, PROC CVPR IEEE, P4800, DOI 10.1109/CVPR.2019.00494
   Han X, 2022, AI OPEN, V3, P182, DOI 10.1016/j.aiopen.2022.11.003
   Haviv A, 2021, 16TH CONFERENCE OF THE EUROPEAN CHAPTER OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (EACL 2021), P3618
   He TX, 2021, 16TH CONFERENCE OF THE EUROPEAN CHAPTER OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (EACL 2021), P1121
   Huang Q, 2022, IEEE INT CONF AUTOM, DOI 10.1145/3551349.3556912
   Husain H, 2020, Arxiv, DOI arXiv:1909.09436
   Iyer S, 2016, PROCEEDINGS OF THE 54TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, VOL 1, P2073
   Jiang ZB, 2020, T ASSOC COMPUT LING, V8, P423, DOI 10.1162/tacl_a_00324
   Kanade A, 2020, PR MACH LEARN RES, V119
   Kim S, 2021, PROC INT CONF SOFTW, P150, DOI 10.1109/ICSE43902.2021.00026
   LeClair A, 2020, INT C PROGRAM COMPRE, P184, DOI 10.1145/3387904.3389268
   Lester B, 2021, 2021 CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING (EMNLP 2021), P3045
   Li XLS, 2021, 59TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS AND THE 11TH INTERNATIONAL JOINT CONFERENCE ON NATURAL LANGUAGE PROCESSING (ACL-IJCNLP 2021), VOL 1, P4582
   Li Y, 2019, P ACM PROGRAM LANG, V3, DOI 10.1145/3360588
   Li Z, 2022, IEEE T DEPEND SECURE, V19, P2821, DOI 10.1109/TDSC.2021.3076142
   Liu P., 2021, arXiv
   Liu P, 2016, ARXIV160505101
   Liu S., 2020, P INT C LEARN REPR, P1
   Liu SQ, 2022, IEEE T SOFTWARE ENG, V48, P1800, DOI 10.1109/TSE.2020.3038681
   Liu X, 2022, Arxiv, DOI [arXiv:2110.07602, 10.48550/arXiv.2110.07602]
   Liu YH, 2019, Arxiv, DOI arXiv:1907.11692
   Loshchilov I., 2019, DECOUPLED WEIGHT DEC
   Lu S, 2021, P 35 C NEUR INF PROC, P1
   Mastropaolo A, 2021, PROC INT CONF SOFTW, P336, DOI 10.1109/ICSE43902.2021.00041
   Min SW, 2022, PROCEEDINGS OF THE 60TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (ACL 2022), VOL 1: (LONG PAPERS), P5316
   Pan SJ, 2010, IEEE T KNOWL DATA EN, V22, P1345, DOI 10.1109/TKDE.2009.191
   Papineni K, 2002, 40TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, PROCEEDINGS OF THE CONFERENCE, P311, DOI 10.3115/1073083.1073135
   Petroni F., 2020, Proc. Automated Knowl. Base Construction, P1
   Petroni F, 2019, 2019 CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING AND THE 9TH INTERNATIONAL JOINT CONFERENCE ON NATURAL LANGUAGE PROCESSING (EMNLP-IJCNLP 2019), P2463
   Radford A., 2019, LANGUAGE MODELS ARE
   Radford Alec, 2018, IMPROVING LANGUAGE U, DOI DOI 10.18653/V1/N18-1202
   Raffel C, 2020, J MACH LEARN RES, V21
   Reimers N, 2019, 2019 CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING AND THE 9TH INTERNATIONAL JOINT CONFERENCE ON NATURAL LANGUAGE PROCESSING (EMNLP-IJCNLP 2019), P3982
   Ren S, 2020, Arxiv, DOI [arXiv:2009.10297, 10.48550/arXiv.2009.10297]
   Roziere Baptiste, 2020, processing systems, V33, P20601
   Schick T, 2021, 16TH CONFERENCE OF THE EUROPEAN CHAPTER OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (EACL 2021), P255
   Schick T, 2021, 2021 CONFERENCE OF THE NORTH AMERICAN CHAPTER OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS: HUMAN LANGUAGE TECHNOLOGIES (NAACL-HLT 2021), P2339
   Shen ZQ, 2021, AAAI CONF ARTIF INTE, V35, P9594
   Sun ZS, 2022, PROC INT CONF SOFTW, P1609, DOI 10.1145/3510003.3510160
   Svyatkovskiy A, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P1433, DOI 10.1145/3368089.3417058
   Tsimpoukelli M., 2021, Advances in Neural Information Processing Systems, P200
   Wan Y, 2018, IEEE INT CONF AUTOM, P397, DOI 10.1145/3238147.3238206
   Wang Chaozheng, 2022, ESEC/FSE 2022: Proceedings of the 30th ACM Joint European Software Engineering Conference and Symposium on the Foundations of Software Engineering, P382, DOI 10.1145/3540250.3549113
   Wang WH, 2020, ACM T SOFTW ENG METH, V29, DOI 10.1145/3409331
   Wang Y, 2021, 2021 CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING (EMNLP 2021), P8696
   Wei J., 2021, P INT C LEARN REPR
   Yu Lei, 2017, P 5 INT C LEARN REPR
   Yuan WZ, 2021, ADV NEUR IN, V34
   Zeng ZR, 2022, PROCEEDINGS OF THE 31ST ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, ISSTA 2022, P39, DOI 10.1145/3533767.3534390
   Zhang J, 2019, PROC INT CONF SOFTW, P783, DOI 10.1109/ICSE.2019.00086
   Zhang N., 2021, P INT C LEARN REPR, P1
   Zhong Z, 2021, 2021 CONFERENCE OF THE NORTH AMERICAN CHAPTER OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS: HUMAN LANGUAGE TECHNOLOGIES (NAACL-HLT 2021), P5017
   Zhou J, 2012, PROC INT CONF SOFTW, P14, DOI 10.1109/ICSE.2012.6227210
   Zhou YQ, 2019, ADV NEUR IN, V32
NR 73
TC 2
Z9 2
U1 15
U2 20
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD NOV
PY 2023
VL 49
IS 11
BP 4869
EP 4885
DI 10.1109/TSE.2023.3313881
PG 17
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA Z3ZN2
UT WOS:001111494200006
DA 2024-07-18
ER

PT J
AU Zhang, F
   Wu, QM
   Xuan, BH
   Chen, YQ
   Lin, W
   Poskitt, CM
   Sun, J
   Chen, BB
AF Zhang, Fan
   Wu, Qianmei
   Xuan, Bohan
   Chen, Yuqi
   Lin, Wei
   Poskitt, Christopher M.
   Sun, Jun
   Chen, Binbin
TI Constructing Cyber-Physical System Testing Suites Using Active Sensor
   Fuzzing
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Fuzzing; Benchmark testing; Actuators; Predictive models; Space
   exploration; Data models; Process control; Cyber-physical systems;
   fuzzing; testing; machine learning; metaheuristic optimisation
ID INVARIANTS
AB Cyber-physical systems (CPSs) automating critical public infrastructure face a pervasive threat of attack, motivating research into different types of countermeasures. Assessing the effectiveness of these countermeasures is challenging, however, as benchmarks are difficult to construct manually, existing automated testing solutions often make unrealistic assumptions, and blindly fuzzing is ineffective at finding attacks due to the enormous search spaces and resource requirements. In this work, we propose active sensor fuzzing, a fully automated approach for building test suites without requiring any a prior knowledge about a CPS. Our approach employs active learning techniques. Applied to a real-world water treatment system, our approach manages to find attacks that drive the system into 15 different unsafe states involving water flow, pressure, and tank levels, including nine that were not covered by an established attack benchmark. Furthermore, we successfully generate targeted multi-point attacks which have been long suspected to be possible. We reveal that active sensor fuzzing successfully extends the attack benchmarks generated by our previous work, an ML-guided fuzzing tool, with two more kinds of attacks. Finally, we investigate the impact of active learning on models and the reason that the model trained with active learning is able to discover more attacks.
C1 [Zhang, Fan; Wu, Qianmei; Xuan, Bohan] Zhejiang Univ, Coll Comp Sci & Technol, Hangzhou 310027, Peoples R China.
   [Zhang, Fan] ZJU Hangzhou Global Sci & Technol Innovat Ctr, Hangzhou 311200, Peoples R China.
   [Zhang, Fan] Key Lab Blockchain & Cyberspace Governance Zhejian, Hangzhou 310027, Peoples R China.
   [Zhang, Fan] Zhejiang Univ, Jiaxing Res Inst, Jiaxing 314000, Peoples R China.
   [Zhang, Fan] Zhengzhou Xinda Inst Adv Technol, Zhengzhou 450000, Peoples R China.
   [Chen, Yuqi] ShanghaiTech Univ, Sch Informat Sci & Technol, Shanghai 201210, Peoples R China.
   [Lin, Wei; Chen, Binbin] Singapore Univ Technol & Design, Informat Syst Technol & Design Pillar, Singapore 487372, Singapore.
   [Poskitt, Christopher M.; Sun, Jun] Singapore Management Univ, Sch Comp & Informat Syst, Singapore 178902, Singapore.
C3 Zhejiang University; Zhejiang University; ShanghaiTech University;
   Singapore University of Technology & Design; Singapore Management
   University
RP Chen, BB (corresponding author), Singapore Univ Technol & Design, Informat Syst Technol & Design Pillar, Singapore 487372, Singapore.
EM fanzhang@zju.edu.cn; qianmei@zju.edu.cn; xuanbohan@zju.edu.cn;
   chenyq@shanghaitech.edu.cn; wei_lin@mymail.sutd.edu.sg;
   cposkitt@smu.edu.sg; junsun@smu.edu.sg; binbin_chen@sutd.edu.sg
RI 陈, 彬彬/I-1913-2014; Chen, Yu-qi/AFJ-9468-2022; Chen,
   Binbin/AAA-9619-2022; chen, yuqi/KBB-4137-2024; Lin, Wei/D-3353-2012;
   Poskitt, Christopher M/S-1002-2016
OI Chen, Yu-qi/0000-0003-1900-651X; Chen, Binbin/0000-0002-9584-0082;
   Poskitt, Christopher M/0000-0002-9376-2471; Sun, Jun/0000-0002-3545-1392
FU National Natural Science Foundation of China [62227805, 62072398]; Key
   R&D Program of China [2020AAA0107700]; SUTD-ZJU IDEA Grant
   [SUTD-ZJUVP201901]; Alibaba-Zhejiang University Joint Institute of
   Frontier Technologies; National Key Laboratory of Science and Technology
   on Information System Security [6142111210301]; State Key Laboratory of
   Mathematical Engineering and Advanced Computing; Key Laboratory of
   Cyberspace Situation Awareness of Henan Province [HNTS2022001]
FX This work was supported in part by the National Natural Science
   Foundation of China under Grants 62227805 and 62072398, in part by the
   National Key R & D Program of China under Grant 2020AAA0107700,in part
   by SUTD-ZJU IDEA Grant for Visiting Professors under Grant
   SUTD-ZJUVP201901, in part by Alibaba-Zhejiang University Joint Institute
   of Frontier Technologies, in part by the National Key Laboratory of
   Science and Technology on Information System Security under Grant
   6142111210301, in part by the State Key Laboratory of Mathematical
   Engineering and Advanced Computing, and in part by the Key Laboratory of
   Cyberspace Situation Awareness of Henan Province under Grant
   HNTS2022001.
CR Adepu S, 2021, IEEE T SUST COMPUT, V6, P231, DOI 10.1109/TSUSC.2018.2878597
   Adepu S, 2021, IEEE T DEPEND SECURE, V18, P86, DOI 10.1109/TDSC.2018.2875008
   Adepu S, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY AND SECURITY COMPANION (QRS-C), P533, DOI 10.1109/QRS-C.2017.91
   Adepu S, 2016, ASIA CCS'16: PROCEEDINGS OF THE 11TH ACM ASIA CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P449, DOI 10.1145/2897845.2897855
   Adepu S, 2016, IFIP ADV INF COMM TE, V471, P91, DOI 10.1007/978-3-319-33630-5_7
   Aggarwal E, 2018, CPS-SPC'18: PROCEEDINGS OF THE 2018 WORKSHOP ON CYBER-PHYSICAL SYSTEMS SECURITY AND PRIVACY, P24, DOI 10.1145/3264888.3264893
   Ahmed CM, 2018, PROCEEDINGS OF THE 2018 ACM ASIA CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY (ASIACCS'18), P483, DOI 10.1145/3196494.3196532
   Ahmed CM, 2018, 34TH ANNUAL COMPUTER SECURITY APPLICATIONS CONFERENCE (ACSAC 2018), P566, DOI 10.1145/3274694.3274748
   Altmann A, 2010, BIOINFORMATICS, V26, P1340, DOI 10.1093/bioinformatics/btq134
   Annapureddy Y, 2011, LECT NOTES COMPUT SC, V6605, P254, DOI 10.1007/978-3-642-19835-9_21
   [Anonymous], 2019, Secure Water Treatment (SWaT)
   [Anonymous], American Fuzzy Lop
   [Anonymous], 2018, Cyber-physical systems (CPS)
   [Anonymous], 2016, document number: IR-ALERT-H-16-056-01
   Aoudi W, 2018, PROCEEDINGS OF THE 2018 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY (CCS'18), P817, DOI 10.1145/3243734.3243781
   Buitinck L, 2013, ECML PKDD WORKSH LAN, P108, DOI DOI 10.48550/ARXIV.1309.0238
   Cardenas A. A., 2011, P 6 ACM S INF COMP C, P355, DOI DOI 10.1145/1966913.1966959
   Cárdenas AA, 2014, IEEE T SMART GRID, V5, P906, DOI 10.1109/TSG.2013.2291004
   Castellanos JH, 2018, 34TH ANNUAL COMPUTER SECURITY APPLICATIONS CONFERENCE (ACSAC 2018), P582, DOI 10.1145/3274694.3274745
   Cha SK, 2015, P IEEE S SECUR PRIV, P725, DOI 10.1109/SP.2015.50
   Chen YQ, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P962, DOI 10.1109/ASE.2019.00093
   Chen YQ, 2018, P IEEE S SECUR PRIV, P648, DOI 10.1109/SP.2018.00016
   Chen YQ, 2016, LECT NOTES COMPUT SC, V9995, P155, DOI 10.1007/978-3-319-48989-6_10
   Chen Yuqi, 2020, P 29 ACM SIGSOFT INT, P14, DOI 10.1145/3395363.3397376
   Cheng L, 2017, ANN COMPUT SECURITY, P315, DOI 10.1145/3134600.3134640
   Choi H, 2018, PROCEEDINGS OF THE 2018 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY (CCS'18), P801, DOI 10.1145/3243734.3243752
   Chollet F., KERAS
   Chowdhury SA, 2017, LECT NOTES COMPUT SC, V10107, P46, DOI 10.1007/978-3-319-51738-4_4
   CORTES C, 1995, MACH LEARN, V20, P273, DOI 10.1007/BF00994018
   Donzé A, 2010, LECT NOTES COMPUT SC, V6174, P167, DOI 10.1007/978-3-642-14295-6_17
   Drucker H, 1997, ADV NEUR IN, V9, P155
   Etigowni S, 2016, ANN COMPUT SECURITY, P139, DOI 10.1145/2991079.2991126
   Feng C, 2019, 26TH ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2019), DOI [10.14722/ndss.2019.23265, 10.1109/imbioc.2019.8777851]
   Frehse G., 2011, COMPUTER AIDED VERIF, P379, DOI [DOI 10.1007/978-3-642-22110-1, 10.1007/978-3-642-22110-1_30]
   Gers FA, 2000, NEURAL COMPUT, V12, P2451, DOI 10.1162/089976600300015015
   Ghaeini HR, 2016, CPS-SPC'16: PROCEEDINGS OF THE 2ND ACM WORKSHOP ON CYBER-PHYSICAL SYSTEMS SECURITY & PRIVACY, P101, DOI 10.1145/2994487.2994492
   Giraldo J, 2018, ACM COMPUT SURV, V51, DOI 10.1145/3203245
   Godefroid P, 2017, IEEE INT CONF AUTOM, P50, DOI 10.1109/ASE.2017.8115618
   Goh J, 2018, LECT NOTES COMPUT SC, V10242, P88, DOI 10.1007/978-3-319-71368-7_8
   Goh J, 2017, IEEE HI ASS SYS ENGR, P140, DOI 10.1109/HASE.2017.36
   Goldberg David E, 1989, GENETIC ALGORITHMS S
   Gu QC, 2018, IEEE SECUR PRIV, V16, P49, DOI 10.1109/MSP.2018.3761722
   Harada Y, 2017, INT WORKSH EMPIR ENG, P1, DOI 10.1109/IWESEP.2017.12
   Hasuo Ichiro, 2012, Computer Aided Verification. Proceedings 24th International Conference, CAV 2012, P462, DOI 10.1007/978-3-642-31424-7_34
   He ZC, 2019, Arxiv, DOI arXiv:1806.06496
   Holler Christian, 2012, P 21 USENIX C SEC S, P445
   Huang ZQ, 2018, I C DEPEND SYS NETWO, P151, DOI 10.1109/DSN.2018.00027
   Inoue J, 2017, INT CONF DAT MIN WOR, P1058, DOI 10.1109/ICDMW.2017.149
   Johnson TT, 2016, ACM T EMBED COMPUT S, V15, DOI 10.1145/2723871
   Kang E, 2016, 2016 IEEE/ACM 2ND INTERNATIONAL WORKSHOP ON SOFTWARE ENGINEERING FOR SMART CYBER-PHYSICAL SYSTEMS (SESCPS), P22, DOI [10.1109/SEsCPS.2016.012, 10.1145/2897035.2897041]
   Kneib M, 2018, PROCEEDINGS OF THE 2018 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY (CCS'18), P787, DOI 10.1145/3243734.3243751
   Kong PF, 2016, LECT NOTES COMPUT SC, V9995, P460, DOI 10.1007/978-3-319-48989-6_28
   Kravchik M, 2018, CPS-SPC'18: PROCEEDINGS OF THE 2018 WORKSHOP ON CYBER-PHYSICAL SYSTEMS SECURITY AND PRIVACY, P72, DOI 10.1145/3264888.3264896
   Laarhoven P. J. M., 1987, Simulated Annealing, DOI [10.1007/978-94-015-7744-1, DOI 10.1007/978-94-015-7744-1_2]
   Lanotte R, 2017, P IEEE CSFW, P436, DOI 10.1109/CSF.2017.12
   Leyden J., 2016, Register, V24
   Lin Q, 2018, PROCEEDINGS OF THE 2018 ACM ASIA CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY (ASIACCS'18), P525, DOI 10.1145/3196494.3196546
   Liu Y, 2011, ACM T INFORM SYST SE, V14, DOI 10.1145/1952982.1952995
   Lughofer E, 2017, INFORM SCIENCES, V415, P356, DOI 10.1016/j.ins.2017.06.038
   McLaughlin S, 2014, 21ST ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2014), DOI 10.14722/ndss.2014.23043
   Narayanan V, 2018, CPS-SPC'18: PROCEEDINGS OF THE 2018 WORKSHOP ON CYBER-PHYSICAL SYSTEMS SECURITY AND PRIVACY, P13, DOI 10.1145/3264888.3264894
   Pasqualetti F, 2011, IEEE DECIS CONTR P, P2195
   Quesel JD, 2016, INT J SOFTW TOOLS TE, V18, P67, DOI 10.1007/s10009-015-0367-0
   Rajkumar R, 2010, DES AUT CON, P731
   Ruscito A., pycomm
   sav-smu.github, Supplementary material
   Schneider P, 2018, CPS-SPC'18: PROCEEDINGS OF THE 2018 WORKSHOP ON CYBER-PHYSICAL SYSTEMS SECURITY AND PRIVACY, P1, DOI 10.1145/3264888.3264890
   Shrestha S. L., 2020, P 2 WORKSH TEST DEEP, P1
   Sicun Gao, 2013, Automated Deduction - CADE-24. 24th International Conference on Automated Deduction. Proceedings: LNCS 7898, P208, DOI 10.1007/978-3-642-38574-2_14
   Singapore University of Technology and Design, 2019, iTrust Labs: Datasets
   Sugumar G, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY AND SECURITY COMPANION (QRS-C), P138, DOI 10.1109/QRS-C.2017.29
   Takanen A, 2018, ADV TOP SCI TECH CHI, P1
   Urbina D. I., 2016, P ACM SIGSAC C COMP, P1092
   Vigna Giovanni., 2004, P 11 ACM C COMPUTER, P21
   Wang JY, 2018, LECT NOTES COMPUT SC, V10951, P73, DOI 10.1007/978-3-319-95582-7_5
   Wojtas M., 2020, Advances in Neural Information Processing Systems, V33, P5105
NR 76
TC 0
Z9 0
U1 2
U2 3
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD NOV
PY 2023
VL 49
IS 11
BP 4829
EP 4845
DI 10.1109/TSE.2023.3309330
PG 17
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA Z3ZN2
UT WOS:001111494200003
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Liu, K
   Chen, X
   Chen, CY
   Xie, XF
   Cui, ZQ
AF Liu, Ke
   Chen, Xiang
   Chen, Chunyang
   Xie, Xiaofei
   Cui, Zhanqi
TI Automated Question Title Reformulation by Mining Modification Logs From
   Stack Overflow
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Stack Overflow mining; question post quality assurance; question title
   reformulation; modification logs; deep learning
ID QUERIES
AB In Stack Overflow, developers may not clarify and summarize the critical problems in the question titles due to a lack of domain knowledge or poor writing skills. Previous studies mainly focused on automatically generating the question titles by analyzing the posts' problem descriptions and code snippets. In this study, we aim to improve title quality from the perspective of question title reformulation and propose a novel approach QETRA motivated by the findings of our formative study. Specifically, by mining modification logs from Stack Overflow, we first extract title reformulation pairs containing the original title and the reformulated title. Then we resort to multi-task learning by formalizing title reformulation for each programming language as separate but related tasks. Later we adopt a pre-trained model T5 to automatically learn the title reformulation patterns. Automated evaluation and human study both show the competitiveness of QETRA after compared with six state-of-the-art baselines. Moreover, our ablation study results also confirm that our studied question title reformulation task is more practical than the direct question title generation task for generating high-quality titles. Finally, we develop a browser plugin based on QETRA to facilitate the developers to perform title reformulation. Our study provides a new perspective for studying the quality of post titles and can further generate high-quality titles.
C1 [Liu, Ke; Chen, Xiang] Nantong Univ, Sch Informat Sci & Technol, Nantong 226019, Peoples R China.
   [Chen, Chunyang] Monash Univ, Fac Informat Technol, Clayton, Vic 3800, Australia.
   [Xie, Xiaofei] Singapore Management Univ, Sch Comp & Informat Syst, Singapore 188065, Singapore.
   [Cui, Zhanqi] Beijing Informat Sci & Technol Univ, Comp Sch, Beijing 100101, Peoples R China.
C3 Nantong University; Monash University; Singapore Management University;
   Beijing Information Science & Technology University
RP Chen, X (corresponding author), Nantong Univ, Sch Informat Sci & Technol, Nantong 226019, Peoples R China.
EM aurora.ke.liu@outlook.com; xchencs@ntu.edu.cn; chunyang.chen@monash.edu;
   xfxie@ntu.edu.sg; czq@bistu.edu.cn
OI , Xiaofei/0000-0002-1288-6502; chen, xiang/0000-0002-1180-3891; Chen,
   Chunyang/0000-0003-2011-9618; Cui, Zhanqi/0000-0002-5537-9236
FU National Natural Science Foundation of China [61702041, 61202006];
   Jiangsu Provincial Frontier Leading Technology Fundamental Research
   Project [BK20202001]
FX This work was supported in part by the National Natural
   ScienceFoundation of China under Grants 61702041 and 61202006 and
   JiangsuProvincial Frontier Leading TechnologyFundamental Research
   Project under Grant BK20202001. Recommended for acceptance by T.
   Menzies.(Ke Liuand Xiang Chen are co-first authors.)
CR Abdellatif A, 2020, IEEE WORK CONF MIN S, P174, DOI 10.1145/3379597.3387472
   Ahmad W., 2020, P 58 ANN M ASS COMPU, P4998, DOI 10.18653/v1/2020.acl-main.449
   Allamanis M, 2013, IEEE WORK CONF MIN S, P53, DOI 10.1109/MSR.2013.6624004
   Anderson Ashton, 2012, P 18 ACM SIGKDD INT, DOI DOI 10.1145/2339530.2339665
   Bajaj K, 2014, P 11 WORK C MIN SOFT, P112
   Baltadzhieva A., 2015, P INT C RECENT ADV N, P32
   Bergroth L, 2000, SPIRE 2000: SEVENTH INTERNATIONAL SYMPOSIUM ON STRING PROCESSING AND INFORMATION RETRIEVAL - PROCEEDINGS, P39, DOI 10.1109/SPIRE.2000.878178
   Calefato F, 2018, INFORM SOFTWARE TECH, V94, P186, DOI 10.1016/j.infsof.2017.10.009
   Calefato F, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P430, DOI 10.1109/MSR.2015.56
   Cao KB, 2021, PROC INT CONF SOFTW, P1273, DOI 10.1109/ICSE43902.2021.00116
   Chaparro O, 2019, EMPIR SOFTW ENG, V24, P2947, DOI 10.1007/s10664-018-9672-z
   Chaparro O, 2017, PROC IEEE INT CONF S, P376, DOI 10.1109/ICSME.2017.100
   Chen GB, 2016, IEEE INT CONF AUTOM, P744, DOI 10.1145/2970276.2970317
   Cheng J., 2016, LONG SHORT TERM MEMO, DOI DOI 10.18653/V1/D16-1053
   Chua AYK, 2015, J INF SCI, V41, P720, DOI 10.1177/0165551515590096
   Chunyang Chen, 2018, Proceedings of the ACM on Human-Computer Interaction, V2, DOI 10.1145/3274302
   Cliff N., 2014, Ordinal Methods for Behavioral Data Analysis
   diaeresis>tze Hinrich Schu<spacing, 2008, INTRO INFORM RETRIEV, V39
   Feng Zhangyin, 2020, ARXIV200208155
   Fisher RA, 1922, J R STAT SOC, V85, P87, DOI 10.2307/2340521
   FLEISS JL, 1971, PSYCHOL BULL, V76, P378, DOI 10.1037/h0031619
   Florez JM, 2021, 2021 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2021), P166, DOI 10.1109/SANER50967.2021.00024
   Gao ZP, 2023, ACM T SOFTW ENG METH, V32, DOI 10.1145/3550150
   Gao ZP, 2020, ACM T SOFTW ENG METH, V29, DOI 10.1145/3401026
   Gay G, 2009, PROC IEEE INT CONF S, P351, DOI 10.1109/ICSM.2009.5306315
   Guang Yang, 2021, 2021 8th International Conference on Dependable Systems and Their Applications (DSA), P30, DOI 10.1109/DSA52907.2021.00013
   Haiduc S, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P842, DOI 10.1109/ICSE.2013.6606630
   Haque S, 2022, INT C PROGRAM COMPRE, P36, DOI 10.1145/nnnnnnn.nnnnnnn
   He KM, 2016, PROC CVPR IEEE, P770, DOI 10.1109/CVPR.2016.90
   Hill E, 2009, PROC INT CONF SOFTW, P232, DOI 10.1109/ICSE.2009.5070524
   Howard MJ, 2013, IEEE WORK CONF MIN S, P377, DOI 10.1109/MSR.2013.6624052
   Hu X, 2021, 2021 36TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING ASE 2021, P5, DOI 10.1109/ASE51524.2021.9678552
   Huang Q, 2018, IEEE INT CONF AUTOM, P293, DOI 10.1145/3238147.3238191
   Islam MJ, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P510, DOI 10.1145/3338906.3338955
   Jiang SY, 2017, IEEE INT CONF AUTOM, P135, DOI 10.1109/ASE.2017.8115626
   Jinqiu Yang, 2012, 2012 9th IEEE Working Conference on Mining Software Repositories (MSR 2012), P161, DOI 10.1109/MSR.2012.6224276
   Kudo T, 2018, CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING (EMNLP 2018): PROCEEDINGS OF SYSTEM DEMONSTRATIONS, P66
   Lei Ba J., 2016, arXiv
   Lewis M, 2020, P 58 ANN M ASS COMP, P7871, DOI DOI 10.18653/V1/2020.ACL-MAIN.703
   Li Z, 2023, IEEE T RELIAB, V72, P258, DOI 10.1109/TR.2022.3154773
   Li Z, 2021, J SYST SOFTWARE, V181, DOI 10.1016/j.jss.2021.111036
   Lin CY, 2004, ROUGE: A Package for Automatic Evaluation of Summaries, P74, DOI DOI 10.1253/JCJ.34.1213
   Lin H, 2023, J SYST SOFTWARE, V195, DOI 10.1016/j.jss.2022.111513
   Liu JK, 2022, IEEE T SOFTWARE ENG, V48, P3242, DOI 10.1109/TSE.2021.3086494
   Liu K, 2022, EUR CON SFTWR MTNCE, P577, DOI 10.1109/SANER53432.2022.00075
   Liu XD, 2019, 57TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (ACL 2019), P4487
   Lu ML, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P545, DOI 10.1109/SANER.2015.7081874
   MILLER GA, 1995, COMMUN ACM, V38, P39, DOI 10.1145/219717.219748
   Mondal S., 2021, P 14 INN SOFTW ENG C, P1
   Napoles C, 2016, Arxiv, DOI arXiv:1605.02592
   Nie LM, 2016, IEEE T SERV COMPUT, V9, P771, DOI 10.1109/TSC.2016.2560165
   Papineni K, 2002, 40TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, PROCEEDINGS OF THE CONFERENCE, P311, DOI 10.3115/1073083.1073135
   Ponzanelli L, 2014, PROC IEEE INT CONF S, P541, DOI 10.1109/ICSME.2014.90
   Prechelt L, 1998, LECT NOTES COMPUT SC, V1524, P55
   Raffel C, 2020, J MACH LEARN RES, V21
   Rahman MM, 2019, EMPIR SOFTW ENG, V24, P1869, DOI 10.1007/s10664-018-9671-0
   Rahman MM, 2023, Arxiv, DOI arXiv:2108.09646
   Rahman MM, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P621, DOI 10.1145/3236024.3236065
   Rahman MM, 2018, PROC IEEE INT CONF S, P473, DOI 10.1109/ICSME.2018.00057
   Rahman MM, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P79, DOI 10.1109/SANER.2017.7884611
   Rahman MM, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P349, DOI 10.1109/SANER.2016.80
   Rubei R, 2020, INFORM SOFTWARE TECH, V127, DOI 10.1016/j.infsof.2020.106367
   Sisman B, 2013, IEEE WORK CONF MIN S, P309, DOI 10.1109/MSR.2013.6624044
   Srivastava N, 2014, J MACH LEARN RES, V15, P1929
   Sun ZS, 2022, PROC INT CONF SOFTW, P1609, DOI 10.1145/3510003.3510160
   Trienes Jan, 2019, Advances in Information Retrieval. 41st European Conference on IR Research, ECIR 2019. Proceedings: Lecture Notes in Computer Science (LNCS 11437), P276, DOI 10.1007/978-3-030-15712-8_18
   Vaswani A, 2017, ADV NEUR IN, V30
   Vedantam R, 2015, PROC CVPR IEEE, P4566, DOI 10.1109/CVPR.2015.7299087
   von der Mosel J, 2023, IEEE T SOFTWARE ENG, V49, P1487, DOI 10.1109/TSE.2022.3178469
   Wang S., 2014, ACM/IEEE International Conference on Automated Software Engineering, ASE '14, Vasteras, Sweden - September 15 - 19, 2014, P677
   Wang SW, 2020, IEEE T SOFTWARE ENG, V46, P1024, DOI 10.1109/TSE.2018.2874470
   Wang Y, 2021, 2021 CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING (EMNLP 2021), P8696
   Wei BL, 2020, IEEE INT CONF AUTOM, P349, DOI 10.1145/3324884.3416578
   Wei MS, 2022, PROC INT CONF SOFTW, P376, DOI 10.1145/3510003.3510159
   WILCOXON F, 1945, BIOMETRICS BULL, V1, P80, DOI 10.1093/jee/39.2.269
   Yang G, 2023, J SYST SOFTWARE, V197, DOI 10.1016/j.jss.2022.111577
   Yang G, 2022, EUR CON SFTWR MTNCE, P361, DOI 10.1109/SANER53432.2022.00052
   Yang G, 2021, ASIA PAC SOFWR ENG, P213, DOI 10.1109/APSEC53868.2021.00029
   Yang G, 2022, KNOWL-BASED SYST, V237, DOI 10.1016/j.knosys.2021.107858
   Yang Z, 2021, INT C PROGRAM COMPRE, P1, DOI 10.1109/ICPC52881.2021.00010
   Yao Y, 2015, INFORM SCIENCES, V302, P70, DOI 10.1016/j.ins.2014.12.038
   Young T, 2018, IEEE COMPUT INTELL M, V13, P55, DOI 10.1109/MCI.2018.2840738
   Yu C, 2022, PROC IEEE INT CONF S, P82, DOI 10.1109/ICSME55016.2022.00016
   Zhang Fengji, 2022, Information and Software Technology, DOI 10.1016/j.infsof.2022.106922
   Zhang HX, 2021, IEEE T SOFTWARE ENG, V47, P850, DOI 10.1109/TSE.2019.2906315
   Zhang T, 2022, PROC IEEE INT CONF S, P71, DOI 10.1109/ICSME55016.2022.00015
   Zhang Y, 2022, IEEE T KNOWL DATA EN, V34, P5586, DOI 10.1109/TKDE.2021.3070203
   Zhu WH, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-022-10180-z
NR 88
TC 3
Z9 3
U1 0
U2 1
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD SEPT 1
PY 2023
VL 49
IS 9
BP 4390
EP 4410
DI 10.1109/TSE.2023.3292399
PG 21
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA S4DL9
UT WOS:001070689400006
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Zhang, PC
   Yu, QF
   Xiao, Y
   Dong, H
   Luo, XP
   Wang, X
   Zhang, M
AF Zhang, Pengcheng
   Yu, Qifan
   Xiao, Yan
   Dong, Hai
   Luo, Xiapu
   Wang, Xiao
   Zhang, Meng
TI BiAn: Smart Contract Source Code Obfuscation
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Smart contracts; Codes; Source coding; Security; Complexity theory;
   Intellectual property; Layout; Blockchain; Ethereum; smart contract;
   source code; obfuscation
AB With the rising prominence of smart contracts, security attacks targeting them have increased, posing severe threats to their security and intellectual property rights. Existing simplistic datasets hinder effective vulnerability detection, raising security concerns. To address these challenges, we propose BiAn, a source code level smart contract obfuscation method that generates complex vulnerability test datasets. BiAn protects contracts by obfuscating data flows, control flows, and code layouts, increasing complexity and making it harder for attackers to discover vulnerabilities. Our experiments with buggy contracts showed an average complexity enhancement of approximately 174% after obfuscation. Decompilers Vandal and Gigahorse had total failure rate increments of 38.8% and 40.5% respectively. Obfuscated contracts also decreased vulnerability detection rates in more than 50% of cases for ten widely-used static analysis detection tools.
C1 [Zhang, Pengcheng; Yu, Qifan; Wang, Xiao; Zhang, Meng] Hohai Univ, Coll Comp & Informat, Nanjing 210000, Peoples R China.
   [Xiao, Yan] Sun Yat Sen Univ, Sch Cyber Sci & Technol, Shenzhen 518000, Peoples R China.
   [Dong, Hai] RMIT Univ, Sch Comp Technol, Melbourne, Vic 3000, Australia.
   [Luo, Xiapu] Hong Kong Polytech Univ, Dept Comp, Hong Kong 999077, Peoples R China.
C3 Hohai University; Sun Yat Sen University; Royal Melbourne Institute of
   Technology (RMIT); Hong Kong Polytechnic University
RP Zhang, PC (corresponding author), Hohai Univ, Coll Comp & Informat, Nanjing 210000, Peoples R China.; Xiao, Y (corresponding author), Sun Yat Sen Univ, Sch Cyber Sci & Technol, Shenzhen 518000, Peoples R China.
EM pchzhang@hhu.edu.cn; xiaoy367@mail.sysu.edu.cn; hai.dong@rmit.edu.au;
   csxluo@comp.polyu.edu.hk
RI Dong, Hai/E-9101-2010
OI Dong, Hai/0000-0002-7033-5688; wang, xiao/0009-0000-0195-3186; Zhang,
   Pengcheng/0000-0003-3594-408X
FU National Natural Science Foundation of China [62272145, U21B2016];
   Fundamental Research Funds for the Central Universities of China
   [B220202072, B210202075]; Natural Science Foundation of Jiangsu Province
   [BK20191297]; CloudTech RMIT Green Bitcoin Joint Research
   Program/Laboratory; Cooperative Research Centres Projects (CRC-P)
   funding scheme "Fast and Secure Crypto Payments for E[1]Commerce
   Merchants" [CRCPXIII000145]; Hong KongITF Project [GHP/052/19SZ]
FX This work was supported in part by the National Natural Science
   Foundation of China under Grants 62272145 and U21B2016, inpart by the
   Fundamental Research Funds for the Central Universities of China under
   Grants B220202072 and B210202075, in part by the Natural Science
   Foundation of Jiangsu Province under Grant BK20191297, and in part by
   the CloudTech RMIT Green Bitcoin Joint Research Program/Laboratory and
   the Cooperative Research Centres Projects (CRC-P) funding scheme "Fast
   and Secure Crypto Payments for E[1]Commerce Merchants" under Grant
   CRCPXIII000145 and Hong KongITF Project (No. GHP/052/19SZ)
CR Abdelkrim A., 2007, Statistical Software Components
   Ahire P, 2020, 2020 INTERNATIONAL CONFERENCE ON EMERGING SMART COMPUTING AND INFORMATICS (ESCI), P52, DOI [10.1109/ESCI48226.2020.9167661, 10.1109/esci48226.2020.9167661]
   Albert E., LECT NOTES COMPUT 2
   [Anonymous], 2001, ISC'01: Proceedings of the 4th International Conference on Information Security
   [Anonymous], 1986, Nonlinear Science: Theory and Applications
   Arboit G., 2002, The Fifth International Conference on Electronic Commerce Research (ICECR- 5), P102
   Aucsmith D., 1996, Information Hiding. First International Workshop Proceedings, P317
   Azzopardi S, 2018, LECT NOTES COMPUT SC, V11237, P113, DOI 10.1007/978-3-030-03769-7_8
   BIHAM E, 1991, LECT NOTES COMPUT SC, V547, P532
   Brent L, 2018, Arxiv, DOI arXiv:1809.03981
   Chen HS, 2020, ACM COMPUT SURV, V53, DOI 10.1145/3391195
   Chen T, 2020, Arxiv, DOI arXiv:1703.03994
   Chen YJ, 2022, P ACM PROGRAM LANG, V6, DOI 10.1145/3563308
   Collberg C., 1998, Conference Record of POPL '98: 25th ACM SIGPLAN-SIGACT. Symposium on Principles of Programming Languages, P184, DOI 10.1145/268946.268962
   Collberg C., 1997, TAXONOMY OBFUSCATING
   Devaney R. L., 1987, Acta Applicandae Mathematica, V40, P72
   di Angelo M, 2019, 2019 IEEE INTERNATIONAL CONFERENCE ON DECENTRALIZED APPLICATIONS AND INFRASTRUCTURES (DAPPCON), P69, DOI 10.1109/DAPPCON.2019.00018
   Feist J, 2019, 2019 IEEE/ACM 2ND INTERNATIONAL WORKSHOP ON EMERGING TRENDS IN SOFTWARE ENGINEERING FOR BLOCKCHAIN (WETSEB 2019), P8, DOI 10.1109/WETSEB.2019.00008
   Ferenc R, 2002, PROC IEEE INT CONF S, P172, DOI 10.1109/ICSM.2002.1167764
   Feyzi F, 2018, COMPUTING, V100, P927, DOI 10.1007/s00607-018-0591-z
   Grech N, 2018, P ACM PROGRAM LANG, V2, DOI 10.1145/3276486
   Grech N, 2019, PROC INT CONF SOFTW, P1176, DOI 10.1109/ICSE.2019.00120
   Hunt BR, 2015, CHAOS, V25, DOI 10.1063/1.4922973
   Jialiang Chang, 2019, Formal Methods and Software Engineering. 21st International Conference on Formal Engineering Methods, ICFEM 2019. Proceedings. Lecture Notes in Computer Science (LNCS 11852), P286, DOI 10.1007/978-3-030-32409-4_18
   Jiang B, 2018, IEEE INT CONF AUTOM, P259, DOI 10.1145/3238147.3238177
   Kadel R. P., 2012, P S E SAS USERS GROU, P337
   Kalra S, 2018, 25TH ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2018), DOI 10.14722/ndss.2018.23082
   Kelley K, 2012, PSYCHOL METHODS, V17, P137, DOI 10.1037/a0028086
   Liu JM, 2020, 2020 2ND INTERNATIONAL CONFERENCE ON BLOCKCHAIN TECHNOLOGY (ICBCT 2020), P24, DOI 10.1145/3390566.3391681
   Luu L, 2016, CCS'16: PROCEEDINGS OF THE 2016 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P254, DOI 10.1145/2976749.2978309
   Marchesi L, 2020, PROCEEDINGS OF THE 2020 IEEE 3RD INTERNATIONAL WORKSHOP ON BLOCKCHAIN ORIENTED SOFTWARE ENGINEERING (IWBOSE '20), P9, DOI [10.1109/iwbose50093.2020.9050163, 10.1109/IWBOSE50093.2020.9050163]
   Mavridou A, 2018, LECT NOTES COMPUT SC, V10957, P523, DOI 10.1007/978-3-662-58387-6_28
   McMinn P, 2004, SOFTW TEST VERIF REL, V14, P105, DOI 10.1002/stvr.294
   Mohanta BK, 2018, INT CONF COMPUT
   Mossberg M, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P1186, DOI 10.1109/ASE.2019.00133
   Nakamoto S., 2008, DECENT BUS REV, V21260, DOI https://bitcoin.org/bitcoin.pdf
   Nikolic I, 2018, 34TH ANNUAL COMPUTER SECURITY APPLICATIONS CONFERENCE (ACSAC 2018), P653, DOI 10.1145/3274694.3274743
   Prechtel D, 2019, INT CONF NEW TECHNOL, DOI 10.1109/NTMS.2019.8763848
   Schrittwieser Sebastian, 2011, Information Hiding. 13th International Conference, IH 2011. Revised Selected Papers, P270, DOI 10.1007/978-3-642-24178-9_19
   Shatnawi A, 2018, Arxiv, DOI arXiv:1803.05260
   Su Q, 2012, INT CONF COMP SCI ED, P1093, DOI 10.1109/ICCSE.2012.6295254
   Tikhomirov S, 2018, 2018 IEEE/ACM 1ST INTERNATIONAL WORKSHOP ON EMERGING TRENDS IN SOFTWARE ENGINEERING FOR BLOCKCHAIN (WETSEB), P9, DOI 10.1145/3194113.3194115
   Torres CF, 2019, PROCEEDINGS OF THE 28TH USENIX SECURITY SYMPOSIUM, P1591
   Torres CF, 2018, 34TH ANNUAL COMPUTER SECURITY APPLICATIONS CONFERENCE (ACSAC 2018), P664, DOI 10.1145/3274694.3274737
   Tsankov P, 2018, PROCEEDINGS OF THE 2018 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY (CCS'18), P67, DOI 10.1145/3243734.3243780
   Wang S, 2018, IEEE INT VEH SYM, P108, DOI 10.1109/IVS.2018.8500488
   Wang X, 2017, 2017 INTERNATIONAL CONFERENCE ON CYBER-ENABLED DISTRIBUTED COMPUTING AND KNOWLEDGE DISCOVERY (CYBERC), P155, DOI 10.1109/CyberC.2017.69
   Wang YP, 2019, Arxiv, DOI arXiv:1812.08829
   Wentian Yan, 2020, ISSTA '20: Proceedings of the 29th ACM SIGSOFT International Symposium on Software Testing and Analysis, P553, DOI 10.1145/3395363.3404365
   Wroblewski G., 2022, General method of program code obfuscation
   Xiao D, 2009, CHAOS SOLITON FRACT, V40, P2191, DOI 10.1016/j.chaos.2007.10.009
   Xu DP, 2016, LECT NOTES COMPUT SC, V9866, P323, DOI 10.1007/978-3-319-45871-7_20
   Zambon A., 2012, 2012 12th IEEE Working Conference on Source Code Analysis and Manipulation (SCAM 2012), P114, DOI 10.1109/SCAM.2012.14
   Zhang M, 2020, ASIA PAC SOFWR ENG, P513, DOI 10.1109/APSEC51365.2020.00069
   Zhang PC, 2020, PROC IEEE INT CONF S, P139, DOI 10.1109/ICSME46990.2020.00023
   Zhang XS, 2008, PROCEEDINGS OF THE SECOND INTERNATIONAL CONFERENCE ON INFORMATION SECURITY AND ASSURANCE, P360, DOI 10.1109/ISA.2008.49
   Zhang YY, 2020, PROCEEDINGS OF THE 2020 IEEE 27TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER '20), P23, DOI [10.1109/saner48275.2020.9054825, 10.1109/SANER48275.2020.9054825]
   Zobernig L, 2019, IEEE TRUST BIG, P168, DOI 10.1109/TrustCom/BigDataSE.2019.00031
   Zou WQ, 2021, IEEE T SOFTWARE ENG, V47, P2084, DOI 10.1109/TSE.2019.2942301
NR 59
TC 1
Z9 1
U1 4
U2 8
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD SEPT 1
PY 2023
VL 49
IS 9
BP 4456
EP 4476
DI 10.1109/TSE.2023.3298609
PG 21
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA S4DL9
UT WOS:001070689400010
DA 2024-07-18
ER

PT J
AU Nguyen, TG
   Le-Cong, T
   Kang, HJ
   Widyasari, R
   Yang, CR
   Zhao, ZP
   Xu, BW
   Zhou, JY
   Xia, X
   Hassan, AE
   Le, XBD
   Lo, D
AF Nguyen, Truong Giang
   Le-Cong, Thanh
   Kang, Hong Jin
   Widyasari, Ratnadira
   Yang, Chengran
   Zhao, Zhipeng
   Xu, Bowen
   Zhou, Jiayuan
   Xia, Xin
   Hassan, Ahmed E.
   Le, Xuan-Bach D.
   Lo, David
TI Multi-Granularity Detector for Vulnerability Fixes
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Vulnerability-fixing commit classification; machine learning; deep
   learning; software security
ID SOFTWARE DEFECT PREDICTION; CLASSIFICATION; MODELS
AB With the increasing reliance on Open Source Software, users are exposed to third-party library vulnerabilities. Software Composition Analysis (SCA) tools have been created to alert users of such vulnerabilities. SCA requires the identification of vulnerability-fixing commits. Prior works have proposed methods that can automatically identify such vulnerability-fixing commits. However, identifying such commits is highly challenging, as only a very small minority of commits are vulnerability fixing. Moreover, code changes can be noisy and difficult to analyze. We observe that noise can occur at different levels of detail, making it challenging to detect vulnerability fixes accurately. To address these challenges and boost the effectiveness of prior works, we propose MiDas (Multi-Granularity Detector for Vulnerability Fixes). Unique from prior works, MiDas constructs different neural networks for each level of code change granularity, corresponding to commit-level, file-level, hunk-level, and line-level, following their natural organization and then use an ensemble model combining all base models to output the final prediction. This design allows MiDas to better cope with the noisy and highly-imbalanced nature of vulnerability-fixing commit data. In addition, to reduce the human effort required to inspect code changes, we have designed an effort-aware adjustment for MiDas's outputs based on commit length. The evaluation result demonstrates that MiDas outperforms the current state-of-the-art baseline on both Java and Python-based datasets in terms of AUC by 4.9% and 13.7%, respectively. Furthermore, in terms of two effort-aware metrics, i.e., EffortCost@L and Popt@L, MiDas also performs better than the state-of-the-art baseline up to 28.2% and 15.9% on Java, 60% and 51.4% on Python, respectively.
C1 [Nguyen, Truong Giang; Le-Cong, Thanh; Kang, Hong Jin; Widyasari, Ratnadira; Yang, Chengran; Zhao, Zhipeng; Xu, Bowen; Lo, David] Singapore Management Univ, Sch Comp & Informat Syst, Singapore 188065, Singapore.
   [Zhou, Jiayuan; Xia, Xin] Software Engn Applicat Technol Lab, Shenzhen 518129, Guangdong, Peoples R China.
   [Hassan, Ahmed E.] Queens Univ, Sch Comp, Kingston, ON K7L 3N6, Canada.
   [Le, Xuan-Bach D.] Univ Melbourne, Sch Comp & Informat Syst, Parkville, VIC 3010, Australia.
C3 Singapore Management University; Queens University - Canada; University
   of Melbourne
RP Xu, BW (corresponding author), Singapore Management Univ, Sch Comp & Informat Syst, Singapore 188065, Singapore.
EM nguyentruonggiang71096@gmail.com; congthanh.le@student.unimelb.edu.au;
   hjkang.2018@phdcs.smu.edu.sg; ratnadiraw.2020@phdcs.smu.edu.sg;
   cryang@smu.edu.sg; zpzhao@smu.edu.sg; bowenxu.2017@smu.edu.sg;
   jiayuan.zhou1@huawei.com; xin.xia@acm.org; ahmed@cs.queensu.ca;
   bach.le@unimelb.edu.au; davidlo@smu.edu.sg
RI Xu, Bowen/JRR-9142-2023; Le-Cong, Thanh/ACN-1732-2022; Lo,
   David/A-2493-2012
OI Le-Cong, Thanh/0000-0002-9566-324X; Lo, David/0000-0002-4367-7201; Xu,
   Bowen/0000-0002-1006-8493; Xia, Xin/0000-0002-6302-3256; Yang,
   Chengran/0000-0001-6100-8127; Zhao, Zhipeng/0000-0002-1701-0286
FU National Research Foundation, Singapore; National University of
   Singapore [NSOE-TSS2020-02]; Australian Government [DE220101057];
   Australian Research Council [DE220101057] Funding Source: Australian
   Research Council
FX This work was supported in part by the National Research Foundation,
   Singapore and the National University of Singapore through its National
   Satelliteof Excellence in Trustworthy Software Systems (NSOE-TSS) office
   under the Trustworthy Computing for Secure Smart Nation Grant (TCSSNG)
   under Grant NSOE-TSS2020-02. The work of Xuan-Bach D. Le was supported
   by the Australian Government through the Australian Research Council's
   Discovery Early Career Researcher Award under Grant DE220101057
CR Abdi H, 2010, WIRES COMPUT STAT, V2, P433, DOI 10.1002/wics.101
   [Anonymous], 2020, COD BAS
   [Anonymous], 2018, 291472018 ISO IEC
   [Anonymous], WHY DO ORG TRUST SNY
   [Anonymous], 2023, OUR REPL PACK
   [Anonymous], 2021, CVE 2021 44228 LOG4J
   [Anonymous], 1988, Understanding Research in Second Language Learning
   [Anonymous], 2020, OW DEP CHECK
   Auld T, 2007, IEEE T NEURAL NETWOR, V18, P223, DOI 10.1109/TNN.2006.883010
   Barnett M, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P134, DOI 10.1109/ICSE.2015.35
   Chen FX, 2022, INT C PROGRAM COMPRE, P401, DOI 10.1145/3524610.3527917
   Chen Y, 2020, IEEE WORK CONF MIN S, P32, DOI 10.1145/3379597.3387461
   Chinthanet B, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-021-09951-x
   Dai JR, 2020, PROCEEDINGS OF THE 29TH USENIX SECURITY SYMPOSIUM, P1147
   Decan A, 2018, IEEE WORK CONF MIN S, P181, DOI 10.1145/3196398.3196401
   Dong XB, 2020, FRONT COMPUT SCI-CHI, V14, P241, DOI 10.1007/s11704-019-8208-z
   Duan RA, 2019, 26TH ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2019), DOI 10.14722/ndss.2019.23126
   Falleri Jean-Remy, 2014, P 29 ACM IEEE INT C, P313
   Fan YR, 2021, PROC INT CONF SOFTW, P1174, DOI 10.1109/ICSE43902.2021.00108
   Feng Zhangyin, 2020, ARXIV200208155
   Goel Lipika, 2020, Micro-Electronics and Telecommunication Engineering. Proceedings of 3rd ICMETE 2019. Lecture Notes in Networks and Systems (LNNS 106), P307, DOI 10.1007/978-981-15-2329-8_31
   Gonzalez-Barahona J. M., 2017, IFIP Advances in Information and Communication Technology, P182
   Graves A, 2005, NEURAL NETWORKS, V18, P602, DOI 10.1016/j.neunet.2005.06.042
   Guo HX, 2017, EXPERT SYST APPL, V73, P220, DOI 10.1016/j.eswa.2016.12.035
   Han J, 1995, LECT NOTES COMPUT SC, V930, P195
   HANLEY JA, 1982, RADIOLOGY, V143, P29, DOI 10.1148/radiology.143.1.7063747
   Hoang T, 2020, PROC INT CONF SOFTW, P518, DOI 10.1145/3377811.3380361
   Hochreiter S, 1997, NEURAL COMPUT, V9, P1735, DOI [10.1162/neco.1997.9.1.1, 10.1007/978-3-642-24797-2]
   Householder A. D., CERT GUIDE COORDINAT
   Huang Q, 2019, EMPIR SOFTW ENG, V24, P2823, DOI 10.1007/s10664-018-9661-2
   Husain H, 2020, Arxiv, DOI arXiv:1909.09436
   Ihara A., 2017, Understanding when to adopt a library: A case study on ASF projects, P128
   Imtiaz N, 2023, IEEE T SOFTWARE ENG, V49, P1540, DOI 10.1109/TSE.2022.3181010
   Jesse K, 2021, PROCEEDINGS OF THE 29TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '21), P1483, DOI 10.1145/3468264.3473135
   Kalchbrenner N, 2014, Arxiv, DOI arXiv:1404.2188
   Kamei Y, 2013, IEEE T SOFTWARE ENG, V39, P757, DOI 10.1109/TSE.2012.70
   Kang HJ, 2022, PROCEEDINGS OF THE 31ST ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, ISSTA 2022, P276, DOI 10.1145/3533767.3534398
   Kannan SS, 2010, KNOWL-BASED SYST, V23, P580, DOI 10.1016/j.knosys.2010.03.016
   Kazerounian M, 2021, P ACM PROGRAM LANG, V5, DOI 10.1145/3485483
   Kharkar A, 2022, PROC INT CONF SOFTW, P1307, DOI 10.1145/3510003.3510153
   Khoshgoftaar TM, 2015, PROC INT C TOOLS ART, P705, DOI 10.1109/ICTAI.2015.106
   Kingma D. P., 2014, arXiv
   Kochhar PS, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P560, DOI 10.1109/SANER.2015.7081877
   Kondo M, 2019, EMPIR SOFTW ENG, V24, P1925, DOI 10.1007/s10664-018-9679-5
   Kula Raula Gaikovina, 2018, Empirical Software Engineering, V23, P384, DOI 10.1007/s10664-017-9521-5
   Lawrence S, 1997, IEEE T NEURAL NETWOR, V8, P98, DOI 10.1109/72.554195
   Le T. H., 2021, ARXIV
   Le XBD, 2019, PROC INT CONF SOFTW, P524, DOI 10.1109/ICSE.2019.00064
   Le-cong Thanh, 2022, ESEC/FSE 2022: Proceedings of the 30th ACM Joint European Software Engineering Conference and Symposium on the Foundations of Software Engineering, P520, DOI 10.1145/3540250.3549175
   Lecun Y, 1998, P IEEE, V86, P2278, DOI 10.1109/5.726791
   Lessmann S, 2008, IEEE T SOFTWARE ENG, V34, P485, DOI 10.1109/TSE.2008.35
   Li W, 2009, COMPUT NETW, V53, P790, DOI 10.1016/j.comnet.2008.11.016
   Li Y, 2021, PROC INT CONF SOFTW, P661, DOI 10.1109/ICSE43902.2021.00067
   Lin B, 2022, ACM T SOFTW ENG METH, V31, DOI 10.1145/3505247
   Liu C., 2022, arXiv
   Log4shell, 2021, RCE 0 DAY EXPL FOUND
   Lyu Y., 2023, P IEEE ACM 45 INT C
   Mashhadi E, 2021, IEEE WORK CONF MIN S, P505, DOI 10.1109/MSR52588.2021.00063
   Massoudi Massoud, 2021, Proceedings of the Third International Conference on Intelligent Communication Technologies and Virtual Mobile Networks (ICICV 2020), P884, DOI 10.1109/ICICV50876.2021.9388622
   Mende T, 2010, EUR CON SFTWR MTNCE, P107, DOI 10.1109/CSMR.2010.18
   Nair Vinod, 2010, INT C INT C MACHINE, P807
   Nguyen H.-L., 2012, PROC PACIFIC ASIA C, P1
   Nguyen Truong Giang, 2022, ESEC/FSE 2022: Proceedings of the 30th ACM Joint European Software Engineering Conference and Symposium on the Foundations of Software Engineering, P1726, DOI 10.1145/3540250.3558936
   Nguyen-Truong G, 2022, EUR CON SFTWR MTNCE, P51, DOI 10.1109/SANER53432.2022.00018
   Ohlsson N, 1996, IEEE T SOFTWARE ENG, V22, P886, DOI 10.1109/32.553637
   Pandey SK, 2020, IET SOFTW, V14, P768, DOI 10.1049/iet-sen.2020.0119
   Pendlebury F, 2019, PROCEEDINGS OF THE 28TH USENIX SECURITY SYMPOSIUM, P729
   Perl H, 2015, CCS'15: PROCEEDINGS OF THE 22ND ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P426, DOI 10.1145/2810103.2813604
   Pett M.A., 1997, Nonparametric Statistics for Health Care Research
   Polikar R, 2012, ENSEMBLE MACHINE LEARNING: METHODS AND APPLICATIONS, P1, DOI 10.1007/978-1-4419-9326-7_1
   Ponta Serena Elisa, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P383, DOI 10.1109/MSR.2019.00064
   Ponta SE, 2020, EMPIR SOFTW ENG, V25, P3175, DOI 10.1007/s10664-020-09830-x
   Pradel M, 2018, P ACM PROGRAM LANG, V2, DOI 10.1145/3276517
   Pradel M, 2022, COMMUN ACM, V65, P86, DOI 10.1145/3460348
   Qi YH, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P254, DOI 10.1145/2568225.2568254
   Le QL, 2022, P ACM PROGRAM LANG, V6, DOI 10.1145/3527325
   Ramsauer Ralf, 2020, CCSW'20: Proceedings of the 2020 SIGSAC Conference on Cloud Computing Security Workshop, P147, DOI 10.1145/3411495.3421360
   Romano D., 2011, 2011 IEEE 27th International Conference on Software Maintenance, P303, DOI 10.1109/ICSM.2011.6080797
   Sabetta A, 2018, PROC IEEE INT CONF S, P579, DOI 10.1109/ICSME.2018.00058
   Shu R, 2017, PROCEEDINGS OF THE SEVENTH ACM CONFERENCE ON DATA AND APPLICATION SECURITY AND PRIVACY (CODASPY'17), P269, DOI 10.1145/3029806.3029832
   Sun ZY, 2019, AAAI CONF ARTIF INTE, P7055
   Thong Hoang, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P34, DOI 10.1109/MSR.2019.00016
   Utture A, 2022, PROC INT CONF SOFTW, P2043, DOI 10.1145/3510003.3510166
   Vaswani A, 2017, ADV NEUR IN, V30
   Vulnerability database, 2021, VULN DAT SEC YOUR OP
   Wilcoxon F., 1992, Individual comparisons by ranking methods
   Williams J., 2012, The unfortunate reality of insecure libraries, P1
   WOLD S, 1987, CHEMOMETR INTELL LAB, V2, P37, DOI 10.1016/0169-7439(87)80084-9
   Wu B., IN PRESS, DOI [10.1109/TDSC.2022.3192631, DOI 10.1109/TDSC.2022.3192631]
   Xia CS, 2022, PROCEEDINGS OF THE 30TH ACM JOINT MEETING EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, ESEC/FSE 2022, P959, DOI 10.1145/3540250.3549101
   Xu BW, 2022, IEEE T SOFTWARE ENG, V48, P3423, DOI 10.1109/TSE.2021.3093761
   Yan M, 2022, IEEE T SOFTWARE ENG, V48, P82, DOI 10.1109/TSE.2020.2978819
   Yan M, 2019, EMPIR SOFTW ENG, V24, P2171, DOI 10.1007/s10664-019-09688-8
   Yang YB, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P157, DOI 10.1145/2950290.2950353
   Yang Z, 2022, PROC INT CONF SOFTW, P1482, DOI 10.1145/3510003.3510146
   Yatish S, 2019, PROC INT CONF SOFTW, P654, DOI 10.1109/ICSE.2019.00075
   Ye H, 2022, IEEE T SOFTWARE ENG, V48, P2920, DOI 10.1109/TSE.2021.3071750
   Yu L, 2003, P 20 INT C MACH LEAR, P856, DOI DOI 10.5555/3041838.3041946
   Yu X, 2019, 2019 IEEE 26TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER), P298, DOI [10.1109/SANER.2019.8668033, 10.1109/saner.2019.8668033]
   Zeng ZR, 2021, ISSTA '21: PROCEEDINGS OF THE 30TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P427, DOI 10.1145/3460319.3464819
   Zerouali A, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-020-09908-6
   Zhong H, 2022, IEEE T SOFTWARE ENG, V48, P571, DOI 10.1109/TSE.2020.2996975
   Zhong H, 2017, IEEE INT CONF AUTOM, P671, DOI 10.1109/ASE.2017.8115677
   Zhou JY, 2021, 2021 36TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING ASE 2021, P705, DOI 10.1109/ASE51524.2021.9678720
   Zhou YQ, 2022, ACM T SOFTW ENG METH, V31, DOI 10.1145/3468854
   Zhou YQ, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P914, DOI 10.1145/3106237.3117771
NR 106
TC 2
Z9 2
U1 2
U2 3
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD AUG
PY 2023
VL 49
IS 8
BP 4035
EP 4057
DI 10.1109/TSE.2023.3281275
PG 23
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA P3WA9
UT WOS:001049968200006
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Le-Cong, T
   Luong, DM
   Le, XBD
   Lo, DV
   Tran, NH
   Quang-Huy, B
   Huynh, QT
AF Le-Cong, Thanh
   Luong, Duc-Minh
   Le, Xuan Bach D.
   Lo, David
   Tran, Nhat-Hoa
   Quang-Huy, Bui
   Huynh, Quyet-Thang
TI Invalidator: Automated Patch Correctness Assessment Via Semantic and
   Syntactic Reasoning
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Index Terms-Automated patch correctness assessment; automated program
   repair; code representations; overfitting problem; program invariants
ID GENERATION; REPAIR
AB Automated program repair (APR) faces the challenge of test overfitting, where generated patches pass validation tests but fail to generalize. Existing methods for patch assessment involve generating new tests or manual inspection, which can be time-consuming or biased. In this paper, we propose a novel technique, Invalidator, to automatically assess the correctness of APR-generated patches via semantic and syntactic reasoning. Invalidator leverages program invariants to reason about program semantics while also capturing program syntax through language semantics learned from a large code corpus using a pre-trained language model. Given a buggy program and the developer-patched program, Invalidator infers likely invariants on both programs. Then, Invalidator determines that an APR-generated patch overfits if: (1) it violates correct specifications or (2) maintains erroneous behaviors from the original buggy program. In case our approach fails to determine an overfitting patch based on invariants, Invalidator utilizes a trained model from labeled patches to assess patch correctness based on program syntax. The benefit of Invalidator is threefold. First, Invalidator leverages both semantic and syntactic reasoning to enhance its discriminative capability. Second, Invalidator does not require new test cases to be generated, but instead only relies on the current test suite and uses invariant inference to generalize program behaviors. Third, Invalidator is fully automated. Experimental results demonstrate that Invalidator outperforms existing methods in terms of Accuracy and F-measure, correctly identifying 79% of overfitting patches and detecting 23% more overfitting patches than the best baseline.
C1 [Le-Cong, Thanh; Le, Xuan Bach D.] Univ Melbourne, Sch Comp & Informat Syst, Parkville, Vic 3010, Australia.
   [Luong, Duc-Minh; Tran, Nhat-Hoa; Quang-Huy, Bui; Huynh, Quyet-Thang] Hanoi Univ Sci & Technol, Sch Informat & Commun Technol, Hanoi 100000, Vietnam.
   [Lo, David] Singapore Management Univ, Sch Comp & Informat Syst, Singapore 188065, Singapore.
C3 University of Melbourne; Hanoi University of Science & Technology
   (HUST); Singapore Management University
RP Huynh, QT (corresponding author), Hanoi Univ Sci & Technol, Sch Informat & Commun Technol, Hanoi 100000, Vietnam.
EM congthanh.le@student.unimelb.edu.au; minh.ld176821@sis.hust.edu.vn;
   bach.le@unimelb.edu.au; davidlo@smu.edu.sg; hoant@soict.hust.edu.vn;
   20202517M@student.hust.edu.vn; thanghq@soict.hust.edu.vn
RI Le-Cong, Thanh/ACN-1732-2022; Lo, David F/IYT-3538-2023; Lo,
   David/A-2493-2012
OI Le-Cong, Thanh/0000-0002-9566-324X; Lo, David F/0000-0003-2408-9735; Lo,
   David/0000-0002-4367-7201
FU Australian Research Council's Discovery Early Career Researcher Award
   [DE220101057]; Australian Research Council [DE220101057] Funding Source:
   Australian Research Council
FX This work was supported by the Australian Research Council's Discovery
   Early Career Researcher Award under Grant DE220101057
CR Chen ZM, 2021, IEEE T SOFTWARE ENG, V47, P1943, DOI 10.1109/TSE.2019.2940179
   de Moura L, 2008, LECT NOTES COMPUT SC, V4963, P337, DOI 10.1007/978-3-540-78800-3_24
   Devlin J, 2019, 2019 CONFERENCE OF THE NORTH AMERICAN CHAPTER OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS: HUMAN LANGUAGE TECHNOLOGIES (NAACL HLT 2019), VOL. 1, P4171
   Ding ZY, 2019, 2019 IEEE/ACM 6TH INTERNATIONAL WORKSHOP ON GENETIC IMPROVEMENT (GI@ICSE 2019), P2, DOI 10.1109/GI.2019.00011
   Ernst MD, 2007, SCI COMPUT PROGRAM, V69, P35, DOI 10.1016/j.scico.2007.01.015
   Feng Zhangyin, 2020, ARXIV200208155
   Fraser Gordon, 2011, PROC 19 ACM SIGSOFT, P416, DOI 10.1145/2025113.2025179
   Gopinath D, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P809, DOI 10.1109/ASE.2019.00079
   Hoang T, 2020, PROC INT CONF SOFTW, P518, DOI 10.1145/3377811.3380361
   Ishimwe D, 2021, P ACM PROGRAM LANG, V5, DOI 10.1145/3485515
   Jiang JJ, 2018, ISSTA'18: PROCEEDINGS OF THE 27TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P298, DOI 10.1145/3213846.3213871
   Just R, 2014, P 2014 INT S SOFTW T, P437, DOI DOI 10.1145/2610384.2628055
   Kim D, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P802, DOI 10.1109/ICSE.2013.6606626
   Koyuncu A, 2020, EMPIR SOFTW ENG, V25, P1980, DOI 10.1007/s10664-019-09780-z
   Kozen D. C., 1977, AUTOMATA COMPUTABILI, P245
   Kui Liu, 2019, 2019 IEEE 26th International Conference on Software Analysis, Evolution and Reengineering (SANER). Proceedings, P1, DOI 10.1109/SANER.2019.8667970
   Le Goues C, 2012, IEEE T SOFTWARE ENG, V38, P54, DOI 10.1109/TSE.2011.104
   Le T.-D. B., 2016, P 25 INT S SOFTW TES, P177, DOI DOI 10.1145/2931037.2931049
   Le TC, 2020, P ACM PROGRAM LANG, V4, DOI 10.1145/3428257
   Le XBD, 2018, EMPIR SOFTW ENG, V23, P3007, DOI 10.1007/s10664-017-9577-2
   Le XBD, 2021, PROC INT SYMP SOFTW, P162, DOI 10.1109/ISSRE52982.2021.00028
   Le XBD, 2019, PROC INT CONF SOFTW, P524, DOI 10.1109/ICSE.2019.00064
   Le XBD, 2017, PROCEEDINGS OF THE 26TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA'17), P376, DOI 10.1145/3092703.3098225
   Le XBD, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P593, DOI 10.1145/3106237.3106309
   Le XBD, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P213, DOI 10.1109/SANER.2016.76
   Le-cong Thanh, 2022, ESEC/FSE 2022: Proceedings of the 30th ACM Joint European Software Engineering Conference and Symposium on the Foundations of Software Engineering, P520, DOI 10.1145/3540250.3549175
   Li Y, 2020, PROC INT CONF SOFTW, P602, DOI 10.1145/3377811.3380345
   Lin B, 2022, ACM T SOFTW ENG METH, V31, DOI 10.1145/3505247
   Liu K, 2020, PROC INT CONF SOFTW, P615, DOI 10.1145/3377811.3380338
   Liu K, 2019, PROCEEDINGS OF THE 28TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA '19), P31, DOI 10.1145/3293882.3330577
   Liu K, 2018, ASIA PAC SOFWR ENG, P658, DOI 10.1109/APSEC.2018.00085
   Lo D, 2009, KDD-09: 15TH ACM SIGKDD CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P557
   Long F, 2016, ACM SIGPLAN NOTICES, V51, P298, DOI 10.1145/2914770.2837617
   Lutellier Thibaud, 2020, ISSTA '20: Proceedings of the 29th ACM SIGSOFT International Symposium on Software Testing and Analysis, P101, DOI 10.1145/3395363.3397369
   Mahajan S, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P140, DOI 10.1145/3180155.3180262
   Marginean A, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE (ICSE-SEIP 2019), P269, DOI 10.1109/ICSE-SEIP.2019.00039
   Martinez M, 2017, EMPIR SOFTW ENG, V22, P1936, DOI 10.1007/s10664-016-9470-4
   Mechtaev S, 2016, PROC INT CONF SOFTW, P691, DOI 10.1145/2884781.2884807
   Monperrus M, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P234, DOI 10.1145/2568225.2568324
   Nguyen Truong Giang, 2022, ESEC/FSE 2022: Proceedings of the 30th ACM Joint European Software Engineering Conference and Symposium on the Foundations of Software Engineering, P1726, DOI 10.1145/3540250.3558936
   Nilizadeh A, 2021, IEEE INT CONF SOFTW, P229, DOI 10.1109/ICST49551.2021.00033
   Pacheco C., 2007, OOPSLA 2007 COMPANIO, P815
   Qi YH, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P254, DOI 10.1145/2568225.2568254
   Qi Zichao, 2015, P 2015 INT S SOFTW T, P24, DOI DOI 10.1145/2771783.2771791
   Sagdeo P, 2013, IEEE INT CONF AUTOM, P634, DOI 10.1109/ASE.2013.6693125
   Shamshiri S, 2015, IEEE INT CONF AUTOM, P201, DOI 10.1109/ASE.2015.86
   Smith EK, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P532, DOI 10.1145/2786805.2786825
   Tan SH, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P727, DOI 10.1145/2950290.2950295
   Tan SH, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P471, DOI 10.1109/ICSE.2015.65
   Tao YD, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P64, DOI 10.1145/2635868.2635873
   Thanh LC, 2021, PROC INT SYMP SOFTW, P173, DOI 10.1109/ISSRE52982.2021.00029
   Nguyen TD, 2022, 2022 ACM/IEEE 44TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: NEW IDEAS AND EMERGING RESULTS (ICSE-NIER 2022), P116, DOI [10.1145/3510455.3512780, 10.1109/ICSE-NIER55298.2022.9793533]
   Nguyen T, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P605, DOI 10.1145/3106237.3106281
   Tian HY, 2020, IEEE INT CONF AUTOM, P981, DOI 10.1145/3324884.3416532
   Tian Y, 2012, PROC INT CONF SOFTW, P386, DOI 10.1109/ICSE.2012.6227176
   Vaswani A, 2017, ADV NEUR IN, V30
   Wang SW, 2020, IEEE INT CONF AUTOM, P968, DOI 10.1145/3324884.3416590
   Wang SM, 2017, DESTECH TRANS SOC, P1
   Weimer W, 2013, IEEE INT CONF AUTOM, P356, DOI 10.1109/ASE.2013.6693094
   Weimer W, 2009, PROC INT CONF SOFTW, P364, DOI 10.1109/ICSE.2009.5070536
   Wen M, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1, DOI 10.1145/3180155.3180233
   Xia CS, 2022, PROCEEDINGS OF THE 30TH ACM JOINT MEETING EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, ESEC/FSE 2022, P959, DOI 10.1145/3540250.3549101
   Xin Q, 2017, PROCEEDINGS OF THE 26TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA'17), P226, DOI 10.1145/3092703.3092718
   Xiong YF, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P789, DOI 10.1145/3180155.3180182
   Xiong YF, 2017, PROC INT CONF SOFTW, P416, DOI 10.1109/ICSE.2017.45
   Xuan JF, 2017, IEEE T SOFTWARE ENG, V43, P34, DOI 10.1109/TSE.2016.2560811
   Yang B, 2020, PROCEEDINGS OF THE 2020 IEEE 2ND INTERNATIONAL WORKSHOP ON INTELLIGENT BUG FIXING (IBF '20), P1, DOI [10.1109/ibf50092.2020.9034821, 10.1109/IBF50092.2020.9034821]
   Yang JQ, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P831, DOI 10.1145/3106237.3106274
   Ye H, 2022, Arxiv, DOI arXiv:2203.12755
   Ye H, 2022, PROC INT CONF SOFTW, P1506, DOI 10.1145/3510003.3510222
   Ye H, 2022, IEEE T SOFTWARE ENG, V48, P2920, DOI 10.1109/TSE.2021.3071750
   Ye H, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-020-09920-w
   Ye H, 2019, 2019 IEEE 1ST INTERNATIONAL WORKSHOP ON INTELLIGENT BUG FIXING (IBF '19), P1, DOI [10.1109/ibf.2019.8665475, 10.1109/icnsurv.2019.8735415, 10.1109/IBF.2019.8665475]
   Yu ZX, 2019, EMPIR SOFTW ENG, V24, P33, DOI 10.1007/s10664-018-9619-4
   Yuan Tian, 2012, 2012 19th Working Conference on Reverse Engineering (WCRE), P215, DOI 10.1109/WCRE.2012.31
   Zhou JY, 2021, 2021 36TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING ASE 2021, P705, DOI 10.1109/ASE51524.2021.9678720
   Zhou X, 2023, Arxiv, DOI arXiv:2303.00202
   Zhou X, 2021, PROC IEEE INT CONF S, P425, DOI 10.1109/ICSME52107.2021.00044
NR 78
TC 0
Z9 0
U1 0
U2 2
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUN 1
PY 2023
VL 49
IS 6
BP 3411
EP 3429
DI 10.1109/TSE.2023.3255177
PG 19
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA J9KW5
UT WOS:001012752300005
OA Green Accepted, Green Submitted
DA 2024-07-18
ER

PT J
AU Hageman, K
   Feal, A
   Gamba, J
   Girish, A
   Bleier, J
   Lindorfer, M
   Tapiador, J
   Vallina-Rodriguez, N
AF Hageman, Kaspar
   Feal, Alvaro
   Gamba, Julien
   Girish, Aniketh
   Bleier, Jakob
   Lindorfer, Martina
   Tapiador, Juan
   Vallina-Rodriguez, Narseo
TI Mixed Signals: Analyzing Software Attribution Challenges in the Android
   Ecosystem
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Operating systems; Software; Internet; Metadata; Ecosystems; Companies;
   Web and internet services; Android; attribution; attribution graph;
   mobile apps
AB The ability to identify the author responsible for a given software object is critical for many research studies and for enhancing software transparency and accountability. However, as opposed to other application markets like Apple's iOS App Store, attribution in the Android ecosystem is known to be hard. Prior research has leveraged market metadata and signing certificates to identify software authors without questioning the validity and accuracy of these attribution signals. However, Android application (app) authors can, either intentionally or by mistake, hide their true identity due to: (1) the lack of policy enforcement by markets to ensure the accuracy and correctness of the information disclosed by developers in their market profiles during the app release process, and (2) the use of self-signed certificates for signing apps instead of certificates issued by trusted CAs. In this paper, we perform the first empirical analysis of the availability, volatility and overall aptness of publicly available market and app metadata for author attribution in Android markets. To that end, we analyze a dataset of over 2.5 million market entries and apps extracted from five Android markets for over two years. Our results show that widely used attribution signals are often missing from market profiles and that they change over time. We also invalidate the general belief about the validity of signing certificates for author attribution. For instance, we find that apps from different authors share signing certificates due to the proliferation of app building frameworks and software factories. Finally, we introduce the concept of an attribution graph and we apply it to evaluate the validity of existing attribution signals on the Google Play Store. Our results confirm that the lack of control over publicly available signals can confuse automatic attribution processes.
C1 [Hageman, Kaspar] Aarhus Univ, Dept Elect & Comp Engn, DK-8000 Aarhus, Denmark.
   [Feal, Alvaro; Gamba, Julien; Girish, Aniketh; Vallina-Rodriguez, Narseo] IMDEA Networks Inst, Madrid 28918, Spain.
   [Bleier, Jakob; Lindorfer, Martina] TU Wien, Secur & Privacy Res Unit, A-1040 Vienna, Austria.
   [Tapiador, Juan] Univ Carlos III Madrid, Dept Comp Sci, Madrid 28911, Spain.
C3 Aarhus University; IMDEA Networks Institute; Technische Universitat
   Wien; Universidad Carlos III de Madrid
RP Feal, A (corresponding author), IMDEA Networks Inst, Madrid 28918, Spain.
EM kh@ece.au.dk; alvaro.feal@imdea.org; julien.gamba@imdea.org;
   aniketh.girish@imdea.org; jakob.bleier@tuwien.ac.at;
   martina.lindorfer@tuwien.ac.at; jestevez@inf.uc3m.es;
   narseo.vallina@imdea.org
RI ; Tapiador, Juan/G-2304-2016; Vallina-Rodriguez, Narseo/O-7892-2018
OI Gamba, Julien/0000-0003-4554-8291; Tapiador, Juan/0000-0002-4573-3967;
   Vallina-Rodriguez, Narseo/0000-0002-5420-6835; Feal,
   Alvaro/0000-0002-6658-1800; Girish, Aniketh/0000-0002-2895-125X
FU Spanish Government [ODIO PID2019-111429RB-C21, PID2019-111429RBC22];
   Region of Madrid; European Structural Funds ESF; FEDER Funds [CYNAMON-CM
   P2018/TCS-4566]; EU; Vienna Science and Technology Fund (WWTF)
   [ICT19-056 (IoTIO)]; SBA Research [SBA-K1]; COMET Centre; COMET -
   Competence Centers for Excellent Technologies Programme; BMK; BMDW;
   federal state of Vienna [REACT-CONTACT-CM-23479]; Comunidad de Madrid;
   European Regional Development Fund
FX This work was supported in part by the Spanish Government under Grants
   ODIO PID2019-111429RB-C21 and PID2019-111429RBC22; in part by the Region
   of Madrid, co-financed by European Structural Funds ESF and FEDER Funds
   under Grant CYNAMON-CM P2018/TCS-4566; in part by the EU H2020 Grant
   TRUST aWARE under Grant in part by the Vienna Science and Technology
   Fund (WWTF) through project under Grant ICT19-056 (IoTIO), in part by
   SBA Research (SBA-K1), a COMET Centre within the framework of COMET -
   Competence Centers for Excellent Technologies Programme and funded by
   BMK, BMDW, and the federal state of Vienna, and in part by the project
   REACT-CONTACT-CM-23479 funded by Comunidad de Madrid and the European
   Regional Development Fund.
CR Ali Mohamed, 2017, 2017 IEEE/ACM 4th International Conference on Mobile Software Engineering and Systems (MOBILESoft). Proceedings, P79, DOI 10.1109/MOBILESoft.2017.3
   Allix K, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P468, DOI [10.1145/2901739.2903508, 10.1109/MSR.2016.056]
   Alrabaee S, 2017, LECT NOTES COMPUT SC, V10128, P256, DOI 10.1007/978-3-319-51966-1_17
   Andow B, 2019, PROCEEDINGS OF THE 28TH USENIX SECURITY SYMPOSIUM, P585
   [Anonymous], 2022, WHAT YOU CAN DO F DR
   [Anonymous], 2022, REQ PACK
   [Anonymous], 2021, APP SIGN CONS
   [Anonymous], PERM ANDR
   [Anonymous], 2018, 2018 reform of EU data protection rules
   [Anonymous], 2022, ANDR MARK CRAWL
   [Anonymous], 2021, BAID MOB APPL PLATF
   [Anonymous], 2021, BAID APP STOR
   [Anonymous], 2018, CHAPTER 3 RIGHTS DAT
   [Anonymous], 2019, APP PRIV POL GEN
   [Anonymous], 2021, ANDR MOB APP BUILD A
   [Anonymous], 2021, AV NUMB NEW ANDR APP
   [Anonymous], 2021, SIGN MAC SOFTW DEV D
   [Anonymous], 2021, ANDR US LOOK E MUSK
   [Anonymous], 2021, TANC MARK POL
   [Anonymous], 2021, NUMB AV APPL GOOGL P
   [Anonymous], 2021, ID VER
   [Anonymous], 2021, PRIV POL
   [Anonymous], 2021, APK UPL
   [Anonymous], 2018, LOOK ANDROID MARKET
   [Anonymous], 2021, SHAR US ID
   [Anonymous], 2021, SIGN YOUR APP
   [Anonymous], 2021, APKMONK MARK POL
   [Anonymous], 2021, EN AUT SIGN IN APPS
   [Anonymous], 2021, SUBM ANDR APPS
   [Anonymous], 2021, US PLA APP SIGN
   [Anonymous], 2021, IS YOUR APP INST GET
   [Anonymous], 2021, ABOUT US
   [Anonymous], 2021, ANDR CLOUD BAS PROT
   [Anonymous], 2020, REC ANDR APP BUNDL I
   [Anonymous], 2021, APKMIRROR MARKE POL
   [Anonymous], 2020, PUT YOUR APP GOOGL P
   [Anonymous], 2020, NUMB AV APPL GOOGL P
   [Anonymous], 2021, CREAT ANDR APPS NO C
   [Anonymous], 2021, ANDR DEV MAN EL
   [Anonymous], 2021, TERMS COND ANDR
   [Anonymous], 2021, TECN APP STOR
   [Anonymous], OP SUD
   [Anonymous], 2021, COD TRANSP APP BUNDL
   [Anonymous], 2020, bbc
   [Anonymous], 2021, VER ANDR APP LINKS
   Aonzo S, 2018, PROCEEDINGS OF THE 2018 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY (CCS'18), P1788, DOI 10.1145/3243734.3243778
   APKMirror, 2021, US
   APKMonk, 2021, US
   Apple Developer Program, 2021, WHAT YOU NEED ENR
   Barrera D., 2012, P 2 ACM WORKSH SEC P, P1
   Blazquez E, 2021, P IEEE S SEC PRIV, P1641, DOI 10.1109/SP40001.2021.00095
   Calciati P, 2018, IEEE WORK CONF MIN S, P142, DOI 10.1145/3196398.3196449
   Chen K, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P175, DOI 10.1145/2568225.2568286
   Chen K, 2015, PROCEEDINGS OF THE 24TH USENIX SECURITY SYMPOSIUM, P659
   Chen Z., 2020, 1000 HIDDENADS TROJA
   Crussell Jonathan, 2012, Computer Security - ESORICS 2012. Proceedings 17th European Symposium on Research in Computer Security, P37, DOI 10.1007/978-3-642-33167-1_3
   d'Heureuse N, 2012, MOB COMPUT COMMUN RE, V16, P16, DOI 10.1145/2396756.2396759
   E. Commission, 2000, DIR 2000 31 EC EUR P
   Farooqi Shehroze, 2020, IMC '20: Proceedings of the ACM Internet Measurement Conference, P696, DOI 10.1145/3419394.3423662
   FREEMAN LC, 1977, SOCIOMETRY, V40, P35, DOI 10.2307/3033543
   Gamba J, 2020, P IEEE S SECUR PRIV, P1039, DOI 10.1109/SP40000.2020.00013
   Gonzalez H, 2018, PROCEEDINGS OF THE EIGHTH ACM CONFERENCE ON DATA AND APPLICATION SECURITY AND PRIVACY (CODASPY'18), P277, DOI 10.1145/3176258.3176322
   Hageman Kaspar, 2022, Zenodo, DOI 10.5281/ZENODO.7456231
   Haoyu Wang, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P404, DOI 10.1109/MSR.2019.00067
   Harkous H, 2018, PROCEEDINGS OF THE 27TH USENIX SECURITY SYMPOSIUM, P531
   Holzer A, 2011, TELEMAT INFORM, V28, P22, DOI 10.1016/j.tele.2010.05.006
   Hu YY, 2020, WEB CONFERENCE 2020: PROCEEDINGS OF THE WORLD WIDE WEB CONFERENCE (WWW 2020), P1727, DOI 10.1145/3366423.3380243
   Ikram M, 2016, P 2016 INTERNET MEAS, P349, DOI DOI 10.1145/2987443.2987471
   Kalgutkar V., 2018, PROC 13 INT C AVAILA, P1
   Kaliski B., 1998, 2315 RFC
   Kim B, 2019, IEEE ACCESS, V7, P72182, DOI 10.1109/ACCESS.2019.2920314
   Kim D, 2017, CCS'17: PROCEEDINGS OF THE 2017 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P1435, DOI 10.1145/3133956.3133958
   Kotzias Platon, 2021, 2021 IEEE Symposium on Security and Privacy (SP), P53, DOI 10.1109/SP40001.2021.00041
   Li L, 2021, IEEE T SOFTWARE ENG, V47, P676, DOI 10.1109/TSE.2019.2901679
   Lindorfer Martina, 2014, 2014 Third International Workshop on Building Analysis Datasets and Gathering Experience Returns for Security (BADGERS). Proceedings, P3, DOI 10.1109/BADGERS.2014.7
   Lindorfer M, 2014, LECT NOTES COMPUT SC, V8550, P51
   Liu P, 2020, IEEE WORK CONF MIN S, P548, DOI 10.1145/3379597.3387503
   Marastoni N, 2017, PROCEEDINGS OF THE 7TH SOFTWARE SECURITY, PROTECTION, AND REVERSE ENGINEERING WORKSHOP 2017 (SSPREW), DOI 10.1145/3151137.3151138
   MARZAL A, 1993, IEEE T PATTERN ANAL, V15, P926, DOI 10.1109/34.232078
   Okoyomon E., 2019, WORKSHOP TECHNOLOGY
   Oltrogge M, 2018, P IEEE S SECUR PRIV, P634, DOI 10.1109/SP.2018.00005
   Petsas Thanasis., 2013, P 2013 C INTERNET ME, P277, DOI DOI 10.1145/2504730.2504749
   Rastogi V., 2013, P 3 ACM C DAT APPL S, P209
   Reardon J, 2019, PROCEEDINGS OF THE 28TH USENIX SECURITY SYMPOSIUM, P603
   Ren J., 2018, PROC NETW DISTRIB SY, V10
   Rui Li, 2021, 2021 IEEE Symposium on Security and Privacy (SP), P70, DOI 10.1109/SP40001.2021.00070
   Scrapy, 2021, FAST POW SCRAP WEB C
   Sebastian S, 2020, CCS '20: PROCEEDINGS OF THE 2020 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P771, DOI 10.1145/3372297.3417281
   Signatone, About us
   State of California Department of Justice, 2018, California Consumer Privacy Act (CCPA)
   Sun Mingshen., 2015, Proceedings of the 8th ACM Conference on Security Privacy in Wireless and Mobile Networks, P9
   Nguyen TT, 2021, PROCEEDINGS OF THE 30TH USENIX SECURITY SYMPOSIUM, P3667
   Tuncay GS, 2018, 25TH ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2018), DOI 10.14722/ndss.2018.23210
   VanderSloot Benjamin., 2016, Proceedings of the 2016 Internet Measurement Conference, P543
   Viennot N., 2014, 2014 ACM INT C MEAS, P221, DOI DOI 10.1145/2637364.2592003
   Wang H., 2015, PROC ISSTA, P71, DOI [10.1145/2771783.2771795, DOI 10.1145/2771783.2771795]
   Wang HY, 2018, IMC'18: PROCEEDINGS OF THE INTERNET MEASUREMENT CONFERENCE, P293, DOI 10.1145/3278532.3278558
   Wang HY, 2019, WEB CONFERENCE 2019: PROCEEDINGS OF THE WORLD WIDE WEB CONFERENCE (WWW 2019), P1988, DOI 10.1145/3308558.3313611
   Wang HY, 2018, IEEE WORK CONF MIN S, P231, DOI 10.1145/3196398.3196412
   Wang HY, 2017, PROCEEDINGS OF THE 26TH INTERNATIONAL CONFERENCE ON WORLD WIDE WEB (WWW'17), P163, DOI 10.1145/3038912.3052712
   Wu L., 2013, PROC 20 SIGSAC C COM, P623, DOI DOI 10.1145/2508859.2516728
   Xu GA, 2019, IEEE ACCESS, V7, P141850, DOI 10.1109/ACCESS.2019.2944684
   Zhong N., 2013, P 28 ANN ACM S APPL, P499
   Zimmeck S, 2017, 24TH ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2017), DOI 10.14722/ndss.2017.23034
NR 104
TC 0
Z9 0
U1 2
U2 3
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD APR 1
PY 2023
VL 49
IS 4
BP 2964
EP 2979
DI 10.1109/TSE.2023.3236582
PG 16
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA E9NM9
UT WOS:000978723600087
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Larios-Vargas, E
   Elazhary, O
   Yousefi, S
   Lowlind, D
   Vliek, MLW
   Storey, MA
AF Larios-Vargas, Enrique
   Elazhary, Omar
   Yousefi, Soroush
   Lowlind, Derek
   Vliek, Michael L. W.
   Storey, Margaret-Anne
TI DASP: A Framework for Driving the Adoption of Software Security
   Practices
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Security; Behavioral sciences; Software; Organizations; Psychology;
   Guidelines; Context modeling; Behavior change; developer-centric
   security; software security; software security practices
ID SELF-EFFICACY; FEAR APPEALS; BEHAVIOR; INTERVENTION; MODEL
AB Implementing software security practices is a critical concern in modern software development. Industry practitioners, security tool providers, and researchers have provided standard security guidelines and sophisticated security development tools to ensure a secure software development pipeline. But despite these efforts, there continues to be an increase in the number of vulnerabilities that can be exploited by malicious hackers. There is thus an urgent need to understand why developers still introduce security vulnerabilities into their applications and to understand what can be done to motivate them to write more secure code. To understand and address this problem further, we propose DASP, a framework for diagnosing and driving the adoption of software security practices among developers. DASP was conceived by combining behavioral science theories to shape a cross-sectional interview study with 28 software practitioners. Our interviews lead to a framework that consists of a comprehensive set of 33 drivers grouped into 7 higher-level categories that represent what needs to happen or change so that the adoption of software security practices occurs. Using the DASP framework, organizations can design interventions suitable for developers' specific development contexts that will motivate them to write more secure code.
C1 [Larios-Vargas, Enrique; Elazhary, Omar; Yousefi, Soroush; Lowlind, Derek; Storey, Margaret-Anne] Univ Victoria, Dept Comp Sci, Victoria, BC V8P 5C2, Canada.
   [Vliek, Michael L. W.] Leiden Univ, NL-2311 EZ Leiden, Netherlands.
C3 University of Victoria; Leiden University; Leiden University - Excl LUMC
RP Larios-Vargas, E (corresponding author), Univ Victoria, Dept Comp Sci, Victoria, BC V8P 5C2, Canada.
EM elariosvargas@uvic.ca; omazhary@gmail.com; soroush.ysf@gmail.com;
   dereklowlind@gmail.com; m.l.w.vliek@fsw.leidenuniv.nl; mstorey@uvic.ca
FU Natural Sciences and Engineering Research Council of Canada (NSERC)
FX The authors would like to thank the 28 interviewees for their
   availability in this study, Dr. James Gibson for his remarkable insights
   in behavioral psychology at the beginning of our study, and the members
   of the CHISEL group at UVic for their in-valuable feedback. We also
   acknowledge the support of the Natural Sciences and Engineering Research
   Council of Canada (NSERC).
CR AJZEN I, 1991, ORGAN BEHAV HUM DEC, V50, P179, DOI 10.1016/0749-5978(91)90020-T
   Alshaikh M., 2019, 27 EUR C INF SYST EC
   [Anonymous], 2021, STATE SOFTWARE SECUR, V11
   [Anonymous], DAILY SWIG
   Assal H., 2018, P SOUPS WORKSH SEC I, P1
   Assal H, 2019, CHI 2019: PROCEEDINGS OF THE 2019 CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, DOI 10.1145/3290605.3300519
   BANDURA A, 1977, PSYCHOL REV, V84, P191, DOI 10.1037/0033-295X.84.2.191
   BANDURA A, 1982, AM PSYCHOL, V37, P122, DOI 10.1037/0003-066X.37.2.122
   Bandura A., 2010, CORSINI ENCY PSYCHOL, V4, P71
   Barker F, 2016, INT J AUDIOL, V55, pS90, DOI 10.3109/14992027.2015.1120894
   Braz L, 2022, PROC INT CONF SOFTW, P1317, DOI 10.1145/3510003.3511560
   Bull ER, 2019, BMC HEALTH SERV RES, V19, DOI 10.1186/s12913-019-3885-8
   CARVER CS, 1982, PSYCHOL BULL, V92, P111, DOI 10.1037/0033-2909.92.1.111
   CORBIN J, 1990, Z SOZIOL, V19, P418, DOI 10.1007/BF00988593
   Creswell J. W., 2013, RES DESIGN QUALITATI
   Cruzes DS, 2011, INT SYMP EMP SOFTWAR, P275, DOI 10.1109/ESEM.2011.36
   Etikan I., 2016, American Journal of Theoretical and Applied Statistics, V5, P1, DOI [DOI 10.11648/J.AJTAS.20160501.11, 10.11648/j.ajtas.20160501]
   Fischer F, 2022, IEEE SECUR PRIV, V20, P76, DOI 10.1109/MSEC.2022.3142337
   Fishbein Martin., 1975, Attitude, Intention and Behavior: An Introduction to Theory and Research
   Fulton EA, 2016, HEALTHCARE-BASEL, V4, DOI 10.3390/healthcare4020031
   Gibbs G.R., 2007, Analyzing qualitative data, DOI [10.4135/9781849208574, DOI 10.4135/9781849208574.N4, DOI 10.4135/9781849208574]
   GUBA EG, 1981, ECTJ-EDUC COMMUN TEC, V29, P75
   Haney J, 2021, IEEE SECUR PRIV, V19, P54, DOI [10.1109/msec.2021.3077405, 10.1109/MSEC.2021.3077405]
   Haney J, 2020, COMPUTER, V53, P91, DOI [10.1109/MC.2020.3001959, 10.1109/mc.2020.3001959]
   Hiller HH, 2004, CAN REV SOC ANTHROP, V41, P1, DOI 10.1111/j.1755-618X.2004.tb02167.x
   Hove SE, 2005, 2005 11TH INTERNATIONAL SYMPOSIUM ON SOFTWARE METRICS (METRICS), P201
   Hovland C. I., 1953, Communication and persuasion
   JANZ NK, 1984, HEALTH EDUC QUART, V11, P1, DOI 10.1177/109019818401100101
   Jones Russell L., 2004, Information Systems Security, V13, P29, DOI DOI 10.1201/1086/44797.13.5.20041101/84907.5
   KAHNEMAN D, 1979, ECONOMETRICA, V47, P263, DOI 10.2307/1914185
   Korstjens I, 2017, EUR J GEN PRACT, V24, P120, DOI 10.1080/13814788.2017.1375092
   Larios-Vargas E, 2022, Arxiv, DOI arXiv:2205.12388
   Lopez Tamara, 2019, 2019 IEEE/ACM Joint 7th International Workshop on Conducting Empirical Studies in Industry (CESI) and 6th International Workshop on Software Engineering Research and Industrial Practice (SER&IP). Proceedings, P34, DOI 10.1109/CESSER-IP.2019.00014
   Los FS, 2021, INT J ENV RES PUB HE, V18, DOI 10.3390/ijerph18041939
   Michie S., 2014, BEHAV CHANGEWHEEL GU, V1st
   Michie S, 2013, ANN BEHAV MED, V46, P81, DOI 10.1007/s12160-013-9486-6
   Michie S, 2011, IMPLEMENT SCI, V6, DOI 10.1186/1748-5908-6-42
   Michie Susan., 2016, Changing Behaviour to Improve Clinical Practice and Policy, P41, DOI [10.17990/axi/2016_9789726972679_041, DOI 10.17990/AXI/2016_9789726972679_041]
   Miles M.B., 2014, Qualitative data analysis: A methods sourcebook, V3rd
   Mokhberi A., 2021, P EUR S US SEC, P59
   NIST, 2021, National vulnerability database
   Norris E, 2019, PSYCHOL HEALTH, V34, P1397, DOI 10.1080/08870446.2019.1679373
   Peters GJY, 2016, HEALTH PSYCHOL REV, V10, P265, DOI 10.1080/17437199.2016.1190658
   Poller A, 2017, CSCW'17: PROCEEDINGS OF THE 2017 ACM CONFERENCE ON COMPUTER SUPPORTED COOPERATIVE WORK AND SOCIAL COMPUTING, P2489, DOI 10.1145/2998181.2998191
   Rauf I, 2022, ACM T SOFTW ENG METH, V31, DOI 10.1145/3471930
   ROGERS RW, 1975, J PSYCHOL, V91, P93, DOI 10.1080/00223980.1975.9915803
   Sajwan L., 2021, PROC HATS WORKSHOP U, P161
   Schneider B, 2013, ANNU REV PSYCHOL, V64, P361, DOI 10.1146/annurev-psych-113011-143809
   Stajkovic AD, 1998, ORGAN DYN, V26, P62, DOI 10.1016/S0090-2616(98)90006-7
   Strack F, 2004, PERS SOC PSYCHOL REV, V8, P220, DOI 10.1207/s15327957pspr0803_1
   Strauss A. L., 1997, Grounded Theory in Practice
   Taras V, 2010, J APPL PSYCHOL, V95, P405, DOI 10.1037/a0018938
   van der Pligt J., 2017, PSYCHOL INFLUENCE TH
   Votipka D, 2020, PROCEEDINGS OF THE 29TH USENIX SECURITY SYMPOSIUM, P109
   Webb J, 2016, PUBLIC HEALTH, V133, P45, DOI 10.1016/j.puhe.2015.12.009
   Weir C, 2021, 2021 IEEE/ACM 43RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE (ICSE-SEIP 2021), P21, DOI 10.1109/ICSE-SEIP52600.2021.00011
   Werlinger R, 2009, INT J HUM-COMPUT ST, V67, P584, DOI 10.1016/j.ijhcs.2009.03.002
   Wilson C, 2016, ENERGY RES SOC SCI, V19, P177, DOI 10.1016/j.erss.2016.06.015
   Witte K, 2000, HEALTH EDUC BEHAV, V27, P591, DOI 10.1177/109019810002700506
   Xie J, 2011, S VIS LANG HUM CEN C, P161, DOI 10.1109/VLHCC.2011.6070393
NR 60
TC 0
Z9 0
U1 5
U2 7
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD APR 1
PY 2023
VL 49
IS 4
BP 2892
EP 2919
DI 10.1109/TSE.2023.3235684
PG 28
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA E9NM9
UT WOS:000978723600084
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Liu, SQ
   Xie, XF
   Siow, J
   Ma, L
   Meng, GZ
   Liu, Y
AF Liu, Shangqing
   Xie, Xiaofei
   Siow, Jingkai
   Ma, Lei
   Meng, Guozhu
   Liu, Yang
TI GraphSearchNet: Enhancing GNNs via Capturing Global Dependencies for
   Semantic Code Search
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Code search; graph neural networks; multi-head attention
AB Code search aims to retrieve accurate code snippets based on a natural language query to improve software productivity and quality. With the massive amount of available programs such as (on GitHub or Stack Overflow), identifying and localizing the precise code is critical for the software developers. In addition, Deep learning has recently been widely applied to different code-related scenarios, e.g., vulnerability detection, source code summarization. However, automated deep code search is still challenging since it requires a high-level semantic mapping between code and natural language queries. Most existing deep learning-based approaches for code search rely on the sequential text i.e., feeding the program and the query as a flat sequence of tokens to learn the program semantics while the structural information is not fully considered. Furthermore, the widely adopted Graph Neural Networks (GNNs) have proved their effectiveness in learning program semantics, however, they also suffer the problem of capturing the global dependencies in the constructed graph, which limits the model learning capacity. To address these challenges, in this paper, we design a novel neural network framework, named GraphSearchNet, to enable an effective and accurate source code search by jointly learning the rich semantics of both source code and natural language queries. Specifically, we propose to construct graphs for the source code and queries with bidirectional GGNN (BiGGNN) to capture the local structural information of the source code and queries. Furthermore, we enhance BiGGNN by utilizing the multi-head attention module to supplement the global dependencies that BiGGNN missed to improve the model learning capacity. The extensive experiments on Java and Python programming language from the public benchmark CodeSearchNet confirm that GraphSearchNet outperforms current state-of-the-art works by a significant margin.
C1 [Liu, Shangqing; Siow, Jingkai; Liu, Yang] Nanyang Technol Univ, Singapore 639798, Singapore.
   [Xie, Xiaofei] Singapore Management Univ, Singapore 188065, Singapore.
   [Ma, Lei] Univ Alberta, Edmonton, AB T6G 2R3, Canada.
   [Meng, Guozhu] Chinese Acad Sci, Inst Informat Engn, SKLOIS, Beijing 100045, Peoples R China.
C3 Nanyang Technological University; Singapore Management University;
   University of Alberta; Chinese Academy of Sciences
RP Xie, XF (corresponding author), Singapore Management Univ, Singapore 188065, Singapore.
EM shangqin001@e.ntu.edu.sg; xiaofei.xfxie@gmail.com;
   jingkai001@e.ntu.edu.sg; ma.lei@acm.org; mengguozhu@iie.ac.cn;
   yangliu@ntu.edu.sg
RI Liu, Yang/D-2306-2013
OI Liu, Yang/0000-0001-7300-9215; , Xiaofei/0000-0002-1288-6502
FU National Research Foundation, Singapore [AISG2-RP-2020-019]; National
   Research Foundation; Prime Ministers Office, Singapore; National
   Cybersecurity RD Program [NRF2018NCR-NCR005-0001]; NRF
   [NRF-NRFI06-2020-0001]; National Research Foundation through National
   Satellite of Excellencein Trustworthy Software Systems (NSOE-TSS)
   Project under National Cybersecurity RD (NCR) [NRF2018NCR-NSOE003-0001];
   Ministry of Education, Singapore [MOET32020-0004]; NSFC [61902395];
   AlibabaInnovation Research
FX This work was supported in part by the National Research Foundation,
   Singapore, through AI Singapore Programme under Grant AISG2-RP-2020-019,
   in part by the National Research Foundation, Prime Ministers Office,
   Singapore, through National Cybersecurity R&D Program under Award
   NRF2018NCR-NCR005-0001, in part by NRF Investigatorship under Grant
   NRF-NRFI06-2020-0001, in part by the National Research Foundation
   through National Satellite of Excellencein Trustworthy Software Systems
   (NSOE-TSS) Project under National Cybersecurity R&D (NCR) Grant
   NRF2018NCR-NSOE003-0001, in part by the Ministry of Education,
   Singapore, through Academic Research Tier 3 under Grant MOET32020-0004.
   The work of Guozhu Meng was supported in part by NSFC under Grant
   61902395, in part by Beijing Nova Program, and in part by
   AlibabaInnovation Research
CR Al Ishtiaq A, 2021, Arxiv, DOI arXiv:2104.08017
   Allamanis M, 2018, Arxiv, DOI arXiv:1711.00740
   Allamanis M, 2020, PROCEEDINGS OF THE 41ST ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION (PLDI '20), P91, DOI 10.1145/3385412.3385997
   Alon U., 2021, PROC INT C LEARN REP
   Alon U., 2018, ARXIV
   Alon U, 2019, P ACM PROGRAM LANG, V3, DOI 10.1145/3290353
   Bahdanau D, 2016, Arxiv, DOI [arXiv:1409.0473, 10.48550/arXiv.1409.0473]
   Bajracharya S., 2006, COMP 21 ACM SIGPLAN, P681, DOI DOI 10.1145/1176617.1176671
   Bajracharya SK, 2012, EMPIR SOFTW ENG, V17, P424, DOI 10.1007/s10664-010-9144-6
   Cambronero J, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P964, DOI 10.1145/3338906.3340458
   Chen Y, 2020, Arxiv, DOI arXiv:1908.00059
   Chen Yu, 2019, arXiv
   Cho KYHY, 2014, Arxiv, DOI [arXiv:1406.1078, DOI 10.3115/V1/D14-1179, 10.48550/ARXIV.1406.1078, DOI 10.48550/ARXIV.1406.1078]
   Collobert R, 2011, J MACH LEARN RES, V12, P2493
   Cvitkovic M, 2019, PR MACH LEARN RES, V97
   De Cao N, 2019, Arxiv, DOI arXiv:1808.09920
   De Marneffe M.-C., 2008, Stanford Typed Dependencies Manual
   De Marneffe M.-C., 2006, P INT C LANG RES EV, P449
   Du L., 2021, arXiv
   Duvenaudt D, 2015, ADV NEUR IN, V28
   Fan WQ, 2019, WEB CONFERENCE 2019: PROCEEDINGS OF THE WORLD WIDE WEB CONFERENCE (WWW 2019), P417, DOI 10.1145/3308558.3313488
   Fang S, 2021, INFORM SOFTWARE TECH, V134, DOI 10.1016/j.infsof.2021.106542
   Feng ZY, 2020, Arxiv, DOI [arXiv:2002.08155, 10.48550/arXiv.2002.08155]
   Fernandes P, 2021, Arxiv, DOI arXiv:1811.01824
   Frantzeskou G, 2008, J SYST SOFTWARE, V81, P447, DOI 10.1016/j.jss.2007.03.004
   Frome Andrea, 2013, DEVISE DEEP VISUAL S, P1, DOI DOI 10.5555/2999792.2999849
   Gormley C., 2015, ELASTICSEARCH DEFINI
   Gu XD, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P933, DOI 10.1145/3180155.3180167
   Gu XD, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P631, DOI 10.1145/2950290.2950334
   Guo DY, 2021, Arxiv, DOI arXiv:2009.08366
   Haiduc S, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P842, DOI 10.1109/ICSE.2013.6606630
   Haldar R., 2020, P 58 ANN M ASS COMP, P8563
   Hamilton WL, 2017, ADV NEUR IN, V30
   Hellendoorn V.J., 2019, INT C LEARN REPR
   Hill E., 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P524, DOI 10.1109/ASE.2011.6100115
   Hochreiter S, 1997, NEURAL COMPUT, V9, P1735, DOI [10.1162/neco.1997.9.1.1, 10.1007/978-3-642-24797-2]
   Honnibal M., 2017, IN PRESS, DOI DOI 10.3233/978-1-60750-588-4-1080
   Husain H, 2020, Arxiv, DOI arXiv:1909.09436
   Jurafsky D., 2000, Speech and language processing: An introduction to natural language processing, computational linguistics, and speech recognition
   Keselj Vlado., 2009, SPEECH LANGUAGE PROC, pxxxi+ 988
   Kingma D. P., 2014, arXiv
   Krugler K., 2013, Finding Source Code on the Web for Remix and Reuse, P103
   Li HY, 2019, Arxiv, DOI arXiv:1908.09804
   Li QM, 2018, AAAI CONF ARTIF INTE, P3538
   Li YJ, 2017, Arxiv, DOI arXiv:1511.05493
   Linares-Vasquez M, 2014, EMPIR SOFTW ENG, V19, P582, DOI 10.1007/s10664-012-9230-z
   Liu C., 2021, ACM Trans. Softw. Eng. Methodol. (TOSEM), V31, P1
   Liu C., 2021, ACM Computing Surveys (CSUR), V54, P1
   Liu SQ, 2022, IEEE T SOFTWARE ENG, V48, P1800, DOI 10.1109/TSE.2020.3038681
   Liu Yang, 2019, ARXIV
   Lu ML, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P545, DOI 10.1109/SANER.2015.7081874
   Lu S, 2021, Arxiv, DOI arXiv:2102.04664
   Luong MT, 2015, Arxiv, DOI arXiv:1508.04025
   Lv F, 2015, IEEE INT CONF AUTOM, P260, DOI 10.1109/ASE.2015.42
   Annervaz KM, 2018, Arxiv, DOI arXiv:1802.05930
   Manning Christopher D., 2008, INTRO INFORM RETRIEV
   Maybury Mani, 1999, Advances in automatic text summarization
   McMillan C, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P111, DOI 10.1145/1985793.1985809
   Miller George, 1998, WORDNET ELECT LEXICA
   Mou LL, 2015, Arxiv, DOI arXiv:1409.5718
   Mou LL, 2016, AAAI CONF ARTIF INTE, P1287
   Kipf TN, 2017, Arxiv, DOI arXiv:1609.02907
   Nair Vinod, 2010, INT C INT C MACHINE, P807
   Norcliffe-Brown W, 2018, ADV NEUR IN, V31
   Oono Kenta, 2019, arXiv, DOI DOI 10.48550/ARXIV.1905.10947
   Rice A., 2018, features-javac
   Shuai J, 2020, INT C PROGRAM COMPRE, P196, DOI 10.1145/3387904.3389269
   Siow Jing Kai, 2021, 9 INT C LEARNING REP
   Song LF, 2018, Arxiv, DOI arXiv:1809.02040
   Su D, 2021, Arxiv, DOI arXiv:2010.09240
   Vaswani A, 2017, ADV NEUR IN, V30
   Wan Y, 2019, Arxiv, DOI arXiv:1909.13516
   Wang Y, 2021, 2021 CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING (EMNLP 2021), P8696
   Wei HH, 2017, PROCEEDINGS OF THE TWENTY-SIXTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P3034
   Xu K., 2018, arXiv, DOI DOI 10.48550/ARXIV.1810.00826
   Xu K, 2018, Arxiv, DOI arXiv:1804.00823
   Xu L, 2021, 2021 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2021), P342, DOI 10.1109/SANER50967.2021.00039
   Yan SH, 2020, PROCEEDINGS OF THE 2020 IEEE 27TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER '20), P344, DOI [10.1109/SANER48275.2020.9054840, 10.1109/saner48275.2020.9054840]
   Yao ZY, 2019, WEB CONFERENCE 2019: PROCEEDINGS OF THE WORLD WIDE WEB CONFERENCE (WWW 2019), P2203, DOI 10.1145/3308558.3313632
   Zhang J, 2019, PROC INT CONF SOFTW, P783, DOI 10.1109/ICSE.2019.00086
   Zhou YQ, 2019, ADV NEUR IN, V32
   Zhu QH, 2020, IEEE INT CONF AUTOM, P883, DOI [10.1145/1122445.1122456, 10.1145/3324884.3416530]
NR 82
TC 6
Z9 7
U1 2
U2 5
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD APR 1
PY 2023
VL 49
IS 4
BP 2839
EP 2855
DI 10.1109/TSE.2022.3233901
PG 17
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA E9NM9
UT WOS:000978723600081
OA Green Accepted, Green Submitted
DA 2024-07-18
ER

PT J
AU Wen, M
   Xie, ZF
   Luo, KX
   Chen, X
   Yang, YB
   Jin, H
AF Wen, Ming
   Xie, Zifan
   Luo, Kaixuan
   Chen, Xiao
   Yang, Yibiao
   Jin, Hai
TI Effective Isolation of Fault-Correlated Variables via Statistical and
   Mutation Analysis
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Debugging; Computer bugs; Codes; Software; Location awareness;
   Maintenance engineering; Monitoring; Fault localization; program
   variables; debugging
AB It is a widely-adopted strategy for developers to monitor the values of program variables when debugging in practice. In particular, developers often set breakpoints at specific locations or execute the program step by step in the debugging mode to inspect if abnormal values or status will be observed for concerned variables. Such a practical debugging strategy can facilitate developers in understanding and localizing the target fault. This study aims to identify suspicious program variables of a given fault (i.e., denoted as fault-correlated variables) automatically, thus facilitating the debugging activities for developers. To the best of our knowledge, this is the finest granularity in fault localization (FL) so far, which can address the limitations of being coarse-grained as faced by existing FL techniques. However, isolating fault-correlated variables precisely is challenging since there are usually substantially different variables used or defined in a program, and plenty of them are in the same basic block which cannot be well discriminated from each other since they will be either executed or not against the given test suite. To address such challenges, this study presents IsoVar, a two-phase model to isolate fault-correlated variables. Specifically, IsoVar first performs statistical analysis based on variable execution matrices, which is a novel concept proposed in this study, to identify a set of suspicious variables. It then observes the impacts of those variables on the program dynamically after applying subtle mutations at the bytecode level, to further isolate fault-correlated variables. Extensive experiments on Defects4J and Bears demonstrate that IsoVar can outperform state-of-the-art techniques significantly (13.0% for MAP and 19.3% for MRR). More importantly, we incorporated IsoVar into 11 existing FL techniques as well as 14 automated program repair techniques, and found that IsoVar can significantly boost their performance.
C1 [Wen, Ming; Xie, Zifan; Luo, Kaixuan; Chen, Xiao; Yang, Yibiao] Huazhong Univ Sci & Technol, Natl Engn Res Ctr Big Data Technol & Syst, Hubei Engn Res Ctr Big Data Secur, Sch Cyber Sci & Engn,Serv Comp Technol & Syst Lab, Wuhan 430074, Hubei, Peoples R China.
   [Jin, Hai] Huazhong Univ Sci & Technol, Natl Engn Res Ctr Big Data Technol & Syst, Sch Comp Sci & Technol, Serv Comp Technol & Syst Lab,Cluster & Grid Comp L, Wuhan 430074, Hubei, Peoples R China.
C3 Huazhong University of Science & Technology; Huazhong University of
   Science & Technology
RP Wen, M (corresponding author), Huazhong Univ Sci & Technol, Natl Engn Res Ctr Big Data Technol & Syst, Hubei Engn Res Ctr Big Data Secur, Sch Cyber Sci & Engn,Serv Comp Technol & Syst Lab, Wuhan 430074, Hubei, Peoples R China.
EM mwenaa@hust.edu.cn; xzff@hust.edu.cn; u201814820@hust.edu.cn;
   u201814850@hust.edu.cn; yangyibiao@hust.edu.cn; hjin@hust.edu.cn
RI Wen, Ming/AEJ-8029-2022; Yang, Yibiao/ABP-4159-2022
OI Yang, Yibiao/0000-0003-1153-2013; Xie, zifan/0000-0002-3264-1684; Luo,
   Kaixuan/0000-0002-6387-8043
FU National Natural Science Foundation of China [62002125, 62072194]; Young
   Elite Scientists Sponsorship Program by CAST [2021QNRC001]
FX This work was supported by the National Natural Science Foundation of
   China under Grants 62002125 and 62072194, and in part by the Young Elite
   Scientists Sponsorship Program by CAST under Grant 2021QNRC001.
CR Abreu R, 2007, TAIC PART 2007 - TESTING: ACADEMIC AND INDUSTRIAL CONFERENCE - PRACTICE AND RESEARCH TECHNIQUES, PROCEEDINGS, P89, DOI 10.1109/TAIC.PART.2007.13
   Abreu R, 2006, 12TH PACIFIC RIM INTERNATIONAL SYMPOSIUM ON DEPENDABLE COMPUTING, PROCEEDINGS, P39
   Abreu R, 2009, J SYST SOFTWARE, V82, P1780, DOI 10.1016/j.jss.2009.06.035
   AGRAWAL H, 1993, SOFTWARE PRACT EXPER, V23, P589, DOI 10.1002/spe.4380230603
   [Anonymous], 2022, DELTA DEBUGGING PLUG
   [Anonymous], 2013, P 2013 INT S SOFTW T, DOI DOI 10.1145/2483760.2483767
   [Anonymous], 2021, SOFTW BUG WIK FREE E
   [Anonymous], 2014, P IEEE ACM 29 INT C
   [Anonymous], 2022, GITHUB LANGUAGE STAT
   Assiri FY, 2017, SOFTWARE QUAL J, V25, P171, DOI 10.1007/s11219-016-9312-z
   Blazytko T, 2020, PROCEEDINGS OF THE 29TH USENIX SECURITY SYMPOSIUM, P235
   Briand LC, 2007, ISSRE 2007: 18TH IEEE INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P137, DOI 10.1109/ISSRE.2007.31
   Britton T., 2013, REV DEBUGGING SOFTWA
   Campos J, 2012, IEEE INT CONF AUTOM, P378, DOI 10.1145/2351676.2351752
   Cardoso N., 2013, PROC 27 AAAI C ARTIF, P152
   Delahaye M., 2012, Proceedings of the 2012 IEEE Sixth International Conference on Software Security and Reliability (SERE 2012), P197, DOI 10.1109/SERE.2012.32
   Durieux T, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P302, DOI 10.1145/3338906.3338911
   Durieux T, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P349, DOI 10.1109/SANER.2017.7884635
   Durieux T, 2016, 2016 IEEE/ACM 11TH INTERNATIONAL WORKSHOP IN AUTOMATION OF SOFTWARE TEST (AST), P85, DOI [10.1145/2896921.2896931, 10.1109/AST.2016.021]
   Elmishali A, 2016, AAAI CONF ARTIF INTE, P4003
   Ghanbari Ali, 2020, ISSTA '20: Proceedings of the 29th ACM SIGSOFT International Symposium on Software Testing and Analysis, P541, DOI 10.1145/3395363.3404362
   Ghanbari A, 2019, PROCEEDINGS OF THE 28TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA '19), P19, DOI 10.1145/3293882.3330559
   Gupta N., 2005, Proceedings of the 20th IEEE/ACM International Conference on Automated Software Engineering, New York, NY, USA: Association for Computing Machinery, ASE'05, P263, DOI 10.1145/1101908.1101948
   Hong S, 2015, IEEE INT CONF AUTOM, P464, DOI 10.1109/ASE.2015.14
   Jiang JJ, 2018, ISSTA'18: PROCEEDINGS OF THE 27TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P298, DOI 10.1145/3213846.3213871
   Johnson B, 2020, PROC INT CONF SOFTW, P87, DOI 10.1145/3377811.3380377
   Jones J.A., 2005, P 20 IEEE ACM INT C, P273, DOI [10.1145/1101908.1101949, DOI 10.1145/1101908.1101949]
   Just R, 2014, P 2014 INT S SOFTW T, P437, DOI DOI 10.1145/2610384.2628055
   Kim J, 2019, INFORM SOFTWARE TECH, V107, P179, DOI 10.1016/j.infsof.2018.11.009
   Le Goues C, 2012, IEEE T SOFTWARE ENG, V38, P54, DOI 10.1109/TSE.2011.104
   Li X, 2019, PROCEEDINGS OF THE 28TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA '19), P169, DOI 10.1145/3293882.3330574
   Li Y, 2019, P ACM PROGRAM LANG, V3, DOI 10.1145/3360588
   Lin B, 2022, ACM T SOFTW ENG METH, V31, DOI 10.1145/3505247
   Liu K, 2019, PROCEEDINGS OF THE 28TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA '19), P31, DOI 10.1145/3293882.3330577
   Liu K, 2019, IEEE INT CONF SOFTW, P102, DOI 10.1109/ICST.2019.00020
   Madeiral F, 2019, 2019 IEEE 26TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER), P468, DOI [10.1109/saner.2019.8667991, 10.1109/SANER.2019.8667991]
   Manning C.D., 1999, FDN STAT NATURAL LAN
   Martinez M., 2016, P 25 INT S SOFTWARE, P441, DOI 10.1145/2931037
   Martinez M, 2018, LECT NOTES COMPUT SC, V11036, P65, DOI 10.1007/978-3-319-99241-9_3
   Moon S, 2014, 2014 IEEE SEVENTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST), P153, DOI 10.1109/ICST.2014.28
   Papadakis M, 2015, SOFTW TEST VERIF REL, V25, P605, DOI 10.1002/stvr.1509
   Parnin C., 2011, P 2011 INT S SOFTWAR, P199, DOI [10.1145/2001420.2001445, DOI 10.1145/2001420.2001445]
   Pearson S, 2017, PROC INT CONF SOFTW, P609, DOI 10.1109/ICSE.2017.62
   Perez A, 2018, PROCEEDINGS OF THE TWENTY-SEVENTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P1935
   Qi YH, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P254, DOI 10.1145/2568225.2568254
   Qi Zichao, 2015, P 2015 INT S SOFTW T, P24, DOI DOI 10.1145/2771783.2771791
   Schroter Adrian, 2010, Proceedings of the 2010 7th IEEE Working Conference on Mining Software Repositories (MSR 2010), P118, DOI 10.1109/MSR.2010.5463280
   Shamshiri S, 2015, IEEE INT CONF AUTOM, P201, DOI 10.1109/ASE.2015.86
   Sohn J, 2017, PROCEEDINGS OF THE 26TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA'17), P273, DOI 10.1145/3092703.3092717
   Tian HY, 2020, IEEE INT CONF AUTOM, P981, DOI 10.1145/3324884.3416532
   Voorhees EllenM., 1999, Proceedings of the 8th Text Retrieval Conference, P77
   Wang SW, 2020, IEEE INT CONF AUTOM, P968, DOI 10.1145/3324884.3416590
   Wen M, 2017, Arxiv, DOI arXiv:1707.05172
   Wen M, 2021, IEEE T SOFTWARE ENG, V47, P2348, DOI 10.1109/TSE.2019.2948158
   Wen M, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1, DOI 10.1145/3180155.3180233
   Wen M, 2016, IEEE INT CONF AUTOM, P262, DOI 10.1145/2970276.2970359
   Wong WE, 2016, IEEE T SOFTWARE ENG, V42, P707, DOI 10.1109/TSE.2016.2521368
   Wong WE, 2014, IEEE T RELIAB, V63, P290, DOI 10.1109/TR.2013.2285319
   WONG WE, 1995, PROC INT CONF SOFTW, P41, DOI 10.1145/225014.225018
   Xiangyu Zhang, 2006, 28th International Conference on Software Engineering Proceedings, P272, DOI 10.1145/1134285.1134324
   Xiong YF, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P789, DOI 10.1145/3180155.3180182
   Xiong YF, 2017, PROC INT CONF SOFTW, P416, DOI 10.1109/ICSE.2017.45
   Xuan JF, 2017, IEEE T SOFTWARE ENG, V43, P34, DOI 10.1109/TSE.2016.2560811
   Yang J., 2012, PROC IEEE 29 INT C S, P481
   Yiling Lou, 2020, ISSTA '20: Proceedings of the 29th ACM SIGSOFT International Symposium on Software Testing and Analysis, P75, DOI 10.1145/3395363.3397351
   Yuan Y, 2020, IEEE T SOFTWARE ENG, V46, P1040, DOI 10.1109/TSE.2018.2874648
   Zeller A., 2002, Software Engineering Notes, V27, P1, DOI 10.1145/605466.605468
   Zeller A, 2002, IEEE T SOFTWARE ENG, V28, P183, DOI 10.1109/32.988498
   Zhang M, 2017, P 26 ACM SIGS INT S, P261, DOI DOI 10.1145/3092703.3092731
   ZHANG X., 2005, AADEBUG 05 P INT S A, P33
   Zimmermann T, 2002, LECT NOTES COMPUT SC, V2269, P191
   Zou DM, 2021, IEEE T SOFTWARE ENG, V47, P332, DOI 10.1109/TSE.2019.2892102
NR 72
TC 1
Z9 1
U1 2
U2 4
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD APR 1
PY 2023
VL 49
IS 4
BP 2053
EP 2068
DI 10.1109/TSE.2022.3209590
PG 16
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA E9NM9
UT WOS:000978723600036
DA 2024-07-18
ER

PT J
AU Ferrario, MA
   Winter, E
AF Ferrario, Maria Angela
   Winter, Emily
TI Applying Human Values Theory to Software Engineering Practice: Lessons
   and Implications
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Software; Ethics; Systematics; Industries; Software measurement;
   Decision making; Adaptation models; Software engineering; human values
   in software practice; human-centric software engineering; case studies
   of practice; ethics; non-functional requirements; responsible
   innovations; agile retrospectives; mixed-methods
ID ETHICS
AB The study of human values in software engineering (SE) is increasingly recognised as a fundamental human-centric issue of SE decision making. However, values studies in SE still face a number of issues, including the difficulty of eliciting values in a systematic and structured way, the challenges of measuring and tracking values over time, and the lack of practice-based understanding of values among software practitioners. This paper aims to help address these issues by: 1) outlining a research framework that supports a systematic approach to values elicitation, analysis, and understanding; 2) introducing tools and techniques that help elicit and measure values during SE decision making processes in a systematic way; and 3) applying such tools to a month-long research sprint co-designed with an industry partner and conducted with 27 software practitioners. The case study builds on lessons from an earlier pilot (12 participants) and combines in-situ observations with the use of two values-informed tools: the Values Q-Sort (V-QS), and the Values-Retro. The V-QS adapts instruments from values research to the SE context, the Values-Retro adapts existing SE techniques to values theory. We distil implications for research and practice in ten lessons learned.
C1 [Ferrario, Maria Angela] Queens Univ Belfast, Belfast BT9 5BN, Antrim, North Ireland.
   [Winter, Emily] Univ Lancaster, Lancaster, Lancs, England.
C3 Queens University Belfast; Lancaster University
RP Ferrario, MA (corresponding author), Queens Univ Belfast, Belfast BT9 5BN, Antrim, North Ireland.
EM m.ferrario@qub.ac.uk; e.winter@lancaster.ac.uk
OI Ferrario, Maria Angela Felicita Cristina/0000-0002-2846-1365
FU UKRI [EP/R009600/1]; EPSRC [EP/R009600/1] Funding Source: UKRI
FX This work was supported by UKRI under Grant EP/R009600/1. This work
   involved human subjects or animals in its research. Approval of all
   ethical and experimental procedures and protocols was granted by
   Lancaster University's Faculty of Science and Technology's Ethics
   committee.
CR ACM, 2018, ACM Code of Ethics and Professional Conduct
   ANDERSON RE, 1993, COMMUN ACM, V36, P98, DOI 10.1145/151220.151231
   Becker C., 2019, DAGSTUHL REPORTS, V9, P40, DOI DOI 10.4230/DAGREP.9.7.40
   Bender EM, 2021, PROCEEDINGS OF THE 2021 ACM CONFERENCE ON FAIRNESS, ACCOUNTABILITY, AND TRANSPARENCY, FACCT 2021, P610, DOI 10.1145/3442188.3445922
   Cheng An-Shou, 2010, Proceedings of the American Society for Information Science and Technology, V47, DOI [DOI 10.1002/meet.14504701232, 10.1002/meet.14504701232, DOI 10.1002/MEET.14504701232]
   Creswell J. W., 2013, RES DESIGN QUALITATI
   Czarnecki K, 2018, INT REQUIR ENG CONF, P3, DOI 10.1109/RE.2018.00-57
   Easterbrook S., 2008, GUIDE ADV EMPIRICAL, P285, DOI [DOI 10.1007/978-1-84800-044-5_11, DOI 10.1007/978-1-84800-044-511]
   Ferrario M. A., 2017, P 2017 ACM SIGCHI C, P660
   Ferrario M. A., 2017, NEUROPSYCHOPHARMACOL
   Ferrario MA, 2016, 2016 IEEE/ACM 38TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING COMPANION (ICSE-C), P553, DOI 10.1145/2889160.2889219
   Ferrario MA, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE COMPANION 2014), P520, DOI 10.1145/2591062.2591121
   Friedman B, 2019, VALUE SENSITIVE DESIGN: SHAPING TECHNOLOGY WITH MORAL IMAGINATION, P1, DOI 10.7551/mitpress/7585.001.0001
   Friedman Batya, 2017, Foundations and Trends in Human-Computer Interaction, V11, P63, DOI 10.1561/1100000015
   Friedman Batya., 1996, Interactions, V3, P16, DOI [DOI 10.1145/242485.242493, 10.1145/242485.242493]
   Galhotra S, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P498, DOI 10.1145/3106237.3106277
   Glisczinski D, 2018, J TRANSFORM EDUC, V16, P175, DOI 10.1177/1541344618777367
   Gotterbarn D., 2002, Encyclopedia of software engineering, DOI [10.1002/0471028959.sof314, DOI 10.1002/0471028959.SOF314]
   Grundy J., 2020, P 15 INT C EV NOV AP, P229
   Grundy J, 2020, 2020 20TH IEEE/ACM INTERNATIONAL SYMPOSIUM ON CLUSTER, CLOUD AND INTERNET COMPUTING (CCGRID 2020), P1, DOI 10.1109/CCGrid49817.2020.00-93
   Hanel P.H. P., 2017, Values and behavior: taking a cross cultural perspective, DOI [DOI 10.1007/978-3-319-56352-7_8, 10.1007/978-3-319-56352-7_8]
   Hanel PHP, 2018, FRONT PSYCHOL, V9, DOI 10.3389/fpsyg.2018.01643
   Hanel PHP, 2018, FRONT PSYCHOL, V9, DOI 10.3389/fpsyg.2018.00849
   Harbers M, 2015, LECT NOTES COMPUT SC, V9013, P318, DOI 10.1007/978-3-319-16101-3_23
   Hassabis D., 2017, ASILOMAR AI PRINCIPL
   Hussain W, 2022, IEEE T SOFTWARE ENG, V48, P1818, DOI 10.1109/TSE.2020.3038802
   Kirchschlaeger P.G., 2021, Digital Transformation and Ethics. Ethical Considerations on the Robotization and Automation of Society and the Economy and the Use of Artificial Intelligence
   Knowles B., 2014, P 2014 C DESIGNING I, P1035
   Koch SH, 2013, ETHICS INF TECHNOL, V15, P45, DOI 10.1007/s10676-012-9309-7
   Le Dantec CA, 2009, CHI2009: PROCEEDINGS OF THE 27TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, VOLS 1-4, P1141
   LEE AS, 1989, MIS QUART, V13, P33, DOI 10.2307/248698
   Maio G.R., 2004, The function-structure model of attitudes
   Maio GR, 1998, J PERS SOC PSYCHOL, V74, P294, DOI 10.1037/0022-3514.74.2.294
   Maio GR, 2010, ADV EXP SOC PSYCHOL, V42, P1, DOI 10.1016/S0065-2601(10)42001-8
   Miller C., 2019, KEN Q ANAL
   Miller KW, 2005, IEEE TECHNOL SOC MAG, V24, P36, DOI 10.1109/MTAS.2005.1563500
   Mougouei D, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P780, DOI 10.1145/3236024.3264843
   Partala T, 2016, INTERACT COMPUT, V28, P311, DOI 10.1093/iwc/iwv007
   Peirce CharlesSanders., 1955, PHILOS WRITINGS PEIR, P5
   Perera H, 2020, PROC INT CONF SOFTW, P409, DOI 10.1145/3377811.3380393
   Rubin Kenneth S., 2012, Essential Scrum: A practical guide to the most popular Agile process, V1st
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Russell S, 2015, AI MAG, V36, P105, DOI 10.1609/aimag.v36i4.2577
   Schwartz S. H., 2012, ONLINE READINGS PSYC, V2, DOI [https://doi.org/10.9707/2307-0919.1116, DOI 10.9707/2307-0919.1116]
   SCHWARTZ SH, 1992, ADV EXP SOC PSYCHOL, V25, P1, DOI 10.1016/s0065-2601(08)60281-6
   Schwartz SH, 2012, J PERS SOC PSYCHOL, V103, P663, DOI 10.1037/a0029393
   Shilton Katie, 2014, Proceedings of the 17th ACM Conference on Computer Supported Cooperative Work Social Computing (CSCW'14), P426, DOI [DOI 10.1145/2531602.2531625, 10.1145/2531602.2531625]
   Stark L., 2019, Journal of Cultural Analytics, DOI DOI 10.22148/16.036
   Sutcliffe A, 2021, Arxiv, DOI arXiv:2103.01309
   Thew S, 2018, REQUIR ENG, V23, P443, DOI 10.1007/s00766-017-0273-y
   Thew S, 2008, INT REQUIR ENG CONF, P63, DOI 10.1109/RE.2008.35
   Vakil S, 2018, HARVARD EDUC REV, V88, P26, DOI 10.17763/1943-5045-88.1.26
   Van den Hoven J, 2012, SCI ENG ETHICS, V18, P143, DOI 10.1007/s11948-011-9277-z
   van den Hoven Jeroen., 2012, THE CAPABILITY APPROACH, TECHNOLOGY AND DESIGN, P27, DOI DOI 10.1007/978-94-007-3879-9_2
   Watts S., 2005, Qual. Res. Psychol., V2, P67, DOI [10.1191/1478088705qp022oa, DOI 10.1191/1478088705QP022OA]
   Whittle J, 2021, IEEE SOFTWARE, V38, P106, DOI 10.1109/MS.2019.2956701
   Whittle J, 2019, INT REQUIR ENG CONF, P4, DOI 10.1109/RE.2019.00011
   Whittle J, 2019, IEEE SOFTWARE, V36, P112, DOI 10.1109/MS.2019.2897397
   Winter E, 2019, 2019 IEEE/ACM 12TH INTERNATIONAL WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING (CHASE 2019), P19, DOI 10.1109/CHASE.2019.00012
   Winter E, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: NEW IDEAS AND EMERGING RESULTS (ICSE-NIER 2019), P61, DOI 10.1109/ICSE-NIER.2019.00024
   Winter E, 2018, PROCEEDINGS OF THE 12TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT (ESEM 2018), DOI 10.1145/3239235.3267427
   Yin R. K., 2018, Case Study Research and Applications: Design and Methods, DOI DOI 10.1016/J.TECHFORE.2018.10.013
NR 62
TC 1
Z9 1
U1 4
U2 6
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAR 1
PY 2023
VL 49
IS 3
BP 973
EP 990
DI 10.1109/TSE.2022.3170087
PG 18
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA A1QF2
UT WOS:000952938700003
OA Green Published, hybrid
DA 2024-07-18
ER

PT J
AU Yue, Y
   Wang, Y
   Redmiles, D
AF Yue, Yang
   Wang, Yi
   Redmiles, David
TI Off to a Good Start: Dynamic Contribution Patterns and Technical Success
   in an OSS Newcomer's Early Career
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Engineering profession; Documentation; Codes; Ecosystems; Correlation;
   Task analysis; Focusing; Dynamic contribution pattern; early career;
   newcomer; open source; technical success
ID OPEN SOURCE SOFTWARE; BARRIERS; PROJECTS; INNOVATION; BEHAVIORS; TIME
AB Attracting and retaining newcomers are critical aspects for OSS projects, as such projects rely on newcomers' sustainable contributions. Considerable effort has been made to help newcomers by identifying and overcoming the barriers during the onboarding process. However, most newcomers eventually fail and drop out of their projects even after successful onboarding. Meanwhile, it has been long known that individuals' early career stages profoundly impact their long-term career success. However, newcomers' early careers are less investigated in SE research. In this paper, we sought to develop an empirical understanding of the relationships between newcomers' dynamic contribution patterns in their early careers and their technical success. To achieve this goal, we compiled a dataset of newcomers' contribution data from 54 large OSS projects under three different ecosystems and analyzed it with time series analysis and other statistical analysis techniques. Our analyses yield rich findings. The correlations between several contribution patterns and technical success were identified. In general, being consistent and persistent in newcomers' early careers is positively associated with their technical success. While these correlations generally hold in all three ecosystems, we observed some differences in detailed contribution patterns correlated with technical success across ecosystems. In addition, we performed a case study to investigate whether another type of contributions, i.e., documentation contribution, could potentially have positive correlations with newcomers' technical success. We discussed the implications and summarized practical recommendations to OSS newcomers. The insights gained from this work demonstrated the necessity of extending the focus of research and practice to newcomers' early careers and hence shed light on future research in this direction.
C1 [Yue, Yang; Redmiles, David] Univ Calif Irvine, Dept Informat, Irvine, CA 92697 USA.
   [Wang, Yi] Beijing Univ Posts & Telecommun, Sch Comp Sci, Natl Pilot Software Engn Sch, Beijing 100876, Peoples R China.
   [Wang, Yi] Beijing Univ Posts & Telecommun, Key Lab Trustworthy Distributed Comp & Serv MoE, Beijing 100876, Peoples R China.
C3 University of California System; University of California Irvine;
   Beijing University of Posts & Telecommunications; Beijing University of
   Posts & Telecommunications
RP Wang, Y (corresponding author), Beijing Univ Posts & Telecommun, Sch Comp Sci, Natl Pilot Software Engn Sch, Beijing 100876, Peoples R China.; Wang, Y (corresponding author), Beijing Univ Posts & Telecommun, Key Lab Trustworthy Distributed Comp & Serv MoE, Beijing 100876, Peoples R China.
EM y.yue@uci.edu; wang@cocolabs.org; redmiles@ics.uci.edu
OI Yue, Yang/0000-0003-3531-4408
FU Donald Bren School of Information and Computer Sciences, University of
   California, Irvine; National Natural Science Foundation of China (NSFC)
   [62076232, 62172049]; Fundamental Research Funds for the Central
   Universities; Beijing University Posts and Telecommunications
FX The work of Yang Yue and David Redmiles was supported in part by the
   Donald Bren School of Information and Computer Sciences, University of
   California, Irvine. The work of Yi Wang was supported in part by the
   National Natural Science Foundation of China (NSFC) under Grants
   62076232 and 62172049, in part by the Fundamental Research Funds for the
   Central Universities, and in part by the Beijing University Posts and
   Telecommunications.(Corresponding author: Yi Wang.)
CR Amorim SD, 2018, ECSA 2018: PROCEEDINGS OF THE 12TH EUROPEAN CONFERENCE ON SOFTWARE ARCHITECTURE: COMPANION PROCEEDINGS, DOI 10.1145/3241403.3241433
   [Anonymous], 2010, PROC 18 ACM SIGSOFT
   [Anonymous], 2014, WORKSH GLOB SOFTW DE
   [Anonymous], 2011, P 19 ACM SIGSOFT S 1
   Avelino Guilherme, 2019, INT SYMP EMP SOFTWAR, P1, DOI DOI 10.1109/esem.2019.8870181
   Balali S, 2018, COMPUT SUPP COOP W J, V27, P679, DOI 10.1007/s10606-018-9310-8
   Bauer TN, 2019, J VOCAT BEHAV, V112, P356, DOI 10.1016/j.jvb.2019.05.001
   BAUER TN, 1994, J APPL PSYCHOL, V79, P211, DOI 10.1037/0021-9010.79.2.211
   Bogart C, 2021, ACM T SOFTW ENG METH, V30, DOI 10.1145/3447245
   Bogart C, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P109, DOI 10.1145/2950290.2950325
   BONACICH P, 1987, AM J SOCIOL, V92, P1170, DOI 10.1086/228631
   Bonacich P, 2007, SOC NETWORKS, V29, P555, DOI 10.1016/j.socnet.2007.04.002
   Britto R, 2018, J SOFTW-EVOL PROC, V30, DOI 10.1002/smr.1921
   Calefato F, 2018, PROCEEDINGS 2018 ACM/IEEE 13TH INTERNATIONAL CONFERENCE ON GLOBAL SOFTWARE ENGINEERING ICGSE 2018, P92, DOI 10.1145/3196369.3196372
   Canfora G., 2012, P ACM SIGSOFT 20 INT, P1
   Casalnuovo C, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P817, DOI 10.1145/2786805.2786854
   Chacon S., 2014, Pro Git
   Christ M., 2016, arXiv, DOI DOI 10.48550/ARXIV.1610.07717
   Coelho J, 2018, 2018 IEEE/ACM 11TH INTERNATIONAL WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING (CHASE), P114, DOI 10.1145/3195836.3195848
   Crowston K, 2012, ACM COMPUT SURV, V44, DOI 10.1145/2089125.2089127
   Dabbish L, 2012, P ACM 2012 C COMP SU, P1277, DOI [10.1145/2145204.2145396, DOI 10.1145/2145204.2145396]
   De Vos A, 2009, J OCCUP ORGAN PSYCH, V82, P761, DOI 10.1348/096317909X471013
   Decan A, 2020, J SYST SOFTWARE, V165, DOI 10.1016/j.jss.2020.110573
   Diniz GC, 2017, 2017 IEEE/ACM 10TH INTERNATIONAL WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING (CHASE 2017), P36, DOI 10.1109/CHASE.2017.7
   Ekaterina Skriptsova, 2019, P 2019 INT C DIG TRA, P452
   Fronchetti F, 2019, IFIP ADV INF COMM TE, V556, P91, DOI 10.1007/978-3-030-20883-7_9
   Gabriel AS, 2017, ORGAN RES METHODS, V20, P32, DOI 10.1177/1094428116673721
   Gall H, 1998, PROC IEEE INT CONF S, P190, DOI 10.1109/ICSM.1998.738508
   Golzadeh M, 2021, J SYST SOFTWARE, V175, DOI 10.1016/j.jss.2021.110911
   Gousios G, 2016, PROC INT CONF SOFTW, P285, DOI 10.1145/2884781.2884826
   Hannebauer C., 2017, Proceedings of the 13th International Symposium on Open Collaboration, P1
   Hars A, 2002, INT J ELECTRON COMM, V6, P25
   Howison J., 2004, "International Workshop on Mining Software Repositories (MSR 2004)" W17S Workshop - 26th International Conference on Software Engineering, P7, DOI 10.1049/ic:20040467
   Huilian Qiu Sophie, 2019, Proceedings of the ACM on Human-Computer Interaction, V3, DOI 10.1145/3359224
   Jansen KJ, 2019, HUM RELAT, V72, P1154, DOI 10.1177/0018726718794268
   Jensen C, 2007, PROC INT CONF SOFTW, P364
   Joblin M, 2017, PROC INT CONF SOFTW, P164, DOI 10.1109/ICSE.2017.23
   KIRCHMEYER C, 1995, J ORGAN BEHAV, V16, P67, DOI 10.1002/job.4030160109
   LANDIS JR, 1977, BIOMETRICS, V33, P159, DOI 10.2307/2529310
   Lee A, 2019, PROC INT CONF SOFTW, P677, DOI 10.1109/ICSE.2019.00077
   Lee A, 2017, PROC INT CONF SOFTW, P187, DOI 10.1109/ICSE.2017.25
   Lee TW, 2017, ACAD MANAGE PERSPECT, V31, P201, DOI 10.5465/amp.2016.0123
   Lin B, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P425, DOI [10.1145/2901739.2901777, 10.1109/MSR.2016.050]
   Liu C, 2018, IEEE ACCESS, V6, P52082, DOI 10.1109/ACCESS.2018.2869207
   Matturro G, 2017, PROCEEDINGS 2017 INTERNATIONAL CONFERENCE ON COMPUTATIONAL SCIENCE AND COMPUTATIONAL INTELLIGENCE (CSCI), P993, DOI 10.1109/CSCI.2017.171
   Mendez C, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1004, DOI 10.1145/3180155.3180241
   Messerschmitt DG, 2003, SOFTWARE ECOSYSTEM: UNDERSTANDING AN INDISPENSABLE TECHNOLOGY AND INDUSTRY, P1
   Miller C, 2019, IFIP ADV INF COMM TE, V556, P116, DOI 10.1007/978-3-030-20883-7_11
   Osterlund C, 2020, J ASSOC INF SYST, V21, P1, DOI 10.17705/1jais.00590
   Padala HS, 2022, IEEE T SOFTWARE ENG, V48, P241, DOI 10.1109/TSE.2020.2984173
   Park Y, 2009, IEEE INT WORK VIS SO, P3, DOI 10.1109/VISSOF.2009.5336433
   Pinto G, 2017, CONF SOFTW ENG EDUC, P117, DOI 10.1109/CSEET.2017.27
   Pinto G, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P112, DOI 10.1109/SANER.2016.68
   Raudenbush S.W., 2002, Hierarchical linear models Applications and data analysis methods, VVolume 1
   Sarker F, 2019, PROC INT CONF SOFTW, P936, DOI 10.1109/ICSE.2019.00099
   Sarma A, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P932, DOI 10.1145/2950290.2983984
   Savickas M.L., 2002, Career choice and development, V4th, P149
   Shipp AJ, 2015, ANNU REV ORGAN PSYCH, V2, P237, DOI 10.1146/annurev-orgpsych-032414-111245
   Sholler D, 2019, PLOS COMPUT BIOL, V15, DOI 10.1371/journal.pcbi.1007296
   Singh PV, 2011, MIS QUART, V35, P813
   Singh PV, 2010, ACM T SOFTW ENG METH, V20, DOI 10.1145/1824760.1824763
   Sonnentag S, 2012, ORGAN PSYCHOL REV, V2, P361, DOI 10.1177/2041386612442079
   Spadini D, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P908, DOI 10.1145/3236024.3264598
   Steinmacher I., 2012, 2012 Third International Workshop on Recommendation Systems for Software Engineering (RSSE), P63, DOI 10.1109/RSSE.2012.6233413
   Steinmacher I., 2014, Proceedings of the 7th international workshop on cooperative and human aspects of software engineering, P72, DOI DOI 10.1145/2593702.2593704.ACM
   Steinmacher I, 2019, COMPUT SUPP COOP W J, V28, P247, DOI 10.1007/s10606-018-9335-z
   Steinmacher I, 2019, IEEE SOFTWARE, V36, P41, DOI 10.1109/MS.2018.110162131
   Steinmacher I, 2016, PROC INT CONF SOFTW, P273, DOI 10.1145/2884781.2884806
   Steinmacher I, 2015, PROCEEDINGS OF THE 2015 ACM INTERNATIONAL CONFERENCE ON COMPUTER-SUPPORTED COOPERATIVE WORK AND SOCIAL COMPUTING (CSCW'15), P1379, DOI 10.1145/2675133.2675215
   Steinmacher I, 2015, INFORM SOFTWARE TECH, V59, P67, DOI 10.1016/j.infsof.2014.11.001
   Steinmacher I, 2014, 2014 28TH BRAZILIAN SYMPOSIUM ON SOFTWARE ENGINEERING (SBES 2014), P51, DOI 10.1109/SBES.2014.9
   Steinmacher I, 2013, 2013 6TH INTERNATIONAL WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING (CHASE), P25, DOI 10.1109/CHASE.2013.6614728
   Strahm B, 2018, DIS 2018: PROCEEDINGS OF THE 2018 DESIGNING INTERACTIVE SYSTEMS CONFERENCE, P361, DOI 10.1145/3196709.3196727
   Stumpf SA, 2014, J VOCAT BEHAV, V85, P180, DOI 10.1016/j.jvb.2014.06.002
   Sullivan SE, 2009, J MANAGE, V35, P1542, DOI 10.1177/0149206309350082
   Terrell J, 2017, PEERJ COMPUT SCI, DOI 10.7717/peerj-cs.111
   Toscani C., 2018, PROC 17 BRAZ S HUM F
   Trinkenreich Bianca, 2020, Proceedings of the ACM on Human-Computer Interaction, V4, DOI 10.1145/3415251
   van Wesel P, 2017, PROC IEEE INT CONF S, P544, DOI 10.1109/ICSME.2017.25
   von Hippel E, 2003, ORGAN SCI, V14, P209, DOI 10.1287/orsc.14.2.209.14992
   von Krogh G, 2003, RES POLICY, V32, P1217, DOI 10.1016/S0048-7333(03)00050-7
   von Krogh G, 2003, RES POLICY, V32, P1149, DOI 10.1016/S0048-7333(03)00054-4
   Wanberg CR, 2005, J APPL PSYCHOL, V90, P411, DOI 10.1037/0021-9010.90.3.411
   Wang JG, 2011, PROCEEDINGS OF THE 4TH INTERNATIONAL WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING (CHASE'11), P76
   Wang ZD, 2018, PROC INT CONF SOFTW, P81, DOI 10.1145/3183428.3183437
   Wolff HG, 2009, J APPL PSYCHOL, V94, P196, DOI 10.1037/a0013350
   Xu RH, 2003, STAT MED, V22, P3527, DOI 10.1002/sim.1572
   Zhou M., 2019, ONBOARDING RETAINING
   Zhou MH, 2012, PROC INT CONF SOFTW, P518, DOI 10.1109/ICSE.2012.6227164
NR 89
TC 3
Z9 3
U1 1
U2 4
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD FEB 1
PY 2023
VL 49
IS 2
BP 529
EP 548
DI 10.1109/TSE.2022.3156071
PG 20
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 9F0FH
UT WOS:000937151900004
OA hybrid
DA 2024-07-18
ER

PT J
AU Zhao, YQ
   Wang, Z
   Liu, S
   Sun, J
   Chen, JJ
   Chen, X
AF Zhao, Yingquan
   Wang, Zan
   Liu, Shuang
   Sun, Jun
   Chen, Junjie
   Chen, Xiang
TI Achieving High MAP-Coverage Through Pattern Constraint Reduction
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Computer bugs; Concurrent computing; Instruction sets; Programming;
   Message systems; Systematics; Sun; Concurrency bug detection; constraint
   solving; coverage criteria; thread-safe class
ID RACE; EFFICIENT; CONCURRENCY
AB Testing multi-threaded programs is challenging due to the enormous space of thread interleavings. Recently, a code coverage criterion for multi-threaded programs called MAP-coverage has been proposed and shown to be effective for testing concurrent programs. Existing approaches for achieving high MAP-coverage are based on random testing with simple heuristics, which is ineffective in systematically triggering rare thread interleavings. In this study, we propose a novel approach called pattern constraint reduction (PCR), which employs optimized constraint solving to generate thread interleavings for high MAP-coverage. The idea is to iteratively encode and solve path conditions to generate thread interleavings which are guaranteed to improve MAP-coverage. Furthermore, we effectively apply interpolation techniques to reduce the efforts of constraint solving by avoiding solving infeasible constraints. The experiment results on 20 benchmark programs show that our approach complements existing random testing based approaches when there are rare failure-inducing interleaving in the whole search space. Specifically, PCR finds concurrency bugs faster in 18 out of 20 programs, with an average speedup of 4.2x and a maximum speedup of 11.4x.
C1 [Zhao, Yingquan; Wang, Zan; Liu, Shuang; Chen, Junjie] Tianjin Univ, Coll Intelligence & Comp, Tianjin 300072, Peoples R China.
   [Sun, Jun] Singapore Management Univ, Sch Informat Syst, Singapore 188065, Singapore.
   [Chen, Xiang] Nantong Univ, Sch Informat Sci & Technol, Nantong 226007, Peoples R China.
C3 Tianjin University; Singapore Management University; Nantong University
RP Liu, S (corresponding author), Tianjin Univ, Coll Intelligence & Comp, Tianjin 300072, Peoples R China.
EM zhaoyingquan@tju.edu.cn; wangzan@tju.edu.cn; shuang.liu@tju.edu.cn;
   junsun@smu.edu.sg; junjiechen@tju.edu.cn; xchencs@ntu.edu.cn
RI Zhao, Yingquan/HGU-0447-2022; Chen, Junjie/ABE-8685-2020; Chen,
   Xiang/AAG-3663-2019
OI Zhao, Yingquan/0000-0003-2998-1052; Chen, Junjie/0000-0003-4509-2271;
   Chen, Xiang/0000-0002-1180-3891; Liu, Shuang/0000-0001-8766-7235; Sun,
   Jun/0000-0002-3545-1392
FU National Natural Science Foundation of China [61872263, U1836214,
   61802275, 62002256]; Singapore Ministry of Education Research Found
   [MOE2016-T2-2-123]
FX This work was supported in part by the National Natural Science
   Foundation of China under Grants 61872263, U1836214, 61802275, and
   62002256 and in part by the Singapore Ministry of Education Research
   Found under Grant MOE2016-T2-2-123
CR Abdulla P, 2014, ACM SIGPLAN NOTICES, V49, P373, DOI 10.1145/2535838.2535845
   Albert E, 2017, LECT NOTES COMPUT SC, V10426, P526, DOI 10.1007/978-3-319-63387-9_26
   Aronis S, 2018, LECT NOTES COMPUT SC, V10806, P229, DOI 10.1007/978-3-319-89963-3_14
   asm, ASM BYT MAN AN FRAM
   Baldoni R, 2018, ACM COMPUT SURV, V51, DOI 10.1145/3182657
   Bianchi FA, 2018, IEEE T SOFTWARE ENG, V44, P747, DOI 10.1109/TSE.2017.2707089
   Burckhardt S, 2010, ACM SIGPLAN NOTICES, V45, P167, DOI 10.1145/1735971.1736040
   Cadar C., 2008, Proceedings of the 8th USENIX conference on Operating systems design and implementation, OSDI'08, (USA), P209
   Cai Y, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P706, DOI 10.1145/3338906.3338927
   Castellini C, 2003, ARTIF INTELL, V147, P85, DOI 10.1016/S0004-3702(02)00375-2
   Choi JD, 2002, ACM SIGPLAN NOTICES, V37, P258, DOI 10.1145/543552.512560
   Choudhary A, 2017, PROC INT CONF SOFTW, P266, DOI 10.1109/ICSE.2017.32
   de Moura L, 2008, LECT NOTES COMPUT SC, V4963, P337, DOI 10.1007/978-3-540-78800-3_24
   Elmas T., 2006, MSRTR2005118 MICR CO
   Elmas T, 2007, ACM SIGPLAN NOTICES, V42, P245, DOI 10.1145/1273442.1250762
   Engler D., 2003, Operating Systems Review, V37, P237, DOI 10.1145/1165389.945468
   Farzan A., 2013, Proceedings of the 2013 9th Joint Meeting on Foundations of Software Engineering, P37
   Farzan A., 2014, PROC SOFTW ENG FACHT, P101
   Flanagan C, 2009, ACM SIGPLAN NOTICES, V44, P121, DOI 10.1145/1543135.1542490
   Gligoric M, 2015, ACM T SOFTW ENG METH, V24, DOI 10.1145/2660767
   Goetz B, 2006, JAVA CONCURRENCY PRA
   Huang J., 2015, STATELESS MODEL CHEC, P165
   Huang J, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P609, DOI 10.1145/3180155.3180225
   Huang J, 2016, J COMPUT SCI TECH-CH, V31, P861, DOI 10.1007/s11390-016-1669-8
   Huang J, 2015, ACM SIGPLAN NOTICES, V50, P165, DOI [10.1145/2737924.2737975, 10.1145/2813885.2737975]
   Huang J, 2013, ACM SIGPLAN NOTICES, V48, P141, DOI 10.1145/2499370.2462167
   Joshi P, 2009, ACM SIGPLAN NOTICES, V44, P110, DOI 10.1145/1543135.1542489
   Khoshnood Sepideh, 2015, P 2015 INT S SOFTW E, P165
   Krena Bohuslav., 2011, P 6 INT C RUNTIME VE, P177, DOI DOI 10.1007/978-3-642-29860-814
   Lin HR, 2018, IEEE INT CONF AUTOM, P589, DOI 10.1145/3238147.3238198
   Liu S, 2016, IEEE INT C ENG COMP, P219, DOI [10.1109/ICECCS.2016.038, 10.1109/ICECCS.2016.32]
   Log4j1, US
   Lu K, 2015, 23RD EUROMICRO INTERNATIONAL CONFERENCE ON PARALLEL, DISTRIBUTED, AND NETWORK-BASED PROCESSING (PDP 2015), P78, DOI 10.1109/PDP.2015.19
   Machado N, 2016, ACM T SOFTW ENG METH, V25, DOI 10.1145/2885495
   MAZURKIEWICZ A, 1987, LECT NOTES COMPUT SC, V255, P279
   Musuvathi M., 2008, P 8 USENIX C OP SYST
   Nguyen HTT, 2018, LECT NOTES COMPUT SC, V10982, P354, DOI 10.1007/978-3-319-96142-2_22
   Nishiyama H., 2004, Virtual Machine Research and Technology Symposium, P127
   Noonan E., 2014, SIGSOFT Softw. Eng. Notes, V39, P1
   Park C.-S., 2008, FSE, P135
   Park S, 2015, SOFTW TEST VERIF REL, V25, P167, DOI 10.1002/stvr.1523
   Perkovic D, 1996, PROCEEDINGS OF THE SECOND SYMPOSIUM ON OPERATING SYSTEMS DESIGN AND IMPLEMENTATION (OSDI '96), P47, DOI 10.1145/248155.238760
   Pozniansky E, 2007, CONCURR COMP-PRACT E, V19, P327, DOI 10.1002/cpe.1064
   Pradel M, 2012, ACM SIGPLAN NOTICES, V47, P521, DOI 10.1145/2345156.2254126
   Said M, 2011, LECT NOTES COMPUT SC, V6617, P313, DOI 10.1007/978-3-642-20398-5_23
   Samak M, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P131, DOI 10.1145/2786805.2786874
   Samak M, 2015, ACM SIGPLAN NOTICES, V50, P175, DOI [10.1145/2737924.2737998, 10.1145/2813885.2737998]
   Samak M, 2014, ACM SIGPLAN NOTICES, V49, P473, DOI [10.1145/2714064.2660238, 10.1145/2660193.2660238]
   Savage S, 1997, ACM T COMPUT SYST, V15, P391, DOI 10.1145/269005.266641
   Schemmel D, 2020, LECT NOTES COMPUT SC, V12224, P376, DOI 10.1007/978-3-030-53288-8_18
   Sen K., 2007, P 22 IEEE ACM INT C, P323, DOI [DOI 10.1145/1321631.1321679, 10.1145/1321631.1321679]
   Sen K, 2008, ACM SIGPLAN NOTICES, V43, P11, DOI 10.1145/1379022.1375584
   Sen K, 2006, LECT NOTES COMPUT SC, V4144, P419
   Staats Matt, 2010, 2 INT S NASA FORM ME, P161
   Steenbuck S, 2013, 2013 IEEE SIXTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST 2013), P144, DOI 10.1109/ICST.2013.33
   Terragni V, 2016, PROC INT CONF SOFTW, P1121, DOI 10.1145/2884781.2884876
   Vaziri M, 2006, ACM SIGPLAN NOTICES, V41, P334, DOI 10.1145/1111320.1111067
   von Praun C, 2003, ACM SIGPLAN NOTICES, V38, P115, DOI 10.1145/780822.781145
   von Praun C, 2001, ACM SIGPLAN NOTICES, V36, P70, DOI 10.1145/504311.504288
   Wang C, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P221, DOI 10.1145/1985793.1985824
   WILCOXON F, 1945, BIOMETRICS BULL, V1, P80, DOI 10.1093/jee/39.2.269
   Yang C.-S. D., 1998, Software Engineering Notes, V23, P153, DOI 10.1145/271775.271804
   Yu JJ, 2012, PROCEEDINGS OF THE ASME TURBO EXPO 2012, VOL 7, PTS A AND B, P485, DOI 10.1145/2398857.2384651
   Yu Y., 2005, P 20 ACM S OP SYST P, P221
   Zan Wang, 2019, 2019 34th IEEE/ACM International Conference on Automated Software Engineering (ASE). Proceedings, P722, DOI 10.1109/ASE.2019.00073
   Zheng L, 2018, 27TH INTERNATIONAL CONFERENCE ON PARALLEL ARCHITECTURES AND COMPILATION TECHNIQUES (PACT 2018), DOI 10.1145/3243176.3243206
NR 66
TC 2
Z9 2
U1 0
U2 0
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JAN 1
PY 2023
VL 49
IS 1
BP 99
EP 112
DI 10.1109/TSE.2022.3144480
PG 14
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA L1HD8
UT WOS:001020827200005
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Bai, JJ
   Chen, QL
   Jiang, ZM
   Lawall, J
   Hu, SM
AF Bai, Jia-Ju
   Chen, Qiu-Liang
   Jiang, Zu-Ming
   Lawall, Julia
   Hu, Shi-Min
TI Hybrid Static-Dynamic Analysis of Data Races Caused by Inconsistent
   Locking Discipline in Device Drivers
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Data race; inconsistent locking discipline; device driver; static
   analysis; dynamic analysis
ID EFFICIENT
AB Data races are often hard to detect in device drivers. According to our study of Linux driver patches that fix data races, about 39% of patches involve a pattern that we call inconsistent locking discipline. Specifically, if a variable is accessed within two concurrently executed functions, the sets of locks held around each access are disjoint, at least one of the locksets is non-empty, and at least one of the involved accesses is a write, then a data race may occur. In this paper, we present a hybrid static-dynamic analysis approach, named SDILP, to detect data races caused by inconsistent locking discipline in device drivers. SDILP has a dynamic lockset analysis to detect data races at runtime, and a static lockset analysis to detect more data races based on the dynamic-analysis results. It also performs a static taint analysis to reduce the number of variable accesses monitored by the dynamic analysis. Compared to our previous dynamic approach DILP (Chen et al., 2019), introducing static analysis allows SDILP to achieve better performance and find more data races. We evaluate SDILP on 12 drivers in Linux 5.4, and find 117 real data races, 50 of which have been confirmed by driver developers.
C1 [Bai, Jia-Ju; Chen, Qiu-Liang; Jiang, Zu-Ming; Hu, Shi-Min] Tsinghua Univ, Dept Comp Sci & Technol, Beijing 100084, Peoples R China.
   [Lawall, Julia] Inria, F-75012 Paris, France.
C3 Tsinghua University; Inria
RP Bai, JJ (corresponding author), Tsinghua Univ, Dept Comp Sci & Technol, Beijing 100084, Peoples R China.
EM baijiaju@tsinghua.edu.cn; chenql16@mails.tsinghua.edu.cn;
   jzm18@mails.tsinghua.edu.cn; julia.lawall@inria.fr;
   shimin@tsinghua.edu.cn
RI Hu, Shi-Min/AAW-1952-2020
CR Anderson Z, 2008, PLDI'08: PROCEEDINGS OF THE 2008 SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN & IMPLEMENTATION, P149, DOI 10.1145/1375581.1375600
   [Anonymous], 2007, P 22 IEEE ACM INT C, DOI [DOI 10.1145/1321631.1321719, 10.1145/1321631.1321719]
   [Anonymous], 2017, KERNELSTRIDER DETECT
   [Anonymous], 2019, RAZZER REPOSITORY
   [Anonymous], 2021, NETPERF BENCHMARK
   [Anonymous], 2021, PATCHWORK FFMPEG
   [Anonymous], 2007, P THE 6 JOINT M EUR
   [Anonymous], 2021, LOCKING LINUX KERNEL
   [Anonymous], 2021, KCSAN CONCURRENCY SA
   [Anonymous], 2021, CLANG COMPILER
   [Anonymous], 2021, PATCHWORK LINUX NFS
   [Anonymous], 2021, DATA RACE
   [Anonymous], 2021, HELGRIND ATHREAD ERR
   [Anonymous], 2021, PATCHWORK QEMU
   [Anonymous], FUZZING
   [Anonymous], 2021, PATCHWORK LINUX KERN
   Arnold M, 2001, ACM SIGPLAN NOTICES, V36, P168, DOI 10.1145/381694.378832
   Bai J.-J., 2018, PROC INT S CODE GENE, P288
   Bai JJ, 2019, PROCEEDINGS OF THE 2019 USENIX ANNUAL TECHNICAL CONFERENCE, P255
   Bai JJ, 2018, J SYST SOFTWARE, V137, P463, DOI 10.1016/j.jss.2017.06.004
   Blackshear S, 2018, P ACM PROGRAM LANG, V2, DOI 10.1145/3276514
   Bond MD, 2010, ACM SIGPLAN NOTICES, V45, P255, DOI 10.1145/1809028.1806626
   Cai Y, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P810, DOI 10.1145/2950290.2950310
   Chen QL, 2019, 2019 IEEE 26TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER), P366, DOI [10.1109/SANER.2019.8668017, 10.1109/saner.2019.8668017]
   Choi JD, 2002, ACM SIGPLAN NOTICES, V37, P258, DOI 10.1145/543552.512560
   CONG K., 2015, P 2015 INT S SOFTWAR, P361
   Deligiannis P, 2015, IEEE INT CONF AUTOM, P166, DOI 10.1109/ASE.2015.30
   Elmas T, 2007, ACM SIGPLAN NOTICES, V42, P245, DOI 10.1145/1273442.1250762
   Engler D., 2003, Operating Systems Review, V37, P237, DOI 10.1145/1165389.945468
   Erickson J., 2010, OSDI, P1
   Flanagan C, 2001, ACM SIGPLAN NOTICES, P90
   Flanagan C, 2000, ACM SIGPLAN NOTICES, V35, P219, DOI 10.1145/358438.349328
   Flanagan C, 2009, PLDI'09 PROCEEDINGS OF THE 2009 ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P121, DOI 10.1145/1542476.1542490
   Fonseca P, 2011, EUROSYS 11: PROCEEDINGS OF THE EUROSYS 2011 CONFERENCE, P215
   Jeong DR, 2019, P IEEE S SECUR PRIV, P754, DOI 10.1109/SP.2019.00017
   Jiang YY, 2016, J SUPERCOMPUT, V72, P1645, DOI 10.1007/s11227-016-1691-1
   Kadav A, 2012, ASPLOS XVII: SEVENTEENTH INTERNATIONAL CONFERENCE ON ARCHITECTURAL SUPPORT FOR PROGRAMMING LANGUAGES AND OPERATING SYSTEMS, P87
   Kahlon V, 2007, LECT NOTES COMPUT SC, V4590, P226
   Kahlon V, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P13, DOI 10.1145/1595696.1595701
   Kasikci B, 2012, ASPLOS XVII: SEVENTEENTH INTERNATIONAL CONFERENCE ON ARCHITECTURAL SUPPORT FOR PROGRAMMING LANGUAGES AND OPERATING SYSTEMS, P185
   Keul S, 2011, IEEE INT WORK C SO, P45, DOI 10.1109/SCAM.2011.16
   LAMPORT L, 1978, COMMUN ACM, V21, P558, DOI 10.1145/359545.359563
   Lochmann A, 2019, PROCEEDINGS OF THE FOURTEENTH EUROSYS CONFERENCE 2019 (EUROSYS '19), DOI 10.1145/3302424.3303948
   Lu S, 2008, ACM SIGPLAN NOTICES, V43, P329, DOI 10.1145/1353536.1346323
   Lu S, 2012, IEEE T SOFTWARE ENG, V38, P844, DOI 10.1109/TSE.2011.35
   Lu S, 2012, IEEE T PARALL DISTR, V23, P1060, DOI 10.1109/TPDS.2011.254
   Marino D, 2009, ACM SIGPLAN NOTICES, V44, P134, DOI 10.1145/1543135.1542491
   Naik M, 2006, ACM SIGPLAN NOTICES, V41, P308, DOI 10.1145/1133981.1134018
   Narayanasamy S, 2007, ACM SIGPLAN NOTICES, V42, P22, DOI 10.1145/1273442.1250738
   Park C.-S., 2011, Proceedings of 2011 International Conference for High Performance Computing, Networking, Storage and Analysis, P51
   Pozniansky E, 2003, ACM SIGPLAN NOTICES, V38, P178, DOI 10.1145/966049.781529
   Pratikakis P, 2006, ACM SIGPLAN NOTICES, V41, P320, DOI 10.1145/1133981.1134019
   Prvulovic M, 2003, CONF PROC INT SYMP C, P110, DOI 10.1109/ISCA.2003.1206993
   Rajagopalan AK, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P914, DOI 10.1145/2786805.2803209
   Raman R, 2012, ACM SIGPLAN NOTICES, V47, P531, DOI [10.1145/2345156.2254127, 10.1145/2345156.1993502]
   ROSENBERG HA, 1993, FTCS-23 - TWENTY-THIRD INTERNATIONAL SYMPOSIUM ON FAULT-TOLERANT COMPUTING : DIGEST OF PAPERS, P208, DOI 10.1109/FTCS.1993.627324
   Ryzhyk L., 2010, P 1 ACM ASIA PACIFIC, P25, DOI [DOI 10.1145/1851276.1851283, 10.1145/1851276.1851283]
   Ryzhyk L, 2009, EUROSYS'09: PROCEEDINGS OF THE FOURTH EUROSYS CONFERENCE, P275
   Sack P., 2006, Proceedings of the 1st Workshop on Architectural and System Support for Improving Software Dependability, ASID '06, P34
   Said M, 2011, LECT NOTES COMPUT SC, V6617, P313, DOI 10.1007/978-3-642-20398-5_23
   Sasturkar Amit., 2005, PPOPP 05, P83, DOI DOI 10.1145/1065944.1065956
   Savage S, 1997, ACM T COMPUT SYST, V15, P391, DOI 10.1145/269005.266641
   Shacham O., 2005, PPoPP, P107
   Smaragdakis Y, 2012, POPL 12: PROCEEDINGS OF THE 39TH ANNUAL ACM SIGPLAN-SIGACT SYMPOSIUM ON PRINCIPLES OF PROGRAMMING LANGUAGES, P387
   Sui YL, 2016, INT SYM CODE GENER, P160, DOI 10.1145/2854038.2854043
   Tan L, 2014, EMPIR SOFTW ENG, V19, P1665, DOI 10.1007/s10664-013-9258-8
   Vojdani V, 2016, IEEE INT CONF AUTOM, P391, DOI 10.1145/2970276.2970337
   von Praun C, 2001, ACM SIGPLAN NOTICES, V36, P70, DOI 10.1145/504311.504288
   Wang HJ, 2018, PROCEEDINGS OF THE 2018 USENIX ANNUAL TECHNICAL CONFERENCE, P561
   Xie XW, 2013, SOFTWARE PRACT EXPER, V43, P543, DOI 10.1002/spe.2121
   Yu TT, 2016, PROC INT CONF SOFTW, P583, DOI 10.1145/2884781.2884866
   Zhang L, 2017, PROC INT CONF SOFTW, P278, DOI 10.1109/ICSE.2017.33
   Zhou P, 2007, INT S HIGH PERF COMP, P121
NR 73
TC 2
Z9 2
U1 0
U2 4
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD DEC 1
PY 2022
VL 48
IS 12
BP 5120
EP 5135
DI 10.1109/TSE.2021.3138735
PG 16
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 6X8ON
UT WOS:000896667600020
OA Bronze
DA 2024-07-18
ER

PT J
AU Martin, H
   Acher, M
   Pereira, JA
   Lesoil, L
   Jézéquel, JM
   Khelladi, DE
AF Martin, Hugo
   Acher, Mathieu
   Pereira, Juliana Alves
   Lesoil, Luc
   Jezequel, Jean-Marc
   Khelladi, Djamel Eddine
TI Transfer Learning Across Variants and Versions: The Case of Linux Kernel
   Size
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Software product line; software evolution; machine learning; transfer
   learning; performance prediction
ID PERFORMANCE PREDICTION; COEVOLUTION
AB With large scale and complex configurable systems, it is hard for users to choose the right combination of options (i.e., configurations) in order to obtain the wanted trade-off between functionality and performance goals such as speed or size. Machine learning can help in relating these goals to the configurable system options, and thus, predict the effect of options on the outcome, typically after a costly training step. However, many configurable systems evolve at such a rapid pace that it is impractical to retrain a new model from scratch for each new version. In this paper, we propose a new method to enable transfer learning of binary size predictions among versions of the same configurable system. Taking the extreme case of the Linux kernel with its 14,500$approximate to 14,500 configuration options, we first investigate how binary size predictions of kernel size degrade over successive versions. We show that the direct reuse of an accurate prediction model from 2017 quickly becomes inaccurate when Linux evolves, up to a 32% mean error by August 2020. We thus propose a new approach for transfer evolution-aware model shifting (tEAMS). It leverages the structure of a configurable system to transfer an initial predictive model towards its future versions with a minimal amount of extra processing for each version. We show that tEAMS vastly outperforms state of the art approaches over the 3 years history of Linux kernels, from 4.13 to 5.8.
C1 [Martin, Hugo; Acher, Mathieu; Lesoil, Luc; Jezequel, Jean-Marc; Khelladi, Djamel Eddine] Univ Rennes, IRISA, CNRS, INRIA, F-35000 Rennes, France.
   [Acher, Mathieu] Inst Univ France IUF, F-75005 Paris, France.
   [Pereira, Juliana Alves] Pontificia Univ Catolica Rio de Janeiro, BR-22541041 Rio de Janeiro, RJ, Brazil.
C3 Universite de Rennes; Centre National de la Recherche Scientifique
   (CNRS); Inria; Institut Universitaire de France
RP Martin, H (corresponding author), Univ Rennes, IRISA, CNRS, INRIA, F-35000 Rennes, France.
EM hugo.martin@irisa.fr; mathieu.acher@irisa.fr; jpereira@inf.puc-rio.br;
   luc.lesoil@irisa.fr; jean-marc.jezequel@irisa.fr;
   djamel-eddine.khelladi@irisa.fr
RI Jezequel, Jean-Marc/AAF-3854-2019
OI Jezequel, Jean-Marc/0000-0002-0582-9745; Acher,
   Mathieu/0000-0003-1483-3858; Alves Pereira, Juliana/0000-0002-0799-2829;
   Martin, Hugo/0000-0002-6093-2358; Lesoil, Luc/0000-0002-8967-8154
FU  [ANR-17-CE25-0010-01]
FX This research was supported by the ANR-17-CE25-0010-01 VaryVary Project.
CR Abal I., 2014, Proceedings of the 29th ACM/IEEE International Conference on Automated Software Engineering, ASE '14, P421
   Abal I, 2018, ACM T SOFTW ENG METH, V26, DOI 10.1145/3149119
   Acher M., 2019, LEARNING THOUSANDS B
   Acher M., 2019, RES REP INRIA RENNES
   Alipourfard O, 2017, PROCEEDINGS OF NSDI '17: 14TH USENIX SYMPOSIUM ON NETWORKED SYSTEMS DESIGN AND IMPLEMENTATION, P469
   [Anonymous], 2020, OpenCV
   [Anonymous], 2020, KERNELCI
   [Anonymous], 2020, LINUX KERNEL TINIFIC
   [Anonymous], 2019, DISAPPOINTING DIRECT
   [Anonymous], 2020, KAFKA
   [Anonymous], 2020, GCC
   [Anonymous], 2015, PROC 19 INT C SOFTW, DOI DOI 10.1145/2791060.2791101
   [Anonymous], 2020, Apache Cassandra
   [Anonymous], 2020, CURL
   [Anonymous], 2020, Clang
   Bao L, 2018, IEEE INT CONF AUTOM, P29, DOI 10.1145/3238147.3238175
   Bezemer CP, 2017, EMPIR SOFTW ENG, V22, P3117, DOI 10.1007/s10664-017-9510-8
   Buitinck L, 2013, ECML PKDD WORKSH LAN, P108, DOI DOI 10.48550/ARXIV.1309.0238
   Chakraborty Supratik, 2015, Tools and Algorithms for the Construction and Analysis of Systems. 21st International Conference, TACAS 2015, held as part of the European Joint Conferences on Theory and Practice of Software, ETAPS 2015. Proceedings: LNCS 9035, P304, DOI 10.1007/978-3-662-46681-0_25
   Chakraborty Supratik, 2013, Computer Aided Verification. 25th International Conference, CAV 2013. Proceedings. LNCS 8044, P608, DOI 10.1007/978-3-642-39799-8_40
   Chen H., 2012, U.S. Patent, Patent No. 8315960
   Chen HW, 2021, IEEE T SOFTWARE ENG, V47, P2803, DOI 10.1109/TSE.2020.2968520
   Chen JY, 2019, IEEE ACCESS, V7, P8901, DOI 10.1109/ACCESS.2018.2890733
   Dai Wenyuan, 2007, P 24 INT C MACHINE L, P193
   Day Oscar, 2017, Journal of Big Data, V4, DOI 10.1186/s40537-017-0089-0
   Dintzner N, 2018, EMPIR SOFTW ENG, V23, P905, DOI 10.1007/s10664-017-9557-6
   Dintzner N, 2017, SOFTW SYST MODEL, V16, P55, DOI 10.1007/s10270-015-0472-2
   Dutra R, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P549, DOI 10.1145/3180155.3180248
   Guo JM, 2019, SOFTW SYST MODEL, V18, P1447, DOI 10.1007/s10270-017-0610-0
   Guo JM, 2018, EMPIR SOFTW ENG, V23, P1826, DOI 10.1007/s10664-017-9573-6
   Guo JM, 2013, IEEE INT CONF AUTOM, P301, DOI 10.1109/ASE.2013.6693089
   Iqbal MS, 2019, PROCEEDINGS OF THE 2019 USENIX CONFERENCE ON OPERATIONAL MACHINE LEARNING, P43
   Jamshidi Pooyan, 2017, 2017 IEEE/ACM 12th International Symposium on Software Engineering for Adaptive and Self-Managing Systems (SEAMS). Proceedings, P31, DOI 10.1109/SEAMS.2017.11
   Jamshidi P, 2019, 2019 IEEE/ACM 14TH INTERNATIONAL SYMPOSIUM ON SOFTWARE ENGINEERING FOR ADAPTIVE AND SELF-MANAGING SYSTEMS (SEAMS 2019), P39, DOI 10.1109/SEAMS.2019.00015
   Jamshidi P, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P71, DOI 10.1145/3236024.3236074
   Jamshidi P, 2017, IEEE INT CONF AUTOM, P497, DOI 10.1109/ASE.2017.8115661
   Kaltenecker C, 2019, PROC INT CONF SOFTW, P1084, DOI 10.1109/ICSE.2019.00112
   Kocaguneli E, 2015, EMPIR SOFTW ENG, V20, P813, DOI 10.1007/s10664-014-9300-5
   Kocher P, 2019, P IEEE S SECUR PRIV, P1, DOI 10.1109/SP.2019.00002
   Kolesnikov S, 2019, SOFTW SYST MODEL, V18, P2265, DOI 10.1007/s10270-018-0662-9
   Krishna R, 2021, IEEE T SOFTWARE ENG, V47, P2956, DOI 10.1109/TSE.2020.2983927
   Krishna R, 2016, IEEE INT CONF AUTOM, P122, DOI 10.1145/2970276.2970339
   Kuo HC, 2020, P ACM MEAS ANAL COMP, V4, DOI 10.1145/3379469
   Lawall J, 2018, PROCEEDINGS OF THE 2018 USENIX ANNUAL TECHNICAL CONFERENCE, P601
   Lawall J, 2017, I C DEPEND SYS NETWO, P357, DOI 10.1109/DSN.2017.62
   Li ZQ, 2018, AUTOMAT SOFTW ENG, V25, P201, DOI 10.1007/s10515-017-0220-7
   Lipp M, 2018, PROCEEDINGS OF THE 27TH USENIX SECURITY SYMPOSIUM, P973
   Lotufo R, 2010, LECT NOTES COMPUT SC, V6287, P136, DOI 10.1007/978-3-642-15579-6_10
   Lu Lanyue., 2013, Proceedings of the 11th USENIX Conference on File and Storage Technologies, FAST'13, P31
   Martin H, 2021, SPLC '21: PROCEEDINGS OF THE 25TH ACM INTERNATIONAL SYSTEMS AND SOFTWARE PRODUCT LINE CONFERENCE, VOL A, DOI 10.1145/3461001.3471155
   Melo J, 2016, TENTH INTERNATIONAL WORKSHOP ON VARIABILITY MODELLING OF SOFTWARE-INTENSIVE SYSTEMS (VAMOS 2016), P3, DOI 10.1145/2866614.2866615
   Molnar Christoph, 2022, Interpretable Machine Learning: A Guide for Making Black Box Models Explainable
   Mühlbauer S, 2020, IEEE INT CONF AUTOM, P611, DOI 10.1145/3324884.3416573
   Nadi S, 2015, IEEE T SOFTWARE ENG, V41, P820, DOI 10.1109/TSE.2015.2415793
   Nadi S, 2013, IEEE WORK CONF MIN S, P111, DOI 10.1109/MSR.2013.6624017
   Nair V, 2020, IEEE T SOFTWARE ENG, V46, P794, DOI 10.1109/TSE.2018.2870895
   Nair V, 2018, AUTOMAT SOFTW ENG, V25, P247, DOI 10.1007/s10515-017-0225-2
   Nair V, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P257, DOI 10.1145/3106237.3106238
   Nam J, 2018, IEEE T SOFTWARE ENG, V44, P874, DOI 10.1109/TSE.2017.2720603
   Nam J, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P382, DOI 10.1109/ICSE.2013.6606584
   Opdenacker M., 2018, EMBEDDED LINUX C N A
   Pan SJ, 2010, IEEE T KNOWL DATA EN, V22, P1345, DOI 10.1109/TKDE.2009.191
   Passos L, 2021, IEEE T SOFTWARE ENG, V47, P146, DOI 10.1109/TSE.2018.2884911
   Passos L, 2016, EMPIR SOFTW ENG, V21, P1744, DOI 10.1007/s10664-015-9364-x
   Pereira JA, 2021, J SYST SOFTWARE, V182, DOI 10.1016/j.jss.2021.111044
   Pereira JA, 2020, PROCEEDINGS OF THE ACM/SPEC INTERNATIONAL CONFERENCE ON PERFORMANCE ENGINEERING (ICPE'20), P277, DOI 10.1145/3358960.3379137
   Petkovich J., 2017, P 8 ACM SPEC INT C P, P39, DOI [10.1145/3030207.3030216, DOI 10.1145/3030207.3030216]
   Plazar Q, 2019, IEEE INT CONF SOFTW, P240, DOI 10.1109/ICST.2019.00032
   Prout A, 2018, IEEE HIGH PERF EXTR
   Ren XJ, 2019, PROCEEDINGS OF THE TWENTY-SEVENTH ACM SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES (SOSP '19), P554, DOI 10.1145/3341301.3359640
   Safdar SA, 2017, PROCEEDINGS OF THE 2017 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE (GECCO'17), P1319, DOI 10.1145/3071178.3071261
   Sarkar A, 2015, IEEE INT CONF AUTOM, P342, DOI 10.1109/ASE.2015.45
   Sharifloo AM, 2016, PROCEEDINGS OF 2016 IEEE/ACM 11TH INTERNATIONAL SYMPOSIUM ON SOFTWARE ENGINEERING FOR ADAPTIVE AND SELF-MANAGING SYSTEMS (SEAMS), P158, DOI [10.1109/SEAMS.2016.026, 10.1145/2897053.2897058]
   Siegmund N., 2011, Proceedings of the 2011 15th International Software Product Line Conference (SPLC 2011), P160, DOI 10.1109/SPLC.2011.20
   Siegmund N, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P268, DOI 10.1145/3106237.3106251
   Siegmund N, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P284, DOI 10.1145/2786805.2786845
   Siegmund N, 2012, SOFTWARE QUAL J, V20, P487, DOI 10.1007/s11219-011-9152-9
   Siegmund N, 2012, PROC INT CONF SOFTW, P167, DOI 10.1109/ICSE.2012.6227196
   Temple P, 2017, IEEE SOFTWARE, V34, P64, DOI 10.1109/MS.2017.4121211
   Temple Paul, 2016, P 20 INT SYST SOFTW, P209
   Tibshirani R, 1996, J ROY STAT SOC B, V58, P267, DOI 10.1111/j.2517-6161.1996.tb02080.x
   TKernelNewbies, 2019, LINUX 54
   Torvalds L, 1999, COMMUN ACM, V42, P38, DOI 10.1145/299157.299165
   Valov P, 2020, PROCEEDINGS OF THE ACM/SPEC INTERNATIONAL CONFERENCE ON PERFORMANCE ENGINEERING (ICPE'20), P12, DOI 10.1145/3358960.3379127
   Van Aken D, 2017, SIGMOD'17: PROCEEDINGS OF THE 2017 ACM INTERNATIONAL CONFERENCE ON MANAGEMENT OF DATA, P1009, DOI 10.1145/3035918.3064029
   Velez M, 2021, PROC INT CONF SOFTW, P1072, DOI 10.1109/ICSE43902.2021.00100
   Velez M, 2020, AUTOMAT SOFTW ENG, V27, P265, DOI 10.1007/s10515-020-00273-8
   Wang AL, 2020, IEEE ACCESS, V8, P32989, DOI 10.1109/ACCESS.2020.2973924
   Wang XZ, 2014, PR MACH LEARN RES, V32, P1305
   Weber M, 2021, PROC INT CONF SOFTW, P1059, DOI 10.1109/ICSE43902.2021.00099
   Weiss Karl, 2016, Journal of Big Data, V3, DOI 10.1186/s40537-016-0043-6
   Xiong YF, 2012, PROC INT CONF SOFTW, P58, DOI 10.1109/ICSE.2012.6227206
   Yao Y, 2010, PROC CVPR IEEE, P1855, DOI 10.1109/CVPR.2010.5539857
   Zhang W, 2021, Arxiv, DOI arXiv:2009.00909
   Zhang Y., 2016, SOC PETROLEUM ENG, P2, DOI [DOI 10.2118/182285-MS, 10.1145/2934466.2934469, DOI 10.1145/2934466.2934469]
   Zhou MH, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P27, DOI 10.1145/3106237.3106287
NR 96
TC 9
Z9 9
U1 1
U2 3
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD NOV 1
PY 2022
VL 48
IS 11
BP 4274
EP 4290
DI 10.1109/TSE.2021.3116768
PG 17
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 6C4JD
UT WOS:000881981800003
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Tang, YX
   Jiang, H
   Zhou, ZD
   Li, XC
   Ren, ZL
   Kong, WQ
AF Tang, Yixuan
   Jiang, He
   Zhou, Zhide
   Li, Xiaochen
   Ren, Zhilei
   Kong, Weiqiang
TI Detecting Compiler Warning Defects Via Diversity-Guided Program Mutation
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Compiler testing; differential testing; program mutation; test program
   generation
AB Compiler diagnostic warnings help developers identify potential programming mistakes during program compilation. However, these warnings could be erroneous due to the defects of compiler warning diagnostics. Although the existing technique (i.e., Epiphron) can automatically generate test programs for compiler warning defect detection, the effectiveness of Epiphron on defect-finding is still limited, due to the limitation for generating warning-sensitive test program structures. Therefore, in this paper, we propose a DIversity-guided PROgram Mutation approach, called DIPROM, to construct diverse warning-sensitive programs for effective compiler warning defect detection. Given a seed test program, DIPROM first removes its dead code to reduce false positive warning defects. Then, the abstract syntax tree (AST) of the test program is constructed; DIPROM iteratively mutates the structures of the AST to generate warning-sensitive program variants. To effectively construct diverse warning-sensitive structures, DIPROM applies a novel diversity-guided strategy to generate program variants in each iteration. With the generated program variants, differential testing is conducted to detect warning defects in different compilers. In the experiments, we evaluate DIPROM with two popular C compilers (i.e., GCC and Clang). Experimental results show that DIPROM significantly outperforms three state-of-the-art approaches (i.e., HiCOND, Epiphron, and Hermes) by up to 18.93%similar to 76.74% in terms of the bug-finding capability on average. Meanwhile, DIPROM is efficient, which spends less time on finding the same average number of warning defects. We at last applied DIPROM to the latest development versions of GCC and Clang. After two months' running, we reported 8 new warning defects; 5 of them have been confirmed/fixed by developers.
C1 [Tang, Yixuan; Jiang, He; Zhou, Zhide; Kong, Weiqiang] Key Lab Ubiquitous Net work & Serv Software Liaon, Dalian 116024, Liaoning, Peoples R China.
   [Tang, Yixuan; Jiang, He; Zhou, Zhide; Li, Xiaochen; Ren, Zhilei; Kong, Weiqiang] Dalian Univ Technol, Sch Software, Dalian 116024, Liaoning, Peoples R China.
   [Jiang, He] DUT, Artificial Intelligence Inst, Dalian, Liaoning, Peoples R China.
   [Li, Xiaochen] Univ Luxembourg, SnT Ctr Secur Reliabil & Trust, L-4365 Esch Sur Alzette, Luxembourg.
C3 Dalian University of Technology; Dalian University of Technology;
   University of Luxembourg
RP Jiang, H (corresponding author), Dalian Univ Technol, Sch Software, Dalian 116024, Liaoning, Peoples R China.; Jiang, H (corresponding author), DUT, Artificial Intelligence Inst, Dalian, Liaoning, Peoples R China.
EM tangyixuan@mail.dlut.edu.cn; jianghe@dlut.edu.cn; cszide@gmail.com;
   xiaochen.li@uni.lu; zren@dlut.edu.cn; wqkong@dlut.edu.cn
FU National Natural Science Foundation of China [62032004, 61772107,
   62072068]
FX This work was supported in part by the National Natural Science
   Foundation of China under Grants 62032004, 61772107, and 62072068.
CR ACE, 2021, SUPERTEST COMP TEST
   Aftandilian E., 2012, 2012 12th IEEE Working Conference on Source Code Analysis and Manipulation (SCAM 2012), P14, DOI 10.1109/SCAM.2012.28
   Allain A., 2019, WHY BOTHER COMPILER
   Anderson JL, 2005, IEEE INSTRU MEAS MAG, V8, P34, DOI 10.1109/MIM.2005.1502445
   [Anonymous], 2021, Wikipedia
   [Anonymous], 2019, CLANG BUG 18905
   Arcuri A, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1, DOI 10.1145/1985793.1985795
   Chen JJ, 2021, IEEE T SOFTWARE ENG, V47, P261, DOI 10.1109/TSE.2018.2889771
   Chen JJ, 2020, ACM COMPUT SURV, V53, DOI 10.1145/3363562
   Chen JJ, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P305, DOI 10.1109/ASE.2019.00037
   Chen JJ, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P223, DOI 10.1145/3338906.3338957
   Chen JJ, 2017, PROC INT CONF SOFTW, P700, DOI 10.1109/ICSE.2017.70
   Chen JJ, 2016, PROC INT CONF SOFTW, P180, DOI 10.1145/2884781.2884878
   Chen Y, 2013, ACM SIGPLAN NOTICES, V48, P197, DOI 10.1145/2499370.2462173
   Chen YT, 2019, PROC INT CONF SOFTW, P1257, DOI 10.1109/ICSE.2019.00127
   Chen YT, 2016, ACM SIGPLAN NOTICES, V51, P85, DOI [10.1145/2980983.2908095, 10.1145/2908080.2908095]
   Fischer A, 2015, PATTERN RECOGN, V48, P331, DOI 10.1016/j.patcog.2014.07.015
   GCC developers, 2021, GCC TESTS
   Grieco G, 2016, ACM SIGPLAN NOTICES, V51, P13, DOI [10.1145/2976002.2976017, 10.1145/3241625.2976017]
   Grieco G, 2017, J SYST SOFTWARE, V134, P340, DOI 10.1016/j.jss.2017.09.018
   Hadavi MA, 2008, ARES 2008: PROCEEDINGS OF THE THIRD INTERNATIONAL CONFERENCE ON AVAILABILITY, SECURITY AND RELIABILITY, P866, DOI 10.1109/ARES.2008.200
   Han W, 2018, 25TH ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2018), DOI 10.14722/ndss.2018.23312
   Hauke J, 2011, QUAEST GEOGR, V30, P87, DOI 10.2478/v10117-011-0021-1
   Howard MA, 2006, IEEE SECUR PRIV, V4, P74, DOI 10.1109/MSP.2006.84
   Jiang H, 2019, IEEE T RELIAB, V68, P2, DOI 10.1109/TR.2018.2873427
   Le V, 2015, ACM SIGPLAN NOTICES, V50, P386, DOI [10.1145/2814270.2814319, 10.1145/2858965.2814319]
   Le Vu, 2015, P 2015 INT S SOFTW T, P327, DOI DOI 10.1145/2771783.2771785
   Lindig C., 2005, AADEBUG, P3
   LLVM developers, 2021, LLVM TEST INFR GUID
   McKeeman William M., 1998, DIGIT TECH J, V10, P100
   McPeak S., 2021, BERKELEY DELTA
   Nagai E., 2012, WORKSH SYNTH SYST IN, P48
   Nagai E, 2014, IPSJ T SYSTEM LSI DE, V7, P91, DOI DOI 10.2197/IPSJTSLDM.7.91
   Nayyar A., 2014, INT J COMPUT APPL, V104, P25
   Nielson F., 1999, Principles of Program Analysis
   Perennial, 2021, PER VAL SUIT C C
   Pflanzer M., 2016, P 4 INT WORKSH OPENC, P1, DOI DOI 10.1145/2909437.2909439
   Plum Hall Inc, 2021, PLUM HALL VAL SUIT C
   Regehr J, 2012, ACM SIGPLAN NOTICES, V47, P335, DOI 10.1145/2345156.2254104
   Sheridan F, 2007, SOFTWARE PRACT EXPER, V37, P1475, DOI 10.1002/spe.812
   Sun CN, 2016, PROC INT CONF SOFTW, P203, DOI 10.1145/2884781.2884879
   Sun CN, 2016, ACM SIGPLAN NOTICES, V51, P849, DOI 10.1145/3022671.2984038
   Sun Chengnian, 2016, P 25 INT S SOFTW TES, P294, DOI DOI 10.1145/2931037.2931074
   Tang YX, 2020, FRONT COMPUT SCI-CHI, V14, P1, DOI 10.1007/s11704-019-8231-0
   Le V, 2014, ACM SIGPLAN NOTICES, V49, P216, DOI [10.1145/2666356.2594334, 10.1145/2594291.2594334]
   Yang XJ, 2011, PLDI 11: PROCEEDINGS OF THE 2011 ACM CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P283
   Yoshikawa T, 2003, THIRD INTERNATIONAL CONFERENCE ON QUALITY SOFTWARE, PROCEEDINGS, P20, DOI 10.1109/QSIC.2003.1319081
   Zeller A, 2002, IEEE T SOFTWARE ENG, V28, P183, DOI 10.1109/32.988498
   Zhang QR, 2017, ACM SIGPLAN NOTICES, V52, P347, DOI [10.1145/3062341.3062379, 10.1145/3140587.3062379]
   Zhao C, 2009, 2009 ICSE WORKSHOP ON AUTOMATION OF SOFTWARE TEST, P36, DOI 10.1109/IWAST.2009.5069039
   Zou WQ, 2019, EMPIR SOFTW ENG, V24, P3871, DOI 10.1007/s10664-019-09720-x
NR 51
TC 8
Z9 8
U1 0
U2 7
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD NOV 1
PY 2022
VL 48
IS 11
BP 4411
EP 4432
DI 10.1109/TSE.2021.3119186
PG 22
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 6C4JD
UT WOS:000881981800010
DA 2024-07-18
ER

PT J
AU Newman, CD
   Decker, MJ
   Alsuhaibani, RS
   Peruma, A
   Mkaouer, MW
   Mohapatra, S
   Vishnoi, T
   Zampieri, M
   Sheldon, TJ
   Hill, E
AF Newman, Christian D.
   Decker, Michael J.
   Alsuhaibani, Reem S.
   Peruma, Anthony
   Mkaouer, Mohamed Wiem
   Mohapatra, Satyajit
   Vishnoi, Tejal
   Zampieri, Marcos
   Sheldon, Timothy J.
   Hill, Emily
TI An Ensemble Approach for Annotating Source Code Identifiers With
   Part-of-Speech Tags
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Grammar; Tagging; Natural languages; Tools; Annotations; Software
   engineering; Semantics; Program comprehension; software maintenance;
   natural language processing; part-of-speech tagging
AB This paper presents an ensemble part-of-speech tagging approach for source code identifiers. Ensemble tagging is a technique that uses machine-learning and the output from multiple part-of-speech taggers to annotate natural language text at a higher quality than the part-of-speech taggers are able to obtain independently. Our ensemble uses three state-of-the-art part-of-speech taggers: SWUM, POSSE, and Stanford. We study the quality of the ensemble's annotations on five different types of identifier names: function, class, attribute, parameter, and declaration statement at the level of both individual words and full identifier names. We also study and discuss the weaknesses of our tagger to promote the future amelioration of these problems through further research. Our results show that the ensemble achieves 75 percent accuracy at the identifier level and 84-86 percent accuracy at the word level. This is an increase of +17% points at the identifier level from the closest independent part-of-speech tagger.
C1 [Newman, Christian D.; Peruma, Anthony; Mkaouer, Mohamed Wiem; Mohapatra, Satyajit; Vishnoi, Tejal] Rochester Inst Techonol, Software Engn Deptartment, Rochester, NY 14623 USA.
   [Decker, Michael J.] Bowling Green State Univ, Software Engn Dept, Bowling Green, OH 43403 USA.
   [Alsuhaibani, Reem S.] Prince Sultan Univ, Comp Sci Dept, Riyadh 12435, Saudi Arabia.
   [Zampieri, Marcos] Rochester Inst Techonol, Language Technol Grp, Rochester, NY 14623 USA.
   [Sheldon, Timothy J.] BNY Mellon, Financial Serv Sect, Risk & Compliance, Pittburgh, PA 15258 USA.
   [Hill, Emily] Drew Univ, Dept Math & Comp Sci, Madison, NJ 07940 USA.
C3 University System of Ohio; Bowling Green State University; Prince Sultan
   University; Drew University
RP Newman, CD (corresponding author), Rochester Inst Techonol, Software Engn Deptartment, Rochester, NY 14623 USA.
EM cnewman@se.rit.edu; mdecke@bgsu.edu; rsuhaibani@psu.edu.sa;
   axp6201@rit.edu; mwmvse@rit.edu; sm6571@rit.edu; tv4466@rit.edu;
   mazgla@rit.edu; TimJSheldon509@gmail.com; emhill@drew.edu
RI Mkaouer, Mohamed Wiem/N-7476-2017; Newman, Christian/AAU-1059-2020;
   Alsuhaibani, Dr. Reem/KFA-9599-2024
OI Mkaouer, Mohamed Wiem/0000-0001-6010-7561; Newman,
   Christian/0000-0002-8838-4074; Decker, Michael/0000-0001-8505-1517;
   Peruma, Anthony/0000-0003-2585-657X
FU National Science Foundation [1850412]; Division of Computing and
   Communication Foundations; Direct For Computer & Info Scie & Enginr
   [1850412] Funding Source: National Science Foundation
FX This work was supported by the National Science Foundation under Grant
   1850412. We would also like to thank Aidan White for initial help with
   the manual-annotation effort.
CR Abebe Surafel Lemma, 2010, Proceedings of the 18th IEEE International Conference on Program Comprehension (ICPC 2010), P156, DOI 10.1109/ICPC.2010.29
   Albon C., 2018, Machine learning with python cookbook: Practical solutions from preprocessing to deep learning
   AlOmar EA, 2021, EXPERT SYST APPL, V167, DOI 10.1016/j.eswa.2020.114176
   [Anonymous], 2006, ANN PSYCH PROGR WORK
   [Anonymous], 1987, Cytometry, DOI DOI 10.1002/CYTO.990080516
   Arnaoudova V, 2014, IEEE T SOFTWARE ENG, V40, P502, DOI 10.1109/TSE.2014.2312942
   Arnaoudova V, 2013, EUR CON SFTWR MTNCE, P187, DOI 10.1109/CSMR.2013.28
   Binkley D, 2011, Proceedings of the Working Conference on Mining Software Repositories (MSR), P203
   Binkley D, 2018, EMPIR SOFTW ENG, V23, P2398, DOI 10.1007/s10664-017-9566-5
   Breiman L, 2001, MACH LEARN, V45, P5, DOI 10.1023/A:1010933404324
   Butler S., 2011, 2011 IEEE 27th International Conference on Software Maintenance, P93, DOI 10.1109/ICSM.2011.6080776
   Butler S, 2015, INT C PROGRAM COMPRE, P196, DOI 10.1109/ICPC.2015.30
   Butler S, 2009, WORK CONF REVERSE EN, P31, DOI 10.1109/WCRE.2009.50
   Butler S, 2010, EUR CON SFTWR MTNCE, P156, DOI 10.1109/CSMR.2010.27
   Caprile B, 2000, PROC IEEE INT CONF S, P97, DOI 10.1109/ICSM.2000.883022
   Caprile C., 1999, Sixth Working Conference on Reverse Engineering (Cat. No.PR00303), P112, DOI 10.1109/WCRE.1999.806952
   Collard ML, 2016, PROC IEEE INT CONF S, P649, DOI 10.1109/ICSME.2016.36
   CORBI TA, 1989, IBM SYST J, V28, P294, DOI 10.1147/sj.282.0294
   Dangeti P., 2017, STAT MACHINE LEARNIN
   Deissenboeck F, 2006, SOFTWARE QUAL J, V14, P261, DOI 10.1007/s11219-006-9219-1
   DellOrletta F., 2009, Proc. EVALITA, V9, P1
   Dragan N, 2006, PROC IEEE INT CONF S, P24
   Fisher M, 2006, PROC IEEE INT CONF S, P289
   Fry ZP, 2008, IET SOFTW, V2, P27, DOI 10.1049/iet-sen:20070112
   Gupta S, 2013, CONF PROC INT SYMP C, P3, DOI 10.1109/ICPC.2013.6613828
   Hill E, 2010, Ph.D. dissertation
   Hill E., 2008, P 2008 INT WORKING C, P79
   Hill E, 2014, EMPIR SOFTW ENG, V19, P1754, DOI 10.1007/s10664-013-9261-0
   Hill E, 2009, PROC INT CONF SOFTW, P232, DOI 10.1109/ICSE.2009.5070524
   Host E.W., 2011, DOKTORAVHANDLING
   Host EW, 2007, SEVENTH IEEE INTERNATIONAL WORKING CONFERENCE ON SOURCE CODE ANALYSIS AND MANIPULATION, PROCEEDINGS, P193, DOI 10.1109/SCAM.2007.18
   Host EW, 2011, LECT NOTES COMPUT SC, V6563, P226, DOI 10.1007/978-3-642-19440-5_14
   Host EW, 2009, LECT NOTES COMPUT SC, V5653, P294, DOI 10.1007/978-3-642-03013-0_14
   Host EW, 2009, LECT NOTES COMPUT SC, V5452, P322, DOI 10.1007/978-3-642-00434-6_20
   Jongeling R, 2017, EMPIR SOFTW ENG, V22, P2543, DOI 10.1007/s10664-016-9493-x
   Liu KW, 2019, IEEE C ELEC DEVICES, DOI 10.1109/edssc.2019.8754036
   Manning C.D., 1999, FDN STAT NATURAL LAN
   Martin R. C., 2008, Clean Code: A Handbook of Agile Software Craftsmanship
   MILLER GA, 1995, COMMUN ACM, V38, P39, DOI 10.1145/219717.219748
   Moore D. H., 1984, CLASSIFICATION REGRE, P358
   Newman CD, 2020, J SYST SOFTWARE, V170, DOI 10.1016/j.jss.2020.110740
   Newman CD, 2019, PROC IEEE INT CONF S, P269, DOI 10.1109/ICSME.2019.00040
   Nguyen S, 2020, PROC INT CONF SOFTW, P1372, DOI 10.1145/3377811.3380926
   Olney W, 2016, PROC IEEE INT CONF S, P483, DOI 10.1109/ICSME.2016.80
   Pârtachi PP, 2020, PROC INT CONF SOFTW, P1348, DOI 10.1145/3377811.3380440
   Peruma A, 2021, INT C PROGRAM COMPRE, P335, DOI 10.1109/ICPC52881.2021.00039
   Peruma A, 2020, J SYST SOFTWARE, V169, DOI 10.1016/j.jss.2020.110704
   Peruma A, 2019, IEEE INT WORK C SO, P74, DOI 10.1109/SCAM.2019.00017
   Peruma Anthony, 2018, P 2 INT W REF MONTP, P26, DOI DOI 10.1145/3242163.3242169
   Roy D, 2020, INT C PROGRAM COMPRE, P25, DOI 10.1145/3387904.3389255
   Shepherd D., 2007, P 6 INT C ASP OR SOF, P212, DOI 10.1145/1218563.1218587
   SIMONYI C, 1991, BYTE, V16, P131
   Singer J, 2008, EIGHTH IEEE INTERNATIONAL WORKING CONFERENCE ON SOURCE CODE ANALYSIS AND MANIPULATION, PROCEEDINGS, P67, DOI 10.1109/SCAM.2008.23
   Toutanova K, 2000, PROCEEDINGS OF THE 2000 JOINT SIGDAT CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING AND VERY LARGE CORPORA, P63, DOI 10.3115/1117794.1117802
   von Mayrhauser A., 1997, Empirical Studies of Programmers: Seventh Workshop. Papers presented at the Seventh Workshop on Empirical Studies of Programmers, P157, DOI 10.1145/266399.266414
   Wu JW, 2020, J SYST SOFTWARE, V168, DOI 10.1016/j.jss.2020.110639
   Zhang BW, 2016, IEEE INT CONF AUTOM, P625, DOI 10.1145/2970276.2970342
   Zhang BW, 2015, IEEE INT CONF AUTOM, P506, DOI 10.1109/ASE.2015.68
NR 58
TC 3
Z9 3
U1 0
U2 4
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD SEPT 1
PY 2022
VL 48
IS 9
BP 3506
EP 3522
DI 10.1109/TSE.2021.3098242
PG 17
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 4O3GR
UT WOS:000854591500017
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Prana, GAA
   Ford, D
   Rastogi, A
   Lo, D
   Purandare, R
   Nagappan, N
AF Prana, Gede Artha Azriadi
   Ford, Denae
   Rastogi, Ayushi
   Lo, David
   Purandare, Rahul
   Nagappan, Nachiappan
TI Including Everyone, Everywhere: Understanding Opportunities and
   Challenges of Geographic Gender-Inclusion in OSS
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Gender issues; Software development management; Open source software;
   Software engineering; Europe; Toy manufacturing industry; Industries;
   Inclusion; OSS; software engineering; empirical studies; GitHub;
   diversity; gender; geographic regions
ID SOFTWARE; MOTIVATIONS; PROJECTS
AB The gender gap is a significant concern facing the software industry as the development becomes more geographically distributed. Widely shared reports indicate that gender differences may be specific to each region. However, how complete can these reports be with little to no research reflective of the Open Source Software (OSS) process and communities software is now commonly developed in? Our study presents a multi-region geographical analysis of gender inclusion on GitHub. This mixed-methods approach includes quantitatively investigating differences in gender inclusion in projects across geographic regions and investigate these trends over time using data from contributions to 21,456 project repositories. We also qualitatively understand the unique experiences of developers contributing to these projects through a survey that is strategically targeted to developers in various regions worldwide. Our findings indicate that gender diversity is low across all parts of the world, with no substantial difference across regions. However, there has been statistically significant improvement in diversity worldwide since 2014, with certain regions such as Africa improving at faster pace. We also find that most motivations and barriers to contributions (e.g., lack of resources to contribute and poor working environment) were shared across regions, however, some insightful differences, such as how to make projects more inclusive, did arise. From these findings, we derive and present implications for tools that can foster inclusion in open source software communities and empower contributions from everyone, everywhere.
C1 [Prana, Gede Artha Azriadi; Lo, David] Singapore Management Univ, Sch Comp & Informat Syst, Singapore 188065, Singapore.
   [Ford, Denae] Microsoft Res, Software Anal & Intelligence, Redmond, WA 98052 USA.
   [Rastogi, Ayushi] Univ Groningen, Fac Sci & Engn, NL-9712 Groningen, Netherlands.
   [Purandare, Rahul] Indraprastha Inst Informat Technol, Comp Sci & Engn, Delhi 110020, India.
   [Nagappan, Nachiappan] Microsoft Res, Testing Verificat & Measurement Res, Redmond, WA 98052 USA.
C3 Singapore Management University; Microsoft; University of Groningen;
   Indraprastha Institute of Information Technology Delhi; Microsoft
RP Prana, GAA (corresponding author), Singapore Management Univ, Sch Comp & Informat Syst, Singapore 188065, Singapore.
EM arthaprana.2016@phdcs.smu.edu.sg; denae@microsoft.com; a.rastogi@rug.nl;
   davidlo@smu.edu.sg; purandare@iiitd.ac.in; nnagappan@acm.org
RI Lo, David/A-2493-2012
OI Lo, David/0000-0002-4367-7201; Rastogi, Ayushi/0000-0002-0939-6887;
   Purandare, Rahul/0000-0001-8677-0601; Ford, Denae/0000-0003-0654-4335;
   Prana, Gede Artha Azriadi/0000-0003-3759-5661
FU Research Lab for Intelligent Software Engineering (RISE) Operational
   Fund from the School of Computing and Information Systems (SCIS) at
   Singapore Management University
FX We would like to thank our survey respondents for providing the
   irperspectives for this study. This research was supported by and the
   Research Lab for Intelligent Software Engineering (RISE) Operational
   Fund from the School of Computing and Information Systems (SCIS) at
   Singapore Management University (SMU).
CR Abati A., 2017, MADE NIGERIA
   Abdi H, 2007, ENCY MEASUREMENT STA, P103, DOI DOI 10.4135/9781412952644
   Barcomb A, 2019, PROC INT CONF SOFTW, P948, DOI 10.1109/ICSE.2019.00100
   Beecham S, 2008, INFORM SOFTWARE TECH, V50, P860, DOI 10.1016/j.infsof.2007.09.004
   Blau P. M., 1977, INEQUALITY HETEROGEN
   Borsotti V, 2018, PROC INT CONF SOFTW, P146, DOI 10.1145/3183377.3183390
   Bosu A, 2019, INT SYMP EMP SOFTWAR, P295
   Brodsky Z., 2018, 7 CHINESE OPEN SOURC
   Camilo F, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P269, DOI 10.1109/MSR.2015.32
   Campbell JL, 2013, SOCIOL METHOD RES, V42, P294, DOI 10.1177/0049124113500475
   Canedo ED., 2020, P 14 ACM IEEE INT S, DOI [10.1145/3382494.3410682, DOI 10.1145/3382494.3410682]
   Casalnuovo C, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P817, DOI 10.1145/2786805.2786854
   Catolino G, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN SOCIETY (ICSE-SEIS 2019), P11, DOI 10.1109/ICSE-SEIS.2019.00010
   Cliff N., 2014, Ordinal Methods for Behavioral Data Analysis
   Cramer H., 1946, Methods of Mathematical Statistics
   Creswell J.W., 2009, RES DESIGN
   DAGOSTINO RB, 1990, AM STAT, V44, P316, DOI 10.2307/2684359
   Debian, 2019, DEB PROGR
   DuBow W., 2018, NCWIT Scorecard: The status of women in technology
   E. Commission, 2018, INCR GEND GAP DIG SE
   Ehmke C.A., 2014, CONTRIBUTOR COVENANT
   Ford D, 2019, 2019 IEEE/ACM 2ND INTERNATIONAL WORKSHOP ON GENDER EQUALITY IN SOFTWARE ENGINEERING (GE 2019), P9, DOI 10.1109/GE.2019.00011
   Ford D, 2017, S VIS LANG HUM CEN C, P239, DOI 10.1109/VLHCC.2017.8103473
   Ford D, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P846, DOI 10.1145/2950290.2950331
   Franca A. Cesar C., 2011, 15th Annual Conference on Evaluation & Assessment in Software Engineering (EASE 2011), P154, DOI 10.1049/ic.2011.0019
   França C, 2020, IEEE T SOFTWARE ENG, V46, P118, DOI 10.1109/TSE.2018.2842201
   Gerosa M, 2021, PROC INT CONF SOFTW, P1046, DOI 10.1109/ICSE43902.2021.00098
   GitHub, 2021, EXPL GITHUB
   GitHub, 2020, GITHUB MIL TIM SIGN
   Hahn J, 2008, INFORM SYST RES, V19, P369, DOI 10.1287/isre.1080.0192
   Hamidi F, 2018, PROCEEDINGS OF THE 2018 CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS (CHI 2018), DOI 10.1145/3173574.3173582
   Hars A, 2002, INT J ELECTRON COMM, V6, P25
   Holman L, 2018, PLOS BIOL, V16, DOI 10.1371/journal.pbio.2004956
   Hopkins WG, 2002, Sportscience, V502, P321
   Ibe NA, 2018, SIGCSE'18: PROCEEDINGS OF THE 49TH ACM TECHNICAL SYMPOSIUM ON COMPUTER SCIENCE EDUCATION, P711, DOI 10.1145/3159450.3159594
   Imtiaz N, 2019, PROC INT CONF SOFTW, P700, DOI 10.1109/ICSE.2019.00079
   Jonsson L, 2016, EMPIR SOFTW ENG, V21, P1533, DOI 10.1007/s10664-015-9401-9
   Kalliamvakou E., 2014, P 11 WORKING C MININ, P92, DOI DOI 10.1145/2597073.2597074
   Karimi F, 2016, PROCEEDINGS OF THE 25TH INTERNATIONAL CONFERENCE ON WORLD WIDE WEB (WWW'16 COMPANION), P53, DOI 10.1145/2872518.2889385
   Kelly T., 2016, World Development Report 2016 Digital Dividends
   Keyes Os, 2018, Proceedings of the ACM on Human-Computer Interaction, V2, DOI 10.1145/3274357
   Kulkarni A., 2018, P 23 ANN ACM C INNOV, P236
   Lakhani K. R., 2003, 442503 MIT
   Lee A, 2019, PROC INT CONF SOFTW, P677, DOI 10.1109/ICSE.2019.00077
   Lee A, 2017, PROC INT CONF SOFTW, P187, DOI 10.1109/ICSE.2017.25
   Lee S, 2021, IEEE T SOFTWARE ENG, V47, P653, DOI 10.1109/TSE.2019.2901459
   Liu C, 2018, IEEE ACCESS, V6, P52082, DOI 10.1109/ACCESS.2018.2869207
   MANN HB, 1947, ANN MATH STAT, V18, P50, DOI 10.1214/aoms/1177730491
   Matek T, 2016, Arxiv, DOI [arXiv:1602.02594, 10.48550/arXiv.1602.02594, DOI 10.48550/ARXIV.1602.02594]
   McBurney P. W., 2014, P 22 INT C PROGRAM C, P279
   Mendez C, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1004, DOI 10.1145/3180155.3180241
   Moreno L, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P484, DOI 10.1145/2635868.2635870
   Oliveira N, 2016, PROCEEDINGS OF THE NORDICHI '16: THE 9TH NORDIC CONFERENCE ON HUMAN-COMPUTER INTERACTION - GAME CHANGING DESIGN, DOI 10.1145/2971485.2971520
   Ortu Marco, 2017, Journal of Software Engineering Research and Development, V5, DOI 10.1186/s40411-017-0044-y
   Prana GAA, 2019, EMPIR SOFTW ENG, V24, P1296, DOI 10.1007/s10664-018-9660-3
   Raghuram P., WOMEN IT SCORECARD I
   Rankin Yolanda A, 2019, Interactions, V26, P64, DOI [DOI 10.1145/3363033, 10.1145/3363033]
   Rastogi A, 2018, PROCEEDINGS OF THE 12TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT (ESEM 2018), DOI 10.1145/3239235.3240504
   Rheingans P, 2018, SIGCSE'18: PROCEEDINGS OF THE 49TH ACM TECHNICAL SYMPOSIUM ON COMPUTER SCIENCE EDUCATION, P459, DOI 10.1145/3159450.3159533
   Roberts JA, 2006, MANAGE SCI, V52, P984, DOI 10.1287/mnsc.1060.0554
   Robles G, 2016, IFIP ADV INF COMM TE, V472, P163, DOI 10.1007/978-3-319-39225-7_13
   Russell PH, 2018, PLOS ONE, V13, DOI 10.1371/journal.pone.0205898
   Saldana J., 2016, CODING MANUAL QUALIT, DOI DOI 10.1017/CBO9781107415324.004
   Santamaría L, 2018, PEERJ COMPUT SCI, DOI 10.7717/peerj-cs.156
   Singh V, 2019, 13TH EUROPEAN CONFERENCE ON SOFTWARE ARCHITECTURE (ECSA 2019), VOL 2, P94, DOI 10.1145/3344948.334968
   Singh V, 2019, IFIP ADV INF COMM TE, V556, P68, DOI 10.1007/978-3-030-20883-7_7
   Steinmacher I, 2016, PROC INT CONF SOFTW, P273, DOI 10.1145/2884781.2884806
   Steinmacher I, 2015, PROCEEDINGS OF THE 2015 ACM INTERNATIONAL CONFERENCE ON COMPUTER-SUPPORTED COOPERATIVE WORK AND SOCIAL COMPUTING (CSCW'15), P1379, DOI 10.1145/2675133.2675215
   Terrell J, 2017, PEERJ COMPUT SCI, DOI 10.7717/peerj-cs.111
   Thomas EG, 2019, JAMA NETW OPEN, V2, DOI 10.1001/jamanetworkopen.2019.13682
   Trinkenreich Bianca, 2020, Proceedings of the ACM on Human-Computer Interaction, V4, DOI 10.1145/3415251
   Vachovsky M.E., 2016, PROC 47 ACM TECH, P303, DOI DOI 10.1145/2839509.2844620
   Vasilescu B, 2015, CHI 2015: PROCEEDINGS OF THE 33RD ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, P3789, DOI 10.1145/2702123.2702549
   Vasilescu B, 2015, 2015 IEEE/ACM 8TH INTERNATIONAL WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING CHASE 2015, P50, DOI 10.1109/CHASE.2015.14
   Vasilescu B, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P514, DOI 10.1109/MSR.2015.77
   Virtanen P, 2020, NAT METHODS, V17, P261, DOI 10.1038/s41592-019-0686-2
   von Krogh G, 2012, MIS QUART, V36, P649
   Zhang T, 2017, INT C PROGRAM COMPRE, P230, DOI 10.1109/ICPC.2017.28
   Zhou SR, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P105, DOI 10.1145/3180155.3180205
   Zlotnick F., 2017, Github open source survey 2017
   Zou WQ, 2020, IEEE T SOFTWARE ENG, V46, P836, DOI 10.1109/TSE.2018.2870414
NR 81
TC 3
Z9 3
U1 0
U2 2
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD SEPT 1
PY 2022
VL 48
IS 9
BP 3394
EP 3409
DI 10.1109/TSE.2021.3092813
PG 16
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 4O3GR
UT WOS:000854591500011
OA Green Submitted, Green Accepted, Green Published
DA 2024-07-18
ER

PT J
AU Digkas, G
   Chatzigeorgiou, A
   Ampatzoglou, A
   Avgeriou, P
AF Digkas, George
   Chatzigeorgiou, Alexander
   Ampatzoglou, Apostolos
   Avgeriou, Paris
TI Can Clean New Code Reduce Technical Debt Density?
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Open source software; Writing; Logic gates; Market research; Monitoring;
   Maintenance engineering; Technical debt; refactoring; clean code; case
   study
ID SMELLS; EVOLUTION; DESIGN
AB While technical debt grows in absolute numbers as software systems evolve over time, the density of technical debt (technical debt divided by lines of code) is reduced in some cases. This can be explained by either the application of refactorings or the development of new artifacts with limited Technical Debt. In this paper we explore the second explanation, by investigating the relation between the amount of Technical Debt in new code and the evolution of Technical Debt in the system. To this end, we compare the Technical Debt Density of new code with existing code, and we investigate which of the three major types of code changes (additions, deletions and modifications) is primarily responsible for changes in the evolution of Technical Debt density. Furthermore, we study whether there is a relation between code quality practices and the 'cleanness' of new code. To obtain the required data, we have performed a large-scale case study on twenty-seven open-source software projects by the Apache Software Foundation, analyzing 66,661 classes and 56,890 commits. The results suggest that writing "clean" (or at least "cleaner") new code can be an efficient strategy for reducing Technical Debt Density, and thus preventing software decay over time. The findings also suggest that projects adopting an explicit policy for quality improvement, e.g., through discussions on code quality in board meetings, are associated with a higher frequency of cleaner new code commits. Therefore, we champion the establishment of processes that monitor the density of Technical Debt of new code to control the accumulation of Technical Debt in a software system.
C1 [Digkas, George; Avgeriou, Paris] Univ Groningen, Inst Math & Comp Sci, NL-9712 CP Groningen, Netherlands.
   [Digkas, George; Chatzigeorgiou, Alexander; Ampatzoglou, Apostolos] Univ Macedonia, Dept Appl Informat, Thessaloniki 54636, Greece.
C3 University of Groningen; University of Macedonia
RP Ampatzoglou, A (corresponding author), Univ Macedonia, Dept Appl Informat, Thessaloniki 54636, Greece.
EM g.digkas@rug.nl; achat@uom.edu.gr; a.ampatzoglou@uom.edu.gr;
   p.avgeriou@rug.nl
RI Chatzigeorgiou, Alexandros/AAL-6077-2021
OI Avgeriou, Paris/0000-0002-7101-0754; Chatzigeorgiou,
   Alexander/0000-0002-5381-8418
FU European Union [780572, SDK4ED, 801015, EXA2PRO]
FX Work reported in this paper has received funding from the European
   Union's Horizon 2020 research and innovation programme under grant
   agreement No 780572 (project SDK4ED) and under grant agreement No 801015
   (project EXA2PRO).
CR Alshayeb M, 2009, INFORM SOFTWARE TECH, V51, P1319, DOI 10.1016/j.infsof.2009.04.002
   Alves NSR, 2016, INFORM SOFTWARE TECH, V70, P100, DOI 10.1016/j.infsof.2015.10.008
   Ampatzoglou A, 2016, INT WORKSH MANAG TEC, P9, DOI 10.1109/MTD.2016.8
   [Anonymous], 2012, CASE STUDY RES SOFTW, DOI DOI 10.1002/9781118181034
   [Anonymous], 2018, REFACTORING IMPROVIN
   Arcoverde R., 2011, WORKSH REF TOOLS, P33
   Avgeriou P., 2016, DAGSTUHL SEMINAR 161, V6
   Beyer S., 2017, AAUSERG2017002 U KLA
   Chatzigeorgiou A, 2014, INNOV SYST SOFTW ENG, V10, P3, DOI 10.1007/s11334-013-0205-z
   Chávez A, 2017, XXXI BRAZILIAN SYMPOSIUM ON SOFTWARE ENGINEERING (SBES 2017), P74, DOI 10.1145/3131151.3131171
   Dagenais B, 2011, ACM T SOFTW ENG METH, V20, DOI 10.1145/2000799.2000805
   Digkas G, 2017, LECT NOTES COMPUT SC, V10475, P51, DOI 10.1007/978-3-319-65831-5_4
   Du Bois B., 2003, InInternational Workshop on Evolution of Large-scale Industrial Software Applications, P37
   Falessi D, 2017, INT SYMP EMP SOFTWAR, P78, DOI 10.1109/ESEM.2017.14
   Falleri Jean-Remy, 2014, P 29 ACM IEEE INT C, P313
   Hassan AE, 2009, PROC INT CONF SOFTW, P78, DOI 10.1109/ICSE.2009.5070510
   Herraiz I., 2006, 10th European Conference on Software Maintenance and Reengineering
   Jaafar F, 2016, EMPIR SOFTW ENG, V21, P896, DOI 10.1007/s10664-015-9361-0
   Janus Andre, 2012, 2012 3rd International Workshop on Emerging Trends in Software Metrics (WETSoM), P9, DOI 10.1109/WETSoM.2012.6226998
   Lehman M. M., 1996, Software Process Technology. 5th European Workshop, EWSPT '96 Proceedings, P108, DOI 10.1007/BFb0017737
   Lehman MM, 1997, FOURTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM, PROCEEDINGS, P20, DOI 10.1109/METRIC.1997.637156
   Li ZY, 2015, J SYST SOFTWARE, V101, P193, DOI 10.1016/j.jss.2014.12.027
   Martin Robert C, 2009, Clean Code: a Handbook of Agile Software Craftsmanship
   Martini A, 2018, SCI COMPUT PROGRAM, V163, P42, DOI 10.1016/j.scico.2018.03.007
   Murphy-Hill E, 2012, IEEE T SOFTWARE ENG, V38, P5, DOI 10.1109/TSE.2011.41
   Olbrich S, 2009, INT SYMP EMP SOFTWAR, P391
   Pace L., 2012, Beginning R: an introduction to statistical programming
   Palomba F, 2018, IEEE T SOFTWARE ENG, V44, P977, DOI 10.1109/TSE.2017.2752171
   PARNAS DL, 1994, PROC INT CONF SOFTW, P279, DOI 10.1109/ICSE.1994.296790
   Peters R, 2012, EUR CON SFTWR MTNCE, P411, DOI 10.1109/CSMR.2012.79
   Potvin R, 2016, COMMUN ACM, V59, P78, DOI 10.1145/2854146
   Rausch T, 2017, IEEE WORK CONF MIN S, P345, DOI 10.1109/MSR.2017.54
   Sadowski C, 2018, COMMUN ACM, V61, P58, DOI 10.1145/3188720
   Schermann G, 2016, 2016 IEEE 24TH INTERNATIONAL CONFERENCE ON PROGRAM COMPREHENSION (ICPC)
   Stroggylos K., 2007, P 5 INT WORKSH SOFTW, P10, DOI [10.1109/WOSQ.2007.11, DOI 10.1109/WOSQ.2007.11]
   Suryanarayana G, 2015, IEEE SOFTWARE, V32, P7, DOI 10.1109/MS.2015.87
   Tan J, 2018, BENEVOL, P43
   Tufano M, 2017, IEEE T SOFTWARE ENG, V43, P1063, DOI 10.1109/TSE.2017.2653105
   Tufano M, 2016, IEEE INT CONF AUTOM, P4, DOI 10.1145/2970276.2970340
   Vassallo C, 2018, IEEE INT CONF AUTOM, P790, DOI 10.1145/3238147.3240729
   Wilking D., 2007, E-INFORMATICA, V1, P27
   Wohlin C., 2012, Experimentation in Software Engineering
   Xing ZC, 2005, IEEE T SOFTWARE ENG, V31, P850, DOI 10.1109/TSE.2005.106
   Yamashita A, 2013, WORK CONF REVERSE EN, P242, DOI 10.1109/WCRE.2013.6671299
   Yli-Huumo J, 2016, J SYST SOFTWARE, V120, P195, DOI 10.1016/j.jss.2016.05.018
NR 45
TC 12
Z9 12
U1 0
U2 8
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAY 1
PY 2022
VL 48
IS 5
BP 1705
EP 1721
DI 10.1109/TSE.2020.3032557
PG 17
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 1I8CJ
UT WOS:000797454000016
OA Green Submitted, Green Published
DA 2024-07-18
ER

PT J
AU Krishna, R
   Tang, C
   Sullivan, K
   Ray, B
AF Krishna, Rahul
   Tang, Chong
   Sullivan, Kevin
   Ray, Baishakhi
TI ConEx: Efficient Exploration of Big-Data System Configurations for
   Better Performance
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Big Data; Software systems; Machine learning; Markov processes; Monte
   Carlo methods; Predictive models; Performance optimization; MCMC; SBSE;
   machine learning
ID PREDICTION; GENERATION; MODEL
AB Configuration space complexity makes the big-data software systems hard to configure well. Consider Hadoop, with over nine hundred parameters, developers often just use the default configurations provided with Hadoop distributions. The opportunity costs in lost performance are significant. Popular learning-based approaches to auto-tune software does not scale well for big-data systems because of the high cost of collecting training data. We present a new method based on a combination of Evolutionary Markov Chain Monte Carlo (EMCMC) sampling and cost reduction techniques to find better-performing configurations for big data systems. For cost reduction, we developed and experimentally tested and validated two approaches: using scaled-up big data jobs as proxies for the objective function for larger jobs and using a dynamic job similarity measure to infer that results obtained for one kind of big data problem will work well for similar problems. Our experimental results suggest that our approach promises to improve the performance of big data systems significantly and that it outperforms competing approaches based on random sampling, basic genetic algorithms (GA), and predictive model learning. Our experimental results support the conclusion that our approach strongly demonstrates the potential to improve the performance of big data systems significantly and frugally.
C1 [Tang, Chong] Walmart Labs, Mountain View, CA 94040 USA.
   [Sullivan, Kevin] Univ Virginia, Dept Comp Sci, Charlottesville, VA 22904 USA.
   [Krishna, Rahul; Ray, Baishakhi] Columbia Univ, Dept Comp Sci, New York, NY 10027 USA.
C3 Wal-Mart Stores Inc; University of Virginia; Columbia University
RP Krishna, R (corresponding author), Columbia Univ, Dept Comp Sci, New York, NY 10027 USA.
EM i.m.ralk@gmail.com; ct4ew@virginia.edu; sullivan@virginia.edu;
   rayb@cs.columbia.edu
RI Krishna, Rahul/HJG-7915-2022
OI Tang, Chong/0000-0002-5215-8200
CR Akbari R., 2011, International J. of Industrial Eng. Computations, V2, P419, DOI DOI 10.5267/J.IJIEC.2010.03.002
   [Anonymous], 2002, Proceedings of the 2002 ACM/IEEE Conference on Supercomputing
   [Anonymous], 2011, CIDR
   [Anonymous], 2016, FEATURE ORIENTED SOF, DOI DOI 10.1007/978-3-642-37521-7
   Apel S, 2013, COMPUT NETW, V57, P2399, DOI 10.1016/j.comnet.2013.02.025
   Babu S., 2010, SoCC, P137, DOI DOI 10.1145/1807128.1807150
   Barras B., RAPPORT TECHNIQUEINR
   Bonifacio A. S., 2014, P INT C PARALLEL DIS, P1
   Chakraborty S, 2014, AAAI CONF ARTIF INTE, P1722
   Chen TY, 2004, LECT NOTES COMPUT SC, V3321, P320
   Gogate V, 2006, LECT NOTES COMPUT SC, V4204, P711
   Golovin D, 2017, KDD'17: PROCEEDINGS OF THE 23RD ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P1487, DOI 10.1145/3097983.3098043
   Goodman J, 2010, COMM APP MATH COM SC, V5, P65, DOI 10.2140/camcos.2010.5.65
   Guo JM, 2013, IEEE INT CONF AUTOM, P301, DOI 10.1109/ASE.2013.6693089
   Guyon I., 2003, Journal of Machine Learning Research, V3, P1157, DOI 10.1162/153244303322753616
   Ha H, 2019, PROC INT CONF SOFTW, P1095, DOI 10.1109/ICSE.2019.00113
   HASTINGS WK, 1970, BIOMETRIKA, V57, P97, DOI 10.1093/biomet/57.1.97
   Henard C, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P517, DOI 10.1109/ICSE.2015.69
   Holland I.H., 1975, ADAPTATION NATURAL A
   Huang SS, 2010, I C DATA ENGIN WORKS, P41, DOI 10.1109/ICDEW.2010.5452747
   Jamshidi Pooyan, 2017, 2017 IEEE/ACM 12th International Symposium on Software Engineering for Adaptive and Self-Managing Systems (SEAMS). Proceedings, P31, DOI 10.1109/SEAMS.2017.11
   Jia Y, 2009, INFORM SOFTWARE TECH, V51, P1379, DOI 10.1016/j.infsof.2009.04.016
   Jia Z, 2016, 2016 INTERNATIONAL CONFERENCE ON PARALLEL ARCHITECTURE AND COMPILATION TECHNIQUES (PACT), P387, DOI 10.1145/2967938.2967957
   Johansen Martin Fagereng, 2012, P 16 INT SOFTWARE PR, P46, DOI [10.1145/2362536.2362547, DOI 10.1145/2362536.2362547]
   Joshi ShrinivasB., 2012, Proceedings of the third joint WOSP/SIPEW International Con-ference on Performance Engineering, P241
   Kaltenecker C, 2019, PROC INT CONF SOFTW, P1084, DOI 10.1109/ICSE.2019.00112
   Kasick M. P., 2009, ADA512852 CARN U
   Khadke N., 2012, MAD, P1
   Le Goues C, 2012, PROC INT CONF SOFTW, P3, DOI 10.1109/ICSE.2012.6227211
   Le V, 2015, ACM SIGPLAN NOTICES, V50, P386, DOI [10.1145/2814270.2814319, 10.1145/2858965.2814319]
   Lee C, 2012, PROCEEDINGS OF THE 6TH INTERNATIONAL CONFERENCE ON APAC 2011
   Lei Y, 2008, SOFTW TEST VERIF REL, V18, P125, DOI 10.1002/stvr.381
   Liao GD, 2013, LECT NOTES COMPUT SC, V8097, P406, DOI 10.1007/978-3-642-40047-6_42
   Louviere JJ, 2011, J CHOICE MODEL, V4, P1
   Luo Q, 2017, EMPIR SOFTW ENG, V22, P6, DOI 10.1007/s10664-015-9413-5
   Marijan Dusica., 2013, Proceedings of the 17th International Software Product Line Conference. SPLC'13, P227, DOI DOI 10.1145/2491627.2491646
   McMinn P, 2004, SOFTW TEST VERIF REL, V14, P105, DOI 10.1002/stvr.294
   Meinicke J, 2016, IEEE INT CONF AUTOM, P483, DOI 10.1145/2970276.2970322
   METROPOLIS N, 1953, J CHEM PHYS, V21, P1087, DOI 10.1063/1.1699114
   Mishra N, 2015, ACM SIGPLAN NOTICES, V50, P267, DOI [10.1145/2694344.2694373, 10.1145/2775054.2694373]
   Nair V, 2020, IEEE T SOFTWARE ENG, V46, P794, DOI 10.1109/TSE.2018.2870895
   Nair V, 2018, AUTOMAT SOFTW ENG, V25, P247, DOI 10.1007/s10515-017-0225-2
   Nair V, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P257, DOI 10.1145/3106237.3106238
   Oh J, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P61, DOI 10.1145/3106237.3106273
   Pavlo A, 2009, ACM SIGMOD/PODS 2009 CONFERENCE, P165
   Ren K, 2013, PROC VLDB ENDOW, V6, P853, DOI 10.14778/2536206.2536213
   RITTER C, 1992, J AM STAT ASSOC, V87, P861, DOI 10.2307/2290225
   Sarkar A, 2015, IEEE INT CONF AUTOM, P342, DOI 10.1109/ASE.2015.45
   Sayyad AS, 2013, IEEE INT CONF AUTOM, P465, DOI 10.1109/ASE.2013.6693104
   Siegmund N, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P284, DOI 10.1145/2786805.2786845
   Siegmund N, 2012, PROC INT CONF SOFTW, P167, DOI 10.1109/ICSE.2012.6227196
   SRINIVAS M, 1994, COMPUTER, V27, P17, DOI 10.1109/2.294849
   Tang C., 2017, ARXIV171204982
   Tao Ye, 2003, Performance Evaluation Review, V31, P196, DOI 10.1145/885651.781052
   Tibbits MM, 2014, J COMPUT GRAPH STAT, V23, P543, DOI 10.1080/10618600.2013.791193
   Venkataraman S, 2016, 13TH USENIX SYMPOSIUM ON NETWORKED SYSTEMS DESIGN AND IMPLEMENTATION (NSDI '16), P363
   Weiss GM, 2008, DATA MIN KNOWL DISC, V17, P253, DOI 10.1007/s10618-007-0082-x
   White T., 2012, HADOOP DEFINITIVE GU
   WHITLEY D, 1994, STAT COMPUT, V4, P65, DOI 10.1007/BF00175354
   WHITTAKER JA, 1994, IEEE T SOFTWARE ENG, V20, P812, DOI 10.1109/32.328991
   Xu TY, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P307, DOI 10.1145/2786805.2786852
   Yilmaz C, 2005, PROC INT CONF SOFTW, P293
   Yoon EJ, 2014, IEEE ACM INT SYMP, P41, DOI 10.1109/CCGrid.2014.120
   Yu ZB, 2018, ACM SIGPLAN NOTICES, V53, P564, DOI [10.1145/3296957.3173187, 10.1145/3173162.3173187]
   Zhang Y, 2015, IEEE INT CONF AUTOM, P365, DOI 10.1109/ASE.2015.15
   Zhu YQ, 2017, PROCEEDINGS OF THE 2017 SYMPOSIUM ON CLOUD COMPUTING (SOCC '17), P338, DOI 10.1145/3127479.3128605
NR 66
TC 14
Z9 16
U1 2
U2 13
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAR 1
PY 2022
VL 48
IS 3
BP 893
EP 909
DI 10.1109/TSE.2020.3007560
PG 17
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA ZU6ZO
UT WOS:000769989900011
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Pan, MX
   Xu, TT
   Pei, Y
   Li, Z
   Zhang, T
   Li, XD
AF Pan, Minxue
   Xu, Tongtong
   Pei, Yu
   Li, Zhong
   Zhang, Tian
   Li, Xuandong
TI GUI-Guided Test Script Repair for Mobile Apps
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Meters; Graphical user interfaces; Mobile applications; Maintenance
   engineering; Testing; Tools; Computer vision; Mobile GUI testing; test
   script repair; computer vision
ID MODEL
AB Graphical User Interface (GUI) testing is widely used to test mobile apps. As mobile apps are frequently updated and need repeated testing, to reduce the test cost, their test cases are often coded as scripts to enable automated execution using test harnesses/tools. When those mobile apps evolve, many of the test scripts, however, may become broken due to changes made to the app GUIs. While it is desirable that the broken scripts get repaired, doing it manually can be preventively expensive if the number of tests need repairing is large. We propose in this paper a novel approach named Meter to repairing broken GUI test scripts automatically when mobile apps evolve. Meter leverages computer vision techniques to infer GUI changes between two versions of a mobile app and uses the inferred changes to guide the repair of GUI test scripts. Since Meter only relies on screenshots to repair GUI tests, it is applicable to apps targeting open or closed source mobile platforms. In experiments conducted on 22 Android apps and 6 iOS apps, repairs produced by Meter helped preserve 63.7 and 38.8 percent of all the test actions broken by the GUI changes, respectively.
C1 [Pan, Minxue] Nanjing Univ, Software Inst, State Key Lab Novel Software Technol, Nanjing 210093, Peoples R China.
   [Xu, Tongtong; Li, Zhong; Zhang, Tian; Li, Xuandong] Nanjing Univ, State Key Lab Novel Software Technol, Dept Comp Sci & Technol, Nanjing 210093, Peoples R China.
   [Pei, Yu] Hong Kong Polytech Univ, Dept Comp, Hong Kong, Peoples R China.
C3 Nanjing University; Nanjing University; Hong Kong Polytechnic University
RP Pan, MX (corresponding author), Nanjing Univ, Software Inst, State Key Lab Novel Software Technol, Nanjing 210093, Peoples R China.; Zhang, T (corresponding author), Nanjing Univ, State Key Lab Novel Software Technol, Dept Comp Sci & Technol, Nanjing 210093, Peoples R China.
EM mxp@nju.edu.cn; dz1633014@smail.nju.edu.cn; csypei@comp.polyu.edu.hk;
   mg1733033@smail.nju.edu.cn; ztluck@nju.edu.cn; lxd@nju.edu.cn
RI Pei, Yu/GRI-9837-2022; Pan, Minxue/AIC-5169-2022
OI Pei, Yu/0000-0001-6065-6958; 
FU National Natural Science Foundation of China [61690204, 61972193,
   61632015]; Fundamental Research Funds for the Central Universities of
   China [14380022, 14380020]; Hong Kong RGC General Research Fund (GRF)
   [PolyU 152703/16E, PolyU 152002/18E]; Hong Kong Polytechnic University
   internal fund [1-ZVJ1, G-YBXU]
FX The authors thank the anonymous reviewers for their valuable comments
   and suggestions for improving this article. This work was supported by
   the National Natural Science Foundation of China (Nos. 61690204,
   61972193, and 61632015) and the Fundamental Research Funds for the
   Central Universities (Nos. 14380022 and 14380020) of China. This work
   was also supported in part by the Hong Kong RGC General Research Fund
   (GRF) PolyU 152703/16E and PolyU 152002/18E and The Hong Kong
   Polytechnic University internal fund 1-ZVJ1 and G-YBXU.
CR Alégroth E, 2013, 2013 IEEE SIXTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST 2013), P439, DOI 10.1109/ICST.2013.61
   Alshahwan Nadia, 2008, 2008 First IEEE International Conference on Software Testing, Verification and Validation (ICST '08), P298, DOI 10.1109/ICST.2008.56
   Amalfitano D, 2015, IEEE SOFTWARE, V32, P53, DOI 10.1109/MS.2014.55
   [Anonymous], 2003, Proceedings of the 7th International Conference on Empirical Assessment in Software Engineering
   [Anonymous], 2012, DEMOGRAPHIC BUSINESS
   [Anonymous], 2010, P 19 INT S SOFTW TES
   [Anonymous], 2011, 1 INT WORKSHOP END T
   Bae G, 2014, J SYST SOFTWARE, V97, P15, DOI 10.1016/j.jss.2014.06.039
   Borjesson E., 2012, 2012 IEEE Fifth International Conference on Software Testing, Verification and Validation (ICST 2012), P350, DOI 10.1109/ICST.2012.115
   Bradski G., 2008, LEARNING OPENCV
   CANNY J, 1986, IEEE T PATTERN ANAL, V8, P679, DOI 10.1109/TPAMI.1986.4767851
   Chang NN, 2018, 2018 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY AND SECURITY (QRS 2018), P215, DOI 10.1109/QRS.2018.00035
   Chang TH, 2010, CHI2010: PROCEEDINGS OF THE 28TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, VOLS 1-4, P1535
   Chen CF, 2017, IUI'17: PROCEEDINGS OF THE 22ND INTERNATIONAL CONFERENCE ON INTELLIGENT USER INTERFACES, P245, DOI 10.1145/3025171.3025190
   Chen LS, 2021, IEEE T SOFTWARE ENG, V47, P2841, DOI 10.1109/TSE.2020.2970009
   Chen LS, 2017, IEEE INT CONF AUTOM, P637, DOI 10.1109/ASE.2017.8115674
   Choudhary SR, 2015, IEEE INT CONF AUTOM, P429, DOI 10.1109/ASE.2015.89
   Daniel B, 2009, IEEE INT CONF AUTOM, P433, DOI 10.1109/ASE.2009.17
   de Moura L, 2008, LECT NOTES COMPUT SC, V4963, P337, DOI 10.1007/978-3-540-78800-3_24
   Deursen A., 2001, Refactoring Test Code
   Dominguez Perez Danilo, 2017, 2017 IEEE/ACM 4th International Conference on Mobile Software Engineering and Systems (MOBILESoft). Proceedings, P68, DOI 10.1109/MOBILESoft.2017.28
   Dyutiman Choudhary Dyutiman Choudhary, 2011, Pro-poor value chain development for high value products in mountain regions: Indian Bay Leaf
   Fu C, 2009, SECOND INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION, AND VALIDATION, PROCEEDINGS, P1, DOI 10.1109/ICST.2009.12
   Gao ZB, 2016, IEEE T SOFTWARE ENG, V42, P170, DOI 10.1109/TSE.2015.2454510
   Grechanik M, 2009, PROC IEEE INT CONF S, P9, DOI 10.1109/ICSM.2009.5306345
   Grechanik M, 2009, PROC INT CONF SOFTW, P408, DOI 10.1109/ICSE.2009.5070540
   Guowei Yang, 2012, FM 2012: Formal Methods. Proceedings of the 18th International Symposium, P455, DOI 10.1007/978-3-642-32759-9_37
   Hammoudi M, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P751, DOI 10.1145/2950290.2950294
   Hu Cuixiong, 2011, Proceedings of the 6th International Workshop on Automation of Software Test, P77
   Jabbarvand R., 2016, P 25 INT S SOFTWARE, P425, DOI DOI 10.1145/2931037.2931067
   Leotta M., 2013, P 2013 INT WORKSH JO, P53, DOI DOI 10.1145/2489280.2489284
   Li XY, 2019, IEEE INT CONF SOFTW, P217, DOI 10.1109/ICST.2019.00030
   Li X, 2017, IEEE INT CONF SOFTW, P161, DOI 10.1109/ICST.2017.22
   Lian Yu, 2010, 2010 Fifth International Symposium on Service Oriented System Engineering (SOSE 2010), P181, DOI 10.1109/SOSE.2010.36
   Lowe D. G., 1999, Proceedings of the Seventh IEEE International Conference on Computer Vision, P1150, DOI 10.1109/ICCV.1999.790410
   Memon A. M., 2003, Software Engineering Notes, V28, P118, DOI 10.1145/949952.940088
   Memon AM, 2007, SOFTW TEST VERIF REL, V17, P137, DOI 10.1002/stvr.364
   Memon AM, 2008, ACM T SOFTW ENG METH, V18, DOI 10.1145/1416563.1416564
   Mirzaaghaei Mehdi, 2011, P 19 ACM SIGSOFT S 1, P396
   Monperrus M., 2015, HAL01206501
   Moran K, 2017, PROC IEEE ACM INT C, P505, DOI 10.1109/ICSE-C.2017.166
   Nayebi M, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P552, DOI 10.1109/SANER.2016.116
   Pan MX, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: COMPANION PROCEEDINGS (ICSE-COMPANION 2019), P326, DOI 10.1109/ICSE-Companion.2019.00137
   Pei Y, 2014, IEEE T SOFTWARE ENG, V40, P427, DOI 10.1109/TSE.2014.2312918
   Raina Shikha, 2013, Software Engineering Notes, V38, P1, DOI 10.1145/2492248.2492272
   Ramler Rudolf, 2017, 2017 IEEE International Conference on Software Testing, Verification and Validation: Workshops (ICSTW). Proceedings, P398, DOI 10.1109/ICSTW.2017.76
   Sadeghi A, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P220, DOI 10.1145/3106237.3106250
   Si Huang, 2010, Proceedings of the Third IEEE International Conference on Software Testing, Verification and Validation (ICST 2010), P245, DOI 10.1109/ICST.2010.39
   Smith R, 2007, PROC INT CONF DOC, P629, DOI 10.1109/icdar.2007.4376991
   Song W, 2017, IEEE INT CONF AUTOM, P27, DOI 10.1109/ASE.2017.8115615
   Stocco A, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P503, DOI 10.1145/3236024.3236063
   Tan SH, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P187, DOI 10.1145/3180155.3180243
   Nguyen TA, 2015, IEEE INT CONF AUTOM, P248, DOI 10.1109/ASE.2015.32
   Weimer W, 2009, PROC INT CONF SOFTW, P364, DOI 10.1109/ICSE.2009.5070536
   Xie Q, 2007, ACM T SOFTW ENG METH, V16, DOI 10.1145/1189748.1189752
   Yang SQ, 2015, IEEE INT CONF AUTOM, P658, DOI 10.1109/ASE.2015.76
   Yeh T, 2009, UIST 2009: PROCEEDINGS OF THE 22ND ANNUAL ACM SYMPOSIUM ON USER INTERFACE SOFTWARE AND TECHNOLOGY, P183
   Zhang HL, 2016, 2016 IEEE/ACM 11TH INTERNATIONAL WORKSHOP IN AUTOMATION OF SOFTWARE TEST (AST), P64, DOI [10.1109/AST.2016.018, 10.1145/2896921.2896932]
   Zhang YL, 2013, PROCEEDINGS OF 2013 INTERNATIONAL SYMPOSIUM - WOMEN'S SURVIVAL AND DEVELOPMENT IN CURRENT CULTURAL ENVIRONMENT, P45
NR 59
TC 13
Z9 15
U1 1
U2 8
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAR 1
PY 2022
VL 48
IS 3
BP 910
EP 929
DI 10.1109/TSE.2020.3007664
PG 20
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA ZU6ZO
UT WOS:000769989900012
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Pastore, F
   Micucci, D
   Guzman, M
   Mariani, L
AF Pastore, Fabrizio
   Micucci, Daniela
   Guzman, Michell
   Mariani, Leonardo
TI TkT: Automatic Inference of Timed and Extended Pushdown Automata
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Automata; Clocks; Software systems; Timing; Data mining; Computational
   modeling; Specification mining; dynamic analysis; trace analysis; model
   inference; timed automata; performance analysis
ID SOFTWARE
AB To mitigate the cost of manually producing and maintaining models capturing software specifications, specification mining techniques can be exploited to automatically derive up-to-date models that faithfully represent the behavior of software systems. So far, specification mining solutions focused on extracting information about the functional behavior of the system, especially in the form of models that represent the ordering of the operations. Well-known examples are finite state models capturing the usage protocol of software interfaces and temporal rules specifying relations among system events. Although the functional behavior of a software system is a primary aspect of concern, there are several other non-functional characteristics that must be typically addressed jointly with the functional behavior of a software system. Efficiency is one of the most relevant characteristics. Indeed, an application that delivers the right functionalities with an inefficient implementation may fail to satisfy the expectations of its users. Interestingly, the timing behavior is strongly dependent on the functional behavior of a software system. For instance, the timing of an operation depends on the functional complexity and size of the computation that is performed. Consequently, models that combine the functional and timing behaviors, as well as their dependencies, are extremely important to precisely reason on the behavior of software systems. In this paper, we address the challenge of generating models that capture both the functional and timing behavior of a software system from execution traces. The result is the Timed k-Tail (TkT) specification mining technique, which can mine finite state models that capture such an interplay: the functional behavior is represented by the possible order of the events accepted by the transitions, while the timing behavior is represented through clocks and clock constraints of different nature associated with transitions. Our empirical evaluation with several libraries and applications shows that TkT can generate accurate models, capable of supporting the identification of timing anomalies due to overloaded environment and performance faults. Furthermore, our study shows that TkT outperforms state-of-the-art techniques in terms of scalability and accuracy of the mined models.
C1 [Micucci, Daniela; Guzman, Michell; Mariani, Leonardo] Univ Milano Bicocca, Dept Informat Syst & COmmun, I-20126 Milan, Italy.
   [Pastore, Fabrizio] Univ Luxembourg, SnT Ctr, L-1855 Luxembourg, Luxembourg.
C3 University of Milano-Bicocca; University of Luxembourg
RP Mariani, L (corresponding author), Univ Milano Bicocca, Dept Informat Syst & COmmun, I-20126 Milan, Italy.
EM fabrizio.pastore@uni.lu; leonardo.mariani@unimib.it
RI Pastore, Fabrizio/ABY-9262-2022; MICUCCI, DANIELA/AAB-6066-2020
OI Pastore, Fabrizio/0000-0003-3541-3641; MICUCCI,
   DANIELA/0000-0003-1261-2234; Guzman Cancimance,
   Michell/0000-0002-3006-4414
FU H2020 Learn project under the ERC Consolidator Grant 2014 program (ERC
   Grant) [646867]
FX This work has been partially supported by the H2020 Learn project, which
   has been funded under the ERC Consolidator Grant 2014 program (ERC Grant
   Agreement n. 646867).
CR ALUR R, 1994, THEOR COMPUT SCI, V126, P183, DOI 10.1016/0304-3975(94)90010-8
   Apache Software Foundation, 2020, COMM COLL LIB
   Apache Software Foundation, 2020, COMM MATH LIB
   Babenko A, 2009, ISSTA 2009: INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P237
   Bartocci E, 2019, LECT NOTES COMPUT SC, V11724, P69, DOI 10.1007/978-3-030-30446-1_4
   Benerecetti Massimo, 2010, Proceedings of the 2010 17th International Symposium on Temporal Representation and Reasoning (TIME 2010), P61, DOI 10.1109/TIME.2010.10
   Bengtsson J., 1996, Hybrid Systems III. Verification and Control, P232, DOI 10.1007/BFb0020949
   BESCHASTNIKH I., 2011, P 19 ACM SIGSOFT S 1, P267, DOI DOI 10.1145/2025113.2025151
   Beschastnikh I, 2015, IEEE T SOFTWARE ENG, V41, P408, DOI 10.1109/TSE.2014.2369047
   BIERMANN AW, 1972, IEEE T COMPUT, VC 21, P592, DOI 10.1109/TC.1972.5009015
   Boufaied C, 2019, J OBJECT TECHNOL, V18, DOI 10.5381/jot.2019.18.2.a15
   Brünink M, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P39, DOI 10.1145/2950290.2950314
   Cook J. E., 1998, ACM Transactions on Software Engineering and Methodology, V7, P215, DOI 10.1145/287000.287001
   Dallmeier V., 2006, P INT WORKSH DYN AN
   Dallmeier V, 2012, IEEE T SOFTWARE ENG, V38, P243, DOI 10.1109/TSE.2011.105
   Daws C, 1996, REAL TIM SYST SYMP P, P73, DOI 10.1109/REAL.1996.563702
   Dekking FM., 2005, MODERN INTRO PROBABI, V488
   Eclipse, 2020, ASPECTJ
   Ernst MD, 2001, IEEE T SOFTWARE ENG, V27, P99, DOI 10.1109/32.908957
   Gall H. C., 2006, 28th International Conference on Software Engineering Proceedings, P1055, DOI 10.1145/1134285.1134502
   Google, 2020, JAV COLL LIB
   Grinchtein O, 2006, LECT NOTES COMPUT SC, V4137, P435
   Hangal S, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P291, DOI 10.1109/ICSE.2002.1007976
   KARP RM, 1987, IBM J RES DEV, V31, P249, DOI 10.1147/rd.312.0249
   Knuth DE, 1997, ART COMPUTER PROGRAM, V2, P145
   Lemieux C, 2015, IEEE INT CONF AUTOM, P81, DOI 10.1109/ASE.2015.71
   Li K., 2013, P 2013 9 JOINT M FDN, P103, DOI 10.1145/2491411.2491457
   Lo D, 2012, J SYST SOFTWARE, V85, P2063, DOI 10.1016/j.jss.2012.04.001
   Lo D, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P345, DOI 10.1145/1595696.1595761
   Lo D, 2012, SCI COMPUT PROGRAM, V77, P743, DOI 10.1016/j.scico.2010.10.003
   Lorenzoli D, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P501, DOI 10.1145/1368088.1368157
   Maier A, 2014, IEEE INTL CONF IND I, P60, DOI 10.1109/INDIN.2014.6945484
   Maier Alexander., 2011, 8th International Conference on Informatics in Control, Automation and Robotics (ICINCO), P363
   MAOZ S, 2011, P 19 ACM SIGSOFT S 1, P179, DOI DOI 10.1145/2025113.2025140
   Marc R., 2020, ECLEMMA
   Marchetto Alessandro, 2008, 2008 First IEEE International Conference on Software Testing, Verification and Validation (ICST '08), P121, DOI 10.1109/ICST.2008.22
   Mariani L., 2012, Proceedings of the 2012 IEEE 23rd International Symposium on Software Reliability Engineering (ISSRE), P241, DOI 10.1109/ISSRE.2012.14
   Mariani Leonardo, 2008, 2008 IEEE International Symposium on Software Reliability Engineering, P117, DOI 10.1109/ISSRE.2008.48
   Mariani L, 2017, IEEE T SOFTWARE ENG, V43, P715, DOI 10.1109/TSE.2016.2623623
   Mariani L, 2011, IEEE T SOFTWARE ENG, V37, P486, DOI 10.1109/TSE.2010.93
   Niggemann O., 2012, AAAI, V2, P1083
   Ohmann T., 2014, P IEEE ACM INT C AUT, P19, DOI [10.1145/2642937.2642988, DOI 10.1145/2642937.2642988, 10.1145/2642937, DOI 10.1145/2642937]
   Pacheco C, 2005, LECT NOTES COMPUT SC, V3586, P504
   Pastore F., 2014, PROC INT S SOFTW TES, P37, DOI [10.1145/2610384.2610387, DOI 10.1145/2610384.2610387]
   Pastore F, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P570, DOI 10.1145/3106237.3106296
   Pastore F, 2017, IEEE INT CONF SOFTW, P401, DOI 10.1109/ICST.2017.43
   Pezz ~e M., 2007, SOFTWARE TESTING ANA
   Raman A. V., 1997, P WORKSH AUT IND GRA
   Reiss SP, 2001, PROC INT CONF SOFTW, P221, DOI 10.1109/ICSE.2001.919096
   Schmidt J, 2012, IEEE DATA MINING, P625, DOI 10.1109/ICDM.2012.121
   van Lamsweerde A., 2009, REQUIREMENTS ENG SYS
   Vasudevan P, 2006, FOURTH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING RESEARCH, MANAGEMENT AND APPLICATIONS, PROCEEDINGS, P289, DOI 10.1109/SERA.2006.25
   Verwer S., 2007, Proceedings of the Sixteenth Annual Machine Learning Conference of Belgium and the Netherlands (Benelearn), P128
   Verwer S, 2011, INFORM COMPUT, V209, P606, DOI 10.1016/j.ic.2010.11.023
   Walkinshaw N, 2016, EMPIR SOFTW ENG, V21, P811, DOI 10.1007/s10664-015-9367-7
   WELCH TA, 1984, COMPUTER, V17, P8, DOI 10.1109/MC.1984.1659158
   Zhe D, 2003, THEOR COMPUT SCI, V302, P93, DOI 10.1016/S0304-3975(02)00743-0
NR 57
TC 3
Z9 3
U1 0
U2 1
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD FEB 1
PY 2022
VL 48
IS 2
BP 617
EP 636
DI 10.1109/TSE.2020.2998527
PG 20
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA ZB4EB
UT WOS:000756796100015
OA Green Published
DA 2024-07-18
ER

PT J
AU Ahasanuzzaman, M
   Hassan, S
   Hassan, AE
AF Ahasanuzzaman, Md
   Hassan, Safwat
   Hassan, Ahmed E.
TI Studying Ad Library Integration Strategies of Top Free-to-Download Apps
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Ad libraries; integration strategies; mining android mobile apps; google
   play store
AB In-app advertisements have become a major revenue source for app developers in the mobile app ecosystem. Ad libraries play an integral part in this ecosystem as app developers integrate these libraries into their apps to display ads. In this paper, we study ad library integration strategies by analyzing 35,459 updates of 1,837 top free-to-download apps of the Google Play Store. We observe that ad libraries (e.g., Google AdMob) are not always used for serving ads - 22.5% of the apps that integrate Google AdMob do not display ads. They instead depend on Google AdMob for analytical purposes. Among the apps that display ads, we observe that 57.9% of them integrate multiple ad libraries. We observe that such integration of multiple ad libraries occurs commonly in apps with a large number of downloads and ones in app categories with a high proportion of ad-displaying apps. We manually analyze a sample of apps and derive a set of rules to automatically identify four common strategies for integrating multiple ad libraries. Our analysis of the apps across the identified strategies shows that app developers prefer to manage their own integrations instead of using off-the-shelf features of ad libraries for integrating multiple ad libraries. Our findings are valuable for ad library developers who wish to learn first hand about the challenges of integrating ad libraries.
C1 [Ahasanuzzaman, Md; Hassan, Safwat; Hassan, Ahmed E.] Queens Univ, Sch Comp, Software Anal & Intelligence Lab SAIL, Kingston, ON K7L 3N6, Canada.
C3 Queens University - Canada
RP Ahasanuzzaman, M (corresponding author), Queens Univ, Sch Comp, Software Anal & Intelligence Lab SAIL, Kingston, ON K7L 3N6, Canada.
EM md.ahasanuzzaman@queensu.ca; shassan@cs.queensu.ca; ahmed@cs.queensu.ca
RI KHALIFA, AHMED khalifa/HKF-2246-2023; Hassan, Safwat/JWP-1498-2024
OI KHALIFA, AHMED khalifa/0000-0002-2918-7572; Ahasanuzzaman,
   Md/0000-0002-3709-2741
CR Afonso V, 2016, 23RD ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2016), DOI 10.14722/ndss.2016.23384
   Akdeniz, GOOGL PLAY CRAWL
   [Anonymous], 2019, URBAN AIRSHIP ANALYT
   [Anonymous], 2018, FLURRY ANALYTICS
   [Anonymous], 2017, VIDEO ADS BRING 31 A
   [Anonymous], 2018, APP MANIFEST OVERVIE
   [Anonymous], 2016, USAGE ANDROID ADVERT
   [Anonymous], 2014, MOBILE APP REPORTING
   [Anonymous], 2018, REWARDED VIDEO ADS W
   [Anonymous], 2016, Understand tool
   [Anonymous], 2016, YOU DECIDE WHICH AD
   Apache Software Foundation, DOWNL AP COMM BCEL
   AppAnnie, IN APP ADV SPEND TRI
   AppBrain, 2018, ANDR AD NETW STAT MA
   Bavota G, 2015, IEEE T SOFTWARE ENG, V41, P384, DOI 10.1109/TSE.2014.2367027
   Book T., 2013, ARXIV13030857CS
   Derr E, 2017, CCS'17: PROCEEDINGS OF THE 2017 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P2187, DOI 10.1145/3133956.3134059
   Dong F, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P257, DOI 10.1145/3236024.3236045
   G. M. A. S. Developers, 2019, GOOGL UN MED SAMPL O
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   Gao C., 2018, P 1 INT WORKSH ADV M, P13
   Gao CY, 2017, PROC IEEE ACM INT C, P253, DOI 10.1109/ICSE-C.2017.123
   Google, 2015, GOOGL ADS DEV BLOG
   Google, 2016, SDK LESS MED EAS WAY
   Google, 2019, ADM SDK OUT MAIN THR
   Google, GOOGL ADMOB MOB ADS
   Gui JP, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P100, DOI 10.1109/ICSE.2015.32
   InMobi team, 2018, 7 REAS WHY YOU SHOUL
   Li L, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P403, DOI 10.1109/SANER.2016.52
   Mohan P., 2013, P 8 ACM EUR C COMP S, P267, DOI DOI 10.1145/2465351.2465378
   MoPub, 2019, IN MOPUB SDK ANDR
   Ruiz IJM, 2016, IEEE SOFTWARE, V33, P74, DOI 10.1109/MS.2014.81
   Ruiz IJM, 2014, IEEE SOFTWARE, V31, P86, DOI 10.1109/MS.2014.79
   Salza P, 2018, INT C PROGRAM COMPRE, P255, DOI 10.1145/3196321.3196341
   Seufert Eric Benjamin, 2019, SHOULD CREATE MOBILE
   Son S, 2016, 23RD ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2016), DOI 10.14722/ndss.2016.23407
   Statista, 2019, NUMB MOB APP DOWNL 2
   Tapjoy, 2019, MOB AD MED WHAT DEV
   Terkki E, 2017, INT CONF COMMUN SYST, P87, DOI 10.1109/COMSNETS.2017.7945362
   Vallina-Rodriguez Narseo, 2012, Proceedings of the 2012 ACM conference on Internet measurement conference, P343
   Vargha A, 1998, J EDUC BEHAV STAT, V23, P170, DOI 10.3102/10769986023002170
   Wang HY, 2018, IEEE WORK CONF MIN S, P231, DOI 10.1145/3196398.3196412
   Wikipedia, 2018, EX LINK FORM
   Wilde D., 2019, GOOGLE REMOVES 24 MO
NR 44
TC 6
Z9 6
U1 1
U2 7
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JAN 1
PY 2022
VL 48
IS 1
BP 209
EP 224
DI 10.1109/TSE.2020.2983399
PG 16
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA YG0HJ
UT WOS:000742179000012
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Zhang, JM
   Harman, M
   Ma, L
   Liu, Y
AF Zhang, Jie M.
   Harman, Mark
   Ma, Lei
   Liu, Yang
TI Machine Learning Testing: Survey, Landscapes and Horizons
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Machine learning; software testing; deep neural network
ID COMPUTER-AIDED DIAGNOSIS; SYMBOLIC EXECUTION; SAMPLE-SIZE; CLASSIFIER;
   PERFORMANCE
AB This paper provides a comprehensive survey of techniques for testing machine learning systems; Machine Learning Testing (ML testing) research. It covers 144 papers on testing properties (e.g., correctness, robustness, and fairness), testing components (e.g., the data, learning program, and framework), testing workflow (e.g., test generation and test evaluation), and application scenarios (e.g., autonomous driving, machine translation). The paper also analyses trends concerning datasets, research trends, and research focus, concluding with research challenges and promising research directions in ML testing.
C1 [Zhang, Jie M.] UCL, CREST, London WC1E 6BT, England.
   [Harman, Mark] Facebook, London W1T 1FB, England.
   [Ma, Lei] Kyushu Univ, Fukuoka 8190395, Japan.
   [Liu, Yang] Nanyang Technol Univ, Singapore 639798, Singapore.
C3 University of London; University College London; Facebook Inc; Kyushu
   University; Nanyang Technological University
RP Zhang, JM (corresponding author), UCL, CREST, London WC1E 6BT, England.
EM jie.zhang@ucl.ac.uk; mark.harman@ucl.ac.uk; malei@ait.kyushu-u.ac.jp;
   yangliu@ntu.edu.sg
RI Liu, Yang/HNJ-6693-2023; yang, liu/HTN-9175-2023; Liu, Yang/D-2306-2013;
   liu, yang/HQY-7531-2023; M, SUDHA RANI/AAZ-2068-2021; LIU,
   YANG/HWQ-4615-2023; yang, liu/GVU-8760-2022
OI Liu, Yang/0000-0001-7300-9215; M, SUDHA RANI/0000-0002-8491-0508; Zhang,
   Jie/0000-0003-0481-7264
FU ERC [741278]; JSPS KAKENHI [19K24348, 19H04086]; Qdaijump Research
   Program [01277]; NVIDIA AI Tech Center (NVAITC); Singapore National
   Research Foundation [NRF2018NCRNCR005-0001]; National Satellite of
   Excellence in Trustworthy Software System [NRF2018NCR-NSOE003-0001]; NTU
   research grant [NGF-2019-06-024]; Grants-in-Aid for Scientific Research
   [19K24348] Funding Source: KAKEN
FX Jie M. Zhang and Mark Harman was supported by the ERC advanced grant
   with No. 741278. Lei Ma was supported by the JSPS KAKENHI Grant
   no.19K24348, 19H04086, Qdaijump Research Program No.01277, and NVIDIA AI
   Tech Center (NVAITC). Yang Liu was supported by Singapore National
   Research Foundation with No. NRF2018NCRNCR005-0001, National Satellite
   of Excellence in Trustworthy Software System No.
   NRF2018NCR-NSOE003-0001, NTU research grant NGF-2019-06-024. Before
   submitting, we sent the paper to those whom we cited, to check our
   comments for accuracy and omission. This also provided one final stage
   in the systematic trawling of the literature for relevant work. Many
   thanks to those members of the community who kindly provided comments
   and feedback on earlier drafts of this paper.
CR Abadi M, 2016, PROCEEDINGS OF OSDI'16: 12TH USENIX SYMPOSIUM ON OPERATING SYSTEMS DESIGN AND IMPLEMENTATION, P265
   Afzal W, 2009, INFORM SOFTWARE TECH, V51, P957, DOI 10.1016/j.infsof.2008.12.005
   Agarwal A, 2018, 35 INT C MACHINE LEA, V80
   Agarwal Aniya, 2018, arXiv
   Al-Azani Sadam, 2017, Multi-disciplinary Trends in Artificial Intelligence. 11th International Workshop, MIWAI 2017. Proceedings: LNAI 10607, P77, DOI 10.1007/978-3-319-69456-6_7
   Albarghouthi A, 2019, FAT*'19: PROCEEDINGS OF THE 2019 CONFERENCE ON FAIRNESS, ACCOUNTABILITY, AND TRANSPARENCY, P211, DOI 10.1145/3287560.3287588
   Albarghouthi A, 2017, LECT NOTES COMPUT SC, V10426, P181, DOI 10.1007/978-3-319-63387-9_9
   Alfeld S, 2016, AAAI CONF ARTIF INTE, P1452
   Alon U, 2019, P ACM PROGRAM LANG, V3, DOI 10.1145/3290353
   Amershi S, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE (ICSE-SEIP 2019), P291, DOI 10.1109/ICSE-SEIP.2019.00042
   Ammannand P., 2016, INTRO SOFTWARE TESTI
   Androutsopoulos K, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P573, DOI 10.1145/2568225.2568314
   Angell R, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P871, DOI 10.1145/236024.3264590
   Anonymous, 1994, UCI Machine Learning Repository
   [Anonymous], 2018, ARXIV181103654
   [Anonymous], 2018, TECHNICAL REPORT CLE
   [Anonymous], 1994, INTRO BOOTSTRAP
   [Anonymous], 1990, IEEE Std 610.12-1990, V42, P112, DOI [10.1109/IEEESTD.1990.101064, DOI 10.1109/IEEESTD.1990.101064]
   [Anonymous], 2017, arXiv preprint arXiv:1708.03309
   [Anonymous], 2016, TECHNICAL REPORT CLE
   Arp D, 2014, 21ST ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2014), DOI 10.14722/ndss.2014.23247
   Avizienis A., 1995, Software fault tolerance, V3, P23
   Baeza-Yates R, 2017, IEEE INT CONF BIG DA, P897, DOI 10.1109/BigData.2017.8258006
   Banerjee SS, 2019, I C DEPEND SYS NETWO, P25, DOI 10.1109/DSN-S.2019.00018
   Banerjee SS, 2018, I C DEPEND SYS NETWO, P586, DOI 10.1109/DSN.2018.00066
   Barocas S, 2016, CALIF LAW REV, V104, P671, DOI 10.15779/Z38BG31
   Barr ET, 2015, IEEE T SOFTWARE ENG, V41, P507, DOI 10.1109/TSE.2014.2372785
   Bastani O, 2016, ADV NEUR IN, V29
   Baylor D, 2017, KDD'17: PROCEEDINGS OF THE 23RD ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P1387, DOI 10.1145/3097983.3098021
   Belitskaya O, 2019, HANDWRITTEN LETT
   Ben Abdessalem R, 2018, IEEE INT CONF AUTOM, P143, DOI 10.1145/3238147.3238192
   Ben Abdessalem R, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1016, DOI 10.1145/3180155.3180160
   Ben Abdessalem R, 2016, IEEE INT CONF AUTOM, P63, DOI 10.1145/2970276.2970311
   Bichsel B, 2018, PROCEEDINGS OF THE 2018 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY (CCS'18), P508, DOI 10.1145/3243734.3243863
   BICKEL PJ, 1975, SCIENCE, V187, P398, DOI 10.1126/science.187.4175.398
   Biran Or, 2017, IJCAI 17 WORKSH EXPL
   Boski M, 2017, 2017 10TH INTERNATIONAL WORKSHOP ON MULTIDIMENSIONAL (ND) SYSTEMS (NDS)
   Bowman S. R., 2015, Proceedings of the 2015 conference on empirical methods in natural language processing, DOI [DOI 10.18653/V1/D15-1075, 10.18653/v1/d15-1075, 10.18653/v1/D15-1075]
   Braiek H., 2018, ARXIV181202257
   Breck E., 2019, P SYSML
   Breck E, 2017, IEEE INT CONF BIG DA, P1123, DOI 10.1109/BigData.2017.8258038
   Burrell J, 2016, BIG DATA SOC, V3, P1, DOI 10.1177/2053951715622512
   Byun T, 2019, 2019 IEEE INTERNATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE TESTING (AITEST), P63, DOI 10.1109/AITest.2019.000-6
   Cai S., 2016, P RELIABLE MACHINE L
   Carlini N, 2017, P IEEE S SECUR PRIV, P39, DOI 10.1109/SP.2017.49
   Carlini Nicholas, 2017, ACM WORKSH ART INT S, P3
   Chan Alvin, 2018, ARXIV180902444
   Chan HP, 1999, MED PHYS, V26, P2654, DOI 10.1118/1.598805
   Chen CY, 2015, IEEE I CONF COMP VIS, P2722, DOI 10.1109/ICCV.2015.312
   Chen T.Y., 1998, Metamorphic testing: a new approach for generating next test cases
   Chen T, 2013, FUTURE GENER COMP SY, V29, P1758, DOI 10.1016/j.future.2012.02.006
   Chen WJ, 2018, STAT METHODS MED RES, V27, P1394, DOI 10.1177/0962280216661371
   Chen WJ, 2013, BMC MED RES METHODOL, V13, DOI 10.1186/1471-2288-13-98
   Chen WJ, 2012, PATTERN RECOGN, V45, P2661, DOI 10.1016/j.patcog.2011.12.024
   Cheng CH, 2018, PROCEEDINGS OF THE 2018 16TH ACM/IEEE INTERNATIONAL CONFERENCE ON FORMAL METHODS AND MODELS FOR SYSTEM DESIGN (MEMOCODE), P43
   Cheng DW, 2018, 2018 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY AND SECURITY (QRS 2018), P313, DOI 10.1109/QRS.2018.00044
   Chollet F, 2015, KERAS
   Chung L., 2012, NONFUNCTIONAL REQUIR, V5
   Clark D, 2012, INFORM PROCESS LETT, V112, P335, DOI 10.1016/j.ipl.2012.01.004
   Corbett-Davies S., 2018, ARXIV180800023
   Cruz-Benito J, 2018, IEEE ACCESS, V6, P2251, DOI 10.1109/ACCESS.2017.2782678
   Dal Pozzolo A, 2015, 2015 IEEE SYMPOSIUM SERIES ON COMPUTATIONAL INTELLIGENCE (IEEE SSCI), P159, DOI 10.1109/SSCI.2015.33
   Davis M. D., 1981, P ACM 81 C, P254, DOI DOI 10.1145/800175.809889
   Days III D. S, 2004, LOUIS ULJ, V49
   Deng J, 2009, PROC CVPR IEEE, P248, DOI 10.1109/CVPRW.2009.5206848
   Ding JH, 2017, 2017 IEEE/ACM 2ND INTERNATIONAL WORKSHOP ON METAMORPHIC TESTING (MET 2017), P28, DOI 10.1109/MET.2017.2
   Ding JH, 2016, P IEEE I C SERV COMP, P82, DOI 10.1109/SCC.2016.18
   Ding ZY, 2018, PROCEEDINGS OF THE 2018 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY (CCS'18), P475, DOI 10.1145/3243734.3243818
   Dolby J, 2018, MAPL'18: PROCEEDINGS OF THE 2ND ACM SIGPLAN INTERNATIONAL WORKSHOP ON MACHINE LEARNING AND PROGRAMMING LANGUAGES, P1, DOI 10.1145/3211346.3211349
   Doshi-Velez F., 2017, arXiv
   Du X., 2018, CORR
   Dupuy A., 2000, P 19 DIG AV SYST C, V1
   Dutta S, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P729, DOI 10.1145/3338906.3338972
   Dwarakanath A, 2018, ISSTA'18: PROCEEDINGS OF THE 27TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P118, DOI 10.1145/3213846.3213858
   Dwork C., 2012, P 3 INNOVATIONS THEO, P214
   Dwork C., 2011, ENCY CRYPTOGRAPHY SE, P338, DOI 10.1007/978-1-4419-5906-5_752.
   Facebook research, 2015, BAB DAT
   Finkelstein A, 2009, REQUIR ENG, V14, P231, DOI 10.1007/s00766-009-0075-y
   Finkelstein A, 2008, INT REQUIR ENG CONF, P115, DOI 10.1109/RE.2008.61
   Fisher RA, 1988, UCI Machine Learning Repository
   Fu W, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P49, DOI 10.1145/3106237.3106256
   FUKUNAGA K, 1989, IEEE T PATTERN ANAL, V11, P873, DOI 10.1109/34.31448
   Gajane Pratik, 2017, ARXIV PREPRINT ARXIV
   Galhotra S, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P498, DOI 10.1145/3106237.3106277
   Geiger A, 2013, INT J ROBOT RES, V32, P1231, DOI 10.1177/0278364913491297
   Goodfellow I, 2020, COMMUN ACM, V63, P139, DOI 10.1145/3422622
   Goodman B, 2017, AI MAG, V38, P50, DOI 10.1609/aimag.v38i3.2741
   Gopinath D., 2018, CoRR
   Gopinath D, 2018, LECT NOTES COMPUT SC, V11138, P3, DOI 10.1007/978-3-030-01090-4_1
   Gossmann A, 2018, PROC SPIE, V10577, DOI 10.1117/12.2293818
   Graves A, 2013, INT CONF ACOUST SPEE, P6645, DOI 10.1109/ICASSP.2013.6638947
   Grgic-Hlaca N., 2016, NIPS S MACH LEARN LA, V1, P2
   Guo JM, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P739, DOI 10.1145/3236024.3264835
   Hains G., 2018, P ANN IEEE INT SYST, P1
   Hall M., 2009, ACM SIGKDD Explor. Newsl, V11, P18, DOI DOI 10.1145/1656274.1656278
   Hardt M, 2016, ADV NEUR IN, V29
   Harman M, 2001, INFORM SOFTWARE TECH, V43, P833, DOI 10.1016/S0950-5849(01)00189-6
   Harman M, 2018, IEEE INT WORK C SO, P1, DOI 10.1109/SCAM.2018.00009
   Harman M, 2010, IEEE T SOFTWARE ENG, V36, P226, DOI 10.1109/TSE.2009.71
   Harman M, 2007, GECCO 2007: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOL 1 AND 2, P1098
   Harper FM, 2016, ACM T INTERACT INTEL, V5, DOI 10.1145/2827872
   Hartman A, 2005, GRAPH THEORY, COMBINATORICS AND ALGORITHMS: INTERDISCIPLINARY APPLICATIONS, P237
   Hawkins DM, 2004, J CHEM INF COMP SCI, V44, P1, DOI 10.1021/ci0342472
   Herman B., 2017, The Promise and Peril of Human Evaluation for Model Interpretability
   Hofmann H., 1994, STATLOG GERMAN CRODI
   Huang X., 2018, SAFETY TRUSTWORTHINE
   Pham HV, 2019, PROC INT CONF SOFTW, P1027, DOI 10.1109/ICSE.2019.00107
   Hynes N., 2017, The Data Linter: Lightweight Automated Sanity Checking for ML Data Sets
   IEEE Standard Classification for Software Anomalies, 2010, 10442009 IEEE
   Ishikawa F, 2018, LECT NOTES COMPUT SC, V11157, P536, DOI 10.1007/978-3-030-00847-5_39
   Japkowicz N., 2006, AAAI WORKSHOP EVALUA, P6
   Jha S, 2018, P 3 IEEE INT WORKSH
   Jha S, 2019, I C DEPEND SYS NETWO, P112, DOI 10.1109/DSN.2019.00025
   Jha S, 2018, I C DEPENDABLE SYST, P55, DOI 10.1109/DSN-W.2018.00027
   Jia YQ, 2014, PROCEEDINGS OF THE 2014 ACM CONFERENCE ON MULTIMEDIA (MM'14), P675, DOI 10.1145/2647868.2654889
   Jia Y, 2008, EIGHTH IEEE INTERNATIONAL WORKING CONFERENCE ON SOURCE CODE ANALYSIS AND MANIPULATION, PROCEEDINGS, P249, DOI 10.1109/SCAM.2008.36
   Jia Y, 2011, IEEE T SOFTWARE ENG, V37, P649, DOI 10.1109/TSE.2010.62
   Johnson B., 2018, CAUSAL TESTING FINDI
   Jordan MI, 2015, SCIENCE, V349, P255, DOI 10.1126/science.aaa8415
   Kang D., 2018, NIPS
   Karpathy A., 2015, ARXIV150602078
   Karpov YL, 2018, PROGRAM COMPUT SOFT+, V44, P324, DOI 10.1134/S0361768818050031
   Katz G, 2017, LECT NOTES COMPUT SC, V10426, P97, DOI 10.1007/978-3-319-63387-9_5
   Kaufmann E, 2016, J MACH LEARN RES, V17
   Kim J., 2018, ARXIV180808444
   Kim Y, 2014, ARXIV PREPRINT ARXIV, DOI 10.3115/v1/D14-1181
   KING JC, 1976, COMMUN ACM, V19, P385, DOI 10.1145/360248.360252
   Kirk M., 2014, Thoughtful machine learning: A Test-Driven Approach
   KIRKPATRICK S, 1983, SCIENCE, V220, P671, DOI 10.1126/science.220.4598.671
   Kohav R, 1996, **DATA OBJECT**
   Kohavi R., 1995, IJCAI-95. Proceedings of the Fourteenth International Joint Conference on Artificial Intelligence, P1137
   Krishnan S., 2019, ARXIV190411827
   Krishnan S., 2017, P 2 WORKSHOP HUMAN I, P4, DOI [10.1145/3077257.3077271, DOI 10.1145/3077257.3077271]
   Krishnan S, 2016, SIGMOD'16: PROCEEDINGS OF THE 2016 INTERNATIONAL CONFERENCE ON MANAGEMENT OF DATA, P2117, DOI 10.1145/2882903.2899409
   Krishnan S, 2016, PROC VLDB ENDOW, V9, P948
   Krishnan Sanjay, 2017, CoRR
   Krizhevsky Alex, Cifar-10 canadian institute for advanced research
   Kusner Matt J, 2017, ADV NEURAL INFORM PR, P4066, DOI DOI 10.48550/ARXIV.1703.06856
   Law School Admission Council, LSAC NAT LONG BAR PA
   LeCun Y., 2010, MNIST HANDWRITTEN DI
   LeCun Y, 2015, NATURE, V521, P436, DOI 10.1038/nature14539
   Li L., 2015, P WORKSH TUR TEST AA
   Li L., 2010, P 19 INT C WORLD WID, DOI [10.1145/1772690.1772758, DOI 10.1145/1772690.1772758]
   Li ZN, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P499, DOI 10.1145/3338906.3338930
   Li ZN, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: NEW IDEAS AND EMERGING RESULTS (ICSE-NIER 2019), P89, DOI 10.1109/ICSE-NIER.2019.00031
   Lin TY, 2014, LECT NOTES COMPUT SC, V8693, P740, DOI 10.1007/978-3-319-10602-1_48
   Lipton ZC, 2016, COMMUN ACM, DOI DOI 10.1145/3233231
   Litjens G, 2017, MED IMAGE ANAL, V42, P60, DOI 10.1016/j.media.2017.07.005
   Liu FT, 2008, IEEE DATA MINING, P413, DOI 10.1109/ICDM.2008.17
   Liu MY, 2017, ADV NEUR IN, V30
   Liu ZX, 2018, IEEE INT CONF AUTOM, P373, DOI 10.1145/3238147.3238190
   Ma L, 2018, ARXIV181105187
   Ma L., 2018, Deepmutation: Mutation testing of deep learning systems
   Ma L, 2018, SECURE DEEP LEARNING
   Ma L, 2018, CoRR
   Ma L, 2018, IEEE INT CONF AUTOM, P120, DOI 10.1145/3238147.3238202
   Ma L, 2019, 2019 IEEE 26TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER), P614, DOI [10.1109/saner.2019.8668044, 10.1109/SANER.2019.8668044]
   Ma SQ, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P175, DOI 10.1145/3236024.3236082
   Ma W., 2019, TEST SELECTION DEEP
   Ma YS, 2005, SOFTW TEST VERIF REL, V15, P97, DOI 10.1002/stvr.308
   Malebary S., 2017, **DATA OBJECT**
   Mangal R, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: NEW IDEAS AND EMERGING RESULTS (ICSE-NIER 2019), P93, DOI 10.1109/ICSE-NIER.2019.00032
   Massart P, 2007, LECT NOTES MATH, V1896, P1, DOI 10.1007/978-3-540-48503-2
   Masuda S, 2018, IEEE ICST WORKSHOP, P279, DOI 10.1109/ICSTW.2018.00061
   McCallum A., 1998, AAAI 98 WORKSH LEARN, V752, P41, DOI DOI 10.1109/TSMC.1985.6313426
   McClure N., 2017, TensorFlow Machine Learning Cookbook
   McKeeman William M., 1998, DIGIT TECH J, V10, P100
   McMinn P, 2004, SOFTW TEST VERIF REL, V14, P105, DOI 10.1002/stvr.294
   Memon AM, 2002, COMPUTER, V35, P87, DOI 10.1109/MC.2002.1023795
   Metevier Blossom, 2019, ADV NEURAL INFORM PR, V32, P14922
   Metzen J.H., 2017, 5 INT C LEARN REPR I
   Miller T, 2019, ARTIF INTELL, V267, P1, DOI 10.1016/j.artint.2018.07.007
   Mohri M., 2012, Foundations of Machine Learning
   Molnar C., 2020, Interpretable machine learning.
   Moosavi-Dezfooli SM, 2016, PROC CVPR IEEE, P2574, DOI 10.1109/CVPR.2016.282
   Moro S, 2014, DECIS SUPPORT SYST, V62, P22, DOI 10.1016/j.dss.2014.03.001
   Muresan H, 2018, ACTA U SAPIEN INFORM, V10, P26, DOI 10.2478/ausi-2018-0002
   Murphy Christian, 2008, SEKE 2008. The 20th International Conference Proceedings on Software Engineering & Knowledge Engineering, P867
   Murphy C., 2007, P INT WORKSH RAND TE, P38
   Murphy C., 2007, P INT C SOFTW ENG KN, P167
   Murphy C, 2009, ISSTA 2009: INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P189
   Murphy C, 2009, SECOND INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION, AND VALIDATION, PROCEEDINGS, P436, DOI 10.1109/ICST.2009.19
   Nakajima S., 2018, P INT WORKSH STRUCT, P21
   Nakajima S, 2018, IEEE GLOB CONF CONSU, P601, DOI 10.1109/GCCE.2018.8574766
   Nakajima S, 2016, ASIA PAC SOFWR ENG, P297, DOI [10.1109/APSEC.2016.049, 10.1109/APSEC.2016.19]
   Nakajima Shin., 2017, INT C SOFTWARE ENG F, P174
   Nejadgholi Mahdi, 2019, 2019 34th IEEE/ACM International Conference on Automated Software Engineering (ASE). Proceedings, P785, DOI 10.1109/ASE.2019.00078
   Neter J., 1996, APPL LINEAR STAT MOD, V81, P1126
   Netzer Y, 2011, PROC NIPS WORKSHOP D, P1
   Nexar, 2018, NEX DAT
   Nie Y., 2018, ARXIV181107033
   Nishi Y, 2018, IEEE ICST WORKSHOP, P273, DOI 10.1109/ICSTW.2018.00060
   Nushi B, 2017, AAAI CONF ARTIF INTE, P1017
   O'Kelly M, 2018, ADV NEUR IN, V31
   Odena A., 2018, ARXIV PREPRINT ARXIV
   Pacula M, 2011, UNIT TESTING STAT SO
   Pan X., 2017, ARXIV170403952
   Papernot N, 2016, P IEEE S SECUR PRIV, P582, DOI 10.1109/SP.2016.41
   Papineni K, 2002, 40TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, PROCEEDINGS OF THE CONFERENCE, P311, DOI 10.3115/1073083.1073135
   Pedregosa F, 2011, J MACH LEARN RES, V12, P2825
   Pei KX, 2017, PROCEEDINGS OF THE TWENTY-SIXTH ACM SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES (SOSP '17), P1, DOI 10.1145/3132747.3132785
   Pesu D, 2018, 2018 IEEE/ACM 3RD INTERNATIONAL WORKSHOP ON METAMORPHIC TESTING (MET 2018), P38, DOI 10.1145/3193977.3193980
   Polyzotis N, 2017, SIGMOD'17: PROCEEDINGS OF THE 2017 ACM INTERNATIONAL CONFERENCE ON MANAGEMENT OF DATA, P1723, DOI 10.1145/3035918.3054782
   Propublica, 2016, DAT PROP STOR MACH B
   Qin Y, 2018, 2018 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY AND SECURITY (QRS 2018), P171, DOI 10.1109/QRS.2018.00031
   Rabin M. R. I., 2019, TESTING NEURAL PROGR
   Rahm E., 2000, IEEE Data Eng. Bull, V23, P3, DOI [10.1145/1317331.1317341, DOI 10.1145/1317331.1317341]
   Ramanagopal MS, 2018, IEEE ROBOT AUTOM LET, V3, P3860, DOI 10.1109/LRA.2018.2857402
   Ramanathan A, 2016, DES AUT TEST EUROPE, P786
   Ribeiro MT, 2016, KDD'16: PROCEEDINGS OF THE 22ND ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P1135, DOI 10.1145/2939672.2939778
   Roberts C, 2017, How To Unit Test Machine Learning Code
   Rosenberg D. S., 2007, Artificial Intelligence and Statistics, P396
   Ruan Wenjie, 2018, ARXIV180405805
   SAFAVIAN SR, 1991, IEEE T SYST MAN CYB, V21, P660, DOI 10.1109/21.97458
   Sahiner B, 2000, MED PHYS, V27, P1509, DOI 10.1118/1.599017
   Schaul T., 2014, ARXIV13126055
   Schelter S, 2018, PROC VLDB ENDOW, V11, P1781, DOI 10.14778/3229863.3229867
   Sekhon J, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: NEW IDEAS AND EMERGING RESULTS (ICSE-NIER 2019), P85, DOI 10.1109/ICSE-NIER.2019.00030
   Sellam T, 2019, INT CONF MANAGE DATA, P1117, DOI 10.1145/3299869.3300073
   Sen K., 2005, P 10 EUR SOFTW ENG C, V30, P263, DOI DOI 10.1145/1081706.1081750
   Shahrokni A, 2013, INFORM SOFTWARE TECH, V55, P1, DOI 10.1016/j.infsof.2012.06.002
   Shapiro A., 1989, UCI CHESS KING ROOK
   Sharma A, 2019, IEEE INT CONF SOFTW, P125, DOI 10.1109/ICST.2019.00022
   Shawe-Taylor J., 2004, KERNEL METHODS PATTE
   Shen WJ, 2018, 2018 IEEE 18TH INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY AND SECURITY COMPANION (QRS-C), P108, DOI 10.1109/QRS-C.2018.00032
   Slack D., 2019, Assessing the local interpretability of machine learning models
   Spieker H., 2019, ARXIV190104169
   Srisakaokul Siwakorn, 2018, AAAI WORKSH, P384
   Sun LQ, 2018, 2018 25TH AUSTRALASIAN SOFTWARE ENGINEERING CONFERENCE (ASWEC), P96, DOI 10.1109/ASWEC.2018.00021
   Sun XB, 2017, ASIA PAC SOFWR ENG, P348, DOI 10.1109/APSEC.2017.41
   Sun Y., 2018, Testing deep neural networks
   Sun YC, 2018, IEEE INT CONF AUTOM, P109, DOI 10.1145/3238147.3238172
   Thomas PS, 2019, SCIENCE, V366, P999, DOI 10.1126/science.aag3311
   Thung F., 2012, Proceedings of the 2012 IEEE 23rd International Symposium on Software Reliability Engineering (ISSRE), P271, DOI 10.1109/ISSRE.2012.22
   Tian YC, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P303, DOI 10.1145/3180155.3180220
   Tjeng V., 2017, ARXIV171107356
   Tramèr F, 2017, 2017 IEEE EUROPEAN SYMPOSIUM ON SECURITY AND PRIVACY (EUROS&P), P401, DOI 10.1109/EuroSP.2017.29
   Tuncali CE, 2018, IEEE INT VEH SYM, P1555
   TURNER CD, 1993, CONFERENCE ON SOFTWARE MAINTENANCE 1993, CSM-93: PROCEEDINGS, P302
   U.S. Federal Reserve, 2007, C CRED SCOR ITS EFF
   udacity, 2017, UD CHALL
   Udeshi S., 2019, ARXIV190210027
   Udeshi S, 2018, IEEE INT CONF AUTOM, P98, DOI 10.1145/3238147.3238165
   Uesato Jonathan, 2019, 7 INT C LEARN REPR I
   VAPNIK V, 1994, NEURAL COMPUT, V6, P851, DOI 10.1162/neco.1994.6.5.851
   Vartak M, 2018, INT CONF MANAGE DATA, P1285, DOI 10.1145/3183713.3196934
   Verma S, 2018, 2018 IEEE/ACM INTERNATIONAL WORKSHOP ON SOFTWARE FAIRNESS (FAIRWARE 2018), P1, DOI [10.1145/3194770.3194776, 10.23919/FAIRWARE.2018.8452913]
   VirusTotal, VIRUSTOTAL
   VOAS JM, 1995, IEEE SOFTWARE, V12, P17, DOI 10.1109/52.382180
   Voigt P., 2017, PRACTICAL GUIDE
   Le V, 2014, ACM SIGPLAN NOTICES, V49, P216, DOI [10.1145/2666356.2594334, 10.1145/2594291.2594334]
   Wang H., 2018, ARXIV180902719
   Wang J., 2018, ARXIV180505010
   Wang JY, 2019, PROC INT CONF SOFTW, P1245, DOI 10.1109/ICSE.2019.00126
   Wang WY, 2019, I C DEPEND SYS NETWO, P1, DOI 10.1109/DSN-Industry.2019.00007
   Wegener J, 2004, LECT NOTES COMPUT SC, V3103, P1400
   Weiss Karl, 2016, Journal of Big Data, V3, DOI 10.1186/s40537-016-0043-6
   Werpachowski R., ARXIV190302380, V2019
   Wicker M, 2018, LECT NOTES COMPUT SC, V10805, P408, DOI 10.1007/978-3-319-89960-2_22
   wikipedia, 2018, CAL CONS PRIV ACT
   Williams A., 2018, P 2018 C N AM CHAPTE, P1112
   Woehrle M, 2019, LECT NOTES COMPUT SC, V11699, P333, DOI 10.1007/978-3-030-26250-1_27
   Wohlin C., 2014, INT C EVALUATION ASS, P1
   Xiang W., 2018, ABS181001989 CORR
   Xiao H., 2017, ARXIV170807747
   Xiao QX, 2018, 2018 IEEE SYMPOSIUM ON SECURITY AND PRIVACY WORKSHOPS (SPW 2018), P123, DOI 10.1109/SPW.2018.00027
   Xie X, 2018, CoRR
   Xie XY, 2011, J SYST SOFTWARE, V84, P544, DOI 10.1016/j.jss.2010.11.920
   Xie XY, 2009, INT CONF QUAL SOFTW, P135, DOI 10.1109/QSIC.2009.26
   Xie Xiaoyuan., 2018, METTLE METAMORPHIC T
   Yang W., 2018, WORKSH 32 AAAI C ART, P400
   Zafar M.B., 2015, AISTATS
   Zeyu Sun, 2020, 2020 IEEE/ACM 42nd International Conference on Software Engineering (ICSE), P974, DOI 10.1145/3377811.3380420
   Zhang J., 2019, Perturbed model validation: A new framework to validate model relevance
   Zhang Jie, 2016, P 25 INT S SOFTWARE, P342, DOI [10.1145/2931037, DOI 10.1145/2931037]
   Zhang Jie, 2014, P 29 ACM IEEE INT C, P701, DOI DOI 10.1145/2642937.2642994
   Zhang JM, 2019, IEEE INT CONF SOFTW, P252, DOI 10.1109/ICST.2019.00033
   Zhang L., 2019, ARXIV190100054
   Zhang Liu-ze, 2010, Instrument Techniques and Sensor, P1
   Zhang MS, 2018, IEEE INT CONF AUTOM, P132, DOI 10.1145/3238147.3238187
   Zhang YH, 2018, ISSTA'18: PROCEEDINGS OF THE 27TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P129, DOI 10.1145/3213846.3213866
   Zheng WJ, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: COMPANION PROCEEDINGS (ICSE-COMPANION 2019), P314, DOI 10.1109/ICSE-Companion.2019.00131
   Zhou Hong-Yu., 2018, CoRR
   Zhou ZQ, 2020, IEEE T SOFTWARE ENG, V46, P1120, DOI 10.1109/TSE.2018.2876433
   Zhou ZQ, 2019, COMMUN ACM, V62, P61, DOI 10.1145/3241979
   Zillow, 2016, ZILL PRIZ ZILL HOM V
   Zliobaite I, 2017, ARXIV170800754
NR 287
TC 331
Z9 350
U1 93
U2 443
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JAN 1
PY 2022
VL 48
IS 1
BP 1
EP 36
DI 10.1109/TSE.2019.2962027
PG 36
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA YG0HJ
UT WOS:000742179000001
OA Green Submitted
HC Y
HP N
DA 2024-07-18
ER

PT J
AU Iyer, RN
   Yun, SA
   Nagappan, M
   Hoey, J
AF Iyer, Rahul N.
   Yun, S. Alex
   Nagappan, Meiyappan
   Hoey, Jesse
TI Effects of Personality Traits on Pull Request Acceptance
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Psychology; Social factors; Software engineering; Task analysis;
   Dictionaries; Robots; Software; Pull request; GitHub; online
   collaborative environments; open source systems; personality; Big Five;
   five-factor model
ID JOB-PERFORMANCE; 5-FACTOR MODEL; SOFTWARE; CONSCIENTIOUSNESS;
   INTELLIGENCE; DIMENSIONS; OPENNESS
AB In this paper, we examine the influence of personality traits of developers on the pull request evaluation process in GitHub. We first replicate Tsay et al.'s work that examined the influence of social factors (e.g., 'social distance') and technical factors (e.g., test file inclusion) for evaluating contributions, and then extend it with personality based factors. In particular, we extract the Big Five personality traits (Openness, Conscientiousness, Extraversion, Agreeableness, and Neuroticism) of developers from their online digital footprints, such as pull request comments. We analyze the personality traits of 16,935 active developers from 1,860 projects and compare their relative importance to other non-personality factors from past research, in the pull request evaluation process. We find that pull requests from authors (requesters) who are more open and conscientious, but less extroverted, have a higher chance of approval. Furthermore, pull requests that are closed by developers (closers) who are more conscientious, extroverted, and neurotic, have a higher likelihood of acceptance. The larger the difference in personality traits between the requester and the closer, the more positive effect it has on pull request acceptance. Finally, although the effect of personality traits is significant and comparable to technical factors, we find that social factors are still more influential on the likelihood of pull request acceptance.
C1 [Iyer, Rahul N.; Yun, S. Alex; Nagappan, Meiyappan; Hoey, Jesse] Univ Waterloo, David R Cheriton Sch Comp Sci, Waterloo, ON N2L 3G1, Canada.
C3 University of Waterloo
RP Iyer, RN (corresponding author), Univ Waterloo, David R Cheriton Sch Comp Sci, Waterloo, ON N2L 3G1, Canada.
EM r3iyer@uwaterloo.ca; alex.yun@uwaterloo.ca; mei.nagappan@uwaterloo.ca;
   jhoey@cs.uwaterloo.ca
OI Yun, Seonghu/0000-0003-2784-0694; Nagappan,
   Meiyappan/0000-0003-4533-4728
FU Natural Sciences and Engineering Research Council of Canada (NSERC);
   Social Sciences and Humanities Research Council of Canada (SSHRC)
   through the Trans-Atlantic Platform's Digging into Data Program
FX This work was supported by the Natural Sciences and Engineering Research
   Council of Canada (NSERC) and the Social Sciences and Humanities
   Research Council of Canada (SSHRC) through the Trans-Atlantic Platform's
   Digging into Data Program.
CR Acuña ST, 2009, INFORM SOFTWARE TECH, V51, P627, DOI 10.1016/j.infsof.2008.08.006
   Akhtar R, 2015, PERS INDIV DIFFER, V73, P44, DOI 10.1016/j.paid.2014.08.040
   [Anonymous], 2013, P 16 C COMP SUPP COO
   [Anonymous], 2018, IBM PERSONALITY INSI
   [Anonymous], 2014, 18 INT C EVALUATION
   [Anonymous], 1985, MANUAL GUIDE DEV USE
   Arnoux P.-H., 2017, 25 TWEETS KNOW YOU N
   Baddoo N, 2003, J SYST SOFTWARE, V66, P23, DOI 10.1016/S0164-1212(02)00060-2
   BARRICK MR, 1991, PERS PSYCHOL, V44, P1, DOI 10.1111/j.1744-6570.1991.tb00688.x
   Barto K., 2019, MuMIn: Multimodel inference
   Bates D, 2015, J STAT SOFTW, V67, P1, DOI 10.18637/jss.v067.i01
   Bazelli B, 2013, PROC IEEE INT CONF S, P460, DOI 10.1109/ICSM.2013.72
   Bell D, 2010, SIGMIS CPR '10: PROCEEDINGS OF THE 2010 ACM SIGMIS COMPUTER PERSONNEL RESEARCH CONFERENCE, P43
   Boyle G.J., 2008, SAGE HDB PERSONALITY, V1
   BYRNE D, 1969, J EXP RES PERS, V3, P179
   Calefato F, 2018, PROCEEDINGS 2018 ACM/IEEE 13TH INTERNATIONAL CONFERENCE ON GLOBAL SOFTWARE ENGINEERING ICGSE 2018, P92, DOI 10.1145/3196369.3196372
   Calefato F, 2017, INT CONF GLOBAL SOFT, P56, DOI 10.1109/ICGSE.2017.1
   Capretz LF., 2012, ACM SIGSOFT SOFTWARE, V37, P1, DOI DOI 10.1145/2088883.2088901
   Capretz LF, 2010, IT PROF, V12, P6, DOI 10.1109/MITP.2010.33
   Cattell R.B., 1950, Personality: A systematic, theoretical, and factual study, V1st, DOI [DOI 10.1037/10773-000, 10.1037/10773-000]
   Chen JL, 2010, CHI2010: PROCEEDINGS OF THE 28TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, VOLS 1-4, P821
   COSTA PT, 1991, PERS INDIV DIFFER, V12, P887, DOI 10.1016/0191-8869(91)90177-D
   COSTA PT, 1995, J CAREER ASSESSMENT, V3, P123, DOI 10.1177/106907279500300202
   Dabbish L, 2012, P ACM 2012 C COMP SU, P1277, DOI [10.1145/2145204.2145396, DOI 10.1145/2145204.2145396]
   DeYoung CG, 2007, J PERS SOC PSYCHOL, V93, P880, DOI 10.1037/0022-3514.93.5.880
   DIGMAN JM, 1990, ANNU REV PSYCHOL, V41, P417, DOI 10.1146/annurev.psych.41.1.417
   George JM, 2001, J APPL PSYCHOL, V86, P513, DOI 10.1037//0021-9010.86.3.513
   Gousios G, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P345, DOI 10.1145/2568225.2568260
   Gousios G, 2013, IEEE WORK CONF MIN S, P233, DOI 10.1109/MSR.2013.6624034
   Guzman E., 2014, Association for Computing Machinery, P352
   Hannay JE, 2010, IEEE T SOFTWARE ENG, V36, P61, DOI 10.1109/TSE.2009.41
   Paruma-Pabón OH, 2016, 9TH IEEE/ACM INTERNATIONAL WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING (CHASE 2016), P8, DOI [10.1109/CHASE.2016.010, 10.1145/2897586.2897611]
   Hogan R, 1998, PSYCHOL INQ, V9, P152, DOI 10.1207/s15327965pli0902_14
   Judge TA, 2002, J APPL PSYCHOL, V87, P765, DOI 10.1037/0021-9010.87.4.765
   Kam J., 2006, P ISESE 06, P232, DOI DOI 10.1145/1159733.1159769
   Kanij T, 2015, 2015 IEEE/ACM 8TH INTERNATIONAL WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING CHASE 2015, P1, DOI 10.1109/CHASE.2015.7
   Karn JS, 2007, BEHAV INFORM TECHNOL, V26, P99, DOI 10.1080/01449290500102110
   Kosti MV, 2014, INFORM SOFTWARE TECH, V56, P973, DOI 10.1016/j.infsof.2014.03.004
   Lee KM, 2006, J COMMUN, V56, P754, DOI 10.1111/j.1460-2466.2006.00318.x
   Mannix Elizabeth, 2005, Psychol Sci Public Interest, V6, P31, DOI 10.1111/j.1529-1006.2005.00022.x
   Marcolino L.S., 2013, P 23 INT JOINT C ART, P279
   Martínez LG, 2010, LECT NOTES ARTIF INT, V6438, P428
   MCCRAE RR, 1989, J PERS, V57, P17, DOI 10.1111/j.1467-6494.1989.tb00759.x
   MCCRAE RR, 1987, J PERS SOC PSYCHOL, V52, P1258, DOI 10.1037/0022-3514.52.6.1258
   MCCRAE RR, 1987, J PERS SOC PSYCHOL, V52, P81, DOI 10.1037/0022-3514.52.1.81
   MCCRAE RR, 1985, J PERS SOC PSYCHOL, V49, P710, DOI 10.1037/0022-3514.49.3.710
   Mehrabian A, 1996, AUST J PSYCHOL, V48, P86, DOI 10.1080/00049539608259510
   Munaiah N, 2017, EMPIR SOFTW ENG, V22, P3219, DOI 10.1007/s10664-017-9512-6
   Murgia A., 2014, Proceedings of the 11th working conference on mining software repositories, Ved, P262
   Neuman GA, 1999, GROUP ORGAN MANAGE, V24, P28, DOI 10.1177/1059601199241003
   Pennington J., 2014, P 2014 C EMP METH NA, P1532
   Pereira RA, 2017, LECT NOTES ARTIF INT, V10233, P278, DOI 10.1007/978-3-319-57351-9_32
   Pittenger D.J., 2005, Consult. Psychol. J.: Pract. Res., V57, P210, DOI [DOI 10.1037/1065-9293.57.3.210, 10.1037/1065-9293.57.3.210]
   Pournelle G. H., 1953, Journal of Mammalogy, V34, P133, DOI 10.1890/0012-9658(2002)083[1421:SDEOLC]2.0.CO;2
   Rastogi A, 2016, PROC INT SYMP SOFTW, P77, DOI 10.1109/ISSRE.2016.43
   Rigby P. C., 2007, Proceedings of the 4th International Workshop on Mining Software Repositories (MSR '07), P23, DOI [10.1109/MSR.2007.35, DOI 10.1109/MSR.2007.35]
   Salgado JF, 2003, J OCCUP ORGAN PSYCH, V76, P323, DOI 10.1348/096317903769647201
   Salleh N, 2014, EMPIR SOFTW ENG, V19, P714, DOI 10.1007/s10664-012-9238-4
   Smith EK, 2016, 9TH IEEE/ACM INTERNATIONAL WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING (CHASE 2016), P15, DOI [10.1145/2897586.2897596, 10.1109/CHASE.2016.011]
   Soares DM, 2015, 30TH ANNUAL ACM SYMPOSIUM ON APPLIED COMPUTING, VOLS I AND II, P1541, DOI 10.1145/2695664.2695856
   Tantithamthavorn C, 2018, 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING - SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2018), P286, DOI 10.1145/3183519.3183547
   Tapus A., 2008, AAAI SPRING S, P133
   Tsay J, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P356, DOI 10.1145/2568225.2568315
   Viswesvaran C, 2000, EDUC PSYCHOL MEAS, V60, P224, DOI 10.1177/00131640021970475
   Wakefield J, LINUS TORVALDS ILL N
   Walle T, 2009, INT SYMP EMP SOFTWAR, P203, DOI 10.1109/ESEM.2009.5315996
   Wang Y, 2009, INT SYMP EMP SOFTWAR, P411
   Yu Y, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P367, DOI 10.1109/MSR.2015.42
NR 68
TC 17
Z9 17
U1 3
U2 7
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD NOV 1
PY 2021
VL 47
IS 11
BP 2632
EP 2643
DI 10.1109/TSE.2019.2960357
PG 12
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science; Engineering
GA WW2QE
UT WOS:000717767100020
DA 2024-07-18
ER

PT J
AU Viviani, G
   Famelis, M
   Xia, X
   Janik-Jones, C
   Murphy, GC
AF Viviani, Giovanni
   Famelis, Michalis
   Xia, Xin
   Janik-Jones, Calahan
   Murphy, Gail C.
TI Locating Latent Design Information in Developer Discussions: A Study on
   Pull Requests
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE System analysis and design; Tools; Documentation; Robustness; Predictive
   models; Software systems; Design discussions; latent design;
   conversations; prediction model; design recovery
ID SOFTWARE; RECOVERY; MODELS
AB A software system's design determines many of its properties, such as maintainability and performance. An understanding of design is needed to maintain system properties as changes to the system occur. Unfortunately, many systems do not have up-to-date design documentation and approaches that have been developed to recover design often focus on how a system works by extracting structural and behaviour information rather than information about the desired design properties, such as robustness or performance. In this paper, we explore whether it is possible to automatically locate where design is discussed in on-line developer discussions. We investigate and introduce a classifier that can locate paragraphs in pull request discussions that pertain to design with an average AUC score of 0.87. We show that this classifier, when applied to projects on which it was not trained, agrees with the identification of design points by humans with an average AUC score of 0.79. We describe how this classifier could be used as the basis of tools to improve such tasks as reviewing code and implementing new features.
C1 [Viviani, Giovanni; Murphy, Gail C.] Univ British Columbia, Vancouver, BC V6T 1Z4, Canada.
   [Famelis, Michalis] Univ Montreal, Montreal, PQ H3T 1J4, Canada.
   [Xia, Xin] Monash Univ, Melbourne, Vic 3000, Australia.
   [Janik-Jones, Calahan] Univ Toronto, Toronto, ON M5S, Canada.
C3 University of British Columbia; Universite de Montreal; Monash
   University; University of Toronto
RP Viviani, G (corresponding author), Univ British Columbia, Vancouver, BC V6T 1Z4, Canada.
EM vivianig@cs.ubc.ca; famelis@iro.umontreal.ca; xin.xia@monash.edu;
   cal.janik.jones@mail.utoronto.ca; murphy@cs.ubc.ca
RI Xia, Xin/AAD-6217-2022
OI Xia, Xin/0000-0002-6302-3256; Famelis, Michalis/0000-0003-3545-0274;
   Viviani, Giovanni/0000-0002-0639-6646
FU Natural Sciences and Engineering Research Council of Canada (NSERC)
FX We thank Georgios Gousios for providing us with the corpus of failed
   pull requests from GitHub. We acknowledge the support of the Natural
   Sciences and Engineering Research Council of Canada (NSERC).
CR Abdeen H., 2014, INT C AUTOMATED SOFT, P289
   Antoniol G, 2002, IEEE T SOFTWARE ENG, V28, P970, DOI 10.1109/TSE.2002.1041053
   BIGGERSTAFF TJ, 1989, COMPUTER, V22, P36, DOI 10.1109/2.30731
   Breiman L, 2001, MACH LEARN, V45, P5, DOI 10.1023/A:1010933404324
   Brunet J., 2014, P 11 WORK C MIN SOFT, P340
   CHIKOFSKY EJ, 1990, IEEE SOFTWARE, V7, P13, DOI 10.1109/52.43044
   Corbett J. C., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, P439, DOI 10.1109/ICSE.2000.870434
   Correa D, 2014, WWW'14: PROCEEDINGS OF THE 23RD INTERNATIONAL CONFERENCE ON WORLD WIDE WEB, P631, DOI 10.1145/2566486.2568036
   Crowston K., 2003, P INT C INF SYST
   Di Sorbo A, 2015, IEEE INT CONF AUTOM, P12, DOI 10.1109/ASE.2015.12
   Fawcett T, 2006, PATTERN RECOGN LETT, V27, P861, DOI 10.1016/j.patrec.2005.10.010
   Fleiss J., 2003, STAT METHODS RATES P, P598, DOI DOI 10.1002/0471445428.CH18
   Freeman P, 2004, COMMUN ACM, V47, P19, DOI 10.1145/1012037.1012054
   Gamma E., DESIGN PATTERNS ELEM
   Giacinto G, 2001, IMAGE VISION COMPUT, V19, P699, DOI 10.1016/S0262-8856(01)00045-2
   Gousios G, 2016, PROC INT CONF SOFTW, P285, DOI 10.1145/2884781.2884826
   Gousios G, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P358, DOI 10.1109/ICSE.2015.55
   Guzzi A, 2013, IEEE WORK CONF MIN S, P277, DOI 10.1109/MSR.2013.6624039
   Hall M., 2009, ACM SIGKDD Explor. Newsl, V11, P18, DOI DOI 10.1145/1656274.1656278
   Han J, 2012, MOR KAUF D, P1
   IEEE Application Guide for IEEE Std 1547(TM), 2009, IEEE Std 1547.2-2008, P1
   Jarczyk A., 1992, System Sciences, 1992, V2,, P577, DOI [10.1109/HICSS.1992.183309, DOI 10.1109/HICSS.1992.183309]
   Knauss E, 2015, REQUIR ENG, V20, P383, DOI 10.1007/s00766-014-0205-z
   KRUCHTEN PB, 1995, IEEE SOFTWARE, V12, P42, DOI 10.1109/52.469759
   LANDIS JR, 1977, BIOMETRICS, V33, P159, DOI 10.2307/2529310
   Lee JT, 1997, IEEE EXPERT, V12, P78, DOI 10.1109/64.592267
   Lessmann S, 2008, IEEE T SOFTWARE ENG, V34, P485, DOI 10.1109/TSE.2008.35
   Li B., 2011, P 20 ACM INT C INFOR, P2477, DOI [10.1145/2063576.2063996, DOI 10.1145/2063576.2063996]
   Li H, 2017, EMPIR SOFTW ENG, V22, P1831, DOI 10.1007/s10664-016-9467-z
   Macbeth G, 2011, UNIV PSYCHOL, V10, P545, DOI 10.11144/Javeriana.upsy10-2.cdcp
   MacLean A., 1989, SIGCHI Bulletin, P247, DOI 10.1145/67450.67497
   MANN HB, 1947, ANN MATH STAT, V18, P50, DOI 10.1214/aoms/1177730491
   Mashiyat A. Shah, 2014, P 4 INT WORKSH REC S, P1
   McCallum A., 1998, AAAI 98 WORKSH LEARN, V752, P41, DOI DOI 10.1109/TSMC.1985.6313426
   Moran T.P., 1996, DESIGN RATIONALE CON
   Muller H. A., 1988, Proceedings of the 10th International Conference on Software Engineering (Cat. No.88CH2554-4), P80, DOI 10.1109/ICSE.1988.93690
   Murphy GC, 2001, IEEE T SOFTWARE ENG, V27, P364, DOI 10.1109/32.917525
   Murray Gabriel, 2008, Proceedings of EMNLP, P773
   Petre Marian, 2013, Software Designers in Action: A Human-Centric Look at Design Work, V1st
   Rajbahadur GK, 2017, IEEE WORK CONF MIN S, P135, DOI 10.1109/MSR.2017.4
   Ralph P, 2009, LECT NOTES BUS INF P, V14, P103
   Rastkar S, 2014, IEEE T SOFTWARE ENG, V40, P366, DOI 10.1109/TSE.2013.2297712
   Rennie J.D., 2003, Proceedings of the 20th International Conference on Machine Learning, P616
   Robillard MP, 2016, PROC INT CONF SOFTW, P476, DOI 10.1145/2884781.2884792
   Robillard MP, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P920, DOI 10.1145/2950290.2983983
   Rodeghero P, 2017, PROC INT CONF SOFTW, P49, DOI 10.1109/ICSE.2017.13
   Romano D., 2011, 2011 IEEE 27th International Conference on Software Maintenance, P303, DOI 10.1109/ICSM.2011.6080797
   Shahbazian A, 2018, 2018 IEEE 15TH INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE (ICSA), P95, DOI 10.1109/ICSA.2018.00019
   Sim SE, 1998, PROC INT CONF SOFTW, P361, DOI 10.1109/ICSE.1998.671389
   Steinmacher I, 2015, PROCEEDINGS OF THE 2015 ACM INTERNATIONAL CONFERENCE ON COMPUTER-SUPPORTED COOPERATIVE WORK AND SOCIAL COMPUTING (CSCW'15), P1379, DOI 10.1145/2675133.2675215
   Taboada M, 2006, DISCOURSE STUD, V8, P567, DOI 10.1177/1461445606064836
   Tantithamthavorn C, 2018, 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING - SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2018), P286, DOI 10.1145/3183519.3183547
   Tantithamthavorn C, 2017, IEEE T SOFTWARE ENG, V43, P1, DOI 10.1109/TSE.2016.2584050
   Thongtanunam P, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P141, DOI 10.1109/SANER.2015.7081824
   Toulmin S., 1958, The uses of argument
   Tsay J, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P144, DOI 10.1145/2635868.2635882
   Valdivia-Garcia Harold., 2014, P 11 WORKING C MININ, P72
   van Gurp J, 2002, J SYST SOFTWARE, V61, P105, DOI 10.1016/S0164-1212(01)00152-2
   Viviani G, 2018, INT C PROGRAM COMPRE, P328, DOI 10.1145/3196321.3196357
   Viviani G, 2018, 2018 IEEE/ACM 11TH INTERNATIONAL WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING (CHASE), P104, DOI 10.1145/3195836.3195841
   Wolpert DH, 1999, MACH LEARN, V35, P41, DOI 10.1023/A:1007519102914
   Xia X, 2016, ESEM'16: PROCEEDINGS OF THE 10TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, DOI 10.1145/2961111.2962606
   Xia X, 2017, EMPIR SOFTW ENG, V22, P3149, DOI 10.1007/s10664-017-9514-4
   Ye YW, 2003, PROC INT CONF SOFTW, P419
   Zanjani MB, 2016, IEEE T SOFTWARE ENG, V42, P530, DOI 10.1109/TSE.2015.2500238
NR 65
TC 8
Z9 8
U1 1
U2 4
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUL 1
PY 2021
VL 47
IS 7
BP 1402
EP 1413
DI 10.1109/TSE.2019.2924006
PG 12
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA TJ6XV
UT WOS:000673623000006
DA 2024-07-18
ER

PT J
AU Barbon, G
   Leroy, V
   Salaün, G
AF Barbon, Gianluca
   Leroy, Vincent
   Salaun, Gwen
TI Debugging of Behavioural Models using Counterexample Analysis
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Computer bugs; Debugging; Safety; Model checking; Task analysis; Tools;
   Analytical models; Behavioural models; model checking; counterexample;
   abstraction
AB Model checking is an established technique for automatically verifying that a model satisfies a given temporal property. When the model violates the property, the model checker returns a counterexample, which is a sequence of actions leading to a state where the property is not satisfied. Understanding this counterexample for debugging the specification is a complicated task for several reasons: (i) the counterexample can contain a large number of actions, (ii) the debugging task is mostly achieved manually, and (iii) the counterexample does not explicitly highlight the source of the bug that is hidden in the model. This article presents a new approach that improves the usability of model checking by simplifying the comprehension of counterexamples. To do so, we first extract in the model all the counterexamples. Second, we define an analysis algorithm that identifies actions that make the model skip from incorrect to correct behaviours, making these actions relevant from a debugging perspective. Third, we develop a set of abstraction techniques to extract these actions from counterexamples. Our approach is fully automated by a tool we implemented and was applied on real-world case studies from various application areas for evaluation purposes.
C1 [Barbon, Gianluca; Salaun, Gwen] Univ Grenoble Alpes, CNRS, INRIA, Grenoble INP,LIG, F-38000 Grenoble, France.
   [Leroy, Vincent] Univ Grenoble Alpes, CNRS, Grenoble INP, LIG, F-38000 Grenoble, France.
C3 Communaute Universite Grenoble Alpes; Institut National Polytechnique de
   Grenoble; Universite Grenoble Alpes (UGA); Centre National de la
   Recherche Scientifique (CNRS); Inria; Communaute Universite Grenoble
   Alpes; Institut National Polytechnique de Grenoble; Universite Grenoble
   Alpes (UGA); Centre National de la Recherche Scientifique (CNRS)
RP Salaün, G (corresponding author), Univ Grenoble Alpes, CNRS, INRIA, Grenoble INP,LIG, F-38000 Grenoble, France.
EM gianluca.barbon@gmail.com; vincent.leroy@imag.fr; gwen.salaun@inria.fr
OI Barbon, Gianluca/0000-0001-8531-4268
CR Aho A.V., 1986, COMPILERS PRINCIPLES
   [Anonymous], 2019, CLEAR DEBUGGING TOOL
   [Anonymous], 1981, Lecture Notes in Computer Science, DOI [10.1007/BFb0017309, DOI 10.1007/BFB0017309]
   [Anonymous], 2019, NEO4J GRAPH DATABASE
   [Anonymous], 2001, MODEL CHECKING
   Baier C, 2008, PRINCIPLES OF MODEL CHECKING, P1
   Ball T, 2003, ACM SIGPLAN NOTICES, V38, P97, DOI 10.1145/640128.604140
   Barbon G, 2017, LECT NOTES COMPUT SC, V10522, P20, DOI 10.1007/978-3-319-68972-2_2
   Baudry B., 2006, 28th International Conference on Software Engineering Proceedings, P82, DOI 10.1145/1134285.1134299
   Beer A, 2015, LECT NOTES COMPUT SC, V9232, P203, DOI 10.1007/978-3-319-23404-5_14
   Befrouei MT, 2014, LECT NOTES COMPUT SC, V8734, P162, DOI 10.1007/978-3-319-11164-3_14
   Beyer D, 2004, PROC INT CONF SOFTW, P326, DOI 10.1109/ICSE.2004.1317455
   Champelovier D., 2018, Reference Manual of the LNT to LOTOS Translator (Version 6.7)
   Evrard H., 2017, J LOGICAL ALGEBRAIC, V88
   Garavel Hubert, 2013, International Journal on Software Tools for Technology Transfer, V15, P89, DOI 10.1007/s10009-012-0244-z
   Garavel H, 2001, INT FED INFO PROC, V69, P377, DOI 10.1007/0-306-47003-9_24
   Gössler G, 2014, LECT NOTES COMPUT SC, V8348, P157, DOI 10.1007/978-3-319-07602-7_11
   Gössler G, 2010, LECT NOTES COMPUT SC, V6418, P270, DOI 10.1007/978-3-642-16612-9_21
   Groce A, 2003, LECT NOTES COMPUT SC, V2648, P121
   Groce A., 2006, International Journal on Software Tools for Technology Transfer, V8, P229, DOI 10.1007/s10009-005-0202-0
   HUTCHINS M, 1994, PROC INT CONF SOFTW, P191, DOI 10.1109/ICSE.1994.296778
   Jin HS, 2002, LECT NOTES COMPUT SC, V2280, P445
   Lang F, 2013, LOG METH COMPUT SCI, V9, DOI 10.2168/LMCS-9(4:1)2013
   Leue Stefan, 2013, Model Checking Software. 20th International Symposium, SPIN 2013. Proceedings, P264, DOI 10.1007/978-3-642-39176-7_17
   Mateescu R, 2008, LECT NOTES COMPUT SC, V5014, P148, DOI 10.1007/978-3-540-68237-0_12
   Mateescu R, 2012, IEEE T SOFTWARE ENG, V38, P755, DOI 10.1109/TSE.2011.62
   Milner R., 1989, Communication and concurrency
   Papadakis M., 2014, Proceedings of the 29th Annual ACM Symposium on Applied Computing, P1293
   Ravi K, 2004, LECT NOTES COMPUT SC, V2988, P31
   Salaün G, 2004, IEEE INTERNATIONAL CONFERENCE ON WEB SERVICES, PROCEEDINGS, P43, DOI 10.1109/ICWS.2004.1314722
   Wong WE, 2016, IEEE T SOFTWARE ENG, V42, P707, DOI 10.1109/TSE.2016.2521368
   Yan XF, 2003, SIAM PROC S, P166
NR 32
TC 4
Z9 5
U1 1
U2 1
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUN 1
PY 2021
VL 47
IS 6
BP 1184
EP 1197
DI 10.1109/TSE.2019.2915303
PG 14
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA SQ8XU
UT WOS:000660633800005
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Vierhauser, M
   Bayley, S
   Wyngaard, J
   Xiong, WD
   Cheng, JH
   Huseman, J
   Lutz, R
   Cleland-Huang, J
AF Vierhauser, Michael
   Bayley, Sean
   Wyngaard, Jane
   Xiong, Wandi
   Cheng, Jinghui
   Huseman, Joshua
   Lutz, Robyn
   Cleland-Huang, Jane
TI Interlocking Safety Cases for Unmanned Autonomous Systems in Shared
   Airspaces
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Safety; Unmanned aerial vehicles; Monitoring; Runtime; Software;
   Atmospheric modeling; NASA; UAV; unmanned autonomous systems; safety
   assurance cases; monitoring
ID TRUST; REQUIREMENTS; CONSTRAINTS; CONFIDENCE; REPUTATION; UAVS
AB The growing adoption of unmanned aerial vehicles (UAVs) for tasks such as eCommerce, aerial surveillance, and environmental monitoring introduces the need for new safety mechanisms in an increasingly cluttered airspace. In our work we thus emphasize safety issues that emerge at the intersection of infrastructures responsible for controlling the airspace, and the diverse UAVs operating in their space. We build on safety assurance cases (SAC) - a state-of-the-art solution for reasoning about safety - and propose a novel approach based on interlocking SACs. The infrastructure safety case (ISAC) specifies assumptions upon UAV behavior, while each UAV demonstrates compliance to the ISAC by presenting its own (pluggable) safety case (pSAC) which connects to the ISAC through a set of interlock points. To collect information on each UAV we enforce a "trust but monitor" policy, supported by runtime monitoring and an underlying reputation model. We evaluate our approach in three ways: first by developing ISACs for two UAV infrastructures, second by running simulations to evaluate end-to-end effectiveness, and finally via an outdoor field-study with physical UAVs. The results show that interlocking SACs can be effective for identifying, specifying, and monitoring safety-related constraints upon UAVs flying in a controlled airspace.
C1 [Vierhauser, Michael; Bayley, Sean; Wyngaard, Jane; Huseman, Joshua; Cleland-Huang, Jane] Univ Notre Dame, Dept Comp Sci & Engn, Notre Dame, IN 46556 USA.
   [Cheng, Jinghui] Polythechn Montreal, Dept Comp Engn, Montreal, PQ H3T 1J4, Canada.
   [Xiong, Wandi; Lutz, Robyn] Iowa State Univ, Dept Comp Sci, Ames, IA 50011 USA.
C3 University of Notre Dame; Iowa State University
RP Vierhauser, M (corresponding author), Univ Notre Dame, Dept Comp Sci & Engn, Notre Dame, IN 46556 USA.
EM mvierhau@nd.edu; seanbayley@gmail.com; jwyngaar@nd.edu;
   wdxiong@iastate.edu; jinghuicheng@gmail.com; jhuseman@nd.edu;
   rlutz@iastate.edu; JaneClelandHuangi@nd.edu
RI Xiong, Wandi/KIK-6676-2024; Vierhauser, Michael/GNH-4778-2022
OI Lutz, Robyn/0000-0001-5390-7982; Cleland-Huang, Jane/0000-0001-9436-5606
FU US National Science Foundation [CCF-1741781, CCF-1649448, CCF1513717];
   Austrian Science Fund [FWF J3998-N31]; Austrian Science Fund (FWF)
   [J3998] Funding Source: Austrian Science Fund (FWF)
FX This project has been funded by the US National Science Foundation
   Grants (CCF-1741781, CCF-1649448, and CCF1513717) and the Austrian
   Science Fund (FWF J3998-N31).
CR Elkader KA, 2015, LECT NOTES COMPUT SC, V9109, P23, DOI 10.1007/978-3-319-19249-9_3
   Adelard, 1998, ASCAD AD SAF CAS DEV
   American Red Cross, 2015, DRON DIS RESP REL OP
   Amorim Tiago, 2018, SOLUTIONS CYBER PHYS, P137, DOI DOI 10.4018/978-1-5225-2845-6
   [Anonymous], 2003, IC200350 EPFL
   [Anonymous], 2015, NASATM2015218817
   [Anonymous], 2011, BOSTON C ENVIRON AFF
   [Anonymous], Object Constraint Language (OCL) Specification
   [Anonymous], 2016, TRUSTWORTHY CYBER PH
   [Anonymous], 2017, ARDUPILOT
   [Anonymous], 2017, ORACLE NASHORN JAVAS
   [Anonymous], 2018, STRUCT ASS CAS MET S
   Anthony D, 2014, IEEE INT C INT ROBOT, P4805, DOI 10.1109/IROS.2014.6943245
   ArduPilot,, 2017, SITL SIM
   Armengaud E, 2018, LECT N MOBIL, P151, DOI 10.1007/978-3-319-66972-4_13
   Attwood K., GSN COMMUNITY STANDA
   Ayoub Anaheed, 2012, Computer Safety, Reliability, and Security. Proceedings of the 31st International Conference, SAFECOMP 2012, P305, DOI 10.1007/978-3-642-33678-2_26
   Bartsch R. I, J AERONAUTICS AEROSP, V140, DOI [10.4172/2168-9792.10 00140, DOI 10.4172/2168-9792.1000140]
   Bloomfield R, 2014, 2014 IEEE INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING WORKSHOPS (ISSREW), P186, DOI 10.1109/ISSREW.2014.72
   Brunel Julien, 2012, Computer Safety, Reliability,and Security. Proceedings of SAFECOMP 2012 Workshops: Sassur, ASCoMS, DESEC4LCCI, ERCIM/EWICS, IWDE, P307, DOI 10.1007/978-3-642-33675-1_27
   Burnett C., 2010, P INT JOINT C AUTONO, V1, P241, DOI DOI 10.1016/J.DSS.2005.05.019
   Calinescu R, 2018, IEEE T SOFTWARE ENG, V44, P1039, DOI 10.1109/TSE.2017.2738640
   Campoy P, 2009, J INTELL ROBOT SYST, V54, P105, DOI 10.1007/s10846-008-9256-z
   Castelfranchi C., 2005, SOCIOCOGNITIVE THEOR
   Center for the Study of the Drone,, 2017, DRON SIGHT CLOS ENC
   Cheng JH, 2018, 2018 IEEE/ACM 11TH INTERNATIONAL WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING (CHASE), P57, DOI 10.1145/3195836.3195838
   Chowdhury T, 2017, IEEE INT SYMP SOFTW, P69, DOI 10.1109/ISSREW.2017.14
   Claesson A, 2017, JAMA-J AM MED ASSOC, V317, P2332, DOI 10.1001/jama.2017.3957
   Cleland-Huang J, 2018, INT REQUIR ENG CONF, P262, DOI 10.1109/RE.2018.00034
   Coronato A, 2010, ADV ENG SOFTW, V41, P737, DOI 10.1016/j.advengsoft.2009.12.014
   de Oliveira AL, 2015, ADV INTELL SYST COMP, V365, P319, DOI 10.1007/978-3-319-19216-1_30
   Denney Ewen, 2016, Computer Safety, Reliability and Security. 35th International Conference, SAFECOMP 2016. Proceedings: LNCS 9922, P51, DOI 10.1007/978-3-319-45477-1_5
   Denney Ewen, 2012, Computer Safety, Reliability,and Security. Proceedings of SAFECOMP 2012 Workshops: Sassur, ASCoMS, DESEC4LCCI, ERCIM/EWICS, IWDE, P8, DOI 10.1007/978-3-642-33675-1_2
   Denney E, 2017, LECT NOTES COMPUT SC, V10488, P162, DOI 10.1007/978-3-319-66266-4_11
   Denney E, 2015, LECT NOTES COMPUT SC, V9337, P328, DOI 10.1007/978-3-319-24255-2_24
   Denney E, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P587, DOI 10.1109/ICSE.2015.199
   Denney E, 2014, IEEE T RELIAB, V63, P830, DOI 10.1109/TR.2014.2335995
   Denney E, 2012, IEEE INT C ENG COMP, P199, DOI 10.1109/ICECCS.2012.20
   Denney E, 2011, INT SYMP EMP SOFTWAR, P380, DOI 10.1109/ESEM.2011.53
   Denney Ewen, 2016, P 2016 IEEE AIAA 35, P1
   Dietrich F, 2013, J SYST ARCHITECT, V59, P1047, DOI 10.1016/j.sysarc.2012.12.001
   DJI, 2016, DJI GO APP NOW INCL
   Do Hoang Q. A., 2012, P EMB REAL TIM SOFTW
   Doherty P, 2009, AUTON AGENT MULTI-AG, V19, P332, DOI 10.1007/s10458-009-9079-8
   Duan L., 2014, International Conference on Computer Safety, Reliability, and Security, P15
   Duan L, 2016, IEEE HI ASS SYS ENGR, P86, DOI 10.1109/HASE.2016.52
   Erdelj M, 2017, IEEE PERVAS COMPUT, V16, P24, DOI 10.1109/MPRV.2017.11
   Feather MS, 2013, 2013 1ST INTERNATIONAL WORKSHOP ON ASSURANCE CASES FOR SOFTWARE-INTENSIVE SYSTEMS (ASSURE), P29, DOI 10.1109/ASSURE.2013.6614268
   Federal Aviation Administration, FLIGHT STAND INF MAN
   Federal Aviation Administration (FAA), 2017, SPEC RUL MOD AIRCR S
   Federal Aviation Administration (FAA), 2017, UAS SIGHT REP
   Fenn L., 2007, 2007 2nd Institution of Engineering and Technology International Conference on System Safety, P135
   Gerasimou Simos, 2017, 2017 IEEE/ACM 12th International Symposium on Software Engineering for Adaptive and Self-Managing Systems (SEAMS). Proceedings, P83, DOI 10.1109/SEAMS.2017.19
   Graydon PJ, 2017, SAFETY SCI, V92, P53, DOI 10.1016/j.ssci.2016.09.014
   Graydon PJ, 2007, I C DEPEND SYS NETWO, P347, DOI 10.1109/DSN.2007.17
   Griffiths N., 2005, P 4 INT JOINT C AUTO, P489
   Groza A, 2015, ADV INTELL SYST, V366, P233, DOI 10.1007/978-3-319-08422-0_35
   Havelund K., 2004, International Journal on Software Tools for Technology Transfer, V6, P158, DOI 10.1007/s10009-003-0117-6
   Hawkins R, 2015, IEEE HI ASS SYS ENGR, P110, DOI 10.1109/HASE.2015.25
   Hawkins R, 2011, ADVANCES IN SYSTEMS SAFETY, P3, DOI 10.1007/978-0-85729-133-2_1
   Hawkins Richard, 2013, P NEXT GEN SYST ASS
   Huynh TD, 2006, AUTON AGENT MULTI-AG, V13, P119, DOI 10.1007/s10458-005-6825-4
   International Civil Aviation Organisation, 2012, 328 ICAO
   Ireland M. L., 2016, ARXIV PREPRINT ARXIV
   Ismail R., 2002, P 15 BLED ELECT COMM, P2502
   Jackson M., 2001, PROBLEM FRAMES ANAL
   Jackson M, 2010, REFLECTIONS ON THE WORK OF C A R HOARE, P143, DOI 10.1007/978-1-84882-912-1_7
   Jiang H, 2017, AUTON ROBOT, V41, P1027, DOI 10.1007/s10514-016-9576-y
   Josang A, 2007, ARES 2007: SECOND INTERNATIONAL CONFERENCE ON AVAILABILITY, RELIABILITY AND SECURITY, PROCEEDINGS, P112
   Kelly T., 2004, P DEPENDABLE SYSTEMS
   Kelly T. P, 1999, THESIS U YORK HESLIN
   Kelly T. P., 2001, Technical Report
   Kiszka JJ, 2016, MAR ECOL PROG SER, V560, P237, DOI 10.3354/meps11945
   Kokaly S, 2016, 19TH ACM/IEEE INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS'16), P196, DOI 10.1145/2976767.2976792
   Kollingbaum M. J., 2002, Proceedings of the First International Joint Conference on Autonomous Agents and Multiagent Systems, P272
   Lehman M. M., 1996, Software Process Technology. 5th European Workshop, EWSPT '96 Proceedings, P108, DOI 10.1007/BFb0017737
   Leveson N.G., 1995, Safeware: System Safety and Computers
   Leveson N. G, 2011, ESDWP201113 MIT
   Lin YC, 2015, IEEE INT CONF ROBOT, P6402, DOI 10.1109/ICRA.2015.7140098
   Lutz R, 2007, REQUIR ENG, V12, P41, DOI 10.1007/s00766-006-0039-4
   Lutz RR, 1997, ANN SOFTW ENG, V3, P459, DOI 10.1023/A:1018929719710
   Machin M, 2014, LECT NOTES COMPUT SC, V8666, P262, DOI 10.1007/978-3-319-10506-2_18
   Matsuno Y., 2011, Proceedings of the 11th International Conference on Quality Software (QSIC 2011), P96, DOI 10.1109/QSIC.2011.35
   Matsuno Yutaka, 2010, Proceedings 2010 IEEE 12th International Symposium on High-Assurance Systems Engineering (HASE), P170, DOI 10.1109/HASE.2010.26
   Monteiro Barbosa Davi, 2017, 2017 IEEE/ACM 12th International Symposium on Software Engineering for Adaptive and Self-Managing Systems (SEAMS). Proceedings, P24, DOI 10.1109/SEAMS.2017.18
   Moosbrugger P, 2017, FORM METHOD SYST DES, V51, P31, DOI 10.1007/s10703-017-0275-x
   Mui L., 2002, Proceedings of the 35th Annual Hawaii International Conference on System Sciences, P2431, DOI 10.1109/HICSS.2002.994181
   Murugesan A, 2016, INT REQUIR ENG CONF, P359, DOI 10.1109/RE.2016.35
   Nair S, 2014, INFORM SOFTWARE TECH, V56, P689, DOI 10.1016/j.infsof.2014.03.001
   NASA, Unmanned aircraft system (UAS) traffic management (UTM)
   Papa U, 2017, IEEE METROL AEROSPAC, P571, DOI 10.1109/MetroAeroSpace.2017.7999533
   Pohl K., 2005, SOFTWARE PRODUCT LIN, V10
   Rabiser R, 2017, J SYST SOFTWARE, V125, P309, DOI 10.1016/j.jss.2016.12.034
   Ramasamy S, 2016, AEROSP SCI TECHNOL, V55, P344, DOI 10.1016/j.ast.2016.05.020
   Ramchurn SD, 2004, KNOWL ENG REV, V19, P1, DOI 10.1017/S0269888904000116
   REIFER DJ, 1979, IEEE T RELIAB, V28, P247, DOI 10.1109/TR.1979.5220578
   Rushby J, 2008, LECT NOTES COMPUT SC, V5289, P21
   Schneider D, 2015, 2015 IEEE 26TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING (ISSRE), P324, DOI 10.1109/ISSRE.2015.7381825
   Semsch E, 2009, 2009 IEEE/WIC/ACM INTERNATIONAL JOINT CONFERENCES ON WEB INTELLIGENCE (WI) AND INTELLIGENT AGENT TECHNOLOGIES (IAT), VOL 2, P82
   Shakernia O., 1999, Asian Journal of Control, V1, P128, DOI 10.1111/j.1934-6093.1999.tb00014.x
   Shevtsov Stepan, 2017, 2017 IEEE/ACM 12th International Symposium on Software Engineering for Adaptive and Self-Managing Systems (SEAMS). Proceedings, P12, DOI 10.1109/SEAMS.2017.3
   Silvagni M, 2017, GEOMAT NAT HAZ RISK, V8, P18, DOI 10.1080/19475705.2016.1238852
   Sljivo I, 2017, J SYST SOFTWARE, V131, P570, DOI 10.1016/j.jss.2016.07.034
   Speijker L., 2011, SAE INT J AEROSP
   Spencer J. C., 2015, THESIS B YOUNG U PRO
   Strunk EA, 2008, EXPERT SYST, V25, P9, DOI 10.1111/j.1468-0394.2008.00452.x
   Sujan MA, 2016, SAFETY SCI, V84, P181, DOI 10.1016/j.ssci.2015.12.021
   Sullivan KJ, 1999, DIG PAP INT SYMP FAU, P232, DOI 10.1109/FTCS.1999.781056
   Teacy WTL, 2006, AUTON AGENT MULTI-AG, V12, P183, DOI 10.1007/s10458-006-5952-x
   Tomic T, 2012, IEEE ROBOT AUTOM MAG, V19, P46, DOI 10.1109/MRA.2012.2206473
   van Lamsweerde A., 2009, REQUIREMENTS ENG SYS
   Vierhauser M, 2016, INFORM SOFTWARE TECH, V80, P89, DOI 10.1016/j.infsof.2016.08.005
   Vierhauser M, 2016, J SYST SOFTWARE, V112, P123, DOI 10.1016/j.jss.2015.07.008
   Wang JS, 2003, IEEE T ROBOTIC AUTOM, V19, P283, DOI 10.1109/TRA.2003.808865
   Wang YH, 2007, 20TH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P1551
   Wassyng A, 2015, IEEE DES TEST, V32, P45, DOI 10.1109/MDAT.2015.2462720
   Wassyng A, 2011, LECT NOTES COMPUT SC, V6662, P206
   Wild G, 2017, J AEROSP TECHNOL MAN, V9, P148
   Wohlin C., 2012, Experimentation in Software Engineering
   Youngjib Ham, 2016, Visualization in Engineering, V4, DOI 10.1186/s40327-015-0029-z
NR 120
TC 13
Z9 15
U1 2
U2 5
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAY 1
PY 2021
VL 47
IS 5
BP 899
EP 918
DI 10.1109/TSE.2019.2907595
PG 20
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA SC1RN
UT WOS:000650457700003
OA hybrid
DA 2024-07-18
ER

PT J
AU Qin, BQ
   Tu, TF
   Liu, ZH
   Yu, TT
   Song, LH
AF Qin, Boqin
   Tu, Tengfei
   Liu, Ziheng
   Yu, Tingting
   Song, Linhai
TI Algorithmic Profiling for Real-World Complexity Problems
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Complexity theory; Computer bugs; Production; Tools; Runtime; Software;
   Instruments; Algorithmic complexity; program analysis
AB Complexity problems are a common type of performance issues, caused by algorithmic inefficiency. Algorithmic profiling aims to automatically attribute execution complexity to an executed code construct. It can identify code constructs in superlinear complexity to facilitate performance optimizations and debugging. However, existing algorithmic profiling techniques suffer from several severe limitations, missing the opportunity to be deployed in production environment and failing to effectively pinpoint root causes for performance failures caused by complexity problems. In this paper, we design a tool, ComAir, which can effectively conduct algorithmic profiling in production environment. We propose several novel instrumentation methods to significantly lower runtime overhead and enable the production-run usage. We also design an effective ranking mechanism to help developers identify root causes of performance failures due to complexity problems. Our experimental results show that ComAir can effectively identify root causes and generate accurate profiling results in production environment, while incurring a negligible runtime overhead.
C1 [Qin, Boqin; Tu, Tengfei] Beijing Univ Posts & Telecommun, Beijing 100876, Peoples R China.
   [Liu, Ziheng; Song, Linhai] Penn State Univ, University Pk, PA 16802 USA.
   [Yu, Tingting] Univ Kentucky, Lexington, KY 40506 USA.
C3 Beijing University of Posts & Telecommunications; Pennsylvania
   Commonwealth System of Higher Education (PCSHE); Pennsylvania State
   University; Pennsylvania State University - University Park; University
   of Kentucky
RP Tu, TF (corresponding author), Beijing Univ Posts & Telecommun, Beijing 100876, Peoples R China.; Song, LH (corresponding author), Penn State Univ, University Pk, PA 16802 USA.
EM bobbqqin@bupt.edu.cn; tutengfei.kevin@bupt.edu.cn; zxl381@psu.edu;
   tyu@cs.uky.edu; songlh@ist.psu.edu
RI yu, tingting/HGA-4783-2022; Qin, Boqin/U-9266-2018
OI Qin, Boqin/0000-0002-8510-8656
CR [Anonymous], 2019, Coefficient of Determination (R Squared): Definition, Calculation
   Arulraj J, 2013, ACM SIGPLAN NOTICES, V48, P101, DOI 10.1145/2499368.2451128
   Ball T, 1996, PROCEEDINGS OF THE 29TH ANNUAL IEEE/ACM INTERNATIONAL SYMPOSIUM ON MICROARCHITECTURE - MICRO-29, P46, DOI 10.1109/MICRO.1996.566449
   BALL T, 1994, ACM T PROGR LANG SYS, V16, P1399, DOI 10.1145/186025.186027
   Bansal J., 2013, WHY IS MY STATES ACA
   Bhatti N, 2000, COMPUT NETW, V33, P1, DOI 10.1016/S1389-1286(00)00087-6
   Cadar C., 2008, OSDI, V8, P209, DOI DOI 10.5555/1855741.1855756
   Chambers J.M., 1983, Graphical Methods for Data Analysis
   Chipounov V, 2011, ACM SIGPLAN NOTICES, V46, P265, DOI [10.1145/1961296.1950396, 10.1145/1961295.1950396]
   Chung Hwan Kim, 2014, ACM SIGMETRICS Performance Evaluation Review, V42, P235, DOI 10.1145/2591971.2592008
   Coppa E, 2014, EAI ENDORSED T UBIQU, V2, P159
   Coppa E, 2012, ACM SIGPLAN NOTICES, V47, P89, DOI 10.1145/2345156.2254076
   Coppa Emilio, 2014, P CGO 14, V230, P239, DOI DOI 10.1145/2581122.2544143
   Fang L., 2015, 29th European Conference on Object-Oriented Programming (ECOOP 2015), volume 37 of Leibniz International Proceedings in Informatics (LIPIcs), P296
   GCC bugzilla, 2016, GCC 67783
   GCC bugzilla, 2005, GCC 21430
   GNU gprof, 2019, US
   Godefroid P, 2005, ACM SIGPLAN NOTICES, V40, P213, DOI 10.1145/1064978.1065036
   Huang P, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P60, DOI 10.1145/2568225.2568232
   Jin GL, 2012, ACM SIGPLAN NOTICES, V47, P77, DOI 10.1145/2345156.2254075
   Jin Guoliang, 2010, INT C OBJ OR PROGR S, DOI DOI 10.1145/1932682.1869481
   Jovic M., 2011, P ACM INT C OBJ OR P, P155
   Killian Charles., 2010, Proceedings of the 18th ACM SIGSOFT International Symposium on Foundations of Software Engineering, FSE '10, P17, DOI DOI 10.1145/1882291.1882297
   Lattner C, 2004, INT SYM CODE GENER, P75, DOI 10.1109/CGO.2004.1281665
   Liblit B, 2005, ACM SIGPLAN NOTICES, V40, P15, DOI 10.1145/1064978.1065014
   Liblit B, 2003, ACM SIGPLAN NOTICES, V38, P141, DOI 10.1145/780822.781148
   Liu TP, 2011, OOPSLA 11: PROCEEDINGS OF THE 2011 ACM INTERNATIONAL CONFERENCE ON OBJECT ORIENTED PROGRAMMING SYSTEMS LANGUAGES AND APPLICATIONS, P3
   Liu YP, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P1013, DOI 10.1145/2568225.2568229
   McGeoch C, 2002, LECT NOTES COMPUT SC, V2547, P93
   Mozilla bugzilla, 2016, MOZILLA 1243242
   Mozilla bugzilla, 2019, MOZILLA 1543055
   Mozilla bugzilla, 2001, MOZILLA 35294
   MySQL bugzilla, 2009, MYSQL 49047
   Nguyen Khanh, 2013, Proceedings of the 2013 9th Joint Meeting on Foundations of Software Engineering, ESEC/FSE 2013, page, P268
   Nistor A, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P902, DOI 10.1109/ICSE.2015.100
   Nistor A, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P562, DOI 10.1109/ICSE.2013.6606602
   Nistor A, 2013, IEEE WORK CONF MIN S, P237, DOI 10.1109/MSR.2013.6624035
   Ohmann P, 2013, IEEE INT CONF AUTOM, P378, DOI 10.1109/ASE.2013.6693096
   Olivo O, 2015, ACM SIGPLAN NOTICES, V50, P369, DOI [10.1145/2813885.2737966, 10.1145/273924.2737966]
   oprofile, 2019, OPROFILE A SYSTEM PR
   Orso A., 2003, Software Engineering Notes, V28, P128, DOI 10.1145/949952.940089
   Shen X, 2017, PROC ACM PROGRAM LAN
   Song LH, 2017, PROC INT CONF SOFTW, P370, DOI 10.1109/ICSE.2017.41
   Song LH, 2014, ACM SIGPLAN NOTICES, V49, P561, DOI [10.1145/2660193.2660234, 10.1145/2714064.2660234]
   Xiao Xusheng, 2013, P 2013 INT S SOFTW T, P90, DOI DOI 10.1145/2483760.2483784
   Xu GQ, 2012, LECT NOTES COMPUT SC, V7313, P738, DOI 10.1007/978-3-642-31057-7_32
   Xu GQ, 2010, PLDI '10: PROCEEDINGS OF THE 2010 ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P174, DOI 10.1145/1806596.1806617
   Xu GQ, 2010, ACM SIGPLAN NOTICES, V45, P160, DOI 10.1145/1809028.1806616
   Xu GQ, 2009, PLDI'09 PROCEEDINGS OF THE 2009 ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P419, DOI 10.1145/1542476.1542523
   Yan C, 2017, CIKM'17: PROCEEDINGS OF THE 2017 ACM CONFERENCE ON INFORMATION AND KNOWLEDGE MANAGEMENT, P1299, DOI 10.1145/3132847.3132954
   Yan L, 2005, DES AUT CON, P624, DOI 10.1109/DAC.2005.193886
   Zaman S., 2012, 2012 9th IEEE Working Conference on Mining Software Repositories (MSR 2012), P199, DOI 10.1109/MSR.2012.6224281
   Zaparanuks D, 2012, ACM SIGPLAN NOTICES, V47, P67, DOI 10.1145/2345156.2254074
NR 53
TC 0
Z9 0
U1 2
U2 3
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAR 22
PY 2021
VL 48
IS 7
BP 2680
EP 2694
DI 10.1109/TSE.2021.3067652
PG 15
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 2Y5YT
UT WOS:000825972900001
DA 2024-07-18
ER

PT J
AU Perez, A
   Abreu, R
   Van Deursen, A
AF Perez, Alexandre
   Abreu, Rui
   Van Deursen, Arie
TI A Theoretical and Empirical Analysis of Program Spectra Diagnosability
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Software; Measurement uncertainty; Diversity reception; Cognition;
   Current measurement; Tools; Testing; coverage; diagnosability
ID FAULT; COMPREHENSION
AB Current metrics for assessing the adequacy of a test-suite plainly focus on the number of components (be it lines, branches, paths) covered by the suite, but do not explicitly check how the tests actually exercise these components and whether they provide enough information so that spectrum-based fault localization techniques can perform accurate fault isolation. We propose a metric, called DDU, aimed at complementing adequacy measurements by quantifying a test-suite's diagnosability, i.e., the effectiveness of applying spectrum-based fault localization to pinpoint faults in the code in the event of test failures. Our aim is to increase the value generated by creating thorough test-suites, so they are not only regarded as error detection mechanisms but also as effective diagnostic aids that help widely-used fault-localization techniques to accurately pinpoint the location of bugs in the system. We have performed a topology-based simulation of thousands of spectra and have found that DDU can effectively establish an upper bound on the effort to diagnose faults. Furthermore, our empirical experiments using the Defects4J dataset show that optimizing a test suite with respect to DDU yields a 34 percent gain in spectrum-based fault localization report accuracy when compared to the standard branch-coverage metric.
C1 [Perez, Alexandre] Univ Porto, Fac Engn, P-4099002 Porto, Portugal.
   [Abreu, Rui] Univ Lisbon, INESC ID, P-1649004 Lisbon, Portugal.
   [Abreu, Rui] Univ Lisbon, Inst Super Tenico, P-1649004 Lisbon, Portugal.
   [Van Deursen, Arie] Delft Univ Technol, NL-2628 Delft, Netherlands.
C3 Universidade do Porto; Universidade de Lisboa; INESC-ID; Universidade de
   Lisboa; Delft University of Technology
RP Perez, A (corresponding author), Univ Porto, Fac Engn, P-4099002 Porto, Portugal.
EM alexandre.perez@fe.up.pt; rui@computer.org; arie.vandeursen@tudelft.nl
RI Abreu, Rui/K-7048-2019; van Deursen, Arie/G-3084-2011
OI Abreu, Rui/0000-0003-3734-3157; van Deursen, Arie/0000-0003-4850-3312
FU Fundacao para a Ciencia e Tecnologia (FCT) [UID/CEC/50021/2019]; FCT
   scholarship [PTDC/CCI-COM/29300/2017]; FCT [SFRH/BD/95339/2013]; EU
   [STAMP ICT-16-10, 731529]; 4TU project "Big Software on The Run";
   Fundação para a Ciência e a Tecnologia [SFRH/BD/95339/2013] Funding
   Source: FCT
FX We thank Maur~icio Aniche, Lara Crawford and Alexey Zagalsky for the
   useful feedback on previous versions of this paper. The work reported in
   this article was partially supported by national funds through Fundacao
   para a Ciencia e Tecnologia (FCT) with reference UID/CEC/50021/2019, the
   FaultLocker Project (ref. PTDC/CCI-COM/29300/2017), by the FCT
   scholarship number SFRH/BD/95339/2013, by EU Project STAMP ICT-16-10
   No.731529 and by 4TU project "Big Software on The Run".
CR Abreu Rui, 2011, Modern Approaches in Applied Intelligence. Proceedings 24th International Conference on Industrial Engineering and Other Applications of Applied Intelligent Systems (IEA/AIE 2011), P416, DOI 10.1007/978-3-642-21827-9_43
   Abreu R., 2009, SARA, V9, P2
   Abreu R, 2009, 21ST INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE (IJCAI-09), PROCEEDINGS, P653
   Abreu R, 2009, IEEE INT CONF AUTOM, P88, DOI 10.1109/ASE.2009.25
   Abreu R, 2009, J SYST SOFTWARE, V82, P1780, DOI 10.1016/j.jss.2009.06.035
   Alipour MA, 2016, IEEE INT CONF AUTOM, P16, DOI 10.1145/2970276.2970361
   Ang A, 2018, THESIS DELFT U TECHN
   [Anonymous], 1980, THESIS YALE U NEW HA
   [Anonymous], 2008, PROCEEDING 23 NATL C
   [Anonymous], 2013, P 2013 INT S SOFTW T, DOI DOI 10.1145/2483760.2483767
   [Anonymous], 2012, International Symposium on Software Testing and Analysis, ISSTA 2012, Minneapolis, MN, USA, July 15-20, 2012, DOI DOI 10.1145/2338965.2336790
   Artzi S., 2010, ISSTA, P49, DOI DOI 10.1145/1831708.1831715
   Baudry B., 2006, 28th International Conference on Software Engineering Proceedings, P82, DOI 10.1145/1134285.1134299
   Binder R.V., 2000, AW OBJ TECHNOL S
   Campos J, 2013, IEEE INT CONF AUTOM, P257, DOI 10.1109/ASE.2013.6693085
   Cardoso N., 2013, PROC 27 AAAI C ARTIF, P152
   Cardoso N, 2013, LECT NOTES COMPUT SC, V8063, P25, DOI 10.1007/978-3-642-39955-8_3
   Carey J., 1999, Business Week, P391
   CHILENSKI JJ, 1994, SOFTWARE ENG J, V9, P193, DOI 10.1049/sej.1994.0025
   Cornelissen B, 2011, IEEE T SOFTWARE ENG, V37, P341, DOI 10.1109/TSE.2010.47
   Gong L, 2012, IEEE INT CONF AUTOM, P30, DOI 10.1145/2351676.2351682
   Gonzalez-Sanchez A., 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P83, DOI 10.1109/ASE.2011.6100153
   Gonzalez-Sanchez A., 2011, 2011 IEEE Fourth International Conference on Software Testing, Verification and Validation Workshops (ICSTW), P634, DOI 10.1109/ICSTW.2011.22
   Gouveia C., 2013, 1st Working Conference on Software Visualization, VISSOFT, P1, DOI DOI 10.1109/VISSOFT.2013.6650539
   Harrold MJ, 1998, ACM SIGPLAN NOTICES, V33, P83, DOI 10.1145/277633.277647
   Hartmann K, 2010, SYST BIOL, V59, P465, DOI 10.1093/sysbio/syq026
   Nguyen HDT, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P772, DOI 10.1109/ICSE.2013.6606623
   Hu ZD, 2014, IEEE INT SYMP POWER
   Jones J.A., 2005, P 20 IEEE ACM INT C, P273, DOI [10.1145/1101908.1101949, DOI 10.1145/1101908.1101949]
   Jost L, 2006, OIKOS, V113, P363, DOI 10.1111/j.2006.0030-1299.14714.x
   Just R, 2014, P 2014 INT S SOFTW T, P437, DOI DOI 10.1145/2610384.2628055
   Just R, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P654, DOI 10.1145/2635868.2635929
   Lo D., 2014, P 29 ACM IEEE INT C, P127
   Lucia, 2014, J SOFTW-EVOL PROC, V26, P172, DOI 10.1002/smr.1616
   Masri Wes, 2010, Proceedings of the Third IEEE International Conference on Software Testing, Verification and Validation (ICST 2010), P165, DOI 10.1109/ICST.2010.22
   MILLER JC, 1963, COMMUN ACM, V6, P58, DOI 10.1145/366246.366248
   Pacheco Carlos, 2007, COMPANION 22 ACM SIG, P815, DOI DOI 10.1145/1297846.1297902
   Parnin C., 2011, P 2011 INT S SOFTWAR, P199, DOI [10.1145/2001420.2001445, DOI 10.1145/2001420.2001445]
   Pattengale ND, 2007, J COMPUT BIOL, V14, P724, DOI 10.1089/cmb.2007.R012
   Perez A, 2017, PROC INT CONF SOFTW, P654, DOI 10.1109/ICSE.2017.66
   Perez A, 2017, IEEE INT CONF SOFTW, P12, DOI 10.1109/ICST.2017.9
   Perez A, 2016, J SOFTW-EVOL PROC, V28, P840, DOI 10.1002/smr.1799
   ROBINSON DF, 1981, MATH BIOSCI, V53, P131, DOI 10.1016/0025-5564(81)90043-2
   Schuler D., 2011, Proceedings 2011 IEEE Fourth International Conference on Software Testing, Verification and Validation (ICST 2011), P90, DOI 10.1109/ICST.2011.32
   Schuler D, 2013, SOFTW TEST VERIF REL, V23, P531, DOI 10.1002/stvr.1497
   Shannon C. E., 1948, BELL SYST TECH J, V27, P379, DOI DOI 10.1002/J.1538-7305.1948.TB01338.X
   Wang XM, 2009, PROC INT CONF SOFTW, P45, DOI 10.1109/ICSE.2009.5070507
   Wen M, 2016, IEEE INT CONF AUTOM, P262, DOI 10.1145/2970276.2970359
   Wong WE, 2016, IEEE T SOFTWARE ENG, V42, P707, DOI 10.1109/TSE.2016.2521368
   Wong WE, 2014, IEEE T RELIAB, V63, P290, DOI 10.1109/TR.2013.2285319
   Xuan JF, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P52, DOI 10.1145/2635868.2635906
   Yoo S, 2010, J SYST SOFTWARE, V83, P689, DOI 10.1016/j.jss.2009.11.706
   Yu YB, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P201, DOI 10.1145/1368088.1368116
   Zhu H, 1997, ACM COMPUT SURV, V29, P366, DOI 10.1145/267580.267590
NR 54
TC 3
Z9 3
U1 2
U2 10
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD FEB 1
PY 2021
VL 47
IS 2
BP 412
EP 431
DI 10.1109/TSE.2019.2895640
PG 20
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA QG7HE
UT WOS:000617753400012
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Wan, ZY
   Xia, X
   Hassan, AE
   Lo, D
   Yin, JW
   Yang, XH
AF Wan, Zhiyuan
   Xia, Xin
   Hassan, Ahmed E.
   Lo, David
   Yin, Jianwei
   Yang, Xiaohu
TI Perceptions, Expectations, and Challenges in Defect Prediction
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Interviews; Tools; Software; Bibliographies; Computer bugs; Companies;
   Continents; Defect prediction; empirical study; practitioner; survey
ID QUANTITATIVE-ANALYSIS; RESEARCHER BIAS; SOFTWARE; DEVELOPERS; FAULTS
AB Defect prediction has been an active research area for over four decades. Despite numerous studies on defect prediction, the potential value of defect prediction in practice remains unclear. To address this issue, we performed a mixed qualitative and quantitative study to investigate what practitioners think, behave and expect in contrast to research findings when it comes to defect prediction. We collected hypotheses from open-ended interviews and a literature review of defect prediction papers that were published at ICSE, ESEC/FSE, ASE, TSE and TOSEM in the last 6 years (2012-2017). We then conducted a validation survey where the hypotheses became statements or options of our survey questions. We received 395 responses from practitioners from over 33 countries across five continents. Some of our key findings include: 1) Over 90 percent of respondents are willing to adopt defect prediction techniques. 2) There exists a disconnect between practitioners' perceptions and well supported research evidence regarding defect density distribution and the relationship between file size and defectiveness. 3) 7.2 percent of the respondents reveal an inconsistency between their behavior and perception regarding defect prediction. 4) Defect prediction at the feature level is the most preferred level of granularity by practitioners. 5) During bug fixing, more than 40 percent of the respondents acknowledged that they would make a "work-around" fix rather than correct the actual error-causing code. Through a qualitative analysis of free-form text responses, we identified reasons why practitioners are reluctant to adopt defect prediction tools. We also noted features that practitioners expect defect prediction tools to deliver. Based on our findings, we highlight future research directions and provide recommendations for practitioners.
C1 [Wan, Zhiyuan; Yin, Jianwei; Yang, Xiaohu] Zhejiang Univ, Coll Comp Sci & Technol, Hangzhou 310027, Zhejiang, Peoples R China.
   [Xia, Xin] Monash Univ, Fac Informat Technol, Melbourne, Vic 3800, Australia.
   [Hassan, Ahmed E.] Queens Univ, Sch Comp, Kingston, ON K7L 3N6, Canada.
   [Lo, David] Singapore Management Univ, Sch Informat Syst, Singapore 188065, Singapore.
C3 Zhejiang University; Monash University; Queens University - Canada;
   Singapore Management University
RP Xia, X (corresponding author), Monash Univ, Fac Informat Technol, Melbourne, Vic 3800, Australia.
EM wanzhiyuan@zju.edu.cn; xin.xia@monash.edu; ahmed@cs.queensu.ca;
   davidlo@smu.edu.sg; zjuyjw@cs.zju.edu.cn; yangxh@zju.edu.cn
RI KHALIFA, AHMED khalifa/HKF-2246-2023; Xia, Xin/AAD-6217-2022; Lo,
   David/A-2493-2012
OI KHALIFA, AHMED khalifa/0000-0002-2918-7572; Xia,
   Xin/0000-0002-6302-3256; Lo, David/0000-0002-4367-7201; Wan,
   Zhiyuan/0000-0001-7657-6653
FU National Key Research and Development Program of China [2018YFB1003904];
   NSFC Program [61602403]
FX This research was partially supported by the National Key Research and
   Development Program of China (2018YFB1003904) and NSFC Program (No.
   61602403).
CR Akiyama F., 1971, IFIP C, P353
   Andersson C, 2007, IEEE T SOFTWARE ENG, V33, P273, DOI 10.1109/TSE.2007.1005
   [Anonymous], 2017, IEEE T SOFTWARE ENG, DOI DOI 10.1109/TSE.2016.2584050
   Apel S, 2009, J OBJECT TECHNOL, V8, P49, DOI 10.5381/jot.2009.8.5.c5
   Begel A, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P12, DOI 10.1145/2568225.2568233
   Bettenburg N., 2012, 2012 9th IEEE Working Conference on Mining Software Repositories (MSR 2012), P60, DOI 10.1109/MSR.2012.6224300
   Boehm B, 2001, COMPUTER, V34, P135, DOI 10.1109/2.962984
   Breiman L., 2001, Machine Learning, V45, P5, DOI 10.1023/A:1010933404324
   Caglayan B, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P89, DOI 10.1109/ICSE.2015.138
   Carver JC, 2016, ESEM'16: PROCEEDINGS OF THE 10TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, DOI 10.1145/2961111.2962597
   Chen TH, 2017, J SYST SOFTWARE, V129, P79, DOI 10.1016/j.jss.2016.05.015
   CURTIS B, 1986, P IEEE, V74, P1092, DOI 10.1109/PROC.1986.13596
   Czerwonka Jacek, 2011, Proceedings 2011 IEEE Fourth International Conference on Software Testing, Verification and Validation (ICST 2011), P357, DOI 10.1109/ICST.2011.24
   da Costa DA, 2017, IEEE T SOFTWARE ENG, V43, P641, DOI 10.1109/TSE.2016.2616306
   Dejaeger K, 2013, IEEE T SOFTWARE ENG, V39, P237, DOI 10.1109/TSE.2012.20
   Devanbu P, 2016, PROC INT CONF SOFTW, P108, DOI 10.1145/2884781.2884812
   Fenton NE, 2000, IEEE T SOFTWARE ENG, V26, P797, DOI 10.1109/32.879815
   Fisher RA, 1922, J R STAT SOC, V85, P87, DOI 10.2307/2340521
   FLEISS JL, 1971, PSYCHOL BULL, V76, P378, DOI 10.1037/h0031619
   Fu W, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P72, DOI 10.1145/3106237.3106257
   Ghotra B, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P789, DOI 10.1109/ICSE.2015.91
   Gousios G, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P345, DOI 10.1145/2568225.2568260
   Guest G, 2006, FIELD METHOD, V18, P59, DOI 10.1177/1525822X05279903
   Gunes Koru A., 2007, PROMISE 07, P10, DOI DOI 10.1109/PROMISE.2007.9
   Hall T, 2014, ACM T SOFTW ENG METH, V23, DOI 10.1145/2629648
   Hall T, 2012, IEEE T SOFTWARE ENG, V38, P1276, DOI 10.1109/TSE.2011.103
   Hassan AE, 2009, PROC INT CONF SOFTW, P78, DOI 10.1109/ICSE.2009.5070510
   Hata H, 2012, PROC INT CONF SOFTW, P200, DOI 10.1109/ICSE.2012.6227193
   Herbsleb JD, 2003, IEEE T SOFTWARE ENG, V29, P481, DOI 10.1109/TSE.2003.1205177
   Hertel G, 2003, RES POLICY, V32, P1159, DOI 10.1016/S0048-7333(03)00047-7
   Herzig K, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P392, DOI 10.1109/ICSE.2013.6606585
   Jaspan C, 2018, 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING - SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2018), P225, DOI 10.1145/3183519.3183550
   Jiang T, 2013, IEEE INT CONF AUTOM, P279, DOI 10.1109/ASE.2013.6693087
   Jiang Y, 2015, 2015 INTERNATIONAL SYMPOSIUM ON BIOELECTRONICS AND BIOINFORMATICS (ISBB), P1, DOI 10.1109/ISBB.2015.7344908
   Jing XY, 2017, IEEE T SOFTWARE ENG, V43, P321, DOI 10.1109/TSE.2016.2597849
   Jing XY, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P414, DOI 10.1145/2568225.2568320
   Jing XY, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P496, DOI 10.1145/2786805.2786813
   Kamei Y, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 5, P33, DOI 10.1109/SANER.2016.56
   Kamei Y, 2013, IEEE T SOFTWARE ENG, V39, P757, DOI 10.1109/TSE.2012.70
   Kim S, 2007, PROC INT CONF SOFTW, P489
   Knab P., 2006, P 2006 INT WORKSHOP, P119
   Ko AJ, 2007, PROC INT CONF SOFTW, P344
   Kochhar Pavneet Singh, 2016, 25 INT S SOFTWARE TE, P165, DOI 10.1145/2931037.2931051
   Koru AG, 2008, EMPIR SOFTW ENG, V13, P473, DOI 10.1007/s10664-008-9080-x
   Koru AG, 2009, IEEE T SOFTWARE ENG, V35, P293, DOI 10.1109/TSE.2008.90
   Lanza M, 2016, IEEE SOFTWARE, V33, P102, DOI 10.1109/MS.2016.156
   LaToza T. D., 2006, 28th International Conference on Software Engineering Proceedings, P492, DOI 10.1145/1134285.1134355
   Lee T, 2016, IEEE T SOFTWARE ENG, V42, P1015, DOI 10.1109/TSE.2016.2550458
   Lewis C, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P372, DOI 10.1109/ICSE.2013.6606583
   Lo D, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P415, DOI 10.1145/2786805.2786809
   Menzies T., 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P343, DOI 10.1109/ASE.2011.6100072
   Menzies T, 2013, IEEE T SOFTWARE ENG, V39, P822, DOI 10.1109/TSE.2012.83
   Meyerovich LA, 2013, ACM SIGPLAN NOTICES, V48, P1, DOI 10.1145/2509136.2509515
   Mockus A, 2000, BELL LABS TECH J, V5, P169, DOI 10.1002/bltj.2229
   Monden A, 2013, IEEE T SOFTWARE ENG, V39, P1345, DOI 10.1109/TSE.2013.21
   Murphy-Hill E, 2015, IEEE T SOFTWARE ENG, V41, P65, DOI 10.1109/TSE.2014.2357438
   Nagappan N, 2005, PROC INT CONF SOFTW, P580, DOI 10.1145/1062455.1062558
   Nam J, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P508, DOI 10.1145/2786805.2786814
   Nam J, 2015, IEEE INT CONF AUTOM, P452, DOI 10.1109/ASE.2015.56
   Nam J, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P382, DOI 10.1109/ICSE.2013.6606584
   Parnin C, 2011, CONF PROC INT SYMP C, P197, DOI 10.1109/ICPC.2011.49
   Peters F, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P801, DOI 10.1109/ICSE.2015.92
   Peters F, 2013, IEEE T SOFTWARE ENG, V39, P1054, DOI 10.1109/TSE.2013.6
   Peters F, 2012, PROC INT CONF SOFTW, P189, DOI 10.1109/ICSE.2012.6227194
   Pinzger Martin, 2008, P 16 ACM SIGSOFT INT, P2, DOI DOI 10.1145/1453101.1453105
   Rahman F, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P424, DOI 10.1145/2568225.2568269
   Rahman F, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P432, DOI 10.1109/ICSE.2013.6606589
   Rahman F, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P491, DOI 10.1145/1985793.1985860
   Rahman Foyzur, 2013, P 2013 9 JOINT M FDN, P147
   Raymond Eric Steven, 2001, The Cathedral and the Bazaar: Musings on Linux and Open Source by an Accidental Revolutionary
   Rogers E.M., 2010, An Integrated Approach to Communication Theory and Research
   Scanniello G, 2013, IEEE INT CONF AUTOM, P640, DOI 10.1109/ASE.2013.6693126
   Shepperd M, 2014, IEEE T SOFTWARE ENG, V40, P603, DOI 10.1109/TSE.2014.2322358
   Shihab E., 2012, P ACM SIGSOFT 20 INT, P62, DOI 10
   Shivaji S, 2013, IEEE T SOFTWARE ENG, V39, P552, DOI 10.1109/TSE.2012.43
   Shull F., 2004, GUIDE ADV EMPIRICAL, P63
   Song QB, 2011, IEEE T SOFTWARE ENG, V37, P356, DOI 10.1109/TSE.2010.90
   Spencer D., 2009, CARD SORTING DESIGNI
   Syer MD, 2015, IEEE T SOFTWARE ENG, V41, P176, DOI 10.1109/TSE.2014.2361131
   Tan M, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P99, DOI 10.1109/ICSE.2015.139
   Tantithamthavorn C, 2019, IEEE T SOFTWARE ENG, V45, P683, DOI 10.1109/TSE.2018.2794977
   Tantithamthavorn C, 2016, PROC INT CONF SOFTW, P321, DOI 10.1145/2884781.2884857
   Tantithamthavorn C, 2016, IEEE T SOFTWARE ENG, V42, P1092, DOI 10.1109/TSE.2016.2553030
   Tantithamthavorn C, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P812, DOI 10.1109/ICSE.2015.93
   Tyagi Pradeep K., 1989, Journal of the Academy of Marketing Science, V17, P235
   Wang S, 2016, PROC INT CONF SOFTW, P297, DOI 10.1145/2884781.2884804
   Weyuker EJ, 2008, EMPIR SOFTW ENG, V13, P539, DOI 10.1007/s10664-008-9082-8
   Witschey J, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P260, DOI 10.1145/2786805.2786816
   Xia X, 2016, PROC IEEE INT CONF S, P268, DOI 10.1109/ICSME.2016.67
   Xia X, 2016, IEEE T SOFTWARE ENG, V42, P977, DOI 10.1109/TSE.2016.2543218
   Xiao Shundan, 2014, P 17 ACM C COMPUTER, P1095, DOI DOI 10.1145/2531602.2531722
   Yang YB, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P157, DOI 10.1145/2950290.2950353
   Yang YB, 2016, IEEE INT CONF AUTOM, P296, DOI 10.1145/2970276.2970353
   Yang YB, 2015, IEEE T SOFTWARE ENG, V41, P331, DOI 10.1109/TSE.2014.2370048
   Zhang F, 2017, IEEE T SOFTWARE ENG, V43, P476, DOI 10.1109/TSE.2016.2599161
   Zhang F, 2016, PROC INT CONF SOFTW, P309, DOI 10.1145/2884781.2884839
   Zhao YY, 2017, AUTOMAT SOFTW ENG, V24, P393, DOI 10.1007/s10515-016-0198-6
   Zhou YM, 2014, ACM T SOFTW ENG METH, V23, DOI 10.1145/2556777
   Zimmerman T, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P91, DOI 10.1145/1595696.1595713
NR 99
TC 125
Z9 141
U1 0
U2 21
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD NOV 1
PY 2020
VL 46
IS 11
BP 1241
EP 1266
DI 10.1109/TSE.2018.2877678
PG 26
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA OR0UE
UT WOS:000589192400004
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Li, MH
   Wang, P
   Wang, W
   Wang, S
   Wu, DH
   Liu, J
   Xue, R
   Huo, W
   Zou, W
AF Li, Menghao
   Wang, Pei
   Wang, Wei
   Wang, Shuai
   Wu, Dinghao
   Liu, Jian
   Xue, Rui
   Huo, Wei
   Zou, Wei
TI Large-Scale Third-Party Library Detection in Android Markets
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Libraries; Androids; Humanoid robots; Tools; Security; Java; Feature
   extraction; Android; third-party library; software mining; code
   similarity detection
ID CODE; OBFUSCATION; SOFTWARE
AB With the thriving of mobile app markets, third-party libraries are pervasively used in Android applications. The libraries provide functionalities such as advertising, location, and social networking services, making app development much more productive. However, the spread of vulnerable and harmful third-party libraries can also hurt the mobile ecosystem, leading to various security problems. Therefore, third-party library identification has emerged as an important problem, being the basis of many security applications such as repackaging detection, vulnerability identification, and malware analysis. Previously, we proposed a novel approach to identifying third-party Android libraries at a massive scale. Our method uses the internal code dependencies of an app to recognize library candidates and further classify them. With a fine-grained feature hashing strategy, we can better handle code whose package and method names are obfuscated than historical work. We have developed a prototypical tool called LibD and evaluated it with an up-to-date dataset containing 1,427,395 Android apps. Our experiment results show that LibD outperforms existing tools in detecting multi-package third-party libraries with the presence of name-based obfuscation, leading to significantly improved precision without the loss of scalability. In this paper, we extend our early work by investigating the possibility of employing effective and scalable library detection to boost the performance of large-scale app analyses in the real world. We show that the technique of LibD can be used to accelerate whole-app Android vulnerability detection and quickly identify variants of vulnerable third-party libraries. This extension paper sheds light on the practical value of our previous research.
C1 [Li, Menghao; Wang, Wei; Liu, Jian; Huo, Wei; Zou, Wei] Chinese Acad Sci, Inst Informat Engn, Key Lab Network Assessment Technol, Beijing 100195, Peoples R China.
   [Wang, Pei; Wang, Shuai; Wu, Dinghao] Penn State Univ, Coll Informat Sci & Technol, University Pk, PA 16802 USA.
   [Liu, Jian; Xue, Rui; Huo, Wei; Zou, Wei] Univ Chinese Acad Sci, Sch CyberSpace Secur, Beijing 100049, Peoples R China.
   [Xue, Rui] Chinese Acad Sci, Inst Informat Engn, State Key Lab Informat Secur, Beijing 100864, Peoples R China.
C3 Chinese Academy of Sciences; Pennsylvania Commonwealth System of Higher
   Education (PCSHE); Pennsylvania State University; Pennsylvania State
   University - University Park; Chinese Academy of Sciences; University of
   Chinese Academy of Sciences, CAS; Chinese Academy of Sciences; Institute
   of Information Engineering, CAS
RP Liu, J (corresponding author), Chinese Acad Sci, Inst Informat Engn, Key Lab Network Assessment Technol, Beijing 100195, Peoples R China.; Wu, DH (corresponding author), Penn State Univ, Coll Informat Sci & Technol, University Pk, PA 16802 USA.; Liu, J (corresponding author), Univ Chinese Acad Sci, Sch CyberSpace Secur, Beijing 100049, Peoples R China.
EM limenghao@iie.ac.cn; pxw172@ist.psu.edu; wwei@iie.ac.cn;
   szw175@ist.psu.edu; dwu@ist.psu.edu; liujian6@iie.ac.cn;
   xuerui@iie.ac.cn; huowei@iie.ac.cn; zouwei@iie.ac.cn
RI Huo, Wei/X-7706-2019; Liu, Jian/A-7195-2009
OI Liu, Jian/0000-0002-9684-339X; Wu, Dinghao/0000-0002-0741-5511
FU National Natural Science Foundation of China [61572481, 61402471,
   61472414, 61602470, 61772514]; Program of Beijing Municipal Science &
   Technology Commission [Y6C0021116]; US National Science Foundation
   [CCF-1320605, CNS-1652790]; Office of Naval Research [N00014-13-1-0175,
   N00014-16-1-2265, N00014-16-1-2912, N00014-17-1-2894]
FX This research was supported in part by the National Natural Science
   Foundation of China (No. 61572481, 61402471, 61472414, 61602470 and
   61772514), the Program of Beijing Municipal Science & Technology
   Commission (No. Y6C0021116), the US National Science Foundation (Grant
   No. CCF-1320605 and CNS-1652790), and Office of Naval Research (Grant
   No. N00014-13-1-0175, N00014-16-1-2265, N00014-16-1-2912, and
   N00014-17-1-2894). Menghao Li and Pei Wang contributed equally to this
   work. A preliminary version [1] of this article appeared in Proceedings
   of the 39th ACM/IEEE International Conference on Software Engineering
   (ICSE), Buenos Aires, Argentina, May 20-28, 2017.
CR Adesnos L., 2016, ANDROGUARD
   Aiken A., 2013, MOSS SYSTEM DETECTIN
   [Anonymous], 2016, Apktool
   [Anonymous], 2013, Proceeding of the 11th annual international conference on Mobile systems, applications, and services, DOI [10.1145/2462456.2464461, DOI 10.1145/2462456.2464461]
   Baker B. S., 1993, Proceedings of the Twenty-Fifth Annual ACM Symposium on the Theory of Computing, P71, DOI 10.1145/167088.167115
   BAKER BS, 1995, SECOND WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P86, DOI 10.1109/WCRE.1995.514697
   Bao T, 2014, PROCEEDINGS OF THE 23RD USENIX SECURITY SYMPOSIUM, P845
   Baxter ID, 1998, PROC IEEE INT CONF S, P368, DOI 10.1109/ICSM.1998.738528
   Book T., 2013, ARXIV13030857
   Chen K, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P175, DOI 10.1145/2568225.2568286
   Chen K, 2016, P IEEE S SECUR PRIV, P357, DOI 10.1109/SP.2016.29
   Crussell Jonathan, 2013, Computer Security - ESORICS 2013. 18th European Symposium on Research in Computer Security. Proceedings: LNCS 8134, P182, DOI 10.1007/978-3-642-40203-6_11
   Crussell Jonathan, 2012, Computer Security - ESORICS 2012. Proceedings 17th European Symposium on Research in Computer Security, P37, DOI 10.1007/978-3-642-33167-1_3
   Davies J, 2013, EMPIR SOFTW ENG, V18, P1195, DOI 10.1007/s10664-012-9199-7
   Foket C, 2014, IEEE T DEPEND SECURE, V11, P553, DOI 10.1109/TDSC.2014.2305990
   Gabel M, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P321, DOI 10.1145/1368088.1368132
   Grace M. C., 2012, PROC 5 ACM C SECUR P, P101
   Hanna S, 2012, ARTECH HSE MICROW LI, P61
   Heqing Huang, 2013, Trust and Trustworthy Computing. 6th International Conference, TRUST 2013. Proceedings: LNCS 7904, P169, DOI 10.1007/978-3-642-38908-5_13
   Jhi YC, 2015, IEEE T SOFTWARE ENG, V41, P925, DOI 10.1109/TSE.2015.2418777
   Jhi YC, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P756, DOI 10.1145/1985793.1985899
   Jiang LX, 2007, PROC INT CONF SOFTW, P96
   Jin X, 2014, CCS'14: PROCEEDINGS OF THE 21ST ACM CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P66, DOI 10.1145/2660267.2660275
   Kamiya T, 2002, IEEE T SOFTWARE ENG, V28, P654, DOI 10.1109/TSE.2002.1019480
   Komondoor R, 2001, LECT NOTES COMPUT SC, V2126, P40
   Li L, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P403, DOI 10.1109/SANER.2016.52
   Li M, 2015, PAIN PHYSICIAN, V18, P359
   Li MH, 2017, PROC INT CONF SOFTW, P335, DOI 10.1109/ICSE.2017.38
   Li TX, 2014, CCS'14: PROCEEDINGS OF THE 21ST ACM CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P978, DOI 10.1145/2660267.2660302
   Li ZM, 2004, USENIX ASSOCIATION PROCEEDINGS OF THE SIXTH SYMPOSIUM ON OPERATING SYSTEMS DESIGN AND IMPLEMENTATION (OSDE '04), P289
   Lin J., 2014, Modeling {users'} mobile app privacy preferences: restoring usability in a sea of permission settings, P199
   Linares-Vasquez M., 2014, PROC 11 WORK C MININ, P242
   Liu Chao, 2006, Proc. 12th ACMSIGKDD Int'l Con. on Knowledge Discovery and Data Mining (KDD 06), P872, DOI DOI 10.1145/1150402.1150522
   Low D., 1998, THESIS
   Luo LN, 2017, IEEE T SOFTWARE ENG, V43, P1157, DOI 10.1109/TSE.2017.2655046
   Luo LN, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P389, DOI 10.1145/2635868.2635900
   Ma Z, 2016, 2016 IEEE/ACM 38TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING COMPANION (ICSE-C), P653, DOI 10.1145/2889160.2889178
   McMillan C, 2012, PROC INT CONF SOFTW, P364, DOI 10.1109/ICSE.2012.6227178
   Ming J, 2017, PROCEEDINGS OF THE 26TH USENIX SECURITY SYMPOSIUM (USENIX SECURITY '17), P253
   Ming J, 2017, J COMPUT VIROL HACKI, V13, P167, DOI 10.1007/s11416-016-0279-x
   Ming J, 2016, IEEE T RELIAB, V65, P1647, DOI 10.1109/TR.2016.2570554
   Ming J, 2015, IFIP ADV INF COMM TE, V455, P416, DOI 10.1007/978-3-319-18467-8_28
   Moran K, 2016, IEEE INT CONF SOFTW, P33, DOI 10.1109/ICST.2016.34
   Narayanan A., 2014, 2014 IEEE 9 INT C IN, P1
   Paturi A., 2015, PROC NDSS WORKSHOP U, P1
   Peng YS, 2015, J ASIAN NAT PROD RES, V17, P89, DOI 10.1080/10286020.2014.960856
   Pewny J, 2015, P IEEE S SECUR PRIV, P709, DOI 10.1109/SP.2015.49
   Shin ECR, 2015, PROCEEDINGS OF THE 24TH USENIX SECURITY SYMPOSIUM, P611
   Sounthiraraj D, 2014, 21ST ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2014), DOI 10.14722/ndss.2014.23205
   Stevens Ryan, 2012, WORKSHOP MOBILE SECU, V10
   Tian Z., 2016, J CYBER SECUR, V3, P52
   Trendmicro, SETT REC STRAIGHT MO
   Udupa SK, 2005, WCRE: 12TH WORKING CONFERENCE ON REVERSE ENGINEERING 2005, PROCEEDINGS, P45
   Wang HQ, 2015, ACSR ADV COMPUT, V20, P71
   Wang S, 2017, PROC IEEE INT CONF S, P388, DOI 10.1109/ICSME.2017.59
   White M, 2016, IEEE INT CONF AUTOM, P87, DOI 10.1145/2970276.2970326
   Wu D., 2014, CORR
   WUU Y, 1991, SOFTWARE PRACT EXPER, V21, P739, DOI 10.1002/spe.4380210706
   Xue L, 2017, PROC INT CONF SOFTW, P358, DOI 10.1109/ICSE.2017.40
   Zhang F., 2014, P 2014 ACM C SEC PRI, P25, DOI DOI 10.1145/2627393.2627395
   Zhang FF, 2014, PROC INT SYMP SOFTW, P66, DOI 10.1109/ISSRE.2014.18
   Zhang Ying, 2012, Journal of Plant Resources and Environment, V21, P111
   Zhang YQ, 2015, LECT NOTES COMPUT SC, V9327, P293, DOI 10.1007/978-3-319-24177-7_15
   Zheng C., 2012, P 2 ACM WORKSHOP SEC, P93, DOI DOI 10.1145/2381934.2381950
   Zhou W., 2013, Proceedings of the third ACM conference on Data and application security and privacy, P185
NR 65
TC 10
Z9 12
U1 6
U2 22
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD SEPT 1
PY 2020
VL 46
IS 9
BP 981
EP 1003
DI 10.1109/TSE.2018.2872958
PG 23
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA NR7JB
UT WOS:000571735900003
OA hybrid
DA 2024-07-18
ER

PT J
AU Hassan, S
   Bezemer, CP
   Hassan, AE
AF Hassan, Safwat
   Bezemer, Cor-Paul
   Hassan, Ahmed E.
TI Studying Bad Updates of Top Free-to-Download Apps in the Google Play
   Store
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Google; Computer bugs; Feature extraction; Global Positioning System;
   User interfaces; History; Mobile app reviews; Google Play Store; bad
   updates; Android mobile apps
ID STAR RATINGS; USER REVIEWS; MOBILE; CONSISTENCY
AB Developers always focus on delivering high-quality updates to improve, or maintain the rating of their apps. Prior work has studied user reviews by analyzing all reviews of an app. However, this app-level analysis misses the point that users post reviews to provide their feedback on a certain update. For example, two bad updates of an app with a history of good updates would not be spotted using app-level analysis. In this paper, we examine reviews at the update-level to better understand how users perceive bad updates. We focus our study on the top 250 bad updates (i.e., updates with the highest increase in the percentage of negative reviews relative to the prior updates of the app) from 26,726 updates of 2,526 top free-to-download apps in the Google Play Store. We find that feature removal and UI issues have the highest increase in the percentage of negative reviews. Bad updates with crashes and functional issues are the most likely to be fixed by a later update. However, developers often do not mention these fixes in the release notes. Our work demonstrates the necessity of an update-level analysis of reviews to capture the feelings of an app's user-base about a particular update.
C1 [Hassan, Safwat; Hassan, Ahmed E.] Queens Univ, Sch Comp, Software Anal & Intelligence Lab SAIL, Kingston, ON K7L 3N6, Canada.
   [Bezemer, Cor-Paul] Univ Alberta, Dept Elect & Comp Engn, Edmonton, AB T6G 2R3, Canada.
C3 Queens University - Canada; University of Alberta
RP Hassan, S (corresponding author), Queens Univ, Sch Comp, Software Anal & Intelligence Lab SAIL, Kingston, ON K7L 3N6, Canada.
EM shassan@cs.queensu.ca; bezemer@ualberta.ca; ahmed@cs.queensu.ca
RI Hassan, Safwat/JWP-1498-2024; KHALIFA, AHMED khalifa/HKF-2246-2023
OI KHALIFA, AHMED khalifa/0000-0002-2918-7572; Bezemer,
   Cor-Paul/0000-0002-0474-5718
CR Akdeniz, 2013, GOOGL PLAY CRAWL
   [Anonymous], 2013, Proceedings of the 27th International BCS Human Computer Interaction Conference
   AppBrain, TOP ANDR PHON
   Borgatti S., Introduction to grounded theory
   Chen N, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P767, DOI 10.1145/2568225.2568263
   COHEN J, 1960, EDUC PSYCHOL MEAS, V20, P37, DOI 10.1177/001316446002000104
   Di Sorbo A, 2017, PROC IEEE ACM INT C, P55, DOI 10.1109/ICSE-C.2017.5
   Di Sorbo A, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P499, DOI 10.1145/2950290.2950299
   Gao CY, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P48, DOI 10.1145/3180155.3180218
   Genc-Nayebi N, 2017, J SYST SOFTWARE, V125, P207, DOI 10.1016/j.jss.2016.11.027
   Hassan S, 2018, EMPIR SOFTW ENG, V23, P1275, DOI 10.1007/s10664-017-9538-9
   Hassan S, 2017, EMPIR SOFTW ENG, V22, P505, DOI 10.1007/s10664-016-9435-7
   Hu HY, 2019, EMPIR SOFTW ENG, V24, P7, DOI 10.1007/s10664-018-9617-6
   Hu HY, 2018, EMPIR SOFTW ENG, V23, P3442, DOI 10.1007/s10664-018-9604-y
   Iacob C., 2014, Mobile Computing, Applications, and Services. MobiCASE 2013. Lecture Notes of the Institute for Computer Sciences, V130, DOI [10.1007/978-3-319-05452-0_4., DOI 10.1007/978-3-319-05452-0_4]
   Iacob C, 2013, IEEE WORK CONF MIN S, P41, DOI 10.1109/MSR.2013.6624001
   Jelihovschi E.G., 2014, TEMA (São Carlos), V15, P3
   Keertipati S, 2016, PROCEEDINGS OF THE 20TH INTERNATIONAL CONFERENCE ON EVALUATION AND ASSESSMENT IN SOFTWARE ENGINEERING 2016 (EASE '16), DOI 10.1145/2915970.2916003
   Khalid H, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P610, DOI 10.1145/2635868.2635909
   Khalid H, 2015, IEEE SOFTWARE, V32, P70, DOI 10.1109/MS.2014.50
   Khalid H, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P1474, DOI 10.1109/ICSE.2013.6606749
   Khandkar S.H., 2009, Open Coding
   Linares-Vasquez Mario, 2013, P 2013 9 JOINT M FDN, P477, DOI DOI 10.1145/2491411.2491428
   Maalej W, 2015, INT REQUIR ENG CONF, P116, DOI 10.1109/RE.2015.7320414
   Martin P, 77 WILL NOT DOWNLOAD
   Martin W, 2017, IEEE T SOFTWARE ENG, V43, P817, DOI 10.1109/TSE.2016.2630689
   Martin W, 2016, 2016 IEEE/ACM 38TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING COMPANION (ICSE-C), P659, DOI 10.1145/2889160.2891033
   Martin W, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P435, DOI 10.1145/2950290.2950320
   Martin W, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P123, DOI 10.1109/MSR.2015.19
   McIlroy S, 2016, EMPIR SOFTW ENG, V21, P1067, DOI 10.1007/s10664-015-9375-7
   McIlroy S, 2016, EMPIR SOFTW ENG, V21, P1346, DOI 10.1007/s10664-015-9388-2
   Moran K, 2020, IEEE T SOFTWARE ENG, V46, P196, DOI 10.1109/TSE.2018.2844788
   Moran K, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P165, DOI 10.1145/3180155.3180246
   Noei E, 2017, EMPIR SOFTW ENG, V22, P3088, DOI 10.1007/s10664-017-9507-3
   Oh Jeungmin, 2013, Proceedings of the ACM SIGCHI Conference on Human Factors in Computing Systems, CHI'13, P1809
   Palomba F, 2018, J SYST SOFTWARE, V137, P143, DOI 10.1016/j.jss.2017.11.043
   Palomba F, 2017, PROC INT CONF SOFTW, P106, DOI 10.1109/ICSE.2017.18
   Palomba F, 2015, PROC IEEE INT CONF S, P291, DOI 10.1109/ICSM.2015.7332475
   Panichella S, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P1023, DOI 10.1145/2950290.2983938
   Panichella S, 2015, PROC IEEE INT CONF S, P281, DOI 10.1109/ICSM.2015.7332474
   Ruiz IJM, 2016, IEEE SOFTWARE, V33, P86, DOI 10.1109/MS.2015.56
   Scalabrino S, 2019, IEEE T SOFTWARE ENG, V45, P68, DOI 10.1109/TSE.2017.2759112
   Tian Y, 2015, PROC IEEE INT CONF S, P301, DOI 10.1109/ICSM.2015.7332476
   Villarroel L, 2016, PROC INT CONF SOFTW, P14, DOI 10.1145/2884781.2884818
NR 44
TC 19
Z9 19
U1 1
U2 14
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUL 1
PY 2020
VL 46
IS 7
BP 773
EP 793
DI 10.1109/TSE.2018.2869395
PG 21
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA ML2UM
UT WOS:000549327500005
DA 2024-07-18
ER

PT J
AU Basciani, F
   D'Emidio, M
   Di Ruscio, D
   Frigioni, D
   Iovino, L
   Pierantonio, A
AF Basciani, Francesco
   D'Emidio, Mattia
   Di Ruscio, Davide
   Frigioni, Daniele
   Iovino, Ludovico
   Pierantonio, Alfonso
TI Automated Selection of Optimal Model Transformation Chains via
   Shortest-Path Algorithms
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Unified modeling language; Adaptation models; Bridges; Analytical
   models; Model driven engineering; Ecosystems; Model-driven engineering;
   model transformation composition; graph algorithms; shortest paths
AB Conventional wisdom on model transformations in Model-Driven Engineering (MDE) suggests that they are crucial components in modeling environments to achieve superior automation, whether it be refactoring, simulation, or code generation. While their relevance is well-accepted, model transformations are challenging to design, implement, and verify because of the inherent complexity that they must encode. Thus, defining transformations by chaining existing ones is key to success for enhancing their reusability. This paper proposes an approach, based on well-established algorithms, to support modellers when multiple transformation chains are available to bridge a source metamodel with a target one. The all-important goal of selecting the optimal chain has been based on the quality criteria of coverage and information loss. The feasibility of the approach has been demonstrated by means of experiments operated on chains obtained from transformations borrowed from a publicly available repository.
C1 [Basciani, Francesco; D'Emidio, Mattia; Di Ruscio, Davide; Frigioni, Daniele; Pierantonio, Alfonso] Univ Aquila, Dipartimento Ingn & Sci Informaz & Matemat, Via Vetoio 1, I-67100 Laquila, Italy.
   [D'Emidio, Mattia; Iovino, Ludovico] GSSI, Via F Crispi 71, I-67100 Laquila, Italy.
C3 University of L'Aquila; Gran Sasso Science Institute (GSSI)
RP Iovino, L (corresponding author), GSSI, Via F Crispi 71, I-67100 Laquila, Italy.
EM francesco.basciani@univaq.it; mattia.demidio@gssi.it;
   davide.diruscio@univaq.it; daniele.frigioni@univaq.it;
   ludovico.iovino@gssi.it; alfonso.pierantonio@univaq.it
RI Di Ruscio, Davide/AAG-4674-2020; Frigioni, Daniele/AAD-4304-2020
OI Di Ruscio, Davide/0000-0002-5077-6793; Frigioni,
   Daniele/0000-0002-2180-8813; D'Emidio, Mattia/0000-0001-7833-9520;
   Iovino, Ludovico/0000-0001-6552-2609; Basciani,
   Francesco/0000-0002-9800-3431
CR Alhaj Mohammad, 2013, SDL 2013: Model-Driven Dependability Engineering. 16th International SDL Forum. Proceedings: LNCS 7916, P203, DOI 10.1007/978-3-642-38911-5_12
   [Anonymous], [No title captured]
   [Anonymous], [No title captured]
   [Anonymous], [No title captured]
   [Anonymous], [No title captured]
   [Anonymous], 1976, COMBINATORIAL OPTIMI
   [Anonymous], LECT NOTES INFORM
   [Anonymous], 2004, Mastering Simulink
   [Anonymous], [No title captured]
   [Anonymous], 2006, Constraint Logic Programming using Eclipse
   [Anonymous], [No title captured]
   Aranega Vincent, 2012, Model Driven Engineering Languages and Systems. Proceedings 15th International Conference, MODELS 2012, P562, DOI 10.1007/978-3-642-33666-9_36
   Atkinson C, 2003, IEEE SOFTWARE, V20, P36, DOI 10.1109/MS.2003.1231149
   Basciani F, 2014, LECT NOTES COMPUT SC, V8767, P602, DOI 10.1007/978-3-319-11653-2_37
   Bauer Eduard, 2011, Theory and Practice of Model Transformations. Proceedings of the 4th International Conference, ICMT 2011, P78, DOI 10.1007/978-3-642-21732-6_6
   Beizer Boris, 1995, Black-box testing: techniques for functional testing of software and systems
   Bezivin J., 2005, SOFTWARE SYSTEM MODE, V4, P171, DOI DOI 10.1007/S10270-005-0079-0
   Cabot J., 2006, P MOD SIZ METR WORKS
   Cabot Jordi., 2007, Proc. of the 22nd IEEE/ACM International Conference on Automated Software Engineering (ASE'07), P547
   Caspi P., 1987, Conference Record of the Fourteenth Annual ACM Symposium on Principles of Programming Languages, P178, DOI 10.1145/41625.41641
   Chechik M, 2016, LECT NOTES COMPUT SC, V9681, P28, DOI 10.1007/978-3-319-33693-0_3
   Chenouard R, 2009, LECT NOTES COMPUT SC, V5795, P92, DOI 10.1007/978-3-642-04425-0_8
   Cuadrado JS, 2008, LECT NOTES COMPUT SC, V5063, P168, DOI 10.1007/978-3-540-69927-9_12
   Czarnecki K, 2006, IBM SYST J, V45, P621, DOI 10.1147/sj.453.0621
   D'Angelo G, 2016, LECT NOTES COMPUT SC, V9843, P109, DOI 10.1007/978-3-319-44543-4_9
   D'Angelo G, 2014, THEOR COMPUT SCI, V516, P1, DOI 10.1016/j.tcs.2013.11.001
   D'Angelo G, 2011, LECT NOTES COMPUT SC, V6783, P578
   Di Rocco Juri., 2014, MiSE at ICSE, P55, DOI DOI 10.1145/2593770.2593774
   Di Ruscio Davide, 2012, Graph Transformations. Proceedings 6th International Conference, ICGT 2012, P20, DOI 10.1007/978-3-642-33654-6_2
   Di Ruscio D, 2012, LECT NOTES COMPUT SC, V7212, P26, DOI 10.1007/978-3-642-28872-2_2
   Dijkstra EW., 1959, NUMER MATH, V1, P269, DOI [10.1007/BF01386390, DOI 10.1007/BF01386390]
   Etien A., 2010, P 2010 ACM S APPL CO, P2237
   Etien A, 2015, SOFTW SYST MODEL, V14, P1189, DOI 10.1007/s10270-013-0379-8
   Etien Anne, 2012, 1 WORKSH AN MOD TRAN, P9, DOI [10.1145/2432497.2432500, DOI 10.1145/2432497.2432500]
   Favre JM, 2005, ELECTRON NOTES THEOR, V127, P59, DOI 10.1016/j.entcs.2004.08.034
   France R, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P37, DOI 10.1109/FOSE.2007.14
   Gerpheide CM, 2016, SOFTWARE QUAL J, V24, P797, DOI 10.1007/s11219-015-9280-8
   Hidaka S, 2016, SOFTW SYST MODEL, V15, P907, DOI 10.1007/s10270-014-0450-0
   Jouault F, 2008, SCI COMPUT PROGRAM, V72, P31, DOI 10.1016/j.scico.2007.08.002
   Jouault F, 2006, LECT NOTES COMPUT SC, V4037, P171
   Kusel A, 2015, SOFTW SYST MODEL, V14, P537, DOI 10.1007/s10270-013-0343-7
   McQuillan J.A., 2009, Model Transformation with ATL, P63
   Mens T, 2006, ELECTRON NOTES THEOR, V152, P125, DOI 10.1016/j.entcs.2005.10.021
   Miller SP, 2009, LECT NOTES COMPUT SC, V5505, P443, DOI 10.1007/978-3-642-00768-2_36
   Oldevik J, 2005, LECT NOTES COMPUT SC, V3543, P108
   Velasco PPP, 2010, FUND INFORM, V99, P29, DOI 10.3233/FI-2010-238
   Rivera J. E., 2009, Proc. MtATL, V9, P34
   Cuadrado JS, 2017, IEEE T SOFTWARE ENG, V43, P868, DOI 10.1109/TSE.2016.2635137
   Sarma Monalisa, 2007, 10 INT C INFORM TECH, P196
   Schmidt DC, 2006, COMPUTER, V39, P25, DOI 10.1109/MC.2006.58
   Selim GMK, 2017, 2017 ACM/IEEE 20TH INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS 2017), P34, DOI 10.1109/MODELS.2017.20
   van Amstel Marcel F., 2011, Theory and Practice of Model Transformations. Proceedings of the 4th International Conference, ICMT 2011, P108, DOI 10.1007/978-3-642-21732-6_8
   van Amstel M. F., 2010, IEEE 34th Annual Computer Software and Applications Conference Workshops (COMPSACW 2010), P69, DOI 10.1109/COMPSACW.2010.22
   Vanhooff B, 2006, LECT NOTES COMPUT SC, V4017, P39, DOI 10.1007/11796435_6
   Varró D, 2006, LECT NOTES COMPUT SC, V4178, P260
   Velasco P.P.P., 2009, Matrix Graph Grammars: An Algebraic Approach to Graph Dynamics
   von Pilgrim J, 2008, LECT NOTES COMPUT SC, V5095, P17, DOI 10.1007/978-3-540-69100-6_2
   Wagelaar Dennis, 2012, Theory and Practice of Model Transformations. Proceedings 5th International Conference, ICMT 2012, P192, DOI 10.1007/978-3-642-30476-7_13
   Wagelaar D, 2008, LECT NOTES COMPUT SC, V5063, P152, DOI 10.1007/978-3-540-69927-9_11
   Wagelaar D, 2010, SOFTW SYST MODEL, V9, P285, DOI 10.1007/s10270-009-0134-3
   Wang JH, 2006, 2006 AUSTRALIAN SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P270
   Williams S, 2013, NEW CRITICAL ESSAYS ON H. P. LOVECRAFT, P55
   Xie T, 2005, IEEE T SOFTWARE ENG, V31, P869, DOI 10.1109/TSE.2005.107
NR 63
TC 6
Z9 6
U1 0
U2 7
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAR 1
PY 2020
VL 46
IS 3
BP 251
EP 279
DI 10.1109/TSE.2018.2846223
PG 29
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA KX9OY
UT WOS:000522205900002
DA 2024-07-18
ER

PT J
AU ter Beek, MH
   Legay, A
   Lafuente, AL
   Vandin, A
AF ter Beek, Maurice H.
   Legay, Axel
   Lafuente, Alberto Lluch
   Vandin, Andrea
TI A Framework for Quantitative Modeling and Analysis of Highly
   (Re)configurable Systems
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Probabilistic logic; Model checking; Tools; Analytical models; Runtime;
   Computational modeling; DSL; Software product lines; probabilistic
   modeling; quantitative constraints; statistical model checking; formal
   methods
ID PRODUCT; CHECKING; VERIFICATION; FAMILY
AB This paper presents our approach to the quantitative modeling and analysis of highly (re)configurable systems, such as software product lines. Different combinations of the optional features of such a system give rise to combinatorially many individual system variants. We use a formal modeling language that allows us to model systems with probabilistic behavior, possibly subject to quantitative feature constraints, and able to dynamically install, remove or replace features. More precisely, our models are defined in the probabilistic feature-oriented language QFLan, a rich domain specific language (DSL) for systems with variability defined in terms of features. QFLan specifications are automatically encoded in terms of a process algebra whose operational behavior interacts with a store of constraints, and hence allows to separate system configuration from system behavior. The resulting probabilistic configurations and behavior converge seamlessly in a semantics based on discrete-time Markov chains, thus enabling quantitative analysis. Our analysis is based on statistical model checking techniques, which allow us to scale to larger models with respect to precise probabilistic analysis techniques. The analyses we can conduct range from the likelihood of specific behavior to the expected average cost, in terms of feature attributes, of specific system variants. Our approach is supported by a novel Eclipse-based tool which includes state-of-the-art DSL utilities for QFLan based on the Xtext framework as well as analysis plug-ins to seamlessly run statistical model checking analyses. We provide a number of case studies that have driven and validated the development of our framework.
C1 [ter Beek, Maurice H.] CNR, Ist Sci & Tecnol Informaz, I-56124 Pisa, Italy.
   [Legay, Axel] Inria Rennes, F-35042 Rennes, France.
   [Lafuente, Alberto Lluch; Vandin, Andrea] Tech Univ Denmark, Dept Appl Math & Comp Sci, DK-2800 Lyngby, Denmark.
C3 Consiglio Nazionale delle Ricerche (CNR); Istituto di Scienza e
   Tecnologie dell'Informazione "Alessandro Faedo" (ISTI-CNR); Universite
   de Rennes; Technical University of Denmark
RP ter Beek, MH (corresponding author), CNR, Ist Sci & Tecnol Informaz, I-56124 Pisa, Italy.
EM terbeek@isti.cnr.it; axel.legay@inria.fr; albl@dtu.dk; anvan@dtu.dk
RI Beek, Maurice H ter/N-5563-2015; Vandin, Andrea/L-4563-2018; Lafuente,
   Alberto Lluch/G-4413-2011
OI Beek, Maurice H ter/0000-0002-2930-6367; Vandin,
   Andrea/0000-0002-2606-7241; Lafuente, Alberto Lluch/0000-0001-7405-0818
FU EU project QUANTICOL [600708]
FX Research supported by EU project QUANTICOL, 600708. We thank Bicincitta
   and M. Bertini from PisaMo for the bike-sharing case study. We also
   thank the reviewers for their careful reading and their many insightful
   comments and suggestions, which helped us to improve the presentation.
CR [Anonymous], 2013, LECT NOTES COMPUT
   [Anonymous], P 12 INT C FORM ASP
   [Anonymous], SPLC 2014
   [Anonymous], P AS INT ENG C
   [Anonymous], CSD192011BP8 UN DEP
   [Anonymous], J INFORM COMPUTATION
   [Anonymous], 2016, Feature-Oriented Software Product Lines
   Apel S., 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P372, DOI 10.1109/ASE.2011.6100075
   Apel S, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P482, DOI 10.1109/ICSE.2013.6606594
   Asirelli Patrizia, 2011, Proceedings of the 2011 15th International Software Product Line Conference (SPLC 2011), P130, DOI 10.1109/SPLC.2011.34
   Belzner Lenz, 2014, Specification, Algebra, and Software. Essays Dedicated to Kokichi Futatsugi: LNCS 8373, P188, DOI 10.1007/978-3-642-54624-2_10
   Benavides D, 2010, INFORM SYST, V35, P615, DOI 10.1016/j.is.2010.01.001
   Beohar H, 2016, SCI COMPUT PROGRAM, V123, P42, DOI 10.1016/j.scico.2015.06.005
   Beyer Dirk, 2011, Computer Aided Verification. Proceedings 23rd International Conference, CAV 2011, P184, DOI 10.1007/978-3-642-22110-1_16
   Bortolussi L, 2006, ELECTRON NOTES THEOR, V164, P65, DOI 10.1016/j.entcs.2006.07.012
   Bruni R, 2012, LECT NOTES COMPUT SC, V7212, P240, DOI 10.1007/978-3-642-28872-2_17
   Burdek J., 2014, P 8 INT WORKSHOP VAR, DOI DOI 10.1145/2556624.2556627
   Buscemi MG, 2007, LECT NOTES COMPUT SC, V4421, P18
   Chrszon P, 2018, FORM ASP COMPUT, V30, P45, DOI 10.1007/s00165-017-0432-4
   Ciancia V, 2016, LECT NOTES COMPUT SC, V9952, P657, DOI 10.1007/978-3-319-47166-2_46
   Cimatti A., 1999, Computer Aided Verification. 11th International Conference, CAV'99. Proceedings (Lecture Notes in Computer Science Vol.1633), P495
   Clarke D, 2011, ACM SIGPLAN NOTICES, V46, P13, DOI 10.1145/1942788.1868298
   Classen Andreas, 2012, International Journal on Software Tools for Technology Transfer, V14, P589, DOI 10.1007/s10009-012-0234-1
   Classen A., 2010, ICSE 10, V1, P335, DOI DOI 10.1145/1806799.1806850
   Classen A, 2014, SCI COMPUT PROGRAM, V80, P416, DOI 10.1016/j.scico.2013.09.019
   Classen A, 2013, IEEE T SOFTWARE ENG, V39, P1069, DOI 10.1109/TSE.2012.86
   Classen A, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P321, DOI 10.1145/1985793.1985838
   Clavel M, 2007, All About Maude: A High-Performance Logical Framework
   Clements P., 2002, Software product lines
   Cordy M, 2013, PROCEEDINGS OF THE 17TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE CO-LOCATED WORKSHOPS (SPLC'13 WORKSHOPS), P141
   Cordy M, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P472, DOI 10.1109/ICSE.2013.6606593
   Cranen S, 2013, LECT NOTES COMPUT SC, V7795, P199, DOI 10.1007/978-3-642-36742-7_15
   Czarnecki K, 2004, LECT NOTES COMPUT SC, V3154, P266
   David Alexandre, 2015, Tools and Algorithms for the Construction and Analysis of Systems. 21st International Conference, TACAS 2015, held as part of the European Joint Conferences on Theory and Practice of Software, ETAPS 2015. Proceedings: LNCS 9035, P206, DOI 10.1007/978-3-662-46681-0_16
   de Moura L, 2008, LECT NOTES COMPUT SC, V4963, P337, DOI 10.1007/978-3-540-78800-3_24
   DeMaio P., 2009, J PUBLIC TRANSPORT, V12, P3, DOI [DOI 10.5038/2375-0901.12.4.3, 10.5038/2375-0901.12.4. 3]
   Dimovski A, 2017, INT J SOFTW TOOLS TE, V19, P585, DOI 10.1007/s10009-016-0425-2
   Dimovski AS, 2017, LECT NOTES COMPUT SC, V10202, P406, DOI 10.1007/978-3-662-54494-5_24
   Dimovski AS, 2015, LECT NOTES COMPUT SC, V9232, P282, DOI 10.1007/978-3-319-23404-5_18
   Dubslaff C, 2015, LECT NOTES COMPUT SC, V8989, P180, DOI 10.1007/978-3-662-46734-3_5
   Erwig M, 2011, ACM T SOFTW ENG METH, V21, DOI 10.1145/2063239.2063245
   Fantechi A, 2008, SPLC 2008: 12TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE, PROCEEDINGS, P193, DOI 10.1109/SPLC.2008.45
   Fischbein D., 2006, ROSATEA 06, P39
   Geesaman PL, 2013, INT WORKS SOFTW CLON, P1, DOI 10.1109/IWSC.2013.6613032
   Ghezzi C, 2013, INFORM SOFTWARE TECH, V55, P508, DOI 10.1016/j.infsof.2012.07.017
   Gilmore S, 2014, LECT NOTES COMPUT SC, V8739, P71, DOI 10.1007/978-3-319-10181-1_5
   Gondal Ali, 2011, Software Composition. Proceedings of the 10th International Conference, SC 2011, P100, DOI 10.1007/978-3-642-22045-6_7
   Groote JF, 2014, MODELING AND ANALYSIS OF COMMUNICATING SYSTEMS, P1
   Gruler A, 2008, LECT NOTES COMPUT SC, V5051, P113, DOI 10.1007/978-3-540-68863-1_8
   Kowal M, 2014, LECT NOTES COMPUT SC, V8411, P94
   Kowal M, 2015, IEEE INT CONF AUTOM, P407, DOI 10.1109/ASE.2015.16
   Kwiatkowska Marta, 2011, Computer Aided Verification. Proceedings 23rd International Conference, CAV 2011, P585, DOI 10.1007/978-3-642-22110-1_47
   Larsen KG, 2014, LECT NOTES COMPUT SC, V8803, P135, DOI 10.1007/978-3-662-45231-8_10
   Larsen U, 1988, Eur J Popul, V3, P203, DOI 10.1109/LICS.1988.5119
   Lauenroth K, 2009, IEEE INT CONF AUTOM, P269, DOI 10.1109/ASE.2009.16
   Legay A, 2010, LECT NOTES COMPUT SC, V6418, P122, DOI 10.1007/978-3-642-16612-9_11
   Leucker Martin, 2012, Leveraging Applications of Formal Methods, Verification and Validation. Technologies for Mastering Change. Technologies for Mastering Change. Proceedings of the 5th International Symposium, ISoLA 2012, P131, DOI 10.1007/978-3-642-34026-0_11
   Lochau M, 2016, J LOG ALGEBR METHODS, V85, P245, DOI 10.1016/j.jlamp.2015.09.004
   Macedo N, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P373, DOI 10.1145/2950290.2950318
   Mauro J, 2016, TENTH INTERNATIONAL WORKSHOP ON VARIABILITY MODELLING OF SOFTWARE-INTENSIVE SYSTEMS (VAMOS 2016), P41, DOI 10.1145/2866614.2866620
   Meinicke J, 2017, MASTERING SOFTWARE V, DOI DOI 10.1007/978-3-319-61443-4
   Meinicke J, 2016, IEEE INT CONF AUTOM, P483, DOI 10.1145/2970276.2970322
   Muschevici R, 2016, SOFTW SYST MODEL, V15, P1181, DOI 10.1007/s10270-015-0475-z
   Nieke Michael., 2017, P 11 INT WORKSHOP VA, P92, DOI DOI 10.1145/3023956.3023962
   Nyman U, 2007, LECT NOTES COMPUT SC, V4421, P64
   Pianini D, 2014, 2014 INTERNATIONAL CONFERENCE ON HIGH PERFORMANCE COMPUTING & SIMULATION (HPCS), P416, DOI 10.1109/HPCSim.2014.6903715
   Plath M, 2001, SCI COMPUT PROGRAM, V41, P53, DOI 10.1016/S0167-6423(00)00018-6
   Pohl K., 2005, SOFTWARE PRODUCT LIN, V10
   Rodrigues GN, 2015, IEEE HI ASS SYS ENGR, P173, DOI 10.1109/HASE.2015.34
   Sabouri H, 2012, P INT COMP SOFTW APP, P680, DOI 10.1109/COMPSAC.2012.95
   SARASWAT VA, 1990, CONFERENCE RECORD OF THE SEVENTEENTH ANNUAL ACM SYMPOSIUM ON PRINCIPLES OF PROGRAMMING LANGUAGES, P232, DOI 10.1145/96709.96733
   Scalas A, 2015, ELECTRON P THEOR COM, P86, DOI 10.4204/EPTCS.189.8
   Schaefer I., 2012, LECT NOTES COMPUTER, V6957, P184
   Sebastio S., 2013, 7 INT C VALUETOOLS 1, P310, DOI DOI 10.4108/ICST.VALUETOOLS.2013.254377
   Sebastio S, 2014, 9TH INTERNATIONAL SYMPOSIUM ON SOFTWARE ENGINEERING FOR ADAPTIVE AND SELF-MANAGING SYSTEMS (SEAMS 2014), P105, DOI 10.1145/2593929.2593943
   Soleimanifard S, 2011, LECT NOTES COMPUT SC, V7041, P366, DOI 10.1007/978-3-642-24690-6_25
   ter Beek Maurice H., 2012, FM 2012: Formal Methods. Proceedings of the 18th International Symposium, P450, DOI 10.1007/978-3-642-32759-9_36
   ter Beek M. H., 2014, SPLC 14, V2, P70, DOI DOI 10.1145/2647908.2655969
   ter Beek M.H., 2015, P 19 INT C SOFTWARE, P11, DOI DOI 10.1145/2791060.2791087
   ter Beek M, 2014, ERCIM NEWS, P31
   ter Beek MH, 2017, LECT NOTES COMPUT SC, V10202, P387, DOI 10.1007/978-3-662-54494-5_23
   ter Beek MH, 2016, ELECTRON P THEOR COM, P61, DOI 10.4204/EPTCS.206.6
   ter Beek MH, 2016, LECT NOTES COMPUT SC, V9952, P114, DOI 10.1007/978-3-319-47166-2_8
   ter Beek MH, 2016, J LOG ALGEBR METHODS, V85, P287, DOI 10.1016/j.jlamp.2015.11.006
   ter Beek MH, 2015, ELECTRON P THEOR COM, P56, DOI 10.4204/EPTCS.182.5
   ter Beek MH, 2013, PROCEEDINGS OF THE 17TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE CO-LOCATED WORKSHOPS (SPLC'13 WORKSHOPS), P10
   ter Beek MH, 2015, LECT NOTES COMPUT SC, V9276, P344, DOI 10.1007/978-3-319-22969-0_24
   ter Beek MH, 2014, LECT NOTES COMPUT SC, V8802, P368, DOI 10.1007/978-3-662-45234-9_26
   Thüm T, 2014, ACM COMPUT SURV, V47, DOI 10.1145/2580950
   Thüma T, 2014, SCI COMPUT PROGRAM, V79, P70, DOI 10.1016/j.scico.2012.06.002
   Tribastone M, 2014, 18TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE (SPLC 2014), VOL 1, P82, DOI 10.1145/2648511.2648520
   Varshosaz M, 2013, PROCEEDINGS OF THE 17TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE CO-LOCATED WORKSHOPS (SPLC'13 WORKSHOPS), P34
   Visser W., 2003, Automated Software Engineering, V10, P203, DOI 10.1023/A:1022920129859
   Wen-ping Lv, 2011, 2011 3rd International Conference on Multimedia Information Networking and Security, P480, DOI 10.1109/MINES.2011.94
NR 94
TC 25
Z9 25
U1 0
U2 6
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAR 1
PY 2020
VL 46
IS 3
BP 321
EP 345
DI 10.1109/TSE.2018.2853726
PG 25
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA KX9OY
UT WOS:000522205900005
OA Green Published, Green Submitted
DA 2024-07-18
ER

PT J
AU Bian, P
   Liang, B
   Zhang, Y
   Yang, CQ
   Shi, WC
   Cai, Y
AF Bian, Pan
   Liang, Bin
   Zhang, Yan
   Yang, Chaoqun
   Shi, Wenchang
   Cai, Yan
TI Detecting Bugs by Discovering Expectations and Their Violations
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Bug detection; code mining; program slicing; instance-based learning
ID PROGRAM DEPENDENCE GRAPH; SPECIFICATIONS; LANGUAGE
AB Code mining has been proven to be a promising approach to inferring implicit programming rules for finding software bugs. However, existing methods may report large numbers of false positives and false negatives. In this paper, we propose a novel approach called EAntMiner to improve the effectiveness of code mining. EAntMiner elaborately reduces noises from statements irrelevant to interesting rules and different implementation forms of the same logic. During preprocessing, we employ program slicing to decompose the original source repository into independent sub-repositories. In each sub-repository, statements irrelevant to critical operations (automatically extracted from source code) are excluded and various semantics-equivalent implementations are normalized into a canonical form as far as possible. Moreover, to tackle the challenge that some bugs are difficult to be detected by mining frequent patterns as rules, we further developed a kNN-based method to identify them. We have implemented EAntMiner and evaluated it on four large-scale C systems. EAntMiner successfully detected 105 previously unknown bugs that have been confirmed by corresponding development communities. A set of comparative evaluations also demonstrate that EAntMiner can effectively improve the precision of code mining.
C1 [Bian, Pan; Liang, Bin; Zhang, Yan; Yang, Chaoqun; Shi, Wenchang] Renmin Univ China, Sch Informat, Beijing 100872, Peoples R China.
   [Cai, Yan] Chinese Acad Sci, Inst Software, State Key Lab Comp Sci, Beijing 100080, Peoples R China.
C3 Renmin University of China; Chinese Academy of Sciences; Institute of
   Software, CAS
RP Bian, P (corresponding author), Renmin Univ China, Sch Informat, Beijing 100872, Peoples R China.
EM bianpan@ruc.edu.cn; liangb@ruc.edu.cn; annazhang@ruc.edu.cn;
   cqyang@ruc.edu.cn; wenchang@ruc.edu.cn; yancai@ios.ac.cn
RI Liang, Bin/JHU-0581-2023
FU National Natural Science Foundation of China (NSFC) [91418206, 61170240,
   61472429, 61502465]; National 973 program of China [2014CB340702];
   National Science and Technology Major Project of China
   [2012ZX01039-004]; Youth Innovation Promotion Association of the Chinese
   Academy of Sciences (YICAS) [2017151]
FX The authors would like to thank the anonymous reviewers for their
   insightful comments on the preliminary version of this paper. The work
   is supported by National Natural Science Foundation of China (NSFC)
   under grants 91418206, 61170240, 61472429, and 61502465, National 973
   program of China under grant 2014CB340702, National Science and
   Technology Major Project of China under grant 2012ZX01039-004, and Youth
   Innovation Promotion Association of the Chinese Academy of Sciences
   (YICAS) under grant 2017151.
CR Agrawal H, 1995, SIXTH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P143, DOI 10.1109/ISSRE.1995.497652
   Aho A.V., 1986, Compilers: Principles. Techniques, P434
   ALTMAN NS, 1992, AM STAT, V46, P175, DOI 10.2307/2685209
   Ammons G, 2002, ACM SIGPLAN NOTICES, V37, P4, DOI 10.1145/565816.503275
   [Anonymous], P 24 IEEE ACM INT C
   [Anonymous], 6 USENIX C FIL STOR
   [Anonymous], 2011 CWE SANS TOP 25
   [Anonymous], 2010, P 26 IEEE INT C SOFT, DOI DOI 10.1109/ICSM.2010.5609576
   [Anonymous], P 21 ACM SIGOPS S OP
   [Anonymous], P 11 EUR SOFTW ENG C
   [Anonymous], 2008, P INT WORKSH DYN AN, DOI 10.1145/1401827.1401838
   Arzt S., 2013, Tech. Rep. TUDCS-2013-0114
   Baeza-Yates Ricardo, 1999, MODERN INFORM RETRIE, V463
   Cai Y, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P450, DOI 10.1145/2786805.2786839
   Cai Y, 2014, IEEE T SOFTWARE ENG, V40, P266, DOI 10.1109/TSE.2014.2301725
   Chang R.-Y., 2007, P 2007 INT S SOFTWAR, P163, DOI DOI 10.1145/1273463.1273486
   Chen T. Y., 1993, Proceedings. Conference on Software Maintenance 1993. CSM-93 (Cat. No.93CH3360-5), P378, DOI 10.1109/ICSM.1993.366925
   Chess B, 2004, IEEE SECUR PRIV, V2, P76, DOI 10.1109/MSP.2004.111
   Engler D., 2001, Operating Systems Review, V35, P57, DOI 10.1145/502059.502041
   FERRANTE J, 1987, ACM T PROGR LANG SYS, V9, P319, DOI 10.1145/24039.24041
   Ganapathy V, 2007, PROC INT CONF SOFTW, P458
   Grahne G., 2003, FIMI, V90
   Gu XD, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P631, DOI 10.1145/2950290.2950334
   HALLEM S, 2002, PLDI, P00069, DOI DOI 10.1145/512529.512539
   Harman M., 1995, Software Testing, Verification and Reliability, V5, P143, DOI 10.1002/stvr.4370050303
   HORWITZ S, 1990, ACM T PROGR LANG SYS, V12, P26, DOI [10.1145/77606.77608, 10.1145/960116.53994]
   Jana S, 2016, PROCEEDINGS OF THE 25TH USENIX SECURITY SYMPOSIUM, P345
   Kang Y, 2016, IEEE INT CONF AUTOM, P472, DOI 10.1145/2970276.2970354
   Kremenek T, 2006, USENIX ASSOCIATION 7TH USENIX SYMPOSIUM ON OPERATING SYSTEMS DESIGN AND IMPLEMENTATION, P161
   Li Zhenmin, 2005, P ACM SIGSOFT SOFTW, P306, DOI DOI 10.1145/1081706.1081755
   Liang B, 2016, PROC INT CONF SOFTW, P333, DOI 10.1145/2884781.2884870
   Lin Tan, 2007, Operating Systems Review, V41, P145, DOI 10.1145/1323293.1294276
   Livshits V.B., 2005, ESEC SIGSOFT FSE, P296, DOI [DOI 10.1145/1095430.1081754, DOI 10.1145/1081706.1081754]
   Neuhaus S, 2007, CCS'07: PROCEEDINGS OF THE 14TH ACM CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P529
   OTTENSTEIN KJ, 1984, SIGPLAN NOTICES, V19, P177, DOI 10.1145/390011.808263
   Padioleau Y, 2007, ELECTRON NOTES THEOR, V166, P47, DOI 10.1016/j.entcs.2006.07.022
   Perl H, 2015, CCS'15: PROCEEDINGS OF THE 22ND ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P426, DOI 10.1145/2810103.2813604
   Pradel M, 2012, ACM SIGPLAN NOTICES, V47, P521, DOI 10.1145/2345156.2254126
   Pradel M, 2009, IEEE INT CONF AUTOM, P371, DOI 10.1109/ASE.2009.60
   Ramanathan MK, 2007, PLDI'07: PROCEEDINGS OF THE 2007 ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P123, DOI 10.1145/1250734.1250749
   Rubio-Gonzalez Cindy., 2011, ISSTA, P111
   Scandariato R, 2014, IEEE T SOFTWARE ENG, V40, P993, DOI 10.1109/TSE.2014.2340398
   Shan Lu, 2007, Operating Systems Review, V41, P103, DOI 10.1145/1323293.1294272
   Stallman R. M., 2010, GNU COMPILER COLLECT, P217
   Sun BY, 2012, PROC INT CONF SOFTW, P1054, DOI 10.1109/ICSE.2012.6227114
   Synopsys Inc, 2017, SYN STAT AN COV COV, P8
   Tan L, 2008, PROCEEDINGS OF THE 2008 7TH IEEE INTERNATIONAL CONFERENCE ON CYBERNETIC INTELLIGENT SYSTEMS, P379
   Tan L, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P11, DOI 10.1145/1985793.1985796
   Thummalapenta S, 2009, IEEE INT CONF AUTOM, P283, DOI 10.1109/ASE.2009.72
   Vandecruys O, 2008, J SYST SOFTWARE, V81, P823, DOI 10.1016/j.jss.2007.07.034
   Visser Willem, 2012, P FSE, DOI DOI 10.1145/2393596.2393665
   Wang S, 2016, PROC INT CONF SOFTW, P297, DOI 10.1145/2884781.2884804
   Wang S, 2016, IEEE INT CONF AUTOM, P708, DOI 10.1145/2970276.2970341
   Wang TT, 2014, FRONT COMPUT SCI-CHI, V8, P996, DOI 10.1007/s11704-014-3430-1
   Weimer W, 2005, LECT NOTES COMPUT SC, V3440, P461
   Weiser M., 1981, 5th International Conference on Software Engineering, P439
   Xiao X., 2012, P ACM SIGSOFT 20 INT, P1
   Xu SW, 2003, IEEE T SOFTWARE ENG, V29, P360, DOI 10.1109/TSE.2003.1191799
   Xu ZB, 2015, FRONT COMPUT SCI-CHI, V9, P34, DOI 10.1007/s11704-014-3460-8
   Yamaguchi F., 2013, P 2013 ACM SIGSAC C, P499
   Yamaguchi F, 2012, 28TH ANNUAL COMPUTER SECURITY APPLICATIONS CONFERENCE (ACSAC 2012), P359
   Yamaguchi F, 2015, P IEEE S SECUR PRIV, P797, DOI 10.1109/SP.2015.54
   Yamaguchi F, 2014, P IEEE S SECUR PRIV, P590, DOI 10.1109/SP.2014.44
   Yang XL, 2015, 2015 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE SECURITY AND RELIABILITY (QRS 2015), P17, DOI 10.1109/QRS.2015.14
   Yun IS, 2016, PROCEEDINGS OF THE 25TH USENIX SECURITY SYMPOSIUM, P363
   Zhong H, 2009, IEEE INT CONF AUTOM, P307, DOI 10.1109/ASE.2009.94
NR 66
TC 11
Z9 13
U1 1
U2 6
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD OCT
PY 2019
VL 45
IS 10
BP 984
EP 1001
DI 10.1109/TSE.2018.2816639
PG 18
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA JV1FR
UT WOS:000502113300003
DA 2024-07-18
ER

PT J
AU Ramasubbu, N
   Kemerer, CF
AF Ramasubbu, Narayan
   Kemerer, Chris F.
TI Integrating Technical Debt Management and Software Quality Management
   Processes: A Normative Framework and Field Tests
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Technical debt; software quality; software maintenance; software
   engineering economics; cost of quality; software product development;
   software process; software extension to PMBOK; case study
ID ARCHITECTURE; RISK
AB Despite the increasing awareness of the importance of managing technical debt in software product development, systematic processes for implementing technical debt management in software production have not been readily available. In this paper we report on the development and field tests of a normative process framework that systematically incorporates steps for managing technical debt in commercial software production. The framework integrates processes required for technical debt management with existing software quality management processes prescribed by the project management body of knowledge (PMBOK), and it contributes to the further development of software-specific extensions to the PMBOK. We partnered with three commercial software product development organizations to implement the framework in real-world software production settings. All three organizations, irrespective of their varying software process maturity levels, were able to adopt the proposed framework and integrate the prescribed technical debt management processes with their existing software quality management processes. Our longitudinal observations and case-study interviews indicate that the organizations were able to accrue economic benefits from the adoption and use of the integrated framework.
C1 [Ramasubbu, Narayan; Kemerer, Chris F.] Univ Pittsburgh, Joseph M Katz Grad Sch Business, Pittsburgh, PA 15260 USA.
C3 Pennsylvania Commonwealth System of Higher Education (PCSHE); University
   of Pittsburgh
RP Ramasubbu, N (corresponding author), Univ Pittsburgh, Joseph M Katz Grad Sch Business, Pittsburgh, PA 15260 USA.
EM narayanr@pitt.edu; ckemerer@katz.pitt.edu
RI Ramasubbu, Narayan/N-1364-2019
OI Ramasubbu, Narayan/0000-0002-6959-0729
CR Alves NSR, 2016, INFORM SOFTWARE TECH, V70, P100, DOI 10.1016/j.infsof.2015.10.008
   Ampatzoglou A, 2015, INFORM SOFTWARE TECH, V64, P52, DOI 10.1016/j.infsof.2015.04.001
   [Anonymous], PUBL APPR RES
   Avgeriou P, 2016, IEEE SOFTWARE, V33, P66, DOI 10.1109/MS.2016.13
   Banker R. D., 2002, Information Technology & Management, V3, P25, DOI 10.1023/A:1013156608583
   Barry EJ, 2007, J SOFTW MAINT EVOL-R, V19, P1, DOI 10.1002/smr.342
   Boehm B, 2003, COMPUTER, V36, P33, DOI 10.1109/MC.2003.1185215
   BOEHM BW, 1991, IEEE SOFTWARE, V8, P32, DOI 10.1109/52.62930
   Briand LC, 2000, IEEE T SOFTWARE ENG, V26, P518, DOI 10.1109/32.852741
   Brown Nanette, 2010, P FSE SDP WORKSH FUT, P47
   CHILLAREGE R, 1992, IEEE T SOFTWARE ENG, V18, P943, DOI 10.1109/32.177364
   Clements P, 2010, IEEE SOFTWARE, V27, P38, DOI 10.1109/MS.2010.116
   Concas G, 2011, IEEE T SOFTWARE ENG, V37, P872, DOI 10.1109/TSE.2011.54
   Cunningham W., 1993, OOPS Messenger, V4, P29
   Curtis B, 2012, IEEE SOFTWARE, V29, P34, DOI 10.1109/MS.2012.156
   Denne M, 2004, IEEE SOFTWARE, V21, P39, DOI 10.1109/MS.2004.1293071
   Ernst NA, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P50, DOI 10.1145/2786805.2786848
   Falessi D., 2014, ACM SIGSOFT SOFTWARE, V39, P1
   Falessi D, 2013, 2013 4TH INTERNATIONAL WORKSHOP ON MANAGING TECHNICAL DEBT (MTD), P16, DOI 10.1109/MTD.2013.6608673
   Frederiksen HD, 2008, IEEE T ENG MANAGE, V55, P602, DOI 10.1109/TEM.2008.2005547
   Gelman A, 2014, PERSPECT PSYCHOL SCI, V9, P641, DOI 10.1177/1745691614551642
   Hackbarth R, 2016, IEEE SOFTWARE, V33, P40, DOI 10.1109/MS.2015.76
   Harter DE, 2003, MANAGE SCI, V49, P784, DOI 10.1287/mnsc.49.6.784.16023
   Harter DE, 2012, IEEE T SOFTWARE ENG, V38, P810, DOI 10.1109/TSE.2011.63
   Huang CY, 2014, IEEE T RELIAB, V63, P309, DOI 10.1109/TR.2013.2285056
   IEEE Computer Society and Project Management Institute, 2013, SOFTW EXT PMBOK GUID
   Ittner CD, 1996, OPER RES, V44, P114, DOI 10.1287/opre.44.1.114
   Kemerer CF, 1998, COMMUN ACM, V41, P63, DOI 10.1145/280324.280334
   Kruchten Philippe, 2013, ACM SIGSOFT Software Engineering Notes, V38, P51
   Li ZY, 2015, J SYST SOFTWARE, V101, P193, DOI 10.1016/j.jss.2014.12.027
   Lim E, 2012, IEEE SOFTWARE, V29, P22, DOI 10.1109/MS.2012.130
   Maalej W, 2016, IEEE SOFTWARE, V33, P48, DOI 10.1109/MS.2015.153
   MacCormack A, 2016, J SYST SOFTWARE, V120, P170, DOI 10.1016/j.jss.2016.06.007
   Marinescu R, 2012, IBM J RES DEV, V56, DOI 10.1147/JRD.2012.2204512
   Nakajo T., 1991, IEEE T SOFTW ENG, V17
   Poth A, 2014, IEEE SOFTWARE, V31, P79, DOI 10.1109/MS.2013.138
   Project Management Institute A Guide to the Project Management Body of Knowledge (PMBOK&REG; Guide), 2013, 990012013 ANSI PROJ
   Ramasubbu N, 2016, MANAGE SCI, V62, P1487, DOI 10.1287/mnsc.2015.2196
   Ramasubbu N, 2014, IEEE T SOFTWARE ENG, V40, P758, DOI 10.1109/TSE.2014.2327027
   Ramasubbu N, 2014, IEEE T SOFTWARE ENG, V40, P235, DOI 10.1109/TSE.2013.58
   Ropponen J, 2000, IEEE T SOFTWARE ENG, V26, P98, DOI 10.1109/32.841112
   Schulenklopper J, 2016, IEEE SOFTWARE, V33, P13, DOI 10.1109/MS.2016.67
   Seaman C., 2011, ADV COMPUTERS, V82
   Slaughter SA, 1998, COMMUN ACM, V41, P67, DOI 10.1145/280324.280335
   Software Engineering Institute, 2009, THE IDEAL MOD
   Tom E, 2013, J SYST SOFTWARE, V86, P1498, DOI 10.1016/j.jss.2012.12.052
   van Lamsweerde A, 1998, IEEE T SOFTWARE ENG, V24, P908, DOI 10.1109/32.730542
   Woodard CJ, 2013, MIS QUART, V37, P537, DOI 10.25300/MISQ/2013/37.2.10
   Zazworka N, 2014, SOFTWARE QUAL J, V22, P403, DOI 10.1007/s11219-013-9200-8
NR 49
TC 8
Z9 8
U1 1
U2 27
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAR
PY 2019
VL 45
IS 3
BP 285
EP 300
DI 10.1109/TSE.2017.2774832
PG 16
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA HU4ME
UT WOS:000465248300004
DA 2024-07-18
ER

PT J
AU Stol, KJ
   Caglayan, B
   Fitzgerald, B
AF Stol, Klaas-Jan
   Caglayan, Bora
   Fitzgerald, Brian
TI Competition-Based Crowdsourcing Software Development: A Multi-Method
   Study from a Customer Perspective
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Crowdsourcing; software engineering; multi-method study; case study;
   sample study
ID PROJECT SUCCESS; FIT INDEXES; MOTIVATION; SYSTEMS; MODELS;
   PARTICIPATION; COMMUNICATION; COORDINATION; KNOWLEDGE; CRITERIA
AB Crowdsourcing is emerging as an alternative outsourcing strategy which is gaining increasing attention in the software engineering community. However, crowdsourcing software development involves complex tasks which differ significantly from the micro-tasks that can be found on crowdsourcing platforms such as Amazon Mechanical Turk which are much shorter in duration, are typically very simple, and do not involve any task interdependencies. To achieve the potential benefits of crowdsourcing in the software development context, companies need to understand how this strategy works, and what factors might affect crowd participation. We present a multi-method qualitative and quantitative theory-building research study. First, we derive a set of key concerns from the crowdsourcing literature as an initial analytical framework for an exploratory case study in a Fortune 500 company. We complement the case study findings with an analysis of 13,602 crowdsourcing competitions over a ten-year period on the very popular Topcoder crowdsourcing platform. Drawing from our empirical findings and the crowdsourcing literature, we propose a theoretical model of crowd interest and actual participation in crowdsourcing competitions. We evaluate this model using Structural Equation Modeling. Among the findings are that the level of prize and duration of competitions do not significantly increase crowd interest in competitions.
C1 [Stol, Klaas-Jan] Univ Coll Cork, Dept Comp Sci, Cork T12 YN60, Ireland.
   [Stol, Klaas-Jan; Fitzgerald, Brian] Univ Limerick, Lero Irish Software Res Ctr, Limerick V94 T9PX, Ireland.
   [Caglayan, Bora] IBM Ireland, Dublin 4, Ireland.
C3 University College Cork; University of Limerick
RP Stol, KJ (corresponding author), Univ Coll Cork, Dept Comp Sci, Cork T12 YN60, Ireland.; Stol, KJ (corresponding author), Univ Limerick, Lero Irish Software Res Ctr, Limerick V94 T9PX, Ireland.
EM k.stol@ucc.ie; bora.caglayan@ibm.com; bf@lero.ie
RI Stol, Klaas-Jan/I-6269-2013; Fitzgerald, Brian/E-7790-2010
OI Stol, Klaas-Jan/0000-0002-1038-5050; Fitzgerald,
   Brian/0000-0001-9193-2863
FU Science Foundation Ireland [15/SIRG/3293, 13/RC/2094]; European Regional
   Development Fund through the Southern & Eastern Regional Operational
   Programme; Science Foundation Ireland (SFI) [15/SIRG/3293] Funding
   Source: Science Foundation Ireland (SFI)
FX We thank Lutz Prechelt and the anonymous reviewers for very thorough
   feedback which has led to a better article. We thank TPI for granting us
   access to the case study data. This work was supported, in part, by
   Science Foundation Ireland grant 15/SIRG/3293 and 13/RC/2094 and
   co-funded under the European Regional Development Fund through the
   Southern & Eastern Regional Operational Programme to Lero-the Irish
   Software Research Centre (www.lero.ie).
CR Abdel-Hamid T. K., 1989, Journal of Management Information Systems, V6, P21
   Agerfalk P.J., 2015, Software sourcing in the age of open: leveraging the unknown workforce
   Ågerfalk PJ, 2013, EUR J INFORM SYST, V22, P251, DOI 10.1057/ejis.2013.6
   Ågerfalk PJ, 2008, MIS QUART, V32, P385
   AJZEN I, 1974, HUM RELAT, V27, P1, DOI 10.1177/001872677402700101
   [Anonymous], P 11 INT C WIRTSCH
   [Anonymous], P INT C INF SYST
   [Anonymous], 2011, P 24 ANN ACM S USER, DOI DOI 10.1145/2047196.2047202
   [Anonymous], 2012, CASE STUDY RES SOFTW, DOI DOI 10.1002/9781118181034
   [Anonymous], P 20 INT C WORLD WID
   [Anonymous], P HAND TALK ANN M PS
   [Anonymous], 2004, CORRELATION CAUSALIT
   [Anonymous], INFORM SCI APPL
   [Anonymous], P 19 AM C INF SYST
   [Anonymous], SURVEY RES MULTIPLE
   [Anonymous], P MED C INF SYST
   [Anonymous], 2016, PRINCIPLES PRACTICE
   [Anonymous], CRITERIA CRITIQUE
   [Anonymous], CROWDSOURCING WHAT C
   [Anonymous], CROWDSOURCING CLOUD
   [Anonymous], 2013, P 2013 C COMPUTER SU
   [Anonymous], 2010, TOPCODER A DEV SOFTW
   [Anonymous], 10 BURNING QUESTIONS
   [Anonymous], 2010, P 11 ACM C EL COMM, DOI DOI 10.1145/1807342.1807376
   [Anonymous], 2015, Exploring prior knowledge for pedestrian detection
   [Anonymous], KEY ADV HIST STRUCTU
   [Anonymous], TECH REP
   Archak N, 2010, P 19 INT C WORLD WO, P21
   Archak N., 2009, P 13 INT C INF SYST, P1
   Aurum A., 2003, Managing Software Engineering Knowledge
   Baddoo N, 2002, J SYST SOFTWARE, V62, P85, DOI 10.1016/S0164-1212(01)00125-X
   Bagozzi RP, 2012, J ACAD MARKET SCI, V40, P8, DOI 10.1007/s11747-011-0278-x
   Beecham S, 2008, INFORM SOFTWARE TECH, V50, P860, DOI 10.1016/j.infsof.2007.09.004
   Begel A, 2013, IEEE SOFTWARE, V30, P52, DOI 10.1109/MS.2013.13
   Begel Andrew, 2012, P ACM 2012 C COMPUTE, P17
   BENTLER PM, 1990, PSYCHOL BULL, V107, P238, DOI 10.1037/0033-2909.88.3.588
   Berkout OV, 2014, CLIN CHILD FAM PSYCH, V17, P217, DOI 10.1007/s10567-014-0165-3
   Bjornson FO, 2008, INFORM SOFTWARE TECH, V50, P1055, DOI 10.1016/j.infsof.2008.03.006
   Boehm B., 2006, 28th International Conference on Software Engineering Proceedings, P12, DOI 10.1145/1134285.1134288
   Boehm B, 2000, ANN SOFTW ENG, V10, P177, DOI 10.1023/A:1018991717352
   Boehm BW., 1981, Software Engineering Economics
   Bollen K.A., 1993, Testing structural equation models, P111
   Bonabeau E, 2009, MIT SLOAN MANAGE REV, V50, P45
   Boudreau KJ, 2011, MANAGE SCI, V57, P843, DOI 10.1287/mnsc.1110.1322
   Brabham DC, 2013, MIT PRESS ESSENT, P1
   Brabham D. C, 2008, Convergence, V14, P75, DOI DOI 10.1177/1354856507084420
   Brabham DC, 2012, INFORM COMMUN SOC, V15, P394, DOI 10.1080/1369118X.2011.641991
   Brooks Frederick P., 1995, The mythical man-month
   Capra E, 2008, IEEE T SOFTWARE ENG, V34, P765, DOI 10.1109/TSE.2008.68
   Cataldo M, 2013, IEEE T SOFTWARE ENG, V39, P343, DOI 10.1109/TSE.2012.32
   Chalmers RP, 2012, J STAT SOFTW, V48, P1
   Chanal V, 2010, MANAGEMENT, V13, P318, DOI 10.3917/mana.134.0318
   Chandler D, 2013, J ECON BEHAV ORGAN, V90, P123, DOI 10.1016/j.jebo.2013.03.003
   Clarke P, 2015, IEEE T SOFTWARE ENG, V41, P1169, DOI 10.1109/TSE.2015.2467388
   Creswell JW, 2000, THEOR PRACT, V39, P124, DOI 10.1207/s15430421tip3903_2
   Dabbish L., 2012, Proceedings of the ACM 2012 conference on Computer Supported Cooperative Work, P245, DOI DOI 10.1145/2145204.2145243
   Desouza KC, 2004, COMMUN ACM, V47, P87, DOI 10.1145/975817.975823
   DiPalantino D, 2009, 10TH ACM CONFERENCE ON ELECTRONIC COMMERCE - EC 2009, P119
   Doan A, 2011, COMMUN ACM, V54, P86, DOI 10.1145/1924421.1924442
   Dow S., 2012, P ACM 2012 C COMP SU, P1013, DOI [10.1145/2145204.2145355, DOI 10.1145/2145204.2145355]
   Dubey A, 2016, INT CONF GLOBAL SOFT, P49, DOI 10.1109/ICGSE.2016.13
   Ebner W., 2008, HAWAII INT C SYSTEM, P417
   Eisenhardt KM, 2007, ACAD MANAGE J, V50, P25, DOI 10.5465/AMJ.2007.24160888
   Erickson L. B., 2012, P 50 ANN C COMP PEOP, P91
   Erickson L.B., 2012, Proceedings of the 50th Annual Conference on Computers and People Research SIGMIS-CPR '12, P155, DOI DOI 10.1145/2214091.2214133
   Estellés-Arolas E, 2012, J INF SCI, V38, P189, DOI 10.1177/0165551512437638
   Faridani Siamak., 2011, Proc. HCOMP '11, P26
   Feller J., 2002, Understanding Open Source Software development
   Feller J, 2008, INFORM SYST RES, V19, P475, DOI 10.1287/isre.1080.0207
   Finney S.J., 2006, NONNORMAL CATEGORICA
   Fishbein M., 1980, UNDERSTANDING ATTITU
   Fitzgerald B, 1998, J INF TECHNOL-UK, V13, P313, DOI 10.1057/jit.1998.9
   Fitzgerald B, 2006, MIS QUART, V30, P587
   Fitzgerald B, 2012, COMPUTER, V45, P89, DOI 10.1109/MC.2012.147
   Gable GG, 1994, EUR J INFORM SYST, V3, P112, DOI 10.1057/ejis.1994.12
   Gefen D, 2016, J SYST SOFTWARE, V116, P75, DOI 10.1016/j.jss.2015.03.039
   Germonprez M, 2017, INFORM SYST RES, V28, P64, DOI 10.1287/isre.2016.0662
   Greengard S, 2011, COMMUN ACM, V54, P20, DOI 10.1145/1897816.1897824
   Herbsleb J. D., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P85, DOI 10.1109/ICSE.1999.840998
   Herbsleb JD, 2003, IEEE T SOFTWARE ENG, V29, P481, DOI 10.1109/TSE.2003.1205177
   Hetmank L., 2013, P 11 INT C WIRTSCHAF, P55
   Ho M.-H.R., 2012, Handbook of Structural Equation Modeling
   Hoe S.L., 2008, J APPL QUANTITATIVE, V3, P76, DOI DOI 10.1111/BMSP.12028
   Hoffmann L, 2009, COMMUN ACM, V52, P16, DOI 10.1145/1516046.1516052
   Howe J, 2006, WIRED, V14, P1, DOI DOI 10.1086/599595
   Howe J., 2008, Crowdsourcing: Why the Power of the Crowd Is Driving the Future of Business
   Hox JJ, 2010, STAT NEERL, V64, P157, DOI 10.1111/j.1467-9574.2009.00445.x
   Hoyle R. H., 2012, HDB STRUCTURAL EQUAT
   Hu LT, 1999, STRUCT EQU MODELING, V6, P1, DOI 10.1080/10705519909540118
   Ipeirotis Panagiotis G., 2010, XRDS: Crossroads, V17, P16, DOI [10.1145/1869086.1869094, DOI 10.1145/1869086.1869094]
   Jouret G, 2009, HARVARD BUS REV, V87, P43
   KAPLAN B, 1988, MIS QUART, V12, P571, DOI 10.2307/249133
   Kaufmann N., 2011, PROC 17THAMERICAS C, P1
   Kazman R, 2009, COMMUN ACM, V52, P76, DOI 10.1145/1538788.1538808
   Kitchenham B, 2017, EMPIR SOFTW ENG, V22, P579, DOI 10.1007/s10664-016-9437-5
   Kittur A., 2010, XRDS CROSSROADS, V17, P22, DOI DOI 10.1145/1869086.1869096
   Kittur Aniket, 2013, P 2013 C COMP SUPP C, P1301, DOI DOI 10.1145/2441776.2441923
   KRAUT RE, 1995, COMMUN ACM, V38, P69, DOI 10.1145/203330.203345
   Kulkarni A. P., 2012, P ACM 2012 C COMPUTE, P1003, DOI [DOI 10.1145/2145204.2145354, 10.1145/2145204.2145354]
   Lakhani K.R., 2007, Innovations: Technology, Governance, Globalization, V2, P97, DOI DOI 10.1162/ITGG.2007.2.3.97
   LaToza TD, 2016, IEEE SOFTWARE, V33, P74, DOI 10.1109/MS.2016.12
   LaToza TD, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P551, DOI 10.1109/ICSE.2015.72
   LaToza TD, 2013, 2013 6TH INTERNATIONAL WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING (CHASE), P85, DOI 10.1109/CHASE.2013.6614737
   LaToza ThomasD., 2014, Proceedings of the 27th Annual ACM Symposium on User Interface Software and Technology, UIST '14, P43, DOI DOI 10.1145/2642918.2647349
   Leimeister JM, 2009, J MANAGE INFORM SYST, V26, P197, DOI 10.2753/MIS0742-1222260108
   Lindsjorn Y, 2016, J SYST SOFTWARE, V122, P274, DOI 10.1016/j.jss.2016.09.028
   MALONE TW, 1994, ACM COMPUT SURV, V26, P87, DOI 10.1145/174666.174668
   Mao K, 2017, J SYST SOFTWARE, V126, P57, DOI 10.1016/j.jss.2016.09.015
   Mao K, 2015, 9TH IEEE INTERNATIONAL SYMPOSIUM ON SERVICE-ORIENTED SYSTEM ENGINEERING (SOSE 2015), P347, DOI 10.1109/SOSE.2015.46
   Mao K, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P1205, DOI 10.1109/ICSE.2013.6606679
   Mason W., 2009, P ACM SIGKDD WORKSH, DOI DOI 10.1145/1600150.1600175
   Matsueda R.L., 2012, Handbook of Structural Equation Modeling
   McDonald RP, 2002, PSYCHOL METHODS, V7, P64, DOI 10.1037//1082-989X.7.1.64
   Miles M. B., 1984, Qualitative data analysis: An expanded sourcebook
   Mingers J, 2001, INFORM SYST RES, V12, P240, DOI 10.1287/isre.12.3.240.9709
   Mockus A., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, P263, DOI 10.1109/ICSE.2000.870417
   Musson R, 2013, IEEE SOFTWARE, V30, P38, DOI 10.1109/MS.2013.67
   PARNAS DL, 1972, COMMUN ACM, V15, P1053, DOI 10.1145/361598.361623
   Raymond E., 2001, CATHEDRAL BAZAAR MUS
   Roberts JA, 2006, MANAGE SCI, V52, P984, DOI 10.1287/mnsc.1060.0554
   Saremi RL, 2017, 2017 IEEE/ACM 39TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2017), P103, DOI 10.1109/ICSE-SEIP.2017.2
   Saremi RL, 2015, 2015 30th IEEE/ACM International Conference on Automated Software Engineering Workshop (ASEW), P28, DOI 10.1109/ASEW.2015.22
   Satorra A., 1994, LATENT VARIABLES ANA, P399, DOI DOI 10.2307/2291370
   Savage N, 2012, COMMUN ACM, V55, P13, DOI 10.1145/2093548.2093553
   Schenk E, 2011, J INNOV ECON MANAG, P93, DOI 10.3917/jie.007.0093
   Schumacker R.E., 2004, BEGINNERS GUIDE STRU
   Schumacker R.E., 2016, BEGINNERS GUIDE STRU
   Schwarz Andrew, 2007, Data Base for Advances in Information Systems, V38, P29, DOI 10.1145/1278253.1278259
   Seaman CB, 1999, IEEE T SOFTWARE ENG, V25, P557, DOI 10.1109/32.799955
   Simula H, 2013, P ANN HICSS, P2783, DOI 10.1109/HICSS.2013.537
   Singer Y, 2013, WWW, P1157
   Sorrentino Richard., 1986, Handbook of Motivation and Cognition, Volume 1: Foundations of Social Behavior, V1
   Stol KJ, 2016, PROC INT CONF SOFTW, P120, DOI 10.1145/2884781.2884833
   Stol KJ, 2017, IEEE SOFTWARE, V34, P30, DOI 10.1109/MS.2017.52
   Stol KJ, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P187, DOI 10.1145/2568225.2568249
   Stol KJ, 2015, SCI COMPUT PROGRAM, V101, P79, DOI 10.1016/j.scico.2014.11.010
   Storey MA, 2017, IEEE T SOFTWARE ENG, V43, P185, DOI 10.1109/TSE.2016.2584053
   Surowiecki J., 2005, WISDOM CROWDS WHY MA
   Tajedin H., 2013, P 2013 ANN C COMP PE, P173
   Tamburri DA, 2013, ACM COMPUT SURV, V46, DOI 10.1145/2522968.2522971
   Tung YH, 2013, J SYST SOFTWARE, V86, P2143, DOI 10.1016/j.jss.2013.03.079
   von Krogh G, 2012, MIS QUART, V36, P649
   Vukovic M, 2009, 2009 IEEE CONGRESS ON SERVICES (SERVICES-1 2009), VOLS 1 AND 2, P686, DOI 10.1109/SERVICES-I.2009.56
   WALSHAM G, 1995, EUR J INFORM SYST, V4, P74, DOI 10.1057/ejis.1995.9
   WHEATON B, 1987, SOCIOL METHOD RES, V16, P118, DOI 10.1177/0049124187016001005
   Wheaton B., 1977, SOCIOL METHODOL, V8, P84, DOI DOI 10.2307/270754
   Wolfson S.M., 2011, P AM SOC INFORM SCI, V48, P1, DOI DOI 10.1002/MEET.2011
   Yang Ye, 2016, P 10 ACMIEEE INT S E, P8
   Yin R. K., 2015, CASE STUDY RES DESIG
   Zanatta AL, 2016, IEEE SOFTWARE, V33, P112, DOI 10.1109/MS.2016.151
   Zhao YX, 2014, INFORM SYST FRONT, V16, P417, DOI 10.1007/s10796-012-9350-4
   Zhao YC, 2014, ONLINE INFORM REV, V38, P896, DOI 10.1108/OIR-08-2014-0188
NR 152
TC 33
Z9 34
U1 1
U2 21
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAR
PY 2019
VL 45
IS 3
BP 237
EP 260
DI 10.1109/TSE.2017.2774297
PG 24
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science; Engineering
GA HU4ME
UT WOS:000465248300002
OA Green Published, Bronze
DA 2024-07-18
ER

PT J
AU Habayeb, M
   Murtaza, SS
   Miranskyy, A
   Bener, AB
AF Habayeb, Mayy
   Murtaza, Syed Shariyar
   Miranskyy, Andriy
   Bener, Ayse Basar
TI On the Use of Hidden Markov Model to Predict the Time to Fix Bugs
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Bug repositories; temporal activities; time to fix a bug; hidden markov
   model
AB A significant amount of time is spent by software developers in investigating bug reports. It is useful to indicate when a bug report will be closed, since it would help software teams to prioritise their work. Several studies have been conducted to address this problem in the past decade. Most of these studies have used the frequency of occurrence of certain developer activities as input attributes in building their prediction models. However, these approaches tend to ignore the temporal nature of the occurrence of these activities. In this paper, a novel approach using Hidden Markov Models and temporal sequences of developer activities is proposed. The approach is empirically demonstrated in a case study using eight years of bug reports collected from the Firefox project. Our proposed model correctly identifies bug reports with expected bug fix times. We also compared our proposed approach with the state of the art technique in the literature in the context of our case study. Our approach results in approximately 33 percent higher F-measure than the contemporary technique based on the Firefox project data.
C1 [Habayeb, Mayy; Murtaza, Syed Shariyar; Bener, Ayse Basar] Ryerson Univ, Dept Mech & Ind Engn, Data Sci Lab, Toronto, ON M5B 2K3, Canada.
   [Miranskyy, Andriy] Ryerson Univ, Dept Comp Sci, Data Sci Lab, Toronto, ON M5B 2K3, Canada.
C3 Toronto Metropolitan University; Toronto Metropolitan University
RP Miranskyy, A (corresponding author), Ryerson Univ, Dept Comp Sci, Data Sci Lab, Toronto, ON M5B 2K3, Canada.
EM mayy.habayeb@ryerson.ca; syed.shariyar@ryerson.ca; avm@ryerson.ca;
   ayse.bener@ryerson.ca
RI Basar, Ayse/ABF-9265-2020
OI Basar, Ayse/0000-0003-4934-8326; habayeb, mayy/0000-0002-9699-8746
FU NSERC DG [402003-2012]
FX This research is supported in part by NSERC DG no. 402003-2012.
CR Anbalagan P, 2009, PROC IEEE INT CONF S, P523, DOI 10.1109/ICSM.2009.5306337
   [Anonymous], 2012, P 35 INT ACM SIGIR C
   [Anonymous], 2007, P 22 IEEE ACM INT C, DOI DOI 10.1145/1321631.1321639
   Anvik J, 2011, ACM T SOFTW ENG METH, V20, DOI 10.1145/2000791.2000794
   Anvik John, 2006, P 28 INT C SOFTWARE, P361, DOI DOI 10.1145/1134285.1134336
   Avram A., 2011, INFOQ FIREFOX MOZILL
   Bhattacharya Pamela., 2011, PROCEEDING 8 WORKING, P207, DOI DOI 10.1145/1985441.1985472
   Bicer S., 2011, Proceedings of International Conference on Software and Systems Process, P63
   Caglayan B, 2013, 2013 6TH INTERNATIONAL WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING (CHASE), P33, DOI 10.1109/CHASE.2013.6614729
   da Costa DA, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P374, DOI [10.1109/MSR.2016.045, 10.1145/2901739.2901764]
   Del Ventisette C., 2008, USE REMOTE SENSING T, P1
   Fosler-lussier E., 1998, TR98041 INT COMP SCI, V1198, P132
   Giger E., 2010, P 2 INT WORKSH REC S, P52
   Habayeb M, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P498, DOI 10.1109/MSR.2015.73
   Hall M., 2009, ACM SIGKDD Explor. Newsl, V11, P18, DOI DOI 10.1145/1656274.1656278
   Jalbert N, 2008, I C DEPEND SYS NETWO, P52, DOI 10.1109/DSN.2008.4630070
   Jeong G, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P111, DOI 10.1145/1595696.1595715
   Kim S, 2006, Proceedings of the 2006 international workshop on Mining software repositories, P173
   Lamkanfi A, 2013, IEEE WORK CONF MIN S, P203, DOI 10.1109/MSR.2013.6624028
   Lamkanfi A, 2012, EUR CON SFTWR MTNCE, P379, DOI 10.1109/CSMR.2012.47
   Mani S, 2013, IEEE WORK CONF MIN S, P193, DOI 10.1109/MSR.2013.6624027
   Marks L., 2011, P 7 INT C PRED MOD S, P11
   Miranskyy A., 2014, P 8 ACM IEEE INT S E
   Mozilla, 2016, LIF CYCL BUG BUGZ ON
   Mozilla, 2016, SUP REV POL
   Murphy G., 2004, P 16 INT C SOFTW ENG, P1
   Murtaza SS, 2015, IEEE T RELIAB, V64, P269, DOI 10.1109/TR.2014.2366274
   Murtaza SyedShariyar., 2010, Proceedings of the 2010 Conference of the Center for Advanced Studies on Collaborative Research, CASCON'10, P57
   Panjer LucasD., 2007, Proceedings of the 4th International Workshop on Mining Software Repositories, MSR '07, P29
   Paul R., 2011, ARS TECHNICA MOZILLA
   RABINER LR, 1989, P IEEE, V77, P257, DOI 10.1109/5.18626
   Tian Y, 2013, PROC IEEE INT CONF S, P200, DOI 10.1109/ICSM.2013.31
   Valdivia-Garcia Harold., 2014, P 11 WORKING C MININ, P72
   Wang XY, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P461, DOI 10.1145/1368088.1368151
   Weiss C, 2007, P 4 INT WORKSH MIN S, P1, DOI [10.1109/MSR.2007.13, DOI 10.1109/MSR.2007.13]
   Wieringa R, 2015, SCI COMPUT PROGRAM, V101, P136, DOI 10.1016/j.scico.2014.11.013
   Witten I. H., 2005, DATA MINING PRACTICA
   Wohlin C., 2012, Experimentation in Software Engineering
   Zanetti MS, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P1032, DOI 10.1109/ICSE.2013.6606653
   Zhang HY, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P1042, DOI 10.1109/ICSE.2013.6606654
NR 40
TC 31
Z9 34
U1 0
U2 9
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD DEC
PY 2018
VL 44
IS 12
BP 1224
EP 1244
DI 10.1109/TSE.2017.2757480
PG 21
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA HD6AP
UT WOS:000452614100005
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Rakha, MS
   Bezemer, CP
   Hassan, AE
AF Rakha, Mohamed Sami
   Bezemer, Cor-Paul
   Hassan, Ahmed E.
TI Revisiting the Performance Evaluation of Automated Approaches for the
   Retrieval of Duplicate Issue Reports
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Text analysis; software engineering; performance evaluation
ID BUG REPORT DETECTION
AB Issue tracking systems (ITSs), such as Bugzilla, are commonly used to track reported bugs, improvements and change requests for a software project. To avoid wasting developer resources on previously-reported (i.e., duplicate) issues, it is necessary to identify such duplicates as soon as they are reported. Several automated approaches have been proposed for retrieving duplicate reports, i.e., identifying the duplicate of a new issue report in a list of n candidates. These approaches rely on leveraging the textual, categorical, and contextual information in previously-reported issues to decide whether a newly-reported issue has previously been reported. In general, these approaches are evaluated using data that spans a relatively short period of time (i.e., the classical evaluation). However, in this paper, we show that the classical evaluation tends to overestimate the performance of automated approaches for retrieving duplicate issue reports. Instead, we propose a realistic evaluation using all the reports that are available in the ITS of a software project. We conduct experiments in which we evaluate two popular approaches for retrieving duplicate issues (BM25F and REP) using the classical and realistic evaluations. We find that for the issue tracking data of the Mozilla foundation, the Eclipse foundation and OpenOffice, the realistic evaluation shows that previously proposed approaches perform considerably lower than previously reported using the classical evaluation. As a result, we conclude that the reported performance of approaches for retrieving duplicate issue reports is significantly overestimated in literature. In order to improve the performance of the automated retrieval of duplicate issue reports, we propose to leverage the resolution field of issue reports. Our experiments show that a relative improvement in the performance of a median of 7-21.5 percent and a maximum of 19-60 percent can be achieved by leveraging the resolution field of issue reports for the automated retrieval of duplicates.
C1 [Rakha, Mohamed Sami; Bezemer, Cor-Paul; Hassan, Ahmed E.] Queens Univ, Sch Comp, Software Anal & Intelligence Lab SAIL, Kingston, ON K7L 3N6, Canada.
C3 Queens University - Canada
RP Rakha, MS (corresponding author), Queens Univ, Sch Comp, Software Anal & Intelligence Lab SAIL, Kingston, ON K7L 3N6, Canada.
EM rakha@cs.queensu.ca; bezemer@cs.queensu.ca; ahmed@cs.queensu.ca
RI KHALIFA, AHMED khalifa/HKF-2246-2023; Hassan, Ahmed/AAB-7241-2019; Ali,
   Ahmed/HOF-4672-2023
OI KHALIFA, AHMED khalifa/0000-0002-2918-7572; Rakha,
   Mohamed/0000-0003-3145-6513; Bezemer, Cor-Paul/0000-0002-0474-5718
CR Aggarwal K, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P211, DOI 10.1109/SANER.2015.7081831
   Alipour A, 2013, IEEE WORK CONF MIN S, P183, DOI 10.1109/MSR.2013.6624026
   Nguyen AT, 2012, IEEE INT CONF AUTOM, P70, DOI 10.1145/2351676.2351687
   [Anonymous], 2013, P INT MULT ENG COMP
   [Anonymous], 2012, Proceedings of_the_21st_ACM_international_conference_on_Information_and_knowledge management
   [Anonymous], 1992, Information Retrieval: Data Structures Algorithms
   Anvik John, 2005, P 2005 OOPSLA WORKSH, P35
   Anvik John, 2006, P 28 INT C SOFTWARE, P361, DOI DOI 10.1145/1134285.1134336
   Banerjee S, 2017, INFORM SOFTWARE TECH, V89, P1, DOI 10.1016/j.infsof.2016.09.006
   Berry M. W., 2004, COMPUTING REV, V45, P548
   Bertram D, 2010, 2010 ACM CONFERENCE ON COMPUTER SUPPORTED COOPERATIVE WORK, P291
   Bettenburg N, 2008, PROC IEEE INT CONF S, P337, DOI 10.1109/ICSM.2008.4658082
   Chengnian Sun, 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P253, DOI 10.1109/ASE.2011.6100061
   Chowdhury G. G., 2010, Introduction to modern information retrieval
   Deb K, 2002, IEEE T EVOLUT COMPUT, V6, P182, DOI 10.1109/4235.996017
   GEHAN EA, 1965, BIOMETRIKA, V52, P203, DOI 10.1093/biomet/52.1-2.203
   Hadka D., 2011, Beginner's Guide to the MOEA Framework: Appendix A
   Hiew Lyndon, 2006, Assisted detection of duplicate bug reports
   Hindle A., 2015, Empirical Software Engineering, V21, P1
   Jalbert N, 2008, I C DEPEND SYS NETWO, P52, DOI 10.1109/DSN.2008.4630070
   Joanes DN, 1998, J ROY STAT SOC D-STA, V47, P183
   Kaushik N, 2012, EUR CON SFTWR MTNCE, P159, DOI 10.1109/CSMR.2012.78
   Lazar A., 2014, P 11 WORKING C MININ, P308
   Liang Feng, 2013, Web Technologies and Applications. 15th Asia-Pacific Web Conference, APWeb 2013. Proceedings, P709, DOI 10.1007/978-3-642-37401-2_69
   Long J.D., 2003, Handbook of psychology
   Papineni K, 2002, 40TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, PROCEEDINGS OF THE CONFERENCE, P311, DOI 10.3115/1073083.1073135
   Rakha MS, 2016, EMPIR SOFTW ENG, V21, P1960, DOI 10.1007/s10664-015-9404-6
   Robertson S., 2004, P 13 ACM INT C INF K, P42
   Romano J, 2006, ANN M FLOR ASS I RES, P1
   Runeson P, 2007, PROC INT CONF SOFTW, P499
   SALTON G, 1975, COMMUN ACM, V18, P613, DOI 10.1145/361219.361220
   Sun Chengnian, 2010, P 32 ACMIEEE INT C S, V1, P45, DOI [DOI 10.1145/1806799, 10.1145/1806799.1806811]
   Sureka A, 2010, ASIA PAC SOFWR ENG, P366, DOI 10.1109/APSEC.2010.49
   Taylor Michael, 2006, Proceedings of the 15th ACM international conference on Information and knowledge management, CIKM '06, P585
   Wang XY, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P461, DOI 10.1145/1368088.1368151
   Zou J, 2016, IEICE T INF SYST, VE99D, P1762, DOI 10.1587/transinf.2016EDP7052
NR 36
TC 21
Z9 26
U1 0
U2 8
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD DEC
PY 2018
VL 44
IS 12
BP 1245
EP 1268
DI 10.1109/TSE.2017.2755005
PG 24
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA HD6AP
UT WOS:000452614100006
DA 2024-07-18
ER

PT J
AU Banerjee, K
   Sarkar, D
   Mandal, C
AF Banerjee, Kunal
   Sarkar, Dipankar
   Mandal, Chittaranjan
TI Deriving Bisimulation Relations from Path Extension Based Equivalence
   Checkers
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Translation validation; bisimulation relation; equivalence checking;
   path extension based equivalence checker
ID VERIFICATION
AB Constructing bisimulation relations between programs as a means of translation validation has been an active field of study. The problem is in general undecidable. Currently available mechanisms suffer from drawbacks such as non-termination and significant restrictions on the structures of programs to be checked. We have developed a path extension based equivalence checking method as an alternative translation validation technique to alleviate these drawbacks. In this work, path extension based equivalence checking of programs (flowcharts) is leveraged to establish a bisimulation relation between a program and its translated version by constructing the relation from the outputs of the equivalence checker.
C1 [Banerjee, Kunal] Intel Parallel Comp Lab, Bangalore 560037, Karnataka, India.
   [Sarkar, Dipankar; Mandal, Chittaranjan] Indian Inst Technol Kharagpur, Dept Comp Sci & Engn, Kharagpur, W Bengal, India.
C3 Intel Corporation; Indian Institute of Technology System (IIT System);
   Indian Institute of Technology (IIT) - Kharagpur
RP Banerjee, K (corresponding author), Intel Parallel Comp Lab, Bangalore 560037, Karnataka, India.
EM kunal.banerjee@intel.com; ds@cse.iitkgp.ernet.in; chitta@iitkgp.ac.in
OI Banerjee, Kunal/0000-0002-0605-630X
FU Tata Consultancy Services (TCS); Department of Science and Technology
   (DST), India [SB/EMEQ-281/2013]
FX The authors would like to thank the anonymous reviewers for their
   comments and suggestions which helped us improve this article. The work
   of K. Banerjee was supported by Tata Consultancy Services (TCS) Research
   Fellowship. This work was also funded by Department of Science and
   Technology (DST), India, Project No: SB/EMEQ-281/2013.
CR Aho A. V., 2006, COMPILERS PRINCILES
   [Anonymous], 1993, Program Verification: Fundamental Issues in Computer Science, DOI [10.1090/psapm/019/0235771, DOI 10.1090/PSAPM/019/0235771]
   [Anonymous], 2013, P 23 GREAT LAK S VLS
   CAMPOSANO R, 1991, IEEE T COMPUT AID D, V10, P85, DOI 10.1109/43.62794
   Chi-Hui Lee, 2011, 2011 16th Asia and South Pacific Design Automation Conference, ASP-DAC 2011, P497, DOI 10.1109/ASPDAC.2011.5722241
   Darte A, 2000, INT J PARALLEL PROG, V28, P499, DOI 10.1023/A:1007506711786
   Gajski D.D., 1992, High-level synthesis: introduction to chip and system design
   Karfa C, 2006, ISQED 2006: PROCEEDINGS OF THE 7TH INTERNATIONAL SYMPOSIUM ON QUALITY ELECTRONIC DESIGN, P71
   Karfa C, 2008, IEEE T COMPUT AID D, V27, P556, DOI 10.1109/TCAD.2007.913390
   Karfa C, 2012, ACM T DES AUTOMAT EL, V17, DOI 10.1145/2209291.2209303
   Karfa C, 2010, IEEE T COMPUT AID D, V29, P479, DOI 10.1109/TCAD.2009.2035542
   Krall Andreas, 2013, SOFTWARE ENG WORKSHO, P75
   Kundu S, 2008, LECT NOTES COMPUT SC, V5123, P459
   Kundu S, 2010, IEEE T COMPUT AID D, V29, P566, DOI 10.1109/TCAD.2010.2042889
   Lezuo R., 2014, THESIS
   Necula G. C., 2000, SIGPLAN Notices, V35, P83, DOI 10.1145/358438.349314
   Pnueli A, 1998, LECT NOTES COMPUT SC, V1384, P151, DOI 10.1007/BFb0054170
   RAHMOUNI M, 1995, EURO-DAC '95 - EUROPEAN DESIGN AUTOMATION CONFERENCE WITH EURO-VHDL, PROCEEDINGS, P386, DOI 10.1109/EURDAC.1995.527434
   Rinard M., 1999, P INT C COMP CONSTR, P1
NR 19
TC 2
Z9 3
U1 0
U2 2
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD OCT
PY 2017
VL 43
IS 10
BP 946
EP 953
DI 10.1109/TSE.2016.2645687
PG 8
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA FJ9YP
UT WOS:000413137700003
DA 2024-07-18
ER

PT J
AU Li, F
   Li, ZY
   Huo, W
   Feng, XB
AF Li, Feng
   Li, Zhiyuan
   Huo, Wei
   Feng, Xiaobing
TI Locating Software Faults Based on Minimum Debugging Frontier Set
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Fault localization; minimum debugging frontier set; sparse symbolic
   exploration; dynamic dependence graph
AB In this article, we propose a novel state-based fault-localization approach. Given an observed failure that is reproducible under the same program input, this new approach uses two main techniques to reduce the state exploration cost. Firstly, the execution trace to be analyzed for the observed failure is successively narrowed by making the set of trace points in each step a cut of the dynamic dependence graph. Such a cut divides the remaining trace into two parts and, based on the sparse symbolic exploration outcome, one part is removed from further exploration. This process continues until reaching where the fault is determined to be. Second, the cut in each step is chosen such that the union of the program states from the members of the cut is of the minimum size among all candidate cuts. The set of statement instances in the chosen cut is called a minimum debugging frontier set (MDFS). To evaluate our approach, we apply it to 16 real bugs from real world programs and compare our fault reports with those generated by state-of-the-art approaches. Results show that the MDFS approach obtains high quality fault reports for these test cases with considerably higher efficiency than previous approaches.
C1 [Li, Feng; Feng, Xiaobing] Chinese Acad Sci, State Key Lab Comp Architecture, Inst Comp Technol, Beijing 100190, Peoples R China.
   [Li, Zhiyuan] Purdue Univ, Dept Comp Sci, W Lafayette, IN 47907 USA.
   [Huo, Wei] Chinese Acad Sci, Inst Informat Engn, Beijing 100049, Peoples R China.
C3 Chinese Academy of Sciences; Institute of Computing Technology, CAS;
   Purdue University System; Purdue University; Chinese Academy of
   Sciences; Institute of Information Engineering, CAS
RP Li, F (corresponding author), Chinese Acad Sci, State Key Lab Comp Architecture, Inst Comp Technol, Beijing 100190, Peoples R China.
EM lifeng2005@ict.ac.cn; zhiyuanli@purdue.cn; huowei@iee.ac.cn;
   fxb@ict.ac.cn
RI Zhang, Jiahao/HIZ-5698-2022; Huo, Wei/X-7706-2019; Li,
   Zhiyuan/AAT-1121-2020
OI Zhang, Jiahao/0000-0001-9421-2415; 
FU National Natural Science Foundation of China [61303053, 61402445,
   61402303, 61521092]; National High Technology Research and Development
   Program of China [2015AA011505]; National Science Foundation of United
   States [1533822]; Direct For Computer & Info Scie & Enginr; Division of
   Computing and Communication Foundations [1533822] Funding Source:
   National Science Foundation
FX We would like to thank the anonymous reviewers whose suggestions have
   improved the presentation of our work. This work is sponsored in part by
   National Natural Science Foundation of China (61303053, 61402445,
   61402303, 61521092); National High Technology Research and Development
   Program of China (2015AA011505); and National Science Foundation of
   United States (1533822).
CR AGRAWAL H, 1990, SIGPLAN NOTICES, V25, P246, DOI 10.1145/93548.93576
   [Anonymous], 2013, JOINT M FDN SOFTW EN
   [Anonymous], 2011, Proceedings of the 19th ACM SIGSOFT Symposium and the 13th European Conference on Foundations of Software Engineering (FSE'11), DOI DOI 10.1145/2025113.2025136
   [Anonymous], 2010, ISSTA
   [Anonymous], 2010, ICSE
   [Anonymous], 2008, ISSTA
   Baah GeorgeK., 2008, P 2008 INT S SOFTWAR, P189, DOI DOI 10.1145/1390630.1390654
   Burnim Jacob, 2008, 2008 23rd IEEE/ACM International Conference on Automated Software Engineering, P443, DOI 10.1109/ASE.2008.69
   Chandra S, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P121, DOI 10.1145/1985793.1985811
   Chekuri CS, 1997, PROCEEDINGS OF THE EIGHTH ANNUAL ACM-SIAM SYMPOSIUM ON DISCRETE ALGORITHMS, P324
   Cheng H, 2009, ISSTA 2009: INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P141
   Clarke E, 2004, LECT NOTES COMPUT SC, V2988, P168, DOI 10.1007/978-3-540-24730-2_15
   Cleve H, 2005, PROC INT CONF SOFTW, P342
   CYTRON R, 1991, ACM T PROGR LANG SYS, V13, P451, DOI 10.1145/115372.115320
   Delamaro ME, 2001, KLUW INT S ADV DATA, V24, P91
   DeMillo R. A., 1996, SIGSOFT Software Engineering Notes, V21, P121, DOI [10.1145/229000.226310, 10.1145/226295.226310]
   Gyimóthy T, 1999, LECT NOTES COMPUT SC, V1687, P303, DOI 10.1145/318774.319248
   HORWITZ S, 1990, ACM T PROGR LANG SYS, V12, P26, DOI [10.1145/77606.77608, 10.1145/960116.53994]
   Jones J.A., 2005, P 20 IEEE ACM INT C, P273, DOI [10.1145/1101908.1101949, DOI 10.1145/1101908.1101949]
   Jose M, 2011, PLDI 11: PROCEEDINGS OF THE 2011 ACM CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P437
   Ko AJ, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P301, DOI 10.1145/1368088.1368130
   Korel B., 1991, Proceedings of the Twenty-Fourth Annual Hawaii International Conference on System Sciences (Cat. No.91TH0350-9), P246, DOI 10.1109/HICSS.1991.183985
   Li F., 2013, ADV MECH ENG, V2013, P1, DOI DOI 10.1007/S00122-013-2049-1
   Liblit B, 2005, ACM SIGPLAN NOTICES, V40, P15, DOI 10.1145/1064978.1065014
   Liu C., 2005, P EUR SOFTW ENG C HE, V30, P286
   Mechtaev S, 2016, PROC INT CONF SOFTW, P691, DOI 10.1145/2884781.2884807
   Moon S, 2014, 2014 IEEE SEVENTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST), P153, DOI 10.1109/ICST.2014.28
   Necula GC, 2002, LECT NOTES COMPUT SC, V2304, P213
   Papadakis M., 2012, 2012 IEEE Fifth International Conference on Software Testing, Verification and Validation (ICST 2012), P691, DOI 10.1109/ICST.2012.159
   Papadakis M, 2015, SOFTW TEST VERIF REL, V25, P605, DOI 10.1002/stvr.1509
   Sen K, 2007, P 22 IEEE ACM INT C, P571, DOI DOI 10.1145/1321631.1321746
   Sumner WN, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P272, DOI 10.1109/ICSE.2013.6606573
   Weiser M., 1981, 5th International Conference on Software Engineering, P439
   Xiangyu Zhang, 2006, 28th International Conference on Software Engineering Proceedings, P272, DOI 10.1145/1134285.1134324
   Xin B., 2007, ISSTA 07 P INT S SOF, P185, DOI 10.1145/1273463.1273489
   Zeller A., 2002, Software Engineering Notes, V27, P1, DOI 10.1145/605466.605468
   Zeller A, 1999, LECT NOTES COMPUT SC, V1687, P253, DOI 10.1145/318774.318946
   Zhang J, 2004, QSIC 2004: PROCEEDINGS OF THE FOURTH INTERNATIONAL CONFERENCE ON QUALITY SOFTWARE, P87
   Zhang X, 2006, ACM SIGPLAN NOTICES, V41, P169, DOI 10.1145/1133981.1134002
   Zhang ZG, 2003, PROC INT CONF SOFTW, P319
   Zuo Z., 2014, Proceedings of the 2014 International Symposium on Software Testing and Analysis New York, NY, USA, P215
NR 41
TC 8
Z9 11
U1 0
U2 11
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD AUG 1
PY 2017
VL 43
IS 8
BP 760
EP 776
DI 10.1109/TSE.2016.2632122
PG 17
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA FD7FW
UT WOS:000407693000004
OA Bronze
DA 2024-07-18
ER

PT J
AU Baresi, L
   Ghezzi, C
   Ma, XX
   La Manna, VP
AF Baresi, Luciano
   Ghezzi, Carlo
   Ma, Xiaoxing
   Panzica La Manna, Valerio
TI Efficient Dynamic Updates of Distributed Components Through Version
   Consistency
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Component-based distributed system; dynamic update; version-consistency
ID ADAPTATION
AB Modern component-based distributed software systems are increasingly required to offer non-stop service and thus their updates must be carried out at runtime. Different authors have already proposed solutions for the safe management of dynamic updates. Our contribution aims at improving their efficiency without compromising safety. We propose a new criterion, called version consistency, which defines when a dynamic update can be safely and efficiently applied to the components that execute distributed transactions. Version consistency ensures that distributed transactions be served as if they were operated on a single coherent version of the system despite possible concurrent updates. The paper presents a distributed algorithm for checking version consistency efficiently, formalizes the proposed approach by means of a graph transformation system, and verifies its correctness through model checking. The paper also presents CoNUp, a novel prototype framework that supports the approach and offers a viable, concrete solution for the use of version consistency. Both the approach and CoNUF are evaluated on a significant third-party application. Obtained results witness the benefits of the proposed solution with respect to both timeliness and disruption.
C1 [Baresi, Luciano; Ghezzi, Carlo] Politecn Milan, Dipartimento Elettron Informaz & Bioingn, I-20133 Milan, Italy.
   [Ma, Xiaoxing] Nanjing Univ, State Key Lab Novel Software Technol, Nanjing 210093, Jiangsu, Peoples R China.
   [Ma, Xiaoxing] Nanjing Univ, Collaborat Innovat Ctr Novel Software Technol & I, Nanjing 210093, Jiangsu, Peoples R China.
   [Panzica La Manna, Valerio] Hoist Ctr Imec Netherlands, NL-5656 AE Eindhoven, Netherlands.
C3 Polytechnic University of Milan; Nanjing University; Nanjing University;
   IMEC
RP Baresi, L (corresponding author), Politecn Milan, Dipartimento Elettron Informaz & Bioingn, I-20133 Milan, Italy.
EM luciano.baresi@polimi.it; carlo.ghezzi@polimi.it; xxm@nju.edu.cn;
   valerio.panzicalamanna@imec-nl.nl
RI Ma, Xiaoxing/K-4290-2012; Ma, Xiaoxing/X-6505-2018; Baresi,
   Luciano/N-4208-2018
OI Ma, Xiaoxing/0000-0001-7970-1384; Baresi, Luciano/0000-0001-6467-837X
FU 973 Program of China [2015CB352202]; NSFC [61472177, 91318301]; project
   EEB-Edifici a zero consumo energetico in distretti urbani intelligenti
   (Italian Technology Cluster For Smart Communities) [CTN01_00034_594053];
   Telecom Italia
FX We want to thank Guochao Ken, Jiang Wang, and Yiqun Wang for their
   contribution to the implementation of CONUP. The work presented in this
   paper has been partially supported by the 973 Program of China under
   grant No. 2015CB352202, NSFC under grants No. 61472177 and 91318301, by
   project EEB-Edifici a zero consumo energetico in distretti urbani
   intelligenti (Italian Technology Cluster For Smart
   Communities)-CTN01_00034_594053, and by Telecom Italia, which supported
   Valerio Panzica La Manna while he was a postdoctoral researcher at the
   Politecnico. The work presented in this paper was carried out while
   Valerio was at the Politecnico di Milano, Italy. Xiaoxing Ma is the
   corresponding author of this paper.
CR Ajmani S, 2006, LECT NOTES COMPUT SC, V4067, P452
   [Anonymous], 2012, WEB SERVICES SOA PRI
   Bardohl M., 1999, Handbook of graph grammars and computing by graph transformation, V2, P105
   Baresi L, 2002, LECT NOTES COMPUT SC, V2505, P402
   Baresi L, 2006, LECT NOTES COMPUT SC, V4178, P306
   Baumann Andrew., 2005, Proceedings of the USENIX Annual Technical Conference (USENIX '05), P32
   Bidan C, 1998, FOURTH INTERNATIONAL CONFERENCE ON CONFIGURABLE DISTRIBUTED SYSTEMS, PROCEEDINGS, P35, DOI 10.1109/CDS.1998.675756
   Biyani KN, 2008, J PARALLEL DISTR COM, V68, P1097, DOI 10.1016/j.jpdc.2008.02.005
   Boyer F, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P13, DOI 10.1109/ICSE.2013.6606547
   Canavera Kyle R, 2012, P ACM SIGSOFT 20 INT, P18
   Chen HB, 2007, PROC INT CONF SOFTW, P271
   Chen XJ, 2002, LECT NOTES COMPUT SC, V2370, P82
   Cook J. E., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P203, DOI 10.1109/ICSE.1999.841010
   Garlan D, 2004, COMPUTER, V37, P46, DOI 10.1109/MC.2004.175
   Ghamarian Amir Hossein, 2012, International Journal on Software Tools for Technology Transfer, V14, P15, DOI 10.1007/s10009-011-0186-x
   Giuffrida C., 2009, P 2 INT WORKSH HOT T, P1
   Gupta D, 1996, IEEE T SOFTWARE ENG, V22, P120, DOI 10.1109/32.485222
   Hicks M, 2005, ACM T PROGR LANG SYS, V27, P1049, DOI 10.1145/381694.378798
   Jackson Daniel, 2006, Software abstractions: Logic, language, and analysis
   KRAMER J, 1990, IEEE T SOFTWARE ENG, V16, P1293, DOI 10.1109/32.60317
   Le Metayer D, 1998, IEEE T SOFTWARE ENG, V24, P521, DOI 10.1109/32.708567
   Ma X., 2011, SIGSOFT/FSE'11 19th ACM SIGSOFT Symposium on the Foundations of Software Engineering (FSE-19) and ESEC'11: 13th European Software Engineering Conference (ESEC-13), Szeged, Hungary, September 5-9, 2011, P245, DOI [10.1145/2025113.2025148, DOI 10.1145/2025113.2025148]
   Makris Kristis., 2007, Proceedings of the 2nd ACM SIGOPS/EuroSys European Conference on Computer Systems 2007, P327
   Mitchell DonP., 1984, P 3 ANN ACM S PRINCI, P282, DOI [10.1145/800222.806755, DOI 10.1145/800222.806755]
   Neamtiu I, 2008, POPL'08: PROCEEDINGS OF THE 35TH ANNUAL ACM SIGPLAN-SIGACT SYMPOSIUM ON PRINCIPLES OF PROGRAMMING LANGUAGES, P37, DOI 10.1145/1328438.1328447
   Oreizy P, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P899
   Previtali S.C., 2007, P 1 WORKSHOP MIDDLEW, P49
   Reuter A, 1992, T PROCESSING CONCEPT
   Rutti O., 2006, P 20 INT C PAR DISTR, P133
   Seinturier L, 2012, SOFTWARE PRACT EXPER, V42, P559, DOI 10.1002/spe.1077
   Service Component Architecture (SCA), 2011, OAS OPENCSA
   Stoyle G, 2007, ACM T PROGR LANG SYS, V29, DOI 10.1145/1255450.1255455
   Su P, 2013, ASIA PAC SOFWR ENG, P450, DOI 10.1109/APSEC.2013.66
   Subramanian S, 2009, PLDI'09 PROCEEDINGS OF THE 2009 ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P1, DOI 10.1145/1542476.1542478
   Taentzer G, 2003, LECT NOTES COMPUT SC, V3062, P446
   Taentzer G, 2000, LECT NOTES COMPUT SC, V1764, P179
   Vandewoude Y, 2007, IEEE T SOFTWARE ENG, V33, P856, DOI 10.1109/TSE.2007.70733
   Vatkina M., 2013, 345 JSR
   Wermelinger M., 2001, Software Engineering Notes, V26, P21, DOI 10.1145/503271.503213
   Wojciechowski PT, 2005, LECT NOTES COMPUT SC, V3535, P275
   Zhang Ji, 2006, P 28 INT C SOFTW ENG, P371
NR 41
TC 14
Z9 16
U1 0
U2 6
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD APR 1
PY 2017
VL 43
IS 4
BP 340
EP 358
DI 10.1109/TSE.2016.2592913
PG 19
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA ES7IH
UT WOS:000399722800003
OA Green Published
DA 2024-07-18
ER

PT J
AU Duran-Limon, HA
   Garcia-Rios, CA
   Castillo-Barrera, FE
   Capilla, R
AF Duran-Limon, Hector A.
   Garcia-Rios, Carlos A.
   Castillo-Barrera, Francisco E.
   Capilla, Rafael
TI An Ontology-Based Product Architecture Derivation Approach
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Software product lines; feature models; software architecture; product
   derivation; architecture derivation; ontologies; model-driven
   engineering; scalability
ID MODELING VARIABILITY; SOFTWARE; COMPONENT
AB Software product line (SPL) engineering has proven to improve software quality and shorten development cycles, cost and time. In product line engineering, product derivation is concerned with the realization of the variability at the implementation level. However, the majority of research works focuses on instantiating the variants selected in the final product, while the derivation at the architecture level has been poorly explored. As product line engineers often customize the product architecture by hand during the application engineering phase, the derivation and customization processes of the product line architecture (PLA) might be in some cases error-prone. Consequently, in this research we present an Ontology-based product Architecture Derivation (OntoAD) framework which automates the derivation of product-specific architectures from an SPL architecture. Our solution uses a language-independent model to specify the product line architecture and a model-driven engineering approach for architecture derivation activities. We use an ontology formalism to reason about the automatic generation of model-to-model transformation rules based on the selection of features and we illustrate our approach using a voice over IP motivating example. Finally, we report results about scalability and performance regarding the size of the variability model.
C1 [Duran-Limon, Hector A.; Garcia-Rios, Carlos A.] Univ Guadalajara, CUCEA, Dept Informat Syst, Guadalajara 45100, Jalisco, Mexico.
   [Castillo-Barrera, Francisco E.] Autonomous Univ San Luis Potosi, Sch Engn, San Luis Potosi 78290, Mexico.
   [Capilla, Rafael] Rey Juan Carlos Univ Madrid, Dept Comp Sci, Madrid, Spain.
C3 Universidad de Guadalajara; Universidad Autonoma de San Luis Potosi;
   Universidad Rey Juan Carlos
RP Duran-Limon, HA (corresponding author), Univ Guadalajara, CUCEA, Dept Informat Syst, Guadalajara 45100, Jalisco, Mexico.
EM hduran@cucea.udg.mx; charlie@cucea.udg.mx; ecastillo@uaslp.mx;
   rafael.capilla@urjc.es
RI Castillo-Barrera, Francisco-Edgar/AAE-6169-2020
OI Capilla, Rafael/0000-0002-6943-1285; Castillo,
   Francisco/0000-0001-7821-5819
CR Abburu Sunitha., 2012, International Journal of Computer Applications, V57, P33, DOI DOI 10.5120/9208-3748
   [Anonymous], 2008, Metamodelling for software engineering
   [Anonymous], 2007, DESCRIPTION LOGIC HD, DOI DOI 10.1017/CBO9780511711787
   [Anonymous], 2009, P 2009 ACM S APPL CO
   Apel S, 2005, LECT NOTES COMPUT SC, V3676, P125
   Apel S., 2013, IEEE Transactions on Software Engineering, V39, P63, DOI 10.1109/TSE.2011.120
   Apel S, 2012, SCI COMPUT PROGRAM, V77, P174, DOI 10.1016/j.scico.2010.07.005
   Aracic I, 2006, LECT NOTES COMPUT SC, V3880, P135
   Asadi Mohsen, 2010, P GPCE
   Asikainen T, 2007, ADV ENG INFORM, V21, P23, DOI 10.1016/j.aei.2006.11.007
   Bak K., 2010, P 3 INT C SOFTW LANG, P102
   Bass Len, 2012, SEI S SOFTW
   Batory D, 2004, IEEE T SOFTWARE ENG, V30, P355, DOI 10.1109/TSE.2004.23
   Batory D, 2005, LECT NOTES COMPUT SC, V3714, P7
   Benavides D, 2010, INFORM SYST, V35, P615, DOI 10.1016/j.is.2010.01.001
   Bergel A, 2005, ACM SIGPLAN NOTICES, V40, P177, DOI 10.1145/1103845.1094826
   Bock J., 2008, P AREA2008 WORKSH
   Botterweck Goetz., 2007, P 22 IEEEACM INT C A, P469, DOI DOI 10.1145/1321631.1321711
   Bzivin J., 2003, P 2 OOPSLA WORKSH GE
   Czarnecki K, 2005, LECT NOTES COMPUT SC, V3676, P422
   Czarnecki K, 2006, SPLC 2006: 10TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE, PROCEEDINGS, P41, DOI 10.1109/SPLINE.2006.1691576
   Dashofy EM, 2005, ACM T SOFTW ENG METH, V14, P199, DOI 10.1145/1061254.1061258
   Duran-Limon H. A., 2015, ONTOLOGY BASED PRODU
   Duran-Limon HA, 2004, J SYST SOFTWARE, V72, P1, DOI 10.1016/S0164-1212(03)00016-5
   Gomez A, 2010, VAMOS, V37, P61
   Haugen O., 2012, AD20120805 OMG
   Heidenreich F., 2009, P 1 INT WORKSHOP FEA, P69
   Hitzler P., 2005, P INT SEM WE C SOFTW
   Hitzler Pascal, 2012, OWL 2 Web Ontology Language Primer, VSecond
   Horridge M., 2009, A Practical Guide To Building OWL Ontologies Using Protege 4 and CO-ODE Tools
   Johansen M.F., 2010, SPLC 10, P163
   Krueger CW, 2006, COMMUN ACM, V49, P37, DOI 10.1145/1183236.1183262
   Lefort Laurent., 2006, Proceedings of the second Australasian workshop on Advances in ontologies-Volume, V72, P31
   Medvidovic N, 2000, IEEE T SOFTWARE ENG, V26, P70, DOI 10.1109/32.825767
   Murguzur A., 2014, P 18 INT SOFTW PROD, V2, P2, DOI DOI 10.1145/2647908.2655957
   Parra C, 2010, LECT NOTES COMPUT SC, V6285, P230, DOI 10.1007/978-3-642-15114-9_18
   Pastor O., 2010, Model-Driven Architecture in Practice: A Soft-ware Production Environment Based on Conceptual Modeling
   Peng X, 2006, LECT NOTES COMPUT SC, V4039, P87
   Pérez J, 2009, 2009 JOINT WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE AND EUROPEAN CONFERENCE ON SOFTWARE ARCHITECTURE, P221, DOI 10.1109/WICSA.2009.5290808
   Perovich D, 2009, 2009 JOINT WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE AND EUROPEAN CONFERENCE ON SOFTWARE ARCHITECTURE, P201, DOI 10.1109/WICSA.2009.5290806
   Pinto M, 2012, J SYST SOFTWARE, V85, P525, DOI 10.1016/j.jss.2011.05.026
   Quinton C, 2013, P 2013 INT WORKSHOP, P21, DOI [10.1145/2462326.2462332, DOI 10.1145/2462326.2462332]
   Razavian M, 2008, I C COMP SYST APPLIC, P801, DOI 10.1109/AICCSA.2008.4493618
   Selic B, 2006, Ninth IEEE International Symposium on Object and Component-Oriented Real-Time Distributed Computing, Proceedings, P313, DOI 10.1109/ISORC.2006.54
   Sinnema M, 2004, LECT NOTES COMPUT SC, V3154, P197
   Spanias A., 2000, SPEECH CODING STANDA
   Steinberg D., 2008, EMF: Eclipse Modeling Framework, Vsecond
   van Amstel Marcel, 2011, Theory and Practice of Model Transformations. Proceedings of the 4th International Conference, ICMT 2011, P198, DOI 10.1007/978-3-642-21732-6_14
   van Ommering R, 2000, COMPUTER, V33, P78, DOI 10.1109/2.825699
   Weiss D.M., 2006, P 10 INT SOFTW PROD, P237, DOI [10.1109/SPLINE.2006.1691614, DOI 10.1109/SPLINE.2006.1691614]
   White J, 2008, SPLC 2008: 12TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE, PROCEEDINGS, P225, DOI 10.1109/SPLC.2008.16
NR 51
TC 13
Z9 14
U1 0
U2 12
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD DEC
PY 2015
VL 41
IS 12
BP 1153
EP 1168
DI 10.1109/TSE.2015.2449854
PG 16
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA CY5TP
UT WOS:000366470700001
DA 2024-07-18
ER

PT J
AU Nadi, S
   Berger, T
   Kästner, C
   Czarnecki, K
AF Nadi, Sarah
   Berger, Thorsten
   Kaestner, Christian
   Czarnecki, Krzysztof
TI Where Do Configuration Constraints Stem From? An Extraction Approach and
   an Empirical Study
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Variability models; reverse-engineering; qualitative studies; static
   analyses; configuration constraints
ID SOFTWARE PRODUCT LINES; VARIABILITY
AB Highly configurable systems allow users to tailor software to specific needs. Valid combinations of configuration options are often restricted by intricate constraints. Describing options and constraints in a variability model allows reasoning about the supported configurations. To automate creating and verifying such models, we need to identify the origin of such constraints. We propose a static analysis approach, based on two rules, to extract configuration constraints from code. We apply it on four highly configurable systems to evaluate the accuracy of our approach and to determine which constraints are recoverable from the code. We find that our approach is highly accurate (93% and 77% respectively) and that we can recover 28% of existing constraints. We complement our approach with a qualitative study to identify constraint sources, triangulating results from our automatic extraction, manual inspections, and interviews with 27 developers. We find that, apart from low-level implementation dependencies, configuration constraints enforce correct runtime behavior, improve users' configuration experience, and prevent corner cases. While the majority of constraints is extractable from code, our results indicate that creating a complete model requires further substantial domain knowledge and testing. Our results aim at supporting researchers and practitioners working on variability model engineering, evolution, and verification techniques.
C1 [Nadi, Sarah] Tech Univ Darmstadt, Dept Comp Sci, Darmstadt, Hessen, Germany.
   [Berger, Thorsten; Czarnecki, Krzysztof] Univ Waterloo, Dept Elect & Comp Engn, Waterloo, ON N2L 3G1, Canada.
   [Kaestner, Christian] Carnegie Mellon Univ, Sch Comp Sci, Pittsburgh, PA 15213 USA.
C3 Technical University of Darmstadt; University of Waterloo; Carnegie
   Mellon University
RP Nadi, S (corresponding author), Tech Univ Darmstadt, Dept Comp Sci, Darmstadt, Hessen, Germany.
EM nadi@st.informatik.tu-darmstadt.de; tberger@gsd.uwaterloo.ca;
   kczarnec@gsd.uwaterloo.ca; kaestner@cs.cmu.edu
OI Kastner, Christian/0000-0002-4450-4572
FU NSERC [CGS-D2-425005]; ARTEMIS JU [295397 VARIES]; Ontario Research Fund
   (ORF) Project on Software Certification; NSF [CCF-1318808]; Division of
   Computing and Communication Foundations; Direct For Computer & Info Scie
   & Enginr [1318808] Funding Source: National Science Foundation
FX The authors would like to thank all the developers who participated in
   our study. This work has been partly supported by NSERC CGS-D2-425005,
   ARTEMIS JU grant no. 295397 VARIES, Ontario Research Fund (ORF) Project
   on Software Certification, and NSF grant CCF-1318808. Sarah Nadi is the
   corresponding author.
CR ACHER M., 2012, P 6 INT WORKSH VAR M, P45, DOI DOI 10.1145/2110147.2110153
   Angerer F, 2014, 18TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE (SPLC 2014), VOL 1, P52, DOI 10.1145/2648511.2648517
   [Anonymous], 2000, Generative programming: methods, tools, and applications
   Aversano L, 2002, SCAM 2002: SECOND IEEE INTERNATIONAL WORKSHOP ON SOURCE CODE ANALYSIS MANIPULATION, PROCEEDINGS, P83, DOI 10.1109/SCAM.2002.1134108
   Baxter ID, 2001, EIGHTH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P281, DOI 10.1109/WCRE.2001.957833
   Bayer J, 1999, LECT NOTES COMPUT SC, V1687, P446, DOI 10.1145/318774.319262
   Benavides D, 2010, INFORM SYST, V35, P615, DOI 10.1016/j.is.2010.01.001
   Berger T., 2010, Feature-to-code mapping in two large product lines
   Berger T., 2010, P INT C AUT SOFTW EN, P73, DOI DOI 10.1145/1858996.1859010
   Berger T, 2014, LECT NOTES COMPUT SC, V8767, P302, DOI 10.1007/978-3-319-11653-2_19
   Berger T, 2013, IEEE T SOFTWARE ENG, V39, P1611, DOI 10.1109/TSE.2013.34
   Berger Thorsten, 2010, FORMAL SEMANTICS CDL
   Berger Thorsten, 2013, 7 INT WORKSH VAR MOD, DOI DOI 10.1145/2430502.2430513
   Bergey J., 2000, CMUSEI2000TN008
   Bodden E, 2013, ACM SIGPLAN NOTICES, V48, P355, DOI 10.1145/2499370.2491976
   Brabrand C., 2012, Proceedings of the 11th Annual International Conference on Aspect-oriented Software Development, AOSD '12, P13, DOI DOI 10.1145/2162049.2162052
   Corbin J., 2008, QUAL RES, DOI DOI 10.4135/9781452230153.N10
   Czarnecki K., 2006, GPCE, P211
   Davril Jean-Marc., 2013, JOINT M EUR SOFTW EN, P290, DOI DOI 10.1145/2491411.2491455
   Devos N, 2012, PROC INT CONF SOFTW, P1123, DOI 10.1109/ICSE.2012.6227107
   Dhungana D, 2011, AUTOMAT SOFTW ENG, V18, P77, DOI 10.1007/s10515-010-0076-6
   Duc Minh Le, 2013, Safe and Secure Software Reuse. 13th International Conference on Software Reuse, ICSR 2013. Proceedings: LNCS 7925, P1, DOI 10.1007/978-3-642-38977-1_1
   Eisenbarth T, 2002, PROC IEEE INT CONF S, P273, DOI 10.1109/ICSM.2002.1167778
   Ernst MD, 2002, IEEE T SOFTWARE ENG, V28, P1146, DOI 10.1109/TSE.2002.1158288
   Ganesan Dharmalingam., 2009, SPLC, P161
   Hariri N, 2013, IEEE T SOFTWARE ENG, V39, P1736, DOI 10.1109/TSE.2013.39
   Hinman P, 2005, FUNDAMENTAL MATH LOG
   Hubaux A., 2012, 6 INT WORKSHOP VARIA, P149
   Nguyen HV, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P907, DOI 10.1145/2568225.2568300
   Hunsen C., 2015, EMPIRICAL SOFTW ENG
   Jepsen HansPeter., 2009, Proc. of the International Software Product Line Conference (SPLC'09), P101
   Kästner C, 2012, ACM SIGPLAN NOTICES, V47, P773, DOI 10.1145/2398857.2384673
   Kästner C, 2012, ACM T SOFTW ENG METH, V21, DOI 10.1145/2211616.2211617
   Kästner C, 2011, ACM SIGPLAN NOTICES, V46, P805, DOI 10.1145/2076021.2048128
   Kang Kyo C, 1990, Technical Report
   Liebig J., 2013, P 2013 9 JOINT M FDN, P81, DOI DOI 10.1145/2491411.2491437
   Liebig Jorg, 2010, P 32 ACM IEEE INT C, V1, P105
   Lillack Max, 2014, Proceedings of the 29th ACM/IEEE International Conference on Automated Software Engineering, P445, DOI 10.1145/2642937.2643001
   Lotufo R, 2010, LECT NOTES COMPUT SC, V6287, P136, DOI 10.1007/978-3-642-15579-6_10
   Metzger A, 2007, INT REQUIR ENG CONF, P243, DOI 10.1109/RE.2007.61
   Nadi S, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P140, DOI 10.1145/2568225.2568283
   Nadi S, 2014, J SOFTW-EVOL PROC, V26, P730, DOI 10.1002/smr.1595
   Nadi S, 2012, EUR CON SFTWR MTNCE, P107, DOI 10.1109/CSMR.2012.21
   Nie CH, 2011, ACM COMPUT SURV, V43, DOI 10.1145/1883612.1883618
   Padioleau Y, 2009, LECT NOTES COMPUT SC, V5501, P109, DOI 10.1007/978-3-642-00722-4_9
   Passos L., 2013, Proc. of the 17th Software Product Line Conference (SPLC), P91
   Passos L., 2011, P INT SOFTW PROD LIN
   Pearse TT, 1997, INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE, PROCEEDINGS, P270, DOI 10.1109/ICSM.1997.624254
   Rabkin A., 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P193, DOI 10.1109/ASE.2011.6100053
   Rabkin A, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P131, DOI 10.1145/1985793.1985812
   Reisner E., 2010, P ACM IEEE INT C SOF, V1, P445, DOI DOI 10.1145/1806799.1806864
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   She S., 2010, VaMoS, P45
   She S, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P461, DOI 10.1145/1985793.1985856
   She Steven, 2010, FORMAL SEMANTICS KCO
   Sincero J., 2007, P INT WORKSH OP SOUR, P22
   Sincero R., 2010, P 9 INT C GEN PROGR, P33
   Stoermer C, 2001, WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE, PROCEEDINGS, P35, DOI 10.1109/WICSA.2001.948405
   Tamrawi A, 2012, PROC INT CONF SOFTW, P650, DOI 10.1109/ICSE.2012.6227152
   Tartler R, 2011, EUROSYS 11: PROCEEDINGS OF THE EUROSYS 2011 CONFERENCE, P47
   Thaker Sahil., 2007, P 6 INT C GENERATIVE, P95
   Thüm T, 2014, ACM COMPUT SURV, V47, DOI 10.1145/2580950
   Thüm T, 2009, PROC INT CONF SOFTW, P254, DOI 10.1109/ICSE.2009.5070526
   Thum T., 2012, FIN0042012 U MAGD SC
   VEER B, 2001, ECOS COMPONENT WRITE
   von Rhein A., 2015, P INT C SOFTW ENG
   Wang HJ, 2004, USENIX Association Proceedings of the Sixth Symposium on Operating Systems Design and Implementation (OSDE '04), P245
   White J, 2008, SPLC 2008: 12TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE, PROCEEDINGS, P225, DOI 10.1109/SPLC.2008.16
   Xiong YF, 2012, PROC INT CONF SOFTW, P58, DOI 10.1109/ICSE.2012.6227206
   Xu TY, 2013, SOSP'13: PROCEEDINGS OF THE TWENTY-FOURTH ACM SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES, P244, DOI 10.1145/2517349.2522727
   Ya-Yunn Su, 2007, Operating Systems Review, V41, P237, DOI 10.1145/1323293.1294284
   Yin ZN, 2011, SOSP 11: PROCEEDINGS OF THE TWENTY-THIRD ACM SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES, P159
   Zhang S, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P152, DOI 10.1145/2568225.2568251
   Zhang S, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P312, DOI 10.1109/ICSE.2013.6606577
   Zhou S., 2015, P INT WORKSH REL ENG
NR 75
TC 59
Z9 64
U1 0
U2 3
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD AUG
PY 2015
VL 41
IS 8
BP 820
EP 841
DI 10.1109/TSE.2015.2415793
PG 22
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA CP0KI
UT WOS:000359563800006
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Araujo, W
   Briand, LC
   Labiche, Y
AF Araujo, Wladimir
   Briand, Lionel C.
   Labiche, Yvan
TI On the Effectiveness of Contracts as Test Oracles in the Detection and
   Diagnosis of Functional Faults in Concurrent Object-Oriented Software
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Software/Program Verification-Programming by contract; Software
   Quality/SQA-Measurement applied to SQA and V&V; Concurrent programming;
   object-oriented programming
ID SPECIFICATION; VERIFICATION; IMPROVE; DESIGN
AB Design by contract (DbC) is a software development methodology that focuses on clearly defining the interfaces between components to produce better quality object-oriented software. Though there exists ample support for DbC for sequential programs, applying DbC to concurrent programs presents several challenges. Using Java as the target programming language, we tackle such challenges by augmenting the Java Modelling Language (JML) and modifying the JML compiler (jmlc) to generate runtime assertion checking code to support DbC in concurrent programs. We applied our solution in a carefully designed case study on a highly concurrent industrial software system from the telecommunications domain to assess the effectiveness of contracts as test oracles in detecting and diagnosing functional faults in concurrent software. Based on these results, clear and objective requirements are defined for contracts to be effective test oracles for concurrent programs whilst balancing the effort to design them. Effort is measured indirectly through the contract complexity measure (CCM), a measure we define. Main results include that contracts of a realistic level of completeness and complexity can detect around 76 percent of faults and reduce the diagnosis effort for such faults tenfold. We, therefore, show that DbC can be applied to concurrent software and can be a valuable tool to improve the economics of software engineering.
C1 [Araujo, Wladimir] Juniper Networks, Sunnyvale, CA 94089 USA.
   [Briand, Lionel C.] Univ Luxembourg, SnT Ctr, L-1359 Luxembourg, Luxembourg.
   [Labiche, Yvan] Carleton Univ, Dept Syst & Comp Engn, Ottawa, ON K1S 5B6, Canada.
C3 Juniper Networks; University of Luxembourg; Carleton University
RP Araujo, W (corresponding author), Juniper Networks, 1194 N Mathilda Ave, Sunnyvale, CA 94089 USA.
EM waraujo@juniper.net; lionel.briand@uni.lu; labiche@sce.carleton.ca
OI Labiche, Yvan/0000-0001-8880-4836
FU Juniper Networks; Luxembourg's National Research Fund (FNR)
   [FNR/P10/03]; NSERC
FX This research was partly supported by Juniper Networks. The authors are
   extremely grateful for the support received not only through equipment
   time and funding but also the permission to publicize the results.
   Lionel Briand was also supported by Luxembourg's National Research Fund
   (FNR) under grant number FNR/P10/03. Yvan Labiche was also supported by
   a NSERC Discovery Grant. We are also thankful to the JML community for
   the many fruitful discussions and the great software you produced.
   Special thanks to Gary Leavens and Clement Hurlin for the extensive
   discussions about JML and concurrency, which helped clarify fundamental
   points in this work.
CR Agarwal R., 2005, ASE, P233
   AMERICA P, 1987, LECT NOTES COMPUT SC, V276, P234
   America P., 1990, REX WORKSH, P60
   [Anonymous], 1990, Software testing techniques {
   Araujo Wladimir, 2008, 2008 IEEE International Symposium on Software Reliability Engineering, P37, DOI 10.1109/ISSRE.2008.9
   Araujo W., 2010, THESIS CARLETON U OT
   Araujo W, 2011, INT SYMP EMP SOFTWAR, P10, DOI 10.1109/ESEM.2011.9
   Araujo W, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P786, DOI 10.1145/1985793.1985903
   Arnold K., 2000, The Java Programming Language, V3rd ed
   Arslan V, 2006, LECT NOTES COMPUT SC, V4028, P82
   Baudry B, 2000, SEVENTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM - METRICS 2001, PROCEEDINGS, P272, DOI 10.1109/METRIC.2001.915535
   Baudry B, 2000, 11TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P4, DOI 10.1109/ISSRE.2000.885856
   Briand L. C., 2002, Software Engineering Notes, V27, P70, DOI 10.1145/566171.566183
   Briand LC, 2003, SOFTWARE PRACT EXPER, V33, P637, DOI 10.1002/spe.520
   Briand LC, 1996, IEEE T SOFTWARE ENG, V22, P68, DOI 10.1109/32.481535
   CHEON Y, 2003, 0309 IOW STAT U DEP
   Cheon Y., 2002, Proc. Software Engineering Research and Practice, P322
   Dhara KK, 1996, PROC INT CONF SOFTW, P258, DOI 10.1109/ICSE.1996.493421
   Flanagan C, 2004, ACM SIGPLAN NOTICES, V39, P256, DOI 10.1145/982962.964023
   Hierons RM, 2009, ACM COMPUT SURV, V41, DOI 10.1145/1459352.1459354
   Jacobs B, 2005, SEFM 2005: THIRD IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING AND FORMAL METHODS, PROCEEDINGS, P137, DOI 10.1109/SEFM.2005.39
   Le Traon Y, 2006, IEEE T SOFTWARE ENG, V32, P571, DOI 10.1109/TSE.2006.79
   Leavens G.T., 2009, JML Reference Manual
   LEAVENS G. T, 2006, 0620B IOW STAT U DEP
   Leavens GT, 2006, LECT NOTES COMPUT SC, V4260, P2
   Leavens Gary T, 2006, SIGSOFT Softw. Eng. Notes, V31, P1, DOI [10.1145/1127878.1127884, DOI 10.1145/1127878.1127884]
   LEAVENS GT, 1995, ACTA INFORM, V32, P705, DOI 10.1007/BF01178658
   LISKOV BH, 1994, ACM T PROGR LANG SYS, V16, P1811, DOI 10.1145/197320.197383
   McCabe T. J., 1976, IEEE Transactions on Software Engineering, VSE-2, P308, DOI 10.1109/TSE.1976.233837
   MEYER B, 1992, COMPUTER, V25, P40, DOI 10.1109/2.161279
   Müller P, 2006, SCI COMPUT PROGRAM, V62, P253, DOI 10.1016/j.scico.2006.03.001
   Nienaltowski P, 2009, FORM ASP COMPUT, V21, P305, DOI 10.1007/s00165-007-0063-2
   Park S, 2010, 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING & KNOWLEDGE ENGINEERING (SEKE 2010), P645
   Polikarpova N, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P262, DOI 10.1109/ICSE.2013.6606572
   Raghavan A. D., 2000, 0003E IOW STAT U
   Rodríguez E, 2005, LECT NOTES COMPUT SC, V3586, P551
   Staats M, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P391, DOI 10.1145/1985793.1985847
   Weikum G., 2002, T INFORM SYSTEMS THE
   Weyuker E. J., 1988, Proceedings of the Second Workshop on Software Testing, Verification, and Analysis (Cat. No.88TH0225-3), P188, DOI 10.1109/WST.1988.5374
NR 39
TC 6
Z9 6
U1 0
U2 12
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD OCT
PY 2014
VL 40
IS 10
BP 971
EP 992
DI 10.1109/TSE.2014.2339829
PG 22
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA AR9ML
UT WOS:000343899100003
DA 2024-07-18
ER

PT J
AU Cooray, D
   Kouroshfar, E
   Malek, S
   Roshandel, R
AF Cooray, Deshan
   Kouroshfar, Ehsan
   Malek, Sam
   Roshandel, Roshanak
TI Proactive Self-Adaptation for Improving the Reliability of
   Mission-Critical, Embedded, and Mobile Software
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Context awareness; software architecture; self-adaptive systems;
   reliability; mobility
ID MIDDLEWARE
AB Embedded and mobile software systems are marked with a high degree of unpredictability and dynamism in the execution context. At the same time, such systems are often mission-critical, meaning that they need to satisfy strict reliability requirements. Most current software reliability analysis approaches are not suitable for these types of software systems, as they do not take the changes in the execution context of the system into account. We propose an approach geared to such systems which continuously furnishes refined reliability predictions at runtime by incorporating various sources of information, including the execution context of the system. The reliability predictions are leveraged to proactively place the software in the (near-)optimal configuration with respect to changing conditions. Our approach considers two representative architectural reconfiguration decisions that impact the system's reliability: reallocation of components to processes and changing the number of component replicas. We have realized the approach as part of a framework intended for mission-critical settings, called REsilient SItuated SofTware system (RESIST), and evaluated it using a mobile emergency response system.
C1 [Cooray, Deshan] VeriSign Inc, Reston, VA 20190 USA.
   [Kouroshfar, Ehsan; Malek, Sam] George Mason Univ, Dept Comp Sci, Fairfax, VA 22030 USA.
   [Roshandel, Roshanak] Seattle Univ, Dept Comp Sci & Software Engn, Seattle, WA 98122 USA.
C3 George Mason University; Seattle University
RP Cooray, D (corresponding author), VeriSign Inc, Reston, VA 20190 USA.
EM dcooray@gmu.edu; ekourosh@gmu.edu; smalek@gmu.edu; roshanak@seattleu.edu
FU US National Science Foundation [CCF-1252644, CCF-1217503, CCF-0937472];
   US Defense Advanced Research Projects Agency [D11AP00282]; US Army
   Research Office [W911NF-09-1-0273]; Direct For Computer & Info Scie &
   Enginr; Division of Computing and Communication Foundations [1252644,
   1217503] Funding Source: National Science Foundation
FX The authors wish to thank David Kilgore for his work on RESIST's tool
   support. This work was partially supported by grants CCF-1252644,
   CCF-1217503, and CCF-0937472 from the US National Science Foundation,
   grant D11AP00282 from the US Defense Advanced Research Projects Agency,
   and award W911NF-09-1-0273 from the US Army Research Office.
CR Abowd G., 1999, P INT S HANDH UB COM
   Bastarrica M.C., 1998, P INT C PRINC DISTR
   Chan ATS, 2003, IEEE T SOFTWARE ENG, V29, P1072, DOI 10.1109/TSE.2003.1265522
   Cheng B., 2009, SOFTWARE ENG SELF AD
   Cheung L., 2008, P INT C SOFTW ENG IC
   CHEUNG RC, 1980, IEEE T SOFTWARE ENG, V6, P118, DOI 10.1109/TSE.1980.234477
   Cooray D., 2010, P IEEE ACM 25 INT C
   Edwards G., 2007, P INT C FUND APPR SO
   Epifani I., 2009, P INT C SOFTW ENG IC
   Esfahani N., 2009, P INT C MOD DRIV ENG
   Garlan D, 2004, COMPUTER, V37, P46, DOI 10.1109/MC.2004.175
   Garlan David, 2010, SEI Series in Software Engineering, Vsecond
   Gokhale SS, 2007, IEEE T DEPEND SECURE, V4, P32, DOI 10.1109/TDSC.2007.4
   Goseva-Popstojanova K, 2003, IEEE T SOFTWARE ENG, V29, P946, DOI 10.1109/TSE.2003.1237174
   Goseva-Popstojanova K, 2003, COMPUT MATH APPL, V46, P1023, DOI [10.1016/S0898-1221(03)90116-7, 10.1016/S0898-1221(03)00307-9]
   Immonen A, 2008, SOFTW SYST MODEL, V7, P49, DOI 10.1007/s10270-006-0040-x
   Kephart JO, 2007, IEEE INTERNET COMPUT, V11, P40, DOI 10.1109/MIC.2007.2
   KNIGHT JC, 1986, IEEE T SOFTWARE ENG, V12, P96, DOI 10.1109/TSE.1986.6312924
   KRAMER J, 1990, IEEE T SOFTWARE ENG, V16, P1293, DOI 10.1109/32.60317
   Kramer J., 2007, P INT C SOFTW ENG IC
   Krishnamurthy S., 1997, P INT S SOFTW REL EN
   Malek S, 2005, IEEE T SOFTWARE ENG, V31, P256, DOI 10.1109/TSE.2005.29
   Malek S., 2009, P INT C SOFTW ENG IC
   Malek S, 2012, IEEE T SOFTWARE ENG, V38, P73, DOI 10.1109/TSE.2011.3
   Malek S, 2010, J SYST SOFTWARE, V83, P972, DOI 10.1016/j.jss.2009.11.003
   Markides L., 2010, P INT S SOFTW REL EN
   Mascolo C, 2002, WIRELESS PERS COMMUN, V21, P77, DOI 10.1023/A:1015584805733
   Medvidovic N., 2003, ARCHITECTING DEPENDA
   Menasce D.A., 2010, P JOINT WOSP SIPEW I
   MURPHY A, 2001, P INT C DISTR COMP S
   OREIZY P, 1998, P INT C SOFTW ENG IC
   Perry D. E., 1992, SIGSOFT Software Engineering Notes, V17, P40, DOI 10.1145/141874.141884
   Pham H., 2000, SOFTWARE RELIABILITY
   PINEDO M, 1987, OPER RES, V35, P884, DOI 10.1287/opre.35.6.884
   Popentiu F., 1999, P EUR SAF REL C SEPT
   RABINER LR, 1989, P IEEE, V77, P257, DOI 10.1109/5.18626
   Reussner RH, 2003, J SYST SOFTWARE, V66, P241, DOI 10.1016/S0164-1212(02)00080-8
   Rodrigues G., 2005, P INT C FUND APPR SO
   Roshandel R., 2007, P INT C QUAL SOFTW A
   Schilit B., 1994, P INT WORKSH MOB COM
   Seraji H, 2002, IEEE T ROBOTIC AUTOM, V18, P308, DOI 10.1109/TRA.2002.1019461
   Shaw M., 1996, SOFTWARE ARCHITECTUR
   SINGH H, 2001, P INT S SOFTW REL EN
   Sousa J., 2002, P INT WORK C SOFTW A
   Sousa J. P., 2008, P INT C SOFTW DAT TE
   Stewart W.J., 1994, Introduction to the Numerical Solution of Markov Chains
   Taylor H. M., 1998, INTRO STOCHASTIC MOD
   Wang WL, 2006, J SYST SOFTWARE, V79, P132, DOI 10.1016/j.jss.2005.09.004
   WANG WL, 2006, INFOCOMP J COMPUTER, V5, P9
NR 49
TC 17
Z9 20
U1 0
U2 22
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD DEC
PY 2013
VL 39
IS 12
BP 1714
EP 1735
DI 10.1109/TSE.2013.36
PG 22
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 260PO
UT WOS:000327607000006
DA 2024-07-18
ER

PT J
AU Grbac, TG
   Runeson, P
   Huljenic, D
AF Grbac, Tihana Galinac
   Runeson, Per
   Huljenic, Darko
TI A Second Replicated Quantitative Analysis of Fault Distributions in
   Complex Software Systems
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Software fault distributions; software metrics; empirical research;
   replication
ID PREDICTION; SIZE
AB Background: Software engineering is searching for general principles that apply across contexts, for example, to help guide software quality assurance. Fenton and Ohlsson presented such observations on fault distributions, which have been replicated once. Objectives: We aimed to replicate their study again to assess the robustness of the findings in a new environment, five years later. Method: We conducted a literal replication, collecting defect data from five consecutive releases of a large software system in the telecommunications domain, and conducted the same analysis as in the original study. Results: The replication confirms results on unevenly distributed faults over modules, and that fault proneness distributions persist over test phases. Size measures are not useful as predictors of fault proneness, while fault densities are of the same order of magnitude across releases and contexts. Conclusions: This replication confirms that the uneven distribution of defects motivates uneven distribution of quality assurance efforts, although predictors for such distribution of efforts are not sufficiently precise.
C1 [Grbac, Tihana Galinac] Univ Rijeka, Fac Engn, Rijeka 51000, Croatia.
   [Runeson, Per] Lund Univ, Dept Comp Sci, S-22100 Lund, Sweden.
   [Huljenic, Darko] Ericsson Nikola Tesla, Zagreb 10000, Croatia.
C3 University of Rijeka; Lund University; Ericsson
RP Grbac, TG (corresponding author), Univ Rijeka, Fac Engn, Vukovarska 58, Rijeka 51000, Croatia.
EM tihana.galinac@riteh.hr; per.runeson@cs.lth.se;
   darko.huljenic@ericsson.com
RI Galinac Grbac, Tihana/D-7048-2016; Grbac, Tihana Galinac/AAU-8704-2021;
   Runeson, Per/H-5113-2019; Grbac, Tihana Galinac/K-2439-2019; Huljenic,
   Darko/ADM-2763-2022
OI Galinac Grbac, Tihana/0000-0002-4351-4082; Runeson,
   Per/0000-0003-2795-4851; 
CR Andersson C., 2007, Software Process Improvement and Practice, V12, P125, DOI 10.1002/spip.311
   Andersson C, 2007, IEEE T SOFTWARE ENG, V33, P273, DOI 10.1109/TSE.2007.1005
   [Anonymous], 2010, P 2010 ACM IEEE INT, DOI DOI 10.1145/1852786.1852814
   [Anonymous], 2012, CASE STUDY RES SOFTW, DOI DOI 10.1002/9781118181034
   [Anonymous], 2010, PROC ACMIEEE INT S E
   [Anonymous], P 3 INT WORKSH PRED
   BASILI VR, 1984, COMMUN ACM, V27, P42, DOI 10.1145/69605.2085
   Chhillar R. S., 2011, SIGSOFT SOFTW ENG NO, V36, P1
   COMPTON BT, 1990, J SYST SOFTWARE, V12, P199, DOI 10.1016/0164-1212(90)90040-S
   D'Ambros M, 2012, EMPIR SOFTW ENG, V17, P531, DOI 10.1007/s10664-011-9173-9
   Denaro G, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P241, DOI 10.1109/ICSE.2002.1007972
   Dinh-Trong TT, 2005, IEEE T SOFTWARE ENG, V31, P481, DOI 10.1109/TSE.2005.73
   El Emam K, 2002, IEEE T SOFTWARE ENG, V28, P494, DOI 10.1109/TSE.2002.1000452
   English M., 2009, P 5 INT C PRED MOD S
   Fenton NE, 2000, IEEE T SOFTWARE ENG, V26, P797, DOI 10.1109/32.879815
   Gomez O., 2010, P ACM IEEE INT S EMP
   Grbac Tihana Galinac, 2011, Product-Focused Software Process Improvement. Proceedings 12th International Conference, PROFES 2011, P113, DOI 10.1007/978-3-642-21843-9_11
   Hatton L, 1997, IEEE SOFTWARE, V14, P89, DOI 10.1109/52.582978
   Juran JM., 1974, Quality Control Handbook
   Juristo N, 2011, EMPIR SOFTW ENG, V16, P295, DOI 10.1007/s10664-010-9141-9
   Kaaniche M, 1996, SEVENTH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P207, DOI 10.1109/ISSRE.1996.558807
   Kitchenham B, 2008, EMPIR SOFTW ENG, V13, P219, DOI 10.1007/s10664-008-9061-0
   Koru AG, 2008, EMPIR SOFTW ENG, V13, P473, DOI 10.1007/s10664-008-9080-x
   Koru AG, 2009, IEEE T SOFTWARE ENG, V35, P293, DOI 10.1109/TSE.2008.90
   Koru G., 2007, 29 INT C SOFTW ENG C, P115, DOI DOI 10.1109/ICSECOMPANION.2007.54
   Lessmann S, 2008, IEEE T SOFTWARE ENG, V34, P485, DOI 10.1109/TSE.2008.35
   Malaiya YK, 2000, 11TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P62, DOI 10.1109/ISSRE.2000.885861
   Menzies T, 2007, IEEE T SOFTWARE ENG, V33, P2, DOI 10.1109/TSE.2007.256941
   Miller J, 2005, INFORM SOFTWARE TECH, V47, P233, DOI 10.1016/j.infsof.2004.08.005
   Mockus A, 2002, ACM T SOFTW ENG METH, V11, P309, DOI 10.1145/567793.567795
   Mohagheghi P, 2008, ACM T SOFTW ENG METH, V17, DOI 10.1145/1363102.1363104
   MUNSON JC, 1992, IEEE T SOFTWARE ENG, V18, P423, DOI 10.1109/32.135775
   Ohlsson N, 1996, IEEE T SOFTWARE ENG, V22, P886, DOI 10.1109/32.553637
   Ostrand T. J., 2002, Software Engineering Notes, V27, P55, DOI 10.1145/566171.566181
   Petersen K, 2009, INT SYMP EMP SOFTWAR, P402
   Pickard LM, 1998, INFORM SOFTWARE TECH, V40, P811, DOI 10.1016/S0950-5849(98)00101-3
   Runeson P., 2001, Product Focused Software Process Improvement. Third International Conference, PROFES 2001. Proceedings (Lecture Notes in Computer Science Vol.2188), P341
   SELBY RW, 1991, IEEE T SOFTWARE ENG, V17, P141, DOI 10.1109/32.67595
   Shull FJ, 2008, EMPIR SOFTW ENG, V13, P211, DOI 10.1007/s10664-008-9060-1
   Turhan B, 2009, EMPIR SOFTW ENG, V14, P540, DOI 10.1007/s10664-008-9103-7
   Wu SJ, 2008, ESEM'08: PROCEEDINGS OF THE 2008 ACM-IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, P198
   Zhang H., 2010, P 6 INT C PRED MOD S
   Zimmerman T, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P91, DOI 10.1145/1595696.1595713
NR 43
TC 22
Z9 27
U1 0
U2 11
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD APR
PY 2013
VL 39
IS 4
BP 462
EP 476
DI 10.1109/TSE.2012.46
PG 15
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 112UH
UT WOS:000316618800002
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Cordeiro, L
   Fischer, B
   Marques-Silva, J
AF Cordeiro, Lucas
   Fischer, Bernd
   Marques-Silva, Joao
TI SMT-Based Bounded Model Checking for Embedded ANSI-C Software
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Software engineering; formal methods; verification; model checking
ID ABSTRACTION
AB Propositional bounded model checking has been applied successfully to verify embedded software, but remains limited by increasing propositional formula sizes and the loss of high-level information during the translation preventing potential optimizations to reduce the state space to be explored. These limitations can be overcome by encoding high-level information in theories richer than propositional logic and using SMT solvers for the generated verification conditions. Here, we propose the application of different background theories and SMT solvers to the verification of embedded software written in ANSI-C in order to improve scalability and precision in a completely automatic way. We have modified and extended the encodings from previous SMT-based bounded model checkers to provide more accurate support for variables of finite bit width, bit-vector operations, arrays, structures, unions, and pointers. We have integrated the CVC3, Boolector, and Z3 solvers with the CBMC front-end and evaluated them using both standard software model checking benchmarks and typical embedded software applications from telecommunications, control systems, and medical devices. The experiments show that our ESBMC model checker can analyze larger problems than existing tools and substantially reduce the verification time.
C1 [Cordeiro, Lucas] Univ Fed Amazonas, Elect & Informat Res Ctr, BR-69055490 Manaus, Amazonas, Brazil.
   [Fischer, Bernd] Univ Southampton, Sch Elect & Comp Sci, Southampton SO17 1BJ, Hants, England.
   [Marques-Silva, Joao] Univ Coll Dublin, Complex & Adapt Syst Lab, Sch Comp Sci & Informat, Dublin 4, Ireland.
C3 Universidade Federal de Amazonas; University of Southampton; University
   College Dublin
RP Cordeiro, L (corresponding author), Univ Fed Amazonas, Elect & Informat Res Ctr, Rua Acre 1274,Bairro Parque Dez Novembro, BR-69055490 Manaus, Amazonas, Brazil.
EM lucascordeiro@ufam.edu.br; thefisch@gmail.com; jpms@ucd.ie
RI Marques-Silva, Joao/C-9162-2009; Cordeiro, Lucas/IVV-3044-2023;
   Cordeiro, Lucas Carvalho/AAQ-9258-2021
OI Cordeiro, Lucas Carvalho/0000-0002-6235-4272
FU EPSRC [EP/E012973/1, EP/F052669/1]; EC [ICT/217069, IST/033709]; ORSAS
FX The authors thank D. Kroening, C. Wintersteiger, and L. Platania for
   many helpful discussions about the CBMC and SMT-CBMC model checking
   tools, C. Barrett, R. Brummayer, and L. de Moura for analyzing the VCs,
   and F. Ivancic and M. Chechik for checking the bugs discovered in the
   NECLA and VERISEC suites. They also thank the anonymous reviewers for
   their comments, which helped them to improve the draft version of this
   paper. This research was supported by EPSRC grants EP/E012973/1 (NOTOS)
   and EP/F052669/1 (Cadged Code) and by the EC FP7 grants ICT/217069
   (COCONUT) and IST/033709 (VERTIGO). Lucas Cordeiro was also supported by
   an ORSAS studentship.
CR [Anonymous], 2007, INT C AUTOMATED SOFT
   [Anonymous], 2010, P ACM IEEE 32 INT C, DOI DOI 10.1145/1806799.1806874
   [Anonymous], 2008, J. Satisf. Boolean Model. Comput., DOI 10.3233/sat190039
   [Anonymous], 98991999 ISOIEC
   [Anonymous], 2009, MIBENCH VERSION 1 0
   Armando A, 2006, LECT NOTES COMPUT SC, V3925, P146
   Armando Alessandro, 2009, International Journal on Software Tools for Technology Transfer, V11, P69, DOI 10.1007/s10009-008-0091-0
   Babic D, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P211, DOI 10.1145/1368088.1368118
   Barrett C, 2007, LECT NOTES COMPUT SC, V4590, P298
   Beyer Dirk, 2007, International Journal on Software Tools for Technology Transfer, V9, P505, DOI 10.1007/s10009-007-0044-z
   Biere A, 2009, FRONT ARTIF INTEL AP, V185, P457, DOI 10.3233/978-1-58603-929-5-457
   Bozzano M, 2006, ELECTRON NOTES THEOR, V144, P3, DOI 10.1016/j.entcs.2005.12.001
   Bradley A. R., 2007, The Calculus of Computation
   Brummayer R, 2009, LECT NOTES COMPUT SC, V5505, P174, DOI 10.1007/978-3-642-00768-2_16
   Chechik M., 2011, PARTING FRIENDS
   Clarke E., 2005, International Journal on Software Tools for Technology Transfer, V7, P174, DOI 10.1007/s10009-004-0182-5
   Clarke E, 2004, LECT NOTES COMPUT SC, V2988, P168, DOI 10.1007/978-3-540-24730-2_15
   Clarke E, 2004, FORM METHOD SYST DES, V25, P105, DOI 10.1023/B:FORM.0000040025.89719.f3
   Clarke E, 2004, LECT NOTES COMPUT SC, V2937, P85
   Clarke EdmundM., 2000, Proceedings of the International Conference on Computer Aided Veri cation (CAV), P154, DOI 10.1007/1072216715
   Cook B, 2006, LECT NOTES COMPUT SC, V4144, P415, DOI 10.1007/11817963_37
   Cordeiro L., 2010, 2010 32nd International Conference on Software Engineering (ICSE), P373, DOI 10.1145/1810295.1810396
   Cordeiro Lucas, 2010, Proceedings of the 2010 17th IEEE International Conference and Workshops on Engineering of Computer-Based Systems (ECBS 2010), P160, DOI 10.1109/ECBS.2010.24
   Cordeiro L, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P331, DOI 10.1145/1985793.1985839
   Cordeiro L, 2009, IEEE INT CONF AUTOM, P137, DOI 10.1109/ASE.2009.63
   de Moura L., 2002, Automated Deduction - CADE-18. 18th International Conference on Automated Deduction. Proceedings (Lecture Notes in Artificial Intelligence Vol.2392), P438
   de Moura L, 2008, LECT NOTES COMPUT SC, V4963, P337, DOI 10.1007/978-3-540-78800-3_24
   de Moura L, 2009, LECT NOTES COMPUT SC, V5902, P23, DOI 10.1007/978-3-642-10452-7_3
   Detlefs D, 2005, J ACM, V52, P365, DOI 10.1145/1066100.1066102
   Donaldson AF, 2010, LECT NOTES COMPUT SC, V6015, P280, DOI 10.1007/978-3-642-12002-2_24
   Ermedahl A., 2009, WORST CASE EXECUTION
   Flanagan C, 2002, ACM SIGPLAN NOTICES, V37, P234, DOI 10.1145/543552.512558
   Ganai MK, 2008, DES AUT TEST EUROPE, P710
   Ganai MalayK., 2006, P 2006 IEEEACM INT C, P794
   Gries D., 1980, ACM Transactions on Programming Languages and Systems, V2, P564, DOI 10.1145/357114.357119
   Gupta S., 2009, HIGH LEVEL SYNTHESIS
   Ivancic F., 2011, PARTING FRIENDS
   Jackson P.B., 2007, AFM 07, P60
   Jackson P.B., 2009, 20041068 USGS
   Jhala R, 2009, ACM COMPUT SURV, V41, DOI 10.1145/1592434.1592438
   Kroening D., 2009, CBMC 3 3 RELEASED PR
   Kroening D., 2003, CMUCS03126
   Kroening D, 2007, IEEE IC CAD, P572, DOI 10.1109/ICCAD.2007.4397326
   Kroening D, 2008, TEXTS THEOR COMPUT S, P1
   Lim S.-S., 2009, SEOUL NATL U REAL TI
   McCarthy John., 1962, IFIP C, P21
   McMillan KL, 2003, LECT NOTES COMPUT SC, V2725, P1
   Morse J., 2011, KERBEROS GIT
   Muchnick S., 1997, ADV COMPILER DESIGN
   NXP, 2009, HIGH DEF IP HYBR DTV
   Ostrand T., 2010, SIEMENS CORPORATE RE
   Platania L., 2009, EUREKA BENCHMARK SUI
   Podelski A, 2007, LECT NOTES COMPUT SC, V4354, P245
   Ramanathan M., 2010, FLEX
   Sankaranarayanan S., 2009, NECLA STATIC ANAL BE
   Scott J., 1998, International Symposium on Computer Architecture Power Driven Microarchitecture Workshop, P145
   Sites R.L., 1974, 20041068 USGS
   SMT-LIB, 2009, SAT MOD THEOR LIB
   Stump A., 2010, SATISFIABILITY MODUL
   Tanenbaum A.S., 2002, COMPUT NETW, VFourth
   Vinh N.L., 2010, FLASHER MANAGER APPL
   Wintersteiger C., 2009, COMPILING GOTO PROGR
   Xie YC, 2005, ACM SIGPLAN NOTICES, V40, P351, DOI 10.1145/1047659.1040334
   Xu L, 2008, INT CONF QUAL SOFTW, P120, DOI 10.1109/QSIC.2008.10
NR 64
TC 90
Z9 102
U1 1
U2 18
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUL-AUG
PY 2012
VL 38
IS 4
BP 957
EP 974
DI 10.1109/TSE.2011.59
PG 18
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 983LE
UT WOS:000307120000014
OA Green Submitted, Green Accepted
DA 2024-07-18
ER

PT J
AU Sarma, A
   Redmiles, DF
   van der Hoek, A
AF Sarma, Anita
   Redmiles, David F.
   van der Hoek, Andre
TI Palantir: Early Detection of Development Conflicts Arising from Parallel
   Code Changes
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Software engineering; computer-supported collaborative work; programmer
   workbench; configuration management
ID SOFTWARE; COORDINATION; AWARENESS
AB The earlier a conflict is detected, the easier it is to resolve-this is the main precept of workspace awareness. Workspace awareness seeks to provide users with information of relevant ongoing parallel changes occurring in private workspaces, thereby enabling the early detection and resolution of potential conflicts. The key approach is to unobtrusively inform developers of potential conflicts arising because of concurrent changes to the same file and dependency violations in ongoing parallel work. This paper describes our research goals, approach, and implementation of workspace awareness through Palantir and includes a comprehensive evaluation involving two laboratory experiments. We present both quantitative and qualitative results from the experiments, which demonstrate that the use of Palantir, as compared to not using Palantir 1) leads to both earlier detection and earlier resolution of a larger number of conflicts, 2) leaves fewer conflicts unresolved in the code base that was ultimately checked in, and 3) involves reasonable overhead. Furthermore, we report on interesting changes in users' behavior, especially how conflict resolution strategies changed among Palantir users.
C1 [Sarma, Anita] Univ Nebraska, Dept Comp Sci & Engn, Lincoln, NE 68588 USA.
   [Redmiles, David F.; van der Hoek, Andre] Univ Calif Irvine, Dept Informat, Donald Bren Sch Informat & Comp Sci, Irvine, CA 92697 USA.
C3 University of Nebraska System; University of Nebraska Lincoln;
   University of California System; University of California Irvine
RP Sarma, A (corresponding author), Univ Nebraska, Dept Comp Sci & Engn, 256 Avery Hall, Lincoln, NE 68588 USA.
EM asarma@cse.unl.edu; redmiles@ics.uci.edu; andre@ics.uci.edu
OI Sarma, Anita/0000-0002-1859-1692
FU US National Science Foundation (NSF) [CCR-0093489, IIS-0205724,
   IIS-0534775, IIS-0414698, IIS-1111446, IIS-0808783]; IBM Eclipse
   Innovation grants; IBM Technology Fellowship; Direct For Computer & Info
   Scie & Enginr [0943262] Funding Source: National Science Foundation; Div
   Of Information & Intelligent Systems [0943262] Funding Source: National
   Science Foundation; Div Of Information & Intelligent Systems; Direct For
   Computer & Info Scie & Enginr [1111446] Funding Source: National Science
   Foundation
FX The authors thank Gerald Bortis, Peggy Lin, Zahra Noroozi, Roger Ripley,
   Ryan Yasui for their contributions to the Palantir project. Effort
   partially funded by the US National Science Foundation (NSF) under grant
   numbers CCR-0093489, IIS-0205724, IIS-0534775, IIS-0414698, IIS-1111446,
   and IIS-0808783. Effort also supported by an IBM Eclipse Innovation
   grants and an IBM Technology Fellowship.
CR [Anonymous], 1992, Proceedings of the 1992 ACM Conference on Computer Supported Cooperative Work (CSCW'92), DOI DOI 10.1145/143457.143468
   [Anonymous], 2012, SUBCL ECL TEAM PROV
   Apache, 2012, GOOGL WAV
   Appelt W, 1999, LECT NOTES COMPUT SC, V1725, P66
   Asklund U., 2001, P SCM 10 10 INT WORK, P27
   Berliner B., 1990, Proceedings of the Winter 1990 USENIX Conference, P341
   Biehl JT, 2007, CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, VOLS 1 AND 2, P1313
   Bradner Erin., 2002, Proceedings of the 2002 ACM conference on Computer supported cooperative work, CSCW '02, P226
   Cataldo M, 2008, CSCW: 2008 ACM CONFERENCE ON COMPUTER SUPPORTED COOPERATIVE WORK, CONFERENCE PROCEEDINGS, P579
   Cataldo Marcelo, 2006, P 2006 20 ANNIVERSAR, P353, DOI DOI 10.1145/1180875.1180929
   Conradi R, 1998, ACM COMPUT SURV, V30, P232, DOI 10.1145/280277.280280
   CURTIS B, 1988, COMMUN ACM, V31, P1268, DOI 10.1145/50087.50089
   Dart S., 1991, Proceedings of the 3rd International Workshop on Software Configuration Management, P1, DOI 10.1145/111062.111063
   de Souza C.R.B., 2004, P INT S FDN SOFTW EN, P22
   de Souza CRB, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P241, DOI 10.1145/1368088.1368122
   de Souza Cleidson R. B., 2003, P 2003 INT ACM SIGGR, P105, DOI DOI 10.1145/958160.958177
   DEWAN P, 1992, ACM T INFORM SYST, V10, P345, DOI 10.1145/146486.146495
   Dewan P, 2007, ECSCW 2007: PROCEEDINGS OF THE 10TH EUROPEAN CONFERENCE ON COMPUTER-SUPPORTED COOPERATIVE WORK, P159, DOI 10.1007/978-1-84800-031-5_9
   Eclipse.org, 2012, CVS SUPP
   Estublier J., 2005, Proc. 12th Int'l Workshop Software Configuration Management (SCM 05), P69
   Fitzpatrick G., 2002, Computer Supported Cooperative Work: The Journal of Collaborative Computing, V11, P447, DOI 10.1023/A:1021226206564
   Glasser A.L., 1978, P SOFTWARE QUALITY A, P122
   Grinter R. E., 1996, Computer Supported Cooperative Work (CSCW), V5, P447, DOI 10.1007/BF00136714
   Grinter R. E., 1998, ACM 1998 Conference on Computer Supported Cooperative Work. Proceedings. CSCW 98, P393, DOI 10.1145/289444.289514
   Guimaraes ML, 2010, 2010 ICSE WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING (CHASE 2010), P56
   Gutwin C., 2004, Computer Supported Cooperative Work Conference Proceedings, P72, DOI 10.1145/1031607.1031621
   Gutwin C, 1996, Proceedings of Human Factors in Computing Systems (CHI), P208
   Heath C., 1992, Computer Supported Cooperative Work (CSCW), V1, P69, DOI 10.1007/BF00752451
   Herbsleb J. D., 2000, CSCW 2000. ACM 2000 Conference on Computer Supported Cooperative Work, P319, DOI 10.1145/358916.359003
   Herbsleb J. D., 2002, Conference Proceedings. Conference on Human Factors in Computing Systems. CHI 2002, P171, DOI 10.1145/503376.503408
   Herbsleb JD, 1999, IEEE SOFTWARE, V16, P63, DOI 10.1109/52.795103
   Kwan I, 2011, IEEE T SOFTWARE ENG, V37, P307, DOI 10.1109/TSE.2011.29
   Lee A., 1997, GROUP '97. Proceedings of the International ACM SIGGROUP Conference on Supporting Group Work. The Integration Challenge, P385, DOI 10.1145/266838.267359
   Mayer R.E., 1988, HDB HUMAN COMPUTER I, P781
   MCGUFFIN L, 1992, 45 U MICH COGN SCI M
   Mens T, 2002, IEEE T SOFTWARE ENG, V28, P449, DOI 10.1109/TSE.2002.1000449
   Molli P, 1997, LECT NOTES COMPUT SC, V1235, P128
   O'Reilly C, 2003, LECT NOTES COMPUT SC, V2649, P191
   Omoronyia I, 2010, SOFTWARE PRACT EXPER, V40, P1107, DOI 10.1002/spe.1005
   Ripley R., 2004, IMPROVING PRACTICAL
   Rochkind M. J., 1975, IEEE Transactions on Software Engineering, VSE-1, P364, DOI 10.1109/TSE.1975.6312866
   Sarma A, 2003, PROC INT CONF SOFTW, P444, DOI 10.1109/ICSE.2003.1201222
   Sarma A., 2004, 4 WORKSH OP SOURC SO, P82
   Sarma A., 2008, 16th ACM SIGSOFT International Symposium on Foundation of Software engineering, P113, DOI DOI 10.1145/1453101.1453118
   Sarma A., 2007, C AUTOMATED SOFTWARE, P94
   Schroter A., 2010, 2010 32nd International Conference on Software Engineering (ICSE), P511, DOI 10.1145/1810295.1810456
   Schümmer T, 2001, ECSCW 2001: PROCEEDINGS OF THE SEVENTH EUROPEAN CONFERENCE ON COMPUTER SUPPORTED COOPERATIVE WORK, P79
   Shadish W. R., 2002, EXPT QUASI EXPT DESI
   Sillito J, 2008, IEEE T SOFTWARE ENG, V34, P434, DOI 10.1109/TSE.2008.26
   Strauss E, 1998, CLIN ORTHOP RELAT R, P2
   Valetto G., 2007, P WORKSH MIN SOFTW R, P27
NR 51
TC 52
Z9 63
U1 1
U2 17
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUL-AUG
PY 2012
VL 38
IS 4
BP 889
EP 908
DI 10.1109/TSE.2011.64
PG 20
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 983LE
UT WOS:000307120000010
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Mortensen, M
   Ghosh, S
   Bieman, JM
AF Mortensen, Michael
   Ghosh, Sudipto
   Bieman, James M.
TI Aspect-Oriented Refactoring of Legacy Applications: An Evaluation
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Aspect-oriented programming; crosscutting concerns; legacy systems;
   refactoring; maintainability
ID DESIGN
AB The primary claimed benefits of aspect-oriented programming (AOP) are that it improves the understandability and maintainability of software applications by modularizing crosscutting concerns. Before there is widespread adoption of AOP, developers need further evidence of the actual benefits as well as costs. Applying AOP techniques to refactor legacy applications is one way to evaluate costs and benefits. We replace crosscutting concerns with aspects in three industrial applications to examine the effects on qualities that affect the maintainability of the applications. We study several revisions of each application, identifying crosscutting concerns in the initial revision and also crosscutting concerns that are added in later revisions. Aspect-oriented refactoring reduced code size and improved both change locality and concern diffusion. Costs include the effort required for application refactoring and aspect creation, as well as a decrease in performance.
C1 [Mortensen, Michael] Google, Boulder, CO 80302 USA.
   [Ghosh, Sudipto; Bieman, James M.] Colorado State Univ, Dept Comp Sci, Ft Collins, CO 80523 USA.
C3 Google Incorporated; Colorado State University
RP Mortensen, M (corresponding author), Google, Boulder, CO 80302 USA.
EM ghosh@cs.colostate.edu
RI Ghosh, Sudipto/ABI-4888-2020
CR ALEXANDER R, 2004, CS4105 COL STAT U DE
   [Anonymous], 2005, SOFTW DEV J
   Bartsch M, 2008, SOFTWARE QUAL J, V16, P23, DOI 10.1007/s11219-007-9022-7
   BASILI VR, 1984, IEEE T SOFTWARE ENG, V10, P728, DOI 10.1109/TSE.1984.5010301
   Bieman JM, 2003, NINTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM, PROCEEDINGS, P40, DOI 10.1109/METRIC.2003.1232454
   Binkley D, 2006, IEEE T SOFTWARE ENG, V32, P698, DOI 10.1109/TSE.2006.95
   Briand LC, 2005, PROC IEEE INT CONF S, P687
   Briand LC, 1996, IEEE T SOFTWARE ENG, V22, P68, DOI 10.1109/32.481535
   Bruntink M, 2005, PROC IEEE INT CONF S, P37
   Bruntink M., 2007, P 6 INT C ASPECT ORI, P199
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   Clifton C., 2003, P WORKSH SOFTW ENG P
   Coady Y., 2003, P 2 INT C ASPECT ORI, P50
   Figueiredo E, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P261, DOI 10.1145/1368088.1368124
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   Griswold WG, 2006, IEEE SOFTWARE, V23, P51, DOI 10.1109/MS.2006.24
   Hannemann J, 2002, ACM SIGPLAN NOTICES, V37, P161, DOI 10.1145/583854.582436
   Hoffman K, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P91
   Kiczales G, 1997, LECT NOTES COMPUT SC, V1241, P220, DOI 10.1007/BFb0053381
   Koppen C., 2004, P EUR INT WORKSH ASP
   Kulesza U, 2006, PROC IEEE INT CONF S, P223
   Laddad R., 2003, ASPECTJ ACTION PRACT
   Lohmann D., 2006, Operating Systems Review, V40, P191, DOI 10.1145/1218063.1217954
   Lohmann D., 2005, P ASP COMP PATT INFR
   Mortensen M., 2007, P 6 INT C ASP OR SOF, P9
   MORTENSEN M, 2006, P 5 WORKSH ASP COMP
   Mortensen M., 2006, P 5 INT C ASP OR SOF, P9
   Mortensen M., 2006, P 17 INT S SOFTW REL
   Mortensen M, 2008, INFORM SOFTWARE TECH, V50, P621, DOI 10.1016/j.infsof.2007.06.002
   Spinczyk O., 2002, CR PIT 02 P 40 INT C, P53
   Sullivan Kevin., 2005, SIGSOFT SOFTW ENG NO, V30, P166
   Tonella P, 2005, IEEE T SOFTWARE ENG, V31, P819, DOI 10.1109/TSE.2005.115
   Tsang SL, 2004, SEVENTH IEEE INTERNATIONAL SYMPOSIUM ON OBJECT-ORIENTED REAL-TIME DISTRIBUTED COMPUTING, PROCEEDINGS, P291
   Wampler Dean., 2006, ACP4IS 06, P27
   Zagal JP, 2002, IEEE SOFTWARE, V19, P100, DOI 10.1109/MS.2002.1020296
   Zhang C, 2003, IEEE T PARALL DISTR, V14, P1058, DOI 10.1109/TPDS.2003.1247668
NR 37
TC 13
Z9 13
U1 0
U2 9
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JAN-FEB
PY 2012
VL 38
IS 1
BP 118
EP 140
DI 10.1109/TSE.2010.109
PG 23
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 881HG
UT WOS:000299472600009
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Manadhata, PK
   Wing, JM
AF Manadhata, Pratyusa K.
   Wing, Jeannette M.
TI An Attack Surface Metric
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Code design; life cycle; product metrics; protection mechanisms; risk
   mitigation; software security
ID SOFTWARE; VALIDATION
AB Measurement of software security is a long-standing challenge to the research community. At the same time, practical security metrics and measurements are essential for secure software development. Hence, the need for metrics is more pressing now due to a growing demand for secure software. In this paper, we propose using a software system's attack surface measurement as an indicator of the system's security. We formalize the notion of a system's attack surface and introduce an attack surface metric to measure the attack surface in a systematic manner. Our measurement method is agnostic to a software system's implementation language and is applicable to systems of all sizes; we demonstrate our method by measuring the attack surfaces of small desktop applications and large enterprise systems implemented in C and Java. We conducted three exploratory empirical studies to validate our method. Software developers can mitigate their software's security risk by measuring and reducing their software's attack surfaces. Our attack surface reduction approach complements the software industry's traditional code quality improvement approach for security risk mitigation and is useful in multiple phases of the software development lifecycle. Our collaboration with SAP demonstrates the use of our metric in the software development process.
C1 [Manadhata, Pratyusa K.] Symantec Res Labs, Culver City, CA 90230 USA.
   [Wing, Jeannette M.] Natl Sci Fdn, Comp & Informat Sci & Engn Directorate, Arlington, VA 22230 USA.
   [Wing, Jeannette M.] Carnegie Mellon Univ, Arlington, VA 22230 USA.
C3 Symantec; National Science Foundation (NSF); NSF - Directorate for
   Computer & Information Science & Engineering (CISE); Carnegie Mellon
   University
RP Manadhata, PK (corresponding author), Symantec Res Labs, 900 Corp Pointe, Culver City, CA 90230 USA.
EM manadhata@cmu.edu; wing@cs.cmu.edu
CR ALVESFOSS J, 1995, ACM SIGOPS OPERATING, V29, P3
   [Anonymous], 2003, P WORKSH ADV DEV SOF
   [Anonymous], 1989, CWI Q.
   [Anonymous], COMMUNICATION
   Baumgartner Hans., 2008, Handbook of Consumer Psychology
   BRIAND L, 1995, ISERN9503 TR FRAUNH
   Chen H, 2002, USENIX ASSOCIATION PROCEEDINGS OF THE 11TH USENIX SECURITY SYMPOSIUM, P171
   CHRISTEY SM, 2007, COMMUNICATION
   CRA, 2003, 4 GRAND CHALL TRUSTW
   Dacier M., 1994, Computer Security - ESORICS 94. Third European Symposium on Research in Computer Security. Proceedings, P319
   DACOSTA D, 2003, P INT C SOFTW MAINT
   *ECL, 2009, ECL PACK ORG ECL JDT
   *ECL, 2010, ECL OP DEV PLATF
   FAGAN ME, 1976, IBM SYST J, V15, P182, DOI 10.1147/sj.153.0182
   Fenton N. E., 1998, Software metrics: a rigorous and practical approach
   Fenton NE, 1999, IEEE T SOFTWARE ENG, V25, P675, DOI 10.1109/32.815326
   Goodman Seymour., 2007, SAFER MORE SECURE CY
   GOPALAKRISHNA R, 2005, 200506 CERIAS TR PUR
   Haimes Y., 2004, Risk Modeling, Assessment, and Management, V2nd
   Howard Michael., 2003, Fending off future attacks by reducing attack surface
   KEMERER CF, 1987, COMMUN ACM, V30, P416, DOI 10.1145/22899.22906
   KITCHENHAM B, 1995, IEEE T SOFTWARE ENG, V21, P929, DOI 10.1109/32.489070
   Leversage DJ, 2008, IEEE SECUR PRIV, V6, P52, DOI 10.1109/MSP.2008.9
   Likert R., 1932, Archives of Pyschology, V22, P5
   Littlewood B., 1993, Journal of Computer Security, V2, P211
   Liu YM, 2007, APPL MATH INFORM SCI, V1, P129
   Madan BB, 2002, INTERNATIONAL CONFERENCE ON DEPENDABLE SYSTEMS AND NETWORKS, PROCEEDINGS, P505, DOI 10.1109/DSN.2002.1028941
   Manadhata P., 2008, THESIS CARNEGIE MELL
   MANADHATA P, 2004, CMUCS04102
   MANADHATA PK, 2009, P INT S ENG SEC SOFT
   MARKHAM G, 2009, REDUCING ATTACK SURF
   McGraw G., 2003, IEEE Security & Privacy, V1, P59, DOI 10.1109/MSECP.2003.1193213
   MCQUEEN MA, 2005, P ACM C COMP COMM SE
   Mendonça MG, 2000, IEEE T SOFTWARE ENG, V26, P484, DOI 10.1109/32.852739
   *MICR CORP, 2010, MICR SEC B SEARCH
   *MITRE, 2010, CWE COMM WEAKN EN
   Miyazaki Y., 1985, Proceedings of the 8th International Conference on Software Engineering (Cat. No.85CH2139-4), P292
   *MUSECURITY, 2009, WHAT SECURITY ANAL
   National Institute of Standards and Technology (NIST), 2010, NAT VULN DAT
   Nicol DM, 2005, IEEE SECUR PRIV, V3, P71, DOI 10.1109/MSP.2005.129
   Ortalo R, 1999, IEEE T SOFTWARE ENG, V25, P633, DOI 10.1109/32.815323
   POZNYAKOFF S, 2009, GNU CFLOW
   ROSSI P, 1983, HDB SURV RES
   *SAP AG, 2009, SAP BUS SOFTW SOL AP
   Schechter S., 2004, THESIS HARVARD U
   SCHNEIDEWIND NF, 1992, IEEE T SOFTWARE ENG, V18, P410, DOI 10.1109/32.135774
   Schneier B, 1999, DR DOBBS J, V24, P21
   Shadish WR., 2001, EXPT QUASI EXPT DESI
   SHARP M, 2005, P ECL TECHN EXCH WOR, P6
   Vaughn R. B., 2003, P HAW INT C SYST SCI
   VOAS J, 1996, P ANN C COMP ASS
   WEYUKER EJ, 1988, IEEE T SOFTWARE ENG, V14, P1357, DOI 10.1109/32.6178
NR 52
TC 287
Z9 350
U1 1
U2 30
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAY-JUN
PY 2011
VL 37
IS 3
BP 371
EP 386
DI 10.1109/TSE.2010.60
PG 16
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 768KZ
UT WOS:000290934800006
DA 2024-07-18
ER

PT J
AU Song, QB
   Jia, ZH
   Shepperd, M
   Ying, S
   Liu, J
AF Song, Qinbao
   Jia, Zihan
   Shepperd, Martin
   Ying, Shi
   Liu, Jin
TI A General Software Defect-Proneness Prediction Framework
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Software defect prediction; software defect-proneness prediction;
   machine learning; scheme evaluation
ID STATIC CODE ATTRIBUTES; CAPTURE-RECAPTURE MODELS
AB BACKGROUND-Predicting defect-prone software components is an economically important activity and so has received a good deal of attention. However, making sense of the many, and sometimes seemingly inconsistent, results is difficult. OBJECTIVE-We propose and evaluate a general framework for software defect prediction that supports 1) unbiased and 2) comprehensive comparison between competing prediction systems. METHOD-The framework is comprised of 1) scheme evaluation and 2) defect prediction components. The scheme evaluation analyzes the prediction performance of competing learning schemes for given historical data sets. The defect predictor builds models according to the evaluated learning scheme and predicts software defects with new data according to the constructed model. In order to demonstrate the performance of the proposed framework, we use both simulation and publicly available software defect data sets. RESULTS-The results show that we should choose different learning schemes for different data sets (i.e., no scheme dominates), that small details in conducting how evaluations are conducted can completely reverse findings, and last, that our proposed framework is more effective and less prone to bias than previous approaches. CONCLUSIONS-Failure to properly or fully evaluate a learning scheme can be misleading; however, these problems may be overcome by our proposed framework.
C1 [Song, Qinbao; Jia, Zihan] Xi An Jiao Tong Univ, Dept Comp Sci & Technol, Xian 710049, Peoples R China.
   [Shepperd, Martin] Brunel Univ, Sch Informat Sci Comp & Math, Uxbridge UB8 3PH, Middx, England.
   [Ying, Shi; Liu, Jin] Wuhan Univ, State Key Lab Software Engn, Wuhan 430072, Peoples R China.
C3 Xi'an Jiaotong University; Brunel University; Wuhan University
RP Song, QB (corresponding author), Xi An Jiao Tong Univ, Dept Comp Sci & Technol, Xian 710049, Peoples R China.
EM qbsong@mail.xjtu.edu.cn; jiazh.eden@stu.xjtu.edu.cn;
   martin.shepperd@brunel.ac.uk; yingshi@whu.edu.cn; mailjinliu@yahoo.com
RI Lu, Rui/KCJ-8212-2024; Jia, Zihan/JOZ-6141-2023; Shepperd,
   Martin/F-9683-2013
OI Shepperd, Martin/0000-0003-1874-6145
FU National Natural Science Foundation of China [90718024, 61070006]
FX The authors would like to thank the anonymous reviewers and Dr Tim
   Menzies for their helpful comments. This work is supported by the
   National Natural Science Foundation of China under grants 90718024 and
   61070006.
CR [Anonymous], 1993, C4 5 PROGRAMS MACH L
   [Anonymous], 2004, METRICS DATA PROGRAM
   Basili VR, 1996, IEEE T SOFTWARE ENG, V22, P751, DOI 10.1109/32.544352
   Briand LC, 2000, IEEE T SOFTWARE ENG, V26, P518, DOI 10.1109/32.852741
   CARDIE C, 1993, P 10 INT C MACH LEAR, P25
   COMPTON BT, 1990, J SYST SOFTWARE, V12, P199, DOI 10.1016/0164-1212(90)90040-S
   Ebrahimi NB, 1997, IEEE T SOFTWARE ENG, V23, P529, DOI 10.1109/32.624308
   El Emam K, 2001, J SYST SOFTWARE, V55, P301, DOI 10.1016/S0164-1212(00)00079-0
   El Emam K, 2001, IEEE T SOFTWARE ENG, V27, P851, DOI 10.1109/32.950319
   Elish KO, 2008, J SYST SOFTWARE, V81, P649, DOI 10.1016/j.jss.2007.07.040
   Fenton NE, 1999, IEEE T SOFTWARE ENG, V25, P675, DOI 10.1109/32.815326
   Ganesan K, 2000, INT J SOFTW ENG KNOW, V10, P139, DOI 10.1142/S0218194000000092
   Guo L, 2004, 15TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P417
   Hall M. A., 2000, P 17 INT C MACH LEAR, P359, DOI DOI 10.5555/645529.657793
   Hall MA, 2003, IEEE T KNOWL DATA EN, V15, P1437, DOI 10.1109/TKDE.2003.1245283
   Jiang Y, 2008, EMPIR SOFTW ENG, V13, P561, DOI 10.1007/s10664-008-9079-3
   KENNEY GQ, 1993, IEEE T RELIAB, V42, P107, DOI 10.1109/24.210280
   Khoshgoftaar T. M., 1999, Proceedings 10th International Symposium on Software Reliability Engineering (Cat. No.PR00443), P116, DOI 10.1109/ISSRE.1999.809316
   Khoshgoftaar TM, 2003, EMPIR SOFTW ENG, V8, P325, DOI 10.1023/A:1025316301168
   Khoshgoftaar TM, 1997, IEEE T NEURAL NETWOR, V8, P902, DOI 10.1109/72.595888
   Kibler D., 1987, Proceedings of the Fourth International Workshop on Machine Learning, P24
   Kohavi R, 1997, ARTIF INTELL, V97, P273, DOI 10.1016/S0004-3702(97)00043-X
   Lessmann S, 2008, IEEE T SOFTWARE ENG, V34, P485, DOI 10.1109/TSE.2008.35
   Menzies T, 2007, IEEE T SOFTWARE ENG, V33, P637, DOI 10.1109/TSE.2007.70721
   Menzies T, 2007, IEEE T SOFTWARE ENG, V33, P2, DOI 10.1109/TSE.2007.256941
   MUNSON JC, 1992, IEEE T SOFTWARE ENG, V18, P423, DOI 10.1109/32.135775
   MUNSON JC, 1990, INFORM SOFTWARE TECH, V32, P106, DOI 10.1016/0950-5849(90)90109-5
   Myrtveit I, 2005, IEEE T SOFTWARE ENG, V31, P380, DOI 10.1109/TSE.2005.58
   ORAL AD, 2007, P 22 INT S COMP INF, P1
   Padberg F, 2004, IEEE T SOFTWARE ENG, V30, P17, DOI 10.1109/TSE.2004.1265733
   PORTER AA, 1990, IEEE SOFTWARE, V7, P46, DOI 10.1109/52.50773
   Runeson P, 2006, IEEE SOFTWARE, V23, P82, DOI 10.1109/MS.2006.89
   Runeson P., 1998, Empirical Software Engineering, V3, P381, DOI 10.1023/A:1009728205264
   Song QB, 2006, IEEE T SOFTWARE ENG, V32, P69, DOI 10.1109/TSE.2006.1599417
   SRINIVASAN K, 1995, IEEE T SOFTWARE ENG, V21, P126, DOI 10.1109/32.345828
   TIAN J, 1995, IEEE T SOFTWARE ENG, V21, P641, DOI 10.1109/32.403788
   Turhan B, 2007, USIC 2007: PROCEEDINGS OF THE SEVENTH INTERNATIONAL CONFERENCE ON QUALITY SOFTWARE, P231
   Turhan B, 2009, DATA KNOWL ENG, V68, P278, DOI 10.1016/j.datak.2008.10.005
   VANDERWIEL SA, 1993, IEEE T SOFTWARE ENG, V19, P1045, DOI 10.1109/32.256852
   Wagner Stefan., 2006, ISESE '06: Proceedings of the 2006 ACM/IEEE international symposium on Empirical software engineering, P194
   Wohlin C, 1998, PROC INT CONF SOFTW, P400, DOI 10.1109/ICSE.1998.671393
   ZHAN L, 2007, P IEEE INT C INF REU, P659
   Zhang HY, 2007, IEEE T SOFTWARE ENG, V33, P635, DOI 10.1109/TSE.2007.70706
   [No title captured]
NR 44
TC 222
Z9 260
U1 2
U2 35
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAY-JUN
PY 2011
VL 37
IS 3
BP 356
EP 370
DI 10.1109/TSE.2010.90
PG 15
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 768KZ
UT WOS:000290934800005
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Egyed, A
AF Egyed, Alexander
TI Automatically Detecting and Tracking Inconsistencies in Software Design
   Models
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Design tools and techniques; design
ID MANAGEMENT; CONSISTENCY
AB Software models typically contain many inconsistencies and consistency checkers help engineers find them. Even if engineers are willing to tolerate inconsistencies, they are better off knowing about their existence to avoid follow-on errors and unnecessary rework. However, current approaches do not detect or track inconsistencies fast enough. This paper presents an automated approach for detecting and tracking inconsistencies in real time (while the model changes). Engineers only need to define consistency rules-in any language-and our approach automatically identifies how model changes affect these consistency rules. It does this by observing the behavior of consistency rules to understand how they affect the model. The approach is quick, correct, scalable, fully automated, and easy to use as it does not require any special skills from the engineers using it. We evaluated the approach on 34 models with model sizes of up to 162,237 model elements and 24 types of consistency rules. Our empirical evaluation shows that our approach requires only 1.4 ms to reevaluate the consistency of the model after a change (on average); its performance is not noticeably affected by the model size and common consistency rules but only by the number of consistency rules, at the expense of a quite acceptable, linearly increasing memory consumption.
C1 Johannes Kepler Univ Linz, A-4040 Linz, Austria.
C3 Johannes Kepler University Linz
RP Egyed, A (corresponding author), Johannes Kepler Univ Linz, Altenbergerstr 69, A-4040 Linz, Austria.
EM alexander.egyed@jku.at
RI Egyed, Alexander/E-2632-2017
OI Egyed, Alexander/0000-0003-3128-5427
FU Austrian FWF [P21321-N15]; Austrian Science Fund (FWF) [P21321] Funding
   Source: Austrian Science Fund (FWF)
FX The author would like to thank Iris Groher and Alexander Reder for
   porting an earlier version of the tool onto IBM Rational Software
   Modeler. This work was supported by the Austrian FWF under agreement
   P21321-N15.
CR Acar UA, 2008, POPL'08: PROCEEDINGS OF THE 35TH ANNUAL ACM SIGPLAN-SIGACT SYMPOSIUM ON PRINCIPLES OF PROGRAMMING LANGUAGES, P309, DOI 10.1145/1328438.1328476
   Balzer R., 1991, P 13 INT C SOFTW ENG, P158
   BELKHOUCHE B, 1996, P INT WORKSH MULT PE
   Blanc X, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P511, DOI 10.1145/1368088.1368158
   Boehm BW., 2000, SOFTWARE COST ESTIMA, VII
   Briand LC, 2003, PROC IEEE INT CONF S, P256, DOI 10.1109/ICSM.2003.1235428
   Campbell L. A., 2002, Requirements Engineering, V7, P264, DOI 10.1007/s007660200020
   CHENG BHC, 1994, PROC INT C TOOLS ART, P26, DOI 10.1109/TAI.1994.346517
   DHUNGANA D, 2007, P 11 INT SOFTW PROD, P151
   EASTERBROOK S, 1995, IEE SOFTWARE ENG J, V11, P31
   Egyed A, 2002, ACM T SOFTW ENG METH, V11, P449, DOI 10.1145/606612.606616
   EGYED A, 2006, P 28 INT C SOFTW ENG, P381, DOI DOI 10.1145/1134285.1134339
   EGYED A, 2006, INT J AUTOMATED SOFT, V13, P41
   EGYED A, 2008, P 23 INT C AUT SOFTW
   Egyed A, 2007, PROC INT CONF SOFTW, P292
   Emmerich W., 1996, Proceedings of the 8th International Workshop on Software Specification and Design, P26, DOI 10.1109/IWSSD.1996.501144
   FICKAS S, 1997, P ICSE 97 WORKSH LIV
   FINKELSTEIN ACW, 1994, IEEE T SOFTWARE ENG, V20, P569, DOI 10.1109/32.310667
   FORGY CL, 1982, ARTIF INTELL, V19, P17, DOI 10.1016/0004-3702(82)90020-0
   GROHER I, 2010, P 12 INT C FUND APPR
   Grundy J, 1998, IEEE T SOFTWARE ENG, V24, P960, DOI 10.1109/32.730545
   HABERMANN AN, 1986, IEEE T SOFTWARE ENG, V12, P1117, DOI 10.1109/TSE.1986.6313007
   KAPLAN SM, 1986, P 5 ANN S PRINC DIST, P121
   Lee M, 2000, TECHNOLOGY OF OBJECT-ORIENTED LANGUAGES AND SYSTEMS - TOOLS 34, PROCEEDINGS, P61, DOI 10.1109/TOOLS.2000.868959
   Lindvall M, 1996, SOFTWARE PRACT EXPER, V26, P1161, DOI 10.1002/(SICI)1097-024X(199610)26:10<1161::AID-SPE58>3.0.CO;2-X
   MACKWORTH AK, 1977, ARTIF INTELL, V8, P99, DOI 10.1016/0004-3702(77)90007-8
   Nentwich C, 2003, PROC INT CONF SOFTW, P455, DOI 10.1109/ICSE.2003.1201223
   Nentwich C., 2002, ACM T INTERNET TECHN, V2, P151, DOI [10.1145/514183.514186, DOI 10.1145/514183.514186]
NR 28
TC 76
Z9 83
U1 1
U2 7
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAR-APR
PY 2011
VL 37
IS 2
BP 188
EP 203
DI 10.1109/TSE.2010.38
PG 16
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 739ZL
UT WOS:000288760900004
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Mouchawrab, S
   Briand, LC
   Labiche, Y
   Di Penta, M
AF Mouchawrab, Samar
   Briand, Lionel C.
   Labiche, Yvan
   Di Penta, Massimiliano
TI Assessing, Comparing, and Combining State Machine-Based Testing and
   Structural Testing: A Series of Experiments
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE State-based software testing; structural testing; controlled
   experiments; state machines
ID GENERATING TEST DATA; MUTATION; DESIGN
AB A large number of research works have addressed the importance of models in software engineering. However, the adoption of model-based techniques in software organizations is limited since these models are perceived to be expensive and not necessarily cost-effective. Focusing on model-based testing, this paper reports on a series of controlled experiments. It investigates the impact of state machine testing on fault detection in class clusters and its cost when compared with structural testing. Based on previous work showing this is a good compromise in terms of cost and effectiveness, this paper focuses on a specific state-based technique: the round-trip paths coverage criterion. Round-trip paths testing is compared to structural testing, and it is investigated whether they are complementary. Results show that even when a state machine models the behavior of the cluster under test as accurately as possible, no significant difference between the fault detection effectiveness of the two test strategies is observed, while the two test strategies are significantly more effective when combined by augmenting state machine testing with structural testing. A qualitative analysis also investigates the reasons why test techniques do not detect certain faults and how the cost of state machine testing can be brought down.
C1 [Mouchawrab, Samar; Labiche, Yvan] Carleton Univ, Dept Syst & Comp Engn, Ottawa, ON K1S 5B6, Canada.
   [Briand, Lionel C.] Simula Res Lab, N-1325 Lysaker, Norway.
   [Di Penta, Massimiliano] Univ Sannio, Dept Engn, RCOST, I-82100 Benevento, Italy.
C3 Carleton University; University of Sannio
RP Mouchawrab, S (corresponding author), Carleton Univ, Dept Syst & Comp Engn, 1125 Colonel Dr, Ottawa, ON K1S 5B6, Canada.
EM samar@sce.carleton.ca; briand@simula.no; labiche@sce.carleton.ca;
   dipenta@unisannio.it
RI Di Penta, Massimiliano/AAF-9656-2021
OI Di Penta, Massimiliano/0000-0002-0340-9747; Labiche,
   Yvan/0000-0001-8880-4836
CR Andrews JH, 2006, IEEE T SOFTWARE ENG, V32, P608, DOI 10.1109/TSE.2006.83
   Andrews JH, 2005, PROC INT CONF SOFTW, P402, DOI 10.1145/1062455.1062530
   [Anonymous], 1999, Testing Object-Oriented Systems: Models, Patterns, and Tools
   [Anonymous], 1990, Software testing techniques {
   [Anonymous], 2004, Applying UML and Patterns: An Introduction to Object-Oriented Analysis and Design and Iterative Development
   [Anonymous], 1988, STAT POWER ANAL BEHA
   Arisholm E, 2004, IEEE T SOFTWARE ENG, V30, P521, DOI 10.1109/TSE.2004.43
   BALDWIN D, 1979, HEURISTICS DETERMINI, V276
   Basili VR, 1999, IEEE T SOFTWARE ENG, V25, P456, DOI 10.1109/32.799939
   BIEMAN JM, 1992, SOFTWARE ENG J, V7, P43, DOI 10.1049/sej.1992.0005
   Bogdanov K, 2001, SOFTW TEST VERIF REL, V11, P39, DOI 10.1002/stvr.217
   Briand LC, 2005, 16TH IEEE INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P95, DOI 10.1109/ISSRE.2005.24
   Briand L.C., 2005, Special Issue of the Journal of Software and Systems Modeling, V4, P399
   Briand LC, 2004, PROC INT CONF SOFTW, P86, DOI 10.1109/ICSE.2004.1317431
   Briand LC, 2004, IEEE T SOFTWARE ENG, V30, P770, DOI 10.1109/TSE.2004.79
   Briand LC, 2003, SOFTWARE PRACT EXPER, V33, P637, DOI 10.1002/spe.520
   BRIAND LC, 2007, P INT S EMP SOFTW EN
   BRIAND LC, 2002, SOFTW SYST MODEL, V1, P10, DOI [10.1007/s10270-002-0004-8, DOI 10.1007/S10270-002-0004-8]
   Bruegge B., 2009, OBJECT ORIENTED SOFT
   Chevalley P, 2001, 12TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P254, DOI 10.1109/ISSRE.2001.989479
   Chevalley P, 2001, P INT COMP SOFTW APP, P205, DOI 10.1109/CMPSAC.2001.960618
   CHOW TS, 1978, IEEE T SOFTWARE ENG, V4, P178, DOI 10.1109/TSE.1978.231496
   DALY J, 1994, INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE, PROCEEDINGS, P50, DOI 10.1109/ICSM.1994.336790
   DEMILLO RA, 1978, COMPUTER, V11, P34, DOI 10.1109/C-M.1978.218136
   Devore J., 1999, APPL STAT ENG SCI
   Dybå T, 2006, INFORM SOFTWARE TECH, V48, P745, DOI 10.1016/j.infsof.2005.08.009
   Ferguson GeorgeA., 2005, STAT ANAL PSYCHOL ED, V6th
   Frankl P., 1991, 4 S TESTING ANAL VER, P154
   Frankl PG, 1997, J SYST SOFTWARE, V38, P235, DOI 10.1016/S0164-1212(96)00154-9
   Gomaa H., 2000, DESIGNING CONCURRENT
   Harris R.J., 2001, A primer of multivariate statistics, V3rd
   HOLM S, 1979, SCAND J STAT, V6, P65
   Holt N., 2006, Proceedings of Critical Systems Development Using Modeling Languages, Workshop in Conjunction with UML'06, P68
   Holt R., 1987, Empirical studies of programmers, P33
   Hong HS, 2000, SOFTW TEST VERIF BEH, V10, P203, DOI 10.1002/1099-1689(200012)10:4<203::AID-STVR212>3.0.CO;2-2
   Host M., 2000, Empirical Software Engineering, V5, P201, DOI 10.1023/A:1026586415054
   Hutchins M., 1994, P 16 INT C SOFTW ENG
   Kleppe A.G., 2003, MDA Explained; The Model Driven Architecture: Practice and Promise
   Lee D, 1996, P IEEE, V84, P1090, DOI 10.1109/5.533956
   Levy P., 1999, WILEY S PRO STAT SUR, VThird
   Ma YS, 2005, SOFTW TEST VERIF REL, V15, P97, DOI 10.1002/stvr.308
   MA YS, 2002, P 13 INT S SOFTW REL
   MA YS, 2010, DESCRIPTION METHOD L
   Marick B., 1985, Craft of Software Testing
   McMinn P, 2006, EVOL COMPUT, V14, P41
   MEYER B, 1992, COMPUTER, V25, P40, DOI 10.1109/2.161279
   MOUCHAWRAB S, 2009, SCE0809 CARLETON U T
   Murphy K.R., 1998, Statistical power analysis: A simple and general model for traditional and modern hypothesis tests
   Nebut C, 2006, IEEE T SOFTWARE ENG, V32, P140, DOI 10.1109/TSE.2006.22
   Offutt A. J., 1994, Software Testing, Verification and Reliability, V4, P131, DOI 10.1002/stvr.4370040303
   Offutt J, 1999, LECT NOTES COMPUT SC, V1723, P416
   Offutt J, 2003, SOFTW TEST VERIF REL, V13, P25, DOI 10.1002/stvr.264
   OFFUTT J, 1997, SOFTW TEST VERIF REL, V7, P165
   OSTRAND TJ, 1988, COMMUN ACM, V31, P676, DOI 10.1145/62959.62964
   PIWOWARSKI P, 1998, P 15 INT C SOFTW ENG
   Pretschner A, 2005, PROC INT CONF SOFTW, P392
   Shull F, 2008, GUIDE ADV EMPIRICAL
   Siegel S., 1956, Nonparametric statistics for the behavioral sciences
   Sinha S, 2000, IEEE T SOFTWARE ENG, V26, P849, DOI 10.1109/32.877846
   Toothaker L.E., 1986, Introductory statistics for the behavioral sciences, VSecond
   Utting M., 2006, Practical Model-Based Testing
   Warmer Jos., 2004, OBJECT CONSTRAINT LA
   WEYUKER E, 1994, IEEE T SOFTWARE ENG, V20, P353, DOI 10.1109/32.286420
   WEYUKER EJ, 1990, IEEE T SOFTWARE ENG, V16, P121, DOI 10.1109/32.44376
   WOHLIN C, 2000, EXPERIMENTATION SOFT
NR 65
TC 54
Z9 60
U1 0
U2 6
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAR-APR
PY 2011
VL 37
IS 2
BP 161
EP 187
DI 10.1109/TSE.2010.32
PG 27
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 739ZL
UT WOS:000288760900003
DA 2024-07-18
ER

PT J
AU Bollig, B
   Katoen, JP
   Kern, C
   Leucker, M
AF Bollig, Benedikt
   Katoen, Joost-Pieter
   Kern, Carsten
   Leucker, Martin
TI Learning Communicating Automata from MSCs
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Software engineering/requirements/specifications/elicitation methods;
   software engineering/design/design concepts; computing
   methodologies/artificial intelligence/learning/induction; theory of
   computation/computation by abstract devices/models of
   computation/automata
ID MESSAGE SEQUENCE CHARTS; MODEL-CHECKING; SCENARIOS; REALIZABILITY; LIFE
AB This paper is concerned with bridging the gap between requirements and distributed systems. Requirements are defined as basic message sequence charts (MSCs) specifying positive and negative scenarios. Communicating finite-state machines (CFMs), i.e., finite automata that communicate via FIFO buffers, act as system realizations. The key contribution is a generalization of Angluin's learning algorithm for synthesizing CFMs from MSCs. This approach is exact - the resulting CFM precisely accepts the set of positive scenarios and rejects all negative ones - and yields fully asynchronous implementations. The paper investigates for which classes of MSC languages CFMs can be learned, presents an optimization technique for learning partial orders, and provides substantial empirical evidence indicating the practical feasibility of the approach.
C1 [Bollig, Benedikt] CNRS, ENS Cachan, LSV, F-94235 Cachan, France.
   [Katoen, Joost-Pieter; Kern, Carsten] Rhein Westfal TH Aachen, Lehrstuhl Informat 2, D-52056 Aachen, Germany.
   [Leucker, Martin] Tech Univ Munich, Inst Informat, D-85748 Garching, Germany.
C3 Universite Paris Saclay; Centre National de la Recherche Scientifique
   (CNRS); RWTH Aachen University; Technical University of Munich
RP Bollig, B (corresponding author), CNRS, ENS Cachan, LSV, 61 Ave President Wilson, F-94235 Cachan, France.
EM bollig@lsv.ens-cachan.fr; katoen@cs.rwth-aachen.de;
   kern@cs.rwth-aachen.de; leucker@in.tum.de
RI Katoen, Joost-Pieter/O-3307-2018
OI Katoen, Joost-Pieter/0000-0002-6143-1926; Leucker,
   Martin/0000-0002-3696-9222
FU EGIDE/DAAD-PROCOPE [Procope 2008/2009]; DFG Research Training Group
   AlgoSyn
FX This work is partially supported by the EGIDE/DAAD-PROCOPE (Procope
   2008/2009) and the DFG Research Training Group AlgoSyn. The authors
   would like to thank their student assistants David Piegdon and Stefan
   Schulz (both at RWTH Aachen University) for their support in tool
   development. Moreover, they thank the anonymous reviewers for their
   valuable suggestions.
CR Adsul B, 2005, LECT NOTES COMPUT SC, V3821, P335, DOI 10.1007/11590156_27
   Alur R, 2005, THEOR COMPUT SCI, V331, P97, DOI 10.1016/j.tcs.2004.09.034
   Alur R, 2003, IEEE T SOFTWARE ENG, V29, P623, DOI 10.1109/TSE.2003.1214326
   ANGLUIN D, 1987, INFORM COMPUT, V75, P87, DOI 10.1016/0890-5401(87)90052-6
   ARAUJO J, 1998, P OOPSLA WORKSH FORM
   BAUDRU N, 2003, SNPD 03, P210
   Baudru N, 2007, LECT NOTES COMPUT SC, V4855, P277
   Bollig B, 2005, LECT NOTES COMPUT SC, V3731, P53
   BOLLIG B, 2009, P 3 IFIP TC2 CENTR E
   Bollig B, 2008, LECT NOTES COMPUT SC, V5201, P162, DOI 10.1007/978-3-540-85361-9_15
   Bollig B, 2007, LECT NOTES COMPUT SC, V4855, P303
   Bollig B, 2007, LECT NOTES COMPUT SC, V4424, P435
   BRAND D, 1983, J ACM, V30, P323, DOI 10.1145/322374.322380
   CHANG E, 1979, COMMUN ACM, V22, P281, DOI 10.1145/359104.359108
   Cook J. E., 1998, ACM Transactions on Software Engineering and Methodology, V7, P215, DOI 10.1145/287000.287001
   Damas C, 2005, IEEE T SOFTWARE ENG, V31, P1056, DOI 10.1109/TSE.2005.138
   Damm W, 2001, FORM METHOD SYST DES, V19, P45, DOI 10.1023/A:1011227529550
   DUPONT P, 1996, P 3 ICGI 96, P222
   Elkind E, 2006, LECT NOTES COMPUT SC, V4229, P420
   ENDRISS U, 2003, P WORKSH AG COMM LAN, P91
   Endriss Ulrich., 2003, P INT JOINT C ARTIFI, P679
   Gené-Badia J, 2007, HEALTH POLICY, V80, P2, DOI 10.1016/j.healthpol.2006.02.008
   Genest B, 2005, LECT NOTES COMPUT SC, V3440, P429
   Genest B, 2006, J COMPUT SYST SCI, V72, P617, DOI 10.1016/j.jcss.2005.09.007
   Genest B, 2006, INFORM COMPUT, V204, P920, DOI 10.1016/j.ic.2006.01.005
   Harel D., 2003, COME LETS PLAY SCENA, DOI 10.1007/978-3-642-19029-2
   Henriksen JG, 2005, INFORM COMPUT, V202, P1, DOI 10.1016/j.ic.2004.08.004
   Hungar H, 2003, LECT NOTES COMPUT SC, V2725, P315
   *ITU TS, 2004, Z120 ITUTS
   KRUGER I, 1998, P IFIP C DISTR PAR E, V155, P61
   Lohrey M, 2003, THEOR COMPUT SCI, V309, P529, DOI 10.1016/j.tcs.2003.08.002
   Mäkinen E, 2001, PROC INT CONF SOFTW, P15, DOI 10.1109/ICSE.2001.919077
   Martins AL, 2005, LECT NOTES ARTIF INT, V3808, P325, DOI 10.1007/11595014_33
   MORIN R, 2002, P ANN S THEOR ASP CO, P523
   Nuseibeh B., 2000, P C FUTURE SOFTWARE, P35, DOI [10.1145/336512.336523, DOI 10.1145/336512.336523]
   ONCINA J, 1992, PATTERN RECOGN, V1, P49
   Sengupta B, 2006, IEEE T SOFTWARE ENG, V32, P587, DOI 10.1109/TSE.2006.82
   Tanenbaum A.S., 2002, COMPUT NETW, VFourth
   Uchitel S, 2003, IEEE T SOFTWARE ENG, V29, P99, DOI 10.1109/TSE.2003.1178048
   Uchitel S, 2007, PROC INT CONF SOFTW, P34
NR 40
TC 9
Z9 11
U1 0
U2 8
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAY-JUN
PY 2010
VL 36
IS 3
BP 390
EP 408
DI 10.1109/TSE.2009.89
PG 19
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 601PB
UT WOS:000278073400008
DA 2024-07-18
ER

PT J
AU Harman, M
   McMinn, P
AF Harman, Mark
   McMinn, Phil
TI A Theoretical and Empirical Study of Search-Based Testing: Local,
   Global, and Hybrid Search
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Automated test data generation; search-based testing; search-based
   software engineering; Evolutionary Testing; Genetic Algorithms; Hill
   Climbing; schema theory; Royal Road; testing and debugging; testing
   tools; artificial intelligence; problem solving; control methods; and
   search; heuristic methods; algorithms; experimentation; measurement;
   performance; theory
ID TEST-DATA GENERATION; SOFTWARE; EVOLUTIONARY
AB Search-based optimization techniques have been applied to structural software test data generation since 1992, with a recent upsurge in interest and activity within this area. However, despite the large number of recent studies on the applicability of different search-based optimization approaches, there has been very little theoretical analysis of the types of testing problem for which these techniques are well suited. There are also few empirical studies that present results for larger programs. This paper presents a theoretical exploration of the most widely studied approach, the global search technique embodied by Genetic Algorithms. It also presents results from a large empirical study that compares the behavior of both global and local search-based optimization on real-world programs. The results of this study reveal that cases exist of test data generation problem that suit each algorithm, thereby suggesting that a hybrid global-local search (a Memetic Algorithm) may be appropriate. The paper presents a Memetic Algorithm along with further empirical results studying its performance.
C1 [Harman, Mark] Kings Coll London, CREST Ctr, London WC2R 2LS, England.
   [McMinn, Phil] Univ Sheffield, Dept Comp Sci, Sheffield S1 4DP, S Yorkshire, England.
C3 University of London; King's College London; University of Sheffield
RP Harman, M (corresponding author), Kings Coll London, CREST Ctr, London WC2R 2LS, England.
EM mark.harman@kcl.ac.uk; p.mcminn@sheffield.ac.uk
OI Harman, Mark/0000-0002-5864-4488
FU EPSRC [EP/G009600/1] Funding Source: UKRI
CR Aguilar-Ruiz JS, 2001, INFORM SOFTWARE TECH, V43, P875, DOI 10.1016/S0950-5849(01)00193-8
   [Anonymous], DO178B RTCA
   [Anonymous], 023 NAT I STAND TECH
   [Anonymous], 2002, Genetic Algorithms: Principles and Perspectives: A Guide to GA Theory
   [Anonymous], 2007, P 2007 INT S SOFTW T, DOI DOI 10.1145/1273463.1273475
   [Anonymous], 1995, Ph.D. Thesis
   Antoniol G, 2005, PROC IEEE INT CONF S, P240
   Bagnall AJ, 2001, INFORM SOFTWARE TECH, V43, P883, DOI 10.1016/S0950-5849(01)00194-X
   BAKER JE, 1987, P 2 INT C GEN ALG TH
   Baresel A, 2003, LECT NOTES COMPUT SC, V2724, P2442
   Baresel Andre., 2002, Proceedings of the Genetic and Evolutionary Computation Conference, GECCO '02, P1329
   Bertolino A, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P85, DOI 10.1109/FOSE.2007.25
   Bottaci L., 2002, P GENETIC EVOLUTIONA, P1337
   Bouktif S, 2006, GECCO 2006: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOL 1 AND 2, P1885
   Briand LC, 2005, GECCO 2005: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOLS 1 AND 2, P1021
   *BRIT STAND I, 1998, BS 7925 1 VOC TERMS
   Canfora G, 2005, GECCO 2005: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOLS 1 AND 2, P1069
   Derderian K, 2006, COMPUT J, V49, P331, DOI [10.1093/comjnl/bxl003, 10.1093/comjnl/bx1003]
   Do HS, 2005, EMPIR SOFTW ENG, V10, P405, DOI 10.1007/s10664-005-3861-2
   Dolado JJ, 2000, IEEE T SOFTWARE ENG, V26, P1006, DOI 10.1109/32.879821
   Ferguson R., 1996, ACM Transactions on Software Engineering and Methodology, V5, P63, DOI 10.1145/226155.226158
   FINKELSTEIN A, 2008, P IEEE INT REQ ENG C
   Glass R. L., 2002, FACTS FALLACIES SOFT
   Greer D, 2004, INFORM SOFTWARE TECH, V46, P243, DOI 10.1016/j.infsof.2003.07.002
   Harman M, 2004, IEEE T SOFTWARE ENG, V30, P3, DOI 10.1109/TSE.2004.1265732
   Harman M, 2001, INFORM SOFTWARE TECH, V43, P833, DOI 10.1016/S0950-5849(01)00189-6
   HARMAN M., 2007, Proceedings of the the 6th joint meeting of the European software engineering conference and the ACM SIGSOFT symposium on The foundations of software engineering, P155, DOI DOI 10.1145/1287624.1287647
   Harman M, 2007, GECCO 2007: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOL 1 AND 2, P1106
   Harman M, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P342, DOI 10.1109/FOSE.2007.29
   Harman M, 2007, GECCO 2007: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOL 1 AND 2, P1098
   Holland J.H., 1992, Adaptation in Natural and Artificial Systems, DOI DOI 10.7551/MITPRESS/1090.001.0001
   Jia Y., 2008, P 8 INT WORK C SOURC
   Khoshgoftaar TM, 2004, IEEE T EVOLUT COMPUT, V8, P593, DOI 10.1109/TEVC.2004.837108
   Korel B., 1992, Software Testing, Verification and Reliability, V2, P203, DOI 10.1002/stvr.4370020405
   KOREL B, 1990, IEEE T SOFTWARE ENG, V16, P870, DOI 10.1109/32.57624
   Lakhotia Kiran., 2008, Proceedings of the Annual Conference on Genetic and Evolution- ary Computation (GECCO), P1759, DOI [10.1145/1389095.1389435, DOI 10.1145/1389095.1389435]
   Leffingwell D., 2003, Managing Software Requirements: A Use Case Approach
   Mahdavi K, 2003, PROC IEEE INT CONF S, P315, DOI 10.1109/ICSM.2003.1235437
   Mansour N, 2004, SOFTWARE QUAL J, V12, P121, DOI 10.1023/B:SQJO.0000024059.72478.4e
   McMinn P, 2006, EVOL COMPUT, V14, P41
   McMinn P, 2004, SOFTW TEST VERIF REL, V14, P105, DOI 10.1002/stvr.294
   MCMINN P, 2009, P GEN EV COMP C, P1689
   MCMINN P., 2006, Proceedings of the 2006 international symposium on Software testing and analysis, P13, DOI [10.1145/1146238.1146241, DOI 10.1145/1146238.1146241]
   McMinn P, 2009, ACM T SOFTW ENG METH, V18, DOI 10.1145/1525880.1525884
   Michael CC, 2001, IEEE T SOFTWARE ENG, V27, P1085, DOI 10.1109/32.988709
   Miller W., 1976, IEEE Transactions on Software Engineering, VSE-2, P223, DOI 10.1109/TSE.1976.233818
   Mitchell BS, 2006, IEEE T SOFTWARE ENG, V32, P193, DOI 10.1109/TSE.2006.31
   Mitchell M., 1992, P 1 EUR C ART LIF, P245
   Mühlenbein H, 1993, EVOL COMPUT, V1, P25, DOI 10.1162/evco.1993.1.1.25
   O'Keeffe M, 2006, 10TH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P247
   Pargas RoyP., 1999, Verification and Reliability, V9, P263
   Seng O, 2006, GECCO 2006: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOL 1 AND 2, P1909
   Tracey N, 2000, SOFTWARE PRACT EXPER, V30, P61, DOI 10.1002/(SICI)1097-024X(200001)30:1<61::AID-SPE292>3.0.CO;2-9
   WANG HC, 2006, P 2 TAIW C SOFTW ENG
   Wegener J, 2001, INFORM SOFTWARE TECH, V43, P841, DOI 10.1016/S0950-5849(01)00190-2
   Wegener J, 1997, SOFTWARE QUAL J, V6, P127, DOI 10.1023/A:1018551716639
   WHITLEY D, 1989, PROCEEDINGS OF THE THIRD INTERNATIONAL CONFERENCE ON GENETIC ALGORITHMS, P116
   Xanthakis S., 1992, 5 INT C SOFTWARE ENG, P625
   Xiao M, 2007, EMPIR SOFTW ENG, V12, P183, DOI 10.1007/s10664-006-9026-0
NR 59
TC 229
Z9 253
U1 1
U2 28
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAR-APR
PY 2010
VL 36
IS 2
BP 226
EP 247
DI 10.1109/TSE.2009.71
PG 22
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 574ZH
UT WOS:000276032300008
DA 2024-07-18
ER

PT J
AU Malavolta, I
   Muccini, H
   Pelliccione, P
   Tamburri, DA
AF Malavolta, Ivano
   Muccini, Henry
   Pelliccione, Patrizio
   Tamburri, Damien Andrew
TI Providing Architectural Languages and Tools Interoperability through
   Model Transformation Technologies
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Software architectures; interoperability; domain-specific architectures;
   design tools and techniques; model transformations
ID FRAMEWORK
AB Many architectural languages have been proposed in the last 15 years, each one with the chief aim of becoming the ideal language for specifying software architectures. What is evident nowadays, instead, is that architectural languages are defined by stakeholder concerns. Capturing all such concerns within a single, narrowly focused notation is impossible. At the same time, it is also impractical to define and use a "universal" notation, such as UML. As a result, many domain-specific notations for architectural modeling have been proposed, each one focusing on a specific application domain, analysis type, or modeling environment. As a drawback, a proliferation of languages exists, each one with its own specific notation, tools, and domain specificity. No effective interoperability is possible to date. Therefore, if a software architect has to model a concern not supported by his own language/tool, he has to manually transform (and, eventually, keep aligned) the available architectural specification into the required language/tool. This paper presents DUALLY, an automated framework that allows architectural languages and tools interoperability. Given a number of architectural languages and tools, they can all interoperate thanks to automated model transformation techniques. DUALLY is implemented as an Eclipse plugin. Putting it in practice, we apply the DUALLY approach to the Darwin/FSP ADL and to a UML2.0 profile for software architectures. By making use of an industrial complex system, we transform a UML software architecture specification in Darwin/FSP, make some verifications by using LTSA, and reflect changes required by the verifications back to the UML specification.
C1 [Malavolta, Ivano; Muccini, Henry; Pelliccione, Patrizio; Tamburri, Damien Andrew] Univ Aquila, Dipartimento Informat, I-67100 Laquila, Italy.
C3 University of L'Aquila
RP Malavolta, I (corresponding author), Univ Aquila, Dipartimento Informat, Via Vetoio, I-67100 Laquila, Italy.
EM ivano.malavolta@di.univaq.it; henry.muccini@di.univaq.it;
   patrizio.pelliccione@di.univaq.it; damien.tamburri@di.univaq.it
RI Tamburri, Damian Andrew/AAJ-2507-2021; Pelliccione,
   Patrizio/Q-5118-2019; Pelliccione, Patrizio/A-4105-2008; Malavolta,
   Ivano/E-9018-2017
OI Tamburri, Damian Andrew/0000-0003-1230-8961; Pelliccione,
   Patrizio/0000-0002-5438-2281; Pelliccione, Patrizio/0000-0002-5438-2281;
   Muccini, Henry/0000-0001-6365-6515; Malavolta, Ivano/0000-0001-5773-8346
FU Adaptive infRasTructure for DECentralized Organizations (ARTDECO), an
   Italian [FIRB 2005-2009]
FX This work is partially supported by the Adaptive infRasTructure for
   DECentralized Organizations (ARTDECO), an Italian FIRB 2005-2009
   Project. The authors would like to thank Davide Di Ruscio and Nenad
   Medvidovic for their valuable support and comments.
CR Bézivin J, 2005, LECT NOTES COMPUT SC, V3599, P33
   BEZIVIN J, 2004, P INT C OOPSLA GEN P
   Bézivin J, 2006, LECT NOTES COMPUT SC, V4199, P440
   Colangelo D, 2006, LECT NOTES COMPUT SC, V4229, P243
   Czarnecki K, 2006, IBM SYST J, V45, P621, DOI 10.1147/sj.453.0621
   Dashofy E., 2001, P WORK IEEE IFIP C S
   Dashofy EM, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P266, DOI 10.1109/ICSE.2002.1007974
   DELFABRO MD, 2005, P PREM JOURN ING DIR
   EDWARDS G, 2008, P IEEE ACM INT C AUT
   FABRO MDD, 2007, P ACM S APPL COMP
   FEILER HP, 2003, P IEEE REAL TIM EMB
   Feiler PH, 2007, IEEE INT C ENG COMP, P365, DOI 10.1109/ICECCS.2007.25
   GARLAN D, 2000, P INT C UN MOD LANG
   Garlan D, 2000, FDN COMPONENT BASED, P47
   Garlan D., 1994, ADV SOFTWARE ENG KNO, P1
   Garlan David., 1997, Proceedings of the 1997 conference of the Centre for Advanced Studies on Collaborative research, page, P7
   Harel D., 1996, ACM Transactions on Software Engineering and Methodology, V5, P293, DOI 10.1145/235321.235322
   Hettel T., 2008, P INT C MOD TRANSF J
   Ivers J., 2004, CMUSEI2004TR008
   JONKERS H, 2003, P INT ENT DISTR OBJ
   JOUAULT F, 2006, P INT C FORM METH OP
   Jouault F, 2006, SAT EV MODELS 2005 C
   KRUCHTEN PB, 1995, IEEE SOFTWARE, V12, P42, DOI 10.1109/52.469759
   Magee J., 1996, Software Engineering Notes, V21, P3, DOI 10.1145/250707.239104
   MAGEE J, 1999, P 21 INT C SOFTW ENG, P634
   MAGEE J, 1998, P IEEE INT WORKSH SO
   Magee J Kramer J., 1999, CONCURRENCY STATE MO
   Medvidovic N, 2002, ACM T SOFTW ENG METH, V11, P2, DOI 10.1145/504087.504088
   Medvidovic N, 2000, IEEE T SOFTWARE ENG, V26, P70, DOI 10.1109/32.825767
   Medvidovic N, 2007, INFORM SOFTWARE TECH, V49, P12, DOI 10.1016/j.infsof.2006.08.006
   Pelliccione P, 2009, IEEE T SOFTWARE ENG, V35, P325, DOI 10.1109/TSE.2008.104
   Perry D. E., 1992, SIGSOFT Software Engineering Notes, V17, P40, DOI 10.1145/141874.141884
   Pinto M, 2003, LECT NOTES COMPUT SC, V2830, P118
   Shaw M., 1996, SOFTWARE ARCHITECTUR
   SMEDA TKA, 2005, J COMPUTER SCI, V1, P454
NR 35
TC 39
Z9 44
U1 0
U2 6
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JAN-FEB
PY 2010
VL 36
IS 1
BP 119
EP 140
DI 10.1109/TSE.2009.51
PG 22
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 548TI
UT WOS:000273988900009
DA 2024-07-18
ER

PT J
AU Hamill, M
   Goseva-Popstojanova, K
AF Hamill, Maggie
   Goseva-Popstojanova, Katerina
TI Common Trends in Software Fault and Failure Data
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article; Proceedings Paper
CT 23rd IEEE International Conference on Software Maintenance
CY OCT 02-05, 2007
CL Paris, FRANCE
SP IEEE, IEEE Comp Soc, IEEE France Sect, TCSE, IEEE Comp Soc, Tech Council Software Engn, Reeng Forum, Univ Waterloo, Univ Studi Sannio
DE Software faults and failures; fault location; fault types; software
   fault distribution; software reliability; empirical studies
ID QUANTITATIVE-ANALYSIS; CLASSIFICATION
AB The benefits of the analysis of software faults and failures have been widely recognized. However, detailed studies based on empirical data are rare. In this paper, we analyze the fault and failure data from two large, real-world case studies. Specifically, we explore: 1) the localization of faults that lead to individual software failures and 2) the distribution of different types of software faults. Our results show that individual failures are often caused by multiple faults spread throughout the system. This observation is important since it does not support several heuristics and assumptions used in the past. In addition, it clearly indicates that finding and fixing faults that lead to such software failures in large, complex systems are often difficult and challenging tasks despite the advances in software development. Our results also show that requirement faults, coding faults, and data problems are the three most common types of software faults. Furthermore, these results show that contrary to the popular belief, a significant percentage of failures are linked to late life cycle activities. Another important aspect of our work is that we conduct intra-and interproject comparisons, as well as comparisons with the findings from related studies. The consistency of several main trends across software systems in this paper and several related research efforts suggests that these trends are likely to be intrinsic characteristics of software faults and failures rather than project specific.
C1 [Hamill, Maggie; Goseva-Popstojanova, Katerina] W Virginia Univ, Lane Dept Comp Sci & Elect Engn, Morgantown, WV 26506 USA.
C3 West Virginia University
RP Hamill, M (corresponding author), W Virginia Univ, Lane Dept Comp Sci & Elect Engn, Engn Sci Bldg,POB 6109, Morgantown, WV 26506 USA.
EM mhamill@mix.wvu.edu; katerina.goseva@mail.wvu.edu
OI Goseva-Popstojanova, Katerina/0000-0003-4683-672X
CR Andersson C, 2007, IEEE T SOFTWARE ENG, V33, P273, DOI 10.1109/TSE.2007.1005
   [Anonymous], 2007, Software for Dependable Systems: Sufficient Evidence?
   [Anonymous], 2002, P 2002 ACM SIGSOFT I
   BASILI VR, 1984, COMMUN ACM, V27, P42, DOI 10.1145/69605.2085
   Basili VR, 1996, PROC INT CONF SOFTW, P442, DOI 10.1109/ICSE.1996.493439
   Boehm B, 2001, COMPUTER, V34, P135, DOI 10.1109/2.962984
   Boehm B. W., 1975, IEEE Transactions on Software Engineering, VSE-1, P125, DOI 10.1109/TSE.1975.6312826
   CHILLAREGE R, 1992, IEEE T SOFTWARE ENG, V18, P943, DOI 10.1109/32.177364
   Christmansson J, 1996, DIG PAP INT SYMP FAU, P304, DOI 10.1109/FTCS.1996.534615
   Duraes JA, 2006, IEEE T SOFTWARE ENG, V32, P849, DOI 10.1109/TSE.2006.113
   Endres A., 1975, IEEE Transactions on Software Engineering, VSE-1, P140, DOI 10.1109/TSE.1975.6312834
   Endres A., 2003, A Handbook of Software and Systems Engineering: Empirical Observations, Laws, and Theories
   Fenton NE, 2000, IEEE T SOFTWARE ENG, V26, P797, DOI 10.1109/32.879815
   Fenton NE, 1999, IEEE T SOFTWARE ENG, V25, P675, DOI 10.1109/32.815326
   Goseva-Popstojanova K, 2001, PERFORM EVALUATION, V45, P179, DOI 10.1016/S0166-5316(01)00034-7
   Goseva-Popstojanova K, 2006, I C DEPEND SYS NETWO, P505, DOI 10.1109/DSN.2006.2
   Goseva-Popstojanova K, 2005, 16TH IEEE INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P43, DOI 10.1109/ISSRE.2005.25
   GREENWELL WS, 2003, P 22 INT C COMP SAF
   Holzmann GJ, 2007, COMPUTER, V40, P111, DOI 10.1109/MC.2007.419
   Leszak M, 2002, J SYST SOFTWARE, V61, P173, DOI 10.1016/S0164-1212(01)00146-7
   Leveson N.G., 1995, Safeware: System Safety and Computers
   Lutz RR, 2004, IEEE SOFTWARE, V21, P19, DOI 10.1109/MS.2004.1270757
   Lutz RR, 2004, IEEE T SOFTWARE ENG, V30, P172, DOI 10.1109/TSE.2004.1271171
   OSTRAND TJ, 2004, P ACM INT S SOFTW TE
   Yu WD, 1998, BELL LABS TECH J, V3, P3, DOI 10.1002/bltj.2101
NR 25
TC 82
Z9 101
U1 3
U2 23
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUL-AUG
PY 2009
VL 35
IS 4
BP 484
EP 496
DI 10.1109/TSE.2009.3
PG 13
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Engineering
GA 474TB
UT WOS:000268305800005
DA 2024-07-18
ER

PT J
AU Abraham, R
   Erwig, M
AF Abraham, Robin
   Erwig, Martin
TI Mutation Operators for Spreadsheets
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE End-user software engineering; spreadsheets; end-user programming
ID GENERATION; LANGUAGE
AB Based on 1) research into mutation testing for general-purpose programming languages and 2) spreadsheet errors that have been reported in the literature, we have developed a suite of mutation operators for spreadsheets. We present an evaluation of the mutation adequacy of definition-use adequate test suites generated by a constraint-based automatic test-case generation system we have developed in previous work. The results of the evaluation suggest additional constraints that can be incorporated into the system to target mutation adequacy. In addition to being useful in mutation testing of spreadsheets, the operators can be used in the evaluation of error-detection tools and also for seeding spreadsheets with errors for empirical studies. We describe two case studies where the suite of mutation operators helped us carry out such empirical evaluations. The main contribution of this paper is a suite of mutation operators for spreadsheets that can be used for performing empirical evaluations of spreadsheet tools to indicate ways in which the tools can be improved.
C1 [Abraham, Robin] Microsoft Corp, Redmond, WA 98052 USA.
   [Erwig, Martin] Oregon State Univ, Dept Elect & Comp Engn, Kelly Engn Ctr, Corvallis, OR 97330 USA.
C3 Microsoft; Oregon State University
RP Abraham, R (corresponding author), Microsoft Corp, 3141 3028 147th Pl NE, Redmond, WA 98052 USA.
EM Robin.Abraham@microsoft.com; erwig@eecs.oregonstate.edu
OI Abraham, Robin/0000-0003-1915-8118
FU US National Science Foundation [ITR-0325273]; EUSES Consortium
FX This work was partially supported by the US National Science Foundation
   under Grant ITR-0325273 and by the EUSES Consortium
   (http://EUSESconsortium.org).
CR Abraham R., 2006, 28th International Conference on Software Engineering Proceedings, P182, DOI 10.1145/1134285.1134312
   Abraham R, 2005, 2005 IEEE SYMPOSIUM ON VISUAL LANGUAGE AND HUMAN-CENTRIC COMPUTING, PROCEEDINGS, P37, DOI 10.1109/VLHCC.2005.42
   Abraham R, 2005, 2005 IEEE SYMPOSIUM ON VISUAL LANGUAGE AND HUMAN-CENTRIC COMPUTING, PROCEEDINGS, P189, DOI 10.1109/VLHCC.2005.70
   Abraham R, 2004, 2004 IEEE SYMPOSIUM ON VISUAL LANGUAGES AND HUMAN CENTRIC COMPUTING: PROCEEDINGS, P165, DOI 10.1109/VLHCC.2004.29
   Abraham R., 2006, PPDP 2006. Proceedings of the Eighth ACM SIGPLAN Symposium on Principles and Practice of Declarative Programming, P73, DOI 10.1145/1140335.1140346
   Abraham R, 2007, J VISUAL LANG COMPUT, V18, P71, DOI 10.1016/j.jvlc.2006.06.001
   Abraham R, 2007, PROC INT CONF SOFTW, P251
   Abraham R, 2006, IEEE SYMPOSIUM ON VISUAL LANGUAGES AND HUMAN-CENTRIC COMPUTING, PROCEEDINGS, P43
   Acree A. T., 1980, On Mutation
   Ahmad Y, 2003, 18TH IEEE INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P174
   ALLWOOD CM, 1984, COGNITIVE SCI, V8, P413, DOI 10.1016/S0364-0213(84)80009-9
   Anbalagan P., 2006, P 2 WORKSH MUT AN
   Andrews JH, 2006, IEEE T SOFTWARE ENG, V32, P608, DOI 10.1109/TSE.2006.83
   Andrews JH, 2005, PROC INT CONF SOFTW, P402, DOI 10.1145/1062455.1062530
   [Anonymous], SOFTWARE
   [Anonymous], 1979, Infotech State of the Art Report, Software Testing
   [Anonymous], P ANN C EUR SPREADSH
   [Anonymous], 2003, SOFTVIS 03, DOI DOI 10.1145/774833.774851
   Antoniu T, 2004, PROC INT CONF SOFTW, P439, DOI 10.1109/ICSE.2004.1317466
   Budd T., 1980, THESIS YALE U
   Budd T.A., 1980, POPL '80: Proceedings of the 7th ACM SIGPLAN-SIGACT symposium on Principles of programming languages, (New York, NY, USA), P220
   BUDD TA, 1978, P NAT COMP C, P623
   Burnett M, 2002, IEEE T SOFTWARE ENG, V28, P576, DOI 10.1109/TSE.2002.1010060
   Burnett M, 2003, PROC INT CONF SOFTW, P93, DOI 10.1109/ICSE.2003.1201191
   Burnett M, 2001, J FUNCT PROGRAM, V11, P155, DOI 10.1017/S0956796800003828
   Coblenz MJ, 2005, 2005 IEEE SYMPOSIUM ON VISUAL LANGUAGE AND HUMAN-CENTRIC COMPUTING, PROCEEDINGS, P314, DOI 10.1109/VLHCC.2005.67
   CROLL GJ, 2005, P S EUR SPREADSH RIS
   Delamaro M.E., 1996, P C PERFORMABILITY C, P79
   DEMILLO RA, 1978, COMPUTER, V11, P34, DOI 10.1109/C-M.1978.218136
   DEMILLO RA, 1991, IEEE T SOFTWARE ENG, V17, P900, DOI 10.1109/32.92910
   DITLEA S, 1987, PERS COMPUT, V11, P60
   ENGELS G, 2005, P 20 IEEE ACM INT C, V20, P124
   Erwig M, 2005, PROC INT CONF SOFTW, P136
   Erwig M, 2006, J FUNCT PROGRAM, V16, P293, DOI 10.1017/S0956796805005794
   Erwig Martin., 2002, PADL 02 P 4 INT S PR, P173
   *EUSES, 2008, END US SHAP EFF SOFT
   *EUSPRIG, 2008, EUR SPREADSH RISKS I
   Fisher M, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P141, DOI 10.1109/ICSE.2002.1007963
   Fisher M, 2006, ACM T SOFTW ENG METH, V15, P150, DOI 10.1145/1131421.1131423
   FRANKLIN JF, 1993, ECOL APPL, V3, P202, DOI 10.2307/1941820
   HAMLET RG, 1977, IEEE T SOFTWARE ENG, V3, P279, DOI 10.1109/TSE.1977.231145
   Hierons R.M., 1999, J SOFTW TEST VERIFIC, V9, P233, DOI 10.1002/(SICI)1099-1689(199912)9:43.0.CO;2-3
   HOWDEN WE, 1982, IEEE T SOFTWARE ENG, V8, P371, DOI 10.1109/TSE.1982.235571
   ISAKOWITZ T, 1995, ACM T INFORM SYST, V13, P1, DOI 10.1145/195705.195708
   KING KN, 1991, SOFTWARE PRACT EXPER, V21, P685, DOI 10.1002/spe.4380210704
   Lawrance J, 2006, IEEE SYMPOSIUM ON VISUAL LANGUAGES AND HUMAN-CENTRIC COMPUTING, PROCEEDINGS, P35
   Ma YS, 2005, SOFTW TEST VERIF REL, V15, P97, DOI 10.1002/stvr.308
   Mansour N, 2006, INFORM SOFTWARE TECH, V48, P31, DOI 10.1016/j.infsof.2005.02.007
   MASON D, 1989, INTERFACE, P82
   Mathur A. P., 1991, Proceedings of the Fifteenth Annual International Computer Software and Applications Conference (Cat. No.91CH3023-9), P604, DOI 10.1109/CMPSAC.1991.170248
   Mittermeir R, 2002, NINTH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P221, DOI 10.1109/WCRE.2002.1173080
   Offutt A. J., 1992, ACM Transactions on Software Engineering and Methodology, V1, P5, DOI 10.1145/125489.125473
   Offutt A. J., 1996, ACM Transactions on Software Engineering and Methodology, V5, P99, DOI 10.1145/227607.227610
   Offutt AJ, 1996, SOFTWARE PRACT EXPER, V26, P165, DOI 10.1002/(SICI)1097-024X(199602)26:2<165::AID-SPE5>3.0.CO;2-K
   OFFUTT AJ, 2000, MUTATION 2000 MUTATI, P45
   OFFUTT AJ, 1991, J SYSTEMS INTEGRATIO, V1, P391
   OFFUTT AJ, 2006, P 2 WORKSH MUT AN
   Panko RR, 1999, J MANAGE INFORM SYST, V16, P159, DOI 10.1080/07421222.1999.11518250
   Panko RR, 1996, P 29 HAW INT C SYST
   PANKO RR, 2000, P S EUR SPREADSH RIS
   Phalgune A, 2005, 2005 IEEE SYMPOSIUM ON VISUAL LANGUAGE AND HUMAN-CENTRIC COMPUTING, PROCEEDINGS, P45, DOI 10.1109/VLHCC.2005.40
   POWELL SG, 2006, CRITICAL REV LIT SPR
   Powell Stephen G., 2004, The art of modeling with spreadsheets: Management science, spreadsheet engineering, and modeling craft
   PRABHAKARAO S, 2003, P IEEE INT S HUM CEN, P203
   Purser M., 2006, Proceedings of the European Spreadsheet Risk Interest Group Annual Conference, Cambridge, UK, P185
   Rajalingham K., 2000, Proceedings of the 33rd Hawaii International Conference on System Sciences, P1
   RONEN B, 1989, COMMUN ACM, V32, P84, DOI 10.1145/63238.63244
   Rothermel G, 2001, ACM T SOFTW ENG METH, V10, P110, DOI 10.1145/366378.366385
   Ruthruff JR, 2005, J VISUAL LANG COMPUT, V16, P3, DOI 10.1016/j.jvlc.2004.07.001
   SAARILUOMA P, 1994, INT J HUM-COMPUT ST, V41, P915, DOI 10.1006/ijhc.1994.1086
   Sajaniemi J, 2000, J VISUAL LANG COMPUT, V11, P49, DOI 10.1006/jvlc.1999.0142
   Scaffidi C, 2005, 2005 IEEE SYMPOSIUM ON VISUAL LANGUAGE AND HUMAN-CENTRIC COMPUTING, PROCEEDINGS, P207, DOI 10.1109/VLHCC.2005.34
   SIMKIN MG, 1987, J ACCOUNTANCY, V164, P130
   TEO T, 2000, ACCOUNTING MANAGEMEN, V9, P141
   TEO T, 1997, P 30 HAW INT C SYST, P25
   Tuya J, 2007, INFORM SOFTWARE TECH, V49, P398, DOI 10.1016/j.infsof.2006.06.009
   UNTCH R, 1993, P 1993 INT S SOFTW T, P139, DOI DOI 10.1145/154183.154265
   Wah KSHT, 2000, SOFTW TEST VERIF REL, V10, P3, DOI 10.1002/(SICI)1099-1689(200003)10:1<3::AID-STVR196>3.0.CO;2-P
   Wah KSHT, 2003, SCI COMPUT PROGRAM, V48, P119, DOI 10.1016/S0167-6423(03)00022-4
   WEYUKER EJ, 1991, P 4 S SOFTW TEST AN, P154
   WILLIAMS T, 1987, SPREADSHEET STANDARD
   WONG WE, 1997, P 3 ISSAT INT C REL, P254
   WOODWARD MR, 1993, INFORM SOFTWARE TECH, V35, P163, DOI 10.1016/0950-5849(93)90053-6
   Xu WZ, 2005, 16TH IEEE INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P257, DOI 10.1109/ISSRE.2005.44
   YODER AG, 1994, PROCEEDINGS OF THE 1994 INTERNATIONAL CONFERENCE ON COMPUTER LANGUAGES, P20, DOI 10.1109/ICCL.1994.288396
   Zhu H, 1997, ACM COMPUT SURV, V29, P366, DOI 10.1145/267580.267590
NR 86
TC 46
Z9 53
U1 0
U2 9
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JAN-FEB
PY 2009
VL 35
IS 1
BP 94
EP 108
DI 10.1109/TSE.2008.73
PG 15
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 431UK
UT WOS:000265089400006
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Lui, KM
   Chan, KCC
   Nosek, JT
AF Lui, Kim Man
   Chan, Keith C. C.
   Nosek, John Teofil
TI The effect of pairs in program design tasks
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE pair programming; software design; programming aptitude test;
   programming experiment; group dynamics
ID 2 HEADS; PERFORMANCE; COLLABORATION; PRODUCTIVITY; IMPACT
AB Pair programming involves two developers simultaneously collaborating with each other on the same programming task to design and code a solution. Algorithm design and its implementation are normally interwoven in that implementation often provides feedback to enhance the design. Previous controlled pair programming experiments did not explore the efficacy of pairs versus individuals in program design-related tasks separately from coding. Variations in programmer skills in a particular language or an integrated development environment and the understanding of programming instructions can mask the skill of subjects in program design-related tasks. Programming aptitude tests ( PATs) have been shown to correlate with programming performance. PATs do not require understanding of programming instructions and do not require a skill in any specific computer language. Two controlled experiments were conducted, with full-time professional programmers being the subjects who worked on increasingly complex programming aptitude tasks related to problem solving and algorithmic design. In both experiments, pairs significantly outperformed individuals, providing evidence of the value of pairs in program design-related tasks.
C1 [Lui, Kim Man; Chan, Keith C. C.] Hong Kong Polytech Univ, Dept Comp, Hunghom, Hong Kong, Peoples R China.
   [Nosek, John Teofil] Temple Univ, Dept Comp & Informat Sci, Philadelphia, PA 19122 USA.
C3 Hong Kong Polytechnic University; Pennsylvania Commonwealth System of
   Higher Education (PCSHE); Temple University
RP Lui, KM (corresponding author), Hong Kong Polytech Univ, Dept Comp, Hunghom, Hong Kong, Peoples R China.
EM cskmlui@comp.polu.edu.hk; cskcchan@comp.polu.edu.hk; nosek@temple.edu
RI Nosek, John/HQZ-7715-2023; Chan, K.C./A-2311-2014
OI Chan, Keith C C/0000-0003-1709-2637; CHAN, Keith
   C.C./0000-0001-7962-6564; Keith, Chan/0000-0001-7296-873X
CR ALLEN R, 2002, EXCEL IQ TESTS
   Arisholm E, 2007, IEEE T SOFTWARE ENG, V33, P65, DOI 10.1109/TSE.2007.17
   BARNETT G, 2002, APPL DEV ADVISOR
   BATEMAN CR, 1973, P 5 ANN M AM I DEC S
   BAUER R, 1968, EDUC PSYCHOL MEAS, V28, P1159, DOI 10.1177/001316446802800416
   Bryant S, 2004, 2004 IEEE SYMPOSIUM ON VISUAL LANGUAGES AND HUMAN CENTRIC COMPUTING: PROCEEDINGS, P55, DOI 10.1109/VLHCC.2004.20
   Calantone RJ, 2000, IEEE T ENG MANAGE, V47, P232, DOI 10.1109/17.846790
   CIOLKOWSKI M, 2002, P 1 INT WORKSH EMP S
   COCKBURN A, 2001, P 2 INT C EXTR PROGR
   Cockburn A., 2005, Crystal clear : A human-powered methodology for small teams
   Constantine L., 1995, Constantine on Peopleware
   COOKE DE, 2003, CONCISE INTRO COMPUT
   DACONTA MC, 1996, JAVA C CPLUS PROGRAM
   DENELSKY GY, 1974, PERS PSYCHOL, V27, P129, DOI 10.1111/j.1744-6570.1974.tb02069.x
   FLOR N, 1991, P 4 ANN WORKSH EMP S
   Flor NV, 1998, INT J HUM-COMPUT ST, V49, P201, DOI 10.1006/ijhc.1998.0203
   Forsyth D.R., 1999, GROUP DYNAMICS, VThird
   Green ThomasRG., 2000, P WORKING C ADV VISU, P21
   HOLLENBECK GP, 1965, PERS PSYCHOL, V18, P101, DOI 10.1111/j.1744-6570.1965.tb00269.x
   HOLLOMAN CR, 1974, PERS PSYCHOL, V24, P489
   Hulkko H, 2005, PROC INT CONF SOFTW, P495
   HUOMAN J, 1986, THESIS J JOENSUU
   JACKSON D, 2006, SOFTWARE ABSTRANCTIO
   Janis IrvingL., 1982, GROUPTHINK
   KATZ A, 1962, 126 US ARM PERS RES
   KEEFER G, 2002, P 6 C QUAL ENG SOFTW, P129
   KEEFER G, 2003, P INT C PRACT SOFTW
   KEEFER G, 2005, CUTTER IT J, V18, P14
   Kent B., 2000, EXTREME PROGRAMMING
   Lazonder AW, 2005, BRIT J EDUC TECHNOL, V36, P465, DOI 10.1111/j.1467-8535.2005.00478.x
   Lorenzen T., 2006, ACM SIGCSE B, V38, P69
   Lui KM, 2006, INT J HUM-COMPUT ST, V64, P915, DOI 10.1016/j.ijhcs.2006.04.010
   LUI KM, 2006, P INT SOFTW PROC WOR, P115
   MARTIN RM, 2001, AGILE SOFTWARE DEV P
   MAYER DB, 1968, P 1968 23 ACM NAT C, P657
   MENAMARA WJ, 1961, PERS PSYCHOL, V14, P39
   Miller R.G., 1986, ANOVA BASICS APPL ST
   Müller MM, 2006, INFORM SOFTWARE TECH, V48, P335, DOI 10.1016/j.infsof.2005.09.008
   Müller MM, 2005, J SYST SOFTWARE, V78, P166, DOI 10.1016/j.jss.2004.12.019
   Müller MM, 2004, EMPIR SOFTW ENG, V9, P335, DOI 10.1023/B:EMSE.0000039883.47173.39
   Müller MM, 2001, PROC INT CONF SOFTW, P537, DOI 10.1109/ICSE.2001.919128
   MUNZERT A, 1994, TEST YOUR IQ, P112
   NAWROCKI J, 2005, P EUROSPI BUD NOV, P28
   Nosek JT, 1998, COMMUN ACM, V41, P105, DOI 10.1145/272287.272333
   OLIVER TC, 1963, EDUC PSYCHOL MEAS, V23, P823, DOI 10.1177/001316446302300420
   Parrish A, 2004, IEEE SOFTWARE, V21, P76, DOI 10.1109/MS.2004.1331306
   Pate M.L., 2004, Journal of Agricultural Education, V45, P1, DOI DOI 10.5032/JAE.2004.04001
   POFF MA, 2003, THESIS FLORIDA I TEC
   Puncochar JM, 2004, J EDUC PSYCHOL, V96, P582, DOI 10.1037/0022-0663.96.3.582
   Snyder Mike., 2006, Working with Microsoft Dynamics CRM 3.0
   Stephens Matt, 2003, Extreme Programming Refactored: The XP
   TUKIAINEN M, 2002, P 14 WORKSH PSYCH PR, P45
   VANDERWIL A, 2002, WORKFLOW MANAGEMENT
   *WIK, 2007, VIS BAS CONTR
   Williams L, 2000, IEEE SOFTWARE, V17, P19, DOI 10.1109/52.854064
   WILLIAMS LA, 2000, THESIS U UTAH
   Williams Laurie A., 2003, Pair programming illuminated
   WOLFE JM, 1970, BUSINESS AUTOMATION, V17, P36
   WOLFE JM, 1971, P 25 ACM CSC ER ANN, P268
NR 59
TC 25
Z9 26
U1 0
U2 11
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAR-APR
PY 2008
VL 34
IS 2
BP 197
EP 211
DI 10.1109/TSE.2007.70755
PG 15
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 276SC
UT WOS:000254161500003
DA 2024-07-18
ER

PT J
AU Masri, W
   Podgurski, A
   Leon, D
AF Masri, Wes
   Podgurski, Andy
   Leon, David
TI An empirical study of test case filtering techniques based on exercising
   information flows
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE information flow; dynamic slicing; test case filtering; test suite
   minimization; coverage-based filtering; distribution-based-filtering;
   software testing; empirical studies
ID PROGRAM DEPENDENCE GRAPH; MINIMIZATION
AB Some software defects trigger failures only when certain local or nonlocal program interactions occur. Such interactions are modeled by the closely related concepts of information flows, program dependences, and program slices. The latter concepts underlie a 78variety of proposed test data adequacy criteria, and they form a potentially important basis for filtering existing test cases. We report the results of an empirical study of several test case filtering techniques that are based on exercising information flows. Both coverage-based and profile-distribution-based filtering techniques are considered. They are compared to filtering techniques based on exercising simpler program elements, such as basic blocks, branches, function calls, and call pairs, with respect to their effectiveness for revealing defects.
C1 Amer Univ Beirut, Dept Comp Sci, Beirut, Lebanon.
   Case Western Reserve Univ, Dept Elect Engn & Comp Sci, Cleveland, OH 44106 USA.
   Corporac NGS, Altavista Puerto Ordaz 8050, Venezuela.
C3 American University of Beirut; University System of Ohio; Case Western
   Reserve University
RP Masri, W (corresponding author), Amer Univ Beirut, Dept Comp Sci, POB 11-0236, Beirut, Lebanon.
EM wm13@aub.edu.lb; andy@eecs.case.edu; dzleon@gmail.com
RI Masri, Wes/A-1786-2013
CR Agrawal H., 1993, Proceedings. Conference on Software Maintenance 1993. CSM-93 (Cat. No.93CH3360-5), P348, DOI 10.1109/ICSM.1993.366927
   [Anonymous], P 24 INT C SOFTW ENG
   [Anonymous], 1997, APPROXIMATION ALGORI
   Bates S., 1993, Conference Record of the Twentieth Annual ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages, P384, DOI 10.1145/158511.158694
   *BCEL, 2005, AP JAK PROJ
   CLARKE LA, 1989, IEEE T SOFTWARE ENG, V15, P1318, DOI 10.1109/32.41326
   DENNING DE, 1977, COMMUN ACM, V20, P504, DOI 10.1145/359636.359712
   Dickinson W, 2001, PROC INT CONF SOFTW, P339, DOI 10.1109/ICSE.2001.919107
   Dickinson W., 2001, ESEC FSE 01, P246, DOI DOI 10.1145/503209.503243
   Elbaum S, 2002, IEEE T SOFTWARE ENG, V28, P159, DOI 10.1109/32.988497
   FERRANTE J, 1987, ACM T PROGR LANG SYS, V9, P319, DOI 10.1145/24039.24041
   Frank MP, 1998, NANOTECHNOLOGY, V9, P162, DOI 10.1088/0957-4484/9/3/005
   FRANKL PG, 2000, P ACM INT S SOFTW TE, P124
   Graves TL, 2001, ACM T SOFTW ENG METH, V10, P184, DOI 10.1145/367008.367020
   Gupta KC, 1996, INT J MICROWAVE MILL, V6, P83
   HAROLD MJ, 2000, J SOFTWARE TESTING V, V10, P171
   KOREL B, 1988, INFORM PROCESS LETT, V29, P155, DOI 10.1016/0020-0190(88)90054-3
   KOREL B, 1987, INFORM PROCESS LETT, V24, P103, DOI 10.1016/0020-0190(87)90102-5
   KOREL B, 1994, P INT S SOFTW TEST A, P666
   LASKI JW, 1983, IEEE T SOFTWARE ENG, V9, P347, DOI 10.1109/TSE.1983.236871
   Leon D, 2005, PROC INT CONF SOFTW, P412
   Leon D, 2003, ISSRE 2003: 14TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P442, DOI 10.1109/ISSRE.2003.1251065
   Leon D., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, P116, DOI 10.1109/ICSE.2000.870403
   Masri W, 2004, 15TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P198, DOI 10.1109/ISSRE.2004.17
   MASRI W, 2006, P 4 INT WORKSH DYN A
   MASRI W, 2006, P 17 IEEE INT S SOFT
   Masri W., 2005, P 2005 WORKSHOP SOFT, P1
   *MIT I NATL RECH I, 1998, JTIDY WORLD WID WEB
   MORELL LJ, 1990, IEEE T SOFTWARE ENG, V16, P844, DOI 10.1109/32.57623
   NTAFOS SC, 1984, IEEE T SOFTWARE ENG, V10, P795, DOI 10.1109/TSE.1984.5010308
   Podgurski A, 2003, PROC INT CONF SOFTW, P465, DOI 10.1109/ICSE.2003.1201224
   PODGURSKI A, 1990, IEEE T SOFTWARE ENG, V16, P965, DOI 10.1109/32.58784
   RAPPS S, 1985, IEEE T SOFTWARE ENG, V11, P367, DOI 10.1109/TSE.1985.232226
   Rothermel G, 1998, PROC IEEE INT CONF S, P34, DOI 10.1109/ICSM.1998.738487
   Rothermel G, 2001, IEEE T SOFTWARE ENG, V27, P929, DOI 10.1109/32.962562
   Rothermel G., 1993, Proceedings. Conference on Software Maintenance 1993. CSM-93 (Cat. No.93CH3360-5), P358, DOI 10.1109/ICSM.1993.366926
   ROTHERMEL G, 1994, P 1994 INT S SOFTW T, P169
   SINHA S, 2000, ACM T SOFTW ENG METH, P209
   *SIR, 2006, SOFTW ART INFR REP
   *SUN MICR, JAV LANG SPEC
   THOMPSON MC, 1993, P ACM INT S SOFTW TE, P182
   WEISER M, 1984, IEEE T SOFTWARE ENG, V10, P352, DOI 10.1109/TSE.1984.5010248
   Wong WE, 1997, P INT COMP SOFTW APP, P522, DOI 10.1109/CMPSAC.1997.625062
   2005, XERCES APACHE XML PR
NR 44
TC 49
Z9 54
U1 0
U2 7
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUL
PY 2007
VL 33
IS 7
BP 454
EP 477
DI 10.1109/TSE.2007.1020
PG 24
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 172KQ
UT WOS:000246803600002
DA 2024-07-18
ER

PT J
AU Arisholm, E
   Briand, LC
   Hove, SE
   Labiche, Y
AF Arisholm, Erik
   Briand, Lionel C.
   Hove, Siw Elisabeth
   Labiche, Yvan
TI The impact of UML documentation on software maintenance: An experimental
   evaluation
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE maintenance; UML; experiment
AB The Unified Modeling Language (UML) is becoming the de facto standard for software analysis and design modeling. However, there is still significant resistance to model-driven development in many software organizations because it is perceived to be expensive and not necessarily cost-effective. Hence, it is important to investigate the benefits obtained from modeling. As a first step in this direction, this paper reports on controlled experiments, spanning two locations, that investigate the impact of UML documentation on software maintenance. Results show that, for complex tasks and past a certain learning curve, the availability of UML documentation may result in significant improvements in the functional correctness of changes as well as the quality of their design. However, there does not seem to be any saving of time. For simpler tasks, the time needed to update the UML documentation may be substantial compared with the potential benefits, thus motivating the need for UML tools with better support for software maintenance.
C1 Dept Software Engn, Simula Res Lab, N-1325 Lysaker, Norway.
   Carleton Univ, Dept Syst & Comp Engn, Software Qual Engn Lab, Ottawa, ON K1S 5B6, Canada.
C3 Carleton University
RP Arisholm, E (corresponding author), Dept Software Engn, Simula Res Lab, Martin Linges V 17,Fornebu,POB 134, N-1325 Lysaker, Norway.
EM erik@simula.no; briand@simula.no; siweh@simula.no;
   labiche@sce.carleton.ca
OI Labiche, Yvan/0000-0001-8880-4836
CR ANDA B, IN PRESS EMPIRICAL S
   Arisholm E, 2004, IEEE T SOFTWARE ENG, V30, P521, DOI 10.1109/TSE.2004.43
   Arisholm E., 2002, Nordic Journal of Computing, V9, P231
   ARISHOLM E, 2005, 200514 SIM RES LAB
   Basili VR, 1996, PROC INT CONF SOFTW, P442, DOI 10.1109/ICSE.1996.493439
   Basili VR, 1999, IEEE T SOFTWARE ENG, V25, P456, DOI 10.1109/32.799939
   Beck K., 2001, Extreme programming explained
   BOOCH G, 1999, UNIFIED MODELLING LA
   Briand LC, 2005, IEEE T SOFTWARE ENG, V31, P833, DOI 10.1109/TSE.2005.105
   Briand LC, 2003, SEVENTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P13, DOI 10.1109/CSMR.2003.1192406
   Bruegge B., 2009, OBJECT ORIENTED SOFT
   Devore J., 1999, APPL STAT ENG SCI
   Hove S. E., 2005, Experiences from conducting semi-structured interviews in empirical software engineering research. Paper presented at: IEEE International Software Metrics Symposium (METRICS), P10, DOI DOI 10.1109/METRICS.2005.24
   Judd C.M., 1991, Research methods in social relations, V6th
   Karahasanovi A, 2005, EMPIR SOFTW ENG, V10, P113, DOI 10.1007/s10664-004-6189-4
   Kleppe A.G., 2003, MDA Explained; The Model Driven Architecture: Practice and Promise
   KUTAR M, 2002, P 14 PSYCH PROGR INT
   KUZNIARZ L, 2004, P 12 IEEE INT WORKSH
   *MICR, 2003, VIS VERS 2002
   *OMG, 2003, UML 1 5 SPEC
   Oppenheim A.N., 1992, QUESTIONNAIRE DESIGN
   OSTRAND TJ, 1988, COMMUN ACM, V31, P676, DOI 10.1145/62959.62964
   Otero MC, 2005, J SYST SOFTWARE, V77, P91, DOI 10.1016/j.jss.2004.11.022
   Pender T., 2003, UML BIBLE
   Pressman R.S., 2005, Software engineering: a Practitioner's Approach
   PURCHASE HC, 2002, P 1 INT WORKSH VIS S
   PURCHASE HC, 2001, P AUSTR S INF VIS
   *QSR, 2004, N6
   Reinhartz-Berger I, 2005, EMPIR SOFTW ENG, V10, P57, DOI 10.1023/B:EMSE.0000048323.40484.e0
   Seaman CB, 1999, IEEE T SOFTWARE ENG, V25, P557, DOI 10.1109/32.799955
   SOLOWAY E, 1988, COMMUN ACM, V31, P1259, DOI 10.1145/50087.50088
   *TEL, 2003, TAU
   Tilley S., 2003, Proceedings of the 21st Annual International Conference on Documentation, P184
   Tryggeseth E., 1997, Empirical Software Engineering, V2, P201, DOI 10.1023/A:1009778023863
   Warmer J., 2003, OBJECT CONSTRAINT LA, Vsecond
   2003, BORLAND TOGETHER
NR 36
TC 84
Z9 97
U1 0
U2 9
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUN
PY 2006
VL 32
IS 6
BP 365
EP 381
DI 10.1109/TSE.2006.59
PG 17
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 055VP
UT WOS:000238479000002
DA 2024-07-18
ER

PT J
AU Julien, C
   Roman, GC
AF Julien, Christine
   Roman, Gruia-Catalin
TI EgoSpaces: Facilitating rapid development of context-aware mobile
   applications
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE context-awareness; middleware; mobile ad hoc networks; programming
   abstraction
ID MIDDLEWARE
AB Today's mobile applications require constant adaptation to their changing environments, or contexts. Technological advances have increased the pervasiveness of mobile computing devices such as laptops, handhelds, and embedded sensors. The sheer amount of context information available for adaptation places a heightened burden on application developers as they must manage and utilize vast amounts of data from diverse sources. Facilitating programming in this data-rich environment requires a middleware that provides context information to applications in an abstract form. In this paper, we demonstrate the feasibility of such a middleware that allows programmers to focus on high-level interactions among programs and to employ declarative abstract context specifications in settings that exhibit transient interactions with opportunistically encountered components. We also discuss the novel context-aware abstractions the middleware provides and the programming knowledge necessary to write applications using it. Finally, we provide examples demonstrating the infrastructure's ability to support differing tasks from a wide variety of application domains.
C1 Univ Texas, Dept Elect & Comp Engn, Austin, TX 78729 USA.
   Washington Univ, Dept Comp Sci & Engn, St Louis, MO 63130 USA.
C3 University of Texas System; University of Texas Austin; Washington
   University (WUSTL)
RP Julien, C (corresponding author), Univ Texas, Dept Elect & Comp Engn, 1 Univ Stn,C5000, Austin, TX 78729 USA.
EM c.julien@mail.utexas.edu; roman@wustl.edu
OI Julien, Christine/0000-0002-4131-4642
CR Abowd GD, 1997, WIREL NETW, V3, P421, DOI 10.1023/A:1019194325861
   Bagrodia R, 2003, PROCEEDINGS OF MOBISYS 2003, P259, DOI 10.1145/1066116.1066124
   Bellavista P, 2003, IEEE T SOFTWARE ENG, V29, P1086, DOI 10.1109/TSE.2003.1265523
   Bellavista P, 2003, IEEE INTERNET COMPUT, V7, P34, DOI 10.1109/MIC.2003.1189187
   BOYER R, 2005, P 38 HAW INT C SYST
   Broch J., 1998, MobiCom'98. Proceedings of Fourth Annual ACM/IEEE International Conference on Mobile Computing and Networking, P85, DOI 10.1145/288235.288256
   Cabri G, 2000, IEEE INTERNET COMPUT, V4, P26, DOI 10.1109/4236.865084
   Carzaniga A, 2001, ACM T COMPUT SYST, V19, P332, DOI 10.1145/380749.380767
   Chan ATS, 2003, IEEE T SOFTWARE ENG, V29, P1072, DOI 10.1109/TSE.2003.1265522
   Chen LS, 2002, ZOOL STUD, V41, P47
   Cheverst K., 2000, P ACM C MOBILE COMPU, P20, DOI DOI 10.1145/345910.345916
   Cole A, 2003, 23RD INTERNATIONAL CONFERENCE ON DISTRIBUTED COMPUTING SYSTEMS WORKSHOPS, P369
   Costa P, 2005, INT CON DISTR COMP S, P575, DOI 10.1109/ICDCS.2005.73
   Cugola G, 2001, IEEE T SOFTWARE ENG, V27, P827, DOI 10.1109/32.950318
   FOK CL, 2004, P 6 INT C COORD MOD
   GELERNTER D, 1985, ACM T PROGR LANG SYS, V7, P80, DOI 10.1145/2363.2433
   Grace P., 2005, SIGMOBILE MOBILE COM, V9, P2, DOI DOI 10.1145/1055959.1055962
   HACKMANN G, 2005, 4 INT WORKSH REV SEL, P91
   Handorean R, 2005, P IEEE I C SERV COMP, P113, DOI 10.1109/SCC.2005.40
   Harter A, 2002, WIREL NETW, V8, P187, DOI 10.1023/A:1013767926256
   Hong J., 2001, HUMAN COMPUTER INTER, V16
   Huang QF, 2004, IEEE T MOBILE COMPUT, V3, P192, DOI 10.1109/TMC.2004.14
   JULIEN C, 2004, THESIS WASHINGTON U
   JULIEN C, 2004, P 6 INT C COORD MOD, P199
   JULIEN C, 2002, P 10 INT S FDN SOFTW, P21
   JULIEN C, 2005, SOFTWARE ENG LARGE S, V3, P254
   JULIEN C, 2005, ENV MULT SYST FEB, P254
   Klein M, 2004, IEEE INTERNATIONAL CONFERENCE ON WEB SERVICES, PROCEEDINGS, P788
   LOEBBERS M, 2006, MOBILITY FRAMEWORK O
   Mamei M, 2003, 23RD INTERNATIONAL CONFERENCE ON DISTRIBUTED COMPUTING SYSTEMS WORKSHOPS, P342
   Meier R, 2002, 22ND INTERNATIONAL CONFERENCE ON DISTRIBUTED COMPUTING SYSTEMS WORKSHOP, PROCEEDINGS, P639, DOI 10.1109/ICDCSW.2002.1030841
   Murphy AL, 2001, INT CON DISTR COMP S, P524, DOI 10.1109/ICDSC.2001.918983
   MURPHY AL, 2004, P 6 INT C COORD MOD, P263
   OMICINI A, 1998, P 1 INT WORKSH INN I, P177
   Pascoe J, 1998, SECOND INTERNATIONAL SYMPOSIUM ON WEARABLE COMPUTERS - DIGEST OF PAPERS, P92, DOI 10.1109/ISWC.1998.729534
   PAYTON J, 2004, P 3 INT WORKSH SOFTW, P42
   PAYTON J, 2005, WUCSE058 WASH U SAIN
   Rhodes BJ, 1997, FIRST INTERNATIONAL SYMPOSIUM ON WEARABLE COMPUTERS - DIGEST OF PAPERS, P123, DOI 10.1109/ISWC.1997.629928
   Roman GC, 2003, LECT NOTES COMPUT SC, V2603, P94
   Roman GC, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P363, DOI 10.1109/ICSE.2002.1007982
   Roman M., 2002, IEEE Pervasive Computing, V1, P74, DOI 10.1109/MPRV.2002.1158281
   Saif U, 2003, PROCEEDINGS OF MOBISYS 2003, P159, DOI 10.1145/1066116.1189043
   Salber D., 1999, CHI, P434, DOI DOI 10.1145/302979.303126
   VARGAS A, 2006, OMNET WEB PAGE
   VERISSIMO P, 2002, P EUR WIR FEB
   Want R, 1995, IEEE PERS COMMUN, V2, P28, DOI 10.1109/98.475986
   WANT R, 1992, ACM T INFORM SYST, V10, P91, DOI 10.1145/128756.128759
   Yoneki E, 2004, SECOND IEEE ANNUAL CONFERENCE ON PERVASIVE COMPUTING AND COMMUNICATIONS WORKSHOPS, PROCEEDINGS, P92
   ZACHARIADIS S, 2004, P INT S DISTR OBJ AP
   Zhou H, 2000, MOBIHOC: 2000 FIRST ANNUAL WORKSHOP ON MOBILE AND AD HOC NETWORKING AND COMPUTING, P51, DOI 10.1109/MOBHOC.2000.869213
NR 50
TC 80
Z9 90
U1 0
U2 5
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAY
PY 2006
VL 32
IS 5
BP 281
EP 298
DI 10.1109/TSE.2006.47
PG 18
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 045LB
UT WOS:000237742500001
DA 2024-07-18
ER

PT J
AU Braberman, V
   Kicillof, N
   Olivero, A
AF Braberman, V
   Kicillof, N
   Olivero, A
TI A scenario-matching approach to the description and model checking of
   real-time properties
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE requirements/specifications; model checking; formal methods;
   scenario-based verification
AB A major obstacle in the technology-transfer agenda of behavioral analysis and design methods is the need for logics or automata to express properties for control-intensive systems. Interaction-modeling notations may offer a replacement or a complement, with a practitioner-appealing and lightweight flavor, due partly to the subspecification of intended behavior by means of scenarios. We propose a novel approach consisting of engineering a new formal notation of this sort based on a simple compact declarative semantics: VTS (Visual Timed event Scenarios). Scenarios represent event patterns, graphically depicting conditions over traces. They predicate general system events and provide features to describe complex properties not expressible with MSC-like notations. The underlying formalism supports partial orders and real-time constraints. The problem of checking whether a timed-automaton model has a matching trace is proven decidable. On top of this kernel, we introduce a notation to state properties over all system traces: conditional scenarios, allowing engineers to describe uniquely rich connections between antecedent and consequent portions of the scenario. An undecidability result is presented for the general case of the model-checking problem over dense-time domains, to later identify a decidable-yet practically relevant-subclass, where verification is solvable by generating antiscenarios expressed in the VTS-kernel notation.
C1 Univ Buenos Aires, Sch Sci, Dept Comp Sci, RA-1053 Buenos Aires, DF, Argentina.
   Univ Argentia Empresa, Ctr Adv Studies, Buenos Aires, DF, Argentina.
C3 University of Buenos Aires
RP Braberman, V (corresponding author), Univ Buenos Aires, Sch Sci, Dept Comp Sci, RA-1053 Buenos Aires, DF, Argentina.
EM vbraber@dc.uba.ar; nicok@dc.uba.ar; aolivero@uade.edu.ar
CR ALFONSO A, 2003, THESIS U BUENOS AIRE
   ALFONSO A, 2004, P PRISE 04 1 C PRINC
   ALFONSO A, 2004, P 26 ACM IEEE INT C
   ALPERN B, 1989, ACM T PROGR LANG SYS, V11, P147, DOI 10.1145/59287.62028
   ALUR R, 1994, THEOR COMPUT SCI, V126, P183, DOI 10.1016/0304-3975(94)90010-8
   ALUR R, 1989, ANN IEEE SYMP FOUND, P164, DOI 10.1109/SFCS.1989.63473
   ALUR R, 1993, INFORM COMPUT, V104, P2, DOI 10.1006/inco.1993.1024
   Alur R, 2004, LECT NOTES COMPUT SC, V3185, P1
   Alur R., 1991, Proceedings of the Tenth Annual ACM Symposium on Principles of Distributed Computing, P139, DOI 10.1145/112600.112613
   Alur R, 1999, THEOR COMPUT SCI, V211, P253, DOI 10.1016/S0304-3975(97)00173-4
   Amla M, 1999, LECT NOTES COMPUT SC, V1703, P67
   Avrunin GS, 1997, PROC INT CONF SOFTW, P228, DOI 10.1145/253228.253275
   BOUAJJANI A, 1996, P INT S FORM TECHN R, P306
   Bozga M, 1998, LECT NOTES COMPUT SC, V1427, P546, DOI 10.1007/BFb0028779
   BRABERMAN V, 2005, 05011 U BUEN AIR COM
   BRABERMAN V, 2002, P 8 INT C TACAS 02, P21
   BRABERMAN V, 2004, P 16 INT C COMP AID
   Braberman VA, 1999, LECT NOTES COMPUT SC, V1687, P494, DOI 10.1145/318774.319266
   Dwyer M. B., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P411, DOI 10.1109/ICSE.1999.841031
   Firley T, 1999, LECT NOTES COMPUT SC, V1723, P645
   GIANNAKOPOULOU D, 2003, P 9 EUR SOFTW ENG C, P257
   Harel D, 2002, MASCOTS 2002: 10TH IEEE INTERNATIONAL SYMPOSIUM ON MODELING, ANALYSIS, AND SIMULATION OF COMPUTER AND TELECOMMUNICATIONS SYSTEMS, PROCEEDINGS, P193, DOI 10.1109/MASCOT.2002.1167077
   Havelund K, 2002, LECT NOTES COMPUT SC, V2280, P342
   *ITU T, 2000, Z120 ITUT
   KLOSE J, 2001, P 7 INT C TOOLS ALG, P512
   Kugler H., 2005, P 11 INT C TOOLS ALG
   Larsen K., 1995, P INT HYBR SYST WORK, P232
   LEVIN V, 1997, P TAPSOFT, P652
   Maxemchuk NF, 2001, ACM T COMPUT SYST, V19, P384, DOI 10.1145/380749.380771
   MOSER LE, 1997, ACM T SOFTWARE ENG, V6
   Raskin JF, 1997, LECT NOTES COMPUT SC, V1201, P33, DOI 10.1007/BFb0014711
   SENGUPTA B, 2002, P 10 ACM SIGSOFT S F, P167
   Smith MH, 2001, FIFTH IEEE INTERNATIONAL SYMPOSIUM ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P14
   UCHITEL S, 2002, P 10 ACM SIGSOFT INT, P109
   Wilke T., 1994, Formal Techniques in Real-Time and Fault-Tolerant Systems. Third International Symposium Proceedings. ProCoS, P694
   ZHENG T, 2003, P SDL FOR, P234
NR 36
TC 19
Z9 22
U1 0
U2 3
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD DEC
PY 2005
VL 31
IS 12
BP 1028
EP 1041
DI 10.1109/TSE.2005.131
PG 14
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 995RU
UT WOS:000234122300004
DA 2024-07-18
ER

PT J
AU Liu, Y
   Fekete, A
   Gorton, I
AF Liu, Y
   Fekete, A
   Gorton, I
TI Design-level performance prediction of component-based applications
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE quality analysis and evaluation; software architectures; performance
   measures
ID MODEL
AB Server-side component technologies such as Enterprise JavaBeans ( EJBs),. NET, and CORBA are commonly used in enterprise applications that have requirements for high performance and scalability. When designing such applications, architects must select a suitable component technology platform and application architecture to provide the required performance. This is challenging as no methods or tools exist to predict application performance without building a significant prototype version for subsequent benchmarking. In this paper, we present an approach to predict the performance of component-based server-side applications during the design phase of software development. The approach constructs a quantitative performance model for a proposed application. The model requires inputs from an application-independent performance profile of the underlying component technology platform, and a design description of the application. The results from the model allow the architect to make early decisions between alternative application architectures in terms of their performance and scalability. We demonstrate the method using an EJB application and validate predictions from the model by implementing two different application architectures and measuring their performance on two different implementations of the EJB platform.
C1 Univ Sydney, Sch Informat Technol, Sydney, NSW 2006, Australia.
C3 University of Sydney
EM jenny.liu@nicta.com.au; fekete@it.usyd.edu.au; ian.gorton@nicta.edu.au
RI Gorton, Ian/A-8247-2009; Gorton, Ian/AAA-3301-2020
CR Balsamo S, 2004, IEEE T SOFTWARE ENG, V30, P295, DOI 10.1109/TSE.2004.9
   Bernardi S., 2002, PROC 3 INT WORKSHOP, P35
   CAI Y, 2004, P IEEE INT C AUT SOF
   Canevet C, 2003, IEE P-COMPUT DIG T, V150, P107, DOI 10.1049/ip-cdt:20030084
   CORTELLESSA V, 2000, P 2 INT WORKSH SOFTW, P36
   Denaro G., 2004, em Proceedings of the fourth international workshop on Software and performance - WOSP'04, P94, DOI DOI 10.1145/974044.974059
   DILLEY JA, 1996, HPL96161
   Gorton I, 2004, PROC INT CONF SOFTW, P543, DOI 10.1109/ICSE.2004.1317476
   Gorton I, 2003, COMPUTER, V36, P50, DOI 10.1109/MC.2003.1185217
   Gorton I, 2003, IEEE INTERNET COMPUT, V7, P18, DOI 10.1109/MIC.2003.1200296
   GORTON I, 2000, ENTERPRISE T PROCESS
   HAREL D, 2003, P 18 ANN ACM SIGPLAN, P68
   HARKEMA M, 2004, P INT S PERF EV COMP
   Harrison PG, 2003, PERFORM EVALUATION, V51, P229, DOI 10.1016/S0166-5316(02)00096-2
   Hissam SA, 2002, LECT NOTES COMPUT SC, V2370, P108
   JACOBSON PA, 1982, COMMUN ACM, V25, P142, DOI 10.1145/358396.358449
   KOUNEV S, 2003, P IEEE INT S PERF AN
   Lazowska Edward D, 1984, Quantitative system performance: computer system analysis using queueing network models
   Liu JZ, 2004, CHINESE J ASTRON AST, V4, P166, DOI 10.1088/1009-9271/4/2/166
   Liu TK, 2003, IEEE INTERNATIONAL CONFERENCE ON E-COMMERCE, P191
   Liu Y, 2005, LECT NOTES COMPUT SC, V3489, P1
   LIU Y, 2004, THESIS U SYDNEY AUST
   Lopez-Grao Merseguer., 2004, P 4 INT WORKSHOP SOF, P25
   Menasce D.A., 2000, SCALING E BUSINESS T
   ROLIA JA, 1995, IEEE T SOFTWARE ENG, V21, P689, DOI 10.1109/32.403785
   Skene J, 2003, 18TH IEEE INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P236, DOI 10.1109/ASE.2003.1240311
   Smith C, 2002, POETRY, V179, P189
   WOODSIDE CM, 1995, IEEE T COMPUT, V44, P20, DOI 10.1109/12.368012
   Xu J, 2003, LECT NOTES COMPUT SC, V2794, P291
   [No title captured]
NR 30
TC 42
Z9 46
U1 0
U2 14
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD NOV
PY 2005
VL 31
IS 11
BP 928
EP 941
DI 10.1109/TSE.2005.127
PG 14
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 989GE
UT WOS:000233660100002
DA 2024-07-18
ER

PT J
AU Williams, CC
   Hollingsworth, JK
AF Williams, CC
   Hollingsworth, JK
TI Automatic mining of source code repositories to improve bug finding
   techniques
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article; Proceedings Paper
CT Workshop on Mining Software Repositories held in conjunction with the
   27th International Conference on Software Engineering (ICSE)
CY MAY 17, 2005
CL St Louis, MO
DE testing tools; version control; configuration control; debugging aids
AB We describe a method to use the source code change history of a software project to drive and help to refine the search for bugs. Based on the data retrieved from the source code repository, we implement a static source code checker that searches for a commonly fixed bug and uses information automatically mined from the source code repository to refine its results. By applying our tool, we have identified a total of 178 warnings that are likely bugs in the Apache Web server source code and a total of 546 warnings that are likely bugs in Wine, an open-source implementation of the Windows API. We show that our technique is more effective than the same static analysis that does not use historical data from the source code repository.
C1 Univ Maryland, College Pk, MD 20742 USA.
C3 University System of Maryland; University of Maryland College Park
RP Univ Maryland, 4140 AV Williams Bldg, College Pk, MD 20742 USA.
EM chadd@cs.umd.edu; hollings@cs.umd.edu
CR [Anonymous], THESIS U BRIT COLUMB
   [Anonymous], P 2004 ACM SIGSOFT I
   ASHCRAFT K, 2002, P IEEE S SEC PRIV MA
   Ball VE, 2002, STUD PRODUCT EFF, V2, P1
   Bevan J, 2003, 10TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P134, DOI 10.1109/WCRE.2003.1287244
   Chen A, 2001, PROC IEEE INT CONF S, P364, DOI 10.1109/ICSM.2001.972749
   Descartes A., 2000, Programming the Perl DBI
   ENGLER D, 2000, P 4 S OP SYST DES IM
   Ferenc R, 2004, PROC IEEE INT CONF S, P60, DOI 10.1109/ICSM.2004.1357790
   Fischer M, 2004, J SOFTW MAINT EVOL-R, V16, P385, DOI 10.1002/smr.302
   Fischer M, 2003, 10TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P90, DOI 10.1109/WCRE.2003.1287240
   German DM, 2004, PROC IEEE INT CONF S, P316, DOI 10.1109/ICSM.2004.1357817
   Graves TL, 2000, IEEE T SOFTWARE ENG, V26, P653, DOI 10.1109/32.859533
   Hassan AE, 2004, PROC IEEE INT CONF S, P284, DOI 10.1109/ICSM.2004.1357812
   HEINE DL, 2003, P C PROGR LANG DES I
   HOVEMEYER D, 2004, 19 ANN ACM SIGPLAN C
   JOHNSON S, 1979, UNIX TIME SHARING A, V2
   Kremenek T, 2003, LECT NOTES COMPUT SC, V2694, P295
   Matsumoto T., 2002, P 5 INT WORKSH PRINC
   MENZIES T, 2004, P INT WORKSH MIN SOF
   PURUSHOTHAMAN R, 2004, P INT WORKSH MIN SOF
   QUINLAN D, 2000, P 8 INT WORKSH COMP
   RYSSELBERGH F, 2004, P INT WORKSH MIN SOF
   Stallman  R., 2004, USING GNU COMPILER C
   Widenius M., 2002, MySQL Reference Manual: Documentation From the Source
   WILLIAMS CC, 2004, P INT WORKSH MIN SOF
   ZIMMERMANN T, 2004, P INT WORKSH MIN SOF
   2004, CVS CONCURRENT VERSI
   2004, APACHE WEB SERVER
NR 29
TC 97
Z9 125
U1 1
U2 9
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JUN
PY 2005
VL 31
IS 6
BP 466
EP 480
DI 10.1109/TSE.2005.63
PG 15
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Engineering
GA 940AX
UT WOS:000230117200004
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Brylow, D
   Palsberg, J
AF Brylow, D
   Palsberg, J
TI Deadline analysis of interrupt-driven software
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE real time; multiresolution static analysis; testing oracles
AB Real-time, reactive, and embedded systems are increasingly used throughout society ( e. g., flight control, railway signaling, vehicle management, medical devices, and many others). For real-time, interrupt-driven software, timely interrupt handling is part of correctness. It is vital for software verification in such systems to check that all specified deadlines for interrupt handling will be met. Such verification is a daunting task because of the large number of different possible interrupt arrival scenarios. For example, for a Z86-based microcontroller, there can be up to six interrupt sources and each interrupt can arrive during any clock cycle. Verification of such systems has traditionally relied upon lengthy and tedious testing; even under the best of circumstances, testing is likely to cover only a fraction of the state space in interrupt-driven systems. This paper presents the Zilog Architecture Resource Bounding Infrastructure (ZARBI), a tool for deadline analysis of interrupt-driven Z86-based software. The main idea is to use static analysis to significantly decrease the required testing effort by automatically identifying and isolating the segments of code that need the most testing. Our tool combines multiresolution static analysis and testing oracles in such a way that only the oracles need to be verified by testing. Each oracle specifies the worst-case execution time from one program point to another, which is then used by the static analysis to improve precision. For six commercial microcontroller systems, our experiments show that a moderate number of testing oracles are sufficient to do precise deadline analysis.
C1 Purdue Univ, Dept Comp Sci, W Lafayette, IN 47907 USA.
   Univ Calif Los Angeles, Dept Comp Sci, Los Angeles, CA 90095 USA.
C3 Purdue University System; Purdue University; University of California
   System; University of California Los Angeles
RP Purdue Univ, Dept Comp Sci, W Lafayette, IN 47907 USA.
EM brylow@purdue.edu; palsberg@ucla.edu
RI Palsberg, Jens/JYO-6826-2024
OI Palsberg, Jens/0000-0003-4747-365X
CR *AG SYST INC, 2003, APP550 STUD TRAIN GU
   ALT M, 1996, P SAS 96 INT STAT AN
   Altenbernd P., 1996, Proceedings of the Eighth Euromicro Workshop on Real-Time Systems, P102, DOI 10.1109/EMWRTS.1996.557827
   ALUR R, 1994, THEOR COMPUT SCI, V126, P183, DOI 10.1016/0304-3975(94)90010-8
   Alur R., 1992, Real-Time: Theory in Practice
   [Anonymous], 2001, Algorithms in C, Part 5: Graph Algorithms
   [Anonymous], 1985, Compilers principles, techniques, and tools
   Balakrishnan G, 2004, LECT NOTES COMPUT SC, V2985, P5
   Bernat G, 2000, EUROMICRO, P81, DOI 10.1109/EMRTS.2000.853995
   Brylow D, 2001, PROC INT CONF SOFTW, P47, DOI 10.1109/ICSE.2001.919080
   BRYLOW DW, 2003, THESIS PURDUE U
   Burns A., 2001, Real-time Systems and Programming Languages: Ada 95, Real-Time Java and Real-Time POSIX, V3rd
   Cardelli L., 1997, COMPUTER SCI ENG HDB, V2nd, P2208
   Clarke Edmund M., 2001, Model Checking
   CORTI M, 2000, P LCTES 00 ACM SIGPL
   Cousot P., 1977, C RECORD 4 ANN ACM S, P238, DOI DOI 10.1145/512950.512973
   DWYER MB, 1995, THESIS U MASSACHUSET
   Emerson E. A., 1990, Handbook of Theoretical Computer Science, VB, P995, DOI [10.1016/b978-0-444-88074-1.50021-4, DOI 10.1016/B978-0-444-88074-1.50021-4]
   ENGBLOM J, 2000, P RTSS 00 21 IEEE RE
   ENGBLOM J, 2002, P EMSOFT 02 2 INT C, P334
   ENGBLOM J, 2000, SOFTWARE TOOLS TECHN, V14
   Ferdani P, 1997, IMECHE SEM, V97, P37
   FERDINAND C, 2001, P EMSOFT 01 1 INT WO
   Gay David., 2003, PLDI 03, P1
   GUSTAFSSON J, 2002, P WCET 02 2 IEEE INT, P10
   Guyer SZ, 2003, LECT NOTES COMPUT SC, V2694, P214
   HARROLD MJ, 2001, P ACM C OBJ OR PROGR, P312
   Healy C, 2000, REAL-TIME SYST, V18, P129, DOI 10.1023/A:1008189014032
   Healy CA, 2002, IEEE T SOFTWARE ENG, V28, P763, DOI 10.1109/TSE.2002.1027799
   HENZINGER TA, 2004, PLDI, P1
   *ILOG, 2003, CPLEX MIX INT OPT
   Lindholm Tim., 1999, JAVA VIRTUAL MACHINE, V2nd
   MCALLESTER D, 1999, P SAS 99 INT STAT AN
   McGeer P.C., 1991, Integrating Functional and Temporal Domains in Logic Design: The False Path Problem and Its Implications
   MITRA T, 2002, P WCET 02 2 IEEE INT, P68
   Mogul J., 1987, SOSP 87, P39
   Muchnick S., 1997, ADV COMPILER DESIGN
   Naumovich G., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P399, DOI 10.1109/ICSE.1999.841030
   NAUMOVICH G, 2000, TRCIS200002 POL U
   Nielson F., 1999, Principles of Program Analysis
   NOTEBAERT P, 2003, LP SOLVE MIXED INTEG
   Petters S. M., 1999, Proceedings Sixth International Conference on Real-Time Computing Systems and Applications. RTCSA'99 (Cat. No.PR00306), P442, DOI 10.1109/RTCSA.1999.811296
   PLEVYAK J, 1994, P 9 ANN C OBJ OR PRO, P324
   PODELSKI A, 2000, P SAS 00 INT STAT AN
   PUSCHNER P, 1989, J REAL TIME SYSTEMS, V1, P159
   Puschner PP, 1997, REAL-TIME SYST, V13, P67, DOI 10.1023/A:1007905003094
   REGEHR J, 2003, P EMSOFT 03 3 INT C
   Reps T, 2000, ACM T PROGR LANG SYS, V22, P162, DOI 10.1145/345099.345137
   Richardson D. J., 1992, P 14 INT C SOFTW ENG, P105
   Sharir Micha, 1981, PROGRAM FLOW ANAL TH
   Shivers O. G., 1991, THESIS CARNEGIE MELL
   Theiling H, 2000, REAL-TIME SYST, V18, P157, DOI 10.1023/A:1008141130870
   TINDELL KW, 1994, REAL-TIME SYST, V6, P133, DOI 10.1007/BF01088593
   Vivancos E, 2001, P ACM SIGPLAN WORKSH, P88
   Wegener J, 2001, REAL-TIME SYST, V21, P241, DOI 10.1023/A:1011132221066
   XU Z, 2000, P PLDI 00 ACM SIGPLA
   *ZIL INC, 1998, Z86E30 E31 E40 PREL
   [No title captured]
   [No title captured]
NR 59
TC 10
Z9 15
U1 0
U2 5
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD OCT
PY 2004
VL 30
IS 10
BP 634
EP 655
DI 10.1109/TSE.2004.64
PG 22
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 856EV
UT WOS:000224029400002
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Völzer, H
   MacDonald, A
   Atchison, B
   Hanlon, A
   Lindsay, P
   Strooper, P
AF Völzer, H
   MacDonald, A
   Atchison, B
   Hanlon, A
   Lindsay, P
   Strooper, P
TI SubCM:: A tool for improved visibility of software change in an
   industrial setting
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE software configuration management; software maintenance; verification
   and validation
ID CONFIGURATION MANAGEMENT
AB Software Configuration Management is the discipline of managing large collections of software development artefacts from which software products are built. Software configuration management tools typically deal with artefacts at fine levels of granularity - such as individual source code files - and assist with coordination of changes to such artefacts. This paper describes a lightweight tool, designed to be used on top of a traditional file-based configuration management system. The add-on tool support enables users to flexibly define new hierarchical views of product structure, independent of the underlying artefact-repository structure. The tool extracts configuration and change data with respect to the user-defined hierarchy, leading to improved visibility of how individual subsystems have changed. The approach yields a range of new capabilities for build managers, and verification and validation teams. The paper includes a description of our experience using the tool in an organization that builds large embedded software systems.
C1 Univ Lubeck, D-23538 Lubeck, Germany.
   Invensys SCADA Dev, Eight Mile Plains, Qld 4113, Australia.
   Univ Queensland, Sch Informat Technol & Elect Engn, Brisbane, Qld 4072, Australia.
C3 University of Lubeck; Schneider Electric; University of Queensland
RP Univ Lubeck, Ratzeburger Allee 160, D-23538 Lubeck, Germany.
EM voelzer@tcs.uni-luebeck.de; anti@itee.uq.edu.au;
   brenton.atchison@invensys.com; andrew.hanlon@invensys.com;
   pal@itee.uq.edu.au; pstroop@itee.uq.edu.au
OI Strooper, Paul/0000-0003-4789-2897
CR ASKLUND U, 1999, P 9 INT S SYST CONF
   BARKSTROM B, 2003, P C SOFTW CONF MAN S
   BENDIX L, 1998, P 8 INT S SYST CONF
   BENNETT PE, 1998, P 6 SAF CRIT SYST S
   Bersoff E., 1980, SOFTWARE CONFIGURATI
   CHRISTENSEN HB, 1999, P 32 HAW INT C SYST
   *CM, 2003, CM YELL PAG
   Conradi R, 1998, ACM COMPUT SURV, V30, P232, DOI 10.1145/280277.280280
   Conradi R., 1994, SOFTWARE PROCESS MOD, P9
   *CONT SOFTW CORP, 1999, INTR CONT CM
   *CONT SOFTW CORP, 1996, TASK BAS CM
   *CVS, 2003, CONC VERS SYST
   Dart S., 1991, Proceedings of the 3rd International Workshop on Software Configuration Management, P1, DOI 10.1145/111062.111063
   DEJONGE M, 2002, P 7 INT C SOFTW REUS
   Eick SG, 2002, IEEE T SOFTWARE ENG, V28, P396, DOI 10.1109/TSE.2002.995435
   ESTUBLIER J, 1994, CONFIGURATION MANAGE
   LANZA M, 2002, P 4 INT WORKSH PRINC, P37
   LIN YJ, 1996, P INT C SOFTWARE ENG, V18, P298
   Lindsay P, 2001, 2001 AUSTRALIAN SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P275, DOI 10.1109/ASWEC.2001.948521
   MAGNUSSON B, 1996, P 6 INT WORKSH SOFTW, P31
   *MICR, 2004, VIS SOURCESAFE
   MIDHA A, 1997, BELL LAB TECHNIC WIN
   *PYTH SOFTWAR FDN, 2003, PYTH SOFTW FDN
   *RAT, 2004, CLEARCASE
   *RAT E DEV CO, 2000, TP7101000 RAT E DEV
   *RAT SOFTW CORP, 1999, RAT TECHN SER RAT SO
   SCOTT JA, 2001, GUIDE SOFTWARE ENG B, P103
   *TEL, 2003, CM SYN TOOLS
   *UK MIN DEF, 2000, 0557 UK MIN DEF
   van der Hoek A, 2002, IEEE T SOFTWARE ENG, V28, P79, DOI 10.1109/32.979990
   VANDERHOEK A, 1996, P INT C SOFTWARE ENG, V18, P308
   *VIS SYST CORP, 2003, RAZ REL MAN FIL VERS
   Völzer H, 2002, PROC IEEE INT CONF S, P492, DOI 10.1109/ICSM.2002.1167810
   WALRAD C, 2002, COMPUTER         SEP, P31
   WESTFECHTEL B, 2003, P C SOFTW CONF MAN S
   Whitgift D., 1991, Methods and tools for software configuration management
NR 36
TC 4
Z9 5
U1 0
U2 4
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD OCT
PY 2004
VL 30
IS 10
BP 675
EP 693
DI 10.1109/TSE.2004.67
PG 19
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 856EV
UT WOS:000224029400004
DA 2024-07-18
ER

PT J
AU Cysneiros, LM
   Leite, JCSD
AF Cysneiros, LM
   Leite, JCSD
TI Nonfunctional requirements: From elicitation to conceptual models
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE software design; requirements elicitation; nonfunctional requirements;
   goal graphs; UML conceptual models
AB Nonfunctional Requirements (NFRs) have been frequently neglected or forgotten in software design. They have been presented as a second or even third class type of requirement, frequently hidden inside notes. We tackle this problem by treating NFRs as first class requirements. We present a process to elicit NFRs, analyze their interdependencies, and trace them to functional conceptual models. We focus our attention on conceptual models expressed using UML ( Unified Modeling Language). Extensions to UML are proposed to allow NFRs to be expressed. We will show how to integrate NFRs into the Class, Sequence, and Collaboration Diagrams. We will also show how Use Cases and Scenarios can be adapted to deal with NFRs. This work was used in three case studies and their results suggest that by using our proposal we can improve the quality of the resulting conceptual models.
C1 York Univ, Dept Math & Stat, Informat Technol Program, Toronto, ON M3J 1P3, Canada.
   Pontificia Univ Catolica Rio de Janeiro, Dept Informat, BR-22453900 Rio De Janeiro, Brazil.
C3 York University - Canada; Pontificia Universidade Catolica do Rio de
   Janeiro
RP York Univ, Dept Math & Stat, Informat Technol Program, 4700 Keele St, Toronto, ON M3J 1P3, Canada.
EM cysneiro@mathstat.yorku.ca; julio@inf.puc-rio.br
OI Sampaio do Prado Leite, Julio Cesar/0000-0002-0355-0265
CR [Anonymous], 1990, DESIGNING OBJECT ORI
   [Anonymous], 1993, P IEEE INT S REQ ENG
   [Anonymous], 1997, Software metrics: A rigorous and practical approach
   [Anonymous], REQ ENG, DOI DOI 10.1007/BF02745371
   [Anonymous], 1996, HDB SOFTWARE RELIABI
   [Anonymous], IEEE REC PRACT SOFTW
   [Anonymous], 1993, Software Requirements-objects, Functions and States
   BASILI VR, 1986, IEEE T SOFTWARE ENG, V12, P733, DOI 10.1109/TSE.1986.6312975
   Boehm B, 1996, IEEE SOFTWARE, V13, P25, DOI 10.1109/52.506460
   Boehm B.W., 1978, Characteristics of Software Quality
   BORGER E, 2002, REQUIREMENTS ENG CAS
   Breitman K. K., 1999, Journal of the Brazilian Computer Society, V6, DOI 10.1590/S0104-65001999000200003
   BREITMAN KK, 2000, THESIS PONTIFICIA U
   BROOKS FP, 1997, COMPUTER         APR, P10
   Chung KH, 2001, INT J IND ENG-THEORY, V8, P91
   CHUNG L, 1995, PROC INT CONF SOFTW, P25, DOI 10.1145/225014.225017
   Chung L., 2000, Non-functional Requirements in Software Engineering
   Cysneiros L. M., 2001, Requirements Engineering, V6, P97, DOI 10.1007/s007660170008
   Cysneiros L. M, 2001, P 2001 C CTR ADV STU, P202
   CYSNEIROS LM, 1999, P 4 INT S REQ ENG JU
   CYSNEIROS LM, 2003, PERSPECTIVE SOFTWARE
   Finkelstein A., 1996, Proceedings of the 8th International Workshop on Software Specification and Design, P2, DOI 10.1109/IWSSD.1996.501141
   Fowler M., 1997, UML DISTILLED
   Goguen J.A., 1993, 1993 P IEEE INT S RE, P152, DOI DOI 10.1109/ISRE.1993.324822
   Grimshaw DJ, 2001, INFORM SOFTWARE TECH, V43, P629, DOI 10.1016/S0950-5849(01)00171-9
   HADAD G, 1997, P JORN ARG INF INV O, P65
   Jacobson Ivar., 1999, AW OBJ TECHNOL S
   Kirner T.G., 1996, ADV COMPUT, V42, P1, DOI DOI 10.1016/S0065-2458(08)60483-0
   Lamping John, 1997, P EUR C OBJ OR PROGR
   LEONARDI C, 1997, P ACT 2 JORN ING SOF
   LINDSTROM DR, 1993, IEEE SOFTWARE    SEP, P55
   Musa J. D., 1987, Software Reliability: Measure-ment, Prediction, Application
   MYLOPOULOS J, 1992, IEEE T SOFTWARE ENG, V18, P483, DOI 10.1109/32.142871
   *NASA, 1991, NASASTD210091
   NETO JSM, 2000, THESIS PONTIFICIA U
   *RAT, 1997, OBJ CONSTR LANG SPEC
   Robertson S, 2012, Mastering the requirements process: getting requirements right
   ROSS DT, 1977, IEEE T SOFTWARE ENG, V3, P16, DOI 10.1109/TSE.1977.229900
   Rumbaugh James, 1999, The unified modeling language reference manual
   Simon H.A., 1996, The Sciences of the Artificial, V3rd ed
   *US DOD, 1997, 2167A DOD SYST SOFTW
   van Lamsweerde A, 2001, FIFTH IEEE INTERNATIONAL SYMPOSIUM ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P249
NR 42
TC 125
Z9 147
U1 1
U2 17
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAY
PY 2004
VL 30
IS 5
BP 328
EP 350
DI 10.1109/TSE.2004.10
PG 23
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 813JS
UT WOS:000220904000004
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Hwang, GH
   Chang, SJ
   Chu, HD
AF Hwang, GH
   Chang, SJ
   Chu, HD
TI Technology for testing nondeterministic client/server database
   applications
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE concurrent programming; reachability testing; client/server; database
   management system
AB The execution of a client/server application involving database access requires a sequence of database transaction events (or, T-events), called a transaction sequence (or, T-sequence). A client/server database application may have nondeterministic behavior in that multiple executions thereof with the same input may produce different, T-sequences. In this paper, we present a framework for testing all possible T-sequences of a client/server database application. We. first show how to defile a T-sequence in order to provide sufficient information to detect race conditions between T-events. Second, we design algorithm,,; to change the outcomes of race conditions in order to derive race variants, which are prefixes of other T-sequences. Third, we develop a prefix-based replay technique for race variants derived from T-sequences. We prove that our framework can derive all the possible T-sequences in cases where every execution of the application terminates. A formal proof and an analysis of the. proposed framework are given. We describe a prototype implementation of the framework and present experimental results obtained from it.
C1 Natl Taiwan Normal Univ, Dept Informat & Comp Educ, Taipei 106, Taiwan.
   Chunghwa Telecom Co Ltd, Telecommun Labs, Taoyuan 326, Taiwan.
   Takming Coll, Dept Management Informat Syst, Taipei 114, Taiwan.
C3 National Taiwan Normal University; Chunghwa Telecom
RP Hwang, GH (corresponding author), Natl Taiwan Normal Univ, Dept Informat & Comp Educ, 162 Hoping E Rd,Sec 1, Taipei 106, Taiwan.
EM ghhwang@ice.ntnu.edu.tw; s_jchang@cht.com.tw; jchu@mis.takming.edu.tw
CR [Anonymous], 2000, Fundamentals of Database Systems
   Bechini A, 1998, INT CON DISTR COMP S, P266, DOI 10.1109/ICDCS.1998.679522
   BJELETICH S, 1999, SAMS             MAY
   Carey M. J., 1993, SIGMOD Record, V22, P12, DOI 10.1145/170036.170041
   CHAYS D, 2000, P ACM INT S SOFTW TE
   CHU H, 1998, P PAC NW SOFTW QUAL
   DAVIES RA, 2000, P 1 INT WORKSH AUT P
   DINNING A, 1989, COMPUTER         JUL
   Gray J., 1994, SIGMOD Record, V23, P243, DOI 10.1145/191843.191886
   HELMBOLD D, 1985, IEEE SOFTWARE, V2, P47, DOI 10.1109/MS.1985.230351
   Hwang GH, 1995, INT J SOFTW ENG KNOW, V5, P493, DOI 10.1142/S0218194095000241
   *INT ORG STAND, 1999, INF TECHN DAT LANG 1
   LAMPORT L, 1978, COMMUN ACM, V21, P558, DOI 10.1145/359545.359563
   LEBLANC TJ, 1987, IEEE T COMPUT, V36, P471, DOI 10.1109/TC.1987.1676929
   Lei Y, 2002, IEEE INT C ENG COMP, P35, DOI 10.1109/ICECCS.2002.1181496
   MCDOWELL CE, 1989, J PARALLEL DISTR COM, V6, P515, DOI 10.1016/0743-7315(89)90004-X
   MCDOWELL CE, 1989, ACM COMPUTING SURVEY, V21
   *PROC PERF COUNC, 1998, TPC BENCHM C
   RUBER M, 2000, SYBEX            JAN
   Silberschatz A., 2001, OPERATING SYSTEM CON
   Slutz D., 1998, Proceedings of the Twenty-Fourth International Conference on Very-Large Databases, P618
   STEELE G, 2000, JAVA TM LANGUAGE SPE
   *SUN MICR, 2002, SOURC JAV TECHN
   Tai KC, 1996, PARALLEL DISTRIBUTED
   TAI KC, 1997, P 2 INT WORKSH SOFTW
   TAYLOR RN, 1978, COMM ACM, V21
   YOUNG M, 1988, IEEE T SOFTWARE ENG, V14
NR 27
TC 7
Z9 10
U1 0
U2 3
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JAN
PY 2004
VL 30
IS 1
BP 59
EP 77
DI 10.1109/TSE.2004.1265736
PG 19
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 757QD
UT WOS:000187572200005
DA 2024-07-18
ER

PT J
AU Li, M
   Smidts, CS
AF Li, M
   Smidts, CS
TI A ranking of software engineering measures based on expert opinion
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE expert opinion; software reliability; software engineering measure;
   ranking
AB This research proposes a framework based on expert opinion elicitation, developed to select the software engineering measures which are the best software reliability indicators. The current research is based on the top 30 measures identified in an earlier study conducted by Lawrence Livermore National Laboratory. A set of ranking criteria and their levels were identified. The score of each measure for each ranking criterion was elicited through expert opinion and then aggregated into a single score using multiattribute utility theory. The basic aggregation scheme selected was a linear additive scheme. A comprehensive sensitivity analysis was carried out. The sensitivity analysis included: variation of the ranking criteria levels, variation of the weights, variation of the aggregation schemes. The top-ranked measures were identified. Use of these measures in each software development phase can lead to a more reliable quantitative prediction of software reliability.
C1 Univ Maryland, Ctr Reliabil Engn, College Pk, MD 20705 USA.
C3 University System of Maryland; University of Maryland College Park
RP Univ Maryland, Ctr Reliabil Engn, 2100 Marie Mt Hall, College Pk, MD 20705 USA.
EM mli@wam.umd.edu; csmidts@eng.umd.edu
OI Smidts, Carol/0000-0001-7867-023X
CR [Anonymous], 1988, 9822 IEEE
   [Anonymous], 1991, EXPERTS UNCERTAINTY
   [Anonymous], 1997, Software metrics: A rigorous and practical approach
   [Anonymous], 1985, Long-range forecasting: from crystal ball to computer
   [Anonymous], 1990, 610 IEEE
   Briand LC, 2000, 11TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P124, DOI 10.1109/ISSRE.2000.885866
   CHHIBBER S, 1992, RELIAB ENG SYST SAFE, V38, P27, DOI 10.1016/0951-8320(92)90103-R
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   CLEMEN RT, 1985, OPER RES, V33, P427, DOI 10.1287/opre.33.2.427
   Dyba T., 2000, Empirical Software Engineering, V5, P357, DOI 10.1023/A:1009800404137
   Fenton NE, 1999, IEEE T SOFTWARE ENG, V25, P675, DOI 10.1109/32.815326
   Host M, 1997, INFORM SOFTWARE TECH, V39, P755, DOI 10.1016/S0950-5849(97)00027-X
   Host M, 1998, PROC INT CONF SOFTW, P332, DOI 10.1109/ICSE.1998.671386
   Johnson G, 1999, IEEE NUCL SCI CONF R, P1691, DOI 10.1109/NSSMIC.1999.842911
   Kitchenham B, 1997, COMPUT CONTROL ENG J, V8, P120, DOI 10.1049/cce:19970304
   LAWRENCE JD, 1998, UCRLID136035 LAWR LI
   Li M, 2000, 11TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P246, DOI 10.1109/ISSRE.2000.885876
   *LOCKH MART CORP I, 1998, PACS TEST PLAN
   *LOCKH MART CORP I, 1998, PACS SOURC COD
   *LOCKH MART CORP I, 1998, PACS REQ SPEC
   *LOCKH MART CORP I, 1998, PACS DES SPEC
   Lyu M.R., 1995, HDB SOFTWARE RELIABI
   *MECR INT CORP, 2001, WINR TSL REF GUID
   Mendonça MG, 2000, IEEE T SOFTWARE ENG, V26, P484, DOI 10.1109/32.852739
   Moller K.-H., 1993, SOFTWARE METRICS PRA
   Mosleh A., 1987, NUREGCR4962
   Musa J. D., 1987, Software Reliability: Measure-ment, Prediction, Application
   PUTNAM LH, 1979, DATAMATION, V25, P171
   RAMAMOORTHY CV, 1982, IEEE T SOFTWARE ENG, V8, P354, DOI 10.1109/TSE.1982.235728
   SAATY TL, 1977, J MATH PSYCHOL, V15, P234, DOI 10.1016/0022-2496(77)90033-5
   Shepperd M., 1993, DERIVATION VALIDATIO
   SMIDTS C, 2000, NUREGGR0019 U MAR
   SMIDTS C, 2002, UMDRE200207 U MAR
   *TER SOFTW SYST, 2000, TESTM REF GUID
   *TER SOFTW SYST, 2000, TESTM US MAN
   TVERSKY A, 1974, SCIENCE, V185, P1124, DOI 10.1126/science.185.4157.1124
   *US NUCL REG COMM, 1989, NUREG1150 US NUCL RE
   Wheeler T. A., 1989, NUREGCR4550 SAND NAT
   Wohlin C, 2000, INFORM SOFTWARE TECH, V42, P983, DOI 10.1016/S0950-5849(00)00150-6
   Zhang XM, 2000, J SYST SOFTWARE, V50, P43, DOI 10.1016/S0164-1212(99)00075-8
   1974, TOEKOMSTONDERZOE S10
NR 41
TC 59
Z9 68
U1 0
U2 6
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD SEP
PY 2003
VL 29
IS 9
BP 811
EP 824
DI 10.1109/TSE.2003.1232286
PG 14
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 719EY
UT WOS:000185191700004
DA 2024-07-18
ER

PT J
AU Sherman, AT
   McGrew, DA
AF Sherman, AT
   McGrew, DA
TI Key establishment in large dynamic groups using one-way function trees
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE broadcast encryption; conference keying; cryptography; cryptographic
   protocols; Dynamic Cryptographic Context; Management (DCCM) Project;
   group keying; key agreement; key establishment; key management; logical
   key hierarchy (LKH); one-way functions; one-way function chain (OFC);
   one-way function tree (OFT); secure conferences; secure group
   applications
AB We present, implement, and analyze a new scalable centralized algorithm, called OFT, for establishing shared cryptographic keys in large, dynamically changing groups. Our algorithm is based on a novel application of one-way function trees. In comparison with the top-down logical key hierarchy (LKH) method of Wallner et al., our bottom-up algorithm approximately halves the number of bits that need to be broadcast to members in order to rekey after a member is added or evicted. The number of keys stored by group members, the number of keys broadcast to the group when new members are added or evicted, and the computational efforts of group members, are logarithmic in the number of group members.. Among the hierarchical methods, OFT is the first to achieve an approximate halving in broadcast length, an idea on which subsequent algorithms have built. Our algorithm provides complete forward and backward Security: Newly admitted group members cannot read previous messages, and evicted members cannot read future messages, even with, collusion by arbitrarily many evicted members. In addition, and unlike LKH, our algorithm has the option of being member contributory in that members can be allowed to contribute entropy to the group key. Running on a Pentium II, our prototype has handled groups with up to 10 million members. This algorithm offers a new scalable method for establishing group session keys for secure large-group applications such as broadcast encryption, electronic conferences, multicast sessions, and military command and control.
C1 Univ Maryland Baltimore Cty, Dept Comp Sci & Elect Engn, Baltimore, MD 21250 USA.
   Cisco Syst Inc, San Jose, CA 95134 USA.
C3 University System of Maryland; University of Maryland Baltimore County;
   Cisco Systems Inc
RP Univ Maryland Baltimore Cty, Dept Comp Sci & Elect Engn, 1000 Hilltop Cir, Baltimore, MD 21250 USA.
EM sherman@umbc.edu; mcgrew@cisco.com
RI Sherman, Alan Theodore/AAN-3004-2021
CR Alves-Foss J., 2000, P 23 NAT INF SYST SE, P254
   Amir Y, 2000, DSN 2000: INTERNATIONAL CONFERENCE ON DEPENDABLE SYSTEMS AND NETWORKS, PROCEEDINGS, P327, DOI 10.1109/ICDSN.2000.857557
   [Anonymous], 0755 TIS LABS NETW A
   [Anonymous], 1993, P 13 ANN INT CRYPT C
   [Anonymous], ANN INT CRYPT C
   [Anonymous], 1992, RFC1321
   [Anonymous], 2401 RFC INT ENG TAS
   [Anonymous], 1994, P EUROCRYPT
   Ateniese G., 1998, 5th ACM Conference on Computer and Communications Security, P17, DOI 10.1145/288090.288097
   Balenson D., 2000, Key Management for Large Dynamic Groups: One-Way Function Trees and Amortized Initialization
   Balenson D.M., 1998, ADV SECURITY RES J N, V1, P27
   BALENSON DM, 1998, 0709 TIS LAB NETW AS
   BALLARDIE A, 1996, 1949 RFC ITN ENG TAK
   BALLARDIE A, 1997, 2201 RFC ITN ENG TAS
   BERSON T, 2001, UNPUB XEROX PARC
   BRISCOE B, 1999, MARKS ZERO SIDE EFFE
   Burmester M., 1997, Security Protocols. International Workshop Proceedings, P119
   Canetti R, 1999, LECT NOTES COMPUT SC, V1592, P459
   CANETTI R, 1998, UNPUB TAXONOMY MULTI
   CANETTI R, 1999, P IEEE INFOCOM 99
   CARONNI G, 1998, P 7 WORKSH EN TECHN
   CHANG I, 1999, P IEEE INFOCOM 99
   Chor B., 1994, Advances in Cryptology - CRYPTO '94. 14th Annual International Cryptology Conference. Proceedings, P257
   DINSMORE P, 2000, P DARPA INF SURV C E, P64
   FIAT A, 1993, ADV CRYPTOLOGY, P481
   FLAJOLET P, 1989, ADV CRYPTOLOGY EUROC, P329
   HARKINS D, 1998, UNPUB SECURE SCALABL
   HARKINS D, 1998, UNPUB INTERNET KEY E
   Harney H, 1997, GROUP KEY MANAGEMENT
   HARNEY H, 1999, UNPUB LOGICAL KEY HI
   HARNEY H, 1999, UNPUB MULTICAST SECU
   HARNEY H, 1999, UNPUB GROUP SECURE A
   Harney H., 1997, 2093 RFC INT ENG TAS
   KIM Y, 2000, P ACM C COMP COMM SE
   KIM Y, 2001, COMMUNICATION EFFICI
   KUROSAWA K, 1998, UNPUB OPTIMUM TRAITO
   LOTSPIECH J, 2001, UNPUB SUBSET DIFFERE
   MENEZES A, 1997, HDB APPL CRYPTOLOGRA
   Merkle R. C., 1979, 19791 STANF U INF SY
   MOYER M, 1999, UNPUB MAINTAINING BA
   Naor D., 2001, Advances in Cryptology - CRTPTO 2001. 21st Annual International Cryptology Conference, Proceedings (Lecture Notes in Computer Science Vol.2139), P41
   Perrig A, 2001, P IEEE S SECUR PRIV, P247, DOI 10.1109/SECPRI.2001.924302
   Poovendran R., 1999, Advances in Cryptology - CRYPTO'99. 19th Annual International Cryptology Conference. Proceedings, P624
   RAFAELI S, 2002, UNPUB LKHPLUS2 IMPRO
   RODEH O, 2002, INT J INFORMATION SE, V1, P94
   SELCUK A, 2000, UNPUB PROBABILISTIC
   SELCUK A, 2000, P 3 INT WORKSH INF S, P179
   SHERMAN AT, 2002, 02017 NAI LABS NETW
   SHERMAN AT, 1998, 0754 TIS
   SHERMAN AT, 1997, COMMUNICATION    NOV
   SHERMAN AT, 2002, 02043D NAI LABS NETW
   STADDON JN, 1997, THESIS U CALIFORNIA
   Steiner M., 1996, P 3 ACM C COMP COMM
   STEINER M, 1997, 2984 IBM RZ
   *US DEPT COMM, 1995, FIPS PUBL, V1801
   VISWANATHAN V, 1996, THESIS U WISCONSIN M
   WALLNER DM, 1998, UNPUB KEY MANAGEMENT
   Wong C., 1998, ACM SIGCOMM 98, P68
   WONG CK, 1997, TR9723 U TEX AUST DE
   YANG RY, 2001, P SIGCOMM 01, P27
NR 60
TC 312
Z9 362
U1 1
U2 11
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD MAY
PY 2003
VL 29
IS 5
BP 444
EP 458
DI 10.1109/TSE.2003.1199073
PG 15
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 675HM
UT WOS:000182688000005
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Manzoni, LV
   Price, RT
AF Manzoni, LV
   Price, RT
TI Identifying extensions required by RUP (Rational Unified Process) to
   comply with CMM (Capability Maturity Model) levels 2 and 3
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Capability Maturity Model; CMM; process assessment model; Rational
   Unified Process; RUP; software process; software quality; Unified
   Modeling Language; UML
ID SOFTWARE
AB This paper describes an assessment of the Rational Unified Process (RUP) based on the Capability Maturity Model (CMM). For each key practice (KP) identified in each key process area ( KPA) of CMM levels 2 and 3, the Rational Unified Process was assessed to determine whether it satisfied the KP or not. For each KPA, the percentage of the key practices supported was calculated, and the results were tabulated. The report includes considerations about the coverage of each key process area, describing the highlights of,the Rational Unified Process regarding its support for CMM levels 2 and 3, and suggests where an organization using it will need to complement it to conform to CMM. The assessment resulted in the elaboration of proposals to enhance the Rational Unified Process in order to satisfy the key process areas of CMM. Some of these are briefly described in this article.
C1 Univ Fed Rio Grande do Sul, BR-90046900 Porto Alegre, RS, Brazil.
   TeleNova Comms, Miami, FL 33132 USA.
C3 Universidade Federal do Rio Grande do Sul
EM lisandra.manzoni@serpro.gov.br; tomprice@inf.ufrgs.br
CR ALCANTARA AA, 1999, P 6 WORKSH QUAL SOFT, P60
   [Anonymous], 1992, Object Oriented Software Engineering: A Use Case Driven Approach
   [Anonymous], 2000, RATIONAL UNIFIED PRO
   APRIL A, 1995, P 2 IEEE SOFTW ENG S
   Boegh J, 1999, IEEE SOFTWARE, V16, P69, DOI 10.1109/52.754056
   Booch G., 2007, Object-Oriented Analysis and Design with Applications, Vthird
   Booch Grady, 1999, UNIFIED MODELING LAN, DOI DOI 10.1007/3-540-40011-7_10
   *CMMI PROD TEAM, 2002, CMUSEI2002TR011 CMMI
   Fitzgerald B, 1999, IEEE SOFTWARE, V16, P37, DOI 10.1109/52.765785
   Fuggetta A., 2000, P C LIM IR FUT SOFTW, P25, DOI DOI 10.1145/336512.336521
   Ginsberg M., 1995, CMUSEI94TR024
   HAASE V, 1994, IEEE SOFTWARE, V11, P25, DOI 10.1109/52.300080
   Henderson-Sellers B, 2000, SEVENTH ASIA-PACIFIC SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P428, DOI 10.1109/APSEC.2000.896730
   Henderson-Sellers B, 2001, INFORM SOFTWARE TECH, V43, P705, DOI 10.1016/S0950-5849(01)00180-X
   HERBSLEB J, 1994, CMMSEI94TR13 CARN ME
   Hull MEC, 2002, INFORM SOFTWARE TECH, V44, P1, DOI 10.1016/S0950-5849(01)00158-6
   *INT STAND ORG, 1991, 90003 ISO
   *INT STAND ORG, 1995, 12207 ISOIEC
   *INT STAND ORG, 1998, 15504 ISOIEC
   Jacobson I., 1998, UNIFIED SOFTWARE DEV
   MANZONI LV, 2001, THESIS FEDERAL U RIO
   MCGUIRE EG, 1998, P 29 ANN HAW INT C S, P713
   PAULK M, 1996, P 6 INT C SOFTW QUAL, P226
   Paulk Mark., 1993, Encyclopedia of Software Engineering
   PAULK MC, 1993, CMUSEI93TR25
   *PROJ MAN I INC, 2000, GUID PROJ MAN BOD KN
   *RAT SOFTW CORP, 2001, RAT UN PROC VERS 200
   *RAT SOFTW CORP, 1999, RAT UN PROC VERS 5 5
   Rational Software Corporation, 1998, RAT UN PROC BEST PRA
   Rational Software Corporation, 2000, ISOIEC155045 RAT SOF
   Reitzig R. W, 2002, ACHIEVING CAPABILITY
   Rumbaugh J., 1991, OBJECT ORIENTED MODE
   SMITH J, 2000, REACHING CMM LEVEL 2
NR 33
TC 20
Z9 26
U1 1
U2 12
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD FEB
PY 2003
VL 29
IS 2
BP 181
EP 192
DI 10.1109/TSE.2003.1178058
PG 12
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Engineering
GA 644EB
UT WOS:000180904000007
OA Green Published
DA 2024-07-18
ER

EF